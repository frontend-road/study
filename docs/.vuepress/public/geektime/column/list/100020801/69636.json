{"id":69636,"title":"05 | 深入浅出索引（下）","content":"<p>在上一篇文章中，我和你介绍了InnoDB索引的数据结构模型，今天我们再继续聊聊跟MySQL索引有关的概念。</p><p>在开始这篇文章之前，我们先来看一下这个问题：</p><p>在下面这个表T中，如果我执行 select * from T where k between 3 and 5，需要执行几次树的搜索操作，会扫描多少行？</p><p>下面是这个表的初始化语句。</p><pre><code>mysql&gt; create table T (\nID int primary key,\nk int NOT NULL DEFAULT 0, \ns varchar(16) NOT NULL DEFAULT '',\nindex k(k))\nengine=InnoDB;\n\ninsert into T values(100,1, 'aa'),(200,2,'bb'),(300,3,'cc'),(500,5,'ee'),(600,6,'ff'),(700,7,'gg');\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/dc/8d/dcda101051f28502bd5c4402b292e38d.png?wh=1142*856\" alt=\"\"></p><center><span class=\"reference\">图1 InnoDB的索引组织结构</span></center><p>现在，我们一起来看看这条SQL查询语句的执行流程：</p><ol>\n<li>\n<p>在k索引树上找到k=3的记录，取得 ID = 300；</p>\n</li>\n<li>\n<p>再到ID索引树查到ID=300对应的R3；</p>\n</li>\n<li>\n<p>在k索引树取下一个值k=5，取得ID=500；</p>\n</li>\n<li>\n<p>再回到ID索引树查到ID=500对应的R4；</p>\n</li>\n<li>\n<p>在k索引树取下一个值k=6，不满足条件，循环结束。</p>\n</li>\n</ol><p>在这个过程中，<strong>回到主键索引树搜索的过程，我们称为回表</strong>。可以看到，这个查询过程读了k索引树的3条记录（步骤1、3和5），回表了两次（步骤2和4）。</p><p>在这个例子中，由于查询结果所需要的数据只在主键索引上有，所以不得不回表。那么，有没有可能经过索引优化，避免回表过程呢？</p><h1>覆盖索引</h1><p>如果执行的语句是select ID from T where k between 3 and 5，这时只需要查ID的值，而ID的值已经在k索引树上了，因此可以直接提供查询结果，不需要回表。也就是说，在这个查询里面，索引k已经“覆盖了”我们的查询需求，我们称为覆盖索引。</p><!-- [[[read_end]]] --><p><strong>由于覆盖索引可以减少树的搜索次数，显著提升查询性能，所以使用覆盖索引是一个常用的性能优化手段。</strong></p><p>需要注意的是，在引擎内部使用覆盖索引在索引k上其实读了三个记录，R3~R5（对应的索引k上的记录项），但是对于MySQL的Server层来说，它就是找引擎拿到了两条记录，因此MySQL认为扫描行数是2。</p><blockquote>\n<p>备注：关于如何查看扫描行数的问题，我将会在第16文章《如何正确地显示随机消息？》中，和你详细讨论。</p>\n</blockquote><p>基于上面覆盖索引的说明，我们来讨论一个问题：<strong>在一个市民信息表上，是否有必要将身份证号和名字建立联合索引？</strong></p><p>假设这个市民表的定义是这样的：</p><pre><code>CREATE TABLE `tuser` (\n  `id` int(11) NOT NULL,\n  `id_card` varchar(32) DEFAULT NULL,\n  `name` varchar(32) DEFAULT NULL,\n  `age` int(11) DEFAULT NULL,\n  `ismale` tinyint(1) DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  KEY `id_card` (`id_card`),\n  KEY `name_age` (`name`,`age`)\n) ENGINE=InnoDB\n</code></pre><p>我们知道，身份证号是市民的唯一标识。也就是说，如果有根据身份证号查询市民信息的需求，我们只要在身份证号字段上建立索引就够了。而再建立一个（身份证号、姓名）的联合索引，是不是浪费空间？</p><p>如果现在有一个高频请求，要根据市民的身份证号查询他的姓名，这个联合索引就有意义了。它可以在这个高频请求上用到覆盖索引，不再需要回表查整行记录，减少语句的执行时间。</p><p>当然，索引字段的维护总是有代价的。因此，在建立冗余索引来支持覆盖索引时就需要权衡考虑了。这正是业务DBA，或者称为业务数据架构师的工作。</p><h1>最左前缀原则</h1><p>看到这里你一定有一个疑问，如果为每一种查询都设计一个索引，索引是不是太多了。如果我现在要按照市民的身份证号去查他的家庭地址呢？虽然这个查询需求在业务中出现的概率不高，但总不能让它走全表扫描吧？反过来说，单独为一个不频繁的请求创建一个（身份证号，地址）的索引又感觉有点浪费。应该怎么做呢？</p><p>这里，我先和你说结论吧。<strong>B+树这种索引结构，可以利用索引的“最左前缀”，来定位记录。</strong></p><p>为了直观地说明这个概念，我们用（name，age）这个联合索引来分析。</p><p><img src=\"https://static001.geekbang.org/resource/image/89/70/89f74c631110cfbc83298ef27dcd6370.jpg?wh=1142*818\" alt=\"\"></p><center><span class=\"reference\">图2 （name，age）索引示意图</span></center><p>可以看到，索引项是按照索引定义里面出现的字段顺序排序的。</p><p>当你的逻辑需求是查到所有名字是“张三”的人时，可以快速定位到ID4，然后向后遍历得到所有需要的结果。</p><p>如果你要查的是所有名字第一个字是“张”的人，你的SQL语句的条件是\"where name like ‘张%’\"。这时，你也能够用上这个索引，查找到第一个符合条件的记录是ID3，然后向后遍历，直到不满足条件为止。</p><p>可以看到，不只是索引的全部定义，只要满足最左前缀，就可以利用索引来加速检索。这个最左前缀可以是联合索引的最左N个字段，也可以是字符串索引的最左M个字符。</p><p>基于上面对最左前缀索引的说明，我们来讨论一个问题：<strong>在建立联合索引的时候，如何安排索引内的字段顺序。</strong></p><p>这里我们的评估标准是，索引的复用能力。因为可以支持最左前缀，所以当已经有了(a,b)这个联合索引后，一般就不需要单独在a上建立索引了。因此，<strong>第一原则是，如果通过调整顺序，可以少维护一个索引，那么这个顺序往往就是需要优先考虑采用的。</strong></p><p>所以现在你知道了，这段开头的问题里，我们要为高频请求创建(身份证号，姓名）这个联合索引，并用这个索引支持“根据身份证号查询地址”的需求。</p><p>那么，如果既有联合查询，又有基于a、b各自的查询呢？查询条件里面只有b的语句，是无法使用(a,b)这个联合索引的，这时候你不得不维护另外一个索引，也就是说你需要同时维护(a,b)、(b) 这两个索引。</p><p>这时候，我们要<strong>考虑的原则就是空间</strong>了。比如上面这个市民表的情况，name字段是比age字段大的 ，那我就建议你创建一个（name,age)的联合索引和一个(age)的单字段索引。</p><h1>索引下推</h1><p>上一段我们说到满足最左前缀原则的时候，最左前缀可以用于在索引中定位记录。这时，你可能要问，那些不符合最左前缀的部分，会怎么样呢？</p><p>我们还是以市民表的联合索引（name, age）为例。如果现在有一个需求：检索出表中“名字第一个字是张，而且年龄是10岁的所有男孩”。那么，SQL语句是这么写的：</p><pre><code>mysql&gt; select * from tuser where name like '张%' and age=10 and ismale=1;\n</code></pre><p>你已经知道了前缀索引规则，所以这个语句在搜索索引树的时候，只能用 “张”，找到第一个满足条件的记录ID3。当然，这还不错，总比全表扫描要好。</p><p>然后呢？</p><p>当然是判断其他条件是否满足。</p><p>在MySQL 5.6之前，只能从ID3开始一个个回表。到主键索引上找出数据行，再对比字段值。</p><p>而MySQL 5.6 引入的索引下推优化（index condition pushdown)， 可以在索引遍历过程中，对索引中包含的字段先做判断，直接过滤掉不满足条件的记录，减少回表次数。</p><p>图3和图4，是这两个过程的执行流程图。</p><p><img src=\"https://static001.geekbang.org/resource/image/b3/ac/b32aa8b1f75611e0759e52f5915539ac.jpg?wh=1142*833\" alt=\"\"></p><center><span class=\"reference\">图3 无索引下推执行流程</span></center><p><img src=\"https://static001.geekbang.org/resource/image/76/1b/76e385f3df5a694cc4238c7b65acfe1b.jpg?wh=1142*856\" alt=\"\"></p><center><span class=\"reference\">图4 索引下推执行流程</span></center><p>在图3和4这两个图里面，每一个虚线箭头表示回表一次。</p><p>图3中，在(name,age)索引里面我特意去掉了age的值，这个过程InnoDB并不会去看age的值，只是按顺序把“name第一个字是’张’”的记录一条条取出来回表。因此，需要回表4次。</p><p>图4跟图3的区别是，InnoDB在(name,age)索引内部就判断了age是否等于10，对于不等于10的记录，直接判断并跳过。在我们的这个例子中，只需要对ID4、ID5这两条记录回表取数据判断，就只需要回表2次。</p><h1>小结</h1><p>今天这篇文章，我和你继续讨论了数据库索引的概念，包括了覆盖索引、前缀索引、索引下推。你可以看到，在满足语句需求的情况下， 尽量少地访问资源是数据库设计的重要原则之一。我们在使用数据库的时候，尤其是在设计表结构时，也要以减少资源消耗作为目标。</p><p>接下来我给你留下一个问题吧。</p><p>实际上主键索引也是可以使用多个字段的。DBA小吕在入职新公司的时候，就发现自己接手维护的库里面，有这么一个表，表结构定义类似这样的：</p><pre><code>CREATE TABLE `geek` (\n  `a` int(11) NOT NULL,\n  `b` int(11) NOT NULL,\n  `c` int(11) NOT NULL,\n  `d` int(11) NOT NULL,\n  PRIMARY KEY (`a`,`b`),\n  KEY `c` (`c`),\n  KEY `ca` (`c`,`a`),\n  KEY `cb` (`c`,`b`)\n) ENGINE=InnoDB;\n</code></pre><p>公司的同事告诉他说，由于历史原因，这个表需要a、b做联合主键，这个小吕理解了。</p><p>但是，学过本章内容的小吕又纳闷了，既然主键包含了a、b这两个字段，那意味着单独在字段c上创建一个索引，就已经包含了三个字段了呀，为什么要创建“ca”“cb”这两个索引？</p><p>同事告诉他，是因为他们的业务里面有这样的两种语句：</p><pre><code>select * from geek where c=N order by a limit 1;\nselect * from geek where c=N order by b limit 1;\n</code></pre><p>我给你的问题是，这位同事的解释对吗，为了这两个查询模式，这两个索引是否都是必须的？为什么呢？</p><p>你可以把你的思考和观点写在留言区里，我会在下一篇文章的末尾和你讨论这个问题。感谢你的收听，也欢迎你把这篇文章分享给更多的朋友一起阅读。</p><h1>上期问题时间</h1><p>上期的问题是，通过两个alter 语句重建索引k，以及通过两个alter语句重建主键索引是否合理。</p><p>在评论区，有同学问到为什么要重建索引。我们文章里面有提到，索引可能因为删除，或者页分裂等原因，导致数据页有空洞，重建索引的过程会创建一个新的索引，把数据按顺序插入，这样页面的利用率最高，也就是索引更紧凑、更省空间。</p><p>这道题目，我给你的“参考答案”是：</p><p>重建索引k的做法是合理的，可以达到省空间的目的。但是，重建主键的过程不合理。不论是删除主键还是创建主键，都会将整个表重建。所以连着执行这两个语句的话，第一个语句就白做了。这两个语句，你可以用这个语句代替 ： alter table T engine=InnoDB。在专栏的第12篇文章《为什么表数据删掉一半，表文件大小不变？》中，我会和你分析这条语句的执行流程。</p><p>评论区留言中， @壹笙☞漂泊 做了很详细的笔记，@高枕 帮同学解答了问题，@约书亚 提了一个很不错的面试问题。在这里，我要和你们道一声感谢。</p><p>PS：如果你在面试中，曾有过被MySQL相关问题难住的经历，也可以把这个问题发到评论区，我们一起来讨论。如果解答这个问题，需要的篇幅会很长的话，我可以放到答疑文章展开。</p>","comments":[{"had_liked":false,"id":42699,"user_name":"我来也","can_delete":false,"product_type":"c1","uid":1205253,"ip_address":"","ucode":"773D6104F56767","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","comment_is_top":true,"comment_ctime":1543023255,"is_pvip":false,"replies":[{"id":"15307","content":"😄确实例子都是血泪史，有些是我的血泪、有些是帮助人擦眼泪💧<br><br>也鼓励大家把平时碰到的问题提出来，大家一起未雨绸缪🤝","user_name":"作者回复","comment_id":42699,"uid":"1264162","ip_address":"","utype":1,"ctime":1543042503,"user_name_real":"林晓斌"}],"discussion_count":67,"race_medal":0,"score":"9.2233752896880005e+18","product_id":100020801,"comment_content":"老师的每一篇都会讲到平常工作用遇到的事情. 这个专栏真的很值.<br>今天这个 alter table T engine=InnoDB 让我想到了我们线上的一个表, 记录日志用的, 会定期删除过早之前的数据. 最后这个表实际内容的大小才10G, 而他的索引却有30G. 在阿里云控制面板上看,就是占了40G空间. 这可花的是真金白银啊.<br>后来了解到是 InnoDB 这种引擎导致的,虽然删除了表的部分记录,但是它的索引还在, 并未释放.<br>只能是重新建表才能重建索引.<br>如果当时看到了这个专栏,把这个语句拿来用,就可以省下不少钱了.","like_count":757,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430165,"discussion_content":"😄确实例子都是血泪史，有些是我的血泪、有些是帮助人擦眼泪💧\n\n也鼓励大家把平时碰到的问题提出来，大家一起未雨绸缪🤝","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543042503,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1625914,"avatar":"https://static001.geekbang.org/account/avatar/00/18/cf/3a/ba5b4375.jpg","nickname":"小刘","note":"","ucode":"8017FB710CCB09","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":536021,"discussion_content":"在线上库直接执行alter table T engine=InnoDB对性能损耗大吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638631897,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":430165,"ip_address":""},"score":536021,"extra":""}]},{"author":{"id":1250993,"avatar":"https://static001.geekbang.org/account/avatar/00/13/16/b1/79229fe4.jpg","nickname":"刘彦宏","note":"","ucode":"CAFAFAE979F6D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292060,"discussion_content":"记录日志的表最好是分区表，历史数据清理可以直接drop分区","likes_number":25,"is_delete":false,"is_hidden":false,"ctime":1595066037,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1250993,"avatar":"https://static001.geekbang.org/account/avatar/00/13/16/b1/79229fe4.jpg","nickname":"刘彦宏","note":"","ucode":"CAFAFAE979F6D9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292071,"discussion_content":"是的，你这个建议好。\n之前不是因为没经验嘛，接手时就已经是这个样子了。","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1595072128,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":292060,"ip_address":""},"score":292071,"extra":""},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1250993,"avatar":"https://static001.geekbang.org/account/avatar/00/13/16/b1/79229fe4.jpg","nickname":"刘彦宏","note":"","ucode":"CAFAFAE979F6D9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341506,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610440011,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":292060,"ip_address":""},"score":341506,"extra":""},{"author":{"id":1112210,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/92/eaafff96.jpg","nickname":"Amos","note":"","ucode":"61DB72D99AF9EA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1250993,"avatar":"https://static001.geekbang.org/account/avatar/00/13/16/b1/79229fe4.jpg","nickname":"刘彦宏","note":"","ucode":"CAFAFAE979F6D9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350152,"discussion_content":"什么意思？没看懂，求详解。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1613727052,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":292060,"ip_address":""},"score":350152,"extra":""}]},{"author":{"id":1005164,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/56/6c/6e2fd5df.jpg","nickname":"Alan","note":"","ucode":"AB242424C998DC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":29098,"discussion_content":"删除数据记录，为啥索引记录不删除呢？，还是索引记录由于索引节点删除出现了很多页空洞，实际上也空洞也还是会占据存储\n空间","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1570726878,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1463873,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIO2hQgGGq9htCBJNNAMH33VFvCBicwOjwCVXTg3WxYBkI3of3ibfQWib4ibF8m2y9vORT5mSibuqw5LNA/132","nickname":"带头大哥","note":"","ucode":"DA49D606C1E6DF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1005164,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/56/6c/6e2fd5df.jpg","nickname":"Alan","note":"","ucode":"AB242424C998DC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":141367,"discussion_content":"我觉得是删除数据的同时索引也删除了，但是引起了页里面的空洞，alter table T engine=InnoDB是重建索引去掉空洞的操作","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1579416058,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":29098,"ip_address":""},"score":141367,"extra":""},{"author":{"id":1335293,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKR3ibELhjgVicCNShZCBwvaDxibnzibggG4wUzVkS2mkDxUBZyIs87nDEdJ7PiahJBVoZcuhQ84RxAziag/132","nickname":"周治慧","note":"","ucode":"7D56C4E66BEE17","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1463873,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIO2hQgGGq9htCBJNNAMH33VFvCBicwOjwCVXTg3WxYBkI3of3ibfQWib4ibF8m2y9vORT5mSibuqw5LNA/132","nickname":"带头大哥","note":"","ucode":"DA49D606C1E6DF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":179599,"discussion_content":"删除数据的时候,当前删除索引被标记为被删除,改索引位置则可以被空间复用,当一页数据都被删除时页可以被复用,空间被复用但是磁盘系统表空间是未改变的,需要通过重建表,重建表的逻辑对数据紧凑排列来保存到临时文件中也就是online的逻辑对server端来说就是inplace逻辑","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1582243926,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":141367,"ip_address":""},"score":179599,"extra":""}]},{"author":{"id":1787062,"avatar":"","nickname":"Geek_3e2a27","note":"","ucode":"B2C8CFFFE0238A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":87012,"discussion_content":"我去，我都是半夜copy下表，删表，改表名","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1576637559,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1787062,"avatar":"","nickname":"Geek_3e2a27","note":"","ucode":"B2C8CFFFE0238A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":87251,"discussion_content":"如果表不是特别大，应该是可以按你说的这么搞。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576655383,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":87012,"ip_address":""},"score":87251,"extra":""},{"author":{"id":1158349,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ac/cd/fda6374f.jpg","nickname":"Louis","note":"","ucode":"BC667839F17937","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1787062,"avatar":"","nickname":"Geek_3e2a27","note":"","ucode":"B2C8CFFFE0238A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":277175,"discussion_content":"mysql官方就是这么建议的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1591012986,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":87012,"ip_address":""},"score":277175,"extra":""},{"author":{"id":1641326,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJDdmHm6txEVtEXEDibSdIsRLEpghOoMt2kfZHetY9QLWHygicKCfhVoYiaylAZJoXbcCMBhXqMF4icgw/132","nickname":"洗洗睡吧","note":"","ucode":"DE7F8B4CA512F6","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1787062,"avatar":"","nickname":"Geek_3e2a27","note":"","ucode":"B2C8CFFFE0238A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387532,"discussion_content":"dopy期间的新数据怎么处理？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1628235810,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":87012,"ip_address":""},"score":387532,"extra":""}]},{"author":{"id":1721251,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/43/a3/53f7f1fe.jpg","nickname":"唯有学习不止","note":"","ucode":"52DA78BBEC4D38","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554661,"discussion_content":"我做过类似需求，删除半年前的所有日志，发现一个表要删的日志是要保留的10倍，要删掉80w，保留才不到8w，十个表差不多都这样，然后发现删除速度贼慢，后来换了个思路，把不删掉数据拷贝到一个临时表，再drop掉原来的表，把临时表再改成正式表，然后就快了很多；想来批量删除的时候也有维护索引消耗的性能","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1646539363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1056406,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1e/96/3162d51f.jpg","nickname":"雨天","note":"","ucode":"FD9FB404ECA463","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36182,"discussion_content":"删除数据应该索引也会删除吧;@Alan 所说只是删除对应索引,然后导致页空洞;不然如果在索引树做不需要回表查询,就能把已经删除的数据也查询出来了.","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1571327960,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2029485,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f7/ad/4fd4d867.jpg","nickname":"数学汤家凤","note":"","ucode":"DE84E777C384AD","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292021,"discussion_content":"mark","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1595053556,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1336634,"avatar":"https://static001.geekbang.org/account/avatar/00/14/65/3a/bc801fb2.jpg","nickname":"mqray","note":"","ucode":"15664507AD7033","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2029485,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f7/ad/4fd4d867.jpg","nickname":"数学汤家凤","note":"","ucode":"DE84E777C384AD","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":300876,"discussion_content":"卧槽 惊现汤老师 老哥这个马甲牛批","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598285703,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":292021,"ip_address":""},"score":300876,"extra":""},{"author":{"id":2007786,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/a2/ea/8f913dfa.jpg","nickname":"吃猫的鱼","note":"","ucode":"DC15372C47A0CD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2029485,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f7/ad/4fd4d867.jpg","nickname":"数学汤家凤","note":"","ucode":"DE84E777C384AD","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":313040,"discussion_content":"这个马甲我慕了","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1602921207,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":292021,"ip_address":""},"score":313040,"extra":""}]},{"author":{"id":1795793,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/zxkns28cIAUZIt3WjDb8G26qiccT84d9GMr9ZpbYR60TU1ibqSj9NoYVHlJvGF1kOltkqNDmEfJCqPuYVkue3WHg/132","nickname":"Geek_55e386","note":"","ucode":"5A727F1323C2D0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556768,"discussion_content":"回表为什么不能批量呢. 每次一条数据回表一次不是很耗费资源吗","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1647505409,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2129573,"avatar":"","nickname":"小亿网络5","note":"","ucode":"850C124E4F2B0F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328686,"discussion_content":"这个我可以理解的是,虽然定期删除了之前的大量旧数据,但是这些数据占用的索引在占着磁盘空间吗","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1606209500,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2129573,"avatar":"","nickname":"小亿网络5","note":"","ucode":"850C124E4F2B0F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328773,"discussion_content":"是的，虽然删除了数据，但索引的空间还占着在。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606225668,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":328686,"ip_address":""},"score":328773,"extra":""}]},{"author":{"id":1617369,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/FqWrN8aNrlXEfo2YeDeCRuWMZ57VzsNC0aibkEIdiaNBdUVPjlBXrg9F4Eb8uMFYckuSgmXQ49vT6SHoicAjeEGdA/132","nickname":"Geek_558387","note":"","ucode":"2EA857EBC365B5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327832,"discussion_content":"这里哪讲你说的那些乱七八糟得了","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1605964502,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1647345,"avatar":"https://static001.geekbang.org/account/avatar/00/19/22/f1/11d1f383.jpg","nickname":"疯情","note":"","ucode":"785237367A9B33","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1617369,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/FqWrN8aNrlXEfo2YeDeCRuWMZ57VzsNC0aibkEIdiaNBdUVPjlBXrg9F4Eb8uMFYckuSgmXQ49vT6SHoicAjeEGdA/132","nickname":"Geek_558387","note":"","ucode":"2EA857EBC365B5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336439,"discussion_content":"他看的第13章然后在这里评论，服了🤣","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1608596320,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":327832,"ip_address":""},"score":336439,"extra":""},{"author":{"id":2357964,"avatar":"https://static001.geekbang.org/account/avatar/00/23/fa/cc/d4b3ce87.jpg","nickname":"秃如其来","note":"","ucode":"9130CE773F31B3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1647345,"avatar":"https://static001.geekbang.org/account/avatar/00/19/22/f1/11d1f383.jpg","nickname":"疯情","note":"","ucode":"785237367A9B33","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381132,"discussion_content":"我还以为我看了个假的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624926069,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":336439,"ip_address":""},"score":381132,"extra":""},{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1617369,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/FqWrN8aNrlXEfo2YeDeCRuWMZ57VzsNC0aibkEIdiaNBdUVPjlBXrg9F4Eb8uMFYckuSgmXQ49vT6SHoicAjeEGdA/132","nickname":"Geek_558387","note":"","ucode":"2EA857EBC365B5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555251,"discussion_content":"你跟我看的是同一个专栏么？😁\n\n这个文章的结尾，有这一句话原话：\n这两个语句，你可以用这个语句代替 ： alter table T engine=InnoDB。在专栏的第 12 篇文章《为什么表数据删掉一半，表文件大小不变？》中，我会和你分析这条语句的执行流程。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646822326,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":327832,"ip_address":""},"score":555251,"extra":""}]},{"author":{"id":1965699,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/fe/83/df562574.jpg","nickname":"慎独明强","note":"","ucode":"DC2F7F2C0C8F60","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300694,"discussion_content":"这应该说的是磁盘碎片吧，在阿里云控制台硬盘分析可以看到表的数据大小和内存数据大小，在加字段，加索引，或者重建表结构都会去整理磁盘碎片，自己刚好经历过","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1598234147,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1965699,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/fe/83/df562574.jpg","nickname":"慎独明强","note":"","ucode":"DC2F7F2C0C8F60","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300698,"discussion_content":"以前，mysql数据库是没有默认开启`innodb_file_per_table`选项的，但现在的新版本，这早就是一个默认配置了。\n\n只有开启了这个，后面的磁盘整理才有点意义。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1598235341,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":300694,"ip_address":""},"score":300698,"extra":""},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341444,"discussion_content":"赞！innodb_file_per_table`选项","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1610421930,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":300698,"ip_address":""},"score":341444,"extra":""}]},{"author":{"id":1542363,"avatar":"https://static001.geekbang.org/account/avatar/00/17/88/db/adad4661.jpg","nickname":"极客中心","note":"","ucode":"F1CE36E3E47A3C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":229005,"discussion_content":"删除索引不可以吗？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1586601072,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1309484,"avatar":"https://static001.geekbang.org/account/avatar/00/13/fb/2c/8c37a254.jpg","nickname":"打人不打脸","note":"","ucode":"95D94EB72DF5A8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566333,"discussion_content":"我们有个业务表二十多个索引，索引空间是数据的两倍😂😂","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1650645357,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1240168,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ert8UYzoypaI9wMPZQV2ibThQ2zKsoge5R25qxHP10eia5pMYOV1mq6G9bft5LoygnyR6bn8RERwQDg/132","nickname":"Geek_2b6807","note":"","ucode":"4C1D0B7F283554","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":397719,"discussion_content":"40G也不要多少钱吧 ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1632663987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1240168,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ert8UYzoypaI9wMPZQV2ibThQ2zKsoge5R25qxHP10eia5pMYOV1mq6G9bft5LoygnyR6bn8RERwQDg/132","nickname":"Geek_2b6807","note":"","ucode":"4C1D0B7F283554","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":399342,"discussion_content":"跟数据库规格有关系，不仅仅是磁盘。\n比如几核几G内存，并发数多少等等挂钩的。另外，那个机器当时是续费到两年后，要调整就是两年的钱。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632932391,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":397719,"ip_address":""},"score":399342,"extra":""}]},{"author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8922,"discussion_content":"这个应该是重建这个索引就好了吧，不用重建表\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1568101647,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1259876,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/KYvWM0tjH8j920S32qkGMDDeRJDIg4LoqRppe74AISyhYyKmGTcia3BvDqjvibhCicx7ncGSRbQyd2phR7ZUZwR6A/132","nickname":"落月","note":"","ucode":"10663079C7096F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":152427,"discussion_content":"对，我觉得也是重建索引就可以了吧","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1579961336,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":8922,"ip_address":""},"score":152427,"extra":""},{"author":{"id":1422123,"avatar":"","nickname":"听风来","note":"","ucode":"DBB646BFA8BFA0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294448,"discussion_content":"他这个有可能数据量大，重建索引跑不动吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595897114,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":8922,"ip_address":""},"score":294448,"extra":""},{"author":{"id":2076283,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/ae/7b/47200692.jpg","nickname":"贺子","note":"","ucode":"A64DC9D9CF7CCD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1422123,"avatar":"","nickname":"听风来","note":"","ucode":"DBB646BFA8BFA0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297328,"discussion_content":"删除索引很快，创建二级索引onlion不用拷贝表也很快","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596875500,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":294448,"ip_address":""},"score":297328,"extra":""}]},{"author":{"id":1444023,"avatar":"https://static001.geekbang.org/account/avatar/00/16/08/b7/ea556fb1.jpg","nickname":"重瞳Tech","note":"","ucode":"7968EB52DBED0D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":406580,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634798586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2118930,"avatar":"https://static001.geekbang.org/account/avatar/00/20/55/12/ec19ad14.jpg","nickname":"人生","note":"","ucode":"3259F341C683E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382431,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625565432,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2052656,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/52/30/f7cdca9c.jpg","nickname":"您的好友已不存在","note":"","ucode":"0D67353B07E9AA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382188,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625467802,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2052656,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/52/30/f7cdca9c.jpg","nickname":"您的好友已不存在","note":"","ucode":"0D67353B07E9AA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382190,"discussion_content":"你这名字取的😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625468217,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":382188,"ip_address":""},"score":382190,"extra":""}]},{"author":{"id":1178715,"avatar":"https://static001.geekbang.org/account/avatar/00/11/fc/5b/4b92d745.jpg","nickname":"命中水","note":"","ucode":"2D4431A9CC67EA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":355295,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615396480,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1731047,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/GmtqEx7x5hagZtXbd8Xs8ocUuHHLGIgiaqTwTcibPnpla1PVTbed2Ax7ZfzCjN2Qpeyao6ogq7L3icLzSB3vY1rlg/132","nickname":"Chanson","note":"","ucode":"74B3B180B4B953","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352927,"discussion_content":" mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614912191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1503506,"avatar":"https://static001.geekbang.org/account/avatar/00/16/f1/12/7dac30d6.jpg","nickname":"你为啥那么牛","note":"","ucode":"1ABC604A54A8F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":325878,"discussion_content":"我觉得你解释的，比作者说的更清楚","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605450844,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1063680,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3b/00/4174249e.jpg","nickname":"mkmonkey","note":"","ucode":"6C621D68EE93E2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312852,"discussion_content":"两个月前删除老版本系统的数据,现在看来并没有什么用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602834522,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":7,"child_discussions":[{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1063680,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3b/00/4174249e.jpg","nickname":"mkmonkey","note":"","ucode":"6C621D68EE93E2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":312863,"discussion_content":"你这个没什么用的意思是啥，\n是磁盘空间没释放还是？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602837115,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":312852,"ip_address":""},"score":312863,"extra":""},{"author":{"id":1063680,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3b/00/4174249e.jpg","nickname":"mkmonkey","note":"","ucode":"6C621D68EE93E2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":313433,"discussion_content":"查询速度并未提高，因为没有重建索引","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1603062880,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":312863,"ip_address":""},"score":313433,"extra":""},{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1063680,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3b/00/4174249e.jpg","nickname":"mkmonkey","note":"","ucode":"6C621D68EE93E2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":313438,"discussion_content":"哈哈 那是。查询的时候主要靠索引。如果索引有很多空洞，查询起来一样的慢。\n好在现在的innodb几乎都是各表单独存放索引文件了，再重建索引或整理磁盘应该就不会遇到空间不释放的问题了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603063906,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":313433,"ip_address":""},"score":313438,"extra":""}]},{"author":{"id":2076283,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/ae/7b/47200692.jpg","nickname":"贺子","note":"","ucode":"A64DC9D9CF7CCD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297327,"discussion_content":"重建索引不行吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596875142,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":8,"child_discussions":[{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2076283,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/ae/7b/47200692.jpg","nickname":"贺子","note":"","ucode":"A64DC9D9CF7CCD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297345,"discussion_content":"不行的.\n\n当时没有开启`innodb_file_per_table`选项,导致所有的表(数据和索引)都存储在了一个文件中.\n即使是使用了`optimize table`都无法释放空间.\n\n可以参考这两篇文章:\nhttps://stackoverflow.com/questions/1270944/mysql-innodb-not-releasing-disk-space-after-deleting-data-rows-from-table\n\nhttps://stackoverflow.com/questions/3927690/howto-clean-a-mysql-innodb-storage-engine/4056261#4056261","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1596881144,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":297327,"ip_address":""},"score":297345,"extra":""},{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2076283,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/ae/7b/47200692.jpg","nickname":"贺子","note":"","ucode":"A64DC9D9CF7CCD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297346,"discussion_content":"可以先看下专栏的第13篇文章\n\n13 | 为什么表数据删掉一半，表文件大小不变？\nhttps://time.geekbang.org/column/article/72388","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596881625,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":297327,"ip_address":""},"score":297346,"extra":""},{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2076283,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/ae/7b/47200692.jpg","nickname":"贺子","note":"","ucode":"A64DC9D9CF7CCD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297352,"discussion_content":"&#34;即使表删掉了，空间也是不会回收的。&#34;\n看到这,是不是很绝望.������","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1596883072,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":297327,"ip_address":""},"score":297352,"extra":""}]},{"author":{"id":1323652,"avatar":"","nickname":"sibyl","note":"","ucode":"0D142011860D69","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287161,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593392822,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1095857,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/bvj76PmeUvW8kokyu91IZWuRATKmabibDWbzAj2TajeEic7WvKCJOLaOh6jibEmdQ36EO3sBUZ0HibAiapsrZo64U8w/132","nickname":"梦倚栏杆","note":"","ucode":"BDEB97F2822445","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":261883,"discussion_content":"看了一下我们这边也有索引比数据大","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589018774,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1095857,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/bvj76PmeUvW8kokyu91IZWuRATKmabibDWbzAj2TajeEic7WvKCJOLaOh6jibEmdQ36EO3sBUZ0HibAiapsrZo64U8w/132","nickname":"梦倚栏杆","note":"","ucode":"BDEB97F2822445","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":261904,"discussion_content":"哈哈 准备处理一下吗😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589021594,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":261883,"ip_address":""},"score":261904,"extra":""}]},{"author":{"id":1971269,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/oltLEqTrmHm2aJP99BK6tHu5h7hp4aj08wR5Wt6H31iadFduDAVvjYKmhQ2nvGbLV3lkVdiat2GRasgWXoJeTibUg/132","nickname":"杨","note":"","ucode":"7EFEFE285975C6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":240088,"discussion_content":"学到了很多","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587338299,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1488212,"avatar":"https://static001.geekbang.org/account/avatar/00/16/b5/54/3f78e3c8.jpg","nickname":"西风胡杨","note":"","ucode":"7A35856E27F27B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":70345,"discussion_content":"alter table T engine=InnoDB 是会重建所有表，还是某张表？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575346710,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1488212,"avatar":"https://static001.geekbang.org/account/avatar/00/16/b5/54/3f78e3c8.jpg","nickname":"西风胡杨","note":"","ucode":"7A35856E27F27B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":70539,"discussion_content":"这里的T就是表名。","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1575365790,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":70345,"ip_address":""},"score":70539,"extra":""}]},{"author":{"id":1252848,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1d/f0/59702429.jpg","nickname":"idea","note":"","ucode":"621921030982C0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":37178,"discussion_content":"真是惨痛的记录啊，学习了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571538553,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42735,"user_name":"发条橙子 。","can_delete":false,"product_type":"c1","uid":1259218,"ip_address":"","ucode":"ED076F4534FFED","user_header":"https://static001.geekbang.org/account/avatar/00/13/36/d2/c7357723.jpg","comment_is_top":true,"comment_ctime":1543029915,"is_pvip":false,"replies":[{"id":"15296","content":"1. 这样理解也算对，不过要记得 主键也是索引的一种哈<br>2. 是的，所以说索引越多，“维护成本”越大<br>3. 如果是几百个儿子节点共用一个父节点，是不是就不会看上去那么浪费啦<br>4. 树高其实取决于叶子树（数据行数）和“N叉树”的N。 而N是由页大小和索引大小决定的。<br>5. 基本是你说的流程。不过不是“优化器”去取的，是执行器调用引擎，引擎内部才管理了你说的 段、页这些数据","user_name":"作者回复","comment_id":42735,"uid":"1264162","ip_address":"","utype":1,"ctime":1543041382,"user_name_real":"林晓斌"}],"discussion_count":17,"race_medal":0,"score":"9.2233729059812004e+18","product_id":100020801,"comment_content":"老师， 因为正文不能无限细节和篇幅的缘故， 有些细节点没有说， 我也一直很困惑， 希望能帮忙解答下，辛苦了<br>1. 表的逻辑结构 ，表 —&gt; 段 —&gt; 段中存在数据段(leaf node segment) ，索引段( Non-leaf node segment）,请问数据段就是主键索引的数据， 索引段就是二级索引的数据么<br>2. 建立的每个索引都有要维护一个数据段么 ？？ 那么新插入一行值 ， 岂不是每个索引段都会维护这个值<br>3. 索引的n阶表示n个数据页么。那是不是插入第一行数据树高1 ，就是一个数据页， 插入二三行，树高是二，那就是两个数据页，而且B+树只有leaf node存数据，所以父节点实际上有没有数据，但是占一个页 ，好浪费 ， 是我理解有误么 <br>4. 树高取决于数据页的大小么 ， 这个不是很能理解 ，数据页为16k 。 那么树高不是一个定值了么，难道还和里面存数据的大小有关么<br>5. 查询数据的时候，大致的流程细化来说 ,我这么理解对么 。 通过优化器到表里的数据段／索引段取数据 ，数据是按照段-&gt;区-&gt;页维度去取 ， 取完后先放到数据缓冲池中，再通过二分法查询叶结点的有序链表数组找到行数据返回给用户 。 当数据量大的时候，会存在不同的区，取范围值的时候会到不同的区取页的数据返回用户。    <br><br>这块知识有点比较难理解，看书和一些文章的时候也比较晦涩，希望老师能解答下，感觉这块啃不透 是不是索引设计起来就比较吃力","like_count":202,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430178,"discussion_content":"1. 这样理解也算对，不过要记得 主键也是索引的一种哈\n2. 是的，所以说索引越多，“维护成本”越大\n3. 如果是几百个儿子节点共用一个父节点，是不是就不会看上去那么浪费啦\n4. 树高其实取决于叶子树（数据行数）和“N叉树”的N。 而N是由页大小和索引大小决定的。\n5. 基本是你说的流程。不过不是“优化器”去取的，是执行器调用引擎，引擎内部才管理了你说的 段、页这些数据","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1543041382,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2033168,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/06/10/77f6ccea.jpg","nickname":"尘灬","note":"","ucode":"553924A550B3BD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555564,"discussion_content":"前提是Innodb引擎\n1：每新建1个索引都会有两个段（一个是叶子节点段，一个是非叶子节点段【都是目录项页】），段是一个逻辑上的概念；并且不管是聚簇索引还是普通索引都是同样的；\n2：同1 的解释\n3：刚开始行数据很少的时候，行数据会存在聚簇索引的根节点上，一直到根节点放不下了，就会页分裂（这个过程根节点的页号不会变化的，每个索引的根节点都是固定的，根节点信息会存在数据字典里面，并不是把根节点变成其它节点，而是新建页，把数据存到新建页上）；并且刚开始数据量很少的时候，数据会存在隶属于独立表空间下的碎片区下面的页里面，只有存满了32个页（默认），才会独立出来，分配一个区的数据空间（默认有64个页），这个新建的区里面页会挂在上面说的两种逻辑上的段里面；","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1646975586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1076264,"avatar":"https://static001.geekbang.org/account/avatar/00/10/6c/28/a1f9f0ad.jpg","nickname":"陈树义","note":"","ucode":"AF83C4BDC192B5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535397,"discussion_content":"1. 表的逻辑结构 ，表 —&gt; 段 —&gt; 段中存在数据段(leaf node segment) ，索引段( Non-leaf node segment）,请问数据段就是主键索引的数据， 索引段就是二级索引的数据么\n\n--------\n\n这里先明确几个概念，你说的二级索引，应该指的是 secondary Index，也就是辅助索引吧。如果是的话，我理解数据段存的是叶子节点的数据，即包括主键索引的叶子节点，也包括辅助索引的叶子节点。   而索引段，存的是非叶子节点的数据，同样包括主键索引的非叶子节点，也包括辅助索引的非叶子节点。\n\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1638426949,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2736971,"avatar":"https://static001.geekbang.org/account/avatar/00/29/c3/4b/c548e4e7.jpg","nickname":"Geek_fc73c5","note":"","ucode":"8761E00029D4E0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590422,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665732030,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3173439,"avatar":"","nickname":"Geek_49d3bb","note":"","ucode":"AC4936A2365AED","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587046,"discussion_content":"m","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662710346,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1780797,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/2c/3d/0bd58aa4.jpg","nickname":"Em","note":"","ucode":"32012A5C603C8A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575392,"discussion_content":"看文章看明白了, 这评论差点给我整懵了....","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654788934,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1795793,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/zxkns28cIAUZIt3WjDb8G26qiccT84d9GMr9ZpbYR60TU1ibqSj9NoYVHlJvGF1kOltkqNDmEfJCqPuYVkue3WHg/132","nickname":"Geek_55e386","note":"","ucode":"5A727F1323C2D0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556769,"discussion_content":"回表为什么不能批量呢. 每次一条数据回表一次不是很耗费资源吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647505422,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2694205,"avatar":"https://static001.geekbang.org/account/avatar/00/29/1c/3d/76465ee4.jpg","nickname":"摘星","note":"","ucode":"55D8CAFC938F91","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1795793,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/zxkns28cIAUZIt3WjDb8G26qiccT84d9GMr9ZpbYR60TU1ibqSj9NoYVHlJvGF1kOltkqNDmEfJCqPuYVkue3WHg/132","nickname":"Geek_55e386","note":"","ucode":"5A727F1323C2D0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578047,"discussion_content":"回表是拿着主键，x次回表 就代表需要从主表中拿x个数据，这x个主键对应的数据(叶子结点)互相很可能离十万八千里，如果按照你的说法批量的话，那么回表的时间复杂度就是（logN+ x*N） 原先的复杂度是：（x*logN），当x趋近无穷时候，你说的就变成了N复杂度 右边依然是logN","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656487615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":556769,"ip_address":""},"score":578047,"extra":""}]},{"author":{"id":1833344,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/f9/80/54106d1d.jpg","nickname":"王朋","note":"","ucode":"7907D8A1E6CE60","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":398361,"discussion_content":"M","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632764994,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1201022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/53/7e/b6829040.jpg","nickname":"SevenMonths","note":"","ucode":"62A9740FBD1FAE","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393016,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631205501,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2616228,"avatar":"https://static001.geekbang.org/account/avatar/00/27/eb/a4/a40accf4.jpg","nickname":"不必太在意","note":"","ucode":"97741EC7082FC5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390554,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629888848,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1748518,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/ae/26/852e8e04.jpg","nickname":"Xu","note":"","ucode":"CF57296739137E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381041,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624877466,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1135528,"avatar":"https://static001.geekbang.org/account/avatar/00/11/53/a8/abc96f70.jpg","nickname":"return","note":"","ucode":"42B8A3380DF04B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371985,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620116327,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1731047,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/GmtqEx7x5hagZtXbd8Xs8ocUuHHLGIgiaqTwTcibPnpla1PVTbed2Ax7ZfzCjN2Qpeyao6ogq7L3icLzSB3vY1rlg/132","nickname":"Chanson","note":"","ucode":"74B3B180B4B953","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352928,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614912258,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2278559,"avatar":"https://static001.geekbang.org/account/avatar/00/22/c4/9f/a01e4bd1.jpg","nickname":"海浪","note":"","ucode":"091941B3556B4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":323402,"discussion_content":"第一个问题不对，1. 数据段的上层是表空间，不是表；2. 数据段里存放的内容是整张表的行记录","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604929646,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1043325,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/c9xpiakQ3OC1AlfCeW03lLnnb7mj5v35Hib8YDs66zpnVib2n2qFichFmFp2Ec4QDPR0dKh38MkBBLyD3bE4NiaanZQ/132","nickname":"龙晓","note":"","ucode":"FAF34F1C65D103","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":320710,"discussion_content":"mysql的B+树分支节点存数据吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604459828,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1883760,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/be/70/ad0cad60.jpg","nickname":"ireader","note":"","ucode":"95F5DE9EBF090D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1043325,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/c9xpiakQ3OC1AlfCeW03lLnnb7mj5v35Hib8YDs66zpnVib2n2qFichFmFp2Ec4QDPR0dKh38MkBBLyD3bE4NiaanZQ/132","nickname":"龙晓","note":"","ucode":"FAF34F1C65D103","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333294,"discussion_content":"存的索引\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607496596,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":320710,"ip_address":""},"score":333294,"extra":""}]}]},{"had_liked":false,"id":44128,"user_name":"loCust","can_delete":false,"product_type":"c1","uid":1297583,"ip_address":"","ucode":"A5CFECA44045A1","user_header":"https://static001.geekbang.org/account/avatar/00/13/cc/af/25509210.jpg","comment_is_top":true,"comment_ctime":1543371681,"is_pvip":false,"replies":[{"id":"15729","content":"好问题，这个是关于“用索引” 和 “用索引快速定位记录”的区别。<br><br>08 篇讲到这个问题了，周五关注一下。<br><br>简单回答：“用索引”有一种用法是 “顺序扫描索引”<br>","user_name":"作者回复","comment_id":44128,"uid":"1264162","ip_address":"","utype":1,"ctime":1543372157,"user_name_real":"林晓斌"}],"discussion_count":59,"race_medal":0,"score":"9.2233728930965996e+18","product_id":100020801,"comment_content":"老师，有这么个问题<br>一张表两个字段id, uname,id主键，uname普通索引<br>SELECT * FROM test_like WHERE uname LIKE &#39;j&#39;&#47; &#39;j%&#39; &#47; &#39;%j&#39;&#47; &#39;%j%&#39;<br>模糊查询like后面四种写法都可以用到uname的普通索引<br><br>添加一个age字段<br>like后面的&#39;%j&#39;&#47; &#39;%j%&#39; 这两种情况用不到索引<br>把select * 改为 select id &#47; select uname &#47; select id,uname<br>like后面&#39;j&#39;&#47; &#39;j%&#39; &#47; &#39;%j&#39;&#47; &#39;%j%&#39;  这四种情况又都可以用到uname普通索引<br><br>建立uname,age的联合索引<br>模糊查询还是 LIKE &#39;j&#39;&#47; &#39;j%&#39; &#47; &#39;%j&#39;&#47; &#39;%j%&#39;四种情况<br>其中select id &#47; select uname &#47; select id,uname <br>会用到uname的普通索引<br>select *  会用到uname,age的组合索引<br><br>看到好些文章会说模糊查询时以%开头不会用到索引，实践后发现结论跟文章描述的有出入。<br>看了索引的这两节内容对上面的各种情况有的可以解释通了，有的仍然有些模糊，想问下老师上面这些情况使用索引时为什么是这样的？","like_count":199,"discussions":[{"author":{"id":1361159,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqJobg767PUeqrqQQ4B6YvMatj2SRyOicKZZ4gWTf30dMketiaj58Gc3RFTmckGxAXlL9ERSxGovq9g/132","nickname":"涛哥哥","note":"","ucode":"329A1384E3AB5E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":320196,"discussion_content":"这几个例子真是好，如果把这四个例子理解透了，我想对mysql的索引就理解的差不多了。\n下面开始解答：\n1、因为查询的是 * ，会查询所有字段（id,uname）,而二级索引恰恰包含这些数据，又二级索引树比主键索引树小很多，所以直接挨个查询二级索引要比挨个查询主键索引要快的多，故用的是二级索引；\n2、因为添加了age字段，但是二级索引里面没有age字段，就必须要回主键树查询所有字段（回表过程），所以挨个查询主键索引树，就不走二级索引树了；\n3、因为建立了联合索引，所以二级索引树里面就包含了所有的字段（id,uname,age），所以就不用搜索主键索引树了；\n综上：二级索引树小，且又包含了我们所需要的字段，所以就直接用二级索引啦，但是仍然是挨个遍历的。所以这里是和老师说的&#34;用索引&#34;是一个意思。顺便解释下老师说的用索引定位：就是不用搜索整个索引库直接用二分法能快速找到的数据叫用索引定位。\n","likes_number":79,"is_delete":false,"is_hidden":false,"ctime":1604287974,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":16,"child_discussions":[{"author":{"id":2350043,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/sFkJYPdIIjHfxgCxAh1D4Pyk1jAueicu7egY1PUvR8egs12gAXxmO51YT6Bk7NianYRyMRPTpd3kKWXvZ8TEkRyw/132","nickname":"Geek_7794e2","note":"","ucode":"2F749554FEA20D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1361159,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqJobg767PUeqrqQQ4B6YvMatj2SRyOicKZZ4gWTf30dMketiaj58Gc3RFTmckGxAXlL9ERSxGovq9g/132","nickname":"涛哥哥","note":"","ucode":"329A1384E3AB5E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":334645,"discussion_content":"添加一个age字段\nlike后面的&#39;%j&#39;/ &#39;%j%&#39; 这两种情况用不到索引，这个情况是用到那种索引","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1607927876,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":320196,"ip_address":""},"score":334645,"extra":""},{"author":{"id":1361159,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqJobg767PUeqrqQQ4B6YvMatj2SRyOicKZZ4gWTf30dMketiaj58Gc3RFTmckGxAXlL9ERSxGovq9g/132","nickname":"涛哥哥","note":"","ucode":"329A1384E3AB5E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2350043,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/sFkJYPdIIjHfxgCxAh1D4Pyk1jAueicu7egY1PUvR8egs12gAXxmO51YT6Bk7NianYRyMRPTpd3kKWXvZ8TEkRyw/132","nickname":"Geek_7794e2","note":"","ucode":"2F749554FEA20D","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":336242,"discussion_content":"这个情况其实是挨个扫描了二级索引树(遍历)，并没有扫描主键树（太大了）。这个叫用到了索引。用索引定位和用索引就看有没有遍历的操作。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1608538315,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":334645,"ip_address":""},"score":336242,"extra":""},{"author":{"id":1000550,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/44/66/95976d10.jpg","nickname":"一路向前","note":"","ucode":"853B90DF308425","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1361159,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqJobg767PUeqrqQQ4B6YvMatj2SRyOicKZZ4gWTf30dMketiaj58Gc3RFTmckGxAXlL9ERSxGovq9g/132","nickname":"涛哥哥","note":"","ucode":"329A1384E3AB5E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336786,"discussion_content":"有个疑问:innodb没用到索引，全表扫描时候，可以不可以说就是用到了索引遍历？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608699601,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":336242,"ip_address":""},"score":336786,"extra":""}]},{"author":{"id":1257453,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2f/ed/a87bb8fa.jpg","nickname":"此鱼不得水","note":"","ucode":"95268E823FB4D2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":207,"discussion_content":"简单说一下我对你这个几种情况的理解：\n1.SELECT * FROM test_like WHERE uname LIKE &#39;j&#39;/ &#39;j%&#39; / &#39;%j&#39;/ &#39;%j%&#39;用到uname的普通索引 \nA：这个应该是走到覆盖索引的缘故；\n2.添加一个age字段\nlike后面的&#39;%j&#39;/ &#39;%j%&#39; 这两种情况用不到索引\n把select * 改为 select id / select uname / select id,uname\nlike后面&#39;j&#39;/ &#39;j%&#39; / &#39;%j&#39;/ &#39;%j%&#39; 这四种情况又都可以用到uname普通索引\nA：如果返回值只包含（id，uname）的话，覆盖索引就能拿到所有数据，所以这种情况下like后面的多种条件都可以走到普通索引。但是如果select * 的话，返回数据由于包含了age字段，而age字段在uname的覆盖索引中查询不到需要二次回表，因此便走不到索引。\n3.建立uname,age的联合索引\n模糊查询还是 LIKE &#39;j&#39;/ &#39;j%&#39; / &#39;%j&#39;/ &#39;%j%&#39;四种情况\n其中select id / select uname / select id,uname \n会用到uname的普通索引\nselect * 会用到uname,age的组合索引\nA：如果返回值只包含（id，uname）的话，覆盖索引就能拿到所有数据，所以这种情况下like后面的多种条件都可以走到普通索引。如果查询条件变为selec * 的话联合索引在这时候就是最优的覆盖索引了，所以走到了联合索引。","likes_number":63,"is_delete":false,"is_hidden":false,"ctime":1561281124,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":11,"child_discussions":[{"author":{"id":1342533,"avatar":"https://static001.geekbang.org/account/avatar/00/14/7c/45/19e24f98.jpg","nickname":"见＆不见","note":"","ucode":"53C6167BB03424","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1257453,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2f/ed/a87bb8fa.jpg","nickname":"此鱼不得水","note":"","ucode":"95268E823FB4D2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":675,"discussion_content":"感谢这位童鞋的分析 看了几遍 大概了解啦","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1561952579,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":207,"ip_address":""},"score":675,"extra":""},{"author":{"id":1116188,"avatar":"https://static001.geekbang.org/account/avatar/00/11/08/1c/ef15e661.jpg","nickname":" 臣馟飞扬","note":"","ucode":"F2F882B7678055","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1257453,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2f/ed/a87bb8fa.jpg","nickname":"此鱼不得水","note":"","ucode":"95268E823FB4D2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":70201,"discussion_content":"学习了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575336199,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":207,"ip_address":""},"score":70201,"extra":""},{"author":{"id":1037476,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d4/a4/202cef33.jpg","nickname":"__fulin","note":"","ucode":"DD396CEEB6082A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1257453,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2f/ed/a87bb8fa.jpg","nickname":"此鱼不得水","note":"","ucode":"95268E823FB4D2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":89560,"discussion_content":"第2点，添加一个age字段，为什么like后面的&#39;%j&#39;/ &#39;%j%&#39; 这两种情况用不到索引呢？","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1576757752,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":207,"ip_address":""},"score":89560,"extra":""}]},{"author":{"id":2027690,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f0/aa/6ba4a1ab.jpg","nickname":"℡ㄨ和尚ふ","note":"","ucode":"E26B2BC7D8E4FC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382082,"discussion_content":"like &#39;j&#39; 跟 like &#39;j%&#39;,这两种是可以用到索引去定位数据的，like &#39;%j&#39; 跟 like &#39;%j%&#39;这两中where条件是不会使用索引去定位数据的，但是因为此时表里面字段只有id,uname，正好这两列数据在uname索引里面都有保存，优化器认为遍历普通索引比遍历主键索引的开销要小，所以会选择遍历普通索引，但是两者还是有区别的；前者explain分析可以看到type=range，后者是type=index","likes_number":38,"is_delete":false,"is_hidden":false,"ctime":1625407394,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1565455,"avatar":"","nickname":"Geek_d458a5","note":"","ucode":"2E7D6F96EC7AA8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2027690,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f0/aa/6ba4a1ab.jpg","nickname":"℡ㄨ和尚ふ","note":"","ucode":"E26B2BC7D8E4FC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555145,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646784605,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":382082,"ip_address":""},"score":555145,"extra":""}]},{"author":{"id":1710200,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VUnspzjpBcmEibUicMJoDpnvsElyX5R6Eia9pjNuP3MaD9iaJpBS4vZ4krzLIniaZucFVrKnfJ1VumLLZ8gRt9KnCLQ/132","nickname":"Geek_39958b","note":"","ucode":"500FC31A7627AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385998,"discussion_content":"你可以这样理解查询时，优化器执行的顺序\n1.根据搜索条件找出所有可能用到的索引。\n2.计算全表扫描的代价\n3.计算其他索引扫描的代价\n4.选出优化器计算出扫描成本最低的索引\n（扫描代价涉及到I/O成本和CPU成本，innodb内部有一套自己的成本计算方法，简单举例比如：读取一个页到内存成本为1.0， 检测一条记录是否符合成本为0.2）\n\n根据上面的逻辑，%j 这种条件使用了辅助索引。就是说，优化器认为“扫描辅助索引的代价比扫描聚集索引的代价要低”。\n","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1627377274,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1069548,"avatar":"https://static001.geekbang.org/account/avatar/00/10/51/ec/3d51d5e6.jpg","nickname":"上校","note":"","ucode":"DEE1CEE9E4C680","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296497,"discussion_content":"1. 用索引有效, 提高查询效率，B+树起到的做用\n2. 用索引无效，起不到优化查询的效率，在索引上也是全扫描，因为有些情况数据库认为还是要每行数据进行判断。","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1596555180,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1302149,"avatar":"https://static001.geekbang.org/account/avatar/00/13/de/85/da98e390.jpg","nickname":"tyy","note":"","ucode":"C3B436E6562744","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352228,"discussion_content":"我的理解是看有没有走覆盖索引 如果走了覆盖索引%位置在哪不重要 因为这个时候会用到icp特性","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1614657070,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430641,"discussion_content":"好问题，这个是关于“用索引” 和 “用索引快速定位记录”的区别。\n\n08 篇讲到这个问题了，周五关注一下。\n\n简单回答：“用索引”有一种用法是 “顺序扫描索引”\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1543372157,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2736971,"avatar":"https://static001.geekbang.org/account/avatar/00/29/c3/4b/c548e4e7.jpg","nickname":"Geek_fc73c5","note":"","ucode":"8761E00029D4E0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590423,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665732470,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2941234,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/e1/32/671b3d70.jpg","nickname":"思君满月","note":"","ucode":"1AD6B04DFDDDE4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582866,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659717300,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1510177,"avatar":"https://static001.geekbang.org/account/avatar/00/17/0b/21/f1aea35b.jpg","nickname":"let_me_go","note":"","ucode":"A5936F5C5E3D65","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557039,"discussion_content":"Mark ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647616718,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1565455,"avatar":"","nickname":"Geek_d458a5","note":"","ucode":"2E7D6F96EC7AA8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555146,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646784797,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2917669,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK3YeAWlX0UjEeoPxwjef6Hs7WJKCD3a2bdptzz04ib7N1TVdPKp8icHKJyZzdYxphAc6hGtaLCl01w/132","nickname":"Geek_65fa25","note":"","ucode":"2C1988797F9C6D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553778,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646069742,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2759972,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/1d/24/f2b3001d.jpg","nickname":"@亮亮","note":"","ucode":"41456D5FFF01AA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547502,"discussion_content":"添加字段age 是否 &#39;j&#39;/ &#39;j%&#39;这2种可以使用索引？为何？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642721651,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2638055,"avatar":"https://static001.geekbang.org/account/avatar/00/28/40/e7/b6454f3b.jpg","nickname":"周传升","note":"","ucode":"FEB6C1C507BEE3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532965,"discussion_content":"1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637742365,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2055879,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL9aTicYX60mV7ShV6o5jhBW17pOGoO5ZAkkK7WYHJyUc83ynOUtnAGsJHjOgia1GWkS1lu8E5ib0GkA/132","nickname":"sth","note":"","ucode":"2BB53721DF2795","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":408270,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635214104,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1722358,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/47/f6/8de3ce34.jpg","nickname":"阿强","note":"","ucode":"7BD72BB94D8F56","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":401417,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633663185,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2128315,"avatar":"https://static001.geekbang.org/account/avatar/00/20/79/bb/a6100431.jpg","nickname":"烛影鸾书","note":"","ucode":"D7E72D5CCDFDC2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388749,"discussion_content":"好问题，插个眼","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628934760,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2645397,"avatar":"https://static001.geekbang.org/account/avatar/00/28/5d/95/9667f058.jpg","nickname":"River","note":"","ucode":"4366903927819B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387230,"discussion_content":"插眼","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628063901,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2530159,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/zELKQPQIzkSBtEnApyibG1pa59ofyGMRoULfmCRWpMAZVwQgTibuicoac2oraYzvcWQcrlXia9oh3iacxNuwJ8BmMpQ/132","nickname":"Geek_18629f","note":"","ucode":"83D41DBE38390E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380128,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624350244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2282710,"avatar":"","nickname":"沈辉辉","note":"","ucode":"D8FB55730C1DC5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377294,"discussion_content":"关注一下\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622594573,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2626369,"avatar":"https://static001.geekbang.org/account/avatar/00/28/13/41/719a6e36.jpg","nickname":"WaitaKennyJ","note":"","ucode":"C1404EE919B9F1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375625,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621778360,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1301241,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKbUic06Aibsg0KfHGrpctVrhZML3kvOSXkvlP9k4GhGoof52esw4vzUWd6La39end1fia3D2YYAzDcQ/132","nickname":"Geek_6e7951","note":"","ucode":"D509CAADF6ABF1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375261,"discussion_content":"mark 好问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621557395,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2416834,"avatar":"","nickname":"Geek_351264","note":"","ucode":"C300FE66C94231","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364347,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617454762,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1018620,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8a/fc/d1dd57dd.jpg","nickname":"ipofss","note":"","ucode":"DE3061C9259F9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":357829,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615877790,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005574,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/58/06/6a9c089b.jpg","nickname":"Lee大树","note":"","ucode":"3C2012F6D21698","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344543,"discussion_content":"学习了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611493933,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1494177,"avatar":"https://static001.geekbang.org/account/avatar/00/16/cc/a1/16d488fc.jpg","nickname":"阿国","note":"","ucode":"2801861BB1C115","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341957,"discussion_content":"Msrk","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610548630,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341714,"discussion_content":"我一直以为like %在前面的，都用不到索引。mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610503746,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369259,"discussion_content":"不是用不到索引是用不到索引的快速定位","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1618990125,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":341714,"ip_address":""},"score":369259,"extra":""},{"author":{"id":1242608,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f5/f0/bfe9f5d4.jpg","nickname":"zenkiray","note":"","ucode":"8259D5F76AB104","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378515,"discussion_content":"全索引扫描和全表扫描一样糟糕","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623252918,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":341714,"ip_address":""},"score":378515,"extra":""},{"author":{"id":1352618,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a3/aa/8b475aa5.jpg","nickname":"冰点","note":"","ucode":"700E0590046D15","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1242608,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f5/f0/bfe9f5d4.jpg","nickname":"zenkiray","note":"","ucode":"8259D5F76AB104","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385922,"discussion_content":"不太理解这一句为什么一样糟糕呢。我理解全索引扫描就是扫描索引，只需要扫描一部分数据就可以得到结果，全表扫描把表中所有数据过一遍才能获取结果。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627349476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":378515,"ip_address":""},"score":385922,"extra":""}]},{"author":{"id":1323652,"avatar":"","nickname":"sibyl","note":"","ucode":"0D142011860D69","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287163,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593393266,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42821,"user_name":"老北","can_delete":false,"product_type":"c1","uid":1024376,"ip_address":"","ucode":"89B9B6673F1705","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/78/71d37164.jpg","comment_is_top":true,"comment_ctime":1543051746,"is_pvip":false,"replies":[{"id":"15325","content":"额你们DBA可能对自适应哈希索引（AHI）有误解…有其他同学也在评论中有提到AHI，我答疑文章会安排说明。<br><br>看你的描述，最好就是rename 重建一个新的，然后找低峰期删掉旧的表。<br><br>还有你这么说，应该id就是这个表的自增主键了，正常即使删除也不会全表扫描。不过我现在怀疑可能删的事务有没提交的，导致MySQL 没法回收复用旧空间。（这个可以简单从文件大小判断）<br><br>不过总之，rename +新建表，上面这个问题也自动解决了😓","user_name":"作者回复","comment_id":42821,"uid":"1264162","ip_address":"","utype":1,"ctime":1543064135,"user_name_real":"林晓斌"}],"discussion_count":33,"race_medal":0,"score":"9.2233725237291008e+18","product_id":100020801,"comment_content":"背景:<br>我们现在有一张表,每天生成300W数据, 然后每天用delete xx where id = x 这样的方式来删除.<br>不用truncate是因为DBA说truncate会重建自适应哈希索引,可能对整个库性能有影响.<br><br>操作:<br>这个表的主键id是递增的.<br>当我执行 explain select min(id) from t 时,是走的全表扫描.<br>而且我目前在从库执行这个sql,直接就卡住了.<br>执行 explain select max(id) from t 时, 结果是 Select tables optimized away<br>(目前最大id 5亿左右,实际数据量只有300W)<br><br>问题:<br>想问下老师<br>1. 为什么 min(id) 会是全表扫描呢? 是和存在大量的delete后未释放空间有关系吗?<br>2. 像这种业务场景,mysql怎么处理比较快速呢?  使用rename 表名有什么风险吗?<br>","like_count":113,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430209,"discussion_content":"额你们DBA可能对自适应哈希索引（AHI）有误解…有其他同学也在评论中有提到AHI，我答疑文章会安排说明。\n\n看你的描述，最好就是rename 重建一个新的，然后找低峰期删掉旧的表。\n\n还有你这么说，应该id就是这个表的自增主键了，正常即使删除也不会全表扫描。不过我现在怀疑可能删的事务有没提交的，导致MySQL 没法回收复用旧空间。（这个可以简单从文件大小判断）\n\n不过总之，rename +新建表，上面这个问题也自动解决了😓","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1543064135,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1124777,"avatar":"https://static001.geekbang.org/account/avatar/00/11/29/a9/4c114382.jpg","nickname":"qpy","note":"","ucode":"4D95DDF313DDCF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":575175,"discussion_content":"rename+新建表，是两个操作，应该存在后面那个操作失败的可能吧，一般怎么处理呢？得把rename后的表又rename回来吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654649433,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":430209,"ip_address":""},"score":575175,"extra":""}]},{"author":{"id":1518842,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2c/fa/d9ef3e77.jpg","nickname":"牛仔很忙。","note":"","ucode":"5037849220E48D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547180,"discussion_content":"mark","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1642572278,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2736971,"avatar":"https://static001.geekbang.org/account/avatar/00/29/c3/4b/c548e4e7.jpg","nickname":"Geek_fc73c5","note":"","ucode":"8761E00029D4E0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590424,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665732570,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2445733,"avatar":"https://static001.geekbang.org/account/avatar/00/25/51/a5/de29a475.jpg","nickname":"黄文晓","note":"","ucode":"D53A51707A0E64","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589019,"discussion_content":"m","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1664342080,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2941234,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/e1/32/671b3d70.jpg","nickname":"思君满月","note":"","ucode":"1AD6B04DFDDDE4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582867,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659717425,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1788265,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/49/69/6d579bd1.jpg","nickname":"Myron","note":"","ucode":"AA49DE6CE9B50E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577427,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656090320,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2537683,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b8/d3/1667b930.jpg","nickname":"EChO","note":"","ucode":"9ECC94C2B9AA88","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":570491,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651798110,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2520742,"avatar":"https://static001.geekbang.org/account/avatar/00/26/76/a6/aac72751.jpg","nickname":"半点茶凉","note":"","ucode":"188BB33969D2D2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543829,"discussion_content":"Mask 日志表数据处理问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641309518,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1130275,"avatar":"https://static001.geekbang.org/account/avatar/00/11/3f/23/8ff389d2.jpg","nickname":"郁方林","note":"","ucode":"8ABEAFDA815DDE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543700,"discussion_content":"MySQL日志表自增问题MARK","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641275168,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2824207,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/18/0f/d5c044c2.jpg","nickname":"  微风","note":"","ucode":"486B3D19FD98DB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":408576,"discussion_content":"M","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635264019,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1050414,"avatar":"https://static001.geekbang.org/account/avatar/00/10/07/2e/af5f7c5a.jpg","nickname":"榕","note":"","ucode":"61ABF735EE77E5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":402695,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633932637,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2452998,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLJiaPZmuibaYl31dUKXtfVHxia1j04BLo7spbVTlicVy0DZGXwfhyW2abVFksgo6uvArF4ORX3JkQ0NA/132","nickname":"段大帅","note":"","ucode":"BEC6C0F8FC087A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393130,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631261963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1100747,"avatar":"https://static001.geekbang.org/account/avatar/00/10/cb/cb/c54d5c4b.jpg","nickname":"薛定猫","note":"","ucode":"4A3CDA9DE5436A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387799,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628419432,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1983965,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/45/dd/a92ce1b7.jpg","nickname":"。","note":"","ucode":"D9A5F3B57834A4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":355554,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615451276,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2132568,"avatar":"","nickname":"Geek_82987a","note":"","ucode":"74463032C42F24","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":354048,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615219692,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1731047,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/GmtqEx7x5hagZtXbd8Xs8ocUuHHLGIgiaqTwTcibPnpla1PVTbed2Ax7ZfzCjN2Qpeyao6ogq7L3icLzSB3vY1rlg/132","nickname":"Chanson","note":"","ucode":"74B3B180B4B953","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352929,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614912355,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1146153,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIbxgUM37rN7rwZC9rUzleQWwqsOrqmUpibu9CMDImnuB2oEQ8p00PicYqBr81OvDkukCmzpUcM7FZw/132","nickname":"McTavish","note":"","ucode":"D391381A90113E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351875,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614508592,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1784454,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3a/86/9b7dd2f8.jpg","nickname":"冲冲冲","note":"","ucode":"B163692CC6CDE2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347534,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612251787,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1799719,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/76/27/aa2743e7.jpg","nickname":"小南风","note":"","ucode":"249B070497C815","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344966,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611630882,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2039171,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erJFlHhylrbLGORGJrapWNEZgQ413uic7NTic3wyPaGZ9MlLpw4ncibucdNDUlf67JYHgAOkO3xrMhVw/132","nickname":"Geek_zxj","note":"","ucode":"EE2CBE2A54E83B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344032,"discussion_content":"Mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611243687,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341738,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610508938,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2175621,"avatar":"https://static001.geekbang.org/account/avatar/00/21/32/85/70e423d7.jpg","nickname":"明月出天山","note":"","ucode":"B05B9FB01B334E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309341,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601261983,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2171523,"avatar":"","nickname":"石榴爸爸","note":"","ucode":"26782BA2345D88","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":307664,"discussion_content":"mark\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600731471,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1649662,"avatar":"https://static001.geekbang.org/account/avatar/00/19/2b/fe/7925eb7e.jpg","nickname":"pdf","note":"","ucode":"A44250955878BB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305373,"discussion_content":"咦  还是没有明白 min(id) 为啥是全表扫描，如果是事务没有提交，会影响这个读min(id)吗？ 有同学能告知一下吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599898209,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":6,"child_discussions":[{"author":{"id":2285456,"avatar":"https://static001.geekbang.org/account/avatar/00/22/df/90/0d8864db.jpg","nickname":"少晴","note":"","ucode":"31C290044F3B95","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1649662,"avatar":"https://static001.geekbang.org/account/avatar/00/19/2b/fe/7925eb7e.jpg","nickname":"pdf","note":"","ucode":"A44250955878BB","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":320583,"discussion_content":"索引使用必须是单纯的，不能用函数不能加运算","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1604405633,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":305373,"ip_address":""},"score":320583,"extra":""},{"author":{"id":1649662,"avatar":"https://static001.geekbang.org/account/avatar/00/19/2b/fe/7925eb7e.jpg","nickname":"pdf","note":"","ucode":"A44250955878BB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2285456,"avatar":"https://static001.geekbang.org/account/avatar/00/22/df/90/0d8864db.jpg","nickname":"少晴","note":"","ucode":"31C290044F3B95","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":320726,"discussion_content":"max和min是做了优化的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604465401,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":320583,"ip_address":""},"score":320726,"extra":""},{"author":{"id":2229693,"avatar":"https://static001.geekbang.org/account/avatar/00/22/05/bd/f902b872.jpg","nickname":"Gek_b25fe5","note":"","ucode":"EE7117E31B068D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1649662,"avatar":"https://static001.geekbang.org/account/avatar/00/19/2b/fe/7925eb7e.jpg","nickname":"pdf","note":"","ucode":"A44250955878BB","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":324165,"discussion_content":"执行下 explain select min(id) from 表名 where id!=&#39;&#39;;","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605063856,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":305373,"ip_address":""},"score":324165,"extra":""}]},{"author":{"id":1338848,"avatar":"https://static001.geekbang.org/account/avatar/00/14/6d/e0/06ea47d6.jpg","nickname":"玲儿","note":"","ucode":"4D3429A9506DD5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292070,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595071694,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1323652,"avatar":"","nickname":"sibyl","note":"","ucode":"0D142011860D69","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287167,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593393461,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42235,"user_name":"约书亚","can_delete":false,"product_type":"c1","uid":1046714,"ip_address":"","ucode":"81EA27ADD9EC1A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/ba/14e05601.jpg","comment_is_top":true,"comment_ctime":1542934897,"is_pvip":false,"replies":[{"id":"15129","content":"1. 有的， Multi-Range Read (MRR) 由于不论是否使用这个策略，SQL语句写法不变，就没有在正文中提<br><br>2. 不是，是接口能力发生了变化，以前只能传“搜索关键字” 。<br><br>如果你用过5.1 甚至5.0， 在从现在的观点看，你会发现很多“匪夷所思”。还有：并行复制官方5.6才引入、MDL 5.5 才有、Innodb 自增主键持久化、多源复制、online DDL ... <br><br>只能说，持续进化，幸甚至哉😄","user_name":"作者回复","comment_id":42235,"uid":"1264162","ip_address":"","utype":1,"ctime":1542940652,"user_name_real":"林晓斌"}],"discussion_count":24,"race_medal":0,"score":"9.2233725022542008e+18","product_id":100020801,"comment_content":"疑问：<br>1. 有些资料提到，在不影响排序结果的情况下，在取出主键后，回表之前，会在对所有获取到的主键排序，请问是否存在这种情况？<br>2. 索引下推那个例子，感觉5.6之前的机制很匪夷所思：感觉判断&#39;张%&#39;之后再“看age的值”是顺理成章的事。难道联合索引的底层实现结构在这期间发生了变化？","like_count":108,"discussions":[{"author":{"id":2877435,"avatar":"","nickname":"tc小马哥","note":"","ucode":"94B7F24298FF35","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542868,"discussion_content":"组合索引满足最左匹配，但是遇到非等值判断时匹配停止。\nname like &#39;张%&#39; 不是等值匹配，所以 age = 20 这里就用不上 (name,age) 组合索引了。如果没有索引下推，组合索引只能用到 name，age 的判定就需要回表才能做了。5.6之后有了索引下推，age = 20 可以直接在组合索引里判定","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1640868400,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430017,"discussion_content":"1. 有的， Multi-Range Read (MRR) 由于不论是否使用这个策略，SQL语句写法不变，就没有在正文中提\n\n2. 不是，是接口能力发生了变化，以前只能传“搜索关键字” 。\n\n如果你用过5.1 甚至5.0， 在从现在的观点看，你会发现很多“匪夷所思”。还有：并行复制官方5.6才引入、MDL 5.5 才有、Innodb 自增主键持久化、多源复制、online DDL ... \n\n只能说，持续进化，幸甚至哉😄","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1542940652,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1986739,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/50/b3/9269cd59.jpg","nickname":"LWD","note":"","ucode":"DDA444DB113C01","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587105,"discussion_content":"mrr转成顺序写感觉是个错误的理论；索引有序但是物理块一般是无序的，磁盘寻址也还是随机io呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662796731,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1274495,"avatar":"https://static001.geekbang.org/account/avatar/00/13/72/7f/5da093c5.jpg","nickname":"水目沾","note":"","ucode":"FDD1D15C277D58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335330,"discussion_content":"第二个问题在没看到你的提问之前我还去百度了下，奈何不知道用什么关键字搜索。我也觉得这本来就是要做的、顺理成章的事儿，咋就还要到5.6以后才优化。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608168981,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1883737,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/be/59/d890189f.jpg","nickname":"小猫","note":"","ucode":"615CF321850403","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1274495,"avatar":"https://static001.geekbang.org/account/avatar/00/13/72/7f/5da093c5.jpg","nickname":"水目沾","note":"","ucode":"FDD1D15C277D58","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":408400,"discussion_content":"借用一句老话，talking is cheap,show me your code。我们觉得顺理成章的事实现起来未必那么简单。这里面至少涉及优化器，在原来的优化逻辑上要加上这个逻辑（要分析查询条件，分析有没有联合索引）。还有优化完以后执行器会去调innodb的引擎接口，为了支持这个简单的匹配innodb引擎也得改。我觉得mysql毕竟是个产品，产品都是迭代出来的。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1635240730,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":335330,"ip_address":""},"score":408400,"extra":""}]},{"author":{"id":1829090,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/e8/e2/2bcaef68.jpg","nickname":"王瑞强","note":"","ucode":"DEE4EB5E23433F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289871,"discussion_content":"二级索引回表前对主键索引排序的意义是什么，没太理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594255995,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1465412,"avatar":"https://static001.geekbang.org/account/avatar/00/16/5c/44/d07c0865.jpg","nickname":"Geek_d960af","note":"","ucode":"C59AEF44BD8691","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1829090,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/e8/e2/2bcaef68.jpg","nickname":"王瑞强","note":"","ucode":"DEE4EB5E23433F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297527,"discussion_content":"我的理解是主键排序后  回表行很有可能都在一页上，减少随机IO的次数。","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1596960468,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":289871,"ip_address":""},"score":297527,"extra":""},{"author":{"id":1000550,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/44/66/95976d10.jpg","nickname":"一路向前","note":"","ucode":"853B90DF308425","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1829090,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/e8/e2/2bcaef68.jpg","nickname":"王瑞强","note":"","ucode":"DEE4EB5E23433F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":363263,"discussion_content":"如老师说的，MRR查询可以排序，然后批量去查询，比较大概率转换为顺序查询","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617156416,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":289871,"ip_address":""},"score":363263,"extra":""},{"author":{"id":1641326,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJDdmHm6txEVtEXEDibSdIsRLEpghOoMt2kfZHetY9QLWHygicKCfhVoYiaylAZJoXbcCMBhXqMF4icgw/132","nickname":"洗洗睡吧","note":"","ucode":"DE7F8B4CA512F6","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1829090,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/e8/e2/2bcaef68.jpg","nickname":"王瑞强","note":"","ucode":"DEE4EB5E23433F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387704,"discussion_content":"排序后再回表是顺序查询，不排序是随机IO","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628354841,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":289871,"ip_address":""},"score":387704,"extra":""}]},{"author":{"id":1553825,"avatar":"https://static001.geekbang.org/account/avatar/00/17/b5/a1/92a9c282.jpg","nickname":"Tom","note":"","ucode":"BE4C0141D73BE6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":211381,"discussion_content":"那就有个问题不大明白，既然查了name之后，就回表，不看age字段，那联合索引里面的age有什么意义呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584845785,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2035923,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/10/d3/dc3b0f5f.jpg","nickname":"我亲爱的偏执狂","note":"","ucode":"458D8CCF44D36A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1553825,"avatar":"https://static001.geekbang.org/account/avatar/00/17/b5/a1/92a9c282.jpg","nickname":"Tom","note":"","ucode":"BE4C0141D73BE6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282873,"discussion_content":"那是因为那个例子中的条件是 name like &#39;张%&#39;","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1592106329,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":211381,"ip_address":""},"score":282873,"extra":""}]},{"author":{"id":1118374,"avatar":"https://static001.geekbang.org/account/avatar/00/11/10/a6/4d2c933e.jpg","nickname":"K","note":"","ucode":"69831D1EFC083C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":203660,"discussion_content":"我理解是不是老师如果换多个索引来讲解比较好。比如说有两个索引，name和age，那用name查完，以前就不会再查了，但是有了索引下推，就会用age在上一次查询出来的结果集里面再查一遍？不知道对不对啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584063358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":11,"child_discussions":[{"author":{"id":1465412,"avatar":"https://static001.geekbang.org/account/avatar/00/16/5c/44/d07c0865.jpg","nickname":"Geek_d960af","note":"","ucode":"C59AEF44BD8691","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1118374,"avatar":"https://static001.geekbang.org/account/avatar/00/11/10/a6/4d2c933e.jpg","nickname":"K","note":"","ucode":"69831D1EFC083C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297529,"discussion_content":"两个单独的索引应该不会走索引下推。只能是一个联合索引，前面用到了，后面的age 没用到，但是联合索引上有age字段，所以可以顺便判断一波。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1596960601,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":203660,"ip_address":""},"score":297529,"extra":""},{"author":{"id":1809802,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/8a/a2d34896.jpg","nickname":"一元(wx:abley1874)","note":"","ucode":"5E7A33642FC767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1118374,"avatar":"https://static001.geekbang.org/account/avatar/00/11/10/a6/4d2c933e.jpg","nickname":"K","note":"","ucode":"69831D1EFC083C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301500,"discussion_content":"这个同学感觉是完全没理解索引下推，这个东西只能用在联合索引中，上面老师也给出解释了，之所以5.6后的版本支持索引下推也是因为其 API 接口中的参数将联合索引中的其它索引值作为参数传入进函数中进行了比较。\n    再说回来，抛开索引下推不谈，从逻辑上说，非主键索引中的value放的都是主键的值，你通过name索引只能拿到符合name条件的主键的值，通过age索引只能拿到符合age条件的主键值，然后进行归并得到符合最终条件的id。\n    所以，你说的“有了索引下推，就会用age在上一次查询出来的结果集里面再查一遍” 这是显然逻辑上都说不通的呢。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1598541371,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":203660,"ip_address":""},"score":301500,"extra":""},{"author":{"id":2285456,"avatar":"https://static001.geekbang.org/account/avatar/00/22/df/90/0d8864db.jpg","nickname":"少晴","note":"","ucode":"31C290044F3B95","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1465412,"avatar":"https://static001.geekbang.org/account/avatar/00/16/5c/44/d07c0865.jpg","nickname":"Geek_d960af","note":"","ucode":"C59AEF44BD8691","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":320582,"discussion_content":"不是应该而是肯定，两个单列索引，必定是两个B+树，无法进行索引下推\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604405213,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":297529,"ip_address":""},"score":320582,"extra":""}]}]},{"had_liked":false,"id":43822,"user_name":"狼的诱惑","can_delete":false,"product_type":"c1","uid":1257043,"ip_address":"","ucode":"AE89DFC5963C42","user_header":"https://static001.geekbang.org/account/avatar/00/13/2e/53/bf62683f.jpg","comment_is_top":false,"comment_ctime":1543304321,"is_pvip":false,"replies":[{"id":"15750","content":"赞，下次再问你就这么答，棒棒哒","user_name":"作者回复","comment_id":43822,"uid":"1264162","ip_address":"","utype":1,"ctime":1543401800,"user_name_real":"林晓斌"}],"discussion_count":35,"race_medal":0,"score":"1874149045377","product_id":100020801,"comment_content":"踩过坑：有人问我联合索引的技巧，回答的不是很好<br>总结：<br>1、覆盖索引：如果查询条件使用的是普通索引（或是联合索引的最左原则字段），查询结果是联合索引的字段或是主键，不用回表操作，直接返回结果，减少IO磁盘读写读取正行数据<br>2、最左前缀：联合索引的最左 N 个字段，也可以是字符串索引的最左 M 个字符<br>3、联合索引：根据创建联合索引的顺序，以最左原则进行where检索，比如（age，name）以age=1 或 age= 1 and name=‘张三’可以使用索引，单以name=‘张三’ 不会使用索引，考虑到存储空间的问题，还请根据业务需求，将查找频繁的数据进行靠左创建索引。<br>4、索引下推：like &#39;hello%’and age &gt;10 检索，MySQL5.6版本之前，会对匹配的数据进行回表查询。5.6版本后，会先过滤掉age&lt;10的数据，再进行回表查询，减少回表率，提升检索速度<br>","like_count":436,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430512,"discussion_content":"赞，下次再问你就这么答，棒棒哒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543401800,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1661414,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqNRAWnbckJjgov55YgUsviajMjjhAvtTABv8ahJCHe4bRml7XWmFmkVPeZZbXLJ3pzV7VSkQNZlgA/132","nickname":"小菜鸡","note":"","ucode":"D822DC9492D1C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45191,"discussion_content":"我也试了一下，你的这种情况确实是可以用到索引，但是看执行计划Extra一栏，写的是Using index,代表走了覆盖索引。也就是说如果你要查询的字段都在索引中包含了，就会走覆盖索引，这种情况下（建立索引的字段覆盖了所有查询的字段），最左匹配原则不成立，我个人看法。","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1573011457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2280126,"avatar":"https://static001.geekbang.org/account/avatar/00/22/ca/be/3771706c.jpg","nickname":"卖火柴的加菲猫","note":"","ucode":"9146C9E232A156","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1661414,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqNRAWnbckJjgov55YgUsviajMjjhAvtTABv8ahJCHe4bRml7XWmFmkVPeZZbXLJ3pzV7VSkQNZlgA/132","nickname":"小菜鸡","note":"","ucode":"D822DC9492D1C4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":323341,"discussion_content":"这个应该是mysql版本升级之后的优化，只要在索引里面了，都会走覆盖索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604919235,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":45191,"ip_address":""},"score":323341,"extra":""}]},{"author":{"id":1346215,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","nickname":"William","note":"","ucode":"55F5D9DEE485B1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41882,"discussion_content":"针对第三个: 我做了测试, 都走索引了呢.\n\n单以name=‘张三’ 不会使用索引   这个我也测试走索引了呢. \n\n建表语句:\n     CREATE TABLE `city` (\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n  `name` varchar(25) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,\n  `age` int(11) DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  KEY `age_name` (`age`,`name`)\n) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=latin1\n\n\n数据 \n1\t张三\t13\n3\t李四\t13\n\n校验:\nexplain\nselect * from city where age = 13 ;\n\n使用索引:key age_name  \n\n\n\nexplain\nselect * from city where  name  =&#39;李四&#39;\n\n使用索引: age_name \n\n求教???\n \n\n","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1572527119,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":7,"child_discussions":[{"author":{"id":1106464,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e2/20/1b5e8104.jpg","nickname":"String name=null;","note":"","ucode":"B9FE31B598C386","race_medal":4,"user_type":1,"is_pvip":false},"reply_author":{"id":1346215,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","nickname":"William","note":"","ucode":"55F5D9DEE485B1","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":50532,"discussion_content":"因为一共三个字段，一个主键，剩余两个还是组合索引，select *会走组合索引，因为里面就包括了全部表内容","likes_number":19,"is_delete":false,"is_hidden":false,"ctime":1573732327,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":41882,"ip_address":""},"score":50532,"extra":""},{"author":{"id":1335293,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKR3ibELhjgVicCNShZCBwvaDxibnzibggG4wUzVkS2mkDxUBZyIs87nDEdJ7PiahJBVoZcuhQ84RxAziag/132","nickname":"周治慧","note":"","ucode":"7D56C4E66BEE17","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1346215,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","nickname":"William","note":"","ucode":"55F5D9DEE485B1","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":179615,"discussion_content":"当主键索引和联合索引都包含了所有字段的数据的时候,则不会走主键索引来查询,因为主键索引存储的是行记录,加载的数据更多;走普通索引的时候,叶子节点存储的是主键id值,这样一次加载的数据会更多,走普通索引效率比主键索引要高","likes_number":18,"is_delete":false,"is_hidden":false,"ctime":1582244796,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":41882,"ip_address":""},"score":179615,"extra":""},{"author":{"id":1346215,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","nickname":"William","note":"","ucode":"55F5D9DEE485B1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1106464,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e2/20/1b5e8104.jpg","nickname":"String name=null;","note":"","ucode":"B9FE31B598C386","race_medal":4,"user_type":1,"is_pvip":false},"discussion":{"id":180350,"discussion_content":"所以我这个场景是数据库字段被主键索引以及组合索引全覆盖可\n了。导致生效了呗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582292359,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":50532,"ip_address":""},"score":180350,"extra":""}]},{"author":{"id":2365564,"avatar":"https://static001.geekbang.org/account/avatar/00/24/18/7c/91d6dd83.jpg","nickname":"红高粱","note":"","ucode":"0DD331C8E01A81","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335774,"discussion_content":"如果是覆盖索引，你就是不满足左匹配也不一定不扫描索引","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1608302310,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1114255,"avatar":"https://static001.geekbang.org/account/avatar/00/11/00/8f/38e329a3.jpg","nickname":"woshicainiao","note":"","ucode":"BAA25E558D083B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310374,"discussion_content":"表示来过","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1601805744,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1581252,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoc67GT5qpNNVYpZ3zsOsGSQAD2KEVibeicDOowuRAM5AygRGm5v0ysc2SHrsRBjVOr8m19xzf3dcQw/132","nickname":"amell","note":"","ucode":"1D41F15455BA1C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":161526,"discussion_content":"mark","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1580907361,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2941234,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/e1/32/671b3d70.jpg","nickname":"思君满月","note":"","ucode":"1AD6B04DFDDDE4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582868,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659717589,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2316417,"avatar":"https://static001.geekbang.org/account/avatar/00/23/58/81/4058bf11.jpg","nickname":"void","note":"","ucode":"DCFCEDAC25E027","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":561638,"discussion_content":"m","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649688407,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2622364,"avatar":"https://static001.geekbang.org/account/avatar/00/28/03/9c/5a0b8825.jpg","nickname":"Bin Watson","note":"","ucode":"33E3487896E859","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548533,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643249498,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1446592,"avatar":"https://static001.geekbang.org/account/avatar/00/16/12/c0/dd800b84.jpg","nickname":"、逍遥胖胖～","note":"","ucode":"DD01CD1E1927E0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":405852,"discussion_content":"Mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634653395,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2598117,"avatar":"https://static001.geekbang.org/account/avatar/00/27/a4/e5/4b79d246.jpg","nickname":"0rigin","note":"","ucode":"55EC0DE6F9CBEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":405220,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634532534,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2186957,"avatar":"https://static001.geekbang.org/account/avatar/00/21/5e/cd/19201ac6.jpg","nickname":"居昱","note":"","ucode":"13D07D17B1720B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392463,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631013117,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1807895,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/96/17/feba59cb.jpg","nickname":"chris","note":"","ucode":"9A7E70AF646276","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391273,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630382702,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2711249,"avatar":"","nickname":"Geek_60bcde","note":"","ucode":"AD7792E790373F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387759,"discussion_content":"总结的很精炼！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628402636,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1050411,"avatar":"https://static001.geekbang.org/account/avatar/00/10/07/2b/d111e75d.jpg","nickname":"Lion","note":"","ucode":"21AA6AE4A90789","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387224,"discussion_content":"M","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628062159,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2044449,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/32/21/876e6913.jpg","nickname":"bay","note":"","ucode":"3D9F1EEC7DE6E3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387014,"discussion_content":"Mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627952587,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2711249,"avatar":"","nickname":"Geek_60bcde","note":"","ucode":"AD7792E790373F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385601,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627153918,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2366689,"avatar":"","nickname":"Geek_7f2213","note":"","ucode":"21CED50F491C18","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375443,"discussion_content":"总结的不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621663106,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1352674,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a3/e2/439731b2.jpg","nickname":"霍格沃兹小学徒","note":"","ucode":"EB52B060CF9ED9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":368462,"discussion_content":"1不太对，应该联合索引的字段包含需要查询的字段，是包含而不是等于的关系","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618720414,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1605161,"avatar":"https://static001.geekbang.org/account/avatar/00/18/7e/29/3ff55537.jpg","nickname":"舟潇","note":"","ucode":"01380F36DA7560","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365329,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617772243,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1731047,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/GmtqEx7x5hagZtXbd8Xs8ocUuHHLGIgiaqTwTcibPnpla1PVTbed2Ax7ZfzCjN2Qpeyao6ogq7L3icLzSB3vY1rlg/132","nickname":"Chanson","note":"","ucode":"74B3B180B4B953","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352930,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614912407,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2305167,"avatar":"https://static001.geekbang.org/account/avatar/00/23/2c/8f/aa45f6c4.jpg","nickname":"lambda","note":"","ucode":"D1990B7903913B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339642,"discussion_content":"棒棒滴","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609750686,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1676110,"avatar":"https://static001.geekbang.org/account/avatar/00/19/93/4e/f2b891bd.jpg","nickname":"西夏～洛人","note":"","ucode":"9992F77D15539E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":307123,"discussion_content":"咨询个问题，查询结果是联合索引的字段，那么不用回表直接返回结果，是否说明结果不一定要从数据行取，还能从索引值中取？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600504123,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2369545,"avatar":"https://static001.geekbang.org/account/avatar/00/24/28/09/0ac42cff.jpg","nickname":"慕苏","note":"","ucode":"7ED14D00429C21","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1676110,"avatar":"https://static001.geekbang.org/account/avatar/00/19/93/4e/f2b891bd.jpg","nickname":"西夏～洛人","note":"","ucode":"9992F77D15539E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335166,"discussion_content":"是的，没毛病","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608109221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":307123,"ip_address":""},"score":335166,"extra":""}]},{"author":{"id":1465412,"avatar":"https://static001.geekbang.org/account/avatar/00/16/5c/44/d07c0865.jpg","nickname":"Geek_d960af","note":"","ucode":"C59AEF44BD8691","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297534,"discussion_content":"神奇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596961150,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1148422,"avatar":"https://static001.geekbang.org/account/avatar/00/11/86/06/72b01bb7.jpg","nickname":"美美","note":"","ucode":"44CC95C45AF345","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288976,"discussion_content":"第四个不是技巧吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593950218,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1092218,"avatar":"https://static001.geekbang.org/account/avatar/00/10/aa/7a/ae8c247d.jpg","nickname":"指尖以东","note":"","ucode":"1DEE134FE92FD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":272529,"discussion_content":"学习了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590320887,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42510,"user_name":"某、人","can_delete":false,"product_type":"c1","uid":1308784,"ip_address":"","ucode":"ADB42AA12A11C1","user_header":"https://static001.geekbang.org/account/avatar/00/13/f8/70/f3a33a14.jpg","comment_is_top":false,"comment_ctime":1542963553,"is_pvip":false,"replies":[{"id":"15191","content":"回答得很好。<br>1. 没有存，就是一个临时内存，读出来马上判断，然后扫描下一行可以复用<br>2. Server层。 接上面的逻辑，读完以后顺便判断一下够不够limit 的数了，够就结束循环<br>3. 嗯，你很细心，其实它表示的是“可以下推”，实际上是“可以，但没有”😄","user_name":"作者回复","comment_id":42510,"uid":"1264162","ip_address":"","utype":1,"ctime":1542969659,"user_name_real":"林晓斌"}],"discussion_count":27,"race_medal":0,"score":"1070989820257","product_id":100020801,"comment_content":"先回答老师的问题:<br>如果c列上重复率很低的情况下,两个索引都可以不用建。因为如果过滤只剩下几条数据,排序也不影响<br>如果C列重复度比较高,就需要建立(c,b)的联合索引了,来消除排序了。因为在数据量大的情况下,排序是一个非常耗时的操作,<br>很有可能还需要磁盘临时表来做排序。而且如果没有(c,b)联合索引,limit 1仅仅表示返回给客户端一条数据,没有起到限制扫描行数的作用<br>ca列上的索引,由于满足最左前缀,不用加。因为c是固定值,那么a列就是有序的.那么这里limit 1就很好限制了只用精准扫描一条数据.<br>所以有时候如果在where条件建立索引的效率差的情况下,在order by limit这一列建索引也是很好的方案,排好序,在回表,只要过滤出满足条件的limit行,就能及时停止扫描<br>老师我有几个问题:<br>1.using where的时候,需要回表,然后把数据传输给server层,server层来过滤数据。那么这些数据是存在server层的哪个地方呢？<br>2.limit起到限制扫描行数作用并且有using where的时候,limit这个操作时在存储引擎层做的还是在server层做的？<br>3.ICP是不是做得不太好,感觉很多地方没有用到索引下推,都会显示using index condition","like_count":249,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430111,"discussion_content":"回答得很好。\n1. 没有存，就是一个临时内存，读出来马上判断，然后扫描下一行可以复用\n2. Server层。 接上面的逻辑，读完以后顺便判断一下够不够limit 的数了，够就结束循环\n3. 嗯，你很细心，其实它表示的是“可以下推”，实际上是“可以，但没有”😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542969659,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2087193,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKyuuhxu0HH4Ylib3qnK9b9VGXu8I7DPltCwHefo6S92aTpk2ANgYM2ufHlfRqBKmFAhB4rn6AoI3A/132","nickname":"Geek_a8a041","note":"","ucode":"CF9D153FA180E4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294549,"discussion_content":"初学数据库，还不太看得懂，先记录一下，给大佬点赞！","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1595924215,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1123171,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/63/4fb6fee0.jpg","nickname":"深白色","note":"","ucode":"C4B26AB70D8A6D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":195938,"discussion_content":"order by  a走(a,b)主键索引，是不是也只能顺序遍历主键索性？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1583323301,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1194858,"avatar":"https://static001.geekbang.org/account/avatar/00/12/3b/6a/80d9c545.jpg","nickname":"RD","note":"","ucode":"E3947B6E1681AD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":91344,"discussion_content":"问一下，由于联合主键索引ab 满足最左前缀，又因为 c 是固定值所以 a 在 B 树中是升序的，所以对于 ca 那一句，是不是 order by a 这句语句不用写也是可以的？直接 limit 1 即可？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1576828625,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1342647,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEIMXEAN5E36GHAVguQnbNOIicT0IXDk1aYw4l0crtMIRibyBdAicyJo8u1Bqol8qbQso4J0CRd4y4YdA/132","nickname":"Geek_2e8900","note":"","ucode":"ABB7B4977AC7CD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1194858,"avatar":"https://static001.geekbang.org/account/avatar/00/12/3b/6a/80d9c545.jpg","nickname":"RD","note":"","ucode":"E3947B6E1681AD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":131149,"discussion_content":"不写 order by a 的话，最终走 c 的索引。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578829591,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":91344,"ip_address":""},"score":131149,"extra":""},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1194858,"avatar":"https://static001.geekbang.org/account/avatar/00/12/3b/6a/80d9c545.jpg","nickname":"RD","note":"","ucode":"E3947B6E1681AD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342107,"discussion_content":"应该是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610594790,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":91344,"ip_address":""},"score":342107,"extra":""},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1342647,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEIMXEAN5E36GHAVguQnbNOIicT0IXDk1aYw4l0crtMIRibyBdAicyJo8u1Bqol8qbQso4J0CRd4y4YdA/132","nickname":"Geek_2e8900","note":"","ucode":"ABB7B4977AC7CD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342109,"discussion_content":"本来就是走c的索引，c索引中找a。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610594888,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":131149,"ip_address":""},"score":342109,"extra":""}]},{"author":{"id":1795793,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/zxkns28cIAUZIt3WjDb8G26qiccT84d9GMr9ZpbYR60TU1ibqSj9NoYVHlJvGF1kOltkqNDmEfJCqPuYVkue3WHg/132","nickname":"Geek_55e386","note":"","ucode":"5A727F1323C2D0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556770,"discussion_content":"回表为什么不能批量呢. 每次一条数据回表一次不是很耗费资源吗","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1647505440,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":3007210,"avatar":"","nickname":"Geek_a1699c","note":"","ucode":"CF7DB00BE36B77","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1795793,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/zxkns28cIAUZIt3WjDb8G26qiccT84d9GMr9ZpbYR60TU1ibqSj9NoYVHlJvGF1kOltkqNDmEfJCqPuYVkue3WHg/132","nickname":"Geek_55e386","note":"","ucode":"5A727F1323C2D0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574453,"discussion_content":"MRR好像能做到批量去回表查询","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654068398,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":556770,"ip_address":""},"score":574453,"extra":""}]},{"author":{"id":2044268,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/31/6c/73229c94.jpg","nickname":"ww","note":"","ucode":"5B84830DE4F50E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328569,"discussion_content":"你好，想请教个问题，就是server层调用存储引擎层接口时，是把满足sql查询条件语句的记录筛选出来，再一条一条返回给server层吗？如果sql语句中有limit的话，那么server层就会去判断，比如limit 5，那么到了第五条记录，server层就会停止调用？如果是这样的话，那同样地，建立联合索引的话，虽然联合索引的特点保证了有序，那limit的判断还是在server层操作的，也不能限制扫描行数吧？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1606182357,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1308784,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f8/70/f3a33a14.jpg","nickname":"某、人","note":"","ucode":"ADB42AA12A11C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2044268,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/31/6c/73229c94.jpg","nickname":"ww","note":"","ucode":"5B84830DE4F50E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328698,"discussion_content":"引擎层是不能做筛选的.server层调用引擎层获取数据,然后在server层做筛选。有序的情况下,是能做到限制扫描行数的。比如order by id1 limit 5.引擎层就先去id1上取第一条数据,然后返回给server层。接着取下一行,直到取完第5行,server层就会停止调用接口。并把结果集返回给客户端","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1606211840,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":328569,"ip_address":""},"score":328698,"extra":""},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1308784,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f8/70/f3a33a14.jpg","nickname":"某、人","note":"","ucode":"ADB42AA12A11C1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342116,"discussion_content":"赞！问题关键点，引擎层是一次只返回一条记录。见第一章","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1610595931,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":328698,"ip_address":""},"score":342116,"extra":""},{"author":{"id":2118930,"avatar":"https://static001.geekbang.org/account/avatar/00/20/55/12/ec19ad14.jpg","nickname":"人生","note":"","ucode":"3259F341C683E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1308784,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f8/70/f3a33a14.jpg","nickname":"某、人","note":"","ucode":"ADB42AA12A11C1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382502,"discussion_content":"limit起到限制扫描行数作用并且有using where的时候,limit这个操作时在存储引擎层做的还是在server层做的？\n这个问题中，如果查询中还有order by a，这里a有两种情况，\n第一种情况：a没有索引，这种情况下查询是什么流程？是先把所有数据返回给server层，并且告诉引擎曾我没做排序需要你自己进行，然后server层进行排序，然后再limit出前5条数据？\n第二种情况：a能使用索引，那是在引擎层排好序然后再一条一条返回给server层，并且告诉引擎层我做了排序啦，你不用再排序了？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1625620270,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":328698,"ip_address":""},"score":382502,"extra":""}]},{"author":{"id":1518842,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2c/fa/d9ef3e77.jpg","nickname":"牛仔很忙。","note":"","ucode":"5037849220E48D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547185,"discussion_content":"mark\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642573316,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1201022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/53/7e/b6829040.jpg","nickname":"SevenMonths","note":"","ucode":"62A9740FBD1FAE","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393017,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631205657,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065805,"avatar":"https://static001.geekbang.org/account/avatar/00/10/43/4d/5064e14b.jpg","nickname":"我不是陈大雨","note":"","ucode":"7190D3C766A345","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390819,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630057815,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1840097,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEJq1QledRhFicNMRYDJ1ibCveUqlrtIYhDCvAicOmmnia3GPrjjepDZhibXMJ0iabTsibVC2KMZtoIG4A9icg/132","nickname":"xuwen_chen","note":"","ucode":"03C766DEA69DF1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381046,"discussion_content":"m","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624880795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2416834,"avatar":"","nickname":"Geek_351264","note":"","ucode":"C300FE66C94231","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364350,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617455191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1731047,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/GmtqEx7x5hagZtXbd8Xs8ocUuHHLGIgiaqTwTcibPnpla1PVTbed2Ax7ZfzCjN2Qpeyao6ogq7L3icLzSB3vY1rlg/132","nickname":"Chanson","note":"","ucode":"74B3B180B4B953","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352933,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614912609,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1146153,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIbxgUM37rN7rwZC9rUzleQWwqsOrqmUpibu9CMDImnuB2oEQ8p00PicYqBr81OvDkukCmzpUcM7FZw/132","nickname":"McTavish","note":"","ucode":"D391381A90113E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351878,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614510499,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342096,"discussion_content":"而且如果没有(c,b)联合索引,limit 1仅仅表示返回给客户端一条数据,没有起到限制扫描行数的作用---这个没懂，为啥没索引，就没有限制扫描行数？加了索引就限制了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610593030,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1101516,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ce/cc/ae1b5dd5.jpg","nickname":"paxos","note":"","ucode":"1497E5B3C84B77","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342428,"discussion_content":"原题是where c order by b limit 1。\n主要原因在order by上，要获取满足c,而且b值最小的行。\n如果只有c的索引，没有c b索引， 那需要扫描所有满足c条件的行，进行排序后才能得到b值最小的行。 \n有c b索引后，在索引中已经对 b 进行了排序，取出满足c的第一行自然就是对应条件下b值最小的行，就不需要继续往后扫描行","likes_number":21,"is_delete":false,"is_hidden":false,"ctime":1610679832,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":342096,"ip_address":""},"score":342428,"extra":""}]},{"author":{"id":1127332,"avatar":"https://static001.geekbang.org/account/avatar/00/11/33/a4/9be19ae3.jpg","nickname":"LossingDawn","note":"","ucode":"75E65EA3A272BA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294460,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595898291,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1323652,"avatar":"","nickname":"sibyl","note":"","ucode":"0D142011860D69","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287169,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593393622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1074805,"avatar":"https://static001.geekbang.org/account/avatar/00/10/66/75/54bb858e.jpg","nickname":"life is short, enjoy more.","note":"","ucode":"3B5F37D30790A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":27649,"discussion_content":"你好，我想请教个问题~\n既然(c,a)索引还没有建立，为什么(c,a)上的索引就已经满足最左前缀了呢？\n是因为已经建立了(a,b)的索引，其次又在order by中用到了a列，所以才满足了最左前缀吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570672933,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1357623,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJmBKrLvqOIXDDbj3ocEIJzqsQx2e5VLDBSX6LmofYtprWwKaVAmHUqU2z3mjREHX8n9eLLiavlPg/132","nickname":"wg1993","note":"","ucode":"D5112FEFDB1DF7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1074805,"avatar":"https://static001.geekbang.org/account/avatar/00/10/66/75/54bb858e.jpg","nickname":"life is short, enjoy more.","note":"","ucode":"3B5F37D30790A7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":83400,"discussion_content":"个人理解，a,c可以看成两个单独的索引，并不是最左前缀原则，而是优化器会自己选择先执行的索引。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576423389,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":27649,"ip_address":""},"score":83400,"extra":""},{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1074805,"avatar":"https://static001.geekbang.org/account/avatar/00/10/66/75/54bb858e.jpg","nickname":"life is short, enjoy more.","note":"","ucode":"3B5F37D30790A7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":229344,"discussion_content":"c本身就加了索引，可以说是最左前缀；order by a走的是(a,b)主键索引","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1586620436,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":27649,"ip_address":""},"score":229344,"extra":""}]}]},{"had_liked":false,"id":42311,"user_name":"老杨同志","can_delete":false,"product_type":"c1","uid":1246199,"ip_address":"","ucode":"3F334F0CFD3DE6","user_header":"https://static001.geekbang.org/account/avatar/00/13/03/f7/3a493bec.jpg","comment_is_top":false,"comment_ctime":1542939408,"is_pvip":false,"discussion_count":11,"race_medal":0,"score":"1010860253968","product_id":100020801,"comment_content":"表记录<br>--a--|--b--|--c--<br>  1     2     3<br>  1     3     2<br>  1     4     3<br>  2     1     3<br>  2     2     2<br>  2     3     4<br>主键 a，b的聚簇索引组织顺序相当于 order by a,b <br>也就是先按a排序，再按b排序，c无序<br>  <br>索引 ca 的组织是先按c排序，在按a排序，同时记录主键<br>--c--|--a--|--主键ab--<br>  2     1      1,3<br>  2     2      2,2<br>  3     1      1,2<br>  3     1      1,4<br>  3     2      2,1<br>  4     2      2,3<br>索引 cb 的组织是先按c排序，在按b排序，同时记录主键<br>--c--|--b--|--c--|--主键ab--<br>  2     1      2,2<br>  2     3      1,3<br>  3     1      2,1<br>  3     2      1,2<br>  3     4      1,4<br>  4     3      2,3<br>  <br>对于下面的语句 <br>select ... from geek where c=N order by a  <br>走ca,cb索引都能定位到满足c=N主键<br>而且主键的聚簇索引本身就是按order by a,b排序，无序重新排序。所以ca可以去掉<br><br>select ... from geek where c=N order by b <br>这条sql如果只有 c单个字段的索引，定位记录可以走索引，但是order by b的顺序与主键顺序不一致，需要额外排序<br>cb索引可以把排序优化调<br><br>  ","like_count":235,"discussions":[{"author":{"id":2697700,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/LFJZ4x47rvShGhsePLIxc8EzdlBxAmVAIjJ2FQZ4NEpo8E4JCZQEOb2NIfOuiaQLL6Otkt7W3Rmu6Tv3AkgYdRA/132","nickname":"键盘上的魔术","note":"","ucode":"A731D721FB8D3A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385022,"discussion_content":"有cb可以去掉ca，但这里有个细节：因为还有一列d，所以select *势必会回表。既然大家都要回表，到主键索引树上查询并根据a排序，那么主键ab索引已经可以根据a排序，是没有必要加ca索引\n如果没有这个d，就算有主键ab，ca联合索引还是会更好些。\nselect * from T where c=N order by a。 ","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1626852896,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":3007210,"avatar":"","nickname":"Geek_a1699c","note":"","ucode":"CF7DB00BE36B77","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2697700,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/LFJZ4x47rvShGhsePLIxc8EzdlBxAmVAIjJ2FQZ4NEpo8E4JCZQEOb2NIfOuiaQLL6Otkt7W3Rmu6Tv3AkgYdRA/132","nickname":"键盘上的魔术","note":"","ucode":"A731D721FB8D3A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574456,"discussion_content":"多谢，看上面的评论一直有这点疑惑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654068521,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":385022,"ip_address":""},"score":574456,"extra":""}]},{"author":{"id":1296063,"avatar":"https://static001.geekbang.org/account/avatar/00/13/c6/bf/52b3f71d.jpg","nickname":"dawn","note":"","ucode":"1757B28F1EF5C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583016,"discussion_content":"假如有三条数据，分别是(2,2,3)，（1,2,3），只有主键索引和索引c，当c=3时，不是回表两次找到a=2和a=1的数据嘛，为啥不用ca索引呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659875628,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1641319,"avatar":"https://static001.geekbang.org/account/avatar/00/19/0b/67/dc49a1a8.jpg","nickname":"在路上","note":"","ucode":"E1184E76B14431","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578155,"discussion_content":"看的老杨同志的这个评论，我终于理解了联合索引 为什么要有最左边的字段才会走索引😀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656549648,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1489703,"avatar":"https://static001.geekbang.org/account/avatar/00/16/bb/27/689f6974.jpg","nickname":"mgw","note":"","ucode":"068170549A5FB1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541814,"discussion_content":"那如果a不是自增的ca索引还有用吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640574599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1985052,"avatar":"","nickname":"Geek_d91c40","note":"","ucode":"894F653E204836","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337826,"discussion_content":"cb的排序书写错了，应该是\n2 2 2,2\n2 3 1,3\n3 1 2,1\n3 2 1,2\n3 4 1,4\n4 3 2,3","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609081035,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336634,"avatar":"https://static001.geekbang.org/account/avatar/00/14/65/3a/bc801fb2.jpg","nickname":"mqray","note":"","ucode":"15664507AD7033","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300880,"discussion_content":"怎么感觉老哥说的很在理呢 第一次知道联合组建索引的先后顺序对应着索引树的排序先后","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598286867,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2036333,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/6ZM5RHVBe8pVGoibpPHVM5TZTbqS4u4ckiaHoItk1LIhTfCEYbH7LYiaWJDvTiaga34MQQ3xicIZ0vsAkoSKRvY8F3A/132","nickname":"Geek_b4bb35","note":"","ucode":"257EE15A137445","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284116,"discussion_content":"加上ca也会回表查吧，因为查询使用的是二级索引c","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592447308,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2030860,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er3UZQu2BwYNhQ970oVKD7lx65Xk4cJEw2VZ7m5TLicwd9D38tcibaHYU8iapyHTKnAEmmoic7GW3U0aQ/132","nickname":"jyf","note":"","ucode":"D66F9C1E4FEBC0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282742,"discussion_content":"ca去掉后select ... from geek where c=N order by a会多一次回表的操作吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592061786,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1016940,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/84/6c/effc3a5a.jpg","nickname":"澎湃哥","note":"","ucode":"A8D9A857AAB879","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2030860,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er3UZQu2BwYNhQ970oVKD7lx65Xk4cJEw2VZ7m5TLicwd9D38tcibaHYU8iapyHTKnAEmmoic7GW3U0aQ/132","nickname":"jyf","note":"","ucode":"D66F9C1E4FEBC0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289827,"discussion_content":"就算有 (c, a) 联合索引的话，select * 也要回表呀，回表和这对索引没关系吧。","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1594220891,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":282742,"ip_address":""},"score":289827,"extra":""},{"author":{"id":2736955,"avatar":"https://static001.geekbang.org/account/avatar/00/29/c3/3b/c9ae499f.jpg","nickname":"impwang","note":"","ucode":"149DF7CA8D56C9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2030860,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er3UZQu2BwYNhQ970oVKD7lx65Xk4cJEw2VZ7m5TLicwd9D38tcibaHYU8iapyHTKnAEmmoic7GW3U0aQ/132","nickname":"jyf","note":"","ucode":"D66F9C1E4FEBC0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580233,"discussion_content":"这里的问题不在于回表，在于检索和排序","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658031419,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":282742,"ip_address":""},"score":580233,"extra":""}]}]},{"had_liked":false,"id":54216,"user_name":"不二很二","can_delete":false,"product_type":"c1","uid":1305409,"ip_address":"","ucode":"83B3DACC432862","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epHiaHaVRLsqRpT2aJRN7xZkmcZgglgwREhgrPs6vicXSpKI0FhG8ODvXDRVMqeLXuCo3ZpHaG36foA/132","comment_is_top":false,"comment_ctime":1545808499,"is_pvip":false,"replies":[{"id":"19613","content":"好问题，<br>第一个要树搜素5次<br>第二个搜索一次","user_name":"作者回复","comment_id":54216,"uid":"1264162","ip_address":"","utype":1,"ctime":1545815722,"user_name_real":"林晓斌"}],"discussion_count":32,"race_medal":0,"score":"976503384691","product_id":100020801,"comment_content":"老师，下面两条语句有什么区别，为什么都提倡使用2:<br>1.select * from T where k in(1,2,3,4,5) <br>2.select * from T where k between  1 and 5<br>","like_count":227,"discussions":[{"author":{"id":1194858,"avatar":"https://static001.geekbang.org/account/avatar/00/12/3b/6a/80d9c545.jpg","nickname":"RD","note":"","ucode":"E3947B6E1681AD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319101,"discussion_content":"如果让你写这两种搜索会怎么写。1.in 内部的数字是未知的，不知道是否有序，是否连续等，所以你只能一个一个去看。2.一个已知的升序、范围查询，只需定位第一个值，后面遍历就行了。","likes_number":71,"is_delete":false,"is_hidden":false,"ctime":1603943182,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1692320,"avatar":"https://static001.geekbang.org/account/avatar/00/19/d2/a0/c8714628.jpg","nickname":"独一无二","note":"","ucode":"A7DE0EA2BD8FE3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42344,"discussion_content":"看下b+tree结构，其叶子节点增加了范围查询。","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1572654191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1463873,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIO2hQgGGq9htCBJNNAMH33VFvCBicwOjwCVXTg3WxYBkI3of3ibfQWib4ibF8m2y9vORT5mSibuqw5LNA/132","nickname":"带头大哥","note":"","ucode":"DA49D606C1E6DF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":141391,"discussion_content":"搜索树的次数和回表的次数，第一个sql搜索树5次，第二个搜索数1次，回表都是5次是这样理解吗","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1579417890,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":6,"child_discussions":[{"author":{"id":1335293,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKR3ibELhjgVicCNShZCBwvaDxibnzibggG4wUzVkS2mkDxUBZyIs87nDEdJ7PiahJBVoZcuhQ84RxAziag/132","nickname":"周治慧","note":"","ucode":"7D56C4E66BEE17","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1463873,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIO2hQgGGq9htCBJNNAMH33VFvCBicwOjwCVXTg3WxYBkI3of3ibfQWib4ibF8m2y9vORT5mSibuqw5LNA/132","nickname":"带头大哥","note":"","ucode":"DA49D606C1E6DF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":179647,"discussion_content":"第二个也可能是搜索两次1和5各一次,如果说一次的话可能是区间较短直接通过指针来定位了不走二叉树的即1,5的数据在一个叶子节点上","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1582246336,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":141391,"ip_address":""},"score":179647,"extra":""},{"author":{"id":1882517,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/b9/95/cabab54b.jpg","nickname":"tong","note":"","ucode":"966DEDE81081D0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1335293,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKR3ibELhjgVicCNShZCBwvaDxibnzibggG4wUzVkS2mkDxUBZyIs87nDEdJ7PiahJBVoZcuhQ84RxAziag/132","nickname":"周治慧","note":"","ucode":"7D56C4E66BEE17","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544292,"discussion_content":"咳咳：即使1和5不在同一个叶子节点上面，也是搜索B+树一次；因为叶子节点也是双向循环链表，如果也是搜索两次的话，b+数就失去范围查询高性能的意思了呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641459347,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":179647,"ip_address":""},"score":544292,"extra":""},{"author":{"id":1986739,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/50/b3/9269cd59.jpg","nickname":"LWD","note":"","ucode":"DDA444DB113C01","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1882517,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/b9/95/cabab54b.jpg","nickname":"tong","note":"","ucode":"966DEDE81081D0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553996,"discussion_content":"不一定。因为可能相邻得很远没必要一个个扫过去。不如重新进行一次树搜索来得快","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646183314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":544292,"ip_address":""},"score":553996,"extra":""}]},{"author":{"id":1390997,"avatar":"https://static001.geekbang.org/account/avatar/00/15/39/95/a72ef023.jpg","nickname":"木子","note":"","ucode":"66B9C493F25B11","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4499,"discussion_content":"第二个sql为啥只搜索一次呢🤔??","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1565493786,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":8,"child_discussions":[{"author":{"id":1039466,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/dc/6a/b5478b65.jpg","nickname":"Ab","note":"","ucode":"8E9261782F025D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1390997,"avatar":"https://static001.geekbang.org/account/avatar/00/15/39/95/a72ef023.jpg","nickname":"木子","note":"","ucode":"66B9C493F25B11","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6984,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567240971,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4499,"ip_address":""},"score":6984,"extra":""},{"author":{"id":1652085,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKORTofsU89GYKtywquzKuEiabvZnEOonfMYKuCPlo8GDlXqZuJdBicu0XtlaeodH4BnmHV1kldSAwQ/132","nickname":"未来怎样","note":"","ucode":"4E54EB62595B27","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1390997,"avatar":"https://static001.geekbang.org/account/avatar/00/15/39/95/a72ef023.jpg","nickname":"木子","note":"","ucode":"66B9C493F25B11","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7778,"discussion_content":"我的理解是第二个mysql会认为是一个连续的范围，通过一次查找找到开始位置之后，继续往后遍历即可。回表次数二者一致","likes_number":14,"is_delete":false,"is_hidden":false,"ctime":1567671309,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4499,"ip_address":""},"score":7778,"extra":""},{"author":{"id":1282715,"avatar":"https://static001.geekbang.org/account/avatar/00/13/92/9b/65f98192.jpg","nickname":"Wh1","note":"","ucode":"6D28506B99A285","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1652085,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKORTofsU89GYKtywquzKuEiabvZnEOonfMYKuCPlo8GDlXqZuJdBicu0XtlaeodH4BnmHV1kldSAwQ/132","nickname":"未来怎样","note":"","ucode":"4E54EB62595B27","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":22085,"discussion_content":"这不是因为B+树的叶子节点有一个链表指针么","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1569575247,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":7778,"ip_address":""},"score":22085,"extra":""}]},{"author":{"id":1147895,"avatar":"https://static001.geekbang.org/account/avatar/00/11/83/f7/a24b7242.jpg","nickname":"简单","note":"","ucode":"19A01CB4B9ED8C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367937,"discussion_content":"这个原来如此之前，一直优化怎么处理，但是不清楚原因。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1618499145,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434395,"discussion_content":"好问题，\n第一个要树搜素5次\n第二个搜索一次","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1545815722,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":3,"child_discussions":[{"author":{"id":2873900,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/da/2c/cdd92f3f.jpg","nickname":"wáng","note":"","ucode":"9BFEA73AD7680D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1986739,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/50/b3/9269cd59.jpg","nickname":"LWD","note":"","ucode":"DDA444DB113C01","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557495,"discussion_content":"你说的不对哦，你对MRR的理解有误。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1647835217,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":553998,"ip_address":""},"score":557495,"extra":""},{"author":{"id":3007210,"avatar":"","nickname":"Geek_a1699c","note":"","ucode":"CF7DB00BE36B77","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2873900,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/da/2c/cdd92f3f.jpg","nickname":"wáng","note":"","ucode":"9BFEA73AD7680D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574459,"discussion_content":"大佬展开说说","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654068834,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":557495,"ip_address":""},"score":574459,"extra":""},{"author":{"id":1986739,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/50/b3/9269cd59.jpg","nickname":"LWD","note":"","ucode":"DDA444DB113C01","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2873900,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/da/2c/cdd92f3f.jpg","nickname":"wáng","note":"","ucode":"9BFEA73AD7680D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587050,"discussion_content":"谢谢纠正；确实理解错了，目前我都理解是mrr最主要的能力是让每个页只读一次，避免重复读；顺序io在innodb好像是体现不出来的，即使主键id有序，对应的磁盘块物理也是无序的，即io机械操作还是可能存在来回的无用操作。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662713526,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":557495,"ip_address":"广东"},"score":587050,"extra":""}]},{"author":{"id":2640700,"avatar":"https://static001.geekbang.org/account/avatar/00/28/4b/3c/576eae7f.jpg","nickname":"朝歌","note":"","ucode":"C28BF3D7AD9D62","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377692,"discussion_content":"我记得pg是做了位图，in效率比较高，好像只需要一次。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1622777997,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1437618,"avatar":"https://static001.geekbang.org/account/avatar/00/15/ef/b2/5064e98a.jpg","nickname":"随风","note":"","ucode":"7D243B6946E08D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":51153,"discussion_content":"没看懂，为啥是一次？？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573817942,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1437618,"avatar":"https://static001.geekbang.org/account/avatar/00/15/ef/b2/5064e98a.jpg","nickname":"随风","note":"","ucode":"7D243B6946E08D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":81096,"discussion_content":"因为B+树叶子节点是顺序存储的，而且前一个子节点也有指向后一个子节点的指针","likes_number":26,"is_delete":false,"is_hidden":false,"ctime":1576221475,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":51153,"ip_address":""},"score":81096,"extra":""},{"author":{"id":2766787,"avatar":"","nickname":"Geek_71d0f8","note":"","ucode":"9CFD89F53A3625","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1437618,"avatar":"https://static001.geekbang.org/account/avatar/00/15/ef/b2/5064e98a.jpg","nickname":"随风","note":"","ucode":"7D243B6946E08D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394394,"discussion_content":"如何1和5在一个数据页上的话，就可以通过指针直接定位。如果是在不同的数据页的话，需要两次搜索树","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631867426,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":51153,"ip_address":""},"score":394394,"extra":""}]},{"author":{"id":1621678,"avatar":"https://static001.geekbang.org/account/avatar/00/18/be/ae/00d0d3fe.jpg","nickname":"申宁廷","note":"","ucode":"146519CA0851A8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4814,"discussion_content":"是在k索引树上搜索一次找到主键id，回表次数还是一样的吧，望老师解答","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1565750482,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1621678,"avatar":"https://static001.geekbang.org/account/avatar/00/18/be/ae/00d0d3fe.jpg","nickname":"申宁廷","note":"","ucode":"146519CA0851A8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":81098,"discussion_content":"最终都是查出5个ID，肯定都要回表5次，所以我认为二者回表次数是一样的","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1576221606,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4814,"ip_address":""},"score":81098,"extra":""}]},{"author":{"id":1529210,"avatar":"https://static001.geekbang.org/account/avatar/00/17/55/7a/d44df1d6.jpg","nickname":"freesocean","note":"","ucode":"CAD4C80CF569D3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531006,"discussion_content":"我的理解：in每个数都要进行磁盘读取判断，然后回表，而between只需要找一次，找到某个1-5的数，然后根据索引的顺序遍历链表即可。所以效率很高，回表次数一样，主要区别是在查找时磁盘IO的次数。前者是后者的五倍。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637202832,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2047882,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/3f/8a/dd0c712f.jpg","nickname":"ggg","note":"","ucode":"272D6F5AF3A7AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":345169,"discussion_content":"赞！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611675386,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342196,"discussion_content":"不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610613145,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43765,"user_name":"melon","can_delete":false,"product_type":"c1","uid":1023773,"ip_address":"","ucode":"7A80C20EBCAAA4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9f/1d/ec173090.jpg","comment_is_top":false,"comment_ctime":1543290367,"is_pvip":false,"replies":[{"id":"15638","content":"非常赞，尤其是第三段对“军规”的理解👍🏿","user_name":"作者回复","comment_id":43765,"uid":"1264162","ip_address":"","utype":1,"ctime":1543297761,"user_name_real":"林晓斌"}],"discussion_count":9,"race_medal":0,"score":"843356880383","product_id":100020801,"comment_content":"关于联合索引我的理解是这样的：比如一个联合索引(a,b,c)，其实质是按a,b,c的顺序拼接成了一个二进制字节数组，索引记录是按该字节数组逐字节比较排序的，所以其是先按a排序，再按b排序，再按c排序的，至于其为什么是按最左前缀匹配的也就显而易见了，没看过源码，不知道理解的对不对，希望老师指正。<br><br>给表创建索引时，应该创建哪些索引，每个索引应该包含哪些字段，字段的顺序怎么排列，这个问题没有标准答案，需要根据具体的业务来做权衡。不过有些思路还是可供参考的：<br>1.既然是一个权衡问题，没有办法保证所有的查询都高效，那就要优先保证高频的查询高效，较低频次的查询也尽可能的使用到尽可能长的最左前缀索引。可以借助pt-query-digest来采样统计业务查询语句的访问频度，可能需要迭代几次才能确定联合索引的最终字段及其排序。<br>2.业务是在演进的，所以索引也是要随着业务演进的，并不是索引建好了就万事大吉了，业务发生变化时，我们需要重新审视当初建的索引是不是还依然高效，依然能满足业务需求。<br>3.业内流传的有一些mysql 军规，其实这些并不是真正的军规，只是典型场景下的最佳实践。真正的军规其实就一条：高效的效满足业务需求。比如有个军规规定一个表上的索引数不超过5个，但如果我们现在有一些历史数据表、历史日志表，我们很明确的知道这些表上不会再有数据写入了，但我们的查询需求很多也很多样化，那我们在这些表上的索引数能不能超过5个？当然是没有任何问题的。当然关于这份军规还是要认真看一下的，但看的重点不是去记住它，而是要弄明白每一条军规它为什么这么规定，它这样规定是基于什么考虑，适用的场景和前提是什么，这些都弄明白了，你记不记得住这些军规都无所谓了，因为你已经把它溶化到了你的血液中，具体到自己的具体业务时游刃有余将是必然。","like_count":196,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430488,"discussion_content":"非常赞，尤其是第三段对“军规”的理解👍🏿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543297761,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1526355,"avatar":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","nickname":"moonfox","note":"","ucode":"902BFF40EFA9FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333791,"discussion_content":"联合索引列的值应该不是拼接上转二进制的，转完二进制怎么区分数字与字符？怎么再下沉？都连在一起下沉后再拆开么？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1607614518,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2600052,"avatar":"https://static001.geekbang.org/account/avatar/00/27/ac/74/6b00cdd3.jpg","nickname":"游zy","note":"","ucode":"DD5CDECC3BC97A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582270,"discussion_content":"mark\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659343324,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065805,"avatar":"https://static001.geekbang.org/account/avatar/00/10/43/4d/5064e14b.jpg","nickname":"我不是陈大雨","note":"","ucode":"7190D3C766A345","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390820,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630058002,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2132323,"avatar":"https://static001.geekbang.org/account/avatar/00/20/89/63/ca423855.jpg","nickname":"JabinLi","note":"","ucode":"FA75D74418DBEA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389996,"discussion_content":"mark 很不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629560988,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342194,"discussion_content":"mark  心得不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610612603,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1809802,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/8a/a2d34896.jpg","nickname":"一元(wx:abley1874)","note":"","ucode":"5E7A33642FC767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301586,"discussion_content":"你确定不能吗？索引下推应该是将联合索引中的所有索引都作为参数传入遍历函数中了才对呀！不应该说范围查询后面的索引就失效了呀，你是不是查询语言写得有问题哦\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598582106,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1039225,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/db/79/9426c6ce.jpg","nickname":"Super~琪琪","note":"","ucode":"5A0FCD19B24EAF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301328,"discussion_content":"那按照二进制字节排好序之后， a=1 and b＞3 and c=2 ，b是范围查询为啥c就不能使用索引了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598491221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1636059,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/P5XJib9wlWdMrs7Z6XWGic42mxUMSsB08Sluiat17w1AoVxYrtDI9X7zCfARtFwjGiaM0kIMYAkPpqia0ZhAh8GVCNg/132","nickname":"Geek_be5c57","note":"","ucode":"B086B6B019C148","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1039225,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/db/79/9426c6ce.jpg","nickname":"Super~琪琪","note":"","ucode":"5A0FCD19B24EAF","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":310861,"discussion_content":"这时候最左前缀在 b 处断了。会返回所有 a=1 and b>3 的记录，接着再过滤 c!=2 的。所以在索引下推的情况下，会用到 c 进行过滤；反之亦然。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1602081763,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":301328,"ip_address":""},"score":310861,"extra":""}]}]},{"had_liked":false,"id":51527,"user_name":"司徒公子","can_delete":false,"product_type":"c1","uid":1013140,"ip_address":"","ucode":"6532BEB1362EF3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/94/8f0ada2c.jpg","comment_is_top":false,"comment_ctime":1545194260,"is_pvip":false,"replies":[{"id":"18966","content":"……… 面试官是魔鬼吗😄<br><br>我怀疑他是想说用lock table 来实现，但是这样只能实现串行化隔离级别，<br><br>其它隔离都实现不了。<br><br>但是因为mysiam不支持崩溃恢复，所以即使用lock table硬实现，也是问题多多：<br><br>ACID里面， 原子性和持久性做不到；<br>隔离性只能实现基本用不上的串行化；<br>一致性在正常运行的时候依赖于串行化，在异常崩溃的时候也不能保证。<br><br>这样实现的事务不要也罢。<br><br>你这么答复面试官，应该能加到分吧😄","user_name":"作者回复","comment_id":51527,"uid":"1264162","ip_address":"","utype":1,"ctime":1545334075,"user_name_real":"林晓斌"}],"discussion_count":16,"race_medal":0,"score":"525531204372","product_id":100020801,"comment_content":"面试官问：说下怎么让mysql的myisam引擎支持事务，网上搜了下，也没有结果！","like_count":122,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132460,"discussion_content":"面试官脑子有坑，被门挤了，直接怼回去，你为啥不用innodb","likes_number":13,"is_delete":false,"is_hidden":false,"ctime":1578910434,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1302149,"avatar":"https://static001.geekbang.org/account/avatar/00/13/de/85/da98e390.jpg","nickname":"tyy","note":"","ucode":"C3B436E6562744","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352235,"discussion_content":"那公司大概率不招人的 故意搞你的","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1614660154,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1069548,"avatar":"https://static001.geekbang.org/account/avatar/00/10/51/ec/3d51d5e6.jpg","nickname":"上校","note":"","ucode":"DEE1CEE9E4C680","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296505,"discussion_content":"我觉得再加上innnodb的事务实现也说一遍，应该是满分","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1596556364,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1276434,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/eCbn0LY9oIzlw6X1FSBibbdLjZZTk4ial6TedJWP2whYCb1Is9aEAJojZnHFyd5FHyeCKc2c14zibvQLBRicOxd3Dg/132","nickname":"归途","note":"","ucode":"A9DA6CFFB46FBF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3571,"discussion_content":"好想吐槽，如果用myisam实现事务，那innodb存在的意义是啥？","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1564592469,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1228424,"avatar":"https://static001.geekbang.org/account/avatar/00/12/be/88/8d15796f.jpg","nickname":"John","note":"","ucode":"A46AF2906C38C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309961,"discussion_content":"这事务、不要也罢","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1601543343,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433499,"discussion_content":"……… 面试官是魔鬼吗😄\n\n我怀疑他是想说用lock table 来实现，但是这样只能实现串行化隔离级别，\n\n其它隔离都实现不了。\n\n但是因为mysiam不支持崩溃恢复，所以即使用lock table硬实现，也是问题多多：\n\nACID里面， 原子性和持久性做不到；\n隔离性只能实现基本用不上的串行化；\n一致性在正常运行的时候依赖于串行化，在异常崩溃的时候也不能保证。\n\n这样实现的事务不要也罢。\n\n你这么答复面试官，应该能加到分吧😄","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1545334075,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1023045,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKlicKgCNuhqMmpXJPzanXaXBuA1XaAHmNEM3PcDKVicSLK4NQaCjGJYOF0DCPMYI5tgMmo5hXbFPpg/132","nickname":"kavi","note":"","ucode":"595ED2E9A598E5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549314,"discussion_content":"面试官应该想知道，innoDB 怎支持事务的？redo log 回滚段，结合这些，告诉他myisam没法支持事务的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643850083,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2186957,"avatar":"https://static001.geekbang.org/account/avatar/00/21/5e/cd/19201ac6.jpg","nickname":"居昱","note":"","ucode":"13D07D17B1720B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392464,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631013500,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1731047,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/GmtqEx7x5hagZtXbd8Xs8ocUuHHLGIgiaqTwTcibPnpla1PVTbed2Ax7ZfzCjN2Qpeyao6ogq7L3icLzSB3vY1rlg/132","nickname":"Chanson","note":"","ucode":"74B3B180B4B953","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352934,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614912719,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343945,"discussion_content":"要想让一个存储引擎支持事务，那么server层是否可以做变通？串行化（也就是读写锁）是否可以接受，如果不能接受，还是换回InnoDB","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611216295,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336634,"avatar":"https://static001.geekbang.org/account/avatar/00/14/65/3a/bc801fb2.jpg","nickname":"mqray","note":"","ucode":"15664507AD7033","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300883,"discussion_content":"面试官应该是考察知识广度把","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598287205,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1237583,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e2/4f/df01f65e.jpg","nickname":"Danfēng","note":"","ucode":"E5B3451F1D0441","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":280995,"discussion_content":"哈哈哈，人家都造出来innodb支持事务了，非要用mysiam去自己造轮子，你问他是不是钱多没地方花。简单，把mysql团队招进来开发就行了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591658745,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2020865,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/d6/01/eaa50203.jpg","nickname":"zft","note":"","ucode":"74DEC5FBA610B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":276410,"discussion_content":"绝对的魔鬼0_0","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590856230,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1254645,"avatar":"https://static001.geekbang.org/account/avatar/00/13/24/f5/64ca8ddd.jpg","nickname":"凌轩","note":"","ucode":"1BC5A205F3B9C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":155051,"discussion_content":"面试确实遇到过，不过问的是用mongoDB的话如何实现事务。当时答得不好，现在想想，如果场景少的话，用锁表实现串行化，如果场景多的话，换mysql。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580213001,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1810051,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK0uyg1IicbEhLwsgM2A2ROoyVdWdmUqZfQfs6G67w9m3hdRNBMOQJatQoACj3qNGgj2KVIgricaYiaQ/132","nickname":"木得感情的编码机器","note":"","ucode":"9C6CD47ADCB8E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1254645,"avatar":"https://static001.geekbang.org/account/avatar/00/13/24/f5/64ca8ddd.jpg","nickname":"凌轩","note":"","ucode":"1BC5A205F3B9C1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":166520,"discussion_content":"实现事务我觉得可以分为两部分来说，一是事务隔离，二是失败回滚。事务隔离还要看做到什么级别，如果是串行化还比较简单，可以借助redis实现锁表来达到串行处理。如果要做到可重复读级别，那么可以在事务开始时把取到的数据存储到一个临时表里，事务内的后续操作都是操作临时表，最后commit时再把临时表合并到原表。\n使用临时表方案，失败回滚也好做了，只要事务失败，把临时表销魂即可。","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1581406368,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":155051,"ip_address":""},"score":166520,"extra":""},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1810051,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK0uyg1IicbEhLwsgM2A2ROoyVdWdmUqZfQfs6G67w9m3hdRNBMOQJatQoACj3qNGgj2KVIgricaYiaQ/132","nickname":"木得感情的编码机器","note":"","ucode":"9C6CD47ADCB8E6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342200,"discussion_content":"应该需要这么考虑。ACID还差哪些+ 隔离级别。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610613357,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":166520,"ip_address":""},"score":342200,"extra":""}]}]},{"had_liked":false,"id":42221,"user_name":"gether","can_delete":false,"product_type":"c1","uid":1015780,"ip_address":"","ucode":"224698C2C609EA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/e4/990dcd8e.jpg","comment_is_top":false,"comment_ctime":1542934339,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"495464173379","product_id":100020801,"comment_content":" ca索引可以去掉，cb索引可以保留。<br>ca索引，通过索引对数据进行筛选，回表的时候，a本身就是主键索引，所以可以保证有序；<br>cb索引，b上并没有索引，ab索引也无法满足最左匹配原则，可以保留加快排序速度。<br>但如果查询结果很少的话，内存中排序也够了吧，也没必要建立cb索引。老师，我理解的对不？","like_count":115,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132458,"discussion_content":"数据少可以这么搞，但是从原理上来说，还是要建立cb的。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1578910089,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1554995,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ba/33/2d83d174.jpg","nickname":"时光守护者-基兰","note":"","ucode":"F0B0887B1979D2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380479,"discussion_content":"但是内存中每次都需要排序，磁盘的话数据不发生变化索引树就不变了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1624521554,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342197,"discussion_content":"言简意赅","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1610613211,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1228560,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/10/b7974690.jpg","nickname":"BD","note":"","ucode":"A95CF8C3EDC228","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289612,"discussion_content":"优秀","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1594164423,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82931,"user_name":"Geek_cxz","can_delete":false,"product_type":"c1","uid":1482158,"ip_address":"","ucode":"AAEC9BDEE492E3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q8tVHVrialm0x9iaF9aLoibq8MQ7oI1QPZMHz4EabKPkHdy6gFklQTUXIEAp3iaRKficRLhCravEp56u6euXMOgavbA/132","comment_is_top":false,"comment_ctime":1554350055,"is_pvip":false,"replies":[{"id":"30011","content":"你的发现是对的，<br>因为覆盖索引的目的就是”不回表“，<br>所以只有索引包含了where条件部分和select返回部分的所有字段，才能实现这个目的哦","user_name":"作者回复","comment_id":82931,"uid":"1264162","ip_address":"","utype":1,"ctime":1554431842,"user_name_real":"林晓斌"}],"discussion_count":5,"race_medal":0,"score":"456820883431","product_id":100020801,"comment_content":"老师，请问一下，覆盖索引必须要覆盖所有的查询条件中的列吗，我经过试验发现，覆盖索引不能只覆盖要查询的列，同时必须将WHERE后面的查询条件的列都覆盖，能解释一下这个原因吗？","like_count":106,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445782,"discussion_content":"你的发现是对的，\n因为覆盖索引的目的就是”不回表“，\n所以只有索引包含了where条件部分和select返回部分的所有字段，才能实现这个目的哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554431842,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":2,"child_discussions":[{"author":{"id":2853618,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/8a/f2/6c6f7886.jpg","nickname":"。。","note":"","ucode":"A52A6043D27D87","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":543459,"discussion_content":"老师，我有点不理解，假设表中 (a,b,c) 是联合索引。\n1.如果查询的是：select b from t where a=1，这个的话符合最左前缀，也不需要回表，因此满足索引覆盖了。\n2.如果查询的是：select c from t where a=1，这个的话，索引肯定是能用到 a的，a 的索引树中又记录了 c 的值，因此我认为也是不需要回表的，也是满足索引覆盖了。\n3.如果查询的是：select a from t where b=1，由于b没有索引，所以应该是进行了全部扫描。\n不知道我理解的对不对，还请老师看的回复一下哈。 ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1641142213,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":445782,"ip_address":""},"score":543459,"extra":""},{"author":{"id":2694205,"avatar":"https://static001.geekbang.org/account/avatar/00/29/1c/3d/76465ee4.jpg","nickname":"摘星","note":"","ucode":"55D8CAFC938F91","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2853618,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/8a/f2/6c6f7886.jpg","nickname":"。。","note":"","ucode":"A52A6043D27D87","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578051,"discussion_content":"第三点，我认为不是b没有索引，是因为 没办法用到b这个索引，为什么没用到呢？根据最左匹配原则，a都没有用上 b自然没办法用上。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1656489013,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":543459,"ip_address":""},"score":578051,"extra":""}]},{"author":{"id":1050411,"avatar":"https://static001.geekbang.org/account/avatar/00/10/07/2b/d111e75d.jpg","nickname":"Lion","note":"","ucode":"21AA6AE4A90789","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387225,"discussion_content":"M\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628062312,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342206,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610614631,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42109,"user_name":"北天魔狼","can_delete":false,"product_type":"c1","uid":1188144,"ip_address":"","ucode":"C22623ECEB8DBA","user_header":"https://static001.geekbang.org/account/avatar/00/12/21/30/8ecce1e1.jpg","comment_is_top":false,"comment_ctime":1542928679,"is_pvip":true,"discussion_count":3,"race_medal":0,"score":"396679919911","product_id":100020801,"comment_content":"老师，我是非科班做开发的小白（公司没有DBA），最近一直认为数据库和程序运行环境都比开发语言本身重要。尤其是数据库，数据行上亿必须在数据库上想办法。也买了一本高性能MySQL，看完类型，索引，查询，后面就看不懂了。特别期待后面的章节，六点上地铁，看的入迷差点坐过站","like_count":92,"discussions":[{"author":{"id":1147456,"avatar":"https://static001.geekbang.org/account/avatar/00/11/82/40/02ae9409.jpg","nickname":"Learner","note":"","ucode":"289EBF7A445808","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":404012,"discussion_content":"为啥我觉得是反过来的。。。业务最重要吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634209611,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1261530,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKDKsicmpne7xQNocwRQ80DDZ3CzjsDoVIcH0SBiaYzS056oVOx4pEeEVeCaXE3QtsjUIEI0x1xQVTw/132","nickname":"muggle","note":"","ucode":"D78087BCAD0860","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1147456,"avatar":"https://static001.geekbang.org/account/avatar/00/11/82/40/02ae9409.jpg","nickname":"Learner","note":"","ucode":"289EBF7A445808","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413684,"discussion_content":"业务能让你在这家公司立足，但技术才能让你走上更高的舞台","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1636542937,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":404012,"ip_address":""},"score":413684,"extra":""},{"author":{"id":2884328,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/02/e8/67595089.jpg","nickname":"Zero","note":"","ucode":"663AAD54C4D8F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1261530,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKDKsicmpne7xQNocwRQ80DDZ3CzjsDoVIcH0SBiaYzS056oVOx4pEeEVeCaXE3QtsjUIEI0x1xQVTw/132","nickname":"muggle","note":"","ucode":"D78087BCAD0860","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545003,"discussion_content":"结合业务场景分析问题，，业务是前提","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641799294,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":413684,"ip_address":""},"score":545003,"extra":""}]}]},{"had_liked":false,"id":57791,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1546912178,"is_pvip":false,"replies":[{"id":"21109","content":"赞，很好的总结","user_name":"作者回复","comment_id":57791,"uid":"1264162","ip_address":"","utype":1,"ctime":1547117808,"user_name_real":"林晓斌"}],"discussion_count":11,"race_medal":0,"score":"306489590194","product_id":100020801,"comment_content":"【备忘】<br><br>locust 童鞋 like  &#39;j&#39; 或 &#39;j%&#39; 或 &#39;%j&#39; 或 &#39;%j%&#39; 使用索引的问题：<br>a. 只有 id 和 uname 字段。<br>b. 添加了 age  字段，即 id、uname、age 字段。<br><br>----<br><br>老师回复：<br>好问题，这个是关于“用索引” 和 “用索引快速定位记录”的区别。<br><br>简单回答：“用索引”有一种用法是 “顺序扫描索引”。<br><br>----<br><br>自己理解：<br>1. like &#39;j&#39; 或 &#39;j%&#39; 可以使用索引，并且快速定位记录。<br>2. like &#39;%j&#39; 或 &#39;%j%&#39;，只是在二级索引树上遍历查找记录，并不能快速定位（扫描了整棵索引树）。<br>3. 只有 id 和 uname 字段时，上述 4 种 like 查询，uname 索引能满足 id 和 uname 的查询情况，不需要回表，所以选择了使用 uname 的索引树解决问题。<br>4. 添加了 age 但无联合索引 (uname, age) 的情况，如果使用 uname 索引树，需要回表。在 like &#39;%j&#39; 或 &#39;%j%&#39; 直接扫描主键索引树，现象就是没有使用 uname 索引。<br>5. 添加了 age 字段，也添加了 (uname, age) 索引，和第 3 点同理，使用覆盖索引就能满足 select * 的字段查询，不需要回表，因此使用了 (uname, age) 索引树。但是只有 like &#39;j&#39; 和 &#39;j%&#39;<br>能快速定位记录，而 like &#39;%j&#39; 和 &#39;%j%&#39; 也能使用该索引树，但是不能快速定位，需要顺序遍历。","like_count":71,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435763,"discussion_content":"赞，很好的总结","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547117808,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8928,"discussion_content":"能快速定位记录，而 like &#39;%j&#39; 和 &#39;%j%&#39; 也能使用该索引树，但是不能快速定位，需要顺序遍历。👍🏻。这个用explain的时候会被迷惑，以为用了索引了为啥还那么慢\n","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1568104360,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1018200,"avatar":"","nickname":"一眼万年","note":"","ucode":"7B0823E39AE809","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":254397,"discussion_content":"可以看扫描行数","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1588322519,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":8928,"ip_address":""},"score":254397,"extra":""},{"author":{"id":2287841,"avatar":"https://static001.geekbang.org/account/avatar/00/22/e8/e1/6045b299.jpg","nickname":"LPF","note":"","ucode":"036C552D7251E9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":323632,"discussion_content":"关于uname like %X,%X%的匹配问题？\n%一般不走索引树，原因是不满足最左原则，而是直接顺序遍历整个主键索引树或者二级索引树。\n那什么时候走主键索引树什么时候走二级索引树呢？\n当uname是联合索引时并且你查找的字段也在联合索引中？走二级索引树，因为叶子节点的数据很少，索引树的内存就很少，如果走主键索引树，那就是整个表数据，内存占用大。\n当uname是普通索引时，你查询的字段不是索引时？那就走主键索引，避免回表。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1604977292,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":8928,"ip_address":""},"score":323632,"extra":""}]},{"author":{"id":1680841,"avatar":"https://static001.geekbang.org/account/avatar/00/19/a5/c9/eff43871.jpg","nickname":"蜗牛同学","note":"","ucode":"C05CE331AE3C5A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560461,"discussion_content":"“只有 like &#39;j&#39; 和 &#39;j%&#39; 能快速定位记录，而 like &#39;%j&#39; 和 &#39;%j%&#39; 也能使用该索引树，但是不能快速定位，需要顺序遍历”，为什么没有满足最左原则就不能快速定位？😭","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649337628,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2178492,"avatar":"https://static001.geekbang.org/account/avatar/00/21/3d/bc/8aeac834.jpg","nickname":"小提手","note":"","ucode":"24E3EBE451794F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548307,"discussion_content":"mark\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643122010,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1238337,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e5/41/ffe533ba.jpg","nickname":"尚帝","note":"","ucode":"6F1703FD5A23A0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534951,"discussion_content":"Mark，索引可以快速定位和顺序扫描，问题的核心是能否快速定位，或者能否在顺序扫描的情况下索引覆盖","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638323283,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2238823,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTICOGl2xGmQibT8AGttyT07yVIEpuX4NDMsDNQbD70ejvR0gkj94ic1zrAEc312Xzv3mIlib5Yt6piaRg/132","nickname":"suma","note":"","ucode":"EB09F8BB9B54D2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376167,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621999602,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005574,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/58/06/6a9c089b.jpg","nickname":"Lee大树","note":"","ucode":"3C2012F6D21698","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344614,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611538690,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2350043,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/sFkJYPdIIjHfxgCxAh1D4Pyk1jAueicu7egY1PUvR8egs12gAXxmO51YT6Bk7NianYRyMRPTpd3kKWXvZ8TEkRyw/132","nickname":"Geek_7794e2","note":"","ucode":"2F749554FEA20D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":334672,"discussion_content":"like后面的&#39;%j&#39;/ &#39;%j%&#39; 这两种情况用不到索引，也不用主键索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607933320,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1117597,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0d/9d/58d09086.jpg","nickname":"达达队长","note":"","ucode":"1C3F2E4F6B7637","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":243079,"discussion_content":"插眼","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587519196,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42529,"user_name":"suhui","can_delete":false,"product_type":"c1","uid":1155326,"ip_address":"","ucode":"53BD826C1164F9","user_header":"https://static001.geekbang.org/account/avatar/00/11/a0/fe/ac5a62f3.jpg","comment_is_top":false,"comment_ctime":1542965886,"is_pvip":false,"replies":[{"id":"15185","content":"是的👍🏿","user_name":"作者回复","comment_id":42529,"uid":"1264162","ip_address":"","utype":1,"ctime":1542968995,"user_name_real":"林晓斌"}],"discussion_count":6,"race_medal":0,"score":"280715840126","product_id":100020801,"comment_content":"老师你好，上篇文章中有人提问“数据量很大的时候，二级索引比主键索引更快”，这个结论是只有在使用覆盖索引时才成立吧，非覆盖索引还是要回表查询。","like_count":65,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430118,"discussion_content":"是的👍🏿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542968995,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3004460,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/d8/2c/89b9ce29.jpg","nickname":"oscar","note":"","ucode":"1C397FB2016332","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583589,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660218615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"四川"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2630997,"avatar":"https://static001.geekbang.org/account/avatar/00/28/25/55/5145bdf5.jpg","nickname":"无尽光芒","note":"","ucode":"EC9E15128FE8E7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375431,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621650264,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342207,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610614676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2287841,"avatar":"https://static001.geekbang.org/account/avatar/00/22/e8/e1/6045b299.jpg","nickname":"LPF","note":"","ucode":"036C552D7251E9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":323635,"discussion_content":"主要原因还是二级索引直接定位，主键索引怎么直接定位。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604977412,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2694205,"avatar":"https://static001.geekbang.org/account/avatar/00/29/1c/3d/76465ee4.jpg","nickname":"摘星","note":"","ucode":"55D8CAFC938F91","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2287841,"avatar":"https://static001.geekbang.org/account/avatar/00/22/e8/e1/6045b299.jpg","nickname":"LPF","note":"","ucode":"036C552D7251E9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578054,"discussion_content":"并不全是，假设一个表有二十六个字段，其中：a 主键，(a,b,c)联合索引，执行select a，b，c where a = 1时，用到的是联合索引，这也是索引覆盖，因为主表 的字段多 导致页分裂，不停要进行io操作，而联合索引并没有那么夸张，io操作少 。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656489467,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":323635,"ip_address":""},"score":578054,"extra":""}]}]},{"had_liked":false,"id":42105,"user_name":"benson42","can_delete":false,"product_type":"c1","uid":1310525,"ip_address":"","ucode":"64372BD83BA2E9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/CqF8eiaanNteyu2U7FibYicjoz9626ARmtbCK5WMdGeoTB8eTGlPPIJ6NoAT252cvzSsplWS3byPc7dnsMk65DCsA/132","comment_is_top":false,"comment_ctime":1542928049,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"276420834993","product_id":100020801,"comment_content":"这两个语句，你可以用这个语句代替 ： alter table T engine=InnoDB。可以解释一下原理吗。","like_count":64,"discussions":[{"author":{"id":1335293,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKR3ibELhjgVicCNShZCBwvaDxibnzibggG4wUzVkS2mkDxUBZyIs87nDEdJ7PiahJBVoZcuhQ84RxAziag/132","nickname":"周治慧","note":"","ucode":"7D56C4E66BEE17","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":179639,"discussion_content":"重建表的流程\n1.创建一个临时表,扫描主键索引得到行数据,根据数据页生成B+树,存储到临时文件中(此时页中数据变的紧凑,不会存在空洞)\n2.新数据写入原表的同时记录到row_log中(这样保证拷贝过程数据不丢失)\n3.临时文件生成完之后,在将row_log操作到临时文件中,这样两者的数据则一致了\n4.最后临时文件替换原表的数据文件\n\n整个过程是online,获取MDL写锁->降级为MDL读锁->DDL->升级为MDL写锁->释放MDL锁","likes_number":42,"is_delete":false,"is_hidden":false,"ctime":1582245912,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2216479,"avatar":"","nickname":"Geek_7a96ab","note":"","ucode":"32B1FBEDC9221C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1335293,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKR3ibELhjgVicCNShZCBwvaDxibnzibggG4wUzVkS2mkDxUBZyIs87nDEdJ7PiahJBVoZcuhQ84RxAziag/132","nickname":"周治慧","note":"","ucode":"7D56C4E66BEE17","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":314997,"discussion_content":"row_log是什么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603226612,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":179639,"ip_address":""},"score":314997,"extra":""},{"author":{"id":2399421,"avatar":"https://static001.geekbang.org/account/avatar/00/24/9c/bd/6da43bdb.jpg","nickname":"刘剑","note":"","ucode":"7B2CFD70541ADB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2216479,"avatar":"","nickname":"Geek_7a96ab","note":"","ucode":"32B1FBEDC9221C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340575,"discussion_content":"我猜是redo log","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1610067012,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":314997,"ip_address":""},"score":340575,"extra":""}]},{"author":{"id":1731047,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/GmtqEx7x5hagZtXbd8Xs8ocUuHHLGIgiaqTwTcibPnpla1PVTbed2Ax7ZfzCjN2Qpeyao6ogq7L3icLzSB3vY1rlg/132","nickname":"Chanson","note":"","ucode":"74B3B180B4B953","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352937,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614912954,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2034702,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/0c/0e/0e4a6265.jpg","nickname":"水星人丶","note":"","ucode":"D4F72B47B0A316","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":283471,"discussion_content":"厉害","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592278330,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42533,"user_name":"壹笙☞漂泊","can_delete":false,"product_type":"c1","uid":1092577,"ip_address":"","ucode":"3A0B8EC881665C","user_header":"https://static001.geekbang.org/account/avatar/00/10/ab/e1/f6b921fa.jpg","comment_is_top":false,"comment_ctime":1542966495,"is_pvip":false,"replies":[{"id":"15282","content":"是的，查询语句的where里面各个判断调换顺序没关系的","user_name":"作者回复","comment_id":42533,"uid":"1264162","ip_address":"","utype":1,"ctime":1542995310,"user_name_real":"林晓斌"}],"discussion_count":2,"race_medal":0,"score":"242061135071","product_id":100020801,"comment_content":"总结：<br>回表：回到主键索引树搜索的过程，称为回表<br>覆盖索引：某索引已经覆盖了查询需求，称为覆盖索引，例如：select ID from T where k between 3 and 5<br>在引擎内部使用覆盖索引在索引K上其实读了三个记录，R3~R5(对应的索引k上的记录项)，但对于MySQL的Server层来说，它就是找引擎拿到了两条记录，因此MySQL认为扫描行数是2<br>最左前缀原则：B+Tree这种索引结构，可以利用索引的&quot;最左前缀&quot;来定位记录<br>只要满足最左前缀，就可以利用索引来加速检索。<br>最左前缀可以是联合索引的最左N个字段，也可以是字符串索引的最左M个字符<br>第一原则是：如果通过调整顺序，可以少维护一个索引，那么这个顺序往往就是需要优先考虑采用的。<br>索引下推：在MySQL5.6之前，只能从根据最左前缀查询到ID开始一个个回表。到主键索引上找出数据行，再对比字段值。<br>MySQL5.6引入的索引下推优化，可以在索引遍历过程中，对索引中包含的字段先做判断，直接过滤掉不满足条件的记录，减少回表次数。<br><br>课后题：<br>ca没有必要，cb有必要。因为a、b联合索引，直接查询b不会使用主键联合索引。<br><br>疑问：<br>以前看过某些文章上面写：如果查询顺序和联合索引的顺序不一致，优化器会自动做优化，是这样的吗老师？","like_count":56,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430120,"discussion_content":"是的，查询语句的where里面各个判断调换顺序没关系的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542995310,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1240793,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ee/d9/e20a3470.jpg","nickname":"l","note":"","ucode":"637A4400182827","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331823,"discussion_content":"想问下优化器会自动优化实在哪个版本实现的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606987704,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71169,"user_name":"D.L","can_delete":false,"product_type":"c1","uid":1339142,"ip_address":"","ucode":"E6DA186C4BB972","user_header":"https://static001.geekbang.org/account/avatar/00/14/6f/06/82d8bdfb.jpg","comment_is_top":false,"comment_ctime":1551276087,"is_pvip":false,"replies":[{"id":"25487","content":"好问题<br><br>1. 是的<br>2. 流程是这样的：<br>   a) 把 a&gt;5 and b=&#39;123&#39;传入引擎，<br>   b)引擎找到第一个a&gt;5的行（这里是快速定位），如果发现b&lt;&gt;&#39;123&#39;,找下一个，直到满足b=&#39;123&#39;, <br>  c)把找到的行返回给server层， server层根据a是否小于10决定要不要取下一个","user_name":"作者回复","comment_id":71169,"uid":"1264162","ip_address":"","utype":1,"ctime":1551284549,"user_name_real":"林晓斌"}],"discussion_count":10,"race_medal":0,"score":"229184542775","product_id":100020801,"comment_content":"老师您好：针对索引下推有两个问题请教您<br>1.之前一般认为range查询比如&quot;a &gt; 5 and b = &#39;123&#39;&quot;在联合索引（a,b）中b是不起作用的，在ICP下是不是意味着b就可以起到作用了，我们还是应该尽量将查询中用到的字段放入联合索引中。<br>2.针对1的问题，“a &gt; 5 and a &lt; 10 and b=&#39;123&#39;”在ICP作用下的执行过程是什么样子的？","like_count":53,"discussions":[{"author":{"id":1194858,"avatar":"https://static001.geekbang.org/account/avatar/00/12/3b/6a/80d9c545.jpg","nickname":"RD","note":"","ucode":"E3947B6E1681AD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":91404,"discussion_content":"这个语句应该会查询5 次吧，如何这个语句改为 a between 5 and 10 and b = &#39;123&#39;是不是只会查询 1 次，只要快速定位到 5，然后循环链表5-10，然后索引下推，然后直接返回数据即可呢？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1576832130,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441024,"discussion_content":"好问题\n\n1. 是的\n2. 流程是这样的：\n   a) 把 a&amp;gt;5 and b=&amp;#39;123&amp;#39;传入引擎，\n   b)引擎找到第一个a&amp;gt;5的行（这里是快速定位），如果发现b&amp;lt;&amp;gt;&amp;#39;123&amp;#39;,找下一个，直到满足b=&amp;#39;123&amp;#39;, \n  c)把找到的行返回给server层， server层根据a是否小于10决定要不要取下一个","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1551284549,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1690841,"avatar":"https://static001.geekbang.org/account/avatar/00/19/cc/d9/68948dbe.jpg","nickname":"Hopeful","note":"","ucode":"360842559EA404","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309581,"discussion_content":"为啥我都看不懂呢\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1601357815,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1652085,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKORTofsU89GYKtywquzKuEiabvZnEOonfMYKuCPlo8GDlXqZuJdBicu0XtlaeodH4BnmHV1kldSAwQ/132","nickname":"未来怎样","note":"","ucode":"4E54EB62595B27","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7796,"discussion_content":"问题二的执行过程有个疑问：为什么不先用a>5 and a<10 定位范围，然后判断 b<>&#39;123&#39;呢？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567677045,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1652085,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKORTofsU89GYKtywquzKuEiabvZnEOonfMYKuCPlo8GDlXqZuJdBicu0XtlaeodH4BnmHV1kldSAwQ/132","nickname":"未来怎样","note":"","ucode":"4E54EB62595B27","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":29097,"discussion_content":">5 &amp; < 10 无法遍历 n 叉树吧。从实现上来说。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570726776,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":7796,"ip_address":""},"score":29097,"extra":""},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":132467,"discussion_content":"应该可以理解成between 5 and 10，这样就可以查一次，然后再下推b!=123，然后再回表操作。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578911222,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":29097,"ip_address":""},"score":132467,"extra":""},{"author":{"id":1889026,"avatar":"","nickname":"红颜铭心","note":"","ucode":"18F94E5444C71A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":239161,"discussion_content":"ICP应该是针对索引的单条记录进行的，如果这条语句的后边再加上一条limit 1，是不是就多遍历数据了，并会做不必要的下推判断。\nICP工作流程应该是：\n1.存储引擎层->索引先定位一条数据，索引条件判断若满足返回Server层\n2.Server层->Server层需要判断是否还需要再取下一行，若不需要就结束循环；若需要，调用存储引擎层再次取数。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1587280270,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":132467,"ip_address":""},"score":239161,"extra":""}]},{"author":{"id":1135528,"avatar":"https://static001.geekbang.org/account/avatar/00/11/53/a8/abc96f70.jpg","nickname":"return","note":"","ucode":"42B8A3380DF04B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371992,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620117583,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1889026,"avatar":"","nickname":"红颜铭心","note":"","ucode":"18F94E5444C71A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":239167,"discussion_content":"server是否继续取行有时还会因为net_buffer空间不足产生等待，所以取行数据的频率还是要由server控制","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587280788,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1123043,"avatar":"https://static001.geekbang.org/account/avatar/00/11/22/e3/510b69f9.jpg","nickname":"benny","note":"","ucode":"E2F30AF0C808D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":52324,"discussion_content":"如果将符合两个条件中每个条件的结果id集合先取出来 然后在用跳表求交集 是不是更快？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574039280,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42797,"user_name":"WL","can_delete":false,"product_type":"c1","uid":1173771,"ip_address":"","ucode":"6277DCD776B87E","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/0b/1171ac71.jpg","comment_is_top":false,"comment_ctime":1543047805,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"164751805053","product_id":100020801,"comment_content":"把该讲内容总结为几个问题, 大家复习的时候可以先尝试回答这些问题检查自己的掌握程度:<br><br>\t1. <br>select * from T where k betwee 3 and 5 这条语句的执行流程是什么样的?<br>\t2. <br>回表的概念是什么?<br>\t3. <br>索引覆盖的概念是什么, 索引覆盖的优点是什么?<br>\t4. <br>最左前缀原则的概念是什么? 说明最左前缀原则的执行过程.<br>\t5. <br>索引下推的概念是什么? MySQL 5.6 的下推优化是怎么做的? <br><br>","like_count":38,"discussions":[{"author":{"id":2668694,"avatar":"https://static001.geekbang.org/account/avatar/00/28/b8/96/716ba431.jpg","nickname":"苏成","note":"","ucode":"80A8E7B243DD73","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573615,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653548470,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42285,"user_name":"HwangZHen","can_delete":false,"product_type":"c1","uid":1215449,"ip_address":"","ucode":"E2BC782AFEF742","user_header":"https://static001.geekbang.org/account/avatar/00/12/8b/d9/c03fbd11.jpg","comment_is_top":false,"comment_ctime":1542937444,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"138981890916","product_id":100020801,"comment_content":"包含主键后应该是cab，根据最左匹配原则，cb是有必要的，ca没有必要","like_count":32,"discussions":[{"author":{"id":2055624,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/5d/c8/7ece6f4b.jpg","nickname":"蹦蹦","note":"","ucode":"D20A4CA503B868","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296691,"discussion_content":"确实，看了下一篇的答疑后，老师说你的回复言简意赅，我再来看，理解了，谢谢：）","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1596622665,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42672,"user_name":"skyWalker","can_delete":false,"product_type":"c1","uid":1099464,"ip_address":"","ucode":"DB9D3916B1DA0F","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/c8/3b15c098.jpg","comment_is_top":false,"comment_ctime":1543017023,"is_pvip":false,"replies":[{"id":"15285","content":"有三种可能，<br>1.只选a, 然后用b过滤<br>2. 只选b ，然后用a过滤<br>3.选a和b,然后两个单独跑出来的结果取交集<br><br>优化器选择的策略是数据分布","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543029700,"ip_address":"","comment_id":42672,"utype":1}],"discussion_count":9,"race_medal":0,"score":"108917199423","product_id":100020801,"comment_content":"老师你好，我想问一下如果一张表有ab两个单独的索引字段，在一条查询语句中where a=”” and b=””，优化器阶段会选择哪个索引，还是两个索引都走？","like_count":25,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430154,"discussion_content":"有三种可能，\n1.只选a, 然后用b过滤\n2. 只选b ，然后用a过滤\n3.选a和b,然后两个单独跑出来的结果取交集\n\n优化器选择的策略是数据分布","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543029700,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1361288,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIldyrF8Gz5gUFn4lFfA5VDR8N0FShahUEiayyH4l5RNNloQ4R7KoePGR8MePINqicmFjSb02FoVjIw/132","nickname":"akuan","note":"","ucode":"742DFF98C8F50E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584428,"discussion_content":"目前发现第三种情况往往都要比1、2要慢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660812888,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1135528,"avatar":"https://static001.geekbang.org/account/avatar/00/11/53/a8/abc96f70.jpg","nickname":"return","note":"","ucode":"42B8A3380DF04B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371994,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620117685,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1722041,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/46/b9/834d003b.jpg","nickname":"啦啦啦","note":"","ucode":"6A31CDDA7FD3F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":276524,"discussion_content":"会有的，mysql中有个index merge，两个索引都会用到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590895062,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1361288,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIldyrF8Gz5gUFn4lFfA5VDR8N0FShahUEiayyH4l5RNNloQ4R7KoePGR8MePINqicmFjSb02FoVjIw/132","nickname":"akuan","note":"","ucode":"742DFF98C8F50E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1722041,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/46/b9/834d003b.jpg","nickname":"啦啦啦","note":"","ucode":"6A31CDDA7FD3F6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584425,"discussion_content":"这种大概率会比走单独一个索引慢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660812817,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":276524,"ip_address":"上海"},"score":584425,"extra":""}]},{"author":{"id":1034120,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c7/88/a2e42dc8.jpg","nickname":"波波","note":"","ucode":"F63725D3416CC5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":236929,"discussion_content":"老师，第3种情况会有吗，在别的地方看到说一个简单查询只会使用到一个索引。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587130039,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":2308104,"avatar":"https://static001.geekbang.org/account/avatar/00/23/38/08/df42980c.jpg","nickname":"文🔪冬🐟🐑的不二心老人","note":"","ucode":"1DDB6D4D1890BA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1034120,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c7/88/a2e42dc8.jpg","nickname":"波波","note":"","ucode":"F63725D3416CC5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332158,"discussion_content":"同问，一条sql语句不是只能使用一个最优索引吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607078631,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":236929,"ip_address":""},"score":332158,"extra":""},{"author":{"id":1336951,"avatar":"https://static001.geekbang.org/account/avatar/00/14/66/77/194ba21d.jpg","nickname":"lzh","note":"","ucode":"C3D83DF4230109","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2308104,"avatar":"https://static001.geekbang.org/account/avatar/00/23/38/08/df42980c.jpg","nickname":"文🔪冬🐟🐑的不二心老人","note":"","ucode":"1DDB6D4D1890BA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352226,"discussion_content":"都说单独跑出来取交集咯","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614656245,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":332158,"ip_address":""},"score":352226,"extra":""},{"author":{"id":2308104,"avatar":"https://static001.geekbang.org/account/avatar/00/23/38/08/df42980c.jpg","nickname":"文🔪冬🐟🐑的不二心老人","note":"","ucode":"1DDB6D4D1890BA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1336951,"avatar":"https://static001.geekbang.org/account/avatar/00/14/66/77/194ba21d.jpg","nickname":"lzh","note":"","ucode":"C3D83DF4230109","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543593,"discussion_content":"意思是1和2分别出来的结果，然后再取交集？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641216929,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":352226,"ip_address":""},"score":543593,"extra":""}]}]},{"had_liked":false,"id":215767,"user_name":"BugBean","can_delete":false,"product_type":"c1","uid":1834181,"ip_address":"","ucode":"B51232281AD9BC","user_header":"https://static001.geekbang.org/account/avatar/00/1b/fc/c5/ff8b770e.jpg","comment_is_top":false,"comment_ctime":1589099927,"is_pvip":false,"replies":[{"id":"79839","content":"有这么用的哈<br>主从延迟其实也不会增大很多，后面章节会介绍到 change buffer的优化<br><br>只是说如果从库重做的时候，系统要记得把索引再给加上😆","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1589104935,"ip_address":"","comment_id":215767,"utype":1}],"discussion_count":3,"race_medal":0,"score":"104668315031","product_id":100020801,"comment_content":"老师，突然萌生一个想法，不知道靠不靠谱哈。\b建立索引会增加insert和update时的消耗，但是能加快查询，如果做读写分离，主库不建立索引，从库建立索引，带来的风险是主从同步的时候延迟会更加大，不知道这种想法靠不靠谱呢","like_count":24,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494549,"discussion_content":"有这么用的哈\n主从延迟其实也不会增大很多，后面章节会介绍到 change buffer的优化\n\n只是说如果从库重做的时候，系统要记得把索引再给加上😆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589104935,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2133834,"avatar":"https://static001.geekbang.org/account/avatar/00/20/8f/4a/a340734f.jpg","nickname":"平凡","note":"","ucode":"5F7D49235A9598","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378780,"discussion_content":"至少主库update语句的where条件要加索引，不然直接锁全表了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1623399469,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1075466,"avatar":"https://static001.geekbang.org/account/avatar/00/10/69/0a/969ea120.jpg","nickname":"Tobin","note":"","ucode":"E3AFF20B7966A9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414256,"discussion_content":"事务里读如何解决？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636703678,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61762,"user_name":"石头","can_delete":false,"product_type":"c1","uid":1345054,"ip_address":"","ucode":"3E7E345A7150D3","user_header":"https://static001.geekbang.org/account/avatar/00/14/86/1e/100b4132.jpg","comment_is_top":false,"comment_ctime":1547794478,"is_pvip":false,"replies":[{"id":"21916","content":"嗯嗯，因为有新同学过来，大家看文章肯定会有疑问的，好问题很多，回答起来有积极性的O(∩_∩)O","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547802828,"ip_address":"","comment_id":61762,"utype":1}],"discussion_count":2,"race_medal":0,"score":"100332042286","product_id":100020801,"comment_content":"老师太尽责了。这篇11月的文章。老师1中旬了 还在回复。<br>仔细看了评论区绝大多数的问题。感觉又吸收了好多。都是真实业务的使用场景","like_count":23,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436981,"discussion_content":"嗯嗯，因为有新同学过来，大家看文章肯定会有疑问的，好问题很多，回答起来有积极性的O(∩_∩)O","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547802828,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3007210,"avatar":"","nickname":"Geek_a1699c","note":"","ucode":"CF7DB00BE36B77","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574473,"discussion_content":"文章看30分钟，评论吸收3小时","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654074395,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58029,"user_name":"w","can_delete":false,"product_type":"c1","uid":1318306,"ip_address":"","ucode":"DB837CAE2FB7C7","user_header":"https://static001.geekbang.org/account/avatar/00/14/1d/a2/ef8758c9.jpg","comment_is_top":false,"comment_ctime":1546962635,"is_pvip":false,"replies":[{"id":"20904","content":"对","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546966403,"ip_address":"","comment_id":58029,"utype":1}],"discussion_count":7,"race_medal":0,"score":"96036243147","product_id":100020801,"comment_content":"老师看了这么多回答有一个问题想确认一下。对于二级索引C，会默认和主键做联合索引。所以索引c的排序为cab，索引cb的排序顺序为cba。我这么理解对吗？","like_count":22,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435872,"discussion_content":"对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546966403,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1295609,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJRFRX8kNzNet7FibNvtavbVpAwK09AhIhrib9k762qWtH6mre8ickP7hM5mgZC4ytr8NnmIfmAhxMSQ/132","nickname":"老大不小","note":"","ucode":"35BCDD3CB13467","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585804,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661833190,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1296063,"avatar":"https://static001.geekbang.org/account/avatar/00/13/c6/bf/52b3f71d.jpg","nickname":"dawn","note":"","ucode":"1757B28F1EF5C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583020,"discussion_content":"是不是可以这样理解，二级索引下的叶子节点，会按照主键顺序进行组织，所以你看起来是cab联合索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659876351,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1826213,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/dd/a5/bdae6d4a.jpg","nickname":"poppy","note":"","ucode":"A275687C2CDE9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551577,"discussion_content":"cbab","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645064310,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1096397,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ba/cd/1f91aa44.jpg","nickname":"KK","note":"","ucode":"14C0858C413E00","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":356515,"discussion_content":"mark\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615615024,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1314724,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0f/a4/0b49469f.jpg","nickname":"木子00","note":"","ucode":"8F78CA722EB29B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305242,"discussion_content":"学到了。还有这种操作啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599825095,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2020865,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/d6/01/eaa50203.jpg","nickname":"zft","note":"","ucode":"74DEC5FBA610B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":276415,"discussion_content":"插眼","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590856958,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42132,"user_name":"工资不交税","can_delete":false,"product_type":"c1","uid":1110795,"ip_address":"","ucode":"C3ECBCC5622B65","user_header":"https://static001.geekbang.org/account/avatar/00/10/f3/0b/0128ae45.jpg","comment_is_top":false,"comment_ctime":1542930773,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"96032211285","product_id":100020801,"comment_content":"老师好，文章提到建立一个（身份证号、姓名）的联合索引，是不是浪费空间？后文解释如果根据身份证号查询姓名和年龄就会用到覆盖索引。这里我不理解的是，年龄并不在联合索引内，那是不是应该回表啊？","like_count":22,"discussions":[{"author":{"id":1809802,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/8a/a2d34896.jpg","nickname":"一元(wx:abley1874)","note":"","ucode":"5E7A33642FC767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301594,"discussion_content":"肯定是要回表的，如果仅仅是根据身份证查姓名和年龄，这个联合索引就不合适了，它和 单独索引 （身份证）的效果一样，但却占中了更多的空间。而，如果有用到 身份证 查 姓名，那么由于索引覆盖，就会有效的减少回表。\n    但这里有一点需要特别注意，（身份证，姓名）这样的联合索引使用索引下推就毫无意义了，因为 身份证具有唯一性，不需要多条件查询，简单说，一个姓名只能对应一个身份证，不存在多条件判断的情况","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1598583947,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1004627,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/54/53/d5d0ec20.jpg","nickname":"Lilian","note":"","ucode":"61F294370FA400","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7755,"discussion_content":"这个肯定要回表，只是说可以用到这个联合索引","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567663294,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64959,"user_name":"撒萌萌","can_delete":false,"product_type":"c1","uid":1224122,"ip_address":"","ucode":"BF1DCD48EDE24A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIQ6ICCwVrD5LcxFZzTfdEYSg9lKVmZYloj3zGIhFzapTdIO460L1Zl6ZRUibB1Tic1ahZ7UhSo7HjA/132","comment_is_top":false,"comment_ctime":1548985401,"is_pvip":false,"replies":[{"id":"23012","content":"对的 ，前缀匹配哈<br><br>不过不是“只走了name的索引，不走age”<br>这是同一个索引，比较准确的描述是：<br>使用了这个索引的前两个字节做快速定位，然后由于有index condition pushdown优化，接下来遍历索引过程中可以用age来过滤掉不满足条件的记录","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548987249,"ip_address":"","comment_id":64959,"utype":1}],"discussion_count":3,"race_medal":0,"score":"87448331321","product_id":100020801,"comment_content":"mysql&gt; select * from tuser where name like &#39;张 %&#39; and age=10 and ismale=1;<br><br>为什么这个语句只走了name的索引，不走age，是只有name like &#39;张三&#39; and age＝10 才会走age吗","like_count":20,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438251,"discussion_content":"对的 ，前缀匹配哈\n\n不过不是“只走了name的索引，不走age”\n这是同一个索引，比较准确的描述是：\n使用了这个索引的前两个字节做快速定位，然后由于有index condition pushdown优化，接下来遍历索引过程中可以用age来过滤掉不满足条件的记录","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548987249,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1210519,"avatar":"https://static001.geekbang.org/account/avatar/00/12/78/97/fa101174.jpg","nickname":"年轻人","note":"","ucode":"CDD4612BAE3247","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282611,"discussion_content":"这个也是我的疑惑，非常感谢老师的耐心的解答，明白了like左匹配只是用于了快速定位。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1592026578,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132471,"discussion_content":"使用了这个索引的前两个字节做快速定位，然后由于有index condition pushdown优化，接下来遍历索引过程中可以用age来过滤掉不满足条件的记录，然后就又用到了索引下推。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578911508,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":212178,"user_name":"无名之辈","can_delete":false,"product_type":"c1","uid":1108247,"ip_address":"","ucode":"23AB28F44A769C","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/17/c78d3963.jpg","comment_is_top":false,"comment_ctime":1588071300,"is_pvip":true,"replies":[{"id":"78872","content":"这样还需要地方把”满足条件的所有主键值“存起来 <br>就要用到临时表了，性能反而更差","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1588077462,"ip_address":"","comment_id":212178,"utype":1}],"discussion_count":3,"race_medal":0,"score":"83192449924","product_id":100020801,"comment_content":"老师，一次查询为啥不能只回表一次呢？比如范围查询通过二级索引定位到全部符合条件的主键在回表一次","like_count":19,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493448,"discussion_content":"这样还需要地方把”满足条件的所有主键值“存起来 \n就要用到临时表了，性能反而更差","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1588077462,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394581,"discussion_content":"一次把符合条件的主键全查出来， 需要用到临时表；同时， 通过 些主键值回表一次， 其实在主键索引数上也还是N次查询过程","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1631947938,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3007210,"avatar":"","nickname":"Geek_a1699c","note":"","ucode":"CF7DB00BE36B77","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588163,"discussion_content":"解惑了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663581912,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"湖南"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151460,"user_name":"liqicong","can_delete":false,"product_type":"c1","uid":1334681,"ip_address":"","ucode":"18B8C71038CD06","user_header":"https://static001.geekbang.org/account/avatar/00/14/5d/99/8a886e7c.jpg","comment_is_top":false,"comment_ctime":1573724103,"is_pvip":false,"discussion_count":7,"race_medal":0,"score":"70293200839","product_id":100020801,"comment_content":"每次一讲我都能看一个半小时左右,不只是老师写的,评论也是干货满满","like_count":16,"discussions":[{"author":{"id":3007210,"avatar":"","nickname":"Geek_a1699c","note":"","ucode":"CF7DB00BE36B77","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574474,"discussion_content":"2022年看评论需要2 3个小时了","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1654074509,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2195859,"avatar":"https://static001.geekbang.org/account/avatar/00/21/81/93/97b3c333.jpg","nickname":"Geek_681da7","note":"","ucode":"6BDB6AA576E196","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311544,"discussion_content":"大家的评论都写得跟学霸笔记一样。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1602392578,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1228560,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/10/b7974690.jpg","nickname":"BD","note":"","ucode":"A95CF8C3EDC228","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289677,"discussion_content":"每篇的评论看的我几乎要花好几个小时","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1594177265,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1100928,"avatar":"https://static001.geekbang.org/account/avatar/00/10/cc/80/898c1ed1.jpg","nickname":"sea季陪我去看海","note":"","ucode":"D0CA20E815A157","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552530,"discussion_content":"确实，评论区能学到更多，如果只有上面课程，我估计就是看一遍，不会有什么印象","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645500821,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2891875,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/20/63/7ae0de34.jpg","nickname":"云淡风轻","note":"","ucode":"FAB4A15F5CC1CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551920,"discussion_content":"评论的问题 老师的回答，干货满满","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645174045,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1064247,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/37/bbe5f958.jpg","nickname":"王晨","note":"","ucode":"942D9BD67A3418","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":368965,"discussion_content":"2021 年再评论一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618891303,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1237583,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e2/4f/df01f65e.jpg","nickname":"Danfēng","note":"","ucode":"E5B3451F1D0441","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":281263,"discussion_content":"我也是，评论看的比文章收货更多，一千个人一千个哈姆雷特，从不同人的思维汲取不同的知识","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591703136,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71707,"user_name":"eTen.T","can_delete":false,"product_type":"c1","uid":1261878,"ip_address":"","ucode":"ECC6CD4B51EA96","user_header":"https://static001.geekbang.org/account/avatar/00/13/41/36/ca101de4.jpg","comment_is_top":false,"comment_ctime":1551418666,"is_pvip":false,"replies":[{"id":"25850","content":"是说，用不上连续前缀索引的情况下才这样。<br>对于索引(a,b,c)<br>如果是a=1 and b=1 and c=1还是可以都用的<br>但是如果是a=1 and b&lt;&gt;1 and c=1就只能用第一个","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551426441,"ip_address":"","comment_id":71707,"utype":1}],"discussion_count":5,"race_medal":0,"score":"53091026218","product_id":100020801,"comment_content":"5.6版本前只搜索了第一个字段就回表，那岂不联合索引都没有啥用了？","like_count":12,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441288,"discussion_content":"是说，用不上连续前缀索引的情况下才这样。\n对于索引(a,b,c)\n如果是a=1 and b=1 and c=1还是可以都用的\n但是如果是a=1 and b&amp;lt;&amp;gt;1 and c=1就只能用第一个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551426441,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1135528,"avatar":"https://static001.geekbang.org/account/avatar/00/11/53/a8/abc96f70.jpg","nickname":"return","note":"","ucode":"42B8A3380DF04B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371995,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620117879,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1652085,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKORTofsU89GYKtywquzKuEiabvZnEOonfMYKuCPlo8GDlXqZuJdBicu0XtlaeodH4BnmHV1kldSAwQ/132","nickname":"未来怎样","note":"","ucode":"4E54EB62595B27","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7800,"discussion_content":"是不是可以这么理解？比如联合索引（a,b）如果使用a=1,b=1就是覆盖索引，如果使用a=1,b>1就是索引下推？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567677377,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1467758,"avatar":"https://static001.geekbang.org/account/avatar/00/16/65/6e/8b74b1b0.jpg","nickname":"菜鸟成神之路","note":"","ucode":"7C4ACBE03F6C8F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1652085,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKORTofsU89GYKtywquzKuEiabvZnEOonfMYKuCPlo8GDlXqZuJdBicu0XtlaeodH4BnmHV1kldSAwQ/132","nickname":"未来怎样","note":"","ucode":"4E54EB62595B27","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":54641,"discussion_content":" 对于联合索引(a,b)  select a ,b from t where a = 1 and b = 1 这个使用了覆盖索引，select a ,b,c from t where a = 1 and b = 1 这个使用了全部的联合索引，没有使用覆盖索引  select a ,b,c from t where a = 1 and b > 1  这个只使用了联合索引前面的a，但是使用了索引下推  ","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1574307232,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":7800,"ip_address":""},"score":54641,"extra":""},{"author":{"id":1911661,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLDOKcx20Xxmu5j8WxiafoYvo3bIAFDg8OeicRic1icD597QuMC9O8FyV2Al9RxNfVZXK0gkGUx6M3CVQ/132","nickname":"多年以后","note":"","ucode":"D70E7A1ABE0F39","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1467758,"avatar":"https://static001.geekbang.org/account/avatar/00/16/65/6e/8b74b1b0.jpg","nickname":"菜鸟成神之路","note":"","ucode":"7C4ACBE03F6C8F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585707,"discussion_content":" select a ,b,c from t where a = 1 and b &gt; 1 这个b也用到了吧，在a相等的情况下b是有序的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661766733,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":54641,"ip_address":"湖北"},"score":585707,"extra":""}]}]},{"had_liked":false,"id":42418,"user_name":"Na小Na","can_delete":false,"product_type":"c1","uid":1234044,"ip_address":"","ucode":"C49D9AE0A15207","user_header":"https://static001.geekbang.org/account/avatar/00/12/d4/7c/7e8c59f7.jpg","comment_is_top":false,"comment_ctime":1542950834,"is_pvip":false,"replies":[{"id":"15161","content":"这样不对哈，没有C过滤，order by b的写法只靠索引b是要全表扫描的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542953613,"ip_address":"","comment_id":42418,"utype":1}],"discussion_count":0,"race_medal":0,"score":"53082558386","product_id":100020801,"comment_content":"思考题：我觉得只要把c和b分别建立索引就行了，orderBy a的时候可以用主键，orderBy b的时候可以用单独的b","like_count":12},{"had_liked":false,"id":42409,"user_name":"喔～","can_delete":false,"product_type":"c1","uid":1172171,"ip_address":"","ucode":"FE2C87CE6FEBD8","user_header":"https://static001.geekbang.org/account/avatar/00/11/e2/cb/6bc95e09.jpg","comment_is_top":false,"comment_ctime":1542949984,"is_pvip":false,"replies":[{"id":"15157","content":"既不会走全表扫描，也不会调整优化😓 <br><br>还是跟原来一样的执行计划。<br><br>SQL语句的条件是会自动调整的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542952997,"ip_address":"","comment_id":42409,"utype":1}],"discussion_count":1,"race_medal":0,"score":"53082557536","product_id":100020801,"comment_content":"建立了(name, age)的联合索引之后，例子中的检索如下：<br>mysql&gt; select * from tuser where name like &#39;张 %&#39; and age=10 and ismale=1;<br>如果改为：<br>mysql&gt; select * from tuser where age=10  and name like &#39;张 %&#39; and ismale=1;<br>这样优化器是否能够作出优化调整，还是直接走全表搜索？","like_count":12,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430081,"discussion_content":"既不会走全表扫描，也不会调整优化😓 \n\n还是跟原来一样的执行计划。\n\nSQL语句的条件是会自动调整的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542952997,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":165155,"user_name":"eviltion","can_delete":false,"product_type":"c1","uid":1515445,"ip_address":"","ucode":"022DE8510B825E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/mWicFKgbjL299CQPEhoFdSAphVb4UpibkhF8loRxryBRt3H7ZGkibibhaKANTxvSiatic4PLCy2MsbEMH1hc76YefPUw/132","comment_is_top":false,"comment_ctime":1577173119,"is_pvip":true,"replies":[{"id":"62985","content":"只要查询的条件和返回字段中的 所有字段都能被一个非主键索引覆盖，就能用覆盖索引","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1577189401,"ip_address":"","comment_id":165155,"utype":1}],"discussion_count":1,"race_medal":0,"score":"48821813375","product_id":100020801,"comment_content":"老师，问个问题，覆盖索引这种情况，是不是查询的必须是主键，且是声明了主键的表。","like_count":11,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479053,"discussion_content":"只要查询的条件和返回字段中的 所有字段都能被一个非主键索引覆盖，就能用覆盖索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577189401,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70889,"user_name":"wika玉明","can_delete":false,"product_type":"c1","uid":1358145,"ip_address":"","ucode":"7C9CAE94C9D5D5","user_header":"https://static001.geekbang.org/account/avatar/00/14/b9/41/5cccc425.jpg","comment_is_top":false,"comment_ctime":1551220442,"is_pvip":false,"replies":[{"id":"25429","content":"看到你开头一句，还以为用专栏文章催眠呢😆 （开个玩笑哈）<br><br>嗯，这种情况是挺麻烦的。<br><br>得按照查询的模式，选最常见的来创建组合索引。比如如果时间+客户标识用得最多，就创建者两个的联合索引。<br><br>对于比较少用的条件，单独给这个字段建索引，然后查id出来跟别的字段的查询结果，在客户端取交集，也是一种思路。<br><br>总之，这种需求是最头大的😅","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551236264,"ip_address":"","comment_id":70889,"utype":1}],"discussion_count":5,"race_medal":0,"score":"48795860698","product_id":100020801,"comment_content":"老师，睡不着就看你的课了，我一直有个疑问，就是公司有订单表，有些核心字段，比如订单号.时间(整型，时间戳，范围查找).订单状态（整型，6个值，可能in，可能=）.客户标识（整型，几百个值）.付款方式（整型，5个值），设备号（字符串，有权限需要in）,这6个字段后台都会用到查询筛选，而且不选的情况下条件就不传，按照联合索引最左原则，那么可能要建几十个索引，这是不可能的，这个表做了按月分表，数据量一张表大约1000万,不建立索引的话，后台选的条件没有建索引就会非常慢，强制最多只能查连续两个月的数据（union all），请问老师有什么好的解决方案么？？？ 求助","like_count":11,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440888,"discussion_content":"看到你开头一句，还以为用专栏文章催眠呢😆 （开个玩笑哈）\n\n嗯，这种情况是挺麻烦的。\n\n得按照查询的模式，选最常见的来创建组合索引。比如如果时间+客户标识用得最多，就创建者两个的联合索引。\n\n对于比较少用的条件，单独给这个字段建索引，然后查id出来跟别的字段的查询结果，在客户端取交集，也是一种思路。\n\n总之，这种需求是最头大的😅","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1551236264,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1361288,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIldyrF8Gz5gUFn4lFfA5VDR8N0FShahUEiayyH4l5RNNloQ4R7KoePGR8MePINqicmFjSb02FoVjIw/132","nickname":"akuan","note":"","ucode":"742DFF98C8F50E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584430,"discussion_content":"ToB 表示路过……","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660813204,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1021683,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/96/f3/a4a680da.jpg","nickname":"梯田","note":"","ucode":"671236E62375D2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551376,"discussion_content":" 我们也有这种搜索，用CloudCanal全部同步到ES，有的还需要打宽表到ES，各种搜索，烦的很.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645001866,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2355100,"avatar":"https://static001.geekbang.org/account/avatar/00/23/ef/9c/545b9f82.jpg","nickname":"frode","note":"","ucode":"AF53674FD78084","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377973,"discussion_content":"我也遇到了这个问题，我把数据同步到了es，然后使用es查询，速度提升上来了。但会有1秒甚至更长时间的延迟","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622985647,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1619091,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b4/93/7d690458.jpg","nickname":"浪","note":"","ucode":"30EFA17E82551D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2355100,"avatar":"https://static001.geekbang.org/account/avatar/00/23/ef/9c/545b9f82.jpg","nickname":"frode","note":"","ucode":"AF53674FD78084","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382427,"discussion_content":"这种用es等于全建索引了，这么多条件的，用es会更好，减轻数据库压力。但是又要多维护一个中间件。。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625564620,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":377973,"ip_address":""},"score":382427,"extra":""}]}]},{"had_liked":false,"id":43679,"user_name":"ThinkingQuest","can_delete":false,"product_type":"c1","uid":1118560,"ip_address":"","ucode":"597D0C00DAEFE4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/0SDRac7XoordnKYgDLhz5wxAOtE6xqcsSywsywEtKQAR7xicBZQ6ceYftfZjl4Ivq3a5dzvRhYkn2GcUWiaQK7ZQ/132","comment_is_top":false,"comment_ctime":1543280147,"is_pvip":false,"replies":[{"id":"15613","content":"嗯，后面在《MySQL为什么会选错索引》我们会说到这个问题。然后答疑篇我们来展开这个问题怎么回答。<br>基本上你需要提到这几个概念：索引统计信息、临时表成本、排序成本","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543286801,"ip_address":"","comment_id":43679,"utype":1}],"discussion_count":1,"race_medal":0,"score":"48787920403","product_id":100020801,"comment_content":"我在面试中被问过： MySQL在执行一条SQL时，是如何选择使用哪个索引的。 possible keys有很多，根据什么选择用哪一个。 <br><br>我只知道mysql有一些统计信息作为依据，但是就的东西，就完全答不上来了。 <br><br>这是一个面试中被问到，但是直到今天我也没弄明白的问题。","like_count":11,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430458,"discussion_content":"嗯，后面在《MySQL为什么会选错索引》我们会说到这个问题。然后答疑篇我们来展开这个问题怎么回答。\n基本上你需要提到这几个概念：索引统计信息、临时表成本、排序成本","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543286801,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42239,"user_name":"产品助理","can_delete":false,"product_type":"c1","uid":1019821,"ip_address":"","ucode":"39A76D346A96E9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8f/ad/6e3e9e15.jpg","comment_is_top":false,"comment_ctime":1542935005,"is_pvip":false,"replies":[{"id":"15127","content":"你说得很对👍🏿 已修改","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542939871,"ip_address":"","comment_id":42239,"utype":1}],"discussion_count":3,"race_medal":0,"score":"44492607965","product_id":100020801,"comment_content":"需要注意的是，在引擎内部使用覆盖索引在索引 k 上其实读了三个记录，R3~R5，但是对于 MySQL 的 Server 层来说，它就是找引擎拿到了两条记录，因此 MySQL 认为扫描行数是 2。<br><br>在k上实际读的三个记录是300、500和600这三个ID 而不是R3-R5吧？","like_count":10,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430019,"discussion_content":"你说得很对👍🏿 已修改","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542939871,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1809802,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/8a/a2d34896.jpg","nickname":"一元(wx:abley1874)","note":"","ucode":"5E7A33642FC767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301595,"discussion_content":"并没改吧，我当时还挺纳闷儿，查的是K树 应该是 3、5、6这几个key才对呀，咋变成主键索引树中的R3～R5了呢？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1598584645,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1526355,"avatar":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","nickname":"moonfox","note":"","ucode":"902BFF40EFA9FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1809802,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/8a/a2d34896.jpg","nickname":"一元(wx:abley1874)","note":"","ucode":"5E7A33642FC767","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333797,"discussion_content":"没有改","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607615309,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":301595,"ip_address":""},"score":333797,"extra":""}]}]},{"had_liked":false,"id":71558,"user_name":"安排","can_delete":false,"product_type":"c1","uid":1260026,"ip_address":"","ucode":"F78CFA9624CAEF","user_header":"https://static001.geekbang.org/account/avatar/00/13/39/fa/a7edbc72.jpg","comment_is_top":false,"comment_ctime":1551369350,"is_pvip":false,"replies":[{"id":"25735","content":"内存数据页和磁盘数据页是一一对应的，持久化的时候就直接覆盖写进去，<br><br>内存里记了数据页在文件中的偏移量；<br>数据页从磁盘读入内存的时候，记录了内存地址；<br>这样实现互相找到","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551404231,"ip_address":"","comment_id":71558,"utype":1}],"discussion_count":1,"race_medal":0,"score":"40206075014","product_id":100020801,"comment_content":"可以讲一讲mysql里的B+树这种索引结构是怎么持久化到硬盘的吗？数据库的运行过程中如果想把某一个B+树节点对应的内存页存到硬盘中去，具体怎么做呢？在硬盘中怎么维护这种B+树这种结构呢？","like_count":9,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441203,"discussion_content":"内存数据页和磁盘数据页是一一对应的，持久化的时候就直接覆盖写进去，\n\n内存里记了数据页在文件中的偏移量；\n数据页从磁盘读入内存的时候，记录了内存地址；\n这样实现互相找到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551404231,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65888,"user_name":"Jefitar","can_delete":false,"product_type":"c1","uid":1370659,"ip_address":"","ucode":"D7ED9F32ADA5B1","user_header":"https://static001.geekbang.org/account/avatar/00/14/ea/23/508f71e3.jpg","comment_is_top":false,"comment_ctime":1549724764,"is_pvip":false,"replies":[{"id":"23407","content":"👍","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1549874087,"ip_address":"","comment_id":65888,"utype":1}],"discussion_count":1,"race_medal":0,"score":"40204430428","product_id":100020801,"comment_content":"<br>总结：<br>- 高频查询，可以建立联合索引来使用覆盖索引，不用回表。<br>- 非高频查询，再已有的联合索引基础上，使用最左前缀原则来快速查询。<br>- 对于MySQL 5.6 引入索引下推，减少回表次数。","like_count":9,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438630,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549874087,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80766,"user_name":"williamcai","can_delete":false,"product_type":"c1","uid":1158294,"ip_address":"","ucode":"B158F52C2D39BC","user_header":"https://static001.geekbang.org/account/avatar/00/11/ac/96/46b13896.jpg","comment_is_top":false,"comment_ctime":1553732767,"is_pvip":false,"replies":[{"id":"29646","content":"还是有关系的，索引合理的话不需要排序了<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1554048869,"ip_address":"","comment_id":80766,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35913471135","product_id":100020801,"comment_content":"order by是对结果集排序的，与ca和cb索引关系不大","like_count":8,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444966,"discussion_content":"还是有关系的，索引合理的话不需要排序了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554048869,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69714,"user_name":"张洋","can_delete":false,"product_type":"c1","uid":1182914,"ip_address":"","ucode":"549BE5DEEF8417","user_header":"https://static001.geekbang.org/account/avatar/00/12/0c/c2/bad34a50.jpg","comment_is_top":false,"comment_ctime":1550816169,"is_pvip":true,"replies":[{"id":"24831","content":"是的，<br>甚至于你可以认为，InnoDB的每个普通索引，都是这个索引字段，和 主键字段的联合索引<br><br>然后对照一下我们文章中的图","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1550840706,"ip_address":"","comment_id":69714,"utype":1}],"discussion_count":2,"race_medal":0,"score":"35910554537","product_id":100020801,"comment_content":"老师您好。使用联合索引的时候，联合索引的多个属性是在一棵树上的吗？","like_count":8,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440240,"discussion_content":"是的，\n甚至于你可以认为，InnoDB的每个普通索引，都是这个索引字段，和 主键字段的联合索引\n\n然后对照一下我们文章中的图","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550840706,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2020865,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/d6/01/eaa50203.jpg","nickname":"zft","note":"","ucode":"74DEC5FBA610B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":276414,"discussion_content":"引用---&#34;甚至于你可以认为，InnoDB的每个普通索引，都是这个索引字段，和 主键字段的联合索引\n&#34;\n是否可以结合【索引扩展】来理解这句话？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590856886,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51758,"user_name":"Leo","can_delete":false,"product_type":"c1","uid":1126910,"ip_address":"","ucode":"341694ACBAB258","user_header":"https://static001.geekbang.org/account/avatar/00/11/31/fe/30a17a9d.jpg","comment_is_top":false,"comment_ctime":1545232326,"is_pvip":true,"replies":[{"id":"18751","content":"好问题<br><br> 你每个语句explain下，看看怎么使用索引的，对照再分析看看","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545239293,"ip_address":"","comment_id":51758,"utype":1}],"discussion_count":13,"race_medal":0,"score":"35904970694","product_id":100020801,"comment_content":"老师，请教下主键索引的存储顺序<br><br>CREATE TABLE `demo`.`test_pk_vs_non_unique_index`(  <br>  `id` INT NOT NULL,<br>  `val` INT,<br>  PRIMARY KEY (`id`),<br>  INDEX `idx_val` (`val`)<br>) ENGINE=INNODB;<br><br>INSERT INTO test_pk_vs_non_unique_index VALUES(3, 33);<br>INSERT INTO test_pk_vs_non_unique_index VALUES(1, 11);<br>INSERT INTO test_pk_vs_non_unique_index VALUES(5, 55);<br>INSERT INTO test_pk_vs_non_unique_index VALUES(2, 22);<br><br>SELECT * FROM test_pk_vs_non_unique_index;<br>    id     val  <br>------  --------<br>     1        11<br>     2        22<br>     3        33<br>     5        55<br>     <br>INSERT INTO test_pk_vs_non_unique_index VALUES(4, NULL);<br>INSERT INTO test_pk_vs_non_unique_index VALUES(6, NULL);<br><br>SELECT * FROM test_pk_vs_non_unique_index;<br>    id     val  <br>------  --------<br>     4    (NULL)<br>     6    (NULL)<br>     1        11<br>     2        22<br>     3        33<br>     5        55<br>     <br>问题：为什么行的返回顺序不是1，2，3，4，5，6？<br>因为明明ID列是主键，主键索引就是聚集索引，就应该是顺序排列。<br>为什么另一列上的索引上有空值就影响了主键的存储顺序？","like_count":8,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433609,"discussion_content":"好问题\n\n 你每个语句explain下，看看怎么使用索引的，对照再分析看看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545239293,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1060772,"avatar":"https://static001.geekbang.org/account/avatar/00/10/2f/a4/ff8f912b.jpg","nickname":"海豚","note":"","ucode":"4AC3B788551F00","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289136,"discussion_content":"二级索引中包含所有显示字段信息，两次检索走的都是二级索引，null值在二级索引中是排在最左边的，所以null会显示在前面","likes_number":11,"is_delete":false,"is_hidden":false,"ctime":1594001395,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1320917,"avatar":"https://static001.geekbang.org/account/avatar/00/14/27/d5/fa654422.jpg","nickname":"BigSpinach","note":"","ucode":"81B3D9AD100B2B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":159435,"discussion_content":"因为使用了二级索引进行了查找，所以是按照二级索引进行排序的","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1580695014,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1668617,"avatar":"https://static001.geekbang.org/account/avatar/00/19/76/09/62a10668.jpg","nickname":"傻傻的帅","note":"","ucode":"14A795523A682E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":281943,"discussion_content":"因为查询结果包含了二级索引所有列，走了覆盖索引，不用回表。如果再增加一列，显示结果就会按ID排序显示了，因为此时产生了回表","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1591844956,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1237583,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e2/4f/df01f65e.jpg","nickname":"Danfēng","note":"","ucode":"E5B3451F1D0441","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":280998,"discussion_content":"你这个null，让我想到我刚入行的时候，dba说初始化数据时，能给默认值就给默认值，不要给null","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1591659664,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1350991,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9d/4f/273ffb51.jpg","nickname":"小哪吒","note":"","ucode":"252087A733355C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1237583,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e2/4f/df01f65e.jpg","nickname":"Danfēng","note":"","ucode":"E5B3451F1D0441","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380901,"discussion_content":"新增字段时不要加默认值，否者每行都要更新下，速度会变慢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624784294,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":280998,"ip_address":""},"score":380901,"extra":""}]},{"author":{"id":1238337,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e5/41/ffe533ba.jpg","nickname":"尚帝","note":"","ucode":"6F1703FD5A23A0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534961,"discussion_content":"为什么走2级索引，有人知道吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638324255,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2420294,"avatar":"https://static001.geekbang.org/account/avatar/00/24/ee/46/7d65ae37.jpg","nickname":"木几丶","note":"","ucode":"FFDB958DA64F8C","race_medal":5,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390807,"discussion_content":"mark，优化器会选择二级索引。实际上后面的文章有提到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630054694,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1112873,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fb/29/ee2982de.jpg","nickname":"阿德","note":"","ucode":"07F66FCDED4CD5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":269762,"discussion_content":"猜测是表只有两个字段，val的索引树已经覆盖了所有需要查询的字段，mysql就是用了val的索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589947044,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1284659,"avatar":"https://static001.geekbang.org/account/avatar/00/13/9a/33/de01b796.jpg","nickname":"胖狐狸","note":"","ucode":"810DFA27C80837","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":214919,"discussion_content":"同问？为什么走的是二级索引而不是主键索引呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585239831,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1246178,"avatar":"https://static001.geekbang.org/account/avatar/00/13/03/e2/5768d26e.jpg","nickname":"inrtyx","note":"","ucode":"81CD18FF34ABAB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213004,"discussion_content":"为什么不走主键索引呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585042168,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1086222,"avatar":"https://static001.geekbang.org/account/avatar/00/10/93/0e/42fb388c.jpg","nickname":"dbwlf","note":"","ucode":"FF2FF9AA5F4D36","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":162473,"discussion_content":"@ BigSpinach 是正解，因为走的是二级索引，并且后插入的两条数据的val值为null，所以后插入的两条数据就排在了最前面了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580994221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1652085,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKORTofsU89GYKtywquzKuEiabvZnEOonfMYKuCPlo8GDlXqZuJdBicu0XtlaeodH4BnmHV1kldSAwQ/132","nickname":"未来怎样","note":"","ucode":"4E54EB62595B27","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7815,"discussion_content":"因为全表扫描吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567679493,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44839,"user_name":"hellobfy","can_delete":false,"product_type":"c1","uid":1259019,"ip_address":"","ucode":"CDE51E2FFDA4F4","user_header":"","comment_is_top":false,"comment_ctime":1543498105,"is_pvip":false,"replies":[{"id":"15977","content":"理解正确。<br><br>考虑到大家关注点不同，正文不能无限展开，我们在评论展开吧😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543504552,"ip_address":"","comment_id":44839,"utype":1}],"discussion_count":2,"race_medal":0,"score":"35903236473","product_id":100020801,"comment_content":"一个问题跟老师确认下, 看最后问题的解答, 应该是这样了:<br><br>主键字段其实跟所有非主键索引建立了联合索引, <br>只是说如果主键字段没有在联合索引中明确声明,  <br>只会在其他索引中处于最右边地位的<br><br>ps:    感觉 b+ 树这个结构讲的不够透彻","like_count":8,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430847,"discussion_content":"理解正确。\n\n考虑到大家关注点不同，正文不能无限展开，我们在评论展开吧😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543504552,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2330905,"avatar":"https://static001.geekbang.org/account/avatar/00/23/91/19/6a3e7efc.jpg","nickname":"程序员9527","note":"","ucode":"1A1609F6BEAD84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370471,"discussion_content":"假如没有主键怎么办？用rowId吗？这个rowId也会跟二级索引组成联合索引吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619426091,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154616,"user_name":"神经蛙","can_delete":false,"product_type":"c1","uid":1667551,"ip_address":"","ucode":"A7832351182AEC","user_header":"https://static001.geekbang.org/account/avatar/00/19/71/df/5c17092d.jpg","comment_is_top":false,"comment_ctime":1574494839,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31639265911","product_id":100020801,"comment_content":"丁奇老师好，有幸在架构师大会上听过您的现场。对于思考题，我的答案是&#39;ca&#39;没必要，&#39;cb&#39;有必要。因为用c索引找到主键的时候，由于是ab联合主键，且根据最左前缀原则，它取到的数据是按照a有序排列的。但是另外一个语句就不这样了，所以要建一个&#39;cb&#39;索引。","like_count":7},{"had_liked":false,"id":42416,"user_name":"skyoo","can_delete":false,"product_type":"c1","uid":1302503,"ip_address":"","ucode":"EBC0528BA02DD7","user_header":"https://static001.geekbang.org/account/avatar/00/13/df/e7/4ce5ed27.jpg","comment_is_top":false,"comment_ctime":1542950632,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31607721704","product_id":100020801,"comment_content":"alter table T engine=InnoDB 是用来释放 delete 操作引起的页的空洞,也就是碎片空间 操作时候尽量避免当前表的dml 操作.<br>表数据很大情况 建议使用 Percona Toolkit 工具来执行<br><br><br>5.6版本的 ICP 对分区表没有作用吧,  子查询也要失去作用, ICP 用于range，ref，eq_ref和ref_or_null访问方法 涉及到<br>ICP 的使用 查询过程要表的整行才有效？<br><br>ca  cb 索引 感觉 都没有问题<br><br>from : mysql 文档<br>In this query, key_part1 is constant, so all rows accessed through the index are in key_part2 order, and an index on (key_part1, key_part2) avoids sorting if the WHERE clause is selective enough to make an index range scan cheaper than a table scan:<br><br>","like_count":7},{"had_liked":false,"id":114628,"user_name":"tommy","can_delete":false,"product_type":"c1","uid":1062373,"ip_address":"","ucode":"E6EDD4ECBA01D6","user_header":"https://static001.geekbang.org/account/avatar/00/10/35/e5/0b60d57e.jpg","comment_is_top":false,"comment_ctime":1563353477,"is_pvip":false,"discussion_count":15,"race_medal":0,"score":"27333157253","product_id":100020801,"comment_content":"在mysql中用a,b,c三个字段建立一个复合索引a_b_c,请问以下哪个查询效率最差？<br><br>A、select * from test where a=10 and b&gt;50<br>B、select * from test where a=10 and b&gt;10 order by c<br>C、select * from test where a=10 and b=10 order by a<br>D、select * from test where a=10 and b = 10 order by c","like_count":6,"discussions":[{"author":{"id":1911661,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLDOKcx20Xxmu5j8WxiafoYvo3bIAFDg8OeicRic1icD597QuMC9O8FyV2Al9RxNfVZXK0gkGUx6M3CVQ/132","nickname":"多年以后","note":"","ucode":"D70E7A1ABE0F39","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585711,"discussion_content":"b","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661768217,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"湖北"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3078266,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/f8/7a/b3b5e29e.jpg","nickname":"Li,Yanjie","note":"","ucode":"708A4982F272C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585583,"discussion_content":"b","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661683855,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2456669,"avatar":"https://static001.geekbang.org/account/avatar/00/25/7c/5d/84d91c1b.jpg","nickname":"Bingee","note":"","ucode":"E741E4D48C92EA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378736,"discussion_content":"这几个语句没区别，除了查询的结果记录数，性能都一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623380946,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1314724,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0f/a4/0b49469f.jpg","nickname":"木子00","note":"","ucode":"8F78CA722EB29B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305246,"discussion_content":"看完还是不知道什么原因选B？\nA,B 有什么区别的呢。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599826384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":2146530,"avatar":"https://static001.geekbang.org/account/avatar/00/20/c0/e2/b45e4c91.jpg","nickname":"王飞","note":"","ucode":"6AB74544EE1364","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1314724,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0f/a4/0b49469f.jpg","nickname":"木子00","note":"","ucode":"8F78CA722EB29B","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":331932,"discussion_content":"因为b取的是范围，首先定位到a=10的这条记录，然后开始循环，找到b要大于10的记录，之后拿到server层再进行排序，联合索引排序是，a相等，按照b排序，b相等，按照c排序，类似order by a,b,c 这样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607006972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":305246,"ip_address":""},"score":331932,"extra":""},{"author":{"id":2369545,"avatar":"https://static001.geekbang.org/account/avatar/00/24/28/09/0ac42cff.jpg","nickname":"慕苏","note":"","ucode":"7ED14D00429C21","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2146530,"avatar":"https://static001.geekbang.org/account/avatar/00/20/c0/e2/b45e4c91.jpg","nickname":"王飞","note":"","ucode":"6AB74544EE1364","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335175,"discussion_content":"问一下，索引不都已经排序了，执行器那还要排序吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608110240,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":331932,"ip_address":""},"score":335175,"extra":""},{"author":{"id":1911661,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLDOKcx20Xxmu5j8WxiafoYvo3bIAFDg8OeicRic1icD597QuMC9O8FyV2Al9RxNfVZXK0gkGUx6M3CVQ/132","nickname":"多年以后","note":"","ucode":"D70E7A1ABE0F39","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2369545,"avatar":"https://static001.geekbang.org/account/avatar/00/24/28/09/0ac42cff.jpg","nickname":"慕苏","note":"","ucode":"7ED14D00429C21","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585712,"discussion_content":"B使用了范围查询,c就用不了索引了，就是无序的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661768327,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":335175,"ip_address":"湖北"},"score":585712,"extra":""}]},{"author":{"id":1342647,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEIMXEAN5E36GHAVguQnbNOIicT0IXDk1aYw4l0crtMIRibyBdAicyJo8u1Bqol8qbQso4J0CRd4y4YdA/132","nickname":"Geek_2e8900","note":"","ucode":"ABB7B4977AC7CD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":131194,"discussion_content":"b","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578832111,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":29102,"discussion_content":"b ~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570727505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1136684,"avatar":"https://static001.geekbang.org/account/avatar/00/11/58/2c/92c7ce3b.jpg","nickname":"易轻尘","note":"","ucode":"0D0CB9D6D45A70","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8410,"discussion_content":"应该是c，回表次数最少，而且还不用排序","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567998644,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":5,"child_discussions":[{"author":{"id":1397315,"avatar":"https://static001.geekbang.org/account/avatar/00/15/52/43/25209d6c.jpg","nickname":"无边丝雨","note":"","ucode":"B2AD1EAB9E9308","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1136684,"avatar":"https://static001.geekbang.org/account/avatar/00/11/58/2c/92c7ce3b.jpg","nickname":"易轻尘","note":"","ucode":"0D0CB9D6D45A70","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":22048,"discussion_content":"d也不用排序呀,而且题目问的是最差..","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569569352,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":8410,"ip_address":""},"score":22048,"extra":""},{"author":{"id":1136684,"avatar":"https://static001.geekbang.org/account/avatar/00/11/58/2c/92c7ce3b.jpg","nickname":"易轻尘","note":"","ucode":"0D0CB9D6D45A70","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1397315,"avatar":"https://static001.geekbang.org/account/avatar/00/15/52/43/25209d6c.jpg","nickname":"无边丝雨","note":"","ucode":"B2AD1EAB9E9308","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":22337,"discussion_content":"粗心大意了！选b！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1569628143,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":22048,"ip_address":""},"score":22337,"extra":""},{"author":{"id":1135526,"avatar":"https://static001.geekbang.org/account/avatar/00/11/53/a6/07fb7830.jpg","nickname":"Litera","note":"","ucode":"44901C5967B6F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1136684,"avatar":"https://static001.geekbang.org/account/avatar/00/11/58/2c/92c7ce3b.jpg","nickname":"易轻尘","note":"","ucode":"0D0CB9D6D45A70","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":71764,"discussion_content":"什么原因选b，看完有点迷惑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575456470,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":22337,"ip_address":""},"score":71764,"extra":""}]}]},{"had_liked":false,"id":107779,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1561607831,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23036444311","product_id":100020801,"comment_content":"凡事都追求性价比，这是人做事的普遍诉求，对于人类来讲时间是有限且单向不可逆，所以，做事情都比较赶时间，希望快快快，越快越爽。<br><br>索引，对于数据库而言及其关键，用好索引对于开发人员而言也极其重要。<br><br>怎么才能用好索引？<br><br>我们已经知道索引是一种特殊的数据结构(常见的有哈希表、有序数组、二叉平衡搜索树、N叉树、B+树)，它的使命就是加快数据查询的效率。不过一张表她的字段不止一个，需要查询的方式也非常丰富，为了适应丰富的查询场景，索引自身也进行了进化，于是有了(针对MySQL innoDB)<br><br>0：每个索引对应一棵B+树(N叉有序树，且数据存储在叶子节点之中)，主键索引树有点特殊，一定存在且叶子节点存储的是数据记录，普通索引树的叶子存储的是主键索引的值。<br><br>1：主键索引-必须有，你不建数据库也会默认创建，也可以包含多个字段，这多个字段怎么存放和排列的呢？从文中和评论中看到，索引项是按照索引定义的顺序来排序的，比如：(a,b,c)三个字段组成一个联合索引，在实际存储的时候会按照先排序a再排序b最后排序c的方式来存储。<br><br>2：普通索引-一棵B+树，叶子节点存储主键索引的值，查询数据时需要回表主键索引树来查询具体行信息。<br><br>3：覆盖索引-索引优化方式之一，通过减少回表来提高查询速度，注意前提条件是覆盖索引树中的数据项覆盖住了查询项，包括：条件列和查询列<br><br>4：联合索引-多个字段组成一个索引，注意，索引项的顺序是按照索引定义的排列顺序来排序的，定义索引时的顺序原则如下：如果能够调整顺序，可以少维护一个索引，那么这个索引创建顺序就应该是被优先考虑采纳的。这样建立的索引，能够充分的利用最左前缀原则来提高查询的效率。<br><br>5：最左前缀原则-利用索引来加快数据检索的效率，不仅能够利用索引的全部定义，另外只要满足最左前缀原则也是可以的，最左前缀具体指联合索引的最左N个字段或者字符串索引的最左M个字符。<br><br>这里有个疑问？最左前缀的底层是怎么实现，猜测是遍历组合索引B+树的时侯，仅比较组合索引的最左部分，如果是这样，比较最左或最右或中间是否差不多？如果差不多，那用like的话，是不是可以提供更广范围的索引支持？<br><br>6：索引下推优化-MySQL5.6之后推出的，也是通过减少回表的次数来提高检索性能的。原理是在遍历过程中，对索引中的包含的字段先进行判断，直接过滤掉不满足条件的记录，依次来减少回表的次数。<br><br>MySQL的扫描行数指Server层从存储引擎获取的记录条数？期待老师后面的详细分析。<br><br>性能优化的原则是通用的：<br><br>1：办成事，但是要想方设法少干活<br><br>2：不得不干，就让快的多干慢的少干<br><br>3：时刻记住1和2<br><br><br>","like_count":5},{"had_liked":false,"id":105790,"user_name":"Geek_544e36","can_delete":false,"product_type":"c1","uid":1450625,"ip_address":"","ucode":"AE7D01F2BA3D65","user_header":"https://static001.geekbang.org/account/avatar/00/16/22/81/3115e3eb.jpg","comment_is_top":false,"comment_ctime":1561084220,"is_pvip":false,"replies":[{"id":"38359","content":"是的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1561184834,"ip_address":"","comment_id":105790,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23035920700","product_id":100020801,"comment_content":"请教老师一个问题：如果普通索引的一个值对应多个主键ID 这些主键ID是按有序链表存放的吗？","like_count":5,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454811,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561184834,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69759,"user_name":"tina","can_delete":false,"product_type":"c1","uid":1048356,"ip_address":"","ucode":"9F110914D7EB00","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ff/24/29d5c610.jpg","comment_is_top":false,"comment_ctime":1550830434,"is_pvip":false,"replies":[{"id":"24830","content":"没有区别","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1550840523,"ip_address":"","comment_id":69759,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23025666914","product_id":100020801,"comment_content":"老师，用关键字 key 和 index 创建索引有什么区别吗","like_count":5,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440269,"discussion_content":"没有区别","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550840523,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49932,"user_name":"Tobin","can_delete":false,"product_type":"c1","uid":1075466,"ip_address":"","ucode":"E3AFF20B7966A9","user_header":"https://static001.geekbang.org/account/avatar/00/10/69/0a/969ea120.jpg","comment_is_top":false,"comment_ctime":1544791671,"is_pvip":false,"replies":[{"id":"17979","content":"因为要找到6，才知道“后面没有符合条件的了”","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544797518,"ip_address":"","comment_id":49932,"utype":1}],"discussion_count":5,"race_medal":0,"score":"23019628151","product_id":100020801,"comment_content":"select * from T where k between 3 and 5 为啥要找k=6呢？求解惑！","like_count":5,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432805,"discussion_content":"因为要找到6，才知道“后面没有符合条件的了”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544797518,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1667551,"avatar":"https://static001.geekbang.org/account/avatar/00/19/71/df/5c17092d.jpg","nickname":"神经蛙","note":"","ucode":"A7832351182AEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":60826,"discussion_content":"难道还有可能有多个5吗？如果就一个的话，是不需要找到k=6的吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574758183,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1667551,"avatar":"https://static001.geekbang.org/account/avatar/00/19/71/df/5c17092d.jpg","nickname":"神经蛙","note":"","ucode":"A7832351182AEC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":81129,"discussion_content":"换成age考虑下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576224987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":60826,"ip_address":""},"score":81129,"extra":""},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1667551,"avatar":"https://static001.geekbang.org/account/avatar/00/19/71/df/5c17092d.jpg","nickname":"神经蛙","note":"","ucode":"A7832351182AEC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133412,"discussion_content":"你不再往下走一步，怎么知道是5还是6呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578964177,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":60826,"ip_address":""},"score":133412,"extra":""},{"author":{"id":1314724,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0f/a4/0b49469f.jpg","nickname":"木子00","note":"","ucode":"8F78CA722EB29B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305248,"discussion_content":"是的。还是要判断一下的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599828222,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":133412,"ip_address":""},"score":305248,"extra":""}]}]},{"had_liked":false,"id":43825,"user_name":"L","can_delete":false,"product_type":"c1","uid":1132688,"ip_address":"","ucode":"C75CC056B91A46","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/K39Mzv3yXrvgFicK3tjVSn46SFvqmia4IlMAtCfrRzUibE09tPGcJOhic1djKlPPicp7zeWMIlicyH6FMEsyn9XnTJlg/132","comment_is_top":false,"comment_ctime":1543304480,"is_pvip":false,"replies":[{"id":"15751","content":"视图不能建索引，视图本身是SQL语句，关键就是优化视图定义就是","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543401854,"ip_address":"","comment_id":43825,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23018140960","product_id":100020801,"comment_content":"老师你好，视图能做索引吗，或者视图查询效率该怎么优化","like_count":5,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430513,"discussion_content":"视图不能建索引，视图本身是SQL语句，关键就是优化视图定义就是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543401854,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42515,"user_name":"似水流年","can_delete":false,"product_type":"c1","uid":1304443,"ip_address":"","ucode":"D114A8E273133C","user_header":"https://static001.geekbang.org/account/avatar/00/13/e7/7b/71da8283.jpg","comment_is_top":false,"comment_ctime":1542963800,"is_pvip":false,"replies":[{"id":"15190","content":"身份证号就是这个联合索引的前缀","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542969421,"ip_address":"","comment_id":42515,"utype":1}],"discussion_count":5,"race_medal":0,"score":"23017800280","product_id":100020801,"comment_content":"”所以现在你知道了，这段开头的问题里，我们要为高频请求创建 ，(身份证号，姓名）这个联合索引，并用这个索引支持“根据身份证号查询地址”的需求。”<br>我不明白(身份证号，姓名）这个联合索引要怎么支持.支持“根据身份证号查询地址”的需求","like_count":5,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430113,"discussion_content":"身份证号就是这个联合索引的前缀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542969421,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1464006,"avatar":"https://static001.geekbang.org/account/avatar/00/16/56/c6/0b449bc6.jpg","nickname":"斐波那契","note":"","ucode":"85E2EBC01392B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":160435,"discussion_content":"老师的意思是 身份证号查地址这个需求不大 就为了这个需求而建立(身份证，地址)这个联合索引得不偿失 因为有了最左原则所以(身份证，姓名)这个联合索引跟单独身份证这个索引是等价的 也就是说当你只用身份证查询的时候是会用到(身份证，姓名)这个联合索引找到相应的id回表查询地址信息 老师并没有说用(身份证，姓名)联合索引不需要回表找地址信息 老师潜台词是 回表找地址信息比维护一个(身份证，地址)这个联合索引划算","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1580803730,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1101615,"avatar":"https://static001.geekbang.org/account/avatar/00/10/cf/2f/4f89f22a.jpg","nickname":"李鑫磊","note":"","ucode":"D06517CFCEEE00","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":13055,"discussion_content":"那通过（身份证号，姓名）这个索引找到了叶子节点，叶子节点是（身份证号，姓名），没有住址呀？要回表的话也没有 id 呀？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1568636525,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1101615,"avatar":"https://static001.geekbang.org/account/avatar/00/10/cf/2f/4f89f22a.jpg","nickname":"李鑫磊","note":"","ucode":"D06517CFCEEE00","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133304,"discussion_content":"有id啊，如果身份证号是主键，那它就是那个id，如果你的表中有另外字段做主键，那个字段就是那个id。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578960847,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":13055,"ip_address":""},"score":133304,"extra":""},{"author":{"id":1442605,"avatar":"https://static001.geekbang.org/account/avatar/00/16/03/2d/404627dc.jpg","nickname":"Anryg Zhun","note":"","ucode":"76DF8560BA9D14","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1101615,"avatar":"https://static001.geekbang.org/account/avatar/00/10/cf/2f/4f89f22a.jpg","nickname":"李鑫磊","note":"","ucode":"D06517CFCEEE00","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":182461,"discussion_content":"普通索引的叶子节点存的就是id 也就是主键","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582427442,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":13055,"ip_address":""},"score":182461,"extra":""}]}]},{"had_liked":false,"id":42417,"user_name":"Na小Na","can_delete":false,"product_type":"c1","uid":1234044,"ip_address":"","ucode":"C49D9AE0A15207","user_header":"https://static001.geekbang.org/account/avatar/00/12/d4/7c/7e8c59f7.jpg","comment_is_top":false,"comment_ctime":1542950707,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23017787187","product_id":100020801,"comment_content":"老师讲的调理和文章结构都是清楚仔细，真是看不厌啊，期待周一更新！","like_count":5},{"had_liked":false,"id":307117,"user_name":"这一章，姑且叫蛰伏吧","can_delete":false,"product_type":"c1","uid":1322487,"ip_address":"","ucode":"BA2E8130F8E88E","user_header":"https://static001.geekbang.org/account/avatar/00/14/2d/f7/d5c23b53.jpg","comment_is_top":false,"comment_ctime":1628868985,"is_pvip":false,"replies":[{"id":"111715","content":"using index表示，使用了覆盖索引，也就是说确实使用了这个索引，但是执行的时候，是在这个索引里“全索引遍历”，这个索引没有起到加速的作用","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1629702848,"ip_address":"","comment_id":307117,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18808738169","product_id":100020801,"comment_content":"专栏那么久了，不知道老师还会不会看到我的评论。我的困惑如下：<br>专栏中说“那么，如果既有联合查询，又有基于 a、b 各自的查询呢？查询条件里面只有 b 的语句，是无法使用 (a,b) 这个联合索引的，这时候你不得不维护另外一个索引，也就是说你需要同时维护 (a,b)、(b) 这两个索引。”我是有疑惑地。<br>建表及索引语句如下：<br>create table abc(id int primary key,a int,b int,c int)<br>ALTER TABLE abc ADD INDEX idx_a_b_c (a,b,c)      <br>这是我的执行计划：explain select * from abc where c=1;<br>按理说where c=1 不满足最左匹配原则，可是我的执行计划里面走了索引，很困惑，希望老师或者有知道的同学给个解答。<br>1\tSIMPLE\tabc\t\tindex\t\tidx_a_b_c\t15\t\t1\t100\tUsing where; Using index","like_count":4,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525048,"discussion_content":"using index表示，使用了覆盖索引，也就是说确实使用了这个索引，但是执行的时候，是在这个索引里“全索引遍历”，这个索引没有起到加速的作用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629702848,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90117,"user_name":"文艺青年","can_delete":false,"product_type":"c1","uid":1171311,"ip_address":"","ucode":"49815E45171AE2","user_header":"https://static001.geekbang.org/account/avatar/00/11/df/6f/40061e43.jpg","comment_is_top":false,"comment_ctime":1556418980,"is_pvip":true,"replies":[{"id":"32454","content":"只能选一个嘛😆<br>而且最左前缀才能支持自然的range查询","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1556592792,"ip_address":"","comment_id":90117,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18736288164","product_id":100020801,"comment_content":"老师，请问mysql为什么没有采用最右原则呢","like_count":4,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448395,"discussion_content":"只能选一个嘛😆\n而且最左前缀才能支持自然的range查询","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556592792,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74080,"user_name":"Leon📷","can_delete":false,"product_type":"c1","uid":1219496,"ip_address":"","ucode":"B9BBD1EFAAE5A2","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/a8/6a391c66.jpg","comment_is_top":false,"comment_ctime":1552100430,"is_pvip":false,"replies":[{"id":"27081","content":"对的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1552110902,"ip_address":"","comment_id":74080,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18731969614","product_id":100020801,"comment_content":"我的理解是索引下推新版本在二级索引的时候有了过滤条件的判断，而之前的版本从主键索引上回表拿到数据再用过滤条件进行判断，索引下推其实是把条件判断提前了","like_count":4,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442430,"discussion_content":"对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552110902,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70953,"user_name":"会飞的猪","can_delete":false,"product_type":"c1","uid":1340194,"ip_address":"","ucode":"05EB9BF31F603D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIEONynt1pibq4AInxllIgSz3zJrB4tiabJwibYAohfcGTvScicboZkM03Wgic4dA4H1obcyAm9nbGR4pA/132","comment_is_top":false,"comment_ctime":1551232502,"is_pvip":false,"replies":[{"id":"25413","content":"会的，前提是c必须是=，不能是大于或者小于","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551234705,"ip_address":"","comment_id":70953,"utype":1}],"discussion_count":4,"race_medal":0,"score":"18731101686","product_id":100020801,"comment_content":"老师请问下，联合索引c,b，where条件里为c,order by b,这样的语句，联合索引把c,b都用到嘛？","like_count":4,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440917,"discussion_content":"会的，前提是c必须是=，不能是大于或者小于","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551234664,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2351720,"avatar":"https://static001.geekbang.org/account/avatar/00/23/e2/68/ce547a12.jpg","nickname":"zjm1314","note":"","ucode":"63B0EAB7045054","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340369,"discussion_content":"为什么必须是=，>或者<不一样么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609988698,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1928368,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLCKzC0IPq9HSaMiaySKyviaBftvz2EjgqKNCwia9C0xIfYnuE7qntQ6fQ9oL2sEyJGWu0Mmj7EbWicrg/132","nickname":"FL","note":"","ucode":"C82D077D6C2277","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2351720,"avatar":"https://static001.geekbang.org/account/avatar/00/23/e2/68/ce547a12.jpg","nickname":"zjm1314","note":"","ucode":"63B0EAB7045054","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342204,"discussion_content":"你想一下  c,b字段\n这个索引是当c相同时,才按照b字段升序或者降序排序建立索引b\n那如果>的话  相当于可能获取到多个 c不同的情况,\n\n比如 表T里有两个字段 c,b有四行数据分别是   3  5,  4 6 ，5 4, 6  5(我已经按c,b联合索引中c在前先进行排序了)\n那理论上c大于3的应该是 4 5 6 但是获取到的却是顺序需要排列的b字段依次是 6 4 5 \n总结下:就是联合索引(c,b)中 只有当c是一样的时候  对应的所有b才是已经排好序的, 而你如果是大于小于是无法保证b是本身有序的","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1610614190,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":340369,"ip_address":""},"score":342204,"extra":""},{"author":{"id":1911661,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLDOKcx20Xxmu5j8WxiafoYvo3bIAFDg8OeicRic1icD597QuMC9O8FyV2Al9RxNfVZXK0gkGUx6M3CVQ/132","nickname":"多年以后","note":"","ucode":"D70E7A1ABE0F39","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2351720,"avatar":"https://static001.geekbang.org/account/avatar/00/23/e2/68/ce547a12.jpg","nickname":"zjm1314","note":"","ucode":"63B0EAB7045054","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585714,"discussion_content":"c是&gt;或者&lt;  b就不是有序的 就用不到索引 要重新排序","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661769093,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":340369,"ip_address":"湖北"},"score":585714,"extra":""}]}]},{"had_liked":false,"id":59038,"user_name":"马斯蔡","can_delete":false,"product_type":"c1","uid":1068278,"ip_address":"","ucode":"C07800CC4787F0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/kzatY691Z9thf13TictPkVGHIQIKSrQyW1Rlu5DO8qmwLMF73tvb80yP3q27mwjYB7WSvBgayjsk1FGW6AgYxIw/132","comment_is_top":false,"comment_ctime":1547281830,"is_pvip":false,"replies":[{"id":"21367","content":"这两个没有矛盾哈<br>“如果查询中有某个列的范围查询，则其右边所有列都无法使用索引优化查找”， 这里说的使用索引优化查找，应该是指“不能用索引快速定位”。<br><br><br>索引下推能力其实age也不是用来“快速定位”的，只是用在索引遍历中“快速过滤”的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547292969,"ip_address":"","comment_id":59038,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18727151014","product_id":100020801,"comment_content":"老师，文中提到的索引下推案例：（name,age）<br>查询 ：like &#39;张%&#39; and age=10，会判断索引中的age值。但是我看「高性能MySQL」书中提到，对于多列索引，如果查询中有某个列的范围查询，则其右边所有列都无法使用索引优化查找。这与文章内容有些出入，是MySQL版本的问题吗？这是MySQL有索引下推之前才有的缺陷？","like_count":4,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436279,"discussion_content":"这两个没有矛盾哈\n“如果查询中有某个列的范围查询，则其右边所有列都无法使用索引优化查找”， 这里说的使用索引优化查找，应该是指“不能用索引快速定位”。\n\n\n索引下推能力其实age也不是用来“快速定位”的，只是用在索引遍历中“快速过滤”的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547292969,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1066757,"avatar":"https://static001.geekbang.org/account/avatar/00/10/47/05/04fcf578.jpg","nickname":"KingLiang","note":"","ucode":"4CB2C258ABC7DC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284210,"discussion_content":"快速定位对象是表数据，快速过滤是对已出结果进行二次过滤（是在server层上实现的吧）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592473528,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57750,"user_name":"无形","can_delete":false,"product_type":"c1","uid":1016889,"ip_address":"","ucode":"B740E2A68A17A5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/84/39/c8772466.jpg","comment_is_top":false,"comment_ctime":1546886283,"is_pvip":true,"replies":[{"id":"21106","content":"再有一个(c,b)的联合索引，可以避免where c=N order by b这个语句的排序","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547117632,"ip_address":"","comment_id":57750,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18726755467","product_id":100020801,"comment_content":"C、a索引是不必要的，因为c索引是次级索引，指向主键索引，已经包含了a，可以使用a排序，满足第一种查询<br>C、b索引是必要的，在a字段未知的情况下不能使用b字段排序，<br>我觉得除了主键索引外，只需要c、b索引就可以了<br>","like_count":4,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435739,"discussion_content":"再有一个(c,b)的联合索引，可以避免where c=N order by b这个语句的排序","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547117632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56710,"user_name":"旧梦发癫","can_delete":false,"product_type":"c1","uid":1309614,"ip_address":"","ucode":"F51210AD94705D","user_header":"https://static001.geekbang.org/account/avatar/00/13/fb/ae/2879bd60.jpg","comment_is_top":false,"comment_ctime":1546526091,"is_pvip":false,"replies":[{"id":"20434","content":"Get了新技能，以后不怕啦😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546526829,"ip_address":"","comment_id":56710,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18726395275","product_id":100020801,"comment_content":"前缀索引大法好。以前最开始建了(a,b)之后，还要建a。是不是感觉有点傻，哈哈","like_count":4,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435187,"discussion_content":"Get了新技能，以后不怕啦😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546526829,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":50099,"user_name":"尘封","can_delete":false,"product_type":"c1","uid":1247006,"ip_address":"","ucode":"CEE0C006387A03","user_header":"https://static001.geekbang.org/account/avatar/00/13/07/1e/bdbe93f4.jpg","comment_is_top":false,"comment_ctime":1544866328,"is_pvip":false,"replies":[{"id":"18013","content":"前者","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544874499,"ip_address":"","comment_id":50099,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18724735512","product_id":100020801,"comment_content":"老师，全表扫描时，是找到第一个孩子节点一直顺着叶子节点查找还是每次都要从很节点开始查找？","like_count":4,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432874,"discussion_content":"前者","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544874499,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49567,"user_name":"zhima_hu","can_delete":false,"product_type":"c1","uid":1311188,"ip_address":"","ucode":"33A4496556D9B1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/rBCoNmJbagIGlkrDDfdQv9YjrtoHfvExqSSiavHwgUaukTxnO2jTBGrrHUF49VZqaS1FBolLc4Bibk883sabroyQ/132","comment_is_top":false,"comment_ctime":1544717053,"is_pvip":false,"replies":[{"id":"17877","content":"存在，在MySQL 里面叫做“MRR优化”<br><br>这个是自动的，代码版本支持就会这么做","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544750583,"ip_address":"","comment_id":49567,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18724586237","product_id":100020801,"comment_content":"您好，在不影响排序结果的情况下，在取出主键后，回表之前，会在对所有获取到的主键排序，请问是否存在这种情况？   <br>不是取出一个主键回表一次吗，什么情况下一次取出多个主键再回表？<br><br>期待你的回答","like_count":4,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432662,"discussion_content":"存在，在MySQL 里面叫做“MRR优化”\n\n这个是自动的，代码版本支持就会这么做","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544750583,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394730,"discussion_content":"MRR（Multi Range Read)   是针对辅助索引的范围查询时， 会一次性读取多个主键的值，并进行排序后， 再一次性到主键索引进行回表。 这样可以将多次回表的随机IO转换成顺序IO，提升查询性能。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1632021341,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44198,"user_name":"张迪","can_delete":false,"product_type":"c1","uid":1104835,"ip_address":"","ucode":"6A5D44999A0FEA","user_header":"https://static001.geekbang.org/account/avatar/00/10/db/c3/e11adfe8.jpg","comment_is_top":false,"comment_ctime":1543381706,"is_pvip":false,"replies":[{"id":"15799","content":"In 挺快的呀，in 的时候里面的项递增输入的话，理论上会快些。","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543406489,"ip_address":"","comment_id":44198,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18723250890","product_id":100020801,"comment_content":"老师，当出现in几千条业务id的时候如何做优化，业务id有索引","like_count":4,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430675,"discussion_content":"In 挺快的呀，in 的时候里面的项递增输入的话，理论上会快些。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543406489,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1818343,"avatar":"","nickname":"刘同青","note":"","ucode":"84B62DF8BC61FB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":558524,"discussion_content":"in需要注意size的，几千id还好，但是如果上万id可能变成了全表扫描了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648368032,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":430675,"ip_address":""},"score":558524,"extra":""}]}]},{"had_liked":false,"id":42137,"user_name":"梦康","can_delete":false,"product_type":"c1","uid":1069512,"ip_address":"","ucode":"8935F3C329C58E","user_header":"https://static001.geekbang.org/account/avatar/00/10/51/c8/83852d5a.jpg","comment_is_top":false,"comment_ctime":1542931214,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"18722800398","product_id":100020801,"comment_content":"图4中是5.6的话，会在回表的时候再优化iops吗？比如查到的是满足条件的1000行张三，会先对其id做排序，然后再回表么？这样挨得近的主键的I&#47;O操作就能合并了。会有这样的优化吗？","like_count":4,"discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":235622,"discussion_content":"有的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587045963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133300,"discussion_content":"这个无所谓吧，挨得近是不是也得有回表的动作，也还是要进行I/O操作的，不存在回表进行合并的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578960619,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":235619,"discussion_content":"是有排序的，可以尽可能的把随机读优化为顺序读","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587045930,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":133300,"ip_address":""},"score":235619,"extra":""}]}]},{"had_liked":false,"id":42085,"user_name":"包包up","can_delete":false,"product_type":"c1","uid":1073495,"ip_address":"","ucode":"A6F51A62A8B362","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/57/6f3c81dd.jpg","comment_is_top":false,"comment_ctime":1542905120,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18722774304","product_id":100020801,"comment_content":"创建了ca cb索引之后，我觉得可以省去了最后对结果的排序。","like_count":4},{"had_liked":false,"id":225354,"user_name":"Danfēng","can_delete":false,"product_type":"c1","uid":1237583,"ip_address":"","ucode":"E5B3451F1D0441","user_header":"https://static001.geekbang.org/account/avatar/00/12/e2/4f/df01f65e.jpg","comment_is_top":false,"comment_ctime":1591723597,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14476625485","product_id":100020801,"comment_content":"感觉越后学，学到越多，一千个读者有一千个哈姆雷特。每次都看完评论，又巩固了自己的知识点，又解决自己的答疑，还能get到不少新概念和见闻","like_count":3},{"had_liked":false,"id":186332,"user_name":"Geek_watermelon","can_delete":false,"product_type":"c1","uid":1492334,"ip_address":"","ucode":"91E8719FE966D1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erbEmOX3L6GagEaDzNpn28r0Yq7MjG5mxQicu8tXyqEZ1GatEm4Rc3VeicpqBftFq70AJictfmBmyDGA/132","comment_is_top":false,"comment_ctime":1583826349,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14468728237","product_id":100020801,"comment_content":"该篇总结：<br>1. 覆盖索引：当查询结果列集在索引树上能全部覆盖，则无需回主键索引树取数(回表)，直接返回<br>2. 最左前缀原则：存在联合索引（a,b），则使用条件 a,b 查询或a 查询能走上该索引。那么是否考虑在建立联合索引是，越往左的索引字段应该是高频出现单独作为查询条件的字段（这里也可以是频繁出现的联合查询条件字段）达到索引的复用；<br>3. 索引下推：存在（a,b）联合索引，现在查询 a like ‘a%’ and b&gt;10 ，过程走联合索引树找到字段a以a开始的数据页，由于内部是排好序的，从以a开始的记录往后找并判断其b是否大于10，是则回表查询，否则跳过，直达a字段不以a打头结束，下推到b字段判断减少了回表集。","like_count":3,"discussions":[{"author":{"id":2020865,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/d6/01/eaa50203.jpg","nickname":"zft","note":"","ucode":"74DEC5FBA610B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":275460,"discussion_content":"插眼","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590717394,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70294,"user_name":"lutter","can_delete":false,"product_type":"c1","uid":1301876,"ip_address":"","ucode":"63F67C1DD1EE46","user_header":"","comment_is_top":false,"comment_ctime":1551066122,"is_pvip":false,"replies":[{"id":"25079","content":"5.6版本以后支持onlineddl， <br><br>行锁不会，有mdl读锁","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551068649,"ip_address":"","comment_id":70294,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14435968010","product_id":100020801,"comment_content":"老师：<br>alter table T engine=InnoDB 重建索引是否会产生行锁？","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440550,"discussion_content":"5.6版本以后支持onlineddl， \n\n行锁不会，有mdl读锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551068649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57394,"user_name":"lhs","can_delete":false,"product_type":"c1","uid":1252206,"ip_address":"","ucode":"41178CC21337FB","user_header":"https://static001.geekbang.org/account/avatar/00/13/1b/6e/1bc87ac8.jpg","comment_is_top":false,"comment_ctime":1546779143,"is_pvip":false,"replies":[{"id":"20676","content":"取决于你前面是select 什么哦，如果是select *的话，<br><br>124还是要回表<br>3只能用索引的a部分是对的<br>567 也对","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546782261,"ip_address":"","comment_id":57394,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14431681031","product_id":100020801,"comment_content":"老师，对于最左前缀的理解，比如建立了一个联合索引(a,b,c),有以下查询条件：<br>1.WHERE a=xxx AND b=xxx<br>2.WHERE a=xxx AND b=xxx AND c=xxx<br>3.WHERE a=xxx AND c=xxx<br>4.WHERE a=xxx<br>5.WHERE b=xxx AND c=xxx<br>6.WHERE b=xxx<br>7.WHERE c=xxx<br>对于1，2，3，4情况会走索引；1，2，4情况不会进行回表操作（用到索引下沉），效率较高；<br>3会用到索引a，但索引c失效，会进行回表操作，效率会低一些；<br>5，6，7情况都不走索引，会进行全表扫描，效率低，这样理解对吗？","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435559,"discussion_content":"取决于你前面是select 什么哦，如果是select *的话，\n\n124还是要回表\n3只能用索引的a部分是对的\n567 也对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546782261,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1342533,"avatar":"https://static001.geekbang.org/account/avatar/00/14/7c/45/19e24f98.jpg","nickname":"见＆不见","note":"","ucode":"53C6167BB03424","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430,"discussion_content":"我也这样尝试了下  5，6，7情况下为啥我explain 是走索引的  type是index","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561546675,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55685,"user_name":"尘封","can_delete":false,"product_type":"c1","uid":1247006,"ip_address":"","ucode":"CEE0C006387A03","user_header":"https://static001.geekbang.org/account/avatar/00/13/07/1e/bdbe93f4.jpg","comment_is_top":false,"comment_ctime":1546260911,"is_pvip":false,"replies":[{"id":"20089","content":"他这个应该只是对于First Key，比如条件是比如条件是 trade_id &gt; &#39;aaaaaaaa&#39; and trade_step=3 and step_info=&#39;update&#39;<br>这时候优化器第一次查询的是 拿到id=1的这一行，但是因为是大于，所以不需要继续判断  trade_step=3 and step_info=&#39;update&#39;这两个条件，直接往后找 （这个first key逻辑就结束了），<br>接下来再找就找到 aaaaaaab才算第一个开始有效的<br><br>我觉得你认为这时候命中的是 id=3 和 id=4 的这两行在idx_test的这两个key的间隙好了<br>然后继续往后扫，扫到找到的值，超过范围为止","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546270011,"ip_address":"","comment_id":55685,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14431162799","product_id":100020801,"comment_content":"【文章链接】<br>原文章链接地址如下<br>http:&#47;&#47;hedengcheng.com&#47;?p=577 <br>但是这个地址有时候打不开有的时候打开很慢，我找到了一个转载了这篇文章的博客，地址如下<br>https:&#47;&#47;www.jianshu.com&#47;p&#47;7a4b4f821c8d<br><br>【例子】<br>dba@db_test 05:08:05&gt;show create table trade_detail\\G<br>*************************** 1. row ***************************<br>Table: trade_detail<br>Create Table: CREATE TABLE `trade_detail` (<br>`id` int(11) NOT NULL,<br>`tradeid` varchar(32) DEFAULT NULL,<br>`trade_step` int(11) DEFAULT NULL,<br>`step_info` varchar(32) DEFAULT NULL,<br>PRIMARY KEY (`id`),<br>KEY `idx_test` (`tradeid`,`trade_step`,`step_info`)<br>) ENGINE=InnoDB DEFAULT CHARSET=utf8<br><br>dba@db_test 05:08:14&gt;select * from trade_detail;<br>+----+----------+------------+--------------+<br>| id | tradeid | trade_step | step_info |<br>+----+----------+------------+--------------+<br>| 1 | aaaaaaaa | 1 | cus |<br>| 2 | aaaaaaaa | 2 | update |<br>| 3 | aaaaaaaa | 3 | commit |<br>| 4 | aaaaaaab | 1 | add |<br>| 5 | aaaaaaab | 2 | update |<br>| 6 | aaaaaaab | 3 | update again |<br>| 7 | aaaaaaab | 4 | commit |<br>| 8 | aaaaaaac | 1 | bbc |<br>| 9 | aaaaaaac | 2 | update |<br>| 10 | aaaaaaac | 3 | update again |<br>| 11 | aaaaaaac | 4 | commit |<br>+----+----------+------------+--------------+<br><br>SQL1<br>dba@db_test 05:08:26&gt;desc select * from trade_detail where tradeid&gt;=&#39;aaaaaaac&#39; and trade_step&gt;2\\G<br>*************************** 1. row ***************************<br>id: 1<br>select_type: SIMPLE<br>table: trade_detail<br>partitions: NULL<br>type: range<br>possible_keys: idx_test<br>key: idx_test<br>key_len: 104<br>ref: NULL<br>rows: 2<br>filtered: 33.33<br>Extra: Using where; Using index<br><br>SQL2<br>dba@db_test 05:08:47&gt;desc select * from trade_detail where tradeid&gt;&#39;aaaaaaac&#39; and trade_step&gt;2\\G <br>*************************** 1. row ***************************<br>id: 1<br>select_type: SIMPLE<br>table: trade_detail<br>partitions: NULL<br>type: range<br>possible_keys: idx_test<br>key: idx_test<br>key_len: 99<br>ref: NULL<br>rows: 1<br>filtered: 33.33<br>Extra: Using where; Using index<br><br>【疑问】<br>mysql在确定First Key的时候为什么对于&gt;=可以继续向下匹配，而对&gt;却停止匹配了，这个原因是什么？能否从B+树遍历的原理进行解释一下？<br>留言部分我咨询了这个问题，您说举一个例子，所以我就举了一个例子，这个表是引用的您其它文章里的表和数据。非常感谢答复。","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434825,"discussion_content":"他这个应该只是对于First Key，比如条件是比如条件是 trade_id &amp;gt; &amp;#39;aaaaaaaa&amp;#39; and trade_step=3 and step_info=&amp;#39;update&amp;#39;\n这时候优化器第一次查询的是 拿到id=1的这一行，但是因为是大于，所以不需要继续判断  trade_step=3 and step_info=&amp;#39;update&amp;#39;这两个条件，直接往后找 （这个first key逻辑就结束了），\n接下来再找就找到 aaaaaaab才算第一个开始有效的\n\n我觉得你认为这时候命中的是 id=3 和 id=4 的这两行在idx_test的这两个key的间隙好了\n然后继续往后扫，扫到找到的值，超过范围为止","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546270011,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52366,"user_name":"Mr.钧👻","can_delete":false,"product_type":"c1","uid":1249939,"ip_address":"","ucode":"D781E030E79245","user_header":"https://static001.geekbang.org/account/avatar/00/13/12/93/3470fc43.jpg","comment_is_top":false,"comment_ctime":1545368749,"is_pvip":false,"replies":[{"id":"19030","content":"页就是数据页（默认16K，可调）<br><br>索引定义里所有字段字节数的和","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545372033,"ip_address":"","comment_id":52366,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14430270637","product_id":100020801,"comment_content":"老师，我看到你回复留言说N树的N是由页大小，和索引大小决定的。请问页是指什么呢？索引大小，是指索引包含的字段数，还是指索引包含字段数的字节呢？","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433847,"discussion_content":"页就是数据页（默认16K，可调）\n\n索引定义里所有字段字节数的和","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545372033,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45387,"user_name":"龙猫","can_delete":false,"product_type":"c1","uid":1112490,"ip_address":"","ucode":"FD726CC969EF9C","user_header":"https://static001.geekbang.org/account/avatar/00/10/f9/aa/3e80212e.jpg","comment_is_top":false,"comment_ctime":1543629551,"is_pvip":false,"replies":[{"id":"16166","content":"现在如果再问你，你来回答下😄<br><br>再发条评论上来吧","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543631180,"ip_address":"","comment_id":45387,"utype":1}],"discussion_count":4,"race_medal":0,"score":"14428531439","product_id":100020801,"comment_content":"之前面试问过我一道题，mysql的联合索引是怎么储存的……，当时没答上来。","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431012,"discussion_content":"现在如果再问你，你来回答下😄\n\n再发条评论上来吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543631180,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133337,"discussion_content":"联合索引是依次按照联合字段的先后顺序，依次进行排序。如a,b,c三个字段是联合索引，则叶子节点存储的是三个字段的数据，且按照先后顺序进行排序；而非叶子节点存储的是第一个关键字的索引。故当执行查询的时候，因为联合索引中是先根据a进行排序的，如果a没有先确定，直接对b或c进行查询的话，就相当于是乱序查询，因此联合索引无法生效，此时就相当于是全表查询。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1578962057,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1123171,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/63/4fb6fee0.jpg","nickname":"深白色","note":"","ucode":"C4B26AB70D8A6D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":196368,"discussion_content":"叶子节点存储的不是主键索引的值吗？怎么是abc三个字段的值？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583335708,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":133337,"ip_address":""},"score":196368,"extra":""},{"author":{"id":1696883,"avatar":"https://static001.geekbang.org/account/avatar/00/19/e4/73/74dce191.jpg","nickname":"鼠里鼠气","note":"","ucode":"4793476BBDB202","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1123171,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/63/4fb6fee0.jpg","nickname":"深白色","note":"","ucode":"C4B26AB70D8A6D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288204,"discussion_content":"他应该说的是键值key","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593676903,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":196368,"ip_address":""},"score":288204,"extra":""}]}]},{"had_liked":false,"id":43347,"user_name":"kghch","can_delete":false,"product_type":"c1","uid":1313334,"ip_address":"","ucode":"E7E9DD543379B7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIJKia3LYh56vXYniaOuY75PfsIAznb07H0WL0UDrceu4KGJFB3Xia2HAq1gw5KfaSse3kl2MHek79BQ/132","comment_is_top":false,"comment_ctime":1543218021,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14428119909","product_id":100020801,"comment_content":"(c, a) 没必要建；<br>(c, b) 可以减少回表次数。","like_count":3,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133340,"discussion_content":"答案没错，但是cb并没有减少回表次数。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578962187,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43079,"user_name":"fgdgtz","can_delete":false,"product_type":"c1","uid":1240401,"ip_address":"","ucode":"486CC4ACCC015C","user_header":"","comment_is_top":false,"comment_ctime":1543157013,"is_pvip":false,"replies":[{"id":"15402","content":"是否可以留(user_id, order_time, status) 这个索引？","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543191291,"ip_address":"","comment_id":43079,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14428058901","product_id":100020801,"comment_content":"老师，我看了你新的一期的课，我对索引的选择上仍有些困惑，不确定自己做的是否正确，以下是我上一期就有咨询您的一个问题，希望老师能解惑<br><br>——————————————————————————————————————<br>老师你好，我请问个有关索引的问题，我有个<br>订单表：<br><br>CREATE TABLE `order` (<br>   `id` int(11) NOT NULL,<br>    `user_id`  int(11) DEFAULT 0,<br>    `status` int(11) DEFAULT 0,<br>    `order_time` int(11) DEFAULT 0,<br>     PRIMARY KEY (`id`)<br> ）ENGINE=InnoDB<br><br>order表字段有 user id(用户ID)， status(订单状态,1：待付款,2：付款,4:失效,6：确认收货,7：结算)，order_time(下单时间)<br><br>业务需求上有根据&quot;全部&quot;，&quot;付款&quot;，&quot;结算&quot;，&quot;失效&quot;这几种状态分页获取用户的订单数据并根据下单时间排序，因为有涉及全部和根据状态查询，我是否应建两个类似这样的索引：<br><br>(user_id,status,order_time)<br>(user_id,order_time)<br><br>(user_id,status,order_time)用于根据具体的订单状态分页查询并排序<br>(user_id,order_time)用于查询全部数据并排序<br><br>对此我是很困惑的，建两个索引对更新数据与存储空<br>间都有影响，而且两个索引也十分类似，<br>但如果<br>只保留user_ id create_time，那根据某<br>状态查询时扫描的行可能过多<br><br>如果保留<br>user id status create time，为了索<br>引全字段使用到那查询全部时就得麻烦的 union all<br>拼每个状态,比如分页第一页:<br><br>select from <br>order tt join (<br>   select t.id from (<br>       (select<br>id id,order_time from order where user_id=1 and status=1 order by order_time desc LIMIT 0, 10)<br>       union all <br>       (select<br>id id,order_time from order where user_id=1 and status=4 order by order_time desc LIMIT 0, 10)<br>       union all<br>       (select<br>id id,order_time from order where user_id=1<br> and status=6 order by order_time desc LIMIT 0, 10 )<br>    ) as t order by <br>t.order_time desc, t. id desc LIMIT 0, 10<br>)<br> ts on ts. id=tt. id order by order_time desc<br><br>望老师能解答<br>","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430290,"discussion_content":"是否可以留(user_id, order_time, status) 这个索引？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543191291,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1237583,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e2/4f/df01f65e.jpg","nickname":"Danfēng","note":"","ucode":"E5B3451F1D0441","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":281291,"discussion_content":"有个疑问，你为什么要用union all 不用status between","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1591705924,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42928,"user_name":"天王","can_delete":false,"product_type":"c1","uid":1239337,"ip_address":"","ucode":"C074B2F9A5F007","user_header":"https://static001.geekbang.org/account/avatar/00/12/e9/29/629d9bb0.jpg","comment_is_top":false,"comment_ctime":1543110094,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"14428011982","product_id":100020801,"comment_content":"一个sql执行一次只能走多个索引吗？执行顺序是什么样的？","like_count":3,"discussions":[{"author":{"id":1986739,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/50/b3/9269cd59.jpg","nickname":"LWD","note":"","ucode":"DDA444DB113C01","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554127,"discussion_content":"可能多个。因为存在索引合并","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646222904,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394729,"discussion_content":"虽然一张表可以有多个索引，但是在对单表查询时， 引擎层在确定执行计划后， 只能走到一个索引。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632020160,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133342,"discussion_content":"没明白。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578962247,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42814,"user_name":"高强","can_delete":false,"product_type":"c1","uid":1312433,"ip_address":"","ucode":"AA3C76FDD4BC61","user_header":"https://static001.geekbang.org/account/avatar/00/14/06/b1/ba6b4335.jpg","comment_is_top":false,"comment_ctime":1543050540,"is_pvip":false,"replies":[{"id":"15326","content":"不需要union all，就用in 好了。上万看上去不太美，拆成多个in ()吧","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543064221,"ip_address":"","comment_id":42814,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14427952428","product_id":100020801,"comment_content":"结合之前那个where  in问题，用union all会造成整体sql语句很庞大的，这个对效率没影响吗？union  all是最优的吗，有没有其他办法，目前搞工作中遇到了这个问题?怎么解决呢?<br><br>备注  in后面有很多，至少上万的了，union all的话，相当于上万条select  union all。请老师指定一下","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430205,"discussion_content":"不需要union all，就用in 好了。上万看上去不太美，拆成多个in ()吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543064221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1303322,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e3/1a/061e77b6.jpg","nickname":"亢星东","note":"","ucode":"5E4063E83B2BB9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304593,"discussion_content":"这种可以分批处理吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599622101,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42429,"user_name":"amazon1011","can_delete":false,"product_type":"c1","uid":1001032,"ip_address":"","ucode":"BD745BDCBD7059","user_header":"https://static001.geekbang.org/account/avatar/00/0f/46/48/e959b1e0.jpg","comment_is_top":false,"comment_ctime":1542952934,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14427854822","product_id":100020801,"comment_content":"ca index 可以用单独的c 列 index 来代替，单列c index，相当于（c,a,b）,根据最左原则可以替代ca index.<br>cb index 需要,单列c index 解决不来b列排序的问题","like_count":3},{"had_liked":false,"id":42205,"user_name":"Linuxer","can_delete":false,"product_type":"c1","uid":1153978,"ip_address":"","ucode":"272D9D8089C3D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/ba/333b59e5.jpg","comment_is_top":false,"comment_ctime":1542933658,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14427835546","product_id":100020801,"comment_content":"课后思考，如果主键为(a,b)那么啊肯定是有序的，貌似(c,a)索引就没必要，但是上面主键没法保证b的顺序，所以(c,b)建索引就有必要，c值一样的情况下，b是有序的，直接回表取就行。两个查询都能用这个索引","like_count":3},{"had_liked":false,"id":238716,"user_name":"moonfox","can_delete":false,"product_type":"c1","uid":1526355,"ip_address":"","ucode":"902BFF40EFA9FA","user_header":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","comment_is_top":false,"comment_ctime":1596270661,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10186205253","product_id":100020801,"comment_content":"这个章节对于一点不了解数据结构个page页及 b＋树的同学会有很大的难度","like_count":2},{"had_liked":false,"id":235184,"user_name":"大明猩","can_delete":false,"product_type":"c1","uid":1494622,"ip_address":"","ucode":"61D330B42AE3C4","user_header":"https://static001.geekbang.org/account/avatar/00/16/ce/5e/b103d538.jpg","comment_is_top":false,"comment_ctime":1594916135,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"10184850727","product_id":100020801,"comment_content":"我好像明白了:  “批量插入结果集时，从结果集插入到表中，索引树是会一直维护还是等结果集完成后再一次性维护”的问题了。<br>维护索引树其实就是往b+树插入节点然后再保持树的平衡，一次性维护其实就是变相的一直维护，相当于一直往b+树插入节点然后树一直在保持平衡，所以树一直在维护，这就是插入大量数据时先删除索引再重建的原因！<br>不知道理解的对不对，哈哈！最近也是在用java实现创建表的功能，发现数据库原理特别是索引原理太重要了，因为索引牵扯的东西不但广而且重要！<br>","like_count":2,"discussions":[{"author":{"id":1350991,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9d/4f/273ffb51.jpg","nickname":"小哪吒","note":"","ucode":"252087A733355C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380924,"discussion_content":"但是这两种方案(批量插入大量数据：查如一条 索引维护一次；删除索引，批量插入数据，重建索引)耗费的时间怎么平衡的呢？应该刚好有个值可以让两种方案耗费的时间相等吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624800046,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":88042,"user_name":"xuanyuan","can_delete":false,"product_type":"c1","uid":1113737,"ip_address":"","ucode":"1EC79B9372868F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI2icbib62icXtibTkThtyRksbuJLoTLMts7zook2S30MiaBtbz0f5JskwYicwqXkhpYfvCpuYkcvPTibEaQ/132","comment_is_top":false,"comment_ctime":1555823173,"is_pvip":false,"replies":[{"id":"31688","content":"不用","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1555860191,"ip_address":"","comment_id":88042,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10145757765","product_id":100020801,"comment_content":"索引下推，前提必须是最左匹配么？","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447695,"discussion_content":"不用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555860191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70642,"user_name":"westbrook","can_delete":false,"product_type":"c1","uid":1336238,"ip_address":"","ucode":"C4ECC43C0CEE27","user_header":"https://static001.geekbang.org/account/avatar/00/14/63/ae/3d3717a3.jpg","comment_is_top":false,"comment_ctime":1551152779,"is_pvip":false,"replies":[{"id":"25211","content":"能走到索引，但是不能使用多name+age全字段快速定位","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551156820,"ip_address":"","comment_id":70642,"utype":1}],"discussion_count":4,"race_medal":0,"score":"10141087371","product_id":100020801,"comment_content":"老师，有一点还是没太明白，网上很多资料提到联合索引 (a, b) ，在查询语句where a = xxx and b = xxx 和 where  b = xxx and a =xxx 都是能走到索引的，跟您在文中提到的，（age ,name） 不太一样","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440747,"discussion_content":"能走到索引，但是不能使用多name+age全字段快速定位","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551156820,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1194858,"avatar":"https://static001.geekbang.org/account/avatar/00/12/3b/6a/80d9c545.jpg","nickname":"RD","note":"","ucode":"E3947B6E1681AD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":91426,"discussion_content":"但是不是一般优化器会对 where 子句进行优化，让他变成与联合索引一样的顺序呢？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1576833490,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1194858,"avatar":"https://static001.geekbang.org/account/avatar/00/12/3b/6a/80d9c545.jpg","nickname":"RD","note":"","ucode":"E3947B6E1681AD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133389,"discussion_content":"应该是的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1578963741,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":91426,"ip_address":""},"score":133389,"extra":""}]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133399,"discussion_content":"（name,age)、(age,name）都是联合索引，对于where查询来说都能走到，但是从索引本身的排序侧重和先后肯定是不同的，前缀原则的落地点也是不同的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578963876,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49526,"user_name":"blt","can_delete":false,"product_type":"c1","uid":1260301,"ip_address":"","ucode":"06754D3ADD1EC1","user_header":"https://static001.geekbang.org/account/avatar/00/13/3b/0d/dcfbbfc4.jpg","comment_is_top":false,"comment_ctime":1544705743,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10134640335","product_id":100020801,"comment_content":"老师，在你说的主键索引会存放数据，非主键索引存放主键，有什么脚本或方法验证这个，就是我想看到底层就是这样的格式，能证明给大家看，另外主键索引会存放整个记录内容吗，还是一个物理地址。谢谢","like_count":2,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133322,"discussion_content":"会存放整个记录内容。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578961480,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43674,"user_name":"gongxt","can_delete":false,"product_type":"c1","uid":1170750,"ip_address":"","ucode":"222C46E0615152","user_header":"https://static001.geekbang.org/account/avatar/00/11/dd/3e/c3028cd5.jpg","comment_is_top":false,"comment_ctime":1543279884,"is_pvip":false,"replies":[{"id":"15614","content":"啊，不是哦，先排序再回表的，并不是“先找到field再排序”","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543286944,"ip_address":"","comment_id":43674,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10133214476","product_id":100020801,"comment_content":"老师好，我认为这里创建索引是不正确的，作者可能是希望利用覆盖索引的特性，通过查找c，可以直接找到另外两个字段，然后排序，找到第一条记录，利用回表，然后返回整行数据。  不过这里有一个前提，就是order by是在查找到field之后才开始执行的吧，所以，看似有用，实则没有用到上面的特性，不知道对不对？","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430457,"discussion_content":"啊，不是哦，先排序再回表的，并不是“先找到field再排序”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543286944,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42300,"user_name":"DanielAnton","can_delete":false,"product_type":"c1","uid":1308521,"ip_address":"","ucode":"69D49AC70898B0","user_header":"https://static001.geekbang.org/account/avatar/00/13/f7/69/d8dba3de.jpg","comment_is_top":false,"comment_ctime":1542938304,"is_pvip":false,"replies":[{"id":"15131","content":"查年龄要，<br>覆盖索引是“根据身份证号查姓名”才有效","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542940914,"ip_address":"","comment_id":42300,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10132872896","product_id":100020801,"comment_content":"请教老师，建立联合索引 (身份证号，姓名），在根据身份证号查询姓名和年龄时，由于年龄字段没有出现在索引中，不还是需要再回表一次，查询年龄吗？","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430040,"discussion_content":"查年龄要，\n覆盖索引是“根据身份证号查姓名”才有效","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542940914,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42202,"user_name":"滩涂曳尾","can_delete":false,"product_type":"c1","uid":1187478,"ip_address":"","ucode":"40F650F2A419D4","user_header":"https://static001.geekbang.org/account/avatar/00/12/1e/96/c735ad6b.jpg","comment_is_top":false,"comment_ctime":1542933579,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10132868171","product_id":100020801,"comment_content":"老师，有两个细节: <br>1. MySQL5.6以后索引下推优化，这是优化器做的吗?<br>2. 回表这步是innodb存储引擎层做的吗","like_count":2,"discussions":[{"author":{"id":1308783,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f8/6f/080973cf.jpg","nickname":"Edward","note":"","ucode":"10FAADF92D05F4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5259,"discussion_content":"1.引擎做的\n2.Server层做的","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1566119855,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1962621,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/f2/7d/24fc1423.jpg","nickname":"XRR","note":"","ucode":"5AEFA04C43C5B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377982,"discussion_content":"我觉得楼上关于第二点是错的，回表应该是引擎层的，假如是Server层，那岂不是返回个主键id给Server层？这也太离谱","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622987476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42114,"user_name":"每天晒白牙","can_delete":false,"product_type":"c1","uid":1004698,"ip_address":"","ucode":"A1B102CD933DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","comment_is_top":false,"comment_ctime":1542929150,"is_pvip":false,"discussion_count":1,"race_medal":1,"score":"10132863742","product_id":100020801,"comment_content":"老师我还是没理解最左前缀索引的好处在哪里？找到符合条件的索引了，还是需要往后遍历。如果是 后匹配模糊查询也是遍历数据呀，最左前缀的好处没看明白","like_count":2,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133445,"discussion_content":"避免你再单独建立针对最左前缀这个字段的索引。也就是多适用一种场景。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1578965421,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42106,"user_name":"任鹏斌","can_delete":false,"product_type":"c1","uid":1104086,"ip_address":"","ucode":"34319B05EA6E74","user_header":"https://static001.geekbang.org/account/avatar/00/10/d8/d6/47da34bf.jpg","comment_is_top":false,"comment_ctime":1542928114,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10132862706","product_id":100020801,"comment_content":"老师有个疑问用身份证号查询姓名和年龄不用回表，那么身份证号索引和姓名年龄联合索引是在两个索引树上维护吗？如果这样的话先从身份证索引树中取到主键值，然后又根据主键值去姓名年龄索引树种搜索跟直接回表查询有什么区别？不是很明白这个详细过程希望老师解答一下。🙏","like_count":2,"discussions":[{"author":{"id":2084728,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/cf/78/72c1545a.jpg","nickname":"JiaLong","note":"","ucode":"608B611F02A846","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414016,"discussion_content":"感觉这个例子举的比较勉强，身份证号是主键，可以在主键索引表里面找到主键值再定位到姓名和年龄就可以了。其算法复杂度与建身份证号与姓名的复合索引是一样的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636636754,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133451,"discussion_content":"1、两个索引树。\n2、因为你的查询条件有身份证，也有年龄和姓名的查询，如果是两个索引的话，应该是查询出来取交集吧。那如果这样，你为啥不将三个字段都做成联合索引呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578965614,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":317895,"user_name":"无敌","can_delete":false,"product_type":"c1","uid":2198690,"ip_address":"","ucode":"4F5ADF4BD5008E","user_header":"https://static001.geekbang.org/account/avatar/00/21/8c/a2/96c7be96.jpg","comment_is_top":false,"comment_ctime":1635036728,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5930004024","product_id":100020801,"comment_content":"索引下推例子，没用到的字段有多个，性别为女的也会过滤掉吧。","like_count":1},{"had_liked":false,"id":210900,"user_name":"Aaron","can_delete":false,"product_type":"c1","uid":1066251,"ip_address":"","ucode":"B0C504A76297C7","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/0Qp9pxHBvgdZAveKzsvUFFUicCJfe7ONzhC7jSNFQDNFvg0jRMXuqqZOdxG1qKosylUYrpIHUR2Q76w5m4HtVkg/132","comment_is_top":false,"comment_ctime":1587863642,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"5882830938","product_id":100020801,"comment_content":"困扰已久的问题：<br>1、当为表的某一个字段创建索引的时候，就会在磁盘生产一个文件，那么这个文件结构是什么样的？<br>2、当通过一个索引字段查询数据的时候，mysql是跟磁盘的索引文件交互的？是把整个文件读到内存中？但是又听说读数据是有大小限制的，每次IO只能读一个数据页的数据，如果是这样，数据页之间是一个双向链表维护的，但是如果没有加载的内存怎么维护数据页之间的关系呢？","like_count":1,"discussions":[{"author":{"id":1134266,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4e/ba/580ec429.jpg","nickname":"小兔子乖乖","note":"","ucode":"E5CC0258CF8858","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":372838,"discussion_content":"1, 并不是创建一个索引就会产生一个磁盘文件，开了innodb_file_per_table的情况下，一个表就对应一个idb文件，不管你创建多少个索引，都是存储在这个idb文件里面\n2，数据维护肯定是需要先将数据加载到内存的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620474501,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208177,"user_name":"helpme","can_delete":false,"product_type":"c1","uid":1937679,"ip_address":"","ucode":"CDA4BA913B50FE","user_header":"","comment_is_top":false,"comment_ctime":1587293468,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5882260764","product_id":100020801,"comment_content":"老师看了文章以后有个问题，想请教一下：<br>select * from tuser where name = &#39;张三&#39; and age=10<br>按文中描述的遍历索引的顺序：先在b+树中找到name为张三的记录，再往后遍历找到age=10。这里的往后遍历是顺序遍历吗？<br>如果假设name=‘张三’的记录是100W条，那么遍历age的时候是否要遍历100w的数据？<br>那么如果age=10的记录只有一条，那么联合索引（name,age）和(age,name)在上面的sql中，查找效率是否是（age,name）更快呢？（age，name）先找到age=10，因为只有一条记录就直接结束了，而（name，age）是先找到了100W的记录，再遍历找age。","like_count":1,"discussions":[{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394734,"discussion_content":"所以在创建联合索引时，在确定各列的顺序时会有一个考虑因素， 区分度比较高的字段放在前面","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632021998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1350991,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9d/4f/273ffb51.jpg","nickname":"小哪吒","note":"","ucode":"252087A733355C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380925,"discussion_content":"- 『如果假设name=‘张三’的记录是100W条，那么遍历age的时候是否要遍历100w的数据？』\n：是的。\n-『那么如果age=10的记录只有一条，那么联合索引（name,age）和(age,name)在上面的sql中，查找效率是否是（age,name）更快呢？』\n：是的，，age 的索引区分度更高。\n-（age，name）先找到age=10，因为只有一条记录就直接结束了。\n：如果 (age，name) 是唯一索引，那么扫描一条记录就结束；如果是非唯一索引，还要继续扫描，直到 age<>10，即还要再扫描一条。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624800298,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":205620,"user_name":"吕迪","can_delete":false,"product_type":"c1","uid":1928422,"ip_address":"","ucode":"428E9262B50E7C","user_header":"https://static001.geekbang.org/account/avatar/00/1d/6c/e6/613fd3d8.jpg","comment_is_top":false,"comment_ctime":1586688634,"is_pvip":false,"replies":[{"id":"76897","content":"额 两种都不太准确<br><br>应该说非叶子节点也可能放在磁盘上，<br>取决于内存大小。<br><br>只是大多数数据量下，非叶子节点不多，留在buffer pool的概率高","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1586738998,"ip_address":"","comment_id":205620,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5881655930","product_id":100020801,"comment_content":"老师你好 我刚才面试的时候 面试官说mysql索引除了叶子结点要进行磁盘io之外 其他的结点都存放在内存 你觉得这样的说法对吗 这样内存不会不够放 我的观点是每个结点会进行一次io 谢谢老师回答","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491530,"discussion_content":"额 两种都不太准确\n\n应该说非叶子节点也可能放在磁盘上，\n取决于内存大小。\n\n只是大多数数据量下，非叶子节点不多，留在buffer pool的概率高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586738998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1688939,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLAia6hRmnSZyuLtKvxxXvg9vgUfwSReCOaHKGLKuRcNX2BCNdmCFSlXyBZvpSXia5LXKjAZKeBXKuw/132","nickname":"Geek_guan","note":"","ucode":"592603EB5F042D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":276078,"discussion_content":"根节点是常驻内存的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590811345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1928422,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/6c/e6/613fd3d8.jpg","nickname":"吕迪","note":"","ucode":"428E9262B50E7C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":230288,"discussion_content":"对对对 他说每个叶子结点都会进行io吗 然后我就说了 buffer pool 但是他最后还是说他觉得除了非叶子结点 其他索引节点都应该在内存 我的看法是和老师你一样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586739212,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":201010,"user_name":"Geek_55e386","can_delete":false,"product_type":"c1","uid":1795793,"ip_address":"","ucode":"5A727F1323C2D0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/zxkns28cIAUZIt3WjDb8G26qiccT84d9GMr9ZpbYR60TU1ibqSj9NoYVHlJvGF1kOltkqNDmEfJCqPuYVkue3WHg/132","comment_is_top":false,"comment_ctime":1585705364,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5880672660","product_id":100020801,"comment_content":"有什么办法可以检测到 mysql 回表了呢？<br>我看慢日志 通过主键索引和普通索引都是一样的","like_count":1,"discussions":[{"author":{"id":1702886,"avatar":"https://static001.geekbang.org/account/avatar/00/19/fb/e6/1b9edb91.jpg","nickname":"练习生","note":"","ucode":"60203A2AA0EA36","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294338,"discussion_content":"explain sql; 看extra列，如果有using index，就表示是覆盖索引，查询只用了索引树，没有再回表","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1595857322,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":191168,"user_name":"Geek_55e386","can_delete":false,"product_type":"c1","uid":1795793,"ip_address":"","ucode":"5A727F1323C2D0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/zxkns28cIAUZIt3WjDb8G26qiccT84d9GMr9ZpbYR60TU1ibqSj9NoYVHlJvGF1kOltkqNDmEfJCqPuYVkue3WHg/132","comment_is_top":false,"comment_ctime":1584752107,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"5879719403","product_id":100020801,"comment_content":"Mysql回表，先查出所有主键回表还是每次都得回表","like_count":1,"discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":235713,"discussion_content":"每个ID回表一次","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1587047473,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394735,"discussion_content":"建议了解一下MRR","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632022055,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1350991,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9d/4f/273ffb51.jpg","nickname":"小哪吒","note":"","ucode":"252087A733355C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380926,"discussion_content":"如果查出所有主键再回表，需要考虑 所有满足条件主键 的存储问题，涉及临时表效率会更低。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624800410,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178340,"user_name":"乔纳森","can_delete":false,"product_type":"c1","uid":1045107,"ip_address":"","ucode":"51EC9FAE071388","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f2/73/1c7bceae.jpg","comment_is_top":false,"comment_ctime":1581664502,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5876631798","product_id":100020801,"comment_content":"林老师，课后的问题很有趣； 我这里有个类似的问题，请教您：<br>```sql<br>explain select * <br>        from t1<br>        where c_course_uid = &#39;f1ecf66b214e4ec096e391b00bb3a7d3&#39;<br>         and id &gt; 281051608 <br>        order by id<br>        limit 0, 400;<br>```<br>- 建表语句<br>```sql<br>CREATE TABLE `t_course_attendance` (<br>  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,<br>  `c_user_id` varchar(36) NOT NULL DEFAULT &#39;&#39;,<br>  `c_phone` varchar(16) NOT NULL DEFAULT &#39;&#39;,<br>  `c_course_uid` char(32) NOT NULL DEFAULT &#39;&#39;,<br>  `c_create_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#39;记录创建时间&#39;,<br>  `c_update_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT &#39;记录更新时间&#39;,<br>  `c_is_deleted` tinyint(1) NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;记录是否被删除&#39;,<br>  PRIMARY KEY (`id`),<br>  UNIQUE KEY `uni_course_uid_user_id` (`c_course_uid`,`c_user_id`),<br>  KEY `idx_user_id` (`c_user_id`),<br>  KEY `idx_course_uid_create_time` (`c_course_uid`,`c_create_time`),<br>  KEY `idx_cUpdateTime` (`c_update_time`)<br>) ENGINE=InnoDB AUTO_INCREMENT=290424171 DEFAULT CHARSET=utf8mb4 ROW_FORMAT=DYNAMIC;<br><br>- 以上是为了解决分页的问题； 当前的索引explain 提示走的是 唯一索引 uni_course_uid_user_id，我给 c_course_uid建了单列索引后，explain 仍提示走的是唯一索引 uni_course_uid_user_id；<br>Extra: Using index condition; Using where; Using filesort;<br><br>### 请问如何分析这个问题呢？ 不是单列索引c_course_uid, (id) 已经是有序，剩下就是顺序扫描了吗？ 为什么仍提示选择唯一索引呢？<br>```","like_count":1},{"had_liked":false,"id":177343,"user_name":"SnowsonZ","can_delete":false,"product_type":"c1","uid":1446972,"ip_address":"","ucode":"5AF76D55CCDC8F","user_header":"https://static001.geekbang.org/account/avatar/00/16/14/3c/d6be29f3.jpg","comment_is_top":false,"comment_ctime":1581350348,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5876317644","product_id":100020801,"comment_content":"Day4   索引<br><br>作用： 提高查询效率，从查询行数据到查询索引字段。<br><br>索引实现常用方式： 哈希表，顺序数组，搜索树<br>因为哈希冲突原因，哈希表更适用于等值查询，避免冲突后O(n)的复杂度查询；顺序数组适合静态数据索引，避免数据变动导致索引重建时移动原数据低效；搜索树更多的使用N叉树而非二叉树，尽量降低树高，树高为最大的磁盘访问次数，降低树高即降低磁盘访问次数，提高查询速度<br><br>覆盖索引：非主键索引覆盖了查询的索引要求，减少回表次数<br><br>最左前缀选择： 联合索引abc，从左向右做索引匹配<br><br>索引下推： 对联合索引，若查询条件覆盖了联合索引中的两个字段，在回表前先根据覆盖到的字段过滤，然后如果还需要回表时再做回表，减少回表次数","like_count":1},{"had_liked":false,"id":156187,"user_name":"Anthony","can_delete":false,"product_type":"c1","uid":1309908,"ip_address":"","ucode":"9E0C98A9123365","user_header":"https://static001.geekbang.org/account/avatar/00/13/fc/d4/743d3f02.jpg","comment_is_top":false,"comment_ctime":1574830257,"is_pvip":false,"replies":[{"id":"60003","content":"不是唯一索引的话，有可能5后面还有一个5😆","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1574841970,"ip_address":"","comment_id":156187,"utype":1}],"discussion_count":4,"race_medal":0,"score":"5869797553","product_id":100020801,"comment_content":"老师，我不明白为什么执行select * from T where k between 3 and 5是为什么还要执行第5步 在 k 索引树取下一个值 k=6，不满足条件，循环结束   因为我理解的是找到3 然后找到5 就能把这里对应的数据找出，不应该再去往后请求了，请老师解答","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476025,"discussion_content":"不是唯一索引的话，有可能5后面还有一个5😆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574841970,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":2,"child_discussions":[{"author":{"id":1272996,"avatar":"https://static001.geekbang.org/account/avatar/00/13/6c/a4/7f7c1955.jpg","nickname":"死磕郎一世","note":"","ucode":"86C1197C3FB2A0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":539512,"discussion_content":"老师，这么说的话，3的前面也要加多一次判断，3的前面可能还有一个3","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639733735,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":476025,"ip_address":""},"score":539512,"extra":""},{"author":{"id":1911661,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLDOKcx20Xxmu5j8WxiafoYvo3bIAFDg8OeicRic1icD597QuMC9O8FyV2Al9RxNfVZXK0gkGUx6M3CVQ/132","nickname":"多年以后","note":"","ucode":"D70E7A1ABE0F39","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1272996,"avatar":"https://static001.geekbang.org/account/avatar/00/13/6c/a4/7f7c1955.jpg","nickname":"死磕郎一世","note":"","ucode":"86C1197C3FB2A0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554797,"discussion_content":"因为是有序的肯定是从第一个3开始的，但是最后的5后面可能还有5","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646619982,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":539512,"ip_address":""},"score":554797,"extra":""}]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133566,"discussion_content":"你咋知道后面还有没有5呢。未知的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578971972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125271,"user_name":"子非鱼","can_delete":false,"product_type":"c1","uid":1621660,"ip_address":"","ucode":"020DA0784E728C","user_header":"https://static001.geekbang.org/account/avatar/00/18/be/9c/d21b7e17.jpg","comment_is_top":false,"comment_ctime":1566135038,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"5861102334","product_id":100020801,"comment_content":"您好，我想问下。一条sql查询语句，只能使用一个索引吗","like_count":1,"discussions":[{"author":{"id":1350991,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9d/4f/273ffb51.jpg","nickname":"小哪吒","note":"","ucode":"252087A733355C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380927,"discussion_content":"有可能使用多个索引，然后对两个结果集做交集，，看优化器选择。优化器选择的策略是数据分布。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624800504,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2146530,"avatar":"https://static001.geekbang.org/account/avatar/00/20/c0/e2/b45e4c91.jpg","nickname":"王飞","note":"","ucode":"6AB74544EE1364","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331943,"discussion_content":"在使用index_merge的时候，可以使用到多个索引，其他的都是单个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607008946,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":81108,"discussion_content":"我觉得是，多字段的话最好考虑联合索引了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576223718,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1652085,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKORTofsU89GYKtywquzKuEiabvZnEOonfMYKuCPlo8GDlXqZuJdBicu0XtlaeodH4BnmHV1kldSAwQ/132","nickname":"未来怎样","note":"","ucode":"4E54EB62595B27","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7801,"discussion_content":"应该是，比如你的where条件用了2个索引字段，优化器可能会选择其中的一个（规模小的）来进行查询","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567677761,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125002,"user_name":"蛋炒饭加鸡蛋","can_delete":false,"product_type":"c1","uid":1628398,"ip_address":"","ucode":"C75E27B9FB3336","user_header":"https://static001.geekbang.org/account/avatar/00/18/d8/ee/17f220b6.jpg","comment_is_top":false,"comment_ctime":1566039676,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5861006972","product_id":100020801,"comment_content":"老师，您好。<br>如果现在有一个高频请求，要根据市民的身份证号查询他的姓名，这个联合索引就有意义了。它可以在这个高频请求上用到覆盖索引，不再需要回表查整行记录，减少语句的执行时间。<br>这句话我不太理解，组合索引是如何进行覆盖索引的呢？","like_count":1,"discussions":[{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":29114,"discussion_content":"这里有个前提，是你查询的字段，已经被联合索引 + 主键索引给覆盖到。\n例如说 SELECT ID FROM user where username = &#39;111&#39; 。那么 username 假设有索引，那么 id 是它索引树的 VALUE ，没必要回表了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570728667,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114034,"user_name":"远方。","can_delete":false,"product_type":"c1","uid":1383340,"ip_address":"","ucode":"E95EE8BDB13025","user_header":"https://static001.geekbang.org/account/avatar/00/15/1b/ac/ba8a9c5d.jpg","comment_is_top":false,"comment_ctime":1563210037,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5858177333","product_id":100020801,"comment_content":"每天一课，收获满满","like_count":1},{"had_liked":false,"id":110621,"user_name":"涛哥哥","can_delete":false,"product_type":"c1","uid":1361159,"ip_address":"","ucode":"329A1384E3AB5E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqJobg767PUeqrqQQ4B6YvMatj2SRyOicKZZ4gWTf30dMketiaj58Gc3RFTmckGxAXlL9ERSxGovq9g/132","comment_is_top":false,"comment_ctime":1562303645,"is_pvip":false,"replies":[{"id":"40801","content":"👍<br><br>可以理解为还是key，value结构（其实是树形式组织的）<br><br>不以value的顺序来组织，而是key的顺序，key是没有“相同”的，你把主键值考虑进去就能发现了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1562698533,"ip_address":"","comment_id":110621,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5857270941","product_id":100020801,"comment_content":"所有的专栏都早已经看完，收获非常大，通过平常同事们的提问就已经知道在数据库方面，早已远远超过了很多人很多人。然而还是没分析出来二级索引的叶子节点的数据结构，不知道是不是（key,value）形式？并且这个相同的key来说，value还是有序的？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456970,"discussion_content":"👍\n\n可以理解为还是key，value结构（其实是树形式组织的）\n\n不以value的顺序来组织，而是key的顺序，key是没有“相同”的，你把主键值考虑进去就能发现了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562698533,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1183862,"avatar":"","nickname":"Wi-Fi moon","note":"","ucode":"E63074C9A5B56E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300328,"discussion_content":"不明白讲师的答复。当这个二级索引不是唯一约束索引时，在叶子结点上出现“一个key对应多个value（即多个primary key）”是很可能的呀！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598030894,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2278559,"avatar":"https://static001.geekbang.org/account/avatar/00/22/c4/9f/a01e4bd1.jpg","nickname":"海浪","note":"","ucode":"091941B3556B4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1183862,"avatar":"","nickname":"Wi-Fi moon","note":"","ucode":"E63074C9A5B56E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":323449,"discussion_content":"老师应该是说主键值也应当认为是key的一部分。所以辅助索引的key没有相同的。比如（1，100）和（1，700）虽然形式上是key，value，但是在B+树中它的key应当理解为1+100、1+700","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604936182,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":300328,"ip_address":""},"score":323449,"extra":""}]}]},{"had_liked":false,"id":109783,"user_name":"日出不落","can_delete":false,"product_type":"c1","uid":1574112,"ip_address":"","ucode":"BF470B973C9F1F","user_header":"https://static001.geekbang.org/account/avatar/00/18/04/e0/9b5892fa.jpg","comment_is_top":false,"comment_ctime":1562113909,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5857081205","product_id":100020801,"comment_content":"字符串是以什么形式存在B+树的节点里的呢？联合索引排序是以两个字段组合起来的字节码排序的吗？为什么只能最左前缀，而不能实现组合里的别的字段筛选","like_count":1,"discussions":[{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":81115,"discussion_content":"1：是什么值就存什么值被\n2:ascii吧（非中文）\n3：因为排序方式已经定了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576224020,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108941,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1561940575,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5856907871","product_id":100020801,"comment_content":"(a,b) 可以用最左原则<br><br>c 单独有了索引<br><br>此时 c,a查询都会走索引，c,b查询中，b不会走索引。<br><br>因此可以创建一个(c,b)索引，不知道我说的对不对，一会看一下答案。","like_count":1},{"had_liked":false,"id":107777,"user_name":"见＆不见","can_delete":false,"product_type":"c1","uid":1342533,"ip_address":"","ucode":"53C6167BB03424","user_header":"https://static001.geekbang.org/account/avatar/00/14/7c/45/19e24f98.jpg","comment_is_top":false,"comment_ctime":1561607699,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"5856574995","product_id":100020801,"comment_content":"老师，@不二很二同学这个问题<br>下面两条语句有什么区别，为什么都提倡使用2:<br>1.select * from T where k in(1,2,3,4,5) <br>2.select * from T where k between 1 and 5<br><br>这个没太明白 可以再详细说下吗<br>","like_count":1,"discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":236194,"discussion_content":"上面评论中有人解释：因为每个节点都包含指向下一个节点的指针，查找到第一个节点以后，往后遍历就行了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1587081863,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133351,"discussion_content":"但都是回表5次。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578962665,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":81118,"discussion_content":"你的疑问点只需要看下&#34;范围查询&#34;怎么通过索引树查找就解决了，重点就是顺序，顺序，顺序","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576224169,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":29105,"discussion_content":"1 需要查询 5 次\n2 是范围，只需要 1 ，然后顺序 2、3、4、5","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570727581,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1128038,"avatar":"https://static001.geekbang.org/account/avatar/00/11/36/66/5cc806ee.jpg","nickname":"啊一","note":"","ucode":"0278A8BBF40B3C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":25472,"discussion_content":"同样想问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570531081,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1399058,"avatar":"https://static001.geekbang.org/account/avatar/00/15/59/12/49458cb3.jpg","nickname":"🙄","note":"","ucode":"294786B5F39F8E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1128038,"avatar":"https://static001.geekbang.org/account/avatar/00/11/36/66/5cc806ee.jpg","nickname":"啊一","note":"","ucode":"0278A8BBF40B3C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36444,"discussion_content":"一个需要在树中从头查，一个只是需要在数据节点中链表查","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1571377655,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":25472,"ip_address":""},"score":36444,"extra":""}]}]},{"had_liked":false,"id":107463,"user_name":"见＆不见","can_delete":false,"product_type":"c1","uid":1342533,"ip_address":"","ucode":"53C6167BB03424","user_header":"https://static001.geekbang.org/account/avatar/00/14/7c/45/19e24f98.jpg","comment_is_top":false,"comment_ctime":1561539948,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"5856507244","product_id":100020801,"comment_content":"老师 请教些 创建表test 有主键ID a ,b ,c 三个字段 a,b,c建立联合索引 <br>select * from test where c like &#39;%s%&#39;;   explain 为啥还是会显示使用索引","like_count":1,"discussions":[{"author":{"id":1552912,"avatar":"https://static001.geekbang.org/account/avatar/00/17/b2/10/0b8afe39.jpg","nickname":"Future","note":"","ucode":"BBB0542C9BBDF7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":320384,"discussion_content":"看where条件和select字段，都包含在二级索引里面，但是不满足组合索引最左匹配，所以只能通过扫整个二级索引才能确定数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604354727,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1465412,"avatar":"https://static001.geekbang.org/account/avatar/00/16/5c/44/d07c0865.jpg","nickname":"Geek_d960af","note":"","ucode":"C59AEF44BD8691","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297556,"discussion_content":"应该是走了use index,覆盖索引。看前面评论的意思是   覆盖索引和主键索引里都包含了你要select的字段，这时候会优先走覆盖索引的。如果你再加个字段D,但是不在联合索引里，select *的话是不会走索引的，因为得回表拿D了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596968397,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1237583,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e2/4f/df01f65e.jpg","nickname":"Danfēng","note":"","ucode":"E5B3451F1D0441","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":281271,"discussion_content":"这个具体得看08篇，我看评论有人类似提出疑问作者回复的，我现在还没看到，不能给你正确回复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591703879,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":236196,"discussion_content":"因为遍历了索引树的所有节点，只是不能快速定位。就是老师说的：用索引不代表就能用索引快速定位，这两个词是有区别的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587081950,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136301,"discussion_content":"当然会显示索引了，因为你的where c使用的是abc索引的前缀索引原则。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579137219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":83757,"user_name":"刘金金777","can_delete":false,"product_type":"c1","uid":1129065,"ip_address":"","ucode":"1AB26D07BB8CDA","user_header":"https://static001.geekbang.org/account/avatar/00/11/3a/69/301a5c89.jpg","comment_is_top":false,"comment_ctime":1554710897,"is_pvip":false,"replies":[{"id":"30755","content":"(a,b) + (b)<br>如果是(大，小），就需要一个额外的(小）索引<br><br>如果是（小，大），就需要一个额外的（大）索引","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1555148175,"ip_address":"","comment_id":83757,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5849678193","product_id":100020801,"comment_content":"您好，组合索引顺序选择的时候，为什么字段大的排在前面会更省空间呢？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446135,"discussion_content":"(a,b) + (b)\n如果是(大，小），就需要一个额外的(小）索引\n\n如果是（小，大），就需要一个额外的（大）索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555148175,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":76670,"user_name":"kobe huang","can_delete":false,"product_type":"c1","uid":1014251,"ip_address":"","ucode":"235011AE91829A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/79/eb/b0aea6ff.jpg","comment_is_top":false,"comment_ctime":1552661951,"is_pvip":false,"replies":[{"id":"27968","content":"这个其实是要看查询怎么写。<br><br>比如语句就是 select count(<br>*) from T where delete_status= ... 那也只能给delete_status创建上索引， 不过如果delete_status的区分度很低，这个语句跟全索引扫描的效果也差不多。<br><br>还是要从业务设计上优化","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1552694005,"ip_address":"","comment_id":76670,"utype":1}],"discussion_count":5,"race_medal":0,"score":"5847629247","product_id":100020801,"comment_content":"老师好，有个问题要请教，假如有一张表，有多个状态的字段，比如 T(id，...... delete_flag, order_status,  handle_flag), 因为这些字段值域的区分度不大，比如都是0~3，所以按照之前的对索引的理解，针对这几个字段建索引效果应该不是很好，但是如果数据量大的话，按上面的条件查询等于全表扫描，会比较慢，实际工作中的场景，请问有什么好的优化建议？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443396,"discussion_content":"这个其实是要看查询怎么写。\n\n比如语句就是 select count(\n*) from T where delete_status= ... 那也只能给delete_status创建上索引， 不过如果delete_status的区分度很低，这个语句跟全索引扫描的效果也差不多。\n\n还是要从业务设计上优化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552694005,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1711801,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/1e/b9/ef6633fe.jpg","nickname":"阿照","note":"","ucode":"7B3F1864ED0350","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48133,"discussion_content":"记一下要点，索引区分度要高，如果stats这种类型的就两种，建立索引就没有必要了","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1573451863,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1303322,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e3/1a/061e77b6.jpg","nickname":"亢星东","note":"","ucode":"5E4063E83B2BB9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304590,"discussion_content":"我理解 状态只是一个字段 看哪个是唯一索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599621270,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1114643,"avatar":"https://static001.geekbang.org/account/avatar/00/11/02/13/78a2cbf4.jpg","nickname":"Mango君😊","note":"","ucode":"FD47F4A4F2329A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":126740,"discussion_content":"个人觉得可以跟主键建立联合索引，因为主键的索引基数比较大","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578535110,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1114643,"avatar":"https://static001.geekbang.org/account/avatar/00/11/02/13/78a2cbf4.jpg","nickname":"Mango君😊","note":"","ucode":"FD47F4A4F2329A","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":133376,"discussion_content":"那这种联合索引，对于上面的场景，基本没有意义。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1578963602,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":126740,"ip_address":""},"score":133376,"extra":""}]}]},{"had_liked":false,"id":75778,"user_name":"小白","can_delete":false,"product_type":"c1","uid":1202143,"ip_address":"","ucode":"717B408EDC07FD","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Z8t0JKFjnmdx4s4wuRePZXRL2L9awEpicp0rjT9rfXmZKOBIleZuOC86OzZE0tSdkfy3LWWa7YU67MicWeiaFd3jA/132","comment_is_top":false,"comment_ctime":1552467641,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5847434937","product_id":100020801,"comment_content":"老师请教一个问题，对于多表联查的索引是怎么选择的呢？或者说对于多表联查该怎么建立索引？","like_count":1},{"had_liked":false,"id":72539,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1551666368,"is_pvip":false,"replies":[{"id":"26278","content":"Oracle的原理我不够熟悉，不能乱说哈。<br><br>如果是在MySQL 里，既然都用UUID关联了，要做改动就要很小心。可以考虑保留UUID,并在这个字段上创建一个索引。同时创建一个字增主键ID","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551670503,"ip_address":"","comment_id":72539,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5846633664","product_id":100020801,"comment_content":"林老师，我发现我司的数据库（Oracle）几百张表的主键ID都是32位的UUID。看完本章，是不是说明我们的设计有问题；相比自增（Oracle用的是序列）ID，在同样多的数据下，UUID索引的文件要大大的增加。因为现在线上的数据比较庞大（表的数据动辙千万级别的），表与表之间的关联关系都是通过UUID来关联的，一张表的修改就会牵动全身，请问有没有好的优化方案？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441638,"discussion_content":"Oracle的原理我不够熟悉，不能乱说哈。\n\n如果是在MySQL 里，既然都用UUID关联了，要做改动就要很小心。可以考虑保留UUID,并在这个字段上创建一个索引。同时创建一个字增主键ID","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551670503,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72313,"user_name":"啊啊啊哦哦","can_delete":false,"product_type":"c1","uid":1309877,"ip_address":"","ucode":"68C7153ECAAC57","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/RNO4yZyBvic914hewmNNE8iblYDcfv5yGHZ9OnKuCuZXNmGR0F5qV3icKLT2xpMt66GyEpicZVvrmz8A6TIqt92MQg/132","comment_is_top":false,"comment_ctime":1551584036,"is_pvip":false,"replies":[{"id":"26216","content":"第二种","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551607965,"ip_address":"","comment_id":72313,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5846551332","product_id":100020801,"comment_content":"老师一条语句 比如你上面的between 3 and 5 执行顺序。在我的理解 有2种方式。一种是在二级索引顺序搜索出。全部的复合的条件后在 在AIO异步回表。 还有一种是 非机械磁盘下 边扫描二级索引边异步回表搜索。是上面的哪种 ？还是都不是","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441537,"discussion_content":"第二种","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551607965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65083,"user_name":"金龟","can_delete":false,"product_type":"c1","uid":1228500,"ip_address":"","ucode":"1C7D35C8AE8D9D","user_header":"https://static001.geekbang.org/account/avatar/00/12/be/d4/ff1c1319.jpg","comment_is_top":false,"comment_ctime":1549030652,"is_pvip":false,"replies":[{"id":"23067","content":"好问题<br><br>首先磁盘的数据和数据页是一样的，<br>所以磁盘只能记录 “我的第一个叶子节点在page_n”<br>在内存里面也是，然后当把page_n读到内存以后，内存里面记录的是“page_n”的内存地址在哪里","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1549038860,"ip_address":"","comment_id":65083,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5843997948","product_id":100020801,"comment_content":"老师还有个问题，b+树中的索引节点应该都是由指针和索引组成。但现在要将磁盘索引节点加载到内存中，这些指针地址是怎么映射的（磁盘和内存指针的映射）😂","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438315,"discussion_content":"好问题\n\n首先磁盘的数据和数据页是一样的，\n所以磁盘只能记录 “我的第一个叶子节点在page_n”\n在内存里面也是，然后当把page_n读到内存以后，内存里面记录的是“page_n”的内存地址在哪里","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549038860,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64098,"user_name":"Noah","can_delete":false,"product_type":"c1","uid":1336089,"ip_address":"","ucode":"93EF3490133ADE","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/GPm0HkJtcIudQqCcNJicDHJEG9AkV0hwWsKicyMKZ8sTObia58x2Ucz3QUpuePmRicRUUgdKVvliaYvtyJp8kLNINkA/132","comment_is_top":false,"comment_ctime":1548666783,"is_pvip":false,"replies":[{"id":"22728","content":"就建一个X (A, B, C) 好了<br>X已经是唯一索引了，不需要 Y (A, B, C, D, E)了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548705856,"ip_address":"","comment_id":64098,"utype":1}],"discussion_count":5,"race_medal":0,"score":"5843634079","product_id":100020801,"comment_content":"对于索引的选择还是有点疑惑，希望老师解答。<br>业务有个表大约十列数据。其中业务上需要唯一索引 X (A, B, C)。但是90%查询语句需要列 (A, B, C, D, E)， 为了提高性能最好的选择是加一个普通索引来覆盖列 Y (A, B, C, D, E)，但是这样问题就是索引X和Y的内容重复了。在数据库层面上有没有好的解决办法，在不需要唯一索引X的办法下来确保(A, B, C)列的唯一性，还是说X索引和Y索引都是必须的？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437856,"discussion_content":"就建一个X (A, B, C) 好了\nX已经是唯一索引了，不需要 Y (A, B, C, D, E)了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548705856,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1651172,"avatar":"","nickname":"Geek_276a05","note":"","ucode":"41FE0ABAB65F52","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":56456,"discussion_content":"X已经是唯一索引了，不需要 Y (A, B, C, D, E)了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574482759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1651172,"avatar":"","nickname":"Geek_276a05","note":"","ucode":"41FE0ABAB65F52","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":237638,"discussion_content":"看他表述的意思是：想增加索引列来使用覆盖索引，因为绝大部分查询都要用到这5列。现在的唯一索引查询后还需要回表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587175610,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":56456,"ip_address":""},"score":237638,"extra":""},{"author":{"id":1066757,"avatar":"https://static001.geekbang.org/account/avatar/00/10/47/05/04fcf578.jpg","nickname":"KingLiang","note":"","ucode":"4CB2C258ABC7DC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284209,"discussion_content":"我的理解是，既然是唯一索引，那么叶子节点中应该就包含整行数据了，不需要在用覆盖索引。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1592473358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":237638,"ip_address":""},"score":284209,"extra":""},{"author":{"id":3007210,"avatar":"","nickname":"Geek_a1699c","note":"","ucode":"CF7DB00BE36B77","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1066757,"avatar":"https://static001.geekbang.org/account/avatar/00/10/47/05/04fcf578.jpg","nickname":"KingLiang","note":"","ucode":"4CB2C258ABC7DC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574942,"discussion_content":"唯一索引是聚簇索引吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654484064,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":284209,"ip_address":""},"score":574942,"extra":""}]}]},{"had_liked":false,"id":61938,"user_name":"辉仔lovers","can_delete":false,"product_type":"c1","uid":1210219,"ip_address":"","ucode":"3DC5B0CD0B8E71","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLVhJRVwJ0eVlC7zjNfWP6PP7VmUkF1X2m6qfh7Wic3NhAOz2fSGibF6LXLcJ59zOz7nBpCcByvtFjw/132","comment_is_top":false,"comment_ctime":1547861861,"is_pvip":false,"replies":[{"id":"21953","content":"存放的就是每个字段","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547867171,"ip_address":"","comment_id":61938,"utype":1}],"discussion_count":7,"race_medal":0,"score":"5842829157","product_id":100020801,"comment_content":"老师：有个问题，B+树（主键的那棵） 的叶子节点中，除了存放的主键，是不是还存放了数据真正存在的地址值？安装你的理解存放的就是每个字段了 。到底是哪种情况","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437041,"discussion_content":"存放的就是每个字段","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547867171,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1711801,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/1e/b9/ef6633fe.jpg","nickname":"阿照","note":"","ucode":"7B3F1864ED0350","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48136,"discussion_content":"记一下要点，索引存放的是数据，不是地址，因为索引需要数据比对，如果地址的话，还得在进行关联，多一步操作，有的时候索引数据加起来大于表的数据，索引按照我的理解就是预先把经常用的数据摘出来保存一份","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573452089,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1350991,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9d/4f/273ffb51.jpg","nickname":"小哪吒","note":"","ucode":"252087A733355C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380930,"discussion_content":"如果 InnoDB 引擎主键索引叶子节点存储的的是数据地址，不光会多一次寻址。另外，考虑到 WAL ，数据异步刷盘，那么复杂度(写操作先保存在change buffer，此时主键叶子节点写不写这个临时地址？刷盘时肯定要zai写一次 bulabula)会上升。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624801521,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1350991,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9d/4f/273ffb51.jpg","nickname":"小哪吒","note":"","ucode":"252087A733355C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380929,"discussion_content":"MyISAM引擎的表主键索引的叶子节点存放的是数据地址。非主键索引同样如此，，两者的区别是主键索引必须是唯一的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624801280,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1257453,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2f/ed/a87bb8fa.jpg","nickname":"此鱼不得水","note":"","ucode":"95268E823FB4D2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":209,"discussion_content":"如果主键索引的叶子节点存放的具体的每个字段的话，那是不是主键索引的大小永远都是大于数据表本身的？比如我的数据表有1G，主键索引的大小一定是1G+喽？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561282617,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1257453,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2f/ed/a87bb8fa.jpg","nickname":"此鱼不得水","note":"","ucode":"95268E823FB4D2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133405,"discussion_content":"主键索引表就是表本身。难不成主键索引表中将主键重复存储，那没有什么意义啊。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1578964066,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":209,"ip_address":""},"score":133405,"extra":""},{"author":{"id":1526355,"avatar":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","nickname":"moonfox","note":"","ucode":"902BFF40EFA9FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1257453,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2f/ed/a87bb8fa.jpg","nickname":"此鱼不得水","note":"","ucode":"95268E823FB4D2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333807,"discussion_content":"嗯，主键索引即包括数据 也包括索引。另 叶子节点存放多行数据，不止一行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607617619,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":209,"ip_address":""},"score":333807,"extra":""}]}]},{"had_liked":false,"id":53277,"user_name":"领子","can_delete":false,"product_type":"c1","uid":1355801,"ip_address":"","ucode":"C921F81038EC0E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJrVbwS7iaQGCldibal1G73gEvebblsw5DTuxQG5eTPOGmryegBvk2J70M4oo3pwIY098RU7htRQRlA/132","comment_is_top":false,"comment_ctime":1545621470,"is_pvip":false,"replies":[{"id":"19287","content":"表t的数据存在文件t.ibd里面","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545623265,"ip_address":"","comment_id":53277,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5840588766","product_id":100020801,"comment_content":"请问第12篇专栏--- 为什么表数据删掉一半，表文件大小不变  在哪里可以看到呢","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434092,"discussion_content":"表t的数据存在文件t.ibd里面","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545623265,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44803,"user_name":"花生","can_delete":false,"product_type":"c1","uid":1252241,"ip_address":"","ucode":"93A097D5129495","user_header":"https://static001.geekbang.org/account/avatar/00/13/1b/91/66f0d38a.jpg","comment_is_top":false,"comment_ctime":1543495246,"is_pvip":false,"replies":[{"id":"15971","content":"分布式数据库一般都支持多维索引了，不然就叫“分布式KV”了。<br><br>其实是否使用分布式，还是取决于你是否需要分布式事务。<br><br>很多其实只需要分库分表（只能称为分散式）","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543497547,"ip_address":"","comment_id":44803,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5838462542","product_id":100020801,"comment_content":"老师好，这节讲了很多索引。请问如何根据业务判断需要单库，还是一些大厂出的分布式mysql数据库？分布式的数据库，除了用单个值的主键索引，其它索引都不支持。但是当数据量非常庞大的时候，是不是应该选分布式数据库？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430837,"discussion_content":"分布式数据库一般都支持多维索引了，不然就叫“分布式KV”了。\n\n其实是否使用分布式，还是取决于你是否需要分布式事务。\n\n很多其实只需要分库分表（只能称为分散式）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543497547,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44522,"user_name":"探索无止境","can_delete":false,"product_type":"c1","uid":1044178,"ip_address":"","ucode":"91D2A9907DFA79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/d2/7024431c.jpg","comment_is_top":false,"comment_ctime":1543454790,"is_pvip":false,"replies":[{"id":"15885","content":"要创建(c,b）联合索引，不过不要b单独创建索引哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543459032,"ip_address":"","comment_id":44522,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5838422086","product_id":100020801,"comment_content":"老师你好，关于思考题，我的理解是这样，<br>保留(a,b)作为联合主键索引，同时需要创建c和b两个单独索引<br>因为后续的查询语句中，c作为查询条件，而b也是作为排序字段，给排序字段建立索引，会加快排序的效率，如有理解错误，还请老师指正！这个专栏是我最喜欢的专栏，后面的思考题都有机会听到老师的经验分享见解，这一点是做得最好的！","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430784,"discussion_content":"要创建(c,b）联合索引，不过不要b单独创建索引哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543459032,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44170,"user_name":"俯瞰风景.","can_delete":false,"product_type":"c1","uid":1044166,"ip_address":"","ucode":"A6DB68B7B84AEE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/c6/bebcbcf0.jpg","comment_is_top":false,"comment_ctime":1543377423,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"5838344719","product_id":100020801,"comment_content":"如果索引树比较多，会导致插入数据、更新数据比较慢，是因为每次更改数据需要维护的索引树过多，是吧？还有其他影响因素么？<br>如果维护的索引树越来越大，会导致查询数据的效率变慢吧？原因是索引树占据空间过大，导致在索引树上搜索数据变慢了？","like_count":1,"discussions":[{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":29106,"discussion_content":"如果索引树比较多，会导致插入数据、更新数据比较慢，是因为每次更改数据需要维护的索引树过多，是吧？还有其他影响因素么？\n对的。每次需要更新索引树\n\n如果维护的索引树越来越大，会导致查询数据的效率变慢吧？原因是索引树占据空间过大，导致在索引树上搜索数据变慢了？\n数据多了，索引层级就可能多了，导致变慢。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1570727768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133421,"discussion_content":"索引树上定位数据位置，还是可以的，数据多了，也不会受多大影响。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1578964363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1237583,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e2/4f/df01f65e.jpg","nickname":"Danfēng","note":"","ucode":"E5B3451F1D0441","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":281282,"discussion_content":"前面几节不是讲过了，N叉树，有序，所以会快很多","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591705372,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2723576,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epxppZUun6eqepI5hGHjU3fP8yVIicUq7gYRZfR3PoDCMQqd2ia8CmCSa1mIIf6OYGFjbW28RCXmrJQ/132","nickname":"Geek_aef4be","note":"","ucode":"F1C3F2AE3CCA0F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1237583,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e2/4f/df01f65e.jpg","nickname":"Danfēng","note":"","ucode":"E5B3451F1D0441","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584592,"discussion_content":"首先，说下概念，一个索引占用一棵树（联合索引不管里边多少个字段，都是一个树），所以你要区分多棵树和一棵树的深度这是两个概念，为什么会导致查询速度慢呢？索引多了，只是占用存储空间比较多，并不是影响性能","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660962619,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":281282,"ip_address":"江苏"},"score":584592,"extra":""}]},{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":237677,"discussion_content":"数据越来越多，可能有更多的数据页需要从磁盘读到内存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587177389,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42743,"user_name":"往事随风，顺其自然","can_delete":false,"product_type":"c1","uid":1235692,"ip_address":"","ucode":"F266EC6B143E38","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/ec/779c1a78.jpg","comment_is_top":false,"comment_ctime":1543031448,"is_pvip":false,"replies":[{"id":"15295","content":"如果联合索引的定义是（身份证号，姓名）就可以","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543040807,"ip_address":"","comment_id":42743,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5837998744","product_id":100020801,"comment_content":"根据身份证号和名称怎么覆盖索引？只有查询对应ID才是覆盖索引吧，只有ID主键索引，不用回表","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430179,"discussion_content":"如果联合索引的定义是（身份证号，姓名）就可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543040807,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42703,"user_name":"高强","can_delete":false,"product_type":"c1","uid":1312433,"ip_address":"","ucode":"AA3C76FDD4BC61","user_header":"https://static001.geekbang.org/account/avatar/00/14/06/b1/ba6b4335.jpg","comment_is_top":false,"comment_ctime":1543023925,"is_pvip":false,"replies":[{"id":"15302","content":"优化器会估算代价，你最后这句话就是大多数的选择方案。 <br><br>所以前面的问题是不是天然解决啦😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543041974,"ip_address":"","comment_id":42703,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5837991221","product_id":100020801,"comment_content":"有个索引问题咨询一下老师:就是关于where条件in语句 到底走不走索引（这个字段是有索引的），有的人说走索引有的人不走索引<br>这个事实到底是什么呢，什么情况下where  in条件走索引<br>1.跟MySQL数据库版本有关吗<br>2.跟索引类型有关吗，主键索引   唯一索引  普通索引，其他<br>3.跟 in里面的数量有关吗，1个  2个  n个<br>4.如果in里有很多，那怎么优化呢，用union all，如果in后有上千上万甚至更多，也拆成上万个union all吗，这样效率高吗<br><br>我想着mysql应该把in里面的条件挨个循环走索引吧","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430168,"discussion_content":"优化器会估算代价，你最后这句话就是大多数的选择方案。 \n\n所以前面的问题是不是天然解决啦😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543041974,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1189572,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI0I3QjrHYr4QLrDzUOWpUsqOSeQsYxRJDHB09JCNu4EHftpYHSuU4X0UvwibiatcyT2hJC703MUdCg/132","nickname":"Geek_4693cc","note":"","ucode":"43A899198D7F3B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6967,"discussion_content":"那这样的话是不是可以认为union all其实就是把每条union的语句走索引查询，最后把结果合并起来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567231955,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42343,"user_name":"undifined","can_delete":false,"product_type":"c1","uid":1068920,"ip_address":"","ucode":"449CB4CD2DC089","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/78/c3d8ecb0.jpg","comment_is_top":false,"comment_ctime":1542941627,"is_pvip":false,"replies":[{"id":"15150","content":"1. 可以用上（身份证，名字）这个索引的<br>2. 还是要回表2次的呀，只是age&lt;&gt;10的不用<br>3. 第12讲会说到：）","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542949339,"ip_address":"","comment_id":42343,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5837908923","product_id":100020801,"comment_content":"1. 根据身份证号查地址，这个问题没明白，如果不建立地址和身份证号的联合索引，那么还是得全表扫描，麻烦老师再讲一下<br>2. 图 4 跟图 3 的区别是，InnoDB 在 (name,age) 索引内部就判断了 age 是否等于 10，对于不等于 10 的记录，直接判断并跳过。在我们的这个例子中，只需要对 ID4、ID5 这两条记录回表取数据判断，就只需要回表 2 次。这里索引里面并没有其他的字段，如果不回表怎么过滤不满足条件的记录<br>3. alter table T engine=InnoDB 这个是怎么实现的，老师可以详细一点吗","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430060,"discussion_content":"1. 可以用上（身份证，名字）这个索引的\n2. 还是要回表2次的呀，只是age&amp;lt;&amp;gt;10的不用\n3. 第12讲会说到：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542949339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42259,"user_name":"ken","can_delete":false,"product_type":"c1","uid":1252876,"ip_address":"","ucode":"57D75510608D51","user_header":"https://static001.geekbang.org/account/avatar/00/13/1e/0c/dee72260.jpg","comment_is_top":false,"comment_ctime":1542936087,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5837903383","product_id":100020801,"comment_content":"思考题:<br>这两个索引是有必要的。新增这两个索引，可以在联合索引树直接过滤掉不满足条件的记录，减少回表次数","like_count":1},{"had_liked":false,"id":42237,"user_name":"suke","can_delete":false,"product_type":"c1","uid":1007753,"ip_address":"","ucode":"C0287C31A4F45B","user_header":"","comment_is_top":false,"comment_ctime":1542934963,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5837902259","product_id":100020801,"comment_content":"alter table T engine=InnoDB。  这个语录为什么比删除后重建更好","like_count":1,"discussions":[{"author":{"id":1302064,"avatar":"https://static001.geekbang.org/account/avatar/00/13/de/30/b468b41d.jpg","nickname":"北落狮门","note":"","ucode":"C5A951170001B9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":841,"discussion_content":"数据怎么办","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562119779,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42146,"user_name":"一笑奈何","can_delete":false,"product_type":"c1","uid":1007709,"ip_address":"","ucode":"33FE23DF749936","user_header":"https://static001.geekbang.org/account/avatar/00/0f/60/5d/f6350fce.jpg","comment_is_top":false,"comment_ctime":1542931639,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5837898935","product_id":100020801,"comment_content":"需要注意的是，在引擎内部使用覆盖索引在索引 k 上其实读了三个记录，R3~R5，但是对于 MySQL 的 Server 层来说，它就是找引擎拿到了两条记录，因此 MySQL 认为扫描行数是 2。<br>两条记录是指between 3 and  5吗？","like_count":1,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133443,"discussion_content":"是R3,R4两行记录。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578965332,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42111,"user_name":"刘大帅","can_delete":false,"product_type":"c1","uid":1001635,"ip_address":"","ucode":"9D37ADFDE117BD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/a3/a66e61b8.jpg","comment_is_top":false,"comment_ctime":1542928872,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5837896168","product_id":100020801,"comment_content":"不知道对不对，大胆回答一下。<br>因为有前缀索引规则，所以ca不需要联合索引。<br>在支持索引下推之后，cb也不需要了。<br>另外，老师画图软件用的什么，这么小清新的赶脚。","like_count":1,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133448,"discussion_content":"ca不需要，cb需要。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578965453,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42099,"user_name":"改个啥名字","can_delete":false,"product_type":"c1","uid":1302480,"ip_address":"","ucode":"954A17B322E0CA","user_header":"https://static001.geekbang.org/account/avatar/00/13/df/d0/ccc73e63.jpg","comment_is_top":false,"comment_ctime":1542919531,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5837886827","product_id":100020801,"comment_content":"老师好，文章中提到:身份证号是市民的唯一标识。也就是说，如果有根据身份证号查询市民信息的需求，我们只要在身份证号字段上建立索引就够了。而再建立一个（身份证号、姓名）的联合索引，是不是浪费空间？<br><br>如果现在有一个高频请求，要根据市民的身份证号查询他的姓名和年龄，这个联合索引就有意义了。它可以在这个高频请求上用到覆盖索引，不再需要回表查整行记录，减少语句的执行时间。<br><br>为什么建立一个（身份证，姓名）的联合索引，在查询姓名和年龄时就能覆盖索引，不需要回表了呢？是怎么实现的呢？","like_count":1,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133454,"discussion_content":"你理解错了，是可以在身份证，姓名这个索引上，再加上年龄，打造身份证，姓名、年龄的联合索引。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578965690,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":360608,"user_name":"勿更改任何信息","can_delete":false,"product_type":"c1","uid":2028956,"ip_address":"北京","ucode":"575185C69C05A3","user_header":"","comment_is_top":false,"comment_ctime":1666685452,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1666685452","product_id":100020801,"comment_content":"老师您好，有个关于索引区分度的疑问，一般我们是选择区分度比较高的字段做索引，但是如果某个字段区分度很低（比如说状态，只有0和1两个值，但是表里大部分都是状态为1的），那我们业务场景是想查询状态为0的数据，这种情况给状态字段加索引会有效果吗，什么原理呢","like_count":0},{"had_liked":false,"id":359569,"user_name":"吃西瓜不吐籽","can_delete":false,"product_type":"c1","uid":1195123,"ip_address":"上海","ucode":"D5409892361CC0","user_header":"https://static001.geekbang.org/account/avatar/00/12/3c/73/a1558528.jpg","comment_is_top":false,"comment_ctime":1665648575,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1665648575","product_id":100020801,"comment_content":"当年刚毕业时买的，后来没怎么看，现在再看，真的很好的课程","like_count":0},{"had_liked":false,"id":359026,"user_name":"李文宇","can_delete":false,"product_type":"c1","uid":2686557,"ip_address":"北京","ucode":"4097C7910890FB","user_header":"https://static001.geekbang.org/account/avatar/00/28/fe/5d/12174003.jpg","comment_is_top":false,"comment_ctime":1665188400,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1665188400","product_id":100020801,"comment_content":"老师，C索引是不是也可以去掉呢？已经有cb索引了","like_count":0},{"had_liked":false,"id":358822,"user_name":"doD","can_delete":false,"product_type":"c1","uid":2981242,"ip_address":"湖北","ucode":"2FEFBF43BA034E","user_header":"https://static001.geekbang.org/account/avatar/00/2d/7d/7a/2dee5434.jpg","comment_is_top":false,"comment_ctime":1664850106,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1664850106","product_id":100020801,"comment_content":"可以去看下这篇博文，解释了联合索引在b+树上的存储方式，以及最左前缀原则的原理，https:&#47;&#47;juejin.cn&#47;post&#47;6844904073955639304。","like_count":0},{"had_liked":false,"id":358719,"user_name":"Neil43","can_delete":false,"product_type":"c1","uid":1067171,"ip_address":"广东","ucode":"10F3039818E3BE","user_header":"https://wx.qlogo.cn/mmopen/vi_32/2nM9PaEsM4XTZuqQiavicyRuibcp8n1tBpL9mFTRbeqn47dzU9eGNoicJYUOO8tUiaU6pT2D8rjmG0DlBv1eFVWZrkQ/132","comment_is_top":false,"comment_ctime":1664618723,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1664618723","product_id":100020801,"comment_content":"我的理解：<br>1、“ca”这个索引是没有必要的，首先基于“c”索引的就可以查到 c=N对应的主键集合，而联合主键(a,b)基于最左前缀原则，是根据a排序的，找到对应最左的联合索引即可，其实就等价于&quot;ca&quot;联合主键。 <br>2、“cb”这个索引是需要的，虽然首先基于“c”索引的就可以查到 c=N对应的主键集合，但是还要要根据b排序找到对应的行，那还是需要找到后回表找打实际行去对比b才能正确排序。","like_count":0},{"had_liked":false,"id":357826,"user_name":"PeterLiu","can_delete":false,"product_type":"c1","uid":2686329,"ip_address":"北京","ucode":"5DC39FF542DCE0","user_header":"https://static001.geekbang.org/account/avatar/00/28/fd/79/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1663666672,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1663666672","product_id":100020801,"comment_content":"老师，请问一下：覆盖索引是不是只有在查询主键的时候有用哦，因为二级索引的叶子节点只能存主键。那我要是想查询的是所有数据呢，select * ，是不是先进行第一次查询，查出所有的ID，再进行第二次查询，条件是ID在第一次查询的结果集中。这样理解对吗？<br>","like_count":0},{"had_liked":false,"id":357607,"user_name":"一滴水的波浪","can_delete":false,"product_type":"c1","uid":2882763,"ip_address":"北京","ucode":"B88A25C2C87B87","user_header":"https://static001.geekbang.org/account/avatar/00/2b/fc/cb/9e7f075c.jpg","comment_is_top":false,"comment_ctime":1663474415,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1663474415","product_id":100020801,"comment_content":"设置索引后，索引树上的数据都是排好顺序的吗？是升序吗？","like_count":0},{"had_liked":false,"id":357269,"user_name":"雨落浅析","can_delete":false,"product_type":"c1","uid":2694014,"ip_address":"广东","ucode":"C851AFBC886414","user_header":"https://static001.geekbang.org/account/avatar/00/29/1b/7e/1db58898.jpg","comment_is_top":false,"comment_ctime":1663126728,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1663126728","product_id":100020801,"comment_content":"老师您好，我想问一下，关于多个单列索引和联合索引应该怎么选择？<br>","like_count":0},{"had_liked":false,"id":356928,"user_name":"在路上","can_delete":false,"product_type":"c1","uid":1476245,"ip_address":"重庆","ucode":"2668A965FA79F2","user_header":"https://static001.geekbang.org/account/avatar/00/16/86/95/b9d960d9.jpg","comment_is_top":false,"comment_ctime":1662709043,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1662709043","product_id":100020801,"comment_content":"都不需要创建联合索引，因为根据最左前缀原则这条语句只用回一次表","like_count":0},{"had_liked":false,"id":350803,"user_name":"Jone","can_delete":false,"product_type":"c1","uid":1716049,"ip_address":"","ucode":"8BEEE8AE17D4A9","user_header":"https://static001.geekbang.org/account/avatar/00/1a/2f/51/7c3f2690.jpg","comment_is_top":false,"comment_ctime":1657208646,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657208646","product_id":100020801,"comment_content":"老师 我想到了一个可怕的问题，如果没有索引下推，之前的联合索引是不是没什么作用！之前根据最左前缀就回表了，联合索引后面的索引字段直接浪费啊","like_count":0},{"had_liked":false,"id":350257,"user_name":"哈姆","can_delete":false,"product_type":"c1","uid":1097042,"ip_address":"","ucode":"B40EFE58BD2D20","user_header":"https://static001.geekbang.org/account/avatar/00/10/bd/52/5994ad51.jpg","comment_is_top":false,"comment_ctime":1656728979,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1656728979","product_id":100020801,"comment_content":"请问一下，如果一个表比较大，加了索引，查询速度是快了，但是插入变慢，如何解决呢","like_count":0,"discussions":[{"author":{"id":1315438,"avatar":"https://static001.geekbang.org/account/avatar/00/14/12/6e/3a0b4930.jpg","nickname":"FiRerOUNd","note":"","ucode":"571CB6565F9713","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582308,"discussion_content":"需要结合实际场景权衡利弊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659360143,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":349830,"user_name":"Geek_b745bf","can_delete":false,"product_type":"c1","uid":2104889,"ip_address":"","ucode":"6EB395F6AE0C15","user_header":"","comment_is_top":false,"comment_ctime":1656375810,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1656375810","product_id":100020801,"comment_content":"如果走索引下推时，查询条件中有id，这个id会在二级索引中被判断么","like_count":0},{"had_liked":false,"id":348035,"user_name":"Hello，World！：)","can_delete":false,"product_type":"c1","uid":2111332,"ip_address":"","ucode":"89F1DB34D197B4","user_header":"https://static001.geekbang.org/account/avatar/00/20/37/64/26704448.jpg","comment_is_top":false,"comment_ctime":1654681272,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1654681272","product_id":100020801,"comment_content":"老师，我有一个问题，既然索引中的叶子结点是存储的记录的ID，那为什么不能存储成记录的指针呢？这样的话不就根本不需要回表了吗？","like_count":0},{"had_liked":false,"id":342592,"user_name":"亚林","can_delete":false,"product_type":"c1","uid":1018972,"ip_address":"","ucode":"4A5A6D24314B79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/5c/3f164f66.jpg","comment_is_top":false,"comment_ctime":1650357505,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650357505","product_id":100020801,"comment_content":"覆盖索引是不回表，索引下推是通过覆盖索引提前判断，减少回表次数","like_count":0},{"had_liked":false,"id":341909,"user_name":"","can_delete":false,"product_type":"c1","uid":2461565,"ip_address":"","ucode":"1278C2B8980298","user_header":"https://static001.geekbang.org/account/avatar/00/25/8f/7d/99403d7c.jpg","comment_is_top":false,"comment_ctime":1649913375,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1649913375","product_id":100020801,"comment_content":"老师，什么是索引倾斜呢？","like_count":0},{"had_liked":false,"id":341562,"user_name":"再见理想","can_delete":false,"product_type":"c1","uid":1245999,"ip_address":"","ucode":"FAC88B3F6F6DFD","user_header":"https://static001.geekbang.org/account/avatar/00/13/03/2f/0a5e0751.jpg","comment_is_top":false,"comment_ctime":1649689719,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1649689719","product_id":100020801,"comment_content":"覆盖索引，通过索引+主键Id直接满足查询字段，避免回表<br>联合索引，多个字段共同组成的索引，适用于查询多个条件字段，或利用覆盖索引减少回表，提升查询效率。<br>最左前缀原则：最左前缀可以是联合索引的最左 N 个字段，也可以是字符串索引的最左 M 个字符。<br>1，在建立联合索引时需要安排索引顺序，尽量通过调整顺序，可以少维护一个索引。<br>2,  同时需要考虑空间上的问题。<br>索引下推：可以在索引遍历过程中，对索引中包含的字段先做判断，直接过滤掉不满足条件的记录，减少回表次数<br><br>重建索引可以使数据按顺序插入，页面利用率更高，也就是索引更紧凑，省空间。<br><br>","like_count":0},{"had_liked":false,"id":338473,"user_name":"Geek_5e96f8","can_delete":false,"product_type":"c1","uid":2939102,"ip_address":"","ucode":"63165944422A5E","user_header":"","comment_is_top":false,"comment_ctime":1647514553,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647514553","product_id":100020801,"comment_content":"老师好，能给分享个B树和B+树知识吗？上网搜索了好多，特证写得都不一样，不知道那个对了","like_count":0},{"had_liked":false,"id":338445,"user_name":"Geek_55e386","can_delete":false,"product_type":"c1","uid":1795793,"ip_address":"","ucode":"5A727F1323C2D0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/zxkns28cIAUZIt3WjDb8G26qiccT84d9GMr9ZpbYR60TU1ibqSj9NoYVHlJvGF1kOltkqNDmEfJCqPuYVkue3WHg/132","comment_is_top":false,"comment_ctime":1647505415,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647505415","product_id":100020801,"comment_content":"回表为什么不能批量呢. 每次一条数据回表一次不是很耗费资源吗","like_count":0},{"had_liked":false,"id":337701,"user_name":"汤二六","can_delete":false,"product_type":"c1","uid":2582143,"ip_address":"","ucode":"5E27DA31B11EBA","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIRNpZymzkl4KpBTBLeLCg6NiaiaCEA7OiaEiaUd2SPOCxBiaT7SjGVGdZ6U2y9zFCtYzOyicOBOSmh0V2w/132","comment_is_top":false,"comment_ctime":1646982812,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646982812","product_id":100020801,"comment_content":"对于问题，个人认为cb是有必要的，ca是没有必要的。因为已经有了普通索引c和主键索引ab，普通索引c构成的这颗B+树的叶子结点是主键ab的值，所以其实可以替代索引ca、cab。因此没有必要特意建立ca这个索引。","like_count":0},{"had_liked":false,"id":337027,"user_name":"李二木","can_delete":false,"product_type":"c1","uid":1103091,"ip_address":"","ucode":"30E03BB84ADB27","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/f3/129d6dfe.jpg","comment_is_top":false,"comment_ctime":1646557906,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1646557906","product_id":100020801,"comment_content":"索引下推是否有个前提，索引要是联合索引？","like_count":0},{"had_liked":false,"id":336933,"user_name":"woJA1wCgAAICtEpVsYQEygtlO83N7Z9w","can_delete":false,"product_type":"c1","uid":2929171,"ip_address":"","ucode":"207C2F36BCC2EE","user_header":"","comment_is_top":false,"comment_ctime":1646478521,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646478521","product_id":100020801,"comment_content":"联合索引能建立3个或以上吗","like_count":0},{"had_liked":false,"id":336691,"user_name":"哲子兄","can_delete":false,"product_type":"c1","uid":1348819,"ip_address":"","ucode":"6D6B6FE1ED2583","user_header":"https://static001.geekbang.org/account/avatar/00/14/94/d3/1861fa96.jpg","comment_is_top":false,"comment_ctime":1646293643,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646293643","product_id":100020801,"comment_content":"老师，以上述的 身份证表 为例，如果我要根据用户的年龄和姓名查询身份证ID，此时建立“姓名_年龄”的联合索引查询身份证号需要回表吗，跟分别建立“年龄”和“姓名”的普通索引相比，哪种查询效率更高？","like_count":0},{"had_liked":false,"id":336287,"user_name":"李晨旭","can_delete":false,"product_type":"c1","uid":1269520,"ip_address":"","ucode":"3574D412EDB868","user_header":"https://static001.geekbang.org/account/avatar/00/13/5f/10/cb7a6982.jpg","comment_is_top":false,"comment_ctime":1646050565,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1646050565","product_id":100020801,"comment_content":"笔记<br>1.减少回表次数，创建索引尽量做到覆盖索引<br>2.创建联合索引原则：<br>   第一：维护的索引个数尽量少--&gt;通过最左前缀可以少维护一下索引<br>   第二：索引占用的空间尽量少---&gt;综合考虑全部的查询业务，选择索引空间总量较少的组合","like_count":0},{"had_liked":false,"id":335068,"user_name":"鲁·本","can_delete":false,"product_type":"c1","uid":1209939,"ip_address":"","ucode":"F1DEB30C21B48E","user_header":"https://static001.geekbang.org/account/avatar/00/12/76/53/21d62a23.jpg","comment_is_top":false,"comment_ctime":1645282260,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645282260","product_id":100020801,"comment_content":"索引c叶子结点的主键排列是有序的吗？","like_count":0},{"had_liked":false,"id":334644,"user_name":"李維道","can_delete":false,"product_type":"c1","uid":1926057,"ip_address":"","ucode":"9A16ECAB2522E3","user_header":"https://static001.geekbang.org/account/avatar/00/1d/63/a9/abed781e.jpg","comment_is_top":false,"comment_ctime":1645055298,"is_pvip":true,"discussion_count":0,"race_medal":5,"score":"1645055298","product_id":100020801,"comment_content":"想请问重建主键索引和MySQL提供的OPTIMIZE TABLE语句的场景是否一样呢？如果不一樣，可以说明一下吗？","like_count":0},{"had_liked":false,"id":334372,"user_name":"子豪sirius","can_delete":false,"product_type":"c1","uid":1117023,"ip_address":"","ucode":"E8D08D2D33E785","user_header":"https://static001.geekbang.org/account/avatar/00/11/0b/5f/2cc4060c.jpg","comment_is_top":false,"comment_ctime":1644904354,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1644904354","product_id":100020801,"comment_content":"遇到个面试题目一个表中：建了联合索引 (a,b,c)，在查询select * from table where b &gt; 1 and a = 1 and c &lt; 1，索引是怎么处理的？","like_count":0},{"had_liked":false,"id":333420,"user_name":"Johar","can_delete":false,"product_type":"c1","uid":1101969,"ip_address":"","ucode":"834136A6F64CDC","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/91/89123507.jpg","comment_is_top":false,"comment_ctime":1644335151,"is_pvip":false,"discussion_count":0,"race_medal":2,"score":"1644335151","product_id":100020801,"comment_content":"老师，有没有好的并发批量插入更新mysql记录的方法？使用 insert into … on duplicate key update，容易造成死锁","like_count":0},{"had_liked":false,"id":331670,"user_name":"阳光的味道","can_delete":false,"product_type":"c1","uid":1105945,"ip_address":"","ucode":"A007A97768449D","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/19/f7cf8183.jpg","comment_is_top":false,"comment_ctime":1642695491,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642695491","product_id":100020801,"comment_content":"老师讲的很好，学习了。","like_count":0},{"had_liked":false,"id":331336,"user_name":"孟令超","can_delete":false,"product_type":"c1","uid":1433609,"ip_address":"","ucode":"37916911C0F9D9","user_header":"https://static001.geekbang.org/account/avatar/00/15/e0/09/eb3da11d.jpg","comment_is_top":false,"comment_ctime":1642555946,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642555946","product_id":100020801,"comment_content":"老师select * from T where k  between 3 and 5 过程中，是先通过k 索引树查询到k=3然后获取主键值，进行回表获取记录，返回给执行器，然后重复上述过程到不满足条件结束吗","like_count":0},{"had_liked":false,"id":328759,"user_name":"tc小马哥","can_delete":false,"product_type":"c1","uid":2877435,"ip_address":"","ucode":"94B7F24298FF35","user_header":"","comment_is_top":false,"comment_ctime":1640868966,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1640868966","product_id":100020801,"comment_content":"如果条件是 like &#39;张%&#39; and age&gt;10 这样的索引下推还有用吗？","like_count":0,"discussions":[{"author":{"id":2873900,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/da/2c/cdd92f3f.jpg","nickname":"wáng","note":"","ucode":"9BFEA73AD7680D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557642,"discussion_content":"有用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647916061,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":328563,"user_name":"阳光下的小丑","can_delete":false,"product_type":"c1","uid":2289364,"ip_address":"","ucode":"57995B5CC72715","user_header":"https://static001.geekbang.org/account/avatar/00/22/ee/d4/040686cd.jpg","comment_is_top":false,"comment_ctime":1640773461,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1640773461","product_id":100020801,"comment_content":"问个索引问题 有个索引 KEY idx_a (`a`)   在5.7 中 <br>where a &gt; 3 可以用到索引<br>where a &gt;= 3 用不到索引<br>8.0以上都能用过这是什么 区别是什么有点不明白","like_count":0},{"had_liked":false,"id":327666,"user_name":"一个无趣的俗人","can_delete":false,"product_type":"c1","uid":1691669,"ip_address":"","ucode":"25435088B10CA2","user_header":"https://static001.geekbang.org/account/avatar/00/19/d0/15/5851180d.jpg","comment_is_top":false,"comment_ctime":1640226361,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640226361","product_id":100020801,"comment_content":"三刷，总结问题<br><br>1、有什么办法可以避免索引回表查询吗？<br><br>2、单独为一个不频繁的请求创建一个联合索引感觉有点浪费，应该怎么做？","like_count":0},{"had_liked":false,"id":327550,"user_name":"Daiver","can_delete":false,"product_type":"c1","uid":1466447,"ip_address":"","ucode":"9B1A03AFBC79BC","user_header":"https://static001.geekbang.org/account/avatar/00/16/60/4f/db0e62b3.jpg","comment_is_top":false,"comment_ctime":1640166577,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640166577","product_id":100020801,"comment_content":"有个联合索引（a、b、c），使用select * from t where a = xxx and c = xxx 这样c会走索引吗","like_count":0},{"had_liked":false,"id":327357,"user_name":"吃茫茫","can_delete":false,"product_type":"c1","uid":2122304,"ip_address":"","ucode":"D9781EDA5CC825","user_header":"https://static001.geekbang.org/account/avatar/00/20/62/40/faf9a818.jpg","comment_is_top":false,"comment_ctime":1640079764,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640079764","product_id":100020801,"comment_content":"根据最左原则，索引 C 也可以删除吧？只保留主键索引 (a,b) 和 非主键索引 (c,b) 即可","like_count":0},{"had_liked":false,"id":325024,"user_name":"Geek_77f821","can_delete":false,"product_type":"c1","uid":2860456,"ip_address":"","ucode":"8832213902A859","user_header":"","comment_is_top":false,"comment_ctime":1638781926,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638781926","product_id":100020801,"comment_content":"思考题中  关于联合索引(c,b)和(c,b,a)一致我没有理解   这里是指存储视图还是排序规则？<br>普通索引存储时  key存的普通索引本身    value存的是主键的值   那（c,b）的存储视图是什么样的呢？<br>1、key存的是(c,b)    value是主键（a）？<br>2、key存的是(c,b)    value是主键（a,b）？<br>还是其他的？","like_count":0},{"had_liked":false,"id":323320,"user_name":"Geek4329","can_delete":false,"product_type":"c1","uid":2028951,"ip_address":"","ucode":"D6FB8D1B2D5DAC","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f5/97/9a7ee7b3.jpg","comment_is_top":false,"comment_ctime":1637833043,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637833043","product_id":100020801,"comment_content":"覆盖索引，这里，说的是根据身份证号和姓名建立联合索引，写的是姓名和年龄的索引","like_count":0},{"had_liked":false,"id":322474,"user_name":"建强","can_delete":false,"product_type":"c1","uid":1397126,"ip_address":"","ucode":"62B03D0E0C64EC","user_header":"https://static001.geekbang.org/account/avatar/00/15/51/86/b5fd8dd8.jpg","comment_is_top":false,"comment_ctime":1637404904,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637404904","product_id":100020801,"comment_content":"老师，想问一下，如果两个表做关联查询，且两个表都在关联字段上建立了索引，那么MySQL是在哪个索引树上做检索操作，还是同时扫描两个索引树；如果只在其中一个表上对关联字段建立了索引又会如何，这个工作原理能简单讲一下吗","like_count":0},{"had_liked":false,"id":322458,"user_name":"毛小树","can_delete":false,"product_type":"c1","uid":1851970,"ip_address":"","ucode":"E47DC07CE4959E","user_header":"https://static001.geekbang.org/account/avatar/00/1c/42/42/2a04ada9.jpg","comment_is_top":false,"comment_ctime":1637399059,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1637399059","product_id":100020801,"comment_content":"mark","like_count":0},{"had_liked":false,"id":321057,"user_name":"JiaLong","can_delete":false,"product_type":"c1","uid":2084728,"ip_address":"","ucode":"608B611F02A846","user_header":"https://static001.geekbang.org/account/avatar/00/1f/cf/78/72c1545a.jpg","comment_is_top":false,"comment_ctime":1636637107,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636637107","product_id":100020801,"comment_content":"老师举的那个例子，身份证号与姓名做联合索引，而这张表的主键是ID,不是ID_CARD. 我原来以为身份证号是主键，所以觉得这个例子勉强。不过问题是既然身份证ID CARD是唯一的，在真实的业务场景中，是否应该用它作为主键而不是用 ID呢？","like_count":0},{"had_liked":false,"id":321055,"user_name":"JiaLong","can_delete":false,"product_type":"c1","uid":2084728,"ip_address":"","ucode":"608B611F02A846","user_header":"https://static001.geekbang.org/account/avatar/00/1f/cf/78/72c1545a.jpg","comment_is_top":false,"comment_ctime":1636636256,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636636256","product_id":100020801,"comment_content":"老师举的例子，身份证号和姓名一起建复合索引避免回表查姓名，感觉意义不大，因为它的时间复杂度和在主键索引上查姓名不是一样的吗？","like_count":0},{"had_liked":false,"id":320968,"user_name":"雨林微木","can_delete":false,"product_type":"c1","uid":1254299,"ip_address":"","ucode":"2751ADAD50DB30","user_header":"","comment_is_top":false,"comment_ctime":1636600275,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636600275","product_id":100020801,"comment_content":"老师，这节课讲了个索引下推的概念，我有个问题，就是普通索引再加主键的条件，能起到索引下推的过滤效果吗？<br>一张大表，有主键id，普通索引b，要查select * from t where b=5000 and id&gt;1000 order by id limit 100的数据，mysql 默认会走主键索引，但指定索引b实际效果会更好，这是不是因为id&gt;1000起到索引下推的效果了？","like_count":0},{"had_liked":false,"id":320512,"user_name":"Geek_13133f","can_delete":false,"product_type":"c1","uid":2835291,"ip_address":"","ucode":"9B4BFC0C654311","user_header":"","comment_is_top":false,"comment_ctime":1636359815,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636359815","product_id":100020801,"comment_content":"最左匹配演示:<br><br>SELECT * FROM tuser WHERE name=&quot;张三&quot;;\t\t\t\t会走索引name_age<br>SELECT * FROM tuser WHERE age=22;\t\t\t\t\t会走索引name_age(刚好触发索引覆盖，正常情况下是不会走name_age索引的)<br>SELECT * FROM tuser WHERE name=&quot;张三&quot; and age=22;\t\t会走索引name_age<br>SELECT * FROM tuser WHERE age=22 and name=&quot;张三&quot;;\t\t会走索引name_age","like_count":0},{"had_liked":false,"id":319980,"user_name":"tc","can_delete":false,"product_type":"c1","uid":1797318,"ip_address":"","ucode":"2C1D78B3ED7684","user_header":"https://static001.geekbang.org/account/avatar/00/1b/6c/c6/a0aa0d95.jpg","comment_is_top":false,"comment_ctime":1636026987,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636026987","product_id":100020801,"comment_content":"请问，如果只有普通索引，没有主键索引；普通索引的value 叶子节点存储的是什么？","like_count":0},{"had_liked":false,"id":319932,"user_name":"bigdudo","can_delete":false,"product_type":"c1","uid":1371360,"ip_address":"","ucode":"5938710D7C1149","user_header":"https://static001.geekbang.org/account/avatar/00/14/ec/e0/d072d6f0.jpg","comment_is_top":false,"comment_ctime":1636012044,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636012044","product_id":100020801,"comment_content":"联合索引的作用：1、为覆盖索引带来了便捷，联合索引（a , b），那么select a,b from table where a=10;就不需要回表来去查b，而是直接在ab联合索引树中将数据查处；<br>2、索引下推，在多级查询中需要关联其他索引表或者需要回表的情况下，可以通过联合索引由做至右原则，将最终数据筛选出来，以此减少接下来的因关联其他筛选逻辑或者需要回表所产生的磁盘io，提高整体查询性能","like_count":0},{"had_liked":false,"id":319201,"user_name":"松鼠鱼","can_delete":false,"product_type":"c1","uid":1815185,"ip_address":"","ucode":"C0E87CCF71DB44","user_header":"","comment_is_top":false,"comment_ctime":1635671553,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1635671553","product_id":100020801,"comment_content":"“如果我现在要按照市民的身份证号去查他的家庭地址呢？虽然这个查询需求在业务中出现的概率不高，但总不能让它走全表扫描吧？”<br>我的理解是，其实不会的，一般至少会建一个身份证号的唯一索引，或者组合索引，这样在查身份证号和地址的时候只是需要回表而已，不需要全表扫描，而且由于身份证号唯一，因此回表的效率也很高？请老师指正。","like_count":0},{"had_liked":false,"id":317584,"user_name":"千锤百炼领悟之极限","can_delete":false,"product_type":"c1","uid":1744257,"ip_address":"","ucode":"224B5CF2101716","user_header":"https://static001.geekbang.org/account/avatar/00/1a/9d/81/d748b7eb.jpg","comment_is_top":false,"comment_ctime":1634866062,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634866062","product_id":100020801,"comment_content":"思考题ca索引不需要，因为已经有c和a,b联合所以，能符合搜索c+a的场景。c,b索引是需要的。","like_count":0},{"had_liked":false,"id":316283,"user_name":"我不骑小毛驴","can_delete":false,"product_type":"c1","uid":1298308,"ip_address":"","ucode":"3481F84FDF8D25","user_header":"https://static001.geekbang.org/account/avatar/00/13/cf/84/30c0aff0.jpg","comment_is_top":false,"comment_ctime":1634260988,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634260988","product_id":100020801,"comment_content":"为什么ca列上的索引满足最左前缀，不用加。而cb列则需要呢？","like_count":0},{"had_liked":false,"id":316202,"user_name":"路遥知码力","can_delete":false,"product_type":"c1","uid":2698825,"ip_address":"","ucode":"1EF9655BEDAFA6","user_header":"https://static001.geekbang.org/account/avatar/00/29/2e/49/a04480a9.jpg","comment_is_top":false,"comment_ctime":1634197016,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1634197016","product_id":100020801,"comment_content":"组合索引当遇到范围查询(&lt;、&lt;、between、like)就会停止匹配<br>为什么会这样呢？因为组合索引的内容都存在叶子节点且是按照组合索引的顺序排列的，比如a,b,c是组合索引，先排a再排b最后是c，并且a肯定是有序的，然后b在a的有序基础上再排序（a可以的值是1，1，1，3，4，5，这样在a是1，1，1相同下前三个数据行的后续b数据就可以排序了），正因为这种结构设计，在遇到范围查询的时候就无法继续匹配下去，因为后续的内容是无序的了（比如b这个时候是between范围，那么筛选出的c内容就是无序的了），简单来说只有最左的数据是有序的。","like_count":0},{"had_liked":false,"id":315995,"user_name":"木木","can_delete":false,"product_type":"c1","uid":1763992,"ip_address":"","ucode":"B182555D11946D","user_header":"https://static001.geekbang.org/account/avatar/00/1a/ea/98/65a13c45.jpg","comment_is_top":false,"comment_ctime":1634099578,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634099578","product_id":100020801,"comment_content":"索引覆盖：所需要查询的数据都在一颗索引树上，不需要回表。<br>联合索引：最左原则.如索引ab（a，b） b+树先根据a排序，a相同在根据b排序。a是第一个比较因子。<br>索引能运用到第一个返回查询列上。之后的列无法运用索引。","like_count":0},{"had_liked":false,"id":314530,"user_name":"彭彬","can_delete":false,"product_type":"c1","uid":2680555,"ip_address":"","ucode":"5AF4F4D7163DFE","user_header":"https://static001.geekbang.org/account/avatar/00/28/e6/eb/7b7c0101.jpg","comment_is_top":false,"comment_ctime":1633178581,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633178581","product_id":100020801,"comment_content":"老师：如果主码是多字段的联合主码，其索引结构市什么样子的呢？请予以赐教！<br>","like_count":0},{"had_liked":false,"id":313919,"user_name":"qiushye","can_delete":false,"product_type":"c1","uid":1322164,"ip_address":"","ucode":"D005A152F8BEDC","user_header":"","comment_is_top":false,"comment_ctime":1632740802,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632740802","product_id":100020801,"comment_content":"ca所有不需要，因为主键索引是有序的，在用普通索引c查到所有记录回表后，得到的记录顺序自然是按a排序的，如果要按b排序则需要建cb联合索引","like_count":0},{"had_liked":false,"id":313813,"user_name":"Seven","can_delete":false,"product_type":"c1","uid":2403766,"ip_address":"","ucode":"37D99CF8535CDE","user_header":"https://static001.geekbang.org/account/avatar/00/24/ad/b6/a8caa2c7.jpg","comment_is_top":false,"comment_ctime":1632696626,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1632696626","product_id":100020801,"comment_content":"感觉这两个索引不是必须的，虽然 MySQL 5.6 后，更新了索引下推的功能，但是这里是用 a，b字段作为结果的排序依据。会将整个查询出满足条件 c 的行做一个回表操作，然后将全部结果按照 a,b 升序排列，并取的第一条 时间复杂度应该是 O(N)。 但是个人感觉并非必要，虽然  c_a, c_b 可能会在索引下推完成索引排序，但是建 索引的时候如果没有按照 a,b 升序的建立 联合 key，时间复杂度也可能是 O(N)","like_count":0},{"had_liked":false,"id":313014,"user_name":"恒星","can_delete":false,"product_type":"c1","uid":2715095,"ip_address":"","ucode":"C17DD00239780D","user_header":"","comment_is_top":false,"comment_ctime":1632203006,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632203006","product_id":100020801,"comment_content":"所以现在你知道了，这段开头的问题里，我们要为高频请求创建 (身份证号，姓名）这个联合索引，并用这个索引支持“根据身份证号查询地址”的需求。<br>这句话不太理解，老师能解释下吗","like_count":0},{"had_liked":false,"id":312888,"user_name":"一魄","can_delete":false,"product_type":"c1","uid":1134574,"ip_address":"","ucode":"71541125D4AA5A","user_header":"https://static001.geekbang.org/account/avatar/00/11/4f/ee/bd08cfab.jpg","comment_is_top":false,"comment_ctime":1632105863,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632105863","product_id":100020801,"comment_content":"笔记：<br><br>#### 覆盖索引<br><br>普通索引不需要回表就能检索到查询结果，则称为该索引为覆盖索引。<br><br>覆盖索引是查询优化的一种常规手段。覆盖索引的字段顺序需要按实际字段查询的使用频次从高到低排序。<br><br>#### 联合索引<br><br>索引有多个字段组成。<br><br>跟覆盖索引看似有点相似，只是从不同角度描述。<br><br>#### 最左前缀原则<br><br>根据联合索引字段顺序，查询条件字段顺序从左到右能匹配到，查询值可以是完全匹配，也可以是字符串右模糊匹配，则顺序匹配的查询条件字段会命中覆盖索引。<br><br>#### 索引下推<br><br>指不符合最左前缀的查询条件，在覆盖索引遍历过程中，优先从覆盖索引的字段中查找记录，从而不必回表。MySQL 5.6 引入的索引优化。","like_count":0},{"had_liked":false,"id":312699,"user_name":"小乙哥","can_delete":false,"product_type":"c1","uid":1063308,"ip_address":"","ucode":"C77E79BEA0C325","user_header":"https://static001.geekbang.org/account/avatar/00/10/39/8c/089525aa.jpg","comment_is_top":false,"comment_ctime":1631946440,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631946440","product_id":100020801,"comment_content":"老师，我们公司修改索引的话，需要选择业务低峰期进行，DBA说是怕因为修改索引的过程中锁表，这是什么原理了？","like_count":0},{"had_liked":false,"id":312119,"user_name":"戒酒的李白","can_delete":false,"product_type":"c1","uid":2166073,"ip_address":"","ucode":"744E1A22761647","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","comment_is_top":false,"comment_ctime":1631630722,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1631630722","product_id":100020801,"comment_content":"我有个问题想问一下：<br>CREATE TABLE `test_3` (<br>  `id` int NOT NULL AUTO_INCREMENT,<br>  `name` varchar(32) COLLATE utf8mb4_general_ci DEFAULT NULL,<br>  `age` int DEFAULT NULL,<br>  `height` int DEFAULT NULL,<br>  PRIMARY KEY (`id`),<br>  KEY `idx_name_age` (`name`,`age`)<br>) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;<br><br>执行这个语句：  EXPLAIN select * from test_3 where name like &#39;魏%&#39; and height = 100;<br><br>打印出的Extra:  Using index condition; Using where<br><br>MySQL版本为 8.0.22<br>为什么我建的联合索引不包括height字段， 执行计划中会用到ICP技术？   ","like_count":0},{"had_liked":false,"id":309659,"user_name":"Tr","can_delete":false,"product_type":"c1","uid":2011065,"ip_address":"","ucode":"CB52D918C0586E","user_header":"https://static001.geekbang.org/account/avatar/00/1e/af/b9/cf22a1fd.jpg","comment_is_top":false,"comment_ctime":1630293271,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1630293271","product_id":100020801,"comment_content":"在刷一遍","like_count":0},{"had_liked":false,"id":307756,"user_name":"咦","can_delete":false,"product_type":"c1","uid":2283781,"ip_address":"","ucode":"2E0D5A488489A4","user_header":"https://static001.geekbang.org/account/avatar/00/22/d9/05/0d772dbf.jpg","comment_is_top":false,"comment_ctime":1629248108,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629248108","product_id":100020801,"comment_content":"想问一下，b+树的父索引是存放在一个16k的页里面的吗？","like_count":0},{"had_liked":false,"id":307561,"user_name":"咦","can_delete":false,"product_type":"c1","uid":2283781,"ip_address":"","ucode":"2E0D5A488489A4","user_header":"https://static001.geekbang.org/account/avatar/00/22/d9/05/0d772dbf.jpg","comment_is_top":false,"comment_ctime":1629161411,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629161411","product_id":100020801,"comment_content":"想问一下，一颗索引树一个节点下面的叶子节点最多有几个啊，困扰了我好久，通过这个也可以算出3层树最多可以存放多少条数据","like_count":0},{"had_liked":false,"id":307346,"user_name":"Jevan Wu","can_delete":false,"product_type":"c1","uid":1510644,"ip_address":"","ucode":"3EAC7CCBB0B800","user_header":"https://static001.geekbang.org/account/avatar/00/17/0c/f4/6bd66c0e.jpg","comment_is_top":false,"comment_ctime":1629037515,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629037515","product_id":100020801,"comment_content":"老师<br>请问下select * from T where k between 3 and 5 这个查询 你描述的过程为什么要不断地循环去主键索引上查询，而不能在k的索引查完所有的id，再一次性去主键索引上查找呢？比较困惑","like_count":0},{"had_liked":false,"id":306915,"user_name":"郭季姗","can_delete":false,"product_type":"c1","uid":1660232,"ip_address":"","ucode":"75435A91C1279D","user_header":"https://static001.geekbang.org/account/avatar/00/19/55/48/33240074.jpg","comment_is_top":false,"comment_ctime":1628774030,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628774030","product_id":100020801,"comment_content":"之前面试被问到过稀疏索引，当时真是一脸懵","like_count":0},{"had_liked":false,"id":306831,"user_name":"阳春面","can_delete":false,"product_type":"c1","uid":1693492,"ip_address":"","ucode":"27493CAD3D7EF3","user_header":"https://static001.geekbang.org/account/avatar/00/19/d7/34/b67c74b8.jpg","comment_is_top":false,"comment_ctime":1628738704,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628738704","product_id":100020801,"comment_content":"想问下如果某一个字段只有两三种可能的取值，比如值只可能为1、2<br>、3，但涉及到的查询可能会比较频繁，建议针对该字段建索引吗","like_count":0},{"had_liked":false,"id":306249,"user_name":"戚帅","can_delete":false,"product_type":"c1","uid":1203898,"ip_address":"","ucode":"8377FC86A475EB","user_header":"https://static001.geekbang.org/account/avatar/00/12/5e/ba/01b7c71d.jpg","comment_is_top":false,"comment_ctime":1628472354,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628472354","product_id":100020801,"comment_content":"老师您好，怎么判断一条sql有没有回表的操作呢？<br>比如这个sql：select key_part1 from s1 where key_part1 = &quot;a&quot; and key_part2 &gt; &quot;b&quot; AND key_part3 &gt; &quot;c&quot;;<br>联合索引是：KEY `idx_key_part` (`key_part1`,`key_part2`,`key_part3`)<br>","like_count":0},{"had_liked":false,"id":306164,"user_name":"Dennis Su","can_delete":false,"product_type":"c1","uid":2728336,"ip_address":"","ucode":"C60B3F6FA64396","user_header":"https://static001.geekbang.org/account/avatar/00/29/a1/90/0602d7c0.jpg","comment_is_top":false,"comment_ctime":1628413339,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628413339","product_id":100020801,"comment_content":"作为一个刚入坑一年多的码农, 看到这里, 感觉老师讲得不够细, 原理分析结合图表的方式很好, 但是图表做得还不够. 抱歉, 是因为我看到了很好的博客比对之后才这样认为. 参考:https:&#47;&#47;aobing.blog.csdn.net&#47;article&#47;details&#47;109257302","like_count":0},{"had_liked":false,"id":306028,"user_name":"猿鸽君","can_delete":false,"product_type":"c1","uid":1991951,"ip_address":"","ucode":"8562D8C5AD3D1E","user_header":"https://static001.geekbang.org/account/avatar/00/1e/65/0f/7b9f27f2.jpg","comment_is_top":false,"comment_ctime":1628307494,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628307494","product_id":100020801,"comment_content":"老师好，有两个问题想请教下：<br>1.是否可以这样理解，如果表定期需要删除数据的话，我们同时也要定期进行索引重建，来节省空间？<br>2.如果一张表比较大，比如200g，直接使用alter table T engine=InnoDB会不会导致这张表很长时间无法使用？","like_count":0},{"had_liked":false,"id":305011,"user_name":"Geek_d5b2fe","can_delete":false,"product_type":"c1","uid":2692775,"ip_address":"","ucode":"1A7C564FCD4D50","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIbliaPlooibGVLiasqRk57MdOZrxBto1eq8kn9OicCSK3GlN0AUvMvd3uIQQNuLbOia8M6lM47IxGnwng/132","comment_is_top":false,"comment_ctime":1627749609,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627749609","product_id":100020801,"comment_content":"老师您好，有个问题我好久都想不通，也搜不到答案，还希望您有空赐教。<br>若在表table中有主键id，表中只有主键索引，用explain语句分析如下：<br>select id from  table;   的索引type是index<br>select * from  table;   的索引type是all<br>按理说表中唯一的主键索引是聚簇索引，那么遍历所有的id也是要遍历所有行记录，为什么type就算index呢？我的理解它应该是all才对。是不是我对聚簇索引的理解还不够准确？<br>  然后，由此延伸出的分页查询优化也确实是有效的，我特别想知道为什么。<br>select * from table where id&gt;=(select id from  table limit 10000,1) limit 1,10 ;  ","like_count":0},{"had_liked":false,"id":304993,"user_name":"cake","can_delete":false,"product_type":"c1","uid":1966533,"ip_address":"","ucode":"55A7FC6CC1204C","user_header":"https://static001.geekbang.org/account/avatar/00/1e/01/c5/b48d25da.jpg","comment_is_top":false,"comment_ctime":1627736898,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627736898","product_id":100020801,"comment_content":"老师 请问下 覆盖索引只用在 二级索引表上么， 我为什么直接通过主键查 Extra 里面也有 Useing index呢","like_count":0},{"had_liked":false,"id":304164,"user_name":"Hubbert伟涛","can_delete":false,"product_type":"c1","uid":1303556,"ip_address":"","ucode":"000C6A0BD4A102","user_header":"https://static001.geekbang.org/account/avatar/00/13/e4/04/05677b68.jpg","comment_is_top":false,"comment_ctime":1627282565,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627282565","product_id":100020801,"comment_content":"最后问题的想法，因为select的是*，也就是说最后一定会回表。那么为啥不单独创建a. b. c三个单独的索引即可呢？","like_count":0},{"had_liked":false,"id":303278,"user_name":"Rui","can_delete":false,"product_type":"c1","uid":2705422,"ip_address":"","ucode":"995E914B6DFAE5","user_header":"https://static001.geekbang.org/account/avatar/00/29/48/0e/ea42eaf8.jpg","comment_is_top":false,"comment_ctime":1626697526,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1626697526","product_id":100020801,"comment_content":"本章主要讲解了 覆盖索引、最左前缀法则、索引下推以及正确重建主键索引的方式","like_count":0},{"had_liked":false,"id":301313,"user_name":"joki","can_delete":false,"product_type":"c1","uid":1628845,"ip_address":"","ucode":"E152D01797F5A4","user_header":"https://static001.geekbang.org/account/avatar/00/18/da/ad/afd5449e.jpg","comment_is_top":false,"comment_ctime":1625627402,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1625627402","product_id":100020801,"comment_content":"请问回表对应的英文是什么呢？","like_count":0},{"had_liked":false,"id":301186,"user_name":"types","can_delete":false,"product_type":"c1","uid":2449777,"ip_address":"","ucode":"8B50927EF1804F","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLDUJyeq54fiaXAgF62tNeocO3lHsKT4mygEcNoZLnibg6ONKicMgCgUHSfgW8hrMUXlwpNSzR8MHZwg/132","comment_is_top":false,"comment_ctime":1625567679,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1625567679","product_id":100020801,"comment_content":"关于覆盖索引有一个疑问：<br>覆盖索引是为了优化查询速度，不需要通过主键回表。<br>在RR事务级别下，覆盖索引是如何支持一致性视图的？","like_count":0,"discussions":[{"author":{"id":2449777,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLDUJyeq54fiaXAgF62tNeocO3lHsKT4mygEcNoZLnibg6ONKicMgCgUHSfgW8hrMUXlwpNSzR8MHZwg/132","nickname":"types","note":"","ucode":"8B50927EF1804F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382729,"discussion_content":"分析了下innodb的结构，二级索引页面结构中，有一个MAX_TRX_ID,可以用于一致性视图","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1625707943,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":301012,"user_name":"毛🍢卷卷","can_delete":false,"product_type":"c1","uid":2557592,"ip_address":"","ucode":"6612296E751379","user_header":"","comment_is_top":false,"comment_ctime":1625485175,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625485175","product_id":100020801,"comment_content":"老师您好，主键索引我们使用递增的可以避免节点分裂，那普通索引我们通常会使用不是递增的字段 比如手机号，姓名，那普通索引不也是会造成节点分裂么？数据插入时候也会造成很大性能消耗吧","like_count":0},{"had_liked":false,"id":300878,"user_name":"建强","can_delete":false,"product_type":"c1","uid":1397126,"ip_address":"","ucode":"62B03D0E0C64EC","user_header":"https://static001.geekbang.org/account/avatar/00/15/51/86/b5fd8dd8.jpg","comment_is_top":false,"comment_ctime":1625413774,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625413774","product_id":100020801,"comment_content":"个人的理解：这两个索引有必要建的，在索引树上，只是记录了索引字段值和对应的主键值，如果a,b是联合主键，在索引树的节点中MySQL应该没法区分哪个主键值是a，哪个主键值是b，因此如果只对c字段建立索引，在排序时还是会产生回表操作，而建立了复合索引合，根据索引下推的原则，会优先引用索引字段，不需要再回表，因此建立这两个索引还是必要的。","like_count":0},{"had_liked":false,"id":300062,"user_name":"prader26","can_delete":false,"product_type":"c1","uid":1433707,"ip_address":"","ucode":"5EFFFC374ADECE","user_header":"https://static001.geekbang.org/account/avatar/00/15/e0/6b/f61d7466.jpg","comment_is_top":false,"comment_ctime":1624969145,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1624969145","product_id":100020801,"comment_content":"二级索引回到主键索引树搜索的过程，我们称为回表。<br>索引的优化：<br>1 覆盖索引：  比如主键索引是ID 二级索引 k 是age, select age from T where id = 3   因为二级索引子叶子里面就是主键索引，所以查询数据之后，<br>\t    可以不用回表，直接去从二级索引里面拿到 age 数据。<br>2 最左前缀原则：比如一个索引有两个字段A B   索引项出现的原则是，索引定义时，字段出现的顺序。<br>\t        所以在所以项里面 最左边的 字段是A 是能直接查询： select A from T; 就没必要单独给A 建索引。<br>\t      最左前缀原则不仅适用于，索引项左边N 个字段，也适用于，索引字符串的左边M个字符。<br> 3 索引下推： 比如  id和age 组成联合索引 查询 id &gt;10  age = 20 的记录，  没有索引下推之前，id &gt;10 查出10 条记录，每条都去查询 一下判断 age 是否  = 20 <br>                     有了索引下推， 直接把 id 和age 两个字段查询出来，当id &gt; 10 查出来有10条， 可是 age = 10 就能立即判断了 好比是 2 条，再去查询 2次就行，而不是10次。","like_count":0},{"had_liked":false,"id":299410,"user_name":"Ryan","can_delete":false,"product_type":"c1","uid":2665674,"ip_address":"","ucode":"D0DA57BC2783AC","user_header":"https://static001.geekbang.org/account/avatar/00/28/ac/ca/70eceba3.jpg","comment_is_top":false,"comment_ctime":1624613375,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1624613375","product_id":100020801,"comment_content":"那是不是 select * from T where I&#39;d in (select I&#39;d from T where k between 3 and 5) 就是回表一次，相对于上面那种多次回表会效率提升点？","like_count":0},{"had_liked":false,"id":299244,"user_name":"尘","can_delete":false,"product_type":"c1","uid":1244251,"ip_address":"","ucode":"2C71FBCED5BFE6","user_header":"https://static001.geekbang.org/account/avatar/00/12/fc/5b/caa6a2a6.jpg","comment_is_top":false,"comment_ctime":1624526752,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1624526752","product_id":100020801,"comment_content":"对于非主键索引，默认会和主键索引做联合索引。所以对于索引c、ca、cb和主键索引做联合索引后，它们的顺序分别为cab、cab和cba，因此索引ca要去掉，索引cb要保留","like_count":0},{"had_liked":false,"id":299240,"user_name":"柚子","can_delete":false,"product_type":"c1","uid":2656824,"ip_address":"","ucode":"36E42E704C7662","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/ibpe6OMbQbqnebt8YVOibXtALhQ66ibaQW5mAxcBLnEhXd1PfKia7d7lEibWCPhabL9b04ia3sYv1fnvMTm0P2KDHuRg/132","comment_is_top":false,"comment_ctime":1624524050,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1624524050","product_id":100020801,"comment_content":"其实最后查询语句的目标是能够通过索引c最好覆盖索引a和索引b。现在知道联合主键（a，b）索引c，联合索引（c，a）和联合索引（c，b）。<br><br>通过索引c和主键（a，b）就能否覆盖a，满足第一个语句。所以联合索引（c，a）多余。<br>而通过索引c和主键（a，b）不能覆盖b，所以创建一个联合索引(c，b)就能够满足，所以联合索引（c，b）要保留","like_count":0},{"had_liked":false,"id":295895,"user_name":"@","can_delete":false,"product_type":"c1","uid":1390068,"ip_address":"","ucode":"03041D80186F12","user_header":"https://static001.geekbang.org/account/avatar/00/15/35/f4/ae5df14b.jpg","comment_is_top":false,"comment_ctime":1622633717,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622633717","product_id":100020801,"comment_content":"&quot;我们要考虑的原则就是空间了。比如上面这个市民表的情况，name 字段是比 age 字段大的 ，那我就建议你创建一个（name,age) 的联合索引和一个 (age) 的单字段索引。&quot;<br>上边这一段里，老师建议创建(name,age)和(age)，是不是可以创建(name)和(age)两个索引呢？  效果哪个更佳呢？","like_count":0},{"had_liked":false,"id":295759,"user_name":"本来是亚","can_delete":false,"product_type":"c1","uid":1073592,"ip_address":"","ucode":"14527E5BC3C2A8","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/b8/7b23f8cb.jpg","comment_is_top":false,"comment_ctime":1622593644,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1622593644","product_id":100020801,"comment_content":"cb需要，但是ca不需要，因为按照最左前缀原则，主键索引本来就是先按照a排序的","like_count":0},{"had_liked":false,"id":292803,"user_name":"断水流","can_delete":false,"product_type":"c1","uid":1448371,"ip_address":"","ucode":"A6E49267EB7709","user_header":"https://static001.geekbang.org/account/avatar/00/16/19/b3/34e92ec4.jpg","comment_is_top":false,"comment_ctime":1620984281,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620984281","product_id":100020801,"comment_content":"想问一下老师，select * from geek where c=N order by a limit 1; 去掉order by a会影响结果么？","like_count":0},{"had_liked":false,"id":291652,"user_name":"Geek_45acec","can_delete":false,"product_type":"c1","uid":2438001,"ip_address":"","ucode":"71515EDCAE3FA0","user_header":"","comment_is_top":false,"comment_ctime":1620399184,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620399184","product_id":100020801,"comment_content":"不知道老师还能看到问题嘛，本篇的问题我查到实际是关于index extensions特性的，InnoDB automatically extends each secondary index by appending the primary key columns to it（出处详见手册 8.2.1.7 Use of Index Extensions，原文链接：https:&#47;&#47;dev.mysql.com&#47;doc&#47;refman&#47;5.6&#47;en&#47;index-extensions.html。按照这个特性辅助索引c应该会包含主键a,b的值。因此不需要ca联合索引","like_count":0},{"had_liked":false,"id":291647,"user_name":"颜桦","can_delete":false,"product_type":"c1","uid":1099576,"ip_address":"","ucode":"1CD7250E052B32","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/38/d1a50cd6.jpg","comment_is_top":false,"comment_ctime":1620397835,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620397835","product_id":100020801,"comment_content":"老师感觉这一节有些概念直接拿来讲了，但是对概念还不是太了解，比如联合索引","like_count":0},{"had_liked":false,"id":291422,"user_name":"永恒的hello world🔨","can_delete":false,"product_type":"c1","uid":2092094,"ip_address":"","ucode":"690CBA7177EDC6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKJOVCRAZ3Da9yOzGxP028caE2r00GVdNBeianAutoD0ql1dfUdnD3uX0gictEEk4Ntb6xVsYzsC2Cg/132","comment_is_top":false,"comment_ctime":1620283798,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620283798","product_id":100020801,"comment_content":"select * from T where k between 1 and 5<br>老师按照文中讲的， 这个应该是搜索三次吧，怎么是1次呢？","like_count":0},{"had_liked":false,"id":289416,"user_name":"KK","can_delete":false,"product_type":"c1","uid":1096397,"ip_address":"","ucode":"14C0858C413E00","user_header":"https://static001.geekbang.org/account/avatar/00/10/ba/cd/1f91aa44.jpg","comment_is_top":false,"comment_ctime":1619002623,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619002623","product_id":100020801,"comment_content":"老师您好，一个表有主键索引，非主键索引。执行器向引擎发起请求，先从非主键拿到主键，回到server层。然后再向引擎发起请求，从主键索引拿数据吗？","like_count":0},{"had_liked":false,"id":289304,"user_name":"Saigu","can_delete":false,"product_type":"c1","uid":1090448,"ip_address":"","ucode":"2F8C7FFF6E96FB","user_header":"https://static001.geekbang.org/account/avatar/00/10/a3/90/84588dfe.jpg","comment_is_top":false,"comment_ctime":1618974356,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618974356","product_id":100020801,"comment_content":"请教下老师，看到很多资料上说， 联合索引建议把区分度高的字段放左边，这个是什么原因呢？我理解 联合索引 本身已经按照 索引字段综合排序过了吧，所以三层树高的话应该都是三次IO，感觉没什么区别。 期待老师的回复","like_count":0},{"had_liked":false,"id":287708,"user_name":"恐龙","can_delete":false,"product_type":"c1","uid":1323030,"ip_address":"","ucode":"7B85A27E40D261","user_header":"https://static001.geekbang.org/account/avatar/00/14/30/16/4773d604.jpg","comment_is_top":false,"comment_ctime":1618119287,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618119287","product_id":100020801,"comment_content":"确认下，文末的问题，按照最左前缀原则，仅保留ab主键+cb索引是否可以？即删除索引ca、c，谢谢","like_count":0},{"had_liked":false,"id":287699,"user_name":"大西几","can_delete":false,"product_type":"c1","uid":1583249,"ip_address":"","ucode":"BB96BC4D18BC0F","user_header":"https://static001.geekbang.org/account/avatar/00/18/28/91/e8d530ab.jpg","comment_is_top":false,"comment_ctime":1618112401,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618112401","product_id":100020801,"comment_content":"加入现在表中有这么一个索引（id_card，name），这个时候要通过id_card查询地址，select 地址 from t where id_card = &#39;xxxxxx&#39;，这个时候会走索引吗？最左前缀","like_count":0},{"had_liked":false,"id":286004,"user_name":"why not","can_delete":false,"product_type":"c1","uid":1402069,"ip_address":"","ucode":"90DB00F3A79111","user_header":"https://static001.geekbang.org/account/avatar/00/15/64/d5/2d1fe301.jpg","comment_is_top":false,"comment_ctime":1617099269,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617099269","product_id":100020801,"comment_content":"老师您好我这里有个问题，in 和 between and 在走索引上遍历的方式有什么不一样？<br>有两个sql<br>sql1:<br>select<br>count(*)<br>from<br>  shop_daily_class1_statistics<br>where<br>  1 = 1<br>  and statistics_date in(&quot;20210302&quot;,&quot;20210301&quot;)<br>遍历行数5887行 查询结果5887<br><br>sql2<br>select<br>count(*)<br>from<br>  shop_daily_class1_statistics<br>where<br>  1 = 1<br>  and statistics_date between &quot;20210301&quot; and &quot;20210302&quot;<br>遍历行数10836 查询结果 5887<br><br>走到的索引都是statistics_date<br>为什么查询结果一样，但是遍历行数会差别这么大？","like_count":0},{"had_liked":false,"id":284984,"user_name":"Ly","can_delete":false,"product_type":"c1","uid":1935838,"ip_address":"","ucode":"0A7A27C8126ACF","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/n1gS0knXOF4D8Oo5ocQicCCtwNibmNz4ODrmVg8icobVgap9to11t7ahFm4U81K4MDcavibMNxib39mzm5ibAJR4DdzA/132","comment_is_top":false,"comment_ctime":1616571005,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616571005","product_id":100020801,"comment_content":"老师，问个问题，现在mysql一条语句中，一个表可以使用多个索引吗？还是说一个表只能使用一个索引。","like_count":0},{"had_liked":false,"id":284534,"user_name":"笨鸟的GPS","can_delete":false,"product_type":"c1","uid":2489987,"ip_address":"","ucode":"62B321A5424FD9","user_header":"https://static001.geekbang.org/account/avatar/00/25/fe/83/b2e833ff.jpg","comment_is_top":false,"comment_ctime":1616323712,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616323712","product_id":100020801,"comment_content":"我觉得同事的解释不对，日常查询语句用到的是c索引，所以ca和cb联合索引非必须","like_count":0},{"had_liked":false,"id":283407,"user_name":"临暗","can_delete":false,"product_type":"c1","uid":2500805,"ip_address":"","ucode":"E3E5825C12D009","user_header":"","comment_is_top":false,"comment_ctime":1615771096,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615771096","product_id":100020801,"comment_content":"本文中的问题理解：首先结论是ca需要，cb不需要。<br>1.在创建联合主键的时候会创联合索引。<br>2.首先创建c索引的时候又会和主键创建联合索引，其次数据库中如果有多条相同数据时候在b＋树中是以一个有序的链表来实现的，且遵循最左原则，在c相同的情况下是按照a来排序。因此ca不需要，cb需要。<br>以上是一个小白程序员的个人理解，不知道的对不对，还希望老师指正。","like_count":0},{"had_liked":false,"id":283204,"user_name":"WisonHii","can_delete":false,"product_type":"c1","uid":1987294,"ip_address":"","ucode":"620A820528E5E2","user_header":"","comment_is_top":false,"comment_ctime":1615619836,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615619836","product_id":100020801,"comment_content":"不知道老师是否还在。在前面的示例中，有这个脚本<br>在下面这个表 T 中，如果我执行 select * from T where k between 3 and 5，需要执行几次树的搜索操作，会扫描多少行？<br>会回表2次，但是只扫描一次。 这个是因为类似SQL Server一样有预读的机制么？比如第一次扫描出来了，就放在内存中了，然后直接在内存中进行数据的查找？","like_count":0},{"had_liked":false,"id":282996,"user_name":"三井寿","can_delete":false,"product_type":"c1","uid":2336545,"ip_address":"","ucode":"325E9D64C22C0D","user_header":"https://static001.geekbang.org/account/avatar/00/23/a7/21/9366cdd8.jpg","comment_is_top":false,"comment_ctime":1615513472,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615513472","product_id":100020801,"comment_content":"老师，一直有个疑问，null 对索引有影响吗，我看好多地方都强调字段尽量带有not null限制，如果在有null值的列建立索引，那查询的过程和没有null值的查询过程一样吗（会用到索引吗），和数据量有关系吗","like_count":0},{"had_liked":false,"id":282823,"user_name":"风中花","can_delete":false,"product_type":"c1","uid":1085237,"ip_address":"","ucode":"067E0A1E116844","user_header":"https://static001.geekbang.org/account/avatar/00/10/8f/35/f1839bb2.jpg","comment_is_top":false,"comment_ctime":1615429511,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615429511","product_id":100020801,"comment_content":"今天得评论不知道老师能看到吗<br><br>真心希望老师能再开一个专栏深入一些 ，多讲一点<br><br>也许能更好 <br>有种知其然不知其所以然","like_count":0},{"had_liked":false,"id":280931,"user_name":"Mr.H","can_delete":false,"product_type":"c1","uid":1072357,"ip_address":"","ucode":"FEAB798AB45F17","user_header":"https://static001.geekbang.org/account/avatar/00/10/5c/e5/5cd7fb17.jpg","comment_is_top":false,"comment_ctime":1614494057,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1614494057","product_id":100020801,"comment_content":"二级索引中，不包含和聚簇索引一样的隐藏列，那么如果它不需要回表查询时，怎么做到mvcc呢？","like_count":0,"discussions":[{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369289,"discussion_content":"每行记录上面有版本号，通过这个版本号来实现mvcc","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618997152,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":280875,"user_name":"数禾极客","can_delete":false,"product_type":"c1","uid":1006508,"ip_address":"","ucode":"7C7D50C824DB86","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5b/ac/1fadba55.jpg","comment_is_top":false,"comment_ctime":1614433600,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614433600","product_id":100020801,"comment_content":"问题1：老师您的图1中，ID的叶子节点显示的是行（R1、R2、R3 ...R5）。<br>叶子节点存的不是page(页)吗？<br>问题2：Page里存放多条行。想请教下存放逻辑和查找逻辑","like_count":0},{"had_liked":false,"id":280803,"user_name":"好人难做","can_delete":false,"product_type":"c1","uid":1184962,"ip_address":"","ucode":"6B0CAF3F8691FD","user_header":"https://static001.geekbang.org/account/avatar/00/12/14/c2/195cdbed.jpg","comment_is_top":false,"comment_ctime":1614398967,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614398967","product_id":100020801,"comment_content":"老师，索引下推是在联合索引由于某些条件(比如 like %aa)失效的情况下的弥补优化吧，一般我们在设计索引和查询语句时，其实就应该尽量避免这种情况的发生吧","like_count":0},{"had_liked":false,"id":280722,"user_name":"御风","can_delete":false,"product_type":"c1","uid":1812807,"ip_address":"","ucode":"51C8212BE06364","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a9/47/ded5da90.jpg","comment_is_top":false,"comment_ctime":1614327294,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614327294","product_id":100020801,"comment_content":"明白了覆盖索引和最左前缀原则的概念。<br>mysql的B+树索引会根据索引项进行排序<br>联合索引先根据第一个字段排序，如果第一个字段有相同的，就按照第二个字段排序，注意，这里仅仅有相同的第一个字段情况下，才会根据第二个字段排序。","like_count":0},{"had_liked":false,"id":277233,"user_name":"Gabriel","can_delete":false,"product_type":"c1","uid":1437358,"ip_address":"","ucode":"714772A93E93DC","user_header":"https://static001.geekbang.org/account/avatar/00/15/ee/ae/855b7e6e.jpg","comment_is_top":false,"comment_ctime":1612323632,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612323632","product_id":100020801,"comment_content":"1：Multi-Range-Read 优化：<br>MySQL5.6版本开始支持MRR优化。MMR优化的目的就是为了减少磁盘的随机访问，并且将随机访问转化为较为顺序的数据访问，这对于IO-bound类型的SQL查询语句可带来性能极大的提升。MRR优化可适用于range,ref,eq_ref类型的查询。<br>MRR优化有以下几个好处：<br>a：MRR优化使数据访问变得较为顺序。在查询辅助索引时，首先根据得到的查询结果按照主键进行排序，并按照主键排序的顺序进行书签查找。<br>b：减少缓存池中页被替换的次数<br>c：批量处理对键值的查询操作。<br><br>2：对于Innodb和myisam存储引擎的范围查询和JOIN查询操作，MRR的工作方式如下：<br>a：将查询得到的辅助索引键值存放于一个缓存中，这是缓存中的数据是根据辅助索引键值排序的<br>b：将缓存中的键值根据RowID进行排序<br>c：根据RowIdDE 排序顺序来访问实际的数据文件。","like_count":0},{"had_liked":false,"id":277037,"user_name":"Gabriel","can_delete":false,"product_type":"c1","uid":1437358,"ip_address":"","ucode":"714772A93E93DC","user_header":"https://static001.geekbang.org/account/avatar/00/15/ee/ae/855b7e6e.jpg","comment_is_top":false,"comment_ctime":1612241523,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612241523","product_id":100020801,"comment_content":"索引的目的是什么？<br>答：数据库添加索引的目的是为了加快查询速度。<br><br>索引的的数据结构是什么？<br>答：（这里的B是balance）B+树来存储索引，B+树类似于二叉树。<br><br>B+树是怎么查找数据的？<br>答：B+树索引并不能找到一个给定值的具体行。B+树索引能找到的只是被查询数据行所在的页。然后数据库通过页读入到内存，再在内存中进行查找，最后得到要查找的数据。<br><br>什么是B+树<br>答：B+树是为磁盘或其他直接存取辅助设备设计的一种平衡查找树。在B+树中，所以记录点都按照值的大小顺序存放在同一层的叶子节点上，由各叶子节点指针进行链接。<br><br>聚集索引的定义（每张表只能有一个聚集索引）<br>答：聚集索引就是按照每张表的主键构造一颗B+树，同时叶子节点中存放的即为整张表的行记录，也将聚集索引的叶子节点称为数据页。聚集索引的这个特性决定了索引组织表中数据也是索引的一部分（因为存储是按照KEY-VALUE这样存储）。每个数据页都通过双向链表进行链接。<br><br>聚簇索引和非聚簇索引<br>答：将数据存储与索引放到了一块，找到索引也就找到了数据。将数据存储于索引分开结构，索引结构的叶子节点指向了数据的对应行，myisam通过key_buffer把索引先缓存到内存中，当需要访问数据时（通过索引访问数据），在内存中直接搜索索引，然后通过索引找到磁盘相应数据，这也就是为什么索引不在key buffer命中时，速度慢的原因<br><br>辅助索引（非聚集索引）<br>答：辅助索引，叶子节点并不包含行记录的全部数据<br><br>联合索引<br>答：就是对表中的多个字段添加索引。联合索引也是一颗B+树，只不过联合索引的叶子节点存储的字段是大于等于2。联合索引的第二个好处是已经对第二个键值进行了排序处理。<br><br>覆盖索引<br>答：辅助索引中就可以得到查询的记录，而不需要查询聚集索引的记录（意思就是不用回表了）。覆盖索引是联合索引的最优情况。<br><br>最左前缀原则<br>索引下推<br>","like_count":0},{"had_liked":false,"id":276886,"user_name":"Gabriel","can_delete":false,"product_type":"c1","uid":1437358,"ip_address":"","ucode":"714772A93E93DC","user_header":"https://static001.geekbang.org/account/avatar/00/15/ee/ae/855b7e6e.jpg","comment_is_top":false,"comment_ctime":1612166948,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612166948","product_id":100020801,"comment_content":"老师我这里有一个问题？<br>就是索引类型不是有<br>1：主键索引<br>2：唯一索引<br>3：普通索引<br>像普通索引和唯一索引，上都都允许是多个值比如： index(a,b),<br>那么在索引存储联合索引的时候，index（a,b)索引，索引节点就直接存储的是 a,b这两个值吗？","like_count":0},{"had_liked":false,"id":276879,"user_name":"Gabriel","can_delete":false,"product_type":"c1","uid":1437358,"ip_address":"","ucode":"714772A93E93DC","user_header":"https://static001.geekbang.org/account/avatar/00/15/ee/ae/855b7e6e.jpg","comment_is_top":false,"comment_ctime":1612165425,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612165425","product_id":100020801,"comment_content":"这里是不是有点矛盾呢？ 建立普通索引，普通索引存储的值是主键索引，然后通过主键索引又去查询出相应的值，就产生了回表。 这里的联合索引，直接就存储联合索引，索引的叶子阶段就存储需要查询的多个字段的值。所以联合索引是不是覆盖索引呢？","like_count":0},{"had_liked":false,"id":276779,"user_name":"马楚豪","can_delete":false,"product_type":"c1","uid":2431885,"ip_address":"","ucode":"EEE2A7066937FE","user_header":"","comment_is_top":false,"comment_ctime":1612109335,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612109335","product_id":100020801,"comment_content":"重建索引可以理解成重新整理目录吗？<br>对于ca，cb的索引表，我认为分别根据语句查询频率，高的时候是有必要的，低的时候没有必要，因为两条业务语句的存在，只用c的话，相当于要把c索引表找一遍，再回表，然后判断含括了a、b的全部数据，而高频率时多维护一张索引表能节省很多回表的资源。","like_count":0},{"had_liked":false,"id":276369,"user_name":"Geek_19657e","can_delete":false,"product_type":"c1","uid":2428131,"ip_address":"","ucode":"19B0146A1B4732","user_header":"","comment_is_top":false,"comment_ctime":1611902073,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611902073","product_id":100020801,"comment_content":"1、覆盖索引，避免回表<br>2、联合索引最左前缀<br>字段顺序：考虑索引复用<br>3、索引下推：只能使用联合索引最左前缀的时候，先对索引字段进行过滤，如不满足条件无需回表","like_count":0},{"had_liked":false,"id":275195,"user_name":"我的喵","can_delete":false,"product_type":"c1","uid":1736650,"ip_address":"","ucode":"A7435BDBDD2587","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKyuuhxu0HH4cIKCClCqx0LTurCCYWmNcFwfTWV5te5afsibp2yuDmC9mibEHx0Xy8QlvqvMWWcAib8g/132","comment_is_top":false,"comment_ctime":1611383841,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611383841","product_id":100020801,"comment_content":"小结：<br>设计索引<br>1.尽量使用覆盖索引，减少回表次数，提升性能。<br>2.当建立联合索引时，针对如何安排联合索引字段顺序的原则：1）如果通过调整顺序，可以少维护一个索引，那么这个顺序优先采用。2）考虑空间，尽量保证大字段少参与索引建立。<br>3.索引下推：Index Condition Pushdown。MySQL 5.6版本引入的优化。旨在仅能利用最左前缀索引的场景下，针对不在最左前缀索引中的其他联合索引字段加以利用，即在扫描二级索引时，就使用这些字段进行where条件过滤，然后符合条件的才会进行回表操作，在没有索引下推的技术时，不符合条件的列也会进行回表， 然后再判断条件。<br>","like_count":0},{"had_liked":false,"id":274660,"user_name":"浪潮之巅","can_delete":false,"product_type":"c1","uid":1565493,"ip_address":"","ucode":"F18628AC890A3B","user_header":"https://static001.geekbang.org/account/avatar/00/17/e3/35/c5337055.jpg","comment_is_top":false,"comment_ctime":1611114050,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1611114050","product_id":100020801,"comment_content":"为什么非主键索引在查询到一个值不能记录下，等取到所有满足条件的记录再去主键索引上面查询，这样是不是只需要一次回表查询就可以了？谁能帮忙解答下，谢谢","like_count":0},{"had_liked":false,"id":273876,"user_name":"杨领well","can_delete":false,"product_type":"c1","uid":1145650,"ip_address":"","ucode":"3974A03855168C","user_header":"https://static001.geekbang.org/account/avatar/00/11/7b/32/60089a62.jpg","comment_is_top":false,"comment_ctime":1610702980,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1610702980","product_id":100020801,"comment_content":"mysql&gt; explain select * from geek where c=1 order by a limit 1\\G<br>*************************** 1. row ***************************<br>           id: 1<br>  select_type: SIMPLE<br>        table: geek<br>   partitions: NULL<br>         type: ref<br>possible_keys: c,ca,cb<br>          key: c<br>      key_len: 4<br>          ref: const<br>         rows: 1<br>     filtered: 100.00<br>        Extra: NULL<br>1 row in set, 1 warning (0.00 sec)<br>","like_count":0,"discussions":[{"author":{"id":1145650,"avatar":"https://static001.geekbang.org/account/avatar/00/11/7b/32/60089a62.jpg","nickname":"杨领well","note":"","ucode":"3974A03855168C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343029,"discussion_content":"我的意思是，根本不会走ca/cb","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610930938,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":272522,"user_name":"随风","can_delete":false,"product_type":"c1","uid":1441812,"ip_address":"","ucode":"35C0133563EEB1","user_header":"https://static001.geekbang.org/account/avatar/00/16/00/14/84a976e7.jpg","comment_is_top":false,"comment_ctime":1610111003,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610111003","product_id":100020801,"comment_content":"老师，您好。想请教一个问题，时间字段适合建索引吗？因为我们的业务以按时间查询居多，但是我问了好多朋友，他们数据库的时间都不建索引的，为什么呢？","like_count":0},{"had_liked":false,"id":272423,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1101762,"ip_address":"","ucode":"003700A99A910B","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/c2/a5b3ceaf.jpg","comment_is_top":false,"comment_ctime":1610087368,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610087368","product_id":100020801,"comment_content":"林老师，请问下：<br>1,  通过 explain 怎么判断是使用索引的快速定位，还是顺序扫描? <br>2,  常说的全表扫描，是指对主键索引的顺序扫描吗?","like_count":0},{"had_liked":false,"id":272060,"user_name":"tomchan","can_delete":false,"product_type":"c1","uid":1003645,"ip_address":"","ucode":"21963963D55759","user_header":"https://static001.geekbang.org/account/avatar/00/0f/50/7d/836fdecd.jpg","comment_is_top":false,"comment_ctime":1609921967,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1609921967","product_id":100020801,"comment_content":"老师你好，想请教一个问题：<br>根据最左匹配原则，遇到范围查询(&lt;|&gt;|between|like)，后面的索引就用不上了，那么5.6之后有了索引下推，这条原则就是没有了，是这样吗？","like_count":0,"discussions":[{"author":{"id":1236766,"avatar":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","nickname":"传说中的成大大","note":"","ucode":"103543D6E706BF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361991,"discussion_content":"我之前跟你同样的疑惑，看了前面的某个同学的提问和老师的回答我明白了，其实最左匹配是指的通过索引来快速定位，也就是快速的在索引上查找，而索引下推是当我们定位到了某个数据之后，我们在回表之前，可以通过索引下推判断其它的条件，最后决定这条要不要回表，所以他们是两个不同的东西，互不影响。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1616818765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":271355,"user_name":"凹凸鸿","can_delete":false,"product_type":"c1","uid":1915334,"ip_address":"","ucode":"A458BAEBF314B2","user_header":"https://static001.geekbang.org/account/avatar/00/1d/39/c6/1e12f271.jpg","comment_is_top":false,"comment_ctime":1609574724,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609574724","product_id":100020801,"comment_content":"索引下推的条件是查询where字段在索引中吧，如果不在也是使用不到的吧","like_count":0},{"had_liked":false,"id":270909,"user_name":"赵某人","can_delete":false,"product_type":"c1","uid":1637799,"ip_address":"","ucode":"562994A43948A5","user_header":"https://static001.geekbang.org/account/avatar/00/18/fd/a7/e679621f.jpg","comment_is_top":false,"comment_ctime":1609316163,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609316163","product_id":100020801,"comment_content":"老师，有一个问题：<br>我建立的联合索引是（a,b,c）但是查询条件是where c=1 and b=2 and c&gt;3 这时联合索还会用得到吗，优化器会对此做调整吗以匹配最左原则。","like_count":0},{"had_liked":false,"id":269443,"user_name":"孑","can_delete":false,"product_type":"c1","uid":2375319,"ip_address":"","ucode":"970D07D8FE0CCD","user_header":"https://static001.geekbang.org/account/avatar/00/24/3e/97/6f341fd4.jpg","comment_is_top":false,"comment_ctime":1608649152,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608649152","product_id":100020801,"comment_content":"老师您好，在最左前缀原则中，您举的例子：按照身份证号查家庭住址，为什么可能走全表扫描呢？<br>身份证号上已经有了索引呀，通过身份证号定位到主键，然后回表就可以找到那一行的数据，为什么会全表扫描呢？","like_count":0},{"had_liked":false,"id":268856,"user_name":"Geek_12334f","can_delete":false,"product_type":"c1","uid":2373623,"ip_address":"","ucode":"A36843A9986CB6","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/a9ObsrzjibrXqVxCibKSCibO28CXcfmfIvTqFiazB4B25FYNfnWN1yicREReBDcQtX7AXPibjgqFPePxOTibBVNyOWo3A/132","comment_is_top":false,"comment_ctime":1608372651,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608372651","product_id":100020801,"comment_content":"感谢老师，读完很有收获，我这里有两个问题，如果有时间的话希望解答一下<br>1. 为什么二级索引保存主键值，而不是直接指向记录的指针，这样不就不用回表了吗？<br>2. 为什么在二级索引中范围查询的时候，不可以先将符合条件的id集合记录下来，在回表一次查询，这样不就只需要回表一次了吗？","like_count":0},{"had_liked":false,"id":268824,"user_name":"莫晓","can_delete":false,"product_type":"c1","uid":2370371,"ip_address":"","ucode":"01D6DEA8A6DCA8","user_header":"https://static001.geekbang.org/account/avatar/00/24/2b/43/103133dd.jpg","comment_is_top":false,"comment_ctime":1608363246,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608363246","product_id":100020801,"comment_content":"老师，假设聚集索引id 和 二级索引 a，如果有(id:1,a:100)和)(id:2,a:100)，那么在二级索引树中是怎么排序的呢？<br>是按照主键的大小排序么？","like_count":0},{"had_liked":false,"id":268734,"user_name":"亽閑屁亊哆","can_delete":false,"product_type":"c1","uid":1097096,"ip_address":"","ucode":"FB75CF59E7DF02","user_header":"https://static001.geekbang.org/account/avatar/00/10/bd/88/a9962373.jpg","comment_is_top":false,"comment_ctime":1608312874,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608312874","product_id":100020801,"comment_content":"老师的课太值了，有种醍醐灌顶的感觉，突然打通了任务二脉","like_count":0},{"had_liked":false,"id":267270,"user_name":"Gabriel","can_delete":false,"product_type":"c1","uid":1437358,"ip_address":"","ucode":"714772A93E93DC","user_header":"https://static001.geekbang.org/account/avatar/00/15/ee/ae/855b7e6e.jpg","comment_is_top":false,"comment_ctime":1607665605,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607665605","product_id":100020801,"comment_content":"要明白索引必须要去弄懂的几个问题？<br>1-存储索引的顺序结构<br>2-索引是怎么存储在数据库的<br>3-联合索引又是怎么存储在数据库的","like_count":0},{"had_liked":false,"id":266840,"user_name":"\\u6211\\u662f\\u4f60\\u7239","can_delete":false,"product_type":"c1","uid":2258709,"ip_address":"","ucode":"3EDC94F8E1B0E0","user_header":"https://static001.geekbang.org/account/avatar/00/22/77/15/830ce7e7.jpg","comment_is_top":false,"comment_ctime":1607502383,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607502383","product_id":100020801,"comment_content":"     老师，有个疑惑，联合索引（id,name），执行 where name =&#39;a&#39; 时，没有遵循最左匹配原则，是对整个索引树进行了扫描，这样相较于不建索引时对整个磁盘的数据进行全表扫描，前者效率是否更高?<br>     我是否可以理解为，在数据量较大时，即使未遵循最左匹配原则，也比未建索引的效率要高?<br>这个问题困惑了我很久","like_count":0},{"had_liked":false,"id":266770,"user_name":"惘 闻","can_delete":false,"product_type":"c1","uid":1181650,"ip_address":"","ucode":"C5909F034BF072","user_header":"https://static001.geekbang.org/account/avatar/00/12/07/d2/0d7ee298.jpg","comment_is_top":false,"comment_ctime":1607483508,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607483508","product_id":100020801,"comment_content":"如果存在联合索引(id,idCard,name,age)   如果查询select idCard from T where name = &#39;xxx&#39;  这里面也会使用到联合索引,是基于最左前缀查找了name  还有索引覆盖吗?","like_count":0},{"had_liked":false,"id":265750,"user_name":"王飞","can_delete":false,"product_type":"c1","uid":2146530,"ip_address":"","ucode":"6AB74544EE1364","user_header":"https://static001.geekbang.org/account/avatar/00/20/c0/e2/b45e4c91.jpg","comment_is_top":false,"comment_ctime":1607002533,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607002533","product_id":100020801,"comment_content":"show STATUS like &#39;%innodb_rows_read%&#39;;<br>select ID from T where ID = 100;<br>show STATUS like &#39;%innodb_rows_read%&#39;;<br>显示innodb扫的行数是4行，我蒙蔽了，走二级索引也一样","like_count":0},{"had_liked":false,"id":265745,"user_name":"未名溪畔","can_delete":false,"product_type":"c1","uid":1370205,"ip_address":"","ucode":"7E6DCBB4F2AEB9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIKkIlG1QR7oXm3Hu7DkrNqOFSujSv4CLc38aI6h2voORPJAiae8jzNXgSgsGPaiar4TKbuLQ5qq70w/132","comment_is_top":false,"comment_ctime":1607000495,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607000495","product_id":100020801,"comment_content":"联合索引，只给第一个字段建数据结构吗","like_count":0},{"had_liked":false,"id":264910,"user_name":"YY","can_delete":false,"product_type":"c1","uid":2106501,"ip_address":"","ucode":"353F2D4EC1B6F4","user_header":"https://static001.geekbang.org/account/avatar/00/20/24/85/73d896fd.jpg","comment_is_top":false,"comment_ctime":1606705574,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606705574","product_id":100020801,"comment_content":"索引下推,不是很理解，老师的例子里说(name,age)已经是联合索引了，搜索条件里 like &#39;张%&#39; and age=10 and sex=1出来的结果，就是已经过滤掉了 age!=10的数据了吗？为什么会有四条结果，结果里还会有age=30和20的？","like_count":0},{"had_liked":false,"id":264442,"user_name":"Connor","can_delete":false,"product_type":"c1","uid":1688013,"ip_address":"","ucode":"8FE5DD22FE410F","user_header":"https://static001.geekbang.org/account/avatar/00/19/c1/cd/9d4dcf70.jpg","comment_is_top":false,"comment_ctime":1606468340,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606468340","product_id":100020801,"comment_content":"主见递增，一直向右分裂难道mysql索引分裂时候没有阻塞么，oracle这样会导致index contention的，求解答","like_count":0},{"had_liked":false,"id":263264,"user_name":"求知MQQ","can_delete":false,"product_type":"c1","uid":1749163,"ip_address":"","ucode":"5E0DF37982221B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKee0OF4yPLjvMcKvF5WKkINBlTT8KSSmP0R8rdtoCjKbq6UYJ0u2kmAlNgzIiaWBatVkAcIpEgxFg/132","comment_is_top":false,"comment_ctime":1606068224,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606068224","product_id":100020801,"comment_content":"老师有个问题，关于覆盖索引和联合索引的问题 比如一张表user  建立了联合索引a，b，c，查询语句select  a，b  from user where b=“1” and c=“1”；我看了执行计划，using index的使用了覆盖索引，但是我不明白的是查询条件并没有满足最左，sql在执行的时候怎么去索引树上查询到复合条件的数据呢，是直接把索引数据加载到service层在按照条件进行过滤的么？","like_count":0},{"had_liked":false,"id":262979,"user_name":"Geek_add8c0","can_delete":false,"product_type":"c1","uid":2279856,"ip_address":"","ucode":"DC34F73AA4A69C","user_header":"","comment_is_top":false,"comment_ctime":1605930576,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605930576","product_id":100020801,"comment_content":"<br>Innodb表索引不生效，为什么加上主键范围条件索引才生效？<br>有一张Innodb的order表<br><br>注:<br>order_id是主键<br>order_sn是varchar类型<br>add_time是int,有普通索引<br><br><br><br>索引不生效：explain SELECT `order_id`,`order_sn` FROM `tp_order` WHERE  `add_time` BETWEEN 1603296000 AND 1605888000  <br>结果：查询语句中因为加了varchar，所以索引不生效，type:ALL  rows:230000<br><br>索引生效：explain SELECT `order_id`,`order_sn` FROM `tp_order` WHERE  `add_time` BETWEEN 1603296000 AND 1605888000  and order_id &gt;0<br>结果：type:range  rows:110000<br><br>为什么加了主键范围后索引生效呢？","like_count":0},{"had_liked":false,"id":262969,"user_name":"Geek_add8c0","can_delete":false,"product_type":"c1","uid":2279856,"ip_address":"","ucode":"DC34F73AA4A69C","user_header":"","comment_is_top":false,"comment_ctime":1605927431,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605927431","product_id":100020801,"comment_content":"老师，有一个sql语句索引不太理解<br>表存储引擎为innodb<br><br>explain SELECT `order_id`,`order_sn`,`province`,`city`,`consignee`,`total_amount`,`order_amount`,`user_money` FROM `tp_order` WHERE  `add_time` BETWEEN 1603296000 AND 1605888000 <br>索引TYPE：ALL，rows：23万<br><br>explain SELECT `order_id`,`order_sn`,`province`,`city`,`consignee`,`total_amount`,`order_amount`,`user_money` FROM `tp_order` WHERE  `add_time` BETWEEN 1603296000 AND 1605888000  and order_id &gt;0<br>加上order_id&gt;0 索引TYPE：range，rows:11万","like_count":0},{"had_liked":false,"id":261024,"user_name":"Cloud_July","can_delete":false,"product_type":"c1","uid":1003699,"ip_address":"","ucode":"98646F7142CBFF","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL8L7Am3u37GO6CWKqBbI02DZ2ss3IZb0F9OLewAS446vh3aicndQ255HjEDzIldBUhRpUbL04rnDA/132","comment_is_top":false,"comment_ctime":1605174776,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605174776","product_id":100020801,"comment_content":"between and 范围查找 如果该范围落到索引树的多个子节点，是从第一个子节点 根据链接的next指针顺序一直往下找，还是会当前节点遍历完了，再跳出去 去其他的子节点继续遍历","like_count":0},{"had_liked":false,"id":260290,"user_name":"LPF","can_delete":false,"product_type":"c1","uid":2287841,"ip_address":"","ucode":"036C552D7251E9","user_header":"https://static001.geekbang.org/account/avatar/00/22/e8/e1/6045b299.jpg","comment_is_top":false,"comment_ctime":1604977245,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604977245","product_id":100020801,"comment_content":"关于uname like %X,%X%的匹配问题？<br>%一般不走索引树，原因是不满足最左原则，而是直接顺序遍历整个主键索引树或者二级索引树。<br>那什么时候走主键索引树什么时候走二级索引树呢？<br>当uname是联合索引时并且你查找的字段也在联合索引中？走二级索引树，因为叶子节点的数据很少，索引树的内存就很少，如果走主键索引树，那就是整个表数据，内存占用大。<br>当uname是普通索引时，你查询的字段不是索引时？那就走主键索引，避免回表。","like_count":0},{"had_liked":false,"id":260287,"user_name":"LPF","can_delete":false,"product_type":"c1","uid":2287841,"ip_address":"","ucode":"036C552D7251E9","user_header":"https://static001.geekbang.org/account/avatar/00/22/e8/e1/6045b299.jpg","comment_is_top":false,"comment_ctime":1604976857,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604976857","product_id":100020801,"comment_content":"老师好，我有个问题。<br>表T中有字段id,uname,age，id是主键，uname是普通索引。<br>1、请问查询语句 select * from T where uname like ‘%j%’,或者&#39;%j&#39;<br>此时会遍历整个主键索引树？还是遍历整个二级索引树？<br>2、如果是select id, uname from T where uname like ‘%j%’,或者&#39;%j&#39;<br>此时会遍历整个主键索引树？还是遍历整个二级索引树？如果uname这个字段的索引大小小于主键呢比如uname是2B,主键是4B？<br>3、还是根据主键索引树和二级索引树，谁的树高来判断？一般情况下树高都是一样的大概3左右吧，我觉得不是这点。","like_count":0},{"had_liked":false,"id":258978,"user_name":"陈小渣👻","can_delete":false,"product_type":"c1","uid":1374445,"ip_address":"","ucode":"6B968B06C76C63","user_header":"https://static001.geekbang.org/account/avatar/00/14/f8/ed/60fb8fba.jpg","comment_is_top":false,"comment_ctime":1604589735,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604589735","product_id":100020801,"comment_content":"老师您好，请问下这样子类似的sql<br>1.select * from T where k in(1,2,3,4,5) <br>2.select * from T where k between 1 and 5<br>其实innodb是可以在优化器的过程中就把sql优化过来了吗？","like_count":0},{"had_liked":false,"id":258380,"user_name":"少晴","can_delete":false,"product_type":"c1","uid":2285456,"ip_address":"","ucode":"31C290044F3B95","user_header":"https://static001.geekbang.org/account/avatar/00/22/df/90/0d8864db.jpg","comment_is_top":false,"comment_ctime":1604404340,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604404340","product_id":100020801,"comment_content":"这个系列真的很值得看，我就看了索引这两篇已经相见恨晚了！满满的干活，而且能够解决实际问题。同时让我对B+树这个数据结构有了更深的了解","like_count":0},{"had_liked":false,"id":258217,"user_name":"Fire","can_delete":false,"product_type":"c1","uid":2057513,"ip_address":"","ucode":"8D3E102E690443","user_header":"https://static001.geekbang.org/account/avatar/00/1f/65/29/8c0fe011.jpg","comment_is_top":false,"comment_ctime":1604328156,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1604328156","product_id":100020801,"comment_content":"老师和同学们，有个问题： select * from t（假如表 t 有一个主键索引 id） 在执行时是按照什么顺序展示结果呢？","like_count":0},{"had_liked":false,"id":256913,"user_name":"VoV","can_delete":false,"product_type":"c1","uid":1403380,"ip_address":"","ucode":"2DE55B0C0FA7F2","user_header":"https://static001.geekbang.org/account/avatar/00/15/69/f4/99d9c102.jpg","comment_is_top":false,"comment_ctime":1603782336,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603782336","product_id":100020801,"comment_content":"老师 我有个问题，abc是联合索引 where a = 100 and b like b and c = 100。看了下执行计划，索引走到a就断了，不会走到b是为什么","like_count":0},{"had_liked":false,"id":255046,"user_name":"依山观澜","can_delete":false,"product_type":"c1","uid":1304870,"ip_address":"","ucode":"F93BDCAB56B9B7","user_header":"https://static001.geekbang.org/account/avatar/00/13/e9/26/ee614fd4.jpg","comment_is_top":false,"comment_ctime":1603257797,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603257797","product_id":100020801,"comment_content":"总结：查询语句（SELECT age,name from test_fugai_index WHERE name = &#39;测试&#39;）<br>1.我验证了一下当建立组合索引 (a,b) 如果a的类型是varchar 并不会触发索引覆盖(我通过explain 查看extra中显示只有 using where 表示 存储引擎通过索引找到符合条件的记录之后 交给了mysql service 去过滤)<br>修改之后:（SELECT age,name from test_fugai_index WHERE name = 1）<br>2.第二次我将组合索引(a,b)的a改成了int类型 执行相同的查询，extra 中出现了 using index (表示使用了覆盖索引，这是我再网上看到的说出现这个表示存储引擎使用了覆盖索引)<br>3.覆盖索引和索引下推不会同时触发，这个很容易想到，因为如果判断可以触发覆盖索引 那么根本不需要回表，而索引下推是为了减少回表的次数，在等值查询中如果查询的字段包含在索引中，那么都会触发覆盖索引（index condition pushdown） 如果在范围查询 比如 name = 1 and age &gt; 20 都会触发索引下推 会不会同事触发这两种 这是个问题，我觉得不会 毕竟一个完全不需要回表，而另一个是要回表只是减少回表的次数<br>请老师解答一下 是否有错误的地方，还有我1，2表达的是不是正确的 <br>","like_count":0},{"had_liked":false,"id":254994,"user_name":"依山观澜","can_delete":false,"product_type":"c1","uid":1304870,"ip_address":"","ucode":"F93BDCAB56B9B7","user_header":"https://static001.geekbang.org/account/avatar/00/13/e9/26/ee614fd4.jpg","comment_is_top":false,"comment_ctime":1603246661,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603246661","product_id":100020801,"comment_content":"通过覆盖索引，我理解如果查询条件命中一个组合索引，如果查询的字段中刚好被索引包含，那么就可以不用回表，原理是组合索引的非叶子节点包含了字段的值所以就直接返回了 不需要回表(我不清楚我理解的对不对，评论区求证)。那么在看索引下推的时候说，索引下推会优先判断索引中包含的值是否符合要求，通过作者的2张图可以看出 5.6之前只有最左的那个索引的值放在了索引的非叶子节点，但是5.6之后把索引中所有的值都放进去了，所以才能优先判断而不需要回表，","like_count":0},{"had_liked":false,"id":254750,"user_name":"Geek_awy","can_delete":false,"product_type":"c1","uid":2236974,"ip_address":"","ucode":"B8547213A938BA","user_header":"","comment_is_top":false,"comment_ctime":1603180587,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603180587","product_id":100020801,"comment_content":"老师，请问一下，对于索引下推举的例子，“<br>mysql&gt; select * from tuser where name like &#39;张%&#39; and age=10 and ismale=1;”<br>其中联合索引是（name，age），5.6版本以前索引中的age字段用不到，那么联合索引的作用就是1，查询条件满足覆盖索引，减少回表次数；2，使用最左原则，快速定位，避免全表扫描<br><br>我的问题是<br>1)不论select什么字段，如果where条件中出现了联合索引以外的字段，都会导致联合索引中的第一个字段之外其他字段不起作用吗<br>2)对于同一个字段，不同的查询方式会影响联合索引的使用吗，例如=,&gt;,&lt;,&lt;&gt;这几种方式","like_count":0},{"had_liked":false,"id":252587,"user_name":"Geek_681da7","can_delete":false,"product_type":"c1","uid":2195859,"ip_address":"","ucode":"6BDB6AA576E196","user_header":"https://static001.geekbang.org/account/avatar/00/21/81/93/97b3c333.jpg","comment_is_top":false,"comment_ctime":1602392505,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602392505","product_id":100020801,"comment_content":"一点小思考：<br>1、感觉设置索引的原理，就是在应对查询操作时，采用空间换时间的策略。联合索引就是将查询中经常用到的条件字段“预先”做了排序并保存结果（占用空间），而且还要考虑数据更新时的维护（消耗资源）。所有这一切都是为了在查询时直接在排序好的数据上操作，可以大大提高效率。<br>2、InnoDB的索引模型采用B+树这种数据结构，是因为它在适配磁盘操作的基础上表现出最佳的数据查询与更新的高效率。","like_count":0},{"had_liked":false,"id":250333,"user_name":"杯莫停","can_delete":false,"product_type":"c1","uid":1759325,"ip_address":"","ucode":"4FA1D5CBBEF702","user_header":"https://static001.geekbang.org/account/avatar/00/1a/d8/5d/07dfb3b5.jpg","comment_is_top":false,"comment_ctime":1601027427,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1601027427","product_id":100020801,"comment_content":"select * from T where k between 3 and 5<br><br>这个语句顺序是什么的？<br>上面例子的“在 k 索引树取下一个值 k=6，不满足条件，循环结束”<br>很显然意思是遍历二级索引，然后取到ID值后一个一个回表？那跟where key in[3，5]的区别在于in是搜索多次ID值，而between只搜索一次ID。但是回表次数是一样的。<br>不知道这样理解是不是正确的。","like_count":0},{"had_liked":false,"id":249702,"user_name":"Geek_558387","can_delete":false,"product_type":"c1","uid":1617369,"ip_address":"","ucode":"2EA857EBC365B5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/FqWrN8aNrlXEfo2YeDeCRuWMZ57VzsNC0aibkEIdiaNBdUVPjlBXrg9F4Eb8uMFYckuSgmXQ49vT6SHoicAjeEGdA/132","comment_is_top":false,"comment_ctime":1600764486,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600764486","product_id":100020801,"comment_content":"不能理解，为啥连b+树检索流程都不介绍啊","like_count":0},{"had_liked":false,"id":249591,"user_name":"随风","can_delete":false,"product_type":"c1","uid":1441812,"ip_address":"","ucode":"35C0133563EEB1","user_header":"https://static001.geekbang.org/account/avatar/00/16/00/14/84a976e7.jpg","comment_is_top":false,"comment_ctime":1600699841,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600699841","product_id":100020801,"comment_content":"老师，您好，我想问一下时间字段适合建索引吗？","like_count":0},{"had_liked":false,"id":249519,"user_name":"dyh_zero","can_delete":false,"product_type":"c1","uid":2052088,"ip_address":"","ucode":"98029D72597EF2","user_header":"","comment_is_top":false,"comment_ctime":1600681142,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600681142","product_id":100020801,"comment_content":"请问一下，普通索引上每找到一条记录，都会立刻回表查找吗？ 还是会有批次处理的过程？","like_count":0},{"had_liked":false,"id":248962,"user_name":"piboye","can_delete":false,"product_type":"c1","uid":1066752,"ip_address":"","ucode":"7CFD8712857A85","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","comment_is_top":false,"comment_ctime":1600392396,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1600392396","product_id":100020801,"comment_content":"c已经用=了，数据集不一定大，a，b只是做排序，没必要用索引，server层排序就好","like_count":0},{"had_liked":false,"id":248319,"user_name":"好运连连","can_delete":false,"product_type":"c1","uid":1105081,"ip_address":"","ucode":"2A339281321E2A","user_header":"https://static001.geekbang.org/account/avatar/00/10/dc/b9/946b181d.jpg","comment_is_top":false,"comment_ctime":1600100821,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600100821","product_id":100020801,"comment_content":"老师，请教个问题。我看全篇目录没有提及，如果索引字段可为null，会对索引有什么影响？经常提到的null影响效率，是指什么？网上的文章都千遍一律，能指点一二吗？","like_count":0},{"had_liked":false,"id":247808,"user_name":"红歌","can_delete":false,"product_type":"c1","uid":2174748,"ip_address":"","ucode":"3D87164F4A2A72","user_header":"https://static001.geekbang.org/account/avatar/00/21/2f/1c/ea01107f.jpg","comment_is_top":false,"comment_ctime":1599871357,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599871357","product_id":100020801,"comment_content":"太难了，我该怎么理解这一块的内容呢","like_count":0},{"had_liked":false,"id":246135,"user_name":"上善若水","can_delete":false,"product_type":"c1","uid":1199746,"ip_address":"","ucode":"E95D2C010807AE","user_header":"https://static001.geekbang.org/account/avatar/00/12/4e/82/67ece8b8.jpg","comment_is_top":false,"comment_ctime":1599187375,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599187375","product_id":100020801,"comment_content":"请问老师，课后题C索引是不是也可以去掉？CB索引可以最左前缀实现C的定位，是不是单独的C索引也是多余的，多谢","like_count":0},{"had_liked":false,"id":245810,"user_name":"学习学个屁","can_delete":false,"product_type":"c1","uid":1049017,"ip_address":"","ucode":"DF2D61E6FB2FCE","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/b9/73435279.jpg","comment_is_top":false,"comment_ctime":1599060081,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599060081","product_id":100020801,"comment_content":"ab 是主键，排序可以用到索引 ，查询的话，c都会走 ca，cb 索引， 所以ca 联合索引多余了。。  ","like_count":0},{"had_liked":false,"id":245732,"user_name":"Geek_a2271b","can_delete":false,"product_type":"c1","uid":2096982,"ip_address":"","ucode":"91B151DCE80B11","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/5aDwjOCzGB7x4icOnd8vwXYMOvIl1HHfvpSOKaotiaex0fMmrZghbXSicHeHIfm2mxpsiaxuTkbssmAP2kxoia7vldQ/132","comment_is_top":false,"comment_ctime":1599036617,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599036617","product_id":100020801,"comment_content":"如果MySQL建了索引，有五个数据，比如1,2,3,4,5。那么b+树的高度有多少层，是两层嘛，叶子节点一层，数据一层。并且，在第一层中，是将一页16kb的空间占满了，再有第二层，然后再第二层中，讲所有空间填充满，才生成第三层嘛","like_count":0},{"had_liked":false,"id":241179,"user_name":"Mr.Li","can_delete":false,"product_type":"c1","uid":1196401,"ip_address":"","ucode":"6BBFE118103125","user_header":"https://static001.geekbang.org/account/avatar/00/12/41/71/b8c99cf5.jpg","comment_is_top":false,"comment_ctime":1597209270,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597209270","product_id":100020801,"comment_content":"老师，我看了您的课后习题解答。我可不可以这样理解，就是二级索引后面记录的主键数据(id)顺序是根据主键(id)排序的吗？","like_count":0},{"had_liked":false,"id":241020,"user_name":"刘玉龙","can_delete":false,"product_type":"c1","uid":1500821,"ip_address":"","ucode":"02BCA2E78C1AD7","user_header":"https://static001.geekbang.org/account/avatar/00/16/e6/95/99d51e08.jpg","comment_is_top":false,"comment_ctime":1597153242,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597153242","product_id":100020801,"comment_content":"市民表的联合索引（name, age），不是已经是联合索引了吗？<br>mysql&gt; select * from tuser where name like &#39;张%&#39; and age=10 and ismale=1;<br>为什么这个只用到了  name索引","like_count":0},{"had_liked":false,"id":240751,"user_name":"DencyCheng","can_delete":false,"product_type":"c1","uid":2075106,"ip_address":"","ucode":"59DE7D24144FD4","user_header":"https://static001.geekbang.org/account/avatar/00/1f/a9/e2/f8655ee4.jpg","comment_is_top":false,"comment_ctime":1597052498,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597052498","product_id":100020801,"comment_content":"select * from T where k between 3 and 5<br>老师我有一个疑问，请问这个sql的执行是不是3,4,5都会在索引树上扫描一遍呀","like_count":0},{"had_liked":false,"id":238474,"user_name":"DanielWu","can_delete":false,"product_type":"c1","uid":1533145,"ip_address":"","ucode":"87B536480FAF5C","user_header":"https://static001.geekbang.org/account/avatar/00/17/64/d9/0353d86b.jpg","comment_is_top":false,"comment_ctime":1596177733,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596177733","product_id":100020801,"comment_content":"需要注意的是，在引擎内部使用覆盖索引在索引 k 上其实读了三个记录，R3~R5（对应的索引 k 上的记录项<br><br>这是啥意思，怎么就从k上读到R3- R5了","like_count":0},{"had_liked":false,"id":234919,"user_name":"老兵","can_delete":false,"product_type":"c1","uid":1471109,"ip_address":"","ucode":"F004F8EC90E5B0","user_header":"https://static001.geekbang.org/account/avatar/00/16/72/85/c337e9a1.jpg","comment_is_top":false,"comment_ctime":1594825529,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594825529","product_id":100020801,"comment_content":"where子句中的条件可以是多个索引吗？例如 where name like ‘张 %’ and id_card = &#39;10029234334356&#39;， 建两个索引 id_card 和 (name, age) 。","like_count":0},{"had_liked":false,"id":234845,"user_name":"Roger宇","can_delete":false,"product_type":"c1","uid":1703222,"ip_address":"","ucode":"CBA23C01409349","user_header":"https://static001.geekbang.org/account/avatar/00/19/fd/36/f947c340.jpg","comment_is_top":false,"comment_ctime":1594811201,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594811201","product_id":100020801,"comment_content":"想请问下老师和各位同学，老师提到的这个问题怎么理解。“比如上面这个市民表的情况，name 字段是比 age 字段大的 ，那我就建议你创建一个（name,age) 的联合索引和一个 (age) 的单字段索引。”  不太理解age和name字段大小和索引建立顺序等选择的逻辑联系。","like_count":0},{"had_liked":false,"id":234184,"user_name":"joker","can_delete":false,"product_type":"c1","uid":1101750,"ip_address":"","ucode":"09C3F66C262AB8","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/b6/3fcfa7e5.jpg","comment_is_top":false,"comment_ctime":1594612829,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594612829","product_id":100020801,"comment_content":"时间范围的查找要怎么加索引好呢？","like_count":0},{"had_liked":false,"id":233632,"user_name":"jiaozhuchen","can_delete":false,"product_type":"c1","uid":1510471,"ip_address":"","ucode":"65A696D75C0577","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI9cqxrtYLlu0XvlU6J7LwEn67cL9fbnJrI6UjankWwbhiaeDQ8fI2LtjMMVMFIGKSlUyeKmN29SMg/132","comment_is_top":false,"comment_ctime":1594372098,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594372098","product_id":100020801,"comment_content":"老师，请教下，很多前辈都说索引列最好设为not null, 如果索引列存在null值，就会不走索引，我在8.0下测试并没有发现不走索引啊，能帮忙解答下这个问题吗？","like_count":0},{"had_liked":false,"id":233248,"user_name":"崔经刚","can_delete":false,"product_type":"c1","uid":1827943,"ip_address":"","ucode":"207FDF850860C4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/P5lTnAkviacPGu5S5XJQGQdTpvkSjAVU9Nu2EYicIpMAjiaNP8aXDtfcIHicSnHw2fVIoqTWGGg48rZVzcficUlbgmw/132","comment_is_top":false,"comment_ctime":1594269488,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594269488","product_id":100020801,"comment_content":"老师，我看到评论区@无名之辈提问：老师，一次查询为啥不能只回表一次呢？比如范围查询通过二级索引定位到全部符合条件的主键在回表一次<br>您的解答是：这样还需要地方把”满足条件的所有主键值“存起来就要用到临时表了，性能反而更差。<br>但是，mysql不是有mrr优化吗？而且，您在评论区里有说，select * from T where k between 1 and 5只搜索一次？","like_count":0},{"had_liked":false,"id":230583,"user_name":"董和平","can_delete":false,"product_type":"c1","uid":1763896,"ip_address":"","ucode":"725AF56B5D238F","user_header":"https://static001.geekbang.org/account/avatar/00/1a/ea/38/61c608fd.jpg","comment_is_top":false,"comment_ctime":1593423064,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593423064","product_id":100020801,"comment_content":"老师，我想请教一个问题，比如 我在一张表的timeStamp字段上建索引，然后范围查询时间，比如：<br>···<br>EXPLAIN<br>select id <br>from  test_table<br>where create_time BETWEEN &#39;2020-06-19 15:51:40.129&#39; and &#39;2020-06-29 15:51:40.129&#39;<br>···<br>执行计划显示为<br>id\tselect_type\ttable\tpartitions\ttype\tpossible_keys\tkey\tkey_len\tref\trows\tfiltered\tExtra<br>1\tSIMPLE\tt_otc_order_deal\t\trange\tidx_create_time\tidx_create_time\t4\t\t12922\t100\tUsing where; Using index<br><br>我的问题就是 为何Extra中会是Using where;Using index，我理解既然create_time有索引，为何Extra不是直接出现Using index，而是出现Using where;Using index.另外  Using where;Using index 到底该如何理解，我的理解是先用Using where 进行全表扫描，然后才用到了索引Using index? 但是这样说不通啊","like_count":0},{"had_liked":false,"id":228574,"user_name":"sh","can_delete":false,"product_type":"c1","uid":1896648,"ip_address":"","ucode":"F0EE9818E69735","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f0/c8/c713d483.jpg","comment_is_top":false,"comment_ctime":1592740836,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592740836","product_id":100020801,"comment_content":"老师提出的问题是否可以这么理解：<br>由于存在主键(a,b)的联合索引，同时存在c上的普通索引，那么(c,a)上的联合索引的结果等同于c上的普通索引，所以(c,a)是不需要的，而根据最左前缀原则，(c,b)这个联合索引不等同于c上的普通索引，所以有存在的必要。","like_count":0},{"had_liked":false,"id":228040,"user_name":"dawn","can_delete":false,"product_type":"c1","uid":1384866,"ip_address":"","ucode":"40CEAC0FD6567C","user_header":"https://static001.geekbang.org/account/avatar/00/15/21/a2/280e29ff.jpg","comment_is_top":false,"comment_ctime":1592541820,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592541820","product_id":100020801,"comment_content":"老师，我有个疑问。留言区你说了对于二级索引可以都可以认为是跟主键组成的联合索引，那我理解在二级索引树的叶子节点存储主键值的时候肯定是按照顺序存储的吧？","like_count":0},{"had_liked":false,"id":226877,"user_name":"AZZZZZZ","can_delete":false,"product_type":"c1","uid":2037588,"ip_address":"","ucode":"7273A4C24B81E9","user_header":"","comment_is_top":false,"comment_ctime":1592221266,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592221266","product_id":100020801,"comment_content":"没有理解如何使用“alter table T engine=InnoDB”语句重建索引。<br>是因为使用这个语句促使重建表，使得索引重建吗？","like_count":0},{"had_liked":false,"id":226760,"user_name":"Geek_76f04f","can_delete":false,"product_type":"c1","uid":2020720,"ip_address":"","ucode":"2A3D34C303E19A","user_header":"https://static001.geekbang.org/account/avatar/00/1e/d5/70/93a34aa5.jpg","comment_is_top":false,"comment_ctime":1592198253,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592198253","product_id":100020801,"comment_content":"老师，关于联合索引ab，where b = x也会命中索引吧。我用explain查看显示using where using index。","like_count":0},{"had_liked":false,"id":226522,"user_name":"name","can_delete":false,"product_type":"c1","uid":1883620,"ip_address":"","ucode":"6590B57AB8D8A6","user_header":"https://static001.geekbang.org/account/avatar/00/1c/bd/e4/6cd55898.jpg","comment_is_top":false,"comment_ctime":1592127936,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592127936","product_id":100020801,"comment_content":"不对，我也遇到过这样的同事。应该ab、c维护索引就够","like_count":0},{"had_liked":false,"id":226422,"user_name":"沉落的时针","can_delete":false,"product_type":"c1","uid":2038389,"ip_address":"","ucode":"A2C3F5FFEC24AA","user_header":"https://static001.geekbang.org/account/avatar/00/1f/1a/75/ec8cba01.jpg","comment_is_top":false,"comment_ctime":1592096592,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592096592","product_id":100020801,"comment_content":"身份证号+姓名的联合索引就可以通过身份证号查姓名，不用回表吗 <br>这个联合索引的键是身份证+姓名 值域是主键id吧,所以根据身份证号是查到键里面的姓名是吗","like_count":0},{"had_liked":false,"id":225935,"user_name":"naadp","can_delete":false,"product_type":"c1","uid":2036468,"ip_address":"","ucode":"2C853E7E89EC00","user_header":"https://static001.geekbang.org/account/avatar/00/1f/12/f4/c5cc59f0.jpg","comment_is_top":false,"comment_ctime":1591902393,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591902393","product_id":100020801,"comment_content":"老师，索引下推只在 like，&lt;， &gt;，这种单位查找时才存在吗？","like_count":0},{"had_liked":false,"id":225805,"user_name":"唯一","can_delete":false,"product_type":"c1","uid":2028350,"ip_address":"","ucode":"2B543C1B9C5570","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f3/3e/6e6d63d7.jpg","comment_is_top":false,"comment_ctime":1591863747,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1591863747","product_id":100020801,"comment_content":"MySQL 中使用 select field from table where field like abc% 这种模式也是属于最左前缀模式吗？在b+树上是如何实现字符串的索引的呢？","like_count":0},{"had_liked":false,"id":221973,"user_name":"Geek_55e386","can_delete":false,"product_type":"c1","uid":1795793,"ip_address":"","ucode":"5A727F1323C2D0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/zxkns28cIAUZIt3WjDb8G26qiccT84d9GMr9ZpbYR60TU1ibqSj9NoYVHlJvGF1kOltkqNDmEfJCqPuYVkue3WHg/132","comment_is_top":false,"comment_ctime":1590646657,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590646657","product_id":100020801,"comment_content":"如果用子索引查询wehre k &gt; 0 ；<br>假如有100条记录符合条件，难道回表100次吗？<br>为什么不是 先拿到所有符合条件的主键，然后回表呢","like_count":0},{"had_liked":false,"id":221320,"user_name":"longslee","can_delete":false,"product_type":"c1","uid":1465986,"ip_address":"","ucode":"C24E32E5B1B6F5","user_header":"https://static001.geekbang.org/account/avatar/00/16/5e/82/438c8534.jpg","comment_is_top":false,"comment_ctime":1590473803,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590473803","product_id":100020801,"comment_content":"如果两个字符串字段组成的联合索引，查询条件 first_name like &#39;Ga%’and last_name like &#39;Bi%&#39; 的话，第二个 like 是怎么运作的呢？索引下推似乎包含不完？","like_count":0},{"had_liked":false,"id":221058,"user_name":"注意力$","can_delete":false,"product_type":"c1","uid":1142316,"ip_address":"","ucode":"7FB3399A1EAB72","user_header":"https://static001.geekbang.org/account/avatar/00/11/6e/2c/e2f3cfc0.jpg","comment_is_top":false,"comment_ctime":1590393925,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1590393925","product_id":100020801,"comment_content":"老师，Oracle 的所有索引只是存的键值和rowid，mysql 主键要存正行的数据 是不是太多了？B+ 树的中间节点并不直接存储数据 是为什么呢","like_count":0},{"had_liked":false,"id":219507,"user_name":"xinnong","can_delete":false,"product_type":"c1","uid":1005415,"ip_address":"","ucode":"3C1F1EB93FBA5B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/67/01d1580f.jpg","comment_is_top":false,"comment_ctime":1590033801,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590033801","product_id":100020801,"comment_content":"有个疑问，希望大佬解答下：<br>如果某个innodb表除了主键索引外，还有好几个二级索引，那么这个innodb表就是好几颗B+树。<br>1、对这个表执行alter table T engine=InnoDB时，主键索引会重建，其他的二级索引也会重建么？<br>2、还是说要分情况，比如当主键索引的字段有字段a变为字段b时，其他二级索引才会重建，否则不会重建？","like_count":0},{"had_liked":false,"id":217296,"user_name":"欧阳舒","can_delete":false,"product_type":"c1","uid":1219483,"ip_address":"","ucode":"A4C232C4901711","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/9b/ff894172.jpg","comment_is_top":false,"comment_ctime":1589457683,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589457683","product_id":100020801,"comment_content":"老师，全表扫描是按一定顺序去搜索的吗？还是随机的？","like_count":0},{"had_liked":false,"id":217170,"user_name":"tyy","can_delete":false,"product_type":"c1","uid":1302149,"ip_address":"","ucode":"C3B436E6562744","user_header":"https://static001.geekbang.org/account/avatar/00/13/de/85/da98e390.jpg","comment_is_top":false,"comment_ctime":1589430161,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589430161","product_id":100020801,"comment_content":"老师状态字段，值为1.2.3.4.5，这个你们怎么建索引优化的","like_count":0},{"had_liked":false,"id":216472,"user_name":"Geek_a8be59","can_delete":false,"product_type":"c1","uid":1563985,"ip_address":"","ucode":"BEC0F57B51DC44","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKdiaUiaCYQe9tibemaNU5ya7RrU3MYcSGEIG7zF27u0ZDnZs5lYxPb7KPrAsj3bibM79QIOnPXAatfIw/132","comment_is_top":false,"comment_ctime":1589267329,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589267329","product_id":100020801,"comment_content":"看了好多评论，有个问题想请教一下：<br>比如表T(id, a,b,c,d)   id主键索引   index(a,b,c)<br>select a,b,c from T where a = 1 and b&gt;5  <br>第一个问题：这个sql是不是用到的联合索引中的a和 ICP?","like_count":0},{"had_liked":false,"id":216253,"user_name":"insist","can_delete":false,"product_type":"c1","uid":1054536,"ip_address":"","ucode":"1EE2800A900BA7","user_header":"https://static001.geekbang.org/account/avatar/00/10/17/48/3ab39c86.jpg","comment_is_top":false,"comment_ctime":1589210142,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589210142","product_id":100020801,"comment_content":"老师，问两个问题？1. alter table T engine=InnoDB会导致表和主键索引同时重建吗？对表中的数据有什么影响？2.生产环境大数据表，新增索引或者删除索引时，会影响当前对表的增加和修改吗？","like_count":0},{"had_liked":false,"id":216030,"user_name":"小白","can_delete":false,"product_type":"c1","uid":1205485,"ip_address":"","ucode":"862EA133563634","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJUhJakYu4BI7eFnheKDdibDjZqz32ia2rhN0Jz5YoR1ZRlDrLcFNr4MJnPg3WiaxaocWotOANeqsBibw/132","comment_is_top":false,"comment_ctime":1589171906,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1589171906","product_id":100020801,"comment_content":"老师，这个问题我想了很久还没想到问题根本所在，麻烦老师看到回复我一下<br>联合索引 a,b,c  当 a = 1 and b &gt;2 and c = 3 时，索引 a b 生效，c失效<br>疑惑1：a的排列是有序的，b的排列是否有序不一定，这里是怎么用上b的索引的<br>疑惑2：ab索引用到，根据索引下推原理，再联合索引中判断c也可以，这样算不算c也生效了，或者是c的失效原理是什么<br>后面专栏看完了，这个问题我还是没想通，请老师指导一下","like_count":0,"discussions":[{"author":{"id":1105848,"avatar":"https://static001.geekbang.org/account/avatar/00/10/df/b8/1af6667e.jpg","nickname":"zero","note":"","ucode":"4FD99E108B1A31","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392113,"discussion_content":"1.字段b在索引中的排序也是有序的，根据索引前缀原则，字段a 是等值查询，因此字段b也可以用到索引；\n2.字段c失效是因为排在它前面的字段b用到了范围查询，不过，由于有索引下推，字段c可以在索引遍历的时候作为过滤条件。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630838406,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215283,"user_name":"jun.","can_delete":false,"product_type":"c1","uid":1992108,"ip_address":"","ucode":"51254D1D8DB0B2","user_header":"","comment_is_top":false,"comment_ctime":1588947291,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588947291","product_id":100020801,"comment_content":"老师我有个疑问：<br>执行select * from tuser where name like &#39;张%&#39;这个语句时，走索引<br>select name from tuser where name like &#39;张%&#39;执行这种时也走索引<br>但是select * from tuser where name like &#39;%张&#39;执行这种就不走索引了，这是为什么呢","like_count":0},{"had_liked":false,"id":214957,"user_name":"心声","can_delete":false,"product_type":"c1","uid":1448630,"ip_address":"","ucode":"ABFFC9137B0FC8","user_header":"https://static001.geekbang.org/account/avatar/00/16/1a/b6/4777f789.jpg","comment_is_top":false,"comment_ctime":1588857327,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588857327","product_id":100020801,"comment_content":"老师，请问索引下推是否是 覆盖索引的情况下， 根据最左匹配原则中不是第一个字段的 其它字段的内容，mysql5.6之后记录了其值，减少了回表次数 而产生的？","like_count":0},{"had_liked":false,"id":214787,"user_name":"yoonhi","can_delete":false,"product_type":"c1","uid":1992786,"ip_address":"","ucode":"857D923DFAEF85","user_header":"https://static001.geekbang.org/account/avatar/00/1e/68/52/23174ee1.jpg","comment_is_top":false,"comment_ctime":1588819409,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588819409","product_id":100020801,"comment_content":"mark 数据库方面的小白。看的我挺懵，有点小收获，但是感觉还没吸收消化到。评论区大神挺多，问的问题也看的我懵懵。坚持！","like_count":0},{"had_liked":false,"id":213674,"user_name":"Jc.Chen","can_delete":false,"product_type":"c1","uid":1180676,"ip_address":"","ucode":"36886491352CD4","user_header":"https://static001.geekbang.org/account/avatar/00/12/04/04/0af56558.jpg","comment_is_top":false,"comment_ctime":1588508442,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588508442","product_id":100020801,"comment_content":"老师，我还是没搞懂 “重建索引 k 的做法是合理的，可以达到省空间的目的” 为什么会达到省空间的目的啊，我在上一节提问了，望回答","like_count":0},{"had_liked":false,"id":211056,"user_name":"blackjuly","can_delete":false,"product_type":"c1","uid":1229068,"ip_address":"","ucode":"12B2C46F246718","user_header":"https://static001.geekbang.org/account/avatar/00/12/c1/0c/f47fd608.jpg","comment_is_top":false,"comment_ctime":1587889293,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587889293","product_id":100020801,"comment_content":"本期的思考题，如果有和我一样的经验不足的小伙伴；希望你们注意一下用老师的sql实即操作的话，一定要多插入一些数据，否则看到的结论可能和你想象中的不一样；今天刚get的新知识点，表的数据量会影响mysql对索引的选择","like_count":0},{"had_liked":false,"id":209564,"user_name":"Struggle~honor","can_delete":false,"product_type":"c1","uid":1975831,"ip_address":"","ucode":"EBC6DFC6CF0973","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/rSzzqGwHcvhwPejiaPsCY9XBX7ib7zTxJ6cUDORdhGIakX8dTPVsz6ibud5ec1FeWQGTseF2TPRECCjky5JMlHvDg/132","comment_is_top":false,"comment_ctime":1587566934,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587566934","product_id":100020801,"comment_content":"老师你好，想请教老师两个问题，鹅厂问到了，但是回答得不够好。<br>1.主键和唯一索引的区别，说得越多越好<br>2.什么时候不会用到复合索引","like_count":0},{"had_liked":false,"id":209545,"user_name":"Struggle~honor","can_delete":false,"product_type":"c1","uid":1975831,"ip_address":"","ucode":"EBC6DFC6CF0973","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/rSzzqGwHcvhwPejiaPsCY9XBX7ib7zTxJ6cUDORdhGIakX8dTPVsz6ibud5ec1FeWQGTseF2TPRECCjky5JMlHvDg/132","comment_is_top":false,"comment_ctime":1587565500,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587565500","product_id":100020801,"comment_content":"老师，请问课程有讲索引为啥是B+树，不是B树吗，试看了2节，写的很好","like_count":0},{"had_liked":false,"id":209522,"user_name":"Geek_1d80ef","can_delete":false,"product_type":"c1","uid":1725343,"ip_address":"","ucode":"2695F603FE80E0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep0icNIl01hycNvkTKHFtLMcxtJ8Nr48KOicUBA7jdbOjx41l1pkoic3l0Xftib4RsgeIkPV4y4cA6MPw/132","comment_is_top":false,"comment_ctime":1587563115,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587563115","product_id":100020801,"comment_content":"最近看高性能mysql感觉有些枯燥，结合老师讲的一起看，就看的津津有味了","like_count":0},{"had_liked":false,"id":208815,"user_name":"甜公子Timmy","can_delete":false,"product_type":"c1","uid":1673409,"ip_address":"","ucode":"E6E90C518CDAC2","user_header":"https://static001.geekbang.org/account/avatar/00/19/88/c1/d0136c63.jpg","comment_is_top":false,"comment_ctime":1587442416,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587442416","product_id":100020801,"comment_content":"一直有一点不是很明白，对于视图的查询，那种多表组成的视图，那么视图内部的索引还能用于提高查询效率么？","like_count":0},{"had_liked":false,"id":208799,"user_name":"写BUG","can_delete":false,"product_type":"c1","uid":1946299,"ip_address":"","ucode":"B8C68F5F3AFA0C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLUDoNibohMic2oJ0PhGbJOtZ5Lmr27saLicrA7K9EswZ2U7n8pocg6mHmgHakRVM13AicOTCkIe0XsbQ/132","comment_is_top":false,"comment_ctime":1587440253,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587440253","product_id":100020801,"comment_content":"新版mysql<br>对于索引(a,b,c)<br>如果是a=1 and b&lt;&gt;1 and c=1<br>符合条件的直接拿出来了  用到了索引下推 不用回表对吗","like_count":0},{"had_liked":false,"id":208251,"user_name":"不倒霉熊","can_delete":false,"product_type":"c1","uid":1969849,"ip_address":"","ucode":"2AAF4E62F502FD","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIYdf5Z0Iicn5nTotREgicJibeRKHsSkgmBaH3ghpL5Oug6FNA4zo08X672ePXYbiaCWCr57wXwUPAiazg/132","comment_is_top":false,"comment_ctime":1587308386,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1587308386","product_id":100020801,"comment_content":"对于联合索引（a，b），如果where只有b=1的情况，不是会走索引跳扫吗？索引跳扫也算走索引了吧？","like_count":0},{"had_liked":false,"id":207254,"user_name":"要离刺荆轲","can_delete":false,"product_type":"c1","uid":1107380,"ip_address":"","ucode":"3405ED1580A19D","user_header":"https://static001.geekbang.org/account/avatar/00/10/e5/b4/a12edf06.jpg","comment_is_top":false,"comment_ctime":1587036019,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587036019","product_id":100020801,"comment_content":"请问下，对于无索引下推的流程图中，为什么组合索引age没有值，对于这个图有点费解？老实说，对于索引下推这个图，感觉理所当然。能麻烦解答下嘛？谢谢！","like_count":0},{"had_liked":false,"id":206437,"user_name":"lofaith","can_delete":false,"product_type":"c1","uid":1322553,"ip_address":"","ucode":"5DF6922BBF1AD5","user_header":"https://static001.geekbang.org/account/avatar/00/14/2e/39/7682b49e.jpg","comment_is_top":false,"comment_ctime":1586860885,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586860885","product_id":100020801,"comment_content":"老师，b+树索引是一个平衡n叉树嘛，那它每次插入数据岂不是都要去平衡整个n叉树？使用身份证号查询姓名的时候，姓名和年龄建立了联合索引，这个时候不用回表是因为在身份证号这个索引树存储的page 里面不仅记录了主键索引还记录了其他的索引信息嘛","like_count":0},{"had_liked":false,"id":205349,"user_name":"T","can_delete":false,"product_type":"c1","uid":1668015,"ip_address":"","ucode":"4CC56C9EC26B8E","user_header":"https://static001.geekbang.org/account/avatar/00/19/73/af/a0c708ec.jpg","comment_is_top":false,"comment_ctime":1586596753,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1586596753","product_id":100020801,"comment_content":"老师，建立联合索引（a,b,c），那么(a,b,c),(a,b),(a,c),(a)可以使用到索引，（c,a）可以使用到索引吗？为什么呢","like_count":0,"discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":237917,"discussion_content":"可以，但是不能快速定位，需要遍历索引树","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587196987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":203116,"user_name":"金重石頁⁴².₁₉₅","can_delete":false,"product_type":"c1","uid":1648865,"ip_address":"","ucode":"38F3DD549A5676","user_header":"https://static001.geekbang.org/account/avatar/00/19/28/e1/93886c86.jpg","comment_is_top":false,"comment_ctime":1586141528,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586141528","product_id":100020801,"comment_content":"select * from geek where c=N order by a limit 1;<br>通过索引c 定位N对应的主键值<br>然后去主键（a, b）中找到C=N的值。<br>再回表的过程中，已经访问了（a, b) 主键，所以ca, cb的索引不应该针对上述查询。","like_count":0},{"had_liked":false,"id":202123,"user_name":"傲慢与偏见","can_delete":false,"product_type":"c1","uid":1028778,"ip_address":"","ucode":"1E1E93BE6142E0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b2/aa/8a74401f.jpg","comment_is_top":false,"comment_ctime":1585905446,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1585905446","product_id":100020801,"comment_content":"我想确定一下，索引下推是5.6以后的优化，回表是根据查询字段来确定的，对么？<br>mysql&gt; select * from tuser where name like &#39;张%&#39; and age=10 and ismale=1;<br>如果把select * 改为select name,age后，两者的区别在于是否回表？<br><br>","like_count":0,"discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":237928,"discussion_content":"根据查询字段和条件字段，必须两者都符合","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587197867,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":200242,"user_name":"Liveus","can_delete":false,"product_type":"c1","uid":1831568,"ip_address":"","ucode":"9FB51D26E9530C","user_header":"","comment_is_top":false,"comment_ctime":1585562044,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585562044","product_id":100020801,"comment_content":"有个问题，我通过explain看到：创建了（name,age）索引，实际过程中where后只用了age，也是会走联合索引的，这是因为什么？","like_count":0},{"had_liked":false,"id":200089,"user_name":"阿May的海绵宝宝","can_delete":false,"product_type":"c1","uid":1203058,"ip_address":"","ucode":"AA2B28DF8BEF80","user_header":"https://static001.geekbang.org/account/avatar/00/12/5b/72/4f8a4297.jpg","comment_is_top":false,"comment_ctime":1585541901,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585541901","product_id":100020801,"comment_content":"老师，如果是一个联合索引col1,col2,col3. sql：select * from table where col1 = &#39;xxx&#39;   第一个字段的等值查询，一个非叶子节点上关键字是 col1 = xxx  col2=yyyy col3 = zzz.   是选择左边指针还是选择右边指针来继续检索？ 我的想法是向左边指针继续检索，因为叶子节点是一个单链连接，只能向右边检索。","like_count":0},{"had_liked":false,"id":198846,"user_name":"Ryan","can_delete":false,"product_type":"c1","uid":1667987,"ip_address":"","ucode":"95BBBEE5B23878","user_header":"https://static001.geekbang.org/account/avatar/00/19/73/93/0a3a1e5b.jpg","comment_is_top":false,"comment_ctime":1585470368,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585470368","product_id":100020801,"comment_content":"每一个索引在InnoDB里面对应一棵B+树<br>主键索引的叶子节点存的是整行数据。在 InnoDB 里，主键索引也被称为聚簇索引（clustered index）<br>覆盖索引：查询的列从当前索引中可以直接取到 不用回表<br>索引下推：查询中先从索引中过滤 然后再回表 减少回表次数","like_count":0},{"had_liked":false,"id":195261,"user_name":"喻茂","can_delete":false,"product_type":"c1","uid":1318661,"ip_address":"","ucode":"C8BD8086A17365","user_header":"https://static001.geekbang.org/account/avatar/00/14/1f/05/8a06692e.jpg","comment_is_top":false,"comment_ctime":1585151073,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585151073","product_id":100020801,"comment_content":"MariaDB [test]&gt; explain select * from T where k between 3 and 5\\G;<br>*************************** 1. row ***************************<br>           id: 1<br>  select_type: SIMPLE<br>        table: T<br>         type: range<br>possible_keys: k<br>          key: k<br>      key_len: 4<br>          ref: NULL<br>         rows: 2<br>        Extra: Using index condition<br>1 row in set (0.00 sec)<br><br>ERROR: No query specified<br><br>MariaDB [test]&gt; explain select k from T where k between 3 and 5\\G;<br>*************************** 1. row ***************************<br>           id: 1<br>  select_type: SIMPLE<br>        table: T<br>         type: index<br>possible_keys: k<br>          key: k<br>      key_len: 4<br>          ref: NULL<br>         rows: 6<br>        Extra: Using where; Using index<br>1 row in set (0.00 sec)<br><br>ERROR: No query specified<br><br><br>老师这个explain语句中的rows是代表什么？为什么使用覆盖索引是6而需要回表反而是2","like_count":0},{"had_liked":false,"id":193888,"user_name":"客舟听雨来coding","can_delete":false,"product_type":"c1","uid":1026219,"ip_address":"","ucode":"753F4B779CC416","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a8/ab/5d25cd32.jpg","comment_is_top":false,"comment_ctime":1584977636,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1584977636","product_id":100020801,"comment_content":"老师，不大明白最左前缀索引原则和索引下推有什么区别，感觉这是一样的东西","like_count":0,"discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":237945,"discussion_content":"最左前缀是用来定位记录的，而索引下推是针对联合索引中不符合最左前缀的部分按照条件做过滤减少回表次数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587199094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":193560,"user_name":"LOST","can_delete":false,"product_type":"c1","uid":1909835,"ip_address":"","ucode":"5CAE095974CCA4","user_header":"https://static001.geekbang.org/account/avatar/00/1d/24/4b/6457b730.jpg","comment_is_top":false,"comment_ctime":1584927373,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584927373","product_id":100020801,"comment_content":"老师，假如在已经有一定数据量的数据表中新增一条索引，新增过程是否需要较长时间？是否会影响数据库的运行？","like_count":0},{"had_liked":false,"id":192791,"user_name":"冰河时代","can_delete":false,"product_type":"c1","uid":1098504,"ip_address":"","ucode":"F4375FB7CE4FD4","user_header":"https://static001.geekbang.org/account/avatar/00/10/c3/08/28c327d0.jpg","comment_is_top":false,"comment_ctime":1584873002,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584873002","product_id":100020801,"comment_content":"最左匹配是怎么匹配的？","like_count":0},{"had_liked":false,"id":189764,"user_name":"starj","can_delete":false,"product_type":"c1","uid":1108791,"ip_address":"","ucode":"3546E42F1340B2","user_header":"https://static001.geekbang.org/account/avatar/00/10/eb/37/a2f4c9f8.jpg","comment_is_top":false,"comment_ctime":1584546768,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1584546768","product_id":100020801,"comment_content":"终于明白覆盖索引了","like_count":0},{"had_liked":false,"id":189755,"user_name":"starj","can_delete":false,"product_type":"c1","uid":1108791,"ip_address":"","ucode":"3546E42F1340B2","user_header":"https://static001.geekbang.org/account/avatar/00/10/eb/37/a2f4c9f8.jpg","comment_is_top":false,"comment_ctime":1584545909,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1584545909","product_id":100020801,"comment_content":"太有用了","like_count":0},{"had_liked":false,"id":186518,"user_name":"Geek_75d94a","can_delete":false,"product_type":"c1","uid":1680332,"ip_address":"","ucode":"2E7B6075AAB8B0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/1LIW93RQ3ZvevCcfgib9Z4NwHsNAbicmGkicZwe9zCBPc9A2IXfLtXGUmzqrsibn1FibZcNIOddOrF9icuww9cYZD5ibA/132","comment_is_top":false,"comment_ctime":1583855544,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1583855544","product_id":100020801,"comment_content":"mysql&gt; select * from tuser where name like &#39;张%&#39; and age=10 and ismale=1; 为什么是索引下推呢？不是可以根据最左前缀找出name符合的几个索引，然后再往右依次找出age=10对应主键吗？感觉这个是最左前缀呀，最左前缀和索引下推傻傻分不清楚","like_count":0,"discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":237955,"discussion_content":"所以age=10就利用了索引下推","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587200043,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":237951,"discussion_content":"因为like 是范围查询，范围查询右边的列都走不了索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587199949,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186324,"user_name":"Geek_watermelon","can_delete":false,"product_type":"c1","uid":1492334,"ip_address":"","ucode":"91E8719FE966D1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erbEmOX3L6GagEaDzNpn28r0Yq7MjG5mxQicu8tXyqEZ1GatEm4Rc3VeicpqBftFq70AJictfmBmyDGA/132","comment_is_top":false,"comment_ctime":1583825611,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583825611","product_id":100020801,"comment_content":"今天这篇的总结：1.覆盖索引：当查询结果列在索引树上可全部覆盖，则无需回到主键索引树（回表）提取数据，直接返回；","like_count":0},{"had_liked":false,"id":185273,"user_name":"哈密锅儿","can_delete":false,"product_type":"c1","uid":1792142,"ip_address":"","ucode":"35B34503F530AB","user_header":"https://static001.geekbang.org/account/avatar/00/1b/58/8e/97b20eb3.jpg","comment_is_top":false,"comment_ctime":1583551015,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583551015","product_id":100020801,"comment_content":"老师，索引下推是针对联合索引的吗？","like_count":0},{"had_liked":false,"id":184506,"user_name":"liuxing5","can_delete":false,"product_type":"c1","uid":1359518,"ip_address":"","ucode":"C2ED58AF619585","user_header":"https://static001.geekbang.org/account/avatar/00/14/be/9e/3a542996.jpg","comment_is_top":false,"comment_ctime":1583330261,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1583330261","product_id":100020801,"comment_content":"老师，关于索引下推我想确认下。对索引中包含的字段先做判断，直接过滤掉不满足条件的记录，减少回表次数，这里没有最左前缀的概念吧，只要是联合索引的字段就会做筛选？那是不是和最左前缀有冲突？","like_count":0,"discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":238096,"discussion_content":"索引下推是针对不满足最左前缀的索引字段","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587210750,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184470,"user_name":"深白色","can_delete":false,"product_type":"c1","uid":1123171,"ip_address":"","ucode":"C4B26AB70D8A6D","user_header":"https://static001.geekbang.org/account/avatar/00/11/23/63/4fb6fee0.jpg","comment_is_top":false,"comment_ctime":1583323820,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583323820","product_id":100020801,"comment_content":"a是主键索引的第一个字段，在c上建立索引就已经包含(c,a)索引的情况了，c索引中会包含主键索引值，即c索性树中会包含c,a,b三个字段的值，三个字段都是按升序排列的","like_count":0},{"had_liked":false,"id":183283,"user_name":"(Kelen)","can_delete":false,"product_type":"c1","uid":1241185,"ip_address":"","ucode":"C8578DB62E3B2D","user_header":"https://static001.geekbang.org/account/avatar/00/12/f0/61/fedca2e9.jpg","comment_is_top":false,"comment_ctime":1582986185,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1582986185","product_id":100020801,"comment_content":"联合索引作为主键的情况下，二级索引的节点存储是啥","like_count":0,"discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":238103,"discussion_content":"就是主键值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587211007,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182135,"user_name":"不吃番茄的西红柿","can_delete":false,"product_type":"c1","uid":1142465,"ip_address":"","ucode":"AC62CE8D23FACD","user_header":"https://static001.geekbang.org/account/avatar/00/11/6e/c1/e2cc1261.jpg","comment_is_top":false,"comment_ctime":1582716399,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582716399","product_id":100020801,"comment_content":"老师问一下，假定有一个表有三个字段 id,name,age 后面两个为联合索引name,age 但是分析的时候where只查age或者name都能走到联合索引，这是为什么？那么，如果再增加一个字段，直接用age就没法使用索引了，这是咋回事？","like_count":0},{"had_liked":false,"id":179605,"user_name":"乔丹","can_delete":false,"product_type":"c1","uid":1217413,"ip_address":"","ucode":"D832A9F97A0C7E","user_header":"https://static001.geekbang.org/account/avatar/00/12/93/85/f5d9474c.jpg","comment_is_top":false,"comment_ctime":1582037962,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582037962","product_id":100020801,"comment_content":"个人愚见是：联合主键为ab, 再建立cb的联合索引就行了。<br><br>select * from geek where c=N order by a limit 1;<br>select * from geek where c=N order by b limit 1;<br>第一个语句可以根据cb中的联合索引中的c和联合主键ab快速查询到。<br>第二个语句可以根据cb联合索引查询。<br>","like_count":0},{"had_liked":false,"id":178639,"user_name":"伟伟哦","can_delete":false,"product_type":"c1","uid":1394961,"ip_address":"","ucode":"51E5FC28E6F0B3","user_header":"https://static001.geekbang.org/account/avatar/00/15/49/11/31d961a1.jpg","comment_is_top":false,"comment_ctime":1581767286,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581767286","product_id":100020801,"comment_content":"听您的<br>要是这个查询where last_name = &#39;Smith&#39; and first_name LIKE &#39;J%&#39; and dob = &#39;1976-12-23&#39;,这个查询只能使用索引的前两列<br>like不是一个范围的查找，应该用不上索引了<br>也就说 必须是联合索引才能用上 LIke<br>","like_count":0},{"had_liked":false,"id":177804,"user_name":"滴答丶滴","can_delete":false,"product_type":"c1","uid":1181206,"ip_address":"","ucode":"2093C2948B4327","user_header":"https://static001.geekbang.org/account/avatar/00/12/06/16/e85c1fa8.jpg","comment_is_top":false,"comment_ctime":1581503736,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581503736","product_id":100020801,"comment_content":"老师，N叉树的叶节点与存储的数据成正比，与索引成反比是嘛？","like_count":0},{"had_liked":false,"id":177524,"user_name":"ipofss","can_delete":false,"product_type":"c1","uid":1018620,"ip_address":"","ucode":"DE3061C9259F9E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8a/fc/d1dd57dd.jpg","comment_is_top":false,"comment_ctime":1581410332,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581410332","product_id":100020801,"comment_content":"1、覆盖索引：只查询主键，用where普通索引是用到<br>2、最左前缀：可以是联合索引的最左 N 个字段，也可以是字符串索引的最左 M 个字符<br>3、索引下推：在联合索引的基础上，where语句中的条件可以减少回表次数","like_count":0},{"had_liked":false,"id":176486,"user_name":"张汉桂-东莞","can_delete":false,"product_type":"c1","uid":1116277,"ip_address":"","ucode":"38657ABA59382A","user_header":"https://static001.geekbang.org/account/avatar/00/11/08/75/512b9f26.jpg","comment_is_top":false,"comment_ctime":1581069972,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581069972","product_id":100020801,"comment_content":"索引下推意思就是遍历索引时直接过滤掉不需要的行对吧。<br>最后例子的ca和cb这两个索引都是多余的。<br>主键ab<br>索引c的结构是c，a，b  已经包含a和b字段了。","like_count":0},{"had_liked":false,"id":175914,"user_name":"hello","can_delete":false,"product_type":"c1","uid":1081830,"ip_address":"","ucode":"1DD63E4EF56E8B","user_header":"https://static001.geekbang.org/account/avatar/00/10/81/e6/5332f097.jpg","comment_is_top":false,"comment_ctime":1580884560,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580884560","product_id":100020801,"comment_content":"老师请问一下，是应该先建立索引再导入大批量数据，还是先导入大批量数据再建立索引呢？","like_count":0},{"had_liked":false,"id":175455,"user_name":"Lywane","can_delete":false,"product_type":"c1","uid":1446512,"ip_address":"","ucode":"2B0027AA069CE9","user_header":"https://static001.geekbang.org/account/avatar/00/16/12/70/10faf04b.jpg","comment_is_top":false,"comment_ctime":1580724161,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580724161","product_id":100020801,"comment_content":"在 k 索引树上找到 k=3 的记录，取得 ID = 300；再到 ID 索引树查到 ID=300 对应的 R3；在 k 索引树取下一个值 k=5，取得 ID=500；再回到 ID 索引树查到 ID=500 对应的 R4；在 k 索引树取下一个值 k=6，不满足条件，循环结束。","like_count":0},{"had_liked":false,"id":175334,"user_name":"mgs2002","can_delete":false,"product_type":"c1","uid":1812970,"ip_address":"","ucode":"F5931108BD509B","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a9/ea/5bfce6c5.jpg","comment_is_top":false,"comment_ctime":1580656729,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580656729","product_id":100020801,"comment_content":"简单总结<br>1. 覆盖索引可以减少回表次数，提高搜索效率。例子:select id from t where k=1（其中id为主键，k为普通索引），这个SQL执行不需要回表，因为索引k里面保存了主键id的值，所以不需要去主键索引里面查询。<br>2. 最左匹配原则。比如表t里面有（a,b,c）联合索引，使用where a=? &#47;where a=? and b=? &#47;where a=? and b=? and c=? 都可以使用索引，查询条件里面没有a的话则不能使用索引，所以如果需要单独查询b或者c的数据需要单独建立索引。<br>3. 索引下推。表t有（a,b）联合索引，现在有select * from t where a like &#39;a%&#39; and b &gt; 10的查询条件，5.6前的版本会通过a索引开始一个个回表查询符合条件的数据，5.6后的版本则会先过滤掉b&lt;=10的数据，在剩余数据里面通过a索引回表查询，这样减少了回表的次数。","like_count":0},{"had_liked":false,"id":175020,"user_name":"陈大头","can_delete":false,"product_type":"c1","uid":1335400,"ip_address":"","ucode":"F1CA8837BF1E5C","user_header":"https://static001.geekbang.org/account/avatar/00/14/60/68/626cb455.jpg","comment_is_top":false,"comment_ctime":1580528388,"is_pvip":false,"replies":[{"id":"67992","content":"对的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1580542999,"ip_address":"","comment_id":175020,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1580528388","product_id":100020801,"comment_content":"覆盖索引的意思就是说，如果我建了一个姓名和电话的索引，那我根据姓名查电话，就直接定到这个索引查电话，也不需要回表","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482598,"discussion_content":"对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580542999,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":174504,"user_name":"Ping","can_delete":false,"product_type":"c1","uid":1812754,"ip_address":"","ucode":"FC4743D8FEF61C","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a9/12/e041e7b2.jpg","comment_is_top":false,"comment_ctime":1580254847,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1580254847","product_id":100020801,"comment_content":"请问下一个SQL的语句执行的时候，要看这个查找的流程怎么写，是加—debug 吗？","like_count":0,"discussions":[{"author":{"id":1442605,"avatar":"https://static001.geekbang.org/account/avatar/00/16/03/2d/404627dc.jpg","nickname":"Anryg Zhun","note":"","ucode":"76DF8560BA9D14","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":183245,"discussion_content":"加explain","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582470330,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":174497,"user_name":"Geek_8c0925","can_delete":false,"product_type":"c1","uid":1504398,"ip_address":"","ucode":"C2A0EC69745F5C","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI173mkvqqWboUNPswZIma3WC3o6smElHtbZWytTB39kqkUQmvGnm3BQ7KnWUc23LJ1V7iaQ0UUoXQ/132","comment_is_top":false,"comment_ctime":1580244767,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580244767","product_id":100020801,"comment_content":"老师 请问您 对于静态表 索引应该在创建表时创建还是插入数据后创建？动态表是否有不同的处理？","like_count":0},{"had_liked":false,"id":174294,"user_name":"起而行","can_delete":false,"product_type":"c1","uid":1131399,"ip_address":"","ucode":"4F116B0B740776","user_header":"https://static001.geekbang.org/account/avatar/00/11/43/87/7604d7a4.jpg","comment_is_top":false,"comment_ctime":1580125673,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1580125673","product_id":100020801,"comment_content":"这样做对，因为可以用key ca直接找到数据，不需要回表。索引是空间与时间的平衡，通过左缀索引，把索引的每一个部分离散看待，增加了很多效率","like_count":0},{"had_liked":false,"id":174042,"user_name":"Zhaoyang","can_delete":false,"product_type":"c1","uid":1037190,"ip_address":"","ucode":"131D83AC2566D2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d3/86/b5d72c87.jpg","comment_is_top":false,"comment_ctime":1579921521,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1579921521","product_id":100020801,"comment_content":"假设abc上面有索引：<br>where a = 2 and b &gt; 1 and c = 1;<br>在c上面应该就是没有命中索引，然后b在范围查询的时候，满足条件，然后在回表的过程中，再根据索引下沉去判定c是否满足条件，所以c就是没有命中索引吧？","like_count":0,"discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":238106,"discussion_content":"因为b是范围查询，所以最左前缀只能匹配到(a,b)，索引下推是在节点查找过程中已经进行了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587211292,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172957,"user_name":"Geek_382ccc","can_delete":false,"product_type":"c1","uid":1520267,"ip_address":"","ucode":"3E40727B8772AA","user_header":"","comment_is_top":false,"comment_ctime":1579394823,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579394823","product_id":100020801,"comment_content":"只有我没明白为什么用身份证和姓名这个联合索引能实现根据身份证号码查找地址？？","like_count":0},{"had_liked":false,"id":172382,"user_name":"shijiazo","can_delete":false,"product_type":"c1","uid":1107690,"ip_address":"","ucode":"E2F32581829F11","user_header":"https://static001.geekbang.org/account/avatar/00/10/e6/ea/cf8ffc85.jpg","comment_is_top":false,"comment_ctime":1579165076,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1579165076","product_id":100020801,"comment_content":"老师，我用5.7.18版本试验了一下（name,age)联合索引，创建文中给的市民表tuser，用explain看了两次：<br>（1）此时表中无记录：<br>mysql&gt; explain select * from tuser where name like &#39;张%&#39; and age = 10 and ismale=1;<br>| id | select_type | table | partitions | type  | possible_keys | key      | key_len | ref  | rows | filtered | Extra                              |<br>|  1 | SIMPLE      | tuser | NULL       | range | name_age      | name_age | 104     | NULL |    1 |   100.00 | Using index condition; Using where |<br><br>（2）在表中按图2插入了6行记录：<br>insert into tuser values (1,&#39;id1&#39;,&#39;李四&#39;,20,1),(2,&#39;id2&#39;,&#39;王五&#39;,10,1),(3,&#39;id3&#39;,&#39;张六&#39;,30,1),(4,&#39;id4&#39;,&#39;张三&#39;,10,1),(5,&#39;id5&#39;,&#39;张三&#39;,10,1),(6,&#39;id6&#39;,&#39;张三&#39;,20,1);<br>再次执行explain：<br><br>mysql&gt; explain select * from tuser where name like &#39;张%&#39; and age = 10 and ismale=1;<br>| id | select_type | table | partitions | type | possible_keys | key  | key_len | ref  | rows | filtered | Extra       |<br>|  1 | SIMPLE      | tuser | NULL       | ALL  | name_age      | NULL | NULL    | NULL |    6 |    16.67 | Using where |<br><br><br>第一次无记录，显示能使用联合索引name_age，也能使用索引下推Using index condition。<br>但是第二次真正有数据时却走了全表扫描，联合索引失效。<br><br>我的理解是&#39;张%&#39;的区分度不高，MySQL就自动走了全表扫描。<br><br>为了验证这个想法，我又执行了如下语句：<br>mysql&gt; explain select * from tuser where name like &#39;王%&#39; and age = 10 and ismale=1;<br>| id | select_type | table | partitions | type  | possible_keys | key      | key_len | ref  | rows | filtered | Extra                              |<br>|  1 | SIMPLE      | tuser | NULL       | range | name_age      | name_age | 104     | NULL |    1 |    16.67 | Using index condition; Using where |<br><br>mysql&gt; explain select * from tuser where name like &#39;张六%&#39; and age = 10 and ismale=1;<br>| id | select_type | table | partitions | type  | possible_keys | key      | key_len | ref  | rows | filtered | Extra                              |<br>|  1 | SIMPLE      | tuser | NULL       | range | name_age      | name_age | 104     | NULL |    1 |    16.67 | Using index condition; Using where |<br><br>可以看到别的值是可以走索引的。<br><br>完以后我drop table tuser，再建表，再一条一条插入记录，发现记录里两个“张三”名字时还可以使用联合索引，有三个“张三”名字时就走全表扫描了。<br><br>所以老师图中给的例子是不太恰当的哈~<br>","like_count":0,"discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":238299,"discussion_content":"后边有一节会讲到选择索引的原理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587217898,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172279,"user_name":"SuperSnow","can_delete":false,"product_type":"c1","uid":1065351,"ip_address":"","ucode":"84C89AA8083E6A","user_header":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","comment_is_top":false,"comment_ctime":1579143970,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1579143970","product_id":100020801,"comment_content":"老师，有一个问题请教一下。我的每张表中都有一个createtime和isDelete，对于查询时我想了一下，业务的主要场景是获取isDelete=0，根据创建时间降序的情况。如果我建立（isdelete,createtime)的索引，那就是isdelete=0 order by createtime，需要对createtime做索引下推，好处就是isdelete是0，1排序。如果反过来createtime,isdelete,那时间排序是有了，但是isdelete里面还混杂着等于1的数据。并不是很纯粹的在一个时间段里面都是有效数据。所以我建立的联合索引是（isdelete,createtime），您看如何？","like_count":0,"discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":238811,"discussion_content":"（isdelete,createtime)这个索引没问题，因为索引本身就是有序的，isdelete=0的情况下，createtime已经有序了；isdelete=1的情况下，createtime也是有序的。所以只要where条件包含isdelete就不会对createtime做额外排序。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587252636,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170784,"user_name":"寻找的人cs","can_delete":false,"product_type":"c1","uid":1293788,"ip_address":"","ucode":"CA12463D24A8E1","user_header":"https://static001.geekbang.org/account/avatar/00/13/bd/dc/1ea396d2.jpg","comment_is_top":false,"comment_ctime":1578715465,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578715465","product_id":100020801,"comment_content":"删除数据竟然只是采用标记的方式，为了提高删除的效率看来采用了空间换时间方式","like_count":0},{"had_liked":false,"id":169879,"user_name":"向往的生活","can_delete":false,"product_type":"c1","uid":1397298,"ip_address":"","ucode":"0E8DB45357820F","user_header":"https://static001.geekbang.org/account/avatar/00/15/52/32/bb570f48.jpg","comment_is_top":false,"comment_ctime":1578467688,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1578467688","product_id":100020801,"comment_content":"如何在索引树种找到第一个符合条件的索引数据呢","like_count":0,"discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":238567,"discussion_content":"从根节点开始查询","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587223466,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167365,"user_name":"行至半程","can_delete":false,"product_type":"c1","uid":1034182,"ip_address":"","ucode":"800F2D0C703B44","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c7/c6/2f47ffcf.jpg","comment_is_top":false,"comment_ctime":1577776255,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1577776255","product_id":100020801,"comment_content":"环境：5.6.17<br>select * from T where k between 3 and 5;<br>select ID from T where k between 3 and 5;<br>很奇怪这两条的explain分析啊，select *的type为range，索引竟然是下推Using index condition。rows为2。select ID的type为index，索引是Using where; Using index，rows是6，也就是全表扫描啊。为什么呢？<br>","like_count":0,"discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":238869,"discussion_content":"我用5.7的没复现出来，两个执行结果一样：\nid\tselect_type\ttable\tpartitions\ttype\tpossible_keys\tkey\tkey_len\tref\trows\tfiltered\tExtra\n1\tSIMPLE\tt\t\\N\trange\tk\tk\t5\t\\N\t3\t100.00\tUsing where; Using index","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587258018,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133459,"discussion_content":"不会的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578965796,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167277,"user_name":"William","can_delete":false,"product_type":"c1","uid":1346215,"ip_address":"","ucode":"55F5D9DEE485B1","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","comment_is_top":false,"comment_ctime":1577755833,"is_pvip":true,"discussion_count":2,"race_medal":0,"score":"1577755833","product_id":100020801,"comment_content":"提问： <br>   老师，请教个问题.<br>InnoDB 在 (name,age) 索引内部就判断了 age 是否等于 10，对于不等于 10 的记录，直接判断并跳过。<br><br>   对于这样的是先走的最左前缀剔除不符合的数据，再下推；还是先下推然后再最左前缀？ <br>我看图的意思是先下推？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133460,"discussion_content":"是先走最左侧，然后再下推，这样可以减少回表次数。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578965846,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1346215,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","nickname":"William","note":"","ucode":"55F5D9DEE485B1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133881,"discussion_content":"多谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578998370,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":133460,"ip_address":""},"score":133881,"extra":""}]}]},{"had_liked":false,"id":165649,"user_name":"__fulin","can_delete":false,"product_type":"c1","uid":1037476,"ip_address":"","ucode":"DD396CEEB6082A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d4/a4/202cef33.jpg","comment_is_top":false,"comment_ctime":1577276703,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1577276703","product_id":100020801,"comment_content":"老师，您好！最左前缀原则是如何提高索引查询效率的，可以展开讲一下吗？我的疑惑是虽然利用最左前缀原则，可以利用索引顺序尽可能多的利用更多的索引查询数据，但是在MySQL 5.6 之前，当第一个索引字段匹配之后，数据库会根据拿到的主键信息去主键索引树中查询该行数据，再得到该数据行后，这里如何利用第二个索引去查询数据呢？","like_count":0,"discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":238617,"discussion_content":"组合索引满足最左前缀的话，是利用整个索引定位数据的，怎么还有第一个索引字段、第二个索引字段的说法？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587224102,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":165313,"user_name":"witluo","can_delete":false,"product_type":"c1","uid":1443117,"ip_address":"","ucode":"3D9608C3DDDD95","user_header":"","comment_is_top":false,"comment_ctime":1577199054,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577199054","product_id":100020801,"comment_content":" alter table T engine=InnoDB 这个操作是什么原理呢？","like_count":0},{"had_liked":false,"id":163845,"user_name":"jonas","can_delete":false,"product_type":"c1","uid":1370187,"ip_address":"","ucode":"6CE3A4A731B2CE","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqk4fmmbrUuImjrGt8loGEdsHEMeL7bfxwmyPngJSzes2fJ7GXtjVSph4xSDicwxFBbV0be8okx6zg/132","comment_is_top":false,"comment_ctime":1576810803,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1576810803","product_id":100020801,"comment_content":"老师我有个问题, 对于一个数据不经常变更的小表, 里面需要查询的字段需要加二级索引么? <br>如果不需要, 那么数据量大概在多少的时候需要加呢?","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133463,"discussion_content":"不经常变更的小表，如果经常查询，并且查询场景固定，当然要加索引，而且尽量是覆盖索引，以减少回表。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578965947,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163069,"user_name":"绿里奇迹","can_delete":false,"product_type":"c1","uid":1173341,"ip_address":"","ucode":"E1E7BC3AAEC86A","user_header":"https://static001.geekbang.org/account/avatar/00/11/e7/5d/a99d32d5.jpg","comment_is_top":false,"comment_ctime":1576652129,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1576652129","product_id":100020801,"comment_content":"请问老师在mysql中如果想要使用多个索引，是不是只有建立联合索引？如果建立多个单字段索引将只会使用一个索引？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133467,"discussion_content":"是的，一个联合索引至少可以满足覆盖，最左前缀两种场景，能一棵树满足的，为啥要搞两棵，所以还是要看你的业务场景。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578966042,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":162918,"user_name":"Skysper","can_delete":false,"product_type":"c1","uid":1058800,"ip_address":"","ucode":"164B3CAF81A7C5","user_header":"https://static001.geekbang.org/account/avatar/00/10/27/f0/06ecce19.jpg","comment_is_top":false,"comment_ctime":1576631146,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1576631146","product_id":100020801,"comment_content":"比如上面这个市民表的情况，name 字段是比 age 字段大的 ，那我就建议你创建一个（name,age) 的联合索引和一个 (age) 的单字段索引。这里没明白，字段大小和索引字段顺序有什么关系","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133477,"discussion_content":"你(name,age)或（age,name)都能满足你查询的条件，但是如果你要建立(age,name)，你又经常用name搜索，那(age,name)只能满足age=**and name=**这种场景，不满足单独name=**的情况，那你是不是要还要建立一个name索引。此时，name是varchar类型,age是tinyint类型，一比较，我们肯定还两坏取其轻，建立age这种情况最合适。因为name你怎么也得建立索引。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578966295,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":161844,"user_name":"温故而知新可以为师矣","can_delete":false,"product_type":"c1","uid":1453053,"ip_address":"","ucode":"FADCDFA9F9E5E8","user_header":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","comment_is_top":false,"comment_ctime":1576376997,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1576376997","product_id":100020801,"comment_content":"老师，有个问题，可重复读会建立视图，但是对于建立的是&quot;什么样的视图，为什么就可以不受其他事务修改影响，怎么做到的，等等&quot;一直有疑问，所以希望了解视图的实现原理以及实现方法，有相关文旦可以参考吗？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133482,"discussion_content":"相当于你一条数据，两个人都操作，你操作你的，我操作我的，在操作的过程中，这个过程中就相当于事务，你们两个是可以并行的，反正互相不影响，就是隔离开了。你把视图理解成我开始拿到数据了，别人就不会再对我有影响了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578966453,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":161554,"user_name":"刺猬","can_delete":false,"product_type":"c1","uid":1108297,"ip_address":"","ucode":"60C3E38F4F03CC","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/49/29072f9e.jpg","comment_is_top":false,"comment_ctime":1576228740,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1576228740","product_id":100020801,"comment_content":"老师你好，文章基本上看懂了，但是有两个问题，请老师帮忙解答下：<br>1.  InnoDB 这种引擎的索引是B+树，在机械硬盘上存储是以页的方式存储的，我想问下在固态硬盘上是怎么存储的？和机械硬盘有什么区别？<br>2.  索引的最左前缀原则到底是构建索引时存储全部字段，查询时根据最左前缀匹配，然后进行对比找到结果就返回（比如正文身份证+地址的例子）还是构建索引时只取字符串的最左几个字符，查询是根据最左前缀匹配规则找到对应的主键回表进行查询？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133488,"discussion_content":"2、这个就看你查询指标是否只为联合索引的最左字段了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578966880,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133486,"discussion_content":"1、虽然ssd比机械的快，因为ssd是基于半导体存储，而HHD是基于电磁存储。前者不需要有磁头移动寻址，而后者需要。虽然在查询数据上前者比后者快，但是谁还嫌好中更好呢，所以B+可以以更矮层来减少I/O，那就是固态在软硬两个层面上都是优的，那不更好吗。所以SSD也是以B+策略的模型，个人理解啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578966750,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160521,"user_name":"李敬","can_delete":false,"product_type":"c1","uid":1637800,"ip_address":"","ucode":"E92D28999CE29A","user_header":"https://static001.geekbang.org/account/avatar/00/18/fd/a8/ea933cac.jpg","comment_is_top":false,"comment_ctime":1575968860,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1575968860","product_id":100020801,"comment_content":"老师好，对于例子中的表T，分析下面三个查询的性能差异：<br>（1）select * from T where k=3<br>（2）select id from T where k=3<br>  (3)  select name from T where k=3<br>查询（2）效率最高，（3）次之；（1）最差；<br>原因：第一：查询（2）可使用覆盖索引，不需要回表；查询（1）（3）需要回表；<br>二、查询（1）相比后两个语句，需要读和拷贝更多列到 server ,还要发送更多列到客户端。<br>所以 ，查询（2）效率最高，（3）次之；（1）最差；<br>请问老师这个分析是否正确？<br><br>","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133491,"discussion_content":"个人理解，是的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578966912,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159353,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1575604746,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575604746","product_id":100020801,"comment_content":"老师，请教一下，MySQL索引用B+树，但MongoDB为何用B树呢","like_count":0},{"had_liked":false,"id":159152,"user_name":"奋斗的小白鼠","can_delete":false,"product_type":"c1","uid":1743483,"ip_address":"","ucode":"752BB901FFB7CE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/icHicAP9M4M4DIjAvlj5FDdFxIeA0pR3J15QdvVjXQXbznwunDN8OvrYqnsFchtBTNrZCCfGTE2RpPzIxjkvFAKg/132","comment_is_top":false,"comment_ctime":1575548646,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1575548646","product_id":100020801,"comment_content":"select order_no from order where status =1 order by create_time desc<br>老师，对于这样的语句，假设只有status有索引，是把符合条件的数据分条读取到内存还是一次性读取到内存然后再进行filesort啊？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133501,"discussion_content":"建议建立一个联合索引(status,create_time)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578967437,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159066,"user_name":" 臣馟飞扬","can_delete":false,"product_type":"c1","uid":1116188,"ip_address":"","ucode":"F2F882B7678055","user_header":"https://static001.geekbang.org/account/avatar/00/11/08/1c/ef15e661.jpg","comment_is_top":false,"comment_ctime":1575530040,"is_pvip":false,"replies":[{"id":"60847","content":"试试😆","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1575533276,"ip_address":"","comment_id":159066,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1575530040","product_id":100020801,"comment_content":"<br>CREATE TABLE `tuser` (<br>  `id` int(11) NOT NULL,<br>  `id_card` varchar(32) DEFAULT NULL,<br>  `name` varchar(32) DEFAULT NULL,<br>  `age` int(11) DEFAULT NULL,<br>  `ismale` tinyint(1) DEFAULT NULL,<br>  PRIMARY KEY (`id`),<br>  KEY `id_card` (`id_card`),<br>  KEY `name_age` (`name`,`age`)<br>) ENGINE=InnoDB<br>这个里面KEY后面是创建索引的吗？这个是什么语法","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476935,"discussion_content":"试试😆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575533276,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":158580,"user_name":"Sic Pavis","can_delete":false,"product_type":"c1","uid":1106088,"ip_address":"","ucode":"48B5F0118347C8","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/a8/4e739cf6.jpg","comment_is_top":false,"comment_ctime":1575420726,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1575420726","product_id":100020801,"comment_content":" select * from T where k between 3 and 5<br>这个语句我理解是我找到3和5对应的主键位置，然后顺序把两者之间的主键找出来就行了，不用再找5的下一个节点，也就是只要回表两次。<br><br>不过转念一想这个字段不是唯一索引，5可能是有重复的，所以要再往后找，3不往前找一个的原因是刚刚好在一个右节点的开头吗？如果不在是不是也要往前找检测一下3是否有重复的？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133502,"discussion_content":"它肯定是定位在多个3的最左侧的那个地址。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578967496,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":157556,"user_name":"James","can_delete":false,"product_type":"c1","uid":1134861,"ip_address":"","ucode":"48B0F2A334D1C1","user_header":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","comment_is_top":false,"comment_ctime":1575192905,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1575192905","product_id":100020801,"comment_content":"请问老师,关于索引下推优化,是通过什么可以看出sql确实使用了索引下推优化了.","like_count":0,"discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":238637,"discussion_content":"explain的Extra显示Using index Conditon","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587224406,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133560,"discussion_content":"这个你得研究Innodb引擎的源码了吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578971846,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156639,"user_name":"谭龙飞","can_delete":false,"product_type":"c1","uid":1248584,"ip_address":"","ucode":"89B71FEBB5E36D","user_header":"https://static001.geekbang.org/account/avatar/00/13/0d/48/36d70848.jpg","comment_is_top":false,"comment_ctime":1574928605,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1574928605","product_id":100020801,"comment_content":"老师您好，我想问下文中提到：“如果你要查的是所有名字第一个字是“张”的人，你的 SQL 语句的条件是&quot;where name like ‘张 %’&quot;。这时，你也能够用上这个索引，查找到第一个符合条件的记录是 ID3，然后向后遍历，直到不满足条件为止”，我有类似操作过，但是explain查看模糊查询语句的执行计划，key的值为空，type的值为ALL全表查询，所以是不是没有用上索引吧？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133565,"discussion_content":"你的普通索引都为空了，那就说明没有啊。索引尽量不要为null","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578971935,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":81147,"discussion_content":"具体上下文呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576227076,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156173,"user_name":"就只是想安静的写写代码","can_delete":false,"product_type":"c1","uid":1320872,"ip_address":"","ucode":"90329F2EBE5F9A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/z7Nba05uObukg7OpZcnQicDdsxxBttV7MPGicetqzYkibsu06nXxPFLB5ia9gjicsP8oticnq1RIammVj0nJCic5Q9UpQ/132","comment_is_top":false,"comment_ctime":1574828447,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1574828447","product_id":100020801,"comment_content":"就文中例子，我有一个疑问：<br>假如我的建表语句是这样的：<br>CREATE TABLE `geek` (<br>\t`a` INT (11) NOT NULL,<br>\t`b` INT (11) NOT NULL,<br>\t`c` INT (11) NOT NULL,<br>\t`d` INT (11) NOT NULL,<br>\tPRIMARY KEY (`a`, `b`),<br>\tKEY `c` (`c`),<br>\tKEY `cb` (`c`, `b`)<br>) ENGINE = INNODB;<br><br>EXPLAIN select * from geek where c=3 AND b=2;<br>EXPLAIN select * from geek where c=3;<br><br>这两条查询语句explain出来的结果按结果应该是一致的，但是结果显示却是截然相反：<br>`id`, `select_type`, `table`, `type`, `possible_keys`, `key`, `key_len`, `ref`, `rows`, `Extra`<br>语句1：<br>&#39;1&#39;, &#39;SIMPLE&#39;, &#39;geek&#39;, &#39;ref&#39;, &#39;c,cb&#39;, &#39;cb&#39;, &#39;8&#39;, &#39;const,const&#39;, &#39;2&#39;, NULL<br>语句2：<br>&#39;1&#39;, &#39;SIMPLE&#39;, &#39;geek&#39;, &#39;ALL&#39;, &#39;c,cb&#39;, NULL, NULL, NULL, &#39;5&#39;, &#39;Using where&#39;<br><br>请问老师这个怎么解释呢？万分感谢<br><br>","like_count":0,"discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":238892,"discussion_content":"我用的5.7，结果跟你的不一样：两个查询都走了c索引，第一条语句使用了索引下推，第二条的Extra为NULL","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587258666,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155752,"user_name":"希文","can_delete":false,"product_type":"c1","uid":1486801,"ip_address":"","ucode":"F94235FAE72A5D","user_header":"https://static001.geekbang.org/account/avatar/00/16/af/d1/7bed960f.jpg","comment_is_top":false,"comment_ctime":1574748556,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1574748556","product_id":100020801,"comment_content":"外键本身是索引吗？如果不是必须要添加索引吗？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133567,"discussion_content":"外键也是索引。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578971998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":152512,"user_name":"benny","can_delete":false,"product_type":"c1","uid":1123043,"ip_address":"","ucode":"E2F30AF0C808D9","user_header":"https://static001.geekbang.org/account/avatar/00/11/22/e3/510b69f9.jpg","comment_is_top":false,"comment_ctime":1574038339,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1574038339","product_id":100020801,"comment_content":"看见某位同学的总结：索引下推：like &#39;hello%’and age &gt;10 检索，MySQL5.6版本之前，会对匹配的数据进行回表查询。5.6版本后，会先过滤掉age&lt;10的数据，再进行回表查询，减少回表率，提升检索速度 。请问老师 这种 age&lt;10 也可以索引下推吗？如果是 可以讲解一下内部实现原理吗？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133568,"discussion_content":"也可以下推。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578972075,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151260,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1573692368,"is_pvip":false,"replies":[{"id":"58212","content":"一般不建议，不过特殊场景下还是有人用的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1573698539,"ip_address":"","comment_id":151260,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573692368","product_id":100020801,"comment_content":"老师，对于文末的例子，在实际中，极少出现使用两字段联合做主键吧","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474418,"discussion_content":"一般不建议，不过特殊场景下还是有人用的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573698539,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151248,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1573691546,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573691546","product_id":100020801,"comment_content":"索引前缀匹配包含两个概念：<br>1. 对多个字段，支持前缀匹配<br>2. 对一个字段，也支持前缀匹配，如name like &#39;xxx%&#39;","like_count":0},{"had_liked":false,"id":150874,"user_name":"早早凡","can_delete":false,"product_type":"c1","uid":1743060,"ip_address":"","ucode":"E70B0306637482","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er8xHGabhfnPnK7gN3hVJ0n3wia5qIaay7IOQaGJ4ia0kB1CKywjbJNeGjM7DKexk6TZl88f6um4pqw/132","comment_is_top":false,"comment_ctime":1573619387,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1573619387","product_id":100020801,"comment_content":"为什么不用index而用key创建索引？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133572,"discussion_content":"因为指定Key，就默认创建了index而矣。key与index是一回事。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578972174,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146575,"user_name":"ZSquirrel","can_delete":false,"product_type":"c1","uid":1115201,"ip_address":"","ucode":"057FFB2C391E8B","user_header":"https://static001.geekbang.org/account/avatar/00/11/04/41/456500c0.jpg","comment_is_top":false,"comment_ctime":1572575589,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1572575589","product_id":100020801,"comment_content":"老师，如果想研究Explain里面各个字段代表什么意思，尤其是Extra等信息表达的意思不是很清楚。网上的博客看了也是一知半解。可以推荐这方面的书籍吗","like_count":0,"discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":238893,"discussion_content":"官方文档写的很详细","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587258794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146454,"user_name":"William","can_delete":false,"product_type":"c1","uid":1346215,"ip_address":"","ucode":"55F5D9DEE485B1","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","comment_is_top":false,"comment_ctime":1572527377,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1572527377","product_id":100020801,"comment_content":"针对联合索引问题:  <br><br>踩过坑：有人问我联合索引的技巧，回答的不是很好<br>总结：<br>1、覆盖索引：如果查询条件使用的是普通索引（或是联合索引的最左原则字段），查询结果是联合索引的字段或是主键，不用回表操作，直接返回结果，减少IO磁盘读写读取正行数据<br>2、最左前缀：联合索引的最左 N 个字段，也可以是字符串索引的最左 M 个字符<br>3、联合索引：根据创建联合索引的顺序，以最左原则进行where检索，比如（age，name）以age=1 或 age= 1 and name=‘张三’可以使用索引，单以name=‘张三’ 不会使用索引，考虑到存储空间的问题，还请根据业务需求，将查找频繁的数据进行靠左创建索引。<br>4、索引下推：like &#39;hello%’and age &gt;10 检索，MySQL5.6版本之前，会对匹配的数据进行回表查询。<br>5.6版本后，会先过滤掉age&lt;10的数据，再进行回表查询，减少回表率，提升检索速度<br><br>针对第3个::::单以name=‘张三’ 不会使用索引 这个我也测试走索引了呢.<br><br>建表语句:<br>     CREATE TABLE `city` (<br>  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,<br>  `name` varchar(25) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,<br>  `age` int(11) DEFAULT NULL,<br>  PRIMARY KEY (`id`),<br>  KEY `age_name` (`age`,`name`)<br>) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=latin1<br><br><br>数据<br>1 张三 13<br>3 李四 13<br><br>校验:<br>explain<br>select * from city where age = 13 ;<br><br>使用索引:key age_name<br><br><br><br>explain<br>select * from city where name =&#39;李四&#39;<br><br>使用索引: age_name<br><br>求教???<br> ","like_count":0,"discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":238949,"discussion_content":"我理解的是因为name字段是索引字段，优化器认为遍历(age,name)索引树比全表扫描要快。所以这里显示使用了age_name索引，只是表示遍历了索引树而不是全表扫描，在性能上和最左前缀匹配还是有差距的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587262281,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146019,"user_name":"不似旧日","can_delete":false,"product_type":"c1","uid":1161271,"ip_address":"","ucode":"DF4C5E3AB9570C","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/37/98991aeb.jpg","comment_is_top":false,"comment_ctime":1572420575,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572420575","product_id":100020801,"comment_content":"满满的干货， 想要做笔记都没得做，挤不出水了。","like_count":0},{"had_liked":false,"id":146016,"user_name":"不似旧日","can_delete":false,"product_type":"c1","uid":1161271,"ip_address":"","ucode":"DF4C5E3AB9570C","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/37/98991aeb.jpg","comment_is_top":false,"comment_ctime":1572419898,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572419898","product_id":100020801,"comment_content":"select name,age  from tuser where age = 18   没用到索引<br><br>select name,age  from tuser where name = &quot;迪丽热巴&quot;  用到了索引<br><br>select name,age  from tuser where name = &quot;迪丽热巴&quot;  and age  = 18 name用到了索引,age全表扫描没用到索引<br><br>联合索引主要是为了在索引中多存储一些字段来解决回表的。老师我这种想法对么？ ","like_count":0},{"had_liked":false,"id":145665,"user_name":"Yoneda","can_delete":false,"product_type":"c1","uid":1117541,"ip_address":"","ucode":"2C0823F2C31EB6","user_header":"https://static001.geekbang.org/account/avatar/00/11/0d/65/a81eb6de.jpg","comment_is_top":false,"comment_ctime":1572339445,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1572339445","product_id":100020801,"comment_content":"我看网上的资料说「最左前缀匹配，为啥匹配到第一个范围查询后，其后的索引都不会用了」。<br>1. 这个说法在 ICP 下还成立吗？<br>2. 为啥会这么设计呢？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133575,"discussion_content":"要用啊，比如like &#39;张%&#39; and age=10","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578972342,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143356,"user_name":"125","can_delete":false,"product_type":"c1","uid":1672165,"ip_address":"","ucode":"8F831D59FD6C2C","user_header":"https://static001.geekbang.org/account/avatar/00/19/83/e5/094dccf8.jpg","comment_is_top":false,"comment_ctime":1571674713,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1571674713","product_id":100020801,"comment_content":"老师如果创建一个没有索引的表，会有一个默认索引吗？查询数据是怎么个流程？","like_count":0,"discussions":[{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":81152,"discussion_content":"主键索引啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576227410,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142758,"user_name":"幼儿编程教学","can_delete":false,"product_type":"c1","uid":1237199,"ip_address":"","ucode":"F13F3150E6CAE9","user_header":"https://static001.geekbang.org/account/avatar/00/12/e0/cf/43f201f2.jpg","comment_is_top":false,"comment_ctime":1571493958,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1571493958","product_id":100020801,"comment_content":"老师，where条件中，in很多数据，会走索引。那or会走索引么？还是遍历or的每个条件去走n遍索引?不走的话，是不是还是用in好，不用or?","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133642,"discussion_content":"in 或 or都需要走n遍索引吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578978059,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142443,"user_name":"极客-绝影","can_delete":false,"product_type":"c1","uid":1243369,"ip_address":"","ucode":"D302CE68123E74","user_header":"https://static001.geekbang.org/account/avatar/00/12/f8/e9/f16a536b.jpg","comment_is_top":false,"comment_ctime":1571369232,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1571369232","product_id":100020801,"comment_content":"老师，我思考有个问题，在有多个更新或插入语句的事务里面，部分更新是成功的，其中一条更新失败了，导致了事务回滚，但是其他更新成功表的主键ID是增长的，只是最后数据没有提交入库，那么这种情况根据老师讲的，会造成主键索引中间产生不连续性，这样会影响查询的性能么，有没有什么设置或者办法去解决这种情况？<br>我自己想的是，MySQL有没有参数设置，事务提交之前数据是不做更新的或者主键不增长，等所有语句执行通过再进行更新。","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133646,"discussion_content":"主键如何是自增趋势的，应该也可以看成是连续的吧。个人理解哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578978137,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141960,"user_name":"乘风","can_delete":false,"product_type":"c1","uid":1115724,"ip_address":"","ucode":"0420C5535DACB7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLwSoTjHPX5tm4whBSfoZLX6toZxrZGUaLABQywKNf4MDc9toK3QSV7Z99ATcGicFCysoleQ5ISzmw/132","comment_is_top":false,"comment_ctime":1571274470,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571274470","product_id":100020801,"comment_content":"老师,麻烦问下:在看深入innoDB中,里面提到过,在数据页中定位数据是先通过二叉法 定位Page directory中槽位置,然后再遍历槽中记录,但并没详细讲解槽的内部结构,如果是按照二叉法,那意味着每个槽按照槽中记录键最大值排序构成一颗二叉树,我这样理解对吗?","like_count":0},{"had_liked":false,"id":141740,"user_name":"沐","can_delete":false,"product_type":"c1","uid":1326537,"ip_address":"","ucode":"678F6A0C778CDD","user_header":"https://static001.geekbang.org/account/avatar/00/14/3d/c9/a1e6a307.jpg","comment_is_top":false,"comment_ctime":1571217014,"is_pvip":false,"discussion_count":0,"race_medal":3,"score":"1571217014","product_id":100020801,"comment_content":"回到主键索引树搜索的过程，称之为回表。<br>覆盖索引：如果查询条件使用的是普通索引，查询结果是联合索引的字段或主键，索引已经覆盖了查询需求，不需要回表，称为覆盖索引。<br>最左前缀原则：当已经有(a,b)这个联合索引后，一般就不需要单独在a上建立索引了。如果通过调整顺序，可以少维护一个索引，那么这个顺序往往就是需要优先考虑的。<br>索引下推：在MySQL 5.6引入的索引下推优化，可以在索引遍历过程中，对索引中包含的字段先做判断，直接过滤掉不满足条件的记录，减少回表次数。","like_count":0},{"had_liked":false,"id":141295,"user_name":"小火箭","can_delete":false,"product_type":"c1","uid":1229033,"ip_address":"","ucode":"1DCD7C610A312F","user_header":"https://static001.geekbang.org/account/avatar/00/12/c0/e9/e9f8500b.jpg","comment_is_top":false,"comment_ctime":1571136811,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1571136811","product_id":100020801,"comment_content":"“但是，重建主键的过程不合理。不论是删除主键还是创建主键，都会将整个表重建。所以连着执行这两个语句的话，第一个语句就白做了。”<br>为何说第一个语句（重建二级索引）白做了呢？重建主键并不会修改主键的值，二级索引的叶子存的是主键的值","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133650,"discussion_content":"那个第一个语句，指的是drop主键索引那句，不是二级索引那部分。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578978253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140747,"user_name":"极客-绝影","can_delete":false,"product_type":"c1","uid":1243369,"ip_address":"","ucode":"D302CE68123E74","user_header":"https://static001.geekbang.org/account/avatar/00/12/f8/e9/f16a536b.jpg","comment_is_top":false,"comment_ctime":1571041171,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1571041171","product_id":100020801,"comment_content":"老师，开篇第一条SQL语句应该是  select * from T where k between 300  and 500;<br>这样吧，要不覆盖索引跟不覆盖语句是一样的，不存在回表，不晓得是不是我理解错了","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133651,"discussion_content":"没明白啥意思","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578978281,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140323,"user_name":"王飞","can_delete":false,"product_type":"c1","uid":1162152,"ip_address":"","ucode":"C7828091A3E353","user_header":"https://static001.geekbang.org/account/avatar/00/11/bb/a8/d7fea0f0.jpg","comment_is_top":false,"comment_ctime":1570877511,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570877511","product_id":100020801,"comment_content":"背景结构：<br>select count(id) from ditui_code_belong_relation  <br>结果：16100939<br>desc ditui_code_belong_relation(表只有id一个主键索引)<br>问题1：为何Cardinality不是表记录的总数呢，明明id是不重复的？<br>show index from ditui_code_belong_relation  <br>Cardinality  1502916<br>问题2：explain表明是全表扫描，可是为何rows不是全表的记录数1600w+<br>explain select * from ditui_code_belong_relation WHERE area_code = 1<br>id  select_type table                       type possible_keys  key  key_len  ref rows       Extra <br>1\t    SIMPLE\t ditui_code_belong_relation\t   ALL\t                                1502993    Using where<br>问题3：添加查询条件id&gt;0,明明所有记录都是id&gt;0的，为什么扫描行数就变成75w+了，而不是150w+?<br>explain select * from ditui_code_belong_relation WHERE area_code = 1 and id&gt;0<br>id  select_type table                       type     possible_keys  key      key_len  ref rows       Extra <br>1\t    SIMPLE\t ditui_code_belong_relation\t  range\t  PRIMARY       PRIMARY     8           751727    Using where<br>问题4：为什么按照id排序后，扫描行数就变成了100<br>explain select * from ditui_code_belong_relation WHERE area_code = 1 order by id desc<br>id  select_type table                       type     possible_keys  key      key_len  ref rows       Extra <br>1\t    SIMPLE\t ditui_code_belong_relation\t  index\t           PRIMARY           8          100    Using where","like_count":0},{"had_liked":false,"id":140270,"user_name":"王飞","can_delete":false,"product_type":"c1","uid":1162152,"ip_address":"","ucode":"C7828091A3E353","user_header":"https://static001.geekbang.org/account/avatar/00/11/bb/a8/d7fea0f0.jpg","comment_is_top":false,"comment_ctime":1570867767,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570867767","product_id":100020801,"comment_content":"1.session A 先启动，这时候会对表 t 加一个 MDL读锁<br>  Session B  启动，这时候会对表 t 加一个 MDL读锁<br>  Session C启动，这时候会需要对表 t 加一个 MDL写锁，所以阻塞<br>  Session D启动，，这时候会对表 t 加一个 MDL读锁<br>  导致库不能读写<br>  问题1：Session C没有拿到MDL写锁，阻塞，那么这个表是MDL读锁的呀，为啥Session D会阻塞呢<br>  问题2：MDL锁膨胀<br>            如果锁膨胀，就有问题。A,B还在查询，C如果膨胀，拿到MDL写锁了，改了结构，那么AB事务就是有问题的","like_count":0},{"had_liked":false,"id":140044,"user_name":"天空","can_delete":false,"product_type":"c1","uid":1447922,"ip_address":"","ucode":"BCAA50311B3C56","user_header":"https://static001.geekbang.org/account/avatar/00/16/17/f2/f95eb1af.jpg","comment_is_top":false,"comment_ctime":1570795280,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570795280","product_id":100020801,"comment_content":"老师你好，为什么唯一索引，在查库里不存在的数据时，会全表扫描呢？","like_count":0},{"had_liked":false,"id":139972,"user_name":"perry","can_delete":false,"product_type":"c1","uid":1061037,"ip_address":"","ucode":"05FBB698154457","user_header":"https://static001.geekbang.org/account/avatar/00/10/30/ad/38200a63.jpg","comment_is_top":false,"comment_ctime":1570777349,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1570777349","product_id":100020801,"comment_content":"老师你好， 请教一下，在你的回答中 这句话不理解“不论是删除主键还是创建主键，都会将整个表重建”？ 重建是指create table 吗？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133653,"discussion_content":"是创建主键，不是创建表。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578978374,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139813,"user_name":"Cookie","can_delete":false,"product_type":"c1","uid":1131809,"ip_address":"","ucode":"1BDBD05B7B48A8","user_header":"https://static001.geekbang.org/account/avatar/00/11/45/21/76abc583.jpg","comment_is_top":false,"comment_ctime":1570751250,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570751250","product_id":100020801,"comment_content":"老师您好，请问有 索引下推 的情况下 是不是就不存在联合索引在范围查询后的索引列失效的概念了?<br>现在有点迷糊，以前我看的资料和我试验的结果都是比如 where a=1 and b&gt;1 and c=1 此时只能用上a和b 而c就不走索引了<br>那在索引下推的情况下<br>1.where a=1 and b&gt;1 and c=2  5.6之前只能用上a和b 5.6之后则c也能用上?<br>2.where a=1 and b&gt;1 and c&gt;1 and d=3 这种情况呢？abcd都能用上吗？b是范围查询 c也是范围查询<br>3.where a=1 and b&lt;&gt;1 and c=1 and d=3 这种abcd都能用上？<br>4.where a like &#39;%张&#39; and b=1 这种a模糊查询%在前导致索引扫描，此时b能用上吗？","like_count":0},{"had_liked":false,"id":139606,"user_name":"王飞","can_delete":false,"product_type":"c1","uid":1162152,"ip_address":"","ucode":"C7828091A3E353","user_header":"https://static001.geekbang.org/account/avatar/00/11/bb/a8/d7fea0f0.jpg","comment_is_top":false,"comment_ctime":1570690012,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570690012","product_id":100020801,"comment_content":"1.执行一个查询语句，之后show processlist命令查看，总是出来两个记录<br>   一个query的<br>   一个sleep的<br>   请问老师，这个是为什么呢，那个sleep的线程是什么呢？<br>  <br>2. undo log分为：insert undo log 和\t    update undo log<br>\t    \t由于insert操作的记录，只是对本事务可见，其他事务不可见，所以undo log可以在事务提交后直接删除，而不需要purge操作。<br>\t\t\t\tdelete和update操作中产生的undo log。该undo log会被后续用于MVCC当中，因此不能提交的时候删除。提交后会放入undo log的链表，等待purge线程进行最后的删除。<br>    update语句实质是通过update原来的语句为可删除，insert新记录实现的，那么是不是说明undo log就只存在insert和delete两种格式<br>    而insert无需purge，那么需要purge的只有delete操作？<br>    <br>3. 如果查询的时候，内存已经存在id对应的行数据，还要回表主键索引树？还是直接取内存的值，不回表索引树？<br>4. select id from t where b=1，b上有索引，按理说无需回表，直接覆盖索引即可返回。可是为何explain的rows=1？","like_count":0},{"had_liked":false,"id":139519,"user_name":"民工597","can_delete":false,"product_type":"c1","uid":1529858,"ip_address":"","ucode":"DB6857E21E9318","user_header":"https://static001.geekbang.org/account/avatar/00/17/58/02/2b7ccf09.jpg","comment_is_top":false,"comment_ctime":1570671358,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1570671358","product_id":100020801,"comment_content":"老师，索引下推的时候，是不是也会按照主键做排序？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133654,"discussion_content":"应该不会，另外为啥要按照主键做排序呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578978429,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138594,"user_name":"happiness","can_delete":false,"product_type":"c1","uid":1026587,"ip_address":"","ucode":"C5F25D57C7A1DC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/aa/1b/b43c8519.jpg","comment_is_top":false,"comment_ctime":1570354086,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1570354086","product_id":100020801,"comment_content":"因为是select * 操作还是存在回表的问题，这时联合索引的作用就无意义了。所以不需要联合索引，除非select * 改为select a, c from 和 select b, c from 才能起到覆盖索引的作用","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133655,"discussion_content":"当然有意义了，这样可以根据查询条件快速定位，同时实现排序啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578978496,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135660,"user_name":"coye","can_delete":false,"product_type":"c1","uid":1592261,"ip_address":"","ucode":"512F4A2F4DC3DF","user_header":"https://static001.geekbang.org/account/avatar/00/18/4b/c5/3c912220.jpg","comment_is_top":false,"comment_ctime":1569236904,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1569236904","product_id":100020801,"comment_content":"老师，若是一个表有几十万条记录，其中有一列是 status ( 枚举)，一个列是 expiretime , 现在有个查找是 status = xx and expiretime &gt; now() order by expiretime desc limit 1. 现在问题是 staus一个值比如说1是很多条记录，一个值比如说2非常少记录， 怎么建index？ 试了建index (expiretime,status) ，但总的平均query time 25ms 并不理想， 原因应该是 status= 2  的值太少，而是用MySQL 版本不支持 desc , 老师，若是建index 的顺序反一下，就是 (status, expiretime ), 按你经验，会性能更好吗","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133656,"discussion_content":"会的，因为status会按照1，2排序，而expiretime在status基础上再进行排序，比你先通过时间筛出来，然后再下推status更好吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578978621,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135296,"user_name":"博博","can_delete":false,"product_type":"c1","uid":1490403,"ip_address":"","ucode":"79FF6249DFC047","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/GBU53SA3W8GNRAwZIicc3gTEc0nSvfPJw7iboAMicjicmP6egDcibib28DkUfTYOjMd31DIznmofdRZrpIXvmXvjV1PQ/132","comment_is_top":false,"comment_ctime":1569120181,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1569120181","product_id":100020801,"comment_content":"老师， 今天遇到一个问题，请教下。<br>有一个products表：<br>| products | CREATE TABLE `products` (<br>  `prod_id` int(11) NOT NULL,<br>  `prod_name` varchar(64) NOT NULL,<br>  `vend_id` int(11) NOT NULL,<br>  `prod_price` float DEFAULT NULL,<br>  `prod_desc` varchar(256) DEFAULT NULL,<br>  PRIMARY KEY (`prod_id`)<br>) ENGINE=InnoDB DEFAULT CHARSET=utf8 <br>主键是prod_id， 我想从中找出vend_id是1000的商品中prod_id最小的一个。 我的查询是这么写的：<br> select min(prod_id) from products where vend_id = 1000;<br>这样会走全表扫描，没什么问题。 但是看资料的时候，发现可以利用主键的存储是有序的这个特点，来进行优化，使查询扫描尽量少的行， 我的语句是这样写的：<br>    select prod_id from products use index(primary) where vend_id = 1000 limit 1;<br>但是，使用explain发现，还是走了全表扫描，很奇怪，所以想请老师给分析下。 非常感谢！！！<br>","like_count":0,"discussions":[{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":29108,"discussion_content":"vend_id 的索引呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570728314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134263,"user_name":"悠南","can_delete":false,"product_type":"c1","uid":1193711,"ip_address":"","ucode":"333665DB7CFDD6","user_header":"https://static001.geekbang.org/account/avatar/00/12/36/ef/83c2a743.jpg","comment_is_top":false,"comment_ctime":1568786587,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568786587","product_id":100020801,"comment_content":"我想问多个单列索引  ，走完第一个索引，第二个会走吗","like_count":0},{"had_liked":false,"id":133648,"user_name":"深山夕照ღ深秋雨","can_delete":false,"product_type":"c1","uid":1665311,"ip_address":"","ucode":"56C87C86186F31","user_header":"https://static001.geekbang.org/account/avatar/00/19/69/1f/2288c7d7.jpg","comment_is_top":false,"comment_ctime":1568627834,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1568627834","product_id":100020801,"comment_content":"老师，没有明白怎么用 (身份证号，姓名）这个联合索引来支持用身份证号查询地址","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133658,"discussion_content":"回表啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578978683,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":132980,"user_name":"丁丁历险记","can_delete":false,"product_type":"c1","uid":1661704,"ip_address":"","ucode":"A43829E454C067","user_header":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","comment_is_top":false,"comment_ctime":1568289230,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1568289230","product_id":100020801,"comment_content":"请教下老师，我一直，好奇一件事，大脑用的是哪种索引结构。<br>长期记忆编码和短期记忆编码分别用的什么索引。<br>感觉很多记忆书籍都是在探寻如何更好的使用大脑索引。","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133660,"discussion_content":"肯定不是单纯B+树一种模型，应该是树与网络模型，还有其他模型的综合体吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578978753,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":132394,"user_name":"凉凉凉凉凉","can_delete":false,"product_type":"c1","uid":1486805,"ip_address":"","ucode":"F9F0553C753553","user_header":"https://static001.geekbang.org/account/avatar/00/16/af/d5/f93524bc.jpg","comment_is_top":false,"comment_ctime":1568108634,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1568108634","product_id":100020801,"comment_content":"老师你好，这句话我没理解：“比如上面这个市民表的情况，name 字段是比 age 字段大的，那我就建议你创建一个（name,age) 的联合索引和一个 (age) 的单字段索引”，再建一个age的单字段索引不是更加占用空间吗。","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133661,"discussion_content":"但是你有单独通过age进行查询的场景，只能再建立一个age索引了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578978788,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131955,"user_name":"皇甫","can_delete":false,"product_type":"c1","uid":1200408,"ip_address":"","ucode":"1624C5283C68DC","user_header":"https://static001.geekbang.org/account/avatar/00/12/51/18/0b0c105b.jpg","comment_is_top":false,"comment_ctime":1567991979,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1567991979","product_id":100020801,"comment_content":"老师，覆盖索引还是没有理解，如果如果查询select  *  from T where k between 3 and 5覆盖索引要怎样优化呀","like_count":0,"discussions":[{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":81164,"discussion_content":"k与你要查询的全部或部分字段建立联合索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576228306,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131560,"user_name":"Leon📷","can_delete":false,"product_type":"c1","uid":1219496,"ip_address":"","ucode":"B9BBD1EFAAE5A2","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/a8/6a391c66.jpg","comment_is_top":false,"comment_ctime":1567812059,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567812059","product_id":100020801,"comment_content":"老师，所以联合索引建立的规则是按照FROM &gt; WHERE &gt; GROUP BY &gt; HAVING &gt; SELECT 的字段 &gt; DISTINCT &gt; ORDER BY &gt; LIMIT的顺序来编排，可以这么理解吧","like_count":0},{"had_liked":false,"id":131170,"user_name":"Yougoss","can_delete":false,"product_type":"c1","uid":1465479,"ip_address":"","ucode":"F8EAC00728BDA2","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoprftqKC9gSIqrk3iaibk22h3d9kgpkl3DZyuUUkWVznyet7mlEibUrnibVfvwtv7mm6CORajPVqcJAg/132","comment_is_top":false,"comment_ctime":1567660083,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1567660083","product_id":100020801,"comment_content":"老师我想问一下，一个二级索引对应多个主键索引的时候，查询过程是怎么样的呢？为什么说Mysql说不保证查询结果顺序的一致性，这个顺序跟哪些因素有关呢？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133663,"discussion_content":"这个顺序与普通索引的顺序有关，与你想让查询出来的哪些列有顺序无关，所以要order by一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578978943,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131098,"user_name":"thomas","can_delete":false,"product_type":"c1","uid":1016777,"ip_address":"","ucode":"9AB945308F1B50","user_header":"https://static001.geekbang.org/account/avatar/00/0f/83/c9/5d03981a.jpg","comment_is_top":false,"comment_ctime":1567644044,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1567644044","product_id":100020801,"comment_content":"老师，请问为什么只select ID字段后， rows的值反而大？<br>mysql&gt; explain select ID from T where k between 3 and 5;<br>+----+-------------+-------+-------+---------------+------+---------+------+------+--------------------------+<br>| id | select_type | table | type  | possible_keys | key  | key_len | ref  | rows | Extra                    |<br>+----+-------------+-------+-------+---------------+------+---------+------+------+--------------------------+<br>|  1 | SIMPLE      | T     | index | k             | k    | 4       | NULL |    6 | Using where; Using index |<br>+----+-------------+-------+-------+---------------+------+---------+------+------+--------------------------+<br>1 row in set (0.00 sec)<br><br>mysql&gt; explain select * from T where k between 3 and 5;<br>+----+-------------+-------+-------+---------------+------+---------+------+------+-----------------------+<br>| id | select_type | table | type  | possible_keys | key  | key_len | ref  | rows | Extra                 |<br>+----+-------------+-------+-------+---------------+------+---------+------+------+-----------------------+<br>|  1 | SIMPLE      | T     | range | k             | k    | 4       | NULL |    2 | Using index condition |<br>+----+-------------+-------+-------+---------------+------+---------+------+------+-----------------------+<br>1 row in set (0.00 sec)<br>","like_count":0},{"had_liked":false,"id":129536,"user_name":"明翼","can_delete":false,"product_type":"c1","uid":1068361,"ip_address":"","ucode":"E77F86BEB3D5C1","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/49/28e73b9c.jpg","comment_is_top":false,"comment_ctime":1567150596,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1567150596","product_id":100020801,"comment_content":"想请教老师一个问题，既然innodb引擎是基于索引来存储数据的，那我创建一个没有任何索引的表数据是怎么存储的那？怎么做查询那？谢谢","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133665,"discussion_content":"肯定有一个索引，就是主键索引，那就是主键索引表的方式来存。查询就是全表查询了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578978992,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127787,"user_name":"momo","can_delete":false,"product_type":"c1","uid":1228393,"ip_address":"","ucode":"3B2CB1EC9BC601","user_header":"https://static001.geekbang.org/account/avatar/00/12/be/69/5404e5a3.jpg","comment_is_top":false,"comment_ctime":1566794320,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1566794320","product_id":100020801,"comment_content":"为什么like后的 range会持续命中索引，，而》 的range不能命中后续索引字段","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133666,"discussion_content":"没看懂。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578979060,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126784,"user_name":"　　","can_delete":false,"product_type":"c1","uid":1560563,"ip_address":"","ucode":"0D736D44A24C56","user_header":"https://static001.geekbang.org/account/avatar/00/17/cf/f3/48fc6781.jpg","comment_is_top":false,"comment_ctime":1566475211,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1566475211","product_id":100020801,"comment_content":"老师，您好，看了这篇文章我心里有一个问题就是 “我在SQL语句的过滤条件中列的存在顺序是否一定要按照建立索引时定义的列的顺序排序先后呢？” <br><br>在不久之前我对索引的建立逻辑是“根据业务逻辑的查询要求来，比如type在第一列，id在第二列，因为必须要知道你的type类型才能再去找对应type类型下的id”<br><br>但是在这段时间看了文章，我发现了这个问题，创建索引的顺序最好是列的基数最大的在最前面，因为这样可以过滤更多的数据，然后就出现了最开始的那个问题，就是列的前后顺序问题<br><br>","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133669,"discussion_content":"这个应该没关系吧，重要的是联合索引中字段的先后顺序。where中的字段应该没关系，这个会识别吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578979166,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124735,"user_name":"Hinimix","can_delete":false,"product_type":"c1","uid":1316937,"ip_address":"","ucode":"7994136C93BD89","user_header":"https://static001.geekbang.org/account/avatar/00/14/18/49/b1d864e5.jpg","comment_is_top":false,"comment_ctime":1565955732,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1565955732","product_id":100020801,"comment_content":"老师，我看到有人问“联合索引是如何存储的”，联合索引也是1个b+tree，他的叶子节点上的key是所有的列的值，这个值从左到右排序，然后叶子节点上的value是主键id，是这样吗。","like_count":0,"discussions":[{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":81166,"discussion_content":"对！！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576228394,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124194,"user_name":"不工","can_delete":false,"product_type":"c1","uid":1462843,"ip_address":"","ucode":"A8725E6D0E1765","user_header":"https://static001.geekbang.org/account/avatar/00/16/52/3b/f1501d79.jpg","comment_is_top":false,"comment_ctime":1565833520,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565833520","product_id":100020801,"comment_content":"为什么删除或新建主键会重建表？","like_count":0},{"had_liked":false,"id":122693,"user_name":"木子","can_delete":false,"product_type":"c1","uid":1390997,"ip_address":"","ucode":"66B9C493F25B11","user_header":"https://static001.geekbang.org/account/avatar/00/15/39/95/a72ef023.jpg","comment_is_top":false,"comment_ctime":1565492231,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1565492231","product_id":100020801,"comment_content":"老师，你好，开头讲的那个sql的执行流程有点不太明白，麻烦老师讲解一下。between 3 and 5在下面的执行流程中分析了只扫描k索引树的3，5，6，为什么没扫描3 5中间的4呢？难道是根据B+树的索引特点自动取了k为3 5中间的值，这时候没有，没取到就跳过了，但如果有这个值的话，需不需要回表呢？","like_count":0,"discussions":[{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":29116,"discussion_content":"猜测应该是扫描到 3 ，然后顺序范围读取 5，6","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570728727,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118416,"user_name":"yoyoga","can_delete":false,"product_type":"c1","uid":1610259,"ip_address":"","ucode":"9485213CE234B9","user_header":"https://static001.geekbang.org/account/avatar/00/18/92/13/655afbf5.jpg","comment_is_top":false,"comment_ctime":1564362501,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1564362501","product_id":100020801,"comment_content":"老师，select * from T where k between 3 and 5 和select * from T where k &gt; 3 and k&lt; 5，这两个sql执行过程一样吗？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133673,"discussion_content":"应该一样吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578979302,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118001,"user_name":"Geek_4e4ec2","can_delete":false,"product_type":"c1","uid":1603078,"ip_address":"","ucode":"6DAD5EE4FFB195","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/zAZv4NyuS21Y1qk45j8JiaoEYdA5Zgc1PqpJsBokz5bZVmdkf6kNWvT4cUAAKAdH6TgN52DWZhiaH6wNFhw14nRg/132","comment_is_top":false,"comment_ctime":1564209584,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1564209584","product_id":100020801,"comment_content":"老师，请问一下，ab作联合主键，c作二级索引。<br>那么在c这颗索引树上，所有c=N的节点是不是按照ab的顺序排序的呢？只有这样才能保证where c=N order by a 不需要作额外排序。<br>同理，如果cb作联合索引，那么在cb这颗索引树上所有c=N的节点是不是按照a的顺序排序的呢？<br><br>","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133674,"discussion_content":"1、C的节点不是按照ab的顺序排序，需要order by a作额外排序。\n2、cb索引树也不是按照a的顺序进行排序。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578979440,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117826,"user_name":"清风","can_delete":false,"product_type":"c1","uid":1542078,"ip_address":"","ucode":"AB2D169746BC23","user_header":"https://static001.geekbang.org/account/avatar/00/17/87/be/7466bf26.jpg","comment_is_top":false,"comment_ctime":1564139291,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1564139291","product_id":100020801,"comment_content":"select* from tuser where name like&#39;张%&#39; and age=10 and ismale=1;这条sql语句执行引擎不会进行优化吗，如果三个字段有联合索引，优化后就能使用更长的索引了。我看老师在上面回复说能优化，为什么这里不优化了呢","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133681,"discussion_content":"啥意思，没明白。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578980063,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117365,"user_name":"湯尼陳","can_delete":false,"product_type":"c1","uid":1607276,"ip_address":"","ucode":"7C787DB9FBCA37","user_header":"https://static001.geekbang.org/account/avatar/00/18/86/6c/b4f41f88.jpg","comment_is_top":false,"comment_ctime":1564033499,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564033499","product_id":100020801,"comment_content":"希望老师可以结合explain，跟我走索引和不走索引的区别。不然太模糊了。","like_count":0},{"had_liked":false,"id":115883,"user_name":"绝色星球","can_delete":false,"product_type":"c1","uid":1120059,"ip_address":"","ucode":"8A9168A7F97BC6","user_header":"https://static001.geekbang.org/account/avatar/00/11/17/3b/85297cbf.jpg","comment_is_top":false,"comment_ctime":1563761385,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563761385","product_id":100020801,"comment_content":"关于索引重建、主键重建的操作，我咨询了我们的DBA，DBA的答复是通常不进行这些操走，因为会引起锁表，影响到在线业务。请问老师，何时需要重建的操作呢？","like_count":0},{"had_liked":false,"id":115833,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1563755822,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"1563755822","product_id":100020801,"comment_content":"面试问题：单机MySQL的最高QPS是多少","like_count":0,"discussions":[{"author":{"id":1308783,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f8/6f/080973cf.jpg","nickname":"Edward","note":"","ucode":"10FAADF92D05F4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5260,"discussion_content":"单节点QPS一般在7～8k，单库一般在2k左右。取决于服务器硬件配置，比如用SSD当然高一点，用SAS也比SATA好一点。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1566120127,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1019332,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","nickname":"长期规划","note":"","ucode":"5EF65E9115834B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1308783,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f8/6f/080973cf.jpg","nickname":"Edward","note":"","ucode":"10FAADF92D05F4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6361,"discussion_content":"谢谢你","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566869920,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":5260,"ip_address":""},"score":6361,"extra":""}]},{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":29117,"discussion_content":"这个问题，可以去每个云服务厂商上，看看 MySQL 服务提供的性能规格。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570728833,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1019332,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","nickname":"长期规划","note":"","ucode":"5EF65E9115834B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":29143,"discussion_content":"谢谢您😉","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570747203,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":29117,"ip_address":""},"score":29143,"extra":""}]}]},{"had_liked":false,"id":114982,"user_name":"师恩磊","can_delete":false,"product_type":"c1","uid":1216657,"ip_address":"","ucode":"237A2B7D19E0A5","user_header":"https://static001.geekbang.org/account/avatar/00/12/90/91/aebfb724.jpg","comment_is_top":false,"comment_ctime":1563442048,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563442048","product_id":100020801,"comment_content":"这个同事解释的不对，a，b俩索引没有起作用。<br>索引相关知识下：select * from table where k between 2 and 5，k为索引，的执行过程，先在索引树找到对应的id值，比如索引k=2对应的id，然后，回表根据id找出该条记录。为了提高查询效率，减少回表操作，引入覆盖索引，最左前缀原则，索引下推。<br>覆盖索引：将*变为id，则不用回表查询数据了，提高了查询效率，索引k被覆盖了，我们称为覆盖索引。根据证件号，查询居民姓名时，是否有必要建立证件号，和姓名的联合索引。如果该需求是高频的，可以建立联合索引，不用回表再查询了，通过建立冗余索引来支持覆盖索引。<br>最左前缀选择：单独为一个不频繁的请求创建一个联合索引有些浪费，应该建立证件号，姓名，地址的联合索引。最左前缀选择选中的是最左N个字符，比如（a,b），索引b是不会被命中的。如果需要索引b，需要单独建立b的索引，不需要再单独建立a的索引了。比如（name，age），like%张，可以命中索引。<br>索引下推：在mysql5.6之前是没有这个功能的，比如（name，age）联合索引，select * from table where name like &#39;张%&#39; and age=10；5.6之前则需要找到主键id，然后回表在主键索引树上将该id的数据取出，判断是否满足age=10。在5.6之后，可以先判断age是否等于10，过滤掉不满足条件的，将满足条件的再回表查询。<br>","like_count":0},{"had_liked":false,"id":114192,"user_name":"小飞哥 ‍超級會員","can_delete":false,"product_type":"c1","uid":1110049,"ip_address":"","ucode":"417F9563B3005B","user_header":"https://static001.geekbang.org/account/avatar/00/10/f0/21/104b9565.jpg","comment_is_top":false,"comment_ctime":1563248371,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1563248371","product_id":100020801,"comment_content":"老师，现在我们遇到一个问题，我们建表字段很随意，看了文章后觉得主键和索引要放在前面，不经常使用的放在后面。这个有性能证明么？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133685,"discussion_content":"索引放前后面有啥关系吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578980232,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112925,"user_name":"Dym","can_delete":false,"product_type":"c1","uid":1205036,"ip_address":"","ucode":"7E521F01A4D823","user_header":"","comment_is_top":false,"comment_ctime":1562847908,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1562847908","product_id":100020801,"comment_content":"老师 您好！我有一个疑惑麻烦老师解答下<br><br>前提：字段user_id为普通索引、id为主键<br><br>select id,user_id from T where id=1 and user_id=10 <br><br>像这样的语句是走普通索引还是走聚集索引啊，按老师讲的这个语句是满足覆盖索引的条件，走普通索引是更快的，避免回表。但是经过我的测试发现走的是主键索引。<br><br>恳请老师解答下","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133688,"discussion_content":"如果非要走覆盖索引吧，建立(userid,id)这样的联合索引，这样应该就不回表了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578980660,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":29118,"discussion_content":"肯定走主键索引呀。都主键索引啦，干啥要回表呀。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570728926,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112361,"user_name":"崔文博","can_delete":false,"product_type":"c1","uid":1186230,"ip_address":"","ucode":"8A2C56A786F016","user_header":"https://static001.geekbang.org/account/avatar/00/12/19/b6/33151697.jpg","comment_is_top":false,"comment_ctime":1562723347,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1562723347","product_id":100020801,"comment_content":"老师好，我遇到了两个问题，第一个是，select id from table limit 100000,1,和select * from table limit 100000,1 结果有误差，一个走主键索引，一个走全表，但是explain结果row的行数是一样的，请问老师这种误差是怎么产生的，还有一个问题的我在测试库（几十万数据）执行了select id from table limit 100000,1，竟然发现没有走id索引走了我创建的create_time索引，请问为什么，主键是id varcahr(32),create_time datetime,是因为mysql自动选择了create_time这个索引么","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136235,"discussion_content":"1、返回的row是一样的，应该是正确的，只不过回表与否。\n2、应该是的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579136319,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111133,"user_name":"王一卓","can_delete":false,"product_type":"c1","uid":1580071,"ip_address":"","ucode":"D7A761932C9552","user_header":"https://static001.geekbang.org/account/avatar/00/18/1c/27/8aab0d72.jpg","comment_is_top":false,"comment_ctime":1562485418,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1562485418","product_id":100020801,"comment_content":"问一下覆盖索引的问题。一开始的例子是index k，后面的例子是key id_card。请问index和key有区别吗？Google之后看到的Quora和stack overflow都是说一样的，MySQL 8.0的文档也没有提到区别。<br><br>如果是一样的话，只是增加index好像是无法减少回表操作，我是哪里理解出现偏差了么？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136241,"discussion_content":"是一样的，增加index与是否回表并无直接关系，如果你查询的字段正好是你的索引，当然不用回表了，如果查询的字段在你的索引中不存在，那要回表。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579136407,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110619,"user_name":"涛哥哥","can_delete":false,"product_type":"c1","uid":1361159,"ip_address":"","ucode":"329A1384E3AB5E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqJobg767PUeqrqQQ4B6YvMatj2SRyOicKZZ4gWTf30dMketiaj58Gc3RFTmckGxAXlL9ERSxGovq9g/132","comment_is_top":false,"comment_ctime":1562303318,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1562303318","product_id":100020801,"comment_content":"老师，能具体说一下innodb二级索引是怎么具体存储的吗，最好能用截一个图说明一下。1、比如，二级索引k，这个二级索引包含了非常多的主键字段，多到16k(一个节点)放不下，是如何存储的？2、二级索引字段再非叶子节点中会重复吗，其实第一个问题就已经包含了第二个问题。查阅了很多资料，问了很多技术人员，都不知道。麻烦老师了:）:）","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136255,"discussion_content":"个人认为：\n1、二级索引如果一个节点分不下，那就会产生第二个节点，依次下去。\n2、二级索引非叶子叶点应该是指向叶子节点的地址，会重复嘛？这个提问不知道啥意思。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579136584,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109703,"user_name":"yhui","can_delete":false,"product_type":"c1","uid":1512714,"ip_address":"","ucode":"1AAAF47E41FFB8","user_header":"https://static001.geekbang.org/account/avatar/00/17/15/0a/c450e565.jpg","comment_is_top":false,"comment_ctime":1562079253,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1562079253","product_id":100020801,"comment_content":"建立（a,b,d,c）索引<br>Where a=1 and b=2 and c&lt;1 and d=2<br>能用上索引吗","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136272,"discussion_content":"能用上，应该是先用前缀索引，然后再进行索引下推，最后回表。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579136761,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":29119,"discussion_content":"可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570729066,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109651,"user_name":"super.jie","can_delete":false,"product_type":"c1","uid":1321323,"ip_address":"","ucode":"280494DE74E15E","user_header":"https://static001.geekbang.org/account/avatar/00/14/29/6b/2b688311.jpg","comment_is_top":false,"comment_ctime":1562071766,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1562071766","product_id":100020801,"comment_content":"所以现在你知道了，这段开头的问题里，我们要为高频请求创建 (身份证号，姓名）这个联合索引，并用这个索引支持“根据身份证号查询地址”的需求。   这段话是什么意思,跟最左前缀有什么关系吗？具体怎么解决不常用的根据身份证查询地址的这个需求呢？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136281,"discussion_content":"1、与最左前缀有关系的。\n2、没明白该问题是啥意思。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579136931,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108895,"user_name":"beiler","can_delete":false,"product_type":"c1","uid":1192989,"ip_address":"","ucode":"0A62FE86617486","user_header":"https://static001.geekbang.org/account/avatar/00/12/34/1d/169cd800.jpg","comment_is_top":false,"comment_ctime":1561911647,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1561911647","product_id":100020801,"comment_content":"既然都有索引下推把不符合的去掉了，那为什么还要回表呢？剩下的不应该都是符合的嘛","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136286,"discussion_content":"另外，你的select 中查询的字段在索引中也不存在，这个也必须要回表才能获取的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579136983,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":29120,"discussion_content":"可能还有条件，例如说 idx_a_b\n结果 where 里面还有 c ，那就需要回表判断了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570729134,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108355,"user_name":"蒋旺Foo","can_delete":false,"product_type":"c1","uid":1265741,"ip_address":"","ucode":"4325AB9674975C","user_header":"https://static001.geekbang.org/account/avatar/00/13/50/4d/392f969b.jpg","comment_is_top":false,"comment_ctime":1561727380,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1561727380","product_id":100020801,"comment_content":"老师好。如果普通索引，一个key，命中多个主键如何办？即图1中的第二幅图应该如何画？谢谢。","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136289,"discussion_content":"那就是key 主键1，key 主键2，。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579137022,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108128,"user_name":"Geek_64a1cb","can_delete":false,"product_type":"c1","uid":1153404,"ip_address":"","ucode":"64FDA169396770","user_header":"https://static001.geekbang.org/account/avatar/00/11/99/7c/d19961b7.jpg","comment_is_top":false,"comment_ctime":1561685020,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561685020","product_id":100020801,"comment_content":"老师，我有个疑问，就是B+树上怎么实现组织在文件系统中的","like_count":0},{"had_liked":false,"id":107437,"user_name":"砖瓦工","can_delete":false,"product_type":"c1","uid":1021194,"ip_address":"","ucode":"A0AAF93973D6A8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/95/0a/817c4356.jpg","comment_is_top":false,"comment_ctime":1561536184,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1561536184","product_id":100020801,"comment_content":"老师好，我最近遇到一个索引的问题：业务需要在两个字段上加了，唯一联合索引，这样的联合索引还适合最左匹配原则吗？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136304,"discussion_content":"根据你的查询条件，应该是适合的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579137254,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106547,"user_name":"z.l","can_delete":false,"product_type":"c1","uid":1181055,"ip_address":"","ucode":"805CC5784D3F76","user_header":"https://static001.geekbang.org/account/avatar/00/12/05/7f/d35ab9a1.jpg","comment_is_top":false,"comment_ctime":1561342184,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1561342184","product_id":100020801,"comment_content":"请问老师，回表需要再次执行IO操作吗？","like_count":0,"discussions":[{"author":{"id":1239693,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ea/8d/2e1b6705.jpg","nickname":"小德","note":"","ucode":"F541817F301EE6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":137946,"discussion_content":"回表需要查聚簇索引，聚簇索引在磁盘上肯定是有的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579220147,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136308,"discussion_content":"应该有的吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579137301,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104709,"user_name":"little qiang","can_delete":false,"product_type":"c1","uid":1550178,"ip_address":"","ucode":"D53903360A2B6B","user_header":"https://static001.geekbang.org/account/avatar/00/17/a7/62/9fc69ecd.jpg","comment_is_top":false,"comment_ctime":1560820757,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1560820757","product_id":100020801,"comment_content":"还有个问题，如果一个表没有主键，建立了普通索引，那么这种情况是否就存在回表？","like_count":0,"discussions":[{"author":{"id":1239693,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ea/8d/2e1b6705.jpg","nickname":"小德","note":"","ucode":"F541817F301EE6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":137952,"discussion_content":"是否回表应该是要看你的查询语句，如果select的字段正好是普通索引上有的值那么就不需要回表了，否则则回表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579220243,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136311,"discussion_content":"肯定存在回表的可能，没有主键，引擎会自动产生主键row id","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579137368,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104702,"user_name":"little qiang","can_delete":false,"product_type":"c1","uid":1550178,"ip_address":"","ucode":"D53903360A2B6B","user_header":"https://static001.geekbang.org/account/avatar/00/17/a7/62/9fc69ecd.jpg","comment_is_top":false,"comment_ctime":1560819672,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1560819672","product_id":100020801,"comment_content":"老师，增加主键联合索引就是会用到覆盖索引吗，单独以增加的非主键字段查询，能用到索引增加查询效率吗？麻烦老师帮忙解惑","like_count":0,"discussions":[{"author":{"id":1239693,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ea/8d/2e1b6705.jpg","nickname":"小德","note":"","ucode":"F541817F301EE6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":137956,"discussion_content":"增加主键联合索引就是会用到覆盖索引吗，压根就不是一个概念吧？？？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579220335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136316,"discussion_content":"主键加联合索引不一定会是覆盖索引，非主键字段查询，用到索引会增加查询效率。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579137465,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104538,"user_name":"liusir.me","can_delete":false,"product_type":"c1","uid":1505332,"ip_address":"","ucode":"2FDDF93420F98A","user_header":"https://static001.geekbang.org/account/avatar/00/16/f8/34/90a2a184.jpg","comment_is_top":false,"comment_ctime":1560774023,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1560774023","product_id":100020801,"comment_content":"【使用好了索引可以避免排序】只是针对默认的升序排序吧，对于降序排序应该还是不起作用，个人理解","like_count":0,"discussions":[{"author":{"id":1239693,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ea/8d/2e1b6705.jpg","nickname":"小德","note":"","ucode":"F541817F301EE6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":137957,"discussion_content":"不一定吧，如果字段有顺序，需要降序排列，将数据取出来放在链表中，到着读出来是不是就可以了？不需要排序？个人理解，仅仅是讨论下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579220499,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136318,"discussion_content":"应该是。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579137481,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104040,"user_name":"Zhaoyang","can_delete":false,"product_type":"c1","uid":1037190,"ip_address":"","ucode":"131D83AC2566D2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d3/86/b5d72c87.jpg","comment_is_top":false,"comment_ctime":1560598405,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560598405","product_id":100020801,"comment_content":"主要的收货点就是，利用最左前缀原则，可以通过索引内部，来减少回表～","like_count":0},{"had_liked":false,"id":98501,"user_name":"@%初%@","can_delete":false,"product_type":"c1","uid":1053509,"ip_address":"","ucode":"2B8A6134675ED7","user_header":"https://static001.geekbang.org/account/avatar/00/10/13/45/16c60da2.jpg","comment_is_top":false,"comment_ctime":1559012801,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1559012801","product_id":100020801,"comment_content":"老师，我尝试了下课后题，<br> explain  select* from test_tbl2 where c=3 order by a; 去掉ca索引与不去掉索引，效果相同,<br> explain  select* from test_tbl2 where c=3 order by b;相反，去掉cb索引与不去掉cb索引，查询都会用到 c 索引，但是 order by b的时候，都用到了文件内排序，这个为什么呢？？？？","like_count":0},{"had_liked":false,"id":97228,"user_name":"S@Y@M","can_delete":false,"product_type":"c1","uid":1297700,"ip_address":"","ucode":"F5658220C883FA","user_header":"https://static001.geekbang.org/account/avatar/00/13/cd/24/76b56b0b.jpg","comment_is_top":false,"comment_ctime":1558615743,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1558615743","product_id":100020801,"comment_content":"MySQL使用uuid作主健，跟自动增长的数字做主健，性能不会太好吧","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136322,"discussion_content":"是的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579137514,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96939,"user_name":"topsion","can_delete":false,"product_type":"c1","uid":1158152,"ip_address":"","ucode":"01366517C6F564","user_header":"https://static001.geekbang.org/account/avatar/00/11/ac/08/8b99367c.jpg","comment_is_top":false,"comment_ctime":1558539827,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1558539827","product_id":100020801,"comment_content":"有个疑问：主键索引的叶子节点是行记录，那么主键索引树肯定不能一次全部加载到内存吧？它是怎么加载的呢？跟普通索引树的加载又有什么区别？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136335,"discussion_content":"根据LRU算法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579137688,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95778,"user_name":"带头大哥","can_delete":false,"product_type":"c1","uid":1463873,"ip_address":"","ucode":"DA49D606C1E6DF","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIO2hQgGGq9htCBJNNAMH33VFvCBicwOjwCVXTg3WxYBkI3of3ibfQWib4ibF8m2y9vORT5mSibuqw5LNA/132","comment_is_top":false,"comment_ctime":1558173153,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1558173153","product_id":100020801,"comment_content":"老师你好，我的问题是关于索引下推的：<br>mysql&gt; select * from tuser where name like &#39;张 %&#39; and age=10 and ismale=1;<br>索引是（name,age）这个联合索引，提到mysql 5.6以后会索引下推，先找到符合name的记录，然后在对比age，而不用去主键索引那边取值做对比，但是我看到还一个条件 ismale=1，这个条件也不需要回主键索引找到来对比吗？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136337,"discussion_content":"这个得通过回表来进行判断了，因为它不是索引中的一员。但至少已经将回表次数降到最低了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579137757,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95061,"user_name":"yu🐟","can_delete":false,"product_type":"c1","uid":1181583,"ip_address":"","ucode":"E988567C46539E","user_header":"https://static001.geekbang.org/account/avatar/00/12/07/8f/3ef096f3.jpg","comment_is_top":false,"comment_ctime":1557965398,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1557965398","product_id":100020801,"comment_content":"老师你好，工作中的一个场景，一个大表20多个查询条件，用户可选择任意的查询条件组合，针对这中场景建立索引有什么好的方案嘛","like_count":0,"discussions":[{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":29122,"discussion_content":"ES ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570729172,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":136340,"discussion_content":"嗯","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579137818,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":29122,"ip_address":""},"score":136340,"extra":""}]}]},{"had_liked":false,"id":94244,"user_name":"passi","can_delete":false,"product_type":"c1","uid":1171253,"ip_address":"","ucode":"CC35D270A96F09","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKYicAPicsk8ia6ibNl1X4D6KCyYkEEFia7AHObxn399eEBo8UZ0iaeyKMUxAFYGyySElLk3ibuoY56f2WHQ/132","comment_is_top":false,"comment_ctime":1557751092,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1557751092","product_id":100020801,"comment_content":" 请教一下，如果建立了联合索引 (a,b) 的同时，又建立了 (a) 索引，那么这个时候用where a=123条件查询，会用到哪个索引呢","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136342,"discussion_content":"这个应该用a的索引吧，个人理解，不一定对。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579137862,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94109,"user_name":"秋天","can_delete":false,"product_type":"c1","uid":1057056,"ip_address":"","ucode":"A7E1D953EF7E17","user_header":"https://static001.geekbang.org/account/avatar/00/10/21/20/1299e137.jpg","comment_is_top":false,"comment_ctime":1557722611,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1557722611","product_id":100020801,"comment_content":"这里的原则 &#47; 我给你的建议是：如果你的事务中需要锁多个行，要把最可能造成锁冲突、最可能影响并发度的锁的申请时机尽量往后放。","like_count":0},{"had_liked":false,"id":92805,"user_name":"Sea - fishing salt","can_delete":false,"product_type":"c1","uid":1316499,"ip_address":"","ucode":"AF57C086D504DD","user_header":"https://static001.geekbang.org/account/avatar/00/14/16/93/c5be3aee.jpg","comment_is_top":false,"comment_ctime":1557329126,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1557329126","product_id":100020801,"comment_content":"select id from T where name like &#39;a%&#39;，给name添加了索引，id为主键。但是为什么这条sql还要回表呢，逻辑来说，name索引树已经有id字段了，不需要回表了吧。这是为什么","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136344,"discussion_content":"这个不知道了。期待他人。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579137919,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90981,"user_name":"Geek_397f00","can_delete":false,"product_type":"c1","uid":1478149,"ip_address":"","ucode":"E40FBB0497CF5E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/tatxXwnHe9nqc3Hzrv9qjam7OAOm0lQH6EoamPqFR1ceDkW21ZfmEZ0FeqfFSPTjv7B6qHpJK98Xsbld7iboNXA/132","comment_is_top":false,"comment_ctime":1556766081,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556766081","product_id":100020801,"comment_content":"老师问中所说：所以现在你知道了，这段开头的问题里，我们要为高频请求创建 (身份证号，姓名）这个联合索引，并用这个索引支持“根据身份证号查询地址”的需求。<br><br>这个问题还是不太明白，根据最左索引原则，这里根据联合索引（ 身份证，姓名）只能找到身份证号码和姓名，地址并不在这个索引里面，同样需要身份证号码去回表，除非新建身份证和地址的联合索引，才能快速根据身份证找到地址的需求，是不是这样呢？麻烦老师解答下，谢谢！！","like_count":0},{"had_liked":false,"id":90869,"user_name":"Dr. Wong","can_delete":false,"product_type":"c1","uid":1518348,"ip_address":"","ucode":"0CEF58927E69E8","user_header":"https://static001.geekbang.org/account/avatar/00/17/2b/0c/f4bdb520.jpg","comment_is_top":false,"comment_ctime":1556699456,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1556699456","product_id":100020801,"comment_content":"问个问题：cb索引的结构是c有序，b只能是在保证c有序的基础上再进行排序，所以b是局部有序。但查询语句里面是order by b，对b的全局作排序，这样子的话，b不是还要重排一遍才能使局部有序变成全局有序吗，这里cb索引里的b又对order by起了什么贡献呢？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136346,"discussion_content":"没做啥贡献吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579137981,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90550,"user_name":"do it","can_delete":false,"product_type":"c1","uid":1309911,"ip_address":"","ucode":"E0753912E8F2AF","user_header":"https://static001.geekbang.org/account/avatar/00/13/fc/d7/b102034a.jpg","comment_is_top":false,"comment_ctime":1556553674,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556553674","product_id":100020801,"comment_content":"个人小结：<br>覆盖索引<br>联合索引<br>最左前缀原则<br>索引下推<br><br>.什么场景适合联合索引？<br>.怎么建立联合索引？<br>.联合索引的优势？<br>","like_count":0},{"had_liked":false,"id":90280,"user_name":"客舟听雨来coding","can_delete":false,"product_type":"c1","uid":1026219,"ip_address":"","ucode":"753F4B779CC416","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a8/ab/5d25cd32.jpg","comment_is_top":false,"comment_ctime":1556465518,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1556465518","product_id":100020801,"comment_content":"正确：因为查询和排序需要用到这两个值，这样查询的时候可以获取到排序的字段a或者b的值。这样可以不需要回表。","like_count":0},{"had_liked":false,"id":90225,"user_name":"xzy","can_delete":false,"product_type":"c1","uid":1002095,"ip_address":"","ucode":"1A44368083A19E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4a/6f/e36b3908.jpg","comment_is_top":false,"comment_ctime":1556452341,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556452341","product_id":100020801,"comment_content":"老师linux页的大小默认为4kb，innodb一页数据的大小默认为16kb，会产生4次io操作呀？为什么不和linux一样默认都是4kb?","like_count":0},{"had_liked":false,"id":87946,"user_name":"tjudream","can_delete":false,"product_type":"c1","uid":1104851,"ip_address":"","ucode":"A81870769C5E15","user_header":"https://static001.geekbang.org/account/avatar/00/10/db/d3/d71622c8.jpg","comment_is_top":false,"comment_ctime":1555764037,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555764037","product_id":100020801,"comment_content":"1. 回到主键索引树搜索的过程叫回表<br>2. 覆盖索引<br>\t如果一个索引覆盖了所要查询的所有数据，则叫做覆盖索引<br>\t覆盖索引是常用的优化手段，因为覆盖索引可以减少树的搜索<br>3. 最左前缀原则<br>\tB+树支持利用索引的最左前缀定位数据<br>4. 建立联合索引的原则：<br>\t（1）顺序最优原则，通过调整索引中字段的顺序来使得所需建立的索引最少<br>\t（2）空间最优原则，通过调整不同的索引组合使得空间最优<br>5. 索引下推：<br>\tMySQL5.6之前版本不支持索引下推<br>\tMySQL5.6及其之后版本支持下推，可以减少回表次数<br><br>思考题：<br>我觉得是必须的，因为ca索引在c=N时是按照a的顺序排列的，所以有了ca索引之后，查询一次就可以很快定位到最小的那个a。<br>如果没有ca索引，则需要将c=N的所有记录中a的值拿出来做比较，找到最小的那个","like_count":0},{"had_liked":false,"id":86098,"user_name":"小不点","can_delete":false,"product_type":"c1","uid":1351860,"ip_address":"","ucode":"C307D44A185C34","user_header":"https://static001.geekbang.org/account/avatar/00/14/a0/b4/5173f1af.jpg","comment_is_top":false,"comment_ctime":1555310633,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555310633","product_id":100020801,"comment_content":"索引使用范围查询不应该失效吗，between and不算范围查询吗","like_count":0},{"had_liked":false,"id":85631,"user_name":"Geek_WBL","can_delete":false,"product_type":"c1","uid":1473803,"ip_address":"","ucode":"1768A03CEF4CCE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epcLktmsepiaUn9Y45Rsibhqc8t0EvISvrpoKx9ahG7sV1KU7DLbgEIKdTgIpm2GSd9ulsSUiawj4fjg/132","comment_is_top":false,"comment_ctime":1555149043,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555149043","product_id":100020801,"comment_content":"hi 老师<br>explain select * from geek where c=1 order by b limit 1;<br>结果显示cb索引没有用上，这是为什么呢？<br>extra为：Using where; Using filesort","like_count":0},{"had_liked":false,"id":85620,"user_name":"Geek_WBL","can_delete":false,"product_type":"c1","uid":1473803,"ip_address":"","ucode":"1768A03CEF4CCE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epcLktmsepiaUn9Y45Rsibhqc8t0EvISvrpoKx9ahG7sV1KU7DLbgEIKdTgIpm2GSd9ulsSUiawj4fjg/132","comment_is_top":false,"comment_ctime":1555145486,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555145486","product_id":100020801,"comment_content":"老师你好？<br>关于重建主键的过程， 使用alter table T engine=InnoDB来解决。但是如果修改主键的。<br>之前项目中有这样的情况： 历史原因，没有建立自增主键ID， 使用的是联合主键(fieldA, fieldB, fieldC), 由于业务需求，需要修改为primary key(fieldA, fieldB, fieldD).   请问这种情况有好办法吗？<br>我之前的操作是通过新建一张表，然后替换之前的表， 很是麻烦","like_count":0},{"had_liked":false,"id":84416,"user_name":"灵犀andy","can_delete":false,"product_type":"c1","uid":1334527,"ip_address":"","ucode":"3C3C36B070676C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/WuVCibYmuGqFLnfIrr0BmkdzHwkialB0DibJ0YnymNNO2Wicy76ZxSvjD66sPVsd9SjkicSS4Z2iadTeOn7zGfwh9sxg/132","comment_is_top":false,"comment_ctime":1554859474,"is_pvip":false,"replies":[{"id":"30751","content":"额，没有说innodb比oracle有优越性呀😅","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1555147399,"ip_address":"","comment_id":84416,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1554859474","product_id":100020801,"comment_content":"林老师，innodb的聚簇索引相当于oracle的索引组织表，但是innodb怎么做到它的优越性的呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446350,"discussion_content":"额，没有说innodb比oracle有优越性呀😅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555147399,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":83951,"user_name":"笑笑虎","can_delete":false,"product_type":"c1","uid":1486827,"ip_address":"","ucode":"C835D84B49AE5C","user_header":"https://static001.geekbang.org/account/avatar/00/16/af/eb/97a5d851.jpg","comment_is_top":false,"comment_ctime":1554737422,"is_pvip":false,"replies":[{"id":"31599","content":"哎呀，后面就有专门讲join的几篇","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1555725006,"ip_address":"","comment_id":83951,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1554737422","product_id":100020801,"comment_content":"面试被问了mysql  join优化，我回答是对join字段加索引，然后面试官问我还有其他的吗？想知道还有其他优化点吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446188,"discussion_content":"哎呀，后面就有专门讲join的几篇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555725006,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":83768,"user_name":"Geek_6064de","can_delete":false,"product_type":"c1","uid":1484426,"ip_address":"","ucode":"3D994C104BA9CC","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/d17fK3ewEw349ITn1rQk16VGDe2xr29aMEESbrv0OEgEmtfaHkCLqRiauYRBiblGEZLCovArrAL5AibjI5K7zib4Sw/132","comment_is_top":false,"comment_ctime":1554712797,"is_pvip":false,"replies":[{"id":"30754","content":"如果中间还有别的值，咋办呢","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1555147945,"ip_address":"","comment_id":83768,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1554712797","product_id":100020801,"comment_content":"老师，有一个问题不太明白，就是在select * from T where k between 3 and 5中，为什么是从k=3开始顺序遍历索引树呢？按照我的理解，因为B+树的有序性，直接找到下边界k=3和上边界k=5不是就可以了吗？还望老师帮忙解答一下，谢谢~","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446141,"discussion_content":"如果中间还有别的值，咋办呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555147945,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":83653,"user_name":"　","can_delete":false,"product_type":"c1","uid":1172538,"ip_address":"","ucode":"DBE2DB5CC52C91","user_header":"https://static001.geekbang.org/account/avatar/00/11/e4/3a/16545faf.jpg","comment_is_top":false,"comment_ctime":1554690830,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554690830","product_id":100020801,"comment_content":"回答下问题：<br>那2个查询对应的2个索引，并没有利用好覆盖索引、索引下推。<br>它们的成功都需要回表，所以那2个联合索引是多余的。","like_count":0},{"had_liked":false,"id":83308,"user_name":"Geek_cxz","can_delete":false,"product_type":"c1","uid":1482158,"ip_address":"","ucode":"AAEC9BDEE492E3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q8tVHVrialm0x9iaF9aLoibq8MQ7oI1QPZMHz4EabKPkHdy6gFklQTUXIEAp3iaRKficRLhCravEp56u6euXMOgavbA/132","comment_is_top":false,"comment_ctime":1554527266,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1554527266","product_id":100020801,"comment_content":"老师，上一节课讲了，使用非自增ID做主键索引的场景<br>1.只有一个索引<br>2.该索引是唯一索引<br>但是我看最后举得那个例子，使用了(a,b)做了主键，而且还有另外好几个索引，那这些二级索引占用的空间就大了，所以说在使用非自增ID做索引的情况下，也得视业务情况而定吧，像这种业务，只能牺牲空间了，是这样吗？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136360,"discussion_content":"视业务而定，但建议还是有自增主键ID","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579138512,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80908,"user_name":"牛在天上飞","can_delete":false,"product_type":"c1","uid":1137660,"ip_address":"","ucode":"972DAF20F085ED","user_header":"https://static001.geekbang.org/account/avatar/00/11/5b/fc/5c24080b.jpg","comment_is_top":false,"comment_ctime":1553754002,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553754002","product_id":100020801,"comment_content":"#建表语句<br>CREATE TABLE `t_mall_goods_attribute`(<br>\t`id` BIGINT(20) NOT NULL COMMENT &#39;电商商品属性主键&#39; ,<br>\t`attribute_name` VARCHAR(60) CHARACTER<br>SET utf8mb4 NOT NULL COMMENT &#39;名称：颜色，尺寸等&#39; ,<br> `attribute_value` VARCHAR(100) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT &#39;值：红&#47;黄&#47;…. X&#47;XL&#47;…&#39; ,<br> `is_deleted` BIT(1) DEFAULT 0 COMMENT &#39;是否删除&#39; ,<br> KEY `union_idx_mall_goods_specifications_attribute`(<br>\t`attribute_name` ,<br>\t`attribute_value`<br>) USING BTREE<br>) ;<br>#插入数据<br>INSERT INTO `t_mall_goods_attribute` ( `id`,`attribute_name`, `attribute_value`, `is_deleted`) values ( &#39;143303745487347712&#39;,  &#39;颜色&#39;, &#39;灰色&#39;,0);<br>INSERT INTO `t_mall_goods_attribute` ( `id`,`attribute_name`, `attribute_value`, `is_deleted`) values ( &#39;143303745516707840&#39;,  &#39;尺码&#39;, &#39;S&#39;, 0);<br>INSERT INTO `t_mall_goods_attribute` ( `id`,`attribute_name`, `attribute_value`, `is_deleted`) values ( &#39;143303745625759744&#39;,  &#39;颜色&#39;, &#39;灰色&#39;, 0);<br>INSERT INTO `t_mall_goods_attribute` ( `id`,`attribute_name`, `attribute_value`, `is_deleted`) values ( &#39;143303745659314176&#39;,  &#39;尺码&#39;, &#39;XS&#39;, 0);<br>INSERT INTO `t_mall_goods_attribute` ( `id`,`attribute_name`, `attribute_value`, `is_deleted`) values ( &#39;143313745625759744&#39;,  &#39;颜色&#39;, &#39;灰色&#39;, 0);<br><br>explain SELECT<br>\tid<br>FROM<br>\tt_mall_goods_attribute<br>WHERE<br>\tattribute_name = &#39;颜色&#39;<br>AND attribute_value = &#39;灰色&#39;<br>为什么会是全表扫描呢？","like_count":0},{"had_liked":false,"id":80472,"user_name":"Link","can_delete":false,"product_type":"c1","uid":1464431,"ip_address":"","ucode":"7796CF1D2C08EA","user_header":"https://static001.geekbang.org/account/avatar/00/16/58/6f/10a5e68a.jpg","comment_is_top":false,"comment_ctime":1553665331,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553665331","product_id":100020801,"comment_content":"4个索引结果依次：ab&#47;cab&#47;caab&#47;cbab。 业务需求：ab&#47;ca&#47;cb。所以，cab&#47;caab保留任一即可<br><br>","like_count":0},{"had_liked":false,"id":78169,"user_name":"多拉格·five","can_delete":false,"product_type":"c1","uid":1207914,"ip_address":"","ucode":"07023F43811EE3","user_header":"https://static001.geekbang.org/account/avatar/00/12/6e/6a/38a3fa8d.jpg","comment_is_top":false,"comment_ctime":1553084491,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553084491","product_id":100020801,"comment_content":"alter table T engine=InnoDB ,这个应该是类似于oracle 降低高水位线之类的操作吧","like_count":0},{"had_liked":false,"id":77639,"user_name":"J!","can_delete":false,"product_type":"c1","uid":1305003,"ip_address":"","ucode":"71C946119B59D1","user_header":"https://static001.geekbang.org/account/avatar/00/13/e9/ab/37903736.jpg","comment_is_top":false,"comment_ctime":1552976530,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552976530","product_id":100020801,"comment_content":"两个相同的sql语句，一个加了force index (idx_t),另一个没加force index ，执行计划选择的都是 idx_t,但是执行计划不同，加了force index  type=range extra = Using index condition,效率更高，没加force  index 的  type=ref  extra=Using where","like_count":0},{"had_liked":false,"id":77565,"user_name":"假装自己不胖","can_delete":false,"product_type":"c1","uid":1412994,"ip_address":"","ucode":"308F1BAA96CDA5","user_header":"https://static001.geekbang.org/account/avatar/00/15/8f/82/374f43a1.jpg","comment_is_top":false,"comment_ctime":1552963286,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1552963286","product_id":100020801,"comment_content":"在有ab索引的情况下,where a=xxx and b=xxx比where b=xxx and a=xxx 来的快","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136363,"discussion_content":"这个跟sql里面where的查询条件前后顺序有关系吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579138603,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":77263,"user_name":"kobe huang","can_delete":false,"product_type":"c1","uid":1014251,"ip_address":"","ucode":"235011AE91829A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/79/eb/b0aea6ff.jpg","comment_is_top":false,"comment_ctime":1552900151,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552900151","product_id":100020801,"comment_content":"老师好，类似这种时间字段上有索引，还是走了全表扫描的，应该怎么优化？<br>\t--+ SIMPLE\tt1\tALL\tIDX1_UPDATE_TIME\t1000000\tUsing where","like_count":0},{"had_liked":false,"id":77024,"user_name":"三木禾","can_delete":false,"product_type":"c1","uid":1109458,"ip_address":"","ucode":"39C37228236860","user_header":"https://static001.geekbang.org/account/avatar/00/10/ed/d2/e3ae7ddd.jpg","comment_is_top":false,"comment_ctime":1552809276,"is_pvip":false,"replies":[{"id":"28918","content":"1. 图里没k=4 😆<br>2. 回表次数跟主键的类型无关哈<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1553419557,"ip_address":"","comment_id":77024,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552809276","product_id":100020801,"comment_content":"select * from T where k between   3 and 5  ;<br>1,这个语句应该是回表三次吧？查询 k=3,k=4,k=5  ，为什么只回表两次呢？<br>2, 如果id为非自增主键，用uuid，是不是才回表三次？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443549,"discussion_content":"1. 图里没k=4 😆\n2. 回表次数跟主键的类型无关哈\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553419557,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":76879,"user_name":"shawn","can_delete":false,"product_type":"c1","uid":1010221,"ip_address":"","ucode":"8F6A8C7920996E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6a/2d/ec4ed8ce.jpg","comment_is_top":false,"comment_ctime":1552736068,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552736068","product_id":100020801,"comment_content":"老师，你这里都是sql  中where 语句使用索引。<br>对于group by &#47;max()&#47;min()这些操作怎么提升查询效率呢？ <br>他们使用索引的机制是否跟where是一样的呢？","like_count":0},{"had_liked":false,"id":76478,"user_name":"ProgramGeek","can_delete":false,"product_type":"c1","uid":1008217,"ip_address":"","ucode":"3F0E3963C4FB57","user_header":"https://static001.geekbang.org/account/avatar/00/0f/62/59/a01a5ddd.jpg","comment_is_top":false,"comment_ctime":1552616503,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552616503","product_id":100020801,"comment_content":"老师，您好，问下，如果查询条件使用的是普通索引（或是联合索引的最左原则字段），查询结果是联合索引的字段或是主键，不用回表操作，直接返回结果，减少IO磁盘读写读取正行数据<br>评论里面写的这句话，关于联合索引的<br>(1)CREATE TABLE `tuser` (<br>  `id` int(11) NOT NULL,<br>  `id_card` varchar(32) DEFAULT NULL,<br>  `name` varchar(32) DEFAULT NULL,<br>  `age` int(11) DEFAULT NULL,<br>  `ismale` tinyint(1) DEFAULT NULL,<br>  PRIMARY KEY (`id`),<br>  KEY `id_card` (`id_card`),<br>  KEY `name_age` (`name`,`age`)<br>) ENGINE=InnoDB<br>(2)CREATE TABLE `tuser` (<br>  `id` int(11) NOT NULL,<br>  `id_card` varchar(32) DEFAULT NULL,<br>  `name` varchar(32) DEFAULT NULL,<br>  `age` int(11) DEFAULT NULL,<br>  `ismale` tinyint(1) DEFAULT NULL,<br>  PRIMARY KEY (`id`),<br>  KEY `id_card` (`id_card`,`name`)<br>) ENGINE=InnoDB<br>这两种方式都是根据select name from tuser where `id_card`=xxx，都不用回表吗？能说下(1),(2)的存储结构吗？","like_count":0},{"had_liked":false,"id":76470,"user_name":"方人其","can_delete":false,"product_type":"c1","uid":1197200,"ip_address":"","ucode":"CF44EBC59493E1","user_header":"https://static001.geekbang.org/account/avatar/00/12/44/90/33ec20bf.jpg","comment_is_top":false,"comment_ctime":1552615089,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552615089","product_id":100020801,"comment_content":"前缀索引是怎么查询的呢？例如张%","like_count":0},{"had_liked":false,"id":75449,"user_name":"Isle","can_delete":false,"product_type":"c1","uid":1445270,"ip_address":"","ucode":"DE0635B5A885E1","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIRjRNtrfIicwh3xt0mzy5PrNHkdPN9Xwj4QIechQrWicJwyKBFejOkGSiaRT4dic9eibygYyJWTp1xVDw/132","comment_is_top":false,"comment_ctime":1552399512,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1552399512","product_id":100020801,"comment_content":"回答：只有c索引时，查出来是无序的，，而有ca,cb索引不需要重新排序需要重新排序","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136365,"discussion_content":"ca可以优化掉。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579138710,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75431,"user_name":"Isle","can_delete":false,"product_type":"c1","uid":1445270,"ip_address":"","ucode":"DE0635B5A885E1","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIRjRNtrfIicwh3xt0mzy5PrNHkdPN9Xwj4QIechQrWicJwyKBFejOkGSiaRT4dic9eibygYyJWTp1xVDw/132","comment_is_top":false,"comment_ctime":1552396910,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1552396910","product_id":100020801,"comment_content":"老师，select * from T where k between 3 and 5  这个语句上文展示有五个步骤，第五步不是很理解，为什么还要继续查k=6呢，3和5不就可以确定区间了吗","like_count":0,"discussions":[{"author":{"id":1577580,"avatar":"https://static001.geekbang.org/account/avatar/00/18/12/6c/61a598e9.jpg","nickname":"苏暮沉觞","note":"","ucode":"532B816D4EF47B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":847,"discussion_content":"因为他不知道5后面还有没有符合要求的值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562120855,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74848,"user_name":"FreeMason","can_delete":false,"product_type":"c1","uid":1340120,"ip_address":"","ucode":"3D58AC2F9AB345","user_header":"https://static001.geekbang.org/account/avatar/00/14/72/d8/9eedbc5e.jpg","comment_is_top":false,"comment_ctime":1552304061,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552304061","product_id":100020801,"comment_content":"丁奇老师，在不回表的情况及条件相同的情况下，主键 limit 查询 （SQL_2） 比 二级索引 limit 查询（SQL_1）慢？不明白<br><br>分析：<br>    1、可能是数据量过大造成，把数据降到约 100 万，结果一样<br><br>MySQL 版本：5.7.22<br><br>SQL_1 与 SQL_2 EXPLAIN 结果只有使用索引不同，其它一致（order by 可有可无）：<br><br>SQL_1：EXPLAIN SELECT id FROM `user` ORDER BY girl_name LIMIT 8000000,100;<br>SQL_2：EXPLAIN SELECT id FROM `user` ORDER BY id LIMIT 8000000,100;<br><br>经过多次测试 SQL_1 比 SQL_2 快不少：<br><br>SQL_1：EXPLAIN SELECT id FROM `user` ORDER BY girl_name LIMIT 8000000,100;<br>SQL_2：EXPLAIN SELECT id FROM `user` ORDER BY id LIMIT 8000000,100;<br><br>建表语句<br><br>CREATE TABLE `user` (<br>\t`id` INT(11) NOT NULL AUTO_INCREMENT,<br>\t`girl_name` VARCHAR(20) NULL DEFAULT NULL COMMENT &#39;名称&#39;,<br>\tPRIMARY KEY (`id`),<br>\tINDEX `key` (`girl_name`),<br>\tFULLTEXT INDEX `girl_name` (`girl_name`)<br>)<br>COLLATE=&#39;utf8_general_ci&#39;<br>ENGINE=InnoDB<br>;<br><br>第一波测试数据量约：848 万条<br>第二波测试数据量约：100 万条<br><br><br><br>","like_count":0},{"had_liked":false,"id":73618,"user_name":"Gordon","can_delete":false,"product_type":"c1","uid":1447449,"ip_address":"","ucode":"5CC8D40FA9CFBB","user_header":"https://static001.geekbang.org/account/avatar/00/16/16/19/e6a99866.jpg","comment_is_top":false,"comment_ctime":1551941690,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551941690","product_id":100020801,"comment_content":"个人感觉课后习题那里先讲一下index extension会更好理解一些～","like_count":0},{"had_liked":false,"id":72402,"user_name":"鸠翱","can_delete":false,"product_type":"c1","uid":1116568,"ip_address":"","ucode":"7D498AF2BC4289","user_header":"https://static001.geekbang.org/account/avatar/00/11/09/98/b11c372b.jpg","comment_is_top":false,"comment_ctime":1551609664,"is_pvip":false,"replies":[{"id":"26221","content":"额，其实5.6的第一个GA版本是2013年2月份，也算是挺早的拉😆","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551616565,"ip_address":"","comment_id":72402,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551609664","product_id":100020801,"comment_content":"突然发现这个索引下推不应该是个理所当然就应该有的功能吗 既然数据在索引里能查到自然就应该拿来过滤啊 为什么到5.6才有这个功能呢","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441573,"discussion_content":"额，其实5.6的第一个GA版本是2013年2月份，也算是挺早的拉😆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551616565,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72046,"user_name":"刘志兵","can_delete":false,"product_type":"c1","uid":1441734,"ip_address":"","ucode":"A90C2FA49EDC23","user_header":"https://static001.geekbang.org/account/avatar/00/15/ff/c6/8b5cbe97.jpg","comment_is_top":false,"comment_ctime":1551505164,"is_pvip":false,"replies":[{"id":"26135","content":"b+树的结构决定的哈<br>你可以想下查找的过程<br><br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551529723,"ip_address":"","comment_id":72046,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551505164","product_id":100020801,"comment_content":"老师，为什么索引定位到左边界之后就要遍历直到不满足条件，而不能直接定位到右边界","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441435,"discussion_content":"b+树的结构决定的哈\n你可以想下查找的过程\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551529723,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71195,"user_name":"唐僧洗头爱飘柔","can_delete":false,"product_type":"c1","uid":1203894,"ip_address":"","ucode":"3E4EBC8AEC649A","user_header":"https://static001.geekbang.org/account/avatar/00/12/5e/b6/a6bc2065.jpg","comment_is_top":false,"comment_ctime":1551280767,"is_pvip":false,"replies":[{"id":"25502","content":"字段大小（单个name占用的空间比age大）","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551315436,"ip_address":"","comment_id":71195,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551280767","product_id":100020801,"comment_content":"文中提到考虑空间时，name字段是比age字段大的，所以建议用(name，age)联合索引和age单个索引。不太明白这里说的大，指的是?","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441038,"discussion_content":"字段大小（单个name占用的空间比age大）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551315436,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71082,"user_name":"rm","can_delete":false,"product_type":"c1","uid":1129548,"ip_address":"","ucode":"17EAF6256277E4","user_header":"https://static001.geekbang.org/account/avatar/00/11/3c/4c/cd7c8019.jpg","comment_is_top":false,"comment_ctime":1551260319,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1551260319","product_id":100020801,"comment_content":"课后答案：不。 同事给出的两条SQL，根据最左原则，它们都会命中索引 &#39;c&#39;, &#39;ca&#39;, &#39;cb&#39;,所以建立&#39;ca&#39;,&#39;cb&#39;索引不是必要的。应该删除","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136372,"discussion_content":"ca删除，cb留下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579139135,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71044,"user_name":"我是个小白","can_delete":false,"product_type":"c1","uid":1371579,"ip_address":"","ucode":"FDC5B49F005CAC","user_header":"https://static001.geekbang.org/account/avatar/00/14/ed/bb/95a7541c.jpg","comment_is_top":false,"comment_ctime":1551252836,"is_pvip":false,"replies":[{"id":"25466","content":"表示这时候优化器认为全表扫描比较好。。","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551265685,"ip_address":"","comment_id":71044,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551252836","product_id":100020801,"comment_content":"CREATE TABLE c_test(<br>cid INT,<br>cnum1 INT,<br>cnum2 INT<br>);<br>ALTER TABLE c_test ADD INDEX index1(cnum1,cnum2);<br>DELIMITER ;;<br>CREATE PROCEDURE idata()<br>BEGIN<br>DECLARE i INT;<br>SET i=1;<br>WHILE(i&lt;100000)DO<br>\tINSERT INTO c_test VALUES(i,i,i);<br>SET i=i+1;<br>END WHILE;<br>END;;<br>DELIMITER ;<br>CALL idata();<br>SELECT COUNT(*) FROM c_test;<br>EXPLAIN SELECT * FROM c_test WHERE cnum1&gt;999 AND cnum2=1000;<br>老师这是我的实现过程，我用explain看并没有使用到索引啊。<br>id\tselect_type\ttable\tpartitions\ttype\tpossible_keys\tkey\tkey_len\tref\trows\tfiltered\tExtra<br>1\tSIMPLE\tc_test\t\\N\tALL\tindex1\t\\N\t\\N\t\\N\t100089\t5.00\tUsing where","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440957,"discussion_content":"表示这时候优化器认为全表扫描比较好。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551265685,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70950,"user_name":"会飞的猪","can_delete":false,"product_type":"c1","uid":1340194,"ip_address":"","ucode":"05EB9BF31F603D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIEONynt1pibq4AInxllIgSz3zJrB4tiabJwibYAohfcGTvScicboZkM03Wgic4dA4H1obcyAm9nbGR4pA/132","comment_is_top":false,"comment_ctime":1551232056,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551232056","product_id":100020801,"comment_content":"因为主键索引是按先a后b排序的，所以c=n的数据取出后可以直接用a，b索引排序，但是按b排序的话无法用a,b索引，所以必须建一个c,b索引。先where，c再order，b。请问一下，order和where如果用联合索引里的两个字段也是可以成功使用索引的吗？","like_count":0},{"had_liked":false,"id":70754,"user_name":"我是个小白","can_delete":false,"product_type":"c1","uid":1371579,"ip_address":"","ucode":"FDC5B49F005CAC","user_header":"https://static001.geekbang.org/account/avatar/00/14/ed/bb/95a7541c.jpg","comment_is_top":false,"comment_ctime":1551175492,"is_pvip":false,"replies":[{"id":"25233","content":"是不是数据量不够大，初始化数据要多些哈<br><br>后面这类问题，尽量直接给出你的复现步骤哦","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551179012,"ip_address":"","comment_id":70754,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551175492","product_id":100020801,"comment_content":"老师我建了一张表，其中两个整形字段a和b建了联合索引，但是查表的时候 where a&gt;1 and b=1 或者 where b=1 and a&gt;1这样的条件发现没有用到索引啊。这是什么情况呢。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440810,"discussion_content":"是不是数据量不够大，初始化数据要多些哈\n\n后面这类问题，尽量直接给出你的复现步骤哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551179012,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68933,"user_name":"Barnett","can_delete":false,"product_type":"c1","uid":1072638,"ip_address":"","ucode":"18516BD03E2D67","user_header":"https://static001.geekbang.org/account/avatar/00/10/5d/fe/028dd54b.jpg","comment_is_top":false,"comment_ctime":1550629901,"is_pvip":false,"replies":[{"id":"24467","content":"因为后面的 %","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1550640416,"ip_address":"","comment_id":68933,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550629901","product_id":100020801,"comment_content":"老师，问一下，mysql&gt; select * from tuser where name like &#39;张 %&#39; and age=10 and ismale=1;<br>name和age不是联合索引吗，为什么只用到了name这个索引？<br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439876,"discussion_content":"因为后面的 %","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550640416,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68580,"user_name":"JamesCao","can_delete":false,"product_type":"c1","uid":1331761,"ip_address":"","ucode":"59589994BFBB35","user_header":"https://static001.geekbang.org/account/avatar/00/14/52/31/c014bebe.jpg","comment_is_top":false,"comment_ctime":1550548124,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1550548124","product_id":100020801,"comment_content":"删除记录，索引还在，空间冗余，定期重建索引","like_count":0},{"had_liked":false,"id":68001,"user_name":"Mingjie","can_delete":false,"product_type":"c1","uid":1356943,"ip_address":"","ucode":"0B83CD820E5F61","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLwVgXx5UCmXuUJIibytjfxlfia7XJBX6ricaVuGpAREA9fm8mK7WwKXEzictLQRIicvrIgRCGtrwfsS9g/132","comment_is_top":false,"comment_ctime":1550380996,"is_pvip":false,"replies":[{"id":"25258","content":"不一定，也可能是一个联合索引的一部分，<br>比如有一个联合索引 (k, a),<br>然后执行 select a from t where k= ... 也是可以用上覆盖索引的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551182963,"ip_address":"","comment_id":68001,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550380996","product_id":100020801,"comment_content":"对于覆盖索引的疑问，当 select ”非主键“ from T where k = **；的时候是不是就不算覆盖索引了，只有查询需求是主键的时候才算覆盖索引。<br>如果是这样的话，还是有回表的操作，那当查询”非主键“时的过程是不是如下：<br>1，通过索引 k = 123 找到 ID主键 1**；<br>2，通过ID主键 1** 找到对应的数据行 row；<br>3，对比row中的 “非主键” 字段，相等就返回给Server层","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439463,"discussion_content":"不一定，也可能是一个联合索引的一部分，\n比如有一个联合索引 (k, a),\n然后执行 select a from t where k= ... 也是可以用上覆盖索引的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551182963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65052,"user_name":"杰之7","can_delete":false,"product_type":"c1","uid":1297232,"ip_address":"","ucode":"F7DA2E21085332","user_header":"https://static001.geekbang.org/account/avatar/00/13/cb/50/66d0bd7f.jpg","comment_is_top":false,"comment_ctime":1549013336,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1549013336","product_id":100020801,"comment_content":"通过这两节课程的学习及复习，对索引的数据结构，索引的模型及索引的类型有了更好的理解。<br><br>在这一节中，老师通过select ID from T where k between 3 and 5这个查询介绍了覆盖索引，可以不回表，从而减少树搜索的次数。<br><br>在覆盖索引的基础上，通过身份证号和姓名引申了联合索引，但建立更多的联合所以是有性能和时间上的代价的，维护权衡就是DBA的工作。<br><br>有了联合索引，就可以对索引内的字段进行排序，要做的就是如何安排排序，更少的维护索引和空间的考虑。<br><br>老师通过select * from tuser where name like &quot;张%&quot; and age=10 and ismale=1的例子介绍了索引下推，这样可以更少次数的回表，达到更少访问数据库的资源。<br><br>回到老师的问题，我认为效率是不好的，通过排序返回一条语句就用更多的索引来维护的话，数据量大的话索引的效率应该会更慢。<br><br>","like_count":0},{"had_liked":false,"id":63810,"user_name":"绿里奇迹","can_delete":false,"product_type":"c1","uid":1173341,"ip_address":"","ucode":"E1E7BC3AAEC86A","user_header":"https://static001.geekbang.org/account/avatar/00/11/e7/5d/a99d32d5.jpg","comment_is_top":false,"comment_ctime":1548515404,"is_pvip":false,"replies":[{"id":"22567","content":"name和age拼起来","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548547043,"ip_address":"","comment_id":63810,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548515404","product_id":100020801,"comment_content":"最左前缀原则中的如何安排索引内的字段顺序这一段没有看明白。是指（name，age）联合索引顺序是按照name字段顺序来排序吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437721,"discussion_content":"name和age拼起来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548547043,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63301,"user_name":"哈哈哈","can_delete":false,"product_type":"c1","uid":1248876,"ip_address":"","ucode":"C40ABE7161EFAE","user_header":"https://static001.geekbang.org/account/avatar/00/13/0e/6c/1f3b1372.jpg","comment_is_top":false,"comment_ctime":1548319478,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1548319478","product_id":100020801,"comment_content":"我觉得ca没必要，cb有必要","like_count":0},{"had_liked":false,"id":62696,"user_name":"happy涛","can_delete":false,"product_type":"c1","uid":1387892,"ip_address":"","ucode":"9D67FA68C40904","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIaxhA2xdIRKUeRaiaMAVxrGJcImhY0qWoDJbLLW3l8uCvXicrHJ4GaRBkZBz4RAdaSh0YsIOJFyrhQ/132","comment_is_top":false,"comment_ctime":1548135550,"is_pvip":false,"replies":[{"id":"22273","content":"Using index condition 用了呀<br>这里的rows是估计值，你用慢查询看","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548239391,"ip_address":"","comment_id":62696,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548135550","product_id":100020801,"comment_content":"老师：请问为何下面的执行结果会遍历4行。<br>CREATE TABLE `tuser` (<br>  `id` int(11) NOT NULL,<br>  `id_card` varchar(32) COLLATE utf8_unicode_ci DEFAULT NULL,<br>  `name` varchar(32) COLLATE utf8_unicode_ci DEFAULT NULL,<br>  `age` int(11) DEFAULT NULL,<br>  `ismale` tinyint(1) DEFAULT NULL,<br>  PRIMARY KEY (`id`),<br>  KEY `id_card` (`id_card`),<br>  KEY `name_age` (`name`,`age`) USING BTREE<br>) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;<br>1\t123\t李四\t20\t0<br>2\t555\t王五\t10\t1<br>3\t1111\t张六\t30\t0<br>4\t222\t张三\t10\t1<br>5\t333\t张三\t10\t0<br>6\t444\t张三\t20\t1<br>mysql-&gt;8.0.12<br>隔离级别：REPEATABLE-READ<br>  explain select * from tuser where `name` like &#39;张%&#39; and age=&#39;10&#39;;<br>1\tSIMPLE\ttuser\t\trange\tname_age\tname_age\t104\t\t4\t16.67\tUsing index condition<br>为何没有用到您说的：索引下推优化","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437310,"discussion_content":"Using index condition 用了呀\n这里的rows是估计值，你用慢查询看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548239391,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62200,"user_name":"happy涛","can_delete":false,"product_type":"c1","uid":1387892,"ip_address":"","ucode":"9D67FA68C40904","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIaxhA2xdIRKUeRaiaMAVxrGJcImhY0qWoDJbLLW3l8uCvXicrHJ4GaRBkZBz4RAdaSh0YsIOJFyrhQ/132","comment_is_top":false,"comment_ctime":1547978871,"is_pvip":false,"replies":[{"id":"21998","content":"表结构，表数据和explain的结果发下","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547981171,"ip_address":"","comment_id":62200,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547978871","product_id":100020801,"comment_content":"老师：<br>请问为何下面的语句执行结果会遍历4行。<br>name,age联合索引<br>explain select * from tuser where `name` like &#39;张%&#39; and age=&#39;10&#39; and ismale=1;<br>MYSQL版本是5.7<br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437134,"discussion_content":"表结构，表数据和explain的结果发下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547981171,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62070,"user_name":"阿邱","can_delete":false,"product_type":"c1","uid":1281762,"ip_address":"","ucode":"A3D1A90E01D83D","user_header":"https://static001.geekbang.org/account/avatar/00/13/8e/e2/1e70c61d.jpg","comment_is_top":false,"comment_ctime":1547901933,"is_pvip":false,"replies":[{"id":"21966","content":"如果联合索引是由a,b组成的<br>那么 select b from t where a=N 就不用回表","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547914363,"ip_address":"","comment_id":62070,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1547901933","product_id":100020801,"comment_content":"联合索引怎么就不回表了，按照前面的例子只有查询字段是主键索引id的时候才不用回表呀！这个就不好理解了呀！","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437084,"discussion_content":"如果联合索引是由a,b组成的\n那么 select b from t where a=N 就不用回表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547914363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1237583,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e2/4f/df01f65e.jpg","nickname":"Danfēng","note":"","ucode":"E5B3451F1D0441","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":281407,"discussion_content":"刚好，联合索引里面的内容就有你要查询的字段内容，就直接返回索引里面的内容，不用再去回表查询对应的row","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591721444,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62069,"user_name":"阿邱","can_delete":false,"product_type":"c1","uid":1281762,"ip_address":"","ucode":"A3D1A90E01D83D","user_header":"https://static001.geekbang.org/account/avatar/00/13/8e/e2/1e70c61d.jpg","comment_is_top":false,"comment_ctime":1547901599,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547901599","product_id":100020801,"comment_content":"那么，如果既有联合查询，又有基于 a、b 各自的查询呢？查询条件里面只有 b 的语句，是无法使用 (a,b) 这个联合索引的，等地方<br><br>这些不会理解呀！举个例子或括号提示，否则基本断片了。","like_count":0},{"had_liked":false,"id":62067,"user_name":"阿邱","can_delete":false,"product_type":"c1","uid":1281762,"ip_address":"","ucode":"A3D1A90E01D83D","user_header":"https://static001.geekbang.org/account/avatar/00/13/8e/e2/1e70c61d.jpg","comment_is_top":false,"comment_ctime":1547901471,"is_pvip":false,"replies":[{"id":"21965","content":"这个文章里面 (a,b) 就表示用字段a、b组成的联合索引<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547914324,"ip_address":"","comment_id":62067,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547901471","product_id":100020801,"comment_content":"那么，如果既有联合查询，又有基于 a、b 各自的查询呢？查询条件里面只有 b 的语句，是无法使用 (a,b) 这个联合索引的，等地方<br><br>这个表达很难让人理解呀，举例子或者括号提醒，否则基本上断片了。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437082,"discussion_content":"这个文章里面 (a,b) 就表示用字段a、b组成的联合索引\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547914324,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61317,"user_name":"devil","can_delete":false,"product_type":"c1","uid":1259625,"ip_address":"","ucode":"BB6090411BAA23","user_header":"https://static001.geekbang.org/account/avatar/00/13/38/69/864569a4.jpg","comment_is_top":false,"comment_ctime":1547657607,"is_pvip":false,"replies":[{"id":"21823","content":"1. 覆盖索引<br>2. 这个不是索引下推哈，就是覆盖索引的概念（之所以要纠结概念，是因为覆盖索引5.5就有了，而索引下推5.6才有）<br>3. 走这个联合索引，因为快","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547690413,"ip_address":"","comment_id":61317,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547657607","product_id":100020801,"comment_content":"有个问题不是很确定，身份证号和name做联合索引，用身份证查name会快是什么原理？查询的时候是会在索引数里直接读出name，这是下推索引才会这么做吗？还有一个问题这时候查询是走这个联合索引还是身份证的主键索引，为什么？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436830,"discussion_content":"1. 覆盖索引\n2. 这个不是索引下推哈，就是覆盖索引的概念（之所以要纠结概念，是因为覆盖索引5.5就有了，而索引下推5.6才有）\n3. 走这个联合索引，因为快","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547690413,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":60786,"user_name":"华杉","can_delete":false,"product_type":"c1","uid":1085340,"ip_address":"","ucode":"F9CE26923F4B9C","user_header":"https://static001.geekbang.org/account/avatar/00/10/8f/9c/ef58929f.jpg","comment_is_top":false,"comment_ctime":1547552001,"is_pvip":false,"replies":[{"id":"21675","content":"过程确实就是这样的，先拿到id，然后id去主键索引查整行的数据<br><br>这时候就用不上覆盖索引啦","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547553174,"ip_address":"","comment_id":60786,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547552001","product_id":100020801,"comment_content":"老师，关于覆盖索引这块，我有点疑问，如果select刚好要查询ID，我觉得是可以覆盖索引的，但是如果我要提取整个行数据，该怎么要呢，先查出ID list，然后select where id in ?","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436619,"discussion_content":"过程确实就是这样的，先拿到id，然后id去主键索引查整行的数据\n\n这时候就用不上覆盖索引啦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547553174,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58889,"user_name":"悟空","can_delete":false,"product_type":"c1","uid":1005915,"ip_address":"","ucode":"398CD5C37043B9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/5b/b47efcc8.jpg","comment_is_top":false,"comment_ctime":1547224678,"is_pvip":false,"replies":[{"id":"21351","content":"对，起不到快速定位数据的作用了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547269222,"ip_address":"","comment_id":58889,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1547224678","product_id":100020801,"comment_content":"老师，我想确认一个简单的问题，如果一个表T包含id,a,b,c三个字段，id是主键，a,b,c是组合索引，查询条件是select a from T where b=&#39;x&#39; 是不是组合索引没有起作用呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436243,"discussion_content":"对，起不到快速定位数据的作用了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547269222,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1342533,"avatar":"https://static001.geekbang.org/account/avatar/00/14/7c/45/19e24f98.jpg","nickname":"见＆不见","note":"","ucode":"53C6167BB03424","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474,"discussion_content":"您好 这种情况下为啥我explain 上面的SQL是用到了索引 type 是index","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561606868,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58385,"user_name":"邱明成","can_delete":false,"product_type":"c1","uid":1338761,"ip_address":"","ucode":"BA5D9FD3D2D70B","user_header":"https://static001.geekbang.org/account/avatar/00/14/6d/89/e5ad4bbc.jpg","comment_is_top":false,"comment_ctime":1547048602,"is_pvip":false,"replies":[{"id":"21050","content":"字节数","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547085173,"ip_address":"","comment_id":58385,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547048602","product_id":100020801,"comment_content":"name字段比age字段大是啥意思","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436039,"discussion_content":"字节数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547085173,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58101,"user_name":"LI","can_delete":false,"product_type":"c1","uid":1017732,"ip_address":"","ucode":"D33B594D2D3EE4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/87/84/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1546997708,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546997708","product_id":100020801,"comment_content":"在order by文章过来的，喜欢老师这样提醒我们复习","like_count":0},{"had_liked":false,"id":57994,"user_name":"coderbee","can_delete":false,"product_type":"c1","uid":1005530,"ip_address":"","ucode":"02339998217473","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/da/0adccef5.jpg","comment_is_top":false,"comment_ctime":1546957938,"is_pvip":false,"replies":[{"id":"20906","content":"二级索引都包含主键，前面的图没有强调，不过还是有包含","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546966469,"ip_address":"","comment_id":57994,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1546957938","product_id":100020801,"comment_content":"林老师，这期问题的答案说索引 c 跟 ca 的数据模型一致，那么图一的索引 k 的非叶子节点是否应该包含主键列呢？要不然没有体现出二级索引会把主键算进去，还是有序的。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435864,"discussion_content":"二级索引都包含主键，前面的图没有强调，不过还是有包含","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546966469,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136400,"discussion_content":"索引k的非叶子节点应该是叶子节点的地址吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579140540,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56847,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1546567017,"is_pvip":false,"replies":[{"id":"21097","content":"对的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547116733,"ip_address":"","comment_id":56847,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1546567017","product_id":100020801,"comment_content":"ca 和 cb 索引存在的意义：order by 时天然有序，不需要额外排序开销。<br>但是索引 c 就可以删除了。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435275,"discussion_content":"对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547116733,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136404,"discussion_content":"索引C不能删除，ca可以删除，毕竟得留一个能起到ca索引作用的索引。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579140787,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56616,"user_name":"小豹子","can_delete":false,"product_type":"c1","uid":1346267,"ip_address":"","ucode":"972F3E6BF0FDEA","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/db/76ab84c6.jpg","comment_is_top":false,"comment_ctime":1546506477,"is_pvip":false,"replies":[{"id":"20429","content":"1. cab<br>2. cba<br>2. 系统生成一个主键","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546525403,"ip_address":"","comment_id":56616,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546506477","product_id":100020801,"comment_content":"先说我的答案吧，(c,a)这个索引可以省略，普通索引隐式带着主键，所以c索引隐式等于(c,a,b)，因此那条sql走c索引就行了。<br>那么接着我就有三个问题了。<br>1.(c,a)索引是只存c,a两个字段，还是c,a,b，还是c,a,a,b（mysql应该不至于这么干）？<br>2.(c,b)索引存的是(c,b)还是(c,b,a,b)？<br>3.如果我只有一个普通索引，没有主键，那么索引怎么回表？有基于oracle的那种rowid吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435149,"discussion_content":"1. cab\n2. cba\n2. 系统生成一个主键","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546525403,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56543,"user_name":"安安很强大","can_delete":false,"product_type":"c1","uid":1265479,"ip_address":"","ucode":"C996799DB23588","user_header":"https://static001.geekbang.org/account/avatar/00/13/4f/47/2b048d39.jpg","comment_is_top":false,"comment_ctime":1546485103,"is_pvip":false,"replies":[{"id":"20386","content":"要优化排序的话，在考虑下😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546486295,"ip_address":"","comment_id":56543,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1546485103","product_id":100020801,"comment_content":"由于联合主键（a，b）,又有索引c了，c索引的叶子节点有a，b了，所以不需要 ca，cb索引","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435106,"discussion_content":"要优化排序的话，在考虑下😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546486295,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136407,"discussion_content":"ca去掉就行。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579140854,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56403,"user_name":"无菇朋友","can_delete":false,"product_type":"c1","uid":1035562,"ip_address":"","ucode":"80482C5F0464A3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cd/2a/bdbed6ed.jpg","comment_is_top":false,"comment_ctime":1546437892,"is_pvip":false,"replies":[{"id":"20319","content":"在这个查询上没有区别<br><br>主要是如果有身份证+姓名的索引（为了使用覆盖索引）<br><br>那么就没有必要加身份证号单独的索引","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546440696,"ip_address":"","comment_id":56403,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546437892","product_id":100020801,"comment_content":"老师您好，有个问题想请教一下，文中说了利用最左前缀原则可以利用 身份证号+姓名 这个索引支持“用身份证号查询地址”这个需求，而这个需要回表一次，利用身份证号字段索引也需要回表一次，这两有什么区别么","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435022,"discussion_content":"在这个查询上没有区别\n\n主要是如果有身份证+姓名的索引（为了使用覆盖索引）\n\n那么就没有必要加身份证号单独的索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546440696,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55965,"user_name":"spraith","can_delete":false,"product_type":"c1","uid":1141702,"ip_address":"","ucode":"7FBC54DF0BBF50","user_header":"https://static001.geekbang.org/account/avatar/00/11/6b/c6/2534e14a.jpg","comment_is_top":false,"comment_ctime":1546356000,"is_pvip":false,"replies":[{"id":"20143","content":"有mrr优化，就是一起回表，有更大概率是顺序访问主键数据。","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546361862,"ip_address":"","comment_id":55965,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546356000","product_id":100020801,"comment_content":"老师，请问一下，图1的例子中，mysql真实的执行顺序是“每通过一个索引取到一个主键值，就去回表一次”，还是“通过多个索引取到多个主键值后，再拿这些主键一起去回表”？这两种方案，在 mysql 执行时会有效率差异吗？<br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434901,"discussion_content":"有mrr优化，就是一起回表，有更大概率是顺序访问主键数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546361862,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55627,"user_name":"尘封","can_delete":false,"product_type":"c1","uid":1247006,"ip_address":"","ucode":"CEE0C006387A03","user_header":"https://static001.geekbang.org/account/avatar/00/13/07/1e/bdbe93f4.jpg","comment_is_top":false,"comment_ctime":1546245569,"is_pvip":false,"replies":[{"id":"20084","content":"额，可否给一下例子😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546259096,"ip_address":"","comment_id":55627,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546245569","product_id":100020801,"comment_content":"林老师，再麻烦问一下，mysql在确定first key的时候为什么对于&gt;=可以继续匹配，而对&gt;却停止匹配了，这个能从B+树遍历的原理释一下吗？这个问题困扰很久，一直想不通。感谢。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434815,"discussion_content":"额，可否给一下例子😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546259096,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55401,"user_name":"尘封","can_delete":false,"product_type":"c1","uid":1247006,"ip_address":"","ucode":"CEE0C006387A03","user_header":"https://static001.geekbang.org/account/avatar/00/13/07/1e/bdbe93f4.jpg","comment_is_top":false,"comment_ctime":1546161628,"is_pvip":false,"replies":[{"id":"20047","content":"1. 是的<br>2. 是因为这时候走了全索引扫描，type:index说明了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546168336,"ip_address":"","comment_id":55401,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1546161628","product_id":100020801,"comment_content":"【第二部分】<br>SQL1<br>dba@db_test 05:08:26&gt;desc select * from trade_detail where tradeid&gt;=&#39;aaaaaaac&#39; and trade_step&gt;2\\G<br>*************************** 1. row ***************************<br>           id: 1<br>  select_type: SIMPLE<br>        table: trade_detail<br>   partitions: NULL<br>         type: range<br>possible_keys: idx_test<br>          key: idx_test<br>      key_len: 104<br>          ref: NULL<br>         rows: 2<br>     filtered: 33.33<br>        Extra: Using where; Using index<br>SQL2<br>dba@db_test 05:08:47&gt;desc select * from trade_detail where tradeid&gt;&#39;aaaaaaac&#39; and trade_step&gt;2\\G <br>*************************** 1. row ***************************<br>           id: 1<br>  select_type: SIMPLE<br>        table: trade_detail<br>   partitions: NULL<br>         type: range<br>possible_keys: idx_test<br>          key: idx_test<br>      key_len: 99<br>          ref: NULL<br>         rows: 1<br>     filtered: 33.33<br>        Extra: Using where; Using index<br>SQL3<br>dba@db_test 05:09:22&gt;desc select * from trade_detail where tradeid&gt;=&#39;aaaaaaaa&#39; and trade_step&lt;4\\G <br>*************************** 1. row ***************************<br>           id: 1<br>  select_type: SIMPLE<br>        table: trade_detail<br>   partitions: NULL<br>         type: index<br>possible_keys: idx_test<br>          key: idx_test<br>      key_len: 203<br>          ref: NULL<br>         rows: 11<br>     filtered: 33.33<br>        Extra: Using where; Using index<br>老师，咨询一下<br>(1)从执行计划看到，SQL1使用到了联合索引的第一列和第二列，SQL2只使用到了联合索引的第一列，这个是不是和tradeid&gt;=，tradeid&gt;有关系？也就是说对于联合索引，如果带有等号=就可以继续用下一列索引，如果不带=就无法使用下一列索引。<br>(2)我很奇怪的是，为什么SQL3用了索引的全部列？是因为我这个例子就4个列，而索引idx_test包含了全部内容，这种不合理的测试导致的吗？<br>多谢。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434762,"discussion_content":"1. 是的\n2. 是因为这时候走了全索引扫描，type:index说明了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546168336,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1548798,"avatar":"https://static001.geekbang.org/account/avatar/00/17/a1/fe/250e64d7.jpg","nickname":"陈刚","note":"","ucode":"080E69D3687E73","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304098,"discussion_content":"我没有看明白 为什么说SQL2只使用联合索引的第一列呢？ ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599468306,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55400,"user_name":"尘封","can_delete":false,"product_type":"c1","uid":1247006,"ip_address":"","ucode":"CEE0C006387A03","user_header":"https://static001.geekbang.org/account/avatar/00/13/07/1e/bdbe93f4.jpg","comment_is_top":false,"comment_ctime":1546161618,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546161618","product_id":100020801,"comment_content":"因为留言内容太长，我分两部分留言，多谢<br>【第一部分】<br>dba@db_test 05:08:05&gt;show create table trade_detail\\G<br>*************************** 1. row ***************************<br>       Table: trade_detail<br>Create Table: CREATE TABLE `trade_detail` (<br>  `id` int(11) NOT NULL,<br>  `tradeid` varchar(32) DEFAULT NULL,<br>  `trade_step` int(11) DEFAULT NULL,<br>  `step_info` varchar(32) DEFAULT NULL,<br>  PRIMARY KEY (`id`),<br>  KEY `idx_test` (`tradeid`,`trade_step`,`step_info`)<br>) ENGINE=InnoDB DEFAULT CHARSET=utf8<br>dba@db_test 05:08:14&gt;select * from trade_detail;<br>+----+----------+------------+--------------+<br>| id | tradeid  | trade_step | step_info    |<br>+----+----------+------------+--------------+<br>|  1 | aaaaaaaa |          1 | cus          |<br>|  2 | aaaaaaaa |          2 | update       |<br>|  3 | aaaaaaaa |          3 | commit       |<br>|  4 | aaaaaaab |          1 | add          |<br>|  5 | aaaaaaab |          2 | update       |<br>|  6 | aaaaaaab |          3 | update again |<br>|  7 | aaaaaaab |          4 | commit       |<br>|  8 | aaaaaaac |          1 | bbc          |<br>|  9 | aaaaaaac |          2 | update       |<br>| 10 | aaaaaaac |          3 | update again |<br>| 11 | aaaaaaac |          4 | commit       |<br>+----+----------+------------+--------------+<br>因为留言内容太长，我分两部分留言，多谢","like_count":0},{"had_liked":false,"id":54980,"user_name":"Douglas","can_delete":false,"product_type":"c1","uid":1073027,"ip_address":"","ucode":"CFDE3D76B9DAE6","user_header":"https://static001.geekbang.org/account/avatar/00/10/5f/83/bb728e53.jpg","comment_is_top":false,"comment_ctime":1545991120,"is_pvip":false,"replies":[{"id":"19890","content":"这个在后面的文章有陆续提到哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545994648,"ip_address":"","comment_id":54980,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545991120","product_id":100020801,"comment_content":"老师我还有两个疑问<br>1， 覆盖索引是如何实现的呢，处理逻辑还是不太明白<br>2，复合索引，是如何存储的","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434639,"discussion_content":"这个在后面的文章有陆续提到哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545994648,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54512,"user_name":"13263818417","can_delete":false,"product_type":"c1","uid":1281708,"ip_address":"","ucode":"5D065E0F352D19","user_header":"","comment_is_top":false,"comment_ctime":1545886594,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545886594","product_id":100020801,"comment_content":"看了索引下推额章节，感觉MySQL5.6之前的版本，联合索引好像是无效的似的，使用的只有最左边的那个列吗？","like_count":0},{"had_liked":false,"id":54337,"user_name":"Kfreer","can_delete":false,"product_type":"c1","uid":1114448,"ip_address":"","ucode":"0B6BA0603963C3","user_header":"https://static001.geekbang.org/account/avatar/00/11/01/50/9ac4905e.jpg","comment_is_top":false,"comment_ctime":1545831560,"is_pvip":false,"replies":[{"id":"19679","content":"额？<br>每个机器规格，参数都会影响测试结果…","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545831838,"ip_address":"","comment_id":54337,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545831560","product_id":100020801,"comment_content":"老师有MySQL的压测数据么","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434431,"discussion_content":"额？\n每个机器规格，参数都会影响测试结果…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545831838,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54228,"user_name":"可凡不凡","can_delete":false,"product_type":"c1","uid":1296289,"ip_address":"","ucode":"9D42D6C5274D48","user_header":"https://static001.geekbang.org/account/avatar/00/13/c7/a1/273bff58.jpg","comment_is_top":false,"comment_ctime":1545811398,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545811398","product_id":100020801,"comment_content":"1 老师好<br>2  前提 code 上有主键索引<br>   update table set name =&#39;zs&#39; where 1=2 or code=1;<br>  像这种情况下 <br>  a.能不能用到索引快速定位 ?<br>  b.如果没有用到索引定位 就是扫描全表吗 这样的话如果在 rr 条件下 会大范围的上 x 锁和 gap 锁吗?<br>  b.1=2会被解析成什么 Google 有的地方说会被解析成 null is null?","like_count":0},{"had_liked":false,"id":52484,"user_name":"Mr.钧👻","can_delete":false,"product_type":"c1","uid":1249939,"ip_address":"","ucode":"D781E030E79245","user_header":"https://static001.geekbang.org/account/avatar/00/13/12/93/3470fc43.jpg","comment_is_top":false,"comment_ctime":1545392416,"is_pvip":false,"replies":[{"id":"19101","content":"会走，可以用“姓名”这部分快速定位","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545396590,"ip_address":"","comment_id":52484,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545392416","product_id":100020801,"comment_content":"老师您好，我有一个疑问。假设表中有三个列：姓名，身份证号，生日。有一个联合索引(姓名，身份证号)，那如果我的where 条件是姓名，生日。会走这个联合索引查询吗？还是会走全表扫描呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433891,"discussion_content":"会走，可以用“姓名”这部分快速定位","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545396590,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52361,"user_name":"司徒公子","can_delete":false,"product_type":"c1","uid":1013140,"ip_address":"","ucode":"6532BEB1362EF3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/94/8f0ada2c.jpg","comment_is_top":false,"comment_ctime":1545367691,"is_pvip":false,"replies":[{"id":"19032","content":"其实就是看扫描行数。我觉得小于100行叫做非常小的表（一般是放些配置参数啥的）<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545372195,"ip_address":"","comment_id":52361,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545367691","product_id":100020801,"comment_content":"在高性能mysql这本书中提到索引并不总是最好的工具，其中提到对于非常小的表，大部分情况下全表扫描更高效，对于中到大型的表，索引就非常有效？我的问题是怎么定义非常小的表呢？怎么定义中到大型的表呢？希望能听到你的见解。☺️","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433844,"discussion_content":"其实就是看扫描行数。我觉得小于100行叫做非常小的表（一般是放些配置参数啥的）\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545372195,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51849,"user_name":"wuxue_123","can_delete":false,"product_type":"c1","uid":1327273,"ip_address":"","ucode":"3086949153D965","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK9z4ADkhDVV2oNaRmetm5QMFB2ayr5hHIJGA3cGibkFxbiaCYuyPwJQB800dMFGqwslmuvXbdulDVw/132","comment_is_top":false,"comment_ctime":1545270204,"is_pvip":false,"replies":[{"id":"18792","content":"如果第二个查询不多，我会选择就只有 （身份证号，姓名）这个索引，然后查地址的语句，可以用上这个索引，回表查","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545271718,"ip_address":"","comment_id":51849,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545270204","product_id":100020801,"comment_content":"老师，您好： 关于“根据身份证查询地址”这个有点疑问，当有索引（身份证号，姓名）这个索引，确实按照最左前缀原则可以走索引，但是查询地址是要回表的吧，如果加索引（身份证号，地址）就不回回表了，但是会有维护索引的成本，那该如何舍取呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433648,"discussion_content":"如果第二个查询不多，我会选择就只有 （身份证号，姓名）这个索引，然后查地址的语句，可以用上这个索引，回表查","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545271718,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51023,"user_name":"赖阿甘","can_delete":false,"product_type":"c1","uid":1351988,"ip_address":"","ucode":"77493FE85CBAF8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTICBNZjA9hW65x6g9b2iaicKUJW5gxFxtgPXH9Cqp6eyFfY1sD2hVY4dZrY5pmoK2r1KZEiaaIKocdZQ/132","comment_is_top":false,"comment_ctime":1545100788,"is_pvip":false,"replies":[{"id":"18379","content":"树是多层的哦","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545110812,"ip_address":"","comment_id":51023,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545100788","product_id":100020801,"comment_content":"老师，在图1 “InnoDB 的索引组织结构”，在ID索引树和k索引树上，ID=700和 k=7这两个节点的位置好奇怪啊。为什么他们不是叶子节点，而是在根节点的旁边？还望您指点一下","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433236,"discussion_content":"树是多层的哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545110812,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51002,"user_name":"westbrook","can_delete":false,"product_type":"c1","uid":1336238,"ip_address":"","ucode":"C4ECC43C0CEE27","user_header":"https://static001.geekbang.org/account/avatar/00/14/63/ae/3d3717a3.jpg","comment_is_top":false,"comment_ctime":1545098030,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1545098030","product_id":100020801,"comment_content":"如果既有联合查询，又有基于 a、b 各自的查询呢？查询条件里面只有 b 的语句，是无法使用 (a,b) 这个联合索引的，这时候你不得不维护另外一个索引，也就是说你需要同时维护 (a,b)、(b) 这两个索引。<br><br>老师，这句话会不会有点问题？查询条件只有b的话，也是能用到联合索引呀","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136415,"discussion_content":"用不到的，因为联合索引，是先对a进行排序，然后在此基础上对b进行排序。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579141107,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":50475,"user_name":"吉之树","can_delete":false,"product_type":"c1","uid":1349135,"ip_address":"","ucode":"455631808A2A6C","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/MCdmXL7VL7icURHZicYSH4gjTkNnlqnjg2RaMKHcH4eNic7NKxUB5uicfD0AJzeWhq7kFmbpjNicX0x4to1ApM8S1kg/132","comment_is_top":false,"comment_ctime":1544976468,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544976468","product_id":100020801,"comment_content":"老师，有一个疑惑，公司有一个2000多万数据的表，主键是自增id，表内还有一个时间索引，现在想要用时间字段做每月的数据分区，不过分区字段又必须要包含在主键内，这样就要求先删除主键，再创建一条包含自增id和时间的联合主键，而且单独的时间索引又不能删除，经常要单独使用时间索引查询数据，请问有没有好的建议，谢谢。","like_count":0},{"had_liked":false,"id":50160,"user_name":"Nash.Z","can_delete":false,"product_type":"c1","uid":1232273,"ip_address":"","ucode":"76B14722664402","user_header":"https://static001.geekbang.org/account/avatar/00/12/cd/91/3d6c53f8.jpg","comment_is_top":false,"comment_ctime":1544881361,"is_pvip":false,"replies":[{"id":"18026","content":"看一下第13篇","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544882552,"ip_address":"","comment_id":50160,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544881361","product_id":100020801,"comment_content":"老师，为什么删除主键索引和新增主键索引都会重建表？重建表的原理是什么？innodb是一定要有主键的，如果是innodb可以删除主键索引吗？谢谢！","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432898,"discussion_content":"看一下第13篇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544882552,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49800,"user_name":"William","can_delete":false,"product_type":"c1","uid":1346215,"ip_address":"","ucode":"55F5D9DEE485B1","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","comment_is_top":false,"comment_ctime":1544771476,"is_pvip":true,"replies":[{"id":"17944","content":"额…都是删除数据，表结构、索引定义是没删的。<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544777714,"ip_address":"","comment_id":49800,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544771476","product_id":100020801,"comment_content":"老师，还想继续问一下，delete也删除索引， truncate 也删除索引。<br>但是实际他们是删除了 索引内部的内容，而非索引是吧？<br>查询了一些资料是这么说的，想跟您确认一下。 ","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432779,"discussion_content":"额…都是删除数据，表结构、索引定义是没删的。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544777714,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49727,"user_name":"William","can_delete":false,"product_type":"c1","uid":1346215,"ip_address":"","ucode":"55F5D9DEE485B1","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","comment_is_top":false,"comment_ctime":1544758029,"is_pvip":true,"replies":[{"id":"17924","content":"Delete其实索引也删除的。<br>就是如果要全表情况，就truncate好了<br><br>自适应哈希主要是偏理论的，我得想个应用场景…","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544764222,"ip_address":"","comment_id":49727,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544758029","product_id":100020801,"comment_content":"老师，看到某位同学 @老北 提了个问题。<br>关于的 truncate  与 delete  .<br>也就是说 truncate  会删除所有（数据、索引等一系列相关）。<br>delete  虽然删除了数据，但是实际索引依然存在。 <br><br>这就是他们之间的区别。<br><br>实际上是 truncate  就行是么？<br>能解释一下 “”自适应哈希索引“”么。<br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432745,"discussion_content":"Delete其实索引也删除的。\n就是如果要全表情况，就truncate好了\n\n自适应哈希主要是偏理论的，我得想个应用场景…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544764222,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49546,"user_name":"Nash.Z","can_delete":false,"product_type":"c1","uid":1232273,"ip_address":"","ucode":"76B14722664402","user_header":"https://static001.geekbang.org/account/avatar/00/12/cd/91/3d6c53f8.jpg","comment_is_top":false,"comment_ctime":1544709773,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1544709773","product_id":100020801,"comment_content":"老师，疑问：为什么删除主键和创建主键都会将表重建，这里整个表重建的概念是什么？谢谢","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136419,"discussion_content":"索引失效吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579141238,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49470,"user_name":"菜鸡一只","can_delete":false,"product_type":"c1","uid":1336004,"ip_address":"","ucode":"5FBA9A68E0E9B9","user_header":"https://static001.geekbang.org/account/avatar/00/14/62/c4/98a9e594.jpg","comment_is_top":false,"comment_ctime":1544693470,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544693470","product_id":100020801,"comment_content":"select a,b,b,d,f,g<br>FROM aa  <br>INNER JOIN bb ON aa.id=bb.id AND bb.type=0 OR bb.type=2<br>INNER JOIN cc ON aa.id=cc.id AND cc.status=5 or cc.status=6 or cc.status=7 OR cc.status = 11<br>INNER JOIN dd  ON dd.id=aa.id AND dd.status=1 OR dd.status=2 OR dd.status=3<br><br>这个sql语句可以进行什么优化，我这里卡爆了，看了你的文章还是不会下手","like_count":0},{"had_liked":false,"id":49455,"user_name":"D不发音","can_delete":false,"product_type":"c1","uid":1326125,"ip_address":"","ucode":"B1020A70901679","user_header":"https://static001.geekbang.org/account/avatar/00/14/3c/2d/3d31b684.jpg","comment_is_top":false,"comment_ctime":1544691474,"is_pvip":false,"replies":[{"id":"17780","content":"如果只是重建索引是你说的这两个语句；<br><br>不过你这个场景，需要重建表哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544693777,"ip_address":"","comment_id":49455,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544691474","product_id":100020801,"comment_content":"老师的每一篇都会讲到平常工作用遇到的事情. 这个专栏真的很值.<br>今天这个 alter table T engine=InnoDB 让我想到了我们线上的一个表, 记录日志用的, 会定期删除过早之前的数据. 最后这个表实际内容的大小才10G, 而他的索引却有30G. 在阿里云控制面板上看,就是占了40G空间. 这可花的是真金白银啊.<br>后来了解到是 InnoDB 这种引擎导致的,虽然删除了表的部分记录,但是它的索引还在, 并未释放.<br>只能是重新建表才能重建索引.<br>如果当时看到了这个专栏,把这个语句拿来用,就可以省下不少钱了.<br><br>为什么重新建表才可以重建索引？不是通过下面这样的语句就可以重建索引吗？<br>alter table T drop index k;<br>alter table T add index(k);<br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432624,"discussion_content":"如果只是重建索引是你说的这两个语句；\n\n不过你这个场景，需要重建表哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544693777,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49328,"user_name":"John","can_delete":false,"product_type":"c1","uid":1020861,"ip_address":"","ucode":"E4ADF8488953FB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/93/bd/f3977ebb.jpg","comment_is_top":false,"comment_ctime":1544666618,"is_pvip":false,"replies":[{"id":"17758","content":"第18篇会提到","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544675553,"ip_address":"","comment_id":49328,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544666618","product_id":100020801,"comment_content":"老师在之后的实践篇能不能讲一下 很多个表Join一起的时候 怎么创建index最有效? ","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432577,"discussion_content":"第18篇会提到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544675553,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49304,"user_name":"张迪","can_delete":false,"product_type":"c1","uid":1104835,"ip_address":"","ucode":"6A5D44999A0FEA","user_header":"https://static001.geekbang.org/account/avatar/00/10/db/c3/e11adfe8.jpg","comment_is_top":false,"comment_ctime":1544663309,"is_pvip":false,"replies":[{"id":"17755","content":"走","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544675437,"ip_address":"","comment_id":49304,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544663309","product_id":100020801,"comment_content":"老师，In会走索引吗，如果in的是索引字段","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432565,"discussion_content":"走","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544675437,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49157,"user_name":"三木禾","can_delete":false,"product_type":"c1","uid":1109458,"ip_address":"","ucode":"39C37228236860","user_header":"https://static001.geekbang.org/account/avatar/00/10/ed/d2/e3ae7ddd.jpg","comment_is_top":false,"comment_ctime":1544612798,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1544612798","product_id":100020801,"comment_content":"1，不合理。实际上c索引可以去掉，没必要搞一个单独索引。<br>2，没必要建ca索引，ca可以利用左前缀原则，cb需要。<br>3，实际上建立一个cb索引即可","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136437,"discussion_content":"c索引也是需要的，如果我想查ca这种情况时。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579141632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49107,"user_name":"三木禾","can_delete":false,"product_type":"c1","uid":1109458,"ip_address":"","ucode":"39C37228236860","user_header":"https://static001.geekbang.org/account/avatar/00/10/ed/d2/e3ae7ddd.jpg","comment_is_top":false,"comment_ctime":1544605395,"is_pvip":false,"replies":[{"id":"17638","content":"没有4呀，5的下一个是6，得判断到“6不满足”才结束","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544617430,"ip_address":"","comment_id":49107,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544605395","product_id":100020801,"comment_content":"老师，既然是between  3  and  5，它该查询4吧，怎么会查询6呢，在k索引树中","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432485,"discussion_content":"没有4呀，5的下一个是6，得判断到“6不满足”才结束","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544617430,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49089,"user_name":"猫","can_delete":false,"product_type":"c1","uid":1318604,"ip_address":"","ucode":"1B095FAFC8F9B6","user_header":"https://static001.geekbang.org/account/avatar/00/14/1e/cc/dcacdd74.jpg","comment_is_top":false,"comment_ctime":1544601952,"is_pvip":false,"replies":[{"id":"17641","content":"不是的，你这两个case都用到了index condition push down","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544617775,"ip_address":"","comment_id":49089,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544601952","product_id":100020801,"comment_content":"&gt;=  或者 like ,  key_len 长度已经加了后面字段长度，是不是不用 pushdown功能了？<br>&gt;  或者 &lt;   , key_len 长度没加后面字段长度，才使用pushdown功能 ？<br>不知理解是否正确<br><br>KEY `auditstatus` (`auditstatus`,`site`）<br>mysql&gt;  explain  select * from test.tb_datacheck_book_20181212 force index (auditstatus) where auditstatus&gt;19 and site=1 ;                <br>+----+-------------+----------------------------+------------+-------+---------------+-------------+---------+------+--------+----------+-----------------------+<br>| id | select_type | table                      | partitions | type  | possible_keys | key         | key_len | ref  | rows   | filtered | Extra                 |<br>+----+-------------+----------------------------+------------+-------+---------------+-------------+---------+------+--------+----------+-----------------------+<br>|  1 | SIMPLE      | tb_datacheck_book_20181212 | NULL       | range | auditstatus   | auditstatus | 4       | NULL | 902556 |     0.03 | Using index condition |<br><br><br>mysql&gt; <br>mysql&gt; <br>mysql&gt;  explain  select * from test.tb_datacheck_book_20181212 force index (auditstatus) where auditstatus&gt;=19 and site=1 ;<br>+----+-------------+----------------------------+------------+-------+---------------+-------------+---------+------+---------+----------+-----------------------+<br>| id | select_type | table                      | partitions | type  | possible_keys | key         | key_len | ref  | rows    | filtered | Extra                 |<br>+----+-------------+----------------------------+------------+-------+---------------+-------------+---------+------+---------+----------+-----------------------+<br>|  1 | SIMPLE      | tb_datacheck_book_20181212 | NULL       | range | auditstatus   | auditstatus | 8       | NULL | 4621884 |     0.03 | Using index condition |<br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432481,"discussion_content":"不是的，你这两个case都用到了index condition push down","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544617775,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48710,"user_name":"tyy","can_delete":false,"product_type":"c1","uid":1302149,"ip_address":"","ucode":"C3B436E6562744","user_header":"https://static001.geekbang.org/account/avatar/00/13/de/85/da98e390.jpg","comment_is_top":false,"comment_ctime":1544520490,"is_pvip":false,"replies":[{"id":"17470","content":"Group by 这个说来话长… 你给下表结构和语句我们用例子说我觉得比较现实","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544522868,"ip_address":"","comment_id":48710,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544520490","product_id":100020801,"comment_content":"老师，group  by怎么优化啊，一用group by就不走索引了，但业务上又会经常用到","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432321,"discussion_content":"Group by 这个说来话长… 你给下表结构和语句我们用例子说我觉得比较现实","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544522868,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48359,"user_name":"wuxue_123","can_delete":false,"product_type":"c1","uid":1327273,"ip_address":"","ucode":"3086949153D965","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK9z4ADkhDVV2oNaRmetm5QMFB2ayr5hHIJGA3cGibkFxbiaCYuyPwJQB800dMFGqwslmuvXbdulDVw/132","comment_is_top":false,"comment_ctime":1544427937,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544427937","product_id":100020801,"comment_content":"老师，想请教您个问题，我在表上建立一个联合索引，比如idx_a_b（a，b）<br>请问这两个语句时候可以用到索引吗？<br>select a，b from abc where a+1=xx and b=xx；<br>select str_to_date（a，‘%Y-%m-%d’），c from abc；<br>可以帮忙讲解一下，查询字段和where条件上对索引做函数运算，是否可以用到索引。","like_count":0},{"had_liked":false,"id":48160,"user_name":"_light","can_delete":false,"product_type":"c1","uid":1324723,"ip_address":"","ucode":"ACE2ABC357C5FF","user_header":"https://static001.geekbang.org/account/avatar/00/14/36/b3/c4a2f3fd.jpg","comment_is_top":false,"comment_ctime":1544372715,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1544372715","product_id":100020801,"comment_content":"老师，您好，如果索引是联合索引(a,b)，那么是将a,b组合起来做一个做一个B+树索引呢还是a和b各建立一个B+树呢？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136439,"discussion_content":"ab联合起来做一个B+树索引。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579141685,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48064,"user_name":"过去、今日","can_delete":false,"product_type":"c1","uid":1097197,"ip_address":"","ucode":"8E171203B06513","user_header":"https://static001.geekbang.org/account/avatar/00/10/bd/ed/95e8a314.jpg","comment_is_top":false,"comment_ctime":1544339127,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1544339127","product_id":100020801,"comment_content":"非常非常感谢老师的分享，满满的干货。。。。<br>课后题回答<br>这个索引创建的很多，对整个空间占用很大，如果ca或者cb查询使用不频繁就没必要","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136441,"discussion_content":"ca去掉。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579141702,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48008,"user_name":"早睡早起的🐷","can_delete":false,"product_type":"c1","uid":1142385,"ip_address":"","ucode":"7B9EADA6DDE497","user_header":"https://static001.geekbang.org/account/avatar/00/11/6e/71/4f120dde.jpg","comment_is_top":false,"comment_ctime":1544320686,"is_pvip":false,"replies":[{"id":"17094","content":"这时候Innodb 引擎会自己创建一个内置主键","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544330924,"ip_address":"","comment_id":48008,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544320686","product_id":100020801,"comment_content":"思考了一个问题，请教老师。老师讲的索引都是基于有主键的表。如果一个表里边只有唯一索引和普通索引那么唯一索引，联合唯一索引，普通索引都是怎么执行的呢？效率上又会如何呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431984,"discussion_content":"这时候Innodb 引擎会自己创建一个内置主键","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544330924,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47876,"user_name":"小李子","can_delete":false,"product_type":"c1","uid":1196293,"ip_address":"","ucode":"C5593E33CA6F4C","user_header":"https://static001.geekbang.org/account/avatar/00/12/41/05/5ba603f2.jpg","comment_is_top":false,"comment_ctime":1544242610,"is_pvip":false,"replies":[{"id":"17106","content":"可能是数据量太少，你模拟一万行进去看看，应该还是能用上索引的<br><br><br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544333608,"ip_address":"","comment_id":47876,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544242610","product_id":100020801,"comment_content":"老师，这个语句（从文稿中copy出来的） select * from tuser where name like &#39;张 %&#39; and age=10 and ismale=1; ，“张”字后面有一个空格，去掉之后，执行计划就变了 ，发现查询列只要带上不在索引列中的列，执行计划 的 type 就变成了 ALL，rows 也变成了行数总和，即使去掉 “and age=10 and ismale=1” ？难道是否全表扫描，不是光看type？还有执行计划的每一列，究竟是怎么看的呀？<br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431924,"discussion_content":"可能是数据量太少，你模拟一万行进去看看，应该还是能用上索引的\n\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544333608,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47732,"user_name":"Mac Kwan","can_delete":false,"product_type":"c1","uid":1001958,"ip_address":"","ucode":"FC80EBC9CD37A8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/e6/4f00fe55.jpg","comment_is_top":false,"comment_ctime":1544188635,"is_pvip":false,"replies":[{"id":"17003","content":"但是要避免排序，最好有个cab 😄<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544191883,"ip_address":"","comment_id":47732,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1544188635","product_id":100020801,"comment_content":"根据最左前缀原则以及索引结构实现原理应该只需要保留ab主键以及cb索引就能满足问题中貌似的查询语句。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431874,"discussion_content":"但是要避免排序，最好有个cab 😄\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544191883,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136445,"discussion_content":"所以，还是保留c索引。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579141792,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47551,"user_name":"蠢蠢欲动的腹肌","can_delete":false,"product_type":"c1","uid":1007326,"ip_address":"","ucode":"B10550BF463017","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/de/4e7ec66d.jpg","comment_is_top":false,"comment_ctime":1544153538,"is_pvip":false,"replies":[{"id":"16957","content":"单独一个name字段 和 单独一个age 字段，还是后者小一点","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544159929,"ip_address":"","comment_id":47551,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544153538","product_id":100020801,"comment_content":"老师，你好<br>在覆盖索引这一小段，为什么name的字段比age大，就推荐(name,age)和age这两个索引呢？联合索引的两个字段反过来，然后再单独创建name的索引不可以吗？感觉空间上占用的差不多啊，麻烦老师解答下哈","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431806,"discussion_content":"单独一个name字段 和 单独一个age 字段，还是后者小一点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544159929,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47515,"user_name":"Sinyo","can_delete":false,"product_type":"c1","uid":1307297,"ip_address":"","ucode":"57B243E7AB86A5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJAibnPX9jW8kqLcIfibjic8GbkQkEUYyFKJkc39hZhibVlNrqwTjdLozkqibI2IwACd5YzofYickNxFnZg/132","comment_is_top":false,"comment_ctime":1544149384,"is_pvip":false,"replies":[{"id":"16948","content":"可以避免排序也是挺好的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544152909,"ip_address":"","comment_id":47515,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1544149384","product_id":100020801,"comment_content":"老师，其实我还没明白为什么c 和 ca一定要留一个，有cb索引了不就满足c索引的最左前缀要求了么？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431790,"discussion_content":"可以避免排序也是挺好的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544152909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136447,"discussion_content":"去掉ca，保留c，cb","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579141834,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47398,"user_name":"王先统","can_delete":false,"product_type":"c1","uid":1236218,"ip_address":"","ucode":"4D208672C0D359","user_header":"https://static001.geekbang.org/account/avatar/00/12/dc/fa/3975f8da.jpg","comment_is_top":false,"comment_ctime":1544141809,"is_pvip":false,"replies":[{"id":"16970","content":"Age=10的还得回呀","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544168033,"ip_address":"","comment_id":47398,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544141809","product_id":100020801,"comment_content":"关于索引下推有个疑问: 匹配到&quot;张&quot;之后直接在索引中判断age就行了，为啥还要回表判断呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431757,"discussion_content":"Age=10的还得回呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544168033,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47264,"user_name":"weizhe","can_delete":false,"product_type":"c1","uid":1045336,"ip_address":"","ucode":"CDFA08B3170888","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f3/58/026fc232.jpg","comment_is_top":false,"comment_ctime":1544093912,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544093912","product_id":100020801,"comment_content":"思考题：删除创建ca索引。理由是c索引中的叶子节点存储a、b的值，根据左前缀原则执行语句1只需回表一次既可完成，而执行语句2需要多次回表，故需保留cb索引，删掉多余的ca索引。","like_count":0},{"had_liked":false,"id":47262,"user_name":"weizhe","can_delete":false,"product_type":"c1","uid":1045336,"ip_address":"","ucode":"CDFA08B3170888","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f3/58/026fc232.jpg","comment_is_top":false,"comment_ctime":1544092786,"is_pvip":false,"replies":[{"id":"16859","content":"一样","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544095002,"ip_address":"","comment_id":47262,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544092786","product_id":100020801,"comment_content":"老师，建立索引时使用key和index有区别吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431718,"discussion_content":"一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544095002,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47249,"user_name":"Sinyo","can_delete":false,"product_type":"c1","uid":1307297,"ip_address":"","ucode":"57B243E7AB86A5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJAibnPX9jW8kqLcIfibjic8GbkQkEUYyFKJkc39hZhibVlNrqwTjdLozkqibI2IwACd5YzofYickNxFnZg/132","comment_is_top":false,"comment_ctime":1544089149,"is_pvip":false,"replies":[{"id":"16861","content":"1. 可以<br><br>2. 我的意思就是去掉ca&#47;c两个留一个<br><br>3. 是的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544095328,"ip_address":"","comment_id":47249,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544089149","product_id":100020801,"comment_content":"正是那朵玫瑰：<br>老师的回答是ca不必要，cb需要保留，我已经听明白了，但是既然有了cb这个索引，那么c这个索引也没有必要了吧（最左前缀原则）？为什么老师没说把c也可以去掉？<br>作者回复：<br>只有cb的话， where c= N order by a还是要排序的<br><br>猫小妖的尾巴：<br>我认为索引ca是可以去掉的，这条语句c=N order by a 可以用c索引和ab索引 ，条件是c=N order by b 时先用cb索引再用ab索引就可以了<br>作者回复：<br>这也不行哈，正常情况下一个查询只能选择一个索引<br><br>新问题：<br>老师，这两个问题的回答我有几个问题；<br>第一个问答：这里的c、a好像都能用最左前缀原则（索引为cb和ab）？<br>第二个问答：那我们思考题这种情况，c、ca索引即使只去掉一个，也会用到两个索引的把？<br>第二个问答：条件是c=N order by b 时，这里是使用了cb联合索引么？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431713,"discussion_content":"1. 可以\n\n2. 我的意思就是去掉ca/c两个留一个\n\n3. 是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544095328,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47073,"user_name":"vivaxiao","can_delete":false,"product_type":"c1","uid":1303080,"ip_address":"","ucode":"B88992C3FF5BA1","user_header":"https://static001.geekbang.org/account/avatar/00/13/e2/28/ef7f3d03.jpg","comment_is_top":false,"comment_ctime":1544029772,"is_pvip":false,"replies":[{"id":"16822","content":"因为5还满足，这个循环得继续找，找到第一个不满足的呀","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544063862,"ip_address":"","comment_id":47073,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1544029772","product_id":100020801,"comment_content":"为什么还要去k索引树搜索k＝6，发现不满足条件，循环结束呢？关于这个语句:select ＊from T where k between 3 and 5 ，请老师帮忙解答，谢谢！","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431655,"discussion_content":"因为5还满足，这个循环得继续找，找到第一个不满足的呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544063862,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1315049,"avatar":"https://static001.geekbang.org/account/avatar/00/14/10/e9/f5e55ccf.jpg","nickname":"小鬼","note":"","ucode":"52EE8A18B90C6D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566123,"discussion_content":"因为K也不是唯一索引，不能保证后续是否还有满足的数据；","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650607172,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47040,"user_name":"杰之7","can_delete":false,"product_type":"c1","uid":1297232,"ip_address":"","ucode":"F7DA2E21085332","user_header":"https://static001.geekbang.org/account/avatar/00/13/cb/50/66d0bd7f.jpg","comment_is_top":false,"comment_ctime":1544024442,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544024442","product_id":100020801,"comment_content":"感谢老师很快回复了我在上一节中留下的两个疑问，也理解了老师给予的解答。这一讲的学习继续讲解的索引相关优化的内容，主要有覆盖索引，前缀索引，索引下推内容，覆盖索引的目的是为了减少回文的次数，也理解了为什么读了3个记录而只扫描的2次。前缀索引是为了快速定位，加快查询。索引下推是进一步根据下个索引来减少查询的次数。总的来说，理解这些优化方法都是为了在设计表时尽量少的访问数据资源而设计，来达到更快的获取我们需要的数据。","like_count":0},{"had_liked":false,"id":46897,"user_name":"leestar54","can_delete":false,"product_type":"c1","uid":1028877,"ip_address":"","ucode":"F5B95994E29A13","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b3/0d/c4afec40.jpg","comment_is_top":false,"comment_ctime":1543998587,"is_pvip":false,"replies":[{"id":"16786","content":"索引肯定要建的，主要不知道这个score的更新的TPS，如果特别大，可以考虑找个缓存或者小表累积一段时间再统一更新","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544022340,"ip_address":"","comment_id":46897,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543998587","product_id":100020801,"comment_content":"老师，有个业务场景是这样的：大表用户表中有个积分字段score，用户每次登陆、签到、参加活动等都会增加一定的分数。我们需要在积分榜按score字段倒序排名前几名的用户。<br>既然要做排序，那么就应该给score加上索引。但我们又会频繁修改score字段值，从而需要维护索引。<br>想知道修改索引字段的值对数据库执行效率有多大影响？<br>这样的情况我们应该如何做取舍？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431590,"discussion_content":"索引肯定要建的，主要不知道这个score的更新的TPS，如果特别大，可以考虑找个缓存或者小表累积一段时间再统一更新","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544022340,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46556,"user_name":"KeepGoing","can_delete":false,"product_type":"c1","uid":1184637,"ip_address":"","ucode":"B872F794265709","user_header":"https://static001.geekbang.org/account/avatar/00/12/13/7d/1454db9c.jpg","comment_is_top":false,"comment_ctime":1543935709,"is_pvip":true,"replies":[{"id":"16647","content":"对于server层来说，这个动作是“重建表”，但是重建表会不会收缩空间，就得看引擎怎么做了。tokudb应该会有效的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543942214,"ip_address":"","comment_id":46556,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543935709","product_id":100020801,"comment_content":"请问老师linux中tokudb引擎有没有类似alter table T engine=InnoDB这样的操作来释放空间呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431481,"discussion_content":"对于server层来说，这个动作是“重建表”，但是重建表会不会收缩空间，就得看引擎怎么做了。tokudb应该会有效的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543942214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46343,"user_name":"阿狸爱JAVA","can_delete":false,"product_type":"c1","uid":1033566,"ip_address":"","ucode":"597971781B1500","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c5/5e/24cc5a72.jpg","comment_is_top":false,"comment_ctime":1543904246,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1543904246","product_id":100020801,"comment_content":"order by后面的字段并不会走索引，所以为了这两个查询模式，这两个索引不是必须的。<br>但如果存在select * from geek where c=N and a=m limit 1  <br>select * from geek where c=N and b=m limit 1  <br>这种查询，那这个索引就是必须的，但是这样的话，KEY `c` (`c`),这个索引就没有存在的必要了<br><br>","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136451,"discussion_content":"可以去掉c或者ca两者其一，其实去年ca更好，更精简。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579142036,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46286,"user_name":"莫须有","can_delete":false,"product_type":"c1","uid":1308314,"ip_address":"","ucode":"ABBA1B5550ADDB","user_header":"https://static001.geekbang.org/account/avatar/00/13/f6/9a/083fe46f.jpg","comment_is_top":false,"comment_ctime":1543893035,"is_pvip":false,"replies":[{"id":"16566","content":"恢复不了，所以才需要double write","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543898276,"ip_address":"","comment_id":46286,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543893035","product_id":100020801,"comment_content":"之前面试遇到的问题(当时没回答出来--)：<br>doublewrite 可以防止数据页损坏，<br>为什么redo log崩溃恢复不可以防止数据页损坏的呢？<br><br>答：<br>内存一个数据页16k，文件系统一个page4k，所以数据页是4k 4k的往磁盘刷。<br>dbwrite在innodb_buffer_pool和共享表空间ibdata各有2M的区域；<br>开启两次写之后，内存中的数据页先写到缓冲区内的dbwrite buffer；<br>然后dbwrite_buffer 1M 1M的向共享表空间中的dbwrite区域刷脏页。<br>一、开启两次写，有可能出现的数据崩溃恢复的情况：<br>(1)dbwrite buffer写入成功，但是往磁盘写的时候数据库故障。<br>这时数据页也不会出现损坏。<br>数据页的恢复不会用上redo log，而是将dbwrite_buffer中的数据刷到磁盘 进行数据恢复。<br>(2)如果数据页在往dbwrite_buffer写的时候，数据库出现故障。<br>那么这些数据不会写到磁盘，innodb会载入磁盘原始数据和redo日志比较，并重新刷到dw buffer。<br>二、未开启double write<br>崩溃恢复只能依靠redo log，有可能出现数据页损坏的情况。<br><br>我的问题：<br>未开启两次写的情况下。当一个16k的数据页，往磁盘刷了8k之后  数据库宕了，进行崩溃恢复的时候，redo log还能把数据页恢复到完整的模样吗？<br>希望老师指导一下。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431407,"discussion_content":"恢复不了，所以才需要double write","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543898276,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46127,"user_name":"奋斗心","can_delete":false,"product_type":"c1","uid":1247286,"ip_address":"","ucode":"06A195AB0B6570","user_header":"https://static001.geekbang.org/account/avatar/00/13/08/36/98be3d69.jpg","comment_is_top":false,"comment_ctime":1543850875,"is_pvip":false,"replies":[{"id":"16518","content":"还要判断ismale，前面还是一个select * , 所以还是要回表的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543887253,"ip_address":"","comment_id":46127,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543850875","product_id":100020801,"comment_content":"图4 ID4 ID5 只要取回数据吧，是不是不用再取回数据判断，索引里有age","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431347,"discussion_content":"还要判断ismale，前面还是一个select * , 所以还是要回表的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543887253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46007,"user_name":"菜鸡一只","can_delete":false,"product_type":"c1","uid":1336004,"ip_address":"","ucode":"5FBA9A68E0E9B9","user_header":"https://static001.geekbang.org/account/avatar/00/14/62/c4/98a9e594.jpg","comment_is_top":false,"comment_ctime":1543832174,"is_pvip":false,"replies":[{"id":"16438","content":"没区别，就是为了跟大家说这两种用法都行😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543832590,"ip_address":"","comment_id":46007,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543832174","product_id":100020801,"comment_content":"老师在本章中用了key与index两种方法给表添加索引，这两个有什么区别吗<br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431301,"discussion_content":"没区别，就是为了跟大家说这两种用法都行😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543832590,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45564,"user_name":"正是那朵玫瑰","can_delete":false,"product_type":"c1","uid":1048261,"ip_address":"","ucode":"73D630B654573F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fe/c5/3467cf94.jpg","comment_is_top":false,"comment_ctime":1543676532,"is_pvip":false,"replies":[{"id":"16280","content":"只有cb的话， where c= N order by a还是要排序的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543774906,"ip_address":"","comment_id":45564,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543676532","product_id":100020801,"comment_content":"思考题：老师的回答是ca不必要，cb需要保留，我已经听明白了，但是既然有了cb这个索引，那么c这个索引也没有必要了吧（最左前缀原则）？为什么老师没说把c也可以去掉？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431098,"discussion_content":"只有cb的话， where c= N order by a还是要排序的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543774906,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45485,"user_name":"猫小妖的尾巴","can_delete":false,"product_type":"c1","uid":1309248,"ip_address":"","ucode":"250777C6DFC468","user_header":"https://static001.geekbang.org/account/avatar/00/13/fa/40/6f4949d3.jpg","comment_is_top":false,"comment_ctime":1543652534,"is_pvip":false,"replies":[{"id":"16190","content":"这也不行哈，正常情况下一个查询只能选择一个索引","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543655360,"ip_address":"","comment_id":45485,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543652534","product_id":100020801,"comment_content":"我认为索引ca是可以去掉的，这条语句c=N order by a 可以用c索引和ab索引 ，条件是c=N order by b 时先用cb索引再用ab索引就可以了","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431061,"discussion_content":"这也不行哈，正常情况下一个查询只能选择一个索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543655360,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45346,"user_name":"shawn","can_delete":false,"product_type":"c1","uid":1010221,"ip_address":"","ucode":"8F6A8C7920996E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6a/2d/ec4ed8ce.jpg","comment_is_top":false,"comment_ctime":1543592937,"is_pvip":false,"replies":[{"id":"16104","content":"对，理解准确😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543597710,"ip_address":"","comment_id":45346,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543592937","product_id":100020801,"comment_content":"老师对于 你文章说道 “我们还是以市民表的联合索引（name, age）为例。如果现如果现在有一个需求：检索出表中“名字第一个字是张，而且年龄是10的男孩。<br>where name like &#39;张%&#39; ana age =10;”  我想这里 age 用不上索引，是由于 前面name like &#39;张%&#39;是一个范围查询对么。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430992,"discussion_content":"对，理解准确😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543597710,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45320,"user_name":"unlock","can_delete":false,"product_type":"c1","uid":1335403,"ip_address":"","ucode":"9B1F899B960A20","user_header":"https://static001.geekbang.org/account/avatar/00/14/60/6b/907a9557.jpg","comment_is_top":false,"comment_ctime":1543586261,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1543586261","product_id":100020801,"comment_content":"在什么情况下，查询走索引会比不走索引查的还慢呢？<br>有的话可以多举几个例子吗-.-","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136455,"discussion_content":"无语了。如果你的联合索引字段如果很多的话，或者瞎建的话，应该会慢。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579142218,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44969,"user_name":"We.lxk","can_delete":false,"product_type":"c1","uid":1304624,"ip_address":"","ucode":"841DAB48DE578A","user_header":"https://static001.geekbang.org/account/avatar/00/13/e8/30/a6f42400.jpg","comment_is_top":false,"comment_ctime":1543536528,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543536528","product_id":100020801,"comment_content":"最近做业务数据整合迁移，需要用到大量的联表查询和子查询，老师能否讲一下联表查询原理和优化思路，主要是查询底层检索原理","like_count":0},{"had_liked":false,"id":44901,"user_name":"英宁","can_delete":false,"product_type":"c1","uid":1241380,"ip_address":"","ucode":"C6CB1C4FFCADC7","user_header":"https://static001.geekbang.org/account/avatar/00/12/f1/24/d15cf6af.jpg","comment_is_top":false,"comment_ctime":1543504129,"is_pvip":false,"replies":[{"id":"16160","content":"可能你数据量太小，MySQL 认为排序也挺快？<br>优化器会根据数据分布来决定<br><br>贴一下你的复现步骤吧","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543630819,"ip_address":"","comment_id":44901,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543504129","product_id":100020801,"comment_content":"老师，我上次在a(int)和b两个字段建组合索引，查询是where a=x order by b。explain看的时候keylen=4，而且是filesort。为什么没有用索引排序呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430854,"discussion_content":"可能你数据量太小，MySQL 认为排序也挺快？\n优化器会根据数据分布来决定\n\n贴一下你的复现步骤吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543630819,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44788,"user_name":"bluefantasy3","can_delete":false,"product_type":"c1","uid":1299930,"ip_address":"","ucode":"9D6FF2811F7465","user_header":"","comment_is_top":false,"comment_ctime":1543492803,"is_pvip":false,"replies":[{"id":"15989","content":"非叶子节点里面有两列的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543534833,"ip_address":"","comment_id":44788,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543492803","product_id":100020801,"comment_content":"请教老师一个问题：<br>一个表上有个包含两列（c1，c2）的二级索引，在innodb的B+树的非叶子节点里是保存了c1,c2两列对吧？网上有人说非叶子节点只包含c1列，c2列在叶子节点里，不知道哪种说法对？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430834,"discussion_content":"非叶子节点里面有两列的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543534833,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44769,"user_name":"Ryoma","can_delete":false,"product_type":"c1","uid":1130590,"ip_address":"","ucode":"7F692369239692","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/5e/b8fada94.jpg","comment_is_top":false,"comment_ctime":1543488706,"is_pvip":true,"replies":[{"id":"15982","content":"C和ca选一个留","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543504762,"ip_address":"","comment_id":44769,"utype":1}],"discussion_count":1,"race_medal":2,"score":"1543488706","product_id":100020801,"comment_content":"关于这个问题，请问c单字段的索引还有必要么？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430829,"discussion_content":"C和ca选一个留","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543504762,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44733,"user_name":"xumc","can_delete":false,"product_type":"c1","uid":1033274,"ip_address":"","ucode":"22D24AF9D52B65","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/3a/77bbc665.jpg","comment_is_top":false,"comment_ctime":1543483324,"is_pvip":false,"replies":[{"id":"16162","content":"你这个假设是用身份证号做主键，<br><br><br>我们还没这么约定呢😄<br><br>其实很多时候并不适合拿身份证做主键<br>文中有分析哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543630921,"ip_address":"","comment_id":44733,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543483324","product_id":100020801,"comment_content":"老师您好<br>关于身份证号和名字建立联合索引有疑惑，如果都按照身份证来select，那根本不需要建立联合索引，直接主键查就可以了，也不用回表。<br>为什么要考虑建联合索引呢？<br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430821,"discussion_content":"你这个假设是用身份证号做主键，\n\n\n我们还没这么约定呢😄\n\n其实很多时候并不适合拿身份证做主键\n文中有分析哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543630921,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44601,"user_name":"day day up","can_delete":false,"product_type":"c1","uid":1105584,"ip_address":"","ucode":"D1949E7775C0A1","user_header":"https://static001.geekbang.org/account/avatar/00/10/de/b0/406c237e.jpg","comment_is_top":false,"comment_ctime":1543461802,"is_pvip":false,"replies":[{"id":"15898","content":"在这个表中，c 等同于 (c,a)，这两个留一个","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543464476,"ip_address":"","comment_id":44601,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543461802","product_id":100020801,"comment_content":"老師：你文章中有提到“当已经有了 (a,b) 这个联合索引后，一般就不需要单独在 a 上建立索引了”。思考題裏面KEY `c` (`c`) 這個索引是否也可以刪除","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430804,"discussion_content":"在这个表中，c 等同于 (c,a)，这两个留一个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543464476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44539,"user_name":"fgdgtz","can_delete":false,"product_type":"c1","uid":1240401,"ip_address":"","ucode":"486CC4ACCC015C","user_header":"","comment_is_top":false,"comment_ctime":1543455793,"is_pvip":false,"replies":[{"id":"15884","content":"嗯，如果一个人的订单可能特别多，你想要做这个优化，结合前面的需求，可能(user_id, create_time, status) 和 (user_id,status)这两个索引都保留了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543458962,"ip_address":"","comment_id":44539,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543455793","product_id":100020801,"comment_content":"老师你好，我请问个有关索引的问题，我有个订单表：<br><br>CREATE TABLE `order` (<br>   `id` int(11) NOT NULL,<br>    `user_id`  int(11) DEFAULT 0,<br>    `status` int(11) DEFAULT 0,<br>    `order_time` int(11) DEFAULT 0,<br>     PRIMARY KEY (`id`)<br> ）ENGINE=InnoDB<br><br>业务需求上有根据&quot;全部&quot;，&quot;付款&quot;，&quot;结算&quot;，&quot;失效&quot;这几种状态分页获取用户的订单数据并根据下单时间排序，因为有涉及全部和根据状态查询，我是否应建两个类似这样的索引：<br>(user_id,status,order_time)&#47;&#47;用于根据具体的订单状态分页查询并排序<br>(user_id,order_time)&#47;&#47;用于查询全部数据并排序<br><br>对此我是很困惑的，建两个索引对更新数据与存储空间都有影响，而且两个索引也十分类似，但如果只保留(user_ id,create_time)，那根据某状态查询时扫描的行可能过多<br><br>如果保留(user_id,status,create_time)，为了索引全字段使用到那查询全部时就得麻烦的 union all<br><br>|作者回复：<br><br>是否可以留(user_ id,create_time,status) 这个索引？<br><br>我的回复：<br>  感谢老师的回复，老师您的这个索引虽避免了回表查status的值，但我有疑问如果查某个status下的数据可能会扫描过多的行吧？比如 status=2,得一行一行比较status是否为2吧？手淘“我的订单”里有“全部”，“待付款”,&quot;待发货&quot;,在淘宝这种体量的数据就单从mysql这层来考虑，是否会根据不同的订单状态分表？<br><br>|作者回复：<br><br>既然是&quot;我的订单&quot;，当你选择status=2时候，SQL语句就是user_id=&lt;你的id&gt; and status=2了吧？可以用上这个索引呀<br><br>我的回复：<br>  select * from order where user_id=&lt;你的id&gt; and status=2 order by order_time desc limit 0,10<br>  老师您建议的索引是(user_id,order_time,status)<br><br>按照索引前缀原则，我理解是这样，先定位到user_id,然后再按order_time 降序排序遍历，最后比较status是否等于2，不等于，继续下一行。 <br><br>user_id    order_time    status<br>    3        1543454328      1             ✘<br>    3        1543450723      4             ✘<br>    3        1543447080      2             ✔<br><br>比如上面，扫描了3行，才拿到一条符合的数据，那么我的问题是，当status不为2的数据偏多时，可能会导致扫描多行才能拿满10条数据吧？<br><br>基于上面的考虑我之前建的索引为(user_id,status,order_time),虽然status的值才那么几个，但组合索引下也提升了status的cardinality<br><br>我困惑的一点是如果采用这个索引，那么获取&quot;全部&quot;订单时为了走索引只能union all拼了？<br><br>user_id=3 and status=2 order by order_time desc limit 0,10<br>union all<br>user_id=3 and status=1 order by order_time desc limit 0,10<br>union all<br>user_id=3 and status=4 order by order_time desc limit 0,10<br><br>                                                                                                     回复于 2018.11.29<br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430788,"discussion_content":"嗯，如果一个人的订单可能特别多，你想要做这个优化，结合前面的需求，可能(user_id, create_time, status) 和 (user_id,status)这两个索引都保留了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543458962,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44074,"user_name":"张迪","can_delete":false,"product_type":"c1","uid":1104835,"ip_address":"","ucode":"6A5D44999A0FEA","user_header":"https://static001.geekbang.org/account/avatar/00/10/db/c3/e11adfe8.jpg","comment_is_top":false,"comment_ctime":1543367326,"is_pvip":false,"replies":[{"id":"15716","content":"In字段是不是索引… <br>@all 大家问问题的时候要力争一句话把问题问清楚哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543371092,"ip_address":"","comment_id":44074,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543367326","product_id":100020801,"comment_content":"当出现有in几千个关键id的时候，怎么做性能优化，老师","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430623,"discussion_content":"In字段是不是索引… \n@all 大家问问题的时候要力争一句话把问题问清楚哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543371092,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44024,"user_name":"Geek_c6bb3c","can_delete":false,"product_type":"c1","uid":1310599,"ip_address":"","ucode":"DABEE90C9CC345","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKJ08FfEl3UAwHYRLQfe6ULujcPY1dicT9xzHic7kWG6TvlzYVteOHk0nTLS3ibV1ibuwSAhLQYkMYlzg/132","comment_is_top":false,"comment_ctime":1543365526,"is_pvip":false,"replies":[{"id":"15722","content":"全存起来变成需要临时表。<br><br>还有，现在还不支持“传入一批ID给主键，’同时回表’ ” 这样的能力","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543371483,"ip_address":"","comment_id":44024,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543365526","product_id":100020801,"comment_content":"mysql为什么要查一次索引回一次表？而不是查完索引后把结果存储起来，一次回表查询？这样应该更容易用到局部性原理。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430600,"discussion_content":"全存起来变成需要临时表。\n\n还有，现在还不支持“传入一批ID给主键，’同时回表’ ” 这样的能力","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543371483,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43958,"user_name":"loCust","can_delete":false,"product_type":"c1","uid":1297583,"ip_address":"","ucode":"A5CFECA44045A1","user_header":"https://static001.geekbang.org/account/avatar/00/13/cc/af/25509210.jpg","comment_is_top":false,"comment_ctime":1543336294,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1543336294","product_id":100020801,"comment_content":"老师，索引下推那块，select * from tuser where name like &#39;张 %&#39; and age=10 and ismale=1;这个查询是用到name，age这个组合索引，还是只用到了组合索引中的name字段呢？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136464,"discussion_content":"会用到联合索引两个字段，age做索引下推，然后回表，再进行ismale判断。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579142576,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43909,"user_name":"FFYzz","can_delete":false,"product_type":"c1","uid":1304691,"ip_address":"","ucode":"E23697F2EC39E4","user_header":"https://static001.geekbang.org/account/avatar/00/13/e8/73/5da23052.jpg","comment_is_top":false,"comment_ctime":1543322139,"is_pvip":false,"replies":[{"id":"15678","content":"存了主键ID，这么强的关联😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543325233,"ip_address":"","comment_id":43909,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543322139","product_id":100020801,"comment_content":"非主键索引是会自动关联主键吗？因为从第一个例子中看出索引k关联了ID，不知道这样理解是否正确呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430543,"discussion_content":"存了主键ID，这么强的关联😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543325233,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43902,"user_name":"laravel","can_delete":false,"product_type":"c1","uid":1305947,"ip_address":"","ucode":"A4CF206FFA593E","user_header":"https://static001.geekbang.org/account/avatar/00/13/ed/5b/cbcc8743.jpg","comment_is_top":false,"comment_ctime":1543321155,"is_pvip":false,"replies":[{"id":"15679","content":"跟单列索引一样的呀","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543325272,"ip_address":"","comment_id":43902,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543321155","product_id":100020801,"comment_content":"林老师，联合索引是如何用到覆盖索引的呢？能不能详细讲一下啊？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136465,"discussion_content":"如果查询条件使用的是普通索引（或是联合索引的最左原则字段），查询结果是联合索引的字段或是主键，不用回表操作，直接返回结果，减少IO磁盘读写读取正行数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579142622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43711,"user_name":"everyok22","can_delete":false,"product_type":"c1","uid":1213878,"ip_address":"","ucode":"3A3304CCDC5C5C","user_header":"","comment_is_top":false,"comment_ctime":1543282975,"is_pvip":false,"replies":[{"id":"15607","content":"这个叫index_merge,  但是这样未必快哦，因为有临时表的消耗","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543286420,"ip_address":"","comment_id":43711,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543282975","product_id":100020801,"comment_content":"假如现在有个user表，有下面的语句：select * from user where location like &#39;上%&#39; and name like &#39;陈%&#39;;  假如现在在location和name上都有对应的索引，数据库应该只会选择一个索引进行查找，然后回表。我的问题是数据库为什么不同时利用location与name这两个索引，将查出来的数据id做个&amp;操作之后再回表呢（可以在server层做这样的运算啊）？这样效率上会不会更高点？如果能做这样的运算的话， 索引也就无所谓的先后顺序了，维护索引的成本应该也会相应的降低。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430469,"discussion_content":"这个叫index_merge,  但是这样未必快哦，因为有临时表的消耗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543286420,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43596,"user_name":"怀朔","can_delete":false,"product_type":"c1","uid":1006865,"ip_address":"","ucode":"52FAC1C2FD37B6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5d/11/e1f36640.jpg","comment_is_top":false,"comment_ctime":1543243417,"is_pvip":false,"replies":[{"id":"15572","content":"当然，如果有k=4,那就是3、4、5的顺序","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543246419,"ip_address":"","comment_id":43596,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543243417","product_id":100020801,"comment_content":"在 k 索引树上找到 k=3 的记录，取得 ID = 300；<br><br>再到 ID 索引树查到 ID=300 对应的 R3；<br><br>在 k 索引树取下一个值 k=5，取得 ID=500；<br><br>再回到 ID 索引树查到 ID=500 对应的 R4；<br><br>在 k 索引树取下一个值 k=6，不满足条件，循环结束。<br><br>在这个过程中，回到主键索引树搜索<br><br>如果表中有k=4 那是否在k=3下一步骤还会查询k=4？？？？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430428,"discussion_content":"当然，如果有k=4,那就是3、4、5的顺序","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543246419,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43482,"user_name":"安静","can_delete":false,"product_type":"c1","uid":1212634,"ip_address":"","ucode":"7C4DB6D81A48EB","user_header":"https://static001.geekbang.org/account/avatar/00/12/80/da/9c0c458c.jpg","comment_is_top":false,"comment_ctime":1543232197,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543232197","product_id":100020801,"comment_content":"覆盖索引，最左匹配，索引下推三个主要概念<br>","like_count":0},{"had_liked":false,"id":43247,"user_name":"yesir","can_delete":false,"product_type":"c1","uid":1017689,"ip_address":"","ucode":"CFFE7D36ADBEBA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/87/59/b457f370.jpg","comment_is_top":false,"comment_ctime":1543200205,"is_pvip":false,"replies":[{"id":"15466","content":"1. 索引下推需要server层和引擎层配合的<br><br>2. 是的，生产上做DDL是要用类似this-ost这种工具的哈，只是用例子来说明原理","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543203936,"ip_address":"","comment_id":43247,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543200205","product_id":100020801,"comment_content":"还有2个问题<br>1.这篇文章讲的主键，索引下推等等都是基于InnoDb引擎下的，其他类型的引擎行为是一致的吗，后面会不会讲？<br>2.上期的重建索引的题，在生产环境下可行性不高吧，生产环境动辙几百上千万的数据，这个语句一下去，现网要宕机了，而数据量不大的表去做这个操作本身没太大意义","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430338,"discussion_content":"1. 索引下推需要server层和引擎层配合的\n\n2. 是的，生产上做DDL是要用类似this-ost这种工具的哈，只是用例子来说明原理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543203936,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43243,"user_name":"yesir","can_delete":false,"product_type":"c1","uid":1017689,"ip_address":"","ucode":"CFFE7D36ADBEBA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/87/59/b457f370.jpg","comment_is_top":false,"comment_ctime":1543198866,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1543198866","product_id":100020801,"comment_content":"市民表的例子，如果有分别基于 a,b,a和b的三种查询，要建（a，b）和b 2个索引，我想问的是<br>在a，b上建联合索引相比只在a上建有额外开销吗 ? 如果有，在不考虑覆盖索引的前提下，是不是分别在a，b上建单字段索引就够了 ？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136471,"discussion_content":"这个根据业务来看，因为你的业务里面有需要进行a,b同时进行查询的情况，而且该（ab)联合索引还可以Hold住单独查a的查询，为啥非多一棵树才好？何乐而不为呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579142881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43236,"user_name":"不忘初心","can_delete":false,"product_type":"c1","uid":1302204,"ip_address":"","ucode":"5BC8A5DD41012F","user_header":"https://static001.geekbang.org/account/avatar/00/13/de/bc/1245cd12.jpg","comment_is_top":false,"comment_ctime":1543198356,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1543198356","product_id":100020801,"comment_content":"老师能围绕B+树来讲一下为什么Innodb选用B+树作为索引算法，这样的好处是什么吗？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136473,"discussion_content":"B+树是N叉树，这样的结构模型有利于树层变少，变成矮树，有利于减少磁盘I/O。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579142922,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43136,"user_name":"荒漠甘泉","can_delete":false,"product_type":"c1","uid":1311894,"ip_address":"","ucode":"AD409201934C79","user_header":"https://static001.geekbang.org/account/avatar/00/14/04/96/dcb9504b.jpg","comment_is_top":false,"comment_ctime":1543191281,"is_pvip":false,"replies":[{"id":"15428","content":"是的，前面有个%就不能用这个索引快速搜索了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543192862,"ip_address":"","comment_id":43136,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543191281","product_id":100020801,"comment_content":"老师，你好！本节课说的前缀索引对应的最左n个字段或者最左m个字符，like &#39;张%&#39;这种可以用到索引，那like &#39;%三%&#39;，这种的好像不符合最左m个字符，是不是不能用到索引了？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430308,"discussion_content":"是的，前面有个%就不能用这个索引快速搜索了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543192862,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43133,"user_name":"家有邹太","can_delete":false,"product_type":"c1","uid":1320050,"ip_address":"","ucode":"5636BD37EB1A99","user_header":"https://static001.geekbang.org/account/avatar/00/14/24/72/9e2a651c.jpg","comment_is_top":false,"comment_ctime":1543190726,"is_pvip":false,"replies":[{"id":"15433","content":"1. 非叶子节点两个字段， 叶子节点三个字段（加上ID）<br><br>2. innodb是索引组织表，没有可以直接指向数据位置的RID","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543193093,"ip_address":"","comment_id":43133,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543190726","product_id":100020801,"comment_content":"老师，请问2个问题：<br>1，图2中索引叶子页包含2个字段，对于非叶子页，是否仍只有一个字段（第一个字段）？<br>2，我是DB2数据库的DBA，第一次接触“回表”这个概念。次级索引筛选后，为何还要再回一次主键索引？索引叶子页中可以包含RID，直接去访问数据页呀？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430306,"discussion_content":"1. 非叶子节点两个字段， 叶子节点三个字段（加上ID）\n\n2. innodb是索引组织表，没有可以直接指向数据位置的RID","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543193093,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43076,"user_name":"Alvan","can_delete":false,"product_type":"c1","uid":1002468,"ip_address":"","ucode":"D6529DC67898BF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4b/e4/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1543155786,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1543155786","product_id":100020801,"comment_content":"老师好，like 查询的覆盖索引是不是索引下推优化实现的？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136477,"discussion_content":"不是，是因为select查询字段正好在联合索引里面有存在。而索引下推只是从回表次数的层面上减少了回表次数，但并不是覆盖索引的解释。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579143077,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43074,"user_name":"董航","can_delete":false,"product_type":"c1","uid":1231787,"ip_address":"","ucode":"9CA208FD26F849","user_header":"https://static001.geekbang.org/account/avatar/00/12/cb/ab/1aac53bf.jpg","comment_is_top":false,"comment_ctime":1543155514,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543155514","product_id":100020801,"comment_content":"是不是查询名字=。年龄等于，直接都用吗","like_count":0},{"had_liked":false,"id":43072,"user_name":"董航","can_delete":false,"product_type":"c1","uid":1231787,"ip_address":"","ucode":"9CA208FD26F849","user_header":"https://static001.geekbang.org/account/avatar/00/12/cb/ab/1aac53bf.jpg","comment_is_top":false,"comment_ctime":1543155103,"is_pvip":false,"replies":[{"id":"15389","content":"是的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543157301,"ip_address":"","comment_id":43072,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543155103","product_id":100020801,"comment_content":"也就是说在5.6之前，联合索引只有最左边的才有效吗！","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430288,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543157301,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43038,"user_name":"zyy","can_delete":false,"product_type":"c1","uid":1048515,"ip_address":"","ucode":"1D0B2BD7E93C64","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ff/c3/b90b862c.jpg","comment_is_top":false,"comment_ctime":1543146884,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543146884","product_id":100020801,"comment_content":"看到文末留言：老师认同了ca不需要，cb需要加。那么c的（非主键）索引树，并不会包含联合主键（ab）b的值，也要基于最左前缀原则！","like_count":0},{"had_liked":false,"id":43026,"user_name":"23333菜","can_delete":false,"product_type":"c1","uid":1302649,"ip_address":"","ucode":"582576647F18AE","user_header":"https://static001.geekbang.org/account/avatar/00/13/e0/79/75177e2f.jpg","comment_is_top":false,"comment_ctime":1543143593,"is_pvip":false,"replies":[{"id":"15378","content":"在《order by是怎么工作的》这篇会说哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543152622,"ip_address":"","comment_id":43026,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1543143593","product_id":100020801,"comment_content":"orderby什么时候会使用到索引啊？是where查询回表后取得所有row后然后再排序吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430279,"discussion_content":"在《order by是怎么工作的》这篇会说哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543152622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136480,"discussion_content":"应该是排序后再回表。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579143234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43023,"user_name":"梦康","can_delete":false,"product_type":"c1","uid":1069512,"ip_address":"","ucode":"8935F3C329C58E","user_header":"https://static001.geekbang.org/account/avatar/00/10/51/c8/83852d5a.jpg","comment_is_top":false,"comment_ctime":1543141909,"is_pvip":false,"replies":[{"id":"15379","content":"“一起回表”是啥意思。索引一次只能查一个值","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543152689,"ip_address":"","comment_id":43023,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543141909","product_id":100020801,"comment_content":"第一个案例中为什么不是找到主键 3,5之后一起回表呢？这样不是能节约一次I&#47;O吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430277,"discussion_content":"“一起回表”是啥意思。索引一次只能查一个值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543152689,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43015,"user_name":"404  had found","can_delete":false,"product_type":"c1","uid":1025939,"ip_address":"","ucode":"BF6983EB50AC74","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a7/93/62f03467.jpg","comment_is_top":false,"comment_ctime":1543138138,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543138138","product_id":100020801,"comment_content":"可以分享下什么样的sql会让cpu飙升吗？","like_count":0},{"had_liked":false,"id":42998,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1543132805,"is_pvip":true,"discussion_count":1,"race_medal":1,"score":"1543132805","product_id":100020801,"comment_content":"老师 我有个问题哈，如果我有一个历史的表，没有主键索引，只有一个普通索引，现在我用这个普通索引查询，由于没有主键索引，是怎么进行回表查询的呢？ 还是所有的记录在  普通索引的叶子节点上呢？ 这个查询的过程是怎么样的呢？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136481,"discussion_content":"引擎会自动产生主键索引row id.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579143283,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42973,"user_name":"猴哥一一 cium","can_delete":false,"product_type":"c1","uid":1254801,"ip_address":"","ucode":"38EC64F8D1A0B4","user_header":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","comment_is_top":false,"comment_ctime":1543121572,"is_pvip":false,"replies":[{"id":"15355","content":"索引下推是后来才有的。 就是为了快速定位记录。（name,age)对于where name=“a” and age=10就特别快","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543141608,"ip_address":"","comment_id":42973,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543121572","product_id":100020801,"comment_content":"图三，引发一个疑问，为什么要有联合索引这个东西呢？<br>看样子是为了配合使用“索引下推”，减少回表？？？？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430264,"discussion_content":"索引下推是后来才有的。 就是为了快速定位记录。（name,age)对于where name=“a” and age=10就特别快","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543141608,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42914,"user_name":"qwerboo","can_delete":false,"product_type":"c1","uid":1005025,"ip_address":"","ucode":"0FD78F765A4861","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/e1/8c223e95.jpg","comment_is_top":false,"comment_ctime":1543107980,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1543107980","product_id":100020801,"comment_content":"老师，ca索引可以不用，那先按c列来查，查到主键，还得给查到的主键先排序，然后再回表查询，对不对？谢谢！","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136482,"discussion_content":"是的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579143316,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42887,"user_name":"张永志","can_delete":false,"product_type":"c1","uid":1208727,"ip_address":"","ucode":"E54B75EF3F63B3","user_header":"https://static001.geekbang.org/account/avatar/00/12/71/97/f1a3d398.jpg","comment_is_top":false,"comment_ctime":1543072160,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543072160","product_id":100020801,"comment_content":"个儿理解：<br>由于MySQL中二级索引回表通过主键回表，而Oracle通过rowid回表，MySQL回表成本较高。所以，相对来讲，覆盖索引在MySQL中的重要性要比Oracle中高一些。","like_count":0},{"had_liked":false,"id":42836,"user_name":"J!","can_delete":false,"product_type":"c1","uid":1305003,"ip_address":"","ucode":"71C946119B59D1","user_header":"https://static001.geekbang.org/account/avatar/00/13/e9/ab/37903736.jpg","comment_is_top":false,"comment_ctime":1543053953,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1543053953","product_id":100020801,"comment_content":"二级索引末尾不是存主键的指针吗？不是的话那就是ca多余","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136484,"discussion_content":"主键的值。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579143419,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42833,"user_name":"zhxilin℃+","can_delete":false,"product_type":"c1","uid":1063659,"ip_address":"","ucode":"1BBDAF534CDD65","user_header":"https://static001.geekbang.org/account/avatar/00/10/3a/eb/b83988e9.jpg","comment_is_top":false,"comment_ctime":1543053502,"is_pvip":false,"replies":[{"id":"15324","content":"重复度低表示过滤性好，不过还得看有没有用呀","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543062632,"ip_address":"","comment_id":42833,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543053502","product_id":100020801,"comment_content":"主键&lt;a,b&gt;本身已是有序的，<br>对于where c = N order by a，在索引c找到主键&lt;a,b&gt;之后回表，根据最左前缀原则，此时按a排序的需求在主键中可以直接满足，因此再建立索引&lt;c,a&gt;是没必要的；<br>对于where c = N order by b，在索引c找到主键&lt;a,b&gt;之后回表，根据最左前缀原则，按此按b排序的需求在主键中没有直接满足，因此有必要建立索引&lt;c,b&gt;提升效率。<br><br>老师，在对哪些字段建立索引这个问题上，有什么样的原则可以参考吗？可否以某字段在整表中的重复率为依据，重复率越高就应该对其建立索引？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430211,"discussion_content":"重复度低表示过滤性好，不过还得看有没有用呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543062632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42832,"user_name":"蓝色蓓蕾帽","can_delete":false,"product_type":"c1","uid":1016822,"ip_address":"","ucode":"8C28E204DE298D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/83/f6/a1e7403a.jpg","comment_is_top":false,"comment_ctime":1543053383,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543053383","product_id":100020801,"comment_content":"本期问题回答：根据“尽量少地访问资源是数据库设计的重要原则之一”。`select * from geek where c=N order by a limit 1；`，如果不创建“ca”索引，若c=N查到的数据量大，因为要用另一列a排序，所以二级索引必须回表，查很多次记录，然后用每条记录的a列排序，取符合条件的第一条，资源消耗大； 如果创建“ca”索引，有索引下推，找到符合条件的a,然后回表，只查一条记录也就是只回一次表。所以要加“ca”“cb”联合索引。<br>","like_count":0},{"had_liked":false,"id":42822,"user_name":"骑车吃火锅","can_delete":false,"product_type":"c1","uid":1303591,"ip_address":"","ucode":"6C00EEB90AD539","user_header":"https://static001.geekbang.org/account/avatar/00/13/e4/27/73359af3.jpg","comment_is_top":false,"comment_ctime":1543051940,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543051940","product_id":100020801,"comment_content":"order by a不需要单独创建索引，已经有了主健索引，不需要回表了。 order by b的索引需要","like_count":0},{"had_liked":false,"id":42811,"user_name":"黑不出溜","can_delete":false,"product_type":"c1","uid":1304483,"ip_address":"","ucode":"5EE05FC4E9A15C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ9ZwVugUvaibxe5Ze06gfp3mFfkAibOZqLJ0VodotLyxZ93gKpiaAtdgGiaXt5bPEkhLWwoyFIYfgL4A/132","comment_is_top":false,"comment_ctime":1543050205,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543050205","product_id":100020801,"comment_content":"ca,cb两个索引都是没有必要留的，因为表已经按照主键ab有序保存的，后面两个查询，回表获得的数据就是按照ab有序排列的。","like_count":0},{"had_liked":false,"id":42796,"user_name":"WL","can_delete":false,"product_type":"c1","uid":1173771,"ip_address":"","ucode":"6277DCD776B87E","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/0b/1171ac71.jpg","comment_is_top":false,"comment_ctime":1543047729,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543047729","product_id":100020801,"comment_content":"思考题:&quot;ca&quot; 的索引应该不是必须的, 因为根据最左前缀原则主键索引中a已经在左侧了, 所以就没必要在创建&quot;ca&quot;的索引了.","like_count":0},{"had_liked":false,"id":42793,"user_name":"发条橙子 。","can_delete":false,"product_type":"c1","uid":1259218,"ip_address":"","ucode":"ED076F4534FFED","user_header":"https://static001.geekbang.org/account/avatar/00/13/36/d2/c7357723.jpg","comment_is_top":false,"comment_ctime":1543046365,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543046365","product_id":100020801,"comment_content":"谢谢老师的回答 脑袋里大概有了整体的链路 。😄<br>还有个小点希望指点下 ：一个数据页只存放一个阶级的数据么 。 例如一个3阶的树， 就要每一阶放一个数据页中 。还是说如果一个数据页16k 能够存放3阶的数据，就将这3阶树存放在一个数据页中 。  ","like_count":0},{"had_liked":false,"id":42792,"user_name":"Anthony","can_delete":false,"product_type":"c1","uid":1309908,"ip_address":"","ucode":"9E0C98A9123365","user_header":"https://static001.geekbang.org/account/avatar/00/13/fc/d4/743d3f02.jpg","comment_is_top":false,"comment_ctime":1543046123,"is_pvip":false,"replies":[{"id":"15327","content":"如果索引里面包含了所有需要的信息就不需要回表的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543064517,"ip_address":"","comment_id":42792,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543046123","product_id":100020801,"comment_content":"老师，我有一个疑问，按照您上面课程讲的查询语句的例子，通过索引已经确定把要找的语句找出来了，为什么还要回表到主键上才能把语句取出来返回呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430200,"discussion_content":"如果索引里面包含了所有需要的信息就不需要回表的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543064517,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42778,"user_name":"唐堂","can_delete":false,"product_type":"c1","uid":1110634,"ip_address":"","ucode":"BBCF36B21AC256","user_header":"https://static001.geekbang.org/account/avatar/00/10/f2/6a/3bcef8ef.jpg","comment_is_top":false,"comment_ctime":1543042802,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543042802","product_id":100020801,"comment_content":"求问老师用什么软件画的图，特别好看，还有书写感","like_count":0},{"had_liked":false,"id":42775,"user_name":"keepmoving","can_delete":false,"product_type":"c1","uid":1283564,"ip_address":"","ucode":"0EAC0DB74AB3AC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ4GbaLSZhuibIujCTJAusp0faVqXM15tqicqrM5Urd3ic5XytM1OTXd1jdFeboAgfxN33dpyhNjg4zw/132","comment_is_top":false,"comment_ctime":1543042304,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543042304","product_id":100020801,"comment_content":"使用group by语句使用松散索引进行分组时，下面是5.7版本官方文档的一段话，“when there is no WHERE clause，a Loose Index Scan reads as many keys as the number of groups，which may be a much smaller number than that of all keys”。即“当没有where子句时，松散索引扫描读取的键数与组数一样多，这可能比所有键的数目少的多”。一直不太理解，即便松散索引只需要扫描联合索引中的部分索引列，但如何做到扫描读取的键数和组数一样多的，难道不需要扫描读取每一组键值进行判断是否重复吗？求解答","like_count":0},{"had_liked":false,"id":42772,"user_name":"有个方格子","can_delete":false,"product_type":"c1","uid":1011909,"ip_address":"","ucode":"7D11EDBA336391","user_header":"https://static001.geekbang.org/account/avatar/00/0f/70/c5/94e3e7cb.jpg","comment_is_top":false,"comment_ctime":1543039778,"is_pvip":false,"replies":[{"id":"15309","content":"上一个记录的位置信息有用的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543042648,"ip_address":"","comment_id":42772,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543039778","product_id":100020801,"comment_content":"请教老师，关于“SELECT ID FROM T WHERE k BETWEEN 3 AND 5&quot;搜索几次树这个，MySQL是每次都从根开始搜索呢（我看文章描述的似乎是这样，是不是我理解偏了）？还是第一次从根搜索到3（或者5）后，就沿着叶子结点一路向右（向左）直接获取叶子结点数据，不用每次都从根开始搜索呢？貌似Oracle是找到3后，直接向右找到5就可以了，是这样吧。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430193,"discussion_content":"上一个记录的位置信息有用的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543042648,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42748,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1119593,"ip_address":"","ucode":"94656FE4A6C378","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","comment_is_top":false,"comment_ctime":1543032796,"is_pvip":true,"replies":[{"id":"15310","content":"你就用5.7最新版，碰到跟文章不一致的，你就直接贴到评论区。<br>差异不是很大，只是我特别列了有差异的点，造成“假象”😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543042738,"ip_address":"","comment_id":42748,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543032796","product_id":100020801,"comment_content":"老师，我想在MySQL中验证一些课程中的结论和自己的猜想的话，版本号使用多少合适？从教程和评论中看出不同的版本差异还是很大的","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430181,"discussion_content":"你就用5.7最新版，碰到跟文章不一致的，你就直接贴到评论区。\n差异不是很大，只是我特别列了有差异的点，造成“假象”😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543042738,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42693,"user_name":"Enterprize","can_delete":false,"product_type":"c1","uid":1215130,"ip_address":"","ucode":"3C120E9023B6C5","user_header":"https://static001.geekbang.org/account/avatar/00/12/8a/9a/7270d764.jpg","comment_is_top":false,"comment_ctime":1543022000,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543022000","product_id":100020801,"comment_content":"希望更新快一点，不过瘾啊","like_count":0},{"had_liked":false,"id":42691,"user_name":"信xin_n","can_delete":false,"product_type":"c1","uid":1141610,"ip_address":"","ucode":"A5BFA5801D0E0C","user_header":"https://static001.geekbang.org/account/avatar/00/11/6b/6a/798232a8.jpg","comment_is_top":false,"comment_ctime":1543021347,"is_pvip":false,"replies":[{"id":"15311","content":"上面一层是用做搜索功能（查询的时候确定往下找哪个儿子节点的）。<br><br>跳过400是为了说“如果要插入一行（400，4）”<br><br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543042951,"ip_address":"","comment_id":42691,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543021347","product_id":100020801,"comment_content":"请问为什么第一张图的300&#47;700，3&#47;7 是在上面一层，另外为什么要跳过了400&#47;4？其实看上一节举例时就有这个疑问。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430161,"discussion_content":"上面一层是用做搜索功能（查询的时候确定往下找哪个儿子节点的）。\n\n跳过400是为了说“如果要插入一行（400，4）”\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543042951,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42659,"user_name":"Smoke","can_delete":false,"product_type":"c1","uid":1037941,"ip_address":"","ucode":"DB5EC493E79F90","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d6/75/ccae113d.jpg","comment_is_top":false,"comment_ctime":1542993154,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542993154","product_id":100020801,"comment_content":"ca不需要，因为左前缀原则，查询c索引可以获取主键ab，即不用回表则可获取a的值。但是b在右边，所以不建立cb索引则会回表","like_count":0},{"had_liked":false,"id":42657,"user_name":"敬艺","can_delete":false,"product_type":"c1","uid":1109680,"ip_address":"","ucode":"08B559B123A1BB","user_header":"https://static001.geekbang.org/account/avatar/00/10/ee/b0/fb5bad5c.jpg","comment_is_top":false,"comment_ctime":1542992926,"is_pvip":false,"replies":[{"id":"15287","content":"你的主要痛苦是什么？可以描述一下，这样我们有针对性地讨论。","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543029812,"ip_address":"","comment_id":42657,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542992926","product_id":100020801,"comment_content":"老师，在实践文章中是否可以给出重构系统时，有什么原则让数据迁移更加顺畅一点，如表设计，迁移工具等方面。之前做的新系统没考虑好数据迁移问题，等上线之后迁移比较痛苦。希望老师能给出一些指导。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430150,"discussion_content":"你的主要痛苦是什么？可以描述一下，这样我们有针对性地讨论。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543029812,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42616,"user_name":"小徐","can_delete":false,"product_type":"c1","uid":1303757,"ip_address":"","ucode":"522B5CD3732313","user_header":"https://static001.geekbang.org/account/avatar/00/13/e4/cd/fc140973.jpg","comment_is_top":false,"comment_ctime":1542979859,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1542979859","product_id":100020801,"comment_content":"老师问下，b+高度怎么计算啊","like_count":0,"discussions":[{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":81195,"discussion_content":"移驾数据结构与算法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576231252,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42610,"user_name":"反旋律","can_delete":false,"product_type":"c1","uid":1054766,"ip_address":"","ucode":"AA4BC3CB74C497","user_header":"https://static001.geekbang.org/account/avatar/00/10/18/2e/a7d79b41.jpg","comment_is_top":false,"comment_ctime":1542978854,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1542978854","product_id":100020801,"comment_content":"老师，我一个问题不是太明白<br>根据普通索引查询时会回表去主键索引中查询，那如果没有主键索引会怎样？<br>只有普通索引的情况下是不是普通索引对应的直接就是数据？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136495,"discussion_content":"会有主键索引的，如果没有指定，引擎会创建一个默认主键row id","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579144080,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42605,"user_name":"黄文韬","can_delete":false,"product_type":"c1","uid":1302800,"ip_address":"","ucode":"60BE7A087E1612","user_header":"https://static001.geekbang.org/account/avatar/00/13/e1/10/6a1fe19a.jpg","comment_is_top":false,"comment_ctime":1542977815,"is_pvip":false,"replies":[{"id":"15277","content":"有啊，还是快速定位到“张”了，<br><br>从头开始扫索引扫到这里，才叫完全没有用上引擎，那样很慢","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542995077,"ip_address":"","comment_id":42605,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542977815","product_id":100020801,"comment_content":"老师，图三那个逻辑没理解，5.6之前的版本，如果通过name匹配上后回表查记录再匹配id，那这样联合索引不就相当于没用吗(name,age)","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430139,"discussion_content":"有啊，还是快速定位到“张”了，\n\n从头开始扫索引扫到这里，才叫完全没有用上引擎，那样很慢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542995077,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42604,"user_name":"DanielAnton","can_delete":false,"product_type":"c1","uid":1308521,"ip_address":"","ucode":"69D49AC70898B0","user_header":"https://static001.geekbang.org/account/avatar/00/13/f7/69/d8dba3de.jpg","comment_is_top":false,"comment_ctime":1542977499,"is_pvip":false,"replies":[{"id":"15278","content":"覆盖索引本来就不会回表哈，第三次读出来，判错就结束的意思","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542995134,"ip_address":"","comment_id":42604,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542977499","product_id":100020801,"comment_content":"原文：在引擎内部覆盖索引在索引 k 上其实读了三个记录，R3~R5（对应的索引 k 上的记录项）.<br>我的问题是在 k 索引树上搜索 k=6时，发现条件不满足，不就结束了吗，难道还会回到主键索引去读一遍 R5 的值吗? 所以这里的读了“三个记录”，是不是有问题？应该是两个吧！","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430138,"discussion_content":"覆盖索引本来就不会回表哈，第三次读出来，判错就结束的意思","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542995134,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42596,"user_name":"落叶飞逝的恋","can_delete":false,"product_type":"c1","uid":1046429,"ip_address":"","ucode":"F9A95DB28BCF1E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/9d/be04b331.jpg","comment_is_top":false,"comment_ctime":1542976273,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542976273","product_id":100020801,"comment_content":"思考题：<br>为了这两个语句select * from geek where c=N order by a limit 1;select * from geek where c=N order by b limit 1;而创建KEY `ca` (`c`,`a`), KEY `cb` (`c`,`b`)的解释是不对的。首先结合文中的例子代码，创建索引是为了方便查询数据，而不是排序数据，是在where查询的时候才有作用，而不是Order。所以正确的创建ca于cb只有在用到下面的语句才有用：select * from geek where c=N and a=x ；或者select * from geek where c=N and b=x这样的查询语句，才能解释的通创建ca与cb的理由！请老师指教！<br>","like_count":0},{"had_liked":false,"id":42594,"user_name":"John","can_delete":false,"product_type":"c1","uid":1302506,"ip_address":"","ucode":"B4490A065DD779","user_header":"https://static001.geekbang.org/account/avatar/00/13/df/ea/5aad0029.jpg","comment_is_top":false,"comment_ctime":1542976032,"is_pvip":false,"replies":[{"id":"15279","content":"嗯嗯，就是为了便于说明哈哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542995174,"ip_address":"","comment_id":42594,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542976032","product_id":100020801,"comment_content":"一般不会有age这样的字段，出生日期比较合理😄","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430137,"discussion_content":"嗯嗯，就是为了便于说明哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542995174,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42581,"user_name":"李勇","can_delete":false,"product_type":"c1","uid":1303796,"ip_address":"","ucode":"7BC9DE501890D4","user_header":"https://static001.geekbang.org/account/avatar/00/13/e4/f4/96fa9deb.jpg","comment_is_top":false,"comment_ctime":1542973947,"is_pvip":true,"replies":[{"id":"15281","content":"好问题，后面有一篇文章专门讲这个","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542995228,"ip_address":"","comment_id":42581,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542973947","product_id":100020801,"comment_content":"老师，有个问题要咨询一下，如果在进行聚合查询的时候是如何走索引操作的呢？同时比如select count(*) 和 select count(id)和 select count(1)这三种写法分别有什么区别呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430134,"discussion_content":"好问题，后面有一篇文章专门讲这个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542995228,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42539,"user_name":"undifined","can_delete":false,"product_type":"c1","uid":1068920,"ip_address":"","ucode":"449CB4CD2DC089","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/78/c3d8ecb0.jpg","comment_is_top":false,"comment_ctime":1542967710,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1542967710","product_id":100020801,"comment_content":"老师 SELECT *<br>FROM T WHERE ID IN (SELECT ID FROM T WHERE k BETWEEN 3 AND 5);<br>这样写会不会比 SELECT * FROM T WHERE k BETWEEN 3 AND 5 快","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136499,"discussion_content":"应该是一样的吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579144229,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42534,"user_name":"路过","can_delete":false,"product_type":"c1","uid":1316401,"ip_address":"","ucode":"7152C19ED024CC","user_header":"https://static001.geekbang.org/account/avatar/00/14/16/31/ae8adf82.jpg","comment_is_top":false,"comment_ctime":1542966771,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542966771","product_id":100020801,"comment_content":"去掉ca索引：利用索引覆盖查询，解决第一个select语句问题。<br>第二个语句，利用cb索引。<br>","like_count":0},{"had_liked":false,"id":42519,"user_name":"suhui","can_delete":false,"product_type":"c1","uid":1155326,"ip_address":"","ucode":"53BD826C1164F9","user_header":"https://static001.geekbang.org/account/avatar/00/11/a0/fe/ac5a62f3.jpg","comment_is_top":false,"comment_ctime":1542964272,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542964272","product_id":100020801,"comment_content":"思考题:ca索引是没有必要的，二级索引的叶子节点上存储了主键值也就是ab，order by a的时候根据最左索引匹配可以使用索引，而order by b则不能，因此保留cb索引。","like_count":0},{"had_liked":false,"id":42511,"user_name":"似水流年","can_delete":false,"product_type":"c1","uid":1304443,"ip_address":"","ucode":"D114A8E273133C","user_header":"https://static001.geekbang.org/account/avatar/00/13/e7/7b/71da8283.jpg","comment_is_top":false,"comment_ctime":1542963575,"is_pvip":false,"replies":[{"id":"15283","content":"不是，这样语义不对吧😄<br>是说你写 like “a%” 或 like “ab%” 或 like “abc%” 都可以用上索引树来快速定位记录。","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542995442,"ip_address":"","comment_id":42511,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542963575","product_id":100020801,"comment_content":"我对下面的话，“这个最左前缀可以是联合索引的最左 N 个字段，也可以是字符串索引的最左 M 个字符。”理解为select * from t where k like abc%时，会搜索a,ab,abc开头的字符。这样理解对吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430112,"discussion_content":"不是，这样语义不对吧😄\n是说你写 like “a%” 或 like “ab%” 或 like “abc%” 都可以用上索引树来快速定位记录。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542995442,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42506,"user_name":"小文同学","can_delete":false,"product_type":"c1","uid":1001893,"ip_address":"","ucode":"48F2AEB989C12A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/a5/e4c1c2d4.jpg","comment_is_top":false,"comment_ctime":1542962932,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1542962932","product_id":100020801,"comment_content":"(a,b) 索引中，本身对a就有排序，根据索引下推，在排序的数据里获取出c=N的数据应该可以很快。ca索引是没有必要的，(c,b)所以在帮助查询的时候有效果。我觉得可以保留。期待其他的同学和老师的解答","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136500,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579144263,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42504,"user_name":"佳","can_delete":false,"product_type":"c1","uid":1263049,"ip_address":"","ucode":"F25D82CC74A76D","user_header":"https://static001.geekbang.org/account/avatar/00/13/45/c9/a4f7054f.jpg","comment_is_top":false,"comment_ctime":1542962875,"is_pvip":false,"replies":[{"id":"15192","content":"题目是order by 哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542969718,"ip_address":"","comment_id":42504,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542962875","product_id":100020801,"comment_content":"这个同学解释的不正确，那(c,a)和(c,b)索引也没有必要，首先表中现在有(a,b),c,(c,a),(c,b)这几个索引，但是group by a根据最左索引匹配原则会使用(a,b)索引，group by b压根就用不到表中的任意一个索引，所以(c,a)和(c,b)是多余的","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430110,"discussion_content":"题目是order by 哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542969718,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42502,"user_name":"神州第一媒","can_delete":false,"product_type":"c1","uid":1297178,"ip_address":"","ucode":"A431DC82CE4260","user_header":"","comment_is_top":false,"comment_ctime":1542962644,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542962644","product_id":100020801,"comment_content":"1、之前说主键索引（聚族索引）存储的是整行的数据的话，这个整行数据存储方式是什么？ 是这条数据在内存中的映射？磁盘位置？还是直接存储了所有字段的key&#47;value？  如果是后一种方式，那对数据的任何修改是不是都要更新这个主键索引？<br><br>2、关于主键，如果使用自增的话，有一个弊端就是应用很容易暴露出真实的数据情况（数据行数），而且在开发时，如果权限控制不严谨，很容易造成数据泄漏（篡改ID值），所以现在我们都是用UUID，这个UUID做主键的话，它在生成B+树时，这个排序规则是根据什么来的？它的算法是不是能保证新的数据插入不会引起索引的大规模重建？？<br><br>小白用户，谢谢！","like_count":0},{"had_liked":false,"id":42495,"user_name":"宋文杰","can_delete":false,"product_type":"c1","uid":1034773,"ip_address":"","ucode":"2F5425B179F471","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ca/15/e3f9fb4e.jpg","comment_is_top":false,"comment_ctime":1542962025,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1542962025","product_id":100020801,"comment_content":"根据最左原则  ca没必要，  主键索引a,b可以满足排序使用；<br>cb也没有必要， cb ab 都无法使用索引排序，应该给b单独建立索引","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136502,"discussion_content":"根据题意，不用给b建立索引，ca没必要，cb留下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579144370,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42489,"user_name":"雪中鼠","can_delete":false,"product_type":"c1","uid":1082083,"ip_address":"","ucode":"EBEF2C2422BC93","user_header":"https://static001.geekbang.org/account/avatar/00/10/82/e3/d9285284.jpg","comment_is_top":false,"comment_ctime":1542961525,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1542961525","product_id":100020801,"comment_content":"很想问一个问题，如果一个表的字段都有可能用来做排序，请问我应该如何建索引，是每个字段都建立一个独立的索引么？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136504,"discussion_content":"那你应该用ES了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579144386,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42481,"user_name":"Li Shunduo","can_delete":false,"product_type":"c1","uid":1222882,"ip_address":"","ucode":"6C5AB4129E9780","user_header":"https://static001.geekbang.org/account/avatar/00/12/a8/e2/f8e51df2.jpg","comment_is_top":false,"comment_ctime":1542960542,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1542960542","product_id":100020801,"comment_content":"思考题:<br>由于需要select *, 回表是难免的，这个角度看ca, cb索引就没有必要了。","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136505,"discussion_content":"ca没必要，cb留下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579144404,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42478,"user_name":"yang11111","can_delete":false,"product_type":"c1","uid":1255389,"ip_address":"","ucode":"6AAF458051AFB4","user_header":"https://static001.geekbang.org/account/avatar/00/13/27/dd/ec656592.jpg","comment_is_top":false,"comment_ctime":1542960229,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542960229","product_id":100020801,"comment_content":"老师偶尔出现lock wait time exceeded 是怎么回事。急 本人对mysql 事务了解很少 希望老师给个思路","like_count":0},{"had_liked":false,"id":42470,"user_name":"安小依","can_delete":false,"product_type":"c1","uid":1101660,"ip_address":"","ucode":"A5C414C7B994FF","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/5c/d4e19eb6.jpg","comment_is_top":false,"comment_ctime":1542959004,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542959004","product_id":100020801,"comment_content":"老师，关于（姓名，年龄）联合索引的例子，那几条记录的顺序的问题：是先按照姓名排序 (李四 &lt; 王五 &lt; 张六 &lt; 张三)，然后再按照年龄排序 ，比如张三（10 &lt; 10 &lt; 20）。这就是联合索引的字段顺序的排列顺序吗？","like_count":0},{"had_liked":false,"id":42469,"user_name":"XD","can_delete":false,"product_type":"c1","uid":1079293,"ip_address":"","ucode":"DC9DCFB3841A4E","user_header":"https://static001.geekbang.org/account/avatar/00/10/77/fd/c6619535.jpg","comment_is_top":false,"comment_ctime":1542958952,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1542958952","product_id":100020801,"comment_content":"如果T中的索引是（a,b），当查询条件中包括abc时，引擎只把走（a,b）索引得到的结果返回给执行器（explain结果里的rows），按c过滤是在执行器做的对吗？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136507,"discussion_content":"应该是引擎层执行的吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579144470,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42466,"user_name":"tangxinzhuan","can_delete":false,"product_type":"c1","uid":1267648,"ip_address":"","ucode":"CC8CE3551FF6BC","user_header":"https://static001.geekbang.org/account/avatar/00/13/57/c0/5e41adf9.jpg","comment_is_top":false,"comment_ctime":1542958365,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1542958365","product_id":100020801,"comment_content":"我有一个user表，字段有主键ID，loginName，password，name，other....，业务需求要求登录名是唯一的，因此我给loginName这个字段配置了unique唯一索引，现在又有一个业务需求，要求根据loginName能快速得到name，我现在的问题是，之前我已经给loginName这个字段配置了unique唯一索引，现在要不要再建立一个联合索引（loginName, name）？  请老师讲解一下，谢谢！","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136520,"discussion_content":"那你就直接将原来那个loginname索引，再加一个字段，变成联合索引就行了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579145608,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1267648,"avatar":"https://static001.geekbang.org/account/avatar/00/13/57/c0/5e41adf9.jpg","nickname":"tangxinzhuan","note":"","ucode":"CC8CE3551FF6BC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382236,"discussion_content":"原来那个索引是unique索引，改了就会导致有登录名重复的隐患","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625481952,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":136520,"ip_address":""},"score":382236,"extra":""}]}]},{"had_liked":false,"id":42460,"user_name":"Enterprize","can_delete":false,"product_type":"c1","uid":1215130,"ip_address":"","ucode":"3C120E9023B6C5","user_header":"https://static001.geekbang.org/account/avatar/00/12/8a/9a/7270d764.jpg","comment_is_top":false,"comment_ctime":1542957692,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1542957692","product_id":100020801,"comment_content":"innodb 里为啥只能有一个主键索引？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136522,"discussion_content":"没有为啥。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579145633,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42457,"user_name":"一梦如是","can_delete":false,"product_type":"c1","uid":1305308,"ip_address":"","ucode":"9CCB1D0E547C83","user_header":"https://static001.geekbang.org/account/avatar/00/13/ea/dc/9a970e98.jpg","comment_is_top":false,"comment_ctime":1542957193,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542957193","product_id":100020801,"comment_content":"老师，我提个问题，redo log buffer这部分内存空间是包含在buffer pool里的，还是独立于buffer pool的呢？","like_count":0},{"had_liked":false,"id":42439,"user_name":"ajlidue","can_delete":false,"product_type":"c1","uid":1308376,"ip_address":"","ucode":"D6B29E941958E8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er6NXib2NGaTAAEe2KCcibH2FiafOOD73kQdcuAMGrnRib5CDWXum0SWDOM9NnWicbUsDpghmxEmJtpk9w/132","comment_is_top":false,"comment_ctime":1542954780,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1542954780","product_id":100020801,"comment_content":"老师，我理解的，B+树是一棵多路平衡搜索树，随着数据的插入和删除，B+树的节点会进行相应的分裂和合并,为什么又会造成非常大的磁盘空洞呢？是因为即便进行了分裂和合并，很多页也都是不满的，造成了空间的浪费吗？所以通过重建索引的方式，让每个页都填满，从而将浪费的空间释放出来","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136524,"discussion_content":"可以这么理解吧，不过好像大量删除数据后，有一些索引虽然没有数据了，好像也是占空间的。好像是。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579145787,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42430,"user_name":"ajlidue","can_delete":false,"product_type":"c1","uid":1308376,"ip_address":"","ucode":"D6B29E941958E8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er6NXib2NGaTAAEe2KCcibH2FiafOOD73kQdcuAMGrnRib5CDWXum0SWDOM9NnWicbUsDpghmxEmJtpk9w/132","comment_is_top":false,"comment_ctime":1542952964,"is_pvip":false,"replies":[{"id":"15159","content":"1. 对<br>2. 如果同时需要查出年龄，是的。所以说索引设计要根据因为查询模式来定","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542953253,"ip_address":"","comment_id":42430,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542952964","product_id":100020801,"comment_content":"1，查询只查自己需要的字段是否就是为了充分利用覆盖索引带来的好处。<br>2，根据身份证号查询姓名和年龄的高频请求，是不是建（身份证号，姓名，年龄）的联合索引比（身份证号，年龄）的联合索引查询效率要高一点","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430089,"discussion_content":"1. 对\n2. 如果同时需要查出年龄，是的。所以说索引设计要根据因为查询模式来定","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542953253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42426,"user_name":"我是曾经那个少年","can_delete":false,"product_type":"c1","uid":1015189,"ip_address":"","ucode":"9F02F7FF147D14","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/95/dd73022c.jpg","comment_is_top":false,"comment_ctime":1542952390,"is_pvip":false,"replies":[{"id":"15160","content":"现在的磁盘其实空间问题大多是时候不是主要问题了。所以一般会建议优先考虑查询性能","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542953349,"ip_address":"","comment_id":42426,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542952390","product_id":100020801,"comment_content":"老师我想咨询的问题就是：大家都知道建立索引可以提高查询效率，但是索引太多会导致索引占用的存储空间比原始数据都要大，请问这两个要怎么去平衡。第二次提问了，希望来时能恢复一下。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430088,"discussion_content":"现在的磁盘其实空间问题大多是时候不是主要问题了。所以一般会建议优先考虑查询性能","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542953349,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42423,"user_name":"lucas","can_delete":false,"product_type":"c1","uid":1064052,"ip_address":"","ucode":"2AE7992B0EA534","user_header":"https://static001.geekbang.org/account/avatar/00/10/3c/74/580d5bbb.jpg","comment_is_top":false,"comment_ctime":1542951528,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542951528","product_id":100020801,"comment_content":"索(c,a) 可以去掉(c,b)需要保留，应为 有联合主键(a,b)的存在，并且根据最左前缀的规则  显然c索引已经包含了 (c,a)","like_count":0},{"had_liked":false,"id":42421,"user_name":"风轨","can_delete":false,"product_type":"c1","uid":1185844,"ip_address":"","ucode":"7B8A5233B61EB0","user_header":"https://static001.geekbang.org/account/avatar/00/12/18/34/c082419c.jpg","comment_is_top":false,"comment_ctime":1542951476,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1542951476","product_id":100020801,"comment_content":"ca，cb应该是没必要的，<br>如果条件c过滤出的数据很少，内存排序也很快，单独建一个列索引即可。<br>如果命中数据很多，注意到这个表还有d列，如果查询列里面包含d，那么就会有很多次回表，产生大量io，这性能不一定比全表扫更快，要建联合索引将是(c,a,b,d)以及(c,b,a,d)。<br><br>如果查询列只包含abc三列，这两个索引是可以加速排序的。<br>","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136526,"discussion_content":"ca去掉，cb留下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579145905,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42400,"user_name":"李志博","can_delete":false,"product_type":"c1","uid":1009109,"ip_address":"","ucode":"F3C72573B3C112","user_header":"https://static001.geekbang.org/account/avatar/00/0f/65/d5/88beb15a.jpg","comment_is_top":false,"comment_ctime":1542949093,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542949093","product_id":100020801,"comment_content":"我觉得是对的，由于最左前缀原则，按b排序那个会出现using file sort","like_count":0},{"had_liked":false,"id":42389,"user_name":"Acrisius","can_delete":false,"product_type":"c1","uid":1136041,"ip_address":"","ucode":"F56302B3D33764","user_header":"https://static001.geekbang.org/account/avatar/00/11/55/a9/08ba9ecd.jpg","comment_is_top":false,"comment_ctime":1542946352,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542946352","product_id":100020801,"comment_content":"课后答题：<br>一开始也觉得是只需要CB索引，但是根据题目实际操作了一下，得到的结果是select .. from geek where c=1 order by a 这一条，假设在只有CB索引的情况下，是不会用到AB索引的，索引是根据条件来判断是否使用索引，条件只有C=1所以AB索引不会被用，只会用到CB索引，得到结果集后再对结果集进行排序，所以建立CA索引是没有问题的。<br>老师有个问题请教一下，就是这个问题 CA和CB索引 就只能使用在单表查询这个场景，那在数据量庞大的情况下，单索引与联合索引所占缓存空间跟优化的时间的取舍，在多表join的时候，联合索引的应用场景","like_count":0},{"had_liked":false,"id":42381,"user_name":"hhhh","can_delete":false,"product_type":"c1","uid":1256101,"ip_address":"","ucode":"9E87017424B382","user_header":"https://static001.geekbang.org/account/avatar/00/13/2a/a5/625c0a2e.jpg","comment_is_top":false,"comment_ctime":1542944687,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542944687","product_id":100020801,"comment_content":"cb索引是必须的，ca索引是不必要的","like_count":0},{"had_liked":false,"id":42379,"user_name":"ʸᵉ ᶠᵉᶮᵍ","can_delete":false,"product_type":"c1","uid":1280969,"ip_address":"","ucode":"BD6B8B01F78A21","user_header":"https://static001.geekbang.org/account/avatar/00/13/8b/c9/4281a2a3.jpg","comment_is_top":false,"comment_ctime":1542944475,"is_pvip":false,"replies":[{"id":"15154","content":"没听说过 回行…","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542949680,"ip_address":"","comment_id":42379,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542944475","product_id":100020801,"comment_content":"老师,你讲的回表和网上的回行是不一样的吧!没有讲回行的情况..希望能精讲一下","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430073,"discussion_content":"没听说过 回行…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542949680,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42376,"user_name":"一梦如是","can_delete":false,"product_type":"c1","uid":1305308,"ip_address":"","ucode":"9CCB1D0E547C83","user_header":"https://static001.geekbang.org/account/avatar/00/13/ea/dc/9a970e98.jpg","comment_is_top":false,"comment_ctime":1542944314,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542944314","product_id":100020801,"comment_content":"c a的索引没啥必要，因为根据左侧匹配原则，a本身是主键左侧项，本身已经按序排好了，而b作为联合主键的右侧项，不一定是有序的，所以c b可以减少排序时间","like_count":0},{"had_liked":false,"id":42372,"user_name":"Safufu","can_delete":false,"product_type":"c1","uid":1311806,"ip_address":"","ucode":"D59C3C136D356B","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqNKGqOqXlibicdsywqCDMV1IAiaUEibWufvRHQppFsHeZWIVOho02XLTxegcOoaOiarmvQwgl6VevC1VQ/132","comment_is_top":false,"comment_ctime":1542943855,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1542943855","product_id":100020801,"comment_content":"思考题还应该看select的字段吧 如果单个索引能覆盖的话就没什么问题，但是要回表的话ca就没有必要了","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136529,"discussion_content":"不管怎么操作，ca都没必要了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579146033,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42365,"user_name":"辣酱","can_delete":false,"product_type":"c1","uid":1156147,"ip_address":"","ucode":"3B009B02CBFF9F","user_header":"https://static001.geekbang.org/account/avatar/00/11/a4/33/fdc331c3.jpg","comment_is_top":false,"comment_ctime":1542942938,"is_pvip":false,"replies":[{"id":"15147","content":"最左N个字段或字符串最左N个字符。你的问题是啥","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542948026,"ip_address":"","comment_id":42365,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542942938","product_id":100020801,"comment_content":"老师我感觉最左前缀讲的不是很清楚。。。。。。。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430067,"discussion_content":"最左N个字段或字符串最左N个字符。你的问题是啥","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542948026,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42364,"user_name":"飞翔","can_delete":false,"product_type":"c1","uid":1303038,"ip_address":"","ucode":"30D659BD4BD0AA","user_header":"","comment_is_top":false,"comment_ctime":1542942935,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542942935","product_id":100020801,"comment_content":"第一个索引没必要，第二个索引考虑消除排序有必要。","like_count":0},{"had_liked":false,"id":42356,"user_name":"有趣的灵魂","can_delete":false,"product_type":"c1","uid":1316167,"ip_address":"","ucode":"AC2A9519500267","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIFMkbt10jJJvu7OoudbmJRTJ7D8SKibYoSKD2iculwsq1QDsCtJ3QEeGUQZVR78GlX4uY3ia2znkRbQ/132","comment_is_top":false,"comment_ctime":1542942543,"is_pvip":false,"replies":[{"id":"15148","content":"没这么说呀","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542948050,"ip_address":"","comment_id":42356,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542942543","product_id":100020801,"comment_content":"老师，为什么联合索引的例子，使用idcard查询是全表扫描？？？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430065,"discussion_content":"没这么说呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542948050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42325,"user_name":"西二旗啤酒王","can_delete":false,"product_type":"c1","uid":1005131,"ip_address":"","ucode":"E064F32437812C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/4b/31369ca6.jpg","comment_is_top":false,"comment_ctime":1542940484,"is_pvip":false,"replies":[{"id":"15136","content":"是的，昨晚的图少了这几个数字，早上补过了，你刷新下","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542941225,"ip_address":"","comment_id":42325,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542940484","product_id":100020801,"comment_content":"有个地方不太明白，图4中左边name,age联合索引中age应该有值吧？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430048,"discussion_content":"是的，昨晚的图少了这几个数字，早上补过了，你刷新下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542941225,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42305,"user_name":"Aw","can_delete":false,"product_type":"c1","uid":1309811,"ip_address":"","ucode":"C0990721C2C9B6","user_header":"https://static001.geekbang.org/account/avatar/00/13/fc/73/439454b0.jpg","comment_is_top":false,"comment_ctime":1542938785,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542938785","product_id":100020801,"comment_content":"alter table ….engine=innodb是可以整理碎片，回收部分表空间的。听说在数据量小或者buffer pool 比较小的时候（小于30G）是很不错的。","like_count":0},{"had_liked":false,"id":42302,"user_name":"阡陌r","can_delete":false,"product_type":"c1","uid":1075861,"ip_address":"","ucode":"3BFF41E865905D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL23Wicb0gO9RGBBroHo1t47Hp0ZRd4lfibBpHhpWxq83nD0tKfP1xficfUhAib7icET20hiav0U36Fkzaw/132","comment_is_top":false,"comment_ctime":1542938495,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542938495","product_id":100020801,"comment_content":"对于课后问题说一下我的理解，望指正：<br>结论:不需要ca索引, 需要cb索引<br>理由:<br>select ... from freek where c=N order by a;<br>    如果有ca索引，只需要利用ca索引找到数据并排序,再回表利用主键索引ab找到整行数据<br>    如果只有c索引,需要利用c索引找到数据,再回表利用ab主键索引找到证行数据并排序（利用前缀索引）<br>select ... from freek where c=N order by b;<br>    如果有cb索引，只需要利用cb索引找到数据并排序,再回表利用主键索引ab找到整行数据<br>    如果只有c索引,需要利用c索引找到数据,再回表利用ab主键索引找到证行数据,排序的话走不了索引。<br><br><br><br>","like_count":0},{"had_liked":false,"id":42299,"user_name":"泰格杨","can_delete":false,"product_type":"c1","uid":1182151,"ip_address":"","ucode":"DF23BD9D31B536","user_header":"https://static001.geekbang.org/account/avatar/00/12/09/c7/861b4a70.jpg","comment_is_top":false,"comment_ctime":1542938268,"is_pvip":false,"replies":[{"id":"15132","content":"但是如果业务就是要这么查，”where age =50”， 还是不得不建这个索引","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542940975,"ip_address":"","comment_id":42299,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542938268","product_id":100020801,"comment_content":"一般市民表比较大吧，假设2kw，age范围应该是从0-120，区分度不是很大，建立索引意义大么？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430039,"discussion_content":"但是如果业务就是要这么查，”where age =50”， 还是不得不建这个索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542940975,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42264,"user_name":"金龟","can_delete":false,"product_type":"c1","uid":1228500,"ip_address":"","ucode":"1C7D35C8AE8D9D","user_header":"https://static001.geekbang.org/account/avatar/00/12/be/d4/ff1c1319.jpg","comment_is_top":false,"comment_ctime":1542936163,"is_pvip":false,"replies":[{"id":"15125","content":"还要判断ismale，而且还select * ,需要回表","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542938820,"ip_address":"","comment_id":42264,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542936163","product_id":100020801,"comment_content":"图3，图4是什么意思啊，name，age已经建立联合索引后，age应该就不用回表了吧。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430029,"discussion_content":"还要判断ismale，而且还select * ,需要回表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542938820,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42253,"user_name":"PAN","can_delete":false,"product_type":"c1","uid":1241407,"ip_address":"","ucode":"F0A5610C62AF58","user_header":"https://static001.geekbang.org/account/avatar/00/12/f1/3f/ea64fccb.jpg","comment_is_top":false,"comment_ctime":1542935825,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542935825","product_id":100020801,"comment_content":"猜测下 用了联合主键后 应该已经包含ab在了索引了吧？","like_count":0},{"had_liked":false,"id":42233,"user_name":"子夜2104","can_delete":false,"product_type":"c1","uid":1070286,"ip_address":"","ucode":"C4FF54AEA6002F","user_header":"https://static001.geekbang.org/account/avatar/00/10/54/ce/92029d2f.jpg","comment_is_top":false,"comment_ctime":1542934822,"is_pvip":false,"replies":[{"id":"15128","content":"B+树索引都是有序的（上篇我们介绍的哈希索引就不是）","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542940057,"ip_address":"","comment_id":42233,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542934822","product_id":100020801,"comment_content":"老师，索引都是有序的嘛？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430016,"discussion_content":"B+树索引都是有序的（上篇我们介绍的哈希索引就不是）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542940057,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42215,"user_name":"果然如此","can_delete":false,"product_type":"c1","uid":1210003,"ip_address":"","ucode":"C7543BD0A67505","user_header":"https://static001.geekbang.org/account/avatar/00/12/76/93/c78a132a.jpg","comment_is_top":false,"comment_ctime":1542934172,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542934172","product_id":100020801,"comment_content":"作业：需要建立cb联合索引","like_count":0},{"had_liked":false,"id":42209,"user_name":"sgl","can_delete":false,"product_type":"c1","uid":1252243,"ip_address":"","ucode":"D73875BA22954F","user_header":"https://static001.geekbang.org/account/avatar/00/13/1b/93/e3b44969.jpg","comment_is_top":false,"comment_ctime":1542933878,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542933878","product_id":100020801,"comment_content":"不对的，因为采用了innodb存储引擎，所以ab索引采用了聚集索引，即数据在B+树索引上按照ab排序了，所以只要通过c索引找到数据，就能得到有序数据。","like_count":0},{"had_liked":false,"id":42195,"user_name":"Survivor","can_delete":false,"product_type":"c1","uid":1016872,"ip_address":"","ucode":"06EF9BDBD90F32","user_header":"https://static001.geekbang.org/account/avatar/00/0f/84/28/1175240c.jpg","comment_is_top":false,"comment_ctime":1542933316,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1542933316","product_id":100020801,"comment_content":"有一个问题，如果表T 两个字段 id,age都有索引，select id from T where age = 3不会回表，那么 select * from T where age = 3呢? ","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136537,"discussion_content":"应该也不会了吧。优化器应该可以告诉引擎有哪些查询字段吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579146421,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42188,"user_name":"银太","can_delete":false,"product_type":"c1","uid":1051765,"ip_address":"","ucode":"B505D15F7CB839","user_header":"https://static001.geekbang.org/account/avatar/00/10/0c/75/e7c6c403.jpg","comment_is_top":false,"comment_ctime":1542933215,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1542933215","product_id":100020801,"comment_content":"ca应该是多余的，主键满足左前缀。另一个问题，覆盖索引减少回表但需要额外空间应该也会降低写性能，应该只用在高频场景吧？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136569,"discussion_content":"是的。但总比全表扫描好吧。空间现在基本不是问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579149160,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42150,"user_name":"Cutler","can_delete":false,"product_type":"c1","uid":1228136,"ip_address":"","ucode":"2EDECFE039845B","user_header":"https://static001.geekbang.org/account/avatar/00/12/bd/68/3fd6428d.jpg","comment_is_top":false,"comment_ctime":1542931860,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542931860","product_id":100020801,"comment_content":"建立联合索引需要考虑:<br>1.搜索条件<br>2.尽量少的回表次数<br>3.索引字段的顺序","like_count":0},{"had_liked":false,"id":42113,"user_name":"当下","can_delete":false,"product_type":"c1","uid":1304326,"ip_address":"","ucode":"2B8B003F94BC07","user_header":"https://static001.geekbang.org/account/avatar/00/13/e7/06/76ee65a1.jpg","comment_is_top":false,"comment_ctime":1542928987,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1542928987","product_id":100020801,"comment_content":"索引ca、cb的叶节点存放包含字段的主键值，而单独字段c索引叶指向的数据在查询时还有经过字段a、b的过滤，扫描的物理页会更多，效率更差","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136571,"discussion_content":"这个要看你的业务搜索场景。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579149210,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42103,"user_name":"任鹏斌","can_delete":false,"product_type":"c1","uid":1104086,"ip_address":"","ucode":"34319B05EA6E74","user_header":"https://static001.geekbang.org/account/avatar/00/10/d8/d6/47da34bf.jpg","comment_is_top":false,"comment_ctime":1542927207,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542927207","product_id":100020801,"comment_content":"单独建个c，b联合索引即可，因为a本身已经有序，默认可以走索引","like_count":0}]}