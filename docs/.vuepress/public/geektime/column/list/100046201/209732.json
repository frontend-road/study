{"id":209732,"title":"10 | 路由策略：怎么让请求按照设定的规则发到不同的节点上？","content":"<p>你好，我是何小锋。上一讲我们介绍了健康检测在RPC中的作用，简单来讲就是帮助调用方应用来管理所有服务提供方的连接，并动态维护每个连接的状态，方便服务调用方在每次发起请求的时候都可以拿到一个可用的连接。回顾完上一讲的重点，我们就切入今天的主题——RPC中的路由策略。</p><h2>为什么选择路由策略？</h2><p>在前面我们提到过，在真实环境中我们的服务提供方是以一个集群的方式提供服务，这对于服务调用方来说，就是一个接口会有多个服务提供方同时提供服务，所以我们的RPC在每次发起请求的时候，都需要从多个服务提供方节点里面选择一个用于发请求的节点。</p><p>既然这些节点都可以用来完成这次请求，那么我们就可以简单地认为这些节点是同质的。这里的同质怎么理解呢？就是这次请求无论发送到集合中的哪个节点上，返回的结果都是一样的。</p><p>既然服务提供方是以集群的方式对外提供服务，那就要考虑一些实际问题。要知道我们每次上线应用的时候都不止一台服务器会运行实例，那上线就涉及到变更，只要变更就可能导致原本正常运行的程序出现异常，尤其是发生重大变动的时候，导致我们应用不稳定的因素就变得很多。</p><p>为了减少这种风险，我们一般会选择灰度发布我们的应用实例，比如我们可以先发布少量实例观察是否有异常，后续再根据观察的情况，选择发布更多实例还是回滚已经上线的实例。</p><!-- [[[read_end]]] --><p>但这种方式不好的一点就是，线上一旦出现问题，影响范围还是挺大的。因为对于我们的服务提供方来说，我们的服务会同时提供给很多调用方来调用，尤其是像一些基础服务的调用方会更复杂，比如商品、价格等等，一旦刚上线的实例有问题了，那将会导致所有的调用方业务都会受损。</p><p>那对于我们的RPC框架来说，有什么的办法可以减少上线变更导致的风险吗？这就不得不提路由在RPC中的应用。具体好在哪里，怎么实现，我们接着往下看。</p><h2>如何实现路由策略？</h2><p>可能你会说，我们可以在上线前把所有的场景都重新测试一遍啊？这也是一种方法，而且测试肯定是上线前的一个重要环节。但以我个人的经验来看，由于线上环境太复杂了，单纯从测试角度出发只能降低风险出现的概率，想要彻底验证所有场景基本是不可能的。</p><p>那如果没法100%规避风险，我们还能怎么办？我认为只有一条路可以尝试了，就是尽量减小上线出问题导致业务受损的范围。基于这个思路，我们是不是可以在上线完成后，先让一小部分调用方请求过来进行逻辑验证，待没问题后再接入其他调用方，从而实现流量隔离的效果。那在RPC框架里面我们具体该怎么实现呢？</p><p>我们在服务发现那讲讲过，在RPC里面服务调用方是通过服务发现的方式拿到了所有服务提供方的IP地址，那我们是不是就可以利用这个特点？当我们选择要灰度验证功能的时候，是不是就可以让注册中心在推送的时候区别对待，而不是一股脑的把服务提供方的IP地址推送到所有调用方。换句话说就是，注册中心只会把刚上线的服务IP地址推送到选择指定的调用方，而其他调用方是不能通过服务发现拿到这个IP地址的。</p><p>通过服务发现的方式来隔离调用方请求，从逻辑上来看确实可行，但注册中心在RPC里面的定位是用来存储数据并保证数据一致性的。如果把这种复杂的计算逻辑放到注册中心里面，当集群节点变多之后，就会导致注册中心压力很大，而且大部分情况下我们一般都是采用开源软件来搭建注册中心，要满足这种需求还需要进行二次开发。所以从实际的角度出发，通过影响服务发现来实现请求隔离并不划算。</p><p>那还有其他更合适的解决方案吗？在我给出方案前，你可以停下来思考下你的解决方案。</p><p>我们可以重新回到调用方发起RPC调用的流程。在RPC发起真实请求的时候，有一个步骤就是从服务提供方节点集合里面选择一个合适的节点（就是我们常说的负载均衡），那我们是不是可以在选择节点前加上“筛选逻辑”，把符合我们要求的节点筛选出来。那这个筛选的规则是什么呢？就是我们前面说的灰度过程中要验证的规则。</p><p>举个具体例子你可能就明白了，比如我们要求新上线的节点只允许某个IP可以调用，那我们的注册中心会把这条规则下发到服务调用方。在调用方收到规则后，在选择具体要发请求的节点前，会先通过筛选规则过滤节点集合，按照这个例子的逻辑，最后会过滤出一个节点，这个节点就是我们刚才新上线的节点。通过这样的改造，RPC调用流程就变成了这样：</p><p><img src=\"https://static001.geekbang.org/resource/image/b7/68/b78964a2db3adc8080364e9cfc79ca68.jpg?wh=3900*879\" alt=\"\" title=\"调用流程\"></p><p>这个筛选过程在我们的RPC里面有一个专业名词，就是“路由策略”，而上面例子里面的路由策略是我们常见的IP路由策略，用于限制可以调用服务提供方的IP。使用了IP路由策略后，整个集群的调用拓扑如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/23/f7/23f24c545d33ec4d6d72fc10e94a0ff7.jpg?wh=2513*1991\" alt=\"\" title=\"IP路由调用拓扑\"></p><h2>参数路由</h2><p>有了IP路由之后，上线过程中我们就可以做到只让部分调用方请求调用到新上线的实例，相对传统的灰度发布功能来说，这样做我们可以把试错成本降到最低。</p><p>但在有些场景下，我们可能还需要更细粒度的路由方式。比如，在升级改造应用的时候，为了保证调用方能平滑地切调用我们的新应用逻辑，在升级过程中我们常用的方式是让新老应用并行运行一段时间，然后通过切流量百分比的方式，慢慢增大新应用承接的流量，直到新应用承担了100%且运行一段时间后才能去下线老应用。</p><p>在流量切换的过程中，为了保证整个流程的完整性，我们必须保证某个主题对象的所有请求都使用同一种应用来承接。假设我们改造的是商品应用，那主题对象肯定是商品ID，在切流量的过程中，我们必须保证某个商品的所有操作都是用新应用（或者老应用）来完成所有请求的响应。</p><p>很显然，上面的IP路由并不能满足我们这个需求，因为IP路由只是限制调用方来源，并不会根据请求参数请求到我们预设的服务提供方节点上去。</p><p>那我们怎么利用路由策略实现这个需求呢？其实你只要明白路由策略的本质，就不难明白这种参数路由的实现。</p><p>我们可以给所有的服务提供方节点都打上标签，用来区分新老应用节点。在服务调用方发生请求的时候，我们可以很容易地拿到请求参数，也就是我们例子中的商品ID，我们可以根据注册中心下发的规则来判断当前商品ID的请求是过滤掉新应用还是老应用的节点。因为规则对所有的调用方都是一样的，从而保证对应同一个商品ID的请求要么是新应用的节点，要么是老应用的节点。使用了参数路由策略后，整个集群的调用拓扑如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/78/39/7868289c87ca9de144fe32fac98f8339.jpg?wh=2506*1964\" alt=\"\" title=\"参数路由调用拓扑\"></p><p>相比IP路由，参数路由支持的灰度粒度更小，他为服务提供方应用提供了另外一个服务治理的手段。灰度发布功能是RPC路由功能的一个典型应用场景，通过RPC路由策略的组合使用可以让服务提供方更加灵活地管理、调用自己的流量，进一步降低上线可能导致的风险。</p><h2>总结</h2><p>在日常工作中，我们几乎每天都在做线上变更，每次变更都有可能带来一次事故，为了降低事故发生的概率，我们不光要从流程上优化操作步骤，还要使我们的基础设施能支持更低的试错成本。</p><p>灰度发布功能作为RPC路由功能的一个典型应用场景，我们可以通过路由功能完成像定点调用、黑白名单等一些高级服务治理功能。在RPC里面，不管是哪种路由策略，其核心思想都是一样的，就是让请求按照我们设定的规则发送到目标节点上，从而实现流量隔离的效果。</p><h2>课后思考</h2><p>你在使用RPC的过程中，除了用路由策略实现过灰度发布、定点调用等功能，还用它完成过其他功能吗？</p><p>欢迎留言和我分享你的思考，也欢迎你把文章分享给你的朋友，邀请他加入学习。我们下节课再见！</p>","neighbors":{"left":{"article_title":"09 | 健康检测：这个节点都挂了，为啥还要疯狂发请求？","id":208253},"right":{"article_title":"11 | 负载均衡：节点负载差距这么大，为什么收到的流量还一样？","id":210893}},"comments":[{"had_liked":false,"id":186616,"user_name":"楼下小黑哥","can_delete":false,"product_type":"c1","uid":1014680,"ip_address":"","ucode":"453B099B0EE52E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7b/98/8f1aecf4.jpg","comment_is_top":false,"comment_ctime":1583891994,"is_pvip":false,"replies":[{"id":"72566","content":"用的很好👍","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1584285600,"ip_address":"","comment_id":186616,"utype":1}],"discussion_count":2,"race_medal":0,"score":"156202714650","product_id":100046201,"comment_content":"我们是做支付系统，需要对接多个银行服务。我们内部将外部服务接口都抽象化一组接口，每次接入只要相应实现即可。每个银行服务，我们会定义一个唯一ID。服务暴露的时候，利用 dubbo group 配置，将group设置为该id，个性化导出。<br>在银行服务前面有一个路由系统，这个系统会根据上游系统指定id，通过 dubbo 提供 api 调用，调用相应 group 的银行服务。<br>嘿嘿，这应该也是一种利用服务版本路由策略。","like_count":37,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486818,"discussion_content":"用的很好👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584285600,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1081614,"avatar":"https://static001.geekbang.org/account/avatar/00/10/81/0e/ec667c01.jpg","nickname":"Wallace Pang","note":"","ucode":"6436E14695B1F9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":280436,"discussion_content":"我们也是这么实现的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591540198,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187135,"user_name":"noname","can_delete":false,"product_type":"c1","uid":1125056,"ip_address":"","ucode":"82216A6618A353","user_header":"https://static001.geekbang.org/account/avatar/00/11/2a/c0/aa0dfe16.jpg","comment_is_top":false,"comment_ctime":1584023675,"is_pvip":false,"replies":[{"id":"72544","content":"是的，路由策略最好要抽象成配置信息，可以动态下发","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1584284209,"ip_address":"","comment_id":187135,"utype":1}],"discussion_count":3,"race_medal":0,"score":"96073304187","product_id":100046201,"comment_content":"路由本质是节点分组、隔离流量，因此不论打标签还是分流等特性都天然适合在路由策略里做。<br>这里分享一个小经验案例：虽然在调用方(上游)做路由策略选择可用的提供方(下游)集群，是天然符合RPC调用机制的，但是在团队协作上却是反人性的。想一想，当你作为下游服务方，你希望链路中扩展某种路由特性(原生不支持)，这时候你需要和你的上游协商并且需要对方优先你或与你同时上线，一般来说对方都是不情愿的，因为对对方而言不仅没有收益还要面临配合你升级带来的风险。因此遇到这种情况时(你作为下游业务方)，最好能有全局视角的人来推动不同团队服务的路由策略同时升级，或者能初期设计考虑周全，后期扩展时业务不需要更新部署(例如Dubbo的条件路由、脚本路由等都是可以从第三方写注册中心更新路由策略而无需业务变更)。<br>扩展新的路由策略不难，新的路由策略上线比较难😂","like_count":23,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487003,"discussion_content":"是的，路由策略最好要抽象成配置信息，可以动态下发","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584284209,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2714393,"avatar":"","nickname":"Geek_7a6fde","note":"","ucode":"6A00175AD4BF23","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386427,"discussion_content":"其实客户端那里路由策略做的普适抽象一些，可以在配置上玩出很多花样，比如dubbo的标签路由、条件路由，而不是实现具体到某个业务场景的路由策略","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627569590,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1079867,"avatar":"https://static001.geekbang.org/account/avatar/00/10/7a/3b/79562df9.jpg","nickname":"静水流深","note":"","ucode":"2242CA9CB84FC9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":277546,"discussion_content":"这个说的很对，一般都是下游业务方自己想办法分流","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591069405,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186672,"user_name":"Hector","can_delete":false,"product_type":"c1","uid":1496889,"ip_address":"","ucode":"110CAF87ADDC01","user_header":"https://static001.geekbang.org/account/avatar/00/16/d7/39/6698b6a9.jpg","comment_is_top":false,"comment_ctime":1583899749,"is_pvip":false,"replies":[{"id":"72563","content":"好的设计都是要互相借鉴","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1584285397,"ip_address":"","comment_id":186672,"utype":1}],"discussion_count":2,"race_medal":0,"score":"48828540005","product_id":100046201,"comment_content":"越到后面越像k8s的服务治理了，基于etcd的服务发现，pod的状态管理与探活，service的负载功能。原来好多东西都是相通的","like_count":12,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486833,"discussion_content":"好的设计都是要互相借鉴","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584285397,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1676962,"avatar":"https://static001.geekbang.org/account/avatar/00/19/96/a2/c1596dd8.jpg","nickname":"🤔","note":"","ucode":"40ACB53BF3C6B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575275,"discussion_content":"istio","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654699729,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":217426,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1589503839,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23064340319","product_id":100046201,"comment_content":"路由策略——就是决定走那一条路的判断逻辑。<br>回忆之前的做法，主要有以下几种方式：<br>1：通过环境隔离，线上＋预发布＋压测，当然也有测试＋研发<br>2：服务别名路由，可以控制同机房调用或者流量直走某个分组<br>3：业务开关这个视具体情况而定，比如：用户黑白名单、四级地址维度切流、配送中心仓库维度切流、订单类型维度切流（大家电、中小件等）配送类型切流（自提、送货上门等）这个就比较灵活了，需要根据自身情况来用，当然，比较依赖配置管理中心，也会有代码逻辑冗余","like_count":6},{"had_liked":false,"id":186797,"user_name":"Jackey","can_delete":false,"product_type":"c1","uid":1063751,"ip_address":"","ucode":"125DE81993FEDD","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/47/f6c772a1.jpg","comment_is_top":false,"comment_ctime":1583928455,"is_pvip":false,"replies":[{"id":"72561","content":"并行开发的时候，隔离出不同联调环境","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1584285323,"ip_address":"","comment_id":186797,"utype":1}],"discussion_count":2,"race_medal":0,"score":"23058764935","product_id":100046201,"comment_content":"思考题还真想不出来别的了😅期待评论区大佬出现","like_count":4,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486876,"discussion_content":"并行开发的时候，隔离出不同联调环境","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584285323,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1101234,"avatar":"https://static001.geekbang.org/account/avatar/00/10/cd/b2/807137b9.jpg","nickname":"北方易初","note":"","ucode":"C57FDBD37F43E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585815,"discussion_content":"这不是网关的功能码？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661841878,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186695,"user_name":"坡岛码畜","can_delete":false,"product_type":"c1","uid":1013564,"ip_address":"","ucode":"D73DFF370D4780","user_header":"https://static001.geekbang.org/account/avatar/00/0f/77/3c/64201b6f.jpg","comment_is_top":false,"comment_ctime":1583904809,"is_pvip":false,"replies":[{"id":"72560","content":"隔离环境👍","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1584285229,"ip_address":"","comment_id":186695,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18763773993","product_id":100046201,"comment_content":"我们的应用场景：在多个feature同时开发的时候 可以用路由策略在test环境对某一个服务发布多个版本 在配置中心配置路由规则把来自某一个调用方的请求路由到某一个特定版本的服务上去","like_count":5,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486843,"discussion_content":"隔离环境👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584285229,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":276441,"user_name":"张申傲","can_delete":false,"product_type":"c1","uid":1182372,"ip_address":"","ucode":"22D46BC529BA8A","user_header":"https://static001.geekbang.org/account/avatar/00/12/0a/a4/828a431f.jpg","comment_is_top":false,"comment_ctime":1611925528,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10201860120","product_id":100046201,"comment_content":"泳道隔离，同一个泳道内的服务在同一条调用链上","like_count":3},{"had_liked":false,"id":212613,"user_name":"问心","can_delete":false,"product_type":"c1","uid":1250775,"ip_address":"","ucode":"6808568D61CE36","user_header":"https://static001.geekbang.org/account/avatar/00/13/15/d7/96e77edd.jpg","comment_is_top":false,"comment_ctime":1588163648,"is_pvip":true,"replies":[{"id":"79062","content":"规则交给使用者","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1588255754,"ip_address":"","comment_id":212613,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10178098240","product_id":100046201,"comment_content":"老师，IP级限制是好理解的，而路由应该是在rpc中相对底层的模块，而在做处理路由策略的时候，还需要应用层的数据，这样的处理感觉不是特别的合理。","like_count":3,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493562,"discussion_content":"规则交给使用者","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588255754,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2826205,"avatar":"","nickname":"hillwater","note":"","ucode":"FB16D5FCE8C7E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590045,"discussion_content":"参数路由是不是只能使用header数据，payload还未反序列化，拿不到吧。除非此时已经反序列化了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665486461,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":213916,"user_name":"有米","can_delete":false,"product_type":"c1","uid":1005042,"ip_address":"","ucode":"C9A10B7A67BC12","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/f2/ba68d931.jpg","comment_is_top":false,"comment_ctime":1588588993,"is_pvip":false,"replies":[{"id":"80437","content":"可以不能适应所有场景","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1589500056,"ip_address":"","comment_id":213916,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5883556289","product_id":100046201,"comment_content":"我认为有一种变更是不能做灰度的，比如修改计费逻辑，不可能说不同的用户不同的计费规则，肯定是一视同仁的。所以必须全部节点同时发布","like_count":2,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493897,"discussion_content":"可以不能适应所有场景","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589500056,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186826,"user_name":"安排","can_delete":false,"product_type":"c1","uid":1260026,"ip_address":"","ucode":"F78CFA9624CAEF","user_header":"https://static001.geekbang.org/account/avatar/00/13/39/fa/a7edbc72.jpg","comment_is_top":false,"comment_ctime":1583934784,"is_pvip":false,"replies":[{"id":"72558","content":"一般是先通过路由筛选，再进行路由选择","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1584285053,"ip_address":"","comment_id":186826,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5878902080","product_id":100046201,"comment_content":"路由策略怎么和后面的负载均衡连接起来的呢？有形象一点的结构图吗？每个服务集群前面是不是只有一台或一组实现负载均衡的设备？负载均衡设备是怎么区别对待同一个集群里面的新应用和旧应用的呢？","like_count":1,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486887,"discussion_content":"一般是先通过路由筛选，再进行路由选择","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584285053,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2826205,"avatar":"","nickname":"hillwater","note":"","ucode":"FB16D5FCE8C7E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590046,"discussion_content":"负载均衡有客户端负载均衡和服务端负载均衡两种，rpc用的是前者，你说的是后者，比如有个nginx","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665486739,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186620,"user_name":"hello","can_delete":false,"product_type":"c1","uid":1464199,"ip_address":"","ucode":"854500026E2187","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKhuGLVRYZibOTfMumk53Wn8Q0Rkg0o6DzTicbibCq42lWQoZ8lFeQvicaXuZa7dYsr9URMrtpXMVDDww/132","comment_is_top":false,"comment_ctime":1583892344,"is_pvip":false,"replies":[{"id":"72565","content":"欢迎交流👏","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1584285489,"ip_address":"","comment_id":186620,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5878859640","product_id":100046201,"comment_content":"这篇文章给我做灰度有了新的思路，多谢老师！","like_count":1,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486820,"discussion_content":"欢迎交流👏","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584285489,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":293762,"user_name":"邓延良","can_delete":false,"product_type":"c1","uid":2059185,"ip_address":"","ucode":"62925D3D799604","user_header":"https://static001.geekbang.org/account/avatar/00/1f/6b/b1/cc19deb4.jpg","comment_is_top":false,"comment_ctime":1621525433,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1621525433","product_id":100046201,"comment_content":"老师，搞不清路由策略和负载均衡的区别，请老师讲解下","like_count":0,"discussions":[{"author":{"id":2714393,"avatar":"","nickname":"Geek_7a6fde","note":"","ucode":"6A00175AD4BF23","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386424,"discussion_content":"路由策略就是选出一批符合规则的机器列表，然后最后再通过负载均衡选出一个机器去发请求","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1627568987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":293581,"user_name":"仲卜","can_delete":false,"product_type":"c1","uid":1910438,"ip_address":"","ucode":"CF5BFCF273893B","user_header":"https://static001.geekbang.org/account/avatar/00/1d/26/a6/9e858024.jpg","comment_is_top":false,"comment_ctime":1621436472,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621436472","product_id":100046201,"comment_content":"这类路由、权重是不是交给服务发现系统去做更好，rpc 只是通过服务发现的插件取到 ip，ip的权重可以在注册中心开发给开发配置。","like_count":0},{"had_liked":false,"id":242059,"user_name":"西柚","can_delete":false,"product_type":"c1","uid":1306889,"ip_address":"","ucode":"3DDC5D0972DAB0","user_header":"https://static001.geekbang.org/account/avatar/00/13/f1/09/a597fe8d.jpg","comment_is_top":false,"comment_ctime":1597579353,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597579353","product_id":100046201,"comment_content":"对于k8s编排的rpc服务，灰度是k8s来做的吗？<br>有点想不到是怎么实现的，服务提供者上线后注册到注册中心，调用方已经能从注册中心拉取到最新的服务，所以怎么来做灰度呢。。。是k8s把可用ip下发给注册中心，然后注册中心再推给调用方吗？那k8s还得知道注册中心的存在","like_count":0},{"had_liked":false,"id":216542,"user_name":"密码123456","can_delete":false,"product_type":"c1","uid":1126593,"ip_address":"","ucode":"9889463CC0EA71","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/c1/2dde6700.jpg","comment_is_top":false,"comment_ctime":1589279635,"is_pvip":false,"replies":[{"id":"80425","content":"有，后面讲节里面会提到","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1589499511,"ip_address":"","comment_id":216542,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1589279635","product_id":100046201,"comment_content":"这篇理论太强了，感觉实现起来会很难。有参考的开源框架实现吗？","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494855,"discussion_content":"有，后面讲节里面会提到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589499511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":212808,"user_name":"凉人。","can_delete":false,"product_type":"c1","uid":1659177,"ip_address":"","ucode":"4DB16004A62015","user_header":"https://static001.geekbang.org/account/avatar/00/19/51/29/24739c58.jpg","comment_is_top":false,"comment_ctime":1588214208,"is_pvip":false,"replies":[{"id":"79066","content":"力度更细","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1588256032,"ip_address":"","comment_id":212808,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1588214208","product_id":100046201,"comment_content":"感觉和iptables作用差不多","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493616,"discussion_content":"力度更细","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588256032,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208769,"user_name":"@%初%@","can_delete":false,"product_type":"c1","uid":1053509,"ip_address":"","ucode":"2B8A6134675ED7","user_header":"https://static001.geekbang.org/account/avatar/00/10/13/45/16c60da2.jpg","comment_is_top":false,"comment_ctime":1587435528,"is_pvip":true,"replies":[{"id":"78554","content":"👍","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1587950707,"ip_address":"","comment_id":208769,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1587435528","product_id":100046201,"comment_content":"以前做B端商城业务，我们就用了两套环境，prod与smallflow，每次上线前，都是把部分商品服务切换到smallflow上，运行一段时间，没问题了，在全面切换。。。","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492613,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587950707,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":192015,"user_name":"kevin","can_delete":false,"product_type":"c1","uid":1199192,"ip_address":"","ucode":"918EFC033B1630","user_header":"https://static001.geekbang.org/account/avatar/00/12/4c/58/25152fa9.jpg","comment_is_top":false,"comment_ctime":1584811925,"is_pvip":false,"replies":[{"id":"73819","content":"是的，对调用发尽量要做到无感知","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1585006256,"ip_address":"","comment_id":192015,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584811925","product_id":100046201,"comment_content":"通过版本号也可以控制，新服务使用不同的版本号，上线后两个版本都存在，控制部分调用方使用新版本的服务，这种方案可以达到灰度的效果，但是需要调用方配合，没有路由来的方便","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488311,"discussion_content":"是的，对调用发尽量要做到无感知","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585006256,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187215,"user_name":"小哇","can_delete":false,"product_type":"c1","uid":1877904,"ip_address":"","ucode":"1C2C1FE3FCB9CE","user_header":"https://static001.geekbang.org/account/avatar/00/1c/a7/90/9a0da433.jpg","comment_is_top":false,"comment_ctime":1584062686,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584062686","product_id":100046201,"comment_content":"我们也可以使用用户的维度，让测试人员直接线上也定服务来测试功能","like_count":0},{"had_liked":false,"id":187099,"user_name":"D","can_delete":false,"product_type":"c1","uid":1027596,"ip_address":"","ucode":"5BB4D16FE39BFF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ae/0c/f39f847a.jpg","comment_is_top":false,"comment_ctime":1584015769,"is_pvip":false,"replies":[{"id":"72546","content":"就是保证同一个商品ID的所有请求都发送到具体某一个应用，这个应用可以是新应用也可以是老应用，但只能唯一","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1584284349,"ip_address":"","comment_id":187099,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1584015769","product_id":100046201,"comment_content":"我们可以给所有的服务提供方节点都打上标签，用来区分新老应用节点。在服务调用方发生请求的时候，我们可以很容易地拿到请求参数，也就是我们例子中的商品 ID，我们可以根据注册中心下发的规则来判断当前商品 ID 的请求是过滤掉新应用还是老应用的节点。因为规则对所有的调用方都是一样的，从而保证对应同一个商品 ID 的请求要么是新应用的节点，要么是老应用的节点。<br><br><br><br>这段是什么意思，文稿能具体一点吗，看不太明白啊","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486989,"discussion_content":"就是保证同一个商品ID的所有请求都发送到具体某一个应用，这个应用可以是新应用也可以是老应用，但只能唯一","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584284349,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2826205,"avatar":"","nickname":"hillwater","note":"","ucode":"FB16D5FCE8C7E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":590047,"discussion_content":"把应用改为机器，估计会更好理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665486972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":486989,"ip_address":"上海"},"score":590047,"extra":""}]},{"author":{"id":1877904,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/a7/90/9a0da433.jpg","nickname":"小哇","note":"","ucode":"1C2C1FE3FCB9CE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":203634,"discussion_content":"可以根据传参将请求打到特定的服务上，服务可以用配置区分开，比如dubbo可以用group来区别","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584062151,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186917,"user_name":"雨霖铃声声慢","can_delete":false,"product_type":"c1","uid":1052607,"ip_address":"","ucode":"656D98310C6DA3","user_header":"https://static001.geekbang.org/account/avatar/00/10/0f/bf/ee93c4cf.jpg","comment_is_top":false,"comment_ctime":1583972342,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1583972342","product_id":100046201,"comment_content":"感觉这个路由策略也可以来做限流，现在服务请求量的峰值保障系统可用性。","like_count":0,"discussions":[{"author":{"id":2714393,"avatar":"","nickname":"Geek_7a6fde","note":"","ucode":"6A00175AD4BF23","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386421,"discussion_content":"可以搞高流量路由和低流量路由，主要还是隔离","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627568784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1310798,"avatar":"https://static001.geekbang.org/account/avatar/00/14/00/4e/be2b206b.jpg","nickname":"吴小智","note":"","ucode":"C7C9F58B5C9F7B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":203164,"discussion_content":"限流不是由服务提供方来弄的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584006275,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186676,"user_name":"姜戈","can_delete":false,"product_type":"c1","uid":1058972,"ip_address":"","ucode":"45C4BE93C8E4CC","user_header":"https://static001.geekbang.org/account/avatar/00/10/28/9c/73e76b19.jpg","comment_is_top":false,"comment_ctime":1583900127,"is_pvip":false,"replies":[{"id":"72562","content":"这个好像不太行吧","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1584285354,"ip_address":"","comment_id":186676,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1583900127","product_id":100046201,"comment_content":"在使用 RPC 的过程中，除了用路由策略实现过灰度发布、定点调用等功能，还用它完成：<br>熔断，限流，降级","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486837,"discussion_content":"这个好像不太行吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584285354,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2714393,"avatar":"","nickname":"Geek_7a6fde","note":"","ucode":"6A00175AD4BF23","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386415,"discussion_content":"哈哈哈哈哈，感觉不是一个逻辑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627568733,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}