{"id":12401,"title":"16 | 脑洞大开：GUI测试还能这么玩（Page Code Gen + Data Gen + Headless）？","content":"<p>在前面的几篇文章中，我介绍了GUI自动化测试的数据驱动测试、页面对象（Page Object）模型、业务流程封装，以及测试数据相关的内容。</p>\n<p>今天这篇文章，我将从页面对象自动生成、GUI测试数据自动生成、无头浏览器三个方面展开，这也是GUI测试中三个比较有意思的知识点。</p>\n<h2>页面对象自动生成</h2>\n<p>在前面的文章中，我已经介绍过页面对象（Page Object）模型的概念。页面对象模型，是以Web页面为单位来封装页面上的控件以及控件的部分操作，而测试用例基于页面对象完成具体操作。最典型的模式就是：XXXPage.YYYComponent.ZZZOperation。</p>\n<p>基于页面对象模型的伪代码示例，如图1所示。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/8f/df/8f49888b1fbae32994f3e4f8c5e77adf.png?wh=1058*424\" alt=\"\" /></p>\n<center>图1 基于页面对象模型的伪代码示例</center>\n<p>如果你在实际项目中已经用过页面对象模型，你会发现开发和维护页面对象的类（Page Class），是一件很耗费时间和体力的事儿。</p>\n<ul>\n<li>你需要打开页面，识别出可以唯一确定某元素的属性或者属性集合，然后把它们写到Page Class里，比如图1的第2行代码username_input=findElementByName(“username”)，就是通过控件的名字（username）来定位元素的。</li>\n<li>更糟糕的是，GUI的页面会经常变动，如果开发人员开发前端代码时没有严格遵循可测试性的要求，Page Class的维护成本就会更高。</li>\n</ul><!-- [[[read_end]]] -->\n<p>那么，什么方法能够解决这个问题呢？答案就是，页面对象自动生成技术，它非常适用于需要维护大量页面对象的中大型GUI自动化测试项目。</p>\n<p><span class=\"orange\">页面对象自动生成技术，属于典型的“自动化你的自动化”的应用场景。它的基本思路是，你不用再手工维护Page Class了，只需要提供Web的URL，它就会自动帮你生成这个页面上所有控件的定位信息，并自动生成Page Class。</span></p>\n<p><strong>但是，需要注意的是，那些依赖于数据的动态页面对象也会被包含在自动生成的Page Class里，而这种动态页面对象通常不应该包含在Page Class里，所以，往往需要以手工的方式删除。</strong></p>\n<p>目前，很多商用自动化工具，比如UFT，已经支持页面对象自动生成功能了，同时还能够对Page Class进行版本管理。</p>\n<p>但是，开源的自动化方案，页面对象自动生成功能一般需要自己开发，并且需要与你所用的自动化测试框架深度绑定。目前，中小企业很少有自己去实现这一功能的。</p>\n<p>不过，有个好消息是，目前国内应用还不算多、免费的Katalon Studio，已经提供了类似的页面对象库管理功能，如果感兴趣的话，你可以去试用一下。</p>\n<h2>GUI测试数据自动生成</h2>\n<p><span class=\"orange\">GUI测试数据自动生成，指的由机器自动生成测试用例的输入数据。</span></p>\n<p>乍一听上去是不是感觉有点玄乎？机器不可能理解你的业务逻辑，怎么可能自动生成测试数据呢？</p>\n<p>你的这个想法完全合理，并且也是完全正确的。所以，我在这里说的“测试数据自动生成”，仅仅局限于以下两种情况：</p>\n<ol>\n<li>\n<p><strong>根据GUI输入数据类型，以及对应的自定义规则库自动生成测试输入数据。</strong> 比如，GUI界面上有一个“书名”输入框，它的数据类型是string。<br />\n那么，基于数据类型就可以自动生成诸如 Null、SQL注入、超长字符串、非英语字符等测试数据。<br />\n同时，根据自定义规则库，还可以根据具体规则生成各种测试数据。这个自定义规则库里面的规则，往往反映了具体的业务逻辑。比如，对于“书名”，就会有书名不能大于多少个字符、一些典型的书名（比如，英文书名、中文书名等）等等业务方面的要求，那么就可以根据这些业务要求来生成测试数据。<br />\n根据自定义规则生成测试数据的核心思想，与安全扫描软件AppScan基于攻击规则库自动生成和执行安全测试的方式，有异曲同工之处。</p>\n</li>\n<li>\n<p><strong>对于需要组合多个测试输入数据的场景，测试数据自动生成可以自动完成多个测试数据的笛卡尔积组合，然后再以人工的方式剔除掉非法的数据组合。</strong><br />\n但是，这种方式并不一定是最高效的。对于输入参数比较多，且数据之间合法组合比较少或者难以明确的情况，先自动化生成笛卡尔积组合，再删除非法组合，效率往往还不如人为组合来得高。所以，在这个场景下是否要用测试数据自动生成方法，还需要具体问题具体分析。<br />\n更常见的用法是，先手动选择部分输入数据进行笛卡尔积，并删除不合法的部分；然后，在此基础上，再人为添加更多业务上有意义的输入数据组合。<br />\n比如，输入数据有A、B、C、D、E、F六个参数，你可以先选取最典型的几个参数生成笛卡尔积，假设这里选取A、B和C；然后，在生成的笛卡尔积中删除业务上不合法的组合；最后，再结合D、E和F的一些典型取值，构成更多的测试输入数据组合。</p>\n</li>\n</ol>\n<h2>无头浏览器</h2>\n<p>无头浏览器，即Headless Browser，是一种没有界面的浏览器。</p>\n<p>什么？浏览器没有界面，还叫什么浏览器啊？别急，我将为你一一道来。</p>\n<p><span class=\"orange\">无头浏览器，其实是一个特殊的浏览器，你可以把它简单地想象成是运行在内存中的浏览器。它拥有完整的浏览器内核，包括JavaScript解析引擎、渲染引擎等。</span></p>\n<p><span class=\"orange\">与普通浏览器最大的不同是，无头浏览器执行过程中看不到运行的界面，但是你依然可以用GUI测试框架的截图功能截取它执行中的页面。</span></p>\n<p>无头浏览器的主要应用场景，包括GUI自动化测试、页面监控以及网络爬虫这三种。在GUI测试过程中，使用无头浏览器的好处主要体现在四个方面：</p>\n<ol>\n<li>\n<p><strong>测试执行速度更快。</strong> 相对于普通浏览器来说，无头浏览器无需加载CSS以及渲染页面，在测试用例的执行速度上有很大的优势。</p>\n</li>\n<li>\n<p><strong>减少对测试执行的干扰。</strong> 可以减少操作系统以及其他软件（比如杀毒软件等）不可预期的弹出框，对浏览器测试的干扰。</p>\n</li>\n<li>\n<p><strong>简化测试执行环境的搭建。</strong> 对于大量测试用例的执行而言，可以减少对大规模Selenium Grid集群的依赖，GUI测试可以直接运行在无界面的服务器上。</p>\n</li>\n<li>\n<p><strong>在单机环境实现测试的并发执行。</strong> 可以在单机上很方便地运行多个无头浏览器，实现测试用例的并发执行。</p>\n</li>\n</ol>\n<p>但是，<strong>无头浏览器并不完美，它最大的缺点是，不能完全模拟真实的用户行为，而且由于没有实际完成页面的渲染，所以不太适用于需要对于页面布局进行验证的场景。同时，业界也一直缺乏理想的无头浏览器方案。</strong></p>\n<p>在Google发布Headless Chrome之前，PhantomJS是业界主流的无头浏览器解决方案。但是，这个项目的维护一直以来做得都不够好，已知未解决的缺陷数量多达1800多个，虽然支持主流的Webkit浏览器内核，但是依赖的Chrome版本太低。所以，无头浏览器一直难以在GUI自动化测试中大规模应用。</p>\n<p>但好消息是，2017年Google发布了Headless Chrome，以及与之配套的Puppeteer框架，Puppeteer不仅支持最新版本的Chrome，而且得到Google官方的支持，这使得无头浏览器可以在实际项目中得到更好的应用。</p>\n<p>也正是这个原因，PhantomJS的创建者Ariya Hidayat停止了它的后续维护，Headless Chrome成了无头浏览器的首选方案。</p>\n<p>那什么是Puppeteer呢？Puppeteer是一个Node库，提供了高级别的API封装，这些API会通过Chrome DevTools Protocol与Headless Chrome的交互达到自动化操作的目的。</p>\n<p>Puppeteer也是由Google开发的，所以它可以很好地支持Headless Chrome以及后续Chrome的版本更新。</p>\n<p>如果你也迫不及待地想要尝试把Headless Chrome应用到自己的GUI测试中，那还等什么，赶紧下载并开始吧。</p>\n<h2>总结</h2>\n<p>我分别介绍了无头浏览器、页面对象自动生成，以及GUI测试数据自动生成，这三个GUI测试中比较有意思的知识点，包括它们的概念、应用场景等内容。</p>\n<ol>\n<li>\n<p>对于页面对象自动生成，商用测试软件已经实现了这个功能。但是，如果你选择开源测试框架，就需要自己实现这个功能了。</p>\n</li>\n<li>\n<p>GUI测试数据自动生成，主要是基于测试输入数据的类型以及对应的自定义规则库实现的，并且对于多个测试输入数据，可以基于笛卡尔积来自动组合出完整的测试用例集合。</p>\n</li>\n<li>\n<p>对于无头浏览器，你可以把它简单地想象成运行在内存中的浏览器，它拥有完整的浏览器内核。与普通浏览器最大的不同是，它在执行过程中看不到运行的界面。目前，Headless Chrome结合Puppeteer是最先进的无头浏览器方案，如果感兴趣，你可以下载试用。</p>\n</li>\n</ol>\n<h2>思考题</h2>\n<p>在你的工作中，还有哪些好的方法和实践可以提高GUI自动化测试的效率吗？</p>\n<p>欢迎你给我留言。</p>\n<p></p>\n","neighbors":{"left":{"article_title":"15 | 过不了的坎：聊聊GUI自动化过程中的测试数据","id":12399},"right":{"article_title":"17 | 精益求精：聊聊提高GUI测试稳定性的关键技术","id":12403}},"comments":[{"had_liked":false,"id":18323,"user_name":"Geek_84a77e","can_delete":false,"product_type":"c1","uid":1167077,"ip_address":"","ucode":"D1A9B5A0CB871B","user_header":"https://static001.geekbang.org/account/avatar/00/11/ce/e5/66f38361.jpg","comment_is_top":false,"comment_ctime":1533257737,"is_pvip":false,"replies":[{"id":"6557","content":"关于页面对象自动生成的具体实现细节还是比较复杂的，因为采用不同前端开发框架的页面的生成还都不太一样，我看看是否有可能搞个git给点示例代码。至于测试数据自动生成主要是思想方法，用excel➕vba就能轻易完成大部分的功能，当然用代码实现也是可以的，但是文章本身还是以讲方法为主，不会去讲具体怎么写代码来实现这个功能。","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1533568943,"ip_address":"","comment_id":18323,"utype":1}],"discussion_count":1,"race_medal":0,"score":"113202407433","product_id":100009601,"comment_content":"老师，是每篇文章有时间限制吗？可否细致的讲解一下，如何自动化生成页面对象，如何自动化生成测试数据？我们现在的理解很大部分是停留在概念上，来这儿学习的理由也是老师能够给我们一个直观的认识关于这些技术，或者每篇文章能否提供个链接供我们看看源码，切身体验一下封装等其他文章中提到的技术，多谢","like_count":26,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421473,"discussion_content":"关于页面对象自动生成的具体实现细节还是比较复杂的，因为采用不同前端开发框架的页面的生成还都不太一样，我看看是否有可能搞个git给点示例代码。至于测试数据自动生成主要是思想方法，用excel➕vba就能轻易完成大部分的功能，当然用代码实现也是可以的，但是文章本身还是以讲方法为主，不会去讲具体怎么写代码来实现这个功能。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533568943,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":18282,"user_name":"sylan215","can_delete":false,"product_type":"c1","uid":1019029,"ip_address":"","ucode":"5A2CF31BC69F40","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/95/4544d905.jpg","comment_is_top":false,"comment_ctime":1533227947,"is_pvip":false,"replies":[{"id":"6536","content":"高质量的留言。👍！自动测试数据生成的应用场景主要是覆盖边界值和典型易出错场景，应用价值还是比较大的。关于无头浏览器，目前的应用领域主要在爬虫和devops中的环境健康检查，就是去看一下网站基本的页面是否可以打开，最最基本的smoke用例是否可以通过，如果不行，那就会把环境健康状态标红，并从可用列表中移除","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1533557565,"ip_address":"","comment_id":18282,"utype":1}],"discussion_count":2,"race_medal":0,"score":"104612443051","product_id":100009601,"comment_content":"1.如果使用 selenium + xpath，应该可以解决大部分的控件识别，chrome 支持右键一键拷贝 xpath，贼方便；<br>2.关于测试数据的自动生成，个人感觉目前测试中，场景测试重要性是最高的，但是自动生成可能解决不了场景覆盖的问题，不过如果借鉴最新的机器学习算法，说不定有新发现；<br>3.对于无头浏览器，我的疑问是，既然是 GUI 测试，无头浏览器怎么保证测试效果的可靠性呢，测试结果是和常规浏览器一样可信么？毕竟自动化的目的还是为了测试，而不是为了自动。<br>欢迎沟通交流，公众号「sylan215」","like_count":24,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421457,"discussion_content":"高质量的留言。👍！自动测试数据生成的应用场景主要是覆盖边界值和典型易出错场景，应用价值还是比较大的。关于无头浏览器，目前的应用领域主要在爬虫和devops中的环境健康检查，就是去看一下网站基本的页面是否可以打开，最最基本的smoke用例是否可以通过，如果不行，那就会把环境健康状态标红，并从可用列表中移除","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533557565,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1798489,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/71/59/642cd27a.jpg","nickname":"小呆呆","note":"","ucode":"6A04486F1FC932","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213579,"discussion_content":"chrome 支持右键一键拷贝 xpath\n这点不认同的，xpath定位元素尽量避免直接copy使用，在我们的项目中直接copy使用大会被骂，因为copy xpath会涉及到元素下标的问题，如果页面层级改变的话，又要回头来维护xpath，成本比较大，还是自己手写xpath识别比较靠谱\n","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1585107140,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":202106,"user_name":"凌焱洋","can_delete":false,"product_type":"c1","uid":1877250,"ip_address":"","ucode":"AB6A317E3C278C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibnibklicJqGJ18L2iaiaP4k3bYbianW2Ka8s1Ck5Oxic9BNia2S5Y9TndSHkv9dSmBIwiaamYo79ENeOXbfCZkRgl0AmTg/132","comment_is_top":false,"comment_ctime":1585903841,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"40240609505","product_id":100009601,"comment_content":"关于使用selenium+xpath做web自动化的，我觉得可能大家都觉得直接使用Chrome  copy xpath会很方便，但是从长远来看，copy的xpath绝大多数是绝对路径，当开发在界面加一层封装或者换个位置就很容易定位失败，还是自己写，通过轴定位会节省后期的维护成本","like_count":9},{"had_liked":false,"id":18333,"user_name":"猪猪","can_delete":false,"product_type":"c1","uid":1143100,"ip_address":"","ucode":"F3E14A91CFBDBF","user_header":"https://static001.geekbang.org/account/avatar/00/11/71/3c/adf514f7.jpg","comment_is_top":false,"comment_ctime":1533259750,"is_pvip":false,"replies":[{"id":"6533","content":"这个具体的我实现细节还是有点复杂的，如果是静态页面，那就好解析和分类页面元素的源代码，如果页面是react页面，那就要要基于react来做解析，不同前端框架的页面解析还都不同，有很多细节要处理。","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1533556665,"ip_address":"","comment_id":18333,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31598030822","product_id":100009601,"comment_content":"老师讲一下如何自动生成页面模型的原理，不要一带而过","like_count":7,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421477,"discussion_content":"这个具体的我实现细节还是有点复杂的，如果是静态页面，那就好解析和分类页面元素的源代码，如果页面是react页面，那就要要基于react来做解析，不同前端框架的页面解析还都不同，有很多细节要处理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533556665,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":18305,"user_name":"杜艳","can_delete":false,"product_type":"c1","uid":1168516,"ip_address":"","ucode":"8D46A8CF33E9C7","user_header":"https://static001.geekbang.org/account/avatar/00/11/d4/84/7f584cb2.jpg","comment_is_top":false,"comment_ctime":1533255173,"is_pvip":false,"replies":[{"id":"6534","content":"采用伪代码的目的是为了更简单直观的说明问题的本质以及代码的实现思路，而尽量避免过多的不相关细节，如果使用实际java代码，放在文档中你看到的就是大段的代码，说明问题本质的代码就会混在其中，不容易说明问题。另外，现在还有很多自动化测试是基于python和ruby的，所以说明原理的部分我还是倾向于使用伪代码。后续文章会有一些实际的例子，那时候我会采用真实可用的java代码。<br>，","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1533557140,"ip_address":"","comment_id":18305,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23008091653","product_id":100009601,"comment_content":"建议可以不可以不要伪代码。写一个真实可用的java代码","like_count":5,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421467,"discussion_content":"采用伪代码的目的是为了更简单直观的说明问题的本质以及代码的实现思路，而尽量避免过多的不相关细节，如果使用实际java代码，放在文档中你看到的就是大段的代码，说明问题本质的代码就会混在其中，不容易说明问题。另外，现在还有很多自动化测试是基于python和ruby的，所以说明原理的部分我还是倾向于使用伪代码。后续文章会有一些实际的例子，那时候我会采用真实可用的java代码。\n，","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533557140,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":34566,"user_name":"subona","can_delete":false,"product_type":"c1","uid":1244400,"ip_address":"","ucode":"8F4E128FF687CC","user_header":"https://static001.geekbang.org/account/avatar/00/12/fc/f0/38db74c9.jpg","comment_is_top":false,"comment_ctime":1540208310,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14425110198","product_id":100009601,"comment_content":"希望老师能深入地讲解下怎么去做，感觉这几节课都是概念性的知识点，太表面了。听完对于怎样运用到项目中，把工作做得更好没有太多帮助","like_count":3},{"had_liked":false,"id":18904,"user_name":"我的summer","can_delete":false,"product_type":"c1","uid":1167381,"ip_address":"","ucode":"A5DCBAFFD8D5A2","user_header":"https://static001.geekbang.org/account/avatar/00/11/d0/15/49acb5cc.jpg","comment_is_top":false,"comment_ctime":1533605162,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14418507050","product_id":100009601,"comment_content":"GUI测试数据的自动生成中第二种情况，可以使用PICT小工具。使用一定限制条件对笛卡尔积结果筛选出已经剔除的部分组合，然后再人工确认，可以提高一些些效率","like_count":3},{"had_liked":false,"id":157960,"user_name":"【涛涛】不绝","can_delete":false,"product_type":"c1","uid":1113753,"ip_address":"","ucode":"9E4C9C70AEBDF7","user_header":"https://static001.geekbang.org/account/avatar/00/10/fe/99/95b36e98.jpg","comment_is_top":false,"comment_ctime":1575290368,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5870257664","product_id":100009601,"comment_content":"katalon开始收费了，可以弃了，用久了缺点也是蛮多的","like_count":1},{"had_liked":false,"id":81299,"user_name":"口水窝","can_delete":false,"product_type":"c1","uid":1004838,"ip_address":"","ucode":"6028B5AA10D8A1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/26/154f9578.jpg","comment_is_top":false,"comment_ctime":1553852816,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5848820112","product_id":100009601,"comment_content":"没有深入实践自动化测试，更无从谈起提高测试效率。","like_count":1},{"had_liked":false,"id":30919,"user_name":"kaiserin","can_delete":false,"product_type":"c1","uid":1256506,"ip_address":"","ucode":"B406E0D63B439F","user_header":"https://static001.geekbang.org/account/avatar/00/13/2c/3a/5504ed70.jpg","comment_is_top":false,"comment_ctime":1539047893,"is_pvip":false,"replies":[{"id":"11352","content":"现在来看，对于互联网企业，你提的这两个框架的普及率都不算太高。","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1539250444,"ip_address":"","comment_id":30919,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5834015189","product_id":100009601,"comment_content":"Katalon Studio现在的普及率怎么样？感觉大多数人还是用的robotframework","like_count":1,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426147,"discussion_content":"现在来看，对于互联网企业，你提的这两个框架的普及率都不算太高。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539250444,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22414,"user_name":"胖虫子","can_delete":false,"product_type":"c1","uid":1100956,"ip_address":"","ucode":"21FC09D0121B4F","user_header":"https://static001.geekbang.org/account/avatar/00/10/cc/9c/ec71155f.jpg","comment_is_top":false,"comment_ctime":1535673885,"is_pvip":false,"replies":[{"id":"8102","content":"蛮同意你的观点的，很多也是处于测试人员自身技能发展的考虑","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1535792245,"ip_address":"","comment_id":22414,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5830641181","product_id":100009601,"comment_content":"为什么大家用类似katalon这样的工具热情不高，但自己去写自动化框架的热情高","like_count":1,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423108,"discussion_content":"蛮同意你的观点的，很多也是处于测试人员自身技能发展的考虑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535792245,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":18303,"user_name":"Robert小七","can_delete":false,"product_type":"c1","uid":1165254,"ip_address":"","ucode":"6BBF4674673AF5","user_header":"https://static001.geekbang.org/account/avatar/00/11/c7/c6/35cc7c7c.jpg","comment_is_top":false,"comment_ctime":1533254418,"is_pvip":false,"replies":[{"id":"6535","content":"无头浏览器的应用并不是太多，很多是用来做爬虫，自动化测试的应用相对比较少，是的，完全可以用selenium grid来代替。但是最近由于google官方发布了headless chrome和对应的测试框架，所以估计后面会有更多的应用。","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1533557278,"ip_address":"","comment_id":18303,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5828221714","product_id":100009601,"comment_content":"企业实战中，无头浏览器的应用程度如何？是否可以用多线程来替代grid集群<br>","like_count":1,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421466,"discussion_content":"无头浏览器的应用并不是太多，很多是用来做爬虫，自动化测试的应用相对比较少，是的，完全可以用selenium grid来代替。但是最近由于google官方发布了headless chrome和对应的测试框架，所以估计后面会有更多的应用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533557278,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":357199,"user_name":"付晓杰","can_delete":false,"product_type":"c1","uid":1869584,"ip_address":"上海","ucode":"66634A3401A176","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/FGeCDgpXdhsXseIGF3GCzZibDJlOfO4KDqPJkMra2e0TJj3QVQk4t1oEd1BuQPtYOeavFyYxicd5fTZ33tIbPOZQ/132","comment_is_top":false,"comment_ctime":1663059232,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1663059232","product_id":100009601,"comment_content":"1.页面对象自动生成<br>商用自动化工具，比如 UFT；目前国内应用还不算多、免费的 Katalon Studio。<br>2.GUI 测试数据自动生成<br>3.无头浏览器页面对象自动生成<br>PhantomJS 的创建者 Ariya Hidayat 停止了它的后续维护，Headless Chrome 成了无头浏览器的首选方案。","like_count":0},{"had_liked":false,"id":335876,"user_name":"小呀么小二郎","can_delete":false,"product_type":"c1","uid":1326905,"ip_address":"","ucode":"149540DCFDF43E","user_header":"https://static001.geekbang.org/account/avatar/00/14/3f/39/b1558fc9.jpg","comment_is_top":false,"comment_ctime":1645751670,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645751670","product_id":100009601,"comment_content":"这门课都出了四年了，我才刚知道无头浏览器…","like_count":0},{"had_liked":false,"id":293557,"user_name":"于艳美","can_delete":false,"product_type":"c1","uid":2547989,"ip_address":"","ucode":"DD6C70CECBA90B","user_header":"https://static001.geekbang.org/account/avatar/00/26/e1/15/c9ec6fb0.jpg","comment_is_top":false,"comment_ctime":1621429865,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621429865","product_id":100009601,"comment_content":"最近有没有新的页面对象自动生成的工具 <br>","like_count":0},{"had_liked":false,"id":286444,"user_name":"歆雪","can_delete":false,"product_type":"c1","uid":2459743,"ip_address":"","ucode":"C5A4CA4C7B314B","user_header":"https://static001.geekbang.org/account/avatar/00/25/88/5f/31aa3141.jpg","comment_is_top":false,"comment_ctime":1617323318,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617323318","product_id":100009601,"comment_content":"1.自动生成页面对象，个人感觉还是半自动的，因为需要手动去操作页面，然后工具才会录制操作的元素及元素事件，对于熟悉xpath语法，且只有部分页面元素发生变化的情况下，直接写比录制感觉更方便。<br>2.自动生成测试数据，感觉对于一些文本框，边界值这种很有参考建议，开拓思路了，谢谢！<br>3.无头浏览器第一次听说，不知道对于一些需要一段时间才能加载好的元素的操作是否会有影响？如果可用，感觉可以省很多执行机","like_count":0},{"had_liked":false,"id":233743,"user_name":"捷后愚生","can_delete":false,"product_type":"c1","uid":1170483,"ip_address":"","ucode":"A1F935D39C8488","user_header":"https://static001.geekbang.org/account/avatar/00/11/dc/33/a68c6b26.jpg","comment_is_top":false,"comment_ctime":1594433590,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594433590","product_id":100009601,"comment_content":"老师文章中提到的“依赖于数据的动态页面对象”，不大理解。<br><br>自动生成页面对象，是会自动生成页面全部的对象吧，其实有些对象并不需要。<br><br>GUI 测试数据自动生成，这是新接触的知识。这方面有什么开源的工具可以自动生成测试数据吗？","like_count":0},{"had_liked":false,"id":170310,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1578565709,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578565709","product_id":100009601,"comment_content":"无头浏览器真炫酷！一直头疼的问题解决了。十分感谢！","like_count":0},{"had_liked":false,"id":163086,"user_name":"叶子","can_delete":false,"product_type":"c1","uid":1582373,"ip_address":"","ucode":"4ABA4E2773F762","user_header":"https://static001.geekbang.org/account/avatar/00/18/25/25/ef7330de.jpg","comment_is_top":false,"comment_ctime":1576654685,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576654685","product_id":100009601,"comment_content":"都2019了不知道是否还能收到老师的回复<br>比较好奇一个问题 关于页面对象自动生成中的版本管理   工具如何识别两个版本间对象的关联性？例如版本1中有个对象A，在版本2中这个对象变更为对象B了，那么工具如何识别到原来调用对象A的地方现在应该调用对象B?","like_count":0},{"had_liked":false,"id":91365,"user_name":"Geek_007","can_delete":false,"product_type":"c1","uid":1518926,"ip_address":"","ucode":"1BDD4D5B9E829D","user_header":"","comment_is_top":false,"comment_ctime":1557017204,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557017204","product_id":100009601,"comment_content":"你好 请问关于GUI测试 还有一些桌面应用软件（非浏览器），应该怎么来做自动化测试呢？","like_count":0},{"had_liked":false,"id":40979,"user_name":"johnny","can_delete":false,"product_type":"c1","uid":1210226,"ip_address":"","ucode":"54E78B7BBC6AF0","user_header":"https://static001.geekbang.org/account/avatar/00/12/77/72/8f77ddb0.jpg","comment_is_top":false,"comment_ctime":1542707896,"is_pvip":false,"replies":[{"id":"15928","content":"很好的建议，下次一定提供完整可运行的代码示例，但是讲解还是采用伪代码可以帮助更好的理解","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1543469840,"ip_address":"","comment_id":40979,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542707896","product_id":100009601,"comment_content":"老师，希望能在git提供部分章节的代码实现。比如第14节的内容看完还是只停留在概念，如果有示例代码就比较方便理解","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429666,"discussion_content":"很好的建议，下次一定提供完整可运行的代码示例，但是讲解还是采用伪代码可以帮助更好的理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543469840,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":35032,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1540385518,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540385518","product_id":100009601,"comment_content":"1，＂无头浏览器＂、＂页面对象自动生成＂，以及 ＂GUI 测试数据自动生成＂这三个技术现在在企业中用得多吗？<br>2、＂selenium for Java中的htmlunit是不是属于无头浏览器？","like_count":0},{"had_liked":false,"id":19839,"user_name":"欧晓鸥","can_delete":false,"product_type":"c1","uid":1164942,"ip_address":"","ucode":"05B9D24849FF6C","user_header":"https://static001.geekbang.org/account/avatar/00/11/c6/8e/48287140.jpg","comment_is_top":false,"comment_ctime":1534120941,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1534120941","product_id":100009601,"comment_content":"关于数据自动化生成有例子吗？","like_count":0},{"had_liked":false,"id":19838,"user_name":"欧晓鸥","can_delete":false,"product_type":"c1","uid":1164942,"ip_address":"","ucode":"05B9D24849FF6C","user_header":"https://static001.geekbang.org/account/avatar/00/11/c6/8e/48287140.jpg","comment_is_top":false,"comment_ctime":1534120876,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1534120876","product_id":100009601,"comment_content":"对于一个即将被替代的项目，要做自动化，覆盖率是最主要的吗？","like_count":0},{"had_liked":false,"id":18839,"user_name":"雪哥","can_delete":false,"product_type":"c1","uid":1166268,"ip_address":"","ucode":"7AE50B31768A28","user_header":"https://static001.geekbang.org/account/avatar/00/11/cb/bc/fe68899c.jpg","comment_is_top":false,"comment_ctime":1533598306,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1533598306","product_id":100009601,"comment_content":"茹老师，请问自己实现页面元素自动生成，一般用什么技术，指点一下大概方向就可以","like_count":0},{"had_liked":false,"id":18594,"user_name":"星","can_delete":false,"product_type":"c1","uid":1120535,"ip_address":"","ucode":"9CC01CCE72C893","user_header":"https://static001.geekbang.org/account/avatar/00/11/19/17/a2d9d515.jpg","comment_is_top":false,"comment_ctime":1533476297,"is_pvip":false,"replies":[{"id":"6545","content":"这个问题不是一两句话可以说清楚的，回头我去搞个git的代码示例。","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1533559034,"ip_address":"","comment_id":18594,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1533476297","product_id":100009601,"comment_content":"如何生成页面对象？","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421588,"discussion_content":"这个问题不是一两句话可以说清楚的，回头我去搞个git的代码示例。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533559034,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":18457,"user_name":"soul","can_delete":false,"product_type":"c1","uid":1090690,"ip_address":"","ucode":"B9A05A1AA4773C","user_header":"https://static001.geekbang.org/account/avatar/00/10/a4/82/5cb984b5.jpg","comment_is_top":false,"comment_ctime":1533340514,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1533340514","product_id":100009601,"comment_content":"Katalon Studio 已经操作 不错","like_count":0},{"had_liked":false,"id":18413,"user_name":"橄榄","can_delete":false,"product_type":"c1","uid":1166364,"ip_address":"","ucode":"8B963A4AE2FE0D","user_header":"https://static001.geekbang.org/account/avatar/00/11/cc/1c/069b7e96.jpg","comment_is_top":false,"comment_ctime":1533296513,"is_pvip":false,"replies":[{"id":"6547","content":"没关系，知道有这些概念和方法就好，uft等商业gui自动化工具都已经实现了部分功能，使用起来还是很简单","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1533559166,"ip_address":"","comment_id":18413,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1533296513","product_id":100009601,"comment_content":"没有实际应用过","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421515,"discussion_content":"没关系，知道有这些概念和方法就好，uft等商业gui自动化工具都已经实现了部分功能，使用起来还是很简单","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533559166,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}