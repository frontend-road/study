{"id":623418,"title":"87｜理论盘点：数据分析的流程及对应的 Python 库","content":"<p><strong>课后习题</strong><br>\n请你根据你所在地区的气温、天气，使用 Excel 工具绘制一张天气和气温变化图表。</p><p><strong>课程代码、课件及其他相关资料地址</strong><br>\n<a href=\"https://gitee.com/wilsonyin/zero-basics-python\">https://gitee.com/wilsonyin/zero-basics-python</a></p>","comments":[{"had_liked":false,"id":385192,"user_name":"Geek_631607","can_delete":false,"product_type":"c3","uid":3789991,"ip_address":"广东","ucode":"EAF874838F0BE4","user_header":"","comment_is_top":false,"comment_ctime":1702278179,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"import requests\nfrom bs4 import BeautifulSoup\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# 抓取深圳的天气情况\nurl = &quot;http:&#47;&#47;www.weather.com.cn&#47;weather&#47;101280601.shtml&quot;\nresponse = requests.get(url)\nresponse.encoding = &#39;UTF-8&#39;\n# print(response)\nsoup = BeautifulSoup(response.text, &#39;html.parser&#39;)\n# print(soup)\n\n# 解析网页，获取日期、最高温度和最低温度\ndates = [item.get_text() for item in soup.select(&#39;.t li h1&#39;)]\ndates = [item.get_text() for item in soup.select(&#39;.t li h1&#39;)]\nhigh_temps = [int(item.get_text().replace(&#39;℃&#39;, &#39;&#39;)) for item in soup.select(&#39;.t li .tem span&#39;)]\nlow_temps = [int(item.get_text().replace(&#39;℃&#39;, &#39;&#39;)) for item in soup.select(&#39;.t li .tem i&#39;)]\n\n# 将数据保存到 DataFrame 中\ndf = pd.DataFrame({\n    &#39;date&#39;: dates,\n    &#39;high_temp&#39;: high_temps,\n    &#39;low_temp&#39;: low_temps\n})\n\n# 将 DataFrame 保存到 CSV 文件中\ndf.to_csv(&#39;shenzhen_weather.csv&#39;, index=False)\n\n# 从 CSV 文件中读取 DataFrame\ndf = pd.read_csv(&#39;shenzhen_weather.csv&#39;)\n\n# 绘制最高温度和最低温度的折线图\nplt.rcParams[&#39;font.sans-serif&#39;] = [&#39;Arial Unicode MS&#39;]\nplt.plot(df[&#39;date&#39;], df[&#39;high_temp&#39;], label=&#39;High Temperature&#39;)\nplt.plot(df[&#39;date&#39;], df[&#39;low_temp&#39;], label=&#39;Low Temperature&#39;)\nplt.xlabel(&#39;Date&#39;)\nplt.ylabel(&#39;Temperature (℃)&#39;)\nplt.title(&#39;Shenzhen Weather&#39;)\nplt.legend()\nplt.show()","like_count":1},{"had_liked":false,"id":380649,"user_name":"Geek_Mike","can_delete":false,"product_type":"c3","uid":3196376,"ip_address":"云南","ucode":"CFA942192C3B74","user_header":"https://static001.geekbang.org/account/avatar/00/30/c5/d8/c5509b9c.jpg","comment_is_top":false,"comment_ctime":1693927025,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"# 请你根据你所在地区的气温、天气，使用 Excel 工具绘制一张天气和气温变化图表\n\nimport requests, pandas, matplotlib.pyplot\n\n# 数据采集\ndef get_data():\n    url = &#39;https:&#47;&#47;api.openweathermap.org&#47;data&#47;2.5&#47;weather?q=YOUR_CITY,uk&amp;appid=YOUR_API_KEY&#39;\n    response = requests.get(url)\n    if response.status_code == 200:\n        data = response.json()\n        return data\n    else:\n        print(&#39;访问异常,异常状态码:&#39; + requests.status_codes)\n        return None\n\n# 数据挖掘\ndef save_data(data):\n    if get_data():\n        df = pandas.DataFrame(data[&#39;weather&#39;][0])\n        df[&#39;main&#39;] = data[&#39;maiin&#39;]\n        df[&#39;dt_txt&#39;] = data[&#39;dt_txt&#39;]\n        df[&#39;data&#39;] = pandas.to_datetime(df[&#39;dt_txt&#39;])\n        grouped = df.groupby(&#39;data&#39;)[&#39;temp&#39;].mean()\n        return grouped\n    else:\n        print(&#39;数据存储失败,请检查数据采集&#39;)\n        return None\n\n# 数据可视化\ndef show_data(grouped):\n    matplotlib.pyplot.plot(grouped.index, grouped.values)\n    matplotlib.pyplot.xlabel(&#39;Date&#39;)\n    matplotlib.pyplot.ylabel(&#39;Average Temperature&#39;)\n    matplotlib.pyplot.show()","like_count":1},{"had_liked":false,"id":367206,"user_name":"Cy23","can_delete":false,"product_type":"c3","uid":1591293,"ip_address":"辽宁","ucode":"8DC561C5151758","user_header":"https://static001.geekbang.org/account/avatar/00/18/47/fd/895f0c27.jpg","comment_is_top":false,"comment_ctime":1675041326,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"一顿借鉴组装，实现了，抓取网页天气情况，保存到CSV中，读取CSV到df，图标展示双折线图显示最低与最高温度\nimport requests\nfrom bs4 import BeautifulSoup\nimport csv\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nurl = &#39;https:&#47;&#47;www.tianqi.com&#47;shenyang&#47;30&#47;&#39;\n\ndef getHTMLtext(url):   \n  &quot;&quot;&quot;请求获得网页内容&quot;&quot;&quot;\n  headers = {&quot;User-Agent&quot;: &quot;Mozilla&#47;5.0 (Windows NT 10.0; WOW64) AppleWebKit&#47;537.36 (KHTML, like Gecko) Chrome&#47;86.0.4240.198 Safari&#47;537.36&quot;}\n  try:        \n   r = requests.get(url, timeout = 30, headers = headers)    \n   r.raise_for_status()        \n   r.encoding = r.apparent_encoding     \n   print(&quot;成功访问&quot;)        \n   return r.text    \n  except:        \n   print(&quot;访问错误&quot;)       \n   return&quot; &quot;\n\n\ndef get_content(html):\n  &quot;&quot;&quot;处理得到有用信息保存数据文件&quot;&quot;&quot;\n  final = []\n  bs = BeautifulSoup(html, &quot;html.parser&quot;)\n  body = bs.body\n  ul = body.find(&#39;ul&#39;, {&#39;class&#39;: &#39;weaul&#39;})\n  li = ul.find_all(&#39;li&#39;)\n  i = 0\n  for day in li:\n    if i &lt; 30 and i &gt; 0:\n      temp = []\n      date = day.find(attrs={&#39;class&#39;:&#39;fl&#39;}).string\n      temp.append(date)   \n\n      inf = day.find_all(attrs={&#39;class&#39;:&#39;weaul_z&#39;})\n      temp.append(inf[0].string)  \n      tem = inf[1].find_all(&#39;span&#39;)   \n      tem_low = tem[0].string\n      tem_high = tem[1].string\n      temp.append(tem_low) \n      temp.append(tem_high)   \n      final.append(temp)\n    i = i + 1\n  return final\n\nif __name__ == &#39;__main__&#39;:\n  html_text = getHTMLtext(url)\n  data = get_content(html_text)\n\n  header =[[&#39;日期&#39;,&#39;天气&#39;,&#39;最低温度&#39;,&#39;最高温度&#39;]]\n  with open(&#39;weather.csv&#39;, &#39;w&#39;, newline=&#39;&#39;) as f:\n    writer = csv.writer(f)\n    writer.writerows(header)\n    writer.writerows(data)\n\n  df = pd.read_csv(&quot;weather.csv&quot;, encoding=&#39;gbk&#39;)\n  \n  x = df[&quot;日期&quot;]\n  y1 = df[&quot;最低温度&quot;]\n  y2 = df[&quot;最高温度&quot;]\n  \n  # 中文乱码\n  plt.rcParams[&#39;font.sans-serif&#39;]=[&#39;SimHei&#39;]\n  plt.rcParams[&#39;axes.unicode_minus&#39;]=False\n  # 绘制折线图\n  plt.plot(x, y1)\n  plt.plot(x, y2)\n  \n  plt.title(&quot;本市近30天温度情况&quot;)\n  plt.show()","like_count":1,"discussions":[{"author":{"id":1166124,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKzEPicUMYCAyicwEyz2yiaoPn71GmnbIvqygJIsshRVkgCQ8X3dC2I6Ftaa4HtYfLn3FUkp7jX1uK2Q/132","nickname":"汤神","note":"","ucode":"F4D32A3AF7E35B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":635684,"discussion_content":"def data_maker():\n    soup = BeautifulSoup(open(&#39;index.html&#39;))\n    txt_elements = soup.find_all(class_=&#39;txt&#39;)\n    date_list = []\n    tem_list = []\n    for txt in txt_elements:\n        if re.match(&#34;^\\d*/\\d*$&#34;, txt.text):\n            date_list.append(txt.text)\n        if re.match(&#34;^-\\d*~\\d*°C$&#34;, txt.text):\n            tem_list.append(txt.text)\n日期和温度获取，我用的soup.find_all(class_=&#39;txt&#39;)，再加正则匹配，感觉简单点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1705044596,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":383961,"user_name":"醉后不知天在水","can_delete":false,"product_type":"c3","uid":2548362,"ip_address":"山东","ucode":"B8A25FBF639D5D","user_header":"https://static001.geekbang.org/account/avatar/00/26/e2/8a/ac6c5b92.jpg","comment_is_top":false,"comment_ctime":1700021222,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"抄作业改了下：）\nimport requests\nfrom bs4 import BeautifulSoup\nimport csv\nimport pandas as pd\nimport matplotlib.pyplot as plt\nurl = &#39;https:&#47;&#47;www.tianqi.com&#47;shenyang&#47;30&#47;&#39;\ndef getHTMLtext(url):\n    headers = {\n        &quot;User-Agent&quot;: &quot;Mozilla&#47;5.0 (Windows NT 10.0; WOW64) AppleWebKit&#47;537.36 (KHTML, like Gecko) Chrome&#47;86.0.4240.198 Safari&#47;537.36&quot;\n    }\n    try:\n        r = requests.get(url, timeout=30, headers=headers)\n        r.raise_for_status()\n        r.encoding = r.apparent_encoding\n        print(&quot;成功访问&quot;)\n        return r.text\n    except Exception as e:\n        print(f&quot;访问错误, 错误原因:{e}&quot;)\n        return -1\ndef get_content(html):\n    final = []\n    body = BeautifulSoup(html, &quot;html.parser&quot;).body\n    ul = body.find(&#39;ul&#39;, {&#39;class&#39;: &#39;weaul&#39;})\n    li = ul.find_all(&#39;li&#39;)\n    i = 0\n    for day in li:\n        if i &lt; 30 and i &gt; 0:\n            temp = []\n            date = day.find(attrs={&#39;class&#39;: &#39;fl&#39;}).string\n            temp.append(date)\n            inf = day.find_all(attrs={&#39;class&#39;: &#39;weaul_z&#39;})\n            temp.append(inf[0].string)\n            tem = inf[1].find_all(&#39;span&#39;)\n            tem_low = tem[0].string\n            tem_high = tem[1].string\n            temp.append(tem_low)\n            temp.append(tem_high)\n            final.append(temp)\n        i = i + 1\n    return final\nif __name__ == &#39;__main__&#39;:\n    html_text = getHTMLtext(url)\n    data = get_content(html_text)\n    header = [&#39;日期&#39;, &#39;天气&#39;, &#39;最低温度&#39;, &#39;最高温度&#39;]    \n    with open(&#39;weather.csv&#39;, &#39;w&#39;,newline=&#39;&#39;, encoding=&#39;utf-8&#39;) as f:\n        writer = csv.writer(f)\n        writer.writerow(header)\n        writer.writerows(data)\n    df = pd.read_csv(&quot;weather.csv&quot;,encoding=&quot;utf-8&quot;)\n    x = df[&quot;日期&quot;]\n    y1 = df[&quot;最低温度&quot;]\n    y2 = df[&quot;最高温度&quot;]\n    plt.figure(figsize=(10, 6))\n    plt.rcParams[&#39;font.sans-serif&#39;] = [&#39;SimHei&#39;]\n    plt.rcParams[&#39;axes.unicode_minus&#39;] = False\n    plt.plot(x, y1)\n    plt.plot(x, y2)\n    plt.title(&quot;本市近30天温度情况&quot;)\n    plt.xticks(rotation=45)\n\n    plt.show()","like_count":0},{"had_liked":false,"id":378438,"user_name":"Greenery","can_delete":false,"product_type":"c3","uid":3566765,"ip_address":"新加坡","ucode":"16111129C9EBA2","user_header":"https://static001.geekbang.org/account/avatar/00/36/6c/ad/0a694b50.jpg","comment_is_top":false,"comment_ctime":1690257624,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"# %% 包导入和全局设置\nimport pandas as pd\nimport requests\nfrom bs4 import BeautifulSoup\nfrom matplotlib import pyplot as plt\n\n# 解决中文问题\nplt.rcParams[&#39;font.sans-serif&#39;] = [&#39;SimHei&#39;]\n# 解决负号显示问题\nplt.rcParams[&#39;axes.unicode_minus&#39;] = False\n\n\n# %% 数据爬取\ndef get_data():\n    &quot;&quot;&quot;请求访问网页&quot;&quot;&quot;\n    url = &#39;https:&#47;&#47;www.tianqi.com&#47;ningbo&#47;10&#47;&#39;\n    headers = {\n        &#39;User-Agent&#39;: &#39;Mozilla&#47;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#47;537.36 (KHTML, like Gecko) Chrome&#47;115.0.0.0 Safari&#47;537.36 Edg&#47;115.0.1901.183&#39;}\n    resp = requests.get(url, headers=headers)\n\n    &quot;&quot;&quot;读取并返回网页内容&quot;&quot;&quot;\n    html = resp.content.decode(&#39;utf-8&#39;)\n    soup = BeautifulSoup(html, &#39;html.parser&#39;)\n\n    &quot;&quot;&quot;查找网页中需要的天气数据&quot;&quot;&quot;\n    ul = soup.body.find(&#39;ul&#39;, {&#39;class&#39;: &#39;weaul&#39;})\n    li_list = ul.find_all(&quot;li&quot;)\n\n    dates, conditions, temp = [], [], []\n    for data in li_list:\n        sub_data = data.text.split()\n        print(sub_data)\n        dates.append(sub_data[0])\n        conditions.append(sub_data[2])\n        temp.append(sub_data[3])\n    df = pd.DataFrame()\n    df[&#39;日期&#39;] = dates\n    df[&#39;天气状况&#39;] = conditions\n    df[&#39;温度&#39;] = temp\n    return df\n\n\nweather = get_data()\nweather.to_csv(&quot;宁波天气（10天）.csv&quot;, index=False, encoding=&#39;utf-8&#39;, )\n\n# %% 数据处理\ndata = pd.read_csv(&quot;宁波天气（10天）.csv&quot;)\ntemps = data[&#39;温度&#39;].str.split(&#39;~&#39;, expand=True)\ndata[&#39;最低温度&#39;] = temps[0]\ndata[&#39;最高温度&#39;] = temps[1].map(lambda x: int(x.replace(&#39;℃&#39;, &#39;&#39;)))\nprint(data)\n\n# %% 数据可视化\ndates = data[&#39;日期&#39;]\nlows = data[&#39;最低温度&#39;]\nhighs = data[&#39;最高温度&#39;]\n\n# 根据数据绘制图形\nfig = plt.figure(dpi=128, figsize=(10, 6))\nplt.plot(dates, lows, c=&#39;red&#39;, alpha=0.5)\nplt.plot(dates, highs, c=&#39;green&#39;, alpha=0.5)\n\nplt.title(&#39;宁波天气（10天）&#39;, fontsize=24)\nplt.xlabel(&#39;日期&#39;, fontsize=12)\nfig.autofmt_xdate()  # 绘制斜的日期标签，以防重叠\nplt.ylabel(&#39;温度&#39;, fontsize=12)\nplt.tick_params(axis=&#39;both&#39;, which=&#39;major&#39;, labelsize=10)\n\nplt.xticks(dates[::20])\nplt.show()","like_count":0},{"had_liked":false,"id":370255,"user_name":"江江儿嘛哩哄","can_delete":false,"product_type":"c3","uid":1928117,"ip_address":"浙江","ucode":"E7D6E59551B7F1","user_header":"https://static001.geekbang.org/account/avatar/00/1d/6b/b5/14586a78.jpg","comment_is_top":false,"comment_ctime":1678614172,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"&quot;&quot;&quot;爬取数据&quot;&quot;&quot;\nimport pandas as pd\nimport requests\nfrom bs4 import BeautifulSoup\nfrom matplotlib import pyplot as plt\n\n# 解决中文问题\nplt.rcParams[&#39;font.sans-serif&#39;] = [&#39;SimHei&#39;]\n# 解决负号显示问题\nplt.rcParams[&#39;axes.unicode_minus&#39;] = False\n\ndef get_data():\n    &quot;&quot;&quot;请求访问网页&quot;&quot;&quot;\n    url = &#39;https:&#47;&#47;www.tianqi.com&#47;hangzhou&#47;10&#47;&#39;\n    headers = {\n        &#39;User-Agent&#39;: &#39;Mozilla&#47;5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit&#47;537.36 (KHTML, like Gecko) Chrome&#47;110.0.0.0 Safari&#47;537.36&#39;}\n    resp = requests.get(url, headers=headers)\n\n    &quot;&quot;&quot;读取并返回网页内容&quot;&quot;&quot;\n    html = resp.content.decode(&#39;utf-8&#39;)\n    soup = BeautifulSoup(html, &#39;html.parser&#39;)\n\n    &quot;&quot;&quot;查找网页中需要的天气数据&quot;&quot;&quot;\n    ul = soup.body.find(&#39;ul&#39;, {&#39;class&#39;: &#39;weaul&#39;})\n    li_list = ul.find_all(&quot;li&quot;)\n\n    dates, conditions, temp = [], [], []\n    for data in li_list:\n        sub_data = data.text.split()\n        print(sub_data)\n        dates.append(sub_data[0])\n        conditions.append(sub_data[2])\n        temp.append(sub_data[3])\n    df = pd.DataFrame()\n    df[&#39;日期&#39;] = dates\n    df[&#39;天气状况&#39;] = conditions\n    df[&#39;温度&#39;] = temp\n    return df\n\nweather = get_data()\nweather.to_csv(&#39;杭州天气预报(10天).csv&#39;, index=False, encoding=&#39;utf-8&#39;)\n\n&quot;&quot;&quot;数据可视化&quot;&quot;&quot;\ndata = pd.read_csv(&#39;杭州天气预报(10天).csv&#39;)\ndata[&#39;最低温度&#39;] = data[&#39;温度&#39;].str.split(&#39;~&#39;, expand=True)[0]\ndata[&#39;最高温度&#39;] = data[&#39;温度&#39;].str.split(&#39;~&#39;, expand=True)[1]\ndata[&#39;最高温度&#39;] = data[&#39;最高温度&#39;].map(lambda x: int(x.replace(&#39;℃&#39;, &#39;&#39;)))\nprint(data)\n\ndates = data[&#39;日期&#39;]\nlows = data[&#39;最低温度&#39;]\nhighs = data[&#39;最高温度&#39;]\n\n# 根据数据绘制图形\nfig = plt.figure(dpi=128, figsize=(10, 6))\nplt.plot(dates, lows, c=&#39;red&#39;, alpha=0.5)\nplt.plot(dates, highs, c=&#39;green&#39;, alpha=0.5)\n\n\nplt.title(&#39;杭州天气预报(10天)&#39;, fontsize=24)\nplt.xlabel(&#39;日期&#39;, fontsize=12)\nfig.autofmt_xdate()  # 绘制斜的日期标签，以防重叠\nplt.ylabel(&#39;温度&#39;, fontsize=12)\nplt.tick_params(axis=&#39;both&#39;, which=&#39;major&#39;, labelsize=10)\n\nplt.xticks(dates[::20])\nplt.show()","like_count":0},{"had_liked":false,"id":366764,"user_name":"Matthew","can_delete":false,"product_type":"c3","uid":2843865,"ip_address":"江苏","ucode":"96093089773740","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKSVuNarJuDhBSvHY0giaq6yriceEBKiaKuc04wCYWOuso50noqDexaPJJibJN7PHwvcQppnzsDia1icZkw/132","comment_is_top":false,"comment_ctime":1674186068,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"from openpyxl import Workbook\nfrom openpyxl.chart import (\n    ScatterChart,\n    Reference,\n    Series,\n    LineChart,\n)\n\nwb = Workbook()\n\n# grab the active worksheet\nws = wb.active\n\n# 写入标题行\ntitle = [&quot;日期&quot;, &quot;天气&quot;, &quot;最高温度&quot;, &quot;最低温度&quot;, &quot;风级&quot;]\nws.append(title)\n\n# 写入数据\ndata = [\n    [&#39;19日（今天）&#39;, &#39;晴&#39;, 11, -1, &#39;&lt;3级&#39;], \n    [&#39;20日（明天）&#39;, &#39;多云&#39;, 7, 0, &#39;3-4级&#39;], \n    [&#39;21日（后天）&#39;, &#39;阴转小雨&#39;, 10, 1, &#39;4-5级转3-4级&#39;], \n    [&#39;22日（周日）&#39;, &#39;小雨转阴&#39;, 8, 4, &#39;4-5级转&lt;3级&#39;], \n    [&#39;23日（周一）&#39;, &#39;多云&#39;, 9, -2, &#39;&lt;3级转3-4级&#39;], \n    [&#39;24日（周二）&#39;, &#39;多云&#39;, 1, -6, &#39;3-4级转&lt;3级&#39;], \n    [&#39;25日（周三）&#39;, &#39;多云&#39;, 4, -5, &#39;&lt;3级&#39;]\n]\nfor i in data:\n   ws.append(i) \n\n\n# 画图\n# chart = ScatterChart()\n# chart.title = &quot;未来7天气温&quot;\n# chart.style = 13\n# chart.x_axis.title = &#39;日期&#39;\n# chart.y_axis.title = &#39;温度&#39;\n\n# xvalues = Reference(ws, min_col=1, min_row=2, max_row=8)\n# for i in range(3, 5):\n#     values = Reference(ws, min_col=i, min_row=1, max_row=8)\n#     series = Series(values, xvalues, title_from_data=True)\n#     chart.series.append(series)\n\n\n# 画图\nchart = LineChart() # 折线图\n# x 坐标的数据，通常用一列数据作为,这里选择第一列\nx_data=Reference(ws, min_col=1,min_row=2, max_col=1,max_row=ws.max_row )\n# 数据收集，选择第3，4列作为数据画图\ndata=Reference(ws, min_col=3, min_row=1, max_col=4, max_row=ws.max_row,)\n# ---------------------------------------------------\nchart.add_data(data,from_rows=False,titles_from_data=True)\n# from_rows：如果是True表示将一行的数据作为一个条线，如果是False表示按列画\n# titles_from_data：如果是True，表示每一组（根据from_rows确定是每一行还是每一列）数据的第一个作为title\n# --------------------------------------------------------------------------------\nchart.set_categories(x_data) # 设置横坐标\nchart.y_axis.title = &#39;温度&#39; # 设置y轴的名字\nchart.x_axis.title = &#39;日期&#39; # 设置x轴的名字\nchart.title=&#39;天气情况&#39;\n\nws.add_chart(chart, &quot;A11&quot;)\n\n# Save the file\nwb.save(&quot;sample.xlsx&quot;)","like_count":0}]}