{"id":652102,"title":"01｜初识Python（上）：入门Python你应该怎么做？","content":"<p>你好，我是Barry。</p><p>Python的语法简单易学、用途广泛，可以说是当下最火的一门语言。它被广泛地应用在数据分析、爬虫、自动化办公、后端开发、自动化测试、人工智能等领域，可以说上天入地，无所不能。</p><p>所以说，我们入门了Python，就等于拿到了开启很多知识的金钥匙。这节课，我们就来入门Python。今天要学的内容比较多，但是不要担心，只要你跟着我把学习思路整理好，掌握起来还是非常容易的。</p><h2>初识Python</h2><p>我们先简单了解一下Python。</p><p>Python 是由 Guido van Rossum 于八十年代末和九十年代初，在荷兰国家数学和计算机科学研究所设计出来的。Python 的设计具有很强的可读性，相比其他编程语言经常使用英文关键字，以及在编写上使用的一些标点符号，Python的语法结构更有特色。</p><p><img src=\"https://static001.geekbang.org/resource/image/05/e0/055c989c8677c4a7ff724f6cdfdedee0.jpg?wh=1201x779\" alt=\"\"></p><p>目前Python常用的版本有2.X和3.X。3在2的基础上去繁从简，做了改进。不过，目前使用Python 2 的开发人员也越来越少了，所以我们只学习Python 3就可以了。</p><p>Python的语法非常简洁，下面我们尝试用Python输出一句话 “Hello, Python”，感受一下它的语法。</p><pre><code class=\"language-python\">#!/usr/bin/Python3\nprint (\"Hello, Python!\")\n</code></pre><!-- [[[read_end]]] --><p>可以看到，我们很轻松就完成了一条输出语句，而且我们可以在控制台看到输出的语句。</p><p>是不是感觉使用起来比较简单?</p><p>现在我们对Python有了基本的认识，但是如果想深入学习和应用Python，我们就需要学习Python的几大核心模块。</p><ol>\n<li>Python基础数据类型</li>\n<li>Python的脚本语言</li>\n<li>Python数据分析</li>\n<li>Python后端开发（包括后端框架Flask、Django等等）</li>\n</ol><h2>Python基础数据类型</h2><p>我们先从Python基础数据类型开始了解，这是学习一门编程语言最基础的内容。</p><h3>六个标准的数据类型</h3><p><strong>Python3 中有六个标准的数据类型，分别是：数字、字符串、列表、元组、集合、字典。</strong></p><h4>1. Number（数字）</h4><p>Python中的数字有四种类型：整数、布尔型、浮点数和复数。</p><ul>\n<li>int（整数），例如 1、2、3。</li>\n<li>bool（布尔型），包括True和False两个值，分别代表真和假。举个例子：张三是不是男生？答案要么是真，要么是假。你只要知道True代表真，False代表假就可以，后面我们会通过代码来表示一些条件的真和假。</li>\n<li>float（浮点数），如 1.23。</li>\n<li>complex（复数），如 1 + 2j、 1.1 + 2.2j。</li>\n</ul><h4>2. String（字符串）</h4><p>多个字符组合在一起就是字符串。现在我们定义一个最简单的字符串。</p><pre><code class=\"language-python\">str=\"hello\"\nprint(str)\n</code></pre><p>字符串由多个字符组成，为了方便找到每一个字符，Python会默认给它们序号。这个序号就叫做“索引”。正序是从0开始依次+1，倒序是从最后一个字符开始，由-1开始依次递减。</p><p><img src=\"https://static001.geekbang.org/resource/image/22/b4/220e00d18985cc3a622f1f9bd9e09fb4.jpg?wh=3378x1609\" alt=\"\"></p><p>那么如果需要在字符串中截取一个片段要如何操作呢？</p><p>我们可以在字符串后面加上中括号[]，并指明是从哪个索引到哪个索引，两个数字用 “:” 连接就可以了。</p><p>这里还有一个口诀：<strong>含头不含尾</strong>。例如：str[3:6]就表示，str这个字符串中从索引为3到索引为6（不含）的字符形成的新字符串。</p><p>当开始的索引为0，结束的索引为字符串的最大索引+1时，这种情况可以直接忽略。</p><p><img src=\"https://static001.geekbang.org/resource/image/1e/6b/1ec2e7100f30b0ea4c687d7c962b0d6b.jpg?wh=2865x2331\" alt=\"\"></p><p>我们趁热打铁，通过下面的测试输出练习一下，看看结果是什么样的。</p><pre><code class=\"language-python\">str=\"abcdefg\"\nprint(str[1:])\nprint(str[:5])\nprint(str[1:5])\nprint(str[-4:])\nprint(str[-2:-6])\nprint(str[::-1])\n</code></pre><h4>3. List（列表）</h4><p>那如果我们想把多个元素排放在一起该用什么表示呢？举个例子，彩虹的颜色有赤橙黄绿青蓝紫，应该用什么数据类型表示呢？这时候我们就要用到一个新的数据结构——列表。</p><p>在Python中，我们可以用一对方括号把元素放在一起，元素之间用逗号分隔就像下面这样。</p><p>[“赤”,“橙”,“黄”,“绿”,“青”,“蓝”,“紫”]</p><p>这样，一个列表就出现了。列表中的每个值都有对应的位置值，我们也称之为索引，第一个索引是 0，第二个索引是 1，依此类推。</p><p>列表的数据项不需要是相同的类型。举几个例子：</p><pre><code class=\"language-python\">list1 = ['Google', 'baidu', 1997, 2000]\nlist2 = [1, 2, 3, 4, 5 ]\nlist3 = [\"a\", \"b\", \"c\", \"d\"]\n</code></pre><p>前面我们举的彩虹那个例子里，数据结构图和代码是后面这样。<br>\n<img src=\"https://static001.geekbang.org/resource/image/31/56/3100371359f372893a6991b3fe3d0756.jpg?wh=1990x829\" alt=\"\"></p><pre><code class=\"language-python\">#!/usr/bin/Python3\n\nlist&nbsp;=&nbsp;['red',&nbsp;'green',&nbsp;'blue',&nbsp;'yellow',&nbsp;'white',&nbsp;'black']\nprint(&nbsp;list[0]&nbsp;)\nprint(&nbsp;list[1]&nbsp;)\nprint(&nbsp;list[2]&nbsp;)\n#更新元素\nlist[2]='pink'\nprint(list[2]&nbsp;)\nprint (\"原始列表 : \", list)\ndel list[2]\nprint (\"删除后 : \", list)\nprint('red' in list)\n</code></pre><h4>4. Tuple（元组）</h4><p>Python 的元组与列表类似，不同之处在于，元组的元素不能修改。元组使用的是小括号&nbsp;<code>( )</code>，列表使用的是方括号 <code>[ ]</code>。</p><p>要创建元组也很简单，只需要在括号中添加元素，并用逗号隔开即可。</p><pre><code class=\"language-python\">tup&nbsp;=&nbsp;(1,&nbsp;2,&nbsp;3,&nbsp;4,&nbsp;5&nbsp;)\n</code></pre><p>通常，元组用来存储一组相关的信息，例如它可以存储纬度和经度。</p><pre><code class=\"language-python\">location = (13.4125, 103.866667)\nprint(\"Latitude:\", location[0])\nprint(\"Longitude:\", location[1])\n</code></pre><h4>5. Set（集合）</h4><p>集合是一个包含唯一元素的，可变和无序的集合数据类型。集合的一个用途是快速删除列表中的重复项。当我们想要表述一组不能重复的数据时，就可以用到集合。</p><pre><code class=\"language-python\">fruits&nbsp;=&nbsp;{'apple',&nbsp;'orange',&nbsp;'apple',&nbsp;'pear',&nbsp;'orange',&nbsp;'banana'}\n&gt;&gt;&gt;&nbsp;print(fruits)&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# 这里演示的是去重功能\n{'orange',&nbsp;'banana',&nbsp;'pear',&nbsp;'apple'}\n&gt;&gt;&gt;&nbsp;'orange'&nbsp;in&nbsp;fruits &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;# 快速判断元素是否在集合内\nTrue\n&gt;&gt;&gt;&nbsp;'crabgrass'&nbsp;in&nbsp;fruits\nFalse\n</code></pre><h4>6. Dictionary（字典）</h4><p>字典是可变数据类型，其中存储的是唯一键到值的映射。</p><p>字典的每个键值对&nbsp;key-value&nbsp;用冒号 “:” 分隔，每个对之间用逗号分隔，整个字典被放在花括号&nbsp;{}&nbsp;中，格式如下。</p><pre><code class=\"language-plain\">d = {key1 : value1, key2 : value2, key3 : value3 }\n</code></pre><p>举个例子，我们用字典来表示一下张三同学的个人信息。</p><pre><code class=\"language-python\">zhangsan={\n  \"name\":\"zhangsan\",\n  \"age\":\"17\",\n  \"height\":\"180\",\n  \"weight\":\"80kg\"\n}\n#给字典添加元素\nzhangsan[\"city\"]=\"BeiJing\"\n#获取字典的元素\nprint(zhangsan.get(\"age\"))\n</code></pre><h3>数据类型的判断和转换</h3><p>数据类型的判断，主要用于对未知数值的数据类型不确时，我们需要判断数据类型之后才能对值进行处理，那怎么让Python告诉我们呢？</p><p>我们可以借助 <code>type()</code> 检查元素是什么数据类型。</p><pre><code class=\"language-python\">&gt;&gt;&gt; type(4)\nint\n&gt;&gt;&gt; type(3.7)\nfloat\n&gt;&gt;&gt; type('this')\nstr\n&gt;&gt;&gt; type(True)\nbool\n&gt;&gt;&gt; type(123)\n&lt;class 'int'&gt;\n&gt;&gt;&gt; type(12.3)\n&lt;class 'float'&gt;\n&gt;&gt;&gt; type(\"abc\")\n&lt;class 'str'&gt;\n&gt;&gt;&gt; type([1,2,3])\n&lt;class 'list'&gt;\n&gt;&gt;&gt; type((1,2,3))\n&lt;class 'tuple'&gt;\n&gt;&gt;&gt; type({1,2,3})\n&lt;class 'set'&gt;\n&gt;&gt;&gt; type({'a':123})\n&lt;class 'dict'&gt;\n</code></pre><p>好了，掌握了判断数据类型的方法之后，我们再一起来学习一下数据类型的转换。数据转换在日常开发中使用频次也是非常高的，我们先来了解一下隐式类型转换和显示类型转换。</p><h4>隐式类型转换</h4><p>我们对两种不同类型的数据做运算，例如整数类型和浮点型运算，这时候我们需要把整数转换为浮点型，避免数据丢失。</p><h4>显式类型转换</h4><p>在显式类型转换中，用户会将对象的数据类型转换为所需的数据类型。<strong>我们使用 int()、float()、str() 等预定义函数来执行显式类型转换。</strong></p><pre><code class=\"language-python\">int() 强制转换为整型：\nx = int(1)   # x 输出结果为 1\ny = int(2.8) # y 输出结果为 2\nz = int(\"3\") # z 输出结果为 3\n#float() 强制转换为浮点型：\nx = float(1)     # x 输出结果为 1.0\ny = float(2.8)   # y 输出结果为 2.8\nz = float(\"3\")   # z 输出结果为 3.0\nw = float(\"4.2\") # w 输出结果为 4.2\n#str() 强制转换为字符串类型：\nx = str(\"s1\") # x 输出结果为 's1'\ny = str(2)    # y 输出结果为 '2'\nz = str(3.0)  # z 输出结果为 '3.0'\n</code></pre><p>如果前面的int()、float()、str() 是预定义函数，那下面三个（list，set，dict）是哪一类呢？下面我们一起来看一下。</p><p>list()：将序列转换为一个列表。list()可以将字符串、元组、字典、集合转化为列表。</p><pre><code class=\"language-python\">&gt;&gt;&gt; list('abc')\n['a', 'b', 'c']\n&gt;&gt;&gt; list((1,2,3))\n[1, 2, 3]\n&gt;&gt;&gt; list({1,2,3})\n[1, 2, 3]\n&gt;&gt;&gt; list({'a':1,'b':2})\n['a', 'b']\n</code></pre><p>set()：转换为可变集合。可以将字符串、列表、元组、字典转化为集合。</p><pre><code class=\"language-python\">&gt;&gt;&gt; set('abc')\n{'c', 'b', 'a'}\n&gt;&gt;&gt; set([1,2,3])\n{1, 2, 3}\n&gt;&gt;&gt; set((1,2,3))\n{1, 2, 3}\n&gt;&gt;&gt; set({'a':1,'b':2})\n{'b', 'a'}\n</code></pre><p>dict()：创建一个字典。字典必须是一个（key, value）元组序列。</p><pre><code class=\"language-python\">&gt;&gt;&gt;dict()&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# 创建空字典\n{}\n&gt;&gt;&gt; dict(a='a', b='b', t='t')#传入关键字\n{'a': 'a', 'b': 'b', 't': 't'}\n\n#传入2个元素的元组列表，元组的第一个元素代表key,第二个元素代表value\n&gt;&gt;&gt; dict([('one', 1), ('two', 2)])&nbsp;\n{'two': 2, 'one': 1}\n</code></pre><p>list、dict、set都属于可变数据类型，它们的内容可以随着函数的执行发生变化，而不可变数据类型的则不行。</p><p>了解了Python的6种基本数据类型之后，我们就可以用Python来编写代码了。</p><h2>Python的脚本语言</h2><p>Python编程的功能十分强大，我们要由浅入深地学习。我们先来看一个Python最基本的功能：用Python进行运算。</p><h3>Python 运算符</h3><p>常用的运算符大致可以分为算术运算符、赋值、比较和逻辑运算符、二进制与位运算符还有其它运算符。</p><h4>算术运算符</h4><p>算术运算符，顾名思义，就是在程序中进行数字运算，有加、减、乘、除等，通过运算求得结果。你可以对照后面例子看一下。</p><pre><code class=\"language-python\">&gt;&gt;&gt;&nbsp;5&nbsp;+&nbsp;4&nbsp;&nbsp;# 加法\n9\n&gt;&gt;&gt;&nbsp;4.3&nbsp;-&nbsp;2&nbsp;# 减法\n2.3\n&gt;&gt;&gt;&nbsp;3&nbsp;*&nbsp;7&nbsp;&nbsp;# 乘法\n21\n&gt;&gt;&gt;&nbsp;2&nbsp;/&nbsp;4&nbsp;&nbsp;# 除法，得到一个浮点数\n0.5\n&gt;&gt;&gt;&nbsp;2&nbsp;//&nbsp;4&nbsp;# 除法，得到一个整数\n0\n&gt;&gt;&gt;&nbsp;17&nbsp;%&nbsp;3&nbsp;# 取余\n2\n&gt;&gt;&gt;&nbsp;2&nbsp;**&nbsp;5&nbsp;# 乘方\n32\n</code></pre><p>现在，让我们尝试用 Python 进行简单的运算。假设我的语文成绩是86，数学成绩是72，英语成绩是90，那么三科的平均分是多少呢？</p><p>计算过程如下，是不是挺简单的？</p><pre><code class=\"language-python\">print((86+72+90)/3)\n&gt;&gt;&gt;82.6666666666667\n</code></pre><h4>赋值与比较</h4><p>在给变量命名时，变量名称的命名方式是全部使用小写字母，并用下划线区分单词。</p><p>我们来看看后面的命名方式是否正确。</p><pre><code class=\"language-python\">my height = 58\nMYLONG = 40\nMyLat = 105\n</code></pre><p>很明显，前面例子是不太建议采用的，正确的命名方式如下。</p><pre><code class=\"language-python\">my_height = 58\nmy_lat = 40\nmy_long = 105\n</code></pre><p>多个变量同时赋值时，代码如下。</p><pre><code class=\"language-python\">x = 3\ny = 4\nz = 5\n#等同于\nx, y, z = 3, 4, 5 \n</code></pre><p>我们再来看下赋值运算符。</p><p><img src=\"https://static001.geekbang.org/resource/image/8f/cb/8fa5c0d7b40459fcf58a01dd157229cb.jpg?wh=3074x2134\" alt=\"\"></p><p>示例如下，你也可以自己出题来练习。</p><pre><code class=\"language-python\">a=5\na+=10\nprint(a) #15\nb=10\nb-=1\nprint(b) #9\nc=2\nc*=7\nprint(c) #14\nd=10\nd/=5\nprint(d) #2\ne=13\ne%=5\nprint(e) #3\nf=3\nf**=2\nprint(f) #9\ng=17\ng//=5\nprint(g) #3\n</code></pre><p>再来看变量的比较。<br>\n<img src=\"https://static001.geekbang.org/resource/image/18/d0/185d221c04e84c3846d6f3c7e5d484d0.jpg?wh=3364x1727\" alt=\"\"></p><p>示例如下，你也可以试着自己做做练习。</p><pre><code class=\"language-python\">print(3&gt;5) \n&gt;&gt;&gt; False\na=3\nb=3\nprint(a == b)\n&gt;&gt;&gt; True\nc=2\nprint(a &gt;= c) \n&gt;&gt;&gt; True\n</code></pre><h4>二进制与位运算符*</h4><p>二进制与位运算符的规则如下。</p><p><img src=\"https://static001.geekbang.org/resource/image/ff/37/ff12df195094686d1141dedc8c2a7037.jpg?wh=3733x1807\" alt=\"\"></p><h4>其它运算符与优先级问题</h4><p>我们学数学都知道乘法优先于加减法。那么在同时有很多个运算符号的情况下，Python的处理顺序是什么样的呢？</p><p>总体顺序如下。其中，身份运算符、成员运算符和逻辑运算符等一下我们会讲到。</p><p><img src=\"https://static001.geekbang.org/resource/image/e0/17/e0b8f2b5e8283a1fe86015bc2e940017.jpg?wh=3529x2186\" alt=\"\"></p><p>按照这个优先级规则，我们通过下面的练习来体会一下执行过程。</p><pre><code class=\"language-python\">a = 20\nb = 10\nc = 15\nd = 5\n \ne = (a + b) * c / d       #( 30 * 15 ) / 5\nprint \"(a + b) * c / d 运算结果为：\",  e\n \ne = ((a + b) * c) / d     # (30 * 15 ) / 5\nprint \"((a + b) * c) / d 运算结果为：\",  e\n \ne = (a + b) * (c / d);    # (30) * (15/5)\nprint \"(a + b) * (c / d) 运算结果为：\",  e\n \ne = a + (b * c) / d;      #  20 + (150/5)\nprint \"a + (b * c) / d 运算结果为：\",  e\n&gt;&gt;&gt;\n(a + b) * c / d 运算结果为： 90\n((a + b) * c) / d 运算结果为： 90\n(a + b) * (c / d) 运算结果为： 90\na + (b * c) / d 运算结果为： 50\n</code></pre><p>不过，虽然 Python 运算符有优先顺序，但我仍然不建议你过分依赖它，因为这会降低程序的可读性。所以在写代码时，我们尽量不要让表达式太复杂。如果表达式确实很复杂，你可以把它分成几个步骤。尝试不依赖优先级规则，而是使用“()”来控制表达式的执行顺序。</p><h3>控制流</h3><p>当我们使用Python语言编写程序时，根据一些实际业务需求，就需要改变语句流的执行顺序，这时候就离不开Python的控制流语句，来控制代码执行的逻辑，这就是我们下面要讲的控制流语句。</p><h4>条件控制 if</h4><p>我们先通过浅显易懂的伪代码来体会一下if语句的用法。</p><p>现在假设我们要给同学们分组，会唱歌的同学到第一组练习唱歌，会跳舞的同学到第二组练习跳舞，这两个都不会的同学在座位上写作业。</p><pre><code class=\"language-python\">if 会唱歌:\n    练习唱歌\nelif 会跳舞:\n    练习跳舞\nelse \n    在座位上写作业\n</code></pre><p>通过伪代码，相信你对这个用法已经理解了。我们再练习巩固一下，假设有a，b两个数字，请你用Python打印出他们的大小关系。</p><p>建议你自行尝试后，再对照后面的参考答案。</p><pre><code class=\"language-python\">a=3\nb=5\n\nif a&lt;b:\n    print(\"a&lt;b\")\nelif a==b:\n    print(\"a==b\")\nelse:\n    print(\"a&gt;b\")\n</code></pre><p>除了比较大小，条件判断也很常用，我画了一张表格帮你梳理相关运算符。</p><p><img src=\"https://static001.geekbang.org/resource/image/0f/27/0fedc83859b5a2072ec0e218cbc0b227.jpg?wh=3733x1980\" alt=\"\"></p><p>其中，and、or、not是逻辑运算符，in、not in是成员运算符，is、is not是身份运算符。下面我们看看相应的例子。</p><p><strong>先来看逻辑运算符 and、or 和 not。</strong></p><pre><code class=\"language-python\">a=True\nb=False\nprint(a and b)\nprint(a or b)\nprint(not a)\n</code></pre><p>举个例子，现在小明要参加高考，那么他能考上什么学校呢？</p><pre><code class=\"language-python\">xiaoming={\n  \"hukou\":\"Beijing\",   #北京户口\n  \"score\":400,         #考了400分\n  \"type\":\"特长生\",      #是特长生\n  \"shenfen\":\"校长的儿子\" #校长的儿子\n}\nif(xiaoming.get(\"score\")&gt;=600 or xiaoming.get(\"type\")==\"特长生\" ):\n    print(\"小明可以上985\")\nelif(xiaoming.get(\"hukou\")==\"BeiJing\" and xiaoming.get(\"score\")&gt;=480):\n    print(\"小明可以上清华\")\nelif(xiaoming.get(\"score\")&gt;=480):\n    print(\"小明可以上本科\")\nelif(xiaoming.get(\"score\")&gt;=200):\n    print(\"职业技术学院欢迎您！\")     \nelif(not xiaoming.get(\"shenfen\")==\"校长的儿子\"):\n    print(\"挖掘机技术哪家强，中国山东找蓝翔！\")        \n</code></pre><p>我们一起梳理一下这个例子。首先我们知道了小明的信息：“hukou”:“Beijing”、“score”:400、“type”:“特长生”、“shenfen”:“校长的儿子”。</p><p>下面的if语句主要根据多个条件来判断小明是否满足上大学的要求。第一个if，如果小明的分数大于等于600，或者小明是特长生，那就可以上985，两个条件满足一个即可。接下来的几层判断也是一样的逻辑。</p><p><strong>再来看下成员运算符 in 和 not in。</strong>成员运算符用于判断序列中有没有某个元素，比如数组中有没有数字10？</p><p>你也可以仿照下面这个例子练习一下。</p><pre><code class=\"language-python\">a = 1\nb = 22\nlist = [10, 12, 22, 41, 1 ];\n \nif ( a in list ):\n   print \"列表list中有a\"\nelse:\n   print \"列表list中不包含a\"\n \nif ( b not in list ):\n   print \"b不在列表list里面\"\nelse:\n   print \"b在列表list中\"\n&gt;&gt;&gt;\n1 - 列表list中有a\n2 - b在列表list中\n</code></pre><p><strong>最后，我们再看看身份运算符 is 和 is not。</strong></p><p>身份运算符用来判断两个变量的内存地址是否一致。==用于判断数值是否相等。</p><p>我们再来做个小练习。</p><pre><code class=\"language-python\">data1 = '2'\ndata2 = '2'\n \nif ( data1 is data2 ):\n   print(\"data1和data2包含相同的元素\")\nelse:\n   print(\"data1和data2不包含相同的元素\")\n \nif ( data1 is not data2 ):\n   print(\"data1和data2不包含相同的元素\")\nelse:\n   print(\"data1和data2包含相同的元素\")\n \n&gt;&gt;&gt;\n//data1和data2包含相同的元素\n//data1和data2包含相同的元素\n</code></pre><h4>循环语句 for 和 while</h4><p>当我们要重复地把一件事做好几次，比如我要洗10件衣服，做4个菜，在代码中，就叫做循环。我们最常用的循环语句就是for循环和while循环。</p><h4>1. for循环</h4><p>循环语句for用来遍历可迭代对象，<strong>可迭代对象是每次可以返回其中一个元素的对象，包括列表、元组、字典、字符串和集合。</strong></p><p>在for循环语句中，break表示终止循环，continue表示跳过循环的一次迭代。</p><pre><code class=\"language-python\">list=[1,2,3,4,5]\n#打印数组的每个元素\nfor l in list:\n    print(l)\n#打印数组的每个元素，如果当前元素是3就退出循环\nfor l in list:\n    print(l)\n    if l == 3 :\n        print(\"退出循环\")\n        break;\n\n#求数组中的奇数和                \nsum = 0\nfor l in list:\n    if l%2 == 0:\n        print(\"当前元素是偶数，不加它，看下一个\")\n        continue;\n     else:\n         sum+=l\n</code></pre><h4>2. while循环</h4><p>while 循环和 for 循环的区别是，for循环用于已知要循环几次的情况，而while是不知道要循环几次的。它只知道达到设定条件就要继续循环，不满足条件时就会停止循环。</p><p>和for循环一样，在while循环语句中，break表示终止循环， continue表示跳过循环的一次迭代。</p><pre><code class=\"language-python\">while 判断条件(condition)：\n    执行语句(statements)……\n</code></pre><p>下面是一个用while循环求1到100的和的示例。</p><pre><code class=\"language-python\">sum = 0\ncounter = 1\nwhile counter &lt;= 100:\n    sum = sum + counter\n    counter += 1\n\nprint(sum)\n</code></pre><h3>函数</h3><p>现在我们已经能初步写出代码了，但是如果有些代码要重复使用，比如我想给班里每个同学计算平均成绩，那是不是要每个同学都要算一遍呢?</p><p>举个例子。</p><pre><code class=\"language-python\">zhangsan= (75+85+60)/3\nlisi=(50+72+68)/3\nwangwu...\n</code></pre><p>这时候，我们还有一个更好的办法，那就是函数。</p><p><strong>函数是组织好的，可重复使用的，用来实现单一或相关联功能的代码段。</strong></p><p>我们先尝试定义一个求两数之中最大值的函数。</p><p>函数代码块以&nbsp;<strong>def</strong>&nbsp;关键词开头，后接函数标识符名称和圆括号&nbsp;<strong>()</strong>，括号里面是传入的参数。里面同一级别的代码块必须保持相同的缩进。</p><pre><code class=\"language-python\">def avg(chinese, math,english):\n    return chinese + math + english / 3\n    \nprint(avg(72, 83, 81))\n</code></pre><pre><code class=\"language-python\">#!/usr/bin/Python3\n \ndef max(a, b):\n    if a &gt; b:\n        return a\n    else:\n        return b\n \na = 4\nb = 5\nprint(max(a, b))                                       \n</code></pre><p>如果某个参数不传，可以使用我们设定好的默认值。比如下面的例子，在参数不传递的情况下我们默认年龄是35。</p><pre><code class=\"language-python\">def printinfo( name, age = 35 ):\n   print (\"名字: \", name)\n   print (\"年龄: \", age)\n   \nprintinfo(\"peter\")\n</code></pre><p>Python中还有一些已经定义好的函数，叫做内置函数。下面我们就来了解一些常用的内置函数。</p><h4>range() 函数</h4><p>用于创建不可变的数字序列。它有三个参数，必须都为整数，分别是“start，stop，step”。其中start默认等于0，step默认等于1。</p><p>range函数的表达式为：range(start=0,stop,step=1)。</p><p>举个实际的例子，range(4) 代表从0开始到4（不含）结束，间隔为1的所有元素。</p><pre><code class=\"language-python\">print(list(range(4)) #[0, 1, 2, 3]\n#从1开始到10结束，间隔为2的所有元素\nprint(list(range(1, 10, 2)) #[1, 3, 5, 7, 9]\n</code></pre><p>你可以使用&nbsp;<code>range</code>&nbsp;和&nbsp;<code>for</code>&nbsp;循环重复某个操作。</p><pre><code class=\"language-python\"># 循环3次输出\"Hello\"\nfor i in range(3):\n    print(\"Hello!\")\n</code></pre><h4>数学相关函数</h4><p>还有一些常用的数学函数，通过这些函数可以快速实现计算，帮我们告别冗杂的代码。</p><ul>\n<li>abs()：返回绝对值。</li>\n<li>divmod()：返回商和余数。</li>\n<li>round()：四舍五入。</li>\n<li>pow(a, b)：求a的b次幂, 如果有三个参数，则求完次幂后对第三个数取余。</li>\n<li>sum()：求和。</li>\n<li>min()：求最小值。</li>\n<li>max()：求最大值。</li>\n</ul><pre><code class=\"language-python\">print(abs(-5))&nbsp;&nbsp;#&nbsp;绝对值：5\nprint(divmod(13,2))&nbsp;#&nbsp;求商和余数：(6,1)\nprint(round(3.50))&nbsp;&nbsp;&nbsp;#&nbsp;五舍六入：3\nprint(round(3.51))&nbsp;&nbsp;&nbsp;#4\nprint(pow(5,2,3))&nbsp;&nbsp;#&nbsp;如果给了第三个参数，表示最后取余:1，整个计算过程是5**2%3取余\nprint(sum([1,2,3,4,5,6,7,8,9,10]))&nbsp;&nbsp;#&nbsp;求和：55\nprint(min(3,2,5,19,6,3))&nbsp;&nbsp;#求最小值：2\nprint(max(3,5,12,8,5,11))&nbsp;&nbsp;#求最大值：12                \n</code></pre><h4>进制相关函数</h4><p>Python进制转换函数是 Python中一种非常重要的函数，它可以帮助我们将进制之间的数字转换成另一个进制的数字。比如，将十进制转换成二进制，将十六进制转换成十进制等。下面我们来看几个应用。</p><p>bin(x)：将一个整数X转换成二进制字符串，以“0b”开头。</p><p>oct(x)：将一个整数X转换成八进制字符串，以“0o”开头。</p><p>hex(x)：将一个整数X转换成十六进制字符串，以“0x”开头。</p><pre><code class=\"language-python\">print(bin(10))&nbsp;&nbsp;#&nbsp;二进制:0b1010\nprint(hex(10))&nbsp;&nbsp;#&nbsp;十六进制:0xa\nprint(oct(10))&nbsp;&nbsp;#&nbsp;八进制:0o12\n</code></pre><h4>和数据结构相关的函数</h4><p>和数据结构相关的函数又主要分为两类：<strong>字符串相关的函数和可迭代对象相关的函数。</strong></p><p>我们先来看字符串相关的函数。</p><ul>\n<li>lower()，将字符串的所有字符都转换为小写字符。</li>\n</ul><pre><code class=\"language-python\">&gt;&gt;&gt; str1 = \"aaBBccEEff\"\n&gt;&gt;&gt; str1\n'aaBBccEEff'\n&gt;&gt;&gt; str1.lower()                  ## 将字符串中的所有字符都转换为小写字符\n'aabbcceeff'\n</code></pre><ul>\n<li>upper()，将字符串中所有字符都转换为大写字符。</li>\n</ul><pre><code class=\"language-python\">&gt;&gt;&gt; str1 = \"aaBBccEEff\"\n&gt;&gt;&gt; str1\n'aaBBccEEff'\n&gt;&gt;&gt; str1.upper()                ## 将字符串中的所有字符都转换为大写字母\n'AABBCCEEFF'\n</code></pre><ul>\n<li>count()，统计字符串中指定字符出现的次数。</li>\n</ul><pre><code class=\"language-python\">&gt;&gt;&gt; str1 = \"aabbaaccdddb\"\n&gt;&gt;&gt; str1.count(\"a\")               ## 统计指定字符在字符串中出现的次数\n4\n&gt;&gt;&gt; str1.count(\"a\", 3)             ## 从索引为3的位置检索\n2\n&gt;&gt;&gt; str1.count(\"a\", 0, 3)          ## 指定范围\n2\n</code></pre><ul>\n<li>startswith()，判断字符串是否以指定字符开头。</li>\n</ul><pre><code class=\"language-python\">&gt;&gt;&gt; str1 = \"abcd\"\n&gt;&gt;&gt; str1\n'abcd'\n&gt;&gt;&gt; str1.startswith(\"a\")            ## 判断字符串是否以指定字符开头\nTrue\n&gt;&gt;&gt; str1.startswith(\"x\")\nFalse\n</code></pre><ul>\n<li>endswith()，判断字符串是否以指定字符结尾。</li>\n</ul><pre><code class=\"language-python\">&gt;&gt;&gt; str1 = \"abcd\"\n&gt;&gt;&gt; str1\n'abcd'\n&gt;&gt;&gt; str1.endswith(\"d\")&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;## 判断字符串是否以指定字符结尾\nTrue\n&gt;&gt;&gt; str1.endswith(\"b\")\nFalse\n&gt;&gt;&gt; str1.endswith(\"b\", 0, 2)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;## 可以指定检索的范围\nTrue\n</code></pre><ul>\n<li>find()，查找字符串中指定的字符。</li>\n</ul><pre><code class=\"language-python\">&gt;&gt;&gt; str1 = \"abcderabed\"\n&gt;&gt;&gt; str1\n'abcderabed'\n&gt;&gt;&gt; str1.find(\"b\")           ## 查找字符串中的指定字符， 并返回索引\n1\n&gt;&gt;&gt; str1.find(\"d\")\n3\n&gt;&gt;&gt; str1.find(\"x\")           ## 当字符串中不存在该字符串时， 返回-1\n-1\n&gt;&gt;&gt; str1.find(\"b\", 3)        ## 可以指定查找的范围,从索引为3的字符开始向后查找\n7\n</code></pre><ul>\n<li>index()，返回字符串中指定字符的索引。</li>\n</ul><pre><code class=\"language-python\">&gt;&gt;&gt; str1 = \"abcderabed\"\n&gt;&gt;&gt; str1\n'abcderabed'\n&gt;&gt;&gt; str1.index(\"c\")                      ## 返回匹配的索引\n2\n&gt;&gt;&gt; str1.index(\"a\", 3)                   ## 可以指定查找的范围\n6\n&gt;&gt;&gt; str1.index(\"x\")                      ## 当字符串中不存在该字符时， 返回异常\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nValueError: substring not found\n</code></pre><ul>\n<li>replace()，将字符串中的字符替换为指定的字符。</li>\n</ul><pre><code class=\"language-python\">&gt;&gt;&gt; str1 = \"abcdabcdabcd\"\n&gt;&gt;&gt; str1.replace(\"a\", \"W\")             ## 将字符串中a替换为W\n'WbcdWbcdWbcd'\n&gt;&gt;&gt; str1.replace(\"a\", \"W\", 1)           ## 可以指定替换的次数\n'Wbcdabcdabcd'\n</code></pre><ul>\n<li>strip()，删除字符串两边的所有空白或者指定字符。</li>\n</ul><pre><code class=\"language-python\">&gt;&gt;&gt; test1 = \"  abc  \"\n&gt;&gt;&gt; test1.strip()              ## 删除字符串两边的空白\n'abc'\n&gt;&gt;&gt; test2 = \"xxyyyzzzx\"        ## 指定删除的字符\n&gt;&gt;&gt; test2.strip(\"x\")\n'yyyzzz'\n</code></pre><p>接下来我们再看下可迭代对象相关的函数。</p><p>我们前面讲过，列表、元组、字典、字符串和集合都是可迭代对象，所以这些数据类型都可以使用下面的函数。</p><ul>\n<li>len()，返回一个对象中的元素的个数。</li>\n</ul><pre><code class=\"language-python\">lst&nbsp;=&nbsp;[5,7,6,12,1,13,9,18,5]\nprint(lst.len())\n</code></pre><ul>\n<li>sort()&nbsp;/sorted()，对可迭代对象做排序操作。</li>\n</ul><pre><code class=\"language-python\">lst&nbsp;=&nbsp;[5,7,6,12,1,13,9,18,5]\nlst.sort()&nbsp;&nbsp;#&nbsp;sort是list里面的一个方法\nprint(lst)&nbsp;&nbsp;#[1,&nbsp;5,&nbsp;5,&nbsp;6,&nbsp;7,&nbsp;9,&nbsp;12,&nbsp;13,&nbsp;18]\nll&nbsp;=&nbsp;sorted(lst)&nbsp;#&nbsp;内置函数，返回给你一个新列表&nbsp;&nbsp;新列表是被排序的\nprint(ll)&nbsp;&nbsp;#[1,&nbsp;5,&nbsp;5,&nbsp;6,&nbsp;7,&nbsp;9,&nbsp;12,&nbsp;13,&nbsp;18]\nl2&nbsp;=&nbsp;sorted(lst,reverse=True)&nbsp;&nbsp;#倒序\nprint(l2)&nbsp;&nbsp;#[18,&nbsp;13,&nbsp;12,&nbsp;9,&nbsp;7,&nbsp;6,&nbsp;5,&nbsp;5,&nbsp;1]\n</code></pre><ul>\n<li>zip()：将可迭代的对象作为参数，将对象中对应的元素打包成一个元组，然后返回由这些元组组成的列表。如果各个迭代器的元素个数不一致，则返回的列表长度与最短的对象相同。</li>\n</ul><p>比如后面这个例子，通过for循环和zip方法，我们就完成了值的一一匹配。</p><pre><code class=\"language-python\">lst1&nbsp;=&nbsp;[a,&nbsp;b,&nbsp;c,&nbsp;d,&nbsp;e,&nbsp;f]\nlst2&nbsp;=&nbsp;['1',&nbsp;'2',&nbsp;'3',&nbsp;'4',&nbsp;'5',&nbsp;'6']\nlst3&nbsp;=&nbsp;['one',&nbsp;'two',&nbsp;'three',&nbsp;'four',&nbsp;'five',&nbsp;'six']\nprint(zip(lst1,&nbsp;lst1,&nbsp;lst3))&nbsp;&nbsp;#&lt;zip&nbsp;object&nbsp;at&nbsp;0x00000256CA6C7A88&gt;\nfor&nbsp;el&nbsp;in&nbsp;zip(lst1,&nbsp;lst2,&nbsp;lst3):\n&nbsp;&nbsp;&nbsp;&nbsp;print(el)\n#&nbsp;(a,&nbsp;'1',&nbsp;'one')\n#&nbsp;(b,&nbsp;'2',&nbsp;'two')\n#&nbsp;(c,&nbsp;'3',&nbsp;'three')\n#&nbsp;(d,&nbsp;'4',&nbsp;'four')\n#&nbsp;(e,&nbsp;'5',&nbsp;'five')\n#&nbsp;(f,&nbsp;'6',&nbsp;'six')\n</code></pre><ul>\n<li>filter()，用来筛选的函数，它的语法是：fiter(function, Iterable)。</li>\n</ul><p>在ﬁlter中，会自动的把iterable（可迭代对象）中的元素传递给function，然后根据function返回的True或者False来判断是否保留此项数据。</p><pre><code class=\"language-python\">def&nbsp;func(i):&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;判断奇数\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;i&nbsp;%&nbsp;2&nbsp;==&nbsp;1\nlst&nbsp;=&nbsp;[1,2,3,4,5,6,7,8,9]\nl1&nbsp;=&nbsp;filter(func,&nbsp;lst)&nbsp;&nbsp;#l1是迭代器\nprint(l1)&nbsp;&nbsp;#&lt;filter&nbsp;object&nbsp;at&nbsp;0x000001CE3CA98AC8&gt;\nprint(list(l1))&nbsp;&nbsp;#[1,&nbsp;3,&nbsp;5,&nbsp;7,&nbsp;9]\n</code></pre><ul>\n<li>map()，会根据提供的函数对指定序列做映射（lambda），它的语法是：map(function, iterable)。</li>\n</ul><p>我们可以对可迭代对象中的每一个元素进行映射，分别去执行 function。后面这个案例会让你对map有个全面的理解。</p><pre><code class=\"language-python\">def&nbsp;f(i):&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;return&nbsp;i\nlst&nbsp;=&nbsp;[1,2,3,4,5,6,7,]\nit&nbsp;=&nbsp;map(f,&nbsp;lst)&nbsp;#&nbsp;把可迭代对象中的每一个元素传递给前面的函数进行处理，处理的结果会返回成迭代器print(list(it))&nbsp;&nbsp;#[1,&nbsp;2,&nbsp;3,&nbsp;4,&nbsp;5,&nbsp;6,&nbsp;7]\n</code></pre><h3>引入模块</h3><p>在Python中模块的应用非常多，包括大量的第三方模块，以及自己封装好的模块。怎么引入模块呢？其实非常简单，我们只需要两步走：安装和引用。</p><p>先执行命令 <code>$ pip install + 要安装的第三方库名</code>，安装要用到的第三方库。</p><p>然后在自己的文件中引用，应用语句有import、from……import，下面来看一下详细的使用。</p><h4>import 语句</h4><p>想使用 Python 源文件，只需在另一个源文件里执行 import 语句即可，语法如下。</p><pre><code class=\"language-python\">import module1[, module2[,... moduleN]\n</code></pre><h4>from … import 语句</h4><p>Python 的 from 语句可以让你把一个指定的部分从模块中导入到当前命名空间里，语法如下。</p><pre><code class=\"language-python\">from modname import name1[, name2[, ... nameN]]\n</code></pre><p>例如，要导入模块 fibo 的 fib 函数，可以使用如下语句。</p><pre><code class=\"language-plain\">&gt;&gt;&gt; from fibo import fib, fib2\n&gt;&gt;&gt; fib(500)\n1 1 2 3 5 8 13 21 34 55 89 144 233 377\n</code></pre><h4>from … import * 语句</h4><p>当然，我们还可以把一个模块的所有内容全部导入到当前的命名空间，只需使用如下声明。</p><pre><code class=\"language-python\">from modname import *\n</code></pre><h2>总结</h2><p>恭喜你完成今天的学习，我们来做个总结。入门Python，首先要了解它的数据类型和脚本语言。</p><p>数据类型这部分是你必须要掌握的，这在我们编程应用时是最基础也是最核心的内容。我们需要明白不同数据类型的表达式、应用场景，结合实例来练习，你掌握的速度会更快。</p><p>在Python脚本语言应用模块，我们是从基本的运算符入手的。运算符可以为我们解决很多的运算需求，除去基本的算术运算符，逻辑运算符的使用也非常多。在后边的项目实现中，我们需要做大量的条件判断处理，这一定是离不开逻辑运算符的。同时你也要清晰掌握运算符的优先级，这样才能更加全面地应用运算符。</p><p>接着我们讲了控制流的应用。控制流和逻辑运算的差异在于，控制流是应用在更上层领域的，它的判断条件是多样的，涉及的应用更全面。只有学会应用控制流，你才能写出逻辑更加清晰的程序。</p><p>到了函数模块，我们可以将整体切割成两大类，一类是自定义函数，另一类是内置函数。自定义函数完全根据功能需求来自定义名称、参数、方法，更加灵活。内置函数，就像“工具”一样，我们不需要再自己从0编写逻辑和实现过程，直接用现成的即可，这可以大大提升我们的开发效率。</p><p>这节课我们主要学习了Python的基础部分，带你入门。不过如果想让自己对Python不仅仅停留在之前的概念阶段，在课后一定要自己动手去练习，让自己掌握得更加扎实。</p><p>下节课我们要学习Python的高阶部分，一起来揭晓Python的数据分析利器，学习我们在项目开发中常用的框架。所以，下节课一定不能错过，让我们持续探索Python的奥秘吧！</p><h2>思考题</h2><p>学完这节课，请你思考下面这个问题。你知道Python内置函数split和replace有什么区别吗？</p><p>欢迎你在评论区留下你的看法，我们下节课见！</p>","neighbors":{"left":{"article_title":"开篇词｜打通前后端技术，玩转视频平台","id":652050},"right":{"article_title":"02｜初识Python（下）：入门Python你应该怎么做？","id":652736}},"comments":[{"had_liked":false,"id":373467,"user_name":"安静点","can_delete":false,"product_type":"c1","uid":1740680,"ip_address":"广东","ucode":"9598650FD71F23","user_header":"https://static001.geekbang.org/account/avatar/00/1a/8f/88/3814fea5.jpg","comment_is_top":false,"comment_ctime":1682551676,"is_pvip":false,"replies":[{"id":136397,"content":"阐述的非常准确，为你点赞\n","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1682565835,"ip_address":"北京","comment_id":373467,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"split是可以根据指定字符来将字符串拆分成一个列表，\n而replace则是替换指定字符串为想要的字符","like_count":3,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":616065,"discussion_content":"阐述的非常准确，为你点赞\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1682565835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373440,"user_name":"cronusqiu","can_delete":false,"product_type":"c1","uid":1473237,"ip_address":"福建","ucode":"0B5EB56F5B8AD8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIpb7LbMtLNqTYdB04tx47liaZicib9Fy0P1iatp5BEayaiahJUrm6JZaVxSQZIicufrY568GpcuGmOTcVg/132","comment_is_top":false,"comment_ctime":1682511469,"is_pvip":false,"replies":[{"id":136399,"content":"感谢你的建议，是的，更加体系还的架构，也是对于初学者或有经验的同学来说是非常重要的，因为这个课程是以实战驱动，先导部分就是帮需要补充基础的同学来回顾一下，以及一些学习方法的建议，也是需要大家在课后自己去花一些时间持续联系的，感谢你的建议，我们继续加油","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1682566088,"ip_address":"北京","comment_id":373440,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"我用 Python 也有个5+年了，深刻感觉Python其实关键的还是在于项目的管理，例如 isort &#47; flake8 &#47; black ，mypy, pylint， unittest, coverage 这些工具的使用， tox工具, setuptools的使用， 遇到很多使用python好几年的，这些工具有些都没听说过， 既然是做项目，这方面感觉可以出一篇详解。看网上一堆教程，都是先教你基础知识，然后中间件，之后各种框架。基本没有人系统的介绍过这些管理工具。。。","like_count":3,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":616067,"discussion_content":"感谢你的建议，是的，更加体系还的架构，也是对于初学者或有经验的同学来说是非常重要的，因为这个课程是以实战驱动，先导部分就是帮需要补充基础的同学来回顾一下，以及一些学习方法的建议，也是需要大家在课后自己去花一些时间持续联系的，感谢你的建议，我们继续加油","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1682566088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373299,"user_name":"贾维斯Echo","can_delete":false,"product_type":"c1","uid":2820504,"ip_address":"上海","ucode":"BB8C507E46A9E5","user_header":"https://static001.geekbang.org/account/avatar/00/2b/09/98/397c2c81.jpg","comment_is_top":false,"comment_ctime":1682348293,"is_pvip":true,"replies":[{"id":136353,"content":"每周一、三、五各更新一篇，我们一起实战起来","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1682384824,"ip_address":"北京","comment_id":373299,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"课程一般一周几更?啥时候更,快更新,我要看后面的","like_count":3,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":615671,"discussion_content":"每周一、三、五各更新一篇，我们一起实战起来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1682384824,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":392550,"user_name":"张申傲","can_delete":false,"product_type":"c1","uid":1182372,"ip_address":"北京","ucode":"22D46BC529BA8A","user_header":"https://static001.geekbang.org/account/avatar/00/12/0a/a4/828a431f.jpg","comment_is_top":false,"comment_ctime":1721207605,"is_pvip":false,"replies":[{"id":143256,"content":"欢迎你的加入，这么课程就是带领初学者，从0到1搭建自己的Python项目体系","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1727424112,"ip_address":"北京","comment_id":392550,"utype":1}],"discussion_count":1,"race_medal":2,"score":2,"product_id":100546501,"comment_content":"第一讲打卡~\nPython对于初学者来说还是很友好的，基础语法上手很快~","like_count":1,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":651781,"discussion_content":"欢迎你的加入，这么课程就是带领初学者，从0到1搭建自己的Python项目体系","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1727424113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376791,"user_name":"Geek_7cc417","can_delete":false,"product_type":"c1","uid":2610557,"ip_address":"广东","ucode":"89DD57A32188B4","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJQYnrTXgWggD3KV8scrKpdupicFibhFzIAenfrBHaMwxibksHzFVaJU3VPTsmiaXfXWZ84FIQYbjCZA/132","comment_is_top":false,"comment_ctime":1687416827,"is_pvip":false,"replies":[{"id":137377,"content":"你好，很开心收到你的认可，也为你在大三学年就有拓展学习的想法点赞。整个平台的实现用到前后端分离模式，主要需要一些前端基础和Python的预言基础，这一部分在课程中我都有分享对应自己打基础的方法，比较系统化的，如果你对项目比较感兴趣，我觉得是不错的选择，在整个学习过程中遇到问题可以及时留言，我会为你解答，并且课程的有效期也比较长，你可以反复学习，相信通过慢慢的吸收，和项目实践，你能够最终学有所获。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1687683230,"ip_address":"北京","comment_id":376791,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"请问作者，我阅读前篇以后，很想购买这个课程，我现在大三，说实话基础没有很好很牢固，想问下学习这门课程要做出这个在线直播平台，需要提前有什么基础吗？有推荐的学习基础的链接吗？我真的很想学完这个课程可以做出这个直播平台，很感兴趣！但是怕基础不够，听不懂","like_count":1,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":621831,"discussion_content":"你好，很开心收到你的认可，也为你在大三学年就有拓展学习的想法点赞。整个平台的实现用到前后端分离模式，主要需要一些前端基础和Python的预言基础，这一部分在课程中我都有分享对应自己打基础的方法，比较系统化的，如果你对项目比较感兴趣，我觉得是不错的选择，在整个学习过程中遇到问题可以及时留言，我会为你解答，并且课程的有效期也比较长，你可以反复学习，相信通过慢慢的吸收，和项目实践，你能够最终学有所获。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1687683230,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":388379,"user_name":"名","can_delete":false,"product_type":"c1","uid":2422120,"ip_address":"广东","ucode":"B68EF9B692C02C","user_header":"https://static001.geekbang.org/account/avatar/00/24/f5/68/66ce1b44.jpg","comment_is_top":false,"comment_ctime":1710077099,"is_pvip":false,"replies":[{"id":142620,"content":"非常正确，继续保持，重点把项目实操的部分要完成","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1720771663,"ip_address":"北京","comment_id":388379,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"split 是拆分，replace  是替换，还有个 join 是添加","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":647913,"discussion_content":"非常正确，继续保持，重点把项目实操的部分要完成","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1720771663,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":384006,"user_name":"Geek_ffc","can_delete":false,"product_type":"c1","uid":2949801,"ip_address":"广东","ucode":"EFB903203FC4A4","user_header":"","comment_is_top":false,"comment_ctime":1700096616,"is_pvip":false,"replies":[{"id":140261,"content":"是的 这个是内置函数。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1700999234,"ip_address":"北京","comment_id":384006,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"list没有len方法吧。获取list长度用的是内置函数len()","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":632570,"discussion_content":"是的 这个是内置函数。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1700999234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":377755,"user_name":"BigData～兰兴星","can_delete":false,"product_type":"c1","uid":2275664,"ip_address":"北京","ucode":"2D0CF9BCFF2493","user_header":"https://static001.geekbang.org/account/avatar/00/22/b9/50/30eea9a0.jpg","comment_is_top":false,"comment_ctime":1689151701,"is_pvip":false,"replies":[{"id":137663,"content":"感谢同学！在Python 3中，print语句已经被改为函数，而Python 2中它是一个语句。文稿放置错误，我给更新一下文稿。继续多多实践，我们一起加油！","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1689171896,"ip_address":"北京","comment_id":377755,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"文中运算符 is 和 is not的代码示例有两处不足之处，python 3的解释器对  ~~print &quot;data1和data2不包含相同的元素&quot;  ~~ 不支持，应添加（），即print (&quot;data1和data2不包含相同的元素&quot;) ，另外代码的运行结果是不是弄错了，应该是data1和data2不包含相同的元素","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":623217,"discussion_content":"感谢同学！在Python 3中，print语句已经被改为函数，而Python 2中它是一个语句。文稿放置错误，我给更新一下文稿。继续多多实践，我们一起加油！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1689171896,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376613,"user_name":"zgy","can_delete":false,"product_type":"c1","uid":1387798,"ip_address":"上海","ucode":"05EA6845199250","user_header":"https://static001.geekbang.org/account/avatar/00/15/2d/16/b525a71d.jpg","comment_is_top":false,"comment_ctime":1687083230,"is_pvip":false,"replies":[{"id":137318,"content":"在Python 3.11.4版本中,list确实具有len属性，不应该出现AttributeError: &#39;list&#39; object has no attribute &#39;len&#39;这个错误,可能是你使用方法上的问题，因为不知道你具体写法，你可以通过访问对象的属性来获取其长度，例如list.len，尝试一下，有问题可以再追评。\n","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1687238672,"ip_address":"北京","comment_id":376613,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"list 使用 len 方法提示错误 AttributeError: &#39;list&#39; object has no attribute &#39;len&#39;，我用的是 python 3.11.4 window电脑","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":621445,"discussion_content":"在Python 3.11.4版本中,list确实具有len属性，不应该出现AttributeError: &#39;list&#39; object has no attribute &#39;len&#39;这个错误,可能是你使用方法上的问题，因为不知道你具体写法，你可以通过访问对象的属性来获取其长度，例如list.len，尝试一下，有问题可以再追评。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1687238672,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1387798,"avatar":"https://static001.geekbang.org/account/avatar/00/15/2d/16/b525a71d.jpg","nickname":"zgy","note":"","ucode":"05EA6845199250","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":621457,"discussion_content":"python 版本3.11.4，mac 电脑。代码如下：\nl = [1,2,3,4];\nprint(l.__len__()); # 4\nprint(l.len()) # 报错 AttributeError: &#39;list&#39; object has no attribute &#39;len&#39; \nprint(len(l)) # 4 \n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1687244188,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":375020,"user_name":"ZENG","can_delete":false,"product_type":"c1","uid":1136797,"ip_address":"广东","ucode":"4F9A006DA78074","user_header":"https://static001.geekbang.org/account/avatar/00/11/58/9d/91d795cf.jpg","comment_is_top":false,"comment_ctime":1684811125,"is_pvip":false,"replies":[{"id":136901,"content":"回答的非常准确，感谢的你实践与分享，保持住好的学习习惯，我们一起加油。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1684987192,"ip_address":"北京","comment_id":375020,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"s = &quot;Python,Web,Web,Course&quot;\nprint(s.split(&quot;,&quot;, 1))                       # 输出：[&#39;Python&#39;, &#39;Web,Web,Course&#39;]\nprint(s.replace(&quot;Web&quot;, &quot;dev&quot;, 1))   # 输出：Python,dev,Web,Course\n\n\nsplit 指定某个字符进行分割，返回一个列表，还可以指定分割几次\nreplace 是返回一个新的字符串，用指定的字符替换，也可以指定替换几次\n\n\nsplite","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":619326,"discussion_content":"回答的非常准确，感谢的你实践与分享，保持住好的学习习惯，我们一起加油。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1684987192,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373791,"user_name":"墨色","can_delete":false,"product_type":"c1","uid":2922820,"ip_address":"北京","ucode":"6832774C58B009","user_header":"https://static001.geekbang.org/account/avatar/00/2c/99/44/b0f3a2cc.jpg","comment_is_top":false,"comment_ctime":1683170923,"is_pvip":false,"replies":[{"id":136586,"content":"稍后刷新一下，就可以看到更新后的，感谢提醒。\n","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1683254764,"ip_address":"北京","comment_id":373791,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100546501,"comment_content":"数学相关的函数divmod不是divmode","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":617004,"discussion_content":"稍后刷新一下，就可以看到更新后的，感谢提醒。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683254765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373455,"user_name":"nuan","can_delete":false,"product_type":"c1","uid":2905523,"ip_address":"北京","ucode":"55FF98EB85404D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIDqHQQByGiaXcAk94MdDn3ftupZLXyR6bAKibxOzMxy5h3uBwZ7QiaCiaIfbCMK0cIQfGNax8iawoiaQAg/132","comment_is_top":false,"comment_ctime":1682520107,"is_pvip":true,"replies":[{"id":136390,"content":"在企业项目开发中，对于变量定义，编码格式都有严格的要求，对于不好的命名方式，我们尽量不要应用，当然也不能说它是错误的，","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1682561966,"ip_address":"北京","comment_id":373455,"utype":1}],"discussion_count":1,"race_medal":1,"score":3,"product_id":100546501,"comment_content":"MYLONG = 40\nMyLat = 105\n这两个变量命名没有错误吧，只能说是“不是好的命名方式”","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":616046,"discussion_content":"在企业项目开发中，对于变量定义，编码格式都有严格的要求，对于不好的命名方式，我们尽量不要应用，当然也不能说它是错误的，","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1682561966,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373380,"user_name":"peter","can_delete":false,"product_type":"c1","uid":1058183,"ip_address":"北京","ucode":"261C3FC001DE2D","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/87/f3a69d1b.jpg","comment_is_top":false,"comment_ctime":1682433454,"is_pvip":false,"replies":[{"id":136374,"content":"感谢支持和信任，安装成功之后你可以在anaconda prompt中运行，还是在windows开始菜单中找到anaconda prompt，然后就看到对应的窗口，你就可以练习了。当然你可以用成熟的开发工具，例如像VsCode 或者PyCharm来实现。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1682476374,"ip_address":"河北","comment_id":373380,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100546501,"comment_content":"我没有用过python，工作和直播也没有关系。老师是上市公司研发总监，大牛啊，就是冲着这个才学这门课的。\n\n问题： 我笔记本是win10，装了Anaconda，可以在Anaconda下面练习本课的pythno语法吗？装完Anaconda以后，在哪里输入命令，不太会用啊。\n","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":615860,"discussion_content":"感谢支持和信任，安装成功之后你可以在anaconda prompt中运行，还是在windows开始菜单中找到anaconda prompt，然后就看到对应的窗口，你就可以练习了。当然你可以用成熟的开发工具，例如像VsCode 或者PyCharm来实现。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1682476374,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"河北","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1473237,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIpb7LbMtLNqTYdB04tx47liaZicib9Fy0P1iatp5BEayaiahJUrm6JZaVxSQZIicufrY568GpcuGmOTcVg/132","nickname":"cronusqiu","note":"","ucode":"0B5EB56F5B8AD8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":615945,"discussion_content":"除非是做大数据或者语言相关的，anaconda太重量级了，官方的p Python 在 Windows系统下表现有很捉急。我一直使用 Miniconda3， 又轻量，又能解决Windows下各种问题。  环境变量配置好后，CMD窗口就可以使用 Python。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1682511760,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"福建","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373340,"user_name":"Geek_22e5a7","can_delete":false,"product_type":"c1","uid":2323682,"ip_address":"江西","ucode":"0884972D9FD1FB","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIt0nAFvqib3fho3je5VbEoTkanJOlJVFMp3bu14Bq21D9VGqKgqxvh2vmxwiaZ4EoZM5Ctwtnr3nkQ/132","comment_is_top":false,"comment_ctime":1682409498,"is_pvip":false,"replies":[{"id":136363,"content":"你输出的list没有初始化定义，你上面定义的变量是lst ，所以这里是无法直接print 的，这里你需要调整一下。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1682425527,"ip_address":"河北","comment_id":373340,"utype":1}],"discussion_count":4,"race_medal":0,"score":3,"product_id":100546501,"comment_content":"def func(i):    # 判断奇数\n    return i % 2 == 1\nlst = [1,2,3,4,5,6,7,8,9]\nl1 = filter(func, lst)  #l1是迭代器\nprint(l1)  #&lt;filter object at 0x000001CE3CA98AC8&gt;\nprint(list(l1))  #[1, 3, 5, 7, 9] #为啥这里报错TypeError: &#39;list&#39; object is not callable","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":615759,"discussion_content":"你输出的list没有初始化定义，你上面定义的变量是lst ，所以这里是无法直接print 的，这里你需要调整一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1682425528,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"河北","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1473237,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIpb7LbMtLNqTYdB04tx47liaZicib9Fy0P1iatp5BEayaiahJUrm6JZaVxSQZIicufrY568GpcuGmOTcVg/132","nickname":"cronusqiu","note":"","ucode":"0B5EB56F5B8AD8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":615946,"discussion_content":"没看出这个代码的问题。。。。\nl1是filter对象， 一旦传递给list函数，就会消耗整个迭代器并返回结果列表，只有第一次会返回结果，因为已经消耗掉了，之后不管你调用多次 print(list(l1))， 也不会有 TypeError， 只会返回空列表。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1682512623,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"福建","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2323682,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIt0nAFvqib3fho3je5VbEoTkanJOlJVFMp3bu14Bq21D9VGqKgqxvh2vmxwiaZ4EoZM5Ctwtnr3nkQ/132","nickname":"Geek_22e5a7","note":"","ucode":"0884972D9FD1FB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":616254,"discussion_content":"在jupyter里面最后一行写list(l1)才会报错，将list(l1)赋值给一个变量就没有问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1682668121,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江西","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2905523,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIDqHQQByGiaXcAk94MdDn3ftupZLXyR6bAKibxOzMxy5h3uBwZ7QiaCiaIfbCMK0cIQfGNax8iawoiaQAg/132","nickname":"nuan","note":"","ucode":"55FF98EB85404D","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":616133,"discussion_content":"这代码运行着没问题啊？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1682600155,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373312,"user_name":"GAC·DU","can_delete":false,"product_type":"c1","uid":1385403,"ip_address":"北京","ucode":"7847FBE1C13740","user_header":"https://static001.geekbang.org/account/avatar/00/15/23/bb/a1a61f7c.jpg","comment_is_top":false,"comment_ctime":1682387387,"is_pvip":false,"replies":[{"id":136354,"content":"Nice，这个案例写的非常精准","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1682388805,"ip_address":"北京","comment_id":373312,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100546501,"comment_content":"In [2]: url = &quot;time.geekbang.org&quot;\n\nIn [3]: url.split(&quot;.&quot;)\nOut[3]: [&#39;time&#39;, &#39;geekbang&#39;, &#39;org&#39;]\n\nIn [4]: url.replace(&quot;.&quot;, &quot;-&quot;)\nOut[4]: &#39;time-geekbang-org&#39;","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":615676,"discussion_content":"Nice，这个案例写的非常精准","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1682388805,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373274,"user_name":"flybird007","can_delete":false,"product_type":"c1","uid":1340230,"ip_address":"北京","ucode":"FCC176DFC14BB6","user_header":"https://static001.geekbang.org/account/avatar/00/14/73/46/b66c3e80.jpg","comment_is_top":false,"comment_ctime":1682332328,"is_pvip":true,"replies":[{"id":136344,"content":"感谢提醒，已修正，直接刷新即可更新","user_name":"作者回复","user_name_real":"作者","uid":3050845,"ctime":1682337462,"ip_address":"北京","comment_id":373274,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100546501,"comment_content":"变量比较的图有点问题","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":615575,"discussion_content":"感谢提醒，已修正，直接刷新即可更新","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1682337462,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373267,"user_name":"一米","can_delete":false,"product_type":"c1","uid":2688060,"ip_address":"江苏","ucode":"6F80AE05F5671E","user_header":"https://static001.geekbang.org/account/avatar/00/29/04/3c/9f97f7bd.jpg","comment_is_top":false,"comment_ctime":1682330389,"is_pvip":false,"replies":[{"id":136340,"content":"总结的非常准确，我们一起加油","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1682333619,"ip_address":"北京","comment_id":373267,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100546501,"comment_content":"# 使用 split() 函数将字符串分割成列表\nfruits = &quot;apple,banana,orange&quot;\nfruit_list = fruits.split(&quot;,&quot;)\nprint(fruit_list)  # 输出: [&quot;apple&quot;, &quot;banana&quot;, &quot;orange&quot;]\n\n# 使用 replace() 函数替换字符串中的子字符串\ngreeting = &quot;Hello World!&quot;\nnew_greeting = greeting.replace(&quot;World&quot;, &quot;Python&quot;)\nprint(new_greeting)  # 输出: &quot;Hello Python!&quot;","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":615567,"discussion_content":"总结的非常准确，我们一起加油","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1682333619,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373456,"user_name":"nuan","can_delete":false,"product_type":"c1","uid":2905523,"ip_address":"北京","ucode":"55FF98EB85404D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIDqHQQByGiaXcAk94MdDn3ftupZLXyR6bAKibxOzMxy5h3uBwZ7QiaCiaIfbCMK0cIQfGNax8iawoiaQAg/132","comment_is_top":false,"comment_ctime":1682520202,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":1,"score":3,"product_id":100546501,"comment_content":"d=10\nd&#47;=5\nprint(d) #2\n\n我这输出是 2.0","like_count":0},{"had_liked":false,"id":373298,"user_name":"贾维斯Echo","can_delete":false,"product_type":"c1","uid":2820504,"ip_address":"上海","ucode":"BB8C507E46A9E5","user_header":"https://static001.geekbang.org/account/avatar/00/2b/09/98/397c2c81.jpg","comment_is_top":false,"comment_ctime":1682348214,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100546501,"comment_content":"内置函数 split 是字符串根据指定的某个字符(字段)切片会返回一个列表,replace 是将字符串中指定的某个字符替换为你指定的字符并且返回你想要的字符串,总结,Python是一个非常灵活的语言,比如,定义一个变量b=111,后面加个逗号打印出来,你猜会得到什么","like_count":0}]}