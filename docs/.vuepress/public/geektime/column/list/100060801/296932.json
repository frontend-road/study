{"id":296932,"title":"08 | Embedding实战：如何使用Spark生成Item2vec和Graph Embedding？","content":"<p>你好，我是王喆。</p><p>前面两节课，我们一起学习了从Item2vec到Graph Embedding的几种经典Embedding方法。在打好了理论基础之后，这节课就让我们从理论走向实践，看看到底<strong>如何基于Spark训练得到物品的Embedding向量</strong>。</p><p>通过特征工程部分的实践，我想你已经对Spark这个分布式计算平台有了初步的认识。其实除了一些基本的特征处理方法，在Spark的机器学习包Spark MLlib中，还包含了大量成熟的机器学习模型，这其中就包括我们讲过的Word2vec模型。基于此，这节课我们会在Spark平台上，完成<strong>Item2vec和基于Deep Walk的Graph Embedding</strong>的训练。</p><p>对其他机器学习平台有所了解的同学可能会问，TensorFlow、PyTorch都有很强大的深度学习工具包，我们能不能利用这些平台进行Embedding训练呢？当然是可以的，我们也会在之后的课程中介绍TensorFlow并用它实现很多深度学习推荐模型。</p><p>但是Spark作为一个原生的分布式计算平台，在处理大数据方面还是比TensorFlow等深度学习平台更具有优势，而且业界的很多公司仍然在使用Spark训练一些结构比较简单的机器学习模型，再加上我们已经用Spark进行了特征工程的处理，所以，这节课我们继续使用Spark来完成Embedding的实践。</p><!-- [[[read_end]]] --><p>首先，我们来看看怎么完成Item2vec的训练。</p><h2>Item2vec：序列数据的处理</h2><p>我们知道，Item2vec是基于自然语言处理模型Word2vec提出的，所以Item2vec要处理的是类似文本句子、观影序列之类的序列数据。那在真正开始Item2vec的训练之前，我们还要先为它准备好训练用的序列数据。在MovieLens数据集中，有一张叫rating（评分）的数据表，里面包含了用户对看过电影的评分和评分的时间。既然时间和评分历史都有了，我们要用的观影序列自然就可以通过处理rating表得到啦。</p><p><img src=\"https://static001.geekbang.org/resource/image/36/c0/36a2cafdf3858b18a72e4ee8d8202fc0.jpeg?wh=808*1080\" alt=\"\" title=\"图1 movieLens数据集中的rating评分表\"></p><p>不过，在使用观影序列编码之前，我们还要再明确两个问题。一是MovieLens这个rating表本质上只是一个评分的表，不是真正的“观影序列”。但对用户来说，当然只有看过这部电影才能够评价它，所以，我们几乎可以把评分序列当作是观影序列。二是我们是应该把所有电影都放到序列中，还是只放那些打分比较高的呢？</p><p>这里，我是建议对评分做一个过滤，只放用户打分比较高的电影。为什么这么做呢？我们要思考一下Item2vec这个模型本质上是要学习什么。我们是希望Item2vec能够学习到物品之间的近似性。既然这样，我们当然是希望评分好的电影靠近一些，评分差的电影和评分好的电影不要在序列中结对出现。</p><p>好，那到这里我们明确了样本处理的思路，就是对一个用户来说，我们先过滤掉他评分低的电影，再把他评论过的电影按照时间戳排序。这样，我们就得到了一个用户的观影序列，所有用户的观影序列就组成了Item2vec的训练样本集。</p><p>那这个过程究竟该怎么在Spark上实现呢？其实很简单，我们只需要明白这5个关键步骤就可以实现了：</p><ol>\n<li>读取ratings原始数据到Spark平台；</li>\n<li>用where语句过滤评分低的评分记录；</li>\n<li>用groupBy userId操作聚合每个用户的评分记录，DataFrame中每条记录是一个用户的评分序列；</li>\n<li>定义一个自定义操作sortUdf，用它实现每个用户的评分记录按照时间戳进行排序；</li>\n<li>把每个用户的评分记录处理成一个字符串的形式，供后续训练过程使用。</li>\n</ol><p>具体的实现过程，我还是建议你来参考我下面给出的代码，重要的地方我也都加上了注释，方便你来理解。</p><pre><code>def processItemSequence(sparkSession: SparkSession): RDD[Seq[String]] ={\n  //设定rating数据的路径并用spark载入数据\n  val ratingsResourcesPath = this.getClass.getResource(&quot;/webroot/sampledata/ratings.csv&quot;)\n  val ratingSamples = sparkSession.read.format(&quot;csv&quot;).option(&quot;header&quot;, &quot;true&quot;).load(ratingsResourcesPath.getPath)\n\n\n  //实现一个用户定义的操作函数(UDF)，用于之后的排序\n  val sortUdf: UserDefinedFunction = udf((rows: Seq[Row]) =&gt; {\n    rows.map { case Row(movieId: String, timestamp: String) =&gt; (movieId, timestamp) }\n      .sortBy { case (movieId, timestamp) =&gt; timestamp }\n      .map { case (movieId, timestamp) =&gt; movieId }\n  })\n\n\n  //把原始的rating数据处理成序列数据\n  val userSeq = ratingSamples\n    .where(col(&quot;rating&quot;) &gt;= 3.5)  //过滤掉评分在3.5一下的评分记录\n    .groupBy(&quot;userId&quot;)            //按照用户id分组\n    .agg(sortUdf(collect_list(struct(&quot;movieId&quot;, &quot;timestamp&quot;))) as &quot;movieIds&quot;)     //每个用户生成一个序列并用刚才定义好的udf函数按照timestamp排序\n    .withColumn(&quot;movieIdStr&quot;, array_join(col(&quot;movieIds&quot;), &quot; &quot;))\n                //把所有id连接成一个String，方便后续word2vec模型处理\n\n\n  //把序列数据筛选出来，丢掉其他过程数据\n  userSeq.select(&quot;movieIdStr&quot;).rdd.map(r =&gt; r.getAs[String](&quot;movieIdStr&quot;).split(&quot; &quot;).toSeq)\n</code></pre><p>通过这段代码生成用户的评分序列样本中，每条样本的形式非常简单，它就是电影ID组成的序列，比如下面就是ID为11888用户的观影序列：</p><pre><code>296 380 344 588 593 231 595 318 480 110 253 288 47 364 377 589 410 597 539 39 160 266 350 553 337 186 736 44 158 551 293 780 353 368 858\n\n</code></pre><h2>Item2vec：模型训练</h2><p>训练数据准备好了，就该进入我们这堂课的重头戏，模型训练了。手写Item2vec的整个训练过程肯定是一件让人比较“崩溃”的事情，好在Spark MLlib已经为我们准备好了方便调用的Word2vec模型接口。我先把训练的代码贴在下面，然后再带你一步步分析每一行代码是在做什么。</p><pre><code>def trainItem2vec(samples : RDD[Seq[String]]): Unit ={\n    //设置模型参数\n    val word2vec = new Word2Vec()\n    .setVectorSize(10)\n    .setWindowSize(5)\n    .setNumIterations(10)\n\n\n  //训练模型\n  val model = word2vec.fit(samples)\n\n\n  //训练结束，用模型查找与item&quot;592&quot;最相似的20个item\n  val synonyms = model.findSynonyms(&quot;592&quot;, 20)\n  for((synonym, cosineSimilarity) &lt;- synonyms) {\n    println(s&quot;$synonym $cosineSimilarity&quot;)\n  }\n \n  //保存模型\n  val embFolderPath = this.getClass.getResource(&quot;/webroot/sampledata/&quot;)\n  val file = new File(embFolderPath.getPath + &quot;embedding.txt&quot;)\n  val bw = new BufferedWriter(new FileWriter(file))\n  var id = 0\n  //用model.getVectors获取所有Embedding向量\n  for (movieId &lt;- model.getVectors.keys){\n    id+=1\n    bw.write( movieId + &quot;:&quot; + model.getVectors(movieId).mkString(&quot; &quot;) + &quot;\\n&quot;)\n  }\n  bw.close()\n</code></pre><p>从上面的代码中我们可以看出，Spark的Word2vec模型训练过程非常简单，只需要四五行代码就可以完成。接下来，我就按照从上到下的顺序，依次给你解析其中3个关键的步骤。</p><p>首先是创建Word2vec模型并设定模型参数。我们要清楚Word2vec模型的关键参数有3个，分别是setVectorSize、setWindowSize和setNumIterations。其中，setVectorSize用于设定生成的Embedding向量的维度，setWindowSize用于设定在序列数据上采样的滑动窗口大小，setNumIterations用于设定训练时的迭代次数。这些超参数的具体选择就要根据实际的训练效果来做调整了。</p><p>其次，模型的训练过程非常简单，就是调用模型的fit接口。训练完成后，模型会返回一个包含了所有模型参数的对象。</p><p>最后一步就是提取和保存Embedding向量，我们可以从最后的几行代码中看到，调用getVectors接口就可以提取出某个电影ID对应的Embedding向量，之后就可以把它们保存到文件或者其他数据库中，供其他模块使用了。</p><p>在模型训练完成后，我们再来验证一下训练的结果是不是合理。我在代码中求取了ID为592电影的相似电影。这部电影叫Batman蝙蝠侠，我把通过Item2vec得到相似电影放到了下面，你可以从直观上判断一下这个结果是不是合理。</p><p><img src=\"https://static001.geekbang.org/resource/image/3a/10/3abdb9b411615487031bf03c07bf5010.jpeg?wh=1920*1080\" alt=\"\" title=\"图2 通过Item2vec方法找出的电影Batman的相似电影\"></p><p>当然，因为Sparrow Recsys在演示过程中仅使用了1000部电影和部分用户评论集，所以，我们得出的结果不一定非常准确，如果你有兴趣优化这个结果，可以去movieLens下载全部样本进行重新训练。</p><h2>Graph Embedding：数据准备</h2><p>到这里，我相信你已经熟悉了Item2vec方法的实现。接下来，我们再来说说基于随机游走的Graph Embedding方法，看看如何利用Spark来实现它。这里，我们选择Deep Walk方法进行实现。</p><p><img src=\"https://static001.geekbang.org/resource/image/1f/ed/1f28172c62e1b5991644cf62453fd0ed.jpeg?wh=1920*691\" alt=\"\" title=\"图3 Deep Walk的算法流程\"></p><p>在Deep Walk方法中，我们需要准备的最关键数据是物品之间的转移概率矩阵。图3是Deep Walk的算法流程图，转移概率矩阵表达了图3(b)中的物品关系图，它定义了随机游走过程中，从物品A到物品B的跳转概率。所以，我们先来看一下如何利用Spark生成这个转移概率矩阵。</p><pre><code>//samples 输入的观影序列样本集\ndef graphEmb(samples : RDD[Seq[String]], sparkSession: SparkSession): Unit ={\n  //通过flatMap操作把观影序列打碎成一个个影片对\n  val pairSamples = samples.flatMap[String]( sample =&gt; {\n    var pairSeq = Seq[String]()\n    var previousItem:String = null\n    sample.foreach((element:String) =&gt; {\n      if(previousItem != null){\n        pairSeq = pairSeq :+ (previousItem + &quot;:&quot; + element)\n      }\n      previousItem = element\n    })\n    pairSeq\n  })\n  //统计影片对的数量\n  val pairCount = pairSamples.countByValue()\n  //转移概率矩阵的双层Map数据结构\n  val transferMatrix = scala.collection.mutable.Map[String, scala.collection.mutable.Map[String, Long]]()\n  val itemCount = scala.collection.mutable.Map[String, Long]()\n\n\n  //求取转移概率矩阵\n  pairCount.foreach( pair =&gt; {\n    val pairItems = pair._1.split(&quot;:&quot;)\n    val count = pair._2\n    lognumber = lognumber + 1\n    println(lognumber, pair._1)\n\n\n    if (pairItems.length == 2){\n      val item1 = pairItems.apply(0)\n      val item2 = pairItems.apply(1)\n      if(!transferMatrix.contains(pairItems.apply(0))){\n        transferMatrix(item1) = scala.collection.mutable.Map[String, Long]()\n      }\n\n\n      transferMatrix(item1)(item2) = count\n      itemCount(item1) = itemCount.getOrElse[Long](item1, 0) + count\n    }\n  \n\n</code></pre><p>生成转移概率矩阵的函数输入是在训练Item2vec时处理好的观影序列数据。输出的是转移概率矩阵，由于转移概率矩阵比较稀疏，因此我没有采用比较浪费内存的二维数组的方法，而是采用了一个双层Map的结构去实现它。比如说，我们要得到物品A到物品B的转移概率，那么transferMatrix(itemA)(itemB)就是这一转移概率。</p><p>在求取转移概率矩阵的过程中，我先利用Spark的flatMap操作把观影序列“打碎”成一个个影片对，再利用countByValue操作统计这些影片对的数量，最后根据这些影片对的数量求取每两个影片之间的转移概率。</p><p>在获得了物品之间的转移概率矩阵之后，我们就可以进入图3(c)的步骤，进行随机游走采样了。</p><h2>Graph Embedding：随机游走采样过程</h2><p>随机游走采样的过程是利用转移概率矩阵生成新的序列样本的过程。这怎么理解呢？首先，我们要根据物品出现次数的分布随机选择一个起始物品，之后就进入随机游走的过程。在每次游走时，我们根据转移概率矩阵查找到两个物品之间的转移概率，然后根据这个概率进行跳转。比如当前的物品是A，从转移概率矩阵中查找到A可能跳转到物品B或物品C，转移概率分别是0.4和0.6，那么我们就按照这个概率来随机游走到B或C，依次进行下去，直到样本的长度达到了我们的要求。</p><p>根据上面随机游走的过程，我用Scala进行了实现，你可以参考下面的代码，在关键的位置我也给出了注释：</p><pre><code>//随机游走采样函数\n//transferMatrix 转移概率矩阵\n//itemCount 物品出现次数的分布\ndef randomWalk(transferMatrix : scala.collection.mutable.Map[String, scala.collection.mutable.Map[String, Long]], itemCount : scala.collection.mutable.Map[String, Long]): Seq[Seq[String]] ={\n  //样本的数量\n  val sampleCount = 20000\n  //每个样本的长度\n  val sampleLength = 10\n  val samples = scala.collection.mutable.ListBuffer[Seq[String]]()\n  \n  //物品出现的总次数\n  var itemTotalCount:Long = 0\n  for ((k,v) &lt;- itemCount) itemTotalCount += v\n\n\n  //随机游走sampleCount次，生成sampleCount个序列样本\n  for( w &lt;- 1 to sampleCount) {\n    samples.append(oneRandomWalk(transferMatrix, itemCount, itemTotalCount, sampleLength))\n  }\n\n\n  Seq(samples.toList : _*)\n}\n\n\n//通过随机游走产生一个样本的过程\n//transferMatrix 转移概率矩阵\n//itemCount 物品出现次数的分布\n//itemTotalCount 物品出现总次数\n//sampleLength 每个样本的长度\ndef oneRandomWalk(transferMatrix : scala.collection.mutable.Map[String, scala.collection.mutable.Map[String, Long]], itemCount : scala.collection.mutable.Map[String, Long], itemTotalCount:Long, sampleLength:Int): Seq[String] ={\n  val sample = scala.collection.mutable.ListBuffer[String]()\n\n\n  //决定起始点\n  val randomDouble = Random.nextDouble()\n  var firstElement = &quot;&quot;\n  var culCount:Long = 0\n  //根据物品出现的概率，随机决定起始点\n  breakable { for ((item, count) &lt;- itemCount) {\n    culCount += count\n    if (culCount &gt;= randomDouble * itemTotalCount){\n      firstElement = item\n      break\n    }\n  }}\n\n\n  sample.append(firstElement)\n  var curElement = firstElement\n  //通过随机游走产生长度为sampleLength的样本\n  breakable { for( w &lt;- 1 until sampleLength) {\n    if (!itemCount.contains(curElement) || !transferMatrix.contains(curElement)){\n      break\n    }\n    //从curElement到下一个跳的转移概率向量\n    val probDistribution = transferMatrix(curElement)\n    val curCount = itemCount(curElement)\n    val randomDouble = Random.nextDouble()\n    var culCount:Long = 0\n    //根据转移概率向量随机决定下一跳的物品\n    breakable { for ((item, count) &lt;- probDistribution) {\n      culCount += count\n      if (culCount &gt;= randomDouble * curCount){\n        curElement = item\n        break\n      }\n    }}\n    sample.append(curElement)\n  }}\n  Seq(sample.toList : _\n\n</code></pre><p>通过随机游走产生了我们训练所需的sampleCount个样本之后，下面的过程就和Item2vec的过程完全一致了，就是把这些训练样本输入到Word2vec模型中，完成最终Graph Embedding的生成。你也可以通过同样的方法去验证一下通过Graph Embedding方法生成的Embedding的效果。</p><h2>小结</h2><p>这节课，我们运用Spark实现了经典的Embedding方法Item2vec和Deep Walk。它们的理论知识你应该已经在前两节课的学习中掌握了，这里我就总结一下实践中应该注意的几个要点。</p><p>关于Item2vec的Spark实现，你应该注意的是训练Word2vec模型的几个参数VectorSize、WindowSize、NumIterations等，知道它们各自的作用。它们分别是用来设置Embedding向量的维度，在序列数据上采样的滑动窗口大小，以及训练时的迭代次数。</p><p>而在Deep Walk的实现中，我们应该着重理解的是，生成物品间的转移概率矩阵的方法，以及通过随机游走生成训练样本过程。</p><p>最后，我还是把这节课的重点知识总结在了一张表格中，希望能帮助你进一步巩固。</p><p><img src=\"https://static001.geekbang.org/resource/image/02/a7/02860ed1170d9376a65737df1294faa7.jpeg?wh=1920*847\" alt=\"\"></p><p>这里，我还想再多说几句。这节课，我们终于看到了深度学习模型的产出，我们用Embedding方法计算出了相似电影！对于我们学习这门课来说，它完全可以看作是一个里程碑式的进步。接下来，我希望你能总结实战中的经验，跟我继续同行，一起迎接未来更多的挑战！</p><h2>课后思考</h2><p>上节课，我们在讲Graph Embedding的时候，还介绍了Node2vec方法。你能尝试在Deep Walk代码的基础上实现Node2vec吗？这其中，我们应该着重改变哪部分的代码呢？</p><p>欢迎把你的思考和答案写在留言区，如果你掌握了Embedding的实战方法，也不妨把它分享给你的朋友吧，我们下节课见！</p>","comments":[{"had_liked":false,"id":254782,"user_name":"你笑起来真好看","can_delete":false,"product_type":"c1","uid":1565857,"ip_address":"","ucode":"0A51EC1CA4BC1C","user_header":"https://static001.geekbang.org/account/avatar/00/17/e4/a1/2f5b9764.jpg","comment_is_top":false,"comment_ctime":1603186115,"is_pvip":false,"replies":[{"id":"92936","content":"非常非常好的问题。细心的话可以发现transitionMatrixAndItemDis这个矩阵完全是在driver端。<br><br>难点在于如何分布式地处理转移概率矩阵，解决方案确实是业界的难点。另外在随机游走的时候因为肯定要访问全部的转移矩阵，所以理论上来讲需要把这个矩阵broadcast到所有节点，这又是一个容易oom的问题。<br><br>有好的思路可以欢迎分享！但不是一个短时间能够解决的业界难题。","user_name":"作者回复","comment_id":254782,"uid":"1662192","ip_address":"","utype":1,"ctime":1603220082,"user_name_real":"王喆"}],"discussion_count":5,"race_medal":0,"score":"117567303107","product_id":100060801,"comment_content":"transitionMatrixAndItemDis 在生成中这样定义的话，会不会造成dirver端oom？","like_count":27,"discussions":[{"author":{"id":2202096,"avatar":"https://static001.geekbang.org/account/avatar/00/21/99/f0/ba3c0208.jpg","nickname":"Geek_63ee39","note":"","ucode":"A41379ADD76480","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":315984,"discussion_content":"注意到Spark GraphX实现了PageRank的功能，而实现PageRank的过程也需要随机游走，这里是否可以参考Spark GraphX的PageRank去实现呢？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1603342563,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":2202096,"avatar":"https://static001.geekbang.org/account/avatar/00/21/99/f0/ba3c0208.jpg","nickname":"Geek_63ee39","note":"","ucode":"A41379ADD76480","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":317862,"discussion_content":"理论上可行，有兴趣的话可以研究一下Spark GraphX的源码，欢迎分享进展！","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1603609410,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":315984,"ip_address":""},"score":317862,"extra":""},{"author":{"id":1036428,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d0/8c/d058d6c3.jpg","nickname":"loode_","note":"","ucode":"803EEC4937818F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2202096,"avatar":"https://static001.geekbang.org/account/avatar/00/21/99/f0/ba3c0208.jpg","nickname":"Geek_63ee39","note":"","ucode":"A41379ADD76480","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":355611,"discussion_content":"期待大佬","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615460413,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":315984,"ip_address":""},"score":355611,"extra":""}]},{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507510,"discussion_content":"非常非常好的问题。细心的话可以发现transitionMatrixAndItemDis这个矩阵完全是在driver端。\n\n难点在于如何分布式地处理转移概率矩阵，解决方案确实是业界的难点。另外在随机游走的时候因为肯定要访问全部的转移矩阵，所以理论上来讲需要把这个矩阵broadcast到所有节点，这又是一个容易oom的问题。\n\n有好的思路可以欢迎分享！但不是一个短时间能够解决的业界难题。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1603220082,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2159285,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIZCX6TPTqnEcG5piaBqtac9GjUuaYILZCjAAW0slkicu68cyeKLGw68TzSJK3LOGMMIpwPylhxEEibg/132","nickname":"InfoQ_c5e776ea6a50","note":"","ucode":"6D70BE7B2B1D81","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338808,"discussion_content":"哥们，有没有好的工程时间，处理这个转移概率矩阵。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609385608,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":257818,"user_name":"fsc2016","can_delete":false,"product_type":"c1","uid":1255585,"ip_address":"","ucode":"5480F05703A974","user_header":"https://static001.geekbang.org/account/avatar/00/13/28/a1/fd2bfc25.jpg","comment_is_top":false,"comment_ctime":1604140090,"is_pvip":false,"replies":[{"id":"93873","content":"非常好的观察，推荐所有的同学都能好好观察数据并得出这样有用的结论。<br>确实是这样，由于一些长尾，冷门电影的存在（毕竟热门电影还是极少数的），导致概率转移矩阵中游走到冷门电影的概率其实非常小，所以在游走次数比较小的时候，很容易覆盖不到。<br><br><br>因为课程的示例程序采用了比较小的采样次数和游走长度，所以这个问题比较严重，工作中肯定要在算力允许的前提下，尽量增加采样次数，适当增加游走长度，来保证生成结果的稳定性和覆盖率。","user_name":"作者回复","comment_id":257818,"uid":"1662192","ip_address":"","utype":1,"ctime":1604185240,"user_name_real":"王喆"}],"discussion_count":3,"race_medal":0,"score":"100388387898","product_id":100060801,"comment_content":"老师，筛选出来的高分电影有900多部，随机游走出来的序列embdding后，只有500多部，这应该和序列数量，序列长度有关，比如序列数量不够，导致没有覆盖到全部高分电影。实际工作中，像序列数量，序列长度是不是要经过筛选，来保证所有item都会被embdding？","like_count":23,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":508460,"discussion_content":"非常好的观察，推荐所有的同学都能好好观察数据并得出这样有用的结论。\n确实是这样，由于一些长尾，冷门电影的存在（毕竟热门电影还是极少数的），导致概率转移矩阵中游走到冷门电影的概率其实非常小，所以在游走次数比较小的时候，很容易覆盖不到。\n\n\n因为课程的示例程序采用了比较小的采样次数和游走长度，所以这个问题比较严重，工作中肯定要在算力允许的前提下，尽量增加采样次数，适当增加游走长度，来保证生成结果的稳定性和覆盖率。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604185240,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2384780,"avatar":"","nickname":"UNA","note":"","ucode":"4E289068D2AF92","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339966,"discussion_content":"如果是这样的话，可不可以理解为随机游走系列，生成的embedding，头部效应都比较明显，不适合用来处理长尾冷门物品？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1609851581,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1339856,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKS70PShNZaxpibFc1gWuvibbg3hXR4YKm3MkNgX0n56hWUicN0JfB2GQ6I9UicBfKABH6dkfVDPohA6Q/132","nickname":"香格里拉飞龙","note":"","ucode":"C1263416EE85E3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":404908,"discussion_content":"我这里用item2vec生成的embedding都会少一些item……不知道是哪里的原因","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634456643,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":254463,"user_name":"Huntley","can_delete":false,"product_type":"c1","uid":2201177,"ip_address":"","ucode":"B8F81CB6DBCAF8","user_header":"https://static001.geekbang.org/account/avatar/00/21/96/59/d0b69f85.jpg","comment_is_top":false,"comment_ctime":1603118555,"is_pvip":false,"replies":[{"id":"92868","content":"在项目中用最简单的average pooling的方法生成了user embedding。也就是把用户评价过的高分高分电影的embedding进行平均。<br><br>user embedding的其他生成方式也很多，像你说的，也可以根据历史行为构建用户-物品的关系图，然后直接在其上进行随机游走，直接一同生成user 和item emb。<br><br>或者采用其他双塔结构的模型生成item和user emb等等。","user_name":"作者回复","comment_id":254463,"uid":"1662192","ip_address":"","utype":1,"ctime":1603153896,"user_name_real":"王喆"}],"discussion_count":1,"race_medal":0,"score":"48847758811","product_id":100060801,"comment_content":"想请教下老师，user embedding 也可以用相同的方法获得吗？如何构建用户关系图呢？是不是看过同一部电影的两个用户之间由一条无向边进行连接？和item embedding相比，有什么区别或注意事项吗？","like_count":11,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507408,"discussion_content":"在项目中用最简单的average pooling的方法生成了user embedding。也就是把用户评价过的高分高分电影的embedding进行平均。\n\nuser embedding的其他生成方式也很多，像你说的，也可以根据历史行为构建用户-物品的关系图，然后直接在其上进行随机游走，直接一同生成user 和item emb。\n\n或者采用其他双塔结构的模型生成item和user emb等等。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603153896,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":254557,"user_name":"浣熊当家","can_delete":false,"product_type":"c1","uid":1952248,"ip_address":"","ucode":"939F06050423E4","user_header":"https://static001.geekbang.org/account/avatar/00/1d/c9/f8/72955ef9.jpg","comment_is_top":false,"comment_ctime":1603130458,"is_pvip":false,"replies":[{"id":"95605","content":"理解非常正确。<br><br>而且针对graph embedding方法，不要认为所有的图数据都是由序列数据生成的，有一些天然的图数据，比如知识图谱，是只能使用graph embedidng方法，不能使用item2vec的。所以graph embedding应用范围更广，保存的信息也更多。","user_name":"作者回复","comment_id":254557,"uid":"1662192","ip_address":"","utype":1,"ctime":1606168316,"user_name_real":"王喆"}],"discussion_count":3,"race_medal":0,"score":"35962868826","product_id":100060801,"comment_content":"老师请教下，我对item2vec和Graph Embedding的联系理解是否正确：<br>1. 联系：item2vec和Graph Embedding 都是为了下一步的相关性矩阵，而一段物品序列<br>2. 不同： item2vec使用同一用户历史时间序列下的滑动窗口， 而Graph embedding在同一用户的时间序列之上，还应用了不同用户，同一物品之间的图联系，所以说graph embedding可以生成更全面的物品与物品的连接。<br><br>所以是否可理解为graph embedding比item2vec的复杂，更完善？业界更流行的是不是想deep walk这种graph embedding的算法？","like_count":8,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507437,"discussion_content":"理解非常正确。\n\n而且针对graph embedding方法，不要认为所有的图数据都是由序列数据生成的，有一些天然的图数据，比如知识图谱，是只能使用graph embedidng方法，不能使用item2vec的。所以graph embedding应用范围更广，保存的信息也更多。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606168316,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2403705,"avatar":"","nickname":"Wa","note":"","ucode":"96E28E50FCA96C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341429,"discussion_content":"第一点没太理解，item2vec不是用户行为序列直接embedding吗，和相关性矩阵是什么关系","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1610418834,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2311604,"avatar":"","nickname":"Geek_c0fd60","note":"","ucode":"CAB74A2ABCD57C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2403705,"avatar":"","nickname":"Wa","note":"","ucode":"96E28E50FCA96C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352786,"discussion_content":"在这里embedding的最终目的就是生成一个相关性矩阵。而不我们可以利用这个矩阵求不同item的相关性。建议了解一下word2vec的知识；","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1614849492,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":341429,"ip_address":""},"score":352786,"extra":""}]}]},{"had_liked":false,"id":257339,"user_name":"白夜","can_delete":false,"product_type":"c1","uid":1445450,"ip_address":"","ucode":"A1FF3E4BB06FDC","user_header":"https://static001.geekbang.org/account/avatar/00/16/0e/4a/cc6a2478.jpg","comment_is_top":false,"comment_ctime":1603940998,"is_pvip":false,"replies":[{"id":"93746","content":"300000的物品规模单机环境肯定比较吃力了，代码中的实现也是单机下的随机游走，不管再如何优化都比较困难。<br><br>生产环境请关注spark的图计算api graphX https:&#47;&#47;spark.apache.org&#47;graphx&#47;<br>我认为比较好的教程<br>https:&#47;&#47;endymecy.gitbooks.io&#47;spark-graphx-source-analysis&#47;content&#47;<br><br>其实期待更多的同学能参与到项目的维护中来，我们不仅是一个课程，更是一个业界交流的平台，期待能看到新的进展。<br>","user_name":"作者回复","comment_id":257339,"uid":"1662192","ip_address":"","utype":1,"ctime":1604017239,"user_name_real":"王喆"}],"discussion_count":2,"race_medal":0,"score":"27373744774","product_id":100060801,"comment_content":"老师，randomWalk这部在60核的机器上跑的很慢，，慢到无语，可以优化下吗，transitionMatrixAndItemDis._1与_2的size都是300000","like_count":7,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":508300,"discussion_content":"300000的物品规模单机环境肯定比较吃力了，代码中的实现也是单机下的随机游走，不管再如何优化都比较困难。\n\n生产环境请关注spark的图计算api graphX https://spark.apache.org/graphx/\n我认为比较好的教程\nhttps://endymecy.gitbooks.io/spark-graphx-source-analysis/content/\n\n其实期待更多的同学能参与到项目的维护中来，我们不仅是一个课程，更是一个业界交流的平台，期待能看到新的进展。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604017239,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2384780,"avatar":"","nickname":"UNA","note":"","ucode":"4E289068D2AF92","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339967,"discussion_content":"怎么参加项目维护呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609851637,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":255265,"user_name":"聪聪呀","can_delete":false,"product_type":"c1","uid":2199731,"ip_address":"","ucode":"EF3583C6415640","user_header":"https://static001.geekbang.org/account/avatar/00/21/90/b3/8828caa4.jpg","comment_is_top":false,"comment_ctime":1603291835,"is_pvip":false,"replies":[{"id":"93038","content":"EGES是希望融合更多side information，只用id信息并不是它的意义所在。而且除了这些原理上的分析外，我不主张给任何人模型效果好坏的建议，决定的因素太多了。<br><br>但总的来说，如果你只有id类的历史行为信息，使用EGES的意义不大。","user_name":"作者回复","comment_id":255265,"uid":"1662192","ip_address":"","utype":1,"ctime":1603347355,"user_name_real":"王喆"}],"discussion_count":2,"race_medal":0,"score":"27373095611","product_id":100060801,"comment_content":"老师，我最近在研究使用graph embedding ，根据网上的git 代码跑了item2vec，EGES代码，我的推荐场景是视频推荐，同样的训练数据，我发现item2vec 推荐效果较好，但我发现EGES推荐效果不好（只用了ID，没有加其他特征）推荐结果相似度很低。所以想请教您，您觉得可能是什么原因引起的呢，您有没有EGES的demo ","like_count":6,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507661,"discussion_content":"EGES是希望融合更多side information，只用id信息并不是它的意义所在。而且除了这些原理上的分析外，我不主张给任何人模型效果好坏的建议，决定的因素太多了。\n\n但总的来说，如果你只有id类的历史行为信息，使用EGES的意义不大。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603347355,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1485992,"avatar":"https://static001.geekbang.org/account/avatar/00/16/ac/a8/e3631658.jpg","nickname":"亮亮","note":"","ucode":"7A91E99F7FCE32","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338003,"discussion_content":"有没有EGES的demo，发个链接","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1609150211,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":272073,"user_name":"梁栋💝","can_delete":false,"product_type":"c1","uid":1067594,"ip_address":"","ucode":"16EEF0DD596A80","user_header":"https://static001.geekbang.org/account/avatar/00/10/4a/4a/fdae1e16.jpg","comment_is_top":false,"comment_ctime":1609925400,"is_pvip":false,"replies":[{"id":"98662","content":"是这样，内存问题是工程实现中最大的限制。我没有深入研究过spark的graphX，以及一些图计算的分布式引擎。如果有经验的同学可以谈谈如何进行分布式的转移矩阵处理。","user_name":"作者回复","comment_id":272073,"uid":"1662192","ip_address":"","utype":1,"ctime":1609956808,"user_name_real":"王喆"}],"discussion_count":1,"race_medal":0,"score":"23084761880","product_id":100060801,"comment_content":"综上，随机游走因为需要完整转移概率矩阵的原因，受限于转移概率矩阵规模能否容纳到内存中。","like_count":5,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513141,"discussion_content":"是这样，内存问题是工程实现中最大的限制。我没有深入研究过spark的graphX，以及一些图计算的分布式引擎。如果有经验的同学可以谈谈如何进行分布式的转移矩阵处理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609956808,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":300064,"user_name":"W","can_delete":false,"product_type":"c1","uid":2674983,"ip_address":"","ucode":"C182E9F3BAD7B9","user_header":"https://static001.geekbang.org/account/avatar/00/28/d1/27/68543b66.jpg","comment_is_top":false,"comment_ctime":1624969728,"is_pvip":false,"replies":[{"id":"109382","content":"这是个简单的脑筋急转弯问题吧。电影的3.5是平均分，你再想想。","user_name":"作者回复","comment_id":300064,"uid":"1662192","ip_address":"","utype":1,"ctime":1626215294,"user_name_real":"王喆"}],"discussion_count":1,"race_medal":0,"score":"18804838912","product_id":100060801,"comment_content":"老师你好，不知道我是不是哪里理解错了T_T，新手入门。我的问题是：评分低于3.5的电影被过滤了，相当于电影库里没有低于3.5分的电影，那么也就不会有对应低于3.5分的电影的embedding向量，为什么BatMan的推荐结果里还有低于3.5分的推荐结果呢？","like_count":4,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522631,"discussion_content":"这是个简单的脑筋急转弯问题吧。电影的3.5是平均分，你再想想。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626215294,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":275451,"user_name":"Geek_ee4f14","can_delete":false,"product_type":"c1","uid":2420262,"ip_address":"","ucode":"4E295B32064EEF","user_header":"","comment_is_top":false,"comment_ctime":1611546343,"is_pvip":false,"replies":[{"id":"100165","content":"会的，但通常我们也希望更多的去推荐爆款商品，这还是跟你自己的观察和决定相关","user_name":"作者回复","comment_id":275451,"uid":"1662192","ip_address":"","utype":1,"ctime":1611730732,"user_name_real":"王喆"}],"discussion_count":1,"race_medal":0,"score":"18791415527","product_id":100060801,"comment_content":"再请问下老师，游走的时候起始点没有做去重，会不会导致某些爆款成为起始点的概率更高，也不容易游走到冷门物品呀？","like_count":4,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514352,"discussion_content":"会的，但通常我们也希望更多的去推荐爆款商品，这还是跟你自己的观察和决定相关","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611730732,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":275325,"user_name":"Capricornus","can_delete":false,"product_type":"c1","uid":2371321,"ip_address":"","ucode":"B7B15C58653860","user_header":"https://static001.geekbang.org/account/avatar/00/24/2e/f9/c0a6232c.jpg","comment_is_top":false,"comment_ctime":1611472990,"is_pvip":false,"replies":[{"id":"99969","content":"这两个问题自己去试验一下，比如自己换成array看看行不行。<br><br>scala和spark中有大量语法糖和一些复杂的类型转换，不建议在这上面花费太多时间，注重经验积累就好。","user_name":"作者回复","comment_id":275325,"uid":"1662192","ip_address":"","utype":1,"ctime":1611551459,"user_name_real":"王喆"}],"discussion_count":2,"race_medal":0,"score":"14496374878","product_id":100060801,"comment_content":"userSeq.select(&quot;movieIdStr&quot;).rdd.map(r =&gt; r.getAs[String](&quot;movieIdStr&quot;).split(&quot; &quot;).toSeq)<br>老师这里为什么需要转陈Seq，而不使用Array？<br>    val sortUdf: UserDefinedFunction = udf((rows: Seq[Row]) =&gt; {<br>      rows.map { case Row(movieId: String, timestamp: String) =&gt; (movieId, timestamp) }<br>        .sortBy { case (movieId, timestamp) =&gt; timestamp }<br>        .map { case (movieId, timestamp) =&gt; movieId }<br>    })<br>老师这里case的作用是什么？不太能理解。","like_count":3,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514312,"discussion_content":"这两个问题自己去试验一下，比如自己换成array看看行不行。\n\nscala和spark中有大量语法糖和一些复杂的类型转换，不建议在这上面花费太多时间，注重经验积累就好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611551459,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2369593,"avatar":"https://static001.geekbang.org/account/avatar/00/24/28/39/7e184c50.jpg","nickname":"Jimmy","note":"","ucode":"6D245FAF932C24","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373129,"discussion_content":"解包，，，你可以理解维python中的一次赋值多个变量","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620627543,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":269200,"user_name":"花花花木兰","can_delete":false,"product_type":"c1","uid":2371307,"ip_address":"","ucode":"E62939C7DADC61","user_header":"https://static001.geekbang.org/account/avatar/00/24/2e/eb/a74e5ba6.jpg","comment_is_top":false,"comment_ctime":1608555273,"is_pvip":false,"replies":[{"id":"97652","content":"其实item2vec里面并没有区分什么先后顺序。把这堆菜中的item两两输入模型训练就好。","user_name":"作者回复","comment_id":269200,"uid":"1662192","ip_address":"","utype":1,"ctime":1608595614,"user_name_real":"王喆"}],"discussion_count":1,"race_medal":0,"score":"14493457161","product_id":100060801,"comment_content":"老师，对于非序列数据用spark的word2vec模型是不是不合适？非序列数据用什么方法训练比较好？例如生鲜配送的场景，用户一次会购买很多菜，这些菜在一个订单中是没有先后时序的。","like_count":3,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512189,"discussion_content":"其实item2vec里面并没有区分什么先后顺序。把这堆菜中的item两两输入模型训练就好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608595614,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":260879,"user_name":"tiger","can_delete":false,"product_type":"c1","uid":2298602,"ip_address":"","ucode":"43F70BE0B83B1C","user_header":"https://static001.geekbang.org/account/avatar/00/23/12/ea/79effe93.jpg","comment_is_top":false,"comment_ctime":1605147339,"is_pvip":false,"replies":[{"id":"94777","content":"这是一个好的业务问题。我推荐大家自己思考一下，没有标准答案。<br><br>我的思考是把所有物品放进去可能会引入大量错误的关联，反而得不偿失。而缺少物品的问题最好通过调高采样数量的方式或者其他冷启动的方式解决。","user_name":"作者回复","comment_id":260879,"uid":"1662192","ip_address":"","utype":1,"ctime":1605196544,"user_name_real":"王喆"}],"discussion_count":1,"race_medal":0,"score":"14490049227","product_id":100060801,"comment_content":"老师，用word2vec利用高评分的做出了的模型（相似推荐）有的物品会找不到，能不能把所有物品one hot编码输入里面，这样是不是就会找到所有的物品了？但是这样做有没有意义？","like_count":3,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509314,"discussion_content":"这是一个好的业务问题。我推荐大家自己思考一下，没有标准答案。\n\n我的思考是把所有物品放进去可能会引入大量错误的关联，反而得不偿失。而缺少物品的问题最好通过调高采样数量的方式或者其他冷启动的方式解决。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605196544,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":255492,"user_name":"王发庆","can_delete":false,"product_type":"c1","uid":2201070,"ip_address":"","ucode":"B945495635126D","user_header":"https://static001.geekbang.org/account/avatar/00/21/95/ee/062139f0.jpg","comment_is_top":false,"comment_ctime":1603357559,"is_pvip":false,"replies":[{"id":"93152","content":"不可以。Embedding冷启动的问题大家问的比较多，我找时间统一回复一下。<br><br>简单来说生成环境下对于冷启动物品需要指定一个默认embedding，或者基于一些其他的相似条件取相似embedding的平均。","user_name":"作者回复","comment_id":255492,"uid":"1662192","ip_address":"","utype":1,"ctime":1603413277,"user_name_real":"王喆"}],"discussion_count":1,"race_medal":0,"score":"14488259447","product_id":100060801,"comment_content":"老师，您好，请教您一个问题，在生成Embedding的时候我们都是全量生成的，在生产环境下我们能增量的去生成新节点的Embedding么？","like_count":4,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507732,"discussion_content":"不可以。Embedding冷启动的问题大家问的比较多，我找时间统一回复一下。\n\n简单来说生成环境下对于冷启动物品需要指定一个默认embedding，或者基于一些其他的相似条件取相似embedding的平均。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603413277,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":281485,"user_name":"泷","can_delete":false,"product_type":"c1","uid":2451304,"ip_address":"","ucode":"2017B36353C068","user_header":"https://static001.geekbang.org/account/avatar/00/25/67/68/6c05da27.jpg","comment_is_top":false,"comment_ctime":1614763052,"is_pvip":false,"replies":[{"id":"102385","content":"粗看应该是没问题。<br>for ((item, prob) &lt;- nonNormProb) {  &#47;&#47;归一化概率分布<br>      probDistribution(item) = prob &#47; accuP<br>    }<br><br>归一化这一步非常重要，上次有位同学提交了代码但是没有做归一化，所以就是错误的。","user_name":"作者回复","comment_id":281485,"uid":"1662192","ip_address":"","utype":1,"ctime":1615024258,"user_name_real":"王喆"}],"discussion_count":1,"race_medal":0,"score":"10204697644","product_id":100060801,"comment_content":"思考题，变为Node2Wec，主要修改随机游走循环中的probDistribution，根据记录的前驱节点进行修正，p,q为修正权重，然后再归一化概率分布，后续步骤多一个prevElement = curElement。<br>刚接触scala，如有错误请指正。<br>var probDistribution = mutable.Map[String, Double]()<br>  if (prevElement != null) {<br>    val prevProbDis = transitionMatrix(prevElement)  &#47;&#47;获得前驱节点的“邻接矩阵”行<br>    var accuP:Double = 0<br>    var nonNormProb = mutable.Map[String, Double]()<br>    for ((item, prob) &lt;- transitionMatrix(curElement)) {  &#47;&#47;前驱节点可达，那么距离为1<br>      if (prevProbDis.contains(item)) {<br>        nonNormProb(item) = prob<br>        accuP = accuP + prob<br>      } else if (item == prevElement) {  &#47;&#47;是前驱节点，那么距离为0<br>        nonNormProb(item) = prob * (1 &#47; p)<br>        accuP = accuP + prob * (1 &#47; p)<br>      } else {  &#47;&#47;其他情况，距离为2<br>        nonNormProb(item) = prob * (1 &#47; q)<br>        accuP = accuP + prob * (1 &#47; q)<br>      }<br>    }<br>    for ((item, prob) &lt;- nonNormProb) {  &#47;&#47;归一化概率分布<br>      probDistribution(item) = prob &#47; accuP<br>    }<br>  } else {  &#47;&#47;当前为firstItem，不进行概率修正（偷懒）<br>    probDistribution = transitionMatrix(curElement)<br>  }","like_count":2,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516414,"discussion_content":"粗看应该是没问题。\nfor ((item, prob) &amp;lt;- nonNormProb) {  //归一化概率分布\n      probDistribution(item) = prob / accuP\n    }\n\n归一化这一步非常重要，上次有位同学提交了代码但是没有做归一化，所以就是错误的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615024258,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":279951,"user_name":"tuomasiii","can_delete":false,"product_type":"c1","uid":2370755,"ip_address":"","ucode":"49B732F80C5B68","user_header":"","comment_is_top":false,"comment_ctime":1614011616,"is_pvip":false,"replies":[{"id":"101717","content":"手动扩容embedding 这个怎么实现？我感觉输入向量的维度都改变了吧，可以实现手动扩容吗？<br><br>感觉这个方法比较tricky，不太行得通。写了一篇相关文章，希望有所启发。 https:&#47;&#47;zhuanlan.zhihu.com&#47;p&#47;351390011","user_name":"作者回复","comment_id":279951,"uid":"1662192","ip_address":"","utype":1,"ctime":1614046871,"user_name_real":"王喆"}],"discussion_count":1,"race_medal":0,"score":"10203946208","product_id":100060801,"comment_content":"想请问下老师如果新的user&#47;item加入，embedding matrix形状变大。如果每天都end2end train from scratch，是不是太expensive了？<br>如果是手动扩容embedding再initialize with昨日的checkpoint继续训练新的user-item interactions，然后时间久一点再train from scratch，行得通吗？<br>","like_count":2,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515938,"discussion_content":"手动扩容embedding 这个怎么实现？我感觉输入向量的维度都改变了吧，可以实现手动扩容吗？\n\n感觉这个方法比较tricky，不太行得通。写了一篇相关文章，希望有所启发。 https://zhuanlan.zhihu.com/p/351390011","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614046871,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":271762,"user_name":"tuomasiii","can_delete":false,"product_type":"c1","uid":2370755,"ip_address":"","ucode":"49B732F80C5B68","user_header":"","comment_is_top":false,"comment_ctime":1609798716,"is_pvip":false,"replies":[{"id":"98558","content":"非常细心。<br>1、是的，ttl会让emb在24小时候失效，这一般是生产环境的做法，避免一些过期的错误emb留存。<br>2、emb几乎没有办法增量训练，需要重新训练生成new emb","user_name":"作者回复","comment_id":271762,"uid":"1662192","ip_address":"","utype":1,"ctime":1609809276,"user_name_real":"王喆"}],"discussion_count":1,"race_medal":0,"score":"10199733308","product_id":100060801,"comment_content":"想问一下在item2vec和graph embedding里面ttl都设置成了24小时，也就是说24小时候后这些embedding就会从redis里面evict掉吗？<br><br>还有就是如果有new user和new item我们都是需要train from scratch吗？还是说可以增量训练？","like_count":3,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513036,"discussion_content":"非常细心。\n1、是的，ttl会让emb在24小时候失效，这一般是生产环境的做法，避免一些过期的错误emb留存。\n2、emb几乎没有办法增量训练，需要重新训练生成new emb","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609809276,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":266210,"user_name":"陈威洋","can_delete":false,"product_type":"c1","uid":2264679,"ip_address":"","ucode":"DCF84B4D3A7354","user_header":"https://static001.geekbang.org/account/avatar/00/22/8e/67/afb412fb.jpg","comment_is_top":false,"comment_ctime":1607242864,"is_pvip":false,"replies":[{"id":"96787","content":"看自己。如果你觉得自己有能力复现，当然不用弄懂每句代码的意思。","user_name":"作者回复","comment_id":266210,"uid":"1662192","ip_address":"","utype":1,"ctime":1607389950,"user_name_real":"王喆"}],"discussion_count":2,"race_medal":0,"score":"10197177456","product_id":100060801,"comment_content":"下午好，请问老师：<br>作为推荐系统工程师，在学习代码的时候，除了掌握代码实现了什么，还要把每一句代码的意思弄透彻吗？","like_count":3,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511178,"discussion_content":"看自己。如果你觉得自己有能力复现，当然不用弄懂每句代码的意思。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607389950,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2264679,"avatar":"https://static001.geekbang.org/account/avatar/00/22/8e/67/afb412fb.jpg","nickname":"陈威洋","note":"","ucode":"DCF84B4D3A7354","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332910,"discussion_content":"非常感谢老师的回答，自问没有这个复现能力，我还是听从老师的话，一句一句弄明白！~","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1607391953,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":263414,"user_name":"范闲","can_delete":false,"product_type":"c1","uid":1073125,"ip_address":"","ucode":"F21FD7DF6BA53C","user_header":"https://static001.geekbang.org/account/avatar/00/10/5f/e5/54325854.jpg","comment_is_top":false,"comment_ctime":1606128602,"is_pvip":false,"replies":[{"id":"95614","content":"当然可以，不仅可以用tensorflow，还可以用任何深度学习平台来训练。","user_name":"作者回复","comment_id":263414,"uid":"1662192","ip_address":"","utype":1,"ctime":1606181511,"user_name_real":"王喆"}],"discussion_count":1,"race_medal":0,"score":"10196063194","product_id":100060801,"comment_content":"embeddding不可以用tf来求么？","like_count":3,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510179,"discussion_content":"当然可以，不仅可以用tensorflow，还可以用任何深度学习平台来训练。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606181511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":258779,"user_name":"萬里長空","can_delete":false,"product_type":"c1","uid":2199552,"ip_address":"","ucode":"54343639CA8397","user_header":"https://static001.geekbang.org/account/avatar/00/21/90/00/cfc2b463.jpg","comment_is_top":false,"comment_ctime":1604555159,"is_pvip":false,"replies":[{"id":"94258","content":"spark word2vec没有做negative sampling，训练速度肯定慢一些。没有看过gensim源码，但应该使用了negative sampling加快训练速度。<br><br>课程中关于具体的参数，debug这些问题我可能都不会给具体的建议，因为实际问题的变量太多，跟你的数据量，物品量，节点数，memory都有关系，还是自己多尝试，谢谢。","user_name":"作者回复","comment_id":258779,"uid":"1662192","ip_address":"","utype":1,"ctime":1604652399,"user_name_real":"王喆"}],"discussion_count":2,"race_medal":0,"score":"10194489751","product_id":100060801,"comment_content":"老师，这里想再问个内存的问题，生产环境中，比如2000万的商品，使用spark-word2vec来训练，维度设置为100，这里driver的内存一般要设置多大啊，我用了36g还是会存在内存问题，但是用gensim的单机训练，不到30g就训练好了","like_count":3,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":508751,"discussion_content":"spark word2vec没有做negative sampling，训练速度肯定慢一些。没有看过gensim源码，但应该使用了negative sampling加快训练速度。\n\n课程中关于具体的参数，debug这些问题我可能都不会给具体的建议，因为实际问题的变量太多，跟你的数据量，物品量，节点数，memory都有关系，还是自己多尝试，谢谢。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604652399,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2411441,"avatar":"","nickname":"Geek_65b3bd","note":"","ucode":"1155A4FDDC34AC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341858,"discussion_content":"spark w2v是用的层次softmax来加速训练，gensim可以选择是用negative sampling还是hierarchical softmax,并且可以自己调整negative sample的数目。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1610538580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":257395,"user_name":"fsc2016","can_delete":false,"product_type":"c1","uid":1255585,"ip_address":"","ucode":"5480F05703A974","user_header":"https://static001.geekbang.org/account/avatar/00/13/28/a1/fd2bfc25.jpg","comment_is_top":false,"comment_ctime":1603957323,"is_pvip":false,"replies":[{"id":"93752","content":"其实是一致的，文稿中probDistribution中存储的是吓一跳物品的统计数量，github中存储的是跳转概率。结果都是一样的。<br><br>因为github项目在不断优化迭代，所以还是最好以github为准。文稿中的代码我会找时间更新。多谢细心的发现。","user_name":"作者回复","comment_id":257395,"uid":"1662192","ip_address":"","utype":1,"ctime":1604017668,"user_name_real":"王喆"}],"discussion_count":1,"race_medal":0,"score":"10193891915","product_id":100060801,"comment_content":"老师，关于随机游走到下一部电影实现，文稿和github上代码不一致。文稿中这种实现，可以保证游走概率大的电影，优先被游走到嘛<br>文稿中：<br>&#47;&#47;从curElement到下一个跳的转移概率向量 <br>val probDistribution = transferMatrix(curElement) <br>val curCount = itemCount(curElement) <br>val randomDouble = Random.nextDouble() <br>var culCount:Long = 0 <br>&#47;&#47;根据转移概率向量随机决定下一跳的物品 <br>breakable { for ((item, count) &lt;- probDistribution) { <br>culCount += count<br> if (culCount &gt;= randomDouble * curCount)<br>{ curElement = item <br>break } }}<br>github上：<br>  val probDistribution = transitionMatrix(curElement)<br>  val randomDouble = Random.nextDouble()<br>  breakable { for ((item, prob) &lt;- probDistribution) {<br>  if (randomDouble &gt;= prob){<br>       curElement = item<br>       break<br>    }","like_count":3,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":508321,"discussion_content":"其实是一致的，文稿中probDistribution中存储的是吓一跳物品的统计数量，github中存储的是跳转概率。结果都是一样的。\n\n因为github项目在不断优化迭代，所以还是最好以github为准。文稿中的代码我会找时间更新。多谢细心的发现。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604017668,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":256593,"user_name":"WiFeng","can_delete":false,"product_type":"c1","uid":1043466,"ip_address":"","ucode":"D7F0FD3EC815B4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/0a/c35f9000.jpg","comment_is_top":false,"comment_ctime":1603686247,"is_pvip":false,"replies":[{"id":"93402","content":"有可能是scala版本的问题，项目中使用了scala 2.11版本，可以检查一下是否一致。<br><br>如果还不能解决的话，需要自行百度或google一下解决方案。","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1603692963,"ip_address":"","comment_id":256593,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10193620839","product_id":100060801,"comment_content":"你们执行都没有问题吗？<br><br>&#47;Users&#47;leeco&#47;github&#47;wzhe06&#47;SparrowRecSys&#47;src&#47;main&#47;java&#47;com&#47;wzhe&#47;sparrowrecsys&#47;offline&#47;spark&#47;embedding&#47;Embedding.scala:34:43<br>No TypeTag available for scala.collection.Seq[String]<br>    val sortUdf: UserDefinedFunction = udf((rows: Seq[Row]) =&gt; {","like_count":3,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":508064,"discussion_content":"有可能是scala版本的问题，项目中使用了scala 2.11版本，可以检查一下是否一致。\n\n如果还不能解决的话，需要自行百度或google一下解决方案。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603692963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1043466,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ec/0a/c35f9000.jpg","nickname":"WiFeng","note":"","ucode":"D7F0FD3EC815B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318291,"discussion_content":"多谢回复。是选择的2.11 版本","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1603698988,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1043466,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ec/0a/c35f9000.jpg","nickname":"WiFeng","note":"","ucode":"D7F0FD3EC815B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318673,"discussion_content":"终于可以正常运行了。导入了2次scala....., 导入的另一个版本不支持","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603804023,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":255304,"user_name":"Geek_63ee39","can_delete":false,"product_type":"c1","uid":2202096,"ip_address":"","ucode":"A41379ADD76480","user_header":"https://static001.geekbang.org/account/avatar/00/21/99/f0/ba3c0208.jpg","comment_is_top":false,"comment_ctime":1603297872,"is_pvip":false,"replies":[{"id":"93037","content":"前提是把transferMatrix广播出去，项目里面的transferMatrix大小没问题，如果特别海量数据形成的transferMatrix可能一些worker node的内存会有问题。","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1603347181,"ip_address":"","comment_id":255304,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10193232464","product_id":100060801,"comment_content":"请教一下老师，从效率角度上讲，可以把转移矩阵transferMatrix放在executor端进行分布式随机游走吧，因为这是可以并行计算的。","like_count":2,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507680,"discussion_content":"前提是把transferMatrix广播出去，项目里面的transferMatrix大小没问题，如果特别海量数据形成的transferMatrix可能一些worker node的内存会有问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603347181,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":254424,"user_name":"大魔王","can_delete":false,"product_type":"c1","uid":1308552,"ip_address":"","ucode":"5EB049D18E122F","user_header":"https://static001.geekbang.org/account/avatar/00/13/f7/88/da243c77.jpg","comment_is_top":false,"comment_ctime":1603114899,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10193049491","product_id":100060801,"comment_content":"对scala语法不太熟,scala方法返回值居然不用写return...","like_count":2,"discussions":[{"author":{"id":1068060,"avatar":"https://static001.geekbang.org/account/avatar/00/10/4c/1c/da0cdb15.jpg","nickname":"龙啸云","note":"","ucode":"661086A77EAA1B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533176,"discussion_content":"你写了也没事","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637807881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2159285,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIZCX6TPTqnEcG5piaBqtac9GjUuaYILZCjAAW0slkicu68cyeKLGw68TzSJK3LOGMMIpwPylhxEEibg/132","nickname":"InfoQ_c5e776ea6a50","note":"","ucode":"6D70BE7B2B1D81","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339541,"discussion_content":"哥们，函数式编程了解下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609726445,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":254417,"user_name":"浣熊当家","can_delete":false,"product_type":"c1","uid":1952248,"ip_address":"","ucode":"939F06050423E4","user_header":"https://static001.geekbang.org/account/avatar/00/1d/c9/f8/72955ef9.jpg","comment_is_top":false,"comment_ctime":1603113872,"is_pvip":false,"replies":[{"id":"92864","content":"我一个人能力有限，欢迎大家提供java，python的版本，贡献到开源项目中！<br>从scala到python应该没有完全自动的转换工具，还是需要参照官方文档不同语言的用法来进行转换。","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1603153735,"ip_address":"","comment_id":254417,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10193048464","product_id":100060801,"comment_content":"老师，请问我平时工作中是用PySpark，这节课的代码是不是也都可以用python的来写？有什么好的学习资料来学习怎么把他们翻译成python吗？谢谢老师！！","like_count":3,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507386,"discussion_content":"我一个人能力有限，欢迎大家提供java，python的版本，贡献到开源项目中！\n从scala到python应该没有完全自动的转换工具，还是需要参照官方文档不同语言的用法来进行转换。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603153735,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2275142,"avatar":"https://static001.geekbang.org/account/avatar/00/22/b7/46/0a587042.jpg","nickname":"李元","note":"","ucode":"FBBF0B1AD37A84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337850,"discussion_content":"学习scala也是必备的，没必要非要转为python版本。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1609089268,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2343345,"avatar":"https://static001.geekbang.org/account/avatar/00/23/c1/b1/dcde3850.jpg","nickname":"💤","note":"","ucode":"EEED6754B25626","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2275142,"avatar":"https://static001.geekbang.org/account/avatar/00/22/b7/46/0a587042.jpg","nickname":"李元","note":"","ucode":"FBBF0B1AD37A84","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350711,"discussion_content":"现在Java python Scala c++ tensorflow spark都要会点，写着写着最后哪个都不会了，哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613985055,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":337850,"ip_address":""},"score":350711,"extra":""}]}]},{"had_liked":false,"id":254158,"user_name":"WiFeng","can_delete":false,"product_type":"c1","uid":1043466,"ip_address":"","ucode":"D7F0FD3EC815B4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/0a/c35f9000.jpg","comment_is_top":false,"comment_ctime":1603072748,"is_pvip":false,"replies":[{"id":"92823","content":"不是，通过IDE的Spark环境执行，接近真实的生产环境。如果安装好了SparrowRecsys，直接执行Embedding object的主函数就可以了。","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1603094525,"ip_address":"","comment_id":254158,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10193007340","product_id":100060801,"comment_content":"由于之前没有实际基础过机器学习开发，请问老师，上面这些代码也是在 spark-shell 中执行吗？","like_count":3,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507301,"discussion_content":"不是，通过IDE的Spark环境执行，接近真实的生产环境。如果安装好了SparrowRecsys，直接执行Embedding object的主函数就可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603094525,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2159285,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIZCX6TPTqnEcG5piaBqtac9GjUuaYILZCjAAW0slkicu68cyeKLGw68TzSJK3LOGMMIpwPylhxEEibg/132","nickname":"InfoQ_c5e776ea6a50","note":"","ucode":"6D70BE7B2B1D81","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":313625,"discussion_content":"本地都可以运行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603077496,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":304364,"user_name":"Apache-代蒙","can_delete":false,"product_type":"c1","uid":2381219,"ip_address":"","ucode":"4BDB7139E02A0F","user_header":"https://static001.geekbang.org/account/avatar/00/24/55/a3/561138f8.jpg","comment_is_top":false,"comment_ctime":1627373366,"is_pvip":false,"replies":[{"id":"110148","content":"在机器学习中，所有参数的取值都是通过大量的离线和在线测试确定的，然后基于这些测试总结经验，几乎总是这样。","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1627429797,"ip_address":"","comment_id":304364,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5922340662","product_id":100060801,"comment_content":"老师，我注意到里面有两个参数sampleCount、sampleLength是直接下载代码里面的，这两个参数的取值有什么依据吗","like_count":2,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":524023,"discussion_content":"在机器学习中，所有参数的取值都是通过大量的离线和在线测试确定的，然后基于这些测试总结经验，几乎总是这样。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627429797,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2381219,"avatar":"https://static001.geekbang.org/account/avatar/00/24/55/a3/561138f8.jpg","nickname":"Apache-代蒙","note":"","ucode":"4BDB7139E02A0F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386358,"discussion_content":"谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627548371,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":297722,"user_name":"笑笑是个好孩子","can_delete":false,"product_type":"c1","uid":2286158,"ip_address":"","ucode":"D95535065EAD31","user_header":"https://static001.geekbang.org/account/avatar/00/22/e2/4e/c3e86856.jpg","comment_is_top":false,"comment_ctime":1623746773,"is_pvip":false,"replies":[{"id":"108164","content":"item2vec没法把打分这个label引入进来，关键步骤是按你自己的想法和标准生成每个用户的电影序列。","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1623876751,"ip_address":"","comment_id":297722,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5918714069","product_id":100060801,"comment_content":"item2vec的序列处理那块 为什么只看一个用户打分比较高的电影作为序列呀 为什么不把电影的rating作为序列呢？ 就是行是uid 列是电影id 具体的数据是某用户对于某电影的打分呢？","like_count":1,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521917,"discussion_content":"item2vec没法把打分这个label引入进来，关键步骤是按你自己的想法和标准生成每个用户的电影序列。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623876751,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":290776,"user_name":"Sean","can_delete":false,"product_type":"c1","uid":2598647,"ip_address":"","ucode":"E35C2300971FA2","user_header":"https://static001.geekbang.org/account/avatar/00/27/a6/f7/e434c375.jpg","comment_is_top":false,"comment_ctime":1619749637,"is_pvip":false,"replies":[{"id":"105444","content":"你的理解没有错误，但是item2vec正是希望发现这种相关性，比如你说用户的浏览&#47;购买记录是随机的，其实当然不是这样的，比如用户买完电脑就去买鼠标，电脑和鼠标的emb就会很接近，这里面不就蕴含着推荐逻辑吗？","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1620008947,"ip_address":"","comment_id":290776,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5914716933","product_id":100060801,"comment_content":"王喆老师你好，想请问Item2vec观念上的问题<br>根据我的了解，word2vec是藉由大量文章透过上下文来学习每个词的含义，例如「我是一名学生」和「他是一名工程师」，word2vec可以判断这两句有相似的句型，得知（我,他）是相似的，（学生,工程师）是相似的（都是一种职业）。<br>但是用户的浏览纪录可能是随机的，例如在网路商城的使用情境下，用户A的浏览顺序为(手机、耳机、电脑、保温杯)，用户B的浏览顺序为(手机、耳机、电脑、平底锅)，我们不能说(保温杯,平底锅)是相似的，但在word2vec演算法的逻辑下，因为他们的上下文一样，所以很可能会被模型认为是相似的？<br>不知道我有没有理解错误，如果是这样的话那该如何保证Item2vec是有效的呢？谢谢老师！","like_count":1,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519286,"discussion_content":"你的理解没有错误，但是item2vec正是希望发现这种相关性，比如你说用户的浏览/购买记录是随机的，其实当然不是这样的，比如用户买完电脑就去买鼠标，电脑和鼠标的emb就会很接近，这里面不就蕴含着推荐逻辑吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620008947,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":279744,"user_name":"Geek_0d974b","can_delete":false,"product_type":"c1","uid":2444779,"ip_address":"","ucode":"F344C35E3CD34B","user_header":"","comment_is_top":false,"comment_ctime":1613954221,"is_pvip":false,"replies":[{"id":"101715","content":"针对embedding冷启动问题，我专门写了一篇文章，推荐大家参考。https:&#47;&#47;zhuanlan.zhihu.com&#47;p&#47;351390011","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1614046691,"ip_address":"","comment_id":279744,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5908921517","product_id":100060801,"comment_content":"老师，如果有一个全新的item比如电影&#47;商品&#47;新闻，从来没有被用户看过，怎么能够得到其embedding 向量？","like_count":1,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515856,"discussion_content":"针对embedding冷启动问题，我专门写了一篇文章，推荐大家参考。https://zhuanlan.zhihu.com/p/351390011","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614046691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2444779,"avatar":"","nickname":"Geek_0d974b","note":"","ucode":"F344C35E3CD34B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351173,"discussion_content":"最近在你的专栏读到了，很受用，谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614171552,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":272295,"user_name":"小灵城","can_delete":false,"product_type":"c1","uid":2404950,"ip_address":"","ucode":"9EF2943E19A19A","user_header":"https://static001.geekbang.org/account/avatar/00/24/b2/56/b71ee269.jpg","comment_is_top":false,"comment_ctime":1610020526,"is_pvip":false,"replies":[{"id":"98735","content":"当然可以，node2vec主要发现的是相关性规律。一次订单的多个物品当然是相关的，要关注信息的本质，不要关注那些生硬的规则。","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1610046387,"ip_address":"","comment_id":272295,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5904987822","product_id":100060801,"comment_content":"想请问下老师，对item2vec来说，同一序列的物品可以两两节对生成输入数据。可是对node2vec需要先生成有向图然后再随机游走，如果只有序列数据但是没有先后（一次订单包含很多物品），这种情况下还可以用node2vec吗","like_count":1,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513226,"discussion_content":"当然可以，node2vec主要发现的是相关性规律。一次订单的多个物品当然是相关的，要关注信息的本质，不要关注那些生硬的规则。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610046387,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":271828,"user_name":"花花花木兰","can_delete":false,"product_type":"c1","uid":2371307,"ip_address":"","ucode":"E62939C7DADC61","user_header":"https://static001.geekbang.org/account/avatar/00/24/2e/eb/a74e5ba6.jpg","comment_is_top":false,"comment_ctime":1609829452,"is_pvip":false,"replies":[{"id":"98581","content":"基本可以这样理解，二者除了上层网络结构不同，输入层到embedding层的部分是一致的。","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1609832661,"ip_address":"","comment_id":271828,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5904796748","product_id":100060801,"comment_content":"老师，您介绍的这些embedding都是基于行为序列作为训练数据的。<br>深度学习中，比如TF中可以利用embedding层可以将one-hot向量或者multil-hot向量进行embedding转换，这两个有什么区别吗？是不是可以把TF的embedding层理解为word2vec模型的隐藏层？","like_count":1,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513059,"discussion_content":"基本可以这样理解，二者除了上层网络结构不同，输入层到embedding层的部分是一致的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609832661,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270753,"user_name":"Riyee、","can_delete":false,"product_type":"c1","uid":2335907,"ip_address":"","ucode":"4567734FEECE22","user_header":"https://static001.geekbang.org/account/avatar/00/23/a4/a3/88280531.jpg","comment_is_top":false,"comment_ctime":1609237765,"is_pvip":false,"replies":[{"id":"98281","content":"可能跟scala的版本有关系，自己调试一下","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1609354972,"ip_address":"","comment_id":270753,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5904205061","product_id":100060801,"comment_content":"在训练Item2Vec代码中：<br><br>samples的类型是：RDD[Seq[String]]<br>word2vec：是Word2Vec()出来的<br>使用<br>word2vec.fit(samples) 编译不通过，但是将samples类型改成DataFrame就可以，这是怎么一回事呢？老师！","like_count":1,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512739,"discussion_content":"可能跟scala的版本有关系，自己调试一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609354972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2403443,"avatar":"https://static001.geekbang.org/account/avatar/00/24/ac/73/5a50b859.jpg","nickname":"C.T","note":"","ucode":"ED5C30CF5A0ADC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349812,"discussion_content":"课程代码是spark.mllib.feature.word2vec。 你用的应该是spark.ml.feature.word2vec。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1613563056,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":265586,"user_name":"浣熊当家","can_delete":false,"product_type":"c1","uid":1952248,"ip_address":"","ucode":"939F06050423E4","user_header":"https://static001.geekbang.org/account/avatar/00/1d/c9/f8/72955ef9.jpg","comment_is_top":false,"comment_ctime":1606957420,"is_pvip":false,"replies":[{"id":"96557","content":"1、是可行的，因为embedding相当于对矩阵中的每个item进行了某种编码。这是编码方式的一种，其实这种编码方式有很多种。需要你自己的调研和创新。<br><br>2、有这个可能。但不能这么想，我们通过随机游走采样是一个概率性的，统计性的问题，不是这样通过特例分析的。执着于这样的special case，不是机器学习的基本思路。","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1606969473,"ip_address":"","comment_id":265586,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5901924716","product_id":100060801,"comment_content":"请问老两个问题：<br>1） 其实在我们得到了随机跳转矩阵， 就掌握了各个节点之间的连接的概率关系，是不是可以不通过随机游走这一步，而采用 什么别的方法，直接从这个概率矩阵中提取得到embedding呢？而且相比于随机游走， 直接从矩阵生成可以保留完整的信息包括， 所有的item，以及他们理论上完美的概率值。<br><br>2）我们项目里offline.spark.Embedding 中generateTransitionMatrix （line182）这个函数，感觉是会把原生序列的第一个序列的末尾一个item和下一个序列的开头item组成一组， 感觉是不是不够准确啊， 这俩item应该是没关系的？","like_count":1,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510984,"discussion_content":"1、是可行的，因为embedding相当于对矩阵中的每个item进行了某种编码。这是编码方式的一种，其实这种编码方式有很多种。需要你自己的调研和创新。\n\n2、有这个可能。但不能这么想，我们通过随机游走采样是一个概率性的，统计性的问题，不是这样通过特例分析的。执着于这样的special case，不是机器学习的基本思路。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606969473,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":261272,"user_name":"马龙流","can_delete":false,"product_type":"c1","uid":1087792,"ip_address":"","ucode":"16F9CE022297FF","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erUKWZy1fBBcJncWRNh9M3TkjThqgsIIpmGOTCyg2IN80IDf3COkeWyTLHliczAppIkfBgCJTsUn1g/132","comment_is_top":false,"comment_ctime":1605255072,"is_pvip":false,"replies":[{"id":"94812","content":"有向图","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1605258199,"ip_address":"","comment_id":261272,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5900222368","product_id":100060801,"comment_content":"老师，计算转移矩阵，用的是无向图还是有向图啊，不熟悉scala，没看懂","like_count":1,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509436,"discussion_content":"有向图","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605258199,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1284426,"avatar":"https://static001.geekbang.org/account/avatar/00/13/99/4a/09ea6699.jpg","nickname":"小小的天","note":"","ucode":"A3EC02BA37B3B9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333781,"discussion_content":"有向无环图","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607613733,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1665474,"avatar":"https://static001.geekbang.org/account/avatar/00/19/69/c2/1421acfa.jpg","nickname":"Eureka","note":"","ucode":"A02001FB409A0B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1284426,"avatar":"https://static001.geekbang.org/account/avatar/00/13/99/4a/09ea6699.jpg","nickname":"小小的天","note":"","ucode":"A3EC02BA37B3B9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":402936,"discussion_content":"这里是有向有环图吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633965565,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":333781,"ip_address":""},"score":402936,"extra":""}]}]},{"had_liked":false,"id":258276,"user_name":"Sebastian","can_delete":false,"product_type":"c1","uid":1797634,"ip_address":"","ucode":"62E6FC13DB00E3","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/55lYKUdcPFgUHibRYmaRiaBdrsmnLGOHdPp4OicjBh197X0vyGa9qAwruEqicAPuUgibXO4Lz5jLudlcbtsqq2p3CpA/132","comment_is_top":false,"comment_ctime":1604366948,"is_pvip":false,"replies":[{"id":"94070","content":"给的信息太粗了，不好说解决方法。但可以针对这些bad case分析一下为什么会跟目标物品相似。是因为都比较热门，所以相似，还是因为有什么特殊的原因共现的频率比较高？再针对性的谈解决方法。","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1604384499,"ip_address":"","comment_id":258276,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5899334244","product_id":100060801,"comment_content":"老师您好，推荐场景使用graph embedding做以物品推物品，出现很多bad case的场景应该如何调整算法呢？","like_count":1,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":508601,"discussion_content":"给的信息太粗了，不好说解决方法。但可以针对这些bad case分析一下为什么会跟目标物品相似。是因为都比较热门，所以相似，还是因为有什么特殊的原因共现的频率比较高？再针对性的谈解决方法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604384499,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":357532,"user_name":"哇哈哈","can_delete":false,"product_type":"c1","uid":1175537,"ip_address":"上海","ucode":"47453D1C96A1DD","user_header":"https://static001.geekbang.org/account/avatar/00/11/ef/f1/8b06801a.jpg","comment_is_top":false,"comment_ctime":1663339832,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1663339832","product_id":100060801,"comment_content":"没接触过 scala看不太明白代码，请问下转移矩阵里面的概率值是通过什么来确定的呢？大概得原理是什么？","like_count":0},{"had_liked":false,"id":335466,"user_name":"Geek_077c16","can_delete":false,"product_type":"c1","uid":2865974,"ip_address":"","ucode":"AD1D54BEA1F8C8","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/lAaP1UlBQOoY7NZ69iaSpbNjxibxN88LOWdG0sJLwyauLO0cAzH7dxrdRDtibC7pXtvNSTRMU7zUBBXy0DdiaMQicVg/132","comment_is_top":false,"comment_ctime":1645528285,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645528285","product_id":100060801,"comment_content":"想问下pyspark版本多少，collaborativeFiltering.py中array_join函数老是出错","like_count":0},{"had_liked":false,"id":331331,"user_name":"墨染","can_delete":false,"product_type":"c1","uid":2867323,"ip_address":"","ucode":"1476FE7AB0B084","user_header":"https://static001.geekbang.org/account/avatar/00/2b/c0/7b/677ac42f.jpg","comment_is_top":false,"comment_ctime":1642554952,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642554952","product_id":100060801,"comment_content":"纯文本资讯类的推荐，可以用这样实现吗？寻找库中相似的咨询，根据用户推荐咨询","like_count":0},{"had_liked":false,"id":319736,"user_name":"两只月牙儿","can_delete":false,"product_type":"c1","uid":2272443,"ip_address":"","ucode":"D40BA8514800DF","user_header":"https://static001.geekbang.org/account/avatar/00/22/ac/bb/5b5aea67.jpg","comment_is_top":false,"comment_ctime":1635925085,"is_pvip":false,"replies":[{"id":"116100","content":"一般不这样使用","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1636177534,"ip_address":"","comment_id":319736,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1635925085","product_id":100060801,"comment_content":"电影评分序列本身就是数据向量，可不可以直接用到模型里，不用item2vec?","like_count":0,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529750,"discussion_content":"一般不这样使用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636177534,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319539,"user_name":"FruitDealer","can_delete":false,"product_type":"c1","uid":2386643,"ip_address":"","ucode":"34C8692B5C2413","user_header":"https://static001.geekbang.org/account/avatar/00/24/6a/d3/294cb209.jpg","comment_is_top":false,"comment_ctime":1635844815,"is_pvip":false,"replies":[{"id":"115828","content":"你的理解没错，训练阶段用行为发生的时间，预测阶段用当前时间。<br><br>你疑惑的点其实是对不同上下文信息发生的混淆。最后一次行为的timestamp和当前timestamp其实是两个不同的feature。","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1635901150,"ip_address":"","comment_id":319539,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1635844815","product_id":100060801,"comment_content":"王喆老师，想要请教一下有关上下文特征这块的内容，因为没有进行过实际的推荐项目，所以上下文特征的应用上面有些想不明白。<br><br>问题是：训练阶段和预测阶段的上下文中的时间应该怎么取？<br><br>我的疑点是训练阶段时间应该用户历史点击&#47;订购（假如是一个产品推荐的场景）行为发生的时间，但是在预测阶段，对于召回的那些候选产品，这里的上下文特征中的时间是不是应该取当前用户操作的时间呢？如果是的话，这个时间感觉意义不太大。如果用最后一次点击&#47;订购产品的时间点作为上下文特征的话，预测数据中召回的那些没产生过订购行为的产品中的时间又如何取值呢？感觉训练数据和预测数据中存在一些gap","like_count":0,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529664,"discussion_content":"你的理解没错，训练阶段用行为发生的时间，预测阶段用当前时间。\n\n你疑惑的点其实是对不同上下文信息发生的混淆。最后一次行为的timestamp和当前timestamp其实是两个不同的feature。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635901150,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":316635,"user_name":"香格里拉飞龙","can_delete":false,"product_type":"c1","uid":1339856,"ip_address":"","ucode":"C1263416EE85E3","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKS70PShNZaxpibFc1gWuvibbg3hXR4YKm3MkNgX0n56hWUicN0JfB2GQ6I9UicBfKABH6dkfVDPohA6Q/132","comment_is_top":false,"comment_ctime":1634465931,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634465931","product_id":100060801,"comment_content":"王老师，这里我有两个问题：<br>1. 我在尝试item2vec时，样本中label=1，经过去重后的movieId有959个，然而生成序列、经word2vec训练后，我只得到了881个movie的Embedding向量。我多次修改了模型的windowSize，仍然只得到881个向量，请问这是正常的吗？还是我前面的过程有问题……<br>2. 我发现spark的 model.tranform 可以直接生成movie序列的Embedding，这个可否直接作为user Embedding？（依然是item2vec中，每个user对应一个movie序列）","like_count":0},{"had_liked":false,"id":314291,"user_name":"Sunshine","can_delete":false,"product_type":"c1","uid":1590522,"ip_address":"","ucode":"C0B3191D9F6530","user_header":"https://static001.geekbang.org/account/avatar/00/18/44/fa/b33769ce.jpg","comment_is_top":false,"comment_ctime":1632959654,"is_pvip":false,"replies":[{"id":"113872","content":"GPU只是让计算速度更快，但没有任何一个框架要求一定要在GPU上运行","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1633025618,"ip_address":"","comment_id":314291,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1632959654","product_id":100060801,"comment_content":"Spark实现word2vec，用到了深度学习，生产是不是需要GPU资源。","like_count":0,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527632,"discussion_content":"GPU只是让计算速度更快，但没有任何一个框架要求一定要在GPU上运行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633025618,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":311603,"user_name":"sky","can_delete":false,"product_type":"c1","uid":2325199,"ip_address":"","ucode":"C7BA135845E1FF","user_header":"https://static001.geekbang.org/account/avatar/00/23/7a/cf/c42dd74e.jpg","comment_is_top":false,"comment_ctime":1631331514,"is_pvip":false,"replies":[{"id":"113100","content":"图结构包含的信息本身和序列数据不一样。","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1631662618,"ip_address":"","comment_id":311603,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1631331514","product_id":100060801,"comment_content":"有个疑问啊，deep walk用的还是序列数据，还要费事的随机游走。。。。不多此一举吗<br>直接item2vec不就可以了吗？？","like_count":0,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526677,"discussion_content":"图结构包含的信息本身和序列数据不一样。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631662618,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2198652,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er6OV33jHia3U46ZzujGTzXwm6oXDs5FxsPp4sSGXFQSYCA92MoiaZibGgRD9JVauJos9ux3IcmNZibMg/132","nickname":"好的名字可以让你的朋友更容易记住你","note":"","ucode":"2983706D542D20","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":406222,"discussion_content":"不一样的，最初的序列数据只是单个用户在一个session会话中产生的行为数据，但是如果把多个用户的行为数据组织成一张图的话，信息更全面，可以挖掘出更多的item之间的依赖关系","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634723552,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":311601,"user_name":"sky","can_delete":false,"product_type":"c1","uid":2325199,"ip_address":"","ucode":"C7BA135845E1FF","user_header":"https://static001.geekbang.org/account/avatar/00/23/7a/cf/c42dd74e.jpg","comment_is_top":false,"comment_ctime":1631331137,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631331137","product_id":100060801,"comment_content":"有点奇怪，为啥deep walk用的还是 item2vec 的序列数据，既然随机游走后得到的还是序列数据，不是多此一举了吗》？？？","like_count":0},{"had_liked":false,"id":311418,"user_name":"sky","can_delete":false,"product_type":"c1","uid":2325199,"ip_address":"","ucode":"C7BA135845E1FF","user_header":"https://static001.geekbang.org/account/avatar/00/23/7a/cf/c42dd74e.jpg","comment_is_top":false,"comment_ctime":1631232214,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631232214","product_id":100060801,"comment_content":" 老师，我想问下，下面代码在模型保存时候，为何本地，模型文件不更新呢<br><br>&#47;&#47;保存模型  val embFolderPath = this.getClass.getResource(&quot;&#47;webroot&#47;sampledata&#47;&quot;)  val file = new File(embFolderPath.getPath + &quot;embedding.txt&quot;)  val bw = new BufferedWriter(new FileWriter(file))  var id = 0<br><br>","like_count":0},{"had_liked":false,"id":308010,"user_name":"海","can_delete":false,"product_type":"c1","uid":2365092,"ip_address":"","ucode":"6451D97215C765","user_header":"https://static001.geekbang.org/account/avatar/00/24/16/a4/7aaa136f.jpg","comment_is_top":false,"comment_ctime":1629357086,"is_pvip":false,"replies":[{"id":"111632","content":"这个可以自己多思考一下，我觉得并不难尝试出可行的办法。","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1629502076,"ip_address":"","comment_id":308010,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1629357086","product_id":100060801,"comment_content":"老师，请问如果item出现高频，训练出来的相似视频会大多为高频视频，如何降频减弱影响？","like_count":0,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525367,"discussion_content":"这个可以自己多思考一下，我觉得并不难尝试出可行的办法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629502076,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":306443,"user_name":"Geek_de83f6","can_delete":false,"product_type":"c1","uid":2170148,"ip_address":"","ucode":"3EFB4DC01C222D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKn2fx2UTaWgMl3fSOSicJEDOibbtYicHUVSG8JsA8j6Njibc9j3YVSvHtMZb2Z20l4NmjibiaSv8m7hz9w/132","comment_is_top":false,"comment_ctime":1628564422,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1628564422","product_id":100060801,"comment_content":"用scala写代码，又不讲scala语法，代码看不懂……","like_count":0,"discussions":[{"author":{"id":1809935,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/l3RGUX8aLnPLmsQsra0yU5d8m7Se5jdVpaC3bkb99FuY11BPQNAsH4MPXbZjCTia9VVwn8lnBnKLkdfSiabOgxKg/132","nickname":"Geek_e0d66a","note":"","ucode":"5078900C9CF936","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392149,"discussion_content":"这个大哥，真的是对你很无语。看不懂，不会自己去学习么，本来这个课程就是有基础门槛的啊","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1630856181,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2735741,"avatar":"https://static001.geekbang.org/account/avatar/00/29/be/7d/33f732f3.jpg","nickname":"Lennon.Lau","note":"","ucode":"515CD55F5E37D2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586423,"discussion_content":"看不懂，不会去学吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662197004,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"四川"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":305513,"user_name":"胡景方","can_delete":false,"product_type":"c1","uid":2719584,"ip_address":"","ucode":"67371485F96D70","user_header":"https://static001.geekbang.org/account/avatar/00/29/7f/60/9d7bae85.jpg","comment_is_top":false,"comment_ctime":1628005167,"is_pvip":false,"replies":[{"id":"110499","content":"是由用户评分序列的前后顺序中学到的相关性","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1628046867,"ip_address":"","comment_id":305513,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1628005167","product_id":100060801,"comment_content":"补充一下，我理解是样本处理模块得出的结果本质上就是一堆分数较高的movieid，而模型训练部分，输入的item592，也就是个movieid，他们是怎么关联起来的呢？我觉得第一步得出的样本中至少得包括电影类型之类的要素，才能够够对592类似的item进行推荐呀，不然完全没有内在的推荐逻辑呀～老师能够解答下吗？","like_count":0,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":524411,"discussion_content":"是由用户评分序列的前后顺序中学到的相关性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628046867,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1339856,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKS70PShNZaxpibFc1gWuvibbg3hXR4YKm3MkNgX0n56hWUicN0JfB2GQ6I9UicBfKABH6dkfVDPohA6Q/132","nickname":"香格里拉飞龙","note":"","ucode":"C1263416EE85E3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":407973,"discussion_content":"我的理解是，一个用户，他喜欢的电影是可能有一定倾向性的。把单个用户评分高的电影id作为序列放入item2vec，可以探寻这种倾向性。且一个人喜欢a电影，也喜欢b电影，同时有许多其他用户也是喜欢a也喜欢b，就可以说明a和b有一定相似性。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635160696,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2719584,"avatar":"https://static001.geekbang.org/account/avatar/00/29/7f/60/9d7bae85.jpg","nickname":"胡景方","note":"","ucode":"67371485F96D70","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387206,"discussion_content":"也就是说例子中注释说的   查找的跟592最相近的20个items，  其实找的是跟592分数比较类似的电影是吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628052146,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":305511,"user_name":"胡景方","can_delete":false,"product_type":"c1","uid":2719584,"ip_address":"","ucode":"67371485F96D70","user_header":"https://static001.geekbang.org/account/avatar/00/29/7f/60/9d7bae85.jpg","comment_is_top":false,"comment_ctime":1628004596,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628004596","product_id":100060801,"comment_content":"有个疑问，item2vec中得到的都是评分高的样本，但是模型训练中求的是movieid为592的类似的电影，总觉得这两者没有任何内在的关联性，这是怎么一个内在逻辑来推荐的呢，好像根据这个样本得出这样的模型推荐结果，没内在逻辑，讲不通啊？是我哪里理解错了吗？","like_count":0},{"had_liked":false,"id":288641,"user_name":"郭翊麟","can_delete":false,"product_type":"c1","uid":2438072,"ip_address":"","ucode":"BA37CAE065CF30","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/FydBiarFhvwAxkA2fL3IpEGcd31xAfo8WicAgxreCSbPgo0IdcHkAwZQDZDiaeAJg7u2UKqSEmzr8Mopf9lFY1IEw/132","comment_is_top":false,"comment_ctime":1618575103,"is_pvip":false,"replies":[{"id":"104858","content":"这行代码是要把 movieIds 转换成 一个以空格分割的字符串<br><br>比如把  [3,4,7,10]转换成 &quot;3 4 7 10&quot;","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1618773739,"ip_address":"","comment_id":288641,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1618575103","product_id":100060801,"comment_content":"王老师 您好 在item2vec的数据处理  47行.withColumn(&quot;movieIdStr&quot;, array_join(col(&quot;movieIds&quot;), &quot; &quot;)) 经过多次试验 发现删除和不删除结果相同，想问一下老师这步是要做什么？","like_count":0,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518692,"discussion_content":"这行代码是要把 movieIds 转换成 一个以空格分割的字符串\n\n比如把  [3,4,7,10]转换成 &amp;quot;3 4 7 10&amp;quot;","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618773739,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":288280,"user_name":"多肽","can_delete":false,"product_type":"c1","uid":2551085,"ip_address":"","ucode":"389078D77FF908","user_header":"https://static001.geekbang.org/account/avatar/00/26/ed/2d/1066a76f.jpg","comment_is_top":false,"comment_ctime":1618390488,"is_pvip":false,"replies":[{"id":"104772","content":"item2vec最初是微软提出的基于word2vec的模型，所以是基于word2vec的，当然广义来说任何能把item转换成embedding的都可以叫item2vec。参数调优就是通过深度学习的一般调优方法来进行了，没有什么特殊的经验。","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1618632479,"ip_address":"","comment_id":288280,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1618390488","product_id":100060801,"comment_content":"老师你好，计算item2vec为什么要用word2vec模型呢，item2vec不是没有window的概念？一定要用word2vec的话，参数setWindowSize，setVectorSize是怎么敲定的？是不是要像传统机器学习一样搞个grid search？","like_count":0,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518570,"discussion_content":"item2vec最初是微软提出的基于word2vec的模型，所以是基于word2vec的，当然广义来说任何能把item转换成embedding的都可以叫item2vec。参数调优就是通过深度学习的一般调优方法来进行了，没有什么特殊的经验。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618632479,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":284244,"user_name":"Geek_9d589c","can_delete":false,"product_type":"c1","uid":2404154,"ip_address":"","ucode":"4E7D6A4D62FCBC","user_header":"","comment_is_top":false,"comment_ctime":1616136196,"is_pvip":false,"replies":[{"id":"103420","content":"我印象中我使用了高分电影做平均得到user embedding，也有可能记错。<br><br>欢迎在github中写明理由，提出PR。","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1616636753,"ip_address":"","comment_id":284244,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1616136196","product_id":100060801,"comment_content":"用movie Embedding 构造user Embedding的时候需不需要依据rating filter 出 高评分的movie？Github中的代码没有这么做而是使用所有movie embedding。比如一个user给A，B，C电影都了低分，我们是不是不应该用A，B，C的embedding去平均这个user的embedding？","like_count":0,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517283,"discussion_content":"我印象中我使用了高分电影做平均得到user embedding，也有可能记错。\n\n欢迎在github中写明理由，提出PR。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616636753,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":275412,"user_name":"小强","can_delete":false,"product_type":"c1","uid":2398148,"ip_address":"","ucode":"C3D1215867302D","user_header":"https://static001.geekbang.org/account/avatar/00/24/97/c4/6c92c78a.jpg","comment_is_top":false,"comment_ctime":1611513161,"is_pvip":false,"replies":[{"id":"99971","content":"不是特别理解这个思路，但这种问题一般自己去debug一下，看看中间变量是否正确就可以验证，能自己验证最好自己去验证。","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1611551559,"ip_address":"","comment_id":275412,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1611513161","product_id":100060801,"comment_content":"在processItemSequence()函数中，以userId为groupBy的key，得到观影序列。以userId为10096的用户为例，一共有三步：<br>第一步：用sortF生成movieIds，得到[858, 50, 593, 457]<br>第二步：用array_join生成movieIdStr，得到858 50 593 457<br>第三步：用df.rdd.map()和lambda函数，得到[&#39;858&#39;, &#39;50&#39;, &#39;593&#39;, &#39;457&#39;]<br><br>是否可以直接在第一步的sortF函数中return [str(x[0]) for x in pairs]，省略后面的步骤呢？<br>","like_count":0,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514336,"discussion_content":"不是特别理解这个思路，但这种问题一般自己去debug一下，看看中间变量是否正确就可以验证，能自己验证最好自己去验证。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611551559,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":275365,"user_name":"Capricornus","can_delete":false,"product_type":"c1","uid":2371321,"ip_address":"","ucode":"B7B15C58653860","user_header":"https://static001.geekbang.org/account/avatar/00/24/2e/f9/c0a6232c.jpg","comment_is_top":false,"comment_ctime":1611491672,"is_pvip":false,"replies":[{"id":"99967","content":"这应该不是一个很难的问题，你从word2vec的原理出发觉得会怎么处理？","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1611551293,"ip_address":"","comment_id":275365,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1611491672","product_id":100060801,"comment_content":"WrappedArray(356, 364)<br>WrappedArray(593, 260, 969, 110, 589, 457, 6, 377, 555, 480)<br>WrappedArray(19, 589, 110, 733, 592, 377, 353, 198, 293, 260, 47, 741, 6)<br>老师这是观影序列，在对每个序列滑动采样时，我们设置的滑动窗口大小是5。那这些序列长度大小小于5的怎么处理呢？","like_count":0,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514325,"discussion_content":"这应该不是一个很难的问题，你从word2vec的原理出发觉得会怎么处理？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611551293,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2527743,"avatar":"https://static001.geekbang.org/account/avatar/00/26/91/ff/aa5e573a.jpg","nickname":"牛牪犇","note":"","ucode":"007A5E511EA243","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361687,"discussion_content":"我就直接复制了，凑足5个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616729451,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2381219,"avatar":"https://static001.geekbang.org/account/avatar/00/24/55/a3/561138f8.jpg","nickname":"Apache-代蒙","note":"","ucode":"4BDB7139E02A0F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2527743,"avatar":"https://static001.geekbang.org/account/avatar/00/26/91/ff/aa5e573a.jpg","nickname":"牛牪犇","note":"","ucode":"007A5E511EA243","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385487,"discussion_content":"请问这么做效果怎么样啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627094696,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":361687,"ip_address":""},"score":385487,"extra":""}]}]},{"had_liked":false,"id":273808,"user_name":"C.","can_delete":false,"product_type":"c1","uid":1708876,"ip_address":"","ucode":"E0605DCD3A1025","user_header":"https://static001.geekbang.org/account/avatar/00/1a/13/4c/7e742c63.jpg","comment_is_top":false,"comment_ctime":1610683995,"is_pvip":false,"replies":[{"id":"99573","content":"嗯嗯，读代码逻辑看起来确实写反了。可以帮我验证一下结果，然后提交一个PR吗？","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1610948816,"ip_address":"","comment_id":273808,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1610683995","product_id":100060801,"comment_content":"王老师，github最新的关于随机游走的代码：<br>breakable { for(_ &lt;- 1 until sampleLength) {<br>      if (!itemDistribution.contains(curElement) || !transitionMatrix.contains(curElement)){<br>        break<br>      }<br><br>      val probDistribution = transitionMatrix(curElement)<br>      val randomDouble = Random.nextDouble()<br>      breakable { for ((item, prob) &lt;- probDistribution) {<br>        if (randomDouble &gt;= prob){<br>          curElement = item<br>          break<br>        }<br>      }}<br>      sample.append(curElement)<br>    }}<br><br>这个里面randomDouble &gt;= prob ，符号是不是反了？","like_count":0,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513815,"discussion_content":"嗯嗯，读代码逻辑看起来确实写反了。可以帮我验证一下结果，然后提交一个PR吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610948816,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":273370,"user_name":"tuomasiii","can_delete":false,"product_type":"c1","uid":2370755,"ip_address":"","ucode":"49B732F80C5B68","user_header":"","comment_is_top":false,"comment_ctime":1610554390,"is_pvip":false,"replies":[{"id":"99049","content":"我在14讲会涉及这个问题，但也希望你自己多思考，这不是一个别人应该告诉你答案的问题。","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1610563290,"ip_address":"","comment_id":273370,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1610554390","product_id":100060801,"comment_content":"想问下老师  像w2v有没有办法可以evaluate？<br>比如embLength=20的话，怎么才能知道有没有比embLength=10效果更好？<br>","like_count":0,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513580,"discussion_content":"我在14讲会涉及这个问题，但也希望你自己多思考，这不是一个别人应该告诉你答案的问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610563290,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":266577,"user_name":"王嘉伟","can_delete":false,"product_type":"c1","uid":1592782,"ip_address":"","ucode":"FA1D9AE9B91F84","user_header":"","comment_is_top":false,"comment_ctime":1607398311,"is_pvip":false,"replies":[{"id":"96827","content":"是不是没有配置好scala环境？我们使用2.11 scala版本，可以查一下怎么在idea中配置scala环境，再运行一下试试。","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1607467425,"ip_address":"","comment_id":266577,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1607398311","product_id":100060801,"comment_content":"你好老师，运行Embedding.scala这个文件时候一直报 error: illegal start of definition<br>package com.wzhe.sparrowrecsys.offline.spark.embedding这个错，网上貌似也找不着有用的解决方案。之前没接触过scala的项目不太懂有啥东西需要装的吗","like_count":0,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511319,"discussion_content":"是不是没有配置好scala环境？我们使用2.11 scala版本，可以查一下怎么在idea中配置scala环境，再运行一下试试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607467425,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":266118,"user_name":"花晨少年","can_delete":false,"product_type":"c1","uid":1098987,"ip_address":"","ucode":"6AA3537A6BA10E","user_header":"https://static001.geekbang.org/account/avatar/00/10/c4/eb/2285a345.jpg","comment_is_top":false,"comment_ctime":1607175478,"is_pvip":false,"replies":[{"id":"96676","content":"你有什么好的想法没有，欢迎分享思考。后续课程和课程讨论里面也有相关的内容，也欢迎参考。","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1607215827,"ip_address":"","comment_id":266118,"utype":1}],"discussion_count":4,"race_medal":0,"score":"1607175478","product_id":100060801,"comment_content":"老师请问，像item2vec和随机游走这种embedding技术，只能生成物品侧的embedding，那对于用户侧的embedding，怎么生成呢","like_count":0,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511156,"discussion_content":"你有什么好的想法没有，欢迎分享思考。后续课程和课程讨论里面也有相关的内容，也欢迎参考。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607215827,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1293829,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKQUKhAY64yhtWOzrwNWn6OoXcNicneBG83EUI3p6B0HrNHjc67BfP3ah8rodtLicoNgKFKibvCuHxTw/132","nickname":"Geek_357911","note":"","ucode":"754A8C9B25A006","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335632,"discussion_content":"简单的可以把用户点击物品的历史序列avg作为用户侧embedding ，远期和近期的物品可以赋予不同权重","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608257872,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1098987,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/eb/2285a345.jpg","nickname":"花晨少年","note":"","ucode":"6AA3537A6BA10E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332981,"discussion_content":"嗯。我觉得最简单的应该是用户点击过的物品embedding加权求和。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607407863,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":1098987,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/eb/2285a345.jpg","nickname":"花晨少年","note":"","ucode":"6AA3537A6BA10E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":334572,"discussion_content":"是这样的，其实加权和就是attention的思路，做平均就是average pooling的思路，还有一些序列模型的之类的解决方案，后续可以继续学习。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1607903796,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":332981,"ip_address":""},"score":334572,"extra":""}]}]},{"had_liked":false,"id":263053,"user_name":"马龙流","can_delete":false,"product_type":"c1","uid":1087792,"ip_address":"","ucode":"16F9CE022297FF","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erUKWZy1fBBcJncWRNh9M3TkjThqgsIIpmGOTCyg2IN80IDf3COkeWyTLHliczAppIkfBgCJTsUn1g/132","comment_is_top":false,"comment_ctime":1605964576,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1605964576","product_id":100060801,"comment_content":"deep walk相比较原始的item2vec，好在哪里呢","like_count":0,"discussions":[{"author":{"id":2325199,"avatar":"https://static001.geekbang.org/account/avatar/00/23/7a/cf/c42dd74e.jpg","nickname":"sky","note":"","ucode":"C7BA135845E1FF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393259,"discussion_content":"我也有疑问，deep walk用的还是序列数据，还要费事的随机游走。。。。不多此一举吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631331264,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":260458,"user_name":"不锈刚丝","can_delete":false,"product_type":"c1","uid":2206611,"ip_address":"","ucode":"434041FF8114BD","user_header":"https://static001.geekbang.org/account/avatar/00/21/ab/93/05e70412.jpg","comment_is_top":false,"comment_ctime":1605012634,"is_pvip":false,"replies":[{"id":"94632","content":"当然可以。","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1605079232,"ip_address":"","comment_id":260458,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1605012634","product_id":100060801,"comment_content":"老师，我看了你的demo你把embedding出来的向量用来找相似了，我想问一下，这个向量能否用作其他算法模型的训练样本维度特征，比如说逻辑回归。","like_count":0,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509197,"discussion_content":"当然可以。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605079232,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":255536,"user_name":"Todd","can_delete":false,"product_type":"c1","uid":1017248,"ip_address":"","ucode":"64A306C44F8EC7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/85/a0/3d423435.jpg","comment_is_top":false,"comment_ctime":1603367650,"is_pvip":false,"replies":[{"id":"93150","content":"没有从github上clone SparrowRecSys项目吗？这节课的所有实践代码都在这个项目里面。<br><br>这节课的内容请参考com.wzhe.sparrowrecsys.offline.spark.embedding类","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1603413205,"ip_address":"","comment_id":255536,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1603367650","product_id":100060801,"comment_content":"最后一行代码bug，有没有github？","like_count":0,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507746,"discussion_content":"没有从github上clone SparrowRecSys项目吗？这节课的所有实践代码都在这个项目里面。\n\n这节课的内容请参考com.wzhe.sparrowrecsys.offline.spark.embedding类","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603413205,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":254643,"user_name":"芳菲菲兮满堂","can_delete":false,"product_type":"c1","uid":1000860,"ip_address":"","ucode":"C8D89999C201F1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/45/9c/5b06d143.jpg","comment_is_top":false,"comment_ctime":1603161376,"is_pvip":true,"replies":[{"id":"92935","content":"用pyspark肯定也没问题。但因为spark是原生支持scala，所以大部分团队，特别是专门的数据团队是以scala为主。","user_name":"作者回复","user_name_real":"王喆","uid":"1662192","ctime":1603219748,"ip_address":"","comment_id":254643,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1603161376","product_id":100060801,"comment_content":"老师 生产环境对spark的调用都是用scala吗？有用python的吗？","like_count":0,"discussions":[{"author":{"id":1662192,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5c/f0/46214d29.jpg","nickname":"王喆","note":"","ucode":"2EDC616F905F3F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507467,"discussion_content":"用pyspark肯定也没问题。但因为spark是原生支持scala，所以大部分团队，特别是专门的数据团队是以scala为主。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603219748,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2406718,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJxibnALAhRxYffic6nFLG3rzgYfD2Os1dz4bxcJzUhE7vCk8lIy4MicdVWO6DhicDkcSicTOw2H4cWTcQ/132","nickname":"Geek_856c8e","note":"","ucode":"0616D716B7B098","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":362328,"discussion_content":"老师，能问一下item2vec中包含负采样么，能讲一下是怎么做负采样的么\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616921661,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2264679,"avatar":"https://static001.geekbang.org/account/avatar/00/22/8e/67/afb412fb.jpg","nickname":"陈威洋","note":"","ucode":"DCF84B4D3A7354","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2406718,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJxibnALAhRxYffic6nFLG3rzgYfD2Os1dz4bxcJzUhE7vCk8lIy4MicdVWO6DhicDkcSicTOw2H4cWTcQ/132","nickname":"Geek_856c8e","note":"","ucode":"0616D716B7B098","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386772,"discussion_content":"可以自己看一下 word2Vec 的论文，里面详细介绍了负采样！~\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627789538,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":362328,"ip_address":""},"score":386772,"extra":""}]}]}]}