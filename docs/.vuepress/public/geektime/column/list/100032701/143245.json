{"id":143245,"title":"23 | Linux利器：epoll的前世今生","content":"<p>你好，我是盛延敏，这里是网络编程实战第23讲，欢迎回来。</p><p>性能篇的前三讲，非阻塞I/O加上I/O多路复用，已经渐渐帮助我们在高性能网络编程这个领域搭建了初步的基石。但是，离最终的目标还差那么一点，如果说I/O多路复用帮我们打开了高性能网络编程的窗口，那么今天的主题——epoll，将为我们增添足够的动力。</p><p>这里有放置了一张图，这张图来自The Linux Programming Interface(No Starch Press)。这张图直观地为我们展示了select、poll、epoll几种不同的I/O复用技术在面对不同文件描述符大小时的表现差异。</p><p><img src=\"https://static001.geekbang.org/resource/image/fd/60/fd2e25f72a5103ef78c05c7ad2dab060.png?wh=681*129\" alt=\"\"><br>\n从图中可以明显地看到，epoll的性能是最好的，即使在多达10000个文件描述的情况下，其性能的下降和有10个文件描述符的情况相比，差别也不是很大。而随着文件描述符的增大，常规的select和poll方法性能逐渐变得很差。</p><p>那么，epoll究竟使用了什么样的“魔法”，取得了如此令人惊讶的效果呢？接下来，我们就来一起分析一下。</p><h2>epoll的用法</h2><p>在分析对比epoll、poll和select几种技术之前，我们先看一下怎么使用epoll来完成一个服务器程序，具体的原理我将在29讲中进行讲解。</p><!-- [[[read_end]]] --><p>epoll可以说是和poll非常相似的一种I/O多路复用技术，有些朋友将epoll归为异步I/O，我觉得这是不正确的。本质上epoll还是一种I/O多路复用技术， epoll通过监控注册的多个描述字，来进行I/O事件的分发处理。不同于poll的是，epoll不仅提供了默认的level-triggered（条件触发）机制，还提供了性能更为强劲的edge-triggered（边缘触发）机制。至于这两种机制的区别，我会在后面详细展开。</p><p>使用epoll进行网络程序的编写，需要三个步骤，分别是epoll_create，epoll_ctl和epoll_wait。接下来我对这几个API详细展开讲一下。</p><h3>epoll_create</h3><pre><code>int epoll_create(int size);\nint epoll_create1(int flags);\n        返回值: 若成功返回一个大于0的值，表示epoll实例；若返回-1表示出错\n</code></pre><p>epoll_create()方法创建了一个epoll实例，从Linux 2.6.8开始，参数size被自动忽略，但是该值仍需要一个大于0的整数。这个epoll实例被用来调用epoll_ctl和epoll_wait，如果这个epoll实例不再需要，比如服务器正常关机，需要调用close()方法释放epoll实例，这样系统内核可以回收epoll实例所分配使用的内核资源。</p><p>关于这个参数size，在一开始的epoll_create实现中，是用来告知内核期望监控的文件描述字大小，然后内核使用这部分的信息来初始化内核数据结构，在新的实现中，这个参数不再被需要，因为内核可以动态分配需要的内核数据结构。我们只需要注意，每次将size设置成一个大于0的整数就可以了。</p><p>epoll_create1()的用法和epoll_create()基本一致，如果epoll_create1()的输入flags为0，则和epoll_create()一样，内核自动忽略。可以增加如EPOLL_CLOEXEC的额外选项，如果你有兴趣的话，可以研究一下这个选项有什么意义。</p><h3>epoll_ctl</h3><pre><code> int epoll_ctl(int epfd, int op, int fd, struct epoll_event *event);\n        返回值: 若成功返回0；若返回-1表示出错\n</code></pre><p>在创建完epoll实例之后，可以通过调用epoll_ctl往这个epoll实例增加或删除监控的事件。函数epll_ctl有4个入口参数。</p><p>第一个参数epfd是刚刚调用epoll_create创建的epoll实例描述字，可以简单理解成是epoll句柄。</p><p>第二个参数表示增加还是删除一个监控事件，它有三个选项可供选择：</p><ul>\n<li>EPOLL_CTL_ADD： 向epoll实例注册文件描述符对应的事件；</li>\n<li>EPOLL_CTL_DEL：向epoll实例删除文件描述符对应的事件；</li>\n<li>EPOLL_CTL_MOD： 修改文件描述符对应的事件。</li>\n</ul><p>第三个参数是注册的事件的文件描述符，比如一个监听套接字。</p><p>第四个参数表示的是注册的事件类型，并且可以在这个结构体里设置用户需要的数据，其中最为常见的是使用联合结构里的fd字段，表示事件所对应的文件描述符。</p><pre><code>typedef union epoll_data {\n     void        *ptr;\n     int          fd;\n     uint32_t     u32;\n     uint64_t     u64;\n } epoll_data_t;\n\n struct epoll_event {\n     uint32_t     events;      /* Epoll events */\n     epoll_data_t data;        /* User data variable */\n };\n</code></pre><p>我们在前面介绍poll的时候已经接触过基于mask的事件类型了，这里epoll仍旧使用了同样的机制，我们重点看一下这几种事件类型：</p><ul>\n<li>EPOLLIN：表示对应的文件描述字可以读；</li>\n<li>EPOLLOUT：表示对应的文件描述字可以写；</li>\n<li>EPOLLRDHUP：表示套接字的一端已经关闭，或者半关闭；</li>\n<li>EPOLLHUP：表示对应的文件描述字被挂起；</li>\n<li>EPOLLET：设置为edge-triggered，默认为level-triggered。</li>\n</ul><h3>epoll_wait</h3><pre><code>int epoll_wait(int epfd, struct epoll_event *events, int maxevents, int timeout);\n  返回值: 成功返回的是一个大于0的数，表示事件的个数；返回0表示的是超时时间到；若出错返回-1.\n</code></pre><p>epoll_wait()函数类似之前的poll和select函数，调用者进程被挂起，在等待内核I/O事件的分发。</p><p>这个函数的第一个参数是epoll实例描述字，也就是epoll句柄。</p><p>第二个参数返回给用户空间需要处理的I/O事件，这是一个数组，数组的大小由epoll_wait的返回值决定，这个数组的每个元素都是一个需要待处理的I/O事件，其中events表示具体的事件类型，事件类型取值和epoll_ctl可设置的值一样，这个epoll_event结构体里的data值就是在epoll_ctl那里设置的data，也就是用户空间和内核空间调用时需要的数据。</p><p>第三个参数是一个大于0的整数，表示epoll_wait可以返回的最大事件值。</p><p>第四个参数是epoll_wait阻塞调用的超时值，如果这个值设置为-1，表示不超时；如果设置为0则立即返回，即使没有任何I/O事件发生。</p><h2>epoll例子</h2><h3>代码解析</h3><p>下面我们把原先基于poll的服务器端程序改造成基于epoll的：</p><pre><code>#include &quot;lib/common.h&quot;\n\n#define MAXEVENTS 128\n\nchar rot13_char(char c) {\n    if ((c &gt;= 'a' &amp;&amp; c &lt;= 'm') || (c &gt;= 'A' &amp;&amp; c &lt;= 'M'))\n        return c + 13;\n    else if ((c &gt;= 'n' &amp;&amp; c &lt;= 'z') || (c &gt;= 'N' &amp;&amp; c &lt;= 'Z'))\n        return c - 13;\n    else\n        return c;\n}\n\nint main(int argc, char **argv) {\n    int listen_fd, socket_fd;\n    int n, i;\n    int efd;\n    struct epoll_event event;\n    struct epoll_event *events;\n\n    listen_fd = tcp_nonblocking_server_listen(SERV_PORT);\n\n    efd = epoll_create1(0);\n    if (efd == -1) {\n        error(1, errno, &quot;epoll create failed&quot;);\n    }\n\n    event.data.fd = listen_fd;\n    event.events = EPOLLIN | EPOLLET;\n    if (epoll_ctl(efd, EPOLL_CTL_ADD, listen_fd, &amp;event) == -1) {\n        error(1, errno, &quot;epoll_ctl add listen fd failed&quot;);\n    }\n\n    /* Buffer where events are returned */\n    events = calloc(MAXEVENTS, sizeof(event));\n\n    while (1) {\n        n = epoll_wait(efd, events, MAXEVENTS, -1);\n        printf(&quot;epoll_wait wakeup\\n&quot;);\n        for (i = 0; i &lt; n; i++) {\n            if ((events[i].events &amp; EPOLLERR) ||\n                (events[i].events &amp; EPOLLHUP) ||\n                (!(events[i].events &amp; EPOLLIN))) {\n                fprintf(stderr, &quot;epoll error\\n&quot;);\n                close(events[i].data.fd);\n                continue;\n            } else if (listen_fd == events[i].data.fd) {\n                struct sockaddr_storage ss;\n                socklen_t slen = sizeof(ss);\n                int fd = accept(listen_fd, (struct sockaddr *) &amp;ss, &amp;slen);\n                if (fd &lt; 0) {\n                    error(1, errno, &quot;accept failed&quot;);\n                } else {\n                    make_nonblocking(fd);\n                    event.data.fd = fd;\n                    event.events = EPOLLIN | EPOLLET; //edge-triggered\n                    if (epoll_ctl(efd, EPOLL_CTL_ADD, fd, &amp;event) == -1) {\n                        error(1, errno, &quot;epoll_ctl add connection fd failed&quot;);\n                    }\n                }\n                continue;\n            } else {\n                socket_fd = events[i].data.fd;\n                printf(&quot;get event on socket fd == %d \\n&quot;, socket_fd);\n                while (1) {\n                    char buf[512];\n                    if ((n = read(socket_fd, buf, sizeof(buf))) &lt; 0) {\n                        if (errno != EAGAIN) {\n                            error(1, errno, &quot;read error&quot;);\n                            close(socket_fd);\n                        }\n                        break;\n                    } else if (n == 0) {\n                        close(socket_fd);\n                        break;\n                    } else {\n                        for (i = 0; i &lt; n; ++i) {\n                            buf[i] = rot13_char(buf[i]);\n                        }\n                        if (write(socket_fd, buf, n) &lt; 0) {\n                            error(1, errno, &quot;write error&quot;);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    free(events);\n    close(listen_fd);\n}\n</code></pre><p>程序的第23行调用epoll_create0创建了一个epoll实例。</p><p>28-32行，调用epoll_ctl将监听套接字对应的I/O事件进行了注册，这样在有新的连接建立之后，就可以感知到。注意这里使用的是edge-triggered（边缘触发）。</p><p>35行为返回的event数组分配了内存。</p><p>主循环调用epoll_wait函数分发I/O事件，当epoll_wait成功返回时，通过遍历返回的event数组，就直接可以知道发生的I/O事件。</p><p>第41-46行判断了各种错误情况。</p><p>第47-61行是监听套接字上有事件发生的情况下，调用accept获取已建立连接，并将该连接设置为非阻塞，再调用epoll_ctl把已连接套接字对应的可读事件注册到epoll实例中。这里我们使用了event_data里面的fd字段，将连接套接字存储其中。</p><p>第63-84行，处理了已连接套接字上的可读事件，读取字节流，编码后再回应给客户端。</p><h3>实验</h3><p>启动该服务器：</p><pre><code>$./epoll01\nepoll_wait wakeup\nepoll_wait wakeup\nepoll_wait wakeup\nget event on socket fd == 6\nepoll_wait wakeup\nget event on socket fd == 5\nepoll_wait wakeup\nget event on socket fd == 5\nepoll_wait wakeup\nget event on socket fd == 6\nepoll_wait wakeup\nget event on socket fd == 6\nepoll_wait wakeup\nget event on socket fd == 6\nepoll_wait wakeup\nget event on socket fd == 5\n</code></pre><p>再启动几个telnet客户端，可以看到有连接建立情况下，epoll_wait迅速从挂起状态结束；并且套接字上有数据可读时，epoll_wait也迅速结束挂起状态，这时候通过read可以读取套接字接收缓冲区上的数据。</p><pre><code>$telnet 127.0.0.1 43211\nTrying 127.0.0.1...\nConnected to 127.0.0.1.\nEscape character is '^]'.\nfasfsafas\nsnfsfnsnf\n^]\ntelnet&gt; quit\nConnection closed.\n</code></pre><h2>edge-triggered VS level-triggered</h2><p>对于edge-triggered和level-triggered， 官方的说法是一个是边缘触发，一个是条件触发。也有文章从电子脉冲角度来解读的，总体上，给初学者的带来的感受是理解上有困难。</p><p>这里有两个程序，我们用这个程序来说明一下这两者之间的不同。</p><p>在这两个程序里，即使已连接套接字上有数据可读，我们也不调用read函数去读，只是简单地打印出一句话。</p><p>第一个程序我们设置为edge-triggered，即边缘触发。开启这个服务器程序，用telnet连接上，输入一些字符，我们看到，服务器端只从epoll_wait中苏醒过一次，就是第一次有数据可读的时候。</p><pre><code>$./epoll02\nepoll_wait wakeup\nepoll_wait wakeup\nget event on socket fd == 5\n</code></pre><pre><code>$telnet 127.0.0.1 43211\nTrying 127.0.0.1...\nConnected to 127.0.0.1.\nEscape character is '^]'.\nasfafas\n</code></pre><p>第二个程序我们设置为level-triggered，即条件触发。然后按照同样的步骤来一次，观察服务器端，这一次我们可以看到，服务器端不断地从epoll_wait中苏醒，告诉我们有数据需要读取。</p><pre><code>$./epoll03\nepoll_wait wakeup\nepoll_wait wakeup\nget event on socket fd == 5\nepoll_wait wakeup\nget event on socket fd == 5\nepoll_wait wakeup\nget event on socket fd == 5\nepoll_wait wakeup\nget event on socket fd == 5\n...\n</code></pre><p>这就是两者的区别，条件触发的意思是只要满足事件的条件，比如有数据需要读，就一直不断地把这个事件传递给用户；而边缘触发的意思是只有第一次满足条件的时候才触发，之后就不会再传递同样的事件了。</p><p>一般我们认为，边缘触发的效率比条件触发的效率要高，这一点也是epoll的杀手锏之一。</p><h2>epoll的历史</h2><p>早在Linux实现epoll之前，Windows系统就已经在1994年引入了IOCP，这是一个异步I/O模型，用来支持高并发的网络I/O，而著名的FreeBSD在2000年引入了Kqueue——一个I/O事件分发框架。</p><p>Linux在2002年引入了epoll，不过相关工作的讨论和设计早在2000年就开始了。如果你感兴趣的话，可以<a href=\"http:// <a href=\" http:=\"\" lkml.iu.edu=\"\" hypermail=\"\" linux=\"\" kernel=\"\" 0010.3=\"\" 0003.html\"=\"\">http://lkml.iu.edu/hypermail/linux/kernel/0010.3/0003.html</a>\"&gt;点击这里看一下里面的讨论。</p><p>为什么Linux不把FreeBSD的kqueue直接移植过来，而是另辟蹊径创立了epoll呢？</p><p>让我们先看下kqueue的用法，kqueue也需要先创建一个名叫kqueue的对象，然后通过这个对象，调用kevent函数增加感兴趣的事件，同时，也是通过这个kevent函数来等待事件的发生。</p><pre><code>int kqueue(void);\nint kevent(int kq, const struct kevent *changelist, int nchanges,\n　　　　　 struct kevent *eventlist, int nevents,\n　　　　　 const struct timespec *timeout);\nvoid EV_SET(struct kevent *kev, uintptr_t ident, short filter,\n　　　　　　u_short flags, u_int fflags, intptr_t data, void *udata);\n\nstruct kevent {\n　uintptr_t　ident;　　　/* identifier (e.g., file descriptor) */\n　short　　　 filter;　　/* filter type (e.g., EVFILT_READ) */\n　u_short　　 flags;　　　/* action flags (e.g., EV_ADD) */\n　u_int　　　　fflags;　　/* filter-specific flags */\n　intptr_t　　 data;　　　/* filter-specific data */\n　void　　　　 *udata;　　 /* opaque user data */\n};\n</code></pre><p>Linus在他最初的设想里，提到了这么一句话，也就是说他觉得类似select或poll的数组方式是可以的，而队列方式则是不可取的。</p><p>So sticky arrays of events are good, while queues are bad. Let’s take that as one of the fundamentals.</p><p>在最初的设计里，Linus等于把keque里面的kevent函数拆分了两个部分，一部分负责事件绑定，通过bind_event函数来实现；另一部分负责事件等待，通过get_events来实现。</p><pre><code>struct event {\n     unsigned long id; /* file descriptor ID the event is on */\n     unsigned long event; /* bitmask of active events */\n};\n\nint bind_event(int fd, struct event *event);\nint get_events(struct event * event_array, int maxnr, struct timeval *tmout);\n</code></pre><p>和最终的epoll实现相比，前者类似epoll_ctl，后者类似epoll_wait，不过原始的设计里没有考虑到创建epoll句柄，在最终的实现里增加了epoll_create，支持了epoll句柄的创建。</p><p>2002年，epoll最终在Linux 2.5.44中首次出现，在2.6中趋于稳定，为Linux的高性能网络I/O画上了一段句号。</p><h2>总结</h2><p>Linux中epoll的出现，为高性能网络编程补齐了最后一块拼图。epoll通过改进的接口设计，避免了用户态-内核态频繁的数据拷贝，大大提高了系统性能。在使用epoll的时候，我们一定要理解条件触发和边缘触发两种模式。条件触发的意思是只要满足事件的条件，比如有数据需要读，就一直不断地把这个事件传递给用户；而边缘触发的意思是只有第一次满足条件的时候才触发，之后就不会再传递同样的事件了。</p><h2>思考题</h2><p>理解完了epoll，和往常一样，我给你布置两道思考题：</p><p>第一道，你不妨试着修改一下第20讲中select的例子，即在已连接套接字上有数据可读，也不调用read函数去读，看一看你的结果，你认为select是边缘触发的，还是条件触发的？</p><p>第二道，同样的修改一下第21讲poll的例子，看看你的结果，你认为poll是边缘触发的，还是条件触发的？</p><p>你可以在GitHub上上传你的代码，并写出你的疑惑，我会和你一起交流，也欢迎把这篇文章分享给你的朋友或者同事，一起交流一下。</p>","neighbors":{"left":{"article_title":"22 | 非阻塞I/O：提升性能的加速器","id":141573},"right":{"article_title":"24 | C10K问题：高并发模型设计","id":143388}},"comments":[{"had_liked":false,"id":139000,"user_name":"传说中的成大大","can_delete":false,"product_type":"c1","uid":1236766,"ip_address":"","ucode":"103543D6E706BF","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","comment_is_top":false,"comment_ctime":1570525423,"is_pvip":false,"replies":[{"id":"54315","content":"这是一个很重要的点，恭喜你悟到了 :)","user_name":"作者回复","comment_id":139000,"uid":"1618647","ip_address":"","utype":1,"ctime":1570972230,"user_name_real":"froghui"}],"discussion_count":4,"race_medal":0,"score":"233498759407","product_id":100032701,"comment_content":"我回想和对了poll和epoll的代码 觉得效率问题主要出现在 epoll返回的是有事件发生的数组,而poll返回的是准备好的个数,每次poll函数返回都要遍历注册的描述符结合数组 尤其是数量越大遍历次数就越多 我觉得性能差异在这里 抛开阻塞和阻塞i&#47;o层面","like_count":55,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469739,"discussion_content":"这是一个很重要的点，恭喜你悟到了 :)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570972230,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2698987,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/WP4Ge8ABcINFkccKaNYKibicFnI0JAoojBBAUGrichNeRAgzm5RGbHG7GqYrFX3ELEzenuEbicQHJy2HZ72RxSOuMA/132","nickname":"Geek_842f07","note":"","ucode":"ED772AF755FE7E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392792,"discussion_content":"poll返回的是就绪描述符数目，epoll返回事件的个数，这两者有什么区别？poll和epoll最关键的差别还是条件触发和边缘触发吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631142634,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1803259,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/83/fb/621adceb.jpg","nickname":"linker","note":"","ucode":"6C5799F2FC2C82","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":215944,"discussion_content":"poll不需要吧，是select需要，poll与epoll都是直接在数组中取啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585399343,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1959482,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/e6/3a/382cf024.jpg","nickname":"rongyefeng","note":"","ucode":"9A15D947E9D645","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1803259,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/83/fb/621adceb.jpg","nickname":"linker","note":"","ucode":"6C5799F2FC2C82","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":270211,"discussion_content":"poll需要遍历pollfd结构体数组中，fd成员不为-1的那些套接字","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589985943,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":215944,"ip_address":""},"score":270211,"extra":""}]}]},{"had_liked":false,"id":141047,"user_name":"moob","can_delete":false,"product_type":"c1","uid":1242762,"ip_address":"","ucode":"ACC70FA20A9519","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLLOldQf1VmafqYpeDj2RFdWfo3O4KV5jjHIzaSnmuJf4RjyAtibIkbzuYTX1NGyvznm9asmiaHvyVw/132","comment_is_top":false,"comment_ctime":1571106377,"is_pvip":false,"replies":[{"id":"55089","content":"如果你读了后面答疑部分的源码就会明白，答案是否定的。如果你设置一个很小的events数组，会影响事件的时效性，也就是说，可能10秒前的一个I&#47;O事件，现在你才收到，但是不会错过事件，其原因是事件总在内核中记录着。你不收，内核里也有；你收的快一点，时效性就越好，表现出对用户的体验就越好。<br><br>","user_name":"作者回复","comment_id":141047,"uid":"1618647","ip_address":"","utype":1,"ctime":1571453746,"user_name_real":"froghui"}],"discussion_count":1,"race_medal":0,"score":"78880517705","product_id":100032701,"comment_content":"边缘触发的情况， 如果epoll_wait时提供的events数组太小，那么会错过事件？","like_count":18,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470657,"discussion_content":"如果你读了后面答疑部分的源码就会明白，答案是否定的。如果你设置一个很小的events数组，会影响事件的时效性，也就是说，可能10秒前的一个I/O事件，现在你才收到，但是不会错过事件，其原因是事件总在内核中记录着。你不收，内核里也有；你收的快一点，时效性就越好，表现出对用户的体验就越好。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571453746,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143179,"user_name":"yusuf","can_delete":false,"product_type":"c1","uid":1170784,"ip_address":"","ucode":"9F32149B2ADDA0","user_header":"https://static001.geekbang.org/account/avatar/00/11/dd/60/eae432c6.jpg","comment_is_top":false,"comment_ctime":1571643217,"is_pvip":false,"replies":[{"id":"55835","content":"就喜欢你这样努力完成作业，实际写代码的样子。赞赞赞。","user_name":"作者回复","comment_id":143179,"uid":"1618647","ip_address":"","utype":1,"ctime":1572059018,"user_name_real":"froghui"}],"discussion_count":1,"race_medal":0,"score":"74586087249","product_id":100032701,"comment_content":"https:&#47;&#47;github.com&#47;linuxxiaoyu&#47;block<br>执行后都会重复打印”need read socket_fd“和“poll need to read”，所以select和poll应该都是条件触发","like_count":18,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471410,"discussion_content":"就喜欢你这样努力完成作业，实际写代码的样子。赞赞赞。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572059018,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143053,"user_name":"yusuf","can_delete":false,"product_type":"c1","uid":1170784,"ip_address":"","ucode":"9F32149B2ADDA0","user_header":"https://static001.geekbang.org/account/avatar/00/11/dd/60/eae432c6.jpg","comment_is_top":false,"comment_ctime":1571624514,"is_pvip":false,"replies":[{"id":"55600","content":"gdb都用上了，牛~","user_name":"作者回复","comment_id":143053,"uid":"1618647","ip_address":"","utype":1,"ctime":1571846461,"user_name_real":"froghui"}],"discussion_count":4,"race_medal":0,"score":"57406199362","product_id":100032701,"comment_content":"之前对epoll01.c中第66行while(1)很困惑，不明白是从哪里跳出这个循环的。后来通过gdb调试分析，发现在55行把socket_fd设置为了非阻塞，然后在68行调用read时，socket_fd没有数据可读会直接返回-1(errno = EAGAIN),从而在73行通过break跳出了while(1)循环。希望对同样有此困惑的同学有所帮助。","like_count":13,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471362,"discussion_content":"gdb都用上了，牛~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571846461,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1674369,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqf54z1ZmqQY1kmJ6t1HAnrqMM3j6WKf0oDeVLhtnA2ZUKY6AX9MK6RjvcO8SiczXy3uU0IzBQ3tpw/132","nickname":"Geek_68d3d2","note":"","ucode":"EBD6D881AA7A74","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":82089,"discussion_content":"请问socket_fd的阻塞与非阻塞是怎么设置的啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576319055,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1170784,"avatar":"https://static001.geekbang.org/account/avatar/00/11/dd/60/eae432c6.jpg","nickname":"yusuf","note":"","ucode":"9F32149B2ADDA0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1674369,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqf54z1ZmqQY1kmJ6t1HAnrqMM3j6WKf0oDeVLhtnA2ZUKY6AX9MK6RjvcO8SiczXy3uU0IzBQ3tpw/132","nickname":"Geek_68d3d2","note":"","ucode":"EBD6D881AA7A74","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":85363,"discussion_content":"22节有提到，具体的代码是：\nfcntl(fd, F_SETFL, O_NONBLOCK);","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1576542757,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":82089,"ip_address":""},"score":85363,"extra":""},{"author":{"id":1674369,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqf54z1ZmqQY1kmJ6t1HAnrqMM3j6WKf0oDeVLhtnA2ZUKY6AX9MK6RjvcO8SiczXy3uU0IzBQ3tpw/132","nickname":"Geek_68d3d2","note":"","ucode":"EBD6D881AA7A74","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1170784,"avatar":"https://static001.geekbang.org/account/avatar/00/11/dd/60/eae432c6.jpg","nickname":"yusuf","note":"","ucode":"9F32149B2ADDA0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":85464,"discussion_content":"好的 谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576547737,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":85363,"ip_address":""},"score":85464,"extra":""}]}]},{"had_liked":false,"id":137625,"user_name":"空想家","can_delete":false,"product_type":"c1","uid":1108703,"ip_address":"","ucode":"B2B72B3DF125EB","user_header":"https://static001.geekbang.org/account/avatar/00/10/ea/df/ecd66509.jpg","comment_is_top":false,"comment_ctime":1569808518,"is_pvip":false,"replies":[{"id":"53872","content":"LT和ET的区别在文稿里已经给出了。<br><br>我理解的惊群问题是当一个网络套接字上有事件发生时，多个线程或者进程会感知，从而引发一群线程干活。<br><br>我认为设计良好的程序应该避免这样的问题，比如一个套接字只被一个线程所管理。我们后面的框架设计也是遵循了这个原则。","user_name":"作者回复","comment_id":137625,"uid":"1618647","ip_address":"","utype":1,"ctime":1570699370,"user_name_real":"froghui"}],"discussion_count":2,"race_medal":0,"score":"40224514182","product_id":100032701,"comment_content":"LT + non-blocking 和 ET + non-blocking 有什么区别吗？性能谁更好一点？<br><br>epoll 的惊群问题会讲吗？","like_count":9,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469183,"discussion_content":"LT和ET的区别在文稿里已经给出了。\n\n我理解的惊群问题是当一个网络套接字上有事件发生时，多个线程或者进程会感知，从而引发一群线程干活。\n\n我认为设计良好的程序应该避免这样的问题，比如一个套接字只被一个线程所管理。我们后面的框架设计也是遵循了这个原则。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570699370,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2123892,"avatar":"https://static001.geekbang.org/account/avatar/00/20/68/74/aea478ba.jpg","nickname":"我是管小亮","note":"","ucode":"A1C624CF9E1CA3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299495,"discussion_content":"LT和ET的区别主要是，\n\nLT中epoll_wait检测到文件描述符有事件发生，会通知应用程序，但是应用程序可以不立刻处理该事件，下次调用epoll_wait还会报告该事件，直到被处理。\n\nET则是epoll_wait检测到文件描述符有事件发生，通知应用程序，应用程序必须立即处理该事件，必须一次性将数据读完，知道出现eagain。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1597717767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154856,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1574581835,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"23049418315","product_id":100032701,"comment_content":"期待后面分享 select&#47;poll&#47;epoll三者产生，随着处理的文件描述符越多性能差异越大的原因？<br><br>看文章内容和评论，目前的依据有三个<br>1：避免了用户态-内核态频繁的数据拷贝，这个老师会在后面讲，猜测是零拷贝技术<br>2：边缘条件触发比条件触发性能更优，select&#47;poll都是条件触发，这个老师在评论中又讲有人测试过，其实他俩性能之差，并不如理论上讲的那么大，这需要测试下<br>3：从poll和epoll的返回值角度来思考，epoll返回的是有事件发生的数组，poll返回的是事件就绪的个数，每次poll返回都需要遍历注册的文件描述符的结果数组，尤其数据量越大遍历次数就越多，这个也是poll相对于epoll慢的原因<br>","like_count":6,"discussions":[{"author":{"id":2123892,"avatar":"https://static001.geekbang.org/account/avatar/00/20/68/74/aea478ba.jpg","nickname":"我是管小亮","note":"","ucode":"A1C624CF9E1CA3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299498,"discussion_content":"select和poll都是文件描述符在用户态价加入到文件描述符集合的，每次调用都得拷贝到内核态，epoll则是将文件描述符维护在核心态，不过每次执行都得系统调用。\n\n边沿触发的效率更高，主要是立刻处理了请求吧，不会一直报告，而且还是得看应用场景。\n\npoll调用需要遍历整个文件描述符，epoll只要检查有没有触发回调函数就行，内核会把就绪事件放在ready list中等待。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1597718029,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1445744,"avatar":"https://static001.geekbang.org/account/avatar/00/16/0f/70/f59db672.jpg","nickname":"槑·先生","note":"","ucode":"897F0475592E3A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361133,"discussion_content":"留个脚印","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616597701,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144245,"user_name":"herongwei","can_delete":false,"product_type":"c1","uid":1153928,"ip_address":"","ucode":"E4158BF7AD2E70","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/88/34c171f1.jpg","comment_is_top":false,"comment_ctime":1571881992,"is_pvip":false,"replies":[{"id":"55815","content":"在后面的章节里对select、poll、epoll这几个技术进行了不同程度的比较，你可以接着往下读。","user_name":"作者回复","comment_id":144245,"uid":"1618647","ip_address":"","utype":1,"ctime":1572057678,"user_name_real":"froghui"}],"discussion_count":3,"race_medal":0,"score":"23046718472","product_id":100032701,"comment_content":"老师，您好，在总结里：“避免了用户态 - 内核态频繁的数据拷贝”这句话是什么意思的呢？文稿中好像没有提到 epoll 的数据拷贝？频繁指的是什么呢？另外，对比之前的 ，select，poll，epoll 三者在数据拷贝之间的区别又有什么不同呢？希望老师回答一下，谢谢！","like_count":5,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471858,"discussion_content":"在后面的章节里对select、poll、epoll这几个技术进行了不同程度的比较，你可以接着往下读。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572057678,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1153928,"avatar":"https://static001.geekbang.org/account/avatar/00/11/9b/88/34c171f1.jpg","nickname":"herongwei","note":"","ucode":"E4158BF7AD2E70","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":40011,"discussion_content":"谢谢老师解答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572059393,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2123892,"avatar":"https://static001.geekbang.org/account/avatar/00/20/68/74/aea478ba.jpg","nickname":"我是管小亮","note":"","ucode":"A1C624CF9E1CA3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1153928,"avatar":"https://static001.geekbang.org/account/avatar/00/11/9b/88/34c171f1.jpg","nickname":"herongwei","note":"","ucode":"E4158BF7AD2E70","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299492,"discussion_content":"select，poll都会拷贝数据，从用户态到核心态","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597717503,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":40011,"ip_address":""},"score":299492,"extra":""}]}]},{"had_liked":false,"id":138227,"user_name":"向东","can_delete":false,"product_type":"c1","uid":1200181,"ip_address":"","ucode":"9F621FBF115620","user_header":"https://static001.geekbang.org/account/avatar/00/12/50/35/079d04c8.jpg","comment_is_top":false,"comment_ctime":1570107466,"is_pvip":false,"replies":[{"id":"54291","content":"因为这部分数据没有被处理掉，而这个正是条件触发的精髓。<br><br>至于描述字，我是这么理解的，0,1,2分别被stdin, stdout和stderr所用，3被监听套接字所用，本地连接的客户端描述字是4，那么本地已连接套接字就是5了。","user_name":"作者回复","comment_id":138227,"uid":"1618647","ip_address":"","utype":1,"ctime":1570969287,"user_name_real":"froghui"}],"discussion_count":1,"race_medal":0,"score":"23044943946","product_id":100032701,"comment_content":"为何在水平触发的epoll03，当tcpclient都退出了，还说有数据可读呢，get event on socket fd ==5，二是请问为何每次都从五开始呢，前面0-5分别是谁占用了呢，谢谢。","like_count":5,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469443,"discussion_content":"因为这部分数据没有被处理掉，而这个正是条件触发的精髓。\n\n至于描述字，我是这么理解的，0,1,2分别被stdin, stdout和stderr所用，3被监听套接字所用，本地连接的客户端描述字是4，那么本地已连接套接字就是5了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570969287,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":197831,"user_name":"linker","can_delete":false,"product_type":"c1","uid":1803259,"ip_address":"","ucode":"6C5799F2FC2C82","user_header":"https://static001.geekbang.org/account/avatar/00/1b/83/fb/621adceb.jpg","comment_is_top":false,"comment_ctime":1585400081,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"18765269265","product_id":100032701,"comment_content":"经测试seclet与poll都是水平触发","like_count":5,"discussions":[{"author":{"id":2123892,"avatar":"https://static001.geekbang.org/account/avatar/00/20/68/74/aea478ba.jpg","nickname":"我是管小亮","note":"","ucode":"A1C624CF9E1CA3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299500,"discussion_content":"只有epoll支持ET和LT两个，poll和select都是只支持一个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597718208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137563,"user_name":"刘丹","can_delete":false,"product_type":"c1","uid":1081922,"ip_address":"","ucode":"66594D1C957E15","user_header":"https://static001.geekbang.org/account/avatar/00/10/82/42/8b04d489.jpg","comment_is_top":false,"comment_ctime":1569782545,"is_pvip":false,"replies":[{"id":"53868","content":"这里主要是因为播报员无法通读代码，所以把代码解说拿出来了。","user_name":"作者回复","comment_id":137563,"uid":"1618647","ip_address":"","utype":1,"ctime":1570698208,"user_name_real":"froghui"}],"discussion_count":1,"race_medal":0,"score":"18749651729","product_id":100032701,"comment_content":"提个小建议，能否把代码解说（例如：第 41-46 行判断了各种错误情况）作为注释放在代码里？","like_count":4,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469150,"discussion_content":"这里主要是因为播报员无法通读代码，所以把代码解说拿出来了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570698208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":211661,"user_name":"ray","can_delete":false,"product_type":"c1","uid":1717235,"ip_address":"","ucode":"10962C711CBC11","user_header":"","comment_is_top":false,"comment_ctime":1587993129,"is_pvip":false,"replies":[{"id":"79177","content":"非常好的问题。<br><br>实际上，确实需要通过注册EPOLLOUT事件，让内核告诉我们可以往某个fd上写数据，课程只是没有展现这部分的能力而已，而在lib&#47;epoll_dispatcher.c中是会注册EPOLLOUT事件的。","user_name":"作者回复","comment_id":211661,"uid":"1618647","ip_address":"","utype":1,"ctime":1588497282,"user_name_real":"froghui"}],"discussion_count":1,"race_medal":0,"score":"14472895017","product_id":100032701,"comment_content":"老师您好，<br>想跟您请教什么时候会触发EPOLLOUT事件，我们的课程范例好像都只有EPOLLIN事件。<br>当读事件触发后，为什么不用为fd设置EPOLLOUT事件，就可以直接将资料写回fd，这样我们要怎么知道一个fd是否可写呢？<br><br>谢谢老师的解答！","like_count":3,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493326,"discussion_content":"非常好的问题。\n\n实际上，确实需要通过注册EPOLLOUT事件，让内核告诉我们可以往某个fd上写数据，课程只是没有展现这部分的能力而已，而在lib/epoll_dispatcher.c中是会注册EPOLLOUT事件的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588497282,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144010,"user_name":"Steiner","can_delete":false,"product_type":"c1","uid":1622329,"ip_address":"","ucode":"232C1C75207A1E","user_header":"https://static001.geekbang.org/account/avatar/00/18/c1/39/11904266.jpg","comment_is_top":false,"comment_ctime":1571824101,"is_pvip":false,"replies":[{"id":"55819","content":"当然会，自动更新，动态检测，这就是NB的地方啊。","user_name":"作者回复","comment_id":144010,"uid":"1618647","ip_address":"","utype":1,"ctime":1572057829,"user_name_real":"froghui"}],"discussion_count":1,"race_medal":0,"score":"14456725989","product_id":100032701,"comment_content":"请问如果我用epoll_ctl显式更改event事件，那么epoll_wait会不会检测到，并装载到events数组中？","like_count":3,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471776,"discussion_content":"当然会，自动更新，动态检测，这就是NB的地方啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572057829,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":279232,"user_name":"Steiner","can_delete":false,"product_type":"c1","uid":1622329,"ip_address":"","ucode":"232C1C75207A1E","user_header":"https://static001.geekbang.org/account/avatar/00/18/c1/39/11904266.jpg","comment_is_top":false,"comment_ctime":1613667878,"is_pvip":false,"replies":[{"id":"101998","content":"错误事件是不需要注册的，需要在事件检测程序里，针对错误做对应的处理。","user_name":"作者回复","comment_id":279232,"uid":"1618647","ip_address":"","utype":1,"ctime":1614516112,"user_name_real":"froghui"}],"discussion_count":1,"race_medal":0,"score":"10203602470","product_id":100032701,"comment_content":"错误事件需要我们手动注册吗 还是说系统在遇到错误发生会通过设置events字段来通知我们<br>压根就不需要我们注册？<br>poll也是这样吗？","like_count":2,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515672,"discussion_content":"错误事件是不需要注册的，需要在事件检测程序里，针对错误做对应的处理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614516112,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":245763,"user_name":"нáпの゛","can_delete":false,"product_type":"c1","uid":1130666,"ip_address":"","ucode":"834FA877EFBAF7","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/aa/49bbb007.jpg","comment_is_top":false,"comment_ctime":1599042928,"is_pvip":false,"replies":[{"id":"90591","content":"当然会读到之前的数据，因为TCP是流式数据，像水流一样，连绵不绝，之前的数据不会被扔掉。","user_name":"作者回复","comment_id":245763,"uid":"1618647","ip_address":"","utype":1,"ctime":1599400120,"user_name_real":"froghui"}],"discussion_count":1,"race_medal":0,"score":"10188977520","product_id":100032701,"comment_content":"老师，边沿触发的时候，如果没有把数据全部读完，剩余的未读数据后续是什么情况。在缓存区中会影响socket后续的读写操作吗，比如这会请求其他资源，触发另一个读时间，会不会读到前面未读的数据？还是说不影响，内核在新的读操作之后会清理掉？","like_count":2,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504982,"discussion_content":"当然会读到之前的数据，因为TCP是流式数据，像水流一样，连绵不绝，之前的数据不会被扔掉。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599400120,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180985,"user_name":"supermouse","can_delete":false,"product_type":"c1","uid":1321860,"ip_address":"","ucode":"88072D5F881827","user_header":"https://static001.geekbang.org/account/avatar/00/14/2b/84/07f0c0d6.jpg","comment_is_top":false,"comment_ctime":1582453400,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10172387992","product_id":100032701,"comment_content":"思考题第一道：select 是条件触发，修改后的代码：https:&#47;&#47;github.com&#47;YoungYo&#47;yolanda&#47;blob&#47;master&#47;chap-20&#47;select02.c<br>思考题第二道：poll 是条件触发，修改后的代码：https:&#47;&#47;github.com&#47;YoungYo&#47;yolanda&#47;blob&#47;master&#47;chap-21&#47;pollserver03.c","like_count":2},{"had_liked":false,"id":148679,"user_name":"王盛武","can_delete":false,"product_type":"c1","uid":1182516,"ip_address":"","ucode":"DE7EF246D3DCE8","user_header":"https://static001.geekbang.org/account/avatar/00/12/0b/34/f41d73a4.jpg","comment_is_top":false,"comment_ctime":1573048230,"is_pvip":false,"replies":[{"id":"57490","content":"你的程序要接着把它读完，否则就会没完没了的收到可读事件。","user_name":"作者回复","comment_id":148679,"uid":"1618647","ip_address":"","utype":1,"ctime":1573283197,"user_name_real":"froghui"}],"discussion_count":5,"race_medal":0,"score":"10162982822","product_id":100032701,"comment_content":"边缘触发不是很理解，只通知第一次，如果报文没读完，后续的数据怎么办？","like_count":2,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473574,"discussion_content":"你的程序要接着把它读完，否则就会没完没了的收到可读事件。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573283197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1182516,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0b/34/f41d73a4.jpg","nickname":"王盛武","note":"","ucode":"DE7EF246D3DCE8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":47196,"discussion_content":"条件触发才一直发出事件吧？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1573292881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1130666,"avatar":"https://static001.geekbang.org/account/avatar/00/11/40/aa/49bbb007.jpg","nickname":"нáпの゛","note":"","ucode":"834FA877EFBAF7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302835,"discussion_content":"我也认为不会再触发， 好奇这部分未读数据后续是什么结局。在缓存区中会影响socket的读写操作吗，比如这会请求其他资源，触发另一个读时间，会不会读到前面未读的数据？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599042657,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2123892,"avatar":"https://static001.geekbang.org/account/avatar/00/20/68/74/aea478ba.jpg","nickname":"我是管小亮","note":"","ucode":"A1C624CF9E1CA3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299499,"discussion_content":"感觉老是说的不太准，ET应该是每次都会立刻处理，但是每次都得一次读完。LT是只会通知，不一定要处理，如果没处理，就会一直通知","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597718156,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2075086,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/a9/ce/23f2e185.jpg","nickname":"Running man","note":"","ucode":"F3357D6696A5C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293087,"discussion_content":"后续数据来就不会触发可读事件了吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595429880,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":282350,"user_name":"ICE FROG","can_delete":false,"product_type":"c1","uid":1812082,"ip_address":"","ucode":"31E3DBD22CCC3E","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a6/72/526fd3df.jpg","comment_is_top":false,"comment_ctime":1615203877,"is_pvip":false,"replies":[{"id":"102789","content":"不会。触发是绑定到不同的套接字的。","user_name":"作者回复","comment_id":282350,"uid":"1618647","ip_address":"","utype":1,"ctime":1615729158,"user_name_real":"froghui"}],"discussion_count":1,"race_medal":0,"score":"5910171173","product_id":100032701,"comment_content":"边缘触发相同的条件只会触发一次，那来自两个客户端的连接事件会受影响吗？","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516711,"discussion_content":"不会。触发是绑定到不同的套接字的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615729158,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":225802,"user_name":"常文龙","can_delete":false,"product_type":"c1","uid":1204525,"ip_address":"","ucode":"4A126159D24766","user_header":"https://static001.geekbang.org/account/avatar/00/12/61/2d/5ca0a3da.jpg","comment_is_top":false,"comment_ctime":1591863226,"is_pvip":false,"replies":[{"id":"84273","content":"好问题，实际上应该处理完读之后，再注册一个EPOLLOUT事件来进行可写判断，当缓冲区真正准备好的时候，在去进行写操作。这在多个连接同时写的时候尤其重要。","user_name":"作者回复","comment_id":225802,"uid":"1618647","ip_address":"","utype":1,"ctime":1592743678,"user_name_real":"froghui"}],"discussion_count":3,"race_medal":0,"score":"5886830522","product_id":100032701,"comment_content":"老师，您好。我看几个例子都只注册了读时间，epoll的例子也只注册了EPOLLIN事件，在处理完EPOLLIN事件后立马做了写操作，这个写操作时，写缓冲区会不会还没准备好？这里可以通过监听EPOLLOUT来做写操作吗？一般什么场景下回去监听写事件呢？","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497996,"discussion_content":"好问题，实际上应该处理完读之后，再注册一个EPOLLOUT事件来进行可写判断，当缓冲区真正准备好的时候，在去进行写操作。这在多个连接同时写的时候尤其重要。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592743678,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1204525,"avatar":"https://static001.geekbang.org/account/avatar/00/12/61/2d/5ca0a3da.jpg","nickname":"常文龙","note":"","ucode":"4A126159D24766","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285194,"discussion_content":"谢谢老师的解答 还有一个疑问 读事件准备好了 可直接调用read方法读取数据 写事件准备好了 要写的数据从哪获取呢？ 是在读事件后的处理结果与文件描述符之间维护一个映射来实现的吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592762321,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1156012,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a3/ac/69c66da7.jpg","nickname":"jiankewuming","note":"","ucode":"78D9F8DBC28048","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1204525,"avatar":"https://static001.geekbang.org/account/avatar/00/12/61/2d/5ca0a3da.jpg","nickname":"常文龙","note":"","ucode":"4A126159D24766","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361011,"discussion_content":"写什么数据，是业务逻辑自己定的，只不过，大部分情况下，都是可写的，所以，很少需要对可写进行注册。只有当，发现写缓冲满的时候，才去注册可写事件。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1616579168,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":285194,"ip_address":""},"score":361011,"extra":""}]}]},{"had_liked":false,"id":163132,"user_name":"leving","can_delete":false,"product_type":"c1","uid":1484455,"ip_address":"","ucode":"215FD6C57D689E","user_header":"https://static001.geekbang.org/account/avatar/00/16/a6/a7/b52de33e.jpg","comment_is_top":false,"comment_ctime":1576661338,"is_pvip":false,"replies":[{"id":"63905","content":"在代码解析那篇里，我详细分析了边缘触发和水平触发实现上的差异，通俗一点说，边缘触发就是通知你一下，解析来应用程序要自己处理，而水平触发则是你没有处理的话，一直不断的通知你处理。","user_name":"作者回复","comment_id":163132,"uid":"1618647","ip_address":"","utype":1,"ctime":1577604395,"user_name_real":"froghui"}],"discussion_count":1,"race_medal":0,"score":"5871628634","product_id":100032701,"comment_content":"想问下老师，epoll的边缘触发比水平触发的效率要高，请问下，边缘触发效率高在哪里？","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478254,"discussion_content":"在代码解析那篇里，我详细分析了边缘触发和水平触发实现上的差异，通俗一点说，边缘触发就是通知你一下，解析来应用程序要自己处理，而水平触发则是你没有处理的话，一直不断的通知你处理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577604395,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153334,"user_name":"HunterYuan","can_delete":false,"product_type":"c1","uid":1015256,"ip_address":"","ucode":"F8900C33D29AA7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/d8/d7c77764.jpg","comment_is_top":false,"comment_ctime":1574219805,"is_pvip":false,"replies":[{"id":"59335","content":"应该是忘记关了 :)","user_name":"作者回复","comment_id":153334,"uid":"1618647","ip_address":"","utype":1,"ctime":1574498731,"user_name_real":"froghui"}],"discussion_count":1,"race_medal":0,"score":"5869187101","product_id":100032701,"comment_content":"老师给的例子，是不是把close(efd)，给掉了？还是不用关闭","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475126,"discussion_content":"应该是忘记关了 :)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574498731,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148995,"user_name":"Steiner","can_delete":false,"product_type":"c1","uid":1622329,"ip_address":"","ucode":"232C1C75207A1E","user_header":"https://static001.geekbang.org/account/avatar/00/18/c1/39/11904266.jpg","comment_is_top":false,"comment_ctime":1573125098,"is_pvip":false,"replies":[{"id":"57493","content":"需要删除掉，否则fd不能复用了。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1573283320,"ip_address":"","comment_id":148995,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5868092394","product_id":100032701,"comment_content":"这个注册过的fd好像删不删都无所谓啊","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473701,"discussion_content":"需要删除掉，否则fd不能复用了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573283320,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138540,"user_name":"CCC","can_delete":false,"product_type":"c1","uid":1003738,"ip_address":"","ucode":"2E254444098267","user_header":"https://static001.geekbang.org/account/avatar/00/0f/50/da/ed4803cb.jpg","comment_is_top":false,"comment_ctime":1570326620,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5865293916","product_id":100032701,"comment_content":"试了一下select和poll都是条件触发的，发现套接字是readable了只要没被read就会一直报这个套接字可读，而epoll在边缘模式下只会在第一次报套接字可读，可能这也是epoll为什么效率高的缘故吧，因为不用盯着套接字一直报。","like_count":1},{"had_liked":false,"id":340934,"user_name":"Geek9772","can_delete":false,"product_type":"c1","uid":2689623,"ip_address":"","ucode":"A5E059C92D9950","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/2Iw3M4Myq6G3TO1BQExJP9JKtazBEfptXhG1WcMsnZSWRyiaXCeq0NibsWmmerJVRSpybhfezib8pBGlowlR2wg2A/132","comment_is_top":false,"comment_ctime":1649234175,"is_pvip":false,"replies":[{"id":"124770","content":"一直在。","user_name":"作者回复","user_name_real":"编辑","uid":"1618647","ctime":1649592144,"ip_address":"","comment_id":340934,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1649234175","product_id":100032701,"comment_content":"“边缘触发，只有第一次满足条件才触发”，那么如果用户程序没有处理这个socket缓冲区的数据，那么缓冲区的数据会一直在，还是被清掉？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":561276,"discussion_content":"一直在。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649592144,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":332758,"user_name":"Geek_ae5ebf","can_delete":false,"product_type":"c1","uid":2550026,"ip_address":"","ucode":"BC9579A7E5CC95","user_header":"","comment_is_top":false,"comment_ctime":1643555036,"is_pvip":false,"replies":[{"id":"122019","content":"第一个，确实是应该先close，再error;<br>第二个，break是跳出读循环，不是上面的那个event数组。","user_name":"作者回复","user_name_real":"编辑","uid":"1618647","ctime":1644729567,"ip_address":"","comment_id":332758,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1643555036","product_id":100032701,"comment_content":"老师，代码的第69-70行我感觉你写反了，应该是先close(socket_fd)，再error(1, errno, &quot;read error&quot;)，<br>代码的第75行，我感觉应该不是break，而是continue，不然event数组后面的fd就没机会执行了","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550769,"discussion_content":"第一个，确实是应该先close，再error;\n第二个，break是跳出读循环，不是上面的那个event数组。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644729567,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":332193,"user_name":"西门吹牛","can_delete":false,"product_type":"c1","uid":1508990,"ip_address":"","ucode":"E5D3624DDE1E83","user_header":"https://static001.geekbang.org/account/avatar/00/17/06/7e/735968e2.jpg","comment_is_top":false,"comment_ctime":1643093250,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1643093250","product_id":100032701,"comment_content":"select&#47;poll 是条件触发，如果采用边缘触发，要搭配 非阻塞使用，边缘 触发，只会触发一次，所以要一次性把数据读完，一般采用循环的方式 读，如果使用阻塞，那么读到没数据了，就阻塞了","like_count":0},{"had_liked":false,"id":331232,"user_name":"张浩轩","can_delete":false,"product_type":"c1","uid":1628040,"ip_address":"","ucode":"6CB5A6F6FA209B","user_header":"https://static001.geekbang.org/account/avatar/00/18/d7/88/6f6b245c.jpg","comment_is_top":false,"comment_ctime":1642495245,"is_pvip":true,"replies":[{"id":"121290","content":"哈哈，歪打正着啊。","user_name":"作者回复","user_name_real":"编辑","uid":"1618647","ctime":1642924485,"ip_address":"","comment_id":331232,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1642495245","product_id":100032701,"comment_content":"问题1: 不小心把FD_ISSET(fd, &amp;readSet) 写到判断accept的分支里了，发现select会不停的调用返回然后判断是否listenfd上有事件。所以select是条件触发。","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547896,"discussion_content":"哈哈，歪打正着啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642924485,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322682,"user_name":"huadanian","can_delete":false,"product_type":"c1","uid":1014061,"ip_address":"","ucode":"A986E1DB777428","user_header":"https://static001.geekbang.org/account/avatar/00/0f/79/2d/dbb5570f.jpg","comment_is_top":false,"comment_ctime":1637549879,"is_pvip":false,"replies":[{"id":"117470","content":"好问题。我个人觉得最好解除一下，比较socket都已经close掉了。","user_name":"作者回复","user_name_real":"编辑","uid":"1618647","ctime":1638088042,"ip_address":"","comment_id":322682,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1637549879","product_id":100032701,"comment_content":"请问老师，代码第74行和第75行之间，是否需要使用epoll_ctl来EPOLL_CTL_DELETE相关的event？？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534076,"discussion_content":"好问题。我个人觉得最好解除一下，比较socket都已经close掉了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638088042,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":306715,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1628679570,"is_pvip":false,"replies":[{"id":"111678","content":"这是Linus自己的设计想法，可能是性能更佳，也可能是他的偏好。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1629636723,"ip_address":"","comment_id":306715,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1628679570","product_id":100032701,"comment_content":"原文：也就是说他觉得类似 select 或 poll 的数组方式是可以的，而队列方式则是不可取的。<br><br>这句话应该怎么理解吖，是因为数组的访问比队列的性能要好么？谢谢。","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":524886,"discussion_content":"这是Linus自己的设计想法，可能是性能更佳，也可能是他的偏好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629636723,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1014061,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/79/2d/dbb5570f.jpg","nickname":"huadanian","note":"","ucode":"A986E1DB777428","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532171,"discussion_content":"&#34;偏好&#34;？！O(∩_∩)O哈哈~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637549002,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":299654,"user_name":"vv_test","can_delete":false,"product_type":"c1","uid":1685884,"ip_address":"","ucode":"1D164B2F034E2B","user_header":"https://static001.geekbang.org/account/avatar/00/19/b9/7c/afe6f1eb.jpg","comment_is_top":false,"comment_ctime":1624783327,"is_pvip":false,"replies":[{"id":"108667","content":"保持对之前的兼容性，接口不变","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1624804706,"ip_address":"","comment_id":299654,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1624783327","product_id":100032701,"comment_content":"从 Linux 2.6.8 开始，参数 size 被自动忽略，但是该值仍需要一个大于 0 的整数。<br>为什么都忽略了，还需要一个大于0的。<br>","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522498,"discussion_content":"保持对之前的兼容性，接口不变","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624804706,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287589,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1618041493,"is_pvip":false,"replies":[{"id":"104492","content":"这里是epoll吧......","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1618140245,"ip_address":"","comment_id":287589,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1618041493","product_id":100032701,"comment_content":"老师，您好<br>select 处理 fd 的上限不是 1024 么？这里为啥能处理 10000 个文件描述呀？<br>谢谢","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518358,"discussion_content":"这里是epoll吧......","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618140245,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1024294,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","nickname":"null","note":"","ucode":"F9039EFED6B55D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366651,"discussion_content":"首图，右二，是 select 的测试数据吖，有 10000 个文件描述符","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618145713,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":284992,"user_name":"herongwei","can_delete":false,"product_type":"c1","uid":1153928,"ip_address":"","ucode":"E4158BF7AD2E70","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/88/34c171f1.jpg","comment_is_top":false,"comment_ctime":1616573060,"is_pvip":false,"replies":[{"id":"103645","content":"共享内存是进程间通信的一种方式，这里应该没用到吧。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1616934102,"ip_address":"","comment_id":284992,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1616573060","product_id":100032701,"comment_content":"想问一下老师，epoll_wait 返回时，对于就绪的事件，网上好多文章说 epoll 使用共享内存的方式，但我最近看 EPOLL 源码，好像根本没有","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517541,"discussion_content":"共享内存是进程间通信的一种方式，这里应该没用到吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616934102,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":280946,"user_name":"lzh","can_delete":false,"product_type":"c1","uid":1336951,"ip_address":"","ucode":"C3D83DF4230109","user_header":"https://static001.geekbang.org/account/avatar/00/14/66/77/194ba21d.jpg","comment_is_top":false,"comment_ctime":1614498440,"is_pvip":false,"replies":[{"id":"101994","content":"谢谢。<br><br>传入的fd是显式的，也是这个函数必须要传入的参数，而event结构体data中的fd，这是一个习惯用法，你也可以不这样干，而去传入别的值，这个值在后面会被使用，因为我们在后面的程序中，需要感知对应事件是哪个socket的，所以就传入了fd。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1614515853,"ip_address":"","comment_id":280946,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1614498440","product_id":100032701,"comment_content":"老师event.data.fd主要目的是什么呀？epoll_ctl不是也传了一个同样的fd吗？<br>event.data.fd = listen_fd; <br>event.events = EPOLLIN | EPOLLET;<br>epoll_ctl(efd, EPOLL_CTL_ADD, listen_fd, &amp;event)<br><br>这么好的课，居然学的人这么少","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516254,"discussion_content":"谢谢。\n\n传入的fd是显式的，也是这个函数必须要传入的参数，而event结构体data中的fd，这是一个习惯用法，你也可以不这样干，而去传入别的值，这个值在后面会被使用，因为我们在后面的程序中，需要感知对应事件是哪个socket的，所以就传入了fd。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614515853,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":278964,"user_name":"Steiner","can_delete":false,"product_type":"c1","uid":1622329,"ip_address":"","ucode":"232C1C75207A1E","user_header":"https://static001.geekbang.org/account/avatar/00/18/c1/39/11904266.jpg","comment_is_top":false,"comment_ctime":1613487427,"is_pvip":false,"replies":[{"id":"102011","content":"我理解此时read&#47;write是无效的，应该是通过epoll_wait来感知这个超时事件的。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1614517903,"ip_address":"","comment_id":278964,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1613487427","product_id":100032701,"comment_content":"有个细节问题，如果我对一个套接字设置了超时选项，epoll会通过那种事件来通知我们，这个套接字超时了？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515579,"discussion_content":"我理解此时read/write是无效的，应该是通过epoll_wait来感知这个超时事件的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614517903,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":214591,"user_name":"cool","can_delete":false,"product_type":"c1","uid":1383620,"ip_address":"","ucode":"254220D6E2DAE8","user_header":"https://static001.geekbang.org/account/avatar/00/15/1c/c4/3e593863.jpg","comment_is_top":false,"comment_ctime":1588769603,"is_pvip":false,"replies":[{"id":"79833","content":"这里是一个示例，实际应该由事件通知到回调线程往套接字缓冲区里写数据。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1589099633,"ip_address":"","comment_id":214591,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1588769603","product_id":100032701,"comment_content":"为啥write 不考虑是否成功？如果发送缓冲区满了，事例中write 会有问题吧？ write 应该用到异步io吧？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494131,"discussion_content":"这里是一个示例，实际应该由事件通知到回调线程往套接字缓冲区里写数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589099633,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208706,"user_name":"我瑟瑟的方法","can_delete":false,"product_type":"c1","uid":1065819,"ip_address":"","ucode":"1364CD531E1B72","user_header":"https://static001.geekbang.org/account/avatar/00/10/43/5b/17fef3ba.jpg","comment_is_top":false,"comment_ctime":1587424773,"is_pvip":false,"replies":[{"id":"78413","content":"在Linux下，所有的操作对象都可以用一个文件描述来表示，比如socket，比如文件句柄，比如进程，10000个文件描述符这里指的是10000个连接描述符。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1587804071,"ip_address":"","comment_id":208706,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1587424773","product_id":100032701,"comment_content":"老师，什么是文件描述符，10000个文件描述符要具体指什么","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492585,"discussion_content":"在Linux下，所有的操作对象都可以用一个文件描述来表示，比如socket，比如文件句柄，比如进程，10000个文件描述符这里指的是10000个连接描述符。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587804071,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2283598,"avatar":"","nickname":"设计模式","note":"","ucode":"3A0FD26A8212FF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379248,"discussion_content":"直接跳到来看的吧，基础不牢，还心急","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623770375,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2357837,"avatar":"","nickname":"Geek_c5790c","note":"","ucode":"847004CBDB0DF0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352754,"discussion_content":"老师，为什么select检测的文件描述符可以到10000，那么1024的限制是针对什么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614841022,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186422,"user_name":"传说中的成大大","can_delete":false,"product_type":"c1","uid":1236766,"ip_address":"","ucode":"103543D6E706BF","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","comment_is_top":false,"comment_ctime":1583843418,"is_pvip":false,"replies":[{"id":"72373","content":"殊途同归吧。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1584172940,"ip_address":"","comment_id":186422,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583843418","product_id":100032701,"comment_content":"今天看开源框架 skynet 的socket部分 发现他就把epoll_event 里面data字段的ptr 用来放了一些他自己关心的数据 然后我又回来复习了一遍 感觉离大神的距离还很远啊o(╥﹏╥)o","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486749,"discussion_content":"殊途同归吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584172940,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183228,"user_name":"jackstraw","can_delete":false,"product_type":"c1","uid":1137207,"ip_address":"","ucode":"C967D2D6158F99","user_header":"https://static001.geekbang.org/account/avatar/00/11/5a/37/8775d714.jpg","comment_is_top":false,"comment_ctime":1582976777,"is_pvip":false,"replies":[{"id":"71024","content":"关心可写的意思是套集字缓冲区可以允许我们把内容拷贝过去，这在高性能网络中非常重要，这个是一个网络数据的发送过程。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1583051629,"ip_address":"","comment_id":183228,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582976777","product_id":100032701,"comment_content":"老师，什么情况下会将已连接套接字的写事件注册进去啊？我看我们的例子都只是关心读事件，像http这种服务，有可能会注册写事件么？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485607,"discussion_content":"关心可写的意思是套集字缓冲区可以允许我们把内容拷贝过去，这在高性能网络中非常重要，这个是一个网络数据的发送过程。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583051629,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179934,"user_name":"传说中的成大大","can_delete":false,"product_type":"c1","uid":1236766,"ip_address":"","ucode":"103543D6E706BF","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","comment_is_top":false,"comment_ctime":1582123764,"is_pvip":false,"replies":[{"id":"71042","content":"为什么呢？只是要把这一个连接报错并关闭，for循环还是要继续做下去来处理别的连接。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1583053444,"ip_address":"","comment_id":179934,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582123764","product_id":100032701,"comment_content":"老师你好 今天再次复习epoll的时候 发现 67的n代码如下。如果被read修改了那么 40行for循环中的结束条件也变了吧？<br>if ((n = read(socket_fd, buf, sizeof(buf))) &lt; 0) { <br>                       if (errno != EAGAIN) { <br>                           error(1, errno, &quot;read error&quot;);<br>                            close(socket_fd);                       <br> }","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484454,"discussion_content":"为什么呢？只是要把这一个连接报错并关闭，for循环还是要继续做下去来处理别的连接。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583053444,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179377,"user_name":"大土豆","can_delete":false,"product_type":"c1","uid":1121636,"ip_address":"","ucode":"67445DC3EC9DB0","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/64/52a5863b.jpg","comment_is_top":false,"comment_ctime":1581992881,"is_pvip":true,"replies":[{"id":"71045","content":"信号驱动式I&#47;O基本没有实战的场景，高性能网络编程中也没有实际的应用，如果感兴趣，可以参考一些资料书科普一下。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1583053655,"ip_address":"","comment_id":179377,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1581992881","product_id":100032701,"comment_content":"老师您好，我想问下5种I&#47;O中还有一种信号驱动式I&#47;O，可以说说吗","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484232,"discussion_content":"信号驱动式I/O基本没有实战的场景，高性能网络编程中也没有实际的应用，如果感兴趣，可以参考一些资料书科普一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583053655,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1121636,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/64/52a5863b.jpg","nickname":"大土豆","note":"","ucode":"67445DC3EC9DB0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":179745,"discussion_content":"老师可以说说吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582250038,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2123892,"avatar":"https://static001.geekbang.org/account/avatar/00/20/68/74/aea478ba.jpg","nickname":"我是管小亮","note":"","ucode":"A1C624CF9E1CA3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1121636,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/64/52a5863b.jpg","nickname":"大土豆","note":"","ucode":"67445DC3EC9DB0","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":299501,"discussion_content":"信号驱动IO：linux用套接口进行信号驱动IO，安装一个信号处理函数，进程继续运行并不阻塞，当IO时间就绪，进程收到SIGIO信号。然后处理IO事件。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597718332,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":179745,"ip_address":""},"score":299501,"extra":""}]}]},{"had_liked":false,"id":170354,"user_name":"麻雀","can_delete":false,"product_type":"c1","uid":1257751,"ip_address":"","ucode":"67CD60D3E705B9","user_header":"https://static001.geekbang.org/account/avatar/00/13/31/17/02fc18b1.jpg","comment_is_top":false,"comment_ctime":1578578228,"is_pvip":false,"replies":[{"id":"68059","content":"epoll_ctl的函数里吗可以用到，用来对已经注册的fd进行修正，比如改成既可读亦可写。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1580628571,"ip_address":"","comment_id":170354,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1578578228","product_id":100032701,"comment_content":"EPOLL_CTL_MOD 修改是什么时候用到，是说能读也能写？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480951,"discussion_content":"epoll_ctl的函数里吗可以用到，用来对已经注册的fd进行修正，比如改成既可读亦可写。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580628571,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154119,"user_name":"林林","can_delete":false,"product_type":"c1","uid":1613227,"ip_address":"","ucode":"7B6318B971E430","user_header":"https://static001.geekbang.org/account/avatar/00/18/9d/ab/6589d91a.jpg","comment_is_top":false,"comment_ctime":1574382891,"is_pvip":false,"replies":[{"id":"59343","content":"从内核实现上能体现出来，你可以看下后面的源码解读部分。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1574499976,"ip_address":"","comment_id":154119,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1574382891","product_id":100032701,"comment_content":"epoll 通过改进的接口设计，避免了用户态 - 内核态频繁的数据拷贝，大大提高了系统性能。<br>请问避免用户态和内核态之间的频繁数据拷贝，从哪能体现出来？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475380,"discussion_content":"从内核实现上能体现出来，你可以看下后面的源码解读部分。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574499976,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2123892,"avatar":"https://static001.geekbang.org/account/avatar/00/20/68/74/aea478ba.jpg","nickname":"我是管小亮","note":"","ucode":"A1C624CF9E1CA3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299502,"discussion_content":"epoll是维护在内核态的文件描述符集合，所以主要是系统调用开销比较大","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597718390,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144312,"user_name":"herongwei","can_delete":false,"product_type":"c1","uid":1153928,"ip_address":"","ucode":"E4158BF7AD2E70","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/88/34c171f1.jpg","comment_is_top":false,"comment_ctime":1571893696,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1571893696","product_id":100032701,"comment_content":"EPOLL_CLOEXEC 标志与 open 调用时的 O_CLOEXEC 标志类似 ，即进程被替换时会关闭打开的文件描述符。","like_count":0,"discussions":[{"author":{"id":1306092,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ61zTDmLk7IhLJn6seBPOwsVaKIWUWaxk5YmsdYBZUOYMQCsyl9iaQVSg9U5qJVLLOCFUoLUuYnRA/132","nickname":"fjpcode","note":"","ucode":"C32C5E3ECB9A90","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":71637,"discussion_content":"把文件描述符的引用计数减1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575443069,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140891,"user_name":"酸葡萄","can_delete":false,"product_type":"c1","uid":1154146,"ip_address":"","ucode":"9D059C4FB327C0","user_header":"https://static001.geekbang.org/account/avatar/00/11/9c/62/f625b2bb.jpg","comment_is_top":false,"comment_ctime":1571067885,"is_pvip":false,"replies":[{"id":"55086","content":"第29讲里讲到了，答疑篇更是从源码角度深度剖析了，希望可以解答你的疑惑。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1571453454,"ip_address":"","comment_id":140891,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1571067885","product_id":100032701,"comment_content":"老师您好能详细讲下select,poll,epoll底层实现原理和差别吗？为什么opoll的性能会大幅优于select和poll呢？能在答疑篇中系统讲下吗？谢谢。","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470612,"discussion_content":"第29讲里讲到了，答疑篇更是从源码角度深度剖析了，希望可以解答你的疑惑。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571453454,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2123892,"avatar":"https://static001.geekbang.org/account/avatar/00/20/68/74/aea478ba.jpg","nickname":"我是管小亮","note":"","ucode":"A1C624CF9E1CA3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299503,"discussion_content":"我来说自己看到的。\n\n首先对于select和poll来说，文件描述符都是在用户态被加入到文件描述符集合的，每次调用都需要将整个集合拷贝到内核态，epoll是将整个文件描述符集合维护在内核态，每次添加文件描述符都需要执行系统调用。\n\n其次select使用线性表描述文件描述符集合，而poll是使用链表维护文件描述符集合，而epoll是使用红黑树来描述文件描述符集合，除此之外，还维护了ready list用于添加就绪事件，每次调用epoll_wait检测这个链表即可。\n\n然后select和poll的最大开销是内核判断文件描述符就绪，select和poll调用时需要遍历整个文件描述符集合去判断各个文件描述符是否有活动，epoll来说，活动产生会触发回调函数通知epoll文件描述符，然后内核将这些就绪事件文件描述符放入到ready list中，等待epoll_wait调用后处理。\n\nselect和poll只能工作在LT下，epoll是ET和LT都可以。\n\n所以如果fd数量较少，且都比较活跃，select和poll更佳，如果是fd数量较多，且部分活跃，epoll性能更佳","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1597718939,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138271,"user_name":"刘丹","can_delete":false,"product_type":"c1","uid":1081922,"ip_address":"","ucode":"66594D1C957E15","user_header":"https://static001.geekbang.org/account/avatar/00/10/82/42/8b04d489.jpg","comment_is_top":false,"comment_ctime":1570145859,"is_pvip":false,"replies":[{"id":"54294","content":"可以删除。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1570969416,"ip_address":"","comment_id":138271,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1570145859","product_id":100032701,"comment_content":"代码里的2个continue关键词好像都是可以删除的？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469461,"discussion_content":"可以删除。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570969416,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138246,"user_name":"张立华","can_delete":false,"product_type":"c1","uid":1231713,"ip_address":"","ucode":"173B938DD9478A","user_header":"https://static001.geekbang.org/account/avatar/00/12/cb/61/b62d8a3b.jpg","comment_is_top":false,"comment_ctime":1570113448,"is_pvip":false,"replies":[{"id":"54292","content":"我没有试过，你可以试下哈。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1570969313,"ip_address":"","comment_id":138246,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1570113448","product_id":100032701,"comment_content":"请问下老师，一个epoll队列里有100万个socket，性能怎么样，有没试过","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469452,"discussion_content":"我没有试过，你可以试下哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570969313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137816,"user_name":"沉淀的梦想","can_delete":false,"product_type":"c1","uid":1177315,"ip_address":"","ucode":"BCB7C26F9D214B","user_header":"https://static001.geekbang.org/account/avatar/00/11/f6/e3/e4bcd69e.jpg","comment_is_top":false,"comment_ctime":1569861899,"is_pvip":false,"replies":[{"id":"54284","content":"这里是笔误，应该是epoll_create1的输入参数flags如为0，则和epoll_create()一样。<br><br>已经让编辑勘误了，感谢指出。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1570966819,"ip_address":"","comment_id":137816,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569861899","product_id":100032701,"comment_content":"文中提到“如果 epoll_create1() 的输入 size 大小为 0，则和 epoll_create() 一样，内核自动忽略。”，epoll_create1的输入参数不是flags吗？size又是指什么？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469275,"discussion_content":"这里是笔误，应该是epoll_create1的输入参数flags如为0，则和epoll_create()一样。\n\n已经让编辑勘误了，感谢指出。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570966819,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137603,"user_name":"Hale","can_delete":false,"product_type":"c1","uid":1129731,"ip_address":"","ucode":"1925955343FE94","user_header":"https://static001.geekbang.org/account/avatar/00/11/3d/03/b2d9a084.jpg","comment_is_top":false,"comment_ctime":1569804755,"is_pvip":true,"replies":[{"id":"53869","content":"其实有人测试过，发现两者的差距没有想象中大，所以，条件触发也是经常使用的。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1570698267,"ip_address":"","comment_id":137603,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569804755","product_id":100032701,"comment_content":"epoll这两种模式有使用的不同场景吗？既然边缘触发优于条件触发，那什么场景下会使用条件触发？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469171,"discussion_content":"其实有人测试过，发现两者的差距没有想象中大，所以，条件触发也是经常使用的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570698267,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137601,"user_name":"Hale","can_delete":false,"product_type":"c1","uid":1129731,"ip_address":"","ucode":"1925955343FE94","user_header":"https://static001.geekbang.org/account/avatar/00/11/3d/03/b2d9a084.jpg","comment_is_top":false,"comment_ctime":1569804599,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1569804599","product_id":100032701,"comment_content":"poll是条件触发，只要条件满足，每次都会触发","like_count":0},{"had_liked":false,"id":137519,"user_name":"Steiner","can_delete":false,"product_type":"c1","uid":1622329,"ip_address":"","ucode":"232C1C75207A1E","user_header":"https://static001.geekbang.org/account/avatar/00/18/c1/39/11904266.jpg","comment_is_top":false,"comment_ctime":1569759990,"is_pvip":false,"replies":[{"id":"53861","content":"你可以这么理解，不过fd是我们之前在epoll_ctl调用时传给内核的，可以是fd，也可以是其他用来和内核交互的数据结构。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1570697429,"ip_address":"","comment_id":137519,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569759990","product_id":100032701,"comment_content":"epoll_wait的意思是把发生的事件和fd装载到events这个数组里吗","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469132,"discussion_content":"你可以这么理解，不过fd是我们之前在epoll_ctl调用时传给内核的，可以是fd，也可以是其他用来和内核交互的数据结构。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570697429,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}