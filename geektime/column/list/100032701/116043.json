{"id":116043,"title":"05 | 使用套接字进行读写：开始交流吧","content":"<p>你好，我是盛延敏，这里是网络编程实战第5讲，欢迎回来。</p><p>在前面的章节中，我们讲述了套接字相关的知识，包括套接字的格式，套接字的创建以及TCP连接的建立等。在这一讲里，我来讲一下如何使用创建的套接字收发数据。</p><p>连接建立的根本目的是为了数据的收发。拿我们常用的网购场景举例子，我们在浏览商品或者购买货品的时候，并不会察觉到网络连接的存在，但是我们可以真切感觉到数据在客户端和服务器端有效的传送， 比如浏览商品时商品信息的不断刷新，购买货品时显示购买成功的消息等。</p><p>首先我们先来看一下发送数据。</p><h2>发送数据</h2><p>发送数据时常用的有三个函数，分别是write、send和sendmsg。</p><pre><code>ssize_t write (int socketfd, const void *buffer, size_t size)\nssize_t send (int socketfd, const void *buffer, size_t size, int flags)\nssize_t sendmsg(int sockfd, const struct msghdr *msg, int flags)\n</code></pre><p>每个函数都是单独使用的，使用的场景略有不同：</p><p>第一个函数是常见的文件写函数，如果把socketfd换成文件描述符，就是普通的文件写入。</p><p>如果想指定选项，发送带外数据，就需要使用第二个带flag的函数。所谓带外数据，是一种基于TCP协议的紧急数据，用于客户端-服务器在特定场景下的紧急处理。</p><p>如果想指定多重缓冲区传输数据，就需要使用第三个函数，以结构体msghdr的方式发送数据。</p><p>你看到这里可能会问，既然套接字描述符是一种特殊的描述符，那么在套接字描述符上调用write函数，应该和在普通文件描述符上调用write函数的行为是一致的，都是通过描述符句柄写入指定的数据。</p><!-- [[[read_end]]] --><p>乍一看，两者的表现形式是一样，内在的区别还是很不一样的。</p><p>对于普通文件描述符而言，一个文件描述符代表了打开的一个文件句柄，通过调用write函数，操作系统内核帮我们不断地往文件系统中写入字节流。注意，写入的字节流大小通常和输入参数size的值是相同的，否则表示出错。</p><p>对于套接字描述符而言，它代表了一个双向连接，在套接字描述符上调用write写入的字节数<strong>有可能</strong>比请求的数量少，这在普通文件描述符情况下是不正常的。</p><p>产生这个现象的原因在于操作系统内核为读取和发送数据做了很多我们表面上看不到的工作。接下来我拿write函数举例，重点阐述发送缓冲区的概念。</p><h3>发送缓冲区</h3><p>你一定要建立一个概念，当TCP三次握手成功，TCP连接成功建立后，操作系统内核会为每一个连接创建配套的基础设施，比如<strong>发送缓冲区</strong>。</p><p>发送缓冲区的大小可以通过套接字选项来改变，当我们的应用程序调用write函数时，实际所做的事情是把数据<strong>从应用程序中拷贝到操作系统内核的发送缓冲区中</strong>，并不一定是把数据通过套接字写出去。</p><p>这里有几种情况：</p><p>第一种情况很简单，操作系统内核的发送缓冲区足够大，可以直接容纳这份数据，那么皆大欢喜，我们的程序从write调用中退出，返回写入的字节数就是应用程序的数据大小。</p><p>第二种情况是，操作系统内核的发送缓冲区是够大了，不过还有数据没有发送完，或者数据发送完了，但是操作系统内核的发送缓冲区不足以容纳应用程序数据，在这种情况下，你预料的结果是什么呢？报错？还是直接返回？</p><p>操作系统内核并不会返回，也不会报错，而是应用程序被阻塞，也就是说应用程序在write函数调用处停留，不直接返回。术语“挂起”也表达了相同的意思，不过“挂起”是从操作系统内核角度来说的。</p><p>那么什么时候才会返回呢？</p><p>实际上，每个操作系统内核的处理是不同的。大部分UNIX系统的做法是一直等到可以把应用程序数据完全放到操作系统内核的发送缓冲区中，再从系统调用中返回。怎么理解呢？</p><p>别忘了，我们的操作系统内核是很聪明的，当TCP连接建立之后，它就开始运作起来。你可以把发送缓冲区想象成一条包裹流水线，有个聪明且忙碌的工人不断地从流水线上取出包裹（数据），这个工人会按照TCP/IP的语义，将取出的包裹（数据）封装成TCP的MSS包，以及IP的MTU包，最后走数据链路层将数据发送出去。这样我们的发送缓冲区就又空了一部分，于是又可以继续从应用程序搬一部分数据到发送缓冲区里，这样一直进行下去，到某一个时刻，应用程序的数据可以完全放置到发送缓冲区里。在这个时候，write阻塞调用返回。注意返回的时刻，应用程序数据并没有全部被发送出去，发送缓冲区里还有部分数据，这部分数据会在稍后由操作系统内核通过网络发送出去。</p><p><img src=\"https://static001.geekbang.org/resource/image/fd/dc/fdcdc766c6a6ebb7fbf15bb2d1e58bdc.png?wh=1188*800\" alt=\"\"></p><h2>读取数据</h2><p>我们可以注意到，套接字描述本身和本地文件描述符并无区别，<strong>在UNIX的世界里万物都是文件</strong>，这就意味着可以将套接字描述符传递给那些原先为处理本地文件而设计的函数。这些函数包括read和write交换数据的函数。</p><h3>read函数</h3><p>让我们先从最简单的read函数开始看起，这个函数的原型如下：</p><pre><code>ssize_t read (int socketfd, void *buffer, size_t size)\n</code></pre><p>read函数要求操作系统内核从套接字描述字socketfd<strong>读取最多多少个字节（size），并将结果存储到buffer中。返回值告诉我们实际读取的字节数目，也有一些特殊情况，如果返回值为0，表示EOF（end-of-file），这在网络中表示对端发送了FIN包，要处理断连的情况</strong>；如果返回值为-1，表示出错。当然，如果是非阻塞I/O，情况会略有不同，在后面的提高篇中我们会重点讲述非阻塞I/O的特点。</p><p>注意这里是最多读取size个字节。如果我们想让应用程序每次都读到size个字节，就需要编写下面的函数，不断地循环读取。</p><pre><code>/* 从socketfd描述字中读取&quot;size&quot;个字节. */\nsize_t readn(int fd, void *buffer, size_t size) {\n    char *buffer_pointer = buffer;\n    int length = size;\n\n    while (length &gt; 0) {\n        int result = read(fd, buffer_pointer, length);\n\n        if (result &lt; 0) {\n            if (errno == EINTR)\n                continue;     /* 考虑非阻塞的情况，这里需要再次调用read */\n            else\n                return (-1);\n        } else if (result == 0)\n            break;                /* EOF(End of File)表示套接字关闭 */\n\n        length -= result;\n        buffer_pointer += result;\n    }\n    return (size - length);        /* 返回的是实际读取的字节数*/\n}\n</code></pre><p>对这个程序稍微解释下：</p><ul>\n<li>6-19行的循环条件表示的是，在没读满size个字节之前，一直都要循环下去。</li>\n<li>10-11行表示的是非阻塞I/O的情况下，没有数据可以读，需要继续调用read。</li>\n<li>14-15行表示读到对方发出的FIN包，表现形式是EOF，此时需要关闭套接字。</li>\n<li>17-18行，需要读取的字符数减少，缓存指针往下移动。</li>\n<li>20行是在读取EOF跳出循环后，返回实际读取的字符数。</li>\n</ul><h2>缓冲区实验</h2><p>我们用一个客户端-服务器的例子来解释一下读取缓冲区和发送缓冲区的概念。在这个例子中客户端不断地发送数据，服务器端每读取一段数据之后进行休眠，以模拟实际业务处理所需要的时间。</p><h3>服务器端读取数据程序</h3><p>下面是服务器端读取数据的程序：</p><pre><code>#include &quot;lib/common.h&quot;\n\nvoid read_data(int sockfd) {\n    ssize_t n;\n    char buf[1024];\n\n    int time = 0;\n    for (;;) {\n        fprintf(stdout, &quot;block in read\\n&quot;);\n        if ((n = readn(sockfd, buf, 1024)) == 0)\n            return;\n\n        time++;\n        fprintf(stdout, &quot;1K read for %d \\n&quot;, time);\n        usleep(1000);\n    }\n}\n\n\nint main(int argc, char **argv) {\n    int listenfd, connfd;\n    socklen_t clilen;\n    struct sockaddr_in cliaddr, servaddr;\n\n    listenfd = socket(AF_INET, SOCK_STREAM, 0);\n\n    bzero(&amp;servaddr, sizeof(servaddr));\n    servaddr.sin_family = AF_INET;\n    servaddr.sin_addr.s_addr = htonl(INADDR_ANY);\n    servaddr.sin_port = htons(12345);\n\n    /* bind到本地地址，端口为12345 */\n    bind(listenfd, (struct sockaddr *) &amp;servaddr, sizeof(servaddr));\n    /* listen的backlog为1024 */\n    listen(listenfd, 1024);\n\n    /* 循环处理用户请求 */\n    for (;;) {\n        clilen = sizeof(cliaddr);\n        connfd = accept(listenfd, (struct sockaddr *) &amp;cliaddr, &amp;clilen);\n        read_data(connfd);   /* 读取数据 */\n        close(connfd);          /* 关闭连接套接字，注意不是监听套接字*/\n    }\n}\n</code></pre><p>对服务器端程序解释如下：</p><ul>\n<li>21-35行先后创建了socket套接字，bind到对应地址和端口，并开始调用listen接口监听；</li>\n<li>38-42行循环等待连接，通过accept获取实际的连接，并开始读取数据；</li>\n<li>8-15行实际每次读取1K数据，之后休眠1秒，用来模拟服务器端处理时延。</li>\n</ul><h3>客户端发送数据程序</h3><p>下面是客户端发送数据的程序：</p><pre><code>#include &quot;lib/common.h&quot;\n\n#define MESSAGE_SIZE 102400\n\nvoid send_data(int sockfd) {\n    char *query;\n    query = malloc(MESSAGE_SIZE + 1);\n    for (int i = 0; i &lt; MESSAGE_SIZE; i++) {\n        query[i] = 'a';\n    }\n    query[MESSAGE_SIZE] = '\\0';\n\n    const char *cp;\n    cp = query;\n    size_t remaining = strlen(query);\n    while (remaining) {\n        int n_written = send(sockfd, cp, remaining, 0);\n        fprintf(stdout, &quot;send into buffer %ld \\n&quot;, n_written);\n        if (n_written &lt;= 0) {\n            error(1, errno, &quot;send failed&quot;);\n            return;\n        }\n        remaining -= n_written;\n        cp += n_written;\n    }\n\n    return;\n}\n\nint main(int argc, char **argv) {\n    int sockfd;\n    struct sockaddr_in servaddr;\n\n    if (argc != 2)\n        error(1, 0, &quot;usage: tcpclient &lt;IPaddress&gt;&quot;);\n\n    sockfd = socket(AF_INET, SOCK_STREAM, 0);\n\n    bzero(&amp;servaddr, sizeof(servaddr));\n    servaddr.sin_family = AF_INET;\n    servaddr.sin_port = htons(12345);\n    inet_pton(AF_INET, argv[1], &amp;servaddr.sin_addr);\n    int connect_rt = connect(sockfd, (struct sockaddr *) &amp;servaddr, sizeof(servaddr));\n    if (connect_rt &lt; 0) {\n        error(1, errno, &quot;connect failed &quot;);\n    }\n    send_data(sockfd);\n    exit(0);\n}\n</code></pre><p>对客户端程序解释如下：</p><ul>\n<li>31-37行先后创建了socket套接字，调用connect向对应服务器端发起连接请求</li>\n<li>43行在连接建立成功后，调用send_data发送数据</li>\n<li>6-11行初始化了一个长度为MESSAGE_SIZE的字符串流</li>\n<li>16-25行调用send函数将MESSAGE_SIZE长度的字符串流发送出去</li>\n</ul><h3>实验一: 观察客户端数据发送行为</h3><p>客户端程序发送了一个很大的字节流，程序运行起来之后，我们会看到服务端不断地在屏幕上打印出读取字节流的过程：</p><p><img src=\"https://static001.geekbang.org/resource/image/34/1d/3455bb84f5ee020bc14bc1e15ead4d1d.jpg?wh=1142*1020\" alt=\"\"><br>\n而客户端直到最后所有的字节流发送完毕才打印出下面的一句话，说明在此之前send函数一直都是阻塞的，也就是说<strong>阻塞式套接字最终发送返回的实际写入字节数和请求字节数是相等的。</strong></p><p>而关于非阻塞套接字的操作，我会在后面的文章中讲解。</p><h3>实验二: 服务端处理变慢</h3><p>如果我们把服务端的休眠时间稍微调大，把客户端发送的字节数从10240000调整为1024000，再次运行刚才的例子，我们会发现，客户端很快打印出一句话：</p><p><img src=\"https://static001.geekbang.org/resource/image/b5/e6/b56f01f842b2344e1480ff519d1627e6.jpg?wh=1025*240\" alt=\"\"><br>\n但与此同时，服务端读取程序还在屏幕上不断打印读取数据的进度，显示出服务端读取程序还在辛苦地从缓冲区中读取数据。</p><p>通过这个例子我想再次强调一下：</p><p><strong>发送成功仅仅表示的是数据被拷贝到了发送缓冲区中，并不意味着连接对端已经收到所有的数据。至于什么时候发送到对端的接收缓冲区，或者更进一步说，什么时候被对方应用程序缓冲所接收，对我们而言完全都是透明的。</strong></p><h2>总结</h2><p>这一讲重点讲述了通过send和read来收发数据包，你需要牢记以下两点：</p><ul>\n<li>对于send来说，返回成功仅仅表示数据写到发送缓冲区成功，并不表示对端已经成功收到。</li>\n<li>对于read来说，需要循环读取数据，并且需要考虑EOF等异常条件。</li>\n</ul><h2>思考题</h2><p>最后你不妨思考一下，既然缓冲区如此重要，我们可不可以把缓冲区搞得大大的，这样不就可以提高应用程序的吞吐量了么？你可以想一想这个方法可行吗？另外你可以自己总结一下，一段数据流从应用程序发送端，一直到应用程序接收端，总共经过了多少次拷贝？</p><p>欢迎你在评论区与我分享你的答案，如果你理解了套接字读写的过程，也欢迎把这篇文章分享给你的朋友或者同事。</p>","comments":[{"had_liked":false,"id":122906,"user_name":"破晓^_^","can_delete":false,"product_type":"c1","uid":1149592,"ip_address":"","ucode":"3224920095AC9E","user_header":"https://static001.geekbang.org/account/avatar/00/11/8a/98/2be9d17b.jpg","comment_is_top":false,"comment_ctime":1565572319,"is_pvip":false,"replies":[{"id":"45181","content":"都是强人😄","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1565579600,"ip_address":"","comment_id":122906,"utype":1}],"discussion_count":18,"race_medal":0,"score":"302213283039","product_id":100032701,"comment_content":"无限增大缓冲区肯定不行，文章中已经说过write函数发送数据只是将数据发送到内核缓冲区，而什么时候发送由内核觉定。内核缓冲区总是充满数据时会产生粘包问题，同时网络的传输大小MTU也会限制每次发送的大小，最后由于数据堵塞需要消耗大量内存资源，资源使用效率不高。<br>用户缓冲区到内核缓冲区<br>内核缓冲区IP报文，一次三拷贝，总共6次。不知对否？","like_count":70,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462449,"discussion_content":"都是强人😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565579600,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2902752,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJaaRiaBo5xtYPib3az6lBtSG8ibebDUVGgSMRPD3nGn9hr0Iz8dDZXxMzsUV2M7uiaicBg9HdBxcSFic7g/132","nickname":"Geek_b83fff","note":"","ucode":"AFA20C90BCBF02","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":559017,"discussion_content":"到数据链路层加mac的时候不需要拷贝吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648563294,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":462449,"ip_address":""},"score":559017,"extra":""}]},{"author":{"id":1138821,"avatar":"https://static001.geekbang.org/account/avatar/00/11/60/85/f72f1d94.jpg","nickname":"与路同飞","note":"","ucode":"2985F1440A1962","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299671,"discussion_content":"粘包问题是应用层的是，tcp是流式协议","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1597761507,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1074310,"avatar":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","nickname":"多襄丸","note":"","ucode":"1AA1497C5A293C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4656,"discussion_content":"MTU是啥哇？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1565623856,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1149592,"avatar":"https://static001.geekbang.org/account/avatar/00/11/8a/98/2be9d17b.jpg","nickname":"破晓^_^","note":"","ucode":"3224920095AC9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1074310,"avatar":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","nickname":"多襄丸","note":"","ucode":"1AA1497C5A293C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4803,"discussion_content":"mtu是网络IP报文的单位，这个在ipv4常规环境下有长度限制的。也就是每一包的大小有限制。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1565746248,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4656,"ip_address":""},"score":4803,"extra":""}]},{"author":{"id":1272730,"avatar":"https://static001.geekbang.org/account/avatar/00/13/6b/9a/786b1ed8.jpg","nickname":"果粒橙","note":"","ucode":"000B15E28C68B6","race_medal":2,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551280,"discussion_content":"粘包根本就不是问题，只是tcp的特性。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644975273,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1102754,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d3/a2/931f6317.jpg","nickname":"WYW","note":"","ucode":"F74A09D712EBBA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":363983,"discussion_content":"干货","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617340049,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1905080,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/B6l9HbWQl7OcZCPZrpqJlq7bEqG68QqPQGJTBfIGMVahjGAjCkibwhUC65J8e3C7Zaia34MiaYRSzwoE6qxLSDCmA/132","nickname":"Geek_86b12c","note":"","ucode":"C1D5678AF07AE2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":216733,"discussion_content":"可以使用sendfile()系统调用，是数据直接从内核缓冲区发送到socket缓冲区在进入网络","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585481028,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1233780,"avatar":"https://static001.geekbang.org/account/avatar/00/12/d3/74/578b169d.jpg","nickname":"Yuuuuu","note":"","ucode":"64FD04761D2111","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4898,"discussion_content":"用户到内核，内核到IP，这不是只拷贝了两次吗，？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565799338,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1149592,"avatar":"https://static001.geekbang.org/account/avatar/00/11/8a/98/2be9d17b.jpg","nickname":"破晓^_^","note":"","ucode":"3224920095AC9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1233780,"avatar":"https://static001.geekbang.org/account/avatar/00/12/d3/74/578b169d.jpg","nickname":"Yuuuuu","note":"","ucode":"64FD04761D2111","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4995,"discussion_content":"我的理解是用户缓冲区到内核缓冲区，这是write过程；然后内核缓冲区到协议栈先组成IP包，然后IP包到数据链路层这是第三次；最后电信号出物理网卡，这里没有拷贝只有信号转换。然后读过程类似，一共6次。","likes_number":12,"is_delete":false,"is_hidden":false,"ctime":1565865862,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4898,"ip_address":""},"score":4995,"extra":""},{"author":{"id":1082022,"avatar":"https://static001.geekbang.org/account/avatar/00/10/82/a6/01ee14d5.jpg","nickname":"冷雨","note":"","ucode":"2ED2978575862F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1149592,"avatar":"https://static001.geekbang.org/account/avatar/00/11/8a/98/2be9d17b.jpg","nickname":"破晓^_^","note":"","ucode":"3224920095AC9E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5090,"discussion_content":"内核缓冲区组IP包是一个一个发还是一次切分整个缓冲区？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1565938163,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4995,"ip_address":""},"score":5090,"extra":""},{"author":{"id":1111870,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK2Az5uTh9ZGVA7yQCj1BXtXuicPRkvJicA97AoN9xX3bnPcUYglTMXJeZeoVbPQeJA7ICvQhR3KQ0w/132","nickname":"日不落帝国","note":"","ucode":"6A11ABBD8AC438","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1149592,"avatar":"https://static001.geekbang.org/account/avatar/00/11/8a/98/2be9d17b.jpg","nickname":"破晓^_^","note":"","ucode":"3224920095AC9E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":24772,"discussion_content":"学习了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570258590,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4995,"ip_address":""},"score":24772,"extra":""}]},{"author":{"id":1569581,"avatar":"https://static001.geekbang.org/account/avatar/00/17/f3/2d/1a5f7542.jpg","nickname":"0ver10@d","note":"","ucode":"36721BC40C328A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4804,"discussion_content":"能简单说下是哪三次拷贝吗？是因为分层设计吗，TCP一次，IP一次，MAC一次？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565746937,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1149592,"avatar":"https://static001.geekbang.org/account/avatar/00/11/8a/98/2be9d17b.jpg","nickname":"破晓^_^","note":"","ucode":"3224920095AC9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1569581,"avatar":"https://static001.geekbang.org/account/avatar/00/17/f3/2d/1a5f7542.jpg","nickname":"0ver10@d","note":"","ucode":"36721BC40C328A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4994,"discussion_content":"差不多，我的理解是用户缓冲区到内核缓冲区，这是write过程；然后内核缓冲区到协议栈先组成IP包，然后IP包到数据链路层这是第三次；最后电信号出物理网卡。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1565865788,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4804,"ip_address":""},"score":4994,"extra":""},{"author":{"id":1224659,"avatar":"https://static001.geekbang.org/account/avatar/00/12/af/d3/abb7bfe3.jpg","nickname":"Lukri","note":"","ucode":"31495D68FF0897","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1149592,"avatar":"https://static001.geekbang.org/account/avatar/00/11/8a/98/2be9d17b.jpg","nickname":"破晓^_^","note":"","ucode":"3224920095AC9E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":108132,"discussion_content":"不懂的不要在评论乱带节奏忽悠小白可以不。。。建议看看协议栈的代码去，tcp-->ip-->ethernet层就是指针操作，跟复制copy有半毛关系。数据发送复制的流程是：应用层-->协议栈(tpc/ip/ethernet都包含)-->transmit queue（这个是在ethernet层和驱动程序之间，也就是qdisc。一般tc限速都在此步）-->TX ring缓冲区（驱动程序和网卡之间的）--->网卡内部缓冲区（网卡）--->发送出去。。。。","likes_number":17,"is_delete":false,"is_hidden":false,"ctime":1577625118,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4994,"ip_address":""},"score":108132,"extra":""},{"author":{"id":1257751,"avatar":"https://static001.geekbang.org/account/avatar/00/13/31/17/02fc18b1.jpg","nickname":"麻雀","note":"","ucode":"67CD60D3E705B9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1224659,"avatar":"https://static001.geekbang.org/account/avatar/00/12/af/d3/abb7bfe3.jpg","nickname":"Lukri","note":"","ucode":"31495D68FF0897","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":127121,"discussion_content":"那这是几次呀？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578566960,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":108132,"ip_address":""},"score":127121,"extra":""}]}]},{"had_liked":false,"id":171829,"user_name":"莫珣","can_delete":false,"product_type":"c1","uid":1117933,"ip_address":"","ucode":"CAFE6F2AC5C177","user_header":"https://static001.geekbang.org/account/avatar/00/11/0e/ed/1c662e93.jpg","comment_is_top":false,"comment_ctime":1579024750,"is_pvip":false,"replies":[{"id":"68050","content":"总结的很牛","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1580626186,"ip_address":"","comment_id":171829,"utype":1}],"discussion_count":6,"race_medal":0,"score":"190557585774","product_id":100032701,"comment_content":"无限大肯定是不行的，这要从为什么使用缓存这个角度考虑。内核协议栈不确定用户一次要发多少数据，如果用户来一次就发一次，如果数据多还好说，如果少了，那网络I&#47;O很频繁，而真正发送出去的数据也不多，所以为了减少网络I&#47;O使用了缓存的策略。但为啥不呢无限大呢，网卡一次发出去的数据报它是有一个最大长度的，所以你不管累积再多数据最后还是要分片发送的，这样一来缓冲区太大也没什么意义，而且数据传输也是有延时要求的，不可能总是在缓冲区里待着等数据，这样就总会有空出来的缓冲区存放新数据，所以无限大缓冲区也没意义，反而还浪费资源。<br><br>发送端，假设数据能一次性复制完，那么从用户态内存拷贝到内核态内存是一次（这里应该直接拷贝到发送换冲区了），传输层组TCP包是第二次拷贝，因为要加包头，而发送缓冲区的都是紧凑内存全是应用层数据，那么分装包就需要一次拷贝，第三次，一个TCP包封装为IP报文这里可能也会需要一次拷贝，毕竟这里走到协议栈的下一层了。","like_count":45,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481527,"discussion_content":"总结的很牛","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580626186,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":407107,"discussion_content":"tcp封装成ip报文是通过构造ip头部，并上移skb结构体指针来实现。没有数据复制","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1634910896,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1222795,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a8/8b/c5c234b6.jpg","nickname":"小庄.Jerry","note":"","ucode":"72EECA77AAA1CA","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":354678,"discussion_content":"TCP包封装成IP报文不需要拷贝吧，在tcp协议栈通过指针就可以拆解包，为什么要拷贝，这么明显的问题，老师居然不指出？","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1615333716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2608728,"avatar":"https://static001.geekbang.org/account/avatar/00/27/ce/58/71ed845f.jpg","nickname":"Dexter","note":"","ucode":"909CABC4AC4AC9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572243,"discussion_content":"老师应该给出正确的答案","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1652672791,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2570874,"avatar":"https://static001.geekbang.org/account/avatar/00/27/3a/7a/e1fe011b.jpg","nickname":"动力无限good","note":"","ucode":"2087F6D9A7FE90","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":410877,"discussion_content":"那数据报为什么最大是1500，可不可以设置的更大以支持更大的缓冲区呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635783754,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1276613,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gmP4Yh00MZPwNvr4UQdLeXaX3TVyZEEp195S3vD3Sfl1xz5jBr1474Mt6w5OPr0KsrnQObfLRy5PkKNFjSBiasA/132","nickname":"大头爸爸","note":"","ucode":"131E25DB04D222","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":204819,"discussion_content":"请问IP层到链路层为什么就不需要另一次拷贝了呢?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584224285,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":211139,"user_name":"cool","can_delete":false,"product_type":"c1","uid":1383620,"ip_address":"","ucode":"254220D6E2DAE8","user_header":"https://static001.geekbang.org/account/avatar/00/15/1c/c4/3e593863.jpg","comment_is_top":false,"comment_ctime":1587902338,"is_pvip":false,"replies":[{"id":"79179","content":"TCP是流协议，根本不存在所谓粘包一说。应用层协议在设计的时候，是需要充分考虑到数据解析和还原的问题，如果设计不好，导致数据无法还原，那是应用层协议设计不佳，并不是说TCP天然有粘包问题。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1588497751,"ip_address":"","comment_id":211139,"utype":1}],"discussion_count":1,"race_medal":0,"score":"100372150146","product_id":100032701,"comment_content":"什么是粘包问题？怎么解决","like_count":22,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493206,"discussion_content":"TCP是流协议，根本不存在所谓粘包一说。应用层协议在设计的时候，是需要充分考虑到数据解析和还原的问题，如果设计不好，导致数据无法还原，那是应用层协议设计不佳，并不是说TCP天然有粘包问题。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1588497751,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123398,"user_name":"　","can_delete":false,"product_type":"c1","uid":1054128,"ip_address":"","ucode":"8DE760FED97EFA","user_header":"https://static001.geekbang.org/account/avatar/00/10/15/b0/d714a216.jpg","comment_is_top":false,"comment_ctime":1565667701,"is_pvip":false,"replies":[{"id":"45936","content":"👍","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1566129835,"ip_address":"","comment_id":123398,"utype":1}],"discussion_count":7,"race_medal":0,"score":"91759980917","product_id":100032701,"comment_content":"尝试着照着老师贴出来的代码写了一个，可以跑起来<br>https:&#47;&#47;github.com&#47;yingcheng-zhou&#47;socket-reading-and-writing","like_count":21,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462654,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566129835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1137237,"avatar":"https://static001.geekbang.org/account/avatar/00/11/5a/55/888d12dd.jpg","nickname":"NL","note":"","ucode":"E664C71840739F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":66220,"discussion_content":"终于跑起来了。。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1575041188,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1250205,"avatar":"https://static001.geekbang.org/account/avatar/00/13/13/9d/d91dc762.jpg","nickname":"喜欢吃鱼","note":"","ucode":"02F41572F53E3C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292067,"discussion_content":"跑起来了，多谢，不过server.c中的头文件zconf.h在ubuntu18下提示找不到，我注释掉之后可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595070905,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2016439,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKpTc7IRqpnHou6ggWNYTEiaerrPPUsjn72BgQsUtVbyoRzAFGXdwNwjRwfVoLTP1uQyZFicDMmeO3g/132","nickname":"Geek_0afe59","note":"","ucode":"5ECA0B3D6AC2E9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":275305,"discussion_content":"你也太厉害了 感谢感谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590681481,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1137237,"avatar":"https://static001.geekbang.org/account/avatar/00/11/5a/55/888d12dd.jpg","nickname":"NL","note":"","ucode":"E664C71840739F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":65894,"discussion_content":"您好，我跑代码。通过cmake后出现一个client和一个server\n我运行client会打印出send into buffer 1024000\n但是运行server什么都没有打印出来。\n这个运行的顺序是什么样的？\n因为我是新手。\n我尝试两种方法，先运行client在运行server\n还有一种打开两个终端一个运行client一个运行server","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575034235,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1394159,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/pTZS48zWWAhI0zGXrib8s124HSenCS2FTDD0r4SKCqw2ub4adicI4x2wTeH7bHdlsl8QwxeVmzTGs1PIImURxxPg/132","nickname":"itgou","note":"","ucode":"4F6FFA0DD1ACBA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":55417,"discussion_content":"感谢, 用你的我跑起来了, 用老师的,反而没跑起来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574376672,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1111870,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK2Az5uTh9ZGVA7yQCj1BXtXuicPRkvJicA97AoN9xX3bnPcUYglTMXJeZeoVbPQeJA7ICvQhR3KQ0w/132","nickname":"日不落帝国","note":"","ucode":"6A11ABBD8AC438","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":24774,"discussion_content":"支持支持，省事了，感谢同学","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570258755,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123362,"user_name":"fjpcode","can_delete":false,"product_type":"c1","uid":1306092,"ip_address":"","ucode":"C32C5E3ECB9A90","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ61zTDmLk7IhLJn6seBPOwsVaKIWUWaxk5YmsdYBZUOYMQCsyl9iaQVSg9U5qJVLLOCFUoLUuYnRA/132","comment_is_top":false,"comment_ctime":1565661519,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"91759974735","product_id":100032701,"comment_content":"1. 缓冲区搞大一些，在一定程度上能够减少write&#47;send等系统调用，减少用户空间和内核空间的切换。但是和吞吐量并没有直接关系，<br>还可能导致数据都挤压到内核缓冲区得不到处理，造成内存消耗的问题。<br>2. 发送方：用户空间--&gt;内核缓冲区--&gt;报文封装  三次拷贝，接收方反向过来，所以应该是6次。","like_count":21,"discussions":[{"author":{"id":1002581,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4c/55/879a4443.jpg","nickname":"greensky01","note":"","ucode":"9C1B0EBFC603D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5116,"discussion_content":"从用户空间拷贝到内核空间，从内核空间拷贝到报文封装，这不是两次吗？为什么是三次？","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1565952354,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1111870,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK2Az5uTh9ZGVA7yQCj1BXtXuicPRkvJicA97AoN9xX3bnPcUYglTMXJeZeoVbPQeJA7ICvQhR3KQ0w/132","nickname":"日不落帝国","note":"","ucode":"6A11ABBD8AC438","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":24773,"discussion_content":"优秀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570258722,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1324160,"avatar":"https://static001.geekbang.org/account/avatar/00/14/34/80/30e9ae41.jpg","nickname":"道","note":"","ucode":"851A0AD751D317","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":18367,"discussion_content":"不是两次拷贝嘛。来回就是四次","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569051584,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1127175,"avatar":"https://static001.geekbang.org/account/avatar/00/11/33/07/8f351609.jpg","nickname":"JustDoDT","note":"","ucode":"6AF0B80F00EAEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4832,"discussion_content":"优秀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565761363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":205533,"user_name":"WhatAKitty","can_delete":false,"product_type":"c1","uid":1135707,"ip_address":"","ucode":"911C089450926B","user_header":"https://static001.geekbang.org/account/avatar/00/11/54/5b/1a14d829.jpg","comment_is_top":false,"comment_ctime":1586665466,"is_pvip":false,"replies":[{"id":"76805","content":"DMA区域都知道，🐂。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1586681345,"ip_address":"","comment_id":205533,"utype":1}],"discussion_count":5,"race_medal":0,"score":"53126273018","product_id":100032701,"comment_content":"不涉及协议栈层面，应该是4次：<br>用户缓冲区 -&gt; 内核缓冲区 -&gt; 网卡 -&gt; 对端网卡 -&gt; 内核缓冲区 -&gt; 用户缓冲区<br><br>老师这里提及复制几次，主要是为了引出零拷贝吧。直接由用户缓冲区复制到网卡DMA区域。减少了中间经由内核缓冲区中转的过程。","like_count":12,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491504,"discussion_content":"DMA区域都知道，🐂。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586681345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1198882,"avatar":"https://static001.geekbang.org/account/avatar/00/12/4b/22/09540b7c.jpg","nickname":"天之草","note":"","ucode":"03864F7CB36E73","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278690,"discussion_content":"我也认为是，directory memory acess，零拷贝才是优化点，正常应该是4次拷贝吧？？老师能说个自己的理解么","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1591227632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1746216,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/a5/28/9dd784ec.jpg","nickname":"Geek_212c40","note":"","ucode":"93335D388232BA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371112,"discussion_content":"rdma","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619657658,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1346922,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8d/6a/46e95ff7.jpg","nickname":"坚忍不拔","note":"","ucode":"2C264384A3E79E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344791,"discussion_content":"赞同 内核的skb是不会复制的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611572300,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1002005,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/15/106eaaa8.jpg","nickname":"stackWarn","note":"","ucode":"89672E452DEBA5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292960,"discussion_content":"sendfile系统调用也是零拷贝","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595397338,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130540,"user_name":"itschenxiang","can_delete":false,"product_type":"c1","uid":1519547,"ip_address":"","ucode":"7D90194AC52435","user_header":"https://static001.geekbang.org/account/avatar/00/17/2f/bb/4236d712.jpg","comment_is_top":false,"comment_ctime":1567480492,"is_pvip":false,"replies":[{"id":"50801","content":"表示缓冲区就那么大，装不下你要的那么大的字节流，就返回了目前能装下的部分，剩下的部分应用程序要自己接着往里装。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1568193903,"ip_address":"","comment_id":130540,"utype":1}],"discussion_count":3,"race_medal":0,"score":"44517153452","product_id":100032701,"comment_content":"关于write函数的返回值那里还是不太懂，当它的返回值（数值大小）小于期望写入的字节数，那它的值代表什么呢？？？<br>","like_count":10,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466005,"discussion_content":"表示缓冲区就那么大，装不下你要的那么大的字节流，就返回了目前能装下的部分，剩下的部分应用程序要自己接着往里装。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568193903,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1331202,"avatar":"https://static001.geekbang.org/account/avatar/00/14/50/02/cce1cf67.jpg","nickname":"awmthink","note":"","ucode":"742915BBCE7111","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":188247,"discussion_content":"对于阻塞式socket，write/send函数的返回值 应该 和 期望写入的字节数是一致的","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1582805869,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1002771,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4d/13/20492b0c.jpg","nickname":"9413","note":"","ucode":"DE3F36F8D32F10","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335396,"discussion_content":"阻塞的情况，发送和期望的返回值可能不一致也可能一致","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608182505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185205,"user_name":"何赫赫","can_delete":false,"product_type":"c1","uid":1385332,"ip_address":"","ucode":"AB715356D60068","user_header":"https://static001.geekbang.org/account/avatar/00/15/23/74/b81c9f8c.jpg","comment_is_top":false,"comment_ctime":1583514368,"is_pvip":false,"replies":[{"id":"71662","content":"在非阻塞I&#47;O的情况下，send函数是&quot;能写多少写多少&quot;，所以n_written就不等于remaining了，而send函数为了同时对阻塞I&#47;O和非阻塞I&#47;O起作用，就用while循环了。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1583639229,"ip_address":"","comment_id":185205,"utype":1}],"discussion_count":1,"race_medal":0,"score":"40238220032","product_id":100032701,"comment_content":"    while (remaining) {        int n_written = send(sockfd, cp, remaining, 0);        fprintf(stdout, &quot;send into buffer %ld \\n&quot;, n_written);        if (n_written &lt;= 0) {            error(1, errno, &quot;send failed&quot;);            return;        }        remaining -= n_written;        cp += n_written;    }<br><br>老师你好，send函数不是会等所有的数据都放入缓冲区后才返回吗，那返回的n_written不是应该等于remaining呀，为什么还需要while循环","like_count":9,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486288,"discussion_content":"在非阻塞I/O的情况下，send函数是&amp;quot;能写多少写多少&amp;quot;，所以n_written就不等于remaining了，而send函数为了同时对阻塞I/O和非阻塞I/O起作用，就用while循环了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583639229,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226116,"user_name":"郑祖煌","can_delete":false,"product_type":"c1","uid":1469608,"ip_address":"","ucode":"49A0D2E3279826","user_header":"https://static001.geekbang.org/account/avatar/00/16/6c/a8/1922a0f5.jpg","comment_is_top":false,"comment_ctime":1591953659,"is_pvip":false,"replies":[{"id":"84277","content":"👍","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1592743925,"ip_address":"","comment_id":226116,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27361757435","product_id":100032701,"comment_content":"增大一些是可以提高系统的效率，一定程度上减少了write&#47;send调用，减少了用户空间和内核之间的切换。但是并不能增大吞吐量，毕竟内核的缓冲区并不能跟用户空间的缓冲区保持同步增大。把内核缓冲区总是满满的会增加粘包的频率和概率。","like_count":6,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498111,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592743925,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123461,"user_name":"传说中的成大大","can_delete":false,"product_type":"c1","uid":1236766,"ip_address":"","ucode":"103543D6E706BF","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","comment_is_top":false,"comment_ctime":1565679851,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23040516331","product_id":100032701,"comment_content":"还有就是通过现象说明 应用程缓冲区虽然是10240000但是套接字缓冲区应该不是10240000这么大它一次性没写完，这也是为啥服务器端在不停的打印收到的字节数 这说明在客户端send未完全拷贝到套接字缓冲区之前他是不会返回的","like_count":5},{"had_liked":false,"id":122964,"user_name":"Geek_Wison","can_delete":false,"product_type":"c1","uid":1504371,"ip_address":"","ucode":"2CD880F07FDD57","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er4HlmmWfWicNmo3x3HKaOwz3ibcicDFlV5xILbILKGFCXbnaLf2fZRARfBdVBC5NhIPmXxaxA0T9Jhg/132","comment_is_top":false,"comment_ctime":1565580336,"is_pvip":false,"replies":[{"id":"45189","content":"正在进行中","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1565581742,"ip_address":"","comment_id":122964,"utype":1}],"discussion_count":5,"race_medal":0,"score":"23040416816","product_id":100032701,"comment_content":"老师可以将完整的代码的github地址贴出来吗，我想自己编译调试运行一下。","like_count":5,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462479,"discussion_content":"正在进行中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565581742,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1111870,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK2Az5uTh9ZGVA7yQCj1BXtXuicPRkvJicA97AoN9xX3bnPcUYglTMXJeZeoVbPQeJA7ICvQhR3KQ0w/132","nickname":"日不落帝国","note":"","ucode":"6A11ABBD8AC438","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":24775,"discussion_content":"https://github.com/yingcheng-zhou/socket-reading-and-writing这个有","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570258779,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1025024,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a4/00/30199ec9.jpg","nickname":"蓉城小隐","note":"","ucode":"8238B37471141E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4657,"discussion_content":"自己写一遍 印象更深刻 先不看老师的代码，根据思路写一遍，然后再对比","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1565624114,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1504371,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er4HlmmWfWicNmo3x3HKaOwz3ibcicDFlV5xILbILKGFCXbnaLf2fZRARfBdVBC5NhIPmXxaxA0T9Jhg/132","nickname":"Geek_Wison","note":"","ucode":"2CD880F07FDD57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1025024,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a4/00/30199ec9.jpg","nickname":"蓉城小隐","note":"","ucode":"8238B37471141E","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":5092,"discussion_content":"自己写一遍对于我这小白来说难度还是有点大呀。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565938350,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4657,"ip_address":""},"score":5092,"extra":""}]},{"author":{"id":1504371,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er4HlmmWfWicNmo3x3HKaOwz3ibcicDFlV5xILbILKGFCXbnaLf2fZRARfBdVBC5NhIPmXxaxA0T9Jhg/132","nickname":"Geek_Wison","note":"","ucode":"2CD880F07FDD57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4635,"discussion_content":"期待！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565611669,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179323,"user_name":"tianheng31","can_delete":false,"product_type":"c1","uid":1781370,"ip_address":"","ucode":"1684B35171F2B4","user_header":"https://static001.geekbang.org/account/avatar/00/1b/2e/7a/47b6a379.jpg","comment_is_top":false,"comment_ctime":1581962544,"is_pvip":false,"replies":[{"id":"71046","content":"1.是减少一个0.<br>2.我想表达的意思是TCP协议给我们提供了一个透明的交互方式，数据的接收是实现的细节，我们并不需要知道这个细节。如果你从要感知这个细节角度出发，确实是不透明的。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1583053819,"ip_address":"","comment_id":179323,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18761831728","product_id":100032701,"comment_content":"想请问老师两个问题：<br>【1】“如果我们把服务端的休眠时间稍微调大，把客户端发送的字节数从从 10240000 调整为1024000”，这里表述是否有点小偏差，是从102400调整为2014000吗？<br>【2】“对我们而言完全都是透明的”，既然我们不知道对方什么时候接收完毕，是否应该是不透明的呢？","like_count":4,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484204,"discussion_content":"1.是减少一个0.\n2.我想表达的意思是TCP协议给我们提供了一个透明的交互方式，数据的接收是实现的细节，我们并不需要知道这个细节。如果你从要感知这个细节角度出发，确实是不透明的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583053819,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1781370,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/2e/7a/47b6a379.jpg","nickname":"tianheng31","note":"","ucode":"1684B35171F2B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":175965,"discussion_content":"第一条的时间打错了，不是2014000，是1024000，抱歉。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582009783,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159433,"user_name":"学怪","can_delete":false,"product_type":"c1","uid":1723983,"ip_address":"","ucode":"FE40B40460B0C7","user_header":"https://static001.geekbang.org/account/avatar/00/1a/4e/4f/b0b24789.jpg","comment_is_top":false,"comment_ctime":1575622367,"is_pvip":false,"replies":[{"id":"61025","content":"因为数据像流水一样，不会结束，所以叫做stream流。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1575798753,"ip_address":"","comment_id":159433,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18755491551","product_id":100032701,"comment_content":"网络编程中为什么要循环读取数据呢？","like_count":4,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477057,"discussion_content":"因为数据像流水一样，不会结束，所以叫做stream流。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575798753,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1101894,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d0/46/1a9229b3.jpg","nickname":"NEVER SETTLE","note":"","ucode":"9C86BDAFDBF768","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291285,"discussion_content":"那服务端如何判断客户端已经将数据发送完了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594772897,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138296,"user_name":"itschenxiang","can_delete":false,"product_type":"c1","uid":1519547,"ip_address":"","ucode":"7D90194AC52435","user_header":"https://static001.geekbang.org/account/avatar/00/17/2f/bb/4236d712.jpg","comment_is_top":false,"comment_ctime":1570157954,"is_pvip":false,"replies":[{"id":"54301","content":"就是说读的时候可能读不到你指定大小的字节流；而发送的时候如果是阻塞套接字，则会全部发送完；只有当非阻塞套接字的时候，才可能发送的字节数和请求的字节数不一致。该系列的后面几讲会讨论到这方面的内容。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1570970426,"ip_address":"","comment_id":138296,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14455059842","product_id":100032701,"comment_content":"在 UNP 中关于 read 和 write 函数有这样一段描述：字节流套接字上调用 read 或 write 输入或输出的字节数可能比请求的数量少......这个现象在 read 一个字节流套接字时很常见，但是在 write 一个字节流套接字时只能在该套接字为非阻塞的前提下才出现，请问这里是什么意思？","like_count":3,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469472,"discussion_content":"就是说读的时候可能读不到你指定大小的字节流；而发送的时候如果是阻塞套接字，则会全部发送完；只有当非阻塞套接字的时候，才可能发送的字节数和请求的字节数不一致。该系列的后面几讲会讨论到这方面的内容。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570970426,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137606,"user_name":"tongmin_tsai","can_delete":false,"product_type":"c1","uid":1045090,"ip_address":"","ucode":"D9423E770D5846","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f2/62/f873cd8f.jpg","comment_is_top":false,"comment_ctime":1569804929,"is_pvip":false,"replies":[{"id":"53870","content":"首先，TCP的报文会被封装成一个一个TCP包，每个包都有一个sequence序列号，每个包里包含了一定的字节，当这个包被接收端接收(放到接收缓冲区中)，接收端发送一个ACK，这个ACK和sequence对应，这样服务端就可以知道哪些包被接收，哪些包没有被接收。<br><br>按照你的例子，我们以400为包大小，发送了三个ACK，就可以认为1200字节发送结束。<br><br>服务端是不需要知道数据是否发送完毕的，因为TCP是一个流式的，没有办法知道客户端下个时刻还会不会发送数据，服务端只要告诉客户端我收到了1200字节就可以了。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1570699072,"ip_address":"","comment_id":137606,"utype":1}],"discussion_count":4,"race_medal":0,"score":"14454706817","product_id":100032701,"comment_content":"老师，如果客户端和服务端要求是一次短链接，并且是一次性发完所有数据，那如果客户端的缓冲区大，服务端的缓冲区小，那么服务端如何能知道客户端这次数据完全发送完毕的？比如客户端发送1000字节，客户端的缓存区大小为1200字节，那客户端可以一次性把数据放到缓冲区，服务端这边，缓冲区大小为400字节，那么服务端是否就相当于要从缓冲区读取数据3次了，那么服务端是如何知道客户端数据发送完毕的？","like_count":3,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469173,"discussion_content":"首先，TCP的报文会被封装成一个一个TCP包，每个包都有一个sequence序列号，每个包里包含了一定的字节，当这个包被接收端接收(放到接收缓冲区中)，接收端发送一个ACK，这个ACK和sequence对应，这样服务端就可以知道哪些包被接收，哪些包没有被接收。\n\n按照你的例子，我们以400为包大小，发送了三个ACK，就可以认为1200字节发送结束。\n\n服务端是不需要知道数据是否发送完毕的，因为TCP是一个流式的，没有办法知道客户端下个时刻还会不会发送数据，服务端只要告诉客户端我收到了1200字节就可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570699072,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2608728,"avatar":"https://static001.geekbang.org/account/avatar/00/27/ce/58/71ed845f.jpg","nickname":"Dexter","note":"","ucode":"909CABC4AC4AC9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572245,"discussion_content":"服务器端的ACK是什么时候开始回复的？是接收端App从接收缓冲区取完数据，TCP/IP协议栈就会回复ACK了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652674247,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1024294,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","nickname":"null","note":"","ucode":"F9039EFED6B55D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":357899,"discussion_content":"这个ACK和sequence对应，这样[服务端]就可以知道哪些包被接收，哪些包没有被接收。\n\n中括号的服务端，应该是客户端？是么老师，谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615892462,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1045090,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f2/62/f873cd8f.jpg","nickname":"tongmin_tsai","note":"","ucode":"D9423E770D5846","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":29273,"discussion_content":"有些明白了，谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570758712,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123184,"user_name":"徐凯","can_delete":false,"product_type":"c1","uid":1244991,"ip_address":"","ucode":"12F82BA3649CD5","user_header":"https://static001.geekbang.org/account/avatar/00/12/ff/3f/bbb8a88c.jpg","comment_is_top":false,"comment_ctime":1565621584,"is_pvip":false,"replies":[{"id":"45927","content":"我理解不是这样的，咱们调用write就是一个系统调用，就会有用户态-内核态的上下文切换，你说的这个问题，确实是实战中应该尽量避免的，我在后面的提高篇中会针对你说的这个情况讲到一些技巧。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1566129312,"ip_address":"","comment_id":123184,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14450523472","product_id":100032701,"comment_content":"我想问一下  用户态缓存是否指的是运行库的缓存  我的意思就是 write最终是要调用系统调用的 而我们使用的是运行库的write函数  为了避免像发一个字节就立马调用系统调用  运行库也会有缓存来尽量减少系统调用的次数 这个是不是就是指的是用户态缓存  而不是指用户在程序中自己定义的一段buffer数组对吧","like_count":3,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462571,"discussion_content":"我理解不是这样的，咱们调用write就是一个系统调用，就会有用户态-内核态的上下文切换，你说的这个问题，确实是实战中应该尽量避免的，我在后面的提高篇中会针对你说的这个情况讲到一些技巧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566129312,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123030,"user_name":"Sweety","can_delete":false,"product_type":"c1","uid":1228667,"ip_address":"","ucode":"DC90C959AE147F","user_header":"https://static001.geekbang.org/account/avatar/00/12/bf/7b/e9592637.jpg","comment_is_top":false,"comment_ctime":1565595239,"is_pvip":false,"replies":[{"id":"45896","content":"答疑篇会稍微点拨一下C语言","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1566121438,"ip_address":"","comment_id":123030,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14450497127","product_id":100032701,"comment_content":"对C不了解,有点不好理解.<br>只能将就的看懂方法.<br>第一次认真跟课,就给自己挖了一个坑.<br>理解思想吧","like_count":3,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462508,"discussion_content":"答疑篇会稍微点拨一下C语言","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566121438,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166710,"user_name":"旅途","can_delete":false,"product_type":"c1","uid":1212902,"ip_address":"","ucode":"5022477E8E9441","user_header":"https://static001.geekbang.org/account/avatar/00/12/81/e6/6cafed37.jpg","comment_is_top":false,"comment_ctime":1577550162,"is_pvip":false,"replies":[{"id":"63875","content":"如果你问的是第二个实验的结果，其实是这样的，确实每次发送都会打印出&quot;send into buffer&quot;这句话，问题是这里的程序一次性的将query字符串发送到了发送缓冲区，而发生缓冲区如果足够大，那么是可以一次性的容纳这部分数据的，所以当我们把发送字节数从从 10240000 调整为 1024000，就会直接看到&quot;send into buffer&quot;这句话","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1577601970,"ip_address":"","comment_id":166710,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10167484754","product_id":100032701,"comment_content":"老师 问一下 send into buffer 这句话 看代码里 应该是每次 发送完都会打印出来 为什么调小发送字节数后才能打出来呢？","like_count":2,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479598,"discussion_content":"如果你问的是第二个实验的结果，其实是这样的，确实每次发送都会打印出&amp;quot;send into buffer&amp;quot;这句话，问题是这里的程序一次性的将query字符串发送到了发送缓冲区，而发生缓冲区如果足够大，那么是可以一次性的容纳这部分数据的，所以当我们把发送字节数从从 10240000 调整为 1024000，就会直接看到&amp;quot;send into buffer&amp;quot;这句话","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577601970,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2902752,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJaaRiaBo5xtYPib3az6lBtSG8ibebDUVGgSMRPD3nGn9hr0Iz8dDZXxMzsUV2M7uiaicBg9HdBxcSFic7g/132","nickname":"Geek_b83fff","note":"","ucode":"AFA20C90BCBF02","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":559021,"discussion_content":"原文表述有点问题吧，你说的客户端发送完才会打印，其实第一种情况，也是每次发送都会打印吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648564362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":479598,"ip_address":""},"score":559021,"extra":""}]}]},{"had_liked":false,"id":153939,"user_name":"itgou","can_delete":false,"product_type":"c1","uid":1394159,"ip_address":"","ucode":"4F6FFA0DD1ACBA","user_header":"https://wx.qlogo.cn/mmopen/vi_32/pTZS48zWWAhI0zGXrib8s124HSenCS2FTDD0r4SKCqw2ub4adicI4x2wTeH7bHdlsl8QwxeVmzTGs1PIImURxxPg/132","comment_is_top":false,"comment_ctime":1574334413,"is_pvip":false,"replies":[{"id":"59338","content":"1.bzero对地址进行了置0处理，相当于初始化。否则地址就是错的；<br>2.cliaddr在accept函数中是传了一个地址的，这相当于是accept函数的输出参数，这样就可以知道连接上来的客户端的信息，比如IP。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1574499129,"ip_address":"","comment_id":153939,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10164269005","product_id":100032701,"comment_content":"    bzero(&amp;servaddr, sizeof(servaddr));<br>    servaddr.sin_family = AF_INET;<br>    servaddr.sin_addr.s_addr = htonl(INADDR_ANY);<br>    servaddr.sin_port = htons(12345);<br>    &#47;* bind 到本地地址，端口为 12345 *&#47;<br>    bind(listenfd, (struct sockaddr *) &amp;servaddr, sizeof(servaddr));<br>    &#47;* listen 的 backlog 为 1024 *&#47;<br>    listen(listenfd, 1024);<br>    &#47;* 循环处理用户请求 *&#47;<br>    for (;;) {<br>        clilen = sizeof(cliaddr);<br>        connfd = accept(listenfd, (struct sockaddr *) &amp;cliaddr, &amp;clilen);<br>        read_data(connfd);   &#47;* 读取数据 *&#47;<br>        close(connfd);          &#47;* 关闭连接套接字，注意不是监听套接字 *&#47;<br>    }<br><br><br>两点不明白:<br>1,bzero函数做了什么事；<br>2,cliaddr客户端地址只是申明了一下，就传给accept函数了，有什么意义呢？","like_count":2,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475332,"discussion_content":"1.bzero对地址进行了置0处理，相当于初始化。否则地址就是错的；\n2.cliaddr在accept函数中是传了一个地址的，这相当于是accept函数的输出参数，这样就可以知道连接上来的客户端的信息，比如IP。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574499129,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1346922,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8d/6a/46e95ff7.jpg","nickname":"坚忍不拔","note":"","ucode":"2C264384A3E79E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344793,"discussion_content":"不建议bzero 建议使用memset","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611572409,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124510,"user_name":"禾桃","can_delete":false,"product_type":"c1","uid":1477855,"ip_address":"","ucode":"9FE85C34A9E9E0","user_header":"https://static001.geekbang.org/account/avatar/00/16/8c/df/77acb793.jpg","comment_is_top":false,"comment_ctime":1565915156,"is_pvip":false,"replies":[{"id":"45923","content":"阻塞那部分确实是这样的，当然，可以为read设置超时。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1566129046,"ip_address":"","comment_id":124510,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10155849748","product_id":100032701,"comment_content":"13-14 行表示的是非阻塞 I&#47;O 的情况下，没有数据可以读，需要继续调用 read。<br><br>EINTR  The call was interrupted by a signal before any data was read;<br>              see signal(7).<br><br>貌似这个场景是因为read这个函数在执行过程中被一个信号中断，而没有执行完提前退出了，<br><br>您的意思是只有在socket被设置为非阻塞的前提下，才会出现？<br><br>如果socket之前被设成阻塞，read就不会返回，直到这个信号被处理了，如果处理后返回这个进程，读取的操作会继续进行下去，直到read函数返回？<br><br>多谢！<br>","like_count":2,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463209,"discussion_content":"阻塞那部分确实是这样的，当然，可以为read设置超时。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566129046,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1477855,"avatar":"https://static001.geekbang.org/account/avatar/00/16/8c/df/77acb793.jpg","nickname":"禾桃","note":"","ucode":"9FE85C34A9E9E0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5140,"discussion_content":"嗯嗯，我也觉得是的，而且socket之前被设为了nonblocking 模式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566005815,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1500593,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIicibkDiceIZd7R3y57L7WIVFpVWU6ebp40G3ZNLFtlUWb7d4O5BpyxKQSd81FXo4rQFbQoUWu35jJg/132","nickname":"zhuxuxu","note":"","ucode":"DCD8E5D7F6F8A8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5093,"discussion_content":"我觉得这里写的有点问题，应该不是没有数据可读，而是中断返回","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565938886,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122878,"user_name":"业余爱好者","can_delete":false,"product_type":"c1","uid":1482915,"ip_address":"","ucode":"A890935A982988","user_header":"https://static001.geekbang.org/account/avatar/00/16/a0/a3/8da99bb0.jpg","comment_is_top":false,"comment_ctime":1565567890,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10155502482","product_id":100032701,"comment_content":"网络程序的性能瓶颈一般在于服务端，所以老师说的增加缓冲区大小应该指的是服务端。如果应用程序的处理速度跟不上，即使缓冲区再大，也不能在整体上提高太多的吞吐率。性能，从来都只能从整体上优化，简单粗暴地提升某一个指标的效果一般。<br><br>首先讲客户端发送的数据拷贝到缓冲区，<br>然后操作系统讲数据从客户端的缓冲区中发往服务端的缓冲区。服务端操作系统最后把数据从缓冲区搬移到应用程序。客户端应用--客户端缓冲区--服务端缓冲区--服务端应用程序。一共3次?","like_count":2,"discussions":[{"author":{"id":1236766,"avatar":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","nickname":"传说中的成大大","note":"","ucode":"103543D6E706BF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4693,"discussion_content":"哈哈哈 我把过程省略成了两次 就服务器端应用程序缓冲区到套接字缓冲区 然后通过tcp/ip到达客户端套接字缓冲区 再拷贝一次到客户端应用程序缓冲区......最开始是四次 结果越数越少","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565664577,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":274394,"user_name":"…","can_delete":false,"product_type":"c1","uid":1900485,"ip_address":"","ucode":"829E656291B3A6","user_header":"https://static001.geekbang.org/account/avatar/00/1c/ff/c5/4762ea1f.jpg","comment_is_top":false,"comment_ctime":1610988186,"is_pvip":false,"replies":[{"id":"99881","content":"看看是不是没连上端口？netstat看下？","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1611412187,"ip_address":"","comment_id":274394,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5905955482","product_id":100032701,"comment_content":"老师请问我启动了服务端  然后.&#47;tcpclient 127.0.0.1 ，在客户端显示sendinto buffer 102400，但是服务端还是没有收到数据是什么情况呢 ","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514004,"discussion_content":"看看是不是没连上端口？netstat看下？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611412187,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":247007,"user_name":"Jerry_lsj","can_delete":false,"product_type":"c1","uid":2001205,"ip_address":"","ucode":"E53D1BA8106C63","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epe7nx104LWFd7MHQVKCJeVzFXP6d91CcLReia7xQyyJibfYQDsofpRZkYhCVADEO6Ra6Cx917ibeR2A/132","comment_is_top":false,"comment_ctime":1599556460,"is_pvip":false,"replies":[{"id":"92041","content":"������","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1601869006,"ip_address":"","comment_id":247007,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5894523756","product_id":100032701,"comment_content":"个人理解，当有zero-copy时会减少一次cpu的copy(从kernel到socket buffer)，并且数据在本机传输的话，只有DMA的两次copy数据。（1、user space-kernel，2、kernel-NIC）","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505285,"discussion_content":"������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601869006,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239100,"user_name":"forward","can_delete":false,"product_type":"c1","uid":2008030,"ip_address":"","ucode":"136DFBA4F9F98A","user_header":"https://static001.geekbang.org/account/avatar/00/1e/a3/de/4062634b.jpg","comment_is_top":false,"comment_ctime":1596435792,"is_pvip":false,"replies":[{"id":"89344","content":"不是哦。缓冲区是实际存储字节的，滑动窗口是做TCP流量控制的。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1597585590,"ip_address":"","comment_id":239100,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5891403088","product_id":100032701,"comment_content":"请问，缓冲区的概念和TCP中的滑动窗口是一个东西吗？","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502978,"discussion_content":"不是哦。缓冲区是实际存储字节的，滑动窗口是做TCP流量控制的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597585590,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":228090,"user_name":"Ray","can_delete":false,"product_type":"c1","uid":1253774,"ip_address":"","ucode":"A7059C7D505AA0","user_header":"","comment_is_top":false,"comment_ctime":1592552660,"is_pvip":false,"replies":[{"id":"84283","content":"你的理解是正确的。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1592744587,"ip_address":"","comment_id":228090,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5887519956","product_id":100032701,"comment_content":"阻塞式套接字最终发送返回的实际写入字节数和请求字节数是相等的。<br>-----------<br>关于这个的劣迹，想请教下老师：<br>1.关于send的阻塞模式，我觉着很好理解，在函数中指定长度的数据全部拷贝到缓冲区后，才会返回。<br>2.但是recv的阻塞模式，如何理解，我是这么理解的，不知道对不对？<br>   到接收缓冲区中没有任何数据时，recv函数会一直阻塞，如果接收缓冲区中有的数据，recv就会返 回，但此时收到的数据长度，有可能会小于你在recv函数中指定的长度，需要自行判断，或者加上WAITALL的参数。","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498917,"discussion_content":"你的理解是正确的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592744587,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":216185,"user_name":"🐗Jinx","can_delete":false,"product_type":"c1","uid":1711790,"ip_address":"","ucode":"B5C084F54BF66A","user_header":"https://static001.geekbang.org/account/avatar/00/1a/1e/ae/a6d5e24a.jpg","comment_is_top":false,"comment_ctime":1589201962,"is_pvip":false,"replies":[{"id":"80636","content":"不是这层意思。<br><br>PUSH是TCP层的一个控制语义，是发送方通知接收方传输层应该尽快的将这个报文段交给应用层，和ACK、FIN等控制语义一样起到控制报文的作用。<br><br>PUSH对于我们应用程序的开发者来说是透明的，和send&#47;write没有什么关系。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1589705063,"ip_address":"","comment_id":216185,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5884169258","product_id":100032701,"comment_content":"For this purpose a push function is defined. To assure that data submitted to a TCP is actually transmitted the sending user indicates that it should be pushed through to the receiving user. A push causes the TCPs to promptly forward and deliver data up to that point to the receiver.<br><br>老师，这段话是出自 rfc 793 。里面提到的 push function ，是不是socket 编程里的里面套接字的send&#47;write 就暗地里帮我们 push 了。","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494708,"discussion_content":"不是这层意思。\n\nPUSH是TCP层的一个控制语义，是发送方通知接收方传输层应该尽快的将这个报文段交给应用层，和ACK、FIN等控制语义一样起到控制报文的作用。\n\nPUSH对于我们应用程序的开发者来说是透明的，和send/write没有什么关系。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589705063,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":207037,"user_name":"heyman","can_delete":false,"product_type":"c1","uid":1173894,"ip_address":"","ucode":"92EF9EF1B1B1B3","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/86/d34800a4.jpg","comment_is_top":false,"comment_ctime":1586998842,"is_pvip":false,"replies":[{"id":"77706","content":"在非阻塞I&#47;O情况下，读取的数据很多情况下都会比期望的值要小，也就是说，有多少数据就读取多少数据，后面的章节会详细涉及。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1587302768,"ip_address":"","comment_id":207037,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5881966138","product_id":100032701,"comment_content":"什么情况下read的返回值（读取的数据大小）会比期望读取的size小？","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491988,"discussion_content":"在非阻塞I/O情况下，读取的数据很多情况下都会比期望的值要小，也就是说，有多少数据就读取多少数据，后面的章节会详细涉及。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587302768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":199678,"user_name":"JDY","can_delete":false,"product_type":"c1","uid":1848474,"ip_address":"","ucode":"4B6F55332BE6DC","user_header":"https://static001.geekbang.org/account/avatar/00/1c/34/9a/1587bc6f.jpg","comment_is_top":false,"comment_ctime":1585493603,"is_pvip":false,"replies":[{"id":"75782","content":"lib&#47;common.h里有(https:&#47;&#47;github.com&#47;froghui&#47;yolanda)","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1586076461,"ip_address":"","comment_id":199678,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5880460899","product_id":100032701,"comment_content":"我想请问一下老师能不能把common.h文件发一下啊。这个文件找不到啊","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489864,"discussion_content":"lib/common.h里有(https://github.com/froghui/yolanda)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586076461,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170320,"user_name":"麻雀","can_delete":false,"product_type":"c1","uid":1257751,"ip_address":"","ucode":"67CD60D3E705B9","user_header":"https://static001.geekbang.org/account/avatar/00/13/31/17/02fc18b1.jpg","comment_is_top":false,"comment_ctime":1578567624,"is_pvip":false,"replies":[{"id":"68087","content":"这需要通过cmake自动产生。<br><br>根目录下CMakeLists.txt有这么一段：<br><br># check epoll and add config.h for the macro compilation<br>include(CheckSymbolExists)<br>check_symbol_exists(epoll_create &quot;sys&#47;epoll.h&quot; EPOLL_EXISTS)<br>if (EPOLL_EXISTS)<br>    # Linux下设置为epoll<br>    set(EPOLL_ENABLE 1 CACHE INTERNAL &quot;enable epoll&quot;)<br><br>    # Linux下也设置为poll<br>#    set(EPOLL_ENABLE &quot;&quot; CACHE INTERNAL &quot;not enable epoll&quot;)<br>else ()<br>    set(EPOLL_ENABLE &quot;&quot; CACHE INTERNAL &quot;not enable epoll&quot;)<br>endif ()","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1580632500,"ip_address":"","comment_id":170320,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5873534920","product_id":100032701,"comment_content":"#include &quot;config.h&quot;   我引入的common.h也找不到这个头文件","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480939,"discussion_content":"这需要通过cmake自动产生。\n\n根目录下CMakeLists.txt有这么一段：\n\n# check epoll and add config.h for the macro compilation\ninclude(CheckSymbolExists)\ncheck_symbol_exists(epoll_create &amp;quot;sys/epoll.h&amp;quot; EPOLL_EXISTS)\nif (EPOLL_EXISTS)\n    # Linux下设置为epoll\n    set(EPOLL_ENABLE 1 CACHE INTERNAL &amp;quot;enable epoll&amp;quot;)\n\n    # Linux下也设置为poll\n#    set(EPOLL_ENABLE &amp;quot;&amp;quot; CACHE INTERNAL &amp;quot;not enable epoll&amp;quot;)\nelse ()\n    set(EPOLL_ENABLE &amp;quot;&amp;quot; CACHE INTERNAL &amp;quot;not enable epoll&amp;quot;)\nendif ()","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580632500,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1659275,"avatar":"https://static001.geekbang.org/account/avatar/00/19/51/8b/e3b827b7.jpg","nickname":"羿达","note":"","ucode":"48559E9D480C34","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":158381,"discussion_content":"我也没有找到,请问您找到了吗?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580570057,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137891,"user_name":"衬衫的价格是19美元","can_delete":false,"product_type":"c1","uid":1397631,"ip_address":"","ucode":"655F925451F772","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKVUskibDnhMt5MCIJ8227HWkeg2wEEyewps8GuWhWaY5fy7Ya56bu2ktMlxdla3K29Wqia9efCkWaQ/132","comment_is_top":false,"comment_ctime":1569907462,"is_pvip":false,"replies":[{"id":"54288","content":"应该是网卡或者网络原因。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1570968287,"ip_address":"","comment_id":137891,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5864874758","product_id":100032701,"comment_content":"就像老师说的仓库的例子，在write的时候，如果缓冲区设定的很大，那么应用程序每次往缓冲区写数据的时候，都会返回完整的数据大小，应用程序以为数据发送没问题，于是接着往缓冲区写，但实际呢？可能由于网络的原因，实际数据发送的很慢，数据都堆积在缓冲区，并没有发出去，但是在达到缓冲区上限之前，应用程序都是无法感知的，而一旦感知到的时候，发现已经有山一样的数据堆积在缓冲区了","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469296,"discussion_content":"应该是网卡或者网络原因。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570968287,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1197178,"avatar":"https://static001.geekbang.org/account/avatar/00/12/44/7a/d27c1ed3.jpg","nickname":"西边一抹残阳","note":"","ucode":"6836AB08783DC5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36876,"discussion_content":"服务端每次都是读取1024个字节，为啥实际读取的数量都要小于1024呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571455245,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134258,"user_name":"Kepler","can_delete":false,"product_type":"c1","uid":1214303,"ip_address":"","ucode":"0C9CA3DB8B3CF0","user_header":"https://static001.geekbang.org/account/avatar/00/12/87/5f/6bf8b74a.jpg","comment_is_top":false,"comment_ctime":1568785299,"is_pvip":true,"replies":[{"id":"51605","content":"在答疑篇中有一个我认为的答案，其实这是一个开放性问题，不用纠结这个数据，主要是明白拷贝发生的场景，为什么为发生拷贝。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1568884828,"ip_address":"","comment_id":134258,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5863752595","product_id":100032701,"comment_content":"没有答案吗，数据从应用程序发送端，到应用程序接收端到底为啥是6次？","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467680,"discussion_content":"在答疑篇中有一个我认为的答案，其实这是一个开放性问题，不用纠结这个数据，主要是明白拷贝发生的场景，为什么为发生拷贝。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568884828,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133318,"user_name":"Tunayoyo","can_delete":false,"product_type":"c1","uid":1447213,"ip_address":"","ucode":"E77AFDE575CE04","user_header":"https://static001.geekbang.org/account/avatar/00/16/15/2d/8447e8c8.jpg","comment_is_top":false,"comment_ctime":1568515666,"is_pvip":false,"replies":[{"id":"51621","content":"是的，所以我的值是1000，相当于是1毫秒。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1568887110,"ip_address":"","comment_id":133318,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5863482962","product_id":100032701,"comment_content":"tcpserver.c代码解释有问题:usleep()函数参数的单位是微秒，也就是10^(-6)秒。","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467346,"discussion_content":"是的，所以我的值是1000，相当于是1毫秒。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568887110,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123456,"user_name":"传说中的成大大","can_delete":false,"product_type":"c1","uid":1236766,"ip_address":"","ucode":"103543D6E706BF","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","comment_is_top":false,"comment_ctime":1565679360,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"5860646656","product_id":100032701,"comment_content":"我通过百度把示例代码跑起来了 当客户端连接成功服务器过后 开始发送数据 服务器的终端不停打印，然后我发现一个现象就是 因为打印太多 能看到的是 9723 每一秒涨1 第二秒就是 9724 9725 9726等一直到1000我想问的是为什么一秒比一秒多1呢？当服务器端打印完过后客户端打印 send into buffer 10240000然后程序退出","like_count":1,"discussions":[{"author":{"id":1110218,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f0/ca/4560f06b.jpg","nickname":"zhchnchn","note":"","ucode":"2219E40ED134D4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4730,"discussion_content":"time不是每次循环就加1吗？time ++;","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565690799,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1236766,"avatar":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","nickname":"传说中的成大大","note":"","ucode":"103543D6E706BF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1110218,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f0/ca/4560f06b.jpg","nickname":"zhchnchn","note":"","ucode":"2219E40ED134D4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5277,"discussion_content":"打印的是时间？而不是接收端的长度？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566130351,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4730,"ip_address":""},"score":5277,"extra":""},{"author":{"id":1245504,"avatar":"https://static001.geekbang.org/account/avatar/00/13/01/40/a203a3b9.jpg","nickname":"爱学习不害怕","note":"","ucode":"BE325C02E4C92F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1236766,"avatar":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","nickname":"传说中的成大大","note":"","ucode":"103543D6E706BF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295233,"discussion_content":"接受的次数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596121613,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":5277,"ip_address":""},"score":295233,"extra":""}]}]},{"had_liked":false,"id":123007,"user_name":"范龙dragon","can_delete":false,"product_type":"c1","uid":1157519,"ip_address":"","ucode":"D9CEADE6B6BED4","user_header":"https://static001.geekbang.org/account/avatar/00/11/a9/8f/a998a456.jpg","comment_is_top":false,"comment_ctime":1565587844,"is_pvip":false,"replies":[{"id":"45893","content":"已经修复","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1566121360,"ip_address":"","comment_id":123007,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5860555140","product_id":100032701,"comment_content":"第一个readn函数中第24行返回实际字节数的地方，应该是size-nleft吧，通篇没有看到变量n","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462494,"discussion_content":"已经修复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566121360,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1244998,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ff/46/2ea2fe90.jpg","nickname":"阿尔卑斯","note":"","ucode":"0C9C026D02002D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4728,"discussion_content":"这很明显啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565690036,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122876,"user_name":"Passion","can_delete":false,"product_type":"c1","uid":1365412,"ip_address":"","ucode":"71EC499C1315CF","user_header":"https://static001.geekbang.org/account/avatar/00/14/d5/a4/5dd93357.jpg","comment_is_top":false,"comment_ctime":1565567706,"is_pvip":false,"replies":[{"id":"45180","content":"出错了.... 代码贴出来看看","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1565579514,"ip_address":"","comment_id":122876,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5860535002","product_id":100032701,"comment_content":"我遇到一个问题，发送函数send函数返回值竟然比我写的时候传入的buff的bufflen大，不知道为什么😳。","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462437,"discussion_content":"出错了.... 代码贴出来看看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565579514,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122872,"user_name":"在路上","can_delete":false,"product_type":"c1","uid":1619588,"ip_address":"","ucode":"C11D567FCB8CD6","user_header":"https://static001.geekbang.org/account/avatar/00/18/b6/84/1f60f267.jpg","comment_is_top":false,"comment_ctime":1565566646,"is_pvip":false,"replies":[{"id":"45179","content":"相当于让仓库变大，可以存储了更多的货物，如果出货的速度有限，会有更多的货物烂在仓库里。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1565579464,"ip_address":"","comment_id":122872,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5860533942","product_id":100032701,"comment_content":"个人的想法：<br>单纯的提高缓冲区应该不是可行的方法，以一台计算机思考，内存毕竟是有限的，为每个套接字都开辟一大块内存，那相应可以创建的套接字的就减少了把","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462435,"discussion_content":"相当于让仓库变大，可以存储了更多的货物，如果出货的速度有限，会有更多的货物烂在仓库里。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565579464,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122842,"user_name":"星亦辰","can_delete":false,"product_type":"c1","uid":1284592,"ip_address":"","ucode":"B0388FBFFDEE7E","user_header":"https://static001.geekbang.org/account/avatar/00/13/99/f0/d9343049.jpg","comment_is_top":false,"comment_ctime":1565540488,"is_pvip":true,"replies":[{"id":"45177","content":"那你为啥要传这第1025个字节呢？如果是消息的边界，例如换行，还是要读到这个字符的，读完以后不拷贝到应用程序的缓冲区就可以认为是丢弃了。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1565579367,"ip_address":"","comment_id":122842,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5860507784","product_id":100032701,"comment_content":"有这么一个问题：<br><br>假如客户端往服务端发送了1025个字节，而只有1024个字节是有用的。<br>我在服务端用read 读取1024个字节，最后一定是返回1024。<br>然后，剩下的没有用了，不打算读了，怎么样抛弃多余的内容呢。","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462427,"discussion_content":"那你为啥要传这第1025个字节呢？如果是消息的边界，例如换行，还是要读到这个字符的，读完以后不拷贝到应用程序的缓冲区就可以认为是丢弃了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565579367,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1149592,"avatar":"https://static001.geekbang.org/account/avatar/00/11/8a/98/2be9d17b.jpg","nickname":"破晓^_^","note":"","ucode":"3224920095AC9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4572,"discussion_content":"TCP数据报文都有一定协议的，而且每次发送的包大小都应该有帧头帧尾，前几字节获取到包的大小，然后进行继续读。可以有效防止粘包问题，就想你说的我这一包有效数据是1024，后面开始是下一包的数据。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1565570893,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1105431,"avatar":"https://static001.geekbang.org/account/avatar/00/10/de/17/75e2b624.jpg","nickname":"feifei","note":"","ucode":"B1F8AE3AD82C51","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4567,"discussion_content":"我们可不可以把缓冲区搞得大大的，这样不就可以提高应用程序的吞吐量了么？你可以想一想这个方法可行吗？\n不可行\n1，缓冲区过大，必然导致时延加大，在某些情况下性能会降低\n2，缓冲区过大，导致内存的开销加大，当服务器处理成千上万的连接的时候，内存将都消耗在缓冲区中。\n\n过小也不好，过小将导致更频繁的数据发送，降低网络的吞吐，而系统的整体响应时间变长\n\n\n另外你可以自己总结一下，一段数据流从应用程序发送端，一直到应用程序接收端，总共经过了多少次拷贝？\n\n1，客户端，将数据拷贝到网络缓冲区中。\n2，如果网络发送也算一次拷贝的话，那么就是客户端缓冲区将数据网络拷贝到服务端。\n3，服务器收到后，将数据拷贝到内核缓冲区中，\n4，内核将数据拷贝到用户态业务系统中","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1565565880,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":356204,"user_name":"Soyoger","can_delete":false,"product_type":"c1","uid":2967576,"ip_address":"北京","ucode":"D4D7BD0ABC4491","user_header":"https://static001.geekbang.org/account/avatar/00/2d/48/18/e524f344.jpg","comment_is_top":false,"comment_ctime":1662039887,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1662039887","product_id":100032701,"comment_content":"站在计算机刚开始发展的背景下，考虑为啥缓存设计的大也不能提高应用程序的性能，首先是带宽，带宽那个时候很小，很容易成为瓶颈，TCP包的大小是固定的，传输延时与缓存大小无关。其次，内存本身就很贵，如果给网络让出很大的部分，其他程序运行内存会不足，然后说说缓存的管理，文中没有提，但是可以想想，这部分缓存肯定是需要内核管理的，缓存到底是物理内存还是虚拟内存，如果管理和映射的？缓存如何淘汰和释放？太大会不会给内核带来额外负担？","like_count":0},{"had_liked":false,"id":349587,"user_name":"机车","can_delete":false,"product_type":"c1","uid":1881786,"ip_address":"","ucode":"CD32A645AE310A","user_header":"https://static001.geekbang.org/account/avatar/00/1c/b6/ba/f76d996b.jpg","comment_is_top":false,"comment_ctime":1656122870,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1656122870","product_id":100032701,"comment_content":"“把数据从应用程序中拷贝到操作系统内核的发送缓冲区中”<br>这里说的“操作系统内核的发送缓冲区”是指tcp的发送缓冲区吗？","like_count":0},{"had_liked":false,"id":343825,"user_name":"Ryan24G","can_delete":false,"product_type":"c1","uid":1631292,"ip_address":"","ucode":"EA1E134C18DA80","user_header":"https://static001.geekbang.org/account/avatar/00/18/e4/3c/dfcb86df.jpg","comment_is_top":false,"comment_ctime":1651070311,"is_pvip":true,"replies":[{"id":"125676","content":"这个要看情况，如果不读意味着服务端出错了，而客户端可以感知到，那么就会停止写操作；反正，只要连接还在，服务端不返回错误，还是会写的。","user_name":"作者回复","user_name_real":"编辑","uid":"1618647","ctime":1651405727,"ip_address":"","comment_id":343825,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1651070311","product_id":100032701,"comment_content":"如果服务端突然不读了，客户端还会一直写吗？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":569318,"discussion_content":"这个要看情况，如果不读意味着服务端出错了，而客户端可以感知到，那么就会停止写操作；反正，只要连接还在，服务端不返回错误，还是会写的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651405727,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":337574,"user_name":"kkkkk","can_delete":false,"product_type":"c1","uid":2089568,"ip_address":"","ucode":"465692C8792BE1","user_header":"https://static001.geekbang.org/account/avatar/00/1f/e2/60/d804bc22.jpg","comment_is_top":false,"comment_ctime":1646899756,"is_pvip":true,"replies":[{"id":"123517","content":"要考虑下网络驱动和网卡哈。","user_name":"作者回复","user_name_real":"编辑","uid":"1618647","ctime":1647090130,"ip_address":"","comment_id":337574,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1646899756","product_id":100032701,"comment_content":"内存拷贝应该是2或3次把：<br>1.拷贝操作是内核申请完 skb 之后，将用户传递进来的 buffer 里的数据内容都拷贝到 skb ；<br>2.从传输层进入网络层的时候，每一个 skb 都会被克隆一个新的副本出来，可能用于重传；<br>3.第三次拷贝非必须的，是当 在IP 层发现 skb 大于 MTU 时会再申请额外的 skb，并将原来的 skb 拷贝为多个小的 skb；","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555874,"discussion_content":"要考虑下网络驱动和网卡哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647090130,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":337235,"user_name":"顾骨","can_delete":false,"product_type":"c1","uid":1131165,"ip_address":"","ucode":"3F6BA592AB7723","user_header":"https://static001.geekbang.org/account/avatar/00/11/42/9d/c36b7ef7.jpg","comment_is_top":false,"comment_ctime":1646709716,"is_pvip":true,"replies":[{"id":"123518","content":"可参考我在第9章的答疑。","user_name":"作者回复","user_name_real":"编辑","uid":"1618647","ctime":1647090177,"ip_address":"","comment_id":337235,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1646709716","product_id":100032701,"comment_content":"经历的拷贝次数：<br>发送端：<br>  1. 应用缓存区 -&gt; socket buffer（双向链表）<br>  2. socket buffer（带 ACK 确认后删除） -&gt; socket buffer 副本<br>  3. socket buffer 副本，添加各种协议头 -&gt; 网卡发送队列<br>  4. 网卡发送队列 -&gt; 网卡<br>接收端：<br>  5. 网卡 -&gt; 网卡接受队列<br>  6. 网卡接受队列 -&gt; 组装成sk_buffer，并拆掉各种协议头<br>  7. sk_buffer -&gt; socket buf<br>  8. socket buf -&gt; 应用<br><br>所以一共应该有 8 次拷贝","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555875,"discussion_content":"可参考我在第9章的答疑。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647090177,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336081,"user_name":"谭亮","can_delete":false,"product_type":"c1","uid":1142395,"ip_address":"","ucode":"8BE75B6409548C","user_header":"","comment_is_top":false,"comment_ctime":1645887038,"is_pvip":false,"replies":[{"id":"123124","content":"没看明白 :)","user_name":"作者回复","user_name_real":"编辑","uid":"1618647","ctime":1646487830,"ip_address":"","comment_id":336081,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1645887038","product_id":100032701,"comment_content":"tanliangdeMacBook-Pro:~ tanliang$ &#47;Users&#47;tanliang&#47;网络编程实战源代码&#47;build&#47;bin&#47;telnet-client ; exit;<br>usage: tcp_client &lt;IPaddress&gt; &lt;port&gt;logout<br>Saving session...<br>...copying shared history...<br>...saving history...truncating history files...<br>...completed.<br><br>[进程已完成]<br>这个怎么回事？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554610,"discussion_content":"没看明白 :)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646487830,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":332797,"user_name":"Owen","can_delete":false,"product_type":"c1","uid":2403622,"ip_address":"","ucode":"FDE0D574B8ED5A","user_header":"https://static001.geekbang.org/account/avatar/00/24/ad/26/d46f4394.jpg","comment_is_top":false,"comment_ctime":1643618510,"is_pvip":false,"replies":[{"id":"122014","content":"当然。","user_name":"作者回复","user_name_real":"编辑","uid":"1618647","ctime":1644729299,"ip_address":"","comment_id":332797,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1643618510","product_id":100032701,"comment_content":"客户端和服务端都有各自的发送缓冲区和接收缓冲区吗？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550764,"discussion_content":"当然。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644729299,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321073,"user_name":"菜鸡互啄","can_delete":false,"product_type":"c1","uid":2765079,"ip_address":"","ucode":"59162B81398399","user_header":"https://static001.geekbang.org/account/avatar/00/2a/31/17/ab2c27a6.jpg","comment_is_top":false,"comment_ctime":1636645812,"is_pvip":false,"replies":[{"id":"116708","content":"Mac系统？","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1636875023,"ip_address":"","comment_id":321073,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1636645812","product_id":100032701,"comment_content":"老师你好 我用xcode书写的demo。server run起来之后，运行client的代码会立刻报如下错误：<br>Message from debugger: Terminated due to signal 13<br>给 client添加signal(SIGPIPE, SIG_IGN)之后<br>send函数返回-1。<br>即使跟老师一样的代码也是如此 请问老师这是怎么回事呀<br>","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530207,"discussion_content":"Mac系统？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636875023,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":313598,"user_name":"Geek_e43e33","can_delete":false,"product_type":"c1","uid":2775127,"ip_address":"","ucode":"8FE09B5E0A4C3D","user_header":"","comment_is_top":false,"comment_ctime":1632548775,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632548775","product_id":100032701,"comment_content":"问题1: 服务器追求的是高并发。同一个时间段需要为大量用户提供服务。无法为单一用户&#47;链接开辟大量内存资源。<br>问题2：客户端发送数据时，首先将数据从用户缓冲区拷贝到内核缓冲区，之后从内核缓冲区通过拷贝的方式（缓冲区保留副本用以出错重发）发送出去，服务器讲接受到的数据解包拷贝到输出缓冲区。用户再通过系统调用将数据拷贝到用户缓冲区进行处理。<br>在上述不讨论网络层以下数据具体的操作细节下实现了4次拷贝。","like_count":0},{"had_liked":false,"id":309183,"user_name":"岳麓山下的少年","can_delete":false,"product_type":"c1","uid":2746007,"ip_address":"","ucode":"17FBEDA38EC43B","user_header":"https://static001.geekbang.org/account/avatar/00/29/e6/97/1b3db96b.jpg","comment_is_top":false,"comment_ctime":1629970949,"is_pvip":false,"replies":[{"id":"112104","content":"你可以翻翻各位同学的回答，很多答案都能启发人的。鉴于有些问题是开放性问题，暂时不提供标准答案了。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1630243284,"ip_address":"","comment_id":309183,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1629970949","product_id":100032701,"comment_content":"老师您好，可以把每次的问题答案贴出来吗","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525775,"discussion_content":"你可以翻翻各位同学的回答，很多答案都能启发人的。鉴于有些问题是开放性问题，暂时不提供标准答案了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630243284,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":298815,"user_name":"最","can_delete":false,"product_type":"c1","uid":2526210,"ip_address":"","ucode":"F434F3D1BC4729","user_header":"https://static001.geekbang.org/account/avatar/00/26/8c/02/74afdbf2.jpg","comment_is_top":false,"comment_ctime":1624332957,"is_pvip":false,"replies":[{"id":"108668","content":"github上有: https:&#47;&#47;github.com&#47;froghui&#47;yolanda&#47;blob&#47;master&#47;lib&#47;common.h","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1624804813,"ip_address":"","comment_id":298815,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1624332957","product_id":100032701,"comment_content":"错误：lib&#47;common.h：没有那个文件或目录<br>这个文件在哪里可以下载？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522253,"discussion_content":"github上有: https://github.com/froghui/yolanda/blob/master/lib/common.h","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624804813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":291970,"user_name":"老大不小","can_delete":false,"product_type":"c1","uid":1295609,"ip_address":"","ucode":"35BCDD3CB13467","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJRFRX8kNzNet7FibNvtavbVpAwK09AhIhrib9k762qWtH6mre8ickP7hM5mgZC4ytr8NnmIfmAhxMSQ/132","comment_is_top":false,"comment_ctime":1620630099,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620630099","product_id":100032701,"comment_content":"问题1：不能调的特别大。因为每个连接的建立需要创建缓冲区。然而内存是有限的。<br>问题2:4次。源机器：用户态--&gt;内核态（tcp,ip,链路层），目标机器：内核态接收（tcp,ip,链路层）--&gt;用户态。","like_count":0},{"had_liked":false,"id":286733,"user_name":"Bingo","can_delete":false,"product_type":"c1","uid":1183320,"ip_address":"","ucode":"5DD9FBF9EBE4F9","user_header":"https://static001.geekbang.org/account/avatar/00/12/0e/58/3b5b6388.jpg","comment_is_top":false,"comment_ctime":1617536433,"is_pvip":false,"replies":[{"id":"104487","content":"谢谢~","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1618136269,"ip_address":"","comment_id":286733,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1617536433","product_id":100032701,"comment_content":"老师讲得太好了","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518076,"discussion_content":"谢谢~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618136269,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":275345,"user_name":"风清扬","can_delete":false,"product_type":"c1","uid":1047043,"ip_address":"","ucode":"651F1390B64953","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fa/03/619e3e48.jpg","comment_is_top":false,"comment_ctime":1611479913,"is_pvip":true,"replies":[{"id":"100425","content":"进程结束了，自然也就没啥内存泄露了。不过，时刻记得free掉内存，是一个好习惯。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1612101307,"ip_address":"","comment_id":275345,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1611479913","product_id":100032701,"comment_content":"例子中query没有释放，存在内存泄漏，例子可能误导其他人，当然重点是说明发送数据提示成功，只是先发送到了发送缓存区。","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514319,"discussion_content":"进程结束了，自然也就没啥内存泄露了。不过，时刻记得free掉内存，是一个好习惯。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612101307,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242094,"user_name":"leeemon","can_delete":false,"product_type":"c1","uid":1318137,"ip_address":"","ucode":"DDE24517C81CA1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIWVG6canKkSYCJk0B8jmAwwUV9txlocPM9fB119Iib4LfVUicYib2kkkLHricHGcfCJG6NV7odMY2Xrg/132","comment_is_top":false,"comment_ctime":1597588656,"is_pvip":false,"replies":[{"id":"89405","content":"因为还要考虑非阻塞的情况，其中非阻塞应该是绝大部分场景。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1597641438,"ip_address":"","comment_id":242094,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1597588656","product_id":100032701,"comment_content":"send是阻塞的，为什么还需要循环发送？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503919,"discussion_content":"因为还要考虑非阻塞的情况，其中非阻塞应该是绝大部分场景。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597641438,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239987,"user_name":"Coding2GainDiamond","can_delete":false,"product_type":"c1","uid":2103328,"ip_address":"","ucode":"13CD3037C32B03","user_header":"https://static001.geekbang.org/account/avatar/00/20/18/20/b23f44b2.jpg","comment_is_top":false,"comment_ctime":1596707144,"is_pvip":false,"replies":[{"id":"89395","content":"自己构建的，通过CMakefile","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1597640322,"ip_address":"","comment_id":239987,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1596707144","product_id":100032701,"comment_content":"老师的github上的lib文件都是自己构建的吗还是说download了什么环境自带的","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503295,"discussion_content":"自己构建的，通过CMakefile","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597640322,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239975,"user_name":"Coding2GainDiamond","can_delete":false,"product_type":"c1","uid":2103328,"ip_address":"","ucode":"13CD3037C32B03","user_header":"https://static001.geekbang.org/account/avatar/00/20/18/20/b23f44b2.jpg","comment_is_top":false,"comment_ctime":1596704341,"is_pvip":false,"replies":[{"id":"89394","content":"这里的意思是说，客户端虽然已经把1024000递送到发送缓冲区，但是实际上并没有完全把数据发送给服务端应用程序，因为服务端应用程序处理得比较慢，数据可能还在源源不断的从客户端通过网络传输到服务端，或者已经传输到服务器端，但是服务器端应用此时还在默默的处理中(从接收缓冲区拷贝数据到应用程序)。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1597640272,"ip_address":"","comment_id":239975,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1596704341","product_id":100032701,"comment_content":"对思考题还有代码最后的例子不太懂，客户端发送了1024000数据之后，服务器此时到底卡在了数据流拷贝的哪个阶段，希望老师解答下？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503289,"discussion_content":"这里的意思是说，客户端虽然已经把1024000递送到发送缓冲区，但是实际上并没有完全把数据发送给服务端应用程序，因为服务端应用程序处理得比较慢，数据可能还在源源不断的从客户端通过网络传输到服务端，或者已经传输到服务器端，但是服务器端应用此时还在默默的处理中(从接收缓冲区拷贝数据到应用程序)。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597640272,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239378,"user_name":"Geek_a2ed66","can_delete":false,"product_type":"c1","uid":2101997,"ip_address":"","ucode":"B6D817CD906F9B","user_header":"","comment_is_top":false,"comment_ctime":1596516821,"is_pvip":false,"replies":[{"id":"89390","content":"那就得自己实现一套缓冲区机制，保证发送的数据或者接收的数据不会理解被释放。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1597636487,"ip_address":"","comment_id":239378,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1596516821","product_id":100032701,"comment_content":"如果没有发送缓冲区和接收缓冲区会怎么样呢？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503086,"discussion_content":"那就得自己实现一套缓冲区机制，保证发送的数据或者接收的数据不会理解被释放。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597636487,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235271,"user_name":"冰仔","can_delete":false,"product_type":"c1","uid":2068189,"ip_address":"","ucode":"C42F8346230BF1","user_header":"","comment_is_top":false,"comment_ctime":1594957026,"is_pvip":false,"replies":[{"id":"87047","content":"因为还有一种情况是&quot;能发送多少就多少&quot;，非阻塞I&#47;O就是就是非常典型的一个例子。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1595164725,"ip_address":"","comment_id":235271,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1594957026","product_id":100032701,"comment_content":"我想问，调用write或者send不是等到应用程序的数据全部拷贝到内核发送缓冲区后才返回吗，如果这样那么返回值肯定会等于要发送的字节数，为啥还有返回值小于要发送数据的字节数的情况呢？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501667,"discussion_content":"因为还有一种情况是&amp;quot;能发送多少就多少&amp;quot;，非阻塞I/O就是就是非常典型的一个例子。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595164725,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":234671,"user_name":"NEVER SETTLE","can_delete":false,"product_type":"c1","uid":1101894,"ip_address":"","ucode":"9C86BDAFDBF768","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/46/1a9229b3.jpg","comment_is_top":false,"comment_ctime":1594771836,"is_pvip":false,"replies":[{"id":"86815","content":"好问题，往后读就知道答案了哈。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1594907984,"ip_address":"","comment_id":234671,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1594771836","product_id":100032701,"comment_content":"有个疑问，服务端如何知道客户端发送的数据有多大，接收的size怎么定，怎么判断已经接收完了一次数据发送。","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501457,"discussion_content":"好问题，往后读就知道答案了哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594907984,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1346922,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8d/6a/46e95ff7.jpg","nickname":"坚忍不拔","note":"","ucode":"2C264384A3E79E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344796,"discussion_content":"边界问题也是重点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611572825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229682,"user_name":"Apprentice*卓","can_delete":false,"product_type":"c1","uid":2006896,"ip_address":"","ucode":"B78B68F963CE01","user_header":"https://static001.geekbang.org/account/avatar/00/1e/9f/70/0ef8a4d9.jpg","comment_is_top":false,"comment_ctime":1593097437,"is_pvip":false,"replies":[{"id":"84806","content":"111是错误信息号，并不是端口号哦。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1593174009,"ip_address":"","comment_id":229682,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1593097437","product_id":100032701,"comment_content":"请问我在VM不同系统上测试出现connect failed : Connection refused (111)<br>看了上讲connect报类似错，可能是因为客户端请求端口错误，但我看了代码客&#47;服端口号设置为12345,<br>这是怎么回事","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499588,"discussion_content":"111是错误信息号，并不是端口号哦。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593174009,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2006896,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/9f/70/0ef8a4d9.jpg","nickname":"Apprentice*卓","note":"","ucode":"B78B68F963CE01","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287079,"discussion_content":"谢谢，已解决这个问题\n主要因为没有加IP地址及端口号","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593357927,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229529,"user_name":"YC","can_delete":false,"product_type":"c1","uid":2029526,"ip_address":"","ucode":"487213D7B37601","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f7/d6/9ebe565c.jpg","comment_is_top":false,"comment_ctime":1593052255,"is_pvip":false,"replies":[{"id":"84805","content":"一般我们都用127.0.0.1表示localhost，至于128.0.0.1和126.0.0.1，还真的很少用到。我觉得记住这个就可以了。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1593173973,"ip_address":"","comment_id":229529,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1593052255","product_id":100032701,"comment_content":"你好，当我运行client &lt;ipaddress&gt; 的时候，假如我client用127.0.0.1 或者127.0.0.X的时候(我理解127.0.0.1是本地)，server都可以收到client的message，但是假如我选用128.0.0.1或者126.0.0.1的时候则不能，<br>我找到解释，<br>The class A network number 127 is assigned the “loopback” function, that is, a datagram sent by a higher level protocol to a network 127 address should loop back inside the host. No datagram “sent” to a network 127 address should ever appear on any network anywhere.<br>并不能完全理解，<br>我的问题是，为什么所有127.0.0.X都可以被server收到，或者说还有其他IP也可以被收到？<br>多谢！","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499524,"discussion_content":"一般我们都用127.0.0.1表示localhost，至于128.0.0.1和126.0.0.1，还真的很少用到。我觉得记住这个就可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593173973,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":222341,"user_name":"刘师傅","can_delete":false,"product_type":"c1","uid":1870379,"ip_address":"","ucode":"7BCFFD2E3B7375","user_header":"","comment_is_top":false,"comment_ctime":1590753667,"is_pvip":false,"replies":[{"id":"82173","content":"好吧，我承认你问倒我了，为啥固定的端口还会换呢? 你确定吗？","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1590930795,"ip_address":"","comment_id":222341,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1590753667","product_id":100032701,"comment_content":"盛老师你好，在学习了后面的第15讲：《怎么老是出现‘地址被占用’？》。<br>我突发奇想，既然在不设置那个SO_REUSEADDR选项的前提下，服务端主动断开连接后并在接下来非常短的时间又立马重启，就会报错。于是，我尝试了之前的讲解里涉及的服务端代码：<br>我在.&#47;pingserver 60那一讲的代码断开重启可以报错地址占用，是我预料到的。<br>但是就在这一讲的tcpserver代码。<br>死活都能重启成功，我从netstat可以看到确实上一个连接的time_wait还在。<br>虽然说.&#47;tcpserver重启成功了，但是还有一个奇怪的是：重启成功后并没有监听在12345了，而是别的什么端口。我想这就是为啥可以重启成功的原因。<br>好了，我的问题就是：我不知道为啥代码里是：servaddr.sin_port = htons(12345);<br>但是重启.&#47;tcpserver会监听在别的端口呢？？<br>我查了下代码，和addressused里的serv_addr没有主要的区别，而且我把端口改成SERV_PORT也无济于事，还是可以重启成功且端口不是43211；<br>.&#47;tcpserver这个代码到底有啥神奇之处呢？？？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496759,"discussion_content":"好吧，我承认你问倒我了，为啥固定的端口还会换呢? 你确定吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590930795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215798,"user_name":"pc","can_delete":false,"product_type":"c1","uid":1652836,"ip_address":"","ucode":"1AD538B9A900B6","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epKJlW7sqts2ZbPuhMbseTAdvHWnrc4ficAeSZyKibkvn6qyxflPrkKKU3mH6XCNmYvDg11tB6y0pxg/132","comment_is_top":false,"comment_ctime":1589104845,"is_pvip":false,"replies":[{"id":"80639","content":"是TCP协议栈在做的。是两边的TCP协议栈共同配合完成的结果，当然，网络设备也在其中起到了重要的作用。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1589705393,"ip_address":"","comment_id":215798,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1589104845","product_id":100032701,"comment_content":"【提问】读取数据时的read，是客户端&#47;操作系统作为接收方去TCP网络连接上读取数据？还是客户端已经通过网络将数据保存在一个操作系统的缓存接收区中，read只是复制操作系统的缓冲区里的数据到应用程序的buffer？<br>---其实应该是后者吧。那么服务端把数据传到客户端接收缓冲区这个过程又是怎么样的呢？是谁来操作&#47;控制的呢？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494561,"discussion_content":"是TCP协议栈在做的。是两边的TCP协议栈共同配合完成的结果，当然，网络设备也在其中起到了重要的作用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589705393,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":214960,"user_name":"艾斯曼","can_delete":false,"product_type":"c1","uid":1001772,"ip_address":"","ucode":"B73FA6A2530138","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/2c/a2a948b6.jpg","comment_is_top":false,"comment_ctime":1588858102,"is_pvip":false,"replies":[{"id":"79837","content":"嗯，严格来说是的，不过我这里只是一个例子，在exit调用系统会回收这部分内存的，还谈不上内存泄漏。<br><br>不过严格的遵循free规则，是非常好的。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1589099907,"ip_address":"","comment_id":214960,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1588858102","product_id":100032701,"comment_content":" 客服端程序send_data中query应该free，不然内存泄漏了","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494259,"discussion_content":"嗯，严格来说是的，不过我这里只是一个例子，在exit调用系统会回收这部分内存的，还谈不上内存泄漏。\n\n不过严格的遵循free规则，是非常好的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589099907,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":203670,"user_name":"一凡","can_delete":false,"product_type":"c1","uid":1897395,"ip_address":"","ucode":"5E9BE33452AF3B","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f3/b3/0ba7a760.jpg","comment_is_top":false,"comment_ctime":1586252148,"is_pvip":false,"replies":[{"id":"76792","content":"四次挥手是连接要释放的时候，通讯完之后的连接仍然是需要复用的，因为每次建连的代价太大。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1586679977,"ip_address":"","comment_id":203670,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1586252148","product_id":100032701,"comment_content":"通讯完之后，不用断开连接的吗，4次挥手是在啥时候的?","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490926,"discussion_content":"四次挥手是连接要释放的时候，通讯完之后的连接仍然是需要复用的，因为每次建连的代价太大。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586679977,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1897395,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/f3/b3/0ba7a760.jpg","nickname":"一凡","note":"","ucode":"5E9BE33452AF3B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":243704,"discussion_content":"谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587557619,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182372,"user_name":"gen","can_delete":false,"product_type":"c1","uid":1312014,"ip_address":"","ucode":"EF889E6CC7BB7F","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Etr1TYTsMiazWFoGnReIVP9ic9Na38BFkTOKbdgiaicwBLgHBnS980Xn03FJ1UPWAyiaONEMtyiaU7vNw2RlhSkUsYDQ/132","comment_is_top":false,"comment_ctime":1582775280,"is_pvip":false,"replies":[{"id":"71032","content":"在阻塞I&#47;O的情况下是正确的，后面讲到非阻塞I&#47;O的情况下，无论有没有数据read操作都会返回。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1583052413,"ip_address":"","comment_id":182372,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582775280","product_id":100032701,"comment_content":"read字节流套接字的时候，如果字节流中没有数据，那么read会阻塞，不会返回0，只有遇到eof才会返回。如果是read文件的话，就不会遇到没有EOF的情况，也就不会阻塞。不知道我理解的有没有错？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485320,"discussion_content":"在阻塞I/O的情况下是正确的，后面讲到非阻塞I/O的情况下，无论有没有数据read操作都会返回。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583052413,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164927,"user_name":"skye","can_delete":false,"product_type":"c1","uid":1027840,"ip_address":"","ucode":"C55C9F52C78A00","user_header":"https://static001.geekbang.org/account/avatar/00/0f/af/00/9b49f42b.jpg","comment_is_top":false,"comment_ctime":1577113064,"is_pvip":false,"replies":[{"id":"63896","content":"我google的结果是：<br>&quot;Recv-Q&quot; and &quot;Send-Q&quot; mean receiving queue and sending queue. These should always be zero; if they&#39;re not you might have a problem. <br><br>Recv-Q：表示收到的数据已经在本地接收缓冲，但是还有多少没有被进程取走<br><br>Send-Q：对方没有收到的数据或者说没有Ack的","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1577603947,"ip_address":"","comment_id":164927,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577113064","product_id":100032701,"comment_content":"老师，请问 netstat 下的Recv-q和Send-q和缓冲区有什么关系？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478952,"discussion_content":"我google的结果是：\n&amp;quot;Recv-Q&amp;quot; and &amp;quot;Send-Q&amp;quot; mean receiving queue and sending queue. These should always be zero; if they&amp;#39;re not you might have a problem. \n\nRecv-Q：表示收到的数据已经在本地接收缓冲，但是还有多少没有被进程取走\n\nSend-Q：对方没有收到的数据或者说没有Ack的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577603947,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160840,"user_name":"itgou","can_delete":false,"product_type":"c1","uid":1394159,"ip_address":"","ucode":"4F6FFA0DD1ACBA","user_header":"https://wx.qlogo.cn/mmopen/vi_32/pTZS48zWWAhI0zGXrib8s124HSenCS2FTDD0r4SKCqw2ub4adicI4x2wTeH7bHdlsl8QwxeVmzTGs1PIImURxxPg/132","comment_is_top":false,"comment_ctime":1576044453,"is_pvip":false,"replies":[{"id":"63957","content":"我也没看出来有啥问题 😢  我建议你看看你本讲上有没有防火墙之类的，不行就tcpdump抓一下包。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1577605910,"ip_address":"","comment_id":160840,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1576044453","product_id":100032701,"comment_content":"老师,求助, 我跟着你的思路,自己写了 一遍服务器和客户端, 怎么就连接不上了, 也对比了你的代码, 没发现哪里不对, 客户端使用connect连接服务器端时老返回0, 能帮我看看吗? 代码在https:&#47;&#47;github.com&#47;itgou&#47;socketProgramStudy","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477497,"discussion_content":"我也没看出来有啥问题 😢  我建议你看看你本讲上有没有防火墙之类的，不行就tcpdump抓一下包。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577605910,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1394159,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/pTZS48zWWAhI0zGXrib8s124HSenCS2FTDD0r4SKCqw2ub4adicI4x2wTeH7bHdlsl8QwxeVmzTGs1PIImURxxPg/132","nickname":"itgou","note":"","ucode":"4F6FFA0DD1ACBA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":134669,"discussion_content":"好的，谢谢，我发现我现在学socket编程还有点难度，我在看b站上的视频学习linux系统编程，学完了再来重学socket编程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579046055,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154067,"user_name":"itgou","can_delete":false,"product_type":"c1","uid":1394159,"ip_address":"","ucode":"4F6FFA0DD1ACBA","user_header":"https://wx.qlogo.cn/mmopen/vi_32/pTZS48zWWAhI0zGXrib8s124HSenCS2FTDD0r4SKCqw2ub4adicI4x2wTeH7bHdlsl8QwxeVmzTGs1PIImURxxPg/132","comment_is_top":false,"comment_ctime":1574374872,"is_pvip":false,"replies":[{"id":"59339","content":"你直接在最外层执行cmake不行么？我感觉是不是你在chap-5里面单独执行cmake引起的问题?","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1574499365,"ip_address":"","comment_id":154067,"utype":1}],"discussion_count":4,"race_medal":0,"score":"1574374872","product_id":100032701,"comment_content":"我到现在还没有把该章的代码跑起来, 请老师帮我看看报的错误<br>1. 什么都不改的情况下, 按照说明编译, 报&quot;lib&#47;common.h&quot;找不到的错误<br>[ 25%] Building C object CMakeFiles&#47;tcpclient.dir&#47;tcpclient.c.o<br>&#47;home&#47;lj&#47;0study&#47;socketProgramStudy&#47;yolanda&#47;chap-5&#47;tcpclient.c:1:10: fatal error: lib&#47;common.h: 没有那个文件或目录<br> #include &quot;lib&#47;common.h&quot;<br>          ^~~~~~~~~~~~~~<br>compilation terminated.<br>make[2]: *** [CMakeFiles&#47;tcpclient.dir&#47;build.make:63：CMakeFiles&#47;tcpclient.dir&#47;tcpclient.c.o] 错误 1<br>make[1]: *** [CMakeFiles&#47;Makefile2:68：CMakeFiles&#47;tcpclient.dir&#47;all] 错误 2<br>make: *** [Makefile:84：all] 错误 2<br><br>2. 我看到lib在chap-5的外层,就把引入改为 #include &quot;..&#47;lib&#47;common.h&quot;, 以上错误貌似解决了,但又报了 config.h找不到, 我看了整个文件夹 都没找到config.h文件, 这个config.h文件从哪里来呢<br>[ 25%] Building C object CMakeFiles&#47;tcpclient.dir&#47;tcpclient.c.o<br>In file included from &#47;home&#47;lj&#47;0study&#47;socketProgramStudy&#47;yolanda&#47;chap-5&#47;tcpclient.c:1:0:<br>&#47;home&#47;lj&#47;0study&#47;socketProgramStudy&#47;yolanda&#47;chap-5&#47;..&#47;lib&#47;common.h:8:10: fatal error: config.h: 没有那个文件或目录<br> #include &quot;config.h&quot;<br>          ^~~~~~~~~~<br>compilation terminated.<br>make[2]: *** [CMakeFiles&#47;tcpclient.dir&#47;build.make:63：CMakeFiles&#47;tcpclient.dir&#47;tcpclient.c.o] 错误 1<br>make[1]: *** [CMakeFiles&#47;Makefile2:68：CMakeFiles&#47;tcpclient.dir&#47;all] 错误 2<br>make: *** [Makefile:84：all] 错误 2<br><br>","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475369,"discussion_content":"你直接在最外层执行cmake不行么？我感觉是不是你在chap-5里面单独执行cmake引起的问题?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574499365,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1130666,"avatar":"https://static001.geekbang.org/account/avatar/00/11/40/aa/49bbb007.jpg","nickname":"нáпの゛","note":"","ucode":"834FA877EFBAF7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299308,"discussion_content":"我也遇到一样的问题，难道不是最新代码？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597651935,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1135707,"avatar":"https://static001.geekbang.org/account/avatar/00/11/54/5b/1a14d829.jpg","nickname":"WhatAKitty","note":"","ucode":"911C089450926B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":229568,"discussion_content":"如果不是工作中用C的话，可以直接使用CLion，不用太过纠结于编译过程。主要学习的原理以及一个实践过程。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586665620,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1257751,"avatar":"https://static001.geekbang.org/account/avatar/00/13/31/17/02fc18b1.jpg","nickname":"麻雀","note":"","ucode":"67CD60D3E705B9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":127131,"discussion_content":"啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578567585,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153652,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1574293987,"is_pvip":false,"replies":[{"id":"59337","content":"5G都可以联系上了，🐂。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1574498997,"ip_address":"","comment_id":153652,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574293987","product_id":100032701,"comment_content":"缺失操作系统的基本功理解起来确实费劲，不过来个比喻就好理解一些啦！<br>假设有A和B两个仓库，A在北京B在天津，他们需要倒腾一些库存，从B那一些东西到A，大概步骤如下：<br>1：从B库找到对应的货物，放到月台——写缓冲区<br>2：把月台的货物撞车运送到A——网络传输<br>3：把货物卸到A库的月台，等待放入库中——读缓冲区<br>4：A库告诉B库，来了多少货——ACK<br><br>缓冲区的作用在于提高仓内作业的效率，如果没有缓存区，直接装车，装满一车走一车，一是车的空间有限，二是装车本身也是一个效率相对低的事情。<br>如果把缓冲区搞得大大的，仓内作业的效率会进一步提高，不过传输货物的效率还受限于其他条件，比如：运输车的容量和速度，以及装车的速度，到对面时卸车的速度，对面月台的大小等。<br>可以想象一个水管，有N节组成，有粗有细，水流的速度是有最细的那一节决定的。如果都能搞粗，自然整体效率就高，否则只能局部会有所提高。至于每节细的能否变粗，需要时间吧！人人都想变粗，不过这受限于很多其他的因素啦！5G其实就是一个把一节细管变粗的技术！<br>几次数据拷贝，需要看对数据拷贝的定义。","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475238,"discussion_content":"5G都可以联系上了，🐂。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574498997,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143253,"user_name":"Bright丶","can_delete":false,"product_type":"c1","uid":1138016,"ip_address":"","ucode":"B1DEA8C8100538","user_header":"https://static001.geekbang.org/account/avatar/00/11/5d/60/38ea52c5.jpg","comment_is_top":false,"comment_ctime":1571656974,"is_pvip":false,"replies":[{"id":"55837","content":"内核中有线程不断从网卡将数据读入内核的缓冲区，这个是内核帮助我们完成的，绝对不是我们从网卡直接读出数据来的哦。这在第一篇答疑部分有一个详细解读，你可以去看一下。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1572059366,"ip_address":"","comment_id":143253,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1571656974","product_id":100032701,"comment_content":"老师，read的时候是不是也是从内核的读缓冲区读取到用户程序的缓冲区，内核中有线程不断从网卡将数据读入内核的缓冲区；还是说用户线程读的时候才从网卡一路读取到用户缓冲区","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471448,"discussion_content":"内核中有线程不断从网卡将数据读入内核的缓冲区，这个是内核帮助我们完成的，绝对不是我们从网卡直接读出数据来的哦。这在第一篇答疑部分有一个详细解读，你可以去看一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572059366,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1138016,"avatar":"https://static001.geekbang.org/account/avatar/00/11/5d/60/38ea52c5.jpg","nickname":"Bright丶","note":"","ucode":"B1DEA8C8100538","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41832,"discussion_content":"谢谢老师解答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572515944,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142654,"user_name":"haozhang","can_delete":false,"product_type":"c1","uid":1505549,"ip_address":"","ucode":"B4FC40EBFFB10E","user_header":"","comment_is_top":false,"comment_ctime":1571449076,"is_pvip":false,"replies":[{"id":"55128","content":"看一下客户端有没有打印出：<br><br>send into buffer 102400","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1571458070,"ip_address":"","comment_id":142654,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1571449076","product_id":100032701,"comment_content":"客户端程序退出了    我服务器程序打印出   block   in   read  为什么就一直阻塞在那？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471214,"discussion_content":"看一下客户端有没有打印出：\n\nsend into buffer 102400","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571458070,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1505549,"avatar":"","nickname":"haozhang","note":"","ucode":"B4FC40EBFFB10E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36915,"discussion_content":"打印了一行   然后直接退出    服务器每次都读了100k数据然后就阻塞了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571461770,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138309,"user_name":"itschenxiang","can_delete":false,"product_type":"c1","uid":1519547,"ip_address":"","ucode":"7D90194AC52435","user_header":"https://static001.geekbang.org/account/avatar/00/17/2f/bb/4236d712.jpg","comment_is_top":false,"comment_ctime":1570159131,"is_pvip":false,"replies":[{"id":"54302","content":"发送完是指发送缓冲区为空；没有发送完是指发送缓冲区非空。<br><br>这里的意思是发送缓冲区可用的空间不能容纳请求的数据。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1570970501,"ip_address":"","comment_id":138309,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1570159131","product_id":100032701,"comment_content":"&quot;操作系统内核的发送缓冲区够大了，不过还有数据没有发送完，或者数据发送完，但是操作系统内核的发送缓冲区不足以容纳应用程序数据&quot; 这段描述不太懂，发送完的含义是什么？<br>","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469476,"discussion_content":"发送完是指发送缓冲区为空；没有发送完是指发送缓冲区非空。\n\n这里的意思是发送缓冲区可用的空间不能容纳请求的数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570970501,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137237,"user_name":"一天到晚游泳的鱼","can_delete":false,"product_type":"c1","uid":1433982,"ip_address":"","ucode":"1F40AF478D85B9","user_header":"","comment_is_top":false,"comment_ctime":1569663572,"is_pvip":false,"replies":[{"id":"52775","content":"具体说一下?","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1569723260,"ip_address":"","comment_id":137237,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1569663572","product_id":100032701,"comment_content":"send_data会内存泄露啊","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468995,"discussion_content":"具体说一下?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569723260,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1433982,"avatar":"","nickname":"一天到晚游泳的鱼","note":"","ucode":"1F40AF478D85B9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":22891,"discussion_content":"malloc之后应该要free掉分配的内存啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569724128,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133202,"user_name":"jacke","can_delete":false,"product_type":"c1","uid":1161209,"ip_address":"","ucode":"05F355E1FF88C5","user_header":"https://static001.geekbang.org/account/avatar/00/11/b7/f9/a8f26b10.jpg","comment_is_top":false,"comment_ctime":1568442239,"is_pvip":false,"replies":[{"id":"51635","content":"已提供: https:&#47;&#47;github.com&#47;froghui&#47;yolanda","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1568888514,"ip_address":"","comment_id":133202,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568442239","product_id":100032701,"comment_content":"问下 ，头文件 lib&#47;common.h 能提供下？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467291,"discussion_content":"已提供: https://github.com/froghui/yolanda","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568888514,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131480,"user_name":"itschenxiang","can_delete":false,"product_type":"c1","uid":1519547,"ip_address":"","ucode":"7D90194AC52435","user_header":"https://static001.geekbang.org/account/avatar/00/17/2f/bb/4236d712.jpg","comment_is_top":false,"comment_ctime":1567762824,"is_pvip":false,"replies":[{"id":"50792","content":"如果是阻塞调用，一直等到读到数据才返回","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1568190320,"ip_address":"","comment_id":131480,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567762824","product_id":100032701,"comment_content":"文章里没有讲清楚，read()函数到底什么时候返回呢？<br>","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466474,"discussion_content":"如果是阻塞调用，一直等到读到数据才返回","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568190320,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129997,"user_name":"码农Kevin亮","can_delete":false,"product_type":"c1","uid":1116630,"ip_address":"","ucode":"D34562461CA0A1","user_header":"https://static001.geekbang.org/account/avatar/00/11/09/d6/5f366427.jpg","comment_is_top":false,"comment_ctime":1567348646,"is_pvip":false,"replies":[{"id":"50796","content":"你有代码样例么？我只能说原理上是这样，但是你使用的是http包的话，应该是返回你实际的发送数据大小。 ","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1568190864,"ip_address":"","comment_id":129997,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567348646","product_id":100032701,"comment_content":"上了这课，我总算理解了为什么我在JAVA发HTTP请求后，返回的输入流的可用字节数常常少于总的数据量了，原来是从缓冲区读数据。要不停地读走缓冲区的数据，对端才能完成写入。请问老师是这样理解么?","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465755,"discussion_content":"你有代码样例么？我只能说原理上是这样，但是你使用的是http包的话，应该是返回你实际的发送数据大小。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568190864,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127693,"user_name":"小蛋壳","can_delete":false,"product_type":"c1","uid":1101602,"ip_address":"","ucode":"8344163BF7722E","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/22/5a483755.jpg","comment_is_top":false,"comment_ctime":1566780662,"is_pvip":false,"replies":[{"id":"47940","content":"服务器端口就只有监听端口一个，不是转发，而是一条连接直接发送。端口只是一个标识。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1567005950,"ip_address":"","comment_id":127693,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566780662","product_id":100032701,"comment_content":"已连接套接字，会占用服务器端口吗？后续客户端发送数据的话，监听套接字会转发？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464610,"discussion_content":"服务器端口就只有监听端口一个，不是转发，而是一条连接直接发送。端口只是一个标识。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567005950,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126881,"user_name":"Geek_101627","can_delete":false,"product_type":"c1","uid":1070389,"ip_address":"","ucode":"F246019019F1CB","user_header":"https://static001.geekbang.org/account/avatar/00/10/55/35/09e7dfde.jpg","comment_is_top":false,"comment_ctime":1566515606,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566515606","product_id":100032701,"comment_content":"发送端：发送端的进程用户空间-＞内核空间发送缓存<br>接收端：发送端的内核空间发送缓存-＞接收端的内核空间接收缓存-＞接收端的进程用户空间","like_count":0},{"had_liked":false,"id":126618,"user_name":"沐天同","can_delete":false,"product_type":"c1","uid":1055298,"ip_address":"","ucode":"1405E344F07F0D","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/42/55c79768.jpg","comment_is_top":false,"comment_ctime":1566436772,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566436772","product_id":100032701,"comment_content":"1.缓冲区太大，会有可能数据一直在缓冲区。<br>2.应用程序拷贝到缓冲区，缓冲区拷贝到内核，内核写入链路？<br>这里不确定是2次还是3次","like_count":0},{"had_liked":false,"id":126489,"user_name":"shaohv","can_delete":false,"product_type":"c1","uid":1099165,"ip_address":"","ucode":"F4552229A767D5","user_header":"https://static001.geekbang.org/account/avatar/00/10/c5/9d/0524146a.jpg","comment_is_top":false,"comment_ctime":1566393640,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1566393640","product_id":100032701,"comment_content":"为啥6次拷贝","like_count":0,"discussions":[{"author":{"id":1397631,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKVUskibDnhMt5MCIJ8227HWkeg2wEEyewps8GuWhWaY5fy7Ya56bu2ktMlxdla3K29Wqia9efCkWaQ/132","nickname":"衬衫的价格是19美元","note":"","ucode":"655F925451F772","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":23784,"discussion_content":"按照前面的答案，发送端：应用程序空间->内核空间->封装组帧，接收端：反过来，所以总共是6次","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569906741,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126022,"user_name":"leesper","can_delete":false,"product_type":"c1","uid":1351104,"ip_address":"","ucode":"CC76320571BECA","user_header":"https://static001.geekbang.org/account/avatar/00/14/9d/c0/cb5341ec.jpg","comment_is_top":false,"comment_ctime":1566294921,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566294921","product_id":100032701,"comment_content":"无限增大的缓冲区不行，除了其他网友提到的，我还想到一点，如果每个连接的缓冲区都很大，那么一旦并发连接数高了，就会耗尽内存，不知道这么想有什么问题吗？<br><br>另外对于非阻塞编程来说，应用层Buffer就是必须的了，每个连接首先把数据写到Buffer，然后enableWrite，等待epoll有writable事件产生时（说明内核缓冲区有空余位置了），再回调handleWrite()函数从Buffer写数据到内核缓冲区，这样才能非阻塞的write","like_count":0},{"had_liked":false,"id":125167,"user_name":"mrtwenty","can_delete":false,"product_type":"c1","uid":1147444,"ip_address":"","ucode":"FD1425A5E62505","user_header":"https://static001.geekbang.org/account/avatar/00/11/82/34/c47ccbeb.jpg","comment_is_top":false,"comment_ctime":1566106574,"is_pvip":false,"replies":[{"id":"45904","content":"答疑篇会统一回复","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1566124083,"ip_address":"","comment_id":125167,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566106574","product_id":100032701,"comment_content":"给的代码，在linux下，使用gcc编译不通过啊，报了很多错？这是怎么回事呢？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463461,"discussion_content":"答疑篇会统一回复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566124083,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125166,"user_name":"mrtwenty","can_delete":false,"product_type":"c1","uid":1147444,"ip_address":"","ucode":"FD1425A5E62505","user_header":"https://static001.geekbang.org/account/avatar/00/11/82/34/c47ccbeb.jpg","comment_is_top":false,"comment_ctime":1566105872,"is_pvip":false,"replies":[{"id":"45905","content":"是的","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1566124091,"ip_address":"","comment_id":125166,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1566105872","product_id":100032701,"comment_content":"usleep(1000); 这是休眠1秒吗？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463460,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566124091,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1452675,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJhbjhkN9mVxxA3wfMCmZ5BmoFVHXyaOkqDH5uRXGQNFngDdJDYqkf82ictdicZ9WibLjoiapcom4XbGw/132","nickname":"木易","note":"","ucode":"7CCA6255570E6C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295984,"discussion_content":"这个单位不是微妙吗，1000微秒不是一毫秒吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596420637,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1147444,"avatar":"https://static001.geekbang.org/account/avatar/00/11/82/34/c47ccbeb.jpg","nickname":"mrtwenty","note":"","ucode":"FD1425A5E62505","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1452675,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJhbjhkN9mVxxA3wfMCmZ5BmoFVHXyaOkqDH5uRXGQNFngDdJDYqkf82ictdicZ9WibLjoiapcom4XbGw/132","nickname":"木易","note":"","ucode":"7CCA6255570E6C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296173,"discussion_content":"哈哈，我也这么觉得。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596464385,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":295984,"ip_address":""},"score":296173,"extra":""}]}]},{"had_liked":false,"id":125073,"user_name":"一周思进","can_delete":false,"product_type":"c1","uid":1032125,"ip_address":"","ucode":"00BE5402479B16","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bf/bd/0c40979f.jpg","comment_is_top":false,"comment_ctime":1566054820,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566054820","product_id":100032701,"comment_content":"今天这文章翻了好几遍，根据学习的内容编写了tcp服务器的读写处理接口，客户端通过telnet协议连接tcp服务器进行数据收发操作<br><br>https:&#47;&#47;mp.weixin.qq.com&#47;s&#47;YvfZMO2gCjHWmrNRGpdibA","like_count":0},{"had_liked":false,"id":124837,"user_name":"旺旺","can_delete":false,"product_type":"c1","uid":1052340,"ip_address":"","ucode":"11FA8F1C54521A","user_header":"https://static001.geekbang.org/account/avatar/00/10/0e/b4/6ecadbd3.jpg","comment_is_top":false,"comment_ctime":1566004719,"is_pvip":false,"replies":[{"id":"45916","content":"java把底层都给&quot;藏&quot;了起来，但是我们还是要知道怎么work的","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1566128610,"ip_address":"","comment_id":124837,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1566004719","product_id":100032701,"comment_content":"老师，java的网络编程比c简单，个人感觉","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463339,"discussion_content":"java把底层都给&amp;quot;藏&amp;quot;了起来，但是我们还是要知道怎么work的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566128610,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1299095,"avatar":"https://static001.geekbang.org/account/avatar/00/13/d2/97/5f4cd8da.jpg","nickname":"虎虎生威的程坚强","note":"","ucode":"321C89298D3682","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8682,"discussion_content":"写了一段时间的服务器项目，发现只在应用层飘，不懂底层原理，遇到性能瓶颈时无从下手","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568036090,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1052340,"avatar":"https://static001.geekbang.org/account/avatar/00/10/0e/b4/6ecadbd3.jpg","nickname":"旺旺","note":"","ucode":"11FA8F1C54521A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5399,"discussion_content":"老师藏的是不是read  和write","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566226655,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124482,"user_name":"pyhhou","can_delete":false,"product_type":"c1","uid":1256496,"ip_address":"","ucode":"31EF8D50CF91A5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibZVAmmdAibBeVpUjzwId8ibgRzNk7fkuR5pgVicB5mFSjjmt2eNadlykVLKCyGA0GxGffbhqLsHnhDRgyzxcKUhjg/132","comment_is_top":false,"comment_ctime":1565911044,"is_pvip":false,"replies":[{"id":"45925","content":"我会把代码上传，大家可以自行修改debug。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1566129096,"ip_address":"","comment_id":124482,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565911044","product_id":100032701,"comment_content":"想请教下老师，基础薄弱，之前没怎么接触过网络编程，能否请老师写一下如何搭建上面提到的实验环境呢？谢谢老师","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463198,"discussion_content":"我会把代码上传，大家可以自行修改debug。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566129096,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124457,"user_name":"stamaimer","can_delete":false,"product_type":"c1","uid":1014272,"ip_address":"","ucode":"A73B9DA55BDEFF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7a/00/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1565887759,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565887759","product_id":100032701,"comment_content":"send_data 第一个参数有啥用？","like_count":0},{"had_liked":false,"id":124440,"user_name":"zhuxuxu","can_delete":false,"product_type":"c1","uid":1500593,"ip_address":"","ucode":"DCD8E5D7F6F8A8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIicibkDiceIZd7R3y57L7WIVFpVWU6ebp40G3ZNLFtlUWb7d4O5BpyxKQSd81FXo4rQFbQoUWu35jJg/132","comment_is_top":false,"comment_ctime":1565884443,"is_pvip":false,"replies":[{"id":"45944","content":"没有写错","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1566130148,"ip_address":"","comment_id":124440,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565884443","product_id":100032701,"comment_content":"13-14 行表示的是非阻塞 I&#47;O 的情况下，没有数据可以...<br>这里是不是写错了，应该是阻塞I&#47;O中断后，继续处理吧","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463177,"discussion_content":"没有写错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566130148,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124333,"user_name":"humor","can_delete":false,"product_type":"c1","uid":1181867,"ip_address":"","ucode":"9B48C4C7BEC92C","user_header":"https://static001.geekbang.org/account/avatar/00/12/08/ab/caec7bca.jpg","comment_is_top":false,"comment_ctime":1565861911,"is_pvip":false,"replies":[{"id":"45945","content":"恰恰不会，数据还在发送缓冲区中，没有对端确认之前，数据都不会从发送缓冲区删除","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1566130194,"ip_address":"","comment_id":124333,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565861911","product_id":100032701,"comment_content":"如果网忽然断了，发送缓冲区里的数据会丢吧？就是客户端以为发送成功了，但是服务端是接收不到的。","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463120,"discussion_content":"恰恰不会，数据还在发送缓冲区中，没有对端确认之前，数据都不会从发送缓冲区删除","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566130194,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124056,"user_name":"初见","can_delete":false,"product_type":"c1","uid":1101405,"ip_address":"","ucode":"06D7952CED37D3","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/5d/5297717a.jpg","comment_is_top":false,"comment_ctime":1565798495,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1565798495","product_id":100032701,"comment_content":"用户缓冲区 拷贝到 内核缓冲区<br>内核缓冲区 拷贝到 IP报文<br><br>这不才两次拷贝嘛？？ 为啥评论区都说是三次？","like_count":0,"discussions":[{"author":{"id":1397631,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKVUskibDnhMt5MCIJ8227HWkeg2wEEyewps8GuWhWaY5fy7Ya56bu2ktMlxdla3K29Wqia9efCkWaQ/132","nickname":"衬衫的价格是19美元","note":"","ucode":"655F925451F772","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":23792,"discussion_content":"数据是怎么进入用户缓冲区的呢？也算一次吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569906894,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1101405,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ce/5d/5297717a.jpg","nickname":"初见","note":"","ucode":"06D7952CED37D3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1397631,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKVUskibDnhMt5MCIJ8227HWkeg2wEEyewps8GuWhWaY5fy7Ya56bu2ktMlxdla3K29Wqia9efCkWaQ/132","nickname":"衬衫的价格是19美元","note":"","ucode":"655F925451F772","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":24427,"discussion_content":"用户缓冲区就是你自己声明的buff，， 这是正常赋值，不属于拷贝吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570115651,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":23792,"ip_address":""},"score":24427,"extra":""}]}]},{"had_liked":false,"id":123791,"user_name":"苦行僧","can_delete":false,"product_type":"c1","uid":1055334,"ip_address":"","ucode":"726024A9A9CF44","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/66/2d9db9ed.jpg","comment_is_top":false,"comment_ctime":1565761516,"is_pvip":false,"replies":[{"id":"45955","content":"客户端? ","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1566130548,"ip_address":"","comment_id":123791,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565761516","product_id":100032701,"comment_content":"老师 我们的程序要从ftp下载视频到服务器 如何能最大限度提高下载保存的效率","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462814,"discussion_content":"客户端? ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566130548,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123580,"user_name":"monkay","can_delete":false,"product_type":"c1","uid":1066182,"ip_address":"","ucode":"07C0BB8A47799A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/pc41FOKAiabVaaKiawibEm7zglvnsYBnYeRiaSAElf9ciczovXmXmI0hOeR6U9RULFtMoqX5kobNttvwXCLsUM9Hbcg/132","comment_is_top":false,"comment_ctime":1565706322,"is_pvip":false,"replies":[{"id":"45940","content":"代码已上传到github，答疑篇统一回复","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1566129969,"ip_address":"","comment_id":123580,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565706322","product_id":100032701,"comment_content":"写了server端代码，运行起来，没有客户端请求进来，就直接进入read_data函数了，没有阻塞在accept那里，是不是有问题？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462734,"discussion_content":"代码已上传到github，答疑篇统一回复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566129969,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123546,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1565698911,"is_pvip":false,"replies":[{"id":"45939","content":"C语言","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1566129919,"ip_address":"","comment_id":123546,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565698911","product_id":100032701,"comment_content":"老师 这需要c环境 还是c++环境呀","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462719,"discussion_content":"C语言","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566129919,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123541,"user_name":"VenFox","can_delete":false,"product_type":"c1","uid":1002112,"ip_address":"","ucode":"11F08AD5685505","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4a/80/b1862ca3.jpg","comment_is_top":false,"comment_ctime":1565697564,"is_pvip":true,"replies":[{"id":"45938","content":"答疑统一回复","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1566129912,"ip_address":"","comment_id":123541,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565697564","product_id":100032701,"comment_content":"代码逻辑基本看懂，只是有些细节不明白，求老师推荐c语言书籍","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462717,"discussion_content":"答疑统一回复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566129912,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123518,"user_name":"zhchnchn","can_delete":false,"product_type":"c1","uid":1110218,"ip_address":"","ucode":"2219E40ED134D4","user_header":"https://static001.geekbang.org/account/avatar/00/10/f0/ca/4560f06b.jpg","comment_is_top":false,"comment_ctime":1565691332,"is_pvip":false,"replies":[{"id":"45937","content":"一样的啊，长连接无非是维护一段时间的TCP连接，还是一样通过FIN包处理连接中断","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1566129899,"ip_address":"","comment_id":123518,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1565691332","product_id":100032701,"comment_content":"“如果返回值为 0，表示 EOF（end-of-file），这在网络中表示对端发送了 FIN 包，要处理断连的情况”<br>----------------------------<br>请问老师，对那种保持长连接的socket，怎么处理读结束？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462708,"discussion_content":"一样的啊，长连接无非是维护一段时间的TCP连接，还是一样通过FIN包处理连接中断","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566129899,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1032125,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/bf/bd/0c40979f.jpg","nickname":"一周思进","note":"","ucode":"00BE5402479B16","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5213,"discussion_content":"对长连接读处理判断结束方法\nhttps://mp.weixin.qq.com/s/YvfZMO2gCjHWmrNRGpdibA","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566054644,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1110218,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f0/ca/4560f06b.jpg","nickname":"zhchnchn","note":"","ucode":"2219E40ED134D4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1032125,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/bf/bd/0c40979f.jpg","nickname":"一周思进","note":"","ucode":"00BE5402479B16","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5334,"discussion_content":"感谢回复。你这篇文章是我要问的问题。一个长连接在断开之前，客户端可能会发送多次请求，服务端如何判定请求的边界。可能我表述不明确，老师没明白我的问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566185629,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":5213,"ip_address":""},"score":5334,"extra":""}]}]},{"had_liked":false,"id":123396,"user_name":"Better me","can_delete":false,"product_type":"c1","uid":1261959,"ip_address":"","ucode":"CADF08D357489A","user_header":"https://static001.geekbang.org/account/avatar/00/13/41/87/46d7e1c2.jpg","comment_is_top":false,"comment_ctime":1565667426,"is_pvip":true,"replies":[{"id":"45935","content":"和cpu&#47;memory、网卡驱动、网卡、网络交换机、网络路由器等有关。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1566129827,"ip_address":"","comment_id":123396,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565667426","product_id":100032701,"comment_content":"对于思考题，应用程序的吞吐量应该主要和服务端缓冲区有关，对于服务端每个socket连接各自维护的接收端缓冲区无论到多大，还得看服务端内核对接收包的处理能力，这才是和最后的吞吐量有关系。而且增加缓冲区大小必然受限于服务端内存大小，同时可维护的socket连接也将减少。<br>一段数据从应用程序发送端到应用程序接收端应该是4次数据拷贝吧，从老师文中给出的图可看出 应用程序发送端—应用程序缓冲区，应用程序缓冲区—内核发送端缓冲区，内核接收端缓冲区—应用程序缓冲区，应用程序缓冲区—应用程序接收端，中间数据的网络传输应该不算拷贝吧。<br>不知道理解的有没有问题，老师有空看下。<br>还有想问下老师内核数据包处理能力主要是和什么有关，这个处理能力会是应用程序吞吐量的瓶颈么","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462653,"discussion_content":"和cpu/memory、网卡驱动、网卡、网络交换机、网络路由器等有关。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566129827,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123379,"user_name":"传说中的成大大","can_delete":false,"product_type":"c1","uid":1236766,"ip_address":"","ucode":"103543D6E706BF","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","comment_is_top":false,"comment_ctime":1565664463,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565664463","product_id":100032701,"comment_content":"看了评论 我再补充一下我说明为两次的原因 是从应用程序缓冲区到套接字缓冲区 这算一次  然后通过tcp&#47;ip到达客户端的套接字缓冲区 再拷贝一次到应用程序缓冲区 所以就成了两次","like_count":0},{"had_liked":false,"id":123378,"user_name":"传说中的成大大","can_delete":false,"product_type":"c1","uid":1236766,"ip_address":"","ucode":"103543D6E706BF","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","comment_is_top":false,"comment_ctime":1565664320,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565664320","product_id":100032701,"comment_content":"一共经历了两次拷贝 从服务端的应用程序缓冲区到服务器内核套接字缓冲区，再通过tcp&#47;ip到达客户端的内核套接字缓冲区，再拷贝到客户端的应用程序缓冲区 从上述程序来看 不可能把缓冲区搞得很大 因为内存毕竟有限，缓冲区分配大了导致数量就少了，并且缓冲区越大 在缓冲区填满的情况下 拷贝过程也变得很慢，而且绝大部分情况下不可能填满缓冲区所以很浪费","like_count":0},{"had_liked":false,"id":123364,"user_name":"传说中的成大大","can_delete":false,"product_type":"c1","uid":1236766,"ip_address":"","ucode":"103543D6E706BF","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","comment_is_top":false,"comment_ctime":1565661714,"is_pvip":false,"replies":[{"id":"45932","content":"整理中，答疑统一回复","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1566129639,"ip_address":"","comment_id":123364,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565661714","product_id":100032701,"comment_content":"还是把头文件也加上吧 我想测试代码还要找半天的头文件。。。。","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462636,"discussion_content":"整理中，答疑统一回复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566129639,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123288,"user_name":"Liam","can_delete":false,"product_type":"c1","uid":1094597,"ip_address":"","ucode":"1D15D3B64F2606","user_header":"https://static001.geekbang.org/account/avatar/00/10/b3/c5/7fc124e2.jpg","comment_is_top":false,"comment_ctime":1565657130,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565657130","product_id":100032701,"comment_content":"1 从发送到接受整个过程需要2次数据拷贝？<br>2 适当增大缓冲区是有好处的，但是有限度，太大消耗资源过多且容易积压","like_count":0},{"had_liked":false,"id":123220,"user_name":"啦啦的小猪","can_delete":false,"product_type":"c1","uid":1134766,"ip_address":"","ucode":"13352B41450925","user_header":"https://static001.geekbang.org/account/avatar/00/11/50/ae/11dad6f3.jpg","comment_is_top":false,"comment_ctime":1565629436,"is_pvip":false,"replies":[{"id":"45931","content":"这需要在处理报文解析时小心一点，我在提高篇讲到tcp的流式特性时会讲到这方面的技巧。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1566129609,"ip_address":"","comment_id":123220,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1565629436","product_id":100032701,"comment_content":"老师我有个问题，之前在写c网络编程的时候有个关于tcp粘包的问题【好像专业术语不能交粘包】这个怎么解决？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462587,"discussion_content":"这需要在处理报文解析时小心一点，我在提高篇讲到tcp的流式特性时会讲到这方面的技巧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566129609,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1299095,"avatar":"https://static001.geekbang.org/account/avatar/00/13/d2/97/5f4cd8da.jpg","nickname":"虎虎生威的程坚强","note":"","ucode":"321C89298D3682","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8691,"discussion_content":"黏包问题大概有以下几种解决方法：（1）发定长包（2）包头带包体序号和长度（3）包体带关键字识别，我用的最多的就是包头带包体序号和包体长度这个方法。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1568036684,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123202,"user_name":"西红柿牛腩","can_delete":false,"product_type":"c1","uid":1152898,"ip_address":"","ucode":"DEC94B4A647A92","user_header":"https://static001.geekbang.org/account/avatar/00/11/97/82/394c88ad.jpg","comment_is_top":false,"comment_ctime":1565625213,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565625213","product_id":100032701,"comment_content":"说粘包的认真的？？？","like_count":0},{"had_liked":false,"id":123199,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1565624359,"is_pvip":false,"replies":[{"id":"45929","content":"会慢慢提高，这是一个学习曲线","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1566129396,"ip_address":"","comment_id":123199,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565624359","product_id":100032701,"comment_content":"ps: 目前来看都还是比较基础的，适合我这种小白从头跟。","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462579,"discussion_content":"会慢慢提高，这是一个学习曲线","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566129396,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123198,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1565624304,"is_pvip":false,"replies":[{"id":"45928","content":"环境问题统一在答疑篇回复","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1566129363,"ip_address":"","comment_id":123198,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565624304","product_id":100032701,"comment_content":"缓冲区是每个连接的基础设施，增大缓冲区，缓冲区中的数据什么时候被取走呢？<br>看到说是由内核觉决定吗？ 那这样的话，它会不会是最后一个被处理连接缓冲区中的数据啊?<br><br>老师，这个代码是用c语言写的 还是用c++写的?<br><br>如果我要装环境的话，需要装什么哇？ 老师可否简单回答一下呢。","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462578,"discussion_content":"环境问题统一在答疑篇回复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566129363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123186,"user_name":"一周思进","can_delete":false,"product_type":"c1","uid":1032125,"ip_address":"","ucode":"00BE5402479B16","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bf/bd/0c40979f.jpg","comment_is_top":false,"comment_ctime":1565621752,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565621752","product_id":100032701,"comment_content":"了解了写本地文件其实是调用一次write接口就行，不需要调用类似writen接口，而对于非阻塞套接字读写则要使用readn和writen这样的接口。<br>每个套接字都有各自的缓冲区，学习了！ 重要的是还要实践输出，得好好学习这个专栏。","like_count":0},{"had_liked":false,"id":123142,"user_name":"斐波那契","can_delete":false,"product_type":"c1","uid":1464006,"ip_address":"","ucode":"85E2EBC01392B1","user_header":"https://static001.geekbang.org/account/avatar/00/16/56/c6/0b449bc6.jpg","comment_is_top":false,"comment_ctime":1565614171,"is_pvip":false,"replies":[{"id":"45926","content":"是的，通俗一点说，就是接收端已经处理不过来了，就会让发送端发得慢一点，当然，这个对我们来说是透明的，造成的结果就是，发送端要很久才能把数据拷贝到发送缓冲区。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1566129207,"ip_address":"","comment_id":123142,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565614171","product_id":100032701,"comment_content":"老师 关于实验二想问个更细致的问题 在实验二中客户端已经把数据全部写入到缓冲区了但是服务端还在接收 那此时是不是可以认为客户端仍然还在发送数据给服务端？如果还在发送并且服务端的睡眠时间变大那客户端的发送怎么跟服务端的处理步调一致？能想到的是滑动窗口跟服务器接收缓冲区配合使用 老师是不是这样","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462555,"discussion_content":"是的，通俗一点说，就是接收端已经处理不过来了，就会让发送端发得慢一点，当然，这个对我们来说是透明的，造成的结果就是，发送端要很久才能把数据拷贝到发送缓冲区。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566129207,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123028,"user_name":"阿卡牛","can_delete":false,"product_type":"c1","uid":1022247,"ip_address":"","ucode":"0BC43A904C3199","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/27/47aa9dea.jpg","comment_is_top":false,"comment_ctime":1565594687,"is_pvip":false,"replies":[{"id":"45895","content":"在答疑篇里统一回复","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1566121400,"ip_address":"","comment_id":123028,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565594687","product_id":100032701,"comment_content":"有哪些必看的书籍，求推荐","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462506,"discussion_content":"在答疑篇里统一回复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566121400,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122986,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1565582476,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565582476","product_id":100032701,"comment_content":"一段数据流从应用程序发送端，一直到应用程序接收端，总共经过了多少次拷贝？<br>客户端 -》应用程序缓冲区<br>应用程序缓冲区 -》发送缓冲区<br>接收缓冲区 -》应用程序缓冲区<br>应用程序缓冲区 -》服务端<br>一代4次拷贝","like_count":0},{"had_liked":false,"id":122984,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1565582342,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565582342","product_id":100032701,"comment_content":"适当增大缓冲区大小是可以解决一些性能问题的，<br>但是当服务器的处理速度跟不上的时，增大缓冲区也无济于事，大量的数据在缓冲区内久久得不到处理，所以问题还是得不到解决。","like_count":0},{"had_liked":false,"id":122937,"user_name":"阿卡牛","can_delete":false,"product_type":"c1","uid":1022247,"ip_address":"","ucode":"0BC43A904C3199","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/27/47aa9dea.jpg","comment_is_top":false,"comment_ctime":1565575610,"is_pvip":false,"replies":[{"id":"45182","content":"正在准备中......","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1565579651,"ip_address":"","comment_id":122937,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565575610","product_id":100032701,"comment_content":"serv.c: In function ‘main’:<br>serv.c:17: warning: incompatible implicit declaration of built-in function ‘bzero’<br>serv.c:24: error: ‘SA’ undeclared (first use in this function)<br>serv.c:24: error: (Each undeclared identifier is reported only once<br>serv.c:24: error: for each function it appears in.)<br>serv.c:24: error: expected expression before ‘)’ token<br>serv.c:24: error: too few arguments to function ‘bind’<br>serv.c:32: error: expected expression before ‘)’ token<br>serv.c:32: error: too few arguments to function ‘accept’<br>serv.c: At top level:<br>serv.c:39: warning: conflicting types for ‘read_data’<br>serv.c:33: note: previous implicit declaration of ‘read_data’ was here<br>编译运行后出现以上错误，是因为还有其它文件未引用吗，可否将完整源码放上github,谢谢","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462462,"discussion_content":"正在准备中......","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565579651,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122907,"user_name":"大灰狼","can_delete":false,"product_type":"c1","uid":1031820,"ip_address":"","ucode":"504276786C8CDB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/be/8c/a5a3788f.jpg","comment_is_top":false,"comment_ctime":1565572408,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565572408","product_id":100032701,"comment_content":"网卡驱动拿到数据，中断后写入收缓冲区<br>从缓冲区到应用一次。<br>所以最少两次。<br>无限大小的缓冲区浪费内存，并不是越大越好。如果缓冲区增大并不能提升收发包效率，可以采取其他方面的优化。","like_count":0},{"had_liked":false,"id":122894,"user_name":"破晓^_^","can_delete":false,"product_type":"c1","uid":1149592,"ip_address":"","ucode":"3224920095AC9E","user_header":"https://static001.geekbang.org/account/avatar/00/11/8a/98/2be9d17b.jpg","comment_is_top":false,"comment_ctime":1565571487,"is_pvip":false,"replies":[{"id":"45093","content":"感谢指出，代码会加强审阅","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1565574168,"ip_address":"","comment_id":122894,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565571487","product_id":100032701,"comment_content":"老师你好，文中几处贴代码的位置，个人觉得不管是代码片段还是完整程序，应该保持完整性，文中几处都缺少花括号补齐，完整性。","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462444,"discussion_content":"感谢指出，代码会加强审阅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565574168,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}