{"id":120049,"title":"34 | 服务端开发的宏观视角","content":"<p>你好，我是七牛云许式伟。</p><p>今天开始，我们进入第三章，谈谈服务端开发。</p><h2>服务端的发展史</h2><p>服务端开发这个分工，出现的历史极短。短得让人难以想象。</p><p>1946 年，第一台电子计算机问世。1954 年，第一门高级语言 Fortran 发布。整个信息科技发展到今天，大约也就 60~70 年的历史。</p><p>1974 年，Internet 诞生。1989 年，万维网（WWW）诞生，但刚开始只限于政府和学术研究用途，1993 年才开始进入民用市场。</p><p>从这个角度来说，服务端开发这个分工，从互联网诞生算起也就 40 多年的历史。真正活跃的时段，其实只有 20 多年。</p><p>但其发展速度是非常惊人的。我们简单罗列下这些年来的标志性事件。</p><ul>\n<li>1971 年，电子邮件诞生。</li>\n<li>1974 年，Internet 诞生。</li>\n<li>1974 年，第一个数据库系统 IBM System R 诞生。SQL 语言诞生。</li>\n<li>1989 年，万维网（WWW）诞生。</li>\n<li>1993 年，世界上第一个 Web 服务器 NCSA HTTPd 诞生，它也是大名鼎鼎的 Apache 开源 Web 服务器的前身。</li>\n<li>1998 年，Akamai 诞生，提供内容分发网络（CDN）服务。这应该算全球第一个企业云服务，虽然当时还没有云计算这样的概念。</li>\n<li>2006 年，Amazon 发布弹性计算云（Elastic Compute Cloud），简称 EC2。这被看作云计算诞生的标志性事件。</li>\n<li>2007 年，Amazon 发布简单存储服务（Simple Storage Service），简称 S3。这是全球第一个对象存储服务。</li>\n<li>2008 年，Google 发布 GAE（Google App Engine）。</li>\n<li>2009 年，Go 语言诞生。Derek Collison 曾预言 Go 语言将制霸云计算领域。</li>\n<li>2011 年，七牛云诞生，发布了 “对象存储+CDN+多媒体处理” 融合的 PaaS 型云存储，为企业提供一站式的图片、音视频等多媒体内容的托管服务。</li>\n<li>2013 年，Docker 诞生。</li>\n<li>2013 年，CoreOS 诞生。这是第一个专门面向服务端的操作系统。</li>\n<li>2014 年，Kubernetes 诞生。当前被认为是数据中心操作系统（DCOS）的事实标准。</li>\n</ul><!-- [[[read_end]]] --><p>通过回顾服务端的发展历史，我们可以发现，它和桌面开发技术迭代的背后驱动力是完全不同的。</p><p>桌面开发技术的迭代，是交互的迭代，是人机交互的革命。而服务端开发技术的迭代，虽然一开始沿用了桌面操作系统的整套体系框架，但它正逐步和桌面操作系统分道而行，转向数据中心操作系统（DCOS）之路。</p><h2>服务端程序的需求</h2><p>这些演进趋势的根源是什么？</p><p><strong>其一是规模。</strong></p><p>桌面程序是为单个用户服务的，所以它关注点是用户交互体验的不断升级。</p><p>服务端程序是被所有用户所共享，为所有用户服务的。一台物理的机器资源总归是有限的，能够服务的用户数必然存在上限，所以一个服务端程序在用户规模到达一定程度后，需要分布式化，跑在多台机器上以服务用户。</p><p><strong>其二是连续服务时长。</strong></p><p>桌面程序是为单个用户服务的，用户在单个桌面程序的连续使用时长通常不会太长。</p><p>但是服务端程序不同，它通常都是 7x24 小时不间断服务的。当用户规模达到一定基数后，每一秒都会有用户在使用它，不存在关闭程序这样的概念。</p><p><strong>其三是质量要求。</strong></p><p>每个桌面程序的实例都是为单个用户服务的，有一亿的用户就有一亿个桌面程序的实例。</p><p>但是服务端程序不同，不可能有一亿个用户就跑一亿个，每个用户单独用一个，而是很多用户共享使用一个程序实例。</p><p>这意味着两者对程序运行崩溃的容忍度不同。</p><p>一个桌面程序实例运行崩溃，它只影响一个用户。</p><p>但一个服务端程序实例崩溃，可能影响几十万甚至几百万的用户。</p><p>这是不可接受的。</p><p>一个服务端程序的实例可以崩溃，但是它的工作必须立刻转交给其他的实例重新做，否则损失太大了。</p><p>所以服务端程序必须能够实现用户的自动转移。一个实例崩溃了，或者因为需要功能升级而重启了，它正在服务的用户需要转给其他实例来服务。</p><p>所以，服务端程序必须是多实例的。单个程序实例的临时不可用状态，要做到用户无感知。</p><p>从用户视角看，服务端程序 7x24 小时持续服务，任何时刻都不应该崩溃。就如同水电煤一样。</p><h2>服务端开发的体系架构</h2><p>在 “<a href=\"https://time.geekbang.org/column/article/90170\">01 | 架构设计的宏观视角</a>” 这一讲中，我们将一个服务端程序完整的体系架构归纳如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/55/37/5553453858eb86bf88a5623255f20037.png?wh=1307*830\" alt=\"\"></p><p>这个架构体系，是为了方便你和桌面开发的体系架构建立自然的对应关系而画的。</p><p>它当然是对的，但它只是从服务端程序的单个实例看的，不是服务端程序体系架构的全部。</p><p>在 “<a href=\"https://time.geekbang.org/column/article/99184\">15 | 可编程的互联网世界</a>” 这一讲中，我们把 TCP/IP 层比作网络的操作系统，一个网络程序的体系架构如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/27/35/272a1a5319c226fc6472bb4f5f256c35.png?wh=1920*956\" alt=\"\"></p><p>一个服务端程序当然也是一个网络程序，它符合网络程序的体系架构。</p><p>但它也不是服务端程序体系架构的全部。</p><p>从宏观视角看，一个服务端程序应该首先是一个多实例的分布式程序。其宏观体系架构示意如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/89/82/895dbf7e39fb562215e0176ca4aad382.png?wh=592*502\" alt=\"\"></p><p>相比桌面程序而言，服务端程序依赖的基础软件不只是操作系统和编程语言，还多了两类：</p><ul>\n<li>负载均衡（Load Balance）；</li>\n<li>数据库或其他形式的存储（DB/Storage）。</li>\n</ul><p>为什么会需要负载均衡（Load Balance）？为什么会需要数据库或其他形式的存储？你可以留言探讨一下。我们在接下来的几讲将聊聊负载均衡和存储。</p><h2>结语</h2><p>今天我们从服务端的发展历程、服务端开发的需求谈起，以此方便你理解服务端开发的生态会怎么演化，技术迭代会走向何方。</p><p>我们这里探讨的需求和具体业务无关，它属于服务端本身的领域特征。就像桌面的领域特征是强交互，以事件为输入，GDI 为输出一样，服务端的领域特征是大规模的用户请求，以及 24 小时不间断的服务。</p><p>这些领域特征直接导致了服务端开发的体系架构和桌面必然是如此的不同。</p><p>如果你对今天的内容有什么思考与解读，欢迎给我留言，我们一起讨论。下一讲我们将聊聊负载均衡（Load Balance）。</p><p>如果你觉得有所收获，也欢迎把文章分享给你的朋友。感谢你的收听，我们下期再见。</p>","neighbors":{"left":{"article_title":"33 | 桌面开发篇：回顾与总结","id":118674},"right":{"article_title":"35 | 流量调度与负载均衡","id":125952}},"comments":[{"had_liked":false,"id":145859,"user_name":"丁丁历险记","can_delete":false,"product_type":"c1","uid":1661704,"ip_address":"","ucode":"A43829E454C067","user_header":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","comment_is_top":false,"comment_ctime":1572396544,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"327989911040","product_id":100025201,"comment_content":"把七牛云诞生塞进大事件这波操作亮了。","like_count":76,"discussions":[{"author":{"id":1053955,"avatar":"https://static001.geekbang.org/account/avatar/00/10/15/03/c0fe1dbf.jpg","nickname":"考休","note":"","ucode":"968DFC00D6D0CF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":271954,"discussion_content":"这波植入我服","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1590227275,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1557834,"avatar":"https://static001.geekbang.org/account/avatar/00/17/c5/4a/340bda41.jpg","nickname":"水阡墨","note":"","ucode":"87C949F0E295A9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344564,"discussion_content":"哈哈，创始人的自我修养，刚没注意看，害的我又回去看了一遍大事件","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611498795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1017161,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/85/49/585c69c4.jpg","nickname":"皮特尔","note":"","ucode":"313862C91DD325","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294777,"discussion_content":"这是创始人的自我修养","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595996759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1248212,"avatar":"https://static001.geekbang.org/account/avatar/00/13/0b/d4/39763233.jpg","nickname":"Tianz","note":"","ucode":"4B6542604B8B6F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":237752,"discussion_content":"你这这这😆😆😆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587181677,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131144,"user_name":"黄强","can_delete":false,"product_type":"c1","uid":1086093,"ip_address":"","ucode":"20231AC29CFD53","user_header":"https://static001.geekbang.org/account/avatar/00/10/92/8d/ab469ad5.jpg","comment_is_top":false,"comment_ctime":1567651079,"is_pvip":false,"replies":[{"id":"49364","content":"👍，的确如此。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1567651357,"ip_address":"","comment_id":131144,"utype":1}],"discussion_count":2,"race_medal":0,"score":"117531768071","product_id":100025201,"comment_content":"负载均衡和其他形式的存储，除了留言区的各回答外，还有就是架构设计中的隔离稳定点和变化点，客户连接服务要求和存储要求都是稳定点，变化点就是怎样有效提供服务及存储","like_count":27,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466310,"discussion_content":"👍，的确如此。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567651357,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1197625,"avatar":"https://static001.geekbang.org/account/avatar/00/12/46/39/e545c885.jpg","nickname":"糊李糊涂","note":"","ucode":"E0F6064CBA32B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":182532,"discussion_content":"如何在有限的资源给更多人提供更优质的服务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582432373,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125870,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1566266540,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"44515939500","product_id":100025201,"comment_content":"1.负载量级，和服务停机损失大（必须要保证ha）。这两个核心诉求引出了负载均衡技术。也就是说，负载均衡解决了两个问题。一个是打破单机性能瓶颈，将多机性能聚合起来，实现可以通过扩容增长计算负载力。二是解决了服务高可用，同过多机主备，多中心主备，规避单点故障，进而保证服务高可用。<br>2.用户权限控制，用户信息安全。用户操作记录，数据分析。数据持久化在服务端是一个成本比较大的选择。但这对维护用户数据安全，服务提供多用户同一份数据，用户权限控制，后续做战略布局的数据分析，和智能推荐的机器学习啥的都比较重要。","like_count":10},{"had_liked":false,"id":125868,"user_name":"CoderLim","can_delete":false,"product_type":"c1","uid":1029523,"ip_address":"","ucode":"4A856891BE98E5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKY0ibA4DWA9Bf6MuicKhyEt0yDXvAzG21xnOUHNLDwuic2icxpesyeXc1AMboeZEW97e8SuZdzIBefqA/132","comment_is_top":false,"comment_ctime":1566266516,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"35926004884","product_id":100025201,"comment_content":"1、负载均衡提供了高性能、水平扩展、高可用的能力。单台机器无法承载太多请求时，就需要增加机器，负载均衡的作用就是来控制如何把请求分配到不同的机器上；这样增加机器很容易，也就是水平扩展的能力；增加机器用来支撑更多的请求，更快的处理，这就是高性能；如果某个机器挂了，也很容易控制请求不要流向坏了的机器，这就是高可用。<br>2、存储提供的是持久化的能力。因为系统中会出现业务数据，不存起来以后就无法拿到这些数据了。各种数据库，比如 MySQL；数据共享，比如发送文件、图片；提高性能，比如Redis做缓存；更基础的概念，比如磁盘，内存，寄存器，没有他们计算机跑不起来。","like_count":8},{"had_liked":false,"id":125866,"user_name":"Spiderspiders","can_delete":false,"product_type":"c1","uid":1053925,"ip_address":"","ucode":"96232A7E64A823","user_header":"https://static001.geekbang.org/account/avatar/00/10/14/e5/181abc46.jpg","comment_is_top":false,"comment_ctime":1566266391,"is_pvip":false,"replies":[{"id":"46241","content":"是的","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1566267771,"ip_address":"","comment_id":125866,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23041102871","product_id":100025201,"comment_content":"24小时不间断服务，实际上说的就是几个9吧。","like_count":5,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463725,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566267771,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126972,"user_name":"马哲富","can_delete":false,"product_type":"c1","uid":1107917,"ip_address":"","ucode":"D6BDDFE3CC07ED","user_header":"https://static001.geekbang.org/account/avatar/00/10/e7/cd/08088f14.jpg","comment_is_top":false,"comment_ctime":1566528363,"is_pvip":false,"replies":[{"id":"46983","content":"不完全是","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1566532649,"ip_address":"","comment_id":126972,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14451430251","product_id":100025201,"comment_content":"也就是说后端工程师的技术方向必然是云和大数据对么？","like_count":3,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464265,"discussion_content":"不完全是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566532649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215619,"user_name":"Messi  Curry","can_delete":false,"product_type":"c1","uid":1210566,"ip_address":"","ucode":"365B842DA94EA5","user_header":"https://static001.geekbang.org/account/avatar/00/12/78/c6/c952aec9.jpg","comment_is_top":false,"comment_ctime":1589034136,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10178968728","product_id":100025201,"comment_content":"提到服务端，马上就会出来2个专属的词：「高并发」、「高可用」，这也正式服务端开发的典型特性<br>实现高并发和高可用的必杀技就是：「分布式」<br>为什么需要负载均衡：解决分布式的分发问题<br>为什么需要数据库和存储：解决分布式的数据共享问题<br>当然，负载均衡器和数据库也是分布式的","like_count":2},{"had_liked":false,"id":247036,"user_name":"张浩_house","can_delete":false,"product_type":"c1","uid":1021258,"ip_address":"","ucode":"B733234B133607","user_header":"https://static001.geekbang.org/account/avatar/00/0f/95/4a/a145c675.jpg","comment_is_top":false,"comment_ctime":1599565420,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5894532716","product_id":100025201,"comment_content":"负载均衡，单机的计算存储是有限的，服务为了能够服务更多的客户，主要就有两种方式一种就是提供单机性能，但是单机性能终归是有限制的，不能无限扩展，所以就会通过横向扩展把服务部署到多台机器，同时对外提供服务，这就需要一个统一的如果去分发这些服务，负载均衡就是其这个作用的。","like_count":1},{"had_liked":false,"id":220485,"user_name":"::error","can_delete":false,"product_type":"c1","uid":2014834,"ip_address":"","ucode":"75B4317A3B9070","user_header":"https://static001.geekbang.org/account/avatar/00/1e/be/72/6060d4a6.jpg","comment_is_top":false,"comment_ctime":1590248955,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5885216251","product_id":100025201,"comment_content":"后台开发就是在用户看不到的地方为用户提供更种服务的支持，不过这个支持要快速，安全，高效，于是为了解决这些问题。伴随着网络的的发展，负载均衡，分布式存储就显得非常有必要了!!","like_count":1},{"had_liked":false,"id":137509,"user_name":"zkbeta2","can_delete":false,"product_type":"c1","uid":1025267,"ip_address":"","ucode":"066906D6F32FA4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKjym0mscH8gyTVJwnXPAJxomtS5eGwgicHrfeRQssA0IZP5gGsBe7y9BNuNLSESXOxVnfIvD7qmXw/132","comment_is_top":false,"comment_ctime":1569756225,"is_pvip":false,"replies":[{"id":"52856","content":"当然不是","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1569803280,"ip_address":"","comment_id":137509,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5864723521","product_id":100025201,"comment_content":"你好，想问一下对象存储和文件存储是不是同一个概念啊？","like_count":1,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469128,"discussion_content":"当然不是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569803280,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126812,"user_name":"Charles","can_delete":false,"product_type":"c1","uid":1001410,"ip_address":"","ucode":"32646D78CC0389","user_header":"https://static001.geekbang.org/account/avatar/00/0f/47/c2/e9fa4cf6.jpg","comment_is_top":false,"comment_ctime":1566483010,"is_pvip":false,"replies":[{"id":"46888","content":"它是集群，只是这里没有画出来，存储也一样","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1566483737,"ip_address":"","comment_id":126812,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5861450306","product_id":100025201,"comment_content":"好奇的问下负载均衡本身怎么保证高可用？","like_count":1,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464181,"discussion_content":"它是集群，只是这里没有画出来，存储也一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566483737,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125789,"user_name":"williamcai","can_delete":false,"product_type":"c1","uid":1158294,"ip_address":"","ucode":"B158F52C2D39BC","user_header":"https://static001.geekbang.org/account/avatar/00/11/ac/96/46b13896.jpg","comment_is_top":false,"comment_ctime":1566260885,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5861228181","product_id":100025201,"comment_content":"服务端为了保持7x24小时服务，必然要保证服务的多实例。各个实例之间的服务器配置和忙闲不一致，必然要合理的分配资源，为用户提供更好的体验，同时也可以避免有的实例过载而挂掉，有的清闲而浪费资源，这就需要一个全局掌握资源情况的程序来处理，这就是负载均衡的作用","like_count":1},{"had_liked":false,"id":125775,"user_name":"tingye","can_delete":false,"product_type":"c1","uid":1391463,"ip_address":"","ucode":"54F7A44066DF5D","user_header":"https://static001.geekbang.org/account/avatar/00/15/3b/67/c188d3bc.jpg","comment_is_top":false,"comment_ctime":1566260059,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5861227355","product_id":100025201,"comment_content":"因为分布式多应用实例，需要通过某种算法实现前端请求的分散处理，提高系统后端的并发处理能力，同时避免单点故障，所以需要负载均衡。<br>因为服务器后端需要持久化存储大量的状态数据，为了分布式实例共享数据及尽量去状态，提高数据存取效率及安全性，所以需要集中式的数据库或其他形式的存储。","like_count":1},{"had_liked":false,"id":125744,"user_name":"业余爱好者","can_delete":false,"product_type":"c1","uid":1482915,"ip_address":"","ucode":"A890935A982988","user_header":"https://static001.geekbang.org/account/avatar/00/16/a0/a3/8da99bb0.jpg","comment_is_top":false,"comment_ctime":1566257396,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5861224692","product_id":100025201,"comment_content":"今天才算从架构层面系统的理解了负载均衡与服务端存储的重要性。负载均衡的作用是为了实现多个服务端实例集群的高可用，保证整个系统不会因为单个实例崩溃而不可用。存储的重要性不言而喻，因为在云时代，用户的信息不再放于客户端，而是所有数据都迁移到了服务端。","like_count":1},{"had_liked":false,"id":358679,"user_name":"supermouse","can_delete":false,"product_type":"c1","uid":1321860,"ip_address":"上海","ucode":"88072D5F881827","user_header":"https://static001.geekbang.org/account/avatar/00/14/2b/84/07f0c0d6.jpg","comment_is_top":false,"comment_ctime":1664532654,"is_pvip":false,"replies":[{"id":"130646","content":"主要是 nginx 和 apache 定位相似","user_name":"作者回复","user_name_real":"编辑","uid":"1228022","ctime":1665356103,"ip_address":"上海","comment_id":358679,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1664532654","product_id":100025201,"comment_content":"结合服务端宏观体系架构图，Nginx的诞生是否也是服务端开发的标志性事件呢？","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589841,"discussion_content":"主要是 nginx 和 apache 定位相似","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665356103,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":304798,"user_name":"David","can_delete":false,"product_type":"c1","uid":1021825,"ip_address":"","ucode":"22CBBC13FC97A9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/97/81/e1eaf621.jpg","comment_is_top":false,"comment_ctime":1627620492,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1627620492","product_id":100025201,"comment_content":"存储我的理解用使服务无状态 重启无影响<br>负载均衡起到分发隔离的作用重启宕机对用户无感知","like_count":0},{"had_liked":false,"id":289072,"user_name":"不温暖啊不纯良","can_delete":false,"product_type":"c1","uid":2079117,"ip_address":"","ucode":"204474A214E00C","user_header":"https://static001.geekbang.org/account/avatar/00/1f/b9/8d/00bded19.jpg","comment_is_top":false,"comment_ctime":1618842038,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618842038","product_id":100025201,"comment_content":"服务端程序的需求的不同，他要满足大规模用户的访问，还要满足几乎不间断服务，更要保证它自身的可靠性。<br><br>为了满足大规模这个需求，服务端的机器从一台变多台，还能够保证个别机器崩溃之后依然能够服务用户。<br><br>为了满足几乎不间断服务，负载均衡出现了，它能根据每个服务器自身的吞吐量，给其分配合理的请求数，让能力大的机器处理更多请求，能力小的则相对处理较少的请求，这样既降低了服务器崩溃的风验。<br><br>为了满足可靠性，用户的数据都会被存储在数据库中，这些数据由软件商来维护，当用户需要用这些数据的时候，总能够拿到这些数据。","like_count":0},{"had_liked":false,"id":288922,"user_name":"张浩","can_delete":false,"product_type":"c1","uid":1001225,"ip_address":"","ucode":"DBEAFFB7660813","user_header":"https://static001.geekbang.org/account/avatar/00/0f/47/09/316b0aa1.jpg","comment_is_top":false,"comment_ctime":1618788752,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1618788752","product_id":100025201,"comment_content":"对服务端开发有了宏观的了解，之前进行服务端技术方案设计，不会去思考服务端演进的过程，对促进其演进的根源：用户规模和24小时连续服务，没有认真思考过，停留在较浅的层面。<br><br><br><br><br>","like_count":0},{"had_liked":false,"id":282617,"user_name":"程序员Artist","can_delete":false,"product_type":"c1","uid":1063635,"ip_address":"","ucode":"F6AEC69AE77DC0","user_header":"https://static001.geekbang.org/account/avatar/00/10/3a/d3/c273ee50.jpg","comment_is_top":false,"comment_ctime":1615341230,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615341230","product_id":100025201,"comment_content":"存储：为了维护状态。负载均衡：为了流量调度（集中式 代理 分布式）","like_count":0},{"had_liked":false,"id":281094,"user_name":"Run","can_delete":false,"product_type":"c1","uid":1371941,"ip_address":"","ucode":"6738D2F36ACFF6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLMDBq7lqg9ZasC4f21R0axKJRVCBImPKlQF8yOicLLXIsNgsZxsVyN1mbvFOL6eVPluTNgJofwZeA/132","comment_is_top":false,"comment_ctime":1614581252,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614581252","product_id":100025201,"comment_content":"庖丁解牛","like_count":0},{"had_liked":false,"id":280841,"user_name":"Run","can_delete":false,"product_type":"c1","uid":1371941,"ip_address":"","ucode":"6738D2F36ACFF6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLMDBq7lqg9ZasC4f21R0axKJRVCBImPKlQF8yOicLLXIsNgsZxsVyN1mbvFOL6eVPluTNgJofwZeA/132","comment_is_top":false,"comment_ctime":1614417570,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614417570","product_id":100025201,"comment_content":"量级上来了就是不一样,和桌面开发两开花","like_count":0},{"had_liked":false,"id":275048,"user_name":"王布斯","can_delete":false,"product_type":"c1","uid":1141005,"ip_address":"","ucode":"F435E512E4DDC3","user_header":"https://static001.geekbang.org/account/avatar/00/11/69/0d/7ba74474.jpg","comment_is_top":false,"comment_ctime":1611285781,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1611285781","product_id":100025201,"comment_content":"666","like_count":0},{"had_liked":false,"id":256373,"user_name":"不记年","can_delete":false,"product_type":"c1","uid":1045945,"ip_address":"","ucode":"287E40C68356DC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f5/b9/888fe350.jpg","comment_is_top":false,"comment_ctime":1603611752,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603611752","product_id":100025201,"comment_content":"1. 负载均衡 满足的是对服务端 规模, 质量, 服务时长的需求 <br>2. 存储满足的是服务多用户的需求","like_count":0},{"had_liked":false,"id":256164,"user_name":"小炭","can_delete":false,"product_type":"c1","uid":1109544,"ip_address":"","ucode":"E20E3958CAF06C","user_header":"https://static001.geekbang.org/account/avatar/00/10/ee/28/c04a0c83.jpg","comment_is_top":false,"comment_ctime":1603543285,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1603543285","product_id":100025201,"comment_content":"云原生大势所趋","like_count":0},{"had_liked":false,"id":182392,"user_name":"糊李糊涂","can_delete":false,"product_type":"c1","uid":1197625,"ip_address":"","ucode":"E0F6064CBA32B1","user_header":"https://static001.geekbang.org/account/avatar/00/12/46/39/e545c885.jpg","comment_is_top":false,"comment_ctime":1582780053,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582780053","product_id":100025201,"comment_content":"读许大的东西，视野一下子开阔和明朗了，我不得不怀疑这些年都在搬砖，只是个技术熟练的搬砖工。","like_count":0},{"had_liked":false,"id":160111,"user_name":"Geek_04e22a","can_delete":false,"product_type":"c1","uid":1184505,"ip_address":"","ucode":"B64FF12EA28BA6","user_header":"https://static001.geekbang.org/account/avatar/00/12/12/f9/7e6e3ac6.jpg","comment_is_top":false,"comment_ctime":1575871925,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575871925","product_id":100025201,"comment_content":"负载均衡就是分发流量，提升提供给用户的请求处理能力，能够水平扩容，ssl证书卸载，网络隔离功能<br><br>存储:保存用户的信息","like_count":0},{"had_liked":false,"id":135976,"user_name":"弹弹君","can_delete":false,"product_type":"c1","uid":1189043,"ip_address":"","ucode":"BDB4B8C33CC2F5","user_header":"https://static001.geekbang.org/account/avatar/00/12/24/b3/3dbdb243.jpg","comment_is_top":false,"comment_ctime":1569319355,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569319355","product_id":100025201,"comment_content":"因为这个领域特征的需求，要支持大规模用户请求与不间断服务","like_count":0},{"had_liked":false,"id":134637,"user_name":"舒偌一","can_delete":false,"product_type":"c1","uid":1053833,"ip_address":"","ucode":"C1F87ED4E84FD9","user_header":"https://static001.geekbang.org/account/avatar/00/10/14/89/229bb890.jpg","comment_is_top":false,"comment_ctime":1568883769,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568883769","product_id":100025201,"comment_content":"根据服务端程序的特征，需要使用负载均衡来保证大规模应用和提供不间断服务的能力，同时也隔离了业务和其他要求。存储是为数据的再次使用。","like_count":0},{"had_liked":false,"id":127011,"user_name":"humor","can_delete":false,"product_type":"c1","uid":1181867,"ip_address":"","ucode":"9B48C4C7BEC92C","user_header":"https://static001.geekbang.org/account/avatar/00/12/08/ab/caec7bca.jpg","comment_is_top":false,"comment_ctime":1566535158,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566535158","product_id":100025201,"comment_content":"需要负载均衡是因为服务端需要高可用性和高性能，<br>需要额外的存储是因为服务端需要保存大量的数据，服务端本身不具备这种能力","like_count":0},{"had_liked":false,"id":126657,"user_name":"觉","can_delete":false,"product_type":"c1","uid":1503600,"ip_address":"","ucode":"95E85D30E92170","user_header":"https://static001.geekbang.org/account/avatar/00/16/f1/70/bca09d2d.jpg","comment_is_top":false,"comment_ctime":1566442270,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1566442270","product_id":100025201,"comment_content":"终于来了！！！","like_count":0,"discussions":[{"author":{"id":1102245,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d1/a5/2bbedc3b.jpg","nickname":"over","note":"","ucode":"FE272AC19842D3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365655,"discussion_content":"随喜","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617859320,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126566,"user_name":"Aaron Cheung","can_delete":false,"product_type":"c1","uid":1079816,"ip_address":"","ucode":"03972759C53667","user_header":"https://static001.geekbang.org/account/avatar/00/10/7a/08/4d3e47dd.jpg","comment_is_top":false,"comment_ctime":1566429208,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566429208","product_id":100025201,"comment_content":"负载均衡是为分布式服务，数据库为分布式数据状态统一 打卡34","like_count":0},{"had_liked":false,"id":126010,"user_name":"张裕","can_delete":false,"product_type":"c1","uid":1199777,"ip_address":"","ucode":"E3A46D7CA26D82","user_header":"https://static001.geekbang.org/account/avatar/00/12/4e/a1/bd0ccf62.jpg","comment_is_top":false,"comment_ctime":1566292834,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566292834","product_id":100025201,"comment_content":"负载均衡 一是不把鸡蛋放在一个篮子里，另一个是以分布式的方式提升服务能力。<br>数据库和其他形式存储 是为了保证这些分布式的服务有统一的状态，保证无论在哪个实例上处理都是等价的。","like_count":0},{"had_liked":false,"id":126007,"user_name":"程序员小跃","can_delete":false,"product_type":"c1","uid":1015483,"ip_address":"","ucode":"25BB96E0791A60","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7e/bb/947c329a.jpg","comment_is_top":false,"comment_ctime":1566292518,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1566292518","product_id":100025201,"comment_content":"前段时间因为接触了微服务，知道了负载均衡这个概念，但是还是不知道如何更好地描述，期待老师的精彩内容。","like_count":0},{"had_liked":false,"id":125990,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1566290180,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566290180","product_id":100025201,"comment_content":"服务端程序和客户端程序确实有着本质的区别，客户端更关注体验，视觉，而服务端则更关注可靠，准确，响应时间。所以服务端更需要有数据的思维，而编写界面的能力会差一些，现在分工明细，前端后端，确实是大势所趋。","like_count":0},{"had_liked":false,"id":125929,"user_name":"逍遥法外","can_delete":false,"product_type":"c1","uid":1103533,"ip_address":"","ucode":"75458730192696","user_header":"https://static001.geekbang.org/account/avatar/00/10/d6/ad/52df3832.jpg","comment_is_top":false,"comment_ctime":1566273683,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566273683","product_id":100025201,"comment_content":"负载均衡层是应对高性能和高可用复杂度的关键环节<br>一个桌面程序的实例只需要存储一个用户的数据，服务端程序需要存储所有用户的数据，自然需要更高效的存储系统","like_count":0},{"had_liked":false,"id":125891,"user_name":"leslie","can_delete":false,"product_type":"c1","uid":1324255,"ip_address":"","ucode":"798E7C1CC98CC2","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg","comment_is_top":false,"comment_ctime":1566269019,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566269019","product_id":100025201,"comment_content":"      期待老师的后续课程的讲解。负载均衡其实个人觉得是为了避免某个服务器压力过重而使用的，就像为何现在的架构越来越复杂，其实就是为了减轻某些压力。<br>       早期我们存储数据或者做数据分析其实excel就够了，后面就用了数据库；为了减轻数据库压力又在上面追加了内存库，任何资源都是有限的-如何让有限的资源发挥最大的效率这才是关键。<br>       老师的课跟到现在：受益匪浅，期待后面的课程讲解。","like_count":0},{"had_liked":false,"id":125802,"user_name":"阿卡牛","can_delete":false,"product_type":"c1","uid":1022247,"ip_address":"","ucode":"0BC43A904C3199","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/27/47aa9dea.jpg","comment_is_top":false,"comment_ctime":1566261469,"is_pvip":false,"replies":[{"id":"46233","content":"基本做到了吧😄","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1566265760,"ip_address":"","comment_id":125802,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566261469","product_id":100025201,"comment_content":"水电煤都做不到7*24小时不断:)","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463698,"discussion_content":"基本做到了吧😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566265760,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125763,"user_name":"刘宗尧","can_delete":false,"product_type":"c1","uid":1009476,"ip_address":"","ucode":"3E10A471C9177D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/44/1d63fc03.jpg","comment_is_top":false,"comment_ctime":1566259451,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566259451","product_id":100025201,"comment_content":"负载均衡，解决解决容量的问题;数据库提供持久化同时，要解决状态同步问题","like_count":0}]}