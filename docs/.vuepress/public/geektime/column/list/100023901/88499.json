{"id":88499,"title":"16 | Semaphore：如何快速实现一个限流器？","content":"<p>Semaphore，现在普遍翻译为“信号量”，以前也曾被翻译成“信号灯”，因为类似现实生活里的红绿灯，车辆能不能通行，要看是不是绿灯。同样，在编程世界里，线程能不能执行，也要看信号量是不是允许。</p><p>信号量是由大名鼎鼎的计算机科学家迪杰斯特拉（Dijkstra）于1965年提出，在这之后的15年，信号量一直都是并发编程领域的终结者，直到1980年管程被提出来，我们才有了第二选择。目前几乎所有支持并发编程的语言都支持信号量机制，所以学好信号量还是很有必要的。</p><p>下面我们首先介绍信号量模型，之后介绍如何使用信号量，最后我们再用信号量来实现一个限流器。</p><h2>信号量模型</h2><p>信号量模型还是很简单的，可以简单概括为：<strong>一个计数器，一个等待队列，三个方法</strong>。在信号量模型里，计数器和等待队列对外是透明的，所以只能通过信号量模型提供的三个方法来访问它们，这三个方法分别是：init()、down()和up()。你可以结合下图来形象化地理解。</p><p><img src=\"https://static001.geekbang.org/resource/image/6d/5c/6dfeeb9180ff3e038478f2a7dccc9b5c.png?wh=1142*566\" alt=\"\"></p><center><span class=\"reference\">信号量模型图</span></center><p>这三个方法详细的语义具体如下所示。</p><ul>\n<li>init()：设置计数器的初始值。</li>\n<li>down()：计数器的值减1；如果此时计数器的值小于0，则当前线程将被阻塞，否则当前线程可以继续执行。</li>\n<li>up()：计数器的值加1；如果此时计数器的值小于或者等于0，则唤醒等待队列中的一个线程，并将其从等待队列中移除。</li>\n</ul><!-- [[[read_end]]] --><p>这里提到的init()、down()和up()三个方法都是原子性的，并且这个原子性是由信号量模型的实现方保证的。在Java SDK里面，信号量模型是由java.util.concurrent.Semaphore实现的，Semaphore这个类能够保证这三个方法都是原子操作。</p><p>如果你觉得上面的描述有点绕的话，可以参考下面这个代码化的信号量模型。</p><pre><code>class Semaphore{\n  // 计数器\n  int count;\n  // 等待队列\n  Queue queue;\n  // 初始化操作\n  Semaphore(int c){\n    this.count=c;\n  }\n  // \n  void down(){\n    this.count--;\n    if(this.count&lt;0){\n      //将当前线程插入等待队列\n      //阻塞当前线程\n    }\n  }\n  void up(){\n    this.count++;\n    if(this.count&lt;=0) {\n      //移除等待队列中的某个线程T\n      //唤醒线程T\n    }\n  }\n}\n</code></pre><p>这里再插一句，信号量模型里面，down()、up()这两个操作历史上最早称为P操作和V操作，所以信号量模型也被称为PV原语。另外，还有些人喜欢用semWait()和semSignal()来称呼它们，虽然叫法不同，但是语义都是相同的。在Java SDK并发包里，down()和up()对应的则是acquire()和release()。</p><h2>如何使用信号量</h2><p>通过上文，你应该会发现信号量的模型还是很简单的，那具体该如何使用呢？其实你想想红绿灯就可以了。十字路口的红绿灯可以控制交通，得益于它的一个关键规则：车辆在通过路口前必须先检查是否是绿灯，只有绿灯才能通行。这个规则和我们前面提到的锁规则是不是很类似？</p><p>其实，信号量的使用也是类似的。这里我们还是用累加器的例子来说明信号量的使用吧。在累加器的例子里面，count+=1操作是个临界区，只允许一个线程执行，也就是说要保证互斥。那这种情况用信号量怎么控制呢？</p><p>其实很简单，就像我们用互斥锁一样，只需要在进入临界区之前执行一下down()操作，退出临界区之前执行一下up()操作就可以了。下面是Java代码的示例，acquire()就是信号量里的down()操作，release()就是信号量里的up()操作。</p><pre><code>static int count;\n//初始化信号量\nstatic final Semaphore s \n    = new Semaphore(1);\n//用信号量保证互斥    \nstatic void addOne() {\n  s.acquire();\n  try {\n    count+=1;\n  } finally {\n    s.release();\n  }\n}\n</code></pre><p>下面我们再来分析一下，信号量是如何保证互斥的。假设两个线程T1和T2同时访问addOne()方法，当它们同时调用acquire()的时候，由于acquire()是一个原子操作，所以只能有一个线程（假设T1）把信号量里的计数器减为0，另外一个线程（T2）则是将计数器减为-1。对于线程T1，信号量里面的计数器的值是0，大于等于0，所以线程T1会继续执行；对于线程T2，信号量里面的计数器的值是-1，小于0，按照信号量模型里对down()操作的描述，线程T2将被阻塞。所以此时只有线程T1会进入临界区执行<code>count+=1；</code>。</p><p>当线程T1执行release()操作，也就是up()操作的时候，信号量里计数器的值是-1，加1之后的值是0，小于等于0，按照信号量模型里对up()操作的描述，此时等待队列中的T2将会被唤醒。于是T2在T1执行完临界区代码之后才获得了进入临界区执行的机会，从而保证了互斥性。</p><h2>快速实现一个限流器</h2><p>上面的例子，我们用信号量实现了一个最简单的互斥锁功能。估计你会觉得奇怪，既然有Java SDK里面提供了Lock，为啥还要提供一个Semaphore ？其实实现一个互斥锁，仅仅是 Semaphore的部分功能，Semaphore还有一个功能是Lock不容易实现的，那就是：<strong>Semaphore可以允许多个线程访问一个临界区</strong>。</p><p>现实中还有这种需求？有的。比较常见的需求就是我们工作中遇到的各种池化资源，例如连接池、对象池、线程池等等。其中，你可能最熟悉数据库连接池，在同一时刻，一定是允许多个线程同时使用连接池的，当然，每个连接在被释放前，是不允许其他线程使用的。</p><p>其实前不久，我在工作中也遇到了一个对象池的需求。所谓对象池呢，指的是一次性创建出N个对象，之后所有的线程重复利用这N个对象，当然对象在被释放前，也是不允许其他线程使用的。对象池，可以用List保存实例对象，这个很简单。但关键是限流器的设计，这里的限流，指的是不允许多于N个线程同时进入临界区。那如何快速实现一个这样的限流器呢？这种场景，我立刻就想到了信号量的解决方案。</p><p>信号量的计数器，在上面的例子中，我们设置成了1，这个1表示只允许一个线程进入临界区，但如果我们把计数器的值设置成对象池里对象的个数N，就能完美解决对象池的限流问题了。下面就是对象池的示例代码。</p><pre><code>class ObjPool&lt;T, R&gt; {\n  final List&lt;T&gt; pool;\n  // 用信号量实现限流器\n  final Semaphore sem;\n  // 构造函数\n  ObjPool(int size, T t){\n    pool = new Vector&lt;T&gt;(){};\n    for(int i=0; i&lt;size; i++){\n      pool.add(t);\n    }\n    sem = new Semaphore(size);\n  }\n  // 利用对象池的对象，调用func\n  R exec(Function&lt;T,R&gt; func) {\n    T t = null;\n    sem.acquire();\n    try {\n      t = pool.remove(0);\n      return func.apply(t);\n    } finally {\n      pool.add(t);\n      sem.release();\n    }\n  }\n}\n// 创建对象池\nObjPool&lt;Long, String&gt; pool = \n  new ObjPool&lt;Long, String&gt;(10, 2);\n// 通过对象池获取t，之后执行  \npool.exec(t -&gt; {\n    System.out.println(t);\n    return t.toString();\n});\n</code></pre><p>我们用一个List<t>来保存对象实例，用Semaphore实现限流器。关键的代码是ObjPool里面的exec()方法，这个方法里面实现了限流的功能。在这个方法里面，我们首先调用acquire()方法（与之匹配的是在finally里面调用release()方法），假设对象池的大小是10，信号量的计数器初始化为10，那么前10个线程调用acquire()方法，都能继续执行，相当于通过了信号灯，而其他线程则会阻塞在acquire()方法上。对于通过信号灯的线程，我们为每个线程分配了一个对象 t（这个分配工作是通过pool.remove(0)实现的），分配完之后会执行一个回调函数func，而函数的参数正是前面分配的对象 t ；执行完回调函数之后，它们就会释放对象（这个释放工作是通过pool.add(t)实现的），同时调用release()方法来更新信号量的计数器。如果此时信号量里计数器的值小于等于0，那么说明有线程在等待，此时会自动唤醒等待的线程。</t></p><p>简言之，使用信号量，我们可以轻松地实现一个限流器，使用起来还是非常简单的。</p><h2>总结</h2><p>信号量在Java语言里面名气并不算大，但是在其他语言里却是很有知名度的。Java在并发编程领域走的很快，重点支持的还是管程模型。 管程模型理论上解决了信号量模型的一些不足，主要体现在易用性和工程化方面，例如用信号量解决我们曾经提到过的阻塞队列问题，就比管程模型麻烦很多，你如果感兴趣，可以课下了解和尝试一下。</p><h2>课后思考</h2><p>在上面对象池的例子中，对象保存在了Vector中，Vector是Java提供的线程安全的容器，如果我们把Vector换成ArrayList，是否可以呢？</p><p>欢迎在留言区与我分享你的想法，也欢迎你在留言区记录你的思考过程。感谢阅读，如果你觉得这篇文章对你有帮助的话，也欢迎把它分享给更多的朋友。</p><p></p>","neighbors":{"left":{"article_title":"15 | Lock和Condition（下）：Dubbo如何用管程实现异步转同步？","id":88487},"right":{"article_title":"17 | ReadWriteLock：如何快速实现一个完备的缓存？","id":88909}},"comments":[{"had_liked":false,"id":82933,"user_name":"CCC","can_delete":false,"product_type":"c1","uid":1003738,"ip_address":"","ucode":"2E254444098267","user_header":"https://static001.geekbang.org/account/avatar/00/0f/50/da/ed4803cb.jpg","comment_is_top":false,"comment_ctime":1554351127,"is_pvip":false,"replies":[{"id":"29978","content":"👍👍👍<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1554379878,"ip_address":"","comment_id":82933,"utype":1}],"discussion_count":7,"race_medal":0,"score":"1075296175127","product_id":100023901,"comment_content":"我理解的和管程相比，信号量可以实现的独特功能就是同时允许多个线程进入临界区，但是信号量不能做的就是同时唤醒多个线程去争抢锁，只能唤醒一个阻塞中的线程，而且信号量模型是没有Condition的概念的，即阻塞线程被醒了直接就运行了而不会去检查此时临界条件是否已经不满足了，基于此考虑信号量模型才会设计出只能让一个线程被唤醒，否则就会出现因为缺少Condition检查而带来的线程安全问题。正因为缺失了Condition，所以用信号量来实现阻塞队列就很麻烦，因为要自己实现类似Condition的逻辑。","like_count":251,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445784,"discussion_content":"👍👍👍\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554379878,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1127046,"avatar":"https://static001.geekbang.org/account/avatar/00/11/32/86/8f339db9.jpg","nickname":"任大鲜","note":"","ucode":"8D89E7DB9A30E1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367936,"discussion_content":"这位网友说的不对。信号量本来就允许多个线程同时访问临界区。你说的同时唤醒多个线程本来就是信号量支持的多线程同时访问临界区。只能唤醒一个线程的原因是：由于计数器限制了一个萝卜一个坑，坑满了再有萝卜就得排队。你释放一个坑唤醒一个萝卜，计数器容器没变化。如果释放一个坑，唤醒多个萝卜，那醒着的萝卜就超过坑的数量了。运行线程超过了计数器的容量，这就违背了计数器的设计。","likes_number":20,"is_delete":false,"is_hidden":false,"ctime":1618498981,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2963434,"avatar":"","nickname":"Geek_94fa0e","note":"","ucode":"15BC7D4E130E80","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1127046,"avatar":"https://static001.geekbang.org/account/avatar/00/11/32/86/8f339db9.jpg","nickname":"任大鲜","note":"","ucode":"8D89E7DB9A30E1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560934,"discussion_content":"嗯 有道理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649494489,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":367936,"ip_address":""},"score":560934,"extra":""}]},{"author":{"id":2011501,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoEcoSRAWRtibKK8RHPc7XibzcyGEfDsUFOXRJWtfd2u549Qa4KpicFNpeq16IqK2KSp9rkF2hrMXDLg/132","nickname":"小小米","note":"","ucode":"D2928A29154FBD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278127,"discussion_content":"我认为这个留言说的不对，信号量模型才会设计出只能让一个线程被唤醒根本不是因为检查临界条件的事。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1591153567,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1687656,"avatar":"https://static001.geekbang.org/account/avatar/00/19/c0/68/314e8306.jpg","nickname":"威先森","note":"","ucode":"5F445C6832274B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2011501,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoEcoSRAWRtibKK8RHPc7XibzcyGEfDsUFOXRJWtfd2u549Qa4KpicFNpeq16IqK2KSp9rkF2hrMXDLg/132","nickname":"小小米","note":"","ucode":"D2928A29154FBD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":363010,"discussion_content":"是的，我同意你的看法，感觉就是针对并发做的设计的出发点不一样，管程有管程的便利处，两者感觉更像是互补的关系","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617094748,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":278127,"ip_address":""},"score":363010,"extra":""}]},{"author":{"id":1855137,"avatar":"","nickname":"Geek_e6f358","note":"","ucode":"C21E94A90258A2","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385125,"discussion_content":"信号量支持多个线程同时访问临界区，但是从设计上就不支持唤醒所有等待的线程。线程执行down后被放进队列，如果这时候唤醒所有，就会有超过计数器数量的线程继续执行，资源不够的","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1626910832,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1112490,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f9/aa/3e80212e.jpg","nickname":"龙猫","note":"","ucode":"FD726CC969EF9C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282867,"discussion_content":"大佬","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1592104960,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82822,"user_name":"老杨同志","can_delete":false,"product_type":"c1","uid":1246199,"ip_address":"","ucode":"3F334F0CFD3DE6","user_header":"https://static001.geekbang.org/account/avatar/00/13/03/f7/3a493bec.jpg","comment_is_top":false,"comment_ctime":1554335866,"is_pvip":false,"replies":[{"id":"29982","content":"👍","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1554380911,"ip_address":"","comment_id":82822,"utype":1}],"discussion_count":7,"race_medal":0,"score":"671569234042","product_id":100023901,"comment_content":"需要用线程安全的vector，因为信号量支持多个线程进入临界区，执行list的add和remove方法时可能是多线程并发执行","like_count":157,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445739,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554380911,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2329635,"avatar":"https://static001.geekbang.org/account/avatar/00/23/8c/23/f1c5bee0.jpg","nickname":"wang.yu","note":"","ucode":"CCA775784B3EB3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384356,"discussion_content":"add在构造方法里应该不会并发","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626515003,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1323667,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIgiarK8ic7vY1dzlxlG4BfXZadxbPe7OqvDI81OFTg7SyiboYsZev3iaNEINhTGyncjmI6upXyloicyhg/132","nickname":"焦焦","note":"","ucode":"0A692D804A8F47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2329635,"avatar":"https://static001.geekbang.org/account/avatar/00/23/8c/23/f1c5bee0.jpg","nickname":"wang.yu","note":"","ucode":"CCA775784B3EB3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582527,"discussion_content":"信号量支持多个线程进入临界区，所以有可能并发，导致list里面线程数量和信号量计数器对不上","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659491981,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":384356,"ip_address":"北京"},"score":582527,"extra":""}]},{"author":{"id":1284820,"avatar":"https://static001.geekbang.org/account/avatar/00/13/9a/d4/8632497b.jpg","nickname":"沙可","note":"","ucode":"1498D221133DD8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350271,"discussion_content":"如果对象池容量是1，那么用list是否也不会有线程安全问题呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613791203,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2568744,"avatar":"https://static001.geekbang.org/account/avatar/00/27/32/28/078ec46c.jpg","nickname":"top啦它","note":"","ucode":"1F2656293D1B9F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1284820,"avatar":"https://static001.geekbang.org/account/avatar/00/13/9a/d4/8632497b.jpg","nickname":"沙可","note":"","ucode":"1498D221133DD8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555007,"discussion_content":"我觉得不会","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646720026,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":350271,"ip_address":""},"score":555007,"extra":""}]},{"author":{"id":1213078,"avatar":"https://static001.geekbang.org/account/avatar/00/12/82/96/aa795685.jpg","nickname":"mghio","note":"","ucode":"74883EDE4FD0DC","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":281647,"discussion_content":"正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591783950,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1041534,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoEb4oys1R20cc9FfpZsVEt04Dias86A30LUNWM8lPyBahKaMRISNB854hhXRjoohCIIwX1sO86zfA/132","nickname":"0909","note":"","ucode":"56BAF3C6FBF200","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":94715,"discussion_content":"厉害","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576982898,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":83071,"user_name":"任大鹏","can_delete":false,"product_type":"c1","uid":1069049,"ip_address":"","ucode":"75D14B0FC68DA5","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/f9/1f0a9665.jpg","comment_is_top":false,"comment_ctime":1554392857,"is_pvip":false,"replies":[{"id":"30002","content":"对👍👍👍<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1554430227,"ip_address":"","comment_id":83071,"utype":1}],"discussion_count":2,"race_medal":0,"score":"229187659545","product_id":100023901,"comment_content":"有同学认为up()中的判断条件应该&gt;=0，我觉得有可能理解为生产者-消费者模式中的生产者了。可以这么想，&gt;0就意味着没有阻塞的线程了，所以只有&lt;=0的情况才需要唤醒一个等待的线程。其实down()和up()是成对出现的，并且是先调用down()获得锁，处理完成再调用up()释放锁，如果信号量初始值为1，应该是不会出现&gt;0的情况的，除非故意调先用up()，这也失去了信号量本身的意义了。不知道我理解的对不对。","like_count":53,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445846,"discussion_content":"对👍👍👍\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554430227,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2963434,"avatar":"","nickname":"Geek_94fa0e","note":"","ucode":"15BC7D4E130E80","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560936,"discussion_content":"down()是获取；  up()是归还；","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649494621,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":132207,"user_name":"Alvan","can_delete":false,"product_type":"c1","uid":1002468,"ip_address":"","ucode":"D6529DC67898BF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4b/e4/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1568042681,"is_pvip":true,"replies":[{"id":"50589","content":"👍","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1568083110,"ip_address":"","comment_id":132207,"utype":1}],"discussion_count":5,"race_medal":0,"score":"121827126969","product_id":100023901,"comment_content":"很多人对up()方法的计数器count&lt;=0不理解，可以看下这里：<br>1、反证法验证一下，假如一个线程先执行down()操作，那么此时count的值是0，接着这个线程执行up()操作，此时count的值是1，如果count应该是大于等于0，那么应该唤醒其他线程，可是此时并没有线程在睡眠呀，count的值不应该是大于等于0。<br>2、假如一个线程t1执行down()操作，此时count = 0，然后t1被中断，另外的线程t2执行down()操作，此时count=-1，t2阻塞睡眠，另外的线程t3执行down()操作，count=-2，t3也睡眠。count=-2 说明有两个线程在睡眠，接着t1执行up() 操作，此时count=-1，小于等于0，唤醒t2或者t3其中一个线程，假如计数器count是大于等于0才唤醒其他线程，这明显是不对的。","like_count":28,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466819,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568083110,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2051293,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/4c/dd/c6035349.jpg","nickname":"Bumblebee","note":"","ucode":"B879C8A511D08D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560319,"discussion_content":"⛳️","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649257500,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2144474,"avatar":"https://static001.geekbang.org/account/avatar/00/20/b8/da/42284f64.jpg","nickname":"张知信","note":"","ucode":"7C896BB3214B3D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329276,"discussion_content":"这样还可以算出来阻塞的线程数目，当count<=0的时候，阻塞线程的数目就是abs(count)+1了，信号量设计真是很巧妙。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606358680,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1653218,"avatar":"https://static001.geekbang.org/account/avatar/00/19/39/e2/633f8b70.jpg","nickname":"恒星","note":"","ucode":"F6902B0291FCFC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2144474,"avatar":"https://static001.geekbang.org/account/avatar/00/20/b8/da/42284f64.jpg","nickname":"张知信","note":"","ucode":"7C896BB3214B3D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542824,"discussion_content":"不需要加1吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640854808,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":329276,"ip_address":""},"score":542824,"extra":""}]},{"author":{"id":1018620,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8a/fc/d1dd57dd.jpg","nickname":"ipofss","note":"","ucode":"DE3061C9259F9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":29320,"discussion_content":"我似懂非懂了，再仔细琢磨一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570761599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82918,"user_name":"shawn","can_delete":false,"product_type":"c1","uid":1101483,"ip_address":"","ucode":"9AF400BBF2E264","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/ab/e9d7811f.jpg","comment_is_top":false,"comment_ctime":1554348780,"is_pvip":true,"discussion_count":3,"race_medal":0,"score":"100338596588","product_id":100023901,"comment_content":"老师能否把课程所有的完整代码放到github上，这样我们学起来更方便。包括全面几章的也发下，因为有时候根据您的代码，我没法运行","like_count":23,"discussions":[{"author":{"id":1445797,"avatar":"https://static001.geekbang.org/account/avatar/00/16/0f/a5/4a68b68b.jpg","nickname":"我对钢琴前奏没抗体","note":"","ucode":"0E6731E91BD6F7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":279783,"discussion_content":"伪代码你也要运行？","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1591415514,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1689144,"avatar":"https://static001.geekbang.org/account/avatar/00/19/c6/38/b41dc894.jpg","nickname":"马半仙","note":"","ucode":"14868A55469A76","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":406523,"discussion_content":"伪代码给你一个思路，可以自己尝试一下实现，感觉印象会更深刻呢！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1634784848,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1812970,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/a9/ea/5bfce6c5.jpg","nickname":"mgs2002","note":"","ucode":"F5931108BD509B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278925,"discussion_content":"确实，能放上去就好了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1591258810,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":83047,"user_name":"木卫六","can_delete":false,"product_type":"c1","uid":1199495,"ip_address":"","ucode":"D113DF578C5BF5","user_header":"https://static001.geekbang.org/account/avatar/00/12/4d/87/57236a2d.jpg","comment_is_top":false,"comment_ctime":1554383862,"is_pvip":true,"replies":[{"id":"29984","content":"是的，感谢回复的这么详细！！！","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1554392383,"ip_address":"","comment_id":83047,"utype":1}],"discussion_count":3,"race_medal":0,"score":"91748697078","product_id":100023901,"comment_content":"换ArrayList是不行的，临界区内可能存在多个线程来执行remove操作，出现不可预知的后果。<br><br>对于chaos同学说return之前释放的问题，我觉得可以这么理解：return的是执行后的结果，而不是“执行”。所以顺序应该是这样的：1acquire；2apply；3finally release；4return2的结果","like_count":21,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445835,"discussion_content":"是的，感谢回复的这么详细！！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554392383,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1100644,"avatar":"https://static001.geekbang.org/account/avatar/00/10/cb/64/4afad7da.jpg","nickname":"欣","note":"","ucode":"35658943C6F20F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546019,"discussion_content":"执行顺序应该是这样的：1acquire；2apply；3return2的结果压入操作栈中；4finally release；\n可以查看字节码进行验证。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642130540,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1323652,"avatar":"","nickname":"sibyl","note":"","ucode":"0D142011860D69","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289765,"discussion_content":"mask","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594205299,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":83390,"user_name":"缪文","can_delete":false,"product_type":"c1","uid":1042262,"ip_address":"","ucode":"59603B50EF5FC6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e7/56/c72997f3.jpg","comment_is_top":false,"comment_ctime":1554554126,"is_pvip":false,"replies":[{"id":"30127","content":"后面会介绍guava的限流器","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1554560705,"ip_address":"","comment_id":83390,"utype":1}],"discussion_count":1,"race_medal":0,"score":"65979063566","product_id":100023901,"comment_content":"这个限流器实际上限的是并发量，也就是同时允许多少个请求通过，如果限制每秒请求数，不是这个实现的吧","like_count":15,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446003,"discussion_content":"后面会介绍guava的限流器","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554560705,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134970,"user_name":"刘彦辉","can_delete":false,"product_type":"c1","uid":1115468,"ip_address":"","ucode":"FC9AA4FA78DFDA","user_header":"https://static001.geekbang.org/account/avatar/00/11/05/4c/558b0012.jpg","comment_is_top":false,"comment_ctime":1568964864,"is_pvip":false,"replies":[{"id":"51817","content":"唤醒后直接执行业务代码，在哪里阻塞，唤醒后就在哪里继续执行","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1568981736,"ip_address":"","comment_id":134970,"utype":1}],"discussion_count":3,"race_medal":0,"score":"44518637824","product_id":100023901,"comment_content":"假如有3个线程，线程A、B、C，信号量计数器为1，线程A执行down的时候变为0，不阻塞；线程B执行down，变为-1，阻塞；线程C执行down变为-2，阻塞。当线程A执行完，调用up后，变为-1，此时唤醒一个线程，那么请问唤醒之后的操作呢？唤醒之后直接就执行了业务代码了？还是唤醒之后还需要去先执行down？按分析的话应该不能执行down了，如果执行down的话，计数器变为-2，还会阻塞，所以是不是这块儿的阻塞和唤醒也是用的wait和notify呢？唤醒之后，从阻塞的代码开始继续执行，这样就可以成功执行下去了。麻烦老师解答一下哈，谢谢。","like_count":10,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467983,"discussion_content":"唤醒后直接执行业务代码，在哪里阻塞，唤醒后就在哪里继续执行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568981736,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1386371,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/NKKKlrmVDex70MuicAPLIQ4CVksVR1FvUrcvtJXq941iaichBDbYq3ViaXNYYWGtdo1JfRSLPvosEoL7h4QBmJ63UA/132","nickname":"jspkl","note":"","ucode":"E1527B0A24FC9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374667,"discussion_content":"我也一直没想通这里，以为阻塞的线程唤醒后还会继续判断计数器的值，这样当大量线程涌进来的时候，当计数器小于0后，后续的线程永远会被阻塞在这了。看了老师的回复后，唤醒后的线程不再判断计数器，就想通了！！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1621307428,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2697700,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/LFJZ4x47rvShGhsePLIxc8EzdlBxAmVAIjJ2FQZ4NEpo8E4JCZQEOb2NIfOuiaQLL6Otkt7W3Rmu6Tv3AkgYdRA/132","nickname":"键盘上的魔术","note":"","ucode":"A731D721FB8D3A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557167,"discussion_content":"和wait()，notify()没关系， 线程阻塞后再唤醒，都是从之前执行到的地方继续执行下去。 刚才if判断过了，后面不会再判断了。 管程模型里用while()则是还要再判断下，但本质也是从刚才阻塞后的代码继续执行。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647680593,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82867,"user_name":"crazypokerk","can_delete":false,"product_type":"c1","uid":1158383,"ip_address":"","ucode":"9AAD5D9726E503","user_header":"https://static001.geekbang.org/account/avatar/00/11/ac/ef/494f56c3.jpg","comment_is_top":false,"comment_ctime":1554341317,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"40209046981","product_id":100023901,"comment_content":"文中，up()：计数器的值加 1；如果此时计数器的值小于或者等于0，这句话应该是大于等于0吧<br>","like_count":9,"discussions":[{"author":{"id":1138016,"avatar":"https://static001.geekbang.org/account/avatar/00/11/5d/60/38ea52c5.jpg","nickname":"Bright丶","note":"","ucode":"B1DEA8C8100538","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2204,"discussion_content":"是小于或者等于0，理论上，负多少就有多少线程在等待，如果大于0意味着没有线程等待，通知也就没有了意义","likes_number":14,"is_delete":false,"is_hidden":false,"ctime":1563353219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2330905,"avatar":"https://static001.geekbang.org/account/avatar/00/23/91/19/6a3e7efc.jpg","nickname":"程序员9527","note":"","ucode":"1A1609F6BEAD84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380756,"discussion_content":"假如有105辆车，此时信号量（init()方法）设置count = 100，只能同时经过100辆，此时前面100辆车依次调用down()，一直到第101辆车时，count = -1 ，小于0了，后面的5辆车被阻塞，这5辆车是在等待的，此时这count = -5，代表还有5辆车在等待，过去的车子再调用up()，唤醒在等待的5辆车。\n假如count> 0 ,说明此时可能并没有同时经过100辆车，可能同时经过的是99辆，代表后面已经没有车在等了","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1624688928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82863,"user_name":"crazypokerk","can_delete":false,"product_type":"c1","uid":1158383,"ip_address":"","ucode":"9AAD5D9726E503","user_header":"https://static001.geekbang.org/account/avatar/00/11/ac/ef/494f56c3.jpg","comment_is_top":false,"comment_ctime":1554340696,"is_pvip":false,"replies":[{"id":"30005","content":"异常都被我省略了，这样代码更能专注的表达问题，如果你本地实验，加上就可以了。手机屏幕太小，折行后行数太多，看到后面忘了前面，所以我尽讲精炼代码<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1554431608,"ip_address":"","comment_id":82863,"utype":1}],"discussion_count":4,"race_medal":0,"score":"35914079064","product_id":100023901,"comment_content":"老师，那个计数器中得s.acquire()是需要捕获异常的。<br>static int count;<br>    static final Semaphore s = new Semaphore(1);<br><br>    static void addOne() throws InterruptedException {<br>        s.acquire();<br>        try {<br>            count += 1;<br>        }finally {<br>            s.release();<br>        }<br>    }","like_count":8,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445752,"discussion_content":"异常都被我省略了，这样代码更能专注的表达问题，如果你本地实验，加上就可以了。手机屏幕太小，折行后行数太多，看到后面忘了前面，所以我尽讲精炼代码\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554431608,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1440772,"avatar":"https://static001.geekbang.org/account/avatar/00/15/fc/04/d83a555e.jpg","nickname":"Kevin⚡️Zhou","note":"","ucode":"C0FC2673705212","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":189058,"discussion_content":"请问count+=1为什么需要try block?\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582851145,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2617045,"avatar":"https://static001.geekbang.org/account/avatar/00/27/ee/d5/95e193c9.jpg","nickname":"司马裆 · 霍玛伊","note":"","ucode":"FC5BCB8165EA4E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1440772,"avatar":"https://static001.geekbang.org/account/avatar/00/15/fc/04/d83a555e.jpg","nickname":"Kevin⚡️Zhou","note":"","ucode":"C0FC2673705212","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376893,"discussion_content":"怕整型溢出吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622395033,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":189058,"ip_address":""},"score":376893,"extra":""},{"author":{"id":2697700,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/LFJZ4x47rvShGhsePLIxc8EzdlBxAmVAIjJ2FQZ4NEpo8E4JCZQEOb2NIfOuiaQLL6Otkt7W3Rmu6Tv3AkgYdRA/132","nickname":"键盘上的魔术","note":"","ucode":"A731D721FB8D3A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1440772,"avatar":"https://static001.geekbang.org/account/avatar/00/15/fc/04/d83a555e.jpg","nickname":"Kevin⚡️Zhou","note":"","ucode":"C0FC2673705212","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557168,"discussion_content":"加锁代码的范式，习惯问题，保证finally里可以释放锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647680718,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":189058,"ip_address":""},"score":557168,"extra":""}]}]},{"had_liked":false,"id":83896,"user_name":"ken","can_delete":false,"product_type":"c1","uid":1048245,"ip_address":"","ucode":"A43E42B541624D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fe/b5/df0f658f.jpg","comment_is_top":false,"comment_ctime":1554730571,"is_pvip":false,"replies":[{"id":"30311","content":"👍","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1554772822,"ip_address":"","comment_id":83896,"utype":1}],"discussion_count":2,"race_medal":0,"score":"31619501643","product_id":100023901,"comment_content":"<br>public class Food {<br><br>    public String name;<br><br>    private long warmTime;<br><br>    public Food(String name, long warmTime) {<br>        this.name = name;<br>        this.warmTime = warmTime;<br>    }<br><br>    public String getName() {<br>        return name;<br>    }<br><br>    public long getWarmTime() {<br>        return warmTime;<br>    }<br>}<br><br><br><br>public class MicrowaveOven {<br><br>    public String name;<br><br>    public MicrowaveOven(String name) {<br>        this.name = name;<br>    }<br><br>    public Food warm(Food food) {<br>        long second = food.getWarmTime() * 1000;<br>        try {<br>            Thread.sleep(second);<br>        } catch (InterruptedException e) {<br>            e.printStackTrace();<br>        }<br><br>        System.out.println(String.format(&quot;%s warm %s %d seconds food.&quot;, name,food.getName() ,food.getWarmTime()));<br>        return food;<br>    }<br><br>    public String getName() {<br>        return name;<br>    }<br>}<br>public class MicrowaveOvenPool {<br><br>    private List&lt;MicrowaveOven&gt; microwaveOvens;<br><br>    private Semaphore semaphore;<br><br>    public MicrowaveOvenPool(int size,@NotNull List&lt;MicrowaveOven&gt; microwaveOvens) {<br>        this.microwaveOvens = new Vector&lt;&gt;(microwaveOvens);<br>        this.semaphore = new Semaphore(size);<br>    }<br>    public Food exec(Function&lt;MicrowaveOven, Food&gt; func) {<br>        MicrowaveOven microwaveOven = null;<br>        try{<br>            semaphore.acquire();<br>            microwaveOven = microwaveOvens.remove(0);<br>            return func.apply(microwaveOven);<br>        }catch (InterruptedException e) {<br>            e.printStackTrace();<br>        } finally {<br>            microwaveOvens.add(microwaveOven);<br>            semaphore.release();<br>        }<br>        return null;<br>    }<br><br>}<br>","like_count":7,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446175,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554772822,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2349472,"avatar":"","nickname":"呆呆","note":"","ucode":"8DB23A69E063F7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343014,"discussion_content":"你好，代码中加热逻辑的sleep难道不会让出cpu给其他资源嘛？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610908260,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":84217,"user_name":"长眉_张永","can_delete":false,"product_type":"c1","uid":1442279,"ip_address":"","ucode":"B3DCA68BDD473E","user_header":"https://static001.geekbang.org/account/avatar/00/16/01/e7/091804b7.jpg","comment_is_top":false,"comment_ctime":1554806826,"is_pvip":false,"replies":[{"id":"30392","content":"需要","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1554819893,"ip_address":"","comment_id":84217,"utype":1}],"discussion_count":2,"race_medal":0,"score":"27324610602","product_id":100023901,"comment_content":"对于进入的多个线程资源之间，如果有公用的信息的话，是否还需要加锁操作呢？","like_count":6,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446282,"discussion_content":"需要","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554819893,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2697700,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/LFJZ4x47rvShGhsePLIxc8EzdlBxAmVAIjJ2FQZ4NEpo8E4JCZQEOb2NIfOuiaQLL6Otkt7W3Rmu6Tv3AkgYdRA/132","nickname":"键盘上的魔术","note":"","ucode":"A731D721FB8D3A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557166,"discussion_content":"这就是为什么要用Vector而不是ArrayList的原因","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647680181,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111092,"user_name":"倚梦流","can_delete":false,"product_type":"c1","uid":1435045,"ip_address":"","ucode":"7CB442D629534B","user_header":"https://static001.geekbang.org/account/avatar/00/15/e5/a5/fae40ac3.jpg","comment_is_top":false,"comment_ctime":1562470323,"is_pvip":false,"replies":[{"id":"40419","content":"👍","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1562478618,"ip_address":"","comment_id":111092,"utype":1}],"discussion_count":4,"race_medal":0,"score":"23037306803","product_id":100023901,"comment_content":"限流器，基于老师的代码，自己手动完善了一下。<br>package com.thread.demo;<br><br>import java.util.List;<br>import java.util.Vector;<br>import java.util.concurrent.Semaphore;<br>import java.util.function.Function;<br><br>public class ObjPool&lt;T,R&gt; {<br>    private List&lt;T&gt; pool;<br>    &#47;&#47;使用信号量实现限流器<br>    private final Semaphore semaphore;<br><br><br>    ObjPool(T[] tArray){<br>        pool=new Vector&lt;T&gt;(){};<br>        int size=tArray.length;<br>        for(int i=0;i&lt;size;i++){<br>            pool.add(tArray[i]);<br>        }<br>        semaphore=new Semaphore(size);<br>    }<br><br>    R exec(Function&lt;T,R&gt; func) throws InterruptedException {<br>        T t=null;<br>        semaphore.acquire();<br>        try{<br>            t=pool.remove(0);<br>            return func.apply(t);<br>        }finally {<br>            pool.add(t);<br>            semaphore.release();<br>        }<br>    }<br><br>    public static void main(String[] args){<br>        String[] messages=new String[10];<br>        for(int i=0;i&lt;10;i++){<br>            messages[i]=&quot;obj_&quot;+i;<br>        }<br>        ObjPool&lt;String,String&gt; pool=new ObjPool&lt;&gt;(messages );<br><br>        for(int i=0;i&lt;100;i++){<br>            Thread thread=new Thread(() -&gt;{<br>                try {<br>                    pool.exec(t -&gt; {<br>                        System.out.println(&quot;当前线程id:&quot;+Thread.currentThread().getId()+&quot;,当前获取到的对象：&quot;+t);<br>                        return  t;<br>                    });<br>                } catch (InterruptedException e) {<br>                    e.printStackTrace();<br>                }<br>            });<br>            thread.start();<br>            try {<br>                thread.join();<br>            } catch (InterruptedException e) {<br>                e.printStackTrace();<br>            }<br>        }<br><br>    }<br><br><br>}<br>","like_count":5,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457224,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562478618,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1934694,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/waRzibso0x6xML85EqngrIiasYzItRsZkkz8ZLqdciadFmSMiaia12MGQMBBliahMBTR5sEjVL0dvibMsJXdsuAYIicKXA/132","nickname":"颜杰","note":"","ucode":"C5EDBC1AA62CCF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575781,"discussion_content":" thread.join();有点问题啊，同一时间只会有一个线程去执行。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655106585,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1618328,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b1/98/11b22d79.jpg","nickname":"絆","note":"","ucode":"52D965461314DB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369784,"discussion_content":"测试方法加深理解，👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619155986,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1030449,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b9/31/636e9007.jpg","nickname":"melo","note":"","ucode":"BF381B18E75867","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285029,"discussion_content":"thread.join();可以用CountDownLatch(n)代替","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592717728,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95441,"user_name":"Mr Q.","can_delete":false,"product_type":"c1","uid":1330435,"ip_address":"","ucode":"A9BED15092B769","user_header":"https://static001.geekbang.org/account/avatar/00/14/4d/03/01c5de8f.jpg","comment_is_top":false,"comment_ctime":1558056659,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23032893139","product_id":100023901,"comment_content":"创建对象池的时候都是添加的同一个对象。","like_count":5},{"had_liked":false,"id":82820,"user_name":"小和尚笨南北","can_delete":false,"product_type":"c1","uid":1204628,"ip_address":"","ucode":"17C9BBB6DD25D2","user_header":"https://static001.geekbang.org/account/avatar/00/12/61/94/713b38ef.jpg","comment_is_top":false,"comment_ctime":1554335683,"is_pvip":false,"replies":[{"id":"30074","content":"不可以，有多个线程进入临界区","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1554479430,"ip_address":"","comment_id":82820,"utype":1}],"discussion_count":4,"race_medal":0,"score":"23029172163","product_id":100023901,"comment_content":"semaphore底层通过AQS实现，AQS内部通过一个volatile变量间接实现同步。<br>根据happen-before原则的volatile规则和传递性规则。使用arraylist也不会发生线程安全问题。","like_count":5,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445737,"discussion_content":"不可以，有多个线程进入临界区","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554479430,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1441569,"avatar":"https://static001.geekbang.org/account/avatar/00/15/ff/21/8815d2e5.jpg","nickname":"亮子","note":"","ucode":"DF37D5E0714D02","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543978,"discussion_content":"list有add  remove操作，不用线程安全的不可以。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641371900,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2046055,"avatar":"","nickname":"杜总","note":"","ucode":"C6600875A265E7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":286982,"discussion_content":"一定要使用线程安全的list啊，ArrayList,LinkedList都是不安全的，semaphore只是一个限流器，是共享锁，多个线程会执行remove操作，那就有我问题了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593340507,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2308075,"avatar":"","nickname":"Geek_89e362","note":"","ucode":"E596C2CFE1CFAF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2046055,"avatar":"","nickname":"杜总","note":"","ucode":"C6600875A265E7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327120,"discussion_content":"不是不可用，如果使用 ArrayList或者LinkedList应该是需要加锁处理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605750240,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":286982,"ip_address":""},"score":327120,"extra":""}]}]},{"had_liked":false,"id":84201,"user_name":"木偶人King","can_delete":false,"product_type":"c1","uid":1028805,"ip_address":"","ucode":"0BDCA51E6F0B76","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b2/c5/6ae0be56.jpg","comment_is_top":false,"comment_ctime":1554802541,"is_pvip":false,"replies":[{"id":"30401","content":"实际项目中一定是不同的","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1554821785,"ip_address":"","comment_id":84201,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18734671725","product_id":100023901,"comment_content":"ObjPool(int size, T t){<br>    pool = new Vector&lt;T&gt;(){};<br>    for(int i=0; i&lt;size; i++){<br>      pool.add(t);<br>    }<br>    sem = new Semaphore(size);<br>  }<br> &#47;&#47;--------------------------------<br><br>老师这里pool.add(t)  一直循环添加的是同一个引用对象。没太明白。 为什么不是添加不同的t ","like_count":4,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446278,"discussion_content":"实际项目中一定是不同的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554821785,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82858,"user_name":"master","can_delete":false,"product_type":"c1","uid":1245550,"ip_address":"","ucode":"E525135E4C7639","user_header":"https://static001.geekbang.org/account/avatar/00/13/01/6e/a217a0f6.jpg","comment_is_top":false,"comment_ctime":1554340100,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"18734209284","product_id":100023901,"comment_content":"老师，void  up()方法中的this.count判断条件是否应该为&gt;=0","like_count":4,"discussions":[{"author":{"id":1319732,"avatar":"https://static001.geekbang.org/account/avatar/00/14/23/34/3c6ed163.jpg","nickname":"lacan","note":"","ucode":"9DA87E3D69B45E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":143448,"discussion_content":"半路出家之前也有疑问, 网上搜一下就明白了, 百度 `Semaphore down up`","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579507711,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":83317,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1119593,"ip_address":"","ucode":"94656FE4A6C378","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","comment_is_top":false,"comment_ctime":1554531381,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"14439433269","product_id":100023901,"comment_content":"不可以，临界区会有多个线程并发执行","like_count":3},{"had_liked":false,"id":83218,"user_name":"QQ怪","can_delete":false,"product_type":"c1","uid":1211223,"ip_address":"","ucode":"1A39B8433D9208","user_header":"https://static001.geekbang.org/account/avatar/00/12/7b/57/a9b04544.jpg","comment_is_top":false,"comment_ctime":1554470793,"is_pvip":false,"replies":[{"id":"30069","content":"如果仅仅是为了互斥，都可以。","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1554479076,"ip_address":"","comment_id":83218,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14439372681","product_id":100023901,"comment_content":"用初始化为1的Semaphore和管程来单单控制线程安全，哪个更有优势？为啥java不直接用信号量来实现互斥?","like_count":3,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445923,"discussion_content":"如果仅仅是为了互斥，都可以。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554479076,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1580837,"avatar":"https://static001.geekbang.org/account/avatar/00/18/1f/25/6e913101.jpg","nickname":"楠爸","note":"","ucode":"2D4DDB32E9C4E9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":184942,"discussion_content":"应该不能用list吧，多个线程会同时执行吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582589831,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":83066,"user_name":"Presley","can_delete":false,"product_type":"c1","uid":1215219,"ip_address":"","ucode":"D8F125835F4903","user_header":"https://static001.geekbang.org/account/avatar/00/12/8a/f3/7c89d00e.jpg","comment_is_top":false,"comment_ctime":1554390608,"is_pvip":false,"replies":[{"id":"30006","content":"👍👍","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1554431652,"ip_address":"","comment_id":83066,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14439292496","product_id":100023901,"comment_content":"进入临界区的N个线程不安全。add&#47;remove都是不安全的。拿remove举例, ArrayList remove()源码：<br>public E remove(int index) {<br>        rangeCheck(index);<br><br>        modCount++;<br>       <br>        &#47;&#47; 假设连个线程 t1,t2都执行到这一步，t1 让出cpu,t2执行<br>        E oldValue = elementData(index);<br>        &#47;&#47; 到这步,t1继续执行，这时t1,t2拿到的oldValue是一样的，两个线程能拿到同一个对象，明显线程不安全啊<br><br>        int numMoved = size - index - 1;<br>        if (numMoved &gt; 0)<br>            System.arraycopy(elementData, index+1, elementData, index,<br>                             numMoved);<br>        elementData[--size] = null; &#47;&#47; clear to let GC do its work<br><br>        return oldValue;<br>    }<br>","like_count":3,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445843,"discussion_content":"👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554431652,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":158078,"user_name":"梦倚栏杆","can_delete":false,"product_type":"c1","uid":1095857,"ip_address":"","ucode":"BDEB97F2822445","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/bvj76PmeUvW8kokyu91IZWuRATKmabibDWbzAj2TajeEic7WvKCJOLaOh6jibEmdQ36EO3sBUZ0HibAiapsrZo64U8w/132","comment_is_top":false,"comment_ctime":1575326609,"is_pvip":false,"replies":[{"id":"60747","content":"不会，所以一旦发生死锁，往往只能重启","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1575463288,"ip_address":"","comment_id":158078,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10165261201","product_id":100023901,"comment_content":"如果一个线程一直在睡眠不被唤醒呢？这个线程会经过一定时间自己消亡吗？","like_count":2,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476623,"discussion_content":"不会，所以一旦发生死锁，往往只能重启","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575463288,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":83134,"user_name":"易儿易","can_delete":false,"product_type":"c1","uid":1242864,"ip_address":"","ucode":"B15D1031CA841E","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqLcWH3mSPmhjrs1aGL4b3TqI7xDqWWibM4nYFrRlp0z7FNSWaJz0mqovrgIA7ibmrPt8zRScSfRaqQ/132","comment_is_top":false,"comment_ctime":1554433169,"is_pvip":false,"replies":[{"id":"30067","content":"必须成对出现，所以才用try finally ","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1554478912,"ip_address":"","comment_id":83134,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10144367761","product_id":100023901,"comment_content":"计数器值小于0，线程会阻塞并进入队列，如果计数器值大于初始值呢？我代码测试了一下，执行起来没有什么问题，但总觉得有些不太靠谱……请问老师：信号量的使用规范是不是得要求acquire()release()必须成对出现并保证release()顺利执行？否则独立的acquire()就能使计数器值大于初始值，可能会引入BUG（导致线程数多余池中限定的数量），不过这个也有好处，貌似也可以起到动态调整semaphore初始值的作用。老师我没有并发开发经验，只是根据专栏内有限内容思考，不知道我的想法对不对，有没有实际意义。请指教~","like_count":2,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445878,"discussion_content":"必须成对出现，所以才用try finally ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554478912,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":346495,"user_name":"Bumblebee","can_delete":false,"product_type":"c1","uid":2051293,"ip_address":"","ucode":"B879C8A511D08D","user_header":"https://static001.geekbang.org/account/avatar/00/1f/4c/dd/c6035349.jpg","comment_is_top":false,"comment_ctime":1653199011,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5948166307","product_id":100023901,"comment_content":"今日总结，总结的不对的希望老师同学们多多指正。<br><br>一、信号量模型。<br>①  一个计数器；<br>②  一个等待队列；<br>③  三个方法；<br>      1）init设置计数器的初始值（相当于资源数，对应信号量）；<br>      2）down计数器的值减1，如果此时计数器的值小于0当前线程被阻塞，否则当前线程继续执行（对应PV操作中的P操作）；<br>     3）up计数器加1，如果此时计数器的值小于或等于0，则唤醒等待队列中的一个线程，并将其从等待队列中移除（对呀PV操作中的V操作）；<br><br>二、收获<br>①  信号量PV操作移动要成对出现，而且P操作一定要先与V操作，这样PV操作中的判断才不会出现计数器大于（初始值  减 1）的情况。<br>","like_count":1},{"had_liked":false,"id":286994,"user_name":"时光守护者-基兰","can_delete":false,"product_type":"c1","uid":1554995,"ip_address":"","ucode":"F0B0887B1979D2","user_header":"https://static001.geekbang.org/account/avatar/00/17/ba/33/2d83d174.jpg","comment_is_top":false,"comment_ctime":1617719597,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5912686893","product_id":100023901,"comment_content":"老师，信号量模型的Semaphore实现中您提到init()、down() 和 up() 三个方法都是原子性，那假如有多个线程同时操作Semaphore中的count，可见性是怎么保证的呢","like_count":1},{"had_liked":false,"id":264310,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1606435815,"is_pvip":false,"replies":[{"id":"95894","content":"������������","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1606492142,"ip_address":"","comment_id":264310,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5901403111","product_id":100023901,"comment_content":"思考题：<br>Vector换成ArrayList会有线程安全问题，问题出现在pool.remove()和pool.add()方法调用时。","like_count":1,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510512,"discussion_content":"������������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606492142,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1250907,"avatar":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","nickname":"Monday","note":"","ucode":"77B9BACC783598","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330286,"discussion_content":"老师的留言，乱码了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606555138,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":230115,"user_name":"西门吹牛","can_delete":false,"product_type":"c1","uid":1508990,"ip_address":"","ucode":"E5D3624DDE1E83","user_header":"https://static001.geekbang.org/account/avatar/00/17/06/7e/735968e2.jpg","comment_is_top":false,"comment_ctime":1593266671,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5888233967","product_id":100023901,"comment_content":"针对up操作小于等于0，是在加一之后判断是否小于等于0，估计很多人，都是觉得等于0，唤醒等待队列有疑问，其实等于0是从负一加过去的，既然是负一，肯定是有线程阻塞，只要是负的，必然有阻塞的线程，这里up之后加1，如果小于等于0，必然有阻塞的线程需要被唤醒","like_count":1},{"had_liked":false,"id":109416,"user_name":"古夜","can_delete":false,"product_type":"c1","uid":1341612,"ip_address":"","ucode":"0A82D3CFCEDF07","user_header":"https://static001.geekbang.org/account/avatar/00/14/78/ac/e5e6e7f3.jpg","comment_is_top":false,"comment_ctime":1562030764,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5856998060","product_id":100023901,"comment_content":"在信号量模型里，计数器和等待队列对外是透明的，所以只能通过信号量模型提供的三个方法来访问它们，这三个方法分别是：init()、down() 和 up()。<br><br>这里应该是不透明吧？","like_count":1,"discussions":[{"author":{"id":2899368,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/3d/a8/6ed7aaad.jpg","nickname":"啤酒配鸭脖","note":"","ucode":"860FC0887FF88C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549605,"discussion_content":"这里的透明应该就是不可见的意思，invisible","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644120988,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108934,"user_name":"杨鹏程baci","can_delete":false,"product_type":"c1","uid":1205949,"ip_address":"","ucode":"3D22F6B74340A8","user_header":"https://static001.geekbang.org/account/avatar/00/12/66/bd/bd5d503e.jpg","comment_is_top":false,"comment_ctime":1561939913,"is_pvip":false,"replies":[{"id":"53937","content":"实现就留给有兴趣的同学吧","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1570717907,"ip_address":"","comment_id":108934,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5856907209","product_id":100023901,"comment_content":"老师，这一节感觉有些内容没有讲全，semaphore中线程的等待唤醒机制是不是还是用到了wait和siganal方法？","like_count":1,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456172,"discussion_content":"实现就留给有兴趣的同学吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570717907,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87471,"user_name":"roaming","can_delete":false,"product_type":"c1","uid":1039232,"ip_address":"","ucode":"2736679690AB81","user_header":"https://static001.geekbang.org/account/avatar/00/0f/db/80/6b7629d7.jpg","comment_is_top":false,"comment_ctime":1555601405,"is_pvip":false,"replies":[{"id":"31471","content":"信号量模型是用它实现的，太底层的东西都不是给普通人用的<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1555633322,"ip_address":"","comment_id":87471,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5850568701","product_id":100023901,"comment_content":"老师，LockSupport用的也是信号量模型，对吗？专栏里没有提到这个工具类，是不常用吗？","like_count":1,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447469,"discussion_content":"信号量模型是用它实现的，太底层的东西都不是给普通人用的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555633322,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":84876,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1554942596,"is_pvip":false,"replies":[{"id":"30598","content":"同样感谢支持！！","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1554999609,"ip_address":"","comment_id":84876,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5849909892","product_id":100023901,"comment_content":"我只想说，真的讲的很赞！<br><br>清明节后到现在一直在忙其他的，今天早上才补了一节，真的很赞！ <br><br>谢谢老师解开了我一直以来的疑惑，谢谢您！","like_count":1,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446482,"discussion_content":"同样感谢支持！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554999609,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354969,"user_name":"顾言","can_delete":false,"product_type":"c1","uid":1184481,"ip_address":"北京","ucode":"79DDEDCADD1F49","user_header":"https://static001.geekbang.org/account/avatar/00/12/12/e1/6d0114fe.jpg","comment_is_top":false,"comment_ctime":1660920272,"is_pvip":true,"replies":[{"id":"129676","content":"后来都用管程，估计也是因为这个","user_name":"作者回复","user_name_real":"编辑","uid":"1269969","ctime":1662094454,"ip_address":"北京","comment_id":354969,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1660920272","product_id":100023901,"comment_content":"Semaphore 多于多个临界区的互斥感觉没有管程那么方便，不知道老师有没有更好的思路？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586298,"discussion_content":"后来都用管程，估计也是因为这个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662094454,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354169,"user_name":"何妨","can_delete":false,"product_type":"c1","uid":1385377,"ip_address":"北京","ucode":"EC3983BFF7992A","user_header":"https://static001.geekbang.org/account/avatar/00/15/23/a1/b08f3ee7.jpg","comment_is_top":false,"comment_ctime":1660140314,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1660140314","product_id":100023901,"comment_content":"直接 Runnable 不香吗","like_count":0},{"had_liked":false,"id":345823,"user_name":"学习学个屁","can_delete":false,"product_type":"c1","uid":1049017,"ip_address":"","ucode":"DF2D61E6FB2FCE","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/b9/73435279.jpg","comment_is_top":false,"comment_ctime":1652616987,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1652616987","product_id":100023901,"comment_content":"ArrayList 非线程安全。如用需要做同步处理。","like_count":0},{"had_liked":false,"id":343197,"user_name":"Que","can_delete":false,"product_type":"c1","uid":2971537,"ip_address":"","ucode":"0F30D90B73C5A1","user_header":"https://static001.geekbang.org/account/avatar/00/2d/57/91/89ae9614.jpg","comment_is_top":false,"comment_ctime":1650703791,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650703791","product_id":100023901,"comment_content":"这个限流器使用ReentrantReadWriteLock中的读锁，可以达到同样的效果吗？","like_count":0},{"had_liked":false,"id":320999,"user_name":"Donkey","can_delete":false,"product_type":"c1","uid":2753834,"ip_address":"","ucode":"3DB4DFF6D99035","user_header":"https://static001.geekbang.org/account/avatar/00/2a/05/2a/cfbcb0b2.jpg","comment_is_top":false,"comment_ctime":1636614597,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636614597","product_id":100023901,"comment_content":"t = pool.remove(pool.size()-1) 是不是会更合适","like_count":0},{"had_liked":false,"id":311813,"user_name":"prader26","can_delete":false,"product_type":"c1","uid":1433707,"ip_address":"","ucode":"5EFFFC374ADECE","user_header":"https://static001.geekbang.org/account/avatar/00/15/e0/6b/f61d7466.jpg","comment_is_top":false,"comment_ctime":1631489466,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631489466","product_id":100023901,"comment_content":"可以有多个线程同时进入临界区，不过某个时间点只允许有一个线程执行。","like_count":0},{"had_liked":false,"id":307633,"user_name":"木子李","can_delete":false,"product_type":"c1","uid":1694965,"ip_address":"","ucode":"815BAC4C950949","user_header":"https://static001.geekbang.org/account/avatar/00/19/dc/f5/806bd1ff.jpg","comment_is_top":false,"comment_ctime":1629185658,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629185658","product_id":100023901,"comment_content":"package com.mzl.base;<br><br>import java.util.concurrent.Semaphore;<br><br>&#47;**<br> * @author lihuagen<br> * @version 1.0<br> * @className: SemaphoreTest<br> * @description: TODO<br> * @date 2021&#47;8&#47;17 15:10<br> *&#47;<br>public class SemaphoreTest {<br>    &#47;**<br>     * 初始化信号量<br>     *&#47;<br>    static int count;<br>    static final Semaphore s = new Semaphore(1);<br>    &#47;**<br>     * 用信号量保证互斥<br>     *&#47;<br>    static void addOne() throws InterruptedException {<br>        s.acquire();<br>        try {<br>            count++;<br>        } finally {<br>            s.release();<br>        }<br>    }<br>    public static void main(String[] args) {<br>        for (int i = 0; i &lt; 10; i++) {<br>            new Thread(() -&gt; {<br>                try {<br>                    SemaphoreTest.addOne();<br>                    System.out.println(SemaphoreTest.count);<br>                } catch (InterruptedException e) {<br>                    e.printStackTrace();<br>                }<br>            }).start();<br>        }<br>    }<br>}<br>我多次执行后，有概率出现两个2，addOne方法不是临界区吗？我信号量设置的是1，应该只有1个线程在跑，为啥会出现重复的？<br>System.out.println(SemaphoreTest.count); 这个方法 addOne() 方法内就正常了，没出现过重复的了，能问下老师和各位大佬这是为什么吗？","like_count":0},{"had_liked":false,"id":306071,"user_name":"李二木","can_delete":false,"product_type":"c1","uid":1103091,"ip_address":"","ucode":"30E03BB84ADB27","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/f3/129d6dfe.jpg","comment_is_top":false,"comment_ctime":1628327617,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1628327617","product_id":100023901,"comment_content":"信号量是保证指定个线程可以同时进入临界区，而不是只有一个线程能进入临界区，所以要用线程安全的vector","like_count":0},{"had_liked":false,"id":306070,"user_name":"李二木","can_delete":false,"product_type":"c1","uid":1103091,"ip_address":"","ucode":"30E03BB84ADB27","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/f3/129d6dfe.jpg","comment_is_top":false,"comment_ctime":1628327511,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1628327511","product_id":100023901,"comment_content":"信号量模型可以概括为：一个计数器，一个等待队列，三个方法","like_count":0},{"had_liked":false,"id":296981,"user_name":"宋柯仰","can_delete":false,"product_type":"c1","uid":1422296,"ip_address":"","ucode":"50FB61E3E9DAF8","user_header":"https://static001.geekbang.org/account/avatar/00/15/b3/d8/c56e0f0b.jpg","comment_is_top":false,"comment_ctime":1623247743,"is_pvip":false,"replies":[{"id":"107964","content":"能做为锁使用，可见性也和锁一样","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1623409766,"ip_address":"","comment_id":296981,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1623247743","product_id":100023901,"comment_content":"老师，信号量初始值设置为1也不可以直接作为锁来使用的吧，它保证不了被保护资源的可见性吧？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521670,"discussion_content":"能做为锁使用，可见性也和锁一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623409766,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":285196,"user_name":"Laughing","can_delete":false,"product_type":"c1","uid":1002134,"ip_address":"","ucode":"F68F1E000CA800","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4a/96/99466a06.jpg","comment_is_top":false,"comment_ctime":1616663241,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616663241","product_id":100023901,"comment_content":"不行，对于多个线程同时操作ArrayList的remove是不符合Happens-Before的。","like_count":0},{"had_liked":false,"id":283413,"user_name":"Owen","can_delete":false,"product_type":"c1","uid":2403622,"ip_address":"","ucode":"FDE0D574B8ED5A","user_header":"https://static001.geekbang.org/account/avatar/00/24/ad/26/d46f4394.jpg","comment_is_top":false,"comment_ctime":1615774014,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615774014","product_id":100023901,"comment_content":"信号量和管程的不同之处除了在于同时进入临界区的线程数量，信号量是不是也没有条件变量这一个东西","like_count":0},{"had_liked":false,"id":275999,"user_name":"成电帅才","can_delete":false,"product_type":"c1","uid":2139604,"ip_address":"","ucode":"DDE757138F41D2","user_header":"","comment_is_top":false,"comment_ctime":1611741023,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611741023","product_id":100023901,"comment_content":"信号量中的被阻塞的线程是出于block、waiting、timed_wait状态中的哪种状态？是不是和调用的阻塞函数有关系？","like_count":0},{"had_liked":false,"id":269332,"user_name":"Eduardo Falaschi","can_delete":false,"product_type":"c1","uid":1400977,"ip_address":"","ucode":"493480ABA57C94","user_header":"https://static001.geekbang.org/account/avatar/00/15/60/91/b17c007b.jpg","comment_is_top":false,"comment_ctime":1608616071,"is_pvip":false,"replies":[{"id":"97778","content":"������������如果再加上熔断就更好了","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1608767106,"ip_address":"","comment_id":269332,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1608616071","product_id":100023901,"comment_content":"在调用一个第三方的支持并发量不大的系统时，需要限流","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512240,"discussion_content":"������������如果再加上熔断就更好了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608767106,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":250228,"user_name":"maybe","can_delete":false,"product_type":"c1","uid":1475528,"ip_address":"","ucode":"93D160F617E750","user_header":"https://static001.geekbang.org/account/avatar/00/16/83/c8/5ce842f6.jpg","comment_is_top":false,"comment_ctime":1600999319,"is_pvip":false,"discussion_count":0,"race_medal":4,"score":"1600999319","product_id":100023901,"comment_content":"package org.learning;<br><br>import java.util.ArrayList;<br>import java.util.List;<br>import java.util.Random;<br>import java.util.Vector;<br>import java.util.concurrent.Semaphore;<br><br>public class SemaphoreTest {<br><br>    public static void main(String[] args) {<br>        var admin = new ToiletAdministrator(2);<br>        for (int i = 0; i &lt; 100; i++) {<br>            var t = new Thread(() -&gt; {<br>                admin.gotoToilet();<br>            });<br>            t.setName(String.valueOf(i + 1));<br>            t.start();<br>        }<br>    }<br><br>    static class ToiletAdministrator {<br>        private final List&lt;Toilet&gt; toilets;<br>        private final Semaphore semaphore;<br><br>        public ToiletAdministrator(int n) {<br>            toilets = new Vector&lt;&gt;(n);<br>            for (int i = 0; i &lt; n; i++) {<br>                toilets.add(new Toilet(i + 1));<br>            }<br>            semaphore = new Semaphore(n);<br>        }<br><br>        public void gotoToilet() {<br>            try {<br>                semaphore.acquire();<br>            } catch (InterruptedException e) {<br>                e.printStackTrace();<br>            }<br>            Toilet toilet = null;<br>            try {<br>                toilet = toilets.remove(0);<br>                System.out.println(Thread.currentThread().getName() + &quot; got the toilet &quot; + toilet.getNumber() + &quot; and went all the way&quot;);<br>            } finally {<br>                toilets.add(toilet);<br>                semaphore.release();<br>            }<br>        }<br>    }<br><br>    static class Toilet {<br>        private final int number;<br><br>        public Toilet(int number) {<br>            this.number = number;<br>        }<br><br>        public int getNumber() {<br>            return number;<br>        }<br>    }<br>}<br>正确执行","like_count":0},{"had_liked":false,"id":250226,"user_name":"maybe","can_delete":false,"product_type":"c1","uid":1475528,"ip_address":"","ucode":"93D160F617E750","user_header":"https://static001.geekbang.org/account/avatar/00/16/83/c8/5ce842f6.jpg","comment_is_top":false,"comment_ctime":1600999222,"is_pvip":false,"discussion_count":0,"race_medal":4,"score":"1600999222","product_id":100023901,"comment_content":"package org.learning;<br><br>import java.util.ArrayList;<br>import java.util.List;<br>import java.util.Random;<br>import java.util.Vector;<br>import java.util.concurrent.Semaphore;<br><br>public class SemaphoreTest {<br><br>    public static void main(String[] args) {<br>        var admin = new ToiletAdministrator(2);<br>        for (int i = 0; i &lt; 100; i++) {<br>            var t = new Thread(() -&gt; {<br>                admin.gotoToilet();<br>            });<br>            t.setName(String.valueOf(i + 1));<br>            t.start();<br>        }<br>    }<br><br>    static class ToiletAdministrator {<br>        private final List&lt;Toilet&gt; toilets;<br>        private final Semaphore semaphore;<br><br>        public ToiletAdministrator(int n) {<br>            toilets = new ArrayList&lt;&gt;(n);<br>            for (int i = 0; i &lt; n; i++) {<br>                toilets.add(new Toilet(i + 1));<br>            }<br>            semaphore = new Semaphore(n);<br>        }<br><br>        public void gotoToilet() {<br>            try {<br>                semaphore.acquire();<br>            } catch (InterruptedException e) {<br>                e.printStackTrace();<br>            }<br>            Toilet toilet = null;<br>            try {<br>                toilet = toilets.remove(0);<br>                System.out.println(Thread.currentThread().getName() + &quot; got the toilet &quot; + toilet.getNumber() + &quot; and went all the way&quot;);<br>                Thread.sleep(new Random().nextInt(1000));<br>            } catch (InterruptedException e) {<br>                e.printStackTrace();<br>            } finally {<br>                toilets.add(toilet);<br>                semaphore.release();<br>            }<br>        }<br>    }<br><br>    static class Toilet {<br>        private final int number;<br><br>        public Toilet(int number) {<br>            this.number = number;<br>        }<br><br>        public int getNumber() {<br>            return number;<br>        }<br>    }<br>}<br><br>vector换成arraylist抛空指针","like_count":0},{"had_liked":false,"id":246242,"user_name":"🐝","can_delete":false,"product_type":"c1","uid":1183211,"ip_address":"","ucode":"28B3C527D81DC3","user_header":"https://static001.geekbang.org/account/avatar/00/12/0d/eb/c3ff1e85.jpg","comment_is_top":false,"comment_ctime":1599219471,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1599219471","product_id":100023901,"comment_content":"这个第一感觉觉得不用并发，取对象的时候直接取不就行了，取到就用，取不到就循环再取。用上并发同步工具类的好处是什么？","like_count":0,"discussions":[{"author":{"id":1358045,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b8/dd/37726c34.jpg","nickname":"小马哥","note":"","ucode":"B2C0FF38F8C9BC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367693,"discussion_content":"池化技术复用了对象, 减少了对象创建次数; 既然导致多个对象同时访问共享资源了, 可能有并发问题, 所以使用并发技术.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618443526,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":244218,"user_name":"fightingD","can_delete":false,"product_type":"c1","uid":1443637,"ip_address":"","ucode":"AD2876CED5D5AC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKwViav94kcF50CxA0Jw7icicxociaVzut97iacy3b2ciacFqXuFWdiakVq304YcI8pt4HT5A1Yvp8EkYCpw/132","comment_is_top":false,"comment_ctime":1598431157,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598431157","product_id":100023901,"comment_content":"不可以，Vector add(),remove()操作是线程安全的，如果替换成ArrayList 有线程安全问题。","like_count":0},{"had_liked":false,"id":237819,"user_name":"惘 闻","can_delete":false,"product_type":"c1","uid":1181650,"ip_address":"","ucode":"C5909F034BF072","user_header":"https://static001.geekbang.org/account/avatar/00/12/07/d2/0d7ee298.jpg","comment_is_top":false,"comment_ctime":1595982948,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595982948","product_id":100023901,"comment_content":"不可以，同时操作不安全的数组，会有并发问题。","like_count":0},{"had_liked":false,"id":224522,"user_name":"Just","can_delete":false,"product_type":"c1","uid":2022626,"ip_address":"","ucode":"35FA6917DE1D04","user_header":"https://static001.geekbang.org/account/avatar/00/1e/dc/e2/a3abd320.jpg","comment_is_top":false,"comment_ctime":1591430207,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591430207","product_id":100023901,"comment_content":"1）arraylist不是线程安全的，并发操作可能会获取同一个元素；vector是线程安全的<br>2）up方法和down方法的条件我觉得是要对应相关，纯粹说大于等于0不太认同","like_count":0},{"had_liked":false,"id":224032,"user_name":"mgs2002","can_delete":false,"product_type":"c1","uid":1812970,"ip_address":"","ucode":"F5931108BD509B","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a9/ea/5bfce6c5.jpg","comment_is_top":false,"comment_ctime":1591259611,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591259611","product_id":100023901,"comment_content":"思考题吧ArrayList换成CopyOnWriteArrayList可以吧，删除和添加各自的副本","like_count":0},{"had_liked":false,"id":216893,"user_name":"M","can_delete":false,"product_type":"c1","uid":1810576,"ip_address":"","ucode":"06F26E1D62E9C9","user_header":"https://wx.qlogo.cn/mmopen/vi_32/eLNeJNaEkwGSK7xvtamMibVLMy2MpbIqX3iaEhT7JtSnTRMRTwZ2j4HX7WAapiashbiaBDVriaXKSP0Oeic6ZAEVEXag/132","comment_is_top":false,"comment_ctime":1589363814,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589363814","product_id":100023901,"comment_content":"不能换成ArrayList，因为牵扯到了删除和添加，对于多个线程同时访问，会有并发风险，同时删除多个，添加多个<br><br><br><br><br><br>信号量优点：<br>1.允许多个线程同时进入临界区<br>2.互斥","like_count":0},{"had_liked":false,"id":216885,"user_name":"M","can_delete":false,"product_type":"c1","uid":1810576,"ip_address":"","ucode":"06F26E1D62E9C9","user_header":"https://wx.qlogo.cn/mmopen/vi_32/eLNeJNaEkwGSK7xvtamMibVLMy2MpbIqX3iaEhT7JtSnTRMRTwZ2j4HX7WAapiashbiaBDVriaXKSP0Oeic6ZAEVEXag/132","comment_is_top":false,"comment_ctime":1589362364,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589362364","product_id":100023901,"comment_content":"如果我初始化了2，假设两条线程，down的时候count值都不小于0，两个线程同时执行,那就保证不了互斥了吧?<br>static int count;<br>&#47;&#47;初始化信号量<br>static final Semaphore s <br>    = new Semaphore(1);<br>&#47;&#47;用信号量保证互斥    <br>static void addOne() {<br>  s.acquire();<br>  try {<br>    count+=1;<br>  } finally {<br>    s.release();<br>  }<br>}","like_count":0},{"had_liked":false,"id":214435,"user_name":"见南山","can_delete":false,"product_type":"c1","uid":1118111,"ip_address":"","ucode":"6A8BB82B7573CA","user_header":"https://static001.geekbang.org/account/avatar/00/11/0f/9f/f4b06bd5.jpg","comment_is_top":false,"comment_ctime":1588749155,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588749155","product_id":100023901,"comment_content":"Semaphore和管程的区别: <br>Semaphore允许多个线程同时访问临界资源，管程能够做到这点，但需要额外开发类似Semaphore的功能; <br>Semaphore每次唤醒一个线程，内部没有提供条件变量，实现阻塞对列比较困难，而管程可以唤醒全部线程，提供多个条件变量。<br><br>信号量出现早于管程，因此可以这么想，管程是更进一步解决并发的方案，因此，再某些方面是优化的。但是针对同时访问多个临界资源这点，需要利用管程继续实现。","like_count":1},{"had_liked":false,"id":207932,"user_name":"Destiny","can_delete":false,"product_type":"c1","uid":1258567,"ip_address":"","ucode":"B9F1AE7CDF5C30","user_header":"https://static001.geekbang.org/account/avatar/00/13/34/47/6d212e42.jpg","comment_is_top":false,"comment_ctime":1587218279,"is_pvip":false,"replies":[{"id":"77686","content":"是的","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1587286384,"ip_address":"","comment_id":207932,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1587218279","product_id":100023901,"comment_content":"老师好，有一个问题想问一下，如果部署服务的机器是集群，那么这个Semaphore的限流是不是就不能用了？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492285,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587286384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2330905,"avatar":"https://static001.geekbang.org/account/avatar/00/23/91/19/6a3e7efc.jpg","nickname":"程序员9527","note":"","ucode":"1A1609F6BEAD84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380763,"discussion_content":"令牌桶","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624690590,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1812970,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/a9/ea/5bfce6c5.jpg","nickname":"mgs2002","note":"","ucode":"F5931108BD509B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278926,"discussion_content":"集群的话限流可以通过网关层来做","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591259501,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204598,"user_name":"liian2019","can_delete":false,"product_type":"c1","uid":1503741,"ip_address":"","ucode":"22F639944F0EA0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epvjpicXzEv02d9ztRzIWIicbejyFTTtRA5K6oYmdicq9HQgGfRn3DLytTHQ6CHspb0TibqFkMibhBXj2g/132","comment_is_top":false,"comment_ctime":1586426762,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1586426762","product_id":100023901,"comment_content":"看完感觉我可以用AtomicInterger实现一个锁了 哈哈 ","like_count":0},{"had_liked":false,"id":201654,"user_name":"Easltr","can_delete":false,"product_type":"c1","uid":1442882,"ip_address":"","ucode":"DC6E6F76280549","user_header":"https://static001.geekbang.org/account/avatar/00/16/04/42/8e41c126.jpg","comment_is_top":false,"comment_ctime":1585817172,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585817172","product_id":100023901,"comment_content":"不行，因为Semaphore支持多个线程进入临界区的，如果用线程不安全的arraylist会出现并发问题","like_count":0},{"had_liked":false,"id":184984,"user_name":"凯","can_delete":false,"product_type":"c1","uid":1670995,"ip_address":"","ucode":"BFEA3EE7393B80","user_header":"https://static001.geekbang.org/account/avatar/00/19/7f/53/a9ae31ce.jpg","comment_is_top":false,"comment_ctime":1583462413,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583462413","product_id":100023901,"comment_content":"老师 如果信号量初始化时许可证为0会出现什么情况？还有一个问题就一个获取信号量许可证的线程中，执行完以后没有释放，但是线程已经结束会出现什么问题？","like_count":0},{"had_liked":false,"id":180811,"user_name":"missed","can_delete":false,"product_type":"c1","uid":1670935,"ip_address":"","ucode":"89D0016FAEE0D0","user_header":"https://static001.geekbang.org/account/avatar/00/19/7f/17/181c8d6f.jpg","comment_is_top":false,"comment_ctime":1582420331,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582420331","product_id":100023901,"comment_content":"把Arraylist丢到collections的synchronizedList也行吧，也是线程安全的了","like_count":0},{"had_liked":false,"id":176416,"user_name":"supermouse","can_delete":false,"product_type":"c1","uid":1321860,"ip_address":"","ucode":"88072D5F881827","user_header":"https://static001.geekbang.org/account/avatar/00/14/2b/84/07f0c0d6.jpg","comment_is_top":false,"comment_ctime":1581054617,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581054617","product_id":100023901,"comment_content":"不可以，因为用ArrayList的话如果有两个线程同时执行pool.remove(0)或者pool.add(t)的操作，有可能导致pool的size只减1或者只加1，这样就达不到限流的目的了。","like_count":0},{"had_liked":false,"id":169056,"user_name":"乾坤瞬间","can_delete":false,"product_type":"c1","uid":1683130,"ip_address":"","ucode":"15BDCF29CBF8EB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLWIUF31dicT1YBTxWNX0uvbMxl15UwdlwFicGhNo0DsQ7CbM6k16EQxK7bwSMcicLGMdYto4jGPTvrg/132","comment_is_top":false,"comment_ctime":1578268826,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578268826","product_id":100023901,"comment_content":"信号量，用信号灯来形容的话，是允许汽车穿过同一斑马线的，所以需要使用vector 这样线程安全的数据结构","like_count":0},{"had_liked":false,"id":168506,"user_name":"陈","can_delete":false,"product_type":"c1","uid":1531763,"ip_address":"","ucode":"8AEF8530530311","user_header":"https://static001.geekbang.org/account/avatar/00/17/5f/73/a9346146.jpg","comment_is_top":false,"comment_ctime":1578101551,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1578101551","product_id":100023901,"comment_content":"信号量实现的代码中this.count--，这个操作好像不是线程安全的吧？<br>","like_count":0},{"had_liked":false,"id":163332,"user_name":"FH","can_delete":false,"product_type":"c1","uid":1179224,"ip_address":"","ucode":"E47F6765CF1EEE","user_header":"https://static001.geekbang.org/account/avatar/00/11/fe/58/2cddaca4.jpg","comment_is_top":false,"comment_ctime":1576688414,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576688414","product_id":100023901,"comment_content":"计数器的值如果&gt;0, 表示池中还有未使用的资源, 那么也就是说等待队列里没有等待线程, 所以不需要唤醒了. 注意这里的计数器值是可以&lt;0的, 当&lt;0时表示阻塞队列不为空, 所以此时才需要唤醒","like_count":0},{"had_liked":false,"id":158713,"user_name":"周国栋","can_delete":false,"product_type":"c1","uid":1222582,"ip_address":"","ucode":"CA46E833FB608E","user_header":"https://static001.geekbang.org/account/avatar/00/12/a7/b6/4831632e.jpg","comment_is_top":false,"comment_ctime":1575439031,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575439031","product_id":100023901,"comment_content":"老师 你好 Semaphore(0) 和Semaphore(1)有什么不同吗？","like_count":0},{"had_liked":false,"id":154851,"user_name":"小氘","can_delete":false,"product_type":"c1","uid":1622109,"ip_address":"","ucode":"DA55B9A02D9EE0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erPMtAfnQdpx1yOZQ2ic7icqUs3tvibEjUXQMUXKiaakyuIho6k6vmdl46nrdWjXIjPIRg9Pmco00tR5w/132","comment_is_top":false,"comment_ctime":1574580397,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574580397","product_id":100023901,"comment_content":"课后思考，不可以将Vector 换成ArrayList ,因为信号量允许同一时刻多个线程访问临界区，这时多个线程同时调用pool.remove()和pool.add()方法会有原子性问题。","like_count":0},{"had_liked":false,"id":153403,"user_name":"朕爱吾妃","can_delete":false,"product_type":"c1","uid":1733692,"ip_address":"","ucode":"B10EB69934F9E2","user_header":"https://static001.geekbang.org/account/avatar/00/1a/74/3c/da79d2a1.jpg","comment_is_top":false,"comment_ctime":1574230759,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574230759","product_id":100023901,"comment_content":"不能使用ArrayList的，因为add和remove方法可以同时有多个线程进行，假如现在是remove方法，有两个线程过来，同时remove第一个元素，那么就会出现异常，add同理，这就好像是count = count + 1 一样，假如现在count = 0，同时两个线程执行这个+1的操作，最后结果可能就是count = 1 这个道理是一样的","like_count":0},{"had_liked":false,"id":150946,"user_name":"IT橘子","can_delete":false,"product_type":"c1","uid":1066932,"ip_address":"","ucode":"1DBEE96BAF8B0B","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/b4/e8b3f53f.jpg","comment_is_top":false,"comment_ctime":1573633243,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573633243","product_id":100023901,"comment_content":"老师 对象池的示例代码中ObjPool的构造函数在将对象t加入pool中时用的是同一个t，是否意味着T这个类必须是线程安全的类才不会出现线程安全问题？否则极限情况下，size个线程在同时调用exec方法时，若func中的操作会改变t的成员变量，则必定会出现线程安全问题？","like_count":0},{"had_liked":false,"id":148252,"user_name":"考休","can_delete":false,"product_type":"c1","uid":1053955,"ip_address":"","ucode":"968DFC00D6D0CF","user_header":"https://static001.geekbang.org/account/avatar/00/10/15/03/c0fe1dbf.jpg","comment_is_top":false,"comment_ctime":1572963902,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572963902","product_id":100023901,"comment_content":"使用信号量进行并发编程，保证了共享变量的互斥，但是没有解决同步，即线程间的交互不是很便利，这可能是信号量在JAVA编程中地位不高的原因","like_count":0},{"had_liked":false,"id":141890,"user_name":"245864982","can_delete":false,"product_type":"c1","uid":1238485,"ip_address":"","ucode":"AC47075A95B759","user_header":"https://static001.geekbang.org/account/avatar/00/12/e5/d5/680402fd.jpg","comment_is_top":false,"comment_ctime":1571245219,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571245219","product_id":100023901,"comment_content":"很赞","like_count":0},{"had_liked":false,"id":140059,"user_name":"民工597","can_delete":false,"product_type":"c1","uid":1529858,"ip_address":"","ucode":"DB6857E21E9318","user_header":"https://static001.geekbang.org/account/avatar/00/17/58/02/2b7ccf09.jpg","comment_is_top":false,"comment_ctime":1570799136,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570799136","product_id":100023901,"comment_content":"AQS有两种支持方式，同步和互斥，只有互斥的模式才可以创造出临界区，然后可以使用非线程安全的容器吧","like_count":0},{"had_liked":false,"id":138900,"user_name":"景梦园","can_delete":false,"product_type":"c1","uid":1620479,"ip_address":"","ucode":"0A17708457ACB2","user_header":"https://static001.geekbang.org/account/avatar/00/18/b9/ff/ea6c2e86.jpg","comment_is_top":false,"comment_ctime":1570501849,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570501849","product_id":100023901,"comment_content":"阻塞队列的大小可以设置吗？","like_count":0},{"had_liked":false,"id":136905,"user_name":"zshanjun","can_delete":false,"product_type":"c1","uid":1182120,"ip_address":"","ucode":"0C99216D6FBDB8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/oCx7GX9P4w5cml1cpbFD1x21Biad3MLCTOhTPJvicRW3xp9C8xTgdiaOSdpFyvibKSfcD1LL4miaT7VtqqKms6rgujg/132","comment_is_top":false,"comment_ctime":1569551255,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1569551255","product_id":100023901,"comment_content":"&#47;**<br> * 用信号量实现阻塞队列<br> *&#47;<br>public class SemaphoreQueue {<br><br>    private List&lt;Integer&gt; list;<br>    <br>    &#47;&#47; 可以进行put操作的许可数量<br>    private Semaphore putActionNum;<br>    <br>    &#47;&#47; 可以进行get操作的许可数量<br>    private Semaphore getActionNum;<br>    <br>    private Semaphore mutex;<br><br>    public SemaphoreQueue(int capacity) {<br>        putActionNum = new Semaphore(capacity);<br>        &#47;&#47; 初始化时队列为空<br>        getActionNum = new Semaphore(0);<br>        mutex = new Semaphore(1);<br>        list = new ArrayList&lt;&gt;(capacity);<br>    }<br><br>    public void put(Integer val) {<br>        try {<br>            &#47;&#47; put操作许可证-1<br>            putActionNum.acquire();<br>            mutex.acquire();<br>            list.add(val);<br>            mutex.release();<br>            &#47;&#47; get操作许可证+1<br>            getActionNum.release();<br>        } catch (InterruptedException e) {<br>            e.printStackTrace();<br>        }<br>    }<br><br>    public Integer get() {<br>        Integer val = null;<br>        try {<br>            getActionNum.acquire();<br>            mutex.acquire();<br>            val = list.get(0);<br>            list.remove(0);<br>            mutex.release();<br>            &#47;&#47; put操作许可证+1<br>            putActionNum.release();<br>        } catch (InterruptedException e) {<br>            e.printStackTrace();<br>        }<br>        return val;<br>    }<br><br>    public static void main(String[] args) {<br>        SemaphoreQueue queue = new SemaphoreQueue(5);<br>        for (int i = 0; i &lt; 10; i++) {<br>            Thread thread = new Thread(() -&gt; {<br>                for (int j = 0; j &lt; 100; j++) {<br>                    if (j % 2 == 1) {<br>                        Integer val = queue.get();<br>                        System.out.println(val);<br>                    } else {<br>                        queue.put(j);<br>                    }<br>                }<br>            });<br>            thread.start();<br>        }<br><br>        try {<br>            Thread.sleep(5000);<br>        } catch (InterruptedException e) {<br>            e.printStackTrace();<br>        }<br>    }<br>}","like_count":0},{"had_liked":false,"id":132391,"user_name":"Sharry","can_delete":false,"product_type":"c1","uid":1239293,"ip_address":"","ucode":"045DDB864659F6","user_header":"https://static001.geekbang.org/account/avatar/00/12/e8/fd/035f4c94.jpg","comment_is_top":false,"comment_ctime":1568106392,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568106392","product_id":100023901,"comment_content":"因为临界区允许多个线程访问, 故 ArrayList 的 remove 是无法保证线程安全的","like_count":0},{"had_liked":false,"id":126804,"user_name":"日拱一兵","can_delete":false,"product_type":"c1","uid":1437158,"ip_address":"","ucode":"D6386E5CD7C061","user_header":"https://static001.geekbang.org/account/avatar/00/15/ed/e6/75a32708.jpg","comment_is_top":false,"comment_ctime":1566481184,"is_pvip":false,"replies":[{"id":"47020","content":"需要","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1566559031,"ip_address":"","comment_id":126804,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566481184","product_id":100023901,"comment_content":"老师，信号量是允许多个线程进入临界区，如果临界区内有共享变量，那么这个变量也是要加锁的吧，比如 count 计数","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464177,"discussion_content":"需要","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566559031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122364,"user_name":"半生瓜。","can_delete":false,"product_type":"c1","uid":1606288,"ip_address":"","ucode":"6D4CC445230D19","user_header":"https://static001.geekbang.org/account/avatar/00/18/82/90/295449c4.jpg","comment_is_top":false,"comment_ctime":1565349401,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565349401","product_id":100023901,"comment_content":"不可以，因为ArrayList的remove操作不是原子性的。那么在进入exce方法的时候，可以有多个线程同时执行remove方法，这样就可能会造成异常。","like_count":0},{"had_liked":false,"id":118455,"user_name":"伟伟💤","can_delete":false,"product_type":"c1","uid":1442413,"ip_address":"","ucode":"622AF8AA3D163D","user_header":"https://static001.geekbang.org/account/avatar/00/16/02/6d/fa23b086.jpg","comment_is_top":false,"comment_ctime":1564367828,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564367828","product_id":100023901,"comment_content":" List MyStrList = Collections.synchronizedList(new ArrayList());","like_count":0},{"had_liked":false,"id":116998,"user_name":"拯救地球好累","can_delete":false,"product_type":"c1","uid":1339022,"ip_address":"","ucode":"7643439601EF4C","user_header":"https://static001.geekbang.org/account/avatar/00/14/6e/8e/5d309a85.jpg","comment_is_top":false,"comment_ctime":1563952893,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563952893","product_id":100023901,"comment_content":"---总结---<br>信号量相对管程的特定使用场景：实现多个线程访问同一临界区<br>信号量的互斥实现：依赖于原子的up和down操作对计数器进行加减","like_count":0},{"had_liked":false,"id":116124,"user_name":"冉野","can_delete":false,"product_type":"c1","uid":1137353,"ip_address":"","ucode":"2CAEA424996876","user_header":"https://static001.geekbang.org/account/avatar/00/11/5a/c9/933ee0a8.jpg","comment_is_top":false,"comment_ctime":1563791165,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1563791165","product_id":100023901,"comment_content":"Semaphore没有实现同步，当我们需要实现数据的同步时候还需要自己进行做数据同步，我对这个比较难以理解，因为每次acquire()都是原子性的，所有只有一个线程在操作数据，为什么还会出现数据不同步呢？请老师解答一下。<br>打印日志：<br>thread-并发测试线程-runner-7获取许可(18)，剩余：0<br>thread-并发测试线程-runner-5获取许可(17)，剩余：1<br>thread-并发测试线程-runner-5执行data自增前：data=18<br>thread-并发测试线程-runner-5执行data自增后：data=19<br>thread-并发测试线程-runner-1获取许可(15)，剩余：2<br>thread-并发测试线程-runner-1执行data自增前：data=19<br>thread-并发测试线程-runner-1执行data自增后：data=20<br>thread-并发测试线程-runner-4释放许可(14)，剩余：3<br>thread-并发测试线程-runner-3释放许可(13)，剩余：3<br>thread-并发测试线程-runner-7执行data自增前：data=18<br>thread-并发测试线程-runner-7执行data自增后：data=21<br>","like_count":0,"discussions":[{"author":{"id":1606288,"avatar":"https://static001.geekbang.org/account/avatar/00/18/82/90/295449c4.jpg","nickname":"半生瓜。","note":"","ucode":"6D4CC445230D19","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4393,"discussion_content":"acquire()原子性是指里面的计数器操作是原子性的。但是你的信号量大于1，那么同一个时间就会有多个线程操作同一个数据，所以就会出现数据不同步的问题。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1565349605,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1137353,"avatar":"https://static001.geekbang.org/account/avatar/00/11/5a/c9/933ee0a8.jpg","nickname":"冉野","note":"","ucode":"2CAEA424996876","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1606288,"avatar":"https://static001.geekbang.org/account/avatar/00/18/82/90/295449c4.jpg","nickname":"半生瓜。","note":"","ucode":"6D4CC445230D19","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5581,"discussion_content":"谢谢老铁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566360214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4393,"ip_address":""},"score":5581,"extra":""}]}]},{"had_liked":false,"id":107397,"user_name":"斐波那契","can_delete":false,"product_type":"c1","uid":1464006,"ip_address":"","ucode":"85E2EBC01392B1","user_header":"https://static001.geekbang.org/account/avatar/00/16/56/c6/0b449bc6.jpg","comment_is_top":false,"comment_ctime":1561527640,"is_pvip":false,"replies":[{"id":"38944","content":"这次要看具体场景","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1561597021,"ip_address":"","comment_id":107397,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1561527640","product_id":100023901,"comment_content":"老师 我想问一下 在那个对象池例子中 是不是装入的对象是不可变的 不然在调用func的时候多线程可能会导致结果错误？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455497,"discussion_content":"这次要看具体场景","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561597021,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104266,"user_name":"彻头撤尾","can_delete":false,"product_type":"c1","uid":1421174,"ip_address":"","ucode":"7B120836359858","user_header":"https://static001.geekbang.org/account/avatar/00/15/af/76/feaffdea.jpg","comment_is_top":false,"comment_ctime":1560702485,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560702485","product_id":100023901,"comment_content":"这个限流器 的size 让我想到了 线程池的核心线程数,让多个线程同时访问临界区的意义就是充分发挥多线程的作用,而不是把多线程任务串行化从而失去了多线程的意义.","like_count":0},{"had_liked":false,"id":98647,"user_name":"超","can_delete":false,"product_type":"c1","uid":1032518,"ip_address":"","ucode":"7867523DB57020","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c1/46/78c177e9.jpg","comment_is_top":false,"comment_ctime":1559049105,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559049105","product_id":100023901,"comment_content":"结合线程池的场景进行使用比较多。 ","like_count":0},{"had_liked":false,"id":94965,"user_name":"疯狂埃里克","can_delete":false,"product_type":"c1","uid":1099882,"ip_address":"","ucode":"1BD274519202B0","user_header":"https://static001.geekbang.org/account/avatar/00/10/c8/6a/ab820630.jpg","comment_is_top":false,"comment_ctime":1557930954,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557930954","product_id":100023901,"comment_content":"针对任何一个key的写入都有全局的写锁，这不合适吧？如果想给每个key建立自己的锁怎么做呢？","like_count":0},{"had_liked":false,"id":92939,"user_name":"谢特","can_delete":false,"product_type":"c1","uid":1248684,"ip_address":"","ucode":"9C30DBFECFE649","user_header":"https://static001.geekbang.org/account/avatar/00/13/0d/ac/09678490.jpg","comment_is_top":false,"comment_ctime":1557365642,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557365642","product_id":100023901,"comment_content":"为什么都是小于0","like_count":0},{"had_liked":false,"id":92460,"user_name":"谢特","can_delete":false,"product_type":"c1","uid":1248684,"ip_address":"","ucode":"9C30DBFECFE649","user_header":"https://static001.geekbang.org/account/avatar/00/13/0d/ac/09678490.jpg","comment_is_top":false,"comment_ctime":1557277689,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557277689","product_id":100023901,"comment_content":"为什么都是小于0","like_count":0},{"had_liked":false,"id":91823,"user_name":"ycfHH","can_delete":false,"product_type":"c1","uid":1498283,"ip_address":"","ucode":"084FF6C86CBCE4","user_header":"","comment_is_top":false,"comment_ctime":1557115079,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557115079","product_id":100023901,"comment_content":"ObjPool初始化size大于1时用ArrayList就会出现线程安全问题，多个线程同时对ArrayList进行操作了。","like_count":0},{"had_liked":false,"id":90512,"user_name":"xuery","can_delete":false,"product_type":"c1","uid":1027584,"ip_address":"","ucode":"F461B61BE06131","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ae/00/025f37e7.jpg","comment_is_top":false,"comment_ctime":1556542369,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1556542369","product_id":100023901,"comment_content":"信号量计数器设置为1，则可以作为互斥锁使用；至于实现阻塞队列中的condition，现在还没有思路。<br>不能用ArrayList，使用信号量会有多个线程同时进入到pool.remove(0)中，ArrayList的remove方法显然不是线程安全的","like_count":0},{"had_liked":false,"id":89023,"user_name":"Geek_53bccf","can_delete":false,"product_type":"c1","uid":1481179,"ip_address":"","ucode":"1818C97E5D1CCC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/UfqEYrR3cQXUhPEibnXD3kPSc8f0ibR4bdz6JnibjOBibfcxWrkVlz4iaCAAutOSotiaP2ROYX5esYfhAB3vj4avnYqQ/132","comment_is_top":false,"comment_ctime":1556066857,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1556066857","product_id":100023901,"comment_content":"down方法里面当计数器小于零的时候 就阻塞线程，如果有两个线程进入阻塞那计数器就是-2当调用up方法的一次的时候，此时计数器就为-1那依旧小于零调用down方法依旧阻塞 这样的话岂不是有问题。明明一个线程调用了up方法就是释放信号量 另一个线程获得这个信号量的时候发现它的计数器是-1依旧小于零则进入阻塞状态 ","like_count":0},{"had_liked":false,"id":84389,"user_name":"Juc","can_delete":false,"product_type":"c1","uid":1217566,"ip_address":"","ucode":"EF82A73FAA7F8D","user_header":"https://static001.geekbang.org/account/avatar/00/12/94/1e/973cda79.jpg","comment_is_top":false,"comment_ctime":1554857017,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554857017","product_id":100023901,"comment_content":"老师可以公布一下完整的代码到github上吗？","like_count":0},{"had_liked":false,"id":83899,"user_name":"ken","can_delete":false,"product_type":"c1","uid":1048245,"ip_address":"","ucode":"A43E42B541624D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fe/b5/df0f658f.jpg","comment_is_top":false,"comment_ctime":1554730781,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554730781","product_id":100023901,"comment_content":"信号量提供的方法是安全的，使用信号量的方法支持多个线程进入临界区，此时临界区也是一个多线线程的场景所以需要使用Vector操作list。","like_count":0},{"had_liked":false,"id":83634,"user_name":"心中无剑","can_delete":false,"product_type":"c1","uid":1479311,"ip_address":"","ucode":"85C27AC7523EE4","user_header":"https://static001.geekbang.org/account/avatar/00/16/92/8f/0378e325.jpg","comment_is_top":false,"comment_ctime":1554687562,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554687562","product_id":100023901,"comment_content":"老师的池子例子，创建对象池的时候，泛型Long,String,这一段报错啊","like_count":0},{"had_liked":false,"id":83341,"user_name":"zero","can_delete":false,"product_type":"c1","uid":1299615,"ip_address":"","ucode":"528DD5C8399AEC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKlwpFM3tkeG15YqyJTYWkfqkdmro9POq6SicYm57TaEFDOUZCXjoe0Z0Iz6UibGQqic3icJRsHdFzibtw/132","comment_is_top":false,"comment_ctime":1554540268,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1554540268","product_id":100023901,"comment_content":"ArrayList的remove和add方法不是线程安全的，Vector可以保证add、remove是线程安全。所在对象池的例子中，如果使用ArrayList替换掉Vector的话，在由多个线程从线程池获取对象是会出现并发问题。","like_count":0},{"had_liked":false,"id":83247,"user_name":"海鸿","can_delete":false,"product_type":"c1","uid":1104275,"ip_address":"","ucode":"7074EF94EA70AD","user_header":"https://static001.geekbang.org/account/avatar/00/10/d9/93/098e5ef5.jpg","comment_is_top":false,"comment_ctime":1554479202,"is_pvip":false,"replies":[{"id":"30267","content":"是😂","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1554709424,"ip_address":"","comment_id":83247,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1554479202","product_id":100023901,"comment_content":"Semaphore 可以允许多个线程访问一个临界区。像池资源那样，进入之后还是得控制资源的获取啊，不然还是会产生并发问题啊，不是吗？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445937,"discussion_content":"是😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554709424,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2330905,"avatar":"https://static001.geekbang.org/account/avatar/00/23/91/19/6a3e7efc.jpg","nickname":"程序员9527","note":"","ucode":"1A1609F6BEAD84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380765,"discussion_content":"临界区里面的共享变量需要自己控制线程安全","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624690993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":83236,"user_name":"空知","can_delete":false,"product_type":"c1","uid":1013283,"ip_address":"","ucode":"C448E98238DD36","user_header":"https://static001.geekbang.org/account/avatar/00/0f/76/23/31e5e984.jpg","comment_is_top":false,"comment_ctime":1554475380,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554475380","product_id":100023901,"comment_content":"不能 arraylist的remove add操作没有加锁, 信号量允许多个线程同时操作,可能俩线程操作 remove操作同一个对象","like_count":0},{"had_liked":false,"id":83188,"user_name":"冰激凌的眼泪","can_delete":false,"product_type":"c1","uid":1087945,"ip_address":"","ucode":"5DCB974667E93A","user_header":"https://static001.geekbang.org/account/avatar/00/10/99/c9/a7c77746.jpg","comment_is_top":false,"comment_ctime":1554454913,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554454913","product_id":100023901,"comment_content":"sem可以保障一类资源最多有多少并发使用，但是资源的并发安全需要单独考虑","like_count":0},{"had_liked":false,"id":83131,"user_name":"ZOU志伟","can_delete":false,"product_type":"c1","uid":1029179,"ip_address":"","ucode":"439779871CC992","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b4/3b/a1f7e3a4.jpg","comment_is_top":false,"comment_ctime":1554432332,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554432332","product_id":100023901,"comment_content":"明白了，用信号量比管程的优势是，信号量不用再另外判断对象池的大小，谢谢老师👍 ","like_count":0},{"had_liked":false,"id":83125,"user_name":"易儿易","can_delete":false,"product_type":"c1","uid":1242864,"ip_address":"","ucode":"B15D1031CA841E","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqLcWH3mSPmhjrs1aGL4b3TqI7xDqWWibM4nYFrRlp0z7FNSWaJz0mqovrgIA7ibmrPt8zRScSfRaqQ/132","comment_is_top":false,"comment_ctime":1554430795,"is_pvip":false,"replies":[{"id":"30068","content":"条条大路通罗马，都可以。","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1554478987,"ip_address":"","comment_id":83125,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1554430795","product_id":100023901,"comment_content":"限流器，平时自己开发的时候，是不是简单使用阻塞队列就可以了呢？和信号量比起来有什么差别吗？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445873,"discussion_content":"条条大路通罗马，都可以。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554478987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":83076,"user_name":"WP","can_delete":false,"product_type":"c1","uid":1105956,"ip_address":"","ucode":"4A24C6CAA70220","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/24/4529f2a4.jpg","comment_is_top":false,"comment_ctime":1554394080,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554394080","product_id":100023901,"comment_content":"王老师的这个专栏让我受益匪浅啊，收获多多，哈哈，期待后面的文章~~","like_count":0},{"had_liked":false,"id":83065,"user_name":"Presley","can_delete":false,"product_type":"c1","uid":1215219,"ip_address":"","ucode":"D8F125835F4903","user_header":"https://static001.geekbang.org/account/avatar/00/12/8a/f3/7c89d00e.jpg","comment_is_top":false,"comment_ctime":1554389988,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554389988","product_id":100023901,"comment_content":"需要保证10个线程的线程安全","like_count":0},{"had_liked":false,"id":83054,"user_name":"WP","can_delete":false,"product_type":"c1","uid":1105956,"ip_address":"","ucode":"4A24C6CAA70220","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/24/4529f2a4.jpg","comment_is_top":false,"comment_ctime":1554384888,"is_pvip":false,"replies":[{"id":"29985","content":"并发程序就这样，一不小心就错，谁都免不了犯这种错误😂","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1554392598,"ip_address":"","comment_id":83054,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1554384888","product_id":100023901,"comment_content":"我好像知道原因了   finally里面的回收和计数器顺序调整下就对了   我错了~~","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445837,"discussion_content":"并发程序就这样，一不小心就错，谁都免不了犯这种错误😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554392598,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":83053,"user_name":"WP","can_delete":false,"product_type":"c1","uid":1105956,"ip_address":"","ucode":"4A24C6CAA70220","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/24/4529f2a4.jpg","comment_is_top":false,"comment_ctime":1554384768,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554384768","product_id":100023901,"comment_content":"main里面的循环创建线程数量10没问题    设定大一些就会遇到空指针","like_count":0},{"had_liked":false,"id":83051,"user_name":"WP","can_delete":false,"product_type":"c1","uid":1105956,"ip_address":"","ucode":"4A24C6CAA70220","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/24/4529f2a4.jpg","comment_is_top":false,"comment_ctime":1554384490,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554384490","product_id":100023901,"comment_content":"package com.zzu.concurrent;<br>import java.util.List;<br>import java.util.Vector;<br>import java.util.concurrent.Semaphore;<br>import java.util.function.Function;<br>&#47;**<br> * @Corp<br> * @Description: 练习多线程<br> * @Author hotwater<br> * @Date 2019年04月04日  17:47<br> * @Version Version2.0.0<br> *&#47;<br>public class ConcurrentPool&lt;T, R&gt; {<br>&#47;&#47; 核心代码：实现一个对象池的限流器<br>    &#47;&#47;对象池子<br>      volatile List&lt;T&gt; pool = new Vector&lt;T&gt;();<br>    &#47;&#47;限流器<br>    final Semaphore semaphore;<br><br><br>    public ConcurrentPool(int poolSize, T t) {<br>        &#47;&#47;初始化对象池操作<br>        for (int x = 0; x &lt; poolSize; x++) {<br>            pool.add(t);<br>        }<br>        &#47;&#47;初始化限流器<br>        this.semaphore = new Semaphore(poolSize);<br>    }<br><br>    &#47;&#47;执行器<br>    R exec(Function&lt;T, R&gt; function) {<br>        T remove = null;<br>        try {<br><br>            &#47;&#47;申请资源<br>            System.err.println(&quot;线程&quot;+Thread.currentThread().getName()+&quot;申请资源前池子大小：&quot;+pool.size());<br>            semaphore.acquire();<br>            &#47;&#47;从池子中移除<br>            remove = pool.remove(0);<br>            System.err.println(&quot;线程&quot;+Thread.currentThread().getName()+&quot;申请资源后池子大小：&quot;+pool.size());<br>             return function.apply(remove);<br>        } catch (Exception e) {<br>            e.printStackTrace();<br>        } finally {<br>            &#47;&#47;回收资源<br>            System.err.println(&quot;线程&quot;+Thread.currentThread().getName()+&quot;回收资源前池子大小：&quot;+pool.size());<br>            semaphore.release();<br>            pool.add(remove);<br>            System.err.println(&quot;线程&quot;+Thread.currentThread().getName()+&quot;回收资源后池子大小：&quot;+pool.size());<br>        }<br>        return null;<br>    }<br><br>    public static void main(String[] args) {<br>        ConcurrentPool&lt;Integer,String&gt;pool=new ConcurrentPool&lt;&gt;(10,2);<br>        for (int x=0;x&lt;10;x++) {<br>            new Thread(new Runnable() {<br>                @Override<br>                public void run() {<br>                   pool.exec(t-&gt;{<br>                        System.err.println(Thread.currentThread().getName()+&quot;FUNCTION函数执行：&quot;+t);<br>                        return t.toString();<br>                    });<br>                }<br>            }).start();<br>        }<br>    }<br>}","like_count":0},{"had_liked":false,"id":83043,"user_name":"橘子","can_delete":false,"product_type":"c1","uid":1368522,"ip_address":"","ucode":"EDF6145878F897","user_header":"https://static001.geekbang.org/account/avatar/00/14/e1/ca/d8b0835f.jpg","comment_is_top":false,"comment_ctime":1554382743,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554382743","product_id":100023901,"comment_content":"AQS也是用CAS实现的，信号量因为可以设置数量，所以一次会有多个线程操作list也就是原子性不能保证。","like_count":0},{"had_liked":false,"id":83025,"user_name":"WP","can_delete":false,"product_type":"c1","uid":1105956,"ip_address":"","ucode":"4A24C6CAA70220","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/24/4529f2a4.jpg","comment_is_top":false,"comment_ctime":1554376266,"is_pvip":false,"replies":[{"id":"29974","content":"最好把代码帖出来<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1554379673,"ip_address":"","comment_id":83025,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1554376266","product_id":100023901,"comment_content":"尝试跑更多线程会有空指针问题：<br>17行代码：t = pool.remove(0);<br>32行代码：return t.toString();<br>既然上文的16行代码 sem.acquire();获取不到信号量就会线程阻塞，那么为啥还会空指针呢，是我理解的问题么？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445823,"discussion_content":"最好把代码帖出来\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554379673,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":83021,"user_name":"相信的力量","can_delete":false,"product_type":"c1","uid":1313827,"ip_address":"","ucode":"C3B807AD5DBE85","user_header":"https://static001.geekbang.org/account/avatar/00/14/0c/23/0193e869.jpg","comment_is_top":false,"comment_ctime":1554374754,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554374754","product_id":100023901,"comment_content":"ArrayList的add和remove方法不是线程安全的，并发执行可能会出错。","like_count":0},{"had_liked":false,"id":83016,"user_name":"Knight²º¹⁸","can_delete":false,"product_type":"c1","uid":1089754,"ip_address":"","ucode":"BDCB830B6A730F","user_header":"https://static001.geekbang.org/account/avatar/00/10/a0/da/4f50f1b2.jpg","comment_is_top":false,"comment_ctime":1554373567,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554373567","product_id":100023901,"comment_content":"我最近也遇到了对象池的需求。但是我的场景是允许多个线程同时使用某一个对象，在特定的时间需要对象进行回收实际是使用新的对象进行替换，把旧的对象回收待下次使用；且回收的频率非常低，一天只回收一次）。没有打算使用读写锁，因为性能要求非常高。","like_count":0},{"had_liked":false,"id":83007,"user_name":"liurh","can_delete":false,"product_type":"c1","uid":1468570,"ip_address":"","ucode":"9EFF41023D60D1","user_header":"","comment_is_top":false,"comment_ctime":1554371298,"is_pvip":false,"replies":[{"id":"29975","content":"👍👍<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1554379702,"ip_address":"","comment_id":83007,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1554371298","product_id":100023901,"comment_content":"不可以，多个线程同时进入临界区，remove方法可能会移除同一个对象","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445815,"discussion_content":"👍👍\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554379702,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82961,"user_name":"张天屹","can_delete":false,"product_type":"c1","uid":1477612,"ip_address":"","ucode":"8BD6BD6DCF0F4F","user_header":"https://static001.geekbang.org/account/avatar/00/16/8b/ec/dc03f5ad.jpg","comment_is_top":false,"comment_ctime":1554360209,"is_pvip":false,"replies":[{"id":"29976","content":"👍👍👍<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1554379725,"ip_address":"","comment_id":82961,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1554360209","product_id":100023901,"comment_content":"如果信号量初始化为1 就可以用ArrayList，因为这个时候exec相当于一个线程的临界区类似于互斥锁，但是现在初始化为10，也就意味着可能有多于一个线程同时在执行exec方法，也就意味着list.remove方法中可能发生线程切换，remove方法涉及size的判断肯定是有静态条件的，所以必须用vector保证remove操作的原子性","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445795,"discussion_content":"👍👍👍\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554379725,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82915,"user_name":"鸠翱","can_delete":false,"product_type":"c1","uid":1116568,"ip_address":"","ucode":"7D498AF2BC4289","user_header":"https://static001.geekbang.org/account/avatar/00/11/09/98/b11c372b.jpg","comment_is_top":false,"comment_ctime":1554347986,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1554347986","product_id":100023901,"comment_content":"看见评论区还有同学还在说由于happen-before，可以使用arraylist<br>果然还是没有搞懂可见性和并发安全的关系呢","like_count":0,"discussions":[{"author":{"id":1252567,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1c/d7/c176ad9f.jpg","nickname":"绝尘而去","note":"","ucode":"690E4E6B3E39DD","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":362993,"discussion_content":"解释一下？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617087047,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82897,"user_name":"Rayjun","can_delete":false,"product_type":"c1","uid":1002514,"ip_address":"","ucode":"61A3D1A3D03569","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4c/12/f0c145d4.jpg","comment_is_top":false,"comment_ctime":1554345456,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1554345456","product_id":100023901,"comment_content":"文中说的计数器和等待队列对外应该是不透明的吧","like_count":0},{"had_liked":false,"id":82889,"user_name":"贺宇","can_delete":false,"product_type":"c1","uid":1445040,"ip_address":"","ucode":"55854825CC4AD2","user_header":"https://static001.geekbang.org/account/avatar/00/16/0c/b0/26c0e53f.jpg","comment_is_top":false,"comment_ctime":1554344126,"is_pvip":true,"replies":[{"id":"30071","content":"是的","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1554479323,"ip_address":"","comment_id":82889,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1554344126","product_id":100023901,"comment_content":"虽然信号量的down和up都是原子操作，线程安全的，但是两个方法中间的操作不一定保证线程安全，所以这里还是要通过管程来保证线程安全。我觉得Vertor可以换成BlockingQueue,效率更高一点","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445766,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554479323,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82888,"user_name":"in","can_delete":false,"product_type":"c1","uid":1437481,"ip_address":"","ucode":"55329844488EA7","user_header":"https://static001.geekbang.org/account/avatar/00/15/ef/29/5f0094ff.jpg","comment_is_top":false,"comment_ctime":1554343903,"is_pvip":false,"replies":[{"id":"29971","content":"把return分成两行写是不是就理解了呢😂","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1554379531,"ip_address":"","comment_id":82888,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1554343903","product_id":100023901,"comment_content":"finally 语句块是在 try 或者 catch 中的 return 语句之前执行的。<br> try {<br>      t = pool.remove(0);<br>      return func.apply(t);<br>    } finally {<br>      pool.add(t);<br>      sem.release();<br>    }<br>那回调函数没执行完，对象就被释放了，这点有点疑问？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445765,"discussion_content":"把return分成两行写是不是就理解了呢😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554379531,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82885,"user_name":"ZOU志伟","can_delete":false,"product_type":"c1","uid":1029179,"ip_address":"","ucode":"439779871CC992","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b4/3b/a1f7e3a4.jpg","comment_is_top":false,"comment_ctime":1554343316,"is_pvip":false,"replies":[{"id":"29972","content":"用管程写一个，比较一下就知道了<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1554379587,"ip_address":"","comment_id":82885,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1554343316","product_id":100023901,"comment_content":"这个对象池用信号量实现比管程实现的优势在哪？拿对象的时候线程不是还是要互斥拿吗？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445763,"discussion_content":"用管程写一个，比较一下就知道了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554379587,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82880,"user_name":"xiyi","can_delete":false,"product_type":"c1","uid":1447833,"ip_address":"","ucode":"E368673D610D91","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIBarfQrgZjEW8uUgvQckubEIFwNCJL93OygIgx3fCkObgRzSdo2baVWRd1C8mV6VDGKuoBFic4ZZA/132","comment_is_top":false,"comment_ctime":1554342897,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554342897","product_id":100023901,"comment_content":"Arraylist 不行，存在线程安全问题，多线程并发删除可能导致两个线程使用一个对象！两个线程的remove操作没有happen-before的关系，没有满足传递性","like_count":0},{"had_liked":false,"id":82879,"user_name":"易水南风","can_delete":false,"product_type":"c1","uid":1123818,"ip_address":"","ucode":"A2A0F18228A5D0","user_header":"https://static001.geekbang.org/account/avatar/00/11/25/ea/ec869117.jpg","comment_is_top":false,"comment_ctime":1554342832,"is_pvip":false,"replies":[{"id":"29973","content":"这个水平高的自己看源码吧","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1554379620,"ip_address":"","comment_id":82879,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1554342832","product_id":100023901,"comment_content":"老师以后会讲下信号量底层原理吗","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445762,"discussion_content":"这个水平高的自己看源码吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554379620,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82877,"user_name":"kevin","can_delete":false,"product_type":"c1","uid":1237471,"ip_address":"","ucode":"5F6D82F118C6F6","user_header":"https://static001.geekbang.org/account/avatar/00/12/e1/df/6e6a4c6b.jpg","comment_is_top":false,"comment_ctime":1554342446,"is_pvip":false,"replies":[{"id":"30073","content":"不可以，有多个线程进入临界区","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1554479387,"ip_address":"","comment_id":82877,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1554342446","product_id":100023901,"comment_content":"对于课后题，队列已通过semaphore保护，可以使用ArrayList","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445760,"discussion_content":"不可以，有多个线程进入临界区","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554479387,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82868,"user_name":"西西弗与卡夫卡","can_delete":false,"product_type":"c1","uid":1001710,"ip_address":"","ucode":"B4C27B8335B76A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/ee/872ad07e.jpg","comment_is_top":false,"comment_ctime":1554341430,"is_pvip":true,"replies":[{"id":"29980","content":"👍<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1554380572,"ip_address":"","comment_id":82868,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1554341430","product_id":100023901,"comment_content":"不可以使用ArrayList。如果限流N，那就相当于允许N个线程同时访问，而ArrayList不是线程安全","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445755,"discussion_content":"👍\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554380572,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82861,"user_name":"波波","can_delete":false,"product_type":"c1","uid":1155827,"ip_address":"","ucode":"4344D9F4486D42","user_header":"https://static001.geekbang.org/account/avatar/00/11/a2/f3/aa504fa6.jpg","comment_is_top":false,"comment_ctime":1554340462,"is_pvip":false,"replies":[{"id":"29981","content":"并发包里东西太多，只能高度概括了😂","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1554380741,"ip_address":"","comment_id":82861,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1554340462","product_id":100023901,"comment_content":"评论区越来越少，我来水一下，讲的有难度，已经开始第二轮学习老师课程了。","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445751,"discussion_content":"并发包里东西太多，只能高度概括了😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554380741,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82856,"user_name":"君哥聊技术","can_delete":false,"product_type":"c1","uid":1325816,"ip_address":"","ucode":"2C9A22BCE4C79E","user_header":"https://static001.geekbang.org/account/avatar/00/14/3a/f8/c1a939e7.jpg","comment_is_top":false,"comment_ctime":1554339854,"is_pvip":false,"replies":[{"id":"30072","content":"不可以，有多个线程进入临界区","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1554479370,"ip_address":"","comment_id":82856,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1554339854","product_id":100023901,"comment_content":"已经用信号量做了控制，用arraylist也是可以的","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445748,"discussion_content":"不可以，有多个线程进入临界区","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554479370,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82852,"user_name":"undifined","can_delete":false,"product_type":"c1","uid":1068920,"ip_address":"","ucode":"449CB4CD2DC089","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/78/c3d8ecb0.jpg","comment_is_top":false,"comment_ctime":1554339636,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554339636","product_id":100023901,"comment_content":"不可以，如果换成 ArrayList，即使有Semaphore，也有可能造成两个线程拿到同一个对象","like_count":0},{"had_liked":false,"id":82847,"user_name":"魏春河","can_delete":false,"product_type":"c1","uid":1117048,"ip_address":"","ucode":"DDD2998C157639","user_header":"https://static001.geekbang.org/account/avatar/00/11/0b/78/22410c47.jpg","comment_is_top":false,"comment_ctime":1554339147,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1554339147","product_id":100023901,"comment_content":"老师你好，acquire方法是如何保证是一个原子操作的呢？","like_count":0},{"had_liked":false,"id":82846,"user_name":"一道阳光","can_delete":false,"product_type":"c1","uid":1239557,"ip_address":"","ucode":"F35207CCCEC6E2","user_header":"https://static001.geekbang.org/account/avatar/00/12/ea/05/c0d8014d.jpg","comment_is_top":false,"comment_ctime":1554339054,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554339054","product_id":100023901,"comment_content":"多个线程执行remove操作，使用arrayList会导致线程安全问题，如果信号量是1,就没有线程安全问题。","like_count":0},{"had_liked":false,"id":82842,"user_name":"水目沾","can_delete":false,"product_type":"c1","uid":1274495,"ip_address":"","ucode":"FDD1D15C277D58","user_header":"https://static001.geekbang.org/account/avatar/00/13/72/7f/5da093c5.jpg","comment_is_top":false,"comment_ctime":1554338450,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554338450","product_id":100023901,"comment_content":"信号量只能保证N个线程来对象池中取对象，而这 N 个线程操作对象池还是需要保证安全的，所有 vector 可以而 arraylist 不行。","like_count":0},{"had_liked":false,"id":82840,"user_name":"周治慧","can_delete":false,"product_type":"c1","uid":1335293,"ip_address":"","ucode":"7D56C4E66BEE17","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKR3ibELhjgVicCNShZCBwvaDxibnzibggG4wUzVkS2mkDxUBZyIs87nDEdJ7PiahJBVoZcuhQ84RxAziag/132","comment_is_top":false,"comment_ctime":1554338404,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554338404","product_id":100023901,"comment_content":"不能换，当多个线程同时进入信号量获取的临界点点时，同时执行remove方法是现场不安全的同理add","like_count":0},{"had_liked":false,"id":82829,"user_name":"0bug","can_delete":false,"product_type":"c1","uid":1050335,"ip_address":"","ucode":"CADCC882F31784","user_header":"https://static001.geekbang.org/account/avatar/00/10/06/df/60126ff3.jpg","comment_is_top":false,"comment_ctime":1554337497,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554337497","product_id":100023901,"comment_content":"只有size 等于1的时候可以用arraylist","like_count":0},{"had_liked":false,"id":82818,"user_name":"高源","can_delete":false,"product_type":"c1","uid":1048887,"ip_address":"","ucode":"751B41FD38EF7D","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/37/12e4c9c9.jpg","comment_is_top":false,"comment_ctime":1554334693,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554334693","product_id":100023901,"comment_content":"Arraylist不是线程同步的，造成多个线程进入导致数据错误","like_count":0}]}