{"id":105359,"title":"43 | Socket通信：遇上特大项目，要学会和其他公司合作","content":"<p>上一篇预习文章说了这么多，现在我们终于可以来看一下，在应用层，我们应该如何使用socket的接口来进行通信。</p><p>如果你对socket相关的网络协议原理不是非常了解，建议你先去看一看上一篇的预习文章，再来看这一篇的内容，就会比较轻松。</p><p>按照前一篇文章说的分层机制，我们可以想到，socket接口大多数情况下操作的是传输层，更底层的协议不用它来操心，这就是分层的好处。</p><p>在传输层有两个主流的协议TCP和UDP，所以我们的socket程序设计也是主要操作这两个协议。这两个协议的区别是什么呢？通常的答案是下面这样的。</p><ul>\n<li>TCP是面向连接的，UDP是面向无连接的。</li>\n<li>TCP提供可靠交付，无差错、不丢失、不重复、并且按序到达；UDP不提供可靠交付，不保证不丢失，不保证按顺序到达。</li>\n<li>TCP是面向字节流的，发送时发的是一个流，没头没尾；UDP是面向数据报的，一个一个地发送。</li>\n<li>TCP是可以提供流量控制和拥塞控制的，既防止对端被压垮，也防止网络被压垮。</li>\n</ul><p>这些答案没有问题，但是没有到达本质，也经常让人产生错觉。例如，下面这些问题，你看看你是否了解？</p><ul>\n<li>所谓的连接，容易让人误以为，使用TCP会使得两端之间的通路和使用UDP不一样，那我们会在沿途建立一条线表示这个连接吗？</li>\n<li>我从中国访问美国网站，中间这么多环节，我怎么保证连接不断呢？</li>\n<li>中间有个网络管理员拔了一根网线不就断了吗？我不能控制它，它也不会通知我，我一个个人电脑怎么能够保持连接呢？</li>\n<li>还让我做流量控制和拥塞控制，我既管不了中间的链路，也管不了对端的服务器呀，我怎么能够做到？</li>\n<li>按照网络分层，TCP和UDP都是基于IP协议的，IP都不能保证可靠，说丢就丢，TCP怎么能够保证呢？</li>\n<li>IP层都是一个包一个包地发送，TCP怎么就变成流了？</li>\n</ul><!-- [[[read_end]]] --><p>从本质上来讲，所谓的<strong>建立连接</strong>，其实是为了在客户端和服务端维护连接，而建立一定的数据结构来维护双方交互的状态，并用这样的数据结构来保证面向连接的特性。TCP无法左右中间的任何通路，也没有什么虚拟的连接，中间的通路根本意识不到两端使用了TCP还是UDP。</p><p>所谓的<strong>连接</strong>，就是两端数据结构状态的协同，两边的状态能够对得上。符合TCP协议的规则，就认为连接存在；两面状态对不上，连接就算断了。</p><p>流量控制和拥塞控制其实就是根据收到的对端的网络包，调整两端数据结构的状态。TCP协议的设计理论上认为，这样调整了数据结构的状态，就能进行流量控制和拥塞控制了，其实在通路上是不是真的做到了，谁也管不着。</p><p>所谓的<strong>可靠</strong>，也是两端的数据结构做的事情。不丢失其实是数据结构在“点名”，顺序到达其实是数据结构在“排序”，面向数据流其实是数据结构将零散的包，按照顺序捏成一个流发给应用层。总而言之，“连接”两个字让人误以为功夫在通路，其实功夫在两端。</p><p>当然，无论是用socket操作TCP，还是UDP，我们首先都要调用socket函数。</p><pre><code>int socket(int domain, int type, int protocol);\n</code></pre><p>socket函数用于创建一个socket的文件描述符，唯一标识一个socket。我们把它叫作文件描述符，因为在内核中，我们会创建类似文件系统的数据结构，并且后续的操作都有用到它。</p><p>socket函数有三个参数。</p><ul>\n<li>domain：表示使用什么IP层协议。AF_INET表示IPv4，AF_INET6表示IPv6。</li>\n<li>type：表示socket类型。SOCK_STREAM，顾名思义就是TCP面向流的，SOCK_DGRAM就是UDP面向数据报的，SOCK_RAW可以直接操作IP层，或者非TCP和UDP的协议。例如ICMP。</li>\n<li>protocol表示的协议，包括IPPROTO_TCP、IPPTOTO_UDP。</li>\n</ul><p>通信结束后，我们还要像关闭文件一样，关闭socket。</p><h2>针对TCP应该如何编程？</h2><p>接下来我们来看，针对TCP，我们应该如何编程。</p><p><img src=\"https://static001.geekbang.org/resource/image/99/da/997e39e5574252ada22220e4b3646dda.png?wh=1303*1603\" alt=\"\"></p><p>TCP的服务端要先监听一个端口，一般是先调用bind函数，给这个socket赋予一个端口和IP地址。</p><pre><code>int bind(int sockfd, const struct sockaddr *addr,socklen_t addrlen);\n\nstruct sockaddr_in {\n  __kernel_sa_family_t\tsin_family;\t/* Address family\t\t*/\n  __be16\t\tsin_port;\t/* Port number\t\t\t*/\n  struct in_addr\tsin_addr;\t/* Internet address\t\t*/\n\n  /* Pad to size of `struct sockaddr'. */\n  unsigned char\t\t__pad[__SOCK_SIZE__ - sizeof(short int) -\n\t\t\tsizeof(unsigned short int) - sizeof(struct in_addr)];\n};\n\nstruct in_addr {\n\t__be32\ts_addr;\n};\n</code></pre><p>其中，sockfd是上面我们创建的socket文件描述符。在sockaddr_in结构中，sin_family设置为AF_INET，表示IPv4；sin_port是端口号；sin_addr是IP地址。</p><p>服务端所在的服务器可能有多个网卡、多个地址，可以选择监听在一个地址，也可以监听0.0.0.0表示所有的地址都监听。服务端一般要监听在一个众所周知的端口上，例如，Nginx一般是80，Tomcat一般是8080。</p><p>客户端要访问服务端，肯定事先要知道服务端的端口。无论是电商，还是游戏，还是视频，如果你仔细观察，会发现都有一个这样的端口。可能你会发现，客户端不需要bind，因为浏览器嘛，随机分配一个端口就可以了，只有你主动去连接别人，别人不会主动连接你，没有人关心客户端监听到了哪里。</p><p>如果你看上面代码中的数据结构，里面的变量名称都有“be”两个字母，代表的意思是“big-endian”。如果在网络上传输超过1 Byte的类型，就要区分<strong>大端</strong>（Big Endian）和<strong>小端</strong>（Little Endian）。</p><p>假设，我们要在32位4 Bytes的一个空间存放整数1，很显然只要1 Byte放1，其他3 Bytes放0就可以了。那问题是，最后一个Byte放1呢，还是第一个Byte放1呢？或者说，1作为最低位，应该放在32位的最后一个位置呢，还是放在第一个位置呢？</p><p>最低位放在最后一个位置，我们叫作小端，最低位放在第一个位置，叫作大端。TCP/IP栈是按照大端来设计的，而x86机器多按照小端来设计，因而发出去时需要做一个转换。</p><p>接下来，就要建立TCP的连接了，也就是著名的三次握手，其实就是将客户端和服务端的状态通过三次网络交互，达到初始状态是协同的状态。下图就是三次握手的序列图以及对应的状态转换。</p><p><img src=\"https://static001.geekbang.org/resource/image/0e/a4/0ef257133471e95bd334383e0155fda4.png?wh=1423*1063\" alt=\"\"></p><p>接下来，服务端要调用listen进入LISTEN状态，等待客户端进行连接。</p><pre><code>int listen(int sockfd, int backlog);\n</code></pre><p>连接的建立过程，也即三次握手，是TCP层的动作，是在内核完成的，应用层不需要参与。</p><p>接着，服务端只需要调用accept，等待内核完成了至少一个连接的建立，才返回。如果没有一个连接完成了三次握手，accept就一直等待；如果有多个客户端发起连接，并且在内核里面完成了多个三次握手，建立了多个连接，这些连接会被放在一个队列里面。accept会从队列里面取出一个来进行处理。如果想进一步处理其他连接，需要调用多次accept，所以accept往往在一个循环里面。</p><pre><code>int accept(int sockfd, struct sockaddr *addr, socklen_t *addrlen);\n</code></pre><p>接下来，客户端可以通过connect函数发起连接。</p><pre><code>int connect(int sockfd, const struct sockaddr *addr, socklen_t addrlen);\n</code></pre><p>我们先在参数中指明要连接的IP地址和端口号，然后发起三次握手。内核会给客户端分配一个临时的端口。一旦握手成功，服务端的accept就会返回另一个socket。</p><p>这里需要注意的是，监听的socket和真正用来传送数据的socket，是两个socket，一个叫作<strong>监听socket</strong>，一个叫作<strong>已连接socket</strong>。成功连接建立之后，双方开始通过read和write函数来读写数据，就像往一个文件流里面写东西一样。</p><h2>针对UDP应该如何编程？</h2><p>接下来我们来看，针对UDP应该如何编程。</p><p><img src=\"https://static001.geekbang.org/resource/image/28/b2/283b0e1c21f0277ba5b4b5cbcaca03b2.png?wh=1303*1243\" alt=\"\"></p><p>UDP是没有连接的，所以不需要三次握手，也就不需要调用listen和connect，但是UDP的交互仍然需要IP地址和端口号，因而也需要bind。</p><p>对于UDP来讲，没有所谓的连接维护，也没有所谓的连接的发起方和接收方，甚至都不存在客户端和服务端的概念，大家就都是客户端，也同时都是服务端。只要有一个socket，多台机器就可以任意通信，不存在哪两台机器是属于一个连接的概念。因此，每一个UDP的socket都需要bind。每次通信时，调用sendto和recvfrom，都要传入IP地址和端口。</p><pre><code>ssize_t sendto(int sockfd, const void *buf, size_t len, int flags, const struct sockaddr *dest_addr, socklen_t addrlen);\n\nssize_t recvfrom(int sockfd, void *buf, size_t len, int flags, struct sockaddr *src_addr, socklen_t *addrlen);\n</code></pre><h2>总结时刻</h2><p>这一节我们讲了网络协议的基本原理和socket系统调用，这里请你重点关注TCP协议的系统调用。</p><p>通过学习，我们知道，socket系统调用是用户态和内核态的接口，网络协议的四层以下都是在内核中的。很多的书籍会讲如何开发一个高性能的socket程序，但是这不是我们这门课的重点，所以我们主要看内核里面的机制就行了。</p><p>因此，你需要记住TCP协议的socket调用的过程。我们接下来就按照这个顺序，依次回忆一下这些系统调用到内核都做了什么：</p><ul>\n<li>服务端和客户端都调用socket，得到文件描述符；</li>\n<li>服务端调用listen，进行监听；</li>\n<li>服务端调用accept，等待客户端连接；</li>\n<li>客户端调用connect，连接服务端；</li>\n<li>服务端accept返回用于传输的socket的文件描述符；</li>\n<li>客户端调用write写入数据；</li>\n<li>服务端调用read读取数据。</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/d3/5c/d34e667d1c3340deb8c82a2d44f2a65c.png?wh=1786*1375\" alt=\"\"></p><h2>课堂练习</h2><p>请你根据今天讲的socket系统调用，写一个简单的socket程序来传输一个字符串。</p><p>欢迎留言和我分享你的疑惑和见解 ，也欢迎可以收藏本节内容，反复研读。你也可以把今天的内容分享给你的朋友，和他一起学习和进步。</p><p><img src=\"https://static001.geekbang.org/resource/image/8c/37/8c0a95fa07a8b9a1abfd394479bdd637.jpg?wh=1110*659\" alt=\"\"></p>","comments":[{"had_liked":false,"id":110434,"user_name":"安排","can_delete":false,"product_type":"c1","uid":1260026,"ip_address":"","ucode":"F78CFA9624CAEF","user_header":"https://static001.geekbang.org/account/avatar/00/13/39/fa/a7edbc72.jpg","comment_is_top":false,"comment_ctime":1562258104,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"267850230456","product_id":100024701,"comment_content":"老师，可不可以在答疑篇，增加一个select,poll,epoll的内核机制分析？","like_count":63,"discussions":[{"author":{"id":1716827,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/32/5b/d0c7e813.jpg","nickname":"luo","note":"","ucode":"1A1DA8EB916ECF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":564874,"discussion_content":"支持","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650345726,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1756562,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/cd/92/f75a00dd.jpg","nickname":"、落叶为你舞","note":"","ucode":"A196460774A33F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":118958,"discussion_content":"支持","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578204510,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1563813,"avatar":"https://static001.geekbang.org/account/avatar/00/17/dc/a5/fe89fd57.jpg","nickname":"rinne","note":"","ucode":"2328E08C3E2D96","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6883,"discussion_content":"支持","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567153520,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1135151,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/vTku9cFYPh2T8DSImQoPRLxgSibcVgCRYqMcEYibexxLkfn9IKhUSAasZ7QoB72SDWym31niah2y00ibRWdHibibib1wQ/132","nickname":"Regina","note":"","ucode":"2256559FB9A8D7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4544,"discussion_content":"支持","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565534812,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1145650,"avatar":"https://static001.geekbang.org/account/avatar/00/11/7b/32/60089a62.jpg","nickname":"杨领well","note":"","ucode":"3974A03855168C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2242,"discussion_content":"支持","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563404367,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129097,"user_name":"莫名","can_delete":false,"product_type":"c1","uid":1007254,"ip_address":"","ucode":"E28F2602BA25DD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/96/a03175bc.jpg","comment_is_top":false,"comment_ctime":1567042227,"is_pvip":false,"replies":[{"id":"48749","content":"是的","user_name":"作者回复","comment_id":129097,"uid":"1001590","ip_address":"","utype":1,"ctime":1567493644,"user_name_real":"刘超@网易云"}],"discussion_count":1,"race_medal":0,"score":"57401617075","product_id":100024701,"comment_content":"『连接功夫在两端，而不在通路。通过两端的底层sock结构体维持状态信息。』老师这句话总结很到位结合socket系统调用的源码分析会更加容易理解。","like_count":14,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465275,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567493644,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112979,"user_name":"程序水果宝","can_delete":false,"product_type":"c1","uid":1371633,"ip_address":"","ucode":"1700DDFE073A56","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqyicZYyW7ahaXgXUD8ZAS8x0t8jx5rYLhwbUCJiawRepKIZfsLdkxdQ9XQMo99c1UDibmNVfFnAqwPg/132","comment_is_top":false,"comment_ctime":1562859286,"is_pvip":false,"replies":[{"id":"46683","content":"需要两个数据结构保存不同的状态","user_name":"作者回复","comment_id":112979,"uid":"1001590","ip_address":"","utype":1,"ctime":1566379759,"user_name_real":"刘超@网易云"}],"discussion_count":1,"race_medal":0,"score":"44512532246","product_id":100024701,"comment_content":"为什么要两个socket？","like_count":11,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457991,"discussion_content":"需要两个数据结构保存不同的状态","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566379759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110797,"user_name":"kdb_reboot","can_delete":false,"product_type":"c1","uid":1003594,"ip_address":"","ucode":"4C56FCA563FCA3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/50/4a/04fef27f.jpg","comment_is_top":false,"comment_ctime":1562336967,"is_pvip":false,"replies":[{"id":"46756","content":"这个专栏比较硬核","user_name":"作者回复","comment_id":110797,"uid":"1001590","ip_address":"","utype":1,"ctime":1566388288,"user_name_real":"刘超@网易云"}],"discussion_count":1,"race_medal":0,"score":"18742206151","product_id":100024701,"comment_content":"老师厉害了, 依然在更新;<br>最近我有时间学习这个专栏了, 但是目前只跟到第十课, 把专栏作为引子,每天的阅读量还是很大的<br>然后, 我有个问题: 专栏更新完老师还会答疑吗?因为进度原因,可能还没学到最后面,专栏已经更新完了","like_count":4,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457060,"discussion_content":"这个专栏比较硬核","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566388288,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226419,"user_name":"韩俊臣","can_delete":false,"product_type":"c1","uid":1475340,"ip_address":"","ucode":"D6A15C025570D5","user_header":"https://static001.geekbang.org/account/avatar/00/16/83/0c/b9e39db4.jpg","comment_is_top":false,"comment_ctime":1592093984,"is_pvip":false,"replies":[{"id":"83455","content":"赞","user_name":"作者回复","comment_id":226419,"uid":"1001590","ip_address":"","utype":1,"ctime":1592185808,"user_name_real":"刘超@网易云"}],"discussion_count":1,"race_medal":0,"score":"14476995872","product_id":100024701,"comment_content":"撑过进程间通信后，这里终于多少能看懂了","like_count":3,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498234,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592185808,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135325,"user_name":"天使也有爱","can_delete":false,"product_type":"c1","uid":1368010,"ip_address":"","ucode":"3CCB7C47A0919E","user_header":"https://static001.geekbang.org/account/avatar/00/14/df/ca/7c223fce.jpg","comment_is_top":false,"comment_ctime":1569126576,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10159061168","product_id":100024701,"comment_content":"看了趣谈网络协议专栏，在结合这里看，感觉对网络通信知识有了更深的理解","like_count":2},{"had_liked":false,"id":282031,"user_name":"Allen_","can_delete":false,"product_type":"c1","uid":1677187,"ip_address":"","ucode":"CA5E00E4644CD5","user_header":"https://static001.geekbang.org/account/avatar/00/19/97/83/845b48e2.jpg","comment_is_top":false,"comment_ctime":1615022333,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5909989629","product_id":100024701,"comment_content":"这一章解决了我一年都问不到的答案 谢谢老师","like_count":1},{"had_liked":false,"id":140573,"user_name":"宋桓公","can_delete":false,"product_type":"c1","uid":1151948,"ip_address":"","ucode":"04235C2B87AB0E","user_header":"https://static001.geekbang.org/account/avatar/00/11/93/cc/dfe92ee1.jpg","comment_is_top":false,"comment_ctime":1571010559,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5865977855","product_id":100024701,"comment_content":"原来0000，是指监听一个服务器的全部网卡，soga","like_count":1,"discussions":[{"author":{"id":1254656,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/00/3afbab43.jpg","nickname":"88591","note":"","ucode":"04CE3E46455185","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45362,"discussion_content":"是所有IP哦，不是一个服务器全部网卡","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1573028052,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121903,"user_name":"oldman","can_delete":false,"product_type":"c1","uid":1133711,"ip_address":"","ucode":"6BACE2832B4429","user_header":"https://static001.geekbang.org/account/avatar/00/11/4c/8f/a90b3969.jpg","comment_is_top":false,"comment_ctime":1565246606,"is_pvip":false,"replies":[{"id":"46339","content":"每个连接都是不同的端口号","user_name":"作者回复","comment_id":121903,"uid":"1001590","ip_address":"","utype":1,"ctime":1566296160,"user_name_real":"刘超@网易云"}],"discussion_count":1,"race_medal":0,"score":"5860213902","product_id":100024701,"comment_content":"老师，有个问题，一直没有想明白，希望老师看到之后给解答一下，我知道服务端会维护一个连接的队列，比如这个队列里面是a,b,c,d,e,f,g这个样的多个连接，那当客户端有请求过来，比如说某一个请求过来，服务端是怎么区分他是a还是b或者c对应的连接呢？谢谢。","like_count":2,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461999,"discussion_content":"每个连接都是不同的端口号","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566296160,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":344166,"user_name":"边城路远","can_delete":false,"product_type":"c1","uid":1286741,"ip_address":"","ucode":"214ECD8981E87F","user_header":"https://static001.geekbang.org/account/avatar/00/13/a2/55/1092ebb8.jpg","comment_is_top":false,"comment_ctime":1651316229,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651316229","product_id":100024701,"comment_content":"老师好，多个网卡可以bind多次吗","like_count":0},{"had_liked":false,"id":311757,"user_name":"Sunny","can_delete":false,"product_type":"c1","uid":1305257,"ip_address":"","ucode":"BB7B274CE0672E","user_header":"https://static001.geekbang.org/account/avatar/00/13/ea/a9/0a917f2c.jpg","comment_is_top":false,"comment_ctime":1631448004,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631448004","product_id":100024701,"comment_content":"监听 socket 在服务端，已连接 socket 在客户端？💔","like_count":0},{"had_liked":false,"id":277735,"user_name":"坚","can_delete":false,"product_type":"c1","uid":2019536,"ip_address":"","ucode":"C02AB1CDE39D1A","user_header":"https://static001.geekbang.org/account/avatar/00/1e/d0/d0/a6c6069d.jpg","comment_is_top":false,"comment_ctime":1612532721,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612532721","product_id":100024701,"comment_content":"老师，UDP流程的图片中，客户端不需要bind吧？","like_count":0},{"had_liked":false,"id":262306,"user_name":"K菌无惨","can_delete":false,"product_type":"c1","uid":2194764,"ip_address":"","ucode":"97A532D588FD49","user_header":"","comment_is_top":false,"comment_ctime":1605689582,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605689582","product_id":100024701,"comment_content":"不错 讲的很清晰","like_count":0},{"had_liked":false,"id":236335,"user_name":"Geek_29c23f","can_delete":false,"product_type":"c1","uid":2062612,"ip_address":"","ucode":"921FD498B55D50","user_header":"https://static001.geekbang.org/account/avatar/00/1f/79/14/dc3e49d1.jpg","comment_is_top":false,"comment_ctime":1595391362,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1595391362","product_id":100024701,"comment_content":"三次握手是在listern阶段还是accept阶段。listen不阻塞，执行完后直接在accept下阻塞等待三次握手。那三次握手应该在accept阶段才 啊","like_count":0,"discussions":[{"author":{"id":1657948,"avatar":"https://static001.geekbang.org/account/avatar/00/19/4c/5c/9ea0f752.jpg","nickname":"程序猿不圆","note":"","ucode":"BC8926A84A07C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327808,"discussion_content":"connect发起三次握手，连接建立成功后accept返回","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1605957523,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1672030,"avatar":"","nickname":"Geek_739cf0","note":"","ucode":"58EE00AD0D5D50","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589395,"discussion_content":"据我所知，listen不会处理三次握手，他只是让内核替这个socket维护一个半链接队列和全连接队列。\n而accept也不会处理三次握手，只是去检查这个socket对应的全连接队列，为空时阻塞。\n三次握手是程序调用listen后，内核自动监听并完成","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1664809345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"湖北"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":161966,"user_name":"高志强","can_delete":false,"product_type":"c1","uid":1276563,"ip_address":"","ucode":"68737002043752","user_header":"https://static001.geekbang.org/account/avatar/00/13/7a/93/c9302518.jpg","comment_is_top":false,"comment_ctime":1576418580,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576418580","product_id":100024701,"comment_content":"用户态和内核态交互要通过socket操作tcp或udp协议，所以socket必然存在，可以这样理解么  老师","like_count":0},{"had_liked":false,"id":140389,"user_name":"风向北吹","can_delete":false,"product_type":"c1","uid":1623409,"ip_address":"","ucode":"2FD0BC5159E1C1","user_header":"https://static001.geekbang.org/account/avatar/00/18/c5/71/f7c43b49.jpg","comment_is_top":false,"comment_ctime":1570925228,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1570925228","product_id":100024701,"comment_content":"在编写java socket发现一个问题，客户端通过socket发送数据到通过socket接收数据的过程中，必须调用socket. shutdownOutput()才可以收到，而服务端发送到接收或者接收到发送中间转换却不需要一个关流的操作，这是为什么呀","like_count":0,"discussions":[{"author":{"id":1466447,"avatar":"https://static001.geekbang.org/account/avatar/00/16/60/4f/db0e62b3.jpg","nickname":"Daiver","note":"","ucode":"9B1A03AFBC79BC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":277229,"discussion_content":"有缓冲区，没有及时flush","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1591018637,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139838,"user_name":"恒","can_delete":false,"product_type":"c1","uid":1225966,"ip_address":"","ucode":"68F64BF1460D8C","user_header":"https://static001.geekbang.org/account/avatar/00/12/b4/ee/c3ff8615.jpg","comment_is_top":false,"comment_ctime":1570754720,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570754720","product_id":100024701,"comment_content":"老师，UDP不需要listen和connect，那是不是UDP从头到尾就一个socket就够了，不像TCP区分监听socket和已连接socket？","like_count":0},{"had_liked":false,"id":132386,"user_name":"靠人品去赢","can_delete":false,"product_type":"c1","uid":1301286,"ip_address":"","ucode":"7A20F9EBE847E1","user_header":"https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg","comment_is_top":false,"comment_ctime":1568105363,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1568105363","product_id":100024701,"comment_content":"TCP面向连接，HTTP无状态总是搞混，问一下基于TCP的HTTP为什么不设置一个状态依赖的东西，要靠cookie和session来帮忙呢？<br>这个UDP上学的时候知道实时通话视频会用到，丢包丢多了是不是就是我们感觉“卡卡的”掉帧的情况。","like_count":0,"discussions":[{"author":{"id":1266698,"avatar":"https://static001.geekbang.org/account/avatar/00/13/54/0a/9a002ad5.jpg","nickname":"Adam Lau","note":"","ucode":"7E542D6E789500","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":251546,"discussion_content":"http如果是有状态的，各种中间件缓存啥的不好搞了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588087586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130265,"user_name":"潇是潇洒的洒","can_delete":false,"product_type":"c1","uid":1250652,"ip_address":"","ucode":"CB950E0A655AA0","user_header":"https://static001.geekbang.org/account/avatar/00/13/15/5c/aa3f8306.jpg","comment_is_top":false,"comment_ctime":1567414986,"is_pvip":true,"replies":[{"id":"48683","content":"不同的文件","user_name":"作者回复","comment_id":130265,"uid":"1001590","ip_address":"","utype":1,"ctime":1567476795,"user_name_real":"刘超@网易云"}],"discussion_count":1,"race_medal":0,"score":"1567414986","product_id":100024701,"comment_content":"老师我有一个疑问，服务端和客户端都调用 socket，得到文件描述符。这里是服务端和客户端分别打开了不同的文件，然后各自写对方的文件，读自己的文件，还是说打开是同一个文件，读和写。","like_count":0,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465881,"discussion_content":"不同的文件","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567476795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114959,"user_name":"咖啡猫口里的咖啡猫🐱","can_delete":false,"product_type":"c1","uid":1036565,"ip_address":"","ucode":"FE2441B3A40375","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d1/15/7d47de48.jpg","comment_is_top":false,"comment_ctime":1563439079,"is_pvip":false,"replies":[{"id":"46571","content":"可以offload给硬件","user_name":"作者回复","comment_id":114959,"uid":"1001590","ip_address":"","utype":1,"ctime":1566358780,"user_name_real":"刘超@网易云"}],"discussion_count":1,"race_medal":0,"score":"1563439079","product_id":100024701,"comment_content":"其实我对tcp和udp的理解就是tcp协议栈由分段maxsegment(握手阶段的附加)，自己尽量来处理最大MTU问题，尽量防止ip分片，对端网络层组包，从而导致的tcp应用使用协议需要考虑处理分包，粘包。","like_count":0,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458901,"discussion_content":"可以offload给硬件","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566358780,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111659,"user_name":"Geek_92c4e9","can_delete":false,"product_type":"c1","uid":1528916,"ip_address":"","ucode":"44A3E2929E3C3E","user_header":"","comment_is_top":false,"comment_ctime":1562579401,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1562579401","product_id":100024701,"comment_content":"超级棒","like_count":0},{"had_liked":false,"id":110494,"user_name":"bo","can_delete":false,"product_type":"c1","uid":1368074,"ip_address":"","ucode":"B1D7177830DE07","user_header":"https://static001.geekbang.org/account/avatar/00/14/e0/0a/bf7ece06.jpg","comment_is_top":false,"comment_ctime":1562287997,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1562287997","product_id":100024701,"comment_content":"老师好！udp中的connect背后做了什么工作？","like_count":0,"discussions":[{"author":{"id":1318941,"avatar":"https://static001.geekbang.org/account/avatar/00/14/20/1d/0c1a184c.jpg","nickname":"罗辑思维","note":"","ucode":"D257A06EDE928E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200423,"discussion_content":"UDP直接收发，不用维护连接。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583680031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}