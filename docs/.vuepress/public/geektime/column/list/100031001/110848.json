{"id":110848,"title":"14 | 经典布局：如何定义子控件在父容器中排版的位置？","content":"<p>你好，我是陈航。</p><p>在前面两篇文章中，我们一起学习了构建视图的基本元素：文本、图片和按钮，用于展示一组连续视图元素的ListView，以及处理多重嵌套的可滚动视图的CustomScrollView。</p><p>在Flutter中，一个完整的界面通常就是由这些小型、单用途的基本控件元素依据特定的布局规则堆砌而成的。那么今天，我就带你一起学习一下，在Flutter中，搭建出一个漂亮的布局，我们需要了解哪些布局规则，以及这些规则与其他平台类似概念的差别在哪里。希望这样的设计，可以帮助你站在已有经验的基础上去高效学习Flutter的布局规则。</p><p>我们已经知道，在Flutter中一切皆Widget，那么布局也不例外。但与基本控件元素不同，布局类的Widget并不会直接呈现视觉内容，而是作为承载其他子Widget的容器。</p><p>这些布局类的Widget，内部都会包含一个或多个子控件，并且都提供了摆放子控件的不同布局方式，可以实现子控件的对齐、嵌套、层叠和缩放等。而我们要做的就是，通过各种定制化的参数，将其内部的子Widget依照自己的布局规则放置在特定的位置上，最终形成一个漂亮的布局。</p><p>Flutter提供了31种<a href=\"https://flutter.dev/docs/development/ui/widgets/layout\">布局Widget</a>，对布局控件的划分非常详细，一些相同（或相似）的视觉效果可以通过多种布局控件实现，因此布局类型相比原生Android、iOS平台多了不少。比如，Android布局一般就只有FrameLayout、LinearLayout、RelativeLayout、GridLayout和TableLayout这5种，而iOS的布局更少，只有Frame布局和自动布局两种。</p><!-- [[[read_end]]] --><p>为了帮你建立起对布局类Widget的认知，了解基本布局类Widget的布局特点和用法，从而学以致用快速上手开发，在今天的这篇文章中，我特意挑选了几类在开发Flutter应用时，最常用也最有代表性的布局Widget，包括单子Widget布局、多子Widget布局、层叠Widget布局，与你展开介绍。</p><p>掌握了这些典型的Widget，你也就基本掌握了构建一个界面精美的App所需要的全部布局方式了。接下来，我们就先从单子Widget布局聊起吧。</p><h2>单子Widget布局：Container、Padding与Center</h2><p>单子Widget布局类容器比较简单，一般用来对其唯一的子Widget进行样式包装，比如限制大小、添加背景色样式、内间距、旋转变换等。这一类布局Widget，包括Container、Padding与Center三种。</p><p>Container，是一种允许在其内部添加其他控件的控件，也是UI框架中的一个常见概念。</p><p>在Flutter中，Container本身可以单独作为控件存在（比如单独设置背景色、宽高），也可以作为其他控件的父级存在：Container可以定义布局过程中子Widget如何摆放，以及如何展示。与其他框架不同的是，<strong>Flutter的Container仅能包含一个子Widget</strong>。</p><p>所以，对于多个子Widget的布局场景，我们通常会这样处理：先用一个根Widget去包装这些子Widget，然后把这个根Widget放到Container中，再由Container设置它的对齐alignment、边距padding等基础属性和样式属性。</p><p>接下来，我通过一个示例，与你演示如何定义一个Container。</p><p>在这个示例中，我将一段较长的文字，包装在一个红色背景、圆角边框的、固定宽高的Container中，并分别设置了Container的外边距（距离其父Widget的边距）和内边距（距离其子Widget的边距）：</p><pre><code>Container(\n  child: Text('Container（容器）在UI框架中是一个很常见的概念，Flutter也不例外。'),\n  padding: EdgeInsets.all(18.0), // 内边距\n  margin: EdgeInsets.all(44.0), // 外边距\n  width: 180.0,\n  height:240,\n  alignment: Alignment.center, // 子Widget居中对齐\n  decoration: BoxDecoration( //Container样式\n    color: Colors.red, // 背景色\n    borderRadius: BorderRadius.circular(10.0), // 圆角边框\n  ),\n)\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/fa/f7/fad72eb6917be0062df5a46a104f3ff7.png?wh=828*1792\" alt=\"\"></p><center><span class=\"reference\">图1 Container示例</span></center><p>如果我们只需要将子Widget设定间距，则可以使用另一个单子容器控件Padding进行内容填充：</p><pre><code>Padding(\n  padding: EdgeInsets.all(44.0),\n  child: Text('Container（容器）在UI框架中是一个很常见的概念，Flutter也不例外。'),\n);\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/24/ae/24a18be98054d93ddf8989aac1a5a5ae.png?wh=828*1792\" alt=\"\"></p><center><span class=\"reference\">图2 Padding示例</span></center><p>在需要设置内容间距时，我们可以通过EdgeInsets的不同构造函数，分别制定四个方向的不同补白方式，如均使用同样数值留白、只设置左留白或对称方向留白等。如果你想更深入地了解这部分内容，可以参考这个<a href=\"https://api.flutter.dev/flutter/painting/EdgeInsets-class.html#constructors\">API文档</a>。</p><p>接下来，我们再来看看单子Widget布局容器中另一个常用的容器Center。正如它的名字一样，Center会将其子Widget居中排列。</p><p>比如，我们可以把一个Text包在Center里，实现居中展示：</p><pre><code>Scaffold(\n  body: Center(child: Text(&quot;Hello&quot;)) // This trailing comma makes auto-formatting nicer for build methods.\n);\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/c5/65/c500408d7df10249494a2a90cb815a65.png?wh=1440*2560\" alt=\"\"></p><center><span class=\"reference\">图3 Center示例</span></center><p>需要注意的是，为了实现居中布局，Center所占据的空间一定要比其子Widget要大才行，这也是显而易见的：如果Center和其子Widget一样大，自然就不需要居中，也没空间居中了。因此Center通常会结合Container一起使用。</p><p>现在，我们结合Container，一起看看Center的具体使用方法吧。</p><pre><code>Container(\n  child: Center(child: Text('Container（容器）在UI框架中是一个很常见的概念，Flutter也不例外。')),\n  padding: EdgeInsets.all(18.0), // 内边距\n  margin: EdgeInsets.all(44.0), // 外边距\n  width: 180.0,\n  height:240,\n  decoration: BoxDecoration( //Container样式\n    color: Colors.red, // 背景色\n    borderRadius: BorderRadius.circular(10.0), // 圆角边框\n  ),\n);\n</code></pre><p>可以看到，我们通过Center容器实现了Container容器中<strong>alignment: Alignment.center</strong>的效果。</p><p>事实上，为了达到这一效果，Container容器与Center容器底层都依赖了同一个容器Align，通过它实现子Widget的对齐方式。Align的使用也比较简单，如果你想深入了解的话，可以参考<a href=\"https://api.flutter.dev/flutter/widgets/Align-class.html\">官方文档</a>，这里我就不再过多介绍了。</p><p>接下来，我们再看看多子Widget布局的三种方式，即Row、Column与Expanded。</p><h2>多子Widget布局：Row、Column与Expanded</h2><p>对于拥有多个子Widget的布局类容器而言，其布局行为无非就是两种规则的抽象：水平方向上应该如何布局、垂直方向上应该如何布局。</p><p>如同Android的LinearLayout、前端的Flex布局一样，Flutter中也有类似的概念，即将子Widget按行水平排列的Row，按列垂直排列的Column，以及负责分配这些子Widget在布局方向（行/列）中剩余空间的Expanded。</p><p>Row与Column的使用方法很简单，我们只需要将各个子Widget按序加入到children数组即可。在下面的代码中，我们把4个分别设置了不同的颜色和宽高的Container加到Row与Column中：</p><pre><code>//Row的用法示范\nRow(\n  children: &lt;Widget&gt;[\n    Container(color: Colors.yellow, width: 60, height: 80,),\n    Container(color: Colors.red, width: 100, height: 180,),\n    Container(color: Colors.black, width: 60, height: 80,),\n    Container(color: Colors.green, width: 60, height: 80,),\n  ],\n);\n\n//Column的用法示范\nColumn(\n  children: &lt;Widget&gt;[\n    Container(color: Colors.yellow, width: 60, height: 80,),\n    Container(color: Colors.red, width: 100, height: 180,),\n    Container(color: Colors.black, width: 60, height: 80,),\n    Container(color: Colors.green, width: 60, height: 80,),\n  ],\n);\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/90/72/909ad17a65cad573bca0c84c09b7fc72.png?wh=828*1792\" alt=\"\"></p><center> <span class=\"reference\">(a)Row示例</span></center><p><img src=\"https://static001.geekbang.org/resource/image/9a/86/9a1bd0067d1bbb03d5ab74f411afae86.png?wh=828*1792\" alt=\"\"></p><center><span class=\"reference\">(b)Column示例</span></center><center>图4 Row与Column示例</center><p>可以看到，单纯使用Row和Column控件，在子Widget的尺寸较小时，无法将容器填满，视觉样式比较难看。对于这样的场景，我们可以通过Expanded控件，来制定分配规则填满容器的剩余空间。</p><p>比如，我们希望Row组件（或Column组件）中的绿色容器与黄色容器均分剩下的空间，于是就可以设置它们的弹性系数参数flex都为1，这两个Expanded会按照其flex的比例（即1：1）来分割剩余的Row横向（Column纵向）空间：</p><pre><code>Row(\n  children: &lt;Widget&gt;[\n    Expanded(flex: 1, child: Container(color: Colors.yellow, height: 60)), //设置了flex=1，因此宽度由Expanded来分配\n    Container(color: Colors.red, width: 100, height: 180,),\n    Container(color: Colors.black, width: 60, height: 80,),\n    Expanded(flex: 1, child: Container(color: Colors.green,height: 60),)/设置了flex=1，因此宽度由Expanded来分配\n  ],\n);\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/0e/04/0ed3fba81215150607edddaafbe9b304.png?wh=828*1792\" alt=\"\"></p><center><span class=\"reference\">图5 Expanded控件示例</span></center><p>于Row与Column而言，Flutter提供了依据坐标轴的布局对齐行为，即根据布局方向划分出主轴和纵轴：主轴，表示容器依次摆放子Widget的方向；纵轴，则是与主轴垂直的另一个方向。</p><p><img src=\"https://static001.geekbang.org/resource/image/61/09/610157c35f4457a7fffa2005ea144609.png?wh=880*570\" alt=\"\"></p><center><span class=\"reference\">图6 Row和Column控件的主轴与纵轴</span></center><p>我们可以根据主轴与纵轴，设置子Widget在这两个方向上的对齐规则mainAxisAlignment与crossAxisAlignment。比如，主轴方向start表示靠左对齐、center表示横向居中对齐、end表示靠右对齐、spaceEvenly表示按固定间距对齐；而纵轴方向start则表示靠上对齐、center表示纵向居中对齐、end表示靠下对齐。</p><p>下图展示了在Row中设置不同方向的对齐规则后的呈现效果：</p><p><img src=\"https://static001.geekbang.org/resource/image/9f/87/9f3a8a9e197b350f6c0aad6f5195fc87.png?wh=3312*1792\" alt=\"\"></p><center><span class=\"reference\">图7 Row的主轴对齐方式</span></center><p><img src=\"https://static001.geekbang.org/resource/image/d8/9b/d8fc6d0aa98be8a6b1867b24a833b89b.png?wh=2484*1792\" alt=\"\"></p><center><span class=\"reference\">图8 Row的纵轴对齐方式</span></center><p>Column的对齐方式也是类似的，我就不再过多展开了。</p><p>这里需要注意的是，对于主轴而言，Flutter默认是让父容器决定其长度，即尽可能大，类似Android中的match_parent。</p><p>在上面的例子中，Row的宽度为屏幕宽度，Column的高度为屏幕高度。主轴长度大于所有子Widget的总长度，意味着容器在主轴方向的空间比子Widget要大，这也是我们能通过主轴对齐方式设置子Widget布局效果的原因。</p><p>如果想让容器与子Widget在主轴上完全匹配，我们可以通过设置Row的mainAxisSize参数为MainAxisSize.min，由所有子Widget来决定主轴方向的容器长度，即主轴方向的长度尽可能小，类似Android中的wrap_content：</p><pre><code>Row(\n  mainAxisAlignment: MainAxisAlignment.spaceEvenly, //由于容器与子Widget一样宽，因此这行设置排列间距的代码并未起作用\n  mainAxisSize: MainAxisSize.min, //让容器宽度与所有子Widget的宽度一致\n  children: &lt;Widget&gt;[\n    Container(color: Colors.yellow, width: 60, height: 80,),\n    Container(color: Colors.red, width: 100, height: 180,),\n    Container(color: Colors.black, width: 60, height: 80,),\n    Container(color: Colors.green, width: 60, height: 80,),\n  ],\n)\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/d8/96/d8d9cc480386bd11e60da51ddc081696.png?wh=1656*1792\" alt=\"\"></p><center><span class=\"reference\">图9 Row 的主轴大小</span></center><p>可以看到，我们设置了主轴大小为MainAxisSize.min之后，Row的宽度变得和其子Widget一样大，因此再设置主轴的对齐方式也就不起作用了。</p><h2>层叠Widget布局：Stack与Positioned</h2><p>有些时候，我们需要让一个控件叠加在另一个控件的上面，比如在一张图片上放置一段文字，又或者是在图片的某个区域放置一个按钮。这时候，我们就需要用到层叠布局容器Stack了。</p><p>Stack容器与前端中的绝对定位、Android中的Frame布局非常类似，子Widget之间允许叠加，还可以根据父容器上、下、左、右四个角的位置来确定自己的位置。</p><p><strong>Stack提供了层叠布局的容器，而Positioned则提供了设置子Widget位置的能力</strong>。接下来，我们就通过一个例子来看一下Stack和Positioned的具体用法吧。</p><p>在这个例子中，我先在Stack中放置了一块300<em>300的黄色画布，随后在(18,18)处放置了一个50</em>50的绿色控件，然后在(18,70)处放置了一个文本控件。</p><pre><code>Stack(\n  children: &lt;Widget&gt;[\n    Container(color: Colors.yellow, width: 300, height: 300),//黄色容器\n    Positioned(\n      left: 18.0,\n      top: 18.0,\n      child: Container(color: Colors.green, width: 50, height: 50),//叠加在黄色容器之上的绿色控件\n    ),\n    Positioned(\n      left: 18.0,\n      top:70.0,\n      child: Text(&quot;Stack提供了层叠布局的容器&quot;),//叠加在黄色容器之上的文本\n    )\n  ],\n)\n</code></pre><p>试着运行一下，可以看到，这三个子Widget都按照我们预定的规则叠加在一起了。</p><p><img src=\"https://static001.geekbang.org/resource/image/bb/36/bb046cc53ea595a02a564a4387a99c36.png?wh=828*1792\" alt=\"\"></p><center><span class=\"reference\">图10 Stack与Positioned容器示例</span></center><p>Stack控件允许其子Widget按照创建的先后顺序进行层叠摆放，而Positioned控件则用来控制这些子Widget的摆放位置。需要注意的是，Positioned控件只能在Stack中使用，在其他容器中使用会报错。</p><h2>总结</h2><p>Flutter的布局容器强大而丰富，可以将小型、单用途的基本视觉元素快速封装成控件。今天我选取了Flutter中最具代表性，也最常用的几类布局Widget，与你介绍了构建一个界面精美的App所需要的布局概念。</p><p>接下来，我们简单回顾一下今天的内容，以便加深理解与记忆：</p><p>首先，我们认识了单子容器Container、Padding与Center。其中，Container内部提供了间距、背景样式等基础属性，为子Widget的摆放方式，及展现样式都提供了定制能力。而Padding与Center提供的功能，则正如其名一样简洁，就是对齐与居中。</p><p>然后，我们深入学习了多子Widget布局中的Row和Column，各子Widget间对齐的规则，以及容器自身扩充的规则，以及如何通过Expanded控件使用容器内部的剩余空间，</p><p>最后，我们学习了层叠布局Stack，以及与之搭配使用的，定位子Widget位置的Positioned容器，你可以通过它们，实现多个控件堆放的布局效果。</p><p>通过今天的文章，相信你已经对如何搭建App的界面有了足够的知识储备，所以在下一篇文章中，我会通过一些实际的例子，带你认识在Flutter中，如何通过这些基本控件与布局规则，实现好看的界面。</p><h2>思考题</h2><p>最后，我给你留下一道思考题吧。</p><p>Row与Column自身的大小是如何决定的？当它们嵌套时，又会出现怎样的情况呢？</p><p>欢迎你在评论区给我留言分享你的观点，我会在下一篇文章中等待你！感谢你的收听，也欢迎你把这篇文章分享给更多的朋友一起阅读。</p>","neighbors":{"left":{"article_title":"13 | 经典控件（二）：UITableView/ListView在Flutter中是什么？","id":110859},"right":{"article_title":"15 | 组合与自绘，我该选用何种方式自定义Widget？","id":111673}},"comments":[{"had_liked":false,"id":120863,"user_name":"江宁彭于晏","can_delete":false,"product_type":"c1","uid":1587442,"ip_address":"","ucode":"248C7BB01921F3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epxMjZcn8LFy6PIT7uGzUOHTCZosTwh39jBKlyW3Ffzyscm14PQGh3QZ1GrEGF4UWxwKZrAib8AXCA/132","comment_is_top":false,"comment_ctime":1565007212,"is_pvip":false,"replies":[{"id":"44444","content":"赞","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1565019325,"ip_address":"","comment_id":120863,"utype":1}],"discussion_count":2,"race_medal":0,"score":"87464353132","product_id":100031001,"comment_content":"Row 与 Column 自身的大小由父widget的大小、子widget的大小、以及mainSize设置共同决定（mainAxisSize和crossAxisSize)<br>-主轴（纵轴）值为max：主轴（纵轴）大小等于屏幕主轴（纵轴）方向大小或者父widget主轴（纵轴）方向大小<br>-主轴（纵轴）值为min： 所有子widget组合在一起的主轴（纵轴）大小","like_count":21,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461508,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565019325,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1242602,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f5/ea/5f046856.jpg","nickname":"Dale","note":"","ucode":"AD19A33FE5EEDF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382706,"discussion_content":"没有 crossAxisSize 这一项吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625676356,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":128551,"user_name":"爱吃胡萝卜","can_delete":false,"product_type":"c1","uid":1459413,"ip_address":"","ucode":"35FCF84D1E04C5","user_header":"https://static001.geekbang.org/account/avatar/00/16/44/d5/ca522e83.jpg","comment_is_top":false,"comment_ctime":1566899964,"is_pvip":false,"replies":[{"id":"47828","content":"这个观点很新颖","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1566968875,"ip_address":"","comment_id":128551,"utype":1}],"discussion_count":2,"race_medal":0,"score":"35926638332","product_id":100031001,"comment_content":"个人看来ios布局最核心的就是求解线性方程组，ios的uiview是不解耦的，属性配置，布局，交互都在一起。flutter 直接在系统层面进行解耦，分别对应装饰者模式,布局widget和交互接口，从系统设计层面进行解耦，更有利于程序健壮性和可读性","like_count":9,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464993,"discussion_content":"这个观点很新颖","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566968875,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1055819,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1c/4b/2e5df06f.jpg","nickname":"三件事","note":"","ucode":"BCC867C8961A24","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306553,"discussion_content":"������������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600316833,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":250315,"user_name":"jayce","can_delete":false,"product_type":"c1","uid":1330907,"ip_address":"","ucode":"70ACD13415EA8F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epk6XJfVGqsW1b5oiatsuvSRkCF4yo2KxSUSf5LHRRTbuCPKJrRiblqRbMZBuicQMgDTO1bRp6vXW7Lg/132","comment_is_top":false,"comment_ctime":1601022076,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23075858556","product_id":100031001,"comment_content":"没有类似Android的ConstraintLayout和ios Masonry（相对于同级控件布局，父控件，百分比等）么？<br>大量使用Row, Column,Box，Center，层级嵌套感觉很多","like_count":6},{"had_liked":false,"id":118889,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1564458543,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14449360431","product_id":100031001,"comment_content":"老师讲得真好，之前看了很多Flutter布局的书，都没有讲到要点，看了老师这篇文章，真的是醍醐灌顶啊！","like_count":4,"discussions":[{"author":{"id":2387041,"avatar":"https://static001.geekbang.org/account/avatar/00/24/6c/61/6cc35b18.jpg","nickname":"逐浪之鱼","note":"","ucode":"E4155120628754","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341513,"discussion_content":"你这个就夸张了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610442408,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119014,"user_name":"锦旗小能猫","can_delete":false,"product_type":"c1","uid":1205530,"ip_address":"","ucode":"527AD041591AEB","user_header":"https://static001.geekbang.org/account/avatar/00/12/65/1a/5f3d7f5f.jpg","comment_is_top":false,"comment_ctime":1564486140,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10154420732","product_id":100031001,"comment_content":"看其他资料不会举例子所以有时候看的一头雾水，陈航老师就会举例子，让人一看就知道就是这么回事，很棒","like_count":2},{"had_liked":false,"id":201135,"user_name":"美美","can_delete":false,"product_type":"c1","uid":1148422,"ip_address":"","ucode":"44CC95C45AF345","user_header":"https://static001.geekbang.org/account/avatar/00/11/86/06/72b01bb7.jpg","comment_is_top":false,"comment_ctime":1585721638,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5880688934","product_id":100031001,"comment_content":"👍","like_count":1},{"had_liked":false,"id":146024,"user_name":"颜为晨","can_delete":false,"product_type":"c1","uid":1596031,"ip_address":"","ucode":"8109E7B392684D","user_header":"https://static001.geekbang.org/account/avatar/00/18/5a/7f/c50d520e.jpg","comment_is_top":false,"comment_ctime":1572421263,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5867388559","product_id":100031001,"comment_content":"cross axis 好像是横轴😁","like_count":1,"discussions":[{"author":{"id":2812934,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/ec/06/4494ecde.jpg","nickname":"jk001","note":"","ucode":"FF1E3A2883E8D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589602,"discussion_content":"是主轴的交叉轴","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665191430,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118890,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1564458738,"is_pvip":false,"replies":[{"id":"44443","content":"还有子Widget","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1565019307,"ip_address":"","comment_id":118890,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5859426034","product_id":100031001,"comment_content":"自身大小由主轴的大小属性确定，MainAxisSize.max。当它们嵌套时，还是按照自身的属性，确定主轴、纵轴、和自己的定位。","like_count":1,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460642,"discussion_content":"还有子Widget","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565019307,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":275109,"user_name":"暖风","can_delete":false,"product_type":"c1","uid":1303029,"ip_address":"","ucode":"F7260F1D31F238","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLvlwicFIhWEcwqOxHWhibWzx50icMA5HiboB872gDMRSfMG2GR1O6mCR1X5k57OHQ5n69zjErG60p0PA/132","comment_is_top":false,"comment_ctime":1611309430,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611309430","product_id":100031001,"comment_content":"Padding(<br>                padding: EdgeInsets.all(44.0),<br>                child: Text(<br>                  &#39;Container（容器）在UI框&#39;,<br>                  textAlign: TextAlign.left,<br>                )),<br>文字设置居左对齐，在文字内容比较少的时候，整体还是剧中的，这种情况怎么处理呀，有没有什么简单的属性配置就可以保证一直居左，而不是通过套widget或固定宽高的方式？","like_count":0},{"had_liked":false,"id":266421,"user_name":"Sen","can_delete":false,"product_type":"c1","uid":1044125,"ip_address":"","ucode":"BB3E210A5BBAD4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/9d/860cc8b7.jpg","comment_is_top":false,"comment_ctime":1607331401,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1607331401","product_id":100031001,"comment_content":"老师总结得很到位，刚从android转过来，感觉每每需要调整一下padding或者margin时，又需要加入层Widget套娃，这一次感觉有些逆思维，不太友好","like_count":0,"discussions":[{"author":{"id":1547557,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9d/25/cc8a81c8.jpg","nickname":"衣知世 与 计知白","note":"","ucode":"D8926B316DA378","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336718,"discussion_content":"学习过前端之后你会发现，div无处不在，跟flutter的嵌套很类似，主要是构建树结构更方便些，也更容易管理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608686937,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":263476,"user_name":"Random","can_delete":false,"product_type":"c1","uid":1630111,"ip_address":"","ucode":"4E164C8CF487FA","user_header":"https://static001.geekbang.org/account/avatar/00/18/df/9f/6db75dff.jpg","comment_is_top":false,"comment_ctime":1606141239,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606141239","product_id":100031001,"comment_content":"Fluttet的UI部分对web前端很友好，插件部分对原生开发人员很友好。在UI开发上，web方案已经经过考验了","like_count":0},{"had_liked":false,"id":231496,"user_name":"Summer","can_delete":false,"product_type":"c1","uid":2037797,"ip_address":"","ucode":"129644D7E557C5","user_header":"https://static001.geekbang.org/account/avatar/00/1f/18/25/7c7e63bd.jpg","comment_is_top":false,"comment_ctime":1593687820,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593687820","product_id":100031001,"comment_content":"Row 和 Column应该类似于iOS中的StackView吧","like_count":1},{"had_liked":false,"id":140550,"user_name":"sixgod","can_delete":false,"product_type":"c1","uid":1375116,"ip_address":"","ucode":"43D67B62AEA126","user_header":"https://static001.geekbang.org/account/avatar/00/14/fb/8c/ffc4215e.jpg","comment_is_top":false,"comment_ctime":1570982696,"is_pvip":false,"replies":[{"id":"54848","content":"Align也可以","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1571290971,"ip_address":"","comment_id":140550,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1570982696","product_id":100031001,"comment_content":"想要让某个widget固定在页面某个位置的话需要用stack把整个页面包起来吗","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470435,"discussion_content":"Align也可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571290971,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133901,"user_name":"面向加薪学习","can_delete":false,"product_type":"c1","uid":1108117,"ip_address":"","ucode":"5164A1DF058AC5","user_header":"https://static001.geekbang.org/account/avatar/00/10/e8/95/13b88119.jpg","comment_is_top":false,"comment_ctime":1568692689,"is_pvip":false,"replies":[{"id":"51770","content":"绝对定位其实最终也是相对于父widget的大小进行定位，所以只要确保这个前提就能保证ui适配的安全性了","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1568962530,"ip_address":"","comment_id":133901,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568692689","product_id":100031001,"comment_content":"Stack 容器与前端中的绝对定位<br>请教一下，这个如果在适配不同设备的时候，会不会有问题？","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467549,"discussion_content":"绝对定位其实最终也是相对于父widget的大小进行定位，所以只要确保这个前提就能保证ui适配的安全性了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568962530,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130522,"user_name":"浣熊特工队","can_delete":false,"product_type":"c1","uid":1600719,"ip_address":"","ucode":"0EF7CB66397647","user_header":"https://static001.geekbang.org/account/avatar/00/18/6c/cf/baa4ee4d.jpg","comment_is_top":false,"comment_ctime":1567477710,"is_pvip":false,"replies":[{"id":"48922","content":"用Expanded就可以呀","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1567517844,"ip_address":"","comment_id":130522,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567477710","product_id":100031001,"comment_content":"请问老师，如何设置一个Widget的宽度为百分比大小呢？","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465993,"discussion_content":"用Expanded就可以呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567517844,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129562,"user_name":"Zxt","can_delete":false,"product_type":"c1","uid":1623736,"ip_address":"","ucode":"F5AE69082E8324","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqJV94SB9GY6ErM23QZ3jbYY7eIqbhoWHIMR2uusibj2Jib0CvAj64MLibkjwcCN6tOdgfW6dfNPpuhw/132","comment_is_top":false,"comment_ctime":1567154651,"is_pvip":false,"replies":[{"id":"50739","content":"Stack+Positioned做相对布局就可以了呀，父视图位置即使再不固定，你在布局子Widget时也是需要相对父Widget的边界进行排版的","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1568182721,"ip_address":"","comment_id":129562,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567154651","product_id":100031001,"comment_content":"请问子视图绝对定位布局时需要父视图的size，但获取size时会报错原因大概是父视图还没有渲染完成，这种情况应该怎么解决呢？ 父视图尺寸不固定","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465541,"discussion_content":"Stack+Positioned做相对布局就可以了呀，父视图位置即使再不固定，你在布局子Widget时也是需要相对父Widget的边界进行排版的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568182721,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":128984,"user_name":"Cm trésor","can_delete":false,"product_type":"c1","uid":1187292,"ip_address":"","ucode":"CF4E11BCCE0D26","user_header":"https://static001.geekbang.org/account/avatar/00/12/1d/dc/a0badec7.jpg","comment_is_top":false,"comment_ctime":1567000987,"is_pvip":false,"replies":[{"id":"48093","content":"试试Stack+Positioned+IntrinsicWidth","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1567077738,"ip_address":"","comment_id":128984,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1567000987","product_id":100031001,"comment_content":"老师，你好，我在一个高度不固定的容器里画一条与容器等高的线该如何实现？尝试了好久都不行","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465209,"discussion_content":"试试Stack+Positioned+IntrinsicWidth","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567077738,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1187292,"avatar":"https://static001.geekbang.org/account/avatar/00/12/1d/dc/a0badec7.jpg","nickname":"Cm trésor","note":"","ucode":"CF4E11BCCE0D26","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6811,"discussion_content":"我试下了在普通的容器里面是可以的，但是放到listview 里面就不可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567128216,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123683,"user_name":"罗勇","can_delete":false,"product_type":"c1","uid":1104541,"ip_address":"","ucode":"A793FCC06AD34C","user_header":"https://static001.geekbang.org/account/avatar/00/10/da/9d/0b1fb44c.jpg","comment_is_top":false,"comment_ctime":1565743647,"is_pvip":false,"replies":[{"id":"47641","content":"Stack和Positioned其实和Framelayout和RelativeLayout更像","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1566891396,"ip_address":"","comment_id":123683,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1565743647","product_id":100031001,"comment_content":"与安卓布局大致对应关系：<br>Row&#47;Column  -&gt; LinearLayout<br>Stack -&gt; RelativeLayout<br>Positoned -&gt; AbsoluteLayout","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462768,"discussion_content":"Stack和Positioned其实和Framelayout和RelativeLayout更像","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566891396,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1313651,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0b/73/4f1c9676.jpg","nickname":"舒大飞","note":"","ucode":"5CC2E0F8C40E38","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":21887,"discussion_content":"RelativeLayout可以设置子控件间的相对位置，Flutter里好像都是相对于父控件的相对位置？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569551073,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122945,"user_name":"爱吃胡萝卜","can_delete":false,"product_type":"c1","uid":1459413,"ip_address":"","ucode":"35FCF84D1E04C5","user_header":"https://static001.geekbang.org/account/avatar/00/16/44/d5/ca522e83.jpg","comment_is_top":false,"comment_ctime":1565577200,"is_pvip":false,"replies":[{"id":"47640","content":"最大的区别可能就是对于布局能力的扩展支持上。Flutter与原生在不同的布局行为上定义了常见的基本容器，不过对待特殊的布局样式，原生可以通过设置基本容器的属性搞定，而Flutter则会选择在外层再包装一层布局样式，通过组合搞定。","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1566891282,"ip_address":"","comment_id":122945,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1565577200","product_id":100031001,"comment_content":"能不能抽空讲讲flutter 和ios以及aos布局思维方式的差异，因为经常使用自动布局，导致在写flutter 的时候各种布局错误。<br>","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462468,"discussion_content":"最大的区别可能就是对于布局能力的扩展支持上。Flutter与原生在不同的布局行为上定义了常见的基本容器，不过对待特殊的布局样式，原生可以通过设置基本容器的属性搞定，而Flutter则会选择在外层再包装一层布局样式，通过组合搞定。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566891282,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1055819,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1c/4b/2e5df06f.jpg","nickname":"三件事","note":"","ucode":"BCC867C8961A24","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306556,"discussion_content":"这个问题很棒，我也想知道他们的差异是哪些？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600317027,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1055819,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1c/4b/2e5df06f.jpg","nickname":"三件事","note":"","ucode":"BCC867C8961A24","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306554,"discussion_content":"aos布局是什么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600316923,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120809,"user_name":"Mr.J","can_delete":false,"product_type":"c1","uid":1267172,"ip_address":"","ucode":"372D8C614F6C3D","user_header":"https://static001.geekbang.org/account/avatar/00/13/55/e4/7061abd5.jpg","comment_is_top":false,"comment_ctime":1564998830,"is_pvip":false,"replies":[{"id":"44414","content":"多试试几个不同尺寸的模拟器","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1565016806,"ip_address":"","comment_id":120809,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1564998830","product_id":100031001,"comment_content":"老师您好，在Fluuter中布局的时候，经常碰到大小超出范围，有时候在这个模拟器上运行没事，运行到别的设备上就会有提示说布局超出范围，这个问题要怎么注意呢","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461491,"discussion_content":"多试试几个不同尺寸的模拟器","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565016806,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1595129,"avatar":"https://static001.geekbang.org/account/avatar/00/18/56/f9/597cc541.jpg","nickname":"kennen","note":"","ucode":"FD89DB480C1D99","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":50993,"discussion_content":"有个IntrinsicHeight，不过官方说这个尽量少用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573797557,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119954,"user_name":"Ω","can_delete":false,"product_type":"c1","uid":1603583,"ip_address":"","ucode":"6117ADE46C6FC3","user_header":"https://static001.geekbang.org/account/avatar/00/18/77/ff/4ce0aa51.jpg","comment_is_top":false,"comment_ctime":1564736917,"is_pvip":false,"replies":[{"id":"44423","content":"试试Flutter inspector","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1565017406,"ip_address":"","comment_id":119954,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1564736917","product_id":100031001,"comment_content":"使用 Android studio 如何在手机屏幕上查看控件所占有的位置大小","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461147,"discussion_content":"试试Flutter inspector","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565017406,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1016375,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erqwaa4MlBjfDRwwfyQHksv5AdiaG6EKoicYqToo09uxmjXWQmUOG0QPXKOXn6FLibLBtfvxLq2dNpDg/132","nickname":"jp1017","note":"","ucode":"2B03ECC05ED023","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3968,"discussion_content":"as右侧编译器有flutter inspect，有个按钮，自己找找看","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1565010072,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119913,"user_name":"Dendi","can_delete":false,"product_type":"c1","uid":1596297,"ip_address":"","ucode":"B87A493CAF64EC","user_header":"https://static001.geekbang.org/account/avatar/00/18/5b/89/b4f6caef.jpg","comment_is_top":false,"comment_ctime":1564728140,"is_pvip":false,"replies":[{"id":"44426","content":"是的，如果Text的top再往上移一些就叠加了","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1565017656,"ip_address":"","comment_id":119913,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1564728140","product_id":100031001,"comment_content":"Stack布局中最下面一行文字应该是叠加在绿色视图上的吧，只是由于位置的原因向下偏移了","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461127,"discussion_content":"是的，如果Text的top再往上移一些就叠加了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565017656,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119333,"user_name":"Tidom","can_delete":false,"product_type":"c1","uid":1604283,"ip_address":"","ucode":"8EEFF573548130","user_header":"https://static001.geekbang.org/account/avatar/00/18/7a/bb/26a3c848.jpg","comment_is_top":false,"comment_ctime":1564564076,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564564076","product_id":100031001,"comment_content":"满满的干货","like_count":0},{"had_liked":false,"id":118902,"user_name":"Running","can_delete":false,"product_type":"c1","uid":1006392,"ip_address":"","ucode":"6377B6BD1F01FF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5b/38/42ff18f1.jpg","comment_is_top":false,"comment_ctime":1564463440,"is_pvip":false,"replies":[{"id":"43937","content":"赞","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1564678057,"ip_address":"","comment_id":118902,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1564463440","product_id":100031001,"comment_content":"Row与Column是根据mainSize以及父Widget共同决定，如果父Widget没法确定大小，那么Row与Column就会出错","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460651,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564678057,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}