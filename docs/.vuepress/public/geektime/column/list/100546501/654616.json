{"id":654616,"title":"06｜框架搭建：如何用vue-cli搭建一个前端框架？","content":"<p>你好，我是Barry。</p><p>上节课我们全面分析了平台功能模块和整体技术选型，我们最终会把项目做什么样子，想必你已经了然于胸了。</p><p>从今天开始，我们就要正式写代码了。我们先从前端开始，按现在前端项目的套路，第一步自然要先把平台的框架搭建起来，之后再进行各个功能页面的编写。</p><p>这节课我就结合一个HelloWorld的小案例，带你一起实操搭建。相信通过这节课的学习，你可以掌握从0搭建前端框架的能力，之后就能举一反三，利用框架搭建各类平台前端了。</p><p>话不多说，让我们一起来探索这有趣的搭建过程吧。</p><h2>为什么我们要选择前后端分离？</h2><p>动手搭建框架之前，我们得先来聊聊这个项目的开发模式。Python做全栈开发，其实有两种实现方式。一种就是前后端不分离的模式，通过Flask的模版语法来实现。但是这样做对前端的支持并不全面，另外大多数企业目前也摆脱了这样的模式。</p><p>另一种就是前后端分离的模式，这是现在企业项目里经常采用的开发方式。为什么现在后者更常用呢，我们还得从项目开发的进化过程说起。</p><p>在最初的项目开发过程中，公司没有明确的岗位划分。这意味着一个工程师既要实现后端代码，同时也要完成前端效果呈现的代码编写，具体关系你可以参考我画的这张示意图。</p><!-- [[[read_end]]] --><p><img src=\"https://static001.geekbang.org/resource/image/c3/51/c35c4dfa24bbea4f0e90d50cb6f7c051.jpg?wh=3656x1456\" alt=\"\"></p><p>随着前端技术栈的迭代，Ajax 技术诞生之后，大大推动了Web2.0的快速发展，前端不再是后端的模板，可以独立得到各种数据。前端的页面也越来越动态化，它追求更多交互，同时也需要处理大量的数据，对前端工程师的技术要求也越来越高，前后端的工作也就越来越明晰化，前后端分离模式也就此盛行起来。</p><p>那前后端分离的结构模式是什么样子呢？你可以通过下面这张图来辅助理解。</p><p><img src=\"https://static001.geekbang.org/resource/image/a6/46/a66bd9cfc2d614a3aa94a0326372dc46.jpg?wh=1920x1279\" alt=\"\"></p><h2>前后端分离有什么优势？</h2><p>前后端的分离模式，只是缓解了原先“前端后端全包揽”的工程师们的痛苦吗？显然不止如此，接下来我们就来分析一下，这种模式在开发协作和工程优化方面的优势。</p><p><strong>从开发协作的角度看，</strong>前后端分离带来了两方面好处。首先，工程师的职能划分更加清晰。对于项目中出现的问题，因为分工明确，就可以快速找出问题方，定位问题和解决问题的效率都得到了提升；其次是提升开发效率。此时已经实现了前后端并行开发，前后端不再像以前具有强依赖关系了。前后端各司其职，这既提升了项目的开发效率，同时也让开发人员变得更加精专，不断推进技术的发展。</p><p>而从<strong>工程优化</strong>的角度思考<strong>，</strong>前后端分离的优势也很明显，优点主要有下面四个。</p><p>1.减轻后端服务器的开发和负载压力，让后端更“专注”地发挥自身优势。</p><p>2.前端与后端分别部署在不同服务器上，不会出现一个服务器宕机，前后端都无法访问的情况。即便在数据响应上形成阻断，但是前端界面依旧可以访问，这样大大优化了用户体验。</p><p>3.接口多复用。从上面的关系图中，我们不难发现后端开发侧重产出接口，单个接口可服务多端，同时满足需要该功能的PC网页、APP、小程序、移动端H5等不同终端，真正实现高效开发。</p><p>4.前后端分离之后，对于前端页面是异步加载，前端可以承担更多内容的呈现，页面可以保证速度更加流畅、兼容性、用户体验等。</p><p>通过上面的综合分析，我们不难发现这种模式的种种优点。所以，我们在课程项目中也选择了前后端分离的开发模式，让你在熟练使用Python之外，也熟悉一下企业项目前端技术栈开发的实现思路与大致流程。</p><p>接下来，我们就来看看怎么搭建起一个前端框架。</p><h2>框架搭建准备工作</h2><p>框架的选择自然要匹配项目需求。我们想要实现是一个文化社区交流视频平台，它的核心并不在于数据的管理和操作，而是在于视频内容的呈现、互动、直播等功能，平台包括多个业务模块，而且模块之间往往存在业务逻辑关系，这样才能让平台功能“流动”起来。</p><p>你可以把整个平台想象成一棵树，每个业务功能都是一个树枝，且树枝之间还能联动起来。比如说，在平台的用户视频管理操作界面中，我们可以发起上传视频的操作，也可以回到首屏，你会发现平台各模块都会有相应的关联。</p><p><img src=\"https://static001.geekbang.org/resource/image/a5/bf/a58cea2b563944c5047f2b215bb9cbbf.jpg?wh=2860x1353\" alt=\"\"></p><p>前端框架有很多，比方说iView admin和vue-cli，它们都是基于 Vue.js实现的。不过前者更适合搭配使用iView UI 组件库，实现后台管理系统，不太匹配我们的项目要求。</p><p>而使用 vue-cli 可以快速搭建 Vue 开发环境以及对应的 Webpack 配置，它是Vue的命令行工具，同时也是一个完整的Vue项目核心构成，适用于各类开发平台前端框架的搭建。有了vue-cli脚手架，就能帮你告别冗杂的自我搭建过程。我们只需要根据业务需求，直接在项目框架中进行页面模块和路由的编写和配置，就可以非常便捷地实现项目的功能需求。</p><h3>Node与NPM搭建</h3><p>了解了vue-cli脚手架之后，我们就操练起来。“工欲善其事，必先利其器”，对于框架的搭建来说，什么是它的“器”呢？那就是你的本机环境，它类似于一个培养皿，环境配置好了，就可以直接利用命令来实现脚手架的搭建了。</p><p>前面我们已经说过，vue-cli是Vue的命令行工具，整个安装过程我们要在应用NPM包管理工具进行操作，所以我们需要先安装Node.js。Node.js安装成功之后，我们就可以使用NPM进行搭建了。</p><p>那我们已经在<a href=\"https://time.geekbang.org/column/article/653986\">第四节课</a>Vue概览中详细讲了安装的过程，在这节课我补充一些内容，方便你更好地应用。</p><p><img src=\"https://static001.geekbang.org/resource/image/fb/d8/fbfcd39c170c0d4247fb5c2c5a9fa7d8.jpg?wh=2080x1599\" alt=\"\"></p><p>选好版本以后，我们把安装包下载到本地，双击按操作步骤安装即可。这里要注意一下Windows和macOS系统的差异。</p><p>对于<strong>Windows系统</strong>，你需要单独进行一个环境的配置，在你的Node目录文件下，创建两个文件夹，分别为node_cache和node_global。</p><p><img src=\"https://static001.geekbang.org/resource/image/84/5c/845f22a3066640d2f95a9dea4ec1ed5c.jpg?wh=1976x707\" alt=\"\"></p><p>之后在你的系统配置中，配置环境变量，新建系统变量，按下图进行配置。</p><p><img src=\"https://static001.geekbang.org/resource/image/18/86/1838c7b3daa870caa5d3bfdb44bda386.jpg?wh=1820x584\" alt=\"\"></p><p>接下来就是编辑系统变量path。让我们新建两个变量，一个是Node的位置路径，另一个是设置的NODE_PATH，参考下图进行编辑即可。</p><p><img src=\"https://static001.geekbang.org/resource/image/51/1c/51893e8dccf1f605ee849a659c93131c.jpg?wh=1860x1294\" alt=\"\"></p><p>然后，我们还需要设置用户变量path，值就是node_global的路径，如下图所示。<br>\n<img src=\"https://static001.geekbang.org/resource/image/40/c2/40639bf9643d2b9738e414826b69b3c2.jpg?wh=2900x1620\" alt=\"\"></p><p>完成上述步骤以后，你可以直接在cmd中执行后面的命令。</p><ul>\n<li>node -v：查看Node版本号</li>\n<li>npm -v：查看NPM版本号</li>\n</ul><p>执行命令后，如果你看到了版本号，就说明我们的配置成功了。如果你根据我演示的顺序来操作，安装环节还是很好实现的。</p><h2>vue-cli搭建</h2><p>此时你的环境已经准备好了，接下来就是激动人心的实操搭建环节。</p><h3>第一步 全局安装vue-cli</h3><p>第一步，先在你电脑工作空间中创建一个放置项目的文件夹，所有命令操作一定要保证在该文件路径下。建议你在自己熟悉的开发工具中打开项目文件夹，我这里是直接用的VSCode。</p><p>我们在VSCode中打开一个新的终端，此时路径已经在目标文件下了，全局安装vue-cli。</p><pre><code class=\"language-plain\">  执行命令：npm install --global vue-cli\n</code></pre><p>命令执行完成之后，此时你可以在终端中直接运行vue -V，看到版本号之后，就代表已经安装成功了。</p><h3>第二步：使用Webpack构建项目</h3><p>接下来是第二步，我们要创建一个基于 Webpack 模板的新项目。为什么使用Webpack呢？Webpack是一个模块打包器，我们可以利用Webpack打包各个子项目，然后对项目进行部署，最终实现前端项目工程化。</p><p>在整个构建过程中会有很多的选择操作，为了助力你成功搭建，我给你把这些选项的含义，以及如何选择全部都罗列出来了，方便你按图配置。</p><p><img src=\"https://static001.geekbang.org/resource/image/52/77/52fe52c11dbd37f070c386bc9a4f2e77.jpg?wh=2186x786\" alt=\"\"><br>\n<img src=\"https://static001.geekbang.org/resource/image/14/5c/142304931c6292cb2bfa3895aa084a5c.jpg?wh=3656x2333\" alt=\"\"></p><p>恭喜你！功夫不负有心人，此时你已经完成了vue-cli框架的搭建。<strong>这时控制台会给你提供两个操作命令，代表框架的枝干已经生成了。</strong></p><p><img src=\"https://static001.geekbang.org/resource/image/10/da/108e797f916523e9041df04yy674b5da.jpg?wh=1474x679\" alt=\"\"></p><h3>第三步：运行项目</h3><p>完成上述步骤之后，框架的搭建我们就搞定了。在执行启动命令之前，我们还需要运行npm install命令。这一步操作是必须的，因为在启动之前，我们需要加载Node的第三方的依赖模块，其中加载依赖主要来自项目文件下的package.json文件内的依赖。</p><p>在依赖加载完成之后，你可以在项目路径下执行 <strong>npm run dev</strong>，这是项目在本地启动的命令。</p><p>此时你的控制台会出现下面这样的内容。<br>\n<img src=\"https://static001.geekbang.org/resource/image/d2/aa/d2c04ca57d072c82897498083f7632aa.jpg?wh=2638x1447\" alt=\"\"></p><p>你可以直接在浏览器中输入：localhost:8080，然后就可以看到框架的样子了。</p><p><img src=\"https://static001.geekbang.org/resource/image/66/f9/667ac049277dc8cd36c0e9e21d561cf9.jpg?wh=2638x1462\" alt=\"\"></p><p>框架搭建的整个过程就是这样，是不是有所收获？我们再接再厉，继续折腾。</p><h2>第一个HelloWorld.vue实践</h2><p>俗话说万物都可 “HelloWorld”。接着我们来实现对页面的编辑，这一次实践跑下来，相信你很快就可以自己写页面了。</p><p>首先，你要对文件的目录作用有个清晰的认识。我特意给你准备了下面这张结构图，帮你梳理一下关键的信息。<br>\n<img src=\"https://static001.geekbang.org/resource/image/c0/9a/c0eeed53eaae53b55b8833c105a11b9a.jpg?wh=2082x1404\" alt=\"\"></p><p>我们来一个模拟过程，分析一下当浏览器访问页面之后，它是如何找到对应的页面，并将内容呈现出来的。顺藤摸瓜，你就能知道如何创建一个新的页面，并且在浏览器中访问特定页面了</p><p>当浏览器访问http://localhost:8080/#/时，你要重点关注#号后面的内容，此时#号后面是“/”，那么在路由文件中 “/”对应的是组件HelloWorld，它的路径就是 <strong>/components/HelloWorld</strong>，此时页面呈现的内容就是HelloWord.vue中的内容，我们就可以更改内容，让页面变成自己期望的样子了。</p><p>我这里给你放了一个小的案例供你测试，我们来看看效果。需要修改的代码截图如下。<br>\n<img src=\"https://static001.geekbang.org/resource/image/16/e3/16f3042eab6ea637870a341443c03ae3.jpg?wh=2148x1110\" alt=\"\"></p><p>我们定位到图片的红框这里的代码，改变{{msg}}的值为“<strong>你好，Python_Word</strong>”。</p><p><img src=\"https://static001.geekbang.org/resource/image/a1/9b/a118f4984ecea0961c3037b14c915e9b.jpg?wh=2148x1110\" alt=\"\"></p><p>完成修改，直接在我们的浏览器内观察页面变化，你能看到页面内容已经更换了，效果如下。</p><p><img src=\"https://static001.geekbang.org/resource/image/c0/23/c0dea60b47770eb29a686ef5de62bb23.jpg?wh=2892x1110\" alt=\"\"></p><p>如法炮制，你想再单独做几个页面是不是也很容易呢？课程结束之后就赶快操练起来吧！</p><h2>小结</h2><p>好了，到这里我们就快速搭建完了vue-cli框架，并且还做了\"HelloWord\"级别的页面修改实践。这节课也接近尾声了，相信整个过程你一定有所收获，让我们一起来回顾其中几个重点知识。</p><p>我们先探讨了企业项目开发为什么采取“前后端分离”的模式。这种模式不管在项目管理上，还是开发管理上都具备大量的优势，所以我们的Python全栈课程要告别“前后端不分离”模式，采用“前后端分离”模式，让前端与后端代码“各司其职”。由此我们必须要掌握前端框架的快速搭建能力。</p><p>在vue-cli脚手架搭建之前，我们还需要安装配置Node环境，这里你一定要注意自己的操作系统类型。“培养皿”准备完成后，我们应用NPM（包管理工具）进行命令搭建，你要重点关注用Webpack进行项目搭建时的那几个选项。</p><p>跟着我演示的步骤，把工具安装配置好还是挺容易的。完成构建之后，先别着急去启动项目，因为这时我们还没有安装依赖，所以别忘了先在项目目录下执行npm install命令。完成这些步骤后，再运行npm run dev，就可以在你的浏览器中看到项目视图了。</p><p>我们在课程的最后一起梳理了路由、页面组件、HelloWord等更改实践，我们必须要清晰各个层级的关系，通过简单的HelloWord.vue最基础的结构，相信你一定可以举一反三，顺便检测和巩固我们先导课程中学到的Vue基础知识。</p><p>当然，这节课我们将“骨架”搭建起来，其中还有很多的细节需要进行填充。“不积硅步，无以至千里”，后面课程里我们再继续探索。</p><h2>思考题</h2><p>最后我们来留一道思考题，想想看，如果在我们平台中有一些公共的展示的内容，例如平台的Icon，在每一个页面都可以看到它，并且点击可以跳回首页，你有什么好的想法呢？</p><p>欢迎你在留言区记录你的收获或疑问。如果这节课对你有启发，也欢迎分享给你的同事、朋友。</p><p>好，我是Barry，我们下节课见！</p>","comments":[{"had_liked":false,"id":380166,"user_name":"好困啊","can_delete":false,"product_type":"c1","uid":2094450,"ip_address":"上海","ucode":"D49429660F2DC8","user_header":"https://static001.geekbang.org/account/avatar/00/1f/f5/72/8cbc5cb3.jpg","comment_is_top":false,"comment_ctime":1693130273,"is_pvip":false,"replies":[{"id":138528,"content":"写的非常全面和详细，为你点赞，继续加油！！","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1693465587,"ip_address":"北京","comment_id":380166,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"1. 动态效果：\n   当用户将鼠标悬停在 Icon 上时，可以加入一些微动效来增加互动性。例如，Icon 可以轻微放大、旋转或改变颜色。\n\n2. 提示功能：\n   当用户悬停在 Icon 上时，可以显示一个小提示（例如，“点击返回首页”），指导用户进行操作。\n\n3. 适应性设计：\n   根据不同的页面背景，Icon 可以有多种颜色或版本。例如，对于深色背景的页面，可以使用白色版本的 Icon，而对于浅色背景的页面，则使用深色版本。\n\n4. 响应式位置：\n   在不同的设备和屏幕大小上，Icon 的位置可以稍作调整，确保用户在任何情况下都能轻松访问。\n\n5. 集成其他功能：\n   Icon 除了返回首页功能外，也可以通过长按或右键点击来展示一个小菜单，提供其他常用功能，如“帮助”、“设置”或“关于我们”。\n\n6. 与其他元素的协调：\n   确保 Icon 与页面上的其他元素在视觉上和功能上都能很好地协调。例如，如果页面上有一个导航栏，那么 Icon 应该与它在视觉风格和位置上都保持一致。\n\n7. 历史版本展示：\n   在特定的时间，如品牌周年庆，可以展示平台 Icon 的历史版本，增加品牌故事感和用户的参与感。\n\n8. 节日主题：\n   在特定的节日或活动期间，可以对 Icon 进行轻微的修改，增加节日氛围。例如，国庆节期间可以在 Icon 上添加国旗元素。\n\n9. 加载动画：\n   如果平台的某些页面需要加载时间，可以使用 Icon 作为加载动画的一部分，增强用户的等待体验。\n\n10. 错误页面的导航：\n   在“404”或其他错误页面上，Icon 可以作为一个明确的导航元素，帮助用户快速返回首页或其他关键页面。","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":626884,"discussion_content":"写的非常全面和详细，为你点赞，继续加油！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1693465587,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":379804,"user_name":"浩荡如空气","can_delete":false,"product_type":"c1","uid":2816734,"ip_address":"广东","ucode":"8973FCC46D3CA1","user_header":"https://static001.geekbang.org/account/avatar/00/2a/fa/de/e927c333.jpg","comment_is_top":false,"comment_ctime":1692544498,"is_pvip":false,"replies":[{"id":138450,"content":"同学你好，课程整体实现上核心是通过项目实战来提升大家对Python全栈的应用能力，前端框架上的选择，对于初学者，选择Vue2可能会更容易上手。因为Vue2的文档和社区支持更加成熟，对于初学者来说更容易找到相关的学习资源和帮助。也是培养大家对于前端框架应用的能力，掌握了2的版本之后，对于3版本的应用也不会无从下手，是出于这样的考虑，感谢理解。\n","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1693133699,"ip_address":"北京","comment_id":379804,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"为什么不用最新的vue3","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":626574,"discussion_content":"同学你好，课程整体实现上核心是通过项目实战来提升大家对Python全栈的应用能力，前端框架上的选择，对于初学者，选择Vue2可能会更容易上手。因为Vue2的文档和社区支持更加成熟，对于初学者来说更容易找到相关的学习资源和帮助。也是培养大家对于前端框架应用的能力，掌握了2的版本之后，对于3版本的应用也不会无从下手，是出于这样的考虑，感谢理解。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1693133699,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376566,"user_name":"浩仔是程序员","can_delete":false,"product_type":"c1","uid":1104601,"ip_address":"广东","ucode":"A7E5CF9E1571A2","user_header":"https://static001.geekbang.org/account/avatar/00/10/da/d9/f051962f.jpg","comment_is_top":false,"comment_ctime":1686972916,"is_pvip":false,"replies":[{"id":137308,"content":"你的解决方案非常正确，公共组件是非常不错的选择，感谢你的知识分享，我们一起加油。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1687167701,"ip_address":"北京","comment_id":376566,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"对于思考题，可以把这部分抽象成一个公共组件，以达到复用的效果！\n\n1. 环境的安装，vue2.0和vue3.0有什么区别呢\nvue2.0\nnpm install vue-cli\nvue3.0\nnpm install @vue&#47;cli\n\n区别在于多了@，@可以指定具体的版本\n\n2. macos系统使用npm安装的时候会出现没有权限报错\n直接使用sudo就可以\n\n3. 在npm install也会报错\n实测mac前面加sudo即可，如果是m系列处理器需要npm install --ignore-scripts\n","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":621379,"discussion_content":"你的解决方案非常正确，公共组件是非常不错的选择，感谢你的知识分享，我们一起加油。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1687167701,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":375682,"user_name":"ZENG","can_delete":false,"product_type":"c1","uid":1136797,"ip_address":"广东","ucode":"4F9A006DA78074","user_header":"https://static001.geekbang.org/account/avatar/00/11/58/9d/91d795cf.jpg","comment_is_top":false,"comment_ctime":1685819908,"is_pvip":false,"replies":[{"id":137121,"content":"思考题的解决方案非常正确，感谢你的分享。也非常开心你能把过程自己实践遇到的问题分享出来，希望你在学习之后收获满满，我们一起加油。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1685880091,"ip_address":"北京","comment_id":375682,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"1. 思考题\n可以创建一个公共组件的文件夹，专门放置要多处复用的组件，哪里需要就直接引入\n\n2. 安装时候出现的一些坑的总结\n\n直接用 npm install -g @vue&#47;cli  好像目前是安装的是 Vue CLI 4.x 的版本\n根据文档如果想拉取2.x版本的，需要再安装一个桥接：\nnpm install -g @vue&#47;cli-init\n再执行 vue init webpack my-project\n\n\n环境变量配置后出现 npm ERR 报错\n可以&quot; 进入 C 盘 - 用户 - 删除 .npmrc 文件 &quot;","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":620158,"discussion_content":"思考题的解决方案非常正确，感谢你的分享。也非常开心你能把过程自己实践遇到的问题分享出来，希望你在学习之后收获满满，我们一起加油。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1685880091,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1136797,"avatar":"https://static001.geekbang.org/account/avatar/00/11/58/9d/91d795cf.jpg","nickname":"ZENG","note":"","ucode":"4F9A006DA78074","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":620171,"discussion_content":"老师，下面配置文件中表示是vue2.5.2版本是吗，后期还会升级到2.7吗\n\ndependencies&#34;: {\n    &#34;vue&#34;: &#34;^2.5.2&#34;,\n    .......\n}","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1685890134,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":620158,"ip_address":"广东","group_id":0},"score":620171,"extra":""}]}]},{"had_liked":false,"id":374387,"user_name":"Archer","can_delete":false,"product_type":"c1","uid":2053484,"ip_address":"湖南","ucode":"A8914C967661F2","user_header":"https://static001.geekbang.org/account/avatar/00/1f/55/6c/cad715eb.jpg","comment_is_top":false,"comment_ctime":1684074007,"is_pvip":false,"replies":[{"id":136700,"content":"这个有一些区别，前后端分离之后，Flask就是负责后端接口开发，从而实现前端的功能操作。而Vue有自己的语法和模版语法，但是对于前端开发部分核心的还是HTML、JavaScript、CSS这个也是一个相同的地方。\n","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1684120896,"ip_address":"北京","comment_id":374387,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"如果使用flask前后端不分离的话，可以用父子模板的方法，构建一个父模板里面是公共显示部分比如导航栏之类的，然后在子模板继承父模板再做独立的页面开发。不知道VUE是不是类似的方法。","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":618117,"discussion_content":"这个有一些区别，前后端分离之后，Flask就是负责后端接口开发，从而实现前端的功能操作。而Vue有自己的语法和模版语法，但是对于前端开发部分核心的还是HTML、JavaScript、CSS这个也是一个相同的地方。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1684120896,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":374299,"user_name":"Geek_840593","can_delete":false,"product_type":"c1","uid":3605821,"ip_address":"重庆","ucode":"F92256CD230166","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI7Bm7xdbwqoWPaDwqn6WESYL5QY8X8r3Q1P7UEIeDWictxJWEIJLluhIDHF7b0wFpbiav3gYToBBYg/132","comment_is_top":false,"comment_ctime":1683864533,"is_pvip":false,"replies":[{"id":136685,"content":"你直接看在输入启动命令之后，终端控制台的地址就可以了，不是必须要带#，你可以尝试访问几个页面，就可以看到URL的变化。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1683888581,"ip_address":"北京","comment_id":374299,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":" 还有一个问题： 我没有http:&#47;&#47;localhost:8080&#47;#&#47; ，我访问本地url只显示http:&#47;&#47;localhost:8080","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":617817,"discussion_content":"你直接看在输入启动命令之后，终端控制台的地址就可以了，不是必须要带#，你可以尝试访问几个页面，就可以看到URL的变化。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683888581,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":374298,"user_name":"Geek_840593","can_delete":false,"product_type":"c1","uid":3605821,"ip_address":"重庆","ucode":"F92256CD230166","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI7Bm7xdbwqoWPaDwqn6WESYL5QY8X8r3Q1P7UEIeDWictxJWEIJLluhIDHF7b0wFpbiav3gYToBBYg/132","comment_is_top":false,"comment_ctime":1683864360,"is_pvip":false,"replies":[{"id":136687,"content":"平台用的是 2.9.6的版本，3.x和2.x得确有一些区别，相关安装命令，我给你写在下面，有助于你完成安装。继续加油，有问题我们及时沟通。\n2.x版本：npm install vue-cli -g\nvue init webpack xxx\ncd xxx\nnpm install\nnpm run dev\n ","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1683942641,"ip_address":"北京","comment_id":374298,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"请问我们这次的项目用的是Vue CLI 3.x版本还是Vue CLI 2.x版本呀？ 就前面安装脚手架来看，2.x和3.x就不一样，比如vue init 命令已经被移除了，取而代之的是 vue create 命令，在 Vue CLI 3.x 版本中，dev 脚本已经被替换成了 serve 脚本，安装过程好痛苦","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":617859,"discussion_content":"平台用的是 2.9.6的版本，3.x和2.x得确有一些区别，相关安装命令，我给你写在下面，有助于你完成安装。继续加油，有问题我们及时沟通。\n2.x版本：npm install vue-cli -g\nvue init webpack xxx\ncd xxx\nnpm install\nnpm run dev\n ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683942641,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":374004,"user_name":"贾维斯Echo","can_delete":false,"product_type":"c1","uid":2820504,"ip_address":"上海","ucode":"BB8C507E46A9E5","user_header":"https://static001.geekbang.org/account/avatar/00/2b/09/98/397c2c81.jpg","comment_is_top":false,"comment_ctime":1683475827,"is_pvip":true,"replies":[{"id":136631,"content":"非常不错的解决方案，通过各种灵活的方式来实现，非常的优秀，你可以尝试一下具体的实现方法，也欢迎你可以给更多的同学分享，继续加油。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1683517912,"ip_address":"北京","comment_id":374004,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"有几种不同的方式可以实现在每个页面上显示平台 icon 并让其链接回首页：\n\n1.固定在网站的导航栏或工具栏上，这样无论用户在浏览哪个页面，都可以方便地访问首页。这个导航栏可以是网站的主要导航栏或者一个专门的工具栏，它可以包含其他有用的链接或功能。\n\n2.将平台 icon 放在每个页面的页脚或页眉，这样用户在浏览页面的底部或顶部时，也可以轻松访问首页。\n\n3.也可以将平台 icon 放在页面的固定位置，例如左上角或右上角。这样，当用户滚动页面时，icon 会保持在视图中,用户需要返回的时候就回去了。","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":617345,"discussion_content":"非常不错的解决方案，通过各种灵活的方式来实现，非常的优秀，你可以尝试一下具体的实现方法，也欢迎你可以给更多的同学分享，继续加油。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683517912,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373901,"user_name":"peter","can_delete":false,"product_type":"c1","uid":1058183,"ip_address":"北京","ucode":"261C3FC001DE2D","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/87/f3a69d1b.jpg","comment_is_top":false,"comment_ctime":1683329286,"is_pvip":false,"replies":[{"id":136627,"content":"1、vue-cli是一个脚手架，可以实现快速搭建Vue框架，并且可以通用，你可以用它来做各种项目的开发，相当于骨架搭建起来，最后内容填充由你来决定。\n2、这个应该是文件路径的问题，如果安装成功之后一定会有对应的文件的，这个需要你再检查一下，一定在项目的根目录下执行命令。\n3、对于运行不成功的问题，是文件路径问题，找不到对应文件，你这些命令执行一定在你创建的文件的根目录下执行。你现在的包位于E:\\Javaweb\\study\\videolive\\front\\study2目录下，可以将包保存在E:\\Javaweb\\study\\videolive\\front目录下的子目录中，例如E:\\Javaweb\\study\\videolive\\front\\study2\\package.json。这样可以确保npm在保存包时不会因为找不到文件而报错。下面的问题也是一样的问题，我建议你重新创建一个新的项目文件，然后在该目录下执行，不能直接在cmd或终端里面去执行。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1683517418,"ip_address":"北京","comment_id":373901,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"Q1：安装的vue-cli只对项目有效吗？ 比如在项目study1这个目录下面执行vue-cli的安装命令，那么，安装后的vue-cli对其他项目有效吗？\n\nQ2：在一个目录下面执行vue-cli的安装命令，安装成功后，该目录下面并没有文件，还是空目录。难道vue-cli没有安装在此目录下面吗？\n\nQ3：执行npm install失败，后面执行npm run dev也失败\nStep1: 执行命令：npm install --global vue-cli，成功\nStep2：执行：vue –V，成功，（刚开始有错误，搜索后解决）\nStep3: 执行：vue init webpack my-project2，成功（vue init webpack my-project2）\nStep4：执行：npm install, 失败\nnpm WARN saveError ENOENT: no such file or directory, \nopen &#39;E:\\Javaweb\\study\\videolive\\front\\study2\\package.json&#39;\nnpm notice created a lockfile as package-lock.json. You should commit this file.\nnpm WARN enoent ENOENT: no such file or directory, open &#39;E:\\Javaweb\\study\\videolive\\front\\study2\\package.json&#39;\nnpm WARN study2 No description\nnpm WARN study2 No repository field.\nnpm WARN study2 No README data\nnpm WARN study2 No license field.\n\n但项目根目录下面有两个文件：package.json和package-lock.json。\n\n后面执行npm install的错误信息：\nnpm run dev\nnpm ERR! code ENOENT\nnpm ERR! syscall open\nnpm ERR! path E:\\Javaweb\\study\\videolive\\front\\study2\\package.json\n注：1 VSCode版本：1.65；2 node版本是v14.18.1，对应的NPM版本是 6.14.15；3 没有创建环境变量NODE_PATH，也没有在环境变量path追加%NODE_PATH%。","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":617340,"discussion_content":"1、vue-cli是一个脚手架，可以实现快速搭建Vue框架，并且可以通用，你可以用它来做各种项目的开发，相当于骨架搭建起来，最后内容填充由你来决定。\n2、这个应该是文件路径的问题，如果安装成功之后一定会有对应的文件的，这个需要你再检查一下，一定在项目的根目录下执行命令。\n3、对于运行不成功的问题，是文件路径问题，找不到对应文件，你这些命令执行一定在你创建的文件的根目录下执行。你现在的包位于E:\\Javaweb\\study\\videolive\\front\\study2目录下，可以将包保存在E:\\Javaweb\\study\\videolive\\front目录下的子目录中，例如E:\\Javaweb\\study\\videolive\\front\\study2\\package.json。这样可以确保npm在保存包时不会因为找不到文件而报错。下面的问题也是一样的问题，我建议你重新创建一个新的项目文件，然后在该目录下执行，不能直接在cmd或终端里面去执行。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683517418,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2853697,"avatar":"","nickname":"Geek7093","note":"","ucode":"751C444E94CDF5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":617203,"discussion_content":"Q1. vue-cli是vue的脚手架，用于搭建项目，全局安装后在任何目录下创建项目都生效\nQ2. 没明白，确定安装成功没有报错吗？\nQ3. Step3执行成功后，要进入my-project2文件夹中（指令：cd my-project2）再执行npm install，package.json中是项目简介和依赖目录，在package.json文件所在的目录执行npm install才能有效安装依赖；npm run dev是项目运行命令，执行该命令的前提是依赖安装成功。\n注：window系统需要配置环境变量，以保证node的正常使用。\n如有问题感谢指正","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683375358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373847,"user_name":"安静点","can_delete":false,"product_type":"c1","uid":1740680,"ip_address":"广东","ucode":"9598650FD71F23","user_header":"https://static001.geekbang.org/account/avatar/00/1a/8f/88/3814fea5.jpg","comment_is_top":false,"comment_ctime":1683260050,"is_pvip":false,"replies":[{"id":136596,"content":"你的想法非常不错，Icon的处理可以把它放在公共组件内，例如Layout组件中header内，这样就可以实现每一个页面都可以展示，另外点击跳转，就是利用路由跳转的钩子函数就可以。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1683329789,"ip_address":"北京","comment_id":373847,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"我觉得可以讲Icon固定在左上角，或者固定在导航栏或菜单栏上，再或者以浮动按钮的形式展现\n点击跳转首页这个需要绑定函数之类的吧。","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":617111,"discussion_content":"你的想法非常不错，Icon的处理可以把它放在公共组件内，例如Layout组件中header内，这样就可以实现每一个页面都可以展示，另外点击跳转，就是利用路由跳转的钩子函数就可以。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683329789,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}