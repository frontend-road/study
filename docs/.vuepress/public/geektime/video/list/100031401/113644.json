{"id":113644,"title":"41 | 服务调用鉴权代码剖析","content":"<ul>\n<li>\n<p>代码：<a href=\"https://gitee.com/geektime-geekbang/staffjoy\">https://gitee.com/geektime-geekbang/staffjoy</a></p>\n</li>\n<li>\n<p>课件：<a href=\"https://pan.baidu.com/s/1Q7eP3yZ1Vm8J2nhle5RzTQ\">https://pan.baidu.com/s/1Q7eP3yZ1Vm8J2nhle5RzTQ</a> 提取码: 1aeh</p>\n</li>\n</ul>","comments":[{"had_liked":false,"id":121759,"user_name":"而立斋","can_delete":false,"product_type":"c3","uid":1087258,"ip_address":"","ucode":"5FED6E9E148195","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/1a/389eab84.jpg","comment_is_top":false,"comment_ctime":1565221103,"is_pvip":false,"replies":[{"id":44797,"content":"事先约定传递http header进行鉴权是一种简单方式。其它更严格的方式有：1). ip白名单方式，服务器端通过过滤器filter校验客户端ip是否在授权范围内。2). 运维网段隔离，通过运维手段隔离网段，例如支付服务在独立隔离生产网段内，且只有白名单内ip可以访问。3). 通过内部反向代理集中鉴权，服务之间调用必须经过内部反向代理(例如nginx)，然后在nginx上配授权规则。4). 通过ServiceMesh实现服务授权，可以实现细粒度的流量权限控制。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1565274645,"ip_address":"","comment_id":121759,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"服务间调用的约定，是双方事先沟通好的，这块儿总感觉怪怪的。有其他实践方式吗","like_count":7,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461932,"discussion_content":"事先约定传递http header进行鉴权是一种简单方式。其它更严格的方式有：1). ip白名单方式，服务器端通过过滤器filter校验客户端ip是否在授权范围内。2). 运维网段隔离，通过运维手段隔离网段，例如支付服务在独立隔离生产网段内，且只有白名单内ip可以访问。3). 通过内部反向代理集中鉴权，服务之间调用必须经过内部反向代理(例如nginx)，然后在nginx上配授权规则。4). 通过ServiceMesh实现服务授权，可以实现细粒度的流量权限控制。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565274645,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1016232,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/81/a8/559afe8b.jpg","nickname":"Sruby","note":"","ucode":"A7D1B93F41DA0F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":40193,"discussion_content":"通过注解在方法层面进行header鉴权的方式感觉还是太繁琐了，而且后期有新增服务，需要对批量方法进行授权访问，代码改动量太大了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572101435,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1228814,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c0/0e/8dbaf501.jpg","nickname":"绫夜","note":"","ucode":"F694100A9FA73E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8025,"discussion_content":"这个是不是可以用OAuth2 的 resourceIds这个字段解决服务间的认证问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567760592,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":260960,"user_name":"Geek_fa112f","can_delete":false,"product_type":"c3","uid":1596770,"ip_address":"","ucode":"797B4B310ED489","user_header":"","comment_is_top":false,"comment_ctime":1605162056,"is_pvip":false,"replies":[{"id":95017,"content":"服务之间调用可以经过集中的代理或网关，这样方便做一些集中安全和监控治理，但是有多一跳性能问题和单点问题(代理或网关挂)；也可以不经过集中代理或网关，而是直连，这样性能更好，但是不容易做集中治理，这时候一般需要通过客户端做负载均衡和监控&#47;日志数据埋点，阿里dubbo是直连的典型服务框架。实践中，两种方案都有成功落地案例。现代k8s + istio service mesh方案，本质上是通过代理进行集中治理的。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1605537607,"ip_address":"","comment_id":260960,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"服务间调用 需要经过网关吗，如果不经过 ，调用日志怎么记载，日志比较分散了。","like_count":2,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509337,"discussion_content":"服务之间调用可以经过集中的代理或网关，这样方便做一些集中安全和监控治理，但是有多一跳性能问题和单点问题(代理或网关挂)；也可以不经过集中代理或网关，而是直连，这样性能更好，但是不容易做集中治理，这时候一般需要通过客户端做负载均衡和监控/日志数据埋点，阿里dubbo是直连的典型服务框架。实践中，两种方案都有成功落地案例。现代k8s + istio service mesh方案，本质上是通过代理进行集中治理的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605537607,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1441320,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/yiaUicDHEyicjbC7bGADbM9adZZ5rO9UeQcGK8Go8TvB3T48g5EcVBETepegFZYjYibtTEepzvUU3mzf4C4DMUwDoA/132","nickname":"stargazer","note":"","ucode":"3D00C23AA100FF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":602033,"discussion_content":"老师好，请教两个问题：1，请问此项目采取的是哪一种。我看应该是后者，没有经过网关吧？2，如果服务间调用经过网关，那此网关是内外连接的网关，还是另需要内部专用的网关？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1675628002,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":509337,"ip_address":"湖南","group_id":0},"score":602033,"extra":""}]}]},{"had_liked":false,"id":196471,"user_name":"cion","can_delete":false,"product_type":"c3","uid":1294806,"ip_address":"","ucode":"10169CBA629A5C","user_header":"https://static001.geekbang.org/account/avatar/00/13/c1/d6/28e96148.jpg","comment_is_top":false,"comment_ctime":1585284244,"is_pvip":false,"replies":[{"id":75126,"content":"透明化处理需要底层网络支持，可以考虑servicemesh。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1585657441,"ip_address":"","comment_id":196471,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"header作为方法参数不好，有一点耦合的感觉，能透明化处理更好一些","like_count":2,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489308,"discussion_content":"透明化处理需要底层网络支持，可以考虑servicemesh。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585657441,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":237562,"user_name":"future","can_delete":false,"product_type":"c3","uid":1130294,"ip_address":"","ucode":"6FA448FEAF931A","user_header":"https://static001.geekbang.org/account/avatar/00/11/3f/36/e51006d0.jpg","comment_is_top":false,"comment_ctime":1595863416,"is_pvip":false,"replies":[{"id":87843,"content":"看这里：\nhttps:&#47;&#47;istio.io&#47;latest&#47;docs&#47;concepts&#47;security&#47;\n\n另外，我的新课《分布式系统案例课》，也会讲到ServiceMesh&#47;istio这块，欢迎关注。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1595956703,"ip_address":"","comment_id":237562,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"istio怎么做这个，有资料吗","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502458,"discussion_content":"看这里：\nhttps://istio.io/latest/docs/concepts/security/\n\n另外，我的新课《分布式系统案例课》，也会讲到ServiceMesh/istio这块，欢迎关注。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595956703,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":198852,"user_name":"soong","can_delete":false,"product_type":"c3","uid":1049954,"ip_address":"","ucode":"E3BECF2088F3D9","user_header":"https://static001.geekbang.org/account/avatar/00/10/05/62/0a4e5831.jpg","comment_is_top":false,"comment_ctime":1585470526,"is_pvip":false,"replies":[{"id":75276,"content":"和用户关联就和业务耦合了，必然需要在框架&#47;业务层引入复杂性。\n\n目前比较干净的非侵入和业务无关的做法一般需要运维网络层支持，ServieMesh可以做到服务细粒度权限控制，可以尝试。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1585750945,"ip_address":"","comment_id":198852,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"目前在多个服务间的鉴权以服务为主体，未有以用户角色或单项权限控制来进行设计，不知道对这一块的实现，有些什么模型参考，以及实现的指南！集中控制，容易与服务的变化脱离；分散到服务，又不好维护与用户的关联！","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489756,"discussion_content":"和用户关联就和业务耦合了，必然需要在框架/业务层引入复杂性。\n\n目前比较干净的非侵入和业务无关的做法一般需要运维网络层支持，ServieMesh可以做到服务细粒度权限控制，可以尝试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585750945,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169231,"user_name":"wind","can_delete":false,"product_type":"c3","uid":1507189,"ip_address":"","ucode":"5EC77AEB18130E","user_header":"https://static001.geekbang.org/account/avatar/00/16/ff/75/9c1b2ece.jpg","comment_is_top":false,"comment_ctime":1578298108,"is_pvip":false,"replies":[{"id":65815,"content":"没有理解你的具体问题是什么，可否详细说明？","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1578397760,"ip_address":"","comment_id":169231,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"根据userId操作且需认证的接口，是否可以不传参而是直接获取hearder里面的呢","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480471,"discussion_content":"没有理解你的具体问题是什么，可否详细说明？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578397760,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1149567,"avatar":"https://static001.geekbang.org/account/avatar/00/11/8a/7f/788a33b1.jpg","nickname":"Hey BroHTer","note":"","ucode":"E8581B00E71DCE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":345144,"discussion_content":"我也是这个问题，比如获取用户信息，AccountController.getAccount方法，不要userId的参数，而从header中取userId,然后查询信息，返回结果，我觉的类似需要userId的接口都可以从header中获取userId","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611667654,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156769,"user_name":"独钓寒江雪","can_delete":false,"product_type":"c3","uid":1028704,"ip_address":"","ucode":"1B2E3A7B8D6627","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erdd1KOUnW6yErToiaN4iaU4qHPn9PtU0fspzkzSKLqEyGG5383MBgHu1SEgzuibnMEiaHHGR31seHvNA/132","comment_is_top":false,"comment_ctime":1574952168,"is_pvip":false,"replies":[{"id":60221,"content":"你好，能否具体解释下哪里有耦合？你的建议是？\n\n另外这个项目主要是学习演示用，权限比较简单，实际可以设计更灵活。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1575009578,"ip_address":"","comment_id":156769,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"这个不全部偶尔在一起么。通过注解写死的方式。","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476226,"discussion_content":"你好，能否具体解释下哪里有耦合？你的建议是？\n\n另外这个项目主要是学习演示用，权限比较简单，实际可以设计更灵活。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575009578,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156484,"user_name":"xj_zh","can_delete":false,"product_type":"c3","uid":1214755,"ip_address":"","ucode":"190609F7AE67CC","user_header":"https://static001.geekbang.org/account/avatar/00/12/89/23/73569bd7.jpg","comment_is_top":false,"comment_ctime":1574901878,"is_pvip":false,"replies":[{"id":60214,"content":"你好，具体怎么耦合了？另外这个项目主要是学习演示用，权限比较简单，实际可以设计更灵活。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1575007716,"ip_address":"","comment_id":156484,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"权限业务耦合了啊","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476124,"discussion_content":"你好，具体怎么耦合了？另外这个项目主要是学习演示用，权限比较简单，实际可以设计更灵活。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575007716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1214755,"avatar":"https://static001.geekbang.org/account/avatar/00/12/89/23/73569bd7.jpg","nickname":"xj_zh","note":"","ucode":"190609F7AE67CC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":65527,"discussion_content":"权限放在统一网关，下放到具体业务实现，每次权限变动都需要重新构建部署。每次新接入资源的时候都会有同样的问题。都需要设定资源的权限，规模小还可以，规模大家了就疲于应对了。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1575009676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}