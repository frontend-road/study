{"id":68963,"title":"03 | 事务隔离：为什么你改了我还看不见？","content":"<p>提到事务，你肯定不陌生，和数据库打交道的时候，我们总是会用到事务。最经典的例子就是转账，你要给朋友小王转100块钱，而此时你的银行卡只有100块钱。</p><p>转账过程具体到程序里会有一系列的操作，比如查询余额、做加减法、更新余额等，这些操作必须保证是一体的，不然等程序查完之后，还没做减法之前，你这100块钱，完全可以借着这个时间差再查一次，然后再给另外一个朋友转账，如果银行这么整，不就乱了么？这时就要用到“事务”这个概念了。</p><p>简单来说，事务就是要保证一组数据库操作，要么全部成功，要么全部失败。在MySQL中，事务支持是在引擎层实现的。你现在知道，MySQL是一个支持多引擎的系统，但并不是所有的引擎都支持事务。比如MySQL原生的MyISAM引擎就不支持事务，这也是MyISAM被InnoDB取代的重要原因之一。</p><p>今天的文章里，我将会以InnoDB为例，剖析MySQL在事务支持方面的特定实现，并基于原理给出相应的实践建议，希望这些案例能加深你对MySQL事务原理的理解。</p><h1>隔离性与隔离级别</h1><p>提到事务，你肯定会想到ACID（Atomicity、Consistency、Isolation、Durability，即原子性、一致性、隔离性、持久性），今天我们就来说说其中I，也就是“隔离性”。</p><!-- [[[read_end]]] --><p>当数据库上有多个事务同时执行的时候，就可能出现脏读（dirty read）、不可重复读（non-repeatable read）、幻读（phantom read）的问题，为了解决这些问题，就有了“隔离级别”的概念。</p><p>在谈隔离级别之前，你首先要知道，你隔离得越严实，效率就会越低。因此很多时候，我们都要在二者之间寻找一个平衡点。SQL标准的事务隔离级别包括：读未提交（read uncommitted）、读提交（read committed）、可重复读（repeatable read）和串行化（serializable ）。下面我逐一为你解释：</p><ul>\n<li>读未提交是指，一个事务还没提交时，它做的变更就能被别的事务看到。</li>\n<li>读提交是指，一个事务提交之后，它做的变更才会被其他事务看到。</li>\n<li>可重复读是指，一个事务执行过程中看到的数据，总是跟这个事务在启动时看到的数据是一致的。当然在可重复读隔离级别下，未提交变更对其他事务也是不可见的。</li>\n<li>串行化，顾名思义是对于同一行记录，“写”会加“写锁”，“读”会加“读锁”。当出现读写锁冲突的时候，后访问的事务必须等前一个事务执行完成，才能继续执行。</li>\n</ul><p>其中“读提交”和“可重复读”比较难理解，所以我用一个例子说明这几种隔离级别。假设数据表T中只有一列，其中一行的值为1，下面是按照时间顺序执行两个事务的行为。</p><pre><code>mysql&gt; create table T(c int) engine=InnoDB;\ninsert into T(c) values(1);\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/7d/f8/7dea45932a6b722eb069d2264d0066f8.png?wh=1142*1420\" alt=\"\"><br>\n我们来看看在不同的隔离级别下，事务A会有哪些不同的返回结果，也就是图里面V1、V2、V3的返回值分别是什么。</p><ul>\n<li>若隔离级别是“读未提交”， 则V1的值就是2。这时候事务B虽然还没有提交，但是结果已经被A看到了。因此，V2、V3也都是2。</li>\n<li>若隔离级别是“读提交”，则V1是1，V2的值是2。事务B的更新在提交后才能被A看到。所以， V3的值也是2。</li>\n<li>若隔离级别是“可重复读”，则V1、V2是1，V3是2。之所以V2还是1，遵循的就是这个要求：事务在执行期间看到的数据前后必须是一致的。</li>\n<li>若隔离级别是“串行化”，则在事务B执行“将1改成2”的时候，会被锁住。直到事务A提交后，事务B才可以继续执行。所以从A的角度看， V1、V2值是1，V3的值是2。</li>\n</ul><p>在实现上，数据库里面会创建一个视图，访问的时候以视图的逻辑结果为准。在“可重复读”隔离级别下，这个视图是在事务启动时创建的，整个事务存在期间都用这个视图。在“读提交”隔离级别下，这个视图是在每个SQL语句开始执行的时候创建的。这里需要注意的是，“读未提交”隔离级别下直接返回记录上的最新值，没有视图概念；而“串行化”隔离级别下直接用加锁的方式来避免并行访问。</p><p>我们可以看到在不同的隔离级别下，数据库行为是有所不同的。Oracle数据库的默认隔离级别其实就是“读提交”，因此对于一些从Oracle迁移到MySQL的应用，为保证数据库隔离级别的一致，你一定要记得将MySQL的隔离级别设置为“读提交”。</p><p>配置的方式是，将启动参数transaction-isolation的值设置成READ-COMMITTED。你可以用show variables来查看当前的值。</p><pre><code>mysql&gt; show variables like 'transaction_isolation';\n\n+-----------------------+----------------+\n\n| Variable_name | Value |\n\n+-----------------------+----------------+\n\n| transaction_isolation | READ-COMMITTED |\n\n+-----------------------+----------------+\n</code></pre><p>总结来说，存在即合理，每种隔离级别都有自己的使用场景，你要根据自己的业务情况来定。我想<strong>你可能会问那什么时候需要“可重复读”的场景呢</strong>？我们来看一个数据校对逻辑的案例。</p><p>假设你在管理一个个人银行账户表。一个表存了账户余额，一个表存了账单明细。到了月底你要做数据校对，也就是判断上个月的余额和当前余额的差额，是否与本月的账单明细一致。你一定希望在校对过程中，即使有用户发生了一笔新的交易，也不影响你的校对结果。</p><p>这时候使用“可重复读”隔离级别就很方便。事务启动时的视图可以认为是静态的，不受其他事务更新的影响。</p><h1>事务隔离的实现</h1><p>理解了事务的隔离级别，我们再来看看事务隔离具体是怎么实现的。这里我们展开说明“可重复读”。</p><p>在MySQL中，实际上每条记录在更新的时候都会同时记录一条回滚操作。记录上的最新值，通过回滚操作，都可以得到前一个状态的值。</p><p>假设一个值从1被按顺序改成了2、3、4，在回滚日志里面就会有类似下面的记录。</p><p><img src=\"https://static001.geekbang.org/resource/image/d9/ee/d9c313809e5ac148fc39feff532f0fee.png?wh=1142*737\" alt=\"\"><br>\n当前值是4，但是在查询这条记录的时候，不同时刻启动的事务会有不同的read-view。如图中看到的，在视图A、B、C里面，这一个记录的值分别是1、2、4，同一条记录在系统中可以存在多个版本，就是数据库的多版本并发控制（MVCC）。对于read-view A，要得到1，就必须将当前值依次执行图中所有的回滚操作得到。</p><p>同时你会发现，即使现在有另外一个事务正在将4改成5，这个事务跟read-view A、B、C对应的事务是不会冲突的。</p><p>你一定会问，回滚日志总不能一直保留吧，什么时候删除呢？答案是，在不需要的时候才删除。也就是说，系统会判断，当没有事务再需要用到这些回滚日志时，回滚日志会被删除。</p><p>什么时候才不需要了呢？就是当系统里没有比这个回滚日志更早的read-view的时候。</p><p>基于上面的说明，我们来讨论一下为什么建议你尽量不要使用长事务。</p><p>长事务意味着系统里面会存在很老的事务视图。由于这些事务随时可能访问数据库里面的任何数据，所以这个事务提交之前，数据库里面它可能用到的回滚记录都必须保留，这就会导致大量占用存储空间。</p><p>在MySQL 5.5及以前的版本，回滚日志是跟数据字典一起放在ibdata文件里的，即使长事务最终提交，回滚段被清理，文件也不会变小。我见过数据只有20GB，而回滚段有200GB的库。最终只好为了清理回滚段，重建整个库。</p><p>除了对回滚段的影响，长事务还占用锁资源，也可能拖垮整个库，这个我们会在后面讲锁的时候展开。</p><h1>事务的启动方式</h1><p>如前面所述，长事务有这些潜在风险，我当然是建议你尽量避免。其实很多时候业务开发同学并不是有意使用长事务，通常是由于误用所致。MySQL的事务启动方式有以下几种：</p><ol>\n<li>\n<p>显式启动事务语句， begin 或 start transaction。配套的提交语句是commit，回滚语句是rollback。</p>\n</li>\n<li>\n<p>set autocommit=0，这个命令会将这个线程的自动提交关掉。意味着如果你只执行一个select语句，这个事务就启动了，而且并不会自动提交。这个事务持续存在直到你主动执行commit 或 rollback 语句，或者断开连接。</p>\n</li>\n</ol><p>有些客户端连接框架会默认连接成功后先执行一个set autocommit=0的命令。这就导致接下来的查询都在事务中，如果是长连接，就导致了意外的长事务。</p><p>因此，我会建议你总是使用set autocommit=1, 通过显式语句的方式来启动事务。</p><p>但是有的开发同学会纠结“多一次交互”的问题。对于一个需要频繁使用事务的业务，第二种方式每个事务在开始时都不需要主动执行一次 “begin”，减少了语句的交互次数。如果你也有这个顾虑，我建议你使用commit work and chain语法。</p><p>在autocommit为1的情况下，用begin显式启动的事务，如果执行commit则提交事务。如果执行 commit work and chain，则是提交事务并自动启动下一个事务，这样也省去了再次执行begin语句的开销。同时带来的好处是从程序开发的角度明确地知道每个语句是否处于事务中。</p><p>你可以在information_schema库的innodb_trx这个表中查询长事务，比如下面这个语句，用于查找持续时间超过60s的事务。</p><pre><code>select * from information_schema.innodb_trx where TIME_TO_SEC(timediff(now(),trx_started))&gt;60\n</code></pre><h1>小结</h1><p>这篇文章里面，我介绍了MySQL的事务隔离级别的现象和实现，根据实现原理分析了长事务存在的风险，以及如何用正确的方式避免长事务。希望我举的例子能够帮助你理解事务，并更好地使用MySQL的事务特性。</p><p>我给你留一个问题吧。你现在知道了系统里面应该避免长事务，如果你是业务开发负责人同时也是数据库负责人，你会有什么方案来避免出现或者处理这种情况呢？</p><p>你可以把你的思考和观点写在留言区里，我会在下一篇文章的末尾和你讨论这个问题。感谢你的收听，也欢迎你把这篇文章分享给更多的朋友一起阅读。</p><h1>上期问题时间</h1><p>在上期文章的最后，我给你留下的问题是一天一备跟一周一备的对比。</p><p>好处是“最长恢复时间”更短。</p><p>在一天一备的模式里，最坏情况下需要应用一天的binlog。比如，你每天0点做一次全量备份，而要恢复出一个到昨天晚上23点的备份。</p><p>一周一备最坏情况就要应用一周的binlog了。</p><p>系统的对应指标就是 @尼古拉斯·赵四 @慕塔 提到的RTO（恢复目标时间）。</p><p>当然这个是有成本的，因为更频繁全量备份需要消耗更多存储空间，所以这个RTO是成本换来的，就需要你根据业务重要性来评估了。</p><p>同时也感谢 @super blue cat、@高枕、@Jason 留下了高质量的评论。</p>","comments":[{"had_liked":false,"id":40373,"user_name":"壹笙☞漂泊","can_delete":false,"product_type":"c1","uid":1092577,"ip_address":"","ucode":"3A0B8EC881665C","user_header":"https://static001.geekbang.org/account/avatar/00/10/ab/e1/f6b921fa.jpg","comment_is_top":true,"comment_ctime":1542607089,"is_pvip":false,"replies":[{"id":"14547","content":"总结得非常好👍🏿<br><br>第二讲问题，其实备份是强需求，至于多少合适，还是得平衡业务需求和存储成本","user_name":"作者回复","comment_id":40373,"uid":"1264162","ip_address":"","utype":1,"ctime":1542611305,"user_name_real":"林晓斌"}],"discussion_count":16,"race_medal":0,"score":"9.2233743404999004e+18","product_id":100020801,"comment_content":"1、务的特性：原子性、一致性、隔离性、持久性<br>2、多事务同时执行的时候，可能会出现的问题：脏读、不可重复读、幻读<br>3、事务隔离级别：读未提交、读提交、可重复读、串行化<br>4、不同事务隔离级别的区别：<br>\t读未提交：一个事务还未提交，它所做的变更就可以被别的事务看到<br>\t读提交：一个事务提交之后，它所做的变更才可以被别的事务看到<br>\t可重复读：一个事务执行过程中看到的数据是一致的。未提交的更改对其他事务是不可见的<br>\t串行化：对应一个记录会加读写锁，出现冲突的时候，后访问的事务必须等前一个事务执行完成才能继续执行<br>5、配置方法：启动参数transaction-isolation<br>6、事务隔离的实现：每条记录在更新的时候都会同时记录一条回滚操作。同一条记录在系统中可以存在多个版本，这就是数据库的多版本并发控制（MVCC）。<br>7、回滚日志什么时候删除？系统会判断当没有事务需要用到这些回滚日志的时候，回滚日志会被删除。<br>8、什么时候不需要了？当系统里么有比这个回滚日志更早的read-view的时候。<br>9、为什么尽量不要使用长事务。长事务意味着系统里面会存在很老的事务视图，在这个事务提交之前，回滚记录都要保留，这会导致大量占用存储空间。除此之外，长事务还占用锁资源，可能会拖垮库。<br>10、事务启动方式：一、显式启动事务语句，begin或者start transaction,提交commit，回滚rollback；二、set autocommit=0，该命令会把这个线程的自动提交关掉。这样只要执行一个select语句，事务就启动，并不会自动提交，直到主动执行commit或rollback或断开连接。<br>11、建议使用方法一，如果考虑多一次交互问题，可以使用commit work and chain语法。在autocommit=1的情况下用begin显式启动事务，如果执行commit则提交事务。如果执行commit work and chain则提交事务并自动启动下一个事务。<br><br>思考题：<br><br>在开发过程中，尽可能的减小事务范围，少用长事务，如果无法避免，保证逻辑日志空间足够用，并且支持动态日志空间增长。监控Innodb_trx表，发现长事务报警。<br><br>疑问：<br><br>关于第二节的思考题，读题干的意思，是在什么场景下，一天一备比一周一备更有优势。老师的答案只是给出了一天一备的优势，那么适用场景怎么理解呢？<br><br>","like_count":537,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429498,"discussion_content":"总结得非常好👍🏿\n\n第二讲问题，其实备份是强需求，至于多少合适，还是得平衡业务需求和存储成本","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542611305,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1104100,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d8/e4/7cc47d20.jpg","nickname":"Alexander","note":"","ucode":"5EF394E93A1715","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4704,"discussion_content":"事务隔离的实现，感觉讲的太浅了，希望林大再多讲讲","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1565679019,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2366684,"avatar":"","nickname":"Geek_8f3eb8","note":"","ucode":"E7ECEAE22B3A2B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1104100,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d8/e4/7cc47d20.jpg","nickname":"Alexander","note":"","ucode":"5EF394E93A1715","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":334120,"discussion_content":"事务隔离的实现，涉及很多呢，比如redo和undo在不同情况下的回滚前滚。MVCC的原理，锁机制的问题。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1607747460,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4704,"ip_address":""},"score":334120,"extra":""},{"author":{"id":2288362,"avatar":"https://static001.geekbang.org/account/avatar/00/22/ea/ea/77a59153.jpg","nickname":"耶马","note":"","ucode":"3A3CF67B016CDB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1104100,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d8/e4/7cc47d20.jpg","nickname":"Alexander","note":"","ucode":"5EF394E93A1715","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374563,"discussion_content":"我第一遍看专栏的时候也有这个感觉,现在还是得配合着书一起看,<软件架构设计>","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621247232,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4704,"ip_address":""},"score":374563,"extra":""}]},{"author":{"id":1480717,"avatar":"https://static001.geekbang.org/account/avatar/00/16/98/0d/fb77a32c.jpg","nickname":"Tim","note":"","ucode":"3AAA9FD3D8DDDB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":35816,"discussion_content":"请教下，事务启动方式第二种set autocomiit=0，为什么只要执行一个select语句，事务就启动了？意味着autocommit无论是0还是1都会隐式的创建事务？那岂不是很麻烦也不太合理，那我如果不想每条都创建事务，那要怎么配置？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1571307116,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":5,"child_discussions":[{"author":{"id":1323966,"avatar":"https://static001.geekbang.org/account/avatar/00/14/33/be/be07474f.jpg","nickname":"Trouver âme","note":"","ucode":"F84C69721CDC9C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1480717,"avatar":"https://static001.geekbang.org/account/avatar/00/16/98/0d/fb77a32c.jpg","nickname":"Tim","note":"","ucode":"3AAA9FD3D8DDDB","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":54659,"discussion_content":"我同意你的观点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574308245,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":35816,"ip_address":""},"score":54659,"extra":""},{"author":{"id":1254801,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","nickname":"猴哥一一 cium","note":"","ucode":"38EC64F8D1A0B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1480717,"avatar":"https://static001.geekbang.org/account/avatar/00/16/98/0d/fb77a32c.jpg","nickname":"Tim","note":"","ucode":"3AAA9FD3D8DDDB","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312008,"discussion_content":"set autocomiit=0 是事务不自动提交,但是事务已启动了,在整个事务中完成一连串sql","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1602560326,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":35816,"ip_address":""},"score":312008,"extra":""},{"author":{"id":1661535,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5a/5f/8a76aa8b.jpg","nickname":"Lordran","note":"","ucode":"7CCD5F52471BB1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1480717,"avatar":"https://static001.geekbang.org/account/avatar/00/16/98/0d/fb77a32c.jpg","nickname":"Tim","note":"","ucode":"3AAA9FD3D8DDDB","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327071,"discussion_content":"执行语句都需要在事务中进行，autocommit=0时只是在执行完一条语句后不能自动提交，需要自己commit。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1605744963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":35816,"ip_address":""},"score":327071,"extra":""}]},{"author":{"id":1069269,"avatar":"https://static001.geekbang.org/account/avatar/00/10/50/d5/73334a95.jpg","nickname":"doos","note":"","ucode":"7C9AF67F90E65C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575745,"discussion_content":"我安装的是mariadb10用的就是tx_isolation","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655086934,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2941452,"avatar":"","nickname":"Geek_edca71","note":"","ucode":"EB32200916973F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556531,"discussion_content":"知否需要知道 中止性呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647410047,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2861334,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/a9/16/83e82715.jpg","nickname":"无言","note":"","ucode":"935DD514D2ECA1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536469,"discussion_content":"弱弱的问一句，什么叫做长事务啊，不太懂这些。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638789884,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2306492,"avatar":"https://static001.geekbang.org/account/avatar/00/23/31/bc/9730d2e2.jpg","nickname":"本","note":"","ucode":"484F9E8C5D5876","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413473,"discussion_content":"一天一备还是一周一备，应该看业务写的频率？频率越高，备份周期应该越小。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636474214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1323966,"avatar":"https://static001.geekbang.org/account/avatar/00/14/33/be/be07474f.jpg","nickname":"Trouver âme","note":"","ucode":"F84C69721CDC9C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":54656,"discussion_content":"我也想问set atuocomit=0,为什么只要执行一个select语句，事务就启动了?我也觉得不合理，本事事务开启，就是把autocommit设置为0，如果默认是0只是不再发送这个指令而已！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574308189,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1661535,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5a/5f/8a76aa8b.jpg","nickname":"Lordran","note":"","ucode":"7CCD5F52471BB1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1323966,"avatar":"https://static001.geekbang.org/account/avatar/00/14/33/be/be07474f.jpg","nickname":"Trouver âme","note":"","ucode":"F84C69721CDC9C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327069,"discussion_content":"执行语句都需要在事务中进行，autocommit=0时只是在执行完一条语句后不能自动提交，需要自己commit。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1605744951,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":54656,"ip_address":""},"score":327069,"extra":""}]}]},{"had_liked":false,"id":54926,"user_name":"京京beaver","can_delete":false,"product_type":"c1","uid":1179056,"ip_address":"","ucode":"C21838D7CA7D6B","user_header":"https://static001.geekbang.org/account/avatar/00/11/fd/b0/e30fd916.jpg","comment_is_top":true,"comment_ctime":1545982445,"is_pvip":false,"replies":[{"id":"19873","content":"你是不是用的5.6或更早的版本😄<br><br>5.7引入了transaction_isolation用来替换tx_isolation了，到8.0.3就去掉了后者了","user_name":"作者回复","comment_id":54926,"uid":"1264162","ip_address":"","utype":1,"ctime":1545983950,"user_name_real":"林晓斌"}],"discussion_count":9,"race_medal":0,"score":"9.2233726139264e+18","product_id":100020801,"comment_content":"mysql&gt; show variables like &#39;transaction_isolation&#39;;<br>这句写错了，应该是tx_isolation。测试了一下","like_count":135,"discussions":[{"author":{"id":1716801,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/32/41/c1a7840b.jpg","nickname":"着迷","note":"","ucode":"429F1D4015A195","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308027,"discussion_content":"亲测5.7是tx_isolation","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1600827726,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1302556,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e0/1c/aa50dc27.jpg","nickname":"icyricky","note":"","ucode":"D63C285165309D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":217358,"discussion_content":"2个都有的吧。。其实都代表一个东西","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1585548683,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434615,"discussion_content":"你是不是用的5.6或更早的版本😄\n\n5.7引入了transaction_isolation用来替换tx_isolation了，到8.0.3就去掉了后者了","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1545983950,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1058015,"avatar":"https://static001.geekbang.org/account/avatar/00/10/24/df/645f8087.jpg","nickname":"Yayu","note":"","ucode":"5E7842458D8229","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":271322,"discussion_content":"亲测 8.0 有效","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1590116110,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1724942,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/52/0e/d875c2c5.jpg","nickname":"papaw","note":"","ucode":"B88E39F6B907F8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":154229,"discussion_content":"亲测5.6 和 5.7用的都是tx_isolation","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1580127332,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1313562,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/eyzvWHuvEwziby6ZsvRhF0l174d3jFZ4gRjOrUzX6uVRP2DLiaAnBVLzaia8ayaPRIhHYnnOusd2XB6wYDAscGIMA/132","nickname":"stephen","note":"","ucode":"68BEAF653814E7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":13630,"discussion_content":"mysql不知道，但是mariadb里面是tx_isolation","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1568691513,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1593685,"avatar":"https://static001.geekbang.org/account/avatar/00/18/51/55/7223d91e.jpg","nickname":"流星","note":"","ucode":"0F01247F7AB80A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":955,"discussion_content":"老师，我们用的是5.7.17版本的，但是和你说的不一样，查transaction不对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562206833,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1307862,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f4/d6/0ff4ebe5.jpg","nickname":"雨中漫步","note":"","ucode":"D225B6F5DD445D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1593685,"avatar":"https://static001.geekbang.org/account/avatar/00/18/51/55/7223d91e.jpg","nickname":"流星","note":"","ucode":"0F01247F7AB80A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7156,"discussion_content":"transaction_isolation 5.7.20才新加的","likes_number":29,"is_delete":false,"is_hidden":false,"ctime":1567406398,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":955,"ip_address":""},"score":7156,"extra":""},{"author":{"id":1254801,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","nickname":"猴哥一一 cium","note":"","ucode":"38EC64F8D1A0B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1307862,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f4/d6/0ff4ebe5.jpg","nickname":"雨中漫步","note":"","ucode":"D225B6F5DD445D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312010,"discussion_content":"秀!","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602560428,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":7156,"ip_address":""},"score":312010,"extra":""}]}]},{"had_liked":false,"id":40371,"user_name":"劳斯","can_delete":false,"product_type":"c1","uid":1006944,"ip_address":"","ucode":"61F8DE9678B2D2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5d/60/b06efd0b.jpg","comment_is_top":true,"comment_ctime":1542606722,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"9.223372223081001e+18","product_id":100020801,"comment_content":"预告：林晓斌老师将做客极客Live，分享他MySQL的心路历程<br>前阿里丁奇：我的MySQL心路历程<br>11月21日（周三） 20:30-21:30<br><br>本次直播，林晓斌将畅谈个人成长经历，分享自己是如何从数据库小白逐步成长为MySQL内核开发人员的。从业十几年，他经历了哪些比较重要的事儿？他觉得什么事儿最有难度？什么事儿最有成就感？他是怎样应对的？<br>1、MySQL数据库的最佳学习路径<br>2、丁奇遇到过哪些挑战？走过那些坑？是如何应对的？<br>3、从业十几年来，关于数据库性能的“奇闻异事”<br><br>加小助手微信：geektime001或geektime004（二选一），获取直播最新消息","like_count":43,"discussions":[{"author":{"id":1032631,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c1/b7/57f153f6.jpg","nickname":"Sun Fei","note":"","ucode":"092EC0992050BB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":25456,"discussion_content":"有回放吗？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1570529818,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2679228,"avatar":"https://static001.geekbang.org/account/avatar/00/28/e1/bc/fc0cbd08.jpg","nickname":"WithSunny","note":"","ucode":"76AE8C4E5CC5FF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381632,"discussion_content":"看起来是没有回放了，哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625148199,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1702886,"avatar":"https://static001.geekbang.org/account/avatar/00/19/fb/e6/1b9edb91.jpg","nickname":"练习生","note":"","ucode":"60203A2AA0EA36","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294070,"discussion_content":"有回放吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595774282,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1132448,"avatar":"https://static001.geekbang.org/account/avatar/00/11/47/a0/f12115b7.jpg","nickname":"Sam.张朝","note":"","ucode":"FB20554D94B250","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287245,"discussion_content":"有回放吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593406128,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1320092,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM4z9WYWVvWDhMF0SicPE5ad56ME6DibyWGbRoQa0lH4U9icdsjNcv3ssRickcuRMDA01e6vMXnmOVSr9l5LVUefVxicn/132","nickname":"black_mirror","note":"","ucode":"2549C87298BF12","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36516,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571387947,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41034,"user_name":"LAMBO","can_delete":false,"product_type":"c1","uid":1214041,"ip_address":"","ucode":"10EDE0FC134FA8","user_header":"https://static001.geekbang.org/account/avatar/00/12/86/59/e8f58a2a.jpg","comment_is_top":false,"comment_ctime":1542716505,"is_pvip":false,"replies":[{"id":"14742","content":"总结的好👍🏿","user_name":"作者回复","comment_id":41034,"uid":"1264162","ip_address":"","utype":1,"ctime":1542719331,"user_name_real":"林晓斌"}],"discussion_count":20,"race_medal":0,"score":"2535573421145","product_id":100020801,"comment_content":"读未提交：别人改数据的事务尚未提交，我在我的事务中也能读到。<br>读已提交：别人改数据的事务已经提交，我在我的事务中才能读到。<br>可重复读：别人改数据的事务已经提交，我在我的事务中也不去读。<br>串行：我的事务尚未提交，别人就别想改数据。<br>这4种隔离级别，并行性能依次降低，安全性依次提高。","like_count":591,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429680,"discussion_content":"总结的好👍🏿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542719331,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1058015,"avatar":"https://static001.geekbang.org/account/avatar/00/10/24/df/645f8087.jpg","nickname":"Yayu","note":"","ucode":"5E7842458D8229","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":268473,"discussion_content":"这段事务隔离级别的知识点“翻译”做的相当到位。👍","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1589786421,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1794060,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/60/0c/e1f012cb.jpg","nickname":"frankie","note":"","ucode":"813D1352B68A21","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":259962,"discussion_content":"总结的顶呱呱，给你点赞","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1588833451,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2212810,"avatar":"https://static001.geekbang.org/account/avatar/00/21/c3/ca/93f7eca9.jpg","nickname":"Cassie","note":"","ucode":"1C68BDBCC95FA5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":404684,"discussion_content":"可重复读为啥并发性能会比前几个低","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1634383743,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1355831,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b0/37/d654fbac.jpg","nickname":"几近虚年","note":"","ucode":"28CD6486EED8E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366983,"discussion_content":"第二次来学习，还记得自己对几个事务的总结的最浅显的几句话，原来是从你这里收获的。\n印象很深，哈哈。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1618230794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1971137,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/13/c1/2a0dda2a.jpg","nickname":"吉尔裤裆甩","note":"","ucode":"2C42C48594A076","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411364,"discussion_content":"牛逼","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635907383,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2756739,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/10/83/0facd0eb.jpg","nickname":"利威尔兵长","note":"","ucode":"FDE0BD5BFB1B4A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392106,"discussion_content":"＠LAMBO　兄弟　厉害啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630835509,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2645687,"avatar":"https://static001.geekbang.org/account/avatar/00/28/5e/b7/fc25c40a.jpg","nickname":"Eight","note":"","ucode":"65FFE800E33230","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389034,"discussion_content":"可重复读：我就是这么任性哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629099957,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1627397,"avatar":"https://static001.geekbang.org/account/avatar/00/18/d5/05/8fd8ca4c.jpg","nickname":"快快乐乐","note":"","ucode":"D093D8D5836FF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341487,"discussion_content":"总结相当到位","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610435069,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339360,"discussion_content":"总结的好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609644184,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1309313,"avatar":"https://static001.geekbang.org/account/avatar/00/13/fa/81/2ed5be5f.jpg","nickname":"独孤仁楠","note":"","ucode":"FDC0400E64EEDF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335009,"discussion_content":"可重复读，我在我的事务中也不去读新数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608048240,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1066508,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/0c/773ba2f3.jpg","nickname":"下个目标45k","note":"","ucode":"193BA8C3AA9A61","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332948,"discussion_content":"针不戳 ,浅显易懂的表达","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607400311,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1639934,"avatar":"","nickname":"Geek_56b64c","note":"","ucode":"E3BE41E2F641C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":316072,"discussion_content":"卧槽！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603354989,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1049017,"avatar":"https://static001.geekbang.org/account/avatar/00/10/01/b9/73435279.jpg","nickname":"学习学个屁","note":"","ucode":"DF2D61E6FB2FCE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302895,"discussion_content":"666","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599057387,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1402506,"avatar":"https://static001.geekbang.org/account/avatar/00/15/66/8a/d71c2623.jpg","nickname":"贺 玄","note":"","ucode":"B30F95608D192D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302507,"discussion_content":"串行应该是  “我的事务尚未提交，别人就别想读数据”吧 改数据当然不能改","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598940809,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1285652,"avatar":"","nickname":"mycat","note":"","ucode":"6878BD32D042F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1402506,"avatar":"https://static001.geekbang.org/account/avatar/00/15/66/8a/d71c2623.jpg","nickname":"贺 玄","note":"","ucode":"B30F95608D192D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329532,"discussion_content":"没错，读的操作也会进入等待状态。更不用提改数据了。这里用读更合适。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1606399552,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":302507,"ip_address":""},"score":329532,"extra":""}]},{"author":{"id":1639286,"avatar":"https://static001.geekbang.org/account/avatar/00/19/03/76/55df3b09.jpg","nickname":"jugg","note":"","ucode":"3CD779C93609CF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294377,"discussion_content":"啊，我认为 rr 和 rc 性能应该很难评判。只要在长事务的时候，rc的性能会好一点吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595862769,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2355521,"avatar":"https://static001.geekbang.org/account/avatar/00/23/f1/41/76c0758f.jpg","nickname":"君战","note":"","ucode":"A8619A79A5CED9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1639286,"avatar":"https://static001.geekbang.org/account/avatar/00/19/03/76/55df3b09.jpg","nickname":"jugg","note":"","ucode":"3CD779C93609CF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361661,"discussion_content":"间隙锁，next-key lock都是rr级别独有的锁，rc级别没有，","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1616724357,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":294377,"ip_address":""},"score":361661,"extra":""}]},{"author":{"id":1017377,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/86/21/4ef1a2d5.jpg","nickname":"非晚","note":"","ucode":"997B9A82DDDB8C","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":273970,"discussion_content":"妙啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590509184,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1906935,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/18/f7/c24531fe.jpg","nickname":"it_moons_bird","note":"","ucode":"E5D4E0FF03F462","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":205998,"discussion_content":"形象漂亮的总结\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584362318,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42783,"user_name":"WL","can_delete":false,"product_type":"c1","uid":1173771,"ip_address":"","ucode":"6277DCD776B87E","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/0b/1171ac71.jpg","comment_is_top":false,"comment_ctime":1543043571,"is_pvip":false,"replies":[{"id":"15313","content":"谢谢。我在微博上会截图优质评论，你的总结会经常“上榜”哈。如果有不合适你跟我说下，我去删掉🤝","user_name":"作者回复","comment_id":42783,"uid":"1264162","ip_address":"","utype":1,"ctime":1543044261,"user_name_real":"林晓斌"}],"discussion_count":31,"race_medal":0,"score":"1479011793395","product_id":100020801,"comment_content":"为该讲总结了几个问题, 大家复习的时候可以先尝试回答这些问题检查自己的掌握程度:<br><br>\t1. <br>事务的概念是什么?<br>\t2. <br>mysql的事务隔离级别读未提交, 读已提交, 可重复读, 串行各是什么意思?<br>\t3. <br>读已提交, 可重复读是怎么通过视图构建实现的?<br>\t4. <br>可重复读的使用场景举例? 对账的时候应该很有用?<br>\t5. <br>事务隔离是怎么通过read-view(读视图)实现的?<br>\t6. <br>并发版本控制(MCVV)的概念是什么, 是怎么实现的?<br>\t7. <br>使用长事务的弊病? 为什么使用常事务可能拖垮整个库?<br>\t8. <br>事务的启动方式有哪几种? <br>\t9. <br>commit work and chain的语法是做什么用的? <br>\t10. <br>怎么查询各个表中的长事务?<br>\t11. <br>如何避免长事务的出现?<br><br>","like_count":344,"discussions":[{"author":{"id":1285652,"avatar":"","nickname":"mycat","note":"","ucode":"6878BD32D042F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329701,"discussion_content":"简单回答一下：\n1.事务的概念是什么?\n事务是对数据库中数据操作的保证数据逻辑一致的最小操作单位。\n\n2.mysql的事务隔离级别读未提交, 读已提交, 可重复读, 串行各是什么意思?\n读未提交：一个事务读取到了其他事务未提交的操作。\n读已提交：一个事务读取到了其他事务已经提交的操作。\n可重复读：一个事务从它开始到结束整个生命周期中，所能读取到的数据内容和它启动的时候所能读到的数据内容是相同的。不会出现在事务运行的整个过程中，不同的时间点读取到的数据不一样的情况。\n串行化：所有的事务都进行排队执行，事务之间不存才并发的情况。读有读锁，写有写锁。读、读之间不影响，读、写和写、写之间互相排斥，当遇到排斥的情况后，后发生的事务需要等待先发生的事务执行完成后才可以执行。\n\n3.读已提交, 可重复读是怎么通过视图构建实现的?\n读已提交：会在事务中的每一个SQL语句执行的时候都为对应的SQL创建一个一致性视图。此时这个SQL能读取到已经提交的事务对数据的操作。\n可重复读：会在事务启动的时候，为整个事务创建一个一致性视图，这个视图会贯穿到这个事务执行结束。在整个事务执行过程中，都使用这个视图中的数据作为一致性读的依据。\n\n4.可重复读的使用场景举例? \n对账的时候应该很有用\n库管盘货\n\n5.事务隔离是怎么通过read-view(读视图)实现的?\n每一行数有多个版本，当我们要去读取数据的时候，要判断这个数据的版本号，对当前事务而言，是否可见，如果不可见，则要根据undolog计算得到上一个版本。如果上一个版本也不符合要求，则要找到再上一个版本，\n直到找到对应正确的数据版本。\n\n6.并发版本控制(MCVV)的概念是什么, 是怎么实现的?\n同一个数据行，在数据库中存在多个版本号，这个版本号可以理解为当初操作这行数据的事务的事务ID。当多个事务在并发进行的时候，判断某个事务是否可以读取到某一行时，\n会使用行的版本号，和当前事务的ID进行比较。如果发现比这个事务ID小，表示之前的事务提交的操作，对当前事务来说，此版本的数据可见。\n如果发现这个数据的版本号比当前事务的ID大，则表示有未来发生的事务提交生成的，对当前事务来说，此版本的数据不可见。\n如果发现这个竖行的版本号刚好等于某个正在运行的是事务ID，表示当前数据是由正运行的某个事务提交生成的，对当前事务来说，此版本数据不可见。\n如果当前事务自己修改的数据，当前事务还是可以看到的。\n\n7.使用长事务的弊病? 为什么使用常事务可能拖垮整个库?\n长事务导致表空间持续增长，即便是事务提交或者回滚后，回滚表空间被是否后，表空间大小仍然不会被缩小。\n长事务的存在导致锁发生冲突或等待的几率大大增加。\n如果某个应用有发生锁等待后尝试重新建立连接的机制，那么在发生锁等待或冲突的时候，应用就会不断地发起新的连接，导致MySQL的连接数被占用爆满。MySQL不能在提供连接服务，就挂掉了。\n\n8.事务的启动方式有哪几种?\nbegin;--一致性读的视图不会马上创建，而是在执行begin后面的第一个操作innodb表的SQL语句时生成。这个SQL可以是select,update,delete,insert。事务ID也是此时被分配的\nstart transaction;--和begin的功能效果一样。\nstart transaciton with consistent snapshot;--该语句执行后，会马上创建一致性读的视图。这个是它和begin的区别。事务ID也是此时被分配的。\n\n9.commit work and chain的语法是做什么用的?\n提交上一个事务，并且再开启一个新的事务。它的功能等效于：commit + begin。\n\n10.怎么查询各个表中的长事务?\nselect * from information_schema.innodb_trx;\n这个表中记录了所有正在运行的事务信息，里面有事务的开始时间。可以从这里看出哪些事务运行的时间比较长。\n\n11.如何避免长事务的出现?\n从数据库方面：\n    a.设置autocommit=1，不要设置为0。\n    b.写脚本监控information_schemal.innodb_trx表中数据内容，发现长事务，kill掉它。\n    c.配置SQL语句所能执行的最大运行时间，如果查过最大运行时间后，中断这个运行事情长的SQL语句。\n    d.设置回滚表空单独存放，便于回收表空间。\n从业务代码方面：\n    a.确认是否使用了autocommit=0的配置，如果有关闭它，然后再业务代码中手动的使用begin;commit来操作。\n    b.检查业务逻辑代码，能拆分为小事务的不要用大事务。\n    c.检查代码，把没有必要的select语句被事务包裹的情况去掉。","likes_number":103,"is_delete":false,"is_hidden":false,"ctime":1606448070,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":8,"child_discussions":[{"author":{"id":1820990,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/c9/3e/78cee9d0.jpg","nickname":"单行道","note":"","ucode":"C4B54DC46D975B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1285652,"avatar":"","nickname":"mycat","note":"","ucode":"6878BD32D042F2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331462,"discussion_content":"点赞，回答的很棒啊","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1606878725,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":329701,"ip_address":""},"score":331462,"extra":""},{"author":{"id":1048441,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ff/79/f400c4d1.jpg","nickname":"douge","note":"","ucode":"A6EB1AA3D53516","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1285652,"avatar":"","nickname":"mycat","note":"","ucode":"6878BD32D042F2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333631,"discussion_content":"你对 mvcc 可见性理解有问题，容易误导其他同学，可以参考文档 http://bos.itdks.com/b2c20ce5c11940b6b0a4e98547f67664.pdf","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1607583280,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":329701,"ip_address":""},"score":333631,"extra":""},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1285652,"avatar":"","nickname":"mycat","note":"","ucode":"6878BD32D042F2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339364,"discussion_content":"学得真好。我看到后面，前面部分就忘了一些。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1609645432,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":329701,"ip_address":""},"score":339364,"extra":""}]},{"author":{"id":1210699,"avatar":"https://static001.geekbang.org/account/avatar/00/12/79/4b/740f91ca.jpg","nickname":"-W.LI-","note":"","ucode":"3556786538664F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5587,"discussion_content":"之前面试有个人就你这么问，不会是你吧。。。。报坐标","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1566364470,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339363,"discussion_content":"你这思维有意思，看完文章，能从提问题角度来总结。","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1609645396,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430194,"discussion_content":"谢谢。我在微博上会截图优质评论，你的总结会经常“上榜”哈。如果有不合适你跟我说下，我去删掉🤝","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1543044261,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1731047,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/GmtqEx7x5hagZtXbd8Xs8ocUuHHLGIgiaqTwTcibPnpla1PVTbed2Ax7ZfzCjN2Qpeyao6ogq7L3icLzSB3vY1rlg/132","nickname":"Chanson","note":"","ucode":"74B3B180B4B953","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352525,"discussion_content":" mark","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1614761988,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1719182,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/3b/8e/8021a7a0.jpg","nickname":"Hey！Girl！","note":"","ucode":"0BDD344115D8C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339291,"discussion_content":"🐂！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1609594200,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1228560,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/10/b7974690.jpg","nickname":"BD","note":"","ucode":"A95CF8C3EDC228","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287695,"discussion_content":"大佬厉害啊 总结的问题很棒","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1593512096,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1134780,"avatar":"https://static001.geekbang.org/account/avatar/00/11/50/bc/eda0d9dc.jpg","nickname":"孙亚东。","note":"","ucode":"700F000BA7BB6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":203011,"discussion_content":"mvcc","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1583983105,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1074196,"avatar":"https://static001.geekbang.org/account/avatar/00/10/64/14/c980c239.jpg","nickname":"chenssy","note":"","ucode":"CB5AF27229E2D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2936,"discussion_content":"大佬，你这个题目貌似有点儿难度啊","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1564044697,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2912279,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/70/17/88d369d6.jpg","nickname":"摆烂👶🏻","note":"","ucode":"59E374F90EA0C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553148,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645754252,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1635841,"avatar":"https://static001.geekbang.org/account/avatar/00/18/f6/01/bc12af34.jpg","nickname":"灵灵","note":"","ucode":"2A1868830D10E3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":415226,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637030606,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1647680,"avatar":"","nickname":"Geek_998598","note":"","ucode":"4BB6646F054A5B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":407799,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635124258,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1210946,"avatar":"https://static001.geekbang.org/account/avatar/00/12/7a/42/595a6833.jpg","nickname":"大胖木杨","note":"","ucode":"01AEEC056D060D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394469,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631891034,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2755123,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIJKtGWbhzopsL1Cuic5JO6LwLD1YOhWD0NCzPudgTx75Mkmy4Cq9VDEEJn6A74LXCxK5RSnznZ8XQ/132","nickname":"张兆琪","note":"","ucode":"4B8258EE89ABC6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392338,"discussion_content":"事务可以和&#34;一组数据库操作&#34;画等号吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630975529,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1508903,"avatar":"https://static001.geekbang.org/account/avatar/00/17/06/27/9261ebc4.jpg","nickname":"superquanbin","note":"","ucode":"075B0DD77FB547","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387964,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628513429,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2714815,"avatar":"","nickname":"Geek_78d6d3","note":"","ucode":"3B7A595EEC5995","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386313,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627524274,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2524569,"avatar":"https://static001.geekbang.org/account/avatar/00/26/85/99/171b34d2.jpg","nickname":"Zmha_","note":"","ucode":"6DCF245FF797F8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380540,"discussion_content":"牛啊牛啊\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624548051,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1484257,"avatar":"https://static001.geekbang.org/account/avatar/00/16/a5/e1/77281d4e.jpg","nickname":"叁木辛尧","note":"","ucode":"CBBEEA3FDDD44F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369288,"discussion_content":"除了2、7、8、9，其他的基本回答不上来，看来还得多学呀。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618997060,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1504393,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/LbmatIMSwBb51hiaadzRmgClDicic0Eic3CMXkc6r9TxPu8IAJkFufUesRdv5VACCaUfjmtchSiaqmCEypibs5kwcwLQ/132","nickname":"凉夕","note":"","ucode":"A9CF36D4C4A348","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328965,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606288607,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1792714,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/5a/ca/4d5d23d1.jpg","nickname":"Im me","note":"","ucode":"FF7DEED4BB4C37","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328794,"discussion_content":"大佬，我得留下评论记得回来思考这几个问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606228568,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1812970,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/a9/ea/5bfce6c5.jpg","nickname":"mgs2002","note":"","ucode":"F5931108BD509B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308054,"discussion_content":"我去，好几个回答不上来。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600832274,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1462843,"avatar":"https://static001.geekbang.org/account/avatar/00/16/52/3b/f1501d79.jpg","nickname":"不工","note":"","ucode":"A8725E6D0E1765","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300474,"discussion_content":"这几个问题有比较完善的回答吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598120794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2052476,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Qq6oLfOTgKzjiculoUDicdv7WoY1iabPfOTumibWeInVP2Mnod9XVPrNSClvIiaLbvtDlIjRnWUNaXcYwREGzlcaDog/132","nickname":"Geek_在下蟑螂王","note":"","ucode":"E1F5BBB5BC5962","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297637,"discussion_content":"我靠非常有用，巩固了好几个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596990663,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46247,"user_name":"Gavin","can_delete":false,"product_type":"c1","uid":1134148,"ip_address":"","ucode":"0C7C27BC2736B6","user_header":"https://static001.geekbang.org/account/avatar/00/11/4e/44/66450d97.jpg","comment_is_top":false,"comment_ctime":1543888546,"is_pvip":false,"replies":[{"id":"16543","content":"非常好","user_name":"作者回复","comment_id":46247,"uid":"1264162","ip_address":"","utype":1,"ctime":1543889964,"user_name_real":"林晓斌"}],"discussion_count":52,"race_medal":0,"score":"1135415254690","product_id":100020801,"comment_content":"下面是我的自问自答，也是我的学习笔记，问下斌哥，这样理解准确吗？<br>在可重复读的隔离级别下，如何理解**当系统里没有比这个回滚日志更早的 read-view 的时候**，这个回滚日志就会被删除？<br><br>这也是**尽量不要使用长事务**的主要原因。<br><br>比如，在某个时刻（今天上午9:00）开启了一个事务A（对于可重复读隔离级别，此时一个视图read-view A也创建了），这是一个很长的事务……<br><br>事务A在今天上午9:20的时候，查询了一个记录R1的一个字段f1的值为1……<br><br>今天上午9:25的时候，一个事务B（随之而来的read-view B）也被开启了，它更新了R1.f1的值为2（同时也创建了一个由2到1的回滚日志），这是一个短事务，事务随后就被commit了。<br><br>今天上午9:30的时候，一个事务C（随之而来的read-view C）也被开启了，它更新了R1.f1的值为3（同时也创建了一个由3到2的回滚日志），这是一个短事务，事务随后就被commit了。<br><br>……<br><br>到了下午3:00了，长事务A还没有commit，为了保证事务在执行期间看到的数据在前后必须是一致的，那些老的事务视图、回滚日志就必须存在了，这就占用了大量的存储空间。<br><br>源于此，我们应该尽量不要使用长事务。","like_count":264,"discussions":[{"author":{"id":1131687,"avatar":"https://static001.geekbang.org/account/avatar/00/11/44/a7/171c1e86.jpg","nickname":"啦啦啦","note":"","ucode":"6B12EC90A62525","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":93128,"discussion_content":"A事务的查询还必须是快照读，如果是当前读，会造成别的事务更新的时候阻塞","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1576909488,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1665194,"avatar":"https://static001.geekbang.org/account/avatar/00/19/68/aa/4b58cfd3.jpg","nickname":"神韵","note":"","ucode":"0337AC63C9FBD1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291530,"discussion_content":"更新数据都是先读后写的，而这个读，只能读当前的值，称为“当前读”（current read）。所以B/C视图的更新也创建了read view","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1594863362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431397,"discussion_content":"非常好","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1543889964,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":2,"child_discussions":[{"author":{"id":2212810,"avatar":"https://static001.geekbang.org/account/avatar/00/21/c3/ca/93f7eca9.jpg","nickname":"Cassie","note":"","ucode":"1C68BDBCC95FA5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":534760,"discussion_content":"如果长事务A在事务B和事务C完成提交后更新同一条记录，发生异常回滚了，事务A回滚后的值是事务A刚开始读到那条记录的值还是事务C提交后的值呢(即当前已提交的最新值)？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638273074,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":431397,"ip_address":""},"score":534760,"extra":""},{"author":{"id":1150022,"avatar":"https://static001.geekbang.org/account/avatar/00/11/8c/46/dbf8eb8a.jpg","nickname":"kelly","note":"","ucode":"B1DFA3D7340869","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2212810,"avatar":"https://static001.geekbang.org/account/avatar/00/21/c3/ca/93f7eca9.jpg","nickname":"Cassie","note":"","ucode":"1C68BDBCC95FA5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547547,"discussion_content":"事务B和C已经提交了事务ID一定是大于事务A的，A事务执行前生成一条undo log ，事务C undo log--&gt;事务B undo log --&gt;事务A undo log链表形式，此时若事务A回滚 发现事务B和事务C的事务id不在自己ReadView的m_ids范围且大于最大trx_id那么对事务B和事务C的记录的undo 版本链 自己不能看到，假如有事务D此时 最新值应该为 事务C提交后修改的值","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1642742671,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":534760,"ip_address":""},"score":547547,"extra":""}]},{"author":{"id":2711249,"avatar":"","nickname":"Geek_60bcde","note":"","ucode":"AD7792E790373F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387752,"discussion_content":"太清晰了这个例子","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1628399082,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1942240,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/a2/e0/571cb1b4.jpg","nickname":"起风","note":"","ucode":"EE43398805B692","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":243354,"discussion_content":"请问如果事务A回滚，是回滚到事务C的提交f1=3吗？？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1587535781,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":2130032,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/mpsOZBaHEA5oZ4A43dU21tNsakMyLRcmjn1liaJctPYfVkzB18dspeoOFNUxmEBq7I6Bjib0qPiaoF5uu0icNYek5g/132","nickname":"BestRiven","note":"","ucode":"D2642BC46EE9FC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1942240,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/a2/e0/571cb1b4.jpg","nickname":"起风","note":"","ucode":"EE43398805B692","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302967,"discussion_content":"做了实验是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599099527,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":243354,"ip_address":""},"score":302967,"extra":""},{"author":{"id":1062451,"avatar":"https://static001.geekbang.org/account/avatar/00/10/36/33/67904e86.jpg","nickname":"James","note":"","ucode":"886D1A102C1588","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1942240,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/a2/e0/571cb1b4.jpg","nickname":"起风","note":"","ucode":"EE43398805B692","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343898,"discussion_content":"回滚的说法应该不准确，事务A回滚前事务C是阻塞的，A回滚后C提交事务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611211533,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":243354,"ip_address":""},"score":343898,"extra":""},{"author":{"id":1134266,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4e/ba/580ec429.jpg","nickname":"小兔子乖乖","note":"","ucode":"E5CC0258CF8858","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1062451,"avatar":"https://static001.geekbang.org/account/avatar/00/10/36/33/67904e86.jpg","nickname":"James","note":"","ucode":"886D1A102C1588","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369846,"discussion_content":"事务a的select不会阻塞事务b和c的update","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619172031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":343898,"ip_address":""},"score":369846,"extra":""}]},{"author":{"id":1120074,"avatar":"https://static001.geekbang.org/account/avatar/00/11/17/4a/87a6f2dc.jpg","nickname":"yy","note":"","ucode":"04D42CDE3F5BBA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":219595,"discussion_content":"好","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1585788327,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1942134,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/a2/76/65ccb490.jpg","nickname":"L","note":"","ucode":"724812566D46B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":218845,"discussion_content":"有两个问题想请教下\n1. 不是可重复读的状态吗，事物A看到的本来就是一致的，为什么还要保存回滚日志的\n2. 老的事物视图是指事物B和C的吗，为什么要保存","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1585705366,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":6,"child_discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1942134,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/a2/76/65ccb490.jpg","nickname":"L","note":"","ucode":"724812566D46B2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":225935,"discussion_content":"如果事务A异常回滚，不保留B和C的回滚日志，B和C的修改就丢了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586407911,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":218845,"ip_address":""},"score":225935,"extra":""},{"author":{"id":1926122,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/63/ea/1a128e67.jpg","nickname":"来需求了，很忙","note":"","ucode":"B77D1846FC9EED","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295941,"discussion_content":"事务A只是一个读操作，异常回滚为什么会丢失B和C的修改呢？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1596385559,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":225935,"ip_address":""},"score":295941,"extra":""},{"author":{"id":2195859,"avatar":"https://static001.geekbang.org/account/avatar/00/21/81/93/97b3c333.jpg","nickname":"Geek_681da7","note":"","ucode":"6BDB6AA576E196","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1942134,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/a2/76/65ccb490.jpg","nickname":"L","note":"","ucode":"724812566D46B2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":307613,"discussion_content":"对于问题1：因为事务A还在执行中未提交，所以随时会读取“事务开启”时刻的值，而当时的值，只能依赖回滚日志得到。（不知道理解的对不对","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1600696325,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":218845,"ip_address":""},"score":307613,"extra":""}]},{"author":{"id":1111552,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f6/00/2a248fd8.jpg","nickname":"二星球","note":"","ucode":"89EC5FEB98E7CE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6798,"discussion_content":"锁住了，改不了了吧","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567126807,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1111552,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f6/00/2a248fd8.jpg","nickname":"二星球","note":"","ucode":"89EC5FEB98E7CE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":225938,"discussion_content":"没写加锁，可以改","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586408022,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":6798,"ip_address":""},"score":225938,"extra":""}]},{"author":{"id":1710046,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/17/de/36000c5a.jpg","nickname":"Louis","note":"","ucode":"9A8A67FE6A1BF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411848,"discussion_content":"为了保证事务在执行期间看到的数据在前后必须是一致的，所以保留了其他事物的变更记录","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636017365,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1679661,"avatar":"https://static001.geekbang.org/account/avatar/00/19/a1/2d/599e9051.jpg","nickname":"CycleGAN","note":"","ucode":"9FD04813911A02","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":400596,"discussion_content":"要获取A的这一条数据，需要通过当前最新的udlog数据回溯中间的每一步，主要是记录了中间每个事物的数据，如果长事物涉及到的行没有改变，应该不会涉及到很多存储空间吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633342696,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2308968,"avatar":"","nickname":"Geek_9789da","note":"","ucode":"6A4A182A7E2C6B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":400335,"discussion_content":"在设置一个超时时间更好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633238932,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1201022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/53/7e/b6829040.jpg","nickname":"SevenMonths","note":"","ucode":"62A9740FBD1FAE","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393843,"discussion_content":"完美呀这个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631616952,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2742451,"avatar":"https://static001.geekbang.org/account/avatar/00/29/d8/b3/38105dbb.jpg","nickname":"克克","note":"","ucode":"0FA7CA5AB26A6F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392359,"discussion_content":".","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630980713,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2604432,"avatar":"https://static001.geekbang.org/account/avatar/00/27/bd/90/99ab3369.jpg","nickname":"局外人","note":"","ucode":"B8E2ED7A8ABE11","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391571,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630519456,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2350043,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/sFkJYPdIIjHfxgCxAh1D4Pyk1jAueicu7egY1PUvR8egs12gAXxmO51YT6Bk7NianYRyMRPTpd3kKWXvZ8TEkRyw/132","nickname":"Geek_7794e2","note":"","ucode":"2F749554FEA20D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335129,"discussion_content":"豁然开朗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608100870,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1820990,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/c9/3e/78cee9d0.jpg","nickname":"单行道","note":"","ucode":"C4B54DC46D975B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331465,"discussion_content":"这个例子我觉得写得很好，事务A是没有当前读（也就是update操作的，因此读的永远都是回滚日志，也就是undo log），所以长事务会导致空间增加的说法这个例子完美说明了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606879122,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2564241,"avatar":"https://static001.geekbang.org/account/avatar/00/27/20/91/61162bdc.jpg","nickname":"Violet","note":"","ucode":"0A5358A06362DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1820990,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/c9/3e/78cee9d0.jpg","nickname":"单行道","note":"","ucode":"C4B54DC46D975B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369124,"discussion_content":"我之前以为视图是一个缓存。现在看来视图是需要在每一次sql执行之前使用回滚日志计算得到的数据啊？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618932267,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":331465,"ip_address":""},"score":369124,"extra":""}]},{"author":{"id":1285652,"avatar":"","nickname":"mycat","note":"","ucode":"6878BD32D042F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329724,"discussion_content":"比如，在某个时刻（今天上午9:00）开启了一个事务A（对于可重复读隔离级别，此时一个视图read-view A也创建了），这是一个很长的事务……\n\n这里A事务开启的方式需要说明一下，如果想满足楼主的这个例子，需要使用start transaction with consistent snapshot;的方式，因为这样的方式才会马上创建一致性视图。如果是使用的begin;的方式，后续事务A没有任何操作，只是在下午3点的时候执行了commit;提交操作，那么事务A其实是没有真正开启的，它没有任何视图被创建。所以也就不会有楼主说的“占用了大量的存储空间”这个问题了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606450537,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1285652,"avatar":"","nickname":"mycat","note":"","ucode":"6878BD32D042F2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339597,"discussion_content":"事务A select查询时会创建视图，只是快照读。不是这样吗?","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1609744583,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":329724,"ip_address":""},"score":339597,"extra":""},{"author":{"id":1134266,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4e/ba/580ec429.jpg","nickname":"小兔子乖乖","note":"","ucode":"E5CC0258CF8858","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1285652,"avatar":"","nickname":"mycat","note":"","ucode":"6878BD32D042F2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369842,"discussion_content":"楼主有说事务a在9:20的时候执行了select语句，事务b和c的update都是在9:20之后噢，所以是没毛病的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619171421,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":329724,"ip_address":""},"score":369842,"extra":""}]},{"author":{"id":2261175,"avatar":"","nickname":"Geek_b8d5c9","note":"","ucode":"505F33B4C0EA31","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318141,"discussion_content":"如果事物A是修改的呢 其他的都提交了 最后A在提交 其它事物会改变吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603645187,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1285652,"avatar":"","nickname":"mycat","note":"","ucode":"6878BD32D042F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2261175,"avatar":"","nickname":"Geek_b8d5c9","note":"","ucode":"505F33B4C0EA31","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329722,"discussion_content":"A先修改的话，不提交的话，BC都会阻塞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606450151,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":318141,"ip_address":""},"score":329722,"extra":""},{"author":{"id":1820990,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/c9/3e/78cee9d0.jpg","nickname":"单行道","note":"","ucode":"C4B54DC46D975B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2261175,"avatar":"","nickname":"Geek_b8d5c9","note":"","ucode":"505F33B4C0EA31","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331463,"discussion_content":"看其他事务是执行的什么语句还有隔离级别，就拿可重复读级别来说，别的事务如果是select语句那么就是一致性读，也就是他读的是read-view视图，此时屁事没有，如果是update，那么就是当前读，当前读一定回去拿最新的数据，此时也会有锁冲突","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1606878961,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":318141,"ip_address":""},"score":331463,"extra":""}]},{"author":{"id":1015862,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/80/36/29e4863f.jpg","nickname":"01Running","note":"","ucode":"2E50E4FD35D3B5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213398,"discussion_content":"因为 A读的还是 1，所以回滚日志必须存在，理解没问题吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585067071,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1508329,"avatar":"https://static001.geekbang.org/account/avatar/00/17/03/e9/6358059c.jpg","nickname":"GalaxyCreater","note":"","ucode":"C79E8A088D57CF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":80087,"discussion_content":"执行那么长时间的事务的情况很少有吧，或者处理出bug没commit，或者乱设autocommit=0","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576145427,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1178235,"avatar":"https://static001.geekbang.org/account/avatar/00/11/fa/7b/f89a398b.jpg","nickname":"Charles | 姜海龙","note":"","ucode":"17BA74D1684184","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5147,"discussion_content":"本来我还对回滚日志的理解不够深刻，现在都懂了！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566011953,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1133918,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4d/5e/c5c62933.jpg","nickname":"lmtoo","note":"","ucode":"FCD5B9C941D448","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352,"discussion_content":"如果事务A改了记录R1的值为5，下午提交，那是不是事务B和事务C的更改就丢失了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561470236,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":13,"child_discussions":[{"author":{"id":1178235,"avatar":"https://static001.geekbang.org/account/avatar/00/11/fa/7b/f89a398b.jpg","nickname":"Charles | 姜海龙","note":"","ucode":"17BA74D1684184","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1133918,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4d/5e/c5c62933.jpg","nickname":"lmtoo","note":"","ucode":"FCD5B9C941D448","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5149,"discussion_content":"正常情况下修改应该会有nextkeylock吧，这里可能是其他行数据修改也得有回滚日志？才想起来我们可以手动试验一下就懂了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566012201,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":352,"ip_address":""},"score":5149,"extra":""},{"author":{"id":1361746,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c7/52/c5adf218.jpg","nickname":"喜欢地球的阿培同学","note":"","ucode":"5F97037585F857","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1133918,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4d/5e/c5c62933.jpg","nickname":"lmtoo","note":"","ucode":"FCD5B9C941D448","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5603,"discussion_content":"哥子，R1这行数据会被锁住，事务B和事务C会阻塞的！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566374734,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":352,"ip_address":""},"score":5603,"extra":""},{"author":{"id":1363803,"avatar":"https://static001.geekbang.org/account/avatar/00/14/cf/5b/4b96b6f3.jpg","nickname":"别吵我睡觉","note":"","ucode":"A1BC2A1AB7CB82","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1361746,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c7/52/c5adf218.jpg","nickname":"喜欢地球的阿培同学","note":"","ucode":"5F97037585F857","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":19746,"discussion_content":"都说“在可重复读的隔离级别下”，还锁啥","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1569220462,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":5603,"ip_address":""},"score":19746,"extra":""}]}]},{"had_liked":false,"id":49418,"user_name":"William","can_delete":false,"product_type":"c1","uid":1346215,"ip_address":"","ucode":"55F5D9DEE485B1","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","comment_is_top":false,"comment_ctime":1544684293,"is_pvip":true,"discussion_count":18,"race_medal":0,"score":"697329386245","product_id":100020801,"comment_content":"脏读：<br>\t当数据库中一个事务A正在修改一个数据但是还未提交或者回滚，<br>\t另一个事务B 来读取了修改后的内容并且使用了，<br>    之后事务A提交了，此时就引起了脏读。  <br>   <br>\t此情况仅会发生在： 读未提交的的隔离级别.<br>   <br>不可重复读：<br>\t在一个事务A中多次操作数据，在事务操作过程中(未最终提交)，<br>\t事务B也才做了处理，并且该值发生了改变，这时候就会导致A在事务操作<br>\t的时候，发现数据与第一次不一样了。 就是不可重复读。<br>\t<br>\t此情况仅会发生在：读未提交、读提交的隔离级别.<br>\t<br>幻读：<br>\t一个事务按相同的查询条件重新读取以前检索过的数据，<br>\t却发现其他事务插入了满足其查询条件的新数据，这种现象就称为幻读。<br>\t<br>\t幻读是指当事务不是独立执行时发生的一种现象，例如第一个事务对一个表中的数据进行了修改，比如这种修改涉及到表中的“全部数据行”。同时，第二个事务也修改这个表中的数据，这种修改是向表中插入“一行新数据”。那么，以后就会发生操作第一个事务的用户发现表中还存在没有修改的数据行，就好象发生了幻觉一样.<br>\t一般解决幻读的方法是增加范围锁RangeS，锁定检索范围为只读，这样就避免了幻读。<br>\t<br>\t此情况会回发生在：读未提交、读提交、可重复读的隔离级别.<br>\t<br>\t<br>事务的隔离级别：<br>\t四种：读未提交 、 读提交 、 可重复读、 串行化。","like_count":163,"discussions":[{"author":{"id":1346215,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","nickname":"William","note":"","ucode":"55F5D9DEE485B1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41697,"discussion_content":"还得经常看才能巩固. \n重申幻读定义: 事务a 开启, 查询符合条件的数据 ,发现有10条, 准备将这10条记录修改, 此时事务b开启, 插入了一条符合事务a查询条件的记录. 提交事务,   回到事务a, a也提交事务, 当再次查询到时候, 发现修改了11条..感觉发生了幻觉一样.  此为幻读.\n\n\n        事务隔离级别                             脏读     不可重复读        幻读\n        读未提交（read-uncommitted）    是          是                    是\n        不可重复读（read-committed）     否         是                    是\n        可重复读（repeatable-read）       否          否                     是\n        串行化（serializable）                否           否                     否\n\n ","likes_number":18,"is_delete":false,"is_hidden":false,"ctime":1572488233,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":7,"child_discussions":[{"author":{"id":1806081,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/8f/01/2fbc5cc9.jpg","nickname":"xiaozeng","note":"","ucode":"C517E55357315C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1346215,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","nickname":"William","note":"","ucode":"55F5D9DEE485B1","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":291598,"discussion_content":"脏读：当前事务读到的数据是别的事务想要修改成为的但是没有修改成功的数据。\n举例：事务A开启 update tb set name=&#39;zhangshan&#39; where k=20  提交之前， 事务B开始了 去拿 k=20的name值，提交。然后这时候事务A 提交事务 发生了错误，进行回滚。所以B取得数据是和现版本不一致的。\n不可重复读：当前事务先进行了一次数据读取，然后再次读取到的数据是别的事务修改成功的数据，导致两次读取到的数据不匹配，也就照应了不可重复读的语义。\n幻读：当前事务读第一次取到的数据比后来读取到数据条目少。\n举例：事务A首先根据条件索引得到N条数据，然后事务B改变了这N条数据之外的M条或者增添了M条符合事务A搜索条件的数据，导致事务A再次搜索发现有N+M条数据了，就产生了幻读。\n不可重复读针对的是update或delete，幻读针对的insert。","likes_number":17,"is_delete":false,"is_hidden":false,"ctime":1594885343,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":41697,"ip_address":""},"score":291598,"extra":""},{"author":{"id":1120025,"avatar":"https://static001.geekbang.org/account/avatar/00/11/17/19/46fcde38.jpg","nickname":"yonyoupht","note":"","ucode":"9B3AC96150B8AD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1346215,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","nickname":"William","note":"","ucode":"55F5D9DEE485B1","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":296321,"discussion_content":"对于幻读，楼上的定义比较易懂","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1596510652,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":41697,"ip_address":""},"score":296321,"extra":""},{"author":{"id":1346215,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","nickname":"William","note":"","ucode":"55F5D9DEE485B1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1120025,"avatar":"https://static001.geekbang.org/account/avatar/00/11/17/19/46fcde38.jpg","nickname":"yonyoupht","note":"","ucode":"9B3AC96150B8AD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301335,"discussion_content":"嗯.\n哪个好懂，我们就看哪个.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598492466,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":296321,"ip_address":""},"score":301335,"extra":""}]},{"author":{"id":1237583,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e2/4f/df01f65e.jpg","nickname":"Danfēng","note":"","ucode":"E5B3451F1D0441","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":279410,"discussion_content":"花了比较多的时间理解你的东西，又找了大量资料，脏读和不可重复读区别就是脏读读的是其他未提交事务内容；不可重复读，读的是其他事务提交后的新内容。两者都会可能导致在当前事务中，读取的记录会被其他事务修改。而幻读，“幻影读行”，顾名思义，就是当前事务在没新增记录情况下，执行原有记录修改过程中，其他事务新增记录，所以总行数多了","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1591341436,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1541518,"avatar":"https://static001.geekbang.org/account/avatar/00/17/85/8e/fb2c54a0.jpg","nickname":"Flandrelu` ´","note":"","ucode":"6705B950329C3C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":270589,"discussion_content":"rr隔离级别的可重复读下是有gap锁的存在的，好像不会产生幻读的吧","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1590027409,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1874999,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/9c/37/253ea895.jpg","nickname":"我不是码农","note":"","ucode":"EB4BB711CC54B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549937,"discussion_content":"4个通用的隔离级别，分别存在不同的问题，这与MySQL无关。而MySQL为了解决存在的这些问题，发明了MVCC。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1644303483,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1259876,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/KYvWM0tjH8j920S32qkGMDDeRJDIg4LoqRppe74AISyhYyKmGTcia3BvDqjvibhCicx7ncGSRbQyd2phR7ZUZwR6A/132","nickname":"落月","note":"","ucode":"10663079C7096F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382479,"discussion_content":"不对吧，\n一个事务按相同的查询条件重新读取以前检索过的数据，\n却发现其他事务插入了满足其查询条件的新数据，这种现象就称为幻读\n\n这属于不可重复读，两次读取的不一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625587461,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1226968,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b8/d8/f81b5604.jpg","nickname":"hcyycb","note":"","ucode":"77FF6CA41F9E66","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1259876,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/KYvWM0tjH8j920S32qkGMDDeRJDIg4LoqRppe74AISyhYyKmGTcia3BvDqjvibhCicx7ncGSRbQyd2phR7ZUZwR6A/132","nickname":"落月","note":"","ucode":"10663079C7096F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":407030,"discussion_content":"不可重复读，是对相同行来说。幻读，是对新增的行来说。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634896471,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":382479,"ip_address":""},"score":407030,"extra":""},{"author":{"id":1259876,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/KYvWM0tjH8j920S32qkGMDDeRJDIg4LoqRppe74AISyhYyKmGTcia3BvDqjvibhCicx7ncGSRbQyd2phR7ZUZwR6A/132","nickname":"落月","note":"","ucode":"10663079C7096F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1226968,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b8/d8/f81b5604.jpg","nickname":"hcyycb","note":"","ucode":"77FF6CA41F9E66","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":535141,"discussion_content":"对，减少行也属于幻读","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638361217,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":407030,"ip_address":""},"score":535141,"extra":""},{"author":{"id":1259876,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/KYvWM0tjH8j920S32qkGMDDeRJDIg4LoqRppe74AISyhYyKmGTcia3BvDqjvibhCicx7ncGSRbQyd2phR7ZUZwR6A/132","nickname":"落月","note":"","ucode":"10663079C7096F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1226968,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b8/d8/f81b5604.jpg","nickname":"hcyycb","note":"","ucode":"77FF6CA41F9E66","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":535143,"discussion_content":"之前的理解不到位...","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638361260,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":407030,"ip_address":""},"score":535143,"extra":""}]},{"author":{"id":1809802,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/8a/a2d34896.jpg","nickname":"一元(wx:abley1874)","note":"","ucode":"5E7A33642FC767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301253,"discussion_content":"脏读：事务A，读取了事务B中修改了但还未提交的数据。当事务B提交，就出现了脏读。仅出现在读未提交的事务隔离级别。\n不可重复读：在同一个事务中，两次读取到的数据不一致。第一次读取到的数据，第二次读没有了。\n幻读：在同一个事务中，两次读取到的数据不一致。第一次读取到的数据，第二次虽然有，但是不一样了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598453314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1638791,"avatar":"https://static001.geekbang.org/account/avatar/00/19/01/87/1a2882ac.jpg","nickname":"谭爻","note":"","ucode":"0555C52069B1FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1809802,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/8a/a2d34896.jpg","nickname":"一元(wx:abley1874)","note":"","ucode":"5E7A33642FC767","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":368410,"discussion_content":"幻读和不可重复读高反了吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618677568,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":301253,"ip_address":""},"score":368410,"extra":""},{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1809802,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/8a/a2d34896.jpg","nickname":"一元(wx:abley1874)","note":"","ucode":"5E7A33642FC767","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":368963,"discussion_content":"你把不可重复读和幻读都理解错了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618890191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":301253,"ip_address":""},"score":368963,"extra":""}]}]},{"had_liked":false,"id":41412,"user_name":"杨","can_delete":false,"product_type":"c1","uid":1105205,"ip_address":"","ucode":"D0D765F986AF59","user_header":"https://static001.geekbang.org/account/avatar/00/10/dd/35/f9cbab6a.jpg","comment_is_top":false,"comment_ctime":1542776575,"is_pvip":false,"discussion_count":7,"race_medal":0,"score":"495464015615","product_id":100020801,"comment_content":"能抽出一章详细的讲讲mvcc吗，感觉很模糊","like_count":115,"discussions":[{"author":{"id":2036924,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/14/bc/326284b1.jpg","nickname":"ambrella","note":"","ucode":"9C0019364DCBB5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374029,"discussion_content":"https://database.51cto.com/art/202101/641019.htm","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1620976125,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2667025,"avatar":"","nickname":"Geek_a39aea","note":"","ucode":"94E6C8088AE0CB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2036924,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/14/bc/326284b1.jpg","nickname":"ambrella","note":"","ucode":"9C0019364DCBB5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385565,"discussion_content":"很详细，这篇文章","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627133133,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":374029,"ip_address":""},"score":385565,"extra":""},{"author":{"id":1601661,"avatar":"","nickname":"GEEKBANG_8559966","note":"","ucode":"C3C87C3D7164FD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2036924,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/14/bc/326284b1.jpg","nickname":"ambrella","note":"","ucode":"9C0019364DCBB5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":404384,"discussion_content":"老哥，稳，老哥是好人","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634297905,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":374029,"ip_address":""},"score":404384,"extra":""}]},{"author":{"id":1336951,"avatar":"https://static001.geekbang.org/account/avatar/00/14/66/77/194ba21d.jpg","nickname":"lzh","note":"","ucode":"C3D83DF4230109","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3083,"discussion_content":"可以看看《mysql技术内幕》","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1564151256,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1201022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/53/7e/b6829040.jpg","nickname":"SevenMonths","note":"","ucode":"62A9740FBD1FAE","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":1336951,"avatar":"https://static001.geekbang.org/account/avatar/00/14/66/77/194ba21d.jpg","nickname":"lzh","note":"","ucode":"C3D83DF4230109","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393851,"discussion_content":"MySQL技术内幕 也没讲那?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631618134,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":3083,"ip_address":""},"score":393851,"extra":""}]},{"author":{"id":1015381,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7e/55/abb7bfe3.jpg","nickname":"李翔","note":"","ucode":"AC441C1F8C9DD5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336066,"discussion_content":"太意识流了...","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608467898,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2553939,"avatar":"https://static001.geekbang.org/account/avatar/00/26/f8/53/d12247be.jpg","nickname":"maxism","note":"","ucode":"DFC5934C769A21","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1015381,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7e/55/abb7bfe3.jpg","nickname":"李翔","note":"","ucode":"AC441C1F8C9DD5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373405,"discussion_content":"这个讲的比较清楚 https://blog.csdn.net/SnailMann/article/details/94724197","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1620719164,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":336066,"ip_address":""},"score":373405,"extra":""}]}]},{"had_liked":false,"id":40223,"user_name":"lfn","can_delete":false,"product_type":"c1","uid":1026593,"ip_address":"","ucode":"2E1558C6A12A89","user_header":"https://static001.geekbang.org/account/avatar/00/0f/aa/21/6c3ba9af.jpg","comment_is_top":false,"comment_ctime":1542561095,"is_pvip":false,"replies":[{"id":"14518","content":"对于RR，你可以这么想，每个事务启动的时候打一个快照，别人改的“我不听我不听”😄","user_name":"作者回复","comment_id":40223,"uid":"1264162","ip_address":"","utype":1,"ctime":1542594003,"user_name_real":"林晓斌"}],"discussion_count":5,"race_medal":0,"score":"302190271815","product_id":100020801,"comment_content":"事务隔离的实现似乎有点太简略，没跟上林老师的思路。。","like_count":70,"discussions":[{"author":{"id":1175430,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ef/86/12f95d66.jpg","nickname":"FATMAN89","note":"","ucode":"48A67FB47B3C5D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353258,"discussion_content":"对于rr来说是第一次执行select语句会生成一个readview，并不是事务一开始就生成，事务一启动就生成readview是当事务开启语句为start transaction with consistent snapshot的时候，这块老师讲的有点简单了，实际上应该讲到每个记录的隐藏列trxid，roll_pointer，这个pointer指向的undo log链表，也就是版本链，还要再说一下readview包含的内容，比如活跃事务id列表，最小活跃事务id，下个最大事务id，readview生成者事务id，因为数据库实际上是靠这些信息判断某个数据可见与否的。这里也没说如果是访问二级索引需要看page header包含的最大事务id","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1615100700,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1113864,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ff/08/7c18d8a4.jpg","nickname":"团","note":"","ucode":"D56ABBCE4E4D90","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1175430,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ef/86/12f95d66.jpg","nickname":"FATMAN89","note":"","ucode":"48A67FB47B3C5D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550601,"discussion_content":"确实原文中这些细节没有说清楚，感觉云里雾里，有点懵","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644634940,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":353258,"ip_address":""},"score":550601,"extra":""},{"author":{"id":2924014,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/9d/ee/a58e330a.jpg","nickname":"刘越阳","note":"","ucode":"FC3EE6E01D8C92","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1175430,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ef/86/12f95d66.jpg","nickname":"FATMAN89","note":"","ucode":"48A67FB47B3C5D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574323,"discussion_content":"对，老师这些他这里没有提到，让我一直以为视图是一个快照的概念，让我一直get不到回滚日志，长事务坏处的概念","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653975866,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":353258,"ip_address":""},"score":574323,"extra":""}]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429429,"discussion_content":"对于RR，你可以这么想，每个事务启动的时候打一个快照，别人改的“我不听我不听”😄","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1542594003,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1000015,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/42/4f/ff1ac464.jpg","nickname":"又双叒叕是一年啊","note":"","ucode":"E067320E537DEE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5082,"discussion_content":"RR每次事务启动时候生成一个快照，如果A事务先启动读取的快照较旧并且A事务是个长事务提交晚，期间B事务启动读取了快照并更新了数据提交了事务，此时A事务刚要提交事物它会回滚吗？还是有其他处理？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1565930606,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40732,"user_name":"滩涂曳尾","can_delete":false,"product_type":"c1","uid":1187478,"ip_address":"","ucode":"40F650F2A419D4","user_header":"https://static001.geekbang.org/account/avatar/00/12/1e/96/c735ad6b.jpg","comment_is_top":false,"comment_ctime":1542672510,"is_pvip":false,"discussion_count":16,"race_medal":0,"score":"272125612158","product_id":100020801,"comment_content":"在“读提交”隔离级别下，这个视图是在每个 SQL 语句开始执行的时候创建的。老师，这句话怎么理解呢","like_count":63,"discussions":[{"author":{"id":1207854,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6e/2e/008b5481.jpg","nickname":"路过的猪","note":"","ucode":"5CC5FEB7977289","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":178419,"discussion_content":"创建read_riew，其实就是当前的事务拍了个快照，会记录【当前时刻】的一些事务id，包括进行中的、已提交的、尚未开始的等等；引擎可以根据这个read_view + 回滚段，找到【快照时刻】的数据。如果事务期间，我们一直用同一个read_view去查数据，自然可以保证【可重复读】了。而【提交读】是需要【每次都读到最新已提交】的数据的，所以每次执行SQL都创建一个全新的read_view，以保证该特性。\n【提交读】不创建read_view行不行？不行，因为当前【数据页】中最新的数据是【有可能未提交】的，没有read_view作为依据，是无法确定到哪个位置（数据页/回滚段）找到已提交的数据的。相对地，【未提交读】则不需要read_view，直接获取数据页中最新的数据（不管是否提交，所以有可能会出现脏读）。","likes_number":64,"is_delete":false,"is_hidden":false,"ctime":1582162483,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":7,"child_discussions":[{"author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1207854,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6e/2e/008b5481.jpg","nickname":"路过的猪","note":"","ucode":"5CC5FEB7977289","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":269620,"discussion_content":"666","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589933996,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":178419,"ip_address":""},"score":269620,"extra":""},{"author":{"id":1126597,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJZhuQk0ibMqdsASdJib2aUKNjTiaVm1ib3EfjyyiaKBJAyzYFls9KTEQ3w60cpy5CPLRNHsX8uooDoB8g/132","nickname":"rock","note":"","ucode":"A512CED4619E7A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1207854,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6e/2e/008b5481.jpg","nickname":"路过的猪","note":"","ucode":"5CC5FEB7977289","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":280830,"discussion_content":"感觉你把老师没有讲清楚的细节说明白了。\nread_view里的数据一定是“已提交的”。这是使用read_view，而不是直接使用数据页数据的区别--避免脏读。\n什么时候去加载“已提交的”数据至read_view，这是--避免不可重复读。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1591617909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":178419,"ip_address":""},"score":280830,"extra":""},{"author":{"id":1751818,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/bb/0a/f9d81f3e.jpg","nickname":"挥手自兹去，萧萧班马鸣","note":"","ucode":"AE3A2187AC1A30","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1207854,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6e/2e/008b5481.jpg","nickname":"路过的猪","note":"","ucode":"5CC5FEB7977289","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294837,"discussion_content":"【提交读】的应用场景是不是像多人在线文档这种，而【可重复读】的应用场景是像银行转账这种？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596013245,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":178419,"ip_address":""},"score":294837,"extra":""}]},{"author":{"id":1665194,"avatar":"https://static001.geekbang.org/account/avatar/00/19/68/aa/4b58cfd3.jpg","nickname":"神韵","note":"","ucode":"0337AC63C9FBD1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291533,"discussion_content":"在“读提交”隔离级别下，这个视图是在每个 SQL 语句开始执行的时候创建的。\n对于这个问题，说说我的理解：\n1、这个视图是在每个SQL语句开始时创建，意味着只要是select、update等语句都会创建一个视图，所以说读提交的情况下，没有一致性视图。\n2、没有一致性视图，意味着别的事务进行修改提交后，当前事务进行select时又是创建最新的视图，最新读，所以读提交可以读取别的事务已经提交的数据。","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1594863924,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1320092,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM4z9WYWVvWDhMF0SicPE5ad56ME6DibyWGbRoQa0lH4U9icdsjNcv3ssRickcuRMDA01e6vMXnmOVSr9l5LVUefVxicn/132","nickname":"black_mirror","note":"","ucode":"2549C87298BF12","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36594,"discussion_content":"RC: SQL执行的时候创建view,而不是事务开启就创建,SQL级别  RR:事务级别","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1571396170,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1239337,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e9/29/629d9bb0.jpg","nickname":"天王","note":"","ucode":"C074B2F9A5F007","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":242943,"discussion_content":"这块没讲清楚，读未提交为什么在事务之前能读到最新的，而读提交读不到最新的？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1587513109,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1318633,"avatar":"https://static001.geekbang.org/account/avatar/00/14/1e/e9/dcc63d8f.jpg","nickname":"怕什么，抱紧我","note":"","ucode":"CBCEA76E9EF33B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":266254,"discussion_content":"视图只会记录已提交的数据????","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589485623,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1721168,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/43/50/abb4ca1e.jpg","nickname":"凡","note":"","ucode":"80C2A6452AB9EA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":101147,"discussion_content":"同问啊老师求解答求解答！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577284379,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1110662,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f2/86/d689f77e.jpg","nickname":"Hank_Yan","note":"","ucode":"86899B561C502B","race_medal":3,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":92538,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576856579,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1652085,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKORTofsU89GYKtywquzKuEiabvZnEOonfMYKuCPlo8GDlXqZuJdBicu0XtlaeodH4BnmHV1kldSAwQ/132","nickname":"未来怎样","note":"","ucode":"4E54EB62595B27","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":12868,"discussion_content":"同问，表示不懂。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568604023,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1295041,"avatar":"https://static001.geekbang.org/account/avatar/00/13/c2/c1/48785057.jpg","nickname":"Carey","note":"","ucode":"D31D1ECFAE0027","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5998,"discussion_content":"同问，请问同学找到答案了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566575674,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45010,"user_name":"yihang","can_delete":false,"product_type":"c1","uid":1012361,"ip_address":"","ucode":"A5506F085D1793","user_header":"https://static001.geekbang.org/account/avatar/00/0f/72/89/1a83120a.jpg","comment_is_top":false,"comment_ctime":1543539179,"is_pvip":false,"replies":[{"id":"16158","content":"事务在第一个select才启动","user_name":"作者回复","comment_id":45010,"uid":"1264162","ip_address":"","utype":1,"ctime":1543630699,"user_name_real":"林晓斌"}],"discussion_count":18,"race_medal":0,"score":"263536544235","product_id":100020801,"comment_content":"在“可重复读”隔离级别下，这个视图是在事务启动时创建的，整个事务存在期间都用这个视图。<br><br>这种说法似乎不准确：这个视图应该是“在事务内第一次查询时被创建，整个事务存在期间都用这个视图“。<br>例如  RR级别下，有记录 id 1, name zhang<br>tx1 begin<br>                          tx 2 begin<br>                          tx2 update T set name = &#39;li&#39; where id = 1;<br>                          tx2 commt;<br>tx1 select 结果是li","like_count":61,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430893,"discussion_content":"事务在第一个select才启动","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543630699,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1254801,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","nickname":"猴哥一一 cium","note":"","ucode":"38EC64F8D1A0B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312020,"discussion_content":"是的,第一个query才开始创建read-view","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1602565072,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1113864,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ff/08/7c18d8a4.jpg","nickname":"团","note":"","ucode":"D56ABBCE4E4D90","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550604,"discussion_content":"Mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644636684,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1615539,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI6LXcIqb5K48nia8d4zmdsD1M9AZeyXoGrLzX5xvqfN0fqXOsYKUWLbZvZ8TtJCXWmYbCkCXg93dQ/132","nickname":"漏脚脖","note":"","ucode":"214AE52EC201E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":175038,"discussion_content":"请问可以理解为，是在begin后的第一个sql事务才启动吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581948877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":14,"child_discussions":[{"author":{"id":1593289,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4f/c9/9f51fd27.jpg","nickname":"编程界的小学生","note":"","ucode":"4A5BE9A5E877FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1615539,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI6LXcIqb5K48nia8d4zmdsD1M9AZeyXoGrLzX5xvqfN0fqXOsYKUWLbZvZ8TtJCXWmYbCkCXg93dQ/132","nickname":"漏脚脖","note":"","ucode":"214AE52EC201E6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":199709,"discussion_content":"同问，如果不是select，是update，会启动吗？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1583597220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":175038,"ip_address":""},"score":199709,"extra":""},{"author":{"id":1615539,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI6LXcIqb5K48nia8d4zmdsD1M9AZeyXoGrLzX5xvqfN0fqXOsYKUWLbZvZ8TtJCXWmYbCkCXg93dQ/132","nickname":"漏脚脖","note":"","ucode":"214AE52EC201E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1593289,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4f/c9/9f51fd27.jpg","nickname":"编程界的小学生","note":"","ucode":"4A5BE9A5E877FA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":201726,"discussion_content":"第一个sql启动，后边有提到  不区分select  update","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1583830851,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":199709,"ip_address":""},"score":201726,"extra":""},{"author":{"id":1593289,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4f/c9/9f51fd27.jpg","nickname":"编程界的小学生","note":"","ucode":"4A5BE9A5E877FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1615539,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI6LXcIqb5K48nia8d4zmdsD1M9AZeyXoGrLzX5xvqfN0fqXOsYKUWLbZvZ8TtJCXWmYbCkCXg93dQ/132","nickname":"漏脚脖","note":"","ucode":"214AE52EC201E6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":201842,"discussion_content":"看到了，不过还是要谢谢提醒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583843904,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":201726,"ip_address":""},"score":201842,"extra":""}]}]},{"had_liked":false,"id":40277,"user_name":"果然如此","can_delete":false,"product_type":"c1","uid":1210003,"ip_address":"","ucode":"C7543BD0A67505","user_header":"https://static001.geekbang.org/account/avatar/00/12/76/93/c78a132a.jpg","comment_is_top":false,"comment_ctime":1542588913,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"237765790193","product_id":100020801,"comment_content":"作业：设置autocommit=1，另外，编写一个定时监控Innodb_trx表中时间比较大的事务的任务，如果发现长事务，随时自动发邮件提醒开发人员。<br>","like_count":55,"discussions":[{"author":{"id":1323030,"avatar":"https://static001.geekbang.org/account/avatar/00/14/30/16/4773d604.jpg","nickname":"恐龙","note":"","ucode":"7B85A27E40D261","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366333,"discussion_content":"这里有权限的问题吧，可能不是你想监控就监控的","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1618036569,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41782,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1542850881,"is_pvip":false,"replies":[{"id":"14974","content":"对，读和读不互斥的","user_name":"作者回复","comment_id":41782,"uid":"1264162","ip_address":"","utype":1,"ctime":1542852836,"user_name_real":"林晓斌"}],"discussion_count":4,"race_medal":0,"score":"211996248385","product_id":100020801,"comment_content":"帮助记忆：<br>视图理解为数据副本，每次创建视图时，将当前『已持久化的数据』创建副本，后续直接从副本读取，从而达到数据隔离效果。<br><br>存在视图的 2 种隔离级别：<br>1. 读提交<br>2. 可重复读<br><br>读提交：在每一条 SQL 开始执行时创建视图，隔离作用域仅限该条 SQL 语句。<br><br>可重复读：事务启动时创建视图，因此，在事务任意时刻，对记录读取的值都是一样的。<br><br>其他 2 种无视图的隔离级别：<br>1. 读未提交<br>2. 串行化<br><br>读未提交：直接返回记录最新值。<br><br>串行化：通过读写锁来避免并行访问。<br>读-读：允许并发执行<br>读-写：只能串行<br>写-写：只能串行<br><br><br>老师，关于视图理解为数据副本，“读-读”在串行化隔离级别允许并发，这样的理解是否适合呢？谢谢","like_count":49,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429897,"discussion_content":"对，读和读不互斥的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542852836,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1564618,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eofl7wbZfn2ONSDZ6EqLW6xwESKavMBTbHqYvqf6iadzhAOVlWJ788TiaoFRj7IYQC7UTIENkALXIqA/132","nickname":"我不会敲代码","note":"","ucode":"066AB3B7D9F7CE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384681,"discussion_content":"可重复读是第一次读快照的时候创建视图，而不是事务开始的时候","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626699644,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1652836,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epKJlW7sqts2ZbPuhMbseTAdvHWnrc4ficAeSZyKibkvn6qyxflPrkKKU3mH6XCNmYvDg11tB6y0pxg/132","nickname":"pc","note":"","ucode":"1AD538B9A900B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":79900,"discussion_content":"按照第08讲说的，文中所讲的视图就是“一致性读视图”吧，那么其没有物理结构，读数据都是根据视图数组等条件去数据的多版本中去取一个合适的版本。（这句理解是否正确？）\n那么null所说的“视图理解为数据副本”算是错误的吧？--它没有创建副本即没有第二份copy的数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576121494,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1285652,"avatar":"","nickname":"mycat","note":"","ucode":"6878BD32D042F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1652836,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epKJlW7sqts2ZbPuhMbseTAdvHWnrc4ficAeSZyKibkvn6qyxflPrkKKU3mH6XCNmYvDg11tB6y0pxg/132","nickname":"pc","note":"","ucode":"1AD538B9A900B6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329550,"discussion_content":"null所说的是意思应该是可以理解为是一个数据副本。这样方便理解。\n其实是他所谓的数据副本是不存在的，历史版本的数据，是通过undo-log一步步计算出来的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606401851,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":79900,"ip_address":""},"score":329550,"extra":""}]}]},{"had_liked":false,"id":40750,"user_name":"* 晓 *","can_delete":false,"product_type":"c1","uid":1307301,"ip_address":"","ucode":"AF807F9E3B7FB0","user_header":"https://static001.geekbang.org/account/avatar/00/13/f2/a5/bc63dee1.jpg","comment_is_top":false,"comment_ctime":1542673946,"is_pvip":false,"replies":[{"id":"14672","content":"对的，是你说的这个流程","user_name":"作者回复","comment_id":40750,"uid":"1264162","ip_address":"","utype":1,"ctime":1542678881,"user_name_real":"林晓斌"}],"discussion_count":10,"race_medal":0,"score":"186226267674","product_id":100020801,"comment_content":"老师，MySQL中undo的内容会被记录到redo中吗？比如一个事务在执行到一半的时候实例崩溃了，在恢复的时候是不是先恢复redo，再根据redo构造undo回滚宕机前没有提交的事务呢？","like_count":43,"discussions":[{"author":{"id":1188023,"avatar":"https://static001.geekbang.org/account/avatar/00/12/20/b7/bdb3bcf0.jpg","nickname":"Eternal","note":"","ucode":"EA6FE7CC98F740","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":395078,"discussion_content":"内存中的undo段数据变化、changeBuffer的数据变化、数据页（数据和索引）的的变化都会写redo log，因为redo log是针对物理页的高可用","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1632218115,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429598,"discussion_content":"对的，是你说的这个流程","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1542678881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1188023,"avatar":"https://static001.geekbang.org/account/avatar/00/12/20/b7/bdb3bcf0.jpg","nickname":"Eternal","note":"","ucode":"EA6FE7CC98F740","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383209,"discussion_content":"undo是逻辑日志，redo是物理日志，undo在redo之上，所有提问哥们的流程没有错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625991970,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2185166,"avatar":"https://static001.geekbang.org/account/avatar/00/21/57/ce/ad3c3954.jpg","nickname":"鹅鹅鹅","note":"","ucode":"6AFA3FCC7B5AEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350279,"discussion_content":"这里老师似乎说错了。。。如果这样的，未免太过复杂，不是好方案；事务状态下：应该是redo log是commit状态的时候，数据库的数据才会被更新啊；","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613793726,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1599768,"avatar":"https://static001.geekbang.org/account/avatar/00/18/69/18/ca8a5c22.jpg","nickname":"收","note":"","ucode":"EC3338DB7AEF34","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2185166,"avatar":"https://static001.geekbang.org/account/avatar/00/21/57/ce/ad3c3954.jpg","nickname":"鹅鹅鹅","note":"","ucode":"6AFA3FCC7B5AEF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572134,"discussion_content":"ARIES 可以了解一下，允许在未提交的时候去更新数据。在 redolog 存储修改的（page）物理日志，在 undo log 中存储 逻辑日志。\n崩溃之后恢复数据时候，从binglog 里分析 崩溃时的 tx 信息：\n1. 已提交刷完脏页的，忽略\n2. 已提交未刷脏页的，根据 redolog 重做；\n3. 未提交的，修改的部分刷完脏页 ，使用 undo log 去恢复（逻辑撤销）\n4. 未提交，修改的部分未刷脏页。 忽略。\n对于tx中脏页的信息使用脏页表来追踪。\n","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1652615075,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":350279,"ip_address":""},"score":572134,"extra":""}]},{"author":{"id":1285652,"avatar":"","nickname":"mycat","note":"","ucode":"6878BD32D042F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329554,"discussion_content":"那undolog和redolog之间有交集吗？不太理解这里的逻辑。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606402125,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1254801,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","nickname":"猴哥一一 cium","note":"","ucode":"38EC64F8D1A0B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312023,"discussion_content":"感觉这里老师说的不对呀?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602565239,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1496195,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJrgpv3Kia5Iw2kmg2rV4PSReiaic8d0Dj93XPlJaNpPRPC2xAIS22PQerSxb0cgjChSGAEOyX4tJBCQ/132","nickname":"夏风","note":"","ucode":"EEF37E75FBBA8A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299384,"discussion_content":"不对吧 事务未提交时 binlog中无此记录 如果服务端重启恢复redo的日志 不就造成了数据不一致吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597670068,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1724942,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/52/0e/d875c2c5.jpg","nickname":"papaw","note":"","ucode":"B88E39F6B907F8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":263995,"discussion_content":"不对吧 没提交的事务应该会回滚掉 数据库都宕机了 客户端重新连接怎么回滚呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589277348,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1665541,"avatar":"https://static001.geekbang.org/account/avatar/00/19/6a/05/07472ea6.jpg","nickname":"远行客","note":"","ucode":"3AB3077F26FABC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1724942,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/52/0e/d875c2c5.jpg","nickname":"papaw","note":"","ucode":"B88E39F6B907F8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":276055,"discussion_content":"应该说的不是客户端回滚，就是数据库恢复的时候回滚","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590808749,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":263995,"ip_address":""},"score":276055,"extra":""}]}]},{"had_liked":false,"id":48491,"user_name":"大肉丸","can_delete":false,"product_type":"c1","uid":1281715,"ip_address":"","ucode":"17C5B5FF4CF2B4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epLbHgQhI0pFNI9iblcKdXqI8F5Fc4fTW0OR78oPdT8rsdq6kIicLhjAUO8atSTIpYk66X1dv08RFcw/132","comment_is_top":false,"comment_ctime":1544452474,"is_pvip":false,"discussion_count":22,"race_medal":0,"score":"164753209722","product_id":100020801,"comment_content":"林老师，您好，我在书上看到事务隔离级别为“可重复读”时，可能会出现幻读的情况， 幻读书上说是当事务A在读取某个范围内的记录时，事务B又在该范围插入了新的数据，导致事务A读到事务B插入的数据，但是，“可重复读”级别不是提供了一个一致性视图吗，为什么事务B插入的数据会影响到这个视图呢？辛苦您解答了！","like_count":37,"discussions":[{"author":{"id":1439697,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f7/d1/b42a8ce8.jpg","nickname":"smileit","note":"","ucode":"31362FC09A7D77","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":37189,"discussion_content":"rr隔离级别下幻读只会出现在当前读，不会出现在快照读","likes_number":20,"is_delete":false,"is_hidden":false,"ctime":1571540600,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1691243,"avatar":"https://static001.geekbang.org/account/avatar/00/19/ce/6b/ae7489a0.jpg","nickname":"Ccc","note":"","ucode":"EAEA0284948959","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1439697,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f7/d1/b42a8ce8.jpg","nickname":"smileit","note":"","ucode":"31362FC09A7D77","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42243,"discussion_content":"所以很多人都被书上关于幻读的描述误导了，应该区分当前读和快照读。","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1572618685,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":37189,"ip_address":""},"score":42243,"extra":""},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1439697,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f7/d1/b42a8ce8.jpg","nickname":"smileit","note":"","ucode":"31362FC09A7D77","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339630,"discussion_content":"mark。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609749382,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":37189,"ip_address":""},"score":339630,"extra":""},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1691243,"avatar":"https://static001.geekbang.org/account/avatar/00/19/ce/6b/ae7489a0.jpg","nickname":"Ccc","note":"","ucode":"EAEA0284948959","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339631,"discussion_content":"mark ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609749390,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":42243,"ip_address":""},"score":339631,"extra":""}]},{"author":{"id":2351720,"avatar":"https://static001.geekbang.org/account/avatar/00/23/e2/68/ce547a12.jpg","nickname":"zjm1314","note":"","ucode":"63B0EAB7045054","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339921,"discussion_content":"牛逼，感觉这节课要是和脏读，不可重复度，幻读一起讲就好了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1609841736,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1580358,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/ZMALpD4bKCVdsx8ymCC5Oo0oxibxIFGQzT6fP2B8MEgLGLktQRX4ictobkbcNBDTQibjoQNKBmWCKomNibWqHZ5kpg/132","nickname":"Long","note":"","ucode":"D85B99FD0C4B76","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8366,"discussion_content":"因为引入了多版本并发控制(MVCC)，所以才解决了幻读的问题。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567949900,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":6,"child_discussions":[{"author":{"id":1812501,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/0Fy8TXqU2Ox70MQ8PmP2abRqgJXmhuh7iaiamUGgKdoJppxSLVK3QPM2gboHSgpVvymIDNk4DqMYowK8T3FIVpLQ/132","nickname":"Geek_zpter","note":"","ucode":"B94FD551F61D45","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1580358,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/ZMALpD4bKCVdsx8ymCC5Oo0oxibxIFGQzT6fP2B8MEgLGLktQRX4ictobkbcNBDTQibjoQNKBmWCKomNibWqHZ5kpg/132","nickname":"Long","note":"","ucode":"D85B99FD0C4B76","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":145686,"discussion_content":"单依靠mvcc不能解决幻读问题，幻读问题需要靠mvcc+next_key_locks来保证","likes_number":16,"is_delete":false,"is_hidden":false,"ctime":1579575331,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":8366,"ip_address":""},"score":145686,"extra":""},{"author":{"id":1228560,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/10/b7974690.jpg","nickname":"BD","note":"","ucode":"A95CF8C3EDC228","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1812501,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/0Fy8TXqU2Ox70MQ8PmP2abRqgJXmhuh7iaiamUGgKdoJppxSLVK3QPM2gboHSgpVvymIDNk4DqMYowK8T3FIVpLQ/132","nickname":"Geek_zpter","note":"","ucode":"B94FD551F61D45","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287880,"discussion_content":"不对吧 mvcc可以直接解决幻读吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593577123,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":145686,"ip_address":""},"score":287880,"extra":""},{"author":{"id":1285652,"avatar":"","nickname":"mycat","note":"","ucode":"6878BD32D042F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1228560,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/10/b7974690.jpg","nickname":"BD","note":"","ucode":"A95CF8C3EDC228","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329556,"discussion_content":"不可以，你参考一下老师讲的第8章里面有讲到幻读的解决，mvcc不能搞定，需要临键锁来协助。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606402289,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":287880,"ip_address":""},"score":329556,"extra":""}]},{"author":{"id":1148537,"avatar":"https://static001.geekbang.org/account/avatar/00/11/86/79/28fcafa6.jpg","nickname":"胡红伟","note":"","ucode":"33F12A97311F63","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1384,"discussion_content":"“可重复读”隔离级别，不会出现不可重复读以及幻读。这两种读只会出现在“读提交”隔离级别。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1562592360,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":8,"child_discussions":[{"author":{"id":1194858,"avatar":"https://static001.geekbang.org/account/avatar/00/12/3b/6a/80d9c545.jpg","nickname":"RD","note":"","ucode":"E3947B6E1681AD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1148537,"avatar":"https://static001.geekbang.org/account/avatar/00/11/86/79/28fcafa6.jpg","nickname":"胡红伟","note":"","ucode":"33F12A97311F63","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":88961,"discussion_content":"请问一下，在RR事务中，第一次 select 全表出 1 条数据，其他事务插入一条数据并提交，当前事务 update 全表，再次 select 出现两条数据，这个算是幻读吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576742871,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":1384,"ip_address":""},"score":88961,"extra":""},{"author":{"id":1810051,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK0uyg1IicbEhLwsgM2A2ROoyVdWdmUqZfQfs6G67w9m3hdRNBMOQJatQoACj3qNGgj2KVIgricaYiaQ/132","nickname":"木得感情的编码机器","note":"","ucode":"9C6CD47ADCB8E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1194858,"avatar":"https://static001.geekbang.org/account/avatar/00/12/3b/6a/80d9c545.jpg","nickname":"RD","note":"","ucode":"E3947B6E1681AD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164882,"discussion_content":"RR事务中，再次select不会出现新插入数据吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581229411,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":88961,"ip_address":""},"score":164882,"extra":""},{"author":{"id":1140166,"avatar":"https://static001.geekbang.org/account/avatar/00/11/65/c6/a2111ff3.jpg","nickname":"李","note":"","ucode":"5B7065D6A10D84","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1810051,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK0uyg1IicbEhLwsgM2A2ROoyVdWdmUqZfQfs6G67w9m3hdRNBMOQJatQoACj3qNGgj2KVIgricaYiaQ/132","nickname":"木得感情的编码机器","note":"","ucode":"9C6CD47ADCB8E6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288424,"discussion_content":"会的，你可以自己测试下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593748292,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":164882,"ip_address":""},"score":288424,"extra":""}]}]},{"had_liked":false,"id":102732,"user_name":"田佳伟","can_delete":false,"product_type":"c1","uid":1034087,"ip_address":"","ucode":"D31C9799F383D2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c7/67/0077314b.jpg","comment_is_top":false,"comment_ctime":1560300536,"is_pvip":false,"replies":[{"id":"37379","content":"是的","user_name":"作者回复","comment_id":102732,"uid":"1264162","ip_address":"","utype":1,"ctime":1560422195,"user_name_real":"林晓斌"}],"discussion_count":3,"race_medal":0,"score":"126114352120","product_id":100020801,"comment_content":"老师，在没有显式开启事务的情况下，可不可以认为每个sql的执行都算是一个事务？","like_count":29,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453550,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560422195,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2708697,"avatar":"","nickname":"李海龙","note":"","ucode":"766E49D0AE1434","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548778,"discussion_content":"没有显示开启事务的时候，每个sql都是一个事务，一个短事务，执行完就结束","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643362467,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2351720,"avatar":"https://static001.geekbang.org/account/avatar/00/23/e2/68/ce547a12.jpg","nickname":"zjm1314","note":"","ucode":"63B0EAB7045054","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339923,"discussion_content":"我也想问这个问题呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609841825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40306,"user_name":"ThinkingQuest","can_delete":false,"product_type":"c1","uid":1118560,"ip_address":"","ucode":"597D0C00DAEFE4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/0SDRac7XoordnKYgDLhz5wxAOtE6xqcsSywsywEtKQAR7xicBZQ6ceYftfZjl4Ivq3a5dzvRhYkn2GcUWiaQK7ZQ/132","comment_is_top":false,"comment_ctime":1542591233,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"121801675521","product_id":100020801,"comment_content":"感谢老师的高质量文章。<br><br>试图的实现，多个回滚段那一块，不是很好理解。","like_count":28,"discussions":[{"author":{"id":1135990,"avatar":"https://static001.geekbang.org/account/avatar/00/11/55/76/a55871ab.jpg","nickname":"孙庆良","note":"","ucode":"CA05C4CFEFB0F9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312467,"discussion_content":"他就没讲明白，写的太简略了","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1602694543,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2370033,"avatar":"https://static001.geekbang.org/account/avatar/00/24/29/f1/54957918.jpg","nickname":"阿土~熬夜退役运动员","note":"","ucode":"7095B38894C133","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1135990,"avatar":"https://static001.geekbang.org/account/avatar/00/11/55/76/a55871ab.jpg","nickname":"孙庆良","note":"","ucode":"CA05C4CFEFB0F9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364020,"discussion_content":"表示赞同\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617351734,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":312467,"ip_address":""},"score":364020,"extra":""},{"author":{"id":2924014,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/9d/ee/a58e330a.jpg","nickname":"刘越阳","note":"","ucode":"FC3EE6E01D8C92","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1135990,"avatar":"https://static001.geekbang.org/account/avatar/00/11/55/76/a55871ab.jpg","nickname":"孙庆良","note":"","ucode":"CA05C4CFEFB0F9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574324,"discussion_content":"表示赞同，写的太简单，让人完全get不到回滚日志有啥用，长事务为啥会有问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653975970,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":312467,"ip_address":""},"score":574324,"extra":""}]}]},{"had_liked":false,"id":83381,"user_name":"tjudream","can_delete":false,"product_type":"c1","uid":1104851,"ip_address":"","ucode":"A81870769C5E15","user_header":"https://static001.geekbang.org/account/avatar/00/10/db/d3/d71622c8.jpg","comment_is_top":false,"comment_ctime":1554550905,"is_pvip":false,"replies":[{"id":"30148","content":"👍","user_name":"作者回复","comment_id":83381,"uid":"1264162","ip_address":"","utype":1,"ctime":1554608549,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"113223700601","product_id":100020801,"comment_content":"问题思考：<br>1. 作为业务负责人要尽量避免长事务的产生:<br>(1)培训业务开发人员，避免长事务<br>(2)在code review中仔细检查数据库的相关配置<br>(3)让测试人员建立长事务的相关用例<br>2. 作为数据库负责人<br>(1)要求业务组上生产之前必须将数据库的相关配置、表结构设计以及SQL语句提交到DBA部门审核，由DBA把关，从源头杜绝长事务<br>(2)定期到各业务组进行数据库相关知识的培训<br>(3)建立长事务监控指标，发现之后及时报警","like_count":26,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445999,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554608549,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40360,"user_name":"梁中华","can_delete":false,"product_type":"c1","uid":1006789,"ip_address":"","ucode":"52FE40242CBAD0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/c5/1231d633.jpg","comment_is_top":false,"comment_ctime":1542602811,"is_pvip":true,"replies":[{"id":"14537","content":"涉及到更新是是涉及行锁，在第七讲会讲到。 ","user_name":"作者回复","comment_id":40360,"uid":"1264162","ip_address":"","utype":1,"ctime":1542608657,"user_name_real":"林晓斌"}],"discussion_count":7,"race_medal":1,"score":"113211752507","product_id":100020801,"comment_content":"感觉没讲透，最好结合锁一起讲才能彻底讲清楚，比如两个RR级的事务同时启动，都是对同一个字段操作，系统起了两个互不影响的view,那事务的结果会不会被覆盖，直觉上肯定不会被覆盖，大家知道记录上会有锁，但这个锁和view是什么关系呢？建议mvcc可以展开来讲讲。","like_count":26,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429494,"discussion_content":"涉及到更新是是涉及行锁，在第七讲会讲到。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542608657,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1247155,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK9BHsYJRKhYarAarOlbicAyOfppmoI9arpryXFyqdKHC3bprWpfhVS2NosWQwBcTl2O2qmAnTgAqg/132","nickname":"wxw","note":"","ucode":"C90B38853B9E36","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":47948,"discussion_content":"说的对 感觉我最需要的实现原理没有讲的太清楚 也不知道是我理解能力差还是怎么。反正我从这篇文章中我是没有学会mysql是怎么实现可重复读及其怎么解决这个隔离级别下是怎么避免幻读的","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1573437403,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1135990,"avatar":"https://static001.geekbang.org/account/avatar/00/11/55/76/a55871ab.jpg","nickname":"孙庆良","note":"","ucode":"CA05C4CFEFB0F9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1247155,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK9BHsYJRKhYarAarOlbicAyOfppmoI9arpryXFyqdKHC3bprWpfhVS2NosWQwBcTl2O2qmAnTgAqg/132","nickname":"wxw","note":"","ucode":"C90B38853B9E36","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312468,"discussion_content":"就是老师没有讲明白，这一章讲的不好，太粗略了。一群人还在那总结，硬性的总结一些记忆点有啥用呢？","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1602694626,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":47948,"ip_address":""},"score":312468,"extra":""},{"author":{"id":2783518,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/79/1e/44a70976.jpg","nickname":"喵","note":"","ucode":"ECDF6128250FA9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1247155,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK9BHsYJRKhYarAarOlbicAyOfppmoI9arpryXFyqdKHC3bprWpfhVS2NosWQwBcTl2O2qmAnTgAqg/132","nickname":"wxw","note":"","ucode":"C90B38853B9E36","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":564951,"discussion_content":"一样的感觉","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650358699,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":47948,"ip_address":""},"score":564951,"extra":""}]},{"author":{"id":1069269,"avatar":"https://static001.geekbang.org/account/avatar/00/10/50/d5/73334a95.jpg","nickname":"doos","note":"","ucode":"7C9AF67F90E65C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575746,"discussion_content":"不是没有讲透你想200元课程你想多透呀，知识付费想更透你得把钱花上去了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655087367,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1024710,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a2/c6/203f88c8.jpg","nickname":"wooyoo","note":"","ucode":"F1D48FFAF89226","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557851,"discussion_content":"这么重要的一篇却这么水，可能老师自己也不太明白，只会死记硬背","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648000710,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2369399,"avatar":"https://static001.geekbang.org/account/avatar/00/24/27/77/8493aa4a.jpg","nickname":"伟","note":"","ucode":"72C5C8D7F2A88F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552874,"discussion_content":"同感，跟《MySql技术内幕InnoDB存储引擎》讲的背道而驰：事物的隔离性是用锁来实现。博主却说是undo log","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645620957,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40329,"user_name":"王凯","can_delete":false,"product_type":"c1","uid":1306753,"ip_address":"","ucode":"4F91D6F85B45D1","user_header":"https://static001.geekbang.org/account/avatar/00/13/f0/81/8d539cba.jpg","comment_is_top":false,"comment_ctime":1542594343,"is_pvip":false,"replies":[{"id":"14524","content":"👍🏿<br><br>不过global设下去恐怕担心如果真有需要执行久的，（比如备份），会不会被误伤😄<br><br>可以考虑设置成session内有效，让业务代码主动去做？","user_name":"作者回复","comment_id":40329,"uid":"1264162","ip_address":"","utype":1,"ctime":1542595522,"user_name_real":"林晓斌"}],"discussion_count":3,"race_medal":0,"score":"100326842151","product_id":100020801,"comment_content":"autocommit设置为1，用文中提到的检查长事务的方法做每秒的计划任务检查，检查到的话记录并杀死进程。<br><br>另外，设置SET GLOBAL MAX_EXECUTION_TIME=3000. 确保单条语句执行时间在规定的范围之内。","like_count":23,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429476,"discussion_content":"👍🏿\n\n不过global设下去恐怕担心如果真有需要执行久的，（比如备份），会不会被误伤😄\n\n可以考虑设置成session内有效，让业务代码主动去做？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542595522,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1285652,"avatar":"","nickname":"mycat","note":"","ucode":"6878BD32D042F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329563,"discussion_content":"这个能基于某个用户来做吗？比如应用使用的用户，最长时间设置为MAX_EXECUTION_TIME=3000。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606403787,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1285652,"avatar":"","nickname":"mycat","note":"","ucode":"6878BD32D042F2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369197,"discussion_content":"可以 ，set max_execution_time=3000只对当前的会话起作用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618971557,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":329563,"ip_address":""},"score":369197,"extra":""}]}]},{"had_liked":false,"id":40327,"user_name":"程飞","can_delete":false,"product_type":"c1","uid":1151853,"ip_address":"","ucode":"3126C4243B5E3A","user_header":"https://static001.geekbang.org/account/avatar/00/11/93/6d/f030449b.jpg","comment_is_top":false,"comment_ctime":1542593936,"is_pvip":false,"replies":[{"id":"14523","content":"内存里，InnoDB buffer pool","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542594771,"ip_address":"","comment_id":40327,"utype":1}],"discussion_count":1,"race_medal":0,"score":"100326841744","product_id":100020801,"comment_content":"文中说：“读未提交”隔离级别下直接返回记录上的最新值，没有视图概念；<br>我的疑问是：这个最新值从哪儿得到的？（我以为那个最新值所在的事务还没提交，应该没到物理记录，那这个值是在哪个cache里？）谢谢老师！<br>","like_count":23,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429475,"discussion_content":"内存里，InnoDB buffer pool","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542594771,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64036,"user_name":"kyq叶鑫","can_delete":false,"product_type":"c1","uid":1129030,"ip_address":"","ucode":"0002BFD7569B06","user_header":"https://static001.geekbang.org/account/avatar/00/11/3a/46/9fd9bd26.jpg","comment_is_top":false,"comment_ctime":1548645051,"is_pvip":true,"replies":[{"id":"22656","content":"不会出现这种情况<br>”将数据改为4的事务1回滚了“ 表示这个事务还没提交，那么就有行锁<br><br>“另一个将4改为5的事务2” 这个就会锁进入等待，不会让他执行的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548663130,"ip_address":"","comment_id":64036,"utype":1}],"discussion_count":4,"race_medal":0,"score":"78858056379","product_id":100020801,"comment_content":"丁老师你好，看了你的事务隔离小节，对数据库事务的实现有了更深入的了解，同时也有一个疑问：文中示例提出“同时你会发现，即使现在有另外一个事务正在将 4 改成 5，这个事务跟 read-view A、B、C 对应的事务是不会冲突的。”，如果这个时候将数据改为4的事务1回滚了，另一个将4改为5的事务2如何处理？","like_count":18,"discussions":[{"author":{"id":1238337,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e5/41/ffe533ba.jpg","nickname":"尚帝","note":"","ucode":"6F1703FD5A23A0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534584,"discussion_content":"更新有行锁，读根据事务级别决定有没有锁还是只是使用mvcc","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1638236356,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437823,"discussion_content":"不会出现这种情况\n”将数据改为4的事务1回滚了“ 表示这个事务还没提交，那么就有行锁\n\n“另一个将4改为5的事务2” 这个就会锁进入等待，不会让他执行的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1548663130,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1113864,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ff/08/7c18d8a4.jpg","nickname":"团","note":"","ucode":"D56ABBCE4E4D90","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":550606,"discussion_content":"Mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644637318,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":437823,"ip_address":""},"score":550606,"extra":""}]},{"author":{"id":2367759,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLAvgLjLJQIb4B6p2micrDSGW7jkjyibia3MgGvkSv8zIOCdmcibfLqHcMK9NQkBTzfwgL7ngzPcG15Ug/132","nickname":"Geek_b35ff7","note":"","ucode":"3BF5782F059B75","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378396,"discussion_content":"解惑了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623205511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40275,"user_name":"读书看报","can_delete":false,"product_type":"c1","uid":1306147,"ip_address":"","ucode":"3B4717314B52A9","user_header":"https://static001.geekbang.org/account/avatar/00/13/ee/23/b92b0811.jpg","comment_is_top":false,"comment_ctime":1542588813,"is_pvip":false,"replies":[{"id":"14504","content":"那自己改了肯定得看到呀，不然程序逻辑崩溃了😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542592023,"ip_address":"","comment_id":40275,"utype":1}],"discussion_count":1,"race_medal":0,"score":"65967098253","product_id":100020801,"comment_content":"老师 同一个事务中的插入&#47;更新&#47;删除-&gt;查询，这种情况呢","like_count":15,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429454,"discussion_content":"那自己改了肯定得看到呀，不然程序逻辑崩溃了😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542592023,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40243,"user_name":"兔斯基","can_delete":false,"product_type":"c1","uid":1061320,"ip_address":"","ucode":"146A5FE2D8B301","user_header":"https://static001.geekbang.org/account/avatar/00/10/31/c8/a64e4aef.jpg","comment_is_top":false,"comment_ctime":1542585616,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"61672127760","product_id":100020801,"comment_content":"是不是可以理解为<br>读提交不能保证一个事务中对同一条数据的每次读取都一致。<br>可重复读可以保证在一个事务性，每次读取同一条记录，值是不会发生改变的。<br>","like_count":14},{"had_liked":false,"id":40220,"user_name":"skyoo","can_delete":false,"product_type":"c1","uid":1302503,"ip_address":"","ucode":"EBC0528BA02DD7","user_header":"https://static001.geekbang.org/account/avatar/00/13/df/e7/4ce5ed27.jpg","comment_is_top":false,"comment_ctime":1542558455,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"61672100599","product_id":100020801,"comment_content":"mvcc是有undo实现的，undo又是有redo 引起生成，默认事务是rr，但还是建议rc  ，这节篇幅有点短 哈哈  看不够","like_count":14,"discussions":[{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377368,"discussion_content":"建议使用默认的RR","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622618453,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1054827,"avatar":"https://static001.geekbang.org/account/avatar/00/10/18/6b/a1448af1.jpg","nickname":"贝影","note":"","ucode":"19545C8DCBF8A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542248,"discussion_content":"看场景，高并发下RR容易引起死锁和吞吐量低","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640690196,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":377368,"ip_address":""},"score":542248,"extra":""}]}]},{"had_liked":false,"id":95184,"user_name":"张三丰","can_delete":false,"product_type":"c1","uid":1155275,"ip_address":"","ucode":"3A6215A40B3B21","user_header":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","comment_is_top":false,"comment_ctime":1557979353,"is_pvip":false,"replies":[{"id":"34303","content":"这样是没问题的<br><br>但是很容易忘记<br><br>我经常碰到的情况是，大家以为select就不是事务，在autocommit=0的模式下，执行一个select，然后连接就那么放着","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1558260672,"ip_address":"","comment_id":95184,"utype":1}],"discussion_count":5,"race_medal":0,"score":"53097586905","product_id":100020801,"comment_content":"为什么说set autocommit =0的时候，会产生长事务？虽然不能自动提交，但是每次执行几个sql就commit不就可以了吗，如果它会产生长事务，那么set autocommit = 1配合显示启动事务也会长事务，一直不commit，执行100个sql再commit，这样不也是会产生长事务么","like_count":12,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450359,"discussion_content":"这样是没问题的\n\n但是很容易忘记\n\n我经常碰到的情况是，大家以为select就不是事务，在autocommit=0的模式下，执行一个select，然后连接就那么放着","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558260672,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2307231,"avatar":"","nickname":"玩嗨","note":"","ucode":"8EE64312C7F7DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326105,"discussion_content":"select是只读的，这也需要事务？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1605521332,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1285652,"avatar":"","nickname":"mycat","note":"","ucode":"6878BD32D042F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2307231,"avatar":"","nickname":"玩嗨","note":"","ucode":"8EE64312C7F7DA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329564,"discussion_content":"select是只读的没问题。\n但是如果你的select是在autocommit=0的情况下去执行的，也就是这样：\nset autocommit=0;\nselect * from t;\n这个时候这个select语句也会开启一个事务，如果你不执行commit;那么这个事务就一直开启着。虽然这一个只读的事务。\n上面两个命令等价于你显示的开启事务没有提交，像下面这样：\nbegin; \nselect  *  from t;","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1606404313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":326105,"ip_address":""},"score":329564,"extra":""},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1285652,"avatar":"","nickname":"mycat","note":"","ucode":"6878BD32D042F2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339644,"discussion_content":"mark！如上述","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1609751198,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":329564,"ip_address":""},"score":339644,"extra":""}]},{"author":{"id":2129471,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/ZV101y9OgicALx800PzFwJ9wjtnwu26UbgshGluQB5GkBKquCyHXVV7MRRP4Z3cMo64Ms9vYhUeV5kKKhFDDvlw/132","nickname":"Geek_0f20b0","note":"","ucode":"1B06C467E31627","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387627,"discussion_content":"666","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628308146,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":50026,"user_name":"lzjun","can_delete":false,"product_type":"c1","uid":1006975,"ip_address":"","ucode":"E8463C74EB3740","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5d/7f/f22f9224.jpg","comment_is_top":false,"comment_ctime":1544843128,"is_pvip":false,"replies":[{"id":"18004","content":"可重复读 了解一下😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544846110,"ip_address":"","comment_id":50026,"utype":1}],"discussion_count":3,"race_medal":0,"score":"48789483384","product_id":100020801,"comment_content":"美国人喜欢将重要的东西放前面，例如  read uncommitted ，read 才是重点，而中国人很委婉，喜欢将重要的事情放后面，所以你经常会看到一长串的形容词来修饰一个名字。那么按照中国人的喜欢，我们翻译的时候一般也是形容词放前，就成了“未提交的读”，而实际上我们看到的大多数翻译都成了 “读未提交”，很有意思","like_count":11,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432846,"discussion_content":"可重复读 了解一下😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544846110,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2366222,"avatar":"https://static001.geekbang.org/account/avatar/00/24/1b/0e/bbb6e3f9.jpg","nickname":"秋","note":"","ucode":"24DA05C74D6225","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384206,"discussion_content":"这么多字，只说了俩字，倒装","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626425070,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1135990,"avatar":"https://static001.geekbang.org/account/avatar/00/11/55/76/a55871ab.jpg","nickname":"孙庆良","note":"","ucode":"CA05C4CFEFB0F9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312469,"discussion_content":"现在我看到的资料都是读未提交啊，这样挺好理解的，跟英语的顺序也是一样的呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602694851,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40238,"user_name":"冬风向左吹","can_delete":false,"product_type":"c1","uid":1066928,"ip_address":"","ucode":"376C45C5134F93","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/b0/a9b77a1e.jpg","comment_is_top":false,"comment_ctime":1542585096,"is_pvip":false,"replies":[{"id":"14513","content":"不commit如果连接保持着，就可能变成长事务哦","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542593800,"ip_address":"","comment_id":40238,"utype":1}],"discussion_count":3,"race_medal":0,"score":"48787225352","product_id":100020801,"comment_content":"python里面，autocommit默认是0的，这种情况下，一条select语句如果不写begin，是否需要，commit?","like_count":11,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429438,"discussion_content":"不commit如果连接保持着，就可能变成长事务哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542593800,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1323030,"avatar":"https://static001.geekbang.org/account/avatar/00/14/30/16/4773d604.jpg","nickname":"恐龙","note":"","ucode":"7B85A27E40D261","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366335,"discussion_content":"去年亲测，如老师所说，autocommit=0，all sql=all trx，再去检查innodb_trx里的事务还在的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618036896,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":9552,"discussion_content":"一般建议是mysql弄成autocommit=1. web框架的话，开启事务的时候，autocommit=0 手动commit，执行完毕后再改成autocommit=0","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568186876,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71290,"user_name":"张三丰","can_delete":false,"product_type":"c1","uid":1155275,"ip_address":"","ucode":"3A6215A40B3B21","user_header":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","comment_is_top":false,"comment_ctime":1551316583,"is_pvip":false,"replies":[{"id":"25521","content":"看一下08篇哈，有进一步解释<br><br>换一个说法，就是一个查询事务开启以后，在这个时刻之后，事务提交&#47;回滚之前，所有更新产生的undo log都不能被删除","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551319829,"ip_address":"","comment_id":71290,"utype":1}],"discussion_count":3,"race_medal":0,"score":"44500989543","product_id":100020801,"comment_content":"什么时候才不需要了呢？就是当系统里没有比这个回滚日志更早的 read-view 的时候。<br><br>这句话怎么理解呢","like_count":10,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441093,"discussion_content":"看一下08篇哈，有进一步解释\n\n换一个说法，就是一个查询事务开启以后，在这个时刻之后，事务提交/回滚之前，所有更新产生的undo log都不能被删除","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551319829,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1762252,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/e3/cc/0947ff0b.jpg","nickname":"nestle","note":"","ucode":"469800BED81B54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":88792,"discussion_content":"如果这个事务不是可重复读呢？还会生成或者保留undo log吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576731696,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1155275,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","nickname":"张三丰","note":"","ucode":"3A6215A40B3B21","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1762252,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/e3/cc/0947ff0b.jpg","nickname":"nestle","note":"","ucode":"469800BED81B54","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":94579,"discussion_content":"读已提交和可重复读都会生成undo log","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1576969650,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":88792,"ip_address":""},"score":94579,"extra":""}]}]},{"had_liked":false,"id":40686,"user_name":"某、人","can_delete":false,"product_type":"c1","uid":1308784,"ip_address":"","ucode":"ADB42AA12A11C1","user_header":"https://static001.geekbang.org/account/avatar/00/13/f8/70/f3a33a14.jpg","comment_is_top":false,"comment_ctime":1542642160,"is_pvip":false,"replies":[{"id":"14639","content":"变为sleep是不会被释放的哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542647115,"ip_address":"","comment_id":40686,"utype":1}],"discussion_count":2,"race_medal":0,"score":"35902380528","product_id":100020801,"comment_content":"看了老师的课受益匪浅,又重新理了下基础<br>rc模式下是会出现幻读和不可重复读<br>rr模式下,当前读是通过gap锁和行锁防止了幻读和不可重复读<br>         一致性读是通过mvcc来避免幻读和不可重复读<br>创建视图快照会以select执行开始的时间点为快照点,而不是以begin为起始点<br>有个问题要请教下,如果一个长连接变为了sleep.那么它之前占用的内存,哪些不会被释放掉<br>(貌似session级别的参数都会被释放掉,但是还是占用了一些内存未释放)<br>如何避免长事务:目前线上是部署的pt-kill","like_count":8,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429587,"discussion_content":"变为sleep是不会被释放的哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542647115,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2212810,"avatar":"https://static001.geekbang.org/account/avatar/00/21/c3/ca/93f7eca9.jpg","nickname":"Cassie","note":"","ucode":"1C68BDBCC95FA5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":407241,"discussion_content":"一致性读可以通过mvcc避免幻读吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634955206,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40259,"user_name":"Aliliin","can_delete":false,"product_type":"c1","uid":1025239,"ip_address":"","ucode":"61F9A09BB6650F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/d7/5d2bfaa7.jpg","comment_is_top":false,"comment_ctime":1542587582,"is_pvip":false,"replies":[{"id":"14507","content":"👍🏿 看完能够理解然后对业务做改进，是这个专栏的最高评价😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542592362,"ip_address":"","comment_id":40259,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35902325950","product_id":100020801,"comment_content":"之前只是知道对于自己业务场景中哪些需要用到事务，还真不知道启动事务竟然还有这么多问题。学习了，赶紧打开电脑看看项目中的长事务连接有哪些。<br>谢谢老师。","like_count":8,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429447,"discussion_content":"👍🏿 看完能够理解然后对业务做改进，是这个专栏的最高评价😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542592362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71522,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1551362680,"is_pvip":false,"replies":[{"id":"25633","content":"<br>1&amp;amp;2  这两个不是相同的概念。 “一条select返回的结果集”是视图（虚拟表），我们这里说的视图，是InnoDB的一致性视图。08篇有解释这两个概念的区别；<br><br>3. 整个库，这个是可重复读的定义。当然这里不建议称为“缓存”，还是称为“视图”更严格些<br><br>4. 会继续关注和回复评论的。只要是跟文章内容相关（主要是为了方便其他同学看评论区聚焦）、其他评论没有问过的问题，都会回答。<br><br>除了新同学，有的同学二刷，都会有新的留言，而且越往后评论质量会越高，期待~<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551367054,"ip_address":"","comment_id":71522,"utype":1}],"discussion_count":5,"race_medal":0,"score":"31616133752","product_id":100020801,"comment_content":"本文通读多次，关于视图一直卡着，希望老师能点拨下，谢谢！<br>问题1、本文中提及的视图是不是数据库里常说的那个结构--“视图”(view)？<br> 以下假设1成立。<br>前提：视图粗暴的理解为一条select返回的结果集； 假设在一个事务T（可重复读隔离级别）中有3个操作A,B,C，且A与C都是查询表t_user的同一条记录R，另外如本文所述在启动事务T时就会创建视图（记为视图V）。<br>问题2、视图V在事务T启动时创建，是不是会将结果集缓存起来，以提供给操作B和C使用？即在执行操作B,C时不会再去执行视图V的select语句？<br>问题3、缓存的粒度问题； 假设问题2成立，视图V的结果集是只有记录R，还是整张t_user表，或者索性整个库？ 为什么?<br>问题4、题外话，我本人非常喜欢林老师的这个专栏，只怨自己订购的太晚了（相信有很多我这种读者），到2月27本课程已经结束了。我想替所有后续订阅本专栏的读者问问林老师，会不会继续回复大伙的留言？","like_count":7,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441186,"discussion_content":"\n1&amp;amp;amp;2  这两个不是相同的概念。 “一条select返回的结果集”是视图（虚拟表），我们这里说的视图，是InnoDB的一致性视图。08篇有解释这两个概念的区别；\n\n3. 整个库，这个是可重复读的定义。当然这里不建议称为“缓存”，还是称为“视图”更严格些\n\n4. 会继续关注和回复评论的。只要是跟文章内容相关（主要是为了方便其他同学看评论区聚焦）、其他评论没有问过的问题，都会回答。\n\n除了新同学，有的同学二刷，都会有新的留言，而且越往后评论质量会越高，期待~\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551367054,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1113864,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ff/08/7c18d8a4.jpg","nickname":"团","note":"","ucode":"D56ABBCE4E4D90","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550607,"discussion_content":"Mark，文中说的视图和数据库中的“视图”不是一个概念，这点作者应该在文中强调一下，避免大家混淆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644637983,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339666,"discussion_content":"整个库？如果数据库大表1G，多个视图时，岂不是就一个事务就多个G？多来几个事务，岂不是轻松上100G ？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609754414,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1361159,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqJobg767PUeqrqQQ4B6YvMatj2SRyOicKZZ4gWTf30dMketiaj58Gc3RFTmckGxAXlL9ERSxGovq9g/132","nickname":"涛哥哥","note":"","ucode":"329A1384E3AB5E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319577,"discussion_content":"在可重复读的情况下，在事务开始时的时候，就会对整个库创建视图。下次在这个事务里面查找数据的时候，肯定是用这个事务开始的时候当时创建的视图，那么这个视图是如何保存的呢？每条记录都是根据undolog日志算出来的，这样就能算出事务开始时，对整个库那个时刻的数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604055185,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1135990,"avatar":"https://static001.geekbang.org/account/avatar/00/11/55/76/a55871ab.jpg","nickname":"孙庆良","note":"","ucode":"CA05C4CFEFB0F9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312471,"discussion_content":"把视图理解成副本或者快照就行了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602695275,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65227,"user_name":"亢星东","can_delete":false,"product_type":"c1","uid":1303322,"ip_address":"","ucode":"5E4063E83B2BB9","user_header":"https://static001.geekbang.org/account/avatar/00/13/e3/1a/061e77b6.jpg","comment_is_top":false,"comment_ctime":1549127953,"is_pvip":false,"replies":[{"id":"23130","content":"没有直接的“事务时间”<br>有“语句执行时间”和“等待时间”，线上比较重要的业务，一般都要设置","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1549158613,"ip_address":"","comment_id":65227,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31613899025","product_id":100020801,"comment_content":"老师，数据库可以设置事物超时时间吗，一般会不会设置","like_count":7,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438364,"discussion_content":"没有直接的“事务时间”\n有“语句执行时间”和“等待时间”，线上比较重要的业务，一般都要设置","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549158613,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40314,"user_name":"hhhh","can_delete":false,"product_type":"c1","uid":1256101,"ip_address":"","ucode":"9E87017424B382","user_header":"https://static001.geekbang.org/account/avatar/00/13/2a/a5/625c0a2e.jpg","comment_is_top":false,"comment_ctime":1542591992,"is_pvip":false,"replies":[{"id":"14510","content":"这个参数已经是被废弃了，后面统一用transaction_isolation ，<br><br>到8.0直接把tx_isolation删掉了，所以文章中就没介绍它","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542593441,"ip_address":"","comment_id":40314,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31607363064","product_id":100020801,"comment_content":"我在5.7.18版本，查看隔离级别的变量语句是<br>&#39;show variables like tx_isolation&#39;","like_count":7,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429471,"discussion_content":"这个参数已经是被废弃了，后面统一用transaction_isolation ，\n\n到8.0直接把tx_isolation删掉了，所以文章中就没介绍它","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542593441,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208941,"user_name":"李红玉","can_delete":false,"product_type":"c1","uid":1960599,"ip_address":"","ucode":"739CCADD91A57C","user_header":"","comment_is_top":false,"comment_ctime":1587468909,"is_pvip":false,"discussion_count":8,"race_medal":0,"score":"27357272685","product_id":100020801,"comment_content":"这是我至今为止 看到的资源里 ，对事物隔离级别定义 讲的最好的 ","like_count":6,"discussions":[{"author":{"id":1135990,"avatar":"https://static001.geekbang.org/account/avatar/00/11/55/76/a55871ab.jpg","nickname":"孙庆良","note":"","ucode":"CA05C4CFEFB0F9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312473,"discussion_content":"那你看的资料有些少啊，他这一讲讲的不太好，太粗浅了，挺模糊的，尤其是实现细节没讲清楚，你看下面大家一堆讨论都有很多疑问","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1602695962,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1140166,"avatar":"https://static001.geekbang.org/account/avatar/00/11/65/c6/a2111ff3.jpg","nickname":"李","note":"","ucode":"5B7065D6A10D84","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288431,"discussion_content":"我觉得还是比较模糊。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1593749738,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1254801,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","nickname":"猴哥一一 cium","note":"","ucode":"38EC64F8D1A0B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1140166,"avatar":"https://static001.geekbang.org/account/avatar/00/11/65/c6/a2111ff3.jpg","nickname":"李","note":"","ucode":"5B7065D6A10D84","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":312031,"discussion_content":"哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602566982,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":288431,"ip_address":""},"score":312031,"extra":""}]},{"author":{"id":1186004,"avatar":"https://static001.geekbang.org/account/avatar/00/12/18/d4/73260a43.jpg","nickname":"ECHOLOG","note":"","ucode":"4350973F4D4FB0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":408953,"discussion_content":"对的，rr模式下的read view 这个具体流程没讲清楚。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635346235,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339710,"discussion_content":"至少01--03是这样。我现在还只看到这里","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609761417,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339709,"discussion_content":"我觉得都讲的不好。作者懂，但是。。感觉没有用心写好这个课程。。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609761393,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1387961,"avatar":"https://static001.geekbang.org/account/avatar/00/15/2d/b9/c1a393b9.jpg","nickname":"南山忆","note":"","ucode":"461C7229147D7F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":345027,"discussion_content":"有一说一小白还是多提升点自己再来发表意见吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611643295,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":339709,"ip_address":""},"score":345027,"extra":""},{"author":{"id":1387961,"avatar":"https://static001.geekbang.org/account/avatar/00/15/2d/b9/c1a393b9.jpg","nickname":"南山忆","note":"","ucode":"461C7229147D7F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":345028,"discussion_content":"像我这么菜的只能多读几遍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611643346,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":339709,"ip_address":""},"score":345028,"extra":""}]}]},{"had_liked":false,"id":123452,"user_name":"Alexander","can_delete":false,"product_type":"c1","uid":1104100,"ip_address":"","ucode":"5EF394E93A1715","user_header":"https://static001.geekbang.org/account/avatar/00/10/d8/e4/7cc47d20.jpg","comment_is_top":false,"comment_ctime":1565679053,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27335482829","product_id":100020801,"comment_content":"事务隔离的实现，感觉讲的太浅了，希望林大再多讲讲<br>","like_count":6},{"had_liked":false,"id":95494,"user_name":"探索无止境","can_delete":false,"product_type":"c1","uid":1044178,"ip_address":"","ucode":"91D2A9907DFA79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/d2/7024431c.jpg","comment_is_top":false,"comment_ctime":1558064305,"is_pvip":false,"replies":[{"id":"34898","content":"1. <br>“而我们的读已提交之所以看不到变化，是因为读的是视图”<br>这个说法不太准确，不过你应该是理解到意思了。<br>准确表述是：而我们的读已提交之所以看不到变化，是因为查询视图让我们读到了正确的版本<br><br>2. 这个看下第8篇","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1558709654,"ip_address":"","comment_id":95494,"utype":1}],"discussion_count":6,"race_medal":0,"score":"27327868081","product_id":100020801,"comment_content":"林老师，反复研读，还有个问题要确认下。<br>我现在的理解是，对数据的每次操作都会影响到数据的最新值，并以回滚段记录变化，回滚段的作用是方便我们实现回滚操作。而“读已提交”和“可重复读”则是利用了视图的方式，造成了读不到最新数据的假象，实际上真实的数据已经发生了变更。<br><br>所以，我的两个问题如下：<br>1，是不是说，实际我们对数据的每一次更新操作，都会影响到记录的实际结果值，就是内存的结果已经被更改了，而我们的读已提交之所以看不到变化，是因为读的是视图<br>2，如果上述的描述成立，文中说<br>”读已提交的隔离级别，视图是建立在执行SQL前“，那么一个事务A包含多条执行SQL，每次执行不同的SQL，就会创建不同的视图，那么看到的值可能是不同的，而这个时候，另一个事务B对数据做了更新操作且未提交事务，那么事务A执行过程中，不就会读到未提交的数据了？这个感觉就达不到隔离级别预定的效果了，感觉有些矛盾了，求指正！","like_count":6,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450480,"discussion_content":"1. \n“而我们的读已提交之所以看不到变化，是因为读的是视图”\n这个说法不太准确，不过你应该是理解到意思了。\n准确表述是：而我们的读已提交之所以看不到变化，是因为查询视图让我们读到了正确的版本\n\n2. 这个看下第8篇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558709654,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1285652,"avatar":"","nickname":"mycat","note":"","ucode":"6878BD32D042F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329569,"discussion_content":"“那么事务A执行过程中，不就会读到未提交的数据了”，----此时是不会读取到事务B未提交的数据的。因为：\n“事务A包含多条执行SQL，每次执行不同的SQL，就会创建不同的视图，那么看到的值可能是不同的”----这里的看到的值可能是不同的，是有一个潜在的前提的，仅仅是指那些更新且已经提交的修改，才会出现你说的“值可能是不同的”这个范围内。修改未提交的更该，不会出现在这个范围里。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1606405914,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1107305,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e5/69/719ec5d0.jpg","nickname":"Jian","note":"","ucode":"17ED4919F22DEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1285652,"avatar":"","nickname":"mycat","note":"","ucode":"6878BD32D042F2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337942,"discussion_content":"潜在的前提就是Mvcc中可见性判断","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609131471,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":329569,"ip_address":""},"score":337942,"extra":""},{"author":{"id":3007210,"avatar":"","nickname":"Geek_a1699c","note":"","ucode":"CF7DB00BE36B77","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1107305,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e5/69/719ec5d0.jpg","nickname":"Jian","note":"","ucode":"17ED4919F22DEC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573631,"discussion_content":"当前读、快照读","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653555925,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":337942,"ip_address":""},"score":573631,"extra":""}]},{"author":{"id":1210684,"avatar":"https://static001.geekbang.org/account/avatar/00/12/79/3c/c5e3bfc1.jpg","nickname":"王","note":"","ucode":"8B3B4D279889C4","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":11638,"discussion_content":"另外，我猜undolog里面应该有标记是否是事务已提交状态","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568415120,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1210684,"avatar":"https://static001.geekbang.org/account/avatar/00/12/79/3c/c5e3bfc1.jpg","nickname":"王","note":"","ucode":"8B3B4D279889C4","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":11637,"discussion_content":"这个视图应该是个时间标记，是读当前值加回滚数据，回滚到哪里。就看这个时间标记","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568415019,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49582,"user_name":"杰哥长得帅","can_delete":false,"product_type":"c1","uid":1241993,"ip_address":"","ucode":"5A7FD1794F62D7","user_header":"https://static001.geekbang.org/account/avatar/00/12/f3/89/fcfecb46.jpg","comment_is_top":false,"comment_ctime":1544722002,"is_pvip":false,"replies":[{"id":"17874","content":"08篇看一下<br><br>然后再深入的，不适合在这个专栏了…","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544750501,"ip_address":"","comment_id":49582,"utype":1}],"discussion_count":2,"race_medal":0,"score":"27314525778","product_id":100020801,"comment_content":"老师能分析一下四种隔离级别分别的锁实现吗？","like_count":6,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432668,"discussion_content":"08篇看一下\n\n然后再深入的，不适合在这个专栏了…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544750501,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1188023,"avatar":"https://static001.geekbang.org/account/avatar/00/12/20/b7/bdb3bcf0.jpg","nickname":"Eternal","note":"","ucode":"EA6FE7CC98F740","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":395079,"discussion_content":"rc 行锁\nrr gap锁和行锁\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1632218472,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43535,"user_name":"彪","can_delete":false,"product_type":"c1","uid":1104247,"ip_address":"","ucode":"EA018898AED85F","user_header":"https://static001.geekbang.org/account/avatar/00/10/d9/77/b92a74d6.jpg","comment_is_top":false,"comment_ctime":1543237721,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"27313041497","product_id":100020801,"comment_content":"老师好，rr模式下，a开启事务先读了10条数据，然后事务b写入一天并提交，这时a再查询能查到么？网上好多资料讲rr模式下，查询会造成幻读，可重复读和幻读的区别在哪里？求老师答疑","like_count":6,"discussions":[{"author":{"id":1392326,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/7KvTibLByic8Eht03jsera25gTIoJEKnajulAVyRibaFic34rNjCSd3DBpjwWInJ72gBMuo1RNNoFdiay0PUSy8971Q/132","nickname":"hahahhh","note":"","ucode":"ED94DDF526F94D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1854,"discussion_content":"可重复读是事务隔离级别，幻读是一种问题，意思是在读提交隔离级别下，事务1第一次查询出来10条，期间事务2写入了2条，事务1再去查，查回来12条，事务1看来，多了两条幽灵一样的记录，这就是幻读。 rr模式不会有幻读问题，因为加了gap锁，此时事务2写不了","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1563001232,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2056626,"avatar":"","nickname":"Geek_5a46d9","note":"","ucode":"33260BC775FE28","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1392326,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/7KvTibLByic8Eht03jsera25gTIoJEKnajulAVyRibaFic34rNjCSd3DBpjwWInJ72gBMuo1RNNoFdiay0PUSy8971Q/132","nickname":"hahahhh","note":"","ucode":"ED94DDF526F94D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289153,"discussion_content":"实测可以写","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594007845,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":1854,"ip_address":""},"score":289153,"extra":""},{"author":{"id":1135990,"avatar":"https://static001.geekbang.org/account/avatar/00/11/55/76/a55871ab.jpg","nickname":"孙庆良","note":"","ucode":"CA05C4CFEFB0F9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2056626,"avatar":"","nickname":"Geek_5a46d9","note":"","ucode":"33260BC775FE28","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312472,"discussion_content":"那是因为你执行的是普通的select语句，这时不加锁，读的是事务刚开启时的快照（老师所讲的视图）。如果执行select  xx for update，这种会加上间隙锁，这样事务二就无法执行修改了","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1602695565,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":289153,"ip_address":""},"score":312472,"extra":""}]},{"author":{"id":1592576,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLIzE6JOuXsOamCWiaq8sHHVyCK44bdIOEqnE42veoZPEqxs5IJ8RT1Hicz0ZlPQFcbEFSwjV7icrfEw/132","nickname":"jjyyun","note":"","ucode":"8824654F673087","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293006,"discussion_content":"看你a第二次读是当前读还是快照读","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1595410515,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41070,"user_name":"看不穿","can_delete":false,"product_type":"c1","uid":1259769,"ip_address":"","ucode":"8D35C36C7A35F0","user_header":"https://static001.geekbang.org/account/avatar/00/13/38/f9/2b4755b5.jpg","comment_is_top":false,"comment_ctime":1542721435,"is_pvip":false,"replies":[{"id":"14872","content":"长事务就是从事务开始到提交，这期间时间很长","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542782845,"ip_address":"","comment_id":41070,"utype":1}],"discussion_count":4,"race_medal":0,"score":"27312525211","product_id":100020801,"comment_content":"老师什么是长事务，是指执行时间长的事务，还是说一个事务里面包含的SQL语句太多，怎么定义的","like_count":6,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429689,"discussion_content":"长事务就是从事务开始到提交，这期间时间很长","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542782845,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1254801,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","nickname":"猴哥一一 cium","note":"","ucode":"38EC64F8D1A0B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312030,"discussion_content":"耗时很长的事务就叫做长事务,哈哈.","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1602566960,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1285652,"avatar":"","nickname":"mycat","note":"","ucode":"6878BD32D042F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329570,"discussion_content":"文中还提到长连接，什么样的连接算是长连接？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606406043,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1285652,"avatar":"","nickname":"mycat","note":"","ucode":"6878BD32D042F2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369012,"discussion_content":"长时间不断开的连接？哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618903753,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":329570,"ip_address":""},"score":369012,"extra":""}]}]},{"had_liked":false,"id":40956,"user_name":"饭粒","can_delete":false,"product_type":"c1","uid":1153455,"ip_address":"","ucode":"4C3220B0D43997","user_header":"https://static001.geekbang.org/account/avatar/00/11/99/af/d29273e2.jpg","comment_is_top":false,"comment_ctime":1542702496,"is_pvip":false,"discussion_count":9,"race_medal":0,"score":"27312506272","product_id":100020801,"comment_content":"参考高性能MySQL梳理下隔离级别，<br>读未提交：一个事务执行过程中，可以&quot;看见&quot;其他事务未提交的数据。<br>读提交：一个事务执行过程中，只能&quot;看见&quot;已经提交的事务所作的修改。<br>可重复读：一个事务执行过程中多次读取同样的记录的结果是一致的，即使其他事务对该数据做了更新修改。但如果这个事务在读取某个范围内的记录时，其他事务又在该范围内插入了新的记录，当之前的事务再次读取该范围的记录时，会产生幻行，这就是幻读。<br>串行化：对应一个记录会加读写锁(可能导致大量的超时和锁争用问题)，出现冲突的时候，后访问的事务必须等前一个事务执行完成才能继续执行。事务100%隔离，可避免幻读。","like_count":6,"discussions":[{"author":{"id":1810051,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK0uyg1IicbEhLwsgM2A2ROoyVdWdmUqZfQfs6G67w9m3hdRNBMOQJatQoACj3qNGgj2KVIgricaYiaQ/132","nickname":"木得感情的编码机器","note":"","ucode":"9C6CD47ADCB8E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":165095,"discussion_content":"可重复读不会产生幻读。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581254567,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":7,"child_discussions":[{"author":{"id":2020865,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/d6/01/eaa50203.jpg","nickname":"zft","note":"","ucode":"74DEC5FBA610B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1810051,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK0uyg1IicbEhLwsgM2A2ROoyVdWdmUqZfQfs6G67w9m3hdRNBMOQJatQoACj3qNGgj2KVIgricaYiaQ/132","nickname":"木得感情的编码机器","note":"","ucode":"9C6CD47ADCB8E6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":276309,"discussion_content":"准确的说应该是，InnoDB在RR这个级别就已经解决了幻读，这也是为什么InnoDB默认的隔离级别是RR","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590850559,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":165095,"ip_address":""},"score":276309,"extra":""},{"author":{"id":1237583,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e2/4f/df01f65e.jpg","nickname":"Danfēng","note":"","ucode":"E5B3451F1D0441","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2020865,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/d6/01/eaa50203.jpg","nickname":"zft","note":"","ucode":"74DEC5FBA610B1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":279430,"discussion_content":"其实我感觉幻读对于数据结果是不会影响的，因为突然多了一条，证明可以操作这个表的业务肯定是多端或多用户操作导致，操作人员自己也心里有逼数。但是你这里说RR就解决了幻读，我看评论好多都说RR有幻读，百度了部分博文又说解决了幻读。从此文章角度来讲，RR保证在当前事务读到的内容始终一致，不受其他事务影响，按理来说也是解决了幻读。但是看了部分评论和博文，我又蒙蔽了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591344334,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":276309,"ip_address":""},"score":279430,"extra":""},{"author":{"id":1140166,"avatar":"https://static001.geekbang.org/account/avatar/00/11/65/c6/a2111ff3.jpg","nickname":"李","note":"","ucode":"5B7065D6A10D84","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1810051,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK0uyg1IicbEhLwsgM2A2ROoyVdWdmUqZfQfs6G67w9m3hdRNBMOQJatQoACj3qNGgj2KVIgricaYiaQ/132","nickname":"木得感情的编码机器","note":"","ucode":"9C6CD47ADCB8E6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288429,"discussion_content":"可重复读是会产生幻读的，只是mysql的InnoDB解决了读取的时候避免了幻读，但是写操作还是避免不了幻读，比如说一个表里面有两条数据，你在事务a插入了一条数据，事务b还是只有两条数据，但是此时你全表更改记录，比如把id 从0全部改为1，这个时候你在b里面再查询的时候，会发现有三条记录，其中一条还竟然是0，两个1.这个时候也是出现幻读了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593748805,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":165095,"ip_address":""},"score":288429,"extra":""}]},{"author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":9554,"discussion_content":"串行的话，读读事务之间还是可以并行的。只是写写事务 读写事务之间是串行的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568187063,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142123,"user_name":"leesir","can_delete":false,"product_type":"c1","uid":1116673,"ip_address":"","ucode":"D720A0966666D9","user_header":"https://static001.geekbang.org/account/avatar/00/11/0a/01/3bd45e1e.jpg","comment_is_top":false,"comment_ctime":1571297399,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23046133879","product_id":100020801,"comment_content":"《高性能MySQL》关于MVCC的实现有以下表述：<br>1、大部分事务型存储引擎都会使用MVCC替代简单的行级锁，可以实现非阻塞的读以及进锁定必要行的写。<br>2、MVCC的实现是通过保存数据的快照实现的，快照等于文中的视图。<br>3、InnoDB的MVCC通过在每行数据后添加2个字断，一个是创建时间，一个是过期时间，时间的值为事务的版本号。<br>读操作：<br>仅返回版本号小于等于当前事务版本号的行。<br>插入操作：<br>创建时间 = 当前事务版本号。<br>删除操作：<br>过期时间 = 当前事务版本号。<br>更新操作：<br>新增一条新纪录，创建时间 =  当前事务版本号，同时更新原纪录的过期时间 = 当前事务版本号。","like_count":5},{"had_liked":false,"id":67101,"user_name":"zwh","can_delete":false,"product_type":"c1","uid":1118134,"ip_address":"","ucode":"0E5690C0773C2D","user_header":"https://static001.geekbang.org/account/avatar/00/11/0f/b6/a8bbc3c6.jpg","comment_is_top":false,"comment_ctime":1550070869,"is_pvip":false,"replies":[{"id":"23802","content":"建立视图没什么成本的，就是拷贝一个事务数组；<br>所以性能的差异不是体现在这里；<br><br>一般我们说可重复的效率相对的低（其实也还好，不会低多少），<br>主要还是因为可重复读的锁范围可能更大（有gap lock），锁时间更长（事务结束才释放），影响并发度<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1550127661,"ip_address":"","comment_id":67101,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23024907349","product_id":100020801,"comment_content":"老师，有个问题一直不解。既然读提交每次都要新建一个视图，而可重复读只建立一次，那么为什么读提交的效率要比可重复读高呢？？求解答！！","like_count":5,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439056,"discussion_content":"建立视图没什么成本的，就是拷贝一个事务数组；\n所以性能的差异不是体现在这里；\n\n一般我们说可重复的效率相对的低（其实也还好，不会低多少），\n主要还是因为可重复读的锁范围可能更大（有gap lock），锁时间更长（事务结束才释放），影响并发度\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550127661,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58494,"user_name":"马斯蔡","can_delete":false,"product_type":"c1","uid":1068278,"ip_address":"","ucode":"C07800CC4787F0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/kzatY691Z9thf13TictPkVGHIQIKSrQyW1Rlu5DO8qmwLMF73tvb80yP3q27mwjYB7WSvBgayjsk1FGW6AgYxIw/132","comment_is_top":false,"comment_ctime":1547091174,"is_pvip":false,"replies":[{"id":"21174","content":"这个“清理”的意思是 “逻辑上这些文件位置可以复用”，但是并没有删除文件，也没有把文件变小","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547134421,"ip_address":"","comment_id":58494,"utype":1}],"discussion_count":5,"race_medal":0,"score":"23021927654","product_id":100020801,"comment_content":"引用文章原文：<br>- &quot;在MySQL 5.5及以前的版本，回滚日志是跟数据字典一起放在ibdata文件里的，即使长事务最终提交，回滚段被清理，文件也不会变小。&quot;<br><br>老师，这里不是说“回滚段被清理了”，但为什么文件不会变小？","like_count":5,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436092,"discussion_content":"这个“清理”的意思是 “逻辑上这些文件位置可以复用”，但是并没有删除文件，也没有把文件变小","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547134421,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377371,"discussion_content":"申请的内存空间还在，其他连接无法使用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622618883,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1484706,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gIE15oOl1IicE8hicpPzuoARricgaL3y4nHDXaFCPX0U3UX3szgtrKCa4zCPc5GkdpceP0mftbJg3MdKHOLJOKJww/132","nickname":"Geek_66a431","note":"","ucode":"D8941CA3BE8457","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284220,"discussion_content":"“逻辑上这些文件位置可以复用” 不就是删除了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592475892,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1254801,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","nickname":"猴哥一一 cium","note":"","ucode":"38EC64F8D1A0B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1484706,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gIE15oOl1IicE8hicpPzuoARricgaL3y4nHDXaFCPX0U3UX3szgtrKCa4zCPc5GkdpceP0mftbJg3MdKHOLJOKJww/132","nickname":"Geek_66a431","note":"","ucode":"D8941CA3BE8457","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312029,"discussion_content":"只是把文件位置空出来了,可以被别人使用.相当于一个可用标识","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602566918,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":284220,"ip_address":""},"score":312029,"extra":""},{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1484706,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gIE15oOl1IicE8hicpPzuoARricgaL3y4nHDXaFCPX0U3UX3szgtrKCa4zCPc5GkdpceP0mftbJg3MdKHOLJOKJww/132","nickname":"Geek_66a431","note":"","ucode":"D8941CA3BE8457","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369011,"discussion_content":"标记为可以复用，并没有实际删除数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618903262,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":284220,"ip_address":""},"score":369011,"extra":""}]}]},{"had_liked":false,"id":42004,"user_name":"宋考俊","can_delete":false,"product_type":"c1","uid":1113156,"ip_address":"","ucode":"D4F5663A9A9393","user_header":"https://static001.geekbang.org/account/avatar/00/10/fc/44/7ae977f9.jpg","comment_is_top":false,"comment_ctime":1542890520,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"23017727000","product_id":100020801,"comment_content":"Spring中的事务隔离级别与数据库的隔离级别是什么关系呢？","like_count":5,"discussions":[{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":26390,"discussion_content":"Spring 使用的事务隔离级别，就是数据库的。这个是标准。\n\nSpring 定义独特的，是事务的传播，模仿 EJB .","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1570601060,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":73880,"discussion_content":"哇哦，在这看到了大神，膜拜一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575604584,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":26390,"ip_address":""},"score":73880,"extra":""},{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":74024,"discussion_content":"说明我也是认真学习哒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575624437,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":73880,"ip_address":""},"score":74024,"extra":""},{"author":{"id":1066007,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKODTphVILAIhSe12svgFMZebQojDTslUKXYaTqcEDicnyzvu4kFnKXW76GicEXU2CtAttmxveF1WLg/132","nickname":"中中哥","note":"","ucode":"2836F4D139E254","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":261755,"discussion_content":"大佬，我加入了你的星球。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589002363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":26390,"ip_address":""},"score":261755,"extra":""}]},{"author":{"id":1264111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/49/ef/02401473.jpg","nickname":"月迷津渡","note":"","ucode":"2B18B2FE3DAC3B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":163289,"discussion_content":"我老早也有这个问题，后面才晓得spring的事务是个壳子 不同的DB有他对应的标准的实现，spring只是用aop和标签包装了一下。然后可以参数化配置","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581067215,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74614,"user_name":"郭先生","can_delete":false,"product_type":"c1","uid":1237238,"ip_address":"","ucode":"5A9BAF5900693E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eriaLIX6JuriczQdYDX1Ph8gCJ7jKjokvQH8UaZg8XoPd2M7hfu94zKFHMc7P7vAicLH3Le5PLWzQjzw/132","comment_is_top":false,"comment_ctime":1552267687,"is_pvip":true,"replies":[{"id":"28801","content":"业务场景里面需要明确的“可重复读”的能力，<br>比如我见过的一些金融类的业务里面需要。<br><br>大多数时候可以优先考虑 row 格式 + RC<br><br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1553339830,"ip_address":"","comment_id":74614,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18732136871","product_id":100020801,"comment_content":"丁奇您好，根据您的经验，什么场景下用RC，什么场景下用RR，能否举些场景出来?","like_count":4,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442619,"discussion_content":"业务场景里面需要明确的“可重复读”的能力，\n比如我见过的一些金融类的业务里面需要。\n\n大多数时候可以优先考虑 row 格式 + RC\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553339830,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71565,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1551370563,"is_pvip":false,"replies":[{"id":"25734","content":"^_^， 这4个问题，都在08篇写了<br><br>你看一下08篇，然后还有问题就在08篇下提吧🤝","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551404087,"ip_address":"","comment_id":71565,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18731239747","product_id":100020801,"comment_content":"接上一个评论【本文通读多次，关于视图一直卡着……】<br>由衷的感谢林老师神速的回复，截止目前这是我极客时间被作者大神回复最快的一回。<br>再次感谢林老师的敬业，也追问几个问题：<br>1，事务的一次性视图可以理解成整个库的“快照”吧？<br>2，对于存储了20G数据的库，这种“快照”肯定也非常大（因为需要满足查找任何数据），大小也应该在20G左右？如果这样的话；可重复读隔离级别的库，多个连接自然会导致开启多个事务，”快照”也就多了，服务器岂不是一下就爆了？<br>3，这个“快照”的数据结构是什么？<br>4，读提交隔离级别下，同一事务中，每个sql执行时都会创建一个“快照“，执行完立马会销毁回收吗？","like_count":4,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441207,"discussion_content":"^_^， 这4个问题，都在08篇写了\n\n你看一下08篇，然后还有问题就在08篇下提吧🤝","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551404087,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49236,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1544628769,"is_pvip":false,"replies":[{"id":"17653","content":"嗯嗯，你这个解读到位😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544634527,"ip_address":"","comment_id":49236,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18724497953","product_id":100020801,"comment_content":"**事务的启动方式**这小节提到：<br>[A] 有些客户端连接框架会默认连接成功后...。<br>[B] 因此，我会建议你总是使用 set autocommit=1, 通过显式语句的方式来启动事务。<br>[C] 但是有的开发同学会纠结“多一次交互”的问题。[D] 对于一个需要频繁使用事务的业务，第二种方式每个事务在开始时都不需要主动执行一次 “begin”，减少了语句的交互次数。[E] 如果你也有这个顾虑，我建议你使用 commit work and chain 语法。<br>[F] 在 autocommit 为 1 的情况下，用 begin 显式启动的事务...。<br><br>--- 我是快乐且好学的分割线 ---<br><br>感觉 [C]、[D]、[E] 这一段读起来怪怪的<br>1. [C] 开头提到“多一次交互”的问题<br>2. 然后 [D] 紧接着说明频繁使用事务的业务，建议第二种方式启动事务，因为不需要多执行一次“begin”<br>3. 最后 [E] 介绍了“commit work and chain”语法。<br><br>自己的理解：<br>[B] 和 [C] 是一起的，表达的意思是：建议同学们使用 set autocommit=1 的方式显示启动事务，也就是文中提到的第一种方式。但是第一种方式，有的开发同学会纠结“多一次交互”的问题。<br>不应该新起一段来提及“多一次交互”的纠结，这句话应该放到 [B] 的后面。<br>同时 [E] 也是针对“多一次交互”的纠结，给出的解决方案，即使用 set autocommit=1 显示启动事务，配合 commit work and chain 语法，可以省去再次执行 begin 语句的开销，因此开发也不用纠结“多一次交互”了。<br>而 [D] 只是简述了 set autocommit=0 的第二种方式，较第一种减少了“begin”语句的交互次数。穿插在 [C] 和 [E] 中间，增加了理解难度。","like_count":4,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432546,"discussion_content":"嗯嗯，你这个解读到位😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544634527,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46206,"user_name":"我是小队长","can_delete":false,"product_type":"c1","uid":1334198,"ip_address":"","ucode":"E0687666EE2031","user_header":"https://static001.geekbang.org/account/avatar/00/14/5b/b6/f404b490.jpg","comment_is_top":false,"comment_ctime":1543884656,"is_pvip":false,"replies":[{"id":"16550","content":"这俩应该是行锁了，不存在“同时修改”的情况","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543891685,"ip_address":"","comment_id":46206,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18723753840","product_id":100020801,"comment_content":"现在有另外一个事务正在将 4 改成 5，这个事务跟 read-view A、B、C 对应的事务是不会冲突的。我想问下，假如现在回滚到事物1最开始中的值1，这是另一个事物将值改为5，那么现在这条记录中最终的值是1还是5呢？","like_count":4,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431375,"discussion_content":"这俩应该是行锁了，不存在“同时修改”的情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543891685,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45860,"user_name":"Nash.Z","can_delete":false,"product_type":"c1","uid":1232273,"ip_address":"","ucode":"76B14722664402","user_header":"https://static001.geekbang.org/account/avatar/00/12/cd/91/3d6c53f8.jpg","comment_is_top":false,"comment_ctime":1543804704,"is_pvip":false,"replies":[{"id":"16384","content":"好问题。<br><br>连接有效。<br><br><br>不过你这个问题要情况。<br>如果你说的是MySQL 线程池，MySQL 在复用的时候会重新初始化，那线程和连接其实一个意思；<br><br>如果是说中间件(proxy)的连接复用，那就要看这个中间件怎么做的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543808041,"ip_address":"","comment_id":45860,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18723673888","product_id":100020801,"comment_content":"老师，有个疑问：<br>您提到：set autocommit=0，这个命令会将这个线程的自动提交关掉……（中间省略）<br>              如果是长连接，就导致了意外的长事务。<br>我的问题： 这个命令是针对这个线程有效，还是针对这个连接有效？如果这个线程A结束，而连接没有关闭，另外一个线程B继续使用该连接，这个时候这个事务有没有自动提交呢？谢谢！<br>           ","like_count":4,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431241,"discussion_content":"好问题。\n\n连接有效。\n\n\n不过你这个问题要情况。\n如果你说的是MySQL 线程池，MySQL 在复用的时候会重新初始化，那线程和连接其实一个意思；\n\n如果是说中间件(proxy)的连接复用，那就要看这个中间件怎么做的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543808041,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287925,"user_name":"张诚","can_delete":false,"product_type":"c1","uid":1115702,"ip_address":"","ucode":"F623703194769B","user_header":"https://static001.geekbang.org/account/avatar/00/11/06/36/d288bcc7.jpg","comment_is_top":false,"comment_ctime":1618217461,"is_pvip":true,"replies":[{"id":"104600","content":"这个是一致的哈<br>事务启动就是在“第一次执行查询语句”的时候哦","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1618318273,"ip_address":"","comment_id":287925,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14503119349","product_id":100020801,"comment_content":"这么久了，不知道老师还会不会回复，关于可重复读隔离级别下，一致性视图的创建时间有点疑惑，文中说的在事务启动时创建，但我实验的结果是在第一次查询语句执行时创建的，希望老是解答一下","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518461,"discussion_content":"这个是一致的哈\n事务启动就是在“第一次执行查询语句”的时候哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618318273,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393006,"discussion_content":"准确的说应该是第一次执行select ,update,delete, insert语句的时候  会启动事务，而不光是查询语句。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631200976,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":243966,"user_name":"莫得办法","can_delete":false,"product_type":"c1","uid":1073958,"ip_address":"","ucode":"D3E07A4CFD1AAA","user_header":"https://static001.geekbang.org/account/avatar/00/10/63/26/8c8be018.jpg","comment_is_top":false,"comment_ctime":1598342037,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14483243925","product_id":100020801,"comment_content":"对于事务隔离的实现原理感觉没说的太明白呀","like_count":3,"discussions":[{"author":{"id":1318633,"avatar":"https://static001.geekbang.org/account/avatar/00/14/1e/e9/dcc63d8f.jpg","nickname":"怕什么，抱紧我","note":"","ucode":"CBCEA76E9EF33B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":324614,"discussion_content":"我也没听明白","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605143979,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":76857,"user_name":"撇撇","can_delete":false,"product_type":"c1","uid":1010786,"ip_address":"","ucode":"938305F9F3F19C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6c/62/cbb91635.jpg","comment_is_top":false,"comment_ctime":1552730848,"is_pvip":false,"replies":[{"id":"28818","content":"对，回滚操作","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1553344861,"ip_address":"","comment_id":76857,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14437632736","product_id":100020801,"comment_content":"回滚段存放的是回滚操作而不是旧版本数据？","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443474,"discussion_content":"对，回滚操作","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553344861,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58250,"user_name":"辉仔lovers","can_delete":false,"product_type":"c1","uid":1210219,"ip_address":"","ucode":"3DC5B0CD0B8E71","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLVhJRVwJ0eVlC7zjNfWP6PP7VmUkF1X2m6qfh7Wic3NhAOz2fSGibF6LXLcJ59zOz7nBpCcByvtFjw/132","comment_is_top":false,"comment_ctime":1547018732,"is_pvip":false,"replies":[{"id":"21131","content":"嗯嗯，实践加深印象👍","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547119670,"ip_address":"","comment_id":58250,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14431920620","product_id":100020801,"comment_content":"学完后，感觉概念有点模糊，所以直接动手了，两个客户端去连接myql，分别模拟两个用户线程，也就是两个事务，查询mysql的当前隔离级别 是  repeatable read, 一个事务 更新一条数据的某个字段，另一个事务 读取当前这一条。发现 可以实现 重复读取。然后更改事务的隔离级别为 read-committed 后再次操作 发现不能再实现重复读了。以此类推，换成别的隔离级别，自己去尝试","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435972,"discussion_content":"嗯嗯，实践加深印象👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547119670,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":50198,"user_name":"alex","can_delete":false,"product_type":"c1","uid":1012579,"ip_address":"","ucode":"2DB95B3815F728","user_header":"https://static001.geekbang.org/account/avatar/00/0f/73/63/f008057a.jpg","comment_is_top":false,"comment_ctime":1544902661,"is_pvip":false,"replies":[{"id":"18037","content":"不会，这里是快照读，快照读没这个问题","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544928897,"ip_address":"","comment_id":50198,"utype":1}],"discussion_count":5,"race_medal":0,"score":"14429804549","product_id":100020801,"comment_content":"假设你在管理一个个人银行账户表。一个表存了每个月月底的余额，一个表存了账单明细。这时候你要做数据校对，也就是判断上个月的余额和当前余额的差额，是否与本月的账单明细一致。你一定希望在校对过程中，即使有用户发生了一笔新的交易，也不影响你的校对结果。<br><br>——————————————<br>这个例子中明细有新纪录的话会幻读吧","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432911,"discussion_content":"不会，这里是快照读，快照读没这个问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544928897,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377372,"discussion_content":"快照+间隙锁解决了幻读","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622618984,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1254801,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","nickname":"猴哥一一 cium","note":"","ucode":"38EC64F8D1A0B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312032,"discussion_content":"RR级别下,快照读不会产生幻读.\n可用说InnoDb解决了这种情况下的幻读问题.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602567118,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1254801,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","nickname":"猴哥一一 cium","note":"","ucode":"38EC64F8D1A0B4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369015,"discussion_content":"当前读才能解决幻读问题。快照读不行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618903941,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":312032,"ip_address":""},"score":369015,"extra":""},{"author":{"id":1911661,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLDOKcx20Xxmu5j8WxiafoYvo3bIAFDg8OeicRic1icD597QuMC9O8FyV2Al9RxNfVZXK0gkGUx6M3CVQ/132","nickname":"多年以后","note":"","ucode":"D70E7A1ABE0F39","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551826,"discussion_content":"你说反了吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645149088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":369015,"ip_address":""},"score":551826,"extra":""}]}]},{"had_liked":false,"id":48254,"user_name":"Racoon","can_delete":false,"product_type":"c1","uid":1040047,"ip_address":"","ucode":"20D9DBDDEB3B1E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/de/af/9379c7bd.jpg","comment_is_top":false,"comment_ctime":1544406781,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14429308669","product_id":100020801,"comment_content":"请问一下，我对于可重复读有点疑惑，关于事务A里面包含的操作：启动事务，提交事务，之后为什么又有查询得到值V3的操作？<br>事务提交完之后不就结束了吗","like_count":3,"discussions":[{"author":{"id":1392326,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/7KvTibLByic8Eht03jsera25gTIoJEKnajulAVyRibaFic34rNjCSd3DBpjwWInJ72gBMuo1RNNoFdiay0PUSy8971Q/132","nickname":"hahahhh","note":"","ucode":"ED94DDF526F94D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1855,"discussion_content":"我觉得这只是作者去验证一下，最新的结果。如你说的，事务确实已经结束了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1563001411,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41073,"user_name":"江清","can_delete":false,"product_type":"c1","uid":1255595,"ip_address":"","ucode":"3145BCD7C622F7","user_header":"https://static001.geekbang.org/account/avatar/00/13/28/ab/33ed4147.jpg","comment_is_top":false,"comment_ctime":1542721731,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14427623619","product_id":100020801,"comment_content":"事务隔离的实现应该是锁+MVCC，RR下通过MVCC+间隙锁来解决幻读，感觉这块还没展开，可以再详细一点哈","like_count":3},{"had_liked":false,"id":40656,"user_name":"易翔","can_delete":false,"product_type":"c1","uid":1304541,"ip_address":"","ucode":"8C63DB7379186C","user_header":"https://static001.geekbang.org/account/avatar/00/13/e7/dd/e68f9cf5.jpg","comment_is_top":false,"comment_ctime":1542639111,"is_pvip":false,"replies":[{"id":"14638","content":"不是的… start transaction WITH CONSISTENT SNAPSHOT 才是会直接创建read-view ，也就是快照。 <br><br>start transaction 和 begin语义上是一样的。","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542642548,"ip_address":"","comment_id":40656,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14427540999","product_id":100020801,"comment_content":"顺提一句，其中start transaction和begin两条语句在启动一个事务中有不同的效果。。其中一个是立即进入快照时代，另一个是下一条SQL开始时进入。好友康提点过后才知道的细节。","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429579,"discussion_content":"不是的… start transaction WITH CONSISTENT SNAPSHOT 才是会直接创建read-view ，也就是快照。 \n\nstart transaction 和 begin语义上是一样的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542642548,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":272852,"user_name":"大反派","can_delete":false,"product_type":"c1","uid":1117339,"ip_address":"","ucode":"425D85B39D8A61","user_header":"https://static001.geekbang.org/account/avatar/00/11/0c/9b/0835caf1.jpg","comment_is_top":false,"comment_ctime":1610333574,"is_pvip":false,"replies":[{"id":"98950","content":"前面提交的事务就提交了，新的事务没有走到提交阶段，就回滚","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1610437189,"ip_address":"","comment_id":272852,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10200268166","product_id":100020801,"comment_content":"在commit一个trx后开始一个begin，万一这个thread挂掉了怎么办？","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513410,"discussion_content":"前面提交的事务就提交了，新的事务没有走到提交阶段，就回滚","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610437189,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":248606,"user_name":"Warming","can_delete":false,"product_type":"c1","uid":1024679,"ip_address":"","ucode":"BD1283D003F5BC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a2/a7/37cbf5f7.jpg","comment_is_top":false,"comment_ctime":1600240688,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10190175280","product_id":100020801,"comment_content":"真的不太适合没什么基础的人看，第一次看也是云里雾里，好多概念都不明白，整个流程根本串不起来。例如ReadView机制具体是怎么实现的，undo log的结构也不清除，看完只是隐约知道有这么回事，但是还是一片模糊。后来补了补功课，知道了每行数据上有隐藏字段，存了更新数据的事务ID，以及指向undo log的指针，知道了undo log版本链，知道ReadView里面存了哪些信息，然后知道了他们是如何串起来通过回退来实现对应的数据隔离。可能是篇幅所限，许多前置知识无法介绍，还是建议看不懂的时候尽量多去查找，填充知识盲区，只看这个估计达不到预期的目标。","like_count":2},{"had_liked":false,"id":222380,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1590767129,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10180701721","product_id":100020801,"comment_content":"这次不记得是多少刷了（&gt;=5），反正是理解了这节的内容，结果极客时间《SQL必知必会》的一节来一起学习的。","like_count":2},{"had_liked":false,"id":179961,"user_name":"答案在风中","can_delete":false,"product_type":"c1","uid":1009548,"ip_address":"","ucode":"2CDD5A15D37121","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/8c/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1582127509,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10172062101","product_id":100020801,"comment_content":"视图可以理解为“数据副本”，对于可重复读场景最简单的实现视图那肯定是在开启事务时复制数据复本，然后在不同的复本上进行数据修改，事务提交时再将复本上的数据写入&quot;主干&quot;，但是这里会存在一个问题是副本怎么来，是全量的源数据呢（逻辑简单代价太高），还是特定的源数据呢（建立特定的目标数据的副本也会是个复杂度很高的操作，在事务开始阶段就要将事务内所使用的所有数据找出来并建立副本）。而通过回滚日志的方式，在“主干”数据上我们始终通过将数据回滚到当前视图的最后一次数据修改操作，来得到视图开启时间点的数据副本（这个操作可以延迟到我们具体使用那些数据的时候去计算）。我想这个的原理大体上和git的原理有异曲同工之妙。","like_count":2},{"had_liked":false,"id":172092,"user_name":"凌云","can_delete":false,"product_type":"c1","uid":1028756,"ip_address":"","ucode":"A092ACE7FA40DF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b2/94/6111101d.jpg","comment_is_top":false,"comment_ctime":1579087221,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10169021813","product_id":100020801,"comment_content":"可重复读概念确实不大好理解，如果参考英文解析， 就相对容易理解。<br><br>The Repeatable Read isolation level only sees data committed before the transaction began; it never<br>sees either uncommitted data or changes committed during transaction execution by concurrent<br>transactions. (However, the query does see the effects of previous updates executed within its own<br>transaction, even though they are not yet committed.)","like_count":3},{"had_liked":false,"id":138717,"user_name":"life is short, enjoy more.","can_delete":false,"product_type":"c1","uid":1074805,"ip_address":"","ucode":"3B5F37D30790A7","user_header":"https://static001.geekbang.org/account/avatar/00/10/66/75/54bb858e.jpg","comment_is_top":false,"comment_ctime":1570432195,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10160366787","product_id":100020801,"comment_content":"老师您好，看完这篇文章后，我对其中一句话不是很理解——“对于 read-view A，要得到 1，就必须将当前值依次执行图中所有的回滚操作得到。”，既然read view A是事务1创建的，那么read view B、read view C的逻辑理论上和事务1是没有关系的吧，应该分别是事务2 3创建的？如果要回滚事务1的操作，为什么要回滚其他事务的逻辑呢？<br>祝老师休假开心，有时间解答一下我的疑惑。","like_count":2,"discussions":[{"author":{"id":1285652,"avatar":"","nickname":"mycat","note":"","ucode":"6878BD32D042F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329580,"discussion_content":"数据是怎么被该的，就要原路返回去才能得到正确的结果。\n就像公交车站一样，从第一站到最后一站，其中的每一站是一个被修改的数据版本。\n现在出现混滚操作，有的事务要得到第一站的数据版本。你完全可以直接返回第一站，但是undolog记录的过程总，它是不知道怎么从最后一站直接返回到第一站的。它值记录了从最后一站，也就是最新的数据版本一站一站的原路返回过去才能得到第一站的数据内容。另外，这是指有一个事务要得到第一站的数据版本，那如果有的事务要得到第3站的数据内容，有的事务要得到第7站的数据版本。。。一次类推。你不能都记录如何从最新的数据版本直接回到某个事务要的数据版本吧？索性挨个站点原路返回。\n另外一个问题：SQL语句的执行顺序对最后数据库中的结果是有很大大影响的。如果不按照原来的逻辑逐条返回，最后得到的结果很可能和最原先被修改之前的内容对不上。\n这就是需要回滚其他事务的原因。只有回滚了其他事务，才能回滚你要的那个事务版本的数据。他们有先后依赖关系的。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1606407191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2212810,"avatar":"https://static001.geekbang.org/account/avatar/00/21/c3/ca/93f7eca9.jpg","nickname":"Cassie","note":"","ucode":"1C68BDBCC95FA5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1285652,"avatar":"","nickname":"mycat","note":"","ucode":"6878BD32D042F2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534437,"discussion_content":"这样的话，是不是这条链路所涉及的事务都要回滚？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638188269,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":329580,"ip_address":""},"score":534437,"extra":""}]}]},{"had_liked":false,"id":130020,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1567352456,"is_pvip":false,"replies":[{"id":"48704","content":"回滚失败一种常见情况是回滚一般crash了， <br>重启以后继续回滚。<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1567481056,"ip_address":"","comment_id":130020,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10157287048","product_id":100020801,"comment_content":"老师，如果事务执行了一半后失败了，会自动回滚，那回滚就一定成功吗，如果回滚也失败了怎么办","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465765,"discussion_content":"回滚失败一种常见情况是回滚一般crash了， \n重启以后继续回滚。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567481056,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":9583,"discussion_content":"上一课程已经讲了 redo log和binlog的2段提交了，就是为了防止回滚失败的情况出现的设计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568192952,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47923,"user_name":"suhui","can_delete":false,"product_type":"c1","uid":1155326,"ip_address":"","ucode":"53BD826C1164F9","user_header":"https://static001.geekbang.org/account/avatar/00/11/a0/fe/ac5a62f3.jpg","comment_is_top":false,"comment_ctime":1544258001,"is_pvip":false,"replies":[{"id":"17053","content":"1. 更新过程一边更新一边生成undo log.<br>2. 是后台，有定时的逻辑。如果空闲很久，确实有可能删除完了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544268923,"ip_address":"","comment_id":47923,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10134192593","product_id":100020801,"comment_content":"老师你好，我对undo log有两个疑问：<br>1. undo log是在什么时候写入的呢，前面讲语句更新的流程中没有提到undo log，是它的写入结果对更新操作没有影响吗？<br>2. “当系统中没有比某一回滚日志更早的read-view时，回滚日志会被删除”。这个操作是定时的执行的吗？是不是如果某个数据库在一定时间内完全处于空闲状态，undo log就被删除完了？","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431947,"discussion_content":"1. 更新过程一边更新一边生成undo log.\n2. 是后台，有定时的逻辑。如果空闲很久，确实有可能删除完了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544268923,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1188023,"avatar":"https://static001.geekbang.org/account/avatar/00/12/20/b7/bdb3bcf0.jpg","nickname":"Eternal","note":"","ucode":"EA6FE7CC98F740","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":395081,"discussion_content":"1、undo log\n2、changeBuffer 、数据页\n3、redo log\n 脏页有条件的触发刷新+定时刷新","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632218884,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1102831,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d3/ef/9c5e695b.jpg","nickname":"oops","note":"","ucode":"1DEC23A503F8A3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376337,"discussion_content":"这个更新过程 是指生成redo log 的时候 还是脏页刷盘的时候","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622086329,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43047,"user_name":"Darren","can_delete":false,"product_type":"c1","uid":1254968,"ip_address":"","ucode":"CCD2B2C492BE9A","user_header":"https://static001.geekbang.org/account/avatar/00/13/26/38/ef063dc2.jpg","comment_is_top":false,"comment_ctime":1543149332,"is_pvip":true,"replies":[{"id":"15399","content":"同一次查询在执行期间看到的是相同的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543178489,"ip_address":"","comment_id":43047,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10133083924","product_id":100020801,"comment_content":"在“可重复读”隔离级别下，这个视图是在事务启动时创建的，整个事务存在期间都用这个视图。在“读提交”隔离级别下，这个视图是在每个 SQL 语句开始执行的时候创建的。  老师，这块不太理解，可重复读理解，读提交是每个sql开始执行都创建视图，那同样一次查询，为什么另一个事务没有提交的时候看不到，提交了就能看到？请老师指点","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430285,"discussion_content":"同一次查询在执行期间看到的是相同的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543178489,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42701,"user_name":"WL","can_delete":false,"product_type":"c1","uid":1173771,"ip_address":"","ucode":"6277DCD776B87E","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/0b/1171ac71.jpg","comment_is_top":false,"comment_ctime":1543023658,"is_pvip":false,"replies":[{"id":"15303","content":"对的，DBA没事就业务开发做，项目稳定性第一呀😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543042233,"ip_address":"","comment_id":42701,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10132958250","product_id":100020801,"comment_content":"学习了事务的机制是通过视图来实现的并发版本控制(MVCC), 不同的事务隔离级别创建读视图的时间点不同, 可重复读是每个事务重建读视图, 读已提交是每条SQL创建读视图, 读未提交是不创建. 每个事务都是根据自己的读视图对数据库进行操作. 可重复读的例子, 使用可重复读的事务隔离级别, 新的交易过来不会对对账的事务产生影响的例子对于我们当前支付中心的开发工作很有启发. <br>作业: 可以在项目的管理后台增加一个长事务查询的页面, 这样可以定期的查询库中所有表的长事务, 然后有针对性的进行优化. ","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430167,"discussion_content":"对的，DBA没事就业务开发做，项目稳定性第一呀😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543042233,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40895,"user_name":"慕塔","can_delete":false,"product_type":"c1","uid":1302106,"ip_address":"","ucode":"5C6C668C1106A5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/A94RKUfWfwzRzb68T9xskctQ43TBgXSBIL78p0N0ria2tQxmsTTJebYmefhkbHK7zwpoxokxs43UxpgDTdwm5tg/132","comment_is_top":false,"comment_ctime":1542690655,"is_pvip":false,"replies":[{"id":"14709","content":"如果是整个B+树加锁就是表锁啦😄 InnoDB是支持行锁的哦","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542690993,"ip_address":"","comment_id":40895,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10132625247","product_id":100020801,"comment_content":"请教下啊 如果一个mtr更改多个数据页，会对整个b+树上锁？还是只锁住页所在的分支呢 谢谢","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429643,"discussion_content":"如果是整个B+树加锁就是表锁啦😄 InnoDB是支持行锁的哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542690993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40359,"user_name":"蓝士钦","can_delete":false,"product_type":"c1","uid":1229516,"ip_address":"","ucode":"726EB5C8EF1249","user_header":"https://static001.geekbang.org/account/avatar/00/12/c2/cc/ca22bb7c.jpg","comment_is_top":false,"comment_ctime":1542602809,"is_pvip":false,"replies":[{"id":"14536","content":"Innodb 默认的也是repeatable-read的隔离级别呀","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542608537,"ip_address":"","comment_id":40359,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10132537401","product_id":100020801,"comment_content":"我用MariaDB 10.3.10 最新版的，发现查询事物隔离级别还是用 show variables like &#39;tx_isolation&#39;;默认级别为REPEATABLE-READ，都说MariaDB和MySQL没差，其实还是有差的","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429493,"discussion_content":"Innodb 默认的也是repeatable-read的隔离级别呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542608537,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40232,"user_name":"发条橙子 。","can_delete":false,"product_type":"c1","uid":1259218,"ip_address":"","ucode":"ED076F4534FFED","user_header":"https://static001.geekbang.org/account/avatar/00/13/36/d2/c7357723.jpg","comment_is_top":false,"comment_ctime":1542584001,"is_pvip":false,"replies":[{"id":"14516","content":"还是有的，表上还会影响。第六讲会讲到","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542593899,"ip_address":"","comment_id":40232,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10132518593","product_id":100020801,"comment_content":"老师我想先问一下锁的问题 ，一个事务中 , 没有手动加 排他锁 或者 意向锁 。那长事务是不是就没有占用锁资源这么一说了","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429435,"discussion_content":"还是有的，表上还会影响。第六讲会讲到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542593899,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40231,"user_name":"BigMortal","can_delete":false,"product_type":"c1","uid":1302057,"ip_address":"","ucode":"6236118A0FFCBB","user_header":"https://static001.geekbang.org/account/avatar/00/13/de/29/71685b0b.jpg","comment_is_top":false,"comment_ctime":1542583947,"is_pvip":false,"replies":[{"id":"14517","content":"深刻了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542593924,"ip_address":"","comment_id":40231,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10132518539","product_id":100020801,"comment_content":"#关于数据库的隔离模式：我的理解mysql 的rr，和oracle 的rc 最大的区别是mysql 在rr隔离模式中引入了gap lock 来保障rr，oracle如果要绝对保证rr，必须启用undo guarantee ，理论上也能保证rr。不知道理解是否有偏差？","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429434,"discussion_content":"深刻了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542593924,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1334527,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/WuVCibYmuGqFLnfIrr0BmkdzHwkialB0DibJ0YnymNNO2Wicy76ZxSvjD66sPVsd9SjkicSS4Z2iadTeOn7zGfwh9sxg/132","nickname":"灵犀andy","note":"","ucode":"3C3C36B070676C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":96630,"discussion_content":"你好，oracle不支持rr隔离级别。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577082023,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":299999,"user_name":"lidabai","can_delete":false,"product_type":"c1","uid":2677124,"ip_address":"","ucode":"BACB3430064469","user_header":"https://static001.geekbang.org/account/avatar/00/28/d9/84/9b03cd04.jpg","comment_is_top":false,"comment_ctime":1624951018,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5919918314","product_id":100020801,"comment_content":"ibdata文件是.ibd格式的文件吗？比如MySQL库下的time_zone.ibd文件。 ","like_count":1,"discussions":[{"author":{"id":1302556,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e0/1c/aa50dc27.jpg","nickname":"icyricky","note":"","ucode":"D63C285165309D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":404945,"discussion_content":"不是。ibd文件是InnoDB表文件的一部分。ibdata是系统表空间，主要存 Data dictionary\n、Double write buffer、Insert buffer/change buffer、Rollback segments、UNDO space、 Foreign key constraint system tables、User Data, if innodb_file_per_table=0。两个是不同的文件。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634468586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":272725,"user_name":"consistent","can_delete":false,"product_type":"c1","uid":2073354,"ip_address":"","ucode":"27D54DEE5EA845","user_header":"https://static001.geekbang.org/account/avatar/00/1f/a3/0a/dac17ab5.jpg","comment_is_top":false,"comment_ctime":1610254697,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5905221993","product_id":100020801,"comment_content":"1. 建立需要遵守的开发准则：客户端手动开启事务<br>2. 设置监控查询超过60s的长事务，并报警通知业务负责人","like_count":1},{"had_liked":false,"id":267631,"user_name":"龙猫","can_delete":false,"product_type":"c1","uid":1112490,"ip_address":"","ucode":"FD726CC969EF9C","user_header":"https://static001.geekbang.org/account/avatar/00/10/f9/aa/3e80212e.jpg","comment_is_top":false,"comment_ctime":1607850449,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5902817745","product_id":100020801,"comment_content":"回头看，都是精华啊","like_count":1},{"had_liked":false,"id":250002,"user_name":"吴兆江","can_delete":false,"product_type":"c1","uid":1333966,"ip_address":"","ucode":"A7B8E7B6D4A597","user_header":"https://static001.geekbang.org/account/avatar/00/14/5a/ce/41b26de6.jpg","comment_is_top":false,"comment_ctime":1600877852,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5895845148","product_id":100020801,"comment_content":"同一条记录在系统中可能存在多个版本，这就是多版本并发控制。","like_count":1},{"had_liked":false,"id":226490,"user_name":"陈国林","can_delete":false,"product_type":"c1","uid":1438037,"ip_address":"","ucode":"83D12F3E79F197","user_header":"https://static001.geekbang.org/account/avatar/00/15/f1/55/8ac4f169.jpg","comment_is_top":false,"comment_ctime":1592120469,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5887087765","product_id":100020801,"comment_content":"如何避免长事务？<br>答: 我觉得首先是做为开发人员来说应该尽量有意思的减少长事务，长事务可以用异步解耦的方式实现。第二个就是DBA层面应该能分析到慢请求日志，针对因为长事务导致的满请求做优化","like_count":1},{"had_liked":false,"id":223699,"user_name":"丁丁历险记","can_delete":false,"product_type":"c1","uid":1661704,"ip_address":"","ucode":"A43829E454C067","user_header":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","comment_is_top":false,"comment_ctime":1591160300,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5886127596","product_id":100020801,"comment_content":"ru  没有隔离，啥都读<br>si  放弃并发，一个个来<br>rc  可以读到其它事物提交的数据<br>rr  度读了一条数据后，相当于拉了一分快照。 readview <br><br>rr 下，其它事物写的时候会等锁。<br>确保binlog  和结果一致。<br>rc  则会脏数据。<br>例如ta先删光数据，  tb插数据再提交，ta 再提交<br>binlog  执行ta  insert into  xxx<br>tb  delete from xxx<br>主从就不一致了。<br>所以mysql 默认rr<br><br>再就是注意readview  占空间问题，避免不必要长事物。合理的业务正交分解。<br>对begin 要写太多次，mysql 有语法糖commit work  and chain","like_count":1},{"had_liked":false,"id":212662,"user_name":"8.13.3.27.30","can_delete":false,"product_type":"c1","uid":1556358,"ip_address":"","ucode":"2DE3CE3E338BAB","user_header":"https://static001.geekbang.org/account/avatar/00/17/bf/86/c0cb35f0.jpg","comment_is_top":false,"comment_ctime":1588171652,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5883138948","product_id":100020801,"comment_content":"转钱的问题感觉是一个并发的问题，跟事务关系不大，就是你做了事务，我2个交易同一时刻请求过来，一样会出现2个交易读到的都是100块，不知道我的理解对不对，事务是为了保证加钱和减钱这2个操作要么都完成要么都不完成","like_count":1},{"had_liked":false,"id":193710,"user_name":"探索无止境","can_delete":false,"product_type":"c1","uid":1044178,"ip_address":"","ucode":"91D2A9907DFA79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/d2/7024431c.jpg","comment_is_top":false,"comment_ctime":1584952043,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5879919339","product_id":100020801,"comment_content":"“在 MySQL 5.5 及以前的版本，回滚日志是跟数据字典一起放在 ibdata 文件里的，即使长事务最终提交，回滚段被清理，文件也不会变小。我见过数据只有 20GB，而回滚段有 200GB 的库。最终只好为了清理回滚段，重建整个库。” 老师您好，这段描述中，清理了回滚段为什么数据文件的大小还是没有变化？而是需要重建整个库才可以？","like_count":1},{"had_liked":false,"id":185027,"user_name":"杜美洁","can_delete":false,"product_type":"c1","uid":1514953,"ip_address":"","ucode":"78354D0430C9DF","user_header":"https://static001.geekbang.org/account/avatar/00/17/1d/c9/c22f4e4b.jpg","comment_is_top":false,"comment_ctime":1583467660,"is_pvip":false,"replies":[{"id":"71508","content":"不是的，RC也有<br><br>其实读未提交也有，在读未提交模式下，两个事务更新同一行，也会触发行锁。<br><br>08篇有展开说明","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1583485589,"ip_address":"","comment_id":185027,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5878434956","product_id":100020801,"comment_content":"老师，行索是不是只有在可重复读隔离级别下才有","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486220,"discussion_content":"不是的，RC也有\n\n其实读未提交也有，在读未提交模式下，两个事务更新同一行，也会触发行锁。\n\n08篇有展开说明","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583485589,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182122,"user_name":"程序员班吉","can_delete":false,"product_type":"c1","uid":1478098,"ip_address":"","ucode":"BD48CF7649609A","user_header":"https://static001.geekbang.org/account/avatar/00/16/8d/d2/8a6be8d8.jpg","comment_is_top":false,"comment_ctime":1582712427,"is_pvip":false,"replies":[{"id":"70518","content":"多条","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1582721459,"ip_address":"","comment_id":182122,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5877679723","product_id":100020801,"comment_content":"老师，有个问题<br>对于在同一个事务里对同一个字段进行了多次修改，相应的回滚日志是记录多条，还是只会记录一条？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485226,"discussion_content":"多条","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582721459,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":176232,"user_name":"张汉桂-东莞","can_delete":false,"product_type":"c1","uid":1116277,"ip_address":"","ucode":"38657ABA59382A","user_header":"https://static001.geekbang.org/account/avatar/00/11/08/75/512b9f26.jpg","comment_is_top":false,"comment_ctime":1580996168,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5875963464","product_id":100020801,"comment_content":"通过控制事务粒度来解决长事务问题。","like_count":1},{"had_liked":false,"id":174114,"user_name":"陌","can_delete":false,"product_type":"c1","uid":1152678,"ip_address":"","ucode":"13FF1D4B3181F0","user_header":"https://static001.geekbang.org/account/avatar/00/11/96/a6/aac2a550.jpg","comment_is_top":false,"comment_ctime":1580002429,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5874969725","product_id":100020801,"comment_content":"隔离级别越低，事务请求的锁越少或者保持锁的时间就越短, 这是大多数应用框架所持有的观点(例如Django)。但对于MySQL而言，默认隔离级别为RR，事实上RC在性能上并不会比RR有多少性能的提升，RR也不会比RC多许多开销。甚至，在某些情况下，SERIALIZABLE的隔离级别会更优。所以，不应为了&quot;效率&quot;问题去降低隔离级别。","like_count":1},{"had_liked":false,"id":170318,"user_name":"Zhaoyang","can_delete":false,"product_type":"c1","uid":1037190,"ip_address":"","ucode":"131D83AC2566D2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d3/86/b5d72c87.jpg","comment_is_top":false,"comment_ctime":1578567270,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5873534566","product_id":100020801,"comment_content":"读未提交： 别人的事务，我能看见。<br>读提交：别人未提交的事务，我看不见。<br>可重复读：别人提交的事务，在我的事务，我看不见。<br>串行化：别人的事务与我不能同时进行","like_count":1},{"had_liked":false,"id":160019,"user_name":"韶年","can_delete":false,"product_type":"c1","uid":1269934,"ip_address":"","ucode":"EA4149F98FF39B","user_header":"https://static001.geekbang.org/account/avatar/00/13/60/ae/88d88232.jpg","comment_is_top":false,"comment_ctime":1575858106,"is_pvip":false,"replies":[{"id":"61109","content":"如果select的是一个innodb表，会的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1575884821,"ip_address":"","comment_id":160019,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5870825402","product_id":100020801,"comment_content":"如果不begin，那么select语句会开启一个事务吗？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477236,"discussion_content":"如果select的是一个innodb表，会的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575884821,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134870,"user_name":"RyuGou","can_delete":false,"product_type":"c1","uid":1200793,"ip_address":"","ucode":"8D424CB6005DD7","user_header":"https://static001.geekbang.org/account/avatar/00/12/52/99/4a7f2fc9.jpg","comment_is_top":false,"comment_ctime":1568944656,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5863911952","product_id":100020801,"comment_content":"回滚日志什么时候会被系统自动删除，没看懂","like_count":1},{"had_liked":false,"id":113075,"user_name":"賢","can_delete":false,"product_type":"c1","uid":1286884,"ip_address":"","ucode":"D837D27DFB4E2A","user_header":"https://static001.geekbang.org/account/avatar/00/13/a2/e4/47fd0f81.jpg","comment_is_top":false,"comment_ctime":1562893410,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5857860706","product_id":100020801,"comment_content":"老师请教一下读提交的隔离级别回滚的问题😊<br>假设当前是读提交的级别，表1的一行数据为1。如果A先开始事务，修改数据为2但未提交。这时B开始事务修改为3并提交了。然后A回滚了数据，根据read-view的日志，数据是被回滚到1吗？","like_count":1,"discussions":[{"author":{"id":1394997,"avatar":"https://static001.geekbang.org/account/avatar/00/15/49/35/4fc7bc20.jpg","nickname":"大鼻子先生","note":"","ucode":"4F9ED4A302B60C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":124734,"discussion_content":"实际上自己测下是最快的，不能两个事务同时update一条语句，因为行锁的原因","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1578449124,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":9564,"discussion_content":"应该是3. 因为读提交不是可重复读，read-view保存的就是上次sql执行的结果","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568189523,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110346,"user_name":"龙猫","can_delete":false,"product_type":"c1","uid":1112490,"ip_address":"","ucode":"FD726CC969EF9C","user_header":"https://static001.geekbang.org/account/avatar/00/10/f9/aa/3e80212e.jpg","comment_is_top":false,"comment_ctime":1562236922,"is_pvip":false,"replies":[{"id":"40102","content":"👍","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1562250616,"ip_address":"","comment_id":110346,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5857204218","product_id":100020801,"comment_content":"没想到今天我在一个高并发的秒杀服务中遇到了这个问题，在spring默认隔离级别读提交下，a线程修改库存但还没来的急提交，b线程再次查找库存发现库存没有变，最后导致超卖。解决办法是在事务开始和结束后对这个减库存都加锁，这样就能保证b事务读到的数据是最新的。也避免了对数据库加锁造成数据库的压力","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456830,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562250616,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1013683,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/77/b3/991f3f9b.jpg","nickname":"公号-技术夜未眠","note":"","ucode":"83825B57CBD952","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4470,"discussion_content":"是排他锁吗？这样效率不会高吧。可以考虑采用乐观锁（增加一个version的字段）+重试的方式，可以进一步提高并发量","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1565446676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":107485,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1561545078,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5856512374","product_id":100020801,"comment_content":"为了加深印象小结如下：<br><br>1：事务<br><br>一组数据库操作，具有ACID四个特性，简单解释如下。<br><br>A-原子性：强调事务内的一组操作不可分割<br><br>C-一致性：强调事务内的一组操作若成都成，若完都完<br><br>I-隔离性：强调事务间的关系，事务之间是透明的<br><br>D-持久性：强调事务完成后数据一定会落盘<br><br>事务的四个大特性，D-我觉得最好理解，事务完成数据落盘，系统断电宕机与否数据都不会丢。然后就是A-原子性也好理解些，不能再切分了，把一个事务作为一个整体来对待-其小无内。然后就是C-一致性啦！从网上看了一些资料，说什么的都有，而且重复的不少，老师真应该稍微解释一下啊!一致性，到底指什么的一致性呢？我的理解是事务内的一组操作的一致性，和原子性相似，表述为事务内的这组操作不能有执行的有未执行的，要么全执行，要么有没执行的就全部回滚。最后就是I-隔离性了，这个是老师重点讲的，也是最复杂的，不过隔离性的意思到是简单，强调的是事务间的关系，毕竟事务不可能就一个，多个事务操作共同的数据要保证他们之间互不影响才好。那就一个个来呗！一个操作完事，另一个再操作，不过这样操作数据的效率就低啦！咋弄?区别对待呗！划分出各种隔离等级呀！下面就是老师的讲解啦！完全隔离，就是串行化，效果最好，效率最低，有些场景无需如此。<br><br>2：经过上面的分析，再理解本文就松快多了，不过也有些没理解的，比如：<br><br>2-1：老师文中的视图到底是什么东西?什么结构的?这个是实现隔离级别的关键。<br><br>2-2：隔离级别越高性能越差，这个老师也是一带而过，一定和锁定的资源粒度相关吧?相信后面会提到<br><br>2-3：数据库多版本控制，这个也是后面详解吧?<br><br>","like_count":1},{"had_liked":false,"id":94418,"user_name":"牧野","can_delete":false,"product_type":"c1","uid":1372185,"ip_address":"","ucode":"8F3B90C4462DE0","user_header":"https://static001.geekbang.org/account/avatar/00/14/f0/19/9d754804.jpg","comment_is_top":false,"comment_ctime":1557805361,"is_pvip":false,"replies":[{"id":"34307","content":"如果没有显式的启动事务，一条单独insert语句构成一个事务的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1558260896,"ip_address":"","comment_id":94418,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5852772657","product_id":100020801,"comment_content":"一条单独insert语句构成一个事务吗？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450060,"discussion_content":"如果没有显式的启动事务，一条单独insert语句构成一个事务的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558260896,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1372185,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f0/19/9d754804.jpg","nickname":"牧野","note":"","ucode":"8F3B90C4462DE0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543059,"discussion_content":"自动提交事务模式下，一个单独的select应该不会开启对吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640941512,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":86569,"user_name":"hankchan","can_delete":false,"product_type":"c1","uid":1199206,"ip_address":"","ucode":"C6213D656587EF","user_header":"https://static001.geekbang.org/account/avatar/00/12/4c/66/be7b4805.jpg","comment_is_top":false,"comment_ctime":1555401481,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5850368777","product_id":100020801,"comment_content":"评个论记笔记：MyISAM不支持事务，不支持crash-safe。InnoDB都支持","like_count":1},{"had_liked":false,"id":76203,"user_name":"右耳朵猫咪","can_delete":false,"product_type":"c1","uid":1014984,"ip_address":"","ucode":"3AB186CC780FBB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/c8/8627f5c1.jpg","comment_is_top":false,"comment_ctime":1552548812,"is_pvip":true,"replies":[{"id":"28797","content":"不是，需要外部的备份系统","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1553339679,"ip_address":"","comment_id":76203,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5847516108","product_id":100020801,"comment_content":"老师好，备份是Mysql自动为我们做的吗？还是需要做什么操作？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443213,"discussion_content":"不是，需要外部的备份系统","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553339679,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61557,"user_name":"bobosecho","can_delete":false,"product_type":"c1","uid":1140798,"ip_address":"","ucode":"1F1A6DDE8870BF","user_header":"https://static001.geekbang.org/account/avatar/00/11/68/3e/47c889eb.jpg","comment_is_top":false,"comment_ctime":1547722388,"is_pvip":false,"replies":[{"id":"21869","content":"微服务拆出分布式问题。。这个应该找架构师聊聊😅","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547725380,"ip_address":"","comment_id":61557,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5842689684","product_id":100020801,"comment_content":"老师我现在遇到个难题，公司做微服务后，数据库按照业务拆分成不同的实例了，然后遇到个分布式事务的难题，这个不知道怎么处理这个","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436911,"discussion_content":"微服务拆出分布式问题。。这个应该找架构师聊聊😅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547725380,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1179312,"avatar":"https://static001.geekbang.org/account/avatar/00/11/fe/b0/260f41f0.jpg","nickname":"loris","note":"","ucode":"00842745CF4B31","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":40148,"discussion_content":"1. 可以采用最终一致性方案 2. 使用LCN框架  3. 接入阿里的分布式事务中间件","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572091830,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47602,"user_name":"meow","can_delete":false,"product_type":"c1","uid":1246785,"ip_address":"","ucode":"BB7FBD681B5EFC","user_header":"https://static001.geekbang.org/account/avatar/00/13/06/41/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1544163895,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5839131191","product_id":100020801,"comment_content":"1&gt;若参数autocommit=0，事务则在用户本次对数据进行操作时自动开启，在用户执行commit命令时提交，用户本次对数据库开始进行操作到用户执行commit命令之间的一系列操作为一个完整的事务周期。若不执行commit命令，系统则默认事务回滚。总而言之，当前情况下事务的状态是自动开启手动提交。<br><br>2&gt;若参数autocommit=1（系统默认值），事务的开启与提交又分为两种状态：<br><br>①手动开启手动提交：当用户执行start transaction命令时（事务初始化），一个事务开启，当用户执行commit命令时当前事务提交。从用户执行start transaction命令到用户执行commit命令之间的一系列操作为一个完整的事务周期。若不执行commit命令，系统则默认事务回滚。<br><br>②自动开启自动提交：如果用户在当前情况下（参数autocommit=1）未执行start transaction命令而对数据库进行了操作，系统则默认用户对数据库的每一个操作为一个孤立的事务，也就是说用户每进行一次操作系都会即时提交或者即时回滚。这种情况下用户的每一个操作都是一个完整的事务周期。","like_count":1},{"had_liked":false,"id":43658,"user_name":"代码会说话","can_delete":false,"product_type":"c1","uid":1304532,"ip_address":"","ucode":"3A4EC4204D0687","user_header":"https://static001.geekbang.org/account/avatar/00/13/e7/d4/721d1dc9.jpg","comment_is_top":false,"comment_ctime":1543278304,"is_pvip":false,"replies":[{"id":"15618","content":"我怎么这段说明的结论是建议autocommit=1 , 😓","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543288004,"ip_address":"","comment_id":43658,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5838245600","product_id":100020801,"comment_content":"最近同时找了本纸质的书来看，在关于 autocommit 一点上，我发现 《 MySQL 技术内幕：InnoDB 存储引擎》跟老师讲得不太一样。<br>内幕一书建议使用 set autocommit = 0:<br>&gt; 使用自动提交是初级 DBA 容易犯的错误，在编写应用程序时，最好事务的控制权限交给开发人员，即在程序端进行事务的开始和结束，同时开发人员必须了解自动提交可能带来的问题。<br><br>以前我写数据层代码时，也会设置 autocommit = 0，单纯的只是害怕不确定性，因为觉得自动的就是不太确定的。 不过当时的我并不知道长连接，或者长事务这些道理。在做 web 开发时，事务感觉是最让我头大的地方了。","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430449,"discussion_content":"我怎么这段说明的结论是建议autocommit=1 , 😓","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543288004,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2169324,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/ezzA1wneA5NibuRKjOERG0WNmdnPhBXaibXCd31rPUw3AzAqYnibHzfNVC1UeTbRKhuKWytxx0eCWtgpwwBwI6WNw/132","nickname":"jared.zhou","note":"","ucode":"B6C7CB6C30D1AC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336261,"discussion_content":"莫非你们有一个读的是盗版书哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608542228,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40511,"user_name":"lucky star","can_delete":false,"product_type":"c1","uid":1311928,"ip_address":"","ucode":"C61FC9CA1C8A60","user_header":"https://static001.geekbang.org/account/avatar/00/14/04/b8/3fd2f448.jpg","comment_is_top":false,"comment_ctime":1542628051,"is_pvip":false,"replies":[{"id":"14613","content":"回滚日志和数据的写入策略一样（WAL），但是不一定不写盘，比如checkpoint 推进过程就可能把undolog的内容从内存写到日志文件，所以不会因为undolog导致占用内存很大的情况","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542634965,"ip_address":"","comment_id":40511,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5837595347","product_id":100020801,"comment_content":"有个疑问：事务的回滚日志难道直接写到磁盘吗？我猜想应该是先存在内存然后在某一个时间写到磁盘，那么问题又来了？这个时间是什么时候呢？如果猜想正确那是不是意味着长事务还会导致短时间内内存占用较大？<br><br>还请大神指教","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429546,"discussion_content":"回滚日志和数据的写入策略一样（WAL），但是不一定不写盘，比如checkpoint 推进过程就可能把undolog的内容从内存写到日志文件，所以不会因为undolog导致占用内存很大的情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542634965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40430,"user_name":"晨思暮语","can_delete":false,"product_type":"c1","uid":1304974,"ip_address":"","ucode":"F21D2FDCDD6B43","user_header":"https://static001.geekbang.org/account/avatar/00/13/e9/8e/6dc15a91.jpg","comment_is_top":false,"comment_ctime":1542619144,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5837586440","product_id":100020801,"comment_content":"丁老师，能简单说一下，什么场景适合RR模式，什么场景适合RC模式呢！","like_count":1,"discussions":[{"author":{"id":1201615,"avatar":"https://static001.geekbang.org/account/avatar/00/12/55/cf/190aead3.jpg","nickname":"Bart","note":"","ucode":"C4988456C65680","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":203649,"discussion_content":"看业务需求","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584062866,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":358774,"user_name":"kk","can_delete":false,"product_type":"c1","uid":1182067,"ip_address":"广东","ucode":"BADB6FF2E659C1","user_header":"https://static001.geekbang.org/account/avatar/00/12/09/73/b85b3808.jpg","comment_is_top":false,"comment_ctime":1664722449,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1664722449","product_id":100020801,"comment_content":"产生视图的时候,对应的回滚段产生了吗","like_count":0},{"had_liked":false,"id":358773,"user_name":"kk","can_delete":false,"product_type":"c1","uid":1182067,"ip_address":"广东","ucode":"BADB6FF2E659C1","user_header":"https://static001.geekbang.org/account/avatar/00/12/09/73/b85b3808.jpg","comment_is_top":false,"comment_ctime":1664722431,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1664722431","product_id":100020801,"comment_content":"视图跟回滚段是怎么关联的","like_count":0},{"had_liked":false,"id":358746,"user_name":"隰有荷","can_delete":false,"product_type":"c1","uid":1357944,"ip_address":"广东","ucode":"2BE9A32AB28963","user_header":"https://static001.geekbang.org/account/avatar/00/14/b8/78/2828195b.jpg","comment_is_top":false,"comment_ctime":1664680380,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1664680380","product_id":100020801,"comment_content":"文中在说到串行化的时候提到：&quot;所以从 A 的角度看， V1、V2 值是 1，&quot;  我对这句话有一点不理解，既然事务B是在提交事务以后，事务A才查询的V2，事务B提交之后不会解锁吗，既然解锁了，那么事务A再去查询V2的时候，不应该是已经修改过的值2吗？为啥还是1啊？","like_count":0},{"had_liked":false,"id":356551,"user_name":"在路上","can_delete":false,"product_type":"c1","uid":1476245,"ip_address":"重庆","ucode":"2668A965FA79F2","user_header":"https://static001.geekbang.org/account/avatar/00/16/86/95/b9d960d9.jpg","comment_is_top":false,"comment_ctime":1662392630,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1662392630","product_id":100020801,"comment_content":"长事务的概念是关闭自动提交使用手动提交这段时间由于没能在合适的地方提交事务，导致事务更新操作长期保存在回滚日志中占用大量数据库资源","like_count":0},{"had_liked":false,"id":355235,"user_name":"吃水不用钱","can_delete":false,"product_type":"c1","uid":1797135,"ip_address":"广东","ucode":"8A5D5978F0D4E5","user_header":"https://static001.geekbang.org/account/avatar/00/1b/6c/0f/7d242cc2.jpg","comment_is_top":false,"comment_ctime":1661218974,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661218974","product_id":100020801,"comment_content":"避免出现长事务：<br>1,给团队成员科普，尽量避免使用长事务<br>2.建立监控机制，如果事务的执行时间过长，则发送告警，由业务方及时处理","like_count":0},{"had_liked":false,"id":353394,"user_name":"高级按摩师 👁 ^ 👁⃢*","can_delete":false,"product_type":"c1","uid":1435006,"ip_address":"广东","ucode":"31518306EF81B6","user_header":"https://static001.geekbang.org/account/avatar/00/15/e5/7e/5190f9b2.jpg","comment_is_top":false,"comment_ctime":1659420153,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1659420153","product_id":100020801,"comment_content":"隔离级别设置READ-COMMITTED这个还是不太明白，公司的隔离级别也是设置的这样的","like_count":0},{"had_liked":false,"id":351881,"user_name":"Geek_d5f06b","can_delete":false,"product_type":"c1","uid":1948495,"ip_address":"","ucode":"6DAAA73E552FEC","user_header":"","comment_is_top":false,"comment_ctime":1658277544,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1658277544","product_id":100020801,"comment_content":"可重复读确认是事物启动的时候就去创建视图吗？那时候应该都不知道需要创建那些表的视图吧？","like_count":0},{"had_liked":false,"id":351181,"user_name":"瑶","can_delete":false,"product_type":"c1","uid":1304349,"ip_address":"","ucode":"E837D2A2D76B42","user_header":"https://static001.geekbang.org/account/avatar/00/13/e7/1d/f5eb2c85.jpg","comment_is_top":false,"comment_ctime":1657595001,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657595001","product_id":100020801,"comment_content":"看了文章做笔记的时候发现，rc和rr的定义是不是一样啊，都是过程中看不到变化，结束时才能看到。","like_count":0},{"had_liked":false,"id":348588,"user_name":"77","can_delete":false,"product_type":"c1","uid":1113292,"ip_address":"","ucode":"4D497A36896766","user_header":"https://static001.geekbang.org/account/avatar/00/10/fc/cc/9f90b797.jpg","comment_is_top":false,"comment_ctime":1655217115,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1655217115","product_id":100020801,"comment_content":"丁老师 我有个问题 rr下一个事务读取的记录在事务提交之前被别的事务更新了，此时a事务在这些记录被别的事务更新之后去更新这些记录，可以成功么。不可以的话是为什么，mysql如何处理这种情况，望解惑。","like_count":0},{"had_liked":false,"id":348433,"user_name":"阿甘","can_delete":false,"product_type":"c1","uid":1057843,"ip_address":"","ucode":"BC93175B70E05D","user_header":"https://static001.geekbang.org/account/avatar/00/10/24/33/bcf37f50.jpg","comment_is_top":false,"comment_ctime":1655105517,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1655105517","product_id":100020801,"comment_content":"原来MySQL的MVCC是通过undo log实现的啊，我一直以为是保留多个版本。请教一下老师，这种情况下，索引是不是只有最新的一份，还能生效吗？","like_count":0},{"had_liked":false,"id":348143,"user_name":"小刘","can_delete":false,"product_type":"c1","uid":1625914,"ip_address":"","ucode":"8017FB710CCB09","user_header":"https://static001.geekbang.org/account/avatar/00/18/cf/3a/ba5b4375.jpg","comment_is_top":false,"comment_ctime":1654778179,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1654778179","product_id":100020801,"comment_content":"我想请问一下：<br>有事务A,B ，在t1时刻同时读取值a, 在t2时刻同时对a进行自增操作,在t3时刻一起提交。想知道在不同隔离级别下，t4时刻，事务C读取到的a值为多少","like_count":0},{"had_liked":false,"id":347808,"user_name":"争光 Alan","can_delete":false,"product_type":"c1","uid":1336328,"ip_address":"","ucode":"338534F909AF03","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/08/0287f41f.jpg","comment_is_top":false,"comment_ctime":1654475753,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1654475753","product_id":100020801,"comment_content":"原理老师讲的很好，想问下什么应用使用的时候具体是怎么操作？<br><br>比如余额问题，真的是改数据库事物级别？还是加乐观锁或悲观锁？","like_count":0},{"had_liked":false,"id":343115,"user_name":"03","can_delete":false,"product_type":"c1","uid":2150686,"ip_address":"","ucode":"43F73B66DF6B6F","user_header":"","comment_is_top":false,"comment_ctime":1650634401,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650634401","product_id":100020801,"comment_content":"事务B在执行把1改为2这条sql语句时，应该是占有排它锁，那么事务A应该不能查询这条记录吧，所以V1时刻应该被锁住吧","like_count":0},{"had_liked":false,"id":343102,"user_name":"cloud","can_delete":false,"product_type":"c1","uid":2724511,"ip_address":"","ucode":"E465F7413D6FC0","user_header":"https://static001.geekbang.org/account/avatar/00/29/92/9f/40d46f64.jpg","comment_is_top":false,"comment_ctime":1650627102,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1650627102","product_id":100020801,"comment_content":"老师，请问一下：<br>在可重复读的隔离级别，有个version = 5 的数据行，<br>现在有两个线程并发开启事务并更新，第一个线程把version改成6并成功提交了，但是第二个线程在<br>update table set version = 7 where version = 5 时失败了。<br>理论上他们是两个事务，为什么第二个能看到第一个更新结果呢？","like_count":0},{"had_liked":false,"id":341584,"user_name":"沐紫流光","can_delete":false,"product_type":"c1","uid":1950907,"ip_address":"","ucode":"ECD078ADAF0711","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er6REjFuP7zicRdA4sm4w8H046bgNpCQ6odSJLxDV3FicRaxDzQTk2fviaGnKFAGUcFQcOZ5WANqEZDQ/132","comment_is_top":false,"comment_ctime":1649725625,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1649725625","product_id":100020801,"comment_content":"可以结合07，08章一起看","like_count":0},{"had_liked":false,"id":341544,"user_name":"再见理想","can_delete":false,"product_type":"c1","uid":1245999,"ip_address":"","ucode":"FAC88B3F6F6DFD","user_header":"https://static001.geekbang.org/account/avatar/00/13/03/2f/0a5e0751.jpg","comment_is_top":false,"comment_ctime":1649685826,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1649685826","product_id":100020801,"comment_content":"数据库的ACID特性：原子性&#47;隔离性&#47;持久性&#47;一致性<br>数据库的4个隔离级别：读未提交&#47;读提交&#47;可重复读&#47;串行化，<br>同一条记录在系统中可以存在多个版本，就是数据库的多版本并发控制（MVCC）<br>读提交（rc）和 可重复读（rr）在实现上，数据库会为创建一个MVCC（多版本并发控制）视图，<br>rc的情况下，会在每条语句执行前，创建视图，而rr的情况会在事务启动时，创建视图。<br>隔离级别的配置参数：transaction-isolation<br>事务的undo log在系统没有比这个undo log更早的视图时，undolog才会被删除，所以尽量避免长事务。<br>尽量使用事务的自动提交 set autocommit = 1<br><br><br><br><br>","like_count":0},{"had_liked":false,"id":340903,"user_name":"let_me_go","can_delete":false,"product_type":"c1","uid":1510177,"ip_address":"","ucode":"A5936F5C5E3D65","user_header":"https://static001.geekbang.org/account/avatar/00/17/0b/21/f1aea35b.jpg","comment_is_top":false,"comment_ctime":1649224371,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1649224371","product_id":100020801,"comment_content":"脏读，幻读，不可重复读都是事务执行过程过可能因为隔离性产生的数据问题。读未提交，读已提交，这两个隔离级别主要考虑多个事务执行过程中彼此的影响。可重复读和串行化不仅考虑到了多个事务执行过程的隔离问题，还考虑到了单个事务执行过程中的问题，单个事务执行过程中数据是否一致。查看隔离级别：show variables like &#39;transaction_isolation&#39;<br>可重复读：通过回滚日志记录了数据的变化，事务启动时，会根据某个版本的数据得到一个一致性试图，只要事务没有提交，读到的数据(不加写锁)就是事务开启时看到的数据。<br>长事务的危害：长事务会导致回滚日志无法及时得到删除，也会长时间占有锁资源。","like_count":0},{"had_liked":false,"id":339434,"user_name":"风","can_delete":false,"product_type":"c1","uid":2666076,"ip_address":"","ucode":"A27169BABC8D8F","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLBYHhb6tvCjfu7TicXqGbUZgVtof4oulCUXiagC9A5qXZjzwEmtrzggU0bibgB1gEmrHBmAgE2xA2Fg/132","comment_is_top":false,"comment_ctime":1648101223,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1648101223","product_id":100020801,"comment_content":"问老师一个问题，RR隔离级别是不是解决幻读问题，我看网上各种说法，有的说解决了幻读有的说没有，给我整懵了，老师可以帮忙解答一下吗？","like_count":0},{"had_liked":false,"id":338474,"user_name":"cc","can_delete":false,"product_type":"c1","uid":2649425,"ip_address":"","ucode":"5A48D6D5CFA49D","user_header":"https://static001.geekbang.org/account/avatar/00/28/6d/51/092a0a99.jpg","comment_is_top":false,"comment_ctime":1647515057,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647515057","product_id":100020801,"comment_content":"喵喵喵","like_count":0},{"had_liked":false,"id":338331,"user_name":"Geek_35948d","can_delete":false,"product_type":"c1","uid":1729212,"ip_address":"","ucode":"63913EC0C28C5D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/rBxzJsicJNSsMwTUbmdXDTY3PkDXVCnUbQsxMKxOjzxqpke8Y5gHsfJkhaJxW9MTtaXQwEL1NZ3FMegoDyVFzPQ/132","comment_is_top":false,"comment_ctime":1647425338,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1647425338","product_id":100020801,"comment_content":"文中画图的review的部分，既然在视图A，B，C观测到的值是1，2，4。为什么在reviewA要观测到1，需要经历一系列的回滚。<br>只有修改后，才会生成记录日志吧。视图A,B,C观测到的值是不是该是2，3，4。","like_count":0},{"had_liked":false,"id":338167,"user_name":"Pray","can_delete":false,"product_type":"c1","uid":1749736,"ip_address":"","ucode":"B65D9E7BB84C30","user_header":"https://static001.geekbang.org/account/avatar/00/1a/b2/e8/7e318e7e.jpg","comment_is_top":false,"comment_ctime":1647333603,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647333603","product_id":100020801,"comment_content":"MvCC原理总结：每次写，历史行记录放在undolog中（行记录中会有隐式的事务id和指向上一次行记录的指针）；读时（RR为第一次，RC为每次）生成read-view(不同时刻启动的事务有不同的readview，如下图)，记录系统中的活跃事务id列表，通过可见性算法判断对当前事务可见的行记录并去undolog中查找。 ","like_count":0},{"had_liked":false,"id":337245,"user_name":"小李","can_delete":false,"product_type":"c1","uid":1903790,"ip_address":"","ucode":"30BD251EE1B1E2","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/iaQgtbE98VGIVIyribdo6dgLOnaNoe7ZdUuPr60ibsduibscrzQCTzdW2AfL9nxwe8YlSK75gOnK3YbAJKTaFPxibdg/132","comment_is_top":false,"comment_ctime":1646715922,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1646715922","product_id":100020801,"comment_content":"我在RR级别下同一个事务中依次执行1.select 得c=1<br>    2.update set c=2         3.select得c=2，按工程实现来说，第一个select的时候创建了视图，执行第二步后，第三步select得到的却是2，根据undo日志，可以理解为这里重新创建了view吗？","like_count":0},{"had_liked":false,"id":335920,"user_name":"SharpBB","can_delete":false,"product_type":"c1","uid":2014573,"ip_address":"","ucode":"D30C5B798B8E8C","user_header":"https://static001.geekbang.org/account/avatar/00/1e/bd/6d/7010f98e.jpg","comment_is_top":false,"comment_ctime":1645770063,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1645770063","product_id":100020801,"comment_content":"我的疑问是 一般什么时候用长事务呢  不是直接set autocommit=1就可以了吗 一直都这么用的","like_count":0},{"had_liked":false,"id":335668,"user_name":"伟","can_delete":false,"product_type":"c1","uid":2369399,"ip_address":"","ucode":"72C5C8D7F2A88F","user_header":"https://static001.geekbang.org/account/avatar/00/24/27/77/8493aa4a.jpg","comment_is_top":false,"comment_ctime":1645620607,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645620607","product_id":100020801,"comment_content":"感觉事物隔离性没有给出明确的结论啊，而且，弱弱问一句不是通过锁来实现的吗？","like_count":0},{"had_liked":false,"id":333465,"user_name":"刘新旺","can_delete":false,"product_type":"c1","uid":2393292,"ip_address":"","ucode":"69F38D4DBF2879","user_header":"https://static001.geekbang.org/account/avatar/00/24/84/cc/801194ac.jpg","comment_is_top":false,"comment_ctime":1644374753,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1644374753","product_id":100020801,"comment_content":"避免出现长事务<br>开发：<br>使用set autocommit=1<br>配置超时时间<br>数据库：<br>配置事务超时时间<br>增加长事务监控告警<br>增加相应开发规范","like_count":0},{"had_liked":false,"id":331788,"user_name":"Hunter_Dark","can_delete":false,"product_type":"c1","uid":1342279,"ip_address":"","ucode":"3A07CCBC250B69","user_header":"https://static001.geekbang.org/account/avatar/00/14/7b/47/96dad3ff.jpg","comment_is_top":false,"comment_ctime":1642758888,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1642758888","product_id":100020801,"comment_content":"select 查询语句也会开启事务？那快照读和当前读到底是啥概念呢？","like_count":0},{"had_liked":false,"id":330447,"user_name":"Geek_3e127a","can_delete":false,"product_type":"c1","uid":2875965,"ip_address":"","ucode":"53A0EC887AD01A","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/s4dusuWr2EbMAUklHUSLmE6aibck0w6prqGE9oqLvhRTJdjXFh8icJ9u8c1j2BJhYcdcLiaSjO0kTIM2KwibypK1Jg/132","comment_is_top":false,"comment_ctime":1641979741,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1641979741","product_id":100020801,"comment_content":"老师，想问rc级别下mvcc是会出现不可重复读吗？我实验把mysql的隔离级别调整为rc，模拟两个事务是会出现不可重复读的。","like_count":0},{"had_liked":false,"id":329550,"user_name":"不再是入门水平python的小宇","can_delete":false,"product_type":"c1","uid":2094450,"ip_address":"","ucode":"D49429660F2DC8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/S5RFBwro1nY4aRN2WkE08G9HicMTz1WzFm1PuHgRMYLbtMA4SZI7A127muWUVAV2CSpCMmHB64g9Zy8a1kVmRcg/132","comment_is_top":false,"comment_ctime":1641396318,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1641396318","product_id":100020801,"comment_content":"避免出现这种问题：set autocommit=1然后显式启动事务语句，如果出现长事务问题的话，查找出来并优化：select * from information_schema.innodb_trx where TIME_TO_SEC(timediff(now(),trx_started))&gt;60","like_count":0},{"had_liked":false,"id":329509,"user_name":"zhoubo_eric","can_delete":false,"product_type":"c1","uid":1584208,"ip_address":"","ucode":"34725AA3A9D59C","user_header":"https://static001.geekbang.org/account/avatar/00/18/2c/50/64365ef7.jpg","comment_is_top":false,"comment_ctime":1641379921,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1641379921","product_id":100020801,"comment_content":"为什么要有隔离机制 为了提高并发而对一致性的破坏","like_count":0},{"had_liked":false,"id":329111,"user_name":"二号姬","can_delete":false,"product_type":"c1","uid":2857803,"ip_address":"","ucode":"D11E31AF6A3511","user_header":"https://static001.geekbang.org/account/avatar/00/2b/9b/4b/05d3f11e.jpg","comment_is_top":false,"comment_ctime":1641126579,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1641126579","product_id":100020801,"comment_content":"我是做数据分析的，也就是说我写SQL提的数据，是我执行SQL语句的时候的数据，如果执行花了1h，我得到的数据其实也是我执行开始的时候的数据，执行过程中发生的数据变化并不会出现么","like_count":0},{"had_liked":false,"id":329072,"user_name":"吴文超","can_delete":false,"product_type":"c1","uid":2447595,"ip_address":"","ucode":"55EDC0EB95D493","user_header":"https://static001.geekbang.org/account/avatar/00/25/58/eb/fa1dd9ea.jpg","comment_is_top":false,"comment_ctime":1641095572,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1641095572","product_id":100020801,"comment_content":"设置事务耗时上限，结束耗时长的事务","like_count":0},{"had_liked":false,"id":328486,"user_name":"杨丁","can_delete":false,"product_type":"c1","uid":1008597,"ip_address":"","ucode":"D469B0BCA86587","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/d5/a300899a.jpg","comment_is_top":false,"comment_ctime":1640750704,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640750704","product_id":100020801,"comment_content":"内容总结：<br>1. 事务的特性：原子性、一致性、隔离性、持久性<br>2. 多事务同时执行可能出现的问题：脏读，不可重复读，幻读<br>3. 事务隔离级别：读未提示，读提交，可重复读，串行化<br>4. 各隔离级别详解：<br>读未提交：事务未提交，它所做的写操作可被其它事务看到<br>读提交：事务提交后，它所做的写操作才可被其它事务看到<br>可重复读：一个事务执行过程中看到的数据是一致的，无法看到其它后续已提交事务所做的改动。<br>串行化：锁定读写，出现冲突时，后者需等待前者执行完<br>5. 事务隔离的实现：基于undo log实现的MVCC<br>6. 回滚日志删除：purge cleaner 线程会删除无用的undo log，系统中没有比这个undo log更早的readview时<br>7. 为什么不建议使用长事务：长事务意味着系统要维护很老的事务版本，且相关的undo log无法被清理，占用内存；其次，长事务会占用锁，会降低系统的并发能力<br><br>课后答案：<br>业务负责人的角度，通过框架层和code review来降低长事务的出现概率；确保autocommit始终为0、回滚日志单独存放。<br>运维负责人的角度，通过监控InnoDB_tx表，发现长事务报警。","like_count":0},{"had_liked":false,"id":327518,"user_name":"一个无趣的俗人","can_delete":false,"product_type":"c1","uid":1691669,"ip_address":"","ucode":"25435088B10CA2","user_header":"https://static001.geekbang.org/account/avatar/00/19/d0/15/5851180d.jpg","comment_is_top":false,"comment_ctime":1640159195,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640159195","product_id":100020801,"comment_content":"三刷中，总结一下，自问自答<br><br>1、MySQL 事务有什么用？MySQL 原生的 MyISAM 引擎支持事务吗？<br><br>2、为什么事务会有隔离级别这个概念？隔离级别与性能有什么关系？<br><br>3、你当前开发的业务在使用哪个隔离级别？如何查看？什么时候用读提交（RC），什么时候用可重复读（RR）？<br><br>4、MySQL 的事务隔离是如何实现的？<br><br>5、MySQL 的长事务会有什么问题？如何避免？<br><br>","like_count":0},{"had_liked":false,"id":327044,"user_name":"小兵","can_delete":false,"product_type":"c1","uid":1150486,"ip_address":"","ucode":"682674AE91FE68","user_header":"https://static001.geekbang.org/account/avatar/00/11/8e/16/7d97a36f.jpg","comment_is_top":false,"comment_ctime":1639884036,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639884036","product_id":100020801,"comment_content":"长事务，一个是前面说的链式提交；另一个是在db异步检测","like_count":0},{"had_liked":false,"id":326622,"user_name":"诗悦网络","can_delete":false,"product_type":"c1","uid":1332699,"ip_address":"","ucode":"F85E49DFD5CB8E","user_header":"","comment_is_top":false,"comment_ctime":1639599275,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639599275","product_id":100020801,"comment_content":"老师, 我想问一下回滚段段的落盘时机是什么时候呀","like_count":0},{"had_liked":false,"id":326184,"user_name":"李松林","can_delete":false,"product_type":"c1","uid":1519256,"ip_address":"","ucode":"5E74D5701F353E","user_header":"https://static001.geekbang.org/account/avatar/00/17/2e/98/8bdaad97.jpg","comment_is_top":false,"comment_ctime":1639407188,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639407188","product_id":100020801,"comment_content":"commit work and chain 语法 是一种思想？ 看了好几遍也没看懂呢，大家都是解释了这个语法是什么意思。。。","like_count":0},{"had_liked":false,"id":321050,"user_name":"zyl","can_delete":false,"product_type":"c1","uid":1497036,"ip_address":"","ucode":"AF81C8BC1650AA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ZVmxwJ6nvwpTibsDUntexFy76LnlEqtnVnnia5bycOyk5kIGuwYn6QYhDIicsLtBIb81EJbibcMSdKh3UShA1q2sicQ/132","comment_is_top":false,"comment_ctime":1636633619,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636633619","product_id":100020801,"comment_content":"老师好，学习事务的时候，了解到事务分成5个类型：扁平事务、带保存点扁平事务、链式事务、嵌套事务、分布式事务；<br><br>网上对链式事务描述较少。链式的定义指”事务的提交操作与下一个事务的开始操作具有原子性“。<br> 链式事务的语法是否就是本章提到的”commit work and chain“语法<br><br>","like_count":0},{"had_liked":false,"id":320209,"user_name":"Geek.N","can_delete":false,"product_type":"c1","uid":2744271,"ip_address":"","ucode":"E4893C3C512FB2","user_header":"https://static001.geekbang.org/account/avatar/00/29/df/cf/6e0dbfe5.jpg","comment_is_top":false,"comment_ctime":1636126250,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636126250","product_id":100020801,"comment_content":"为什么回滚日志被清理了，而文件大小依旧不变呢","like_count":0},{"had_liked":false,"id":320155,"user_name":"Geek_13133f","can_delete":false,"product_type":"c1","uid":2835291,"ip_address":"","ucode":"9B4BFC0C654311","user_header":"","comment_is_top":false,"comment_ctime":1636102268,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636102268","product_id":100020801,"comment_content":"大佬帮忙解答一下<br>@Transaction<br>public void method(){<br>  1 select a=1<br>  2 update a=2<br>  3 select a=2<br>}<br><br>如果mysql的隔离级别是rr 为什么 1查询的结果和3查询的结果不一致？","like_count":0},{"had_liked":false,"id":318822,"user_name":"bkpp","can_delete":false,"product_type":"c1","uid":2672436,"ip_address":"","ucode":"CE4E0762979754","user_header":"https://static001.geekbang.org/account/avatar/00/28/c7/34/f7fdf17f.jpg","comment_is_top":false,"comment_ctime":1635436965,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635436965","product_id":100020801,"comment_content":"可重复读隔离级别下 视图在一开始就创建好，事务过程中一直使用这个视图，那么如果在这个过程中本事务修改了数据，本事务可以看到这个修改吗","like_count":0},{"had_liked":false,"id":317109,"user_name":"Cassie","can_delete":false,"product_type":"c1","uid":2212810,"ip_address":"","ucode":"1C68BDBCC95FA5","user_header":"https://static001.geekbang.org/account/avatar/00/21/c3/ca/93f7eca9.jpg","comment_is_top":false,"comment_ctime":1634690463,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634690463","product_id":100020801,"comment_content":"需要用undolog回滚是什么场景呢?和redolog,binlog有什么联系呢？","like_count":0},{"had_liked":false,"id":315856,"user_name":"木木","can_delete":false,"product_type":"c1","uid":1763992,"ip_address":"","ucode":"B182555D11946D","user_header":"https://static001.geekbang.org/account/avatar/00/1a/ea/98/65a13c45.jpg","comment_is_top":false,"comment_ctime":1634022800,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634022800","product_id":100020801,"comment_content":"事务隔离性<br>1：读未提交（RU）read uncommitted.事务内总是能获取到最新的数据.<br>2:读提交(RC) read committed。在每次sql执行时创建最新的视图。事务能获取到其他事务已经提交的最新数据。<br>3：可重复读（RR） repeatable read。在事务开启时创建视图。","like_count":0},{"had_liked":false,"id":314786,"user_name":"beslet","can_delete":false,"product_type":"c1","uid":1334377,"ip_address":"","ucode":"6A95C896558C11","user_header":"https://static001.geekbang.org/account/avatar/00/14/5c/69/1a4fa7d9.jpg","comment_is_top":false,"comment_ctime":1633431268,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633431268","product_id":100020801,"comment_content":"mvcc的快照读需要找undo log的历史版本，undo log又是放在文件中，如果快照读查询数据量很大，是否会影响查询性能？","like_count":0},{"had_liked":false,"id":314274,"user_name":"Stephen","can_delete":false,"product_type":"c1","uid":1165201,"ip_address":"","ucode":"0D49223E6CB7B1","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ7mAt63VrbLZPHpeZxSc4IlBYswQSnaAB5wGePaGFDehgiaNfIxI1SJ5yIHIlmVk8hsw0RaoaSCPA/132","comment_is_top":false,"comment_ctime":1632928098,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632928098","product_id":100020801,"comment_content":"把数据库的autocommit设为1<br>定期查询是否有长事务事务：删除掉无用的事务","like_count":0},{"had_liked":false,"id":314215,"user_name":"王加武","can_delete":false,"product_type":"c1","uid":1665471,"ip_address":"","ucode":"DDCFE578C6C428","user_header":"https://static001.geekbang.org/account/avatar/00/19/69/bf/50a824a4.jpg","comment_is_top":false,"comment_ctime":1632903144,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632903144","product_id":100020801,"comment_content":"事务的四大特性<br>(1)、原子性：A<br>(2)、一致性:  C<br>(3)、隔离性:  I<br>(4)、持久性 : D<br><br>事务隔离级别<br>(1)、 读未提交：未提交的事务数据可以被读取到<br>(2)、读已提交：只能读取到已经commit的数据<br>(3)、可重复读:  包含读已提交，事务开始到结束这段过程中数据保持一致，读取到的都是一样的<br>(4)、串行化：读的时候不允许修改，修改时不允许读取，都会上锁，当发生读写锁冲突时，后来的事务让先来的先执行，MySQL默认策略是写入操作优先于读取操作。<br><br>undolog(回滚日志)<br>undo的意思就是不做，即回滚，当开启一个事务并且未提交时，这个事务的所有操作都会记录在undolog里面，比如执行的是insert，那么对应undolog里面会有一个delete,如果执行的是update,那么undolog里面也会有一个update,只是这个update更新的是改变之前的值.....这也就是为什么我们执行rollback时数据可以回滚到修改前的状态。<br>那么既然是回滚，也就是回退到操作执行之前的版本，记录的就是和执行操作相反的操作。<br><br>innodb会为每条记录生成三列，分别是trasaction_id、roll_pointer、row_id(row_id在没有设置主键的情况下才会生成)，roll_pointer会指向当前记录的下个版本的地址，那么这个版本的顺序就会存在undolog中，在MySQL默认可重复读的隔离级别下，利用undolog保存版本信息，这就实现了多版本并发控制，即MVCC。<br><br>长事务带来的问题<br>1、由于需要生成大量的undolog,所以占用大量的存储空间，其事务回滚时间长<br>2、锁定数据过多，容易造成大量的死锁和锁超时<br><br>undolog什么时候会删除<br>系统自动判断还有没有事务需要undolog,如果没有的话就会自动删除undolog","like_count":0},{"had_liked":false,"id":313532,"user_name":"qiushye","can_delete":false,"product_type":"c1","uid":1322164,"ip_address":"","ucode":"D005A152F8BEDC","user_header":"","comment_is_top":false,"comment_ctime":1632477056,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632477056","product_id":100020801,"comment_content":"“什么时候不需要了？当系统里么有比这个回滚日志更早的read-view的时候 “ ，这句话是不是等价于如果这个回滚日志出现之前的事务都提交了，则该回滚日志可删除。","like_count":0},{"had_liked":false,"id":313509,"user_name":"特立独行的猪","can_delete":false,"product_type":"c1","uid":1465344,"ip_address":"","ucode":"1440F96375740A","user_header":"https://static001.geekbang.org/account/avatar/00/16/5c/00/5d11e68d.jpg","comment_is_top":false,"comment_ctime":1632471075,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632471075","product_id":100020801,"comment_content":"一个事务读到另外一个事务还没有提交的数据，称之为脏读，此情况仅会发生在： 读未提交的的隔离级别.<br>不可重复读是指一个事务先后读取同一条记录，但两次读取的数据不同，称之为不可重复读，此情况仅会发生在：读未提交、读提交的隔离级别.<br>没有闹明白什么是幻读，幻读如何可以复现？？<br>脏读和不可重复读的区别： 脏读是看到了其他事务未提交的数据，而不可重复读是看到了其他事务已经提交的数据","like_count":0},{"had_liked":false,"id":313435,"user_name":"Seven","can_delete":false,"product_type":"c1","uid":2403766,"ip_address":"","ucode":"37D99CF8535CDE","user_header":"https://static001.geekbang.org/account/avatar/00/24/ad/b6/a8caa2c7.jpg","comment_is_top":false,"comment_ctime":1632442254,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1632442254","product_id":100020801,"comment_content":"思考题：<br>1. 预先 设置 set autocommit=1, 指定显式语句的方式来启动事务。<br>2. 规定 一个事务可执行的 CRUD 个数上限<br>3. 定期检查 是否有超过预设执行时间上线的事务","like_count":0},{"had_liked":false,"id":312352,"user_name":"康斯坦丁","can_delete":false,"product_type":"c1","uid":1368096,"ip_address":"","ucode":"C130E800E8D5C9","user_header":"https://static001.geekbang.org/account/avatar/00/14/e0/20/003190c1.jpg","comment_is_top":false,"comment_ctime":1631766255,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631766255","product_id":100020801,"comment_content":"长事务, 应该包括时间长、变更的sql多等特性。 如何避免, 首先看哪些行为会导致长事务, 避免这些行为即可:<br>1.  事务未关闭,  导致长事务 <br>2. 事务内部存在慢sql<br>3. 事务内部存在慢调用<br>4. 事务中存在死锁<br>5. 等等诸如会导致事务执行变长的行为 ","like_count":0},{"had_liked":false,"id":312257,"user_name":"Geek_1bd28b","can_delete":false,"product_type":"c1","uid":2745531,"ip_address":"","ucode":"4ED1AFF0969C39","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLHY3p6V3gd1OHQGbdLCrPbUmiaHIQBhbQeAMorAEibIe8WXYbIl2rOicNribEicpJ4s0JKE5Bf77MibgyQ/132","comment_is_top":false,"comment_ctime":1631706847,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631706847","product_id":100020801,"comment_content":"版本控制只有不适用于串行化 是吧","like_count":0},{"had_liked":false,"id":312098,"user_name":"够Man!","can_delete":false,"product_type":"c1","uid":2760013,"ip_address":"","ucode":"492FAEAD045403","user_header":"https://static001.geekbang.org/account/avatar/00/2a/1d/4d/184e0d1b.jpg","comment_is_top":false,"comment_ctime":1631624722,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631624722","product_id":100020801,"comment_content":"对于 read-view A，要得到 1，就必须将当前值依次执行图中所有的回滚操作得到。这句话不是很理解。read-view A不是已经为1了么，为啥还有进行回滚？","like_count":0},{"had_liked":false,"id":311445,"user_name":"allen","can_delete":false,"product_type":"c1","uid":1157861,"ip_address":"","ucode":"00BFF6D6FB6974","user_header":"https://static001.geekbang.org/account/avatar/00/11/aa/e5/60a405a6.jpg","comment_is_top":false,"comment_ctime":1631239792,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631239792","product_id":100020801,"comment_content":"mysql  RR级别下 用间隙锁来解决幻读， 那RR级别下为什么有人说会产生幻读?  可以举个例子吗","like_count":0},{"had_liked":false,"id":309327,"user_name":"~zZZachary","can_delete":false,"product_type":"c1","uid":1104482,"ip_address":"","ucode":"F90FCBFD4BA6F3","user_header":"https://static001.geekbang.org/account/avatar/00/10/da/62/1edd1060.jpg","comment_is_top":false,"comment_ctime":1630049405,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1630049405","product_id":100020801,"comment_content":"可重复读，可以读到其他事务已经提交的，insert，或者delete数据么","like_count":0,"discussions":[{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393193,"discussion_content":"不能，可重复读在事务开启的时候会生成一个视图，后续在该事务中读到的都是和事务开始时一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631284542,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":307986,"user_name":"GeekWL","can_delete":false,"product_type":"c1","uid":1716943,"ip_address":"","ucode":"7A957139D4AF73","user_header":"https://static001.geekbang.org/account/avatar/00/1a/32/cf/4158e3be.jpg","comment_is_top":false,"comment_ctime":1629348925,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629348925","product_id":100020801,"comment_content":"MySQL如何保证一致性<br>数据库通过原子性（A）、隔离性（I）、持久性（D）来保证一致性（C）。其中一致性是目的，原子性、隔离性、持久性是手段。因此数据库必须实现AID三大特性才有可能实现一致性。<br><br>MySQL如何保证原子性<br>利用InnoDB的undo log<br>undo log（回滚日志）记录需要回滚的日志信息，是实现原子性的关键，当事务回滚时能够撤销所有已经成功执行的sql语句<br><br>例如<br><br>delete一条数据的时候，就会记录这条数据的曾经的信息，回滚的时候，insert这条旧数据<br>update一条数据的时候，就会记录之前的旧值，回滚的时候，根据旧值执行update操作<br>insert一条数据的时候，就会这条记录的主键，回滚的时候，根据主键执行delete操作<br>undo log记录了这些回滚需要的信息，当事务执行失败或调用了rollback，导致事务需要回滚，便可以利用undo log中的信息将数据回滚到修改之前的样子。<br><br>MySQL如何保证持久性<br>利用Innodb的redo log<br><br>Mysql修改数据的大概流程是先把磁盘上的数据加载到内存中，在内存中对数据进行修改，再刷回磁盘上。如果此时突然宕机，内存中的数据就会丢失。<br>如何解决该问题<br><br>最直观的想法，事务提交前直接把数据写入磁盘<br><br>这么做有什么问题<br><br>浪费资源，只修改一个页面里的一个字节，就要将整个页面刷入磁盘（一个页面16kb，每次改动都需要将16kb的内容刷入磁盘）<br>速度慢，每个事务里可能涉及到多个数据页的修改，而这些数据可能是不相邻的，属于随机操作IO<br>于是，决定采用redo log解决上面的问题。当做数据修改的时候，不仅在内存中操作，还会在redo log中记录这次操作。当事务提交的时候，会将redo log日志进行刷盘(redo log一部分在内存中，一部分在磁盘上)。当数据库宕机重启的时候，会将redo log中的内容恢复到数据库中，再根据undo log和binlog内容决定回滚数据还是提交数据。<br><br>采用redo log的优点<br><br>redo log进行刷盘的效率要远高于数据页刷盘，具体表现如下<br><br>redo log体积小，只记录了哪一页修改的内容，因此体积小，刷盘快<br>redo log是一直往末尾进行追加，属于顺序IO。效率显然比随机IO来的快<br>MySQL 如何保证隔离性<br>利用锁和MVCC机制<br><br>MVCC(Multi Version Concurrency Control)即多版本并发控制，一个行记录数据有多个版本对快照数据，这些快照数据在undo log中。<br>如果一个事务读取的行正在做DELELE或者UPDATE操作，读取操作不会等行上的锁释放，而是读取该行的快照版本。<br><br>由于MVCC机制在可重复读(Repeateable Read)和读已提交(Read Commited)的MVCC表现形式不同在后续文章中将进行详细描述。<br><br>在事务隔离级别为读已提交(Read Commited)时，一个事务能够读到另一个事务已经提交的数据，是不满足隔离性的。但是当事务隔离级别为可重复读(Repeateable Read)中，是满足隔离性的。<br><br><br>","like_count":0},{"had_liked":false,"id":307823,"user_name":"Link","can_delete":false,"product_type":"c1","uid":2290555,"ip_address":"","ucode":"C892B73A227B2A","user_header":"https://static001.geekbang.org/account/avatar/00/22/f3/7b/a966dca7.jpg","comment_is_top":false,"comment_ctime":1629272579,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629272579","product_id":100020801,"comment_content":"read uncommitted没什么实际场景用途，所以Oracle直接没有这种级别，而postgre RU 和RC是一样的。这是不是MySQL的一种历史包袱？","like_count":0},{"had_liked":false,"id":305388,"user_name":"zhen","can_delete":false,"product_type":"c1","uid":1282939,"ip_address":"","ucode":"F341E2DE582EDF","user_header":"https://static001.geekbang.org/account/avatar/00/13/93/7b/7bda9f8f.jpg","comment_is_top":false,"comment_ctime":1627957107,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1627957107","product_id":100020801,"comment_content":"老师，问一下如果在可重复读的隔离级别，在事务A中，查询得到值V2和提交事务A之间插入一步操作，将1改成3，那最后查询得到值V3会是多少","like_count":0,"discussions":[{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393195,"discussion_content":"是3， 在事务中的修改语句会触发当前读并更新一致性视图， 后面读到的都是最新的值（但是其它事务修改的值它读不到）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631284915,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":305363,"user_name":"二凡","can_delete":false,"product_type":"c1","uid":2134167,"ip_address":"","ucode":"97CE9CBE511CBA","user_header":"https://static001.geekbang.org/account/avatar/00/20/90/97/d4bbb6ed.jpg","comment_is_top":false,"comment_ctime":1627920175,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627920175","product_id":100020801,"comment_content":"理解:<br>mvcc。书上说的是通过伪列记录一个更新时间和删除时间，老师这里讲的是通过事务回滚日志来实现，两个角度需要自己下来再总结下<br>末尾问题思考:<br>1、事后处理办法，利用文中老师给了长事务的查询语句给数据库加长事务监控。以此来不断优化业务<br>2、事前处理办法，显示使用事务抽出公共方法让业务用公共写法，链接串加上xxxx&amp;autocommit=1","like_count":0},{"had_liked":false,"id":304336,"user_name":"Geek_ebfcd5","can_delete":false,"product_type":"c1","uid":2715651,"ip_address":"","ucode":"F012FB748EC95D","user_header":"","comment_is_top":false,"comment_ctime":1627356720,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627356720","product_id":100020801,"comment_content":"对这个长事物还不是很理解，如果set autocommit=0，然后一直增,改,删各种操作，如果隔离级别是读已提交或者更高的，所有操作对事务外都不可见，其他事务获取对应编辑过的数据都会等待锁，那这种长事务设计出来的应用场景是什么，感觉没啥用，为什么还要让改成autocommit=0。","like_count":0},{"had_liked":false,"id":303722,"user_name":"wsy.","can_delete":false,"product_type":"c1","uid":2623805,"ip_address":"","ucode":"D34078775EC363","user_header":"https://static001.geekbang.org/account/avatar/00/28/09/3d/5d9c15aa.jpg","comment_is_top":false,"comment_ctime":1626944894,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626944894","product_id":100020801,"comment_content":"MVCC能细讲吗 ","like_count":0},{"had_liked":false,"id":303282,"user_name":"我不会敲代码","can_delete":false,"product_type":"c1","uid":1564618,"ip_address":"","ucode":"066AB3B7D9F7CE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eofl7wbZfn2ONSDZ6EqLW6xwESKavMBTbHqYvqf6iadzhAOVlWJ788TiaoFRj7IYQC7UTIENkALXIqA/132","comment_is_top":false,"comment_ctime":1626699529,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626699529","product_id":100020801,"comment_content":"对于MVCC，它的实现原理是基于undo log和read view，undo log记录事务提交之前的数据，read view保证在读取最新的数据之后，还能读取到可见范围的undo log，再进行回滚，使得读取到的数据是符合该隔离级别下所需要的读取的数据。","like_count":0},{"had_liked":false,"id":301141,"user_name":"types","can_delete":false,"product_type":"c1","uid":2449777,"ip_address":"","ucode":"8B50927EF1804F","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLDUJyeq54fiaXAgF62tNeocO3lHsKT4mygEcNoZLnibg6ONKicMgCgUHSfgW8hrMUXlwpNSzR8MHZwg/132","comment_is_top":false,"comment_ctime":1625549823,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625549823","product_id":100020801,"comment_content":"有几个疑问：<br>1. undo log 为什么要保存在表空间（持久化）<br>2. undo log 表空间如何收缩","like_count":0},{"had_liked":false,"id":300944,"user_name":"Amon Tin","can_delete":false,"product_type":"c1","uid":2618193,"ip_address":"","ucode":"25391BEEB6A719","user_header":"https://static001.geekbang.org/account/avatar/00/27/f3/51/c8eb2d0c.jpg","comment_is_top":false,"comment_ctime":1625460532,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1625460532","product_id":100020801,"comment_content":"可重复读隔离级别的实现和read-view的关系，找了很多资料描述都各有问题，最后看到这篇结合源码讲的，立刻就明白了，可以作为这一讲的补充材料：https:&#47;&#47;blog.csdn.net&#47;Waves___&#47;article&#47;details&#47;105295060#1.2%E3%80%81Read%20View%20%E7%BB%93%E6%9E%84","like_count":0},{"had_liked":false,"id":299994,"user_name":"prader26","can_delete":false,"product_type":"c1","uid":1433707,"ip_address":"","ucode":"5EFFFC374ADECE","user_header":"https://static001.geekbang.org/account/avatar/00/15/e0/6b/f61d7466.jpg","comment_is_top":false,"comment_ctime":1624950311,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1624950311","product_id":100020801,"comment_content":"1 事务就是一组数据库操作，要不全部都成功，要不全部都失败。<br>2 事务包含ACID (Atomicity Consistency Isolation Durability)。<br>3 数据库上有多个事务同时执行的时候，就有可能造成 脏读（dity Read）不可重复读（no-repeatable read）幻读（phantom read）,因此就有了事务的隔离级别。<br>4  sql 的标准隔离级别有：<br>  4.1 读未提交（read uncommit）: 一个事务还没提交，它做出的改变就能被别的事务看到。<br>  4.2 读提交（read commit）: 一个事务提交后，它做出的变更才能被别 的事务看到。<br>  4.3 可重复读（repeatable read）: 一个事务在执行中看到的数据，总是和这个事务启动的时候，看到的数据是一致的。<br>      当然在可重复读的隔离级别下，事务执行过程中数据的改变对其他事务时不可见的。<br>  4.4 串行化（serializable）: 对于同一行记录，写会加写锁，读会加读锁。别的事物要访问这条记录，只能等当前事务提交之后才能访问 这条记录。<br><br>mysql   展示 当前变量的事务   show variables like &#39;transaction_isolation&#39;; \t<br><br>5 事务的实现原理<br>  mysql 在更新每条记录的时候，都会同时创建一条回滚操作（read-views）。记录上的最新值可以通过read-views回滚到之前的值。<br><br>6 你可以在 information_schema 库的 innodb_trx 这个表中查询长事务，比如下面这个语句，用于查找持续时间超过 60s 的事务。<br>select * from information_schema.innodb_trx where TIME_TO_SEC(timediff(now(),trx_started))&gt;60","like_count":0},{"had_liked":false,"id":299617,"user_name":"Zhqqqq","can_delete":false,"product_type":"c1","uid":2411403,"ip_address":"","ucode":"CD8DE79149C0B2","user_header":"https://static001.geekbang.org/account/avatar/00/24/cb/8b/fa482708.jpg","comment_is_top":false,"comment_ctime":1624763986,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1624763986","product_id":100020801,"comment_content":"MySQL默认的隔离级别是RR,什么时候我们该选择可能性能更好的RC？","like_count":0},{"had_liked":false,"id":297139,"user_name":"邱宏瞻","can_delete":false,"product_type":"c1","uid":1263565,"ip_address":"","ucode":"F587EFA68C4643","user_header":"https://static001.geekbang.org/account/avatar/00/13/47/cd/7dced082.jpg","comment_is_top":false,"comment_ctime":1623324496,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623324496","product_id":100020801,"comment_content":"老师您好，我有一个疑问，在可重复读的隔离级别下，视图a创建好之后，会记录当时的值。假如是一个长事务的话，会记录其他更新操作的回滚日志，如果事物a又去进行读取操作的话，是不是要从当前存储的最新值，然后通过回滚日志，一点一点的往回找，知道找到事物a,然后获取值。猜想这也就是长事务要存储大量回滚日子的原因。不确定我的猜想是否正确，麻烦老师给支持一下...😁","like_count":0},{"had_liked":false,"id":296998,"user_name":"王恩博","can_delete":false,"product_type":"c1","uid":1565769,"ip_address":"","ucode":"0B386D08AB554C","user_header":"https://static001.geekbang.org/account/avatar/00/17/e4/49/5cad48ed.jpg","comment_is_top":false,"comment_ctime":1623253885,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1623253885","product_id":100020801,"comment_content":"老师您好，假设事务A处于可重复读级别下，我理解是对当前数据版本打一个标记，然后数据不断更新不断记录undo log，那么为什么当其他事务对数据多次修改后，事务A再去读这个值的时候不是直接读取这个标记，而是要从当前值一条一条回滚回去呢？这个“标记”具体是通过什么实现的呢","like_count":0},{"had_liked":false,"id":294890,"user_name":"Harry","can_delete":false,"product_type":"c1","uid":1225917,"ip_address":"","ucode":"A4B661F0DAEBC2","user_header":"https://static001.geekbang.org/account/avatar/00/12/b4/bd/784a8a82.jpg","comment_is_top":false,"comment_ctime":1622124139,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622124139","product_id":100020801,"comment_content":"读未提交是指，一个事务还没提交时，它做的变更就能被别的事务看到。<br>读提交是指，一个事务提交之后，它做的变更才会被其他事务看到。<br><br>可重复读是指，一个事务执行过程中看到的数据，总是跟这个事务在启动时看到的数据是一致的。当然在可重复读隔离级别下，未提交变更对其他事务也是不可见的。<br>串行化，顾名思义是对于同一行记录，“写”会加“写锁”，“读”会加“读锁”。当出现读写锁冲突的时候，后访问的事务必须等前一个事务执行完成，才能继续执行。<br><br>建议把上面两行改成以下（同步主谓）<br><br>读未提交zhi","like_count":0},{"had_liked":false,"id":294138,"user_name":"建强","can_delete":false,"product_type":"c1","uid":1397126,"ip_address":"","ucode":"62B03D0E0C64EC","user_header":"https://static001.geekbang.org/account/avatar/00/15/51/86/b5fd8dd8.jpg","comment_is_top":false,"comment_ctime":1621782364,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621782364","product_id":100020801,"comment_content":"仔细分析业务逻辑，采用分治法，把业务处理较复杂的长事物，划分成几个短事物，划分的原则：对数据一致性有严格要求的操作划分在同一事物中，比如财务中的记总帐和记明细帐，业务上比较独立的操作或数据一致性没有严格要求的操作分散到不同的事物中，比如，记帐和报表统计可以划分成两个不同的事物，报表统计可以在记帐事物提交后开始。","like_count":0},{"had_liked":false,"id":292995,"user_name":"三年","can_delete":false,"product_type":"c1","uid":1610695,"ip_address":"","ucode":"75550514680EEC","user_header":"https://static001.geekbang.org/account/avatar/00/18/93/c7/7e5ab344.jpg","comment_is_top":false,"comment_ctime":1621148626,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621148626","product_id":100020801,"comment_content":"请问在可重复读的隔离级别下，在一个事务怎么能读到另一个事务已提交的记录？","like_count":0},{"had_liked":false,"id":292960,"user_name":"🎃","can_delete":false,"product_type":"c1","uid":1402110,"ip_address":"","ucode":"BD83ABCA2495BE","user_header":"https://static001.geekbang.org/account/avatar/00/15/64/fe/486b67bd.jpg","comment_is_top":false,"comment_ctime":1621098440,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621098440","product_id":100020801,"comment_content":"不是说一组sql如果不写start transaction会自动变成每一个sql是一个事务吗","like_count":0},{"had_liked":false,"id":291795,"user_name":"高星","can_delete":false,"product_type":"c1","uid":1394096,"ip_address":"","ucode":"AF6FE4E04F44EF","user_header":"https://static001.geekbang.org/account/avatar/00/15/45/b0/ea3d7796.jpg","comment_is_top":false,"comment_ctime":1620487340,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620487340","product_id":100020801,"comment_content":"老师，文中的例子，可重复读以及串行化两种隔离级别下v1,v2,v3的值看起来是一样的。只是前者是V1V2都在在A事务内，所以值一致，而后者是A事务没有提交前B事务被锁定。所以V1V2相等。我的问题是在串行化下，当A事务提交后怎么会保证先提交事务B，然后才执行查询得到v3呢？为什么不可能是事务A提交马上得到v3还是1，然后再提交事务B，值变为2呢？数据库小白，问题可能比较幼稚，敬请谅解","like_count":0},{"had_liked":false,"id":291127,"user_name":"夏现宾","can_delete":false,"product_type":"c1","uid":1123084,"ip_address":"","ucode":"D9097686E004FC","user_header":"https://static001.geekbang.org/account/avatar/00/11/23/0c/2b24e2c8.jpg","comment_is_top":false,"comment_ctime":1620039470,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620039470","product_id":100020801,"comment_content":"innodb在可重复读这个事务隔离级别下，可以看到当前事务提交的数据么，原理是啥？","like_count":0},{"had_liked":false,"id":290917,"user_name":"whiplash","can_delete":false,"product_type":"c1","uid":1177869,"ip_address":"","ucode":"885324412FE9D2","user_header":"https://static001.geekbang.org/account/avatar/00/11/f9/0d/8569f89a.jpg","comment_is_top":false,"comment_ctime":1619859049,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619859049","product_id":100020801,"comment_content":"针对老师原文的”在可重复读隔离级别下，这个视图是在事务启动时创建的“，<br>用MySQL 8 做了一个测试，验证到可重复读隔离级别下，视图创建是在事务启动后执行第一个select时创建的，具体测试如下：<br>初始数据x=1;<br>t1时间：a，b，c事务开启；<br>t2时间：b执行select x 得到 x=1；<br>t3时间：a执行set x=2 <br>t4时间：a提交事务<br>t5时间：b执行select x 得到 x=1；<br>t6时间：c执行select x 得到 x=2；<br><br>从数据可以发现，事务c读取的值并非是c开启事务时的值为1，而是事务a commit之后2，<br>而事务b读取的值始终都和第一次b事务select得到的值1相同。<br>也就是说可重复读隔离级别下，视图是在事务开始后第一个select执行时创建的","like_count":0},{"had_liked":false,"id":290447,"user_name":"NotFoundMoneyException:¥0","can_delete":false,"product_type":"c1","uid":2596556,"ip_address":"","ucode":"D454002955D09C","user_header":"https://static001.geekbang.org/account/avatar/00/27/9e/cc/1d57f923.jpg","comment_is_top":false,"comment_ctime":1619571219,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619571219","product_id":100020801,"comment_content":"多个事务对同一条数据进行更新，数据值从a-&gt;b-c变化,A事务看到的readview是a，B事务看到的readview是b。B事务先执行完，a事务执行的时候失败了，不是会把B事务的执行结果给回滚了？还是说两个事务不会同时执行的？","like_count":0},{"had_liked":false,"id":290333,"user_name":"杨敬伟","can_delete":false,"product_type":"c1","uid":2277442,"ip_address":"","ucode":"1E59CABF972F39","user_header":"https://static001.geekbang.org/account/avatar/00/22/c0/42/b99d145a.jpg","comment_is_top":false,"comment_ctime":1619506941,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619506941","product_id":100020801,"comment_content":"可重复读的时候，如果这个时候有一个未提交的事务修改了数据能读出来吗？或者说可重复读的视图是读的已提交的数据还是未提交的数据","like_count":0},{"had_liked":false,"id":289884,"user_name":"WZ","can_delete":false,"product_type":"c1","uid":1310099,"ip_address":"","ucode":"43B5BB6924A33F","user_header":"https://static001.geekbang.org/account/avatar/00/13/fd/93/9a3a3e83.jpg","comment_is_top":false,"comment_ctime":1619251789,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619251789","product_id":100020801,"comment_content":"老师，我有三个问题： <br>1. 回滚日志与redo log有什么区别？<br>2. 对于事务视图和回滚日志，我是这样理解的：每个数据的修改操作，都会对应一条回滚日志，而每条回滚日志都会记录多个事务视图（事务视图是回滚日志的子集？）。<br>3. 对于 &quot;对于 read-view A，要得到 1，就必须将当前值依次执行图中所有的回滚操作得到。 &quot;这句话，回滚是真的回滚吗（数据库的值还原）？还是只针对当前事务可见的回滚？而且我感觉，这种回滚多次的情况，应该是事务A先执行，A未完成时，期间事务B和事务C先后完成，这种情况下对事务A才需要回滚吧？","like_count":0},{"had_liked":false,"id":289602,"user_name":"justin","can_delete":false,"product_type":"c1","uid":1272315,"ip_address":"","ucode":"09AE502D6A28D9","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/nSvVtStiaQzslFM7YRnlhPyTgSHGoXvOqlSQS8rMEmfnFCtasNxRiaVfrRcMlkuOSq1iaReQD0CiaGHMVibsVMNkAxQ/132","comment_is_top":false,"comment_ctime":1619097474,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619097474","product_id":100020801,"comment_content":"事务隔离的实现没有讲透，有点表面层了","like_count":0},{"had_liked":false,"id":289513,"user_name":"小猪丶快跑","can_delete":false,"product_type":"c1","uid":1740274,"ip_address":"","ucode":"5AE98737F8A975","user_header":"https://static001.geekbang.org/account/avatar/00/1a/8d/f2/3b122904.jpg","comment_is_top":false,"comment_ctime":1619058755,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619058755","product_id":100020801,"comment_content":"在可重复读的隔离级别下，启动事务时创建的视图里，存的是什么数据？为什么后续在读取值的时候还需要拿最新的值，执行回滚段的语句，才能得到事务启动时候对应版本的数据？不能直接从视图中获取吗？","like_count":0},{"had_liked":false,"id":289249,"user_name":"Violet","can_delete":false,"product_type":"c1","uid":2564241,"ip_address":"","ucode":"0A5358A06362DA","user_header":"https://static001.geekbang.org/account/avatar/00/27/20/91/61162bdc.jpg","comment_is_top":false,"comment_ctime":1618932800,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618932800","product_id":100020801,"comment_content":"我有个问题，文中的这种视图是指数据库中的view吗？view是一个虚拟的表，用来指代某部分sql的查询结果，所以可重复读中的视图是啥啊？","like_count":0},{"had_liked":false,"id":289149,"user_name":"边翔宇","can_delete":false,"product_type":"c1","uid":2566276,"ip_address":"","ucode":"C664EF6D2CCB98","user_header":"https://static001.geekbang.org/account/avatar/00/27/28/84/6f25bf94.jpg","comment_is_top":false,"comment_ctime":1618891822,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618891822","product_id":100020801,"comment_content":"RC 的视图似乎没有存在的意义，RU每次直接返回数据最新值，RC每次读数据时依据最新值创建视图，然后从创建的视图中读取值。这样看来，RU和RC读到的值是没有区别的。除非，RC只能依据其他事务提交的修改后的数据来创建视图。而RU可以读到其他事务未提交时对数据的改动。","like_count":0},{"had_liked":false,"id":289080,"user_name":"乔","can_delete":false,"product_type":"c1","uid":1622655,"ip_address":"","ucode":"1286F8742B4A01","user_header":"https://static001.geekbang.org/account/avatar/00/18/c2/7f/7b22f12b.jpg","comment_is_top":false,"comment_ctime":1618844723,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618844723","product_id":100020801,"comment_content":"1、多个事务同时执行时，可能出现脏读，不可重复读，幻读等问题，通过设置隔离级别可以解决。<br>2、隔离级别越高，开销越大，越能保证隔离性，从低到高为：read uncommitted &lt; read committed &lt; repeatable read &lt; 串行<br>不管autocommit 是1还是0 ，START TRANSACTION 后，只有当commit数据才会生效，ROLLBACK后就会回滚；<br>3、当autocommit 为 0 时，不管有没有START TRANSACTION。只有当commit数据才会生效，ROLLBACK后就会回滚；正常都要求autocommit=1","like_count":0},{"had_liked":false,"id":288457,"user_name":"听秋","can_delete":false,"product_type":"c1","uid":2564684,"ip_address":"","ucode":"03CCD3B14980FA","user_header":"https://static001.geekbang.org/account/avatar/00/27/22/4c/d413494f.jpg","comment_is_top":false,"comment_ctime":1618476533,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618476533","product_id":100020801,"comment_content":"老师，对于这句话“对于 read-view A，要得到 1，就必须将当前值依次执行图中所有的回滚操作得到。”我有疑问，RR级别的事务中，read-view不是在事务开启时的第一个select请求就会生成吗，这个时候的read-view得到的不就是1吗？这句话让我有点懵，还麻烦老师解惑。","like_count":0},{"had_liked":false,"id":288298,"user_name":"粥魚兒","can_delete":false,"product_type":"c1","uid":2206356,"ip_address":"","ucode":"31DAD6CCA2FE1C","user_header":"https://static001.geekbang.org/account/avatar/00/21/aa/94/5f0396ec.jpg","comment_is_top":false,"comment_ctime":1618399302,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618399302","product_id":100020801,"comment_content":"看完文章和评论区后产生了一个疑问：既然在“可重复读”隔离级别下，是在事务启动后执行了第一条select语句后就创建了视图，之后的操作都以视图为准，那么为什么还会出现幻读现象呢？<br>我的解答：在视图中有两种读取数据的方式，一种是“快照读”，即读取视图中的数据，但读到的可能是历史数据；一种是“当前读”，即读取当前最新的数据。当执行select操作时，InnoDB默认执行快照读；对于修改数据的操作，采用当前读。<br>如有误望指正！","like_count":0},{"had_liked":false,"id":287128,"user_name":"会飞的蹦蹦","can_delete":false,"product_type":"c1","uid":1307168,"ip_address":"","ucode":"4A5B311F971DBE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKtwfeiaW2Dwn1PQROLZAIMwCJnf95MVYicHVVzZDLYHoRLvkGr1KkgZZXdSrZaRuCiclZWELtHpmXxg/132","comment_is_top":false,"comment_ctime":1617785777,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617785777","product_id":100020801,"comment_content":"看到很多文章在讲乐观锁和悲观锁的时候，都说要把autocommit设置成0 才可以使用悲观锁，但是我看如果autocommit=1的时候 如果显示的用begin开启事务的时候，用select...for update应该也可以实现悲观锁吧，有没有大佬给解下祸。不知道是我理解错了，还是网上的文章写错了~","like_count":0},{"had_liked":false,"id":286606,"user_name":"never","can_delete":false,"product_type":"c1","uid":1184650,"ip_address":"","ucode":"74CF7DDB21400A","user_header":"https://static001.geekbang.org/account/avatar/00/12/13/8a/1877bbf1.jpg","comment_is_top":false,"comment_ctime":1617420930,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617420930","product_id":100020801,"comment_content":"1. 确认是否使用了set auto_commit=0的情况；<br>2. 确认是否使用了只读事务；<br>3. 业务逻辑上尽量避免长事务场景的出现，如果不可避免拆分多个串行事务，可使用commit work and chain；<br>4. 监控information_schema.innodb_trx表，发现有长事务时优化业务逻辑；<br>","like_count":0},{"had_liked":false,"id":284607,"user_name":"周文","can_delete":false,"product_type":"c1","uid":2350439,"ip_address":"","ucode":"D4B1188829C33A","user_header":"https://static001.geekbang.org/account/avatar/00/23/dd/67/b8dc3fdc.jpg","comment_is_top":false,"comment_ctime":1616385774,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616385774","product_id":100020801,"comment_content":"但是我还是不知道事务隔离的实现到底是怎样的，难道是通过回滚日志实现？","like_count":0},{"had_liked":false,"id":283336,"user_name":"笨鸟的GPS","can_delete":false,"product_type":"c1","uid":2489987,"ip_address":"","ucode":"62B321A5424FD9","user_header":"https://static001.geekbang.org/account/avatar/00/25/fe/83/b2e833ff.jpg","comment_is_top":false,"comment_ctime":1615714269,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615714269","product_id":100020801,"comment_content":"记录一下隔离级别:<br>1. 读未提交: 两个事务并行，尚未提交的更改可以直接被读取<br>2. 读提交: 事务B的更改操作只有在提交之后才能被事务A看到，保证一段时间的隔离<br>3. 可重复读: 事务A在启动之后到提交所查询到的数据保持一致<br>4. 串行读: 事务执行操作加锁，如果并行会等另一个事物提交释放之后再进行<br><br>【思考题】<br>1. 长事务的预防: 对于事务持续时长的监控预警<br>2. 无法避免的时候，对存储空间的要求较高","like_count":0},{"had_liked":false,"id":282995,"user_name":"出卖灵魂的教练Kerry","can_delete":false,"product_type":"c1","uid":1807943,"ip_address":"","ucode":"8C64517DA556FE","user_header":"https://static001.geekbang.org/account/avatar/00/1b/96/47/93838ff7.jpg","comment_is_top":false,"comment_ctime":1615513466,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1615513466","product_id":100020801,"comment_content":"老师你好，看评论，有个快照读是什么意思呢？如何解决幻读的呢？","like_count":0},{"had_liked":false,"id":281869,"user_name":"pcz","can_delete":false,"product_type":"c1","uid":2367637,"ip_address":"","ucode":"D528F5CFF4A5C9","user_header":"https://static001.geekbang.org/account/avatar/00/24/20/95/89bd2c38.jpg","comment_is_top":false,"comment_ctime":1614929937,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614929937","product_id":100020801,"comment_content":"关于事务隔离的实现的那个例子：<br>在可重复读的情况下，事务A不提交，事务B怎么读到2，然后修改为3的？事务A提交了，那事务B就可以读到2了，如果事务A都commit了，那视图A也就关了，怎么回滚？求解答","like_count":0},{"had_liked":false,"id":281158,"user_name":"tyy","can_delete":false,"product_type":"c1","uid":1302149,"ip_address":"","ucode":"C3B436E6562744","user_header":"https://static001.geekbang.org/account/avatar/00/13/de/85/da98e390.jpg","comment_is_top":false,"comment_ctime":1614602235,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614602235","product_id":100020801,"comment_content":"在“可重复读”隔离级别下，这个视图是在事务启动时创建的 这句话是不是有问题，在事物启动时 并不知道要操作哪些表啊","like_count":0},{"had_liked":false,"id":277738,"user_name":"成电帅才","can_delete":false,"product_type":"c1","uid":2139604,"ip_address":"","ucode":"DDE757138F41D2","user_header":"","comment_is_top":false,"comment_ctime":1612533856,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612533856","product_id":100020801,"comment_content":"数据库事务特性好像和并发编程原子性，一致性，可视性相关","like_count":0},{"had_liked":false,"id":276765,"user_name":"马楚豪","can_delete":false,"product_type":"c1","uid":2431885,"ip_address":"","ucode":"EEE2A7066937FE","user_header":"","comment_is_top":false,"comment_ctime":1612102997,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612102997","product_id":100020801,"comment_content":"我现在想的很浅，以作为业务管理考虑的话<br>1、培训人员尽量避免长事物，讲明原因<br>2、使用微服务架构，将数据库的操作与其他操作尽可能分离，避免事务中耦合了其他的长时间操作<br>3、使用AOP，把事物的发起提交回滚等逻辑自己掌握，做一定的限制，同时避免业务人员误用<br>4、设计数据库表格时根据业务需要做一定的冗余，参照您上节说的redo log做法，避免表的结构有过多的关系，对多个事物的并行造成影响","like_count":0},{"had_liked":false,"id":276361,"user_name":"Geek_19657e","can_delete":false,"product_type":"c1","uid":2428131,"ip_address":"","ucode":"19B0146A1B4732","user_header":"","comment_is_top":false,"comment_ctime":1611898898,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611898898","product_id":100020801,"comment_content":"1、事务四大特征：ACID，原子性、一致性、隔离性、持久性。<br>2、事务的隔离级别：读未提交、读已提交、可重复读、串行化。<br>3、事务隔离实现：更新记录的时候会写入undo log回滚日志，一条记录存在多个版本，MVCC，多版本并发控制。<br>4、避免长事务。","like_count":0},{"had_liked":false,"id":276348,"user_name":"Gabriel","can_delete":false,"product_type":"c1","uid":1437358,"ip_address":"","ucode":"714772A93E93DC","user_header":"https://static001.geekbang.org/account/avatar/00/15/ee/ae/855b7e6e.jpg","comment_is_top":false,"comment_ctime":1611891601,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611891601","product_id":100020801,"comment_content":"其实，在看第一遍的时候，觉得有很多东西需要记忆，如果事物的特性（一致性，原子性，隔离性，持久性），事物的隔离级别（RR.RC,RU,S）等。其实想想一个数据库，每次链接并不是一个单进程模型，需要同事处理千千万万个请求，如果不设置这些规则，那么整个数据库就乱套了。然后同样的一条记录，肯能不止只有你一个在做读写操作。其实要理解根本上的出现的原因。","like_count":0},{"had_liked":false,"id":275418,"user_name":"Long","can_delete":false,"product_type":"c1","uid":1318970,"ip_address":"","ucode":"2417242560360A","user_header":"https://static001.geekbang.org/account/avatar/00/14/20/3a/90db6a24.jpg","comment_is_top":false,"comment_ctime":1611533213,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611533213","product_id":100020801,"comment_content":"二刷，第一天，每天3章节。<br><br>今天温故而知新的知识点：RC隔离级别，实际上读取的数据是SQL开始执行的时候的视图。<br><br>如果有一个大的insert 语句A：insert table1 select * from table2. (table2有 100W行)<br>启动执行A后，立马执行update table2，按照主键排序，更新第90W行的一行数据字段值从0修改为1.<br><br>然后等A结束执行后，发现table1的第90W行的数据还是0.<br><br>我以前以为是sql遍历的时候是read committed，这次逐字逐句的复习以后，发现是sql开始执行的时候的视图。 后面测试验证了，果然是sql开始执行的时候，并不是sql遍历的过程中。<br><br>学到了。","like_count":0},{"had_liked":false,"id":274689,"user_name":"allen","can_delete":false,"product_type":"c1","uid":2419031,"ip_address":"","ucode":"687F2A4079A5C6","user_header":"https://static001.geekbang.org/account/avatar/00/24/e9/57/b43c971b.jpg","comment_is_top":false,"comment_ctime":1611126426,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611126426","product_id":100020801,"comment_content":"如果A不启动事务，在V1读到的是什么值？","like_count":0},{"had_liked":false,"id":273998,"user_name":"子豪sirius","can_delete":false,"product_type":"c1","uid":1117023,"ip_address":"","ucode":"E8D08D2D33E785","user_header":"https://static001.geekbang.org/account/avatar/00/11/0b/5f/2cc4060c.jpg","comment_is_top":false,"comment_ctime":1610784024,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1610784024","product_id":100020801,"comment_content":"在可重复读的隔离级别下，加入某个数据的值为1，A和B事务同时启动，B事务修改为2，然后提交；A事务在随后处理出现回滚，是不是这个值就变为1了，那就相当于把B事务的处理也回滚掉？","like_count":0},{"had_liked":false,"id":271849,"user_name":"zjm1314","can_delete":false,"product_type":"c1","uid":2351720,"ip_address":"","ucode":"63B0EAB7045054","user_header":"https://static001.geekbang.org/account/avatar/00/23/e2/68/ce547a12.jpg","comment_is_top":false,"comment_ctime":1609840465,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609840465","product_id":100020801,"comment_content":"老师，想问下<br>1，事务串行化，与事务设置为读已提交，但是用select for update有什么区别？<br>2，一个upate，insert，delete是不是事务，当成事务去理解可以么？","like_count":0},{"had_liked":false,"id":270147,"user_name":"一米阳光","can_delete":false,"product_type":"c1","uid":1640840,"ip_address":"","ucode":"8501237F1D8473","user_header":"https://static001.geekbang.org/account/avatar/00/19/09/88/3b6e531c.jpg","comment_is_top":false,"comment_ctime":1608953352,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608953352","product_id":100020801,"comment_content":"请问redo log和bin log执行的是两阶段提交，那么undo log是在什么时候写入的呢？三者的提交顺序是怎么样的？","like_count":0},{"had_liked":false,"id":269731,"user_name":"Wait break","can_delete":false,"product_type":"c1","uid":2085462,"ip_address":"","ucode":"D10E8371BF51AA","user_header":"https://static001.geekbang.org/account/avatar/00/1f/d2/56/db131dd2.jpg","comment_is_top":false,"comment_ctime":1608774040,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608774040","product_id":100020801,"comment_content":"你好，我有个疑问，<br><br>在“读提交”隔离级别下，这个视图是在每个 SQL 语句开始执行的时候创建的<br><br>这句，可重复读，事务开启，创建视图，全程使用这个视图，我可以理解，但是读提交这个视图建来是干嘛的，不是别人提交了也能看到吗，这个视图用来干嘛的？","like_count":0},{"had_liked":false,"id":269413,"user_name":"eg366","can_delete":false,"product_type":"c1","uid":1161338,"ip_address":"","ucode":"13903296514BFA","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/7a/16947d01.jpg","comment_is_top":false,"comment_ctime":1608636862,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608636862","product_id":100020801,"comment_content":"请问事务隔离级别是数据库的属性？还是某个session的属性？","like_count":0},{"had_liked":false,"id":268146,"user_name":"木木夕Ace","can_delete":false,"product_type":"c1","uid":1169354,"ip_address":"","ucode":"FB9442A836454A","user_header":"https://static001.geekbang.org/account/avatar/00/11/d7/ca/7b8bd13c.jpg","comment_is_top":false,"comment_ctime":1608084281,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608084281","product_id":100020801,"comment_content":"如果A事务在B事务之后启动，B事务提交的数据A看不到吗","like_count":0},{"had_liked":false,"id":268078,"user_name":"faceless","can_delete":false,"product_type":"c1","uid":1281645,"ip_address":"","ucode":"84958D6499CDA1","user_header":"https://static001.geekbang.org/account/avatar/00/13/8e/6d/8958dbec.jpg","comment_is_top":false,"comment_ctime":1608044615,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608044615","product_id":100020801,"comment_content":"老师，刷脏页的过程中会触发页分裂等过程吗？如果脏页中的数据修改到了索引字段的话","like_count":0},{"had_liked":false,"id":267735,"user_name":"Geek_40c668","can_delete":false,"product_type":"c1","uid":1685451,"ip_address":"","ucode":"4F7B6A3D4F4DD1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/WnbsIzp30vkf8OVicicMHv0Cepxt17aSxdUVIaiaEMullXPE79ywaETSaRl6WeyePiaqqFYoxmK0IXbaUKLpmibD4ng/132","comment_is_top":false,"comment_ctime":1607909164,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607909164","product_id":100020801,"comment_content":"总结：<br>1.本节主要讲事务。<br>2.事务的隔离级别：<br>    隔离级别越高，并发越低。<br>    a. 读未提交。当前事务开启后，可以读到其他事务，只是写入redo log和bin log，但是没有提交的数据。<br>     问题：脏读。读取到没有提交的事务。<br>    b. 读已提交。当前事务开启后，可以读取其他事物，已经提交的数据。<br>    问题：不可重复读。同一个事务看见的数据不一致，可能会带来风险。<br>    c. 可重复读。事务开启后，看到的数据不再变化（针对update）。<br>    问题：幻读：同一个事务中看见的数据不一致（新行，针对insert）。<br>    d.串行化。读写冲突时才会阻塞后开始的事务。<br>     问题：无问题。<br>3.事务的实现：<br>    回滚段：事务未提交前，都会保留回滚日志（将新值回滚回去旧值的记录）。<br>    回滚的实现：在当前值依次执行回滚段到当前事务的回滚段。<br>    回滚段的删除：没有更早的事务存在。<br>    mvcc（多版本并发控制）：同一条记录在数据库中存在多个版本。<br>4.长事务的危害：<br>    a.只要事务没有提交，那么该事务所在回滚段之后的回滚段及时提交也无法删除。会占用大量空间。<br>    b.长事务即使后续提交了事务，删除了回滚段文件大小也没有变。<br>          推测原因：会回滚段和其他数据一致往前写，只能覆盖写。因为回滚段提交之后，有其他已经提交的事务，不能覆盖写，所以文件大小不变。<br>    c.长事务占用所资源，可能会事务堆积，拖垮数据库。<br>    d.长事务意味着长连接，容易占用过多内存。<br>5.长事务的措施：<br>    a.默认set autocommit=1自动提交。<br>6.事务隔离级别的操作：<br>    查看：show variables like &#39;transaction_isolation&#39;   默认是rr可重复读<br>    设置：set global transaction_isolation =&#39;read-committed&#39;<br><br>ps：mvcc 回滚段讲的确实模糊了些","like_count":0},{"had_liked":false,"id":267571,"user_name":"David.cui","can_delete":false,"product_type":"c1","uid":1302228,"ip_address":"","ucode":"AB46F310403612","user_header":"https://static001.geekbang.org/account/avatar/00/13/de/d4/b83c4185.jpg","comment_is_top":false,"comment_ctime":1607831466,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607831466","product_id":100020801,"comment_content":"老师，我想请教一下在mysql的INNODB引擎中的select中会启用事务吗？<br>我理解select 是不需要回滚的，不应该启动事务才对，也就是select不需要commit或rollback才对<br>不知道理解的是否正确","like_count":0},{"had_liked":false,"id":266294,"user_name":"张宇迪","can_delete":false,"product_type":"c1","uid":2349972,"ip_address":"","ucode":"A13903B84CE5C6","user_header":"https://static001.geekbang.org/account/avatar/00/23/db/94/b8a2c768.jpg","comment_is_top":false,"comment_ctime":1607273312,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607273312","product_id":100020801,"comment_content":"“长事务意味着系统里面会存在很老的事务视图。由于这些事务随时可能访问数据库里面的任何数据，所以这个事务提交之前，数据库里面它可能用到的回滚记录都必须保留”，这句话可以理解成某个事务执行过程中有对数据更改，此时这个事务有一份自己的undo log来记录回滚操作，如果要回到这个事务中的某个时刻，就用到这分undo log 回滚，疑点1、每个事务有自己的undo log？2、事务互相之间undo log互不影响，某个事务不会借由其他的undo log达到自己的回滚目的？","like_count":0},{"had_liked":false,"id":266188,"user_name":"momo","can_delete":false,"product_type":"c1","uid":1228393,"ip_address":"","ucode":"3B2CB1EC9BC601","user_header":"https://static001.geekbang.org/account/avatar/00/12/be/69/5404e5a3.jpg","comment_is_top":false,"comment_ctime":1607230434,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607230434","product_id":100020801,"comment_content":"请问老师只读事务 跟几个select运行的方法有什么区别","like_count":0},{"had_liked":false,"id":265625,"user_name":"Avril","can_delete":false,"product_type":"c1","uid":1228452,"ip_address":"","ucode":"E6E60A26B72076","user_header":"https://static001.geekbang.org/account/avatar/00/12/be/a4/32866c50.jpg","comment_is_top":false,"comment_ctime":1606964160,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606964160","product_id":100020801,"comment_content":"1. 事务是引擎层实现的<br>2. 隔离型和隔离级别<br>    当数据库多个事务同时执行的时候，就可能出现脏读、不可重复读、幻读问题，为了解决这些问题，就有了“事务隔离”的概念。<br>    隔离级别主要有：读未提交、读已提交、可重复读、串行化<br>    查看事务隔离级别的方式：show variables like &#39;transaction_isolation&#39;<br>3. 事务隔离的实现<br>    在MySQL中，实际上每条记录在更新的时候都会同时记录一条回滚操作。记录上的最新值，通过回滚操作，都可以得到前一个状态的值。<br>    回滚日志删除条件：当系统中没有比这个回滚日志更早的read-view的时候。所以，建议尽量不用长事务。<br>4. 事务的启动方式<br>  (1) 显示启动事务语句，begin或start transaction。配套的提交语句是commit，回滚语句是rollback。<br>  (2) set autocommit=0,这个命令会将这个线程的自动提交关掉。意味着如果你只执行一个select语句，这个事务就启动了，而且不会自动提交。这个事务持续存在直到你<br>  主动执行commit或rollback语句，或者断开连接。","like_count":0},{"had_liked":false,"id":265413,"user_name":"小正","can_delete":false,"product_type":"c1","uid":1937317,"ip_address":"","ucode":"D6D68DCC9650FA","user_header":"https://static001.geekbang.org/account/avatar/00/1d/8f/a5/d613dfc7.jpg","comment_is_top":false,"comment_ctime":1606892774,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1606892774","product_id":100020801,"comment_content":"请教一个问题，<br>在读提交隔离级别下，<br>假设 A事务在8点钟发起一个全表查询，查询时间很长，假如需要1小时，<br>在8点30分B事务修改了被A事务查询的表中的一条记录并提交<br>那么在9 点钟，A事务返回查询结果时会看到B事务修改后的记录吗<br>或者说这种操作能实现么，B事务会被A阻塞？","like_count":0,"discussions":[{"author":{"id":1494177,"avatar":"https://static001.geekbang.org/account/avatar/00/16/cc/a1/16d488fc.jpg","nickname":"阿国","note":"","ucode":"2801861BB1C115","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379673,"discussion_content":"我的理解是 读写是不会阻塞的 那么b就能正常提交事务 后面a再查数据的话 由于读提交 那么就是最新的数据了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624068932,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":261779,"user_name":"社会的毒打","can_delete":false,"product_type":"c1","uid":2126555,"ip_address":"","ucode":"737FA97A0C7063","user_header":"https://static001.geekbang.org/account/avatar/00/20/72/db/acc819ce.jpg","comment_is_top":false,"comment_ctime":1605520895,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605520895","product_id":100020801,"comment_content":"事务隔离的实现：每条记录在更新的时候都会同时记录一条回滚操作。<br><br>这里我有一个疑问，那就是 insert 和 delete 语句，MySQL记录的的回滚操作是什么？<br><br>insert 是记录 delete 语句来回滚的吗？<br>delete 是记录 insert 语句来回滚的吗？","like_count":0},{"had_liked":false,"id":261637,"user_name":"hj24","can_delete":false,"product_type":"c1","uid":2126468,"ip_address":"","ucode":"D7C31FF9BC0A81","user_header":"https://static001.geekbang.org/account/avatar/00/20/72/84/079fa620.jpg","comment_is_top":false,"comment_ctime":1605455016,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605455016","product_id":100020801,"comment_content":"分库分表的情况下，如何实现事务操作呢","like_count":0},{"had_liked":false,"id":261367,"user_name":"怕什么，抱紧我","can_delete":false,"product_type":"c1","uid":1318633,"ip_address":"","ucode":"CBCEA76E9EF33B","user_header":"https://static001.geekbang.org/account/avatar/00/14/1e/e9/dcc63d8f.jpg","comment_is_top":false,"comment_ctime":1605290714,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1605290714","product_id":100020801,"comment_content":"老师:事务隔离级别怎么实现的，没有看懂:<br>“假设一个值从 1 被按顺序改成了 2、3、4”是不是在一个事务里; <br>操作A、B读取的时候，事务是不是还未提交!<br>谢谢了!","like_count":0},{"had_liked":false,"id":260890,"user_name":"南京-杰神","can_delete":false,"product_type":"c1","uid":2130846,"ip_address":"","ucode":"9338295A099CC8","user_header":"https://static001.geekbang.org/account/avatar/00/20/83/9e/a8b6e839.jpg","comment_is_top":false,"comment_ctime":1605148509,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605148509","product_id":100020801,"comment_content":"业务逻辑层开启事务之后 执行的业务逻辑复杂度一高 绝壁长事务。所以将业务拆分，异常处理对于写代码的来说 都要养成好习惯。避免事务过长。","like_count":0},{"had_liked":false,"id":260844,"user_name":"怕什么，抱紧我","can_delete":false,"product_type":"c1","uid":1318633,"ip_address":"","ucode":"CBCEA76E9EF33B","user_header":"https://static001.geekbang.org/account/avatar/00/14/1e/e9/dcc63d8f.jpg","comment_is_top":false,"comment_ctime":1605143724,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1605143724","product_id":100020801,"comment_content":"回滚日志和事务隔离有什么关系吗？为什么要得到回滚的值！没看懂！","like_count":0},{"had_liked":false,"id":259031,"user_name":"少晴","can_delete":false,"product_type":"c1","uid":2285456,"ip_address":"","ucode":"31C290044F3B95","user_header":"https://static001.geekbang.org/account/avatar/00/22/df/90/0d8864db.jpg","comment_is_top":false,"comment_ctime":1604620853,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1604620853","product_id":100020801,"comment_content":"老师说到了在业务开发是最好使用显式的语句来开启和结束事务来避免长事务。这里我有个疑问，spring中的@transaction是如何来控制数据库事务的","like_count":0,"discussions":[{"author":{"id":1494177,"avatar":"https://static001.geekbang.org/account/avatar/00/16/cc/a1/16d488fc.jpg","nickname":"阿国","note":"","ucode":"2801861BB1C115","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379674,"discussion_content":"没看过源码 不过大概想来 是做了一个代理 在业务开始前启动了事务 在业务正常结束的时候提交事务  出现异常就回滚事务 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624069226,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":258985,"user_name":"Geek_0c1732","can_delete":false,"product_type":"c1","uid":1721278,"ip_address":"","ucode":"6276D0412CCE51","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ajNVdqHZLLAhj2fB8NI2TPI1SNicgiciczuMUHyAb9HHBkkKJHrgtR162fsicaTqdAneHfuVX7icDXaVibDHstM9L47g/132","comment_is_top":false,"comment_ctime":1604590389,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604590389","product_id":100020801,"comment_content":"长事务感觉比较可能 的原因就是处理大数据以及出现循环操作。可能测试甚至初期生产都没有问题，但是随着后期数据量的变化导致处理时间越来越长。因此开发人员或测试人员对此应当有个提前预估。","like_count":0},{"had_liked":false,"id":255310,"user_name":"渔父歌","can_delete":false,"product_type":"c1","uid":1347919,"ip_address":"","ucode":"4F7F6928DB6843","user_header":"https://static001.geekbang.org/account/avatar/00/14/91/4f/b359e3f3.jpg","comment_is_top":false,"comment_ctime":1603298594,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603298594","product_id":100020801,"comment_content":"事务回滚时是怎么操作的呢，比如read-view-a的事务回滚，但是这时候read-view-b的事务已经提交了，这种情况会发生吗。<br><br>个人认为read-view-a的事务在修改时加锁，所以read-view-b只能在a回滚或提交之后才能进行修改。","like_count":0},{"had_liked":false,"id":252783,"user_name":"on the way","can_delete":false,"product_type":"c1","uid":1159084,"ip_address":"","ucode":"17AAAAF068EA68","user_header":"https://static001.geekbang.org/account/avatar/00/11/af/ac/dd36cf29.jpg","comment_is_top":false,"comment_ctime":1602486502,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602486502","product_id":100020801,"comment_content":"可重复读下，A事务开启后，读的是A事务下的快照版的视图，此时B事务新插入了一条数据，并且满足A事务的查询条件，这时A事务仍然可以读到新插入的数据，造成幻读的现象呢，所以对这个快照的概念有疑惑","like_count":0},{"had_liked":false,"id":251134,"user_name":"dbtiger","can_delete":false,"product_type":"c1","uid":1324202,"ip_address":"","ucode":"05E8447593318C","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/aa/431de942.jpg","comment_is_top":false,"comment_ctime":1601373955,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601373955","product_id":100020801,"comment_content":"mysql既然也用undo，那么机制是怎样的，会不会也有ora-01555错误？","like_count":0},{"had_liked":false,"id":249954,"user_name":"🐝","can_delete":false,"product_type":"c1","uid":1183211,"ip_address":"","ucode":"28B3C527D81DC3","user_header":"https://static001.geekbang.org/account/avatar/00/12/0d/eb/c3ff1e85.jpg","comment_is_top":false,"comment_ctime":1600865392,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600865392","product_id":100020801,"comment_content":"说undolog在事务结束后会删除，后面又说不会删除ibdata日志文件很大？没看懂","like_count":0},{"had_liked":false,"id":249234,"user_name":"sun","can_delete":false,"product_type":"c1","uid":1136181,"ip_address":"","ucode":"948FD34662AFB0","user_header":"https://static001.geekbang.org/account/avatar/00/11/56/35/eeee9309.jpg","comment_is_top":false,"comment_ctime":1600515430,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600515430","product_id":100020801,"comment_content":"老师，在RR级别下开始事务执行一条sql语句后产生的视图中只包含这个一条数据还是整张表的数据？<br>试验了一下，session1开始事务，查询了主键主键为1的数据，然后session2update了id为2的数据然后commit，session1查询id为2的数据发现没有变化，也就是说session1在查询id为1的数据时也创建了id为2的数据视图。<br>那么如果每次开启事务都创建整张表的视图会不会影响性能呢？","like_count":0},{"had_liked":false,"id":246569,"user_name":"Geek_457f47","can_delete":false,"product_type":"c1","uid":1443589,"ip_address":"","ucode":"B9EB1B46AA4D85","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/iamkqQRZFTAQgclRqskib3n860CStDuxq2aiaZO7EicDfLJwCdZ9gZiajhBoTNuFKH47DLKO5C4GHxukN5L1VOpcR6Q/132","comment_is_top":false,"comment_ctime":1599407069,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599407069","product_id":100020801,"comment_content":"读提交隔离级别实现怎么理解，读未提交是直接读的最新版本数据，那可重复读和提交读开启视图的时候是怎么读的数据呢？","like_count":0},{"had_liked":false,"id":246235,"user_name":"恶魔果实","can_delete":false,"product_type":"c1","uid":1962297,"ip_address":"","ucode":"691CD833C984AC","user_header":"https://static001.geekbang.org/account/avatar/00/1d/f1/39/b0960780.jpg","comment_is_top":false,"comment_ctime":1599215511,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599215511","product_id":100020801,"comment_content":"所以InnoDB的隔离级别到底是用锁 还是 MVCC实现的？","like_count":0},{"had_liked":false,"id":245801,"user_name":"六月的雨","can_delete":false,"product_type":"c1","uid":2081651,"ip_address":"","ucode":"41922FC245BA99","user_header":"https://static001.geekbang.org/account/avatar/00/1f/c3/73/c28b5d8c.jpg","comment_is_top":false,"comment_ctime":1599058120,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1599058120","product_id":100020801,"comment_content":"老师,请问可重复读不是用MVCC实现的吗？和视图有是什么关系呢？还有视图只是逻辑表，怎么能备份数据呢？","like_count":0,"discussions":[{"author":{"id":1024679,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a2/a7/37cbf5f7.jpg","nickname":"Warming","note":"","ucode":"BD1283D003F5BC","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306295,"discussion_content":"是用MVCC实现的，这个视图并不是数据库中的那个view，它里面不包含数据信息，只包含了活跃的事务ID集合以及最小最大事务ID等信息，通过跟查询行的事务ID进行比对，然后通过行上的undo log指针，根据undo log版本链去确定最终应该查询到的数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600240919,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":245675,"user_name":"Magic","can_delete":false,"product_type":"c1","uid":1272047,"ip_address":"","ucode":"FD9CEDAA419EB0","user_header":"https://static001.geekbang.org/account/avatar/00/13/68/ef/6264ca3d.jpg","comment_is_top":false,"comment_ctime":1599023446,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599023446","product_id":100020801,"comment_content":"1 把显示开启事务和提交作为业务开发规范。在code review阶段进行把关<br>2 开发中严禁使用长事务，对于出现长事务的场景，优化设计或拆分事务的方式去除长事务<br>3 测试时注意<br>4 开启长事务告警","like_count":0},{"had_liked":false,"id":245588,"user_name":"Geek_00d9d1","can_delete":false,"product_type":"c1","uid":1801135,"ip_address":"","ucode":"0A92DF446FE451","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJfNhFhiaYNmEec4T2QWBZGTicSI8J9Tia3jibJica3H1mwdGaugN1aIjhqNW7CGZyujNGbgOSsc8Murhw/132","comment_is_top":false,"comment_ctime":1599003307,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599003307","product_id":100020801,"comment_content":"这个叫回滚日志感觉让人误解，应该叫回溯日志比较合适吧！还有如果是读提交级别，是不是长事务就没关系呢？","like_count":0},{"had_liked":false,"id":245196,"user_name":"Geek_da015d","can_delete":false,"product_type":"c1","uid":1982864,"ip_address":"","ucode":"E2F95CC01AE094","user_header":"","comment_is_top":false,"comment_ctime":1598861857,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598861857","product_id":100020801,"comment_content":"同时你会发现，即使现在有另外一个事务正在将 4 改成 5，这个事务跟 read-view A、B、C 对应的事务是不会冲突的。","like_count":0},{"had_liked":false,"id":243998,"user_name":"癫鸭","can_delete":false,"product_type":"c1","uid":2143695,"ip_address":"","ucode":"D843AA72E3CD53","user_header":"https://static001.geekbang.org/account/avatar/00/20/b5/cf/6ed00292.jpg","comment_is_top":false,"comment_ctime":1598348523,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598348523","product_id":100020801,"comment_content":"那怎样才称为一个事务呢，这个没明白，请教一下老师","like_count":0},{"had_liked":false,"id":242878,"user_name":"DZZ","can_delete":false,"product_type":"c1","uid":1516167,"ip_address":"","ucode":"C8E4C4B089BCE2","user_header":"https://static001.geekbang.org/account/avatar/00/17/22/87/e7bd2acf.jpg","comment_is_top":false,"comment_ctime":1597882416,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1597882416","product_id":100020801,"comment_content":"老师好，我遇到有这样一个场景和长事务有关:每天有两张表a，b需要在半夜做大批量的数据同步，同步量在2000万以上，每张表200个字段以上。目前采用的方式是直接merge into b select a，select的会加10个并行，执行完后commit，这样的速度大概可以30分钟左右同步完，但是回滚段占用就会特别大。为了降低回滚段的占用，尝试着对分段提交同步，效果都不是很好，速度会远低于直接merge。老师有其他比较好的方法既能保持同步速度，又能分段提交降低回滚段的占用吗","like_count":0},{"had_liked":false,"id":242500,"user_name":"666","can_delete":false,"product_type":"c1","uid":2131368,"ip_address":"","ucode":"FBA7134AE1BD5C","user_header":"https://static001.geekbang.org/account/avatar/00/20/85/a8/5802c6c5.jpg","comment_is_top":false,"comment_ctime":1597743169,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597743169","product_id":100020801,"comment_content":"如果同时有两个事务操作同一条记录，记录字段A的值为100元，一个事务转账转出去100元，另一个事务查询到的余额还是100元，会不会又转出去100元，最后字段的值变为-100","like_count":0},{"had_liked":false,"id":242388,"user_name":"流云","can_delete":false,"product_type":"c1","uid":1896868,"ip_address":"","ucode":"26C5A9166EC6D8","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f1/a4/79c36b87.jpg","comment_is_top":false,"comment_ctime":1597710713,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1597710713","product_id":100020801,"comment_content":"读完这章，一个是对事务的四种隔离级别有实现原理上的认识；二个是想起以前用mysql的长事务，经常导致dead lock，却老是查不出缘由","like_count":0,"discussions":[{"author":{"id":1303322,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e3/1a/061e77b6.jpg","nickname":"亢星东","note":"","ucode":"5E4063E83B2BB9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304380,"discussion_content":"死锁是 锁抢占失败了吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599557180,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242147,"user_name":"Geek_06c355","can_delete":false,"product_type":"c1","uid":1181547,"ip_address":"","ucode":"238E29DC994E6F","user_header":"https://static001.geekbang.org/account/avatar/00/12/07/6b/a0a99de6.jpg","comment_is_top":false,"comment_ctime":1597624347,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597624347","product_id":100020801,"comment_content":"请问老师事务隔离级别是只针对执行查询语句的事务的吗？比如写的事务的隔离级别是可重复读，另一个执行查询语句的事务隔离级别是读提交，是否适应文中的结论","like_count":0},{"had_liked":false,"id":241618,"user_name":"Celine","can_delete":false,"product_type":"c1","uid":1926366,"ip_address":"","ucode":"63D5F2E8FB2130","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erwIgbTd3oy4GzkdCUBmz8lHGIIWBwoSIfibgQzwDlQuvTrLlqwTh7p99NBJIsu98ziaYoroQCSENwA/132","comment_is_top":false,"comment_ctime":1597372314,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597372314","product_id":100020801,"comment_content":"老师，问一个问题，可重复复或者读提交隔离级别下，如果值v的初始值是1，事务A启动，读取v的值(目前应该是1)，事务B启动将v的值改成2，提交事务，事务A将v改成 v+1，这个时候应该是1+1,还是2+1?","like_count":0},{"had_liked":false,"id":240888,"user_name":"旺仔牛奶kk","can_delete":false,"product_type":"c1","uid":1199020,"ip_address":"","ucode":"A9045F69B8E009","user_header":"https://static001.geekbang.org/account/avatar/00/12/4b/ac/14836960.jpg","comment_is_top":false,"comment_ctime":1597110507,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597110507","product_id":100020801,"comment_content":"这里的回滚日志是 redo log 吗？","like_count":0},{"had_liked":false,"id":240150,"user_name":"Coding2GainDiamond0110","can_delete":false,"product_type":"c1","uid":2110678,"ip_address":"","ucode":"125783FD8E7F11","user_header":"","comment_is_top":false,"comment_ctime":1596771165,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596771165","product_id":100020801,"comment_content":"开篇的那个例子串行化没理解，为什么是锁事务B而不是锁事务A呢？因为事务B此时在改写数据，还没有提交，怎么事务A就可以执行了呢？","like_count":0},{"had_liked":false,"id":239046,"user_name":"Will","can_delete":false,"product_type":"c1","uid":1019923,"ip_address":"","ucode":"66A054E8AFDC36","user_header":"https://static001.geekbang.org/account/avatar/00/0f/90/13/b5479887.jpg","comment_is_top":false,"comment_ctime":1596422174,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596422174","product_id":100020801,"comment_content":"事务的隔离级别分为四个等级：<br>举个例子，A事务启动在前，B事务启动在后，但B事务先提交，A事务后提交<br>读未提交：在A事务中能够看到B事务中已经更改但未提交的数据<br>读已提交：在A事务中能够看到B事务中已经更改但已提交的数据<br>可重复读：在A事务中看不到B事务中已经更改并已提交的数据<br>串行化：A事务查询的数据，B事务要更改，更改语句会被锁住，直到A事务提交后，更改才能进行。<br><br>数据视图：<br>1、事务直接进行数据隔离主要是使用数据视图。<br>2、在事务开始的时候创建一个事务视图，对于读提交的事务来说，应该是事务提交后就删除数据视图；但对于可重复读的事务来说，后面修改数据的事务提交后，只要之前的事务没有提交，那么数据视图就要一直保留，这就涉及一个长事务的问题。数据视图的保留主要影响的就是可重复读。<br>3、因为我们就要避免长事务，如果要避免长事务，如果要避免长事务就要考虑事务的启动方式。<br>4、事务的启动方式分两种，一种显示启动，用start tranaction启动事务，commit或rollback结束事务，但是对于连接中如果设置一个set autcommit=0，那么只要一个select语句就会启动事务，而且如果不显示的给出commit和rollback，那么接下来的语句都在一个事务中，就会造成一个长事务，因此我们要避免长事务。<br><br>事务的隔离级别可以应用到不同的场景中。<br>系统的并发能力也随着事务的隔离级别增高而不断下降。<br>mysql一般采用读提交的隔离级别。","like_count":0},{"had_liked":false,"id":239045,"user_name":"考拉出山","can_delete":false,"product_type":"c1","uid":1303954,"ip_address":"","ucode":"917E35FD7B2D06","user_header":"https://wx.qlogo.cn/mmopen/vi_32/1mOvT5fApeicXppMP3zADG6XIPicNt5D9dL6y46SF5UUcH0hicG21LM6xSgHJj5oAdzCyeGtLZYHYmlvaFwecrGOA/132","comment_is_top":false,"comment_ctime":1596421943,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596421943","product_id":100020801,"comment_content":"关于 read-view  A B C ; A的回滚段记录：“将2改成1”即read-vew A的事务把记录从 1-&gt;2；以此类推 , B：“将3变成2” 即事务把记录 2-&gt;3 ; 这里的隔离级别是 “可重复读”； 按照图中的说明 read-view B 是把 2-&gt; 3， 即 read-view B开启事务的时候，read-view A的事务已经提交了。否则如果按照“可重复读”的话，后续的事务应该看不到事务的内容。 那为什么read-view A 要回滚到 1， 需要回滚所有的段落？ 换句话来说，回滚即意味着事务没有提交。那么 B C又是如何看到 A的内容呢， 难道commit后的事务也可以回滚， 或者说图中说的是嵌套事务？ 越理解越矛盾， 谁可以解答下？","like_count":0},{"had_liked":false,"id":238292,"user_name":"地平线","can_delete":false,"product_type":"c1","uid":1482026,"ip_address":"","ucode":"F50717D6244867","user_header":"https://static001.geekbang.org/account/avatar/00/16/9d/2a/3e57b54a.jpg","comment_is_top":false,"comment_ctime":1596112507,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596112507","product_id":100020801,"comment_content":"不能说Innodb取代了MyISAM吧，他们本来的作用场景就不一样，Innodb相当于是OLTP，MyISAM相当于是OLAP","like_count":0},{"had_liked":false,"id":236728,"user_name":"sibyl","can_delete":false,"product_type":"c1","uid":1323652,"ip_address":"","ucode":"0D142011860D69","user_header":"","comment_is_top":false,"comment_ctime":1595512311,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1595512311","product_id":100020801,"comment_content":"老师好， 您文章开头说：你这 100 块钱，完全可以借着这个时间差再查一次，然后再给另外一个朋友转账，如果银行这么整，不就乱了么？这时就要用到“事务”这个概念了。<br><br>我感觉这个例子不好，这更是一个线程不安全问题，这并不贴近同时成功同时失败的概念。感觉A给B转账，A余额减少后,B余额增加前crash了，会导致数据不一致的问题，儿事务就是保证数据一致性的","like_count":0,"discussions":[{"author":{"id":1323652,"avatar":"","nickname":"sibyl","note":"","ucode":"0D142011860D69","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293487,"discussion_content":"老师这个问题可通过乐观锁解决","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595556403,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1323652,"avatar":"","nickname":"sibyl","note":"","ucode":"0D142011860D69","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293486,"discussion_content":"innodb的事务并不能保证互斥，经过测试老师说的这种情况即使加了事务也不能解决！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595556376,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235746,"user_name":"liin","can_delete":false,"product_type":"c1","uid":1038705,"ip_address":"","ucode":"92AE8958DDED4E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d9/71/8e38dc01.jpg","comment_is_top":false,"comment_ctime":1595168480,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1595168480","product_id":100020801,"comment_content":"刚才实践了一下，文稿中的可重复读的拆解，视图A对应的事务中为1，视图C中为4，如果视图A对应的事务想修改为5，视图C对应的事务也想修改为5这时候就会有锁等待，直到都提交，会有一条成功一条失败。<br>那么，如果视图A对应的事务中修改数据为6 未提交，在该事务中仍然能看到为6.而视图C对应的事务中仍然为5.","like_count":0},{"had_liked":false,"id":235519,"user_name":"嘉嘉☕","can_delete":false,"product_type":"c1","uid":1059771,"ip_address":"","ucode":"632A5CC4B53BB1","user_header":"https://static001.geekbang.org/account/avatar/00/10/2b/bb/5cf70df8.jpg","comment_is_top":false,"comment_ctime":1595072346,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595072346","product_id":100020801,"comment_content":"老师好, 今天复习了一下事务隔离, <br><br>在 MySQL 中，实际上每条记录在更新的时候都会同时记录一条回滚操作。记录上的最新值，通过回滚操作，都可以得到前一个状态的值。<br><br>老师, 这个地方说的&quot;记录一条回滚操作&quot;, 指是的undo log吗 ?<br>","like_count":0},{"had_liked":false,"id":234985,"user_name":"神韵","can_delete":false,"product_type":"c1","uid":1665194,"ip_address":"","ucode":"0337AC63C9FBD1","user_header":"https://static001.geekbang.org/account/avatar/00/19/68/aa/4b58cfd3.jpg","comment_is_top":false,"comment_ctime":1594862870,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594862870","product_id":100020801,"comment_content":"因为不是很清楚您说的回滚日记咋删除的，所以我自己进行了理解。<br>read view是啥时候会被删除呢？是不是只保留活跃事务-1的那个read view，所以undo log和read view进行版本比较，系统会将undo log比read view版本早的删除掉。也就符合你说的那句话：就是当系统里没有比这个回滚日志更早的 read-view 的时候删除回滚日记。","like_count":0},{"had_liked":false,"id":234524,"user_name":"Trouver âme","can_delete":false,"product_type":"c1","uid":1323966,"ip_address":"","ucode":"F84C69721CDC9C","user_header":"https://static001.geekbang.org/account/avatar/00/14/33/be/be07474f.jpg","comment_is_top":false,"comment_ctime":1594713347,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594713347","product_id":100020801,"comment_content":"老师能介绍一下commit work and chain如何用吗，因为为了较少交互，现在都是设置autocommit=false，在spring框架下就算不加事务注解，查询框架也会自动发送commit，想问问这个减少交互是怎么使用的","like_count":0},{"had_liked":false,"id":231286,"user_name":"上酒馆复活","can_delete":false,"product_type":"c1","uid":1125119,"ip_address":"","ucode":"CEA9276D376238","user_header":"https://static001.geekbang.org/account/avatar/00/11/2a/ff/aac2a672.jpg","comment_is_top":false,"comment_ctime":1593632978,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593632978","product_id":100020801,"comment_content":"林老师，在学习mvcc的时候有一个疑问。在更新一条记录的时候，mysql是更新这一行的隐藏版本号为当前的事务id，并新增一条新的记录。这样做不是会浪费存储空间吗？或者说mysql会在合适时间清理那些已经过时的行记录？","like_count":0},{"had_liked":false,"id":230811,"user_name":"鼠里鼠气","can_delete":false,"product_type":"c1","uid":1696883,"ip_address":"","ucode":"4793476BBDB202","user_header":"https://static001.geekbang.org/account/avatar/00/19/e4/73/74dce191.jpg","comment_is_top":false,"comment_ctime":1593500980,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593500980","product_id":100020801,"comment_content":"MySQL在对表进行select、update等操作时，InnoDB会以数据页的方式从硬盘中将数据读入内存(如果表很大，不会一次性将表全部读入内存，如果表较小，就能全部读入内存)。这样在select操作执行流程那里的&quot;打开表&quot;就很容易理解了，即以数据页的方式从硬盘中将数据读入内存，在内存中查找。对于update操作再结合隔离级别中的&quot;视图&quot;概念，视图的数据源是上面提到的内存中的数据页，这样也就能理解，&quot;读未提交&quot;隔离级别下是直接在上面提到的数据页中修改数据，其他隔离级别为&quot;读未提交&quot;的事务也会从这个数据页上读取数据，自然也就看到了不该看的！！<br>【】不知道理解得对不对？😄⭐️","like_count":0},{"had_liked":false,"id":228942,"user_name":"Liupc","can_delete":false,"product_type":"c1","uid":1671592,"ip_address":"","ucode":"F6CC64F3B4006B","user_header":"https://static001.geekbang.org/account/avatar/00/19/81/a8/ea5ae9c4.jpg","comment_is_top":false,"comment_ctime":1592844913,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592844913","product_id":100020801,"comment_content":"林老师您好，有几个问题想请教一下：<br>1.为什么没有值为3的read-view?<br>2.一个事务如果封装了多条SQL，会产生多个read-view还是只是事务开启之前会有read-view?","like_count":0},{"had_liked":false,"id":228305,"user_name":"静静聆听","can_delete":false,"product_type":"c1","uid":1263932,"ip_address":"","ucode":"0A8600CB928EFE","user_header":"https://static001.geekbang.org/account/avatar/00/13/49/3c/5d54c510.jpg","comment_is_top":false,"comment_ctime":1592638499,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592638499","product_id":100020801,"comment_content":"老师，您知道java的Mybatis框架么，你文章中建议开启事务用begin transaction，但是Mybatis这种人人都在用的开源框架确使用的set autocommit=0，这是什么原因啊","like_count":0},{"had_liked":false,"id":226149,"user_name":"少平","can_delete":false,"product_type":"c1","uid":1228611,"ip_address":"","ucode":"9F14F328987093","user_header":"https://static001.geekbang.org/account/avatar/00/12/bf/43/2602b4a6.jpg","comment_is_top":false,"comment_ctime":1591963970,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591963970","product_id":100020801,"comment_content":"在代码层面用 cas 可以避免关键表的 长事务问题。 ","like_count":0},{"had_liked":false,"id":226119,"user_name":"Kennedy","can_delete":false,"product_type":"c1","uid":1049022,"ip_address":"","ucode":"C50627007E5ED0","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/be/be358cab.jpg","comment_is_top":false,"comment_ctime":1591953933,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1591953933","product_id":100020801,"comment_content":"从业务上规避长事务，如果规避不了，考虑使用分布式事务，例如saga模型<br>","like_count":0},{"had_liked":false,"id":225969,"user_name":"kay","can_delete":false,"product_type":"c1","uid":1681159,"ip_address":"","ucode":"03F88D31BE2BD5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoHgweicVlhxFOAh4V9Bv0MwamKuOV8IZiacTaYjO3ZMuvwQdYibzeUnQSMpiaSfRTHIhnnLBFLDEq7qA/132","comment_is_top":false,"comment_ctime":1591921372,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591921372","product_id":100020801,"comment_content":"回滚段清理后，文件不会变小是啥原因的？（回滚日志是跟数据字典一起放在 ibdata 文件里的，即使长事务最终提交，回滚段被清理，文件也不会变小。）","like_count":0},{"had_liked":false,"id":225811,"user_name":"陌若安生","can_delete":false,"product_type":"c1","uid":2035926,"ip_address":"","ucode":"5CDB888D3C0929","user_header":"https://static001.geekbang.org/account/avatar/00/1f/10/d6/66e92aea.jpg","comment_is_top":false,"comment_ctime":1591865184,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591865184","product_id":100020801,"comment_content":"老师，我想问下：不可重复读既然在其他事务提交后能读取到改变后的数据，为什么会出现幻读的问题呢？","like_count":0},{"had_liked":false,"id":225620,"user_name":"OneThin","can_delete":false,"product_type":"c1","uid":1050458,"ip_address":"","ucode":"506989C201402F","user_header":"https://static001.geekbang.org/account/avatar/00/10/07/5a/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1591800837,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591800837","product_id":100020801,"comment_content":"有一个疑问，在可重复读的隔离级别下，假设有两句sql都是查询同一条记录，第一次是普通查询，因为mvcc机制查询的是快照，第二句唯一区别是加了当前读，假设有并发在这两句查询中间记录被另一个事务修改了，那么MySQL是怎么加锁的？<br>","like_count":0},{"had_liked":false,"id":224332,"user_name":"Danfēng","can_delete":false,"product_type":"c1","uid":1237583,"ip_address":"","ucode":"E5B3451F1D0441","user_header":"https://static001.geekbang.org/account/avatar/00/12/e2/4f/df01f65e.jpg","comment_is_top":false,"comment_ctime":1591346414,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591346414","product_id":100020801,"comment_content":"看了很多评论，结合文章，发现有一个很大的疑问。就是RR是事务期间前后读到都一样（这里很多人理解为单条记录和内容）。如果期间在事务A根据条件查询得到5条记录，期间事务B又对A同等条件进行增或删了，并成功提交事务，那么A执行完最后提交事务前做一次查询，此时还是5条？这也是很多人纠结到底RR会不会幻读？还望作者解疑，谢谢","like_count":0},{"had_liked":false,"id":223464,"user_name":"晓东","can_delete":false,"product_type":"c1","uid":2021524,"ip_address":"","ucode":"F59AC5884F71D5","user_header":"https://static001.geekbang.org/account/avatar/00/1e/d8/94/a8b813dd.jpg","comment_is_top":false,"comment_ctime":1591096180,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1591096180","product_id":100020801,"comment_content":"关于视图那部分没太理解，“可重复读”级别下，如果事务没有结束那么这个事务修改的内容是不可见的，那么其他的事务在执行时看到的这个值应该也是原来的1，怎么能把这个值从4改到5呢？","like_count":0},{"had_liked":false,"id":222512,"user_name":"王加武","can_delete":false,"product_type":"c1","uid":1665471,"ip_address":"","ucode":"DDCFE578C6C428","user_header":"https://static001.geekbang.org/account/avatar/00/19/69/bf/50a824a4.jpg","comment_is_top":false,"comment_ctime":1590824866,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590824866","product_id":100020801,"comment_content":"1、把长事务分解为一个个小的事务来执行<br>2、尽量避免一次处理大量的数据<br>","like_count":0},{"had_liked":false,"id":218705,"user_name":"Geek_66dfcd","can_delete":false,"product_type":"c1","uid":1996833,"ip_address":"","ucode":"456EA0A9DBDAD2","user_header":"","comment_is_top":false,"comment_ctime":1589857476,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589857476","product_id":100020801,"comment_content":"手动开启手动提交，为什么还要设置autocommit 为1？","like_count":0},{"had_liked":false,"id":216827,"user_name":"雪の雫·雨の音","can_delete":false,"product_type":"c1","uid":1997293,"ip_address":"","ucode":"0693DA3939A321","user_header":"https://static001.geekbang.org/account/avatar/00/1e/79/ed/4737a49b.jpg","comment_is_top":false,"comment_ctime":1589351227,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589351227","product_id":100020801,"comment_content":"老师，读提交是每条sql语句执行时创建一个视图，而不可重复读是每个事务开始时创建一个视图。这样看起来不是反而读提交的开销反而比不可重复读更大吗？为什么说是隔离的安全级别越高性能越低呢？","like_count":0},{"had_liked":false,"id":215351,"user_name":"梦倚栏杆","can_delete":false,"product_type":"c1","uid":1095857,"ip_address":"","ucode":"BDEB97F2822445","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/bvj76PmeUvW8kokyu91IZWuRATKmabibDWbzAj2TajeEic7WvKCJOLaOh6jibEmdQ36EO3sBUZ0HibAiapsrZo64U8w/132","comment_is_top":false,"comment_ctime":1588977262,"is_pvip":false,"replies":[{"id":"79727","content":"后面的章节有例子哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1588990836,"ip_address":"","comment_id":215351,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1588977262","product_id":100020801,"comment_content":"老师提到的多版本控制，我们可以直观的看到或者感受到吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494399,"discussion_content":"后面的章节有例子哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588990836,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":214933,"user_name":"#160","can_delete":false,"product_type":"c1","uid":1195835,"ip_address":"","ucode":"0C0A2C5494B252","user_header":"https://static001.geekbang.org/account/avatar/00/12/3f/3b/6f3cf0af.jpg","comment_is_top":false,"comment_ctime":1588852816,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588852816","product_id":100020801,"comment_content":"Turning off autocommit. Committing hundreds of times a second puts a cap on performance (limited by the write speed of your storage device).<br>5.7版本的官方文档的最佳实践是关闭啊","like_count":0},{"had_liked":false,"id":212126,"user_name":"无名之辈","can_delete":false,"product_type":"c1","uid":1108247,"ip_address":"","ucode":"23AB28F44A769C","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/17/c78d3963.jpg","comment_is_top":false,"comment_ctime":1588063958,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1588063958","product_id":100020801,"comment_content":"1.事务的特性（CAID）<br>2事务的隔离级别以及可重复读实现<br>3.MVCC(多版本并发控制)概念以及实现方式<br>4.长事务的概念以及危害<br>5.事务启动方式<br>6.长事务查询sql","like_count":0},{"had_liked":false,"id":208588,"user_name":"陈年风褛","can_delete":false,"product_type":"c1","uid":1967573,"ip_address":"","ucode":"D806A6F06D8CD1","user_header":"https://static001.geekbang.org/account/avatar/00/1e/05/d5/ee6f94f5.jpg","comment_is_top":false,"comment_ctime":1587387377,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587387377","product_id":100020801,"comment_content":"有个小问题请教下,在串行化的实例中: v1=1,v2=1,v3=1 [事务A,B操作同一行,冲突加锁,按照先后顺序,先事务A,再事务B,故事务B的更新无法被事务A看到], 这么理解哪里有问题么,并且这个结论中的v3和您文中的结论是有出入的","like_count":0},{"had_liked":false,"id":208457,"user_name":"张sir","can_delete":false,"product_type":"c1","uid":1262660,"ip_address":"","ucode":"FCDA9B9A9CD58C","user_header":"https://static001.geekbang.org/account/avatar/00/13/44/44/25e4465e.jpg","comment_is_top":false,"comment_ctime":1587362750,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587362750","product_id":100020801,"comment_content":"回答本期问题：在mysql层面，可以通过设置最大事务锁超时时间，避免长事务，但是感觉最应该优化的地方是代码级别的控制，在代码里面避免长事务，我觉得是最常见优化方式","like_count":0},{"had_liked":false,"id":208074,"user_name":"Lyn4ever","can_delete":false,"product_type":"c1","uid":1559541,"ip_address":"","ucode":"D4D32B7A9EBFAA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/kEOm2xpFyn0WVH04ibTyadaXKPowWfzPaOv1ibGrM2Y4eTSbSGYibvibZKW0dRibJqX8dnwMEwGZoDAiaicJ4gR0JWeVw/132","comment_is_top":false,"comment_ctime":1587269052,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1587269052","product_id":100020801,"comment_content":"我想问一下，事务回滚时依赖的日志是不是redo log","like_count":0,"discussions":[{"author":{"id":1494177,"avatar":"https://static001.geekbang.org/account/avatar/00/16/cc/a1/16d488fc.jpg","nickname":"阿国","note":"","ucode":"2801861BB1C115","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379679,"discussion_content":"undo log","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624070337,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":207634,"user_name":"王智洋","can_delete":false,"product_type":"c1","uid":1666517,"ip_address":"","ucode":"B38934EA504663","user_header":"https://static001.geekbang.org/account/avatar/00/19/6d/d5/81e72368.jpg","comment_is_top":false,"comment_ctime":1587123781,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587123781","product_id":100020801,"comment_content":"读未提交 和 串行化 会产生回滚日志吗。  他们的回滚机制是什么？","like_count":0},{"had_liked":false,"id":206633,"user_name":"吃饭","can_delete":false,"product_type":"c1","uid":1692756,"ip_address":"","ucode":"AF0D7165D5F049","user_header":"https://static001.geekbang.org/account/avatar/00/19/d4/54/7263deb2.jpg","comment_is_top":false,"comment_ctime":1586912341,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586912341","product_id":100020801,"comment_content":"view表机制是啥？总不能每次都拷贝整个表吧？还是说用到哪行拷贝哪行","like_count":0},{"had_liked":false,"id":206233,"user_name":"甜公子Timmy","can_delete":false,"product_type":"c1","uid":1673409,"ip_address":"","ucode":"E6E90C518CDAC2","user_header":"https://static001.geekbang.org/account/avatar/00/19/88/c1/d0136c63.jpg","comment_is_top":false,"comment_ctime":1586827123,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586827123","product_id":100020801,"comment_content":"为什么从oracle迁移过来的程序需要设置为读提交？这种迁移是指oracle数据库里以有数据的迁移，如果没有数据是否可以直接使用mysql默认事物隔离级别？","like_count":0},{"had_liked":false,"id":206231,"user_name":"甜公子Timmy","can_delete":false,"product_type":"c1","uid":1673409,"ip_address":"","ucode":"E6E90C518CDAC2","user_header":"https://static001.geekbang.org/account/avatar/00/19/88/c1/d0136c63.jpg","comment_is_top":false,"comment_ctime":1586826514,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586826514","product_id":100020801,"comment_content":"开启事物时创建的视图是开启一个事务创建一个还是共用的？","like_count":0},{"had_liked":false,"id":205886,"user_name":"🌜","can_delete":false,"product_type":"c1","uid":1513966,"ip_address":"","ucode":"190C308B747FF8","user_header":"https://static001.geekbang.org/account/avatar/00/17/19/ee/6154cfd8.jpg","comment_is_top":false,"comment_ctime":1586750927,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586750927","product_id":100020801,"comment_content":"就是当系统里没有比这个回滚日志更早的 read-view 的时候，这句话怎么理解？","like_count":0},{"had_liked":false,"id":203710,"user_name":"Geek_00d9d1","can_delete":false,"product_type":"c1","uid":1801135,"ip_address":"","ucode":"0A92DF446FE451","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJfNhFhiaYNmEec4T2QWBZGTicSI8J9Tia3jibJica3H1mwdGaugN1aIjhqNW7CGZyujNGbgOSsc8Murhw/132","comment_is_top":false,"comment_ctime":1586257307,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586257307","product_id":100020801,"comment_content":"回滚日志是什么？","like_count":0},{"had_liked":false,"id":200708,"user_name":"小菠萝🍍","can_delete":false,"product_type":"c1","uid":1686410,"ip_address":"","ucode":"DA814203C6C062","user_header":"https://static001.geekbang.org/account/avatar/00/19/bb/8a/d33d9d3f.jpg","comment_is_top":false,"comment_ctime":1585641263,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585641263","product_id":100020801,"comment_content":"个人理解及总结<br>1. 隔离性与隔离级别<br>隔离性是指事务之间的操作是独立的，某一个事务的执行不受另外一个事务的影响，多个事务的并发执行在本事务看来是串行执行的；下面举出各种例子来解释为什么在本事务看来是串行执行的<br>4种隔离级别保证了事务的隔离性：<br>1. 读未提交（Read uncommitted）：任何事务都可以读取其它未提交事务所做的更新操作。<br>以老师的例子为例：事务A第一次读取值1，在第二次读取值V1前，事务B将值该为2，所以事务A读取到V1的值为2，那么在事务A看来，事务B是在事务A之前完成的更新操作，所以在事务A看来事务B是先于自己执行的。这种隔离级别没有回滚日志，因为它不需要保存之前的状态。<br>2. 读已提交（Read Committed）：一个事务只能读取到已提交事务的值<br>在事务A第二次读取值V1时，由于事务B已经提交事务，所以事务A读取到的V1值为2，此时事务A认为事务B是在事务A之后之前执行完毕的。此隔离级别也会产生回滚日志，如果事务A不进行第二次读取，在事务B提交后，事务A第一次读取到的值就是回滚日志中的状态值。<br>3. 可重复读（Repeatable Read）：一个事务在开始执行后至提交之前，读取同一个字段的值保持相同。<br>例子：事务A在第一次读取值1后，无论事务B做什么修改操作，事务A在提交事务之前读取到的值都为1，这保证了事务在执行过程中好像“自己掌控着这个数据”，其它事务必须等待自己执行完成后再执行，实际上数据库中会保存回滚日志。<br>4. 串行化（Serializable）：串行化是真正意义上每个事务串行执行的实现方式。每个事务在启动之前必须保证之前的事务已经提交，并发度低，但隔离级别最强。这种隔离级别同样没有回滚日志。","like_count":0},{"had_liked":false,"id":196900,"user_name":"大鹏展翅","can_delete":false,"product_type":"c1","uid":1308449,"ip_address":"","ucode":"244C4648E64E66","user_header":"https://static001.geekbang.org/account/avatar/00/13/f7/21/fbfc06c5.jpg","comment_is_top":false,"comment_ctime":1585322411,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585322411","product_id":100020801,"comment_content":"事务隔离级别","like_count":0},{"had_liked":false,"id":195469,"user_name":"jzhongchen","can_delete":false,"product_type":"c1","uid":1745949,"ip_address":"","ucode":"B78FD795DB752F","user_header":"https://static001.geekbang.org/account/avatar/00/1a/a4/1d/81e93f87.jpg","comment_is_top":false,"comment_ctime":1585190013,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585190013","product_id":100020801,"comment_content":"对事务的有了更深刻的认识。","like_count":0},{"had_liked":false,"id":195085,"user_name":"这个昵称有点帅！","can_delete":false,"product_type":"c1","uid":1106695,"ip_address":"","ucode":"2142BED6BCA6C9","user_header":"https://static001.geekbang.org/account/avatar/00/10/e3/07/12783847.jpg","comment_is_top":false,"comment_ctime":1585134422,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585134422","product_id":100020801,"comment_content":"1、事务只有两种结果：要么执行成功，要么失败。<br>2、事务特性：acid,原子性，一致性，隔离性，一致性。<br>2、事务的隔离级别：读未提交，读提交（oracle默认读提交），可重复读（事务执行前后看到的数据一致），串行化。隔离级别越高，数据库执行效率越低。<br>3、事务的实现：回滚日志。<br>4、不要使用长事务，使用显式事务","like_count":0},{"had_liked":false,"id":193417,"user_name":"shiziwen","can_delete":false,"product_type":"c1","uid":1016917,"ip_address":"","ucode":"ADADC770D82D66","user_header":"https://static001.geekbang.org/account/avatar/00/0f/84/55/1e40bd61.jpg","comment_is_top":false,"comment_ctime":1584892214,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584892214","product_id":100020801,"comment_content":"对于事务隔离的策略，还是得通过例子，才能想空白","like_count":0},{"had_liked":false,"id":190873,"user_name":"克里斯","can_delete":false,"product_type":"c1","uid":1181844,"ip_address":"","ucode":"00B755C10AC1C3","user_header":"https://static001.geekbang.org/account/avatar/00/12/08/94/2c22bd4e.jpg","comment_is_top":false,"comment_ctime":1584703196,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1584703196","product_id":100020801,"comment_content":"redo日志持久化后，此时磁盘还没有持久化，那么select是从磁盘获取数据还是redo从获取日志？redo没有B树的查询结构，如何查找？如果是从磁盘查找，不会造成数据不一致问题吗？","like_count":0},{"had_liked":false,"id":188762,"user_name":"jack","can_delete":false,"product_type":"c1","uid":1591405,"ip_address":"","ucode":"5EE763FEA7D755","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqqtFTbZcJcKq4icuCF8I3VoLMK3W8sx9askp6vrnY3DLtghI7svXpMIchn44ySY24ic4l8ADWFibLJA/132","comment_is_top":false,"comment_ctime":1584413332,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584413332","product_id":100020801,"comment_content":"setautocommit=0 select的时候就会开启事务（意思是setautocommit=0的时候不需要手动开启事务，只需要手动commit吗？），那setautocommit=1的时候也是这样吗，还是需要手动begin transaction 才会开启事务，有点不太理解","like_count":0},{"had_liked":false,"id":187681,"user_name":"克里斯","can_delete":false,"product_type":"c1","uid":1181844,"ip_address":"","ucode":"00B755C10AC1C3","user_header":"https://static001.geekbang.org/account/avatar/00/12/08/94/2c22bd4e.jpg","comment_is_top":false,"comment_ctime":1584192214,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1584192214","product_id":100020801,"comment_content":"read-view这块讲的很模糊，1，2，3，4是几个事务按什么顺序形成的回滚段？读提交&#47;可重复的隔离级别下，我的理解是一个事务提交后，另一个事务才能看到。","like_count":0},{"had_liked":false,"id":187648,"user_name":"张卓","can_delete":false,"product_type":"c1","uid":1209049,"ip_address":"","ucode":"AD840AF264C32E","user_header":"https://static001.geekbang.org/account/avatar/00/12/72/d9/488739d1.jpg","comment_is_top":false,"comment_ctime":1584183257,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584183257","product_id":100020801,"comment_content":"串行化中的例子，事务A开启后第一个查询就会加读锁，导致事务B无法执行更新吧？","like_count":0},{"had_liked":false,"id":186250,"user_name":"听雨~","can_delete":false,"product_type":"c1","uid":1305251,"ip_address":"","ucode":"EE99F54C7B1C25","user_header":"https://static001.geekbang.org/account/avatar/00/13/ea/a3/ce7b806e.jpg","comment_is_top":false,"comment_ctime":1583807799,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583807799","product_id":100020801,"comment_content":"老师，能讲一下“读提交”模式下dml和undo的关系吗？","like_count":0},{"had_liked":false,"id":185937,"user_name":"忆水寒","can_delete":false,"product_type":"c1","uid":1147453,"ip_address":"","ucode":"E3F86BD8AA8903","user_header":"https://static001.geekbang.org/account/avatar/00/11/82/3d/356fc3d6.jpg","comment_is_top":false,"comment_ctime":1583727275,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583727275","product_id":100020801,"comment_content":"看完了 有种全局的视图了。。。","like_count":0},{"had_liked":false,"id":185254,"user_name":"🤔 🤔 🤔","can_delete":false,"product_type":"c1","uid":1901078,"ip_address":"","ucode":"F1A4B6270675AD","user_header":"https://static001.geekbang.org/account/avatar/00/1d/02/16/dd5cde99.jpg","comment_is_top":false,"comment_ctime":1583547208,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583547208","product_id":100020801,"comment_content":"老师 我其他地方听到建议是吧autocommit关闭的。还有这是为啥。到底是设置1 还是0","like_count":0},{"had_liked":false,"id":184449,"user_name":"youngButcher","can_delete":false,"product_type":"c1","uid":1563339,"ip_address":"","ucode":"2762D20F1E8D19","user_header":"","comment_is_top":false,"comment_ctime":1583317743,"is_pvip":false,"replies":[{"id":"71353","content":"可以","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1583330044,"ip_address":"","comment_id":184449,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583317743","product_id":100020801,"comment_content":"我想问一下隔离级别是针对整个数据库的所有事务还是某一次执行的事务呢。比如上面的事务A和B的例子，能否A和B使用不同的隔离级别呢","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486018,"discussion_content":"可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583330044,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182142,"user_name":"Geek_383ffd","can_delete":false,"product_type":"c1","uid":1834097,"ip_address":"","ucode":"C3E15ED58CB6DB","user_header":"","comment_is_top":false,"comment_ctime":1582719621,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582719621","product_id":100020801,"comment_content":"老师，回滚日志除了记录到日志文件占用存储空间之外是不是在内存中间中也有保存一份缓存，占用内存空间？","like_count":0},{"had_liked":false,"id":180257,"user_name":"李永康Leo","can_delete":false,"product_type":"c1","uid":1035988,"ip_address":"","ucode":"464974917B0A72","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ce/d4/99c857e8.jpg","comment_is_top":false,"comment_ctime":1582242021,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582242021","product_id":100020801,"comment_content":"在“读提交”隔离级别下，这个视图是在每个 SQL 语句开始执行的时候创建的<br>这里没有理解啊，结合文中举的例子，这种隔离级别下为什么v1 v2 v3的值分别是1 2 2呢？","like_count":0},{"had_liked":false,"id":179538,"user_name":"乔丹","can_delete":false,"product_type":"c1","uid":1217413,"ip_address":"","ucode":"D832A9F97A0C7E","user_header":"https://static001.geekbang.org/account/avatar/00/12/93/85/f5d9474c.jpg","comment_is_top":false,"comment_ctime":1582027325,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582027325","product_id":100020801,"comment_content":"1. 对内部人员进行培训长事务是什么，对系统有什么影响，哪些sql是长事务。<br>2. 对sql进行审核。<br>3. 做个sql池，对请求的sql做分析，看是否为长事务等方式。","like_count":0},{"had_liked":false,"id":177243,"user_name":"拾薪","can_delete":false,"product_type":"c1","uid":1173654,"ip_address":"","ucode":"F2AC214BDCBB8D","user_header":"https://static001.geekbang.org/account/avatar/00/11/e8/96/6aeac31e.jpg","comment_is_top":false,"comment_ctime":1581330902,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581330902","product_id":100020801,"comment_content":"请问老师，工程中判断“长事务”有什么经验或者标准吗？一组业务中，什么样的事务会被算作长事务？","like_count":0},{"had_liked":false,"id":177023,"user_name":"木得感情的编码机器","can_delete":false,"product_type":"c1","uid":1810051,"ip_address":"","ucode":"9C6CD47ADCB8E6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK0uyg1IicbEhLwsgM2A2ROoyVdWdmUqZfQfs6G67w9m3hdRNBMOQJatQoACj3qNGgj2KVIgricaYiaQ/132","comment_is_top":false,"comment_ctime":1581251810,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1581251810","product_id":100020801,"comment_content":"在MySQL 8中做了测试：<br>全局隔离级别为可重复读，有表T，其中一行数据id=15, name=123<br>---------------------------<br>其中A事务代码如下：<br>START TRANSACTION;<br>SET SESSION TRANSACTION ISOLATION LEVEL REPEATABLE READ;<br>select * from T where id = 15;<br>DO SLEEP(5);<br>select * from T where id = 15;<br><br>COMMIT;<br>-----------------------------------<br>B事务代码如下：<br>START TRANSACTION;<br>SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED;<br><br>update T set name = &#39;123x&#39; where id = 15;<br><br>COMMIT;<br>--------------------------------<br>先执行事务A，然后迅速执行事务B，事务A在执行中会延时5秒钟，让事务B有足够的时间完成。<br><br>结果：事务A第一次查询出name=123，第二次查询出name=123x<br><br>按照可重复读隔离的设定，事务A应该两次查出的name是相同的才对，为什么事务B的提交影响到了事务A的第二次查询？","like_count":0,"discussions":[{"author":{"id":1646052,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1d/e4/517fbbbf.jpg","nickname":"白芷","note":"","ucode":"D37530955CF919","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":165711,"discussion_content":"mysql-8.0.16 测试了一下 我的A第二次查询出的还是123啊...开两个console,A先执行到sleep之前，然后执行B，然后继续执行Asleep之后的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581316214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1810051,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK0uyg1IicbEhLwsgM2A2ROoyVdWdmUqZfQfs6G67w9m3hdRNBMOQJatQoACj3qNGgj2KVIgricaYiaQ/132","nickname":"木得感情的编码机器","note":"","ucode":"9C6CD47ADCB8E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1646052,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1d/e4/517fbbbf.jpg","nickname":"白芷","note":"","ucode":"D37530955CF919","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":167512,"discussion_content":"后来经过多次测试，发现是对的了，我也不知道为什么，可能和我用的客户端管理工具有关","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581505170,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":165711,"ip_address":""},"score":167512,"extra":""}]}]},{"had_liked":false,"id":176940,"user_name":"凡","can_delete":false,"product_type":"c1","uid":1721168,"ip_address":"","ucode":"80C2A6452AB9EA","user_header":"https://static001.geekbang.org/account/avatar/00/1a/43/50/abb4ca1e.jpg","comment_is_top":false,"comment_ctime":1581232140,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581232140","product_id":100020801,"comment_content":"做长事务的报警功能，定期查询超过指定时间的事务，然后邮件预警","like_count":0},{"had_liked":false,"id":176820,"user_name":"x_x","can_delete":false,"product_type":"c1","uid":1833093,"ip_address":"","ucode":"DD1ABF8E49DC1E","user_header":"https://static001.geekbang.org/account/avatar/00/1b/f8/85/9a9336c4.jpg","comment_is_top":false,"comment_ctime":1581173914,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1581173914","product_id":100020801,"comment_content":"关于回滚，更新同一条数据，原数据中字段值为1，事务A要将此字段的值修改为2，事务B修改为3，假设事务A B开始读取的字段值都为1，当事务B成功提交后，事务A进行回滚，此时事务A回滚会讲字段修改为1还是现在字段的真实值3？","like_count":0,"discussions":[{"author":{"id":1105354,"avatar":"https://static001.geekbang.org/account/avatar/00/10/dd/ca/fe3f7f0e.jpg","nickname":"T.Y","note":"","ucode":"243C96604F1CAA","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":205091,"discussion_content":"事务A未提交时，事务B会等待事务A的行锁释放，所以不存在事务A未提交or回滚时，事务B的update操作只会等待","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584264382,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":176437,"user_name":"ipofss","can_delete":false,"product_type":"c1","uid":1018620,"ip_address":"","ucode":"DE3061C9259F9E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8a/fc/d1dd57dd.jpg","comment_is_top":false,"comment_ctime":1581060575,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581060575","product_id":100020801,"comment_content":"事务的特性：原子性、一致性、隔离性、持久性。事务的实现是由MySQL的引擎层做的，目前只有Innodb支持事务。MySQL默认的事务隔离级别是可重复读，即在一个事务里，对于某个记录的读取多次是一样的，即使在事务的执行过程中，有其他事务更改了记录我也不去读取。","like_count":0},{"had_liked":false,"id":176105,"user_name":"微末凡尘","can_delete":false,"product_type":"c1","uid":1099525,"ip_address":"","ucode":"25EDFD0914D0F4","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/05/19c5c255.jpg","comment_is_top":false,"comment_ctime":1580957885,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580957885","product_id":100020801,"comment_content":"读未提交：一个事务还未提交，别的事务就可以看到<br>读提交：一个事务提交之后才能被别的事务看到<br>可重复读：一个事务执行过程中看到的数据是一致的，未提交的更改对其他的事务不可见<br>串行化：一个事务完成后才能执行另外一个事务<br>安全性依次增高，性能依次降低","like_count":0},{"had_liked":false,"id":175299,"user_name":"一条鲁蛇🐍","can_delete":false,"product_type":"c1","uid":1515891,"ip_address":"","ucode":"9413747008D3C0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJlrDU3ia4zj0zlNEt27JIrkwIuJo7kA3icD21xuLeSia22FNVfknibrMXSRPpQRfX4uv3oBeJQ7xc5iaA/132","comment_is_top":false,"comment_ctime":1580648255,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580648255","product_id":100020801,"comment_content":"老师，有两点疑惑：<br>1、在RR下，如果事务a在t1时间启动了，那么是不是，数据库在t1时间之后产生的事务(无论是否提交)的undo数据都需要保存下来，直到事务a结束才能释放?<br>2、若是在RC模式下，set autocommit=0，一个长时间不commit&#47;rollback的select也就构成不了一个长事务了，是不？","like_count":0},{"had_liked":false,"id":174193,"user_name":"java123","can_delete":false,"product_type":"c1","uid":1285084,"ip_address":"","ucode":"214E432FE60CAA","user_header":"https://static001.geekbang.org/account/avatar/00/13/9b/dc/a416f357.jpg","comment_is_top":false,"comment_ctime":1580056353,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580056353","product_id":100020801,"comment_content":"四特性:原子性、一致性、隔离性、持久性","like_count":0},{"had_liked":false,"id":173797,"user_name":"brucelin99","can_delete":false,"product_type":"c1","uid":1031123,"ip_address":"","ucode":"70C818634843AF","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKr0veyMel7mqLpTWQaicWhLicwbSzSUkqon512o8EExpGb5qq8Qic7qYwlEFr942gJFgPia3Rg5Z6sUw/132","comment_is_top":false,"comment_ctime":1579693648,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579693648","product_id":100020801,"comment_content":"四种事务隔离（读提交，读未提交，可重复读，串行化），长事务，自动提交","like_count":0},{"had_liked":false,"id":173791,"user_name":"天亮前说晚安","can_delete":false,"product_type":"c1","uid":1541014,"ip_address":"","ucode":"1D82EE562A7C71","user_header":"https://static001.geekbang.org/account/avatar/00/17/83/96/73ff13a0.jpg","comment_is_top":false,"comment_ctime":1579689475,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579689475","product_id":100020801,"comment_content":"5.5以前回滚日志不会清理，那以后的版本呢？现在最常用的是5.7版本<br>","like_count":0},{"had_liked":false,"id":173782,"user_name":"mgs2002","can_delete":false,"product_type":"c1","uid":1812970,"ip_address":"","ucode":"F5931108BD509B","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a9/ea/5bfce6c5.jpg","comment_is_top":false,"comment_ctime":1579684999,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579684999","product_id":100020801,"comment_content":"简单总结<br>1.  事务隔离级别：读未提交，读已提交，不可重复读，串行化<br>区别：<br>读未提交： 事务更新未提交的数据另外一个事务可以获取<br>读已提交： 事务对数据做的变更只有提交才会另外事务获取<br>不可重复读：一个事务开启事务后会生成一个视图，其他事务看到的数据跟这个事务未提交前的一致<br>串行化: 最高的事务级别，读数据的时候加读锁，写数据的时候加写锁，后面的事务必须等待前一个事务执行完毕，完全防止并发操作的问题<br>2. 事务隔离机制使用数据库多版本并发机制实现（MVCC），不同时刻开启的事务会生成不同版本的数据快照（视图），看起来就像是同一条记录在系统里有多个版本，每次更新操作都会记录回滚日志，当事务结束后自动删除回滚日志。<br>3. 不要使用长事务，因为长事务一般执行时间比较长，事务里面包含了很老的事务视图，非常占用磁盘空间，而且也会占用锁资源导致数据库效率降低甚至挂掉。<br>课后思考题<br>避免长事务可以采取缩短事务的执行范围，只在需要使用事务的方法开启，避免长时间占用，定期查询库里是否有长事务,如果无法避免，保证逻辑日志空间足够用，并且支持动态日志空间增长","like_count":0},{"had_liked":false,"id":173692,"user_name":"赵磊","can_delete":false,"product_type":"c1","uid":1481655,"ip_address":"","ucode":"18F3C2CC5040F9","user_header":"https://static001.geekbang.org/account/avatar/00/16/9b/b7/314ae48b.jpg","comment_is_top":false,"comment_ctime":1579662220,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1579662220","product_id":100020801,"comment_content":"老师，看了文章后有两个问题不太明白，希望得到你的解答<br>1.读已提交的实现是执行每条sql都创建一个视图，那为什么不直接去数据库取呢，这种实现是怎么保证读到的数据不是脏数据呢？<br>2.可重复读是事务开启后创建一个视图，那是不是可重复读就解决了幻读的情况，但实际中可重复读情况依然存在幻读","like_count":0,"discussions":[{"author":{"id":1107690,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e6/ea/cf8ffc85.jpg","nickname":"shijiazo","note":"","ucode":"E2F32581829F11","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":149729,"discussion_content":"1. 这涉及到MVCC的详细原理，可以看第8篇，特别的，针对读提交，老师有一张图详细解释了“图 8 读提交隔离级别下的事务状态图”。\n2. MySQL的可重复读隔离级别引入了间隙锁，能解决幻读的问题。关于幻读，详见老师的第20篇有详细介绍。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579775829,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":173430,"user_name":"ad","can_delete":false,"product_type":"c1","uid":1060556,"ip_address":"","ucode":"7AC650031EB7A9","user_header":"https://static001.geekbang.org/account/avatar/00/10/2e/cc/964a8bcb.jpg","comment_is_top":false,"comment_ctime":1579534313,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579534313","product_id":100020801,"comment_content":"老师你好，insert语句的undolog是不是在提交完成就可以立即删除了？ ","like_count":0},{"had_liked":false,"id":173339,"user_name":"飘逸的翔云","can_delete":false,"product_type":"c1","uid":1254012,"ip_address":"","ucode":"0E756D3AC3D889","user_header":"https://static001.geekbang.org/account/avatar/00/13/22/7c/7169323f.jpg","comment_is_top":false,"comment_ctime":1579507563,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579507563","product_id":100020801,"comment_content":"很多开发都用注解来使用事务，当这个方法处理逻辑耗时很长，比如要调用第三方接口并等待返回结果再处理时，就无形中开启了很多长事务，最好是在需要操作数据库时才开启事务","like_count":0},{"had_liked":false,"id":170087,"user_name":"寻找的人cs","can_delete":false,"product_type":"c1","uid":1293788,"ip_address":"","ucode":"CA12463D24A8E1","user_header":"https://static001.geekbang.org/account/avatar/00/13/bd/dc/1ea396d2.jpg","comment_is_top":false,"comment_ctime":1578528054,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578528054","product_id":100020801,"comment_content":"将大事务分解为小事务？","like_count":0},{"had_liked":false,"id":169886,"user_name":"景梦园","can_delete":false,"product_type":"c1","uid":1620479,"ip_address":"","ucode":"0A17708457ACB2","user_header":"https://static001.geekbang.org/account/avatar/00/18/b9/ff/ea6c2e86.jpg","comment_is_top":false,"comment_ctime":1578468547,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578468547","product_id":100020801,"comment_content":"“这个事务就启动了，而且并不会自动提交。这个事务持续存在直到你主动执行 commit 或 rollback 语句，或者断开连接”——请问老师，断开连接，对于事务生命周期，到底算commit还是rollback？","like_count":0},{"had_liked":false,"id":169309,"user_name":"羁绊12221","can_delete":false,"product_type":"c1","uid":1463686,"ip_address":"","ucode":"15B47C5053388A","user_header":"https://static001.geekbang.org/account/avatar/00/16/55/86/ca7c94ce.jpg","comment_is_top":false,"comment_ctime":1578311953,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578311953","product_id":100020801,"comment_content":"1. 事务是在存储引擎层实现的，InnoDB 支持事务，MyISAM 不支持事务<br>2. 事务 ACID 特性：<br>        Atomicity -- 原子性<br>\t\tConsistency -- 一致性<br>\t\tIsolation -- 隔离性<br>\t\tDurability -- 持久性<br>3. 事务隔离不好可能引发的问题：脏读、不可重复读、幻读<br>4. 事务隔离性越好，效率(并行能力)越低<br>5. SQL 标准的事务隔离级别包括：<br>\t   可重复读（rr）：一个事务执行过程中看到的数据，总是跟这个事务在启动时看到的数据是一致的，未提交的变更对其他的事务也是不可见的。<br>\t   读已提交（rc）：一个事务提交之后，它做的变更才能被其他事务看到<br>\t   读未提交（ru）：一个事务还未提交，它所做的变更就能被其他事务看到<br>\t   串行化（serializable）：对于同一行记录，读写都会加锁，必须等待持锁事务完成。<br>6. 事务隔离级别通过创建视图(read-view)来实现，访问的时候以视图的逻辑结果为准：<br>\t   可重复读：视图是在事务启动时创建的，整个事务存在期间都用这个视图。<br>\t   读已提交：视图是在每个 SQL 开始执行的时候创建的<br>7. transaction_isolation 参数设定事务隔离级别，mysql 默认是 rr。oracle 默认是 rc，做数据迁移时，一定要保证一致。<br>8. 多版本并发控制(MCVV)：每条记录在被更新的时候都会在回滚段记一条回滚操作，记录上的最新值通过回滚操作都可以得到前一个状态的值。<br>   查询同一条记录，不同时刻启动的事务会有不同的 read-view。<br>9. 当某条回滚日志不被任何事物需要，也就是说系统里没有比这个回滚日志更老的 read-view 时候，该回滚日志会被系统删除。<br>10. 对于可重复读，长事务意味着系统里存在很老的事务视图，在事务提交之前，回滚记录必须保留着，占用大量空间。<br>    对于读已提交，事务视图是在SQL执行的时候创建的，因此长事务未必一定存在老的事务视图，回滚日志未必会很多。<br>\t但是长事务中如果存在长查询，并且表上存在多个短事务，可能会产生多条回滚记录。<br>11. mysql 5.5 及之前的版本回滚日志和数据字典一起放在ibdata文件里，即使长事务提交，回滚段被清理，文件也不会变小。一般只能重建整个库。<br>12. 事务启动方式：<br>\t   显式启动事务：begin&#47;start transaction ... commit&#47;rollback<br>\t   隐式启动事务：autocommit默认on，表示会自动启动事务并自动提交。当autocommit=0时，就会关闭自动提交，此时即便是select语句也会启动事务，<br>\t                 并不会自动提交，除非执行commit&#47;rollback 或者断开连接。<br>\t因此建议维持默认的autocommit=1开启自动提交，需要使用事务的时候，显式启动。<br>\t频繁使用事务的应用，为了减少交互次数，可以 begin&#47;start transaction ... commit work and chain ，提交并自动启动下一个事务<br>13. 查询长事务：select * from information_schema.innodb_trx where TIME_TO_SEC(timediff(now(),trx_started))&gt;60","like_count":0},{"had_liked":false,"id":167452,"user_name":"十大杰出青年","can_delete":false,"product_type":"c1","uid":1559178,"ip_address":"","ucode":"BAB4AA12604CF6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/a5U0nqaicLy5ZJkESxBd5lMicNQcTTDK8vURyyWiabHxic7vS1VVk7HWTZg6ltyWJ3n9jb3Gq554ibfjsf7bv1v1Sdw/132","comment_is_top":false,"comment_ctime":1577805416,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577805416","product_id":100020801,"comment_content":"老师，在事务中对一个记录进行更新，但事务并没有提交，这时就会创建这个记录的回滚日志吗？","like_count":0},{"had_liked":false,"id":167313,"user_name":"闫冬","can_delete":false,"product_type":"c1","uid":1109691,"ip_address":"","ucode":"1725E869D5A3D3","user_header":"https://static001.geekbang.org/account/avatar/00/10/ee/bb/7afd6824.jpg","comment_is_top":false,"comment_ctime":1577761227,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577761227","product_id":100020801,"comment_content":"终于弄明白事务了","like_count":0},{"had_liked":false,"id":163800,"user_name":"PHP是世界上最好的需要","can_delete":false,"product_type":"c1","uid":1655326,"ip_address":"","ucode":"EE23A54B831D17","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIma3PJUyqDEQKt40nEh3Jt840af6hKnuK8k8dIscm43EUzJwLvynbxRnvO9Ivibv7KssUSqoBdY1w/132","comment_is_top":false,"comment_ctime":1576804700,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576804700","product_id":100020801,"comment_content":"mysql的默认隔离级别是rr，为什么呢","like_count":0},{"had_liked":false,"id":163385,"user_name":"13501018051","can_delete":false,"product_type":"c1","uid":1218076,"ip_address":"","ucode":"D90E50B9C249AE","user_header":"","comment_is_top":false,"comment_ctime":1576716033,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576716033","product_id":100020801,"comment_content":"mysql 设置了事务的隔离级别后， 程序端还可以更改吗？ 记得在用spring的事务的时候，是可以设置isolation的","like_count":0},{"had_liked":false,"id":161824,"user_name":"Joker","can_delete":false,"product_type":"c1","uid":1156592,"ip_address":"","ucode":"126AF848001A1E","user_header":"https://static001.geekbang.org/account/avatar/00/11/a5/f0/8648c464.jpg","comment_is_top":false,"comment_ctime":1576344469,"is_pvip":false,"replies":[{"id":"61642","content":"这个不是读串行呀，<br>`REPEATABLE-READ` 就是可重复读","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1576393613,"ip_address":"","comment_id":161824,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1576344469","product_id":100020801,"comment_content":"老师，我用mysql8 差了一下，那个参数 `transaction_isolation` 是  `REPEATABLE-READ`<br>好像是读串行化。这个权限是越来越严了吗。。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477871,"discussion_content":"这个不是读串行呀，\n`REPEATABLE-READ` 就是可重复读","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576393613,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159415,"user_name":" 臣馟飞扬","can_delete":false,"product_type":"c1","uid":1116188,"ip_address":"","ucode":"F2F882B7678055","user_header":"https://static001.geekbang.org/account/avatar/00/11/08/1c/ef15e661.jpg","comment_is_top":false,"comment_ctime":1575617752,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575617752","product_id":100020801,"comment_content":"在可重复读级别下，如果用户发生了一笔新的交易，也就是insert一条新的数据，这时候应该会发生幻读吧？还能保住用户数据校对的正确行吗？","like_count":0},{"had_liked":false,"id":159208,"user_name":"chuck","can_delete":false,"product_type":"c1","uid":1692886,"ip_address":"","ucode":"2229324EB1CD8B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKx6EdicYYuYK62r5aphMtYw6HskzPhbI3xRicxWticwKMhaO3Z63OYmr55FcjvNRClg93yhQ1U2BQXw/132","comment_is_top":false,"comment_ctime":1575560238,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575560238","product_id":100020801,"comment_content":"有个初级的问题，想请教下。select查询是事务吗？很多人告诉我select 不是事务。或者可以这么说，在数据库的autocommit=1的情况下，我在navicat中执行一条SQL查询语句，没有显式的开启事务(begin或start transaction)，这会是一个事务吗？<br>","like_count":0},{"had_liked":false,"id":158419,"user_name":"我已经设置了昵称","can_delete":false,"product_type":"c1","uid":1364034,"ip_address":"","ucode":"ED672C5EBDBDC4","user_header":"https://static001.geekbang.org/account/avatar/00/14/d0/42/6fd01fb9.jpg","comment_is_top":false,"comment_ctime":1575366894,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575366894","product_id":100020801,"comment_content":"读提交情况下，视图是在sql语句开始时候创建的，对于老师那个例子，事务A第二次查询V1的值不是会查到事务B的将1修改为2的sql之后创建的视图吗?","like_count":0},{"had_liked":false,"id":157756,"user_name":"尹希闯","can_delete":false,"product_type":"c1","uid":1310826,"ip_address":"","ucode":"A35F70179808D8","user_header":"https://static001.geekbang.org/account/avatar/00/14/00/6a/da96c764.jpg","comment_is_top":false,"comment_ctime":1575255754,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575255754","product_id":100020801,"comment_content":"感觉可重复读把我绕住了，谁能解释清楚其中一致性和锁的关系啊？a没提交之前是不是有行锁，导致bc事务没有真执行完毕。是不是a提交了之后才会执行bc事务。","like_count":0},{"had_liked":false,"id":155125,"user_name":"耶律妙月","can_delete":false,"product_type":"c1","uid":1124520,"ip_address":"","ucode":"9520D0B8968F5D","user_header":"https://static001.geekbang.org/account/avatar/00/11/28/a8/ced75647.jpg","comment_is_top":false,"comment_ctime":1574649113,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1574649113","product_id":100020801,"comment_content":"关于回滚日志还有点疑问，在可重复读级别下，如果事务A开启后读一条数据值为3，这时候就生成了视图v1。然后事务B开启后把这条记录改成4，并提交。此时事务A再读一遍其实还是3 。问题是：第二次读到底是直接从视图v1里读，还是根据现有的4加上回滚日志读出3？？如果是前者，那长事务为什么还要保留回滚日志？？","like_count":0,"discussions":[{"author":{"id":1762252,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/e3/cc/0947ff0b.jpg","nickname":"nestle","note":"","ucode":"469800BED81B54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":88644,"discussion_content":"原文：对于 read-view A，要得到 1，就必须将当前值依次执行图中所有的回滚操作得到。\n所以感觉是后者。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576722487,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154772,"user_name":"Russell","can_delete":false,"product_type":"c1","uid":1376931,"ip_address":"","ucode":"519D5A04651E5D","user_header":"https://static001.geekbang.org/account/avatar/00/15/02/a3/b7e7a787.jpg","comment_is_top":false,"comment_ctime":1574560270,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574560270","product_id":100020801,"comment_content":"₍ᐢ •⌄• ᐢ₎如何避免，主要是人的问题。<br>1. 先定规律，同步观点，达成共识。<br>2. 从框架层面，防止误触。<br>3. 定期查询，做好监控。报警<br>","like_count":0},{"had_liked":false,"id":154114,"user_name":"像风行了八千里","can_delete":false,"product_type":"c1","uid":1296060,"ip_address":"","ucode":"756B259C0EC2A4","user_header":"https://static001.geekbang.org/account/avatar/00/13/c6/bc/ccb9cf1c.jpg","comment_is_top":false,"comment_ctime":1574382645,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574382645","product_id":100020801,"comment_content":"在“可重复读”隔离级别下，这个视图是在事务启动时创建的，整个事务存在期间都用这个视图。<br><br>视图就是快照吧 如果是的话rr价格下快照不是在执行第一天dml语句的时候创建的嘛","like_count":0},{"had_liked":false,"id":153788,"user_name":"Trouver âme","can_delete":false,"product_type":"c1","uid":1323966,"ip_address":"","ucode":"F84C69721CDC9C","user_header":"https://static001.geekbang.org/account/avatar/00/14/33/be/be07474f.jpg","comment_is_top":false,"comment_ctime":1574307682,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574307682","product_id":100020801,"comment_content":"set autocommit=0，为什么select会开启事务1？ 其实客户端应该设置为0吧，这样每次启动事务，不会先发送autocommit=0,然后在事务结束再设置autocommit=1。我的问题是select不是(for update)的情况下,会开启事务？","like_count":0},{"had_liked":false,"id":153619,"user_name":"KK","can_delete":false,"product_type":"c1","uid":1324863,"ip_address":"","ucode":"FFC31A3FE3A285","user_header":"https://static001.geekbang.org/account/avatar/00/14/37/3f/a9127a73.jpg","comment_is_top":false,"comment_ctime":1574273220,"is_pvip":false,"discussion_count":1,"race_medal":1,"score":"1574273220","product_id":100020801,"comment_content":"老师你好，请教一个问题：mysql事务只在同一个库下有效，跨库的话，应该就不起作用了吧。","like_count":0,"discussions":[{"author":{"id":1109527,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ee/17/32183260.jpg","nickname":"逍遥魔君","note":"","ucode":"6EDD906634D7CB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":230688,"discussion_content":"起作用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586762639,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153397,"user_name":"Simple life","can_delete":false,"product_type":"c1","uid":1571460,"ip_address":"","ucode":"1902D7F72FB43F","user_header":"https://static001.geekbang.org/account/avatar/00/17/fa/84/f01d203a.jpg","comment_is_top":false,"comment_ctime":1574229931,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574229931","product_id":100020801,"comment_content":"感觉没必要可重复读的隔离级别，可重复读一般是操作两次相同的读操作，一般业务在一个事务里面只会读一次，拿到数据进行操作，","like_count":0},{"had_liked":false,"id":153393,"user_name":"the geek","can_delete":false,"product_type":"c1","uid":1506723,"ip_address":"","ucode":"71DECBC814A539","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLz3icr3mGs5ib8FbSPQZ2ic3ib90mHkd1btQrmGacZjJxfYXrerIdaTxglKyCicFzLcEAb6deC2cWjE5Q/132","comment_is_top":false,"comment_ctime":1574229694,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574229694","product_id":100020801,"comment_content":"&gt; 对于 read-view A，要得到 1，就必须将当前值依次执行图中所有的回滚操作得到。  <br>通过这句话，证明每个时刻开启的视图代表每个时刻的mysql。","like_count":0},{"had_liked":false,"id":152978,"user_name":"慌张而黑糖","can_delete":false,"product_type":"c1","uid":1638878,"ip_address":"","ucode":"B4416885A301C8","user_header":"https://static001.geekbang.org/account/avatar/00/19/01/de/bf524817.jpg","comment_is_top":false,"comment_ctime":1574132848,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574132848","product_id":100020801,"comment_content":"老师想问一下，这个串行化的隔离级别，为什么会在执行“将1改成2”的时候锁住，这里加的锁是什么类型的呢。","like_count":0},{"had_liked":false,"id":150934,"user_name":"看，有只猪","can_delete":false,"product_type":"c1","uid":1137727,"ip_address":"","ucode":"F9BB302BC71CE8","user_header":"https://static001.geekbang.org/account/avatar/00/11/5c/3f/34e5c750.jpg","comment_is_top":false,"comment_ctime":1573631661,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573631661","product_id":100020801,"comment_content":"老师您好，针对事务隔离的实现我有一个疑问？<br>如您给的图，有三个事务ABC，如果事务A失败了，回滚，是否会出现其他事务的提交被回退掉或其他事务提交会覆盖A事务的回退，如果是，是否意味着前三种隔离级别不适用于写操作，只适用于读操作，或者需要在业务中使用乐观锁进行判断呢？","like_count":0},{"had_liked":false,"id":149500,"user_name":"我又不乱来","can_delete":false,"product_type":"c1","uid":1221356,"ip_address":"","ucode":"737405E2339A8D","user_header":"https://static001.geekbang.org/account/avatar/00/12/a2/ec/205fd50c.jpg","comment_is_top":false,"comment_ctime":1573258241,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573258241","product_id":100020801,"comment_content":"我还是没明白，老师。回滚端是视图实现的？还是？","like_count":0},{"had_liked":false,"id":149220,"user_name":"云师兄","can_delete":false,"product_type":"c1","uid":1205777,"ip_address":"","ucode":"EB19F80070FE23","user_header":"https://static001.geekbang.org/account/avatar/00/12/66/11/f7408e3e.jpg","comment_is_top":false,"comment_ctime":1573176522,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573176522","product_id":100020801,"comment_content":"mysql的事务首先区分了不同场景，读未提交的最新数据，读提交的前后一致性，可重复度的视图机制，串行化的锁方案。<br>可重复读回滚日志机制下的，多版本mvcc的支持更是空间换时间方案的优秀支持。<br>但是长事务的使用也会带来回滚日志的大量占用问题，这个需要在事务提交方面做到合理规避。","like_count":0},{"had_liked":false,"id":148835,"user_name":"枫","can_delete":false,"product_type":"c1","uid":1310357,"ip_address":"","ucode":"819CA7B97DD7E2","user_header":"https://static001.geekbang.org/account/avatar/00/13/fe/95/39856e4e.jpg","comment_is_top":false,"comment_ctime":1573093316,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573093316","product_id":100020801,"comment_content":"老师，一般我们为了让事务变小，在一个主方法上不开启事务，而是主方法里有更新操作时，先把值set进bean里，然后下面再起一个方法（这个方法上开启事务），统一更新或新增。这样子对吗？但是这样子也有很多坑。1、子方法不能是private 2、主方法调子方法时，不能this.update()调，要AopContext.currentProxy().update() 才可以。老师我说的对吗 ","like_count":0},{"had_liked":false,"id":148220,"user_name":"Geek_noble","can_delete":false,"product_type":"c1","uid":1628846,"ip_address":"","ucode":"6E4130741EBEA9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/NbXvhMuiaBw7mIv7749kCTic4LahtLd1XMgcqMsHgBD2DwVb4RQeCLnC5GGFKFPj0vUGVicghxX0D2ib2WySlFficUw/132","comment_is_top":false,"comment_ctime":1572960124,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572960124","product_id":100020801,"comment_content":"如果隔离级别设置为RR以下，比如RC或RU。这个时候还有视图的概念吗？<br>如果没有，是不是在较低的事务隔离级别下，可以容忍长事务的出现？","like_count":0},{"had_liked":false,"id":147049,"user_name":"王心凌","can_delete":false,"product_type":"c1","uid":1593376,"ip_address":"","ucode":"A51E0C56B6AC73","user_header":"https://static001.geekbang.org/account/avatar/00/18/50/20/34bdc8e2.jpg","comment_is_top":false,"comment_ctime":1572777251,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572777251","product_id":100020801,"comment_content":"这篇我快背下来了","like_count":0},{"had_liked":false,"id":146983,"user_name":"sky","can_delete":false,"product_type":"c1","uid":1106096,"ip_address":"","ucode":"4991F5F62477FB","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/b0/9396e7fc.jpg","comment_is_top":false,"comment_ctime":1572751044,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572751044","product_id":100020801,"comment_content":"老师，请问删除大表的全部数据，有什么好的方式吗","like_count":0},{"had_liked":false,"id":145406,"user_name":"牛年榴莲","can_delete":false,"product_type":"c1","uid":1183703,"ip_address":"","ucode":"230C076193C6C0","user_header":"https://static001.geekbang.org/account/avatar/00/12/0f/d7/31d07471.jpg","comment_is_top":false,"comment_ctime":1572267595,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572267595","product_id":100020801,"comment_content":"老师好，备份数据库的方法会讲一下吗？","like_count":0},{"had_liked":false,"id":144666,"user_name":"牛年榴莲","can_delete":false,"product_type":"c1","uid":1183703,"ip_address":"","ucode":"230C076193C6C0","user_header":"https://static001.geekbang.org/account/avatar/00/12/0f/d7/31d07471.jpg","comment_is_top":false,"comment_ctime":1571992499,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1571992499","product_id":100020801,"comment_content":"引擎这个词怎么理解？发动机吗？","like_count":0,"discussions":[{"author":{"id":1109527,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ee/17/32183260.jpg","nickname":"逍遥魔君","note":"","ucode":"6EDD906634D7CB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":230690,"discussion_content":"类似操作系统","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586762702,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142127,"user_name":"蚂蚁内推+v","can_delete":false,"product_type":"c1","uid":1050508,"ip_address":"","ucode":"24B10AEE54B3FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/07/8c/0d886dcc.jpg","comment_is_top":false,"comment_ctime":1571297631,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571297631","product_id":100020801,"comment_content":"林老师，您好，请教一个问题，为什么默认使用可重复读的隔离级别，数据发生变化不是应该及时看到吗，可重复读在实际应用中有什么意义？<br>","like_count":0},{"had_liked":false,"id":141031,"user_name":"沐","can_delete":false,"product_type":"c1","uid":1326537,"ip_address":"","ucode":"678F6A0C778CDD","user_header":"https://static001.geekbang.org/account/avatar/00/14/3d/c9/a1e6a307.jpg","comment_is_top":false,"comment_ctime":1571104173,"is_pvip":false,"discussion_count":0,"race_medal":3,"score":"1571104173","product_id":100020801,"comment_content":"事务就是要保证一组数据库操作要么全部成功，要么全部失败。<br>事务的特性：ACID(原子性，一致性，隔离性，持久性)<br>当数据库上有多个事务同时执行的时候，就可能出现脏读，不可重复复读，幻读的问题，为了解决这些问题，就有了隔离级别的概念。<br>SQL标准的事务隔离级别包括：读未提交，读提交，可重复读和串行话。<br>读未提交：一个事务还没提交时，它做的变更就能被别的事务看到。<br>读提交：一个事务提交之后，它做的变更才能被其它事务看到。<br>可重复读：一个事务执行过程中看到的数据，总是跟这个事务在启动时看到的数据是一致的。<br>串行化：对于同一行记录，写会加写锁，读会加多锁。当出现读写锁冲突时，后访问的事务必须等前一个事务执行完成，才能继续执行。","like_count":0},{"had_liked":false,"id":140114,"user_name":"ice","can_delete":false,"product_type":"c1","uid":1138611,"ip_address":"","ucode":"CAAAC6F325B909","user_header":"https://static001.geekbang.org/account/avatar/00/11/5f/b3/9e5f3cc8.jpg","comment_is_top":false,"comment_ctime":1570810823,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570810823","product_id":100020801,"comment_content":"我现在业务实现中对事物有要求，也又很多查询，所以用的是两个句柄，一个自动提交用于查询，一个非自动提交用于更新操作，如果有主从的情况下，自动提交的句柄用于查询从库。希望有更好的方案","like_count":0},{"had_liked":false,"id":138514,"user_name":"happiness","can_delete":false,"product_type":"c1","uid":1026587,"ip_address":"","ucode":"C5F25D57C7A1DC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/aa/1b/b43c8519.jpg","comment_is_top":false,"comment_ctime":1570288054,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570288054","product_id":100020801,"comment_content":"只有灵活的将大事务拆分小事务来处理，相关的事务使用一个全局唯一标识来关联，达到幂等操纵的目的。代价就是实现相对复杂，而且数据会出现短暂的不一致。这个需要在展现层做一些特殊的处理来实现。例如支付宝，微信的支付应该是采用的这种模式。","like_count":0},{"had_liked":false,"id":138064,"user_name":"斐波那契","can_delete":false,"product_type":"c1","uid":1464006,"ip_address":"","ucode":"85E2EBC01392B1","user_header":"https://static001.geekbang.org/account/avatar/00/16/56/c6/0b449bc6.jpg","comment_is_top":false,"comment_ctime":1570005738,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1570005738","product_id":100020801,"comment_content":"老师 关于事务隔离 我有个问题 在mydql里设置的事务隔离跟框架里（例如springboot）设置的事务隔离是一回事么 比如mysql里设置了提交读 但是框架里设置了可重复读 这个时候隔离级别是什么？","like_count":0,"discussions":[{"author":{"id":1437292,"avatar":"https://static001.geekbang.org/account/avatar/00/15/ee/6c/246fa0d1.jpg","nickname":"Mr.差不多","note":"","ucode":"946555FCAE710B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41931,"discussion_content":"我觉得你在框架里设置相当于设置的是session级别的，优先走session级别的。   这时候隔离级别应该是可重复读","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572535379,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1464006,"avatar":"https://static001.geekbang.org/account/avatar/00/16/56/c6/0b449bc6.jpg","nickname":"斐波那契","note":"","ucode":"85E2EBC01392B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1437292,"avatar":"https://static001.geekbang.org/account/avatar/00/15/ee/6c/246fa0d1.jpg","nickname":"Mr.差不多","note":"","ucode":"946555FCAE710B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41954,"discussion_content":"按你这么说 如果mysql里设置的是最高的串行级别框架里设置可重复读 这个时候也还是算可重复读 是这样子吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572538035,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":41931,"ip_address":""},"score":41954,"extra":""}]}]},{"had_liked":false,"id":137558,"user_name":"a(๑≖ิټ≖ิ)✌","can_delete":false,"product_type":"c1","uid":1392431,"ip_address":"","ucode":"AEF9B5CA1605DF","user_header":"https://static001.geekbang.org/account/avatar/00/15/3f/2f/8513c4d3.jpg","comment_is_top":false,"comment_ctime":1569776232,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1569776232","product_id":100020801,"comment_content":"要考虑避免长事务，<br>1. 首先考虑为什么要避免长事务，也就是分析长事务的坏处：如文中说，占用空间和锁资源。<br>2.考虑什么业务场景下会出现长事务，要解决需要<br>2.1 规避这种场景，也就是寻找替代方案  或者<br>2.2 优化这种场景，通过业务拆分或其他手段，将一个长事务拆分成多个短事务，如果不可拆分，那就尽可能改良业务场景，使这种业务场景尽可能短小，我是从业务的角度考虑的，其他方面。。。我猛一下也想不到了，，，我们一起删库跑路吧","like_count":0},{"had_liked":false,"id":136083,"user_name":"12.05","can_delete":false,"product_type":"c1","uid":1671354,"ip_address":"","ucode":"ED5FE10E52B28C","user_header":"https://static001.geekbang.org/account/avatar/00/19/80/ba/5b893a89.jpg","comment_is_top":false,"comment_ctime":1569340729,"is_pvip":false,"replies":[{"id":"52153","content":"看第八篇哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1569379435,"ip_address":"","comment_id":136083,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569340729","product_id":100020801,"comment_content":"请问老师，innodb实现事务使用的read-view和我们平时使用的MySQL的视图view是同一个东西吗？<br>read-view 保存是内容是什么？如果要保证数据可重复读，是要保存的行数据内容的，但如果保存的是全量数据又太占用存储空间了，但是一个事务里面会有多个SQL，有查询有更新，存储引擎在执行这些SQL之前，如何往read-view里面保存数据呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468450,"discussion_content":"看第八篇哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569379435,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135859,"user_name":"浮世间","can_delete":false,"product_type":"c1","uid":1579931,"ip_address":"","ucode":"90230230D2618D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/xXfbHEUK56zFLSQqhSnNj8BicYiardWZbmM3G2zWdvChH4NWEJSIXuAJpZ92FhQxLTslQgxRAWD4NnftNxLyMO2w/132","comment_is_top":false,"comment_ctime":1569289472,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569289472","product_id":100020801,"comment_content":"可以通过设置超时时间，将默认的8小时改为更小的时间用以避免长连接。","like_count":0},{"had_liked":false,"id":134152,"user_name":"Heiky","can_delete":false,"product_type":"c1","uid":1623626,"ip_address":"","ucode":"03AA79E1BC4AE4","user_header":"https://static001.geekbang.org/account/avatar/00/18/c6/4a/3bd896fc.jpg","comment_is_top":false,"comment_ctime":1568767780,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1568767780","product_id":100020801,"comment_content":"丁奇老师，可以讲一下redo log和undo log的区别吗","like_count":0,"discussions":[{"author":{"id":1623626,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c6/4a/3bd896fc.jpg","nickname":"Heiky","note":"","ucode":"03AA79E1BC4AE4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":14871,"discussion_content":"还有，丁奇老师，你用的什么笔记，看起来挺清新的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568785344,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133541,"user_name":"looper","can_delete":false,"product_type":"c1","uid":1238396,"ip_address":"","ucode":"DA4BCE83836C04","user_header":"https://static001.geekbang.org/account/avatar/00/12/e5/7c/2a5a418b.jpg","comment_is_top":false,"comment_ctime":1568600273,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568600273","product_id":100020801,"comment_content":"问题想法：在业务代码中，做好规范，缩小事务的范围，防止长事务","like_count":0},{"had_liked":false,"id":132971,"user_name":"丁丁历险记","can_delete":false,"product_type":"c1","uid":1661704,"ip_address":"","ucode":"A43829E454C067","user_header":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","comment_is_top":false,"comment_ctime":1568286375,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568286375","product_id":100020801,"comment_content":"我常用的套路是用好消息中间件，把大事物拆解","like_count":0},{"had_liked":false,"id":132887,"user_name":"大湿兄","can_delete":false,"product_type":"c1","uid":1660151,"ip_address":"","ucode":"587EBBBED90182","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL17rDiannrcyaUB5X6haqLic1183mfwyunJicRO8IYV9U8MaYiaZp8jRnW5kLQIqRmwTaPGIEVQZL5Uw/132","comment_is_top":false,"comment_ctime":1568260133,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568260133","product_id":100020801,"comment_content":"RTO我能理解，但是备份空间有点不明白，每天一备的binlog，七天的话和一周的binlog不是一样的吗","like_count":0},{"had_liked":false,"id":132633,"user_name":"牛年榴莲","can_delete":false,"product_type":"c1","uid":1183703,"ip_address":"","ucode":"230C076193C6C0","user_header":"https://static001.geekbang.org/account/avatar/00/12/0f/d7/31d07471.jpg","comment_is_top":false,"comment_ctime":1568181130,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568181130","product_id":100020801,"comment_content":"有同学因为没有使用“RR”隔离级别而造成了实际问题吗？可否分享下。","like_count":0},{"had_liked":false,"id":131879,"user_name":"Long","can_delete":false,"product_type":"c1","uid":1580358,"ip_address":"","ucode":"D85B99FD0C4B76","user_header":"https://wx.qlogo.cn/mmopen/vi_32/ZMALpD4bKCVdsx8ymCC5Oo0oxibxIFGQzT6fP2B8MEgLGLktQRX4ictobkbcNBDTQibjoQNKBmWCKomNibWqHZ5kpg/132","comment_is_top":false,"comment_ctime":1567948206,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567948206","product_id":100020801,"comment_content":"老师，你好，如果我要做一个订票系统，是不是把隔离级别设计成 读提交比较好呢？现在的是隔离级别是可重复读","like_count":0},{"had_liked":false,"id":131517,"user_name":"扬～","can_delete":false,"product_type":"c1","uid":1208163,"ip_address":"","ucode":"6FA7D8FE188341","user_header":"https://static001.geekbang.org/account/avatar/00/12/6f/63/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1567777851,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567777851","product_id":100020801,"comment_content":"感觉MVCC一带而过啊，如果并发的2个事务同时修改一行记录，事务A提交了，事务B回滚了，按照上面讲的回滚段，似乎会回滚到事务B的初始状态，但这样不就丢失了事务A的提交了？","like_count":0},{"had_liked":false,"id":130945,"user_name":"Geek_998598","can_delete":false,"product_type":"c1","uid":1647680,"ip_address":"","ucode":"4BB6646F054A5B","user_header":"","comment_is_top":false,"comment_ctime":1567581933,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1567581933","product_id":100020801,"comment_content":"老师我想问下，MVCC是完全解决了可重复读隔离级别的幻读么？","like_count":0,"discussions":[{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":26425,"discussion_content":"当前读（next-key（行锁 + 间隙锁））解决了幻读。\n\n可以网上搜下文章。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570601995,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1442588,"avatar":"https://static001.geekbang.org/account/avatar/00/16/03/1c/c9fe6738.jpg","nickname":"Kvicii.Y","note":"","ucode":"446BFA633569EA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":195338,"discussion_content":"RR级别的幻读被解决了吗？？？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583254267,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":26425,"ip_address":""},"score":195338,"extra":""}]}]},{"had_liked":false,"id":130357,"user_name":"Marco","can_delete":false,"product_type":"c1","uid":1138102,"ip_address":"","ucode":"78254AE72CB03A","user_header":"https://static001.geekbang.org/account/avatar/00/11/5d/b6/bedadca5.jpg","comment_is_top":false,"comment_ctime":1567432838,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567432838","product_id":100020801,"comment_content":"老师，读已提交 和 可重复读 MVCC具体的实现原理没讲清楚呢","like_count":0},{"had_liked":false,"id":130160,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1567394345,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567394345","product_id":100020801,"comment_content":"老师，如果使用提交读，那就不会出现回滚日志很大的情况了吧？当事务B启动后，事务A只要提交了，那事务B就可读到，而不用去读B启动前的回滚数据","like_count":0},{"had_liked":false,"id":127133,"user_name":"shawn","can_delete":false,"product_type":"c1","uid":1010221,"ip_address":"","ucode":"8F6A8C7920996E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6a/2d/ec4ed8ce.jpg","comment_is_top":false,"comment_ctime":1566567039,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566567039","product_id":100020801,"comment_content":"老师，既然设置autoCommit =1 是自动提交事务，但我在navicat中必须执行commit语句，其中的insert和update语句才真正的提交了。<br>按道理不应该是自动提交事务嘛？<br>“我会建议你总是使用 set autocommit=1, 通过显示方式语句来启动事务“，那么这个autocommit应该不是自动提交事务字面 意思，而是设置事务启动方式为手动对吧。<br>","like_count":0},{"had_liked":false,"id":127023,"user_name":"right-chen","can_delete":false,"product_type":"c1","uid":1435172,"ip_address":"","ucode":"E0E940E80E7A2D","user_header":"https://static001.geekbang.org/account/avatar/00/15/e6/24/30806a88.jpg","comment_is_top":false,"comment_ctime":1566538096,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566538096","product_id":100020801,"comment_content":"个人总结：<br>事物是什么？事物是一组sql语句执行的一个单元，这个单元内要么全部执行成功（commit），要么全部失败回滚（rollback），MySQL的Myisam引擎不支持事物。<br>事物的特性ACID，即原子性、一致性、隔离性、持久性<br><br>事物的隔离级别<br>读未提交：一个事物执行过程中，修改的数据可以被其它事物可见<br>读提交：一个事物执行中修改的数据，需要提交后才可被其它事物可见<br>可重复读：一个事物在执行期间，查询到的数据需要是一致的。这是MySQL的默认隔离级别<br>可串行化：一个事物开始后，事物内的数据将被锁住，事物提交前，其它事物不可以操作锁定的数据<br>隔离级别越高，数据的可用性越高，但是伴随着并发性能的下降。需要视数据的重要性以及场景使用，避免长事物。","like_count":0},{"had_liked":false,"id":126873,"user_name":"慕塔","can_delete":false,"product_type":"c1","uid":1302106,"ip_address":"","ucode":"5C6C668C1106A5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/A94RKUfWfwzRzb68T9xskctQ43TBgXSBIL78p0N0ria2tQxmsTTJebYmefhkbHK7zwpoxokxs43UxpgDTdwm5tg/132","comment_is_top":false,"comment_ctime":1566510972,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566510972","product_id":100020801,"comment_content":"请问Oracle是怎么避免或者没有幻读的啊","like_count":0},{"had_liked":false,"id":126668,"user_name":"dykw","can_delete":false,"product_type":"c1","uid":1412912,"ip_address":"","ucode":"513D787379E158","user_header":"https://static001.geekbang.org/account/avatar/00/15/8f/30/ae34a463.jpg","comment_is_top":false,"comment_ctime":1566443983,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566443983","product_id":100020801,"comment_content":"老师 举例那边串行化 不是后提交的会等前面的提交完才可以执行吗，是A等B 而不是B等A吧；还是说我的理解有问题，是A先读的所以A在前b在后是这样的对吗？是看启动事务的先后而不是提交的前后 ？","like_count":0},{"had_liked":false,"id":126348,"user_name":"甜无能,","can_delete":false,"product_type":"c1","uid":1241188,"ip_address":"","ucode":"2BDE8BC21B0F32","user_header":"https://static001.geekbang.org/account/avatar/00/12/f0/64/679c72ca.jpg","comment_is_top":false,"comment_ctime":1566369394,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566369394","product_id":100020801,"comment_content":"我有两个问题，希望老师帮忙解答一下～<br>1.串行化的隔离级别时，A读取数据的时候不就应该被锁住了么？为什么文章中说&quot;1改成2&quot;的时候会被锁住? <br>2.就算B是在查询V3之前开始的,但是B没查询的时候,V3不能查询么?如果这种情况可能发生的话,那么V3就是1了","like_count":0},{"had_liked":false,"id":124955,"user_name":"JJj","can_delete":false,"product_type":"c1","uid":1196463,"ip_address":"","ucode":"EA53F2CEAFCFF1","user_header":"https://static001.geekbang.org/account/avatar/00/12/41/af/4307867a.jpg","comment_is_top":false,"comment_ctime":1566027457,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566027457","product_id":100020801,"comment_content":"请问视图针对的是不是某个变量，所以一个事务里查询不同的变量就是不同的视图","like_count":0},{"had_liked":false,"id":123733,"user_name":"小白","can_delete":false,"product_type":"c1","uid":1577051,"ip_address":"","ucode":"6B6C0A0AD0F742","user_header":"","comment_is_top":false,"comment_ctime":1565748704,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565748704","product_id":100020801,"comment_content":"老师最近在思考一个问题，为啥数据库的锁设计成两阶段锁协议，这是基于什么考虑的，两阶段锁的好处是什么或者是使用两阶段锁是为了解决什么问题","like_count":0},{"had_liked":false,"id":122606,"user_name":"秋收冬藏","can_delete":false,"product_type":"c1","uid":1625740,"ip_address":"","ucode":"79C7E475842CBB","user_header":"https://static001.geekbang.org/account/avatar/00/18/ce/8c/9ecbbbe5.jpg","comment_is_top":false,"comment_ctime":1565435548,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565435548","product_id":100020801,"comment_content":"老师, 如果在同一行记录里, 多个事务同时回滚, 会回滚到最后执行回滚事务的回滚数据吗?","like_count":0},{"had_liked":false,"id":122303,"user_name":"Bootis","can_delete":false,"product_type":"c1","uid":1388421,"ip_address":"","ucode":"834251DC0FE2E7","user_header":"https://static001.geekbang.org/account/avatar/00/15/2f/85/9d1230c9.jpg","comment_is_top":false,"comment_ctime":1565335476,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1565335476","product_id":100020801,"comment_content":"麻烦问一下老师，您在将事务隔离的实现时，提到 另一个将 4 改为 5 的事务不会与之前的几个事务产生冲突，这是否意味着 该事务读取到了 前面几个事务的 未提交的修改操作(因为前面几个事务提交了，就没有所谓的冲突一说了)。另外，您说的 回滚日志 什么时候清理，当系统里没有比这个回滚日志更早的read-view的时候。<br>在我的理解中就是将回滚日志文件从头往后一个一个删除....还是说是事务结束了，该事务对应的回滚日志就清理了？","like_count":0},{"had_liked":false,"id":121299,"user_name":"林肯","can_delete":false,"product_type":"c1","uid":1008582,"ip_address":"","ucode":"D2C97220230DE5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/c6/d6ea3df3.jpg","comment_is_top":false,"comment_ctime":1565096041,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1565096041","product_id":100020801,"comment_content":"请教下，在“可重复读”隔离级别下，这个视图是在事务启动时创建的，整个事务存在期间都用这个视图。对于隔离级别为rr的情况，开启事务时建立视图，这个时候并不知道要读取哪张表？那么建立的是全库视图，如果这样每开启一个事务就建一个全库视图，是不是很浪费资源？请老师答疑，谢谢","like_count":0,"discussions":[{"author":{"id":1008582,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/63/c6/d6ea3df3.jpg","nickname":"林肯","note":"","ucode":"D2C97220230DE5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4469,"discussion_content":"第八篇更新过了，很详细的解释了我的疑惑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565445238,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120027,"user_name":"不工","can_delete":false,"product_type":"c1","uid":1462843,"ip_address":"","ucode":"A8725E6D0E1765","user_header":"https://static001.geekbang.org/account/avatar/00/16/52/3b/f1501d79.jpg","comment_is_top":false,"comment_ctime":1564757956,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564757956","product_id":100020801,"comment_content":"回滚日志看了三遍还是有点晕","like_count":0},{"had_liked":false,"id":120014,"user_name":"不工","can_delete":false,"product_type":"c1","uid":1462843,"ip_address":"","ucode":"A8725E6D0E1765","user_header":"https://static001.geekbang.org/account/avatar/00/16/52/3b/f1501d79.jpg","comment_is_top":false,"comment_ctime":1564755467,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1564755467","product_id":100020801,"comment_content":"有了redo log为什么这里还要有回滚日志？","like_count":0,"discussions":[{"author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":9587,"discussion_content":"redo log是防止crash的,  回滚日志这个是事务的，这时候事务还没crash呢，只是回滚","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568193219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120010,"user_name":"不工","can_delete":false,"product_type":"c1","uid":1462843,"ip_address":"","ucode":"A8725E6D0E1765","user_header":"https://static001.geekbang.org/account/avatar/00/16/52/3b/f1501d79.jpg","comment_is_top":false,"comment_ctime":1564754415,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564754415","product_id":100020801,"comment_content":"当系统没有比当前更早的read view，那是不是最开始的数据？","like_count":0},{"had_liked":false,"id":119369,"user_name":"RD","can_delete":false,"product_type":"c1","uid":1194858,"ip_address":"","ucode":"E3947B6E1681AD","user_header":"https://static001.geekbang.org/account/avatar/00/12/3b/6a/80d9c545.jpg","comment_is_top":false,"comment_ctime":1564573314,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564573314","product_id":100020801,"comment_content":"老师问一下，隔离范围能针对某表设置吗？我看可以全局设置，和设置当前session的。<br>还有个问题，比如发放优惠码，每发放一张就修改此张的状态。如果隔离级别设置为串行化，当A事物读取一行后，加排他锁，这时其他事物在读取本行就会等待。怎么做能不等待，直接找没有被枷锁的行呢？","like_count":0},{"had_liked":false,"id":115262,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1563520326,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563520326","product_id":100020801,"comment_content":"解决方法:事务尽量简单，不能有太耗时的操作。另外，增加事后发现方法：监控innodb_trx，即时发现耗时长的事务","like_count":0},{"had_liked":false,"id":114831,"user_name":"夕林语","can_delete":false,"product_type":"c1","uid":1264180,"ip_address":"","ucode":"B57681D0C73E1B","user_header":"https://static001.geekbang.org/account/avatar/00/13/4a/34/1faac99b.jpg","comment_is_top":false,"comment_ctime":1563413416,"is_pvip":false,"discussion_count":0,"race_medal":2,"score":"1563413416","product_id":100020801,"comment_content":"看文章和评论才是学习的最佳实践呀😄","like_count":0},{"had_liked":false,"id":114367,"user_name":"师恩磊","can_delete":false,"product_type":"c1","uid":1216657,"ip_address":"","ucode":"237A2B7D19E0A5","user_header":"https://static001.geekbang.org/account/avatar/00/12/90/91/aebfb724.jpg","comment_is_top":false,"comment_ctime":1563283799,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563283799","product_id":100020801,"comment_content":"怎么解决长事务？建议set autocommit=1，用begin显示地开启事务<br>开始执行SQL与启动事务的时间点有什么区别？谁在前，谁在后？<br>事务的特点，acid，原子性，一致性，隔离性，持久性，隔离性又分为，读未提交，读已提交，可重复读，串行化。解释了读未提交，读已提交，可重复读，串行化的概念，通过事务A,B来详细解释了这些概念，读未提交会造成脏读，因为，事务A读取到事务B未提交的数据，该条数据不该被事务A读取到，故称为脏读。读已提交会造成幻读，因为在一个事务中，事务A第一次查询到的数据与第二次查询到的数据，不一致，称为幻读，在mysql中，可重复读解决了，脏读和幻读的问题。mysql事务的隔离是怎么实现的？，通过可重复读来讲解的，mysql每条数据在更新时，同时都会记录一条回滚操作，假设数据1变成2变成3最后变成4，其回滚日志为“将2变成1，将3变成2，将4变成3”，回滚日志会在没有比这个回滚日志更早的readview时，删除。这也解释了为什么尽量不要用长事务，用长事务的话会导致回滚日志一直不被删除，占用空间。<br>最后介绍了数据库与事务相关的参数设置，set autocommit=0，这个命令会将这个线程的自动提交关掉。意味着你只执行一个select语句，这个事务就启动了，但不会自动提交。这个事务持续到你主动commit，或rollback或连接断掉。建议set autocommit=1，用begin显示地开启事务。","like_count":0},{"had_liked":false,"id":113449,"user_name":"蔡大少","can_delete":false,"product_type":"c1","uid":1014103,"ip_address":"","ucode":"46FB0BF4BFB75F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/79/57/59e6747a.jpg","comment_is_top":false,"comment_ctime":1563013767,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563013767","product_id":100020801,"comment_content":"读未提交<br>读提交<br>可重复读<br>串行<br>mysql默认的事务隔离级别是可重复读吗","like_count":0},{"had_liked":false,"id":113145,"user_name":"大世界，小人物","can_delete":false,"product_type":"c1","uid":1023966,"ip_address":"","ucode":"F421B4AC8E8B1F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9f/de/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1562902350,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562902350","product_id":100020801,"comment_content":"串行化 隔离级别：<br>读锁是什么时间释放的？事务中第一次读就会加锁，直到事务提交才会释放么？这期间其他事务只能读，不能写，对么？<br>","like_count":0},{"had_liked":false,"id":112440,"user_name":"enjoylearning","can_delete":false,"product_type":"c1","uid":1000237,"ip_address":"","ucode":"DCAF8538DEA277","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/2d/af86d73f.jpg","comment_is_top":false,"comment_ctime":1562735014,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562735014","product_id":100020801,"comment_content":"不知道querylog中不断出现的rollback是否与此有关，难道执行select 完后也要追加一条rollback记录吗？","like_count":0},{"had_liked":false,"id":112360,"user_name":"ok绷","can_delete":false,"product_type":"c1","uid":1441991,"ip_address":"","ucode":"7B2303B3319C4D","user_header":"https://static001.geekbang.org/account/avatar/00/16/00/c7/59caefa7.jpg","comment_is_top":false,"comment_ctime":1562723286,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562723286","product_id":100020801,"comment_content":"关于什么时候不需要回滚日志了？当系统里么有比这个回滚日志更早的read-view的时候。这里不太明白老师，他是在什么时候判断的呢？是产生了新的回滚日志就会把旧的删掉吗？","like_count":0},{"had_liked":false,"id":112033,"user_name":"Eric","can_delete":false,"product_type":"c1","uid":1206339,"ip_address":"","ucode":"06999A19DF96B8","user_header":"https://static001.geekbang.org/account/avatar/00/12/68/43/d8f1ed61.jpg","comment_is_top":false,"comment_ctime":1562657230,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562657230","product_id":100020801,"comment_content":"事务隔离的具体实现 有些模糊 老师能不能讲的具体些 read-view如何说明可重复读的实现?","like_count":0},{"had_liked":false,"id":111417,"user_name":"超级玩家","can_delete":false,"product_type":"c1","uid":1029874,"ip_address":"","ucode":"D37E44E6C2E679","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b6/f2/c78f79e1.jpg","comment_is_top":false,"comment_ctime":1562554961,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562554961","product_id":100020801,"comment_content":"按照您讲的，可重复读应该能解决幻读问题吧。我测了下，在可重复读下，事务A中select *表1的数据，获得结果x，同时在事务B中，向表1中插入一条数据，这时候事务A中再做select * 表1，获得的结果也是x，但是接下来我在事务A中  先update刚才事务B插入的数据，再去select *表1，这时候获得结果就不是x了，而是把事务B插入的数据查出来了。这个是为啥呢？","like_count":0},{"had_liked":false,"id":110654,"user_name":"残天噬魂","can_delete":false,"product_type":"c1","uid":1506609,"ip_address":"","ucode":"A2AD8303A4518D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/q2HwchogzNiavKhIB4GfAxH6B88NhSoC7B7keVEUqiaP6JPokDUNJLYehocOyqYqrhA3iaxywyRXLYkYJjDUQESZw/132","comment_is_top":false,"comment_ctime":1562311020,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562311020","product_id":100020801,"comment_content":" 老师好，我想问一个关于mysql隔离级别的问题，现在有AB两个会话分别启动了事务，但这两个会话的隔离级别不一样，那如果我先执行会话A的更新操作，于用会话B去进行访问，这个时候的结果是遵循A的隔离级别呢，还是遵循B的隔离级别呢？为什么呢？ 结果其实我已经测试出来了，但不知道原因，也不知道为什么mysql需要会话级的隔离级别设置，正常情况下不是应该设置一个之后全局有效吗？那这个会话级的有什么用呢？","like_count":0},{"had_liked":false,"id":110024,"user_name":"JGOS","can_delete":false,"product_type":"c1","uid":1237592,"ip_address":"","ucode":"46A905A169408F","user_header":"https://static001.geekbang.org/account/avatar/00/12/e2/58/2468a5e9.jpg","comment_is_top":false,"comment_ctime":1562153019,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562153019","product_id":100020801,"comment_content":"老师，一天一备的话，今天的备份完了，昨天做的备份不删吗？为什么对存储空间大小有影响呢","like_count":0},{"had_liked":false,"id":109633,"user_name":"拓拔泽","can_delete":false,"product_type":"c1","uid":1323257,"ip_address":"","ucode":"1EB797F64CE26D","user_header":"https://static001.geekbang.org/account/avatar/00/14/30/f9/e4e49771.jpg","comment_is_top":false,"comment_ctime":1562069550,"is_pvip":false,"replies":[{"id":"39740","content":"1. 看下08篇，客户B更新的时候是用的“当前读”<br>2. “你的意思是视图数据也会变动，为了得到视图A,需要执行回滚操作。” 对","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1562087612,"ip_address":"","comment_id":109633,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562069550","product_id":100020801,"comment_content":"老师，非常感谢你的分享。我有几个问题，需要向你请教。<br>1:假设现在有一个客户A，账户余额为0。有两个客户B,C，分别向客户A转账100。正常情况下，转账成功，A的账户有200块。现在的隔离级别是可重复读，AB事物同时启动。A事物将账户余额从0改成100之后，提交。B事物更改账户余额，因为是可重复读，所以B事物还是将账户余额从0改成100。也就是这个时候，账户余额还是100。这是怎么回事？<br>2:视图和MVCC有什么联系吗?对于read-viewA,需要依次执行回滚日子才能得到1。你的意思是视图数据也会变动，为了得到视图A,需要执行回滚操作。<br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456490,"discussion_content":"1. 看下08篇，客户B更新的时候是用的“当前读”\n2. “你的意思是视图数据也会变动，为了得到视图A,需要执行回滚操作。” 对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562087612,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109120,"user_name":"jzdayz","can_delete":false,"product_type":"c1","uid":1259280,"ip_address":"","ucode":"E84C0DFC53BE8A","user_header":"https://static001.geekbang.org/account/avatar/00/13/37/10/a8aa9acb.jpg","comment_is_top":false,"comment_ctime":1561966232,"is_pvip":false,"replies":[{"id":"39541","content":"看系统怎么设置， show variables like &#39;%iso%&#39;;","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1561983394,"ip_address":"","comment_id":109120,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1561966232","product_id":100020801,"comment_content":"请问下老师，一个普通的select是什么隔离级别","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456252,"discussion_content":"看系统怎么设置， show variables like &amp;#39;%iso%&amp;#39;;","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561983394,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108572,"user_name":"zachary","can_delete":false,"product_type":"c1","uid":1349192,"ip_address":"","ucode":"2559469DCF083F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/HRicO9C2gHpCxibedw0370AtpeqE9uo5kkBW4XCrsF9btibJPIq4vSribYdsjiaOFPK7YMfNmSSdIQlUMXGwgicTLTCg/132","comment_is_top":false,"comment_ctime":1561805766,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1561805766","product_id":100020801,"comment_content":"read-view A，read-view B 和 read-view C 这三个 read-view 是在一个事务里，还是在不同的事务里？","like_count":0,"discussions":[{"author":{"id":1208265,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6f/c9/22022094.jpg","nickname":"丁奇老师的粉丝","note":"","ucode":"6341E0D78CF998","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200962,"discussion_content":"不同的事务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583747706,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108526,"user_name":"Geek_6944ac","can_delete":false,"product_type":"c1","uid":1575002,"ip_address":"","ucode":"CEB0AD8B0EDEAB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKe0iaNYicicxBBCibmu9iaVLdFibnOK4TTtgelqucyKXq9sEX0rGLnfZhdMfvMqDZF1SsibbXXGDoPyVObw/132","comment_is_top":false,"comment_ctime":1561792535,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561792535","product_id":100020801,"comment_content":"在“读提交”隔离级别下，这个视图是在每个 SQL 语句开始执行的时候创建的。这段语句理解中，是说每个SQL语句执行都会创建一个视图，还是说头一个SQL语句创建的视图供后面每个SQL语句执行？望能解答。","like_count":0},{"had_liked":false,"id":107456,"user_name":"时间是最真的答案","can_delete":false,"product_type":"c1","uid":1183601,"ip_address":"","ucode":"B90F3EF769F865","user_header":"https://static001.geekbang.org/account/avatar/00/12/0f/71/9273e8a4.jpg","comment_is_top":false,"comment_ctime":1561538809,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561538809","product_id":100020801,"comment_content":"“串行化”隔离级别，为什么V1、V2值是1，V3值是2？<br>是因为事物A先执行，事物B后执行吗？","like_count":0},{"had_liked":false,"id":107232,"user_name":"苦行僧","can_delete":false,"product_type":"c1","uid":1055334,"ip_address":"","ucode":"726024A9A9CF44","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/66/2d9db9ed.jpg","comment_is_top":false,"comment_ctime":1561506722,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1561506722","product_id":100020801,"comment_content":"查询也可能变成长事务 老师这块再细化一下？","like_count":0,"discussions":[{"author":{"id":1208265,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6f/c9/22022094.jpg","nickname":"丁奇老师的粉丝","note":"","ucode":"6341E0D78CF998","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200964,"discussion_content":"你写了for循环，一直不提交，不就是长事务咯","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583747838,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106217,"user_name":"张sir","can_delete":false,"product_type":"c1","uid":1209431,"ip_address":"","ucode":"52958DF6705208","user_header":"https://static001.geekbang.org/account/avatar/00/12/74/57/7b828263.jpg","comment_is_top":false,"comment_ctime":1561209826,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561209826","product_id":100020801,"comment_content":"你好，想问下，在可重复读的隔离级别下启动的视图是不是可以理解为开启事务后，看到的一个临时的快照，这个快照的内容就是开启事务前的数据状态。","like_count":0},{"had_liked":false,"id":104985,"user_name":"flying","can_delete":false,"product_type":"c1","uid":1276884,"ip_address":"","ucode":"54BDD07ED9B94D","user_header":"https://static001.geekbang.org/account/avatar/00/13/7b/d4/aca8f679.jpg","comment_is_top":false,"comment_ctime":1560903092,"is_pvip":false,"replies":[{"id":"38148","content":"单条查询算一个事务，这个事务什么时候提交<br><br>语句执行完成算","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1560998231,"ip_address":"","comment_id":104985,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1560903092","product_id":100020801,"comment_content":"pymysql什么时候连接数据库，什么时候执行。<br>单条查询算一个事务，这个事务什么时候提交","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454516,"discussion_content":"单条查询算一个事务，这个事务什么时候提交\n\n语句执行完成算","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560998231,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104605,"user_name":"张sir","can_delete":false,"product_type":"c1","uid":1209431,"ip_address":"","ucode":"52958DF6705208","user_header":"https://static001.geekbang.org/account/avatar/00/12/74/57/7b828263.jpg","comment_is_top":false,"comment_ctime":1560783578,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1560783578","product_id":100020801,"comment_content":"长事务指的是什么，有具体的例子吗？","like_count":0,"discussions":[{"author":{"id":1208265,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6f/c9/22022094.jpg","nickname":"丁奇老师的粉丝","note":"","ucode":"6341E0D78CF998","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200967,"discussion_content":"创建事务和提交事务的时间间隔很长。你要是问多长？那就理解成地久天长，很长很长","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583747905,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104502,"user_name":"奔四男人小硬硬","can_delete":false,"product_type":"c1","uid":1582340,"ip_address":"","ucode":"F57DEEF89A9BCC","user_header":"https://static001.geekbang.org/account/avatar/00/18/25/04/2aac90c8.jpg","comment_is_top":false,"comment_ctime":1560767676,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560767676","product_id":100020801,"comment_content":"当前值是 4，但是在查询这条记录的时候，不同时刻启动的事务会有不同的 read-view。<br><br>不太理解这句话，所以还是不明白事务隔离是怎么实现的","like_count":0},{"had_liked":false,"id":104416,"user_name":"Geek_41d472","can_delete":false,"product_type":"c1","uid":1247965,"ip_address":"","ucode":"DEC2B6329460CF","user_header":"https://static001.geekbang.org/account/avatar/00/13/0a/dd/88fa7b52.jpg","comment_is_top":false,"comment_ctime":1560748452,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560748452","product_id":100020801,"comment_content":"老师您好，我有个疑问，就是读未提，读提交，可重复读，这三个隔离级别是不是说，任何一个隔离级别，A事务和B事务都可以并行查看或者修改同一行的数据而不会被卡住？而串行隔离级别，A和B两个事务我可以并行，只有当出现读写，或者写写的时候其中一个会被卡住等待另外一个事务提交后才执行，而读读操作，这两个AB事务是不会卡住？不知道我理解的有没有错？","like_count":0},{"had_liked":false,"id":104032,"user_name":"Zhaoyang","can_delete":false,"product_type":"c1","uid":1037190,"ip_address":"","ucode":"131D83AC2566D2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d3/86/b5d72c87.jpg","comment_is_top":false,"comment_ctime":1560596154,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1560596154","product_id":100020801,"comment_content":"之前因为key值重复。导致插曲失败，所以取消了事务。","like_count":0,"discussions":[{"author":{"id":1208265,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6f/c9/22022094.jpg","nickname":"丁奇老师的粉丝","note":"","ucode":"6341E0D78CF998","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200969,"discussion_content":"建议重新组织一下语言哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583747939,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":103737,"user_name":"默然","can_delete":false,"product_type":"c1","uid":1299976,"ip_address":"","ucode":"D4FEDA4E27D4D1","user_header":"https://static001.geekbang.org/account/avatar/00/13/d6/08/fc702101.jpg","comment_is_top":false,"comment_ctime":1560500064,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560500064","product_id":100020801,"comment_content":"老师，数据写入的时候，写入redolog，而不写入实际的物理磁盘。那么一个查询过来，就不能直接从磁盘里去读。那么所有redolog的里的数据都会在内存里，直接查内存？还是要遍历查一次redolog，没有再读磁盘呢？","like_count":0},{"had_liked":false,"id":103727,"user_name":"大汉_客家族_数据工程_曾院士","can_delete":false,"product_type":"c1","uid":1215758,"ip_address":"","ucode":"AD73C36D617CA1","user_header":"https://static001.geekbang.org/account/avatar/00/12/8d/0e/1f49ade9.jpg","comment_is_top":false,"comment_ctime":1560498616,"is_pvip":false,"replies":[{"id":"37611","content":"autocommit=0就会","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1560585515,"ip_address":"","comment_id":103727,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1560498616","product_id":100020801,"comment_content":"意味着如果你只执行一个 select 语句，这个事务就启动了，而且并不会自动提交。这个事务持续存在直到你主动执行 commit。   请问一下为什么一个Select语句会自动开启事务呢？ Oracle从来不会这样的。除非DML 语句，以及Select for update。我在5.7执行一个Select后再事务表并没该语的事务","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453980,"discussion_content":"autocommit=0就会","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560585515,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":102759,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1560302292,"is_pvip":false,"replies":[{"id":"37378","content":"08篇中哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1560422189,"ip_address":"","comment_id":102759,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1560302292","product_id":100020801,"comment_content":"脏读 幻读的概念 好像没有出现在这一讲当中。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453565,"discussion_content":"08篇中哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560422189,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":102442,"user_name":"程辉","can_delete":false,"product_type":"c1","uid":1395334,"ip_address":"","ucode":"A8AE3BFE6EE59C","user_header":"https://static001.geekbang.org/account/avatar/00/15/4a/86/c7bd910e.jpg","comment_is_top":false,"comment_ctime":1560221630,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560221630","product_id":100020801,"comment_content":"老师，对于银行账户校对这个例子，我有个疑问，假如是按照以下顺序执行的：<br>1.明细表插入一条记录；<br>2.启动一个事务，开始校对；<br>3.更新余额。<br>就算是可重复读级别，这样校对也会存在问题吧？","like_count":0},{"had_liked":false,"id":102148,"user_name":"程辉","can_delete":false,"product_type":"c1","uid":1395334,"ip_address":"","ucode":"A8AE3BFE6EE59C","user_header":"https://static001.geekbang.org/account/avatar/00/15/4a/86/c7bd910e.jpg","comment_is_top":false,"comment_ctime":1560151142,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1560151142","product_id":100020801,"comment_content":"在例子中，当事务B提交以后事务A也执行一次UPDATE操作，然后SELECT查询得到的是最新的值了，这是不是违背了可重复度的初衷？","like_count":0,"discussions":[{"author":{"id":1208265,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6f/c9/22022094.jpg","nickname":"丁奇老师的粉丝","note":"","ucode":"6341E0D78CF998","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200971,"discussion_content":"事务A中读到的是A更新后的值，并没有什么问题哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583748064,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":100299,"user_name":"Tunayoyo","can_delete":false,"product_type":"c1","uid":1447213,"ip_address":"","ucode":"E77AFDE575CE04","user_header":"https://static001.geekbang.org/account/avatar/00/16/15/2d/8447e8c8.jpg","comment_is_top":false,"comment_ctime":1559524660,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559524660","product_id":100020801,"comment_content":"老师，我试验了一种场景，想让你解释场景中下session A是怎么创建新视图的：MySQL默认隔离级别下，session A 设置autocommit=0后select查看表中的数据（即开启事务），session B autocommit=1删除了表中一行数据，并提交。<br>问题：session A这时候commit提交事务后，又用select语句查询（又开启了事务），返回的结果还是没有删除那一行的数据表，这是为啥啊？<br>分析：明明session A中的select语句执行前commit了上一次事务又开启了新的事务，这时（）可重复读的隔离级别）会又创建一次事务视图，session B的删除操作也已经提交了啊，session A这时执行select语句应该是查看到的是删除了一行数据的表才对啊。","like_count":0},{"had_liked":false,"id":97924,"user_name":"TMiRobot","can_delete":false,"product_type":"c1","uid":1447477,"ip_address":"","ucode":"EB168F2B3172D3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epxnsPibclOEASgqLeRnJtwGwjeSygjD6RgPr60TibL03KVVAJAKf5u9g4LLg337uC9Cc2dDM4SnDcw/132","comment_is_top":false,"comment_ctime":1558842228,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558842228","product_id":100020801,"comment_content":"可重复读在事务开始的时候就创建视图，那它是怎么知道要创建哪些数据的视图呢？要把事务中所有sql遍历一遍才知道？","like_count":0},{"had_liked":false,"id":97057,"user_name":"Asia","can_delete":false,"product_type":"c1","uid":1419860,"ip_address":"","ucode":"3198DE712494E3","user_header":"https://static001.geekbang.org/account/avatar/00/15/aa/54/a0d379f4.jpg","comment_is_top":false,"comment_ctime":1558578298,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558578298","product_id":100020801,"comment_content":"老师，为什么很多资料会说rr会产生幻读呢？<br>事务在rr隔离级别下，且还有mvcc做保障，查询得到的结果不应该始终相同的吗？","like_count":0},{"had_liked":false,"id":97014,"user_name":"左瞳","can_delete":false,"product_type":"c1","uid":1206589,"ip_address":"","ucode":"B262A3E99C8605","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/3d/3cfb9b87.jpg","comment_is_top":false,"comment_ctime":1558572761,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1558572761","product_id":100020801,"comment_content":"若隔离级别是“串行化”，则在事务 B 执行“将 1 改成 2”的时候，会被锁住。<br>这个我有点不理解，难道不是事务B查询的时候就锁住吗？不然读不到等待另一个事务执行完的结果，那更新加锁也没有意义啊","like_count":0,"discussions":[{"author":{"id":1208265,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6f/c9/22022094.jpg","nickname":"丁奇老师的粉丝","note":"","ucode":"6341E0D78CF998","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200973,"discussion_content":"你说的没问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583748121,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96398,"user_name":"陈榕","can_delete":false,"product_type":"c1","uid":1063159,"ip_address":"","ucode":"88CDB49D5574D3","user_header":"https://static001.geekbang.org/account/avatar/00/10/38/f7/bd729d33.jpg","comment_is_top":false,"comment_ctime":1558408859,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1558408859","product_id":100020801,"comment_content":"老师好，可重复读的级别下，如果按照事务视图，应该是能解决幻读的，但是书上说是不能解决，甚是不解","like_count":0,"discussions":[{"author":{"id":1116188,"avatar":"https://static001.geekbang.org/account/avatar/00/11/08/1c/ef15e661.jpg","nickname":" 臣馟飞扬","note":"","ucode":"F2F882B7678055","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":73971,"discussion_content":"是啊，可重复读级别是可能发生幻读的，那如果用户insert一条新的交易记录，不就没法保证数据校对的正确性了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575617978,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95803,"user_name":"复兴","can_delete":false,"product_type":"c1","uid":1363230,"ip_address":"","ucode":"C172A87873001A","user_header":"https://static001.geekbang.org/account/avatar/00/14/cd/1e/692c3313.jpg","comment_is_top":false,"comment_ctime":1558181760,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558181760","product_id":100020801,"comment_content":"  疑问：可串行化中，读会加读锁，写会加上写锁，那么这个锁是 lock table t1 read&#47;write 是这个吗，如果不是，那是怎样的呢？求老师作答。","like_count":0},{"had_liked":false,"id":95486,"user_name":"探索无止境","can_delete":false,"product_type":"c1","uid":1044178,"ip_address":"","ucode":"91D2A9907DFA79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/d2/7024431c.jpg","comment_is_top":false,"comment_ctime":1558062794,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558062794","product_id":100020801,"comment_content":"老师你好，文中关于回滚段什么被删除的描述，有些困惑。描述如下：<br>“什么时候才不需要了呢？就是当系统里没有比这个回滚日志更早的read-view 的时候”。<br>比如像图中所示，read-viewA是最早的，那么当它别删除之后，read-viewB就变成最早的，也会被删除，依次类推，那最终都会被删除。所以怎么会出现长事务被提交，但数据库文件还没有变小的情况？为什么不是在事务被提交时，主动删除？这两点不太理解，还请老师给些指导","like_count":0},{"had_liked":false,"id":94989,"user_name":"anchor","can_delete":false,"product_type":"c1","uid":1083124,"ip_address":"","ucode":"24EECD40CC54C2","user_header":"https://static001.geekbang.org/account/avatar/00/10/86/f4/331f33a7.jpg","comment_is_top":false,"comment_ctime":1557934441,"is_pvip":false,"replies":[{"id":"34313","content":"如果业务逻辑有这种依赖，就是需要用for update去做的；<br>没这么写就会出现bug😆<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1558261290,"ip_address":"","comment_id":94989,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557934441","product_id":100020801,"comment_content":"不知道还能不能被看到，对于作者的两个事务的例子，如在事务A提交前有一个根据查询到的v2值更新另外一个表的值，如果采用rc,那么这个v2就有可能变化了，导致业务执行结果不一致。可以通过在事务A中增加getid for update来解决吧？但是我们在写代码时这种情况大多是没有这么去实现的，是会有问题的吧？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450285,"discussion_content":"如果业务逻辑有这种依赖，就是需要用for update去做的；\n没这么写就会出现bug😆\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558261290,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93264,"user_name":"Geek_2c1623","can_delete":false,"product_type":"c1","uid":1523416,"ip_address":"","ucode":"02F5C29C71F7D1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/hkzTTpS89YDu3h48blvYUmDjfBaRNPfkjbT9xlPAam2ye0txxINyrFvVVrOt4cNxAFkXu2hMpicH3I2u1bPmAbg/132","comment_is_top":false,"comment_ctime":1557448787,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1557448787","product_id":100020801,"comment_content":"请教下老师，是不是如果用rc隔离级别，就不会存在长事务导致回滚段过大了？因为rc是在每个sql前才创建的read view,不存在比回滚日志更早的read view。现在提问会不会有点晚，老师会看到吗😂","like_count":0,"discussions":[{"author":{"id":1208265,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6f/c9/22022094.jpg","nickname":"丁奇老师的粉丝","note":"","ucode":"6341E0D78CF998","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200975,"discussion_content":"同样的也会，假如你的事务一开始就进行了查询，且一直不提交，是不是就是要保留了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583748257,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93005,"user_name":"秋天","can_delete":false,"product_type":"c1","uid":1057056,"ip_address":"","ucode":"A7E1D953EF7E17","user_header":"https://static001.geekbang.org/account/avatar/00/10/21/20/1299e137.jpg","comment_is_top":false,"comment_ctime":1557377021,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1557377021","product_id":100020801,"comment_content":"commit work and chain 这种事务提交方式 在编程方面 应该如何应用呢？","like_count":0},{"had_liked":false,"id":92933,"user_name":"天二","can_delete":false,"product_type":"c1","uid":1100092,"ip_address":"","ucode":"F03EF223F2A4AE","user_header":"https://static001.geekbang.org/account/avatar/00/10/c9/3c/7d9b3baa.jpg","comment_is_top":false,"comment_ctime":1557365341,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557365341","product_id":100020801,"comment_content":"老师  我一处没理解，为什么删除回滚段，回滚日志也不会减小？","like_count":0},{"had_liked":false,"id":92237,"user_name":"谈际栋","can_delete":false,"product_type":"c1","uid":1381465,"ip_address":"","ucode":"1F5562A9148388","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIk46cor5XVFXEVDcdZuktY9qnuWaMNRw3PRoaDqA2N7p4TIDbyialAGjAIz8nsGx4379eT4842bgw/132","comment_is_top":false,"comment_ctime":1557209511,"is_pvip":false,"replies":[{"id":"34318","content":"多个语句要作为一个原子逻辑的时候","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1558261473,"ip_address":"","comment_id":92237,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557209511","product_id":100020801,"comment_content":"假如默认的mysql数据库已经有隔离级别了，为什么还要开启事务呢？<br>没有开启事务，实际开发中会怎么样？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449187,"discussion_content":"多个语句要作为一个原子逻辑的时候","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558261473,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92024,"user_name":"Geek_c1ecc4","can_delete":false,"product_type":"c1","uid":1514497,"ip_address":"","ucode":"63F746501F9AF8","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKRRuYEVOviabfV8l0CwczJLic2nvE3icHEaKSheicvKfstEEsa3SB2eVkejAPtXTWgOyLf02Ol3K4xaA/132","comment_is_top":false,"comment_ctime":1557156424,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557156424","product_id":100020801,"comment_content":"INNODB的可重复读是由mvcc实现的，所以，innodb的可重复读同时解决了不可重复读和幻读的问题。老师，这样的理解对么？","like_count":0},{"had_liked":false,"id":90525,"user_name":"do it","can_delete":false,"product_type":"c1","uid":1309911,"ip_address":"","ucode":"E0753912E8F2AF","user_header":"https://static001.geekbang.org/account/avatar/00/13/fc/d7/b102034a.jpg","comment_is_top":false,"comment_ctime":1556546366,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556546366","product_id":100020801,"comment_content":"个人小结<br>事务：一组数据数据库操作要么全部成功，要么全部失败。<br><br>特性：A C I D<br>原子性(Atomicity)<br>一致性(Consistency)<br>隔离性(Isolation)<br>持久性(Durability)<br><br>多事务同时执行问题：脏读(dirty read)、幻读(phontom read)、不可重复读(non-repeatble read)<br><br>事务隔离级别：读未提交(read uncommit)、读提交(RC  read commit)、可重复读(RR  repeatble read )、串行化(serializable)<br><br>MVCC 多版本并发控制<br><br>事务的启动方式：1.begin或start transaction, commit,rollback；2.set autocommit=0","like_count":0},{"had_liked":false,"id":90483,"user_name":"QQ怪","can_delete":false,"product_type":"c1","uid":1211223,"ip_address":"","ucode":"1A39B8433D9208","user_header":"https://static001.geekbang.org/account/avatar/00/12/7b/57/a9b04544.jpg","comment_is_top":false,"comment_ctime":1556533739,"is_pvip":false,"replies":[{"id":"32452","content":"👍","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1556592712,"ip_address":"","comment_id":90483,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1556533739","product_id":100020801,"comment_content":"终于清楚读提交和可重复度的区别了😄👍","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448541,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556592712,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87218,"user_name":"_Axios丶靜ﻩ","can_delete":false,"product_type":"c1","uid":1477364,"ip_address":"","ucode":"B2E8867CFCF92C","user_header":"https://static001.geekbang.org/account/avatar/00/16/8a/f4/fbbe4601.jpg","comment_is_top":false,"comment_ctime":1555549863,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555549863","product_id":100020801,"comment_content":"老师你好，我有个问题想要请教一下。大意是这样的，在看这篇文章之前，对于本章的内容已经有一个自我的了解了，读的过程中会发现有的地方还不如自己知道的清晰和详细。我的问题是我想要清晰的知道某些内容具体是怎么完成的，可是通过别人的总结来学习就只能知道一个现有的大概过程，可是我又没有阅读数据库源代码的能力，我该怎么平衡这种冲突","like_count":0},{"had_liked":false,"id":86154,"user_name":"蚂蚁内推+v","can_delete":false,"product_type":"c1","uid":1050508,"ip_address":"","ucode":"24B10AEE54B3FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/07/8c/0d886dcc.jpg","comment_is_top":false,"comment_ctime":1555316001,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555316001","product_id":100020801,"comment_content":"在“读提交”隔离级别下，这个视图是在每个 SQL 语句开始执行的时候创建的。老师，这句话怎么理解呢","like_count":0},{"had_liked":false,"id":85725,"user_name":"极客海","can_delete":false,"product_type":"c1","uid":1400927,"ip_address":"","ucode":"F0037CF1DBDA66","user_header":"https://static001.geekbang.org/account/avatar/00/15/60/5f/59ee0ca2.jpg","comment_is_top":false,"comment_ctime":1555213725,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555213725","product_id":100020801,"comment_content":"文中回滚段没有比它更早的记录时会被删除，那么我可以理解为当存在更早记录时，本回滚记录不能被删除，那么还记录本身什么时候可以删除呢？是事务提交以后就可以删除吗？","like_count":0},{"had_liked":false,"id":85358,"user_name":"linyuhe","can_delete":false,"product_type":"c1","uid":1062902,"ip_address":"","ucode":"0BDD2625D5C36A","user_header":"https://static001.geekbang.org/account/avatar/00/10/37/f6/d1a4a209.jpg","comment_is_top":false,"comment_ctime":1555044152,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555044152","product_id":100020801,"comment_content":"林老师你好，请问回滚段为什么要保存在磁盘上呢？mysql 重启后不会恢复事务吧，保存在内存里就可以了吧","like_count":0},{"had_liked":false,"id":85310,"user_name":"陌离","can_delete":false,"product_type":"c1","uid":1066349,"ip_address":"","ucode":"04C2865E328140","user_header":"https://static001.geekbang.org/account/avatar/00/10/45/6d/4947ff24.jpg","comment_is_top":false,"comment_ctime":1555033754,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555033754","product_id":100020801,"comment_content":"老师，长事务还有个问题可能导致链接不够用，应用会拿不到链接导致业务失败吧？","like_count":0},{"had_liked":false,"id":85104,"user_name":"emo","can_delete":false,"product_type":"c1","uid":1251829,"ip_address":"","ucode":"333AABB6AD0B6F","user_header":"https://static001.geekbang.org/account/avatar/00/13/19/f5/7520fd24.jpg","comment_is_top":false,"comment_ctime":1554981110,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554981110","product_id":100020801,"comment_content":"老师好，有个疑问。开始一个事物的时候，mysql做了什么？事物视图如何实现的？以及MVCC中版本的实现方式？","like_count":0},{"had_liked":false,"id":83923,"user_name":"刘义方","can_delete":false,"product_type":"c1","uid":1084338,"ip_address":"","ucode":"29793C7987225B","user_header":"https://static001.geekbang.org/account/avatar/00/10/8b/b2/d91e6d3d.jpg","comment_is_top":false,"comment_ctime":1554733947,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554733947","product_id":100020801,"comment_content":"老师，这个地方描述是否有问题，在视图 A、B、C 里面，这一个记录的值分别是 1、2、4，应该是1、2、3？","like_count":0},{"had_liked":false,"id":83565,"user_name":"Kermit Sun","can_delete":false,"product_type":"c1","uid":1245430,"ip_address":"","ucode":"9B0560FB228629","user_header":"https://static001.geekbang.org/account/avatar/00/13/00/f6/f6cf138c.jpg","comment_is_top":false,"comment_ctime":1554652488,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554652488","product_id":100020801,"comment_content":"&quot;在“读提交”隔离级别下，这个视图是在每个 SQL 语句开始执行的时候创建的。&quot;这一句有点疑问，在提交读级别下，如果a线程查询，创建了视图，这时候b线程更改了数据并提交，a线程再查询是新的还是旧的呢？如果是新的那新建的视图有什么用处？如果是旧的，那就不符合读提交的定义了吧？","like_count":0},{"had_liked":false,"id":83512,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1119593,"ip_address":"","ucode":"94656FE4A6C378","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","comment_is_top":false,"comment_ctime":1554633591,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1554633591","product_id":100020801,"comment_content":"防止调用链太长，消除慢查，定期统计长事务场景(怎么和代码关联起来？)，防止一个事务操作数据库太多次(循环更新)","like_count":0},{"had_liked":false,"id":83463,"user_name":"Flash","can_delete":false,"product_type":"c1","uid":1236163,"ip_address":"","ucode":"E285075C9E0B02","user_header":"https://static001.geekbang.org/account/avatar/00/12/dc/c3/e4ba51d5.jpg","comment_is_top":false,"comment_ctime":1554609653,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554609653","product_id":100020801,"comment_content":"1. 方式二 是指set autocommit=0，事务会自动启动，不需要显示的启动事务去使用begin语句，但是会导致意外的长事务;所以老师建议设置为 1，这时候就需要显示的启动事务了对吗?<br>2. “多一次交互” 问题没听太明白，老师说的如果你也有这个顾虑，是什么顾虑呢？","like_count":0},{"had_liked":false,"id":82973,"user_name":"思尔","can_delete":false,"product_type":"c1","uid":1306255,"ip_address":"","ucode":"996929FDD8A71C","user_header":"https://static001.geekbang.org/account/avatar/00/13/ee/8f/23d79d59.jpg","comment_is_top":false,"comment_ctime":1554362475,"is_pvip":false,"replies":[{"id":"30010","content":"看下08哈 <br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1554431790,"ip_address":"","comment_id":82973,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1554362475","product_id":100020801,"comment_content":"不明白的是，文中提到的回滚日志是什么？和上篇文章中的redo日志有关系吗？是不是只有开启事务，才会存在这个回滚日志，记录数据的变化？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445799,"discussion_content":"看下08哈 \n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554431790,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81210,"user_name":"Nash","can_delete":false,"product_type":"c1","uid":1239904,"ip_address":"","ucode":"E634E1A53F526F","user_header":"https://static001.geekbang.org/account/avatar/00/12/eb/60/598942dd.jpg","comment_is_top":false,"comment_ctime":1553831481,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553831481","product_id":100020801,"comment_content":"1.隔离性与隔离级别<br>  （1）查看隔离级别：show variables like &#39;%isolation&#39;;<br>  （2）在实现上，数据库里面会创建一个视图，访问的时候以视图的逻辑结果为准<br>      在“可重复读（read uncommitted）”隔离级别下，这个视图是在事务启动时创建的，整个事务存在期间都在使用这个视图；<br>      在“读提交（read committed）”隔离级别下，这个视图是在每个 SQL 语句开始执行的时候创建的；<br>      在“读未提交（repeatable read）”隔离级别下，直接返回记录上的最新值，没有视图概念；<br>      在“串行化（serializable ）”隔离级别下，直接用加锁的方式来避免并行访问。<br>2.事务隔离的实现<br>  每条记录在更新的时候都会同时记录一条回滚操作。同一条记录在系统中可以存在多个版本，这就是数据库的多版本并发控制（MVCC）。<br>3.事务的启动方式：show variables like &#39;%autocommit&#39;;<br>  （1）autocommit为off时，意味着如果你只执行一个 select 语句，这个事务就启动了，而且并不会自动提交。这个事务持续存在直到你主动执行 commit 或 rollback 语句，或者断开连接。（不建议这样设置）<br>  （2）autocommit为on时，需显式启动事务语句， begin 或 start transaction。配套的提交语句是 commit，回滚语句是 rollback。（建议这样设置）<br>  注：在 autocommit 为 on 的情况下，用 begin 显式启动的事务，如果执行 commit 则提交事务。 如果执行commit work and chain，则是提交事务并自动启动下一个事务，这样也省去了再次执行 begin 语句的开销。同时带来的好处是从程序开发的角度明确地知道每个语句是否处于事务中。","like_count":0},{"had_liked":false,"id":80365,"user_name":"莫问流年","can_delete":false,"product_type":"c1","uid":1249663,"ip_address":"","ucode":"23140E031AED4B","user_header":"https://static001.geekbang.org/account/avatar/00/13/11/7f/80d56c1c.jpg","comment_is_top":false,"comment_ctime":1553652070,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553652070","product_id":100020801,"comment_content":"读未提交：你的修改未提交我也能读到。<br>读已提交：你的修改提交之后我才能读到。<br>可重复读：你的修改提交了我也未不重新读。<br>串行化：我加锁了，在此期间拒绝修改。","like_count":0},{"had_liked":false,"id":79192,"user_name":"　","can_delete":false,"product_type":"c1","uid":1172538,"ip_address":"","ucode":"DBE2DB5CC52C91","user_header":"https://static001.geekbang.org/account/avatar/00/11/e4/3a/16545faf.jpg","comment_is_top":false,"comment_ctime":1553398144,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553398144","product_id":100020801,"comment_content":"set autocommit=0是在start transaction后，连查询都会开启一个事务，且不会自动提交，从而造成长事务的可能。<br>set autocommit=1是只有执行begin才会开启事务，查询不会开启事务么？这样造成的一个情况就是在业务需要多次使用事务的情况下多次执行begin,所以才有了commit work and chain。<br><br>关于set autocommit不同值的理解，我是否理解对了呢？老师。","like_count":0},{"had_liked":false,"id":78689,"user_name":"涛涛","can_delete":false,"product_type":"c1","uid":1180810,"ip_address":"","ucode":"747C4B1F20A2D3","user_header":"https://static001.geekbang.org/account/avatar/00/12/04/8a/ff94bd60.jpg","comment_is_top":false,"comment_ctime":1553218332,"is_pvip":false,"replies":[{"id":"28696","content":"在后面","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1553281335,"ip_address":"","comment_id":78689,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553218332","product_id":100020801,"comment_content":"mysql rr级别不能避免幻读，这个怎么没说？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444191,"discussion_content":"在后面","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553281335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78458,"user_name":"少年","can_delete":false,"product_type":"c1","uid":1205166,"ip_address":"","ucode":"0FF4AA4C387776","user_header":"https://static001.geekbang.org/account/avatar/00/12/63/ae/300316bc.jpg","comment_is_top":false,"comment_ctime":1553153574,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553153574","product_id":100020801,"comment_content":"mysql默认的隔离级别是可重复读，一般情况不会去调整这个级别。虽然明白各级别的意义，但是个人在实践中没有调整过默认的隔离级别。请问现实中，在什么样的具体场景下有足够的必要去调整到其他隔离级别呢？比如读提交。","like_count":0},{"had_liked":false,"id":78419,"user_name":"A快乐编程","can_delete":false,"product_type":"c1","uid":1070256,"ip_address":"","ucode":"0B8917CA1910AA","user_header":"https://static001.geekbang.org/account/avatar/00/10/54/b0/acb897f3.jpg","comment_is_top":false,"comment_ctime":1553143507,"is_pvip":false,"replies":[{"id":"28840","content":"对，例子里都是相同隔离级别<br><br>有可能不同事务的隔离级别是不同的（每个事务可以单独设置）<br><br>至于行为结果的话，你看下08篇，还是得弄清楚原理后再具体问题具体分析的<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1553355990,"ip_address":"","comment_id":78419,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553143507","product_id":100020801,"comment_content":"老师，文章所说的例子，隔离级别对事务A和事务B是同级别的吗？有没有可能两事务的隔离级别是不一样的？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444087,"discussion_content":"对，例子里都是相同隔离级别\n\n有可能不同事务的隔离级别是不同的（每个事务可以单独设置）\n\n至于行为结果的话，你看下08篇，还是得弄清楚原理后再具体问题具体分析的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553355990,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78331,"user_name":"Chris","can_delete":false,"product_type":"c1","uid":1054137,"ip_address":"","ucode":"4E8BC855F6B9BB","user_header":"https://static001.geekbang.org/account/avatar/00/10/15/b9/f69a43c0.jpg","comment_is_top":false,"comment_ctime":1553131372,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553131372","product_id":100020801,"comment_content":"请问一下，目前互联网公司是不是大多数是用rc模式的，这样并发度会更好，貌似rr模式也没什么必要了，SQLserver和oracle都是rc默认","like_count":0},{"had_liked":false,"id":77895,"user_name":"慕羽～","can_delete":false,"product_type":"c1","uid":1320766,"ip_address":"","ucode":"63937A6479EEA3","user_header":"https://static001.geekbang.org/account/avatar/00/14/27/3e/3387526d.jpg","comment_is_top":false,"comment_ctime":1553021233,"is_pvip":false,"replies":[{"id":"28907","content":"acid里面说的隔离性是指RC或者RR哈<br><br>事务隔离还是很必要的吧，脏读的话，很多业务逻辑都会出问题","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1553415854,"ip_address":"","comment_id":77895,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553021233","product_id":100020801,"comment_content":"老师您好，有个问题一直没能理解。<br>事务的acid特性中，具有隔离性，那为什么脏读中，一个事务可以读到另一个事务更新但未提交的数据呢？<br>还有就是为什么会有事务隔离级别呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443887,"discussion_content":"acid里面说的隔离性是指RC或者RR哈\n\n事务隔离还是很必要的吧，脏读的话，很多业务逻辑都会出问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553415854,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":77646,"user_name":"不似旧日","can_delete":false,"product_type":"c1","uid":1161271,"ip_address":"","ucode":"DF4C5E3AB9570C","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/37/98991aeb.jpg","comment_is_top":false,"comment_ctime":1552977866,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552977866","product_id":100020801,"comment_content":"总结: <br>1事物的特性: 原子性,一致性,隔离性,持久性<br>2多事物同时执行时出现: 脏读,幻读,不可重复读<br>3事物隔离级别: 读未提交,读已提交,可重复读,串行化<br>  读未提交:一个事物还未提交它的变更就能被其他事物看到<br>  读已提交:一个事物的变更提交后能被其他事物看到<br>  可重复读:一个事物执行过程中看到的数据一直, 未提交的更改对其他事物不可见<br>  串行化: 对应一个记录会加读写锁,出现冲突的时候后访问的事物要等待前一个事物执行完成才能继续执行","like_count":0},{"had_liked":false,"id":77046,"user_name":"阿冲","can_delete":false,"product_type":"c1","uid":1062514,"ip_address":"","ucode":"06BF66D9009659","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKg7RjNMzSrIwUnjYstbdicVv5MawrQLTHc6rdpwm0Q04b7icj7eAb0F8zSxe8gmM99QBvTECK5KvrQ/132","comment_is_top":false,"comment_ctime":1552816072,"is_pvip":false,"replies":[{"id":"28208","content":"看下08","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1552918771,"ip_address":"","comment_id":77046,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552816072","product_id":100020801,"comment_content":"老师你好，如果用了可重复读这个事务隔离级别，还需要锁表吗？比如select for update 。我对这块概念有点模糊。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443561,"discussion_content":"看下08","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552918771,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75574,"user_name":"无名道长","can_delete":false,"product_type":"c1","uid":1387960,"ip_address":"","ucode":"0F694D17459CC0","user_header":"https://static001.geekbang.org/account/avatar/00/15/2d/b8/7e49a241.jpg","comment_is_top":false,"comment_ctime":1552436875,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552436875","product_id":100020801,"comment_content":"接着老师的例子：同时你会发现，即使现在有另外一个事务正在将 4 改成 5，然后提交事务，这时数据库表T字段c的值变为5，但是read viewA的值还是1，现在执行更新语句UPDATE T SET c=c+1;结果是6.请问老师这个怎么解释呢？","like_count":0},{"had_liked":false,"id":75223,"user_name":"Geek_28c35a","can_delete":false,"product_type":"c1","uid":1451160,"ip_address":"","ucode":"F6AD6E066CDBA5","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/2hXSy0RbzfFp4A4qFGe1DG1Gj2ckpmzbTZVuCm1DrTXjyt0jn09hCgNspCMRtRtt5RRJib57T9IQawgJokCLzLQ/132","comment_is_top":false,"comment_ctime":1552366506,"is_pvip":false,"replies":[{"id":"27537","content":"对","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1552407204,"ip_address":"","comment_id":75223,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552366506","product_id":100020801,"comment_content":"是不是当事务提交后，就无法回滚了","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442828,"discussion_content":"对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552407204,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75082,"user_name":"无毁的湖光","can_delete":false,"product_type":"c1","uid":1400018,"ip_address":"","ucode":"A2D0721EF48916","user_header":"https://static001.geekbang.org/account/avatar/00/15/5c/d2/dc59be0a.jpg","comment_is_top":false,"comment_ctime":1552354515,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552354515","product_id":100020801,"comment_content":"hello 一致性视图是在事务中第一次select（非for update，也不能是lock in share mode）的时候创建的。所以事务1begin之后什么都不做或者做的非select操作，事务2做操作提交，事务1再select是能看到2的修改的。详见博客：<br>MySQL多版本并发控制机制(MVCC)-源码浅析 https:&#47;&#47;my.oschina.net&#47;alchemystar&#47;blog&#47;1927425<br>","like_count":0},{"had_liked":false,"id":74559,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1115284,"ip_address":"","ucode":"D412FB8BF1CEB8","user_header":"https://static001.geekbang.org/account/avatar/00/11/04/94/c04ddcf6.jpg","comment_is_top":false,"comment_ctime":1552235397,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552235397","product_id":100020801,"comment_content":"老师 有个问题不太理解。首先将事务隔离级别设为串行化。1.启动事务A，再启动事务B; 2.在事务A上执行select * from t; 在事务B上也执行select * from t;  好像这个时候只能事务B上做修改，A要等B commit之后才能update。 问题一 想知道为什么是事务B拿到了锁 问题二 B 事务做完修改commit之后,  A再去查居然能查到B事务的修改， 但是A此时还未提交呀。这不跟读已提交一样吗？ 望老师解答<br>","like_count":0},{"had_liked":false,"id":73826,"user_name":"未来小娃","can_delete":false,"product_type":"c1","uid":1047329,"ip_address":"","ucode":"477D166EBB6B70","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/21/d017438c.jpg","comment_is_top":false,"comment_ctime":1552011153,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1552011153","product_id":100020801,"comment_content":"主要介绍了事务的隔离级别以及在数据库上的实现原理。既然提到了事务，那么为什么要有事务，简单来说就是保证一组操作的原子性，要么成功要么失败。<br><br>所谓事务的隔离级别是指因为并发的关系可能导致事务之间相互影响，事务隔离级别本质上还是为了解决并发问题的一种方案。在并发的事务中，可能会导致脏读、不可重复读和幻读的问题。<br><br>脏读是指一个事务读取到未提交的事务的修改；不可重复读是指在同一个事务内两次相同的查询返回的结果不一致，产生的原因是事务执行期间有其他事务修改了数据；幻读是指同一个事务内两次查询返回的结果集不一致（可能增加也可能删除了记录），产生的原因事务执行期间发生了插入或者删除操作。<br><br>那么相应的为了解决上述问题有了事务隔离级别，分为读未提交、读已提交、可重复读、串行化。<br><br>读未提交：一个事务还没提交时，它做的变更能被其他事务看到<br>读已提交：一个事务还没提交时，他做的变更不能被其他事务看到<br>可重复读：同一个事务执行多次查询返回的结果是一致的<br>串行化：后访问的事务要等待前面的事务执行完才能执行，意味着读会阻塞写，写会阻塞读，读也会阻塞读<br><br>mysql默认的隔离级别是可重复读，那么可重复读适用哪些场景呢？比如对账的场景，因为中间可能需要多次查询账户信息，而且可能会耗时比较长，如果多次查询某个账户的信息返回的结果不一致，那么根本没法做对账。说完场景，再来聊聊实现。可重复读的实现很简单，就是快照。每次更新的mysql返回一个该时间点的快照视图（版本），视图是不可变的，事务期间查询的结果都从视图获取。不同的时刻返回的视图（版本）都不一致，所以事务之间不会相互影响。但是如果在事务提交前有另外一个事务新增或者删除了一条记录，虽然查询返回的结果仍然一致，但是执行插入操作的时候会提示键重复，插入失败。这就是幻读，因为查询没有返回其他事务新增的记录，但是插入的时候报错了，就好像出现了幻觉。这种通过版本控制并发的策略就是MVCC（多版本并发控制）<br><br>MVCC具体的玩法总结为三点：<br>假设原始数据的版本是V0<br>1）事务A执行写操作的时候将数据克隆一份，版本变成V1<br>2）这时有个并发事务B读取数据，依然可以读取版本V0的数据<br>3）事务A基于V1版本的数据进行操作，直到提交事务","like_count":0},{"had_liked":false,"id":73431,"user_name":"洋","can_delete":false,"product_type":"c1","uid":1221187,"ip_address":"","ucode":"4AA54AF947A036","user_header":"https://static001.geekbang.org/account/avatar/00/12/a2/43/ac845f13.jpg","comment_is_top":false,"comment_ctime":1551882722,"is_pvip":false,"replies":[{"id":"27045","content":"回滚日志在事务执行期间都会保留<br>执行完成也不能完全删除。看下08篇","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1552094772,"ip_address":"","comment_id":73431,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551882722","product_id":100020801,"comment_content":"不管数据库是什隔离级别，只有事物只开始了还没有结束，在开始之后和结束之前，更新数据库生成的回滚日志都不会删除，这样理解对么，如果事物提交了，这些会不会删除？是事物提交后立即删除么？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442083,"discussion_content":"回滚日志在事务执行期间都会保留\n执行完成也不能完全删除。看下08篇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552094772,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73367,"user_name":"洋","can_delete":false,"product_type":"c1","uid":1221187,"ip_address":"","ucode":"4AA54AF947A036","user_header":"https://static001.geekbang.org/account/avatar/00/12/a2/43/ac845f13.jpg","comment_is_top":false,"comment_ctime":1551870579,"is_pvip":false,"replies":[{"id":"26811","content":"你说的是redo log 吗？Redo log提交了就确保写磁盘了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551926887,"ip_address":"","comment_id":73367,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551870579","product_id":100020801,"comment_content":"这个日志是在事物没有提交的时候生成的是么，如果提交了呢，会被删除么","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442046,"discussion_content":"你说的是redo log 吗？Redo log提交了就确保写磁盘了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551926887,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73366,"user_name":"洋","can_delete":false,"product_type":"c1","uid":1221187,"ip_address":"","ucode":"4AA54AF947A036","user_header":"https://static001.geekbang.org/account/avatar/00/12/a2/43/ac845f13.jpg","comment_is_top":false,"comment_ctime":1551870507,"is_pvip":false,"replies":[{"id":"27042","content":"看下08篇哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1552094104,"ip_address":"","comment_id":73366,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551870507","product_id":100020801,"comment_content":"在不需要的时候才删除。也就是说，系统会判断，当没有事务再需要用到这些回滚日志时，回滚日志会被删除。<br><br>这句话没有理解，没有事物用到的时候会删除，没有事物用到不是很理解。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442045,"discussion_content":"看下08篇哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552094104,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73203,"user_name":"刘志兵","can_delete":false,"product_type":"c1","uid":1441734,"ip_address":"","ucode":"A90C2FA49EDC23","user_header":"https://static001.geekbang.org/account/avatar/00/15/ff/c6/8b5cbe97.jpg","comment_is_top":false,"comment_ctime":1551839297,"is_pvip":false,"replies":[{"id":"28005","content":"看下08篇","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1552723830,"ip_address":"","comment_id":73203,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551839297","product_id":100020801,"comment_content":"老师您好，文章讲的可重复读的实现方式是通过不同的view,记录回滚操作来实现可重复读，之前在其他书中看到过可重复读的实现方式是给对应的记录加上行锁和间隙锁，保证其他事物不能把满足条件的记录插入进来，直到这个事物释放了锁，这两种方式应该是都可以实现可重复读，但是到底是哪种实现方式呢，谢谢老师！参考文献也是阿里的一位老师写的，http:&#47;&#47;hedengcheng.com&#47;?p=771","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441969,"discussion_content":"看下08篇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552723830,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72866,"user_name":"charles","can_delete":false,"product_type":"c1","uid":1270127,"ip_address":"","ucode":"936B89B442DB7B","user_header":"https://static001.geekbang.org/account/avatar/00/13/61/6f/f072c3d1.jpg","comment_is_top":false,"comment_ctime":1551748715,"is_pvip":false,"replies":[{"id":"27085","content":"额 这个就是合理的呀，<br>看下08篇","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1552111127,"ip_address":"","comment_id":72866,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551748715","product_id":100020801,"comment_content":"老师，我测试了一下：<br>对于一个表T，里面有字段id，name ，我用cmd操作，开启两个窗口A，B。隔离级别都设置为可重复度。都对表T进行更新操作，A先进行更新，然后B又进行更新操作。出现了B等待，直到A提交事物才开始执行。这是什么原因啊。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441798,"discussion_content":"额 这个就是合理的呀，\n看下08篇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552111127,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71353,"user_name":"唐僧洗头爱飘柔","can_delete":false,"product_type":"c1","uid":1203894,"ip_address":"","ucode":"3E4EBC8AEC649A","user_header":"https://static001.geekbang.org/account/avatar/00/12/5e/b6/a6bc2065.jpg","comment_is_top":false,"comment_ctime":1551325843,"is_pvip":false,"replies":[{"id":"25541","content":"不是的，跟事务是否提交无关，这个事务自己会创建事务视图","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551331770,"ip_address":"","comment_id":71353,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551325843","product_id":100020801,"comment_content":"“读提交”隔离级别，视图在每个SQL语句开始执行时创建。这句话结合到文中示例，按照我的理解，事务A的“查询得到值V1”会创建新视图，但是事务B的“将1改成2”已经执行了，那么事务A得到的V1应为2才对呀。我觉着是否改成“读提交隔离级别，视图在有其他事务提交后，自身事务中有SQL语句开始执行时会创建”，会更准确些？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441120,"discussion_content":"不是的，跟事务是否提交无关，这个事务自己会创建事务视图","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551331770,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70435,"user_name":"洋","can_delete":false,"product_type":"c1","uid":1221187,"ip_address":"","ucode":"4AA54AF947A036","user_header":"https://static001.geekbang.org/account/avatar/00/12/a2/43/ac845f13.jpg","comment_is_top":false,"comment_ctime":1551096723,"is_pvip":false,"replies":[{"id":"25113","content":"执行完语句但是一直不断开连接","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551097517,"ip_address":"","comment_id":70435,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551096723","product_id":100020801,"comment_content":"什么是长事物？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440633,"discussion_content":"执行完语句但是一直不断开连接","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551097517,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69851,"user_name":"王虎","can_delete":false,"product_type":"c1","uid":1046622,"ip_address":"","ucode":"BE80327F2E6102","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/5e/169b7acb.jpg","comment_is_top":false,"comment_ctime":1550886303,"is_pvip":false,"replies":[{"id":"24928","content":"1.  是，不过隔离级别这个已经是数据库标准了；<br>2. 读提交也用。","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1550969419,"ip_address":"","comment_id":69851,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550886303","product_id":100020801,"comment_content":"老师你好！我的理解是隔离级是从用户对数据库系统的要求角度做了分级抽象，而具体的数据库系统（存储引擎？）则是基于这些要求进行开发，当然可能采用了不同的策略来实现。请问这个理解对吗？<br>如果是这样的话，这里的回滚段方式策略只是适用于可重复读（repeatable read）隔离级吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440317,"discussion_content":"1.  是，不过隔离级别这个已经是数据库标准了；\n2. 读提交也用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550969419,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69654,"user_name":"暴力的小石头","can_delete":false,"product_type":"c1","uid":1178779,"ip_address":"","ucode":"4C69E24A54C2FB","user_header":"https://static001.geekbang.org/account/avatar/00/11/fc/9b/0e79a034.jpg","comment_is_top":false,"comment_ctime":1550803216,"is_pvip":true,"replies":[{"id":"24747","content":"这里有个误会，看一下08篇哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1550804892,"ip_address":"","comment_id":69654,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550803216","product_id":100020801,"comment_content":"你好，我想问一下，文中说事务隔离级别的实现依赖视图实现的，这个视图是mysql中的视图吗，如果是的话，就有问题了，如果在事务启动的时候创建视图的话，视图里的数据是某张表的数据，还是整个库数据，视图启动并不知道会访问什么数据呀，而且视图的数据随实际数据变化的，又怎么可以保证可以重复读呢？还是说只是类似于视图的东西，如果是的话，哪里可能要说明一下，很容易误会，望解惑","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440208,"discussion_content":"这里有个误会，看一下08篇哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550804892,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69442,"user_name":"suynan","can_delete":false,"product_type":"c1","uid":1023214,"ip_address":"","ucode":"0AAD1BA9D22D2C","user_header":"","comment_is_top":false,"comment_ctime":1550746277,"is_pvip":false,"replies":[{"id":"24674","content":"👍 同学们问题问得好😆","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1550754876,"ip_address":"","comment_id":69442,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550746277","product_id":100020801,"comment_content":"有些不理解的，看了评论豁然开朗","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440124,"discussion_content":"👍 同学们问题问得好😆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550754876,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68256,"user_name":"就是那回事儿","can_delete":false,"product_type":"c1","uid":1303618,"ip_address":"","ucode":"13B9A7A00570D4","user_header":"https://static001.geekbang.org/account/avatar/00/13/e4/42/f1c680f2.jpg","comment_is_top":false,"comment_ctime":1550469357,"is_pvip":false,"replies":[{"id":"25097","content":"你要先自己验证一下😆","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551081139,"ip_address":"","comment_id":68256,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550469357","product_id":100020801,"comment_content":"我有个问题：在实例中假设事务隔离级别为“可重复读“，事务A的“查询得到值V1”后面增加一条“更新值为2”的语句，保证该语句在事务B提交之前执行，请问 这个时候查询得到的值V2是多少？按照可重复读的定义是不是 1 ，不过感觉不对看着好像应该是2，请老师给解释一下","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439592,"discussion_content":"你要先自己验证一下😆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551081139,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":67140,"user_name":"刘鹏","can_delete":false,"product_type":"c1","uid":1230417,"ip_address":"","ucode":"44F3D4DB3F5678","user_header":"https://static001.geekbang.org/account/avatar/00/12/c6/51/e39b5828.jpg","comment_is_top":false,"comment_ctime":1550102656,"is_pvip":false,"replies":[{"id":"23803","content":"是的，这个是需要业务逻辑配合的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1550127675,"ip_address":"","comment_id":67140,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550102656","product_id":100020801,"comment_content":"老师，避免长事物那就要进行拆分，在业务中进行逻辑控制了吧？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439076,"discussion_content":"是的，这个是需要业务逻辑配合的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550127675,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65777,"user_name":"Jefitar","can_delete":false,"product_type":"c1","uid":1370659,"ip_address":"","ucode":"D7ED9F32ADA5B1","user_header":"https://static001.geekbang.org/account/avatar/00/14/ea/23/508f71e3.jpg","comment_is_top":false,"comment_ctime":1549635003,"is_pvip":false,"replies":[{"id":"23262","content":"没有啊<br><br>不是每个参数都会默认写在my.ini里的，没写的时候就用默认值，<br>你可以在  innodb_flush_log_at_trx_commit 的下一行加上sync_binlog=1就是设置上了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1549668905,"ip_address":"","comment_id":65777,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1549635003","product_id":100020801,"comment_content":"老师您好，请问如何修改 sync_binlog 这个参数？我用的是 mysql 8.0，在 my.ini 中找到了 innodb_flush_log_at_trx_commit 参数（默认值为1），但是没有 sync_binlog 参数，是用其他参数代替了吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438582,"discussion_content":"没有啊\n\n不是每个参数都会默认写在my.ini里的，没写的时候就用默认值，\n你可以在  innodb_flush_log_at_trx_commit 的下一行加上sync_binlog=1就是设置上了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549668905,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65677,"user_name":"愚人","can_delete":false,"product_type":"c1","uid":1355952,"ip_address":"","ucode":"40DE41849EF9EA","user_header":"https://static001.geekbang.org/account/avatar/00/14/b0/b0/30b29949.jpg","comment_is_top":false,"comment_ctime":1549554469,"is_pvip":false,"replies":[{"id":"23264","content":"1. 串行化隔离级别的锁是事务级别，既然是串行化，就是保证一个事务结束前，其他事务不能访问它锁住的资源；<br><br>2. 会<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1549669138,"ip_address":"","comment_id":65677,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1549554469","product_id":100020801,"comment_content":"串行化隔离级别的锁是什么粒度的？合理的做法应该是只在读写记录时加锁，但从结果来看，是对整个事务加锁。<br>如果事务A和事务B不按相同顺序都访问了多个row，会不会出现死锁？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438545,"discussion_content":"1. 串行化隔离级别的锁是事务级别，既然是串行化，就是保证一个事务结束前，其他事务不能访问它锁住的资源；\n\n2. 会\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549669138,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64507,"user_name":"全麦小面包","can_delete":false,"product_type":"c1","uid":1086413,"ip_address":"","ucode":"823C65BF366097","user_header":"https://static001.geekbang.org/account/avatar/00/10/93/cd/dbafc7d1.jpg","comment_is_top":false,"comment_ctime":1548813533,"is_pvip":false,"replies":[{"id":"22845","content":"那表示都是短事务？<br><br>你找个测试库，手动执行START TRANSACTION WITH consistent snapshot,<br>然后再去innodb_trx 表看看？","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548818703,"ip_address":"","comment_id":64507,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548813533","product_id":100020801,"comment_content":"为什么我用Navicat查看 information_schema 库的 innodb_trx表，里面什么都没有?这个应该和直接看一样吧？我看了2个不同的数据库，都是空的，而且这2个数据库有1个已经运行了1年了，为什么什么都没有？<br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438035,"discussion_content":"那表示都是短事务？\n\n你找个测试库，手动执行START TRANSACTION WITH consistent snapshot,\n然后再去innodb_trx 表看看？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548818703,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64147,"user_name":"杰之7","can_delete":false,"product_type":"c1","uid":1297232,"ip_address":"","ucode":"F7DA2E21085332","user_header":"https://static001.geekbang.org/account/avatar/00/13/cb/50/66d0bd7f.jpg","comment_is_top":false,"comment_ctime":1548677395,"is_pvip":false,"replies":[{"id":"22670","content":"👍","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548682570,"ip_address":"","comment_id":64147,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548677395","product_id":100020801,"comment_content":"通过这一节的复习，老师通过银行转账过程中金额的改变事例给我们介绍了事务的原理。今天老师给我们讲述了ACID中的隔离性。在隔离性中，正是由于有隔离级别的存在，这样也让事务更有价值。<br><br>在事务隔离级别上，读提交就是在另一个事务提交之后才能看见更改的结果。可重复读就是给另一个事务拍了一张照，尽管另一事务已经提交，看到的依然是之前的结果。下面是我在Mysql中做的实践。<br><br>读提交：开启事务A。start transaction; select * from t;我设的c的初始值为2。开启事务B。start transaction;select * from ;在B更改c的值加1。update t set c=c+1;在A中select * from t。t=2。在B中commit。在A中select * from t。t=3;在A同中commit ,t=3。可重复读：就是在B中提交了之后，A的值和之前依然保持不变。<br><br>由隔离级别的实现，老师讲述了隔离级别的原理，MVCC(多版本并发控制)，并由此讲述了长事物的来由及怎么避免长事务。<br><br>回到老师的问题，其实您已经在文章中给了方案。通过commit work and chain在解决。<br><br>昨天晚上那么晚了都回答了我的问题，老师已经如此优秀，依然这么热爱，我想我就之前没做过数据库，跟着老师我学完之后我依然可以做数据库的一员。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437885,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548682570,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63678,"user_name":"自由港","can_delete":false,"product_type":"c1","uid":1086779,"ip_address":"","ucode":"EA1AFDB9123747","user_header":"https://static001.geekbang.org/account/avatar/00/10/95/3b/a7c94a53.jpg","comment_is_top":false,"comment_ctime":1548462858,"is_pvip":false,"replies":[{"id":"22539","content":"是的，这篇和08篇有说到这个现象的原理哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548484150,"ip_address":"","comment_id":63678,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548462858","product_id":100020801,"comment_content":"我试过在可重复读的情况下，前一个操作改了数据，在马山读取，并不能读到修改的数据，在读提交是可以的。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437681,"discussion_content":"是的，这篇和08篇有说到这个现象的原理哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548484150,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63292,"user_name":"summer_7196","can_delete":false,"product_type":"c1","uid":1390813,"ip_address":"","ucode":"B61E9F29D0D8CE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ2QFSebcWYzvSibOicRbaeqGmq1kFuHVvwjadDsicQnIbovlGqSfmfibtib9TSwcIqWfcxkKw8DSxTTVg/132","comment_is_top":false,"comment_ctime":1548318282,"is_pvip":false,"replies":[{"id":"22410","content":"不可重复读、幻读只是在查询瞬间导致结果不准确。再做一次查询就ok了？<br><br>额，这个要看业务要求。你这么想，一个业务查到数据以后，它自己是不知道“结果对不对”，所以也无法决定“要不要再查一次”<br><br>rr隔离级别下会有间隙锁存在，看下20、21篇<br><br>mdl锁。。跟这些概念没关系","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548321753,"ip_address":"","comment_id":63292,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548318282","product_id":100020801,"comment_content":"是否能这样理解：不可重复读、幻读只是在查询瞬间导致结果不准确。再做一次查询就ok了？不影响数据准确性。<br>日常环境下考虑并发性rc隔离级别就可以了，金融级别用rr？<br>mysql的rc跟Oracle的rc一样吗？<br>网上说：rr隔离级别下会有间隙锁存在，产生大量的mdl锁？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437534,"discussion_content":"不可重复读、幻读只是在查询瞬间导致结果不准确。再做一次查询就ok了？\n\n额，这个要看业务要求。你这么想，一个业务查到数据以后，它自己是不知道“结果对不对”，所以也无法决定“要不要再查一次”\n\nrr隔离级别下会有间隙锁存在，看下20、21篇\n\nmdl锁。。跟这些概念没关系","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548321753,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63143,"user_name":"苦行僧","can_delete":false,"product_type":"c1","uid":1055334,"ip_address":"","ucode":"726024A9A9CF44","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/66/2d9db9ed.jpg","comment_is_top":false,"comment_ctime":1548287905,"is_pvip":false,"replies":[{"id":"22366","content":"“查询是非事务” 这句话本身是错的，<br>基于InnoDB的查询，本身也是一个事务。<br>“查询没有commit是不是也会导致长事务的发生”， 是的。<br>不过如果 set autocommit=1;并且没有begin的话，一个语句执行完成后就会直接提交事务的（当然只读事务的提交基本没干啥）","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548288980,"ip_address":"","comment_id":63143,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548287905","product_id":100020801,"comment_content":"经常在开发过程中会听到查询是非事务的 只有增删改是事务的，这个查询没有commit是不是也会导致长事务的发生，请老师指正","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437481,"discussion_content":"“查询是非事务” 这句话本身是错的，\n基于InnoDB的查询，本身也是一个事务。\n“查询没有commit是不是也会导致长事务的发生”， 是的。\n不过如果 set autocommit=1;并且没有begin的话，一个语句执行完成后就会直接提交事务的（当然只读事务的提交基本没干啥）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548288980,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62558,"user_name":"三胖","can_delete":false,"product_type":"c1","uid":1373454,"ip_address":"","ucode":"CD69FCD606FC5C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/1hp9kzzuLUVHzmmddIPIO2OgUWr1ibJRr8cMoB7K0fwx8Vmn34L8yN2NoYUtgNicfPGaXKF02pQ2huXd59r2I0kw/132","comment_is_top":false,"comment_ctime":1548092254,"is_pvip":false,"replies":[{"id":"22148","content":"innodb_trx 显示的是“当前正在执行的事务”<br><br>如果语句执行完成了，你在innodb_trx是看不到的哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548119005,"ip_address":"","comment_id":62558,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548092254","product_id":100020801,"comment_content":"老师！！！如果每一个select都是一个完整的事务，那为什么innodb_trx没有数据呢，我是在本机上玩的，按理说我在本地数据库玩过很多，innodb_trx不应该没数据呀，求解释","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437258,"discussion_content":"innodb_trx 显示的是“当前正在执行的事务”\n\n如果语句执行完成了，你在innodb_trx是看不到的哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548119005,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62320,"user_name":"Geek_2e55e4","can_delete":false,"product_type":"c1","uid":1368601,"ip_address":"","ucode":"BDA95FA28ABB67","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/1lvonDfUoBRdfa5AjRdh0Oiao9BpDIibxzib5aGqmK3PVMXdicw4kiaBxn7ic0bXxXnXNhs7PC6dsl8fvdzwgic7WU2iag/132","comment_is_top":false,"comment_ctime":1548032612,"is_pvip":false,"replies":[{"id":"22032","content":"2也是不存在的，只有4是可以拿到的当前值。看一下08篇哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548040145,"ip_address":"","comment_id":62320,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1548032612","product_id":100020801,"comment_content":"“对于 read-view A，要得到 1，就必须将当前值依次执行图中所有的回滚操作得到” 视图A将2改成1，处于回滚日志最前的位置，只需执行从2到1就可以进行回滚了，不太懂老师这句话的意思","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437170,"discussion_content":"2也是不存在的，只有4是可以拿到的当前值。看一下08篇哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548040145,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1105354,"avatar":"https://static001.geekbang.org/account/avatar/00/10/dd/ca/fe3f7f0e.jpg","nickname":"T.Y","note":"","ucode":"243C96604F1CAA","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":205101,"discussion_content":"我的理解是read-view存储的是回滚操作，所以如果要取得read-view的值，得从最新视图开始回滚至当前视图才能获得当前事务的值。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584266421,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62124,"user_name":"妮可","can_delete":false,"product_type":"c1","uid":1359529,"ip_address":"","ucode":"2CAE45914EA038","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/oh2uojnJHou7WxFub9AnhJLeGcfHt85QSTqwEDUiaDz2BsLOFrN4hLbib1tLvDCrpKrH75aGxpia0TqNqkgYDnFicw/132","comment_is_top":false,"comment_ctime":1547947756,"is_pvip":false,"replies":[{"id":"21985","content":"嗯，你说得对，脏读一般都不好哦<br>如果针对这个问题，你可以看完03后，跳看08篇","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547962384,"ip_address":"","comment_id":62124,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547947756","product_id":100020801,"comment_content":"刚接手项目的时候，因为代码框架用事务，发出新版就锁表，服务器就崩溃，现在都不敢随意用事务了，用的话一律允许脏读。做法不好，跑来补课了。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437110,"discussion_content":"嗯，你说得对，脏读一般都不好哦\n如果针对这个问题，你可以看完03后，跳看08篇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547962384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61852,"user_name":"Li Yao","can_delete":false,"product_type":"c1","uid":1129838,"ip_address":"","ucode":"703E1E5505F70D","user_header":"https://static001.geekbang.org/account/avatar/00/11/3d/6e/60680aa4.jpg","comment_is_top":false,"comment_ctime":1547819825,"is_pvip":false,"replies":[{"id":"21936","content":"08篇看一下","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547831305,"ip_address":"","comment_id":61852,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547819825","product_id":100020801,"comment_content":"事务创建时快照的实现原理这块看得不是太明白","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437021,"discussion_content":"08篇看一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547831305,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":59479,"user_name":"Vincent","can_delete":false,"product_type":"c1","uid":1135159,"ip_address":"","ucode":"CD8B84A57A6A0C","user_header":"https://static001.geekbang.org/account/avatar/00/11/52/37/13b4c8aa.jpg","comment_is_top":false,"comment_ctime":1547377387,"is_pvip":false,"replies":[{"id":"21418","content":"是的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547396955,"ip_address":"","comment_id":59479,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547377387","product_id":100020801,"comment_content":"你所举例中A事务，B事务例子中 ，你是默认A,B事务设置的隔离级别都是一样的吗？比如可重复读隔离级别，那么案例中A，B事务的隔离级别都是可重复读。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436343,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547396955,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57989,"user_name":"高山高","can_delete":false,"product_type":"c1","uid":1120547,"ip_address":"","ucode":"4F1D91E3C3FBB9","user_header":"https://static001.geekbang.org/account/avatar/00/11/19/23/849beae4.jpg","comment_is_top":false,"comment_ctime":1546957693,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546957693","product_id":100020801,"comment_content":"很严谨地来讲，transaction_isolation知道5.7.20版本才替代tx_isolation","like_count":0},{"had_liked":false,"id":56814,"user_name":"lzw","can_delete":false,"product_type":"c1","uid":1351695,"ip_address":"","ucode":"55CB2D25C6FC20","user_header":"https://static001.geekbang.org/account/avatar/00/14/a0/0f/a81993a7.jpg","comment_is_top":false,"comment_ctime":1546563555,"is_pvip":false,"replies":[{"id":"20479","content":"得看业务需求😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546565937,"ip_address":"","comment_id":56814,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546563555","product_id":100020801,"comment_content":"目前多数应用场景是不是 可重复读？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435251,"discussion_content":"得看业务需求😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546565937,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56495,"user_name":"何磊","can_delete":false,"product_type":"c1","uid":1047604,"ip_address":"","ucode":"78934C3ED4A342","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fc/34/c733b116.jpg","comment_is_top":false,"comment_ctime":1546477789,"is_pvip":false,"replies":[{"id":"20368","content":"1. 不是，就是“更早启动的事务”<br>2. 对于RR隔离级别，事务视图就是每个事务启动的时候创建的。可以看看08篇哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546481398,"ip_address":"","comment_id":56495,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546477789","product_id":100020801,"comment_content":"丁大师，关于回滚段日志有两个疑问！<br>1. 什么时候才不需要了呢？就是当系统里没有比这个回滚日志更早的 read-view 的时候。这句话不是很理解，什么叫更早的read-view呢？是指由另外其他的事务产生的回滚日志吗？<br>2. 这个事务视图是什么时候产生的呢？我理解应该是有对数据的操作才会产生吧？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435071,"discussion_content":"1. 不是，就是“更早启动的事务”\n2. 对于RR隔离级别，事务视图就是每个事务启动的时候创建的。可以看看08篇哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546481398,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56276,"user_name":"小动物很困","can_delete":false,"product_type":"c1","uid":1133936,"ip_address":"","ucode":"49A727277A37E1","user_header":"https://static001.geekbang.org/account/avatar/00/11/4d/70/7d736d5f.jpg","comment_is_top":false,"comment_ctime":1546415454,"is_pvip":false,"replies":[{"id":"20281","content":"你说的对","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546426150,"ip_address":"","comment_id":56276,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546415454","product_id":100020801,"comment_content":"在不可重复读的深度解析里面.<br>比如说Read view A ,是不是快照的不是值,而是需要回滚段的操作都回滚一遍才能得到1,<br>这算不算可能长事务导致的性能问题","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434971,"discussion_content":"你说的对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546426150,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55804,"user_name":"1024","can_delete":false,"product_type":"c1","uid":1325126,"ip_address":"","ucode":"9DFAF1F44D469F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/dglMUGgevn9w5w3AGtTDibGhqGjf7G3GHwlOGXQl25xD7g2EsEktgxh2v4dgriaI2yLG2j45IhZCbhVg1eDrugOQ/132","comment_is_top":false,"comment_ctime":1546312550,"is_pvip":false,"replies":[{"id":"20110","content":"自动提交的意思是“在没有begin或start transaction 的时候”，自动提交😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546315608,"ip_address":"","comment_id":55804,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546312550","product_id":100020801,"comment_content":"如果set autocommit=1;显示启动事务语句；<br>执行事务：<br>begin;<br>sql1;<br>sql2;<br>commit;<br>问题：set autocommit=1，自动提交模式下，是不是每个sql都会自动提交，最后的commit语句是不是就没用了；如果把commit改成rollback，是不是也执行不了回滚操作了","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434846,"discussion_content":"自动提交的意思是“在没有begin或start transaction 的时候”，自动提交😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546315608,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55323,"user_name":"靖远小和尚","can_delete":false,"product_type":"c1","uid":1213861,"ip_address":"","ucode":"094FA096B9F9B1","user_header":"https://static001.geekbang.org/account/avatar/00/12/85/a5/471ce926.jpg","comment_is_top":false,"comment_ctime":1546127931,"is_pvip":false,"replies":[{"id":"20033","content":"嗯嗯，欢迎大家多提问题哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546134196,"ip_address":"","comment_id":55323,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546127931","product_id":100020801,"comment_content":"技不如人，甘拜下风！谢谢老师的付出加深了理解！其实评论区才是高手如云啊，评论真有意思哈哈，希望老师耐心回答问题哈，他们提的问题，我又可以多思考一下，是否理解对。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434739,"discussion_content":"嗯嗯，欢迎大家多提问题哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546134196,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55310,"user_name":"spraith","can_delete":false,"product_type":"c1","uid":1141702,"ip_address":"","ucode":"7FBC54DF0BBF50","user_header":"https://static001.geekbang.org/account/avatar/00/11/6b/c6/2534e14a.jpg","comment_is_top":false,"comment_ctime":1546103217,"is_pvip":false,"replies":[{"id":"20034","content":"视图a里面没有数据哦，（你想如果一个视图保存一份数据，那MySQL 也太容易就被查询打了）<br><br>可以看下08篇哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546134287,"ip_address":"","comment_id":55310,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546103217","product_id":100020801,"comment_content":"Gavin 说的例子中，为了保证可重复读，那只要保留视图a就行了，为什么还要保留回滚日志？想不明白，求解答","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434734,"discussion_content":"视图a里面没有数据哦，（你想如果一个视图保存一份数据，那MySQL 也太容易就被查询打了）\n\n可以看下08篇哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546134287,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54916,"user_name":"tailender","can_delete":false,"product_type":"c1","uid":1133837,"ip_address":"","ucode":"BCF8C43F9039E9","user_header":"https://static001.geekbang.org/account/avatar/00/11/4d/0d/f8b8c22e.jpg","comment_is_top":false,"comment_ctime":1545981204,"is_pvip":false,"replies":[{"id":"19892","content":"除了最后一个问号，redo log写到redo log  buffer里面了，其它都对哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545994842,"ip_address":"","comment_id":54916,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545981204","product_id":100020801,"comment_content":"redo一节中，update时首先 从内存中取到行（mysql缓存,不是查询缓存)。<br>更新时, 更新内存中数据页，先写日志，innodb_flush_log_at_trx_commit 参数设为1保证事务提交 所有更新redolog即写到磁盘（否则redolog不发挥作用？？？）. 这里会进行两阶段提交 和binlog一同保证crash-safe，保证mysql事务的 持久性。log写满固定大小最终会写到磁盘。 （事务commit和redolog commit)<br>这是事务提交的情况。 如果事务没有提交， 内存中脏页数据已经修改，此时没有记录redolog（???不确定），但会记录undolog。这时，一个问题是其他事务根据隔离级别，如果需要不同版本则找到该行记录的undolog，从而实现多版本MVCC；此外undolog 可以让事务回滚。没有提交的事务crash恢复时会抛弃。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434610,"discussion_content":"除了最后一个问号，redo log写到redo log  buffer里面了，其它都对哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545994842,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52632,"user_name":"linqw","can_delete":false,"product_type":"c1","uid":1134138,"ip_address":"","ucode":"09DCFE98C54DD8","user_header":"https://static001.geekbang.org/account/avatar/00/11/4e/3a/86196508.jpg","comment_is_top":false,"comment_ctime":1545458977,"is_pvip":false,"replies":[{"id":"19162","content":"看一下08篇😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545469749,"ip_address":"","comment_id":52632,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545458977","product_id":100020801,"comment_content":"老师，在“可重复读”隔离级别下，这个视图是在事务启动时创建的，整个事务存在期间都用这个视图。在“读提交”隔离级别下，这个视图是在每个 SQL 语句开始执行的时候创建的，为啥在RR级别下视图可以保证在对其他事务的不可见了，视图不是实体表中数据的虚拟表么？在其他事务提交时，视图中的数据会更新到实体表中么？实体表中的数据改变视图不是也会跟着改变么？这个还是有点不太理解，老师能帮忙解答下么？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433927,"discussion_content":"看一下08篇😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545469749,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52625,"user_name":"linqw","can_delete":false,"product_type":"c1","uid":1134138,"ip_address":"","ucode":"09DCFE98C54DD8","user_header":"https://static001.geekbang.org/account/avatar/00/11/4e/3a/86196508.jpg","comment_is_top":false,"comment_ctime":1545457382,"is_pvip":false,"replies":[{"id":"19163","content":"你先看下08篇，然后如果还有问题的话，在那偏下面留言哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545469794,"ip_address":"","comment_id":52625,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545457382","product_id":100020801,"comment_content":"老师最近一直对undo log和MVCC的配合使用有点困惑，重新回过头来看这篇，undo log记录事务是为了记录事务操作前的值，当事务回滚的时候，可以回滚为原来的值，MVCC不是在表结构字段中有两个隐藏的版本号么？可以理解为这条数据新增的版本号，和这条数据更改的版本号，那mvcc和undo log是如何在高并发的时候配合使用，在undo log中也会记录事务操作的版本号么？老师麻烦帮我解惑下哦","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433924,"discussion_content":"你先看下08篇，然后如果还有问题的话，在那偏下面留言哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545469794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52472,"user_name":"mjhorse","can_delete":false,"product_type":"c1","uid":1058220,"ip_address":"","ucode":"5DF0D07C2C729E","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/ac/cfa535e5.jpg","comment_is_top":false,"comment_ctime":1545389019,"is_pvip":false,"replies":[{"id":"19102","content":"啥意思…","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545396603,"ip_address":"","comment_id":52472,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545389019","product_id":100020801,"comment_content":"串行化读锁和写锁是可以独立配置的吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433890,"discussion_content":"啥意思…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545396603,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":50887,"user_name":"fdconan","can_delete":false,"product_type":"c1","uid":1244596,"ip_address":"","ucode":"01C71C6E9FD1E4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLv9HJIW4OACkjlwOQJ9cU7HzvaDFYkACWCib2lzOMef9ZiaGDTVFqjPicpVK5KDRbBRVGGHrMHQO1Rw/132","comment_is_top":false,"comment_ctime":1545061205,"is_pvip":false,"replies":[{"id":"18350","content":"得看业务逻辑，有的业务就需要这个特点… 如果有影响的，就要有对应的策略处理。<br><br>改隔离级别、加锁读啥的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545101221,"ip_address":"","comment_id":50887,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545061205","product_id":100020801,"comment_content":"有个小白问题，在可重复读的隔离级别下，两个事务都对同一行进行读出，事务一把该行某字段的值更改并提交了。事务二还在用该字段旧值做业务逻辑，这样不会有问题吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433158,"discussion_content":"得看业务逻辑，有的业务就需要这个特点… 如果有影响的，就要有对应的策略处理。\n\n改隔离级别、加锁读啥的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545101221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":50373,"user_name":"mymodian","can_delete":false,"product_type":"c1","uid":1336440,"ip_address":"","ucode":"10F98FCDBFA5A4","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/3a2XUcwibflaUKmbrAsKeknOk2HaHzkgzPJDHLMerc1H0mEFlvaibvYzCE4lRfV5yPGFHJhekUgXzxemuaQp7zwg/132","comment_is_top":false,"comment_ctime":1544963525,"is_pvip":false,"replies":[{"id":"18075","content":"是，begin不是事务启动， 之后第一个DML才是","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544970542,"ip_address":"","comment_id":50373,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544963525","product_id":100020801,"comment_content":"实验了一下，可重复读级别下应该是: 在事务中执行第一次查询后才会取一份快照，而不是事务开始后就取。比如启动事务A级别为RR,然后事务B修改记录rec1后提交,事务A此时select是能看到事务B的修改的，之后事务C再次修改记录rec1并提交，因为RR,此时事务A再次select就不能看到事务C的修改了。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432957,"discussion_content":"是，begin不是事务启动， 之后第一个DML才是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544970542,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":50238,"user_name":"萨拉热窝的棒小伙儿","can_delete":false,"product_type":"c1","uid":1338869,"ip_address":"","ucode":"D691CBAC4BC17A","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIU2IArYKPQ6l7DtsNERJW9NCiaHJ0uG89JRcV4M1QAiaSDPUVr6KVPbEvA24TPn1EwpRUGI7diarLFg/132","comment_is_top":false,"comment_ctime":1544930290,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544930290","product_id":100020801,"comment_content":"隔离级别是“读提交”，则 V1 是 1，V2 的值是 2。<br>这个是不是就是幻读的情况了？<br><br>幻读：在同一个事务中，同一个查询多次返回的结果不一致。事务B修改了一条记录，事务A在事务B提交前后各执行了一次查询操作，发现后一次比前一次记录多加了1。","like_count":0},{"had_liked":false,"id":50016,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1544840591,"is_pvip":false,"replies":[{"id":"18017","content":"在我们这个场景里应该不会，因为毕竟B已经在等锁了，而V3还要从头执行","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544874722,"ip_address":"","comment_id":50016,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544840591","product_id":100020801,"comment_content":"老师，您好！针对图一，原文提到：<br>若隔离级别是“串行化”，则在事务 B 执行“将 1 改成 2”的时候，会被锁住。直到事务 A 提交后，事务 B 才可以继续执行。所以从 A 的角度看， V1、V2 值是 1，V3 值是 2。<br><br>问题：<br>会出现这种场景么？事务 A 提交后，查询 V3 的操作先于事务 B 的“将 1 改为 2”，这样 V3 的值仍为 1。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432841,"discussion_content":"在我们这个场景里应该不会，因为毕竟B已经在等锁了，而V3还要从头执行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544874722,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49491,"user_name":"shawn","can_delete":false,"product_type":"c1","uid":1010221,"ip_address":"","ucode":"8F6A8C7920996E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6a/2d/ec4ed8ce.jpg","comment_is_top":false,"comment_ctime":1544697609,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544697609","product_id":100020801,"comment_content":"老师，你好。<br>这里会讲 mysql 如何进行事物回滚嘛？<br> 在执行如下3个语句：“statement1, statment2, statement3”，如果执行statement2失败的时候是如何进行回滚。 是不是执行 undolog来进行事物回滚，比如上面生成了如下undo日志：此时也会生成 undo日志 (undolog1-2) ,(undolog2-3), 如果执行 statement2失败了，那么是否执行 (undolog1-2)就可以了呢？","like_count":0},{"had_liked":false,"id":49439,"user_name":"艾草","can_delete":false,"product_type":"c1","uid":1302279,"ip_address":"","ucode":"E0D8F58FE6D122","user_header":"https://static001.geekbang.org/account/avatar/00/13/df/07/7bf65329.jpg","comment_is_top":false,"comment_ctime":1544688357,"is_pvip":false,"replies":[{"id":"17782","content":"额我这里设定的是 read_view C 是访问最新值的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544695628,"ip_address":"","comment_id":49439,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544688357","product_id":100020801,"comment_content":"关于回滚日志有不懂的地方：<br>原话：在 MySQL 中，实际上每条记录在更新的时候都会同时记录一条回滚操作。记录上的最新值，通过回滚操作，都可以得到前一个状态的值。<br>个人理解 应该是 1➡️2，2➡️3，3➡️4，在这三个update操作的图下面有对应的read-view，但是博客里read-view c 画在了“当前值4”的位置。为什么不是在“将4改成3”的位置有read-view c呢？<br>麻烦林老师解答下。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432618,"discussion_content":"额我这里设定的是 read_view C 是访问最新值的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544695628,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49419,"user_name":"念你如昔","can_delete":false,"product_type":"c1","uid":1323531,"ip_address":"","ucode":"FCAD88AB57D084","user_header":"https://static001.geekbang.org/account/avatar/00/14/32/0b/981b4e93.jpg","comment_is_top":false,"comment_ctime":1544684303,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544684303","product_id":100020801,"comment_content":"未提交读：<br>\t最大事务id中的所对应的数据<br><br>已提交读：<br>\t已提交事务中最大事务id中所对应的数据<br><br>可重复读：\t<br>\t比自己事务id小的已提交事务中最大事务id中所对应的数据。","like_count":0},{"had_liked":false,"id":49375,"user_name":"William","can_delete":false,"product_type":"c1","uid":1346215,"ip_address":"","ucode":"55F5D9DEE485B1","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","comment_is_top":false,"comment_ctime":1544673753,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1544673753","product_id":100020801,"comment_content":"老师，@Gavin  接着这个问题，<br>如果此时 A事务提交了。 那么查询回来的记录就是1 了呗？<br><br>再次查询就变成了3 吧（因为事务C将其修改了）？<br><br>对不对。","like_count":0},{"had_liked":false,"id":49361,"user_name":"念你如昔","can_delete":false,"product_type":"c1","uid":1323531,"ip_address":"","ucode":"FCAD88AB57D084","user_header":"https://static001.geekbang.org/account/avatar/00/14/32/0b/981b4e93.jpg","comment_is_top":false,"comment_ctime":1544671020,"is_pvip":false,"replies":[{"id":"17752","content":"你们还有同事讨论呀，真不错😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544675265,"ip_address":"","comment_id":49361,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544671020","product_id":100020801,"comment_content":"一个同事看完后问我：当出现读写锁冲突的时候，后访问的事务必须等前一个事务执行完成。是什么意思?<br>:串行化状态下，这个跟开启事务（start transaction;）的先后顺序没有关系，跟开启事务后谁先给其数据加读写锁有关系。<br>也就是说当出现读写锁冲突的时候，先占有（读锁或写锁）锁的事务必须提交后，另一个事务才能对被占有锁的行进行变更。<br>和rr的区别就是：rr对select没加锁。串行化对select加读锁。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432590,"discussion_content":"你们还有同事讨论呀，真不错😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544675265,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49146,"user_name":"旧梦发癫","can_delete":false,"product_type":"c1","uid":1309614,"ip_address":"","ucode":"F51210AD94705D","user_header":"https://static001.geekbang.org/account/avatar/00/13/fb/ae/2879bd60.jpg","comment_is_top":false,"comment_ctime":1544611177,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544611177","product_id":100020801,"comment_content":"自己写了几个示例试了试。感觉印象更深了","like_count":0},{"had_liked":false,"id":48934,"user_name":"流浪在寂寞古城","can_delete":false,"product_type":"c1","uid":1105678,"ip_address":"","ucode":"FE90DCD5DC3A20","user_header":"https://static001.geekbang.org/account/avatar/00/10/df/0e/4e2b06d5.jpg","comment_is_top":false,"comment_ctime":1544579642,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544579642","product_id":100020801,"comment_content":"幻读是指的一个事物执行前和执行后读到的一样，但是这个事物过程中被改了两次吗？<br>讲锁的时候能把这里串起来就完美了","like_count":0},{"had_liked":false,"id":48434,"user_name":"Nash.Z","can_delete":false,"product_type":"c1","uid":1232273,"ip_address":"","ucode":"76B14722664402","user_header":"https://static001.geekbang.org/account/avatar/00/12/cd/91/3d6c53f8.jpg","comment_is_top":false,"comment_ctime":1544443665,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544443665","product_id":100020801,"comment_content":"文中提到：在 autocommit 为 1 的情况下，用 begin显示启动事务，如果执行commit则提交事务。<br>疑问：如果autocommit=1的情况下，不执行commit则是不是就不提交事务了？如果是这样的话，autocommit=1和=0 的区别就是一个需要显示启动事务，一个会自动启动事务，但是提交事务都需要commit?谢谢！<br>","like_count":0},{"had_liked":false,"id":48116,"user_name":"ʘᴗʘ小白帽ʘᴗʘ","can_delete":false,"product_type":"c1","uid":1304567,"ip_address":"","ucode":"3519C67C3B1533","user_header":"https://static001.geekbang.org/account/avatar/00/13/e7/f7/8427bb06.jpg","comment_is_top":false,"comment_ctime":1544360605,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544360605","product_id":100020801,"comment_content":"当系统里么有比这个回滚日志更早的read-view的时候。  没看明白这句话是什么意思？","like_count":0},{"had_liked":false,"id":47865,"user_name":"Java知其所以然","can_delete":false,"product_type":"c1","uid":1085200,"ip_address":"","ucode":"DC17FC7A7E42D1","user_header":"https://static001.geekbang.org/account/avatar/00/10/8f/10/f9151d58.jpg","comment_is_top":false,"comment_ctime":1544239317,"is_pvip":false,"replies":[{"id":"17108","content":"是的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544333720,"ip_address":"","comment_id":47865,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544239317","product_id":100020801,"comment_content":"读提交通过在执行 sql 时建立视图，那它查询以后就会放弃这个视图？每次查询都会基于最新值建立一个视图吗","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431917,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544333720,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47691,"user_name":"三木禾","can_delete":false,"product_type":"c1","uid":1109458,"ip_address":"","ucode":"39C37228236860","user_header":"https://static001.geekbang.org/account/avatar/00/10/ed/d2/e3ae7ddd.jpg","comment_is_top":false,"comment_ctime":1544183192,"is_pvip":false,"replies":[{"id":"16999","content":"你参考08再看下","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544190941,"ip_address":"","comment_id":47691,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544183192","product_id":100020801,"comment_content":"老师，我这边有个问题<br>可重复读和读提交，分别为事务开启的时候和sql执行的时候创建视图，请问对事务隔离的影响？在看可重复读和读提交这块出现的疑问，麻烦老师解答?","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431859,"discussion_content":"你参考08再看下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544190941,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47511,"user_name":"扬～","can_delete":false,"product_type":"c1","uid":1208163,"ip_address":"","ucode":"6FA7D8FE188341","user_header":"https://static001.geekbang.org/account/avatar/00/12/6f/63/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1544149213,"is_pvip":false,"replies":[{"id":"16949","content":"没回滚，你跟着08篇一起看哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544152946,"ip_address":"","comment_id":47511,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544149213","product_id":100020801,"comment_content":"重复读举的例子是一个事务的回滚还是数据库回退啊，没看明白，如果是事务回滚，那么其他事务应该看不了中间结果吧。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431788,"discussion_content":"没回滚，你跟着08篇一起看哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544152946,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47120,"user_name":"嘉嘉☕","can_delete":false,"product_type":"c1","uid":1059771,"ip_address":"","ucode":"632A5CC4B53BB1","user_header":"https://static001.geekbang.org/account/avatar/00/10/2b/bb/5cf70df8.jpg","comment_is_top":false,"comment_ctime":1544060237,"is_pvip":false,"replies":[{"id":"16839","content":"1 不是物理存在的，是算出来的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544071711,"ip_address":"","comment_id":47120,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544060237","product_id":100020801,"comment_content":"对于 read-view A，要得到 1，就必须将当前值依次执行图中所有的回滚操作得到。<br><br>老师，请问一下<br>view A 拿到的值，直接就是1吧？<br>不需要从当前值回滚得到吧？<br>谢谢老师","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431669,"discussion_content":"1 不是物理存在的，是算出来的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544071711,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46941,"user_name":"当下","can_delete":false,"product_type":"c1","uid":1304326,"ip_address":"","ucode":"2B8B003F94BC07","user_header":"https://static001.geekbang.org/account/avatar/00/13/e7/06/76ee65a1.jpg","comment_is_top":false,"comment_ctime":1544005880,"is_pvip":false,"replies":[{"id":"16742","content":"08篇看下","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544011478,"ip_address":"","comment_id":46941,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544005880","product_id":100020801,"comment_content":"老师，能不能脑补下mvcc与隔离级别之间都关系","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431612,"discussion_content":"08篇看下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544011478,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46797,"user_name":"shawn","can_delete":false,"product_type":"c1","uid":1010221,"ip_address":"","ucode":"8F6A8C7920996E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6a/2d/ec4ed8ce.jpg","comment_is_top":false,"comment_ctime":1543983532,"is_pvip":false,"replies":[{"id":"16707","content":"1. 对<br>2. Read-view是说“有人来查数据，查数据的事务的read-view”是:.....","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543985516,"ip_address":"","comment_id":46797,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543983532","product_id":100020801,"comment_content":"@老师，我有两个问题：<br>1.文章谈到“在“读提交”隔离级别下，这个视图是在每个 SQL 语句开始执行的时候创建的”，<br>如果一个事物中有多个SQL语句每个SQL语句都有一个视图，还是事物中第一个sql语句启动视图后面sql都在这个视图上操作。  就像文章第一个表格  事物A中有 “查询得到v1”，“查询得到v2”，这两个查询用的视图是同一个吗？ 我猜应该是每个sql语句都启动一个视图吧，事物B起了视图，事物A两个SQL语句各起了一个视图，但是事物A “查询得到V2”这个视图是在事物B的视图结束后产生了所以可以看到事物B提交的值，我这样理解对么？<br><br>2.read-view 是什么时候创建的呢？<br>第二个图，“将4改成3” 为什么没有read-view ，而其他有read-view呢？我想知道老师画这个图的场景？<br><br><br><br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431548,"discussion_content":"1. 对\n2. Read-view是说“有人来查数据，查数据的事务的read-view”是:.....","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543985516,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46735,"user_name":"Mr.Strive.Z.H.L","can_delete":false,"product_type":"c1","uid":1030198,"ip_address":"","ucode":"6D97E159E2EECD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b8/36/542c96bf.jpg","comment_is_top":false,"comment_ctime":1543975734,"is_pvip":false,"replies":[{"id":"16688","content":"确实是可以这么做，就是并发行不够好。<br><br>对于不冲突的，额外加锁也是有额外消耗，需要看业务冲突率。<br><br>冲突率高就用你说的这种方法，低低就用类似CAS的思想","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543979402,"ip_address":"","comment_id":46735,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543975734","product_id":100020801,"comment_content":"在业务系统中，往往会存在数据库的并发操作，比如对同一个行数据的update操作。我认为只要数据库的隔离级别在 串行化 之上（可重复读或者读提交），那么要防止这种并发，往往是在业务方进行 一锁，二判，三更新的这种操作。如果是串行化的隔离级别，那就不需要这么麻烦的操作了。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431521,"discussion_content":"确实是可以这么做，就是并发行不够好。\n\n对于不冲突的，额外加锁也是有额外消耗，需要看业务冲突率。\n\n冲突率高就用你说的这种方法，低低就用类似CAS的思想","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543979402,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46544,"user_name":"gesanri","can_delete":false,"product_type":"c1","uid":1121174,"ip_address":"","ucode":"AE3B97DC3ED668","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELtOO0HKrj5SI5JSlmwiaCvaF6GLiaTmf5NX88OZaO3HymTAGTeIoicBUjqzmMF6sF5raPFjuqLFibrrw/132","comment_is_top":false,"comment_ctime":1543934809,"is_pvip":false,"replies":[{"id":"16637","content":"Read_view 里面可不是存数据的值的，你可以看下08篇","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543935595,"ip_address":"","comment_id":46544,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543934809","product_id":100020801,"comment_content":"对于 read-view A，要得到 1，就必须将当前值依次执行图中所有的回滚操作得到。<br><br>这段没理解，这个视图A里的值不就是1吗？是不是应该是read-view C","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431478,"discussion_content":"Read_view 里面可不是存数据的值的，你可以看下08篇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543935595,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46364,"user_name":"魁拔","can_delete":false,"product_type":"c1","uid":1307672,"ip_address":"","ucode":"E29EBB1E71B6EB","user_header":"https://static001.geekbang.org/account/avatar/00/13/f4/18/8371f8a7.jpg","comment_is_top":false,"comment_ctime":1543908184,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543908184","product_id":100020801,"comment_content":"我利用事务创建了循环删除过期数据的存储过程，执行删除前会获取待删除的数据量，如果为零就不删除。结果经常出现某个表无数据需要删除了，存储过程确一直循环执行删除这个表的数据。py代码如下app限制，没办法很好对齐了。谢谢。刚留言代码刚没贴全，https:&#47;&#47;share.weiyun.com&#47;5uirdIA","like_count":0},{"had_liked":false,"id":46134,"user_name":"魁拔","can_delete":false,"product_type":"c1","uid":1307672,"ip_address":"","ucode":"E29EBB1E71B6EB","user_header":"https://static001.geekbang.org/account/avatar/00/13/f4/18/8371f8a7.jpg","comment_is_top":false,"comment_ctime":1543851515,"is_pvip":false,"replies":[{"id":"16522","content":"问题没看明白，重提下。最好有SQL 例子哦","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543887353,"ip_address":"","comment_id":46134,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543851515","product_id":100020801,"comment_content":"有个译文，我使用事务删除数据，首先是select判断量，然后删除，使用的是execute执行语句，发现偶尔出现，无数据删除了，倒是语句却一直在执行（select和delete都有执行，倒是count为零按道理是不会执行delete的，我有量的判断），dba给我的反馈是，事务未提交导致的，这个有办法解决吗？谢谢","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431350,"discussion_content":"问题没看明白，重提下。最好有SQL 例子哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543887353,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46125,"user_name":"杰之7","can_delete":false,"product_type":"c1","uid":1297232,"ip_address":"","ucode":"F7DA2E21085332","user_header":"https://static001.geekbang.org/account/avatar/00/13/cb/50/66d0bd7f.jpg","comment_is_top":false,"comment_ctime":1543850783,"is_pvip":false,"replies":[{"id":"16517","content":"👍🏿","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543887169,"ip_address":"","comment_id":46125,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543850783","product_id":100020801,"comment_content":"开始上Mysql技术课，对数据库架构原理充满好奇。在今天的学习中，理解了事物中ACID中的I,根据I的隔离级别，分成了4个级别，每个级别的隔离型不断增强，重点在可重复读上，其实也好理解，开启两个事物，不管B事物提交与否，A事物看到的都是B事物之前未提交的数据。至于串行化，就是事物A不管事物B提交不提交，只有A自身提交之后，A的数据才会更改。在事物隔离的应用中，银行核对账时就用到事物隔离的实现技术。在事物中，会存在长事物的陷阱，这样容易导致数据文件本身不大，但是整个数据系统特别大，所以我们在开发学习的过程中应该学会如何避免长事物。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431346,"discussion_content":"👍🏿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543887169,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45940,"user_name":"菜鸡一只","can_delete":false,"product_type":"c1","uid":1336004,"ip_address":"","ucode":"5FBA9A68E0E9B9","user_header":"https://static001.geekbang.org/account/avatar/00/14/62/c4/98a9e594.jpg","comment_is_top":false,"comment_ctime":1543823046,"is_pvip":false,"replies":[{"id":"16427","content":"这个需要外部系统，MySQL 自己做不了的哈<br><br>是的，30天的日志，不一定是30个哈，一天可能多个，也可能好几天一个","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543832093,"ip_address":"","comment_id":45940,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543823046","product_id":100020801,"comment_content":"提到的一天一备，指的是自己手动备份一份新的吗，还是可以设置时间点，系统自动备份？如果可以回到一个月之前的数据，按一天一备来算，是否要保存30份binlog文件？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431280,"discussion_content":"这个需要外部系统，MySQL 自己做不了的哈\n\n是的，30天的日志，不一定是30个哈，一天可能多个，也可能好几天一个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543832093,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45455,"user_name":"KeepGoing","can_delete":false,"product_type":"c1","uid":1184637,"ip_address":"","ucode":"B872F794265709","user_header":"https://static001.geekbang.org/account/avatar/00/12/13/7d/1454db9c.jpg","comment_is_top":false,"comment_ctime":1543645802,"is_pvip":true,"replies":[{"id":"16183","content":"看一下08篇","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543651005,"ip_address":"","comment_id":45455,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543645802","product_id":100020801,"comment_content":"老师，我想问一下读提交，既然每个事务都创建自己的视图，那一个事务是从哪，又是怎样得到的另一个事务的提交结果的呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431046,"discussion_content":"看一下08篇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543651005,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45436,"user_name":"天王","can_delete":false,"product_type":"c1","uid":1239337,"ip_address":"","ucode":"C074B2F9A5F007","user_header":"https://static001.geekbang.org/account/avatar/00/12/e9/29/629d9bb0.jpg","comment_is_top":false,"comment_ctime":1543640860,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543640860","product_id":100020801,"comment_content":"多版本并发控制mvcc，每次的更新操作，都会记录一个回滚日志，通过回滚日志，能够回滚到事务更新前的值。不同的隔离级别，比如可重复读，会记录一个读视图，通过读视图，相当于一个快照，能够读取到快照的信息，即使数据已经被修改了也没关系。可重复读事务完成之后，再次读取，读取的就是修改之后的值。","like_count":0},{"had_liked":false,"id":44990,"user_name":"suke","can_delete":false,"product_type":"c1","uid":1007753,"ip_address":"","ucode":"C0287C31A4F45B","user_header":"","comment_is_top":false,"comment_ctime":1543537970,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543537970","product_id":100020801,"comment_content":"老师在您文章开头的第一张图，在重复读隔离级别下，事务b提交后，在事务a执行update t set c=3 where c=1,会成功么，如果可重复读看到的是同一个视图，就会成功，在读提交隔离级别下，就会失败？","like_count":0},{"had_liked":false,"id":44722,"user_name":"树下品茶","can_delete":false,"product_type":"c1","uid":1141653,"ip_address":"","ucode":"90591411778080","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI6VXLO35tTZ0H2rKj97CH53lUC9icgkUTAuGjpqEicJecDoDpMvwKGrsV6ZNicVOJStocM16zZicpYiaA/132","comment_is_top":false,"comment_ctime":1543481932,"is_pvip":false,"replies":[{"id":"15985","content":"自动提交只是把事务提交掉，提交结束事务。<br><br>事务隔离级别是事务运行期间能看到的什么数据。这俩不会“打架”呀<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543514440,"ip_address":"","comment_id":44722,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543481932","product_id":100020801,"comment_content":"开始以为自己懂了，然后想起参数 autocommit自动提交  后就又迷糊了，事物隔离级别和自动提交这俩是什么关系呢？这俩参数会打架吗","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430817,"discussion_content":"自动提交只是把事务提交掉，提交结束事务。\n\n事务隔离级别是事务运行期间能看到的什么数据。这俩不会“打架”呀\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543514440,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44716,"user_name":"武俍俍","can_delete":false,"product_type":"c1","uid":1321973,"ip_address":"","ucode":"67A4888F7FF445","user_header":"https://static001.geekbang.org/account/avatar/00/14/2b/f5/11365f51.jpg","comment_is_top":false,"comment_ctime":1543479964,"is_pvip":false,"replies":[{"id":"15973","content":"因为默认回滚段是在一个大文件里，和数据字段放一起。空间不够文件膨胀，空间逻辑删除，文件不能随便删除","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543497985,"ip_address":"","comment_id":44716,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543479964","product_id":100020801,"comment_content":"老师好，请问如何理解“即使长事务最终被提交了，回滚段被清理，文件也不会变小”？为什么清理了文件大小还不变呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430816,"discussion_content":"因为默认回滚段是在一个大文件里，和数据字段放一起。空间不够文件膨胀，空间逻辑删除，文件不能随便删除","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543497985,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44555,"user_name":"xiaoyu","can_delete":false,"product_type":"c1","uid":1245915,"ip_address":"","ucode":"477617C15FB5CC","user_header":"https://static001.geekbang.org/account/avatar/00/13/02/db/5d227be5.jpg","comment_is_top":false,"comment_ctime":1543456943,"is_pvip":true,"replies":[{"id":"15882","content":"RR","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543458581,"ip_address":"","comment_id":44555,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1543456943","product_id":100020801,"comment_content":"请老师确认下，mysql InnoDB 默认使用的是RR级别还是RC级别","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430791,"discussion_content":"RR","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543458581,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44405,"user_name":"正是那朵玫瑰","can_delete":false,"product_type":"c1","uid":1048261,"ip_address":"","ucode":"73D630B654573F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fe/c5/3467cf94.jpg","comment_is_top":false,"comment_ctime":1543421993,"is_pvip":false,"replies":[{"id":"15872","content":"现在每个语句会自动提交了，如果你要在一个事务里增加一行，再修改一行，怎么做讷？","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543427874,"ip_address":"","comment_id":44405,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543421993","product_id":100020801,"comment_content":"有个问题，既然设置了autocommit=1，就是自动提交事务了，为什么还要显示来开启事务呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430750,"discussion_content":"现在每个语句会自动提交了，如果你要在一个事务里增加一行，再修改一行，怎么做讷？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543427874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44384,"user_name":"王宝龙","can_delete":false,"product_type":"c1","uid":1328175,"ip_address":"","ucode":"C5A945E44FE89E","user_header":"https://static001.geekbang.org/account/avatar/00/14/44/2f/42a8d353.jpg","comment_is_top":false,"comment_ctime":1543417972,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543417972","product_id":100020801,"comment_content":"疑问：<br>1. 作者说串行化时，讲到写会加上写锁，读会加上读锁，当出现读写锁冲突时，后访问的事务会等待前事务执行完成后再执行。在图 1 中，事务A在启动事务后，查询得到值“1”。事务 B 此时也查询到值“1”，然后在执行更新动作时，会等待前者提交动作。但在解释时说：当执行“将1改成2”时这一步骤会被锁住，说明已经查询得到值“1”了，那读锁是否没效果？<br>2. 沿用1的逻辑，假定事务 A 中“查询得到值V1”步骤更改为“修改值为3”，此时提交事务A。那事务 B 是否沿用查询到的 “1” 值么？","like_count":0},{"had_liked":false,"id":44297,"user_name":"allen","can_delete":false,"product_type":"c1","uid":1001392,"ip_address":"","ucode":"4DF7E58E89D541","user_header":"https://static001.geekbang.org/account/avatar/00/0f/47/b0/affce3fd.jpg","comment_is_top":false,"comment_ctime":1543403022,"is_pvip":false,"replies":[{"id":"15822","content":"🎈🎈🎈🎈<br>什么队形😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543409269,"ip_address":"","comment_id":44297,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543403022","product_id":100020801,"comment_content":"🎈🎈","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430717,"discussion_content":"🎈🎈🎈🎈\n什么队形😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543409269,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44257,"user_name":"shawn","can_delete":false,"product_type":"c1","uid":1010221,"ip_address":"","ucode":"8F6A8C7920996E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6a/2d/ec4ed8ce.jpg","comment_is_top":false,"comment_ctime":1543395485,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543395485","product_id":100020801,"comment_content":"林老师，我有两个疑问确认下。<br>1.回滚日志 跟 前面所说的redolog日志 是同一个吗？前面讲的redolog 用来做fault tolerance，会在binlog 日志生成后commit。<br><br>2.autocommit  这个参数是用来标识 事物是否提交还是 是否启动事物呢？ <br>一个数据库语句 是否 必须要处于一个事物中？<br>有印象 debug spring mybatis时候，如果是查询语句是没有进入transactionmanager的。（我也许记错了，写在这里是希望老师能够给一个指导）<br>谢谢！","like_count":0},{"had_liked":false,"id":44040,"user_name":"借根烟","can_delete":false,"product_type":"c1","uid":1267647,"ip_address":"","ucode":"E901D5B7B6106F","user_header":"https://static001.geekbang.org/account/avatar/00/13/57/bf/98648664.jpg","comment_is_top":false,"comment_ctime":1543366109,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543366109","product_id":100020801,"comment_content":"看到。所以， V3 的值也是 2。<br>若隔离级别是“可重复读”，则 V1、V2 是 1，V3 是 2。之所以 V2 还是 1，遵循的就是这个要求：事务在执行期间看到的数据前后必须是一致的。<br><br>请教个问题:事物A后提交的不应该最终是事物A提交的值吗？","like_count":0},{"had_liked":false,"id":43922,"user_name":"zhima_hu","can_delete":false,"product_type":"c1","uid":1311188,"ip_address":"","ucode":"33A4496556D9B1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/rBCoNmJbagIGlkrDDfdQv9YjrtoHfvExqSSiavHwgUaukTxnO2jTBGrrHUF49VZqaS1FBolLc4Bibk883sabroyQ/132","comment_is_top":false,"comment_ctime":1543325569,"is_pvip":false,"replies":[{"id":"15681","content":"日志有buffer,要写到文件的时候要拿锁，事务共同同一个redolog空间结构。<br><br>视图概念看08篇<br><br>回滚日志默认放在ibdata 里面","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543328008,"ip_address":"","comment_id":43922,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543325569","product_id":100020801,"comment_content":"老师好，回滚日志那块没看明白，多个事务怎么共享日志，另外视图是什么？回滚日志存储在哪","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430551,"discussion_content":"日志有buffer,要写到文件的时候要拿锁，事务共同同一个redolog空间结构。\n\n视图概念看08篇\n\n回滚日志默认放在ibdata 里面","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543328008,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43914,"user_name":"殿小二","can_delete":false,"product_type":"c1","uid":1284986,"ip_address":"","ucode":"E979673B257C24","user_header":"https://static001.geekbang.org/account/avatar/00/13/9b/7a/58327b6d.jpg","comment_is_top":false,"comment_ctime":1543323793,"is_pvip":false,"replies":[{"id":"15677","content":"是的，只要查一个innodb表就开启","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543325191,"ip_address":"","comment_id":43914,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543323793","product_id":100020801,"comment_content":"老师,你好,问一下 set autocommit=0或1 和开启事务没关系吧 ,如果有关系的话 是不是set autocommit=0 后面不跟begin一样是会开启事务的?","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430547,"discussion_content":"是的，只要查一个innodb表就开启","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543325191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43868,"user_name":"shawn","can_delete":false,"product_type":"c1","uid":1010221,"ip_address":"","ucode":"8F6A8C7920996E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6a/2d/ec4ed8ce.jpg","comment_is_top":false,"comment_ctime":1543314867,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543314867","product_id":100020801,"comment_content":"老师问个问题，事物背后是怎么实现的呢？ 我查了下是通过wal日志形式实现的。<br>那么wal日志与事物之间的关系是怎么样的呢？ 文中你说道<br>“读未提交是指，一个事务还没提交时，它做的变更就能被别的事务看&quot;,一个事物还未提交那么肯定在redolog里，其他事物是如何读到redolog文件里这条记录的呢？","like_count":0},{"had_liked":false,"id":43782,"user_name":"物是人非","can_delete":false,"product_type":"c1","uid":1323164,"ip_address":"","ucode":"286E3FD2C149FB","user_header":"https://static001.geekbang.org/account/avatar/00/14/30/9c/08f48d99.jpg","comment_is_top":false,"comment_ctime":1543293691,"is_pvip":false,"replies":[{"id":"15635","content":"没有区别…","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543297478,"ip_address":"","comment_id":43782,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543293691","product_id":100020801,"comment_content":"老师请教个问题，在学习的过程中看到查询隔离级别的方式有几种，查看了一些资料，但是还是没有明白select @@tx_isolation和select @@session.tx_isolation这两种查询方式有什么区别?","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430493,"discussion_content":"没有区别…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543297478,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43751,"user_name":"discoverer-tab","can_delete":false,"product_type":"c1","uid":1006560,"ip_address":"","ucode":"3CE83781933FED","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5b/e0/d27145c8.jpg","comment_is_top":false,"comment_ctime":1543287130,"is_pvip":false,"replies":[{"id":"15627","content":"后者，有可能。你看一下今晚的07篇哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543288779,"ip_address":"","comment_id":43751,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543287130","product_id":100020801,"comment_content":"老师，串行加锁是行锁，但是串行锁是启动加锁的，难道他会把事务中所有改动行加锁，还是在事务运行中改动再加锁，如果后者会遇到死锁问题吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430483,"discussion_content":"后者，有可能。你看一下今晚的07篇哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543288779,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43745,"user_name":"discoverer-tab","can_delete":false,"product_type":"c1","uid":1006560,"ip_address":"","ucode":"3CE83781933FED","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5b/e0/d27145c8.jpg","comment_is_top":false,"comment_ctime":1543286476,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543286476","product_id":100020801,"comment_content":"事务四种隔离级别的实现：读未提交（直接读取记录的最新值），读已提交（事务每个sql语句执行时创建一个视图，保证准确的最新数据），可重复读（事务启动创建一个视图，屏蔽新的数据改动），串行化（事务启动加读&#47;写锁，禁止其它事务读&#47;写）。<br>并发事务回滚的原理：每个事务保存独立的版本视图，每个版本视图对每一条更新保存一条回滚记录。<br>长事务：事务默认自启动，一条查询语句都会开始事务，直到提交&#47;回滚，在不注意的情况下会保存极大的回滚日志。建议关闭set autocommit设为1手动开启.","like_count":0},{"had_liked":false,"id":43707,"user_name":"滔滔","can_delete":false,"product_type":"c1","uid":1303342,"ip_address":"","ucode":"6968B5771AF79D","user_header":"https://static001.geekbang.org/account/avatar/00/13/e3/2e/77ad18f4.jpg","comment_is_top":false,"comment_ctime":1543282723,"is_pvip":false,"replies":[{"id":"15604","content":"启动事务一定有“先后”的，每个事务要加入系统统一管理，加入的时候加锁，不会精确地“同时”","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543286363,"ip_address":"","comment_id":43707,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543282723","product_id":100020801,"comment_content":"您好，您在文中提到关于&quot;串行化&quot;有&quot;后访问的事务必须等前一个事务执行完成，才能继续执行。&quot;，我想问的是两个事务A和B它们有可能同时启动吗？如果可以同时启动，是不是说先进行操作(读或写)的事务就是前面提到的&quot;前一个事务&quot;，后进行操作的事务就是&quot;后访问的事务&quot;？还是说两个事务不会同时启动，先启动的就是&quot;前一个事务&quot;，后启动的就是&quot;后访问的事务&quot;？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430467,"discussion_content":"启动事务一定有“先后”的，每个事务要加入系统统一管理，加入的时候加锁，不会精确地“同时”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543286363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43636,"user_name":"陈锐","can_delete":false,"product_type":"c1","uid":1323728,"ip_address":"","ucode":"655BCFE42A0E7F","user_header":"https://static001.geekbang.org/account/avatar/00/14/32/d0/2a46ca89.jpg","comment_is_top":false,"comment_ctime":1543251170,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1543251170","product_id":100020801,"comment_content":"“什么时候才不需要了呢？就是当系统里没有比这个回滚日志更早的 read-view 的时候。”老师这句话该怎么理解呢？更早的 read-view是啥意思呢","like_count":0,"discussions":[{"author":{"id":1304565,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e7/f5/77d2c9b8.jpg","nickname":"QQ|AUTO","note":"","ucode":"B7D31D03DA1EAC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6560,"discussion_content":"同问，这里也是没理解\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566971809,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43559,"user_name":"Lilian","can_delete":false,"product_type":"c1","uid":1004627,"ip_address":"","ucode":"61F294370FA400","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/53/d5d0ec20.jpg","comment_is_top":false,"comment_ctime":1543240027,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543240027","product_id":100020801,"comment_content":"我有个疑问，就是关于“可重复锁”隔离级别，如果A事务在提交前执行一个更改操作c=c+1,这样的话，然后在执行一个查询操作，得到v3，这个时候值应该是2是吧，然后提交事务，在查询得到v4，此时v4也应该是2是吧","like_count":0},{"had_liked":false,"id":43549,"user_name":"ebony","can_delete":false,"product_type":"c1","uid":1122000,"ip_address":"","ucode":"5249C337D95CD6","user_header":"https://static001.geekbang.org/account/avatar/00/11/1e/d0/23c35e3a.jpg","comment_is_top":false,"comment_ctime":1543239445,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543239445","product_id":100020801,"comment_content":"老师您好，我不知道我这种处理方式对不对:a事务在进行的时候其实不希望b事物读到a实实务的数据，我在进去a的时候直接一个update a，这样就把a给锁起来了。","like_count":0},{"had_liked":false,"id":43542,"user_name":"蓝心","can_delete":false,"product_type":"c1","uid":1306758,"ip_address":"","ucode":"D6F9B74E167B56","user_header":"https://static001.geekbang.org/account/avatar/00/13/f0/86/f9d1f990.jpg","comment_is_top":false,"comment_ctime":1543238670,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543238670","product_id":100020801,"comment_content":"老师好，在文中看到这样一段“在“读提交”隔离级别下，这个视图是在每个 SQL 语句开始执行的时候创建的。这里需要注意的是，“读未提交”隔离级别下直接返回记录上的最新值，没有视图概念；”。说到读提交的视图是在每个sql开始执行时候创建，这里不太明白，它是从哪取值创建的呢？","like_count":0},{"had_liked":false,"id":43539,"user_name":"Geek_7b9776","can_delete":false,"product_type":"c1","uid":1313474,"ip_address":"","ucode":"514F75984A9AB3","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqY5ZejkwMzpwBxCrrib7C44ciaR73OW7wpzkA9YujwicMCJM4IOpsd3WojPM1dAq6nFSubYgJCIVFtg/132","comment_is_top":false,"comment_ctime":1543238168,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543238168","product_id":100020801,"comment_content":"老师，今天在操作数据库时遇到这样一个问题，不知如何解决<br>更新的时候出现<br>Cannot execute statement: impossible to write to binary log since BINLOG_FORMAT = STATEMENT and at least one table uses a storage engine limited to row-based logging. InnoDB is limited to row-logging when transaction isolation level is READ COMMITTED or READ UNCOMMITTED.","like_count":0},{"had_liked":false,"id":43511,"user_name":"特斯拉","can_delete":false,"product_type":"c1","uid":1230807,"ip_address":"","ucode":"C65901BD39AF0F","user_header":"https://static001.geekbang.org/account/avatar/00/12/c7/d7/b9f93eec.jpg","comment_is_top":false,"comment_ctime":1543234784,"is_pvip":false,"replies":[{"id":"15536","content":"实际中两个事务同时存在的例子，很多😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543239580,"ip_address":"","comment_id":43511,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543234784","product_id":100020801,"comment_content":"有一个问题，文章例子提到事务AB有可能会相互干扰，但是在实际应用中两多个事务同时进行的例子多吗?感觉这一节就好像某些实时协作文档，对同一内容可以多人同时编辑，就看谁更早开始事务。<br><br>在线文档也是存储在磁盘中，这一节的事务隔离不知道对这种方式的编辑适用不适用?","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430409,"discussion_content":"实际中两个事务同时存在的例子，很多😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543239580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43440,"user_name":"kunsect","can_delete":false,"product_type":"c1","uid":1299322,"ip_address":"","ucode":"2CC4ADF82887FC","user_header":"https://static001.geekbang.org/account/avatar/00/13/d3/7a/dd7d35b5.jpg","comment_is_top":false,"comment_ctime":1543227256,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543227256","product_id":100020801,"comment_content":"老师，我想请教一下。可重复读的实现不是基于 MVCC 吗，这个地方为什么数据库还会创建一个视图呢？","like_count":0},{"had_liked":false,"id":43324,"user_name":"查尔斯","can_delete":false,"product_type":"c1","uid":1121529,"ip_address":"","ucode":"E3C7AB6E6B1631","user_header":"https://static001.geekbang.org/account/avatar/00/11/1c/f9/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1543214302,"is_pvip":false,"replies":[{"id":"15490","content":"“当他没提交”表示要回滚对吧，可是没有redolog, 回滚日志也丢了，回滚不了了…","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543216150,"ip_address":"","comment_id":43324,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543214302","product_id":100020801,"comment_content":"有个疑问是，我们保证断电数据不丢失，可以在事务每次commit时候直接写磁盘落地，当然这性能太差，我们采取写日志的形式，日志是顺序写的，性能会高些，那这样的话我觉得可以直接使用binlog做断电后的恢复，每次写入binlog后再做commit，不写binlog当他没提交，这样理论上和直接写数据感觉是一样的，为什么还是要是用redo log呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430362,"discussion_content":"“当他没提交”表示要回滚对吧，可是没有redolog, 回滚日志也丢了，回滚不了了…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543216150,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43314,"user_name":"Sawyer","can_delete":false,"product_type":"c1","uid":1011280,"ip_address":"","ucode":"34DC7FBB01FE6E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6e/50/c85284da.jpg","comment_is_top":false,"comment_ctime":1543211776,"is_pvip":false,"replies":[{"id":"15495","content":"嗯嗯，安排一下😁","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543216248,"ip_address":"","comment_id":43314,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543211776","product_id":100020801,"comment_content":"看了下pinpoint的调用链，发现每个查询语句也会执行commit操作。最后发现在DataSource配置中将defaultAutoCommit设置为了false导致每次执行SQL都会执行SET autocommit=0，这个配置从开始用到现在，不知道白白消耗了多少链接和锁资源。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430357,"discussion_content":"嗯嗯，安排一下😁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543216248,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43284,"user_name":"吉米","can_delete":false,"product_type":"c1","uid":1302897,"ip_address":"","ucode":"A63C539608E8EA","user_header":"","comment_is_top":false,"comment_ctime":1543205914,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543205914","product_id":100020801,"comment_content":"请教老师，所谓幻读，是指事务A读取与搜索条件相匹配的若干行。事务B以插入或删除行等方式来修改事务A的结果集，然后再提交。事务A再次读取与搜索条件相匹配的若干行时结果不一样。<br>这个说法是正确的吗？<br>如果是正确的，在可重复读模式下，是不能排除这种情况出现的吧。<br>我的问题是，在可重复读模式下，如何看到幻读的效果。我尝试过，没有出现这种幻读情况。","like_count":0},{"had_liked":false,"id":43245,"user_name":"心雨鑫晴","can_delete":false,"product_type":"c1","uid":1246707,"ip_address":"","ucode":"37A42C19B98F1D","user_header":"https://static001.geekbang.org/account/avatar/00/13/05/f3/5488276f.jpg","comment_is_top":false,"comment_ctime":1543199826,"is_pvip":false,"replies":[{"id":"15467","content":"只要看你有没有及时提交。。","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543203976,"ip_address":"","comment_id":43245,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543199826","product_id":100020801,"comment_content":"老师，问个问题，因为我是做web开发的，主语言是Java，所以经常使用spring。而spring的事务有7种传播方式，默认的就是在当前有事务的时候加入该事务，而不会开始新的事务，这样是不是也造成了长事务呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430336,"discussion_content":"只要看你有没有及时提交。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543203976,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43188,"user_name":"wang chen wen","can_delete":false,"product_type":"c1","uid":1065463,"ip_address":"","ucode":"168CA7EE7A3EFF","user_header":"https://static001.geekbang.org/account/avatar/00/10/41/f7/277f14bb.jpg","comment_is_top":false,"comment_ctime":1543194957,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543194957","product_id":100020801,"comment_content":"请问长事务的时间标准业界有推荐的吗？<br>例如1000ms等","like_count":0},{"had_liked":false,"id":43052,"user_name":"赵威","can_delete":false,"product_type":"c1","uid":1299252,"ip_address":"","ucode":"6EB9425D9ED5B0","user_header":"https://static001.geekbang.org/account/avatar/00/13/d3/34/711b2fc1.jpg","comment_is_top":false,"comment_ctime":1543150683,"is_pvip":false,"replies":[{"id":"15395","content":"应该这么说，该结束不结束就算长😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543165961,"ip_address":"","comment_id":43052,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543150683","product_id":100020801,"comment_content":"长事物怎么定义？多久算长事物","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430286,"discussion_content":"应该这么说，该结束不结束就算长😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543165961,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43045,"user_name":"hua168","can_delete":false,"product_type":"c1","uid":1065255,"ip_address":"","ucode":"CFF9A7E86EBA48","user_header":"https://static001.geekbang.org/account/avatar/00/10/41/27/3ff1a1d6.jpg","comment_is_top":false,"comment_ctime":1543149120,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543149120","product_id":100020801,"comment_content":"关于Mysql各种锁会有专门一章节来讲的吧？锁太多，感觉被绕晕了……<br>大神能在锁那篇，讲下锁怎么可以从实验中实现和查看吗","like_count":0},{"had_liked":false,"id":42953,"user_name":"Demon.Lee","can_delete":false,"product_type":"c1","uid":1052859,"ip_address":"","ucode":"7F0E5493A8E345","user_header":"https://static001.geekbang.org/account/avatar/00/10/10/bb/f1061601.jpg","comment_is_top":false,"comment_ctime":1543118350,"is_pvip":false,"replies":[{"id":"15365","content":"😄 不错不错<br><br>RC模式一般不会导致回滚段过长的问题。不过还有别的，比如MDL锁，今晚十二点发的这篇你看一下","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543148168,"ip_address":"","comment_id":42953,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1543118350","product_id":100020801,"comment_content":"吓得我赶紧把每次set autocommit=0的习惯改掉了。执行脚本时加上begin&#47;start transaction，提交commit，回滚rollback。有个问题是，RC模式下是不是没有长事务问题，因为每次都读的提交后的数据。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430258,"discussion_content":"😄 不错不错\n\nRC模式一般不会导致回滚段过长的问题。不过还有别的，比如MDL锁，今晚十二点发的这篇你看一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543148168,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42945,"user_name":"猴哥一一 cium","can_delete":false,"product_type":"c1","uid":1254801,"ip_address":"","ucode":"38EC64F8D1A0B4","user_header":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","comment_is_top":false,"comment_ctime":1543115891,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543115891","product_id":100020801,"comment_content":"可重复读，开始事务的时候创建视图，这个视图里面是什么啊？<br>整个数据库的备份数据吗？<br>还是第一次查询后的数据？😜","like_count":0},{"had_liked":false,"id":42937,"user_name":"xuanyuan","can_delete":false,"product_type":"c1","uid":1113737,"ip_address":"","ucode":"1EC79B9372868F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI2icbib62icXtibTkThtyRksbuJLoTLMts7zook2S30MiaBtbz0f5JskwYicwqXkhpYfvCpuYkcvPTibEaQ/132","comment_is_top":false,"comment_ctime":1543114872,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543114872","product_id":100020801,"comment_content":"可以增加一本参考书，书上有的提供参考，希望看到更多书上没有的内容。","like_count":0},{"had_liked":false,"id":42781,"user_name":"Unknown","can_delete":false,"product_type":"c1","uid":1254489,"ip_address":"","ucode":"5FBF3D1044CA20","user_header":"https://static001.geekbang.org/account/avatar/00/13/24/59/e9867100.jpg","comment_is_top":false,"comment_ctime":1543043059,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1543043059","product_id":100020801,"comment_content":"可重复读，事务A先查询得到1，这时候有个其它事务修改并提交为0，然后事务A查询还是1，然后减一。这时候的值是0对吧，然后再提交结果也是0了。这样数据不是有错误了？我这样理解有错误吗？<br>谢谢老师了？","like_count":0},{"had_liked":false,"id":42728,"user_name":"煎蛋超人","can_delete":false,"product_type":"c1","uid":1199112,"ip_address":"","ucode":"3DC48EF1DF5A24","user_header":"","comment_is_top":false,"comment_ctime":1543029369,"is_pvip":false,"replies":[{"id":"15298","content":"第二种😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543041528,"ip_address":"","comment_id":42728,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543029369","product_id":100020801,"comment_content":"老师及各位同学好：我有个地方不解。想向各位请教：回滚日志，是一个事务记录一个日志？还是只有一个回滚日志，不同事务只在其中对应不同回滚段？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430174,"discussion_content":"第二种😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543041528,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42684,"user_name":"hello","can_delete":false,"product_type":"c1","uid":1002246,"ip_address":"","ucode":"9A6B5208E8F252","user_header":"","comment_is_top":false,"comment_ctime":1543020406,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543020406","product_id":100020801,"comment_content":"能不能分别讲下不同隔离级别的应用场景，一般业务是不是读提交就满足了","like_count":0},{"had_liked":false,"id":42097,"user_name":"张双星","can_delete":false,"product_type":"c1","uid":1268873,"ip_address":"","ucode":"8F3A9E74DAFACD","user_header":"https://static001.geekbang.org/account/avatar/00/13/5c/89/f7fff085.jpg","comment_is_top":false,"comment_ctime":1542911357,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542911357","product_id":100020801,"comment_content":"读提交，是在sql执行的时候创建视图，那么创建视图数据从哪里读取的呢，应该不是从记录里直接读取的，因为那样和读未提交是一样的，希望老师指点下，或者给下具体资料参考","like_count":0},{"had_liked":false,"id":41973,"user_name":"水果","can_delete":false,"product_type":"c1","uid":1108794,"ip_address":"","ucode":"35A5868718B535","user_header":"https://static001.geekbang.org/account/avatar/00/10/eb/3a/6d5f779e.jpg","comment_is_top":false,"comment_ctime":1542884281,"is_pvip":false,"replies":[{"id":"15078","content":"解决方法就是不用这个隔离级别😓<br><br>读未提交也称为“脏读”，就是你说的这个场景得名的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542888868,"ip_address":"","comment_id":41973,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542884281","product_id":100020801,"comment_content":"看了四遍了，一直有一个问题没有想清楚，就是当隔离级别是“读未提交“的时候，当读数据读到了一个未提交事务的值，比如文章中的V1=2，但事务B回滚了，实际上V1的值仍然是1，可事务A已经查到结果是2，这样结果不就不一致了？ 该如何解决","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429959,"discussion_content":"解决方法就是不用这个隔离级别😓\n\n读未提交也称为“脏读”，就是你说的这个场景得名的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542888868,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41899,"user_name":"谨言","can_delete":false,"product_type":"c1","uid":1304513,"ip_address":"","ucode":"7194089A95835B","user_header":"https://static001.geekbang.org/account/avatar/00/13/e7/c1/54c08336.jpg","comment_is_top":false,"comment_ctime":1542869475,"is_pvip":false,"replies":[{"id":"15016","content":"额，你确定没有别的事务？","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542871491,"ip_address":"","comment_id":41899,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542869475","product_id":100020801,"comment_content":"老师您好，我刚才遇到一个所等待超时的问题，mysqltransactionrollbackexception: lock wait timeout exceeded，然后在网上搜索原因，得出结论是一个事务里面对同一个数据进行插入又进行更新的原因，可是我怎么也搞不懂，为什么一个事务里面对同一条数据进行插入+更新时候容易造成锁等待呢，什么样的场景会造成这样的问题呢","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429937,"discussion_content":"额，你确定没有别的事务？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542871491,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41881,"user_name":"w","can_delete":false,"product_type":"c1","uid":1318306,"ip_address":"","ucode":"DB837CAE2FB7C7","user_header":"https://static001.geekbang.org/account/avatar/00/14/1d/a2/ef8758c9.jpg","comment_is_top":false,"comment_ctime":1542866207,"is_pvip":false,"replies":[{"id":"15055","content":"要，错误执行的drop table 也会同步给备库的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542883841,"ip_address":"","comment_id":41881,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542866207","product_id":100020801,"comment_content":"老师请教个问题 如果有主从配置 是不是就不需要备份了","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429933,"discussion_content":"要，错误执行的drop table 也会同步给备库的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542883841,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41875,"user_name":"采桑子","can_delete":false,"product_type":"c1","uid":1133197,"ip_address":"","ucode":"491137695525FA","user_header":"https://static001.geekbang.org/account/avatar/00/11/4a/8d/9bab355b.jpg","comment_is_top":false,"comment_ctime":1542865070,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542865070","product_id":100020801,"comment_content":"可重复读，总是跟这个事务在启动的时候看到数据一致，是因为对同一行，写会加写锁的关系吗","like_count":0},{"had_liked":false,"id":41866,"user_name":"舜","can_delete":false,"product_type":"c1","uid":1221029,"ip_address":"","ucode":"F5778B1F9290FD","user_header":"https://static001.geekbang.org/account/avatar/00/12/a1/a5/2100367c.jpg","comment_is_top":false,"comment_ctime":1542863378,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542863378","product_id":100020801,"comment_content":"在“读提交”隔离级别下，这个视图是在每个 SQL 语句开始执行的时候创建的。<br>这句话没理解清楚","like_count":0},{"had_liked":false,"id":41857,"user_name":"huazsh","can_delete":false,"product_type":"c1","uid":1100866,"ip_address":"","ucode":"FDD79FB48F4046","user_header":"https://static001.geekbang.org/account/avatar/00/10/cc/42/13aaddfb.jpg","comment_is_top":false,"comment_ctime":1542861099,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542861099","product_id":100020801,"comment_content":"老师，后面会讲到MVCC么，想知道里面到底怎么做的","like_count":0},{"had_liked":false,"id":41818,"user_name":"、荒唐_戏_","can_delete":false,"product_type":"c1","uid":1149297,"ip_address":"","ucode":"BF6E05A94272E4","user_header":"https://static001.geekbang.org/account/avatar/00/11/89/71/03a99e56.jpg","comment_is_top":false,"comment_ctime":1542854804,"is_pvip":false,"replies":[{"id":"15026","content":"有个gap_lock你可以了解下。不过我们专栏这次没计划说到这么细","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542872521,"ip_address":"","comment_id":41818,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542854804","product_id":100020801,"comment_content":"老师，我一直有个疑问，就是事物在不隔离级别下的锁机制是否相同，或者存在的锁机制区别","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429911,"discussion_content":"有个gap_lock你可以了解下。不过我们专栏这次没计划说到这么细","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542872521,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41780,"user_name":"Alexander","can_delete":false,"product_type":"c1","uid":1104100,"ip_address":"","ucode":"5EF394E93A1715","user_header":"https://static001.geekbang.org/account/avatar/00/10/d8/e4/7cc47d20.jpg","comment_is_top":false,"comment_ctime":1542850840,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542850840","product_id":100020801,"comment_content":"这是复制过来的，<br>读未提交：别人改数据的事务尚未提交，我在我的事务中也能读到。<br>读已提交：别人改数据的事务已经提交，我在我的事务中才能读到。<br>可重复读：别人改数据的事务已经提交，我在我的事务中也不去读。<br>串行：我的事务尚未提交，别人就别想改数据。<br>这4种隔离级别，并行性能依次降低，安全性依次提高。<br>为何读已提交并行性能比可重复读并行性能好<br><br>问题来了","like_count":0},{"had_liked":false,"id":41760,"user_name":"govern","can_delete":false,"product_type":"c1","uid":1029416,"ip_address":"","ucode":"0C8802994C66AA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b5/28/65f8ef3c.jpg","comment_is_top":false,"comment_ctime":1542849223,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542849223","product_id":100020801,"comment_content":"在“读提交”隔离级别下，这个视图是在每个 SQL 语句开始执行的时候创建的。 为什么这种情况下要创建视图而不能读内存？两者实际效果不是一样么？","like_count":0},{"had_liked":false,"id":41757,"user_name":"单行线的旋律","can_delete":false,"product_type":"c1","uid":1108402,"ip_address":"","ucode":"4D01060FCE4F21","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/b2/7ab31105.jpg","comment_is_top":false,"comment_ctime":1542849064,"is_pvip":false,"replies":[{"id":"14979","content":"因为它占了空间就没法删回去了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542853140,"ip_address":"","comment_id":41757,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542849064","product_id":100020801,"comment_content":"有一点不太明白:为什么回滚段删除了，硬盘空间大小没变大呢？<br>最后思考题:<br>1.开发时尽量不使用长事务。能不放一个事务中就不放，使事务最小原子化。当然这个因开发人员水平不同而不同。可以通过review code辅助。<br>2.应用层监控事务执行时间<br>3.数据库层监控<br>想法不太成熟，请老师指教。<br><br>来晚了，老师还能看见我的留言吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429888,"discussion_content":"因为它占了空间就没法删回去了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542853140,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41675,"user_name":"简白","can_delete":false,"product_type":"c1","uid":1043215,"ip_address":"","ucode":"6FEF61822B7355","user_header":"https://static001.geekbang.org/account/avatar/00/0f/eb/0f/f2803e83.jpg","comment_is_top":false,"comment_ctime":1542819853,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542819853","product_id":100020801,"comment_content":"串行似乎被可重复读碾压啊，串行存在的意义在哪里？","like_count":0},{"had_liked":false,"id":41666,"user_name":"做梦到天亮list","can_delete":false,"product_type":"c1","uid":1314060,"ip_address":"","ucode":"6EE25EBC17C26D","user_header":"https://static001.geekbang.org/account/avatar/00/14/0d/0c/3dbffd56.jpg","comment_is_top":false,"comment_ctime":1542817289,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542817289","product_id":100020801,"comment_content":"从图片到直播，还是图片帅多了","like_count":0},{"had_liked":false,"id":41494,"user_name":"天","can_delete":false,"product_type":"c1","uid":1310629,"ip_address":"","ucode":"664E42100DE272","user_header":"https://static001.geekbang.org/account/avatar/00/13/ff/a5/02953912.jpg","comment_is_top":false,"comment_ctime":1542794151,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542794151","product_id":100020801,"comment_content":"长事务意味着系统里面会存在很老的事务视图,由于这些事务随时可能访问数据库里面的任何数据，所以这个事务提提交之前，数据库里面它可能用到的回滚记录都必须保留，这就会导致大量占用存储空间。<br><br>这里看不太明白,意思是事务提交之后就会清除回滚吗?在事务没有提交之前的这段时间会占用存储空间,如果是这样理解的话,那长事务意味着系统里面会存在很老的事务视图可否理解为长事务意味着系统里面会存在很长的事务视图<br><br>","like_count":0},{"had_liked":false,"id":41418,"user_name":"栋能","can_delete":false,"product_type":"c1","uid":1006849,"ip_address":"","ucode":"8BD9C939D3E8E1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5d/01/9cd84003.jpg","comment_is_top":false,"comment_ctime":1542777536,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542777536","product_id":100020801,"comment_content":"挺好。如果再将“回滚日志和redo日志的关系”，“5.5版本之后回滚日志存放地址在哪”讲一讲就好了","like_count":0},{"had_liked":false,"id":41410,"user_name":"soooldier","can_delete":false,"product_type":"c1","uid":1000746,"ip_address":"","ucode":"04EC4C01DD06FD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/45/2a/c4413de4.jpg","comment_is_top":false,"comment_ctime":1542776069,"is_pvip":false,"replies":[{"id":"14837","content":"不是这两个概念中文都叫视图… 我后面专门一篇来解释","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542778989,"ip_address":"","comment_id":41410,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542776069","product_id":100020801,"comment_content":"老师，read-view是个什么东西呢？是咱们常说的视图吗","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429796,"discussion_content":"不是这两个概念中文都叫视图… 我后面专门一篇来解释","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542778989,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41390,"user_name":"华仔","can_delete":false,"product_type":"c1","uid":1185183,"ip_address":"","ucode":"4D3304FE618F3A","user_header":"https://static001.geekbang.org/account/avatar/00/12/15/9f/84dfa9a7.jpg","comment_is_top":false,"comment_ctime":1542772197,"is_pvip":false,"replies":[{"id":"14841","content":"如果是视频，发现全程只是切这几个图，好像会有点冷清😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542779386,"ip_address":"","comment_id":41390,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542772197","product_id":100020801,"comment_content":"这样图文和录音的方式。还要手滑对应找图。希望老师能出视频，这样体验度能高点。强烈建议","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429788,"discussion_content":"如果是视频，发现全程只是切这几个图，好像会有点冷清😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542779386,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41373,"user_name":"李志博","can_delete":false,"product_type":"c1","uid":1009109,"ip_address":"","ucode":"F3C72573B3C112","user_header":"https://static001.geekbang.org/account/avatar/00/0f/65/d5/88beb15a.jpg","comment_is_top":false,"comment_ctime":1542770351,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542770351","product_id":100020801,"comment_content":"长事务,有锁肯定影响性能,如果抛开锁的话,会占用大量存储空间这点也会导致性能的下降嘛,这点没太理解,请老师解答","like_count":0},{"had_liked":false,"id":41274,"user_name":"zzkkll99","can_delete":false,"product_type":"c1","uid":1302565,"ip_address":"","ucode":"ECB94A2B94D145","user_header":"https://static001.geekbang.org/account/avatar/00/13/e0/25/d87b1c9b.jpg","comment_is_top":false,"comment_ctime":1542763476,"is_pvip":false,"replies":[{"id":"14857","content":"你事务A和B是在不同的客户端中执行的吗？","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542781279,"ip_address":"","comment_id":41274,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542763476","product_id":100020801,"comment_content":"老师，我试验了一把将事务的隔离级别改为SERIALIZABLE，首先开启了一个事务A查询到表的结果为1。当我开启事务B的时候查询到结果也为1，此时我在事务B中对T表的数据进行修改为2也可以修改成功。这就说明当事务为SERIALIZABLE就一定会为“事务尚未提交，别的事务就别想改数据”。是不是跟我们执行的动作产生的锁有一定的关系。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429748,"discussion_content":"你事务A和B是在不同的客户端中执行的吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542781279,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41261,"user_name":"kaixiao7","can_delete":false,"product_type":"c1","uid":1242577,"ip_address":"","ucode":"505EC4AFB5E656","user_header":"https://static001.geekbang.org/account/avatar/00/12/f5/d1/cc6f82eb.jpg","comment_is_top":false,"comment_ctime":1542763030,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542763030","product_id":100020801,"comment_content":"事务隔离的实现看了好几遍，还是没看明白","like_count":0},{"had_liked":false,"id":41229,"user_name":"骑车吃火锅","can_delete":false,"product_type":"c1","uid":1303591,"ip_address":"","ucode":"6C00EEB90AD539","user_header":"https://static001.geekbang.org/account/avatar/00/13/e4/27/73359af3.jpg","comment_is_top":false,"comment_ctime":1542761427,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542761427","product_id":100020801,"comment_content":"RR隔离级别下，通过间隙锁+MVCC是不是可以完全解决幻读的问题。如果能解决为什么还要有串行化的隔离级别","like_count":0},{"had_liked":false,"id":41204,"user_name":"Geek_fcd241","can_delete":false,"product_type":"c1","uid":1304776,"ip_address":"","ucode":"9AA2B7B2AB65A3","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eogDaicaC0HY4T6a39zrF9nKwB7wKLOV8Pwnsk7iakD1TXYw2KFRmkCAXGNzibG1SQV1ROFYyscibmUrQ/132","comment_is_top":false,"comment_ctime":1542759750,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542759750","product_id":100020801,"comment_content":"autocommit设置为1，隔离级别设置为rc","like_count":0},{"had_liked":false,"id":41198,"user_name":"骑蜗牛上高速","can_delete":false,"product_type":"c1","uid":1302286,"ip_address":"","ucode":"36648D52A76CF8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoTiazkXvN29ebN6eotq8xu2pUGbQkrOduwBQsXmicsMBKl9qbfoggjBPacaIgk44zsjxlpbBgOcdaQ/132","comment_is_top":false,"comment_ctime":1542759467,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542759467","product_id":100020801,"comment_content":"面试的时候，有被问到过为什么使用rc或者rr而不用另一种隔离级别，我也不知道为什么要使用，老师可以解释一下哪种情况下使用rr，哪种情况下使用rc？","like_count":0},{"had_liked":false,"id":41170,"user_name":"Chenl07","can_delete":false,"product_type":"c1","uid":1089132,"ip_address":"","ucode":"0A0A086168A8F7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/0FI2bUjegtznv7XPC9DB9RJaqiaMiamWkibibPOibuUC3DCvI7XMvBANr6sDjRNbc1jwPic9pIaFxrdaib88VqUJKXSTQ/132","comment_is_top":false,"comment_ctime":1542754095,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542754095","product_id":100020801,"comment_content":"谢谢老师的分享。<br>rr和串行化的区别：后者会加锁，且加锁的范围是一个range，不止表中已有的数据会上锁，好比我去图书馆占座，我一个人把1_5的做为都占了，尽管这些座位还没有人（数据），但别人也不能坐，所以存在两个事务访问相同数据时，使用后者的隔离级别，后一个事务必须等待前一个事务完成后才能执行IUD。","like_count":0},{"had_liked":false,"id":41156,"user_name":"憶海拾貝","can_delete":false,"product_type":"c1","uid":1054727,"ip_address":"","ucode":"99E883A8601DED","user_header":"https://static001.geekbang.org/account/avatar/00/10/18/07/9f5f5dd3.jpg","comment_is_top":false,"comment_ctime":1542737959,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542737959","product_id":100020801,"comment_content":"目前项目多个数据库的连接都在一个代理服务上维护，避免同时打开连接数过多。导致需要业务服务自行维护当前线程的离线事务行为，最终合并改动一并提交。还需要加分布式锁，整体比较复杂的说…前面评论提到的类似想法，得考虑下实现成本的","like_count":0},{"had_liked":false,"id":41096,"user_name":"蓝色蓓蕾帽","can_delete":false,"product_type":"c1","uid":1016822,"ip_address":"","ucode":"8C28E204DE298D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/83/f6/a1e7403a.jpg","comment_is_top":false,"comment_ctime":1542725320,"is_pvip":false,"replies":[{"id":"14758","content":"1. 是的<br>2. 不是，A启动的时候，B因为还没提交，所以B事务的T1操作对A来说不存在","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542732121,"ip_address":"","comment_id":41096,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542725320","product_id":100020801,"comment_content":"请问老师我这么理解是否正确?<br>1.  回滚段中是不是3条事务。理由:只有事务提交后，记录的值才会改变，回滚断中值改变了3次，所以是3条事务。<br>2.  在可重复读模式下，在同一条记录上，执行A,B两个事务，B事务有T0,T1,T2三个阶段。B事务先启动，然后进行到了T1阶段，A事务启动，这时候A的read-view是由B事务T1阶段对应的值V1回滚得到的。因为B事务没有commit所以，A事务和B事务的read-view相同。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429697,"discussion_content":"1. 是的\n2. 不是，A启动的时候，B因为还没提交，所以B事务的T1操作对A来说不存在","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542732121,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41059,"user_name":"许海涛","can_delete":false,"product_type":"c1","uid":1307820,"ip_address":"","ucode":"25AED1BBDF4B54","user_header":"https://static001.geekbang.org/account/avatar/00/13/f4/ac/2cedea87.jpg","comment_is_top":false,"comment_ctime":1542719320,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542719320","product_id":100020801,"comment_content":"老师，我有个疑问，在监控mysql状态的时候过多使用information_schema或者proformance_schema或者5.7 sys这些库下的视图表对mysql性能多少会造成影响，有没有什么替代方法","like_count":0},{"had_liked":false,"id":41025,"user_name":"探索无止境","can_delete":false,"product_type":"c1","uid":1044178,"ip_address":"","ucode":"91D2A9907DFA79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/d2/7024431c.jpg","comment_is_top":false,"comment_ctime":1542714754,"is_pvip":false,"replies":[{"id":"14743","content":"会被复用，但是在ibdata中占用的空间恢复不回去了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542719391,"ip_address":"","comment_id":41025,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542714754","product_id":100020801,"comment_content":"林老师你好，关于长事务，我的理解是这样，因为会存在大段的回滚日志，而回滚日志可能其他未提交的事务也有关联，所以当这个长事务提交之后，这些回滚日志也会被保留，那当其他的事务提交后，这个回滚日志不会被删除吗？还请老师指正，感谢！","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429674,"discussion_content":"会被复用，但是在ibdata中占用的空间恢复不回去了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542719391,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41012,"user_name":"chen","can_delete":false,"product_type":"c1","uid":1305421,"ip_address":"","ucode":"E104F15FC48846","user_header":"https://static001.geekbang.org/account/avatar/00/13/eb/4d/80ab09d9.jpg","comment_is_top":false,"comment_ctime":1542712871,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542712871","product_id":100020801,"comment_content":"请问 当系统里没有比这个回滚日志更早的read-view怎么理解呢？","like_count":0},{"had_liked":false,"id":40985,"user_name":"威","can_delete":false,"product_type":"c1","uid":1068542,"ip_address":"","ucode":"C921CDCB22B9A3","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/fe/882eaf0f.jpg","comment_is_top":false,"comment_ctime":1542708646,"is_pvip":false,"replies":[{"id":"14746","content":"Readcommit 也需要并发控制的。<br><br>后面有文章中还会提到","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542719588,"ip_address":"","comment_id":40985,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542708646","product_id":100020801,"comment_content":"请问老师，多版本并发控制是不是只在可重复读这种隔离级别下才会别用到，之后的课程还会介绍多版本并发控制吗","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429667,"discussion_content":"Readcommit 也需要并发控制的。\n\n后面有文章中还会提到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542719588,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40934,"user_name":"花生","can_delete":false,"product_type":"c1","uid":1252241,"ip_address":"","ucode":"93A097D5129495","user_header":"https://static001.geekbang.org/account/avatar/00/13/1b/91/66f0d38a.jpg","comment_is_top":false,"comment_ctime":1542697930,"is_pvip":false,"replies":[{"id":"14747","content":"https:&#47;&#47;dev.mysql.com&#47;doc&#47;refman&#47;5.7&#47;en&#47;innodb-improved-purge-scheduling.html<br>主要看里面列的参数","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542719894,"ip_address":"","comment_id":40934,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542697930","product_id":100020801,"comment_content":"请问，文中说 系统会判断，当没有事务再需要用到这些回滚日志时，回滚日志会被删除。请问这个判断删除的操作，是系统哪一部分负责的？想具体了解一下这部分的过程，看什么资料能找到<br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429653,"discussion_content":"https://dev.mysql.com/doc/refman/5.7/en/innodb-improved-purge-scheduling.html\n主要看里面列的参数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542719894,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40932,"user_name":"落叶飞逝的恋","can_delete":false,"product_type":"c1","uid":1046429,"ip_address":"","ucode":"F9A95DB28BCF1E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/9d/be04b331.jpg","comment_is_top":false,"comment_ctime":1542697842,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542697842","product_id":100020801,"comment_content":"实际项目如果需要解决脏读的，则使用RC(Read Committed)。如果需要解决不可重复读的问题，则使用RR(Repeatable Read)","like_count":0},{"had_liked":false,"id":40925,"user_name":"此生不焕","can_delete":false,"product_type":"c1","uid":1103871,"ip_address":"","ucode":"4289490F48C2F9","user_header":"https://static001.geekbang.org/account/avatar/00/10/d7/ff/8baaaaa7.jpg","comment_is_top":false,"comment_ctime":1542696933,"is_pvip":false,"replies":[{"id":"14713","content":"我图中意思，A先到的😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542698239,"ip_address":"","comment_id":40925,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542696933","product_id":100020801,"comment_content":"若隔离级别是“串行化”，则在事务 B 执行“将 1 改成 2...<br>不是串行化吗？B事物在修改的时候加锁了，A怎么去提交？ 不应该是B执行完才是A提交吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429650,"discussion_content":"我图中意思，A先到的😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542698239,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40854,"user_name":"h","can_delete":false,"product_type":"c1","uid":1103074,"ip_address":"","ucode":"9A8A1118C254B5","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/e2/f466d6c9.jpg","comment_is_top":false,"comment_ctime":1542682287,"is_pvip":false,"replies":[{"id":"14698","content":"如果只是去掉自增属性，你可以直接忽略它，每次插入数据的时候自己指定值就可以了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542684832,"ip_address":"","comment_id":40854,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542682287","product_id":100020801,"comment_content":"mysql上千万表数据，如何快速删除自增，也就是取消自增","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429633,"discussion_content":"如果只是去掉自增属性，你可以直接忽略它，每次插入数据的时候自己指定值就可以了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542684832,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40831,"user_name":"蚂蚁小黑","can_delete":false,"product_type":"c1","uid":1305205,"ip_address":"","ucode":"DE79F0D72C7062","user_header":"https://static001.geekbang.org/account/avatar/00/13/ea/75/6644f028.jpg","comment_is_top":false,"comment_ctime":1542680264,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542680264","product_id":100020801,"comment_content":"思考题：如何避免长事务<br>1，开发的角度，可以将大的事务割成小的事务，比如一次更新1000条记录的事务，可以改为每100条commit一次。<br>2，数据库的角度，可以按文中提到的，set auto_commit=1，做个任务监控innodb_trx中事务的执行时间，时间长的报警提醒。<br><br>另外，关于mvcc老师可以展开详细讲一讲😀","like_count":0},{"had_liked":false,"id":40830,"user_name":"绵呀绵","can_delete":false,"product_type":"c1","uid":1011916,"ip_address":"","ucode":"EED6DA32DB23F4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/70/cc/a99b8bf9.jpg","comment_is_top":false,"comment_ctime":1542680007,"is_pvip":true,"replies":[{"id":"14700","content":"对，a事务加行锁","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542685007,"ip_address":"","comment_id":40830,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542680007","product_id":100020801,"comment_content":"老师请问，mysql的默认事务隔离等级是可重复读，那比如a事务执行过程中要把字段num数量+1，但num被其他人改了，那如何保证数据一致性，难得行加锁了吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429622,"discussion_content":"对，a事务加行锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542685007,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40778,"user_name":"大卫","can_delete":false,"product_type":"c1","uid":1019127,"ip_address":"","ucode":"D861709E483793","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/f7/a4de6f64.jpg","comment_is_top":false,"comment_ctime":1542676263,"is_pvip":false,"replies":[{"id":"14668","content":"A先启动的呀","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542678803,"ip_address":"","comment_id":40778,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542676263","product_id":100020801,"comment_content":"若隔离级别是“串行化”，则在事务 B 执行“将 1 改成 2”的时候，会被锁住。直到事务 A 提交后，事务 B 才可以继续执行。<br><br>这段话如果是&quot;串行化&quot;，事务B已经锁住了，应该是等事务B先提交后，事务A才开始执行吧？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429607,"discussion_content":"A先启动的呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542678803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40751,"user_name":"sgl","can_delete":false,"product_type":"c1","uid":1252243,"ip_address":"","ucode":"D73875BA22954F","user_header":"https://static001.geekbang.org/account/avatar/00/13/1b/93/e3b44969.jpg","comment_is_top":false,"comment_ctime":1542674109,"is_pvip":false,"replies":[{"id":"14673","content":"实践篇会有文章提到","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542678943,"ip_address":"","comment_id":40751,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542674109","product_id":100020801,"comment_content":"后面还会讨论mvcc吗？感觉没有搞懂，有点简略了。还有，可以推荐一些书籍吗","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429599,"discussion_content":"实践篇会有文章提到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542678943,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40679,"user_name":"Yezhiwei","can_delete":false,"product_type":"c1","uid":1005157,"ip_address":"","ucode":"31E8E33688CBEC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/65/22a37a8e.jpg","comment_is_top":false,"comment_ctime":1542641385,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542641385","product_id":100020801,"comment_content":"避免长事务<br><br>把长事务拆分成多个小事务，每个事务完成后变更一下状态或者发送一个通知，下一个小事务就可以监控状态或接收通知继续工作，直到完成整个小事务链","like_count":0},{"had_liked":false,"id":40667,"user_name":"赵英伍.箭竹","can_delete":false,"product_type":"c1","uid":1077329,"ip_address":"","ucode":"DDE81C05DEAE45","user_header":"https://static001.geekbang.org/account/avatar/00/10/70/51/26df9117.jpg","comment_is_top":false,"comment_ctime":1542640130,"is_pvip":false,"replies":[{"id":"14636","content":"不是begin,而是begin之后的第一个语句执行开始的时候","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542641057,"ip_address":"","comment_id":40667,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542640130","product_id":100020801,"comment_content":"这个read-view里存储什么范围的数据呢？rr模式下，事务begin就创建一个空的read-view，然后语句执行后，把符合条件的记录存在这个视图中，commit后再释放这个视图，这么理解对吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429584,"discussion_content":"不是begin,而是begin之后的第一个语句执行开始的时候","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542641057,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40654,"user_name":"在路上","can_delete":false,"product_type":"c1","uid":1143372,"ip_address":"","ucode":"335960F683C23C","user_header":"https://static001.geekbang.org/account/avatar/00/11/72/4c/4d636a23.jpg","comment_is_top":false,"comment_ctime":1542639061,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542639061","product_id":100020801,"comment_content":"隔离级别的例子，看得不太明白，为啥值是那么变化的，不理解","like_count":0},{"had_liked":false,"id":40631,"user_name":"404  had found","can_delete":false,"product_type":"c1","uid":1025939,"ip_address":"","ucode":"BF6983EB50AC74","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a7/93/62f03467.jpg","comment_is_top":false,"comment_ctime":1542637920,"is_pvip":false,"replies":[{"id":"14635","content":"<br>要注意的是，这时候查询没在事务里面，所以等开始事务进行更新的时候，可能数据已经变了。<br><br>如果业务逻辑可以接受这么做，那这样是很好的方法。<br><br>也是我比较建议的业务优化方向<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542638152,"ip_address":"","comment_id":40631,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542637920","product_id":100020801,"comment_content":"在事务开启前是不是可以把需要查询的数据查询出来，做好逻辑运算，只有写数据库阶段才开启事务，是不是可以避免长事务了？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429576,"discussion_content":"\n要注意的是，这时候查询没在事务里面，所以等开始事务进行更新的时候，可能数据已经变了。\n\n如果业务逻辑可以接受这么做，那这样是很好的方法。\n\n也是我比较建议的业务优化方向\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542638152,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40605,"user_name":"游泳速度快内裤跟不上","can_delete":false,"product_type":"c1","uid":1305954,"ip_address":"","ucode":"3EAD2BCDC39A3E","user_header":"https://static001.geekbang.org/account/avatar/00/13/ed/62/864dbe69.jpg","comment_is_top":false,"comment_ctime":1542635899,"is_pvip":false,"replies":[{"id":"14633","content":"看到锁那一章就不会这么认为啦：）","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542637988,"ip_address":"","comment_id":40605,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542635899","product_id":100020801,"comment_content":"那转账场景的隔离级别设置为什么呢，如果是rr或者rc，感觉都会有问题","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429567,"discussion_content":"看到锁那一章就不会这么认为啦：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542637988,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40599,"user_name":"乘坐Tornado的线程魔法师","can_delete":false,"product_type":"c1","uid":1132661,"ip_address":"","ucode":"C4C9915866E769","user_header":"https://static001.geekbang.org/account/avatar/00/11/48/75/02b4366a.jpg","comment_is_top":false,"comment_ctime":1542635413,"is_pvip":false,"replies":[{"id":"14634","content":"理解正确","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542638015,"ip_address":"","comment_id":40599,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542635413","product_id":100020801,"comment_content":"当然在可重复读情况下，未提交事务对其他事务也是不可见的。这个该如何理解？是不是如果事务A仍然没有提交的话，那么无论事务B是否已经提交，事务A读到的数据都是一样的？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429564,"discussion_content":"理解正确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542638015,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40593,"user_name":"Hesher","can_delete":false,"product_type":"c1","uid":1026832,"ip_address":"","ucode":"99AB8B1704CB7E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ab/10/b812ff3e.jpg","comment_is_top":false,"comment_ctime":1542634902,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542634902","product_id":100020801,"comment_content":"拆分业务来避免长事务，比如订单系统和库存系统拆开，订单提交，插入订单。调用减库存接口，库存更新就，回调订单。如果出现库存不足，订单系统做相应报错处理。","like_count":0},{"had_liked":false,"id":40592,"user_name":"oscarwin","can_delete":false,"product_type":"c1","uid":1131956,"ip_address":"","ucode":"492430BA342593","user_header":"https://static001.geekbang.org/account/avatar/00/11/45/b4/ec66d499.jpg","comment_is_top":false,"comment_ctime":1542634792,"is_pvip":false,"replies":[{"id":"14617","content":"嗯嗯，行锁，这个是第七讲的内容😓","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542635992,"ip_address":"","comment_id":40592,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542634792","product_id":100020801,"comment_content":"那么两个rr级别的事务同时执行，比如对同一账户两个同时转账，虽然可重复读，但是要更新数据能不能保证数据不会被覆盖，数据不会错乱，这里还不理解。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429562,"discussion_content":"嗯嗯，行锁，这个是第七讲的内容😓","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542635992,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40582,"user_name":"发条橙子 。","can_delete":false,"product_type":"c1","uid":1259218,"ip_address":"","ucode":"ED076F4534FFED","user_header":"https://static001.geekbang.org/account/avatar/00/13/36/d2/c7357723.jpg","comment_is_top":false,"comment_ctime":1542633737,"is_pvip":false,"replies":[{"id":"14618","content":"更早之前了，写redolog和binlog是提交过程。在此之前更新数据的时候就已经写了undolog","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542636073,"ip_address":"","comment_id":40582,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542633737","product_id":100020801,"comment_content":"老师 ，在更新语句的时候 会两阶段提交形式写入 redo log 和 bin log . 那记录旧版本的 undo log 是这么时候写入的呢","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429560,"discussion_content":"更早之前了，写redolog和binlog是提交过程。在此之前更新数据的时候就已经写了undolog","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542636073,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40581,"user_name":"莫莫","can_delete":false,"product_type":"c1","uid":1308988,"ip_address":"","ucode":"E3DF3D439EFE9F","user_header":"https://static001.geekbang.org/account/avatar/00/13/f9/3c/4f4cc6aa.jpg","comment_is_top":false,"comment_ctime":1542633691,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542633691","product_id":100020801,"comment_content":"老师，“幻读”能举个例子吗？一直理解不透，谢谢了。","like_count":0},{"had_liked":false,"id":40562,"user_name":"安小依","can_delete":false,"product_type":"c1","uid":1101660,"ip_address":"","ucode":"A5C414C7B994FF","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/5c/d4e19eb6.jpg","comment_is_top":false,"comment_ctime":1542632496,"is_pvip":false,"replies":[{"id":"14619","content":"文中写的是2呀","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542636116,"ip_address":"","comment_id":40562,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542632496","product_id":100020801,"comment_content":"串行化的时候，最后v3怎么可能是3呢，应该是2吧","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429558,"discussion_content":"文中写的是2呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542636116,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40561,"user_name":"张立春","can_delete":false,"product_type":"c1","uid":1124382,"ip_address":"","ucode":"D8B4523B95D839","user_header":"https://static001.geekbang.org/account/avatar/00/11/28/1e/76e19bd3.jpg","comment_is_top":false,"comment_ctime":1542632377,"is_pvip":false,"replies":[{"id":"14620","content":"上面的表格就是分类四种隔离级别说的，不清楚提出来哈😄<br><br>对，普通查询不加。<br><br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542636192,"ip_address":"","comment_id":40561,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542632377","product_id":100020801,"comment_content":"脏读、不可重复读和幻读结合几种隔离级别一并讲了是不是更好？读未提交、读提交和可重复读是不是都不用加读或写锁？是不是把几种锁也讲讲？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429557,"discussion_content":"上面的表格就是分类四种隔离级别说的，不清楚提出来哈😄\n\n对，普通查询不加。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542636192,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40556,"user_name":"郭健","can_delete":false,"product_type":"c1","uid":1102204,"ip_address":"","ucode":"169645EBF3B46C","user_header":"https://static001.geekbang.org/account/avatar/00/10/d1/7c/4639f22c.jpg","comment_is_top":false,"comment_ctime":1542632243,"is_pvip":false,"replies":[{"id":"14621","content":"不是… undo叫做 回滚段，回滚语句就是”rollback”这个命令","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542636230,"ip_address":"","comment_id":40556,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542632243","product_id":100020801,"comment_content":"回滚语句就是传说中的undo吧？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429556,"discussion_content":"不是… undo叫做 回滚段，回滚语句就是”rollback”这个命令","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542636230,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40541,"user_name":"吕","can_delete":false,"product_type":"c1","uid":1210890,"ip_address":"","ucode":"8F08E2CB81C4C3","user_header":"https://static001.geekbang.org/account/avatar/00/12/7a/0a/0ce5c232.jpg","comment_is_top":false,"comment_ctime":1542631301,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542631301","product_id":100020801,"comment_content":"就是当系统里没有比这个回滚日志更早的 read-view 的时候就删除回滚日志，这个&#39;更早&#39;的概念没想明白，是指事务提交后才会删除么？","like_count":0},{"had_liked":false,"id":40540,"user_name":"吕","can_delete":false,"product_type":"c1","uid":1210890,"ip_address":"","ucode":"8F08E2CB81C4C3","user_header":"https://static001.geekbang.org/account/avatar/00/12/7a/0a/0ce5c232.jpg","comment_is_top":false,"comment_ctime":1542631300,"is_pvip":false,"replies":[{"id":"14608","content":"“更早”就是更早启动","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542633953,"ip_address":"","comment_id":40540,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542631300","product_id":100020801,"comment_content":"就是当系统里没有比这个回滚日志更早的 read-view 的时候就删除回滚日志，这个&#39;更早&#39;的概念没想明白，是指事务提交后才会删除么？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429555,"discussion_content":"“更早”就是更早启动","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542633953,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40537,"user_name":"白永伟","can_delete":false,"product_type":"c1","uid":1200629,"ip_address":"","ucode":"3578587B8DCADC","user_header":"https://static001.geekbang.org/account/avatar/00/12/51/f5/211dff03.jpg","comment_is_top":false,"comment_ctime":1542630808,"is_pvip":false,"replies":[{"id":"14609","content":"多线程不能同时用一个连接，你说的共同，是不是指连接池复用？这时候对一个连接是“先后使用”，不是“同时使用”","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542634014,"ip_address":"","comment_id":40537,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542630808","product_id":100020801,"comment_content":"老师，怎么理解事务是基于连接的这句话？如果我在多线程中共用一个连接，并执行事务会有什么后果？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429554,"discussion_content":"多线程不能同时用一个连接，你说的共同，是不是指连接池复用？这时候对一个连接是“先后使用”，不是“同时使用”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542634014,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40529,"user_name":"阿涛","can_delete":false,"product_type":"c1","uid":1308853,"ip_address":"","ucode":"B0785A5B501352","user_header":"https://static001.geekbang.org/account/avatar/00/13/f8/b5/82b64369.jpg","comment_is_top":false,"comment_ctime":1542629887,"is_pvip":false,"replies":[{"id":"14607","content":"说下你的问题","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542633507,"ip_address":"","comment_id":40529,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542629887","product_id":100020801,"comment_content":"事物隔离的实现能说具体点吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429553,"discussion_content":"说下你的问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542633507,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40518,"user_name":"荒漠甘泉","can_delete":false,"product_type":"c1","uid":1311894,"ip_address":"","ucode":"AD409201934C79","user_header":"https://static001.geekbang.org/account/avatar/00/14/04/96/dcb9504b.jpg","comment_is_top":false,"comment_ctime":1542628814,"is_pvip":false,"replies":[{"id":"14610","content":"是的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542634026,"ip_address":"","comment_id":40518,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542628814","product_id":100020801,"comment_content":"老师，如果set autocommit=1，我执行一个delete操作，删除后发现删错了，想rollback，但是因为是自动提交的，所以没法回退了吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429551,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542634026,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40485,"user_name":"努力学习","can_delete":false,"product_type":"c1","uid":1088370,"ip_address":"","ucode":"58590960E76FD2","user_header":"https://static001.geekbang.org/account/avatar/00/10/9b/72/99b52254.jpg","comment_is_top":false,"comment_ctime":1542624913,"is_pvip":false,"replies":[{"id":"14614","content":"RR。你可以启动一个新实例然后show一下","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542634989,"ip_address":"","comment_id":40485,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542624913","product_id":100020801,"comment_content":"想问一下默认MySQL的读模式是什么样的？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429537,"discussion_content":"RR。你可以启动一个新实例然后show一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542634989,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40460,"user_name":"bing","can_delete":false,"product_type":"c1","uid":1067589,"ip_address":"","ucode":"6ADAA36B2B732C","user_header":"https://static001.geekbang.org/account/avatar/00/10/4a/45/04a13bf9.jpg","comment_is_top":false,"comment_ctime":1542622120,"is_pvip":false,"replies":[{"id":"14573","content":"事务开启的时候","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542623212,"ip_address":"","comment_id":40460,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542622120","product_id":100020801,"comment_content":"sql执行时创建视图，是执行前还是执行后","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429529,"discussion_content":"事务开启的时候","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542623212,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40456,"user_name":"刘十一","can_delete":false,"product_type":"c1","uid":1035899,"ip_address":"","ucode":"5927D77D248E30","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ce/7b/fa0f9368.jpg","comment_is_top":false,"comment_ctime":1542621545,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542621545","product_id":100020801,"comment_content":"软件开发的原则，把大的拆成小的来处理，最后再把小的合并","like_count":0},{"had_liked":false,"id":40408,"user_name":"lochen","can_delete":false,"product_type":"c1","uid":1309747,"ip_address":"","ucode":"CE48502320EAB6","user_header":"https://static001.geekbang.org/account/avatar/00/13/fc/33/dd48f1c5.jpg","comment_is_top":false,"comment_ctime":1542616049,"is_pvip":false,"replies":[{"id":"14565","content":"需要事务的场景还是很多的，文章开头的例子就是哦。","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542618670,"ip_address":"","comment_id":40408,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542616049","product_id":100020801,"comment_content":"一般什么时候用事务啊，用隐式的事务不可以吗","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429513,"discussion_content":"需要事务的场景还是很多的，文章开头的例子就是哦。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542618670,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40395,"user_name":"Geek_ye","can_delete":false,"product_type":"c1","uid":1287619,"ip_address":"","ucode":"55FFD828A981A2","user_header":"https://static001.geekbang.org/account/avatar/00/13/a5/c3/b048c0d6.jpg","comment_is_top":false,"comment_ctime":1542614332,"is_pvip":false,"replies":[{"id":"14566","content":"这个是MySQL 支持的SQL语句","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542618711,"ip_address":"","comment_id":40395,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542614332","product_id":100020801,"comment_content":"老师，初学者的我不知道start transaction是设置在哪里的？是linux服务器端的命令式句中的吗？<br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429507,"discussion_content":"这个是MySQL 支持的SQL语句","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542618711,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40368,"user_name":"阿豆Dou","can_delete":false,"product_type":"c1","uid":1303898,"ip_address":"","ucode":"5D933075D93179","user_header":"https://static001.geekbang.org/account/avatar/00/13/e5/5a/b650ed8c.jpg","comment_is_top":false,"comment_ctime":1542605062,"is_pvip":false,"replies":[{"id":"14538","content":"回滚就不写到redolog了， 嗯，空间满了的话，binlog写不下去，事务就执行不下去","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542608709,"ip_address":"","comment_id":40368,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542605062","product_id":100020801,"comment_content":"长事务回滚也会写日志吗？是写redolog？之前看理解是需要写日志，当日志空间不够，数据库就会挂起不提供服务","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429497,"discussion_content":"回滚就不写到redolog了， 嗯，空间满了的话，binlog写不下去，事务就执行不下去","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542608709,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40334,"user_name":"hhhh","can_delete":false,"product_type":"c1","uid":1256101,"ip_address":"","ucode":"9E87017424B382","user_header":"https://static001.geekbang.org/account/avatar/00/13/2a/a5/625c0a2e.jpg","comment_is_top":false,"comment_ctime":1542595022,"is_pvip":false,"replies":[{"id":"14531","content":"Kill query + thread_id 可以要求一个语句终止执行","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542598836,"ip_address":"","comment_id":40334,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542595022","product_id":100020801,"comment_content":"作为开发负责人，为开发人员制定规范，避免Long running transcation<br>作为DBA，定时检查老师提到的information_schema.innodb_trx表，将超过阈值的transaction终止掉，这一点看到其他同学说能够定时执行+邮件通知，不知道该怎么具体实现？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429479,"discussion_content":"Kill query + thread_id 可以要求一个语句终止执行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542598836,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40332,"user_name":"mz","can_delete":false,"product_type":"c1","uid":1003581,"ip_address":"","ucode":"1D714C23F78446","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/MlmSR4YXUfrNlZdMv7bv1ic64HaxxVKcVtaxjzhXCvNC4XByICCmYUTprhOESzIV8p59N6DnSJ7HywfvGr5nicgA/132","comment_is_top":false,"comment_ctime":1542594623,"is_pvip":false,"replies":[{"id":"14525","content":"大家都按照自己的隔离级别来运行😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542595552,"ip_address":"","comment_id":40332,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542594623","product_id":100020801,"comment_content":"如果两个事务隔离级别不一样怎么处理呢？A 事务能不能读取到值，应该是看 B 事务的隔离级别对吧？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429478,"discussion_content":"大家都按照自己的隔离级别来运行😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542595552,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40326,"user_name":"XD","can_delete":false,"product_type":"c1","uid":1079293,"ip_address":"","ucode":"DC9DCFB3841A4E","user_header":"https://static001.geekbang.org/account/avatar/00/10/77/fd/c6619535.jpg","comment_is_top":false,"comment_ctime":1542593407,"is_pvip":false,"replies":[{"id":"14522","content":"比一个回滚段更“老”的事务都结束后就没用了。 <br><br>是InnoDB的日志","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542594718,"ip_address":"","comment_id":40326,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542593407","product_id":100020801,"comment_content":"你一定会问，回滚日志总不能一直保留吧，什么时候删除呢？答案是，在不需要的时候才删除。也就是说，系统会判断，当没有事务再需要用到这些回滚日志时，回滚日志会被删除。<br><br>什么时候才不需要了呢？就是当系统里没有比这个回滚日志更早的 read-view 的时候。<br>-----------------------------------<br><br>这里可不可以理解成，当事务已经co的时候就没用了？所以它是server层的日志咯？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429474,"discussion_content":"比一个回滚段更“老”的事务都结束后就没用了。 \n\n是InnoDB的日志","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542594718,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40312,"user_name":"约书亚","can_delete":false,"product_type":"c1","uid":1046714,"ip_address":"","ucode":"81EA27ADD9EC1A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/ba/14e05601.jpg","comment_is_top":false,"comment_ctime":1542591746,"is_pvip":false,"replies":[{"id":"14511","content":"1. 历史原因了… <br>2. 实现上最主要就是这个区别了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542593527,"ip_address":"","comment_id":40312,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542591746","product_id":100020801,"comment_content":"疑问：<br>1.据说其他主流数据库，在基于快照（视图）的模式下的更新，会使用隐藏的版本号来进行CAS？而MYSQL还是基于加锁。如果应用程序没加判断，还是有lost update的风险。为什么MySQL要选择这条路？<br>2.“视图”时间点的不同，就是MYSQL对于RC和RR底层实现的主要区别么？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429470,"discussion_content":"1. 历史原因了… \n2. 实现上最主要就是这个区别了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542593527,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40309,"user_name":"石头","can_delete":false,"product_type":"c1","uid":1006122,"ip_address":"","ucode":"149984779F5561","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5a/2a/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1542591525,"is_pvip":false,"replies":[{"id":"14512","content":"要看场景，其实还是有意义的，另一个需求是备份，我们后面的文章中会提到","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542593582,"ip_address":"","comment_id":40309,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542591525","product_id":100020801,"comment_content":"个人觉得“可以重复读(repeatable read)”这个级别是数据库理论过度学术导致的问题. 文中举例的地方首先是应该加上时间来过滤, 再一个数据有了变化就应该被读出新的来更符合人的直觉, 不读出来反倒容易被质疑  &#47; 一己之言","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429468,"discussion_content":"要看场景，其实还是有意义的，另一个需求是备份，我们后面的文章中会提到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542593582,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40307,"user_name":"Jason","can_delete":false,"product_type":"c1","uid":1308126,"ip_address":"","ucode":"7FFD6DFCE6EB36","user_header":"https://static001.geekbang.org/account/avatar/00/13/f5/de/c33e531e.jpg","comment_is_top":false,"comment_ctime":1542591287,"is_pvip":false,"replies":[{"id":"14501","content":"理解很棒。<br>Set autocommit=0 ，每次commit&#47;rollback之后，再执行一个SQL语句自动开启事务，就是这么个设定😓","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542591760,"ip_address":"","comment_id":40307,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542591287","product_id":100020801,"comment_content":"总结一下这节课学到的<br>首先，最主要的，当然是事务，里面重头戏就是事务隔离性；这里主要是RC和RR的，通过课中那张图的v1，v2，v3能很清晰的理解<br>其实，是select在自动提交设置为0的时候，也会同样开启一个事务，这点不是很理解，用意合在？不知道是不是因为RR隔离的原因<br>下面是问题的理解<br>如果有一个大事务出现，首先，第一个想到的就是分割，将一个大事务分成若干个小事务，批量操作；比如，一个1000行的更新，可以分割成10个100行的更新来操作；当然都是10个事务的情况，最好的，感觉是根据主键的值来进行更新会更快速<br>其次，就是业务方面了，要知道这个大事务的需求是什么，为什么要这样做，这样才能更好的设计方案；比如：可以是上面那些分割事务，也可以和开发沟通改变表结构，将一个大表分成若干个小表等等；需求不同，方案也将不同","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429467,"discussion_content":"理解很棒。\nSet autocommit=0 ，每次commit/rollback之后，再执行一个SQL语句自动开启事务，就是这么个设定😓","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542591760,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40305,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1542591139,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1542591139","product_id":100020801,"comment_content":"这个要监控information.innodb_trx这个表的，计算出事务的时间，如果是读事务一旦超过某个阈值就要kill掉，如果是写事务就要根据实际业务来判断了<br><br>另外多版本控制mvvc没有详细讲啊，不是很了解","like_count":0},{"had_liked":false,"id":40294,"user_name":"楊某人","can_delete":false,"product_type":"c1","uid":1202007,"ip_address":"","ucode":"EF351D61B379D5","user_header":"https://static001.geekbang.org/account/avatar/00/12/57/57/dd1f6c85.jpg","comment_is_top":false,"comment_ctime":1542589926,"is_pvip":false,"replies":[{"id":"14503","content":"报错信息是什么？死锁、超时还是啥，得有报错才能知道怎么处理哦","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542591960,"ip_address":"","comment_id":40294,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542589926","product_id":100020801,"comment_content":"老师，每次插入都开始事务，提交事务，多进程处理，插入任务时，会出现个别任务插入失败，事务级别是可重复读，对于这个问题，我想了解您的分析，可以吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429462,"discussion_content":"报错信息是什么？死锁、超时还是啥，得有报错才能知道怎么处理哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542591960,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40274,"user_name":"Linuxer","can_delete":false,"product_type":"c1","uid":1153978,"ip_address":"","ucode":"272D9D8089C3D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/ba/333b59e5.jpg","comment_is_top":false,"comment_ctime":1542588793,"is_pvip":false,"replies":[{"id":"14505","content":"额，此视图（innodb 的read-view) 非彼视图(虚表）。<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542592143,"ip_address":"","comment_id":40274,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542588793","product_id":100020801,"comment_content":"请教一个问题，根据个人理解视图只是虚表，哪么哪个阶段创建不都一样？从后面看视图需要与&#39;回滚段关联，这块能展开一下吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429453,"discussion_content":"额，此视图（innodb 的read-view) 非彼视图(虚表）。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542592143,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40271,"user_name":"子夜2104","can_delete":false,"product_type":"c1","uid":1070286,"ip_address":"","ucode":"C4FF54AEA6002F","user_header":"https://static001.geekbang.org/account/avatar/00/10/54/ce/92029d2f.jpg","comment_is_top":false,"comment_ctime":1542588582,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542588582","product_id":100020801,"comment_content":"感谢老师今日分享~<br>记一下笔记:<br>1.MySQL事物隔离级别: 读已提交、读未提交、可重复读（默认级别）、串行化。<br>2.隔离级别通过回滚日志来实现。<br>3.不要保持长链接（会占用许多系统资源:锁、视图）","like_count":0},{"had_liked":false,"id":40263,"user_name":"Linuxer","can_delete":false,"product_type":"c1","uid":1153978,"ip_address":"","ucode":"272D9D8089C3D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/ba/333b59e5.jpg","comment_is_top":false,"comment_ctime":1542587704,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542587704","product_id":100020801,"comment_content":"课后思考题可以考虑从制定规范，要求必须开启显示提交和从监控两方面着手","like_count":0},{"had_liked":false,"id":40262,"user_name":"Linuxer","can_delete":false,"product_type":"c1","uid":1153978,"ip_address":"","ucode":"272D9D8089C3D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/ba/333b59e5.jpg","comment_is_top":false,"comment_ctime":1542587703,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542587703","product_id":100020801,"comment_content":"课后思考题可以考虑从制定规范，要求必须开启显示提交和从监控两方面着手","like_count":0},{"had_liked":false,"id":40258,"user_name":"Linuxer","can_delete":false,"product_type":"c1","uid":1153978,"ip_address":"","ucode":"272D9D8089C3D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/ba/333b59e5.jpg","comment_is_top":false,"comment_ctime":1542587582,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542587582","product_id":100020801,"comment_content":"请问能解释一下幻吗？","like_count":0},{"had_liked":false,"id":40257,"user_name":"高枕","can_delete":false,"product_type":"c1","uid":1310312,"ip_address":"","ucode":"20F6CF75EC9AA4","user_header":"https://static001.geekbang.org/account/avatar/00/13/fe/68/e0bebd9a.jpg","comment_is_top":false,"comment_ctime":1542587269,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542587269","product_id":100020801,"comment_content":"原来一直蒙的问题，现在很清晰了。<br>最后的问题，是不是要从数据库事务的角度分析总结业务呢？","like_count":0},{"had_liked":false,"id":40245,"user_name":"陈新仁","can_delete":false,"product_type":"c1","uid":1309925,"ip_address":"","ucode":"C0F8E3BC334A45","user_header":"https://static001.geekbang.org/account/avatar/00/13/fc/e5/c26c67ea.jpg","comment_is_top":false,"comment_ctime":1542585782,"is_pvip":false,"replies":[{"id":"14508","content":"是2的，文章中说了，A先执行完哦。不错提交后锁就被B抢去啦","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542592618,"ip_address":"","comment_id":40245,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542585782","product_id":100020801,"comment_content":"“若隔离级别是“串行化”，则在事务 B 执行“将 1 改成 2”的时候，会被锁住。直到事务 A 提交后，事务 B 才可以继续执行。所以从 A 的角度看， V1、V2 值是 1，V3 的值是 2。”<br>这里的事务A是晚于B提交，所以这里的V3应该还是1吧","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429441,"discussion_content":"是2的，文章中说了，A先执行完哦。不错提交后锁就被B抢去啦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542592618,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40234,"user_name":"不停","can_delete":false,"product_type":"c1","uid":1055507,"ip_address":"","ucode":"D4A568307D017D","user_header":"https://static001.geekbang.org/account/avatar/00/10/1b/13/b7e5a662.jpg","comment_is_top":false,"comment_ctime":1542584359,"is_pvip":false,"replies":[{"id":"14515","content":"早！","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542593835,"ip_address":"","comment_id":40234,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542584359","product_id":100020801,"comment_content":"沙发！","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429436,"discussion_content":"早！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542593835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40230,"user_name":"BigMortal","can_delete":false,"product_type":"c1","uid":1302057,"ip_address":"","ucode":"6236118A0FFCBB","user_header":"https://static001.geekbang.org/account/avatar/00/13/de/29/71685b0b.jpg","comment_is_top":false,"comment_ctime":1542583946,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542583946","product_id":100020801,"comment_content":"#关于数据库的隔离模式：我的理解mysql 的rr，和oracle 的rc 最大的区别是mysql 在rr隔离模式中引入了gap lock 来保障rr，oracle如果要绝对保证rr，必须启用undo guarantee ，理论上也能保证rr。不知道理解是否有偏差？","like_count":0}]}