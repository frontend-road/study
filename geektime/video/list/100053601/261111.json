{"id":261111,"title":"22 | 如何解决微服务的分布式事务问题？（上）","content":"<p><strong>课件和Demo地址</strong><br>\n<a href=\"https://gitee.com/geektime-geekbang/geektime-distributed\">https://gitee.com/geektime-geekbang/geektime-distributed</a></p>","comments":[{"had_liked":false,"id":237333,"user_name":"No ver","can_delete":false,"product_type":"c3","uid":1106465,"ip_address":"","ucode":"BD5FA90AAF07D8","user_header":"https://static001.geekbang.org/account/avatar/00/10/e2/21/840410d8.jpg","comment_is_top":false,"comment_ctime":1595782074,"is_pvip":false,"replies":[{"id":87841,"content":"TCC可以认为就是服务层的2PC，基本流程差不多。因为服务没有提交&#47;回滚概念，所以用预留。\n\n预留举个例子，对于酒店预留，可以在hotel表中添加一个状态字段，available表示可以预定，reserved表示预留了(还没有确认confirm)，ordered表示已经预定了。TCC try的时候先设为reserved，这样别人就暂时不能定这个酒店了，confirm则改为ordered，如果cancel，则改为available状态。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1595956214,"ip_address":"","comment_id":237333,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100053601,"comment_content":"老师，看了之后还是不太明白2pc和tcc的区别，2pc第一阶段在数据库中开启事务，然后执行，返回ready，等到第二阶段提交时再提交事务。tcc第一阶段预留资源，怎么预留，如果还是开启事务，执行语句这样预留，那和2pc有什么区别，只是多了一个取消操作吗？","like_count":5,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502377,"discussion_content":"TCC可以认为就是服务层的2PC，基本流程差不多。因为服务没有提交/回滚概念，所以用预留。\n\n预留举个例子，对于酒店预留，可以在hotel表中添加一个状态字段，available表示可以预定，reserved表示预留了(还没有确认confirm)，ordered表示已经预定了。TCC try的时候先设为reserved，这样别人就暂时不能定这个酒店了，confirm则改为ordered，如果cancel，则改为available状态。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595956214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":236961,"user_name":"雨中漫步","can_delete":false,"product_type":"c3","uid":1130927,"ip_address":"","ucode":"022AFC716E3CAA","user_header":"https://static001.geekbang.org/account/avatar/00/11/41/af/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1595605139,"is_pvip":false,"replies":[{"id":87618,"content":"这个要看具体的2PC实现和配置的策略。\n\n像Seata这种2PC实现，第一个阶段其实已经本地提交，第二阶段的commit只是清除本地的undolog，可以异步去完成，即使commit失败，它也会重试。即使一直重试也不成功，也没有关系，记录错误日志，后面人工介入清除undolog即可。\n\n根据标准的2PC规范，既然第一个阶段大家都返回Ready，表示可以提交了，那么第二个阶段应该而且必须要能提交成功，如果不成功就要告警人工介入修复。参考：\nhttps:&#47;&#47;stackoverflow.com&#47;questions&#47;171876&#47;how-do-two-phase-commits-prevent-last-second-failure\n","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1595693151,"ip_address":"","comment_id":236961,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100053601,"comment_content":"老师，有一点不太明白，2PC情况下，如果协调者向资源管理者其中之一发送commit失败，这样事务不就失败了吗？这样的方案是不是有较大的风险","like_count":4,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502266,"discussion_content":"这个要看具体的2PC实现和配置的策略。\n\n像Seata这种2PC实现，第一个阶段其实已经本地提交，第二阶段的commit只是清除本地的undolog，可以异步去完成，即使commit失败，它也会重试。即使一直重试也不成功，也没有关系，记录错误日志，后面人工介入清除undolog即可。\n\n根据标准的2PC规范，既然第一个阶段大家都返回Ready，表示可以提交了，那么第二个阶段应该而且必须要能提交成功，如果不成功就要告警人工介入修复。参考：\nhttps://stackoverflow.com/questions/171876/how-do-two-phase-commits-prevent-last-second-failure\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595693151,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":348262,"user_name":"Walker Jiang","can_delete":false,"product_type":"c3","uid":1023818,"ip_address":"","ucode":"92AE855D428917","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9f/4a/f5b8c6b3.jpg","comment_is_top":false,"comment_ctime":1654909824,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100053601,"comment_content":"老师，你画图的工具是哪个? 这节课中的图很直观清晰","like_count":0}]}