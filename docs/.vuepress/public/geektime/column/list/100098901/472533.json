{"id":472533,"title":"15｜音画同步：如何让声音和画面手拉手前进？","content":"<p>你好，我是李江。</p><p>在上节课中，我们讲述了音视频封装以及音视频数据是如何装到FLV和MP4文件里面的。这节课我们来讲讲播放这些文件的时候需要用到的一个非常重要的技术——音视频同步，也叫<strong>音画同步</strong>。</p><p>音视频同步是什么呢？它就是指在音视频数据播放的时候，播放的画面和声音是需要同步的，是能对得上的。相信你一定遇到过这种情况，就是看电视、电影或者直播的时候，人的口型和声音是对不上的，这样看起来会让人非常难受，这种问题就是音视频不同步导致的。因此做好音视频同步是非常重要的，当然也会有一定的难度，我们不妨先从一些基础知识讲起。</p><h2>PTS和DTS</h2><p>首先就是PTS和DTS这两个概念。其实，我们在讲音视频封装的时候已经提到过了。</p><p><strong>PTS表示的是视频帧的显示时间，DTS表示的是视频帧的解码时间。</strong>对于同一帧来说，DTS和PTS可能是不一样的。</p><p>为什么呢？主要的原因是B帧，因为B帧可以双向参考，可以参考后面的P帧，那么就需要将后面用作参考的P帧先编码或解码，然后才能进行B帧的编码和解码。所以就会导致一个现象，后面显示的帧需要先编码或解码，这样就有解码时间和显示时间不同的问题了。如果说没有B帧的话，只有I帧和P帧就不会有PTS和DTS不同的问题了。</p><!-- [[[read_end]]] --><p>具体如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/7c/86/7c23be3f62ba07f0ba61f1603afe5a86.jpeg?wh=1920x915\" alt=\"图片\"></p><h2>时间基</h2><p>另外一个很重要的概念是时间基。这是面试中经常会问到的知识点，你一定要掌握。</p><p>时间基是什么呢？很简单，<strong>它就是时间的单位</strong>。比如说，编程的时候我们经常使用ms（毫秒）这个时间单位，毫秒是1/1000秒，如果你用毫秒表示时间的话，时间基就是1/1000。再比如说RTP的时间戳，它的单位是1/90000秒，也就是说RTP时间戳的时间基是1/90000。意思是RTP的时间戳每增加1，就是指时间增加了1/90000秒。</p><p>而对于FLV封装，时间基是1/1000，意思是FLV里面的DTS和PTS的单位都是ms。MP4的话，时间基就是在box中的time_scale，是需要从box中读取解析出来的，不是固定的，具体可以参考<a href=\"https://time.geekbang.org/column/article/471074\">第14讲</a>。这就是时间基的概念。</p><h2>音视频同步的类型</h2><p>好，了解了基础知识以后，我们就可以开始学习音视频同步了。音视频同步主要的类型有三种：<strong>视频同步到音频、音频同步到视频、音频和视频都做调整同步</strong>。我们逐一看下。</p><p>首先，视频同步到音频是指音频按照自己的节奏播放，不需要调节。如果视频相对音频快了的话，就延长当前播放视频帧的时间，以此来减慢视频帧的播放速度。如果视频相对音频慢了的话，就加快视频帧的播放速度，甚至通过丢帧的方式来快速赶上音频。</p><p>这种方式是<strong>最常用的音视频同步方式</strong>，也是我们今天讲述的重点，后面我们就会以这种方式来深入探讨其原理。</p><p>其次，音频同步到视频是指视频按照自己的节奏播放，不需要调节。如果音频相对视频快了的话，就降低音频播放的速度，比如说重采样音频增加音频的采样点，延长音频的播放时间。如果音频相对视频慢了，就加快音频的播放速度，比如说重采样音频数据减少音频的采样点，缩短音频的播放时间。</p><p>这里需要格外注意的是，当音频的播放速度发生变化，音调也会改变，所以我们需要做到变速不变调，这个你可以参考另外一个专栏<a href=\"https://time.geekbang.org/column/intro/100098801?tab=intro\">《搞定音频技术》</a>，里面有详细的讲解。</p><p><strong>一般来说这种方式是不常用的</strong>，因为人耳的敏感度很高，相对于视频来说，音频的调整更容易被人耳发现。因此对音频做调节，要做好的话，难度要高于调节视频的速度，所以我们一般不太会使用这种同步方法。</p><p>最后一种是音频和视频都做调整，具体是指音频和视频都需要为音视频同步做出调整。比如说WebRTC里面的音视频同步就是音频和视频都做调整，如果前一次调节的是视频的话，下一次就调节音频，相互交替进行，<strong>整体的思路还是跟前面两种方法差不多</strong>。音频快了就将音频的速度调低一些或者将视频的速度调高一些，视频快了就将视频的速度调低一些或者将音频的速度调高一些。<strong>这种一般在非RTC场景也不怎么使用。</strong></p><h2>视频同步到音频</h2><p>那么接下来我们就深入学习一下最常用的音视频同步，即视频同步到音频，它是怎么工作的。这里我们<strong>参考FFplay的代码实现来讲解其原理</strong>。</p><p>首先，我们使用的时间戳是PTS，因为播放视频的时间我们应该使用显示时间。而且我们需要先通过时间基将对应的时间戳转换到常用的时间单位，一般是秒或者毫秒。</p><p>然后，我们有一个视频时钟和一个音频时钟来记录当前视频播放到的PTS和音频播放到的PTS。注意这里的PTS还不是实际视频帧的PTS或者音频帧的PTS，稍微有点区别。</p><p><strong>区别是什么呢？</strong>比如说一帧视频的PTS的100s，这一帧视频已经在渲染到屏幕上了，并且播放了0.02s的时间，那么当前的视频时钟是100.02s。也就是说视频时钟和音频时钟不仅仅需要考虑当前正在播放的帧的PTS，还要考虑当前正在播放的这一帧播放了多长时间，这个值才是最准确的时钟。</p><p>而视频时钟和音频时钟的差值就是不同步的时间差。这个时间差我们记为diff，表示了当前音频和视频的不同步程度。<strong>我们需要做的就是尽量调节来减小这个时间差的绝对值。</strong></p><p>那怎么调节呢？我们知道，我们可以通过计算得到当前正在播放的视频帧理论上应该播放多长时间（不考虑音视频同步的话）。计算方法就是用还没有播放但是紧接着要播放的帧的PTS减去正在播放的帧的PTS，我们记为last_duration。</p><p>如果说当前视频时钟相比音频时钟要大，也就是diff大于0，说明视频快了。这个时候我们就可以延长正在播放的视频帧的播放时间，也就是增加last_duration的值，是不是视频的播放画面就会慢下来了？因为后面的待播放帧需要等更长的时间才会播放，而音频的播放速度不变，是不是就相当于待播放的视频帧在等音频了？</p><p>反之，如果说当前的视频时钟相比音频时钟要小，也就是diff小于0，说明视频慢了。这个时候我们就缩短正在播放的视频帧的播放时间，也就是减小last_duration的值，是不是视频的播放画面就会加快速度渲染，就相当于待播放的视频帧在加快脚步赶上前面的音频了？</p><p>这里略有点绕，你可以停下来理一理，总之还是很好理解的。</p><p>那具体到底对last_duration加多少或者减多少呢？我们来看看FFplay的代码是怎么做的。</p><pre><code class=\"language-plain\">/* called to display each frame */\nstatic void video_refresh(void *opaque, double *remaining_time)\n{\n    ......\n    if (is-&gt;video_st) {\nretry:\n        if (frame_queue_nb_remaining(&amp;is-&gt;pictq) == 0) {\n            // nothing to do, no picture to display in the queue\n        } else {\n            double last_duration, duration, delay;\n            Frame *vp, *lastvp;\n            /* dequeue the picture */\n            lastvp = frame_queue_peek_last(&amp;is-&gt;pictq); // lastvp是指当前正在播放的视频帧\n            vp = frame_queue_peek(&amp;is-&gt;pictq); // vp是指接下来紧接着要播放的视频帧\n            if (vp-&gt;serial != is-&gt;videoq.serial) {\n                frame_queue_next(&amp;is-&gt;pictq);\n                goto retry;\n            }\n            if (lastvp-&gt;serial != vp-&gt;serial)\n                is-&gt;frame_timer = av_gettime_relative() / 1000000.0;\n            if (is-&gt;paused)\n                goto display;\n            /* compute nominal last_duration */\n            // last_duration是lastvp也就是当前正在播放的视频帧的理论应该播放的时间，\n            // last_duration = vp-&gt;pts - lastvp-&gt;pts。\n            last_duration = vp_duration(is, lastvp, vp); \n            \n            // compute_target_delay根据视频和音频的不同步情况，调整当前正在播放的视频帧的播放时间last_duration，\n            // 得到实际应该播放的时间delay。\n            // 这个函数是音视频同步的重点。\n            delay = compute_target_delay(last_duration, is);\n            time= av_gettime_relative()/1000000.0;\n            \n            // is-&gt;frame_timer是当前正在播放视频帧应该开始播放的时间，\n            // is-&gt;frame_timer + delay是当前正在播放视频帧经过音视频同步之后应该结束播放的时间，也就是下一帧应该开始播放的时间，\n            // 如果当前时间time还没有到当前播放视频帧的结束时间的话，继续播放当前帧，并计算当前帧还需要播放多长时间remaining_time。\n            if (time &lt; is-&gt;frame_timer + delay) {\n                *remaining_time = FFMIN(is-&gt;frame_timer + delay - time, *remaining_time);\n                goto display;\n            }\n            \n            // 如果当前正在播放的视频帧的播放时间已经足够了，那就播放下一帧，并更新is-&gt;frame_timer的值。\n            is-&gt;frame_timer += delay;\n            if (delay &gt; 0 &amp;&amp; time - is-&gt;frame_timer &gt; AV_SYNC_THRESHOLD_MAX)\n                is-&gt;frame_timer = time;\n            SDL_LockMutex(is-&gt;pictq.mutex);\n            if (!isnan(vp-&gt;pts))\n                // 用当前视频帧的pts更新视频时钟\n                update_video_pts(is, vp-&gt;pts, vp-&gt;pos, vp-&gt;serial);\n            SDL_UnlockMutex(is-&gt;pictq.mutex);\n            if (frame_queue_nb_remaining(&amp;is-&gt;pictq) &gt; 1) {\n                Frame *nextvp = frame_queue_peek_next(&amp;is-&gt;pictq);\n                // duration是当前要播放帧的理论播放时间\n                duration = vp_duration(is, vp, nextvp);\n                // 如果视频时钟落后音频时钟太多，视频帧队列里面待播放的帧的播放结束时间已经小于当前时间了的话，就直接丢弃掉，快速赶上音频时钟\n                if(!is-&gt;step &amp;&amp; (framedrop&gt;0 || (framedrop &amp;&amp; get_master_sync_type(is) != AV_SYNC_VIDEO_MASTER)) &amp;&amp; time &gt; is-&gt;frame_timer + duration){\n                    is-&gt;frame_drops_late++;\n                    frame_queue_next(&amp;is-&gt;pictq);\n                    goto retry;\n                }\n            }\n            ......\n            frame_queue_next(&amp;is-&gt;pictq);\n            is-&gt;force_refresh = 1;\n            if (is-&gt;step &amp;&amp; !is-&gt;paused)\n                stream_toggle_pause(is);\n        }\ndisplay:\n        /* display picture */\n        if (!display_disable &amp;&amp; is-&gt;force_refresh &amp;&amp; is-&gt;show_mode == SHOW_MODE_VIDEO &amp;&amp; is-&gt;pictq.rindex_shown)\n            video_display(is);\n    }\n    ......\n}\n\n</code></pre><p>我们再来看看最重要的函数compute_target_delay具体是怎么实现的。</p><pre><code class=\"language-plain\">static double compute_target_delay(double delay, VideoState *is)\n{\n    double sync_threshold, diff = 0;\n    /* update delay to follow master synchronisation source */\n    if (get_master_sync_type(is) != AV_SYNC_VIDEO_MASTER) {\n        /* if video is slave, we try to correct big delays by duplicating or deleting a frame */\n        // get_clock(&amp;is-&gt;vidclk)是获取到当前的视频时钟，视频时钟 = 当前正在播放帧的pts + 当前播放帧已经播放了的时间。\n        // get_master_clock(is)是获取到当前的音频时钟（在视频同步到音频方法的时候），\n       // 音频时钟 = 当前正在播放音频帧的播放结束时间 - 还未播放完的音频时长。\n       // diff等于视频时钟相比音频时钟的差值；\n       // diff &gt; 0 表示视频快了；\n       // diff &lt; 0 表示视频慢了。\n        diff = get_clock(&amp;is-&gt;vidclk) - get_master_clock(is);\n        /* skip or repeat frame. We take into account the delay to compute the threshold. I still don't know if it is the best guess */\n        // delay就是last_duration，也就是当前播放帧理论应该播放的时长。\n        // sync_threshold是视频时钟和音频时钟不同步的阈值，就取为delay也就是last_duration的值，并且在0.04到0.1秒之间。\n        // 如果-sync_threshold &lt; diff &lt; sync_threshold的话就不需要调整last_duration了。\n        // AV_SYNC_THRESHOLD_MIN是0.04秒，也就是40ms，\n        // AV_SYNC_THRESHOLD_MAX是0.1秒，也就是100ms，也就是说音视频同步中，最大不同步程度不能超过100ms。\n        sync_threshold = FFMAX(AV_SYNC_THRESHOLD_MIN, FFMIN(AV_SYNC_THRESHOLD_MAX, delay));\n        if (!isnan(diff) &amp;&amp; fabs(diff) &lt; is-&gt;max_frame_duration) {\n            \n            // 如果视频时钟比音频时钟慢了的时间超过了sync_threshold，则将delay（也就是last_duration）减小diff，加快视频的速度。\n            if (diff &lt;= -sync_threshold)\n                delay = FFMAX(0, delay + diff);\n                \n            // 如果视频时钟比音频时钟快了的时间超过了sync_threshold，并且delay（也就是last_duration）太长了，\n            // 大于0.1秒（AV_SYNC_FRAMEDUP_THRESHOLD）的话，\n            // 我们就直接将delay（也就是last_duration）增加一个diff，减慢视频的速度。\n            else if (diff &gt;= sync_threshold &amp;&amp; delay &gt; AV_SYNC_FRAMEDUP_THRESHOLD)\n                delay = delay + diff;\n                \n            // 如果视频时钟比音频时钟快了的时间超过了sync_threshold，并且delay（也就是last_duration）不怎么长的话，\n            // 我们就将delay（也就是last_duration）增加一倍，减慢视频的速度。\n            // 这里和前一个条件处理的不同就在于delay（也就是last_duration）是不是大于AV_SYNC_FRAMEDUP_THRESHOLD，\n            // 上面不直接将delay翻倍应该是delay太大，大于了0.1秒了，超过了不同步阈值的最大值0.1秒了，还不如diff有多少就加多少。\n            // 而这个条件里面delay翻倍而直接不增加diff的原因应该是一般帧率大概在20fps左右，last_duration差不多就0.05秒，\n            // 增加一倍也不会太大，毕竟音视频同步本来就是动态同步。\n            else if (diff &gt;= sync_threshold)\n                delay = 2 * delay;\n        }\n    }\n    av_log(NULL, AV_LOG_TRACE, \"video: delay=%0.3f A-V=%f\\n\",\n            delay, -diff);\n    return delay;\n}\n</code></pre><p>结合代码我们可以看出，音视频同步并不是完完全全同步的，而是<strong>通过调整正在播放的视频帧的播放时间来尽量达到一个动态的同步状态</strong>，这个状态里面的视频时钟和音频时钟并不是完全相等的，只是相差得比较少，人眼的敏感度看不出来而已。这就是音视频同步的原理。</p><h2>总结</h2><p>今天我们讲述了音视频同步的相关知识。音视频同步主要的任务就是使播放的声音和画面能够对齐同步，防止出现声音和画面对不上的问题。主要的类型有三种，分别是视频同步到音频、音频同步到视频、音频和视频都做调整同步。</p><p>视频同步到音频是指音频的播放速度不需要调节，只调节视频的播放速度。如果视频相对音频快了的话，就减慢视频的播放速度；如果视频相对音频慢了的话，就加快视频帧的播放速度。这种方式是最常用的音视频同步方式。</p><p>音频同步到视频是指视频的播放速度不需要调节，只调节音频的播放速度。如果音频相对视频快了的话，就降低音频播放的速度；如果音频相对视频慢了的话，就加快音频的播放速度。但是需要注意的是，音频速度变化会导致音调改变，所以要保证变速不变调。可由于人耳的敏感度很高，音频的调整更容易被发现，因此这种同步方式难度很高，所以一般不建议你使用它。</p><p>音频和视频都做调整是指音频和视频都需要为音视频的同步做出调整。比如说WebRTC里面的音视频同步就是音频和视频都做调整。整体的思路跟前面两种差不多，音频快了就将音频的速度调低一些或者将视频的速度调高一些，视频快了就将视频的速度调低一些或者将音频的速度调高一些。</p><p>之后，我们对视频同步到音频这种方式做了深入讲解。我们主要是通过计算视频时钟和音频时间之间的差值diff，来调节当前播放视频帧的播放时间last_duration。如果diff大于0，则加大last_duration的值，让视频速度慢下来，等等后面的音频；如果diff小于0，则减小last_duration的值，让视频播放的速度快起来，赶上前面的音频。这就是音视频同步的原理。</p><h2>思考题</h2><p>这节课我们开放讨论，谈谈你在这门课程中的收获吧？或者你还有哪些不懂的知识点都可以说给我听听，如果有必要的话我们还可以做一些针对性的讲解。</p><p>不妨大胆直言，我们畅快交流，留言区见！</p>","neighbors":{"left":{"article_title":"加餐｜基于纯浏览器的视频会议方案探究","id":471899},"right":{"article_title":"结束语｜信心比黄金更重要","id":473005}},"comments":[{"had_liked":false,"id":328123,"user_name":"springXu","can_delete":false,"product_type":"c1","uid":2064750,"ip_address":"","ucode":"F5DB0B963C894F","user_header":"","comment_is_top":false,"comment_ctime":1640564746,"is_pvip":true,"replies":[{"id":"120247","content":"好的，我有空了整理一下，给一张全貌图","user_name":"作者回复","comment_id":328123,"uid":"2744713","ip_address":"","utype":1,"ctime":1641791334,"user_name_real":"编辑"}],"discussion_count":4,"race_medal":0,"score":"27410368522","product_id":100098901,"comment_content":"收获最大的是那加餐篇。哈！那篇内容讲述了用现代浏览器提功的能力来实现音视频的方案。  十多年前浏览器播放音视频的方案主流是flash又或者是定义标签+插件的形式。<br>老师能不能来一篇课程全貌图。比如您开这课的思路，为什么需要这些内容呈现出来。<br>您在学习音视频中走过的路和遇上的坑？  对于要做音视频工作的人，需要哪些必备的知识以及建议是什么？","like_count":7,"discussions":[{"author":{"id":2744713,"avatar":"https://static001.geekbang.org/account/avatar/00/29/e1/89/2bc80aa1.jpg","nickname":"叫什么好呢","note":"","ucode":"2A4069A23DE3B2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544961,"discussion_content":"好的，我有空了整理一下，给一张全貌图","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1641791334,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2064750,"avatar":"","nickname":"springXu","note":"","ucode":"F5DB0B963C894F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2744713,"avatar":"https://static001.geekbang.org/account/avatar/00/29/e1/89/2bc80aa1.jpg","nickname":"叫什么好呢","note":"","ucode":"2A4069A23DE3B2","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":544996,"discussion_content":"谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641797919,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":544961,"ip_address":""},"score":544996,"extra":""}]},{"author":{"id":2854827,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/8f/ab/629e4d1b.jpg","nickname":"*佳","note":"","ucode":"6E2CA788AC0BB5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541830,"discussion_content":"https://blog.51cto.com/ticktick/1956269","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640576827,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2854827,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/8f/ab/629e4d1b.jpg","nickname":"*佳","note":"","ucode":"6E2CA788AC0BB5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541829,"discussion_content":" https://blog.51cto.com/ticktick/2046899","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640576727,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":328148,"user_name":"晓龙","can_delete":false,"product_type":"c1","uid":1004576,"ip_address":"","ucode":"78CDCEBD183D3A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/20/93c79f7c.jpg","comment_is_top":false,"comment_ctime":1640574671,"is_pvip":false,"replies":[{"id":"120254","content":"好的，之后有空的时候也写写。h265的编解码知识其实是在h264上在增加了很多编码工具。后面可以考虑写写。我也是第一次做专栏，刚开始做，谢谢你们的支持。","user_name":"作者回复","comment_id":328148,"uid":"2744713","ip_address":"","utype":1,"ctime":1641792129,"user_name_real":"编辑"}],"discussion_count":2,"race_medal":0,"score":"10230509263","product_id":100098901,"comment_content":"之前一直尝试学习音视频技术，但每次都是学了半吊子，学了忘，忘了就算，而且也不深入，老师的这堂课是我第一次比较系统的学习音视频技术，隔壁的《搞定音频技术》也在学习，非常感谢老师的付出，也非常珍惜这次学习机会。<br><br>下面我列出几点，我还想知道的：<br><br>1. 老师是否能以加餐的形式，介绍一下音频领域发展的状况，常用的库，技术，文章&#47;书籍参考，能给个大框架什么的，因为音视频这块涉及的领域还是非常多的，不同领域需要的技能树是什么？<br><br>2. 能否讲一些h265的编解码知识。<br><br>3. 非常希望老师能在开设一门实战性的课程。<br><br>以上，再次感谢老师的付出","like_count":2,"discussions":[{"author":{"id":2744713,"avatar":"https://static001.geekbang.org/account/avatar/00/29/e1/89/2bc80aa1.jpg","nickname":"叫什么好呢","note":"","ucode":"2A4069A23DE3B2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544968,"discussion_content":"好的，之后有空的时候也写写。h265的编解码知识其实是在h264上在增加了很多编码工具。后面可以考虑写写。我也是第一次做专栏，刚开始做，谢谢你们的支持。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1641792129,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1209653,"avatar":"https://static001.geekbang.org/account/avatar/00/12/75/35/a0c15ca8.jpg","nickname":"一頭蠻牛","note":"","ucode":"887E596A1DBF2D","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":2744713,"avatar":"https://static001.geekbang.org/account/avatar/00/29/e1/89/2bc80aa1.jpg","nickname":"叫什么好呢","note":"","ucode":"2A4069A23DE3B2","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":577283,"discussion_content":"恩师 你太牛逼了 在这短短的几十课 不仅帮我把在实践中得出的杂乱知识全部系统化让我理解 而且还学到了特别多有用知识开阔了视野 将以前的一些疑惑全部解开","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656003123,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":544968,"ip_address":""},"score":577283,"extra":""}]}]},{"had_liked":false,"id":328212,"user_name":"springXu","can_delete":false,"product_type":"c1","uid":2064750,"ip_address":"","ucode":"F5DB0B963C894F","user_header":"","comment_is_top":false,"comment_ctime":1640608505,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"5935575801","product_id":100098901,"comment_content":"我想表达的是这位极客时间老师的想法:   <br>我觉得很多人缺少的不是更高深的知识。而是缺少一个成长路线的鸟瞰图。不知道自己在什么位置，也不知道终点在哪里。埋着头学下去，学了很多东西但却不知道用在哪里。<br><br>能有学习路线导航图。<br><br>","like_count":1,"discussions":[{"author":{"id":2234883,"avatar":"https://static001.geekbang.org/account/avatar/00/22/1a/03/04d45545.jpg","nickname":"Ken","note":"","ucode":"313BE9ABE5DF96","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552892,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645627780,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350562,"user_name":"Wales","can_delete":false,"product_type":"c1","uid":1022691,"ip_address":"","ucode":"901ED75ADBF04C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9a/e3/0a094b50.jpg","comment_is_top":false,"comment_ctime":1657005260,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1657005260","product_id":100098901,"comment_content":"感谢老师开设这门课程，深受启发👍<br><br>对音视频不同步的原因不太理解：<br><br>播放音频，是以系统时钟为基准，根据音频数据的时间戳来进行播放，视频播放亦然。<br><br>既然二者参照的是同一个系统时钟，用的是同样的时间戳，那么理论上应该不会出现音视频不同步的问题吧？<br><br>然而实际应用中还是出现了音视频不同步的问题，是不是因为：<br>①解码端的运算性能有限，解码视频和音频的速度会出现波动，导致了音、视频各自的实际播放时间有差别。<br>②实时通信模式下，音频和视频数据到达接收端的时间不同，导致了后续解码和播放的时间不同。<br><br>如果理解不到位，请老师指导*^_^*","like_count":0},{"had_liked":false,"id":350318,"user_name":"idiot","can_delete":false,"product_type":"c1","uid":2526391,"ip_address":"","ucode":"D7A6E980B530B4","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/fcftgBsticCicEEkuzB0GTkHIocX62YVTSvnhR1c94sccj42lVaYXrmcZyhzUI3l9NcvuN1rXLhXt2eBrZZ0Tw7A/132","comment_is_top":false,"comment_ctime":1656803751,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1656803751","product_id":100098901,"comment_content":"增加 last_duration 的值后，具体是如何解码的呢？是有接口控制每一帧的播放时间吗，增加某些帧的播放时间，还是平均增加各个帧的播放时间？","like_count":0},{"had_liked":false,"id":332233,"user_name":"Chris Zou","can_delete":false,"product_type":"c1","uid":1897148,"ip_address":"","ucode":"B6DFC71C1DD8B7","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f2/bc/ffc7ad67.jpg","comment_is_top":false,"comment_ctime":1643102578,"is_pvip":false,"replies":[{"id":"124421","content":"录制不需要考虑同步吧，录制可能就是考虑音视频存储的时间戳顺序吧，ffmpeg的av_interleaved_write_frame接口里面会缓冲一部分音视频数据，自动做好排序","user_name":"作者回复","comment_id":332233,"uid":"2744713","ip_address":"","utype":1,"ctime":1648688289,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1643102578","product_id":100098901,"comment_content":"请问一下老师，对于云端录制来说，也需要考虑音视频录制时音画同步的技术难点，这个的同步原理和播放的同步原理是否有共同点？<br>如果不同的话，需要利用原理来保证音画同步，希望老师能具体讲一讲？","like_count":0,"discussions":[{"author":{"id":2744713,"avatar":"https://static001.geekbang.org/account/avatar/00/29/e1/89/2bc80aa1.jpg","nickname":"叫什么好呢","note":"","ucode":"2A4069A23DE3B2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559285,"discussion_content":"录制不需要考虑同步吧，录制可能就是考虑音视频存储的时间戳顺序吧，ffmpeg的av_interleaved_write_frame接口里面会缓冲一部分音视频数据，自动做好排序","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648688289,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":328637,"user_name":"tony","can_delete":false,"product_type":"c1","uid":1131361,"ip_address":"","ucode":"1160371C7F473E","user_header":"https://static001.geekbang.org/account/avatar/00/11/43/61/eeefa369.jpg","comment_is_top":false,"comment_ctime":1640823635,"is_pvip":true,"replies":[{"id":"119806","content":"因为不同场景的精度要求不一样吧。就像普通的时间单位也有us、ms、s一样的。","user_name":"作者回复","comment_id":328637,"uid":"2744713","ip_address":"","utype":1,"ctime":1640928850,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1640823635","product_id":100098901,"comment_content":"为什么会出现多个时间戳单位？大家不能统一吗","like_count":0,"discussions":[{"author":{"id":2744713,"avatar":"https://static001.geekbang.org/account/avatar/00/29/e1/89/2bc80aa1.jpg","nickname":"叫什么好呢","note":"","ucode":"2A4069A23DE3B2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542999,"discussion_content":"因为不同场景的精度要求不一样吧。就像普通的时间单位也有us、ms、s一样的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640928850,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":328429,"user_name":"paradise","can_delete":false,"product_type":"c1","uid":2354314,"ip_address":"","ucode":"1CA1101E0A3106","user_header":"https://static001.geekbang.org/account/avatar/00/23/ec/8a/4de35fb7.jpg","comment_is_top":false,"comment_ctime":1640737931,"is_pvip":false,"replies":[{"id":"120070","content":"是的","user_name":"作者回复","comment_id":328429,"uid":"2744713","ip_address":"","utype":1,"ctime":1641457530,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1640737931","product_id":100098901,"comment_content":"视音频同步原理就是通过比较视频和音频的播放时间来去动态调整视频当前显示帧的播放时间，以达到齐头并进的目的。","like_count":0,"discussions":[{"author":{"id":2744713,"avatar":"https://static001.geekbang.org/account/avatar/00/29/e1/89/2bc80aa1.jpg","nickname":"叫什么好呢","note":"","ucode":"2A4069A23DE3B2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544286,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641457530,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}