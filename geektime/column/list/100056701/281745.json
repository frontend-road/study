{"id":281745,"title":"13 | GEO是什么？还可以定义新的数据类型吗？","content":"<p>你好，我是蒋德钧。</p><p>在<a href=\"https://time.geekbang.org/column/article/268253\">第2讲</a>中，我们学习了Redis的5大基本数据类型：String、List、Hash、Set和Sorted Set，它们可以满足大多数的数据存储需求，但是在面对海量数据统计时，它们的内存开销很大，而且对于一些特殊的场景，它们是无法支持的。所以，Redis还提供了3种扩展数据类型，分别是Bitmap、HyperLogLog和GEO。前两种我在上节课已经重点介绍过了，今天，我再具体讲一讲GEO。</p><p>另外，我还会给你介绍开发自定义的新数据类型的基本步骤。掌握了自定义数据类型的开发方法，当你面临一些复杂的场景时，就不用受基本数据类型的限制，可以直接在Redis中增加定制化的数据类型，来满足你的特殊需求。</p><p>接下来，我们就先来了解下扩展数据类型GEO的实现原理和使用方法。</p><h2>面向LBS应用的GEO数据类型</h2><p>在日常生活中，我们越来越依赖搜索“附近的餐馆”、在打车软件上叫车，这些都离不开基于位置信息服务（Location-Based Service，LBS）的应用。LBS应用访问的数据是和人或物关联的一组经纬度信息，而且要能查询相邻的经纬度范围，GEO就非常适合应用在LBS服务的场景中，我们来看一下它的底层结构。</p><!-- [[[read_end]]] --><h3>GEO的底层结构</h3><p><strong>一般来说，在设计一个数据类型的底层结构时，我们首先需要知道，要处理的数据有什么访问特点</strong>。所以，我们需要先搞清楚位置信息到底是怎么被存取的。</p><p>我以叫车服务为例，来分析下LBS应用中经纬度的存取特点。</p><ol>\n<li>每一辆网约车都有一个编号（例如33），网约车需要将自己的经度信息（例如116.034579）和纬度信息（例如39.000452 ）发给叫车应用。</li>\n<li>用户在叫车的时候，叫车应用会根据用户的经纬度位置（例如经度116.054579，纬度39.030452），查找用户的附近车辆，并进行匹配。</li>\n<li>等把位置相近的用户和车辆匹配上以后，叫车应用就会根据车辆的编号，获取车辆的信息，并返回给用户。</li>\n</ol><p>可以看到，一辆车（或一个用户）对应一组经纬度，并且随着车（或用户）的位置移动，相应的经纬度也会变化。</p><p>这种数据记录模式属于一个key（例如车ID）对应一个value（一组经纬度）。当有很多车辆信息要保存时，就需要有一个集合来保存一系列的key和value。Hash集合类型可以快速存取一系列的key和value，正好可以用来记录一系列车辆ID和经纬度的对应关系，所以，我们可以把不同车辆的ID和它们对应的经纬度信息存在Hash集合中，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/c8/0e/c8d3f1951874da0d916ed51ccdce9e0e.jpg?wh=2461*1445\" alt=\"\"></p><p>同时，Hash类型的HSET操作命令，会根据key来设置相应的value值，所以，我们可以用它来快速地更新车辆变化的经纬度信息。</p><p>到这里，Hash类型看起来是一个不错的选择。但问题是，对于一个LBS应用来说，除了记录经纬度信息，还需要根据用户的经纬度信息在车辆的Hash集合中进行范围查询。一旦涉及到范围查询，就意味着集合中的元素需要有序，但Hash类型的元素是无序的，显然不能满足我们的要求。</p><p>我们再来看看使用<strong>Sorted Set类型</strong>是不是合适。</p><p>Sorted Set类型也支持一个key对应一个value的记录模式，其中，key就是Sorted Set中的元素，而value则是元素的权重分数。更重要的是，Sorted Set可以根据元素的权重分数排序，支持范围查询。这就能满足LBS服务中查找相邻位置的需求了。</p><p>实际上，GEO类型的底层数据结构就是用Sorted Set来实现的。咱们还是借着叫车应用的例子来加深下理解。</p><p>用Sorted Set来保存车辆的经纬度信息时，Sorted Set的元素是车辆ID，元素的权重分数是经纬度信息，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/a9/4e/a9a6bc78ea3bb652ef1404020dd2934e.jpg?wh=2356*1403\" alt=\"\"></p><p>这时问题来了，Sorted Set元素的权重分数是一个浮点数（float类型），而一组经纬度包含的是经度和纬度两个值，是没法直接保存为一个浮点数的，那具体该怎么进行保存呢？</p><p>这就要用到GEO类型中的GeoHash编码了。</p><h3>GeoHash的编码方法</h3><p>为了能高效地对经纬度进行比较，Redis采用了业界广泛使用的GeoHash编码方法，这个方法的基本原理就是“二分区间，区间编码”。</p><p>当我们要对一组经纬度进行GeoHash编码时，我们要先对经度和纬度分别编码，然后再把经纬度各自的编码组合成一个最终编码。</p><p>首先，我们来看下经度和纬度的单独编码过程。</p><p>对于一个地理位置信息来说，它的经度范围是[-180,180]。GeoHash编码会把一个经度值编码成一个N位的二进制值，我们来对经度范围[-180,180]做N次的二分区操作，其中N可以自定义。</p><p>在进行第一次二分区时，经度范围[-180,180]会被分成两个子区间：[-180,0)和[0,180]（我称之为左、右分区）。此时，我们可以查看一下要编码的经度值落在了左分区还是右分区。如果是落在左分区，我们就用0表示；如果落在右分区，就用1表示。这样一来，每做完一次二分区，我们就可以得到1位编码值。</p><p>然后，我们再对经度值所属的分区再做一次二分区，同时再次查看经度值落在了二分区后的左分区还是右分区，按照刚才的规则再做1位编码。当做完N次的二分区后，经度值就可以用一个N bit的数来表示了。</p><p>举个例子，假设我们要编码的经度值是116.37，我们用5位编码值（也就是N=5，做5次分区）。</p><p>我们先做第一次二分区操作，把经度区间[-180,180]分成了左分区[-180,0)和右分区[0,180]，此时，经度值116.37是属于右分区[0,180]，所以，我们用1表示第一次二分区后的编码值。</p><p>接下来，我们做第二次二分区：把经度值116.37所属的[0,180]区间，分成[0,90)和[90, 180]。此时，经度值116.37还是属于右分区[90,180]，所以，第二次分区后的编码值仍然为1。等到第三次对[90,180]进行二分区，经度值116.37落在了分区后的左分区[90, 135)中，所以，第三次分区后的编码值就是0。</p><p>按照这种方法，做完5次分区后，我们把经度值116.37定位在[112.5, 123.75]这个区间，并且得到了经度值的5位编码值，即11010。这个编码过程如下表所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/3c/f2/3cb007yy63c820d6dd2e4999608683f2.jpg?wh=2890*850\" alt=\"\"></p><p>对纬度的编码方式，和对经度的一样，只是纬度的范围是[-90，90]，下面这张表显示了对纬度值39.86的编码过程。</p><p><img src=\"https://static001.geekbang.org/resource/image/65/6d/65f41469866cb94963b4c9afbf2b016d.jpg?wh=2887*838\" alt=\"\"></p><p>当一组经纬度值都编完码后，我们再把它们的各自编码值组合在一起，组合的规则是：最终编码值的偶数位上依次是经度的编码值，奇数位上依次是纬度的编码值，其中，偶数位从0开始，奇数位从1开始。</p><p>我们刚刚计算的经纬度（116.37，39.86）的各自编码值是11010和10111，组合之后，第0位是经度的第0位1，第1位是纬度的第0位1，第2位是经度的第1位1，第3位是纬度的第1位0，以此类推，就能得到最终编码值1110011101，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/4a/87/4a8296e841f18ed4f3a554703ebd5887.jpg?wh=3000*1441\" alt=\"\"></p><p>用了GeoHash编码后，原来无法用一个权重分数表示的一组经纬度（116.37，39.86）就可以用1110011101这一个值来表示，就可以保存为Sorted Set的权重分数了。</p><p>当然，使用GeoHash编码后，我们相当于把整个地理空间划分成了一个个方格，每个方格对应了GeoHash中的一个分区。</p><p>举个例子。我们把经度区间[-180,180]做一次二分区，把纬度区间[-90,90]做一次二分区，就会得到4个分区。我们来看下它们的经度和纬度范围以及对应的GeoHash组合编码。</p><ul>\n<li>分区一：[-180,0)和[-90,0)，编码00；</li>\n<li>分区二：[-180,0)和[0,90]，编码01；</li>\n<li>分区三：[0,180]和[-90,0)，编码10；</li>\n<li>分区四：[0,180]和[0,90]，编码11。</li>\n</ul><p>这4个分区对应了4个方格，每个方格覆盖了一定范围内的经纬度值，分区越多，每个方格能覆盖到的地理空间就越小，也就越精准。我们把所有方格的编码值映射到一维空间时，相邻方格的GeoHash编码值基本也是接近的，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/2a/74/2a2a650086acf9700c0603a4be8ceb74.jpg?wh=2187*1761\" alt=\"\"></p><p>所以，我们使用Sorted Set范围查询得到的相近编码值，在实际的地理空间上，也是相邻的方格，这就可以实现LBS应用“搜索附近的人或物”的功能了。</p><p>不过，我要提醒你一句，有的编码值虽然在大小上接近，但实际对应的方格却距离比较远。例如，我们用4位来做GeoHash编码，把经度区间[-180,180]和纬度区间[-90,90]各分成了4个分区，一共16个分区，对应了16个方格。编码值为0111和1000的两个方格就离得比较远，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/0d/ba/0d64c9765ab72a50abef16a0275bc0ba.jpg?wh=2871*2250\" alt=\"\"></p><p>所以，为了避免查询不准确问题，我们可以同时查询给定经纬度所在的方格周围的4个或8个方格。</p><p>好了，到这里，我们就知道了，GEO类型是把经纬度所在的区间编码作为Sorted Set中元素的权重分数，把和经纬度相关的车辆ID作为Sorted Set中元素本身的值保存下来，这样相邻经纬度的查询就可以通过编码值的大小范围查询来实现了。接下来，我们再来聊聊具体如何操作GEO类型。</p><h3>如何操作GEO类型？</h3><p>在使用GEO类型时，我们经常会用到两个命令，分别是GEOADD和GEORADIUS。</p><ul>\n<li>GEOADD命令：用于把一组经纬度信息和相对应的一个ID记录到GEO类型集合中；</li>\n<li>GEORADIUS命令：会根据输入的经纬度位置，查找以这个经纬度为中心的一定范围内的其他元素。当然，我们可以自己定义这个范围。</li>\n</ul><p>我还是以叫车应用的车辆匹配场景为例，介绍下具体如何使用这两个命令。</p><p>假设车辆ID是33，经纬度位置是（116.034579，39.030452），我们可以用一个GEO集合保存所有车辆的经纬度，集合key是cars:locations。执行下面的这个命令，就可以把ID号为33的车辆的当前经纬度位置存入GEO集合中：</p><pre><code>GEOADD cars:locations 116.034579 39.030452 33\n</code></pre><p>当用户想要寻找自己附近的网约车时，LBS应用就可以使用GEORADIUS命令。</p><p>例如，LBS应用执行下面的命令时，Redis会根据输入的用户的经纬度信息（116.054579，39.030452 ），查找以这个经纬度为中心的5公里内的车辆信息，并返回给LBS应用。当然， 你可以修改“5”这个参数，来返回更大或更小范围内的车辆信息。</p><pre><code>GEORADIUS cars:locations 116.054579 39.030452 5 km ASC COUNT 10\n</code></pre><p>另外，我们还可以进一步限定返回的车辆信息。</p><p>比如，我们可以使用ASC选项，让返回的车辆信息按照距离这个中心位置从近到远的方式来排序，以方便选择最近的车辆；还可以使用COUNT选项，指定返回的车辆信息的数量。毕竟，5公里范围内的车辆可能有很多，如果返回全部信息，会占用比较多的数据带宽，这个选项可以帮助控制返回的数据量，节省带宽。</p><p>可以看到，使用GEO数据类型可以非常轻松地操作经纬度这种信息。</p><p>虽然我们有了5种基本类型和3种扩展数据类型，但是有些场景下，我们对数据类型会有特殊需求，例如，我们需要一个数据类型既能像Hash那样支持快速的单键查询，又能像Sorted Set那样支持范围查询，此时，我们之前学习的这些数据类型就无法满足需求了。那么，接下来，我就再向你介绍下Redis扩展数据类型的终极版——自定义的数据类型。这样，你就可以定制符合自己需求的数据类型了，不管你的应用场景怎么变化，你都不用担心没有合适的数据类型。</p><h2>如何自定义数据类型？</h2><p>为了实现自定义数据类型，首先，我们需要了解Redis的基本对象结构RedisObject，因为Redis键值对中的每一个值都是用RedisObject保存的。</p><p>我在<a href=\"https://time.geekbang.org/column/article/279649\">第11讲</a>中说过，RedisObject包括元数据和指针。其中，元数据的一个功能就是用来区分不同的数据类型，指针用来指向具体的数据类型的值。所以，要想开发新数据类型，我们就先来了解下RedisObject的元数据和指针。</p><h3>Redis的基本对象结构</h3><p>RedisObject的内部组成包括了type、encoding、lru和refcount 4个元数据，以及1个<code>*ptr</code>指针。</p><ul>\n<li>type：表示值的类型，涵盖了我们前面学习的五大基本类型；</li>\n<li>encoding：是值的编码方式，用来表示Redis中实现各个基本类型的底层数据结构，例如SDS、压缩列表、哈希表、跳表等；</li>\n<li>lru：记录了这个对象最后一次被访问的时间，用于淘汰过期的键值对；</li>\n<li>refcount：记录了对象的引用计数；</li>\n<li>*ptr：是指向数据的指针。</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/05/af/05c2d546e507d8a863c002e2173c71af.jpg?wh=1096*1521\" alt=\"\"></p><p>RedisObject结构借助<code>*ptr</code>指针，就可以指向不同的数据类型，例如，<code>*ptr</code>指向一个SDS或一个跳表，就表示键值对中的值是String类型或Sorted Set类型。所以，我们在定义了新的数据类型后，也只要在RedisObject中设置好新类型的type和encoding，再用<code>*ptr</code>指向新类型的实现，就行了。</p><h3>开发一个新的数据类型</h3><p>了解了RedisObject结构后，定义一个新的数据类型也就不难了。首先，我们需要为新数据类型定义好它的底层结构、type和encoding属性值，然后再实现新数据类型的创建、释放函数和基本命令。</p><p>接下来，我以开发一个名字叫作NewTypeObject的新数据类型为例，来解释下具体的4个操作步骤。</p><p><img src=\"https://static001.geekbang.org/resource/image/88/99/88702464f8bc80ea11b26ab157926199.jpg?wh=3000*505\" alt=\"\"></p><p><strong>第一步：定义新数据类型的底层结构</strong></p><p>我们用newtype.h文件来保存这个新类型的定义，具体定义的代码如下所示：</p><pre><code>struct NewTypeObject {\n    struct NewTypeNode *head; \n    size_t len; \n}NewTypeObject;\n</code></pre><p>其中，NewTypeNode结构就是我们自定义的新类型的底层结构。我们为底层结构设计两个成员变量：一个是Long类型的value值，用来保存实际数据；一个是<code>*next</code>指针，指向下一个NewTypeNode结构。</p><pre><code>struct NewTypeNode {\n    long value;\n    struct NewTypeNode *next;\n};\n</code></pre><p>从代码中可以看到，NewTypeObject类型的底层结构其实就是一个Long类型的单向链表。当然，你还可以根据自己的需求，把NewTypeObject的底层结构定义为其他类型。例如，如果我们想要NewTypeObject的查询效率比链表高，就可以把它的底层结构设计成一颗B+树。</p><p><strong>第二步：在RedisObject的type属性中，增加这个新类型的定义</strong></p><p>这个定义是在Redis的server.h文件中。比如，我们增加一个叫作OBJ_NEWTYPE的宏定义，用来在代码中指代NewTypeObject这个新类型。</p><pre><code>#define OBJ_STRING 0    /* String object. */\n#define OBJ_LIST 1      /* List object. */\n#define OBJ_SET 2       /* Set object. */\n#define OBJ_ZSET 3      /* Sorted set object. */\n…\n#define OBJ_NEWTYPE 7\n</code></pre><p><strong>第三步：开发新类型的创建和释放函数</strong></p><p>Redis把数据类型的创建和释放函数都定义在了object.c文件中。所以，我们可以在这个文件中增加NewTypeObject的创建函数createNewTypeObject，如下所示：</p><pre><code>robj *createNewTypeObject(void){\n   NewTypeObject *h = newtypeNew(); \n   robj *o = createObject(OBJ_NEWTYPE,h);\n   return o;\n}\n</code></pre><p>createNewTypeObject分别调用了newtypeNew和createObject两个函数，我分别来介绍下。</p><p>先说newtypeNew函数。它是用来为新数据类型初始化内存结构的。这个初始化过程主要是用zmalloc做底层结构分配空间，以便写入数据。</p><pre><code>NewTypeObject *newtypeNew(void){\n    NewTypeObject *n = zmalloc(sizeof(*n));\n    n-&gt;head = NULL;\n    n-&gt;len = 0;\n    return n;\n}\n</code></pre><p>newtypeNew函数涉及到新数据类型的具体创建，而Redis默认会为每个数据类型定义一个单独文件，实现这个类型的创建和命令操作，例如，t_string.c和t_list.c分别对应String和List类型。按照Redis的惯例，我们就把newtypeNew函数定义在名为t_newtype.c的文件中。</p><p>createObject是Redis本身提供的RedisObject创建函数，它的参数是数据类型的type和指向数据类型实现的指针<code>*ptr</code>。</p><p>我们给createObject函数中传入了两个参数，分别是新类型的type值OBJ_NEWTYPE，以及指向一个初始化过的NewTypeObjec的指针。这样一来，创建的RedisObject就能指向我们自定义的新数据类型了。</p><pre><code>robj *createObject(int type, void *ptr) {\n    robj *o = zmalloc(sizeof(*o));\n    o-&gt;type = type;\n    o-&gt;ptr = ptr;\n    ...\n    return o;\n}\n</code></pre><p>对于释放函数来说，它是创建函数的反过程，是用zfree命令把新结构的内存空间释放掉。</p><p><strong>第四步：开发新类型的命令操作</strong></p><p>简单来说，增加相应的命令操作的过程可以分成三小步：</p><p>1.在t_newtype.c文件中增加命令操作的实现。比如说，我们定义ntinsertCommand函数，由它实现对NewTypeObject单向链表的插入操作：</p><pre><code>void ntinsertCommand(client *c){\n  //基于客户端传递的参数，实现在NewTypeObject链表头插入元素\n}\n</code></pre><p>2.在server.h文件中，声明我们已经实现的命令，以便在server.c文件引用这个命令，例如：</p><pre><code>void ntinsertCommand(client *c)\n</code></pre><p>3.在server.c文件中的redisCommandTable里面，把新增命令和实现函数关联起来。例如，新增的ntinsert命令由ntinsertCommand函数实现，我们就可以用ntinsert命令给NewTypeObject数据类型插入元素了。</p><pre><code>struct redisCommand redisCommandTable[] = { \n...\n{&quot;ntinsert&quot;,ntinsertCommand,2,&quot;m&quot;,...}\n}\n</code></pre><p>此时，我们就完成了一个自定义的NewTypeObject数据类型，可以实现基本的命令操作了。当然，如果你还希望新的数据类型能被持久化保存，我们还需要在Redis的RDB和AOF模块中增加对新数据类型进行持久化保存的代码，我会在后面的加餐中再和你分享。</p><h2>小结</h2><p>这节课，我们学习了Redis的扩展数据类型GEO。GEO可以记录经纬度形式的地理位置信息，被广泛地应用在LBS服务中。GEO本身并没有设计新的底层数据结构，而是直接使用了Sorted Set集合类型。</p><p>GEO类型使用GeoHash编码方法实现了经纬度到Sorted Set中元素权重分数的转换，这其中的两个关键机制就是对二维地图做区间划分，以及对区间进行编码。一组经纬度落在某个区间后，就用区间的编码值来表示，并把编码值作为Sorted Set元素的权重分数。这样一来，我们就可以把经纬度保存到Sorted Set中，利用Sorted Set提供的“按权重进行有序范围查找”的特性，实现LBS服务中频繁使用的“搜索附近”的需求。</p><p>GEO属于Redis提供的扩展数据类型。扩展数据类型有两种实现途径：一种是基于现有的数据类型，通过数据编码或是实现新的操作的方式，来实现扩展数据类型，例如基于Sorted Set和GeoHash编码实现GEO，以及基于String和位操作实现Bitmap；另一种就是开发自定义的数据类型，具体的操作是增加新数据类型的定义，实现创建和释放函数，实现新数据类型支持的命令操作，建议你尝试着把今天学到的内容灵活地应用到你的工作场景中。</p><h2>每课一问</h2><p>到今天为止，我们已经学习Redis的5大基本数据类型和3个扩展数据类型，我想请你来聊一聊，你在日常的实践过程中，还用过Redis的其他数据类型吗？</p><p>欢迎在留言区分享你使用过的其他数据类型，我们一起来交流学习。如果你身边还有想要自己开发Redis的新数据类型的朋友，也希望你帮我把今天的内容分享给他/她。我们下节课见。</p>","comments":[{"had_liked":false,"id":246078,"user_name":"Kaito","can_delete":false,"product_type":"c1","uid":1020042,"ip_address":"","ucode":"79775FA35A95F2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","comment_is_top":false,"comment_ctime":1599159207,"is_pvip":true,"discussion_count":33,"race_medal":0,"score":"1418938366887","product_id":100056701,"comment_content":"Redis也可以使用List数据类型当做队列使用，一个客户端使用rpush生产数据到Redis中，另一个客户端使用lpop取出数据进行消费，非常方便。但要注意的是，使用List当做队列，缺点是没有ack机制和不支持多个消费者。没有ack机制会导致从Redis中取出的数据后，如果客户端处理失败了，取出的这个数据相当于丢失了，无法重新消费。所以使用List用作队列适合于对于丢失数据不敏感的业务场景，但它的优点是，因为都是内存操作，所以非常快和轻量。<br><br>而Redis提供的PubSub，可以支持多个消费者进行消费，生产者发布一条消息，多个消费者同时订阅消费。但是它的缺点是，如果任意一个消费者挂了，等恢复过来后，在这期间的生产者的数据就丢失了。PubSub只把数据发给在线的消费者，消费者一旦下线，就会丢弃数据。另一个缺点是，PubSub中的数据不支持数据持久化，当Redis宕机恢复后，其他类型的数据都可以从RDB和AOF中恢复回来，但PubSub不行，它就是简单的基于内存的多播机制。<br><br>之后Redis 5.0推出了Stream数据结构，它借鉴了Kafka的设计思想，弥补了List和PubSub的不足。Stream类型数据可以持久化、支持ack机制、支持多个消费者、支持回溯消费，基本上实现了队列中间件大部分功能，比List和PubSub更可靠。<br><br>另一个经常使用的是基于Redis实现的布隆过滤器，其底层实现利用的是String数据结构和位运算，可以解决业务层缓存穿透的问题，而且内存占用非常小，操作非常高效。","like_count":331,"discussions":[{"author":{"id":1411096,"avatar":"https://static001.geekbang.org/account/avatar/00/15/88/18/9744d5ec.jpg","nickname":"小超人","note":"","ucode":"0D8A433F3E3737","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339317,"discussion_content":"我是 list + lua 来实现消息的 ack 的。。\n","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1609602045,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1253384,"avatar":"https://static001.geekbang.org/account/avatar/00/13/20/08/bc06bc69.jpg","nickname":"Dovelol","note":"","ucode":"9B5DDF7720F307","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303735,"discussion_content":"楼主Redis实现的布隆过滤器具体方案能讲一下吗","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1599364847,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1253384,"avatar":"https://static001.geekbang.org/account/avatar/00/13/20/08/bc06bc69.jpg","nickname":"Dovelol","note":"","ucode":"9B5DDF7720F307","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303751,"discussion_content":"Redis官网，module模块有布隆过滤器的具体实现和使用。","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1599371150,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":303735,"ip_address":""},"score":303751,"extra":""},{"author":{"id":2277195,"avatar":"https://static001.geekbang.org/account/avatar/00/22/bf/4b/2acf59c1.jpg","nickname":"我","note":"","ucode":"49C9AFFB997A3F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1253384,"avatar":"https://static001.geekbang.org/account/avatar/00/13/20/08/bc06bc69.jpg","nickname":"Dovelol","note":"","ucode":"9B5DDF7720F307","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338514,"discussion_content":"还有布谷鸟过滤器和topk等都在一个插件了，redisbloom","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1609304781,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":303735,"ip_address":""},"score":338514,"extra":""}]},{"author":{"id":1879262,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/ac/de/68f35320.jpg","nickname":"小来子","note":"","ucode":"4EDAF31E43B211","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339436,"discussion_content":"课代表有利用Redis的pub/sub实现本地缓存的更新的经历吗？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1609670908,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1099321,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c6/39/0b837f63.jpg","nickname":"不過勝負","note":"","ucode":"A1CB36404DB884","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327395,"discussion_content":"lpoprpush  server端原子性操作  消费成功后 清除r中数据  否则轮询出来继续消费  避免丢失","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1605828940,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1103875,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d8/03/04af3e17.jpg","nickname":"张沛","note":"","ucode":"0EB2143BC61F1B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1099321,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c6/39/0b837f63.jpg","nickname":"不過勝負","note":"","ucode":"A1CB36404DB884","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573227,"discussion_content":"我也是这么用的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653281815,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":327395,"ip_address":""},"score":573227,"extra":""},{"author":{"id":1780797,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/2c/3d/0bd58aa4.jpg","nickname":"Em","note":"","ucode":"32012A5C603C8A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1099321,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c6/39/0b837f63.jpg","nickname":"不過勝負","note":"","ucode":"A1CB36404DB884","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576890,"discussion_content":"这样锁严重吧, 一直锁到业务确认消费成功","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655825485,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":327395,"ip_address":""},"score":576890,"extra":""}]},{"author":{"id":1049017,"avatar":"https://static001.geekbang.org/account/avatar/00/10/01/b9/73435279.jpg","nickname":"学习学个屁","note":"","ucode":"DF2D61E6FB2FCE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308232,"discussion_content":"其实可以在编码层面解决这种没消费的问题,如果没有消费,或者出异常了,再插入到队列尾部...  但是这样子只适合对数据实时性要求不高的数据;\n多个消费的话,编码层面也可以复制给多个消费者,酱紫; 还是看场景,毕竟redis不是专门用来做消息队列的.\n\n课代表nb...","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1600872799,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1768852,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/fd/94/8704d2b0.jpg","nickname":"spoofer","note":"","ucode":"6723F64ACC3F27","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1049017,"avatar":"https://static001.geekbang.org/account/avatar/00/10/01/b9/73435279.jpg","nickname":"学习学个屁","note":"","ucode":"DF2D61E6FB2FCE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":323126,"discussion_content":"ack机制跟这个自己消费失败插入到尾部是不一样，因为处理期间可能出现问题而丢失，不过我很多数据不敏感的场景都这样用的，懒得mq。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604888551,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":308232,"ip_address":""},"score":323126,"extra":""}]},{"author":{"id":1441606,"avatar":"https://static001.geekbang.org/account/avatar/00/15/ff/46/7e4039ea.jpg","nickname":"伟平","note":"","ucode":"2D3E55238FC8B3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305039,"discussion_content":"楼主有自己的博客么","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1599747635,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303456,"discussion_content":"请教下课代表啊，Redis 键值对中的每一个值都是用 RedisObject 保存\n-------------------------\n那么 redis 的键用什么保存的呢？ 也是 RedisObject 吗？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1599273544,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1653021,"avatar":"","nickname":"Geek_013147","note":"","ucode":"CDA474EC7DE06C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"discussion":{"id":307440,"discussion_content":"是的，所有对象都是redisObject","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1600651486,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":303456,"ip_address":""},"score":307440,"extra":""},{"author":{"id":1013669,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/77/a5/c5ae871d.jpg","nickname":"zenk","note":"","ucode":"B235D5EBCF49BC","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1653021,"avatar":"","nickname":"Geek_013147","note":"","ucode":"CDA474EC7DE06C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328618,"discussion_content":"好像不是，看到预定义的dictType有sds作为key的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606195574,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":307440,"ip_address":""},"score":328618,"extra":""},{"author":{"id":1584786,"avatar":"https://static001.geekbang.org/account/avatar/00/18/2e/92/e1c38ca6.jpg","nickname":"KamTo  Hung","note":"","ucode":"00D5A6479DB784","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"discussion":{"id":347146,"discussion_content":"是的，也是RedisObject。key指针指向的所使用的数据结构是sds。对于所有key-value，key都是RedisObject指向sds数据结构。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1612164366,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":303456,"ip_address":""},"score":347146,"extra":""}]},{"author":{"id":1645430,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKiauonyMORA2s43W7mogGDH4WYjW0gBJtYmUa9icTB6aMPGqibicEKlLoQmLKLWEctwHzthbTZkKR20w/132","nickname":"Spring4J","note":"","ucode":"06F056085A2564","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303207,"discussion_content":"一个list不支持多个消费者，多个list是不是就支持多消费者了老哥","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1599185893,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1645430,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKiauonyMORA2s43W7mogGDH4WYjW0gBJtYmUa9icTB6aMPGqibicEKlLoQmLKLWEctwHzthbTZkKR20w/132","nickname":"Spring4J","note":"","ucode":"06F056085A2564","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303214,"discussion_content":"准确的说是，不支持多个消费者消费同一批数据。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1599187921,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":303207,"ip_address":""},"score":303214,"extra":""},{"author":{"id":2165529,"avatar":"","nickname":"Geek_529ac5","note":"","ucode":"5B17D44B9A33E0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":303564,"discussion_content":"应该是不同的消费者组吧","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1599299168,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":303214,"ip_address":""},"score":303564,"extra":""},{"author":{"id":2996016,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/b7/30/c1e4f5b5.jpg","nickname":"微微超级丹💫","note":"","ucode":"ABEFC2FA673BE4","race_medal":3,"user_type":1,"is_pvip":false},"reply_author":{"id":1645430,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKiauonyMORA2s43W7mogGDH4WYjW0gBJtYmUa9icTB6aMPGqibicEKlLoQmLKLWEctwHzthbTZkKR20w/132","nickname":"Spring4J","note":"","ucode":"06F056085A2564","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589475,"discussion_content":"应该是 List 不支持多个消费者消费同一条消息，但是多个消费者可以消费一个List中的不同消息","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665027942,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":303207,"ip_address":"北京"},"score":589475,"extra":""}]},{"author":{"id":1281857,"avatar":"https://static001.geekbang.org/account/avatar/00/13/8f/41/307555ff.jpg","nickname":"伊诺","note":"","ucode":"709E038DD01C17","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573498,"discussion_content":"布隆过滤器，使用场景可以举例么。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653466434,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2649276,"avatar":"https://static001.geekbang.org/account/avatar/00/28/6c/bc/f751786b.jpg","nickname":"Leo","note":"","ucode":"CEBAD9CDCFC2A3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556503,"discussion_content":"布隆过滤器底层不依然是bitmap吗，你说错了吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647403722,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2948634,"avatar":"","nickname":"Geek_275fa9","note":"","ucode":"E08AB55F59EF59","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2649276,"avatar":"https://static001.geekbang.org/account/avatar/00/28/6c/bc/f751786b.jpg","nickname":"Leo","note":"","ucode":"CEBAD9CDCFC2A3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557816,"discussion_content":"bitmap的底层就是 string ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1647968903,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":556503,"ip_address":""},"score":557816,"extra":""}]},{"author":{"id":2109265,"avatar":"https://static001.geekbang.org/account/avatar/00/20/2f/51/6cde3858.jpg","nickname":"隔壁老王","note":"","ucode":"F5A4A33BC2474D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328412,"discussion_content":"刚百度了一下发现geoadd 命令的member参数，也就是对应的value，如果存在，就会更新，","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606135832,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":2542376,"avatar":"https://static001.geekbang.org/account/avatar/00/26/cb/28/21a8a29e.jpg","nickname":"夏天","note":"","ucode":"5F224DDAC94DFF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2109265,"avatar":"https://static001.geekbang.org/account/avatar/00/20/2f/51/6cde3858.jpg","nickname":"隔壁老王","note":"","ucode":"F5A4A33BC2474D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369703,"discussion_content":"和 sortset 一样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619140145,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":328412,"ip_address":""},"score":369703,"extra":""},{"author":{"id":2354537,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKHTfq9c3GG4DdJtHnvyib3eX7Q5IzqQ0U65vpqsibyJzwsROUtEOEhWl58X1aaQ0R3dNIibUYyD6PyQ/132","nickname":"Geek_d77d44","note":"","ucode":"DD8C35E40AD976","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2542376,"avatar":"https://static001.geekbang.org/account/avatar/00/26/cb/28/21a8a29e.jpg","nickname":"夏天","note":"","ucode":"5F224DDAC94DFF","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":371015,"discussion_content":"zadd 并不行，可以用zincrby","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619610964,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":369703,"ip_address":""},"score":371015,"extra":""},{"author":{"id":1780797,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/2c/3d/0bd58aa4.jpg","nickname":"Em","note":"","ucode":"32012A5C603C8A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2354537,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKHTfq9c3GG4DdJtHnvyib3eX7Q5IzqQ0U65vpqsibyJzwsROUtEOEhWl58X1aaQ0R3dNIibUYyD6PyQ/132","nickname":"Geek_d77d44","note":"","ucode":"DD8C35E40AD976","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576891,"discussion_content":"zadd可以更新value的分数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655825804,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":371015,"ip_address":""},"score":576891,"extra":""}]},{"author":{"id":2109265,"avatar":"https://static001.geekbang.org/account/avatar/00/20/2f/51/6cde3858.jpg","nickname":"隔壁老王","note":"","ucode":"F5A4A33BC2474D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328408,"discussion_content":"问一下楼主，作者讲的geo类型的数据，是怎么经纬度对应的那个value的呀，又或者说，某一个value的位置发生了变化，我该怎么更新呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606135600,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2568744,"avatar":"https://static001.geekbang.org/account/avatar/00/27/32/28/078ec46c.jpg","nickname":"top啦它","note":"","ucode":"1F2656293D1B9F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2109265,"avatar":"https://static001.geekbang.org/account/avatar/00/20/2f/51/6cde3858.jpg","nickname":"隔壁老王","note":"","ucode":"F5A4A33BC2474D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378894,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623493396,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":328408,"ip_address":""},"score":378894,"extra":""},{"author":{"id":1253652,"avatar":"https://static001.geekbang.org/account/avatar/00/13/21/14/423a821f.jpg","nickname":"Steven","note":"","ucode":"3FE64459842015","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2109265,"avatar":"https://static001.geekbang.org/account/avatar/00/20/2f/51/6cde3858.jpg","nickname":"隔壁老王","note":"","ucode":"F5A4A33BC2474D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385041,"discussion_content":"加 CH 参数即可更新，比如： GEOADD cars:locations CH 116.034579 39.030459 33","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1626860248,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":328408,"ip_address":""},"score":385041,"extra":""}]},{"author":{"id":1547776,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/wqu0v0PZUmPfBgOAMA8J54zsC8HbblbpibMRbGepLErgg70E81fKQn7oaoiaqNszibxrC5XyAjBSJXnGYialicWvQeQ/132","nickname":"Geek_c79c5c","note":"","ucode":"0E15A545F30A63","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327973,"discussion_content":"学到了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606032398,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1325816,"avatar":"https://static001.geekbang.org/account/avatar/00/14/3a/f8/c1a939e7.jpg","nickname":"君哥聊技术","note":"","ucode":"2C9A22BCE4C79E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303176,"discussion_content":"厉害👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599178987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1284487,"avatar":"","nickname":"啊啊啊","note":"","ucode":"81B03655CFFE98","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1325816,"avatar":"https://static001.geekbang.org/account/avatar/00/14/3a/f8/c1a939e7.jpg","nickname":"君哥聊技术","note":"","ucode":"2C9A22BCE4C79E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375798,"discussion_content":"哈哈 关注你公众号了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621850710,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":303176,"ip_address":""},"score":375798,"extra":""}]}]},{"had_liked":false,"id":248845,"user_name":"注定非凡","can_delete":false,"product_type":"c1","uid":1113597,"ip_address":"","ucode":"80673056E131B7","user_header":"https://static001.geekbang.org/account/avatar/00/10/fd/fd/326be9bb.jpg","comment_is_top":false,"comment_ctime":1600332913,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"263593337969","product_id":100056701,"comment_content":"1，作者讲了什么？<br>    Redis的三种扩展数据类型之一：GEO，一种可以实现LBS服务的数据结构<br><br>2，作者是怎么把这事给讲明白的？<br>    1，提出一个真问题：打车软件是怎么基于位置提供服务的<br>    2，通过GEO原理讲解，说明GEO为什么可以<br><br>3，作者为了把这事给讲清楚，讲了那些要点？有哪些亮点？<br>    1，亮点1：GEO的原理，这个是我之前所不知道的，学完后对GEO有了一些认知<br>    2，亮点2：Redis居然支持自定义数据存储结构，这打开了我的眼界<br>    3，要点1：GEO的底层实现，是sortSet，元素是车辆信息，权重是车辆经纬度转换过来的float值<br>    4，要点2：GEOHash编码，基本原理“二分区间，区间编码”（二分法的应用，将一个值编码成N位的二进制值）<br>    5，要点3：GEO使用GEOHash编码后，将经纬度，按照纬奇经偶位分别填充组合，得到一个车辆的经纬度编码值<br>    6，要点4：GEOHash编码实现的效果是将一个空间分割成为一个个方块，可以实现LBS服务（但编码值相近，不一定位置相近）<br><br>4，对于作者所讲，我有哪些发散性思考？<br>   ①：这一篇讲了通过Redis的GEO数据类型可以实现LBS服务，让我体验到了算法的巧妙应用带来的巨大便利（这应是科技让生活更美好的实例）。<br>   ②：不过，我觉得最大的惊喜在于作者介绍了如何自定义一种新的数据类型，虽然我尚未掌握开发新数据类型的能力。<br>   ③：通过作者的讲解，拓宽了我了见识，这让我体验到了购买专栏的价值（如果都是搜索引擎能解决的事，何必买专栏）。<br>   ④：作者细致的讲解开发过程，也让我对Redis的数据结构，RedisObjecti有了进一步认识（面向对象等）<br><br>5，在未来的那些场景中，我能够使用它？<br>    redis采用的GEOHash算法，貌似可以协助我们处理分省的一些业务<br><br>6，留言区的收获","like_count":62,"discussions":[{"author":{"id":1070901,"avatar":"https://static001.geekbang.org/account/avatar/00/10/57/35/0e66265d.jpg","nickname":"Jason","note":"","ucode":"BFBA1C05A2921A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333560,"discussion_content":"学霸的套路","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607563820,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":246169,"user_name":"马以","can_delete":false,"product_type":"c1","uid":1344431,"ip_address":"","ucode":"3FEA06CA14DE28","user_header":"https://static001.geekbang.org/account/avatar/00/14/83/af/1cb42cd3.jpg","comment_is_top":false,"comment_ctime":1599197065,"is_pvip":false,"discussion_count":7,"race_medal":0,"score":"160512987017","product_id":100056701,"comment_content":"现在很多公司如果没有特殊场景，都是一个String走天下～","like_count":38,"discussions":[{"author":{"id":1641326,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJDdmHm6txEVtEXEDibSdIsRLEpghOoMt2kfZHetY9QLWHygicKCfhVoYiaylAZJoXbcCMBhXqMF4icgw/132","nickname":"洗洗睡吧","note":"","ucode":"DE7F8B4CA512F6","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385301,"discussion_content":"是的，我们把对象转json,用String存","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1626973242,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1164531,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c4/f3/92f654f1.jpg","nickname":"Bug? Feature!","note":"","ucode":"F8FA8A0094FBA0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336487,"discussion_content":"看见老哥了，哈哈！","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1608607043,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1388092,"avatar":"https://static001.geekbang.org/account/avatar/00/15/2e/3c/eae43616.jpg","nickname":"sid","note":"","ucode":"3D1F9169A19D29","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310141,"discussion_content":"哪来做缓存用，只用了String","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1601641795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2786848,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/86/20/1f1221f5.jpg","nickname":"听风","note":"","ucode":"EC2EB012E8DB6D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588715,"discussion_content":"签到领礼品可以用hash啊\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1664012550,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1811277,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/a3/4d/59390ba9.jpg","nickname":"排骨","note":"","ucode":"A413CF46211E1F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582048,"discussion_content":"我们也是一个string万金油","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659164978,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"陕西"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2161554,"avatar":"https://static001.geekbang.org/account/avatar/00/20/fb/92/17923e19.jpg","nickname":"团圆丁","note":"","ucode":"23DD0146F43C7D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580045,"discussion_content":"所以memcache才一直存在着......","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657849027,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2806043,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLBFkSq1oiaEMRjtyyv4ZpCI0OuaSsqs04ODm0OkZF6QhsAh3SvqhxibS2n7PLAVZE3QRSn5Hic0DyXg/132","nickname":"ddh","note":"","ucode":"8E852375365F16","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545800,"discussion_content":"哈哈哈， 真实了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642053399,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":256549,"user_name":"范闲","can_delete":false,"product_type":"c1","uid":1073125,"ip_address":"","ucode":"F21FD7DF6BA53C","user_header":"https://static001.geekbang.org/account/avatar/00/10/5f/e5/54325854.jpg","comment_is_top":false,"comment_ctime":1603676232,"is_pvip":false,"replies":[{"id":"98028","content":"是的，布隆过滤器可以帮助判断数据是否在缓存中。","user_name":"作者回复","user_name_real":"蒋德钧","uid":"1609687","ctime":1609084408,"ip_address":"","comment_id":256549,"utype":1}],"discussion_count":1,"race_medal":0,"score":"91797989448","product_id":100056701,"comment_content":"BloomFilter用的比较多。缓存穿透可以用这个防止","like_count":22,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":508050,"discussion_content":"是的，布隆过滤器可以帮助判断数据是否在缓存中。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609084408,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":246585,"user_name":"迷迷徒","can_delete":false,"product_type":"c1","uid":2107618,"ip_address":"","ucode":"5B65708B7E2DC1","user_header":"https://static001.geekbang.org/account/avatar/00/20/28/e2/fbf76ae6.jpg","comment_is_top":false,"comment_ctime":1599413947,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"61728956091","product_id":100056701,"comment_content":"geohash真是妙呀","like_count":15,"discussions":[{"author":{"id":2948634,"avatar":"","nickname":"Geek_275fa9","note":"","ucode":"E08AB55F59EF59","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557818,"discussion_content":"妙","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647969085,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":247407,"user_name":"Geek2014","can_delete":false,"product_type":"c1","uid":2028957,"ip_address":"","ucode":"9EB356D8DF287E","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f5/9d/104bb8ea.jpg","comment_is_top":false,"comment_ctime":1599702766,"is_pvip":false,"discussion_count":10,"race_medal":0,"score":"44549375726","product_id":100056701,"comment_content":"想问一个扩展的问题，还请老师解答。<br>因为车辆是不断移动的，那如何维护车辆位置的GEOHASH呢。","like_count":11,"discussions":[{"author":{"id":1306092,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ61zTDmLk7IhLJn6seBPOwsVaKIWUWaxk5YmsdYBZUOYMQCsyl9iaQVSg9U5qJVLLOCFUoLUuYnRA/132","nickname":"fjpcode","note":"","ucode":"C32C5E3ECB9A90","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337528,"discussion_content":"之前做个一个LBS类的业务实现原理是移动超过一定距离就上报更新一次位置信息","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1608963608,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2278542,"avatar":"https://static001.geekbang.org/account/avatar/00/22/c4/8e/89f8d85e.jpg","nickname":"笑 容","note":"","ucode":"9E72450E9719ED","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1306092,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ61zTDmLk7IhLJn6seBPOwsVaKIWUWaxk5YmsdYBZUOYMQCsyl9iaQVSg9U5qJVLLOCFUoLUuYnRA/132","nickname":"fjpcode","note":"","ucode":"C32C5E3ECB9A90","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540405,"discussion_content":"这个可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640053813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":337528,"ip_address":""},"score":540405,"extra":""}]},{"author":{"id":1634466,"avatar":"https://static001.geekbang.org/account/avatar/00/18/f0/a2/e5d7dfd8.jpg","nickname":"老夫子穿袈裟","note":"","ucode":"3238BDAE0CDAF1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550598,"discussion_content":"之前接触过顺风车的项目，计划是采用前端长连接每5秒上报一次位置信息","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644634324,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2350812,"avatar":"","nickname":"xyzker","note":"","ucode":"CC897FFF51A1A9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550342,"discussion_content":"长连接定时上报更新","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644488599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1206229,"avatar":"https://static001.geekbang.org/account/avatar/00/12/67/d5/1b26b725.jpg","nickname":"Gopher","note":"","ucode":"3C1F9012BB486D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341260,"discussion_content":"这个肯定是前端实时上报数据啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610364740,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1337717,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJfySwRreOLI6feibPQ6nAnkvsLUmibSDYxvChxXyDQanGGpibYBgACO6ibUbYTLJ4Uvoc6MlyjibIf9Wg/132","nickname":"Bigchen","note":"","ucode":"224A5FA18ABA96","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1206229,"avatar":"https://static001.geekbang.org/account/avatar/00/12/67/d5/1b26b725.jpg","nickname":"Gopher","note":"","ucode":"3C1F9012BB486D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":354685,"discussion_content":"分不同场景吧～物流运输车辆可以定时～滴滴打车这种场景可能就实时了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615335586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":341260,"ip_address":""},"score":354685,"extra":""}]},{"author":{"id":1049017,"avatar":"https://static001.geekbang.org/account/avatar/00/10/01/b9/73435279.jpg","nickname":"学习学个屁","note":"","ucode":"DF2D61E6FB2FCE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308234,"discussion_content":"同问~ 猜测应该定时向服务发送吧,或者车辆距离首次位置或超过多少距离后更新或者删除吧.... ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600873265,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":2140871,"avatar":"","nickname":"Geek_77da6a","note":"","ucode":"2E7102E0005A42","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1049017,"avatar":"https://static001.geekbang.org/account/avatar/00/10/01/b9/73435279.jpg","nickname":"学习学个屁","note":"","ucode":"DF2D61E6FB2FCE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310855,"discussion_content":"会不会一个长连接 一直保持链接  事实刷新位置","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602079076,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":308234,"ip_address":""},"score":310855,"extra":""},{"author":{"id":1216284,"avatar":"https://static001.geekbang.org/account/avatar/00/12/8f/1c/1c728388.jpg","nickname":"皮卡皮卡","note":"","ucode":"D440EEC7301C76","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2140871,"avatar":"","nickname":"Geek_77da6a","note":"","ucode":"2E7102E0005A42","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327562,"discussion_content":"导航时应该会有长链接实时刷新，其他场景则是定时获取。当然并非行业从业人员只是猜测这样做","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605862723,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":310855,"ip_address":""},"score":327562,"extra":""},{"author":{"id":1690758,"avatar":"https://static001.geekbang.org/account/avatar/00/19/cc/86/c7f71b1c.jpg","nickname":"tiptok","note":"","ucode":"EAB2145853774F","race_medal":2,"user_type":1,"is_pvip":true},"reply_author":{"id":1216284,"avatar":"https://static001.geekbang.org/account/avatar/00/12/8f/1c/1c728388.jpg","nickname":"皮卡皮卡","note":"","ucode":"D440EEC7301C76","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":351226,"discussion_content":"没错哦，车载终端采集完定时上报给系统，通过约定的协议，走tcp/udp等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614180605,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":327562,"ip_address":""},"score":351226,"extra":""}]}]},{"had_liked":false,"id":246311,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1599273516,"is_pvip":true,"replies":[{"id":"90537","content":"是的，Redis的键也是用RedisObject保存的。","user_name":"作者回复","user_name_real":"蒋德钧","uid":"1609687","ctime":1599349374,"ip_address":"","comment_id":246311,"utype":1}],"discussion_count":2,"race_medal":1,"score":"40253979180","product_id":100056701,"comment_content":"Redis 键值对中的每一个值都是用 RedisObject 保存<br>-------------------------<br>那么 redis 的键用什么保存的呢？ 也是 RedisObject 吗？","like_count":10,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505109,"discussion_content":"是的，Redis的键也是用RedisObject保存的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599349374,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1435733,"avatar":"https://static001.geekbang.org/account/avatar/00/15/e8/55/92f82281.jpg","nickname":"MClink","note":"","ucode":"F479190923355C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303572,"discussion_content":"键都是 string 类型，肯定也是这样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599300710,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":246697,"user_name":"小文同学","can_delete":false,"product_type":"c1","uid":1001893,"ip_address":"","ucode":"48F2AEB989C12A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/a5/e4c1c2d4.jpg","comment_is_top":false,"comment_ctime":1599456009,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"31664227081","product_id":100056701,"comment_content":"1、作者讲了什么？<br>GEO 的数据结构原理，及特点。还有编写 Redis 新数据结构和命令的步骤（此部分我没细看）。<br>2、作者是怎么把事情说明白的？<br>通过利用 LBS(Location-Based Service)  位置信息服务 来说引入 GEO 这个数据结构如何编码地理位置的经纬度信息，写成一个数值，再利用 Sorted Set 进行存储。<br>3、为了讲明白，作者讲了哪些要点？哪些是亮点？<br>举例子说明，Hash、Sorted Set 如何无法满足 LBS 服务；<br>讲述 Geo Hash 的过程（二分区间，区间编码）：<br>将一个数值通过二分拆解，形成一个二叉树结构，得到每层的 bool 值，从而通过N位 bit 对一个数值进行存储。N 越大，精度越高；<br>将经纬度，分别按照 step1 获得两个 N 位bit，在进行交叉组合，得到一个值，就是 Geo Hash 值。<br>这个 Geo Hash 值是连续的，但位置不一定是连续的。故需要计算多个经纬度所在的方格，在求得邻居节点的较低，已提高 LBS 准确率。<br>4、对于作者所讲，我有哪些发散性思考？<br>车辆的位置信息已经存储在 GEO 集合中了，投入一个 GEO 的值，如何获得它周围的范围值呢？<br>5、在未来哪些场景，我可以使用它？<br>LBS 服务可以考虑实现它，已和公司的一个上司沟通个，大家就这个问题有了共识。nice","like_count":7,"discussions":[{"author":{"id":1388092,"avatar":"https://static001.geekbang.org/account/avatar/00/15/2e/3c/eae43616.jpg","nickname":"sid","note":"","ucode":"3D1F9169A19D29","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310138,"discussion_content":"非凡哥2号","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1601641318,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1001893,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/49/a5/e4c1c2d4.jpg","nickname":"小文同学","note":"","ucode":"48F2AEB989C12A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1388092,"avatar":"https://static001.geekbang.org/account/avatar/00/15/2e/3c/eae43616.jpg","nickname":"sid","note":"","ucode":"3D1F9169A19D29","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310249,"discussion_content":"哈哈哈，确实是一个很好的笔记","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1601708811,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":310138,"ip_address":""},"score":310249,"extra":""}]}]},{"had_liked":false,"id":246730,"user_name":"晖","can_delete":false,"product_type":"c1","uid":1498664,"ip_address":"","ucode":"D12C7EBDCD4236","user_header":"https://static001.geekbang.org/account/avatar/00/16/de/28/acb248d6.jpg","comment_is_top":false,"comment_ctime":1599466857,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"18779336041","product_id":100056701,"comment_content":"严格来说，根据Redis文档: &quot;There are limits to the coordinates that can be indexed: areas very near to the poles are not indexable. Valid latitudes are from -85.05112878 to 85.05112878 degrees.&quot; 所以纬度的极值应该不能到正负90度。","like_count":4,"discussions":[{"author":{"id":1337717,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJfySwRreOLI6feibPQ6nAnkvsLUmibSDYxvChxXyDQanGGpibYBgACO6ibUbYTLJ4Uvoc6MlyjibIf9Wg/132","nickname":"Bigchen","note":"","ucode":"224A5FA18ABA96","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":354690,"discussion_content":"这个看投影，不同投影对于东西经度，南北纬度的表示方式不一样。作者文中提到的是正确的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615336472,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":293645,"user_name":"LQS  KF","can_delete":false,"product_type":"c1","uid":1364737,"ip_address":"","ucode":"3C0A07A8220094","user_header":"https://static001.geekbang.org/account/avatar/00/14/d3/01/716d45b6.jpg","comment_is_top":false,"comment_ctime":1621475807,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14506377695","product_id":100056701,"comment_content":"布隆过滤器RedisBloom和RedisCell提供的限流操作","like_count":3},{"had_liked":false,"id":289679,"user_name":"夏天","can_delete":false,"product_type":"c1","uid":2542376,"ip_address":"","ucode":"5F224DDAC94DFF","user_header":"https://static001.geekbang.org/account/avatar/00/26/cb/28/21a8a29e.jpg","comment_is_top":false,"comment_ctime":1619141858,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"14504043746","product_id":100056701,"comment_content":"给大家补一个<br><br>ElasticSearch 的 geo_distance 也可以用来做距离计算<br><br>按性能而言，肯定是 Redis 好。<br><br>ElasticSearch 对于搜索，更灵活，支持功能更多。<br><br>设计方案可以考虑","like_count":4},{"had_liked":false,"id":314371,"user_name":"俯瞰风景.","can_delete":false,"product_type":"c1","uid":1044166,"ip_address":"","ucode":"A6DB68B7B84AEE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/c6/bebcbcf0.jpg","comment_is_top":false,"comment_ctime":1632989018,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10222923610","product_id":100056701,"comment_content":"对于“搜索附近的餐馆”和“搜索附近的车辆”等基于地理位置信息的业务需求，想要支持这种需求，首先想到的就是获取地理位置信息并进行编码，把“比较距离远近”的问题抽象为“比较数值的差值”的问题，因为地址信息是二维空间中的问题，数值编码是一维的，那么首先要做的事情就是“数据降维”，通过GeoHash编码方式把二维数据降维到一维，然后再进行比较。而范围比较需求就可以使用Sorteed Set类型来支持了。","like_count":2},{"had_liked":false,"id":285597,"user_name":"达叔灬","can_delete":false,"product_type":"c1","uid":2404887,"ip_address":"","ucode":"5CCBAF13548F02","user_header":"https://static001.geekbang.org/account/avatar/00/24/b2/17/3161b49c.jpg","comment_is_top":false,"comment_ctime":1616913356,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10206847948","product_id":100056701,"comment_content":"了解下 有这么个东西  害","like_count":2},{"had_liked":false,"id":284097,"user_name":"守望者","can_delete":false,"product_type":"c1","uid":1623487,"ip_address":"","ucode":"DEE375A5F2D57A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/sPORo6cN3GSVxjHj9nqSAPn7KG4wtSTqNUommjNndpf8qd7bHKHquuldXZfxD5nF1ldy4LeoAQNwSsOgcmWG9w/132","comment_is_top":false,"comment_ctime":1616062673,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10205997265","product_id":100056701,"comment_content":"纬度越高(大)的地方，单位经度所对应的地面实际距离会越小，即经度与距离并不是恒定等比的。所以我想问的是，GEORADIUS命令中的参数，5km是如何在redis中使用的呢?","like_count":2},{"had_liked":false,"id":263355,"user_name":"Hurt","can_delete":false,"product_type":"c1","uid":1050946,"ip_address":"","ucode":"DCE7428CCF08EF","user_header":"https://static001.geekbang.org/account/avatar/00/10/09/42/1f762b72.jpg","comment_is_top":false,"comment_ctime":1606113592,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10196048184","product_id":100056701,"comment_content":"老师   基于位置信息服实际用什么数据库来做呢？真是用redis吗 ？ 还是用postgresql还是其他的数据啊","like_count":2,"discussions":[{"author":{"id":2542376,"avatar":"https://static001.geekbang.org/account/avatar/00/26/cb/28/21a8a29e.jpg","nickname":"夏天","note":"","ucode":"5F224DDAC94DFF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369718,"discussion_content":"看场景。看丢失数据的容忍度。看性能需求。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619141178,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":341428,"user_name":"阿昕","can_delete":false,"product_type":"c1","uid":1012906,"ip_address":"","ucode":"F3AD093B68E074","user_header":"https://static001.geekbang.org/account/avatar/00/0f/74/aa/178a6797.jpg","comment_is_top":false,"comment_ctime":1649600203,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5944567499","product_id":100056701,"comment_content":"1.签到的场景，使用了BitMap结构；<br>2.排行榜场景，使用了SortSet结构；<br>3.购物车场景，使用了HashSet结构；","like_count":1},{"had_liked":false,"id":315146,"user_name":"　　　　　　　　","can_delete":false,"product_type":"c1","uid":1658786,"ip_address":"","ucode":"A380B0756CB306","user_header":"https://static001.geekbang.org/account/avatar/00/19/4f/a2/694cde4c.jpg","comment_is_top":false,"comment_ctime":1633701904,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"5928669200","product_id":100056701,"comment_content":"还有一点不是太清楚，geohash是怎么计算距离的了","like_count":1,"discussions":[{"author":{"id":2925210,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Nq86sJRY7bXLAydQbfBM4iajfwKVowAkXPJNlj20VGBpOicze0Za561AicickuobZdkNqrSRuU50V7sbmicM1I9aib6g/132","nickname":"Geek_563045","note":"","ucode":"0B2C8636C3B68C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584405,"discussion_content":"感觉这个东西有点类似于二分查找法，先将经度二分查找定位，然后纬度定位二分查找。都是logn。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660807693,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"湖南"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2797976,"avatar":"","nickname":"Geek_323a60","note":"","ucode":"CDC276EC255411","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581956,"discussion_content":"没有计算距离啊，是通过分区找到“相邻”的区域啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659084754,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"陕西"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1272026,"avatar":"https://static001.geekbang.org/account/avatar/00/13/68/da/5bcb83b1.jpg","nickname":"白晨","note":"","ucode":"6D6171B8ECEDDD","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547863,"discussion_content":"分区的粒度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642915115,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":308241,"user_name":"Geek_c37e49","can_delete":false,"product_type":"c1","uid":1844885,"ip_address":"","ucode":"BCE0AD860241C7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eo6waC1mF0VmQibDjnJLEgFnmEUSNJozibaUeYZkpQaqicVcXxGZ3kKtnY5XF0iblxT4oiam7ucuJ1bqgg/132","comment_is_top":false,"comment_ctime":1629466114,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5924433410","product_id":100056701,"comment_content":"为什么geo经纬度编码之后，要使用奇数位和偶数位分别存放经纬度这种交错的方式呢？有点没想通","like_count":2,"discussions":[{"author":{"id":2220763,"avatar":"https://static001.geekbang.org/account/avatar/00/21/e2/db/97c6f756.jpg","nickname":"_patrick","note":"","ucode":"B24C6EEBCABB94","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560617,"discussion_content":"实际上就是细分。 将精度和纬度分别细分。如果只先考虑经度 再考虑纬度，即编码是  经度编码+纬度编码 ，这样去排序的话，那编码表示的距离误差会很大。明明距离很小 但是编码的差距可能非常大。    画在二维的平面上 奇偶交错 那么编码的排序后 相邻编码即可大致反映出距离的远近，但是也有误差。 看图看图 就懂了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1649405044,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":284772,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1616466527,"is_pvip":true,"discussion_count":2,"race_medal":2,"score":"5911433823","product_id":100056701,"comment_content":"位置信息服务现在已经成为了各种服务的标配，另外，用户的地理位置信息也是很有价值的，其实我倒是非常看好高德，这可能也是百度和其他一些大厂始终不放弃开发地图和导航应用的初衷。<br><br>一开始不理解 GeoHash 的编码，为什么要经纬度编码交叉组合，后来看到那个 4 分区图示，就只能说，第一个想到的人实在是天才。<br><br>GEOADD 和 GEOADIUS 已经有点类似于 DSL 了，简化了很多操作。<br><br>专栏中老师手把手的教了一遍如何自定义类型，虽然暂时用不到，但是看的还是比较过瘾的。不过因为已经看过了全部的加餐内容，老师提到后面会讲到持久化保存的代码，明显不在其中，也可能是在专栏的正式文章里面？<br><br>个人猜测，基于位置服务的应用不会只用 Redis 来查询，还会有持久化到数据库的部分，Redis 只是提供接近实时的查询应用，Elastic 似乎也有类似的功能。<br><br>另外，从老师回复中知道，Redis 的键和值都是用 RedisObject 保存的。稍有疑问，键直接用 String 或者 SDS 来存不好么？","like_count":1,"discussions":[{"author":{"id":2948634,"avatar":"","nickname":"Geek_275fa9","note":"","ucode":"E08AB55F59EF59","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557822,"discussion_content":"又是 天才 字眼","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647969313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2542376,"avatar":"https://static001.geekbang.org/account/avatar/00/26/cb/28/21a8a29e.jpg","nickname":"夏天","note":"","ucode":"5F224DDAC94DFF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369721,"discussion_content":"这就是面向对象的思想了。统一入口统一操作","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619141387,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":253821,"user_name":"蓝士钦","can_delete":false,"product_type":"c1","uid":1229516,"ip_address":"","ucode":"726EB5C8EF1249","user_header":"https://static001.geekbang.org/account/avatar/00/12/c2/cc/ca22bb7c.jpg","comment_is_top":false,"comment_ctime":1602906465,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5897873761","product_id":100056701,"comment_content":"关于用GEO来实现LBS有个疑问，缓存大小是珍贵且有限的，一次性把所有位置信息都存在缓存中不现实吧。过期淘汰策略该怎么实现？是不是要在程序中定期的做业务检测和缓存数据批量落库。只保证热点区域在缓存中即可","like_count":1,"discussions":[{"author":{"id":1581294,"avatar":"","nickname":"Geek_be4cec","note":"","ucode":"C87642D655EAC3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":398590,"discussion_content":"滴滴出行APP打车的时候,能看到好多小车图标在地图上的行为轨迹，这个也是用GEO来实现的嘛","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1632817407,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2542376,"avatar":"https://static001.geekbang.org/account/avatar/00/26/cb/28/21a8a29e.jpg","nickname":"夏天","note":"","ucode":"5F224DDAC94DFF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369719,"discussion_content":"全存也问题不大，不行就分片","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1619141259,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":246448,"user_name":"D","can_delete":false,"product_type":"c1","uid":1027596,"ip_address":"","ucode":"5BB4D16FE39BFF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ae/0c/f39f847a.jpg","comment_is_top":false,"comment_ctime":1599354006,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5894321302","product_id":100056701,"comment_content":"老师，这块的代码改动能否给个fork url 看下？","like_count":1},{"had_liked":false,"id":246127,"user_name":"那时刻","can_delete":false,"product_type":"c1","uid":1150927,"ip_address":"","ucode":"B0D150856C3A4A","user_header":"https://static001.geekbang.org/account/avatar/00/11/8f/cf/890f82d6.jpg","comment_is_top":false,"comment_ctime":1599185719,"is_pvip":false,"discussion_count":3,"race_medal":1,"score":"5894153015","product_id":100056701,"comment_content":"请问老师，redisobject里的 refcount：记录了对象的引用计数，这个对象引用计数在什么情况下发生呢？具体使用场景是什么？","like_count":1,"discussions":[{"author":{"id":1388092,"avatar":"https://static001.geekbang.org/account/avatar/00/15/2e/3c/eae43616.jpg","nickname":"sid","note":"","ucode":"3D1F9169A19D29","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310142,"discussion_content":"这个key被访问到的时候更新，比如 GET xxxx.\nrefcount可以用于Redis内部的LRU（Least Recently Used,最近最少被使用）缓存淘汰机制。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1601641888,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2640551,"avatar":"https://static001.geekbang.org/account/avatar/00/28/4a/a7/ab7998b1.jpg","nickname":"zachary","note":"","ucode":"B22B95FCECD6E7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380625,"discussion_content":"受到java的影响，原先以为这个refcount是做内存回收用的，但是c语言并没有自动垃圾回收机制。所以，只可能用于lfu算法统计被访问次数。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624609365,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2031180,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/fe/4c/736bc949.jpg","nickname":"峰回路转","note":"","ucode":"382408FF40D99A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318382,"discussion_content":"redisObject被一个新程序使用时， refcount增一; redisObject不再被一个程序使用时， refcount减一","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603720738,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":346144,"user_name":"杜兰特有丶小帅","can_delete":false,"product_type":"c1","uid":1320433,"ip_address":"","ucode":"9E1FA13BA68E87","user_header":"https://static001.geekbang.org/account/avatar/00/14/25/f1/f7a11901.jpg","comment_is_top":false,"comment_ctime":1652856094,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1652856094","product_id":100056701,"comment_content":"关于geohash有个点没明白，redis把经纬度转换为geohash作为score存储在sorted set中，那么是如何计算附近的人的，比如，我想计算距离当前位置5km内的人，使用GEORADIUS命令，那么redis是如何计算出5km内的点呢？可以直接通过score算出来长度吗？","like_count":0},{"had_liked":false,"id":339672,"user_name":"William Ning","can_delete":false,"product_type":"c1","uid":1592279,"ip_address":"","ucode":"4DB8D05E69E5F3","user_header":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","comment_is_top":false,"comment_ctime":1648285554,"is_pvip":true,"discussion_count":2,"race_medal":0,"score":"1648285554","product_id":100056701,"comment_content":"看完了，觉得大家都很厉害哦～","like_count":0,"discussions":[{"author":{"id":3190922,"avatar":"","nickname":"Geek_590385","note":"","ucode":"BE5BDD9180FA0E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590227,"discussion_content":"兄弟，你才是最厉害的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665629978,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江西"},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":3190922,"avatar":"","nickname":"Geek_590385","note":"","ucode":"BE5BDD9180FA0E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591995,"discussion_content":"All👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667019513,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":590227,"ip_address":"四川"},"score":591995,"extra":""}]}]},{"had_liked":false,"id":339200,"user_name":"Geek_275fa9","can_delete":false,"product_type":"c1","uid":2948634,"ip_address":"","ucode":"E08AB55F59EF59","user_header":"","comment_is_top":false,"comment_ctime":1647968758,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647968758","product_id":100056701,"comment_content":"真是干活满满","like_count":0},{"had_liked":false,"id":331944,"user_name":"白晨","can_delete":false,"product_type":"c1","uid":1272026,"ip_address":"","ucode":"6D6171B8ECEDDD","user_header":"https://static001.geekbang.org/account/avatar/00/13/68/da/5bcb83b1.jpg","comment_is_top":false,"comment_ctime":1642915162,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1642915162","product_id":100056701,"comment_content":"自定义数据类型那里，是怎么去部署和实现的呢？好像只是说到编码而已？","like_count":0},{"had_liked":false,"id":322945,"user_name":"南天","can_delete":false,"product_type":"c1","uid":1796693,"ip_address":"","ucode":"DA26E76BC95F1B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ4QCWqGgMN4kp615f0Dlb8Ty61iaeOfMia7dyOic5mcgiarxGv8pyra1dibiajXicDLibxqsyM6uNabia4ckw/132","comment_is_top":false,"comment_ctime":1637667563,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637667563","product_id":100056701,"comment_content":"经纬度(116.034579，39.030452)取区间 是否可以用sortedset来实现，其中权重值设置成11603457939030452<br>先精度范围取一些只，再维度范围取一些值，然后取交集","like_count":0},{"had_liked":false,"id":305732,"user_name":"Heaven","can_delete":false,"product_type":"c1","uid":1694207,"ip_address":"","ucode":"FA33FBCC66C911","user_header":"https://static001.geekbang.org/account/avatar/00/19/d9/ff/b23018a6.jpg","comment_is_top":false,"comment_ctime":1628135854,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628135854","product_id":100056701,"comment_content":"用布隆过滤器做限流应该算是吧","like_count":0},{"had_liked":false,"id":303661,"user_name":"Liujun","can_delete":false,"product_type":"c1","uid":1736462,"ip_address":"","ucode":"3DB1F3CA57B5B3","user_header":"https://static001.geekbang.org/account/avatar/00/1a/7f/0e/e3a8dbd9.jpg","comment_is_top":false,"comment_ctime":1626919252,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626919252","product_id":100056701,"comment_content":"GEO 用来处理 LBS 相关业务功能，底层是基于 Sorted Set 实现的，使用 GEOHASH 算法把经纬度转换成 Score 值。","like_count":0},{"had_liked":false,"id":302454,"user_name":"花儿少年","can_delete":false,"product_type":"c1","uid":1318540,"ip_address":"","ucode":"CFE4F64243673B","user_header":"https://static001.geekbang.org/account/avatar/00/14/1e/8c/450fe5cb.jpg","comment_is_top":false,"comment_ctime":1626229098,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626229098","product_id":100056701,"comment_content":"一个String 走天下<br>原因是：数据的层次多，批量查询，要求时延小，单个用户的数据适合放在hash数据结构中，例如用户在某个商品下的订单数；但是大多数时候都是批量查用户的N个商品的订单数，这个时候就不怎么好操作，同时也复杂了，效率上也不是很好评估，还不如MGET一波","like_count":0},{"had_liked":false,"id":293170,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1621251949,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621251949","product_id":100056701,"comment_content":"所以，为了避免查询不准确问题，我们可以同时查询给定经纬度所在的方格周围的 4 个或 8 个方格。<br><br>没太懂这句话，查周围 4 个或 8 个方格，怎么能避免查询不准确问题吖？谢谢","like_count":0},{"had_liked":false,"id":291974,"user_name":"野鸭子","can_delete":false,"product_type":"c1","uid":2227628,"ip_address":"","ucode":"F32A5164B081DE","user_header":"https://static001.geekbang.org/account/avatar/00/21/fd/ac/619e197b.jpg","comment_is_top":false,"comment_ctime":1620631060,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"1620631060","product_id":100056701,"comment_content":"老师 16个分区图中的编码值怎么得来的？","like_count":0,"discussions":[{"author":{"id":1316926,"avatar":"https://static001.geekbang.org/account/avatar/00/14/18/3e/f8632713.jpg","nickname":"EveryDayIsNew","note":"","ucode":"776B81EF6830FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389319,"discussion_content":"http://gk.link/a/10vX3","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1629215937,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":2948634,"avatar":"","nickname":"Geek_275fa9","note":"","ucode":"E08AB55F59EF59","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1316926,"avatar":"https://static001.geekbang.org/account/avatar/00/14/18/3e/f8632713.jpg","nickname":"EveryDayIsNew","note":"","ucode":"776B81EF6830FA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557819,"discussion_content":"666","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647969250,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":389319,"ip_address":""},"score":557819,"extra":""},{"author":{"id":2948634,"avatar":"","nickname":"Geek_275fa9","note":"","ucode":"E08AB55F59EF59","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1316926,"avatar":"https://static001.geekbang.org/account/avatar/00/14/18/3e/f8632713.jpg","nickname":"EveryDayIsNew","note":"","ucode":"776B81EF6830FA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557820,"discussion_content":"回你一个 http://www.redis.cn/redis_memory/","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647969259,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":389319,"ip_address":""},"score":557820,"extra":""},{"author":{"id":1320433,"avatar":"https://static001.geekbang.org/account/avatar/00/14/25/f1/f7a11901.jpg","nickname":"杜兰特有丶小帅","note":"","ucode":"9E1FA13BA68E87","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1316926,"avatar":"https://static001.geekbang.org/account/avatar/00/14/18/3e/f8632713.jpg","nickname":"EveryDayIsNew","note":"","ucode":"776B81EF6830FA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572561,"discussion_content":"感谢老哥，还是要看原理才能清楚底层计算方式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652857057,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":389319,"ip_address":""},"score":572561,"extra":""}]}]},{"had_liked":false,"id":290364,"user_name":"听风","can_delete":false,"product_type":"c1","uid":1276183,"ip_address":"","ucode":"D0DAA9209C5DF5","user_header":"https://static001.geekbang.org/account/avatar/00/13/79/17/5cf39369.jpg","comment_is_top":false,"comment_ctime":1619515450,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619515450","product_id":100056701,"comment_content":"您好老师请问一下真实的大量LBS距离范围请求中，会有多大的 CPU的性能影响，毕竟是一个技术的过程，我们会选用Redis，还是ES，还是有其他更合理的方案选择呢？","like_count":0},{"had_liked":false,"id":281312,"user_name":"念","can_delete":false,"product_type":"c1","uid":1113818,"ip_address":"","ucode":"866A800D49C498","user_header":"https://static001.geekbang.org/account/avatar/00/10/fe/da/01cfbdc6.jpg","comment_is_top":false,"comment_ctime":1614685620,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614685620","product_id":100056701,"comment_content":"geo能用在签到打卡上面吗？","like_count":0},{"had_liked":false,"id":275370,"user_name":"浓茶水","can_delete":false,"product_type":"c1","uid":1080521,"ip_address":"","ucode":"1821A4FCB7B408","user_header":"https://static001.geekbang.org/account/avatar/00/10/7c/c9/3db4187e.jpg","comment_is_top":false,"comment_ctime":1611493725,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611493725","product_id":100056701,"comment_content":"老师讲的真不错，谢谢!","like_count":0},{"had_liked":false,"id":267877,"user_name":"Geek5198","can_delete":false,"product_type":"c1","uid":2028945,"ip_address":"","ucode":"2BEBE6A39D9A0E","user_header":"","comment_is_top":false,"comment_ctime":1607959930,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1607959930","product_id":100056701,"comment_content":"我想问个实际应用中的问题，我们要统计每个用户每天登录次数，要求按小时统计，就是记录24小时内这个用户每小时分别登录几次。每晚24点，定时任务会汇总每个用户当天的登录信息入库(每个用户每天一条数据），用户量也比较大，该用什么结构好呢。","like_count":0,"discussions":[{"author":{"id":1602239,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKyobcyicicCQoldZofsS36xrjA2R2hk2F89pu1hCqwjlRaRG4xKkgCicZibEVdOwpfN5rWjEchrsxicSQ/132","nickname":"Geek_e8d55e","note":"","ucode":"5F13626B0E1E45","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335134,"discussion_content":"有个最简单粗暴的想法，就是，用户id+小时做为key，然后登录次数做为value，这样每个用户每个小时的登录次数就有了，汇总入库后，再将redis中数据清空，这样不会影响第二天的内存使用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608102676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1006735,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5c/8f/551b5624.jpg","nickname":"小可","note":"","ucode":"8834AF621FA67D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1602239,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKyobcyicicCQoldZofsS36xrjA2R2hk2F89pu1hCqwjlRaRG4xKkgCicZibEVdOwpfN5rWjEchrsxicSQ/132","nickname":"Geek_e8d55e","note":"","ucode":"5F13626B0E1E45","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347837,"discussion_content":"这样类型是string，用户量大太占内存了，参考第11讲，个人觉得用hash类型，hset 用户ID 小时 次数，再定时任务入库","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1612337876,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":335134,"ip_address":""},"score":347837,"extra":""}]}]},{"had_liked":false,"id":257819,"user_name":"R","can_delete":false,"product_type":"c1","uid":1087403,"ip_address":"","ucode":"DD268315F54DB2","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/ab/dc5a47f3.jpg","comment_is_top":false,"comment_ctime":1604140182,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1604140182","product_id":100056701,"comment_content":"超级干货","like_count":0},{"had_liked":false,"id":250148,"user_name":"乱匠","can_delete":false,"product_type":"c1","uid":1197941,"ip_address":"","ucode":"9FAC4E465C3582","user_header":"https://static001.geekbang.org/account/avatar/00/12/47/75/4d59b6b5.jpg","comment_is_top":false,"comment_ctime":1600952125,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600952125","product_id":100056701,"comment_content":"https:&#47;&#47;github.com&#47;redis&#47;redis&#47;issues&#47;2758 对于GEO 对象，redis 至今没能给出区域内点聚合的实现，不知道大家有没有遇到这个需求，是怎么做的？","like_count":0},{"had_liked":false,"id":246647,"user_name":"东","can_delete":false,"product_type":"c1","uid":1043947,"ip_address":"","ucode":"0FF5018422CEA9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/eb/88cac7a5.jpg","comment_is_top":false,"comment_ctime":1599445760,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1599445760","product_id":100056701,"comment_content":"&quot;有的编码值虽然在大小上接近，但实际对应的方格却距离比较远。所以，为了避免查询不准确问题，我们可以同时查询给定经纬度所在的方格周围的 4 个或 8 个方格&quot;。 可是这4个或8个里还是包含了这个有问题的方格，实践中如何剔除掉这个坏的方格呢？","like_count":0,"discussions":[{"author":{"id":2107375,"avatar":"https://static001.geekbang.org/account/avatar/00/20/27/ef/a7f94eda.jpg","nickname":"Jerry You","note":"","ucode":"679A44B505482F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304139,"discussion_content":"怎么计算周围的4个，或8个方格，他们之前大小有什么联系么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599479013,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":246610,"user_name":"王      慈","can_delete":false,"product_type":"c1","uid":1298139,"ip_address":"","ucode":"EACC3D086674D8","user_header":"https://static001.geekbang.org/account/avatar/00/13/ce/db/bb1821b3.jpg","comment_is_top":false,"comment_ctime":1599438462,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1599438462","product_id":100056701,"comment_content":"老师，这种通过更改源码实现自定义类型和功能的方式，比较好的处理redis版本更新的方法有什么呢？比如在v0.1稳定版上实现了功能，后续出现v0.2稳定版了是否可以升级呢？","like_count":0,"discussions":[{"author":{"id":1388092,"avatar":"https://static001.geekbang.org/account/avatar/00/15/2e/3c/eae43616.jpg","nickname":"sid","note":"","ucode":"3D1F9169A19D29","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310139,"discussion_content":"自己fork redis源码出来改。redis官方源码有版本升级的话，从redis官方代码库里把源码merge到自己fork出来的代码库里。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601641636,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":246381,"user_name":"MClink","can_delete":false,"product_type":"c1","uid":1435733,"ip_address":"","ucode":"F479190923355C","user_header":"https://static001.geekbang.org/account/avatar/00/15/e8/55/92f82281.jpg","comment_is_top":false,"comment_ctime":1599302821,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1599302821","product_id":100056701,"comment_content":"老师后面会带我们去看源码吗？","like_count":0},{"had_liked":false,"id":246246,"user_name":"小袁","can_delete":false,"product_type":"c1","uid":1811495,"ip_address":"","ucode":"3F5D8721F577D9","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a4/27/15e75982.jpg","comment_is_top":false,"comment_ctime":1599222036,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1599222036","product_id":100056701,"comment_content":"啥经纬度的位信息要交替存储，可以不交替存储么？原文只说了相邻编码可能在是相邻地区，但不相邻编码可以是相邻地区吧。既然这样，能否用算法直接算出相邻的八格的编码呢，然后直接根据权重查。<br>","like_count":0,"discussions":[{"author":{"id":1388092,"avatar":"https://static001.geekbang.org/account/avatar/00/15/2e/3c/eae43616.jpg","nickname":"sid","note":"","ucode":"3D1F9169A19D29","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310140,"discussion_content":"交替存储的话，2进制编码的数值大小差值和实际经纬度距离是正相关的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601641762,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2107618,"avatar":"https://static001.geekbang.org/account/avatar/00/20/28/e2/fbf76ae6.jpg","nickname":"迷迷徒","note":"","ucode":"5B65708B7E2DC1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303949,"discussion_content":"不交替存储怎么精确二位信息？？？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599413918,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}