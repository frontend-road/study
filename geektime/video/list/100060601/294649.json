{"id":294649,"title":"12 | 语法面面观：函数与闭包（二）","content":"<p><strong>课件及Demo下载链接</strong><br>\n<a href=\"https://gitee.com/geektime-geekbang/geektime-Rust\">https://gitee.com/geektime-geekbang/geektime-Rust</a></p>","comments":[{"had_liked":false,"id":273303,"user_name":"yinz","can_delete":false,"product_type":"c3","uid":2140623,"ip_address":"","ucode":"C1279291F92A2F","user_header":"https://static001.geekbang.org/account/avatar/00/20/a9/cf/9e5205a1.jpg","comment_is_top":false,"comment_ctime":1610529489,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"mut 是 mutable 的缩写, 表示可变, mutable 的音标是 [ˈmjutəbl],\n\n我觉得 mut 读作 [ˈmjut] &#39;谬扯&#39; 更加合适 而不是  &#39;骂扯&#39;","like_count":7},{"had_liked":false,"id":297366,"user_name":"杰克","can_delete":false,"product_type":"c3","uid":2648832,"ip_address":"","ucode":"1B9CD2ECCFC1B6","user_header":"https://static001.geekbang.org/account/avatar/00/28/6b/00/b743de88.jpg","comment_is_top":false,"comment_ctime":1623486257,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"老师好！怎么看到去糖后的代码呢？","like_count":3},{"had_liked":false,"id":253620,"user_name":"β","can_delete":false,"product_type":"c3","uid":2187350,"ip_address":"","ucode":"F8C37FF5971BE8","user_header":"https://static001.geekbang.org/account/avatar/00/21/60/56/12d9ab6d.jpg","comment_is_top":false,"comment_ctime":1602813626,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"这节课讲的真不错，拨云见日啊","like_count":1},{"had_liked":false,"id":392023,"user_name":"我住7楼A","can_delete":false,"product_type":"c3","uid":2657547,"ip_address":"四川","ucode":"BFBB1B7D5D384F","user_header":"https://static001.geekbang.org/account/avatar/00/28/8d/0b/a4a4fdfd.jpg","comment_is_top":false,"comment_ctime":1719753450,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"老师说的这里是不对的，没有捕获环境变量和捕获的变量是实现了copy trait的实现 Fn，捕获变量切需要用使用所有权的才是 FnOnce","like_count":0},{"had_liked":false,"id":297559,"user_name":"楚凝的小翊","can_delete":false,"product_type":"c3","uid":2647723,"ip_address":"","ucode":"3977A763152F23","user_header":"","comment_is_top":false,"comment_ctime":1623636580,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"按照这个实现，那不是所有的闭包都是先获取外部值的所有权，在进行相关操作？","like_count":0},{"had_liked":false,"id":292363,"user_name":"Geek_7c4953","can_delete":false,"product_type":"c3","uid":1809168,"ip_address":"","ucode":"359745D4725D4F","user_header":"","comment_is_top":false,"comment_ctime":1620794343,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"没搞懂三者的继承关系。FnOnce会消耗捕获变量的所有权，Fn不会，但Fn又是FnOnce。那如果将Fn传递给FnOnce，是不是就消耗捕获变量的所有权呢？但实际上Fn内部并没有任何需要消耗捕获变量所有权的操作啊。","like_count":0},{"had_liked":false,"id":280140,"user_name":"？","can_delete":false,"product_type":"c3","uid":2448074,"ip_address":"","ucode":"EDA9A79E5419BE","user_header":"https://static001.geekbang.org/account/avatar/00/25/5a/ca/2889fb5e.jpg","comment_is_top":false,"comment_ctime":1614091224,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"编译器会更加源代码推断实现三个trait中的哪几种(FnOnce必须实现)，以及如何调用。比如，不获取变量且调用一次的实现且调用FnOnce，不获取变量且调用一次以上的，则实现且调用Fn（这里属于猜测，不知如何查看MIR）；需要获取并修改变量的则实现FnMut以及调用FnMut。。。。","like_count":0},{"had_liked":false,"id":278696,"user_name":"皓首不倦","can_delete":false,"product_type":"c3","uid":1144626,"ip_address":"","ucode":"FA7D282DD40D83","user_header":"https://static001.geekbang.org/account/avatar/00/11/77/32/02416d97.jpg","comment_is_top":false,"comment_ctime":1613208933,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"请问下老师，Rust闭包实现原理第二类场景中语法糖去糖那里是不是有点问题，左边的闭包中修改了arr[0]的数值，实际效果是真正的把环境变量中的arr[0]修改了，但是右边去糖之后的代码似乎无法达到修改环境变量的目的，因为let mut c = Clusure {env_var: arr}这个地方，数组默认发生的是copy行为，不是move, 所以call_mut里面实际没有达到修改原环境变量的作用，而是修改了一个原环境变量的copy, 按我理解这个行为倒像是添加了move关键字后的闭包的行为","like_count":0},{"had_liked":false,"id":253983,"user_name":"刘福洋","can_delete":false,"product_type":"c3","uid":1359831,"ip_address":"","ucode":"9C4A1E19404B38","user_header":"https://static001.geekbang.org/account/avatar/00/14/bf/d7/6bb1ee25.jpg","comment_is_top":false,"comment_ctime":1603003088,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"FnOnce也可以捕获并消费环境外面的一个值吧？正因此所以它对应所有权。而且消费掉环境外的一个值以后就不能进行第二次同样的调用了。所以叫FnOnce","like_count":0,"discussions":[{"author":{"id":2214232,"avatar":"https://static001.geekbang.org/account/avatar/00/21/c9/58/daa8beae.jpg","nickname":"罗","note":"","ucode":"D43873D5A84A92","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327155,"discussion_content":"我的理解也是这样的。当时看书的时候，确实没把他和所有权、可变、不可变借用联系起来。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605755868,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":253566,"user_name":"冲天炮","can_delete":false,"product_type":"c3","uid":1487333,"ip_address":"","ucode":"4DC3B4365CF6C4","user_header":"https://static001.geekbang.org/account/avatar/00/16/b1/e5/d10b40a2.jpg","comment_is_top":false,"comment_ctime":1602779530,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"let c1 = || { &quot;c1&quot;; };\nlet c2 = || { &quot;c2&quot;; };\nlet v = [c1, c2];\nlet v = vec![c1, c2];\nlet v = vec![1, 2, 3];\n第3行，编译器可以自动推断出来v的类型；\n第4行，不可以，需要显示指定v的类型：Vec&lt;fn()&gt;，才可以编译通过；\n第5行，同样是使用的vec!，编译器又可以自动推断出来v的类型；\n这是为什么呢？","like_count":0}]}