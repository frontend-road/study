{"id":83783,"title":"43 | 套路篇：网络性能优化的几个思路（上）","content":"<p>你好，我是倪朋飞。</p><p>上一节，我们了解了NAT（网络地址转换）的原理，学会了如何排查 NAT 带来的性能问题，最后还总结了 NAT 性能优化的基本思路。我先带你简单回顾一下。</p><p>NAT 基于 Linux 内核的连接跟踪机制，实现了 IP 地址及端口号重写的功能，主要被用来解决公网 IP 地址短缺的问题。</p><p>在分析 NAT 性能问题时，可以先从内核连接跟踪模块 conntrack 角度来分析，比如用 systemtap、perf、netstat 等工具，以及 proc 文件系统中的内核选项，来分析网络协议栈的行为；然后，通过内核选项调优、切换到无状态 NAT、使用 DPDK 等方式，进行实际优化。</p><p>通过前面的学习，你应该已经体会到，网络问题比我们前面学过的 CPU、内存或磁盘 I/O 都要复杂。无论是应用层的各种 I/O 模型，冗长的网络协议栈和众多的内核选项，抑或是各种复杂的网络环境，都提高了网络的复杂性。</p><p>不过，也不要过分担心，只要你掌握了 Linux 网络的基本原理和常见网络协议的工作流程，再结合各个网络层的性能指标来分析，你会发现，定位网络瓶颈并不难。</p><p>找到网络性能瓶颈后，下一步要做的就是优化了，也就是如何降低网络延迟，并提高网络的吞吐量。学完相关原理和案例后，我就来讲讲，优化网络性能问题的思路和一些注意事项。</p><!-- [[[read_end]]] --><p>由于网络优化思路的内容比较多，我们分两节来学习，今天我们先来看上篇。</p><h2>确定优化目标</h2><p>跟 CPU 和 I/O 方面的性能优化一样，优化前，我会先问问自己，网络性能优化的目标是什么？换句话说，我们观察到的网络性能指标，要达到多少才合适呢？</p><p>实际上，虽然网络性能优化的整体目标，是降低网络延迟（如 RTT）和提高吞吐量（如 BPS 和 PPS），但具体到不同应用中，每个指标的优化标准可能会不同，优先级顺序也大相径庭。</p><p>就拿上一节提到的 NAT 网关来说，由于其直接影响整个数据中心的网络出入性能，所以 NAT 网关通常需要达到或接近线性转发，也就是说， PPS 是最主要的性能目标。</p><p>再如，对于数据库、缓存等系统，快速完成网络收发，即低延迟，是主要的性能目标。</p><p>而对于我们经常访问的 Web 服务来说，则需要同时兼顾吞吐量和延迟。</p><p>所以，为了更客观合理地评估优化效果，我们首先应该明确优化的标准，即要对系统和应用程序进行基准测试，得到网络协议栈各层的基准性能。</p><p>在 <a href=\"https://time.geekbang.org/column/article/81497\">怎么评估系统的网络性能</a> 中，我已经介绍过，网络性能测试的方法。简单回顾一下，Linux 网络协议栈，是我们需要掌握的核心原理。它是基于 TCP/IP 协议族的分层结构，我用一张图来表示这个结构。</p><p><img src=\"https://static001.geekbang.org/resource/image/c7/ac/c7b5b16539f90caabb537362ee7c27ac.png?wh=1092*1316\" alt=\"\"></p><p>明白了这一点，在进行基准测试时，我们就可以按照协议栈的每一层来测试。由于底层是其上方各层的基础，底层性能也就决定了高层性能。所以我们要清楚，底层性能指标，其实就是对应高层的极限性能。我们从下到上来理解这一点。</p><p>首先是网络接口层和网络层，它们主要负责网络包的封装、寻址、路由，以及发送和接收。每秒可处理的网络包数 PPS，就是它们最重要的性能指标（特别是在小包的情况下）。你可以用内核自带的发包工具 pktgen ，来测试 PPS 的性能。</p><p>再向上到传输层的 TCP 和 UDP，它们主要负责网络传输。对它们而言，吞吐量（BPS）、连接数以及延迟，就是最重要的性能指标。你可以用 iperf 或 netperf ，来测试传输层的性能。</p><p>不过要注意，网络包的大小，会直接影响这些指标的值。所以，通常，你需要测试一系列不同大小网络包的性能。</p><p>最后，再往上到了应用层，最需要关注的是吞吐量（BPS）、每秒请求数以及延迟等指标。你可以用 wrk、ab 等工具，来测试应用程序的性能。</p><p>不过，这里要注意的是，测试场景要尽量模拟生产环境，这样的测试才更有价值。比如，你可以到生产环境中，录制实际的请求情况，再到测试中回放。</p><p>总之，根据这些基准指标，再结合已经观察到的性能瓶颈，我们就可以明确性能优化的目标。</p><h2>网络性能工具</h2><p>同前面学习一样，我建议从指标和工具两个不同维度出发，整理记忆网络相关的性能工具。</p><p>第一个维度，从网络性能指标出发，你更容易把性能工具同系统工作原理关联起来，对性能问题有宏观的认识和把握。这样，当你想查看某个性能指标时，就能清楚知道，可以用哪些工具。</p><p>这里，我把提供网络性能指标的工具，做成了一个表格，方便你梳理关系和理解记忆。你可以把它保存并打印出来，随时查看。当然，你也可以把它当成一个“指标工具”指南来使用。</p><p><img src=\"https://static001.geekbang.org/resource/image/a1/3b/a1eb07e281e5795be83c11d7255c543b.png?wh=1714*1944\" alt=\"\"></p><p>再来看第二个维度，从性能工具出发。这可以让你更快上手使用工具，迅速找出想要观察的性能指标。特别是在工具有限的情况下，我们更要充分利用好手头的每一个工具，用少量工具也要尽力挖掘出大量信息。</p><p>同样的，我也将这些常用工具，汇总成了一个表格，方便你区分和理解。自然，你也可以当成一个“工具指标”指南使用，需要时查表即可。</p><p><img src=\"https://static001.geekbang.org/resource/image/0d/a0/0d87b39b89a1b7f325fc5477c0182ea0.png?wh=1714*2280\" alt=\"\"></p><h2>网络性能优化</h2><p>总的来说，先要获得网络基准测试报告，然后通过相关性能工具，定位出网络性能瓶颈。再接下来的优化工作，就是水到渠成的事情了。</p><p>当然，还是那句话，要优化网络性能，肯定离不开 Linux 系统的网络协议栈和网络收发流程的辅助。你可以结合下面这张图再回忆一下这部分的知识。</p><p><img src=\"https://static001.geekbang.org/resource/image/a1/3f/a118911721f9b67ce9c83de15666753f.png?wh=1826*1242\" alt=\"\"></p><p>接下来，我们就可以从应用程序、套接字、传输层、网络层以及链路层等几个角度，分别来看网络性能优化的基本思路。</p><h3>应用程序</h3><p>应用程序，通常通过套接字接口进行网络操作。由于网络收发通常比较耗时，所以应用程序的优化，主要就是对网络 I/O 和进程自身的工作模型的优化。</p><p>相关内容，其实我们在 <a href=\"https://time.geekbang.org/column/article/81268\">C10K 和 C1000K 回顾</a> 的文章中已经学过了。这里我们简单回顾一下。</p><p>从网络 I/O 的角度来说，主要有下面两种优化思路。</p><p>第一种是最常用的 I/O 多路复用技术 epoll，主要用来取代 select 和 poll。这其实是解决 C10K 问题的关键，也是目前很多网络应用默认使用的机制。</p><p>第二种是使用异步 I/O（Asynchronous I/O，AIO）。AIO 允许应用程序同时发起很多 I/O 操作，而不用等待这些操作完成。等到 I/O完成后，系统会用事件通知的方式，告诉应用程序结果。不过，AIO 的使用比较复杂，你需要小心处理很多边缘情况。</p><p>而从进程的工作模型来说，也有两种不同的模型用来优化。</p><p>第一种，主进程+多个 worker 子进程。其中，主进程负责管理网络连接，而子进程负责实际的业务处理。这也是最常用的一种模型。</p><p>第二种，监听到相同端口的多进程模型。在这种模型下，所有进程都会监听相同接口，并且开启 SO_REUSEPORT 选项，由内核负责，把请求负载均衡到这些监听进程中去。</p><p>除了网络 I/O 和进程的工作模型外，应用层的网络协议优化，也是至关重要的一点。我总结了常见的几种优化方法。</p><ul>\n<li>\n<p>使用长连接取代短连接，可以显著降低 TCP 建立连接的成本。在每秒请求次数较多时，这样做的效果非常明显。</p>\n</li>\n<li>\n<p>使用内存等方式，来缓存不常变化的数据，可以降低网络 I/O 次数，同时加快应用程序的响应速度。</p>\n</li>\n<li>\n<p>使用 Protocol Buffer 等序列化的方式，压缩网络 I/O 的数据量，可以提高应用程序的吞吐。</p>\n</li>\n<li>\n<p>使用 DNS 缓存、预取、HTTPDNS 等方式，减少 DNS 解析的延迟，也可以提升网络 I/O 的整体速度。</p>\n</li>\n</ul><h3>套接字</h3><p>套接字可以屏蔽掉 Linux 内核中不同协议的差异，为应用程序提供统一的访问接口。每个套接字，都有一个读写缓冲区。</p><ul>\n<li>\n<p>读缓冲区，缓存了远端发过来的数据。如果读缓冲区已满，就不能再接收新的数据。</p>\n</li>\n<li>\n<p>写缓冲区，缓存了要发出去的数据。如果写缓冲区已满，应用程序的写操作就会被阻塞。</p>\n</li>\n</ul><p>所以，为了提高网络的吞吐量，你通常需要调整这些缓冲区的大小。比如：</p><ul>\n<li>\n<p>增大每个套接字的缓冲区大小 net.core.optmem_max；</p>\n</li>\n<li>\n<p>增大套接字接收缓冲区大小 net.core.rmem_max 和发送缓冲区大小 net.core.wmem_max；</p>\n</li>\n<li>\n<p>增大 TCP 接收缓冲区大小 net.ipv4.tcp_rmem 和发送缓冲区大小 net.ipv4.tcp_wmem。</p>\n</li>\n</ul><p>至于套接字的内核选项，我把它们整理成了一个表格，方便你在需要时参考：</p><p><img src=\"https://static001.geekbang.org/resource/image/5f/f0/5f2d4957663dd8bf3410da8180ab18f0.png?wh=1696*959\" alt=\"\"></p><p>不过有几点需要你注意。</p><ul>\n<li>\n<p>tcp_rmem 和 tcp_wmem 的三个数值分别是 min，default，max，系统会根据这些设置，自动调整TCP接收/发送缓冲区的大小。</p>\n</li>\n<li>\n<p>udp_mem 的三个数值分别是 min，pressure，max，系统会根据这些设置，自动调整UDP发送缓冲区的大小。</p>\n</li>\n</ul><p>当然，表格中的数值只提供参考价值，具体应该设置多少，还需要你根据实际的网络状况来确定。比如，发送缓冲区大小，理想数值是吞吐量*延迟，这样才可以达到最大网络利用率。</p><p>除此之外，套接字接口还提供了一些配置选项，用来修改网络连接的行为：</p><ul>\n<li>\n<p>为 TCP 连接设置 TCP_NODELAY 后，就可以禁用 Nagle 算法；</p>\n</li>\n<li>\n<p>为 TCP 连接开启 TCP_CORK 后，可以让小包聚合成大包后再发送（注意会阻塞小包的发送）；</p>\n</li>\n<li>\n<p>使用 SO_SNDBUF 和 SO_RCVBUF ，可以分别调整套接字发送缓冲区和接收缓冲区的大小。</p>\n</li>\n</ul><h2>小结</h2><p>今天，我们一起梳理了常见的 Linux 网络性能优化方法。</p><p>在优化网络性能时，你可以结合 Linux 系统的网络协议栈和网络收发流程，然后从应用程序、套接字、传输层、网络层再到链路层等，进行逐层优化。</p><p>当然，其实我们分析、定位网络瓶颈，也是基于这些进行的。定位出性能瓶颈后，就可以根据瓶颈所在的协议层进行优化。比如，今天我们学了应用程序和套接字的优化思路：</p><ul>\n<li>\n<p>在应用程序中，主要优化 I/O 模型、工作模型以及应用层的网络协议；</p>\n</li>\n<li>\n<p>在套接字层中，主要优化套接字的缓冲区大小。</p>\n</li>\n</ul><p>而其他各个网络层的优化方法，建议你先自己想一想，下一节，我们再来一起总结。</p><h2>思考</h2><p>最后，我想邀请你一起来聊聊，你在碰到网络的性能问题时，是怎么解决的？你可以结合今天的内容，从应用程序、套接字等方面，来总结自己的思路。</p><p>欢迎在留言区和我讨论，也欢迎把这篇文章分享给你的同事、朋友。我们一起在实战中演练，在交流中进步。</p><p></p>","comments":[{"had_liked":false,"id":71767,"user_name":"分清云淡","can_delete":false,"product_type":"c1","uid":1269873,"ip_address":"","ucode":"7045AE6BF72D31","user_header":"https://static001.geekbang.org/account/avatar/00/13/60/71/895ee6cf.jpg","comment_is_top":false,"comment_ctime":1551428346,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"207709858554","product_id":100020901,"comment_content":"网络学习吃力的同学，先去把林沛满老师两本Wireshark分析网络看完，不建议一上来直接看TCP、IP两卷，之所以吃力就是纯理论看起来没有体感，理解不深，看完就忘记了。而WireShark书帮我们增加了体感","like_count":49,"discussions":[{"author":{"id":1000004,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/42/44/d3d67640.jpg","nickname":"Hills录","note":"","ucode":"779020947ACABA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":214828,"discussion_content":"微信读书可以看","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1585235587,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1269873,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/71/895ee6cf.jpg","nickname":"分清云淡","note":"","ucode":"7045AE6BF72D31","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1000004,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/42/44/d3d67640.jpg","nickname":"Hills录","note":"","ucode":"779020947ACABA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366835,"discussion_content":"得电脑，还要打开Wireshark对着看，微信读书看这种书就是浪费时间","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1618203257,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":214828,"ip_address":""},"score":366835,"extra":""}]},{"author":{"id":1284474,"avatar":"https://static001.geekbang.org/account/avatar/00/13/99/7a/558666a5.jpg","nickname":"AceslupK","note":"","ucode":"048F84D019CBBB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394199,"discussion_content":"感谢分享学习经验","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631780278,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1026042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a7/fa/1dca9fd5.jpg","nickname":"王星旗","note":"","ucode":"F1C742527D3A05","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":11872,"discussion_content":"感谢分享这么有价值的书","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568439144,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81502,"user_name":"allan","can_delete":false,"product_type":"c1","uid":1142819,"ip_address":"","ucode":"CA0BE868AA9FF5","user_header":"https://static001.geekbang.org/account/avatar/00/11/70/23/972dcd30.jpg","comment_is_top":false,"comment_ctime":1553928644,"is_pvip":false,"replies":[{"id":"29577","content":"是的，内核选项的范围是全局的，套接字接口里面设置的是单个<br>","user_name":"作者回复","comment_id":81502,"uid":"1001282","ip_address":"","utype":1,"ctime":1554001367,"user_name_real":"倪朋飞"}],"discussion_count":3,"race_medal":0,"score":"44503601604","product_id":100020901,"comment_content":"老师，您好，问一下  套接字接收发送缓冲区和TCP接收发送缓冲区，是相同的吗？我的理解这两个应该是相同的缓冲区，只是套接字选项的设置是针对单个套接字，而对 TCP接收发送缓冲区的设置，针对的是 全局的所有套接字 ，是这样理解吗？请老师指教。","like_count":11,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445231,"discussion_content":"是的，内核选项的范围是全局的，套接字接口里面设置的是单个\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554001367,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1803259,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/83/fb/621adceb.jpg","nickname":"linker","note":"","ucode":"6C5799F2FC2C82","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":217739,"discussion_content":"不一样，一个是udp,一个是tcp","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585578669,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1086235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/93/1b/bf902c9d.jpg","nickname":"aliuql","note":"","ucode":"FCF6CEC8138A94","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3575,"discussion_content":"老师，那net.core.rmem_max和net.ipv4.tcp_rmem这两参数是针对同一个缓冲区的么？如果是同一个缓冲区，这两个参数的区别是什么呀？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564615922,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115402,"user_name":"耿长学","can_delete":false,"product_type":"c1","uid":1309948,"ip_address":"","ucode":"C7A262812854D4","user_header":"https://static001.geekbang.org/account/avatar/00/13/fc/fc/1e235814.jpg","comment_is_top":false,"comment_ctime":1563576942,"is_pvip":false,"replies":[{"id":"42487","content":"cat &#47;proc&#47;sys&#47;net&#47;ipv4&#47;tcp_mem 查看配置<br>cat &#47;proc&#47;net&#47;sockstat 查看当前tcp的统计<br><br>然后可以通过 sysctl -w net.ipv4.tcp_mem=新配置 来增大<br>","user_name":"作者回复","comment_id":115402,"uid":"1001282","ip_address":"","utype":1,"ctime":1563805315,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"40218282606","product_id":100020901,"comment_content":"老师，我想咨询下tcp_mem满了如何排查，tcp_mem满了之后新的连接进不来，dmesg看到有tcp_mem：out of mem的提示","like_count":10,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459090,"discussion_content":"cat /proc/sys/net/ipv4/tcp_mem 查看配置\ncat /proc/net/sockstat 查看当前tcp的统计\n\n然后可以通过 sysctl -w net.ipv4.tcp_mem=新配置 来增大\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563805315,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71592,"user_name":"ninuxer","can_delete":false,"product_type":"c1","uid":1243135,"ip_address":"","ucode":"5394ADAF2667D6","user_header":"https://wx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKQMM4m7NHuicr55aRiblTSEWIYe0QqbpyHweaoAbG7j2v7UUElqqeP3Ihrm3UfDPDRb1Hv8LvPwXqA/132","comment_is_top":false,"comment_ctime":1551399086,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31616170158","product_id":100020901,"comment_content":"打卡day45<br>套路篇总是干货满满，只能靠死记硬背了<br>网络是我的硬伤，而且看网络的书，比如 tcp&#47;ip协议卷 总是没办法啃到底～最高峰也才看到一百六十多页😳","like_count":8},{"had_liked":false,"id":78079,"user_name":"青石","can_delete":false,"product_type":"c1","uid":1215531,"ip_address":"","ucode":"B0056AD6453322","user_header":"https://static001.geekbang.org/account/avatar/00/12/8c/2b/3ab96998.jpg","comment_is_top":false,"comment_ctime":1553067661,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23027904141","product_id":100020901,"comment_content":"做视频业务时，公司产品Recorder用来收录组播视频源，收录下来的视频每间隔一段时间就会出现马赛克问题。<br><br>最初从日志和监控中，发现出现马赛克的时间点，进程在做写操作，同时监控上的磁盘IO也比较大，但并没有达到瓶颈。<br><br>后来发现网卡UDP的packet receive errors不断增大。和研发确认后，代码上接收和写是同一个进程。当时怀疑的原因是，使用同步IO导致进程阻塞，阻塞时间长导致接收缓慢，UDP缓存被占满直接丢包，调大UDP的缓冲区后，也只是缓解问题发生的频率，并没有解决。和研发提出改成异步IO，研发直接拒绝，现场自己想办法。<br><br>没办法，只能申请服务器，增加收录服务器数量、调大缓冲区，降低磁盘IO，减少问题出现的概率。","like_count":6},{"had_liked":false,"id":71655,"user_name":"明翼","can_delete":false,"product_type":"c1","uid":1068361,"ip_address":"","ucode":"E77F86BEB3D5C1","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/49/28e73b9c.jpg","comment_is_top":false,"comment_ctime":1551407867,"is_pvip":false,"replies":[{"id":"26309","content":"我们专栏有个微信群可以加入","user_name":"作者回复","comment_id":71655,"uid":"1001282","ip_address":"","utype":1,"ctime":1551703673,"user_name_real":"倪朋飞"}],"discussion_count":7,"race_medal":0,"score":"23026244347","product_id":100020901,"comment_content":"跟上了，但是看的有点粗，这个系列我要多看几遍，性能问题无非CPU 内存 IO 网络，感谢老师的课程，对这类问题心理有底了，很喜欢去挑战问题了😁好想加老师微信，大神可以不😳","like_count":6,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441258,"discussion_content":"我们专栏有个微信群可以加入","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551703673,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":272355,"discussion_content":"加我微信吧 feisky","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1590292864,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1314794,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0f/ea/1c46a958.jpg","nickname":"大黄喵","note":"","ucode":"C993C43991F583","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366355,"discussion_content":"请问群号多少","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618042138,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1827961,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/e4/79/0f0114ba.jpg","nickname":"taochao_zs","note":"","ucode":"77382AB0B3CC0E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":346918,"discussion_content":"群号多少","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612098375,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1339022,"avatar":"https://static001.geekbang.org/account/avatar/00/14/6e/8e/5d309a85.jpg","nickname":"拯救地球好累","note":"","ucode":"7643439601EF4C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":98620,"discussion_content":"求群号","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577178173,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1068361,"avatar":"https://static001.geekbang.org/account/avatar/00/10/4d/49/28e73b9c.jpg","nickname":"明翼","note":"","ucode":"E77F86BEB3D5C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45806,"discussion_content":"老师群号多少一直没找到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573087991,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1000439,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/43/f7/abb7bfe3.jpg","nickname":"刘冲","note":"","ucode":"0C4F66921AE76C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43846,"discussion_content":"微信群号麻烦大神发下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572913078,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71798,"user_name":"夜空中最亮的星","can_delete":false,"product_type":"c1","uid":1267566,"ip_address":"","ucode":"ADC3E7B6789955","user_header":"https://static001.geekbang.org/account/avatar/00/13/57/6e/b6795c44.jpg","comment_is_top":false,"comment_ctime":1551436574,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14436338462","product_id":100020901,"comment_content":"老师的套路总结，整理的表格太棒了！","like_count":3},{"had_liked":false,"id":71714,"user_name":"腾达","can_delete":false,"product_type":"c1","uid":1079876,"ip_address":"","ucode":"72F9CFBA44FDEE","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL9hlAIKQ1sGDu16oWLOHyCSicr18XibygQSMLMjuDvKk73deDlH9aMphFsj41WYJh121aniaqBLiaMNg/132","comment_is_top":false,"comment_ctime":1551419703,"is_pvip":false,"replies":[{"id":"26318","content":"可以通过 &#47;proc&#47;net&#47;sockstat、ss 这些工具来查看。图形界面也有很多，不过一般都是内置在监控系统里面，通过 Web 的方式来展示。比如 zabbix、Nagios等等","user_name":"作者回复","comment_id":71714,"uid":"1001282","ip_address":"","utype":1,"ctime":1551704921,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"14436321591","product_id":100020901,"comment_content":"tcp_rmem、 tcp_wmem以及其他几个所对应的缓冲区的使用情况，有工具可以查看吗？ 像类似“watch -d cat &#47;proc&#47;softirqs” 这样可以观察到缓冲区的变化。另外有图形界面工具吗？查看套接字缓冲区、TCP缓冲区大小变化的图形工具？ 另外再问一下，套接字缓冲区、TCP缓冲区 这2个有什么区别吗？<br>","like_count":4,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441292,"discussion_content":"可以通过 /proc/net/sockstat、ss 这些工具来查看。图形界面也有很多，不过一般都是内置在监控系统里面，通过 Web 的方式来展示。比如 zabbix、Nagios等等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551704921,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72117,"user_name":"xfan","can_delete":false,"product_type":"c1","uid":1315147,"ip_address":"","ucode":"48ED8D498D7F56","user_header":"https://static001.geekbang.org/account/avatar/00/14/11/4b/fa64f061.jpg","comment_is_top":false,"comment_ctime":1551524197,"is_pvip":false,"replies":[{"id":"26327","content":"可以去参考一下XDP的文档https:&#47;&#47;prototype-kernel.readthedocs.io&#47;en&#47;latest&#47;networking&#47;XDP&#47;index.html","user_name":"作者回复","comment_id":72117,"uid":"1001282","ip_address":"","utype":1,"ctime":1551706230,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"10141458789","product_id":100020901,"comment_content":"老师，我是用bpftools生成了一个过滤规则的字节码bytecode，bpfgen dns -- *.www.example.uk，这个规则怎么样加到网卡驱动上去呢，就是怎么安装到 linux18.04 上去呢.我知道load_bpf_file 这个方法，但是我在哪调用呢，老师给我一个思路，我想自己实现一套关于动态使用XDP拦截包的项目","like_count":3,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441467,"discussion_content":"可以去参考一下XDP的文档https://prototype-kernel.readthedocs.io/en/latest/networking/XDP/index.html","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551706230,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":212568,"user_name":"lupguo","can_delete":false,"product_type":"c1","uid":1009098,"ip_address":"","ucode":"1B55A01DF78647","user_header":"https://static001.geekbang.org/account/avatar/00/0f/65/ca/38dcd55a.jpg","comment_is_top":false,"comment_ctime":1588151111,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5883118407","product_id":100020901,"comment_content":"关于套接字缓存Buffer的补充下man tcp的信息：<br>1. 滑动窗口支持 &gt; 64k的TCP窗口，支持高时延链接；默认缓冲区大小受全局&#47;proc&#47;sys&#47;net&#47;ipv4&#47;tcp_wmem、&#47;proc&#47;sys&#47;net&#47;ipv4&#47;tcp_rmem限制，针对单个套接字链接，可以基于SO_SNDBUF和SO_RCVBUF来设置（需要在调用connect或listen之前通过setsockopt设置）；<br>2. 套接字的缓冲区SO_SNDBUF和SO_RCVBUFF最大值，受&#47;proc&#47;sys&#47;net&#47;core&#47;rmem_max、&#47;proc&#47;sys&#47;net&#47;core&#47;wmem_max内核限制<br>3. 通过setsockopt设置的缓存区实际内核分配的空间是两倍设置的大小<br>4. 不要随意设置套接字的SO_SNDBUF和SO_RCVBUFF，内核方面的自动调控效果比配置的要好，具体调整范围tcp_wmem [min,default,max]","like_count":2},{"had_liked":false,"id":74307,"user_name":"cliff(亮剑)","can_delete":false,"product_type":"c1","uid":1314866,"ip_address":"","ucode":"A8D1A92331AE20","user_header":"https://static001.geekbang.org/account/avatar/00/14/10/32/e37aacfe.jpg","comment_is_top":false,"comment_ctime":1552185808,"is_pvip":false,"replies":[{"id":"27334","content":"内核配置选项是全局的，对所有socket生效；系统调用针对的是单个socket，他们的总和受限于内核配置","user_name":"作者回复","comment_id":74307,"uid":"1001282","ip_address":"","utype":1,"ctime":1552349555,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"5847153104","product_id":100020901,"comment_content":"老师好， 说实在，学了两边还是不明白如下数据之间的关系：<br><br>SO_RCVBUFF, net&#47;core&#47;optmem_max，<br>net&#47;core&#47;rmem_max，<br>net&#47;ipv4&#47;tcp_rmem 和net&#47;ipv4&#47;tcp_mem<br><br>比如有如下的测试环境：<br>1）服务器端:<br>应用程序开了10个tcp服务器socket，每个设置10K SO_RCVBUFF<br>设置系统参数如下:<br>net&#47;core&#47;optmem_max = 10K<br>net&#47;core&#47;rmem_max =100K<br>net&#47;ipv4&#47;tcp_rmem 4k  16K 80K<br>net&#47;ipv4&#47;tcp_mem  40K  50K 120K<br>2）客户端轮流发送TCP消息给服务器:<br>那假设服务器的应用忙， 所有10个TCP的buffer能缓存100K的TCP数据么？<br>如果不能， 如何调整系统参数可以满足缓存100K的数据？<br>先谢谢老师","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442520,"discussion_content":"内核配置选项是全局的，对所有socket生效；系统调用针对的是单个socket，他们的总和受限于内核配置","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552349555,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72360,"user_name":"J!","can_delete":false,"product_type":"c1","uid":1305003,"ip_address":"","ucode":"71C946119B59D1","user_header":"https://static001.geekbang.org/account/avatar/00/13/e9/ab/37903736.jpg","comment_is_top":false,"comment_ctime":1551596857,"is_pvip":false,"replies":[{"id":"26329","content":"系统会回收掉","user_name":"作者回复","comment_id":72360,"uid":"1001282","ip_address":"","utype":1,"ctime":1551706458,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"5846564153","product_id":100020901,"comment_content":"对于kill -9 进程这样的情况，已建立的tcp连接如何处理，还是由操作系统主动回收？","like_count":2,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441557,"discussion_content":"系统会回收掉","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551706458,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71841,"user_name":"科学Jia","can_delete":false,"product_type":"c1","uid":1080409,"ip_address":"","ucode":"95430413F82A69","user_header":"https://static001.geekbang.org/account/avatar/00/10/7c/59/26b1e65a.jpg","comment_is_top":false,"comment_ctime":1551449280,"is_pvip":false,"replies":[{"id":"26322","content":"实际上没有通用的方法，uprobe应该是可以用的，不过使用起来还是比较麻烦的。推荐的做法是在应用内部提供metrics 接口，这个接口内部统计每个方法的调用情况。","user_name":"作者回复","comment_id":71841,"uid":"1001282","ip_address":"","utype":1,"ctime":1551705344,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"5846416576","product_id":100020901,"comment_content":"老师，想问问您：现在我遇到应用程序在负载测试中可能处理速度慢造成了消息响应延迟，我该用什么方法或者工具去查看这个应用程序里每个方法的时间调用？像perf这个工具可以看每个调用方法的cpu利用率一样？","like_count":2,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441354,"discussion_content":"实际上没有通用的方法，uprobe应该是可以用的，不过使用起来还是比较麻烦的。推荐的做法是在应用内部提供metrics 接口，这个接口内部统计每个方法的调用情况。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551705344,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71685,"user_name":"我来也","can_delete":false,"product_type":"c1","uid":1205253,"ip_address":"","ucode":"773D6104F56767","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","comment_is_top":false,"comment_ctime":1551413267,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5846380563","product_id":100020901,"comment_content":"[D43打卡]<br>又开始套路咯。好好收藏。<br>网络接收&#47;发送流程 图片画的很直观。😄<br>","like_count":1},{"had_liked":false,"id":71677,"user_name":"怀特","can_delete":false,"product_type":"c1","uid":1072331,"ip_address":"","ucode":"3DACB205798ED3","user_header":"https://static001.geekbang.org/account/avatar/00/10/5c/cb/3ebdcc49.jpg","comment_is_top":false,"comment_ctime":1551410362,"is_pvip":true,"replies":[{"id":"26312","content":"不一定非要异步，但非阻塞、epoll 是比较通用的网络性能优化方法","user_name":"作者回复","comment_id":71677,"uid":"1001282","ip_address":"","utype":1,"ctime":1551704395,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"5846377658","product_id":100020901,"comment_content":"      我之前做过一个优化项目。该项目需要实现一个C&#47;S结构的程序，发送URL给服务器，服务器返回URL的类别，比如属于军事，还是属于体育。<br>      当时在局域网环境下，性能较差，我经过分析之后，“感觉“瓶颈在网络，是因为每个包的有效负载太小，所以改进策略是将多个url拼接在一起再发送出去，然后解析返回的结果给每个url。拼接过程和解析过程都是我自己实现的。<br>      听了倪工的讲座，再回顾当时的实现，能看到当时的不足：我找到了问题的症结所在，但却用了很笨的实现方法来改进。貌似在套接字层增加TCP_CORE，然后在应用程序层将处理改为异步非阻塞的，就可以了吧？<br>      收获颇多，谢谢倪工。","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441271,"discussion_content":"不一定非要异步，但非阻塞、epoll 是比较通用的网络性能优化方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551704395,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":315935,"user_name":"Helios","can_delete":false,"product_type":"c1","uid":1380758,"ip_address":"","ucode":"BE6B98EE8F0D09","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKJrOl63enWXCRxN0SoucliclBme0qrRb19ATrWIOIvibKIz8UAuVgicBMibIVUznerHnjotI4dm6ibODA/132","comment_is_top":false,"comment_ctime":1634053061,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634053061","product_id":100020901,"comment_content":"请问老师socket的缓冲区大小适用于Unix domain socket么","like_count":0},{"had_liked":false,"id":244726,"user_name":"永华","can_delete":false,"product_type":"c1","uid":2074095,"ip_address":"","ucode":"23BAB07BC3E103","user_header":"https://static001.geekbang.org/account/avatar/00/1f/a5/ef/22e92738.jpg","comment_is_top":false,"comment_ctime":1598632450,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1598632450","product_id":100020901,"comment_content":"老师请教一下，为什么Spring boot项目中，用curl去产生一个tomcat线程执行一个长时间任务（tomcat没有别的请求），会io明显忙于 jdk线程池起的一个线程做同样的任务，目前没有好的思路，我任务都是单线程执行理论时间都差不多，测试环境在没有任何访问的情况下也是同样的复现。访问方式是jpa访问的oracle。","like_count":0,"discussions":[{"author":{"id":1959822,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/e7/8e/318cfde0.jpg","nickname":"Spoon","note":"","ucode":"2FF9193AD482C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335927,"discussion_content":"IO明显忙于JDK线程池起一个线程做同样任务，这里IO明显忙于你是用什么指标去衡量的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608386252,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":224866,"user_name":"妥协","can_delete":false,"product_type":"c1","uid":1249656,"ip_address":"","ucode":"7201DFE9C12669","user_header":"https://static001.geekbang.org/account/avatar/00/13/11/78/4f0cd172.jpg","comment_is_top":false,"comment_ctime":1591579300,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1591579300","product_id":100020901,"comment_content":"看了文章和留言，对套接字读写缓存区和TCP读写缓存区，还是有些疑问，老师留言回复中：内核选项的范围是全局的，套接字接口里面设置的是单个。而老师截图中的套接字内核选项列表，里面都是内核的。套接字读写缓存区和TCP读写缓存区是什么关系，有哪些差异呢。我理解是一个TCP连接对应一个读写缓存区，而UDP只有读缓存区，老师指的是指针全局的，我理解是对于每一个TCP连接或者UDP都是生效的，但是针对单个生效是啥意思？","like_count":0,"discussions":[{"author":{"id":1959822,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/e7/8e/318cfde0.jpg","nickname":"Spoon","note":"","ucode":"2FF9193AD482C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335928,"discussion_content":"是调用系统API进行设置，应该是用户设置会覆盖默认设置，可以参看下UNIX网络编程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608386317,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":199705,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1119593,"ip_address":"","ucode":"94656FE4A6C378","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","comment_is_top":false,"comment_ctime":1585494178,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1585494178","product_id":100020901,"comment_content":"网络基础理论相关的知识真的是硬伤！","like_count":0},{"had_liked":false,"id":192637,"user_name":"201200986","can_delete":false,"product_type":"c1","uid":1900861,"ip_address":"","ucode":"6042C42D1C904E","user_header":"","comment_is_top":false,"comment_ctime":1584864762,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584864762","product_id":100020901,"comment_content":"实际中发现什么瓶颈点需要调节套接字的设置选项呢？我在实际的业务中发现网络带宽利用率很高，但是调节这些参数没有什么作用","like_count":0},{"had_liked":false,"id":184617,"user_name":"gamefu","can_delete":false,"product_type":"c1","uid":1210031,"ip_address":"","ucode":"0446E369725FD7","user_header":"https://static001.geekbang.org/account/avatar/00/12/76/af/96f9893f.jpg","comment_is_top":false,"comment_ctime":1583371878,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583371878","product_id":100020901,"comment_content":"老师，想请教个问题，如何判断tcp协议栈缓冲区和套接字缓冲区到瓶颈了？","like_count":0},{"had_liked":false,"id":96802,"user_name":"zhoufeng","can_delete":false,"product_type":"c1","uid":1447741,"ip_address":"","ucode":"6F92F7866F9EB4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKq0oQVibKcmYJqmpqaNNQibVgia7EsEgW65LZJIpDZBMc7FyMcs7J1JmFCtp06pY8ibbcpW4ibRtG7Frg/132","comment_is_top":false,"comment_ctime":1558511371,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558511371","product_id":100020901,"comment_content":"老师好，<br>请教下读缓冲区和接收窗口、写缓冲区和发送窗口之间是否有关系？我分不清他们之间的区别。<br>谢谢。","like_count":0},{"had_liked":false,"id":91988,"user_name":"ThinkerWalker","can_delete":false,"product_type":"c1","uid":1317111,"ip_address":"","ucode":"8CD44FFC37ACB7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/rQOn22bNV0kHpoPWRLRicjQCOkiaYmcVABiaIJxIDWIibSdqWXYTxjcdjiadibIxFsGVp5UE4DBd6Nx2DxjhAdlMIZeQ/132","comment_is_top":false,"comment_ctime":1557149787,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557149787","product_id":100020901,"comment_content":"你好老师，不太理解套接字收发缓冲区和tcp收发缓冲区的区别，麻烦详细讲解一下。","like_count":0},{"had_liked":false,"id":90507,"user_name":"tinsang","can_delete":false,"product_type":"c1","uid":1066414,"ip_address":"","ucode":"89AE9D3837BEFA","user_header":"https://static001.geekbang.org/account/avatar/00/10/45/ae/a213a2a3.jpg","comment_is_top":false,"comment_ctime":1556539972,"is_pvip":false,"replies":[{"id":"32526","content":"请参考I&#47;O模块排查IO问题","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1556633882,"ip_address":"","comment_id":90507,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1556539972","product_id":100020901,"comment_content":"你好 项目里发现个问题，服务器centos6.5开启tcp服务，客户端每秒100个请求，发现io负载偏高，当前服务端只是接收请求计算 ，cpu使用率也很低，请问如何去定位问题呢","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448549,"discussion_content":"请参考I/O模块排查IO问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556633882,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":89400,"user_name":"东宇","can_delete":false,"product_type":"c1","uid":1118347,"ip_address":"","ucode":"2F0A8C67D55B5C","user_header":"https://static001.geekbang.org/account/avatar/00/11/10/8b/7e84507c.jpg","comment_is_top":false,"comment_ctime":1556164133,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1556164133","product_id":100020901,"comment_content":"您好老师，我想咨询下 我们的接受程序A是10个线程，每个线程又连接90个程序B，每个线程连接90个程序B都是相同的，程序A也是个接受程序，现在发现程序A的socket的tcp接受缓存出现堵的现象，而且tcp缓存不变化，我想咨询下，如果程序A不连接程序B，tcp不会出现堵，是socket数量太多，导致tcp缓存堵吗。","like_count":0,"discussions":[{"author":{"id":1959822,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/e7/8e/318cfde0.jpg","nickname":"Spoon","note":"","ucode":"2FF9193AD482C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335929,"discussion_content":"感觉瓶颈出现在连接90个程序B处，换句话说就是业务逻辑处理事件过长，导致tcp全连接队列中堆积了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608386496,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":84585,"user_name":"如果","can_delete":false,"product_type":"c1","uid":1320638,"ip_address":"","ucode":"138A3EEEE50850","user_header":"","comment_is_top":false,"comment_ctime":1554880132,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554880132","product_id":100020901,"comment_content":"DAY43，打卡","like_count":0},{"had_liked":false,"id":79415,"user_name":"Maxwell","can_delete":false,"product_type":"c1","uid":1086275,"ip_address":"","ucode":"720A00AD472616","user_header":"https://static001.geekbang.org/account/avatar/00/10/93/43/0e84492d.jpg","comment_is_top":false,"comment_ctime":1553478024,"is_pvip":false,"replies":[{"id":"29339","content":"线程数还受限于CPU，不只是网络带宽","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1553698735,"ip_address":"","comment_id":79415,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553478024","product_id":100020901,"comment_content":"iperf测试的网络带宽是1G,那如果1个线程需要消耗2mb,压测的时候是不是就可以支持500个线程？也就是说超过500线程网络就成为瓶颈了？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444491,"discussion_content":"线程数还受限于CPU，不只是网络带宽","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553698735,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73927,"user_name":"dancer","can_delete":false,"product_type":"c1","uid":1019036,"ip_address":"","ucode":"B8D5641A3AC490","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/9c/d48473ab.jpg","comment_is_top":false,"comment_ctime":1552036073,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552036073","product_id":100020901,"comment_content":"老师的小表格和小抄差不多了，打印出来贴在办公桌上","like_count":0},{"had_liked":false,"id":72891,"user_name":"xfan","can_delete":false,"product_type":"c1","uid":1315147,"ip_address":"","ucode":"48ED8D498D7F56","user_header":"https://static001.geekbang.org/account/avatar/00/14/11/4b/fa64f061.jpg","comment_is_top":false,"comment_ctime":1551751312,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551751312","product_id":100020901,"comment_content":"文档很详细，感谢","like_count":0}]}