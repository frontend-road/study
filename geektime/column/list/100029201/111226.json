{"id":111226,"title":"25 | 消费者组重平衡全流程解析","content":"<p>你好，我是胡夕。今天我要和你分享的主题是：消费者组重平衡全流程解析。</p><p>之前我们聊到过消费者组的重平衡流程，它的作用是让组内所有的消费者实例就消费哪些主题分区达成一致。重平衡需要借助Kafka Broker端的Coordinator组件，在Coordinator的帮助下完成整个消费者组的分区重分配。今天我们就来详细说说这个流程。</p><p>先提示一下，我会以Kafka 2.3版本的源代码开启今天的讲述。在分享的过程中，对于旧版本的设计差异，我也会显式地说明。这样，即使你依然在使用比较旧的版本也不打紧，毕竟设计原理大体上是没有变化的。</p><h2>触发与通知</h2><p>我们先来简单回顾一下重平衡的3个触发条件：</p><ol>\n<li>组成员数量发生变化。</li>\n<li>订阅主题数量发生变化。</li>\n<li>订阅主题的分区数发生变化。</li>\n</ol><p>就我个人的经验来看，在实际生产环境中，因命中第1个条件而引发的重平衡是最常见的。另外，消费者组中的消费者实例依次启动也属于第1种情况，也就是说，每次消费者组启动时，必然会触发重平衡过程。</p><p>这部分内容我在专栏<a href=\"https://time.geekbang.org/column/article/105112\">第15讲</a>中已经详细介绍过了，就不再赘述了。如果你不记得的话，可以先去复习一下。</p><p>今天，我真正想引出的是另一个话题：<strong>重平衡过程是如何通知到其他消费者实例的？答案就是，靠消费者端的心跳线程（Heartbeat Thread）</strong>。</p><!-- [[[read_end]]] --><p>Kafka Java消费者需要定期地发送心跳请求（Heartbeat Request）到Broker端的协调者，以表明它还存活着。在Kafka 0.10.1.0版本之前，发送心跳请求是在<strong>消费者主线程</strong>完成的，也就是你写代码调用KafkaConsumer.poll方法的那个线程。</p><p>这样做有诸多弊病，最大的问题在于，<strong>消息处理逻辑也是在这个线程中完成的</strong>。因此，一旦消息处理消耗了过长的时间，心跳请求将无法及时发到协调者那里，导致协调者“错误地”认为该消费者已“死”。自0.10.1.0版本开始，社区引入了一个单独的心跳线程来专门执行心跳请求发送，避免了这个问题。</p><p>但这和重平衡又有什么关系呢？其实，<strong>重平衡的通知机制正是通过心跳线程来完成的</strong>。当协调者决定开启新一轮重平衡后，它会将“<strong>REBALANCE_IN_PROGRESS</strong>”封装进心跳请求的响应中，发还给消费者实例。当消费者实例发现心跳响应中包含了“REBALANCE_IN_PROGRESS”，就能立马知道重平衡又开始了，这就是重平衡的通知机制。</p><p>对了，很多人还搞不清楚消费者端参数heartbeat.interval.ms的真实用途，我来解释一下。从字面上看，它就是设置了心跳的间隔时间，但这个参数的真正作用是控制重平衡通知的频率。如果你想要消费者实例更迅速地得到通知，那么就可以给这个参数设置一个非常小的值，这样消费者就能更快地感知到重平衡已经开启了。</p><h2>消费者组状态机</h2><p>重平衡一旦开启，Broker端的协调者组件就要开始忙了，主要涉及到控制消费者组的状态流转。当前，Kafka设计了一套消费者组状态机（State Machine），来帮助协调者完成整个重平衡流程。严格来说，这套状态机属于非常底层的设计，Kafka官网上压根就没有提到过，但你最好还是了解一下，因为<strong>它能够帮助你搞懂消费者组的设计原理，比如消费者组的过期位移（Expired Offsets）删除等</strong>。</p><p>目前，Kafka为消费者组定义了5种状态，它们分别是：Empty、Dead、PreparingRebalance、CompletingRebalance和Stable。那么，这5种状态的含义是什么呢？我们一起来看看下面这张表格。</p><p><img src=\"https://static001.geekbang.org/resource/image/3c/8b/3c281189cfb1d87173bc2d4b8149f38b.jpeg?wh=529*414\" alt=\"\"></p><p>了解了这些状态的含义之后，我们来看一张图片，它展示了状态机的各个状态流转。</p><p><img src=\"https://static001.geekbang.org/resource/image/a9/72/a97eb0e0ee2b97abaf2762b6e79d5b72.jpg?wh=3580*1505\" alt=\"\"></p><p>我来解释一下消费者组启动时的状态流转过程。一个消费者组最开始是Empty状态，当重平衡过程开启后，它会被置于PreparingRebalance状态等待成员加入，之后变更到CompletingRebalance状态等待分配方案，最后流转到Stable状态完成重平衡。</p><p>当有新成员加入或已有成员退出时，消费者组的状态从Stable直接跳到PreparingRebalance状态，此时，所有现存成员就必须重新申请加入组。当所有成员都退出组后，消费者组状态变更为Empty。Kafka定期自动删除过期位移的条件就是，组要处于Empty状态。因此，如果你的消费者组停掉了很长时间（超过7天），那么Kafka很可能就把该组的位移数据删除了。我相信，你在Kafka的日志中一定经常看到下面这个输出：</p><blockquote>\n<p><em>Removed ✘✘✘ expired offsets in ✘✘✘ milliseconds.</em></p>\n</blockquote><p>这就是Kafka在尝试定期删除过期位移。现在你知道了，只有Empty状态下的组，才会执行过期位移删除的操作。</p><h2>消费者端重平衡流程</h2><p>有了上面的内容作铺垫，我们就可以开始介绍重平衡流程了。重平衡的完整流程需要消费者端和协调者组件共同参与才能完成。我们先从消费者的视角来审视一下重平衡的流程。</p><p>在消费者端，重平衡分为两个步骤：分别是加入组和等待领导者消费者（Leader Consumer）分配方案。这两个步骤分别对应两类特定的请求：<strong>JoinGroup请求和SyncGroup请求</strong>。</p><p>当组内成员加入组时，它会向协调者发送JoinGroup请求。在该请求中，每个成员都要将自己订阅的主题上报，这样协调者就能收集到所有成员的订阅信息。一旦收集了全部成员的JoinGroup请求后，协调者会从这些成员中选择一个担任这个消费者组的领导者。</p><p>通常情况下，第一个发送JoinGroup请求的成员自动成为领导者。你一定要注意区分这里的领导者和之前我们介绍的领导者副本，它们不是一个概念。这里的领导者是具体的消费者实例，它既不是副本，也不是协调者。<strong>领导者消费者的任务是收集所有成员的订阅信息，然后根据这些信息，制定具体的分区消费分配方案。</strong></p><p>选出领导者之后，协调者会把消费者组订阅信息封装进JoinGroup请求的响应体中，然后发给领导者，由领导者统一做出分配方案后，进入到下一步：发送SyncGroup请求。</p><p>在这一步中，领导者向协调者发送SyncGroup请求，将刚刚做出的分配方案发给协调者。值得注意的是，其他成员也会向协调者发送SyncGroup请求，只不过请求体中并没有实际的内容。这一步的主要目的是让协调者接收分配方案，然后统一以SyncGroup响应的方式分发给所有成员，这样组内所有成员就都知道自己该消费哪些分区了。</p><p>接下来，我用一张图来形象地说明一下JoinGroup请求的处理过程。</p><p><img src=\"https://static001.geekbang.org/resource/image/33/66/33cff6094ce29ec1111c8cdc817bb266.jpg?wh=3320*2005\" alt=\"\"></p><p>就像前面说的，JoinGroup请求的主要作用是将组成员订阅信息发送给领导者消费者，待领导者制定好分配方案后，重平衡流程进入到SyncGroup请求阶段。</p><p>下面这张图描述的是SyncGroup请求的处理流程。</p><p><img src=\"https://static001.geekbang.org/resource/image/84/5b/84b0ffeef5cc382913a4e6cc5a4c675b.jpg?wh=3305*1880\" alt=\"\"></p><p>SyncGroup请求的主要目的，就是让协调者把领导者制定的分配方案下发给各个组内成员。当所有成员都成功接收到分配方案后，消费者组进入到Stable状态，即开始正常的消费工作。</p><p>讲完这里，<strong>消费者端</strong>的重平衡流程我已经介绍完了。接下来，我们从<strong>协调者端</strong>来看一下重平衡是怎么执行的。</p><h2>Broker端重平衡场景剖析</h2><p>要剖析协调者端处理重平衡的全流程，我们必须要分几个场景来讨论。这几个场景分别是新成员加入组、组成员主动离组、组成员崩溃离组、组成员提交位移。接下来，我们一个一个来讨论。</p><p><strong>场景一：新成员入组。</strong></p><p>新成员入组是指组处于Stable状态后，有新成员加入。如果是全新启动一个消费者组，Kafka是有一些自己的小优化的，流程上会有些许的不同。我们这里讨论的是，组稳定了之后有新成员加入的情形。</p><p>当协调者收到新的JoinGroup请求后，它会通过心跳请求响应的方式通知组内现有的所有成员，强制它们开启新一轮的重平衡。具体的过程和之前的客户端重平衡流程是一样的。现在，我用一张时序图来说明协调者一端是如何处理新成员入组的。</p><p><img src=\"https://static001.geekbang.org/resource/image/27/7e/2792e00ac3206f63d8036802f4fbd77e.jpg?wh=5355*2670\" alt=\"\"></p><p><strong>场景二：组成员主动离组。</strong></p><p>何谓主动离组？就是指消费者实例所在线程或进程调用close()方法主动通知协调者它要退出。这个场景就涉及到了第三类请求：<strong>LeaveGroup请求</strong>。协调者收到LeaveGroup请求后，依然会以心跳响应的方式通知其他成员，因此我就不再赘述了，还是直接用一张图来说明。</p><p><img src=\"https://static001.geekbang.org/resource/image/b0/59/b0d3bc97d7b59a697yy043f1f6b79059.jpg?wh=5355*2670\" alt=\"\"></p><p><strong>场景三：组成员崩溃离组。</strong></p><p><strong>崩溃离组是指消费者实例出现严重故障，突然宕机导致的离组</strong>。它和主动离组是有区别的，因为后者是主动发起的离组，协调者能马上感知并处理。但崩溃离组是被动的，协调者通常需要等待一段时间才能感知到，这段时间一般是由消费者端参数session.timeout.ms控制的。也就是说，Kafka一般不会超过session.timeout.ms就能感知到这个崩溃。当然，后面处理崩溃离组的流程与之前是一样的，我们来看看下面这张图。</p><p><img src=\"https://static001.geekbang.org/resource/image/c0/af/c033ea2f7d714fa25eb86e21612e38af.jpg?wh=5355*2670\" alt=\"\"></p><p><strong>场景四：重平衡时协调者对组内成员提交位移的处理。</strong></p><p>正常情况下，每个组内成员都会定期汇报位移给协调者。当重平衡开启时，协调者会给予成员一段缓冲时间，要求每个成员必须在这段时间内快速地上报自己的位移信息，然后再开启正常的JoinGroup/SyncGroup请求发送。还是老办法，我们使用一张图来说明。</p><p><img src=\"https://static001.geekbang.org/resource/image/f6/44/f60a3852e743c0877753141ec5d2d944.jpg?wh=5355*2670\" alt=\"\"></p><h2>小结</h2><p>好了，消费者重平衡流程我已经全部讲完了。虽然全程我都是拿两个成员来举例子，但你可以很容易地扩展到多个成员的消费者组，毕竟它们的原理是相同的。我希望你能多看几遍今天的内容，彻底掌握Kafka的消费者重平衡流程。社区正在对目前的重平衡流程做较大程度的改动，如果你不了解这些基础的设计原理，后面想深入学习这部分内容的话，会十分困难。</p><p><img src=\"https://static001.geekbang.org/resource/image/6f/73/6f0aaf535180899b16923dc3c76ad373.jpg?wh=2069*2580\" alt=\"\"></p><h2>开放讨论</h2><p>在整个重平衡过程中，组内所有消费者实例都会暂停消费，用JVM GC的术语来说就是，重平衡过程是一个stop the world操作。请思考一下，针对这个问题，我们该如何改进这个过程？我们是否能允许部分消费者在重平衡过程中继续消费，以提升消费者端的可用性以及吞吐量？</p><p>欢迎写下你的思考和答案，我们一起讨论。如果你觉得有所收获，也欢迎把文章分享给你的朋友。</p>","comments":[{"had_liked":false,"id":119985,"user_name":"LRocccccc","can_delete":false,"product_type":"c1","uid":1182612,"ip_address":"","ucode":"F3919A0F05FC0D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er2mibdicqvLI9zA1q7cJDwibfgnnJwIau1Z2icg1VQUFnwSWbniaaY3eUyTia4MeRICchrUodXvLF6iajXQ/132","comment_is_top":true,"comment_ctime":1564744085,"is_pvip":false,"replies":[{"id":"44263","content":"嗯嗯，确实是。只是目前Kafka要求所有consumer都发送SyncGroup请求给Coordinator，因为分配方案只能通过SyncGroupResponse的方式获取。图中只是想表示这是一种机制，没有太区分consumer leader和其他consumer","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1564966551,"ip_address":"","comment_id":119985,"utype":1}],"discussion_count":6,"race_medal":0,"score":"9.2233720942541005e+18","product_id":100029201,"comment_content":"是我理解错了么？为什么场景一二三的图中的SyncGroup请求，都是等待Leader分配方案，leader不应该提供方案么？","like_count":13,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461161,"discussion_content":"嗯嗯，确实是。只是目前Kafka要求所有consumer都发送SyncGroup请求给Coordinator，因为分配方案只能通过SyncGroupResponse的方式获取。图中只是想表示这是一种机制，没有太区分consumer leader和其他consumer","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564966551,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1564544,"avatar":"https://static001.geekbang.org/account/avatar/00/17/df/80/5069bb27.jpg","nickname":"杨通","note":"","ucode":"C037B82EE04DBC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":158989,"discussion_content":"我咋感觉还是没明白说的是协调者提供的方案，还是consumer leader提供的方案。。。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1580646283,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1130590,"avatar":"https://static001.geekbang.org/account/avatar/00/11/40/5e/b8fada94.jpg","nickname":"Ryoma","note":"","ucode":"7F692369239692","race_medal":2,"user_type":1,"is_pvip":true},"reply_author":{"id":1564544,"avatar":"https://static001.geekbang.org/account/avatar/00/17/df/80/5069bb27.jpg","nickname":"杨通","note":"","ucode":"C037B82EE04DBC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":178329,"discussion_content":"是消费者 leader 提供的方案，这里老师简化了一下，更加强调了 SyncGroupResponse 的返回","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1582157841,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":158989,"ip_address":""},"score":178329,"extra":""},{"author":{"id":1346215,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","nickname":"William","note":"","ucode":"55F5D9DEE485B1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1564544,"avatar":"https://static001.geekbang.org/account/avatar/00/17/df/80/5069bb27.jpg","nickname":"杨通","note":"","ucode":"C037B82EE04DBC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545814,"discussion_content":"consumer leader 分配方案 告诉协调者，然后协调者再下发方案。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1642058610,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":158989,"ip_address":""},"score":545814,"extra":""}]},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578955,"discussion_content":"实际上是因为consumer之间是不可能互相通信的 通常不会这样设计。所以设计sync group这个阶段 让协调者也就是个broker做个广播而已。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657100832,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1097836,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c0/6c/29be1864.jpg","nickname":"随心而至","note":"","ucode":"31866865255101","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":223343,"discussion_content":"图中确实没有把消费者组consumer leader的syncgroup请求和一般的consumer的syncgroup请求分开对待","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586218411,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119432,"user_name":"rm -rf 😊ི","can_delete":false,"product_type":"c1","uid":1070908,"ip_address":"","ucode":"BC448EC4206D95","user_header":"https://static001.geekbang.org/account/avatar/00/10/57/3c/081b89ec.jpg","comment_is_top":true,"comment_ctime":1564586327,"is_pvip":false,"replies":[{"id":"43859","content":"只是想表明这是统一的一种机制。。。源代码中肯定没有这样的话。。。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1564627475,"ip_address":"","comment_id":119432,"utype":1}],"discussion_count":2,"race_medal":0,"score":"9.2233720513043005e+18","product_id":100029201,"comment_content":"老师，在Broker 端重平衡场景剖析这个第一个图里面，既然协调者说了成员2是这个组的leader，为啥成员2的SyncGroup请求会是”等待leader分配“？这是笔误吗？后面几幅图好像也这样。。。","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460903,"discussion_content":"只是想表明这是统一的一种机制。。。源代码中肯定没有这样的话。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564627475,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1547667,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9d/93/4159edaa.jpg","nickname":"朴素柠檬c","note":"","ucode":"2D4CBB70D801B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331099,"discussion_content":"应该按照文中内容顺，leader发送分配方案给协调者，协调者在响应分配方案给每个消费者","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1606788168,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":132043,"user_name":"DFighting","can_delete":false,"product_type":"c1","uid":1233193,"ip_address":"","ucode":"F3BA2426FF8582","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/29/1b1234ed.jpg","comment_is_top":false,"comment_ctime":1568012605,"is_pvip":true,"replies":[{"id":"50566","content":"嗯嗯，非常赞的思路。现在社区正在对rebalance进行改革中有很多思想和你也有重合之处。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1568078159,"ip_address":"","comment_id":132043,"utype":1}],"discussion_count":3,"race_medal":0,"score":"173366704445","product_id":100029201,"comment_content":"重平衡能不能参照JVM中的Minor gc和Major gc，将重平衡分为两步，在资源的角度讲集群进行分区，这里的资源可以理解为分区，因为后两种变化都是涉及到分区——新主题或已有主题的分区数量变化，对于现有的三种重平衡情况分别做如下处理：<br>1、新成员入区，在当前区内进行重平衡，不要影响其他的分区<br>2、资源分区中需要消费的分区队列数量发生的变化，也只是涉及到当前分区的重平衡。<br>这样设计的话就需要处理一个资源分区太空闲和太繁忙时的问题，我觉得可以参考m树的节点分裂和合并，这么做比m树更简单，因为它没有层级关系，只是资源分区的整合和划分而已，实现的时候还能兼顾到网络的局部特性，当然这只是初步想法，没有详细设计和验证，不知道有没有什么地方没有考虑周全，望老师能指点一二。","like_count":41,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466734,"discussion_content":"嗯嗯，非常赞的思路。现在社区正在对rebalance进行改革中有很多思想和你也有重合之处。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568078159,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1229314,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c2/02/f20e09c5.jpg","nickname":"张伟明","note":"","ucode":"E101C8E2833004","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578055,"discussion_content":"简直就是牛人","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656489514,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1066752,"avatar":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","nickname":"piboye","note":"","ucode":"7CFD8712857A85","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550484,"discussion_content":"什么时候改进啊？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644565508,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121054,"user_name":"Frank","can_delete":false,"product_type":"c1","uid":1419276,"ip_address":"","ucode":"FAACCA4E6D481F","user_header":"https://static001.geekbang.org/account/avatar/00/15/a8/0c/82ba8ef9.jpg","comment_is_top":false,"comment_ctime":1565053149,"is_pvip":false,"replies":[{"id":"44528","content":"客户端自己确定分配方案有很多好处。比如可以独立演进和上线，不依赖于服务器端","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1565071125,"ip_address":"","comment_id":121054,"utype":1}],"discussion_count":6,"race_medal":0,"score":"143298973917","product_id":100029201,"comment_content":"这节课，干货很多，我现在有个疑问，重平衡时需要从消费者实例中选择一个leader，让leader来发起重平衡方案，那为啥不直接让协调者组件来处理呢？","like_count":33,"discussions":[{"author":{"id":1179286,"avatar":"https://static001.geekbang.org/account/avatar/00/11/fe/96/806c4043.jpg","nickname":"秦始皇","note":"","ucode":"A45397B393F46B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298085,"discussion_content":"类似分配方案插件，插件可以实现自定义分配方案，只是这个插件同时是客户端，不用依赖服务端重启或者部署","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1597166423,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1339409,"avatar":"https://static001.geekbang.org/account/avatar/00/14/70/11/42cf8f9d.jpg","nickname":"chenjia","note":"","ucode":"61983C29FF4987","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1179286,"avatar":"https://static001.geekbang.org/account/avatar/00/11/fe/96/806c4043.jpg","nickname":"秦始皇","note":"","ucode":"A45397B393F46B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367715,"discussion_content":"这才是关键原因，否则自然设计肯定是协调者来分配","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618448232,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":298085,"ip_address":""},"score":367715,"extra":""}]},{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461596,"discussion_content":"客户端自己确定分配方案有很多好处。比如可以独立演进和上线，不依赖于服务器端","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1565071125,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2809887,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/e0/1f/de322ce3.jpg","nickname":"Harley","note":"","ucode":"F92472893F2156","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566314,"discussion_content":"相互独立","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650642141,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1017390,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/86/2e/abb7bfe3.jpg","nickname":"long","note":"","ucode":"EECEBE13FB0EB2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":209924,"discussion_content":"可以具体说明下、没太懂具体什么意思？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584690472,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1386201,"avatar":"https://static001.geekbang.org/account/avatar/00/15/26/d9/f7e96590.jpg","nickname":"yes","note":"","ucode":"612BF6884ED6CC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1017390,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/86/2e/abb7bfe3.jpg","nickname":"long","note":"","ucode":"EECEBE13FB0EB2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285048,"discussion_content":"就是客户端可以自定义分配方案，不依赖Broker分配。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1592721826,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":209924,"ip_address":""},"score":285048,"extra":""}]}]},{"had_liked":false,"id":119574,"user_name":"ban","can_delete":false,"product_type":"c1","uid":1034204,"ip_address":"","ucode":"E523CE97E48266","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c7/dc/9408c8c2.jpg","comment_is_top":false,"comment_ctime":1564628353,"is_pvip":false,"replies":[{"id":"43978","content":"每次consumer发送心跳时会顺带发送session timeout时间，这样Coordinator收到后会根据这个session timeout时间计算下次deadline时间，如果过了deadline还没有收到直接fail掉该consumer","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1564708547,"ip_address":"","comment_id":119574,"utype":1}],"discussion_count":4,"race_medal":0,"score":"126118679937","product_id":100029201,"comment_content":"不会超过 session.timeout.ms 就能感知<br><br>老师，请问下，消费者已经崩溃了，不会发送心跳，协调者这时候怎么做到能到session.timeout.ms感知的。","like_count":29,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460960,"discussion_content":"每次consumer发送心跳时会顺带发送session timeout时间，这样Coordinator收到后会根据这个session timeout时间计算下次deadline时间，如果过了deadline还没有收到直接fail掉该consumer","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564708547,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1361746,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c7/52/c5adf218.jpg","nickname":"喜欢地球的阿培同学","note":"","ucode":"5F97037585F857","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":269395,"discussion_content":"老师后面又回复了一次。作者回复: 这块需要更正一次，不是在心跳时携带的session timeout，这个时间在加入组的时候就已经发给Coordinator了。","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1589899824,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1103208,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d5/68/2201b6b9.jpg","nickname":"归零","note":"","ucode":"C99B8E93009A46","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1361746,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c7/52/c5adf218.jpg","nickname":"喜欢地球的阿培同学","note":"","ucode":"5F97037585F857","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348996,"discussion_content":"课代表\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612837167,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":269395,"ip_address":""},"score":348996,"extra":""},{"author":{"id":2109853,"avatar":"","nickname":"beifengzhishen001","note":"","ucode":"77D42B7DD9E754","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1361746,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c7/52/c5adf218.jpg","nickname":"喜欢地球的阿培同学","note":"","ucode":"5F97037585F857","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":363273,"discussion_content":"学习委员你来做","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617158629,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":269395,"ip_address":""},"score":363273,"extra":""}]}]},{"had_liked":false,"id":171047,"user_name":"Geek_0819","can_delete":false,"product_type":"c1","uid":1795605,"ip_address":"","ucode":"39324C56899177","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELbKf55SEo9bZ30GAIA09AaaoGvAIibEjNC0rsxpP7r1z4jUUBFz3xepso6CK8bYia6n5wcAyOQUfibA/132","comment_is_top":false,"comment_ctime":1578832215,"is_pvip":false,"replies":[{"id":"66334","content":"join group时也是有一个总的超时时间的（取所有member最大的rebalance超时时间），靠这个作为判断是否进入到下一阶段的阈值。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1578876926,"ip_address":"","comment_id":171047,"utype":1}],"discussion_count":4,"race_medal":0,"score":"74593276247","product_id":100029201,"comment_content":"老师，有个问题文中说joingroup时等待所有消费者上报订阅信息，协调者通过什么判断所有消费者都已经上报了，或者说怎么知道有多少消费者客户端。如果上报信息后，消费者客户端崩溃了，这能等待下次心跳才能知道吗？","like_count":17,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481219,"discussion_content":"join group时也是有一个总的超时时间的（取所有member最大的rebalance超时时间），靠这个作为判断是否进入到下一阶段的阈值。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578876926,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1547667,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9d/93/4159edaa.jpg","nickname":"朴素柠檬c","note":"","ucode":"2D4CBB70D801B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331102,"discussion_content":"这问题 够叼的，反正teacher的回复 感觉不是特别准确","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1606788699,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1102045,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d0/dd/a4df05d4.jpg","nickname":"Alex","note":"","ucode":"37E663FC4B85E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":404874,"discussion_content":"按照join group 超时时间阈值的思路，上一轮join group 完成后，broker走到CompletingRebalance ，甚至stable；客户端崩溃后，开始新一轮，走到PreparingRebalance； 我想另外一个问题，就是假如join group 超时时间阈值外，还有consumer提交本轮的join group请求怎么办？ ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634443064,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2354184,"avatar":"https://static001.geekbang.org/account/avatar/00/23/ec/08/68cf2f1b.jpg","nickname":"116153","note":"","ucode":"FDB596BA11A24C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":355779,"discussion_content":"同样有这个疑问……","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615474979,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180171,"user_name":"极极","can_delete":false,"product_type":"c1","uid":1250773,"ip_address":"","ucode":"365F7446ABCC49","user_header":"https://static001.geekbang.org/account/avatar/00/13/15/d5/6d66288b.jpg","comment_is_top":false,"comment_ctime":1582204312,"is_pvip":false,"replies":[{"id":"70001","content":"rebalance timeout，默认是max.poll.intervals的值","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1582247401,"ip_address":"","comment_id":180171,"utype":1}],"discussion_count":5,"race_medal":0,"score":"66006713752","product_id":100029201,"comment_content":"老师，最后一张图，再平衡前，要求在规定时间内提交位移，这个规定时间如何设置？默认值是什么？","like_count":15,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484553,"discussion_content":"rebalance timeout，默认是max.poll.intervals的值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582247401,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1182802,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0c/52/f25c3636.jpg","nickname":"长脖子树","note":"","ucode":"D9090EF67EEB1B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288147,"discussion_content":"https://github.com/apache/kafka/blob/2.4/clients/src/main/java/org/apache/kafka/clients/GroupRebalanceConfig.java#L53","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1593660821,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1182802,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0c/52/f25c3636.jpg","nickname":"长脖子树","note":"","ucode":"D9090EF67EEB1B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288143,"discussion_content":"参考: \nhttps://github.com/apache/kafka/blob/446196d6e9d66f45c64b483e3d375aaeaca28e3b/clients/src/main/java/org/apache/kafka/clients/GroupRebalanceConfig.java#L53","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1593660733,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2844595,"avatar":"","nickname":"南山李敏镐","note":"","ucode":"2B03BACAC284BF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533463,"discussion_content":"如果在rebalance timeout前没有commit会怎样？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637860675,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":1,"child_discussions":[{"author":{"id":1346215,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","nickname":"William","note":"","ucode":"55F5D9DEE485B1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2844595,"avatar":"","nickname":"南山李敏镐","note":"","ucode":"2B03BACAC284BF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545817,"discussion_content":"那就是位移未提交, 导致重复消费。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642058964,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":533463,"ip_address":""},"score":545817,"extra":""}]}]},{"had_liked":false,"id":164326,"user_name":"wgcris","can_delete":false,"product_type":"c1","uid":1527666,"ip_address":"","ucode":"842B76EB6B8320","user_header":"","comment_is_top":false,"comment_ctime":1576937256,"is_pvip":false,"replies":[{"id":"62535","content":"commit失败先看看是不是消息处理慢导致的吧。比如增加max.poll.interval.ms的值或降低max.poll.records的值试试看。Client端报出Coordinator不可用不一定表示Coordinator真的不可用","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1577062269,"ip_address":"","comment_id":164326,"utype":1}],"discussion_count":1,"race_medal":0,"score":"61706479400","product_id":100029201,"comment_content":"老师，您好，请教个问题，最近使用consumer消费，发现consumer会出现commit offset failed，coordinator is not available 的错误，导致consumer卡住，无法消费。根据错误信息，是由于找不到groupcoordinator导致的，但coordinator不可以是在什么情况下发生的？一个猜测是由于consumer端发送心跳超时导致groupcoordinator认为该consumer死了，将该consumer剔除该group，导致该consumer不可用，一直卡住，不知道这种解释是否正确","like_count":14,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478723,"discussion_content":"commit失败先看看是不是消息处理慢导致的吧。比如增加max.poll.interval.ms的值或降低max.poll.records的值试试看。Client端报出Coordinator不可用不一定表示Coordinator真的不可用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577062269,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118794,"user_name":"明翼","can_delete":false,"product_type":"c1","uid":1068361,"ip_address":"","ucode":"E77F86BEB3D5C1","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/49/28e73b9c.jpg","comment_is_top":false,"comment_ctime":1564448171,"is_pvip":false,"replies":[{"id":"43620","content":"1. 可以配置offsets.retention.minutes<br>2. 新版本consumer的一个改进就是把分区分配策略从server端移到consumer端来做。Client端代码演进的速度和容易程度要远胜于服务器端，算是一个优势吧","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1564480390,"ip_address":"","comment_id":118794,"utype":1}],"discussion_count":1,"race_medal":0,"score":"61693990315","product_id":100029201,"comment_content":"老师有两个问题请教下：<br>1）组状态在empty的时候，删除位移信息，这个时间间隔（文中7天）是否可以配置那，还是和普通的默认topic的消息存活时间一样吗？<br>2）这个设计我有点迷糊，都有协调者了为什么不让协调者统一做订阅分配那，让领导者做不是更麻烦吗？<br>","like_count":14,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460581,"discussion_content":"1. 可以配置offsets.retention.minutes\n2. 新版本consumer的一个改进就是把分区分配策略从server端移到consumer端来做。Client端代码演进的速度和容易程度要远胜于服务器端，算是一个优势吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564480390,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149389,"user_name":"注定非凡","can_delete":false,"product_type":"c1","uid":1113597,"ip_address":"","ucode":"80673056E131B7","user_header":"https://static001.geekbang.org/account/avatar/00/10/fd/fd/326be9bb.jpg","comment_is_top":false,"comment_ctime":1573207653,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"57407782501","product_id":100029201,"comment_content":"1 重平衡的通知<br>\tA ：重平衡过程通过消息者端的心跳线程（Heartbeat Thread）通知到其他消费者实例。<br>\tB ：Kafka Java消费者需要定期地发送心跳请求到Broker端的协调者，以表明它还存活着。<br>\t\t（1）在kafka 0.10.1.0版本之前，发送心跳请求是在消费者主线程完成的，也就是代码中调用KafkaConsumer.poll方法的那个线程。<br>\t\t\t这样做，消息处理逻辑也是在这个线程中完成的 ，因此，一旦消息处理消耗了过长的时间，心跳请求将无法及时发到协调者那里，导致协调者错判消费者已死。<br>\t\t（2）在此版本后，kafka社区引入了单独的心跳线程来专门执行心跳请求发送，避免这个问题。<br>\tC ：重平衡的通知机制是通过心跳线程来完成的，当协调者决定开启新一轮重平衡后，他会将“REBALANCE_IN_PROGRESS”封装进心跳请求的响应中，发还给消费者实例。当消费者实例发现心跳响应中包含了”REBALANCE_IN_PROGRESS”，就能立即知道重平衡开始了。<br>\tD ：消费者端的参数 heartbeat.interval.ms的真实用途是控制重平衡通知的频率。<br><br>2 消费者组状态机<br>\tKafka设计了一套消费者组状态机（State Machine），帮助协调者完成整个重平衡流程。<br>\tA ：kafka消费者组状态<br>\t（1）Empty：组内没有任何成员，但消费者组可能存在已提交的位移数据，而且这些位移尚未过期。<br>\t（2）Dead：组内没有任何成员，但组的元数据信息已经在协调者端被移除。协调者保存着当前向它注册过的所有组信息，所谓元数据就是类似于这些注册信息。<br>\t（3）PreparingRebalance：消费者组准备开启重平衡，此时所有成员都要重新请求加消费者组<br>\t（4）CompletingRebalance：消费者组下所有成员已经加入，各个成员正在等待分配方案。<br>\t（5）stable：消费者组的稳定状态。该状态表明重平衡已经完成，组内成员能够正常消费数据了。<br><br>       B ：Kafka定期自动删除过期位移的条件就是，组要处于Empty状态。如果消费者组停了很长时间（超过7天），那么Kafka很可能就把该组的位移数据删除了。<br><br>3 消费者端重平衡流程<br>\tA ：重平衡的完整流程需要消费者端和协调者组件共同参与才能完成。<br>\tB ：在消费者端，重平衡分为两个步骤：<br>\t\t（1）加入组，对应请求：JoinGroup请求<br>\t\t（2）等待领导者消费者分配方案：SyncGroup请求<br>\tC ：当组内成员加入组时，他会向协调者发送JoinGroup请求。在该请求中，每个成员都要将自己订阅的主题上报，这样协调者就能收集到所有成员的订阅信息。一旦收集了全部成员的JoinGroup请求后，协调者会从这些成员中选择一个担任这个消费者组的领导者。<br>\tD ：通常情况下，第一个发送JoinGroup 请求的成员自动成为领导者。这里的领导者是具体的消费者实例，它既不是副本，也不是协调者。领导者消费者的任务是收集所有成员的订阅信息，然后根据这些信息，制定具体的分区消费分配方案。<br>\tE ：选出领导者之后，协调者会把消费者组订阅信息封装进JoinGroup请求的响应中，然后发给领导者，由领导统一做出分配方案后，进入下一步：发送SyncGroup请求。<br>\tF ：领导者向协调者发送SyncGroup请求，将刚刚做出的分配方案发给协调者。值得注意的是，其他成员也会向协调者发送SyncGroup请求，只是请求体中并没有实际内容。这一步的目的是让协调者接收分配方案，然后统一以SyncGroup 响应的方式发给所有成员，这样组内成员就都知道自己该消费哪些分区了。<br>\t<br>4 Broker端重平衡场景剖析<br>\t<br>\tA ：新成员入组<br>\t\t当协调者收到新的JoinGroup请求后，它会通过心跳请求响应的方式通知组内现有的所有成员，强制他们开启新一轮的重平衡。<br>\tB ：组成员主动离组<br>\t\t消费者实例所在线程或进程调用close()方法主动通知协调者他要退出。这个场景涉及第三类请求：LeaveGroup请求。协调者收到LeaveGroup请求后，依然会以心跳响应的方式通知其他成员。<br>\tC ：组成员崩溃离组<br>\t\t崩溃离组是指消费者实例出现严重故障，突然宕机导致的离组。崩溃离组是被动的，协调者通常需要等待一段时间才能感知，这段时间一般是由消费者端参数session.timeout.ms控制的。<br>\tD ：重平衡时协调者对组内成员提交位移的处理<br>\t\t正常情况下，每个组内成员都会定期汇报位移给协调者。当重平衡开启时，协调者会给予成员一段缓冲时间，要求每个成员必须在这段时间内快速地上报自己的位移信息，然后在开启正常JoinGroup&#47;SyncGroup请求发送。<br>","like_count":14},{"had_liked":false,"id":125552,"user_name":"菜鸟和谐号","can_delete":false,"product_type":"c1","uid":1632108,"ip_address":"","ucode":"649BD61DC406C2","user_header":"https://static001.geekbang.org/account/avatar/00/18/e7/6c/aa73b7a7.jpg","comment_is_top":false,"comment_ctime":1566202713,"is_pvip":false,"replies":[{"id":"46090","content":"一个组对应一个Coordinator，与topic主题无关","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1566207847,"ip_address":"","comment_id":125552,"utype":1}],"discussion_count":1,"race_medal":0,"score":"57400777561","product_id":100029201,"comment_content":"不同的消费者消费不同的topic主题的领导者都是一个吗，我记得好像不同topic主题的协调者都不是一个啊，老师求解答<br><br>","like_count":13,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463604,"discussion_content":"一个组对应一个Coordinator，与topic主题无关","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566207847,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143225,"user_name":"绿箭侠","can_delete":false,"product_type":"c1","uid":1528536,"ip_address":"","ucode":"B994F558A98E29","user_header":"https://static001.geekbang.org/account/avatar/00/17/52/d8/123a4981.jpg","comment_is_top":false,"comment_ctime":1571651233,"is_pvip":false,"replies":[{"id":"55325","content":"这只是其中的一个可能的原因。client端代码更新的难度要远小于broker端。如果是broker代码更新，你需要rolling upgrade所有集群中的broker，在生产环境中并不一定有这样的时间窗口","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1571660968,"ip_address":"","comment_id":143225,"utype":1}],"discussion_count":1,"race_medal":0,"score":"44521324193","product_id":100029201,"comment_content":"老师，看前面也有人问为啥不把订阅分配方案移到协调者上统一去做？   您说Client端代码演进速度 和 容易程度远胜于服务器端，是一个优势。<br>这里还是没明白，为什么Client端代码演进速度 和 容易程度更好？！！","like_count":10,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471432,"discussion_content":"这只是其中的一个可能的原因。client端代码更新的难度要远小于broker端。如果是broker代码更新，你需要rolling upgrade所有集群中的broker，在生产环境中并不一定有这样的时间窗口","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571660968,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118934,"user_name":"Li Shunduo","can_delete":false,"product_type":"c1","uid":1222882,"ip_address":"","ucode":"6C5AB4129E9780","user_header":"https://static001.geekbang.org/account/avatar/00/12/a8/e2/f8e51df2.jpg","comment_is_top":false,"comment_ctime":1564471748,"is_pvip":false,"replies":[{"id":"43698","content":"没有具体的限制。反正如果consumer提交的位移请求到broker端时整个group已经从Preparing进化到Completing了，那么就晚了，broker会拒绝这个提交请求","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1564536651,"ip_address":"","comment_id":118934,"utype":1}],"discussion_count":2,"race_medal":0,"score":"40219177412","product_id":100029201,"comment_content":"请问当重平衡开启时，协调者会给予提交位移的缓冲时间是多少？如果超过了会拒绝提交的位移吗？<br>","like_count":9,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460673,"discussion_content":"没有具体的限制。反正如果consumer提交的位移请求到broker端时整个group已经从Preparing进化到Completing了，那么就晚了，broker会拒绝这个提交请求","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564536651,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1272985,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKqDeE8vfUhEdUoXrEXFTJyKiaJcwYvBLNhXzXiaBZZBHfpjSX8pJNX3xugDJrDOBAlw9OqwbU1cnGA/132","nickname":"qiubyte","note":"","ucode":"D77D102E61C0F1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558002,"discussion_content":"会拒绝，具体看Generation机制","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648041211,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119723,"user_name":"快跑","can_delete":false,"product_type":"c1","uid":1564645,"ip_address":"","ucode":"90ED7E6D40C58E","user_header":"https://static001.geekbang.org/account/avatar/00/17/df/e5/65e37812.jpg","comment_is_top":false,"comment_ctime":1564664910,"is_pvip":false,"replies":[{"id":"43967","content":"consumer.subscribe(Pattern.compile(&quot;test.*&quot;))就可以。这样当你新建了一个test开头的topic，订阅信息就发生变化了，需要重新rebalance","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1564707956,"ip_address":"","comment_id":119723,"utype":1}],"discussion_count":3,"race_medal":0,"score":"35924403278","product_id":100029201,"comment_content":"老师你好，<br>订阅主题数量发生变化是指什么？ 怎么才能触发这个场景的发生？","like_count":8,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461038,"discussion_content":"consumer.subscribe(Pattern.compile(&amp;quot;test.*&amp;quot;))就可以。这样当你新建了一个test开头的topic，订阅信息就发生变化了，需要重新rebalance","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564707956,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1138722,"avatar":"https://static001.geekbang.org/account/avatar/00/11/60/22/92284df2.jpg","nickname":"其实我很屌","note":"","ucode":"2B75EAAD748A60","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3685,"discussion_content":"你可以用通配符订阅主题，然后当符合规则的主题被新建时，就满足这个场景","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1564708697,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1134861,"avatar":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","nickname":"James","note":"","ucode":"48B0F2A334D1C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":50041,"discussion_content":"马克","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573658066,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":237868,"user_name":"对与错","can_delete":false,"product_type":"c1","uid":1682027,"ip_address":"","ucode":"EF55733E3BD78B","user_header":"https://static001.geekbang.org/account/avatar/00/19/aa/6b/ab9a072a.jpg","comment_is_top":false,"comment_ctime":1595989553,"is_pvip":false,"replies":[{"id":"87878","content":"consumer会定期更新元数据，如果发现了新增的订阅分区，会主动触发rebalance","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1596004945,"ip_address":"","comment_id":237868,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31660760625","product_id":100029201,"comment_content":"请问订阅主题发送变化之后触发reblance的流程是什么样子的?","like_count":7,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502572,"discussion_content":"consumer会定期更新元数据，如果发现了新增的订阅分区，会主动触发rebalance","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596004945,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208398,"user_name":"ATSS码农哥","can_delete":false,"product_type":"c1","uid":1519388,"ip_address":"","ucode":"778C073EFAC61C","user_header":"https://static001.geekbang.org/account/avatar/00/17/2f/1c/dd20e4a2.jpg","comment_is_top":false,"comment_ctime":1587350316,"is_pvip":false,"replies":[{"id":"77837","content":"是的，rebalance结束之后非常可能被分配到和之前完全不一样的分区。社区后面加入了一个StickyAssignor，力图最大程度地保证之前分区分配的粘性，可以试试。具体方法是设置partition.assignment.strategy=org.apache.kafka.clients.consumer.StickyAssignor","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1587351795,"ip_address":"","comment_id":208398,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31652121388","product_id":100029201,"comment_content":"老师 我有一个问题 您说consumer group里面的consumer leader会提供分配方案 所以这个分配方案是根据coordinator通过joinGroup收集到的所有&lt;topic, partition&gt; 去做一个统一的分配是么？ 在结束分配以后 每个consumer都有可能负责和之前完全不一样的分区？","like_count":7,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492446,"discussion_content":"是的，rebalance结束之后非常可能被分配到和之前完全不一样的分区。社区后面加入了一个StickyAssignor，力图最大程度地保证之前分区分配的粘性，可以试试。具体方法是设置partition.assignment.strategy=org.apache.kafka.clients.consumer.StickyAssignor","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587351795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172974,"user_name":"陈国林","can_delete":false,"product_type":"c1","uid":1438037,"ip_address":"","ucode":"83D12F3E79F197","user_header":"https://static001.geekbang.org/account/avatar/00/15/f1/55/8ac4f169.jpg","comment_is_top":false,"comment_ctime":1579400827,"is_pvip":false,"replies":[{"id":"67167","content":"短时间内我不确定这个方案是否可行，大体上看是一个很好的想法。如果可以细化的话，不妨提一个KIP：）","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1579483240,"ip_address":"","comment_id":172974,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31644171899","product_id":100029201,"comment_content":"老师好，我说下自己的愚见。为了 Rebalance 过程避免 STW，是否可以开启另外一个线程用于 ”预分配“，预分配的算法最大化的保证 consumer 实例消费的状态不变，确保 Rebalance 过程只需要变更部分 consumer 实例。预分配成功后，再走真正的 Rebalance 流程，不知是否可行","like_count":7,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481918,"discussion_content":"短时间内我不确定这个方案是否可行，大体上看是一个很好的想法。如果可以细化的话，不妨提一个KIP：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579483240,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127773,"user_name":"roderickyu","can_delete":false,"product_type":"c1","uid":1037045,"ip_address":"","ucode":"549C4A36D66C46","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d2/f5/0c716e9d.jpg","comment_is_top":false,"comment_ctime":1566790503,"is_pvip":true,"replies":[{"id":"47557","content":"有可能重复。目前用业务去重更保险些","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1566870851,"ip_address":"","comment_id":127773,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31631561575","product_id":100029201,"comment_content":"老师您好，收到重平衡通知后，如果某个consumer提交位移超时了，那么会造成重复消费吧？是不是只能在应用层去重？","like_count":7,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464649,"discussion_content":"有可能重复。目前用业务去重更保险些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566870851,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":219284,"user_name":"Mr.Brooks","can_delete":false,"product_type":"c1","uid":1118650,"ip_address":"","ucode":"D47A6B0236A79F","user_header":"https://static001.geekbang.org/account/avatar/00/11/11/ba/2175bc50.jpg","comment_is_top":false,"comment_ctime":1589983332,"is_pvip":true,"replies":[{"id":"81037","content":"嗯，是的。你的理解是对的~","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1590022737,"ip_address":"","comment_id":219284,"utype":1}],"discussion_count":2,"race_medal":0,"score":"27359787108","product_id":100029201,"comment_content":"消费者组创建的过程中，协调者何时判断所有消费者已加入，还是说它在收到第一个joingroup请求后等一段时间？","like_count":6,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495748,"discussion_content":"嗯，是的。你的理解是对的~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590022737,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1547667,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9d/93/4159edaa.jpg","nickname":"朴素柠檬c","note":"","ucode":"2D4CBB70D801B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331110,"discussion_content":"等多长时间？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606789715,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144445,"user_name":"兔2🐰🍃","can_delete":false,"product_type":"c1","uid":1096984,"ip_address":"","ucode":"1FEDA044BB6CBD","user_header":"https://static001.geekbang.org/account/avatar/00/10/bd/18/2af6bf4b.jpg","comment_is_top":false,"comment_ctime":1571923564,"is_pvip":false,"replies":[{"id":"55704","content":"这块需要更正一次，不是在心跳时携带的session timeout，这个时间在加入组的时候就已经发给Coordinator了。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1571967929,"ip_address":"","comment_id":144445,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27341727340","product_id":100029201,"comment_content":"作者回复: 每次consumer发送心跳时会顺带发送session timeout时间，这样Coordinator收到后会根据这个session timeout时间计算下次deadline时间，如果过了deadline还没有收到直接fail掉该consumer<br><br>老师说“Kafka 一般不会超过 session.timeout.ms 就能感知到这个崩溃”，感觉上面回复中的 session timeout 要小于这个消费者端参数，那么心跳请求里的session timeout 是什么计算的？","like_count":6,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471940,"discussion_content":"这块需要更正一次，不是在心跳时携带的session timeout，这个时间在加入组的时候就已经发给Coordinator了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571967929,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154561,"user_name":"柯察金","can_delete":false,"product_type":"c1","uid":1115149,"ip_address":"","ucode":"F722BF8FCD2C47","user_header":"https://static001.geekbang.org/account/avatar/00/11/04/0d/3dc5683a.jpg","comment_is_top":false,"comment_ctime":1574480140,"is_pvip":false,"replies":[{"id":"59489","content":"是的，不是empty就不删除","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1574642902,"ip_address":"","comment_id":154561,"utype":1}],"discussion_count":3,"race_medal":0,"score":"23049316620","product_id":100029201,"comment_content":"文中有一句话：Kafka 定期自动删除过期位移的条件就是，组要处于 Empty 状态。因此，如果消费者组停掉了很长时间，那么 Kafka 很可能就把该组的位移数据删除了<br><br>我记得好像默认 7 天会删除消息的啊，为什么一定要 empty 状态呢？不是 empty 状态，过期的就不删除吗","like_count":5,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475507,"discussion_content":"是的，不是empty就不删除","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574642902,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1361746,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c7/52/c5adf218.jpg","nickname":"喜欢地球的阿培同学","note":"","ucode":"5F97037585F857","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":269397,"discussion_content":"mark，老师这里指的是消费组的过期位移，跟Kafka会自动删除过期日志不是一回事","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1589900027,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1762252,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/e3/cc/0947ff0b.jpg","nickname":"nestle","note":"","ucode":"469800BED81B54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1361746,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c7/52/c5adf218.jpg","nickname":"喜欢地球的阿培同学","note":"","ucode":"5F97037585F857","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284678,"discussion_content":"位移不是也保存在topic中吗？也应该有过期时间吧？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1592582033,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":269397,"ip_address":""},"score":284678,"extra":""}]}]},{"had_liked":false,"id":136100,"user_name":"juan","can_delete":false,"product_type":"c1","uid":1503525,"ip_address":"","ucode":"2799013456F532","user_header":"https://static001.geekbang.org/account/avatar/00/16/f1/25/6908f80a.jpg","comment_is_top":false,"comment_ctime":1569350993,"is_pvip":false,"replies":[{"id":"52129","content":"可以的。同一个组下的不同消费者可以订阅不同的主题","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1569370918,"ip_address":"","comment_id":136100,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23044187473","product_id":100029201,"comment_content":"老师有点糊涂，kafka 同一个消费组里面的多个消费者可以有订阅不同的主题？","like_count":5,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468458,"discussion_content":"可以的。同一个组下的不同消费者可以订阅不同的主题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569370918,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":251512,"user_name":"timmy21","can_delete":false,"product_type":"c1","uid":1174860,"ip_address":"","ucode":"9D6DED247B1F38","user_header":"https://static001.geekbang.org/account/avatar/00/11/ed/4c/8674b6ad.jpg","comment_is_top":false,"comment_ctime":1601634173,"is_pvip":false,"replies":[{"id":"92150","content":"不矛盾。首先Kafka的确会定期删除_consumer_offsets topic的数据，其次，Kafka只会为Empty状态的消费者组清理__consumer_offests中相关数据。","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1602206752,"ip_address":"","comment_id":251512,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18781503357","product_id":100029201,"comment_content":"老师之前说过消费位移信息是存储在_consumer_offsets topic中，会有过期清理机制的。可是这里又说只在Empty状态才进行位移信息删除，有些不明白了。难道过期清理是compact，所以不叫删除？","like_count":4,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506525,"discussion_content":"不矛盾。首先Kafka的确会定期删除_consumer_offsets topic的数据，其次，Kafka只会为Empty状态的消费者组清理__consumer_offests中相关数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602206752,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226478,"user_name":"light","can_delete":false,"product_type":"c1","uid":1818099,"ip_address":"","ucode":"CBEF5397AFAAE7","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/2J2nYibshRJAMTqa2UibzSpvjtxDkrc1HGQKTcO1N01gZEj8bD5Lf78IlAvXB2rLZ2DUfTiccgNfVTR4YopmkibXxw/132","comment_is_top":false,"comment_ctime":1592118414,"is_pvip":false,"replies":[{"id":"83432","content":"coordinator的确定原则是寻找__consumer_offsets对应分区的leader副本所在的broker","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1592182686,"ip_address":"","comment_id":226478,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18771987598","product_id":100029201,"comment_content":"老师，消费者是如何找到broker端的协调者的？这个是什么机制呢？","like_count":4,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498259,"discussion_content":"coordinator的确定原则是寻找__consumer_offsets对应分区的leader副本所在的broker","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592182686,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1272985,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKqDeE8vfUhEdUoXrEXFTJyKiaJcwYvBLNhXzXiaBZZBHfpjSX8pJNX3xugDJrDOBAlw9OqwbU1cnGA/132","nickname":"qiubyte","note":"","ucode":"D77D102E61C0F1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557999,"discussion_content":"老师回复的太简单了。第一步：计算group.id的hash值，同时计算__consumer_offsets的分区数量（默认是50）。第二步：abs(第一部的hash值 % 50) 也就是取模求绝对值，这个计算结果值就是该消费者要使用的__consumer_offsets主题的分区编号。得到了__consumer_offsets的分区编号，那么该分区的Leader副本所在的broker就是该消费者要使用的Coordinator，就是这样找到协调者的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648040228,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118933,"user_name":"Li Shunduo","can_delete":false,"product_type":"c1","uid":1222882,"ip_address":"","ucode":"6C5AB4129E9780","user_header":"https://static001.geekbang.org/account/avatar/00/12/a8/e2/f8e51df2.jpg","comment_is_top":false,"comment_ctime":1564471376,"is_pvip":false,"replies":[{"id":"43612","content":"onPartitionsRevoked在发送JoinGroup之前；onPartitionsAssigned在收到SyncGroup之后","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1564479623,"ip_address":"","comment_id":118933,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18744340560","product_id":100029201,"comment_content":"请问onPartitionsRevoked是在发送JoinGroup请求前触发的吗？<br>onPartitionsAssigned是在收到SyncGroup响应后触发的吗？","like_count":4,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460672,"discussion_content":"onPartitionsRevoked在发送JoinGroup之前；onPartitionsAssigned在收到SyncGroup之后","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564479623,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118886,"user_name":"Geek_edc612","can_delete":false,"product_type":"c1","uid":1564943,"ip_address":"","ucode":"3E01DE3CE4BF3E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJUJKviaecwxpAZCAnHWap86kXUichv5JwUoAtrUNy4ugC0kMMmssFDdyayKFgAoA9Z62sqMZaibbvUg/132","comment_is_top":false,"comment_ctime":1564458039,"is_pvip":false,"replies":[{"id":"43613","content":"我可不敢误人子弟：） 看看R大推荐的书单吧：https:&#47;&#47;www.douban.com&#47;doulist&#47;2545443&#47;","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1564479795,"ip_address":"","comment_id":118886,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18744327223","product_id":100029201,"comment_content":"胡老师有没有推荐的jvm 书籍？这块一直没有深入看过","like_count":4,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460639,"discussion_content":"我可不敢误人子弟：） 看看R大推荐的书单吧：https://www.douban.com/doulist/2545443/","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564479795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1564943,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJUJKviaecwxpAZCAnHWap86kXUichv5JwUoAtrUNy4ugC0kMMmssFDdyayKFgAoA9Z62sqMZaibbvUg/132","nickname":"Geek_edc612","note":"","ucode":"3E01DE3CE4BF3E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3598,"discussion_content":":）收到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564628290,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178342,"user_name":"yic","can_delete":false,"product_type":"c1","uid":1201577,"ip_address":"","ucode":"C8DC471B7C28B8","user_header":"https://static001.geekbang.org/account/avatar/00/12/55/a9/5282a560.jpg","comment_is_top":false,"comment_ctime":1581665212,"is_pvip":false,"replies":[{"id":"69233","content":"嗯，主要耗时在join group上。Rebalance之前的性能确实是不好，社区一直在修改和优化。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1581728897,"ip_address":"","comment_id":178342,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14466567100","product_id":100029201,"comment_content":"老师，你在第15讲中提到一个案例：&quot;曾经，有个国外用户的 Group 内有几百个 Consumer 实例，成功 Rebalance 一次要几个小时！这完全是不能忍受的&quot;。从上面的流程来看，Rebalance耗时感觉不会达到这样一个量级呀。在Rebalance过程中，主要的耗时操作是什么呢？","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483764,"discussion_content":"嗯，主要耗时在join group上。Rebalance之前的性能确实是不好，社区一直在修改和优化。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581728897,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137386,"user_name":"快跑","can_delete":false,"product_type":"c1","uid":1564645,"ip_address":"","ucode":"90ED7E6D40C58E","user_header":"https://static001.geekbang.org/account/avatar/00/17/df/e5/65e37812.jpg","comment_is_top":false,"comment_ctime":1569727600,"is_pvip":false,"replies":[{"id":"53472","content":"显示-是因为消费者有成员没有启动的缘故。另外每次consumer-id不同的确表明每次都是新的member","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1570495698,"ip_address":"","comment_id":137386,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14454629488","product_id":100029201,"comment_content":"多次执行语句：kafka-consumer-groups.sh --bootstrap-server host1:9092 --describe --group group_v1 <br>发现CONSUMER-ID一列，有时候只显示&quot;-&quot;，而且每次CONSUMER-ID的值也不相同。是不是就说明发生了重平衡？<br>","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469064,"discussion_content":"显示-是因为消费者有成员没有启动的缘故。另外每次consumer-id不同的确表明每次都是新的member","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570495698,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133119,"user_name":"aof","can_delete":false,"product_type":"c1","uid":1062864,"ip_address":"","ucode":"5815D63C4926BC","user_header":"https://static001.geekbang.org/account/avatar/00/10/37/d0/26975fba.jpg","comment_is_top":false,"comment_ctime":1568365960,"is_pvip":false,"replies":[{"id":"51249","content":"嗯嗯，是的：）","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1568593965,"ip_address":"","comment_id":133119,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14453267848","product_id":100029201,"comment_content":"老师，很好奇，这些流程原理，您是怎么梳理出来的，看源码吗？","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467258,"discussion_content":"嗯嗯，是的：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568593965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118841,"user_name":"lmtoo","can_delete":false,"product_type":"c1","uid":1133918,"ip_address":"","ucode":"FCD5B9C941D448","user_header":"https://static001.geekbang.org/account/avatar/00/11/4d/5e/c5c62933.jpg","comment_is_top":false,"comment_ctime":1564451444,"is_pvip":false,"replies":[{"id":"43617","content":"1. 消费者组里的消费者可能订阅不同的主题<br>2. 每个Broker上都有一个Coordinator组件，负责部分消费者组的协调工作<br>3. offsets.retention.minutes","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1564480205,"ip_address":"","comment_id":118841,"utype":1}],"discussion_count":3,"race_medal":0,"score":"14449353332","product_id":100029201,"comment_content":"消费者新加入消费者组的时候，JoinGroup必须要携带订阅的主题信息吗？难道不是消费者组里的全部消费者消费一样的主题吗？<br>还有这个Coordinator组件是针对这个消费者组的，还是全部消费者组的，这个组件在哪个机器上？<br>控制消费者组位移数据删除时间的参数是哪个？","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460608,"discussion_content":"1. 消费者组里的消费者可能订阅不同的主题\n2. 每个Broker上都有一个Coordinator组件，负责部分消费者组的协调工作\n3. offsets.retention.minutes","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564480205,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1348830,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/SM4fwn9uFicXU8cQ1rNF2LQdKNbZI1FX1jmdwaE2MTrBawbugj4TQKjMKWG0sGbmqQickyARXZFS8NZtobvoWTHA/132","nickname":"td901105","note":"","ucode":"32D42A4F36FA02","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138510,"discussion_content":"也就是说一个consumer可以属于多个consumer组吗?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579249087,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1361746,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c7/52/c5adf218.jpg","nickname":"喜欢地球的阿培同学","note":"","ucode":"5F97037585F857","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1348830,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/SM4fwn9uFicXU8cQ1rNF2LQdKNbZI1FX1jmdwaE2MTrBawbugj4TQKjMKWG0sGbmqQickyARXZFS8NZtobvoWTHA/132","nickname":"td901105","note":"","ucode":"32D42A4F36FA02","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":269420,"discussion_content":"应该不行吧，一个consumer组中不同的consumer可以订阅不同的主题","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1589900476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":138510,"ip_address":""},"score":269420,"extra":""}]}]},{"had_liked":false,"id":244699,"user_name":"臧萌","can_delete":false,"product_type":"c1","uid":1008692,"ip_address":"","ucode":"5505C1516EDFD5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/64/34/03335c4a.jpg","comment_is_top":false,"comment_ctime":1598621661,"is_pvip":false,"replies":[{"id":"90145","content":"臧老师您好：） 社区更加推荐StickyAssignor","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1598835834,"ip_address":"","comment_id":244699,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10188556253","product_id":100029201,"comment_content":"貌似可以使用RoundRobinAssignor或者StickyAssignor解决消费多个topic时partition均匀分配的问题，哪个更推荐一些呢？","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504669,"discussion_content":"臧老师您好：） 社区更加推荐StickyAssignor","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598835834,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":231471,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1593682351,"is_pvip":false,"replies":[{"id":"85480","content":"离组方式有两种：一种是主动离组，一种是超时被踢出组。你说的这两种情况都属于主动离组。","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1593736188,"ip_address":"","comment_id":231471,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10183616943","product_id":100029201,"comment_content":"老师好，结合最近几节的记录，我发现消费者主动离组存在如下两种情况，您看对不？<br>①消费者实例所在线程或进程调用 close() 方法主动通知协调者它要退出。<br>② Consumer消费时间过长导致超过了max.poll.interval.ms时间，导致Consumer主动发起离开Group请求。<br><br>","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500311,"discussion_content":"离组方式有两种：一种是主动离组，一种是超时被踢出组。你说的这两种情况都属于主动离组。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593736188,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1736462,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/7f/0e/e3a8dbd9.jpg","nickname":"Liujun","note":"","ucode":"3DB1F3CA57B5B3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390561,"discussion_content":"还有消费者崩溃后协调者根据会话过期，让其下线，发起重平衡","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629893363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":231467,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1593681866,"is_pvip":false,"replies":[{"id":"85481","content":"1. 踢出组。会触发新一轮rebalance<br>2. 它们使用的不是一个TCP连接。Coordinator有专属的TCP连接","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1593736298,"ip_address":"","comment_id":231467,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10183616458","product_id":100029201,"comment_content":"“这样Coordinator收到后会根据这个session timeout时间计算下次deadline时间，如果过了deadline还没有收到直接fail掉该consumer”<br>------------------------------------------------------------------<br>老师好，接着这个回答，再提几个问题哈！<br>----第一个问题：<br>这里的fail掉是啥意思？心跳超时可能当时的网络不太好，但是很快就恢复了，那么消费端还会继续给协调者发送心跳吧！因为毕竟消费端还在，而且心跳线程也还在，那么协调者会把这个被fail掉的消费端加入消费者组吗？如果会，是不是又触发了新一轮的Reblance呢？<br>----第二个问题：<br>我记得之前在讲Consumer建立TCP连接那一节讲到：“如果某个 Socket 连接上连续 9 分钟都没有任何请求“过境”的话，那么消费者会强行“杀掉”这个 Socket 连接”。按照这个说法，是不是说消费端此时也会被协调者给fail掉，因为连接都不存在了，更不会发心跳给协调者了吧？此时也会触发新一轮的Reblance吧？<br>不知道我讲清楚了否，麻烦老师解答一下哈！感谢！","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500310,"discussion_content":"1. 踢出组。会触发新一轮rebalance\n2. 它们使用的不是一个TCP连接。Coordinator有专属的TCP连接","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593736298,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":211354,"user_name":"Berk","can_delete":false,"product_type":"c1","uid":1010701,"ip_address":"","ucode":"9BA886BEB2AAF2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6c/0d/c0735400.jpg","comment_is_top":false,"comment_ctime":1587952025,"is_pvip":false,"replies":[{"id":"78575","content":"首先leader是在接收到broker发送的join group response之后开始制定分配方案的，之后通过syncgroup将方案发给Coordinator。<br>其次，是通过partition.assignment.strategy参数指定的assignor来完成分配的。我就说说默认assignor是怎么分配的吧。默认是Range分配，即按照topic维度来分。比如2个topic（t0、t1），每个topic3个分区，两个consumer（C1、C2）<br>那么先分t0，C1拿t0p0,t0p1，C2拿t0p2<br>再分t1，C1拿t1p0，t1p1，C2拿t1p2","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1587952898,"ip_address":"","comment_id":211354,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10177886617","product_id":100029201,"comment_content":"消费者的leader收到syncgroup请求后，是如何制定具体的分区消费分配方案？老师能不能具体讲一下这部分内容。我们在生产环境中经常发现分区分配不平衡的情况，想具体了解下如何debug这种问题。","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493257,"discussion_content":"首先leader是在接收到broker发送的join group response之后开始制定分配方案的，之后通过syncgroup将方案发给Coordinator。\n其次，是通过partition.assignment.strategy参数指定的assignor来完成分配的。我就说说默认assignor是怎么分配的吧。默认是Range分配，即按照topic维度来分。比如2个topic（t0、t1），每个topic3个分区，两个consumer（C1、C2）\n那么先分t0，C1拿t0p0,t0p1，C2拿t0p2\n再分t1，C1拿t1p0，t1p1，C2拿t1p2","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587952898,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":198348,"user_name":"冬风向左吹","can_delete":false,"product_type":"c1","uid":1066928,"ip_address":"","ucode":"376C45C5134F93","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/b0/a9b77a1e.jpg","comment_is_top":false,"comment_ctime":1585446385,"is_pvip":false,"replies":[{"id":"74838","content":"“难道重平衡是发生在所有主题上吗” --- 所有订阅主题分区都要参与重新分配","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1585533603,"ip_address":"","comment_id":198348,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10175380977","product_id":100029201,"comment_content":"SyncGroup 请求的处理流程中成员1和成员2为什么是不同的主题，难道重平衡是发生在所有主题上吗？这样的话任何一个主题有消费者加入或退出都要触发重平衡？","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489686,"discussion_content":"“难道重平衡是发生在所有主题上吗” --- 所有订阅主题分区都要参与重新分配","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585533603,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1736462,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/7f/0e/e3a8dbd9.jpg","nickname":"Liujun","note":"","ucode":"3DB1F3CA57B5B3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390562,"discussion_content":"同一个组内的消费者订阅的主题可以不一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629893579,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131056,"user_name":"电光火石","can_delete":false,"product_type":"c1","uid":1013160,"ip_address":"","ucode":"3AD33BB4AA940F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/a8/dfe4cade.jpg","comment_is_top":false,"comment_ctime":1567611308,"is_pvip":false,"replies":[{"id":"49317","content":"1. heartbeat.interval.ms不是用来衡量rebalance的，还是用session.timeout.ms<br>2. 你指的是消费的数据被删除，那是因为Kafka会自动删除过期日志。我这里说的是Kafka删除过期消费者组位移数据","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1567645190,"ip_address":"","comment_id":131056,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10157545900","product_id":100029201,"comment_content":"老师，想问一下：<br>1. heartbeat.interval.ms和session.timeout.ms 2个参数的差别，在heartbeat.interval.ms达到一定时间没有收到心跳，会引起rebalance，那为什么还需要引入session.timeout.ms 作为客户端崩溃的timeout时间呢，单一用heartbeat.interval.ms不就可以了吗？session.timeout.ms 超时到了还有触发其他的动作吗？另外，heartbeat.interval.ms和session.timeout.ms 都是通过心跳线程来做的吗？<br>2. “Kafka 定期自动删除过期位移的条件就是，组要处于 Empty状态”，但是我们一直在消费的情况下，比如设置保留7天的数据，我看数据也是会被清理的，不知道是我哪里理解有问题吗？<br>谢谢了！","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466266,"discussion_content":"1. heartbeat.interval.ms不是用来衡量rebalance的，还是用session.timeout.ms\n2. 你指的是消费的数据被删除，那是因为Kafka会自动删除过期日志。我这里说的是Kafka删除过期消费者组位移数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567645190,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1547667,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9d/93/4159edaa.jpg","nickname":"朴素柠檬c","note":"","ucode":"2D4CBB70D801B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331119,"discussion_content":"不是心跳一次不成功就给人pass的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606790564,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120658,"user_name":"外星人","can_delete":false,"product_type":"c1","uid":1132861,"ip_address":"","ucode":"D8469B13F2AB37","user_header":"https://static001.geekbang.org/account/avatar/00/11/49/3d/4ac37cc2.jpg","comment_is_top":false,"comment_ctime":1564968016,"is_pvip":false,"replies":[{"id":"44459","content":"有个超时时间。规定该时间内所有成员都要入组","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1565051311,"ip_address":"","comment_id":120658,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10154902608","product_id":100029201,"comment_content":"新成员逐个入组，coordinator是如何判断所有的消费成员已经申请入组的呢？","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461421,"discussion_content":"有个超时时间。规定该时间内所有成员都要入组","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565051311,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119820,"user_name":"外星人","can_delete":false,"product_type":"c1","uid":1132861,"ip_address":"","ucode":"D8469B13F2AB37","user_header":"https://static001.geekbang.org/account/avatar/00/11/49/3d/4ac37cc2.jpg","comment_is_top":false,"comment_ctime":1564708426,"is_pvip":false,"replies":[{"id":"44040","content":"增加num.io.threads试试呢","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1564734901,"ip_address":"","comment_id":119820,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10154643018","product_id":100029201,"comment_content":"你好，我们生产上发现请求队列经常到500，提升了这个参数queued.max.requests到1000略有缓解，但是还是会到1000，集群有七十台左右，cpu负载使用差不多到总核数的70%，请问下","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461085,"discussion_content":"增加num.io.threads试试呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564734901,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1736462,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/7f/0e/e3a8dbd9.jpg","nickname":"Liujun","note":"","ucode":"3DB1F3CA57B5B3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390563,"discussion_content":"参照netty配置，默认为系统cpu核数的两倍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629893801,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1132861,"avatar":"https://static001.geekbang.org/account/avatar/00/11/49/3d/4ac37cc2.jpg","nickname":"外星人","note":"","ucode":"D8469B13F2AB37","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3905,"discussion_content":"增加到24了，还是有堆积，之前我们有调整num.network.threads为12，num.io.threads为16，请问下，这两个参数的比例大概是多少啊？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564968236,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119053,"user_name":"QQ怪","can_delete":false,"product_type":"c1","uid":1211223,"ip_address":"","ucode":"1A39B8433D9208","user_header":"https://static001.geekbang.org/account/avatar/00/12/7b/57/a9b04544.jpg","comment_is_top":false,"comment_ctime":1564494032,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10154428624","product_id":100029201,"comment_content":"这一节学到了很多很多，开了视野，感谢","like_count":2},{"had_liked":false,"id":118829,"user_name":"德惠先生","can_delete":false,"product_type":"c1","uid":1178969,"ip_address":"","ucode":"FD8AEBEC32085F","user_header":"https://static001.geekbang.org/account/avatar/00/11/fd/59/4416b40f.jpg","comment_is_top":false,"comment_ctime":1564450367,"is_pvip":false,"replies":[{"id":"43619","content":"即使没有错乱，因为位移的关系，重复也是不可避免的。最好还是在应用层面去重吧","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1564480326,"ip_address":"","comment_id":118829,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10154384959","product_id":100029201,"comment_content":"从java api的源码看，onPartitionsRevoke和onPartitionsAssign并没有办法保证是同一次rebalance过程，因此rebalance过程继续消费的话很容易造成消息重复和数据错乱。老师有啥好方法？","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460602,"discussion_content":"即使没有错乱，因为位移的关系，重复也是不可避免的。最好还是在应用层面去重吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564480326,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118745,"user_name":"Stony.修行僧","can_delete":false,"product_type":"c1","uid":1061277,"ip_address":"","ucode":"0F2368F7D93E4A","user_header":"https://static001.geekbang.org/account/avatar/00/10/31/9d/daad92d2.jpg","comment_is_top":false,"comment_ctime":1564444885,"is_pvip":false,"replies":[{"id":"43513","content":"至少这样能统一机制，因为目前非leader consumer依赖SyncGroup请求才能获取分配方案","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1564446919,"ip_address":"","comment_id":118745,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10154379477","product_id":100029201,"comment_content":"有一个问题：Joingroup响应（成员2，你是这组的leader），Syncgroup请求（我是组员2，请求leader分配方案）。成员2已经是leader了，那么syncgroup的请求信息有点费解，明明已经是leader 还要请求leader分配方案？","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460555,"discussion_content":"至少这样能统一机制，因为目前非leader consumer依赖SyncGroup请求才能获取分配方案","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564446919,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":244696,"user_name":"臧萌","can_delete":false,"product_type":"c1","uid":1008692,"ip_address":"","ucode":"5505C1516EDFD5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/64/34/03335c4a.jpg","comment_is_top":false,"comment_ctime":1598620020,"is_pvip":false,"replies":[{"id":"90146","content":"使用StickyAssignor能够比较好地进行分配","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1598835862,"ip_address":"","comment_id":244696,"utype":1}],"discussion_count":4,"race_medal":0,"score":"5893587316","product_id":100029201,"comment_content":"应用要消费多个topic的问题，如何让partition均匀的分配在集群上。<br><br>在集群上（比如100台机器）跑一个应用，要消费的topic有20个，每个topic的partition有30个，有没有什么成熟的技术可以让这总共600个partition可以均匀的分配在这100台机器上呢？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504667,"discussion_content":"使用StickyAssignor能够比较好地进行分配","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598835862,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1736462,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/7f/0e/e3a8dbd9.jpg","nickname":"Liujun","note":"","ucode":"3DB1F3CA57B5B3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390565,"discussion_content":"可以手动分配的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629894120,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1547667,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9d/93/4159edaa.jpg","nickname":"朴素柠檬c","note":"","ucode":"2D4CBB70D801B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331118,"discussion_content":"这种问题应该提到社区去！！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606790370,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1008692,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/64/34/03335c4a.jpg","nickname":"臧萌","note":"","ucode":"5505C1516EDFD5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1547667,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9d/93/4159edaa.jpg","nickname":"朴素柠檬c","note":"","ucode":"2D4CBB70D801B1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331353,"discussion_content":"人如其名。在哪里问需要遵守什么规定吗？老师觉得不合适可以不回答。你没啥权利说三道四。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606833881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":331118,"ip_address":""},"score":331353,"extra":""}]}]},{"had_liked":false,"id":239207,"user_name":"对与错","can_delete":false,"product_type":"c1","uid":1682027,"ip_address":"","ucode":"EF55733E3BD78B","user_header":"https://static001.geekbang.org/account/avatar/00/19/aa/6b/ab9a072a.jpg","comment_is_top":false,"comment_ctime":1596458735,"is_pvip":false,"replies":[{"id":"88413","content":"协调者挂掉了，表示位移主题特定分区的leader副本挂掉了，那么需要首先进行leader选举选出新的leader，然后消费者组连接这个新的leader","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1596519438,"ip_address":"","comment_id":239207,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5891426031","product_id":100029201,"comment_content":"请问如果某个协调者挂掉了，那么对应的消费者组会通过groupId到位移主题所在分区的leader副本上面重新选取新的协调者，我这样理解是对的吗","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503022,"discussion_content":"协调者挂掉了，表示位移主题特定分区的leader副本挂掉了，那么需要首先进行leader选举选出新的leader，然后消费者组连接这个新的leader","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596519438,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":228183,"user_name":"nestle","can_delete":false,"product_type":"c1","uid":1762252,"ip_address":"","ucode":"469800BED81B54","user_header":"https://static001.geekbang.org/account/avatar/00/1a/e3/cc/0947ff0b.jpg","comment_is_top":false,"comment_ctime":1592582330,"is_pvip":false,"replies":[{"id":"84291","content":"不会。joingroup也有超时时间，过期了就不等了<br>","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1592747844,"ip_address":"","comment_id":228183,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5887549626","product_id":100029201,"comment_content":"请教个问题。joingroup和syncgroup都是通过调用poll发送的。如果有一个consumer调用poll中间间隔了很长时间，并且在这期间发生了rebalance，coordinator由于一直无法收到这个consumer的joingroup，是不是就会卡住整个rebalance，想问下coordinator是怎么处理这种情况的，最长会等待多久？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498947,"discussion_content":"不会。joingroup也有超时时间，过期了就不等了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592747844,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":189279,"user_name":"大坏狐狸","can_delete":false,"product_type":"c1","uid":1325678,"ip_address":"","ucode":"5044F89A505C5B","user_header":"https://static001.geekbang.org/account/avatar/00/14/3a/6e/e39e90ca.jpg","comment_is_top":false,"comment_ctime":1584495196,"is_pvip":false,"replies":[{"id":"73066","content":"Coordinator是协调者啊，所有协调工作由它来完成，不能由leader consumer来做。所有Consumer与Coordinator进行交互而不是彼此交互。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1584579599,"ip_address":"","comment_id":189279,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5879462492","product_id":100029201,"comment_content":"等Leader Consumer统计完 直接告诉 其他消费成员 然后 再syncGroup里面通知 Coordinator 这些信息可以吗？为什么 统计完 告诉Coordinator，然后再由Coordinator 通知其他人呢？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487660,"discussion_content":"Coordinator是协调者啊，所有协调工作由它来完成，不能由leader consumer来做。所有Consumer与Coordinator进行交互而不是彼此交互。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584579599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142492,"user_name":"快跑","can_delete":false,"product_type":"c1","uid":1564645,"ip_address":"","ucode":"90ED7E6D40C58E","user_header":"https://static001.geekbang.org/account/avatar/00/17/df/e5/65e37812.jpg","comment_is_top":false,"comment_ctime":1571379821,"is_pvip":false,"replies":[{"id":"55214","content":"不会造成数据丢失，但可能造成数据重复消费。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1571616220,"ip_address":"","comment_id":142492,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5866347117","product_id":100029201,"comment_content":"老师你好，真实场景中遇到如下问题，请教一下。<br>跑了一整天的数据，同离线数据按小时粒度相比，大部分小时能对齐数据，查看数据对不起的那个小时的消费者日志，发现如下log，<br>19&#47;10&#47;15 22:46:00 ERROR ConsumerCoordinator: Offset commit failed.<br>19&#47;10&#47;15 22:46:00 INFO AbstractCoordinator: (Re-)joining group test_group<br>rebalance会造成数据丢失么？ 是因为这种rebalance造成的数据丢失？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471148,"discussion_content":"不会造成数据丢失，但可能造成数据重复消费。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571616220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125150,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1566101002,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5861068298","product_id":100029201,"comment_content":"白话小结一下<br>1：消费者组重平衡<br>1-1：时机——干活的人有变动或者干的活有变动，就需要重新为每个干活者重新分配所干的活。<br>人员变动——消费者组的成员有变动<br>活有变动——消费者组消费的主题有变动或者消费者组消费的主题的分区有变动<br>1-2：方式——协调者类似监工一样，要求干活者每隔一段时间都要报告自己是否还活着，利用这个报告机制可以顺便发起重平衡<br>1-3：过程——协调者发现人或活有变化了，就发起重平衡的通知，然后每个干活者重新加入分组，协调者让消费者leader来给出一个分活方案，然后按这个方案来分活。<br>看评论里，老师说“消费者里的消费者可能订阅不同的主题”，我一直的理解是一个消费者组里的消费者只能消费同一个主题下的不同分区，哪请问老师，如果一个消费者组里的消费者可以订阅不同的主题，那那些消费者订阅那些主题，这个怎么分配？感觉有点懵，不知是不是理解有偏差？","like_count":1},{"had_liked":false,"id":122671,"user_name":"sonald","can_delete":false,"product_type":"c1","uid":1028090,"ip_address":"","ucode":"BBE5F144978952","user_header":"https://static001.geekbang.org/account/avatar/00/0f/af/fa/5714677b.jpg","comment_is_top":false,"comment_ctime":1565483303,"is_pvip":true,"replies":[{"id":"45069","content":"“消费者组的状态是哪端维护的” -- Broker端","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1565571425,"ip_address":"","comment_id":122671,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5860450599","product_id":100029201,"comment_content":"消费者组的状态是哪端维护的？协调者还是每个消费者都有？我感觉是在协调者端。如果是在协调者端，这个Empty状态是怎么进入的呢。在一个消费者组还没有任何消费者进入时，协调者连group.id都不知道吧。","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462353,"discussion_content":"“消费者组的状态是哪端维护的” -- Broker端","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565571425,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122272,"user_name":"icejoywoo","can_delete":false,"product_type":"c1","uid":1019222,"ip_address":"","ucode":"E68C8B54D07EC3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/56/2a04dd88.jpg","comment_is_top":false,"comment_ctime":1565327829,"is_pvip":false,"replies":[{"id":"44932","content":"broker端自行做分配的弊端在于修改一次不容易。不如client端来的方便","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1565348384,"ip_address":"","comment_id":122272,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5860295125","product_id":100029201,"comment_content":"rebalance的时候需要有leader consumer，如果让coordinator来做leader consumer的工作，计算分配consumer需要的分区，在变更时最小化更改，这样可行么？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462182,"discussion_content":"broker端自行做分配的弊端在于修改一次不容易。不如client端来的方便","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565348384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121361,"user_name":"外星人","can_delete":false,"product_type":"c1","uid":1132861,"ip_address":"","ucode":"D8469B13F2AB37","user_header":"https://static001.geekbang.org/account/avatar/00/11/49/3d/4ac37cc2.jpg","comment_is_top":false,"comment_ctime":1565106200,"is_pvip":false,"replies":[{"id":"44617","content":"没有固定比例，调大request队列再试试呢","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1565138492,"ip_address":"","comment_id":121361,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5860073496","product_id":100029201,"comment_content":"你好，之前我们有调整num.network.threads为12，num.io.threads为24，但是还会有request队列满，请问下，这两个参数的比例大概是多少啊？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461760,"discussion_content":"没有固定比例，调大request队列再试试呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565138492,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119458,"user_name":"ban","can_delete":false,"product_type":"c1","uid":1034204,"ip_address":"","ucode":"E523CE97E48266","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c7/dc/9408c8c2.jpg","comment_is_top":false,"comment_ctime":1564593906,"is_pvip":false,"replies":[{"id":"43858","content":"最长不会超过10s，也有可能马上就能感知到","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1564627433,"ip_address":"","comment_id":119458,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5859561202","product_id":100029201,"comment_content":"老师，这段话“但崩溃离组是被动的，协调者通常需要等待一段时间才能感知到，这段时间一般是由消费者端参数 session.timeout.ms 控制的。也就是说，Kafka 一般不会超过 session.timeout.ms 就能感知到这个崩溃。”<br><br>如果我的session.timeout.ms配置了10秒，是不是应该要10秒才能感知这个崩溃。但是我看你的原文“不会超过 session.timeout.ms 就能感知”，好像感觉是说10内就能感知，还没有超时应该不能告知到崩溃了把","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460911,"discussion_content":"最长不会超过10s，也有可能马上就能感知到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564627433,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118801,"user_name":"cricket1981","can_delete":false,"product_type":"c1","uid":1001715,"ip_address":"","ucode":"758262F5958DA4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/f3/f1034ffd.jpg","comment_is_top":false,"comment_ctime":1564448555,"is_pvip":false,"replies":[{"id":"43562","content":"不是。前者顾名思义就是判断session过期与否的，后者是控制心跳线程的发送频率，主要用于控制rebalance通知的频次","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1564452259,"ip_address":"","comment_id":118801,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5859415851","product_id":100029201,"comment_content":"为什么要等到session.timeout.ms才感知，而不是heartbeat.interval.ms感知？两者有何区别？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460586,"discussion_content":"不是。前者顾名思义就是判断session过期与否的，后者是控制心跳线程的发送频率，主要用于控制rebalance通知的频次","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564452259,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118786,"user_name":"吴宇晨","can_delete":false,"product_type":"c1","uid":1199968,"ip_address":"","ucode":"F8F45B7067DF6D","user_header":"https://static001.geekbang.org/account/avatar/00/12/4f/60/049a20e9.jpg","comment_is_top":false,"comment_ctime":1564447628,"is_pvip":false,"replies":[{"id":"43564","content":"终端消费是指？你是不是说不需要用group帮我分配，我自己分配来消费订阅主题？如果是的话，那么的确，摒弃group是很多框架集成kafka的“标配”了","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1564452335,"ip_address":"","comment_id":118786,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5859414924","product_id":100029201,"comment_content":"老师好，如果保持原来的分区分配结果，而不是重新加入组，是不是就可以不用终端消费了","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460575,"discussion_content":"终端消费是指？你是不是说不需要用group帮我分配，我自己分配来消费订阅主题？如果是的话，那么的确，摒弃group是很多框架集成kafka的“标配”了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564452335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118777,"user_name":"青石","can_delete":false,"product_type":"c1","uid":1215531,"ip_address":"","ucode":"B0056AD6453322","user_header":"https://static001.geekbang.org/account/avatar/00/12/8c/2b/3ab96998.jpg","comment_is_top":false,"comment_ctime":1564447010,"is_pvip":false,"replies":[{"id":"43566","content":"和主题关系不大。是同一个消费者组下的所有consumer","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1564452364,"ip_address":"","comment_id":118777,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5859414306","product_id":100029201,"comment_content":"老师，从“消费者端重平衡流程”的图1来看，消费者joingroup时，重平衡过程是所以主题都会发生rebalance？还是说只是成员1要消费主题a数据时，只有主题a的消费组会发生rebalance？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460570,"discussion_content":"和主题关系不大。是同一个消费者组下的所有consumer","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564452364,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118746,"user_name":"玉剑冰锋","can_delete":false,"product_type":"c1","uid":1214202,"ip_address":"","ucode":"8EA56A71BA5B22","user_header":"https://static001.geekbang.org/account/avatar/00/12/86/fa/4bcd7365.jpg","comment_is_top":false,"comment_ctime":1564444920,"is_pvip":false,"replies":[{"id":"43512","content":"不会的","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1564446866,"ip_address":"","comment_id":118746,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5859412216","product_id":100029201,"comment_content":"如果是只有empty状态的消费者组才可以执行删除操作，是不是可以说删除位移的操作也触发重平衡？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460556,"discussion_content":"不会的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564446866,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353106,"user_name":"阿海","can_delete":false,"product_type":"c1","uid":1281585,"ip_address":"北京","ucode":"2589431F840C42","user_header":"https://static001.geekbang.org/account/avatar/00/13/8e/31/28972804.jpg","comment_is_top":false,"comment_ctime":1659171631,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1659171631","product_id":100029201,"comment_content":"协调者为啥不能制订消费方案，而是由某个消费者leader制定消费方案？","like_count":0},{"had_liked":false,"id":350697,"user_name":"凯文小猪","can_delete":false,"product_type":"c1","uid":1980201,"ip_address":"","ucode":"36D8AD0229547F","user_header":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","comment_is_top":false,"comment_ctime":1657100774,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657100774","product_id":100029201,"comment_content":"有个疑问请教老师：<br>join group延时任务是通过 ：当前加入组员数量与还未回复响应的连接数等值做判断<br>代码如下：<br>hasAllMembersJoined = members.size == numMembersAwaitingJoin &amp;&amp; pendingMembers.isEmpty<br>比方说 消费者组刚启动时，A，B，C依次间隔启动（线上通过脚本控制间隔延迟500ms）就会造成<br>A启动时完成一次重平衡，B启动时完成一次重平衡，诸如此类。 <br>个人感觉 重平衡应该只有一次才对，效率始终不高","like_count":0},{"had_liked":false,"id":350696,"user_name":"凯文小猪","can_delete":false,"product_type":"c1","uid":1980201,"ip_address":"","ucode":"36D8AD0229547F","user_header":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","comment_is_top":false,"comment_ctime":1657100563,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657100563","product_id":100029201,"comment_content":"请教老师两个问题：<br>1.join group的延时任务判断是否全部加入 是用","like_count":0},{"had_liked":false,"id":346939,"user_name":"Grocker","can_delete":false,"product_type":"c1","uid":1326004,"ip_address":"","ucode":"CFF2E493AE83DF","user_header":"","comment_is_top":false,"comment_ctime":1653548679,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653548679","product_id":100029201,"comment_content":"SyncGroup 请求的处理流程图右下角的图例应该是SyncGroup请求和SyncGroup响应吧？","like_count":0},{"had_liked":false,"id":346139,"user_name":"瀚海","can_delete":false,"product_type":"c1","uid":2062203,"ip_address":"","ucode":"E64C22F3F6D285","user_header":"https://static001.geekbang.org/account/avatar/00/1f/77/7b/338c4617.jpg","comment_is_top":false,"comment_ctime":1652854675,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1652854675","product_id":100029201,"comment_content":"老师   协调者为什么要把信息发送给消费leader来决定分配方案？     既然协调者有这些信息，为什么不直接自己生成分配方案？","like_count":0},{"had_liked":false,"id":337210,"user_name":"李超","can_delete":false,"product_type":"c1","uid":1847915,"ip_address":"","ucode":"65E6A4BB60035B","user_header":"","comment_is_top":false,"comment_ctime":1646701937,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646701937","product_id":100029201,"comment_content":"场景二 leaveGroup箭头是不是反了。","like_count":0},{"had_liked":false,"id":333459,"user_name":"秋天","can_delete":false,"product_type":"c1","uid":1057056,"ip_address":"","ucode":"A7E1D953EF7E17","user_header":"https://static001.geekbang.org/account/avatar/00/10/21/20/1299e137.jpg","comment_is_top":false,"comment_ctime":1644372626,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1644372626","product_id":100029201,"comment_content":"SyncGroup 这个请求流程图下面的箭头 标识错了 应该是SyncGroup请求和响应","like_count":0},{"had_liked":false,"id":330150,"user_name":"Geek4548","can_delete":false,"product_type":"c1","uid":2844951,"ip_address":"","ucode":"572A5E79D140F4","user_header":"","comment_is_top":false,"comment_ctime":1641816655,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1641816655","product_id":100029201,"comment_content":"什么是partition-level consumers？","like_count":0},{"had_liked":false,"id":330149,"user_name":"Geek4548","can_delete":false,"product_type":"c1","uid":2844951,"ip_address":"","ucode":"572A5E79D140F4","user_header":"","comment_is_top":false,"comment_ctime":1641816406,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1641816406","product_id":100029201,"comment_content":"config.Group.Mode =ConsumerModePartitions这个参数是消费者组的吗？","like_count":0},{"had_liked":false,"id":325243,"user_name":"Sampson","can_delete":false,"product_type":"c1","uid":1418226,"ip_address":"","ucode":"BA78CA29A6D898","user_header":"https://static001.geekbang.org/account/avatar/00/15/a3/f2/ab8c5183.jpg","comment_is_top":false,"comment_ctime":1638874555,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1638874555","product_id":100029201,"comment_content":"老师，您好。我有个疑问想请教下，这里提到消费者组，请帮忙看下一下说法是否正确：<br>1 这里的消费者组也就是我们在写消费者代码的时候给定的参数 group.id 的值 ，相同的 group.id 是在同一个消费者组中，这里不区分topic 。 <br>2 我在kafka集群运行稳定一段时间之后，新启动了一个消费者，这个group.id 是一个新的值( 在已有kafka集群中未出现过 ) ， 是不是表示broker端需要新启动一个协调者( Coordinator )呢 。","like_count":0},{"had_liked":false,"id":324279,"user_name":"꧁༺༻꧂","can_delete":false,"product_type":"c1","uid":1178426,"ip_address":"","ucode":"8BFD5C1F6ED235","user_header":"https://static001.geekbang.org/account/avatar/00/11/fb/3a/3dc7c61c.jpg","comment_is_top":false,"comment_ctime":1638355130,"is_pvip":true,"discussion_count":0,"race_medal":5,"score":"1638355130","product_id":100029201,"comment_content":"胡老师，我有一个问题请教一下，rebalance中，对于组成员崩溃离组，它的位移信息怎么办呢？以最后同步给coordinator 的为准么？","like_count":0},{"had_liked":false,"id":304986,"user_name":"店小二#2","can_delete":false,"product_type":"c1","uid":1130925,"ip_address":"","ucode":"6103E9AE52F8E7","user_header":"https://static001.geekbang.org/account/avatar/00/11/41/ad/4ccf4238.jpg","comment_is_top":false,"comment_ctime":1627734336,"is_pvip":false,"replies":[{"id":"112542","content":"成员数量发生变化、订阅分区数发生变化","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1630810969,"ip_address":"","comment_id":304986,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1627734336","product_id":100029201,"comment_content":"老师，状态流转时，由Empty 状态--&gt;PreparingRebalance状态，触发条件是准备开启reblance。请问由哪几种场景会触发该条件？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":524238,"discussion_content":"成员数量发生变化、订阅分区数发生变化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630810969,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":304398,"user_name":"张三丰","can_delete":false,"product_type":"c1","uid":1155275,"ip_address":"","ucode":"3A6215A40B3B21","user_header":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","comment_is_top":false,"comment_ctime":1627386685,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627386685","product_id":100029201,"comment_content":"老师，kafka为何要做下面的这个操作？比如消费者业务还未处理完也要马上提交位移吗？ 还是说当前处理完业务准备提交位移的消费者组在超时时间内提交？<br><br><br>当重平衡开启时，协调者会给予成员一段缓冲时间，要求每个成员必须在这段时间内快速地上报自己的位移信息，","like_count":0},{"had_liked":false,"id":299631,"user_name":"非洲黑猴子","can_delete":false,"product_type":"c1","uid":2639724,"ip_address":"","ucode":"F5FEAC07D562E0","user_header":"https://static001.geekbang.org/account/avatar/00/28/47/6c/78184d19.jpg","comment_is_top":false,"comment_ctime":1624768527,"is_pvip":true,"replies":[{"id":"109458","content":"确实是，感谢指正","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1626242338,"ip_address":"","comment_id":299631,"utype":1}],"discussion_count":1,"race_medal":5,"score":"1624768527","product_id":100029201,"comment_content":"胡老师，您的“场景二：组成员主动离组”的时序图中，成员1 Leave Group的请求和响应的时序画错了，顺序反了，不可能先有响应后有请求。","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522491,"discussion_content":"确实是，感谢指正","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626242338,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":292389,"user_name":"Geek_7154d8","can_delete":false,"product_type":"c1","uid":2412914,"ip_address":"","ucode":"AF1AF3171BF744","user_header":"","comment_is_top":false,"comment_ctime":1620802976,"is_pvip":false,"replies":[{"id":"105881","content":"那就不使用消费者组","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1620818923,"ip_address":"","comment_id":292389,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1620802976","product_id":100029201,"comment_content":"使用消费者组的情况下，能关闭重平衡吗","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519807,"discussion_content":"那就不使用消费者组","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620818923,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":289568,"user_name":"年年有余","can_delete":false,"product_type":"c1","uid":1389615,"ip_address":"","ucode":"A6835BB6106A0D","user_header":"https://static001.geekbang.org/account/avatar/00/15/34/2f/6cc3ac75.jpg","comment_is_top":false,"comment_ctime":1619083680,"is_pvip":false,"replies":[{"id":"105285","content":"1、老版本也有<br>2、每个group都有各自的Coordinator，就是看对应__consumer_offsets分区leader副本所在的broker","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1619599929,"ip_address":"","comment_id":289568,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1619083680","product_id":100029201,"comment_content":"Coordinator的概念貌似没有讲。<br>1. 它的产生背景是什么？旧版本貌似没有这个概念<br>2. 它是怎么选举出来的？看其他文章的介绍，一个group对应一个Coordinator<br><br>","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518953,"discussion_content":"1、老版本也有\n2、每个group都有各自的Coordinator，就是看对应__consumer_offsets分区leader副本所在的broker","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619599929,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":286112,"user_name":"beifengzhishen001","can_delete":false,"product_type":"c1","uid":2109853,"ip_address":"","ucode":"77D42B7DD9E754","user_header":"","comment_is_top":false,"comment_ctime":1617158570,"is_pvip":false,"replies":[{"id":"104162","content":"如果是老版的consumer group机制，那么会的。新版引入了static member和sticky分配，已分配好的分区不会再发生rebalance","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1617671356,"ip_address":"","comment_id":286112,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1617158570","product_id":100029201,"comment_content":"请问老师，当一个消费者组订阅了新的主题，只需要针对新的主题下各个分区在组成员内部做分配，原来已经订阅的主题下的分区还会在组内进行再平衡操作么","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517870,"discussion_content":"如果是老版的consumer group机制，那么会的。新版引入了static member和sticky分配，已分配好的分区不会再发生rebalance","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617671356,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":284627,"user_name":"归零","can_delete":false,"product_type":"c1","uid":1103208,"ip_address":"","ucode":"C99B8E93009A46","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/68/2201b6b9.jpg","comment_is_top":false,"comment_ctime":1616394671,"is_pvip":true,"replies":[{"id":"103533","content":"1. dead状态是终态，比如consumer group被完全删除时<br>2. 消费者组是个逻辑概念，底层是由具体的一个个消费者组成，每个消费者有自己的订阅列表","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1616721819,"ip_address":"","comment_id":284627,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1616394671","product_id":100029201,"comment_content":"老师好，咨询两个小问题：<br>1.消费组中的dead状态中，位移主题分区leader发生变更怎么理解呢？这个为什么会导致dead状态？<br>2.对于消费着join group请求中，每个消费者会携带订阅的主题？为什么每个消费者会知道自己订阅的主题呢？我们一般指定消费的主题不是在消费者组这个级别吗？<br>谢谢老师！","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517410,"discussion_content":"1. dead状态是终态，比如consumer group被完全删除时\n2. 消费者组是个逻辑概念，底层是由具体的一个个消费者组成，每个消费者有自己的订阅列表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616721819,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":276902,"user_name":"Raremaa","can_delete":false,"product_type":"c1","uid":2109261,"ip_address":"","ucode":"8BA7D9F4291314","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/TcUFDfteDEF3FTmliaPUuZIrJyuaFrcur89osEju6OgWGicAZstxmjbQhIqYRUAWicI0jWw80HdT96bXjob30vnfQ/132","comment_is_top":false,"comment_ctime":1612171023,"is_pvip":false,"replies":[{"id":"101023","content":"没有什么高深的算法，就是第一个入组的成员成为leader","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1612833943,"ip_address":"","comment_id":276902,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1612171023","product_id":100029201,"comment_content":"想问下老师，哪个消费者成为Leader是用了什么共识算法吗，还是就是选择第一个发送JoinGroup请求的","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514857,"discussion_content":"没有什么高深的算法，就是第一个入组的成员成为leader","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612833943,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":275197,"user_name":"jsh","can_delete":false,"product_type":"c1","uid":1459134,"ip_address":"","ucode":"EF42A2836A4708","user_header":"https://static001.geekbang.org/account/avatar/00/16/43/be/e7fd0a10.jpg","comment_is_top":false,"comment_ctime":1611384776,"is_pvip":false,"replies":[{"id":"100459","content":"返回join group前的状态","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1612143463,"ip_address":"","comment_id":275197,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1611384776","product_id":100029201,"comment_content":"完成 joinGroup 后，若 leader consumer syncGroupReq 超时， broker 是怎么处理的？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514255,"discussion_content":"返回join group前的状态","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612143463,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":273528,"user_name":"随心而至","can_delete":false,"product_type":"c1","uid":1097836,"ip_address":"","ucode":"31866865255101","user_header":"https://static001.geekbang.org/account/avatar/00/10/c0/6c/29be1864.jpg","comment_is_top":false,"comment_ctime":1610625862,"is_pvip":false,"replies":[{"id":"99933","content":"1. scala consumer就是采用你说的这个思路，让Coordinator来做分配。后面社区发现把分区分配放到clients端做更有好处，因为clients端代码通常更容易地演进；<br>2. 前者是通知rebalance什么时候做的间隔，后者是rebalance到底要不要做的参数","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1611539594,"ip_address":"","comment_id":273528,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1610625862","product_id":100029201,"comment_content":"既然协调者知道所有消费者组订阅信息，那为什么还要选择消费者之一作为消费者组的领导者分配消费方案，而不是直接让协调者分配消费方案，是为了不让协调者做太多事情吗，毕竟可能存在多个消费者组，另外消费者闲着也是闲着？<br>既然各个消费者会定期向协调者发送心跳，按理说根据heartbeat.interval.ms的值就可以知道这个消费者挂了，为什么还需要session.timeout.ms呢？<br>是因为每隔session.timeout.ms才会去扫一遍消费者最新心跳时间，而不是有个线程在后台这么一直扫吗？<br>还请老师帮忙解答","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513623,"discussion_content":"1. scala consumer就是采用你说的这个思路，让Coordinator来做分配。后面社区发现把分区分配放到clients端做更有好处，因为clients端代码通常更容易地演进；\n2. 前者是通知rebalance什么时候做的间隔，后者是rebalance到底要不要做的参数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611539594,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1097836,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c0/6c/29be1864.jpg","nickname":"随心而至","note":"","ucode":"31866865255101","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342297,"discussion_content":"刷评论，这个已经被解答过了：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610628992,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":268261,"user_name":"成立-Charlie","can_delete":false,"product_type":"c1","uid":1091556,"ip_address":"","ucode":"2970BB5446B70A","user_header":"https://static001.geekbang.org/account/avatar/00/10/a7/e4/5a4515e9.jpg","comment_is_top":false,"comment_ctime":1608116317,"is_pvip":false,"replies":[{"id":"98450","content":"嗯嗯，默认的分配器可能出现这样的不均匀情况。试试partition.assignment.strategy=StickyAssignor","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1609724395,"ip_address":"","comment_id":268261,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1608116317","product_id":100029201,"comment_content":"老师，如何能结合partitons的数量及consumer的线程数讲解一下就更好了。我在kakfa2.4中，一个主题有10个分区，5个消费者，每个消费者最大的线程数（max.threads.num）是4, 逐个启动5个消费者后发现，有的消费者消费了4个分区，有的只消费一个分区，还有时候有一个消费者没有消费任何分区，各个消费者消费的分区数量出现不均衡的情况。我不确定这是新的设计，还有有什么其他的问题。","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511890,"discussion_content":"嗯嗯，默认的分配器可能出现这样的不均匀情况。试试partition.assignment.strategy=StickyAssignor","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609724395,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":250220,"user_name":"旭杰","can_delete":false,"product_type":"c1","uid":1242099,"ip_address":"","ucode":"964603ACF81B28","user_header":"https://static001.geekbang.org/account/avatar/00/12/f3/f3/3fbb4c38.jpg","comment_is_top":false,"comment_ctime":1600996650,"is_pvip":false,"replies":[{"id":"91724","content":"Coordinator的确会根据JoinGroup的顺序进行赋值。不过不是从0赋值。因为ID命名的规则是clientId-&lt;随机UUID&gt;","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1601177293,"ip_address":"","comment_id":250220,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1600996650","product_id":100029201,"comment_content":"关于组成员ID，调用JoinGroup时，每个成员应该不清楚自己的组内成员ID,该ID是协调者响应的时候给赋值的，这种理解是否正确？如果是这样的话 协调者是根据JoinGroup顺序从0依次赋值？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506155,"discussion_content":"Coordinator的确会根据JoinGroup的顺序进行赋值。不过不是从0赋值。因为ID命名的规则是clientId-&amp;lt;随机UUID&amp;gt;","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601177293,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":250124,"user_name":"旭杰","can_delete":false,"product_type":"c1","uid":1242099,"ip_address":"","ucode":"964603ACF81B28","user_header":"https://static001.geekbang.org/account/avatar/00/12/f3/f3/3fbb4c38.jpg","comment_is_top":false,"comment_ctime":1600942103,"is_pvip":false,"replies":[{"id":"91725","content":"可能是一个线程，也可能是不同的线程。取决于JoinGroupRequest和SyncGroupRequest是否被同一个KafkaRequestHandler处理","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1601177350,"ip_address":"","comment_id":250124,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1600942103","product_id":100029201,"comment_content":"关于重平衡期间位移提交：位移提交和发送JoinGroup&#47;SyncGroup请求是由两个线程分别处理的。<br>正常流程：线程A rebalance time内位移一旦提交完毕，线程B接收到提交完毕状态后开始执行JoinGroup请求<br>异常情况：线程A rebalance time内位移未提交完毕，线程B等待超时后开始执行JoinGroup请求，线程A后面继续提交的位移被协调者拒绝。<br>这样理解不知道是否正确","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506131,"discussion_content":"可能是一个线程，也可能是不同的线程。取决于JoinGroupRequest和SyncGroupRequest是否被同一个KafkaRequestHandler处理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601177350,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":245395,"user_name":"对与错","can_delete":false,"product_type":"c1","uid":1682027,"ip_address":"","ucode":"EF55733E3BD78B","user_header":"https://static001.geekbang.org/account/avatar/00/19/aa/6b/ab9a072a.jpg","comment_is_top":false,"comment_ctime":1598931739,"is_pvip":false,"replies":[{"id":"90270","content":"会的。消费者会尝试重新加入消费者组","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1598945435,"ip_address":"","comment_id":245395,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1598931739","product_id":100029201,"comment_content":"请问超过max.poll.interval.ms的时间，会导致reblance，后面这个消费者会自动重新(不被重启和人工干预)加入该消费者组吗","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504870,"discussion_content":"会的。消费者会尝试重新加入消费者组","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598945435,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":243770,"user_name":"对与错","can_delete":false,"product_type":"c1","uid":1682027,"ip_address":"","ucode":"EF55733E3BD78B","user_header":"https://static001.geekbang.org/account/avatar/00/19/aa/6b/ab9a072a.jpg","comment_is_top":false,"comment_ctime":1598271462,"is_pvip":false,"replies":[{"id":"89833","content":"不会rebalance，但是也不能消费了","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1598316538,"ip_address":"","comment_id":243770,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1598271462","product_id":100029201,"comment_content":"接上一个问题，请问ISR中只有一个leader副本，并且没有开启unclean，这种情况的leader副本挂掉导致分区不可用，也不会触发reblance吗？消费者也能正常消费到这个分区吗？<br>————————————————————————-<br>请问分区不可用(不是分区数量减少)，那么这种情况会触发reblance吗?并且这种情况consumer还能消费此分区的数据吗？<br>作者回复: 不会。分区不可用就进行leader选举，不会rebalance","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504390,"discussion_content":"不会rebalance，但是也不能消费了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598316538,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":243578,"user_name":"对与错","can_delete":false,"product_type":"c1","uid":1682027,"ip_address":"","ucode":"EF55733E3BD78B","user_header":"https://static001.geekbang.org/account/avatar/00/19/aa/6b/ab9a072a.jpg","comment_is_top":false,"comment_ctime":1598193749,"is_pvip":false,"replies":[{"id":"89758","content":"不会。分区不可用就进行leader选举，不会rebalance","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1598231716,"ip_address":"","comment_id":243578,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1598193749","product_id":100029201,"comment_content":"请问分区不可用(不是分区数量减少)，那么这种情况会触发reblance吗?并且这种情况consumer还能消费此分区的数据吗？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504330,"discussion_content":"不会。分区不可用就进行leader选举，不会rebalance","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598231716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242416,"user_name":"天敌","can_delete":false,"product_type":"c1","uid":1059944,"ip_address":"","ucode":"CD29A622197197","user_header":"https://static001.geekbang.org/account/avatar/00/10/2c/68/c299bc71.jpg","comment_is_top":false,"comment_ctime":1597717388,"is_pvip":false,"replies":[{"id":"89550","content":"场景四不是提交位移导致rebalance，而是想说明rebalance时如何处理提交位移","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1597885838,"ip_address":"","comment_id":242416,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1597717388","product_id":100029201,"comment_content":"老师，场景四的组成员提交位移为什么会发生重平衡？这里是指提交位移时发生重平衡，Kafka是如何处理的吗？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504005,"discussion_content":"场景四不是提交位移导致rebalance，而是想说明rebalance时如何处理提交位移","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597885838,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":237862,"user_name":"对与错","can_delete":false,"product_type":"c1","uid":1682027,"ip_address":"","ucode":"EF55733E3BD78B","user_header":"https://static001.geekbang.org/account/avatar/00/19/aa/6b/ab9a072a.jpg","comment_is_top":false,"comment_ctime":1595988711,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595988711","product_id":100029201,"comment_content":"请问订阅主题发送变化触发reblance的机制和流程是什么?","like_count":0},{"had_liked":false,"id":235595,"user_name":"doniver","can_delete":false,"product_type":"c1","uid":1328349,"ip_address":"","ucode":"4741677F655D49","user_header":"https://static001.geekbang.org/account/avatar/00/14/44/dd/1b4504fd.jpg","comment_is_top":false,"comment_ctime":1595120446,"is_pvip":false,"replies":[{"id":"87077","content":"其实老版本的consumer group就是在broker端执行的分配。改成客户端来执行有诸多原因吧。一个比较重要的原因就是客户端演进更加的轻量级，不像broker端那样重。比如consumer程序可以重启来修改策略，但重启broker就要麻烦得多。当然，这只是原因之一","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1595212323,"ip_address":"","comment_id":235595,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1595120446","product_id":100029201,"comment_content":"老师，请问一下，为什么一定要选取消费者领导者来实施重平衡分配方案？既然协调者知道所有组成员和他们的订阅信息，协调者可以直接在所有joinGroup的回复里返回分配方案，这就不需要syncgroup请求了呀？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501780,"discussion_content":"其实老版本的consumer group就是在broker端执行的分配。改成客户端来执行有诸多原因吧。一个比较重要的原因就是客户端演进更加的轻量级，不像broker端那样重。比如consumer程序可以重启来修改策略，但重启broker就要麻烦得多。当然，这只是原因之一","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595212323,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":228892,"user_name":"玉哥","can_delete":false,"product_type":"c1","uid":1275710,"ip_address":"","ucode":"FC88E11D3A340B","user_header":"https://static001.geekbang.org/account/avatar/00/13/77/3e/702c8782.jpg","comment_is_top":false,"comment_ctime":1592834933,"is_pvip":false,"replies":[{"id":"84414","content":"Rebalance的算法和结果具体是指？我猜你指的算法应该是指分区消费分配策略吧。这个是由consumer端参数partition.assignment.strategy确定的。至于结果，我不确定理解了你的意思。你是想问Rebalance的结果是什么吗？Rebalance之后，组下的所有consumer各自得到一些分区来消费。","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1592874683,"ip_address":"","comment_id":228892,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1592834933","product_id":100029201,"comment_content":"讲了重组的流程，那重组的算法和结果呢？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499239,"discussion_content":"Rebalance的算法和结果具体是指？我猜你指的算法应该是指分区消费分配策略吧。这个是由consumer端参数partition.assignment.strategy确定的。至于结果，我不确定理解了你的意思。你是想问Rebalance的结果是什么吗？Rebalance之后，组下的所有consumer各自得到一些分区来消费。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592874683,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":224876,"user_name":"盛情的jack","can_delete":false,"product_type":"c1","uid":1123566,"ip_address":"","ucode":"E4EDA00FDE07E4","user_header":"https://static001.geekbang.org/account/avatar/00/11/24/ee/12068a33.jpg","comment_is_top":false,"comment_ctime":1591581514,"is_pvip":false,"replies":[{"id":"82957","content":"1. 不是这样的机制。broker不管生产者是不是发送延迟。反正producer发送消息，broker就接收<br>2. 有个参数可以控制选用什么策略。基本上你可以认为是平均分配的策略。如果消费者多于分区数，那么有消费者无法获取分区","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1591709845,"ip_address":"","comment_id":224876,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1591581514","product_id":100029201,"comment_content":"老师，有两个问题请教下：<br>1.生产者发送延迟消费，broke是定时遍历所有数据，去查看哪条数据有没有到发送时间嘛？那这样的话，如果数据超过千万或者百万时候，怎么做呢？<br>2.消费者领导者重新分配这些消费者消费分区的时候，具体是怎么分配？如果分区和消费者不均衡的话，消费者多于分区，或者消费者少于分区，必然不能做到一对一，怎么能做到更好的均衡呢？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497641,"discussion_content":"1. 不是这样的机制。broker不管生产者是不是发送延迟。反正producer发送消息，broker就接收\n2. 有个参数可以控制选用什么策略。基本上你可以认为是平均分配的策略。如果消费者多于分区数，那么有消费者无法获取分区","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591709845,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336951,"avatar":"https://static001.geekbang.org/account/avatar/00/14/66/77/194ba21d.jpg","nickname":"lzh","note":"","ucode":"C3D83DF4230109","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327100,"discussion_content":"生产者发送延迟消费，这句话听起来很怪异","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605747940,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":220012,"user_name":"Treagzhao","can_delete":false,"product_type":"c1","uid":1109643,"ip_address":"","ucode":"906C3A7F33040C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqKurYDna034zK0ibDIWicybibQhiaM6afgla2zVFqBrAemLgCh3WoibjACnic5ibiaYMd29tMB26cjaGaPoA/132","comment_is_top":false,"comment_ctime":1590135459,"is_pvip":false,"replies":[{"id":"81433","content":"比如leader所在broker突然挂了","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1590329772,"ip_address":"","comment_id":220012,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1590135459","product_id":100029201,"comment_content":"老师，状态机里有三个状态都会指向dead，原因是“位移主题分区leader发生变更”，这个是啥意思，为啥会导致从stable直接dead了，感觉好恐怖。","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496024,"discussion_content":"比如leader所在broker突然挂了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590329772,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":219332,"user_name":"胡小禾","can_delete":false,"product_type":"c1","uid":1132315,"ip_address":"","ucode":"1C23B7492C0C9E","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/1b/64262861.jpg","comment_is_top":false,"comment_ctime":1589989995,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589989995","product_id":100029201,"comment_content":"consumer之间不能直接通信，所以需要coordinator作为中介","like_count":0},{"had_liked":false,"id":179989,"user_name":"Ryoma","can_delete":false,"product_type":"c1","uid":1130590,"ip_address":"","ucode":"7F692369239692","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/5e/b8fada94.jpg","comment_is_top":false,"comment_ctime":1582158846,"is_pvip":true,"replies":[{"id":"70004","content":"哈哈哈，从社区的角度来说，那是客户端自己的事情，我不用管，这岂不是一个优势：）<br><br>实际上各有利弊，但在Broker端维护代价要大一些","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1582247511,"ip_address":"","comment_id":179989,"utype":1}],"discussion_count":1,"race_medal":2,"score":"1582158846","product_id":100029201,"comment_content":"我看到老师说分配方案由客户端决定更有优势：比如可以独立演进和上线，不依赖于服务器端。<br>但我觉得由客户端实现也有相应的劣势，比如如果我实现一个新的客户端还需要实现重平衡时的分配方案，这个也是不小的开发成本。社区也没有考虑这一点呢？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484481,"discussion_content":"哈哈哈，从社区的角度来说，那是客户端自己的事情，我不用管，这岂不是一个优势：）\n\n实际上各有利弊，但在Broker端维护代价要大一些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582247511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151149,"user_name":"James","can_delete":false,"product_type":"c1","uid":1134861,"ip_address":"","ucode":"48B0F2A334D1C1","user_header":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","comment_is_top":false,"comment_ctime":1573658320,"is_pvip":false,"replies":[{"id":"58201","content":"分区数变化是指topic增加了分区","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1573695319,"ip_address":"","comment_id":151149,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573658320","product_id":100029201,"comment_content":"老师.好像没有说到订阅主题的分区数发生变化.<br>分区数变化是指broker挂了,或新增吗.","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474381,"discussion_content":"分区数变化是指topic增加了分区","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573695319,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146712,"user_name":"未来小娃","can_delete":false,"product_type":"c1","uid":1047329,"ip_address":"","ucode":"477D166EBB6B70","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/21/d017438c.jpg","comment_is_top":false,"comment_ctime":1572614653,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1572614653","product_id":100029201,"comment_content":"线上遇到一个问题，消费组扩容机器100台，直接把broker打挂了，从重平衡的流程看，是因为","like_count":0},{"had_liked":false,"id":142370,"user_name":"心如大海，春暖花开","can_delete":false,"product_type":"c1","uid":1091809,"ip_address":"","ucode":"594BD19943A620","user_header":"https://static001.geekbang.org/account/avatar/00/10/a8/e1/ebc1a78a.jpg","comment_is_top":false,"comment_ctime":1571360703,"is_pvip":false,"replies":[{"id":"54913","content":"Dead状态下Coordinator会把组的数据删除。这和后面的表述有什么冲突的地方吗？没太明白您的意思。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1571361416,"ip_address":"","comment_id":142370,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571360703","product_id":100029201,"comment_content":"消费组状态dead，先提及是组元数据信息被协调者删除，后面又说到协调者保存元数据信息？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471090,"discussion_content":"Dead状态下Coordinator会把组的数据删除。这和后面的表述有什么冲突的地方吗？没太明白您的意思。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571361416,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135233,"user_name":"Andy","can_delete":false,"product_type":"c1","uid":1515145,"ip_address":"","ucode":"0EF2D58B46D7C3","user_header":"https://static001.geekbang.org/account/avatar/00/17/1e/89/25b12054.jpg","comment_is_top":false,"comment_ctime":1569073628,"is_pvip":false,"replies":[{"id":"51953","content":"可以的","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1569201141,"ip_address":"","comment_id":135233,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569073628","product_id":100029201,"comment_content":"请教老师，使用spark streaming直连kafka，如果kafka分区扩展了，spark streaming还能正确处理来自kafka的数据吗","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468105,"discussion_content":"可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569201141,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131825,"user_name":"朱东旭","can_delete":false,"product_type":"c1","uid":1242338,"ip_address":"","ucode":"C48DD620A63868","user_header":"https://static001.geekbang.org/account/avatar/00/12/f4/e2/dbc4a5f2.jpg","comment_is_top":false,"comment_ctime":1567922879,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567922879","product_id":100029201,"comment_content":"个人认为可以在消费者组下加入子组，作用类似分段锁，每次仅仅新来的消费者加入子组，仅仅在子组内重平衡。","like_count":0},{"had_liked":false,"id":121781,"user_name":"向黎明敬礼","can_delete":false,"product_type":"c1","uid":1241248,"ip_address":"","ucode":"4D7E18FB29C531","user_header":"https://static001.geekbang.org/account/avatar/00/12/f0/a0/f83416e9.jpg","comment_is_top":false,"comment_ctime":1565223851,"is_pvip":false,"replies":[{"id":"44741","content":"leader会通过SyncGroup请求把分配方案发给协调者的","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1565224930,"ip_address":"","comment_id":121781,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565223851","product_id":100029201,"comment_content":"你好老师，请问上面讲SyncGroup是leader会去分配组成员消费哪个分区，下面加入组和离开组的图里画的却是leader去向协调者请求消费哪个组并没有把消费组信息告知协调者是什么原因？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461942,"discussion_content":"leader会通过SyncGroup请求把分配方案发给协调者的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565224930,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121044,"user_name":"杨陆伟","can_delete":false,"product_type":"c1","uid":1108457,"ip_address":"","ucode":"3BC968447406EB","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/e9/1f95e422.jpg","comment_is_top":false,"comment_ctime":1565052689,"is_pvip":true,"replies":[{"id":"44531","content":"感觉合并的好处并没有想象的那么多，那么大。<br>","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1565071243,"ip_address":"","comment_id":121044,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565052689","product_id":100029201,"comment_content":"当消费者组中的成员只有一个时，是不是可以将JoinGroup和SyncGroup的请求响应合并，虽然代码逻辑上多了一个分支，但是对于对Kafka小白的应用来说，一个消费者组一个消费者的情况也不少见","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461589,"discussion_content":"感觉合并的好处并没有想象的那么多，那么大。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565071243,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121034,"user_name":"杨陆伟","can_delete":false,"product_type":"c1","uid":1108457,"ip_address":"","ucode":"3BC968447406EB","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/e9/1f95e422.jpg","comment_is_top":false,"comment_ctime":1565052277,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1565052277","product_id":100029201,"comment_content":"一旦收集了全部成员的 JoinGroup 请求后，协调者会从这些成员中选择一个担任这个消费者组的领导者<br>======这里优点疑问，怎么能确定收集到全部成员的JoinGroup请求呢？如果这点做的不好，就会不断发起重平衡<br>","like_count":0},{"had_liked":false,"id":119983,"user_name":"LRocccccc","can_delete":false,"product_type":"c1","uid":1182612,"ip_address":"","ucode":"F3919A0F05FC0D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er2mibdicqvLI9zA1q7cJDwibfgnnJwIau1Z2icg1VQUFnwSWbniaaY3eUyTia4MeRICchrUodXvLF6iajXQ/132","comment_is_top":false,"comment_ctime":1564743780,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564743780","product_id":100029201,"comment_content":"场景一的SyncGroup请求都是等待leader分配方案？成员2不是在JoinGroup时已经告知是Leader了么？","like_count":0},{"had_liked":false,"id":119806,"user_name":"外星人","can_delete":false,"product_type":"c1","uid":1132861,"ip_address":"","ucode":"D8469B13F2AB37","user_header":"https://static001.geekbang.org/account/avatar/00/11/49/3d/4ac37cc2.jpg","comment_is_top":false,"comment_ctime":1564706173,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564706173","product_id":100029201,"comment_content":"你好，我们生产上会经常扩容机器，针对大的topic只能手动reassign，准确性不好，还容易出错，请问下这块有没有好的解决方案啊？","like_count":0},{"had_liked":false,"id":119377,"user_name":"锦","can_delete":false,"product_type":"c1","uid":1468298,"ip_address":"","ucode":"CB0EB4B68C468B","user_header":"https://static001.geekbang.org/account/avatar/00/16/67/8a/babd74dc.jpg","comment_is_top":false,"comment_ctime":1564574995,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564574995","product_id":100029201,"comment_content":"我觉得协调者可以先自己重平衡，然后把结果同步给组成员，如果发现有些成员不在了，再把该成员的数据分配到其他成员","like_count":0},{"had_liked":false,"id":119317,"user_name":"雨夜听秋的孩子","can_delete":false,"product_type":"c1","uid":1249468,"ip_address":"","ucode":"87D4966719EC63","user_header":"https://static001.geekbang.org/account/avatar/00/13/10/bc/d36b897b.jpg","comment_is_top":false,"comment_ctime":1564560160,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564560160","product_id":100029201,"comment_content":"老师，现需要内网生产消息，公网消费，配置advertise. listeners后生产消息有很长延时，可能是什么原因？","like_count":0},{"had_liked":false,"id":119289,"user_name":"wykkx","can_delete":false,"product_type":"c1","uid":1122358,"ip_address":"","ucode":"ABCDF49E7A95C8","user_header":"https://static001.geekbang.org/account/avatar/00/11/20/36/b3e2f1d5.jpg","comment_is_top":false,"comment_ctime":1564551872,"is_pvip":false,"replies":[{"id":"43860","content":"通常可能是因为客户端、服务器端版本不匹配导致的，可以查看一下。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1564627517,"ip_address":"","comment_id":119289,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1564551872","product_id":100029201,"comment_content":"老师请假一个问题：客户端使用spring的组件写入kafka，很短的文本信息，但是报错如下：<br>WARN [SocketServer brokerId=0] Unexpected error from &#47;192.168.x.x; closing connection (org.apache.kafka.common.network.Selector)<br>org.apache.kafka.common.network.InvalidReceiveException: Invalid receive (size = 1583156490 larger than 104857600)<br>不可能超过100M啊","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460829,"discussion_content":"通常可能是因为客户端、服务器端版本不匹配导致的，可以查看一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564627517,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119183,"user_name":"金hb.Ryan 冷空氣駕到","can_delete":false,"product_type":"c1","uid":1222233,"ip_address":"","ucode":"CAD363576696E4","user_header":"https://static001.geekbang.org/account/avatar/00/12/a6/59/1689ea0c.jpg","comment_is_top":false,"comment_ctime":1564535210,"is_pvip":false,"replies":[{"id":"43861","content":"没太懂。。。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1564627540,"ip_address":"","comment_id":119183,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1564535210","product_id":100029201,"comment_content":"如果始终有消费，那么过期的消息是不会清理的？这样么<br>","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460778,"discussion_content":"没太懂。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564627540,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1361746,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c7/52/c5adf218.jpg","nickname":"喜欢地球的阿培同学","note":"","ucode":"5F97037585F857","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":269411,"discussion_content":"Kafka会自动删除过期日志，而这篇文章老师主要讲的是删除消费组位移数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589900321,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119038,"user_name":"nightmare","can_delete":false,"product_type":"c1","uid":1056314,"ip_address":"","ucode":"EF2E51C2122A86","user_header":"https://static001.geekbang.org/account/avatar/00/10/1e/3a/5b21c01c.jpg","comment_is_top":false,"comment_ctime":1564492318,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1564492318","product_id":100029201,"comment_content":"重平衡组内位移提交的时候，一定要等到位移提交完成才能发生重平衡吗？      我觉得是不是可以让分区分区比较多的消费者发生重平衡就行了，保持分区比较少或者压力较小的不发生重平衡，比如在新的消费者加入消费组的时候","like_count":0,"discussions":[{"author":{"id":1034204,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c7/dc/9408c8c2.jpg","nickname":"ban","note":"","ucode":"E523CE97E48266","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3572,"discussion_content":"如果新加的消费者不重新平衡的话，新加的那不是不知道消费哪个主题和分区了嘛","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564595001,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118950,"user_name":"搞代码的老李头","can_delete":false,"product_type":"c1","uid":1437442,"ip_address":"","ucode":"ED92DF48FB465B","user_header":"https://static001.geekbang.org/account/avatar/00/15/ef/02/eac245f0.jpg","comment_is_top":false,"comment_ctime":1564473406,"is_pvip":false,"replies":[{"id":"43700","content":"是在windows平台上吗？另外能否看下日志，看看SASL握手的时间是多少，主要是看看慢在哪里了？","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1564536895,"ip_address":"","comment_id":118950,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1564473406","product_id":100029201,"comment_content":"胡老师，您好，我这里现在碰到这样一个问题，就是在kafka集群开启了认证后，我用客户端的AdminClient去获取所有主题client.listTopics()，需要大概20s左右才能返回结果，如果kafka未开启认证，则返回结果很快，想请教下老师，这有可能是什么原因造成的。<br><br>broker配置：<br>listeners=SASL_PLAINTEXT:&#47;&#47;host.name:port<br><br>security.inter.broker.protocol=SASL_PLAINTEXT<br><br>sasl.mechanism.inter.broker.protocol=SCRAM-SHA-512<br><br>sasl.enabled.mechanisms=SCRAM-SHA-512<br><br># acl<br><br>allow.everyone.if.no.acl.found=false<br><br>super.users=User:admin<br><br>authorizer.class.name=kafka.security.auth.SimpleAclAuthorizer<br><br>client代码：<br>client.listTopics().names().get()<br><br>kafka版本2.1.1","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460682,"discussion_content":"是在windows平台上吗？另外能否看下日志，看看SASL握手的时间是多少，主要是看看慢在哪里了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564536895,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1437442,"avatar":"https://static001.geekbang.org/account/avatar/00/15/ef/02/eac245f0.jpg","nickname":"搞代码的老李头","note":"","ucode":"ED92DF48FB465B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3507,"discussion_content":"过了9s后收到的请求：\n[2019-07-31 10:32:08,982] DEBUG Completed request:RequestHeader(apiKey=API_VERSIONS, apiVersion=2, clientId=adminclient-1, correlationId=2) -- {},response:{error_code=0,api_versions=[....],throttle_time_ms=0} from connection 192.168.10.154:9092-192.168.10.2:50754-1;totalTime:0.527,requestQueueTime:0.076,localTime:0.345,remoteTime:0.0,throttleTime:0.291,responseQueueTime:0.04,sendTime:0.091,securityProtocol:SASL_PLAINTEXT,principal:User:admin,listener:SASL_PLAINTEXT (kafka.request.logger)\n[2019-07-31 10:32:08,984] DEBUG Completed request:RequestHeader(apiKey=METADATA, apiVersion=7, clientId=adminclient-1, correlationId=3) -- {topics=null,allow_auto_topic_creation=true},response:{throttle_time_ms=0,brokers=[{node_id=0,host=192.168.10.154,port=9092,rack=null}],cluster_id=NEgY_HrNQQ6eCldW-nRd1g,controller_id=0,topic_metadata=[{error_code=0,topic=test,is_internal=false,partition_metadata=[{error_code=0,partition=0,leader=0,leader_epoch=0,replicas=[0],isr=[0],offline_replicas=[]}]}]} from connection 192.168.10.154:9092-192.168.10.2:50754-1;totalTime:0.839,requestQueueTime:0.07,localTime:0.674,remoteTime:0.0,throttleTime:0.349,responseQueueTime:0.048,sendTime:0.079,securityProtocol:SASL_PLAINTEXT,principal:User:admin,listener:SASL_PLAINTEXT (kafka.request.logger)\n\n我看这里返回了test这个主题信息","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564541280,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1437442,"avatar":"https://static001.geekbang.org/account/avatar/00/15/ef/02/eac245f0.jpg","nickname":"搞代码的老李头","note":"","ucode":"ED92DF48FB465B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3506,"discussion_content":"centos上，根本没日志输出，我打开了request日志，有二次请求，时间隔了9s左右，我整理了下日志：\n 首先收到的请求：\n[2019-07-31 10:31:59,943] DEBUG Completed request:RequestHeader(apiKey=API_VERSIONS, apiVersion=2, clientId=adminclient-1, correlationId=0) -- {},response:{error_code=0,api_versions=[....],throttle_time_ms=0} from connection 192.168.10.154:9092-192.168.10.2:50638-1;totalTime:0.819,requestQueueTime:0.07,localTime:0.587,remoteTime:0.0,throttleTime:0.522,responseQueueTime:0.049,sendTime:0.136,securityProtocol:SASL_PLAINTEXT,principal:User:admin,listener:SASL_PLAINTEXT (kafka.request.logger)\n[2019-07-31 10:31:59,946] DEBUG Completed request:RequestHeader(apiKey=METADATA, apiVersion=7, clientId=adminclient-1, correlationId=1) -- {topics=[],allow_auto_topic_creation=true},response:{throttle_time_ms=0,brokers=[{node_id=0,host=192.168.10.154,port=9092,rack=null}],cluster_id=NEgY_HrNQQ6eCldW-nRd1g,controller_id=0,topic_metadata=[]} from connection 192.168.10.154:9092-192.168.10.2:50638-1;totalTime:0.623,requestQueueTime:0.055,localTime:0.459,remoteTime:0.0,throttleTime:0.315,responseQueueTime:0.037,sendTime:0.094,securityProtocol:SASL_PLAINTEXT,principal:User:admin,listener:SASL_PLAINTEXT (kafka.request.logger)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564541204,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118930,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1564470724,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564470724","product_id":100029201,"comment_content":"我们是否能允许部分消费者在重平衡过程中继续消费，以提升消费者端的可用性以及吞吐量？<br>我觉得可以选出领导者，让非领导者继续消费。领导者确定方案后，再让可用的非领导者确定后的方案消费。","like_count":0},{"had_liked":false,"id":118862,"user_name":"南辕北辙","can_delete":false,"product_type":"c1","uid":1214502,"ip_address":"","ucode":"03EC406AE0D591","user_header":"https://static001.geekbang.org/account/avatar/00/12/88/26/b8c53cee.jpg","comment_is_top":false,"comment_ctime":1564453669,"is_pvip":false,"replies":[{"id":"43616","content":"会的","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1564480128,"ip_address":"","comment_id":118862,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1564453669","product_id":100029201,"comment_content":"老师请教一下，在默认情况下，订阅主题的分区数量增加，会自动触发重平衡吗？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460621,"discussion_content":"会的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564480128,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1061244,"avatar":"https://static001.geekbang.org/account/avatar/00/10/31/7c/4316ea4e.jpg","nickname":"银","note":"","ucode":"357B86B9DDEF29","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136527,"discussion_content":"请问下，这个分区数量增加，consumer 是如何告知到的呢，如果需要刷新 metadata过去数量，kafka 默认刷新时间是10分钟，有什么好的办法解决这个问题吗？？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579146015,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}