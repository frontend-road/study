{"id":31644,"title":"10 | Dubbo框架里的微服务组件","content":"<p>经过前面几期的讲解，你应该已经对微服务的架构有了初步的了解。简单回顾一下，微服务的架构主要包括服务描述、服务发现、服务调用、服务监控、服务追踪以及服务治理这几个基本组件。</p><p>那么每个基本组件从架构和代码设计上该如何实现？组件之间又是如何串联来实现一个完整的微服务架构呢？<span class=\"orange\">今天我就以开源微服务框架Dubbo为例来给你具体讲解这些组件。</span></p><h2>服务发布与引用</h2><p>专栏前面我讲过服务发布与引用的三种常用方式：RESTful API、XML配置以及IDL文件，其中Dubbo框架主要是使用XML配置方式，接下来我通过具体实例，来给你讲讲Dubbo框架服务发布与引用是如何实现的。</p><p>首先来看服务发布的过程，下面这段代码是服务提供者的XML配置。</p><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;\n    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n    xmlns:dubbo=&quot;http://dubbo.apache.org/schema/dubbo&quot;\n    xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd        http://dubbo.apache.org/schema/dubbo        http://dubbo.apache.org/schema/dubbo/dubbo.xsd&quot;&gt;\n \n    &lt;!-- 提供方应用信息，用于计算依赖关系 --&gt;\n    &lt;dubbo:application name=&quot;hello-world-app&quot;  /&gt;\n \n    &lt;!-- 使用multicast广播注册中心暴露服务地址 --&gt;\n    &lt;dubbo:registry address=&quot;multicast://224.5.6.7:1234&quot; /&gt;\n \n    &lt;!-- 用dubbo协议在20880端口暴露服务 --&gt;\n    &lt;dubbo:protocol name=&quot;dubbo&quot; port=&quot;20880&quot; /&gt;\n \n    &lt;!-- 声明需要暴露的服务接口 --&gt;\n    &lt;dubbo:service interface=&quot;com.alibaba.dubbo.demo.DemoService&quot; ref=&quot;demoService&quot; /&gt;\n \n    &lt;!-- 和本地bean一样实现服务 --&gt;\n    &lt;bean id=&quot;demoService&quot; class=&quot;com.alibaba.dubbo.demo.provider.DemoServiceImpl&quot; /&gt;\n&lt;/beans&gt;\n</code></pre><p>其中“dubbo:service”开头的配置项声明了服务提供者要发布的接口，“dubbo:protocol”开头的配置项声明了服务提供者要发布的接口的协议以及端口号。</p><p>Dubbo会把以上配置项解析成下面的URL格式：</p><pre><code>dubbo://host-ip:20880/com.alibaba.dubbo.demo.DemoService\n</code></pre><p>然后基于<a href=\"http://dubbo.incubator.apache.org/zh-cn/docs/dev/SPI.html\">扩展点自适应机制</a>，通过URL的“dubbo://”协议头识别，就会调用DubboProtocol的export()方法，打开服务端口20880，就可以把服务demoService暴露到20880端口了。</p><!-- [[[read_end]]] --><p>再来看下服务引用的过程，下面这段代码是服务消费者的XML配置。</p><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;\n    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n    xmlns:dubbo=&quot;http://dubbo.apache.org/schema/dubbo&quot;\n    xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd        http://dubbo.apache.org/schema/dubbo        http://dubbo.apache.org/schema/dubbo/dubbo.xsd&quot;&gt;\n \n    &lt;!-- 消费方应用名，用于计算依赖关系，不是匹配条件，不要与提供方一样 --&gt;\n    &lt;dubbo:application name=&quot;consumer-of-helloworld-app&quot;  /&gt;\n \n    &lt;!-- 使用multicast广播注册中心暴露发现服务地址 --&gt;\n    &lt;dubbo:registry address=&quot;multicast://224.5.6.7:1234&quot; /&gt;\n \n    &lt;!-- 生成远程服务代理，可以和本地bean一样使用demoService --&gt;\n    &lt;dubbo:reference id=&quot;demoService&quot; interface=&quot;com.alibaba.dubbo.demo.DemoService&quot; /&gt;\n&lt;/beans&gt;\n</code></pre><p>其中“dubbo:reference”开头的配置项声明了服务消费者要引用的服务，Dubbo会把以上配置项解析成下面的URL格式：</p><pre><code>dubbo://com.alibaba.dubbo.demo.DemoService\n</code></pre><p>然后基于扩展点自适应机制，通过URL的“dubbo://”协议头识别，就会调用DubboProtocol的refer()方法，得到服务demoService引用，完成服务引用过程。</p><h2>服务注册与发现</h2><p>先来看下服务提供者注册服务的过程，继续以前面服务提供者的XML配置为例，其中“dubbo://registry”开头的配置项声明了注册中心的地址，Dubbo会把以上配置项解析成下面的URL格式：</p><pre><code>registry://multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?export=URL.encode(&quot;dubbo://host-ip:20880/com.alibaba.dubbo.demo.DemoService&quot;)\n</code></pre><p>然后基于扩展点自适应机制，通过URL的“registry://”协议头识别，就会调用RegistryProtocol的export()方法，将export参数中的提供者URL，注册到注册中心。</p><p>再来看下服务消费者发现服务的过程，同样以前面服务消费者的XML配置为例，其中“dubbo://registry”开头的配置项声明了注册中心的地址，跟服务注册的原理类似，Dubbo也会把以上配置项解析成下面的URL格式：</p><pre><code>registry://multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?refer=URL.encode(&quot;consummer://host-ip/com.alibaba.dubbo.demo.DemoService&quot;)\n</code></pre><p>然后基于扩展点自适应机制，通过URL的“registry://”协议头识别，就会调用RegistryProtocol的refer()方法，基于refer参数中的条件，查询服务demoService的地址。</p><h2>服务调用</h2><p>专栏前面我讲过在服务调用的过程中，通常把服务消费者叫作客户端，服务提供者叫作服务端，发起一次服务调用需要解决四个问题：</p><ul>\n<li>\n<p>客户端和服务端如何建立网络连接？</p>\n</li>\n<li>\n<p>服务端如何处理请求？</p>\n</li>\n<li>\n<p>数据传输采用什么协议？</p>\n</li>\n<li>\n<p>数据该如何序列化和反序列化？</p>\n</li>\n</ul><p>其中前两个问题客户端和服务端如何建立连接和服务端如何处理请求是通信框架要解决的问题，Dubbo支持多种通信框架，比如Netty  4，需要在服务端和客户端的XML配置中添加下面的配置项。</p><p>服务端：</p><pre><code>&lt;dubbo:protocol server=&quot;netty4&quot; /&gt;\n</code></pre><p>客户端：</p><pre><code>&lt;dubbo:consumer client=&quot;netty4&quot; /&gt;\n</code></pre><p>这样基于扩展点自适应机制，客户端和服务端之间的调用会通过Netty  4框架来建立连接，并且服务端采用NIO方式来处理客户端的请求。</p><p>再来看下Dubbo的数据传输采用什么协议。Dubbo不仅支持私有的Dubbo协议，还支持其他协议比如Hessian、RMI、HTTP、Web Service、Thrift等。下面这张图描述了私有Dubbo协议的协议头约定。</p><p><img src=\"https://static001.geekbang.org/resource/image/8f/a5/8f98ef03078163adc8055b02ac4337a5.jpg?wh=727*491\" alt=\"\"><br>\n(图片来源：<a href=\"https://dubbo.incubator.apache.org/docs/zh-cn/dev/sources/images/dubbo_protocol_header.jpg\">https://dubbo.incubator.apache.org/docs/zh-cn/dev/sources/images/dubbo_protocol_header.jpg</a> ）</p><p>至于数据序列化和反序列方面，Dubbo同样也支持多种序列化格式，比如Dubbo、Hession  2.0、JSON、Java、Kryo以及FST等，可以通过在XML配置中添加下面的配置项。</p><p>例如：</p><pre><code>&lt;dubbo:protocol name=&quot;dubbo&quot; serialization=&quot;kryo&quot;/&gt;\n</code></pre><h2>服务监控</h2><p>服务监控主要包括四个流程：数据采集、数据传输、数据处理和数据展示，其中服务框架的作用是进行埋点数据采集，然后上报给监控系统。</p><p>在Dubbo框架中，无论是服务提供者还是服务消费者，在执行服务调用的时候，都会经过Filter调用链拦截，来完成一些特定功能，比如监控数据埋点就是通过在Filter调用链上装备了MonitorFilter来实现的，详细的代码实现你可以参考<a href=\"https://github.com/apache/incubator-dubbo/blob/7a48fac84b14ac6a21c1bdfc5958705dd8dda84d/dubbo-monitor/dubbo-monitor-api/src/main/java/org/apache/dubbo/monitor/support/MonitorFilter.java\">这里</a>。</p><h2>服务治理</h2><p>服务治理手段包括节点管理、负载均衡、服务路由、服务容错等，下面这张图给出了Dubbo框架服务治理的具体实现。</p><p><img src=\"https://static001.geekbang.org/resource/image/8d/fc/8d02991a1eac41596979d8e89f5344fc.jpg?wh=600*300\" alt=\"\"><br>\n（图片来源：<a href=\"http://dubbo.incubator.apache.org/docs/zh-cn/user/sources/images/cluster.jpg\">http://dubbo.incubator.apache.org/docs/zh-cn/user/sources/images/cluster.jpg</a> ）</p><p>图中的Invoker是对服务提供者节点的抽象，Invoker封装了服务提供者的地址以及接口信息。</p><ul>\n<li>\n<p>节点管理：Directory负责从注册中心获取服务节点列表，并封装成多个Invoker，可以把它看成“List&lt;Invoker&gt;” ，它的值可能是动态变化的，比如注册中心推送变更时需要更新。</p>\n</li>\n<li>\n<p>负载均衡：LoadBalance负责从多个Invoker中选出某一个用于发起调用，选择时可以采用多种负载均衡算法，比如Random、RoundRobin、LeastActive等。</p>\n</li>\n<li>\n<p>服务路由：Router负责从多个Invoker中按路由规则选出子集，比如读写分离、机房隔离等。</p>\n</li>\n<li>\n<p>服务容错：Cluster将Directory中的多个Invoker伪装成一个Invoker，对上层透明，伪装过程包含了容错逻辑，比如采用Failover策略的话，调用失败后，会选择另一个Invoker，重试请求。</p>\n</li>\n</ul><h2>一次服务调用的流程</h2><p>上面我讲的是Dubbo下每个基本组件的实现方式，那么Dubbo框架下，一次服务调用的流程是什么样的呢？下面结合这张图，我来给你详细讲解一下。</p><p><img src=\"https://static001.geekbang.org/resource/image/bf/19/bff032fdcca1272bb0349286caad6c19.jpg?wh=800*738\" alt=\"\"><br>\n(图片来源：<a href=\"https://dubbo.incubator.apache.org/docs/zh-cn/dev/sources/images/dubbo-extension.jpg\">https://dubbo.incubator.apache.org/docs/zh-cn/dev/sources/images/dubbo-extension.jpg</a> ）</p><p>首先我来解释微服务架构中各个组件分别对应到上面这张图中是如何实现。</p><ul>\n<li>\n<p>服务发布与引用：对应实现是图里的Proxy服务代理层，Proxy根据客户端和服务端的接口描述，生成接口对应的客户端和服务端的Stub，使得客户端调用服务端就像本地调用一样。</p>\n</li>\n<li>\n<p>服务注册与发现：对应实现是图里的Registry注册中心层，Registry根据客户端和服务端的接口描述，解析成服务的URL格式，然后调用注册中心的API，完成服务的注册和发现。</p>\n</li>\n<li>\n<p>服务调用：对应实现是Protocol远程调用层，Protocol把客户端的本地请求转换成RPC请求。然后通过Transporter层来实现通信，Codec层来实现协议封装，Serialization层来实现数据序列化和反序列化。</p>\n</li>\n<li>\n<p>服务监控：对应实现层是Filter调用链层，通过在Filter调用链层中加入MonitorFilter，实现对每一次调用的拦截，在调用前后进行埋点数据采集，上传给监控系统。</p>\n</li>\n<li>\n<p>服务治理：对应实现层是Cluster层，负责服务节点管理、负载均衡、服务路由以及服务容错。</p>\n</li>\n</ul><p>再来看下微服务架构各个组件是如何串联起来组成一个完整的微服务框架的，以Dubbo框架下一次服务调用的过程为例，先来看下客户端发起调用的过程。</p><ul>\n<li>\n<p>首先根据接口定义，通过Proxy层封装好的透明化接口代理，发起调用。</p>\n</li>\n<li>\n<p>然后在通过Registry层封装好的服务发现功能，获取所有可用的服务提供者节点列表。</p>\n</li>\n<li>\n<p>再根据Cluster层的负载均衡算法从可用的服务节点列表中选取一个节点发起服务调用，如果调用失败，根据Cluster层提供的服务容错手段进行处理。</p>\n</li>\n<li>\n<p>同时通过Filter层拦截调用，实现客户端的监控统计。</p>\n</li>\n<li>\n<p>最后在Protocol层，封装成Dubbo RPC请求，发给服务端节点。</p>\n</li>\n</ul><p>这样的话，客户端的请求就从一个本地调用转化成一个远程RPC调用，经过服务调用框架的处理，通过网络传输到达服务端。其中服务调用框架包括通信协议框架Transporter、通信协议Codec、序列化Serialization三层处理。</p><p>服务端从网络中接收到请求后的处理过程是这样的：</p><ul>\n<li>\n<p>首先在Protocol层，把网络上的请求解析成Dubbo RPC请求。</p>\n</li>\n<li>\n<p>然后通过Filter拦截调用，实现服务端的监控统计。</p>\n</li>\n<li>\n<p>最后通过Proxy层的处理，把Dubbo RPC请求转化为接口的具体实现，执行调用。</p>\n</li>\n</ul><h2>总结</h2><p>今天我给你讲述了Dubbo服务化框架每个基本组件的实现方式，以及一次Dubbo调用的流程。</p><p><strong>对于学习微服务架构来说，最好的方式是去实际搭建一个微服务的框架，甚至去从代码入手做一些二次开发</strong>。</p><p>你可以按照Dubbo的<a href=\"http://dubbo.incubator.apache.org/#/docs/user/quick-start.md?lang=zh-cn\">官方文档</a>去安装并搭建一个服务化框架。如果想深入了解它的实现的话，可以下载<a href=\"https://github.com/apache/incubator-dubbo\">源码</a>来阅读。</p><h2>思考题</h2><p>在以Dubbo为例，学习完服务化框架的具体实现后，你对其中的实现细节还有什么疑问吗？</p><p>欢迎你在留言区写下自己的思考，与我一起讨论。</p>","comments":[{"had_liked":false,"id":25173,"user_name":"庞小勇","can_delete":false,"product_type":"c1","uid":1133687,"ip_address":"","ucode":"E1E25BF7A885D2","user_header":"https://static001.geekbang.org/account/avatar/00/11/4c/77/98a3f58a.jpg","comment_is_top":false,"comment_ctime":1537262412,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"160451052364","product_id":100014401,"comment_content":"php开发者，听着一脸蒙逼","like_count":38,"discussions":[{"author":{"id":2295590,"avatar":"","nickname":"Geek_a263c9","note":"","ucode":"E1B920C8E0AA89","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":324799,"discussion_content":"感觉思想是一致的，可以试下hyperf、swoft","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1605172141,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1035064,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/cb/38/4c9cfdf4.jpg","nickname":"谢小路","note":"","ucode":"C9FE2EB10DC105","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311113,"discussion_content":"还是要找对应编程语言的微服务框架实操下，不然还是不懂。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1602225901,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1169355,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d7/cb/9b0d8bb8.jpg","nickname":"J、先生","note":"","ucode":"568B968702A95A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5730,"discussion_content":"同感","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1566452214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2263457,"avatar":"https://static001.geekbang.org/account/avatar/00/22/89/a1/a4fd18a5.jpg","nickname":"一月","note":"","ucode":"F7B5E0423C2CA2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530919,"discussion_content":"js开发者，听着一脸懵逼","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637164895,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":24102,"user_name":"echo＿陈","can_delete":false,"product_type":"c1","uid":1080794,"ip_address":"","ucode":"EFAEADA8A05906","user_header":"https://static001.geekbang.org/account/avatar/00/10/7d/da/780f149e.jpg","comment_is_top":false,"comment_ctime":1536802786,"is_pvip":false,"replies":[{"id":"8818","content":"希望能帮你们入门了解","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1536810414,"ip_address":"","comment_id":24102,"utype":1}],"discussion_count":1,"race_medal":0,"score":"70256279522","product_id":100014401,"comment_content":"撸了半年的dubbo源码……<br>胡老师这篇很不错，已分享给同事","like_count":17,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423841,"discussion_content":"希望能帮你们入门了解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536810414,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":24095,"user_name":"eason2017","can_delete":false,"product_type":"c1","uid":1009422,"ip_address":"","ucode":"E070BA624FA490","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/0e/c77ad9b1.jpg","comment_is_top":false,"comment_ctime":1536801984,"is_pvip":false,"replies":[{"id":"8817","content":"dubbo，哈哈","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1536810396,"ip_address":"","comment_id":24095,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27306605760","product_id":100014401,"comment_content":"这篇文章好哇，学习dunno 必备","like_count":7,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423838,"discussion_content":"dubbo，哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536810396,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":32129,"user_name":"波波安","can_delete":false,"product_type":"c1","uid":1002452,"ip_address":"","ucode":"2A677908E5A75D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4b/d4/b7719327.jpg","comment_is_top":false,"comment_ctime":1539426598,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"18719295782","product_id":100014401,"comment_content":"老师对怎么去读源码，有什么好的建议和方式吗，每次都不知道从哪看起😬","like_count":4},{"had_liked":false,"id":24168,"user_name":"Home","can_delete":false,"product_type":"c1","uid":1206045,"ip_address":"","ucode":"18B00EA4D60868","user_header":"https://static001.geekbang.org/account/avatar/00/12/67/1d/58425d0b.jpg","comment_is_top":false,"comment_ctime":1536828171,"is_pvip":false,"replies":[{"id":"8869","content":"选型对比就会提到，但不会详细讲spring cloud","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1536850301,"ip_address":"","comment_id":24168,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14421730059","product_id":100014401,"comment_content":"后期会有springcloud的介绍嘛？","like_count":4,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423868,"discussion_content":"选型对比就会提到，但不会详细讲spring cloud","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536850301,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144555,"user_name":"Mr.Right","can_delete":false,"product_type":"c1","uid":1048645,"ip_address":"","ucode":"271C3766DEC336","user_header":"https://static001.geekbang.org/account/avatar/00/10/00/45/a1fc2b46.jpg","comment_is_top":false,"comment_ctime":1571968343,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10161902935","product_id":100014401,"comment_content":"python开发者，听着一脸蒙逼<br>","like_count":2},{"had_liked":false,"id":24205,"user_name":"Sam_Deep_Thinking","can_delete":false,"product_type":"c1","uid":1001152,"ip_address":"","ucode":"8E4EF6F24B821B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/46/c0/bf880bda.jpg","comment_is_top":false,"comment_ctime":1536843886,"is_pvip":true,"replies":[{"id":"8866","content":"这一篇是原理篇的最后一节，spring<br> cloud在后面选型中会提到","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1536850211,"ip_address":"","comment_id":24205,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10126778478","product_id":100014401,"comment_content":"没玩过，不过看起来doubo很强大哈。学习了。下篇是讲spring cloud吗？","like_count":3,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423880,"discussion_content":"这一篇是原理篇的最后一节，spring\n cloud在后面选型中会提到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536850211,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":24159,"user_name":"fldhmily63319","can_delete":false,"product_type":"c1","uid":1220331,"ip_address":"","ucode":"6FFD779498970F","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/PUiby8MibibKcMd88OtDq1c0myEILZjap46fyiaOlML0UlNWzj9NTIEXOhXCCR1tcUibG0I6UoGp59Zj8H5EYwzkY9g/132","comment_is_top":false,"comment_ctime":1536826592,"is_pvip":false,"replies":[{"id":"8870","content":"zookeeper是配置中心，dubbo和spring cloud是服务框架，后面对比选型会细讲","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1536850340,"ip_address":"","comment_id":24159,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10126761184","product_id":100014401,"comment_content":"老师能评价一下Dubbo, Spring Cloud甚至是ZooKeeper的区别，优劣势吗？","like_count":3,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423864,"discussion_content":"zookeeper是配置中心，dubbo和spring cloud是服务框架，后面对比选型会细讲","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536850340,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":282664,"user_name":"坤","can_delete":false,"product_type":"c1","uid":1010922,"ip_address":"","ucode":"74E6838226A405","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6c/ea/ce9854a5.jpg","comment_is_top":false,"comment_ctime":1615356364,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5910323660","product_id":100014401,"comment_content":"Dubbo 服务治理相关的组件都是需要客户端自己在代码中选择使用吗？不像ServiceMesh可以独立于业务代码进行流量或服务的治理。","like_count":2},{"had_liked":false,"id":97009,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1558572409,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5853539705","product_id":100014401,"comment_content":"牛逼的Dubbo<br>牛逼的阿里<br>牛逼的开源<br>感谢😊","like_count":1,"discussions":[{"author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":316739,"discussion_content":"牛逼的你","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603447236,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":36695,"user_name":"小白","can_delete":false,"product_type":"c1","uid":1274811,"ip_address":"","ucode":"54FA90F18F4094","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqOOrv7cDhjs48zvkq9Ngl90wxXCGKSIbiarmQjYlUZy2ukb0Jh7sANcLziaPWyXcCibueHxR5Mw61ibQ/132","comment_is_top":false,"comment_ctime":1541245138,"is_pvip":false,"replies":[{"id":"13206","content":"是的，这种情况很正常","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1541425440,"ip_address":"","comment_id":36695,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5836212434","product_id":100014401,"comment_content":"在微服务架构中，同一个服务是不是有可能既充当服务提供者的角色又充当服务消费者的角色呢？","like_count":1,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427972,"discussion_content":"是的，这种情况很正常","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541425440,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":24213,"user_name":"张龙大骗子","can_delete":false,"product_type":"c1","uid":1153705,"ip_address":"","ucode":"13F8E34E08A38A","user_header":"https://static001.geekbang.org/account/avatar/00/11/9a/a9/dfea2c50.jpg","comment_is_top":false,"comment_ctime":1536846699,"is_pvip":false,"replies":[{"id":"8865","content":"是的，netty适合Java，thrift和protobuf适合跨语言","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1536850179,"ip_address":"","comment_id":24213,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5831813995","product_id":100014401,"comment_content":"neety是个好框架啊，thrift和protobuf也是","like_count":1,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423884,"discussion_content":"是的，netty适合Java，thrift和protobuf适合跨语言","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536850179,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":24173,"user_name":"Billylin","can_delete":false,"product_type":"c1","uid":1004016,"ip_address":"","ucode":"BEA692CEEAC6CF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/51/f0/d1142758.jpg","comment_is_top":false,"comment_ctime":1536831472,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5831798768","product_id":100014401,"comment_content":"胡老师，您好，如果后端服务使用dubbo框架的话，有什么组件可以充当网关这个角色呢？","like_count":1},{"had_liked":false,"id":309990,"user_name":"Sch0ng","can_delete":false,"product_type":"c1","uid":1145554,"ip_address":"","ucode":"73F6113931B1AC","user_header":"https://static001.geekbang.org/account/avatar/00/11/7a/d2/4ba67c0c.jpg","comment_is_top":false,"comment_ctime":1630426790,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630426790","product_id":100014401,"comment_content":"Dubbo是阿里发布的基于Java语言的开源微服务框架。理解的最佳途径是自己做实验。","like_count":0},{"had_liked":false,"id":202882,"user_name":"爱学习的大叔","can_delete":false,"product_type":"c1","uid":1085152,"ip_address":"","ucode":"91F9ABF1EC98D0","user_header":"https://static001.geekbang.org/account/avatar/00/10/8e/e0/847348b1.jpg","comment_is_top":false,"comment_ctime":1586079146,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586079146","product_id":100014401,"comment_content":"不错，对dubbo有两个一个整体上的认识。","like_count":0},{"had_liked":false,"id":132984,"user_name":"lw","can_delete":false,"product_type":"c1","uid":1162641,"ip_address":"","ucode":"F7DBFA6A01C911","user_header":"https://static001.geekbang.org/account/avatar/00/11/bd/91/29c2a7fd.jpg","comment_is_top":false,"comment_ctime":1568290734,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568290734","product_id":100014401,"comment_content":"学了这课，有信心去看dubbo源码了。","like_count":0},{"had_liked":false,"id":131192,"user_name":"holdno","can_delete":false,"product_type":"c1","uid":1019691,"ip_address":"","ucode":"0711C825080D54","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8f/2b/c8922696.jpg","comment_is_top":false,"comment_ctime":1567667124,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1567667124","product_id":100014401,"comment_content":"rpc应该算是长连接吧？如果有多个服务端节点，每次都去通过负载均衡选择，那是在初始化的时候客户端需要跟所有服务端建立连接？求老师赐教","like_count":0,"discussions":[{"author":{"id":1438037,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f1/55/8ac4f169.jpg","nickname":"陈国林","note":"","ucode":"83D12F3E79F197","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":191057,"discussion_content":"1. RPC可以是短连接也可以是长连接，这个看具体业务的需求。2. 如果业务的QPS不是很高当然是直接用短连接，简单省事。3. 如果业务QPS比较高，比较追求性能，可以考虑用长连接。那他的实现方式可以是服务提供者的每个实例一个连接池，这个可以封装在具体的RPC框架内，在初始化消费者客户端的时候就创建好 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582986011,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69571,"user_name":"Tony","can_delete":false,"product_type":"c1","uid":1041154,"ip_address":"","ucode":"137608CF629DFD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e3/02/0c228d1c.jpg","comment_is_top":false,"comment_ctime":1550777642,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1550777642","product_id":100014401,"comment_content":"代码侵入高，相对于spring cloud<br>好处是可扩展性强，可定制化，性能优于http协议请求，虽然没玩过dubbo- ̗̀(๑ᵔ⌔ᵔ๑)","like_count":0},{"had_liked":false,"id":50351,"user_name":"Rainbow","can_delete":false,"product_type":"c1","uid":1146870,"ip_address":"","ucode":"2FFDEDEA907D53","user_header":"https://static001.geekbang.org/account/avatar/00/11/7f/f6/32074937.jpg","comment_is_top":false,"comment_ctime":1544959674,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544959674","product_id":100014401,"comment_content":"我们公司用的就是这一套，开发同学可以小团队做不同的模块，作为测试同学每天 xshell 都要开 n 多个窗口跟踪日志😅，还有就是某个功能出问题以后就要去检查环境，而且有好多个模块，好多个节点，好多个实例，也挺耗费时间的。课程很棒！感谢胡老师分享，看到跟微服务相关特地来学习的，谢谢分享！","like_count":0},{"had_liked":false,"id":45231,"user_name":"小猪","can_delete":false,"product_type":"c1","uid":1201662,"ip_address":"","ucode":"EAD6A4876CEF3B","user_header":"https://static001.geekbang.org/account/avatar/00/12/55/fe/ab541300.jpg","comment_is_top":false,"comment_ctime":1543563358,"is_pvip":false,"replies":[{"id":"18052","content":"不是很了解，看了下github，是个容器管理平台，可以运行微服务系统。","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1544944514,"ip_address":"","comment_id":45231,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543563358","product_id":100014401,"comment_content":"rancher可以用来做微服务框架吗？可以运行微服务系统吗？","like_count":0,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430962,"discussion_content":"不是很了解，看了下github，是个容器管理平台，可以运行微服务系统。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544944514,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40980,"user_name":"小寞子。(≥3≤)","can_delete":false,"product_type":"c1","uid":1206545,"ip_address":"","ucode":"6D978BDCBB2862","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/11/831cec7d.jpg","comment_is_top":false,"comment_ctime":1542707985,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542707985","product_id":100014401,"comment_content":"对于一个完全第一次听到dubbo这个词的人。我竟然听懂了。。。 理论上没毛病。。通过一系列的层集 来解决和自动化微服务的一系列问题和管理。。。只是看起来会很缓慢的样子。。。😂😂😂😂😂","like_count":0},{"had_liked":false,"id":28080,"user_name":"ctsPrsvrnc","can_delete":false,"product_type":"c1","uid":1005658,"ip_address":"","ucode":"19603345D9E641","user_header":"https://static001.geekbang.org/account/avatar/00/0f/58/5a/15d1ffda.jpg","comment_is_top":false,"comment_ctime":1538006585,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1538006585","product_id":100014401,"comment_content":"胡老师，一直有个疑问，spring cloud出了很久了，dubbo曾经断更过，为什么感觉国内依然还是选择dubbo多？仅仅是因为不依赖spring boot吗？","like_count":0,"discussions":[{"author":{"id":2815900,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/f7/9c/69c5c5dc.jpg","nickname":"越锋利","note":"","ucode":"63E9E3F3C7D53D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":406906,"discussion_content":"同问，要是能在讲技术的同时讲讲业界趋势，那也是极好的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634866643,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":24195,"user_name":"二师哥","can_delete":false,"product_type":"c1","uid":1154670,"ip_address":"","ucode":"3BE4978417F082","user_header":"https://static001.geekbang.org/account/avatar/00/11/9e/6e/c4fa7cbc.jpg","comment_is_top":false,"comment_ctime":1536839529,"is_pvip":false,"replies":[{"id":"8867","content":"可以下载源码部署","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1536850235,"ip_address":"","comment_id":24195,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1536839529","product_id":100014401,"comment_content":"就算有有了前面学习的基础, 我依旧无法做到立刻理解. 已经看了三、四遍。<br>打算看下文档，自己实现以下，然后边学习，边看文档和老胡的文章。","like_count":0,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423875,"discussion_content":"可以下载源码部署","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536850235,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":24191,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1536838290,"is_pvip":true,"replies":[{"id":"8868","content":"grpc","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1536850277,"ip_address":"","comment_id":24191,"utype":1}],"discussion_count":3,"race_medal":1,"score":"1536838290","product_id":100014401,"comment_content":"现在微服务框架，大部分都是java语言的，其他语言有推荐吗？比如nodejs或者go什么的","like_count":1,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423871,"discussion_content":"grpc","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1536850277,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336951,"avatar":"https://static001.geekbang.org/account/avatar/00/14/66/77/194ba21d.jpg","nickname":"lzh","note":"","ucode":"C3D83DF4230109","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388150,"discussion_content":"tars，腾讯派路过","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1628611474,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1104850,"avatar":"https://static001.geekbang.org/account/avatar/00/10/db/d2/e29f8834.jpg","nickname":"lidashuang","note":"","ucode":"560ABE8032760E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289844,"discussion_content":"go mirco","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594225390,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":24141,"user_name":"AhianZhang","can_delete":false,"product_type":"c1","uid":1025962,"ip_address":"","ucode":"E6741E1FE81B0D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a7/aa/2a8c15fa.jpg","comment_is_top":false,"comment_ctime":1536822008,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1536822008","product_id":100014401,"comment_content":"使用 filter 会影响性能","like_count":0}]}