{"id":116766,"title":"27丨从数据页的角度理解B+树查询","content":"<p>我们之前已经了解了B+树和Hash索引的原理，这些索引结构给我们提供了高效的索引方式，不过这些索引信息以及数据记录都是保存在文件上的，确切说是存储在页结构中。</p><p>对数据库的存储结构以及页结构的底层进行了解，可以加深我们对索引运行机制的认识，从而你对索引的存储、查询原理，以及对SQL查询效率有更深的理解。</p><p>今天的课程主要包括下面几个部分：</p><ol>\n<li>数据库中的存储结构是怎样的？页、区、段和表空间分别指的是什么？</li>\n<li>为什么页（Page）是数据库存储空间的基本单位？</li>\n<li>从数据页的角度来看，B+树是如何进行查询的？</li>\n</ol><h2>数据库中的存储结构是怎样的</h2><p>记录是按照行来存储的，但是数据库的读取并不以行为单位，否则一次读取（也就是一次I/O操作）只能处理一行数据，效率会非常低。因此<strong>在数据库中，不论读一行，还是读多行，都是将这些行所在的页进行加载。也就是说，数据库管理存储空间的基本单位是页（Page）。</strong></p><p>一个页中可以存储多个行记录（Row），同时在数据库中，还存在着区（Extent）、段（Segment）和表空间（Tablespace）。行、页、区、段、表空间的关系如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/11/b7/112d7669450e3968e63e9de524ab13b7.jpg?wh=739*503\" alt=\"\"><br>\n从图中你能看到一个表空间包括了一个或多个段，一个段包括了一个或多个区，一个区包括了多个页，而一个页中可以有多行记录，这些概念我简单给你讲解下。</p><!-- [[[read_end]]] --><p>区（Extent）是比页大一级的存储结构，在InnoDB存储引擎中，一个区会分配64个连续的页。因为InnoDB中的页大小默认是16KB，所以一个区的大小是64*16KB=1MB。</p><p>段（Segment）由一个或多个区组成，区在文件系统是一个连续分配的空间（在InnoDB中是连续的64个页），不过在段中不要求区与区之间是相邻的。段是数据库中的分配单位，不同类型的数据库对象以不同的段形式存在。当我们创建数据表、索引的时候，就会相应创建对应的段，比如创建一张表时会创建一个表段，创建一个索引时会创建一个索引段。</p><p>表空间（Tablespace）是一个逻辑容器，表空间存储的对象是段，在一个表空间中可以有一个或多个段，但是一个段只能属于一个表空间。数据库由一个或多个表空间组成，表空间从管理上可以划分为系统表空间、用户表空间、撤销表空间、临时表空间等。</p><p>在InnoDB中存在两种表空间的类型：共享表空间和独立表空间。如果是共享表空间就意味着多张表共用一个表空间。如果是独立表空间，就意味着每张表有一个独立的表空间，也就是数据和索引信息都会保存在自己的表空间中。独立的表空间可以在不同的数据库之间进行迁移。</p><p>你可以通过下面的命令来查看InnoDB的表空间类型：</p><pre><code>mysql &gt; show variables like 'innodb_file_per_table';\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/b3/2f/b3b3d8f54a10dfb17005df9bd275502f.png?wh=1255*303\" alt=\"\"><br>\n你能看到innodb_file_per_table=ON，这就意味着每张表都会单独保存为一个.ibd文件。</p><h2>数据页内的结构是怎样的</h2><p>页（Page）如果按类型划分的话，常见的有数据页（保存B+树节点）、系统页、Undo页和事务数据页等。数据页是我们最常使用的页。</p><p>表页的大小限定了表行的最大长度，不同DBMS的表页大小不同。比如在MySQL的InnoDB存储引擎中，默认页的大小是16KB，我们可以通过下面的命令来进行查看：</p><pre><code>mysql&gt; show variables like '%innodb_page_size%';\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/2e/16/2e5a0928bdc9ca3d18421f9db1eda416.png?wh=1186*366\" alt=\"\"><br>\n在SQL Server的页大小为8KB，而在Oracle中我们用术语“块”（Block）来代表“页”，Oralce支持的块大小为2KB，4KB，8KB，16KB，32KB和64KB。</p><p>数据库I/O操作的最小单位是页，与数据库相关的内容都会存储在页结构里。数据页包括七个部分，分别是文件头（File Header）、页头（Page Header）、最大最小记录（Infimum+supremum）、用户记录（User Records）、空闲空间（Free Space）、页目录（Page Directory）和文件尾（File Tailer）。</p><p>页结构的示意图如下所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/94/53/9490bd9641f6a9be208a6d6b2d1b1353.jpg?wh=778*502\" alt=\"\"><br>\n这7个部分到底有什么作用呢？我简单梳理下：</p><p><img src=\"https://static001.geekbang.org/resource/image/e9/9f/e9508936a6d79f4635ecf5d5fea4149f.png?wh=1942*802\" alt=\"\"></p><p>实际上，我们可以把这7个数据页分成3个部分。</p><p>首先是文件通用部分，也就是文件头和文件尾。它们类似集装箱，将页的内容进行封装，通过文件头和文件尾校验的方式来确保页的传输是完整的。</p><p>在文件头中有两个字段，分别是FIL_PAGE_PREV和FIL_PAGE_NEXT，它们的作用相当于指针，分别指向上一个数据页和下一个数据页。连接起来的页相当于一个双向的链表，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/34/dd/3457fd927f1fc022cb062457bd823cdd.jpg?wh=1118*259\" alt=\"\"><br>\n需要说明的是采用链表的结构让数据页之间不需要是物理上的连续，而是逻辑上的连续。</p><p>我们之前讲到过Hash算法，这里文件尾的校验方式就是采用Hash算法进行校验。举个例子，当我们进行页传输的时候，如果突然断电了，造成了该页传输的不完整，这时通过文件尾的校验和（checksum值）与文件头的校验和做比对，如果两个值不相等则证明页的传输有问题，需要重新进行传输，否则认为页的传输已经完成。</p><p>第二个部分是记录部分，页的主要作用是存储记录，所以“最小和最大记录”和“用户记录”部分占了页结构的主要空间。另外空闲空间是个灵活的部分，当有新的记录插入时，会从空闲空间中进行分配用于存储新记录，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/1a/22/1a9ce654a978aea20a51a7e357a2a322.jpg?wh=1291*523\" alt=\"\"><br>\n第三部分是索引部分，这部分重点指的是页目录，它起到了记录的索引作用，因为在页中，记录是以单向链表的形式进行存储的。单向链表的特点就是插入、删除非常方便，但是检索效率不高，最差的情况下需要遍历链表上的所有节点才能完成检索，因此在页目录中提供了二分查找的方式，用来提高记录的检索效率。这个过程就好比是给记录创建了一个目录：</p><ol>\n<li>将所有的记录分成几个组，这些记录包括最小记录和最大记录，但不包括标记为“已删除”的记录。</li>\n<li>第1组，也就是最小记录所在的分组只有1个记录；最后一组，就是最大记录所在的分组，会有1-8条记录；其余的组记录数量在4-8条之间。这样做的好处是，除了第1组（最小记录所在组）以外，其余组的记录数会尽量平分。</li>\n<li>在每个组中最后一条记录的头信息中会存储该组一共有多少条记录，作为n_owned字段。</li>\n<li>页目录用来存储每组最后一条记录的地址偏移量，这些地址偏移量会按照先后顺序存储起来，每组的地址偏移量也被称之为槽（slot），每个槽相当于指针指向了不同组的最后一个记录。如下图所示：</li>\n</ol><p><img src=\"https://static001.geekbang.org/resource/image/cc/77/ccfaffc92b9414db3fe68d2ad9df2577.jpg?wh=1030*965\" alt=\"\"><br>\n页目录存储的是槽，槽相当于分组记录的索引。我们通过槽查找记录，实际上就是在做二分查找。这里我以上面的图示进行举例，5个槽的编号分别为0，1，2，3，4，我想查找主键为9的用户记录，我们初始化查找的槽的下限编号，设置为low=0，然后设置查找的槽的上限编号high=4，然后采用二分查找法进行查找。</p><p>首先找到槽的中间位置p=(low+high)/2=(0+4)/2=2，这时我们取编号为2的槽对应的分组记录中最大的记录，取出关键字为8。因为9大于8，所以应该会在槽编号为(p,high]的范围进行查找</p><p>接着重新计算中间位置p’=(p+high)/2=(2+4)/2=3，我们查找编号为3的槽对应的分组记录中最大的记录，取出关键字为12。因为9小于12，所以应该在槽3中进行查找。</p><p>遍历槽3中的所有记录，找到关键字为9的记录，取出该条记录的信息即为我们想要查找的内容。</p><h2>从数据页的角度看B+树是如何进行查询的</h2><p>MySQL的InnoDB存储引擎采用B+树作为索引，而索引又可以分成聚集索引和非聚集索引（二级索引），这些索引都相当于一棵B+树，如图所示。一棵B+树按照节点类型可以分成两部分：</p><ol>\n<li>叶子节点，B+树最底层的节点，节点的高度为0，存储行记录。</li>\n<li>非叶子节点，节点的高度大于0，存储索引键和页面指针，并不存储行记录本身。</li>\n</ol><p><img src=\"https://static001.geekbang.org/resource/image/a8/3f/a83a47f8f6a341835fa08d33ff18093f.jpg?wh=1174*442\" alt=\"\"><br>\n我们刚才学习了页结构的内容，你可以用<strong>页结构对比，看下B+树的结构</strong>。</p><p>在一棵B+树中，每个节点都是一个页，每次新建节点的时候，就会申请一个页空间。同一层上的节点之间，通过页的结构构成一个双向的链表（页文件头中的两个指针字段）。非叶子节点，包括了多个索引行，每个索引行里存储索引键和指向下一层页面的页面指针。最后是叶子节点，它存储了关键字和行记录，在节点内部（也就是页结构的内部）记录之间是一个单向的链表，但是对记录进行查找，则可以通过页目录采用二分查找的方式来进行。</p><p>当我们从页结构来理解B+树的结构的时候，可以帮我们理解一些通过索引进行检索的原理：</p><p><strong>1.B+树是如何进行记录检索的？</strong></p><p>如果通过B+树的索引查询行记录，首先是从B+树的根开始，逐层检索，直到找到叶子节点，也就是找到对应的数据页为止，将数据页加载到内存中，页目录中的槽（slot）采用二分查找的方式先找到一个粗略的记录分组，然后再在分组中通过链表遍历的方式查找记录。</p><p><strong>2.普通索引和唯一索引在查询效率上有什么不同？</strong></p><p>我们创建索引的时候可以是普通索引，也可以是唯一索引，那么这两个索引在查询效率上有什么不同呢？</p><p>唯一索引就是在普通索引上增加了约束性，也就是关键字唯一，找到了关键字就停止检索。而普通索引，可能会存在用户记录中的关键字相同的情况，根据页结构的原理，当我们读取一条记录的时候，不是单独将这条记录从磁盘中读出去，而是将这个记录所在的页加载到内存中进行读取。InnoDB存储引擎的页大小为16KB，在一个页中可能存储着上千个记录，因此在普通索引的字段上进行查找也就是在内存中多几次“判断下一条记录”的操作，对于CPU来说，这些操作所消耗的时间是可以忽略不计的。所以对一个索引字段进行检索，采用普通索引还是唯一索引在检索效率上基本上没有差别。</p><h2>总结</h2><p>今天我们学习了数据库中的基本存储单位，也就是页（Page），磁盘I/O都是基于页来进行读取的，在页之上还有区、段和表空间，它们都是更大的存储单位。我们在分配空间的时候会按照页为单位来进行分配，同一棵树上同一层的页与页之间采用双向链表，而在页里面，记录之间采用的单向链表的方式。</p><p>链表这种数据结构的特点是增加、删除比较方便，所以在对记录进行删除的时候，有时候并不是真的删除了记录，而只是逻辑上的删除，也就是在标记为上标记为“已删除”。但链表还有个问题就是查找效率低，因此在页结构中还专门设计了页目录这个模块，专门给记录做一个目录，通过二分查找法的方式进行检索提升效率。</p><p><img src=\"https://static001.geekbang.org/resource/image/c1/74/c127149aad62be7a1ee2c366757a2e74.jpg?wh=2272*2313\" alt=\"\"><br>\n今天的内容到这里就结束了，最后我给你留两道思考题吧。按照聚集索引存储的行记录在物理上连续的，还是逻辑上连续的？另外，通过B+树进行记录的检索流程是怎样的？</p><p>欢迎你在评论区写下你的思考，我会和你一起交流，也欢迎把这篇文章分享给你的朋友或者同事，一起来交流。</p>","neighbors":{"left":{"article_title":"26丨索引的使用原则：如何通过索引让SQL查询效率最大化？","id":116031},"right":{"article_title":"28丨从磁盘I/O的角度理解SQL查询的成本","id":118101}},"comments":[{"had_liked":false,"id":122912,"user_name":"我行我素","can_delete":false,"product_type":"c1","uid":1224678,"ip_address":"","ucode":"4C69542FAB0671","user_header":"https://static001.geekbang.org/account/avatar/00/12/af/e6/9c77acff.jpg","comment_is_top":false,"comment_ctime":1565573043,"is_pvip":false,"replies":[{"id":"63533","content":"总结的不错","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577517141,"ip_address":"","comment_id":122912,"utype":1}],"discussion_count":5,"race_medal":0,"score":"130414591923","product_id":100029501,"comment_content":"1.逻辑上连续的，在文中有说采用链表的结构让数据页之间不需要是物理上的连续，而是逻辑上的连续；<br>2.二分查找发，在总结图中有详细的说明，首先是从B+树的根开始，逐层检索直到叶子节点，找到叶子节点对应的数据页，将数据页加载到内存中，通过页目录中的槽采用二分查找的方式先找到一个粗略的记录分组，在分组中通过链表遍历的方式进行记录的查找","like_count":31,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462451,"discussion_content":"总结的不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577517141,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1572636,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ff/1c/d049776e.jpg","nickname":"wonderq_gk","note":"","ucode":"9A10DDC39DBB6B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6439,"discussion_content":"聚集索引，是物理上连续存储的","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1566905244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1919541,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/4a/35/66caeed9.jpg","nickname":"完美坚持","note":"","ucode":"AE0261D8DDEF64","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1572636,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ff/1c/d049776e.jpg","nickname":"wonderq_gk","note":"","ucode":"9A10DDC39DBB6B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377242,"discussion_content":"糊涂了我","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622559300,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":6439,"ip_address":""},"score":377242,"extra":""}]},{"author":{"id":1015149,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7d/6d/81ed57c3.jpg","nickname":"rocinn","note":"","ucode":"12C7BCC4FA838C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36632,"discussion_content":"摘自23讲:\n\n聚集索引指表中数据行按索引的排序方式进行存储，对查找行很有效。只有当表包含聚集索引时，表内的数据行才会按找索引列的值在磁盘上进行物理排序和存储。每一个表只能有一个聚集索引，因为数据行本身只能按一个顺序存储。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1571399548,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1006214,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5a/86/abb7bfe3.jpg","nickname":"OrdinaryYZH","note":"","ucode":"244B9184B20DBD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312395,"discussion_content":"原文问的不是行是否物理连续吗，不是问的页","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1602677361,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123149,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1565615434,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"108939797834","product_id":100029501,"comment_content":"关于数据页有几个疑问：<br>1、分组1为什么只有一条记录？<br>2、分组之间采用的是二分查找，表示分组1，分组2，...，分组n之间是通过某种顺序进行排列的。假设除了最后一个分组n外，所有的分组都存储满了8条记录，这时新增一条记录x按有序性应该放置在分组2中，是不是分组2，3，分组n-1都需要进行记录的改动？<br>3、最大最小记录是专门给数据页内二分查找赋值low与high设计的？","like_count":26,"discussions":[{"author":{"id":2815900,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/f7/9c/69c5c5dc.jpg","nickname":"越锋利","note":"","ucode":"63E9E3F3C7D53D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411200,"discussion_content":"问得好。我看插入删除的复杂度基本上文章都没咋讲","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635863387,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1640978,"avatar":"https://static001.geekbang.org/account/avatar/00/19/0a/12/f8b988b8.jpg","nickname":"Kyle(","note":"","ucode":"0C14C4C086CAA9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344139,"discussion_content":"19年的高赞没人回复..?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611304460,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123135,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1565612669,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"74580056701","product_id":100029501,"comment_content":"Mysql如text、MediumText等类型最大存储长度为64k、16M，已经超过了一个页16k，请问包含这几种类型的记录都怎么存储的？","like_count":18,"discussions":[{"author":{"id":1055073,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/sOvjoV6STk6SYPHRqVOo7DkiajY0KKuKLHSnDNvOKic5lllRNGEQo6W1oE6FrPiaSzUia1vCw9lqmV0vibCOtYtIfHQ/132","nickname":"余昭","note":"","ucode":"29EEEA1BFFE16B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532472,"discussion_content":"大文本不适合做索引。 InnoDB中索引字段最大长度为767","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637624268,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1573369,"avatar":"https://static001.geekbang.org/account/avatar/00/18/01/f9/85facaca.jpg","nickname":"出招吧","note":"","ucode":"4B1C9796BF01AB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":120798,"discussion_content":"好像有个操作叫 页分裂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578296594,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126973,"user_name":"吴小智","can_delete":false,"product_type":"c1","uid":1310798,"ip_address":"","ucode":"C7C9F58B5C9F7B","user_header":"https://static001.geekbang.org/account/avatar/00/14/00/4e/be2b206b.jpg","comment_is_top":false,"comment_ctime":1566528810,"is_pvip":false,"replies":[{"id":"47086","content":"感谢兴趣，最直接的来源就是官方的Document，比如 https:&#47;&#47;dev.mysql.com&#47;doc&#47;internals&#47;en&#47;innodb-fil-header.html 而且检索起来也很方便，比如你想要查询优化器的cost model是如何设计的，就可以找到 https:&#47;&#47;dev.mysql.com&#47;doc&#47;refman&#47;8.0&#47;en&#47;cost-model.html","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1566624681,"ip_address":"","comment_id":126973,"utype":1}],"discussion_count":1,"race_medal":0,"score":"57401103658","product_id":100029501,"comment_content":"请问一下老师，这些内容的源头是在哪里呢？想去源头看看","like_count":14,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464266,"discussion_content":"感谢兴趣，最直接的来源就是官方的Document，比如 https://dev.mysql.com/doc/internals/en/innodb-fil-header.html 而且检索起来也很方便，比如你想要查询优化器的cost model是如何设计的，就可以找到 https://dev.mysql.com/doc/refman/8.0/en/cost-model.html","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566624681,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123250,"user_name":"DZ","can_delete":false,"product_type":"c1","uid":1132240,"ip_address":"","ucode":"452555FA0F9E0F","user_header":"https://static001.geekbang.org/account/avatar/00/11/46/d0/6bafd7d4.jpg","comment_is_top":false,"comment_ctime":1565653828,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"57400228676","product_id":100029501,"comment_content":"逻辑上连续，物理上未必连续。数据库的最小分配单位是页，连续分配一定数量的物理页构成段。每页存储只够存储有限的记录，记录不断增加，一定会超出页，继而超出段，无法保证物理连续。进一步说，数据库的磁盘分配操作基于操作系统，单个“页”是否一定在物理介质上连续，也不一定。<br><br>B+树只有叶节点含有数据指针，总是从根节点开始检索，直到叶节点。如果是范围检索，只需要一次根到叶的检索，然后就能借助叶节点的双向链表结构特性，顺序移动直到找出所有满足范围的数据。","like_count":14},{"had_liked":false,"id":123189,"user_name":"wusiration","can_delete":false,"product_type":"c1","uid":1104438,"ip_address":"","ucode":"A9403377054F1E","user_header":"https://static001.geekbang.org/account/avatar/00/10/da/36/ac0ff6a7.jpg","comment_is_top":false,"comment_ctime":1565622675,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"40220328339","product_id":100029501,"comment_content":"问题1：聚集索引是在物理上连续，因为聚集索引是指表中数据行按索引的排序方式进行存储，表设置了聚集索引，数据行会按照索引列的值在磁盘上物理存储和排序；（摘抄自23索引的概览）<br>问题2：先是从B+树的根开始，逐层检索找到相应叶子节点对应的数据页，将数据页加载到内存中，通过页目录中的槽采用二分查找的方式先找到一个粗略的记录分组，在分组中通过链表遍历的方式进行记录的查找","like_count":10,"discussions":[{"author":{"id":1012325,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/72/65/68bd8177.jpg","nickname":"雪飞鸿","note":"","ucode":"65D7B030828809","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36277,"discussion_content":"应该说聚集索引的逻辑顺序与数据存储的物理顺序一致，物理上是否连续难说","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1571358793,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1572636,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ff/1c/d049776e.jpg","nickname":"wonderq_gk","note":"","ucode":"9A10DDC39DBB6B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6442,"discussion_content":"这么多人，就你说的是对的哈","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1566905596,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":197570,"user_name":"刘忽悠","can_delete":false,"product_type":"c1","uid":1252173,"ip_address":"","ucode":"095DE3A8D3F450","user_header":"https://static001.geekbang.org/account/avatar/00/13/1b/4d/2cc44d9a.jpg","comment_is_top":false,"comment_ctime":1585385791,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"27355189567","product_id":100029501,"comment_content":"按照聚集索引的话，逻辑上肯定是连续的，物理上就要分情况，如果是在页内，那么根据前面说的，区是一块连续的空间，包含64个页，那么页内的记录也肯定是物理上连续的，而页与页之间是通过文件头的两个指针链接起来的一个双向表，所以物理上不连续；","like_count":7},{"had_liked":false,"id":195046,"user_name":"尔冬橙","can_delete":false,"product_type":"c1","uid":1225224,"ip_address":"","ucode":"0B013A49BC18DA","user_header":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","comment_is_top":false,"comment_ctime":1585131056,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18765000240","product_id":100029501,"comment_content":"我有个问题，B+数每个节点都是一页的话，那非叶子节点不存数据，16k的大小不是比较浪费么","like_count":5},{"had_liked":false,"id":164804,"user_name":"王加武","can_delete":false,"product_type":"c1","uid":1665471,"ip_address":"","ucode":"DDCFE578C6C428","user_header":"https://static001.geekbang.org/account/avatar/00/19/69/bf/50a824a4.jpg","comment_is_top":false,"comment_ctime":1577093521,"is_pvip":false,"replies":[{"id":"62829","content":"学习是一辈子的事，感谢加武同学的分享","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577108363,"ip_address":"","comment_id":164804,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14461995409","product_id":100029501,"comment_content":"第一个问题<br>我认为物理上是连续的（具体原因我现在还说不出来，因为这个问题感觉逻辑连续和物理连续都没有绝对的说法，后面补上）<br><br>第二个问题<br>B+树的检索流程是一个自顶向下，逐层检索的过程！具体的过程老师在24讲以及这一讲中已经说的很明白了！<br><br>我得认真思考！老师的问题总是很耐人寻味！<br>题外话：希望大家都继续坚持学习，学习是一辈子的事，不要渴望一遍两遍就掌握某个东西！很多东西都是在反反复复的学习之中的某个时刻突然领悟的！加油！","like_count":4,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478899,"discussion_content":"学习是一辈子的事，感谢加武同学的分享","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577108363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154135,"user_name":"梁","can_delete":false,"product_type":"c1","uid":1267198,"ip_address":"","ucode":"29A10759821D96","user_header":"https://static001.geekbang.org/account/avatar/00/13/55/fe/e8fb06fb.jpg","comment_is_top":false,"comment_ctime":1574384101,"is_pvip":false,"replies":[{"id":"62646","content":"对的 ","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577080505,"ip_address":"","comment_id":154135,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14459285989","product_id":100029501,"comment_content":"聚集索引是在物理上的顺序和逻辑上的顺序相同","like_count":4,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475386,"discussion_content":"对的 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577080505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122886,"user_name":"往事随风，顺其自然","can_delete":false,"product_type":"c1","uid":1235692,"ip_address":"","ucode":"F266EC6B143E38","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/ec/779c1a78.jpg","comment_is_top":false,"comment_ctime":1565569948,"is_pvip":false,"replies":[{"id":"63532","content":"对的","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577517127,"ip_address":"","comment_id":122886,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14450471836","product_id":100029501,"comment_content":"逻辑上连续的，记录之间采用单链表方式实现","like_count":4,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462441,"discussion_content":"对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577517127,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185926,"user_name":"book尾汁","can_delete":false,"product_type":"c1","uid":1446375,"ip_address":"","ucode":"AE2B8DFC643ACC","user_header":"https://static001.geekbang.org/account/avatar/00/16/11/e7/044a9a6c.jpg","comment_is_top":false,"comment_ctime":1583725462,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10173660054","product_id":100029501,"comment_content":"问题1：行记录是逻辑上连续，因为采用单链表结构，分组里面的记录也是逻辑上的一组，物理上并不一定连续。<br>问题2：首先会通过B+树的根节点向下查找到叶子节点，再在同过叶子节点里页的表目录二分查找到对应得槽点，在遍历槽里的记录。","like_count":2},{"had_liked":false,"id":132797,"user_name":"Leon📷","can_delete":false,"product_type":"c1","uid":1219496,"ip_address":"","ucode":"B9BBD1EFAAE5A2","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/a8/6a391c66.jpg","comment_is_top":false,"comment_ctime":1568240949,"is_pvip":false,"replies":[{"id":"63871","content":"对的","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577601457,"ip_address":"","comment_id":132797,"utype":1}],"discussion_count":6,"race_medal":0,"score":"10158175541","product_id":100029501,"comment_content":"A clustered index, on the other hand, is actually the table. It is an index that enforces the ordering on the rows of the table physically.物理上连续的","like_count":2,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467123,"discussion_content":"对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577601457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1006214,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5a/86/abb7bfe3.jpg","nickname":"OrdinaryYZH","note":"","ucode":"244B9184B20DBD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312391,"discussion_content":"老师这也说对，逻辑也说对，我晕了。。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1602676300,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1919541,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/4a/35/66caeed9.jpg","nickname":"完美坚持","note":"","ucode":"AE0261D8DDEF64","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377249,"discussion_content":"后半句直译过来是说：“它是一个索引，在物理上强制表的行的顺序。” 我倒是觉得这句话是说，表中行的存储顺序和索引在物理上是一致的，我猜测，它们可能是一块的？B+树叶子结点对应的页的存储空间中用单链表结构存储相应的索引和数据，而聚集索引的情况下，单链表中结点即包含索引，也包含相应的数据行的数据（这就是强制物理上顺序一致）。如果是非聚集索引，B+树叶子结点对应的页的存储空间中用单链表结构的结点里，有索引，但是未必有具体数据，而是可能有存储具体数据行数据的位置指针","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622560099,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1012325,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/72/65/68bd8177.jpg","nickname":"雪飞鸿","note":"","ucode":"65D7B030828809","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36279,"discussion_content":"强调的是ordering和物理上一致，没说连续","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571358873,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1264732,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEJafX5kNYJKpD9czE7pjYJtDWnuHeWQLtkfyAtPYUicbiafAUBvUqSnKTM3bahib1wURcRg2miaOFGnpQ/132","nickname":"jacksnow","note":"","ucode":"49693079973EEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1012325,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/72/65/68bd8177.jpg","nickname":"雪飞鸿","note":"","ucode":"65D7B030828809","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":201709,"discussion_content":"。。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583827772,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":36279,"ip_address":""},"score":201709,"extra":""},{"author":{"id":1919541,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/4a/35/66caeed9.jpg","nickname":"完美坚持","note":"","ucode":"AE0261D8DDEF64","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1264732,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEJafX5kNYJKpD9czE7pjYJtDWnuHeWQLtkfyAtPYUicbiafAUBvUqSnKTM3bahib1wURcRg2miaOFGnpQ/132","nickname":"jacksnow","note":"","ucode":"49693079973EEF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377248,"discussion_content":"这是什么意思，你觉得不是这样，还是说看不懂？笑哭","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622560096,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":201709,"ip_address":""},"score":377248,"extra":""}]}]},{"had_liked":false,"id":208065,"user_name":"ballgod","can_delete":false,"product_type":"c1","uid":1584098,"ip_address":"","ucode":"C20E95E98EAC43","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIR9QrAn9TZOrJMSYMyN96PAuAjETVrN5SPp3hMbfUAGIWtHceWPEoQtPdXeuBn7VB7dagtxynAIA/132","comment_is_top":false,"comment_ctime":1587267948,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5882235244","product_id":100029501,"comment_content":"重新再看一下，还有问题：&quot;非叶子节点，包括了多个索引行，每个索引行里存储索引键和指向下一层页面的页面指针&quot;。请问索引行中的索引键和指向下一层页面的页面指针在数据页中具体是记录在哪个位置（是在页记录里面吗？）？以什么样的形式记录？","like_count":1},{"had_liked":false,"id":146662,"user_name":"书痕","can_delete":false,"product_type":"c1","uid":1394726,"ip_address":"","ucode":"8367371EF89D61","user_header":"https://static001.geekbang.org/account/avatar/00/15/48/26/93fd21d5.jpg","comment_is_top":false,"comment_ctime":1572596945,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5867564241","product_id":100029501,"comment_content":"关于问题1，应该只是通过双向链表保证数据在逻辑上与聚集索引顺序一致，物理介质上不一定连续","like_count":1},{"had_liked":false,"id":134442,"user_name":"Yuhui","can_delete":false,"product_type":"c1","uid":1110470,"ip_address":"","ucode":"811933B016179F","user_header":"https://static001.geekbang.org/account/avatar/00/10/f1/c6/6f39a982.jpg","comment_is_top":false,"comment_ctime":1568836064,"is_pvip":false,"replies":[{"id":"54456","content":"校验和checksum经常用于数据传输过程中的数据完整性&#47;准确性校验。checksum算法有很多，举个例子比如MD5算法，在文件头的时候给出完整的文件应该得到的MD5数值为多少，等到文件尾的时候，再使用MD5对整体进行运算，看下和文件头给出的是否一致。如果一致，则说明传输过程是完整正确的，如果不一致则存在错误，需要重新传输。","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1571057277,"ip_address":"","comment_id":134442,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5863803360","product_id":100029501,"comment_content":"请教一下老师，”通过文件尾的校验和（checksum 值）与文件头的校验和做比较“来判断页数据传输是否完整这个是怎么回事？谢谢！","like_count":1,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467751,"discussion_content":"校验和checksum经常用于数据传输过程中的数据完整性/准确性校验。checksum算法有很多，举个例子比如MD5算法，在文件头的时候给出完整的文件应该得到的MD5数值为多少，等到文件尾的时候，再使用MD5对整体进行运算，看下和文件头给出的是否一致。如果一致，则说明传输过程是完整正确的，如果不一致则存在错误，需要重新传输。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571057277,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2815900,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/f7/9c/69c5c5dc.jpg","nickname":"越锋利","note":"","ucode":"63E9E3F3C7D53D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411203,"discussion_content":"所以文件尾并没有校验和，只是一个标志位？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635863631,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125886,"user_name":"习惯沉淀","can_delete":false,"product_type":"c1","uid":1144692,"ip_address":"","ucode":"9C590226330AD3","user_header":"https://static001.geekbang.org/account/avatar/00/11/77/74/c1f0aa46.jpg","comment_is_top":false,"comment_ctime":1566268324,"is_pvip":false,"replies":[{"id":"53413","content":"对 B+树的非叶子节点不存放具体的行记录数据。","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1570435135,"ip_address":"","comment_id":125886,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5861235620","product_id":100029501,"comment_content":"老师，“在B+树中，每一个节点都是一个页”这句，有点不太理解，非叶子节点不是不存放行记录吗，非叶子节点就是页，只不过页里面不存放数据是这意思吗？","like_count":2,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463735,"discussion_content":"对 B+树的非叶子节点不存放具体的行记录数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570435135,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123409,"user_name":"asdf100","can_delete":false,"product_type":"c1","uid":1043738,"ip_address":"","ucode":"39D8D71453E575","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/1a/ce7f7d54.jpg","comment_is_top":false,"comment_ctime":1565670199,"is_pvip":false,"replies":[{"id":"63527","content":"正确","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577516975,"ip_address":"","comment_id":123409,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5860637495","product_id":100029501,"comment_content":"对页里查找记录时，可先根据二分查找法，先找到记录所有在槽，时间复杂度为O(log2n)。槽内有多条记录，再遍历所有记录，直到找到指定记录为止，时间复杂度为O(n)。","like_count":1,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462661,"discussion_content":"正确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577516975,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123407,"user_name":"asdf100","can_delete":false,"product_type":"c1","uid":1043738,"ip_address":"","ucode":"39D8D71453E575","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/1a/ce7f7d54.jpg","comment_is_top":false,"comment_ctime":1565669552,"is_pvip":false,"replies":[{"id":"63526","content":"对的","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577516969,"ip_address":"","comment_id":123407,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5860636848","product_id":100029501,"comment_content":"遍历槽 3 中的所有记录，找到关键字为 9 的记录，取出该条记录的信息即为我们想要查找的内容。由于单链表，所以查询复杂度为O(n)","like_count":1,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462660,"discussion_content":"对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577516969,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123333,"user_name":"魏颖琪","can_delete":false,"product_type":"c1","uid":1184964,"ip_address":"","ucode":"097544C71EBDA7","user_header":"https://static001.geekbang.org/account/avatar/00/12/14/c4/e354d8ba.jpg","comment_is_top":false,"comment_ctime":1565659963,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5860627259","product_id":100029501,"comment_content":"关于普通索引和唯一索引的效率问题还想请教一下：普通索引不是主键，不是物理索引，叶子节点记录的是行的位置，实际可能分散在多个页中，那就存在多次IO读取，效率会降低，为什么说差不多？","like_count":1,"discussions":[{"author":{"id":1264732,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEJafX5kNYJKpD9czE7pjYJtDWnuHeWQLtkfyAtPYUicbiafAUBvUqSnKTM3bahib1wURcRg2miaOFGnpQ/132","nickname":"jacksnow","note":"","ucode":"49693079973EEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":201710,"discussion_content":"唯一索引也不是主键索引啊，叶子节点也不存储行记录啊","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1583827847,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338715,"user_name":"Geek_4e68bc","can_delete":false,"product_type":"c1","uid":2608672,"ip_address":"","ucode":"8EFF07E4D221AA","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKX6QqquojicLSgpgu88MibWkuXfIQcqlgoWReZ97bfygwThIHWqUmJyjGlOhJj1Be3tA1WFkJkSjFw/132","comment_is_top":false,"comment_ctime":1647681072,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647681072","product_id":100029501,"comment_content":"老师，请问单个数据页在物理上是连续的吗","like_count":0},{"had_liked":false,"id":295525,"user_name":"Cary","can_delete":false,"product_type":"c1","uid":1066991,"ip_address":"","ucode":"1B85272C1E03CF","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/ef/3c657df8.jpg","comment_is_top":false,"comment_ctime":1622460133,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1622460133","product_id":100029501,"comment_content":"请问页在区里是连续分配的，为什么不用数组替代链表呢？","like_count":0,"discussions":[{"author":{"id":2419502,"avatar":"https://static001.geekbang.org/account/avatar/00/24/eb/2e/90fea784.jpg","nickname":"柒","note":"","ucode":"D41241629321A1","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382202,"discussion_content":"区里的连续只是逻辑上的连续，不是物理上的连续。\n采用链表的结构让数据页之间不需要是物理上的连续，而是逻辑上的连续","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625473148,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":293013,"user_name":"黄卫江","can_delete":false,"product_type":"c1","uid":1652895,"ip_address":"","ucode":"0366942B81E7FC","user_header":"https://static001.geekbang.org/account/avatar/00/19/38/9f/895353ab.jpg","comment_is_top":false,"comment_ctime":1621155774,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621155774","product_id":100029501,"comment_content":"有个问题：B+树索引的非叶子结点不是不存储实际数据吗，为什么还说每一个结点都是一个页，是不是非叶子结点的页是只有页的结构但行记录是空的。","like_count":0},{"had_liked":false,"id":278397,"user_name":"心诚泽霖","can_delete":false,"product_type":"c1","uid":2047663,"ip_address":"","ucode":"4A22A4F4066254","user_header":"https://static001.geekbang.org/account/avatar/00/1f/3e/af/c3d3c167.jpg","comment_is_top":false,"comment_ctime":1612926730,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612926730","product_id":100029501,"comment_content":"B+树和页结构的对比：上图的根节点表示一个页（Page）？还是叶子节点表示一个页？","like_count":0},{"had_liked":false,"id":277818,"user_name":"Kung","can_delete":false,"product_type":"c1","uid":1086261,"ip_address":"","ucode":"862B39B7263447","user_header":"https://static001.geekbang.org/account/avatar/00/10/93/35/0cfb5732.jpg","comment_is_top":false,"comment_ctime":1612602348,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612602348","product_id":100029501,"comment_content":"老师您好，看完还是有很多疑问，表和索引创建的时候会创建表段和索引段，那么按照我的理解，表段是存放数据的，索引段是一颗B+树，那这个树的叶子节点存的是数据本身还是指向表段数据的指针？","like_count":0},{"had_liked":false,"id":273089,"user_name":"zich","can_delete":false,"product_type":"c1","uid":1124244,"ip_address":"","ucode":"6C0FEF6A462C42","user_header":"https://static001.geekbang.org/account/avatar/00/11/27/94/b2f5b4ef.jpg","comment_is_top":false,"comment_ctime":1610434627,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610434627","product_id":100029501,"comment_content":"索引是通过 B+ 树组织的，所以 MYSQL 的记录数据实际上也是通过 B+ 树来组织保存的么","like_count":0},{"had_liked":false,"id":266722,"user_name":"Qaz","can_delete":false,"product_type":"c1","uid":1780271,"ip_address":"","ucode":"59A085F730F016","user_header":"https://static001.geekbang.org/account/avatar/00/1b/2a/2f/d6ec6940.jpg","comment_is_top":false,"comment_ctime":1607471884,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607471884","product_id":100029501,"comment_content":"精华，这篇不错","like_count":0},{"had_liked":false,"id":260930,"user_name":"靠人品去赢","can_delete":false,"product_type":"c1","uid":1301286,"ip_address":"","ucode":"7A20F9EBE847E1","user_header":"https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg","comment_is_top":false,"comment_ctime":1605153408,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605153408","product_id":100029501,"comment_content":"1 行记录逻辑上一点连续，物理不一定，超出范围，系统分配<br>2 首先是是根到叶找到对应的数据页----数据页加载到内存-----数据页二分查找分组-------分组连了遍历找到数据","like_count":0},{"had_liked":false,"id":246616,"user_name":"LIKE","can_delete":false,"product_type":"c1","uid":1254252,"ip_address":"","ucode":"9DAB7F9051648A","user_header":"https://static001.geekbang.org/account/avatar/00/13/23/6c/82ba5e1f.jpg","comment_is_top":false,"comment_ctime":1599439622,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599439622","product_id":100029501,"comment_content":"1.逻辑上连续的，基于页的存储数据结构（链表），听说页在第一次写入数据时，回预留一定的空间记录用做插入，同样删除操作是标记删除，数据记录行会保留，如果有同数据范围的数据插入回，数据回会进行覆盖。<br>","like_count":0},{"had_liked":false,"id":243897,"user_name":"Mr_scx","can_delete":false,"product_type":"c1","uid":1239546,"ip_address":"","ucode":"28B5CE68A5A339","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKWiaZb7a2JAcIVlXYuZ3iaPfSF6vBbg3yUps6LKpsZarftyXufMHYKJmMKzH3bIpVkDAVNXE9q0oOw/132","comment_is_top":false,"comment_ctime":1598321796,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598321796","product_id":100029501,"comment_content":"老师，请问那个图中，最大记录那一组的最后一条记录的头信息中的0 0 5 3 1 0是什么意思？不是说头信息记录的是该组有多少条记录吗？那不应该是 5吗？","like_count":0},{"had_liked":false,"id":214049,"user_name":"Geek_0c1732","can_delete":false,"product_type":"c1","uid":1721278,"ip_address":"","ucode":"6276D0412CCE51","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ajNVdqHZLLAhj2fB8NI2TPI1SNicgiciczuMUHyAb9HHBkkKJHrgtR162fsicaTqdAneHfuVX7icDXaVibDHstM9L47g/132","comment_is_top":false,"comment_ctime":1588645192,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588645192","product_id":100029501,"comment_content":"老师，数据库页的具体数据读取是在内存中操作的，还有必要设计页目录这种结构吗？增加操作成本","like_count":0},{"had_liked":false,"id":195027,"user_name":"尔冬橙","can_delete":false,"product_type":"c1","uid":1225224,"ip_address":"","ucode":"0B013A49BC18DA","user_header":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","comment_is_top":false,"comment_ctime":1585129044,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585129044","product_id":100029501,"comment_content":"槽4的最大记录分组的最后一条，头部为什么是0不是4","like_count":0},{"had_liked":false,"id":194126,"user_name":"Tesla","can_delete":false,"product_type":"c1","uid":1500742,"ip_address":"","ucode":"98629AFD9861EE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKUcSLVV6ia3dibe7qvTu8Vic1PVs2EibxoUdx930MC7j2Q9A6s4eibMDZlcicMFY0D0icd3RrDorMChu0zw/132","comment_is_top":false,"comment_ctime":1585028394,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585028394","product_id":100029501,"comment_content":"老师好，数据页的索引部分 是不是跳表啊","like_count":0},{"had_liked":false,"id":185928,"user_name":"book尾汁","can_delete":false,"product_type":"c1","uid":1446375,"ip_address":"","ucode":"AE2B8DFC643ACC","user_header":"https://static001.geekbang.org/account/avatar/00/16/11/e7/044a9a6c.jpg","comment_is_top":false,"comment_ctime":1583725741,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1583725741","product_id":100029501,"comment_content":"如果能补充下表空间 区段页之间查找关系就更好了，应该类似操作系统内存映射里里的多级目录吧","like_count":0},{"had_liked":false,"id":163290,"user_name":"爬行的蜗牛","can_delete":false,"product_type":"c1","uid":1033956,"ip_address":"","ucode":"6623B62DE63CE9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/QD6bf8hkS5dHrabdW7M7Oo9An1Oo3QSxqoySJMDh7GTraxFRX77VZ2HZ13x3R4EVYddIGXicRRDAc7V9z5cLDlA/132","comment_is_top":false,"comment_ctime":1576681011,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576681011","product_id":100029501,"comment_content":"1. 聚集索引存储的行记录是在物理上是连续的； 2. B+ 树进行记录的检索流程： 从根节点出发 ， 至上而下检索， 到叶子节点后，加载到内存中， 通过二分查找发找到大概的位置， 然后遍历链表的方法， 查找到对应的数据行。","like_count":0},{"had_liked":false,"id":160957,"user_name":"ballgod","can_delete":false,"product_type":"c1","uid":1584098,"ip_address":"","ucode":"C20E95E98EAC43","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIR9QrAn9TZOrJMSYMyN96PAuAjETVrN5SPp3hMbfUAGIWtHceWPEoQtPdXeuBn7VB7dagtxynAIA/132","comment_is_top":false,"comment_ctime":1576069907,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576069907","product_id":100029501,"comment_content":"建议最后给出的问题，老师在回复里给一下答案，谢谢","like_count":0},{"had_liked":false,"id":142571,"user_name":"rocinn","can_delete":false,"product_type":"c1","uid":1015149,"ip_address":"","ucode":"12C7BCC4FA838C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/6d/81ed57c3.jpg","comment_is_top":false,"comment_ctime":1571399596,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571399596","product_id":100029501,"comment_content":"思考题1<br><br>摘自23讲:<br>聚集索引指表中数据行按索引的排序方式进行存储，对查找行很有效。只有当表包含聚集索引时，表内的数据行才会按找索引列的值在磁盘上进行物理排序和存储。每一个表只能有一个聚集索引，因为数据行本身只能按一个顺序存储。","like_count":0},{"had_liked":false,"id":128567,"user_name":"wonderq_gk","can_delete":false,"product_type":"c1","uid":1572636,"ip_address":"","ucode":"9A10DDC39DBB6B","user_header":"https://static001.geekbang.org/account/avatar/00/17/ff/1c/d049776e.jpg","comment_is_top":false,"comment_ctime":1566905138,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1566905138","product_id":100029501,"comment_content":"&quot;非叶子节点，包括了多个索引行，每个索引行里存储索引键和指向下一层页面的页面指针&quot;<br>感觉是不是说错了，指向下一层页面的页面指针不是在文件头里面吗？<br>","like_count":0,"discussions":[{"author":{"id":1584098,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIR9QrAn9TZOrJMSYMyN96PAuAjETVrN5SPp3hMbfUAGIWtHceWPEoQtPdXeuBn7VB7dagtxynAIA/132","nickname":"ballgod","note":"","ucode":"C20E95E98EAC43","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":239029,"discussion_content":"文件头的页面指针针对的是同级页。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587267810,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123074,"user_name":"💢 星星💢","can_delete":false,"product_type":"c1","uid":1254392,"ip_address":"","ucode":"A402B765222C35","user_header":"https://static001.geekbang.org/account/avatar/00/13/23/f8/24fcccea.jpg","comment_is_top":false,"comment_ctime":1565601173,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565601173","product_id":100029501,"comment_content":"老师，怎么理解B+树里面的关键字？是不是可以了理解为就是索引的编号呢。。","like_count":0},{"had_liked":false,"id":123054,"user_name":"往事随风，顺其自然","can_delete":false,"product_type":"c1","uid":1235692,"ip_address":"","ucode":"F266EC6B143E38","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/ec/779c1a78.jpg","comment_is_top":false,"comment_ctime":1565598248,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565598248","product_id":100029501,"comment_content":"查找页目录的时候，需要遍历所有的数据页目录？还是说创建索引后这些页目录已经排好序了","like_count":0},{"had_liked":false,"id":123033,"user_name":"马以","can_delete":false,"product_type":"c1","uid":1344431,"ip_address":"","ucode":"3FEA06CA14DE28","user_header":"https://static001.geekbang.org/account/avatar/00/14/83/af/1cb42cd3.jpg","comment_is_top":false,"comment_ctime":1565595344,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"1565595344","product_id":100029501,"comment_content":"普通索引和唯一索引在查找中查询效率差别不大，除非是两条记录刚好分到了两个不同的页中，但是插入时这个就有较大区别了，这个会在下节课中讲吗？","like_count":0,"discussions":[{"author":{"id":1246178,"avatar":"https://static001.geekbang.org/account/avatar/00/13/03/e2/5768d26e.jpg","nickname":"inrtyx","note":"","ucode":"81CD18FF34ABAB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":161513,"discussion_content":"更新当然是普通索引快啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580906560,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1572636,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ff/1c/d049776e.jpg","nickname":"wonderq_gk","note":"","ucode":"9A10DDC39DBB6B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6446,"discussion_content":"插入时候也是一样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566905784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1572636,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ff/1c/d049776e.jpg","nickname":"wonderq_gk","note":"","ucode":"9A10DDC39DBB6B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6445,"discussion_content":"普通索引和唯一索引在查找中查询效率差别不大，除非是两条记录刚好分到了两个不同的页中\n\n非也，任何情况下都是多几次判断而已，所以差别不大","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566905769,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1344431,"avatar":"https://static001.geekbang.org/account/avatar/00/14/83/af/1cb42cd3.jpg","nickname":"马以","note":"","ucode":"3FEA06CA14DE28","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1572636,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ff/1c/d049776e.jpg","nickname":"wonderq_gk","note":"","ucode":"9A10DDC39DBB6B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6449,"discussion_content":"更新操作唯一索引用不到changebuffer呀，每次要从磁盘读","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566906011,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":6445,"ip_address":""},"score":6449,"extra":""}]}]},{"had_liked":false,"id":123013,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1565591300,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565591300","product_id":100029501,"comment_content":"按照聚集索引存储的行记录在物理上连续的，还是逻辑上连续的？<br>逻辑上连续，因为链表没有强制要求使用连续的物理空间，当然如果物理连续，配合局部性原理，性能会更好。<br><br>另外，通过 B+ 树进行记录的检索流程是怎样的？<br>先从根节点开始通过二分查找，确定到要找的页节点或页子节点，如果是页节点就继续，直到找到页子节点，到页子节点，再通过页目录，也是二分查找到对应的组，再通过单链表遍历找到相应的数据。","like_count":0},{"had_liked":false,"id":122971,"user_name":"mk","can_delete":false,"product_type":"c1","uid":1571545,"ip_address":"","ucode":"07390018971F55","user_header":"https://static001.geekbang.org/account/avatar/00/17/fa/d9/c0a8c740.jpg","comment_is_top":false,"comment_ctime":1565581088,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565581088","product_id":100029501,"comment_content":"getpagesize","like_count":0}]}