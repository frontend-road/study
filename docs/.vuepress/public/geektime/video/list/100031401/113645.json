{"id":113645,"title":"42 | 如何设计用户角色鉴权？","content":"<ul>\n<li>\n<p>代码：<a href=\"https://gitee.com/geektime-geekbang/staffjoy\">https://gitee.com/geektime-geekbang/staffjoy</a></p>\n</li>\n<li>\n<p>课件：<a href=\"https://pan.baidu.com/s/1Q7eP3yZ1Vm8J2nhle5RzTQ\">https://pan.baidu.com/s/1Q7eP3yZ1Vm8J2nhle5RzTQ</a> 提取码: 1aeh</p>\n</li>\n</ul>","comments":[{"had_liked":false,"id":144581,"user_name":"LSJ","can_delete":false,"product_type":"c3","uid":1299437,"ip_address":"","ucode":"3CF8A457AC6BA9","user_header":"https://static001.geekbang.org/account/avatar/00/13/d3/ed/8d5420ad.jpg","comment_is_top":false,"comment_ctime":1571973055,"is_pvip":false,"replies":[{"id":55772,"content":"spring-security是单块应用时代的产物，那个时候的应用形态主要就是web-mvc，安全实现主要就是靠session+cookie+后端用于存储用户和权限数据的存储，总体是一种单体和有状态安全技术。\n\n微服务时代则完全不同，后端都是无状态服务，前端应用形态很多，有单页+无线+Web，spring-security开发设计的时候没有考虑到现在的微服务形态。微服务适合采用oauth&#47;jwt等无状态安全认证机制，具体原理可以进一步学习本章课程。\n\n当然如果你硬是要将spring-security用在微服务上，我想你自己搞些定制也可以工作，但是它开发之初确实不是为微服务设计的，就是为单体spring-mvc应用设计的，后来Pivotal又推出spring-security-oauth2来扩展支持微服务安全，但是也我认为也没有设计好。\n\n","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1572006525,"ip_address":"","comment_id":144581,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"老师 能大概讲一下spring-security为什么不适合微服务场景吗 可不可以把spring-security集成到网关上，或者针对于某一个需要进行认证鉴权的微服务（比如管理后台服务）集成spring-security","like_count":9,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472014,"discussion_content":"spring-security是单块应用时代的产物，那个时候的应用形态主要就是web-mvc，安全实现主要就是靠session+cookie+后端用于存储用户和权限数据的存储，总体是一种单体和有状态安全技术。\n\n微服务时代则完全不同，后端都是无状态服务，前端应用形态很多，有单页+无线+Web，spring-security开发设计的时候没有考虑到现在的微服务形态。微服务适合采用oauth/jwt等无状态安全认证机制，具体原理可以进一步学习本章课程。\n\n当然如果你硬是要将spring-security用在微服务上，我想你自己搞些定制也可以工作，但是它开发之初确实不是为微服务设计的，就是为单体spring-mvc应用设计的，后来Pivotal又推出spring-security-oauth2来扩展支持微服务安全，但是也我认为也没有设计好。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572006525,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134603,"user_name":"dingdongfm","can_delete":false,"product_type":"c3","uid":1564213,"ip_address":"","ucode":"7D17D2BC392A66","user_header":"","comment_is_top":false,"comment_ctime":1568876884,"is_pvip":false,"replies":[{"id":51645,"content":"fusionauth(https:&#47;&#47;fusionauth.io&#47;downloads)是一个auth as a service产品，它采用我课程中给出的用户角色鉴权模型，fusionauth免费但不开源，但是下载的jar里头有db schema，可以参考。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1568893777,"ip_address":"","comment_id":134603,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"请问给出的这个权限模型有没有对应的关系数据库的表结构可以参考？","like_count":6,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467825,"discussion_content":"fusionauth(https://fusionauth.io/downloads)是一个auth as a service产品，它采用我课程中给出的用户角色鉴权模型，fusionauth免费但不开源，但是下载的jar里头有db schema，可以参考。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568893777,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121800,"user_name":"公号-技术夜未眠","can_delete":false,"product_type":"c3","uid":1013683,"ip_address":"","ucode":"83825B57CBD952","user_header":"https://static001.geekbang.org/account/avatar/00/0f/77/b3/991f3f9b.jpg","comment_is_top":false,"comment_ctime":1565225844,"is_pvip":true,"replies":[{"id":44804,"content":"透明令牌和JWT令牌的区别，在35节《安全认证架构演进：微服务阶段》和38节《JWT有哪两种主要流程？》都有讲解，可以回过头去再看一下视频。简单讲，透明令牌相当于一个无意义的随机字符串，它是实际存储在AuthServer上的会话数据的一个引用标识符，后续可以通过透明令牌去集中AuthServer上查询会话数据；而JWT令牌则是自包含数据的，一般不需要到集中AuthServer上查询会话数据，可以实现无状态认证。做一个类比，透明令牌可以类比Java语言中的引用传递(pass by reference)，而JWT令牌可以类比Java语言中的值传递(pass by value)。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1565275566,"ip_address":"","comment_id":121800,"utype":1}],"discussion_count":2,"race_medal":1,"score":2,"product_id":100031401,"comment_content":"波波老师，透明令牌和jwt令牌有什么区别了？","like_count":5,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461953,"discussion_content":"透明令牌和JWT令牌的区别，在35节《安全认证架构演进：微服务阶段》和38节《JWT有哪两种主要流程？》都有讲解，可以回过头去再看一下视频。简单讲，透明令牌相当于一个无意义的随机字符串，它是实际存储在AuthServer上的会话数据的一个引用标识符，后续可以通过透明令牌去集中AuthServer上查询会话数据；而JWT令牌则是自包含数据的，一般不需要到集中AuthServer上查询会话数据，可以实现无状态认证。做一个类比，透明令牌可以类比Java语言中的引用传递(pass by reference)，而JWT令牌可以类比Java语言中的值传递(pass by value)。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565275566,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1193692,"avatar":"https://static001.geekbang.org/account/avatar/00/12/36/dc/36b306a2.jpg","nickname":"WWR","note":"","ucode":"1FCFD17A6E0390","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4288,"discussion_content":"透明令牌是不是可以这么理解：key-value的一种，key作为令牌，使用key去Authserver上换取用户数据；\n而JWT令牌则是自包含的，key-value同时具备的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1565276637,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121298,"user_name":"Alex","can_delete":false,"product_type":"c3","uid":1024763,"ip_address":"","ucode":"F6B5C64BC99FB7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a2/fb/94af9cf1.jpg","comment_is_top":false,"comment_ctime":1565096040,"is_pvip":false,"replies":[{"id":44717,"content":"如果安全要求比较严格，也可以考虑一种混合模式，外部使用透明令牌，内部使用自包含的jwt令牌，中间通过网关访问Auth Service进行转换，这种做法Auth Service需要存透明令牌和jwt之间的映射关系。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1565189159,"ip_address":"","comment_id":121298,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"如果考虑微服务内部安排是不是内部传jwt更好，避免被内部伪造身份。","like_count":4,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461729,"discussion_content":"如果安全要求比较严格，也可以考虑一种混合模式，外部使用透明令牌，内部使用自包含的jwt令牌，中间通过网关访问Auth Service进行转换，这种做法Auth Service需要存透明令牌和jwt之间的映射关系。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565189159,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1114238,"avatar":"https://static001.geekbang.org/account/avatar/00/11/00/7e/c22945bf.jpg","nickname":"Aaron","note":"","ucode":"6ECBBA57DD2687","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":277096,"discussion_content":"但这样和v3.5比有什么优势呢?除了网关仍会访问auth外 还要多维护一个和jwt的映射","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590999270,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":223174,"user_name":"grey927","can_delete":false,"product_type":"c3","uid":1202782,"ip_address":"","ucode":"833E02ED835B4A","user_header":"https://static001.geekbang.org/account/avatar/00/12/5a/5e/a897cb0d.jpg","comment_is_top":false,"comment_ctime":1591015605,"is_pvip":false,"replies":[{"id":82348,"content":"回答你的一些问题：\n\n1. staffjoy里头的Authorize授权注解是自定义的，没有直接用Spring Security的那一套。之所以这样做，是为了让大家理解背后的原理，也就是自己完全可以定制开发一套简单的安全授权机制，没有必要一定用Spring Security。当然，用Spring Security也可以实现类似功能。\n\n2. App是应用，和Permission不是一个概念。对于一个企业，一般有很多应用(内部的或者外部的)，这些应用\n需要先在安全认证系统里头注册，之后可以用于跟踪这些App的登陆访问情况。如果你了解OAuth2的话，App相当于OAuth2里头的Client概念。\n\n3. 如果要控制到前端页面按钮的权限，可以考虑Apache Shiro安全框架，不过这类框架主要针对Web MVC应用,微服务单页应用并不适合。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1591112511,"ip_address":"","comment_id":223174,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"杨老师，staffjoy里面的Authorie注解是不是可以直接用Spring Security的hasPermission注解来替换，此外，权限模型里面的App是不是Permission的概念，如果需要控制到前端页面的某个按钮的权限，要如何设计比较好呢？\n","like_count":3,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497040,"discussion_content":"回答你的一些问题：\n\n1. staffjoy里头的Authorize授权注解是自定义的，没有直接用Spring Security的那一套。之所以这样做，是为了让大家理解背后的原理，也就是自己完全可以定制开发一套简单的安全授权机制，没有必要一定用Spring Security。当然，用Spring Security也可以实现类似功能。\n\n2. App是应用，和Permission不是一个概念。对于一个企业，一般有很多应用(内部的或者外部的)，这些应用\n需要先在安全认证系统里头注册，之后可以用于跟踪这些App的登陆访问情况。如果你了解OAuth2的话，App相当于OAuth2里头的Client概念。\n\n3. 如果要控制到前端页面按钮的权限，可以考虑Apache Shiro安全框架，不过这类框架主要针对Web MVC应用,微服务单页应用并不适合。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591112511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129073,"user_name":"Aaron","can_delete":false,"product_type":"c3","uid":1066251,"ip_address":"","ucode":"B0C504A76297C7","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/0Qp9pxHBvgdZAveKzsvUFFUicCJfe7ONzhC7jSNFQDNFvg0jRMXuqqZOdxG1qKosylUYrpIHUR2Q76w5m4HtVkg/132","comment_is_top":false,"comment_ctime":1567039157,"is_pvip":false,"replies":[{"id":48104,"content":"不一样，构造jwt令牌除了包含用户名等claims，还包含过期时间(当前时间+持续有效时间)，这个每个都不一样。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1567082815,"ip_address":"","comment_id":129073,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"对于同一个用户，jwt每次生成的token可能都是一样的吧？","like_count":3,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465261,"discussion_content":"不一样，构造jwt令牌除了包含用户名等claims，还包含过期时间(当前时间+持续有效时间)，这个每个都不一样。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567082815,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126159,"user_name":"John","can_delete":false,"product_type":"c3","uid":1020861,"ip_address":"","ucode":"E4ADF8488953FB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/93/bd/f3977ebb.jpg","comment_is_top":false,"comment_ctime":1566342959,"is_pvip":false,"replies":[{"id":46762,"content":"jwt有无状态好处，但是有吊销不及时的问题。有一种优化的办法是引入消息机制，如果吊销或者用户数据变更，可以通过消息传播出去，相关应用可以监听消息，及时吊销或处理用户数据变更。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1566389072,"ip_address":"","comment_id":126159,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"上次課也說過 jwt有時限 那麼在expire之前 如果用戶在台式電腦上增減了一個role 但是現在手機端沒有同步就亂了","like_count":2,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463856,"discussion_content":"jwt有无状态好处，但是有吊销不及时的问题。有一种优化的办法是引入消息机制，如果吊销或者用户数据变更，可以通过消息传播出去，相关应用可以监听消息，及时吊销或处理用户数据变更。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566389072,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1020861,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/93/bd/f3977ebb.jpg","nickname":"John","note":"","ucode":"E4ADF8488953FB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5630,"discussion_content":"這個擴散指的是推送麼 這個監聽能不能舉個例子呢 謝謝","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566392871,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":171591,"user_name":"ella","can_delete":false,"product_type":"c3","uid":1449133,"ip_address":"","ucode":"D7DD3CCA5FECDB","user_header":"https://static001.geekbang.org/account/avatar/00/16/1c/ad/27c7dae0.jpg","comment_is_top":false,"comment_ctime":1578971428,"is_pvip":false,"replies":[{"id":66592,"content":"微服务以后，一个企业一般会有很多的应用，这些应用不是每个用户都可以用的。所以在用户和应用之间增加一个关联概念userRegistration，一个用户只有注册了一个应用，他&#47;她才能使用这个应用。可以把userRegistration理解为用户和应用之间的一个关联表。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1579004408,"ip_address":"","comment_id":171591,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"权限参考模型里面的userRegistration是个什么概念，不是很理解，是userInfo的意思么？为什么一个userRegistration只能属于一个app","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481425,"discussion_content":"微服务以后，一个企业一般会有很多的应用，这些应用不是每个用户都可以用的。所以在用户和应用之间增加一个关联概念userRegistration，一个用户只有注册了一个应用，他/她才能使用这个应用。可以把userRegistration理解为用户和应用之间的一个关联表。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579004408,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134636,"user_name":"dingdongfm","can_delete":false,"product_type":"c3","uid":1564213,"ip_address":"","ucode":"7D17D2BC392A66","user_header":"","comment_is_top":false,"comment_ctime":1568883707,"is_pvip":false,"replies":[{"id":51650,"content":"RBAC是一种通用的基于角色的访问控制机制，和SaaS&#47;多租户并不直接关联。这个机制SaaS&#47;多租户应用可以采用，其它非SaaS应用也可以采用。\n\nStaffjoy的多租户主要由数据库表级别的逻辑隔离(以Company为单位)，加上Faraday网关+基于JWT的安全框架+WhoAmI服务这些机制共同配合实现。相关内容主要分布在第2&#47;4&#47;5章。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1568895376,"ip_address":"","comment_id":134636,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"你好，请问这里的rbac service跟sass,多租户有关系么？多租户具体在哪些章节中有体现？","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467838,"discussion_content":"RBAC是一种通用的基于角色的访问控制机制，和SaaS/多租户并不直接关联。这个机制SaaS/多租户应用可以采用，其它非SaaS应用也可以采用。\n\nStaffjoy的多租户主要由数据库表级别的逻辑隔离(以Company为单位)，加上Faraday网关+基于JWT的安全框架+WhoAmI服务这些机制共同配合实现。相关内容主要分布在第2/4/5章。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568895376,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123607,"user_name":"Tomorrow","can_delete":false,"product_type":"c3","uid":1510148,"ip_address":"","ucode":"6F213062369A8D","user_header":"https://static001.geekbang.org/account/avatar/00/17/0b/04/28ae1b31.jpg","comment_is_top":false,"comment_ctime":1565711762,"is_pvip":false,"replies":[{"id":45459,"content":"你好，spring-security&#47;shiro其实是单块应用时代的安全框架，不是服务，严格讲不适合微服务安全认证场景。课程中提出的是一种认证+鉴权服务(auth &amp; permission as a service)，专门面向微服务场景的，需要单独开发实现，可以参考auth0.com或者fusionauth.io，我本人也正在开发一个类似服务，后面会开源出来。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1565789319,"ip_address":"","comment_id":123607,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"老师，您好，能否staffjoy中的权限框架如何进行选型？spring-security以及shiro或者有没有更好的？","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462744,"discussion_content":"你好，spring-security/shiro其实是单块应用时代的安全框架，不是服务，严格讲不适合微服务安全认证场景。课程中提出的是一种认证+鉴权服务(auth &amp;amp; permission as a service)，专门面向微服务场景的，需要单独开发实现，可以参考auth0.com或者fusionauth.io，我本人也正在开发一个类似服务，后面会开源出来。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565789319,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123539,"user_name":"彩瓷菜","can_delete":false,"product_type":"c3","uid":1241843,"ip_address":"","ucode":"93A826B6D96618","user_header":"https://static001.geekbang.org/account/avatar/00/12/f2/f3/8fe906da.jpg","comment_is_top":false,"comment_ctime":1565697416,"is_pvip":false,"replies":[{"id":45454,"content":"你好，spring-security其实是单块应用时代的安全框架，严格讲不适合微服务安全认证场景。课程中提出的是一种认证+鉴权服务(auth &amp; permission as a service)，专门面向微服务场景的，需要单独开发实现，可以参考auth0.com或者fusionauth.io。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1565788691,"ip_address":"","comment_id":123539,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100031401,"comment_content":"请问老师，我们这套认证和鉴权的代码可以用spring-security实现吗？","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462715,"discussion_content":"你好，spring-security其实是单块应用时代的安全框架，严格讲不适合微服务安全认证场景。课程中提出的是一种认证+鉴权服务(auth &amp;amp; permission as a service)，专门面向微服务场景的，需要单独开发实现，可以参考auth0.com或者fusionauth.io。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565788691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":329598,"user_name":"飞鹤Plus","can_delete":false,"product_type":"c3","uid":1091239,"ip_address":"","ucode":"DBD24A951BA18E","user_header":"https://static001.geekbang.org/account/avatar/00/10/a6/a7/86c32422.jpg","comment_is_top":false,"comment_ctime":1641440091,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100031401,"comment_content":"老师您好，请教您一个问题：\n我们项目是Spring Cloud+Zuul网关，认证鉴权是：Spring Security+OAuth2+Jwt；服务分为：注册中心Registry、网关Gateway、认证鉴权UAA、用户服务User；\n\n支持传递token的方式有两个，如下：\n1. 通过Cookie，在请求头中添加：“Cookie ：access_token=fdaffdasfdafdas ”\n2. 请求头中：Authorization: &#39;Basic YmFjazpiYWNrX3NlY3JldA==&#39; }。[’Authorization&#39;] = `bearer ${access_token}`\n\n现在接入第三方平台，他们通过调用我们这边的网关服务获取token后，会放在请求的Request Header里，形式为：“参数名：Token值”；请问老师，这种情况下，怎么在请求到来时获取这个参数，实现认证。（默认是上边两种，不会自动获取请求头中的参数）\n\n我这边写了一下前置过滤器，但好像还是报错。请问，OAuth2默认支持上边两种方式，在哪重写，或者在这之前解析参数，转成上边的两种方式，实现自动认证请求\n{\n    &quot;error&quot;: &quot;unauthorized&quot;,\n    &quot;error_description&quot;: &quot;Full authentication is required to access this resource&quot;\n}","like_count":0},{"had_liked":false,"id":188860,"user_name":"钱","can_delete":false,"product_type":"c3","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1584426955,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100031401,"comment_content":"jwt+rbac：可以实现更细粒度的权限控制，比如：用户只能访问某些应用，或者只能访问某些应用的某些服务。","like_count":0}]}