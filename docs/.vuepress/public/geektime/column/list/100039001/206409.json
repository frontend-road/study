{"id":206409,"title":"52 | 门面模式：如何设计合理的接口粒度以兼顾接口的易用性和通用性？","content":"<p>前面我们已经学习了代理模式、桥接模式、装饰器模式、适配器模式，这4种结构型设计模式。今天，我们再来学习一种新的结构型模式：门面模式。门面模式原理和实现都特别简单，应用场景也比较明确，主要在接口设计方面使用。</p><p>如果你平时的工作涉及接口开发，不知道你有没有遇到关于接口粒度的问题呢？</p><p>为了保证接口的可复用性（或者叫通用性），我们需要将接口尽量设计得细粒度一点，职责单一一点。但是，如果接口的粒度过小，在接口的使用者开发一个业务功能时，就会导致需要调用n多细粒度的接口才能完成。调用者肯定会抱怨接口不好用。</p><p>相反，如果接口粒度设计得太大，一个接口返回n多数据，要做n多事情，就会导致接口不够通用、可复用性不好。接口不可复用，那针对不同的调用者的业务需求，我们就需要开发不同的接口来满足，这就会导致系统的接口无限膨胀。</p><p>那如何来解决接口的可复用性（通用性）和易用性之间的矛盾呢？通过今天对于门面模式的学习，我想你心中会有答案。话不多说，让我们正式开始今天的学习吧！</p><h2>门面模式的原理与实现</h2><p>门面模式，也叫外观模式，英文全称是Facade Design Pattern。在GoF的《设计模式》一书中，门面模式是这样定义的：</p><blockquote>\n<p>Provide a unified interface to a set of interfaces in a subsystem. Facade Pattern defines a higher-level interface that makes the subsystem easier to use.</p>\n</blockquote><!-- [[[read_end]]] --><p>翻译成中文就是：门面模式为子系统提供一组统一的接口，定义一组高层接口让子系统更易用。</p><p>这个定义很简洁，我再进一步解释一下。</p><p>假设有一个系统A，提供了a、b、c、d四个接口。系统B完成某个业务功能，需要调用A系统的a、b、d接口。利用门面模式，我们提供一个包裹a、b、d接口调用的门面接口x，给系统B直接使用。</p><p>不知道你会不会有这样的疑问，让系统B直接调用a、b、d感觉没有太大问题呀，为什么还要提供一个包裹a、b、d的接口x呢？关于这个问题，我通过一个具体的例子来解释一下。</p><p>假设我们刚刚提到的系统A是一个后端服务器，系统B是App客户端。App客户端通过后端服务器提供的接口来获取数据。我们知道，App和服务器之间是通过移动网络通信的，网络通信耗时比较多，为了提高App的响应速度，我们要尽量减少App与服务器之间的网络通信次数。</p><p>假设，完成某个业务功能（比如显示某个页面信息）需要“依次”调用a、b、d三个接口，因自身业务的特点，不支持并发调用这三个接口。</p><p>如果我们现在发现App客户端的响应速度比较慢，排查之后发现，是因为过多的接口调用过多的网络通信。针对这种情况，我们就可以利用门面模式，让后端服务器提供一个包裹a、b、d三个接口调用的接口x。App客户端调用一次接口x，来获取到所有想要的数据，将网络通信的次数从3次减少到1次，也就提高了App的响应速度。</p><p>这里举的例子只是应用门面模式的其中一个意图，也就是解决性能问题。实际上，不同的应用场景下，使用门面模式的意图也不同。接下来，我们就来看一下门面模式的各种应用场景。</p><h2>门面模式的应用场景举例</h2><p>在GoF给出的定义中提到，“门面模式让子系统更加易用”，实际上，它除了解决易用性问题之外，还能解决其他很多方面的问题。关于这一点，我总结罗列了3个常用的应用场景，你可以参考一下，举一反三地借鉴到自己的项目中。</p><p>除此之外，我还要强调一下，门面模式定义中的“子系统（subsystem）”也可以有多种理解方式。它既可以是一个完整的系统，也可以是更细粒度的类或者模块。关于这一点，在下面的讲解中也会有体现。</p><h3>1.解决易用性问题</h3><p>门面模式可以用来封装系统的底层实现，隐藏系统的复杂性，提供一组更加简单易用、更高层的接口。比如，Linux系统调用函数就可以看作一种“门面”。它是Linux操作系统暴露给开发者的一组“特殊”的编程接口，它封装了底层更基础的Linux内核调用。再比如，Linux的Shell命令，实际上也可以看作一种门面模式的应用。它继续封装系统调用，提供更加友好、简单的命令，让我们可以直接通过执行命令来跟操作系统交互。</p><p>我们前面也多次讲过，设计原则、思想、模式很多都是相通的，是同一个道理不同角度的表述。实际上，从隐藏实现复杂性，提供更易用接口这个意图来看，门面模式有点类似之前讲到的迪米特法则（最少知识原则）和接口隔离原则：两个有交互的系统，只暴露有限的必要的接口。除此之外，门面模式还有点类似之前提到封装、抽象的设计思想，提供更抽象的接口，封装底层实现细节。</p><h3>2.解决性能问题</h3><p>关于利用门面模式解决性能问题这一点，刚刚我们已经讲过了。我们通过将多个接口调用替换为一个门面接口调用，减少网络通信成本，提高App客户端的响应速度。所以，关于这点，我就不再举例说明了。我们来讨论一下这样一个问题：从代码实现的角度来看，该如何组织门面接口和非门面接口？</p><p>如果门面接口不多，我们完全可以将它跟非门面接口放到一块，也不需要特殊标记，当作普通接口来用即可。如果门面接口很多，我们可以在已有的接口之上，再重新抽象出一层，专门放置门面接口，从类、包的命名上跟原来的接口层做区分。如果门面接口特别多，并且很多都是跨多个子系统的，我们可以将门面接口放到一个新的子系统中。</p><h3>3.解决分布式事务问题</h3><p>关于利用门面模式来解决分布式事务问题，我们通过一个例子来解释一下。</p><p>在一个金融系统中，有两个业务领域模型，用户和钱包。这两个业务领域模型都对外暴露了一系列接口，比如用户的增删改查接口、钱包的增删改查接口。假设有这样一个业务场景：在用户注册的时候，我们不仅会创建用户（在数据库User表中），还会给用户创建一个钱包（在数据库的Wallet表中）。</p><p>对于这样一个简单的业务需求，我们可以通过依次调用用户的创建接口和钱包的创建接口来完成。但是，用户注册需要支持事务，也就是说，创建用户和钱包的两个操作，要么都成功，要么都失败，不能一个成功、一个失败。</p><p>要支持两个接口调用在一个事务中执行，是比较难实现的，这涉及分布式事务问题。虽然我们可以通过引入分布式事务框架或者事后补偿的机制来解决，但代码实现都比较复杂。而最简单的解决方案是，利用数据库事务或者Spring框架提供的事务（如果是Java语言的话），在一个事务中，执行创建用户和创建钱包这两个SQL操作。这就要求两个SQL操作要在一个接口中完成，所以，我们可以借鉴门面模式的思想，再设计一个包裹这两个操作的新接口，让新接口在一个事务中执行两个SQL操作。</p><h2>重点回顾</h2><p>好了，今天的内容到此就讲完了。我们来一块总结回顾一下，你需要重点掌握的内容。</p><p>我们知道，类、模块、系统之间的“通信”，一般都是通过接口调用来完成的。接口设计的好坏，直接影响到类、模块、系统是否好用。所以，我们要多花点心思在接口设计上。我经常说，<strong>完成接口设计，就相当于完成了一半的开发任务。只要接口设计得好，那代码就差不到哪里去。</strong></p><p>接口粒度设计得太大，太小都不好。太大会导致接口不可复用，太小会导致接口不易用。在实际的开发中，接口的可复用性和易用性需要“微妙”的权衡。针对这个问题，我的一个基本的处理原则是，<strong>尽量保持接口的可复用性，但针对特殊情况，允许提供冗余的门面接口，来提供更易用的接口</strong>。</p><p>门面模式除了解决接口易用性问题之外，我们今天还讲到了其他2个应用场景，用它来解决性能问题和分布式事务问题。</p><h2>课堂讨论</h2><ol>\n<li>适配器模式和门面模式的共同点是，将不好用的接口适配成好用的接口。你可以试着总结一下它们的区别吗？</li>\n<li>在你过往的项目开发中，有没有遇到过不合理的接口需求？又或者，有没有遇到过非常难用的接口？可以留言“吐槽”一下。</li>\n</ol><p>欢迎留言和我分享，如果有收获，也欢迎你把这篇文章分享给你的朋友。</p>","comments":[{"had_liked":false,"id":183649,"user_name":"小兵","can_delete":false,"product_type":"c1","uid":1261674,"ip_address":"","ucode":"AA3BA727C25179","user_header":"https://static001.geekbang.org/account/avatar/00/13/40/6a/ab1cf396.jpg","comment_is_top":false,"comment_ctime":1583107081,"is_pvip":false,"discussion_count":15,"race_medal":0,"score":"2067462376457","product_id":100039001,"comment_content":"适配器是做接口转换，解决的是原接口和目标接口不匹配的问题。<br>门面模式做接口整合，解决的是多接口调用带来的问题。","like_count":482,"discussions":[{"author":{"id":1131687,"avatar":"https://static001.geekbang.org/account/avatar/00/11/44/a7/171c1e86.jpg","nickname":"啦啦啦","note":"","ucode":"6B12EC90A62525","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":141397,"discussion_content":"以前都不知道有贫血，充血这些词","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1579418350,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1307080,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f1/c8/8e6dc340.jpg","nickname":"potato00fa","note":"","ucode":"D179E68D87CC50","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":63902,"discussion_content":"太真实了，一直不知道自己不知道","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1574920284,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1283461,"avatar":"https://static001.geekbang.org/account/avatar/00/13/95/85/15cd21c2.jpg","nickname":"杨锋","note":"","ucode":"85A7828A538FB0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285379,"discussion_content":"一直贫血+1","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1592819965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1211223,"avatar":"https://static001.geekbang.org/account/avatar/00/12/7b/57/a9b04544.jpg","nickname":"QQ怪","note":"","ucode":"1A39B8433D9208","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":64579,"discussion_content":"我也是","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1574950886,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1623626,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c6/4a/3bd896fc.jpg","nickname":"Heiky","note":"","ucode":"03AA79E1BC4AE4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":63957,"discussion_content":"哈哈哈，都是不自知\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1574925584,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2028945,"avatar":"","nickname":"Geek5198","note":"","ucode":"2BEBE6A39D9A0E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337172,"discussion_content":"抱头痛哭","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608813846,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2347137,"avatar":"https://static001.geekbang.org/account/avatar/00/23/d0/81/d5c8e46e.jpg","nickname":"snake","note":"","ucode":"47BFFE4D048156","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331232,"discussion_content":"+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606813197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1299667,"avatar":"https://static001.geekbang.org/account/avatar/00/13/d4/d3/039a2683.jpg","nickname":"+6","note":"","ucode":"8100FACCC39BAE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":325886,"discussion_content":"+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605452412,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2037677,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/17/ad/96ff4c27.jpg","nickname":"边缘","note":"","ucode":"2437864D6E4333","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319507,"discussion_content":"看到这，蔚然的笑了，戳到痛点了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604041604,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1112490,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f9/aa/3e80212e.jpg","nickname":"龙猫","note":"","ucode":"FD726CC969EF9C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296454,"discussion_content":"+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596546769,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1792066,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/58/42/640dd096.jpg","nickname":"阳超","note":"","ucode":"239037A8E3F055","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":279415,"discussion_content":"都很真实","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591342472,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1501505,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e9/41/7cb2cf64.jpg","nickname":"Poppy","note":"","ucode":"AF656A00521037","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":220556,"discussion_content":"哈哈哈哈哈  我也是  哭了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585895563,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1139808,"avatar":"https://static001.geekbang.org/account/avatar/00/11/64/60/40019dc1.jpg","nickname":"Bii","note":"","ucode":"17447F2F8AF240","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":195879,"discussion_content":"一直在贫，从未停止过","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583319362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1099706,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c7/ba/4c449be2.jpg","nickname":"zhaozp","note":"","ucode":"BF390F5ED762CD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":77955,"discussion_content":"+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575961517,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1446471,"avatar":"https://static001.geekbang.org/account/avatar/00/16/12/47/8e0310e8.jpg","nickname":"Wellwell","note":"","ucode":"35D7C063C194B3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":77687,"discussion_content":"+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575933714,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183655,"user_name":"Frank","can_delete":false,"product_type":"c1","uid":1018370,"ip_address":"","ucode":"7A488CC6FE15E7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8a/02/828938c9.jpg","comment_is_top":false,"comment_ctime":1583108521,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"486914412969","product_id":100039001,"comment_content":"以前在做Activiti工作流开发时知道该工作流引擎提供了诸多门面接口供外部使用，以前只知道这样设计是对很多细节做了包装，提供友好易用的接口供用户使用。今天学习了本章内容，加深了对门面模式的理解。门面模式从定义上来看是为接口设计而提出的，所以在开发中我们在设计接口时可参考该模式。该模式对应到了之前学习过的一些设计原则和思想，如封装，迪米特法则。<br>对于课堂讨论：<br>1. 适配器模式与门面模式的区别：（a）适配器主要是为了解决接口不兼容的问题，而门面模式主要用于设计接口的易用性问题。（b）适配器在代码结构上主要是继承加组合，门面模式在代码结构上主要是封装。（c）适配器可以看作是事后行为，是一种“补偿模式”，主要是用来完善设计上的不足，而门面模式是在设计接口时就需要考虑的，是一种事前行为。<br>2. 在过往的开发中，自己在写接口时除了满足需求外大部分考虑是接口的幂等性，限流，安全等。对于接口的可复用性考量的不是很好，还需要大量的实践来加深。","like_count":114,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475997,"discussion_content":"哈哈，多谢认可，我写这篇文字的时候，还害怕搞DDD的人会来骂我，看来是我多虑了。隔壁的DDD课程可以去学下，管它是不是我写的，看看他咋“吹”的也好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574838339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1056127,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/7f/aabc1b66.jpg","nickname":"hetiu","note":"","ucode":"35D9338C3ABD20","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":105414,"discussion_content":"ddd是个新名词，但背后的思想也是对前人的总结，就像设计模式，其实已经经过几十年发展，最后四人帮给系统化的总结出来。ddd更像一个多方面的方法论，涉及团队沟通，需求分析，业务建模，设计，编码，业务根据场景选择性应用，追求极致ddd成本很高，对团队成员的能力要求也很高。而且ddd的价值体现在中后期，比如代码可维护性，bug率，复用程度等。对于大部分互联网短平快的需求，而且生命周期较短的功能，还不如CRUD来得直接。只有业务发展趋向稳定，更关注产品质量时，ddd才能开始体现价值。不过，一切，都可以用重构解决，重构成全了设计模式，也能够成全ddd。","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1577460946,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1323102,"avatar":"https://static001.geekbang.org/account/avatar/00/14/30/5e/c42bc33f.jpg","nickname":"Younger Ku","note":"","ucode":"D157DC38BDB515","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1056127,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/7f/aabc1b66.jpg","nickname":"hetiu","note":"","ucode":"35D9338C3ABD20","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304117,"discussion_content":"没有深厚的代码功底和丰富的项目经验是不可能说出这句句箴言，令人思想升华，回味无穷。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599473187,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":105414,"ip_address":""},"score":304117,"extra":""},{"author":{"id":2690172,"avatar":"","nickname":"Geek_设计模式之美","note":"","ucode":"59263416E65594","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1056127,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/7f/aabc1b66.jpg","nickname":"hetiu","note":"","ucode":"35D9338C3ABD20","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383839,"discussion_content":"不是04年出的吗 后来跟着微服务起来了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626251369,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":105414,"ip_address":""},"score":383839,"extra":""}]},{"author":{"id":1100703,"avatar":"https://static001.geekbang.org/account/avatar/00/10/cb/9f/ee68858c.jpg","nickname":"阿玛铭","note":"","ucode":"DBF948D82ACBE3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":70455,"discussion_content":"正好看过隔壁欧老师讲的DDD，极客时间的老师和总编辑的思维都是比较有哲学上的一致性的。自顶向下认知法：演绎（理论、假设），自底向上认知法：归纳（实践，结论）。不打广告，我只能说看过有收益。","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1575358724,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1334409,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIjRETqRjvLESLDZkNTjIiaSibtNYBaS1o8WMUicOFn3ycF3Mgh6LRJibqSBjVBjiaO2ibW0gHkafATb21A/132","nickname":"lmdcx","note":"","ucode":"F2CDD0091ADFD7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1100703,"avatar":"https://static001.geekbang.org/account/avatar/00/10/cb/9f/ee68858c.jpg","nickname":"阿玛铭","note":"","ucode":"DBF948D82ACBE3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":70555,"discussion_content":"谢谢！我也快入手了，你可以发个返现链接给我，不枉你白留言。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575367852,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":70455,"ip_address":""},"score":70555,"extra":""}]},{"author":{"id":1100751,"avatar":"https://static001.geekbang.org/account/avatar/00/10/cb/cf/417a5ec2.jpg","nickname":"黑豹","note":"","ucode":"B9F94D0AFA89DC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":397065,"discussion_content":"DDD是好东西，不能因为没有用过，或者遇到一些水货DDD，就形成对DDD的误会。这应该是DDD传道者自身的问题。在我从事的复杂工业软件项目中，项目的生命周期是以至少十年来起步的，它有非常复杂的过程。而且工业软件不仅仅只是业务，还包含很多和物理、机械、等复杂外部组件的交互、控制。贫血模型在这里几无任何用武之地。我相信随着我们国家复杂工业软件的兴起，DDD也会迎来它应有的地位。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1632555134,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1268264,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5a/28/732d3f2f.jpg","nickname":"GEEKBANG_6638780","note":"","ucode":"952194E56FD8C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382762,"discussion_content":"面向对象的思想很重要，但是有时候对象解决不了一些问题。所以DDD就出来了，DDD其实就是组合一组对象共同服务于一个业务。 说白了DDD就是更广义的面向对象设计。给你个链接：https://mp.weixin.qq.com/s/a5NiKLFZsg54P_fcXPkahg  这篇文章讲述了利用DDD解决一些实际的问题","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1625714948,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183671,"user_name":"Jackey","can_delete":false,"product_type":"c1","uid":1063751,"ip_address":"","ucode":"125DE81993FEDD","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/47/f6c772a1.jpg","comment_is_top":false,"comment_ctime":1583113972,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"190561674996","product_id":100039001,"comment_content":"适配器模式注重的是兼容性，而门面模式注重的是易用性","like_count":45,"discussions":[{"author":{"id":2234620,"avatar":"https://static001.geekbang.org/account/avatar/00/22/18/fc/4f92ee4e.jpg","nickname":"江南一笑","note":"","ucode":"E38938A1178827","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318836,"discussion_content":"那可能是那时候的访问量比较少，数据库规模也不大，所以不需要数据库缓存。\n我想问：如果使用mvc框架，就必然不能做到缓存数据库数据吗？有人具体说明一下？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603860706,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1037925,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d6/65/e6abeba2.jpg","nickname":"Persistfanāāā","note":"","ucode":"8C4EF892B7ED27","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":74150,"discussion_content":"老板天天嫌又要买服务器","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575634579,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1541099,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/eb/3d8727b6.jpg","nickname":"苏丹","note":"","ucode":"C83E8646A29A9C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":70424,"discussion_content":"有道理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575355406,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1133947,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIaOAxRlZjFkGfRBn420LuAcyWkMrpq5iafGdqthX5icJPjql0ibZOAdafaqbfvw4ZpVzDmsaYglVXDw/132","nickname":"唐朝农民","note":"","ucode":"6F8F43C6652225","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":64681,"discussion_content":"有点道理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574952597,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1730626,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJvm1JYIDcS74s4cEYxA1PXMqjortVXEjUKyGQcPvibNJ4EAuksIa6uoHgr6G1yRqAM2KtP3yicKgTA/132","nickname":"小妖","note":"","ucode":"49C01DBFADF101","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":63822,"discussion_content":"有道理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574914219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":212707,"user_name":"静静聆听","can_delete":false,"product_type":"c1","uid":1263932,"ip_address":"","ucode":"0A8600CB928EFE","user_header":"https://static001.geekbang.org/account/avatar/00/13/49/3c/5d54c510.jpg","comment_is_top":false,"comment_ctime":1588180096,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"156207002752","product_id":100039001,"comment_content":"学设计模式让我想到了张三丰问张无忌，还记得几成，张无忌说全都忘了，好了，你已经学会了😀","like_count":37,"discussions":[{"author":{"id":2690172,"avatar":"","nickname":"Geek_设计模式之美","note":"","ucode":"59263416E65594","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383841,"discussion_content":"那么 netty spring rocketmq juc redis 等 都是啥模型 写的啊? ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626251510,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183986,"user_name":"何妨","can_delete":false,"product_type":"c1","uid":1385377,"ip_address":"","ucode":"EC3983BFF7992A","user_header":"https://static001.geekbang.org/account/avatar/00/15/23/a1/b08f3ee7.jpg","comment_is_top":false,"comment_ctime":1583197232,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"134727183408","product_id":100039001,"comment_content":"建议老师可以给出一下典型的实现代码，这样会更直观一些","like_count":32},{"had_liked":false,"id":183868,"user_name":"黄林晴","can_delete":false,"product_type":"c1","uid":1362631,"ip_address":"","ucode":"B15C38AECDA88F","user_header":"https://static001.geekbang.org/account/avatar/00/14/ca/c7/00e544c2.jpg","comment_is_top":false,"comment_ctime":1583150718,"is_pvip":false,"discussion_count":10,"race_medal":0,"score":"66007660158","product_id":100039001,"comment_content":"吐槽不存在的，我只知道我现在做的app刚启动的时候 要调用五六个接口...，之前没了解过门面模式，不过我在想，我去说服务端改成门面模式之前，要确定一个问题，那就是门面模式是将很多接口整合在一起，那么势必，牵扯到传参变多，以及返回数据量多的因素，这种情况下应该也比较影响效率，比如一个接口是从student表中查询，一个是从course表还有一个是从teacher表中查，门面模式和直接写一个接口sql查询这么多的效率是一样的吗","like_count":15,"discussions":[{"author":{"id":1209852,"avatar":"https://static001.geekbang.org/account/avatar/00/12/75/fc/797fe290.jpg","nickname":"FafaSaigai","note":"","ucode":"325EF70B500B4F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":268426,"discussion_content":"我觉得还是要看接口之间的关系吧，要是八竿子打不着，耦合在一起反而不好吧","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1589773877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2130036,"avatar":"https://static001.geekbang.org/account/avatar/00/20/80/74/30b1fd80.jpg","nickname":"lpp","note":"","ucode":"58E56D02674D07","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333771,"discussion_content":"app跟后端是移动网络通讯；后端跟数据库一般在一个机房，局域网通讯。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1607612538,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1028924,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b3/3c/81a3a00c.jpg","nickname":"Saber","note":"","ucode":"CAB1C0314BAAA9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":229022,"discussion_content":"我感觉前面几位说的都很对，老师讲的场景应该是说多个http请求串行阻塞了页面性能的case下，如果这个不是你目前的现状，可能你就还不需要使用它。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1586603301,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1097943,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJB6qS9nxicvToSX4fTrDNv7OVBtsrfr6VwLjPLcwZS8ibicczM15qVx473KgrYQg0TIFeibXD0RgK6WQ/132","nickname":"传志","note":"","ucode":"2B0F67BCFCB3D5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":238483,"discussion_content":"还要做平衡吧，具体业务具体分析，像电商首页之类的 一次全给估计性能也不能接受","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1587222165,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1225827,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKkkZBpiaOo4dGUuOXnRusBwcYCcwPTU8Pn41zbKh9py4Nwcf1rtc8A6yH5AtVVbkv8iaoS6hFgKevg/132","nickname":"谷雨","note":"","ucode":"E8566AD0E2A521","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":215466,"discussion_content":"需要调用多个接口，如果是并发还好。串行的话，叠加起来的网络链接消耗很大。将多个接口合并成一个，能减少的网络开销，是网络请求从外网转内网。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1585324113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1113597,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fd/fd/326be9bb.jpg","nickname":"注定非凡","note":"","ucode":"80673056E131B7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294452,"discussion_content":"从我们项目的系统情况来看，我觉得门面模式比较适合简单的信息上报，通知类的接口整合（即：入参和出参都不是非常繁杂）","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1595897421,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1744257,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/9d/81/d748b7eb.jpg","nickname":"千锤百炼领悟之极限","note":"","ucode":"224B5CF2101716","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":408521,"discussion_content":"不同表用不同的sql执行，门面在这个场景是减少多次网络请求，提升性能。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635260040,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2206424,"avatar":"","nickname":"闻天","note":"","ucode":"DE44AA4B728D20","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385104,"discussion_content":"我们支付交易组接口就是用的门面模式，扫码支付提供一个入口，里面封装特别多的参数检验和判断逻辑，代码很乱。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626880782,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009422,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/0e/c77ad9b1.jpg","nickname":"eason2017","note":"","ucode":"E070BA624FA490","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":206606,"discussion_content":"接口减少带来的是单接口数据增加的情况，今儿有可能导致接口响应慢或者超时的现象，所以要权衡利弊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584419319,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1239557,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ea/05/c0d8014d.jpg","nickname":"一道阳光","note":"","ucode":"F35207CCCEC6E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":201493,"discussion_content":"用一个sql查询那么多表，是不是有点类似于接口耦合在一起了，不过对于特定的业务场景来说，这个应该是允许的吧，以后还要看接口的功能会不会变化，如果越来越复杂，最好还是分开。我也不知道自己说的对不对。多一个思考角度考虑问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583802894,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":190629,"user_name":"iamjohnnyzhuang","can_delete":false,"product_type":"c1","uid":1015327,"ip_address":"","ucode":"E694C1828907F6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7e/1f/b1d458a9.jpg","comment_is_top":false,"comment_ctime":1584674428,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"53124281980","product_id":100039001,"comment_content":"之前开发SDK的时候，有个案例，我们支持两种 Config API ，一种是直接从 Resource 下或者本地文件系统读取一些静态配置，一种是从数据库读取配置（定时更新）称作动态配置。由于SDK后续是要提供给其他开发者使用，如果为此暴露两个类 StaticConfig 和 DynamicConfig 使用起来十分不便。设置了一个门面类 ConfigFcade，用组合把两个对象当做成员变量，最后通过不同的方法 getStaticConfig 和 getDynamicConfig 暴露给使用者。<br><br><br>","like_count":12,"discussions":[{"author":{"id":1132569,"avatar":"https://static001.geekbang.org/account/avatar/00/11/48/19/14dd81d9.jpg","nickname":"铲铲队","note":"","ucode":"D16372C34B7AE3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549519,"discussion_content":"怎么感觉不太像门面呢，门面指的是接口的合并呢，你这都已经是组合了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1644051093,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2683430,"avatar":"https://static001.geekbang.org/account/avatar/00/28/f2/26/a8ac6b42.jpg","nickname":"听风有信","note":"","ucode":"2CCB467114FF5C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571712,"discussion_content":"像工厂模式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652359654,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1004349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/3d/1189e48a.jpg","nickname":"微思","note":"","ucode":"853C48AA183A7B","race_medal":4,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":211462,"discussion_content":"很赞的做法👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584852700,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183664,"user_name":"progyoung","can_delete":false,"product_type":"c1","uid":1014692,"ip_address":"","ucode":"0B4898AE78F9F5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7b/a4/24955994.jpg","comment_is_top":false,"comment_ctime":1583110800,"is_pvip":false,"discussion_count":13,"race_medal":0,"score":"44532783760","product_id":100039001,"comment_content":"解决分布式事务问题的应用场景中，如果用户和钱包并没有公用同一个数据库，那么是不是门面模式也不适用了呢？","like_count":10,"discussions":[{"author":{"id":1079780,"avatar":"https://static001.geekbang.org/account/avatar/00/10/79/e4/4b3b9587.jpg","nickname":"JJ","note":"","ucode":"85A77BB2262D58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332988,"discussion_content":"钱包和用户分属不同的服务，通过rpc调用，那么在门面接口里是无法通过spring事物来控制的吧？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1607409836,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1511737,"avatar":"https://static001.geekbang.org/account/avatar/00/17/11/39/66447afb.jpg","nickname":"少侠","note":"","ucode":"DD4E38084DD80F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1079780,"avatar":"https://static001.geekbang.org/account/avatar/00/10/79/e4/4b3b9587.jpg","nickname":"JJ","note":"","ucode":"85A77BB2262D58","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335172,"discussion_content":"是的，这个是分布式事物了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608109888,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":332988,"ip_address":""},"score":335172,"extra":""}]},{"author":{"id":1282648,"avatar":"https://static001.geekbang.org/account/avatar/00/13/92/58/b4f6365d.jpg","nickname":"小北","note":"","ucode":"3A23079E4AA92E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":567876,"discussion_content":"这个必须引入分布式事务了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651021428,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1330141,"avatar":"https://static001.geekbang.org/account/avatar/00/14/4b/dd/41614582.jpg","nickname":"HomeyLiu","note":"","ucode":"EF4CCB92C369B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537954,"discussion_content":"分布式事务看你的数据分片分到哪里?假如用户和钱包,都是通过userID分片,本质上也是分到同一个库, 实际就是一个物理端口上,分布式事务转化为了本地db事务,一样的.\n关键分布式db的 sharding key的设计.\n很简单的一个问题.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639278444,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1063308,"avatar":"https://static001.geekbang.org/account/avatar/00/10/39/8c/089525aa.jpg","nickname":"小乙哥","note":"","ucode":"C77E79BEA0C325","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308424,"discussion_content":"这种情况只能通过最终一致性解决了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600949106,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1488356,"avatar":"https://static001.geekbang.org/account/avatar/00/16/b5/e4/e6faf686.jpg","nickname":"握了个大蚂蚱","note":"","ucode":"AD34AD4FA37371","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306903,"discussion_content":"不同库肯定不行呀，玩的就是同库","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600415461,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1047733,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/fc/b5/ac717737.jpg","nickname":"肖臧","note":"","ucode":"4FAC9FF54DD6A0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278277,"discussion_content":"分库就你自己来处理，两阶段提交、三阶段提交、或者类似于TCP的三次握手都可以解决，总之还是要把创建用户和创建钱包的行为封装在一起，保证交易的原子性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591167399,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1086093,"avatar":"https://static001.geekbang.org/account/avatar/00/10/92/8d/ab469ad5.jpg","nickname":"黄强","note":"","ucode":"20231AC29CFD53","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":266552,"discussion_content":"不一定，如果用户和钱包可以通过系统间的RPC调用来减少restfull形式的第三方调用，也是可以考虑的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589531427,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1221604,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a3/e4/50266292.jpg","nickname":"库博","note":"","ucode":"0D5DD558C9EB25","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1086093,"avatar":"https://static001.geekbang.org/account/avatar/00/10/92/8d/ab469ad5.jpg","nickname":"黄强","note":"","ucode":"20231AC29CFD53","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305973,"discussion_content":"rpc本质上不还是基于http来做的么，还是会出现rpc服务方处理成功，但返回给rpc客户端超时导致失败的情况，不解决分布式事务问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600140156,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":266552,"ip_address":""},"score":305973,"extra":""}]},{"author":{"id":1520747,"avatar":"https://static001.geekbang.org/account/avatar/00/17/34/6b/9119192e.jpg","nickname":"丹诚","note":"","ucode":"001E93D6619F81","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":243136,"discussion_content":"不同库的话，已经完成事务的接口其实已经提交了事务了，再回滚的话是很难的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587522878,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015483,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7e/bb/947c329a.jpg","nickname":"程序员小跃","note":"","ucode":"25BB96E0791A60","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":194463,"discussion_content":"其实也是适用的，两个场景需要共存亡的情况，还是可以用事务。两个不同的数据库，分别写两个事务，其中有一个事务出错，在捕获异常阶段可以将完成的那个也进行回滚的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583222314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1332393,"avatar":"https://static001.geekbang.org/account/avatar/00/14/54/a9/76137b03.jpg","nickname":"doug","note":"","ucode":"DF941FB97DCC4C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1015483,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7e/bb/947c329a.jpg","nickname":"程序员小跃","note":"","ucode":"25BB96E0791A60","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":252278,"discussion_content":"如果一个项目不能跨库访问了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588147609,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":194463,"ip_address":""},"score":252278,"extra":""},{"author":{"id":1511737,"avatar":"https://static001.geekbang.org/account/avatar/00/17/11/39/66447afb.jpg","nickname":"少侠","note":"","ucode":"DD4E38084DD80F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1332393,"avatar":"https://static001.geekbang.org/account/avatar/00/14/54/a9/76137b03.jpg","nickname":"doug","note":"","ucode":"DF941FB97DCC4C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335174,"discussion_content":"应该可以的，都调用接口了呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608110031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":252278,"ip_address":""},"score":335174,"extra":""}]}]},{"had_liked":false,"id":185249,"user_name":"相逢是缘","can_delete":false,"product_type":"c1","uid":1060730,"ip_address":"","ucode":"CB299F53A95654","user_header":"https://static001.geekbang.org/account/avatar/00/10/2f/7a/ab6c811c.jpg","comment_is_top":false,"comment_ctime":1583546762,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"35943285130","product_id":100039001,"comment_content":"一、定义（理解）：<br>门面模式为子系统提供一组统一的接口，定义一组高层接口让子系统更易用。<br><br>二、使用场景：<br>1） 解决易用性问题（linux的系统调用）<br>2）解决性能问题（客户端访问服务）<br>3）解决分布式事物问题<br><br>三、适配器和门面模式的区别<br>适配器是做接口转换，解决的是原接口和目标接口不匹配的问题。<br>门面模式做接口整合，解决的是多接口调用带来的问题。","like_count":8},{"had_liked":false,"id":187412,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1584104889,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"31648875961","product_id":100039001,"comment_content":"slf4j不也是使用了门面模式吗？它是提供一组易用的日志操作接口，封装了log4j、logback，JCL等日志框架 。","like_count":7,"discussions":[{"author":{"id":1019588,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8e/c4/8d1150f3.jpg","nickname":"Richie","note":"","ucode":"12314EF0347693","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":208256,"discussion_content":"Slf4j 那不是适配器模式吗？","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1584540678,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1488356,"avatar":"https://static001.geekbang.org/account/avatar/00/16/b5/e4/e6faf686.jpg","nickname":"握了个大蚂蚱","note":"","ucode":"AD34AD4FA37371","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1019588,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8e/c4/8d1150f3.jpg","nickname":"Richie","note":"","ucode":"12314EF0347693","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306901,"discussion_content":"适配器+门面","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1600415378,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":208256,"ip_address":""},"score":306901,"extra":""}]}]},{"had_liked":false,"id":183674,"user_name":"下雨天","can_delete":false,"product_type":"c1","uid":1008315,"ip_address":"","ucode":"816B3792ECC50A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/62/bb/323a3133.jpg","comment_is_top":false,"comment_ctime":1583114109,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23057950589","product_id":100039001,"comment_content":"门面为了&quot;偷懒&quot;用起来更方便；适配器是不得已，老接口已经不可用或者不好用了。","like_count":5},{"had_liked":false,"id":187410,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1584104168,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"18763973352","product_id":100039001,"comment_content":"吐槽接口的易用性，某集团大公司，一个超级大的项目对外只提供一个超级复杂的超大接口。接口通过N多参数来区分各种请求。用得人喷血。","like_count":5,"discussions":[{"author":{"id":1399904,"avatar":"https://static001.geekbang.org/account/avatar/00/15/5c/60/3754399d.jpg","nickname":"Obed","note":"","ucode":"8717488DD14AB4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291480,"discussion_content":"以前对接过一个医疗的系统（his系统）c#写的 也是一个人超级大的接口 通过code来区分请求 我以为这是c#写代码的特点😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594831835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":240760,"user_name":"anyway","can_delete":false,"product_type":"c1","uid":1125781,"ip_address":"","ucode":"F51A3B14AF3120","user_header":"https://static001.geekbang.org/account/avatar/00/11/2d/95/a62dd74d.jpg","comment_is_top":false,"comment_ctime":1597055853,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14481957741","product_id":100039001,"comment_content":"从场景看，门面模式适用在接口设计方面，解决多接口调用问题；适配器模式是一种补偿措施，补偿的是接口设计缺陷。从功能上，门面模式注重易用性，适配器模式注重兼容性。","like_count":3},{"had_liked":false,"id":216122,"user_name":"编程界的小学生","can_delete":false,"product_type":"c1","uid":1593289,"ip_address":"","ucode":"4A5BE9A5E877FA","user_header":"https://static001.geekbang.org/account/avatar/00/18/4f/c9/9f51fd27.jpg","comment_is_top":false,"comment_ctime":1589192489,"is_pvip":false,"replies":[{"id":"80480","content":"你说的没错。但是，如果我用门面包装一个接口，使用分布式事务框架解决事务问题，其他多个业务就只用调用这个接口就好了，不用自己实现分布式事务问题。相当于复用了解决事务问题的代码。","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1589525544,"ip_address":"","comment_id":216122,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14474094377","product_id":100039001,"comment_content":"我对门面模式解决分布式事务持反对意见，如果再抽离出来一个门面模式的子模块，里面肯定要包含用户&#47;钱包数据源。然后用户系统和钱包系统有是独立的子模块，这样一个数据源岂不是散到很多地方了吗？<br>还有如果用户表和钱包表要拆离成两套库就GG了。<br><br>老师这里肯定是想说明门面模式的使用姿势和一些技巧，我只是没事找事一下 ...","like_count":4,"discussions":[{"author":{"id":2822403,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/11/03/d89cf9c6.jpg","nickname":"honey bunny","note":"","ucode":"280155CDB5CEF9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":407061,"discussion_content":"Android+1","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1634903148,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1545971,"avatar":"https://static001.geekbang.org/account/avatar/00/17/96/f3/b06a899c.jpg","nickname":"天竺葵柠檬橙花柚","note":"","ucode":"0F3620FABAEECB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":219819,"discussion_content":"我嵌入式开发的也来看设计模式，很多名词都没接触过","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1585813232,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1198158,"avatar":"https://static001.geekbang.org/account/avatar/00/12/48/4e/51896855.jpg","nickname":"落风","note":"","ucode":"D70B221D22A439","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560527,"discussion_content":"前端～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649381304,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1185495,"avatar":"https://static001.geekbang.org/account/avatar/00/12/16/d7/09e92ea0.jpg","nickname":"笑醉三千","note":"","ucode":"C820D678E981C3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550397,"discussion_content":"Android 使用充血模型的机会更多","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644507194,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1251106,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/22/20615a7e.jpg","nickname":"昂","note":"","ucode":"31F58469188769","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375613,"discussion_content":"harmony+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621767987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2030670,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLrbCic7BckSd3xrawFH5KW0yYtI1uSsIEPFh0FIHxvHv9u6XBKgZCqH13qPbZDHTdqgevXLdGQlEw/132","nickname":"Geek_2a4536","note":"","ucode":"640A0D228B275C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":372892,"discussion_content":"服务端来学习的，最近在设计框架","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620490183,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1879556,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI735OGP6zMxdhVRdiaP5ice2ibdtOk1XkdzIqRiawy5NUCYh4iaWhr9f4CUW7gatnZMicL6vZJjCgY8TDg/132","nickname":"Geek_24a055","note":"","ucode":"1DFFE6E7C0A75D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":357835,"discussion_content":"Android +1\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615878774,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1503528,"avatar":"https://static001.geekbang.org/account/avatar/00/16/f1/28/279c22ee.jpg","nickname":"jun5753","note":"","ucode":"B9EE5D445236B5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350176,"discussion_content":"Android+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613734552,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1334015,"avatar":"https://static001.geekbang.org/account/avatar/00/14/5a/ff/e89eb122.jpg","nickname":"LipLipLip","note":"","ucode":"6D5EC6B5BEC600","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311506,"discussion_content":"Android+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602380225,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1241613,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f2/0d/d567a50a.jpg","nickname":"Bezier","note":"","ucode":"FDD57CB90E12C9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":218257,"discussion_content":"Android+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585639147,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1457609,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/3B5MoC4DfBt00nnVshEBFHHkNVgbcBrXsd3SxFicdN3XX5ILOe7GJxKvtJKCY53xNCuxSV8ABxNulbhkibm1lXIw/132","nickname":"林峰峰","note":"","ucode":"83C2093135BBB8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":186829,"discussion_content":"+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582717657,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1188837,"avatar":"https://static001.geekbang.org/account/avatar/00/12/23/e5/6cca9bcf.jpg","nickname":"桂","note":"","ucode":"658E79A26B64A4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":165686,"discussion_content":"Android+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581314279,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183764,"user_name":"往事随风，顺其自然","can_delete":false,"product_type":"c1","uid":1235692,"ip_address":"","ucode":"F266EC6B143E38","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/ec/779c1a78.jpg","comment_is_top":false,"comment_ctime":1583130218,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"14468032106","product_id":100039001,"comment_content":"门面模式怎么实现，代码结构如何","like_count":3,"discussions":[{"author":{"id":1056127,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/7f/aabc1b66.jpg","nickname":"hetiu","note":"","ucode":"35D9338C3ABD20","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":105532,"discussion_content":"老哥看过张逸的ddd课程？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577461640,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183677,"user_name":"小晏子","can_delete":false,"product_type":"c1","uid":1132337,"ip_address":"","ucode":"3AAA6FB5ACB6AE","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/31/f35367c8.jpg","comment_is_top":false,"comment_ctime":1583114819,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"14468016707","product_id":100039001,"comment_content":"适配器模式和门面模式要的解决问题就不一样，适配器模式为了适配两个不兼容的系统，关联两个不兼容的接口，当程序必须遵循特定的接口并且必须支持多态行为时使用适配器；而门面模式要提供一个更简单易用的接口，比如你有一个开关可以控制打开你家的电视，空调，灯，等，这就是门面模式：一个按钮或功能需要一系列更复杂的步骤。<br>在实现上也有区别：门面模式定义了新的接口，而适配器模式使用旧的接口，适配器模式使两个现有接口同时工作而不是定义一个全新的接口。","like_count":3},{"had_liked":false,"id":272711,"user_name":"xuyd","can_delete":false,"product_type":"c1","uid":1050847,"ip_address":"","ucode":"62E1E7D5201E89","user_header":"https://static001.geekbang.org/account/avatar/00/10/08/df/866ed645.jpg","comment_is_top":false,"comment_ctime":1610248638,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10200183230","product_id":100039001,"comment_content":"有定领域驱动的味道<br>我们不直接对外暴露领域服务，而是经过应用服务编排组合多个领域服务之后，再暴露出去","like_count":2},{"had_liked":false,"id":184271,"user_name":"小刀","can_delete":false,"product_type":"c1","uid":1351063,"ip_address":"","ucode":"94DF8C45E09E42","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/iaByN5IfYbE9jMtWrtTDXtPEIHeV77KW1p7ZkiasiaGgA50VXaibo4fbp5ib2JkFP3iaIe4AUudLibufkEIofu5euCNHg/132","comment_is_top":false,"comment_ctime":1583281337,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10173215929","product_id":100039001,"comment_content":"适配器--继承+组合<br>门面---封装","like_count":2},{"had_liked":false,"id":270419,"user_name":"郑大钱","can_delete":false,"product_type":"c1","uid":1503067,"ip_address":"","ucode":"114CF48056880E","user_header":"https://static001.geekbang.org/account/avatar/00/16/ef/5b/ff28088f.jpg","comment_is_top":false,"comment_ctime":1609122596,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"5904089892","product_id":100039001,"comment_content":"门面模式很体现门面嘛，如果后端同学再拒绝合并接口，就怼他“门面模式”用得不行，哈哈哈～<br>一个页面调用N多个接口来渲染，我们明明知道用户体验不好，却怎么也怼不动，他们说得也很有道理，这是其他系统的数据，耦合在我这里不合适～<br>知己知彼，不一定每次都给人怼回去，至少在遇到性能优化的时候，这是一个可以优化的点。","like_count":1,"discussions":[{"author":{"id":2853072,"avatar":"","nickname":"小杰同学","note":"","ucode":"C6FC59D58F772C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559919,"discussion_content":"学到了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649060588,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":252614,"user_name":"Gopher","can_delete":false,"product_type":"c1","uid":1206229,"ip_address":"","ucode":"3C1F9012BB486D","user_header":"https://static001.geekbang.org/account/avatar/00/12/67/d5/1b26b725.jpg","comment_is_top":false,"comment_ctime":1602404198,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5897371494","product_id":100039001,"comment_content":"解决分布式事务这个没太明白,既然把三个服务分开了，为啥要在一个服务里去执行3个sql,这就相当于把这个功能放到一个服务里了？  感觉有些奇怪  ","like_count":1,"discussions":[{"author":{"id":2789067,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/8e/cb/1efcaf20.jpg","nickname":"Justway","note":"","ucode":"75966B5533C872","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584109,"discussion_content":"domain里面就不会随意暴露给别人","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660634140,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"重庆"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":249353,"user_name":"JustRunning","can_delete":false,"product_type":"c1","uid":1061157,"ip_address":"","ucode":"2F18DB26500AC4","user_header":"https://static001.geekbang.org/account/avatar/00/10/31/25/1a55bb52.jpg","comment_is_top":false,"comment_ctime":1600606289,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5895573585","product_id":100039001,"comment_content":"感觉官方定义翻译成&#39;为子系统中的一组接口提供统一的接口。Facade模式定义了一个更高级的接口，使子系统更易于使用&#39;，这样更好理解些~<br><br>","like_count":1},{"had_liked":false,"id":249051,"user_name":"握了个大蚂蚱","can_delete":false,"product_type":"c1","uid":1488356,"ip_address":"","ucode":"AD34AD4FA37371","user_header":"https://static001.geekbang.org/account/avatar/00/16/b5/e4/e6faf686.jpg","comment_is_top":false,"comment_ctime":1600415035,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5895382331","product_id":100039001,"comment_content":"适配器模式是加入中间层来1对1，<br>门面模式是通过多对1.<br>自己遇上的，我们有一个案件改派的功能，是在案件派给某人的情况下，改派给另一个人。但我不能给前端提供一个取消接口，一个派遣接口，除了性能，事务以外，直接提供一个改派接口还从业务上比较清晰。","like_count":1},{"had_liked":false,"id":244237,"user_name":"DFighting","can_delete":false,"product_type":"c1","uid":1233193,"ip_address":"","ucode":"F3BA2426FF8582","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/29/1b1234ed.jpg","comment_is_top":false,"comment_ctime":1598438749,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5893406045","product_id":100039001,"comment_content":"慢慢感觉好多设计模式其实原理并不负责，都是在多种不同场景下做到接口&#47;类的职责单一、抽象&#47;接口提高代码的聚合&#47;复用，多组合少继承降低模块间的耦合，提高必要模块间的聚合。当然我理解的肯定有很多不合适的地方，但随着代码量的不断积累，编码中不断就这里能不能用设计模式，其内在的思想是什么，慢慢就能组合多种设计模式，思想来设计出当前最优的代码了","like_count":1},{"had_liked":false,"id":229716,"user_name":"Lingjun","can_delete":false,"product_type":"c1","uid":1320730,"ip_address":"","ucode":"5CE38C19231D3B","user_header":"https://static001.geekbang.org/account/avatar/00/14/27/1a/77fb1e4e.jpg","comment_is_top":false,"comment_ctime":1593123628,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5888090924","product_id":100039001,"comment_content":"现在的bff层也算是对多个子系统或者微服务接口的一个门面吧","like_count":1,"discussions":[{"author":{"id":1058015,"avatar":"https://static001.geekbang.org/account/avatar/00/10/24/df/645f8087.jpg","nickname":"Yayu","note":"","ucode":"5E7842458D8229","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":368858,"discussion_content":"我最近才知道BFF层这个概念，我觉得就是专门拿出来一层来做facade封装。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618845585,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":211162,"user_name":"面向百度编程","can_delete":false,"product_type":"c1","uid":1732780,"ip_address":"","ucode":"8FE04A019D71D1","user_header":"https://static001.geekbang.org/account/avatar/00/1a/70/ac/83bc14c0.jpg","comment_is_top":false,"comment_ctime":1587907507,"is_pvip":false,"replies":[{"id":"78759","content":"前后端通信是走公网的 跟内网是有区别的","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1588042369,"ip_address":"","comment_id":211162,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5882874803","product_id":100039001,"comment_content":"解决性能问题不太理解，最终都是要调用三次接口,即使用一个门面对象封装了，但门面对象中还是需要调用三次接口，性能问题，实在想不出优在哪。性能能因为目标而转移么，想满足业务最终都是调用三次","like_count":2,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493210,"discussion_content":"前后端通信是走公网的 跟内网是有区别的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588042369,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1803858,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/86/52/b92dc111.jpg","nickname":"Tobias","note":"","ucode":"F3225639EDA193","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287587,"discussion_content":"公网是https，开销可能到s级别。 内网一般是RPC, 开销在ms级别，性能上差距明显。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593486319,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1541669,"avatar":"https://static001.geekbang.org/account/avatar/00/17/86/25/25ded6c3.jpg","nickname":"zhengyu.nie","note":"","ucode":"FFE0377D323E46","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":252166,"discussion_content":"前后端交互n次变成了一次，网络上有优化。另外chrome等浏览器并行处理数有限，对前端来说尽量少发起请求完成一个页面，是有性能优化的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588143930,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186359,"user_name":"Geek_41d472","can_delete":false,"product_type":"c1","uid":1247965,"ip_address":"","ucode":"DEC2B6329460CF","user_header":"https://static001.geekbang.org/account/avatar/00/13/0a/dd/88fa7b52.jpg","comment_is_top":false,"comment_ctime":1583829949,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5878797245","product_id":100039001,"comment_content":"看完感觉还是不知道说的啥,所以想起了老师经常说的一句话,Talk is cheap.Show me your code","like_count":1},{"had_liked":false,"id":184088,"user_name":"每天晒白牙","can_delete":false,"product_type":"c1","uid":1004698,"ip_address":"","ucode":"A1B102CD933DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","comment_is_top":false,"comment_ctime":1583220711,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"5878188007","product_id":100039001,"comment_content":"适配器模式主要解决的是解决接口不兼容问题<br>门面模式主要解决接口易用性问题，同时还能解决多个接口调用的性能问题还有分布式事务问题<br>对门面模式有个很深的印象是之前做第三方支付时，需要调用渠道的接口，然后在前面封装了一个接口，供交易系统调用，接口名字就带facade，就是用到了门面模式，把子系统给屏蔽起来，对使用方很友好","like_count":1},{"had_liked":false,"id":183912,"user_name":"Jian","can_delete":false,"product_type":"c1","uid":1107305,"ip_address":"","ucode":"17ED4919F22DEC","user_header":"https://static001.geekbang.org/account/avatar/00/10/e5/69/719ec5d0.jpg","comment_is_top":false,"comment_ctime":1583160889,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5878128185","product_id":100039001,"comment_content":" 每天除了打卡还有一个乐趣就是点大家的头像，哈哈哈哈","like_count":1},{"had_liked":false,"id":183661,"user_name":"test","can_delete":false,"product_type":"c1","uid":1065849,"ip_address":"","ucode":"9A4973E591DD12","user_header":"https://static001.geekbang.org/account/avatar/00/10/43/79/18073134.jpg","comment_is_top":false,"comment_ctime":1583110381,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5878077677","product_id":100039001,"comment_content":"适配器模式将原来不统一的每个接口统一，门面模式将一组接口统一暴露为同样一个接口","like_count":1},{"had_liked":false,"id":183644,"user_name":"javaadu","can_delete":false,"product_type":"c1","uid":1000519,"ip_address":"","ucode":"8C0B140F1C8992","user_header":"https://static001.geekbang.org/account/avatar/00/0f/44/47/3ddb94d0.jpg","comment_is_top":false,"comment_ctime":1583105513,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5878072809","product_id":100039001,"comment_content":"课堂讨论1<br>适配器模式是将几个功能相同但是接口定义不同的接口转换成接口定义一致的接口，主要解决接口设计不合理的情况。门面模式主要为了解决接口的粒度和易用性问题，将几个接口的事情整合在一个门面接口中实现","like_count":1},{"had_liked":false,"id":350910,"user_name":"谁都会变","can_delete":false,"product_type":"c1","uid":1195017,"ip_address":"","ucode":"9965748F7EBB57","user_header":"https://static001.geekbang.org/account/avatar/00/12/3c/09/b7f0eac6.jpg","comment_is_top":false,"comment_ctime":1657336871,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1657336871","product_id":100039001,"comment_content":"门面的是整合不同的接口，提供不同接口的统一入口。 还有我感觉门面模式优势是控制服务的访问","like_count":0},{"had_liked":false,"id":347081,"user_name":"Geek_7e0e83","can_delete":false,"product_type":"c1","uid":2142423,"ip_address":"","ucode":"554DEE2AAAE33C","user_header":"","comment_is_top":false,"comment_ctime":1653702783,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653702783","product_id":100039001,"comment_content":"适配器模式 主要是解决接口的兼容性问题，让本不能互相调用的接口实现，可以相互调用。<br>门面模式主要是接口的封装。解决接口的易用性问题。","like_count":0},{"had_liked":false,"id":343633,"user_name":"恬毅","can_delete":false,"product_type":"c1","uid":1015240,"ip_address":"","ucode":"914ED16F3BE714","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/c8/e4727683.jpg","comment_is_top":false,"comment_ctime":1650962195,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650962195","product_id":100039001,"comment_content":"适配器是对单个接口的加强和适配，门面模式是整个多个接口来解决问题","like_count":0},{"had_liked":false,"id":339175,"user_name":"剑八","can_delete":false,"product_type":"c1","uid":1297630,"ip_address":"","ucode":"0A09F41DB8A4E7","user_header":"https://static001.geekbang.org/account/avatar/00/13/cc/de/e28c01e1.jpg","comment_is_top":false,"comment_ctime":1647957693,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1647957693","product_id":100039001,"comment_content":"门面模式提供系统的易用性，实现上从架构层次看是属于和app或pc交互的一层，类似胶水层，用于协调不同后端服务最终组合成结果返回给调用者。<br>以性能的角度做接口聚合会带来维护性成本，比如一个页面需要3个调用，分别是请求商品，交易，以及支付的，如果门面把这3个接口搞在一起，后面维护就是一个恶梦。","like_count":0},{"had_liked":false,"id":336288,"user_name":"Geek_69090b","can_delete":false,"product_type":"c1","uid":2920655,"ip_address":"","ucode":"758C05A4865E4F","user_header":"","comment_is_top":false,"comment_ctime":1646050795,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1646050795","product_id":100039001,"comment_content":"以前系统组建是各个系统组建，如果登录系统要记住每个系统的用户名密码，后来开发了平台系统或者门户系统，统一登录，这个是不是可以认为一种门面模式呢？","like_count":0},{"had_liked":false,"id":324055,"user_name":"Z宇锤锤","can_delete":false,"product_type":"c1","uid":2188142,"ip_address":"","ucode":"7DB36E986A7A51","user_header":"https://static001.geekbang.org/account/avatar/00/21/63/6e/6b971571.jpg","comment_is_top":false,"comment_ctime":1638272802,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1638272802","product_id":100039001,"comment_content":"适配器接口是做的对接口的返回结果进行了封装，解决的是接口的不适配问题。<br>门面模式是将多个接口的调用内聚到了一个接口中，提升了接口使用的便捷性。","like_count":0},{"had_liked":false,"id":318368,"user_name":"千锤百炼领悟之极限","can_delete":false,"product_type":"c1","uid":1744257,"ip_address":"","ucode":"224B5CF2101716","user_header":"https://static001.geekbang.org/account/avatar/00/1a/9d/81/d748b7eb.jpg","comment_is_top":false,"comment_ctime":1635259803,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635259803","product_id":100039001,"comment_content":"适配器模式主要作用是适配接口，门面模式主要作用是易用及提高性能问题。","like_count":0},{"had_liked":false,"id":315492,"user_name":"freesocean","can_delete":false,"product_type":"c1","uid":1529210,"ip_address":"","ucode":"CAD4C80CF569D3","user_header":"https://static001.geekbang.org/account/avatar/00/17/55/7a/d44df1d6.jpg","comment_is_top":false,"comment_ctime":1633913751,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633913751","product_id":100039001,"comment_content":"这里将两个SQL放在一个事务中处理的前提是两个业务模型在一个数据库中，如果钱包和用户属于两个独立的微服务，那只能用分布式事务框架，或者事务补偿机制来处理。","like_count":0},{"had_liked":false,"id":315491,"user_name":"freesocean","can_delete":false,"product_type":"c1","uid":1529210,"ip_address":"","ucode":"CAD4C80CF569D3","user_header":"https://static001.geekbang.org/account/avatar/00/17/55/7a/d44df1d6.jpg","comment_is_top":false,"comment_ctime":1633913667,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633913667","product_id":100039001,"comment_content":"个人理解，适配器模式有点亡羊补牢的意味，而门面模式更像是锦上添花。","like_count":0},{"had_liked":false,"id":314692,"user_name":"剑八","can_delete":false,"product_type":"c1","uid":1297630,"ip_address":"","ucode":"0A09F41DB8A4E7","user_header":"https://static001.geekbang.org/account/avatar/00/13/cc/de/e28c01e1.jpg","comment_is_top":false,"comment_ctime":1633329971,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1633329971","product_id":100039001,"comment_content":"适配器做接口转换，解决一个原类和目标类间不匹配问题，所以是一对一的关系；门面整体能力，对外提供一个接口，所以是一对多的关系","like_count":0},{"had_liked":false,"id":305526,"user_name":"liupan","can_delete":false,"product_type":"c1","uid":1612910,"ip_address":"","ucode":"C6C7C48BCCAE12","user_header":"https://static001.geekbang.org/account/avatar/00/18/9c/6e/01b4d5d2.jpg","comment_is_top":false,"comment_ctime":1628032518,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628032518","product_id":100039001,"comment_content":"门面模式如果只是组合接口，会带来通讯时间变长的问题，一次通讯挂起的资源耗时变多了","like_count":0},{"had_liked":false,"id":304029,"user_name":"Bumblebee","can_delete":false,"product_type":"c1","uid":2051293,"ip_address":"","ucode":"B879C8A511D08D","user_header":"https://static001.geekbang.org/account/avatar/00/1f/4c/dd/c6035349.jpg","comment_is_top":false,"comment_ctime":1627198442,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1627198442","product_id":100039001,"comment_content":"课后题个人理解其实实现方式都差不多，就看你使用的出发点是什么是","like_count":0},{"had_liked":false,"id":290402,"user_name":"鸵鸟","can_delete":false,"product_type":"c1","uid":1042066,"ip_address":"","ucode":"92E710D05E4894","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e6/92/db9a2fcf.jpg","comment_is_top":false,"comment_ctime":1619526453,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619526453","product_id":100039001,"comment_content":"<br>适配器模式主要是为了新增一个适配层，从而达到屏蔽和隐藏多个底层实现的差异的目的，保持接口的稳定和clean；门面模式又叫做外观模式，主要是为了新增一个layer，为了实现保持底层驱动保持在一个合理的颗粒度里，将底层驱动实现的多个接口封装成业务需要的接口。","like_count":0},{"had_liked":false,"id":288006,"user_name":"Geek_86eac6","can_delete":false,"product_type":"c1","uid":1787022,"ip_address":"","ucode":"8C02E398CC6A35","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI4CBQHuLDWOdicOl1elTdSicqMyY1s5JDWXiaHsSk0VSWaVe0U6CTo701ZGz9h6MvibsAGKnvVq7xxFw/132","comment_is_top":false,"comment_ctime":1618273047,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618273047","product_id":100039001,"comment_content":"适配器是做接口转换，解决的是调用方和接口提供方对接口定义不一致的问题。门面模式是组合多个接口，解决接口粒度的问题","like_count":0},{"had_liked":false,"id":287532,"user_name":"小川","can_delete":false,"product_type":"c1","uid":1242573,"ip_address":"","ucode":"D462222DDBB978","user_header":"https://static001.geekbang.org/account/avatar/00/12/f5/cd/3890be04.jpg","comment_is_top":false,"comment_ctime":1618017360,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618017360","product_id":100039001,"comment_content":"适配器模式是利用多态特性解决接口兼容性问题。<br><br>门面模式也利用组合将多个接口封装到一个接口给外部调用解决的是接口易用性问题。","like_count":0},{"had_liked":false,"id":285379,"user_name":"Mirss.zhao","can_delete":false,"product_type":"c1","uid":1330632,"ip_address":"","ucode":"4A8F20B1A9D142","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTItudDLPfbZabQLjk1NE8NSibQocdRy88rerQdxHFKx4KzUyaEnSLPbszcKAaPX8NgG3sHbZXib41aQ/132","comment_is_top":false,"comment_ctime":1616762100,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616762100","product_id":100039001,"comment_content":"适配器模式是适配，解决的是兼容性问题<br>门面模式是组合，解决的是易用性问题","like_count":0},{"had_liked":false,"id":276507,"user_name":"不二先生","can_delete":false,"product_type":"c1","uid":1359635,"ip_address":"","ucode":"60D9800369CC33","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELEVMHiad4wERgib6x90kI81JZhzIvQeXMju6WohePAlfjWD3gHibapVNX88G4R29Ujcbiap1Bfz0Efmg/132","comment_is_top":false,"comment_ctime":1611977208,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1611977208","product_id":100039001,"comment_content":"适配器模式解决接口不能用的问题（不匹配问题），门面模式解决接口不好用的问题（难用问题）。","like_count":0},{"had_liked":false,"id":273439,"user_name":"Song╮承諾","can_delete":false,"product_type":"c1","uid":1590793,"ip_address":"","ucode":"50FDBFE5BDDD12","user_header":"https://static001.geekbang.org/account/avatar/00/18/46/09/c61257f6.jpg","comment_is_top":false,"comment_ctime":1610595534,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1610595534","product_id":100039001,"comment_content":"调用多接口可能导致数据不一致，门面接口把修改数据的操作汇总到一个接口统一处理，对吗","like_count":0},{"had_liked":false,"id":271144,"user_name":"yezj","can_delete":false,"product_type":"c1","uid":1832266,"ip_address":"","ucode":"38BD97834AC8F8","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIIP4P45S9HTzVH2SAH7u9UoKcjibh3smlme8Ieh4921diaaRJYcRcBWwq7XiaCySXO9lopRpDtzp7yA/132","comment_is_top":false,"comment_ctime":1609411763,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609411763","product_id":100039001,"comment_content":"一直在使用门面模式，只是不知道","like_count":0},{"had_liked":false,"id":271030,"user_name":"从远方过来","can_delete":false,"product_type":"c1","uid":1797551,"ip_address":"","ucode":"4791DBC7E05B1D","user_header":"","comment_is_top":false,"comment_ctime":1609377980,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609377980","product_id":100039001,"comment_content":"# coding: utf-8 <br><br><br>class CPU:<br>    def run(self):<br>        print(&quot;CPU开始工作&quot;)<br><br>    def stop(self):<br>        print(&quot;CPU停止工作&quot;) <br><br>class Disk:<br>    def run(self):<br>        print(&quot;硬盘开始工作&quot;)<br><br>    def stop(self):<br>        print(&quot;硬盘停止工作&quot;) <br><br>class Memory:<br>    def run(self):<br>        print(&quot;内存开始工作&quot;)<br><br>    def stop(self):<br>        print(&quot;内存停止工作&quot;) <br><br># Facade<br>class Computer():<br>    def __init__(self):<br>        self.cpu = CPU()<br>        self.disk = Disk()<br>        self.memory = Memory()<br><br>    def run(self):<br>        self.cpu.run()<br>        self.disk.run()<br>        self.memory.run()<br><br>    def stop(self):<br>        self.cpu.stop()<br>        self.disk.stop()<br>        self.memory.stop()<br><br><br>computer = Computer()<br>computer.run()<br>computer.stop()","like_count":0},{"had_liked":false,"id":269023,"user_name":"天下行走","can_delete":false,"product_type":"c1","uid":1462449,"ip_address":"","ucode":"73A4CD8BB91235","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLfrbMvhKQYhxP6ziaHaj4KUNRzst8u7BZsWUsazK8oTLXcNH6sDGITl6icy3IiaGFe9Iiae12LuTrF1g/132","comment_is_top":false,"comment_ctime":1608474743,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608474743","product_id":100039001,"comment_content":"门面接口使用会有以下问题，接口不满足单一职责原则，很明显有多个功能柔和的倾向。这样测试的时候就会写大量的单测用例，而且某个接口改动以后一定要算量跑回归测试。不知道理解的对不对","like_count":0},{"had_liked":false,"id":268237,"user_name":"少侠","can_delete":false,"product_type":"c1","uid":1511737,"ip_address":"","ucode":"DD4E38084DD80F","user_header":"https://static001.geekbang.org/account/avatar/00/17/11/39/66447afb.jpg","comment_is_top":false,"comment_ctime":1608110318,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608110318","product_id":100039001,"comment_content":"门面模式：主要解决接口膨胀，结合具体业务使之更具有易用性；<br>适配器模式：主要处理接口适配属于接口前期设计，预留下来的可扩展的入口","like_count":0},{"had_liked":false,"id":266595,"user_name":"JJ","can_delete":false,"product_type":"c1","uid":1079780,"ip_address":"","ucode":"85A77BB2262D58","user_header":"https://static001.geekbang.org/account/avatar/00/10/79/e4/4b3b9587.jpg","comment_is_top":false,"comment_ctime":1607409185,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607409185","product_id":100039001,"comment_content":"有个疑问，对于例子里的钱包和用户接口如果分属两个不同的服务(微服务架构)，如果通过门面模式进行事物控制呢，这个应该控制不了吧？","like_count":0},{"had_liked":false,"id":249355,"user_name":"JustRunning","can_delete":false,"product_type":"c1","uid":1061157,"ip_address":"","ucode":"2F18DB26500AC4","user_header":"https://static001.geekbang.org/account/avatar/00/10/31/25/1a55bb52.jpg","comment_is_top":false,"comment_ctime":1600606909,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600606909","product_id":100039001,"comment_content":"适配用于补救兼容处理为主，实现差异接口统一入口。<br>门面则偏向于从复杂或繁杂子系统接口中提炼出可复用或高通用的简化高层接口。","like_count":0},{"had_liked":false,"id":245136,"user_name":"Geek_4b6813","can_delete":false,"product_type":"c1","uid":1721895,"ip_address":"","ucode":"ED10C17BE368B4","user_header":"https://static001.geekbang.org/account/avatar/00/1a/46/27/eb318d12.jpg","comment_is_top":false,"comment_ctime":1598843447,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598843447","product_id":100039001,"comment_content":"门面模式可以参照 php laravel框架中Facade的实现，可以通过静态方法去调用被代理的对象方法。比起直接使用静态调用，增强了可测试性","like_count":0},{"had_liked":false,"id":242259,"user_name":"wind","can_delete":false,"product_type":"c1","uid":1507189,"ip_address":"","ucode":"5EC77AEB18130E","user_header":"https://static001.geekbang.org/account/avatar/00/16/ff/75/9c1b2ece.jpg","comment_is_top":false,"comment_ctime":1597650797,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597650797","product_id":100039001,"comment_content":"解决分布式事务问题这里没太懂，放到同个接口也还会是不同的数据库，还是有分布式事务问题吧","like_count":0},{"had_liked":false,"id":240309,"user_name":"汉江","can_delete":false,"product_type":"c1","uid":1788647,"ip_address":"","ucode":"01622D984B8F9B","user_header":"https://static001.geekbang.org/account/avatar/00/1b/4a/e7/6c16af5d.jpg","comment_is_top":false,"comment_ctime":1596857124,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1596857124","product_id":100039001,"comment_content":"我们是做网约车的 ，用户打开app 初始化页面的时候是调了好几个接口 导致打开很慢 加载时间比较长  这是设计不好的地方","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475990,"discussion_content":"恩恩 可以这么理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574838957,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1239823,"avatar":"https://static001.geekbang.org/account/avatar/00/12/eb/0f/67a7142a.jpg","nickname":"carol","note":"","ucode":"B0DD5C80414694","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":66621,"discussion_content":"我觉得MVC中Model层不是只有一堆bean类没有操作的。具体操作只是对调用者屏蔽了，model应该是数据源层，调用者想要数据只管向model要，只是model怎么拿这些数据调用者不管，这些数据model可能是从数据库拿的也可能是通过网络从服务器拿的。不知道理解对不对，欢迎同学们讨论指正。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575091214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1212732,"avatar":"https://static001.geekbang.org/account/avatar/00/12/81/3c/a01a60f3.jpg","nickname":"十二差一点","note":"","ucode":"76C07F9A641630","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1239823,"avatar":"https://static001.geekbang.org/account/avatar/00/12/eb/0f/67a7142a.jpg","nickname":"carol","note":"","ucode":"B0DD5C80414694","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":72760,"discussion_content":"我说的是移动端，不过和后端应该都一样。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575524831,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":66621,"ip_address":""},"score":72760,"extra":""}]}]},{"had_liked":false,"id":239920,"user_name":"落叶飞逝的恋","can_delete":false,"product_type":"c1","uid":1046429,"ip_address":"","ucode":"F9A95DB28BCF1E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/9d/be04b331.jpg","comment_is_top":false,"comment_ctime":1596693992,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596693992","product_id":100039001,"comment_content":"适配器是将一个接口适配成另一个接口<br>门面模式是将一堆接口通过封装手段变成一个接口","like_count":0},{"had_liked":false,"id":238729,"user_name":"Magic","can_delete":false,"product_type":"c1","uid":1272047,"ip_address":"","ucode":"FD9CEDAA419EB0","user_header":"https://static001.geekbang.org/account/avatar/00/13/68/ef/6264ca3d.jpg","comment_is_top":false,"comment_ctime":1596274994,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596274994","product_id":100039001,"comment_content":"适配器模式是针对单个接口的设计进行“重构”。门面模式是对多个接口进行组合","like_count":0},{"had_liked":false,"id":233215,"user_name":"被过去推开","can_delete":false,"product_type":"c1","uid":1276690,"ip_address":"","ucode":"8B4F34FE93FD5B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Cib5umA0W17N9pichI08pnrXAExdbyh7AVzH4nEhD6KN3FXuELk4LJJuqUPPD7xmIy9nq5Hjbgnzic7sVZG5BKiaUQ/132","comment_is_top":false,"comment_ctime":1594261713,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594261713","product_id":100039001,"comment_content":"前端人员会经常吐槽后端：为什么不把这些信息封装到一个接口里。此时后端人员心里也嘀咕：为什么一个接口不把所有的信息获取到？当接口粒度太细，一些不太熟悉业务的后端开发人员就不能整合好这些细粒度的接口，毕竟有些接口传入的参数和返回的数据都需要自己处理一下。","like_count":0,"discussions":[{"author":{"id":1087243,"avatar":"https://static001.geekbang.org/account/avatar/00/10/97/0b/a943bcb3.jpg","nickname":"zhou","note":"","ucode":"E1CE8575B3F106","race_medal":3,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":66475,"discussion_content":"我也倾向合成一个，感觉多个有点累赘了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575074715,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":230181,"user_name":"花花大脸猫","can_delete":false,"product_type":"c1","uid":1117318,"ip_address":"","ucode":"8ABDB3F7F4FB0F","user_header":"https://static001.geekbang.org/account/avatar/00/11/0c/86/8e52afb8.jpg","comment_is_top":false,"comment_ctime":1593304318,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1593304318","product_id":100039001,"comment_content":"1.适配器主要目的还是为了兼容，将接口进行向后兼容适配。本质上并没改变单个接口的职责，门面模式是为了提高接口的易用性，其接口职责与原先的接口定义有较大出入，主要目的是提高易用性，尽量暴露少的接口行为<br>2.这个还真有过，原先有一个支付模块，主要对接支付渠道的支付相关接口，开始未能考虑具体的业务场景以及抽象接口功能，导致后续每接入一个支付渠道，如果不存在的接口功能都需要在顶层渠道接口类中新增，原先已经接入的渠道接口因为也是实现的顶层接口为了适配也得实现一个空方法，久而久之，顶层渠道接口就爆炸了。。。。","like_count":0},{"had_liked":false,"id":223939,"user_name":"👽","can_delete":false,"product_type":"c1","uid":1274117,"ip_address":"","ucode":"D313AF941B412D","user_header":"https://static001.geekbang.org/account/avatar/00/13/71/05/db554eba.jpg","comment_is_top":false,"comment_ctime":1591236494,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591236494","product_id":100039001,"comment_content":"其实我觉得，门面模式，其实跟【对外只暴露接口】的思想一致<br>隐藏内部实现，一步操作调用方并不需要关心其内部实现，虽然内部调用了多个接口，但是对于客户端来说只是一个接口的事。","like_count":0},{"had_liked":false,"id":218452,"user_name":"吴小浅","can_delete":false,"product_type":"c1","uid":1186819,"ip_address":"","ucode":"36D1743C0A9C40","user_header":"https://static001.geekbang.org/account/avatar/00/12/1c/03/9178abe4.jpg","comment_is_top":false,"comment_ctime":1589803945,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589803945","product_id":100039001,"comment_content":"1、适配器模式是为了”兼容“效果，门面模式则是将调用粗粒度化，将一连串的调用加以归纳形成新的方法，方便使用；","like_count":0},{"had_liked":false,"id":214975,"user_name":"落尘kira","can_delete":false,"product_type":"c1","uid":1092169,"ip_address":"","ucode":"D203B519E43F85","user_header":"https://static001.geekbang.org/account/avatar/00/10/aa/49/51790edb.jpg","comment_is_top":false,"comment_ctime":1588861701,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588861701","product_id":100039001,"comment_content":"门面模式是工程中用的相当频繁的设计模式了，它的主要优点是封装性，但主要难点也是封装性；接口的粒度一直是个难度，尤其是在DDD开发时，这个真的需要经验的积累才能真正易用；因此在code review的时候要着重看一下门面模式使用的的好坏程度，着重于领域模型的设计，着重于模块化的设计","like_count":0},{"had_liked":false,"id":212536,"user_name":"zhengyu.nie","can_delete":false,"product_type":"c1","uid":1541669,"ip_address":"","ucode":"FFE0377D323E46","user_header":"https://static001.geekbang.org/account/avatar/00/17/86/25/25ded6c3.jpg","comment_is_top":false,"comment_ctime":1588144043,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1588144043","product_id":100039001,"comment_content":"主要在rpc或者http client端，节省前后端调用次数，封装。","like_count":0},{"had_liked":false,"id":206290,"user_name":"安静","can_delete":false,"product_type":"c1","uid":1212634,"ip_address":"","ucode":"7C4DB6D81A48EB","user_header":"https://static001.geekbang.org/account/avatar/00/12/80/da/9c0c458c.jpg","comment_is_top":false,"comment_ctime":1586835276,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586835276","product_id":100039001,"comment_content":"关于第三点分布式事务我有点不明白，设计一个包裹这二个操作的新接口，但是在微服务架构中，用户和钱包应该是两个服务。我们是在用户服务中设计一个门面模式接口还是在钱包服务设计一个门面接口？不管在哪个服务中设计一个这样的门面接口还是有问题，因为用户服务和钱包服务的数据库都是独立的？怎么运用sql的事务呢？多数据源的方式吗？","like_count":0},{"had_liked":false,"id":202482,"user_name":"听雨","can_delete":false,"product_type":"c1","uid":1254493,"ip_address":"","ucode":"252754F9FCFF0C","user_header":"https://static001.geekbang.org/account/avatar/00/13/24/5d/65e61dcb.jpg","comment_is_top":false,"comment_ctime":1585994701,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585994701","product_id":100039001,"comment_content":"让我想起了tomcat的RequestFacade类，servlet.service方法req和res参数其实是RequestFacade和ResponseFacade类型的，隐藏了内部的HttpServletRequest和HttpServletResponse对象，这是不是也用到了门面模式呢","like_count":0},{"had_liked":false,"id":201657,"user_name":"全炸攻城狮","can_delete":false,"product_type":"c1","uid":1315968,"ip_address":"","ucode":"DB437F9190575C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqZIqY4cs6YKNx0OqeMrbjLIicqiafLNtLYJTN2zTtVPlwXZ7qlJ7xrGQictk1xCq5pEsIyqnkiaCib4zQ/132","comment_is_top":false,"comment_ctime":1585817233,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585817233","product_id":100039001,"comment_content":"一个是convert，改造和转换<br>一个是wrap，适应和整合","like_count":0},{"had_liked":false,"id":196944,"user_name":"谷雨","can_delete":false,"product_type":"c1","uid":1225827,"ip_address":"","ucode":"E8566AD0E2A521","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKkkZBpiaOo4dGUuOXnRusBwcYCcwPTU8Pn41zbKh9py4Nwcf1rtc8A6yH5AtVVbkv8iaoS6hFgKevg/132","comment_is_top":false,"comment_ctime":1585324474,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585324474","product_id":100039001,"comment_content":"这边讲的是服务端，接口聚合。对于前端而言，前端现在一个页面也是由多个模块组成。每个模块有自己的数据请求。从前端的角度来让性能更好，一种解法就是首屏的数据，直接服务端吐出。","like_count":0},{"had_liked":false,"id":195534,"user_name":"不能忍的地精","can_delete":false,"product_type":"c1","uid":1754913,"ip_address":"","ucode":"66A921C0BC8102","user_header":"","comment_is_top":false,"comment_ctime":1585194296,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585194296","product_id":100039001,"comment_content":"适配器模式是为了解决接口不兼容的问题,是为了改善接口设计缺陷<br>外观模式是设计了一部分冗余的接口,对一系列接口进行封装和聚合,达到性能提升,接口复用,易用和分布式事务解决的问题","like_count":0},{"had_liked":false,"id":194674,"user_name":"梦倚栏杆","can_delete":false,"product_type":"c1","uid":1095857,"ip_address":"","ucode":"BDEB97F2822445","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/bvj76PmeUvW8kokyu91IZWuRATKmabibDWbzAj2TajeEic7WvKCJOLaOh6jibEmdQ36EO3sBUZ0HibAiapsrZo64U8w/132","comment_is_top":false,"comment_ctime":1585096943,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585096943","product_id":100039001,"comment_content":"门面模式就是打包，俄罗斯套娃。","like_count":0},{"had_liked":false,"id":189674,"user_name":"Remember九离","can_delete":false,"product_type":"c1","uid":1237327,"ip_address":"","ucode":"97EE6E6344689F","user_header":"https://static001.geekbang.org/account/avatar/00/12/e1/4f/00476b4c.jpg","comment_is_top":false,"comment_ctime":1584540028,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584540028","product_id":100039001,"comment_content":"基于PHP实现的简单门面模式:https:&#47;&#47;github.com&#47;wuqinqiang&#47;php-design-patterns&#47;tree&#47;master&#47;src&#47;object&#47;patterns&#47;Facade","like_count":0},{"had_liked":false,"id":188810,"user_name":"eason2017","can_delete":false,"product_type":"c1","uid":1009422,"ip_address":"","ucode":"E070BA624FA490","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/0e/c77ad9b1.jpg","comment_is_top":false,"comment_ctime":1584419530,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584419530","product_id":100039001,"comment_content":"总感觉这个门面模式在多接口被封装成一个接口的作用和网关接口api的管理有异曲同工之妙！","like_count":0},{"had_liked":false,"id":188299,"user_name":"Tom.G","can_delete":false,"product_type":"c1","uid":1206034,"ip_address":"","ucode":"7929B45C1A51F8","user_header":"https://static001.geekbang.org/account/avatar/00/12/67/12/5c6eb568.jpg","comment_is_top":false,"comment_ctime":1584337116,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584337116","product_id":100039001,"comment_content":"门面模式是子系统的封装，提供一个默认的实现，方便系统调用者的使用；系统调用者也可以穿过门面层，直接调用子系统的对象实现更加复杂的功能<br>适配器模式是系统已设计好了，是一种事后的补偿机制","like_count":0},{"had_liked":false,"id":187773,"user_name":"李小四","can_delete":false,"product_type":"c1","uid":1112747,"ip_address":"","ucode":"2A766BE16B276B","user_header":"https://static001.geekbang.org/account/avatar/00/10/fa/ab/0d39e745.jpg","comment_is_top":false,"comment_ctime":1584239042,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584239042","product_id":100039001,"comment_content":"设计模式_52:<br># 作业<br>1. 适配器结局的是不能用的问题，门面模式(多数情况)解决的是不好用的问题。<br>2. 不合理的接口遇见过很多，比如设计的时候不考虑抽象，写了非常多类似的方法，最底层的实现每次都重写一次。<br><br># 感想<br>之前没有“可复用性”和“易用性”这样的概念，但是也会考虑同样的事情，比如一个业务会涉及到几个通用性的接口，那可能就是1+n个接口，这1个接口是本次业务的(门面)，n是新增的通用接口，这样后面的业务接口大概率可以组合这些通用的接口，而且也方便统一的监控，今天知道了，原来这叫门面模式。","like_count":0},{"had_liked":false,"id":187660,"user_name":"辣么大","can_delete":false,"product_type":"c1","uid":1396951,"ip_address":"","ucode":"AB308B6DCA0108","user_header":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","comment_is_top":false,"comment_ctime":1584187245,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1584187245","product_id":100039001,"comment_content":"何时使用门面（外观）模式<br>设计初期，使得几个层隔离<br>开发阶段：系统需要重构演化，外观模式可以提供简单的接口，减少彼此依赖<br>遗留大型系统：新系统与Facade对象交互，Facade与旧系统交互。<br>非要看类图的话，请看这里：https:&#47;&#47;github.com&#47;gdhucoder&#47;DesignPattern&#47;blob&#47;master&#47;012_FacadePattern.md","like_count":0},{"had_liked":false,"id":187616,"user_name":"Geek_339bf3","can_delete":false,"product_type":"c1","uid":1901438,"ip_address":"","ucode":"6DD84D487A4BDB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJrj3mbL4JWp4ssyiaUW5T5avPXI899ibF2icKhC74OoqDSusz0GUmwQJm1sUmiaGclBtFSpmJXiaztYBg/132","comment_is_top":false,"comment_ctime":1584172722,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584172722","product_id":100039001,"comment_content":"适配器模式是解决单个接口的不匹配问题。<br>门面模式是解决多个接口的不适用问题。","like_count":0},{"had_liked":false,"id":186669,"user_name":"Heaven","can_delete":false,"product_type":"c1","uid":1694207,"ip_address":"","ucode":"FA33FBCC66C911","user_header":"https://static001.geekbang.org/account/avatar/00/19/d9/ff/b23018a6.jpg","comment_is_top":false,"comment_ctime":1583899219,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583899219","product_id":100039001,"comment_content":"1,这两者没有直接的关系,一个是将原本不适用的接口替换为了适用的接口,一个是将多个小粒度的接口组合起来暴露出一个完整的接口<br>2.我刚入行的时候,写过一个图转换的框架,从图数据库拿取数据,转换为可解析的图,但是接口写的特别烂,基本上对于每一种图都提供了一个接口.虽然能用,但是没有任何复用性可言,现在想想,也是一段黑历史啊","like_count":0},{"had_liked":false,"id":186642,"user_name":"传说中的成大大","can_delete":false,"product_type":"c1","uid":1236766,"ip_address":"","ucode":"103543D6E706BF","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","comment_is_top":false,"comment_ctime":1583894567,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583894567","product_id":100039001,"comment_content":"今天的课程内容有点短啊 <br>关于思考题 <br>1. 适配器模式通过继承或者组合方式 让接口变得好用， 而门面模式 通过把多个接口整合成一个新的接口 来解决需要多次调用不同接口的问题","like_count":0},{"had_liked":false,"id":185907,"user_name":"不似旧日","can_delete":false,"product_type":"c1","uid":1161271,"ip_address":"","ucode":"DF4C5E3AB9570C","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/37/98991aeb.jpg","comment_is_top":false,"comment_ctime":1583723215,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583723215","product_id":100039001,"comment_content":"1.  门面模式为子系统提供一组统一的接口，定义一组高层接口让子系统更易用。 可以理解为一个接口实现多个小的接口的调用。<br><br>2. 主要在接口设计方面使用。 ","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476016,"discussion_content":"存储本身有自己的逻辑在那里面，不能单独的看做是数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574833941,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1022247,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/99/27/47aa9dea.jpg","nickname":"阿卡牛","note":"","ucode":"0BC43A904C3199","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":63611,"discussion_content":"是的，后来我也想明白了，存储和计算分离说的是最终的效果。但做好存储或计算也是要有自己的数据和操作的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574899479,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184719,"user_name":"Wh1","can_delete":false,"product_type":"c1","uid":1282715,"ip_address":"","ucode":"6D28506B99A285","user_header":"https://static001.geekbang.org/account/avatar/00/13/92/9b/65f98192.jpg","comment_is_top":false,"comment_ctime":1583390996,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583390996","product_id":100039001,"comment_content":"门面模式是将多个接口封装为一个接口，以提高易用性和解决多接口调用的问题。那么Executors类中仅封装了线程池的创建接口（例如ThreadPoolExecutor），对外提供更加方便的接口创建线程池。这种能不能算门面模式？","like_count":0},{"had_liked":false,"id":184150,"user_name":"杨杰","can_delete":false,"product_type":"c1","uid":1131823,"ip_address":"","ucode":"74817EA9499843","user_header":"https://static001.geekbang.org/account/avatar/00/11/45/2f/b0b0dd74.jpg","comment_is_top":false,"comment_ctime":1583238679,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583238679","product_id":100039001,"comment_content":"其实吧，我想吐槽的是各种查询接口。就拿用户来说吧，可以按照手机号码、可以按照邮箱或者其他方式查询，有可能要查询已经停用的或未停用的。在复杂的查询场景下，很多时候不得不单独写查询接口。有一种方案是写一个相对通用的queryparam，通过传入不同的查询方式来实现不同的查询方式。。不知道这样是不是好的实践。","like_count":0},{"had_liked":false,"id":184098,"user_name":"程序员小跃","can_delete":false,"product_type":"c1","uid":1015483,"ip_address":"","ucode":"25BB96E0791A60","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7e/bb/947c329a.jpg","comment_is_top":false,"comment_ctime":1583222094,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1583222094","product_id":100039001,"comment_content":"适配器模式将接口间貌似不能对接东西，通过适配完美地对接在一起，实现从上到下连贯；<br><br>门面模式，将多个独立的、又可以先后完成的事项统一打包起来，以此达到连贯的目的；","like_count":0},{"had_liked":false,"id":183926,"user_name":"平风造雨","can_delete":false,"product_type":"c1","uid":1014349,"ip_address":"","ucode":"F9EE4704F31E22","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7a/4d/b0228a1a.jpg","comment_is_top":false,"comment_ctime":1583162984,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1583162984","product_id":100039001,"comment_content":"适配器模式更多的解决原接口的定义不适合在当前业务中满足统一抽象的需求而产生的，门面模式更多的是为了解决调用方简单易用，把细粒度的多个内部接口重新编排成粗粒度的接口。","like_count":0},{"had_liked":false,"id":183906,"user_name":"前端西瓜哥","can_delete":false,"product_type":"c1","uid":1248576,"ip_address":"","ucode":"150130C34CD1C1","user_header":"https://static001.geekbang.org/account/avatar/00/13/0d/40/f70e5653.jpg","comment_is_top":false,"comment_ctime":1583159935,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583159935","product_id":100039001,"comment_content":"适配器模式和门面模式的区别：适配器模式用于事后的补救，是对设计失败的接口进行的补救的方法；门面模式是将细粒度的接口进行组合，封装细节，提高调用者调用接口的体验。","like_count":0},{"had_liked":false,"id":183892,"user_name":"一壶浊酒","can_delete":false,"product_type":"c1","uid":1145530,"ip_address":"","ucode":"5D90F8F8121BBE","user_header":"https://static001.geekbang.org/account/avatar/00/11/7a/ba/8545f2d7.jpg","comment_is_top":false,"comment_ctime":1583156380,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1583156380","product_id":100039001,"comment_content":"问题1：门面模式主要是进行封装，给上层提供必要易用的接口，而适配器模式主要是为了弥补兼容性问题，个人认为门面模式主要着重与设计阶段，而适配器模式主要着重于事后的一个补偿重构阶段，一个是为了上层业务进行适配，一个是为了弥补缺陷而进行适配。<br>问题2：仔细想想之前自己写的接口有些与项目过于冗余，只考虑了完成任务，现在回想一下有些接口都是做了一些重复劳动，需要反思","like_count":0},{"had_liked":false,"id":183794,"user_name":"Ken张云忠","can_delete":false,"product_type":"c1","uid":1134288,"ip_address":"","ucode":"D0BAC9FC17DE2B","user_header":"https://static001.geekbang.org/account/avatar/00/11/4e/d0/d8a5f720.jpg","comment_is_top":false,"comment_ctime":1583135723,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583135723","product_id":100039001,"comment_content":"适配器模式和门面模式的区别:<br>适配器模式为了使不兼容的接口变得兼容,使不能用的接口变得可用.<br>门面模式主要为了提升接口的易用性,使能用的接口变得更加好用.","like_count":0},{"had_liked":false,"id":183745,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1583125807,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583125807","product_id":100039001,"comment_content":"1.门面模式应该算是适配器模式的一个子集。<br><br>2.我们的项目dao层即是rpc接口，里面即包含db操作的方法，也包括业务方法，同时全部是public，即使它只在本项目使用。使用放的感受就是打个.三四十个方法，都不知道用啥，找个功能费劲。然后insert方法内嵌套业务代码，导致一开始用被坑，后面还得自己再拆个干净的insert。使用方感受就是，每个方法都得看源码，接口是骗人的，用他接口不如自己写舒坦。","like_count":0},{"had_liked":false,"id":183705,"user_name":"pines","can_delete":false,"product_type":"c1","uid":1200708,"ip_address":"","ucode":"7B925605B36B4E","user_header":"https://static001.geekbang.org/account/avatar/00/12/52/44/de7f2b98.jpg","comment_is_top":false,"comment_ctime":1583118528,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583118528","product_id":100039001,"comment_content":"1.适配器模式与门面模式的共同点都需要二次封装，隐藏内部细节。不同点为适配器是为了统一格式，门面是为了简单易用。<br>2.我自己就开发过恶心的接口，最近做的这个项目就是考虑了很多复用性的问题，api设计的比较松散，一个注册登录的过程需要前端调用三次接口。接口是通用了，但是感觉前端人员非常不高兴。。。使用起来不太方便，且在前端需要的业务逻辑也更多了。这种情况还是很有必要使用门面进行包装一下。","like_count":0},{"had_liked":false,"id":183694,"user_name":"守拙","can_delete":false,"product_type":"c1","uid":1738326,"ip_address":"","ucode":"F594B2DA3F6D4F","user_header":"https://static001.geekbang.org/account/avatar/00/1a/86/56/509535da.jpg","comment_is_top":false,"comment_ctime":1583117567,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583117567","product_id":100039001,"comment_content":"课堂讨论<br><br>1. 适配器模式和门面模式的共同点是，将不好用的接口适配成好用的接口。你可以试着总结一下它们的区别吗？<br><br>   Adapter Pattern 与 Facade Pattern 作为结构型设计模式, 两者的内核都是协调类与类之间的关系. Adapter倾向于挽救设计缺陷, Facade倾向于封装实现及接口隔离.","like_count":0},{"had_liked":false,"id":183669,"user_name":"，","can_delete":false,"product_type":"c1","uid":1701867,"ip_address":"","ucode":"A5543C8DFEB198","user_header":"https://static001.geekbang.org/account/avatar/00/19/f7/eb/e7127bb8.jpg","comment_is_top":false,"comment_ctime":1583113265,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1583113265","product_id":100039001,"comment_content":"课后题:<br>1.应用场景不一样,适配器模式用于新老系统的对接做一个&quot;适配&quot;,或者对接不同的外部模块时做一个&quot;适配&quot;,门面模式则用于包装一个好用的接口,或者隔离复杂度<br>例如:在mybatis中,mybatis对接不同的日志模块使用到了适配器模式,在静态代码块中依次查找不同的日志模块,比如log4j,logback,一旦发现依赖中存在某个模块,就停止查找,将日志模块的日志级别与mybatis日志级别做适配<br>     mybatis的反射模块使用到了门面模式,它的内部有很多组件,但是mybatis提供给其他模块使用的只有一个,正如专栏中所说的提供了一个&quot;好用&quot;的接口,同时隔离了复杂度","like_count":0},{"had_liked":false,"id":183645,"user_name":"峰","can_delete":false,"product_type":"c1","uid":1056019,"ip_address":"","ucode":"C53CB64E8E7D19","user_header":"https://static001.geekbang.org/account/avatar/00/10/1d/13/31ea1b0b.jpg","comment_is_top":false,"comment_ctime":1583105740,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1583105740","product_id":100039001,"comment_content":"适配器模式是去根据现有接口适配新的接口，门面是根据现有的接口组装更易用的接口。","like_count":0},{"had_liked":false,"id":183641,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1583103785,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583103785","product_id":100039001,"comment_content":"我理解路由分发模块也是门面模式的一种体现，多个不同的系统都来调用路由分发模块提供的统一的rpc接口，虽然做了集中调度，对外屏蔽了细节，减少了接口数，但是路由分发的逻辑变得混乱复杂，扩展性很差，要接受不同来源的调用，各种逻辑混在一起，请问老师这种情况如何处理？","like_count":0},{"had_liked":false,"id":183639,"user_name":"高源","can_delete":false,"product_type":"c1","uid":1048887,"ip_address":"","ucode":"751B41FD38EF7D","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/37/12e4c9c9.jpg","comment_is_top":false,"comment_ctime":1583102092,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1583102092","product_id":100039001,"comment_content":"适配器适合在原来不兼容接口上使用，门面模式适合将接口整合成需要使用的接口","like_count":0,"discussions":[{"author":{"id":1396951,"avatar":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","nickname":"辣么大","note":"","ucode":"AB308B6DCA0108","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":204519,"discussion_content":"好漂亮的布偶！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584187018,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183633,"user_name":"Jimbol","can_delete":false,"product_type":"c1","uid":1178008,"ip_address":"","ucode":"8D9190B3B3E08B","user_header":"https://static001.geekbang.org/account/avatar/00/11/f9/98/95b13446.jpg","comment_is_top":false,"comment_ctime":1583082554,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583082554","product_id":100039001,"comment_content":"两者目标都是为使用方提供简单的接口，目标虽然基本一致，可是使用场景却大不相同<br>适配器模式的目的是把几个功能类似但是使用方式有区别的接口进行统一化，对外暴露单一简单的使用方式；门面模式是把一个业务逻辑需要调用多个接口的过程进行封装，让复杂逻辑对使用方透明","like_count":0}]}