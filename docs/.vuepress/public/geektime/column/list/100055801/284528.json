{"id":284528,"title":"结束语｜Vim 森林探秘，一切才刚刚开始","content":"<p>你好，我是吴咏炜。</p><p>我们的课程到这里就结束了，而你的学习旅程，到这儿只能算是一个小小的休息站。</p><h2>学习的度</h2><p>对于一个持续发展了 30 年的编辑器，我们显然不可能在一门短小精悍的课程里完整地覆盖它的所有功能。不过，我从来就没打算介绍 Vim 的一切。如果把 Vim 比作一片大森林，我只是一个导游，为你制定了一条旅游路线，带你绕过沼泽地和陷阱，攀上了几座峰顶，让你能够领略到若干美景。如果想在林中长久地居住下去，熟稔各条秘径，你仍然要靠自己去探索。</p><p>Vim 的作者 Bram 这么告诫人们不要走到两个极端上去 [Moolenaar 2007]：</p><blockquote>\n<p>你需要马上把文本准备好。所以没有时间读文档或学习新命令。——<strong>你会一直使用原始的命令。</strong></p>\n<p>你想学编辑器提供的所有功能，并在任何时候都能使用最高效的命令。——<strong>你会浪费很多时间学习很多你永远不会用到的东西。</strong></p>\n</blockquote><p>前者的问题很明显，如果你不学习，那你只能使用初级的功能，所以效率一定很低。后者的问题可能不那么明显了：实际上，除了多花时间之外，你很难培养出良好的习惯，形成“肌肉记忆”。而这，恰恰是高效工作的关键之一——不需要想，就知道怎么做，从而可以把头脑和精力投入到更重要的问题上。</p><p>在这个课程里，我也只是告诉你基本的原则和技巧，并培养你基本的编辑习惯。回头，在遇到实际问题时，你会需要使用搜索引擎、讨论组等工具来找到问题的答案。</p><!-- [[[read_end]]] --><h2>学习、积累和分享</h2><p>我学习 Vim，原本是处于 Linux 下开发的需要，而后慢慢成为一种习惯。回过头来看，Vim 就和 Unix 一样，老而弥坚，经久不衰，不管时代怎样变化，它们却一直没有过时。而同时代我用过的其他 Windows 上的编辑器，如 EditPlus 和 UltraEdit，现在虽然都还在，但是应该已经很少有人提起了吧……</p><p>经过几年的学习和使用，我居然也就可以给别人分享我的经验了。我先是在 IBM developerWorks 上发了一系列的三篇 Vim 文章，后面又在 SHLUG（Shanghai Linux User Group）的活动中分享了我的 Vim 使用经验。事后，我在网上看到别人觉得我这个分享做得最好，也是非常的欣慰。</p><p>时间快进到今年的年初，我做完了我在极客时间的第一门课程《现代 C++ 实战 30 讲》。当编辑问我还有什么其他可分享的课程时，我立刻想到了 Vim。于是，就有了这个课程。我很喜欢知识分享的过程，因为准备的过程同时也是自我梳理和刷新的过程，毕竟要给别人讲，就不能像自己用的时候那样不求甚解了。让我没预料到的是，在课程中我还向某些积极的同学学了一两手（为了不让你们太骄傲，我就不点名了😉）。知识分享真是一种非常好的活动，于人于己都非常有利。建议大家在工作中也可以多多考虑😇。它唯一的缺点，就是会让自己变得非常忙碌、周末没有休息时间而已😂。</p><h2>高效编辑的诀窍</h2><p>现在回到 Vim。我们来考虑一下这个“元”问题：<strong>怎么样可以进行高效的编辑？</strong></p><p>事实上，Bram 早就回答过这个问题了。这跟一般的效率改进计划没有本质的区别。我们要做的是：</p><ol>\n<li>发现低效的根源</li>\n<li>找出更快的方法</li>\n<li>形成新的习惯</li>\n</ol><p>Vim 的功能也是围绕着这样的模式开发出来的。</p><p>比如，我们要找出当前文件中某个符号的使用，在任何编辑器里，都会提供一个搜索的功能。但每次都使用搜索，实际上也是有点麻烦的。Vim 里的 <code>*</code> 搜索键和搜索加亮，这两个你目前应当已经习以为常的功能，就是为了解决这种低效而诞生的。而对你，现在更快的方法，就是在配置中启用搜索加亮（目前我们的基本配置里已经启用），并使用 <code>*</code> 来搜索光标下的单词。</p><p>又比如，我们有一个非常长的函数名，打起来又费力又容易出错。这时候，我们需要找出更快的方法，那就是自动完成。Vim 内置的改进方法是 <code>&lt;C-N&gt;</code> 和 <code>&lt;C-P&gt;</code> 命令。而我们学到现在的就该知道，YCM 还提供了更现代的模糊完成引擎。用好内置命令，或安装合适的插件，就是我们需要形成的新习惯。</p><p>说到这儿，你也看到了，不仅我们的课程不是高效编辑的终点，而且就连 Vim 也不是。Vim 一直在发展，但有人嫌 Vim 发展得不够激进，另外搞了 Neovim。我们这个课程完全没有讨论 Neovim，主要是不想在一个已经很复杂的课题上再增加复杂性（同时也是因为 Neovim 虽然看起来势头不错，但远没到可以尘埃落定、一定会在将来替代 Vim 的程度，再加上两者并不完全兼容……反过来，Neovim 倒是刺激 Vim 更快地添加新功能了）。</p><p>抛开 Neovim 不谈，我们还有插件：正是这些辛勤的插件作者，才使得 Vim 真正更为强大，成为一个特别高效的编辑器。就像上面讨论的，有了 YCM，我们找到了一个比 Vim 内置功能更加简单、直观、高效的方法。我们也应该去用好这样的新工具，提升自己的工作效率。</p><p><strong>要提高自己的编辑效率，需要时时刻刻注意自己有哪儿效率特别低，出现了不必要的重复，然后找到更好的办法来改进，并确保自己形成新的习惯。</strong></p><p>这个新的习惯是什么呢？可以是掌握了 Vim 里的一个之前不熟悉的功能，可以是用上了一个新的插件，也可以是……为 Vim 社区贡献一个新的插件！</p><p>这也恰恰是我在开篇词里提到的“懒惰”。所谓懒惰，就是我们要不让自己做低效的重复工作。而要不做低效的重复工作，我们就需要开动自己的脑子，监测自己的工作方式，找出问题点，予以改进，并坚持下去。懒惰的手段就是高效；反过来说也可以，高效的目的就是懒惰。</p><p><img src=\"https://static001.geekbang.org/resource/image/9a/6d/9acfda8886d48783a2ce44992cf9c06d.jpg?wh=1920*1239\" alt=\"\"></p><p>期待你在 Vim 森林里找出自己的“传送门”，能够慵懒地一抬腿，就飞速到达任何自己想去的地方。</p><p>我们后会有期！</p><p>《Vim 实用技巧必知必会》课程结束了，这里有一份<a href=\"https://jinshuju.net/f/vUVK4d\">毕业问卷</a>，题目不多，希望你能花两分钟填一下。十分期待能听到你说一说，你对这个课程的想法和建议。<br>\n<a href=\"https://jinshuju.net/f/vUVK4d\"><img src=\"https://static001.geekbang.org/resource/image/71/24/71b5fb4e0b3db4623c0686b6a0715e24.jpg?wh=1142*801\" alt=\"\"></a></p><h2>参考资料</h2><p>作为写作的基本规矩，我最后列一下我参考过的资料（插件和之前文中直接给出的链接则不再重复）。希望它们也能帮到你，让你在下面的旅途中再上一层楼：</p><p>Allen, Leo. 2016. <a href=\"https://blog.makersacademy.com/why-vim-is-so-much-better-than-atom-4e8253e6f605\">“Why Vim is so much better than Atom”</a>.</p><p>Arthur, Barry. 2014. <a href=\"http://of-vim-and-vigor.blogspot.com/2014/08/learning-tool-of-vim.html\">“Learning the tool of Vim”</a>.</p><p>Bringhurst, Robert. 2012. <em>The Elements of Typographic Style</em>, 4th ed. Hartley &amp; Marks Publishers.</p><p>Irwin, Conrad. 2013. <a href=\"https://cirw.in/blog/bracketed-paste\">“Bracketed paste mode”</a>.</p><p>Kochkov, Anton. 2019. <a href=\"https://gist.github.com/XVilka/8346728\">“Terminal Colors”</a>.</p><p>Leonard, Andrew. 2000. <a href=\"https://www.salon.com/test/2000/05/16/chapter_2_part_one/\">“BSD Unix: Power to the people, from the code”</a>.</p><p>Moolenaar, Bram. 2000. <a href=\"https://moolenaar.net/vimstory.pdf\">“The continuing history of Vim”</a>.</p><p>Moolenaar, Bram. 2002. <a href=\"http://www.free-soft.org/FSM/english/issue01/vim.html\">“Vim, an open-source text editor”</a>.</p><p>Moolenaar, Bram. 2007. <a href=\"https://moolenaar.net/habits_2007.pdf\">“7 habits for effective text editing 2.0”</a>. <a href=\"https://www.youtube.com/watch?v=p6K4iIMlouI\">YouTube video</a>.</p><p>Moolenaar, Bram. 2018. <a href=\"https://www.moolenaar.net/Vim_Krakow_2018.pdf\">“Vim: Recent developments”</a>.</p><p>Neil, Drew. 2015. <em>Practical Vim</em>, 2nd ed. O’Reilly. 中文版：杨源、车文隆译《Vim 实用技巧》，人民邮电出版社，2014（第一版），2016（第二版）。</p><p>Neil, Drew. 2018. <em>Modern Vim: Craft your development Environment with Vim 8 and Neovim</em>. Pragmatic Bookshelf. 中文版：死月译《精通 Vim：用 Vim 8 和 Neovim 实现高效开发》，电子工业出版社，2020。</p><p>Ornbo, George. 2019. <a href=\"https://shapeshed.com/vim-netrw/\">“Vim: you don’t need NERDtree or (maybe) netrw”</a>.</p><p>Osipov, Ruslan. 2018. <em>Mastering Vim</em>. Packt. 中文版：王文涛译《Vim 8 文本处理实战》，人民邮电出版社，2020。</p><p>Robbins, Arnold, Elbert Hannah, and Linda Lamb. 2008. <em>Learning the vi and Vim Editors</em>, 7th ed. O’Reilly.</p><p>Salus, Peter H. 1994. <em>A Quarter Century of UNIX</em>. Addison-Wesley.</p><p>Schneider, Peter A. 2018. <a href=\"https://stackoverflow.com/a/50654284/816999\">Answer to “How do I disable the weird characters from ‘bracketed paste mode’ on the Mac OS X default terminal?”</a>.</p><p>Stack Overflow. 2015. <a href=\"https://insights.stackoverflow.com/survey/2015#tech-editor\">“2015 developer survey”, section “Technology &gt; Text editor”</a>.</p><p>Stack Overflow. 2019. <a href=\"https://insights.stackoverflow.com/survey/2019#development-environments-and-tools\">“Developer survey results 2019”, section “Technology &gt; Development environments and tools”</a>.</p><p>Target, Sinclair. 2018. <a href=\"https://twobithistory.org/2018/08/05/where-vim-came-from.html\">“Where Vim came from”</a>.</p><p>Vance, Ashlee. 2003. <a href=\"https://www.theregister.co.uk/2003/09/11/bill_joys_greatest_gift\">“Bill Joy’s greatest gift to man – the vi editor”</a>.</p><p><a href=\"https://www.vim.org/\">Vim Online</a>.</p><p>Wikipedia. <a href=\"https://en.wikipedia.org/wiki/Berkeley_Software_Distribution\">“Berkeley Software Distribution”</a>.</p><p>Wikipedia. <a href=\"https://en.wikipedia.org/wiki/Bill_Joy\">“Bill Joy”</a>.</p><p>Wikipedia. <a href=\"https://en.wikipedia.org/wiki/Ex_(text_editor)\">“ex (text editor)”</a>.</p><p>Wikipedia. <a href=\"https://en.wikipedia.org/wiki/Version_6_Unix\">“Version 6 Unix”</a>.</p><p>Wikipedia. <a href=\"https://en.wikipedia.org/wiki/Vi\">“vi”</a>.</p><p>Wikipedia. <a href=\"https://en.wikipedia.org/wiki/Vim_(text_editor)\">“Vim”</a>.</p><p>Wikipedia. <a href=\"https://en.wikipedia.org/wiki/Visual_editor\">“Visual editor”</a>.</p>","neighbors":{"left":{"article_title":"拓展5 | 其他插件和技巧：吴咏炜的箱底私藏","id":282412},"right":{"article_title":"结课测试｜这些 Vim 的知识你都掌握了吗？","id":295597}},"comments":[{"had_liked":false,"id":247605,"user_name":"我来也","can_delete":false,"product_type":"c1","uid":1205253,"ip_address":"","ucode":"773D6104F56767","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","comment_is_top":false,"comment_ctime":1599754441,"is_pvip":false,"replies":[{"id":"90925","content":"谢谢。<br><br>你几乎每讲都是第一个学习完，还能提出很多好建议——厉害！","user_name":"作者回复","user_name_real":"吴咏炜","uid":"1645639","ctime":1599786405,"ip_address":"","comment_id":247605,"utype":1}],"discussion_count":2,"race_medal":0,"score":"23074590921","product_id":100055801,"comment_content":"老师辛苦了！<br><br>本专栏令我收获颇丰！<br>还有很多地方有待我去实践。<br><br>老师这个 参考资料 够长的。<br>看了这里，才发现《精通 Vim：用 Vim 8 和 Neovim 实现高效开发》今年3月都已经出版了。<br>虽然英文版的看过了，但还是想支持一下正版。","like_count":6,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505450,"discussion_content":"谢谢。\n\n你几乎每讲都是第一个学习完，还能提出很多好建议——厉害！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599786405,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305122,"discussion_content":"感兴趣的内容我就喜欢第一时间看。😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599790178,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":249493,"user_name":"顾才朋","can_delete":false,"product_type":"c1","uid":1700331,"ip_address":"","ucode":"0FB38BC9FDE818","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/k7bBpBWF9LJ3mysdpyvETI10poN6cRGDAAT2RH9n6NJUN8TxFQufNA93POco9JP1Vb51AJVDQpyjXXNFicI5HDA/132","comment_is_top":false,"comment_ctime":1600672913,"is_pvip":true,"replies":[{"id":"91536","content":"嗯，JetBrains 家的东西做得确实好。我虽然主要用 Vim 来开发 C++，但写严肃的 Python 项目代码时我还是经常打开 PyCharm。","user_name":"作者回复","user_name_real":"吴咏炜","uid":"1645639","ctime":1600750651,"ip_address":"","comment_id":249493,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10190607505","product_id":100055801,"comment_content":"我在2011年的时候，从《程序员的修炼之道》这本书中知道了 vi 编辑器之后，花了不少时间折腾。虽然从未把 vi 真正搞成自己的 IDE，但实实在在的，一直在 IDE 中（主要是 idea）使用 vim 模拟器。<br><br>我买这门课的目的是想了解一下，真正把 vim 当 IDE 的人是怎样做的。<br><br>学完以后，还是让我感到一点惊讶，现在 vim 的生态发展比之前花时间折腾的时候已经好了太多。要想直接把 vim 配置到替代 idea 大概不太可能，但是做到能够代替 sublimetext 或者 vscode 的程度，可行性还是非常高的。对于我来讲，严肃的编程还是得靠 idea，但时常会用 sublimetext （vim 模拟器）去完成一些简单的任务。看起来这些简单的任务，未来完全可以用 vim 更加高效的完成。<br><br>非常感谢作者的分享，让我对 vim 进行配置和使用，有了更系统性的认识。","like_count":3,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505937,"discussion_content":"嗯，JetBrains 家的东西做得确实好。我虽然主要用 Vim 来开发 C++，但写严肃的 Python 项目代码时我还是经常打开 PyCharm。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600750651,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":247649,"user_name":"doge","can_delete":false,"product_type":"c1","uid":1593251,"ip_address":"","ucode":"9E2D4C8F9B4CBC","user_header":"https://static001.geekbang.org/account/avatar/00/18/4f/a3/0e56b4e5.jpg","comment_is_top":false,"comment_ctime":1599786618,"is_pvip":false,"replies":[{"id":"90954","content":"是的，Vim是一个可以长期积累、持续使用的环境。","user_name":"作者回复","user_name_real":"吴咏炜","uid":"1645639","ctime":1599802306,"ip_address":"","comment_id":247649,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5894753914","product_id":100055801,"comment_content":"老师的课程让我受益良多，虽然一直用vim，也一直沿用github上高手们共享的配置，但还没真正仔细的研究过相关功能实现的方式以及脚本的写法，看了老师的教学和评论高手的分享，对vim的理解更深入了些，对高效编辑的一些思考也多了一些。按照老师的脚本也算是自我定制出了比较满意的一个vim版本。评论的朋友说的好，选好一个编辑器，然后一直用下去，好东西还是需要多多打磨的。最后再次感谢老师系统性的分享。","like_count":1,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505461,"discussion_content":"是的，Vim是一个可以长期积累、持续使用的环境。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599802306,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":247613,"user_name":"Sochooligan","can_delete":false,"product_type":"c1","uid":1318528,"ip_address":"","ucode":"B66F78B6B86476","user_header":"https://static001.geekbang.org/account/avatar/00/14/1e/80/e409fff6.jpg","comment_is_top":false,"comment_ctime":1599767018,"is_pvip":false,"replies":[{"id":"90930","content":"欢迎Emacs党。不过，这两个要精通一个都不容易啊，再加设计哲学都有点区别。双修还是很费力气的，当然，搞好了就很牛。:-)","user_name":"作者回复","user_name_real":"吴咏炜","uid":"1645639","ctime":1599786884,"ip_address":"","comment_id":247613,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5894734314","product_id":100055801,"comment_content":"感谢老师的深厚经验和精彩分享！断续在看，很有必要再精读几遍。虽然现在用的是emacs、spacemacs用的是emacs的按键，但编辑器（IDE）面对的问题都是类似的，很多解决问题的方法都是通用的。关于编辑器我有一点体会是：你最终会在Vim和Emacs之间不再纠结（也许还有sublime，atom，vs code等），选择一个自己的最爱，把使用时所有遇到的问题，都在这个编辑器里配好、改进，并一直用下去，用到最好。选你所爱，爱你所选！","like_count":2,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505452,"discussion_content":"欢迎Emacs党。不过，这两个要精通一个都不容易啊，再加设计哲学都有点区别。双修还是很费力气的，当然，搞好了就很牛。:-)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599786884,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1318528,"avatar":"https://static001.geekbang.org/account/avatar/00/14/1e/80/e409fff6.jpg","nickname":"Sochooligan","note":"","ucode":"B66F78B6B86476","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305671,"discussion_content":"没有双修，就是只聚焦Emacs。最早的时候用vim，一直没有配置起来。后来可能是老了，脑力退化，突然就讨厌vim的command模式（因为command模式和其他模式的按键是两种东西，在command模式中是操作，其他是普通文本。两个之间需要用ESC切换）。而Emacs所有按键盘是一致的(因为用了控制键C-，或者M-)，在输入时不用废这个脑力频繁切换，但是坏处是需要双手操作。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600052878,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":256361,"user_name":"瀚海星尘","can_delete":false,"product_type":"c1","uid":1024461,"ip_address":"","ucode":"90F418299EA3BF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/cd/2c513481.jpg","comment_is_top":false,"comment_ctime":1603608958,"is_pvip":false,"replies":[{"id":"93345","content":"哈，这有点像是负重训练啊。赞。","user_name":"作者回复","user_name_real":"吴咏炜","uid":"1645639","ctime":1603615938,"ip_address":"","comment_id":256361,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1603608958","product_id":100055801,"comment_content":"花了几个月，一点一点的挤出时间，一节一节的慢慢练。上课前已经强迫自己用了一段时间的 vim，但是经常应为效率开发问题，被逼回到 vscode。几个月下来，vscode 已经拜拜了！收益匪浅哈，谢谢吴老师！������","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":508005,"discussion_content":"哈，这有点像是负重训练啊。赞。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603615938,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":247956,"user_name":"pyhhou","can_delete":false,"product_type":"c1","uid":1256496,"ip_address":"","ucode":"31EF8D50CF91A5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibZVAmmdAibBeVpUjzwId8ibgRzNk7fkuR5pgVicB5mFSjjmt2eNadlykVLKCyGA0GxGffbhqLsHnhDRgyzxcKUhjg/132","comment_is_top":false,"comment_ctime":1599952701,"is_pvip":false,"replies":[{"id":"91170","content":"很高兴我的方法对你也有用。师父领进门，修行在自身，下面就靠你自己了。:-)","user_name":"作者回复","user_name_real":"吴咏炜","uid":"1645639","ctime":1600011459,"ip_address":"","comment_id":247956,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1599952701","product_id":100055801,"comment_content":"到这里真是有些不舍，感觉自己每一讲都能学到很多新知识，了解自己之前不曾了解的东西（可能是自己对 VIM 的了解不够������）。回看这个专栏，自己的收获真的不小，比如掌握了 vim 脚本的基本配置方法，了解了一些高效便捷的指令组合，也跟着老师知道了很多很便捷的插件，另外自己还尝试阅读了一些 VIM 源码。让我收获最大的还是专栏通过各种常见的例子，很清楚地展示一些指令和插件的应用场景，知道了一个指令或插件为什么会比一般的编辑方法更高效，再加上老师每次的耐心解答，像我这种 VIM 新人都感受到了 VIM 的强大。除了高效编辑，感觉 VIM 给我们带来了很多额外的好处，比如增加了操作命令行的熟练度，最重要的还是 VIM 让人变得更加 “懒惰”，时刻想着如何改进脚本让自己能够更方便地去写程序，给自己留足了想象和创作的空间。看来自己的 VIM 之路才刚开始<br><br>感谢老师的辛勤付出，也感谢老师每一讲的提问都耐心解答","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505542,"discussion_content":"很高兴我的方法对你也有用。师父领进门，修行在自身，下面就靠你自己了。:-)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600011459,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":247791,"user_name":"newcode","can_delete":false,"product_type":"c1","uid":1347295,"ip_address":"","ucode":"B0AD03D63E0591","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTISYlHZbsaNLsia9JaCKzXeD1uianu7LxjAzW529MG0X7KGCj3DZAkTBfB9DSkXDVVmmVqnVyselicyQ/132","comment_is_top":false,"comment_ctime":1599839418,"is_pvip":false,"replies":[{"id":"91013","content":"结束才是开始。:-)","user_name":"作者回复","user_name_real":"吴咏炜","uid":"1645639","ctime":1599911621,"ip_address":"","comment_id":247791,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1599839418","product_id":100055801,"comment_content":"时间过得真快，“一切才刚刚开始”。","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505494,"discussion_content":"结束才是开始。:-)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599911621,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":247697,"user_name":"YouCompleteMe","can_delete":false,"product_type":"c1","uid":1232859,"ip_address":"","ucode":"89B5A75DA85E0A","user_header":"https://static001.geekbang.org/account/avatar/00/12/cf/db/9693d08f.jpg","comment_is_top":false,"comment_ctime":1599796964,"is_pvip":false,"replies":[{"id":"90990","content":"很高兴对你有帮助。能把控细节，也确实是我对工具的期望。","user_name":"作者回复","user_name_real":"吴咏炜","uid":"1645639","ctime":1599835790,"ip_address":"","comment_id":247697,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1599796964","product_id":100055801,"comment_content":"虽然之前看过《Vim实用技巧》&#47;《Vim8文本实战处理》，但是这个专栏才真正打通了我使用Vim的任督二脉。以前自己的vimrc参考了Github上一些Vim插件作者的配置，很多配置只是人云亦云，现在有了一份自己的精简的vimrc，对其中的每一项配置都了然于胸。对于发现不高效的地方，还可以自己写VimL改进效率。感谢老师的辛苦付出，收获颇丰，期待老师的下一门课程。<br>待老师的下一门课程。","like_count":1,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505473,"discussion_content":"很高兴对你有帮助。能把控细节，也确实是我对工具的期望。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599835790,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":247648,"user_name":"","can_delete":false,"product_type":"c1","uid":2171702,"ip_address":"","ucode":"","user_header":"","comment_is_top":false,"comment_ctime":1599786522,"is_pvip":false,"replies":[{"id":"90953","content":"学习飞速啊。厉害！","user_name":"作者回复","user_name_real":"吴咏炜","uid":"1645639","ctime":1599801960,"ip_address":"","comment_id":247648,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1599786522","product_id":100055801,"comment_content":"我从毕业工作开始，到现在使用VIM已经十年了，也是和老师一样，先是被逼着CentOS环境开发使用<br>购买老师的课程也是想知道老师是怎么使用VIM的，有哪些我个人不知道的高效技巧<br>从9.9购买课程，到9.10看完课程，今天9.11课程完结<br>时间虽短，收获也是颇为丰富<br>老师的课程虽然自己70%都已经在用，实践中了<br>带着问题来学习，查漏补缺，对自己提升也是迅速的<br>下一站：现代 C++ 实战 30 讲","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505460,"discussion_content":"学习飞速啊。厉害！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599801960,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":247608,"user_name":"qinsi","can_delete":false,"product_type":"c1","uid":1667175,"ip_address":"","ucode":"090D9C4068FF12","user_header":"https://static001.geekbang.org/account/avatar/00/19/70/67/0c1359c2.jpg","comment_is_top":false,"comment_ctime":1599757968,"is_pvip":true,"replies":[{"id":"90929","content":"也是一种用法吧……对我来说，用Vim配插件可以更好地做到跟编译环境一致的代码理解。如果做Linux开发，用Windows的IDE，虽然也能配到完全理解代码，我感觉这个配置反而也很复杂。而且在Vim里更能控制一切，开销还能比较低。","user_name":"作者回复","user_name_real":"吴咏炜","uid":"1645639","ctime":1599786727,"ip_address":"","comment_id":247608,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1599757968","product_id":100055801,"comment_content":"个人觉得Vim作为IDE而言功能还是薄弱了些，毕竟原本定位就只是编辑器。而很多传统的使用场景如运维连上远程服务器改配置，或是在服务器上进行简单的远程开发和调试等，也随着自动化运维以及WebIDE技术的发展逐渐减少。但Vim的高效编辑键位作为一种遗产保留了下来，在很多主流IDE中都可以通过插件方式支持。既然离不开现有的IDE，仅仅通过熟练掌握Vim的键位也可以显著提高效率。但很多操作是键位表上没有的，这门课起到了很好的补充。感谢老师。<br><br>","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505451,"discussion_content":"也是一种用法吧……对我来说，用Vim配插件可以更好地做到跟编译环境一致的代码理解。如果做Linux开发，用Windows的IDE，虽然也能配到完全理解代码，我感觉这个配置反而也很复杂。而且在Vim里更能控制一切，开销还能比较低。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599786727,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}