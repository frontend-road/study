{"id":106168,"title":"10 | Dubbo、Spring Cloud和Kubernetes该如何选型（上）","content":"","comments":[{"had_liked":false,"id":173142,"user_name":"机器人学习","can_delete":false,"product_type":"c3","uid":1068566,"ip_address":"","ucode":"B10DB0AA4A5B67","user_header":"https://static001.geekbang.org/account/avatar/00/10/4e/16/8fe8a532.jpg","comment_is_top":false,"comment_ctime":1579436032,"is_pvip":true,"replies":[{"id":67738,"content":"如果你了解这三者的诞生背景和演进历史，你会发现它们三者实际是为解决同一问题(分布式微服务基础框架&#47;平台)而生，三者都是对同一问题的解，只是解法和层次不同，但殊途同归。k8s是后起之秀，有后发优势，站得高度更高，考虑更系统全面，简单理解k8s = doubbo or sc + container based deployment。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1580117140,"ip_address":"","comment_id":173142,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"dubbo 解决的是远程RPC通信的问题，sc是微服务的一个实践生态框架，k8s主要是编排容器服务。为什么可以在一起比较？出发点和目标关注点都不在一个层级。小白愚见。。。","like_count":10,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481969,"discussion_content":"如果你了解这三者的诞生背景和演进历史，你会发现它们三者实际是为解决同一问题(分布式微服务基础框架/平台)而生，三者都是对同一问题的解，只是解法和层次不同，但殊途同归。k8s是后起之秀，有后发优势，站得高度更高，考虑更系统全面，简单理解k8s = doubbo or sc + container based deployment。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580117140,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2296844,"avatar":"","nickname":"云","note":"","ucode":"F7E4BEEBCFE1DB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331674,"discussion_content":"我不同意杨老师对三者的分析\nk8s很明显是为容器编排而生，这是官方对k8s的定位和初衷，这里的容器不一定是docker，也有可能是别的容器。至于什么service, 虽然看起来解决了服务发现这个问题，这些都是k8s的衍生品，并不是k8s的定位和初衷. \nSpring cloud 它的核心定位远超过微服务，它要解决的是分布式领域的主要问题，并形成规范。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1606925157,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112224,"user_name":"韩成丰","can_delete":false,"product_type":"c3","uid":1130474,"ip_address":"","ucode":"5590D3BFA44C41","user_header":"https://static001.geekbang.org/account/avatar/00/11/3f/ea/e5fcafb2.jpg","comment_is_top":false,"comment_ctime":1562686841,"is_pvip":false,"replies":[{"id":41013,"content":"你好，虽然微服务应用场景主要针对企业级互联网应用，但是微服务架构的思想其实是通用的，IoT应用可以是微服务应用的一种特殊场景，只是它的端设备资源可能比较受限，所用操作系统可能也不同于一般的操作系统，但是服务端架构可以和企业应用没有多大区别。我想理解企业微服务架构的话，可以扩展架构视野，对你做IoT架构应该会有帮助，只是需要针对性做一些调整，尤其考虑资源和性能方面。我看到github上有个叫lelylan(https:&#47;&#47;github.com&#47;lelylan&#47;lelylan&#47;)的IoT框架，采用微服务架构，它是ruby&#47;nodejs可开发，不过其思想完全可以用其它语言实现。当然，取决你的具体场景和规模，IoT项目也可以不用微服务架构。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1562847719,"ip_address":"","comment_id":112224,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"我一直有一个疑惑，对于互联网应用，用微服务框架，k8s等可以有很好的适应度。不过目前也出现了一些在边缘计算的基于微服务架构产品，而且希望运行在类似树莓派的这样的小硬件上面。\n\n我的问题是微服务时候适合在资源有限的环境下运行？如果资源有限，那么如何做到微服务的治理，如视频中说的各种模块。感觉有些行不通，但是不知为什么还是有人在做，比如EdgeXFOUNDRY,apache 的开源物联网框架，基于golang的微服务架构。\n\n希望可以获得老师的指点，因为这个决定我后期的创业方向。","like_count":8,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457626,"discussion_content":"你好，虽然微服务应用场景主要针对企业级互联网应用，但是微服务架构的思想其实是通用的，IoT应用可以是微服务应用的一种特殊场景，只是它的端设备资源可能比较受限，所用操作系统可能也不同于一般的操作系统，但是服务端架构可以和企业应用没有多大区别。我想理解企业微服务架构的话，可以扩展架构视野，对你做IoT架构应该会有帮助，只是需要针对性做一些调整，尤其考虑资源和性能方面。我看到github上有个叫lelylan(https://github.com/lelylan/lelylan/)的IoT框架，采用微服务架构，它是ruby/nodejs可开发，不过其思想完全可以用其它语言实现。当然，取决你的具体场景和规模，IoT项目也可以不用微服务架构。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562847719,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113117,"user_name":"周翔","can_delete":false,"product_type":"c3","uid":1068734,"ip_address":"","ucode":"E5E12D9B02AF59","user_header":"https://static001.geekbang.org/account/avatar/00/10/4e/be/693b5e5e.jpg","comment_is_top":false,"comment_ctime":1562899077,"is_pvip":false,"replies":[{"id":41219,"content":"1. 服务框架一旦用起来，想要替换成另外一套，总是有不小的成本的，而且迁移很折腾。况且换成另外一套不见得带来什么业务价值。建议内部服务间调用沿用Dubbo，前端对外暴露的聚合服务(也称BFF），可以考虑采用SpringBoot Rest。这样两者可以结合用起来。\n\n2. 任务调度可选徐雪里的xxl-job(https:&#47;&#47;github.com&#47;xuxueli&#47;xxl-job)，这个比较轻量，比较重量的有唯品会Saturn(https:&#47;&#47;github.com&#47;vipshop&#47;Saturn)，还有当当的elastic-job(https:&#47;&#47;github.com&#47;elasticjob)。你可以评估下是否符合你的需求。另外容器平台k8s&#47;mesos等都支持后台任务和周期任务等的运行，也可以考虑。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1562935502,"ip_address":"","comment_id":113117,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"杨老师，有2个问题：\r\n1、目前公司用的dubbo来做微服务的，通信使用hessian协议，支持强类型的rpc调用（类似SOA的调用），如果未来想升级到SpringBoot+Dubbo的框架，此技术栈后期在Api网关和调用链监控方面，会不会有永久缺陷？是否有必要切换到Restfull的方式（那样变动较大），这样能与主流保持一致。\r\n\r\n2、目前有大量的后台定时任务（近百个），还有消息队列的消费处理，这些后台处理非常消耗cpu资源，有什么分布式的调度工具或配置管理工具不？类似：将N个定时任务分散到若干台机器上跑，但是有个工具能统一配置管理，哪些任务和队列消费，放到哪些机器上面跑。","like_count":5,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458063,"discussion_content":"1. 服务框架一旦用起来，想要替换成另外一套，总是有不小的成本的，而且迁移很折腾。况且换成另外一套不见得带来什么业务价值。建议内部服务间调用沿用Dubbo，前端对外暴露的聚合服务(也称BFF），可以考虑采用SpringBoot Rest。这样两者可以结合用起来。\n\n2. 任务调度可选徐雪里的xxl-job(https://github.com/xuxueli/xxl-job)，这个比较轻量，比较重量的有唯品会Saturn(https://github.com/vipshop/Saturn)，还有当当的elastic-job(https://github.com/elasticjob)。你可以评估下是否符合你的需求。另外容器平台k8s/mesos等都支持后台任务和周期任务等的运行，也可以考虑。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562935502,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1128993,"avatar":"https://static001.geekbang.org/account/avatar/00/11/3a/21/caa40d0f.jpg","nickname":"风之射手座","note":"","ucode":"41701B012716AC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1928,"discussion_content":"我在平安银行这边用的分布式任务框架horae，有个统一的控制台可以配置任务的业务领域和实现类，然后业务应用中配置链接到horae服务端，就会被服务端分布式的调用应用所在各个服务器来执行。但是网上找不到什么相关资料，不好比较。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563101366,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1197881,"avatar":"https://static001.geekbang.org/account/avatar/00/12/47/39/7722e4f0.jpg","nickname":"吴飞","note":"","ucode":"672281A415E8D2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1784,"discussion_content":"第二个问题,可以使用 xxljob.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562911605,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112735,"user_name":"大胡子叔叔","can_delete":false,"product_type":"c3","uid":1021578,"ip_address":"","ucode":"AF98BC177B045A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/96/8a/fce35cb8.jpg","comment_is_top":false,"comment_ctime":1562811739,"is_pvip":false,"replies":[{"id":41224,"content":"Eureka的替代组件，一个是consul(https:&#47;&#47;github.com&#47;hashicorp&#47;consul)，还有一个阿里开源的nacos(https:&#47;&#47;github.com&#47;alibaba&#47;nacos)。\nHystrix的替代目前有（resilience4j）https:&#47;&#47;github.com&#47;resilience4j&#47;resilience4j。\n\n如果采用K8s平台开发微服务，内置支持服务发现和LB，不需要Eureka&#47;Ribbon这些。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1562936783,"ip_address":"","comment_id":112735,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"像是Eureka，Ribbon，Hystrix 过段时间不再维护了吧，那还推荐使用这些组件么？还是现在就用别的组件替换它们","like_count":4,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457886,"discussion_content":"Eureka的替代组件，一个是consul(https://github.com/hashicorp/consul)，还有一个阿里开源的nacos(https://github.com/alibaba/nacos)。\nHystrix的替代目前有（resilience4j）https://github.com/resilience4j/resilience4j。\n\n如果采用K8s平台开发微服务，内置支持服务发现和LB，不需要Eureka/Ribbon这些。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562936783,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112459,"user_name":"John","can_delete":false,"product_type":"c3","uid":1020861,"ip_address":"","ucode":"E4ADF8488953FB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/93/bd/f3977ebb.jpg","comment_is_top":false,"comment_ctime":1562739852,"is_pvip":false,"replies":[{"id":41027,"content":"zuul1成熟稳定，已经经过大规模落地验证，实现和使用简单，本质就是一个servlet，虽然同步性能不是很高，但是可以通过多部署实例来解决，另外可以配合hystrix提升稳定性。zuul2异步模型，实现比较复杂，除了netflix，其它企业采用的案例还不多。具体要看企业的流量和技术团队情况，一般企业我觉得zuul1就够了。spring cloud gateway出来时间不长，大规模企业落地案例还不多，而且是全新产品，需要不断迭代才能完善稳定。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1562850117,"ip_address":"","comment_id":112459,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"Netflix已經有了zuul2 來支持reactive 但是似乎spring cloud gateway有移除zuul1和zuul2的趨勢 請問老師對此怎麼看呢","like_count":4,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457742,"discussion_content":"zuul1成熟稳定，已经经过大规模落地验证，实现和使用简单，本质就是一个servlet，虽然同步性能不是很高，但是可以通过多部署实例来解决，另外可以配合hystrix提升稳定性。zuul2异步模型，实现比较复杂，除了netflix，其它企业采用的案例还不多。具体要看企业的流量和技术团队情况，一般企业我觉得zuul1就够了。spring cloud gateway出来时间不长，大规模企业落地案例还不多，而且是全新产品，需要不断迭代才能完善稳定。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562850117,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112918,"user_name":"小白","can_delete":false,"product_type":"c3","uid":1004755,"ip_address":"","ucode":"9BB9A170023CD8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/d3/46fd4aa3.jpg","comment_is_top":false,"comment_ctime":1562844409,"is_pvip":false,"replies":[{"id":41035,"content":"谢谢提醒！","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1562851599,"ip_address":"","comment_id":112918,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"波波老师，heapster从k8s 1.11开始被标记为废弃了，现在是metrics-server。https:&#47;&#47;github.com&#47;kubernetes-retired&#47;heapster&#47;blob&#47;master&#47;docs&#47;deprecation.md。","like_count":3,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457956,"discussion_content":"谢谢提醒！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562851599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112228,"user_name":"hunterlodge","can_delete":false,"product_type":"c3","uid":1069755,"ip_address":"","ucode":"5B83A79E784161","user_header":"https://static001.geekbang.org/account/avatar/00/10/52/bb/225e70a6.jpg","comment_is_top":false,"comment_ctime":1562687416,"is_pvip":false,"replies":[{"id":41014,"content":"1. hystrix确实是一个通用的容错限流组件，理论上可以集成dubbo。我刚在百度上搜了一下，dubbo集成hystrix，有不少解决方案。具体还是需要实际测试，因为可能有线程和网路模型等细节问题。\n2. Skywalking应该也是具体框架无关的。\n我上面的比对，单纯是从这三个框架自身作为一个体系出发，是否考虑了这个关注点，和原生提供怎样的解决方案，是否开源，来进行比对的。\n\n3. CAT和Apollo之前课程重点介绍过，本课程不重复了。本课程以应用为主，拓展介绍下Skywalking(可替代CAT），同时应用部署到K8s，它原生支持ConfigMaps&#47;Secrets(可替代Apollo)。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1562848762,"ip_address":"","comment_id":112228,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"老师，我有三个疑问：\n1.hystrix只是一个代码级组件，并非springcloud特有，k8s中跑的springboot可以用，dubbo应用也可以用吧\n2. 像skywalking这种调用链监控工具三种微服务架构也都可以采用吧？\n基于上述两点，对三种框架在这两个点的比较会不会有失公平？\n3. 您之前课程推荐的CAT和Apollo这些组件在本次课程中不再使用了吗？是有更好的替代吗？\n谢谢！","like_count":3,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457628,"discussion_content":"1. hystrix确实是一个通用的容错限流组件，理论上可以集成dubbo。我刚在百度上搜了一下，dubbo集成hystrix，有不少解决方案。具体还是需要实际测试，因为可能有线程和网路模型等细节问题。\n2. Skywalking应该也是具体框架无关的。\n我上面的比对，单纯是从这三个框架自身作为一个体系出发，是否考虑了这个关注点，和原生提供怎样的解决方案，是否开源，来进行比对的。\n\n3. CAT和Apollo之前课程重点介绍过，本课程不重复了。本课程以应用为主，拓展介绍下Skywalking(可替代CAT），同时应用部署到K8s，它原生支持ConfigMaps/Secrets(可替代Apollo)。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562848762,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136062,"user_name":"LSJ","can_delete":false,"product_type":"c3","uid":1299437,"ip_address":"","ucode":"3CF8A457AC6BA9","user_header":"https://static001.geekbang.org/account/avatar/00/13/d3/ed/8d5420ad.jpg","comment_is_top":false,"comment_ctime":1569338169,"is_pvip":false,"replies":[{"id":52263,"content":"可以，zuul可以SpringBoot方式启动(加一个@EnableZuulProxy标注即可)","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1569416452,"ip_address":"","comment_id":136062,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"老师 springboot可以直接集成zuul吗 就像课程里集成feign一样 然后部署到k8s环境中？","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468438,"discussion_content":"可以，zuul可以SpringBoot方式启动(加一个@EnableZuulProxy标注即可)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569416452,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113401,"user_name":"梁😜","can_delete":false,"product_type":"c3","uid":1034977,"ip_address":"","ucode":"078473C50B802B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ca/e1/d8537537.jpg","comment_is_top":false,"comment_ctime":1562994975,"is_pvip":false,"replies":[{"id":41322,"content":"你好，课程第3章讲解在SpringBoot基础上做轻量级封装，搭建微服务基础框架，第4章讲解开发一个轻量级的微服务网关，第5章讲解基于jwt的微服务安全认证架构，这几章都会结合staffjoy案例项目的代码讲解，有兴趣也可以直接看staffjoy项目源码:https:&#47;&#47;github.com&#47;spring2go&#47;staffjoy，看源码过程中如果有问题，可以再回头看课程讲解，这样更容易理解项目源码。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1563021547,"ip_address":"","comment_id":113401,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"老师您好，非常期待老师在针对SpringBoot封装，搭建微服务基础框架方面的经验分享，不知道后续课程是否会讲解相关内容，是否会给出相关代码，谢谢老师~","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458201,"discussion_content":"你好，课程第3章讲解在SpringBoot基础上做轻量级封装，搭建微服务基础框架，第4章讲解开发一个轻量级的微服务网关，第5章讲解基于jwt的微服务安全认证架构，这几章都会结合staffjoy案例项目的代码讲解，有兴趣也可以直接看staffjoy项目源码:https://github.com/spring2go/staffjoy，看源码过程中如果有问题，可以再回头看课程讲解，这样更容易理解项目源码。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563021547,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112526,"user_name":"William","can_delete":false,"product_type":"c3","uid":1346201,"ip_address":"","ucode":"19B97CF2301771","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/99/3cefe6f5.jpg","comment_is_top":false,"comment_ctime":1562751735,"is_pvip":false,"replies":[{"id":41029,"content":"Zipkin只是一个单纯的调用链监控产品，性能聚合报表能力比较欠缺，企业如果要用的话，一般需要定制扩展。Skywalking和CAT不光是调用链监控，而且是APM，有比较丰富的性能统计报表，更适合企业开箱即用。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1562850631,"ip_address":"","comment_id":112526,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"Zipkin在使用mysql存储的时候，性能及其卡，而且请求量不是很多的情况下数据也很快就会满，后面也没有用ES来替换它，而是选择直接不用。从其他地方了解过来的资料，对于Zipkin评价也都不高，多以“玩具”称之，后来关注到了SkyWalking,就彻底不关注zipkin了。不知道是否有人觉得Zipkin好用？","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457780,"discussion_content":"Zipkin只是一个单纯的调用链监控产品，性能聚合报表能力比较欠缺，企业如果要用的话，一般需要定制扩展。Skywalking和CAT不光是调用链监控，而且是APM，有比较丰富的性能统计报表，更适合企业开箱即用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562850631,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120188,"user_name":"sayid","can_delete":false,"product_type":"c3","uid":1101465,"ip_address":"","ucode":"E40E0D86768DCA","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/99/4382727b.jpg","comment_is_top":false,"comment_ctime":1564804765,"is_pvip":false,"replies":[{"id":44143,"content":"IT技术一直是不断轮回演进的，以前是CS，后来流行BS，目前BS&#47;CS混合局面。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1564841509,"ip_address":"","comment_id":120188,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100031401,"comment_content":"现在又是微服务，又是边缘计算，是不是随着：用户增长，业务复杂化，&#39;BS&#39;玩不下去去了，转型玩&#39;CS&#39;了。。。","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461230,"discussion_content":"IT技术一直是不断轮回演进的，以前是CS，后来流行BS，目前BS/CS混合局面。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564841509,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113294,"user_name":"姑射仙人","can_delete":false,"product_type":"c3","uid":1008517,"ip_address":"","ucode":"3EFC1F3E592165","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/85/1dc41622.jpg","comment_is_top":false,"comment_ctime":1562937293,"is_pvip":false,"replies":[{"id":41324,"content":"对，课程既要照顾新手，也要考虑有经验的学员，有一定的挑战。课程会尽量结合一线企业的实践，所以有几章专门有企业演进案例环节，比如第4章讲网关和BFF是如何在企业架构中演进出来的，第5章讲微服务安全认证架构是如何演进出来的，第7章有调用链监控产品的企业演进历史等。而微服务、云原生和k8s本身也是目前企业开发的前沿技术，很多企业还在摸索阶段，本课程通过案例展示可落地参考的应用架构。Anyway，谢谢你的建议","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1563022403,"ip_address":"","comment_id":113294,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100031401,"comment_content":"一路跟过来的，希望老师由浅入深，尽量多分享大厂一线实战经验。既要照顾新手，也要拔高层次。如果只是扫盲就太可惜了，没有冒犯的意思。","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458155,"discussion_content":"对，课程既要照顾新手，也要考虑有经验的学员，有一定的挑战。课程会尽量结合一线企业的实践，所以有几章专门有企业演进案例环节，比如第4章讲网关和BFF是如何在企业架构中演进出来的，第5章讲微服务安全认证架构是如何演进出来的，第7章有调用链监控产品的企业演进历史等。而微服务、云原生和k8s本身也是目前企业开发的前沿技术，很多企业还在摸索阶段，本课程通过案例展示可落地参考的应用架构。Anyway，谢谢你的建议","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563022154,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":317379,"user_name":"正是那朵玫瑰","can_delete":false,"product_type":"c3","uid":1048261,"ip_address":"","ucode":"73D630B654573F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fe/c5/3467cf94.jpg","comment_is_top":false,"comment_ctime":1634779707,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100031401,"comment_content":"老师有个疑问，目前这种springboot+k8s的方案，通过feign发起http远程调用，利用k8s的service能力来负载均衡，这里存在一个问题就是：当建立的是长连接时，这时就失去了负载均衡的能力，这个怎么解？","like_count":1},{"had_liked":false,"id":341643,"user_name":"Geek_e3c7e4","can_delete":false,"product_type":"c3","uid":2973716,"ip_address":"","ucode":"E5848739D79D87","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/CSvV8hb6YlN4bkaTxwafI6VeTSbYdsFpwaDN6c142SnWGaNu7iaucpn0UBuBDetMOYic6gs88XJsggicphJ0dFxnQ/132","comment_is_top":false,"comment_ctime":1649748604,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100031401,"comment_content":"老师，可以把您说的话的文档发出来吗","like_count":0},{"had_liked":false,"id":196861,"user_name":"林明忠","can_delete":false,"product_type":"c3","uid":1911192,"ip_address":"","ucode":"F5444908C1A2B3","user_header":"","comment_is_top":false,"comment_ctime":1585318882,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100031401,"comment_content":"三者比对介绍的很全面，对框架的选型很有用","like_count":0},{"had_liked":false,"id":187961,"user_name":"钱","can_delete":false,"product_type":"c3","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1584284378,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100031401,"comment_content":"之前公司内全是自研的产品，相关类似组件接触的不多，这节挺好，一个个归了一下类，一个个都玩一下!","like_count":0}]}