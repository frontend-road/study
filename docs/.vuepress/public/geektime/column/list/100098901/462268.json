{"id":462268,"title":"06｜帧内预测：如何减少空间冗余？","content":"<p>你好，我是李江。</p><p>前面几节课我们一起讨论了视频编码的原理以及编码码流结构，从今天开始我们一起来聊一聊具体的编码模式。</p><p>我们知道在视频编码时主要需要减少4个冗余，包括：空间冗余、时间冗余、视觉冗余和信息熵冗余。其中空间冗余就是通过帧内预测的方式来实现的。那帧内预测到底是怎么做到减少空间冗余的呢？</p><p>其实一般来说，<strong>一幅图像中相邻像素的亮度和色度信息是比较接近的，<strong><strong>并且</strong></strong>亮度和色度信息也是逐渐变化的，不太会出现突变</strong>。也就是说，<strong>图像具有空间相关性</strong>。帧内预测就是利用这个特点来进行的。即<strong>帧内预测通过利用已经编码的相邻像素的值来预测待编码的像素值，最后达到减少空间冗余的目的</strong>。</p><p>这里需要注意的一个点就是，我们是通过已经编码了的像素值去预测待编码的像素值。你可能会问，已经编码了的像素值变成码流了，不再是一个个像素了，怎么去预测待编码的像素呢？其实已经编码了的像素是会重建成重建像素，用来做之后待编码块的参考像素的。你可以认为是<strong>已经编码的块会解码成像素用来做参考像素</strong>。</p><p>好了，我们已经知道了帧内预测是怎么减少空间冗余的，那我们还有一个最重要的问题要解答。既然帧内预测是通过相邻像素来预测待编码像素的，那它到底是怎么预测的呢？下面我们就以H264标准来讲解每种帧内预测模式是怎么做预测的。</p><!-- [[[read_end]]] --><h2>不同块大小的帧内预测模式</h2><p>我们在视频编码原理的那节课里面讲过，视频编码是以块为单位进行的。<strong>在H264标准里面，块分为宏块和子块。宏块的大小是16 x 16（YUV 4:2:0图像亮度块为16 x 16，色度<strong><strong>块</strong></strong>为8 x 8）</strong>。在帧内预测中，亮度宏块可以继续划分成16个4 x 4的子块。因为图像中有的地方细节很多，我们需要划分成更小的块来做预测会更精细，所以会将宏块再划分成4 x 4的子块。如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/5c/5b/5c0a24c3d52e8yy2de20fb07b58c625b.jpg?wh=1280x446\" alt=\"\"></p><p>帧内预测是根据块的大小分为不同的预测模式的。还有一个点就是亮度块和色度块的预测是分开进行的。这里我给你总结一下，主要有以下3点规则：</p><ol>\n<li>\n<p><strong>宏块大小是16 x 16，其中亮度块为16 x 16，色度块为8 x 8</strong>；</p>\n</li>\n<li>\n<p><strong>帧内预测中亮度块和色度块是分开独立进行预测的</strong>，即亮度块参考已编码亮度块的像素，而色度块参考已编码色度块的像素；</p>\n</li>\n<li>\n<p><strong>16 x 16的亮度块可以继续划分成16个4 x 4的子块</strong>。</p>\n</li>\n</ol><p>所以，我们在实际帧内预测的时候就会分为：4 x 4亮度块的预测、16 x 16亮度块的预测、8 x 8色度块的预测（注意亮度8 x 8模式和I_PCM模式很少使用，我们这里不做讨论）。下面我们就开始一个个展开来讨论吧。</p><h3>4 x 4亮度块的帧内预测模式</h3><p>因为4 x 4的块帧内预测模式最多，并且基本包含亮度16 x 16和色度8 x 8的模式，所以我们接下来先从4 x 4亮度块的帧内预测模式讲起。</p><p>4 x 4亮度块的帧内预测模式总共有9个。其中有<strong>8种方向模式和一种DC模式</strong>，且方向模式指的是预测是有方向角度的。好了，那我们接下来就聊聊这9种模式吧。</p><ol>\n<li>Vertical模式</li>\n</ol><p><strong>Vertical模式就是指，当前编码亮度块的每一列的像素值，都是复制上边已经编码块的最下面那一行的对应位置的像素值。</strong>这句有点拗口，别急，等会儿我会给出计算方法和示意图，让你能很容易地理解它。</p><p><strong>Vertical模式得到的预测块同一列中的像素值都是一样的</strong>。该模式得到的块就叫做Vertical预测块。注意，<strong>该模式只有在上边块存在的时候才可用，如果不存在则该模式不可用</strong>。比如图像最上边的块就没有可参考的块存在。</p><p>该模式下预测块像素计算方法如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/03/e7/03b05d50574c17ed523f9164929019e7.jpg?wh=1280x362\" alt=\"\"></p><p>示意图如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/c4/d8/c4yy0c94ba713d778fd81917238863d8.png?wh=1160x762\" alt=\"图片\"></p><ol start=\"2\">\n<li>Horizontal模式</li>\n</ol><p><strong>Horizontal模式就是指，当前编码亮度块的每一行的像素值，都是复制左边已经编码块的最右边那一列的对应位置的像素值</strong>（同样地，下面有计算方法和示意图）。<strong>Horizontal模式得到的预测块同一行的像素值都是一样的</strong>，该模式得到的块就叫做Horizontal预测块。注意，<strong>该模式只有在左边块存在的时候才可用，如果不存在则该模式不可用</strong>。比如图像最左边的块就没有可参考的块存在。</p><p>该模式下预测块像素计算方法如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/81/91/8185bc4a93669c2a800f5cf0743f7091.jpg?wh=1280x342\" alt=\"\"><br>\n示意图如下：<br>\n<img src=\"https://static001.geekbang.org/resource/image/a1/f5/a15b484807812294b00f1aebcbc942f5.png?wh=1154x750\" alt=\"图片\"></p><ol start=\"3\">\n<li>DC模式</li>\n</ol><p><strong>DC模式就是指，当前编码亮度块的每一个像素值，是上边已经编码块的最下面那一行和左边已编码块右边最后一列的所有像素值的平均值</strong>。注意，<strong>DC模式预测得到的块中每一个像素值都是一样的</strong>。DC模式得到的块就叫做DC预测块。</p><p>根据上边块和左边块是不是存在，该模式下预测块像素的计算方法分为以下四种情况：</p><p><img src=\"https://static001.geekbang.org/resource/image/85/ff/85de3eafb25bff062e821f83f11236ff.jpg?wh=1280x720\" alt=\"\"><br>\n示意图如下：<br>\n<img src=\"https://static001.geekbang.org/resource/image/0y/6b/0yyb8202b3dd85233975ea3cffc13b6b.png?wh=1160x760\" alt=\"图片\"></p><ol start=\"4\">\n<li>Diagonal Down-Left模式</li>\n</ol><p><strong>Diagonal Down-Left模式是上边块和右上块</strong>（上边块和右上块有可能是一个块，因为可能是一个16 x 16的亮度块，意思理解就可以）<strong>的像素通过插值得到</strong>。<strong>如果上边块和右上块不存在则该模式无效。</strong></p><p>该模式下预测块计算的方法分为下面两种情况：</p><p><img src=\"https://static001.geekbang.org/resource/image/a6/06/a6b8b26163ca9d9274377b5735785f06.jpg?wh=1280x412\" alt=\"\"><br>\n示意图如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/11/a1/110b13f5d5af1d119b6f2a559e39f7a1.png?wh=1178x754\" alt=\"图片\"></p><ol start=\"5\">\n<li>Diagonal Down-Right模式</li>\n</ol><p><strong>Diagonal Down-Right模式需要通过上边块、左边块和左上角对角的像素通过插值得到。如果这三个有一个不存在则该模式无效</strong>。</p><p>该模式下预测块计算的方法有以下三种情况：<br>\n<img src=\"https://static001.geekbang.org/resource/image/4f/b7/4f10404d6fc9e3625092d92090aed6b7.jpg?wh=1280x474\" alt=\"\"><br>\n示意图如下：<br>\n<img src=\"https://static001.geekbang.org/resource/image/fc/93/fcbdf7eaec95fea21158b4ce1047ed93.png?wh=1154x760\" alt=\"图片\"></p><ol start=\"6\">\n<li>Vertical-Right模式</li>\n</ol><p><strong>Vertical-Right模式是需要通过上边块、左边块以及左上角对角的像素插值得到的</strong>。必须要这三个都有效才能使用，否则该模式无效。</p><p>该模式下预测块计算的方法有以下四种情况：</p><p><img src=\"https://static001.geekbang.org/resource/image/63/ce/63b391728df65ce7551012753ae331ce.jpg?wh=1280x720\" alt=\"\"><br>\n示意图如下：<br>\n<img src=\"https://static001.geekbang.org/resource/image/c5/bf/c5d488c6a80b9c27ba50048fb4ef4cbf.png?wh=1150x732\" alt=\"图片\"></p><ol start=\"7\">\n<li>Horizontal-Down模式</li>\n</ol><p><strong>Horizontal-Down模式需要通过上边块、左边块以及左上角对角的像素插值得到。必须要这三个都有效才能使用，否则该模式无效。</strong></p><p>该模式下预测块计算的方法有以下四种情况：</p><p><img src=\"https://static001.geekbang.org/resource/image/12/40/120761b8313c18c7433f7708d8b4a140.jpg?wh=1280x720\" alt=\"\"><br>\n示意图如下：<br>\n<img src=\"https://static001.geekbang.org/resource/image/6a/bc/6a3ab22c2570589ac2680c561be0c5bc.png?wh=1172x756\" alt=\"图片\"></p><ol start=\"8\">\n<li>Vertical-Left模式</li>\n</ol><p><strong>Vertical-Left模式是需要通过上边块和右上块</strong>（上边块和右上块有可能是一个块，因为可能是一个16 x 16的亮度块，意思理解就可以）<strong>最下面一行的像素通过插值得到</strong>。如果这两种块不存在则该模式不可用。该模式下预测块的计算方法有下面两种情况：</p><p><img src=\"https://static001.geekbang.org/resource/image/83/66/835d3ec11768f9928098ab2e54556466.jpg?wh=1280x442\" alt=\"\"><br>\n示意图如下：<br>\n<img src=\"https://static001.geekbang.org/resource/image/5e/5d/5e13e4207abd6788b189d9e86669665d.png?wh=1170x774\" alt=\"图片\"></p><ol start=\"9\">\n<li>Horizontal-Up模式</li>\n</ol><p><strong>Horizontal-Up模式是需要通过左边块的像素通过插值得到的</strong>。如果左边块不存在，则该模式不可用。</p><p>该模式下预测块的计算方法有下面四种情况：</p><p><img src=\"https://static001.geekbang.org/resource/image/7b/59/7bbb469c4f050a098b0744ea3cc94e59.jpg?wh=1280x720\" alt=\"\"></p><p>示意图如下：<br>\n<img src=\"https://static001.geekbang.org/resource/image/53/f8/53ddf8a40698cb99e48f103206b149f8.png?wh=1156x764\" alt=\"图片\"></p><h3>16 x 16亮度块的帧内预测模式</h3><p>上面我们讲了4 x 4亮度块的9种预测模式，接下来我们来聊一下16 x 16亮度块的预测模式。</p><p><strong>16 x 16亮度块总共有<strong><strong>4</strong></strong>种预测模式。<strong><strong>它们</strong></strong>分别是<strong><strong>Vertical</strong></strong>模式，<strong><strong>Horizontal</strong></strong>模式、DC模式<strong><strong>和</strong></strong>Plane模式</strong>，前面三种模式跟4 x 4的原理是一样的这里就不重复讲解了。16 x 16亮度块的帧内预测的4种模式的示意图如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/e3/e6/e303d85a11dced7978cedea604f001e6.png?wh=1920x872\" alt=\"图片\"></p><p><img src=\"https://static001.geekbang.org/resource/image/b0/24/b09910c6bc61b97924a52dcd89c04824.png?wh=1920x885\" alt=\"图片\"></p><p>接下来我们介绍一下Plane模式。这种模式相比前面三种模式稍微复杂一些，但是基本原理都差不多。<strong>Plane预测块的每一个像素值，都是将上边已编码块的最下面那一行，和左边已编码块右边最后一列的像素值经过下面公式计算得到的</strong>。</p><p><img src=\"https://static001.geekbang.org/resource/image/4y/f2/4yyf0416de0dda660b69cb3b59b36ff2.jpeg?wh=2428x1076\" alt=\"\"></p><h3>8 x 8色度块的帧内预测模式</h3><p>上面我们讲述了亮度块的帧内预测模式，接下来我们简单介绍一下色度块的帧内预测模式。</p><p>8 x 8色度块的帧内预测模式跟16 x 16亮度块的是一样的，也是总共有4种，分别为DC模式、Vertical模式，Horizontal模式、Plane模式。与16 x 16亮度块不同的是，块大小不同，所以参考像素值数量会不同。但是基本是一致的，这里就不重复了。</p><h2>帧内预测模式的选择</h2><p>现在我们学习了这么多的模式，而每一个块却只能有一种帧内预测模式。那我们怎么确定一个块到底使用哪种模式呢？我们这边先把思路讲一讲，具体细节不展开。等到你把编码基础弄明白了之后可以阅读一下x264的代码，里面有关于具体如何去选择模式的方法。</p><p>以亮度块为例。一个16 x 16的亮度块，我们可以不划分，直接使用4种16 x 16的帧内预测模式，最多得到4种预测块；也可以划分成16个4 x 4的子块，每一个子块最多有9种帧内预测模式。</p><p>对于每一个块或者子块，我们可以得到预测块，再用实际待编码的块减去预测块就可以得到残差块。主要有下面3种方案来得到最优预测模式：</p><ul>\n<li>第一种方案，先对每一种预测模式的残差块的像素值求绝对值再求和，称之为cost，然后取其中残差块绝对值之和也就是cost最小的预测模式为最优预测模式。</li>\n<li>第二种方案，对残差块先进行Hadamard变换（在DCT变换和量化那节课中会介绍），变换到频域之后再求绝对值求和，同样称为cost，然后取cost最小的预测模式为最优预测模式。</li>\n<li>第三种方案，也可以对残差块直接进行DCT变换量化熵编码，计算得到失真大小和编码后的码流大小，然后通过<a href=\"https://www.jianshu.com/p/6f8be3709003?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation\">率失真优化</a>（作为课外内容自行学习，这里不展开讨论）的方法来选择最优预测模式。<br>\n为了让你更容易理解第三种方案，这里我稍微简单介绍一下率失真优化的思想<strong>。</strong></li>\n</ul><p>我们知道预测之后经过DCT变换再量化会丢失高频信息。一般来说QP越大，丢失的信息越多，失真就越大，但是码流大小也越小；反之，QP越小，丢失的信息越少，但是码流大小就越大。这是一个跷跷板。<strong>我们一般会在失真和码流大小之间平衡，尽量找到在一定码率下，失真最小的模式作为最优的预测模式，这就是率失真优化的思想</strong>。</p><p>其实还有很多不同的方案，比如有的为了加速模式选择的过程，率失真计算的时候，只会进行DCT变换和量化，不会进行熵编码。码流大小直接通过QP值估算或者使用预测模式的大小来代替。这些方案都可以，具体看编码器的实现。一般来说，选择过程越精细效果越好，但是速度会越慢。</p><p>通过上面讲的这些方法我们找到了每一个4 x 4块的最优模式之后，将这16个4 x 4块的cost加起来，与16 x 16块的最小cost对比，选择cost最小的块划分方式和预测模式作为帧内预测模式。</p><h2>小结</h2><p>好了，今天的课到这里就要结束了。我们来回顾一下这节课的主要内容。</p><p>我们主要是一起聊了聊帧内预测。我们先详细讲述了有哪几种预测模式，以及各种预测模式的预测块的计算方法。同时强调一点，就是有的模式在参考像素不存在的时候是无效的，也就是不能使用的。这一点需要注意，并不是列举出来的每一个模式都是可以使用的。</p><p>为了方便你记忆，下面我把每一种块和子块支持的预测模式用一个表格来总结一下。</p><p><img src=\"https://static001.geekbang.org/resource/image/ee/2d/eea93f2ace612181dfe81e34dd5e532d.jpg?wh=1280x720\" alt=\"\"><br>\n最后，我们还简单介绍了一下预测模式的选择方法，主要有计算残差块绝对值之和、将残差块做Hadamard变换之后再求和、率失真优化等几种方案来得到cost，然后我们取cost最小的模式作为帧内预测模式。</p><h2>思考题</h2><p>在H264标准里面，视频的第一帧的第一个块应该怎么选择预测模式呢？</p><p>你可以把你的答案留在评论区，和我一起探讨、交流，看看自己的理解是不是正确。下节课再见。</p>","neighbors":{"left":{"article_title":"05｜码流结构：原来你是这样的H264","id":461658},"right":{"article_title":"07｜帧间预测：如何减少时间冗余？","id":463775}},"comments":[{"had_liked":false,"id":324583,"user_name":"paradise","can_delete":false,"product_type":"c1","uid":2354314,"ip_address":"","ucode":"1CA1101E0A3106","user_header":"https://static001.geekbang.org/account/avatar/00/23/ec/8a/4de35fb7.jpg","comment_is_top":false,"comment_ctime":1638510520,"is_pvip":false,"replies":[{"id":"117917","content":"回答的非常棒","user_name":"作者回复","user_name_real":"编辑","uid":"2744713","ctime":1638784969,"ip_address":"","comment_id":324583,"utype":1}],"discussion_count":2,"race_medal":0,"score":"40293216184","product_id":100098901,"comment_content":"在 H264 标准里面，视频的第一帧的第一个块的左和上都是空，没法预测，所以设置成了一个约定值128，方便编码。这边找个几个264的码流，第一个I帧的第一个4*4 子块的yuv 预测值全都是128，大家也可以找个264的码流确认一下","like_count":10,"discussions":[{"author":{"id":2744713,"avatar":"https://static001.geekbang.org/account/avatar/00/29/e1/89/2bc80aa1.jpg","nickname":"叫什么好呢","note":"","ucode":"2A4069A23DE3B2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536437,"discussion_content":"回答的非常棒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638784969,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2851373,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/82/2d/54972e28.jpg","nickname":"杯面","note":"","ucode":"CF4699D93F64DB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559100,"discussion_content":"这样的话，是不是就等于第一个块做了DC预测？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648609278,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":327686,"user_name":"我有一条鱼","can_delete":false,"product_type":"c1","uid":2143357,"ip_address":"","ucode":"9581A06A0EAF3B","user_header":"https://static001.geekbang.org/account/avatar/00/20/b4/7d/9455f31a.jpg","comment_is_top":false,"comment_ctime":1640238149,"is_pvip":true,"replies":[{"id":"119336","content":"单纯从编码压缩性能来说是模式当然是越多越好。但是我们还要兼顾编码速度的。16 x 16的块一般用在相对平坦的区域，也就是细节相对少一些的区域，模式少一点对编码速度会好一些。而对于细节多的地方，我们需要更精细化编码，所以块也更小、模式也更多。","user_name":"作者回复","user_name_real":"编辑","uid":"2744713","ctime":1640310018,"ip_address":"","comment_id":327686,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31705009221","product_id":100098901,"comment_content":"想问一个问题：<br><br>4x4、16x16不同大小的块为什么会有不同的预测模式。<br><br>我理解预测模式只是参考不同方向已经编码过的块找出差异最小的，最容易变出更多0的方式。这样想的话是不是4x4的9种预测模式都是可以使用在16x16上的？还是说已经验证16x16上效果一定会很差？","like_count":8,"discussions":[{"author":{"id":2744713,"avatar":"https://static001.geekbang.org/account/avatar/00/29/e1/89/2bc80aa1.jpg","nickname":"叫什么好呢","note":"","ucode":"2A4069A23DE3B2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541237,"discussion_content":"单纯从编码压缩性能来说是模式当然是越多越好。但是我们还要兼顾编码速度的。16 x 16的块一般用在相对平坦的区域，也就是细节相对少一些的区域，模式少一点对编码速度会好一些。而对于细节多的地方，我们需要更精细化编码，所以块也更小、模式也更多。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640310018,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":328002,"user_name":"tony","can_delete":false,"product_type":"c1","uid":1131361,"ip_address":"","ucode":"1160371C7F473E","user_header":"https://static001.geekbang.org/account/avatar/00/11/43/61/eeefa369.jpg","comment_is_top":false,"comment_ctime":1640445997,"is_pvip":true,"replies":[{"id":"119625","content":"1、模式的选择其实最后是看cost的，其实在选择的时候并不会看平不平坦，因为一个16x16的块如果划分的话，要划分成16个4x4的块，每一个块都需要带模式等额外的信息也需要消耗码率，所以如果图像区域确实是平坦的，在模式选择的时候16x16的块计算出来的cost会比16个4x4总cost要小。所以我们一般会说平坦区域更适合16x16的大小，但实际上最后还是通过cost大小来判断的。<br>2、编码速度可以通过编码器的参数设置，比如x264可以通过preset来设置。设置速度快的话编码器内部会把一些编码工具关闭不使用它们。这样速度就快了，但是编码效果就差一些。","user_name":"作者回复","user_name_real":"编辑","uid":"2744713","ctime":1640744275,"ip_address":"","comment_id":328002,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10230380589","product_id":100098901,"comment_content":"帧内预测模式选择16x16或者4x4时，要综合考虑cost,编码速度，是否平坦等等，编码速度以及是否平坦是如何衡量的？","like_count":2,"discussions":[{"author":{"id":2744713,"avatar":"https://static001.geekbang.org/account/avatar/00/29/e1/89/2bc80aa1.jpg","nickname":"叫什么好呢","note":"","ucode":"2A4069A23DE3B2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542403,"discussion_content":"1、模式的选择其实最后是看cost的，其实在选择的时候并不会看平不平坦，因为一个16x16的块如果划分的话，要划分成16个4x4的块，每一个块都需要带模式等额外的信息也需要消耗码率，所以如果图像区域确实是平坦的，在模式选择的时候16x16的块计算出来的cost会比16个4x4总cost要小。所以我们一般会说平坦区域更适合16x16的大小，但实际上最后还是通过cost大小来判断的。\n2、编码速度可以通过编码器的参数设置，比如x264可以通过preset来设置。设置速度快的话编码器内部会把一些编码工具关闭不使用它们。这样速度就快了，但是编码效果就差一些。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640744275,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":348301,"user_name":"翔链智深","can_delete":false,"product_type":"c1","uid":2152426,"ip_address":"","ucode":"BBE72D807C4B5F","user_header":"https://static001.geekbang.org/account/avatar/00/20/d7/ea/47209efd.jpg","comment_is_top":false,"comment_ctime":1654945597,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5949912893","product_id":100098901,"comment_content":"老师问下，如何断绝预测块的误差蔓延（比如说上一个的预测块不准确编码成为编码块，后续的预测块在这已编码有误差的编码块的基础上进行预测，好比帧间预测有IDR帧，那帧内是否也有这个机制）","like_count":1},{"had_liked":false,"id":332279,"user_name":"余健辉","can_delete":false,"product_type":"c1","uid":1694237,"ip_address":"","ucode":"2150C89CF66ADC","user_header":"https://wx.qlogo.cn/mmopen/vi_32/yBBhL9I6vian2PMOo7xnibKp8EibiaCrqfXibk5YOQSfzyjfZPGnUqHy1x1ibVIVYddMnibFJlpJibutAicXsZibwqskFoibw/132","comment_is_top":false,"comment_ctime":1643154530,"is_pvip":false,"replies":[{"id":"121524","content":"四舍五入","user_name":"作者回复","user_name_real":"编辑","uid":"2744713","ctime":1643422530,"ip_address":"","comment_id":332279,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5938121826","product_id":100098901,"comment_content":"老师，想请问下后面的计算公式中为什么几个像素值加上后还要加上4或者2或者1再去做除法呢，对这一点有点疑惑","like_count":1,"discussions":[{"author":{"id":2744713,"avatar":"https://static001.geekbang.org/account/avatar/00/29/e1/89/2bc80aa1.jpg","nickname":"叫什么好呢","note":"","ucode":"2A4069A23DE3B2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548845,"discussion_content":"四舍五入","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643422530,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":330231,"user_name":"chao","can_delete":false,"product_type":"c1","uid":1358527,"ip_address":"","ucode":"AE1DBB0592747C","user_header":"https://static001.geekbang.org/account/avatar/00/14/ba/bf/e9a44c63.jpg","comment_is_top":false,"comment_ctime":1641872633,"is_pvip":false,"replies":[{"id":"120611","content":"所以一般会有多种编码速度供你选择，在快速档会有一些快速算法根据块和周边块的像素特点提前判断编码模式，得到的就不一定是最优解。在慢速档就可能会每种模式都遍历得到的就是最优解。这也是我在第一节课说的，不是码率高就清晰度高。","user_name":"作者回复","user_name_real":"编辑","uid":"2744713","ctime":1642135501,"ip_address":"","comment_id":330231,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5936839929","product_id":100098901,"comment_content":"是每个块都要做帧内预测模式选择吗？<br>如果是的话，感觉计算量很大，假如都是4*4的块，每个块都要计算9遍然后选出一个最优的。","like_count":2,"discussions":[{"author":{"id":2744713,"avatar":"https://static001.geekbang.org/account/avatar/00/29/e1/89/2bc80aa1.jpg","nickname":"叫什么好呢","note":"","ucode":"2A4069A23DE3B2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546040,"discussion_content":"所以一般会有多种编码速度供你选择，在快速档会有一些快速算法根据块和周边块的像素特点提前判断编码模式，得到的就不一定是最优解。在慢速档就可能会每种模式都遍历得到的就是最优解。这也是我在第一节课说的，不是码率高就清晰度高。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642135501,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":328186,"user_name":"Digitalization","can_delete":false,"product_type":"c1","uid":1488654,"ip_address":"","ucode":"3596FAAF46D4D6","user_header":"https://static001.geekbang.org/account/avatar/00/16/b7/0e/739fd98a.jpg","comment_is_top":false,"comment_ctime":1640594184,"is_pvip":false,"replies":[{"id":"119536","content":"因为编码器代码一般都是用移位操作的，养成这个习惯吧。","user_name":"作者回复","user_name_real":"编辑","uid":"2744713","ctime":1640664381,"ip_address":"","comment_id":328186,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5935561480","product_id":100098901,"comment_content":"算平均值偏要写成移位操作，不容易看懂啊","like_count":1,"discussions":[{"author":{"id":2744713,"avatar":"https://static001.geekbang.org/account/avatar/00/29/e1/89/2bc80aa1.jpg","nickname":"叫什么好呢","note":"","ucode":"2A4069A23DE3B2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542091,"discussion_content":"因为编码器代码一般都是用移位操作的，养成这个习惯吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640664381,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2775048,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/58/08/b650aee8.jpg","nickname":"史佳宾","note":"","ucode":"FB9F5C5D583C4F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":569300,"discussion_content":"是个程序员都能看懂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651397878,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":355230,"user_name":"FamliarMan","can_delete":false,"product_type":"c1","uid":1522744,"ip_address":"浙江","ucode":"B00785A8ADD076","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/pkI3vYPe1A1h1ic3Eha4d7JruOia4aSHic5JZ7FnknmAY3KXlvbDdPmHzmYiasGDicSIgc4pAYza54gnlx4oppKSrTQ/132","comment_is_top":false,"comment_ctime":1661215123,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661215123","product_id":100098901,"comment_content":"有几个问题没能理解，第一，第一帧的第一个编码块如何确定；第二，我们如何确定相邻的块一定是连续的，万一遇到那种泾渭分明的呢？所以是不是有什么算法用来确认相邻块可以预测？","like_count":0},{"had_liked":false,"id":349904,"user_name":"lytasky","can_delete":false,"product_type":"c1","uid":1030795,"ip_address":"","ucode":"0DE734CC8905EC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epRbLialbyRpe7ibxCfJT0VDJNnFSicQ6t8MjGMI5gAMSxk8CFVzhkEd9COxGCgVdDf1tUHTNVTXibxcQ/132","comment_is_top":false,"comment_ctime":1656420647,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1656420647","product_id":100098901,"comment_content":"请教下：有个疑问：<br>比如 4*4 Vertical 模式，A B C 是从上到下的3个快  。  B的每一列都取A最下面一行(a,b,c,d)的像素值，则B的4列分别为全a,全b,全c,全d，那么C的每一列应该取B最下面一行的像素值，则C的4列是不是也是全a,全b,全c,全d，以此类推，再往下D、E、F都是这样的？  是我理解错了吗？","like_count":0},{"had_liked":false,"id":348299,"user_name":"翔链智深","can_delete":false,"product_type":"c1","uid":2152426,"ip_address":"","ucode":"BBE72D807C4B5F","user_header":"https://static001.geekbang.org/account/avatar/00/20/d7/ea/47209efd.jpg","comment_is_top":false,"comment_ctime":1654944754,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1654944754","product_id":100098901,"comment_content":"老师，问下如何选定采用4*4还是16*16的宏块（一般图像更多细节的时候选4*4？那么怎么判断图像更多细节复杂？）","like_count":0},{"had_liked":false,"id":341683,"user_name":"A君","can_delete":false,"product_type":"c1","uid":1940105,"ip_address":"","ucode":"FE96F089C2312C","user_header":"https://static001.geekbang.org/account/avatar/00/1d/9a/89/babe8b52.jpg","comment_is_top":false,"comment_ctime":1649767939,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1649767939","product_id":100098901,"comment_content":"帧内预测，用已经编码好的子块预测相邻块，可以减小码流大小。","like_count":0},{"had_liked":false,"id":337355,"user_name":"ilio","can_delete":false,"product_type":"c1","uid":2851538,"ip_address":"","ucode":"0B4C283737BABD","user_header":"https://static001.geekbang.org/account/avatar/00/2b/82/d2/43feb99f.jpg","comment_is_top":false,"comment_ctime":1646788914,"is_pvip":false,"replies":[{"id":"123458","content":"是不一样的","user_name":"作者回复","user_name_real":"编辑","uid":"2744713","ctime":1647048639,"ip_address":"","comment_id":337355,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1646788914","product_id":100098901,"comment_content":"请教一下老师，一帧里边每个宏块的预测模式都是不一样的吗","like_count":0,"discussions":[{"author":{"id":2744713,"avatar":"https://static001.geekbang.org/account/avatar/00/29/e1/89/2bc80aa1.jpg","nickname":"叫什么好呢","note":"","ucode":"2A4069A23DE3B2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555726,"discussion_content":"是不一样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647048639,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":332439,"user_name":"T------T","can_delete":false,"product_type":"c1","uid":2270365,"ip_address":"","ucode":"AC68D88893FAD7","user_header":"https://static001.geekbang.org/account/avatar/00/22/a4/9d/95900f70.jpg","comment_is_top":false,"comment_ctime":1643251053,"is_pvip":true,"replies":[{"id":"122331","content":"是的，因为其他方向对应的位置的块是没有编码，因此不能用来做参考","user_name":"作者回复","user_name_real":"编辑","uid":"2744713","ctime":1645196416,"ip_address":"","comment_id":332439,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1643251053","product_id":100098901,"comment_content":"老师好，我看到4X4 模式下有9中预测模式。但是参考方向只有左、左上、上、右上。<br>实际编码过程中是否是：<br>从左上角开始，按行从左至右逐个计算每个宏块的像素值？","like_count":0,"discussions":[{"author":{"id":2744713,"avatar":"https://static001.geekbang.org/account/avatar/00/29/e1/89/2bc80aa1.jpg","nickname":"叫什么好呢","note":"","ucode":"2A4069A23DE3B2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551977,"discussion_content":"是的，因为其他方向对应的位置的块是没有编码，因此不能用来做参考","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645196416,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":329335,"user_name":"易水南风","can_delete":false,"product_type":"c1","uid":1123818,"ip_address":"","ucode":"A2A0F18228A5D0","user_header":"https://static001.geekbang.org/account/avatar/00/11/25/ea/ec869117.jpg","comment_is_top":false,"comment_ctime":1641288639,"is_pvip":false,"replies":[{"id":"120068","content":"预测使用的参考像素都是已经编码好了的像素，就是编码模式已经定了的。这些参考像素在编码的时候也是预测编码得到的。","user_name":"作者回复","user_name_real":"编辑","uid":"2744713","ctime":1641457366,"ip_address":"","comment_id":329335,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1641288639","product_id":100098901,"comment_content":"老师，每个宏块的预测中的参考像素都是非预测的么？还是也可以是预测的？","like_count":0,"discussions":[{"author":{"id":2744713,"avatar":"https://static001.geekbang.org/account/avatar/00/29/e1/89/2bc80aa1.jpg","nickname":"叫什么好呢","note":"","ucode":"2A4069A23DE3B2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544284,"discussion_content":"预测使用的参考像素都是已经编码好了的像素，就是编码模式已经定了的。这些参考像素在编码的时候也是预测编码得到的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641457366,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":327756,"user_name":"扁担","can_delete":false,"product_type":"c1","uid":1266540,"ip_address":"","ucode":"95B78342FD1893","user_header":"https://static001.geekbang.org/account/avatar/00/13/53/6c/46c4efb0.jpg","comment_is_top":false,"comment_ctime":1640270080,"is_pvip":false,"replies":[{"id":"119332","content":"是的","user_name":"作者回复","user_name_real":"编辑","uid":"2744713","ctime":1640309505,"ip_address":"","comment_id":327756,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1640270080","product_id":100098901,"comment_content":"16x16中的16 是指16个像素吗","like_count":0,"discussions":[{"author":{"id":2744713,"avatar":"https://static001.geekbang.org/account/avatar/00/29/e1/89/2bc80aa1.jpg","nickname":"叫什么好呢","note":"","ucode":"2A4069A23DE3B2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541232,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640309505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":327601,"user_name":"！null","can_delete":false,"product_type":"c1","uid":1242483,"ip_address":"","ucode":"4E5B7922980397","user_header":"https://static001.geekbang.org/account/avatar/00/12/f5/73/f7d3a996.jpg","comment_is_top":false,"comment_ctime":1640186332,"is_pvip":false,"replies":[{"id":"119335","content":"不好意思，这个地方确实是错误的，我修改一下。谢谢兄弟提醒","user_name":"作者回复","user_name_real":"编辑","uid":"2744713","ctime":1640309828,"ip_address":"","comment_id":327601,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1640186332","product_id":100098901,"comment_content":"Plane我是里边，预测块计算公式里好像没用到前边算出来的中间变量。","like_count":0,"discussions":[{"author":{"id":2744713,"avatar":"https://static001.geekbang.org/account/avatar/00/29/e1/89/2bc80aa1.jpg","nickname":"叫什么好呢","note":"","ucode":"2A4069A23DE3B2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541235,"discussion_content":"不好意思，这个地方确实是错误的，我修改一下。谢谢兄弟提醒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640309829,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":327586,"user_name":"J","can_delete":false,"product_type":"c1","uid":1118252,"ip_address":"","ucode":"0CAB1969668F69","user_header":"https://static001.geekbang.org/account/avatar/00/11/10/2c/330651c8.jpg","comment_is_top":false,"comment_ctime":1640183861,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640183861","product_id":100098901,"comment_content":"DC 模式的第四种模式😂","like_count":0},{"had_liked":false,"id":324965,"user_name":"写点啥呢","can_delete":false,"product_type":"c1","uid":1065272,"ip_address":"","ucode":"C19032CF1C41BA","user_header":"https://static001.geekbang.org/account/avatar/00/10/41/38/4f89095b.jpg","comment_is_top":false,"comment_ctime":1638760814,"is_pvip":false,"replies":[{"id":"117914","content":"需要的","user_name":"作者回复","user_name_real":"编辑","uid":"2744713","ctime":1638784762,"ip_address":"","comment_id":324965,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1638760814","product_id":100098901,"comment_content":"请教下老师，在编码过程中每个块对应的预测模式是否也需要编码到码流中呢，这样解码方可以根据模式进行相同操作得到预测块，加上残差后得到实际的像素信息？","like_count":0,"discussions":[{"author":{"id":2744713,"avatar":"https://static001.geekbang.org/account/avatar/00/29/e1/89/2bc80aa1.jpg","nickname":"叫什么好呢","note":"","ucode":"2A4069A23DE3B2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536432,"discussion_content":"需要的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638784762,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1065272,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/38/4f89095b.jpg","nickname":"写点啥呢","note":"","ucode":"C19032CF1C41BA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2744713,"avatar":"https://static001.geekbang.org/account/avatar/00/29/e1/89/2bc80aa1.jpg","nickname":"叫什么好呢","note":"","ucode":"2A4069A23DE3B2","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":536435,"discussion_content":"了解，谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638784874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":536432,"ip_address":""},"score":536435,"extra":""}]},{"author":{"id":1131361,"avatar":"https://static001.geekbang.org/account/avatar/00/11/43/61/eeefa369.jpg","nickname":"tony","note":"","ucode":"1160371C7F473E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541557,"discussion_content":"16x16块在宏块类型中包含有预测模式。4x4块还可以通过相邻块的预测模式预测。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640445308,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":324675,"user_name":"Geek_7de4c5","can_delete":false,"product_type":"c1","uid":2762698,"ip_address":"","ucode":"47266BE542AE9B","user_header":"","comment_is_top":false,"comment_ctime":1638538184,"is_pvip":false,"replies":[{"id":"117915","content":"没有吧，你再确认一下？","user_name":"作者回复","user_name_real":"编辑","uid":"2744713","ctime":1638784846,"ip_address":"","comment_id":324675,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1638538184","product_id":100098901,"comment_content":"老师<br>亮度4x4 DC模式<br>第二种情况是上边块不存在，左边块存在的话，预测块像素计算公式<br>第三种情况是左边块不存在，上边块存在的话，预测块像素计算公式<br>这两个公式是否搞反了呢？","like_count":0,"discussions":[{"author":{"id":2744713,"avatar":"https://static001.geekbang.org/account/avatar/00/29/e1/89/2bc80aa1.jpg","nickname":"叫什么好呢","note":"","ucode":"2A4069A23DE3B2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536434,"discussion_content":"没有吧，你再确认一下？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638784846,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":324592,"user_name":"晓龙","can_delete":false,"product_type":"c1","uid":1004576,"ip_address":"","ucode":"78CDCEBD183D3A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/20/93c79f7c.jpg","comment_is_top":false,"comment_ctime":1638513288,"is_pvip":false,"replies":[{"id":"117916","content":"选择DC模式，可以看DC模式小节具体的计算公式，当没有参考像素的时候也可以使用DC模式，值都是128","user_name":"作者回复","user_name_real":"编辑","uid":"2744713","ctime":1638784940,"ip_address":"","comment_id":324592,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1638513288","product_id":100098901,"comment_content":"在 H264 标准里面，视频的第一帧的第一个块应该怎么选择预测模式呢？<br><br>或者这里在图像边缘加上一圈 padding 空像素，然后选择一种预测模式。","like_count":0,"discussions":[{"author":{"id":2744713,"avatar":"https://static001.geekbang.org/account/avatar/00/29/e1/89/2bc80aa1.jpg","nickname":"叫什么好呢","note":"","ucode":"2A4069A23DE3B2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536436,"discussion_content":"选择DC模式，可以看DC模式小节具体的计算公式，当没有参考像素的时候也可以使用DC模式，值都是128","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638784940,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":324591,"user_name":"晓龙","can_delete":false,"product_type":"c1","uid":1004576,"ip_address":"","ucode":"78CDCEBD183D3A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/20/93c79f7c.jpg","comment_is_top":false,"comment_ctime":1638513205,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638513205","product_id":100098901,"comment_content":"帧内预测是解决空间冗余，DCT和QT是解决信息熵编冗余，他们的顺序是先用DCT，QT编码后，在利用帧内编码？也就是开头老师提到的，帧内预测是用已经编码了的像素值预测帧内块的像素值。<br><br>这里有个疑问，如果只考虑帧内和信息熵编码两个步骤：信息熵编码 -&gt; 解码 - &gt; 帧内预测编码 -&gt; 信息熵编码 -&gt; 解码 -&gt; 帧内预测编码 .... 是这么个循环么？<br><br>如果是这个循环的话，那是不是H264 I帧第一个块是不是没有帧内预测，而是直接编码，然后成为后面块的对照块？","like_count":0},{"had_liked":false,"id":324556,"user_name":"写点啥呢","can_delete":false,"product_type":"c1","uid":1065272,"ip_address":"","ucode":"C19032CF1C41BA","user_header":"https://static001.geekbang.org/account/avatar/00/10/41/38/4f89095b.jpg","comment_is_top":false,"comment_ctime":1638500222,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1638500222","product_id":100098901,"comment_content":"请问老师，我理解帧内预测是从已编码块迭代的产生其它各个预测块的预测结果，这样会不会出现误差累积。特别是Vertical和Horizontal这两种，感觉预测完成出了起始编码块外，其它各块的值都是一样了。请老师指点下","like_count":0,"discussions":[{"author":{"id":2328798,"avatar":"https://static001.geekbang.org/account/avatar/00/23/88/de/04784f86.jpg","nickname":"ForwardsHao","note":"","ucode":"AFB29B5B9F0C22","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536074,"discussion_content":"每个块都会跟多个预测模式比较才会选出一个模式为最优预测模式的，而且选出来的预测块都是最接近原编码块的。前一个块选出了Vertical为最优预测模式后，下一个块的最优预测大概率不会为Vertical，如果也是，那就说明这两个待编码块本身就是很相似的。你的这个问题是以为一个块选成一种模式后，其他块也都会保持这种模式，实际每个块是单独选的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638675426,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1065272,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/38/4f89095b.jpg","nickname":"写点啥呢","note":"","ucode":"C19032CF1C41BA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2328798,"avatar":"https://static001.geekbang.org/account/avatar/00/23/88/de/04784f86.jpg","nickname":"ForwardsHao","note":"","ucode":"AFB29B5B9F0C22","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536149,"discussion_content":"感谢感谢，明白了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638699036,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":536074,"ip_address":""},"score":536149,"extra":""}]}]},{"had_liked":false,"id":324520,"user_name":"案阁","can_delete":false,"product_type":"c1","uid":1120895,"ip_address":"","ucode":"9019382F494EA2","user_header":"https://static001.geekbang.org/account/avatar/00/11/1a/7f/99c989c4.jpg","comment_is_top":false,"comment_ctime":1638489370,"is_pvip":false,"replies":[{"id":"117919","content":"以最终划分的块为单位选择模式的。不是以帧为单位。","user_name":"作者回复","comment_id":324520,"uid":"2744713","ip_address":"","utype":1,"ctime":1638785080,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1638489370","product_id":100098901,"comment_content":"想问一下，选预测模式是每帧的每块都进行一次吗？还是第一个帧选定之后就不变了？","like_count":0,"discussions":[{"author":{"id":2744713,"avatar":"https://static001.geekbang.org/account/avatar/00/29/e1/89/2bc80aa1.jpg","nickname":"叫什么好呢","note":"","ucode":"2A4069A23DE3B2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536439,"discussion_content":"以最终划分的块为单位选择模式的。不是以帧为单位。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638785080,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}