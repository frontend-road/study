{"id":605128,"title":"18｜内置数据类型包括哪几种？","content":"<p><strong>课后习题</strong><br>\n请你根据以下需求，选择一个合适的数据类型。</p><ol>\n<li>开发通讯录工具，需要存储姓名和手机号码。</li>\n<li>开发电商程序，需要存储商品的种类。</li>\n<li>开发游戏，需要存储一段与 NPC 的对话。</li>\n</ol><p>欢迎加入课程交流群：<a href=\"https://jinshuju.net/f/C8csQq\">https://jinshuju.net/f/C8csQq</a></p><p><strong>课程代码、课件及其他相关资料地址</strong><br>\n<a href=\"https://gitee.com/wilsonyin/zero-basics-python\">https://gitee.com/wilsonyin/zero-basics-python</a></p>","comments":[{"had_liked":false,"id":377280,"user_name":"lodestar","can_delete":false,"product_type":"c3","uid":1370431,"ip_address":"甘肃","ucode":"8965336601E7CD","user_header":"https://static001.geekbang.org/account/avatar/00/14/e9/3f/fcd2740c.jpg","comment_is_top":false,"comment_ctime":1688231488,"is_pvip":false,"replies":[{"id":137568,"content":"Python是支持哈希（hash）的。在Python中，可以使用内置的哈希函数或通过实现自定义的哈希函数来进行哈希操作。\n对于内置的哈希函数，你可以使用`hash()`来对大多数Python的内置数据类型进行哈希操作。例如，你可以对字符串、整数、浮点数等类型进行哈希：\n\nprint(hash(&quot;hello&quot;))\nprint(hash(42))\nprint(hash(3.14))\nUser Avatar\n是的，Python是支持哈希（hash）的。在Python中，可以使用内置的哈希函数或通过实现自定义的哈希函数来进行哈希操作。\n对于内置的哈希函数，你可以使用`hash()`来对大多数Python的内置数据类型进行哈希操作。例如，你可以对字符串、整数、浮点数等类型进行哈希：\n\n                    \n\nprint(hash(&quot;hello&quot;))\nprint(hash(42))\nprint(hash(3.14))\n\n                  \n\n这些内置函数会返回对象的哈希值，通常是一个整数。需要注意的是，哈希值是对应于对象的一种表示，具有唯一性和不可逆性。同一对象每次哈希的结果应该是一样的。\n此外，Python还提供了一些可哈希的内置类型，如字典（dict）和集合（set）的变种，即字典的键和集合的元素必须是可哈希的。\n如果需要自定义哈希函数，你可以通过实现`__hash__()`方法来定义自己的哈希算法。该方法应该返回一个整数作为对象的哈希值。\nclass MyClass:\n    def __init__(self, value):\n        self.value = value\n    \n    def __hash__(self):\n        return hash(self.value)\n\nobj = MyClass(42)\nprint(hash(obj))\n上述示例中，我们在自定义的类`MyClass`中实现了`__hash__()`方法，使其返回对象`value`的哈希值。这样就可以通过调用`hash(obj)`来获取对象的哈希值。\n需要注意的是，对象的哈希值与其内容密切相关。如果是可变对象，即内容可变的对象，在对象被修改后，它的哈希值可能会改变。为了避免将可变对象用作哈希键或元素，可以考虑使用不可变的数据类型，如字符串或元组。","user_name":"作者回复","user_name_real":"编辑","uid":1056235,"ctime":1688722880,"ip_address":"广东","comment_id":377280,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"老师，python支持hash吗","like_count":0,"discussions":[{"author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":622845,"discussion_content":"Python是支持哈希（hash）的。在Python中，可以使用内置的哈希函数或通过实现自定义的哈希函数来进行哈希操作。\n对于内置的哈希函数，你可以使用`hash()`来对大多数Python的内置数据类型进行哈希操作。例如，你可以对字符串、整数、浮点数等类型进行哈希：\n\nprint(hash(&#34;hello&#34;))\nprint(hash(42))\nprint(hash(3.14))\nUser Avatar\n是的，Python是支持哈希（hash）的。在Python中，可以使用内置的哈希函数或通过实现自定义的哈希函数来进行哈希操作。\n对于内置的哈希函数，你可以使用`hash()`来对大多数Python的内置数据类型进行哈希操作。例如，你可以对字符串、整数、浮点数等类型进行哈希：\n\n                    \n\nprint(hash(&#34;hello&#34;))\nprint(hash(42))\nprint(hash(3.14))\n\n                  \n\n这些内置函数会返回对象的哈希值，通常是一个整数。需要注意的是，哈希值是对应于对象的一种表示，具有唯一性和不可逆性。同一对象每次哈希的结果应该是一样的。\n此外，Python还提供了一些可哈希的内置类型，如字典（dict）和集合（set）的变种，即字典的键和集合的元素必须是可哈希的。\n如果需要自定义哈希函数，你可以通过实现`__hash__()`方法来定义自己的哈希算法。该方法应该返回一个整数作为对象的哈希值。\nclass MyClass:\n    def __init__(self, value):\n        self.value = value\n    \n    def __hash__(self):\n        return hash(self.value)\n\nobj = MyClass(42)\nprint(hash(obj))\n上述示例中，我们在自定义的类`MyClass`中实现了`__hash__()`方法，使其返回对象`value`的哈希值。这样就可以通过调用`hash(obj)`来获取对象的哈希值。\n需要注意的是，对象的哈希值与其内容密切相关。如果是可变对象，即内容可变的对象，在对象被修改后，它的哈希值可能会改变。为了避免将可变对象用作哈希键或元素，可以考虑使用不可变的数据类型，如字符串或元组。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1688722880,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":364084,"user_name":"白开水","can_delete":false,"product_type":"c3","uid":1955459,"ip_address":"广东","ucode":"2E05353E8D9317","user_header":"https://static001.geekbang.org/account/avatar/00/1d/d6/83/bd4a8410.jpg","comment_is_top":false,"comment_ctime":1670506483,"is_pvip":false,"replies":[{"id":133098,"content":"数据类型的划分，其实是多个数据类型有相似的特征，才将它们划分成一组，比如列表和元组、字符串它们三个都能索引，所以作者将索引作为序列的特性，将列表、元组、字符串归属到序列这一组。实际上每个数据类型都有其特有的能力。\n\n算法的话，语言也只做底层的支持，即判断、循环、递归，更高层次的还是得看具体实现的数据类型用了哪些算法。这个没有在语言层面具体划分过","user_name":"作者回复","user_name_real":"编辑","uid":1056235,"ctime":1672486387,"ip_address":"广东","comment_id":364084,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"算法涉及到的哈希，二叉树等这里没有涉及，这些是怎么划分的","like_count":0,"discussions":[{"author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":598069,"discussion_content":"数据类型的划分，其实是多个数据类型有相似的特征，才将它们划分成一组，比如列表和元组、字符串它们三个都能索引，所以作者将索引作为序列的特性，将列表、元组、字符串归属到序列这一组。实际上每个数据类型都有其特有的能力。\n\n算法的话，语言也只做底层的支持，即判断、循环、递归，更高层次的还是得看具体实现的数据类型用了哪些算法。这个没有在语言层面具体划分过","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1672486387,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":363675,"user_name":"Geek_da56ed","can_delete":false,"product_type":"c3","uid":3225865,"ip_address":"广东","ucode":"A634356B9F21D1","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/6rjYPc6Myu9S2oyXJ6fScnaXT4iceN7eAxAgDMSmXIZiaXhD9HXPQ773tYHYErpV6bP6t9EehOu6iad7Cl9Q4AvMQ/132","comment_is_top":false,"comment_ctime":1669970704,"is_pvip":false,"replies":[{"id":132292,"content":"首先， range 是具体的数据类型，也就是说，可以使用 range() 函数直接产生一个数值范围，而序列和映射是指的有相同特性的一组数据类型， 比如字符串 元组 都可以通过下标访问， 那么 字符串和元组都有下标访问特性， 序列就是包含了下标、切片、包含特性的三个具体数据类型组成的，序列中包含了列表、元组和range。\n\nrange()独特的特性，应该就是它总是占用比较小的内存，不管定义的范围有多大，每次只根据定义的数值范围产生一个数值（访问一次，产生一个数值）。这是我们一般使用range() 关注的最重要的特性。\n\n关于range() 其他特性，可以参考官方文档\nhttps:&#47;&#47;docs.python.org&#47;zh-cn&#47;3&#47;library&#47;stdtypes.html#range","user_name":"作者回复","user_name_real":"编辑","uid":1056235,"ctime":1670394063,"ip_address":"广东","comment_id":363675,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"请问老师range和序列与映射相比，有什么独特的特性吗？","like_count":0,"discussions":[{"author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":595816,"discussion_content":"首先， range 是具体的数据类型，也就是说，可以使用 range() 函数直接产生一个数值范围，而序列和映射是指的有相同特性的一组数据类型， 比如字符串 元组 都可以通过下标访问， 那么 字符串和元组都有下标访问特性， 序列就是包含了下标、切片、包含特性的三个具体数据类型组成的，序列中包含了列表、元组和range。\n\nrange()独特的特性，应该就是它总是占用比较小的内存，不管定义的范围有多大，每次只根据定义的数值范围产生一个数值（访问一次，产生一个数值）。这是我们一般使用range() 关注的最重要的特性。\n\n关于range() 其他特性，可以参考官方文档\nhttps://docs.python.org/zh-cn/3/library/stdtypes.html#range","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1670394063,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":363152,"user_name":"xinn","can_delete":false,"product_type":"c3","uid":2809426,"ip_address":"广东","ucode":"4F1F78839D3C9B","user_header":"https://static001.geekbang.org/account/avatar/00/2a/de/52/816a6bc3.jpg","comment_is_top":false,"comment_ctime":1669294133,"is_pvip":false,"replies":[{"id":132308,"content":"3 当然可以","user_name":"作者回复","user_name_real":"编辑","uid":1056235,"ctime":1670395310,"ip_address":"广东","comment_id":363152,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"1、字典\n2、列表\n3、用string可以吗？ 看大家都用元祖","like_count":0,"discussions":[{"author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":595832,"discussion_content":"3 当然可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1670395310,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":378259,"user_name":"凡之","can_delete":false,"product_type":"c3","uid":2863876,"ip_address":"北京","ucode":"1EA24BB5780C5C","user_header":"https://static001.geekbang.org/account/avatar/00/2b/b3/04/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1689953554,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"#请你根据以下需求，选择一个合适的数据类型。\n\n开发通讯录工具，需要存储姓名和手机号码。\n#dict类型比较适合比如：{&#39;小明&#39;:&#39;188888888&#39;,&#39;小红&#39;:&#39;aaaaaaa&#39;}\n开发电商程序，需要存储商品的种类。\n#这个得看数据存储方式了 单独存储列表也可以满足 比如 [&#39;数码&#39;,&#39;日用&#39;，&#39;清洁&#39;]\n#要求关联性的话 {&#39;数码&#39;:[&#39;耳机&#39;,&#39;相机&#39;],&#39;日用&#39;:[&#39;牙膏&#39;]}\n开发游戏，需要存储一段与 NPC 的对话。\n#列表里边套字典比较合适比如现在比较火的gpt就有传递历史会话的需求 [{&#39;role&#39;:&#39;system&#39;,&#39;content&#39;: &quot;你是一个乐于助手的助手&quot;},{&#39;role&#39;:&#39;user&#39;,&#39;content&#39;: &quot;你是谁&quot;}]","like_count":2,"discussions":[{"author":{"id":3660480,"avatar":"https://static001.geekbang.org/account/avatar/00/37/da/c0/70270f3a.jpg","nickname":"Phantom","note":"","ucode":"D9A3B38AE4F9AC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628627,"discussion_content":"太棒了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695635402,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"陕西","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":384662,"user_name":"Geek_1e9b5c","can_delete":false,"product_type":"c3","uid":3786954,"ip_address":"广东","ucode":"C634A7C49DFE9B","user_header":"","comment_is_top":false,"comment_ctime":1701312740,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"# 常用的数据类型包括数字、字符串、序列、映射\n# 序列中列表和元祖最常用，映射中字典最常用\n# 从非结构化数据到半结构数据再到结构化数据，满足日常的数据处理需求\n\n# 1.开发通讯录工具，需要存储姓名和手机号码\naddress_book_dict = {&quot;张三&quot;:[110,120,12315],\n                     &quot;李四&quot;:[110,120,12315],\n                     &quot;王麻子&quot;:[110,120,12315]\n                    }\nprint(address_book_dict)\n\n# 2.开发电商程序，需要存储商品的种类\ncategories = [&quot;电子产品&quot;, &quot;家居用品&quot;, &quot;图书&quot;, &quot;服装&quot;, &quot;食品&quot;, &quot;玩具&quot;, &quot;化妆品&quot;, &quot;运动用品&quot;, &quot;汽车配件&quot;, &quot;医疗用品&quot;]\nprint(categories)\n\n# 3.开发游戏，需要存储一段与 NPC 的对话\nchats = [\n    &quot;NPC: 你好呀&quot;,\n    &quot;YOU: 我很好，你好吗&quot;,\n    &quot;NPC: 我也很好，谢谢你。有什么可以帮到你吗？&quot;,\n    &quot;YOU: 没有的，谢谢你&quot;\n]\nprint(chats)\n\nchats_tuple = [{&quot;NPC&quot;:&quot;你好呀&quot;, &quot;YOU&quot;: &quot;我很好，你好吗&quot;},\n               {&quot;NPC&quot;:&quot;我也很好，谢谢你。有什么可以帮到你吗？&quot;, &quot;YOU&quot;: &quot;没有的，谢谢你&quot;}]\nprint(chats_tuple)","like_count":1},{"had_liked":false,"id":392380,"user_name":"莫扎特","can_delete":false,"product_type":"c3","uid":3824954,"ip_address":"安徽","ucode":"D642BCAE66C960","user_header":"https://static001.geekbang.org/account/avatar/00/3a/5d/3a/a4abb3ab.jpg","comment_is_top":false,"comment_ctime":1720754358,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"字典，列表，元组","like_count":0},{"had_liked":false,"id":384230,"user_name":"依托答辩","can_delete":false,"product_type":"c3","uid":2383299,"ip_address":"上海","ucode":"4BE79E8A030813","user_header":"https://static001.geekbang.org/account/avatar/00/24/5d/c3/b8bb888c.jpg","comment_is_top":false,"comment_ctime":1700557557,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"1、字典\n2、列表\n3、字典","like_count":0},{"had_liked":false,"id":384197,"user_name":"Mr.Tree","can_delete":false,"product_type":"c3","uid":2704444,"ip_address":"四川","ucode":"84712B0436EC6F","user_header":"https://static001.geekbang.org/account/avatar/00/29/44/3c/8bb9e8b4.jpg","comment_is_top":false,"comment_ctime":1700491895,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"想问一下老师：算法中的数据类型指的是通过语法使用基础的数据类型实现的高级复杂数据类型吗？比如链表、树","like_count":0},{"had_liked":false,"id":380191,"user_name":"张驰皓","can_delete":false,"product_type":"c3","uid":1048028,"ip_address":"北京","ucode":"448CAA944097E6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fd/dc/245fee32.jpg","comment_is_top":false,"comment_ctime":1693192402,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"1. 字典\n2. 字符串\n3. 列表（list）或者字符串","like_count":0},{"had_liked":false,"id":372709,"user_name":"浪客剑心","can_delete":false,"product_type":"c3","uid":1010152,"ip_address":"浙江","ucode":"669FC45EFE364A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/69/e8/1eed6544.jpg","comment_is_top":false,"comment_ctime":1681459675,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"1、字典\n2、列表\n3、元组","like_count":0},{"had_liked":false,"id":368853,"user_name":"GeekNeo","can_delete":false,"product_type":"c3","uid":1146405,"ip_address":"浙江","ucode":"1D355A9BEB8BEA","user_header":"https://static001.geekbang.org/account/avatar/00/11/7e/25/3932dafd.jpg","comment_is_top":false,"comment_ctime":1676805556,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"可以理解为容器，可变容器：list dict，不可变容器tuple，set。\n上面的问答可以理解为为这些工具的数据设置那种容器：\ndict\nlist\ntuple或者str都可以","like_count":0},{"had_liked":false,"id":365724,"user_name":"yanyu-xin","can_delete":false,"product_type":"c3","uid":1899757,"ip_address":"广东","ucode":"3AA389F9E4C236","user_header":"","comment_is_top":false,"comment_ctime":1672927387,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"1、用 dict，key是姓名，value用list 存多个电话号码\n2、用 dict ，商品种类与商品名的映射\n3、用 tuple ，固定不变的序列数据","like_count":0},{"had_liked":false,"id":365362,"user_name":"Cy23","can_delete":false,"product_type":"c3","uid":1591293,"ip_address":"辽宁","ucode":"8DC561C5151758","user_header":"https://static001.geekbang.org/account/avatar/00/18/47/fd/895f0c27.jpg","comment_is_top":false,"comment_ctime":1672386602,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"1.dict\n2.dict\n3.tuple","like_count":0},{"had_liked":false,"id":364412,"user_name":"不赢不舒服斯基","can_delete":false,"product_type":"c3","uid":3008505,"ip_address":"四川","ucode":"C2AC899AA31E28","user_header":"https://static001.geekbang.org/account/avatar/00/2d/e7/f9/c16951cd.jpg","comment_is_top":false,"comment_ctime":1670936857,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"字典、列表、字符串","like_count":0},{"had_liked":false,"id":364191,"user_name":"白开水","can_delete":false,"product_type":"c3","uid":1955459,"ip_address":"湖北","ucode":"2E05353E8D9317","user_header":"https://static001.geekbang.org/account/avatar/00/1d/d6/83/bd4a8410.jpg","comment_is_top":false,"comment_ctime":1670640796,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"a = 1234.1234123412341234\nb = 1234.12341234123412\na == b 程序返回的值是True\na比b多两位小数，为啥相等呢？ 要是想比较a&#47;b的大小该怎么办","like_count":0},{"had_liked":false,"id":363929,"user_name":"江江儿嘛哩哄","can_delete":false,"product_type":"c3","uid":1928117,"ip_address":"浙江","ucode":"E7D6E59551B7F1","user_header":"https://static001.geekbang.org/account/avatar/00/1d/6b/b5/14586a78.jpg","comment_is_top":false,"comment_ctime":1670372703,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"1.dict\n2.list\n3.string 或 tuple","like_count":0},{"had_liked":false,"id":363103,"user_name":"叫我阿咩就好","can_delete":false,"product_type":"c3","uid":1999308,"ip_address":"广东","ucode":"551B05DAC40C8B","user_header":"","comment_is_top":false,"comment_ctime":1669219955,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"1. 通訊錄工具，一個名字可能會有多個號碼，因此用「字典dict」\n2. 電商程序，是需要存很多可變的字符串（上下架），因此是「列表list」\n3. 遊戲，npc的對話是寫死不變只需要到點演出的，用「元組tuple」","like_count":0},{"had_liked":false,"id":363034,"user_name":"流羽","can_delete":false,"product_type":"c3","uid":2824392,"ip_address":"广东","ucode":"4347623E998162","user_header":"https://static001.geekbang.org/account/avatar/00/2b/18/c8/960ae2a9.jpg","comment_is_top":false,"comment_ctime":1669174915,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"存储姓名和手机号码，使用字典，因为一个人可能会有多个号码，列表不够。\n存储商品的种类，使用列表好一些？种类肯定不止一个嘛，也不大需要映射。\n存储一段与 NPC 的对话，使用文本，是因为是单独的固定内容。","like_count":0},{"had_liked":false,"id":363026,"user_name":"姗乔","can_delete":false,"product_type":"c3","uid":2620531,"ip_address":"上海","ucode":"2BEAB2BC3D1F74","user_header":"","comment_is_top":false,"comment_ctime":1669171974,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"1.dict\n2.str\n3.tuple","like_count":0}]}