{"id":78585,"title":"16 | 网络优化（中）：复杂多变的移动网络该如何优化？","content":"<p>在PC互联网时代，网络优化已经是一项非常复杂的工作。对于移动网络来说，弱网络、网络切换、网络劫持这些问题更加突出，网络优化这项工作也变得更加艰巨。</p><p>那作为一名移动开发者，面对复杂多变的移动网络我们该如何去优化呢？可能也有人会说，我只要用好AFNetworking/OkHttp这些成熟网络库就可以了，并不需要额外去做什么优化。那你确定你真的能用好这些网络库吗？它们内部是怎样实现的、有哪些差异点、哪个网络库更好呢？</p><p>虽然我们可能只是客户端App开发人员，但在关于网络优化还是可以做很多事情的，很多大型的应用也做了很多的实践。今天我们一起来看一下，如何让我们的应用在各种的网络条件下都能“快人一步”。</p><h2>移动端优化</h2><p>回想上一期我给出的网络架构图，一个数据包从手机出发要经过无线网络、核心网络以及外部网络（互联网），才能到达我们的服务器。那整个网络请求的速度会跟哪些因素有关呢？</p><p><img src=\"https://static001.geekbang.org/resource/image/d3/4d/d39734690f1241262b0a289acdecbf4d.png?wh=1182*796\" alt=\"\"></p><p>从上面这张图上看，客户端网络库实现、服务器性能以及网络链路的质量都是影响网络请求速度的因素。下面我们先从客户端的网络库说过，看看应该如何进行网络优化。</p><p><strong>1. 何为网络优化</strong></p><p>在讲怎么去优化网络之前，我想先明确一下所谓的网络优化，究竟指的是什么？在我看来，核心内容有以下三个：</p><!-- [[[read_end]]] --><ul>\n<li>\n<p><strong>速度</strong>。在网络正常或者良好的时候，怎样更好地利用带宽，进一步提升网络请求速度。</p>\n</li>\n<li>\n<p><strong>弱网络</strong>。移动端网络复杂多变，在出现网络连接不稳定的时候，怎样最大程度保证网络的连通性。</p>\n</li>\n<li>\n<p><strong>安全</strong>。网络安全不容忽视，怎样有效防止被第三方劫持、窃听甚至篡改。</p>\n</li>\n</ul><p>除了这三个问题，我们可能还会关心网络请求造成的耗电、流量问题，这两块内容我们在后面会统一地讲，今天就不再展开。</p><p>那对于速度、弱网络以及安全的优化，又该从哪些方面入手呢？首先你需要先搞清楚一个网络请求的整个过程。</p><p><img src=\"https://static001.geekbang.org/resource/image/8d/8b/8d6e833f2a6c6d1e8beeb92d4579c38b.png?wh=1252*524\" alt=\"\"></p><p>从图上看到，整个网络请求主要分为几个步骤，而整个请求的耗时可以细分到每一个步骤里面。</p><ul>\n<li>\n<p><strong>DNS解析</strong>。通过DNS服务器，拿到对应域名的IP地址。在这个步骤，我们比较关注DNS解析耗时情况、运营商LocalDNS的劫持、DNS调度这些问题。</p>\n</li>\n<li>\n<p><strong>创建连接</strong>。跟服务器建立连接，这里包括TCP三次握手、TLS密钥协商等工作。多个IP/端口该如何选择、是否要使用HTTPS、能否可以减少甚至省下创建连接的时间，这些问题都是我们优化的关键。</p>\n</li>\n<li>\n<p><strong>发送/接收数据</strong>。在成功建立连接之后，就可以愉快地跟服务器交互，进行组装数据、发送数据、接收数据、解析数据。我们关注的是，如何根据网络状况将带宽利用好，怎么样快速地侦测到网络延时，在弱网络下如何调整包大小等问题。</p>\n</li>\n<li>\n<p><strong>关闭连接</strong>。连接的关闭看起来非常简单，其实这里的水也很深。这里主要关注主动关闭和被动关闭两种情况，一般我们都希望客户端可以主动关闭连接。</p>\n</li>\n</ul><p>所谓的网络优化，就是围绕速度、弱网络、安全这三个核心内容，减少每一个步骤的耗时，打造快速、稳定且安全的高质量网络。</p><p><strong>2. 何为网络库</strong></p><p>在实际的开发工作中，我们很少会像《UNIX网络编程》那样直接去操作底层的网络接口，一般都会使用网络库。Square出品的<a href=\"https://github.com/square/okhttp\">OkHttp</a>是目前最流行的Android网络库，它还被Google加入到Android系统内部，为广大开发者提供网络服务。</p><p>那网络库究竟承担着一个什么样的角色呢？在我看来，它屏蔽了下层复杂的网络接口，让我们可以更高效地使用网络请求。</p><p><img src=\"https://static001.geekbang.org/resource/image/ff/d8/ff9f3155d55ccd0a721ff9ee560300d8.png?wh=1668*652\" alt=\"\"></p><p>如上图所示，一个网络库的核心作用主要有以下三点：</p><ul>\n<li>\n<p><strong>统一编程接口</strong>。无论是同步还是异步请求，接口都非常简单易用。同时我们可以统一做策略管理，统一进行流解析（JSON、XML、Protocol Buffers）等。</p>\n</li>\n<li>\n<p><strong>全局网络控制</strong>。在网络库内部我们可以做统一的网络调度、流量监控以及容灾管理等工作。</p>\n</li>\n<li>\n<p><strong>高性能</strong>。既然我们把所有的网络请求都交给了网络库，那网络库是否实现高性能就至关重要。既然要实现高性能，那我会非常关注速度，CPU、内存、I/O的使用，以及失败率、崩溃率、协议的兼容性等方面。</p>\n</li>\n</ul><p>不同的网络库实现差别很大，比较关键有这几个模块：</p><p><img src=\"https://static001.geekbang.org/resource/image/1e/5a/1e3df0ccca73d9364bb61e5066be1e5a.png?wh=647*480\" alt=\"\"></p><p>那网络库实现到底哪家强？接下来我们一起来对比OkHttp、Chromium的<a href=\"https://chromium.googlesource.com/chromium/src/+/master/components/cronet/\">Cronet</a>以及微信<a href=\"https://github.com/Tencent/mars\">Mars</a>这三个网络库的内部实现。</p><p><strong>3. 高质量网络库</strong></p><p>据我了解业内的<a href=\"https://www.infoq.cn/article/mogujie-app-chromium-network-layer?useSponsorshipSuggestions=true%2F\">蘑菇街</a>、头条、UC浏览器都在Chromium网络库上做了二次开发，而微信Mars在弱网络方面做了大量优化，拼多多、虎牙、链家、美丽说这些应用都在使用Mars。</p><p>下面我们一起来对比一下各个网络库的核心实现。对于参与网络库相关工作来说，我的经验还算是比较丰富的。在微信的时候曾经参与过Mars的开发，目前也在基于Chromium网络库做二次开发。</p><p><img src=\"https://static001.geekbang.org/resource/image/ec/ef/ec4efbcad6a976425731ebcfdf4917ef.png?wh=1098*1186\" alt=\"\"></p><p>为什么我从来没使用过OkHttp？主要因为它并不支持跨平台，对于大型应用来说跨平台是非常重要的。我们不希望所有的优化Android和iOS都要各自去实现一套，不仅浪费人力而且还容易出问题。</p><p>对于Mars来说，它是一个跨平台的Socket层解决方案，并不支持完整的HTTP协议，所以Mars从严格意义上来讲并不是一个完整的网络库。但是它在弱网络和连接上做了大量的优化，并且支持长连接。关于Mars的网络多优化的更多细节，你可以参考<a href=\"https://github.com/Tencent/mars/wiki\">Wiki</a>右侧的文章列表。</p><p><img src=\"https://static001.geekbang.org/resource/image/de/1a/de1ec3e21c80d084db05c58d41fb3d1a.png?wh=1920*835\" alt=\"\"></p><p>Chromium网络库作为标准的网络库，基本上可以说是找不到太大的缺点。而且我们可以享受Google后续网络优化的成果，类似TLS 1.3、QUIC支持等。</p><p>但是它针对弱网络场景没有做太多定制的优化，也不支持长连接。事实上目前我在Chromium网络库的二次开发主要工作也是补齐弱网络优化与长连接这两个短板。</p><h2>大网络平台</h2><p>对于大公司来说，我们不能只局限在客户端网络库的双端统一上。网络优化不仅仅是客户端的事情，所以我们有了统一的网络中台，它负责提供前后台一整套的网络解决方案。</p><p>阿里的<a href=\"https://www.infoq.cn/article/taobao-mobile-terminal-access-gateway-infrastructure\">ACCS</a>、蚂蚁的<a href=\"https://mp.weixin.qq.com/s/nz8Z3Uj9840KHluWjwyelw\">mPaaS</a>、携程的<a href=\"https://www.infoq.cn/article/how-ctrip-improves-app-networking-performance\">网络服务</a>都是公司级的网络中台服务，这样所有的网络优化可以让整个集团的所有接入应用受益。</p><p>下图是mPaaS的网络架构图，所有网络请求都会先经过统一的接入层，再转发到业务服务器。这样我们可以在业务服务器无感知的情况下，在接入层做各种各样的网络优化。</p><p><img src=\"https://static001.geekbang.org/resource/image/ae/ba/ae51f02faaa7bf500d0ad732a0e56fba.png?wh=687*645\" alt=\"\"></p><p><strong>1. HTTPDNS</strong></p><p>DNS的解析是我们网络请求的第一项工作，默认我们使用运营商的LocalDNS服务。这块耗时在3G网络下可能是200～300ms，4G网络也需要100ms。</p><p>解析慢并不是默认LocalDNS最大的“原罪”，它还存在一些其他问题：</p><ul>\n<li>\n<p><strong>稳定性</strong>。UDP协议，无状态，容易域名劫持（难复现、难定位、难解决），每天至少几百万个域名被劫持，一年至少十次大规模事件。</p>\n</li>\n<li>\n<p><strong>准确性</strong>。LocalDNS调度经常出现不准确，比如北京的用户调度到广东IP，移动的运营商调度到电信的IP，跨运营商调度会导致访问慢，甚至访问不了。</p>\n</li>\n<li>\n<p><strong>及时性</strong>。运营商可能会修改DNS的TTL，导致DNS修改生效延迟。不同运营商的服务实现不一致，我们也很难保证DNS解析的耗时。</p>\n</li>\n</ul><p>为了解决这些问题，就有了HTTPDNS。简单来说自己做域名解析的工作，通过HTTP请求后台去拿到域名对应的IP地址，直接解决上述所有问题。</p><p>微信有自己部署的NEWDNS，阿里云和腾讯云也有提供自己的HTTPDNS服务。对于大网络平台来说，我们会有统一的HTTPDNS服务，并将它和运维系统打通。在传统的DNS基础上，还会增加精准的流量调度、网络拨测/灰度、网络容灾等功能。</p><p><img src=\"https://static001.geekbang.org/resource/image/05/f7/050064c7efe78e194497c3b9b859d8f7.png?wh=1842*824\" alt=\"\"></p><p>关于HTTPDNS的更多知识，你可以参考百度的<a href=\"https://mp.weixin.qq.com/s/iaPtSF-twWz-AN66UJUBDg\">《DNS优化》</a>。对客户端来说，我们可以通过预请求的方法，提前拿到一批域名的IP，不过这里需要注意IPv4与IPv6协议栈的选择问题。</p><p><strong>2. 连接复用</strong></p><p>在DNS解析之后，我们来到了创建连接这个环节。创建连接要经过TCP三次握手、TLS密钥协商，连接建立的代价是非常大的。这里我们主要的优化思路是复用连接，这样不用每次请求都重新建立连接。</p><p>在前面我就讲过连接管理，网络库并不会立刻把连接释放，而是放到连接池中。这时如果有另一个请求的域名和端口是一样的，就直接拿出连接池中的连接进行发送和接收数据，少了建立连接的耗时。</p><p>这里我们利用HTTP协议里的keep-alive，而HTTP/2.0的多路复用则可以进一步的提升连接复用率。它复用的这条连接支持同时处理多条请求，所有请求都可以并发在这条连接上进行。</p><p><img src=\"https://static001.geekbang.org/resource/image/82/ac/8215799e2bb66c6668e9b73e4130f0ac.png?wh=932*481\" alt=\"\"></p><p>虽然H2十分强大，不过这里还有两个问题需要解决。一个是同一条H2连接只支持同一个域名，一个是后端支持HTTP/2.0需要额外的改造。这个时候我们只需要在统一接入层做改造，接入层将数据转换到HTTP/1.1再转发到对应域名的服务器。</p><p><img src=\"https://static001.geekbang.org/resource/image/d7/c9/d7dc96541811392f2a669232582c0bc9.png?wh=1920*735\" alt=\"\"></p><p>这样所有的服务都不用做任何改造就可以享受HTTP/2.0的所有优化，不过这里需要注意的是H2的多路复用在本质上依然是同一条TCP连接，如果所有的域名的请求都集中在某一条连接中，在网络拥塞的时候容易出现TCP队首阻塞问题。</p><p>对于客户端网络库来说，无论OkHttp还是Chromium网络库对于HTTP/2.0的连接，同一个域名只会保留一条连接。对于一些第三方请求，特别是文件下载以及视频播放这些场景可能会遇到对方服务器单连接限速的问题。在这种情况下我们可以通过修改网络库实现，也可以简单的通过禁用HTTP/2.0协议解决。</p><p><strong>3. 压缩与加密</strong></p><p><strong>压缩</strong></p><p>讲完连接，我们再来看看发送和接收的优化。我第一时间想到的还是减少传输的数据量，也就是我们常说的数据压缩。首先对于HTTP请求来说，数据主要包括三个部分：</p><ul>\n<li>\n<p>请求URL</p>\n</li>\n<li>\n<p>请求header</p>\n</li>\n<li>\n<p>请求body</p>\n</li>\n</ul><p>对于header来说，如果使用HTTP/2.0连接本身的<a href=\"https://imququ.com/post/header-compression-in-http2.html\">头部压缩</a>技术，因此需要压缩的主要是请求URL和请求body。</p><p>对于请求URL来说，一般会带很多的公共参数，这些参数大部分都是不变的。这样不变的参数客户端只需要上传一次即可，其他请求我们可以在接入层中进行参数扩展。</p><p>对于请求body来说，一方面是数据通信协议的选择，在网络传输中目前最流行的两种数据序列化方式是JSON和Protocol Buffers。正如我之前所说的一样，Protocol Buffers使用起来更加复杂一些，但在数据压缩率、序列化与反序列化速度上面都有很大的优势。</p><p>另外一方面是压缩算法的选择，通用的压缩算法主要是如gzip，Google的<a href=\"https://github.com/google/brotli\">Brotli</a>或者Facebook的<a href=\"https://github.com/facebook/zstd\">Z-standard</a>都是压缩率更高的算法。其中如果Z-standard通过业务数据样本训练出适合的字典，是目前压缩率表现最好的算法。但是各个业务维护字典的成本比较大，这个时候我们的大网络平台的统一接入层又可以大显神威了。</p><p><img src=\"https://static001.geekbang.org/resource/image/ea/11/ea0bbc3fba7296eac80eb20650ff2511.png?wh=1920*985\" alt=\"\"></p><p>例如我们可以抽样1%的请求数据用来训练字典，字典的下发与更新都由统一接入层负责，业务并不需要关心。</p><p>当然针对特定数据我们还有其他的压缩方法，例如针对图片我们可以使用webp、hevc、<a href=\"https://mp.weixin.qq.com/s/JcBNT2aKTmLXRD9zIOPe6g\">SharpP</a>等压缩率更高的格式。另外一方面，基于AI的<a href=\"http://imgtec.eetrend.com/d6-imgtec/blog/2017-08/10143.html\">图片超清化</a>也是一大神器，QQ空间通过这个技术节约了大量的带宽成本。</p><p><strong>安全</strong></p><p>数据安全也是网络重中之重的一个环节，在大网络平台中我们都是基于HTTPS的HTTP/2通道，已经有了TLS加密。如果大家不熟悉TLS的基础知识，可以参考微信后台一个小伙伴写的<a href=\"https://blog.helong.info/blog/2015/09/07/tls-protocol-analysis-and-crypto-protocol-design/\">《TLS协议分析》</a>。</p><p>但是HTTPS带来的代价也是不小的，它需要2-RTT的协商成本，在弱网络下时延不可接受。同时后台服务解密的成本也十分高昂，在大型企业中需要单独的集群来做这个事情。</p><p>HTTPS的优化有下面几个思路：</p><ul>\n<li>\n<p><strong>连接复用率</strong>。通过多个域名共用同一个HTTP/2连接、长连接等方式提升连接复用率。</p>\n</li>\n<li>\n<p><strong>减少握手次数</strong>。<a href=\"https://zhuanlan.zhihu.com/p/44980381\">TLS 1.3</a>可以实现0-RTT协商，事实上在TLS 1.3 release之前，微信的<a href=\"https://mp.weixin.qq.com/s/tvngTp6NoTZ15Yc206v8fQ\">mmtls</a>、Facebook的<a href=\"https://mp.weixin.qq.com/s?__biz=MzI4MTY5NTk4Ng==&amp;mid=2247489465&amp;idx=1&amp;sn=a54e3fe78fc559458fa47104845e764b&amp;source=41#wechat_redirect\">fizz</a>、阿里的SlightSSL都已在企业内部大规模部署。</p>\n</li>\n<li>\n<p><strong>性能提升</strong>。使用ecc证书代替RSA，服务端签名的性能可以提升4～10倍，但是客户端校验性能降低了约20倍，从10微秒级降低到100微秒级。另外一方面可以通过Session Ticket会话复用，节省一个RTT耗时。</p>\n</li>\n</ul><p>使用HTTPS之后，整个通道是不是就一定高枕无忧呢？如果客户端设置了代理，TLS加密的数据可以被解开并可能被利用 。这个时候我们可以在客户端将“<a href=\"https://sec.xiaomi.com/article/48\">证书锁定</a>”（Certificate Pinning），为了老版本兼容和证书替换的灵活性，建议锁定根证书。</p><p>我们也可以对传输内容做二次加密，这块在统一接入层实现，业务服务器也同样无需关心这个流程。需要注意的是二次加密会增加客户端与服务器的处理耗时，我们需要在安全性与性能之间做一个取舍。</p><p><img src=\"https://static001.geekbang.org/resource/image/af/67/afeecc25429ccebb122a2e1c46502167.png?wh=1274*446\" alt=\"\"></p><p><strong>4. 其他优化</strong></p><p>关于网络优化的手段还有很多，一些方案可能是需要用钱堆出来的，比如部署跨国的专线、加速点，多IDC就近接入等。</p><p>除此之外，使用<a href=\"https://toutiao.io/posts/6gb8ih/preview\">CDN服务</a>、<a href=\"https://mp.weixin.qq.com/s?__biz=MzI4MTY5NTk4Ng==&amp;mid=2247489182&amp;idx=1&amp;sn=e892855fd315ed2f1395f05b765f9c4e&amp;source=41#wechat_redirect\">P2P技术</a>也是比较常用的手段，特别在直播这类场景。总的来说，网络优化我们需要综合用户体验、带宽成本以及硬件成本等多个因素来考虑。</p><p>下面为你献上一张高质量网络的全景大图。</p><p><img src=\"https://static001.geekbang.org/resource/image/7c/31/7cc417ec3a63db950a0a243c1a206b31.png?wh=960*475\" alt=\"\"></p><h2>QUIC与IPv6</h2><p>今天已经讲得很多了，可能还有小伙伴比较关心最近一些比较前沿的技术，我简单讲一下QUIC和IPv6。</p><p><strong>1. QUIC</strong></p><p>QUIC协议由Google在2013年实现，在2018年基于QUIC协议的HTTP更被确认为<a href=\"https://zh.wikipedia.org/wiki/HTTP/3\">HTTP/3</a>。在连接复用中我说过HTTP/2  +  TCP会存在队首阻塞的问题，基于UDP的QUIC才是终极解决方案。</p><p>如下图所示，你可以把QUIC简单理解为HTTP/2.0  +  TLS  1.3  +  UDP。</p><p><img src=\"https://static001.geekbang.org/resource/image/7d/b1/7d97cb60db49e280ac346b85bf943bb1.png?wh=1230*820\" alt=\"\"></p><p>事实上，它还有着其他的很多优势：</p><ul>\n<li>\n<p><strong>灵活控制拥塞协议</strong>。如果想对TCP内部的拥塞控制算法等模块进行优化和升级，整体周期是相对较长的。对于UDP来说，我们不需要操作系统支持，随时可改，例如可以直接使用Google的<a href=\"https://queue.acm.org/detail.cfm?id=3022184\">BBR算法</a>。</p>\n</li>\n<li>\n<p><strong>“真”连接复用</strong>。不仅解决了队首阻塞的问题，在客户端网络切换的时候也不需要重连，用户使用App的体验会更加流畅。</p>\n</li>\n</ul><p>既然QUIC那么好，为什么我们在生产环境没有全部切换成QUIC呢？那是因为有很多坑还没有踩完，目前发现的主要问题还有：</p><ul>\n<li>\n<p><strong>创建连接成功率</strong>。主要是UDP的穿透性问题，NAT局域网路由、交换机、防火墙等会禁止UDP 443通行，目前QUIC在国内建连的成功率大约在95%左右。</p>\n</li>\n<li>\n<p><strong>运营商支持</strong>。运营商针对UDP通道支持不足，表现也不稳定。例如QoS限速丢包，有些小的运营商甚至还直接不支持UDP包。</p>\n</li>\n</ul><p>尽管有这样那样的问题，但是QUIC一定是未来。当然，通过大网络平台的统一接入层，我们业务基本无需做什么修改。目前据我了解，<a href=\"https://archstat.com/infoQ/archSummit/2018%E6%9E%B6%E6%9E%84%E5%B8%88%E5%90%88%E9%9B%86/AS%E6%B7%B1%E5%9C%B32018-%E3%80%8AQUIC%E5%8D%8F%E8%AE%AE%E5%9C%A8%E8%85%BE%E8%AE%AF%E7%9A%84%E5%AE%9E%E8%B7%B5%E5%92%8C%E4%BC%98%E5%8C%96%E3%80%8B-%E7%BD%97%E6%88%90.pdf\">腾讯</a>、<a href=\"https://github.com/thinkpiggy/qcon2018ppt/blob/master/QUIC%E5%9C%A8%E6%89%8B%E6%9C%BA%E5%BE%AE%E5%8D%9A%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8%E5%AE%9E%E8%B7%B5.pdf\">微博</a>、<a href=\"https://mp.weixin.qq.com/s/QhaFKuxTf3mrbF-eWIkZTw\">阿里</a>都在内部逐步加大QUIC的流量，具体细节可以参考我给出的链接。</p><p><strong>2. IPv6</strong></p><p>运维人员都会深深的感觉到IP资源的珍贵，而致力于解决这个问题的IPv6却在中国一直非常沉寂。根据<a href=\"https://www.ipv6ready.org.cn/public/download/ipv6.pdf\">《2017年IPV6支持度报告》</a>，在中国只有0.38%的用户使用v6。</p><p><img src=\"https://static001.geekbang.org/resource/image/c0/71/c0eb573551efc8fad2b2d7a6daee8571.png?wh=1024*654\" alt=\"\"></p><p>IPv6不仅针对IoT技术，对万物互联的时代有着非常大的意义。而且它对网络性能也有正向的作用，在印度经过我们测试，使用IPv6网络相比IPv4连接耗时可以降低10%～20%。推行IPv6后，无穷无尽的IP地址意味着可以告别各种NAT，P2P、QUIC的连接也不再是问题。</p><p>在过去的一年，无论是<a href=\"https://mp.weixin.qq.com/s/RXICO_3W2cxTYk0UV40GLQ\">阿里云</a>还是<a href=\"https://mp.weixin.qq.com/s/ufV7mZWHPfLNE1-QxWmEfQ\">腾讯云</a>都做了大量IPv6的工作。当然主要也是接入层的改造，尽量不需要业务服务做太多修改。</p><h2>总结</h2><p>移动技术发展到今天，跨终端和跨技术栈的联合优化会变得越来越普遍。有的时候我们需要跳出客户端开发的视角，从更高的维度去思考整个大网络平台。当然网络优化的水还是非常深的，有时候我们需要对协议层也有比较深入的研究，也要经常关注国外的一些新的研究成果。</p><p>2018年随着工信部发布《推进互联网协议第六版（IPv6）规模部署行动计划》的通知，所有的云提供商需要在2020年完成IPv6的支持。QUIC在2018年被定为HTTP/3草案，同时3GPP也将QUIC列入5G核心网协议第二阶段标准（3GPP Release 16）。</p><p>随着5G、QUIC与IPv6未来在中国的普及，网络优化永不止步，它们将推动我们继续努力去做更多尝试，让用户可以有更好的网络体验。</p><h2>课后作业</h2><p><span class=\"orange\">你的应用使用的是哪个网络库？对于网络优化，你还有哪些实践经验？欢迎留言跟我和其他同学一起讨论。</span></p><p>网络优化是一个很大的话题，在课后你还需要进一步扩展学习。除了今天文章里给出的链接，这里还提供一些参考资料给你：</p><ul>\n<li>\n<p><a href=\"https://github.com/WeMobileDev/article/blob/master/%E5%BE%AE%E4%BF%A1%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%80%8E%E6%A0%B7%E5%BA%94%E5%AF%B9%E5%BC%B1%E7%BD%91%E7%BB%9C.pdf\">微信客户端怎样应对弱网络</a></p>\n</li>\n<li>\n<p><a href=\"http://img.bigdatabugs.com/ArchSummit%E5%8C%97%E4%BA%AC-%E3%80%8A%E9%98%BF%E9%87%8C%E4%BA%BF%E7%BA%A7%E6%97%A5%E6%B4%BB%E7%BD%91%E5%85%B3%E9%80%9A%E9%81%93%E6%9E%B6%E6%9E%84%E6%BC%94%E8%BF%9B%E3%80%8B-%E6%B4%AA%E6%B5%B7%EF%BC%88%E5%AD%A4%E6%98%9F%EF%BC%89@www.bigDataBugs.com.pdf\">阿里亿级日活网关通道架构演进</a></p>\n</li>\n<li>\n<p><a href=\"https://github.com/aozhimin/awesome-iOS-resource/blob/master/Conferences/%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4HTTP%202.0%E5%AE%9E%E8%B7%B5%E5%8F%8A%E6%97%A0%E7%BA%BF%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE%E7%9A%84%E6%BC%94%E8%BF%9B%E4%B9%8B%E8%B7%AF.pdf\">阿里巴巴HTTP 2.0实践及无线通信协议的演进之路</a></p>\n</li>\n</ul><p>欢迎你点击“请朋友读”，把今天的内容分享给好友，邀请他一起学习。最后别忘了在评论区提交今天的作业，我也为认真完成作业的同学准备了丰厚的“学习加油礼包”，期待与你一起切磋进步哦。</p><p></p>","comments":[{"had_liked":false,"id":63244,"user_name":"坚持远方","can_delete":false,"product_type":"c1","uid":1148716,"ip_address":"","ucode":"17D2D4E38DCC3F","user_header":"https://static001.geekbang.org/account/avatar/00/11/87/2c/037d64a1.jpg","comment_is_top":false,"comment_ctime":1548309463,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"65972818903","product_id":100021101,"comment_content":"一直用的是okhttp，中间尝试过protobuf，但是因为使用起来比价复杂，后来放弃了，而对于加密这部分用的是https，对于作者提到的另外两个库基本上是闻所未闻，感觉对于作者的每一篇文章都能够拓宽我的视野","like_count":15},{"had_liked":false,"id":76899,"user_name":"A阿进 Andy","can_delete":false,"product_type":"c1","uid":1330867,"ip_address":"","ucode":"9664F3F3333E18","user_header":"https://static001.geekbang.org/account/avatar/00/14/4e/b3/81a16450.jpg","comment_is_top":false,"comment_ctime":1552744147,"is_pvip":false,"replies":[{"id":"28183","content":"Okhttp有keep alive，但是没有长连吧，这里的长连指的是有发心跳包的","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1552916627,"ip_address":"","comment_id":76899,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27322547923","product_id":100021101,"comment_content":"okhttp是有长连接的吧？它有WebSocket是长连接吧？  ","like_count":5,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443492,"discussion_content":"Okhttp有keep alive，但是没有长连吧，这里的长连指的是有发心跳包的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552916627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92235,"user_name":"Jerry银银","can_delete":false,"product_type":"c1","uid":1008404,"ip_address":"","ucode":"80DA1172A2360A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/14/06eff9a4.jpg","comment_is_top":false,"comment_ctime":1557209269,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14442111157","product_id":100021101,"comment_content":"不说技术，只说感受：读完了这篇，才知道自己所知是沧海一粟。高手是深厚的知识功底加丰富的实战经验，二者缺一不可","like_count":3},{"had_liked":false,"id":65817,"user_name":"蚂蚁内推+v","can_delete":false,"product_type":"c1","uid":1050508,"ip_address":"","ucode":"24B10AEE54B3FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/07/8c/0d886dcc.jpg","comment_is_top":false,"comment_ctime":1549681734,"is_pvip":false,"replies":[{"id":"23270","content":"1. udp 通过类似connection id，是它的特性<br>2. 有几种，一个我们可以拒绝非私有域名的请求。如果要支持所有的域名的请求，那就是业界比较常见的时间戳+nonce，网上资料比较多","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1549682717,"ip_address":"","comment_id":65817,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10139616326","product_id":100021101,"comment_content":"<br>张老师想请教两个问题：<br>1.真链接复用是怎么实现的，为什么在网络切换时候不用重连<br>2.newDns 是如何防重放","like_count":2,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438600,"discussion_content":"1. udp 通过类似connection id，是它的特性\n2. 有几种，一个我们可以拒绝非私有域名的请求。如果要支持所有的域名的请求，那就是业界比较常见的时间戳+nonce，网上资料比较多","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549682717,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63782,"user_name":"辉   哥","can_delete":false,"product_type":"c1","uid":1195008,"ip_address":"","ucode":"928186C44577E9","user_header":"https://static001.geekbang.org/account/avatar/00/12/3c/00/fbf5a3c3.jpg","comment_is_top":false,"comment_ctime":1548501082,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10138435674","product_id":100021101,"comment_content":"眼界大开，mars一开源我就关注了，当时不知道mars作为网络请求库的优势，如今看了，受益匪浅","like_count":2},{"had_liked":false,"id":62788,"user_name":"QuincySx","can_delete":false,"product_type":"c1","uid":1123049,"ip_address":"","ucode":"F33848E1A4AF26","user_header":"https://static001.geekbang.org/account/avatar/00/11/22/e9/32f5fa34.jpg","comment_is_top":false,"comment_ctime":1548157677,"is_pvip":false,"replies":[{"id":"23104","content":"成本压力大啊","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1549102255,"ip_address":"","comment_id":62788,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5843124973","product_id":100021101,"comment_content":"一直在想为什么大家不用 Ecc 证书，原来这已经是大厂的常规用法，学习了","like_count":1,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437349,"discussion_content":"成本压力大啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549102255,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62662,"user_name":"ww","can_delete":false,"product_type":"c1","uid":1267612,"ip_address":"","ucode":"492577E310E106","user_header":"https://static001.geekbang.org/account/avatar/00/13/57/9c/37090f55.jpg","comment_is_top":false,"comment_ctime":1548125749,"is_pvip":false,"replies":[{"id":"23103","content":"可以学习一下，但是mars并不是一个完整的网络库","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1549102237,"ip_address":"","comment_id":62662,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5843093045","product_id":100021101,"comment_content":"太棒了！现在公司就在用okhttp，可以尝试拓宽视野，看看MARS!<br>","like_count":1,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437295,"discussion_content":"可以学习一下，但是mars并不是一个完整的网络库","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549102237,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354311,"user_name":"微尘","can_delete":false,"product_type":"c1","uid":1667439,"ip_address":"北京","ucode":"F9CB2CEE9F19B9","user_header":"https://static001.geekbang.org/account/avatar/00/19/71/6f/07e1452a.jpg","comment_is_top":false,"comment_ctime":1660275943,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1660275943","product_id":100021101,"comment_content":"2022 再看也是收获满满，自己仅停留在okhttp,对select、poll 、epoll有了初步了解。","like_count":0},{"had_liked":false,"id":334549,"user_name":"魏玉会 Gabby","can_delete":false,"product_type":"c1","uid":1923990,"ip_address":"","ucode":"4D6D8FB1895B53","user_header":"https://static001.geekbang.org/account/avatar/00/1d/5b/96/57d4970d.jpg","comment_is_top":false,"comment_ctime":1644998146,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1644998146","product_id":100021101,"comment_content":"想问一下各大厂都是如何判断弱网的呢？对于弱网，有没有一个明确可落地的判断标准呢？","like_count":0},{"had_liked":false,"id":305405,"user_name":"哈哈哈哈哈哈哈哈哈","can_delete":false,"product_type":"c1","uid":1255042,"ip_address":"","ucode":"9734778479B4B2","user_header":"https://static001.geekbang.org/account/avatar/00/13/26/82/f3b56401.jpg","comment_is_top":false,"comment_ctime":1627961221,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627961221","product_id":100021101,"comment_content":"请教张老师和各位同学一个问题，设备端使用netty简历socket通信往服务器发送视频数据，正常情况下java层拿到数据flush到系统之后，从网卡里面发出去之后内存释放。但是弱网情况下数据一直累积到设备网卡中，导致app内存一直无法释放，OOM。<br>请问这种情况怎么处理？有什么办法知道网卡里面累积的数据吗？","like_count":0},{"had_liked":false,"id":253872,"user_name":"ShiningDreamer","can_delete":false,"product_type":"c1","uid":1331530,"ip_address":"","ucode":"CD355754B5688A","user_header":"https://static001.geekbang.org/account/avatar/00/14/51/4a/aeb809ae.jpg","comment_is_top":false,"comment_ctime":1602925247,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602925247","product_id":100021101,"comment_content":"途中说okhttp不能实现网络质量监控指的是监控什么？okhttp不是提供了EventListener可以让调用者接收一系列网络请求过程中的事件，例如DNS解析、TSL&#47;SSL连接、Response接收等。通过继承此接口，调用者可以监视整个应用中网络请求次数、流量大小、耗时情况。和你这里说的不冲突？","like_count":0},{"had_liked":false,"id":202192,"user_name":"Geek_bc7cdb","can_delete":false,"product_type":"c1","uid":1708370,"ip_address":"","ucode":"EA84E28079F8A0","user_header":"","comment_is_top":false,"comment_ctime":1585919835,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585919835","product_id":100021101,"comment_content":"Dns问题通过预请求一部分ip列表，但这里有两个问题<br>1. 如何保证请求ip列表的域名不会出现dns问题；<br>2.ip请求如何做负载均衡","like_count":0},{"had_liked":false,"id":194662,"user_name":"will","can_delete":false,"product_type":"c1","uid":1156207,"ip_address":"","ucode":"7A7DBE3E0EEAEB","user_header":"https://static001.geekbang.org/account/avatar/00/11/a4/6f/672a27d4.jpg","comment_is_top":false,"comment_ctime":1585095723,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585095723","product_id":100021101,"comment_content":"重新看了一遍，一直都是用okhttp，完全没用过这两个，学习了","like_count":0},{"had_liked":false,"id":182411,"user_name":"　　　　　　　　","can_delete":false,"product_type":"c1","uid":1329934,"ip_address":"","ucode":"EB254E7A21302D","user_header":"https://static001.geekbang.org/account/avatar/00/14/4b/0e/cdf72d20.jpg","comment_is_top":false,"comment_ctime":1582782476,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582782476","product_id":100021101,"comment_content":"可不可以针对mars的长连接部分，讲解一下？","like_count":0},{"had_liked":false,"id":170390,"user_name":"十四","can_delete":false,"product_type":"c1","uid":1331341,"ip_address":"","ucode":"8FF96D04108CF2","user_header":"https://static001.geekbang.org/account/avatar/00/14/50/8d/20f397f2.jpg","comment_is_top":false,"comment_ctime":1578584198,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578584198","product_id":100021101,"comment_content":"我们目前也有想法基于cronet 库二次开发，不知道老师可否出一篇文章具体讲一下cronet 库","like_count":0},{"had_liked":false,"id":164500,"user_name":"凤梨酥","can_delete":false,"product_type":"c1","uid":1372744,"ip_address":"","ucode":"1049FF29532AA0","user_header":"https://static001.geekbang.org/account/avatar/00/14/f2/48/d5b30171.jpg","comment_is_top":false,"comment_ctime":1577012733,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577012733","product_id":100021101,"comment_content":"确实厉害，以前在公司只推行了半成品的httpdns，以为http3还很远，原来大厂早就落地实践了","like_count":0},{"had_liked":false,"id":132260,"user_name":"黑色毛衣","can_delete":false,"product_type":"c1","uid":1135912,"ip_address":"","ucode":"FF7E235F91BA5C","user_header":"https://static001.geekbang.org/account/avatar/00/11/55/28/31b0cf2f.jpg","comment_is_top":false,"comment_ctime":1568074910,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568074910","product_id":100021101,"comment_content":"何时才能像绍文大大那样","like_count":0},{"had_liked":false,"id":108170,"user_name":"breeze","can_delete":false,"product_type":"c1","uid":1282660,"ip_address":"","ucode":"EF582E76D708C4","user_header":"https://static001.geekbang.org/account/avatar/00/13/92/64/4b488e16.jpg","comment_is_top":false,"comment_ctime":1561689934,"is_pvip":false,"replies":[{"id":"62047","content":"需要先统一网络库，对于webview我们也是实现了网络库的托管代理的。但是这建立到我们应用带了一个自己的内核的前提","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1576679360,"ip_address":"","comment_id":108170,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1561689934","product_id":100021101,"comment_content":"百度那个HTTPDNS方案太简单了，都是基于OKHttp的，OKhttp提供的DNS接口很容易实现httpdns,但是很多应用网络请求不止是用Okhttp，还有webview 的网络请求情况，不知道老师有没有好的针对全局的Httpdns方案，谢谢啦","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455852,"discussion_content":"需要先统一网络库，对于webview我们也是实现了网络库的托管代理的。但是这建立到我们应用带了一个自己的内核的前提","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576679360,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1023717,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/9e/e5/6d03a341.jpg","nickname":"姜大牙","note":"","ucode":"4043220A61B848","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":39358,"discussion_content":"HTTPDNS的目的在于速度，安全。背后的调度系统是重要组成部分。WebView完全可以通过native代理请求的方式实现。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571917278,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":88802,"user_name":"程序员小跃","can_delete":false,"product_type":"c1","uid":1015483,"ip_address":"","ucode":"25BB96E0791A60","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7e/bb/947c329a.jpg","comment_is_top":false,"comment_ctime":1556003682,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1556003682","product_id":100021101,"comment_content":"老师给出的每个链接参考价值都巨大，学了高手课，感觉不仅仅是Android能力有提升，整体的都会有一个质的飞跃","like_count":0},{"had_liked":false,"id":62594,"user_name":"scofield","can_delete":false,"product_type":"c1","uid":1330767,"ip_address":"","ucode":"6DF47EFEB636C1","user_header":"https://static001.geekbang.org/account/avatar/00/14/4e/4f/6cf5258d.jpg","comment_is_top":false,"comment_ctime":1548118509,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1548118509","product_id":100021101,"comment_content":"很好的拓宽视野！","like_count":0}]}