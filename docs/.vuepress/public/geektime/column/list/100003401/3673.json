{"id":3673,"title":"34 | Spring Cloud：面向应用层的云架构解决方案","content":"<p>上期文章我们介绍了混合云，以及在实际操作中我们常见的几种混合云模式。今天我们来聊一聊Spring Cloud如何解决应用层的云架构问题。</p>\n<p>对于Spring Cloud，你大概不会陌生，它跟Spring生态中的另一个开源项目Spring Boot，基本上已经成为国内绝大多数公司向微服务架构转型时的首选开发框架。</p>\n<p>Spring Boot可以支持快速开发单个微服务应用，Spring Cloud则提供一系列的服务治理框架，比如服务注册、服务发现、动态路由、负载均衡以及熔断等等能力，可以将一个个独立的微服务作为一个整体，进行很好的管理和维护。</p>\n<p>从业界实际使用情况和反馈来看，由于两者完美的搭配，Spring Cloud和Spring Boot确实是可以通过相对较低的技术成本，让开发人员方便快速地搭建起一套分布式应用系统，从而进行高效的业务开发。</p>\n<p>同时，优秀的服务治理能力，也为其后续在稳定性保障工作方面打下了不错的基础。</p>\n<p>（注：因为Spring Cloud必须基于Spring Boot框架才能发挥它的治理能力，所以下面我们提到的Spring Cloud是默认包含了Spring Boot框架的。）</p>\n<p>所以，通常我们更多地是把Spring Cloud作为微服务应用层面的开发框架，帮助我们提升开发效率。看起来，它貌似跟“云”这个概念没有什么直接关系。</p>\n<p>而实际上，在将应用与云平台连接方面，Spring Cloud也发挥着非常核心的作用。这也是为什么本期文章的标题没有直接定义为微服务治理架构，而是面向应用层的云架构。</p>\n<p>下面我们具体来看看。</p>\n<h2>Spring Cloud框架中云的影子</h2>\n<p>目前整个Spring生态是由Pivotal这家商业公司在主导，但是Pivotal更大的目标是要为客户提供云上的端到端的解决方案。</p>\n<p>所以Pivotal最早提出了Cloud-Native（云原生）的概念，或者说是一种理念，<strong>目的是帮企业提供云上业务端到端的技术解决方案，全面提升软件交付效率，降低运维成本。</strong>简单来说，就是除了业务解决方案和代码，其它事情都可以交给平台处理。</p>\n<p>基于这样的理念，Pivotal打造了自己的云原生解决方案PCF（Pivotal Cloud Foundry），包括多云和跨云平台的管理、监控、发布，以及基础的DB、缓存和消息队列等等，一应俱全。</p>\n<p>我们可以看到，在PCF整体解决方案中，Spring生态是向用户的业务应用层架构拓展的非常重要的一环，帮助其进行高效的业务开发，并提供后续的稳定性保障。<br />\n￼<br />\n<img src=\"https://static001.geekbang.org/resource/image/88/17/880d3bf4d381126a0795b06de279de17.jpg?wh=1107*556\" alt=\"\" /></p>\n<p>所以，这个时候，<strong>Spring Cloud除了提供微服务治理能力之外，还成为了微服务应用与云平台上各项基础设施和基础服务之间的纽带，并在其中起到了承上启下的关键作用。</strong></p>\n<!-- [[[read_end]]] -->\n<p>至此，我们可以得出这样一个判断，也是本篇文章想传递的一个信息：<strong>Spring Cloud不仅仅是微服务治理解决方案，它同时还是面向应用层的云架构解决方案。</strong></p>\n<p>虽然Pivotal最早提出了云原生的理念，也提供了PCF这样的云原生整体商业解决方案，但是从目前业界的实际应用情况来看，Spring Cloud这个局部解决方案的应用更为广泛。</p>\n<p>而且从图中我们看到，其与AWS的深度整合，也正反映出当前Spring Cloud在整个业界的影响力和被应用的广泛程度。</p>\n<p>插句题外话。早期阿里开源的Dubbo，其实是跟Spring Cloud类似的微服务框架，并且经过阿里大规模的应用实践，可以说是非常优秀的开源项目。早些年国内在选择微服务框架时，Dubbo基本是首选，但是近年来因为开源维护不力，很早停止了版本更新，导致大量的用户流失，促使用户纷纷涌入Spring Cloud阵营。</p>\n<p>而Spring Cloud经过近几年的发展，深入了解用户需求和痛点，不断完善改进，早已蜕变成我们所说的应用层的云架构，紧跟整个云计算发展趋势的大潮。</p>\n<p>最近Dubbo重启开源维护，与阿里云EDAS产品体系整合，很大原因就是因为在用户技术架构体系里，缺少了Spring Cloud这样的产品，再加上Dubbo原有的一些用户基础，重启维护无论从哪方面看都是值得的。但是需要多久才能重拾用户的信心，就要看Dubbo的后续表现了。</p>\n<p>以Spring Cloud为代表的云原生模式也是当前业界的主流模式。虽然它可能以解决应用层面的问题为主，尚未与云平台全面对接整合，不过它所带动起来的云原生的理念却被业界越来越广泛地接受。</p>\n<p>同时，随着容器及编排技术的发展和成熟，就出现了另外一个云原生的体系，且活跃程度非常高：它就是以Google为首的CNCF（Cloud Native Computing Foundation）。下面我们一起看一下。</p>\n<h2>CNCF</h2>\n<p>CNCF设想中的云原生分层架构示意图：<br />\n￼<br />\n<img src=\"https://static001.geekbang.org/resource/image/9e/b4/9e9ced0a6e757a2349cdc1c090b4d0b4.jpg?wh=879*492\" alt=\"\" /></p>\n<p>CNCF组织成立后，圈中大佬们纷纷加入，比如AWS、微软、思科、Pivotal等等，国内的腾讯云、阿里云和华为也参与其中，可见其影响力有多大。</p>\n<p>CNCF的核心项目除了K8S外，还有Goggle的gRPC，Docker的ContainerD，CoreOS的Rkt等重量级开源项目。同时也有与Spring Cloud类似，但更加通用的微服务治理框架，如Linkerd和Envoy，它们被称为Service Mesh（服务网格）。</p>\n<p>这些项目的优势在于，它们是与K8S集成和配套的，可以很便捷地应用于K8S生态中。虽然K8S自身也是支持服务发现、负载均衡这些基本的微服务治理的，但是在CNCF中，它显得更加包容与开放，不断吸引业界最佳实践的开源产品加入，共同打造更加开放的生态。下图为CNCF当前的项目。<br />\n￼<br />\n<img src=\"https://static001.geekbang.org/resource/image/e0/99/e08aed7839e2d337d2970a8c6739de99.jpg?wh=1153*215\" alt=\"\" /></p>\n<p>同时，因为目前K8S已实际上成为业界容器编排方面的标准，且被广泛应用，所以各大云厂商，无论公有云和私有云，都会主动支持K8S在云计算体系中的落地。</p>\n<p>因此，我们根本不用担心K8S与云平台上 的资源和各种服务的对接问题，而且它最终也会将应用与云平台很好地连接起来，让开发者能够更加专注于业务开发。至于剩下的工作，则都交由平台去做。</p>\n<p>当前，CNCF的各个项目社区非常活跃，以至于我们一提到云原生，就会联想到基于CNCF和K8S的生态体系。虽然Google和CNCF都不是云原生的提出者，但目前看来，它们都是云原生的最佳实践者。</p>\n<h2>可以预见的技术发展趋势</h2>\n<p>我们可以看到，无论是Spring Cloud、CNCF、云原生、还是K8S等等新技术或理念，究其根本，都是为了能够更快更好地支持业务需求的快速实现。</p>\n<p>从云原生的理念中，我们可以看到，跟业务无直接关系且相对通用的技术在不断地被标准化，而且标准化层面越来越高。</p>\n<p>从最底层的硬件和网络设备，到上层数据库、缓存、文件存储以及消息队列等等基础组件服务，再到Spring Cloud和Service Mesh这样的应用层面的服务管理和治理能力，都正变得越来越标准和通用。</p>\n<p>技术每被标准化一层，原来繁琐低效的工作就少一些，技术标准化的层面越高，技术门槛就会变得越低。我们可以作个大胆的预想：或许未来真的只会有业务解决方案和业务代码。</p>\n<p>对于我们技术人来说，未来更多更迫切的能力需求将会是：如何利用好业界已有的丰富的技术产品和平台，在面对更加丰富多样且复杂的业务领域需求时，能够更加专注于寻求业界解决方案，以更好地将业务和技术连接起来。找到适合业务解决方案的技术并落地实现，而不再只是专注于技术层面的造轮子。</p>\n<p>对于运维来说，我们同样要了解技术发展趋势。虽然我们不会直接参与具体的业务解决方案和代码的开发，但是，如果架构师是业务架构的设计者，那么我们应该成为技术架构的管理者，从效率、成本、稳定性这几个方面来检验架构是否合理，并为架构朝着更加健康的方向发展保驾护航。这也是运维职能转型和思路转变的一个重要方向。</p>\n<p>欢迎你留言与我讨论。</p>\n<p>如果今天的内容对你有帮助，也欢迎你分享给身边的朋友，我们下期见！</p>\n<p></p>\n","neighbors":{"left":{"article_title":"33 | 为什么混合云是未来云计算的主流形态？","id":3655},"right":{"article_title":"35 | 以绝对优势立足：从CDN和云存储来聊聊云生态的崛起","id":3716}},"comments":[{"had_liked":false,"id":192274,"user_name":"丁乐洪","can_delete":false,"product_type":"c1","uid":1264392,"ip_address":"","ucode":"549CE57AB20B49","user_header":"https://static001.geekbang.org/account/avatar/00/13/4b/08/52954cd7.jpg","comment_is_top":false,"comment_ctime":1584844820,"is_pvip":false,"replies":[{"id":"73591","content":"云已经成为趋势，要顺势而为。","user_name":"作者回复","user_name_real":"赵成","uid":"1001380","ctime":1584879758,"ip_address":"","comment_id":192274,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5879812116","product_id":100003401,"comment_content":"上云不可避免了","like_count":1,"discussions":[{"author":{"id":1001380,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/a4/6076bd5f.jpg","nickname":"赵成","note":"","ucode":"934FC7D12479AE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488358,"discussion_content":"云已经成为趋势，要顺势而为。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584879758,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354803,"user_name":"郭小青","can_delete":false,"product_type":"c1","uid":2858343,"ip_address":"福建","ucode":"B7AF87B13D5F97","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLmoUFrDUO3CKia9QzAPBEgnOX5QWumr2Ez997GmrEup38jdicm2w7FulL3d9chGYwGNUAP7e3xKOEw/132","comment_is_top":false,"comment_ctime":1660794866,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1660794866","product_id":100003401,"comment_content":"很有触感的一篇。在较早之前我和同学讨论过，以后中小型企业不再有网络工程师，因为他们的基础设施在云上，也只会存在优秀的网络工程师，并在云计算类企业中发展。因为云上依然有服务器的原因，我们并未讨论到运维(系统，业务)的会消失的可能性。今天读完这篇，才发现在未来云计算公司提供了运维所能提供的一切解决方案，那么非技术性公司就真的只剩下代码实现业务了，而那时的运维职责就如同文中所说 利用云平台各项能力实现业务，发力点在架构的成本，效率，稳定性上，而不是研究某项基础设施的技术了。这里我们不妨再大胆设想一下，在未来如果业务是有代码模块(由云计算公司提供)组合拼凑起来的，是否程序员也将减少呢！或许到那时程序员也不再叫程序员了！(这是最近看到的一篇公众号的文章，结合赵老师的这篇文章引发的感想)<br>这有什么现实意义呢？","like_count":0},{"had_liked":false,"id":300462,"user_name":"竹影","can_delete":false,"product_type":"c1","uid":1211289,"ip_address":"","ucode":"182FC1A9ECBEF3","user_header":"https://static001.geekbang.org/account/avatar/00/12/7b/99/4f5857a8.jpg","comment_is_top":false,"comment_ctime":1625185748,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1625185748","product_id":100003401,"comment_content":"这一讲的核心是什么？介绍Spring和cncf？","like_count":0},{"had_liked":false,"id":195831,"user_name":"cyz","can_delete":false,"product_type":"c1","uid":1498145,"ip_address":"","ucode":"233B1FC28A45F1","user_header":"https://static001.geekbang.org/account/avatar/00/16/dc/21/34c72e67.jpg","comment_is_top":false,"comment_ctime":1585217632,"is_pvip":false,"replies":[{"id":"74409","content":"sure, it&#39;s our responsibility","user_name":"作者回复","user_name_real":"赵成","uid":"1001380","ctime":1585273571,"ip_address":"","comment_id":195831,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585217632","product_id":100003401,"comment_content":"The teacher is a light to guide us.我们应该成为技术架构的管理者。","like_count":0,"discussions":[{"author":{"id":1001380,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/a4/6076bd5f.jpg","nickname":"赵成","note":"","ucode":"934FC7D12479AE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489168,"discussion_content":"sure, it&amp;#39;s our responsibility","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585273571,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":192261,"user_name":"丁乐洪","can_delete":false,"product_type":"c1","uid":1264392,"ip_address":"","ucode":"549CE57AB20B49","user_header":"https://static001.geekbang.org/account/avatar/00/13/4b/08/52954cd7.jpg","comment_is_top":false,"comment_ctime":1584844446,"is_pvip":false,"replies":[{"id":"73647","content":"spring cloud提供了更多的管理能力，其实已经比较完善了。","user_name":"作者回复","user_name_real":"赵成","uid":"1001380","ctime":1584884741,"ip_address":"","comment_id":192261,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584844446","product_id":100003401,"comment_content":"首选 spring boot.<br>Spring cloud 很多组件还没在公司广泛应用。 有很多组件还在快速发展中","like_count":0,"discussions":[{"author":{"id":1001380,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/a4/6076bd5f.jpg","nickname":"赵成","note":"","ucode":"934FC7D12479AE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488354,"discussion_content":"spring cloud提供了更多的管理能力，其实已经比较完善了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584884741,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":3660,"user_name":"刘圣威","can_delete":false,"product_type":"c1","uid":1049373,"ip_address":"","ucode":"AC226499A402BF","user_header":"https://static001.geekbang.org/account/avatar/00/10/03/1d/1b1f0a1f.jpg","comment_is_top":false,"comment_ctime":1520255556,"is_pvip":false,"replies":[{"id":"979","content":"这个还要假以时日","user_name":"作者回复","user_name_real":"赵成","uid":"1001380","ctime":1521794100,"ip_address":"","comment_id":3660,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1520255556","product_id":100003401,"comment_content":"非常认同您的假设，甚至以后都可以是ai写代码","like_count":0,"discussions":[{"author":{"id":1001380,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/a4/6076bd5f.jpg","nickname":"赵成","note":"","ucode":"934FC7D12479AE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":415995,"discussion_content":"这个还要假以时日","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1521794100,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1916685,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/3f/0d/1e8dbb2c.jpg","nickname":"怀揣梦想的学渣","note":"","ucode":"2349B9F4F6FDE3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556767,"discussion_content":"层主说的是这种吗 https://alphacode.deepmind.com/","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647505209,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":3499,"user_name":"casper2dd","can_delete":false,"product_type":"c1","uid":1003390,"ip_address":"","ucode":"5465F75F58039B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4f/7e/6639cdd4.jpg","comment_is_top":false,"comment_ctime":1519777664,"is_pvip":false,"replies":[{"id":"684","content":"专栏里写的持续交付，和后面的稳定性建设都是实际的案例。<br><br>从技术实现角度，解决方案和思路都是很多成熟的东西可借鉴的，但是落地具体业务时是需要做大量适配的，包括后期的技术运营，这个工作只会越来越多。","user_name":"作者回复","user_name_real":"赵成","uid":"1001380","ctime":1519867930,"ip_address":"","comment_id":3499,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1519777664","product_id":100003401,"comment_content":"“那么运维应该成为技术架构的管理者，从效率、成本、稳定性这几个方面来检验架构是否合理” 这句话能具体举个例子么 因为感觉成熟的解决方案 对运维关心的 成本 效率 稳定性都包括了 比如弹性扩容 故障定位 感觉以后能做的越来越少了","like_count":0,"discussions":[{"author":{"id":1001380,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/a4/6076bd5f.jpg","nickname":"赵成","note":"","ucode":"934FC7D12479AE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":415916,"discussion_content":"专栏里写的持续交付，和后面的稳定性建设都是实际的案例。\n\n从技术实现角度，解决方案和思路都是很多成熟的东西可借鉴的，但是落地具体业务时是需要做大量适配的，包括后期的技术运营，这个工作只会越来越多。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1519867930,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}