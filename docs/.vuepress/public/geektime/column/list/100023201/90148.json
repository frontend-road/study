{"id":90148,"title":"CSS Flex排版：为什么垂直居中这么难？","content":"<p>你好，我是winter。今天我们来谈谈Flex排版。</p><p>我们在前面多次讲过，正常流排版的设计来源于数百年来出版行业的排版经验，而HTML诞生之初，也确实是作为一种“超文本”存在的。</p><p>但是，自上世纪90年代以来，Web标准和各种Web应用蓬勃发展，网页的功能逐渐从“文本信息”向着“软件功能”过渡，这个思路的变化导致了：CSS的正常流逐渐不满足人民群众的需求了。</p><p>这是因为文字排版的思路是“改变文字和盒的相对位置，把它放进特定的版面中”，而软件界面的思路则是“改变盒的大小，使得它们的结构保持固定”。</p><p>因此，在早年的CSS中，“使盒按照外部尺寸变化”的能力非常弱。在我入行前端的时间（大约2006年），CSS三大经典问题：垂直居中问题，两列等高问题，自适应宽问题。这是在其它UI系统中最为基本的问题，而到了CSS中，却变成了困扰工程师的三座大山。</p><p>机智的前端开发者们，曾经创造了各种黑科技来解决问题，包括著名的table布局、负margin、float与clear等等。在这种情况下，Flex布局被随着CSS3一起提出（最初叫box布局），可以说是解决了大问题。</p><p>React Native则更为大胆地使用了纯粹的Flex排版，不再支持正常流，最终也很好地支持了大量的应用界面布局，这一点也证明了Flex排版的潜力。</p><!-- [[[read_end]]] --><p>今天，我们就从设计、原理和应用三个方面来学习一下Flex布局，我们先从设计开始。</p><h2>Flex的设计</h2><p>Flex在英文中是可伸缩的意思，一些翻译会把它译作弹性，我觉得有点不太准确，但是确实中文中没有更好的词。</p><p>Flex排版的核心是display:flex和flex属性，它们配合使用。具有display:flex的元素我们称为flex容器，它的子元素或者盒被称作flex项。</p><p>flex项如果有flex属性，会根据flex方向代替宽/高属性，形成“填补剩余尺寸”的特性，这是一种典型的“根据外部容器决定内部尺寸”的思路，也是我们最常用的Windows和Apple窗口系统的设计思路。</p><h2>Flex的原理</h2><p>说完了设计，我们再来看看原理，Flex的实现并不复杂，我曾经写过一个基本实现提交给spritejs项目，代码可以<a href=\"https://github.com/spritejs/sprite-core/commit/8757b4d3888b4f237b1089e94e075ab58ca952a6#diff-677d382da9f8d81f61d50af24f937b32R32\">参考这里</a>。</p><p>下面我们就来讲解一下，如何实现一个Flex布局。</p><p>首先，Flex布局支持横向和纵向，这样我们就需要做一个抽象，我们把Flex延伸的方向称为“主轴”，把跟它垂直的方向称为“交叉轴”。这样，flex项中的width和height就会称为交叉轴尺寸或者主轴尺寸。</p><p>而Flex又支持反向排布，这样，我们又需要抽象出交叉轴起点、交叉轴终点、主轴起点、主轴终点，它们可能是top、left、bottom、right。</p><p>Flex布局中有一种特殊的情况，那就是flex容器没有被指定主轴尺寸，这个时候，实际上Flex属性完全没有用了，所有Flex尺寸都可以被当做0来处理，Flex容器的主轴尺寸等于其它所有flex项主轴尺寸之和。</p><p>接下来我们开始做Flex排版。</p><p><strong>第一步是把flex项分行，有flex属性的flex项可以暂且认为主轴尺寸为0，所以，它可以一定放进当前行。</strong></p><p>接下来我们把flex项逐个放入行，不允许换行的话，我们就“无脑地”把flex项放进同一行。允许换行的话，我们就先设定主轴剩余空间为Flex容器主轴尺寸，每放入一个就把主轴剩余空间减掉它的主轴尺寸，直到某个flex项放不进去为止，换下一行，重复前面动作。</p><p>分行过程中，我们会顺便对每一行计算两个属性：交叉轴尺寸和主轴剩余空间，交叉轴尺寸是本行所有交叉轴尺寸的最大值，而主轴剩余空间前面已经说过。</p><p><strong>第二步我们来计算每个flex项主轴尺寸和位置。</strong></p><p>如果Flex容器是不允许换行的，并且最后主轴尺寸超出了Flex容器，就要做等比缩放。</p><p>如果Flex容器有多行，那么根据我们前面的分行算法，必然有主轴剩余空间，这时候，我们要找出本行所有的带Flex属性的flex项，把剩余空间按Flex比例分给它们即可。</p><p>做好之后，我们就可以根据主轴排布方向，确定每个flex项的主轴位置坐标了。</p><p>如果本行完全没有带flex属性的flex项，justify-content机制就要生效了，它的几个不同的值会影响剩余空白如何分配，作为实现者，我们只要在计算flex项坐标的时候，加上一个数值即可。</p><p>例如，如果是flex-start就要加到第一个flex项身上，如果是center就给第一个flex项加一半的尺寸，如果是space-between，就要给除了第一个以外的每个flex项加上“flex项数减一分之一”。</p><p><strong>第三步我们来计算flex项的交叉轴尺寸和位置。</strong></p><p>交叉轴的计算首先是根据align-content计算每一行的位置，这部分跟justify-content非常类似。</p><p>再根据alignItems和flex项的alignSelf来确定每个元素在行内的位置。</p><p>计算完主轴和交叉轴，每个flex项的坐标、尺寸就都确定了，这样我们就完成了整个的Flex布局。</p><h2>Flex的应用</h2><p>接下来我们来尝试用flex排版来解决一下当年的CSS三大经典问题（简直易如反掌）。</p><p>垂直居中：</p><pre><code class=\"language-HTML\">&lt;div id=\"parent\"&gt;\n  &lt;div id=\"child\"&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre><pre><code class=\"language-CSS\">#parent {\n  display:flex;\n  width:300px;\n  height:300px;\n  outline:solid 1px;\n  justify-content:center;\n  align-content:center;\n  align-items:center;\n}\n#child {\n  width:100px;\n  height:100px;\n  outline:solid 1px;\n}\n</code></pre><p>思路是创建一个只有一行的flexbox，然后用align-items:center;和align-content:center;来保证行位于容器中，元素位于行中。</p><p>两列等高：</p><pre><code class=\"language-HTML\">&lt;div class=\"parent\"&gt;\n  &lt;div class=\"child\" style=\"height:300px;\"&gt;\n  &lt;/div&gt;\n  &lt;div class=\"child\"&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n&lt;br/&gt;\n&lt;div class=\"parent\"&gt;\n  &lt;div class=\"child\" &gt;\n  &lt;/div&gt;\n  &lt;div class=\"child\" style=\"height:300px;\"&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre><pre><code class=\"language-CSS\">.parent {\n  display:flex;\n  width:300px;\n  justify-content:center;\n  align-content:center;\n  align-items:stretch;\n}\n.child {\n  width:100px;\n  outline:solid 1px;\n}\n</code></pre><p>思路是创建一个只有一行的flexbox，然后用stretch属性让每个元素高度都等于行高。</p><p>自适应宽：</p><pre><code class=\"language-HTML\">&lt;div class=\"parent\"&gt;\n  &lt;div class=\"child1\"&gt;\n  &lt;/div&gt;\n  &lt;div class=\"child2\"&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre><pre><code class=\"language-CSS\">.parent {\n  display:flex;\n  width:300px;\n  height:200px;\n  background-color:pink;\n}\n.child1 {\n  width:100px;\n  background-color:lightblue;\n}\n.child2 {\n  width:100px;\n  flex:1;\n  outline:solid 1px;\n}\n</code></pre><p>这个就是Flex设计的基本能力了，给要自适应的元素添加flex属性即可。</p><h2>总结</h2><p>今天我们从Flex的设计、原理和应用三个方面一起学习了Flex排版。</p><p>我们先从感性的角度，介绍了Flex的设计，Flex的设计是一种不同于流布局的，自外而内的设计思路。</p><p>接下来我们讲解了Flex的实现原理，也就是具体的排版算法。要想理解Flex排版的原理，主轴和交叉轴是非常重要的抽象，Flex排版三个步骤：分行、计算主轴、计算交叉轴。</p><p>最后我们给出了几个例子，解决了旧时代的CSS三大经典问题。</p><p>最后，给你留一个小问题，请根据我的代码和文字，编写一段使用“position:absolute”来模拟Flex布局的js。大家可以根据自己的水平，简化需求，比如可以实现一个仅仅支持横向的、单行的所有flex项必须指定高度的Flex布局。</p><p></p>","comments":[{"had_liked":false,"id":123773,"user_name":"KingSwim","can_delete":false,"product_type":"c1","uid":1024043,"ip_address":"","ucode":"84DE14B7EB2580","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a0/2b/efa6dc2e.jpg","comment_is_top":false,"comment_ctime":1565754456,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"212019151960","product_id":100023201,"comment_content":"希望可以图文并茂一些","like_count":49,"discussions":[{"author":{"id":1736797,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/80/5d/b870bb08.jpg","nickname":"从新开始","note":"","ucode":"9BDA8C16C24321","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339622,"discussion_content":"只是口头跑火车一遍，感觉很无力","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1609748557,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1509942,"avatar":"https://static001.geekbang.org/account/avatar/00/17/0a/36/43b6e383.jpg","nickname":"Stanley","note":"","ucode":"F746ED381E9007","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591791,"discussion_content":"讲的啥玩意，简直了。秀自己写过原理实现，但是讲课都讲不明白。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666832207,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2173417,"avatar":"","nickname":"小谢","note":"","ucode":"FF196828D2E6CB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589723,"discussion_content":"干巴巴的, 看得一脸懵逼, 好歹放几个图片呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665284332,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":85568,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1555126750,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"57389701598","product_id":100023201,"comment_content":"flex好用，gird更好用。会讲一下吗？","like_count":13,"discussions":[{"author":{"id":1520355,"avatar":"https://static001.geekbang.org/account/avatar/00/17/32/e3/20676888.jpg","nickname":"涂涂","note":"","ucode":"A36AE853DD0A30","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2264,"discussion_content":"去看阮一峰大神写的flex入门文章你就没问题了，没有比他写的更通俗易懂的了","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1563419337,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1331781,"avatar":"https://static001.geekbang.org/account/avatar/00/14/52/45/571de6bd.jpg","nickname":"小楼听风","note":"","ucode":"A9C9AE38FD18CB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":269634,"discussion_content":"gird和flex的适用环境不一样，gird更适用于整体布局的排版，等比例均匀分割等使用环境，而且safari不支持gird","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1589934996,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1032841,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c2/89/6bafc4bf.jpg","nickname":"尹双会","note":"","ucode":"D61A97734C8908","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344642,"discussion_content":"grid吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611541416,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":85952,"user_name":"阿成","can_delete":false,"product_type":"c1","uid":1390032,"ip_address":"","ucode":"CEC3CD65FB9333","user_header":"https://static001.geekbang.org/account/avatar/00/15/35/d0/f2ac6d91.jpg","comment_is_top":false,"comment_ctime":1555299068,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"48799939324","product_id":100023201,"comment_content":"https:&#47;&#47;gist.github.com&#47;aimergenge&#47;e26193440fa38ebbb9a54847540c29c7","like_count":11,"discussions":[{"author":{"id":2440442,"avatar":"https://static001.geekbang.org/account/avatar/00/25/3c/fa/b88b8b4e.jpg","nickname":"Hozan","note":"","ucode":"FADCE07AC849D8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389094,"discussion_content":"小姐姐，每节都有你评论啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629115503,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1564786,"avatar":"https://static001.geekbang.org/account/avatar/00/17/e0/72/6e0314e7.jpg","nickname":"Ace","note":"","ucode":"C77191A6B18845","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295997,"discussion_content":"姐姐啊，你怎么这么优秀。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596423976,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105148,"user_name":"靠人品去赢","can_delete":false,"product_type":"c1","uid":1301286,"ip_address":"","ucode":"7A20F9EBE847E1","user_header":"https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg","comment_is_top":false,"comment_ctime":1560930406,"is_pvip":false,"replies":[{"id":"58942","content":"兼容问题怎么可能有一下子解决的方法呢，我也是case by case去看的啊","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1574222205,"ip_address":"","comment_id":105148,"utype":1}],"discussion_count":2,"race_medal":0,"score":"44510603366","product_id":100023201,"comment_content":"flex是我刚开始做小程序，学到的第一个东西，真的好用，结合一些别的属性能解决很多兼容问题，而不再出现一机一况的情况，但是有的的时候，在做安卓和苹果的时候还是会遇到兼容性问题，能不能讲一下安卓和苹果的一些不同，比如在一个安卓上正常，在苹果上会出现边框被吃掉一部分的情况。","like_count":10,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454576,"discussion_content":"兼容问题怎么可能有一下子解决的方法呢，我也是case by case去看的啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574222205,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1986406,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJBzcWHFreCY92bE1wKn0cYcxdGVv9oEq0bibJk0Nh4UGcic0AGrr4jBtaWAYDabOflpevVQ9dVibYUg/132","nickname":"胡靓","note":"","ucode":"A649F676963B55","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":261177,"discussion_content":"&#34;苹果上会出现边框被吃掉一部分&#34;应该是因为你用了1rem这种宽度，改成1px就行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588944590,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":85804,"user_name":"北拉","can_delete":false,"product_type":"c1","uid":1495262,"ip_address":"","ucode":"2EDF39E678DB5E","user_header":"https://static001.geekbang.org/account/avatar/00/16/d0/de/689f48c6.jpg","comment_is_top":false,"comment_ctime":1555239235,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27325043011","product_id":100023201,"comment_content":"试过好多次，找了很多方法flex兼容ie9以下，每次都失败，有什么好的解决办法吗","like_count":6},{"had_liked":false,"id":315861,"user_name":"Geek_920664","can_delete":false,"product_type":"c1","uid":2288150,"ip_address":"","ucode":"42A32EFD7863FF","user_header":"","comment_is_top":false,"comment_ctime":1634024588,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23108861068","product_id":100023201,"comment_content":"分享一个学习flex的小游戏：http:&#47;&#47;flexboxfroggy.com&#47;","like_count":5},{"had_liked":false,"id":85591,"user_name":"彧豪","can_delete":false,"product_type":"c1","uid":1161233,"ip_address":"","ucode":"8979F477E0BC5B","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/11/26838646.jpg","comment_is_top":false,"comment_ctime":1555135941,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23029972421","product_id":100023201,"comment_content":"gird布局如果后面winter老师没有讲到，推荐你找找大漠老师的文章来看看，另外阮一峰老师也写了一篇，二者可以结合起来看看","like_count":5},{"had_liked":false,"id":86084,"user_name":"cjd","can_delete":false,"product_type":"c1","uid":1448797,"ip_address":"","ucode":"B34BB18C370152","user_header":"https://static001.geekbang.org/account/avatar/00/16/1b/5d/1d5d1c00.jpg","comment_is_top":false,"comment_ctime":1555309428,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18735178612","product_id":100023201,"comment_content":"直接calc(100%  - n)","like_count":4},{"had_liked":false,"id":119895,"user_name":"渴望做梦","can_delete":false,"product_type":"c1","uid":1398219,"ip_address":"","ucode":"9EB47530A69C91","user_header":"https://static001.geekbang.org/account/avatar/00/15/55/cb/1efe460a.jpg","comment_is_top":false,"comment_ctime":1564722385,"is_pvip":false,"replies":[{"id":"54068","content":"这就是基本的flex用法。","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1570774721,"ip_address":"","comment_id":119895,"utype":1}],"discussion_count":3,"race_medal":0,"score":"14449624273","product_id":100023201,"comment_content":"老师，为何最后一个宽度自适应的例子用 flex: 1 呢，flex: 1 表示什么含义呢？","like_count":3,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461118,"discussion_content":"这就是基本的flex用法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570774721,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1549519,"avatar":"https://static001.geekbang.org/account/avatar/00/17/a4/cf/a082eae7.jpg","nickname":"令狐洋葱","note":"","ucode":"8AFD005B62E020","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3857,"discussion_content":"大兄弟，要学会科学上网。\n\nflex属性是flex-grow, flex-shrink和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。\n\nflex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1564888200,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1626711,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqvv0pBus252QCFKlAbPjXsib7iadZxiabfJ6Gz1k0UMD7kV1euoTZqmOVydKyXH4f2YLLJLrVrWqibzQ/132","nickname":"扶苏","note":"","ucode":"A30651C16DE253","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5597,"discussion_content":"你也可以flex:2,3,4,5,6,7.....,但是如果有另一个flex，就会根据这个比例来分配","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566370303,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":85814,"user_name":"favorlm","can_delete":false,"product_type":"c1","uid":1120997,"ip_address":"","ucode":"CFD52127AA6E1D","user_header":"https://static001.geekbang.org/account/avatar/00/11/1a/e5/6899701e.jpg","comment_is_top":false,"comment_ctime":1555245450,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14440147338","product_id":100023201,"comment_content":"自动填充剩余宽度<br>&lt;!DOCTYPE html&gt;<br>&lt;html lang=&quot;en&quot;&gt;<br>  &lt;head&gt;<br>    &lt;meta charset=&quot;UTF-8&quot; &#47;&gt;<br>    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; &#47;&gt;<br>    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot; &#47;&gt;<br>    &lt;title&gt;自适应宽&lt;&#47;title&gt;<br>    &lt;style&gt;<br>      .box {<br>        position: absolute;<br>        width: 300px;<br>        height: 100px;<br>        background-color: cyan;<br>      }<br>      .childbox1Attr {<br>        position: absolute;<br>        background-color: bisque;<br>        width: 35px;<br>        height: 35px;<br>      }<br>      .childbox2Attr {<br>        position: absolute; <br>        background-color: beige;<br>        width: 35px;<br>        height: 35px;<br>      }<br>    &lt;&#47;style&gt;<br>  &lt;&#47;head&gt;<br>  &lt;body&gt;<br>    &lt;div class=&quot;box&quot;&gt;<br>      &lt;div class=&quot;childbox1Attr&quot;&gt;&lt;&#47;div&gt;<br>      &lt;div class=&quot;childbox2Attr&quot;&gt;&lt;&#47;div&gt;<br>    &lt;&#47;div&gt;<br>    &lt;script&gt;<br>        <br>            const childbox1Attr = {<br>                width: &#39;100&#39;<br>            };<br>            const childbox2Attr = {<br>                width: &#39;100&#39;,<br>                flex: &#39;1&#39;<br>            };<br>            const box = document.getElementsByClassName(&#39;box&#39;)[0];<br>            const childbox1Ele = document.getElementsByClassName(&#39;childbox1Attr&#39;)[0];<br>            const childbox2Ele = document.getElementsByClassName(&#39;childbox2Attr&#39;)[0];<br>            const boxcomputedStyle = window.getComputedStyle(box, null);<br>            const child1ComputedStyle = window.getComputedStyle(childbox1Ele, null);<br>            childbox1Ele.style.width = childbox1Attr.width+&#39;px&#39;;<br>            if(childbox2Attr.flex !== null || childbox2Attr.flex!==&#39;&#39;){<br>                if(childbox2Attr.flex === &#39;1&#39;){<br>                    &#47;&#47; 利用一下不安全特性，实在不知道怎么写<br>                    const childbox2EleWidth = boxcomputedStyle[&quot;width&quot;].substring(0,3) - child1ComputedStyle[&quot;width&quot;].substring(0,3);<br>                    childbox2Ele.style.width = childbox2EleWidth + &#39;px&#39;;<br>                    childbox2Ele.style.left = child1ComputedStyle[&quot;width&quot;]<br>                }<br>            }<br>        <br>        &lt;&#47;script&gt;<br>  &lt;&#47;body&gt;<br>&lt;&#47;html&gt;<br>","like_count":3},{"had_liked":false,"id":269260,"user_name":"坎坷的程序媛","can_delete":false,"product_type":"c1","uid":2261604,"ip_address":"","ucode":"5F86C173ADBCDD","user_header":"","comment_is_top":false,"comment_ctime":1608594066,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5903561362","product_id":100023201,"comment_content":"align-items默认值为stretch，所以平时没设置也自动等高了","like_count":1},{"had_liked":false,"id":172325,"user_name":"困到清醒","can_delete":false,"product_type":"c1","uid":1384381,"ip_address":"","ucode":"1CD20C408C0BC9","user_header":"https://static001.geekbang.org/account/avatar/00/15/1f/bd/04100cb4.jpg","comment_is_top":false,"comment_ctime":1579155131,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"5874122427","product_id":100023201,"comment_content":"老师也太棒了，每次垂直居中都奔溃，各种查百度，给我一种错觉，css靠经验靠运气，有时候都不知道为什么就成功了，然后下次又重新查。这一波从设计的讲解，豁然开朗，再也不会是无头苍蝇了。","like_count":1,"discussions":[{"author":{"id":2145313,"avatar":"","nickname":"Steve","note":"","ucode":"C921D4E486ACF5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339411,"discussion_content":"可以看英文的指南https://css-tricks.com/snippets/css/a-guide-to-flexbox/","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1609661345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":335840,"user_name":"Geek_59f56b","can_delete":false,"product_type":"c1","uid":2924146,"ip_address":"","ucode":"1400D8F62EE1C7","user_header":"https://static001.geekbang.org/account/avatar/00/2c/9e/72/8edab2e3.jpg","comment_is_top":false,"comment_ctime":1645712480,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645712480","product_id":100023201,"comment_content":"老师，把 Flex 延伸的方向称为“主轴”，flex延伸的方向是什么了？","like_count":0},{"had_liked":false,"id":330248,"user_name":"Jenny","can_delete":false,"product_type":"c1","uid":1958224,"ip_address":"","ucode":"90460501153A5C","user_header":"","comment_is_top":false,"comment_ctime":1641882781,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1641882781","product_id":100023201,"comment_content":" 超文本 应该怎么理解？","like_count":0}]}