{"id":294650,"title":"13 | 语法面面观：函数与闭包（三）","content":"<p><strong>课件及Demo下载链接</strong><br>\n<a href=\"https://gitee.com/geektime-geekbang/geektime-Rust\">https://gitee.com/geektime-geekbang/geektime-Rust</a></p>","comments":[{"had_liked":false,"id":280145,"user_name":"？","can_delete":false,"product_type":"c3","uid":2448074,"ip_address":"","ucode":"EDA9A79E5419BE","user_header":"https://static001.geekbang.org/account/avatar/00/25/5a/ca/2889fb5e.jpg","comment_is_top":false,"comment_ctime":1614093085,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"应该是唯一的可变应用（独占借用）","like_count":3},{"had_liked":false,"id":322069,"user_name":"Dowen Liu","can_delete":false,"product_type":"c3","uid":1440423,"ip_address":"","ucode":"DD072D44AD353D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLCrJQ4AZe8VrDkR6IO03V4Tda9WexVT4zZiahBjLSYOnZb1Y49JvD2f70uQwYSMibUMQvib9NmGxEiag/132","comment_is_top":false,"comment_ctime":1637155229,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"第二人示例，我觉得与逃逸闭包无关吧。这个例子反应的应该是 FnMut&#47;FnOnce 语义问题。\n把代码改成：\nfn c_mut2() -&gt; impl for&lt;&#39;a&gt; FnMut(&amp;&#39;a str) -&gt; String {\n    let mut s = &quot;hello &quot;.to_string();\n    move |i| { s += i; s.clone() }\n}\n\n这样编译就能通过了。编译器报错是因为 s 作为没有实现 Copy 的变量，不能移出FnMut闭包，如果移出就违反的 FnMut 的要求。\n把 impl FnMut 改成 impl FnOnce 也能通过编译。","like_count":2,"discussions":[{"author":{"id":2350967,"avatar":"https://static001.geekbang.org/account/avatar/00/23/df/77/d23023d1.jpg","nickname":"ACE","note":"","ucode":"F53A39BB4C4618","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589597,"discussion_content":"跟fn/mut/Once 也没有关系,主要是闭包内返回了栈上的内容了...","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665170661,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"四川","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":346114,"user_name":"Geek_2c578d","can_delete":false,"product_type":"c3","uid":2596938,"ip_address":"","ucode":"CD4D74C2DF3502","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLVicIre1H0bCSBic0KadlL215ibZd3NWeYOAWE9ibCkEic8ibd8QWEzELX4xhk176tU4vMkj82xX116ERw/132","comment_is_top":false,"comment_ctime":1652844693,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"第二个示例应该是 move 将所有权移动到闭包后，不能将闭包内捕获的环境变量所有权又移送到外部，否则的话下一次调用 FnMut 时环境变量已经没有了（因为所有权之前移出了），闭包的生命周期长于成员（即环境变量）的生命周期，自然会报错。这也是为什么把FnMut换成FnOnce就能编译通过的原因，因为此时闭包的生命周期和成员（即环境变量）的环境变量相等了","like_count":1},{"had_liked":false,"id":292367,"user_name":"Geek_7c4953","can_delete":false,"product_type":"c3","uid":1809168,"ip_address":"","ucode":"359745D4725D4F","user_header":"","comment_is_top":false,"comment_ctime":1620796488,"is_pvip":false,"replies":null,"discussion_count":2,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"为什么闭包只能是独占借用呢？如果闭包不独占会有什么安全问题？","like_count":1,"discussions":[{"author":{"id":2718966,"avatar":"https://static001.geekbang.org/account/avatar/00/29/7c/f6/028f80a8.jpg","nickname":"施泰博","note":"","ucode":"E88E4E737398EF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387499,"discussion_content":"悬垂指针，数据竞争","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1628217825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2843586,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/63/c2/83d737ff.jpg","nickname":"Amesy","note":"","ucode":"84D0B7D133520A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541529,"discussion_content":"闭包不独占借用的话，就可能会发生多个闭包操作这个环境变量的情况，就会发生数据竞争。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1640433118,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373553,"user_name":"张晶鹏","can_delete":false,"product_type":"c3","uid":1154768,"ip_address":"北京","ucode":"35FDDF671547F1","user_header":"https://static001.geekbang.org/account/avatar/00/11/9e/d0/efa32d10.jpg","comment_is_top":false,"comment_ctime":1682652448,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"为什么实例2里面 有没有move 一样的呢。正常应该是捕获引用， 如果不加move，即应该是 s 应该是&amp;String类型的啊","like_count":0},{"had_liked":false,"id":343238,"user_name":"万正宇","can_delete":false,"product_type":"c3","uid":2985047,"ip_address":"","ucode":"B8E70029D5F131","user_header":"https://static001.geekbang.org/account/avatar/00/2d/8c/57/b7bc2b9e.jpg","comment_is_top":false,"comment_ctime":1650723421,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"--011\n&#47;**\n1.函数项类型 \tFn Item Type\n2.函数指针类型\tFn Pointer Type\n3.闭包类型\t\tClosure\n*&#47;\n&#47;**01*&#47;\nstruct T(u8, u8);\nimpl T {\n    fn sum(a:u8, b:u8) -&gt; u8 {a+b}\n    fn math(&amp;self) -&gt; u8 { Self::sum(self.0, self.1) }\n}\nfn main() {\n    let t = T(1,2);\n    let add = T::sum;\n    let add_math = T::math;\n    assert_eq!(add(1,2), T::sum(1,2));\n    assert_eq!(add_math(&amp;t), t.math());\n}\n\n&#47;**02*&#47;\n#![allow(unused)]\ntype RGB = (u8, u8, u8);  &#47;&#47;别名\nfn color(c: &amp;str) -&gt; RGB {  (255, 255, 255)   }\nfn show(c: fn(&amp;str) -&gt; RGB) { println!(&quot;{:?}&quot;, color(&quot;white&quot;));  } \n\nfn main() {\n    let white = color;  &#47;&#47; Fn Item Type\n    let w: fn(&amp;str) -&gt; RGB = white;\n    show(white);    &#47;&#47;&#47;&#47; fn(&amp;str) -&gt; RGB ， Fn Pointer Type\n    show(w);        &#47;&#47;&#47;&#47; 隐式转化\n    println!(&quot;{:?}&quot;, std::mem::size_of_val(&amp;white)); &#47;&#47; 0   &#47;&#47;&#47;&#47;零大小类型优化\n    println!(&quot;{:?}&quot;, std::mem::size_of_val(&amp;w));     &#47;&#47; 8   &#47;&#47;&#47;&#47; Fn, FnMut, FnOnce\n    &#47;&#47;\n    let bibao = |s:&amp;str| {  (1, 1, 1) };        &#47;&#47;定义闭包?\n    show(bibao);\n}\n\n&#47;**03*&#47;\nfn counter(i: i32) -&gt; impl FnMut(i32) -&gt; i32 { &#47;&#47;i 环境变量，自由变量\n    move |n| n + i\n}\nfn main() {\n    let mut f = counter(2);\n    assert_eq!(3, f(1));\n}\n\n\n--012 闭包\n&#47;**\nOwnership ,  &amp;mut T ,  &amp;T \n所有权，可变借用，不可变借用\nFnOnce&lt;()&gt; (to similar = fn(T) 函数指针) , FnMut&lt;()&gt; ,  Fn&lt;()&gt;\ncall_once(()) , call_mut(()) , call(())\n*&#47;\nfn main() {\n    let mut arr = [1, 2, 3];\n    let mut c = |i| {   &#47;&#47;&#47;&#47; env_var\n        for idx in 0..3 {   arr[idx] = i;   }\n        println!(&quot;arr = {:?}&quot;, arr);\n    };\n    c(6);\n}\n\n\n--013\n&#47;** 逃逸，非逃逸，实现了的Trait? *&#47;\nfn c_mut() -&gt; impl for&lt;&#39;a&gt; FnOnce(&amp;&#39;a str) -&gt; String {\n    let mut s = &quot;hello&quot;.to_string();\n    move |i| {   s+= i; s   }\n}\n\nfn foo&lt;F: Fn() + Copy&gt;(f: F) {  f() }\nfn main() {\n    let i = &quot;, world&quot;;\n    let mut str_closure = c_mut();\n    \n    let mut arr = [1,2,3];\n    let p = &amp;mut arr;\n    {\n        let mut c = || { (*p)[0] = 0; };\n        c();\n    }\n    let z = &amp;p;\t&#47;&#47;唯一不可变引用\n}","like_count":0},{"had_liked":false,"id":333267,"user_name":"陆一鸣猜不动","can_delete":false,"product_type":"c3","uid":2831163,"ip_address":"","ucode":"68E89A037F9A0C","user_header":"https://static001.geekbang.org/account/avatar/00/2b/33/3b/0b25b622.jpg","comment_is_top":false,"comment_ctime":1644239941,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"没怎么消化，需要回来再看看","like_count":0}]}