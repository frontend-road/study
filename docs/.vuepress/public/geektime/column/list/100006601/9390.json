{"id":9390,"title":"23 | 想成为架构师，你必须掌握的CAP细节","content":"<p>理论的优点在于清晰简洁、易于理解，但缺点就是高度抽象化，省略了很多细节，导致在将理论应用到实践时，由于各种复杂情况，可能出现误解和偏差，CAP理论也不例外。如果我们没有意识到这些关键的细节点，那么在实践中应用CAP理论时，就可能发现方案很难落地。</p><p>而且当谈到数据一致性时，CAP、ACID、BASE难免会被我们拿出来讨论，原因在于这三者都是和数据一致性相关的理论，如果不仔细理解三者之间的差别，则可能会陷入一头雾水的状态，不知道应该用哪个才好。</p><p>今天，我来讲讲<span class=\"orange\">CAP的具体细节，简单对比一下ACID、BASE几个概念的关键区别点。</span></p><h2>CAP关键细节点</h2><p>埃里克·布鲁尔（Eric Brewer）在《CAP理论十二年回顾：“规则”变了》（<a href=\"http://www.infoq.com/cn/articles/cap-twelve-years-later-how-the-rules-have-changed\">http://www.infoq.com/cn/articles/cap-twelve-years-later-how-the-rules-have-changed</a>）一文中详细地阐述了理解和应用CAP的一些细节点，可能是由于作者写作风格的原因，对于一些非常关键的细节点一句话就带过了，这里我特别提炼出来重点阐述。</p><ul>\n<li>CAP关注的粒度是<strong>数据</strong>，而不是整个系统。</li>\n</ul><p>原文就只有一句话：</p><blockquote>\n<p>C与A之间的取舍可以在同一系统内以非常细小的粒度反复发生，而每一次的决策可能因为具体的操作，乃至因为牵涉到特定的数据或用户而有所不同。</p>\n</blockquote><!-- [[[read_end]]] --><p>但这句话是理解和应用CAP理论非常关键的一点。CAP理论的定义和解释中，用的都是system、node这类系统级的概念，这就给很多人造成了很大的误导，认为我们在进行架构设计时，整个系统要么选择CP，要么选择AP。但在实际设计过程中，每个系统不可能只处理一种数据，而是包含多种类型的数据，有的数据必须选择CP，有的数据必须选择AP。而如果我们做设计时，从整个系统的角度去选择CP还是AP，就会发现顾此失彼，无论怎么做都是有问题的。</p><p>以一个最简单的用户管理系统为例，用户管理系统包含用户账号数据（用户ID、密码）、用户信息数据（昵称、兴趣、爱好、性别、自我介绍等）。通常情况下，用户账号数据会选择CP，而用户信息数据会选择AP，如果限定整个系统为CP，则不符合用户信息数据的应用场景；如果限定整个系统为AP，则又不符合用户账号数据的应用场景。</p><p>所以在CAP理论落地实践时，我们需要将系统内的数据按照不同的应用场景和要求进行分类，每类数据选择不同的策略（CP还是AP），而不是直接限定整个系统所有数据都是同一策略。</p><ul>\n<li>CAP是忽略网络延迟的。</li>\n</ul><p>这是一个非常隐含的假设，布鲁尔在定义一致性时，并没有将延迟考虑进去。也就是说，当事务提交时，数据能够瞬间复制到所有节点。但实际情况下，从节点A复制数据到节点B，总是需要花费一定时间的。如果是相同机房，耗费时间可能是几毫秒；如果是跨地域的机房，例如北京机房同步到广州机房，耗费的时间就可能是几十毫秒。这就意味着，CAP理论中的C在实践中是不可能完美实现的，在数据复制的过程中，节点A和节点B的数据并不一致。</p><p>不要小看了这几毫秒或者几十毫秒的不一致，对于某些严苛的业务场景，例如和金钱相关的用户余额，或者和抢购相关的商品库存，技术上是无法做到分布式场景下完美的一致性的。而业务上必须要求一致性，因此单个用户的余额、单个商品的库存，理论上要求选择CP而实际上CP都做不到，只能选择CA。也就是说，只能单点写入，其他节点做备份，无法做到分布式情况下多点写入。</p><p>需要注意的是，这并不意味着这类系统无法应用分布式架构，只是说“单个用户余额、单个商品库存”无法做分布式，但系统整体还是可以应用分布式架构的。例如，下面的架构图是常见的将用户分区的分布式架构。</p><p><img src=\"https://static001.geekbang.org/resource/image/66/43/66476fd7ffd5d6f80f4f9ba0938d0443.png?wh=1126*787\" alt=\"\"></p><p>我们可以将用户id为0 ~ 100的数据存储在Node 1，将用户id为101 ~ 200的数据存储在Node 2，Client根据用户id来决定访问哪个Node。对于单个用户来说，读写操作都只能在某个节点上进行；对所有用户来说，有一部分用户的读写操作在Node 1上，有一部分用户的读写操作在Node 2上。</p><p>这样的设计有一个很明显的问题就是某个节点故障时，这个节点上的用户就无法进行读写操作了，但站在整体上来看，这种设计可以降低节点故障时受影响的用户的数量和范围，毕竟只影响20%的用户肯定要比影响所有用户要好。这也是为什么挖掘机挖断光缆后，支付宝只有一部分用户会出现业务异常，而不是所有用户业务异常的原因。</p><ul>\n<li>正常运行情况下，不存在CP和AP的选择，可以同时满足CA。</li>\n</ul><p>CAP理论告诉我们分布式系统只能选择CP或者AP，但其实这里的前提是系统发生了“分区”现象。如果系统没有发生分区现象，也就是说P不存在的时候（节点间的网络连接一切正常），我们没有必要放弃C或者A，应该C和A都可以保证，这就要求架构设计的时候<strong>既要考虑分区发生时选择CP还是AP，也要考虑分区没有发生时如何保证CA</strong>。</p><p>同样以用户管理系统为例，即使是实现CA，不同的数据实现方式也可能不一样：用户账号数据可以采用“消息队列”的方式来实现CA，因为消息队列可以比较好地控制实时性，但实现起来就复杂一些；而用户信息数据可以采用“数据库同步”的方式来实现CA，因为数据库的方式虽然在某些场景下可能延迟较高，但使用起来简单。</p><ul>\n<li>放弃并不等于什么都不做，需要为分区恢复后做准备。</li>\n</ul><p>CAP理论告诉我们三者只能取两个，需要“牺牲”（sacrificed）另外一个，这里的“牺牲”是有一定误导作用的，因为“牺牲”让很多人理解成什么都不做。实际上，CAP理论的“牺牲”只是说在分区过程中我们无法保证C或者A，但并不意味着什么都不做。因为在系统整个运行周期中，大部分时间都是正常的，发生分区现象的时间并不长。例如，99.99%可用性（俗称4个9）的系统，一年运行下来，不可用的时间只有50分钟；99.999%（俗称5个9）可用性的系统，一年运行下来，不可用的时间只有5分钟。分区期间放弃C或者A，并不意味着永远放弃C和A，我们可以在分区期间进行一些操作，从而让分区故障解决后，系统能够重新达到CA的状态。</p><p>最典型的就是在分区期间记录一些日志，当分区故障解决后，系统根据日志进行数据恢复，使得重新达到CA状态。同样以用户管理系统为例，对于用户账号数据，假设我们选择了CP，则分区发生后，节点1可以继续注册新用户，节点2无法注册新用户（这里就是不符合A的原因，因为节点2收到注册请求后会返回error），此时节点1可以将新注册但未同步到节点2的用户记录到日志中。当分区恢复后，节点1读取日志中的记录，同步给节点2，当同步完成后，节点1和节点2就达到了同时满足CA的状态。</p><p>而对于用户信息数据，假设我们选择了AP，则分区发生后，节点1和节点2都可以修改用户信息，但两边可能修改不一样。例如，用户在节点1中将爱好改为“旅游、美食、跑步”，然后用户在节点2中将爱好改为“美食、游戏”，节点1和节点2都记录了未同步的爱好数据，当分区恢复后，系统按照某个规则来合并数据。例如，按照“最后修改优先规则”将用户爱好修改为“美食、游戏”，按照“字数最多优先规则”则将用户爱好修改为“旅游，美食、跑步”，也可以完全将数据冲突报告出来，由人工来选择具体应该采用哪一条。</p><h2>ACID</h2><p>ACID是数据库管理系统为了保证事务的正确性而提出来的一个理论，ACID包含四个约束，下面我来解释一下。</p><p>1.Atomicity（原子性）</p><p>一个事务中的所有操作，要么全部完成，要么全部不完成，不会在中间某个环节结束。事务在执行过程中发生错误，会被回滚到事务开始前的状态，就像这个事务从来没有执行过一样。</p><p>2.Consistency（一致性）</p><p>在事务开始之前和事务结束以后，数据库的完整性没有被破坏。</p><p>3.Isolation（隔离性）</p><p>数据库允许多个并发事务同时对数据进行读写和修改的能力。隔离性可以防止多个事务并发执行时由于交叉执行而导致数据的不一致。事务隔离分为不同级别，包括读未提交（Read uncommitted）、读提交（read committed）、可重复读（repeatable read）和串行化（Serializable）。</p><p>4.Durability（持久性）</p><p>事务处理结束后，对数据的修改就是永久的，即便系统故障也不会丢失。</p><p>可以看到，ACID中的A（Atomicity）和CAP中的A（Availability）意义完全不同，而ACID中的C和CAP中的C名称虽然都是一致性，但含义也完全不一样。ACID中的C是指数据库的数据完整性，而CAP中的C是指分布式节点中的数据一致性。再结合ACID的应用场景是数据库事务，CAP关注的是分布式系统数据读写这个差异点来看，其实CAP和ACID的对比就类似关公战秦琼，虽然关公和秦琼都是武将，但其实没有太多可比性。</p><h2>BASE</h2><p>BASE是指基本可用（Basically Available）、软状态（ Soft State）、最终一致性（ Eventual Consistency），核心思想是即使无法做到强一致性（CAP的一致性就是强一致性），但应用可以采用适合的方式达到最终一致性。</p><p>1.基本可用（Basically Available）</p><p>分布式系统在出现故障时，允许损失部分可用性，即保证核心可用。</p><p>这里的关键词是“<strong>部分</strong>”和“<strong>核心</strong>”，具体选择哪些作为可以损失的业务，哪些是必须保证的业务，是一项有挑战的工作。例如，对于一个用户管理系统来说，“登录”是核心功能，而“注册”可以算作非核心功能。因为未注册的用户本来就还没有使用系统的业务，注册不了最多就是流失一部分用户，而且这部分用户数量较少。如果用户已经注册但无法登录，那就意味用户无法使用系统。例如，充了钱的游戏不能玩了、云存储不能用了……这些会对用户造成较大损失，而且登录用户数量远远大于新注册用户，影响范围更大。</p><p>2.软状态（Soft State）</p><p>允许系统存在中间状态，而该中间状态不会影响系统整体可用性。这里的中间状态就是CAP理论中的数据不一致。</p><p>3.最终一致性（Eventual Consistency）</p><p>系统中的所有数据副本经过一定时间后，最终能够达到一致的状态。</p><p>这里的关键词是“一定时间” 和 “最终”，“一定时间”和数据的特性是强关联的，不同的数据能够容忍的不一致时间是不同的。举一个微博系统的例子，用户账号数据最好能在1分钟内就达到一致状态，因为用户在A节点注册或者登录后，1分钟内不太可能立刻切换到另外一个节点，但10分钟后可能就重新登录到另外一个节点了；而用户发布的最新微博，可以容忍30分钟内达到一致状态，因为对于用户来说，看不到某个明星发布的最新微博，用户是无感知的，会认为明星没有发布微博。“最终”的含义就是不管多长时间，最终还是要达到一致性的状态。</p><p>BASE理论本质上是对CAP的延伸和补充，更具体地说，<strong>是对CAP中AP方案的一个补充</strong>。前面在剖析CAP理论时，提到了其实和BASE相关的两点：</p><ul>\n<li>CAP理论是忽略延时的，而实际应用中延时是无法避免的。</li>\n</ul><p>这一点就意味着完美的CP场景是不存在的，即使是几毫秒的数据复制延迟，在这几毫秒时间间隔内，系统是不符合CP要求的。因此CAP中的CP方案，实际上也是实现了最终一致性，只是“一定时间”是指几毫秒而已。</p><ul>\n<li>AP方案中牺牲一致性只是指分区期间，而不是永远放弃一致性。</li>\n</ul><p>这一点其实就是BASE理论延伸的地方，分区期间牺牲一致性，但分区故障恢复后，系统应该达到最终一致性。</p><p>综合上面的分析，ACID是数据库事务完整性的理论，CAP是分布式系统设计理论，BASE是CAP理论中AP方案的延伸。</p><h2>小结</h2><p>今天我为你讲了深入理解CAP理论所需要特别关注的细节点，以及ACID和BASE两个相似的术语，这些技术细节在架构设计中非常关键，希望对你有所帮助。</p><p>这就是今天的全部内容，留一道思考题给你吧，假如你来设计电商网站的高可用系统，按照CAP理论的要求，你会如何设计？</p><p>欢迎你把答案写到留言区，和我一起讨论。相信经过深度思考的回答，也会让你对知识的理解更加深刻。（编辑乱入：精彩的留言有机会获得丰厚福利哦！）</p>","neighbors":{"left":{"article_title":"22 | 想成为架构师，你必须知道CAP理论","id":9302},"right":{"article_title":"24 | FMEA方法，排除架构可用性隐患的利器","id":9391}},"comments":[{"had_liked":false,"id":21450,"user_name":"luop","can_delete":false,"product_type":"c1","uid":1118080,"ip_address":"","ucode":"474F53CA1D8718","user_header":"https://static001.geekbang.org/account/avatar/00/11/0f/80/7c3f35e4.jpg","comment_is_top":false,"comment_ctime":1535093141,"is_pvip":false,"replies":[{"id":"7730","content":"写的非常好👍👍","user_name":"作者回复","comment_id":21450,"uid":"1098920","ip_address":"","utype":1,"ctime":1535290143,"user_name_real":"华仔"}],"discussion_count":25,"race_medal":0,"score":"1715227044245","product_id":100006601,"comment_content":"结合这两期对 CAP 的学习和思考，谈下个人的理解。<br><br>设计分布式系统的两大初衷：横向扩展（scalability）和高可用性（availability）。“横向扩展”是为了解决单点瓶颈问题，进而保证高并发量下的「可用性」；“高可用性”是为了解决单点故障（SPOF）问题，进而保证部分节点故障时的「可用性」。由此可以看出，分布式系统的核心诉求就是「可用性」。这个「可用性」正是 CAP 中的 A：用户访问系统时，可以在合理的时间内得到合理的响应。<br><br>为了保证「可用性」，一个分布式系统通常由多个节点组成。这些节点各自维护一份数据，但是不管用户访问到哪个节点，原则上都应该读取到相同的数据。为了达到这个效果，一个节点收到写入请求更新自己的数据后，必须将数据同步到其他节点，以保证各个节点的数据「一致性」。这个「一致性」正是 CAP 中的 C：用户访问系统时，可以读取到最近写入的数据。<br><br>需要注意的是：CAP 并没有考虑数据同步的耗时，所以现实中的分布式系统，理论上无法保证任何时刻的绝对「一致性」；不同业务系统对上述耗时的敏感度不同。<br><br>分布式系统中，节点之间的数据同步是基于网络的。由于网络本身固有的不可靠属性，极端情况下会出现网络不可用的情况，进而将网络两端的节点孤立开来，这就是所谓的“网络分区”现象。“网络分区”理论上是无法避免的，虽然实际发生的概率较低、时长较短。没有发生“网络分区”时，系统可以做到同时保证「一致性」和「可用性」。<br><br>发生“网络分区”时，系统中多个节点的数据一定是不一致的，但是可以选择对用户表现出「一致性」，代价是牺牲「可用性」：将未能同步得到新数据的部分节点置为“不可用状态”，访问到这些节点的用户显然感知到系统是不可用的。发生“网络分区”时，系统也可以选择「可用性」，此时系统中各个节点都是可用的，只是返回给用户的数据是不一致的。这里的选择，就是 CAP 中的 P。<br><br>分布式系统理论上一定会存在 P，所以理论上只能做到 CP 或 AP。如果套用 CAP 中离散的 C&#47;A&#47;P 的概念，理论上没有 P 的只可能是单点（子）系统，所以理论上可以做到 CA。但是单点（子）系统并不是分布式系统，所以其实并不在 CAP 理论的描述范围内。","like_count":400,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422683,"discussion_content":"写的非常好👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535290143,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1049798,"avatar":"https://static001.geekbang.org/account/avatar/00/10/04/c6/60e21baa.jpg","nickname":"stronghearted","note":"","ucode":"569C52E01AB0EF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":236458,"discussion_content":"发生“网络分区”时，系统中多个节点的数据一定是不一致的，但是可以选择对用户表现出「一致性」，代价是牺牲「可用性」：将未能同步得到新数据的部分节点置为“不可用状态”，访问到这些节点的用户显然感知到系统是不可用的。发生“网络分区”时，系统也可以选择「可用性」，此时系统中各个节点都是可用的，只是返回给用户的数据是不一致的。这里的选择，就是 CAP 中的 P\n\n这里应该“就是 CAP 中的 “A”","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1587095759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1120563,"avatar":"https://static001.geekbang.org/account/avatar/00/11/19/33/0dd9e1f8.jpg","nickname":"Pitt","note":"","ucode":"7D0260560D6298","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1049798,"avatar":"https://static001.geekbang.org/account/avatar/00/10/04/c6/60e21baa.jpg","nickname":"stronghearted","note":"","ucode":"569C52E01AB0EF","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":351983,"discussion_content":"感觉你误解了楼主的意思，楼主已经强调发生“网络分区”时，即P。所以，如果楼主把这个段落中的两次“选择”加粗高亮或者改点格式，这个误解兴许就不会有了。比如：\n\n发生“网络分区”时，系统中多个节点的数据一定是不一致的，但是可以选择对用户表现出「一致性」，代价是牺牲「可用性」：将未能同步得到新数据的部分节点置为“不可用状态”，访问到这些节点的用户显然感知到系统是不可用的。发生“网络分区”时，系统也可以选择「可用性」，此时系统中各个节点都是可用的，只是返回给用户的数据是不一致的。\n这里（加：上面段落提到）的选择，就是 CAP 中的 P。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614557715,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":236458,"ip_address":""},"score":351983,"extra":""},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1120563,"avatar":"https://static001.geekbang.org/account/avatar/00/11/19/33/0dd9e1f8.jpg","nickname":"Pitt","note":"","ucode":"7D0260560D6298","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":564843,"discussion_content":"认为stronghearted的纠正是对的，你这里整了这么多文字，反而让人更加疑惑了～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650339801,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":351983,"ip_address":""},"score":564843,"extra":""}]},{"author":{"id":2619322,"avatar":"https://static001.geekbang.org/account/avatar/00/27/f7/ba/08044ec3.jpg","nickname":"张平","note":"","ucode":"4A600617F69991","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389792,"discussion_content":"感觉也是个p9呢，厉害，比原文写得更容易明白，简单。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1629432523,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1133723,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4c/9b/0b9903a9.jpg","nickname":"松雪庭","note":"","ucode":"FA6CC4005EDBE1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361667,"discussion_content":"这里的“网络分区”，就是 CAP 中的 P。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1616724945,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1439237,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f6/05/5c81abfd.jpg","nickname":"不加y","note":"","ucode":"23C907199234AD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350300,"discussion_content":"厉害，看你说的，才真正理解了","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1613804629,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1085120,"avatar":"https://static001.geekbang.org/account/avatar/00/10/8e/c0/7e70b689.jpg","nickname":"Lee","note":"","ucode":"158E29C62897CC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":324103,"discussion_content":"总结的很好👍🏿","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1605058167,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":179045,"discussion_content":"棒棒棒！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1582206746,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2873959,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/da/67/e18b690e.jpg","nickname":"神经蛙","note":"","ucode":"E0CE74B2363E10","race_medal":2,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591860,"discussion_content":"言简意赅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666876103,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"陕西"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2390479,"avatar":"https://static001.geekbang.org/account/avatar/00/24/79/cf/211f0208.jpg","nickname":"郝希军","note":"","ucode":"38CCE6B9BAF529","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554961,"discussion_content":"原本略懂CAP，看完作者的，不会了，再看完这个评论，又懂回来了～～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646701165,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1186089,"avatar":"https://static001.geekbang.org/account/avatar/00/12/19/29/4a8214b7.jpg","nickname":"Bug Killer","note":"","ucode":"2741A206F504E1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":407475,"discussion_content":"将未能同步得到新数据的部分节点置为“不可用状态”。\n那可用状态的节点和不可用状态的节点返回的结果不就不一致吗，为什么说这是AP?\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635007267,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1079829,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erOq5venaygDiaiboZs8ZCibnKDEj2KF5nfvaCFlxyNQzXqLF9aFIYIt0rbsxMPtx6icXeicQ5x3jxYr9w/132","nickname":"等猫来","note":"","ucode":"89E719B8E44548","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1186089,"avatar":"https://static001.geekbang.org/account/avatar/00/12/19/29/4a8214b7.jpg","nickname":"Bug Killer","note":"","ucode":"2741A206F504E1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413499,"discussion_content":"不可用的节点没有返回数据，直接报错了，所以保证了一致性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636504075,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":407475,"ip_address":""},"score":413499,"extra":""}]},{"author":{"id":2788146,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/8b/32/94b68ec7.jpg","nickname":"Peaceful","note":"","ucode":"500D0E73730B0B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":404330,"discussion_content":"我个天呀，我竟然看懂了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634289027,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1061991,"avatar":"https://static001.geekbang.org/account/avatar/00/10/34/67/06a7f9be.jpg","nickname":"while (1)等;","note":"","ucode":"BAEC7258D65B69","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387654,"discussion_content":"醍醐灌顶","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628324244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1175383,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ef/57/935c0ea1.jpg","nickname":"0+1","note":"","ucode":"03E5A11F8A3D37","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381076,"discussion_content":"豁然开朗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624887586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1736650,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKyuuhxu0HH4cIKCClCqx0LTurCCYWmNcFwfTWV5te5afsibp2yuDmC9mibEHx0Xy8QlvqvMWWcAib8g/132","nickname":"我的喵","note":"","ucode":"A7435BDBDD2587","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361741,"discussion_content":"这个总结可谓是整篇文章的提取精华","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616742507,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1922378,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/55/4a/8a841200.jpg","nickname":"ACK","note":"","ucode":"C5D09B18DEF151","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353623,"discussion_content":"非常厉害！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615180937,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1872697,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/93/39/f642023f.jpg","nickname":"Hplus","note":"","ucode":"DC32CBC3E9C11D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337167,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608810973,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1098910,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/9e/d820b03c.jpg","nickname":"狩魔天使范海辛","note":"","ucode":"E0E8CF701D18BD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337126,"discussion_content":"精彩","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608801613,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1915085,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/38/cd/4aa749cd.jpg","nickname":"果冻慢慢跑","note":"","ucode":"584220B6AFB026","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319365,"discussion_content":"感谢大神分享，总结的太棒了，学习了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604017698,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005574,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/58/06/6a9c089b.jpg","nickname":"Lee大树","note":"","ucode":"3C2012F6D21698","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312685,"discussion_content":"透彻","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602768536,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1024263,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a1/07/abb7bfe3.jpg","nickname":"杨智晓 ✟","note":"","ucode":"E3B56F4A38F63D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296823,"discussion_content":"mark，写的太好了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596676046,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1023739,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/9e/fb/abb7bfe3.jpg","nickname":"袁欣","note":"","ucode":"8FB9C54ADACD3D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":225852,"discussion_content":"总结的太好了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586400854,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1119581,"avatar":"https://static001.geekbang.org/account/avatar/00/11/15/5d/abb7bfe3.jpg","nickname":"三刀","note":"","ucode":"991478A544D18E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41089,"discussion_content":"娓娓道来，分析CAP三个特性以及特性间的关系很透彻","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572348745,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":13216,"user_name":"空档滑行","can_delete":false,"product_type":"c1","uid":1091611,"ip_address":"","ucode":"06A6A7F503FAA7","user_header":"https://static001.geekbang.org/account/avatar/00/10/a8/1b/ced1d171.jpg","comment_is_top":false,"comment_ctime":1529456407,"is_pvip":false,"replies":[{"id":"4481","content":"分析思路很清晰","user_name":"作者回复","comment_id":13216,"uid":"1098920","ip_address":"","utype":1,"ctime":1529550713,"user_name_real":"华仔"}],"discussion_count":4,"race_medal":0,"score":"396666447639","product_id":100006601,"comment_content":"一个电商网站核心模块有会员，订单，商品，支付，促销管理等。<br>对于会员模块，包括登录，个人设置，个人订单，购物车，收藏夹等，这些模块保证AP，数据短时间不一致不影响使用。<br>订单模块的下单付款扣减库存操作是整个系统的核心，我觉得CA都需要保证，在极端情况下牺牲P是可以的。<br>商品模块的商品上下架和库存管理保证CP,搜索功能因为本身就不是实时性非常高的模块，所以保证AP就可以了。<br>促销是短时间的数据不一致，结果就是优惠信息看不到，但是已有的优惠要保证可用，而且优惠可以提前预计算，所以可以保证AP<br>现在大部分的电商网站对于支付这一块是独立的系统，或者使用第三方的支付宝，微信。其实CAP是由第三方来保证的，支付系统是一个对CAP要求极高的系统，C是必须要保证的，AP中A相对更重要，不能因为分区，导致所有人都不能支付<br>","like_count":93,"discussions":[{"author":{"id":1033219,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","nickname":"JianXu","note":"","ucode":"2A61BDBB573BDC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544686,"discussion_content":"前面第22 讲里面说到放弃P 在现实中不存在啊？怎么理解呢？\n\n“虽然 CAP 理论定义是三个要素中只能取两个，但放到分布式环境下来思考，我们会发现必须选择 P（分区容忍）要素，因为网络本身无法做到 100% 可靠，有可能出故障，所以分区是一个必然的现象。如果我们选择了 CA 而放弃了 P，那么当发生分区现象时，为了保证 C，系统需要禁止写入，当有写入请求时，系统返回 error（例如，当前系统不允许写入），这又和 A 冲突了，因为 A 要求返回 no error 和 no timeout。因此，分布式系统理论上不可能选择 CA 架构，只能选择 CP 或者 AP 架构。”","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1641638820,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419580,"discussion_content":"分析思路很清晰","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1529550713,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1525903,"avatar":"https://static001.geekbang.org/account/avatar/00/17/48/8f/b728f820.jpg","nickname":"AlohaJack","note":"","ucode":"472912BF7EEDD8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575889,"discussion_content":"“AP中A相对更重要，不能因为分区，导致所有人都不能支付”。这里是说牺牲P？但是按照老师所说，牺牲P就会拒绝写入，岂不是A也没了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655172886,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2045809,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/37/71/b6e9eb76.jpg","nickname":"小灰锅","note":"","ucode":"C013556549590C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":403476,"discussion_content":"对于支付，保证AP就可以了吧，至于C，可以通过最终一致性保证，这样理解可以不？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634088405,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45030,"user_name":"乘风","can_delete":false,"product_type":"c1","uid":1115724,"ip_address":"","ucode":"0420C5535DACB7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLwSoTjHPX5tm4whBSfoZLX6toZxrZGUaLABQywKNf4MDc9toK3QSV7Z99ATcGicFCysoleQ5ISzmw/132","comment_is_top":false,"comment_ctime":1543540701,"is_pvip":false,"replies":[{"id":"16113","content":"这里的共享是指同一份数据在多个节点都有，但并不一定在所有节点都有，简单理解有数据复制的系统就是CAP应用的场景。<br><br>一份数据在多个节点有但不是所有节点都有，这是非对称集群；例如ES<br>所有数据在所有节点都有，这是对称集群，例如zookeeper","user_name":"作者回复","comment_id":45030,"uid":"1098920","ip_address":"","utype":1,"ctime":1543621615,"user_name_real":"华仔"}],"discussion_count":4,"race_medal":0,"score":"108917723101","product_id":100006601,"comment_content":"老师 你上面说redis集群是互联且数据共享，但按官网上说redis集群后，每个主节点的数据是不一致的，也不存在共享数据，现在对cap中指的分布式系统(互联且数据共享)还是不太明白，谢谢老师","like_count":26,"discussions":[{"author":{"id":1447569,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/WtHCCMoLJ2DvzqQwPYZyj2RlN7eibTLMHDMTSO4xIKjfKR1Eh9L98AMkkZY7FmegWyGLahRQJ5ibPzeeFtfpeSow/132","nickname":"脱缰的野马__","note":"","ucode":"D5F993E7232C61","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308183,"discussion_content":"我个人对集群的理解：集群嘛，就意味着有多个实例节点，这些节点都有共同的职责，集群分为两类，一类是主从集群，这种主要是为了提高系统的可用性，其中某个实例挂了通过自动故障发现、自动选主然后自动故障转移构造新的主从结构从而提升可用性，当然主从结构的读写分离也能提高系统的性能，另外一类是切片集群，这种主要是分散业务数据体量，将总量分散到不同的节点，降低单个节点的各方面（存储量、运算、访问等等）压力，从而提高系统的性能，当然也能提高系统的可用性，因为降低了单个节点的压力从而减少风险的发生，即使某个节点挂了也只是影响部分。回到”乘风“说的：每个节点的数据是不一致的，我想应该说的是redis的切片集群，而不是主从集群，其实切片集群并不共享业务数据，对redis切片集群，是存在共享数据，但是这个共享数据应该说是所有节点所记录的其它节点的数据槽信息（具体可以看redis集群相关知识，极客时间也新出来redis实战），通过这两篇的学习，我的理解是：CAP应用的场景应该是主从集群，主从集群才涉及到数据的同步复制操作，另外上一篇文章的评论区第一条评论有更专业的描述，还不太理解的同学可以去会过去看看","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1600864990,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430901,"discussion_content":"这里的共享是指同一份数据在多个节点都有，但并不一定在所有节点都有，简单理解有数据复制的系统就是CAP应用的场景。\n\n一份数据在多个节点有但不是所有节点都有，这是非对称集群；例如ES\n所有数据在所有节点都有，这是对称集群，例如zookeeper","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1543621615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333880,"discussion_content":"老师解释的对称集群和非对称集群很棒！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607657567,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1000060,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/42/7c/8ef14715.jpg","nickname":"🄽🄸🅇🅄🅂","note":"","ucode":"853763C229A5AA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":110678,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577752324,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":227146,"user_name":"刘毅","can_delete":false,"product_type":"c1","uid":1853403,"ip_address":"","ucode":"7CB4F4BBC92027","user_header":"","comment_is_top":false,"comment_ctime":1592298122,"is_pvip":false,"replies":[{"id":"83677","content":"总结的非常好，第三点可以优化为“分区解决时如何恢复为CA状态”","user_name":"作者回复","comment_id":227146,"uid":"1098920","ip_address":"","utype":1,"ctime":1592302769,"user_name_real":"华仔"}],"discussion_count":1,"race_medal":0,"score":"104671513226","product_id":100006601,"comment_content":"CAP理解：<br>任何一个正常运行的分布式系统，起源于CA状态，中间（发生分区时）可能经过CP和AP状态，最后回到CA状态。<br>所以一个分布式系统，需要考虑实现三点：<br>1.正常运行时的CA状态。<br>2.发生分区时转变为CP或AP状态。<br>3.分区解决时变会CA状态。","like_count":25,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498511,"discussion_content":"总结的非常好，第三点可以优化为“分区解决时如何恢复为CA状态”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592302769,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":13126,"user_name":"飞","can_delete":false,"product_type":"c1","uid":1102580,"ip_address":"","ucode":"4E11AA4D806F1E","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/f4/c0ec0ea9.jpg","comment_is_top":false,"comment_ctime":1529386304,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"91723699520","product_id":100006601,"comment_content":"独家解读啊，赞","like_count":21},{"had_liked":false,"id":82248,"user_name":"xiao皮孩。。","can_delete":false,"product_type":"c1","uid":1367499,"ip_address":"","ucode":"27AE899819D10F","user_header":"https://static001.geekbang.org/account/avatar/00/14/dd/cb/23b114a7.jpg","comment_is_top":false,"comment_ctime":1554168862,"is_pvip":false,"replies":[{"id":"30108","content":"是的👍👍","user_name":"作者回复","comment_id":82248,"uid":"1098920","ip_address":"","utype":1,"ctime":1554536453,"user_name_real":"华仔"}],"discussion_count":7,"race_medal":0,"score":"74568612894","product_id":100006601,"comment_content":"理解CAP理论的最简单方式是想象两个节点分处分区两侧。允许至少一个节点更新状态会导致数据不一致，即丧失了C性质。如果为了保证数据一致性，将分区一侧的节点设置为不可用，那么又丧失了A性质。除非两个节点可以互相通信，才能既保证C又保证A，这又会导致丧失P性质。","like_count":18,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445523,"discussion_content":"是的👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554536453,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1284730,"avatar":"https://static001.geekbang.org/account/avatar/00/13/9a/7a/dd08bc09.jpg","nickname":"姬","note":"","ucode":"968079E564FD2F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":565390,"discussion_content":"P不能通信吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650458561,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1186089,"avatar":"https://static001.geekbang.org/account/avatar/00/12/19/29/4a8214b7.jpg","nickname":"Bug Killer","note":"","ucode":"2741A206F504E1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":407474,"discussion_content":"将分区一侧的节点设置为不可用。\n那是不是一个节点可用，一个不可用，那返回的结果不就不一致吗，为什么说这是保证了数据一致性？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635007163,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1214808,"avatar":"https://static001.geekbang.org/account/avatar/00/12/89/58/ba318314.jpg","nickname":"db","note":"","ucode":"2E21B60B4C0FC8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1186089,"avatar":"https://static001.geekbang.org/account/avatar/00/12/19/29/4a8214b7.jpg","nickname":"Bug Killer","note":"","ucode":"2741A206F504E1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572867,"discussion_content":"不可用的那个节点就直接返回报错了，然后节点就被剔除集群，不再提供服务，所以对外提供服务的是那些可用的节点，所以数据依然是一致的，可能是这个意思吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653019588,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":407474,"ip_address":""},"score":572867,"extra":""}]},{"author":{"id":2045809,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/37/71/b6e9eb76.jpg","nickname":"小灰锅","note":"","ucode":"C013556549590C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":403509,"discussion_content":"确实是个好方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634092663,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1648533,"avatar":"https://static001.geekbang.org/account/avatar/00/19/27/95/d515c644.jpg","nickname":"郭立明","note":"","ucode":"87E8C304C24F0F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374569,"discussion_content":"这个总结，瞬间有点懂了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621251730,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1589591,"avatar":"https://static001.geekbang.org/account/avatar/00/18/41/57/2ba8f8ca.jpg","nickname":"SamzZ(周国强)","note":"","ucode":"10337D111151C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1802,"discussion_content":"@xiao皮孩。。 这个总结很形象！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562918169,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21578,"user_name":"正是那朵玫瑰","can_delete":false,"product_type":"c1","uid":1048261,"ip_address":"","ucode":"73D630B654573F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fe/c5/3467cf94.jpg","comment_is_top":false,"comment_ctime":1535174135,"is_pvip":false,"replies":[{"id":"7699","content":"不算，CAP的应用范围已经明确了：互联，共享数据。<br>这种情况下的不一致靠对账，人工修复等方式解决","user_name":"作者回复","comment_id":21578,"uid":"1098920","ip_address":"","utype":1,"ctime":1535276413,"user_name_real":"华仔"}],"discussion_count":1,"race_medal":0,"score":"61664716279","product_id":100006601,"comment_content":"老师有个疑问，像电商这样的系统，有订单系统和库存系统，创建订单会调用库存系统，这两个系统是互联的，但是并没有数据共享，但超时的情况下，会造成订单数据和库存数据状态不一致，这种算不算cap讨论范畴呢？","like_count":15,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422753,"discussion_content":"不算，CAP的应用范围已经明确了：互联，共享数据。\n这种情况下的不一致靠对账，人工修复等方式解决","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535276413,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21010,"user_name":"文竹","can_delete":false,"product_type":"c1","uid":1103167,"ip_address":"","ucode":"74413B1975976B","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/3f/80bf4841.jpg","comment_is_top":false,"comment_ctime":1534864340,"is_pvip":false,"replies":[{"id":"7535","content":"思路很清晰👍👍","user_name":"作者回复","comment_id":21010,"uid":"1098920","ip_address":"","utype":1,"ctime":1535007726,"user_name_real":"华仔"}],"discussion_count":1,"race_medal":0,"score":"57369439188","product_id":100006601,"comment_content":"电商网站核心功能有用户、产品、订单、支付、库存，相应的数据有用户、产品、订单、支付、库存。<br><br>对于用户数据，选择CP。因为用户注册后，可能几分钟后重新登录，所以需要满足一致性；在网络出现分区时，因为需要满足一致性而暂时不能提供写服务，所以无法满足可用性；对于分区容错性，只要能返回一个合理的响应就能满足，这一点能很好满足。<br><br>对于产品数据，无需满足一致性，所以选择AP。<br>对于订单数据，业务需要满足一致性，所以选择CP。<br>对于支付数据，业务需要满足一致性，所以选择CP。<br>对于库存数据，业务需要满足一致性，所以选择CP。<br>","like_count":14,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422494,"discussion_content":"思路很清晰👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535007726,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":190690,"user_name":"信信","can_delete":false,"product_type":"c1","uid":1303865,"ip_address":"","ucode":"8DF0EC045579FD","user_header":"https://static001.geekbang.org/account/avatar/00/13/e5/39/951f89c8.jpg","comment_is_top":false,"comment_ctime":1584683278,"is_pvip":false,"replies":[{"id":"74893","content":"多谢👍👍","user_name":"作者回复","comment_id":190690,"uid":"1098920","ip_address":"","utype":1,"ctime":1585540736,"user_name_real":"华仔"}],"discussion_count":1,"race_medal":0,"score":"31649454350","product_id":100006601,"comment_content":"PACELC定理了解一下？<br>在理论计算机科学中，PACELC定理是CAP定理的扩展。它指出，在分布式计算机系统中，在网络分区（P）的情况下，必须在可用性（A）和一致性（C）之间进行选择（根据c a p定理），但是（E），即使系统在没有分区的情况下正常运行，也必须在延迟（L）和一致性（C）之间进行选择。<br>PACELC定理首先由耶鲁大学的Daniel J. Abadi 在2010年的一篇博文中描述，他后来在2012年的一篇论文中正式确定。PACELC的目的是声称他的论点“忽略复制系统的一致性&#47;延迟权衡是一个主要的疏忽[在CAP中]，因为它在系统运行期间始终存在，而CAP仅在可以说是罕见的网络分区情况下才相关。","like_count":8,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488037,"discussion_content":"多谢👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585540736,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17097,"user_name":"zhouwm","can_delete":false,"product_type":"c1","uid":1100250,"ip_address":"","ucode":"874843F43B0EA2","user_header":"https://static001.geekbang.org/account/avatar/00/10/c9/da/22328e47.jpg","comment_is_top":false,"comment_ctime":1532434200,"is_pvip":false,"replies":[{"id":"6021","content":"不会的，zk是顺序一致性，保证不了完美cp，raft为了可理解而简化了异常处理，某些场景下会丢失数据","user_name":"作者回复","comment_id":17097,"uid":"1098920","ip_address":"","utype":1,"ctime":1532578484,"user_name_real":"华仔"}],"discussion_count":1,"race_medal":0,"score":"31597205272","product_id":100006601,"comment_content":"CAP理论延时问题：因为延时无法避免意味着完美CP场景不存在。—— 这个说法有问题，一致性是从外部使用者的角度去看的（黑盒），只要在回复应答前保障数据已经同步到其他节点，后续请求能得到新数据就是一致的，etcd就是完美cp，zk其实也能算完美cp。延时问题是系统设计的时候要考虑的点","like_count":7,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421040,"discussion_content":"不会的，zk是顺序一致性，保证不了完美cp，raft为了可理解而简化了异常处理，某些场景下会丢失数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532578484,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":13188,"user_name":"feifei","can_delete":false,"product_type":"c1","uid":1105431,"ip_address":"","ucode":"B1F8AE3AD82C51","user_header":"https://static001.geekbang.org/account/avatar/00/10/de/17/75e2b624.jpg","comment_is_top":false,"comment_ctime":1529453560,"is_pvip":false,"replies":[{"id":"4484","content":"大概思路就是这样，按照业务分析","user_name":"作者回复","comment_id":13188,"uid":"1098920","ip_address":"","utype":1,"ctime":1529550880,"user_name_real":"华仔"}],"discussion_count":1,"race_medal":0,"score":"31594224632","product_id":100006601,"comment_content":"电商网站要做高可用架构，就必须先确定业务模块，我没有过电商的经验，就说说我的理解，电商主要有商品，用户，交易，这3快核心<br><br>商品，商户发布某商品或者修改商品，用户查看商品，不需要非常强的一致性，即可以一部分用户先看到，可以使用最终一致性，满足可用性和容错性，可以使用发布队列，进行发布<br><br>用户，有普通的用户，商户这2种用户，用户模块的功能都是注册和登录，需要保证一致性，不能出现用户注册成功了，却不能登录。为了将宕机影响控制在最小，以用户进行分布，针对单节点可以使用数据库的主从，从节点分担读压力<br><br>交易，由于交易系统有强一致性要求，用户的交易要只能成功或者失败，有强事务的处理，考虑交易量大的问题，也按照用户进行分布，单节点采用数据库的集群，数据的多分写入<br><br>这是我的一个初步设计，还请老师指点，谢谢","like_count":7,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419569,"discussion_content":"大概思路就是这样，按照业务分析","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1529550880,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17899,"user_name":"zhouwm","can_delete":false,"product_type":"c1","uid":1100250,"ip_address":"","ucode":"874843F43B0EA2","user_header":"https://static001.geekbang.org/account/avatar/00/10/c9/da/22328e47.jpg","comment_is_top":false,"comment_ctime":1533011694,"is_pvip":false,"replies":[{"id":"6220","content":"CAP的C是严格意义上的绝对一致性，因为不考虑复制延时。<br><br>zk全部走master就不符合CAP的CP定义了，因为CAP是要求各个节点都可以提供读写操作，而不是只做备份复制<br><br>Raft论文中对于leader切换时可能覆盖日志给了一个详细的案例，这个案例不常见，发生概率非常小，而且只覆盖一条数据","user_name":"作者回复","comment_id":17899,"uid":"1098920","ip_address":"","utype":1,"ctime":1533042762,"user_name_real":"华仔"}],"discussion_count":3,"race_medal":0,"score":"23007848174","product_id":100006601,"comment_content":"cap的c指的是线性一致性还是顺序一致性？如果把zk改成读写请求都通过master的话，是否就算完美CP了？因为延时对外不可见。raft在什么情况下丢数据，我理解的丢数据指的是给了请求者正确应答后，写入的数据没保存好，理论上不应该出现的（如果是磁盘缓存导致的，有可能），k8s之类的用etcd也是基于raft的，如果会丢数据都无法保证的话，坑有点大，应该不会有人用吧","like_count":5,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421322,"discussion_content":"CAP的C是严格意义上的绝对一致性，因为不考虑复制延时。\n\nzk全部走master就不符合CAP的CP定义了，因为CAP是要求各个节点都可以提供读写操作，而不是只做备份复制\n\nRaft论文中对于leader切换时可能覆盖日志给了一个详细的案例，这个案例不常见，发生概率非常小，而且只覆盖一条数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533042762,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1066251,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/0Qp9pxHBvgdZAveKzsvUFFUicCJfe7ONzhC7jSNFQDNFvg0jRMXuqqZOdxG1qKosylUYrpIHUR2Q76w5m4HtVkg/132","nickname":"Aaron","note":"","ucode":"B0C504A76297C7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":355958,"discussion_content":"老师提到所有节点都提供写操作，拿MySQL主从架构来说，就不属于cap范畴吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615512463,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1293907,"avatar":"https://static001.geekbang.org/account/avatar/00/13/be/53/eda4b622.jpg","nickname":"Smile @ Life","note":"","ucode":"320EDAD5A8BE56","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301022,"discussion_content":"raft丢数据是什么意思","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598367565,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14040,"user_name":"我的名字叫浩仔丶","can_delete":false,"product_type":"c1","uid":1026003,"ip_address":"","ucode":"1E03CE9FBAFA88","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a7/d3/af0c1e4c.jpg","comment_is_top":false,"comment_ctime":1530150213,"is_pvip":false,"replies":[{"id":"4681","content":"断网，网线断也可以，网卡坏也可以，交换机故障也可以","user_name":"作者回复","comment_id":14040,"uid":"1098920","ip_address":"","utype":1,"ctime":1530178191,"user_name_real":"华仔"}],"discussion_count":1,"race_medal":0,"score":"23004986693","product_id":100006601,"comment_content":"老师，请教下P是什么时机才会触发分区呢？","like_count":6,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419851,"discussion_content":"断网，网线断也可以，网卡坏也可以，交换机故障也可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530178191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":13370,"user_name":"Leon Wong","can_delete":false,"product_type":"c1","uid":1073650,"ip_address":"","ucode":"B49B327367CF9E","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/f2/ca989d6f.jpg","comment_is_top":false,"comment_ctime":1529561406,"is_pvip":false,"replies":[{"id":"4548","content":"架构设计就是判断和选择😀","user_name":"作者回复","comment_id":13370,"uid":"1098920","ip_address":"","utype":1,"ctime":1529727094,"user_name_real":"华仔"}],"discussion_count":1,"race_medal":0,"score":"18709430590","product_id":100006601,"comment_content":"我理解CA和CP不是系统的整体设计，而是具体业务点的设计权衡，一种tradeoff ，表现形式是分布式系统在检测到网络分区发生的时候，是倾向于一致性C或是可用性A。而CA对应到的场景是不考虑分区容错的场景，数据有可能在整个分布式系统里只存一份(如果引入多副本相当于引入分区问题)，那么就会有单点故障的风险，只能通过将数据分散存储在不同服务器的做法来降低风险的影响面。<br><br>可见每一个设计都有优势，也有弊端，我们需要根据具体场景去做tradeoff……","like_count":4,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419629,"discussion_content":"架构设计就是判断和选择😀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1529727094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":13184,"user_name":"肖一林","can_delete":false,"product_type":"c1","uid":1113317,"ip_address":"","ucode":"1DE45D906EB836","user_header":"https://static001.geekbang.org/account/avatar/00/10/fc/e5/605f423f.jpg","comment_is_top":false,"comment_ctime":1529450333,"is_pvip":false,"replies":[{"id":"4485","content":"掌握了理论，看具体各种系统实现就比较容易理解了","user_name":"作者回复","comment_id":13184,"uid":"1098920","ip_address":"","utype":1,"ctime":1529550933,"user_name_real":"华仔"}],"discussion_count":1,"race_medal":0,"score":"18709319517","product_id":100006601,"comment_content":"在开源的分布式系统中，通常可以让用户配置，选择是CP还是AP，比如kafka，每种消息都可以选择配置。这就是CAP理论对数据粒度的控制。老师归纳的非常好。","like_count":5,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419567,"discussion_content":"掌握了理论，看具体各种系统实现就比较容易理解了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1529550933,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":13166,"user_name":"王磊","can_delete":false,"product_type":"c1","uid":1050085,"ip_address":"","ucode":"A4DE9804642A08","user_header":"https://static001.geekbang.org/account/avatar/00/10/05/e5/aa579968.jpg","comment_is_top":false,"comment_ctime":1529418287,"is_pvip":false,"replies":[{"id":"4487","content":"考虑P的系统在分区场景下还能提供部分业务","user_name":"作者回复","comment_id":13166,"uid":"1098920","ip_address":"","utype":1,"ctime":1529551114,"user_name_real":"华仔"}],"discussion_count":2,"race_medal":0,"score":"18709287471","product_id":100006601,"comment_content":"系统架构中考虑p和不考虑p，对外表现是什么?例如对于考虑p的系统，当p发生时，它还是functon的?发生分区意味着节点间不再联通，数据不再共享，要么为了c回复错误，此时丢了a; 要么为了a，但可能会返回过期数据，丢了c。所以考虑了p比没考虑p的系统到底带来额外什么好处?","like_count":4,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419564,"discussion_content":"考虑P的系统在分区场景下还能提供部分业务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1529551114,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1315215,"avatar":"https://static001.geekbang.org/account/avatar/00/14/11/8f/0d7ee6c7.jpg","nickname":"Kee","note":"","ucode":"446F15F42DEA3B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541356,"discussion_content":"不考虑P是不是可以理解为：当发生分区时，不会容忍分区，而直接挂掉（不提供服务）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640339513,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":257626,"user_name":"第一装甲集群司令克莱斯特","can_delete":false,"product_type":"c1","uid":1265707,"ip_address":"","ucode":"4E8FBB23AD860B","user_header":"https://static001.geekbang.org/account/avatar/00/13/50/2b/2344cdaa.jpg","comment_is_top":false,"comment_ctime":1604045050,"is_pvip":false,"replies":[{"id":"94076","content":"工程实现和理论模型有巨大的鸿沟","user_name":"作者回复","comment_id":257626,"uid":"1098920","ip_address":"","utype":1,"ctime":1604388599,"user_name_real":"华仔"}],"discussion_count":1,"race_medal":0,"score":"14488946938","product_id":100006601,"comment_content":"CAP追求强一致性是丰满的梦想，BASE最终一致性才是骨感的现实！","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":508396,"discussion_content":"工程实现和理论模型有巨大的鸿沟","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604388599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235447,"user_name":"Han","can_delete":false,"product_type":"c1","uid":1122349,"ip_address":"","ucode":"280808D4F641AA","user_header":"https://static001.geekbang.org/account/avatar/00/11/20/2d/dfa5bec8.jpg","comment_is_top":false,"comment_ctime":1595040052,"is_pvip":false,"replies":[{"id":"87415","content":"这样做是通过限制主才能写来避免数据一致性问题，但是复杂度转移到如何选举主上去了，这就是大家普遍认为选举比数据一致性要简单一些😁","user_name":"作者回复","comment_id":235447,"uid":"1098920","ip_address":"","utype":1,"ctime":1595475088,"user_name_real":"华仔"}],"discussion_count":1,"race_medal":0,"score":"14479941940","product_id":100006601,"comment_content":"您提到CAP是要求各个节点都可以提供读写操作，但现在大部分的分布式中间件实现基本都是一主多从架构，只有主节点才会接收写请求，主从节点都能接收读请求。 而且很多一致性算法都是设定只有主节点才接收写请求，然后把数据同步到从节点。 请问您怎么看？","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501725,"discussion_content":"这样做是通过限制主才能写来避免数据一致性问题，但是复杂度转移到如何选举主上去了，这就是大家普遍认为选举比数据一致性要简单一些😁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595475088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40615,"user_name":"姜华梁taric","can_delete":false,"product_type":"c1","uid":1128064,"ip_address":"","ucode":"D7662F20A1EA24","user_header":"https://static001.geekbang.org/account/avatar/00/11/36/80/a7167a3a.jpg","comment_is_top":false,"comment_ctime":1542636423,"is_pvip":false,"replies":[{"id":"14754","content":"memcache集群不互联不共享数据，redis集群互联且共享数据","user_name":"作者回复","comment_id":40615,"uid":"1098920","ip_address":"","utype":1,"ctime":1542725629,"user_name_real":"华仔"}],"discussion_count":1,"race_medal":0,"score":"14427538311","product_id":100006601,"comment_content":"老师，互联与共享数据，怎么理解，可以举一个实例嘛","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429570,"discussion_content":"memcache集群不互联不共享数据，redis集群互联且共享数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542725629,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":13083,"user_name":"云辉","can_delete":false,"product_type":"c1","uid":1103058,"ip_address":"","ucode":"0E67E8E8421294","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/d2/96dbfa5a.jpg","comment_is_top":false,"comment_ctime":1529368422,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14414270310","product_id":100006601,"comment_content":"对CAP和Base了解更清楚了，原来Base是说出现P的情况下一种合适的解决方案","like_count":3,"discussions":[{"author":{"id":1438860,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f4/8c/0866b228.jpg","nickname":"子房","note":"","ucode":"CB05938C248BB3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391742,"discussion_content":"是对 p 发生  情况下的 ap 的一种补充","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630598473,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":25379,"user_name":"阿巍-豆夫","can_delete":false,"product_type":"c1","uid":1005123,"ip_address":"","ucode":"732188848B0A85","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/43/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1537321053,"is_pvip":false,"replies":[{"id":"9252","content":"直接不允许写，或者分区节点不提供服务，参考Paxos或者Zookeeper","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1537341796,"ip_address":"","comment_id":25379,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10127255645","product_id":100006601,"comment_content":"老师，我一直很困惑，在cp的架构中，如果一旦发生分区，怎么保证c呢？ 连个节点网络都不可达了，怎么可能保证一致性呢？ ap我能理解为很好实现。","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424278,"discussion_content":"直接不允许写，或者分区节点不提供服务，参考Paxos或者Zookeeper","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537341796,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2061524,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/74/d4/38d813f0.jpg","nickname":"Kerry","note":"","ucode":"92F809EC998FC6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385493,"discussion_content":"假设发生网络分区前，每个节点都知道集群节点的总数（2N+1，确保奇数）。当发生了网络分区，节点数较多的分区A可以接受写入，而节点数较少的分区B直接拒绝写入或停止服务，这样就保证了一致性，但牺牲了可用性，因为分区B不能正常工作。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627096295,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":132726,"user_name":"Geek_88604f","can_delete":false,"product_type":"c1","uid":1501234,"ip_address":"","ucode":"33DD1318E53814","user_header":"","comment_is_top":false,"comment_ctime":1568205062,"is_pvip":false,"replies":[{"id":"52005","content":"分析到位","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1569235443,"ip_address":"","comment_id":132726,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5863172358","product_id":100006601,"comment_content":"        电商架构从场景上看主要涉及到查询和下单，对查询操作来说可以满足BASE理论:正常情况下用户查询到某个商品有剩余，但是查询的时候却提示商品已售完，这也是可以接受的（即软状态）；当后端服务出现异常时可以通过降级等措施优先保证A（即基本可用）；当用户实际下单的时候还会涉及到扣款和扣库存，通常采用TCC或MQ异步确保型等分布式事务技术来保证C，异常情况下人工介入保证E。<br>          从业务特点上看电商业务流量大、时延低、可靠性要求高。要支持大流量后端必须是多实例，通过ID或HASH的方式将用户分配到不同实例上。每个实例对接独立的DB。DB可以选择单实例以保证C，这样当实例故障后该分区的用户会业务不可用，由于只影响少量用户只要做到快速恢复即可，如果还要考虑数据迁移那就太复杂了。；也可以选择主备以保证A（当选择A时主备可能发生脑裂，即P）。<br>        从数据上看分为用户数据、商品数据、订单数据，每种数据进一步细分为关键数据和非关键数据，关键数据要满足C，非关键数据可以就考虑满足A。这里的商品数据需要特别考虑，因为必须每个分区共享，但是由于同步的时间差是没有办法做到真正的C的。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467089,"discussion_content":"分析到位","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569235443,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129467,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1567133807,"is_pvip":false,"replies":[{"id":"48280","content":"分析思路很好","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1567152852,"ip_address":"","comment_id":129467,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5862101103","product_id":100006601,"comment_content":"电商系统，首先回想一下，我觉得涉及的东西相当庞杂，如果以是否对用户可见来划分，对用户可见的部分有账户管理、商品搜索管理、订单管理等，主要涉及用户登录，商品搜索列表页，商品详情页，商品结算页，商品支付页，订单列表页，订单详情页，售后商品页等。用户不可见的主要是商品的采购管理，商品的仓储管理，订单的物流管理，订单的退换货，订单的备件管理等，当然，还有秒杀、夺宝岛、时效等。根据CAP理论P不可避免，我们只能根据业务情况去权衡是选择C还是A，我觉得只要和钱不直接挂钩的为了系统的高可用性都会选择A，保证系统的可用性，数据一致性采用最终一致性，而和钱直接挂钩比如：支付，我觉得就应该选择C啦！即使提示支付失败牺牲点用户的体验，也不要造成用户的误会。<br>不过，这些情况发生的概率比较小，可能我们的系统相对用户感知度小，经过几次大促都没有出现什么特别大的问题。如果有问题，我们也会保A的，系统都不可用了，那比出现可弥补的错误要严重的多。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465485,"discussion_content":"分析思路很好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567152852,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95613,"user_name":"丶丶丶丶","can_delete":false,"product_type":"c1","uid":1183896,"ip_address":"","ucode":"AC5808FA03147B","user_header":"https://static001.geekbang.org/account/avatar/00/12/10/98/bba354ae.jpg","comment_is_top":false,"comment_ctime":1558101125,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5853068421","product_id":100006601,"comment_content":"意思就是CAP就是一个“保大保小”的选择题。需要规定好不同情况下遇到这个选择题时的答案，这样在遇到这种问题时不管是系统自动处理还是人工干预都有法可依","like_count":1},{"had_liked":false,"id":95231,"user_name":"金蝉子","can_delete":false,"product_type":"c1","uid":1180714,"ip_address":"","ucode":"F4FC2E67125F83","user_header":"https://static001.geekbang.org/account/avatar/00/12/04/2a/462d01db.jpg","comment_is_top":false,"comment_ctime":1557993542,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5852960838","product_id":100006601,"comment_content":"CAP细节：<br>1，CAP关注的粒度是数据，而不是系统，系统中往往需要根据模块业务特性来选择是AP还是CP<br>2，CAP是忽略网络延迟的，在存在延迟的情况下，没有绝对的CP，都是某种意义上的最终一致性<br>3，在没有分区出现的情况下，是可以同时满足CA的，并不是说在分区出现的情况下，可以牺牲掉C或者A，而是要在分区恢复的时候能够自愈<br>4，BASE理论是对AP的延伸，达到最终一致性","like_count":1},{"had_liked":false,"id":82772,"user_name":"胖胖的程序猿","can_delete":false,"product_type":"c1","uid":1110423,"ip_address":"","ucode":"2C0B0F3A83F5D6","user_header":"https://static001.geekbang.org/account/avatar/00/10/f1/97/e3bbbb14.jpg","comment_is_top":false,"comment_ctime":1554303620,"is_pvip":false,"replies":[{"id":"30106","content":"你说的这个不算，分布式节点通过复制来共享数据才算","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1554536354,"ip_address":"","comment_id":82772,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5849270916","product_id":100006601,"comment_content":"怎么理解共享数据，假如A,B两个不同服务相连，并且公用同一个数据库表，这个是否算共享，是否算CAP范围。看上篇是要节点间发生数据复制情况才在cap范围，那一般是中间件系统才会有节点数据复制，web应用一般都不会有数据复制吧","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445718,"discussion_content":"你说的这个不算，分布式节点通过复制来共享数据才算","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554536354,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17213,"user_name":"海军上校","can_delete":false,"product_type":"c1","uid":1104290,"ip_address":"","ucode":"7B0D9EC01A3F36","user_header":"https://static001.geekbang.org/account/avatar/00/10/d9/a2/afbc447c.jpg","comment_is_top":false,"comment_ctime":1532502483,"is_pvip":false,"replies":[{"id":"6010","content":"心跳也可以，别人通知它也可以，取决于不同的架构方式，你看看高可用集群的架构模式","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1532577615,"ip_address":"","comment_id":17213,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5827469779","product_id":100006601,"comment_content":"选择ap后，节点2如何感知到分区存在，然后返回错误的～不太懂","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421085,"discussion_content":"心跳也可以，别人通知它也可以，取决于不同的架构方式，你看看高可用集群的架构模式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532577615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":13988,"user_name":"jacy","can_delete":false,"product_type":"c1","uid":1103456,"ip_address":"","ucode":"0022A8759DDCE6","user_header":"https://static001.geekbang.org/account/avatar/00/10/d6/60/f21b2164.jpg","comment_is_top":false,"comment_ctime":1530105016,"is_pvip":false,"replies":[{"id":"4688","content":"思路正确，区分不同数据","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1530178448,"ip_address":"","comment_id":13988,"utype":1}],"discussion_count":1,"race_medal":1,"score":"5825072312","product_id":100006601,"comment_content":"只从电商网站的核心业务分析，不考虑登录注册等业务，商品信息显示可细分为关键商品信息（如价格，库存）和非关键信息（商品介绍，用户评论），可按以前提到的分表分库的方法进行信息切割，对关键信息采用ca,非关键信息采用ap,最终达到base即可。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419834,"discussion_content":"思路正确，区分不同数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530178448,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":13642,"user_name":"Geek_59a17f","can_delete":false,"product_type":"c1","uid":1119733,"ip_address":"","ucode":"61D49D5983AD3E","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/f5/4fb5284b.jpg","comment_is_top":false,"comment_ctime":1529891197,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5824858493","product_id":100006601,"comment_content":"综合上面的分析，ACID 是数据库事务完整性的理论，CAP 是分布式系统设计理论，BASE 是 CAP 理论中 AP 方案的延伸。","like_count":1},{"had_liked":false,"id":13197,"user_name":"何国平","can_delete":false,"product_type":"c1","uid":1101355,"ip_address":"","ucode":"251BA091AF8690","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/2b/a47a0936.jpg","comment_is_top":false,"comment_ctime":1529454732,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5824422028","product_id":100006601,"comment_content":"解析到位，分布式系统无法保持完全一致性，只能保持最终一致性","like_count":1},{"had_liked":false,"id":13122,"user_name":"云学","can_delete":false,"product_type":"c1","uid":1027233,"ip_address":"","ucode":"366AE90BA06356","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ac/a1/43d83698.jpg","comment_is_top":false,"comment_ctime":1529383889,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5824351185","product_id":100006601,"comment_content":"能够结合实践讲解理论才是真本事，特喜欢这种文章","like_count":1},{"had_liked":false,"id":348484,"user_name":"| ~浑蛋~","can_delete":false,"product_type":"c1","uid":3024820,"ip_address":"","ucode":"B6904B44DFA805","user_header":"https://static001.geekbang.org/account/avatar/00/2e/27/b4/df65c0f7.jpg","comment_is_top":false,"comment_ctime":1655129933,"is_pvip":true,"discussion_count":0,"race_medal":3,"score":"1655129933","product_id":100006601,"comment_content":"数据库的数据完整性是啥意思","like_count":0},{"had_liked":false,"id":345540,"user_name":"Hugh","can_delete":false,"product_type":"c1","uid":2285931,"ip_address":"","ucode":"77434E01E1D715","user_header":"https://static001.geekbang.org/account/avatar/00/22/e1/6b/74a8b7d8.jpg","comment_is_top":false,"comment_ctime":1652367827,"is_pvip":true,"replies":[{"id":"126111","content":"理论的角度来说是强一致性的","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1652405944,"ip_address":"","comment_id":345540,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1652367827","product_id":100006601,"comment_content":"既然CAP是忽略网络延迟的，无法做到完美的一致性，那为什么说CAP的一致性是指强一致性呢？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571769,"discussion_content":"理论的角度来说是强一致性的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652405944,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2285931,"avatar":"https://static001.geekbang.org/account/avatar/00/22/e1/6b/74a8b7d8.jpg","nickname":"Hugh","note":"","ucode":"77434E01E1D715","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":571770,"discussion_content":"了解了，谢谢老师解答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652405987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":571769,"ip_address":""},"score":571770,"extra":""}]}]},{"had_liked":false,"id":342953,"user_name":"Geek_06b952","can_delete":false,"product_type":"c1","uid":2916538,"ip_address":"","ucode":"858B0CB73F3633","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eosNxKtseLC7SDdK2NzgBvqjDiaEQZyHiblaMT4MuYicn6rgk9LxXDUUNhL4yia7WAFmeXUZRTVLxSNbg/132","comment_is_top":false,"comment_ctime":1650547181,"is_pvip":false,"replies":[{"id":"125379","content":"简化版的Paxos，另外，raft官网本身就有很好的介绍资料: https:&#47;&#47;raft.github.io&#47; ","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1650846093,"ip_address":"","comment_id":342953,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1650547181","product_id":100006601,"comment_content":"现在大厂好像用raft 协议比较多。能简单介绍一下 raft吗？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":567109,"discussion_content":"简化版的Paxos，另外，raft官网本身就有很好的介绍资料: https://raft.github.io/ ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650846093,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":342563,"user_name":"William Ning","can_delete":false,"product_type":"c1","uid":1592279,"ip_address":"","ucode":"4DB8D05E69E5F3","user_header":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","comment_is_top":false,"comment_ctime":1650344543,"is_pvip":true,"replies":[{"id":"125167","content":"评论卧虎藏龙","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1650415829,"ip_address":"","comment_id":342563,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1650344543","product_id":100006601,"comment_content":"看了文章和评论以及回复，感觉大佬很多～ Keep Learning～","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":565155,"discussion_content":"评论卧虎藏龙","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650415829,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":340068,"user_name":"let_me_go","can_delete":false,"product_type":"c1","uid":1510177,"ip_address":"","ucode":"A5936F5C5E3D65","user_header":"https://static001.geekbang.org/account/avatar/00/17/0b/21/f1aea35b.jpg","comment_is_top":false,"comment_ctime":1648567337,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1648567337","product_id":100006601,"comment_content":"CAP：在网络发生分区时，我们只能在CP和AP之间选择，但是之后要进行补偿来同时满足CA，在正常情况下，一个分布式系统能同时具备C和A。在网络发生分区时，选择CP，由于各节点之间的数据同步也需要花费时间，不可能做到时时刻刻各个节点之间的数据都保持一致，完美的 CP 场景实际是不存在的。理论和实践是有差距的，需要取舍，如果就是要强一致性的，那么可以写操作限制在单台机器上，不做分布式写，读可以分布式读。选择AP，仅仅是在发生网络分区这样的故障的时候放弃了一致性C，分区故障恢复后，系统应该要达到最终一致性。<br>ACID：Atomicity(原子性)，Consistency(一致性)，Isolation(隔离性)，Durability(持久性)。ACID主要都是针对事务而言。原子性，事务具有原子性，整个执行过程不会被打断，和并发编程中的原子性类似。一致性，要求数据具有一致性，事务要么成功，要么失败，事务执行完成后不存在第三种状态，数据也是，要么是事务执行成功后的状态，要么是执行前的状态。隔离性，事务之间是隔离的，引申出来就有数据库的隔离级别。读未提交，读已提交，可重复读，串行化。持久性，事务一旦成功，数据就一定能持久化，不会因为宕机等原因重启数据库导致丢数据，引申出来就有mysql的bin log ，redo log等机制。<br>BASE：BASE 是指基本可用(Basically Available)，软状态(Soft State)，最终一致性(Eventual Consistency)，可以看作是CAP的衍生，发生网络分区P时，选择A，但是当系统恢复以后，我们最终还是需要达到C。发生网络分区P时，选择C，实践很难达到强一致性，通常是保证最终一致性即可。","like_count":0},{"had_liked":false,"id":338490,"user_name":"if...else...","can_delete":false,"product_type":"c1","uid":2550743,"ip_address":"","ucode":"D0565908C99695","user_header":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","comment_is_top":false,"comment_ctime":1647523003,"is_pvip":false,"discussion_count":0,"race_medal":4,"score":"1647523003","product_id":100006601,"comment_content":"厉害了，老师","like_count":0},{"had_liked":false,"id":334439,"user_name":"Geek_aq","can_delete":false,"product_type":"c1","uid":2033256,"ip_address":"","ucode":"6FFE7A9D746964","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKHxicHW07jz5vB9I8QAonrDXrcFmOS9CtqufVexs0wY1YxH7picctcTMOiaibgVvwkQX3UcicqqUXWTYQ/132","comment_is_top":false,"comment_ctime":1644936531,"is_pvip":false,"replies":[{"id":"122243","content":"谢谢 ：）","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1645062488,"ip_address":"","comment_id":334439,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1644936531","product_id":100006601,"comment_content":"干货满满 核心思想讲解的很真切！","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551554,"discussion_content":"谢谢 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645062488,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":331946,"user_name":"易飞","can_delete":false,"product_type":"c1","uid":2630424,"ip_address":"","ucode":"32AC28754237F7","user_header":"https://static001.geekbang.org/account/avatar/00/28/23/18/4284361f.jpg","comment_is_top":false,"comment_ctime":1642916773,"is_pvip":false,"replies":[{"id":"121311","content":"难在“取舍”二字","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1643000207,"ip_address":"","comment_id":331946,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1642916773","product_id":100006601,"comment_content":"理论理解了，真正去落地还是有难度的","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548024,"discussion_content":"难在“取舍”二字","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643000207,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":313565,"user_name":"菜波","can_delete":false,"product_type":"c1","uid":2032894,"ip_address":"","ucode":"DA7DED66709FA2","user_header":"https://static001.geekbang.org/account/avatar/00/1f/04/fe/60db4684.jpg","comment_is_top":false,"comment_ctime":1632505695,"is_pvip":false,"replies":[{"id":"113601","content":"你先自己做出判断，如果自己没法做出判断那就说明疑惑在哪里，不要直接问一个答案","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1632615694,"ip_address":"","comment_id":313565,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1632505695","product_id":100006601,"comment_content":"zk全部走master就不符合CAP的CP定义了，因为CAP是要求各个节点都可以提供读写操作，而不是只做备份复制<br>====<br>老师，如mysql主从这样的架构，写走主库，读走从库，应该属与CAP中什么场景呢？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527395,"discussion_content":"你先自己做出判断，如果自己没法做出判断那就说明疑惑在哪里，不要直接问一个答案","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632615694,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":313564,"user_name":"菜波","can_delete":false,"product_type":"c1","uid":2032894,"ip_address":"","ucode":"DA7DED66709FA2","user_header":"https://static001.geekbang.org/account/avatar/00/1f/04/fe/60db4684.jpg","comment_is_top":false,"comment_ctime":1632505190,"is_pvip":false,"replies":[{"id":"113600","content":"CAP没有要求各个节点都可以读写呀，再去看看CP和AP的具体含义","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1632615633,"ip_address":"","comment_id":313564,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1632505190","product_id":100006601,"comment_content":"zk全部走master就不符合CAP的CP定义了，因为CAP是要求各个节点都可以提供读写操作，而不是只做备份复制","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527394,"discussion_content":"CAP没有要求各个节点都可以读写呀，再去看看CP和AP的具体含义","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632615633,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296680,"user_name":"川川","can_delete":false,"product_type":"c1","uid":1382517,"ip_address":"","ucode":"DA092CAC7F294D","user_header":"https://static001.geekbang.org/account/avatar/00/15/18/75/68487e89.jpg","comment_is_top":false,"comment_ctime":1623115989,"is_pvip":false,"replies":[{"id":"107791","content":"如果能够保证Quorum多数存活，那么使用Paxos一类的算法是可以保证C的，但是CAP说的是指整个系统在任何时刻，如果Paxos系统不足Quorum数量的节点存在的话，就无法提供服务了","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1623135045,"ip_address":"","comment_id":296680,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1623115989","product_id":100006601,"comment_content":"老师我想问下，你这里说的C是绝对的一致性无法实现，是面向客户端来说只要能够读到最新写入的数据即可。但是我们在读的情况下使用Qurom算法，是否可以让这个C得到保证","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521547,"discussion_content":"如果能够保证Quorum多数存活，那么使用Paxos一类的算法是可以保证C的，但是CAP说的是指整个系统在任何时刻，如果Paxos系统不足Quorum数量的节点存在的话，就无法提供服务了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623135045,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":294073,"user_name":"Master","can_delete":false,"product_type":"c1","uid":1613760,"ip_address":"","ucode":"79D0145B853C9E","user_header":"https://static001.geekbang.org/account/avatar/00/18/9f/c0/86febfff.jpg","comment_is_top":false,"comment_ctime":1621748926,"is_pvip":false,"replies":[{"id":"106742","content":"分析的很详细，点赞","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1621830999,"ip_address":"","comment_id":294073,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1621748926","product_id":100006601,"comment_content":"电商网站，我觉得可以分为两个大块：商品，订单。<br>商品，包括消息展示，活动促销等等，这块理论上可以简单的用AP理论来进行保证，因为可能商品消息更新没那么敏感，只要用户看到商品即可，商品具体的内容变更不敏感，但是这里有几个属性比较敏感，促销活动信息（618，双十一）以及对应的价格等关键数据，这里我认为有必要CP，要不就都展示旧的，要不就索性都不展示，具体理论很简单，避免引起歧义纠纷。总结不是单纯的AP，也要考虑CP<br>订单，这个体系就比较关键了，从简单到复杂来说，下单后订单信息，这里我认为要AP，因为用户下单后，订单就必须要按照预期合理响应，说白了和银行存钱一样。其次针对那种下单是秒杀，抢购的，这里要走CP，理论最终秒杀结果都是异步计算，最终用户即使当时操作的时候是可以秒，但是结论没有秒中都是可以接收，目前也是日常实际比较用户可接受的范畴。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":520498,"discussion_content":"分析的很详细，点赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621830999,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":291465,"user_name":"Geek_b6e6bc","can_delete":false,"product_type":"c1","uid":2559741,"ip_address":"","ucode":"0F09EFE0BF48BD","user_header":"","comment_is_top":false,"comment_ctime":1620297072,"is_pvip":false,"replies":[{"id":"105598","content":"应用服务也可以用CAP去衡量，异地多活章节就会讲如何基于CAP来设计异地多活方案","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1620348517,"ip_address":"","comment_id":291465,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1620297072","product_id":100006601,"comment_content":"老师  通过这节理解到的是cap讨论的是数据的中心，那么对于cap的讨论我们关注的中心应该是存储系统，像数据库、redis这种，不是应用服务这类，","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519478,"discussion_content":"应用服务也可以用CAP去衡量，异地多活章节就会讲如何基于CAP来设计异地多活方案","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620348517,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":290223,"user_name":"麦麦","can_delete":false,"product_type":"c1","uid":2471742,"ip_address":"","ucode":"D012FEA2F55520","user_header":"https://static001.geekbang.org/account/avatar/00/25/b7/3e/7d93176e.jpg","comment_is_top":false,"comment_ctime":1619438556,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619438556","product_id":100006601,"comment_content":"CP:一致性+分区容错性，适用写一致性场景<br>AP：可用性+分区容错性，适用读及时性场景","like_count":0},{"had_liked":false,"id":290222,"user_name":"麦麦","can_delete":false,"product_type":"c1","uid":2471742,"ip_address":"","ucode":"D012FEA2F55520","user_header":"https://static001.geekbang.org/account/avatar/00/25/b7/3e/7d93176e.jpg","comment_is_top":false,"comment_ctime":1619438525,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619438525","product_id":100006601,"comment_content":"<br><br>P要求分布式和数据同步，C要求数据完全一致，A要求返回及时<br>CAP 关注的粒度是数据，而不是整个系统。<br>CAP是针对于局部数据的，而不是全局系统的。<br><br>以一个最简单的用户管理系统为例，用户管理系统包含用户账号数据（用户 ID、密码）、用户信息数据（昵称、兴趣、爱好、性别、自我介绍等）。通常情况下，用户账号数据会选择 CP，而用户信息数据会选择 AP，如果限定整个系统为 CP，则不符合用户信息数据的应用场景；如果限定整个系统为 AP，则又不符合用户账号数据的应用场景。<br><br>CP:一致性+分区容错性，适用写一致性场景<br>AP：可用性+分区容错性，适用读及时性场景","like_count":0},{"had_liked":false,"id":287640,"user_name":"DFighting","can_delete":false,"product_type":"c1","uid":1233193,"ip_address":"","ucode":"F3BA2426FF8582","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/29/1b1234ed.jpg","comment_is_top":false,"comment_ctime":1618063331,"is_pvip":true,"replies":[{"id":"104507","content":"订单数据就是你的购买记录，主要是订单有状态，状态值要保证幂等和最终正确，因此订单用AP也可以。","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1618148813,"ip_address":"","comment_id":287640,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1618063331","product_id":100006601,"comment_content":"读到这里算是慢慢有点理解CAP了，首先，网络环境下，只要系统节点间互联+数据共享，那么P就是很常见的一个场景，那么余下的就是如何选择CA了，以这个电商平台为例，我们可以分为用户、商品、订单和支付数据，其中每个数据又可能存在增删改查几种情况，忽略后者，就这几种数据本身来看，<br>用户数据，只要最终数据一致，问题都不大，所以应该是AP<br>商品数据，涉及到库存的扣减等直接的数据操作，用户感知其实不大，所以得优先保障CP<br>支付数据，这个数据很敏感，绝对不可以做，也不能无法支付，所以可以考虑单点CA<br>订单数据，这部分我不太理解订单是啥的抽象，感觉和商品数据关联性比较大，只要最终订单提交成功，我觉得都可以，所以应该是CP<br>看到这里，感觉直接面对用户的数据抽象A&gt;C,后台的重要数据C&gt;A，涉及到钱的肯定是CA都要","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518376,"discussion_content":"订单数据就是你的购买记录，主要是订单有状态，状态值要保证幂等和最终正确，因此订单用AP也可以。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618148813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":236874,"user_name":"M1racle","can_delete":false,"product_type":"c1","uid":1057144,"ip_address":"","ucode":"CFA981F34AFDA8","user_header":"https://static001.geekbang.org/account/avatar/00/10/21/78/732a2e33.jpg","comment_is_top":false,"comment_ctime":1595573582,"is_pvip":true,"replies":[{"id":"87779","content":"当然是注册成功了，原文有详细描述日志作用","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1595898267,"ip_address":"","comment_id":236874,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1595573582","product_id":100006601,"comment_content":"关于cp记录日志有个问题？当节点2不可用的时候，节点1记录日志，那么这时候算是注册成功还是什么呢？如果注册成功，那么很多逻辑都需要调整，比如登录，权限验证什么的。如果注册未成功，那么记录日志的用意是什么呢？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502237,"discussion_content":"当然是注册成功了，原文有详细描述日志作用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595898267,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":202163,"user_name":"DaWang","can_delete":false,"product_type":"c1","uid":1905582,"ip_address":"","ucode":"23CCF48FCE098A","user_header":"https://static001.geekbang.org/account/avatar/00/1d/13/ae/fe9f93f0.jpg","comment_is_top":false,"comment_ctime":1585913549,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585913549","product_id":100006601,"comment_content":"ACID 是数据库事务完整性的理论，CAP 是分布式系统设计理论，BASE 是 CAP 理论中 AP 方案的延伸","like_count":0},{"had_liked":false,"id":185233,"user_name":"谭方敏","can_delete":false,"product_type":"c1","uid":1710960,"ip_address":"","ucode":"728DC7ECB7C902","user_header":"https://static001.geekbang.org/account/avatar/00/1a/1b/70/547042ee.jpg","comment_is_top":false,"comment_ctime":1583541316,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583541316","product_id":100006601,"comment_content":"ACID 是数据库事务完整性的理论（A-原子性，要么执行完毕，要么不执行，不至于有啥中间状态，如果有错误状态了，则会执行回滚操作；C-一致性，在事务操作发生前后，数据库完整性没变；I-隔离性，多事务操作读写的时候相对独立；D-永久性，事务操作后，数据就不会丢失，永久保存了）<br><br>CAP 是分布式系统设计理论，<br><br>BASE 是 CAP 理论中 AP 方案的延伸（BA-基本可用，在故障情况下，可以允许部分功能出问题，而核心功能可用；S-软状态，也就是中间状态，数据不一致性；E-最终一致性，系统副本经过一段时间后，最终能达成一致性状态）<br><br>cap理论在落地的时候，需要考虑一些场景：<br>1）cap关心的是数据并非系统或者节点。并且需要考虑系统在不同场景下的数据情况，不然会完成系统内部cap跟系统cap相冲突。<br>2）cap忽略网络延迟。在数据复制过程中，网络延迟是非常大问题，这样决定数据的一致性状态。<br>3）正因为数据场景复杂化，所以不存在必然的只能考虑ap和cp，而不能选ca。如果不能分区的话，那么ca也是一个可选项。<br>4）放弃了并不意味着不需要恢复。cap理论只能代表某个状态，之后还可以状态的恢复，比如用cp，丢失了a，到之后可能就找回a，变ap了。","like_count":0},{"had_liked":false,"id":181201,"user_name":"Mr.wrong","can_delete":false,"product_type":"c1","uid":1254306,"ip_address":"","ucode":"8B2C52147B47A5","user_header":"https://static001.geekbang.org/account/avatar/00/13/23/a2/e2df1b88.jpg","comment_is_top":false,"comment_ctime":1582516150,"is_pvip":false,"replies":[{"id":"72876","content":"实际上这个延迟对业务有影响的","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1584427212,"ip_address":"","comment_id":181201,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582516150","product_id":100006601,"comment_content":"李老师，你文章说没有完美的cp理论，实际上还是会有延迟。比如同步复制的情况，节点a的修改得等节点b数据同步之后，才给客户端响应呢？这样不算有延迟吧","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484955,"discussion_content":"实际上这个延迟对业务有影响的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584427212,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":158849,"user_name":"悟空","can_delete":false,"product_type":"c1","uid":1019739,"ip_address":"","ucode":"69C990105DEF47","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8f/5b/2f16ca95.jpg","comment_is_top":false,"comment_ctime":1575464366,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575464366","product_id":100006601,"comment_content":"内容很赞 学到了东西","like_count":0},{"had_liked":false,"id":154894,"user_name":"fomy","can_delete":false,"product_type":"c1","uid":1125834,"ip_address":"","ucode":"CD87EA03B1F327","user_header":"https://static001.geekbang.org/account/avatar/00/11/2d/ca/02b0e397.jpg","comment_is_top":false,"comment_ctime":1574593501,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574593501","product_id":100006601,"comment_content":"必须满足CP的功能：扣减库存，充值余额<br>必须满足AP的功能：下订单，收藏，生成物流信息，加入购物车","like_count":0},{"had_liked":false,"id":142404,"user_name":"鲁班","can_delete":false,"product_type":"c1","uid":1671066,"ip_address":"","ucode":"94AD1910CC60DE","user_header":"","comment_is_top":false,"comment_ctime":1571363611,"is_pvip":false,"replies":[{"id":"55066","content":"C不是可用，是强一致性","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1571436886,"ip_address":"","comment_id":142404,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1571363611","product_id":100006601,"comment_content":"P 为“分区容错” 理解起来有歧义，一般会认为是出现分区的时候系统也是可用的因为容错了，这就和C 可用性又有些重合，如果CAP 简单说成 在网络分区时不能同时达成一致性和可用性，这样很好理解","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471110,"discussion_content":"C不是可用，是强一致性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571436886,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1671066,"avatar":"","nickname":"鲁班","note":"","ucode":"94AD1910CC60DE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36927,"discussion_content":"打错了，是A，评论能修改吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571462507,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140745,"user_name":"炎黄伙哥","can_delete":false,"product_type":"c1","uid":1461692,"ip_address":"","ucode":"ACA4DFD5D30C9B","user_header":"https://static001.geekbang.org/account/avatar/00/16/4d/bc/e26f63d9.jpg","comment_is_top":false,"comment_ctime":1571040791,"is_pvip":false,"replies":[{"id":"54779","content":"是的，这点是关键","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1571269034,"ip_address":"","comment_id":140745,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571040791","product_id":100006601,"comment_content":"以前也没少搜CAP的解释，但这次学习之后确实理解了不少，尤其是分区这个概念，以前最不理解的就是这个，然而现在看来，CAP的讨论的基础恰恰就是在分区发生的情况下，这点不理解又怎么可能理解整个概念","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470536,"discussion_content":"是的，这点是关键","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571269034,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135290,"user_name":"Sam.张朝","can_delete":false,"product_type":"c1","uid":1132448,"ip_address":"","ucode":"FB20554D94B250","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/a0/f12115b7.jpg","comment_is_top":false,"comment_ctime":1569118841,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1569118841","product_id":100006601,"comment_content":"指数据库中数据在逻辑上的一致性、正确性、有效性和相容","like_count":0},{"had_liked":false,"id":119738,"user_name":"随风","can_delete":false,"product_type":"c1","uid":1250040,"ip_address":"","ucode":"2883C362D6C2B4","user_header":"https://static001.geekbang.org/account/avatar/00/13/12/f8/888a9b9d.jpg","comment_is_top":false,"comment_ctime":1564669003,"is_pvip":false,"replies":[{"id":"44285","content":"库存是强一致性的，而且是最难的","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1564968996,"ip_address":"","comment_id":119738,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1564669003","product_id":100006601,"comment_content":"电商系统：对于用户、订单、支付这些核心关键数据要求保证实时一致性，因此，需要满足CP。如果某节点故障，那么只能提示用户系统异常，而不能返回一个旧数据。而对于商品、库存、地址信息等这些数据可以采用AP、即时某台机器故障、或者机器间复制数据延迟，导致用户看不到部分商品并不会有大问题，系统可以继续提供服务。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461047,"discussion_content":"库存是强一致性的，而且是最难的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564968996,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97530,"user_name":"晓晨同学","can_delete":false,"product_type":"c1","uid":1413041,"ip_address":"","ucode":"236AEEB786E2CE","user_header":"https://static001.geekbang.org/account/avatar/00/15/8f/b1/7b697ed4.jpg","comment_is_top":false,"comment_ctime":1558688766,"is_pvip":false,"replies":[{"id":"35159","content":"CAP是关于单个数据的，不是整个系统的","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1558939693,"ip_address":"","comment_id":97530,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1558688766","product_id":100006601,"comment_content":"我理解cap理论更适用于中间件和数据库层面，像电商系统非要说cap的话就牵扯到数据库集群采用哪种思想，比如订单类的采用分库分表保证ca，商品或者用户不重要的信息可以采用读写分离保证ap，老师您觉得呢","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451314,"discussion_content":"CAP是关于单个数据的，不是整个系统的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558939693,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":83921,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1119593,"ip_address":"","ucode":"94656FE4A6C378","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","comment_is_top":false,"comment_ctime":1554733647,"is_pvip":true,"replies":[{"id":"31435","content":"我没有研究过所有的开源系统，不敢说一定没有，但真有的话，性能和复制是很难做到很好的，要保证一致性性能会低，不保证一致性数据会乱","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1555598735,"ip_address":"","comment_id":83921,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1554733647","product_id":100006601,"comment_content":"cap需要各个节点都有一份数据，并且每个节点都允许对数据进行读写，任意一节点的数据发生变更，数据都会同步到其他节点，那么这样是不是有多少个节点，就有多少份完全一样的数据呢(正常情况下)？这样的场景有没有实际的例子或者开源并且知名的系统或者服务呢？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446177,"discussion_content":"我没有研究过所有的开源系统，不敢说一定没有，但真有的话，性能和复制是很难做到很好的，要保证一致性性能会低，不保证一致性数据会乱","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555598735,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":39369,"user_name":"小狮子辛巴","can_delete":false,"product_type":"c1","uid":1088420,"ip_address":"","ucode":"B9676851AF3370","user_header":"https://static001.geekbang.org/account/avatar/00/10/9b/a4/ddb31c5b.jpg","comment_is_top":false,"comment_ctime":1542257695,"is_pvip":false,"replies":[{"id":"14214","content":"说出你的问题，我们一起探讨","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1542338620,"ip_address":"","comment_id":39369,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542257695","product_id":100006601,"comment_content":"只有我一个看不懂吗？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429033,"discussion_content":"说出你的问题，我们一起探讨","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542338620,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":30759,"user_name":"小喵喵","can_delete":false,"product_type":"c1","uid":1062444,"ip_address":"","ucode":"FDBBB2A59DB8B6","user_header":"https://static001.geekbang.org/account/avatar/00/10/36/2c/8bd4be3a.jpg","comment_is_top":false,"comment_ctime":1538989918,"is_pvip":false,"replies":[{"id":"11221","content":"找本数据库原理看，没法一两句话说明白的，另外，写2个事务尝试一下","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1539132656,"ip_address":"","comment_id":30759,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1538989918","product_id":100006601,"comment_content":"ACID中的C 和 I 我看了好多资料，还是不太理解，请老师能举例说明一下，谢谢。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426083,"discussion_content":"找本数据库原理看，没法一两句话说明白的，另外，写2个事务尝试一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539132656,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23725,"user_name":"小思绪","can_delete":false,"product_type":"c1","uid":1123040,"ip_address":"","ucode":"A7F813280BFF10","user_header":"https://static001.geekbang.org/account/avatar/00/11/22/e0/8e58a7e1.jpg","comment_is_top":false,"comment_ctime":1536626211,"is_pvip":false,"replies":[{"id":"8613","content":"CP，原因你自己再对照专栏内容分析一下","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1536628392,"ip_address":"","comment_id":23725,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1536626211","product_id":100006601,"comment_content":"那zk属于cp还是ap呢？当大部分节点可用时，zk依然能对外提供服务，对于在大部分范围内的节点来说，可用性和一致性都得到了保证，客户端了解到这部分节点，依然能正常function。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423697,"discussion_content":"CP，原因你自己再对照专栏内容分析一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536628392,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16587,"user_name":"森林","can_delete":false,"product_type":"c1","uid":1071920,"ip_address":"","ucode":"53BD05633B77B6","user_header":"https://static001.geekbang.org/account/avatar/00/10/5b/30/9dcf35ff.jpg","comment_is_top":false,"comment_ctime":1532047455,"is_pvip":false,"replies":[{"id":"5763","content":"CAP针对副本这句话有点歧义啊，具体还是通过副本来实现高可用，然后需要保证副本一致性，这里的副本就是数据副本，可以是文件，可以是关系数据库，base也不是只限于大型事务的，数据复制和一致性都可以","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1532068342,"ip_address":"","comment_id":16587,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1532047455","product_id":100006601,"comment_content":"有一些点有不赞同，1.cap定义里就说明了，在合理时间内能提供服务，合理时间就是延时。2.cap通常针对副本，base通常针对整个大型事务的最终一致，也就是多条记录。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420858,"discussion_content":"CAP针对副本这句话有点歧义啊，具体还是通过副本来实现高可用，然后需要保证副本一致性，这里的副本就是数据副本，可以是文件，可以是关系数据库，base也不是只限于大型事务的，数据复制和一致性都可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532068342,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15528,"user_name":"小飞哥 ‍超級會員","can_delete":false,"product_type":"c1","uid":1110049,"ip_address":"","ucode":"417F9563B3005B","user_header":"https://static001.geekbang.org/account/avatar/00/10/f0/21/104b9565.jpg","comment_is_top":false,"comment_ctime":1531269838,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1531269838","product_id":100006601,"comment_content":"cap和base都是指数据。我是做前台的。我们电商划分前台是中台原子化接口的组装业务。并没有事务","like_count":0},{"had_liked":false,"id":15171,"user_name":"王宁","can_delete":false,"product_type":"c1","uid":1048061,"ip_address":"","ucode":"4E6258270B7BE9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fd/fd/1e3d14ee.jpg","comment_is_top":false,"comment_ctime":1530953564,"is_pvip":true,"replies":[{"id":"5205","content":"A机房创建一个账户后，通过消息队列告诉AB机房相关信息，B机房拿到消息后也创建这个账户","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1531122881,"ip_address":"","comment_id":15171,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1530953564","product_id":100006601,"comment_content":"对于核心的数据如账户数据采用CP架构，通过了一致性Hash的算法将用户数据分散的在Ｎ个主节点之上.<br>对于商品描述类的数据采取AP架构，因为数据的无状态保持数据的可用性。<br>秒杀可以采取内存存储方案等实现,对于秒杀的结果采用CP架构,但是秒杀的记录等可以采取AP架构.<br><br>总结来说对于强一致性要求的如用户帐户采取CP架构，对于无状态或者状态不是强要求的采取AP，逐渐过渡吧。<br>象购买记录、活动等场景依据场景选择合适的CP架构和延迟时间。<br><br>高可用还可以在系统负荷过高时采取前端限流，和后端采取降级和熔断等方案。<br><br>另外： 用户账号数据可以采用“消息队列”的方式来实现，这里的消息队列是怎么理解的。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420268,"discussion_content":"A机房创建一个账户后，通过消息队列告诉AB机房相关信息，B机房拿到消息后也创建这个账户","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531122881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14317,"user_name":"tiger","can_delete":false,"product_type":"c1","uid":1047291,"ip_address":"","ucode":"C15AC14AA33F40","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fa/fb/ef99d6ca.jpg","comment_is_top":false,"comment_ctime":1530284222,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1530284222","product_id":100006601,"comment_content":"电商网站，包含交易，支付，库存，用户系统，交易和库存都应该是CA系统，要么是成功，要么是失败。<br>而支付满足最终一致性即可，正常情况下，用户支付完成一定时间后才需要发货处理，并且可通过退款等方式解决问题所以可以设计成AP系统。","like_count":0},{"had_liked":false,"id":13252,"user_name":"lhc","can_delete":false,"product_type":"c1","uid":1101865,"ip_address":"","ucode":"BC07D3A239E259","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/29/271cf37c.jpg","comment_is_top":false,"comment_ctime":1529471113,"is_pvip":false,"replies":[{"id":"4479","content":"断网最常见，断网的原因就很多了","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1529550633,"ip_address":"","comment_id":13252,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1529471113","product_id":100006601,"comment_content":"请问网络在什么情况下会出现分区容错？<br>","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419588,"discussion_content":"断网最常见，断网的原因就很多了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1529550633,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":13148,"user_name":"探索无止境","can_delete":false,"product_type":"c1","uid":1044178,"ip_address":"","ucode":"91D2A9907DFA79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/d2/7024431c.jpg","comment_is_top":false,"comment_ctime":1529405522,"is_pvip":false,"replies":[{"id":"4489","content":"业务对一致性的要求不一样","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1529552007,"ip_address":"","comment_id":13148,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1529405522","product_id":100006601,"comment_content":"“通常情况下，用户账号数据会选择 CP，而用户信息数据会选择 AP&quot;，这个选择的依据是什么？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419555,"discussion_content":"业务对一致性的要求不一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1529552007,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1523315,"avatar":"","nickname":"GeekCoder","note":"","ucode":"14BB73CBE28545","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303,"discussion_content":"CAP 是分布式系统设计概念，还是分布式式存储系统概念？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1561436819,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1293907,"avatar":"https://static001.geekbang.org/account/avatar/00/13/be/53/eda4b622.jpg","nickname":"Smile @ Life","note":"","ucode":"320EDAD5A8BE56","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1523315,"avatar":"","nickname":"GeekCoder","note":"","ucode":"14BB73CBE28545","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301027,"discussion_content":"同问 ？？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598368142,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":303,"ip_address":""},"score":301027,"extra":""}]}]}]}