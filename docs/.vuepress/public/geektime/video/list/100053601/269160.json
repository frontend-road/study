{"id":269160,"title":"40 | 如何设计一个分布式限流系统？","content":"<p><strong>课件和Demo地址</strong><br>\n<a href=\"https://gitee.com/geektime-geekbang/geektime-distributed\">https://gitee.com/geektime-geekbang/geektime-distributed</a></p>","comments":[{"had_liked":false,"id":245309,"user_name":"hunterlodge","can_delete":false,"product_type":"c3","uid":1069755,"ip_address":"","ucode":"5B83A79E784161","user_header":"https://static001.geekbang.org/account/avatar/00/10/52/bb/225e70a6.jpg","comment_is_top":false,"comment_ctime":1598889841,"is_pvip":false,"replies":[{"id":90419,"content":"你的理解也合理","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1599135309,"ip_address":"","comment_id":245309,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100053601,"comment_content":" 滑动窗口算法并非完全避免了边界问题，而是通过降低粒度，减少了发生的概率","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504843,"discussion_content":"你的理解也合理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599135309,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1187021,"avatar":"https://static001.geekbang.org/account/avatar/00/12/1c/cd/8d552516.jpg","nickname":"Gojustforfun","note":"","ucode":"7513A40F27344F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":651728,"discussion_content":"边界问题的定义是什么？如果是指跨窗口的请求量可以突破阈值上线，那么滑动窗口是解决了的。欢迎举例说明","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1727343330,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":284755,"user_name":"白小龙","can_delete":false,"product_type":"c3","uid":1230191,"ip_address":"","ucode":"34BFCBA8D98AB8","user_header":"https://static001.geekbang.org/account/avatar/00/12/c5/6f/8ba27eab.jpg","comment_is_top":false,"comment_ctime":1616461788,"is_pvip":false,"replies":[{"id":104134,"content":"两种限流实现方式，最后的限流效果可以相同。在平滑流量方面，各有不同的实现机制。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1617545707,"ip_address":"","comment_id":284755,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100053601,"comment_content":"老师，怎么觉得令牌桶和固定窗口是同一个算法呢，只不过是令牌桶做的是--，额外需要一个塞令牌的job，固定窗口做的是++。他们都是用过期时间来使时间窗口失效。","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517456,"discussion_content":"两种限流实现方式，最后的限流效果可以相同。在平滑流量方面，各有不同的实现机制。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617545707,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1112676,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fa/64/457325e6.jpg","nickname":"Sam Fu","note":"","ucode":"EA285A4943271F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":415179,"discussion_content":"区别就在于令牌桶算法额外有一个噻令牌的Job。可以用于应对突发流量。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637023056,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":282752,"user_name":"白小龙","can_delete":false,"product_type":"c3","uid":1230191,"ip_address":"","ucode":"34BFCBA8D98AB8","user_header":"https://static001.geekbang.org/account/avatar/00/12/c5/6f/8ba27eab.jpg","comment_is_top":false,"comment_ctime":1615388797,"is_pvip":false,"replies":[{"id":103150,"content":"你提出来的可以算是一种使用redis限流的新思路，实际还需要进一步测试验证。平滑只能趋近，不能绝对。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1616250522,"ip_address":"","comment_id":282752,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100053601,"comment_content":"老师，比如每秒限流10个，如果使用redis的zset，score作为时间戳（ms），某一时刻1615386799000过来一笔请求\nvar count = zcount user_1 (1615386799000-1000) 1615386799000; &#47;&#47;获取当前时间-1s至当前时间段的请求数\nif (count &gt;= 10 ) return &quot;too many request&quot;;\nzadd user_1 1615386799000 geek; \n这样处理是不是也只是把窗口细化到了1ms而已，严格意义上的平滑是不存在的，能做的只是像微积分一样无限逼近，但是在应用中其实已经够用了难道不是么？","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516827,"discussion_content":"你提出来的可以算是一种使用redis限流的新思路，实际还需要进一步测试验证。平滑只能趋近，不能绝对。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616250522,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":262640,"user_name":"丁小明","can_delete":false,"product_type":"c3","uid":1207622,"ip_address":"","ucode":"CC23857B8D75D5","user_header":"https://static001.geekbang.org/account/avatar/00/12/6d/46/e16291f8.jpg","comment_is_top":false,"comment_ctime":1605789070,"is_pvip":false,"replies":[{"id":95656,"content":"量特别大对redis可以做分片sharding，例如采用一致性hash技术进行分片","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1606229496,"ip_address":"","comment_id":262640,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100053601,"comment_content":"老师，如果集中式限流，对于同一个接口请求量如果很大超过50w每秒，对于api网关入口和限流服务由于可以水平扩展是能承受的，但是对于同一个请求都是路由到同一台redis，超过redis承受范围那该如何优化呢。","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509910,"discussion_content":"量特别大对redis可以做分片sharding，例如采用一致性hash技术进行分片","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606229496,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":240326,"user_name":"Jxin","can_delete":false,"product_type":"c3","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1596862227,"is_pvip":false,"replies":[{"id":88945,"content":"对，guava rate limiter也是经典的本地限流器，应该也是基于令牌桶的，参考这里：\nhttps:&#47;&#47;dzone.com&#47;articles&#47;detailed-explanation-of-guava-ratelimiters-throttl","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1597071751,"ip_address":"","comment_id":240326,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100053601,"comment_content":"还有guava的均速限流器","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503403,"discussion_content":"对，guava rate limiter也是经典的本地限流器，应该也是基于令牌桶的，参考这里：\nhttps://dzone.com/articles/detailed-explanation-of-guava-ratelimiters-throttl","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597071751,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":351365,"user_name":"青阳","can_delete":false,"product_type":"c3","uid":2139807,"ip_address":"","ucode":"3591D366BAB0B9","user_header":"https://static001.geekbang.org/account/avatar/00/20/a6/9f/3c60fffd.jpg","comment_is_top":false,"comment_ctime":1657726017,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100053601,"comment_content":"固定窗口：有边界问题；\n滑动窗口：将窗口再细粒度划分，实现任一个窗口限流，但还是不能解决比窗口更细粒度的时间内流量高峰，不平滑；\n漏桶算法：控制出口，比较平滑；\n令牌桶算法：可以预放令牌，有一定的泄洪作用，不平滑。","like_count":0}]}