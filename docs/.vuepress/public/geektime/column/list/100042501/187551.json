{"id":187551,"title":"12丨性能场景：做参数化之前，我们需要考虑什么？","content":"<p>在性能测试中，我们要关注的数据主要有以下几类，分别是参数化数据、监控数据和基础铺底数据。</p><p>我们今天先描述第一种参数化数据，在后面的文章中再描述其他数据。</p><p>首先我们需要了解，为什么要关注性能场景中的参数化数据呢？我以下面的两个例子说明一下。</p><p>在我的工作经历中，见过很多初级性能测试工程师不知道如何设置合理的参数化数据，以至于数据会出现这两种情况。</p><p>1.数据不均衡</p><p>有些人直接用同一个数据执行混合场景测试，在这种情况下对服务器的压力和真实环境下的完全不一样。有时我们不得不造很多参数化数据，也有很多工程师不考虑数据库表中的数据直方图，就直接在少量的参数化数据中创建了大量的相关记录。比如说，在电商系统中造出大量的购买记录；在银行系统中造出大量的个人流水记录。</p><p>这些都不能满足真实用户场景的需要，导致的结果就是整个测试结果都毫无意义。</p><p>2.参数化数据量不足</p><p>有时候，如果我们选择用非常少量的数据运行大量业务操作的场景，就会导致压力和真实生产环境完全不一致。比如说，用100个数据运行出上万甚至上亿的业务操作。</p><p>那么到底该怎样才能合理地设置参数化数据呢？</p><h2>参数化数据的疑问</h2><p>根据我的经验，在参数化测试数据的获取和考虑上，我们一般会有以下四个常见的疑问。</p><!-- [[[read_end]]] --><ol>\n<li>参数化数据应该用多少数据量？</li>\n<li>参数化数据从哪里来？</li>\n<li>参数多与少的选择对系统压力有什么影响？</li>\n<li>参数化数据在数据库中的直方图是否均衡？</li>\n</ol><p>接下来，我们对这些问题一一做出解答。</p><h2>参数化数据应该用多少数据量？</h2><p>首先，参数化数据要用到多少取决于场景，举例来说，对一个压力工具线程数为100，TPS有1000的系统，如果要运行30分钟，则应该取得的参数化数据是下面这样的。</p><p>数据类型、限制条件和数据量计算的方式如下表所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/2e/f1/2e79e6bca7fd9f6c439ef04699d9ecf1.png?wh=1243*454\" alt=\"\"><br>\n从技术角度看，根据数据类型就可以确定应该用多少条参数化数据了。但是这样考虑就够了吗？当然是不够的。因为除了技术的限制之外，还有业务场景的需求。</p><h3>根据业务场景计算参数化数据量</h3><p>在性能场景中，我们需要根据实际的业务场景来分析需要用到什么样的数据，以便计算数据量。这里的数据类型包括可循环使用的数据和不可循环使用的数据。用户登录是一个在各行业中几乎都会遇到的事务，我们拿它来举例说明，下面这张图是一个用户登录的界面。</p><p><img src=\"https://static001.geekbang.org/resource/image/ad/48/adffd57ad8e77788600f2b1861e03448.png?wh=557*418\" alt=\"\"></p><p>这里需要用到两种数据，一个是帐号，一个是密码。帐号和密码一定是可以真实登录到系统的，不然无法完成后续的业务。很显然对于登录来说，不同的人一定是用不同的用户登录的。</p><h3>场景一</h3><p>首先我们来看下场景一。有时候我们做脚本时考虑的是，有多少线程（Thread）就配置多少用户，让每个线程在同一个用户上循环执行。</p><p>如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/de/c2/dee2bc71f6e5edb659e2c9fe31d3c9c2.jpg?wh=2269*644\" alt=\"\"></p><p>需要注意的是，在本文中，每一个“—user1→”代表一次脚本完全的迭代。</p><p>这样的用户参数化配置，只能满足一些比较特定的场景。比如说，用户在早上登录系统之后，一直在系统中带着登录session做业务操作，并且不会退出，只有在下班时才退出系统。</p><p>当我们要模拟一天中的业务峰值时，可以像上面这样配置。登录一次，循环使用同一用户的Session信息。这就是前面提到的部分可循环数据。</p><p>在这样的场景中，有多少线程就需要准备多少用户数据。即：</p><pre><code>Java\n用户数据=线程个数\n</code></pre><h3>场景二</h3><p>但在有些场景中，这是完全错误的配置方式。比如说电商系统，用同一个用户账号不停循环购买商品，就是不符合真实场景的。</p><p>这时侯怎么办？我们可以用在压力测试工具中模拟出来的线程的每一次迭代来代表一个用户，如下所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/a1/1c/a1780e7bbe6a9ee3bc3729693aa7521c.jpg?wh=2264*614\" alt=\"\"></p><p>这就是不可循环使用的数据。在这样的场景中，就需要考虑场景的TPS和持续时间了。用户数据的计算方法是：</p><pre><code>Java\ntpsx持续时间（秒级）\n</code></pre><p>我们举个例子，假如有一个100TPS的场景，持续30分钟。那么计算方式如下：</p><pre><code>Java\n100x30*60=180000（条用户数据）\n</code></pre><p>这里再多说一句，压力工具的线程数量也并不是常说的并发数的概念。这个我们在<a href=\"https://time.geekbang.org/column/article/181916\">前面</a>已经说得很清楚了。</p><h3>场景三</h3><p>但是还有一种情况，就是在一个线程之中，可以循环使用固定条目的数据。如下所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/47/9b/47184c05e0a6a3120dea42355d101e9b.jpg?wh=4007*690\" alt=\"\"></p><p>在这种情况下，我们就需要根据实际的业务场景判断了。在100压力线程的场景中，如果准备了1000条数据，就可以让每个线程用10个不同的数据。</p><p>这样的场景没有固定的条数限制，只能根据实际的业务判断。</p><p>所以在配置参数之前，我们需要先判断这个参数是什么类型的数据。</p><p>如果是可循环使用的数据，那么它在真实的性能场景中非常少，也就是说只使用一条或几条测试数据的真实业务场景是非常少的。</p><h2>参数化数据从哪里来？</h2><p>计算了参数化数据量之后，还有一个重要的问题需要解决，就是参数化数据从哪里来呢？这一步的目的是要确保参数的有效性。</p><p>参数化数据从大体上划分，主要有两个来源。</p><h3>第一类</h3><p>用户输入的数据在后台数据库中已存在，比如我们上面示例中的用户数据。这类数据的特点是什么呢？</p><ol>\n<li>存在后台数据库中；</li>\n<li>需要用户主动输入；</li>\n<li>用户输入的数据会和后台数据库中的数据做比对。</li>\n</ol><p>这类数据必须查询数据库之后再参数化到工具中。</p><h3>第二类</h3><p>用户输入的数据在后台数据库中不存在。在业务流中，这些数据会Insert或Update到数据库中。这类数据的特点是什么呢？</p><ol>\n<li>数据库中原本不存在这些数据；</li>\n<li>在脚本执行成功后会将这些数据insert或update到数据库中；</li>\n<li>每个用户输入的数据可能相同，也可能不同，这取决于业务特点。</li>\n</ol><p>这类数据必须通过压力工具做参数化，同时也必须满足业务规则。</p><p>我同样用前面的用户参数为例，由于用户登录的时候一定要和数据库中的用户数据做比对，只有用户名密码都完全正确的情况下才可以成功登录，所以这样的用户参数一定要从后台数据库中查询得到。</p><p>在本例中，通过后台数据库用户表的查询真实可用的用户数共有10万。</p><p><img src=\"https://static001.geekbang.org/resource/image/43/63/43ff3f5a53a85de1061d2bb168b46f63.png?wh=312*170\" alt=\"\"></p><p>如果在业务场景中，是不可循环使用的用户数据，那么很显然，在可以支持100TPS并发的系统中，这些用户数量只够使用16.67分钟。</p><pre><code>Java\n100000/100/60=16.67（分钟）\n</code></pre><p>总之，参数化时需要确保数据来源以保证数据的有效性，千万不能随便造数据。这类数据应该满足两个条件：</p><ol>\n<li>要满足生产环境中数据的分布；</li>\n<li>要满足性能场景中数据量的要求。</li>\n</ol><h2>参数取多与少对系统压力有什么影响？</h2><p>根据上文中的第二个条件，这里就要说一下数据量的要求了。</p><p>从经验上判断，对一个系统来说，获取的参数化数据是否合理，会直接影响压力测试的结果有没有意义。</p><p>我们根据下面这张图来理解一下数据在系统中的流转。</p><p><img src=\"https://static001.geekbang.org/resource/image/be/74/bee122f5816738a73e93b33e36304574.jpg?wh=2514*947\" alt=\"\"></p><p>这张图中，绿色部分代表数据在各系统中的正常大小，而黑色部分代表压力工具中使用的数据量大小。如果压力工具使用的数据量少，那么应用服务器、缓存服务器、数据库服务器，都将使用少量的缓存来处理。</p><p>显然图中所示的黑色部分是很少的，完全不能把后端各类服务器的缓存占用到真实场景中应该有的大小，所以在这种状态之下是测试不出来真实场景下的压力的。</p><p>对数据库连接的存储设备来说同样也有影响。如果数据量少，则相应的存储的I/O使用就少。对于一个没有被Cache的数据来说，首次使用肯定会\b触发I/O，也就是会产生寻址、PageFalut等情况。</p><p>参数取得过多，对系统的压力就会大；参数取得过少，不符合真实场景中的数据量，则无法测试出系统真实的压力。</p><h2>参数化数据在数据库中的直方图是否均衡？</h2><p>对于参数化数据来说，如果数据取自于数据库，我们通常要检查一下数据库中的数据直方图。 对于直接从生产上拿的数据来说，数据的分布更为精准。但是对于一些在测试环境中造的数据，则一定要在造数据之后，检查下数据分布是否与生产一致。</p><p>我们以一个案例开始。</p><p>在性能场景执行过程中，有一个业务的TPS如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/01/00/01a3e647ed05d8930b91b431023a5f00.png?wh=1477*525\" alt=\"\"></p><p>很明显，图中TPS中间掉下来的情况是非常不合理的。</p><p>为什么会导致这个情况呢？在这个示例中，这种现象是由抽取的数据量不合理导致的，我们来看一下数据分布。</p><pre><code>客户iD，客户流水记录数\n'客户ID1', '69865'\n'客户ID2', '55075'\n......\n'客户ID5374728, '177'\n'客户ID5374729', '176'\n'客户ID5374730', '175'\n</code></pre><p>显然通过统计之后，我们可以发现客户的流水记录数是完全不均衡的，而这个业务脚本是会返回客户的流水记录的。当用到记录数多的客户ID时，就会导致TPS严重下降，这是因为这些数据都要从存储设备中获取，一旦数据量多，就会导致一系列的资源开销；而用到记录数少的客户ID时，TPS就很高。</p><p>那么针对这种情况，我们该怎么处理呢？</p><p>首先分析业务逻辑，确认客户流水是否应该这么多。在这个场景中，我们分析过业务，客户的流水通常情况下都会在100~200之间，这是合理的情况，而上万的数据量就是完全不合理的。</p><p>然后我们过滤掉不合理的数据即可。</p><p>这样得到的参数化数据就符合真实场景了。</p><h2>总结</h2><p>在今天的文章中，需要你领悟到的是，参数化数据的合理性对性能场景有着举足轻重的作用。通常，我们在做参数化数据之前，需要先分析实际业务的逻辑。比如说：</p><ol>\n<li>什么数据是唯一的？什么数据是可重复使用的？</li>\n<li>数据是客户主动输入，后端只保存即可，还是客户输入后，后端需要比对？</li>\n</ol><p>这些都是我们在做参数化之前要分析的部分。而参数化的数据量的重要性，不仅和业务需求相关，也和数据存储和查询的方式相关。这个话题我们在后面也会讨论到。</p><h2>思考题</h2><p>如果你吸收了这篇文章的内容，不妨思考一下下面这两道题：</p><ol>\n<li>参数化数据的分析重点是哪些？在不同的场景中为什么参数化数据有如此大的差异？</li>\n<li>参数化数据的来源和获取要符合哪些规则？当不符合获取规则时，会产生什么问题？</li>\n</ol><p>欢迎你在评论区写下你的思考，也欢迎把这篇文章分享给你的朋友或者同事，一起交流学习一下。</p>","neighbors":{"left":{"article_title":"11丨性能脚本：用案例和图示帮你理解HTTP协议","id":186537},"right":{"article_title":"13丨性能测试场景：如何进行场景设计？","id":187963}},"comments":[{"had_liked":false,"id":173784,"user_name":"zuozewei","can_delete":false,"product_type":"c1","uid":1039631,"ip_address":"","ucode":"D594C9CBAF15A5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/dd/0f/ee37a7fe.jpg","comment_is_top":false,"comment_ctime":1579686252,"is_pvip":false,"replies":[{"id":"67397","content":"总结的很好。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1579715641,"ip_address":"","comment_id":173784,"utype":1}],"discussion_count":1,"race_medal":0,"score":"74594130284","product_id":100042501,"comment_content":"<br>小结一下，在性能测试中，我们关注的参数化数据主要有以下几个方面：<br><br>1）参数化数据应该用多少数据量？<br>我们需要保证测试时间足够长、满足测试的负载请求需求，根据「目标tps x 持续时间（秒级）」可以计算出参数化数大概的量级。<br><br>2）参数化数据从哪里来？<br>大概分为两大类型：<br>- 死水数据，即out-of-box（事先创建测试数据），数据存在后台的数据库中；<br>- 活水数据，即On-the-fly（实时创建），数据库不存在这些数据，构造参数化数据需要符合业务特点。<br><br>构造测试数据通常有以下两种方法：<br>- 通过 API 调用生成测试数据；<br>- 通过数据库操作生成测试数据。<br><br>3）参数多与少的选择对系统压力有什么影响？<br>满足测试的负载请求足够多和数据足够多样化，从而最大限度地减少或者掩盖缓存等其他因素的影响。参数取得过多，对系统的压力就会大；参数取得过少，不符合真实场景中的数据量，则无法测试出系统真实的压力。<br><br>4）参数化数据在数据库中的直方图是否均衡？<br>参数化数据需要符合真实业务数据分布情况，这样更符合业务真实场景。","like_count":18,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482206,"discussion_content":"总结的很好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579715641,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170563,"user_name":"律飛","can_delete":false,"product_type":"c1","uid":1462608,"ip_address":"","ucode":"65394E437AD2DF","user_header":"https://static001.geekbang.org/account/avatar/00/16/51/50/f5f2a121.jpg","comment_is_top":false,"comment_ctime":1578633322,"is_pvip":false,"replies":[{"id":"66224","content":"理解的很对。这样下去，看完专栏就超过我了。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1578753718,"ip_address":"","comment_id":170563,"utype":1}],"discussion_count":1,"race_medal":0,"score":"48823273578","product_id":100042501,"comment_content":"1.参数化数据的分析重点是哪些？在不同的场景中为什么参数化数据有如此大的差异？<br>分析重点是获知数据量。一是通过业务模型分析计算，获得初步的数据量要求；二是根据限制条件和业务场景，确定数据类型；三是结合上述两点，最终确定参数化数据的数据量。<br>不同场景中，数据使用对业务的完成是不一样的，比如某一场景中数据可以反复出现，不影响业务，自然能实现预期的场景；而另一场景中，反复出现的数据却不能多次实现同一业务，这种情况下，当时无法实现预期的场景。<br>2.参数化数据的来源和获取要符合哪些规则？当不符合获取规则时，会产生什么问题？<br>参数化时需要确保数据来源以保证数据的有效性，千万不能随便造数据。这类数据应该满足两个条件：要满足生产环境中数据的分布；要满足性能场景中数据量的要求。<br>产生的问题：1.不合理的数据分布，会干扰测试结果，增加后续分析和测试的工作量；2.数据取得过多，对系统的压力就会大；数据取得过少，不符合真实场景中的数据量，则无法测试出系统真实的压力。<br>","like_count":12,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481016,"discussion_content":"理解的很对。这样下去，看完专栏就超过我了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578753718,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":280484,"user_name":"bolo","can_delete":false,"product_type":"c1","uid":1357170,"ip_address":"","ucode":"7C91CEA2F1970E","user_header":"https://static001.geekbang.org/account/avatar/00/14/b5/72/bb10f3d0.jpg","comment_is_top":false,"comment_ctime":1614231762,"is_pvip":false,"replies":[{"id":"103254","content":"写得太好了。真正的理解了我要表达的内容。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1616422907,"ip_address":"","comment_id":280484,"utype":1}],"discussion_count":2,"race_medal":0,"score":"40268937426","product_id":100042501,"comment_content":"<br>1、参数化数据的分析重点是哪些？ 在不同的场景中为什么参数化数据有如此大的差异？<br>参数化的数据量。 具体还是要结合具体的业务来进行分析，是否可以重复使用数据<br>如果仅仅是一个查询接口，没有涉及缓存，每次都是走一个DB的查询，那这样的话可以使用重复数据。<br>如果这个接口设计了读写，并有缓存，就要分开来进行考虑了。<br><br><br><br><br>2、参数化数据的来源和获取要符合哪些规则？ 当不符合规则时，会产生什么问题？<br><br>a）、数据来源尽可能贴近生产环境的业务逻辑<br>b）、满足生产的数据分布（分库分表..）<br><br>当不符合规则是，会导致性能测试意义变得不大。因为没有模拟生产的用户业务操作。<br>举个栗子：<br>一个接口是用来获取用户的VIP的状态的？ 当用户符合条件，需要将用户的状态置为VIP（一次update操作），同时设置缓存。当下次查询的时候，就会直接命中缓存。<br>如果采用的同一个数据，只有第一个请求，会走到所有的逻辑判断，后续的请求就会直接命中缓存，TPS很高，响应时间很短。给人一种错觉，接口的性能很好，其实并不是符合实际需要的。<br>这是我们就需要采用参数化的不循环逻辑，构造大量的符合条件的参数化用户来进行测试。<br><br><br>","like_count":10,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516112,"discussion_content":"写得太好了。真正的理解了我要表达的内容。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616422907,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2897064,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/34/a8/791d0f5e.jpg","nickname":"刘小样","note":"","ucode":"B910BD29168400","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586715,"discussion_content":"举个例子理解的更加透彻了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662454241,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":193822,"user_name":"小呀么小二郎","can_delete":false,"product_type":"c1","uid":1326905,"ip_address":"","ucode":"149540DCFDF43E","user_header":"https://static001.geekbang.org/account/avatar/00/14/3f/39/b1558fc9.jpg","comment_is_top":false,"comment_ctime":1584970698,"is_pvip":false,"replies":[{"id":"73797","content":"你这是要上天了。理解的全对！","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1584979674,"ip_address":"","comment_id":193822,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23059807178","product_id":100042501,"comment_content":"今日思考题：<br>参数化数据的分析重点是哪些？在不同的场景中为什么参数化数据有如此大的差异？<br>参数化数据分析时的重点是业务逻辑，比如数据量、数据来源、参数的多少以及数据分布是否与生产一致。<br>参数化数据要根据具体的场景来进行分析，比如有些数据可以重复使用，此场景中的参数化数据量就会少一些；而有些数据只能使用一次，此时就需要根据性能场景要求配置足量的数据。归根结底还是业务逻辑不同。<br><br><br>参数化数据的来源和获取要符合哪些规则？当下不符合获取规则时，会产生什么问题？<br>数据的来源和获取要满足生产环境中数据的分布，以及性能场景中数据量的要求。参数过多，会对系统造成过大的压力；参数过少，不符合真实场景，无法测出系统真实的压力。<br><br><br>这节的内容很重要，所谓“磨刀不误砍柴工”，必须要花时间搞清楚业务逻辑，这样才能保证最基本的数据没问题。如果连数据都没弄明白，后面的一切都是徒劳呀！<br>","like_count":5,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488675,"discussion_content":"你这是要上天了。理解的全对！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584979674,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172384,"user_name":"月亮和六便士","can_delete":false,"product_type":"c1","uid":1080894,"ip_address":"","ucode":"EFFCB9171D4B4E","user_header":"https://static001.geekbang.org/account/avatar/00/10/7e/3e/82202cc8.jpg","comment_is_top":false,"comment_ctime":1579166119,"is_pvip":false,"replies":[{"id":"66873","content":"根据关键列做groupby。 ","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1579184312,"ip_address":"","comment_id":172384,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18759035303","product_id":100042501,"comment_content":"老师，怎么看数据库中数据分布直方图？ ","like_count":4,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481720,"discussion_content":"根据关键列做groupby。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579184312,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170646,"user_name":"善行通","can_delete":false,"product_type":"c1","uid":1785980,"ip_address":"","ucode":"AC9159314DEA5A","user_header":"https://static001.geekbang.org/account/avatar/00/1b/40/7c/43bafeb8.jpg","comment_is_top":false,"comment_ctime":1578650387,"is_pvip":false,"replies":[{"id":"66217","content":"觉得真传！！","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1578753241,"ip_address":"","comment_id":170646,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18758519571","product_id":100042501,"comment_content":"<br><br>参数化数据应该用多少数据量？<br>1、之前做性能测试，不会计算使用多少数据，反正找几千条数据做性能测试，如果可以重复使用，就用几个用户做压测。经过老师这样讲解，1、循环场景使用【用户数据=线程个数】2、不可循环使用的数据Tps * 持续时间如【100（pts）x30*60(时间)=180000（条用户数据】 ；明白（配置参数之前，我们需要先判断这个参数是什么类型的数据）<br><br>参数化数据从哪里来？<br>1、后台数据库中；<br>2、在脚本执行成功后会将这些数据 insert 或 update 到数据库中；<br>3、通过模拟业务接口把数据跑进去；<br>明白：参数化时需要确保数据来源以保证数据的有效性。<br><br>参数多与少的选择对系统压力有什么影响？<br>1、明白：如果压力工具使用的数据量少，那么应用服务器、缓存服务器、数据库服务器，都将使用少量的缓存来处理，相应消耗资源比较少，测不实际效果；<br>2、如果压力工具使用的数据量少，那么应用服务器、缓存服务器、数据库服务器，都将使用少量的缓存来处理，导致命中率高，响应实际块；<br>3、参数取得过多，对系统的压力就会大；<br>4、参数取得过少，不符合真实场景中的数据量，则无法测试出系统真实的压力<br>感谢老师总结：对一个系统来说，获取的参数化数据是否合理，会直接影响压力测试的结果有没有意义。<br><br>参数化数据在数据库中的直方图是否均衡，这一层学到【如果数据取自于数据图，我们通常要检查一下数据库中的数据直方图。 对于直接从生产上拿的数据来说，数据的分布更为精准。】性能测试，性能测试数据之间影响测试结果。<br><br>感谢老师总结的【参数化数据的合理性对性能场景有着举足轻重的作用。通常，我们在做参数化数据之前，需要先分析实际业务的逻辑】<br><br><br>参数化数据的分析重点是哪些？<br>1、参数化数据的分析重点是业务逻辑,只有符合逻辑的参数化，对性能测试结果会之间影响。<br><br>在不同的场景中为什么参数化数据有如此大的差异？<br>1、电商下单压测，如果用重复数据，完全不符合实际业务情况，会导致大量缓存，结果不真实；<br>2、如果是登录后操作其他业务，就可以用几个用户登录后，进行其重复业务操作压测<br><br>参数化数据的来源和获取要符合哪些规则？<br>1、通过数据库之间查出来做参数文件<br>2、通过接口把数据跑出来这样不会破坏表，更真实<br><br>当不符合获取规则时，会产生什么问题？<br>1、压测结果不真实；<br>2、影响压测判断；<br>","like_count":4,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481054,"discussion_content":"觉得真传！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578753241,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":252220,"user_name":"人心向善","can_delete":false,"product_type":"c1","uid":1197049,"ip_address":"","ucode":"6B0C01C52BF882","user_header":"https://static001.geekbang.org/account/avatar/00/12/43/f9/555d7aa0.jpg","comment_is_top":false,"comment_ctime":1602202351,"is_pvip":false,"replies":[{"id":"93954","content":"这个比喻好恰当！","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1604282110,"ip_address":"","comment_id":252220,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14487104239","product_id":100042501,"comment_content":"那老师登录的点来说，如果被测系统即使允许同一个用户名反复登录系统，当只用一个用户名去模拟并发需求时数据库始终是对这一条数据进行查询，如果用数据库大量的用户去参数化模拟登录，数据库除了先查询第一个，还会去先查询其它用户名是否存在，这个时候数据库的压力和查询一个用户名的压力是完全不一致的。<br><br>带来的测试结果就是这并不符合实际场景的需求<br><br>更通俗的来举个例子，外卖小哥长期对一个地址送餐，如果在这一条线上必然已轻车熟路，因为他知道哪里是哪里，如果去一个新地址送餐，压力、时间消耗自然就比以前的多得多了","like_count":4,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506732,"discussion_content":"这个比喻好恰当！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604282110,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":214803,"user_name":"Geek_vivian","can_delete":false,"product_type":"c1","uid":1794960,"ip_address":"","ucode":"D18EEAE15FB68B","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK5Sdnt1DupB5fDk3UnL1D4z8gLibwtkXNKKaqCPpKQffibWoGvKRY4fcWFWhib63h7feFYJaVC27POA/132","comment_is_top":false,"comment_ctime":1588822066,"is_pvip":false,"replies":[{"id":"81978","content":"想得很好，有扩展就是有更好的理解。 ","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1590747976,"ip_address":"","comment_id":214803,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10178756658","product_id":100042501,"comment_content":"1、参数化数据的分析重点是哪些？在不同的场景中为什么参数化数据有如此大的差异？<br>重点有三个方面：业务逻辑、数据量、数据分布（数据质量）<br>理解业务逻辑，确定所需数据的类型、数据的数量。在参数化时，数据类型决定了哪些数据可以重复使用，哪些不可以，要根据业务逻辑尽量的接近现实情况，这样才会测试出上线后真实的情况。根据数据类型、TPS、运行时间，才能算出一个至少要准备的数据量。在准备数据时，也要考虑数据分布的直方图，这也需要对业务逻辑进行分析。比如一个搜索引擎的测试，我们需要考虑在多大的数据池中搜索，比如在全国范围内搜索和在一个城市范围内搜索这个数据的直方图不是一个级别的。同样在一个城市范围内搜索，在北京、上海搜索与在地广人稀的城市搜索也是不同的。这就说明了业务逻辑分析的重要性，业务逻辑分析的结果决定了数据量、数据分布的质量。<br>场景不同，数据量也不同、TPS也不同；比如，设置一个搜索范围为北京的场景，基础数据池为百万级别，TPS假设在500&#47;秒，如果我们要运行场景10分钟，搜索关键词不能重复，我们至少需要准备500*10*60=300000个关键词，多了不限。设置一个搜索范围的基础数据为10万级别的城市，TPS假设在1000&#47;秒，如果我们运行场景10分钟，搜索关键词不能重复，我们至少需要准备1000*10*60=600000个关键词。这仅仅是数据量的说明，还需要考虑关键词的命中率。<br>2、参数化数据的来源和获取要符合哪些规则？当不符合获取规则时，会产生什么问题？<br>个人觉得最主要的规则是尽量靠近上线系统真实情况。不无限靠近系统的真实情况时，可能会造成两种情况，一是上线后宕机，引起经济损失；二是花了重金保证了不宕机，但性价比太悬殊。其实这又回到了测试的价值上，我们是要找到一个性价比的平衡点，还是要找出所有的bug？我觉得可能在工作中，我会出于安全考虑，设置一个业务逻辑上更接近真实情况的场景、一个在接近真实情况场景上再加一定百分比的压力（最后上线的应该是这个）。【我感觉这个问题回答的有点跑偏了，但是确实是想到了这些。】","like_count":2,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494204,"discussion_content":"想得很好，有扩展就是有更好的理解。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590747976,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":195485,"user_name":"Geek_081377","can_delete":false,"product_type":"c1","uid":1712509,"ip_address":"","ucode":"62FC733855B002","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Cyuxk6Ej9B5G9icGd2h9OicjdbuWMsQsB0cOZoRXLN6zX5bfmCXB4yHiaicOcE5OUicGDIaodS9T4Ws6lGBibFWoSlKQ/132","comment_is_top":false,"comment_ctime":1585191131,"is_pvip":false,"replies":[{"id":"74279","content":"redis和数据库<br>里都可以。<br>jmeter中写代码去取就行了，也有相应功能可以用。网上有很多这样做的示例。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1585194114,"ip_address":"","comment_id":195485,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10175125723","product_id":100042501,"comment_content":"10万参数化数据都放在文件里，可能的风险是，参数化文件过大、压测工具加载文件性能差，设置无法成功读取文件，这个问题有同学留言过，老师回答是“放在放数据库或者放redis里”，但是又有一个问题，跑脚本时候怎么读取到里面的数据呢？","like_count":2,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489087,"discussion_content":"redis和数据库\n里都可以。\njmeter中写代码去取就行了，也有相应功能可以用。网上有很多这样做的示例。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585194114,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1712509,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Cyuxk6Ej9B5G9icGd2h9OicjdbuWMsQsB0cOZoRXLN6zX5bfmCXB4yHiaicOcE5OUicGDIaodS9T4Ws6lGBibFWoSlKQ/132","nickname":"Geek_081377","note":"","ucode":"62FC733855B002","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":242420,"discussion_content":"好的，谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587478705,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":191686,"user_name":"赵娜","can_delete":false,"product_type":"c1","uid":1856138,"ip_address":"","ucode":"70F6A182827555","user_header":"","comment_is_top":false,"comment_ctime":1584790584,"is_pvip":false,"replies":[{"id":"73477","content":"这里面有一个探测尝试的阶段。不知道时就加随意加，再分析出数据量的影响，然后修正场景。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1584805829,"ip_address":"","comment_id":191686,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10174725176","product_id":100042501,"comment_content":"当不知道tps情况下，如何确定参数化的数据量以及设定线程数啊","like_count":3,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488227,"discussion_content":"这里面有一个探测尝试的阶段。不知道时就加随意加，再分析出数据量的影响，然后修正场景。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584805829,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170624,"user_name":"新思维","can_delete":false,"product_type":"c1","uid":1786527,"ip_address":"","ucode":"DC29CA1DB16D90","user_header":"https://static001.geekbang.org/account/avatar/00/1b/42/9f/428dbb20.jpg","comment_is_top":false,"comment_ctime":1578645778,"is_pvip":false,"replies":[{"id":"66218","content":"写成固定值，不还是开发要改代码的吗？<br>我通常是把校验去掉或加万能验证码。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1578753307,"ip_address":"","comment_id":170624,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10168580370","product_id":100042501,"comment_content":"请问在性能测试过程中对验证码如何处理？开发屏蔽调还是写成固定值？","like_count":2,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481044,"discussion_content":"写成固定值，不还是开发要改代码的吗？\n我通常是把校验去掉或加万能验证码。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578753307,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":271541,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1609686837,"is_pvip":true,"replies":[{"id":"98453","content":"正解。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1609725450,"ip_address":"","comment_id":271541,"utype":1}],"discussion_count":1,"race_medal":1,"score":"5904654133","product_id":100042501,"comment_content":"总的来说：参数化的数据 要尽量和真实业务场景的数据一致，不仅包括数据量大小，数据的分布，数据是否可以循环使用","like_count":1,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512955,"discussion_content":"正解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609725450,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187201,"user_name":"啊啊","can_delete":false,"product_type":"c1","uid":1511478,"ip_address":"","ucode":"3F8F17C508A19D","user_header":"https://static001.geekbang.org/account/avatar/00/17/10/36/fc9e80c4.jpg","comment_is_top":false,"comment_ctime":1584059391,"is_pvip":false,"replies":[{"id":"72273","content":"生产数据量就是标准。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1584076264,"ip_address":"","comment_id":187201,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5879026687","product_id":100042501,"comment_content":"铺底数据量的计算，在这个系列课程中有介绍吗？","like_count":1,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487027,"discussion_content":"生产数据量就是标准。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584076264,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1511478,"avatar":"https://static001.geekbang.org/account/avatar/00/17/10/36/fc9e80c4.jpg","nickname":"啊啊","note":"","ucode":"3F8F17C508A19D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":203894,"discussion_content":"新系统没有生产数据量。比如我们预估一年交易量有50万～200万，那我们为了满足一年的业务量，铺底多少合适？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584097837,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185581,"user_name":"风中之心","can_delete":false,"product_type":"c1","uid":1097711,"ip_address":"","ucode":"027633377D9D6B","user_header":"https://static001.geekbang.org/account/avatar/00/10/bf/ef/6f6a0c1f.jpg","comment_is_top":false,"comment_ctime":1583637727,"is_pvip":false,"replies":[{"id":"71678","content":"用模拟真实用户的场景就行了。这个动作之前需要先判断用户的操作习惯和时间间隔。要做的动作还是比较多的。 ","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1583645813,"ip_address":"","comment_id":185581,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5878605023","product_id":100042501,"comment_content":"但是，由又有一个问题，怎么测试在线用户呢？","like_count":2,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486426,"discussion_content":"用模拟真实用户的场景就行了。这个动作之前需要先判断用户的操作习惯和时间间隔。要做的动作还是比较多的。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583645813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179964,"user_name":"麦兜布熊","can_delete":false,"product_type":"c1","uid":1118352,"ip_address":"","ucode":"F46E3571FAE9FE","user_header":"https://static001.geekbang.org/account/avatar/00/11/10/90/5cb92311.jpg","comment_is_top":false,"comment_ctime":1582128638,"is_pvip":false,"replies":[{"id":"69868","content":"放数据库里呗。或者放redis里。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1582153891,"ip_address":"","comment_id":179964,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5877095934","product_id":100042501,"comment_content":"请问老师，10万参数化数据都放在文件里，可能的风险是，参数化文件过大、压测工具加载文件性能差，设置无法成功读取文件，这种情况怎么办呢","like_count":2,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484463,"discussion_content":"放数据库里呗。或者放redis里。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582153891,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170889,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1578751639,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5873718935","product_id":100042501,"comment_content":"参数化直方图📊介绍下，本章讲得很好","like_count":1,"discussions":[{"author":{"id":1786328,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/41/d8/5a9fbb71.jpg","nickname":"晴空","note":"","ucode":"1BB34D8E405314","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133243,"discussion_content":"直方图：常见的一种展现数字数据的条形图📊（也可理解为“描述集中趋势、分散程度、统计分布形状”）。\n直方图特点是：利用数字和柱状的相对高度，直观表示数据集中分布在那个区间范围（即测试所需的数据，如文章中所说的客户流水记录通常是在100～200间）。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1578943487,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170574,"user_name":"A周黑鸭","can_delete":false,"product_type":"c1","uid":1794266,"ip_address":"","ucode":"6BBF4FF74232D0","user_header":"https://static001.geekbang.org/account/avatar/00/1b/60/da/3eea8990.jpg","comment_is_top":false,"comment_ctime":1578636473,"is_pvip":false,"replies":[{"id":"66223","content":"这是个反复验证的过程。看测试的阶段和目标。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1578753684,"ip_address":"","comment_id":170574,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5873603769","product_id":100042501,"comment_content":"怎么去测量一个接口的tps是多少？比如登录接口  我要知道这个接口的tps是多少才知道要使用多少参数化数据吗？老师","like_count":2,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481022,"discussion_content":"这是个反复验证的过程。看测试的阶段和目标。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578753684,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":345141,"user_name":"汐度清风","can_delete":false,"product_type":"c1","uid":2033324,"ip_address":"","ucode":"CF8BE29576A371","user_header":"https://static001.geekbang.org/account/avatar/00/1f/06/ac/55fba20b.jpg","comment_is_top":false,"comment_ctime":1652075087,"is_pvip":false,"replies":[{"id":"126622","content":"预热是为了线上稳定运行，是合理的。<br>预热和使用多少数据来做参数化并不冲突。 ","user_name":"作者回复","user_name_real":"编辑","uid":"1785562","ctime":1653834724,"ip_address":"","comment_id":345141,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1652075087","product_id":100042501,"comment_content":"有个疑问，望老师解答：如果压力工具使用的数据量少，那么应用服务器、缓存服务器、数据库服务器，都将使用少量的缓存来处理。  所以，这里不循环使用数据，以免走缓存，测不出来实际压力。但网上也有些做性能的文章说到，在执行性能测试前，会先做数据预热。预热是合理的吗？","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574117,"discussion_content":"预热是为了线上稳定运行，是合理的。\n预热和使用多少数据来做参数化并不冲突。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653834724,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":343765,"user_name":"Geek_697d33","can_delete":false,"product_type":"c1","uid":2739475,"ip_address":"","ucode":"448FD244C79048","user_header":"","comment_is_top":false,"comment_ctime":1651044932,"is_pvip":false,"replies":[{"id":"125945","content":"每次在真实场景下请求时会变化的数据都是要参数化或者关联的。","user_name":"作者回复","user_name_real":"编辑","uid":"1785562","ctime":1652058873,"ip_address":"","comment_id":343765,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1651044932","product_id":100042501,"comment_content":"高老师，还有个问题。接口中传参有很多，如何判断哪些参数需要做到参数化呢？？拜托，麻烦看到后一定回复下","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571037,"discussion_content":"每次在真实场景下请求时会变化的数据都是要参数化或者关联的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652058873,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339451,"user_name":"章鱼","can_delete":false,"product_type":"c1","uid":2673745,"ip_address":"","ucode":"D44893DC2526D4","user_header":"","comment_is_top":false,"comment_ctime":1648109679,"is_pvip":false,"replies":[{"id":"124356","content":"总结的不错哦，加油。","user_name":"作者回复","user_name_real":"编辑","uid":"1785562","ctime":1648601139,"ip_address":"","comment_id":339451,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1648109679","product_id":100042501,"comment_content":"1、不会参数化导致：数据不均衡、参数化数量不足<br><br>2、应该用多少数据量：首先要看这个数据是否可以重复、数据一定要符合生产的分布、数据要真实<br><br>3、[目标tps x 持续时间（秒级）」可以计算出参数化数大概的量级。可以根据数据库现有的数据来倒推持续的时间【现有数据&#47;tps&#47;60s = 持续的分钟数】<br><br>4、数据种类：存量数据、增量数据<br><br>5、构造测试数据的方式：调用API生成、操作数据库生成<br><br>6、参数多少的影响：参数取得过多，对系统的压力就会大；参数取得过少，不符合真实场景中的数据量，则无法测试出系统真实的压力。<br><br>7、参数化数据：需要符合真实业务数据分布、符合业务场景；要满足性能场景中数量的要求<br><br>8、对于业务逻辑：必须要多花时间在业务逻辑上面，要把数据弄明白，否则后面的压测结果会出现偏差，不满足性能要求，一切都是徒劳<br><br>9、查看数据库分布直方图：根据关键列做groupby<br><br>10、如果有大量的参数数据放在参数化文件里面，参数化文件过大、压测工具加载文件性能差，设置无法成功读取文件，如10万，20万，可以将数据放到：数据库、Redis里面动态获取<br><br>11、当不知道tps情况下，如何确定参数化的数据量以及设定线程数：通过探测尝试阶段，分析数据量后，再修正场景<br><br>12、铺底数据量的计算：生产数据量就是标准","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559064,"discussion_content":"总结的不错哦，加油。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648601139,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339439,"user_name":"章鱼","can_delete":false,"product_type":"c1","uid":2673745,"ip_address":"","ucode":"D44893DC2526D4","user_header":"","comment_is_top":false,"comment_ctime":1648103620,"is_pvip":false,"replies":[{"id":"124355","content":"修炼就是看谁更有耐力。","user_name":"作者回复","user_name_real":"编辑","uid":"1785562","ctime":1648601103,"ip_address":"","comment_id":339439,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1648103620","product_id":100042501,"comment_content":"越到后面的章节，留言就越少，相对应的也越来越复杂了，继续加油","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559063,"discussion_content":"修炼就是看谁更有耐力。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648601103,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":326347,"user_name":"颜颜","can_delete":false,"product_type":"c1","uid":2718104,"ip_address":"","ucode":"2AE3A10A51EFC1","user_header":"https://static001.geekbang.org/account/avatar/00/29/79/98/fb1bf6c7.jpg","comment_is_top":false,"comment_ctime":1639477431,"is_pvip":false,"replies":[{"id":"118527","content":"应用也会有缓存。 query_cache开不开，我建议你在实际的项目中测试一下。","user_name":"作者回复","user_name_real":"编辑","uid":"1785562","ctime":1639522426,"ip_address":"","comment_id":326347,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1639477431","product_id":100042501,"comment_content":"老师。同一个用户做登录压测和用不同的用户登录在数据库缓存关闭的情况下有什么区别？我觉得同一个用户不停的登录，不走缓存的话，那每次都要走一次完整的查询过程，这和不同用户登录每次都要走一次查询过程一样啊，现在很多版本的MySQL，query_catch都是off状态的，我看网上说不建议打开缓存","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538786,"discussion_content":"应用也会有缓存。 query_cache开不开，我建议你在实际的项目中测试一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639522426,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":281111,"user_name":"Geek_88dbc9","can_delete":false,"product_type":"c1","uid":2417658,"ip_address":"","ucode":"371480D559ACC5","user_header":"","comment_is_top":false,"comment_ctime":1614586094,"is_pvip":false,"replies":[{"id":"103247","content":"第二种。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1616422709,"ip_address":"","comment_id":281111,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1614586094","product_id":100042501,"comment_content":"hi，老师，100用户登陆压测场景，登录压测时，线程数100，循环N次，持续5分钟，数据循环使用   VS 线程数100，循环N次，持续5分钟，每个数据不重复  ，这2种哪种比较贴合实际场景？  <br>","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516296,"discussion_content":"第二种。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616422709,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242514,"user_name":"障碍物","can_delete":false,"product_type":"c1","uid":1701562,"ip_address":"","ucode":"46872942956A1C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLibCKJYwlyLEIWicNxJSuIwIbCZqfGIbzfF5mKicjWIrGkibBgM4E0dSNekhzdaoyzabmZPTxicTCv7TQ/132","comment_is_top":false,"comment_ctime":1597745525,"is_pvip":false,"replies":[{"id":"93978","content":"当然会影响。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1604283807,"ip_address":"","comment_id":242514,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1597745525","product_id":100042501,"comment_content":"高老师您好，想请问下，如果那种注册，然后就是新增的账号都要去删除，在每个注册请求后，都加了sql执行删除操作，会影响注册的性能测试结果么","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504025,"discussion_content":"当然会影响。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604283807,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":205015,"user_name":"小破鸟儿","can_delete":false,"product_type":"c1","uid":1355818,"ip_address":"","ucode":"4F9C354B749909","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKSLiaFwjjzNImuMWNmvVa9YSniacc7sel4Uv2xHeA35Uqibj1ibABMIFIZDgmY82Tw8hDCr8hUIaoKibg/132","comment_is_top":false,"comment_ctime":1586508069,"is_pvip":false,"replies":[{"id":"77271","content":"1. 你可以登录一次做多次下单呀。并且如果你要是只测试接口，完全可以不用登录过程呀。<br>2. 可以的。不过要控制好。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1586959372,"ip_address":"","comment_id":205015,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586508069","product_id":100042501,"comment_content":"老师，请教两个问题：<br>1、商城下订单的接口如果是同一个用户不断的下订单，虽然不符合实际的业务场景，但是对下订单的接口造成了单纯的压力；如果我用多个用户登录后再去请求下订单，符合实际的业务场景但是多了登录多个用户的请求，感觉对下订单的压力造成了影响，毕竟我想要的是对单纯的一个接口造成压力（并且我并不清楚符合业务场景的压测和不符合场景的压测所产生的结果会有多大的差异）<br>2、数据的真实性比较重要，那是否可以在线上环境做真实数据的压测（前提不会对用户的数据造成变更等影响）","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491352,"discussion_content":"1. 你可以登录一次做多次下单呀。并且如果你要是只测试接口，完全可以不用登录过程呀。\n2. 可以的。不过要控制好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586959372,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185580,"user_name":"风中之心","can_delete":false,"product_type":"c1","uid":1097711,"ip_address":"","ucode":"027633377D9D6B","user_header":"https://static001.geekbang.org/account/avatar/00/10/bf/ef/6f6a0c1f.jpg","comment_is_top":false,"comment_ctime":1583637695,"is_pvip":false,"replies":[{"id":"71669","content":"多多交流总会更对。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1583643615,"ip_address":"","comment_id":185580,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583637695","product_id":100042501,"comment_content":"以前做登录逮住一个用户死劲的登录，今天才知道这样是不对的","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486425,"discussion_content":"多多交流总会更对。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583643615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":176382,"user_name":"杜艳","can_delete":false,"product_type":"c1","uid":1168516,"ip_address":"","ucode":"8D46A8CF33E9C7","user_header":"https://static001.geekbang.org/account/avatar/00/11/d4/84/7f584cb2.jpg","comment_is_top":false,"comment_ctime":1581046188,"is_pvip":false,"replies":[{"id":"68599","content":"这只是个假设的tps。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1581165616,"ip_address":"","comment_id":176382,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581046188","product_id":100042501,"comment_content":"老师，首先，参数化数据要用到多少取决于场景，举例来说，对一个压力工具线程数为 100，TPS 有 1000 的系统，如果要运行 30 分钟，则应该取得的参数化数据是下面这样的。 我想咨询下，系统的TPS=1000，这个数值最初是怎么得来的？","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483088,"discussion_content":"这只是个假设的tps。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581165616,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172460,"user_name":"songyy","can_delete":false,"product_type":"c1","uid":1007201,"ip_address":"","ucode":"34D6443B91676D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/61/985f3eb7.jpg","comment_is_top":false,"comment_ctime":1579181261,"is_pvip":false,"replies":[{"id":"66929","content":"理解的很对。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1579237515,"ip_address":"","comment_id":172460,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1579181261","product_id":100042501,"comment_content":"思考题<br>\t- 参数化数据的分析重点是哪些：看具体的业务逻辑，决定数据的具体分布情况<br>\t- 在不同的场景中为什么参数化数据有如此大的差异：因为业务逻辑不通，使得数据分布对应的不同<br>\t- 参数化数据的来源和获取要符合哪些规则：要满足生产环境中数据的分布；要满足性能场景中数据量的要求。<br>当不符合获取规则时，会产生什么问题：性能测试出来的结果，不能代表真实场景","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481747,"discussion_content":"理解的很对。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579237515,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170743,"user_name":"土耳其小土豆","can_delete":false,"product_type":"c1","uid":1785659,"ip_address":"","ucode":"B16574EF28525E","user_header":"https://static001.geekbang.org/account/avatar/00/1b/3f/3b/119fd0ef.jpg","comment_is_top":false,"comment_ctime":1578702432,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578702432","product_id":100042501,"comment_content":"学完<br>","like_count":0}]}