{"id":6938,"title":"06 | OAuth2 模式该如何选型","content":"<h1>温馨提示</h1>\n<p>部分Android用户如果在全屏播放时遇到问题，建议使用 PC 版或微信小程序进行学习。给您造成的不便还请谅解，我们会尽快解决这一问题。</p>\n<p>PC端学习方式</p>\n<ul>\n<li>\n<p>用浏览器访问 <a href=\"https://time.geekbang.org\">https://time.geekbang.org</a> ，登录极客时间账号</p>\n</li>\n<li>\n<p>访问 <a href=\"https://time.geekbang.org/paid-content\">https://time.geekbang.org/paid-content</a> ，选择相应内容</p>\n</li>\n</ul>\n<p>小程序学习方式</p>\n<ul>\n<li>进入极客时间小程序</li>\n<li>在视频课程里选择相应内容</li>\n</ul>\n<!-- special end -->\n","comments":[{"had_liked":false,"id":14596,"user_name":"gatspy","can_delete":false,"product_type":"c3","uid":1024286,"ip_address":"","ucode":"103EE6DC196873","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/1e/be5dd8ad.jpg","comment_is_top":false,"comment_ctime":1530550260,"is_pvip":false,"replies":[{"id":5397,"content":"在授权码模式中，这里的客户是指客户端应用，一般在一个Web服务器上，资源拥有者一般使用自己的设备(PC或笔记本或手机)，通过客户应用（Web服务器设备）去访问自己在其它服务器上资源。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1531405644,"ip_address":"","comment_id":14596,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"谢谢波波老师的精彩内容，有个问题请教老师，授权码模式中  “假定资源拥有者和客户在不同的设备上”怎么理解呢？资源拥有者不是授权客户前端渠道后，AS才发放令牌到客户的后端服务吗？这个时候资源拥有者和客户前端渠道是在同一台设备上的吧","like_count":8,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420062,"discussion_content":"在授权码模式中，这里的客户是指客户端应用，一般在一个Web服务器上，资源拥有者一般使用自己的设备(PC或笔记本或手机)，通过客户应用（Web服务器设备）去访问自己在其它服务器上资源。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531405644,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72089,"user_name":"libocz","can_delete":false,"product_type":"c3","uid":1227392,"ip_address":"","ucode":"9DC917019EB2CA","user_header":"https://static001.geekbang.org/account/avatar/00/12/ba/80/2b427c9c.jpg","comment_is_top":false,"comment_ctime":1551517728,"is_pvip":false,"replies":[{"id":26317,"content":"你好，举个例子，你在github上有一些项目，你就是资源（项目）拥有者(resource owner)，你可以利用github提供的开放API开发一个应用，用它可以查看甚至操作你在github上的项目，这个应用叫客户应用(client app)。如果这个应用是一个web应用，它被部署在一个web服务器上，那么它是一个私密应用，在web服务器上可以存储该应用的客户标识+凭证(client id+secret)，你需要使用浏览器(user-agent)访问这个应用，但是客户标识+凭证（包括令牌）不会被浏览器看到，所以叫私密应用。如果你开发的应用不是部署在web服务器上的，而是直接加载到用户端浏览器的单页应用，或者无线原生应用，这些应用会直接操作令牌，那么它们被称为公开应用，公开应用只存储客户标识(client id)，不能存储客户凭证(client secret)，否则会被用户看到可能泄漏，所以叫公开客户应用。另外建议看下OAuth2最简向导ppt:https:&#47;&#47;github.com&#47;spring2go&#47;oauth2lab&#47;blob&#47;master&#47;ppt&#47;","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1551704752,"ip_address":"","comment_id":72089,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"老师能把资源拥有者，客户，公开客户应用，user-agent这4个概念的区分点帮我们指出来吗？实在看的一头雾水","like_count":4,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441455,"discussion_content":"你好，举个例子，你在github上有一些项目，你就是资源（项目）拥有者(resource owner)，你可以利用github提供的开放API开发一个应用，用它可以查看甚至操作你在github上的项目，这个应用叫客户应用(client app)。如果这个应用是一个web应用，它被部署在一个web服务器上，那么它是一个私密应用，在web服务器上可以存储该应用的客户标识+凭证(client id+secret)，你需要使用浏览器(user-agent)访问这个应用，但是客户标识+凭证（包括令牌）不会被浏览器看到，所以叫私密应用。如果你开发的应用不是部署在web服务器上的，而是直接加载到用户端浏览器的单页应用，或者无线原生应用，这些应用会直接操作令牌，那么它们被称为公开应用，公开应用只存储客户标识(client id)，不能存储客户凭证(client secret)，否则会被用户看到可能泄漏，所以叫公开客户应用。另外建议看下OAuth2最简向导ppt:https://github.com/spring2go/oauth2lab/blob/master/ppt/","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551704752,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159418,"user_name":"丁文波","can_delete":false,"product_type":"c3","uid":1108910,"ip_address":"","ucode":"B75DBC6144E1D5","user_header":"https://static001.geekbang.org/account/avatar/00/10/eb/ae/7bb79306.jpg","comment_is_top":false,"comment_ctime":1575619467,"is_pvip":false,"replies":[{"id":61112,"content":"有两种设计：\n\n一种是用户信息集中存在认证服务器上，其它服务器通过认证服务集中登录，后面需要用户数据的话，则拿令牌集中到认证服务器上去查用户数据。\n\n另外一种做法是认证服务器上只存一个账户id(用户注册时建立)，具体用户信息，各个业务应用根据需要自己存一份，但是表中要记录用户和账户id的关联，这样通过认证服务器登录后，可以获取到账户id，然后通过账户id去查各自的用户数据。\n\n","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1575889790,"ip_address":"","comment_id":159418,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"我现在工作的单位，实际场景和需求是：几个服务器，但这几个服务器登录不要互通，只想新增一个认证授权服务器，这几个服务器都通过一个认证服务器完成登录授权操作，我看了oauth的视频，但有些疑惑，用户信息是存到认证服务器上吗？其它服务器也会用到用户信息，需要也存一份吗？怎么设计这个认证授权服务","like_count":3,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477049,"discussion_content":"有两种设计：\n\n一种是用户信息集中存在认证服务器上，其它服务器通过认证服务集中登录，后面需要用户数据的话，则拿令牌集中到认证服务器上去查用户数据。\n\n另外一种做法是认证服务器上只存一个账户id(用户注册时建立)，具体用户信息，各个业务应用根据需要自己存一份，但是表中要记录用户和账户id的关联，这样通过认证服务器登录后，可以获取到账户id，然后通过账户id去查各自的用户数据。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575889790,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134733,"user_name":"一剑","can_delete":false,"product_type":"c3","uid":1022127,"ip_address":"","ucode":"93ADD5B5215D4C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/98/af/3945cea4.jpg","comment_is_top":false,"comment_ctime":1568905667,"is_pvip":false,"replies":[{"id":51825,"content":"你好，你学习很仔细，有思考，赞！\n\n关于第1个问题：第一方公开应用，如果使用用户名密码模式，原生APP是可以把clientId&#47;secret编码在代码里头的，最后编译成二进制，一般不易拿到。如果是SPA，对于无线应用，可以考虑hybrid混合模式，clientId&#47;secret也可以考虑编码在代码里头，如果是纯SPA，为安全考虑，可以考虑服务端配合，相当于一种授权码模式变体。\n\n实际很多企业的第一方应用，大都采用用户名密码模式，但不是严格OAuth，也就是说clientId&#47;secret都不传递，或者只传一个应用标识，做统计跟踪用。既然是第一方官方应用，一般和官方域名绑定，或者要经过appstore严格审核，很难伪造获利。\n\n关于问题2：企业分内外客户的话，的确去要考虑部署两套OAuth服务，或者采用支持多租户的OAuth服务(可以参考FusionAuth(fusionauth.io))。\n\n","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1568986271,"ip_address":"","comment_id":134733,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"终于弄明白了客户端的含义，其实就是谁持有令牌，谁就是客户端：比方说服务器渲染的WebApp，从头到尾都是WebApp使用令牌去访问资源服务器；又比如SPA或者原生APP，他们也是使用令牌去访问资源服务器，有同学可能会说SPA也是服务器上加载来的，那为啥不算服务器是客户端？其实服务器只是宿主，浏览器才是程序真正的执行者。不过在现代前后端分离的大趋势下，SPA也并不一定非得使用简化模式，也会充当“User-Agent”的角色，真正的客户端还是服务器，比如典型的案例：微信登录。\n\n另外有两个问题请教老师：\n1. “根据RFC6749，授权码模式，用户名密码模式和客户端模式，必须传client_id&#47;secret进行客户应用认证。简化模式只需传client_id。”\n\n问题：公开应用之前说的是不能保存client secret的，然后按照ppt里的选型流程：第一方公开应用（SPA或原生APP）是使用用户名密码模式，如何按照上面这个规则传递client secret呢？如果不传递似乎就无法证明应用的身份\n\n2. “电商后台web管理系统应该算（只要不是单页应用），如果要访问内部API且内部有OAUTH认证授权服务的话，建议用标准授权码模式。当然视具体情况，企业内部如果安全不严格的话用简化模式或密码模式，甚至不走OAUTH直连API也OK。”\n\n问题：在现实场景下，一般用户会分多种类型，比如内部员工和外部客户，内外系统都有认证和授权需求，个人感觉OAuth似乎很难同时满足多用户类型的支持，需要分别部署两套OAuth？","like_count":3,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467881,"discussion_content":"你好，你学习很仔细，有思考，赞！\n\n关于第1个问题：第一方公开应用，如果使用用户名密码模式，原生APP是可以把clientId/secret编码在代码里头的，最后编译成二进制，一般不易拿到。如果是SPA，对于无线应用，可以考虑hybrid混合模式，clientId/secret也可以考虑编码在代码里头，如果是纯SPA，为安全考虑，可以考虑服务端配合，相当于一种授权码模式变体。\n\n实际很多企业的第一方应用，大都采用用户名密码模式，但不是严格OAuth，也就是说clientId/secret都不传递，或者只传一个应用标识，做统计跟踪用。既然是第一方官方应用，一般和官方域名绑定，或者要经过appstore严格审核，很难伪造获利。\n\n关于问题2：企业分内外客户的话，的确去要考虑部署两套OAuth服务，或者采用支持多租户的OAuth服务(可以参考FusionAuth(fusionauth.io))。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568986271,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121276,"user_name":"SoulEdge","can_delete":false,"product_type":"c3","uid":1384633,"ip_address":"","ucode":"3D21D5CC1E6B3C","user_header":"https://static001.geekbang.org/account/avatar/00/15/20/b9/8e444fed.jpg","comment_is_top":false,"comment_ctime":1565092711,"is_pvip":false,"replies":[{"id":44715,"content":"谢谢支持！加油！","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1565188957,"ip_address":"","comment_id":121276,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"波波老师的回复率应该是所有课程里最高的，赞一个","like_count":3,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461719,"discussion_content":"谢谢支持！加油！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565188957,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":11652,"user_name":"载曜之始","can_delete":false,"product_type":"c3","uid":1134828,"ip_address":"","ucode":"8989BA54AF7589","user_header":"","comment_is_top":false,"comment_ctime":1528269619,"is_pvip":false,"replies":[{"id":3994,"content":"单页是指纯静态，js&#47;html&#47;逻辑都跑在客户端agent（如浏览器中），后台服务器只做静态资源的hosting，无逻辑。凡后台服务器端有计算逻辑的，即使前端页面用ajax，也应该考虑走授权码模式。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1528625391,"ip_address":"","comment_id":11652,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"老师，单页应用是指spa(single page application)，也就是利用html5,ajax和后台server交互？有后台服务器的话，是不是也应该是走授权码模式？","like_count":3,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418942,"discussion_content":"单页是指纯静态，js/html/逻辑都跑在客户端agent（如浏览器中），后台服务器只做静态资源的hosting，无逻辑。凡后台服务器端有计算逻辑的，即使前端页面用ajax，也应该考虑走授权码模式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528625391,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":8443,"user_name":"fomy","can_delete":false,"product_type":"c3","uid":1125834,"ip_address":"","ucode":"CD87EA03B1F327","user_header":"https://static001.geekbang.org/account/avatar/00/11/2d/ca/02b0e397.jpg","comment_is_top":false,"comment_ctime":1526218769,"is_pvip":false,"replies":[{"id":2750,"content":"可以简单认为是一个概念，资源拥有者是OAuth的术语，假设极客时间开发的app可以支持微信联合登录，你在微信上有用户数据（资源），你就是资源拥有者，可以授权极客时间app去访问你在微信上的数据（联合登录）","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1526651825,"ip_address":"","comment_id":8443,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"资源拥有者和用户不是同一个概念吗？能举例说明一下吗？","like_count":3,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417722,"discussion_content":"可以简单认为是一个概念，资源拥有者是OAuth的术语，假设极客时间开发的app可以支持微信联合登录，你在微信上有用户数据（资源），你就是资源拥有者，可以授权极客时间app去访问你在微信上的数据（联合登录）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526651825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/d1ab239e.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":187769,"discussion_content":"这么说，其实资源服务器(微信)同时也是授权服务器咯？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582767617,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":18483,"user_name":"凯文1985","can_delete":false,"product_type":"c3","uid":1036921,"ip_address":"","ucode":"9A42344649072B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d2/79/0a432fde.jpg","comment_is_top":false,"comment_ctime":1533362333,"is_pvip":false,"replies":[{"id":6621,"content":"authcode只能用来换取对应的那个token，不能干其它事情，而且有时效性。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1533695306,"ip_address":"","comment_id":18483,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"还是不是很理解，如果app是第三方开发的 然后选取了authorization code的实现方式 那么第三方的app 也是拿到了authorization code 用来获取下一步的access token，那么这样的方式不也是不安全的吗 第三方app可以拿着authorization code做任意事情？","like_count":2,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421548,"discussion_content":"authcode只能用来换取对应的那个token，不能干其它事情，而且有时效性。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533695306,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":8279,"user_name":"duer","can_delete":false,"product_type":"c3","uid":1020901,"ip_address":"","ucode":"E93505E319F81B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/93/e5/87400c85.jpg","comment_is_top":false,"comment_ctime":1526040618,"is_pvip":false,"replies":[{"id":2758,"content":"谢谢建议🌹已经反馈极客时间","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1526653252,"ip_address":"","comment_id":8279,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"谢谢老师，不知道视频的录制最大音量可否调大一些，在地铁上用耳机都有点儿听不清了。最好和音频产品的一样大，谢谢","like_count":2,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417654,"discussion_content":"谢谢建议🌹已经反馈极客时间","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526653252,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":251573,"user_name":"Mars","can_delete":false,"product_type":"c3","uid":1088584,"ip_address":"","ucode":"D7BAA9EBB7D89C","user_header":"https://static001.geekbang.org/account/avatar/00/10/9c/48/44965714.jpg","comment_is_top":false,"comment_ctime":1601695384,"is_pvip":false,"replies":[{"id":92096,"content":"你好，课程推荐的OAuth2选型方式还是比较传统的做法，但是这几年OAuth2选型有了新的发展，考虑到简化模式(Implicit Grant)不安全，所以对于第三方的单页SPA和原生App，都推荐使用带PKCE扩展的授权码模式(Authorization Code Flow with Proof Key for Code Exchange (PKCE))，关于具体选型流程，下面是一些参考：\nhttps:&#47;&#47;auth0.com&#47;docs&#47;authorization&#47;which-oauth-2-0-flow-should-i-use\nhttps:&#47;&#47;auth0.com&#47;docs&#47;flows&#47;authorization-code-flow-with-proof-key-for-code-exchange-pkce\nhttps:&#47;&#47;dzone.com&#47;articles&#47;what-is-pkce\nhttps:&#47;&#47;blog.postman.com&#47;pkce-oauth-how-to&#47;\n\n\n\n","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1602073502,"ip_address":"","comment_id":251573,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"请问下老师，客户类型是单页应用SPA或者原生App，如果都是第三方，为什么选型不同呢？为什么不都使用Implicit Grant 或者都使用 Auth Code Grant呢？","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506550,"discussion_content":"你好，课程推荐的OAuth2选型方式还是比较传统的做法，但是这几年OAuth2选型有了新的发展，考虑到简化模式(Implicit Grant)不安全，所以对于第三方的单页SPA和原生App，都推荐使用带PKCE扩展的授权码模式(Authorization Code Flow with Proof Key for Code Exchange (PKCE))，关于具体选型流程，下面是一些参考：\nhttps://auth0.com/docs/authorization/which-oauth-2-0-flow-should-i-use\nhttps://auth0.com/docs/flows/authorization-code-flow-with-proof-key-for-code-exchange-pkce\nhttps://dzone.com/articles/what-is-pkce\nhttps://blog.postman.com/pkce-oauth-how-to/\n\n\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602073502,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":197656,"user_name":"　　　　　　　鸟人","can_delete":false,"product_type":"c3","uid":1035165,"ip_address":"","ucode":"E504B22F336035","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cb/9d/2bc85843.jpg","comment_is_top":false,"comment_ctime":1585389905,"is_pvip":false,"replies":[{"id":75262,"content":"简单可以这样理解。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1585748945,"ip_address":"","comment_id":197656,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100007001,"comment_content":"前端应用面对用户 后端面对内部  又或者前端在公网  后端在内网  可以这样理解么","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489572,"discussion_content":"简单可以这样理解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585748945,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182316,"user_name":"J.Smile","can_delete":false,"product_type":"c3","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/d1ab239e.jpg","comment_is_top":false,"comment_ctime":1582767951,"is_pvip":false,"replies":[{"id":70655,"content":"你好，基本上，github内部有独立的授权服务器部署，也有各种独立的资源服务器部署，但是可以通过前置反向代理(比如nginx)把内部部署屏蔽掉，外面看起来像是一个统一的服务。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1582813389,"ip_address":"","comment_id":182316,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100007001,"comment_content":"授权码模式中，还是不是很能区分授权服务器与资源服务器！以老师在答问中的例子，github上边有我的项目，那github就是资源服务器，但是客户应用访问github请求授权码以及兑换access_token，那github不也同时就是授权服务器吗？另外，我也是在github上注册并生成了client_id这些信息，不也说明github就是授权服务器吗？","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485304,"discussion_content":"你好，基本上，github内部有独立的授权服务器部署，也有各种独立的资源服务器部署，但是可以通过前置反向代理(比如nginx)把内部部署屏蔽掉，外面看起来像是一个统一的服务。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582813389,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163655,"user_name":"米斯特.杜","can_delete":false,"product_type":"c3","uid":1089110,"ip_address":"","ucode":"C2C567259FDEE2","user_header":"https://static001.geekbang.org/account/avatar/00/10/9e/56/af7a9435.jpg","comment_is_top":false,"comment_ctime":1576761529,"is_pvip":false,"replies":[{"id":62341,"content":"你好，oauth2本身就有很多术语，本课也已经花了很多篇幅来解释其中的术语，建议多看看几遍视频和相关文档，进一步消化。\n\n另外，前面有一节白话OAuth2，这个比较简单，可做入门学习。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1576841916,"ip_address":"","comment_id":163655,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100007001,"comment_content":"听了好几遍课又看了大家的留言，感觉大家被老师的各种专业术语给搞晕菜了。如果可能老师可以在课程开始补充一些专业术语的白话解释。","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478492,"discussion_content":"你好，oauth2本身就有很多术语，本课也已经花了很多篇幅来解释其中的术语，建议多看看几遍视频和相关文档，进一步消化。\n\n另外，前面有一节白话OAuth2，这个比较简单，可做入门学习。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576841916,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":100562,"user_name":"杨杰","can_delete":false,"product_type":"c3","uid":1131823,"ip_address":"","ucode":"74817EA9499843","user_header":"https://static001.geekbang.org/account/avatar/00/11/45/2f/b0b0dd74.jpg","comment_is_top":false,"comment_ctime":1559577506,"is_pvip":false,"replies":[{"id":36629,"content":"根据RFC6749，授权码模式，用户名密码模式和客户端模式，必须传client_id&#47;secret进行客户应用认证。简化模式只需传client_id。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1559911945,"ip_address":"","comment_id":100562,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100007001,"comment_content":"杨波老师，我的问题是在生产环境进行认证的过程中一般什么时候需要传入“client_secret” 这个参数？有没有什么场景是必须（或建议）传入这个参数的？前面的问题我表述的可能不太清楚。","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452601,"discussion_content":"根据RFC6749，授权码模式，用户名密码模式和客户端模式，必须传client_id/secret进行客户应用认证。简化模式只需传client_id。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559911945,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":100420,"user_name":"杨杰","can_delete":false,"product_type":"c3","uid":1131823,"ip_address":"","ucode":"74817EA9499843","user_header":"https://static001.geekbang.org/account/avatar/00/11/45/2f/b0b0dd74.jpg","comment_is_top":false,"comment_ctime":1559553693,"is_pvip":false,"replies":[{"id":36225,"content":"Client Credentials Grant是机器对机器调用的场景，没有人参与的，比如某个job任务要定期调用某个服务，这个动作是异步周期执行，没有人参与，如果安全要求严格，那么可以考虑这种客户端模式。不过，实际企业中，机器间调用一般可以直接调用，安全性通过生产网段隔离保证，所以这种模式其实用得并不多。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1559574783,"ip_address":"","comment_id":100420,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100007001,"comment_content":"client secret 的主要有哪些应用场景，在哪些场景是下是必须的或推荐使用的，哪些场景下可选的？","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452539,"discussion_content":"Client Credentials Grant是机器对机器调用的场景，没有人参与的，比如某个job任务要定期调用某个服务，这个动作是异步周期执行，没有人参与，如果安全要求严格，那么可以考虑这种客户端模式。不过，实际企业中，机器间调用一般可以直接调用，安全性通过生产网段隔离保证，所以这种模式其实用得并不多。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559574783,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68479,"user_name":"念","can_delete":false,"product_type":"c3","uid":1113818,"ip_address":"","ucode":"866A800D49C498","user_header":"https://static001.geekbang.org/account/avatar/00/10/fe/da/01cfbdc6.jpg","comment_is_top":false,"comment_ctime":1550507942,"is_pvip":false,"replies":[{"id":24400,"content":"如果是使用简化模式或者用户名密码模式的单页应用，token是可以存在浏览器cookie中的，这种方式安全性低，一般只用在安全不严格场合。如果是授权码模式的Web应用，则token只会在服务器之间流转，不会跑到浏览器中。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1550577476,"ip_address":"","comment_id":68479,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100007001,"comment_content":"token保存在cookie中后不算在浏览器中吗老师，有点不太理解token只在服务器间传递这个概念","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439698,"discussion_content":"如果是使用简化模式或者用户名密码模式的单页应用，token是可以存在浏览器cookie中的，这种方式安全性低，一般只用在安全不严格场合。如果是授权码模式的Web应用，则token只会在服务器之间流转，不会跑到浏览器中。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550577476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49341,"user_name":"王盛武","can_delete":false,"product_type":"c3","uid":1182516,"ip_address":"","ucode":"DE7EF246D3DCE8","user_header":"https://static001.geekbang.org/account/avatar/00/12/0b/34/f41d73a4.jpg","comment_is_top":false,"comment_ctime":1544668152,"is_pvip":false,"replies":[{"id":17794,"content":"用户名密码模式常用在第一方无线native应用场景中，“在相同设备上”的设备可简单理解为比如在手机等设备上，这时资源拥有者持有手机，客户（无线）应用也安装在手机设备上。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1544705134,"ip_address":"","comment_id":49341,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100007001,"comment_content":"“在相同设备上”，这个“设备”是指什么？\n是手机上的APP？ 还是一台资源服务器？ 还是一个Web网页？","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432582,"discussion_content":"用户名密码模式常用在第一方无线native应用场景中，“在相同设备上”的设备可简单理解为比如在手机等设备上，这时资源拥有者持有手机，客户（无线）应用也安装在手机设备上。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544705134,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37469,"user_name":"immacoto","can_delete":false,"product_type":"c3","uid":1277065,"ip_address":"","ucode":"74B630ACF010AC","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL4ddbmUZoV5PJpcFUictkatsibUptsF7L4qaTupQ2S25dazJFnslvDcpmzia1EYEBiandgHwzs7jC6yQ/132","comment_is_top":false,"comment_ctime":1541598594,"is_pvip":false,"replies":[{"id":13628,"content":"在授权码模式下，浏览器，客户端（一般是web app），授权服务器和资源服务器是4个不同概念。流程最后客户端会去授权服务器获取令牌，可以存在db或redis等存储中。令牌不会经过去浏览器。可参考lab02。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1541765513,"ip_address":"","comment_id":37469,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100007001,"comment_content":"请问老师 在授权码的情况下 令牌不会流经客户端浏览器 客户端像资源服务器发送授权码 资源服务器与认证服务器交互换取令牌然后访问资源\n但是连续两次从客户端访问资源浏览器的时候 是什么流程呢 如果不是每次都换取令牌的话 令牌会存在哪里呢 如果是以前的有态服务 令牌或许可以保存在会话里（session）但是如果是无态的是否还是要保存在客户端呢 这又与令牌不停留客户端矛盾了 真想不通 请老师点播下 谢谢","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428354,"discussion_content":"在授权码模式下，浏览器，客户端（一般是web app），授权服务器和资源服务器是4个不同概念。流程最后客户端会去授权服务器获取令牌，可以存在db或redis等存储中。令牌不会经过去浏览器。可参考lab02。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541765513,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":31099,"user_name":"卡西米","can_delete":false,"product_type":"c3","uid":1091178,"ip_address":"","ucode":"0E7436B2CE9BE9","user_header":"https://static001.geekbang.org/account/avatar/00/10/a6/6a/d5cbc4e9.jpg","comment_is_top":false,"comment_ctime":1539089541,"is_pvip":false,"replies":[{"id":11722,"content":"谢谢支持🌹","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1539514388,"ip_address":"","comment_id":31099,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100007001,"comment_content":"写的不错","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426230,"discussion_content":"谢谢支持🌹","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539514388,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":24377,"user_name":"。。。。","can_delete":false,"product_type":"c3","uid":1107784,"ip_address":"","ucode":"0163FD085D4293","user_header":"https://static001.geekbang.org/account/avatar/00/10/e7/48/df149c8d.jpg","comment_is_top":false,"comment_ctime":1536935093,"is_pvip":false,"replies":[{"id":9645,"content":"一般授权服务器（比如spring security oauth2和keycloak等）都支持典型的4种oauth2 flow，你根据应用场景选择接入即可。授权码主要用于webapp和第三方原生app。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1537681314,"ip_address":"","comment_id":24377,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100007001,"comment_content":"请问既有app也有单页面，那是要开发两套一个简易一个授权码模式吗？不能直接用一种授权码模式吗？","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423960,"discussion_content":"一般授权服务器（比如spring security oauth2和keycloak等）都支持典型的4种oauth2 flow，你根据应用场景选择接入即可。授权码主要用于webapp和第三方原生app。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537681314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12382,"user_name":"zhaoni","can_delete":false,"product_type":"c3","uid":1052158,"ip_address":"","ucode":"F317ECD6380984","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqT1ykjFve5LCsFvegqLb8MKrf6ASApsOgm8nRb5icDE7MgzKbia0zUQkxe44tKvpCwQ65QuHo4NVoQ/132","comment_is_top":false,"comment_ctime":1528789009,"is_pvip":false,"replies":[{"id":4132,"content":"机器那个没有resource owner也就是人的参与，机器自动直接获取token，web服务端应用有人参与。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1528905640,"ip_address":"","comment_id":12382,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100007001,"comment_content":"波波老师，请问图中机器的定义是什么，是否指直接由服务端发起请求，拿到accesstoken的机器？和web服务端应用的区别是什么？感觉机器和web服务端应用貌似是同一个概念，请教了。","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419237,"discussion_content":"机器那个没有resource owner也就是人的参与，机器自动直接获取token，web服务端应用有人参与。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528905640,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":10757,"user_name":"Asanz","can_delete":false,"product_type":"c3","uid":1005200,"ip_address":"","ucode":"430AB7ED59EE3F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/90/be01bb8d.jpg","comment_is_top":false,"comment_ctime":1527688358,"is_pvip":false,"replies":[{"id":3660,"content":"令牌只在授权服务器和Web服务器之间传递，不会跑到用户端浏览器中","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1528129594,"ip_address":"","comment_id":10757,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100007001,"comment_content":"授权码模式中“令牌不会传递经过user-agent”作何理解？","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418589,"discussion_content":"令牌只在授权服务器和Web服务器之间传递，不会跑到用户端浏览器中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528129594,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":10289,"user_name":"bryan","can_delete":false,"product_type":"c3","uid":1127233,"ip_address":"","ucode":"AC6688A8B78DEF","user_header":"https://static001.geekbang.org/account/avatar/00/11/33/41/c8c0c373.jpg","comment_is_top":false,"comment_ctime":1527439371,"is_pvip":false,"replies":[{"id":3365,"content":"web服务器端应用比方说就是我们常见的java或.net开发的MVC应用，和单页应用不同，web mvc应用是有服务器端展示和业务逻辑的。电商后台web管理系统应该算（只要不是单页应用），如果要访问内部API且内部有OAUTH认证授权服务的话，建议用标准授权码模式。当然视具体情况，企业内部如果安全不严格的话用简化模式或密码模式，甚至不走OAUTH直连API也OK。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1527610588,"ip_address":"","comment_id":10289,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100007001,"comment_content":"请问下杨老师，web服务器端应用指的是哪些？电商的后台web管理系统是web服务器端应用么？也是用授权码模式么？","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418426,"discussion_content":"web服务器端应用比方说就是我们常见的java或.net开发的MVC应用，和单页应用不同，web mvc应用是有服务器端展示和业务逻辑的。电商后台web管理系统应该算（只要不是单页应用），如果要访问内部API且内部有OAUTH认证授权服务的话，建议用标准授权码模式。当然视具体情况，企业内部如果安全不严格的话用简化模式或密码模式，甚至不走OAUTH直连API也OK。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527610588,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9342,"user_name":"马里奥的马里奥","can_delete":false,"product_type":"c3","uid":1048423,"ip_address":"","ucode":"6848D9E82B58E3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ff/67/6ffe3a52.jpg","comment_is_top":false,"comment_ctime":1526802624,"is_pvip":false,"replies":[{"id":2850,"content":"一个案例，如果企业内部自建docker镜像仓库，那么docker client可以使用客户凭证方式获取令牌去访问镜像仓库。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1526912730,"ip_address":"","comment_id":9342,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100007001,"comment_content":"客户端凭证能不能详细举个例子，谢谢老师","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418035,"discussion_content":"一个案例，如果企业内部自建docker镜像仓库，那么docker client可以使用客户凭证方式获取令牌去访问镜像仓库。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526912730,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":8442,"user_name":"fomy","can_delete":false,"product_type":"c3","uid":1125834,"ip_address":"","ucode":"CD87EA03B1F327","user_header":"https://static001.geekbang.org/account/avatar/00/11/2d/ca/02b0e397.jpg","comment_is_top":false,"comment_ctime":1526218710,"is_pvip":false,"replies":[{"id":2751,"content":"可以简单认为是一个概念，资源拥有者是OAuth的术语，假设极客时间开发的app可以支持微信联合登录，你在微信上有用户数据（资源），你就是资源拥有者，可以授权极客时间app去访问你在微信上的数据（联合登录）。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1526652102,"ip_address":"","comment_id":8442,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100007001,"comment_content":"资源拥有者和用户不是同一个概念吗？能举个例子说明一下吗","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417721,"discussion_content":"可以简单认为是一个概念，资源拥有者是OAuth的术语，假设极客时间开发的app可以支持微信联合登录，你在微信上有用户数据（资源），你就是资源拥有者，可以授权极客时间app去访问你在微信上的数据（联合登录）。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526652102,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":224936,"user_name":"李胜东","can_delete":false,"product_type":"c3","uid":1355618,"ip_address":"","ucode":"81EFAFAAE33E3D","user_header":"https://static001.geekbang.org/account/avatar/00/14/af/62/2d04bb98.jpg","comment_is_top":false,"comment_ctime":1591596958,"is_pvip":false,"replies":[{"id":83125,"content":"国内用阿里开源的Seata(https:&#47;&#47;github.com&#47;seata&#47;seata)比较多，主要用它的自动事务AT模式。\n\n不过我个人建议考虑Uber开源的Cadence(https:&#47;&#47;github.com&#47;uber&#47;cadence)，是一个微服务编排引擎，能比较完美地解决分布式事务的问题，不过国内还没用起来，如果你能看懂它，建议尝试。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1591803930,"ip_address":"","comment_id":224936,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100007001,"comment_content":"杨老师，Spring Cloud的分布式事务组件业界使用最多的是什么呢？","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497657,"discussion_content":"国内用阿里开源的Seata(https://github.com/seata/seata)比较多，主要用它的自动事务AT模式。\n\n不过我个人建议考虑Uber开源的Cadence(https://github.com/uber/cadence)，是一个微服务编排引擎，能比较完美地解决分布式事务的问题，不过国内还没用起来，如果你能看懂它，建议尝试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591803930,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":202264,"user_name":"Siping","can_delete":false,"product_type":"c3","uid":1487971,"ip_address":"","ucode":"48E685333C663D","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/63/21902253.jpg","comment_is_top":false,"comment_ctime":1585948620,"is_pvip":false,"replies":[{"id":75957,"content":"加油！","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1586171960,"ip_address":"","comment_id":202264,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100007001,"comment_content":"挺复杂，以前一直没定心看完。老师讲得很好","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490543,"discussion_content":"加油！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586171960,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":197671,"user_name":"　　　　　　　鸟人","can_delete":false,"product_type":"c3","uid":1035165,"ip_address":"","ucode":"E504B22F336035","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cb/9d/2bc85843.jpg","comment_is_top":false,"comment_ctime":1585390889,"is_pvip":false,"replies":[{"id":75267,"content":"看具体的应用场景，例如如果某公司A开放API，B公司想利用A的开放API来开发应用，这个属于第三方应用：\n1. 如果开发的是Web服务器应用或者无线原生应用，那么就用授权码模式；\n2. 如果开发的是单页应用，那么就用简化模式。\n\n关键是不能让第三方应用有机会拿到用户的密码，否则用户密码有泄露危险。登录必须导向到A公司的统一登录界面，第三方应用只能拿到和通过令牌和A公司的API进行交互。\n","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1585749424,"ip_address":"","comment_id":197671,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100007001,"comment_content":"机器和授权码 应用于后端？密码和简化应用于前端？","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489576,"discussion_content":"看具体的应用场景，例如如果某公司A开放API，B公司想利用A的开放API来开发应用，这个属于第三方应用：\n1. 如果开发的是Web服务器应用或者无线原生应用，那么就用授权码模式；\n2. 如果开发的是单页应用，那么就用简化模式。\n\n关键是不能让第三方应用有机会拿到用户的密码，否则用户密码有泄露危险。登录必须导向到A公司的统一登录界面，第三方应用只能拿到和通过令牌和A公司的API进行交互。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585749424,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":197650,"user_name":"　　　　　　　鸟人","can_delete":false,"product_type":"c3","uid":1035165,"ip_address":"","ucode":"E504B22F336035","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cb/9d/2bc85843.jpg","comment_is_top":false,"comment_ctime":1585389718,"is_pvip":false,"replies":[{"id":75261,"content":"oauth有跨站点请求伪造csrf问题，可以通过state参数来应对这个问题，spring security oauth2支持，课程后面有一个案例演示csrf问题。\n\n如果token放在cookie中传递，潜在会有xss跨站点脚本攻击问题，简单可以设置HttpOnly应对。\n\n","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1585748826,"ip_address":"","comment_id":197650,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100007001,"comment_content":"oauth2实现中会出现什么安全问题么？比如sql  csrf  xss  之类","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489571,"discussion_content":"oauth有跨站点请求伪造csrf问题，可以通过state参数来应对这个问题，spring security oauth2支持，课程后面有一个案例演示csrf问题。\n\n如果token放在cookie中传递，潜在会有xss跨站点脚本攻击问题，简单可以设置HttpOnly应对。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585748826,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1035165,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/cb/9d/2bc85843.jpg","nickname":"　　　　　　　鸟人","note":"","ucode":"E504B22F336035","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":219647,"discussion_content":"明白了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585791719,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180110,"user_name":"张永峰","can_delete":false,"product_type":"c3","uid":1106891,"ip_address":"","ucode":"209823D8151A3D","user_header":"https://static001.geekbang.org/account/avatar/00/10/e3/cb/d13986f7.jpg","comment_is_top":false,"comment_ctime":1582189719,"is_pvip":false,"replies":[{"id":70176,"content":"根据RFC6749和业界做法，第三方的纯SPA一般用Implicit简化模式的。简化模式肯定不如授权码模式安全，可以考虑SPA + 后端Web混合的做法，这样可以用授权码模式。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1582432883,"ip_address":"","comment_id":180110,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100007001,"comment_content":"为何选型要区分原生App和SPA呢？第三方的SPA也可以使用 Auth Code 的模式吧？","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484530,"discussion_content":"根据RFC6749和业界做法，第三方的纯SPA一般用Implicit简化模式的。简化模式肯定不如授权码模式安全，可以考虑SPA + 后端Web混合的做法，这样可以用授权码模式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582432883,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":283130,"user_name":"胡永胜","can_delete":false,"product_type":"c3","uid":2450023,"ip_address":"","ucode":"054B1CB3B1D27B","user_header":"","comment_is_top":false,"comment_ctime":1615562162,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100007001,"comment_content":"四种典型模式：授权码，简化，密码，客户端","like_count":0},{"had_liked":false,"id":197644,"user_name":"　　　　　　　鸟人","can_delete":false,"product_type":"c3","uid":1035165,"ip_address":"","ucode":"E504B22F336035","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cb/9d/2bc85843.jpg","comment_is_top":false,"comment_ctime":1585389474,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100007001,"comment_content":"感觉第一和第二种就是差授权码 第三种更像传统的授权 ","like_count":0}]}