{"id":625574,"title":"104｜再回首：“Web开发”单元小结","content":"<p>你好，我是尹会生。</p><p>这一章，我为你介绍了Python作为Web服务器时，是如何利用Django框架快速实现CMS系统的。在Python的各种应用场景中，Web服务器场景，称得上是Python最主要的应用之一。因为Web服务是目前提供业务最主要的途径，且Python支持强大的框架，所以很多非电商、抢购等密集请求、响应时间要求不严格的业务，都可以采用Python作为开发语言。</p><p>如果你使用过其他语言开发Web服务程序，你一定会感叹Python开发Web服务的简便，相同的需求，开发时间至少能减少30%。之所以能够节省这么多开发时间，除了Python本身外，框架也有很大功劳。那么这一讲我想让你在掌握利用Django Admin开发CMS程序的方法之后，对Django框架有一个更深刻的认识，让你未来开发更复杂功能时，更加得心应手。</p><h3>MTV开发模式</h3><p>除了非常好用的Admin模块经常被我们用于开发CMS系统外，我们还会用Django来开发一些内部系统，比如流程系统、自动化测试系统、自动化运维系统、展示看板系统等，这些系统由于结构不同，都不再适合继续采用Admin开发。这时，我们需要遵循另一种开发模式——MTV模式，在Django框架基础上重新设计自己的系统。</p>","comments":[{"had_liked":false,"id":385270,"user_name":"Geek_631607","can_delete":false,"product_type":"c3","uid":3789991,"ip_address":"广东","ucode":"EAF874838F0BE4","user_header":"","comment_is_top":false,"comment_ctime":1702369241,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"FastAPI 是一个现代的、快速的（高性能）的 Web 框架，用于构建 APIs，它基于 Python 3.6 类型提示。以下是 FastAPI 在编写 Restful API 方面相比 Django 和 Flask 的一些优点¹²⁴：\n\n1. **性能**：FastAPI 的性能接近于 NodeJS 和 Go，远超过传统的 Python 框架 Django 和 Flask。这是因为 FastAPI 基于 Starlette（用于 Web 部分）和 Pydantic（用于数据部分），这两个组件都是性能最优的。\n\n2. **易用性和灵活性**：FastAPI 提供了非常直观和易于使用的 API，同时保持了非常高的可定制性和可扩展性。这使得 FastAPI 可以适应各种复杂的需求和数据操作。\n\n3. **现代性**：FastAPI 支持现代的异步编程模式，允许你使用 `async` 和 `await` 关键字。这使得你可以编写高效的、非阻塞的代码，特别是在处理大量并发请求时，这是 Django 和 Flask 所不能提供的。\n\n4. **数据验证**：FastAPI 使用 Python 类型提示和 Pydantic 模型来自动验证请求和响应数据，生成错误信息，并生成 JSON Schema 定义。这使得你可以更容易地处理数据，并减少错误。\n\n5. **自动生成文档**：FastAPI 可以自动为你的 API 生成交互式 API 文档。这使得你可以更容易地测试你的 API，并提供给其他开发者使用。\n\n以上就是 FastAPI 在编写 Restful API 方面的一些优点。希望这个答案对你有所帮助！\n\n源: 与必应的对话， 2023&#47;12&#47;12\n(1) Choosing between Django, Flask, and FastAPI - Section. https:&#47;&#47;www.section.io&#47;engineering-education&#47;choosing-between-django-flask-and-fastapi&#47;.\n(2) Django vs Fast API: A Detailed Comparison - Medium. https:&#47;&#47;medium.com&#47;@ShortHills_Tech&#47;django-vs-fast-api-a-detailed-comparison-df8d00f3c3b2.\n(3) Django vs. Flask vs. FastAPI: Choosing the Right Python Web Framework. https:&#47;&#47;www.mind2i.com&#47;blogs&#47;a-comprehensive-comparison-of-django-flask-and-fastapi-choosing-the-right-python-web-framework-for-your-project-2023-08-03.\n(4) （2022年10月）新项目选择Django还是FastAPI？ - 知乎. https:&#47;&#47;www.zhihu.com&#47;question&#47;555767637.\n(5) undefined. https:&#47;&#47;docs.djangoproject.com&#47;en&#47;4.0&#47;.","like_count":1},{"had_liked":false,"id":367510,"user_name":"Cy23","can_delete":false,"product_type":"c3","uid":1591293,"ip_address":"辽宁","ucode":"8DC561C5151758","user_header":"https://static001.geekbang.org/account/avatar/00/18/47/fd/895f0c27.jpg","comment_is_top":false,"comment_ctime":1675296830,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"FastAPI\n1、自动生成文档：FastAPI 默认自带两个交互式 API 文档\n2、验证：校验大部分（甚至所有？）的 Python 数据类型,校验外来类\n3、安全性及身份验证：HTTP 基本认证、OAuth2、API 密钥\n4、依赖注入：非常强大的依赖注入系统\n5、无限制&quot;插件&quot;：你可以用和路径操作相同的结构和语法，在两行代码中为你的应用创建一个“插件”\n6、测试：100% 测试覆盖。代码库100% 类型注释。用于生产应用。","like_count":1},{"had_liked":false,"id":392049,"user_name":"710526","can_delete":false,"product_type":"c3","uid":3754598,"ip_address":"上海","ucode":"73B310A1D13362","user_header":"","comment_is_top":false,"comment_ctime":1719823739,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"FastAPI\n1、自动生成文档：FastAPI 默认自带两个交互式 API 文档\n2、验证：校验大部分（甚至所有？）的 Python 数据类型,校验外来类\n3、安全性及身份验证：HTTP 基本认证、OAuth2、API 密钥\n4、依赖注入：非常强大的依赖注入系统\n5、无限制&quot;插件&quot;：你可以用和路径操作相同的结构和语法，在两行代码中为你的应用创建一个“插件”\n6、测试：100% 测试覆盖。代码库100% 类型注释。用于生产应用。","like_count":0}]}