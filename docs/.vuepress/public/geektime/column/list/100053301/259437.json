{"id":259437,"title":"12 | 问题集锦：详解正则常见问题及解决方案","content":"<p>你好，我是伟忠。今天我来给你讲一讲，使用正则处理一些常见问题的方法。</p><h2><strong>问题处理思路</strong></h2><p>在讲解具体的问题前，我先来说一下使用正则处理问题的基本思路。有一些方法比较固定，比如将问题分解成多个小问题，每个小问题见招拆招：某个位置上可能有多个字符的话，就⽤字符组。某个位置上有多个字符串的话，就⽤多选结构。出现的次数不确定的话，就⽤量词。对出现的位置有要求的话，就⽤锚点锁定位置。</p><p>在正则中比较难的是某些字符不能出现，这个情况又可以进一步分为组成中不能出现，和要查找的内容前后不能出现。后一种用环视来解决就可以了。我们主要说一下第一种。</p><p>如果是要查找的内容中不能出现某些字符，这种情况比较简单，可以通过使用中括号来排除字符组，比如非元音字母可以使用 <code>[^aeiou]</code>来表示。</p><p>如果是内容中不能出现某个子串，比如要求密码是6位，且不能有连续两个数字出现。假设密码允许的范围是 \\w，你应该可以想到使用 \\w{6} 来表示 6 位密码，但如果里面不能有连续两个数字的话，该如何限制呢？这个可以环视来解决，就是每个字符的后面都不能是两个数字（要注意开头也不能是 \\d\\d），下面是使用 Python3语言测试的示例。</p><pre><code>&gt;&gt;&gt; import re\n&gt;&gt;&gt; re.match(r'^((?!\\d\\d)\\w){6}$', '11abcd')  # 不能匹配上\n# 提示 (?!\\d\\d) 代表右边不能是两个数字，但它左边没有正则，即为空字符串\n\n&gt;&gt;&gt; re.match(r'^((?!\\d\\d)\\w){6}$', '1a2b3c')  # 能匹配上\n&lt;re.Match object; span=(0, 6), match='1a2b3c'&gt;\n\n&gt;&gt;&gt; re.match(r'^(\\w(?!\\d\\d)){6}$', '11abcd')  # 错误正则示范                                                                \n&lt;re.Match object; span=(0, 6), match='11abcd'&gt;\n\n</code></pre><p>在写完正则后，我们可以通过一些工具去调试，先要确保正则满足功能需求，再看一下有没有性能问题， 如果功能不正确，性能考虑再多其实也没用。</p><!-- [[[read_end]]] --><h2>常见问题及解决方案</h2><ol>\n<li>\n<h3><strong> 匹配数字</strong></h3>\n</li>\n</ol><p>数字的匹配比较简单，通过我们学习的字符组，量词等就可以轻松解决。</p><ul>\n<li>数字在正则中可以使用 \\d 或 [0-9] 来表示。</li>\n<li>如果是连续的多个数字，可以使用 \\d+ 或 [0-9]+。</li>\n<li>如果 n 位数据，可以使用 \\d{n}。</li>\n<li>如果是至少 n 位数据，可以使用 \\d{n,}。</li>\n<li>如果是 m-n 位数字，可以使用 \\d{m,n}。</li>\n</ul><ol start=\"2\">\n<li>\n<h3><strong>匹配正数、负数和小数</strong></h3>\n</li>\n</ol><p>如果希望正则能匹配到比如 3，3.14，-3.3，+2.7 等数字，需要注意的是，开头的正负符号可能有，也可能没有，所以可以使用 [-+]? 来表示，小数点和后面的内容也不一定会有，所以可以使用 <code>(?:\\.\\d+)?</code> 来表示，因此匹配正数、负数和小数的正则可以写成 <code>[-+]?\\d+(?:\\.\\d+)?</code>。</p><p><img src=\"https://static001.geekbang.org/resource/image/b8/73/b8b0f61dfaf711ffdaa78cd709827573.png?wh=1070*702\" alt=\"\"></p><p>非负整数，包含 0 和 正整数，可以表示成<code>[1-9]\\d*|0</code>。</p><p>非正整数，包含 0 和 负整数，可以表示成<code>-[1-9]\\d*|0</code>。</p><ol start=\"3\">\n<li>\n<h3><strong>浮点数</strong></h3>\n</li>\n</ol><p>这个问题你可能觉得比较简单，其中表示正负的符号和小数点可能有，也可能没有，直接用  <strong><code>[-+]?\\d+(?:\\.\\d+)?</code></strong> 来表示。</p><p>如果我们考虑 .5 和 +.5 这样的写法，但一般不会有 -.5 这样的写法。正则又如何写呢？</p><p>我们可以把问题拆解，浮点数分为符号位、整数部分、小数点和小数部分，这些部分都有可能不存在，如果我们每个部分都加个问号，这样整个表达式可以匹配上空。</p><p>根据上面的提示，负号的时候整数部分不能没有，而正数的时候，整数部分可以没有，所以正则你可以将正负两种情况拆开，使用多选结构写成 <strong><code>-?\\d+(?:\\.\\d+)?|\\+?(?:\\d+(?:\\.\\d+)?|\\.\\d+)</code></strong>（<a href=\"https://regex101.com/r/bSpQ1a/1\">示例</a>）。</p><p>这个可以拆分成两个问题：</p><p>负数浮点数表示：<strong><code>-\\d+(?:\\.\\d+)?</code>。</strong></p><p>正数浮点数表示：<strong><code>\\+?(?:\\d+(?:\\.\\d+)?|\\.\\d+)</code>。</strong></p><ol start=\"4\">\n<li>\n<h3><strong>十六进制数</strong></h3>\n</li>\n</ol><p>十六进制的数字除了有0-9之外，还会有 a-f（或A-F） 代表 10 到 15 这6个数字，所以正则可以写成 <code>[0-9A-Fa-f]+</code>。</p><ol start=\"5\">\n<li>\n<h3><strong>手机号码</strong></h3>\n</li>\n</ol><p>手机号应该是比较常见的，手机号段比较复杂，如果要兼容所有的号段并不容易。目前来看，前四位是有一些限制，甚至1740 和 1741 限制了前5位号段。</p><p>我们可以简单地使用字符组和多选分支，来准确地匹配手机号段。如果只限制前2位，可以表示成 <code>1[3-9]\\d{9}</code>，如果想再精确些，限制到前三位，比如使用<code>1(?:3\\d|4[5-9]|5[0-35-9]|6[2567]|7[0-8]|8\\d|9[1389])\\d{8}</code>来表示。如果想精确到4位，甚至5位，可以根据公开的号段信息自己来写一下，但要注意的是，越是精确，只要有新的号段，你就得改这个正则，维护起来会比较麻烦。另外，在实际运用的时候，你可能还要考虑一下有一些号码了+86或0086之类的前缀的情况。</p><p>手机号段的正则写起来其实写起来并不难，但麻烦的是后期的维护成本比较高，我之前就遇到过这种情况，买了一个188的移动号码，有不少系统在这个号段开放了挺长时间之后，还认为这个号段不合法。</p><p>目前公开的手机号段（<a href=\"https://www.cnblogs.com/zengxiangzhan/p/phone.html\">图片来源</a>）。</p><p><img src=\"https://static001.geekbang.org/resource/image/4a/64/4a982267e90cf39bb3792af152692e64.png?wh=542*522\" alt=\"\"></p><ol start=\"6\">\n<li>\n<h3><strong>身份证号码</strong></h3>\n</li>\n</ol><p>我国的身份证号码是分两代的，第一代是15位，第二代是18位。如果是18位，最后一位可以是X（或x），两代开头都不能是 0，根据规则，你应该能很容易写出相应的正则，第一代可以用 [1-9]\\d{14} 来表示，第二代比第一代多3位数据，可以使用量词0到1次，即写成</p><p><code>[1-9]\\d{14}(\\d\\d[0-9Xx])?</code>。</p><ol start=\"7\">\n<li>\n<h3><strong>邮政编码</strong></h3>\n</li>\n</ol><p>邮编一般为6位数字，比较简单，可以写成 <code>\\d{6}</code>，之前我们也提到过，6位数字在其它情况下出现可能性也非常大，比如手机号的一部分，身份证号的一部分，所以如果是数据提取，一般需要添加断言，即写成 <code>(?&lt;!\\d)\\d{6}(?!\\d)</code>。</p><ol start=\"8\">\n<li>\n<h3><strong>腾讯QQ号码</strong></h3>\n</li>\n</ol><p>目前QQ号不能以0开头，最长的有10位，最短的从 10000（5位）开始。从规则上我们可以得知，首位是1-9，后面跟着是4到9位的数字，即可以使用 <strong>[1-9][0-9]{4,9}</strong> 来表示。</p><ol start=\"9\">\n<li>\n<h3><strong>中文字符</strong></h3>\n</li>\n</ol><p>中文属于多字节Unicode字符，之前我们讲过比如通过 Unicode 属性，但有一些语言是不支持这种属性的，可以通过另外一个办法，就是码值的范围，中文的范围是 4E00 - 9FFF 之间，这样可以覆盖日常使用大多数情况。</p><p>不同的语言是表示方式有一些差异，比如在 Python，Java，JavaScript 中，Unicode 可以写成 <code>\\u码值</code> 来表示，即匹配中文的正则可以写成 [\\u4E00-\\u9FFF]，如果在 PHP 中使用，Unicode 就需要写成 <strong>\\u{码值}</strong> 的样式。下面是在 Python3 语言中测试的示例，你可以参考一下。</p><pre><code># 测试环境，Python3\n&gt;&gt;&gt; import re\n&gt;&gt;&gt; reg = re.compile(r'[\\u4E00-\\u9FFF]')\n&gt;&gt;&gt; reg.findall(&quot;和伟忠一起学正则regex&quot;)\n['和', '伟', '忠', '一', '起', '学', '正', '则']\n</code></pre><ol start=\"10\">\n<li>\n<h3><strong>IPv4地址</strong></h3>\n</li>\n</ol><p>IPv4 地址通常表示成 27.86.1.226 的样式，4个数字用点隔开，每一位范围是 0-255，比如从日志中提取出IP，如果不要求那么精确，一般使用 <code>\\d{1,3}(\\.\\d{1,3}){3}</code>就够了，需要注意点号需要转义。</p><p><img src=\"https://static001.geekbang.org/resource/image/ef/49/ef7a165253a7b4db82c6578e039a9849.png?wh=1072*924\" alt=\"\"></p><p>如果我们想更精确地匹配，可以针对一到三位数分别考虑，一位数时可以表示成 <code>0{0,2}\\d</code>，两位数时可以表示成 <code>0?[1-9]\\d</code>，三位数时可以表示成 <code>1\\d\\d|2[0-4]\\d|25[0-5]</code>，使用多选分支结构把他们写到一起，就是 <code>0{0,2}\\d|0?[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]</code>这样。</p><p>这是表示出了 IPv4 地址中的一位（正则假设是 X），我们可以把 IPv4 表示成X.X.X.X，可以使用量词，写成 (?:X.){3}X 或 X(?:.X){3}，由于 X 本身比较复杂，里面有多选分支结构，所以需要把它加上括号，所以 IPv4 的正则应该可以写成<br>\n<code>(?:0{0,2}\\d|0?[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])(?:\\.0{0,2}\\d|0?[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]){3}</code>。</p><p>你以为这么写就对了么，如果你测试一下就发现，匹配行为很奇怪。（<a href=\"https://regex101.com/r/e4xRLE/1\">示例</a>）</p><p><img src=\"https://static001.geekbang.org/resource/image/c8/d6/c8eb8d71db6836ea24c875816122b4d6.png?wh=1068*974\" alt=\"\"></p><p>看到这个结果，你可能觉得太难了，不要担心，更不要放弃。其实我一开始也觉得这么写就可以了，我也需要测试，如果不符合预期，那就找到原因不断完善。</p><p>我们根据输出结果的表现，分析一下原因。原因主要有两点，都和多选分支结构有关系。我们想的是所有的一到三位数字前面都有一个点，重复三次，但点号和 0{0,2}\\d 写到一起，意思是一位数字前面有点，两位和三位数前面没有点，所以需要使用括号把点挪出去，最终写成<code>(?:0{0,2}\\d|0?[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])(?:\\.(?:0{0,2}\\d|0?[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])){3}</code>。<br>\n但经过测试，你会发现还是有问题，最后一个数字只匹配上了一位。（<a href=\"https://regex101.com/r/e4xRLE/2\">示例</a>）</p><p><img src=\"https://static001.geekbang.org/resource/image/d8/1b/d85fd1dca6e2fee635303ec0c986001b.png?wh=1074*996\" alt=\"\"></p><p>上一讲正则匹配原理中，我们讲解了NFA引擎在匹配多分支选择结构的时候，优先匹配最左边的，所以找到了一位数符合要求时，它就”急于“报告，并没有找出最长且符合要求的结果，这就要求我们在写多分支选择结构的时候，要把长的分支放左边，这样就可以解决问题了，即正则写成<code>(?:1\\d\\d|2[0-4]\\d|25[0-5]|0?[1-9]\\d|0{0,2}\\d)(?:\\.(?:1\\d\\d|2[0-4]\\d|25[0-5]|0?[1-9]\\d|0{0,2}\\d)){3}</code>。</p><p><img src=\"https://static001.geekbang.org/resource/image/ed/93/ed8090a3e659bea900082334d378a293.png?wh=1070*998\" alt=\"\"></p><p>在这个案例里，我们通过一步步推导，得到最终的答案。其实是想让你明白，你在写正则的时候，需要以什么样的分析思路来思考，最终如何解决问题，复杂的正则也很难一下子写出来，需要写完之后进行测试，在发现不符合预期后，不断进行完善。</p><p>在这里我还是想说一下，如果只是验证是不是合法的 IPv4 地址，可以直接使用点号切割，验证一下是不是四个部分，每个部分是不是在 0-255 之间就可以了，比使用正则来校验要简单很多，而且不容易出错。总之正则不是解决问题的唯一方法，我们要在合适的时候使用它，而不是说能用正则的都要用正则来解决。</p><ol start=\"11\">\n<li>\n<h3><strong>日期和时间</strong></h3>\n</li>\n</ol><p>假设日期格式是 yyyy-mm-dd，如果不那么严格，我们可以直接使用 \\d{4}-\\d{2}-\\d{2}。如果再精确一些，比如月份是 1-12，当为一位的时候，前面可能不带 0，可以写成 01 或 1，月份使用正则，可以表示成 <strong><code>1[0-2]|0?[1-9]</code></strong>，日可能是 1-31，可以表示成 <strong><code>[12]\\d|3[01]|0?[1-9]</code></strong>，这里需要注意的是 <strong><code>0?[1-9]</code></strong> 应该放在多选分支的最后面，因为放最前面，匹配上一位数字的时候就停止了（<a href=\"https://regex101.com/r/WZ0Pps/1\">示例</a>），正确的正则（<a href=\"https://regex101.com/r/WZ0Pps/2\">示例</a>）应该是 <code>\\d{4}-(?:1[0-2]|0?[1-9])-(?:[12]\\d|3[01]|0?[1-9])</code>。</p><p>时间格式比如是 23:34，如果是24小时制，小时是 0-23，分钟是 0-59，所以可以写成 <code>(?:2[0-3]|1\\d|0?\\d):(?:[1-5]\\d|0?\\d)</code>。12小时制的也是类似的，你可以自己想一想怎么写。</p><p>另外，日期中月份还有大小月的问题，比如2月闰年可以是29日，使用正则没法验证日期是不是正确的。我们也不应该使用正则来完成所有事情，而是只使用正则来限制具体的格式，比如四位数字，两位数字之类的，提取到之后，使用日期时间相关的函数进行转换，如果失败就证明不是合法的日期时间。</p><ol start=\"12\">\n<li>\n<h3><strong>邮箱</strong></h3>\n</li>\n</ol><pre><code>&gt; 邮箱示例：\n\n&gt; weizhong.tu2020@abc.com\n\n&gt; 12345@qq.com\n\n</code></pre><p>邮箱的组成是比较复杂的，格式是 用户名@主机名，用户名部分通常可以有英文字母，数字，下划线，点等组成，但其中点不能在开头，也不能重复出现。根据 <a href=\"https://www.ietf.org/rfc/rfc5322.txt\">RFC5322</a> 没有办法写出一个完美的正则，你可以参考一下<a href=\"http://emailregex.com/\">这个网站</a>。不过我们可以实现一些简体的版本，比如：<code>[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+</code>。</p><p>日常使用应该也够了。</p><ol start=\"13\">\n<li>\n<h3><strong>网页标签</strong></h3>\n</li>\n</ol><p>配对出现的标签，比如 title，一般网页标签不区分大小写，我们可以使用 <code>(?i)&lt;title&gt;.*?&lt;/title&gt;</code>来进行匹配。在提取引号里面的内容时，可以使用 <code>[^\"]+</code>，方括号里面的内容时，可以使用 <code>[^&gt;]+</code> 等方式。</p><p>我们通过一些常见的问题，逐步进行分析，讲解了正则表达式书写时的思路，和一些常见的错误。这些正则如果用于校验，还需要添加断言，比如 \\A 和 \\z（或\\Z），或 <code>^</code> 和 <code>$</code>。如果用于数据提取，还应当在首尾添加相应的断言。</p><h2>总结</h2><p>好了，今天的内容讲完了，我来带你总结回顾一下。</p><p>今天我们了解了下正则处理问题的基本思路，通常是将问题拆解成多个小问题，每个小问题见招拆招：某个位置上可能是多个单字符就⽤字符组，某个位置上可能是多个字符串就⽤多选结构，出现次数不确定就⽤量词，对出现的位置有要求就用断言。遇到问题，你遵循这些套路，写出正则其实并不难。</p><p>我们从一些日常的问题入手，详细地讲解了一些常见的案例，也讲解了可能会遇到的一些坑，比如在使用多选结构时要注意的问题，你在后续工作中要注意避开这些问题。</p><p>我在这里给你放了一张今天所讲内容的总结脑图。</p><p><img src=\"https://static001.geekbang.org/resource/image/a4/2d/a4977a437da588720ae2762604464e2d.png?wh=1308*1410\" alt=\"\"></p><h2>课后思考</h2><p>最后，我们来做一个小练习吧。你可以根据今天我们学习 IPv4 的方法，来写一下 IPv6 的正则表达式么？说一下你的分析思路和最终的答案，建议自己动手测试一下写出的正则。</p><pre><code>IPv6示例\nABCD:EF01:2345:6789:ABCD:EF01:2345:6789\n这种表示法中，每个X的前导0是可以省略的，例如：\n2001:0DB8:0000:0023:0008:0800:200C:417A\n上面的IPv6地址，可以表示成下面这样\n2001:DB8:0:23:8:800:200C:417A\n\n备注：这里不考虑0位压缩表示\n</code></pre><p>好，今天的课程就结束了，希望可以帮助到你，也希望你在下方的留言区和我参与讨论，并把文章分享给你的朋友或者同事，一起交流一下。</p>","neighbors":{"left":{"article_title":"11 | 如何理解正则的匹配原理以及优化原则？","id":258191},"right":{"article_title":"加餐 | 从编程语言的角度来理解正则表达式","id":256880}},"comments":[{"had_liked":false,"id":234065,"user_name":"好运来","can_delete":false,"product_type":"c1","uid":1113937,"ip_address":"","ucode":"F469ED6CEFEF30","user_header":"https://static001.geekbang.org/account/avatar/00/10/ff/51/9d5cfadd.jpg","comment_is_top":false,"comment_ctime":1594569751,"is_pvip":true,"replies":[{"id":"86827","content":"赞👍🏻","user_name":"作者回复","user_name_real":"伟忠","uid":"1112089","ctime":1594916980,"ip_address":"","comment_id":234065,"utype":1}],"discussion_count":7,"race_medal":1,"score":"27364373527","product_id":100053301,"comment_content":"在 https:&#47;&#47;regex101.com&#47; 网站上测试结果如下:<br>前导匹配正则表达式：<br>[0-9A-Fa-f]{4}(?:\\:(?:[0-9A-Fa-f]{4})){7}<br>省略前导0正则表达式：<br>(?:0|[1-9A-Fa-f][0-9A-Fa-f]{0,3})(?:\\:(?:0|[1-9A-Fa-f][0-9A-Fa-f]{0,3})){7}","like_count":6,"discussions":[{"author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501263,"discussion_content":"赞👍🏻","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594916980,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1701572,"avatar":"https://static001.geekbang.org/account/avatar/00/19/f6/c4/e14686d4.jpg","nickname":"shk1230","note":"","ucode":"9E39279C23FF8F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559232,"discussion_content":"print(re.match(r&#39;((?:[0-9A-Fa-f]{1,4}:){7}(?:[0-9A-Fa-f]){1,4})&#39;, &#39;ABCD:EF01:2345:6789:ABCD:EF01:2345:6789&#39;))","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648650938,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1172090,"avatar":"https://static001.geekbang.org/account/avatar/00/11/e2/7a/38a27e47.jpg","nickname":"蓦然回首","note":"","ucode":"B17658DCFE6402","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539961,"discussion_content":"这里有什么规则吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639900367,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1172090,"avatar":"https://static001.geekbang.org/account/avatar/00/11/e2/7a/38a27e47.jpg","nickname":"蓦然回首","note":"","ucode":"B17658DCFE6402","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539960,"discussion_content":"比如12|23","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639900321,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1172090,"avatar":"https://static001.geekbang.org/account/avatar/00/11/e2/7a/38a27e47.jpg","nickname":"蓦然回首","note":"","ucode":"B17658DCFE6402","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539959,"discussion_content":"(?:0|[1-9A-Fa-f][0-9A-Fa-f]{0,3})请教一下，这里多选结构|的右边为什么不是针对右边所有的字符","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639900305,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1907486,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/1b/1e/f5c16f7e.jpg","nickname":"单色","note":"","ucode":"A1DA6E497FD74C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369531,"discussion_content":"正则中冒号不是元字符，这里还需要转义吗？求答！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619066763,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1172090,"avatar":"https://static001.geekbang.org/account/avatar/00/11/e2/7a/38a27e47.jpg","nickname":"蓦然回首","note":"","ucode":"B17658DCFE6402","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1907486,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/1b/1e/f5c16f7e.jpg","nickname":"单色","note":"","ucode":"A1DA6E497FD74C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539957,"discussion_content":"只要在正则中有特殊含义的字符都要转义","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639899998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":369531,"ip_address":""},"score":539957,"extra":""}]}]},{"had_liked":false,"id":347672,"user_name":"LIN","can_delete":false,"product_type":"c1","uid":1176364,"ip_address":"","ucode":"67C6F439B3305C","user_header":"https://static001.geekbang.org/account/avatar/00/11/f3/2c/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1654281166,"is_pvip":true,"replies":[{"id":"126900","content":"看情况，有时候性能要求高还是要用","user_name":"作者回复","user_name_real":"编辑","uid":"1112089","ctime":1654936603,"ip_address":"","comment_id":347672,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5949248462","product_id":100053301,"comment_content":"为了正则的可读性, (?:) 子组感觉还是不使用好些","like_count":1,"discussions":[{"author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575570,"discussion_content":"看情况，有时候性能要求高还是要用","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1654936603,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1176364,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f3/2c/abb7bfe3.jpg","nickname":"LIN","note":"","ucode":"67C6F439B3305C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":575719,"discussion_content":"谢谢伟忠老师的回复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655051618,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":575570,"ip_address":""},"score":575719,"extra":""}]}]},{"had_liked":false,"id":268602,"user_name":"tgchj","can_delete":false,"product_type":"c1","uid":2304986,"ip_address":"","ucode":"718FF337877560","user_header":"","comment_is_top":false,"comment_ctime":1608270286,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5903237582","product_id":100053301,"comment_content":"(?i)[0-9a-f]{1,4}(?::[0-9a-f]{1,4}){7}","like_count":1},{"had_liked":false,"id":234930,"user_name":"我来也","can_delete":false,"product_type":"c1","uid":1205253,"ip_address":"","ucode":"773D6104F56767","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","comment_is_top":false,"comment_ctime":1594828022,"is_pvip":false,"replies":[{"id":"86705","content":"感谢指出，确实有问题，我来改一下","user_name":"作者回复","user_name_real":"伟忠","uid":"1112089","ctime":1594831940,"ip_address":"","comment_id":234930,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5889795318","product_id":100053301,"comment_content":"这不就是小抄么？😄<br><br>文中匹配ip地址时，匹配100-255时为什么是1\\d\\d|2[1-4]\\d|25[0-5] 而不是 1\\d\\d|2[0-4]\\d|25[0-5]<br><br>手机上不好验证，直接说了，还请同学指正。","like_count":1,"discussions":[{"author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501552,"discussion_content":"感谢指出，确实有问题，我来改一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594831940,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1488020,"avatar":"https://static001.geekbang.org/account/avatar/00/16/b4/94/2796de72.jpg","nickname":"追风筝的人","note":"","ucode":"2993D60F94C396","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":317341,"discussion_content":"这就是小抄鸭������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603535443,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233909,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1594516180,"is_pvip":true,"replies":[{"id":"86390","content":"就是这样的写法，记住就可以了，中括号第一个是脱字符就表示里面的都不能出现。<br>没有不是后面一个字符的，只有后面所有字符。<br><br>另外补充一下，其实这么做不够严谨，因为不是aeiou还可能是数字等其他的，这么做的前提是你知道都是字母。","user_name":"作者回复","user_name_real":"伟忠","uid":"1112089","ctime":1594604979,"ip_address":"","comment_id":233909,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5889483476","product_id":100053301,"comment_content":"[^aeiou] 有个问题是这样的： 对于这样的表达式， 是不能出现 aeiou， 这里为什么 ^ 针对的是 后面的所有字符？ 而不是一个后面的一个字符的， 这个一般根据什么判断的？","like_count":1,"discussions":[{"author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501213,"discussion_content":"就是这样的写法，记住就可以了，中括号第一个是脱字符就表示里面的都不能出现。\n没有不是后面一个字符的，只有后面所有字符。\n\n另外补充一下，其实这么做不够严谨，因为不是aeiou还可能是数字等其他的，这么做的前提是你知道都是字母。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594604979,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233419,"user_name":"Jock","can_delete":false,"product_type":"c1","uid":1236780,"ip_address":"","ucode":"2FF16F050C228F","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/2c/d2e97b6a.jpg","comment_is_top":false,"comment_ctime":1594311299,"is_pvip":false,"replies":[{"id":"86152","content":"点赞，感谢你的坚持和支持，😃","user_name":"作者回复","user_name_real":"伟忠","uid":"1112089","ctime":1594343963,"ip_address":"","comment_id":233419,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5889278595","product_id":100053301,"comment_content":"打卡，纪念一下，第一次完整的看完一个专栏😄","like_count":1,"discussions":[{"author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501016,"discussion_content":"点赞，感谢你的坚持和支持，😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594343963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352512,"user_name":"ibin","can_delete":false,"product_type":"c1","uid":2699840,"ip_address":"","ucode":"766942C36B8E27","user_header":"https://static001.geekbang.org/account/avatar/00/29/32/40/d56f476c.jpg","comment_is_top":false,"comment_ctime":1658740154,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1658740154","product_id":100053301,"comment_content":"re.match(r&#39;^(\\w(?!\\d\\d)){6}$&#39;, &#39;11abcd   为什么放在后面就是错误的啊","like_count":0},{"had_liked":false,"id":331211,"user_name":"阿康","can_delete":false,"product_type":"c1","uid":2697815,"ip_address":"","ucode":"DF20E1E33A8A34","user_header":"https://static001.geekbang.org/account/avatar/00/29/2a/57/6629c858.jpg","comment_is_top":false,"comment_ctime":1642487117,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642487117","product_id":100053301,"comment_content":"IPV4 正则不加^&amp; 匹配会有问题 ：https:&#47;&#47;regex101.com&#47;r&#47;MVjitU&#47;1","like_count":0},{"had_liked":false,"id":318032,"user_name":"青阳","can_delete":false,"product_type":"c1","uid":2139807,"ip_address":"","ucode":"3591D366BAB0B9","user_header":"https://static001.geekbang.org/account/avatar/00/20/a6/9f/3c60fffd.jpg","comment_is_top":false,"comment_ctime":1635127921,"is_pvip":true,"replies":[{"id":"118091","content":"很多时候不要求那么严谨，只要够用就好了，正则只是个工具，能解决问题就好","user_name":"作者回复","user_name_real":"编辑","uid":"1112089","ctime":1639002366,"ip_address":"","comment_id":318032,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1635127921","product_id":100053301,"comment_content":"写不出完美的邮箱校验正则表达式，由此看来正则不是图灵完备的","like_count":0,"discussions":[{"author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537227,"discussion_content":"很多时候不要求那么严谨，只要够用就好了，正则只是个工具，能解决问题就好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639002367,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":282464,"user_name":"天凉好个秋","can_delete":false,"product_type":"c1","uid":1934873,"ip_address":"","ucode":"718D353E16C8F5","user_header":"https://static001.geekbang.org/account/avatar/00/1d/86/19/86d74814.jpg","comment_is_top":false,"comment_ctime":1615263152,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615263152","product_id":100053301,"comment_content":"匹配ipv6，是否省略前导都可匹配：<br>(?:[0-9A-Fa-f]{0,4})(?:\\:(?:[0-9A-Fa-f]{0,4})){7}<br>网站：https:&#47;&#47;regex101.com&#47;r&#47;PnzZ4k&#47;1","like_count":0},{"had_liked":false,"id":256945,"user_name":"追风筝的人","can_delete":false,"product_type":"c1","uid":1488020,"ip_address":"","ucode":"2993D60F94C396","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/94/2796de72.jpg","comment_is_top":false,"comment_ctime":1603790661,"is_pvip":false,"replies":[{"id":"93648","content":"没懂具体的要求是什么","user_name":"作者回复","user_name_real":"伟忠","uid":"1112089","ctime":1603899525,"ip_address":"","comment_id":256945,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1603790661","product_id":100053301,"comment_content":"老师 <br>&quot;sadasda=&quot;adasdasd&quot;&quot;  Python 如何处理这种？        保留“”<br>","like_count":0,"discussions":[{"author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":508171,"discussion_content":"没懂具体的要求是什么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603899525,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":256134,"user_name":"追风筝的人","can_delete":false,"product_type":"c1","uid":1488020,"ip_address":"","ucode":"2993D60F94C396","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/94/2796de72.jpg","comment_is_top":false,"comment_ctime":1603534931,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603534931","product_id":100053301,"comment_content":"配对出现的标签，比如 title，一般网页标签不区分大小写，我们可以使用 (?i)来进行匹配。","like_count":1},{"had_liked":false,"id":256133,"user_name":"追风筝的人","can_delete":false,"product_type":"c1","uid":1488020,"ip_address":"","ucode":"2993D60F94C396","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/94/2796de72.jpg","comment_is_top":false,"comment_ctime":1603534884,"is_pvip":false,"replies":[{"id":"93649","content":"没问题","user_name":"作者回复","user_name_real":"伟忠","uid":"1112089","ctime":1603899550,"ip_address":"","comment_id":256133,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1603534884","product_id":100053301,"comment_content":"目前 QQ 号不能以 0 开头，最长的有 10 位，最短的从 10000（5 位）开始。从规则上我们可以得知，首位是 1-9，后面跟着是 4 到 9 位的数字，即可以使用 [1-9][0-9]{4,9} 来表示。","like_count":0,"discussions":[{"author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507939,"discussion_content":"没问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603899550,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":252978,"user_name":"郭纯","can_delete":false,"product_type":"c1","uid":1314521,"ip_address":"","ucode":"2613860B4642C4","user_header":"https://static001.geekbang.org/account/avatar/00/14/0e/d9/e61ce097.jpg","comment_is_top":false,"comment_ctime":1602552648,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1602552648","product_id":100053301,"comment_content":"匹配时间的正则 (?:2[0-3]|1\\d|0?\\d):(?:[1-5]\\d|0?\\d) 如果输入的时间为 25:12:23  也会匹配上因为在第三个分支 0？\\d 会直接匹配上 \\d<br>","like_count":0,"discussions":[{"author":{"id":2697815,"avatar":"https://static001.geekbang.org/account/avatar/00/29/2a/57/6629c858.jpg","nickname":"阿康","note":"","ucode":"DF20E1E33A8A34","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546993,"discussion_content":"不会吧 https://regex101.com/r/D8crmg/1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642488909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":248787,"user_name":"王九日","can_delete":false,"product_type":"c1","uid":2034169,"ip_address":"","ucode":"C6A10A35F79528","user_header":"https://static001.geekbang.org/account/avatar/00/1f/09/f9/60c1a864.jpg","comment_is_top":false,"comment_ctime":1600310111,"is_pvip":false,"replies":[{"id":"91891","content":"两种都可以","user_name":"作者回复","user_name_real":"伟忠","uid":"1112089","ctime":1601501738,"ip_address":"","comment_id":248787,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1600310111","product_id":100053301,"comment_content":"匹配数字第一个里面匹配n位数字为什么不可以写成 <br>[0-9]{n}","like_count":0,"discussions":[{"author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505740,"discussion_content":"两种都可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601501738,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235154,"user_name":"zcdll","can_delete":false,"product_type":"c1","uid":1004086,"ip_address":"","ucode":"F1F20EB17D8789","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/36/18f5d218.jpg","comment_is_top":false,"comment_ctime":1594909653,"is_pvip":false,"replies":[{"id":"86826","content":"1，感谢指出，确实发现有<br>2，有这么写的，但是比较少<br><br>答案没问题。<br><br>感谢你的陪伴和坚持，其实正则没那么难，学完了你已经超过绝大数人了","user_name":"作者回复","user_name_real":"伟忠","uid":"1112089","ctime":1594916967,"ip_address":"","comment_id":235154,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1594909653","product_id":100053301,"comment_content":"有两个小问题：<br>1. 邮政编码是6位数字，首位可以为0，例如 石家庄 050200<br>2. IP 地址的一位写成 001 符合规则吗？例如 255.001.001.001，这个例子符合文章中给出的正则<br><br>最后的问题：<br>匹配 ipv6       &#47;(?:[0-9a-f]{1,4}:){7}[0-9a-f]{1,4}&#47;i<br><br>PS：学完专栏啦，这次终于对正则入门了，谢谢老师！","like_count":0,"discussions":[{"author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501615,"discussion_content":"1，感谢指出，确实发现有\n2，有这么写的，但是比较少\n\n答案没问题。\n\n感谢你的陪伴和坚持，其实正则没那么难，学完了你已经超过绝大数人了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594916967,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233619,"user_name":"Robot","can_delete":false,"product_type":"c1","uid":1181473,"ip_address":"","ucode":"7215462D5AC0FA","user_header":"https://static001.geekbang.org/account/avatar/00/12/07/21/b3394aa2.jpg","comment_is_top":false,"comment_ctime":1594368037,"is_pvip":false,"replies":[{"id":"86828","content":"每次都能看到你的留言，赞👍🏻","user_name":"作者回复","user_name_real":"伟忠","uid":"1112089","ctime":1594916999,"ip_address":"","comment_id":233619,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1594368037","product_id":100053301,"comment_content":"只考虑了前导省略<br>([\\dA-Fa-f]{4}|[1-9A-Fa-f][\\dA-Fa-f]{1,3}|\\d)(?::([\\dA-Fa-f]{4}|[1-9A-Fa-f][\\dA-Fa-f]{1,3}|\\d)){7}<br><br>TODO<br>双冒号表示法不能匹配（::2:3:4:5:6:7:8），带IPV4的IPV6不能匹配（0:0:0:0:0:0:10.0.0.1）","like_count":0,"discussions":[{"author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501109,"discussion_content":"每次都能看到你的留言，赞👍🏻","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594916999,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233555,"user_name":"唐龙","can_delete":false,"product_type":"c1","uid":1471657,"ip_address":"","ucode":"87A10AE04F2037","user_header":"https://static001.geekbang.org/account/avatar/00/16/74/a9/5eb3ebc6.jpg","comment_is_top":false,"comment_ctime":1594353357,"is_pvip":false,"replies":[{"id":"86829","content":"建议测试下哈","user_name":"作者回复","user_name_real":"伟忠","uid":"1112089","ctime":1594917071,"ip_address":"","comment_id":233555,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1594353357","product_id":100053301,"comment_content":"IPv6地址总共分八段，由冒号分割，先假设不省略前导0:<br>[0-9A-Fa-f]{4}(?:(?:\\:[0-9A-Fa-f]){4}){7}<br>省略前导0的一段:<br>0|[1-9A-Fa-f][0-9A-Fa-f]{0,3}<br>完整版本:<br>(?:0|[1-9A-Fa-f][0-9A-Fa-f]{0,3})(?:\\:(?:0|[1-9A-Fa-f][0-9A-Fa-f]{0,3})){7}<br>没测试，不知道有没有问题","like_count":0,"discussions":[{"author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501085,"discussion_content":"建议测试下哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594917071,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233527,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1594347875,"is_pvip":true,"replies":[{"id":"86300","content":"1. 如果是校验，都得加上锚点，文章中为了简单，没有全部都带上。<br><br>2. 后面的问号已经表示有或没有了，\\.\\d* 可以匹配上点，不符合预期，肯定是想点和小数部分一起，有小数部分一定有点。<br><br>3. 为什么用分支选择，文章里面说了原因，如果不用分支，符号位，整数，点和小数位 这三个部分都有可能没有，这样就能匹配上空串了<br><br>这个正则确实没那么容易，需要思考不断完善。","user_name":"作者回复","user_name_real":"伟忠","uid":"1112089","ctime":1594451492,"ip_address":"","comment_id":233527,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1594347875","product_id":100053301,"comment_content":"匹配整数，小数 负数的 正则是不是应该完善一点：<br>^[-+]?\\d+(?:\\.\\d*)?$<br>1: 增加开始结束限制 要不然会匹配到字符串中的数字，比如： 123ssd<br>2: 小数部分的数字改为 * ,不用 + 的原因是有这样的数字的 12.<br><br>其实这里还有这样的数字的 没有整数部分，只有小数部分 如： .12<br><br>但是这样的话没有想起来好的写法，因为整数部分和小数部分是至少要有一个， 用分支选择结构的话，感觉有点啰嗦，希望老师解答","like_count":0,"discussions":[{"author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501076,"discussion_content":"1. 如果是校验，都得加上锚点，文章中为了简单，没有全部都带上。\n\n2. 后面的问号已经表示有或没有了，\\.\\d* 可以匹配上点，不符合预期，肯定是想点和小数部分一起，有小数部分一定有点。\n\n3. 为什么用分支选择，文章里面说了原因，如果不用分支，符号位，整数，点和小数位 这三个部分都有可能没有，这样就能匹配上空串了\n\n这个正则确实没那么容易，需要思考不断完善。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594451492,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}