{"id":427445,"title":"10｜不差毫厘：秒杀的库存与限购","content":"<p>你好，我是志东，欢迎和我一起从零打造秒杀系统。</p><p>你应该还记得，在介绍秒杀系统所面临的挑战时，我们就有提到库存超卖的问题，它是秒杀系统面临的几大挑战之一。而库存系统一般是商城平台的公共基础模块，负责所有商品可售卖数量的管理，对于库存系统来说，如果我只卖100件商品，那理想状态下，我希望外部系统就放过来100个下单请求就好了（以每单购买1件来说），因为再多的请求过来，库存不足，也会返回失败。</p><p>并且对于像秒杀这种大流量、高并发的业务场景，更不适合直接将全部流量打到库存系统，所以这个时候就需要有个系统能够承接大流量，并且只放和商品库存相匹配的请求量到库存系统，而限购就承担这样的角色。<strong>限购之于库存，就像秒杀之于下单，前者都是后者的过滤网和保护伞。</strong></p><p>所以在有了限购系统之后，库存扣减的难题其实就转移到限购了。当然从纯技术的角度来说，不管是哪个系统来做库存的限制，高并发下库存扣减都是绕不开的难题。所以在今天这节课里，首先我们会了解限购的能力，然后会详细地讲解如何从技术角度解决库存超卖的问题。这样只要你学会了这类问题的解决方案和思路，不管是否做活动库存与真实库存的区分，都能从容应对。</p><h2><strong>限购</strong></h2><p>顾名思义，限购的主要功能就是做商品的限制性购买。因为参加秒杀活动的商品都是爆品、稀缺品，所以为了让更多的用户参与进来，并让有限的投放量惠及到更多的人，所以往往会对商品的售卖做限制，一般限制的维度主要包括两方面。</p><!-- [[[read_end]]] --><p></p><p><strong>商品维度限制：</strong>最基本的限制就是商品活动库存的限制，即每次参加秒杀活动的商品投放量。如果再细分，还可以支持针对不同地区做投放的场景，比如我只想在北京、上海、广州、深圳这些一线城市投放，那么就只有收货地址是这些城市的用户才能参与抢购，而且各地区库存量是隔离的，互不影响。</p><p></p><p><strong>个人维度限制：</strong>就是以个人维度来做限制，这里不单单指同一用户ID，还会从同一手机号、同一收货地址、同一设备IP等维度来做限制。比如限制同一手机号每天只能下1单，每单只能购买1件，并且一个月内只能购买2件等。个人维度的限购，体现了秒杀的公平性。</p><p></p><p>有了这些功能支持之后，再做一个热门秒杀活动时，首先会在限购系统中配置活动库存以及各种个人维度的限购策略；然后在用户提单时，走下限购系统，通过限购的请求，再去做真实库存的扣减，这个时候到库存系统的量已经是非常小了。</p><p>该限购流程如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/a7/b1/a755edd995f37468850dc23338bd53b1.jpg?wh=1234x732\" alt=\"\"></p><p>那么在介绍完限购之后，下面我再来详细说一下上图中活动库存扣减的实现方案。</p><p></p><h2><strong>活动库存扣减方案</strong></h2><p>我们都知道，用户成功购买一个商品，对应的库存就要完成相应的扣减。而库存的扣减主要涉及到两个核心操作，一个是查询商品库存，另一个是在活动库存充足的情况下，做对应数量的扣减。两个操作拆分开来，都是非常简单的操作，但是在高并发场景下，不好的事情就发生了。</p><p></p><p>举个简单的例子，比如现在活动商品有2件库存，此时有两个并发请求过来，其中请求A要抢购1件，请求B要抢购2件，然后大家都去调用活动查询接口，发现库存都够，紧接着就都去调用对应的库存扣减接口，这个时候，两个都会扣减成功，但库存却变成了-1，也就是超卖了。</p><p>整个过程如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/34/65/3432cfe3769def280f570ab27a550365.jpg?wh=1178x622\" alt=\"\"></p><p>从图中我们可以看到，库存超卖的问题主要是由两个原因引起的，一个是查询和扣减不是原子操作，另一个是并发引起的请求无序。</p><p>所以要解决这个问题，我们就得<strong>做到库存扣减的原子性和有序性</strong>。理想过程应该如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/1e/31/1e42d6e7e2bb5efc95d789b71278c331.jpg?wh=1508x1060\" alt=\"\"></p><p>当然理想很美好，那我们该怎么去实现它呢？</p><p>你首先可能会想到利用数据库的行锁机制。这种方式的优点是简单安全，但是其性能比较差，无法适用于我们秒杀业务场景，在请求量比较小的业务场景下，是可以考虑的。</p><p>既然数据库不行，那能使用分布式锁吗？即通过Redis或者ZooKeeper来实现一个分布式锁，以商品维度来加锁，在获取到锁的线程中，按顺序去执行商品库存的查询和扣减，这样就同时实现了顺序性和原子性。</p><p>其实这个思路是可以的，只是不管通过哪种方式实现的分布式锁，都是有弊端的。以Redis的实现来说，仅仅在设置锁的有效期问题上，就让人头大。如果时间太短，那么业务程序还没有执行完，锁就自动释放了，这就失去了锁的作用；而如果时间偏长，一旦在释放锁的过程中出现异常，没能及时地释放，那么所有的业务线程都得阻塞等待直到锁自动失效，这与我们要实现高性能的秒杀系统是相悖的。所以<strong>通过分布式锁的方式可以实现，但不建议使用。</strong></p><p>那还有其他方式吗？有！我们都知道Redis本身就是单线程的，天生就可以支持操作的顺序性，如果我们能在一次Redis的执行中，同时包含查询和扣减两个命令不就好了吗？庆幸的是，Redis确实能够支持。</p><p>Redis有个功能，是可以执行Lua脚本的（我们Nginx服务也有用到Lua语言，看来Lua语言的适用场景还真不少），并且可以保证脚本中的所有逻辑会在一次执行中按顺序完成。而在Lua脚本中，又可以调用Redis的原生API，这样就能同时满足顺序性和原子性的要求了。</p><p>当然这里的原子性说法可能不是很准确，因为Lua脚本并不会自动帮你完成回滚操作，所以如果你的脚本逻辑中包含两步写操作，需要自己去做回滚。好在我们库存扣减的逻辑针对Redis的命令就两种，一个读一个写，并且写命令在最后，这样就不存在需要回滚的问题了。</p><p></p><p>这里能帮我们实现Redis执行Lua脚本的命令有两个，一个是EVAL，另一个是EVALSHA。</p><p>原生EVAL方法的使用语法如下：</p><pre><code class=\"language-plain\">EVAL script numkeys key [key ...] arg [arg ...]\n</code></pre><p>其中EVAL是命令，script是我们Lua脚本的字符串形式，numkeys是我们要传入的参数数量，key 是我们的入参，可以传入多个，arg 是额外的入参。</p><p>但这种方式需要每次都传入Lua脚本字符串，不仅浪费网络开销，同时Redis需要每次重新编译Lua脚本，对于我们追求性能极限的系统来说，不是很完美。</p><p>所以这里就要说到另一个命令EVALSHA了，原生语法如下：</p><pre><code class=\"language-plain\">EVALSHA sha1 numkeys key [key ...] arg [arg ...]\n</code></pre><p>可以看到其语法与EVAL类似，不同的是这里传入的不是脚本字符串，而是一个加密串sha1。这个sha1是从哪来的呢？它是通过另一个命令SCRIPT LOAD 返回的，该命令是预加载脚本用的，语法为：</p><pre><code class=\"language-plain\">SCRIPT LOAD script\n</code></pre><p>这样的话，我们通过预加载命令，将Lua脚本先存储在Redis中，并返回一个sha1，下次要执行对应脚本时，只需要传入sha1即可执行对应的脚本。这完美地解决了EVAL命令存在的弊端，所以我们这里也是基于EVALSHA方式来实现的。</p><p></p><p>既然有了思路，也有了方案，那我们开始用代码实现它吧。</p><p></p><p>首先我们根据以上介绍的库存扣减核心操作，完成核心Lua脚本的编写。其主要实现的功能就是查询库存并判断库存是否充足，如果充足，则做相应的扣减操作，脚本内容如下：</p><pre><code class=\"language-plain\">-- 调用Redis的get指令，查询活动库存，其中KEYS[1]为传入的参数1，即库存key\nlocal c_s = redis.call('get', KEYS[1])\n-- 判断活动库存是否充足，其中KEYS[2]为传入的参数2，即当前抢购数量\nif not c_s or tonumber(c_s) &lt; tonumber(KEYS[2]) then\n   return 0\nend\n-- 如果活动库存充足，则进行扣减操作。其中KEYS[2]为传入的参数2，即当前抢购数量\nredis.call('decrby',KEYS[1], KEYS[2])\n</code></pre><p>然后我们将Lua脚本转成字符串，并添加脚本预加载机制。</p><p>预加载可以有多种实现方式，一个是外部预加载好，生成了sha1然后配置到配置中心，这样Java代码从配置中心拉取最新sha1即可。另一种方式是在服务启动时，来完成脚本的预加载，并生成单机全局变量sha1。我们这里先采取第二种方式，代码结构如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/47/7d/47c9b70d3ee184f6f822cf93a7dd997d.png?wh=849x624\" alt=\"图片\"></p><p>以上是将Lua脚本转成字符串形式，并通过@PostConstruct完成脚本的预加载。然后新增EVALSHA方法，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/1a/62/1a1371b717a91yy229c6bfe09afbe762.png?wh=891x522\" alt=\"图片\"></p><p>方法入参为活动商品库存key以及单次抢购数量，并在内部调用Lua脚本执行库存扣减操作。看起来是不是很简单？在写完底层核心方法之后，我们只需要在下单之前，调用该方法即可，具体如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/20/76/20a3cd59468619a6b2f55732458f2276.png?wh=879x309\" alt=\"图片\"></p><p>一切完成后，接下来就让我们来验证一下，是否会出现超卖的情况吧。</p><h2>模拟场景</h2><p></p><p>我们模拟的场景是这样的：</p><ul>\n<li>首先，通过前文中提到的活动创建接口，完成活动的创建；</li>\n<li>然后，调用活动开始接口，并将商品活动信息同步到Redis里，包括商品活动库存；</li>\n<li>接着，我们通过并发测试工具，直接模拟请求下单操作；</li>\n<li>最后，请求在经过限购（代码中直接调用EVALSHA核心方法模拟）时，判断是否通过，如果通过就继续下单，并完成数据库中库存的扣减，如果售空，则返回失败。</li>\n</ul><p></p><p>我们按照模拟思路，先创建一个活动，数据库库存为4，然后调用活动开始接口，活动信息如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/3b/df/3b0072f152aacb4d9096df46d6f93bdf.png?wh=832x314\" alt=\"图片\"></p><p>再查看一下该活动对应的Redis活动库存，也是4件，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/57/65/57239bdc7c8ed19c9759094f432aa965.png?wh=832x134\" alt=\"图片\"></p><p>然后我们开始模拟1秒内发出多个并发请求，每个请求抢购2件商品。我这里使用的是wrk工具做的测试，测试命令如下：</p><pre><code class=\"language-plain\">wrk -t3 -c3 -d1s http://localhost:8080//settlement/submitData?productId=20002001\n</code></pre><p>以上命令的大概意思是使用3个线程来做压测，持续时间1秒。执行后的测试结果如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/c4/d0/c4a65e2b027d025af53152c5ec13cfd0.png?wh=832x206\" alt=\"图片\"></p><p>从上图可以看到，在1秒内发出了15个请求。现在我们看下限购的结果，1代表通过，0代表不通过，具体如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/fc/62/fc2835653c7412c22dc5b73b043f9862.png?wh=845x193\" alt=\"图片\"></p><p>确实只有2个请求通过限购，其他的全部被拦截了。这个时候，我们再分别查看下Redis活动库存和数据库库存，如下图所示：<img src=\"https://static001.geekbang.org/resource/image/4c/4d/4c86e82e0a4dba7880b8d3ca3abb9d4d.png?wh=758x202\" alt=\"图片\"></p><p><img src=\"https://static001.geekbang.org/resource/image/49/d7/49dd3bbd73be597622432859da5a72d7.png?wh=851x334\" alt=\"图片\"></p><p>库存数量都变成了0，没有出现超卖的情况！一切都完美符合我们的预期。</p><h2><strong>总结</strong></h2><p>这节课我们分析了库存系统的业务边界，由于是电商平台的基础系统，并且基于秒杀业务隔离的原则，使得库存系统不太适合直接承接秒杀的高并发流量，需要有个过滤层。而限购系统刚好可以胜任这样的角色，限购可以从商品和个人的维度来做商品的限制性购买，从而可以帮库存系统抵挡住无效的流量，只放过和商品库存相匹配的请求数量。</p><p>当然不管是哪个系统来做库存的控制，都要面临的问题就是库存的精确控制，所以我们从纯技术的角度分析了库存超卖发生的两个原因。一个是库存扣减涉及到的两个核心操作，查询和扣减不是原子操作；另一个是高并发引起的请求无序。</p><p>所以我们的应对方案是利用Redis的单线程原理，以及提供的原生EVALSHA和SCRIPT LOAD 命令来实现库存扣减的原子性和顺序性，并且经过实测也确实能达到我们的预期，且性能良好，从而有效地解决了秒杀系统所面临的库存超卖挑战。以后再遇到类似的问题，你也可以用同样的解决思路来应对。</p><p></p><h2>思考题</h2><p>请你思考一下，根据我们校验前置的原则，是否可以仅仅将库存的校验前置到demo-nginx或demo-web中，像下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/4c/c6/4c6ef532c64c3ddc2a54a6e05deee4c6.jpg?wh=1814x858\" alt=\"\"></p><p>如果可以，该如何具体实现它？</p><p>期待你的思考和方案，也欢迎你在留言区中与我交流，我们下节课再见！</p>","comments":[{"had_liked":false,"id":317486,"user_name":"呆萌白的大白。","can_delete":false,"product_type":"c1","uid":1284870,"ip_address":"","ucode":"A0DA4F8B5C892D","user_header":"https://static001.geekbang.org/account/avatar/00/13/9b/06/a1b0bd54.jpg","comment_is_top":false,"comment_ctime":1634812257,"is_pvip":false,"replies":[{"id":"116260","content":"这里回复下您的疑问：<br>1.一般使用redis都是用的集群，我们首要任务是通过削峰、限流等方式确保放过去的流量是安全的，对系统不会造成冲击。如果您还是担心主挂了，导致数据不一致问题，可以通过异常感应措施将redis降级掉，并通过严格限流的方式，将流量放到下游库存系统。<br>2.文章中并不建议使用分布式锁的方式，不然会出现您上面提到的那些问题，使用lua脚本的方式是不需要加锁的。","user_name":"作者回复","comment_id":317486,"uid":"2254827","ip_address":"","utype":1,"ctime":1636424703,"user_name_real":"王张飞"}],"discussion_count":6,"race_medal":0,"score":"53174419809","product_id":100091501,"comment_content":"有几点疑问，还希望老师可以解答：<br>文章强调了限购对秒杀的重要性是重中之重，却没把限购中线上环境经常可能发生的情况进行代码说明或者是逻辑说明，希望老师这块重点讲一下。<br>1、单机redis没有高可用，redis宕机怎么处理？redis仅支持异步复制,宕机必然会丢失数据这怎么处理？<br>2、服务redis获取锁之后，hang住一直持有锁怎么办？<br>3、用户1，用户2都是用同一个锁未做区分，会不会用户1获取到锁，超时。用户2获取到锁，用户1活过来把用户2的锁释放掉？<br>4、锁自动续期的问题也没说啊<br>5、感觉最终都绕回成了直接用java的 Redisson框架就好照抄官方示例。这样又失去了这一章节的意义。<br>","like_count":13,"discussions":[{"author":{"id":2254827,"avatar":"https://static001.geekbang.org/account/avatar/00/22/67/eb/68370b09.jpg","nickname":"王张飞","note":"","ucode":"A59979CC4B684A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":528833,"discussion_content":"这里回复下您的疑问：\n1.一般使用redis都是用的集群，我们首要任务是通过削峰、限流等方式确保放过去的流量是安全的，对系统不会造成冲击。如果您还是担心主挂了，导致数据不一致问题，可以通过异常感应措施将redis降级掉，并通过严格限流的方式，将流量放到下游库存系统。\n2.文章中并不建议使用分布式锁的方式，不然会出现您上面提到的那些问题，使用lua脚本的方式是不需要加锁的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636424703,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":3,"child_discussions":[{"author":{"id":1057843,"avatar":"https://static001.geekbang.org/account/avatar/00/10/24/33/bcf37f50.jpg","nickname":"阿甘","note":"","ucode":"BC93175B70E05D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2254827,"avatar":"https://static001.geekbang.org/account/avatar/00/22/67/eb/68370b09.jpg","nickname":"王张飞","note":"","ucode":"A59979CC4B684A","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":560417,"discussion_content":"难道库存信息全部都在redis中？不需要同步回mysql之类的数据库？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1649318989,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":528833,"ip_address":""},"score":560417,"extra":""},{"author":{"id":1122174,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1f/7e/f1d369e6.jpg","nickname":"幽灵","note":"","ucode":"5FDBBFC74B2C1A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1057843,"avatar":"https://static001.geekbang.org/account/avatar/00/10/24/33/bcf37f50.jpg","nickname":"阿甘","note":"","ucode":"BC93175B70E05D","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":587088,"discussion_content":"双写一致性问题如何保证？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662781158,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":560417,"ip_address":"湖北"},"score":587088,"extra":""},{"author":{"id":1122174,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1f/7e/f1d369e6.jpg","nickname":"幽灵","note":"","ucode":"5FDBBFC74B2C1A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2254827,"avatar":"https://static001.geekbang.org/account/avatar/00/22/67/eb/68370b09.jpg","nickname":"王张飞","note":"","ucode":"A59979CC4B684A","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":587089,"discussion_content":"用哨兵模式也可以吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662781189,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":528833,"ip_address":"湖北"},"score":587089,"extra":""}]},{"author":{"id":1934802,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/85/d2/045c63fb.jpg","nickname":"王建新","note":"","ucode":"E3151DDC0EEF0D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551711,"discussion_content":"1、使用redis集群，如果发现某个节点不稳定，直接降级到其他节点\n2、不用锁，谢谢\n3、不用锁，谢谢\n4、无锁\n5、？？？？？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645092015,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1934802,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/85/d2/045c63fb.jpg","nickname":"王建新","note":"","ucode":"E3151DDC0EEF0D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551709,"discussion_content":"都不用分布式锁了，为啥你还问什么锁超时，这位同学，，，搞清楚呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645091921,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":332506,"user_name":"Geek2014","can_delete":false,"product_type":"c1","uid":2028957,"ip_address":"","ucode":"9EB356D8DF287E","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f5/9d/104bb8ea.jpg","comment_is_top":false,"comment_ctime":1643280190,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"40297985854","product_id":100091501,"comment_content":" 老实说这一章讲解库存方案很初级，如果像回答其他人所说的限流之后都是安全流量，那么给定初始库存值、直接调用原子增减函数就可以了。为什么不调研一下同行如何做的呢？比方说阿里巴巴、小米电商的库存如何实现的。","like_count":10,"discussions":[{"author":{"id":1122174,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1f/7e/f1d369e6.jpg","nickname":"幽灵","note":"","ucode":"5FDBBFC74B2C1A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587090,"discussion_content":"的确 原子扣减就行，","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662781241,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"湖北"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":323589,"user_name":"xben","can_delete":false,"product_type":"c1","uid":1248046,"ip_address":"","ucode":"E570E5E31F416C","user_header":"https://static001.geekbang.org/account/avatar/00/13/0b/2e/c324a7de.jpg","comment_is_top":false,"comment_ctime":1638007046,"is_pvip":true,"discussion_count":2,"race_medal":0,"score":"23112843526","product_id":100091501,"comment_content":"活动库存在redis中扣减完之后，需要是否同步扣减数据库一致性如何保证呢？亦或者 不同步扣减数据库，在redis扣减完成之后，web-server宕机-此次扣减库存的操作也无法回溯呢？这个问题怎么解","like_count":5,"discussions":[{"author":{"id":1122174,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1f/7e/f1d369e6.jpg","nickname":"幽灵","note":"","ucode":"5FDBBFC74B2C1A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587091,"discussion_content":"有解决方案吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662781268,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"湖北"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2573275,"avatar":"https://static001.geekbang.org/account/avatar/00/27/43/db/8066d312.jpg","nickname":"闲聊","note":"","ucode":"C38A96DB40F879","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536862,"discussion_content":"如果同步就没性能优势了吧，就是串行操作而已，感觉最后的优化就是把db操作转化内存串行操作","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638882794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":326576,"user_name":"疯子","can_delete":false,"product_type":"c1","uid":1370542,"ip_address":"","ucode":"0072C5AD63888A","user_header":"","comment_is_top":false,"comment_ctime":1639569204,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14524471092","product_id":100091501,"comment_content":"老师 redis和mysql数据怎么同步怎么没说呢， redis 不支持事物， mysql数据回滚 redis数据怎么处理？而且redis扣减扣减成功之后 不一定都会到mysql里面去吧","like_count":3,"discussions":[{"author":{"id":1173897,"avatar":"https://static001.geekbang.org/account/avatar/00/11/e9/89/9fdd967c.jpg","nickname":"晴天","note":"","ucode":"335EF74F1357E4","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546508,"discussion_content":"我的理解：秒杀场景下的库存就放到 redis 存储了。在秒杀的过程中不用考虑 redis 与 mysql 的交互。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642327728,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318203,"user_name":"清风","can_delete":false,"product_type":"c1","uid":1542078,"ip_address":"","ucode":"AB2D169746BC23","user_header":"https://static001.geekbang.org/account/avatar/00/17/87/be/7466bf26.jpg","comment_is_top":false,"comment_ctime":1635204585,"is_pvip":false,"replies":[{"id":"115608","content":"一般会预生成订单号，然后开始下单前的一系列校验，过限购看是否被限购，过预约看是否有预约资格，过库存进行库存预占，还可能需要过风控看是否风险用户，中间任何一个步骤出错都会进行回滚。大部分平台是采用下单扣库存的方式，所以下单成功库存就预占成功了，如果超期（可配置，一般24小时，大促时调整1小时）用户没有支付，就会有定时任务进行自动取消，释放库存。","user_name":"作者回复","comment_id":318203,"uid":"1222758","ip_address":"","utype":1,"ctime":1635492845,"user_name_real":"Zhidong"}],"discussion_count":1,"race_medal":0,"score":"14520106473","product_id":100091501,"comment_content":"老师，秒杀减库存和下单两个操作的顺序是什么呢，是先扣减库存再下单吗？如果下单后没有及时支付，对应的库存该怎么恢复呢","like_count":3,"discussions":[{"author":{"id":1222758,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a8/66/02ab2ce7.jpg","nickname":"Zhidong","note":"","ucode":"AEBBCE20C242C3","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529138,"discussion_content":"一般会预生成订单号，然后开始下单前的一系列校验，过限购看是否被限购，过预约看是否有预约资格，过库存进行库存预占，还可能需要过风控看是否风险用户，中间任何一个步骤出错都会进行回滚。大部分平台是采用下单扣库存的方式，所以下单成功库存就预占成功了，如果超期（可配置，一般24小时，大促时调整1小时）用户没有支付，就会有定时任务进行自动取消，释放库存。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635492845,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":317466,"user_name":"꧅꧅꧅꧅꧅꧅꧅꧅꧅꧅꧅꧅꧅꧅꧅","can_delete":false,"product_type":"c1","uid":2261028,"ip_address":"","ucode":"0C7614C18C7ABC","user_header":"https://static001.geekbang.org/account/avatar/00/22/80/24/b2a60008.jpg","comment_is_top":false,"comment_ctime":1634804891,"is_pvip":false,"replies":[{"id":"116266","content":"您说的这种情况，只要放到库存的流量是安全的，对数据库来说是没有问题的。","user_name":"作者回复","comment_id":317466,"uid":"2254827","ip_address":"","utype":1,"ctime":1636425652,"user_name_real":"王张飞"}],"discussion_count":2,"race_medal":0,"score":"5929772187","product_id":100091501,"comment_content":"有没有考虑过一个问题。如果中途活动进行时，库存被修改过。原先是30件。现在改成10件。如果缓存没有及时同步过去，数据库10件，缓存30件。这时候。请求还是要过到库存上。该加的行锁还是要加。","like_count":1,"discussions":[{"author":{"id":2254827,"avatar":"https://static001.geekbang.org/account/avatar/00/22/67/eb/68370b09.jpg","nickname":"王张飞","note":"","ucode":"A59979CC4B684A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":528827,"discussion_content":"您说的这种情况，只要放到库存的流量是安全的，对数据库来说是没有问题的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636425652,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1105126,"avatar":"https://static001.geekbang.org/account/avatar/00/10/dc/e6/cfb409ab.jpg","nickname":"intomymind","note":"","ucode":"B954C9BFEC8667","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535722,"discussion_content":"1、扣减库存是在redis上进行扣减的吗，也就是只有在redis上扣减成功了就说明秒杀商品成功了，那么之后怎么同步到mysql呢\n2、这位同学也说了一种场景，就是redis和库存和mysql的库存不一样，按照作者回答的意思，在redis上扣减成功了还需要同步到mysql?","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1638524054,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354746,"user_name":"陈浪","can_delete":false,"product_type":"c1","uid":1832787,"ip_address":"四川","ucode":"DB52EF0A5D54B1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKb9HTrTjNMicEHX1M6PCfAnKw8ibcVFT0eicc0NzKWibHG3sCQc3zJSicmibeg0tzJck9F69Llk99gibOdA/132","comment_is_top":false,"comment_ctime":1660740858,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1660740858","product_id":100091501,"comment_content":"如果redis一个主节点挂了，从节点升主，是不是也会超卖？","like_count":0},{"had_liked":false,"id":351797,"user_name":"saltedfish","can_delete":false,"product_type":"c1","uid":1946257,"ip_address":"","ucode":"936571E1AC4139","user_header":"https://static001.geekbang.org/account/avatar/00/1d/b2/91/cf0de36e.jpg","comment_is_top":false,"comment_ctime":1658199293,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1658199293","product_id":100091501,"comment_content":"如果获取库存成功，但是后续流程（比如下单、支付）失败了怎么办？incrby？","like_count":0},{"had_liked":false,"id":351796,"user_name":"saltedfish","can_delete":false,"product_type":"c1","uid":1946257,"ip_address":"","ucode":"936571E1AC4139","user_header":"https://static001.geekbang.org/account/avatar/00/1d/b2/91/cf0de36e.jpg","comment_is_top":false,"comment_ctime":1658199150,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1658199150","product_id":100091501,"comment_content":"这只是提出了一个可行的方案，各种异常处理都不提的吗？比如redis的可用性，相关降级方案之类的","like_count":0},{"had_liked":false,"id":351124,"user_name":"菠萝power","can_delete":false,"product_type":"c1","uid":1132050,"ip_address":"","ucode":"8B3DA9859187C5","user_header":"https://static001.geekbang.org/account/avatar/00/11/46/12/965a6cc9.jpg","comment_is_top":false,"comment_ctime":1657535205,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657535205","product_id":100091501,"comment_content":"Important: to ensure the correct execution of scripts, both in standalone and clustered deployments, all names of keys that a script accesses must be explicitly provided as input key arguments.<br>用户请求数应该放到 ARG 里更好吧，放 KEY 里和 EVAL 命令的语义相悖","like_count":0},{"had_liked":false,"id":341123,"user_name":"宋","can_delete":false,"product_type":"c1","uid":1339736,"ip_address":"","ucode":"317516E4951944","user_header":"https://static001.geekbang.org/account/avatar/00/14/71/58/b171d14e.jpg","comment_is_top":false,"comment_ctime":1649380313,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1649380313","product_id":100091501,"comment_content":"前置是需要的，正常情况秒杀商品很快就没库存了不需要打到后端。","like_count":0},{"had_liked":false,"id":329451,"user_name":"Muscleape","can_delete":false,"product_type":"c1","uid":1124083,"ip_address":"","ucode":"FCD7641E1DD709","user_header":"https://static001.geekbang.org/account/avatar/00/11/26/f3/cd8eea0b.jpg","comment_is_top":false,"comment_ctime":1641353485,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1641353485","product_id":100091501,"comment_content":"代码中只有Redis控制库存扣减的操作，对于要用户取消或没有支付等终止购买的行为，没有Redis库存回填的操作，是库存回填这里没有什么需要说明的吗，还是其他的方式做了这个操作？","like_count":0,"discussions":[{"author":{"id":1173897,"avatar":"https://static001.geekbang.org/account/avatar/00/11/e9/89/9fdd967c.jpg","nickname":"晴天","note":"","ucode":"335EF74F1357E4","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546509,"discussion_content":"库存回滚和扣减一个道理吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642327810,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321899,"user_name":"吕","can_delete":false,"product_type":"c1","uid":1210890,"ip_address":"","ucode":"8F08E2CB81C4C3","user_header":"https://static001.geekbang.org/account/avatar/00/12/7a/0a/0ce5c232.jpg","comment_is_top":false,"comment_ctime":1637106746,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1637106746","product_id":100091501,"comment_content":"老师，我有个疑问，使用redis和lua控制库存超卖后，那这里需要保证mysql和redis中的库存一致性么是？如果需要保证一致性，如果redis减完库存，如果不加锁，那么mysql还是会出现库存超卖啊，这里应该怎么实现？还有redis在减库存的前后，是不是还要做一个记录日志同步到mysql数据库中，来避免redis出现问题，能够进行库存的历史数据追踪？","like_count":0,"discussions":[{"author":{"id":1934802,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/85/d2/045c63fb.jpg","nickname":"王建新","note":"","ucode":"E3151DDC0EEF0D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551707,"discussion_content":"只用redis，不用mysql，秒杀完了之后同步db。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645091859,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1173897,"avatar":"https://static001.geekbang.org/account/avatar/00/11/e9/89/9fdd967c.jpg","nickname":"晴天","note":"","ucode":"335EF74F1357E4","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546511,"discussion_content":"感觉你可以认为这个场景下，redis 就是数据库存储，没有用到 mysql","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642327870,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318202,"user_name":"清风","can_delete":false,"product_type":"c1","uid":1542078,"ip_address":"","ucode":"AB2D169746BC23","user_header":"https://static001.geekbang.org/account/avatar/00/17/87/be/7466bf26.jpg","comment_is_top":false,"comment_ctime":1635203989,"is_pvip":false,"replies":[{"id":"116250","content":"您说的情况是可能存在的，大部分前置的本地库存都会比数据库或redis要延时，所以要视自身业务和系统资源情况做取舍。","user_name":"作者回复","comment_id":318202,"uid":"2254827","ip_address":"","utype":1,"ctime":1636422578,"user_name_real":"王张飞"}],"discussion_count":1,"race_medal":0,"score":"1635203989","product_id":100091501,"comment_content":"前置检验应该不太好。如果前置检验，后面的过程中有可能库存就发生变化了，最后可能造成下单失败","like_count":0,"discussions":[{"author":{"id":2254827,"avatar":"https://static001.geekbang.org/account/avatar/00/22/67/eb/68370b09.jpg","nickname":"王张飞","note":"","ucode":"A59979CC4B684A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529137,"discussion_content":"您说的情况是可能存在的，大部分前置的本地库存都会比数据库或redis要延时，所以要视自身业务和系统资源情况做取舍。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636422578,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":316716,"user_name":"小五","can_delete":false,"product_type":"c1","uid":1411419,"ip_address":"","ucode":"B7B1F121837CD9","user_header":"https://static001.geekbang.org/account/avatar/00/15/89/5b/b014ce14.jpg","comment_is_top":false,"comment_ctime":1634523852,"is_pvip":false,"replies":[{"id":"116258","content":"这里解答一下您的疑问：<br>1.削峰和限流的目的其实就是在了解系统能力之后所做的保护措施，所以一般放过去的流量都是系统所能承受的，redis单片操作有上限，对于写操作，如果想硬抗流量只能通过拆key到不同分片的方式，但这种会带来新的问题<br>2.是的<br>3.是的，整个秒杀系统，流量较高的链路，都不建议使用锁，会带来新问题","user_name":"作者回复","comment_id":316716,"uid":"2254827","ip_address":"","utype":1,"ctime":1636423689,"user_name_real":"王张飞"}],"discussion_count":2,"race_medal":0,"score":"1634523852","product_id":100091501,"comment_content":"1 秒杀流量经过之前的削峰和限流后，到达限购系统的流量是不是不会很多？如果很多的话，如使用 Redis 做库存限购的话有上限问题吧，不过采用分片好像可以解决。<br>2 限购后，把适应库存的流量打到库存系统，使用行锁做兜底，就不会超卖了吧？<br>3 老师提到 “通过分布式锁的方式可以实现，但不建议使用。“ 这个操作是在类似削峰、限购后的逻辑吧？","like_count":0,"discussions":[{"author":{"id":2254827,"avatar":"https://static001.geekbang.org/account/avatar/00/22/67/eb/68370b09.jpg","nickname":"王张飞","note":"","ucode":"A59979CC4B684A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":528470,"discussion_content":"这里解答一下您的疑问：\n1.削峰和限流的目的其实就是在了解系统能力之后所做的保护措施，所以一般放过去的流量都是系统所能承受的，redis单片操作有上限，对于写操作，如果想硬抗流量只能通过拆key到不同分片的方式，但这种会带来新的问题\n2.是的\n3.是的，整个秒杀系统，流量较高的链路，都不建议使用锁，会带来新问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636423689,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1183171,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0d/c3/585cf657.jpg","nickname":"行者","note":"","ucode":"AA89537CE3A191","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":406364,"discussion_content":"请教一下，如果使用了分片，在如果一个订单扣减库存的时候需要多个分片才能满足的解决思路是什么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634741680,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}