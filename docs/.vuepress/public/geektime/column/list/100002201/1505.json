{"id":1505,"title":"22 | 从亚马逊的实践，谈分布式系统的难点","content":"<p>你好，我是陈皓，网名左耳朵耗子。</p><p>从目前已经公开的资料来看，分布式服务化架构思想实践最早的公司应该是亚马逊。因为早在2002年的时候，亚马逊CEO杰夫·贝索斯（Jeff Bezos）就向全公司颁布了下面的这几条架构规定（来自《<a href=\"https://coolshell.cn/articles/5701.html\">Steve Yegge对Google平台吐槽</a>》一文）。</p><ol>\n<li>\n<p>所有团队的程序模块都要通过Service Interface方式将其数据与功能开放出来。</p>\n</li>\n<li>\n<p>团队间程序模块的信息通信，都要通过这些接口。</p>\n</li>\n<li>\n<p>除此之外没有其它的通信方式。其他形式一概不允许：不能直接链结别的程序（把其他团队的程序当作动态链接库来链接），不能直接读取其他团队的数据库，不能使用共享内存模式，不能使用别人模块的后门，等等。唯一允许的通信方式是调用Service Interface。</p>\n</li>\n<li>\n<p>任何技术都可以使用。比如：HTTP、CORBA、Pub/Sub、自定义的网络协议等。</p>\n</li>\n<li>\n<p>所有的Service Interface，毫无例外，都必须从骨子里到表面上设计成能对外界开放的。也就是说，团队必须做好规划与设计，以便未来把接口开放给全世界的程序员，没有任何例外。</p>\n</li>\n<li>\n<p>不这样做的人会被炒鱿鱼。</p>\n</li>\n</ol><p>这应该就是AWS（Amazon Web Service）出现的基因吧。当然，前面说过，采用分布式系统架构后会出现很多的问题。比如：</p><!-- [[[read_end]]] --><ul>\n<li>\n<p>一个线上故障的工单会在不同的服务和不同的团队中转过来转过去。</p>\n</li>\n<li>\n<p>每个团队都可能成为一个潜在的DDoS攻击者，除非每个服务都要做好配额和限流。</p>\n</li>\n<li>\n<p>监控和查错变得更为复杂。除非有非常强大的监控手段。</p>\n</li>\n<li>\n<p>服务发现和服务治理也变得非常复杂。</p>\n</li>\n</ul><p>为了克服这些问题，亚马逊这么多年的实践让其可以运维和管理极其复杂的分布式服务架构。我觉得主要有以下几点。</p><ol>\n<li>\n<p><strong>分布式服务的架构需要分布式的团队架构</strong>。在亚马逊，一个服务由一个小团队（Two Pizza Team不超过16个人，两张Pizza可以喂饱的团队）负责，从前端到数据，从需求分析到上线运维。这是良性的分工策略——按职责分工，而不是按技能分工。</p>\n</li>\n<li>\n<p><strong>分布式服务查错不容易</strong>。一旦出现比较严重的故障，需要整体查错。出现一个S2的故障，就可以看到每个团队的人都会上线。在工单系统里能看到，在故障发生的一开始，大家都在签到并自查自己的系统。如果没问题，也要在线待命（standby），等问题解决（我在《故障处理最佳实践：应对故障》一文中详细地讲过这个事）。</p>\n</li>\n<li>\n<p><strong>没有专职的测试人员，也没有专职的运维人员，开发人员做所有的事情</strong>。开发人员做所有事情的好处是——吃自己的狗粮（Eat Your Own Dog Food）。自己写的代码自己维护自己养，会让开发人员明白，写代码容易维护代码复杂。这样，开发人员在接需求、做设计、写代码、做工具时都会考虑到软件的长期维护性。</p>\n</li>\n<li>\n<p><strong>运维优先，崇尚简化和自动化</strong>。为了能够运维如此复杂的系统，亚马逊内部在运维上下了非常大的功夫。现在人们所说的DevOps这个事，亚马逊在10多年前就做到了。亚马逊最为强大的就是运维，拼命地对系统进行简化和自动化，让亚马逊做到了可以轻松运维拥有上千万台虚机的AWS云平台。</p>\n</li>\n<li>\n<p><strong>内部服务和外部服务一致</strong>。无论是从安全方面，还是接口设计方面，无论是从运维方面，还是故障处理的流程方面，亚马逊的内部系统都和外部系统一样对待。这样做的好处是，内部系统的服务随时都可以开放出来。而且，从第一天开始，服务提供方就有对外服务的能力。可以想象，以这样的标准运作的团队其能力会是什么样的。</p>\n</li>\n</ol><p>在进化的过程中，亚马逊遇到的问题很多，甚至还有很多几乎没有人会想到的非常生僻的东西，它都一一学习和总结了，而且都解决得很好。</p><p>构建分布式系统非常难，这其中充满了各种各样的挑战，但亚马逊还是毫不犹豫地走了下去。这是因为亚马逊想做平台，不是“像淘宝这样的中介式流量平台”，而是那种“可以对外输出能力的平台”。</p><p>亚马逊觉得自己没有像史蒂夫·乔布斯（Steve Jobs）这样的牛人，不可能做出像iPhone这样的爆款产品，而且用户天生就是众口难调，与其做一个大家都不满意的软件，还不如把一些基础能力对外输出，引入外部的力量来一起完成一个用户满意的产品。</p><p>这其实就是在建立自己的生态圈。虽然在今天看来这个事已经不稀奇了，但是贝索斯早在十五年前就悟到了，实在是个天才。</p><p>所以，分布式服务架构是需要从组织，到软件工程，再到技术上的一个大的改造，需要比较长的时间来磨合和改进，并不断地总结教训和成功经验。</p><h1>分布式系统中需要注意的问题</h1><p>我们再来看一下分布式系统在技术上需要注意的问题。</p><h1>问题一：异构系统的不标准问题</h1><p>这主要表现在：</p><ul>\n<li>软件和应用不标准。</li>\n<li>通讯协议不标准。</li>\n<li>数据格式不标准。</li>\n<li>开发和运维的过程和方法不标准。</li>\n</ul><p>不同的软件，不同的语言会出现不同的兼容性和不同的开发、测试、运维标准。不同的标准会让我们用不同的方式来开发和运维，引起架构复杂度的提升。比如：有的软件修改配置要改它的.conf文件，而有的则是调用管理API接口。</p><p>在通讯方面，不同的软件用不同的协议，就算是相同的网络协议里也会出现不同的数据格式。还有，不同的团队因为使用不同的技术，也会有不同的开发和运维方式。这些不同的东西，会让我们的整个分布式系统架构变得异常复杂。所以，分布式系统架构需要有相应的规范。</p><p>比如，我看到，很多服务的API出错不返回HTTP的错误状态码，而是返回个正常的状态码200，然后在HTTP Body里的JSON字符串中写着个：error，bla bla error message。这简直就是一种反人类的做法。我实在不明白为什么会有众多这样的设计。这让监控怎么做啊？现在，你应该使用Swagger的规范了。</p><p>再比如，我看到很多公司的软件配置管理里就是一个key-value的东西，这样的东西灵活到可以很容易地被滥用。不规范的配置命名，不规范的值，甚至在配置中直接嵌入前端展示内容……</p><p>一个好的配置管理，应该分成三层：底层和操作系统相关，中间层和中间件相关，最上面和业务应用相关。于是底层和中间层是不能让用户灵活修改的，而是只让用户选择。比如：操作系统的相关配置应该形成模板来让人选择，而不是让人乱配置的。只有配置系统形成了规范，我们才hold得住众多的系统。</p><p>再比如：数据通讯协议。通常来说，作为一个协议，一定要有协议头和协议体。协议头定义了最基本的协议数据，而协议体才是真正的业务数据。对于协议头，我们需要非常规范地让每一个使用这个协议的团队都使用一套标准的方式来定义，这样我们才容易对请求进行监控、调度和管理。</p><p>这样的规范还有很多，我在这就不一一列举了。</p><h1>问题二：系统架构中的服务依赖性问题</h1><p>对于传统的单体应用，一台机器挂了，整个软件就挂掉了。但是你千万不要以为在分布式的架构下不会发生这样的事。分布式架构下，服务是会有依赖的，一个服务依赖链上的某个服务挂掉了，可能会导致出现“多米诺骨牌”效应。</p><p>所以，在分布式系统中，服务的依赖也会带来一些问题。</p><ul>\n<li>如果非关键业务被关键业务所依赖，会导致非关键业务变成一个关键业务。</li>\n<li>服务依赖链中，出现“木桶短板效应”——整个SLA由最差的那个服务所决定。</li>\n</ul><p>这是服务治理的内容了。服务治理不但需要我们定义出服务的关键程度，还需要我们定义或是描述出关键业务或服务调用的主要路径。没有这个事情，我们将无法运维或是管理整个系统。</p><p>这里需要注意的是，很多分布式架构在应用层上做到了业务隔离，然而，在数据库结点上并没有。如果一个非关键业务把数据库拖死，那么会导致全站不可用。所以，数据库方面也需要做相应的隔离。也就是说，最好一个业务线用一套自己的数据库。这就是亚马逊服务器的实践——系统间不能读取对方的数据库，只通过服务接口耦合。这也是微服务的要求。我们不但要拆分服务，还要为每个服务拆分相应的数据库。</p><h1>问题三：故障发生的概率更大</h1><p>在分布式系统中，因为使用的机器和服务会非常多，所以，故障发生的频率会比传统的单体应用更大。只不过，单体应用的故障影响面很大，而分布式系统中，虽然故障的影响面可以被隔离，但是因为机器和服务多，出故障的频率也会多。另一方面，因为管理复杂，而且没人知道整个架构中有什么，所以非常容易犯错误。</p><p>你会发现，对分布式系统架构的运维，简直就是一场噩梦。我们会慢慢地明白下面这些道理。</p><ul>\n<li>出现故障不可怕，故障恢复时间过长才可怕。</li>\n<li>出现故障不可怕，故障影响面过大才可怕。</li>\n</ul><p>运维团队在分布式系统下会非常忙，忙到每时每刻都要处理大大小小的故障。我看到，很多大公司，都在自己的系统里拼命地添加各种监控指标，有的能够添加出几万个监控指标。我觉得这完全是在“使蛮力”。一方面，信息太多等于没有信息，另一方面，SLA要求我们定义出“Key Metrics”，也就是所谓的关键指标。然而，他们却没有。这其实是一种思维上的懒惰。</p><p>但是，上述的都是在“救火阶段”而不是“防火阶段”。所谓“防火胜于救火”，我们还要考虑如何防火，这需要我们在设计或运维系统时都要为这些故障考虑，即所谓 Design for Failure。在设计时就要考虑如何减轻故障。如果无法避免，也要使用自动化的方式恢复故障，减少故障影响面。</p><p>因为当机器和服务数量越来越多时，你会发现，人类的缺陷就成为了瓶颈。这个缺陷就是人类无法对复杂的事情做到事无巨细的管理，只有机器自动化才能帮助人类。也就是，人管代码，代码管机器，人不管机器！</p><h1>问题四：多层架构的运维复杂度更大</h1><p>通常来说，我们可以把系统分成四层：基础层、平台层、应用层和接入层。</p><ul>\n<li>基础层就是我们的机器、网络和存储设备等。</li>\n<li>平台层就是我们的中间件层，Tomcat、MySQL、Redis、Kafka之类的软件。</li>\n<li>应用层就是我们的业务软件，比如，各种功能的服务。</li>\n<li>接入层就是接入用户请求的网关、负载均衡或是CDN、DNS这样的东西。</li>\n</ul><p>对于这四层，我们需要知道：</p><ul>\n<li>任何一层的问题都会导致整体的问题；</li>\n<li>没有统一的视图和管理，导致运维被割裂开来，造成更大的复杂度。</li>\n</ul><p>很多公司都是按技能分工的，他们按照技能把技术团队分为产品开发、中间件开发、业务运维、系统运维等子团队。这样的分工导致的结果就是大家各管一摊，很多事情完全连不在一起。整个系统会像 “多米诺骨牌”一样，一个环节出现问题，就会倒下去一大片。因为没有一个统一的运维视图，不知道一个服务调用是如何经过每一个服务和资源，也就导致在出现故障时要花大量的时间在沟通和定位问题上。</p><p>之前我在某云平台的一次经历就是这样的。从接入层到负载均衡，再到服务层，再到操作系统底层，设置的KeepAlive的参数完全不一致，导致用户发现，软件运行的行为和文档中定义的完全不一样。工程师查错的过程简直就是一场噩梦，以为找到了一个，结果还有一个，来来回回花了大量的时间才把所有KeepAlive的参数设置成一致的，浪费了太多的时间。</p><p><strong>分工不是问题，问题是分工后的协作是否统一和规范</strong>。这点，你一定要重视。</p><h1>小结</h1><p>好了，我们来总结一下今天分享的主要内容。首先，我以亚马逊为例，讲述了它是如何做分布式服务架构的，遇到了哪些问题，以及是如何解决的。</p><p>我认为，亚马逊在分布式服务系统方面的这些实践和经验积累，是AWS出现的基因。随后分享了在分布式系统中需要注意的几个问题，同时给出了应对方案。我认为，构建分布式服务需要从组织，到软件工程，再到技术上的一次大的改造，需要比较长的时间来磨合和改进，并不断地总结教训和成功经验。在下节课中，我会讲述分布式系统的技术栈。希望对你有帮助。</p><p>也欢迎你在评论区分享一下在分布式架构中遇到的各种问题。</p><p>下面我列出了<strong>《分布式系统架构的本质》系列文章</strong>的目录，希望你能在这个列表里找到自己感兴趣的内容。如果你在分布式系统架构方面，有其他想了解的话题和内容，欢迎留言给我。</p><ul>\n<li><a href=\"https://time.geekbang.org/column/article/1411\">分布式系统架构的冰与火</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/1505\">从亚马逊的实践，谈分布式系统的难点</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/1512\">分布式系统的技术栈</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/1513\">分布式系统关键技术：全栈监控</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/1604\">分布式系统关键技术：服务调度</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/1609\">分布式系统关键技术：流量与数据调度</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/1610\">洞悉PaaS平台的本质</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/2080\">推荐阅读：分布式系统架构经典资料</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/2421\">推荐阅读：分布式数据调度相关论文</a></li>\n</ul>","neighbors":{"left":{"article_title":"21 | 分布式系统架构的冰与火","id":1411},"right":{"article_title":"23 | 分布式系统的技术栈","id":1512}},"comments":[{"had_liked":false,"id":48460,"user_name":"蚂蚁内推+v","can_delete":false,"product_type":"c1","uid":1050508,"ip_address":"","ucode":"24B10AEE54B3FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/07/8c/0d886dcc.jpg","comment_is_top":false,"comment_ctime":1544448369,"is_pvip":false,"discussion_count":17,"race_medal":0,"score":"641494575473","product_id":100002201,"comment_content":"说下为什么API都返回200，在Body里写错误信息：因为有的运营商会拦截非200请求，然后返回广告😂","like_count":150,"discussions":[{"author":{"id":1148262,"avatar":"","nickname":"delete is create","note":"","ucode":"12A64AF8D50C00","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":85929,"discussion_content":"移动会","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1576583534,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1181206,"avatar":"https://static001.geekbang.org/account/avatar/00/12/06/16/e85c1fa8.jpg","nickname":"滴答丶滴","note":"","ucode":"2093C2948B4327","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1148262,"avatar":"","nickname":"delete is create","note":"","ucode":"12A64AF8D50C00","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338300,"discussion_content":"移动的产品经理应该要祭天","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1609235435,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":85929,"ip_address":""},"score":338300,"extra":""}]},{"author":{"id":1285659,"avatar":"https://static001.geekbang.org/account/avatar/00/13/9e/1b/9cb138f0.jpg","nickname":"trier","note":"","ucode":"498137BC5667AD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":243156,"discussion_content":"https","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1587525048,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1594508,"avatar":"https://static001.geekbang.org/account/avatar/00/18/54/8c/a3b98f6c.jpg","nickname":"denofiend","note":"","ucode":"FC9A750C96E01C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":33819,"discussion_content":"http header也会拦截","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1571143512,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1077731,"avatar":"https://static001.geekbang.org/account/avatar/00/10/71/e3/afdc92e1.jpg","nickname":"花灰","note":"","ucode":"CA1474945A2A7E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312516,"discussion_content":"涨知识","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1602726756,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1233193,"avatar":"https://static001.geekbang.org/account/avatar/00/12/d1/29/1b1234ed.jpg","nickname":"DFighting","note":"","ucode":"F3BA2426FF8582","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":209072,"discussion_content":"我是第一次听说还有这操作","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584606474,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1720503,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/EtQ5bno0zTR4hhHVQanxTNyl6ibZADEvadW4WMNyU2DnuR1XcqSZA0pEuoQwlIhzZvPAHmy6NLPOGd0dTicHjXibw/132","nickname":"云淡风轻","note":"","ucode":"386625F077EECC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":357413,"discussion_content":"太坑了吧，现在还会这样吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615802578,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2002555,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/8e/7b/701c741f.jpg","nickname":"难得自然萌","note":"","ucode":"73C86B48236104","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302544,"discussion_content":"get哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598949803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1917916,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/43/dc/95d4f2c5.jpg","nickname":"林毅鑫","note":"","ucode":"1BB3D186E90D96","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300728,"discussion_content":"优秀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598249894,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2072499,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/9f/b3/bb8f74e8.jpg","nickname":"方糖","note":"","ucode":"5EAFE299757E29","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293000,"discussion_content":"是的，耗子哥可能不太清楚国内前些年运营商有多么离谱","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595409026,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1377393,"avatar":"https://static001.geekbang.org/account/avatar/00/15/04/71/0b949a4c.jpg","nickname":"何用","note":"","ucode":"B0C6E8176AE6FD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2072499,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/9f/b3/bb8f74e8.jpg","nickname":"方糖","note":"","ucode":"5EAFE299757E29","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326750,"discussion_content":"搜集证据起诉吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605672582,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":293000,"ip_address":""},"score":326750,"extra":""}]},{"author":{"id":1112844,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fb/0c/216004a7.jpg","nickname":"你说我叫啥","note":"","ucode":"2703A252E1ACCE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291991,"discussion_content":"涨姿势了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595040634,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1110813,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f3/1d/3d1746bd.jpg","nickname":"衡友乐","note":"","ucode":"DF776E7C452ED2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":283718,"discussion_content":"只听说过访问页面 404 的情况运营商会切页面其它的没听说过。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592352956,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1006261,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5a/b5/f667f610.jpg","nickname":"shaomeng","note":"","ucode":"BB9EA8B684A035","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":177121,"discussion_content":"是的 都是被运营商逼的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582079727,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1007423,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5f/3f/134b84d0.jpg","nickname":"对方现在没有输入......","note":"","ucode":"B72A61EB094DEA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":88824,"discussion_content":"我佛了。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576733073,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1055133,"avatar":"https://static001.geekbang.org/account/avatar/00/10/19/9d/60f51397.jpg","nickname":"睡着的咖啡豆💤","note":"","ucode":"3C4A47EB4BAAA5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":83951,"discussion_content":"还有这样的操作","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576475545,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1098974,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/de/9649fcee.jpg","nickname":"侧面","note":"","ucode":"D55BF71996FDE8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2167,"discussion_content":"还有这样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563326622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":1390,"user_name":"Michael","can_delete":false,"product_type":"c1","uid":1015222,"ip_address":"","ucode":"27EB4A725CE14E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/b6/abdebdeb.jpg","comment_is_top":false,"comment_ctime":1513042087,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"263506047143","product_id":100002201,"comment_content":"耗子哥能不能讲一下作为新手如何去了解分布式 如何实践分布式 特别是对于我们这种公司规模小 可能短时间用不上分布式 但是又想学习的同学 给我们一些建议？","like_count":61},{"had_liked":false,"id":1480,"user_name":"二进制之路","can_delete":false,"product_type":"c1","uid":1008395,"ip_address":"","ucode":"67C84B013147B1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/0b/ad56aeb4.jpg","comment_is_top":false,"comment_ctime":1513215869,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"229146482557","product_id":100002201,"comment_content":"国内按技能分工还是主流，采用分布式服务所产生的问题的确很多。特别是对于电商，业务链条非常长，环环依赖，业务上的沟通协调、排查问题方面要花大把时间。毕竟是各管各的，基本上没谁能对整个业务和技术链条都了解清楚。即便有，那也解决不了全公司的问题。公司大了，在开发语言、通信协议、数据规范都会尽量统一，运维逐步自动化，可视化监控并定义关键指标，同时还需要全链路的监控，这一切看起来非常好。但对于一家从3、5个人发展到几百、上千甚至上万人的时候，谁又曾想公司能壮大如此。即便想到了，在那时候技术也不是重点不会换入那么多资源，那时也不一定能找到愿意加入的技术牛人。因此，在公司高速成长的过程中，技术往往是受不到足够重视的，老板也没那么懂。所以技术上肯定会是比较杂乱的，各种语言，各种协议，各种部署方式，种种的异构在后期想统一的时候肯定是非常困难的，这个标准化的过程对于大多数公司来说将会是持久战。","like_count":54,"discussions":[{"author":{"id":1319157,"avatar":"https://static001.geekbang.org/account/avatar/00/14/20/f5/6cdbfa90.jpg","nickname":"刘匿名","note":"","ucode":"CB4C1DC8C1BB31","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":315990,"discussion_content":"这一点确实说明亚马逊的领导层很有先见之明。很多时候方向错了，或者没有早期规划，后期就只能通过大量的投入来解决历史遗留问题。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1603343491,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1974213,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIStbRtibGOfVcJDMeWSAqtkneTYB7aRGUIo60opdj4NicWVSDRUFO7GLLDZAfg6EcElvaL1sXZGphA/132","nickname":"Geek_4139c9","note":"","ucode":"ADC36DFE4611F1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":244248,"discussion_content":"精彩","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587571039,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12818,"user_name":"neohope","can_delete":false,"product_type":"c1","uid":1043475,"ip_address":"","ucode":"C0268F6E7E2B6E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/13/49e98289.jpg","comment_is_top":false,"comment_ctime":1529052690,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"173327744530","product_id":100002201,"comment_content":"一说微服务架构，就一把鼻涕一把泪的。从单体结构到分布式，从来就不是一个单纯的技术问题，而是整个团队的思路都要转变，能力都要提升才行。我们从两年前起，开始从单体结构相分布式架构迁移，那一路过来的酸爽，现在闻起来还像泡在醋缸里一样。<br><br>最大的体会就是，程序员写服务爽了，实施或运维部署的时候难度一下加大了好多。以前排查问题找一个地方就行，现在各种中间件，各种服务，各种网络问题都要去看 。有一次，我们因为一个配置有问题，导致在特殊语句处理时数据库处理性能严重下降，dubbo全线卡死，最后导致服务全线雪崩，前方工程师没有经验，单纯的重启了服务，于是继续雪崩，就像被ddos攻击了一样。现在客户还各种质疑，“你们说了新架构很牛啊，怎么恢复用了这么久，排错用了这么久”。<br><br>每次遇到问题，就添加一类监控，磕磕碰碰的总算活了下来。回想下来，总是大家做了过多好的假设，但大家都知道，该发生的总会发生的。感觉我们现在仍把研发和实施分开，其实问题挺大的。","like_count":41,"discussions":[{"author":{"id":1574450,"avatar":"https://static001.geekbang.org/account/avatar/00/18/06/32/3de6a189.jpg","nickname":"范","note":"","ucode":"D115514B2AA5CC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332499,"discussion_content":"是不是人的因素才是最关键的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607242815,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":1719,"user_name":"sitin","can_delete":false,"product_type":"c1","uid":1020125,"ip_address":"","ucode":"16A1BB91D64366","user_header":"https://static001.geekbang.org/account/avatar/00/0f/90/dd/b956f8e2.jpg","comment_is_top":false,"comment_ctime":1514249533,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"74528693565","product_id":100002201,"comment_content":"我记得200在body处理是考虑运营商劫持问题","like_count":17,"discussions":[{"author":{"id":1061019,"avatar":"https://static001.geekbang.org/account/avatar/00/10/30/9b/8d95f0ba.jpg","nickname":"山人","note":"","ucode":"B023A52B5738A1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":249721,"discussion_content":"用https","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587955794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":11192,"user_name":"测试","can_delete":false,"product_type":"c1","uid":1125284,"ip_address":"","ucode":"708CB63F472907","user_header":"https://static001.geekbang.org/account/avatar/00/11/2b/a4/4be8b562.jpg","comment_is_top":false,"comment_ctime":1527919784,"is_pvip":true,"discussion_count":3,"race_medal":0,"score":"53067527336","product_id":100002201,"comment_content":"记得之前一个领导说过，分布式系统不要相信上游系统不出问题，不能因为对方系统问题，把我们给系统影响到，几次线上重大事故都是因此而起","like_count":13,"discussions":[{"author":{"id":1112210,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/92/eaafff96.jpg","nickname":"Amos","note":"","ucode":"61DB72D99AF9EA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":230098,"discussion_content":"上下游互相不信任，这是最起码得","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1586706531,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1128121,"avatar":"https://static001.geekbang.org/account/avatar/00/11/36/b9/3b28f67c.jpg","nickname":"xueyuan","note":"","ucode":"3DE20A723EBAFE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41451,"discussion_content":"分布式系统不要相信上游系统不出问题，不能因为对方系统问题，把我们给系统影响到：降级，熔断，限量，服务超时处理。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1572429722,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1148262,"avatar":"","nickname":"delete is create","note":"","ucode":"12A64AF8D50C00","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":85935,"discussion_content":"感觉和调用别人接口一样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576583680,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229798,"user_name":"刘超","can_delete":false,"product_type":"c1","uid":1356539,"ip_address":"","ucode":"00F953D30F0A62","user_header":"https://static001.geekbang.org/account/avatar/00/14/b2/fb/fa145af3.jpg","comment_is_top":false,"comment_ctime":1593149112,"is_pvip":true,"discussion_count":2,"race_medal":0,"score":"35952887480","product_id":100002201,"comment_content":"非常不赞同接口直接返回非200错误码？应将服务异常与业务异常区分对待，服务异常使用HTTP错误码，业务异常用返回值中自定义的错误码，并返回相应错误提示。<br>不知道课主当时遇到的是什么场景，但被课主否定的那种做法在绝大多数情况下是可取的。","like_count":9,"discussions":[{"author":{"id":1319157,"avatar":"https://static001.geekbang.org/account/avatar/00/14/20/f5/6cdbfa90.jpg","nickname":"刘匿名","note":"","ucode":"CB4C1DC8C1BB31","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":315992,"discussion_content":"赞同+1\n既然分了业务层和http层，那么异常当然应该也区分开来。\n上帝的归上帝，凯撒的归凯撒。\n另外业务上有很多种异常情况，客户端需要对应的处理，都用。http状态码也满足不了需求。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1603343829,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1503506,"avatar":"https://static001.geekbang.org/account/avatar/00/16/f1/12/7dac30d6.jpg","nickname":"你为啥那么牛","note":"","ucode":"1ABC604A54A8F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295227,"discussion_content":"我觉得也是，http状态码应该属于http层面的","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1596121324,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":1468,"user_name":"丁春秋","can_delete":false,"product_type":"c1","uid":1022869,"ip_address":"","ucode":"E941A07D8992D9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9b/95/2f86ee73.jpg","comment_is_top":false,"comment_ctime":1513196163,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"35872934531","product_id":100002201,"comment_content":"耗子哥，本留言可能不完全切合文章内容哈。看了这么久您的文章，结合我自己的工作，忽然意识到了是我自己由于思维上的懒惰或别的原因把工作搞成了“苦力”，想到啥说啥，权当留言了😊。比如:1、假如我负责的模块经历了三次大的迭代，每次包含至少三次小迭代，我几乎从来没有想过做一个自动化的测试程序，做到自动化冒烟（模块对外提供restful接口，像是七牛或阿里云的创建bucket或其他对象存储的接口）。比较极端的例子，针对一个前端抓拍机离线，我的一个模块启用了针对图片上传的socket的keeplive机制，为了做测试，每次我都把那么重的球机搬到工位上，配置完网络，还要对着一段道路监控的录像模拟抓拍，搞得表面上看起来很忙碌，而且搞了很多次，居然没有想过用一个软件的方式去模拟，想来真是惭愧，本来让机器干的活，我自己干了。你说的对，应该尽可能让人控制代码，代码去控制设备。应该想尽一切办法去自动化，提高效率。回到刚才说的迭代，假如有九次迭代，我发版本前都是用别的组写的图形化的demo手动一个功能一个功能挨个手动点击操作，中间浪费了多少时间啊，还不算上代码稍微变动，就要回归冒烟（干久了都有些强迫症倾向了，老怕冒烟过不了被打回）。2、我还发现有些地方做的很不够，侯捷好像说过学从难处学，用从易处用，我自己的理解，比如学习c++，守着stl和boost的宝库，就要多看源码，当然还有其他好的开源软件，这类学习上的大的策略好像没听耗子哥讲过，希望指导以下。还有分布式程序的单元测试，自动化测试什么的，我一直感觉有很多值得挖掘的工程实践上的知识点或者套路。","like_count":9},{"had_liked":false,"id":34905,"user_name":"小羊","can_delete":false,"product_type":"c1","uid":1181968,"ip_address":"","ucode":"AD3EDB239E3EE3","user_header":"https://static001.geekbang.org/account/avatar/00/12/09/10/10026ba8.jpg","comment_is_top":false,"comment_ctime":1540350510,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27310154286","product_id":100002201,"comment_content":"亚马逊经验：<br>1.分布式服务的架构需要分布式服务的团队<br>2.查错不易<br>3.运维优先，崇尚自动化和简化<br>4.无专职运维和测试，开发做所有事情<br>5.内部服务和外部服务一致<br><br>分布式系统问题：<br>1.异构系统不标准<br>2.故障率大<br>3.服务间依赖性问题<br>4.多层架构导致运维难度加大<br><br>","like_count":7},{"had_liked":false,"id":42573,"user_name":"国诚","can_delete":false,"product_type":"c1","uid":1023292,"ip_address":"","ucode":"7BA8A4B79571BB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9d/3c/1dd238c8.jpg","comment_is_top":false,"comment_ctime":1542973087,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"18722842271","product_id":100002201,"comment_content":"比如，我看到，很多服务的 API 出错不返回 HTTP 的错误状态码，而是返回个正常的状态码 200，然后在 HTTP Body 里的 JSON 字符串中写着个：error，bla bla error message。这简直就是一种反人类的做法。我实在不明白为什么会有众多这样的设计。这让监控怎么做啊？现在，你应该使用 Swagger 的规范了。<br><br>十分汗颜，好像是这么做的","like_count":4,"discussions":[{"author":{"id":1108958,"avatar":"https://static001.geekbang.org/account/avatar/00/10/eb/de/b0cfc4a6.jpg","nickname":"干脆面君","note":"","ucode":"2E220B400D4F96","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41270,"discussion_content":"因为没有监控。所以没这个问题。我猜的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572392800,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":11194,"user_name":"测试","can_delete":false,"product_type":"c1","uid":1125284,"ip_address":"","ucode":"708CB63F472907","user_header":"https://static001.geekbang.org/account/avatar/00/11/2b/a4/4be8b562.jpg","comment_is_top":false,"comment_ctime":1527920129,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"18707789313","product_id":100002201,"comment_content":"防御编程在分布式系统中尤为重要，记得几次线上故障，归根到底还是自己没防御好","like_count":4},{"had_liked":false,"id":124988,"user_name":"架构师肖邦","can_delete":false,"product_type":"c1","uid":1334698,"ip_address":"","ucode":"AEF82E0A2124A5","user_header":"https://static001.geekbang.org/account/avatar/00/14/5d/aa/78263164.jpg","comment_is_top":false,"comment_ctime":1566035013,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14450936901","product_id":100002201,"comment_content":"200 是为了seo,如果搜索引擎发现异常状态码，会对你网站进行十分明显的排名降级","like_count":4},{"had_liked":false,"id":59280,"user_name":"Dale","can_delete":false,"product_type":"c1","uid":1010056,"ip_address":"","ucode":"DD4717C06E417D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/69/88/528442b0.jpg","comment_is_top":false,"comment_ctime":1547346090,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14432247978","product_id":100002201,"comment_content":"我们使用分布式最大的痛点在于每次出问题，需要登录到一个个组件看日志，一个接一个，非常消耗人力和时间，缺乏一个分布式组件之间的调用链的全局系统，可以方便的查找调用过程","like_count":4},{"had_liked":false,"id":24949,"user_name":"FeiFei","can_delete":false,"product_type":"c1","uid":1045586,"ip_address":"","ucode":"01CD655DD4E56C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f4/52/10c4d863.jpg","comment_is_top":false,"comment_ctime":1537232594,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14422134482","product_id":100002201,"comment_content":"统一接口规范，最好的方式就是直接使用http协议里的错误码。<br>出现故障并不可怕，可怕的是不知道需要多久修复。<br>故障应该要防患于未然，在开发初期就思考故障出现的原因。除了自己的服务，其他人的东西都不可信。","like_count":3},{"had_liked":false,"id":1400,"user_name":"子悠","can_delete":false,"product_type":"c1","uid":1000383,"ip_address":"","ucode":"070BB09477E8A8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/bf/9a982bc1.jpg","comment_is_top":false,"comment_ctime":1513053280,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"14397955168","product_id":100002201,"comment_content":"这篇文章很棒","like_count":3},{"had_liked":false,"id":225746,"user_name":"Andy","can_delete":false,"product_type":"c1","uid":1447283,"ip_address":"","ucode":"708042A35424DC","user_header":"https://static001.geekbang.org/account/avatar/00/16/15/73/e5e4b245.jpg","comment_is_top":false,"comment_ctime":1591845383,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10181779975","product_id":100002201,"comment_content":"看到这里，不得不佩服，亚马逊从一开始就站在高点，当然是正确的策略方针，格局出发点都非常好，这样的结果就是想不牛都难","like_count":2},{"had_liked":false,"id":5287,"user_name":"枫晴 andy","can_delete":false,"product_type":"c1","uid":1050830,"ip_address":"","ucode":"10ABBD7E7561A8","user_header":"https://static001.geekbang.org/account/avatar/00/10/08/ce/f7d637fb.jpg","comment_is_top":false,"comment_ctime":1523020248,"is_pvip":false,"replies":[{"id":"1533","content":"有的","user_name":"作者回复","comment_id":5287,"uid":"1001269","ip_address":"","utype":1,"ctime":1523496142,"user_name_real":"左耳朵"}],"discussion_count":1,"race_medal":0,"score":"10112954840","product_id":100002201,"comment_content":"非常喜欢分布式系统这个专题，后面能不能再写一些。","like_count":2,"discussions":[{"author":{"id":1001269,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/35/89726f5f.jpg","nickname":"左耳朵","note":"","ucode":"8A4741D677702E","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":416666,"discussion_content":"有的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1523496142,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":211137,"user_name":"Geek_CK2020","can_delete":false,"product_type":"c1","uid":1961826,"ip_address":"","ucode":"5DF4BE058F5A58","user_header":"https://static001.geekbang.org/account/avatar/00/1d/ef/62/87d9ef62.jpg","comment_is_top":false,"comment_ctime":1587901175,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5882868471","product_id":100002201,"comment_content":"“人管代码，代码管机器，人不管机器”，这个总结非常棒","like_count":1},{"had_liked":false,"id":184365,"user_name":"晓双","can_delete":false,"product_type":"c1","uid":1476696,"ip_address":"","ucode":"59CA9DB77697D5","user_header":"https://static001.geekbang.org/account/avatar/00/16/88/58/3e19586a.jpg","comment_is_top":false,"comment_ctime":1583299004,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5878266300","product_id":100002201,"comment_content":"分布式架构带来的的问题：<br>1.查找问题得难度提升<br>2.运维和维护困难<br>3.服务依赖问题<br>4.故障发生的概率更大","like_count":1},{"had_liked":false,"id":178312,"user_name":"大石头","can_delete":false,"product_type":"c1","uid":1076077,"ip_address":"","ucode":"B8C8BB45616D94","user_header":"https://static001.geekbang.org/account/avatar/00/10/6b/6d/65e3b779.jpg","comment_is_top":false,"comment_ctime":1581658868,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5876626164","product_id":100002201,"comment_content":"两个pizza能喂饱16个人马","like_count":1,"discussions":[{"author":{"id":1332352,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/sic7iatOg6ibkc8ZfWke5mKfgTK8gJ6CVLDFp4D8LuGOMMHbOnNhu81EA3Kfjg95tWqeySgJxvTQSdPkwOHAuBybg/132","nickname":"Geek_092552","note":"","ucode":"FE13A36E15DBA3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":345422,"discussion_content":"国外的pizza可能比较大","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1611719443,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":100615,"user_name":"edisonhuang","can_delete":false,"product_type":"c1","uid":1530167,"ip_address":"","ucode":"BB2F639A779F96","user_header":"https://static001.geekbang.org/account/avatar/00/17/59/37/bd2de0a4.jpg","comment_is_top":false,"comment_ctime":1559607201,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5854574497","product_id":100002201,"comment_content":"分布式架构首先需要分布式的团队架构，分布式架构的查错不容易，一个问题可能要在各个团队中流转，分布式架构减少了测试和运维团队，开发团队做所有的事情，分布式架构讲究运维优先，需要尽可能做自动化部署和运维。分布式架构在一开始就要求服务从外部和内部服务一致性，保证服务从设计开始时就可以被开放出去的。<br>分布式服务是从组织到软件工程到相应技术的一次组织和技能的迭代","like_count":1},{"had_liked":false,"id":55273,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1546085768,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5841053064","product_id":100002201,"comment_content":"很全面，切身有一点感受，链路长了，出问题的地方也多了，参与的人多了，各种各色的开发方式和冲突也会增多，感觉就是怎么管理和调度的问题，网络的联通与否不能保证，那信息的交互就不能保证了，不能保证信息的交互，自然容易生乱，变得越来越复杂。","like_count":2},{"had_liked":false,"id":54084,"user_name":"痴痴笑笑(Bruce)","can_delete":false,"product_type":"c1","uid":1355659,"ip_address":"","ucode":"569D7B23A91130","user_header":"https://static001.geekbang.org/account/avatar/00/14/af/8b/0a2fdaa4.jpg","comment_is_top":false,"comment_ctime":1545792346,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5840759642","product_id":100002201,"comment_content":"信息点很多，需要仔细看几遍","like_count":1},{"had_liked":false,"id":46264,"user_name":"ahnselina","can_delete":false,"product_type":"c1","uid":1100888,"ip_address":"","ucode":"EE3B18BB9B7C11","user_header":"https://static001.geekbang.org/account/avatar/00/10/cc/58/c593587c.jpg","comment_is_top":false,"comment_ctime":1543890838,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5838858134","product_id":100002201,"comment_content":"”一方面，信息太多等于没有信息，另一方面，SLA 要求我们定义出“Key Metrics”，也就是所谓的关键指标”，耗子哥能根据aws的具体实践，举例说明什么样的指标才是关键指标吗，以前我所在的公司运维一个项目也是列了非常多的监控指标，监控指标多得让我感觉有种找不到重点的感觉<br>","like_count":1},{"had_liked":false,"id":39186,"user_name":"Geek_fb3db2","can_delete":false,"product_type":"c1","uid":1218254,"ip_address":"","ucode":"8089B8311B6C80","user_header":"https://static001.geekbang.org/account/avatar/00/12/96/ce/8c3bdbe5.jpg","comment_is_top":false,"comment_ctime":1542205561,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5837172857","product_id":100002201,"comment_content":"文章中提到的配置管理分层 耗子叔能推荐下解决方案么 另外所有的服务都要抽像接口 会不会升级存在兼容问题","like_count":2},{"had_liked":false,"id":36132,"user_name":"成都福哥","can_delete":false,"product_type":"c1","uid":1034285,"ip_address":"","ucode":"0D3C2E5FE17E6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c8/2d/3dd499a9.jpg","comment_is_top":false,"comment_ctime":1540951208,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5835918504","product_id":100002201,"comment_content":"皓哥，请教两个问题：<br>1. 异构系统的不标准问题 这个小节提到4个问题：<br>   软件和应用不标准。 <br>   通讯协议不标准。 <br>   数据格式不标准。 <br>   开发和运维的过程和方法不标准。<br>软件的开发和运维是服务是属于team内部的，为什么1（软件和应用不标准）和4（ 开发和运维的过程和方法不标准）会成为题呢？<br>2. 用http定义的状态码，有时候并不能完全描述业务过程中的各种场景。（这应该是 http 200, 但是消息里面有自定义的 error_code 和 error_message的原因。）这个应该怎么破？<br>3. <br><br>","like_count":1},{"had_liked":false,"id":4495,"user_name":"小烟","can_delete":false,"product_type":"c1","uid":1056320,"ip_address":"","ucode":"AB7B36A11EF351","user_header":"https://static001.geekbang.org/account/avatar/00/10/1e/40/e2a2ef51.jpg","comment_is_top":false,"comment_ctime":1522147838,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5817115134","product_id":100002201,"comment_content":"耗子叔什么写本分布式系统的书啊？一定买。","like_count":1},{"had_liked":false,"id":3759,"user_name":"Sdylan","can_delete":false,"product_type":"c1","uid":1008503,"ip_address":"","ucode":"4589D0D0FA9275","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/77/423345ab.jpg","comment_is_top":false,"comment_ctime":1520512152,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5815479448","product_id":100002201,"comment_content":"｛排查线上问题的痛楚｝公司采用soa服务架构，每个团队管一摊，就出现了沟通问题，简直就是噩梦；也出现了关键业务瘫痪，导致整个系统crash了，这些都是每次发版的感受。每次都觉得好恶心，但又无法改变。不知耗子叔，如何解决这些问题呢？","like_count":1},{"had_liked":false,"id":2086,"user_name":"名贤集","can_delete":false,"product_type":"c1","uid":1033131,"ip_address":"","ucode":"220A754095BECE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c3/ab/c2ca35e6.jpg","comment_is_top":false,"comment_ctime":1515817510,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5810784806","product_id":100002201,"comment_content":"你有没有了解过akka架构，是否可以讲讲","like_count":1},{"had_liked":false,"id":1911,"user_name":"闫飞","can_delete":false,"product_type":"c1","uid":1013162,"ip_address":"","ucode":"30C782D30108D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/aa/21275b9d.jpg","comment_is_top":false,"comment_ctime":1515069162,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5810036458","product_id":100002201,"comment_content":"swagger是RESTful API的文档工具，本身不是一个规范?","like_count":1},{"had_liked":false,"id":1524,"user_name":"大斌","can_delete":false,"product_type":"c1","uid":1002183,"ip_address":"","ucode":"1434C2B0A29135","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4a/c7/ec18673b.jpg","comment_is_top":false,"comment_ctime":1513378983,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5808346279","product_id":100002201,"comment_content":"真正的高质量文章，受教了耗子哥","like_count":1,"discussions":[{"author":{"id":1780797,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/2c/3d/0bd58aa4.jpg","nickname":"Em","note":"","ucode":"32012A5C603C8A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":229580,"discussion_content":"就不能说点有用的?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586667150,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":1482,"user_name":"star001007","can_delete":false,"product_type":"c1","uid":1028915,"ip_address":"","ucode":"3CE96C61A78BCE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b3/33/cfdc2121.jpg","comment_is_top":false,"comment_ctime":1513217249,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5808184545","product_id":100002201,"comment_content":"非常好，希望多些细节的东西","like_count":1},{"had_liked":false,"id":1421,"user_name":"袁克强😅","can_delete":false,"product_type":"c1","uid":1004909,"ip_address":"","ucode":"DAC29E5FF3FA86","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/6d/75e6a9d8.jpg","comment_is_top":false,"comment_ctime":1513085406,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5808052702","product_id":100002201,"comment_content":"swagger我记得是一个API管理工具来着，是一个规范？能分享下API规范的资料吗","like_count":1},{"had_liked":false,"id":1419,"user_name":"yaoel","can_delete":false,"product_type":"c1","uid":1009071,"ip_address":"","ucode":"1B19E2D8D2E548","user_header":"https://static001.geekbang.org/account/avatar/00/0f/65/af/e6bf880d.jpg","comment_is_top":false,"comment_ctime":1513076261,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5808043557","product_id":100002201,"comment_content":"都是干货，对我充满了指导意义。我对现有系统的未来方向有了一个全面的认识。","like_count":1},{"had_liked":false,"id":1412,"user_name":"黄无由","can_delete":false,"product_type":"c1","uid":1006061,"ip_address":"","ucode":"7A013A21C1B4C8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/ed/88608728.jpg","comment_is_top":false,"comment_ctime":1513067202,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5808034498","product_id":100002201,"comment_content":"每天一篇文章就好了","like_count":1},{"had_liked":false,"id":316284,"user_name":"方勇(gopher)","can_delete":false,"product_type":"c1","uid":1290625,"ip_address":"","ucode":"D199911C4CFEF5","user_header":"https://static001.geekbang.org/account/avatar/00/13/b1/81/13f23d1e.jpg","comment_is_top":false,"comment_ctime":1634261164,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634261164","product_id":100002201,"comment_content":"分布式服务的边界如何划分，拆分粒度如何把控，服务平滑上下线，服务指标选取，服务间通信，数据传输格式，压缩方式等","like_count":0},{"had_liked":false,"id":266213,"user_name":"范","can_delete":false,"product_type":"c1","uid":1574450,"ip_address":"","ucode":"D115514B2AA5CC","user_header":"https://static001.geekbang.org/account/avatar/00/18/06/32/3de6a189.jpg","comment_is_top":false,"comment_ctime":1607243022,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607243022","product_id":100002201,"comment_content":"分布式架构是程序中的理想世界，一切都遵守规范。但是现实系统中，都是程序员写的。人的因素，带来了各种不确定。","like_count":0},{"had_liked":false,"id":238579,"user_name":"jerry","can_delete":false,"product_type":"c1","uid":1153606,"ip_address":"","ucode":"7B10F2103AA15A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eonqA0Q15ASerTNtTZSaQmCAtibj6zM2fL8ahAyVTIRPYM2Hm01SQF3icortgDiaDQGRicEb3h5GvHicoA/132","comment_is_top":false,"comment_ctime":1596203409,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596203409","product_id":100002201,"comment_content":"想讨论下解决异构系统不标准的方法。<br><br>假定问题：一百种调用方，http status有的姿势对，有的全返200，有的还返回个500，作为网关层要识别问题请求用于监控、限流、熔断等等。<br><br>原则：规范化。<br>本题按http规范走，自研协议按内部规范走，不然坑无数。<br><br>思路：Dry Run统计各服务http status找出不规范业务方，周知业务方限期规范化，反复几轮，等没问题再正式发布。<br><br>存在的问题：<br>1. 落地不易，可以借助组织或上层的帮助，实在不行也要明确职责和责任，如不提供相关业务方监控等能力。<br>2. 特别关键的业务方规范化周期长，可以考虑临时加逻辑，但还是限期改掉。","like_count":0},{"had_liked":false,"id":238325,"user_name":"你为啥那么牛","can_delete":false,"product_type":"c1","uid":1503506,"ip_address":"","ucode":"1ABC604A54A8F6","user_header":"https://static001.geekbang.org/account/avatar/00/16/f1/12/7dac30d6.jpg","comment_is_top":false,"comment_ctime":1596121877,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596121877","product_id":100002201,"comment_content":"我公司就是分布式，恶心死我了，作为一名平台层面的研发，接手了一个重要的任务。对接客户，应用层面、数据接入、中间件各种问题，我之前对中间件不太熟悉，出问题就全链路梳理一遍，持续了两年啊！hbase、kafka、hadoop、es、c++网关、redis等等，各种坑。我不做大数据研发，却要各种协调沟通，梳理逻辑，不断排雷。而我们的硬件产品经常暴雷，因为经常出现脏数据的问题。","like_count":0},{"had_liked":false,"id":232449,"user_name":"梅端","can_delete":false,"product_type":"c1","uid":1525335,"ip_address":"","ucode":"FEC08731457770","user_header":"https://static001.geekbang.org/account/avatar/00/17/46/57/fe38a6db.jpg","comment_is_top":false,"comment_ctime":1594006363,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594006363","product_id":100002201,"comment_content":"分布式架构的痛点在之前遇到过很多，但是苦于没有好的解决办法，看到皓哥的文章，感觉有很多收获，分布式架构确实很复杂，我应该给当时那个系统更多的时间，尽我所能，将其做得更好，而不是以逃避的方式选择离开。","like_count":0},{"had_liked":false,"id":220276,"user_name":"爱学习的大叔","can_delete":false,"product_type":"c1","uid":1085152,"ip_address":"","ucode":"91F9ABF1EC98D0","user_header":"https://static001.geekbang.org/account/avatar/00/10/8e/e0/847348b1.jpg","comment_is_top":false,"comment_ctime":1590219651,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590219651","product_id":100002201,"comment_content":"这个想法挺好的:这就是亚马逊服务器的实践——系统间不能读取对方的数据库，只通过服务接口耦合。这也是微服务的要求。我们不但要拆分服务，还要为每个服务拆分相应的数据库。","like_count":0},{"had_liked":false,"id":211591,"user_name":"arch","can_delete":false,"product_type":"c1","uid":1078931,"ip_address":"","ucode":"A69EBFE0520B85","user_header":"https://static001.geekbang.org/account/avatar/00/10/76/93/64ed7385.jpg","comment_is_top":false,"comment_ctime":1587986713,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1587986713","product_id":100002201,"comment_content":"针对场景采用私有协议研发可以提高安全性能，减小码流大小，降低网络带宽压力","like_count":0},{"had_liked":false,"id":211387,"user_name":"Geek_130e9e","can_delete":false,"product_type":"c1","uid":1587628,"ip_address":"","ucode":"518AAF2F228C17","user_header":"","comment_is_top":false,"comment_ctime":1587956354,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587956354","product_id":100002201,"comment_content":"有的运营商拦截非200请求，所以API都返回200body error message","like_count":0},{"had_liked":false,"id":211383,"user_name":"Geek_130e9e","can_delete":false,"product_type":"c1","uid":1587628,"ip_address":"","ucode":"518AAF2F228C17","user_header":"","comment_is_top":false,"comment_ctime":1587955903,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587955903","product_id":100002201,"comment_content":"通过课程学习，我已经对为什么需要分布式系统，而不是传统的单体架构，有了清晰的认识。并且对分布式系统的发展历程了然于心。结合亚马逊的分布式架构实践，我已彻底掌握了分布式系统架构的技术难点及应对方案。谢谢左耳大佬。","like_count":0},{"had_liked":false,"id":211307,"user_name":"丽子","can_delete":false,"product_type":"c1","uid":1473373,"ip_address":"","ucode":"1156042E0E5E79","user_header":"https://static001.geekbang.org/account/avatar/00/16/7b/5d/5e88163d.jpg","comment_is_top":false,"comment_ctime":1587947642,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587947642","product_id":100002201,"comment_content":"微服务滥用，restful接口没有抽象化，导致我们现在运维很麻烦","like_count":0},{"had_liked":false,"id":210550,"user_name":"毛毛狗","can_delete":false,"product_type":"c1","uid":1036692,"ip_address":"","ucode":"E71AB99F70C4B0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d1/94/5d28ddea.jpg","comment_is_top":false,"comment_ctime":1587786845,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587786845","product_id":100002201,"comment_content":"统一接口规范，最好的方式就是直接使用http协议里的错误码。<br>出现故障并不可怕，可怕的是不知道需要多久修复。","like_count":0},{"had_liked":false,"id":210548,"user_name":"毛毛狗","can_delete":false,"product_type":"c1","uid":1036692,"ip_address":"","ucode":"E71AB99F70C4B0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d1/94/5d28ddea.jpg","comment_is_top":false,"comment_ctime":1587786829,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587786829","product_id":100002201,"comment_content":"国内按技能分工还是主流，采用分布式服务所产生的问题的确很多。特别是对于电商，业务链条非常长，环环依赖，业务上的沟通协调、排查问题方面要花大把时间。","like_count":0},{"had_liked":false,"id":210547,"user_name":"毛毛狗","can_delete":false,"product_type":"c1","uid":1036692,"ip_address":"","ucode":"E71AB99F70C4B0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d1/94/5d28ddea.jpg","comment_is_top":false,"comment_ctime":1587786808,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587786808","product_id":100002201,"comment_content":"服务依赖链中，出现“木桶短板效应”——整个 SLA 由最差的那个服务所决定。","like_count":0},{"had_liked":false,"id":210546,"user_name":"毛毛狗","can_delete":false,"product_type":"c1","uid":1036692,"ip_address":"","ucode":"E71AB99F70C4B0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d1/94/5d28ddea.jpg","comment_is_top":false,"comment_ctime":1587786766,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587786766","product_id":100002201,"comment_content":"分布式架构下，服务是会有依赖的，一个服务依赖链上的某个服务挂掉了，可能会导致出现“多米诺骨牌”效应。","like_count":0},{"had_liked":false,"id":205220,"user_name":"闫冬","can_delete":false,"product_type":"c1","uid":1109691,"ip_address":"","ucode":"1725E869D5A3D3","user_header":"https://static001.geekbang.org/account/avatar/00/10/ee/bb/7afd6824.jpg","comment_is_top":false,"comment_ctime":1586572945,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586572945","product_id":100002201,"comment_content":"能自动化的就自动化，不通过职能划分而通过指责划分 非常赞同","like_count":0},{"had_liked":false,"id":195198,"user_name":"GZC","can_delete":false,"product_type":"c1","uid":1928513,"ip_address":"","ucode":"1A96BC07D8BC42","user_header":"https://static001.geekbang.org/account/avatar/00/1d/6d/41/256f7238.jpg","comment_is_top":false,"comment_ctime":1585145730,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585145730","product_id":100002201,"comment_content":"正在自研公司游戏的微服务分布式架构，确实问题都是留给了程序员去保证，很好的挑战！","like_count":0},{"had_liked":false,"id":190143,"user_name":"DFighting","can_delete":false,"product_type":"c1","uid":1233193,"ip_address":"","ucode":"F3BA2426FF8582","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/29/1b1234ed.jpg","comment_is_top":false,"comment_ctime":1584606613,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1584606613","product_id":100002201,"comment_content":"这篇文章看完感触不小，特别是人管代码，代码管机器，人不管机器和协作的重要性，对于做软件开发的人，单独会某一门技术其实越来越难做出好的软件了。","like_count":0},{"had_liked":false,"id":173839,"user_name":"Cryhard","can_delete":false,"product_type":"c1","uid":1589593,"ip_address":"","ucode":"E0BF4548B502CB","user_header":"https://static001.geekbang.org/account/avatar/00/18/41/59/78042964.jpg","comment_is_top":false,"comment_ctime":1579733059,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579733059","product_id":100002201,"comment_content":"“能力输出”，不就是近两年国内特别喜欢说的“赋能”吗？能够在16年前就提出，确实要敬佩亚马逊的前瞻性！","like_count":0},{"had_liked":false,"id":173001,"user_name":"meijing0114","can_delete":false,"product_type":"c1","uid":1012416,"ip_address":"","ucode":"B349D33E2F3ECC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/72/c0/b09911a0.jpg","comment_is_top":false,"comment_ctime":1579404940,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579404940","product_id":100002201,"comment_content":"对于keepalive参数调整的这个案例还是挺有体会的。之前线上服务也遇到过类似的问题，运维开启了接入层的keepalive. 应用开启了自己的keepalive，但却没人关心操作系统底层。我比较好奇的是，即使是在亚马逊，团队整体负责一个业务，那么对接入层或者操作系统底层也会把握吗？","like_count":0},{"had_liked":false,"id":166881,"user_name":"limon","can_delete":false,"product_type":"c1","uid":1323466,"ip_address":"","ucode":"2B50D4FE4652B4","user_header":"https://static001.geekbang.org/account/avatar/00/14/31/ca/f2826b76.jpg","comment_is_top":false,"comment_ctime":1577622651,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577622651","product_id":100002201,"comment_content":"分布式服务查错不容易 为什么是原因","like_count":0},{"had_liked":false,"id":163624,"user_name":"文刂 氵共 超","can_delete":false,"product_type":"c1","uid":1282813,"ip_address":"","ucode":"C2CE1512D23012","user_header":"https://static001.geekbang.org/account/avatar/00/13/92/fd/6b0e58fe.jpg","comment_is_top":false,"comment_ctime":1576757299,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576757299","product_id":100002201,"comment_content":"日常打卡，学习笔记 https:&#47;&#47;mubu.com&#47;colla&#47;2VpzaRBXm0M","like_count":0},{"had_liked":false,"id":162798,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1576590949,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1576590949","product_id":100002201,"comment_content":"分工不是问题，问题是分工后的协助是否统一和规范<br><br>这句话总结的好","like_count":0},{"had_liked":false,"id":162720,"user_name":"攻城狮Ra","can_delete":false,"product_type":"c1","uid":1681051,"ip_address":"","ucode":"4D6F97A6481166","user_header":"https://static001.geekbang.org/account/avatar/00/19/a6/9b/20b9fce3.jpg","comment_is_top":false,"comment_ctime":1576581069,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576581069","product_id":100002201,"comment_content":"文章很棒，我边谷歌边看边觉得耗子哥经验丰富所涉之广。我刚毕业入职的公司是一个制造业公司，程序员只有为数不多的三个，公司使用的也是传统的单体系统。最近在备份数据库，期间所有系统服务都无法使用，连账号都登录不上去。那么对于分布式系统而言，出现这种系统升级或者服务器出错，一般有哪些措施可以采取的","like_count":0},{"had_liked":false,"id":162514,"user_name":"slark","can_delete":false,"product_type":"c1","uid":1143574,"ip_address":"","ucode":"7E8DE962AA23A7","user_header":"https://static001.geekbang.org/account/avatar/00/11/73/16/595b0342.jpg","comment_is_top":false,"comment_ctime":1576547512,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576547512","product_id":100002201,"comment_content":"分布式不是一句口号，需要在规范，监控，运维，服务划分，数据划分上投入足够的精力来确保可以使用自动化的尽可能少的人力来保障整个系统的平稳运行。一个团队需要提高自己的分布式认识，把前面积累的经验固化传承，逐步完善我们的系统","like_count":0},{"had_liked":false,"id":162456,"user_name":"Sdylan","can_delete":false,"product_type":"c1","uid":1008503,"ip_address":"","ucode":"4589D0D0FA9275","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/77/423345ab.jpg","comment_is_top":false,"comment_ctime":1576541413,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576541413","product_id":100002201,"comment_content":"文章中SLA的概念？SLA（Service-Level Agreement），服务等级协议，指的是系统服务提供者对客户的一个承诺。一句话总结本文一切都要文档规范化。","like_count":0},{"had_liked":false,"id":162396,"user_name":"樂楽","can_delete":false,"product_type":"c1","uid":1205629,"ip_address":"","ucode":"4397D7E9360C28","user_header":"https://static001.geekbang.org/account/avatar/00/12/65/7d/3beee8a1.jpg","comment_is_top":false,"comment_ctime":1576509009,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576509009","product_id":100002201,"comment_content":"打卡第一天，遵从代码规范很重要。","like_count":0},{"had_liked":false,"id":162359,"user_name":"Geek_3.3","can_delete":false,"product_type":"c1","uid":1784431,"ip_address":"","ucode":"E8188BCBFD10AB","user_header":"","comment_is_top":false,"comment_ctime":1576504000,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576504000","product_id":100002201,"comment_content":"亚马逊经验：<br>1.分布式服务的架构需要分布式服务的团队<br>2.查错不易<br>3.运维优先，崇尚自动化和简化<br>4.无专职运维和测试，开发做所有事情<br>5.内部服务和外部服务一致<br><br>分布式系统问题：<br>1.异构系统不标准<br>2.故障率大<br>3.服务间依赖性问题<br>4.多层架构导致运维难度加大","like_count":0},{"had_liked":false,"id":162352,"user_name":"Geek_a95326","can_delete":false,"product_type":"c1","uid":1103082,"ip_address":"","ucode":"02CD9929766EE5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erhoVfUiaSk1lpZbIZ2UlIr4c7ae1U5EgYkDE7rYGY8lMauGg027C7bUV01yJiaVXRFC69iasYczQZRQ/132","comment_is_top":false,"comment_ctime":1576502995,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576502995","product_id":100002201,"comment_content":"对 系统架构中的服务依赖性问题 比较有体感，现在越来越注重业务之间的隔离，如果不能做到业务间完全的隔离，至少也要保证给重要的业务单独分配一个集群来重点保障。否则就可能出现核心业务被其他业务拖死的情况<br>","like_count":0},{"had_liked":false,"id":162336,"user_name":"aiueo","can_delete":false,"product_type":"c1","uid":1230099,"ip_address":"","ucode":"96100CD14AB501","user_header":"https://static001.geekbang.org/account/avatar/00/12/c5/13/99baef26.jpg","comment_is_top":false,"comment_ctime":1576501577,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576501577","product_id":100002201,"comment_content":"从分布式架构的演变，到分布式架构中的遇到问题，从1到n复杂度越高，遇到的问题也就越多，问题不可怕，可怕的是没有遇到问题的解决方案。","like_count":0},{"had_liked":false,"id":162314,"user_name":"Dem","can_delete":false,"product_type":"c1","uid":1032595,"ip_address":"","ucode":"C09FF65D904A75","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c1/93/e8bfb26e.jpg","comment_is_top":false,"comment_ctime":1576499111,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576499111","product_id":100002201,"comment_content":"&quot;系统间不能读取对方的数据库，只通过服务接口耦合&quot;<br>--求教对于大数据量+实时性场景下，怎么处理比较好。<br>有一种场景是A服务需要从B服务取很多数据，和自己库里的数据进行联合查询或处理后，再返回给前端。如果通过接口方式，就会性能很差。因为对实时性要求很高，通过ETL后台传输数据会有延迟。在这种情况下，很难抵挡住跨库的诱惑。。。","like_count":0},{"had_liked":false,"id":1459,"user_name":"永靖","can_delete":false,"product_type":"c1","uid":1030310,"ip_address":"","ucode":"6CE95F363AC211","user_header":"https://wx.qlogo.cn/mmopen/vi_32/2nM9PaEsM4UiaUc0R3iaiaOumFVkcugGhdUObpEBq0bEKnjF6DSTmjsibFbmJHtUphfXsFGd1ueJwMoonia3jicyPC1w/132","comment_is_top":false,"comment_ctime":1513165952,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1513165952","product_id":100002201,"comment_content":"什么时候讲讲单接口服务","like_count":0},{"had_liked":false,"id":1387,"user_name":"李志博","can_delete":false,"product_type":"c1","uid":1009109,"ip_address":"","ucode":"F3C72573B3C112","user_header":"https://static001.geekbang.org/account/avatar/00/0f/65/d5/88beb15a.jpg","comment_is_top":false,"comment_ctime":1513039156,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1513039156","product_id":100002201,"comment_content":"比较感兴趣全栈监控","like_count":0}]}