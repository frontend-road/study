{"id":72976,"title":"140 | 架构和设计","content":"<h1>课件及源码地址</h1><p><a href=\"https://gitee.com/geektime-geekbang/gravitee_lab\">https://gitee.com/geektime-geekbang/gravitee_lab</a></p>","comments":[{"had_liked":false,"id":72599,"user_name":"亚林","can_delete":false,"product_type":"c3","uid":1018972,"ip_address":"","ucode":"4A5A6D24314B79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/5c/3f164f66.jpg","comment_is_top":false,"comment_ctime":1551675751,"is_pvip":false,"replies":[{"id":26328,"content":"嗯，这个三个很关键。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1551706340,"ip_address":"","comment_id":72599,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"这节课很重要，这节课波波老师提到了自己对软件的理解，关注三个点：总体架构，数据模型和接口模型。其他都是浮云。","like_count":4,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441649,"discussion_content":"嗯，这个三个很关键。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551706340,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":191932,"user_name":"zhaoni","can_delete":false,"product_type":"c3","uid":1052158,"ip_address":"","ucode":"F317ECD6380984","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqT1ykjFve5LCsFvegqLb8MKrf6ASApsOgm8nRb5icDE7MgzKbia0zUQkxe44tKvpCwQ65QuHo4NVoQ/132","comment_is_top":false,"comment_ctime":1584804317,"is_pvip":false,"replies":[{"id":74008,"content":"对，用户的授权信息(token相关)和用户的身份信息(user identity，包括认证信息)可以在不同的地方。\n\n例如，Spring Security OAuth2是一个OAuth2授权服务器，它的用户身份模块是可以plugin的，可以对接其它的用户中心服务。\n\n还有这个hydra(https:&#47;&#47;github.com&#47;ory&#47;hydra)，它就是一个纯OAuth2&#47;OIDC服务，本身不包含用户身份，使用时需要对接其它的用户身份服务。\n\n","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1585053206,"ip_address":"","comment_id":191932,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"波老师，数据模型中，包含了用户的信息，包括用户名、密码、角色等信息。\n在整个微服务的业务模型中，可能还会有一个用户中心的服务模块。是否可以理解为，用户的验证信息放在了认证服务器中，而其余的用户信息，放在用户中心的服务中，认证服务器中仅仅存放认证信息？","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488289,"discussion_content":"对，用户的授权信息(token相关)和用户的身份信息(user identity，包括认证信息)可以在不同的地方。\n\n例如，Spring Security OAuth2是一个OAuth2授权服务器，它的用户身份模块是可以plugin的，可以对接其它的用户中心服务。\n\n还有这个hydra(https://github.com/ory/hydra)，它就是一个纯OAuth2/OIDC服务，本身不包含用户身份，使用时需要对接其它的用户身份服务。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585053206,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54860,"user_name":"王盛武","can_delete":false,"product_type":"c3","uid":1182516,"ip_address":"","ucode":"DE7EF246D3DCE8","user_header":"https://static001.geekbang.org/account/avatar/00/12/0b/34/f41d73a4.jpg","comment_is_top":false,"comment_ctime":1545972396,"is_pvip":false,"replies":[{"id":20043,"content":"我的oauth2服务器重点是流程和一个简易实现，目的是方便学员理解big picture，这个离生产级还有很远距离。这个服务器在权限控制这块也比较简单，实际使用可根据业务需要进行定制扩展，你的扩展方案就是一种，因为权限这块每家做法不同，所以oauth2协议本身也没有明确规范（也无法规范），留给用定制扩展。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1546156674,"ip_address":"","comment_id":54860,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"波波老师，\n关于数据模型这块，角色和scope有些疑问：\n前置条件：\n1、角色权限有RBAC模型，基于角色的权限管理系统， user role permission，其中user和role是多对多的关系；\n2、我的系统里已经有了   auth_user  auth_role  auth_user_role  auth_role_permission   auth_permission表；\n\n问题：\n1、实践中是把oauth2的表换成使用我原有的表？ 还是保持两种表并行？ \n比如我的叫auth_permission， 然后也保留oauth_scope表；\n2、spring security的权限指的是角色，oauth_scope里放的是权限；\nspring security的具体权限控制，是使用角色还是使用权限呢？\noauth2的具体权限控制，是使用角色还是使用权限呢？\n3、课程里的数据模型没有体现出role scope user的多对多关系？ \n      是处于oauth权限控制逻辑和传统的RBAC权限模型分开两套逻辑去考虑的吗？\n4、oauth_user表和auth_user表是否整合成使用auth_user表？ 还是两张表做冗余同时持续维护？","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434589,"discussion_content":"我的oauth2服务器重点是流程和一个简易实现，目的是方便学员理解big picture，这个离生产级还有很远距离。这个服务器在权限控制这块也比较简单，实际使用可根据业务需要进行定制扩展，你的扩展方案就是一种，因为权限这块每家做法不同，所以oauth2协议本身也没有明确规范（也无法规范），留给用定制扩展。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546156674,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":50000,"user_name":"冰封无名","can_delete":false,"product_type":"c3","uid":1081310,"ip_address":"","ucode":"EB212C047FD415","user_header":"https://static001.geekbang.org/account/avatar/00/10/7f/de/7d17e15b.jpg","comment_is_top":false,"comment_ctime":1544832530,"is_pvip":false,"replies":[{"id":18454,"content":"我的架构图仅是简化演示案例，实际生产大系统，可根据需要将授权和鉴权服务分开。如果是对外开放场景，client注册主要面向第三方应用，登录用于授权码或简化模式，面向资源拥有者。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1545138600,"ip_address":"","comment_id":50000,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"上面的架构图中包含了鉴权服务，在比较大点到系统中，授权和鉴权是不是应该不同的微服务？感觉这里的用户注册，登录，退出接口面向的使用者不一样？注册接口面向的是第三方应用，登录和退出接口面向的是资源拥有者？","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432835,"discussion_content":"我的架构图仅是简化演示案例，实际生产大系统，可根据需要将授权和鉴权服务分开。如果是对外开放场景，client注册主要面向第三方应用，登录用于授权码或简化模式，面向资源拥有者。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545138600,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}