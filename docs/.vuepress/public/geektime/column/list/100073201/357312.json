{"id":357312,"title":"11 | 索引：怎么提高查询的速度？","content":"<p>你好，我是朱晓峰。</p><p>在我们的超市信息系统刚刚开始运营的时候，因为数据量很少，每一次的查询都能很快拿到结果。但是，系统运转时间长了以后，数据量不断地累积，变得越来越庞大，很多查询的速度就变得特别慢。这个时候，我们就采用了MySQL 提供的高效访问数据的方法—— 索引，有效地解决了这个问题，甚至之前的一个需要8秒钟才能完成的查询，现在只用0.3秒就搞定了，速度提升了20多倍。</p><p>那么，索引到底是啥呢？该怎么使用呢？这节课，我们就来聊一聊。</p><h1>索引是什么？</h1><p>如果你去过图书馆，应该会知道图书馆的检索系统。图书馆为图书准备了检索目录，包括书名、书号、对应的位置信息，包括在哪个区、哪个书架、哪一层。我们可以通过书名或书号，快速获知书的位置，拿到需要的书。</p><p>MySQL中的索引，就相当于图书馆的检索目录，它是帮助MySQL系统快速检索数据的一种存储结构。我们可以在索引中按照查询条件，检索索引字段的值，然后快速定位数据记录的位置，这样就不需要遍历整个数据表了。而且，数据表中的字段越多，表中数据记录越多，速度提升越是明显。</p><p>我来举个例子，进一步解释下索引的作用。这里要用到销售流水表（demo.trans），表结构如下：</p><pre><code>mysql&gt; describe demo.trans;\n+---------------+----------+------+-----+---------+-------+\n| Field         | Type     | Null | Key | Default | Extra |\n+---------------+----------+------+-----+---------+-------+\n| itemnumber    | int      | YES  | MUL | NULL    |       |\n| quantity      | text     | YES  |     | NULL    |       |\n| price         | text     | YES  |     | NULL    |       |\n| transdate     | datetime | YES  | MUL | NULL    |       |\n| actualvalue   | text     | YES  |     | NULL    |       |\n| barcode       | text     | YES  |     | NULL    |       |\n| cashiernumber | int      | YES  | MUL | NULL    |       |\n| branchnumber  | int      | YES  | MUL | NULL    |       |\n| transuniqueid | text     | YES  |     | NULL    |       |\n+---------------+----------+------+-----+---------+-------+\n9 rows in set (0.02 sec)\n</code></pre><!-- [[[read_end]]] --><p>某个门店的销售流水表有400万条数据，现在我要查看一下商品编号是100的商品在2020-12-12这一天的销售情况，查询代码如下：</p><pre><code>mysql&gt; SELECT\n-&gt; quantity,price,transdate\n-&gt; FROM\n-&gt; demo.trans\n-&gt; WHERE\n-&gt; transdate &gt; '2020-12-12'\n-&gt; AND transdate &lt; '2020-12-13'\n-&gt; AND itemnumber = 100;\n+----------+--------+---------------------+\n| quantity | price | transdate |\n+----------+--------+---------------------+\n| 1.000 | 220.00 | 2020-12-12 19:45:36 |\n| 1.000 | 220.00 | 2020-12-12 08:56:37 |\n+----------+--------+---------------------+\n2 rows in set (8.08 sec)\n</code></pre><p>可以看到，结果总共有2条记录，可是却花了8秒钟，非常慢。同时，这里我没有做表的关联，这只是单表的查询，而且只是一个门店几个月的数据而已。而总部是把所有门店的数据都汇总到一起，查询速度更慢，这样的查询效率，我们肯定是不能接受的。</p><p>怎么解决这个问题呢？这时，我们就可以给数据表添加索引。</p><h1>单字段索引</h1><p>MySQL支持单字段索引和组合索引，而单字段索引比较常用，我们先来学习下创建单字段索引的方法。</p><h2>如何创建单字段索引？</h2><p>创建单字段索引，一般有3种方式：</p><ol>\n<li>你可以通过CREATE语句直接给已经存在的表创建索引，这种方式比较简单，我就不多解释了；</li>\n<li>可以在创建表的同时创建索引；</li>\n<li>可以通过修改表来创建索引。</li>\n</ol><p>直接给数据表创建索引的语法如下：</p><pre><code>CREATE INDEX 索引名 ON TABLE 表名 (字段);\n</code></pre><p>创建表的同时创建索引的语法如下所示：</p><pre><code>CREATE TABLE 表名\n(\n字段 数据类型,\n….\n{ INDEX | KEY } 索引名(字段)\n)\n</code></pre><p>修改表时创建索引的语法如下所示：</p><pre><code>ALTER TABLE 表名 ADD { INDEX | KEY } 索引名 (字段);\n</code></pre><p>这里有个小问题要提醒你一下，给表设定主键约束或者唯一性约束的时候，MySQL会自动创建主键索引或唯一性索引。这也是我建议你在创建表的时候，一定要定义主键的原因之一。</p><p>举个小例子，我们可以给表demo.trans创建索引如下：</p><pre><code>mysql&gt; CREATE INDEX index_trans ON demo.trans (transdate(10));\nQuery OK, 0 rows affected (1 min 8.71 sec)\nRecords: 0 Duplicates: 0 Warnings: 0\n \nmysql&gt; SELECT\n-&gt; quantity,price,transdate\n-&gt; FROM\n-&gt; demo.trans\n-&gt; WHERE\n-&gt; transdate &gt; '2020-12-12'\n-&gt; AND transdate &lt; '2020-12-13'\n-&gt; AND itemnumber = 100;\n+----------+--------+---------------------+\n| quantity | price | transdate |\n+----------+--------+---------------------+\n| 1.000 | 220.00 | 2020-12-12 19:45:36 |\n| 1.000 | 220.00 | 2020-12-12 08:56:37 |\n+----------+--------+---------------------+\n2 rows in set (0.30 sec)\n</code></pre><p>可以看到，加了索引之后，这一次我们只用了0.3秒，比没有索引的时候，快了20多倍。这么大的差距，说明索引对提高查询的速度确实很有帮助。那么，索引是如何做到这一点的呢？下面我们来学习下单字段索引的作用原理。</p><h2>单字段索引的作用原理</h2><p>要知道索引是怎么起作用的，我们需要借助MySQL中的EXPLAIN 这个关键字。</p><p>EXPLAIN关键字能够查看SQL语句的执行细节，包括表的加载顺序，表是如何连接的，以及索引使用情况等。</p><pre><code>mysql&gt; EXPLAIN SELECT\n-&gt; quantity,price,transdate\n-&gt; FROM\n-&gt; demo.trans\n-&gt; WHERE\n-&gt; transdate &gt; '2020-12-12'\n-&gt; AND transdate &lt; '2020-12-13'\n-&gt; AND itemnumber = 100;\n+----+-------------+-------------+------------+-------+-------------------+-------------------+---------+------+------+----------+-----------------------------------------------+\n| id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra |\n+----+-------------+-------------+------------+-------+-------------------+-------------------+---------+------+------+----------+-----------------------------------------------+\n| 1 | SIMPLE | trans | NULL | range | index_trans | index_trans | 6 | NULL | 5411 | 10.00 | Using index condition; Using where; Using MRR |\n+----+-------------+-------------+------------+-------+-------------------+-------------------+---------+------+------+----------+-----------------------------------------------+\n1 row in set, 1 warning (0.00 sec)\n</code></pre><p>我来解释下代码里的关键内容。</p><ul>\n<li>type=range：表示使用索引查询特定范围的数据记录。</li>\n<li>rows=5411：表示需要读取的记录数。</li>\n<li>possible_keys=index_trans：表示可以选择的索引是index_trans。</li>\n<li>key=index_trans：表示实际选择的索引是index_trans。</li>\n<li>extra=Using index condition;Using where;Using MRR：这里面的信息对SQL语句的执行细节做了进一步的解释，包含了3层含义：第一个是执行时使用了索引，第二个是执行时通过WHERE条件进行了筛选，第三个是使用了顺序磁盘读取的策略。</li>\n</ul><p>通过这个小例子，我们可以发现，有了索引之后，MySQL在执行SQL语句的时候多了一种优化的手段。也就是说，在查询的时候，可以先通过查询索引快速定位，然后再找到对应的数据进行读取，这样就大大提高了查询的速度。</p><h2>如何选择索引字段？</h2><p>在刚刚的查询中，我们是选择transdate（交易时间）字段来当索引字段，你可能会问，为啥不选别的字段呢？这是因为，交易时间是查询条件。MySQL可以按照交易时间的限定“2020年12月12日”，在索引中而不是数据表中寻找满足条件的索引记录，再通过索引记录中的指针来定位数据表中的数据。这样，索引就能发挥作用了。</p><p>不过，你有没有想过，itemnumber字段也是查询条件，能不能用itemnumber来创建一个索引呢？我们来试一试：</p><pre><code>mysql&gt; CREATE INDEX index_trans_itemnumber ON demo.trans (itemnumber);\nQuery OK, 0 rows affected (43.88 sec)\nRecords: 0 Duplicates: 0 Warnings: 0\n</code></pre><p>然后看看效果：</p><pre><code>mysql&gt; SELECT\n-&gt; quantity,price,transdate\n-&gt; FROM\n-&gt; demo.trans\n-&gt; WHERE\n-&gt; transdate &gt; '2020-12-12'      -- 对交易时间的筛选，可以在transdate的索引中定位\n-&gt; AND transdate &lt; '2020-12-13'\n-&gt; AND itemnumber = 100;         -- 对商品编号的筛选，可以在itemnumber的索引中定位\n+----------+--------+---------------------+\n| quantity | price | transdate |\n+----------+--------+---------------------+\n| 1.000 | 220.00 | 2020-12-12 19:45:36 |\n| 1.000 | 220.00 | 2020-12-12 08:56:37 |\n+----------+--------+---------------------+\n2 rows in set (0.38 sec)\n</code></pre><p>我们发现，用itemnumber创建索引之后，查询速度跟之前差不多，基本在同一个数量级。</p><p>这是为啥呢？我们来看看MySQL的运行计划：</p><pre><code>mysql&gt; EXPLAIN SELECT\n-&gt; quantity,price,transdate\n-&gt; FROM\n-&gt; demo.trans\n-&gt; WHERE\n-&gt; transdate &gt; '2020-12-12'\n-&gt; AND transdate &lt; '2020-12-13'\n-&gt; AND itemnumber = 100;                 -- 对itemnumber 进行限定\n+----+-------------+-------------+------------+------+------------------------------------------------+------------------------------+---------+-------+------+----------+-------------+\n| id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra |\n+----+-------------+-------------+------------+------+------------------------------------------------+------------------------------+---------+-------+------+----------+-------------+\n| 1 | SIMPLE | trans | NULL | ref | index_trans,index_trans_itemnumber | index_trans_itemnumber | 5 | const | 1192 | 0.14 | Using where |\n+----+-------------+-------------+------------+------+------------------------------------------------+------------------------------+---------+-------+------+----------+-------------+\n1 row in set, 1 warning (0.01 sec)\n</code></pre><p>我们发现，“possible_keys= index_trans,index_trans_itemnumber ”，就是说MySQL认为可以选择的索引确实有2个，一个是用transdate字段创建的索引index_trans，另一个是用itemnumber字段创建的索引index_trans_itemnumber。</p><p>key= index_trans_itemnumber， 说明MySQL实际选择使用的索引是itemnumber字段创建的索引index_trans_itemnumber。而rows=1192，就表示实际读取的数据记录数只有1192个，比用transdate创建的索引index_trans的实际读取记录数要少，这就是MySQL选择使用itemnumber索引的原因。</p><p><strong>所以，我建议你在选择索引字段的时候，要选择那些经常被用做筛选条件的字段</strong>。这样才能发挥索引的作用，提升检索的效率。</p><h1>组合索引</h1><p>在实际工作中，有时会遇到比较复杂的数据表，这种表包括的字段比较多，经常需要通过不同的字段筛选数据，特别是数据表中包含多个层级信息。比如我们的销售流水表就包含了门店信息、收款机信息和商品信息这3个层级信息。门店对应多个门店里的收款机，每个收款机对应多个从这台收款机销售出去的商品。我们经常要把这些层次信息作为筛选条件，来进行查询。这个时候单字段的索引往往不容易发挥出索引的最大功效，可以使用组合索引。</p><p>现在，先看看单字段索引的效果，我们分别用branchnumber和cashiernumber来创建索引：</p><pre><code>mysql&gt; CREATE INDEX index_trans_branchnumber ON demo.trans (branchnumber);\nQuery OK, 0 rows affected (41.49 sec)\nRecords: 0 Duplicates: 0 Warnings: 0\n\n mysql&gt; CREATE INDEX index_trans_cashiernumber ON demo.trans (cashiernumber);\nQuery OK, 0 rows affected (41.95 sec)\nRecords: 0 Duplicates: 0 Warnings: 0\n</code></pre><p>有了门店编号和收款机编号的索引，现在我们就尝试一下以门店编号、收款机编号和商品编号为查询条件，来验证一下索引是不是起了作用。</p><pre><code>mysql&gt; SELECT\n-&gt; itemnumber,quantity,price,transdate\n-&gt; FROM\n-&gt; demo.trans\n-&gt; WHERE\n-&gt; branchnumber = 11 AND cashiernumber = 1 -- 门店编号和收款机号为筛选条件\n-&gt; AND itemnumber = 100;    -- 商品编号为筛选条件\n+------------+----------+--------+---------------------+\n| itemnumber | quantity | price | transdate |\n+------------+----------+--------+---------------------+\n| 100 | 1.000 | 220.00 | 2020-07-11 09:18:35 |\n| 100 | 1.000 | 220.00 | 2020-09-06 21:21:58 |\n| 100 | 1.000 | 220.00 | 2020-11-10 15:00:11 |\n| 100 | 1.000 | 220.00 | 2020-12-25 14:28:06 |\n| 100 | 1.000 | 220.00 | 2021-01-09 20:21:44 |\n| 100 | 1.000 | 220.00 | 2021-02-08 10:45:05 |\n+------------+----------+--------+---------------------+\n6 rows in set (0.31 sec)\n</code></pre><p>结果有6条记录，查询时间是0.31秒，跟只创建商品编号索引差不多。下面我们就来查看一下执行计划，看看新建的索引有没有起作用。</p><pre><code>mysql&gt; EXPLAIN SELECT\n-&gt; itemnumber,quantity,price,transdate\n-&gt; FROM\n-&gt; demo.trans\n-&gt; WHERE\n-&gt; branchnumber = 11 AND cashiernumber = 1\n-&gt; AND itemnumber = 100;\n+----+-------------+-------+------------+------+---------------------------------------------------------------------------+------------------------+---------+-------+------+----------+-------------+\n| id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra |\n+----+-------------+-------+------------+------+---------------------------------------------------------------------------+------------------------+---------+-------+------+----------+-------------+\n| 1 | SIMPLE | trans | NULL | ref | index_trans_itemnumber,index_trans_branchnumber,index_trans_cashiernumber | index_trans_itemnumber | 5 | const | 1192 | 20.50 | Using where |\n+----+-------------+-------+------------+------+---------------------------------------------------------------------------+------------------------+---------+-------+------+----------+-------------+\n1 row in set, 1 warning (0.01 sec)\n</code></pre><p>MySQL有3个索引可以用，分别是用branchnumber创建的index_trans_branchnumber、用cashiernumber创建的index_trans_cashiernumber和用itemnumber创建的index_trans_itemnumber。</p><p>最后，MySQL还是选择了index_trans_itemnumber，实际筛选的记录数是1192，花费了0.31秒。</p><p>为什么MySQL会这样选呢？这是因为，优化器现在有3种索引可以用，分别是商品编号索引、门店编号索引和收款机号索引。优化器发现，商品编号索引实际搜索的记录数最少，所以最后就选择了这种索引。</p><p>所以，<strong>如果有多个索引，而这些索引的字段同时作为筛选字段出现在查询中的时候，MySQL会选择使用最优的索引来执行查询操作</strong>。</p><p>能不能让这几个筛选字段同时发挥作用呢？这就用到组合索引了。组合索引，就是包含多个字段的索引。MySQL最多支持由16个字段组成的组合索引。</p><h2>如何创建组合索引？</h2><p>创建组合索引的语法结构与创建单字段索引相同，不同的是相比单字段索引，组合索引使用了多个字段。</p><p>直接给数据表创建索引的语法如下：</p><pre><code>CREATE INDEX 索引名 ON TABLE 表名 (字段1，字段2，...);\n</code></pre><p>创建表的同时创建索引：</p><pre><code>CREATE TABLE 表名\n(\n字段 数据类型,\n….\n{ INDEX | KEY } 索引名(字段1，字段2，...)\n)\n</code></pre><p>修改表时创建索引：</p><pre><code>ALTER TABLE 表名 ADD { INDEX | KEY } 索引名 (字段1，字段2，...);\n</code></pre><p>现在，针对刚刚的查询场景，我们就可以通过创建组合索引，发挥多个字段的筛选作用。</p><p>具体做法是，我们给销售流水表创建一个由3个字段branchnumber、cashiernumber、itemnumber组成的组合索引，如下所示：</p><pre><code>mysql&gt; CREATE INDEX Index_branchnumber_cashiernumber_itemnumber ON demo.trans (branchnumber,cashiernumber,itemnumber);\nQuery OK, 0 rows affected (59.26 sec)\nRecords: 0 Duplicates: 0 Warnings: 0\n</code></pre><p>有了组合索引，刚刚的查询速度就更快了：</p><pre><code>mysql&gt; SELECT\n-&gt; itemnumber,quantity,price,transdate\n-&gt; FROM\n-&gt; demo.trans\n-&gt; WHERE\n-&gt; branchnumber = 11 AND cashiernumber = 1\n-&gt; AND itemnumber = 100;\n+------------+----------+--------+---------------------+\n| itemnumber | quantity | price | transdate |\n+------------+----------+--------+---------------------+\n| 100 | 1.000 | 220.00 | 2020-07-11 09:18:35 |\n| 100 | 1.000 | 220.00 | 2020-09-06 21:21:58 |\n| 100 | 1.000 | 220.00 | 2020-11-10 15:00:11 |\n| 100 | 1.000 | 220.00 | 2020-12-25 14:28:06 |\n| 100 | 1.000 | 220.00 | 2021-01-09 20:21:44 |\n| 100 | 1.000 | 220.00 | 2021-02-08 10:45:05 |\n+------------+----------+--------+---------------------+\n6 rows in set (0.00 sec)\n</code></pre><p>几乎是瞬间就完成了，不超过10毫秒。我们看看MySQL的执行计划：</p><pre><code>mysql&gt; EXPLAIN SELECT\n-&gt; itemnumber,quantity,price,transdate\n-&gt; FROM\n-&gt; demo.trans\n-&gt; WHERE                         -- 同时筛选门店编号、收款机号和商品编号\n-&gt; branchnumber = 11 AND cashiernumber = 1 \n-&gt; AND itemnumber = 100;\n+----+-------------+-------+------------+------+-----------------------------------------------------------------------------------------------------------------------+---------------------------------------------+---------+-------------------+------+----------+-------+\n| id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra |\n+----+-------------+-------+------------+------+-----------------------------------------------------------------------------------------------------------------------+---------------------------------------------+---------+-------------------+------+----------+-------+\n| 1 | SIMPLE | trans | NULL | ref | index_trans_itemnumber,index_trans_branchnumber,index_trans_cashiernumber,index_branchnumber_cashiernumber_itemnumber | index_branchnumber_cashiernumber_itemnumber | 15 | const,const,const | 6 | 100.00 | NULL |\n+----+-------------+-------+------------+------+-----------------------------------------------------------------------------------------------------------------------+---------------------------------------------+---------+-------------------+------+----------+-------+\n1 row in set, 1 warning (0.01 sec)\n</code></pre><p>这个查询，MySQL可以用到的索引有4个：</p><ul>\n<li>index_trans_itemnumber；</li>\n<li>index_trans_branchnumber；</li>\n<li>index_trans_cashiernumber；</li>\n<li>我们刚才用branchnumber、cashiernumber和itemnumber创建的组合索引Index_branchnumber_cashiernumber_itemnumber。</li>\n</ul><p>MySQL选择了组合索引，筛选后读取的记录只有6条。组合索引被充分利用，筛选更加精准，所以非常快。</p><h2>组合索引的原理</h2><p>下面我就来讲讲组合索引的工作原理。</p><p><strong>组合索引的多个字段是有序的，遵循左对齐的原则</strong>。比如我们创建的组合索引，排序的方式是branchnumber、cashiernumber和itemnumber。因此，筛选的条件也要遵循从左向右的原则，如果中断，那么，断点后面的条件就没有办法利用索引了。</p><p>比如说我们刚才的条件，branchnumber = 11 AND cashiernumber = 1 AND itemnumber = 100，包含了从左到右的所有字段，所以可以最大限度使用全部组合索引。</p><p>假如把条件换成“cashiernumber = 1 AND itemnumber = 100”，由于我们的组合索引是按照branchnumber、cashiernumber和itemnumber的顺序建立的，最左边的字段branchnumber没有包含到条件当中，中断了，所以这个条件完全不能使用组合索引。</p><p>类似的，如果筛选的是一个范围，如果没有办法无法精确定位，也相当于中断。比如“branchnumber &gt; 10 AND cashiernumber = 1 AND itemnumber = 100”这个条件，只能用到组合索引中branchnumber&gt;10的部分，后面的索引就都用不上了。我们来看看MySQL的运行计划：</p><pre><code>mysql&gt; EXPLAIN SELECT\n-&gt; itemnumber,quantity,price,transdate\n-&gt; FROM\n-&gt; demo.trans\n-&gt; WHERE\n-&gt; branchnumber &gt; 10 AND cashiernumber = 1 AND itemnumber = 100;\n+----+-------------+-------+------------+------+-----------------------------------------------------------------------------------------------------------------------+------------------------+---------+-------+------+----------+-------------+\n| id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra |\n+----+-------------+-------+------------+------+-----------------------------------------------------------------------------------------------------------------------+------------------------+---------+-------+------+----------+-------------+\n| 1 | SIMPLE | trans | NULL | ref | index_trans_itemnumber,index_trans_branchnumber,index_trans_cashiernumber,index_branchnumber_cashiernumber_itemnumber | index_trans_itemnumber | 5 | const | 1192 | 20.50 | Using where |\n+----+-------------+-------+------------+------+-----------------------------------------------------------------------------------------------------------------------+------------------------+---------+-------+------+----------+-------------+\n1 row in set, 1 warning (0.02 sec)\n</code></pre><p>果然，MySQL没有选择组合索引，而是选择了用itemnumber创建的普通索引index_trans_itemnumber。因为<strong>如果只用组合索引的一部分，效果没有单字段索引那么好</strong>。</p><h1>总结</h1><p>这节课，我们学习了什么是索引、如何创建和使用索引。索引可以非常显著地提高数据查询的速度，数据表里包含的数据越多，效果越显著。我们应该选择经常被用做筛选条件的字段来创建索引，这样才能通过索引缩小实际读取数据表中数据的范围，发挥出索引的优势。如果有多个筛选的字段，而且经常一起出现，也可以用多个字段来创建组合索引。</p><p>如果你要删除索引，就可以用：</p><pre><code>DROP INDEX 索引名 ON 表名;\n</code></pre><p>当然， 有的索引不能用这种方法删除，比如主键索引，你就必须通过修改表来删除索引。语法如下：</p><pre><code>ALTER TABLE 表名 DROP PRIMARY KEY；\n</code></pre><p>最后，我来跟你说说索引的成本。索引能够提升查询的效率，但是建索引也是有成本的，主要有2个方面，一个存储空间的开销，还有一个是数据操作上的开销。</p><ul>\n<li>存储空间的开销，是指索引需要单独占用存储空间。</li>\n<li>数据操作上的开销，是指一旦数据表有变动，无论是插入一条新数据，还是删除一条旧的数据，甚至是修改数据，如果涉及索引字段，都需要对索引本身进行修改，以确保索引能够指向正确的记录。</li>\n</ul><p>因此，索引也不是越多越好，创建索引有存储开销和操作开销，需要综合考虑。</p><h1>思考题</h1><p>假如我有一个单品销售统计表，包括门店编号、销售日期（年月日）、商品编号、销售数量、销售金额、成本、毛利，而用户经常需要对销售情况进行查询，你会对这个表建什么样的索引呢？为什么？</p><p>欢迎在留言区写下你的思考和答案，我们一起交流讨论。如果你觉得今天的内容对你有所帮助，也欢迎你分享给你的朋友或同事，我们下节课见。</p>","neighbors":{"left":{"article_title":"10 | 如何进行数学计算、字符串处理和条件判断？","id":356966},"right":{"article_title":"12 | 事务：怎么确保关联操作正确执行？","id":357322}},"comments":[{"had_liked":false,"id":289358,"user_name":"朱晓峰","can_delete":false,"product_type":"c1","uid":2356905,"ip_address":"","ucode":"D2F84F44329C29","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","comment_is_top":true,"comment_ctime":1618988808,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"9.2233720513586995e+18","product_id":100073201,"comment_content":"你好，我是朱晓峰，下面我就来公布一下上节课思考题的答案：<br><br>上节课，我们学习了数学函数、字符串函数和条件判断函数。下面是思考题的答案：<br><br>计算会员积分，我们可以假设actualvalue&gt;=0，这样的话就可以使用求余函数MOD来代替FLOOR:<br><br>FLOOR(acutalvalue)替换成actualvalue - MOD(actualvalue,1)","like_count":4},{"had_liked":false,"id":286269,"user_name":"giteebravo","can_delete":false,"product_type":"c1","uid":1005290,"ip_address":"","ucode":"C087E8D6B5A98B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/ea/32608c44.jpg","comment_is_top":false,"comment_ctime":1617237175,"is_pvip":false,"replies":[{"id":"106362","content":"这里的10，表示用日期时间的前10位数据创建索引","user_name":"作者回复","user_name_real":"朱晓峰","uid":"2356905","ctime":1621493845,"ip_address":"","comment_id":286269,"utype":1}],"discussion_count":4,"race_medal":1,"score":"35976975543","product_id":100073201,"comment_content":"<br> CREATE INDEX index_trans ON demo.trans (transdate(10));<br><br>——括号里面的 10 有什么具体含义吗？","like_count":9,"discussions":[{"author":{"id":2268397,"avatar":"https://static001.geekbang.org/account/avatar/00/22/9c/ed/4106267f.jpg","nickname":"心新","note":"","ucode":"CBF6E3B4D47DA1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":363658,"discussion_content":"只取前面10个字段","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1617254988,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517930,"discussion_content":"这里的10，表示用日期时间的前10位数据创建索引","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1621493845,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2680555,"avatar":"https://static001.geekbang.org/account/avatar/00/28/e6/eb/7b7c0101.jpg","nickname":"彭彬","note":"","ucode":"5AF4F4D7163DFE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":395204,"discussion_content":"同上，执行不成功","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632272186,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1144439,"avatar":"https://static001.geekbang.org/account/avatar/00/11/76/77/aa3ee2c5.jpg","nickname":"极客时间小韭菜","note":"","ucode":"EA6DF8B2C37CC1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375713,"discussion_content":"datetime类型不支持指定长度。 \nmysql> describe trans;\n+------------+----------+------+-----+---------+-------+\n| Field      | Type     | Null | Key | Default | Extra |\n+------------+----------+------+-----+---------+-------+\n| itemnumber | int      | YES  |     | NULL    |       |\n| transdate  | datetime | YES  |     | NULL    |       |\n+------------+----------+------+-----+---------+-------+\n\nmysql> CREATE INDEX index_trans ON demo.trans (transdate(10));\nERROR 1089 (HY000): Incorrect prefix key; the used key part isn&#39;t a string, the used length is longer than the key part, or the storage engine doesn&#39;t support unique prefix keys","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621828222,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":286279,"user_name":"Devo","can_delete":false,"product_type":"c1","uid":1325667,"ip_address":"","ucode":"79583A5F52FFA9","user_header":"https://static001.geekbang.org/account/avatar/00/14/3a/63/a94f339e.jpg","comment_is_top":false,"comment_ctime":1617239093,"is_pvip":false,"replies":[{"id":"106364","content":"建议还是先创建单字段索引，使用率比较高，如果创建联合索引，可以考虑把门店编号放在最前面，原因是一般查询会遵循从大范围到小范围逐步递进的原则","user_name":"作者回复","user_name_real":"朱晓峰","uid":"2356905","ctime":1621494253,"ip_address":"","comment_id":286279,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18797108277","product_id":100073201,"comment_content":"我会选择（商品编号，[门店编号]，销售日期）的联合索引，主要依据是商品编号一般是等值查询且区分度较高，门店编号这个字段我觉得可以看具体查询场景选择，销售日期一般是范围，放在末位直接扫链表效果较好，请老师指正，谢谢！","like_count":5,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517932,"discussion_content":"建议还是先创建单字段索引，使用率比较高，如果创建联合索引，可以考虑把门店编号放在最前面，原因是一般查询会遵循从大范围到小范围逐步递进的原则","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1621494253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2680555,"avatar":"https://static001.geekbang.org/account/avatar/00/28/e6/eb/7b7c0101.jpg","nickname":"彭彬","note":"","ucode":"5AF4F4D7163DFE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":395207,"discussion_content":"单品销售，可否不要引入商品编号？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632272263,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":313071,"user_name":"彭彬","can_delete":false,"product_type":"c1","uid":2680555,"ip_address":"","ucode":"5AF4F4D7163DFE","user_header":"https://static001.geekbang.org/account/avatar/00/28/e6/eb/7b7c0101.jpg","comment_is_top":false,"comment_ctime":1632270279,"is_pvip":false,"replies":[{"id":"120721","content":"这个地方确实错了，应该是“CREATE INDEX index_trans ON demo.trans (transdate);   ”，索引应该使用字段名。我已经请后台进行改正，非常感谢你指出我的错误。","user_name":"作者回复","user_name_real":"编辑","uid":"2356905","ctime":1642303271,"ip_address":"","comment_id":313071,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5927237575","product_id":100073201,"comment_content":"CREATE INDEX index_trans ON demo.trans (transdate(10));    <br>执行上述语句出错，提示transdate不是字符串","like_count":1,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546347,"discussion_content":"这个地方确实错了，应该是“CREATE INDEX index_trans ON demo.trans (transdate);   ”，索引应该使用字段名。我已经请后台进行改正，非常感谢你指出我的错误。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642303271,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1379704,"avatar":"https://static001.geekbang.org/account/avatar/00/15/0d/78/aa5f920d.jpg","nickname":"Bird","note":"","ucode":"D79AA5BA747890","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":410076,"discussion_content":"同问，是数据库版本问题么？我在8的版本上执行也报错：1089 - Incorrect prefix key; the used key part isn&#39;t a string, the used length is longer than the key part, or the storage engine doesn&#39;t support unique prefix keys, Time: 0.000000s","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635588826,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":286413,"user_name":"lesserror","can_delete":false,"product_type":"c1","uid":1351076,"ip_address":"","ucode":"25A54D1165FCF6","user_header":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","comment_is_top":false,"comment_ctime":1617286927,"is_pvip":false,"replies":[{"id":"106366","content":"说得好","user_name":"作者回复","user_name_real":"朱晓峰","uid":"2356905","ctime":1621498225,"ip_address":"","comment_id":286413,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5912254223","product_id":100073201,"comment_content":"总结一下这一讲的收获吧。<br><br>MySQL 最多支持由 16 个字段组成的组合索引。<br><br>组合索引的所有组成字段都被查询条件用到，且符合最左匹配原则，查询效率有可能会比单字段索引快！<br><br>关于索引这块的知识，建议去了解一下B+树的相关概念，会更容易理解索引的内部运行机制。比单纯背结论更加有效，并且会根深蒂固！<br><br>","like_count":1,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517976,"discussion_content":"说得好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621498225,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2673150,"avatar":"","nickname":"Geek_b53def","note":"","ucode":"EDE265F46F397A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386782,"discussion_content":"太浅显","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627795854,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":286266,"user_name":"giteebravo","can_delete":false,"product_type":"c1","uid":1005290,"ip_address":"","ucode":"C087E8D6B5A98B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/ea/32608c44.jpg","comment_is_top":false,"comment_ctime":1617236815,"is_pvip":false,"replies":[{"id":"106361","content":"你是不是说课上的例子，使用index_trans索引比使用index_trans_itemnumber要更快呢？课上的例子中，优化器除了使用索引之外，使用index_trans索引的时候，还使用了MRR（顺序磁盘读取策略），这样综合的效果比单纯使用index_trans_itemnumber更快一些。","user_name":"作者回复","user_name_real":"朱晓峰","uid":"2356905","ctime":1621493111,"ip_address":"","comment_id":286266,"utype":1}],"discussion_count":1,"race_medal":1,"score":"5912204111","product_id":100073201,"comment_content":"<br>在为字段 itemnumber 创建索引 index_trans_itemnumber 后，实际读取的记录数下降了 80% (与使用索引 index_trans 相比)，但为什么查询速度反而下降了 0.08 秒呢？<br>","like_count":2,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517928,"discussion_content":"你是不是说课上的例子，使用index_trans索引比使用index_trans_itemnumber要更快呢？课上的例子中，优化器除了使用索引之外，使用index_trans索引的时候，还使用了MRR（顺序磁盘读取策略），这样综合的效果比单纯使用index_trans_itemnumber更快一些。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621493111,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":333659,"user_name":"SharpBB","can_delete":false,"product_type":"c1","uid":2014573,"ip_address":"","ucode":"D30C5B798B8E8C","user_header":"https://static001.geekbang.org/account/avatar/00/1e/bd/6d/7010f98e.jpg","comment_is_top":false,"comment_ctime":1644461828,"is_pvip":true,"replies":[{"id":"123490","content":"好的","user_name":"作者回复","user_name_real":"编辑","uid":"2356905","ctime":1647075375,"ip_address":"","comment_id":333659,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1644461828","product_id":100073201,"comment_content":"单字段索引<br>\tcreate index 索引名 on table 表名(字段);<br>\t注意<br>\t\t创建主键约束&#47;唯一约束 会自动创建主键索引 唯一性索引<br>\t经常被筛选的字段当索引<br>组合索引<br>\tcreate index 索引名 on table 表名(字段1,字段2);<br>删除索引<br>\tDROP INDEX 索引名 ON 表名;<br>如果是主键 不能直接删除 得先去掉主键<br>\tALTER TABLE 表名 DROP PRIMARY KEY；","like_count":0,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555803,"discussion_content":"好的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647075375,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":324179,"user_name":"青石雨巷","can_delete":false,"product_type":"c1","uid":2847714,"ip_address":"","ucode":"E083F53DC51811","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXKSvfaeicogzRnFuricd5MibNibYSgq20J6l0Cgicghv6wcuj8I2FEBdfxg1o1uJZjuUHKgQcukf9LpA/132","comment_is_top":false,"comment_ctime":1638327415,"is_pvip":true,"replies":[{"id":"120732","content":"说得很对，这里“TABLE”不是关键字，容易产生误解，不够严谨，我已经请后台去掉“TABLE”，感谢你的指正。","user_name":"作者回复","user_name_real":"编辑","uid":"2356905","ctime":1642305667,"ip_address":"","comment_id":324179,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1638327415","product_id":100073201,"comment_content":"<br>CREATE INDEX 索引名 ON TABLE 表名 (字段);<br><br>这里TABLE字段要删掉，容易让别人产生误解","like_count":0,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546362,"discussion_content":"说得很对，这里“TABLE”不是关键字，容易产生误解，不够严谨，我已经请后台去掉“TABLE”，感谢你的指正。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642305667,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320342,"user_name":"木木","can_delete":false,"product_type":"c1","uid":1091401,"ip_address":"","ucode":"14D8A2979D284E","user_header":"https://static001.geekbang.org/account/avatar/00/10/a7/49/9a2c8cfd.jpg","comment_is_top":false,"comment_ctime":1636266772,"is_pvip":false,"replies":[{"id":"116474","content":"课程中用到的数据都是实际项目中的数据，是无法提供的。","user_name":"作者回复","user_name_real":"朱晓峰","uid":"2356905","ctime":1636617089,"ip_address":"","comment_id":320342,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1636266772","product_id":100073201,"comment_content":"老师你好，咱课程中提到的数据有提供吗？<br><br>方便跟着操作练习","like_count":0,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529964,"discussion_content":"课程中用到的数据都是实际项目中的数据，是无法提供的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636617089,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1285614,"avatar":"https://static001.geekbang.org/account/avatar/00/13/9d/ee/2d02a9c0.jpg","nickname":"水哥","note":"","ucode":"9706E7F188A082","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412955,"discussion_content":"这没有数据看着很头痛","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636341020,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":313081,"user_name":"彭彬","can_delete":false,"product_type":"c1","uid":2680555,"ip_address":"","ucode":"5AF4F4D7163DFE","user_header":"https://static001.geekbang.org/account/avatar/00/28/e6/eb/7b7c0101.jpg","comment_is_top":false,"comment_ctime":1632272644,"is_pvip":false,"replies":[{"id":"116478","content":"可以用到A部分索引","user_name":"作者回复","user_name_real":"朱晓峰","uid":"2356905","ctime":1636622117,"ip_address":"","comment_id":313081,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1632272644","product_id":100073201,"comment_content":"老师：如果创建索引的顺序是 A,B,C;  而查询的where子句中是 C,B,A的顺序，那是不是索引就失效了","like_count":0,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527220,"discussion_content":"可以用到A部分索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636622117,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2230620,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/icMqfQ4vNwWorhr1Us0ICD1uibicHfuZcbibNMgtvWj4LucV3AXxRdPRgHvG6x9820SicbzAgSK7eXc8HuaY9KRJuCw/132","nickname":"管松松","note":"","ucode":"C2F1DD592D4AC9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532951,"discussion_content":"我觉得联合索引的命中，与筛选字段的顺序无关，因为优化器会帮你排序的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637738042,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310134,"user_name":"SevenMonths","can_delete":false,"product_type":"c1","uid":1201022,"ip_address":"","ucode":"62A9740FBD1FAE","user_header":"https://static001.geekbang.org/account/avatar/00/12/53/7e/b6829040.jpg","comment_is_top":false,"comment_ctime":1630495114,"is_pvip":true,"replies":[{"id":"113736","content":"可以参考MySQL的官方文档，获取所需的细节。","user_name":"作者回复","user_name_real":"朱晓峰","uid":"2356905","ctime":1632798371,"ip_address":"","comment_id":310134,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1630495114","product_id":100073201,"comment_content":"这里留个坑。以后回来补上 explain 慢查询的思维导图。","like_count":0,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526139,"discussion_content":"可以参考MySQL的官方文档，获取所需的细节。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632798371,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":305163,"user_name":"重洋","can_delete":false,"product_type":"c1","uid":1698679,"ip_address":"","ucode":"B896A81B579BEA","user_header":"https://static001.geekbang.org/account/avatar/00/19/eb/77/ffd16123.jpg","comment_is_top":false,"comment_ctime":1627866492,"is_pvip":false,"replies":[{"id":"112581","content":"是的，这里要注意的是组合索引与字段的顺序有关。","user_name":"作者回复","user_name_real":"朱晓峰","uid":"2356905","ctime":1630895324,"ip_address":"","comment_id":305163,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1627866492","product_id":100073201,"comment_content":"对字段a、b、c建立组合索引，选择a、b为查询条件时，此时组合索引的效果相当于只对a、b建立组合索引吗？","like_count":0,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":524303,"discussion_content":"是的，这里要注意的是组合索引与字段的顺序有关。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630895324,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":298658,"user_name":"大聖","can_delete":false,"product_type":"c1","uid":2485664,"ip_address":"","ucode":"5FD991D883BE78","user_header":"https://static001.geekbang.org/account/avatar/00/25/ed/a0/cc89c128.jpg","comment_is_top":false,"comment_ctime":1624252899,"is_pvip":false,"replies":[{"id":"110377","content":"组合索引（branchnumber,casheirnumber,itemnumber)，遵循左对齐的原则，现在branchnumber&gt;10，那么就意味着第一个字段给出的是一个区间，MySQL无法对后面的字段进行定位，也就没有办法用到后面字段的索引了。","user_name":"作者回复","user_name_real":"朱晓峰","uid":"2356905","ctime":1627869194,"ip_address":"","comment_id":298658,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1624252899","product_id":100073201,"comment_content":"文中还有一个部分不理解 - “比如“branchnumber &gt; 10 AND cashiernumber = 1 AND itemnumber = 100”这个条件，只能用到组合索引中 branchnumber&gt;10 的部分，后面的索引就都用不上了” 为什么组合索引中用到branchnumber&gt;10以后就中断了，cashiernumber和itemnumber不是也是组合索引的一部分么？","like_count":0,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522201,"discussion_content":"组合索引（branchnumber,casheirnumber,itemnumber)，遵循左对齐的原则，现在branchnumber&amp;gt;10，那么就意味着第一个字段给出的是一个区间，MySQL无法对后面的字段进行定位，也就没有办法用到后面字段的索引了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627869194,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2680555,"avatar":"https://static001.geekbang.org/account/avatar/00/28/e6/eb/7b7c0101.jpg","nickname":"彭彬","note":"","ucode":"5AF4F4D7163DFE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":395213,"discussion_content":"同问：实践中有很多乐死的范围查询，请问\n又如何处理索引呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632272446,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2485664,"avatar":"https://static001.geekbang.org/account/avatar/00/25/ed/a0/cc89c128.jpg","nickname":"大聖","note":"","ucode":"5FD991D883BE78","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387327,"discussion_content":"这里我可能对索引底层不了解。因为如果是单字段索引，那么区间查询的时候也会用到索引，不明白为什么到了组合索引以后，遇到区间就中断了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628126698,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":298657,"user_name":"大聖","can_delete":false,"product_type":"c1","uid":2485664,"ip_address":"","ucode":"5FD991D883BE78","user_header":"https://static001.geekbang.org/account/avatar/00/25/ed/a0/cc89c128.jpg","comment_is_top":false,"comment_ctime":1624252804,"is_pvip":false,"replies":[{"id":"110374","content":"由于TEXT类型是不定长的，不能创建索引，是不是搞错了，用的其他类型？","user_name":"作者回复","user_name_real":"朱晓峰","uid":"2356905","ctime":1627868293,"ip_address":"","comment_id":298657,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1624252804","product_id":100073201,"comment_content":"我测试的时候，我的trans表里数据很少，只有不到10条，我发现一个现象：如果transdate是text类型，那么根据transdate &gt; &#39;2018-01-01&#39;的时候，用explain查看发现索引没有起作用，但是如果换成datetime类型，索引就起作用，这个是为什么呢？","like_count":0,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522200,"discussion_content":"由于TEXT类型是不定长的，不能创建索引，是不是搞错了，用的其他类型？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627868293,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2485664,"avatar":"https://static001.geekbang.org/account/avatar/00/25/ed/a0/cc89c128.jpg","nickname":"大聖","note":"","ucode":"5FD991D883BE78","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387329,"discussion_content":"另外，上面也有人提到了，datetime类型不能按照transdate(10)这种方式创建索引，但是文中前面定义的transdate是datetime类型，后面为什么可以用 CREATE INDEX index_trans ON demo.trans (transdate(10));来创建呢。我这里会报错：\n\n[HY000][1089] Incorrect prefix key; the used key part isn&#39;t a string, the used length is longer than the key part, or the storage engine doesn&#39;t support unique prefix keys\n ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628126937,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2485664,"avatar":"https://static001.geekbang.org/account/avatar/00/25/ed/a0/cc89c128.jpg","nickname":"大聖","note":"","ucode":"5FD991D883BE78","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387324,"discussion_content":"创建索引的时候也是根据前10位创建的索引，如下：\n\nCREATE TABLE `trans` (\n  `transactionno` int NOT NULL AUTO_INCREMENT,\n  `memberid` int DEFAULT NULL,\n  `itemnumber` int DEFAULT NULL,\n  `quantity` decimal(10,3) DEFAULT NULL,\n  `price` decimal(10,2) DEFAULT NULL,\n  `salesvalue` decimal(10,2) DEFAULT NULL,\n  `cardno` char(8) DEFAULT NULL,\n  `transdate` text,\n  PRIMARY KEY (`transactionno`),\n  KEY `index_trans` (`transdate`(10))\n) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\n\n\n但是这种情况下，查询的时候就没有用到索引，不明白为啥。\nmysql> explain select * from demo.trans where transdate > &#39;2018-01-01&#39;;\n+----+-------------+-------+------------+-------+---------------+-------------+---------+------+------+----------+-------------+\n| id | select_type | table | partitions | type  | possible_keys | key         | key_len | ref  | rows | filtered | Extra       |\n+----+-------------+-------+------------+-------+---------------+-------------+---------+------+------+----------+-------------+\n|  1 | SIMPLE      | trans | NULL       | range | index_trans   | index_trans | 43      | NULL |    4 |   100.00 | Using where |\n+----+-------------+-------+------------+-------+---------------+-------------+---------+------+------+----------+-------------+","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628126580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":288720,"user_name":"ly","can_delete":false,"product_type":"c1","uid":1478117,"ip_address":"","ucode":"6DD7DEECF39AF8","user_header":"https://static001.geekbang.org/account/avatar/00/16/8d/e5/f3df7b02.jpg","comment_is_top":false,"comment_ctime":1618640646,"is_pvip":false,"replies":[{"id":"106430","content":"第一，组合索引遵循左对齐的原则，所以，应该按照字段在查询条件中使用的频度高低，从左到右顺序创建组合索引。<br>第二，组合索引中，遇到范围查询的字段，意味着后面的字段就不起作用了，所以等值查询字段尽量放在前面是正确的","user_name":"作者回复","user_name_real":"朱晓峰","uid":"2356905","ctime":1621559720,"ip_address":"","comment_id":288720,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1618640646","product_id":100073201,"comment_content":"老师您好，我理解的联合索引的创建将等值查询字段放前面，范围查询放后面，这样理解对吗，那如果都是等值查询，怎么样确定字段先后顺序能使索引最优","like_count":0,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518716,"discussion_content":"第一，组合索引遵循左对齐的原则，所以，应该按照字段在查询条件中使用的频度高低，从左到右顺序创建组合索引。\n第二，组合索引中，遇到范围查询的字段，意味着后面的字段就不起作用了，所以等值查询字段尽量放在前面是正确的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621559720,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1459477,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEIuQYkSNV6m9j6nWYMTIH8r7uze6lTkaiaibVfDn6FQvwaDbTgkezn7WLuyRmnUY32Ohg4exfriasZtw/132","nickname":"纯平碎了","note":"","ucode":"C89CA731883143","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377382,"discussion_content":"如果一个联合索引有4个字段组成，在查询的时候前两个字段是等值查询，后两个字段是范围查询，是不是就不能使用这个索引了？请老师帮忙解惑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622624304,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":286427,"user_name":"giteebravo","can_delete":false,"product_type":"c1","uid":1005290,"ip_address":"","ucode":"C087E8D6B5A98B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/ea/32608c44.jpg","comment_is_top":false,"comment_ctime":1617292584,"is_pvip":false,"replies":[{"id":"106367","content":"谢谢鼓励","user_name":"作者回复","user_name_real":"朱晓峰","uid":"2356905","ctime":1621498239,"ip_address":"","comment_id":286427,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1617292584","product_id":100073201,"comment_content":"<br>小结部分总结得太好了，从索引的好处、使用方法，到如何选择索引字段，以及索引的使用成本，都覆盖到了。<br>","like_count":0,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517983,"discussion_content":"谢谢鼓励","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621498239,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":286260,"user_name":"右耳朵猫咪","can_delete":false,"product_type":"c1","uid":1014984,"ip_address":"","ucode":"3AB186CC780FBB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/c8/8627f5c1.jpg","comment_is_top":false,"comment_ctime":1617235650,"is_pvip":true,"replies":[{"id":"106360","content":"执行计划的key是指MySQL优化器决定使用的索引，不会是多个索引的，possible_key是可以使用的所有索引，MySQL优化器会从中选择一个使用","user_name":"作者回复","user_name_real":"朱晓峰","uid":"2356905","ctime":1621492660,"ip_address":"","comment_id":286260,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1617235650","product_id":100073201,"comment_content":"如果执行计划的key是多个单字段索引，它和一个单字段索引有什么区别呢？","like_count":0,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517924,"discussion_content":"执行计划的key是指MySQL优化器决定使用的索引，不会是多个索引的，possible_key是可以使用的所有索引，MySQL优化器会从中选择一个使用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621492660,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005290,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/56/ea/32608c44.jpg","nickname":"giteebravo","note":"","ucode":"C087E8D6B5A98B","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":363863,"discussion_content":"\n索引只会命中一个吧？\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1617292322,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}