{"id":95883,"title":"13 | 加法器：如何像搭乐高一样搭电路（上）？","content":"<p>上一讲，我们看到了如何通过电路，在计算机硬件层面设计最基本的单元，门电路。我给你看的门电路非常简单，只能做简单的 “与（AND）”“或（OR）”“NOT（非）”和“异或（XOR）”，这样最基本的单比特逻辑运算。下面这些门电路的标识，你需要非常熟悉，后续的电路都是由这些门电路组合起来的。</p><p><img src=\"https://static001.geekbang.org/resource/image/94/f6/94194480bcfd3b5366e4649ee80de4f6.jpg?wh=2812*1176\" alt=\"\"></p><p>这些基本的门电路，是我们计算机硬件端的最基本的“积木”，就好像乐高积木里面最简单的小方块。看似不起眼，但是把它们组合起来，最终可以搭出一个星球大战里面千年隼这样的大玩意儿。我们今天包含十亿级别晶体管的现代CPU，都是由这样一个一个的门电路组合而成的。</p><p><img src=\"https://static001.geekbang.org/resource/image/2f/b7/2f20b26b1ed7f9d26c5a0858ad6770b7.jpg?wh=800*533\" alt=\"\"></p><center><a href=\"https://www.flickr.com/photos/stickkim/7053151615/in/photolist-bKgffk-ogjPUr-bK5EB2-9KVuH1-cTubW1-fmT46W-fmCXpM-q4xNPg-ASbuvs-cTubiG-dzY1Ge-i9gZiN-cTuciQ-ijVpAw-aAnA68-fmCZvg-yfnA5X-zobNFw-jt28Zq-afa117-Av96ec-ntmgkW-rMD4KE-CgYrKU-L6YMgi-KgSyBJ-81yeEt-2s3w16-ReD2-VWSj-46LiG-cgy2zY-hLG2X1-aZZ6Rc-ac5vyy-21LNDAq-21vQ14P-46KYN-22NLSaf-q6QoLS-4BNrBP-4jY2Bj-nD232N-aYaGWX-XwJrFZ-569dUN-wYEBV5-cpHkWN-bazBbP-4BSGGJ\">图片来源</a></center><h2>异或门和半加器</h2><p>我们看到的基础门电路，输入都是两个单独的bit，输出是一个单独的bit。如果我们要对2个8 位（bit）的数，计算与、或、非这样的简单逻辑运算，其实很容易。只要连续摆放8个开关，来代表一个8位数。这样的两组开关，从左到右，上下单个的位开关之间，都统一用“与门”或者“或门”连起来，就是两个8位数的AND或者OR的运算了。</p><p>比起AND或者OR这样的电路外，要想实现整数的加法，就需要组建稍微复杂一点儿的电路了。</p><p>我们先回归一个最简单的8位的无符号整数的加法。这里的“无符号”，表示我们并不需要使用补码来表示负数。无论高位是“0”还是“1”，这个整数都是一个正数。</p><!-- [[[read_end]]] --><p>我们很直观就可以想到，要表示一个8位数的整数，简单地用8个bit，也就是8个像上一讲的电路开关就好了。那2个8位整数的加法，就是2排8个开关。加法得到的结果也是一个8位的整数，所以又需要1排8位的开关。要想实现加法，我们就要看一下，通过什么样的门电路，能够连接起加数和被加数，得到最后期望的和。</p><p><img src=\"https://static001.geekbang.org/resource/image/28/66/281879883d285478b7771f576f4b3066.jpg?wh=3312*1164\" alt=\"\"></p><center><span class=\"reference\">其实加法器就是想一个办法把这三排开关电路连起来</span></center><p>要做到这一点，我们先来看看，我们人在计算加法的时候一般会怎么操作。二进制的加法和十进制没什么区别，所以我们一样可以用<strong>列竖式</strong>来计算。我们仍然是从右到左，一位一位进行计算，只是把从逢10进1变成逢2进1。</p><p><img src=\"https://static001.geekbang.org/resource/image/18/d1/1854b98fcac2c6bf4949ac5e2247d9d1.jpg?wh=2203*604\" alt=\"\"></p><p>你会发现，其实计算一位数的加法很简单。我们先就看最简单的个位数。输入一共是4种组合，00、01、10、11。得到的结果，也不复杂。</p><p>一方面，我们需要知道，加法计算之后的个位是什么，在输入的两位是00和11的情况下，对应的输出都应该是0；在输入的两位是10和01的情况下，输出都是1。结果你会发现，这个输入和输出的对应关系，其实就是我在上一讲留给你的思考题里面的“异或门（XOR）”。</p><p>讲与、或、非门的时候，我们很容易就能和程序里面的“AND（通常是&amp;符号）”“ OR（通常是 | 符号）”和“ NOT（通常是 !符号）”对应起来。可能你没有想过，为什么我们会需要“异或（XOR）”，这样一个在逻辑运算里面没有出现的形式，作为一个基本电路。<strong>其实，异或门就是一个最简单的整数加法，所需要使用的基本门电路</strong>。</p><p>算完个位的输出还不算完，输入的两位都是11的时候，我们还需要向更左侧的一位进行进位。那这个就对应一个与门，也就是有且只有在加数和被加数都是1的时候，我们的进位才会是1。</p><p>所以，通过一个异或门计算出个位，通过一个与门计算出是否进位，我们就通过电路算出了一个一位数的加法。于是，<strong>我们把两个门电路打包，给它取一个名字，就叫作半加器</strong>（Half Adder）。</p><p><img src=\"https://static001.geekbang.org/resource/image/58/1e/5860fd8c4ace079b40e66b9568d2b81e.jpg?wh=3732*1001\" alt=\"\"></p><center><span class=\"reference\">半加器的电路演示</span></center><h2>全加器</h2><p>你肯定很奇怪，为什么我们给这样的电路组合，取名叫半加器（Half Adder）？莫非还有一个全加器（Full Adder）么？你猜得没错。半加器可以解决个位的加法问题，但是如果放到二位上来说，就不够用了。我们这里的竖式是个二进制的加法，所以如果从右往左数，第二列不是十位，我称之为“二位”。对应的再往左，就应该分别是四位、八位。</p><p>二位用一个半加器不能计算完成的原因也很简单。因为二位除了一个加数和被加数之外，还需要加上来自个位的进位信号，一共需要三个数进行相加，才能得到结果。但是我们目前用到的，无论是最简单的门电路，还是用两个门电路组合而成的半加器，输入都只能是两个bit，也就是两个开关。那我们该怎么办呢？</p><p>实际上，解决方案也并不复杂。<strong>我们用两个半加器和一个或门，就能组合成一个全加器</strong>。第一个半加器，我们用和个位的加法一样的方式，得到是否进位X和对应的二个数加和后的结果Y，这样两个输出。然后，我们把这个加和后的结果Y，和个位数相加后输出的进位信息U，再连接到一个半加器上，就会再拿到一个是否进位的信号V和对应的加和后的结果W。</p><p><img src=\"https://static001.geekbang.org/resource/image/3f/2a/3f11f278ba8f24209a56fb3ee1ca9e2a.jpg?wh=4122*1458\" alt=\"\"></p><center><span class=\"reference\">全加器就是两个半加器加上一个或门</span></center><p>这个W就是我们在二位上留下的结果。我们把两个半加器的进位输出，作为一个或门的输入连接起来，只要两次加法中任何一次需要进位，那么在二位上，我们就会向左侧的四位进一位。因为一共只有三个bit相加，即使3个bit都是1，也最多会进一位。</p><p>这样，通过两个半加器和一个或门，我们就得到了一个，能够接受进位信号、加数和被加数，这样三个数组成的加法。这就是我们需要的全加器。</p><p>有了全加器，我们要进行对应的两个8 bit数的加法就很容易了。我们只要把8个全加器串联起来就好了。个位的全加器的进位信号作为二位全加器的输入信号，二位全加器的进位信号再作为四位的全加器的进位信号。这样一层层串接八层，我们就得到了一个支持8位数加法的算术单元。如果要扩展到16位、32位，乃至64位，都只需要多串联几个输入位和全加器就好了。</p><p><img src=\"https://static001.geekbang.org/resource/image/68/a1/68cd38910f526c149d232720b82b6ca1.jpeg?wh=3812*1355\" alt=\"\"></p><center><span class=\"reference\">8位加法器可以由8个全加器串联而成</span></center><p>唯一需要注意的是，对于这个全加器，在个位，我们只需要用一个半加器，或者让全加器的进位输入始终是0。因为个位没有来自更右侧的进位。而最左侧的一位输出的进位信号，表示的并不是再进一位，而是表示我们的加法是否溢出了。</p><p>这也是很有意思的一点。以前我自己在了解二进制加法的时候，一直有这么个疑问，既然int这样的16位的整数加法，结果也是16位数，那我们怎么知道加法最终是否溢出了呢？因为结果也只存得下加法结果的16位数。我们并没有留下一个第17位，来记录这个加法的结果是否溢出。</p><p>看到全加器的电路设计，相信你应该明白，在整个加法器的结果中，我们其实有一个电路的信号，会标识出加法的结果是否溢出。我们可以把这个对应的信号，输出给到硬件中其他标志位里，让我们的计算机知道计算的结果是否溢出。而现代计算机也正是这样做的。这就是为什么你在撰写程序的时候，能够知道你的计算结果是否溢出在硬件层面得到的支持。</p><h2>总结延伸</h2><p>相信到这里，你应该已经体会到了，通过门电路来搭建算术计算的一个小功能，就好像搭乐高积木一样。</p><p>我们用两个门电路，搭出一个半加器，就好像我们拿两块乐高，叠在一起，变成一个长方形的乐高，这样我们就有了一个新的积木组件，柱子。我们再用两个柱子和一个长条的积木组合一下，就变成一个积木桥。然后几个积木桥串接在一起，又成了积木楼梯。</p><p>当我们想要搭建一个摩天大楼，我们需要很多很多楼梯。但是这个时候，我们已经不再关注最基础的一节楼梯是怎么用一块块积木搭建起来的。这其实就是计算机中，无论软件还是硬件中一个很重要的设计思想，<strong>分层</strong>。</p><p><img src=\"https://static001.geekbang.org/resource/image/8a/94/8a7740f698236fda4e5f900d88fdf194.jpg?wh=2372*1771\" alt=\"\"></p><p>从简单到复杂，我们一层层搭出了拥有更强能力的功能组件。在上面的一层，我们只需要考虑怎么用下一层的组件搭建出自己的功能，而不需要下沉到更低层的其他组件。就像你之前并没有深入学习过计算机组成原理，一样可以直接通过高级语言撰写代码，实现功能。</p><p>在硬件层面，我们通过门电路、半加器、全加器一层层搭出了加法器这样的功能组件。我们把这些用来做算术逻辑计算的组件叫作ALU，也就是算术逻辑单元。当进一步打造强大的CPU时，我们不会再去关注最细颗粒的门电路，只需要把门电路组合而成的ALU，当成一个能够完成基础计算的黑盒子就可以了。</p><p>以此类推，后面我们讲解CPU的设计和数据通路的时候，我们以ALU为一个基础单元来解释问题，也就够了。</p><h2>补充阅读</h2><p>出于性能考虑，实际CPU里面使用的加法器，比起我们今天讲解的电路还有些差别，会更复杂一些。真实的加法器，使用的是一种叫作<strong>超前进位加法器</strong>的东西。你可以找到北京大学在Coursera上开设的《计算机组成》课程中的Video-306 “加法器优化”一节，了解一下超前进位加法器的实现原理，以及我们为什么要使用它。</p><h2>课后思考</h2><p>这一讲，我给你详细讲解了无符号数的加法器是怎么通过电路搭建出来的。那么，如果是使用补码表示的有符号数，这个加法器是否可以实现正数加负数这样的运算呢？如果不行，我们应该怎么搭建对应的电路呢？</p><p>欢迎你在留言区写下你的思考和疑问，和大家一起探讨。你也可以把今天的文章分享给你朋友，和他一起学习和进步。</p><p></p>","neighbors":{"left":{"article_title":"12 | 理解电路：从电报机到门电路，我们如何做到“千里传信”？","id":95868},"right":{"article_title":"14 | 乘法器：如何像搭乐高一样搭电路（下）？","id":97477}},"comments":[{"had_liked":false,"id":98090,"user_name":"不记年","can_delete":false,"product_type":"c1","uid":1045945,"ip_address":"","ucode":"287E40C68356DC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f5/b9/888fe350.jpg","comment_is_top":false,"comment_ctime":1558914236,"is_pvip":false,"replies":[{"id":"35460","content":"不记年同学你好，<br><br>你的思考很对，实际的加法器，并不是由全加器串联组成的，在14讲里面我们可以看到为了减少门延迟的损失，实际高位的计算结果直接来自低位的组合电路里面的输入。<br><br>封装意味着我们提供了更多的“简单电路”或者说“简单指令”来操作。但这也意味着同样复杂的操作需要更多条指令。<br><br>这个也是为什么在计算机体系结构里面会有 RISC 和 CISC 这样的复杂&#47;精简 指令之争。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1559122065,"ip_address":"","comment_id":98090,"utype":1}],"discussion_count":4,"race_medal":0,"score":"254961984700","product_id":100026001,"comment_content":"基本电路&gt;门电路&gt;全加器&gt;加法器，经历了三层的封装，分层可以带来很多好处，但经过这么多层的封装是不是也带来了性能的损耗，所以我想对于像加法器这样经常用到的电路，可不可以打破分层，直接通过最底层的电路来实现，以达到性能的最优呢。在进一步，性能和封装之间是否也存在着取舍呢","like_count":60,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451550,"discussion_content":"不记年同学你好，\n\n你的思考很对，实际的加法器，并不是由全加器串联组成的，在14讲里面我们可以看到为了减少门延迟的损失，实际高位的计算结果直接来自低位的组合电路里面的输入。\n\n封装意味着我们提供了更多的“简单电路”或者说“简单指令”来操作。但这也意味着同样复杂的操作需要更多条指令。\n\n这个也是为什么在计算机体系结构里面会有 RISC 和 CISC 这样的复杂/精简 指令之争。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559122065,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1345288,"avatar":"https://static001.geekbang.org/account/avatar/00/14/87/08/3eedbdc5.jpg","nickname":"日新月异","note":"","ucode":"6504293D4B604F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549950,"discussion_content":"引出了“ RISC 和 CISC 这样的复杂/精简 指令之争”非常好！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644308809,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2186026,"avatar":"https://static001.geekbang.org/account/avatar/00/21/5b/2a/3c5bedc9.jpg","nickname":"小帅","note":"","ucode":"5DE78DC9EFCA49","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548540,"discussion_content":"徐老师真的讲的好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643251375,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2451374,"avatar":"","nickname":"Geek_3e5f2b","note":"","ucode":"12B7FF53D14CC4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":359998,"discussion_content":"你好老师！我不太理解为什么“同样复杂的操作会需要更多条指令”呢？如果进行了封装就无法在使用未封装的简单指令了吗？只能通过封装后的复杂指令去间接实现以前的简单指令吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616337754,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":98004,"user_name":"张立昊Leon","can_delete":false,"product_type":"c1","uid":1321002,"ip_address":"","ucode":"2D80F71C0BC83E","user_header":"https://static001.geekbang.org/account/avatar/00/14/28/2a/173ea0e1.jpg","comment_is_top":false,"comment_ctime":1558869796,"is_pvip":false,"replies":[{"id":"35485","content":"👍","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1559124354,"ip_address":"","comment_id":98004,"utype":1}],"discussion_count":4,"race_medal":0,"score":"173357561636","product_id":100026001,"comment_content":"负数用补码表示的话加法就和正数的加法没什么区别了，只是结果如果是负数的话，也是补码。发生溢出会有问题，最高位符号有可能会变，需要额外的标记位","like_count":40,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451509,"discussion_content":"👍","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1559124354,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2354332,"avatar":"https://static001.geekbang.org/account/avatar/00/23/ec/9c/b4acd768.jpg","nickname":"Sarah","note":"","ucode":"FDC8A0D30EAE28","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378733,"discussion_content":"后半句，发生溢出会有问题~~ 没太懂","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1623377203,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2440338,"avatar":"https://static001.geekbang.org/account/avatar/00/25/3c/92/81fa306d.jpg","nickname":"张Dave","note":"","ucode":"0E8B6FDEB7505B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2354332,"avatar":"https://static001.geekbang.org/account/avatar/00/23/ec/9c/b4acd768.jpg","nickname":"Sarah","note":"","ucode":"FDC8A0D30EAE28","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":564052,"discussion_content":"假设2个都是负数，最高位为1，那么加法结果肯定是负数。但是由于进位原因，最高位这个时候可能为0，也就是可能理解为正数了，进位上的1，即表示进位，又表示负数，就不清晰了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1650155261,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":378733,"ip_address":""},"score":564052,"extra":""},{"author":{"id":2354332,"avatar":"https://static001.geekbang.org/account/avatar/00/23/ec/9c/b4acd768.jpg","nickname":"Sarah","note":"","ucode":"FDC8A0D30EAE28","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2440338,"avatar":"https://static001.geekbang.org/account/avatar/00/25/3c/92/81fa306d.jpg","nickname":"张Dave","note":"","ucode":"0E8B6FDEB7505B","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":581604,"discussion_content":"谢谢解释","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658885113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":564052,"ip_address":""},"score":581604,"extra":""}]}]},{"had_liked":false,"id":123384,"user_name":"DreamItPossible","can_delete":false,"product_type":"c1","uid":1254103,"ip_address":"","ucode":"232FCE2BB22012","user_header":"https://static001.geekbang.org/account/avatar/00/13/22/d7/fed46140.jpg","comment_is_top":false,"comment_ctime":1565664755,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"65990174195","product_id":100026001,"comment_content":"使用全加器可以实现使用补码表示的有符号数，正数加负数转换成正数加上这个负数的补码即可。<br>如何检测溢出？<br>首先，列举下两个有符号数相加产生溢出的条件：<br>- 正数+正数<br>如果结果为负数，则产生了溢出；<br>- 负数+负数<br>如果结果为正数，则产生了溢出；<br>- 正数-负数<br>如果结果为负数，则产生了溢出；<br>- 负数-正数<br>如果结果为正数，则产生了溢出；<br><br>其次，可以根据最高数值位是否产生进位，以及符号位是否产生进位来判断是否有溢出发生，对应上面的四种情况就是：<br>- 正数+正数有溢出，即最高数值位产生了进位，而符号位没有进位；<br>- 负数+负数有溢出，即最高数值位没有产生进位，而符号位产生了进位；<br>- 正数-负数有溢出，即最高数值位产生了进位，而符号位没有进位；<br>- 负数-正数有溢出，即最高数值位没有产生进位，而符号位产生了进位；","like_count":15},{"had_liked":false,"id":97968,"user_name":"kdb_reboot","can_delete":false,"product_type":"c1","uid":1003594,"ip_address":"","ucode":"4C56FCA563FCA3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/50/4a/04fef27f.jpg","comment_is_top":false,"comment_ctime":1558855956,"is_pvip":false,"replies":[{"id":"35461","content":"👍","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1559122083,"ip_address":"","comment_id":97968,"utype":1}],"discussion_count":1,"race_medal":0,"score":"57393430804","product_id":100026001,"comment_content":"这部分就是本科学的数电了","like_count":13,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451497,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559122083,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97555,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1558694627,"is_pvip":true,"replies":[{"id":"35477","content":"一步同学你好，<br><br>谢谢指出，的确是从右到左计算，我修改一下。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1559123497,"ip_address":"","comment_id":97555,"utype":1}],"discussion_count":1,"race_medal":1,"score":"57393269475","product_id":100026001,"comment_content":"我们仍然是从左到右，一位一位进行计算，只是把从逢 10 进 1 变成逢 2 进 1。<br><br>这里不应该是从右往左运算吗？","like_count":13,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451325,"discussion_content":"一步同学你好，\n\n谢谢指出，的确是从右到左计算，我修改一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559123497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97565,"user_name":"Knight²º¹⁸","can_delete":false,"product_type":"c1","uid":1089754,"ip_address":"","ucode":"BDCB830B6A730F","user_header":"https://static001.geekbang.org/account/avatar/00/10/a0/da/4f50f1b2.jpg","comment_is_top":false,"comment_ctime":1558696563,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31623467635","product_id":100026001,"comment_content":"解答了我多年的疑惑","like_count":7},{"had_liked":false,"id":97299,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1119593,"ip_address":"","ucode":"94656FE4A6C378","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","comment_is_top":false,"comment_ctime":1558640754,"is_pvip":true,"replies":[{"id":"35467","content":"加油","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1559122406,"ip_address":"","comment_id":97299,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31623411826","product_id":100026001,"comment_content":"打卡，5月24日03:45，坚持完整的学到底~","like_count":7,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451218,"discussion_content":"加油","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559122406,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":132736,"user_name":"玉琢天窗","can_delete":false,"product_type":"c1","uid":1649878,"ip_address":"","ucode":"48881C42AB13BF","user_header":"https://static001.geekbang.org/account/avatar/00/19/2c/d6/759d63cc.jpg","comment_is_top":false,"comment_ctime":1568208206,"is_pvip":false,"replies":[{"id":"50998","content":"如果是写程序模拟的话有很多办法，比如有人用Minecraft 做了一个虚拟的CPU http:&#47;&#47;mc.163.com&#47;2017&#47;04&#47;07&#47;25535_682214.html<br><br>如果是硬件，如果只是为了体验，最简单的办法是用电路绘画导电笔直接在纸上画了来体验一下<br><br>或者也可以去淘宝上买个组合电路套件自己来搭一下。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1568429568,"ip_address":"","comment_id":132736,"utype":1}],"discussion_count":3,"race_medal":0,"score":"27338011982","product_id":100026001,"comment_content":"老师，要想自己搭建一个电路实现1+1，需要哪些材料呢","like_count":6,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467098,"discussion_content":"如果是写程序模拟的话有很多办法，比如有人用Minecraft 做了一个虚拟的CPU http://mc.163.com/2017/04/07/25535_682214.html\n\n如果是硬件，如果只是为了体验，最简单的办法是用电路绘画导电笔直接在纸上画了来体验一下\n\n或者也可以去淘宝上买个组合电路套件自己来搭一下。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1568429568,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1450863,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/kjRVmAlqxNubRKh4ZWYiceTd9LfiahZQgyHr1pank8Pd41dxftFfRtlcHsB4cechPzHNy9SaG5R36ml8eBdK6mgA/132","nickname":"Geek_0023f0","note":"","ucode":"9953C8135147B4","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579489,"discussion_content":"看完这篇，我也有自己搭一个电路实现加法器的想法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657497919,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1649878,"avatar":"https://static001.geekbang.org/account/avatar/00/19/2c/d6/759d63cc.jpg","nickname":"玉琢天窗","note":"","ucode":"48881C42AB13BF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":14529,"discussion_content":"谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568769453,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97909,"user_name":"supermouse","can_delete":false,"product_type":"c1","uid":1321860,"ip_address":"","ucode":"88072D5F881827","user_header":"https://static001.geekbang.org/account/avatar/00/14/2b/84/07f0c0d6.jpg","comment_is_top":false,"comment_ctime":1558837845,"is_pvip":false,"replies":[{"id":"35496","content":"是的，就是把与门和或门的真值表取反","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1559126278,"ip_address":"","comment_id":97909,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27328641621","product_id":100026001,"comment_content":"老师您好！请问「与非门」、「或非门」是将「与门」、「或门」计算得到的结果取反吗？","like_count":6,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451468,"discussion_content":"是的，就是把与门和或门的真值表取反","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559126278,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97368,"user_name":"活的潇洒","can_delete":false,"product_type":"c1","uid":1238830,"ip_address":"","ucode":"666C30CA894754","user_header":"https://static001.geekbang.org/account/avatar/00/12/e7/2e/1522a7d6.jpg","comment_is_top":false,"comment_ctime":1558661013,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27328464789","product_id":100026001,"comment_content":"今天提前一个半小时到单位，就是为了早点听音频做笔记，坚持完整的学到底，坚持完整的笔记到底<br>day13 学习笔记：https:&#47;&#47;www.cnblogs.com&#47;luoahong&#47;p&#47;10916066.html","like_count":6},{"had_liked":false,"id":255250,"user_name":"小文同学","can_delete":false,"product_type":"c1","uid":1001893,"ip_address":"","ucode":"48F2AEB989C12A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/a5/e4c1c2d4.jpg","comment_is_top":false,"comment_ctime":1603289492,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23078125972","product_id":100026001,"comment_content":"https:&#47;&#47;www.bilibili.com&#47;video&#47;BV1G4411r7FX?from=search&amp;seid=6252132967631213380<br><br>贴一个 B 站关于加法器的制作视频，肉眼可见的搭建一个加法器。","like_count":6},{"had_liked":false,"id":100648,"user_name":"俊釆","can_delete":false,"product_type":"c1","uid":1046158,"ip_address":"","ucode":"AB08F7D04C20CB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f6/8e/c9c94420.jpg","comment_is_top":false,"comment_ctime":1559610548,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"23034447028","product_id":100026001,"comment_content":"全加器图中没有U，这个是其他地方的进位信号？","like_count":5,"discussions":[{"author":{"id":1183264,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0e/20/bf8d71c3.jpg","nickname":"深寒色的猫丶","note":"","ucode":"869A2AB044E0D2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":23591,"discussion_content":"这个图只是二位的全加器！U是指另外一个个位全加器的进位信号，也就是左下角那个！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1569840441,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":98301,"user_name":"ldd","can_delete":false,"product_type":"c1","uid":1208157,"ip_address":"","ucode":"E8344FAFFE5CF3","user_header":"https://static001.geekbang.org/account/avatar/00/12/6f/5d/f0a19f09.jpg","comment_is_top":false,"comment_ctime":1558951348,"is_pvip":false,"replies":[{"id":"35459","content":"我不知道我有没有准确理解你的意思<br><br>两个负数相加，是否溢出，其实不是看最后多出来的进位的信号。而是也要看计算结果的最高位是1还是0<br>如果两个输入的高位是1而输出的高位是0，那么就溢出了，如果输出的高位还是1就没有溢出。<br><br>你这里的a,b,c是不是指输入a,b和输出c的左侧的高位（不是进位的溢出位）？我的理解没有错吧？","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1559121897,"ip_address":"","comment_id":98301,"utype":1}],"discussion_count":2,"race_medal":0,"score":"23033787828","product_id":100026001,"comment_content":"课后思考：<br>补码表示下，加法器也是可以正常运行的；因为补码的发明就是为了方便正负数的二进制计算。<br>正数+负数是不会溢出的，所以加法器可以直接忽略最左边的进位；<br>但是补码计算，还是会出现溢出的情况的，比如：假设二进制位数是4位，-8-2=6；7+2=-1 就算是溢出了；<br>那么还是需要最右边的输出来判断是否溢出的：<br>假设最右边的输入为a、b，输出为c，那么溢出位可以为 (~(a&amp;b)) &amp; c &amp; (~(a&amp;b))，输出为1，就代表溢出了，否则就是未溢出。<br><br>不知道思考的对不对，有不对的地方，望老师指出。","like_count":5,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451637,"discussion_content":"我不知道我有没有准确理解你的意思\n\n两个负数相加，是否溢出，其实不是看最后多出来的进位的信号。而是也要看计算结果的最高位是1还是0\n如果两个输入的高位是1而输出的高位是0，那么就溢出了，如果输出的高位还是1就没有溢出。\n\n你这里的a,b,c是不是指输入a,b和输出c的左侧的高位（不是进位的溢出位）？我的理解没有错吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559121897,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1906958,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/19/0e/2147e143.jpg","nickname":"charles","note":"","ucode":"A85636D90BC16A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":253986,"discussion_content":"两个输入的高位是1，相加的高位不就是0，而负数的补码高位都是1，相加不就是0。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588262575,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97452,"user_name":"小海海","can_delete":false,"product_type":"c1","uid":1158040,"ip_address":"","ucode":"C2FB9B6BCB4631","user_header":"https://static001.geekbang.org/account/avatar/00/11/ab/98/6f29f4f2.jpg","comment_is_top":false,"comment_ctime":1558674405,"is_pvip":false,"replies":[{"id":"35465","content":"回答正确，不过可以再想想补码情况下，如何处理溢出呢？","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1559122309,"ip_address":"","comment_id":97452,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18738543589","product_id":100026001,"comment_content":"思考题: 反向推导，补码的设计本来就是要解决正数加负数的问题，使之可以当作普通的加法来进位即可，所以文章里的加法器模型应该是可以的","like_count":4,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451284,"discussion_content":"回答正确，不过可以再想想补码情况下，如何处理溢出呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559122309,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97394,"user_name":"铁皮","can_delete":false,"product_type":"c1","uid":1013200,"ip_address":"","ucode":"E20FB02D9ABD20","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/d0/0053c9ba.jpg","comment_is_top":false,"comment_ctime":1558664055,"is_pvip":false,"replies":[{"id":"35501","content":"是的，不过可以思考一下两个负数的相加或者整数的相加是否也会溢出？怎么通过电路来告诉大家是发生了溢出？","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1559127927,"ip_address":"","comment_id":97394,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18738533239","product_id":100026001,"comment_content":"课后思考题：<br>用补码表示的话，这个加法器应该可以实现正数加负数。<br>最左端如有溢出位的情况去掉就可以<br>","like_count":4,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451264,"discussion_content":"是的，不过可以思考一下两个负数的相加或者整数的相加是否也会溢出？怎么通过电路来告诉大家是发生了溢出？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559127927,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":255268,"user_name":"小文同学","can_delete":false,"product_type":"c1","uid":1001893,"ip_address":"","ucode":"48F2AEB989C12A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/a5/e4c1c2d4.jpg","comment_is_top":false,"comment_ctime":1603291896,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14488193784","product_id":100026001,"comment_content":"https:&#47;&#47;logic.ly&#47;<br><br>加法器还是比较简单的，同学们可以在这里入口出进行试验，大概花20min就可以从熟悉都实现了","like_count":3},{"had_liked":false,"id":97342,"user_name":"cc","can_delete":false,"product_type":"c1","uid":1239833,"ip_address":"","ucode":"AA1B8EA613E3A9","user_header":"https://static001.geekbang.org/account/avatar/00/12/eb/19/19e706a5.jpg","comment_is_top":false,"comment_ctime":1558658873,"is_pvip":false,"replies":[{"id":"35470","content":"cc同学你好<br><br>的确不是每个计算都需要进位，但是我们的电路必须准备好可能发生进位。<br><br>而进位的时候，可能来自当前位两个1的相加会发生进位。<br>但还有一种可能，就是当前位只有一个1，但是从更低位又进位来了一个1，这样也需要向高位进行进位。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1559122688,"ip_address":"","comment_id":97342,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14443560761","product_id":100026001,"comment_content":"我们把两个半加器的进位输出，作为一个或门的输入连接起来，只要两次加法中任何一次需要进位，那么在二位上，我们就会向左侧的四位进一位。<br><br>老师，这块没看懂。为什么任何一次需要进位，我们都要向四位进位呢？比如两个数分别是01和01，这样其实不用向四位进位的","like_count":3,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451238,"discussion_content":"cc同学你好\n\n的确不是每个计算都需要进位，但是我们的电路必须准备好可能发生进位。\n\n而进位的时候，可能来自当前位两个1的相加会发生进位。\n但还有一种可能，就是当前位只有一个1，但是从更低位又进位来了一个1，这样也需要向高位进行进位。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559122688,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":324663,"user_name":"。","can_delete":false,"product_type":"c1","uid":1723580,"ip_address":"","ucode":"BFEF2648FE8A85","user_header":"https://static001.geekbang.org/account/avatar/00/1a/4c/bc/d9ef313e.jpg","comment_is_top":false,"comment_ctime":1638531387,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10228465979","product_id":100026001,"comment_content":"好想穿越回去告诉20岁的自己，模电数电好好学啊，要不然以后一把年纪了还要补课啊","like_count":2},{"had_liked":false,"id":144808,"user_name":"拯救地球好累","can_delete":false,"product_type":"c1","uid":1339022,"ip_address":"","ucode":"7643439601EF4C","user_header":"https://static001.geekbang.org/account/avatar/00/14/6e/8e/5d309a85.jpg","comment_is_top":false,"comment_ctime":1572060792,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10161995384","product_id":100026001,"comment_content":"---总结---<br>封装及模块化：计算机硬件或软件设计中，为了能提高可重用性和为上层开发人员屏蔽下层细节，往往会提供包装好的模块并划分一定的层次。但通用系统的效率往往会低于专用系统，因此在提高开发效率的同时往往也会有一定的性能损失，在其他层面无法取得性能优化的突破且有性能方面的需求时，可以从该方面考虑。<br>最简单的门电路：与门、或门、非门、异或门、与非门、或非门<br>半加器：异或门（做加法）+与门（判进位）<br>全加器：两个半加器（结合进位信号做加法）+或门（产生进位信号）","like_count":2},{"had_liked":false,"id":353607,"user_name":"X","can_delete":false,"product_type":"c1","uid":1581509,"ip_address":"上海","ucode":"BE05C1D25CE313","user_header":"https://static001.geekbang.org/account/avatar/00/18/21/c5/024e1ef1.jpg","comment_is_top":false,"comment_ctime":1659598728,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5954566024","product_id":100026001,"comment_content":"终于搞懂了半加器、全加器了，哈哈哈，好开心啊","like_count":1},{"had_liked":false,"id":353600,"user_name":"X","can_delete":false,"product_type":"c1","uid":1581509,"ip_address":"上海","ucode":"BE05C1D25CE313","user_header":"https://static001.geekbang.org/account/avatar/00/18/21/c5/024e1ef1.jpg","comment_is_top":false,"comment_ctime":1659595151,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5954562447","product_id":100026001,"comment_content":"全加器听的很迷……","like_count":1},{"had_liked":false,"id":353588,"user_name":"X","can_delete":false,"product_type":"c1","uid":1581509,"ip_address":"","ucode":"BE05C1D25CE313","user_header":"https://static001.geekbang.org/account/avatar/00/18/21/c5/024e1ef1.jpg","comment_is_top":false,"comment_ctime":1659582656,"is_pvip":false,"replies":[{"id":"128561","content":"欢迎打卡","user_name":"编辑回复","user_name_real":"编辑","uid":"1356014","ctime":1659601967,"ip_address":"","comment_id":353588,"utype":2}],"discussion_count":3,"race_medal":0,"score":"5954549952","product_id":100026001,"comment_content":"数字电路，15年欠下的债。现在来还，哈哈","like_count":1,"discussions":[{"author":{"id":1356014,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b0/ee/d0871efd.jpg","nickname":"冬青","note":"","ucode":"14576781B499FB","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582695,"discussion_content":"欢迎打卡","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659601967,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":8}","child_discussion_number":2,"child_discussions":[{"author":{"id":1581509,"avatar":"https://static001.geekbang.org/account/avatar/00/18/21/c5/024e1ef1.jpg","nickname":"X","note":"","ucode":"BE05C1D25CE313","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1356014,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b0/ee/d0871efd.jpg","nickname":"冬青","note":"","ucode":"14576781B499FB","race_medal":0,"user_type":8,"is_pvip":false},"discussion":{"id":582778,"discussion_content":"你好，这个专栏有学习交流群嘛","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659668477,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":582695,"ip_address":"上海"},"score":582778,"extra":""},{"author":{"id":1356014,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b0/ee/d0871efd.jpg","nickname":"冬青","note":"","ucode":"14576781B499FB","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":1581509,"avatar":"https://static001.geekbang.org/account/avatar/00/18/21/c5/024e1ef1.jpg","nickname":"X","note":"","ucode":"BE05C1D25CE313","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582820,"discussion_content":"目前没有了～有问题可以在留言区交流哈，我会督促老师尽快回复。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659688744,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":582778,"ip_address":""},"score":582820,"extra":""}]}]},{"had_liked":false,"id":353587,"user_name":"X","can_delete":false,"product_type":"c1","uid":1581509,"ip_address":"上海","ucode":"BE05C1D25CE313","user_header":"https://static001.geekbang.org/account/avatar/00/18/21/c5/024e1ef1.jpg","comment_is_top":false,"comment_ctime":1659582538,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5954549834","product_id":100026001,"comment_content":"牛啊，异或门 + 与门 实现半加器；两个半加器 + 或门 实现 全加器 ；全加器之间的串联实现加法器；加法器实现算术逻辑单元ALU。","like_count":1},{"had_liked":false,"id":213794,"user_name":"二进制之路","can_delete":false,"product_type":"c1","uid":1008395,"ip_address":"","ucode":"67C84B013147B1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/0b/ad56aeb4.jpg","comment_is_top":false,"comment_ctime":1588563209,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5883530505","product_id":100026001,"comment_content":"看老师的推荐，买了编码和大话计算机。顺便把二进制加法器的实现详细的梳理了一遍：<br>《从摩尔斯电码，到开关、继电器和逻辑门，做一个二进制加法器》<br>https:&#47;&#47;mp.weixin.qq.com&#47;s&#47;kKkHhhYzbOsp7iUWBq4e4Q","like_count":1},{"had_liked":false,"id":121715,"user_name":"Dashing","can_delete":false,"product_type":"c1","uid":1362838,"ip_address":"","ucode":"07E3F934782BCE","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqZbpP8Of9zVbZnPDMnXnZH2Zft5F1Ip8ybicIY9BhSlaO37TCbYtCq89IO8iasXowia9PrPRLibdEQ1g/132","comment_is_top":false,"comment_ctime":1565189693,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5860156989","product_id":100026001,"comment_content":"看次高位进位与最高位进位，异或，为1溢出，为0，没有益处","like_count":1},{"had_liked":false,"id":104867,"user_name":"花仙子","can_delete":false,"product_type":"c1","uid":1249216,"ip_address":"","ucode":"9840BF416F1F0F","user_header":"https://static001.geekbang.org/account/avatar/00/13/0f/c0/e6151cce.jpg","comment_is_top":false,"comment_ctime":1560860033,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5855827329","product_id":100026001,"comment_content":"老师，能简单介绍一下门电路的实现吗，非常感谢🙏","like_count":1},{"had_liked":false,"id":104199,"user_name":"djfhchdh","can_delete":false,"product_type":"c1","uid":1484184,"ip_address":"","ucode":"E71D75328CE398","user_header":"https://static001.geekbang.org/account/avatar/00/16/a5/98/a65ff31a.jpg","comment_is_top":false,"comment_ctime":1560679970,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5855647266","product_id":100026001,"comment_content":"用补码计算有符号数，关键是溢出的判断与无符号数的判断不同，无符号数的溢出判断比较简单，就是最高位是否有进位，而用补码来计算的有符号数，其是否溢出的判断：如果是两个正数相加，结果最高位是1，那么肯定溢出；如果是两个负数相加，结果最高位是0，那么肯定溢出；如果是一正一负相加，就不会溢出了","like_count":1},{"had_liked":false,"id":97861,"user_name":"冰激凌的眼泪","can_delete":false,"product_type":"c1","uid":1087945,"ip_address":"","ucode":"5DCB974667E93A","user_header":"https://static001.geekbang.org/account/avatar/00/10/99/c9/a7c77746.jpg","comment_is_top":false,"comment_ctime":1558798061,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5853765357","product_id":100026001,"comment_content":"突破1，两个输入，两个输出，简单门电路是两个输入一个输出<br>突破2，三个输入，两个输出<br>上面是加法器实现的基础<br>简单门电路实现了半加器，进而利用半加器实现了全加器<br>语句实现了简单函数，进而可以形成复杂函数","like_count":1},{"had_liked":false,"id":97480,"user_name":"Ant","can_delete":false,"product_type":"c1","uid":1079563,"ip_address":"","ucode":"07E6374F91F61E","user_header":"https://static001.geekbang.org/account/avatar/00/10/79/0b/4346a253.jpg","comment_is_top":false,"comment_ctime":1558681061,"is_pvip":false,"replies":[{"id":"35463","content":"一般情况下，这些是“数据”而不是“程序”，会放在单独的数据文件里面，在编译的过程中并不会用到。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1559122268,"ip_address":"","comment_id":97480,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5853648357","product_id":100026001,"comment_content":"老师  图片 mp3等占用空间比较大的文件    编译的时候放在哪里阿","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451292,"discussion_content":"一般情况下，这些是“数据”而不是“程序”，会放在单独的数据文件里面，在编译的过程中并不会用到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559122268,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97417,"user_name":"靠人品去赢","can_delete":false,"product_type":"c1","uid":1301286,"ip_address":"","ucode":"7A20F9EBE847E1","user_header":"https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg","comment_is_top":false,"comment_ctime":1558666774,"is_pvip":false,"replies":[{"id":"35519","content":"栈溢出我们在前面讲stackoverflow已经讲过啦，可以去看第7讲。<br><br>空指针，其实也很容易里面，我们期望在某个数据里面放上一个内存地址，但是并没有真实设置对应的值，那么里面要么是对应内存初始状态，可能就是一个错误的地址，会导致程序出错呀。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1559130199,"ip_address":"","comment_id":97417,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5853634070","product_id":100026001,"comment_content":"这个加法器的组成，让我知道想通了int这些基本类型的范围具体是怎么回事（就给你16个全加器组成，结果溢出了超过16位，自然就超出int类型范围）。<br>那想问一下，栈溢出，空指针这些日常喜闻乐见的是怎么回事，计算机怎么判定的呢。","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451276,"discussion_content":"栈溢出我们在前面讲stackoverflow已经讲过啦，可以去看第7讲。\n\n空指针，其实也很容易里面，我们期望在某个数据里面放上一个内存地址，但是并没有真实设置对应的值，那么里面要么是对应内存初始状态，可能就是一个错误的地址，会导致程序出错呀。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559130199,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":359130,"user_name":"张无忌","can_delete":false,"product_type":"c1","uid":1222000,"ip_address":"浙江","ucode":"87E5FC2F415774","user_header":"https://static001.geekbang.org/account/avatar/00/12/a5/70/d7b70282.jpg","comment_is_top":false,"comment_ctime":1665282717,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1665282717","product_id":100026001,"comment_content":"老师，有个地方没听明白，也欢迎明白的同学答疑解惑：“在输入的两位是 10 和 01 的情况下，个位输出都是 1”，所说的个位指的是最左边的吧？那么 10 + 10 = 100，最左边的不是0吗？01 + 01 = 10，最左边的也是0啊，这个怎么理解？","like_count":0},{"had_liked":false,"id":359129,"user_name":"张无忌","can_delete":false,"product_type":"c1","uid":1222000,"ip_address":"浙江","ucode":"87E5FC2F415774","user_header":"https://static001.geekbang.org/account/avatar/00/12/a5/70/d7b70282.jpg","comment_is_top":false,"comment_ctime":1665282591,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1665282591","product_id":100026001,"comment_content":"老师，有个地方没听明白，也欢迎明白的同学答疑解惑：“在输入的两位是 10 和 01 的情况下，输出都是 1”，","like_count":0},{"had_liked":false,"id":358010,"user_name":"woodie","can_delete":false,"product_type":"c1","uid":2004783,"ip_address":"北京","ucode":"1C2925AD8191DA","user_header":"","comment_is_top":false,"comment_ctime":1663829663,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1663829663","product_id":100026001,"comment_content":"总结：<br>1、7种基础的门电路与门、或门、非门、异或门、同或门、与非门、与或门<br>2、半加器：由异或门和与门组成，输入信号A、信号B，通过异或门输出和信号S，通过与门输出进位信号C，对于黑盒的半加器，输入信号A、B，输出和信号S、进位信号S；<br>3、全加器：由两个半加器和或门组成，输入信号A、信号B、进位信号C，信号A、B通过第一个半加器输出和信号S1、进位信号C1；和信号S1、进位信号C通过第二个半加器，输出和信号S2，进位信号C2；进位信号C1、C2通过或门输出C3，对于黑盒的全加器来收，输入信号A、B、进位信号C，输出和信号S2、进位信号C3<br>4、分层逻辑：门电路 =&gt; 半加器 =&gt; 全加器 =&gt; 加法器 =&gt; ALU(算数逻辑单元)<br>","like_count":0},{"had_liked":false,"id":347757,"user_name":"小鳄鱼","can_delete":false,"product_type":"c1","uid":1178888,"ip_address":"","ucode":"9C30CAFB41A263","user_header":"https://static001.geekbang.org/account/avatar/00/11/fd/08/c039f840.jpg","comment_is_top":false,"comment_ctime":1654398596,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1654398596","product_id":100026001,"comment_content":"1bit加法的真值表错了，00-&gt;0","like_count":0},{"had_liked":false,"id":344271,"user_name":"注意力$","can_delete":false,"product_type":"c1","uid":1142316,"ip_address":"","ucode":"7FB3399A1EAB72","user_header":"https://static001.geekbang.org/account/avatar/00/11/6e/2c/e2f3cfc0.jpg","comment_is_top":false,"comment_ctime":1651413621,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1651413621","product_id":100026001,"comment_content":"老师，5位二进制最多能表示多大的数，这个怎么算","like_count":0},{"had_liked":false,"id":333643,"user_name":"thomas","can_delete":false,"product_type":"c1","uid":1016777,"ip_address":"","ucode":"9AB945308F1B50","user_header":"https://static001.geekbang.org/account/avatar/00/0f/83/c9/5d03981a.jpg","comment_is_top":false,"comment_ctime":1644458320,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1644458320","product_id":100026001,"comment_content":"思考题：如果是使用补码表示的有符号数，这个加法器是否可以实现正数加负数这样的运算呢？<br><br>可以，补码就是为了解决减法运算的问题，把减法转变为加负数。 无符号整数使用CF（carry flag）作为标记，有符合整数使用OF(overflow flag)作为标记","like_count":0},{"had_liked":false,"id":332543,"user_name":"小袁","can_delete":false,"product_type":"c1","uid":1811495,"ip_address":"","ucode":"3F5D8721F577D9","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a4/27/15e75982.jpg","comment_is_top":false,"comment_ctime":1643333855,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1643333855","product_id":100026001,"comment_content":"看到了加法器的原理后想到一个问题，在64位机器下，两个uint16的加法是不是会比两个uint64的加快快？","like_count":0},{"had_liked":false,"id":290052,"user_name":"huadanian","can_delete":false,"product_type":"c1","uid":1014061,"ip_address":"","ucode":"A986E1DB777428","user_header":"https://static001.geekbang.org/account/avatar/00/0f/79/2d/dbb5570f.jpg","comment_is_top":false,"comment_ctime":1619338773,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619338773","product_id":100026001,"comment_content":"“这就是为什么你在撰写程序的时候，能够知道你的计算结果是否溢出在硬件层面得到的支持。&quot;，既然这样的话，为什么高级语言比如C，没有判断运算是否溢出的关键字或者运算符呢？？","like_count":0},{"had_liked":false,"id":260918,"user_name":"Geek_63aa00","can_delete":false,"product_type":"c1","uid":2058510,"ip_address":"","ucode":"4AF5D3318F4468","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/djjK4h3FfPGyllqd7Oc5TpCoJEU6TOcuiarLtAPGrROocibML1OgtUIgtxQDDsia3qqLfZkpCcDykl3l8WHNxzCag/132","comment_is_top":false,"comment_ctime":1605152019,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605152019","product_id":100026001,"comment_content":"虽然说现在封装已经使上层开发脱离下层内部而完成工作，但是性能优化却避不开了解内部原理。疑惑：补码加法的溢出，这里边有个小哥说的挺透，但是作者没有回复","like_count":0},{"had_liked":false,"id":251375,"user_name":"Magic","can_delete":false,"product_type":"c1","uid":1272047,"ip_address":"","ucode":"FD9CEDAA419EB0","user_header":"https://static001.geekbang.org/account/avatar/00/13/68/ef/6264ca3d.jpg","comment_is_top":false,"comment_ctime":1601512911,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601512911","product_id":100026001,"comment_content":"如果用补码表示负数，在现有电路的基础上，还需要加上一个反相器，一个二一选择器。并且将最高位的进位输入和进位输出进行异或运算，其结果输出到符号寄存器中的溢出标志位","like_count":0},{"had_liked":false,"id":250872,"user_name":"姑射仙人","can_delete":false,"product_type":"c1","uid":1008517,"ip_address":"","ucode":"3EFC1F3E592165","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/85/1dc41622.jpg","comment_is_top":false,"comment_ctime":1601267309,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601267309","product_id":100026001,"comment_content":"加法器的计算，是需要从右到左依次通电计算吗，还是可以同时计算？","like_count":0},{"had_liked":false,"id":250519,"user_name":"Magic","can_delete":false,"product_type":"c1","uid":1272047,"ip_address":"","ucode":"FD9CEDAA419EB0","user_header":"https://static001.geekbang.org/account/avatar/00/13/68/ef/6264ca3d.jpg","comment_is_top":false,"comment_ctime":1601113703,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601113703","product_id":100026001,"comment_content":"减法的实现与负数在计算机中的表达有关。计算机中通过补码表示负数，即对原码取反加1。通过一个减法开关和取补器可以实现","like_count":0},{"had_liked":false,"id":229185,"user_name":"Ethan","can_delete":false,"product_type":"c1","uid":1810189,"ip_address":"","ucode":"75F613D58909DB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ZHw73tgCqGKhvticUWGRz4icgicu4hFWfKtacoFJeItH7maNuNUmjnEgDTJvOibwUWgGV0p6guNPibMVWDV4BUmEmlA/132","comment_is_top":false,"comment_ctime":1592919027,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592919027","product_id":100026001,"comment_content":"徐老师你好，我们平时所说的64位操作系统，32位操作系统是不是就是一排全加器的个数？","like_count":0},{"had_liked":false,"id":203384,"user_name":"WENMURAN","can_delete":false,"product_type":"c1","uid":1915404,"ip_address":"","ucode":"5D1CE8B41937C7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXNhbTULKiakib8lYXrvGF2zPwfedooBzC2EtSv1nt1MwV1KUvTkcJrvCBFvcdwJicnr3OEXnk9GUCg/132","comment_is_top":false,"comment_ctime":1586182428,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586182428","product_id":100026001,"comment_content":"加法器<br>通过一个异或门计算出个位，通过一个与门计算出是否进位，于是就通过电路算出一个一位数的加法。把两个门电路打包就叫做半加器。<br>用两个半加器和一个或门，就能组成一个全加器。<br>分层：门电路-半加器-全加器-加法器-ALU<br>ALU，算术逻辑单元，之后不再关注电路层面的构造，直接把ALU作为基础单元","like_count":0},{"had_liked":false,"id":187578,"user_name":"Paul Shan","can_delete":false,"product_type":"c1","uid":1593140,"ip_address":"","ucode":"32D99989028284","user_header":"","comment_is_top":false,"comment_ctime":1584162419,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584162419","product_id":100026001,"comment_content":"源码实现加法就相对复杂，需要一套电路将源码转化成补码，也就是如果最高位是一，就去掉这位，用上取反电路，再加一，就得到补码，再用补码的方法即可。","like_count":0},{"had_liked":false,"id":187574,"user_name":"Paul Shan","can_delete":false,"product_type":"c1","uid":1593140,"ip_address":"","ucode":"32D99989028284","user_header":"","comment_is_top":false,"comment_ctime":1584160984,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584160984","product_id":100026001,"comment_content":"正数加负数，利用补码的加法应该就够了，正数加负数不存在溢出的问题，但是相同符号的数相加就存在溢出的问题，到时候就会出现正正得负，负负得正的溢出结果。","like_count":0},{"had_liked":false,"id":181987,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1582687846,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582687846","product_id":100026001,"comment_content":"老师讲的太好了<br><br>从基础门电路<br>与 或 非 与非 或非 异或<br><br>到 与电路 + 异或电路 实现 半加器<br>其中，与电路得到是否进位，异或电路得到当前位的结果<br><br>再到 两个半加器 + 或电路 实现 全加器<br>全加器有 三个 输入: 加数 被加数 进位<br>                 两个 输出: 当前位的结果 进位<br>(尽管三个位相加，但最多也只有一次进位真的很赞，也就是全加器中的or电路，最多被触发一次，一开始不是太明白。)<br><br>其中上一个全加器的进位输出 作为 下一个全加器的进位输入，另外两个输入来自 加数 与 被加数<br><br>最低位上的进位输入为0<br>最高位上的进位输出表示是否溢出<br><br>因此实现了多位加法计算 与 是否溢出。<br><br>想起了俄罗斯套娃<br><br>老师介绍了 封装 与 分层的重要性提现。<br>每节课结束都有推荐，可以用很良心了来形容。<br><br><br>老师提的问题，可能需要看之前推荐的 编码 书籍。知道怎么计算，但是不知道怎么实现。<br><br>奥利给","like_count":0},{"had_liked":false,"id":181523,"user_name":"信长","can_delete":false,"product_type":"c1","uid":1746710,"ip_address":"","ucode":"294D19040C09C0","user_header":"https://static001.geekbang.org/account/avatar/00/1a/a7/16/b2ff3f70.jpg","comment_is_top":false,"comment_ctime":1582554556,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582554556","product_id":100026001,"comment_content":"昨天我看不懂，我睡了一觉，今天看懂了，讲得很好。","like_count":0},{"had_liked":false,"id":181464,"user_name":"Dylan","can_delete":false,"product_type":"c1","uid":1040236,"ip_address":"","ucode":"58064D0C9F9F5F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/df/6c/5af32271.jpg","comment_is_top":false,"comment_ctime":1582546191,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582546191","product_id":100026001,"comment_content":"有符号数补码加法，问题在于溢出，如果正常补码相加符号位和最高位两者相同(即00或者11),则不溢出，如果两者不同(即01正溢出，10负溢出），那将位宽扩大一位（原来4位的，变成5位），最高位超出位宽（会变成6位），自然舍弃","like_count":0},{"had_liked":false,"id":167087,"user_name":"小小灬厮","can_delete":false,"product_type":"c1","uid":1445003,"ip_address":"","ucode":"F4197D2F73364B","user_header":"https://static001.geekbang.org/account/avatar/00/16/0c/8b/3f7e9e74.jpg","comment_is_top":false,"comment_ctime":1577688392,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577688392","product_id":100026001,"comment_content":"与非：与运算后，取反<br>或非：或运算后，取反<br>异或：每个取反，再进行或运算","like_count":0},{"had_liked":false,"id":162851,"user_name":"Become a architect","can_delete":false,"product_type":"c1","uid":1248265,"ip_address":"","ucode":"6F1C9B183095E4","user_header":"https://static001.geekbang.org/account/avatar/00/13/0c/09/a46ad0a6.jpg","comment_is_top":false,"comment_ctime":1576624358,"is_pvip":false,"replies":[{"id":"68664","content":"Become a architect同学，<br><br>你好，其实分层本质上是一种“分治”的思路，把复杂的问题分解成几个简单问题的组合来解决。分治法的简单的算法实现，常常可以用递归来实现。两者的确有共通之处。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1581238733,"ip_address":"","comment_id":162851,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1576624358","product_id":100026001,"comment_content":"看完这节想起了，递归。跟分层原理，很像。","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478165,"discussion_content":"Become a architect同学，\n\n你好，其实分层本质上是一种“分治”的思路，把复杂的问题分解成几个简单问题的组合来解决。分治法的简单的算法实现，常常可以用递归来实现。两者的确有共通之处。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581238733,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137589,"user_name":"天王","can_delete":false,"product_type":"c1","uid":1239337,"ip_address":"","ucode":"C074B2F9A5F007","user_header":"https://static001.geekbang.org/account/avatar/00/12/e9/29/629d9bb0.jpg","comment_is_top":false,"comment_ctime":1569802672,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569802672","product_id":100026001,"comment_content":"加法器1 门电路是组成cpu的基本单元，加法器也是基于门电路实现的，门电路分为与门，或门，异或门，非门，或非门和与非门。2加法的实现原理 ，可以看成2个8位2bit位的门电路相加，个位相加用异或门，进位用与门，2个都是1bit，我们把2个门电路打包，这是半加器，进位之后在2位，2个相加的数相加用与门，加完之后，相加的数和进位相加，组成一个半电路，是否进位，用2个半电路相加进位作为或门，2个半电路组成一个全加器。3 有了全加器，我们把8个全加器串联起来，个位全加器的进位信号作为2位全加器的输入信号。一层层往的往高层递进。","like_count":0},{"had_liked":false,"id":134832,"user_name":"J.D.Chi","can_delete":false,"product_type":"c1","uid":1035855,"ip_address":"","ucode":"34812AEF95C7AB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ce/4f/3a89d29a.jpg","comment_is_top":false,"comment_ctime":1568941069,"is_pvip":false,"replies":[{"id":"52613","content":"👍","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1569653116,"ip_address":"","comment_id":134832,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568941069","product_id":100026001,"comment_content":"“上一次的输出 是 下一次的输入” 这种做法在一些伪随机数生成器和加密算法里同样有应用。","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467916,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569653116,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126038,"user_name":"瑞","can_delete":false,"product_type":"c1","uid":1334600,"ip_address":"","ucode":"1C5945FD2D05C4","user_header":"https://static001.geekbang.org/account/avatar/00/14/5d/48/03abbbd1.jpg","comment_is_top":false,"comment_ctime":1566299914,"is_pvip":false,"replies":[{"id":"52651","content":"瑞同学，<br><br>你好，从硬件的角度，计算机“不知道”，知道的是“软件”也就是你的程序代码。你的程序代码认为接下来8个字节是一个补码表示的整数，然后看到第一位是1，那么就会理解他是一个负数。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1569661166,"ip_address":"","comment_id":126038,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566299914","product_id":100026001,"comment_content":"一直有个疑问，计算机怎么知道输入的是不是负数，都是01，怎么知道是整数还是负数，麻烦老师答疑下","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463799,"discussion_content":"瑞同学，\n\n你好，从硬件的角度，计算机“不知道”，知道的是“软件”也就是你的程序代码。你的程序代码认为接下来8个字节是一个补码表示的整数，然后看到第一位是1，那么就会理解他是一个负数。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569661166,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120266,"user_name":"lanco","can_delete":false,"product_type":"c1","uid":1188352,"ip_address":"","ucode":"C24A0A8716C78C","user_header":"https://static001.geekbang.org/account/avatar/00/12/22/00/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1564816990,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1564816990","product_id":100026001,"comment_content":"“你的计算结果是否溢出在硬件层面得到的支持”<br>这一点在工作时候并没有思考过，看来还是容易固步自封于当前","like_count":0},{"had_liked":false,"id":112509,"user_name":"瀚海星尘","can_delete":false,"product_type":"c1","uid":1024461,"ip_address":"","ucode":"90F418299EA3BF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/cd/2c513481.jpg","comment_is_top":false,"comment_ctime":1562748752,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562748752","product_id":100026001,"comment_content":"原来异或门如此重要~","like_count":0},{"had_liked":false,"id":106717,"user_name":"顾骨","can_delete":false,"product_type":"c1","uid":1131165,"ip_address":"","ucode":"3F6BA592AB7723","user_header":"https://static001.geekbang.org/account/avatar/00/11/42/9d/c36b7ef7.jpg","comment_is_top":false,"comment_ctime":1561377296,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1561377296","product_id":100026001,"comment_content":"“全加器就是两个半加器加上一个或门” 这张图中是否少了一个半加器呢，不然得不出结果。<br>比如：<br>11 + 11<br>1. 个位相加：输入A=1,B=1，输出C0=1,S=0，所以最低位是S=0<br>2. 二位相加：输入A=1,B=1，输出C0=1,S=0，所以个位是S=0<br>3. 输入步骤1的C0=1和步骤2中的S=0，输出是C0=0,S=1，所以二位是1<br>4. 将步骤2中C0=1和步骤3中的C0=0进行或操作，得到四位是1<br>5. 组合起来就是 110<br><br>老师，我的理解正确吗<br><br>","like_count":0},{"had_liked":false,"id":104091,"user_name":"-W.LI-","can_delete":false,"product_type":"c1","uid":1210699,"ip_address":"","ucode":"3556786538664F","user_header":"https://static001.geekbang.org/account/avatar/00/12/79/4b/740f91ca.jpg","comment_is_top":false,"comment_ctime":1560649307,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560649307","product_id":100026001,"comment_content":"老师好。负数加负数怎么算啊。<br>补码(-2)1110+(3)0011=0001。<br>补码(-2)1110+(-1)1111=0001(?)负数＋负数是不是不能用补码算啊。<br>源码(-2)1010+(-1)1001=源码1011(符号位不变后面相加)转为补码1100(-3)。","like_count":0},{"had_liked":false,"id":100467,"user_name":"-W.LI-","can_delete":false,"product_type":"c1","uid":1210699,"ip_address":"","ucode":"3556786538664F","user_header":"https://static001.geekbang.org/account/avatar/00/12/79/4b/740f91ca.jpg","comment_is_top":false,"comment_ctime":1559559921,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559559921","product_id":100026001,"comment_content":"老师我有个问题，亦或为啥异玩以后还要或啊?。A’ · B == A · B’不成立的么?","like_count":0},{"had_liked":false,"id":97549,"user_name":"Ant","can_delete":false,"product_type":"c1","uid":1079563,"ip_address":"","ucode":"07E6374F91F61E","user_header":"https://static001.geekbang.org/account/avatar/00/10/79/0b/4346a253.jpg","comment_is_top":false,"comment_ctime":1558692375,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558692375","product_id":100026001,"comment_content":"打卡 2019年05月24日","like_count":0}]}