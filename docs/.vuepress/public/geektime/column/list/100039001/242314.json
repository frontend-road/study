{"id":242314,"title":"90 | 项目实战一：设计实现一个支持各种算法的限流框架（分析）","content":"<p>结束了开源实战，从今天开始我们正式进入项目实战模块。在开源实战中，我带你一块剖析了几个著名的开源项目，比如Spring、MyBatis、Google Guava等，剖析了它们背后蕴含的设计思想、原则和模式。</p><p>如果说前面讲开源实战是学习别人怎么做，那现在我们讲项目实战就是带你一块做。在这个过程中，我会带你实践之前学过的设计思想、原则和模式，给你展示怎么应用这些理论知识，让你开发出跟前面那些著名开源项目一样优秀的软件。</p><p>在项目实战中，我找了三个稍微有点难度的项目：限流框架、幂等框架、灰度发布组件，带你一起来实现。针对每一个项目，我都会从分析、设计、实现这三个部分来讲解。当然，还是那句老话，项目本身的讲解不是重点，重点还是学习它们背后的开发套路。这才是最有价值的部分。</p><p>接下来的三节课，我们讲第一个实战项目，限流框架。今天，我们先讲其中的分析环节，介绍项目背景，分析项目需求。</p><p>话不多说，让我们正式开始今天的学习吧！</p><h2>项目背景</h2><p>我们先来讲下需求诞生的背景。这个背景跟我们下一个实战项目幂等框架也有关系，所以要从很久很久讲起，希望你能耐心看完，不然后面可能会看不懂。</p><p>公司成立初期，团队人少。公司集中精力开发一个金融理财产品（我们把这个项目叫做X项目）。整个项目只做了简单的前后端分离，后端的所有代码都在一个GitHub仓库中，整个后端作为一个应用来部署，没有划分微服务。</p><!-- [[[read_end]]] --><p>遇到了行业风口，公司发展得不错，公司开始招更多人，开发更多的金融产品，比如专注房贷的理财产品、专注供应链的产品、专注消费贷的借款端产品等等。在产品形态上，每个金融产品都做成了独立的App。</p><p>对于不同的金融产品，尽管移动端长得不一样，但是后端的很多功能、代码都是可以复用的。为了快速上线，针对每个应用，公司都成立一个新的团队，然后拷贝X项目的代码，在此基础之上修改、添加新的功能。</p><p>这样成立新团队，拷贝老代码，改改就能上线一个新产品的开发模式，在一开始很受欢迎。产品上线快，也给公司赢得了竞争上的优势。但时间一长，这样的开发模式暴露出来的问题就越来越多了。而且随着公司的发展，公司也过了急速扩张期，人招得太多，公司开始考虑研发效率问题了。</p><p>因为所有的项目的代码都是从X项目拷贝来的，多个团队同时维护相似的代码，显然是重复劳动，协作起来也非常麻烦。任何团队发现代码的bug，都要同步到其他团队做相同的修改。而且，各个团队对代码独立迭代，改得面目全非，即便要添加一个通用的功能，每个团队也都要基于自己的代码再重复开发。</p><p>除此之外，公司成立初期，各个方面条件有限，只能招到开发水平一般的员工，而且追求快速上线，所以，X项目的代码质量很差，结构混乱、命名不规范、到处是临时解决方案、埋了很多坑，在烂代码之上不停地堆砌烂代码，时间长了，代码的可读性越来越差、维护成本越来越高，甚至高过了重新开发的成本。</p><p>这个时候该怎么办呢？如果让你出出主意，你有什么好的建议吗？</p><p>我们可以把公共的功能、代码抽离出来，形成一个独立的项目，部署成一个公共服务平台。所有金融产品的后端还是参照MVC三层架构独立开发，不过，它们只实现自己特有的功能，对于一些公共的功能，通过远程调用公共服务平台提供的接口来实现。</p><p>这里提到的公共服务平台，有点类似现在比较火的“中台”或“微服务”。不过，为了减少部署、维护多个微服务的成本，我们把所有公共的功能，放到一个项目中开发，放到一个应用中部署。只不过，我们要未雨绸缪，事先按照领域模型，将代码的模块化做好，等到真的有哪个模块的接口调用过于集中，性能出现瓶颈的时候，我们再把它拆分出来，设计成独立的微服务来开发和部署。</p><p>经过这样的拆分之后，我们可以指派一个团队，集中维护公共服务平台的代码。开发一个新的金融产品，也只需要更少的人员来参与，因为他们只需要开发、维护产品特有的功能和代码就可以了。整体上，维护成本降低了。除此之外，公共服务平台的代码集中到了一个团队手里，重构起来不需要协调其他团队和项目，也便于我们重构、改善代码质量。</p><h2>需求背景</h2><p>对于公共服务平台来说，接口请求来自很多不同的系统（后面统称为调用方），比如各种金融产品的后端系统。在系统上线一段时间里，我们遇到了很多问题。比如，因为调用方代码bug 、不正确地使用服务（比如启动Job来调用接口获取数据）、业务上面的突发流量（比如促销活动），导致来自某个调用方的接口请求数突增，过度争用服务的线程资源，而来自其他调用方的接口请求，因此来不及响应而排队等待，导致接口请求的响应时间大幅增加，甚至出现超时。</p><p>为了解决这个问题，你有什么好的建议呢？我先来说说我的。</p><p>我们可以开发接口限流功能，限制每个调用方对接口请求的频率。当超过预先设定的访问频率后，我们就触发限流熔断，比如，限制调用方app-1对公共服务平台总的接口请求频率不超过1000次/秒，超过之后的接口请求都会被拒绝。除此之外，为了更加精细化地限流，除了限制每个调用方对公共服务平台总的接口请求频率之外，我们还希望能对单独某个接口的访问频率进行限制，比如，限制app-1对接口/user/query的访问频率为每秒钟不超过100次。</p><p>我们希望开发出来的东西有一定的影响力，即便做不到在行业内有影响力，起码也要做到在公司范围内有影响力。所以，从一开始，我们就不想把这个限流功能，做成只有我们项目可用。我们希望把它开发成一个通用的框架，能够应用到各个业务系统中，甚至可以集成到微服务治理平台中。实际上，这也体现了业务开发中要具备的抽象意识、框架意识。我们要善于识别出通用的功能模块，将它抽象成通用的框架、组件、类库等。</p><h2>需求分析</h2><p>刚刚我们花了很大篇幅来介绍项目背景和需求背景，接下来，我们再对需求进行更加详细的分析和整理。</p><p>前面我们已经讲过一些需求分析的方法，比如画线框图、写用户用例、测试驱动开发等等。这里，我们借助用户用例和测试驱动开发的思想，先去思考，如果框架最终被开发出来之后，它会如何被使用。我一般会找一个框架的应用场景，针对这个场景写一个框架使用的Demo程序，这样能够很直观地看到框架长什么样子。知道了框架应该长什么样，就相当于应试教育中确定了考试题目。针对明确的考题去想解决方案，这是我们多年应试教育锻炼之后最擅长做的。</p><p>对于限流框架来说，我们来看下它的应用场景。</p><p>首先我们需要设置限流规则。为了做到在不修改代码的前提下修改规则，我们一般会把规则放到配置文件中（比如XML、YAML配置文件）。在集成了限流框架的应用启动的时候，限流框架会将限流规则，按照事先定义的语法，解析并加载到内存中。我写了一个限流规则的Demo配置，如下所示：</p><pre><code>configs:\n- appId: app-1\n  limits:\n  - api: /v1/user\n    limit: 100\n  - api: /v1/order\n    limit: 50\n- appId: app-2\n  limits:\n  - api: /v1/user\n    limit: 50\n  - api: /v1/order\n    limit: 50\n</code></pre><p>在接收到接口请求之后，应用会将请求发送给限流框架，限流框架会告诉应用，这个接口请求是允许继续处理，还是触发限流熔断。如果我们用代码来将这个过程表示出来的话，就是下面这个Demo的样子。如果项目使用的是Spring框架，我们可以利用Spring AOP，把这段限流代码放在统一的切面中，在切面中拦截接口请求，解析出请求对应的调用方APP ID和URL，然后验证是否对此调用方的这个接口请求进行限流。</p><pre><code>String appId = &quot;app-1&quot;; // 调用方APP-ID\nString url = &quot;http://www.eudemon.com/v1/user/12345&quot;;// 请求url\nRateLimiter ratelimiter = new RateLimiter();\nboolean passed = ratelimiter.limit(appId, url);\nif (passed) {\n  // 放行接口请求，继续后续的处理。\n} else {\n  // 接口请求被限流。\n}\n</code></pre><p>结合刚刚的Demo，从使用的角度来说，限流框架主要包含两部分功能：配置限流规则和提供编程接口（RateLimiter类）验证请求是否被限流。不过，作为通用的框架，除了功能性需求之外，非功能性需求也非常重要，有时候会决定一个框架的成败，比如，框架的易用性、扩展性、灵活性、性能、容错性等。</p><p>对于限流框架，我们来看它都有哪些非功能性需求。</p><p>易用性方面，我们希望限流规则的配置、编程接口的使用都很简单。我们希望提供各种不同的限流算法，比如基于内存的单机限流算法、基于Redis的分布式限流算法，能够让使用者自由选择。除此之外，因为大部分项目都是基于Spring开发的，我们还希望限流框架能非常方便地集成到使用Spring框架的项目中。</p><p>扩展性、灵活性方面，我们希望能够灵活地扩展各种限流算法。同时，我们还希望支持不同格式（JSON、YAML、XML等格式）、不同数据源（本地文件配置或Zookeeper集中配置等）的限流规则的配置方式。</p><p>性能方面，因为每个接口请求都要被检查是否限流，这或多或少会增加接口请求的响应时间。而对于响应时间比较敏感的接口服务来说，我们要让限流框架尽可能低延迟，尽可能减少对接口请求本身响应时间的影响。</p><p>容错性方面，接入限流框架是为了提高系统的可用性、稳定性，不能因为限流框架的异常，反过来影响到服务本身的可用性。所以，限流框架要有高度的容错性。比如，分布式限流算法依赖集中存储器Redis。如果Redis挂掉了，限流逻辑无法正常运行，这个时候业务接口也要能正常服务才行。</p><h2>重点回顾</h2><p>好了，今天的内容到此就讲完了。我们一块来总结回顾一下，你需要重点掌握的内容。</p><p>今天，我们主要对限流框架做了大的项目背景、需求背景介绍，以及更加具体的需求分析，明确了要做什么，为下两节课的设计和实现做准备。</p><p>从今天的讲解中，不知道你有没有发现，基本的功能需求其实没有多少，但将非功能性需求考虑进去之后，明显就复杂了很多。还是那句老话，<strong>写出能用的代码很简单，写出好用的代码很难。</strong>对于限流框架来说，非功能性需求是设计与实现的难点。怎么做到易用、灵活、可扩展、低延迟、高容错，才是开发的重点，也是我们接下来两节课要讲解的重点。</p><p>除此之外，今天我们还实践了一些需求分析的方法，比如画线框图、写用户用例、测试驱动开发等等。针对限流框架，我们借助用户用例和测试驱动开发的思想，先去思考，如果框架最终被开发出来之后，它会如何被使用。针对具体的场景去做分析，更加清晰直观。</p><h2>课堂讨论</h2><p>在今天介绍项目背景的时候，我讲了公司遇到的一个开发问题，并提出了解决方案，你也可以留言分享一下，你所在公司或者项目中，遇到过哪些比较头疼的开发问题，又是如何解决的？</p><p>欢迎留言和我分享你的想法。如果有收获，也欢迎你把这篇文章分享给你的朋友。</p>","neighbors":{"left":{"article_title":"89 | 开源实战五（下）：总结MyBatis框架中用到的10种设计模式","id":240971},"right":{"article_title":"91 | 项目实战一：设计实现一个支持各种算法的限流框架（设计）","id":243175}},"comments":[{"had_liked":false,"id":222260,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1590729444,"is_pvip":false,"replies":[{"id":"85678","content":"1. 这个也没法量化判断，只能侧面上、主观上、感受上去判断。<br>2. 给领导说下现状，说下重写计划，说下重写好处，然后立个生死状，剩下的就看领导觉悟了<br>3. 看领导重不重视，如果重视，你重写好了，你就升职加薪，如果领导不重视，那也别做出力不讨好的事情了","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1593911489,"ip_address":"","comment_id":222260,"utype":1}],"discussion_count":20,"race_medal":0,"score":"224929028836","product_id":100039001,"comment_content":"1.大佬就是大佬，言简意赅。几句话就将大部分小公司发展阶段的场景描述的淋漓尽致。<br><br>2.我们公司的项目完全符合上诉故事背景描述。但比这个故事背景更糟糕的是。我们过早的做了微服务拆分，而且做拆分的人感觉真的不会写代码。因为拆分出来的微服务包无法用明确的模型来定义。模型和微服务包呈现了多对多的关联现象。与其说做了微服务拆分，不如说硬是把大单体用rpc技术拆成了多个包。因为耦合严重，无论是软件开发还是计算资源分配上，不仅没有帮助，反而还更糟糕了。<br><br>3.更恐怖的是，例子中业务扩展做了项目拷贝的动作，我们也做过。只是上面拷贝的是一个项目，我们拷贝的是从交易平台到供应链总共几十近百的“微服务”。<br><br>4.解决方案：硬着头皮，咬着牙齿写功能做维护。反正需求倒排期，出bug连带绩效清0，人走加人。<br><br>5.结果：线上bug频繁，人员流动频繁，新人上手困难。<br><br>6.请教：如何判断继续维护扩展的成本已经高于重写的成本？如何说服领导开始着手重写？在商业模式不景气时，还有必要做这个吗？<br>","like_count":53,"discussions":[{"author":{"id":1045078,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f2/56/c39046c0.jpg","nickname":"Jie","note":"","ucode":"AB94041E548FEB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":276224,"discussion_content":"分布式单体……","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1590843289,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1178235,"avatar":"https://static001.geekbang.org/account/avatar/00/11/fa/7b/f89a398b.jpg","nickname":"Charles | 姜海龙","note":"","ucode":"17BA74D1684184","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1045078,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f2/56/c39046c0.jpg","nickname":"Jie","note":"","ucode":"AB94041E548FEB","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338564,"discussion_content":"哈哈，我们公司就是一个项目一个微服务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609314965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":276224,"ip_address":""},"score":338564,"extra":""}]},{"author":{"id":1236320,"avatar":"https://static001.geekbang.org/account/avatar/00/12/dd/60/a6a4f79a.jpg","nickname":"笨鸟","note":"","ucode":"68029ADA76AA5A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348122,"discussion_content":"跟我们公司差不了多少,看着是分微服务了,但是耦合严重,代码特别乱,有用的没用的一堆","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1612432332,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496731,"discussion_content":"1. 这个也没法量化判断，只能侧面上、主观上、感受上去判断。\n2. 给领导说下现状，说下重写计划，说下重写好处，然后立个生死状，剩下的就看领导觉悟了\n3. 看领导重不重视，如果重视，你重写好了，你就升职加薪，如果领导不重视，那也别做出力不讨好的事情了","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1593911489,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1095857,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/bvj76PmeUvW8kokyu91IZWuRATKmabibDWbzAj2TajeEic7WvKCJOLaOh6jibEmdQ36EO3sBUZ0HibAiapsrZo64U8w/132","nickname":"梦倚栏杆","note":"","ucode":"BDEB97F2822445","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":277973,"discussion_content":"握个手吧，我想吐槽我们拆的感觉也没达到想要的效果，没想到你们的这么严重","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1591133829,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1039810,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/dd/c2/0d58f08b.jpg","nickname":"Apple","note":"","ucode":"904D70CF7A6148","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":275588,"discussion_content":"一般这种领导就是一笔潦倒 强行微服务 其实根本就是瞎搞","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1590735129,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1441569,"avatar":"https://static001.geekbang.org/account/avatar/00/15/ff/21/8815d2e5.jpg","nickname":"亮子","note":"","ucode":"DF37D5E0714D02","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575360,"discussion_content":"这是哪门子微服务，就是照葫芦画瓢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654770147,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1261052,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3d/fc/f81d7847.jpg","nickname":"BATMAN","note":"","ucode":"414137A1074E62","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":357769,"discussion_content":"这种公司我经历过一个，呆了一个月，上线一个功能后就跑路了，代码写起来是真难受","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615863584,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2557346,"avatar":"https://static001.geekbang.org/account/avatar/00/27/05/a2/24d5e88e.jpg","nickname":"king🐳","note":"","ucode":"88DA7981062AB5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1261052,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3d/fc/f81d7847.jpg","nickname":"BATMAN","note":"","ucode":"414137A1074E62","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393795,"discussion_content":"这种感觉主要还是公司不重视","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631602949,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":357769,"ip_address":""},"score":393795,"extra":""}]},{"author":{"id":1054923,"avatar":"https://static001.geekbang.org/account/avatar/00/10/18/cb/edb5a0a0.jpg","nickname":"小橙橙","note":"","ucode":"4F467210A15F66","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349420,"discussion_content":"怎么理解模型和微服务呈多对多关系？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613188238,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1054923,"avatar":"https://static001.geekbang.org/account/avatar/00/10/18/cb/edb5a0a0.jpg","nickname":"小橙橙","note":"","ucode":"4F467210A15F66","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349537,"discussion_content":"一个模型由多个包提供功能。一个包提供多个模型的能力。一句话就是没有按模型去拆分包。只是为了微服务而微服务。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1613296115,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":349420,"ip_address":""},"score":349537,"extra":""}]},{"author":{"id":1022166,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/98/d6/29623b4f.jpg","nickname":"麦田","note":"","ucode":"E02D3BF550000D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335637,"discussion_content":"现在的业务能勉强用，不要想着重构了，还是先猥琐发育，然后准备跑路吧！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608259107,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1022166,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/98/d6/29623b4f.jpg","nickname":"麦田","note":"","ucode":"E02D3BF550000D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335670,"discussion_content":"当你开始对自己的代码苛刻。其实会有一个很不好的副作用。那就是对别人的代码质量的期望值会拔高，这会让你过得很不开心。求同存异认可烂代码，以价值为导向去工作，这是一件很讲究修养的事，它很难，我暂时还做不到。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1608268114,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":335637,"ip_address":""},"score":335670,"extra":""},{"author":{"id":2169334,"avatar":"","nickname":"sampson.qi","note":"","ucode":"D9A264EF8C8DB2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379257,"discussion_content":"看到同事一个方法300行，10来个循环套着大量的if else。 啥好脾气都磨没了呀","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1623775992,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":335670,"ip_address":""},"score":379257,"extra":""},{"author":{"id":1595176,"avatar":"https://static001.geekbang.org/account/avatar/00/18/57/28/be7550d2.jpg","nickname":"mo","note":"","ucode":"FB3E8C827BE5CC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2169334,"avatar":"","nickname":"sampson.qi","note":"","ucode":"D9A264EF8C8DB2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571122,"discussion_content":"那是你没看到过一个方法接近1000行，只是if就有100多个，还不包括for和Switch ，那真的是人生第一次见。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1652078853,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":379257,"ip_address":""},"score":571122,"extra":""}]},{"author":{"id":1093541,"avatar":"https://static001.geekbang.org/account/avatar/00/10/af/a5/afa1d7d7.jpg","nickname":"hasWhere","note":"","ucode":"2C2B2988107489","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319164,"discussion_content":"适合自己的鞋子才是最舒服的，不管是微服务还是ESB本质上都是为业务服务的，怎么样能保证质量，又能保证进度就怎么来呗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603954817,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1112490,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f9/aa/3e80212e.jpg","nickname":"龙猫","note":"","ucode":"FD726CC969EF9C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308220,"discussion_content":"😂领导不懂就跑路吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600870939,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1344077,"avatar":"https://static001.geekbang.org/account/avatar/00/14/82/4d/ed67c248.jpg","nickname":"鹅的天牙(Dain) 🐜","note":"","ucode":"EEBE207853E07A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282427,"discussion_content":"如果找不到合理的微的理由，不如不微。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591970290,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1181787,"avatar":"https://static001.geekbang.org/account/avatar/00/12/08/5b/2a342424.jpg","nickname":"青莲","note":"","ucode":"6BA5D5D47DE38E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":276636,"discussion_content":"1､先把不重要的边缘业务拆分出去做重构，尽量少依赖第三方 2、边缘业务重构完后，重点业务的服务就可以慢慢重构的，第一原则还是同一个业务领域的放到一个服务内，参照DDD设计，这样整个重构风险可控，小范围重构也可保障代码质量","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590921496,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1181787,"avatar":"https://static001.geekbang.org/account/avatar/00/12/08/5b/2a342424.jpg","nickname":"青莲","note":"","ucode":"6BA5D5D47DE38E","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":276657,"discussion_content":"基本思路：圈表，分离，优化。核心痛点：领导不看，做了很可能是徒做嫁衣。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590926122,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":276636,"ip_address":""},"score":276657,"extra":""}]}]},{"had_liked":false,"id":222180,"user_name":"业余爱好者","can_delete":false,"product_type":"c1","uid":1482915,"ip_address":"","ucode":"A890935A982988","user_header":"https://static001.geekbang.org/account/avatar/00/16/a0/a3/8da99bb0.jpg","comment_is_top":false,"comment_ctime":1590713753,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"104669928857","product_id":100039001,"comment_content":"既有架构演变历史，又有领域驱动设计。既有需求分析，又有测试驱动开发。信息量不小。","like_count":25},{"had_liked":false,"id":222211,"user_name":"Jackey","can_delete":false,"product_type":"c1","uid":1063751,"ip_address":"","ucode":"125DE81993FEDD","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/47/f6c772a1.jpg","comment_is_top":false,"comment_ctime":1590717459,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"74605161491","product_id":100039001,"comment_content":"做过限流项目，我们的方案是Redis挂了可以降级为本地内存限流，这种可能出现不均衡的问题，但短时间内也可以接受","like_count":18},{"had_liked":false,"id":222157,"user_name":"JustRunning","can_delete":false,"product_type":"c1","uid":1061157,"ip_address":"","ucode":"2F18DB26500AC4","user_header":"https://static001.geekbang.org/account/avatar/00/10/31/25/1a55bb52.jpg","comment_is_top":false,"comment_ctime":1590709351,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"44540382311","product_id":100039001,"comment_content":"部门做网关性产品，之前旧逻辑简单基于redis限流，最近因为redis性能导致服务堵塞，还在考虑怎么修复，初步是打算本地预分配，比如1000&#47;s,有10个容器，每个容器分配阈值90&#47;s和离线100&#47;s,达到90根据redis探测状态是否正常，正常采用redis，异常用离线100&#47;s限流，觉得有点土方法，暂时难点是在线扩缩容后怎么处理，因为扩缩容又是外部厂家的pass平台~希望能从老师这里借鉴一下更好的经验😘😉😘","like_count":10,"discussions":[{"author":{"id":1611025,"avatar":"https://static001.geekbang.org/account/avatar/00/18/95/11/eb431e52.jpg","nickname":"沈康","note":"","ucode":"02AFA50738AB8E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":277797,"discussion_content":"刚看了ali的https://github.com/alibaba/Sentinel ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591106632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":222246,"user_name":"辣么大","can_delete":false,"product_type":"c1","uid":1396951,"ip_address":"","ucode":"AB308B6DCA0108","user_header":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","comment_is_top":false,"comment_ctime":1590724782,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"40245430446","product_id":100039001,"comment_content":"哇！信息量大，有实战！好期待争哥后续两节的课程！<br>大的没做过，科研项目用到的机器人操作系统ROS，做高层的任务规划，可以调用ROS已有的低层的路径规划和机械臂运动规划。程序启动参数使用yaml文件配置。程序实现算法的时候，先是脑中有的大概的思路，然后才开始动手实现。当时运动规划还没实现，就先留了一个接口，但整理流程都能跑的下来，做到了模块相对独立，要等着我运动规划的功能实现，这个算法的完成流程到现在都跑不出来。思路就是把解耦，把功能分开。最后放个github链接吧，一年多主要经历都在做这个：https:&#47;&#47;github.com&#47;fip-lab&#47;PRobPlan","like_count":9,"discussions":[{"author":{"id":1430343,"avatar":"https://static001.geekbang.org/account/avatar/00/15/d3/47/25ec564c.jpg","nickname":"Zexho","note":"","ucode":"ADEB6624E29893","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285069,"discussion_content":"大三的时候竞赛就是做的机器人.同Ros系统,","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1592727316,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":222255,"user_name":"业余爱好者","can_delete":false,"product_type":"c1","uid":1482915,"ip_address":"","ucode":"A890935A982988","user_header":"https://static001.geekbang.org/account/avatar/00/16/a0/a3/8da99bb0.jpg","comment_is_top":false,"comment_ctime":1590728278,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31655499350","product_id":100039001,"comment_content":"限流熔断幂等等公共基础功能已经有很多开源组件与框架。重复造轮子，只是为了学习。","like_count":7},{"had_liked":false,"id":232392,"user_name":"Cutler","can_delete":false,"product_type":"c1","uid":1228136,"ip_address":"","ucode":"2EDECFE039845B","user_header":"https://static001.geekbang.org/account/avatar/00/12/bd/68/3fd6428d.jpg","comment_is_top":false,"comment_ctime":1593993647,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10183928239","product_id":100039001,"comment_content":"跨数据库的事务一致性问题，第三方服务与本地服务，mongdb与mysql等场景需要保证最终一致性，目前采用队列，幂等加重试，对业务侵入比较大，正在研发基于saga模型的分布式事务中间件。","like_count":3},{"had_liked":false,"id":222779,"user_name":"马以","can_delete":false,"product_type":"c1","uid":1344431,"ip_address":"","ucode":"3FEA06CA14DE28","user_header":"https://static001.geekbang.org/account/avatar/00/14/83/af/1cb42cd3.jpg","comment_is_top":false,"comment_ctime":1590910585,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10180845177","product_id":100039001,"comment_content":"期待下节课<br>","like_count":2},{"had_liked":false,"id":222602,"user_name":"javaadu","can_delete":false,"product_type":"c1","uid":1000519,"ip_address":"","ucode":"8C0B140F1C8992","user_header":"https://static001.geekbang.org/account/avatar/00/0f/44/47/3ddb94d0.jpg","comment_is_top":false,"comment_ctime":1590847905,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10180782497","product_id":100039001,"comment_content":"这篇文章来回看了三四遍，每次都有收获，对于项目实战篇的系列文章充满了期待","like_count":2},{"had_liked":false,"id":224486,"user_name":"Geek_e9b8c4","can_delete":false,"product_type":"c1","uid":1716601,"ip_address":"","ucode":"C29F7344A6EE6B","user_header":"","comment_is_top":false,"comment_ctime":1591416589,"is_pvip":false,"replies":[{"id":"85674","content":"下一步计划 关注我公众号吧”小争哥“","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1593910997,"ip_address":"","comment_id":224486,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5886383885","product_id":100039001,"comment_content":"专栏质量太高！小争哥，下个专栏是什么？？不要停","like_count":1,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497492,"discussion_content":"下一步计划 关注我公众号吧”小争哥“","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593910997,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":222571,"user_name":"有学识的兔子","can_delete":false,"product_type":"c1","uid":1628867,"ip_address":"","ucode":"D1D654B1562FC9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIicr82CnrdEjibibAvyeKRQHszSzIAqoCWxN0kqC442XcjEae6S9j6NDtKLpg4Da4CUQQeUFUicWqiaDw/132","comment_is_top":false,"comment_ctime":1590837026,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5885804322","product_id":100039001,"comment_content":"我所有的公司有个类似于巨无霸级的平台，所有的产品都蕴含其中，平台系统的复杂度很高，而我所在的组刚好是负责中间件开发。<br>最近遇到一个头疼的事情时，一个组件在不同场景下维护特定独立的配置文件，涉及跟配置相关的接口需要做适配，从组件的扩展性来说，带来了麻烦，出问题还非常不容易排查。","like_count":1},{"had_liked":false,"id":339438,"user_name":"源不息","can_delete":false,"product_type":"c1","uid":2739750,"ip_address":"","ucode":"2B9FF0B611BC9E","user_header":"https://static001.geekbang.org/account/avatar/00/29/ce/26/f493253d.jpg","comment_is_top":false,"comment_ctime":1648102721,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1648102721","product_id":100039001,"comment_content":"易用性方面，我们希望灰度规则的配置、灰度的使用都很简单。我们希望提供各种不同的灰度算法，比如根据接口的某个参数灰度，根据用户灰度，能够让使用者自由选择。除此之外，因为大部分项目都是基于 Spring 开发的，我们还希望灰度框架能非常方便地集成到使用 Spring 框架的项目中。<br><br>扩展性、灵活性方面，我们希望能够灵活地扩展各种限流算法。同时，我们还希望支持不同格式（JSON、YAML、XML 等格式）、不同数据源（本地文件配置或 Zookeeper 集中配置等）的灰度规则的配置方式。<br><br>性能方面，因为每个接口请求都要被检查是否设置灰度，这或多或少会增加接口请求的响应时间。而对于响应时间比较敏感的接口服务来说，我们要让灰度框架尽可能低延迟，尽可能减少对接口请求本身响应时间的影响。<br><br>容错性方面，接入限流框架是为了提高系统的可用性、稳定性，不能因为灰度框架的异常，反过来影响到服务本身的可用性。所以，灰度框架要有高度的容错性。比如，配置错误等，这个时候业务接口也要能正常服务才行。","like_count":0},{"had_liked":false,"id":325991,"user_name":"我是曾经那个少年","can_delete":false,"product_type":"c1","uid":1015189,"ip_address":"","ucode":"9F02F7FF147D14","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/95/dd73022c.jpg","comment_is_top":false,"comment_ctime":1639297414,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639297414","product_id":100039001,"comment_content":"遇到的问题：<br>的确是小公司在没有中间件部门的情况下，新搭建项目的时候很多非业务的功能基本上是一样的。<br>例如：<br>重复提交，幂等，分布式锁，授权登录，限流，基本上都是在之前的项目上拷贝复制。<br><br>自己最近想的解决方案就是把这些公用的东西，独立成每个spring-boot-starter 后面的业务复用。","like_count":0},{"had_liked":false,"id":319858,"user_name":"freesocean","can_delete":false,"product_type":"c1","uid":1529210,"ip_address":"","ucode":"CAD4C80CF569D3","user_header":"https://static001.geekbang.org/account/avatar/00/17/55/7a/d44df1d6.jpg","comment_is_top":false,"comment_ctime":1635991388,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635991388","product_id":100039001,"comment_content":"争哥说的这个问题正是我们遇到的问题，在微服务拆分后，确实存在一个服务出问题造成的雪崩，最后我们选择的是Sentinel 这个开源的流控框架，配置可以借助nacos，规则也比较灵活，目前满足我们需求，之前没有关注过Sentinel的核心思想和逻辑，今天这么一听，感觉底层应该和文章中讲的逻辑很接近，长见识了。","like_count":0},{"had_liked":false,"id":299969,"user_name":"if...else...","can_delete":false,"product_type":"c1","uid":2550743,"ip_address":"","ucode":"D0565908C99695","user_header":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","comment_is_top":false,"comment_ctime":1624941115,"is_pvip":false,"discussion_count":0,"race_medal":4,"score":"1624941115","product_id":100039001,"comment_content":"厉害了","like_count":0},{"had_liked":false,"id":234626,"user_name":"被过去推开","can_delete":false,"product_type":"c1","uid":1276690,"ip_address":"","ucode":"8B4F34FE93FD5B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Cib5umA0W17N9pichI08pnrXAExdbyh7AVzH4nEhD6KN3FXuELk4LJJuqUPPD7xmIy9nq5Hjbgnzic7sVZG5BKiaUQ/132","comment_is_top":false,"comment_ctime":1594737546,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1594737546","product_id":100039001,"comment_content":"以前的微服务鉴权是自己实现的，做的很粗糙。后来鉴权逻辑偶尔有修改，连带改所有的微服务，十分消耗人力。后来决定重新起个微服务，所有请求先到这个服务做统一鉴权！","like_count":0,"discussions":[{"author":{"id":1112490,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f9/aa/3e80212e.jpg","nickname":"龙猫","note":"","ucode":"FD726CC969EF9C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308222,"discussion_content":"可以在gateway网关做啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600871093,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233009,"user_name":"摸爬滚打三十年","can_delete":false,"product_type":"c1","uid":1240241,"ip_address":"","ucode":"764A7F920EC304","user_header":"https://static001.geekbang.org/account/avatar/00/12/ec/b1/d790b927.jpg","comment_is_top":false,"comment_ctime":1594191410,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594191410","product_id":100039001,"comment_content":"一遍学不会，再来一遍","like_count":0},{"had_liked":false,"id":225314,"user_name":"一壶浊酒","can_delete":false,"product_type":"c1","uid":1145530,"ip_address":"","ucode":"5D90F8F8121BBE","user_header":"https://static001.geekbang.org/account/avatar/00/11/7a/ba/8545f2d7.jpg","comment_is_top":false,"comment_ctime":1591713407,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1591713407","product_id":100039001,"comment_content":"看了争哥介绍的项目背景之后，发现我们公司也是存在这种情况，初期项目需要赶紧上线，什么都是先能用就行，导致后期可维护性越来越差，后来又衍生出了许多新的系统平台，又是重新写新的接口，至今都是如此。作为当前被分配负责数据一块的开发人员来说，我考虑也是将公共使用的数据接口单独拎出来作为一个独立的工程来提供服务，同时提供熔断限流等服务，通过学习争哥的项目实战，也刚好可以学习一下这方面的知识，看看自己的考虑是否有遗漏。","like_count":0},{"had_liked":false,"id":224897,"user_name":"，","can_delete":false,"product_type":"c1","uid":1701867,"ip_address":"","ucode":"A5543C8DFEB198","user_header":"https://static001.geekbang.org/account/avatar/00/19/f7/eb/e7127bb8.jpg","comment_is_top":false,"comment_ctime":1591585821,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1591585821","product_id":100039001,"comment_content":"公司的项目里遇到过一个问题,在部署了集群之后,用nginx做代理,然后如果修改了权限,有的人就能感觉到变化,有的人就不行,经过查找,发现项目里的权限模块跟业务模块耦合在一个单体应用里,权限通过一个hashtable做缓存,同时nginx用hash做负载均衡,也就是说一个应用的修改不会通知到另一个应用,这就导致了上面所说的问题,我有两种解决方案:<br>1.将权限模块拆分出来,所有的权限相关的请求都指向该服务<br>2.不处理权限模块,只将缓存放在redis中<br>项目上的解决方法是:因为权限修改并不是经常的事情,所以在修改完权限之后,重启所有服务,也可以解决该问题","like_count":0},{"had_liked":false,"id":223580,"user_name":"梦倚栏杆","can_delete":false,"product_type":"c1","uid":1095857,"ip_address":"","ucode":"BDEB97F2822445","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/bvj76PmeUvW8kokyu91IZWuRATKmabibDWbzAj2TajeEic7WvKCJOLaOh6jibEmdQ36EO3sBUZ0HibAiapsrZo64U8w/132","comment_is_top":false,"comment_ctime":1591134234,"is_pvip":false,"replies":[{"id":"84012","content":"常规的我能想到的就这些了，还有一些非常规的，要根据你的项目来","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1592527300,"ip_address":"","comment_id":223580,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1591134234","product_id":100039001,"comment_content":"老师，这个非功能性需求有常规的考虑list吗？需要考虑哪些点。比扩展性，易用性，容错性更细化一点的常规考虑点","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497174,"discussion_content":"常规的我能想到的就这些了，还有一些非常规的，要根据你的项目来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592527300,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":222465,"user_name":"Geek_3b1096","can_delete":false,"product_type":"c1","uid":1549364,"ip_address":"","ucode":"A6BD92B79B3632","user_header":"","comment_is_top":false,"comment_ctime":1590811695,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590811695","product_id":100039001,"comment_content":"学习分析方法","like_count":0}]}