{"id":11503,"title":"02 | Java的基本类型","content":"<p>如果你了解面向对象语言的发展史，那你可能听说过Smalltalk这门语言。它的影响力之大，以至于之后诞生的面向对象语言，或多或少都借鉴了它的设计和实现。</p>\n<p>在Smalltalk中，所有的值都是对象。因此，许多人认为它是一门纯粹的面向对象语言。</p>\n<p>Java则不同，它引进了八个基本类型，来支持数值计算。Java这么做的原因主要是工程上的考虑，因为使用基本类型能够在执行效率以及内存使用两方面提升软件性能。</p>\n<p>今天，我们就来了解一下基本类型在Java虚拟机中的实现。</p>\n<pre><code>public class Foo {\n  public static void main(String[] args) {\n    boolean 吃过饭没 = 2; // 直接编译的话javac会报错\n    if (吃过饭没) System.out.println(&quot;吃了&quot;);\n    if (true == 吃过饭没) System.out.println(&quot;真吃了&quot;);\n  }\n}\n</code></pre>\n<p>在上一篇结尾的小作业里，我构造了这么一段代码，它将一个boolean类型的局部变量赋值为2。为了方便记忆，我们给这个变量起个名字，就叫“吃过饭没”。</p>\n<p>赋值语句后边我设置了两个看似一样的if语句。第一个if语句，也就是直接判断“吃过饭没”，在它成立的情况下，代码会打印“吃了”。</p><!-- [[[read_end]]] -->\n<p>第二个if语句，也就是判断“吃过饭没”和true是否相等，在它成立的情况下，代码会打印“真吃了”。</p>\n<p>当然，直接编译这段代码，编译器是会报错的。所以，我迂回了一下，采用一个Java字节码的汇编工具，直接对字节码进行更改。</p>\n<p>那么问题就来了：当一个boolean变量的值是2时，它究竟是true还是false呢？</p>\n<p>如果你跑过这段代码，你会发现，问虚拟机“吃过饭没”，它会回答“吃了”，而问虚拟机“真（==）吃过饭没”，虚拟机则不会回答“真吃了”。</p>\n<p>那么虚拟机到底吃过没，下面我们来一起分析一下这背后的细节。</p>\n<h2>Java虚拟机的boolean类型</h2>\n<p>首先，我们来看看Java语言规范以及Java虚拟机规范是怎么定义boolean类型的。</p>\n<p>在Java语言规范中，boolean类型的值只有两种可能，它们分别用符号“true”和“false”来表示。显然，这两个符号是不能被虚拟机直接使用的。</p>\n<p>在Java虚拟机规范中，boolean类型则被映射成int类型。具体来说，“true”被映射为整数1，而“false”被映射为整数0。这个编码规则约束了Java字节码的具体实现。</p>\n<p>举个例子，对于存储boolean数组的字节码，Java虚拟机需保证实际存入的值是整数1或者0。</p>\n<p>Java虚拟机规范同时也要求Java编译器遵守这个编码规则，并且用整数相关的字节码来实现逻辑运算，以及基于boolean类型的条件跳转。这样一来，在编译而成的class文件中，除了字段和传入参数外，基本看不出boolean类型的痕迹了。</p>\n<pre><code># Foo.main编译后的字节码\n 0: iconst_2       // 我们用AsmTools更改了这一指令\n 1: istore_1\n 2: iload_1\n 3: ifeq 14        // 第一个if语句，即操作数栈上数值为0时跳转\n 6: getstatic java.lang.System.out\n 9: ldc &quot;吃了&quot;\n11: invokevirtual java.io.PrintStream.println\n14: iload_1\n15: iconst_1\n16: if_icmpne 27   // 第二个if语句，即操作数栈上两个数值不相同时跳转\n19: getstatic java.lang.System.out\n22: ldc &quot;真吃了&quot;\n24: invokevirtual java.io.PrintStream.println\n27: return\n</code></pre>\n<p>在前面的例子中，第一个if语句会被编译成条件跳转字节码ifeq，翻译成人话就是说，如果局部变量“吃过饭没”的值为0，那么跳过打印“吃了”的语句。</p>\n<p>而第二个if语句则会被编译成条件跳转字节码if_icmpne，也就是说，如果局部变量的值和整数1不相等，那么跳过打印“真吃了”的语句。</p>\n<p>可以看到，Java编译器的确遵守了相同的编码规则。当然，这个约束很容易绕开。除了我们小作业中用到的汇编工具AsmTools外，还有许多可以修改字节码的Java库，比如说ASM <a href=\"https://asm.ow2.io/\">[1] </a>等。</p>\n<p>对于Java虚拟机来说，它看到的boolean类型，早已被映射为整数类型。因此，将原本声明为boolean类型的局部变量，赋值为除了0、1之外的整数值，在Java虚拟机看来是“合法”的。</p>\n<p>在我们的例子中，经过编译器编译之后，Java虚拟机看到的不是在问“吃过饭没”，而是在问“吃过几碗饭”。也就是说，第一个if语句变成：你不会一碗饭都没吃吧。第二个if语句则变成：你吃过一碗饭了吗。</p>\n<p>如果我们约定俗成，每人每顿只吃一碗，那么第二个if语句还是有意义的。但如果我们打破常规，吃了两碗，那么较真的Java虚拟机就会将第二个if语句判定为假了。</p>\n<h2>Java的基本类型</h2>\n<p>除了上面提到的boolean类型外，Java的基本类型还包括整数类型byte、short、char、int和long，以及浮点类型float和double。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/77/45/77dfb788a8ad5877e77fc28ed2d51745.png?wh=467*278\" alt=\"\" /></p>\n<p>Java的基本类型都有对应的值域和默认值。可以看到，byte、short、int、long、float以及double的值域依次扩大，而且前面的值域被后面的值域所包含。因此，从前面的基本类型转换至后面的基本类型，无需强制转换。另外一点值得注意的是，尽管他们的默认值看起来不一样，但在内存中都是0。</p>\n<p>在这些基本类型中，boolean和char是唯二的无符号类型。在不考虑违反规范的情况下，boolean类型的取值范围是0或者1。char类型的取值范围则是[0, 65535]。通常我们可以认定char类型的值为非负数。这种特性十分有用，比如说作为数组索引等。</p>\n<p>在前面的例子中，我们能够将整数2存储到一个声明为boolean类型的局部变量中。那么，声明为byte、char以及short的局部变量，是否也能够存储超出它们取值范围的数值呢？</p>\n<p>答案是可以的。而且，这些超出取值范围的数值同样会带来一些麻烦。比如说，声明为char类型的局部变量实际上有可能为负数。当然，在正常使用Java编译器的情况下，生成的字节码会遵守Java虚拟机规范对编译器的约束，因此你无须过分担心局部变量会超出它们的取值范围。</p>\n<p>Java的浮点类型采用IEEE 754浮点数格式。以float为例，浮点类型通常有两个0，+0.0F以及-0.0F。</p>\n<p>前者在Java里是0，后者是符号位为1、其他位均为0的浮点数，在内存中等同于十六进制整数0x8000000（即-0.0F可通过Float.intBitsToFloat(0x8000000)求得）。尽管它们的内存数值不同，但是在Java中+0.0F == -0.0F会返回真。</p>\n<p>在有了+0.0F和-0.0F这两个定义后，我们便可以定义浮点数中的正无穷及负无穷。正无穷就是任意正浮点数（不包括+0.0F）除以+0.0F得到的值，而负无穷是任意正浮点数除以-0.0F得到的值。在Java中，正无穷和负无穷是有确切的值，在内存中分别等同于十六进制整数0x7F800000和0xFF800000。</p>\n<p>你也许会好奇，既然整数0x7F800000等同于正无穷，那么0x7F800001又对应什么浮点数呢？</p>\n<p>这个数字对应的浮点数是NaN（Not-a-Number）。</p>\n<p>不仅如此，[0x7F800001, 0x7FFFFFFF]和[0xFF800001, 0xFFFFFFFF]对应的都是NaN。当然，一般我们计算得出的NaN，比如说通过+0.0F/+0.0F，在内存中应为0x7FC00000。这个数值，我们称之为标准的NaN，而其他的我们称之为不标准的NaN。</p>\n<p>NaN有一个有趣的特性：除了“!=”始终返回true之外，所有其他比较结果都会返回false。</p>\n<p>举例来说，“NaN&lt;1.0F”返回false，而“NaN&gt;=1.0F”同样返回false。对于任意浮点数f，不管它是0还是NaN，“f!=NaN”始终会返回true，而“f==NaN”始终会返回false。</p>\n<p>因此，我们在程序里做浮点数比较的时候，需要考虑上述特性。在本专栏的第二部分，我会介绍这个特性给向量化比较带来什么麻烦。</p>\n<h2>Java基本类型的大小</h2>\n<p>在第一篇中我曾经提到，Java虚拟机每调用一个Java方法，便会创建一个栈帧。为了方便理解，这里我只讨论供解释器使用的解释栈帧（interpreted frame）。</p>\n<p>这种栈帧有两个主要的组成部分，分别是局部变量区，以及字节码的操作数栈。这里的局部变量是广义的，除了普遍意义下的局部变量之外，它还包含实例方法的“this指针”以及方法所接收的参数。</p>\n<p>在Java虚拟机规范中，局部变量区等价于一个数组，并且可以用正整数来索引。除了long、double值需要用两个数组单元来存储之外，其他基本类型以及引用类型的值均占用一个数组单元。</p>\n<p>也就是说，boolean、byte、char、short这四种类型，在栈上占用的空间和int是一样的，和引用类型也是一样的。因此，在32位的HotSpot中，这些类型在栈上将占用4个字节；而在64位的HotSpot中，他们将占8个字节。</p>\n<p>当然，这种情况仅存在于局部变量，而并不会出现在存储于堆中的字段或者数组元素上。对于byte、char以及short这三种类型的字段或者数组单元，它们在堆上占用的空间分别为一字节、两字节，以及两字节，也就是说，跟这些类型的值域相吻合。</p>\n<p>因此，当我们将一个int类型的值，存储到这些类型的字段或数组时，相当于做了一次隐式的掩码操作。举例来说，当我们把0xFFFFFFFF（-1）存储到一个声明为char类型的字段里时，由于该字段仅占两字节，所以高两位的字节便会被截取掉，最终存入“\\uFFFF”。</p>\n<p>boolean字段和boolean数组则比较特殊。在HotSpot中，boolean字段占用一字节，而boolean数组则直接用byte数组来实现。为了保证堆中的boolean值是合法的，HotSpot在存储时显式地进行掩码操作，也就是说，只取最后一位的值存入boolean字段或数组中。</p>\n<p>讲完了存储，现在我来讲讲加载。Java虚拟机的算数运算几乎全部依赖于操作数栈。也就是说，我们需要将堆中的boolean、byte、char以及short加载到操作数栈上，而后将栈上的值当成int类型来运算。</p>\n<p>对于boolean、char这两个无符号类型来说，加载伴随着零扩展。举个例子，char的大小为两个字节。在加载时char的值会被复制到int类型的低二字节，而高二字节则会用0来填充。</p>\n<p>对于byte、short这两个类型来说，加载伴随着符号扩展。举个例子，short的大小为两个字节。在加载时short的值同样会被复制到int类型的低二字节。如果该short值为非负数，即最高位为0，那么该int类型的值的高二字节会用0来填充，否则用1来填充。</p>\n<h2>总结与实践</h2>\n<p>今天我介绍了Java里的基本类型。</p>\n<p>其中，boolean类型在Java虚拟机中被映射为整数类型：“true”被映射为1，而“false”被映射为0。Java代码中的逻辑运算以及条件跳转，都是用整数相关的字节码来实现的。</p>\n<p>除boolean类型之外，Java还有另外7个基本类型。它们拥有不同的值域，但默认值在内存中均为0。这些基本类型之中，浮点类型比较特殊。基于它的运算或比较，需要考虑+0.0F、-0.0F以及NaN的情况。</p>\n<p>除long和double外，其他基本类型与引用类型在解释执行的方法栈帧中占用的大小是一致的，但它们在堆中占用的大小确不同。在将boolean、byte、char以及short的值存入字段或者数组单元时，Java虚拟机会进行掩码操作。在读取时，Java虚拟机则会将其扩展为int类型。</p>\n<p>今天的动手环节，你可以观测一下，将boolean类型的值存入字段中时，Java虚拟机所做的掩码操作。</p>\n<p>你可以将下面代码中boolValue = true里的true换为2或者3，看看打印结果与你的猜测是否相符合。</p>\n<p>熟悉Unsafe的同学，可以使用Unsafe.putBoolean和Unsafe.putByte方法，看看还会不会做掩码操作。</p>\n<pre><code>public class Foo {\n  static boolean boolValue;\n  public static void main(String[] args) {\n    boolValue = true; // 将这个true替换为2或者3，再看看打印结果\n    if (boolValue) System.out.println(&quot;Hello, Java!&quot;);\n    if (boolValue == true) System.out.println(&quot;Hello, JVM!&quot;);\n  }\n}\n</code></pre>\n<p></p>\n","neighbors":{"left":{"article_title":"01 | Java代码是怎么运行的？","id":11289},"right":{"article_title":"03 | Java虚拟机是如何加载Java类的?","id":11523}},"comments":[{"had_liked":false,"id":16965,"user_name":"丨落灬小莫","can_delete":false,"product_type":"c1","uid":1180850,"ip_address":"","ucode":"0BF6AC6DF24F6B","user_header":"https://static001.geekbang.org/account/avatar/00/12/04/b2/002398d6.jpg","comment_is_top":false,"comment_ctime":1532335295,"is_pvip":false,"replies":[{"id":"5904","content":"对的！","user_name":"作者回复","comment_id":16965,"uid":"1176688","ip_address":"","utype":1,"ctime":1532416623,"user_name_real":"郑雨迪"}],"discussion_count":11,"race_medal":0,"score":"1388806771903","product_id":100010301,"comment_content":"当替换为2的时候无输出<br>当替换为3的时候打印HelloJava及HelloJVM<br>猜测是因为将boolean 保存在静态域中,指定了其类型为&#39;Z&#39;,当修改为2时取低位最后一位为0,当修改为3时取低位最后一位为1<br>则说明boolean的掩码处理是取低位的最后一位","like_count":324,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420989,"discussion_content":"对的！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532416623,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1185184,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/a0/269ee92f.jpg","nickname":"Andot","note":"","ucode":"12BB6AB281C4C9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":281676,"discussion_content":"类型为Z是什么意思呢？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1591790516,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1235320,"avatar":"https://static001.geekbang.org/account/avatar/00/12/d9/78/8a328299.jpg","nickname":"佳佳大魔王","note":"","ucode":"D5214903D85A0F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1185184,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/a0/269ee92f.jpg","nickname":"Andot","note":"","ucode":"12BB6AB281C4C9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295257,"discussion_content":"那个表里面有，就是boolean类型","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596127268,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":281676,"ip_address":""},"score":295257,"extra":""}]},{"author":{"id":2310830,"avatar":"","nickname":"Geek_abe60b","note":"","ucode":"84DFE9406562BC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327292,"discussion_content":"我不太了解取低位是怎么算的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1605786278,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1231549,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ca/bd/a51ae4b2.jpg","nickname":"吃饭饭","note":"","ucode":"95CFA07CDA2957","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1374,"discussion_content":"牛人呐","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1562587917,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2006955,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/9f/ab/8b709f89.jpg","nickname":"Gody Chang","note":"","ucode":"E52E807DFA2BAF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":564335,"discussion_content":"改成2输出了hello java啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650211821,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1008404,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/63/14/06eff9a4.jpg","nickname":"Jerry银银","note":"","ucode":"80DA1172A2360A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":94849,"discussion_content":"老师文章中举的那个“吃饭”的例子，也将字节码boolean值修改成了2，那个地方也表示了虚拟机做了掩码处理了吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576994050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1108087,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e8/77/bfa13492.jpg","nickname":"吉米","note":"","ucode":"9BC2D107D01514","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1008404,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/63/14/06eff9a4.jpg","nickname":"Jerry银银","note":"","ucode":"80DA1172A2360A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309411,"discussion_content":"本文开始的例子中，boolean类型的变量是局部变量，存放在栈中，即本文中所说的栈帧中的局部变量区，该区内，用int型存放boolean具体的值，所以当变量赋值为2或者3的时候，并没有掩码截取变量的值，产生的结果是一样的\n\n总结中的例子，boolean类型变量是静态变量，存放在方法区中（在有的虚拟机下，方法区是堆的一部分），跟堆中存放不同类型数据所需要的长度是一样的，堆中boolean占用一个bit，如果赋值为2（二进制即10），则掩码为0，如果赋值为3，则掩码为1，产生不同的结果","likes_number":18,"is_delete":false,"is_hidden":false,"ctime":1601282755,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":94849,"ip_address":""},"score":309411,"extra":""},{"author":{"id":1122734,"avatar":"https://static001.geekbang.org/account/avatar/00/11/21/ae/416a7d6d.jpg","nickname":"Moby","note":"","ucode":"A9CFD37FD8B5C7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1108087,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e8/77/bfa13492.jpg","nickname":"吉米","note":"","ucode":"9BC2D107D01514","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312170,"discussion_content":"谢谢你的评论������","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1602600522,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":309411,"ip_address":""},"score":312170,"extra":""}]},{"author":{"id":1378332,"avatar":"https://static001.geekbang.org/account/avatar/00/15/08/1c/ab50923c.jpg","nickname":"Jacen","note":"","ucode":"A1EC8D8FE11230","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2695,"discussion_content":"改成2或者3，编译不通过，要怎么验证啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563867299,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1621793,"avatar":"https://static001.geekbang.org/account/avatar/00/18/bf/21/44eb3aee.jpg","nickname":"Hou","note":"","ucode":"92BF011EF961B4","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1378332,"avatar":"https://static001.geekbang.org/account/avatar/00/15/08/1c/ab50923c.jpg","nickname":"Jacen","note":"","ucode":"A1EC8D8FE11230","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":39364,"discussion_content":"用asmtools.jar修改字节码，java编译器的话不会编译通过的","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1571917885,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":2695,"ip_address":""},"score":39364,"extra":""}]}]},{"had_liked":false,"id":34379,"user_name":"追梦","can_delete":false,"product_type":"c1","uid":1197685,"ip_address":"","ucode":"634A19055525B3","user_header":"https://static001.geekbang.org/account/avatar/00/12/46/75/9f80409f.jpg","comment_is_top":false,"comment_ctime":1540133250,"is_pvip":false,"discussion_count":7,"race_medal":0,"score":"396677124482","product_id":100010301,"comment_content":"有个地方初看不易看懂，我来解释下：<br>    作者一开始放的“吃没吃饭”的例子中boolean变量是局部变量，存放在Java方法栈的栈帧中的局部变量区，占据一个数据单元，无需做掩码；最后的例子中boolean变量是成员变量，存储在堆中的对象实例里，占有一个字节，且需要对最后一位做掩码","like_count":92,"discussions":[{"author":{"id":1135912,"avatar":"https://static001.geekbang.org/account/avatar/00/11/55/28/31b0cf2f.jpg","nickname":"黑色毛衣","note":"","ucode":"FF7E235F91BA5C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41019,"discussion_content":"都要做掩码操作吧，栈里的是 4 字节，堆里的是 1 字节，掩码操作是为了保证实际值是 0 / 1，所以只取最后一位。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1572329786,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1502969,"avatar":"https://static001.geekbang.org/account/avatar/00/16/ee/f9/1dcffdc0.jpg","nickname":"Geek_919d2f","note":"","ucode":"C160495F3F609A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1135912,"avatar":"https://static001.geekbang.org/account/avatar/00/11/55/28/31b0cf2f.jpg","nickname":"黑色毛衣","note":"","ucode":"FF7E235F91BA5C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326067,"discussion_content":"栈里边没有做掩码操作，吃过饭没 这个例子把变量赋值为2和3的时候，最后产生的输出结果都是一样的，在堆里不用的数据类型的数据长度是不一样的，堆中boolean 是一个bit ，当赋值2时 二进制位10，掩码去了0，当赋值3 ，二进制位11，掩码取1，最后结果两条都输出","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1605511761,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":41019,"ip_address":""},"score":326067,"extra":""},{"author":{"id":2045863,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/37/a7/0abf375a.jpg","nickname":"张琪","note":"","ucode":"9B1D4B8FC35D55","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1502969,"avatar":"https://static001.geekbang.org/account/avatar/00/16/ee/f9/1dcffdc0.jpg","nickname":"Geek_919d2f","note":"","ucode":"C160495F3F609A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":401971,"discussion_content":"为啥是堆，不是应该是方法区常量池的字面量么？按理说也是占1个slot，估计是从方法区取过来的时候做了掩码处理？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633776193,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":326067,"ip_address":""},"score":401971,"extra":""}]},{"author":{"id":2845977,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/6d/19/204b0900.jpg","nickname":"Black Jack","note":"","ucode":"CB16C8F44EF422","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531139,"discussion_content":"想来想去，应该是你这样的，在栈的局部变量没有做掩码，在堆的成员变量做了掩码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637239919,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1270632,"avatar":"https://static001.geekbang.org/account/avatar/00/13/63/68/14b98bbc.jpg","nickname":"大鹏","note":"","ucode":"F4611B80B08A3A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":368469,"discussion_content":"第二个例子中的boolean是静态变量，存放在方法区吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618723758,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2418763,"avatar":"https://static001.geekbang.org/account/avatar/00/24/e8/4b/8ddf36b0.jpg","nickname":"程同学","note":"","ucode":"622B71D5A2DA5E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347097,"discussion_content":"哇咔咔","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612151473,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1033425,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c4/d1/209abdd6.jpg","nickname":"小狼","note":"","ucode":"FEAC7864FC1D20","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2461,"discussion_content":"解释清晰，学到了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563671480,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16925,"user_name":"Kyle","can_delete":false,"product_type":"c1","uid":1106079,"ip_address":"","ucode":"44198A0BEC5FB2","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/9f/9259a6b9.jpg","comment_is_top":false,"comment_ctime":1532309004,"is_pvip":true,"replies":[{"id":"5894","content":"你说的是在堆里的情况。在解释器栈上是不一样的。至于原因吗，主要是变长数组不好控制，所以就选择浪费一些空间，以便访问时直接通过下标来计算地址。","user_name":"作者回复","comment_id":16925,"uid":"1176688","ip_address":"","utype":1,"ctime":1532364053,"user_name_real":"郑雨迪"}],"discussion_count":2,"race_medal":0,"score":"267820281356","product_id":100010301,"comment_content":"老师，文中看你说到：<br>“也就是说，boolean、byte、char、short 这四种类型，在栈上占用的空间和 int 是一样的，和引用类型也是一样的。因此，在 32 位的 HotSpot 中，这些类型在栈上将占用 4 个字节；而在 64 位的 HotSpot 中，他们将占 8 个字节。”<br><br>但是我记得boolean在内存中占1字节，char占2字节，这里是什么个意思？","like_count":62,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420971,"discussion_content":"你说的是在堆里的情况。在解释器栈上是不一样的。至于原因吗，主要是变长数组不好控制，所以就选择浪费一些空间，以便访问时直接通过下标来计算地址。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532364053,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1314521,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0e/d9/e61ce097.jpg","nickname":"郭纯","note":"","ucode":"2613860B4642C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":547335,"discussion_content":"在解释器栈里存储的 就是函数声明局部变量 this 指针 和实参吗 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642640214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":420971,"ip_address":""},"score":547335,"extra":""}]}]},{"had_liked":false,"id":16898,"user_name":"金蝉子","can_delete":false,"product_type":"c1","uid":1180714,"ip_address":"","ucode":"F4FC2E67125F83","user_header":"https://static001.geekbang.org/account/avatar/00/12/04/2a/462d01db.jpg","comment_is_top":false,"comment_ctime":1532303245,"is_pvip":false,"replies":[{"id":"5895","content":"ASM你指的是那个字节码工程包吗？是的话那就是一个提供了字节码抽象的工具，允许用Java代码来生成或者更改字节码。JDK里也会用到ASM，用来生成一些适配器什么的。我印象中代码覆盖工具JaCoCo也是用ASM来实现的。<br><br>Unsafe就是一些不被虚拟机控制的内存操作的合集。具体想要了解哪个API？<br><br>CAS可以理解为原子性的写操作，这个概念来自于底层CPU指令。Unsafe提供了一些cas的Java接口，在即时编译器中我们会将对这些接口的调用替换成具体的CPU指令。","user_name":"作者回复","comment_id":16898,"uid":"1176688","ip_address":"","utype":1,"ctime":1532368347,"user_name_real":"郑雨迪"}],"discussion_count":3,"race_medal":0,"score":"224870602637","product_id":100010301,"comment_content":"老师可以讲下ASM、Unsafe和CAS的底层原理吗？这块儿一直是个拦路虎，谢谢！","like_count":53,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420958,"discussion_content":"ASM你指的是那个字节码工程包吗？是的话那就是一个提供了字节码抽象的工具，允许用Java代码来生成或者更改字节码。JDK里也会用到ASM，用来生成一些适配器什么的。我印象中代码覆盖工具JaCoCo也是用ASM来实现的。\n\nUnsafe就是一些不被虚拟机控制的内存操作的合集。具体想要了解哪个API？\n\nCAS可以理解为原子性的写操作，这个概念来自于底层CPU指令。Unsafe提供了一些cas的Java接口，在即时编译器中我们会将对这些接口的调用替换成具体的CPU指令。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532368347,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2051293,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/4c/dd/c6035349.jpg","nickname":"Bumblebee","note":"","ucode":"B879C8A511D08D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571705,"discussion_content":"🚩","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652356259,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1164626,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c5/52/63008fc7.jpg","nickname":"xuwei","note":"","ucode":"07268C1743839F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":52841,"discussion_content":"cas你看操作系统","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574087803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16958,"user_name":"曲东方","can_delete":false,"product_type":"c1","uid":1177819,"ip_address":"","ucode":"6C3EA2F47A0B98","user_header":"https://static001.geekbang.org/account/avatar/00/11/f8/db/c4edf697.jpg","comment_is_top":false,"comment_ctime":1532327515,"is_pvip":false,"replies":[{"id":"5892","content":"研究得非常深入！<br><br>Unsafe.putBoolean会做掩码，另外方法返回也会对boolean byte char short进行掩码","user_name":"作者回复","comment_id":16958,"uid":"1176688","ip_address":"","utype":1,"ctime":1532363394,"user_name_real":"郑雨迪"}],"discussion_count":2,"race_medal":0,"score":"164741084763","product_id":100010301,"comment_content":"Unsafe.putBoolean和Unsafe.puByte是native实现<br><br>putBoolean和putByte也是通过宏SET_FIELD模板出的函数<br><br>#define SET_FIELD(obj, offset, type_name, x) \\<br>  oop p = JNIHandles::resolve(obj); \\<br>  *(type_name*)index_oop_from_field_offset_long(p, offset) = truncate_##type_name(x)<br><br>unsafe.cpp中定义宏做truncate<br>#define truncate_jboolean(x) ((x) &amp; 1)<br>#define truncate_jbyte(x) (x)<br>#define truncate_jshort(x) (x)<br>#define truncate_jchar(x) (x)<br>#define truncate_jint(x) (x)<br>#define truncate_jlong(x) (x)<br>#define truncate_jfloat(x) (x)<br>#define truncate_jdouble(x) (x)<br><br>综上：unsafe.Put*不会对值做修改<br>------------------------------------------------------------------------------------<br>getBoolean和getByte也是通过宏GET_FIELD模板出的函数<br><br>#define GET_FIELD(obj, offset, type_name, v) \\<br>  oop p = JNIHandles::resolve(obj); \\<br>  type_name v = *(type_name*)index_oop_from_field_offset_long(p, offset)<br><br>综上，unsafe.Get*不会对值做修改<br>------------------------------------------------------------------------------------<br>验证：<br>unsafe.putByte(foo, addr, (byte)2); &#47;&#47; 设置为: 2<br>System.out.println(unsafe.getByte(foo, addr)); &#47;&#47; 打印getByte: 2<br>System.out.println(unsafe.getBoolean(foo, addr)); &#47;&#47; 打印getBoolean: true<br><br>unsafe.putByte(foo, addr, (byte)1); &#47;&#47; 设置为: 1<br>System.out.println(unsafe.getByte(foo, addr)); &#47;&#47; 打印getByte: 1<br>System.out.println(unsafe.getBoolean(foo, addr)); &#47;&#47; 打印getBoolean: true<br>------------------------------------------------------------------------------------<br>疑问：<br>if(foo.flag)判断，使用getfield\tField flag:&quot;Z&quot;，执行逻辑等于：0 ！= flag<br>if(foo.getFlag())判断，使用invokevirtual\tMethod getFlag:&quot;()Z&quot;，执行逻辑等于： 0 != （(flag) &amp; 1）<br><br>求大神帮忙解答<br><br>--------------------------<br>附getFlag jasm码：<br>public Method getFlag:&quot;()Z&quot;<br>\tstack 1 locals 1<br>{<br>\t\taload_0;<br>\t\tgetfield\tField flag:&quot;Z&quot;;<br>\t\tireturn;<br>}<br><br><br><br>https:&#47;&#47;gist.github.com&#47;qudongfang&#47;49635d86882c03e49cff2b0f7d833805<br>","like_count":38,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420985,"discussion_content":"研究得非常深入！\n\nUnsafe.putBoolean会做掩码，另外方法返回也会对boolean byte char short进行掩码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532363394,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1134288,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4e/d0/d8a5f720.jpg","nickname":"Ken张云忠","note":"","ucode":"D0BAC9FC17DE2B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":72559,"discussion_content":"Unsafe.putBoolean掩码是做&amp;0x01操作吧,这里为什么最大设置只能是5","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1575504807,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23996,"user_name":"匿名小板凳","can_delete":false,"product_type":"c1","uid":1186977,"ip_address":"","ucode":"8291BC51EE78CB","user_header":"https://static001.geekbang.org/account/avatar/00/12/1c/a1/4e063c44.jpg","comment_is_top":false,"comment_ctime":1536744625,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"143270665393","product_id":100010301,"comment_content":"这节看的很吃力，对什么掩码，子码，反码，补码都换给大学老师了。","like_count":33},{"had_liked":false,"id":16950,"user_name":"Geek_dde3ac","can_delete":false,"product_type":"c1","uid":1103055,"ip_address":"","ucode":"6D560A17ADC249","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/cf/e82cd26b.jpg","comment_is_top":false,"comment_ctime":1532323552,"is_pvip":false,"replies":[{"id":"5905","content":"内存中是不做区分的。Java程序想要把它解读成什么类型，它就是什么类型。","user_name":"作者回复","comment_id":16950,"uid":"1176688","ip_address":"","utype":1,"ctime":1532416790,"user_name_real":"郑雨迪"}],"discussion_count":2,"race_medal":0,"score":"138971277024","product_id":100010301,"comment_content":"你好，在内存中都是0，那么是如何区别是哪种类型数据的呢？","like_count":32,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420982,"discussion_content":"内存中是不做区分的。Java程序想要把它解读成什么类型，它就是什么类型。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532416790,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":345055,"discussion_content":"内存里都是01数据，就看机器怎么来定义，比方说读取32位，那么就是个int型。多说一句，现代计算机输出到终端还要结合字符编码显示，这就是乱码的由来。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611649380,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17068,"user_name":"落叶飞逝的恋","can_delete":false,"product_type":"c1","uid":1046429,"ip_address":"","ucode":"F9A95DB28BCF1E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/9d/be04b331.jpg","comment_is_top":false,"comment_ctime":1532407990,"is_pvip":false,"replies":[{"id":"5900","content":"对的！","user_name":"作者回复","comment_id":17068,"uid":"1176688","ip_address":"","utype":1,"ctime":1532415909,"user_name_real":"郑雨迪"}],"discussion_count":1,"race_medal":0,"score":"83136786614","product_id":100010301,"comment_content":"其实那个boolean的true虚拟机里面为1，也就是if(true==吃了没)其实可以替换成if(1==2)这样理解吧","like_count":19,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421028,"discussion_content":"对的！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532415909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17490,"user_name":"dong","can_delete":false,"product_type":"c1","uid":1023779,"ip_address":"","ucode":"CE34E1A47231C8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9f/23/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1532681288,"is_pvip":false,"replies":[{"id":"6075","content":"谢谢建议","user_name":"作者回复","comment_id":17490,"uid":"1176688","ip_address":"","utype":1,"ctime":1532705224,"user_name_real":"郑雨迪"}],"discussion_count":1,"race_medal":0,"score":"65957190728","product_id":100010301,"comment_content":"感觉&quot;吃饭了&quot;例子，弄得有点饶了。也有些地方语句的起承转合不是很通顺，个人理解。","like_count":16,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421176,"discussion_content":"谢谢建议","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532705224,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17046,"user_name":"别处","can_delete":false,"product_type":"c1","uid":1046944,"ip_address":"","ucode":"22FD59AD4650B9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f9/a0/e6c2adac.jpg","comment_is_top":false,"comment_ctime":1532396144,"is_pvip":false,"replies":[{"id":"5901","content":"多谢指出。严格来说，前者指的是计算的时候被映射成int类型，后者指的是存储到堆中是一个字节。","user_name":"作者回复","comment_id":17046,"uid":"1176688","ip_address":"","utype":1,"ctime":1532416026,"user_name_real":"郑雨迪"}],"discussion_count":1,"race_medal":0,"score":"61661938288","product_id":100010301,"comment_content":"以下两个引至本文内容：<br>1、在 Java 虚拟机规范中，boolean 类型则被映射成 int 类型。<br>2、在 HotSpot 中，boolean 字段占用一字节，<br><br>问题：一个是int类型，一个是一个字节(32位系统的话就是byte类型)，是没讲透还是错误？","like_count":14,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421021,"discussion_content":"多谢指出。严格来说，前者指的是计算的时候被映射成int类型，后者指的是存储到堆中是一个字节。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532416026,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44838,"user_name":"Invincible、","can_delete":false,"product_type":"c1","uid":1075644,"ip_address":"","ucode":"C8656E45F3BAF1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoDkJkd9xYU4aiaTS5P49UmWOM1Nu4KYeTeHRiakf0Z1D2Y93usfavclvGo3I1CHWY26AjMlhVM1cJQ/132","comment_is_top":false,"comment_ctime":1543498090,"is_pvip":false,"replies":[{"id":"16500","content":"因为javac不支持这种操作，它把boolean是用int实现的这种虚拟机的实现细节给隐藏起来了，从而使得在语言层面没有这种会引起歧义的值。","user_name":"作者回复","comment_id":44838,"uid":"1176688","ip_address":"","utype":1,"ctime":1543853645,"user_name_real":"郑雨迪"}],"discussion_count":1,"race_medal":0,"score":"53083105642","product_id":100010301,"comment_content":"为什么我不能让boolvalue＝2或者3……","like_count":12,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430846,"discussion_content":"因为javac不支持这种操作，它把boolean是用int实现的这种虚拟机的实现细节给隐藏起来了，从而使得在语言层面没有这种会引起歧义的值。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543853645,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":24284,"user_name":"life is short, enjoy more.","can_delete":false,"product_type":"c1","uid":1074805,"ip_address":"","ucode":"3B5F37D30790A7","user_header":"https://static001.geekbang.org/account/avatar/00/10/66/75/54bb858e.jpg","comment_is_top":false,"comment_ctime":1536890178,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"53076497730","product_id":100010301,"comment_content":"老师你好，我刚来订阅，所以才开始看。<br>有一个疑问，您的原文“因此，在 32 位的 HotSpot 中，这些类型在栈上将占用 4 个字节；而在 64 位的 HotSpot 中，他们将占 8 个字节。”。但是有一句话，java一次编译，到处运行。计算机位数不一样的话，导致一样类型的size不一样，还可以到处运行吗？这里指的到处运行，是不是需要同位啊？比如32位的编译只能在32位的机器上运行，64只能在64的上运行。能互相兼容运行嘛？","like_count":12,"discussions":[{"author":{"id":1070581,"avatar":"https://static001.geekbang.org/account/avatar/00/10/55/f5/8d1588bd.jpg","nickname":"xfun","note":"","ucode":"A9A08E9EA6E13B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287278,"discussion_content":"你去下载jdk的时候是不是也分64位的和32位的？一次编译到处运行真正起作用的是不同操作系统的不同JVM。如果真的能到处运行，那JVm还分操作系统干啥。","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1593410867,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1339022,"avatar":"https://static001.geekbang.org/account/avatar/00/14/6e/8e/5d309a85.jpg","nickname":"拯救地球好累","note":"","ucode":"7643439601EF4C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8341,"discussion_content":"查了一下，英文资料中似乎没有找到&#34;compile once, run anywhere&#34;的说法，只有&#34;write once, run anywhere&#34;的说法，也比较疑惑。\n还有就是，堆中的内存分配是运行时的吧，即便是&#34;compile once&#34;的说法，似乎也没错。\n但是常量池中的常量的内存分配，应该是编译时的，此时似乎不同位数的机器似乎有差别？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567931671,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2296437,"avatar":"","nickname":"郭英豪","note":"","ucode":"C402C8B275ADCA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":324853,"discussion_content":"最后怎么理解呢，我也没搞明白","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1605180735,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1311806,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqNKGqOqXlibicdsywqCDMV1IAiaUEibWufvRHQppFsHeZWIVOho02XLTxegcOoaOiarmvQwgl6VevC1VQ/132","nickname":"Safufu","note":"","ucode":"D59C3C136D356B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8395,"discussion_content":"这个理解有点钻牛角尖了吧，到处运行指的是不同操作系统都可以运行。 又没有说不同jvm虚拟机都可以运行","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567994217,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2415448,"avatar":"https://static001.geekbang.org/account/avatar/00/24/db/58/a7a0a85b.jpg","nickname":"二饼","note":"","ucode":"48120565D135F7","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574844,"discussion_content":"个人理解，写一次，到处运行，并不是不会出现兼容问题，而是 jvm 将这些操作都做了，对于程序员使用的人来讲，就不用考虑这些问题了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654401760,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1630242,"avatar":"https://static001.geekbang.org/account/avatar/00/18/e0/22/0812cfd5.jpg","nickname":"alexy","note":"","ucode":"6ECFC6F6B21816","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":145291,"discussion_content":"向下兼容不向上兼容，","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579565408,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":24170,"user_name":"andy","can_delete":false,"product_type":"c1","uid":1231424,"ip_address":"","ucode":"0215EDE7FB7A55","user_header":"https://static001.geekbang.org/account/avatar/00/12/ca/40/91fdbc7d.jpg","comment_is_top":false,"comment_ctime":1536828740,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"40191534404","product_id":100010301,"comment_content":"我替换成2和3,都只能打印出一个Hello Java为什么呢？下面是AsmTools反编译代码<br>super public class Foo<br>        version 52:0<br>{<br><br>static Field boolValue:Z;<br><br>public Method &quot;&lt;init&gt;&quot;:&quot;()V&quot;<br>        stack 1 locals 1<br>{<br>                aload_0;<br>                invokespecial   Method java&#47;lang&#47;Object.&quot;&lt;init&gt;&quot;:&quot;()V&quot;;<br>                return;<br>}<br><br>public static Method main:&quot;([Ljava&#47;lang&#47;String;)V&quot;<br>        stack 2 locals 1<br>{<br>                iconst_2;<br>                putstatic       Field boolValue:&quot;Z&quot;;<br>                getstatic       Field boolValue:&quot;Z&quot;;<br>                ifeq    L18;<br>                getstatic       Field java&#47;lang&#47;System.out:&quot;Ljava&#47;io&#47;PrintStream;&quot;;<br>                ldc     String &quot;Hello, Java!&quot;;<br>                invokevirtual   Method java&#47;io&#47;PrintStream.println:&quot;(Ljava&#47;lang&#47;String;)V&quot;;<br>        L18:    stack_frame_type same;<br>                getstatic       Field boolValue:&quot;Z&quot;;<br>                iconst_1;<br>                if_icmpne       L33;<br>                getstatic       Field java&#47;lang&#47;System.out:&quot;Ljava&#47;io&#47;PrintStream;&quot;;<br>                ldc     String &quot;Hello, JVM!&quot;;<br>                invokevirtual   Method java&#47;io&#47;PrintStream.println:&quot;(Ljava&#47;lang&#47;String;)V&quot;;<br>        L33:    stack_frame_type same;<br>                return;<br>}<br><br>} &#47;&#47; end Class Foo","like_count":9,"discussions":[{"author":{"id":1003104,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4e/60/0d5aa340.jpg","nickname":"gogo","note":"","ucode":"E8F0F3B000020A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":21494,"discussion_content":"改的字节码中是哪个值呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569491553,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69656,"user_name":"迷上尼古丁的味道","can_delete":false,"product_type":"c1","uid":1397248,"ip_address":"","ucode":"057156BE6E578A","user_header":"https://static001.geekbang.org/account/avatar/00/15/52/00/cd5c0ff6.jpg","comment_is_top":false,"comment_ctime":1550803269,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"35910541637","product_id":100010301,"comment_content":"下面这段中0x8000000是不是少写了一个0呢<br><br>前者在 Java 里是 0，后者是符号位为 1、其他位均为 0 的浮点数，在内存中等同于十六进制整数 0x8000000（即 -0.0F 可通过 Float.intBitsToFloat(0x8000000) 求得）。","like_count":8,"discussions":[{"author":{"id":1260141,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3a/6d/910b2445.jpg","nickname":"Wheat","note":"","ucode":"7D99EA149B6DE8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328245,"discussion_content":"真是，我试了好半天都没试出来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606112241,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17371,"user_name":"杨春鹏","can_delete":false,"product_type":"c1","uid":1172056,"ip_address":"","ucode":"518F38232F97B5","user_header":"https://static001.geekbang.org/account/avatar/00/11/e2/58/8c8897c8.jpg","comment_is_top":false,"comment_ctime":1532600866,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"35892339234","product_id":100010301,"comment_content":"局部变量中基本数据类型存储在栈中，变量的变量名(引用符号)和变量值(字面量)都存储在栈中。<br>局部变量中引用数据类型的引用地址存储在栈中，对象的实例数据存储在堆中，类型数据存储在方法区<br>全局变量的基本数据类型和引用数据类型，都存储在堆中。<br>不知理解的是否正确","like_count":8,"discussions":[{"author":{"id":1034451,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c8/d3/3020ae46.jpg","nickname":"fatme","note":"","ucode":"75A805D2BB2AD1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":325839,"discussion_content":"无论是 java 语言或者 jvm, 并没有全局变量这种东西，只有变量和常量的区分。课文说的局部变量表，是指运行时 java 方法栈的栈帧内的一部分区域。这里存放的有 this 引用，方法实参，和方法内的局部变量。每个方法的局部变量最大个数，在编译时就已知，并会记录在其所属类的 class 文件内","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605442449,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1128127,"avatar":"https://static001.geekbang.org/account/avatar/00/11/36/bf/4cd28c78.jpg","nickname":"刘晓宇","note":"","ucode":"398C8A589D3664","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7566,"discussion_content":"有个疑问，全局变量的基本数据类型和引用类型是放在堆中还是方法区？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567567738,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1338584,"avatar":"https://static001.geekbang.org/account/avatar/00/14/6c/d8/68fec932.jpg","nickname":"花花young","note":"","ucode":"95AD30303C2B21","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1128127,"avatar":"https://static001.geekbang.org/account/avatar/00/11/36/bf/4cd28c78.jpg","nickname":"刘晓宇","note":"","ucode":"398C8A589D3664","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":218286,"discussion_content":"JDK1.6:方法区是永久代，不属于堆内存\nJDK1.7:将方法区移入了堆内存\nJDK1.8:将方法区移入到了元空间","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585644166,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":7566,"ip_address":""},"score":218286,"extra":""}]}]},{"had_liked":false,"id":136349,"user_name":"随心而至","can_delete":false,"product_type":"c1","uid":1097836,"ip_address":"","ucode":"31866865255101","user_header":"https://static001.geekbang.org/account/avatar/00/10/c0/6c/29be1864.jpg","comment_is_top":false,"comment_ctime":1569413412,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27339217188","product_id":100010301,"comment_content":"代码验证是可以的，3等奇数值最低位为1，就都打印；2等偶数值最低位为0，就都不打印，表明是掩码处理，取最低位。<br>public class Foo {<br>    private boolean flag;<br><br>    public boolean getFlag() {<br>        return flag;<br>    }<br>    public static void main(String[] args) throws NoSuchFieldException, IllegalAccessException {<br>        Unsafe unsafe = getUnsafe();<br>        Foo foo = new Foo();<br>        Field field = foo.getClass().getDeclaredField(&quot;flag&quot;);<br>        long offset = unsafe.objectFieldOffset(field);<br>        unsafe.putInt(foo, offset, 3);<br>        if (foo.getFlag()) System.out.println(&quot;Hello,Java&quot;);<br>        if (foo.getFlag() == true) System.out.println(&quot;Hello, JVM&quot;);<br>    }<br><br>    public static Unsafe getUnsafe() throws NoSuchFieldException, IllegalAccessException {<br>        Field f = Unsafe.class.getDeclaredField(&quot;theUnsafe&quot;);<br>        f.setAccessible(true);<br>        return (Unsafe) f.get(null);<br>    }<br>}","like_count":6},{"had_liked":false,"id":16987,"user_name":"志远","can_delete":false,"product_type":"c1","uid":1108762,"ip_address":"","ucode":"11015D14034130","user_header":"https://static001.geekbang.org/account/avatar/00/10/eb/1a/579c941e.jpg","comment_is_top":false,"comment_ctime":1532353096,"is_pvip":false,"replies":[{"id":"5893","content":"多谢指出！应该是 “!=“","user_name":"作者回复","comment_id":16987,"uid":"1176688","ip_address":"","utype":1,"ctime":1532363470,"user_name_real":"郑雨迪"}],"discussion_count":1,"race_medal":0,"score":"27302156872","product_id":100010301,"comment_content":"NaN 有一个有趣的特性：除了“!= 始终返回 true”之外，所有其他比较结果都会返回 false。这句话好拗口啊，双引号的标点符号有问题吧","like_count":6,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420997,"discussion_content":"多谢指出！应该是 “!=“","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532363470,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":67262,"user_name":"neohope","can_delete":false,"product_type":"c1","uid":1043475,"ip_address":"","ucode":"C0268F6E7E2B6E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/13/49e98289.jpg","comment_is_top":false,"comment_ctime":1550117107,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23024953587","product_id":100010301,"comment_content":"测试了3个JDK版本，发现boolValue = true 里的 true 换为 2 或 3的例子，对JRE的版本是有一定要求的。同一个修改后的class文件（JDK8编译），在不同的环境中运行，输出分别为：<br>windows+jdk1.8，2 输出第一个，3输出第一个；<br>Linux+openjdk1.10，2 不输出，3两个都输出；<br>windows+jdk1.11，2 不输出，3两个都输出；<br>建议还是用JDK10以上的版本。","like_count":6},{"had_liked":false,"id":33645,"user_name":"Arvin","can_delete":false,"product_type":"c1","uid":1266491,"ip_address":"","ucode":"B486D5BABA2FE4","user_header":"https://static001.geekbang.org/account/avatar/00/13/53/3b/a505e775.jpg","comment_is_top":false,"comment_ctime":1539842587,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23014679067","product_id":100010301,"comment_content":"当改为2或者3时则出现编译错误是则么回事！！！！","like_count":5},{"had_liked":false,"id":27191,"user_name":"星星","can_delete":false,"product_type":"c1","uid":1126460,"ip_address":"","ucode":"013714D9EF1847","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/3c/c2c72e28.jpg","comment_is_top":false,"comment_ctime":1537845120,"is_pvip":false,"replies":[{"id":"10300","content":"同样会加载至操作数栈上，但都当成各自类型来计算，而不是像其他几种，被当成int来计算","user_name":"作者回复","comment_id":27191,"uid":"1176688","ip_address":"","utype":1,"ctime":1538116541,"user_name_real":"郑雨迪"}],"discussion_count":1,"race_medal":0,"score":"23012681600","product_id":100010301,"comment_content":"long，double，float三种类型存入操作数栈有做转化操作吗？还是做浮点运算会有特殊处理，本文没有提及呀。","like_count":5,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424829,"discussion_content":"同样会加载至操作数栈上，但都当成各自类型来计算，而不是像其他几种，被当成int来计算","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538116541,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":26960,"user_name":"D→_→M","can_delete":false,"product_type":"c1","uid":1184017,"ip_address":"","ucode":"5EFDE9E2ED2C8B","user_header":"https://static001.geekbang.org/account/avatar/00/12/11/11/52a78856.jpg","comment_is_top":false,"comment_ctime":1537785224,"is_pvip":false,"replies":[{"id":"10290","content":"1. float占用空间和int一致。<br>2. 对的，也都与值域吻合。这里只提byte，char和short，是因为它们在栈上不吻合。<br>3. 其他几种也需要加载到栈上，但不是当成int型来计算。","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1538116140,"ip_address":"","comment_id":26960,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18717654408","product_id":100010301,"comment_content":"老师您在文中提到除了long,double以外，boolean,byte,char,short这四种类型在栈上占用的空间与int一样，那float也是一样的吗？<br>还有您说的byte,char,short这三种类型在堆上占用的空间与这些类型的值域吻合，那其他的哪几种类型也是如此吗？<br>最后还有就是加载那部分的内容只提到了boolean,byte,char以及short会加载到操作数栈上，将其值当成int类型来运算，并没有提到double,long和float类型，这三中类型与前四种类型相同吗？<br>","like_count":4,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424774,"discussion_content":"1. float占用空间和int一致。\n2. 对的，也都与值域吻合。这里只提byte，char和short，是因为它们在栈上不吻合。\n3. 其他几种也需要加载到栈上，但不是当成int型来计算。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538116140,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17329,"user_name":"梧桐树","can_delete":false,"product_type":"c1","uid":1180258,"ip_address":"","ucode":"EA8F7C76351028","user_header":"https://static001.geekbang.org/account/avatar/00/12/02/62/aeb735d2.jpg","comment_is_top":false,"comment_ctime":1532569122,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18712438306","product_id":100010301,"comment_content":"如果64位处理器，long 和double和其它类型一样都是8个字节码在栈中","like_count":4},{"had_liked":false,"id":17262,"user_name":"沉淀的梦想","can_delete":false,"product_type":"c1","uid":1177315,"ip_address":"","ucode":"BCB7C26F9D214B","user_header":"https://static001.geekbang.org/account/avatar/00/11/f6/e3/e4bcd69e.jpg","comment_is_top":false,"comment_ctime":1532528839,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18712398023","product_id":100010301,"comment_content":"为什么我替换成2和3，但是现象和第一讲的时候一样呢？都只能打印出一个Hello Java，我反复检查也没发现什么问题，这有可能是什么原因呢？","like_count":4},{"had_liked":false,"id":224425,"user_name":"宿臾洛城","can_delete":false,"product_type":"c1","uid":1564267,"ip_address":"","ucode":"362CC728E256F7","user_header":"https://static001.geekbang.org/account/avatar/00/17/de/6b/adee88bb.jpg","comment_is_top":false,"comment_ctime":1591377434,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14476279322","product_id":100010301,"comment_content":"关于掩码的解释可以看一下这篇文章，讲解的比较透彻<br>https:&#47;&#47;zhuanlan.zhihu.com&#47;p&#47;30934719","like_count":3},{"had_liked":false,"id":24565,"user_name":"果然如此","can_delete":false,"product_type":"c1","uid":1210003,"ip_address":"","ucode":"C7543BD0A67505","user_header":"https://static001.geekbang.org/account/avatar/00/12/76/93/c78a132a.jpg","comment_is_top":false,"comment_ctime":1537145152,"is_pvip":false,"replies":[{"id":"9020","content":"两个专栏的侧重点不同。<br><br>本专栏主要面向对Java的理解比较深入的同学。","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1537175468,"ip_address":"","comment_id":24565,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14422047040","product_id":100010301,"comment_content":"不错，针对知识点分析的很深入！很有收获，所谓“一沙一世界”！<br>我购买的另一个java面试题总结课程“看起来大而全”，而实际看了却感觉没有收获！","like_count":3,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424036,"discussion_content":"两个专栏的侧重点不同。\n\n本专栏主要面向对Java的理解比较深入的同学。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537175468,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2330905,"avatar":"https://static001.geekbang.org/account/avatar/00/23/91/19/6a3e7efc.jpg","nickname":"程序员9527","note":"","ucode":"1A1609F6BEAD84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392644,"discussion_content":"Java核心36讲还是可以的，毕竟是面试，不可能讲太细","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631085230,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21822,"user_name":"crystal","can_delete":false,"product_type":"c1","uid":1110905,"ip_address":"","ucode":"3BD0DA66153B90","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoo9tf9HsbEMDfUaS3GHFzb8q0EZnUXB9h7qPwBVhCYWU2fuwXU2ibo0obnKvAib3cuNusyl9SBGKMQ/132","comment_is_top":false,"comment_ctime":1535364175,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14420266063","product_id":100010301,"comment_content":"老师，有个问题请教:第一个例子将过饭没改为2,会输出吃过了；第二个例子将boolValue改为2，却不输出信息。两个变量值都是2,为什么输出的结果会不同？","like_count":3,"discussions":[{"author":{"id":1730576,"avatar":"","nickname":"27","note":"","ucode":"B5D7A54EA47206","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":202384,"discussion_content":"1中flag存在于java虚拟机栈中当前线程的方法栈栈帧中的局部变量表中，取值4个字节大小，即1个slot.     2中flag存在于方法区中，查看字节码指令，没有将flag放进局部变量表中，所以取值的时候只取最后一个bit位","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583910287,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17003,"user_name":"Oswww","can_delete":false,"product_type":"c1","uid":1055460,"ip_address":"","ucode":"BD1280AA6238B7","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/e4/1c441aeb.jpg","comment_is_top":false,"comment_ctime":1532384054,"is_pvip":false,"replies":[{"id":"5902","content":"多谢指出！其实我在录音前还特地去查了下，选了个看起来用得多的。","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1532416183,"ip_address":"","comment_id":17003,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14417285942","product_id":100010301,"comment_content":"char -&gt; character -&gt; &#47;ˈkerə&#47;","like_count":3,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421003,"discussion_content":"多谢指出！其实我在录音前还特地去查了下，选了个看起来用得多的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532416183,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16902,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1532304595,"is_pvip":false,"replies":[{"id":"5917","content":"对的！","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1532419615,"ip_address":"","comment_id":16902,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14417206483","product_id":100010301,"comment_content":"使用基本类型能够在执行效率以及内存使用两方面提升软件性能？具体是什么原理呢？占的空间更小，不需要类型转换吗？","like_count":3,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420962,"discussion_content":"对的！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532419615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":212462,"user_name":"见南山","can_delete":false,"product_type":"c1","uid":1118111,"ip_address":"","ucode":"6A8BB82B7573CA","user_header":"https://static001.geekbang.org/account/avatar/00/11/0f/9f/f4b06bd5.jpg","comment_is_top":false,"comment_ctime":1588128183,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10178062775","product_id":100010301,"comment_content":"在栈帧中byte short char和int占位一样，但是在堆中则是他实际的位数。如果将超过他范围的数存储到该位置后，会进行掩码操作。比如，给boolean型赋值int数据，只会显示的存储最后一位数据。因此，最后的题boolean是存储在堆中的，只保留了最后一位，2的最后一位是0，3的最后一位是1，因此会出现不同的结果。但是使用编译器这些规则内置了，直接会编译报错。","like_count":2},{"had_liked":false,"id":53730,"user_name":"daybreak","can_delete":false,"product_type":"c1","uid":1284873,"ip_address":"","ucode":"C0696C62B3B9D4","user_header":"https://static001.geekbang.org/account/avatar/00/13/9b/09/9a126d45.jpg","comment_is_top":false,"comment_ctime":1545715625,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10135650217","product_id":100010301,"comment_content":"你好，我一点不理解。为什么“吃过饭没”的值为0时跳转，不应该值为1时跳转吗？","like_count":2,"discussions":[{"author":{"id":1254493,"avatar":"https://static001.geekbang.org/account/avatar/00/13/24/5d/65e61dcb.jpg","nickname":"听雨","note":"","ucode":"252754F9FCFF0C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49686,"discussion_content":"ifeq指令表示等于0时跳转，即false的情况","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573620616,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48956,"user_name":"二毛","can_delete":false,"product_type":"c1","uid":1344119,"ip_address":"","ucode":"2795CF80F11604","user_header":"https://static001.geekbang.org/account/avatar/00/14/82/77/9cb5de00.jpg","comment_is_top":false,"comment_ctime":1544581662,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10134516254","product_id":100010301,"comment_content":"谢谢老师，看了您的文章，感觉自己学到了很多之前不知道的东西。请问，内容是可以永久看吗？因为我怕看了会忘~","like_count":2},{"had_liked":false,"id":17596,"user_name":"Ennis LM","can_delete":false,"product_type":"c1","uid":1188522,"ip_address":"","ucode":"8AA2004DB0DDE4","user_header":"https://static001.geekbang.org/account/avatar/00/12/22/aa/c7725dd8.jpg","comment_is_top":false,"comment_ctime":1532768582,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10122703174","product_id":100010301,"comment_content":"因此，当我们将一个 int 类型的值，存储到这些类型的字段或数组时，相当于做了一次隐式的掩码操作。<br>为了保证堆中的 boolean 值是合法的，HotSpot 在存储时显式地进行掩码操作，也就是说，只取最后一位的值存入 boolean 字段或数组中。<br><br>为什么一个是隐式一个是显式","like_count":2,"discussions":[{"author":{"id":1033425,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c4/d1/209abdd6.jpg","nickname":"小狼","note":"","ucode":"FEAC7864FC1D20","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2462,"discussion_content":"这里的隐式和显示针对的主体不同。第一个隐式针对的主体是编写应用程序的工程师，掩码操作对我们来说是透明的，我们不感知的，是隐式；第二个显示是针对编写HotSpot虚拟机代码工程师的，掩码需要明确执行，是显示","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1563672132,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17120,"user_name":"黄ོ小ོ建ོ儿ོོ🎸","can_delete":false,"product_type":"c1","uid":1179192,"ip_address":"","ucode":"4760F6CA0FE810","user_header":"https://static001.geekbang.org/account/avatar/00/11/fe/38/91c29a92.jpg","comment_is_top":false,"comment_ctime":1532442866,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10122377458","product_id":100010301,"comment_content":"基本类型存在栈里，包装类存储在堆上吧？","like_count":2,"discussions":[{"author":{"id":1099902,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c8/7e/a105ca22.jpg","nickname":"Geek_586d49","note":"","ucode":"654E8285818C7A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385338,"discussion_content":"个人理解，直接声明的基本类型是不会在堆中的。方法局部变量中的基本类型存在栈里，含基本类型属性的对象存在堆里。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627007399,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1070581,"avatar":"https://static001.geekbang.org/account/avatar/00/10/55/f5/8d1588bd.jpg","nickname":"xfun","note":"","ucode":"A9A08E9EA6E13B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287294,"discussion_content":"包装类型是引用类型，它指向的是堆内存。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593412184,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17098,"user_name":"Skysper","can_delete":false,"product_type":"c1","uid":1058800,"ip_address":"","ucode":"164B3CAF81A7C5","user_header":"https://static001.geekbang.org/account/avatar/00/10/27/f0/06ecce19.jpg","comment_is_top":false,"comment_ctime":1532435004,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10122369596","product_id":100010301,"comment_content":"char在什么情况下或那些语言下是占用一个字节？英文字符？似乎还分什么内码外码 这是什么？","like_count":2},{"had_liked":false,"id":16973,"user_name":"EidLeung","can_delete":false,"product_type":"c1","uid":1120259,"ip_address":"","ucode":"0F16DDB4779D1F","user_header":"https://static001.geekbang.org/account/avatar/00/11/18/03/ef0efcc4.jpg","comment_is_top":false,"comment_ctime":1532342301,"is_pvip":false,"replies":[{"id":"5907","content":"多谢！","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1532417189,"ip_address":"","comment_id":16973,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10122276893","product_id":100010301,"comment_content":"https:&#47;&#47;adopt-openjdk.ci.cloudbees.com&#47;view&#47;OpenJDK&#47;job&#47;asmtools&#47;lastSuccessfulBuild&#47;artifact&#47;asmtools-6.0.tar.gz","like_count":2,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420993,"discussion_content":"多谢！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532417189,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16963,"user_name":"取个好名字","can_delete":false,"product_type":"c1","uid":1023999,"ip_address":"","ucode":"5C3EF6FFB5ABD9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9f/ff/24acc374.jpg","comment_is_top":false,"comment_ctime":1532334117,"is_pvip":true,"replies":[{"id":"5903","content":"谢谢！","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1532416310,"ip_address":"","comment_id":16963,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10122268709","product_id":100010301,"comment_content":"下载asm.jar那个，点开右边下载链接是个jenkins页面，已经显示有构建好的包，点击就直接下了","like_count":2,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420987,"discussion_content":"谢谢！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532416310,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16943,"user_name":"乔伟","can_delete":false,"product_type":"c1","uid":1182394,"ip_address":"","ucode":"13F67C63177384","user_header":"https://static001.geekbang.org/account/avatar/00/12/0a/ba/b71cb1db.jpg","comment_is_top":false,"comment_ctime":1532321119,"is_pvip":false,"replies":[{"id":"5908","content":"是的。占用但并没有用高八字节的空间。这个属于HotSpot的实现细节，偏向了快速访问而牺牲了耗费空间。","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1532417544,"ip_address":"","comment_id":16943,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10122255711","product_id":100010301,"comment_content":"Double long 占用两个数组单位 64位的数组单位是8个字节 是不是说在解释栈上面 64位的情况下double占用16个字节？","like_count":2,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420979,"discussion_content":"是的。占用但并没有用高八字节的空间。这个属于HotSpot的实现细节，偏向了快速访问而牺牲了耗费空间。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532417544,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16927,"user_name":"NEO🍋","can_delete":false,"product_type":"c1","uid":1166817,"ip_address":"","ucode":"802C34758A5185","user_header":"https://static001.geekbang.org/account/avatar/00/11/cd/e1/368f872c.jpg","comment_is_top":false,"comment_ctime":1532309174,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10122243766","product_id":100010301,"comment_content":"老师 上节课说的asmtool没有找到在哪里下载","like_count":2},{"had_liked":false,"id":336440,"user_name":"כן אני אמריקאי","can_delete":false,"product_type":"c1","uid":1527429,"ip_address":"","ucode":"56C5C2B369121B","user_header":"https://static001.geekbang.org/account/avatar/00/17/4e/85/ef0108cd.jpg","comment_is_top":false,"comment_ctime":1646146684,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5941113980","product_id":100010301,"comment_content":"JVM系列之：聊聊Java的数据类型（https:&#47;&#47;juejin.cn&#47;post&#47;7062697552344416292）","like_count":1,"discussions":[{"author":{"id":2415448,"avatar":"https://static001.geekbang.org/account/avatar/00/24/db/58/a7a0a85b.jpg","nickname":"二饼","note":"","ucode":"48120565D135F7","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574845,"discussion_content":"感谢分享","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654401908,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":250263,"user_name":"cafe babe","can_delete":false,"product_type":"c1","uid":1282698,"ip_address":"","ucode":"A29D4F89824A65","user_header":"https://static001.geekbang.org/account/avatar/00/13/92/8a/17d1ef40.jpg","comment_is_top":false,"comment_ctime":1601005664,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5895972960","product_id":100010301,"comment_content":"macOS  试了jdk8、10、11、14，改为3后都仅仅输出了Hello, Java!","like_count":1},{"had_liked":false,"id":223290,"user_name":"海无语","can_delete":false,"product_type":"c1","uid":1308200,"ip_address":"","ucode":"0BCBDC09283C0F","user_header":"https://static001.geekbang.org/account/avatar/00/13/f6/28/96e030aa.jpg","comment_is_top":false,"comment_ctime":1591056761,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5886024057","product_id":100010301,"comment_content":"栈中的变量区是个数组，数组要求元素长度相同，32位是4字节，64位是8个字节，比它短的补全(byte补全为4或8字节)，比它长的分割(32位时double分为2个)","like_count":1},{"had_liked":false,"id":200859,"user_name":"bbbi","can_delete":false,"product_type":"c1","uid":1682175,"ip_address":"","ucode":"9A539AEF791428","user_header":"https://static001.geekbang.org/account/avatar/00/19/aa/ff/e2c331e0.jpg","comment_is_top":false,"comment_ctime":1585663151,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5880630447","product_id":100010301,"comment_content":"老师您好！<br>64位系统，在函数栈帧中一个数组单元室8个字节。那么double和long还会占用两个数组单元么？","like_count":1},{"had_liked":false,"id":132073,"user_name":"小桶","can_delete":false,"product_type":"c1","uid":1184185,"ip_address":"","ucode":"7967FF96CDE753","user_header":"https://static001.geekbang.org/account/avatar/00/12/11/b9/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1568018697,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5862985993","product_id":100010301,"comment_content":"授人以鱼不如授人以渔，请问作者你是如何学习Java虚拟机的","like_count":1,"discussions":[{"author":{"id":1079811,"avatar":"https://static001.geekbang.org/account/avatar/00/10/7a/03/c9b43b21.jpg","nickname":"BewhY","note":"","ucode":"4BC26D47A79967","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556172,"discussion_content":"人家研究生硕士博士都是搞这方面的研究的，你怎么跟人家学啊，而且人家还是在oracle公司专门研究jvm","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647236885,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1623487,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/sPORo6cN3GSVxjHj9nqSAPn7KG4wtSTqNUommjNndpf8qd7bHKHquuldXZfxD5nF1ldy4LeoAQNwSsOgcmWG9w/132","nickname":"守望者","note":"","ucode":"DEE375A5F2D57A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352745,"discussion_content":"人家是博士！哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614837821,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131841,"user_name":"拯救地球好累","can_delete":false,"product_type":"c1","uid":1339022,"ip_address":"","ucode":"7643439601EF4C","user_header":"https://static001.geekbang.org/account/avatar/00/14/6e/8e/5d309a85.jpg","comment_is_top":false,"comment_ctime":1567932919,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5862900215","product_id":100010301,"comment_content":"---总结---<br>1. JVM中的boolean是用整数来定义的<br>2. 基本类型在栈中存储时boolean、byte、char、short占用空间和int相同，而在堆中按值域有所不同。因此这些值从堆中加载到操作数栈中时，会伴随着零扩展或符号扩展。<br><br>---问题---<br>1. 老师您好，如果我想要从JVM源代码上对其结构有个大致的理解，以及能enjoy一些核心方法，需要从何入手呢？<br>2. 老师是否有一些JVM的书籍或其他资料可以推荐呢？<br>十分感谢！","like_count":1},{"had_liked":false,"id":116065,"user_name":"王二宝","can_delete":false,"product_type":"c1","uid":1042241,"ip_address":"","ucode":"E147D6E597EF5B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e7/41/2ea1f5dc.jpg","comment_is_top":false,"comment_ctime":1563780481,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5858747777","product_id":100010301,"comment_content":"在 Java 虚拟机规范中，boolean 类型则被映射成 int 类型。具体来说，“true”被映射为整数 1，而“false”被映射为整数 0。这个编码规则约束了 Java 字节码的具体实现。","like_count":1},{"had_liked":false,"id":28187,"user_name":"阿超","can_delete":false,"product_type":"c1","uid":1060328,"ip_address":"","ucode":"03CF3E5B3562B3","user_header":"https://static001.geekbang.org/account/avatar/00/10/2d/e8/2a79778a.jpg","comment_is_top":false,"comment_ctime":1538017549,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5832984845","product_id":100010301,"comment_content":"这个该怎么改，为啥我一直改不好","like_count":1},{"had_liked":false,"id":20040,"user_name":"流水光阴","can_delete":false,"product_type":"c1","uid":1121315,"ip_address":"","ucode":"93DECBE4E966D0","user_header":"https://static001.geekbang.org/account/avatar/00/11/1c/23/21e8e1c8.jpg","comment_is_top":false,"comment_ctime":1534227339,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5829194635","product_id":100010301,"comment_content":"为啥我这里编译都不通过啊～","like_count":1,"discussions":[{"author":{"id":1079811,"avatar":"https://static001.geekbang.org/account/avatar/00/10/7a/03/c9b43b21.jpg","nickname":"BewhY","note":"","ucode":"4BC26D47A79967","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":13820,"discussion_content":"基础太差了，不适合看这个系列文章~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568706103,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19626,"user_name":"Page","can_delete":false,"product_type":"c1","uid":1193471,"ip_address":"","ucode":"9D551E6CD0B86D","user_header":"https://static001.geekbang.org/account/avatar/00/12/35/ff/47b59893.jpg","comment_is_top":false,"comment_ctime":1533911275,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5828878571","product_id":100010301,"comment_content":"因为刚开始接触jvm理解起来比较吃力，有没有配合的资料推荐，更好的理解现在讲的内容。","like_count":1},{"had_liked":false,"id":17474,"user_name":"rainbow","can_delete":false,"product_type":"c1","uid":1183795,"ip_address":"","ucode":"933986F42A65F3","user_header":"https://static001.geekbang.org/account/avatar/00/12/10/33/7cb10236.jpg","comment_is_top":false,"comment_ctime":1532670794,"is_pvip":false,"replies":[{"id":"6079","content":"不能在源代码更好，需要借助ASMTools，可以参考1的课后习题","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1532705526,"ip_address":"","comment_id":17474,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5827638090","product_id":100010301,"comment_content":"最后例子里，true改为2或3是直接在源代码里改吗？编译报类型错误啊","like_count":1,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421169,"discussion_content":"不能在源代码更好，需要借助ASMTools，可以参考1的课后习题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532705526,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1070581,"avatar":"https://static001.geekbang.org/account/avatar/00/10/55/f5/8d1588bd.jpg","nickname":"xfun","note":"","ucode":"A9A08E9EA6E13B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287295,"discussion_content":"直接改源码javac是不认的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593412291,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17283,"user_name":"沉淀的梦想","can_delete":false,"product_type":"c1","uid":1177315,"ip_address":"","ucode":"BCB7C26F9D214B","user_header":"https://static001.geekbang.org/account/avatar/00/11/f6/e3/e4bcd69e.jpg","comment_is_top":false,"comment_ctime":1532537606,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5827504902","product_id":100010301,"comment_content":"有个疑问，文中说，在64位的HotSpot的栈上，一个byte，char，short，int都占8个字节，而一个double，long将占16个字节。但是在64位虚拟机上面的int的取值范围也还是只有4字节的取值范围，long也还是只有8字节的取值范围，那为什么不直接把long，double和int它们统一都只占数组的一个单元(即8字节)，而非要让double和long占两个数组单元呢？这么实现的意义是什么呢？","like_count":1},{"had_liked":false,"id":17233,"user_name":"Z_Winner","can_delete":false,"product_type":"c1","uid":1159283,"ip_address":"","ucode":"B397220071E198","user_header":"https://static001.geekbang.org/account/avatar/00/11/b0/73/bdf14b17.jpg","comment_is_top":false,"comment_ctime":1532515587,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5827482883","product_id":100010301,"comment_content":"所以是不是boolean其实和c语言的boolean差不多，但是java故意限制了boolean与其他基本数据类型互相转换","like_count":1},{"had_liked":false,"id":17117,"user_name":"志远","can_delete":false,"product_type":"c1","uid":1108762,"ip_address":"","ucode":"11015D14034130","user_header":"https://static001.geekbang.org/account/avatar/00/10/eb/1a/579c941e.jpg","comment_is_top":false,"comment_ctime":1532441796,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5827409092","product_id":100010301,"comment_content":"老师，文章提到局部变量会超出它们的取值范围，为什么无须担心啊，虚拟机会如何处理超过范围的值啊，为什么无须担心？","like_count":1,"discussions":[{"author":{"id":1070581,"avatar":"https://static001.geekbang.org/account/avatar/00/10/55/f5/8d1588bd.jpg","nickname":"xfun","note":"","ucode":"A9A08E9EA6E13B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287296,"discussion_content":"掩码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593412347,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16946,"user_name":"羊飞","can_delete":false,"product_type":"c1","uid":1102560,"ip_address":"","ucode":"3BD27941E6B1AF","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/e0/25ce76a6.jpg","comment_is_top":false,"comment_ctime":1532321732,"is_pvip":false,"replies":[{"id":"5906","content":"赞！抱歉回复得不及时","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1532416834,"ip_address":"","comment_id":16946,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5827289028","product_id":100010301,"comment_content":"老师，我昨天那个好像试的不对。。。我是直接bool=true,抱歉。。。忽略我之前的话😂","like_count":1,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420981,"discussion_content":"赞！抱歉回复得不及时","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532416834,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":351862,"user_name":"wsxzei","can_delete":false,"product_type":"c1","uid":2766280,"ip_address":"","ucode":"8527ED444BFC73","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/JHzZynEKL2CibTaxCZV3XOs1bJJFqbmwhmibd4U5njlaNVWPrbre1Qha2XUx1dcQ99iaYFl13PyjlYQ0rcl9N5vEg/132","comment_is_top":false,"comment_ctime":1658237395,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1658237395","product_id":100010301,"comment_content":"1、若改为 iconst_2，putstatic 会将 0 放置到堆中的 boolValue 字段，然后使用 getstatic 取出压入栈中。ifeq 会取出栈中的 0，然后跳转到 L18，因此不会打印 Hello Java!；iconst_1 压入1到栈中，栈顶附近的两个元素为 0 和 1，if_icmpne 因为1不等于0，也会跳转到 L33，不打印 Hello, JVM! 。<br><br>2、若改为 iconst_3，putstatic 会将 1 放置到堆中的 boolValue 字段，使用 getstatic 取出压入栈中。ifeq 会取出栈中的 1，打印 Hello Java!；if_icmpne 比较栈中的两个元素都为1，因此打印Helllo, JVM!。<br><br>总结：改为 2 两句都不打印，改为 3 两句都打印；boolean 的掩码处理为取最低一位。","like_count":0},{"had_liked":false,"id":345528,"user_name":"Bumblebee","can_delete":false,"product_type":"c1","uid":2051293,"ip_address":"","ucode":"B879C8A511D08D","user_header":"https://static001.geekbang.org/account/avatar/00/1f/4c/dd/c6035349.jpg","comment_is_top":false,"comment_ctime":1652357813,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1652357813","product_id":100010301,"comment_content":"今日收获<br><br><br>①  boolean在jvm中被映射为true：1  false：0；<br><br>②  在Java虚拟机规范中，局部变量等价于一个数组，并且可以用正数来索引，除了double和long需要用两个数组单元来存储，其他的引用类型与基本类型都只需要一个数组单元，boolean、byte、char、short在栈上占用的空间与int是一样的（在 32 位的 HotSpot 中，这些类型在栈上将占用 4 个字节；而在 64 位的 HotSpot 中，他们将占 8 个字节）；<br><br>③  当不满一个数组单元的基本类型加载到虚拟机栈中，会对高位进行填充，正数填0负数填充1；<br><br>④  基本类型的默认值在内存中都是0；<br><br>⑤ 浮点类型比较特殊。基于它的运算或比较，需要考虑 +0.0F、-0.0F 以及 NaN 的情况；<br><br>⑥  NaN与任何值比较出来不等于返回true其他的都返回false；<br><br>⑦  double、flat、long加载到虚拟机栈中，占用空间与各自类型长度保持一致；<br><br><br>","like_count":0},{"had_liked":false,"id":338511,"user_name":"Lucifer","can_delete":false,"product_type":"c1","uid":2942516,"ip_address":"","ucode":"5F75854B519D0C","user_header":"https://static001.geekbang.org/account/avatar/00/2c/e6/34/03d0cd40.jpg","comment_is_top":false,"comment_ctime":1647530358,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1647530358","product_id":100010301,"comment_content":"老师，我这里有个问题<br>-----------------------------<br>在 32 位的 HotSpot 中，这些类型在栈上将占用 4 个字节；而在 64 位的 HotSpot 中，他们将占 8 个字节。<br>-----------------------------<br>我从其他书籍中看到描述的大概意思是：<br>64位虚拟机实现变量槽会使用对齐和补白的手段使其看起来和32位虚拟机的实现一样<br>-----------------------------<br>那如果是long和double类型的变量，64位虚拟机和32位虚拟机的实现还是一样的吗？<br>如果一样，是不是就说明64位的虚拟机浪费了2*4=8个字节的空间用来补白空间？","like_count":0},{"had_liked":false,"id":336343,"user_name":"fei","can_delete":false,"product_type":"c1","uid":2126331,"ip_address":"","ucode":"36D802EB42FEF3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJOUjOGRlYNY1TDZpso7LQEhMyqmgUqEW3sm5xWTHqhU5rUol8NeEOxLMQA5ib09Y8Yg97ziaqsKduA/132","comment_is_top":false,"comment_ctime":1646103410,"is_pvip":true,"discussion_count":0,"race_medal":3,"score":"1646103410","product_id":100010301,"comment_content":"前者在 Java 里是 0，后者是符号位为 1、其他位均为 0 的浮点数，在内存中等同于十六进制整数 0x8000000（即 -0.0F 可通过 Float.intBitsToFloat(0x8000000) 求得）。尽管它们的内存数值不同，但是在 Java 中 +0.0F == -0.0F 会返回真。<br>应该是“0x80000000”，而不是“0x8000000”，少了一个零，8后面应该有7个0。","like_count":0},{"had_liked":false,"id":330822,"user_name":"UyCode","can_delete":false,"product_type":"c1","uid":1938009,"ip_address":"","ucode":"78084E88C516C6","user_header":"https://static001.geekbang.org/account/avatar/00/1d/92/59/c453ef7d.jpg","comment_is_top":false,"comment_ctime":1642182062,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642182062","product_id":100010301,"comment_content":"最后的案例的答案是：当替换为2的时候无输出 当替换为3的时候打印HelloJava及HelloJVM<br>在Java 基本类型的大小的地方作者说了局部变量的存储方式，但这个案例中boolValue是静态的全局变量，而在main函数的时候赋值，因此这个变量被俺妈运算，最终的结果为当修改为2时取低位最后一位为0,当修改为3时取低位最后一位为1，因此，结果很显然，2的时候为false，不输出任何内容，3的时候则为true，两个都输出了","like_count":0},{"had_liked":false,"id":305021,"user_name":"Jagger","can_delete":false,"product_type":"c1","uid":1914208,"ip_address":"","ucode":"0BD13223AEE076","user_header":"https://static001.geekbang.org/account/avatar/00/1d/35/60/d3e723a7.jpg","comment_is_top":false,"comment_ctime":1627781977,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1627781977","product_id":100010301,"comment_content":"局部变量区，float也会占用一个数组单元吧","like_count":0},{"had_liked":false,"id":303554,"user_name":"silas","can_delete":false,"product_type":"c1","uid":1553046,"ip_address":"","ucode":"EEFF1E8ED00EE6","user_header":"https://static001.geekbang.org/account/avatar/00/17/b2/96/a524ebf6.jpg","comment_is_top":false,"comment_ctime":1626853571,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626853571","product_id":100010301,"comment_content":"这节课的例子真不好。。什么吃了没吃真吃过。。看的好累","like_count":0},{"had_liked":false,"id":295845,"user_name":"🇨🇳","can_delete":false,"product_type":"c1","uid":2636003,"ip_address":"","ucode":"2E4E94710CFBC5","user_header":"https://static001.geekbang.org/account/avatar/00/28/38/e3/15402ae5.jpg","comment_is_top":false,"comment_ctime":1622618548,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622618548","product_id":100010301,"comment_content":"看到最后我的想法和丨落灬小莫一样.  为了保证堆中的 boolean 值是合法的，HotSpot 在存储时显式地进行掩码操作，也就是说，只取最后一位的值存入 boolean 字段或数组中。","like_count":0},{"had_liked":false,"id":283748,"user_name":"undefined","can_delete":false,"product_type":"c1","uid":1100750,"ip_address":"","ucode":"768098DBDBE333","user_header":"https://static001.geekbang.org/account/avatar/00/10/cb/ce/d9e00eb5.jpg","comment_is_top":false,"comment_ctime":1615903085,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615903085","product_id":100010301,"comment_content":"这个课程越看越带劲，第二遍了。","like_count":0},{"had_liked":false,"id":243765,"user_name":"Geek8819","can_delete":false,"product_type":"c1","uid":2028950,"ip_address":"","ucode":"521AEDAB2EED81","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f5/96/e963b41b.jpg","comment_is_top":false,"comment_ctime":1598269725,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598269725","product_id":100010301,"comment_content":"在前面的例子中，第一个 if 语句会被编译成条件跳转字节码 ifeq，翻译成人话就是说，如果局部变量“吃过饭没”的值为 0，那么跳过打印“吃了”的语句。而第二个 if 语句则会被编译成条件跳转字节码 if_icmpne，也就是说，如果局部变量的值和整数 1 不相等，那么跳过打印“真吃了”的语句。<br><br>想问一下这里是不是 ”翻译成人话就是说，如果局部变量“吃过饭没”的值为 1“ 对于boolean的值true为1 写错了吧？","like_count":0},{"had_liked":false,"id":237588,"user_name":"NullPointer","can_delete":false,"product_type":"c1","uid":1179184,"ip_address":"","ucode":"83B7DA926A0411","user_header":"https://static001.geekbang.org/account/avatar/00/11/fe/30/c9b568c3.jpg","comment_is_top":false,"comment_ctime":1595895202,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595895202","product_id":100010301,"comment_content":"再来复习又有新的收获。郑老师的课真的很精华，但是吸收有点慢。不知道是不是自己太蠢了(ಡωಡ)hiahiahia","like_count":0},{"had_liked":false,"id":230526,"user_name":"xfun","can_delete":false,"product_type":"c1","uid":1070581,"ip_address":"","ucode":"A9A08E9EA6E13B","user_header":"https://static001.geekbang.org/account/avatar/00/10/55/f5/8d1588bd.jpg","comment_is_top":false,"comment_ctime":1593409157,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593409157","product_id":100010301,"comment_content":"我记得在py里面布尔值非1的都是False","like_count":0},{"had_liked":false,"id":223131,"user_name":"JaneWu5","can_delete":false,"product_type":"c1","uid":1388757,"ip_address":"","ucode":"6D77C09911FAF6","user_header":"https://static001.geekbang.org/account/avatar/00/15/30/d5/e25d2d32.jpg","comment_is_top":false,"comment_ctime":1591006370,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591006370","product_id":100010301,"comment_content":"&quot;在 Java 虚拟机规范中，局部变量区等价于一个数组，并且可以用正整数来索引。除了 long、double 值需要用两个数组单元来存储之外，其他基本类型以及引用类型的值均占用一个数组单元。也就是说，boolean、byte、char、short 这四种类型，在栈上占用的空间和 int 是一样的，和引用类型也是一样的。因此，在 32 位的 HotSpot 中，这些类型在栈上将占用 4 个字节；而在 64 位的 HotSpot 中，他们将占 8 个字节。&quot;<br>如果是64位Hotspot，long和double也应该是1个数组单元吧？？（懵逼脸.jpg","like_count":0},{"had_liked":false,"id":217569,"user_name":"Katherine","can_delete":false,"product_type":"c1","uid":1898758,"ip_address":"","ucode":"C57AB0B17DA1A1","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f9/06/dea695ea.jpg","comment_is_top":false,"comment_ctime":1589535100,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589535100","product_id":100010301,"comment_content":"一上来就是很底层的东西，感觉自己来错了队伍","like_count":0},{"had_liked":false,"id":202994,"user_name":"有米","can_delete":false,"product_type":"c1","uid":1005042,"ip_address":"","ucode":"C9A10B7A67BC12","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/f2/ba68d931.jpg","comment_is_top":false,"comment_ctime":1586099032,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586099032","product_id":100010301,"comment_content":"java语言规范跟jvm规范不太一样，编译器会根据jvm规范来编译java程序。我们平时开发看到的都是java语言规范","like_count":0},{"had_liked":false,"id":201367,"user_name":"秦伟","can_delete":false,"product_type":"c1","uid":1931692,"ip_address":"","ucode":"D47C1F57500FE1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/VjomKNzfFiaIttqYMxbjAWTG7NL7P2UqC5fbSvg0JW80SLnoR2oH1G4U2eibmxbR4wPpoqZdDnjC8GqgShDOBRzA/132","comment_is_top":false,"comment_ctime":1585756582,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585756582","product_id":100010301,"comment_content":"老师，jvm的栈空间，我不是很清楚， 启动时候我们需要设置吗？","like_count":0},{"had_liked":false,"id":200734,"user_name":"花花young","can_delete":false,"product_type":"c1","uid":1338584,"ip_address":"","ucode":"95AD30303C2B21","user_header":"https://static001.geekbang.org/account/avatar/00/14/6c/d8/68fec932.jpg","comment_is_top":false,"comment_ctime":1585644429,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585644429","product_id":100010301,"comment_content":"老师开始讲的那个吃饭的例子是不是说错了， boolean 吃过饭没 = 2; 的话应该什么都不打印","like_count":0},{"had_liked":false,"id":200722,"user_name":"花花young","can_delete":false,"product_type":"c1","uid":1338584,"ip_address":"","ucode":"95AD30303C2B21","user_header":"https://static001.geekbang.org/account/avatar/00/14/6c/d8/68fec932.jpg","comment_is_top":false,"comment_ctime":1585643632,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585643632","product_id":100010301,"comment_content":"文中：Java 虚拟机的算数运算几乎全部依赖于操作数栈。也就是说，我们需要将堆中的 boolean、byte、char 以及 short 加载到操作数栈上，而后将栈上的值当成 int 类型来运算。<br>疑问：32位的HotSpot 堆里的boolean、byte、char 以及 short 占用1 1 1 2字节，当加载到栈帧中的操作数栈的话都用4个字节来承接吗？","like_count":0},{"had_liked":false,"id":191036,"user_name":"旅途","can_delete":false,"product_type":"c1","uid":1212902,"ip_address":"","ucode":"5022477E8E9441","user_header":"https://static001.geekbang.org/account/avatar/00/12/81/e6/6cafed37.jpg","comment_is_top":false,"comment_ctime":1584719152,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584719152","product_id":100010301,"comment_content":"老师 局部变量区 为什么long,double使用两个数组单元?","like_count":0},{"had_liked":false,"id":183722,"user_name":"这是谁 辣么帅","can_delete":false,"product_type":"c1","uid":1329293,"ip_address":"","ucode":"DD30830BAD20A6","user_header":"https://static001.geekbang.org/account/avatar/00/14/48/8d/7764c5c2.jpg","comment_is_top":false,"comment_ctime":1583120168,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583120168","product_id":100010301,"comment_content":"关于NaN的特性，我觉得这样理解是不是更好一些，NaN不属于基本数据类型值的任何范畴，所以NaN的&quot;!=&quot;始终为true，做其他比较是始终为false。","like_count":0},{"had_liked":false,"id":176189,"user_name":"lating","can_delete":false,"product_type":"c1","uid":1114142,"ip_address":"","ucode":"994BB20A1025DB","user_header":"https://static001.geekbang.org/account/avatar/00/11/00/1e/a4d304ae.jpg","comment_is_top":false,"comment_ctime":1580983031,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580983031","product_id":100010301,"comment_content":"老师，我这遇到点疑问，只有替换为0的时候才不会有输出，其它不管是偶数还是奇数，都会有两个输出，这与理论不符呀，请问这里的误差来源是什么呢？","like_count":0},{"had_liked":false,"id":171779,"user_name":"the geek","can_delete":false,"product_type":"c1","uid":1506723,"ip_address":"","ucode":"71DECBC814A539","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLz3icr3mGs5ib8FbSPQZ2ic3ib90mHkd1btQrmGacZjJxfYXrerIdaTxglKyCicFzLcEAb6deC2cWjE5Q/132","comment_is_top":false,"comment_ctime":1579011207,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579011207","product_id":100010301,"comment_content":"上一节的例子修改为2会输出，这节修改为2没有输出。<br>1. 是否是因为这节的boolean是从堆中取过来做了掩码操作，而上一节是从局部变量表中取过来的boolean没有做掩码操作呢？<br>2. 原因是不是局部变量表与操作栈有重合部分，不会做掩码操作呢？","like_count":0},{"had_liked":false,"id":171413,"user_name":"琥珀","can_delete":false,"product_type":"c1","uid":1025028,"ip_address":"","ucode":"963E359AE82714","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/04/ac0d2f72.jpg","comment_is_top":false,"comment_ctime":1578919999,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578919999","product_id":100010301,"comment_content":"在我们的例子中，经过编译器编译之后，Java 虚拟机看到的不是在问“吃过饭没”，而是在问“吃过几碗饭”。也就是说，第一个 if 语句变成：你不会一碗饭都没吃吧。第二个 if 语句则变成：你吃过一碗饭了吗。如果我们约定俗成，每人每顿只吃一碗，那么第二个 if 语句还是有意义的。但如果我们打破常规，吃了两碗，那么较真的 Java 虚拟机就会将第二个 if 语句判定为假了。<br><br>这里看的有些昏糊，其实不用举什么例子吧，又不是java小白。","like_count":0},{"had_liked":false,"id":164448,"user_name":"Jerry银银","can_delete":false,"product_type":"c1","uid":1008404,"ip_address":"","ucode":"80DA1172A2360A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/14/06eff9a4.jpg","comment_is_top":false,"comment_ctime":1576994061,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576994061","product_id":100010301,"comment_content":"老师文章中举的那个“吃饭”的例子，也将字节码boolean值修改成了2，那个地方也表示了虚拟机做了掩码处理了吧？","like_count":0},{"had_liked":false,"id":163030,"user_name":"Geek_d76af3","can_delete":false,"product_type":"c1","uid":1749207,"ip_address":"","ucode":"3C51574F5E02EA","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK6JnM4HA6sk8ql2vEbeYlUfxl251DKhBqA8tjKurP5guMDzw7xNzic0DNdE0xWngWjGqn12DpGHJQ/132","comment_is_top":false,"comment_ctime":1576643366,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576643366","product_id":100010301,"comment_content":"<br>        boolvalue = 2;<br>        if(boolvalue){<br>            System.out.println(&quot;hello,java&quot;);<br>        }<br>        if(boolvalue == true){<br>            System.out.println(&quot;hello jvm&quot;);<br>        }<br><br>我在编译器中换成2，是无法编译的，请问是怎么回事","like_count":0},{"had_liked":false,"id":162998,"user_name":"Geek_d76af3","can_delete":false,"product_type":"c1","uid":1749207,"ip_address":"","ucode":"3C51574F5E02EA","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK6JnM4HA6sk8ql2vEbeYlUfxl251DKhBqA8tjKurP5guMDzw7xNzic0DNdE0xWngWjGqn12DpGHJQ/132","comment_is_top":false,"comment_ctime":1576638724,"is_pvip":false,"replies":[{"id":"65683","content":"那个指的是跳转对象，ifeq (这里省略了0)成立的话，跳转至偏移量为14的语句，你可以对照那张包含所有指令的图看看","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1578333612,"ip_address":"","comment_id":162998,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1576638724","product_id":100010301,"comment_content":"我想问下  if (吃过饭没)  翻译成的字节码是  ifeq 14;if (true == 吃过饭没) 翻译的字节码是：if_icmpne 27。请问老师：为什么是14 和 27  可解释下为什么是这两个数字吗","like_count":0,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478206,"discussion_content":"那个指的是跳转对象，ifeq (这里省略了0)成立的话，跳转至偏移量为14的语句，你可以对照那张包含所有指令的图看看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578333612,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160530,"user_name":"BOB","can_delete":false,"product_type":"c1","uid":1066638,"ip_address":"","ucode":"239C06A7CD3BD5","user_header":"https://static001.geekbang.org/account/avatar/00/10/46/8e/334d25ba.jpg","comment_is_top":false,"comment_ctime":1575969889,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575969889","product_id":100010301,"comment_content":"老师，看到您说char可以取超过65535这个上限的值<br>具体如何操作呢。<br>对应的JVM的补位是如何进行的？","like_count":0},{"had_liked":false,"id":145612,"user_name":"黑色毛衣","can_delete":false,"product_type":"c1","uid":1135912,"ip_address":"","ucode":"FF7E235F91BA5C","user_header":"https://static001.geekbang.org/account/avatar/00/11/55/28/31b0cf2f.jpg","comment_is_top":false,"comment_ctime":1572329823,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572329823","product_id":100010301,"comment_content":"无论 boolean 是在堆，还是在局部变量中。<br><br>都要做掩码操作吧，栈里的是 4 字节，堆里的是 1 字节，掩码操作是为了保证实际值是 0 &#47; 1，所以只取最后一位。","like_count":0},{"had_liked":false,"id":144416,"user_name":"Hou","can_delete":false,"product_type":"c1","uid":1621793,"ip_address":"","ucode":"92BF011EF961B4","user_header":"https://static001.geekbang.org/account/avatar/00/18/bf/21/44eb3aee.jpg","comment_is_top":false,"comment_ctime":1571917492,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1571917492","product_id":100010301,"comment_content":"Foo输出结果：<br>     2下都不输出，3都输出<br>分析：<br>由于保证堆中boolean的合法，HotSopt存储时会对boolean掩码--------&gt;取最后1bit<br>而static修饰的成员变量在堆上分配所以会做掩码操作<br>8位下2的二进制是-------&gt;0000 0010        3的2进制是0000 0011<br>2掩码之后就是0相当于false   3掩码之后就是1相当于true<br><br>","like_count":0},{"had_liked":false,"id":143784,"user_name":"技术骨干","can_delete":false,"product_type":"c1","uid":1098720,"ip_address":"","ucode":"8FCF8DE6D29201","user_header":"https://static001.geekbang.org/account/avatar/00/10/c3/e0/3db22579.jpg","comment_is_top":false,"comment_ctime":1571792111,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571792111","product_id":100010301,"comment_content":"java种，每调用一个方法就调用一个阵栈，那么方法结束后，是不是就释放内存了呢。","like_count":0},{"had_liked":false,"id":124579,"user_name":"BD","can_delete":false,"product_type":"c1","uid":1228560,"ip_address":"","ucode":"A95CF8C3EDC228","user_header":"https://static001.geekbang.org/account/avatar/00/12/bf/10/b7974690.jpg","comment_is_top":false,"comment_ctime":1565923249,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565923249","product_id":100010301,"comment_content":"在将 boolean、byte、char 以及 short存入字段或者数组时会做掩码操作，这个是在方法区定义的局部变量和对象属性 boolean、byte、char 以及 short的类型长度不一样吗","like_count":0},{"had_liked":false,"id":105334,"user_name":"muyinliu","can_delete":false,"product_type":"c1","uid":1343056,"ip_address":"","ucode":"4631EBA0659732","user_header":"https://static001.geekbang.org/account/avatar/00/14/7e/50/63749d73.jpg","comment_is_top":false,"comment_ctime":1560988112,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1560988112","product_id":100010301,"comment_content":"# Foo.main 编译后的字节码<br>---<br>如何得到这些内容？使用工具 asmtools 么？命令是哪个？","like_count":0},{"had_liked":false,"id":103872,"user_name":"色即是空","can_delete":false,"product_type":"c1","uid":1189638,"ip_address":"","ucode":"46B8975ED087B8","user_header":"https://static001.geekbang.org/account/avatar/00/12/27/06/7ab75a5b.jpg","comment_is_top":false,"comment_ctime":1560557319,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560557319","product_id":100010301,"comment_content":"float任意数除以0，得到的无穷数或者NAN，这个是怎么除的呢，可不可以简单说一下？","like_count":0},{"had_liked":false,"id":101830,"user_name":"我家门前有只猪","can_delete":false,"product_type":"c1","uid":1488035,"ip_address":"","ucode":"F8CF618CF4681E","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/a3/a159ca86.jpg","comment_is_top":false,"comment_ctime":1559986723,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559986723","product_id":100010301,"comment_content":"6个整数型的基本整型变量的值域范围是不同的，为什么在栈中的占用空间都是跟int一样占8个字节？","like_count":0},{"had_liked":false,"id":77246,"user_name":"隨風","can_delete":false,"product_type":"c1","uid":1101716,"ip_address":"","ucode":"E513EE1C0606A7","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/94/8fb32b6a.jpg","comment_is_top":false,"comment_ctime":1552896505,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552896505","product_id":100010301,"comment_content":"Float.intBitsToFloat(0x80000000),这里应该有8位哦。","like_count":0},{"had_liked":false,"id":77160,"user_name":"c340","can_delete":false,"product_type":"c1","uid":1111176,"ip_address":"","ucode":"D64CC3DDD09A0F","user_header":"https://static001.geekbang.org/account/avatar/00/10/f4/88/133bc14b.jpg","comment_is_top":false,"comment_ctime":1552873387,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1552873387","product_id":100010301,"comment_content":"局部变量区等价于数组的话，取数的时候是怎么确定要取几个字节的？会记住类型吗","like_count":0},{"had_liked":false,"id":64734,"user_name":"BY","can_delete":false,"product_type":"c1","uid":1119827,"ip_address":"","ucode":"9FFA0F414A978D","user_header":"https://static001.geekbang.org/account/avatar/00/11/16/53/03930a6b.jpg","comment_is_top":false,"comment_ctime":1548896527,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1548896527","product_id":100010301,"comment_content":"啥是掩码操作？😂","like_count":0},{"had_liked":false,"id":61175,"user_name":"一个坏人","can_delete":false,"product_type":"c1","uid":1032305,"ip_address":"","ucode":"4AF05BF008095A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c0/71/c83d8b15.jpg","comment_is_top":false,"comment_ctime":1547631877,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1547631877","product_id":100010301,"comment_content":"老师好，如果 flag 不定义成 static ，则吧数值2赋值给flag，但是会输出 “Hello,Java”.表明没有进行隐码操作么？在什么情况下会进行掩码操作？？","like_count":0},{"had_liked":false,"id":61112,"user_name":"Cy190622","can_delete":false,"product_type":"c1","uid":1381528,"ip_address":"","ucode":"578D804C29248E","user_header":"https://static001.geekbang.org/account/avatar/00/15/14/98/0251b8fd.jpg","comment_is_top":false,"comment_ctime":1547621746,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547621746","product_id":100010301,"comment_content":"老师，你好。请教一下，解释器栈和Java方法栈有什么区别？这两个搞蒙圈了","like_count":0},{"had_liked":false,"id":61111,"user_name":"Cy190622","can_delete":false,"product_type":"c1","uid":1381528,"ip_address":"","ucode":"578D804C29248E","user_header":"https://static001.geekbang.org/account/avatar/00/15/14/98/0251b8fd.jpg","comment_is_top":false,"comment_ctime":1547621745,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547621745","product_id":100010301,"comment_content":"老师，你好。请教一下，解释器栈和Java方法栈有什么区别？这两个搞蒙圈了","like_count":0},{"had_liked":false,"id":57296,"user_name":"hughieyu","can_delete":false,"product_type":"c1","uid":1206690,"ip_address":"","ucode":"FC1A64B2BAB784","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/a2/c30ac459.jpg","comment_is_top":false,"comment_ctime":1546736287,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546736287","product_id":100010301,"comment_content":"在64位的机器上，long和double是不是也和int一样，占用一个是数组单元","like_count":0},{"had_liked":false,"id":55386,"user_name":"尔东","can_delete":false,"product_type":"c1","uid":1360829,"ip_address":"","ucode":"C0983536C63E2A","user_header":"https://static001.geekbang.org/account/avatar/00/14/c3/bd/ec8b3044.jpg","comment_is_top":false,"comment_ctime":1546155012,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546155012","product_id":100010301,"comment_content":"改成2的时候没有输出，改成3的时候全部都可以输出，原因是因为变量定义在堆上，当加载到栈上的时候进行了依次扩展，取了最后一位作为boolean类型的结果","like_count":0},{"had_liked":false,"id":48962,"user_name":"二毛","can_delete":false,"product_type":"c1","uid":1344119,"ip_address":"","ucode":"2795CF80F11604","user_header":"https://static001.geekbang.org/account/avatar/00/14/82/77/9cb5de00.jpg","comment_is_top":false,"comment_ctime":1544582160,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544582160","product_id":100010301,"comment_content":"“在将 boolean、byte、char 以及 short的值存入字段或者数组单元时，Java 虚拟机会进行掩码操作。”<br>这里说的字段是指成员变量的意思吗？还是包括成员变量和局部变量","like_count":0},{"had_liked":false,"id":48519,"user_name":"小泷哥","can_delete":false,"product_type":"c1","uid":1255252,"ip_address":"","ucode":"128C9C4B0AFE7F","user_header":"https://static001.geekbang.org/account/avatar/00/13/27/54/d38c34a0.jpg","comment_is_top":false,"comment_ctime":1544459323,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544459323","product_id":100010301,"comment_content":"1、boolean、byte、char、short 这四种类型，和int 在JVM栈中都保持int大小(机器字长)。<br>疑问：是否是栈的生命周期短，执行栈又是单独分开，没有必要精确去分配大小?(能否介绍下这里的这样设计的原因)<br>2、掩码操作这样理解对吗？是 .class 文件的静态字符在加载的时候，各类型都会被JVM直接标准规定大小解析。（不管你字节码分配多大，JVM只取规定大小）","like_count":0},{"had_liked":false,"id":48028,"user_name":"刘十一","can_delete":false,"product_type":"c1","uid":1035899,"ip_address":"","ucode":"5927D77D248E30","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ce/7b/fa0f9368.jpg","comment_is_top":false,"comment_ctime":1544325232,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544325232","product_id":100010301,"comment_content":"老师，那个“吃饭”编译不了，你是怎么“迂回”的？","like_count":0},{"had_liked":false,"id":47007,"user_name":"Mark Wong","can_delete":false,"product_type":"c1","uid":1180896,"ip_address":"","ucode":"9C6778E3FAE9A3","user_header":"https://static001.geekbang.org/account/avatar/00/12/04/e0/b37f0e89.jpg","comment_is_top":false,"comment_ctime":1544018248,"is_pvip":false,"replies":[{"id":"16982","content":"你说的情况应该是64位。int所包含的数据是四字节，由于JVM栈的实现方式，它们实际在内存中可能占得更多。","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1544177081,"ip_address":"","comment_id":47007,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544018248","product_id":100010301,"comment_content":"文中:在32位hotspot中，short在栈中和int一样占8字节。<br>我很好奇，int类型不是4字节的吗？难道是根据系统改变的吗","like_count":0,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431633,"discussion_content":"你说的情况应该是64位。int所包含的数据是四字节，由于JVM栈的实现方式，它们实际在内存中可能占得更多。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544177081,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":39470,"user_name":"余焱林ॐ","can_delete":false,"product_type":"c1","uid":1040436,"ip_address":"","ucode":"01234897C5AFB4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e0/34/0a229e32.jpg","comment_is_top":false,"comment_ctime":1542285417,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542285417","product_id":100010301,"comment_content":"终于明白了。。。<br><br>静态变量放在堆上，给堆上的boolean类型的变量赋值时，比较特殊，会取值的最后一位进行赋值。。。。<br><br>","like_count":0},{"had_liked":false,"id":35262,"user_name":"黎明你好","can_delete":false,"product_type":"c1","uid":1123176,"ip_address":"","ucode":"1F5E14B87B370A","user_header":"https://static001.geekbang.org/account/avatar/00/11/23/68/0daebf7f.jpg","comment_is_top":false,"comment_ctime":1540479944,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1540479944","product_id":100010301,"comment_content":"请问在32位jvm下long和double在栈里是占8个字节 ，而线程操作是一次操作4个字节所以有线程安全问题。那么在64位jvm下基本类型都是8个字节了，那是不是就没线程安全问题了呢","like_count":0,"discussions":[{"author":{"id":1014146,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/79/82/c3cccc38.jpg","nickname":"IT生涯路漫漫","note":"","ucode":"4954D1CBEB4E44","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311038,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602199031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":32754,"user_name":"深成","can_delete":false,"product_type":"c1","uid":1265024,"ip_address":"","ucode":"02958005D9ABAD","user_header":"https://static001.geekbang.org/account/avatar/00/13/4d/80/340c88a8.jpg","comment_is_top":false,"comment_ctime":1539688106,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1539688106","product_id":100010301,"comment_content":"老师好<br>在正常使用Java编译器的情况下，生成的字节码会遵守Java虚拟机规范对编译器的约束，因此你无须过分担心局部变量会超出它们的取值范围。<br>boolean取值范围为[0,1]<br>输入2，其实存入低位的值为2%2 = 0;<br>输入3，其实存入低位的值为3%2 = 1;<br>2%2和3%2是我臆想出的约束规则,也就是存入低位时会根据约束规则将值改变为0 或 1。<br>不知道这样理解对不对。","like_count":0},{"had_liked":false,"id":30753,"user_name":"坤少sir","can_delete":false,"product_type":"c1","uid":1218004,"ip_address":"","ucode":"4644292A6FEEB8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLtwSXKialWYQlb2rgXgLbt1av96cBFY0IhzibE73iaBYUCVjbs8MrM7On3NlMDRSMLzmezrjzgTibaKw/132","comment_is_top":false,"comment_ctime":1538988884,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1538988884","product_id":100010301,"comment_content":"为什么学习局jvm感觉要在学习下计算机组成原理呢","like_count":0},{"had_liked":false,"id":20894,"user_name":"Geek_c9aaad","can_delete":false,"product_type":"c1","uid":1210570,"ip_address":"","ucode":"C68590656E8940","user_header":"","comment_is_top":false,"comment_ctime":1534811257,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1534811257","product_id":100010301,"comment_content":"除了 long、double 值需要用两个数组单元来存储之外，其他基本类型以及引用类型的值均占用一个数组单元。<br>这里的“引用类型的值”应该是指栈中存储的一个指向堆中对象实例的引用的值吧？","like_count":0,"discussions":[{"author":{"id":1702886,"avatar":"https://static001.geekbang.org/account/avatar/00/19/fb/e6/1b9edb91.jpg","nickname":"练习生","note":"","ucode":"60203A2AA0EA36","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336963,"discussion_content":"堆中的对象的地址","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608735117,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":20238,"user_name":"北风一叶","can_delete":false,"product_type":"c1","uid":1087302,"ip_address":"","ucode":"30310E66341D2A","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/46/fe1f21d8.jpg","comment_is_top":false,"comment_ctime":1534329464,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1534329464","product_id":100010301,"comment_content":"想问下，基本类型会存储到堆中么？什么情况会存呢？","like_count":0,"discussions":[{"author":{"id":1702886,"avatar":"https://static001.geekbang.org/account/avatar/00/19/fb/e6/1b9edb91.jpg","nickname":"练习生","note":"","ucode":"60203A2AA0EA36","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336962,"discussion_content":"对象不出意外一般都是在堆中创建，字段值也属于对象的一部分，那当然会在堆中咯","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608735082,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19731,"user_name":"And","can_delete":false,"product_type":"c1","uid":1185365,"ip_address":"","ucode":"4A2E9163D219F6","user_header":"https://static001.geekbang.org/account/avatar/00/12/16/55/85e18741.jpg","comment_is_top":false,"comment_ctime":1534000651,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1534000651","product_id":100010301,"comment_content":"后面讲boolean以外的类型我都看不懂了","like_count":0},{"had_liked":false,"id":19394,"user_name":"QlDoors","can_delete":false,"product_type":"c1","uid":1005911,"ip_address":"","ucode":"394F3E6CE39392","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/57/449e76fb.jpg","comment_is_top":false,"comment_ctime":1533805140,"is_pvip":false,"replies":[{"id":"6797","content":"这个我之前还真不知道。<br><br>看了一下字节码和即时编译后的代码，sn1是由Java编译器给出的，也就是说Java编译器认为0&#47;0是0x7FC00000。sn2的值是CPU用DIVSS指令计算出来的。至于为什么算出这个值，应该跟CPU的实现有关。<br><br>由于都是NaN，理论上用哪个值都是正确的。<br><br>","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1533906999,"ip_address":"","comment_id":19394,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1533805140","product_id":100010301,"comment_content":"        float sn1 = 0.0f &#47; 0.0f;<br>        float f1 = 0.0f;<br>        float sn2 = f1 &#47; f1;<br>        System.out.println(&quot;sn1 hex = &quot; + Integer.toHexString(Float.floatToRawIntBits(sn1)));<br>        System.out.println(&quot;sn2 hex = &quot; + Integer.toHexString(Float.floatToRawIntBits(sn2)));<br><br>老师，请问这段代码为何输出是<br>sn1 hex = 7fc00000<br>sn2 hex = ffc00000<br><br>我的运行环境是idea jdk8","like_count":0,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421820,"discussion_content":"这个我之前还真不知道。\n\n看了一下字节码和即时编译后的代码，sn1是由Java编译器给出的，也就是说Java编译器认为0/0是0x7FC00000。sn2的值是CPU用DIVSS指令计算出来的。至于为什么算出这个值，应该跟CPU的实现有关。\n\n由于都是NaN，理论上用哪个值都是正确的。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533906999,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19260,"user_name":"一个坏人","can_delete":false,"product_type":"c1","uid":1032305,"ip_address":"","ucode":"4AF05BF008095A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c0/71/c83d8b15.jpg","comment_is_top":false,"comment_ctime":1533739066,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1533739066","product_id":100010301,"comment_content":"老师好，请教一个问题。文中提到“对于 byte、short 这两个类型来说，加载伴随着符号扩展。举个例子，short 的大小为两个字节。在加载时 short 的值同样会被复制到 int 类型的低二字节。如果该 short 值为非负数，即最高位为 0，那么该 int 类型的值的高二字节会用 0 来填充，否则用 1 来填充。”  在我的认知里，计算机内部是用补码存储的，所以short如果是负数，不应该是简单的被复制到int的低二字节，最高位是1，其余高位字节是0吧？？","like_count":0},{"had_liked":false,"id":18279,"user_name":"猫和芝士蛋糕","can_delete":false,"product_type":"c1","uid":1191996,"ip_address":"","ucode":"0970A3BB993D32","user_header":"https://static001.geekbang.org/account/avatar/00/12/30/3c/49eb36e7.jpg","comment_is_top":false,"comment_ctime":1533226998,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1533226998","product_id":100010301,"comment_content":"0x8000000（即 -0.0F 可通过 Float.intBitsToFloat(0x8000000) 求得<br><br>这里的两个十六进制数是不是都少了1位啊，怎么查都是只有7位","like_count":0},{"had_liked":false,"id":18032,"user_name":"Bale","can_delete":false,"product_type":"c1","uid":1189349,"ip_address":"","ucode":"F9AABEA9ED24C3","user_header":"https://static001.geekbang.org/account/avatar/00/12/25/e5/921492c1.jpg","comment_is_top":false,"comment_ctime":1533095244,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1533095244","product_id":100010301,"comment_content":"时间原因才学到第二节，@东方，大佬的笔记受益甚多，最后getFlag  因为方法返回值是boolean 因此 从结果看 方法返回结果进一步做了一次掩码，也就是 永远返回最后一位 所以结果和flag&amp;1是一样的","like_count":0},{"had_liked":false,"id":17600,"user_name":"Ennis LM","can_delete":false,"product_type":"c1","uid":1188522,"ip_address":"","ucode":"8AA2004DB0DDE4","user_header":"https://static001.geekbang.org/account/avatar/00/12/22/aa/c7725dd8.jpg","comment_is_top":false,"comment_ctime":1532769502,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532769502","product_id":100010301,"comment_content":"前者在 Java 里是 0，后者是符号位为 1、其他位均为 0 的浮点数，在内存中等同于十六进制整数 0x8000000（即 -0.0F 可通过 Float.intBitsToFloat(0x8000000) 求得）。<br><br>这里少写了一个0吧","like_count":0},{"had_liked":false,"id":17594,"user_name":"李阳","can_delete":false,"product_type":"c1","uid":1086760,"ip_address":"","ucode":"699C123E241B83","user_header":"https://static001.geekbang.org/account/avatar/00/10/95/28/5d182c5d.jpg","comment_is_top":false,"comment_ctime":1532764687,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532764687","product_id":100010301,"comment_content":"<br>float res = 0x7F800001;<br>System.out.println(res);<br>int resInt = 0x7F800001;<br>System.out.println(resInt);<br>输出：<br>2.13909504E9<br>2139095041<br>也没有出现NaN呀","like_count":0},{"had_liked":false,"id":17345,"user_name":"阿康","can_delete":false,"product_type":"c1","uid":1146671,"ip_address":"","ucode":"C68B5274D956A1","user_header":"https://static001.geekbang.org/account/avatar/00/11/7f/2f/b4a925bd.jpg","comment_is_top":false,"comment_ctime":1532580203,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1532580203","product_id":100010301,"comment_content":"通常我们可以认定 char 类型的值为非负数。这种特性十分有用，比如说作为数组索引等。<br><br>这句话不是很理解？<br>","like_count":0,"discussions":[{"author":{"id":1116241,"avatar":"https://static001.geekbang.org/account/avatar/00/11/08/51/8a538052.jpg","nickname":"伊恩","note":"","ucode":"438A71D733AF1A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3241,"discussion_content":"索引通常是从0开始的非负整数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564326635,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17321,"user_name":"倪有才","can_delete":false,"product_type":"c1","uid":1185995,"ip_address":"","ucode":"21D0015A56FDE1","user_header":"https://static001.geekbang.org/account/avatar/00/12/18/cb/b60a7e57.jpg","comment_is_top":false,"comment_ctime":1532567668,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532567668","product_id":100010301,"comment_content":"快点更新呀","like_count":0},{"had_liked":false,"id":17288,"user_name":"jerry","can_delete":false,"product_type":"c1","uid":1153606,"ip_address":"","ucode":"7B10F2103AA15A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eonqA0Q15ASerTNtTZSaQmCAtibj6zM2fL8ahAyVTIRPYM2Hm01SQF3icortgDiaDQGRicEb3h5GvHicoA/132","comment_is_top":false,"comment_ctime":1532541733,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532541733","product_id":100010301,"comment_content":"老师，我用javap命令看编译出来的class文件，方法里面的本地变量是用槽（slot）来标示的，double两个槽，int一个槽，boolean也是一个槽。这个槽就是4字节的结构吧？boolean, short都占一个槽，所以在栈空间中就是4字节？","like_count":0},{"had_liked":false,"id":17287,"user_name":"沉淀的梦想","can_delete":false,"product_type":"c1","uid":1177315,"ip_address":"","ucode":"BCB7C26F9D214B","user_header":"https://static001.geekbang.org/account/avatar/00/11/f6/e3/e4bcd69e.jpg","comment_is_top":false,"comment_ctime":1532538609,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532538609","product_id":100010301,"comment_content":"换了台电脑就可以复现你们的结果了，在我自己的电脑上死活复现不出来，我怀疑是不是有的硬件不支持1位的掩码？","like_count":0},{"had_liked":false,"id":17281,"user_name":"张鑫","can_delete":false,"product_type":"c1","uid":1182756,"ip_address":"","ucode":"55F110600D0371","user_header":"https://static001.geekbang.org/account/avatar/00/12/0c/24/e600a7c9.jpg","comment_is_top":false,"comment_ctime":1532537134,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532537134","product_id":100010301,"comment_content":"基本数据类型内存不是直接分配到栈内存空间吗？boolean类型占一个字节，char类型占两个字节，怎么我看上面回复还有分配在堆内存空间？","like_count":0},{"had_liked":false,"id":17181,"user_name":"等待","can_delete":false,"product_type":"c1","uid":1180818,"ip_address":"","ucode":"1A87E66F4FD2F7","user_header":"https://static001.geekbang.org/account/avatar/00/12/04/92/6193dd94.jpg","comment_is_top":false,"comment_ctime":1532482341,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532482341","product_id":100010301,"comment_content":"请教问题，比如在一个方法中声明了一个引用类型，这个引用类型会指向一个堆里的一个对象，假如我声明了一个int i =1，那这个1是从某个地方拷贝到局部变量表，还是说有其他的机制产生一个1，还有就是类的属性是基本数据类型的情况和方法中的局部变量是基本数据类型的赋值细节是一样的吗？","like_count":0},{"had_liked":false,"id":17084,"user_name":"落叶飞逝的恋","can_delete":false,"product_type":"c1","uid":1046429,"ip_address":"","ucode":"F9A95DB28BCF1E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/9d/be04b331.jpg","comment_is_top":false,"comment_ctime":1532426707,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532426707","product_id":100010301,"comment_content":"作者你好，能单独讲下指令码吗？谢谢","like_count":0},{"had_liked":false,"id":17070,"user_name":"无泪","can_delete":false,"product_type":"c1","uid":1179892,"ip_address":"","ucode":"196AC5668BE188","user_header":"https://static001.geekbang.org/account/avatar/00/12/00/f4/32e03207.jpg","comment_is_top":false,"comment_ctime":1532412566,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532412566","product_id":100010301,"comment_content":"栈的地方如果用图形表示一下就好理解了","like_count":0},{"had_liked":false,"id":17044,"user_name":"Ghoul Zhou","can_delete":false,"product_type":"c1","uid":1107457,"ip_address":"","ucode":"07E6FEE43E1D61","user_header":"https://static001.geekbang.org/account/avatar/00/10/e6/01/0ccb7a7c.jpg","comment_is_top":false,"comment_ctime":1532395516,"is_pvip":false,"replies":[{"id":"5910","content":"对的，字节码里是跳转。","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1532417786,"ip_address":"","comment_id":17044,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1532395516","product_id":100010301,"comment_content":"“第二个 if 语句则会被编译成条件跳转字节码 if_icmpne，也就是说，如果局部变量的值和整数 1 不相等，那么跳过打印“真吃了”的语句。”<br>不相等，应该是不打印“真吃了”的语句，这里是不是想表达，阐述字节码执行顺序过程呀？","like_count":0,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421020,"discussion_content":"对的，字节码里是跳转。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532417786,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17009,"user_name":"Living  as a naturalist","can_delete":false,"product_type":"c1","uid":1182605,"ip_address":"","ucode":"1656FD604B5000","user_header":"https://static001.geekbang.org/account/avatar/00/12/0b/8d/10d7b878.jpg","comment_is_top":false,"comment_ctime":1532389604,"is_pvip":false,"replies":[{"id":"5912","content":"是openjdk一个项目里的工具，开源的","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1532418300,"ip_address":"","comment_id":17009,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1532389604","product_id":100010301,"comment_content":"老师，百度没有找到AsmTools这个工具，是你们特用的吗","like_count":0,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421005,"discussion_content":"是openjdk一个项目里的工具，开源的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532418300,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16944,"user_name":"羊飞","can_delete":false,"product_type":"c1","uid":1102560,"ip_address":"","ucode":"3BD27941E6B1AF","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/e0/25ce76a6.jpg","comment_is_top":false,"comment_ctime":1532321162,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532321162","product_id":100010301,"comment_content":"老师，我昨天试的时候两个都打印出来了","like_count":0}]}