{"id":81483,"title":"23 | 包体积优化（下）：资源优化的进阶实践","content":"<p>上一期我们聊了Dex与Native Library的优化，是不是还有点意犹未尽的感觉呢？那安装包还有哪些可以优化的地方呢？</p><p><img src=\"https://static001.geekbang.org/resource/image/30/46/30d73f5021ac8b4333db3e49a31c8a46.png?wh=1498*1590\" alt=\"\"></p><p>请看上面这张图，Assets、Resource以及签名metadata都是安装包中的“资源”部分，今天我们就一起来看看如何进一步优化资源的体积。</p><h2>AndResGuard工具</h2><p>在美团的一篇文章<a href=\"https://tech.meituan.com/2017/04/07/android-shrink-overall-solution.html\">《Android App包瘦身优化实践》</a>中，也讲到了很多资源优化相关的方法，例如WebP和SVG、R文件、无用资源、资源混淆以及语言压缩等。</p><p>在我们的安装包中，资源相关的文件具体有下面这几个，它们都是我们需要优化的目标文件。</p><p><img src=\"https://static001.geekbang.org/resource/image/dd/b7/dd5c7efb6074ff0f2bd18296f9ecf1b7.png?wh=1276*488\" alt=\"\"></p><p>想使用好<a href=\"https://github.com/shwenzhang/AndResGuard\">AndResGuard</a>工具，需要对安装包格式以及Android资源编译的原理有很深地理解，它主要有两个功能，一个是资源混淆，一个是资源的极限压缩。</p><p>接下来我们先来复习一下这个工具的核心实现，然后再进一步思考还有哪些地方需要继续优化。</p><p><strong>1. 资源混淆</strong></p><p>ProGuard的核心优化主要有三个：Shrink、Optimize和Obfuscate，也就是裁剪、优化和混淆。当初我在写AndResGuard的时候，希望实现的就是ProGuard中的混淆功能。</p><p>资源混淆的思路其实非常简单，就是把资源和文件的名字混淆成短路径：</p><!-- [[[read_end]]] --><pre><code>Proguard          -&gt; Resource Proguard\nR.string.name     -&gt; R.string.a   \nres/drawable/icon -&gt; res/s/a\n</code></pre><p>那么这样的实现究竟对哪些资源文件有优化作用呢？</p><ul>\n<li>\n<p><strong>resources.arsc</strong>。因为资源索引文件resources.arsc需要记录资源文件的名称与路径，使用混淆后的短路径res/s/a，可以减少整个文件的大小。</p>\n</li>\n<li>\n<p><strong>metadata签名文件</strong>。<a href=\"https://cloud.tencent.com/developer/article/1354380\">签名文件MF与SF</a>都需要记录所有文件的路径以及它们的哈希值，使用短路径可以减少这两个文件的大小。</p>\n</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/25/5c/25792171ce386fff9d5c0b73d382ce5c.png?wh=1052*630\" alt=\"\"></p><ul>\n<li><strong>ZIP文件索引</strong>。ZIP文件格式里面也需要记录每个文件Entry的路径、压缩算法、CRC、文件大小等信息。使用短路径，本身就可以减少记录文件路径的字符串大小。</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/54/a8/54760d2eab5e7199572e02ed70377fa8.png?wh=1796*944\" alt=\"\"></p><p>资源文件有一个非常大的特点，那就是文件数量特别多。以微信7.0为例，安装包中就有7000多个资源文件。所以说，资源混淆工具仅仅通过短路径的优化，就可以达到减少resources.arsc、签名文件以及ZIP文件大小的目的。</p><p>既然移动优化已经到了“深水区”，正如Dex和Library优化一样，我们需要对它们的格式以及特性有非常深入的研究，才能找到优化的思路。而我们要做的资源优化也是如此，要对resources.arsc、签名文件以及ZIP格式需要有非常深入的研究与思考。</p><p><strong>2. 极限压缩</strong></p><p>AndResGuard的另外一个优化就是极限压缩，它的极限压缩功能体现在两个方面：</p><ul>\n<li>\n<p><strong>更高的压缩率</strong>。虽然我们使用的还是Zip算法，但是利用了7-Zip的大字典优化，APK的整体压缩率可以提升3%左右。</p>\n</li>\n<li>\n<p><strong>压缩更多的文件</strong>。Android编译过程中，下面这些格式的文件会指定不压缩；在AndResGuard中，我们支持针对resources.arsc、PNG、JPG以及GIF等文件的强制压缩。</p>\n</li>\n</ul><pre><code>/* these formats are already compressed, or don't compress well */\nstatic const char* kNoCompressExt[] = {\n    &quot;.jpg&quot;, &quot;.jpeg&quot;, &quot;.png&quot;, &quot;.gif&quot;,\n    &quot;.wav&quot;, &quot;.mp2&quot;, &quot;.mp3&quot;, &quot;.ogg&quot;, &quot;.aac&quot;,\n    &quot;.mpg&quot;, &quot;.mpeg&quot;, &quot;.mid&quot;, &quot;.midi&quot;, &quot;.smf&quot;, &quot;.jet&quot;,\n    &quot;.rtttl&quot;, &quot;.imy&quot;, &quot;.xmf&quot;, &quot;.mp4&quot;, &quot;.m4a&quot;,\n    &quot;.m4v&quot;, &quot;.3gp&quot;, &quot;.3gpp&quot;, &quot;.3g2&quot;, &quot;.3gpp2&quot;,\n    &quot;.amr&quot;, &quot;.awb&quot;, &quot;.wma&quot;, &quot;.wmv&quot;, &quot;.webm&quot;, &quot;.mkv&quot;\n};\n</code></pre><p>这里可能会有一个疑问，为什么Android系统会专门选择不去压缩这些文件呢？</p><ul>\n<li>\n<p><strong>压缩效果并不明显</strong>。这些格式的文件大部分本身已经压缩过，重新做Zip压缩效果并不明显。例如PNG和JPG格式，重新压缩只有3%～5%的收益，并不是十分明显。</p>\n</li>\n<li>\n<p><strong>读取时间与内存的考虑</strong>。如果文件是没有压缩的，系统可以利用mmap的方式直接读取，而不需要一次性解压并放在内存中。</p>\n</li>\n</ul><p>Android 6.0之后AndroidManifest支持不压缩Library文件，这样安装APK的时候也不需要把Library文件解压出来，系统可以直接mmap安装包中的Library文件。</p><blockquote>\n<p>android:extractNativeLibs=“true”</p>\n</blockquote><p>简单来说，我们在启动性能、内存和安装包体积之间又做了一个抉择。在上一期中我就讲过对于Dex和Library来说，最有效果的方法是使用XZ或者7-Zip压缩，对于资源来说也是如此，一些比较大的资源文件我们也可以考虑使用XZ压缩，但是在首次启动时需要解压出来。</p><h2>进阶的优化方法</h2><p>学习完AndResGuard工具的混淆和压缩功能的实现原理后，可以帮助我们加深对安装包格式以及Android资源编译的原理的认识。</p><p>但AndResGuard毕竟是几年前的产物，那现在又有哪些新的进阶优化方法呢？</p><p><strong>1. 资源合并</strong></p><p>在资源混淆方案中，我们发现资源文件的路径对于resources.arsc、签名信息以及ZIP文件信息都会有影响。而且因为资源文件数量非常非常多，导致这部分的体积非常可观。</p><p>那我们能不能把所有的资源文件都合并成同一个大文件，这样做肯定会比资源混淆方案效果更好。</p><p><img src=\"https://static001.geekbang.org/resource/image/e6/0d/e6a587ffa43b7dfb7887ace3d973a30d.png?wh=1920*391\" alt=\"\"></p><p>事实上，大部分的换肤方案也是采用这个思路，这个大资源文件就相当于一套皮肤。因此我们完全可以把这套方案推广开来，但是实现起来还是需要解决不少问题的。</p><ul>\n<li><strong>资源的解析</strong>。我们需要模拟系统实现资源文件的解析，例如把PNG、JPG以及XML文件转换为Bitmap或者Drawable，这样获取资源的方法需要改成我们自定义的方法。</li>\n</ul><pre><code>// 系统默认的方式\nDrawable drawable = getResouces().getDrawable(R.drawable.loading);\n\n// 新的获取方式\nDrawable drawable = CustomResManager.getDrawable(R.drawable.loading);\n</code></pre><p>那为什么我们不像SVG那样，直接把这些解析完的所有Drawable全部丢到系统的缓存中呢？这样代码就无需做太多修改？之所以没这么做主要是考虑对内存的影响，如果我们把全部的资源文件一次性全部解析，并且丢到系统的缓存中，这部分会占用非常大的内存。</p><ul>\n<li><strong>资源的管理</strong>。考虑到内存和启动时间，所有的资源也是用时加载，我们只需要使用mmap来加载“Big resource File”。同时我们还要实现自己的资源缓存池ResourceCache，释放不再使用的资源文件，这部分内容你可以参考类似Glide图片库的实现。</li>\n</ul><p>我在逆向Facebook的App的时候也发现，它们的资源和多语言基本走的完全是自己的流程。在“UI优化”时我就说过，我们先在系统的框架下尝试做了很多的优化，但是渐渐发现这样的方式依然要受系统的各种制约，这时就要考虑去突破系统的限制，把所有的流程都接管过来。</p><p>当然我们也需要在性能和效率之间寻找平衡点，要看自己的应用当前更重视性能提升还是开发效率。</p><p><strong>2. 无用资源</strong></p><p>AndResGuard中的资源混淆实现的是ProGuard的Obfuscate，那我们是否可以同样实现资源的Shrink，也就是裁剪功能呢？应用通过长时间的迭代，总会有一些无用的资源，尽管它们在程序运行过程不会被使用，但是依然占据着安装包的体积。</p><p>事实上，Android官方早就考虑到这种情况了，下面我们一起来看看无用资源优化方案的演进过程。</p><p><strong>第一阶段：Lint</strong></p><p>从Eclipse时代开始，我们就开始使用<a href=\"https://cloud.tencent.com/developer/article/1014614\">Lint</a>这个静态代码扫描工具，它里面就支持Unused Resources扫描。</p><p><img src=\"https://static001.geekbang.org/resource/image/f0/80/f09d7215a06d330bb19d72869df80580.png?wh=1920*534\" alt=\"\"></p><p>然后我们直接选择“Remove All Unused Resources”，就可以轻松删除所有的无用资源了。既然它是第一阶段的方案，那Lint方案扫描具体的缺点是什么呢？</p><p>Lint作为一个静态扫描工具，它最大的问题在于没有考虑到ProGuard的代码裁剪。在ProGuard过程我们会shrink掉大量的无用代码，但是Lint工具并不能检查出这些无用代码所引用的无用资源。</p><p><strong>第二阶段：shrinkResources</strong></p><p>所以Android在第二阶段增加了“shrinkResources”资源压缩功能，它需要配合ProGurad的“minifyEnabled”功能同时使用。</p><p>如果ProGuard把部分无用代码移除，这些代码所引用的资源也会被标记为无用资源，然后通过资源压缩功能将它们移除。</p><pre><code>android {\n    ...\n    buildTypes {\n        release {\n            shrinkResources true\n            minifyEnabled true\n        }\n    }\n}\n</code></pre><p>是不是看起来很完美，但是目前的shrinkResources实现起来还有几个缺陷。</p><ul>\n<li><strong>没有处理resources.arsc文件</strong>。这样导致大量无用的String、ID、Attr、Dimen等资源并没有被删除。</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/15/97/1587d1a3bd95ad0f318bfd5731c0bc97.png?wh=1142*650\" alt=\"\"></p><ul>\n<li><strong>没有真正删除资源文件</strong>。对于Drawable、Layout这些无用资源，shrinkResources也没有真正把它们删掉，而是仅仅替换为一个空文件。为什么不能删除呢？主要还是因为resources.arsc里面还有这些文件的路径，具体你可以查看这个<a href=\"https://issuetracker.google.com/issues/37010152\">issues</a>。</li>\n</ul><p>所以尽管我们的应用有大量的无用资源，但是系统目前的做法并没有真正减少文件数量。这样resources.arsc、签名信息以及ZIP文件信息这几个“大头”依然没有任何改善。</p><p>那为什么Studio不把这些资源真正删掉呢？事实上Android也知道有这个问题，在它的核心实现<a href=\"https://android.googlesource.com/platform/tools/base/+/studio-master-dev/build-system/gradle-core/src/main/java/com/android/build/gradle/tasks/ResourceUsageAnalyzer.java\">ResourceUsageAnalyzer</a>中的注释也写得非常清楚，并尝试解决这个问题提供了两种思路。</p><p><img src=\"https://static001.geekbang.org/resource/image/85/a6/854c91e20d7724bd61b0f5376cebf5a6.png?wh=1342*360\" alt=\"\"></p><p>如果想解答系统为什么不能直接把这些资源删除，我们需要先回过头来重温一下Android的编译流程。</p><p><img src=\"https://static001.geekbang.org/resource/image/89/cf/8929932b9db83b06444c54435948d2cf.png?wh=1186*1292\" alt=\"\"></p><ul>\n<li>\n<p>由于Java代码需要用到资源的R.java文件，所以我们就需要把R.java提前准备好。</p>\n</li>\n<li>\n<p>在编译Java代码过程，已经根据R.java文件，直接将代码中资源的引用替换为常量，例如将R.String.sample替换为0x7f0c0003。</p>\n</li>\n<li>\n<p>.ap_资源文件的同步编译，例如resources.arsc、XML文件的处理等。</p>\n</li>\n</ul><p>如果我们在这个过程强行把无用资源文件删除，resources.arsc和R.java文件的资源ID都会改变（因为默认都是连续的），这个时候代码中已经替换过的0x7f0c0003就会出现资源错乱或者找不到的情况。</p><p>因此系统为了避免发生这种情况，采用了折中的方法，并没有二次处理resources.arsc文件，只是仅仅把无用的Drawable和Layout文件替换为空文件。</p><p><strong>第三阶段：realShrinkResources</strong></p><p>那怎么样才能真正实现无用资源的删除功能呢？ResourceUsageAnalyzer的注释中就提供了一个思路，我们可以利用resources.arsc中Public ID的机制，实现非连续的资源ID。</p><p>简单来说，就是keep住保留资源的ID，保证已经编译完的代码可以正常找到对应的资源。</p><p><img src=\"https://static001.geekbang.org/resource/image/c6/14/c670fcb26d8acffec355ec7ba539fb14.png?wh=1492*1576\" alt=\"\"></p><p>但是重写resources.arsc的方法会比资源混淆更加复杂，我们既要从这个文件中抹去所有的无用资源相关信息，还要keep住所有保留资源的ID，相当于把整个文件都重写了。</p><p>正因为异常复杂，所以目前Android还没有提供这套方案的完整实现。我最近也正在按照这个思路来实现这套方案，希望完成后可以尽快开源出来。</p><h2>总结</h2><p>今天我们回顾了AndResGuard工具的实现原理，也学习了两种资源优化的进阶方式。特别是无用资源的优化，你可以看到尽管是无所不能的Google，也并没有把方案做到最好，依然存在一些妥协的地方。</p><p>其实这种不完美的地方还有很多很多，也正是有了这些不完美的地方，才会出现各种各样优秀的开源方案。也因此我们才会不断思考如何突破系统的限制，去实现更多、更底层的优化。</p><h2>课后作业</h2><p>对于Android的编译流程，你还有不理解的地方吗？对于安装包中的资源，你还有哪些好的优化方案？欢迎留言跟我和其他同学一起讨论。</p><p>不知道你有没有想过，其实“第三阶段”的无用资源删除方案也并不是终极解决方案，因为它并没有考虑到无用的Assets资源。</p><p>但是对于Assets资源，代码中会有各种各样的引用方式，如果想准确地识别出无用的Assets并不是那么容易。当初在Matrix中，我们尝试提供了一套简单的实现，你可以参考<a href=\"https://github.com/Tencent/matrix/blob/master/matrix/matrix-android/matrix-apk-canary/src/main/java/com/tencent/matrix/apk/model/task/UnusedAssetsTask.java\">UnusedAssetsTask</a>。</p><p>希望你在课后也可以进一步思考，我们可以如何识别出无用的Assets资源，在这个过程中会遇到哪些问题？</p><p>欢迎你点击“请朋友读”，把今天的内容分享给好友，邀请他一起学习。最后别忘了在评论区提交今天的作业，我也为认真完成作业的同学准备了丰厚的“学习加油礼包”，期待与你一起切磋进步哦。</p><p></p>","neighbors":{"left":{"article_title":"22 | 包体积优化（上）：如何减少安装包大小？","id":81202},"right":{"article_title":"24 | 想成为Android高手，你需要先搞定这三个问题","id":81812}},"comments":[{"had_liked":false,"id":90719,"user_name":"星辰大海","can_delete":false,"product_type":"c1","uid":1328356,"ip_address":"","ucode":"6369E810B3C53D","user_header":"https://static001.geekbang.org/account/avatar/00/14/44/e4/c69405ca.jpg","comment_is_top":false,"comment_ctime":1556616161,"is_pvip":false,"replies":[{"id":"62003","content":"牛逼","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1576675574,"ip_address":"","comment_id":90719,"utype":1}],"discussion_count":4,"race_medal":0,"score":"91750929377","product_id":100021101,"comment_content":"哈哈，shwen哥，重写arsc文件我们在matrix里其实已经实现了，借你的文章广告下。","like_count":22,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448627,"discussion_content":"牛逼","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576675574,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1123256,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/b8/7ae901be.jpg","nickname":"冷暖自知","note":"","ucode":"AEC312F75D2723","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1822,"discussion_content":"有wiki吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562928785,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1328356,"avatar":"https://static001.geekbang.org/account/avatar/00/14/44/e4/c69405ca.jpg","nickname":"星辰大海","note":"","ucode":"6369E810B3C53D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1123256,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/b8/7ae901be.jpg","nickname":"冷暖自知","note":"","ucode":"AEC312F75D2723","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4060,"discussion_content":"可以github上搜一下腾讯的matrix","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565084815,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":1822,"ip_address":""},"score":4060,"extra":""},{"author":{"id":1124903,"avatar":"https://static001.geekbang.org/account/avatar/00/11/2a/27/1dd7f2a2.jpg","nickname":"Geek_6061ea","note":"","ucode":"5C017923512BE4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1328356,"avatar":"https://static001.geekbang.org/account/avatar/00/14/44/e4/c69405ca.jpg","nickname":"星辰大海","note":"","ucode":"6369E810B3C53D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":10147,"discussion_content":"具体在matrix的哪里可以找到重写arsc文件的解决方案？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568267249,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4060,"ip_address":""},"score":10147,"extra":""}]}]},{"had_liked":false,"id":220502,"user_name":"Zain Zhu","can_delete":false,"product_type":"c1","uid":1125986,"ip_address":"","ucode":"5402E6FF76333A","user_header":"https://static001.geekbang.org/account/avatar/00/11/2e/62/ea49480e.jpg","comment_is_top":false,"comment_ctime":1590251619,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27360055395","product_id":100021101,"comment_content":"硬着头皮在看，一直写业务代码都废掉了啊","like_count":5},{"had_liked":false,"id":102729,"user_name":"Danny _Jiang","can_delete":false,"product_type":"c1","uid":1240649,"ip_address":"","ucode":"ED5A2DFCCE73BD","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ4g4UuxOeCMoXu1uc6QKmdOcm5icoicOyAEUyH8QEp8Y0lmibGWbD27ZppYwT5BQOHibDOsf4B6Eze8Q/132","comment_is_top":false,"comment_ctime":1560300358,"is_pvip":false,"replies":[{"id":"37385","content":"对于xml是有做处理的，json这个属于特殊情况，只能放到白名单里面了","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1560424052,"ip_address":"","comment_id":102729,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10150234950","product_id":100021101,"comment_content":"Matrix中的UnusedAssetTask也有一定的缺陷，因为只是调用DexFileFactory.loadDexFile加载dex文件，所以只会去搜索java文件中的引用。<br> 如果在assets目录下有一个.json文件，此.json文件中记录assets文件夹中的其它图片路径，然后在java代码中通过AssetManager读取这个json文件之后，循环遍历出它所引用的图片，对于这种方式Matrix是检测不到的，会将它置为unused.  <br>想问一下作者，对于这种情况有什么好的建议优化matrix吗","like_count":2,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453547,"discussion_content":"对于xml是有做处理的，json这个属于特殊情况，只能放到白名单里面了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560424052,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1964250,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/f8/da/d77b54a3.jpg","nickname":"iblade","note":"","ucode":"13264A2E9E273C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560369,"discussion_content":"莫非这是我星哥？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1649303021,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71007,"user_name":"功夫熊猫","can_delete":false,"product_type":"c1","uid":1025521,"ip_address":"","ucode":"8C73B118926961","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a5/f1/76d4e6bb.jpg","comment_is_top":false,"comment_ctime":1551243979,"is_pvip":false,"replies":[{"id":"25467","content":"依然是zip算法，只是优化了字典","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1551265732,"ip_address":"","comment_id":71007,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5846211275","product_id":100021101,"comment_content":"极限压缩这部分说的更高效率的压缩是指压缩的什么，最后APK的压缩算法？如果是那么系统安装如何解压？还是说优化了现有的zip算法？","like_count":1,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440943,"discussion_content":"依然是zip算法，只是优化了字典","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551265732,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":216405,"user_name":"你我的宿命","can_delete":false,"product_type":"c1","uid":1902875,"ip_address":"","ucode":"40572C229CBB26","user_header":"https://static001.geekbang.org/account/avatar/00/1d/09/1b/31ca4262.jpg","comment_is_top":false,"comment_ctime":1589253115,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589253115","product_id":100021101,"comment_content":"了解到resources.arsc真正用途，图片资源压缩的本质问题在哪里，assets中的无用资源记录到下一步的优化计划中","like_count":0},{"had_liked":false,"id":205525,"user_name":"Swing","can_delete":false,"product_type":"c1","uid":1330065,"ip_address":"","ucode":"55FCA9ECEFBBEB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/N0NACGUr8dNAbN6BdiagPHBaB0EnyDsI9zWpwJteqTY38apOEnTOA7JkBAQnzYKJBgxu3Q8YMUILwLAB6camn4w/132","comment_is_top":false,"comment_ctime":1586663788,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1586663788","product_id":100021101,"comment_content":"“所有的资源也是用时加载，我们只需要使用 mmap 来加载“Big resource File”。同时我们还要实现自己的资源缓存池 ResourceCache，释放不再使用的资源文件，这部分内容你可以参考类似 Glide 图片库的实现。”<br>使用mmap，意味着 将整个的 大文件 缓存到了 pagecache里？那系统内存占用还是不可避免啊。<br>而且 本身可能我目前只是用 三五个文件，你一下把所有文件都加载进来了，这不是增加系统负担吗？？？<br><br>求解惑","like_count":0,"discussions":[{"author":{"id":1697504,"avatar":"https://static001.geekbang.org/account/avatar/00/19/e6/e0/30b66693.jpg","nickname":"珞小飞","note":"","ucode":"6111E42431BB1C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":281743,"discussion_content":"mmap本身就是使用时才真正加载到内存中吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591799568,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":202911,"user_name":"古月弓虽1993","can_delete":false,"product_type":"c1","uid":1237500,"ip_address":"","ucode":"86122CC701F02A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI3jSpV7VvK6NaUH6X1LNYWGsQdFSTu4SwTZ0nQlSYGTOY2FrDCcMic9qFXnu2ZGR88hBlUQK28Whg/132","comment_is_top":false,"comment_ctime":1586084728,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1586084728","product_id":100021101,"comment_content":"请问文中使用的hex编辑器是什么编辑器呢","like_count":1,"discussions":[{"author":{"id":1135912,"avatar":"https://static001.geekbang.org/account/avatar/00/11/55/28/31b0cf2f.jpg","nickname":"黑色毛衣","note":"","ucode":"FF7E235F91BA5C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":569528,"discussion_content":"010Editer\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651470420,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160159,"user_name":"Tony","can_delete":false,"product_type":"c1","uid":1432723,"ip_address":"","ucode":"E30A96891AE98F","user_header":"https://static001.geekbang.org/account/avatar/00/15/dc/93/3521ff2b.jpg","comment_is_top":false,"comment_ctime":1575882530,"is_pvip":false,"replies":[{"id":"62074","content":"删除的无用代码都是没有Java引用的，你看起来有Java引用，可能是因为那些Java代码被proguard了","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1576681825,"ip_address":"","comment_id":160159,"utype":1}],"discussion_count":4,"race_medal":0,"score":"1575882530","product_id":100021101,"comment_content":"绍文大师，我看完了你写的这篇文章，但是有个疑问，直接删除无用资源文件的话，java代码或者kotlin代码中资源引用例如0x73c8745为什么会错乱或找不到呢，虽然资源ID是顺序分配的，但是并不会影响java代码中的引用把？对这个不是很理解啊","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477275,"discussion_content":"删除的无用代码都是没有Java引用的，你看起来有Java引用，可能是因为那些Java代码被proguard了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576681825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2969097,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/4e/09/f69b3f33.jpg","nickname":"李龙","note":"","ucode":"1C041CCA6F491B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":562618,"discussion_content":"个人理解:比方说arsc里有三个文件，地址分别为1，2，3，其中2是无用资源，java代码里分别引用了1和3。如果把2删除，因为地址是要连续的，那么地址3就会变成地址2，。这样就导致了java代码中找不到地址3而报错。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649856895,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1135912,"avatar":"https://static001.geekbang.org/account/avatar/00/11/55/28/31b0cf2f.jpg","nickname":"黑色毛衣","note":"","ucode":"FF7E235F91BA5C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2969097,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/4e/09/f69b3f33.jpg","nickname":"李龙","note":"","ucode":"1C041CCA6F491B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":569532,"discussion_content":"是这个意思 aapt ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651470994,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":562618,"ip_address":""},"score":569532,"extra":""}]},{"author":{"id":1037084,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d3/1c/7b106c98.jpg","nickname":"刀健笑","note":"","ucode":"4077841DA72DCB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284501,"discussion_content":"他是问的有用资源引用例如0x73c8745为什么会错乱或找不到？不理解同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592543684,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92797,"user_name":"joker°","can_delete":false,"product_type":"c1","uid":1523167,"ip_address":"","ucode":"52C20DFDDCADD3","user_header":"https://static001.geekbang.org/account/avatar/00/17/3d/df/f33f82e3.jpg","comment_is_top":false,"comment_ctime":1557327366,"is_pvip":false,"replies":[{"id":"62014","content":"指的是源码吗？源码可以看build-system里面","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1576676415,"ip_address":"","comment_id":92797,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557327366","product_id":100021101,"comment_content":"请问 shrinkResources 输入的无用文件相关代码在哪里看呢？实测无用 drawable 文件会压缩为一个内容仅为“&lt;x&#47;&gt;”文件，但是无用 layout 文件并无任何改动","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449386,"discussion_content":"指的是源码吗？源码可以看build-system里面","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576676415,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79661,"user_name":"Carlo","can_delete":false,"product_type":"c1","uid":1001557,"ip_address":"","ucode":"7C3FF23B597506","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/55/48de9a24.jpg","comment_is_top":false,"comment_ctime":1553517560,"is_pvip":false,"replies":[{"id":"31114","content":"现在专栏完结了，真正的无用资源删除等我有空实现一下","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1555397798,"ip_address":"","comment_id":79661,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553517560","product_id":100021101,"comment_content":"有没有一个好的，通用的linter或者真正的resourceshirk 工具？","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444570,"discussion_content":"现在专栏完结了，真正的无用资源删除等我有空实现一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555397798,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69925,"user_name":"奚岩","can_delete":false,"product_type":"c1","uid":1107769,"ip_address":"","ucode":"E7D3A56216EE47","user_header":"https://static001.geekbang.org/account/avatar/00/10/e7/39/b47b1bc0.jpg","comment_is_top":false,"comment_ctime":1550909076,"is_pvip":false,"replies":[{"id":"24897","content":"shrinkresource看的就是java字节码","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1550917907,"ip_address":"","comment_id":69925,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550909076","product_id":100021101,"comment_content":"Lint 只能静态分析 ，但是有些动态生成的就没法识别，比如我了 kotlin-android-extensions， 有些 id 使用了，但是  Lint 却不知道，有没有什么工具可以 分析编译后 代码？<br><br>有个插件 statistics 可以统计代码。","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440359,"discussion_content":"shrinkresource看的就是java字节码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550917907,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69212,"user_name":"张晴天天天天天☁️☁️","can_delete":false,"product_type":"c1","uid":1188103,"ip_address":"","ucode":"8A99198ECB05C8","user_header":"https://static001.geekbang.org/account/avatar/00/12/21/07/29245020.jpg","comment_is_top":false,"comment_ctime":1550678129,"is_pvip":false,"replies":[{"id":"24629","content":"是因为没有排除某些会使用的文件，需要加白名单","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1550721312,"ip_address":"","comment_id":69212,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550678129","product_id":100021101,"comment_content":"老师您好，我从网上了解到shrinkResources=true时可能会导致一些应用崩溃的问题，那还要去使用它吗？","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440004,"discussion_content":"是因为没有排除某些会使用的文件，需要加白名单","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550721312,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":67537,"user_name":"Egos","can_delete":false,"product_type":"c1","uid":1071143,"ip_address":"","ucode":"9F0055B140E935","user_header":"https://static001.geekbang.org/account/avatar/00/10/58/27/1188e017.jpg","comment_is_top":false,"comment_ctime":1550194422,"is_pvip":false,"replies":[{"id":"23909","content":"不是，是一个自定义的二进制文件","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1550197797,"ip_address":"","comment_id":67537,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550194422","product_id":100021101,"comment_content":"所有资源文件合成一个大文件，是一个zip？","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439235,"discussion_content":"不是，是一个自定义的二进制文件","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550197797,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}