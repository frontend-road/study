{"id":11462,"title":"11 | 互联网产品的测试策略应该如何设计？","content":"<p>在上一篇文章中，我跟你分享了做好互联网产品测试你要具备的非测试知识，那么现在我就来跟你聊聊应该如何设计互联网产品的测试策略。</p>\n<p>在我开始今天的话题之前，请你先思考一下为什么我会把互联网产品的测试策略单独拿出来讨论，互联网产品的测试策略和传统软件产品的测试策略到底有哪些不同？</p>\n<h2>研发流程的不同决定了测试策略的不同</h2>\n<p>如果直接回答互联网产品和传统软件产品的测试策略有何不同，你会有些摸不着头脑，那么按照我一直在强调的知其然知其所以然的原则，你可以先去总结这两类产品的研发本身最大的不同是什么？</p>\n<p><strong>那就是，互联网产品的“快”。</strong></p>\n<p>我在专栏前面的文章中，已经提到了互联网产品的上线周期通常是以“天”甚至是以“小时”为单位，而传统软件产品的周期多以“月”，甚至以“年”为单位。</p>\n<p><span class=\"orange\">发布周期的巨大差异决定了，传统软件产品的测试策略必然不适用于互联网产品的测试，二者的测试策略必然在测试执行时间和测试执行环境上有巨大差异。</span></p>\n<p>比如，对于功能自动化测试用例，执行一轮全回归测试需要12小时，对传统软件来说这根本不是问题，因为发布周期很长，留给测试的时间也会很充裕。</p>\n<p>不要说全回归测试执行时间需要12小时，哪怕是需要几天几夜也没有任何问题，就像我以前在思科（Cisco）做传统软件测试时，一轮完整的全回归测试的GUI测试用例数接近3000个，API测试用例数更是接近25000个，跑完全部用例需要将近60小时。</p><!-- [[[read_end]]] -->\n<p>但对互联网产品来说，通常24小时就会有一到两次的发布，发布流程通常包含了代码静态扫描、单元测试、编译、打包、上传、下载、部署和测试的全流程。显然留给测试执行的时间就非常有限，传统软件动辄十几个小时的测试执行时间，在互联网产品的测试上，根本行不通。</p>\n<p><strong>通常情况下，互联网产品要求全回归测试的执行时间不能超过4小时。</strong></p>\n<p>那么，如何在保证测试质量和测试覆盖率的前提下，有效缩短测试执行时间呢？</p>\n<ul>\n<li>\n<p>首先，你可以引入测试的并发执行机制，用包含大量测试执行节点的测试执行集群来并发执行测试用例。<br />\n测试执行集群，你可以简单理解为是一批专门用来并发执行测试用例的机器。常见的测试执行集群，由一个主节点（Master）和若干个子节点（Node）组成。其中，主节点用来分发测试用例到各个子节点，而各个子节点用来具体执行测试用例。<br />\n目前，很多互联网企业都建立了自己的测试执行集群。</p>\n</li>\n<li>\n<p>其次，你必须从测试策略上找到突破口，这也是我今天跟你分享的主题。<br />\n接下来，我会先简单为你介绍一下传统软件产品的测试策略设计，然后再给你分享互联网产品的测试策略，这样可以通过对传统软件产品测试策略的回顾，加深你对互联网产品测试策略的认识。</p>\n</li>\n</ul>\n<h2>传统软件产品的测试策略设计</h2>\n<p>传统软件产品的测试策略，通常采用如图1所示的金字塔模型。该金字塔模型是迈克 · 科恩（Mike Cohn）提出的，在很长一段时间内都被认为是测试策略设计的最佳实践。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/54/b4/5456dcb2f274e8e04077ee1251ac4ab4.png?wh=381*366\" alt=\"\" /></p>\n<center>图1 传统软件产品的金字塔测试策略</center>\n<p><strong>第一，单元测试</strong></p>\n<p>金字塔最底部是单元测试，属于白盒测试的范畴，通常由开发工程师自己完成，由于越早发现缺陷其修复成本越低，所以传统软件产品的测试策略提倡对单元测试的高投入，单元测试这一层通常都会做得比较“厚”。</p>\n<p>另外，传统软件产品，生命周期都比较长，通常会有多个版本持续发布，为了在后期的版本升级过程中能够尽早发现并快速定位问题，每次build过程中都会多次反复执行单元测试，这也从另一个角度反映出单元测试的重要性。</p>\n<p><strong>第二，API测试</strong></p>\n<p><strong>金字塔中间部分是API测试，主要针对的是各模块暴露的接口，通常采用灰盒测试方法。灰盒测试方法是介于白盒测试和黑盒测试之间的一种测试技术，其核心思想是利用测试执行的代码覆盖率来指导测试用例的设计。</strong></p>\n<p>以API接口测试为例，首先以黑盒方式设计如何调用API的测试用例，同时在测试执行过程中统计代码覆盖率，然后根据代码覆盖率情况来补充更多、更有针对性的测试用例。</p>\n<p>总体来看，API测试用例的数量会少于单元测试，但多于上层的GUI测试。</p>\n<p><strong>第三，GUI测试</strong></p>\n<p>金字塔最上层的是GUI测试，也称为端到端（E2E，End-to-end）测试，是最接近软件真实用户使用行为的测试类型。通常是模拟真实用户使用软件的行为，即模拟用户在软件界面上的各种操作，并验证这些操作对应的结果是否正确。</p>\n<p>GUI测试的优点是，能够实际模拟真实用户的行为，直接验证软件的商业价值；缺点是执行的代价比较大，就算是采用GUI自动化测试技术，用例的维护和执行代价依然很大。所以，要尽可能地避免对GUI测试的过度依赖。</p>\n<p>另外，GUI测试的稳定性问题，是长期以来阻碍GUI测试发展的重要原因。即使你采用了很多诸如retry机制以及异常场景恢复机制等方式，GUI测试的随机失败率依旧高居不下。</p>\n<h2>互联网产品的测试策略设计</h2>\n<p>对于互联网产品来说，迈克的金字塔模型已经不再适用，我会通过GUI测试、API测试、单元测试这三个方面，来跟你聊聊互联网产品的测试策略有哪些变化，应该如何设计。</p>\n<p><strong>第一，GUI测试</strong></p>\n<p>互联网产品的上线周期，决定了GUI测试不可能大范围开展。</p>\n<ol>\n<li>\n<p>互联网产品的迭代周期，决定了留给开发GUI自动化测试用例的时间非常有限；</p>\n</li>\n<li>\n<p>互联网产品客户端界面的频繁变化，决定了开展GUI自动化测试的效率会非常低，这也是最糟糕的。<br />\n因为敏捷模式下的快速反馈，在下一个迭代（sprint）可能就需要根据反馈来做修改和调整客户端界面，那么刚开发完，甚至是还没开发完的GUI自动化测试用例就要跟着一起修改。<br />\n这种频繁地修改，对开发GUI自动化测试是非常不利的。因为，刚开发完的自动化用例只跑了一次，甚至是一次还没来得及跑就需要更新了，导致GUI自动化测试还不如手工测试的效率高。</p>\n</li>\n</ol>\n<p>由此，<strong>互联网产品的GUI测试通常采用“手工为主，自动化为辅”的测试策略，手工测试往往利用探索性测试思想，针对新开发或者新修改的界面功能进行测试，而自动化测试的关注点主要放在相对稳定且核心业务的基本功能验证上。所以，GUI的自动化测试往往只覆盖最核心且直接影响主营业务流程的E2E场景。</strong></p>\n<p>另外，从GUI测试用例的数量来看，传统软件的GUI测试属于重量级的，动不动就有上千个用例，因为传统软件的测试周期很长，测试用例可以轮流排队慢慢执行，时间长点也没关系。</p>\n<p>而互联网产品要求GUI测试是轻量级的，你见过或者听过有哪个互联网产品设计了上千个GUI测试用例吗？互联网产品的上线周期，直接决定了不允许你去执行大量的用例。</p>\n<p><strong>第二，API测试</strong></p>\n<p>你现在可能要问，既然互联网产品不适宜做重量级的GUI测试，那么怎样才能保证其质量呢？</p>\n<p>其实，对于互联网产品来说，把测试重点放在API测试上，才是最明智的选择。为什么呢？我给你总结了以下五条原因。</p>\n<ol>\n<li>\n<p><strong>API测试用例的开发与调试效率比GUI测试要高得多</strong>，而且测试用例的代码实现比较规范，通常就是准备测试数据，发起request，验证response这几个标准步骤。</p>\n</li>\n<li>\n<p><strong>API测试用例的执行稳定性远远高于GUI测试。</strong> GUI测试执行的稳定性始终是难题，即使你采用了很多技术手段（这些具体的技术手段，我会在讲解GUI测试时再详细展开），它也无法做到100%的稳定。<br />\n而API测试天生就没有执行稳定性的问题，因为测试执行过程不依赖于任何界面上的操作，而是直接调用后端API，且调用过程比较标准。</p>\n</li>\n<li>\n<p>单个API测试用例的执行时间往往要比GUI测试短很多。当有大量API测试需要执行时，API测试可以很方便地以并发的方式执行，所以可以在短时间内完成大批量API测试用例的执行。</p>\n</li>\n<li>\n<p>现在很多互联网产品采用了微服务架构，而对微服务的测试，本质上就是对不同的Web Service的测试，也就是API测试。<br />\n在微服务架构下，客户端应用的实现都是基于对后端微服务的调用，如果做好了每个后端服务的测试，你就会对应用的整体质量有充分的信心。所以，互联网产品的API测试非常重要。</p>\n</li>\n<li>\n<p>API接口的改动一般比较少，即使有改动，绝大多数情况下也需要保证后向兼容性（Backward Compatibility）。所谓后向兼容性，最基本的要求就是保证原本的API调用方式维持不变。<br />\n显然，如果调用方式没有发生变化，那么原本的API测试用例也就不需要做大的改动，这样用例的可重用性就很高，进而可以保证较高的投入产出比（ROI）。</p>\n</li>\n</ol>\n<p>可见，<strong>互联网产品的这些特性决定了，API测试可以实现良好的投入产出比，因此应该成为互联网产品的测试重点。这也就是为什么互联网产品的测试策略更像是个菱形结构的原因。</strong></p>\n<p>如图2所示就是这个菱形的测试策略，遵循“<strong>重量级API测试，轻量级GUI测试，轻量级单元测试</strong>”的原则。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/c7/cd/c72e5900d670f779c5dd6827407032cd.png?wh=556*492\" alt=\"\" /></p>\n<center>图2 互联网产品的菱形测试策略</center>\n<p><strong>第三，单元测试</strong></p>\n<p>了解了“重量级API测试”和“轻量级GUI测试”，接下来，我就跟你说说为什么是“轻量级单元测试”。</p>\n<p>从理论上讲，无论是传统软件产品还是互联网产品，单元测试都是从源头保证软件质量的重要手段，因此都非常重要。但现实是，互联网产品真正能全面开展单元测试，并严格控制代码覆盖率的企业还是凤毛麟角。</p>\n<p>但凡存在的都会有其合理性，我认为最主要的原因还是在于互联网产品的“快”，快速实现功能，快速寻求用户反馈，快速试错，快速迭代更新。</p>\n<p>在这样的模式下，互联网产品追求的是最快速的功能实现并上线，基本不会给你时间去做全面的单元测试。即使给你预留了单元测试的时间，频繁的迭代也会让单元测试处于不断重写的状态。因此，单元测试原本的价值，很难在实际操作层面得到体现。</p>\n<p><strong>那么，互联网产品真的可以不用做单元测试么？答案是否定的，只不是这里的单元测试策略要采用“分而治之”的思想。</strong></p>\n<p>互联网产品通常会分为应用层和后端服务，后端服务又可以进一步细分为应用服务和基础服务。</p>\n<p>后端基础服务和一些公共应用服务相对稳定，而且对于系统全局来说是“牵一发而动全身”，所以后端服务很有必要开展全面的单元测试；而对于变动非常频繁的客户端应用和非公用的后端应用服务，一般很少会去做单元测试。</p>\n<p>另外，对于一些核心算法和关键应用，比如银行网关接口，第三方支付集成接口等，也要做比较全面的单元测试。</p>\n<p><strong>总结来讲，互联网产品的全面单元测试只会应用在那些相对稳定和最核心的模块和服务上，而应用层或者上层业务服务很少会大规模开展单元测试。</strong></p>\n<h2>总结</h2>\n<p>传统软件通常采用金字塔模型的测试策略，而现今的互联网产品往往采用菱形模型。菱形模型有以下四个关键点：</p>\n<ul>\n<li>以中间层的API测试为重点做全面的测试。</li>\n<li>轻量级的GUI测试，只覆盖最核心直接影响主营业务流程的E2E场景。</li>\n<li>最上层的GUI测试通常利用探索式测试思维，以人工测试的方式发现尽可能多的潜在问题。</li>\n<li>单元测试采用“分而治之”的思想，只对那些相对稳定并且核心的服务和模块开展全面的单元测试，而应用层或者上层业务只会做少量的单元测试。</li>\n</ul>\n<h2>思考题</h2>\n<p>你所在的公司或者产品线，采用的是什么测试策略？看完了本篇文章，你会如何评价你们公司的测试策略呢？有哪些好的地方，又有哪些地方需要改进？</p>\n<p>欢迎你给我留言。</p>\n<p></p>\n","comments":[{"had_liked":false,"id":16937,"user_name":"Cynthia🌸","can_delete":false,"product_type":"c1","uid":1163960,"ip_address":"","ucode":"B3A48089794940","user_header":"https://static001.geekbang.org/account/avatar/00/11/c2/b8/ec758482.jpg","comment_is_top":true,"comment_ctime":1532314573,"is_pvip":false,"replies":[{"id":"5865","content":"你说的很多，单个api测试容易，但是很多api之间交互和依赖，再加上现在的微服务化，都对api测试提出了很高的挑战，后续文章会专门来讲这块，尤其会去谈基于消费者契约的api测试。关于互联网测试策略，后续我们会讲的测试数据服务和测试基础架构设计都是为了适应互联网产品测试的实践，希望可以对你有帮助。非常感谢高质量的留言👍","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1532321801,"ip_address":"","comment_id":16937,"utype":1}],"discussion_count":1,"race_medal":0,"score":"9.2233722015957996e+18","product_id":100009601,"comment_content":"关于api测试，希望后续仔细讲讲如何开展。因为具体到业务的api，数据之间流转，各种关联性还是比较强的。有些还牵扯到加密，解密等等。<br>但是对于单独一个api的开发而言，他可能根本不关心数据的流转，只知道按照需求实现代码，这样就给测试带来很多问题，和开发沟通时很难一下子找到自己想要的内容。<br>希望能聊聊您的经验。<br><br>另外就是对于互联网测试的策略总结的很好，现在看到不少书还是沿用传统的思路去说测试策略，感觉又笨重又无法迅速拿来进行实践。<br>这部分以后会深入聊么，还是点到为止了？","like_count":38,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420976,"discussion_content":"你说的很多，单个api测试容易，但是很多api之间交互和依赖，再加上现在的微服务化，都对api测试提出了很高的挑战，后续文章会专门来讲这块，尤其会去谈基于消费者契约的api测试。关于互联网测试策略，后续我们会讲的测试数据服务和测试基础架构设计都是为了适应互联网产品测试的实践，希望可以对你有帮助。非常感谢高质量的留言👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532321801,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17715,"user_name":"堂","can_delete":false,"product_type":"c1","uid":1185466,"ip_address":"","ucode":"37942B6499E7DC","user_header":"https://static001.geekbang.org/account/avatar/00/12/16/ba/cd52470d.jpg","comment_is_top":true,"comment_ctime":1532911902,"is_pvip":false,"replies":[{"id":"6237","content":"我是完全支持你的观点的，这个一定是属于自动化测试的范畴，postman+newman是很好的轻量级api测试实践，在结合jenkins可以说能够满足绝大多数的CI&#47;CD的要求。👍","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1533080739,"ip_address":"","comment_id":17715,"utype":1}],"discussion_count":1,"race_medal":0,"score":"9.2233721500568003e+18","product_id":100009601,"comment_content":"非常赞同作者对于互联网产品较于传统产品测试策略比重变化的观点。我们项目属于互联网产品，采用微服务的架构而且前后端完全分离。当时在项目初期自动化框架选型的时候，鉴于项目迭代速度快、人员短缺且大部分缺少比较好的代码能力的情况，我决定采用了postman+newman+jenkins的方式，在api层面实现了从数据初始化到覆盖系统7大流程的集成、系统回归测试。中间有尝试使用python进行脚本化的转变，但是效率却没有得到提升。原因可能是我们脚本可能不够灵活吧，但还有一个原因是我们通常使用postman进行接口的调试，调试完成后可以进行简单的参数化就把这些调整过的接口或者新增的接口纳入到回归测试脚本中，不用再进行额外的开发。而且postman流程化的脚本，可以在任意步骤打“断点”，对于我们人工进行流程调试验证以及造数据都有很大的方便性，至少这个这个项目一年多了，在主流程上通过api流程化脚本的覆盖下，还没有发生过大的问题。但是之前跟一个测试经理沟通时，他说我们的方式根本不属于自动化的范畴。但我个人还是比较坚持，毕竟自动化是为了提高效率并且需要注重投入和产出的，只要效果是好的，形式不是很重要不是吗？不知道作者能不能谈下您的观点？","like_count":27,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421242,"discussion_content":"我是完全支持你的观点的，这个一定是属于自动化测试的范畴，postman+newman是很好的轻量级api测试实践，在结合jenkins可以说能够满足绝大多数的CI/CD的要求。👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533080739,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16956,"user_name":"siru","can_delete":false,"product_type":"c1","uid":1165669,"ip_address":"","ucode":"13A03A7D16158D","user_header":"","comment_is_top":false,"comment_ctime":1532327407,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"65956836847","product_id":100009601,"comment_content":"老师有没有一些比较正规的测试文档模板分享呢？","like_count":15},{"had_liked":false,"id":101992,"user_name":"辰九","can_delete":false,"product_type":"c1","uid":1187319,"ip_address":"","ucode":"37A551604B3991","user_header":"https://static001.geekbang.org/account/avatar/00/12/1d/f7/15257efb.jpg","comment_is_top":false,"comment_ctime":1560089304,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"53099696856","product_id":100009601,"comment_content":"感觉老师偏向于api测试、但是面向用户最终还是gui层、后端api没问题不代表gui层没有问题，gui层的测试除了覆盖功能逻辑以外、交互逻辑也很容易出问题、这块也需要重点注意","like_count":12,"discussions":[{"author":{"id":1951999,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/c8/ff/bd602ee9.jpg","nickname":"Luke","note":"","ucode":"72202F5FB5A896","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392055,"discussion_content":"但是现实就是gui自动化不好做，投入高，产出低，尤其不适合那种创业公司的探索型产品","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1630807331,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16914,"user_name":"Geek_84a77e","can_delete":false,"product_type":"c1","uid":1167077,"ip_address":"","ucode":"D1A9B5A0CB871B","user_header":"https://static001.geekbang.org/account/avatar/00/11/ce/e5/66f38361.jpg","comment_is_top":false,"comment_ctime":1532306396,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27302110172","product_id":100009601,"comment_content":"1、测试执行集群，不理解这个概念，是把我们写好的自动化代码放到服务器上执行，多个服务器组成的集群？希望老师能具体说明，包括如何实现主从<br>2、本篇主要想讲互联网产品适合api test 那可否针对一个接口教我们如何设计全面的测试用例？就像之前一篇文章针对登陆设计用例一样。如果后期会有专题讨论，那在这篇文章提及一下也无妨","like_count":6},{"had_liked":false,"id":66853,"user_name":"sylan215","can_delete":false,"product_type":"c1","uid":1019029,"ip_address":"","ucode":"5A2CF31BC69F40","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/95/4544d905.jpg","comment_is_top":false,"comment_ctime":1550029587,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18729898771","product_id":100009601,"comment_content":"嗯嗯，其实之前，我一直把金字塔模型作为目标，但是回头看看实际情况，我们确实是一直还在 GUI 自动化上挣扎。<br><br>看到茹老师的菱形测试策略，感觉如获至宝。<br><br>一方面，GUI 自动化可以下沉，往接口测试靠拢，UI 操作的底层实际也是接口的调用关系，所以是可行的；<br><br>另一方面，单元测试可以加大颗粒度，这样也变成了接口测试，单元测试的颗粒度要求真的太细，对于快速迭代的互联网产品来说，需要有一套完备的机制来保证，而这个在目前的国内环境是办不到的，如果加大颗粒度到接口测试，应该也是可行的；<br><br>但是，目前很多公司的现状是，开发代码的分层并不明显，导致接口测试需要大量的 mock 测试代码，同时也增加了实现的难度，这是我们目前面临的比较大的问题。<br><br>以上，欢迎关注公众号「sylan215」一起沟通交流。","like_count":4},{"had_liked":false,"id":30745,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1538987587,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18718856771","product_id":100009601,"comment_content":"1，发布那么快，如何快速修复测试发现的bug？<br>2，基于GUI的自动化测试那么少，Selenium 为什么现在那么普及，热么热门。<br>3，你这API测试指接口测试吧？比如用Python 的requests 类作的接口测试。<br>4，微信小程序，微服务有没有好的自动化测试工具？<br>5，在＂快＂的互联网时代，探索式测试周期多少比较何适？<br>6，前端功能有没有自动化测试工具？","like_count":4},{"had_liked":false,"id":110786,"user_name":"shane","can_delete":false,"product_type":"c1","uid":1593075,"ip_address":"","ucode":"3BC1F8A0105CB3","user_header":"https://static001.geekbang.org/account/avatar/00/18/4e/f3/02345198.jpg","comment_is_top":false,"comment_ctime":1562333654,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14447235542","product_id":100009601,"comment_content":"我上一家公司相对做的比较好，新功能，新产品都是微服务架构，也是重点在api自动化，接口百分百覆盖，单元测试也都有做，gui自动化只有冒烟程度","like_count":3},{"had_liked":false,"id":22572,"user_name":"Laura张远园","can_delete":false,"product_type":"c1","uid":1189604,"ip_address":"","ucode":"1130136FDCDC79","user_header":"https://static001.geekbang.org/account/avatar/00/12/26/e4/fe8e5163.jpg","comment_is_top":false,"comment_ctime":1535798763,"is_pvip":false,"replies":[{"id":"8798","content":"感谢你的大力支持，其实很多知识都是来自于项目的实践，并没有大而全的教科书可以告诉我们所有的东西，其实这也体现出了测试工程师必须要具有的我快熟学习能力。另外你说的信令测试，这个严格来讲不属于api测试，而是属于集成测试的范畴。","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1536795676,"ip_address":"","comment_id":22572,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14420700651","product_id":100009601,"comment_content":"工业机器人、敏捷团队，属于敏捷下的传统测试。<br>我们测试人员的KPI指标是测试自动化率，所以gui测试也基本全部自动化，一旦用户界面变动测试人员就要加班改测试代码。<br>我们测试人员写单元测试的目的是用单元测试覆盖测试需求，减轻gui覆盖测试需求的代码量和维护成本，而在前面的文章中已经说明单元测试应当覆盖代码保证代码质量、而不是覆盖测试需求。<br>在之前公司做通信应用层测试时，在信令交互中，会为了测试某一个模块功能，模拟其它模块向该模块发布消息，以便检测该模块的回复消息，是不是属于api测试?<br>52讲12篇拜读下来，感叹于老师测试知识的广博。想请教老师:一个测试人员应当如何进行积累以达到测试知识的体系化与深度?似乎找不到测试体系化的教科书，我们可以有哪些途径进行积累。<br>向老师请教，谢谢老师","like_count":4,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423167,"discussion_content":"感谢你的大力支持，其实很多知识都是来自于项目的实践，并没有大而全的教科书可以告诉我们所有的东西，其实这也体现出了测试工程师必须要具有的我快熟学习能力。另外你说的信令测试，这个严格来讲不属于api测试，而是属于集成测试的范畴。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536795676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":18466,"user_name":"小小光芒","can_delete":false,"product_type":"c1","uid":1153185,"ip_address":"","ucode":"6C5499046BD29D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/ajNVdqHZLLDeGrMY3icloJ5hKK49NaHfZTeEJJicBh5GNEibRjw2PsYpvUylEmxxXh475ANZicwDtBvRXl3yv1Z9Og/132","comment_is_top":false,"comment_ctime":1533348410,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14418250298","product_id":100009601,"comment_content":"自动化测试用例最重要的作用就是回归测试。开发人员开发新功能导致break旧功能，如果没有自动化回归，很难发现问题。实际上手动回归成本大，全回归很少做。这个问题有什么成功的实践方案解决呢","like_count":3,"discussions":[{"author":{"id":1164020,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoTnt9SES5rMbU9ZlNGZiacXvxcSPTn4SOLibribk9xmiaKf05WibA2KaNVgFGddSicgHYAMEVnTBMecYcw/132","nickname":"小叮当csh","note":"","ucode":"B91CF4879A06E7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584487,"discussion_content":"这个问题主要还是在于前期沟通，更多的是认知对齐的问题，比如在概要设计、详细设计阶段，会基于需求作出哪些改动，如何改动，都是研发要考虑的点，可能会影响到哪些功能和模块。测试再基于以上作出详细的改动点的测试设计。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660873463,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16979,"user_name":"Brandon","can_delete":false,"product_type":"c1","uid":1107960,"ip_address":"","ucode":"290620468D0003","user_header":"https://static001.geekbang.org/account/avatar/00/10/e7/f8/f55b759b.jpg","comment_is_top":false,"comment_ctime":1532347762,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14417249650","product_id":100009601,"comment_content":"api中的如果业务代码使用异步处理，那么测试用例会很尴尬 同步返回的数据基本没用  除了轮询还有其他方法吗？","like_count":3,"discussions":[{"author":{"id":2110450,"avatar":"","nickname":"李鸣","note":"","ucode":"30304D56B58DFE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":313042,"discussion_content":"异步一般用轮询，从实际业务来说即使是异步来说60秒-100s的轮询已经足够长了，再长拿不到就要考虑性能或缺陷了。注意轮循一般要配合超时来做。还有个方法是删除同步，这样做需要将调用行为的行为隔离在一个地方，而不是在不同的线程中发生，而是在测试过程中发生在与测试相同的线程中，这个方法需要在设计阶段就设计好，测试时作为一个开关打开。至于长异步，比如数据库操作，建议增加人工校验，或者精心设计测试数据","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1602921590,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":132714,"user_name":"shuwei","can_delete":false,"product_type":"c1","uid":1271448,"ip_address":"","ucode":"60F9CEF0983620","user_header":"https://static001.geekbang.org/account/avatar/00/13/66/98/95433f67.jpg","comment_is_top":false,"comment_ctime":1568200722,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5863168018","product_id":100009601,"comment_content":"我是一个开发人员，看了老师的这11讲，每篇都有得到东西，也在思考自己公司测试人员的定位，谢谢分享~","like_count":1},{"had_liked":false,"id":97547,"user_name":"泡芙小妞","can_delete":false,"product_type":"c1","uid":1491305,"ip_address":"","ucode":"49FD84EB7F56A8","user_header":"https://static001.geekbang.org/account/avatar/00/16/c1/69/4534e19a.jpg","comment_is_top":false,"comment_ctime":1558691080,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5853658376","product_id":100009601,"comment_content":"我们公司是典型的互联网行业，但是我们目前只做了GUI测试，并且GUI测试都是偏手工的，自动化很少或者几乎没有，测试组只有3个人，要面对4个端，每次都是GUI测试完成，版本就上线了，API测试根本没有做，单元测试是由开发来做的 ","like_count":2},{"had_liked":false,"id":63911,"user_name":"wanj","can_delete":false,"product_type":"c1","uid":1259549,"ip_address":"","ucode":"BE9ECC67ABC004","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLnYfSUc8hJ3oLfa39qkNiaXNibs3VyAbgT7ZXasZXp89fRL7YBakIZdNNEE7kClOjN2KpBUuGpacfQ/132","comment_is_top":false,"comment_ctime":1548590974,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5843558270","product_id":100009601,"comment_content":"老师讲测试策略仅仅是针对单元测试，接口测试，前端测试的比重在讲，但是测试策略包含很多内容，能不能再具体点展开讲一讲，比如设计测试策略需要考虑哪些方面，每个方面怎么设计等等","like_count":1},{"had_liked":false,"id":17153,"user_name":"乐少","can_delete":false,"product_type":"c1","uid":1029794,"ip_address":"","ucode":"C16BD02325BF03","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b6/a2/c7ec1355.jpg","comment_is_top":false,"comment_ctime":1532475869,"is_pvip":false,"replies":[{"id":"5992","content":"异步的api测试是比较麻烦的，我会在后面讲api的时候详细来谈。","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1532532208,"ip_address":"","comment_id":17153,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5827443165","product_id":100009601,"comment_content":"目前公司的api业务都是异步处理的,想听听老师又那些方案分享一下的","like_count":1,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421059,"discussion_content":"异步的api测试是比较麻烦的，我会在后面讲api的时候详细来谈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532532208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17011,"user_name":"Leo`2018","can_delete":false,"product_type":"c1","uid":1163289,"ip_address":"","ucode":"698813486A003D","user_header":"https://static001.geekbang.org/account/avatar/00/11/c0/19/6e84275d.jpg","comment_is_top":false,"comment_ctime":1532390184,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5827357480","product_id":100009601,"comment_content":"之前在互联网行业的测试更多的是迭代功能的全覆盖测试，其他的主要还是api的测试+探索测试。测试资源的限制，ui自动化也只是做了些主流程的业务场景回归(高频使用的功能)。讲真，这些做完，本次迭代的时间也差不多了，互联网产品的迭代质量跟开发的编码习惯及基础有关，有些开发会让你想提把刀盯着他改。","like_count":1},{"had_liked":false,"id":16949,"user_name":"赵明月","can_delete":false,"product_type":"c1","uid":1168980,"ip_address":"","ucode":"01740873C03CD2","user_header":"https://static001.geekbang.org/account/avatar/00/11/d6/54/3127cab2.jpg","comment_is_top":false,"comment_ctime":1532323261,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5827290557","product_id":100009601,"comment_content":"关于API测试，目前接触的比较多的都是根据开放出来的接口文档去发起黑盒测试，一些内部的模块与模块之间的API测试，并没有开放出这种接口可以发起request，关于内部接口的测试，或者内部各个服务之间如生产者和消费者之间服务(dubbo)之间调用如何开展API测试?","like_count":1},{"had_liked":false,"id":356004,"user_name":"付晓杰","can_delete":false,"product_type":"c1","uid":1869584,"ip_address":"上海","ucode":"66634A3401A176","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/FGeCDgpXdhsXseIGF3GCzZibDJlOfO4KDqPJkMra2e0TJj3QVQk4t1oEd1BuQPtYOeavFyYxicd5fTZ33tIbPOZQ/132","comment_is_top":false,"comment_ctime":1661913230,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661913230","product_id":100009601,"comment_content":"传统软件测试：单元测试&gt;API测试&gt;GUI测试<br>互联网产品测试：API测试&gt;单元测试和GUI测试","like_count":1},{"had_liked":false,"id":323792,"user_name":"宋琦","can_delete":false,"product_type":"c1","uid":1004672,"ip_address":"","ucode":"FE8961BF810FED","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/80/d1d9b493.jpg","comment_is_top":false,"comment_ctime":1638164560,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638164560","product_id":100009601,"comment_content":"虽然说现在的测试大趋势如文中所说的“重量级API测试，GUI测试，轻量级的单元测试”，但是只要你的产品具有GUI的话，就绝不能因其“轻量级”就去轻视GUI方面的测试，否则到时候你会拿到那种乍一看还可以，真正使用起来各种弱智UI问题的产品。","like_count":0},{"had_liked":false,"id":302549,"user_name":"Geek_3496fd","can_delete":false,"product_type":"c1","uid":2269109,"ip_address":"","ucode":"5C3C11CB5B39CF","user_header":"","comment_is_top":false,"comment_ctime":1626258744,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626258744","product_id":100009601,"comment_content":"当前我们组用的是手动功能测试+自动化GUI测试","like_count":0},{"had_liked":false,"id":298392,"user_name":"失","can_delete":false,"product_type":"c1","uid":1352909,"ip_address":"","ucode":"5F3C79F67AD32E","user_header":"https://static001.geekbang.org/account/avatar/00/14/a4/cd/e411c919.jpg","comment_is_top":false,"comment_ctime":1624074984,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1624074984","product_id":100009601,"comment_content":"老师，一直没有搞懂传统产品和互联网产品的定义，都不知道我现在做的产品属于哪个范畴，公司目前也比较混乱，说是用敏捷流程，但是感觉又不对，老师可以说明下这两个产品的定义吗","like_count":0},{"had_liked":false,"id":291033,"user_name":"辰陌","can_delete":false,"product_type":"c1","uid":1245043,"ip_address":"","ucode":"961C874D36C958","user_header":"https://static001.geekbang.org/account/avatar/00/12/ff/73/8c64ed7f.jpg","comment_is_top":false,"comment_ctime":1619956022,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619956022","product_id":100009601,"comment_content":"我们公司还是传统的测试模型了。毕竟一个新的项目从立项到测试，也有几个月的时间了。","like_count":0},{"had_liked":false,"id":248013,"user_name":"你好极客时间","can_delete":false,"product_type":"c1","uid":2113412,"ip_address":"","ucode":"EC1AE9FD105234","user_header":"https://static001.geekbang.org/account/avatar/00/20/3f/84/47f7b661.jpg","comment_is_top":false,"comment_ctime":1599981654,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1599981654","product_id":100009601,"comment_content":"目前我正处在这样一个困境 我在一家传统盒子产品的厂商做了快10年测试 现在想做互联网测试 就非常头疼我需要的技能 这篇文章让我了解了一些互联网测试和传统测试的区别 期待可以看到更多这样的文章 老师写的真的都是干货 每篇文章我都能记很多笔记","like_count":0},{"had_liked":false,"id":234131,"user_name":"捷后愚生","can_delete":false,"product_type":"c1","uid":1170483,"ip_address":"","ucode":"A1F935D39C8488","user_header":"https://static001.geekbang.org/account/avatar/00/11/dc/33/a68c6b26.jpg","comment_is_top":false,"comment_ctime":1594602500,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594602500","product_id":100009601,"comment_content":"现在所在的项目，是传统的行业，实际情况是重GUI测试，API和单元测试做得很少，如果采取菱形测试策略会更好。","like_count":0},{"had_liked":false,"id":194233,"user_name":"Past","can_delete":false,"product_type":"c1","uid":1852206,"ip_address":"","ucode":"AE1C44D49A83E3","user_header":"https://static001.geekbang.org/account/avatar/00/1c/43/2e/2a5d0f3e.jpg","comment_is_top":false,"comment_ctime":1585039854,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585039854","product_id":100009601,"comment_content":"结合互联网产品的特性，确实需要看重API的接口知识及交互性，在公司业务测试中，不是后台没有数据就是前段接口有问题，总是UI界面点点点，来回折腾走流程，还要看数据是否正确。<br>后续加强学习接口知识，谢谢老师的讲解。","like_count":0},{"had_liked":false,"id":174941,"user_name":"Jiminy","can_delete":false,"product_type":"c1","uid":1144906,"ip_address":"","ucode":"79527D1DC6636B","user_header":"https://static001.geekbang.org/account/avatar/00/11/78/4a/4f8da65e.jpg","comment_is_top":false,"comment_ctime":1580468953,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1580468953","product_id":100009601,"comment_content":"对于移动端sdk测试，老师觉得应该怎么测试更加合适？目前的做法主要是自己编写app调用sdk接口，并根据业务对不同场景进行手工测试","like_count":0},{"had_liked":false,"id":142557,"user_name":"Gz","can_delete":false,"product_type":"c1","uid":1057466,"ip_address":"","ucode":"78897C7FC7611A","user_header":"https://static001.geekbang.org/account/avatar/00/10/22/ba/7b73c9e1.jpg","comment_is_top":false,"comment_ctime":1571395045,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571395045","product_id":100009601,"comment_content":"实话 我觉得 最有效率的 测试办法 就是让开发保证 解耦性 这样 互相干扰的东西就少了 每次 回归测试的内容就会十分固定 不论是 客户端还是 后端都能很好的保证质量🤦‍♀️","like_count":0},{"had_liked":false,"id":129490,"user_name":"你吱道的太多了biu~","can_delete":false,"product_type":"c1","uid":1434004,"ip_address":"","ucode":"4958130306EC28","user_header":"https://static001.geekbang.org/account/avatar/00/15/e1/94/ce66d892.jpg","comment_is_top":false,"comment_ctime":1567137825,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567137825","product_id":100009601,"comment_content":"老师，手游测试中手工测试真的也要轻量吗，感觉游戏是非常复杂和重交互的，目前还是无法逃脱手工逻辑验证，游戏测试虽然是软件测试的一种，但是实际测试工作还是有不少区别的，关于游戏测试的资料也不怎么多，看到一些软件测试的经验和观点难免有些迷茫，我们公司前端和接口自动化用于回归保证稳定，新的版本或系统出来还是要人工分析需求和执行用例(就是点点点)多一些","like_count":0},{"had_liked":false,"id":117007,"user_name":"LOVE园","can_delete":false,"product_type":"c1","uid":1148941,"ip_address":"","ucode":"C203260212C078","user_header":"https://static001.geekbang.org/account/avatar/00/11/88/0d/1672749e.jpg","comment_is_top":false,"comment_ctime":1563954076,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1563954076","product_id":100009601,"comment_content":"感觉还是难度很高，在现阶段互联网发展公司都是怼业务线，压根不管测试策略如何是好","like_count":0},{"had_liked":false,"id":106418,"user_name":"Ana","can_delete":false,"product_type":"c1","uid":1526019,"ip_address":"","ucode":"41C841FE46CB2B","user_header":"https://static001.geekbang.org/account/avatar/00/17/49/03/7c9b0809.jpg","comment_is_top":false,"comment_ctime":1561295029,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561295029","product_id":100009601,"comment_content":"我们公司一个月一版本 应该属于传统软件产品。公司对软件产品质量要求不高，基本没有接口测试的要求，可能是开发自测。测试就做系统手工功能测试，对系统架构和接口定义等都不了解。后来学会用charles抓包，有了解一些接口，觉得很有趣。觉得纯粹黑盒测试好傻，觉得要了解系统设计才能发现更多问题","like_count":0},{"had_liked":false,"id":85911,"user_name":"Geek__c1668bdf82c6","can_delete":false,"product_type":"c1","uid":1460894,"ip_address":"","ucode":"D73CDA5B844AB6","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLoTzR54OKKhIhPsUZ0N84oViaMf7xia9IickJ0zsicpVMza9gdtegNmN3Bw5EJictRACFcubTp9xpJmRQ/132","comment_is_top":false,"comment_ctime":1555291472,"is_pvip":false,"replies":[{"id":"31242","content":"这是目前很多企业的思路，但是还是建议做清凉级的gui测试","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1555472214,"ip_address":"","comment_id":85911,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1555291472","product_id":100009601,"comment_content":"我们项目就是属于开发周期短，版本迭代快的那种，目前我们一周一发版，以前对各功能做了全面的ui自动化测试，后来产品对页面做了重构，ui就全部更换，自动化就停止了，现在主要放在了api自动化测试上，相对稳定，不需要经常改","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446864,"discussion_content":"这是目前很多企业的思路，但是还是建议做清凉级的gui测试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555472214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78494,"user_name":"口水窝","can_delete":false,"product_type":"c1","uid":1004838,"ip_address":"","ucode":"6028B5AA10D8A1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/26/154f9578.jpg","comment_is_top":false,"comment_ctime":1553159957,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553159957","product_id":100009601,"comment_content":"现在处于手工测试比较多，API测试只有几个版本去做了，但是我现在想的是如何把API测试和集成思维集合在一起，这样才有意义。<br>GUI测试，后面又空余时间做比较稳定的模块，每一种技术，深入，连点带面，这样称为一个体系，才会有价值！","like_count":0},{"had_liked":false,"id":74700,"user_name":"yudi5158","can_delete":false,"product_type":"c1","uid":1433363,"ip_address":"","ucode":"9593AFF868463B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/vVHHYQw1kesqK5euoZ52vibmmhWSXdvBqSwed7FfHUx7ULESOnwaq9iaPWPq0KQZpPaHSj6UcLebfUqXDBfGyPuA/132","comment_is_top":false,"comment_ctime":1552283150,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552283150","product_id":100009601,"comment_content":"除了自动化测试金字塔模型，我这边还参考了质量模型以及结合开发流程。 之前也有写过一篇分享文章： https:&#47;&#47;www.jianshu.com&#47;p&#47;40ecad5f942e  敏捷团队中的测试策略","like_count":0},{"had_liked":false,"id":58503,"user_name":"宁江孤影","can_delete":false,"product_type":"c1","uid":1309850,"ip_address":"","ucode":"70C34A0F56336B","user_header":"https://static001.geekbang.org/account/avatar/00/13/fc/9a/124b986d.jpg","comment_is_top":false,"comment_ctime":1547095397,"is_pvip":false,"replies":[{"id":"26128","content":"使用python也是需要使用工具来管理用例的","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1551528124,"ip_address":"","comment_id":58503,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547095397","product_id":100009601,"comment_content":"敏捷开发模式下，测试时间严重不足，目前所在的项目组并没有要求做自动化测试。自己利用空余时间用RF+jenkins把测试用例跑起来，想问下老师目前比较流行的python在用例维护上会比工具来的方便吗？","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436098,"discussion_content":"使用python也是需要使用工具来管理用例的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551528124,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48124,"user_name":"年轻人的瞎折腾^.","can_delete":false,"product_type":"c1","uid":1266462,"ip_address":"","ucode":"179997C9622609","user_header":"https://static001.geekbang.org/account/avatar/00/13/53/1e/7d098b33.jpg","comment_is_top":false,"comment_ctime":1544364580,"is_pvip":false,"replies":[{"id":"17349","content":"可以基于代码覆盖率给出参考，但是对于没有在代码中处理但是应该要处理的部分，通过代码覆盖率依然无能无力，还是需要从需求的边界情况出发来设计用例","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1544488695,"ip_address":"","comment_id":48124,"utype":1}],"discussion_count":2,"race_medal":1,"score":"1544364580","product_id":100009601,"comment_content":"单个API测试，我们用postman+思维导图+后期接口自动化输出。其实也会有场景侧漏的情况，请问是要如何尽可能避免场景侧漏的情况呢，是需要看开发的代码改动点么，但是看开发改动点不会有点麻烦？还有什么好方法么？","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432037,"discussion_content":"可以基于代码覆盖率给出参考，但是对于没有在代码中处理但是应该要处理的部分，通过代码覆盖率依然无能无力，还是需要从需求的边界情况出发来设计用例","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544488695,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1796445,"avatar":"","nickname":"goodlan","note":"","ucode":"C7B14A6DB82EDA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":130672,"discussion_content":"思维导图是整理测试大纲覆盖测试需求的吗？后期接口自动化输出是做什么的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578772723,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47175,"user_name":"张哈哈","can_delete":false,"product_type":"c1","uid":1314854,"ip_address":"","ucode":"CA32A96E02E019","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epib8yjEIes0Jh1hyiawaib3fUAzDpfBeyHFLlRaB6gW26Icv29eXqMjBEyBa0yFZN9MeibC0g3pvPDNg/132","comment_is_top":false,"comment_ctime":1544067636,"is_pvip":false,"replies":[{"id":"17353","content":"现在很多大型互联网公司都把测试重点放在了后端api上，当然这还要取决于你的系统架构是怎么设计的","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1544488855,"ip_address":"","comment_id":47175,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544067636","product_id":100009601,"comment_content":"  您好，这是我的第一次留言，阅读了老师的文章，每一篇都或多或少的给了我启发，谢谢老师。<br>  自我从事测试以来，我的测试重点都是GUI测试上，而API测试只是简单的测一下。特别是从事APP测试以来，感觉很少问题会出现在API开发上，大部分问题还是产生在移动端的开发上<br>我想问一下：在测试时间有限的情况下，如果我把重点放在API测试上，是否会不合理呢？","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431688,"discussion_content":"现在很多大型互联网公司都把测试重点放在了后端api上，当然这还要取决于你的系统架构是怎么设计的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544488855,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40217,"user_name":"【粉粉】","can_delete":false,"product_type":"c1","uid":1168848,"ip_address":"","ucode":"3E0F16527A8D1A","user_header":"https://static001.geekbang.org/account/avatar/00/11/d5/d0/413898d2.jpg","comment_is_top":false,"comment_ctime":1542555828,"is_pvip":false,"replies":[{"id":"15932","content":"主要还是研发的cost问题，同时上层变化的几率要比较大，roi不高","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1543469950,"ip_address":"","comment_id":40217,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542555828","product_id":100009601,"comment_content":"我属于传统测试类，想了解一下，互联网中单元测试，只对那些相对稳定并且核心的服务和模块开展，而应用层或者上层业务只会做少量的单元测试，这么做考虑的主要因素是什么呢","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429427,"discussion_content":"主要还是研发的cost问题，同时上层变化的几率要比较大，roi不高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543469950,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40216,"user_name":"【粉粉】","can_delete":false,"product_type":"c1","uid":1168848,"ip_address":"","ucode":"3E0F16527A8D1A","user_header":"https://static001.geekbang.org/account/avatar/00/11/d5/d0/413898d2.jpg","comment_is_top":false,"comment_ctime":1542555664,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542555664","product_id":100009601,"comment_content":"我属于传统测试类型的，想了解一下，互联网单元测试只对那些相对稳定并且核心的服务和模块开，而应用层或者上层业务只会做少量的单元测试。<br>这么做的主要考虑因素是什么呢","like_count":0},{"had_liked":false,"id":34741,"user_name":"Lily","can_delete":false,"product_type":"c1","uid":1171981,"ip_address":"","ucode":"6D93AD9913E8FC","user_header":"https://static001.geekbang.org/account/avatar/00/11/e2/0d/4be9e023.jpg","comment_is_top":false,"comment_ctime":1540278194,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540278194","product_id":100009601,"comment_content":"老师我很想知道测试策略和质量策略的区别，谢谢","like_count":0},{"had_liked":false,"id":22569,"user_name":"Laura张远园","can_delete":false,"product_type":"c1","uid":1189604,"ip_address":"","ucode":"1130136FDCDC79","user_header":"https://static001.geekbang.org/account/avatar/00/12/26/e4/fe8e5163.jpg","comment_is_top":false,"comment_ctime":1535797423,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1535797423","product_id":100009601,"comment_content":"工业机器人，敏捷团队，属于传统软件测试。我们追求测试用例的自动化率，所以gui的测试也要自动化，每次界面更新测试都得加班改代码;测试写单元测试的目的是，将原来gui覆盖的测试需求，转移到单元测试，以减轻测试人员的代码负荷，而在前文中老师已指出单元测试的目的是代码质量而不是需求。<br>api没有做过，但我联想到之前通信行业应用层模块测试，用预备的数据来模拟模块信息输入，检查相应的模块信息输出，这也应该属于api测试？<br>几节课追下来，为老师广博的测试知识所叹服，我们测试人员应当如何积累测试知识达到这样的体量和体系呢？测试没有体系化的教科书，我们应该如何不断完善我们的测试体系知识。<br>向老师求教，谢谢老师了。","like_count":0},{"had_liked":false,"id":19468,"user_name":"楚耳","can_delete":false,"product_type":"c1","uid":1068208,"ip_address":"","ucode":"7661633F3297C6","user_header":"https://static001.geekbang.org/account/avatar/00/10/4c/b0/f22017b0.jpg","comment_is_top":false,"comment_ctime":1533859972,"is_pvip":false,"replies":[{"id":"6783","content":"这个金字塔更多描述的还是功能性的验证，类似安全测试，性能测试并没有直观的反映在这个模型中","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1533896067,"ip_address":"","comment_id":19468,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1533859972","product_id":100009601,"comment_content":"老师，服务端的性能测试在金字塔什么位置呢","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421857,"discussion_content":"这个金字塔更多描述的还是功能性的验证，类似安全测试，性能测试并没有直观的反映在这个模型中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533896067,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19439,"user_name":"嫦","can_delete":false,"product_type":"c1","uid":1169307,"ip_address":"","ucode":"9B853652846562","user_header":"https://static001.geekbang.org/account/avatar/00/11/d7/9b/2c0006c5.jpg","comment_is_top":false,"comment_ctime":1533828432,"is_pvip":false,"replies":[{"id":"6785","content":"这个后面专门有一篇文章会讲，期待一下：）","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1533896125,"ip_address":"","comment_id":19439,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1533828432","product_id":100009601,"comment_content":"老师，什么时候讲解下探索性测试？最好举些例子详细介绍，谢谢老师！","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421843,"discussion_content":"这个后面专门有一篇文章会讲，期待一下：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533896125,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19294,"user_name":"楚耳","can_delete":false,"product_type":"c1","uid":1068208,"ip_address":"","ucode":"7661633F3297C6","user_header":"https://static001.geekbang.org/account/avatar/00/10/4c/b0/f22017b0.jpg","comment_is_top":false,"comment_ctime":1533771262,"is_pvip":false,"replies":[{"id":"6704","content":"可以的，后面有专门的文章会带着你一步一步建立起自己的测试执行集群","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1533788580,"ip_address":"","comment_id":19294,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1533771262","product_id":100009601,"comment_content":"老师能详细讲下测试执行集群的搭建吗","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421770,"discussion_content":"可以的，后面有专门的文章会带着你一步一步建立起自己的测试执行集群","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533788580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17646,"user_name":"Nic辉少","can_delete":false,"product_type":"c1","uid":1163674,"ip_address":"","ucode":"1680DD8B12C48D","user_header":"https://static001.geekbang.org/account/avatar/00/11/c1/9a/40b3a0e5.jpg","comment_is_top":false,"comment_ctime":1532832988,"is_pvip":false,"replies":[{"id":"6242","content":"👍","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1533081191,"ip_address":"","comment_id":17646,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1532832988","product_id":100009601,"comment_content":"打卡，👍","like_count":1,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421213,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533081191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17300,"user_name":"涅槃Ls","can_delete":false,"product_type":"c1","uid":1163943,"ip_address":"","ucode":"39EDBFB303D668","user_header":"https://static001.geekbang.org/account/avatar/00/11/c2/a7/c4de1048.jpg","comment_is_top":false,"comment_ctime":1532563361,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532563361","product_id":100009601,"comment_content":"打卡11","like_count":0},{"had_liked":false,"id":17254,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1532525098,"is_pvip":false,"replies":[{"id":"5988","content":"很棒👍","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1532531856,"ip_address":"","comment_id":17254,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1532525098","product_id":100009601,"comment_content":"接口功能测试、接口性能测试、功能测试，后面我要加上探索性测试😄","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421097,"discussion_content":"很棒👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532531856,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17152,"user_name":"乐少","can_delete":false,"product_type":"c1","uid":1029794,"ip_address":"","ucode":"C16BD02325BF03","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b6/a2/c7ec1355.jpg","comment_is_top":false,"comment_ctime":1532475676,"is_pvip":false,"replies":[{"id":"6096","content":"这是个典型的问题，后续讲api测试的时候会专门来讲","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1532738615,"ip_address":"","comment_id":17152,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1532475676","product_id":100009601,"comment_content":"同样遇到api代码的异步处理,想听听老师是如何处理这个自动化需求的","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421058,"discussion_content":"这是个典型的问题，后续讲api测试的时候会专门来讲","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532738615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17121,"user_name":"Jecy-8","can_delete":false,"product_type":"c1","uid":1016276,"ip_address":"","ucode":"2AE1575B9E63A6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/81/d4/e92abeb4.jpg","comment_is_top":false,"comment_ctime":1532443012,"is_pvip":false,"replies":[{"id":"6103","content":"感谢你的认同👍","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1532739172,"ip_address":"","comment_id":17121,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1532443012","product_id":100009601,"comment_content":"老师分析得很有道理，我之前接触的基本都是API，微服务的自动化测试，GUI接触比较少，所以以前总觉得测试能做成自动化的就尽量自动化，后面发现确实如老师所说，不能一味追求自动化比例，还要考虑实际情况，自动化成本太高使用率又低的，还不如手动检验。期待老师后面的讲解","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421044,"discussion_content":"感谢你的认同👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532739172,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16928,"user_name":"在路上","can_delete":false,"product_type":"c1","uid":1143372,"ip_address":"","ucode":"335960F683C23C","user_header":"https://static001.geekbang.org/account/avatar/00/11/72/4c/4d636a23.jpg","comment_is_top":false,"comment_ctime":1532309203,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532309203","product_id":100009601,"comment_content":"运营商传统行业，自动化功能测试，可能理解还不深，感觉主要是以GUI测试为主，单元测试和API测试没接触过，这种测试是不是只是在互联网测试才独有呢？","like_count":0}]}