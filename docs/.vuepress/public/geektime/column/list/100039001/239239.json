{"id":239239,"title":"87 | 开源实战五（上）：MyBatis如何权衡易用性、性能和灵活性？","content":"<p>上几节课我们讲到了Spring框架，剖析了背后蕴含的一些通用设计思想，以及用到的十几种设计模式。从今天开始，我们再剖析另外一个Java项目开发中经常用到的框架：MyBatis。因为内容比较多，同样，我们也分三节课来讲解。</p><ul>\n<li>第一节课，我们分析MyBatis如何权衡代码的易用性、性能和灵活性。</li>\n<li>第二节课，我们学习如何利用职责链与代理模式实现MyBatis Plugin。</li>\n<li>第三节课，我们总结罗列一下MyBatis框架中用到的十几种设计模式。</li>\n</ul><p>话不多说，让我们正式开始今天的学习吧！</p><h2>Mybatis和ORM框架介绍</h2><p>熟悉Java的同学应该知道，MyBatis是一个ORM（Object Relational Mapping，对象-关系映射）框架。ORM框架主要是根据类和数据库表之间的映射关系，帮助程序员自动实现对象与数据库中数据之间的互相转化。说得更具体点就是，ORM负责将程序中的对象存储到数据库中、将数据库中的数据转化为程序中的对象。实际上，Java中的ORM框架有很多，除了刚刚提到的MyBatis之外，还有Hibernate、TopLink等。</p><p>在剖析Spring框架的时候，我们讲到，如果用一句话来总结框架作用的话，那就是简化开发。MyBatis框架也不例外。它简化的是数据库方面的开发。那MyBatis是如何简化数据库开发的呢？我们结合<a href=\"https://time.geekbang.org/column/article/212802\">第59讲</a>中的JdbcTemplate的例子来说明一下。</p><!-- [[[read_end]]] --><p>在第59讲中，我们讲到，Java提供了JDBC类库来封装不同类型的数据库操作。不过，直接使用JDBC来进行数据库编程，还是有点麻烦的。于是，Spring提供了JdbcTemplate，对JDBC进一步封装，来进一步简化数据库编程。</p><p>使用JdbcTemplate进行数据库编程，我们只需要编写跟业务相关的代码（比如，SQL语句、数据库中数据与对象之间的互相转化的代码），其他流程性质的代码（比如，加载驱动、创建数据库连接、创建statement、关闭连接、关闭statement等）都封装在了JdbcTemplate类中，不需要我们重复编写。</p><p>当时，为了展示使用JdbcTemplate是如何简化数据库编程的，我们还举了一个查询数据库中用户信息的例子。还是同样这个例子，我再来看下，使用MyBatis该如何实现，是不是比使用JdbcTemplate更加简单。</p><p>因为MyBatis依赖JDBC驱动，所以，在项目中使用MyBatis，除了需要引入MyBatis框架本身（mybatis.jar）之外，还需要引入JDBC驱动（比如，访问MySQL的JDBC驱动实现类库mysql-connector-java.jar）。将两个jar包引入项目之后，我们就可以开始编程了。使用MyBatis来访问数据库中用户信息的代码如下所示：</p><pre><code>// 1. 定义UserDO\npublic class UserDo {\n  private long id;\n  private String name;\n  private String telephone;\n  // 省略setter/getter方法\n}\n\n// 2. 定义访问接口\npublic interface UserMapper {\n  public UserDo selectById(long id);\n}\n\n// 3. 定义映射关系：UserMapper.xml\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;!DOCTYPE mapper PUBLIC &quot;-//mybatis.org/DTD Mapper 3.0//EN&quot;\n        &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot; &gt;\n&lt;mapper namespace=&quot;cn.xzg.cd.a87.repo.mapper.UserMapper&quot;&gt;\n    &lt;select id=&quot;selectById&quot; resultType=&quot;cn.xzg.cd.a87.repo.UserDo&quot;&gt;\n        select * from user where id=#{id}\n    &lt;/select&gt;\n&lt;/mapper&gt;\n\n// 4. 全局配置文件: mybatis.xml\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;\n&lt;!DOCTYPE configuration\n        PUBLIC &quot;-//mybatis.org//DTD Config 3.0//EN&quot;\n        &quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;&gt;\n&lt;configuration&gt;\n    &lt;environments default=&quot;dev&quot;&gt;\n        &lt;environment id=&quot;dev&quot;&gt;\n            &lt;transactionManager type=&quot;JDBC&quot;&gt;&lt;/transactionManager&gt;\n            &lt;dataSource type=&quot;POOLED&quot;&gt;\n                &lt;property name=&quot;driver&quot; value=&quot;com.mysql.jdbc.Driver&quot; /&gt;\n                &lt;property name=&quot;url&quot; value=&quot;jdbc:mysql://localhost:3306/test?useUnicode=true&amp;characterEncoding=UTF-8&quot; /&gt;\n                &lt;property name=&quot;username&quot; value=&quot;root&quot; /&gt;\n                &lt;property name=&quot;password&quot; value=&quot;...&quot; /&gt;\n            &lt;/dataSource&gt;\n        &lt;/environment&gt;\n    &lt;/environments&gt;\n    &lt;mappers&gt;\n        &lt;mapper resource=&quot;mapper/UserMapper.xml&quot;/&gt;\n    &lt;/mappers&gt;\n&lt;/configuration&gt;\n</code></pre><p>需要注意的是，在UserMapper.xml配置文件中，我们只定义了接口和SQL语句之间的映射关系，并没有显式地定义类（UserDo）字段与数据库表（user）字段之间的映射关系。实际上，这就体现了“约定优于配置”的设计原则。类字段与数据库表字段之间使用了默认映射关系：类字段跟数据库表中拼写相同的字段一一映射。当然，如果没办法做到一一映射，我们也可以自定义它们之间的映射关系。</p><p>有了上面的代码和配置，我们就可以像下面这样来访问数据库中的用户信息了。</p><pre><code>public class MyBatisDemo {\n  public static void main(String[] args) throws IOException {\n    Reader reader = Resources.getResourceAsReader(&quot;mybatis.xml&quot;);\n    SqlSessionFactory sessionFactory = new SqlSessionFactoryBuilder().build(reader);\n    SqlSession session = sessionFactory.openSession();\n    UserMapper userMapper = session.getMapper(UserMapper.class);\n    UserDo userDo = userMapper.selectById(8);\n    //...\n  }\n}\n</code></pre><p>从代码中，我们可以看出，相对于使用JdbcTemplate的实现方式，使用MyBatis的实现方式更加灵活。在使用JdbcTemplate的实现方式中，对象与数据库中数据之间的转化代码、SQL语句，是硬编码在业务代码中的。而在使用MyBatis的实现方式中，类字段与数据库字段之间的映射关系、接口与SQL之间的映射关系，是写在XML配置文件中的，是跟代码相分离的，这样会更加灵活、清晰，维护起来更加方便。</p><h2>如何平衡易用性、性能和灵活性？</h2><p>刚刚我们对MyBatis框架做了简单介绍，接下来，我们再对比一下另外两个框架：JdbcTemplate和Hibernate。通过对比我们来看，MyBatis是如何权衡代码的易用性、性能和灵活性的。</p><p>我们先来看JdbcTemplate。相对于MyBatis来说，JdbcTemplate更加轻量级。因为它对JDBC只做了很简单的封装，所以性能损耗比较少。相对于其他两个框架来说，它的性能最好。但是，它的缺点也比较明显，那就是SQL与代码耦合在一起，而且不具备ORM的功能，需要自己编写代码，解析对象跟数据库中的数据之间的映射关系。所以，在易用性上它不及其他两个框架。</p><p>我们再来看Hibernate。相对于MyBatis来说，Hibernate更加重量级。Hibernate提供了更加高级的映射功能，能够根据业务需求自动生成SQL语句。我们不需要像使用MyBatis那样自己编写SQL。因此，有的时候，我们也把MyBatis称作半自动化的ORM框架，把Hibernate称作全自动化的ORM框架。不过，虽然自动生成SQL简化了开发，但是毕竟是自动生成的，没有针对性的优化。在性能方面，这样得到的SQL可能没有程序员编写得好。同时，这样也丧失了程序员自己编写SQL的灵活性。</p><p>实际上，不管用哪种实现方式，从数据库中取出数据并且转化成对象，这个过程涉及的代码逻辑基本是一致的。不同实现方式的区别，只不过是哪部分代码逻辑放到了哪里。有的框架提供的功能比较强大，大部分代码逻辑都由框架来完成，程序员只需要实现很小的一部分代码就可以了。这样框架的易用性就更好些。但是，框架集成的功能越多，为了处理逻辑的通用性，就会引入更多额外的处理代码。比起针对具体问题具体编程，这样性能损耗就相对大一些。</p><p>所以，粗略地讲，有的时候，框架的易用性和性能成对立关系。追求易用性，那性能就差一些。相反，追求性能，易用性就差一些。除此之外，使用起来越简单，那灵活性就越差。这就好比我们用的照相机。傻瓜相机按下快门就能拍照，但没有复杂的单反灵活。</p><p>实际上，JdbcTemplate、MyBatis、Hibernate这几个框架也体现了刚刚说的这个规律。</p><p>JdbcTemplate提供的功能最简单，易用性最差，性能损耗最少，用它编程性能最好。Hibernate提供的功能最完善，易用性最好，但相对来说性能损耗就最高了。MyBatis介于两者中间，在易用性、性能、灵活性三个方面做到了权衡。它支撑程序员自己编写SQL，能够延续程序员对SQL知识的积累。相对于完全黑盒子的Hibernate，很多程序员反倒是更加喜欢MyBatis这种半透明的框架。这也提醒我们，过度封装，提供过于简化的开发方式，也会丧失开发的灵活性。</p><h2>重点回顾</h2><p>好了，今天的内容到此就讲完了。我们一块来总结回顾一下，你需要重点掌握的内容。</p><p>如果你熟悉Java和MyBatis，那你应该掌握今天讲到JDBC、JdbcTemplate、MyBatis、Hibernate之间的区别。JDBC是Java访问数据库的开发规范，提供了一套抽象的统一的开发接口，隐藏不同数据库的访问细节。</p><p>JdbcTemplate、MyBatis、Hibernate都是对JDBC的二次封装，为的是进一步简化数据库开发。其中，JdbcTemplate不能算得上是ORM框架，因为还需要程序员自己编程来实现对象和数据库数据之间的互相转化。相对于Hibernate这种连SQL都不用程序员自己写的全自动ORM框架，MyBatis算是一种半自动化的ORM框架。</p><p>如果你不熟悉Java和MyBatis，作为背景介绍，那你简单了解一下MyBatis和ORM就可以了。不过，在你熟悉的语言中，应该也有相应的ORM框架，你也可以对比着去分析一下。</p><p>今天的内容除了起到对MyBatis做背景介绍之外，我们还学习了代码的易用性、性能、灵活性之间的关系。一般来讲，提供的高级功能越多，那性能损耗就会越大些；用起来越简单，提供越简化的开发方式，那灵活性也就相对越低。</p><h2>课堂讨论</h2><p>在你的项目开发中，有没有用过哪些框架，能够切实地提高开发效率，减少不必要的体力劳动？</p><p>欢迎留言和我分享你的想法。如果有收获，也欢迎你把这篇文章分享给你的朋友。</p>","neighbors":{"left":{"article_title":"86 | 开源实战四（下）：总结Spring框架用到的11种设计模式","id":238418},"right":{"article_title":"88 | 开源实战五（中）：如何利用职责链与代理模式实现MyBatis Plugin？","id":240147}},"comments":[{"had_liked":false,"id":219879,"user_name":"，","can_delete":false,"product_type":"c1","uid":1701867,"ip_address":"","ucode":"A5543C8DFEB198","user_header":"https://static001.geekbang.org/account/avatar/00/19/f7/eb/e7127bb8.jpg","comment_is_top":false,"comment_ctime":1590113477,"is_pvip":true,"discussion_count":2,"race_medal":0,"score":"267878085829","product_id":100039001,"comment_content":"工作中做过一些c++的东西,做起来相当复杂,每引入一个第三方类库,都要自己去github上找,找到再clone下来,打包,才能引入,模板编程面向对象面向过程基于对象函数式,眼花缭乱,指针引用const傻傻分不清楚,cmake打包异常,只有求助大佬才能维持生活<br>做java就像回家一样,做开发有spring全家桶,打包部署有maven,在csdn比家里感觉好多了,里面各个是人才,说话又好听,只需要CTRL C V就能完成工作,我超喜欢里面的!","like_count":63,"discussions":[{"author":{"id":1982711,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/40/f7/e62bbc62.jpg","nickname":"zh","note":"","ucode":"98772B1B6C6E06","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348881,"discussion_content":"C++偏底层，但又支持各种编程范式：面向过程、面向对象、函数式、泛型编程、元编程，据说可以学一辈子，哈哈哈哈哈","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1612766571,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1320487,"avatar":"https://static001.geekbang.org/account/avatar/00/14/26/27/eba94899.jpg","nickname":"罗杰","note":"","ucode":"96BAFAA147341F","race_medal":2,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573591,"discussion_content":"依靠 CSDN 编程只能是个码农。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653531255,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":219840,"user_name":"Demon.Lee","can_delete":false,"product_type":"c1","uid":1052859,"ip_address":"","ucode":"7F0E5493A8E345","user_header":"https://static001.geekbang.org/account/avatar/00/10/10/bb/f1061601.jpg","comment_is_top":false,"comment_ctime":1590109771,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"113259259467","product_id":100039001,"comment_content":"易用性：Hibernate &gt; MyBatis &gt; JdbcTemplate<br>性能：JdbcTemplate &gt; MyBatis &gt; Hibernate<br>灵活性：MyBatis &gt; JdbcTemplate &gt; Hibernate","like_count":27},{"had_liked":false,"id":219816,"user_name":"寒溪","can_delete":false,"product_type":"c1","uid":1001970,"ip_address":"","ucode":"67B9F1A1C15A20","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/f2/25cfa472.jpg","comment_is_top":false,"comment_ctime":1590106590,"is_pvip":false,"discussion_count":1,"race_medal":1,"score":"104669321694","product_id":100039001,"comment_content":"netty是个反例，兼顾易用性和性能。","like_count":24,"discussions":[{"author":{"id":1598564,"avatar":"https://static001.geekbang.org/account/avatar/00/18/64/64/865c1eb4.jpg","nickname":"劳码识途","note":"","ucode":"7AEF4D9407F097","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310523,"discussion_content":"这是因为原生的NIO太难用了，netty在此基础上做封装，性能自然不会太差。建议你去了解下tio，那用起来才是真的简单，只不过不如netty流行，而且不是完全开源的","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1601889703,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":220102,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1590157755,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"70309634491","product_id":100039001,"comment_content":"mybatis系列<br>1、mybatis plus 作用如其名，mybatis增强功能封装好了一些crud的方法<br>2、mybatis-generator自动生成器，自动生成实体、mapper、Mapper.xml等<br>3、mybatis分页插件PageHelper，无需关心分页的问题","like_count":17,"discussions":[{"author":{"id":1239462,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e9/a6/69907ec1.jpg","nickname":"李伟","note":"","ucode":"F0EF60EB250B20","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580010,"discussion_content":"我们也在用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657803222,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":223222,"user_name":"L🚲🐱","can_delete":false,"product_type":"c1","uid":1577856,"ip_address":"","ucode":"08A012739614DE","user_header":"https://static001.geekbang.org/account/avatar/00/18/13/80/2c9da1b1.jpg","comment_is_top":false,"comment_ctime":1591023238,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"40245728902","product_id":100039001,"comment_content":"Mybatis Plus 可以说是 大大的提高了 Mybatis 的使用效率","like_count":10,"discussions":[{"author":{"id":1133194,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4a/8a/c1069412.jpg","nickname":"makermade","note":"","ucode":"03386B90CB8F20","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557867,"discussion_content":"generator就够了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648005916,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":219814,"user_name":"君哥聊技术","can_delete":false,"product_type":"c1","uid":1325816,"ip_address":"","ucode":"2C9A22BCE4C79E","user_header":"https://static001.geekbang.org/account/avatar/00/14/3a/f8/c1a939e7.jpg","comment_is_top":false,"comment_ctime":1590106104,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27359909880","product_id":100039001,"comment_content":"比如做限流的时候可以直接使用guava中的限流器","like_count":6},{"had_liked":false,"id":219784,"user_name":"test","can_delete":false,"product_type":"c1","uid":1065849,"ip_address":"","ucode":"9A4973E591DD12","user_header":"https://static001.geekbang.org/account/avatar/00/10/43/79/18073134.jpg","comment_is_top":false,"comment_ctime":1590080299,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"23064916779","product_id":100039001,"comment_content":"SpringCloud全家桶","like_count":5,"discussions":[{"author":{"id":1258251,"avatar":"https://static001.geekbang.org/account/avatar/00/13/33/0b/fd18c8ab.jpg","nickname":"大胖子呀、","note":"","ucode":"4BADF8096254BE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":271164,"discussion_content":"大哥你是真滴早","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590103149,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1065849,"avatar":"https://static001.geekbang.org/account/avatar/00/10/43/79/18073134.jpg","nickname":"test","note":"","ucode":"9A4973E591DD12","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1258251,"avatar":"https://static001.geekbang.org/account/avatar/00/13/33/0b/fd18c8ab.jpg","nickname":"大胖子呀、","note":"","ucode":"4BADF8096254BE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":271202,"discussion_content":"害行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590106745,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":271164,"ip_address":""},"score":271202,"extra":""}]}]},{"had_liked":false,"id":300415,"user_name":"Amon Tin","can_delete":false,"product_type":"c1","uid":2618193,"ip_address":"","ucode":"25391BEEB6A719","user_header":"https://static001.geekbang.org/account/avatar/00/27/f3/51/c8eb2d0c.jpg","comment_is_top":false,"comment_ctime":1625147329,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"18805016513","product_id":100039001,"comment_content":"jooq，试用了一年多了，非常好用，把SQL语法换成了select().from().where().and()这类的Java语法，同时也支持直接写SQL，orm的定义和映射关系也可以根据表结构自动生成，性能可匹敌mybatis，易用性不比hibernate差，可读性比上面两个都强，实乃新一代orm框架之王","like_count":5},{"had_liked":false,"id":219804,"user_name":"子豪sirius","can_delete":false,"product_type":"c1","uid":1117023,"ip_address":"","ucode":"E8D08D2D33E785","user_header":"https://static001.geekbang.org/account/avatar/00/11/0b/5f/2cc4060c.jpg","comment_is_top":false,"comment_ctime":1590104126,"is_pvip":true,"discussion_count":7,"race_medal":0,"score":"18769973310","product_id":100039001,"comment_content":"mybatis可以让开发人员自己写SQL，相比hibernate给了更多控制权。不过在实际开发中有个问题，有些开发人员会写很复杂的SQL，美其名曰是性能更好，但实际性能提升多少，不清楚；反而因为SQL写得巨长巨复杂，带来了阅读困难、调试和查错不便等等问题。明明这部分代码用Java写，业务逻辑是更清晰的～","like_count":5,"discussions":[{"author":{"id":1738326,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/86/56/509535da.jpg","nickname":"守拙","note":"","ucode":"F594B2DA3F6D4F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":271442,"discussion_content":"能用sql查询就绝对不要上升到业务查询. 至于sql写的复杂可读性差性能差是程序员水平的问题, 不该用业务弥补.","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1590139062,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1104850,"avatar":"https://static001.geekbang.org/account/avatar/00/10/db/d2/e29f8834.jpg","nickname":"lidashuang","note":"","ucode":"560ABE8032760E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1738326,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/86/56/509535da.jpg","nickname":"守拙","note":"","ucode":"F594B2DA3F6D4F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374443,"discussion_content":"这就错了，sql和ORM哪个易读还用争论吗","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1621176639,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":271442,"ip_address":""},"score":374443,"extra":""},{"author":{"id":1133194,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4a/8a/c1069412.jpg","nickname":"makermade","note":"","ucode":"03386B90CB8F20","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1738326,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/86/56/509535da.jpg","nickname":"守拙","note":"","ucode":"F594B2DA3F6D4F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557868,"discussion_content":"互联网应用不提倡写复杂sql; 应用层无状态很容易做到水平扩展，而复杂sql是很难优化的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648006027,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":271442,"ip_address":""},"score":557868,"extra":""}]},{"author":{"id":1046302,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/3XbCueYYVWTiclv8T5tFpwiblOxLphvSZxL4ujMdqVMibZnOiaFK2C5nKRGv407iaAsrI0CDICYVQJtiaITzkjfjbvrQ/132","nickname":"有铭","note":"","ucode":"2C7CB36CA5C04C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":271231,"discussion_content":"并不是所有sql查询都能用代码取代，实际上有很多是不能","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1590109173,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1295268,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibcRNslcyp7dwIR3TIwvloCibMd7Ew2TB3MU0wISFXEolyuHRtfIriagm6PMX5zQHicmc78BrBcxA6vQ5qnTPCev9A/132","nickname":"jiangjing","note":"","ucode":"D45001E5FB4D6F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":274836,"discussion_content":"除非真有必要，建议使用orm框架。sql语句增加了一层维护成本","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1590625297,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2006342,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/9d/46/ce8f7a26.jpg","nickname":"I LOVE DM","note":"","ucode":"6EA297D5A0E4C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1295268,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibcRNslcyp7dwIR3TIwvloCibMd7Ew2TB3MU0wISFXEolyuHRtfIriagm6PMX5zQHicmc78BrBcxA6vQ5qnTPCev9A/132","nickname":"jiangjing","note":"","ucode":"D45001E5FB4D6F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375207,"discussion_content":"赞同","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621514690,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":274836,"ip_address":""},"score":375207,"extra":""}]},{"author":{"id":1116471,"avatar":"https://static001.geekbang.org/account/avatar/00/11/09/37/997cd243.jpg","nickname":"zero","note":"","ucode":"EE02BDCB299EBF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533547,"discussion_content":"切勿面向SQL编程。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637899375,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":220644,"user_name":"javaadu","can_delete":false,"product_type":"c1","uid":1000519,"ip_address":"","ucode":"8C0B140F1C8992","user_header":"https://static001.geekbang.org/account/avatar/00/0f/44/47/3ddb94d0.jpg","comment_is_top":false,"comment_ctime":1590302785,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"14475204673","product_id":100039001,"comment_content":"目前用过的最好用的框架还是Spring Boot","like_count":3},{"had_liked":false,"id":239911,"user_name":"iamjohnnyzhuang","can_delete":false,"product_type":"c1","uid":1015327,"ip_address":"","ucode":"E694C1828907F6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7e/1f/b1d458a9.jpg","comment_is_top":false,"comment_ctime":1596690539,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10186625131","product_id":100039001,"comment_content":"golang 用的gorm框架。感觉做的算是比较好，又有ORM的特性可以直接做对象转换，又开放了SQL编写，比较灵活。但是有一点，就是sql都编写在代码里和jdbctemplate一致，不是特别好维护。","like_count":2},{"had_liked":false,"id":222179,"user_name":"辣么大","can_delete":false,"product_type":"c1","uid":1396951,"ip_address":"","ucode":"AB308B6DCA0108","user_header":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","comment_is_top":false,"comment_ctime":1590713744,"is_pvip":true,"discussion_count":3,"race_medal":0,"score":"10180648336","product_id":100039001,"comment_content":"使用MyBatis，之前项目组写sql规范中要求不让写 select * 这种sql，说是影响性能。<br><br>每个DO都有很多字段，每次写sql写的要吐，没办法自己写了个程序自动生成简单的DO查询sql。","like_count":2,"discussions":[{"author":{"id":2076251,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/ae/5b/4bd42286.jpg","nickname":"宋计洋","note":"","ucode":"9A34E8F71C6CBD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":564917,"discussion_content":"MyBait Generator挺好用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650354417,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1744092,"avatar":"","nickname":"古杨","note":"","ucode":"8F52AA86B589C7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555455,"discussion_content":"idea就可以自动生成","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646911656,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1014665,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7b/89/34f2cbcc.jpg","nickname":"杨宇","note":"","ucode":"EB74DF6E269F03","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352888,"discussion_content":"如果是XML，要查询的字段应该先声明为块，再include到select后面","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614904136,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":220162,"user_name":"一名小学生","can_delete":false,"product_type":"c1","uid":1137292,"ip_address":"","ucode":"5C73082E6B6370","user_header":"https://static001.geekbang.org/account/avatar/00/11/5a/8c/1fec5fa2.jpg","comment_is_top":false,"comment_ctime":1590194984,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10180129576","product_id":100039001,"comment_content":"打卡~<br>MyBatis 介于JDBC Templete 和 MyBatis中间，在易用性、性能、灵活性三个方面做到了权衡。","like_count":2},{"had_liked":false,"id":219944,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1590122700,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10180057292","product_id":100039001,"comment_content":"ruby on rails","like_count":2,"discussions":[{"author":{"id":1104850,"avatar":"https://static001.geekbang.org/account/avatar/00/10/db/d2/e29f8834.jpg","nickname":"lidashuang","note":"","ucode":"560ABE8032760E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374445,"discussion_content":"哈哈、rails好用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621176695,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325953,"user_name":"我是曾经那个少年","can_delete":false,"product_type":"c1","uid":1015189,"ip_address":"","ucode":"9F02F7FF147D14","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/95/dd73022c.jpg","comment_is_top":false,"comment_ctime":1639276254,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5934243550","product_id":100039001,"comment_content":"1:  Spring Boot技术栈，集成外部框架方便。<br>2：Spring Cloud Alibaba 微服务的技术组件基本够用。<br>3：hutool工具类方便好用。该有的都有。<br>4：Mybatis-Plus 避免了最简单的增删改查的实现，以及数据库主键自增，数据字段填充，多数据源的支持。<br>","like_count":2},{"had_liked":false,"id":250637,"user_name":"杨逸林","can_delete":false,"product_type":"c1","uid":1167233,"ip_address":"","ucode":"4BF3CF3E2F1AC7","user_header":"https://static001.geekbang.org/account/avatar/00/11/cf/81/96f656ef.jpg","comment_is_top":false,"comment_ctime":1601180779,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"5896148075","product_id":100039001,"comment_content":"学习 JPA 和 Hibernate 的成本很高，一般人根本不知道什么 HQL，还有 hbm 文件，以及 OneToMany，ManyToMany，ManyToOne，用起来其实很麻烦。而 Mybatis 只要你会写 SQL 就行了，根本不要你了解那些，虽然设计数据库表的时候会用。","like_count":1},{"had_liked":false,"id":223971,"user_name":"皮特尔","can_delete":false,"product_type":"c1","uid":1017161,"ip_address":"","ucode":"313862C91DD325","user_header":"https://static001.geekbang.org/account/avatar/00/0f/85/49/585c69c4.jpg","comment_is_top":false,"comment_ctime":1591247289,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"5886214585","product_id":100039001,"comment_content":"移动端开发：<br>Android有ORM框架greenDAO；<br>iOS的FMDB、YYModel不能算ORM框架，不过Apple官方的CoreData应该算是一个","like_count":1},{"had_liked":false,"id":223458,"user_name":"夕林语","can_delete":false,"product_type":"c1","uid":1264180,"ip_address":"","ucode":"B57681D0C73E1B","user_header":"https://static001.geekbang.org/account/avatar/00/13/4a/34/1faac99b.jpg","comment_is_top":false,"comment_ctime":1591094780,"is_pvip":false,"discussion_count":0,"race_medal":2,"score":"5886062076","product_id":100039001,"comment_content":"在项目开发当中用到lombok可以减少重复的geter seter方法，虽然有点违背面向对象的特性；还有一些工具类库的使用，比如google guava，一些集合类和字符串的操作大大简化","like_count":1},{"had_liked":false,"id":220157,"user_name":"xianhai","can_delete":false,"product_type":"c1","uid":1073505,"ip_address":"","ucode":"906578663CEB3E","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/61/677e8f92.jpg","comment_is_top":false,"comment_ctime":1590193305,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5885160601","product_id":100039001,"comment_content":"jetty，容易集成","like_count":1},{"had_liked":false,"id":220031,"user_name":"守拙","can_delete":false,"product_type":"c1","uid":1738326,"ip_address":"","ucode":"F594B2DA3F6D4F","user_header":"https://static001.geekbang.org/account/avatar/00/1a/86/56/509535da.jpg","comment_is_top":false,"comment_ctime":1590138947,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5885106243","product_id":100039001,"comment_content":"对于&quot;减少不必要的体力劳动&quot;这一限定条件来说, Gson + Idea插件GsonFormatter当仁不让. 无法想象没有它们该怎么写业务代码.","like_count":1},{"had_liked":false,"id":219809,"user_name":"小晏子","can_delete":false,"product_type":"c1","uid":1132337,"ip_address":"","ucode":"3AAA6FB5ACB6AE","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/31/f35367c8.jpg","comment_is_top":false,"comment_ctime":1590104801,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"5885072097","product_id":100039001,"comment_content":"rails框架功能也异常强大，全自动ORM，不用写sql语句，所有东西框架帮你搞定，快速搞出产品原型的利器！","like_count":1},{"had_liked":false,"id":347246,"user_name":"木易杨","can_delete":false,"product_type":"c1","uid":1128629,"ip_address":"","ucode":"F46DD5AFD29DC0","user_header":"https://static001.geekbang.org/account/avatar/00/11/38/b5/fe066d0c.jpg","comment_is_top":false,"comment_ctime":1653871402,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653871402","product_id":100039001,"comment_content":"这篇文章只能算是几个框架之间的对比吧？并没有真正讲解Mybatis的核心","like_count":0},{"had_liked":false,"id":343922,"user_name":"恬毅","can_delete":false,"product_type":"c1","uid":1015240,"ip_address":"","ucode":"914ED16F3BE714","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/c8/e4727683.jpg","comment_is_top":false,"comment_ctime":1651120076,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651120076","product_id":100039001,"comment_content":"mybatis-generator 极大的减少的写代码量","like_count":0},{"had_liked":false,"id":286912,"user_name":"M","can_delete":false,"product_type":"c1","uid":1810576,"ip_address":"","ucode":"06F26E1D62E9C9","user_header":"https://wx.qlogo.cn/mmopen/vi_32/eLNeJNaEkwGSK7xvtamMibVLMy2MpbIqX3iaEhT7JtSnTRMRTwZ2j4HX7WAapiashbiaBDVriaXKSP0Oeic6ZAEVEXag/132","comment_is_top":false,"comment_ctime":1617677170,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617677170","product_id":100039001,"comment_content":"越通用的框架，性能越差，灵活性也越差","like_count":0}]}