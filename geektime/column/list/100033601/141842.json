{"id":141842,"title":"24 | 分层和合成机制：为什么CSS动画比JavaScript高效？","content":"<p>在<a href=\"https://time.geekbang.org/column/article/140703\">上一篇文章</a>中我们分析了CSS和JavaScript是如何影响到DOM树生成的，今天我们继续沿着渲染流水线向下分析，来聊聊DOM树之后所发生的事情。</p><p>在前面<a href=\"https://time.geekbang.org/column/article/118205\">《05 | 渲染流程（上）：HTML、CSS和JavaScript文件，是如何变成页面的？》</a>文章中，我们介绍过DOM树生成之后，还要经历布局、分层、绘制、合成、显示等阶段后才能显示出漂亮的页面。</p><p>本文我们主要讲解渲染引擎的分层和合成机制，因为分层和合成机制代表了浏览器最为先进的合成技术，Chrome团队为了做到这一点，做了大量的优化工作。了解其工作原理，有助于拓宽你的视野，而且也有助于你更加深刻地理解CSS动画和JavaScript底层工作机制。</p><h2>显示器是怎么显示图像的</h2><p>每个显示器都有固定的刷新频率，通常是60HZ，也就是每秒更新60张图片，更新的图片都来自于显卡中一个叫<strong>前缓冲区</strong>的地方，显示器所做的任务很简单，就是每秒固定读取60次前缓冲区中的图像，并将读取的图像显示到显示器上。</p><p><strong>那么这里显卡做什么呢？</strong></p><p>显卡的职责就是合成新的图像，并将图像保存到<strong>后缓冲区</strong>中，一旦显卡把合成的图像写到后缓冲区，系统就会让后缓冲区和前缓冲区互换，这样就能保证显示器能读取到最新显卡合成的图像。通常情况下，显卡的更新频率和显示器的刷新频率是一致的。但有时候，在一些复杂的场景中，显卡处理一张图片的速度会变慢，这样就会造成视觉上的卡顿。</p><!-- [[[read_end]]] --><h2>帧 VS 帧率</h2><p>了解了显示器是怎么显示图像的之后，下面我们再来明确下帧和帧率的概念，因为这是后续一切分析的基础。</p><p>当你通过滚动条滚动页面，或者通过手势缩放页面时，屏幕上就会产生动画的效果。之所以你能感觉到有动画的效果，是因为在滚动或者缩放操作时，渲染引擎会通过渲染流水线生成新的图片，并发送到显卡的后缓冲区。</p><p>大多数设备屏幕的更新频率是60次/秒，这也就意味着正常情况下要实现流畅的动画效果，渲染引擎需要每秒更新60张图片到显卡的后缓冲区。</p><p>我们把渲染流水线生成的每一副图片称为一帧，把渲染流水线每秒更新了多少帧称为帧率，比如滚动过程中1秒更新了60帧，那么帧率就是60Hz（或者60FPS）。</p><p>由于用户很容易观察到那些丢失的帧，如果在一次动画过程中，渲染引擎生成某些帧的时间过久，那么用户就会感受到卡顿，这会给用户造成非常不好的印象。</p><p>要解决卡顿问题，就要解决每帧生成时间过久的问题，为此Chrome对浏览器渲染方式做了大量的工作，其中最卓有成效的策略就是引入了分层和合成机制。分层和合成机制代表了当今最先进的渲染技术，所以接下来我们就来分析下什么是合成和渲染技术。</p><h2>如何生成一帧图像</h2><p>不过在开始之前，我们还需要聊一聊渲染引擎是如何生成一帧图像的。这需要回顾下我们前面<a href=\"https://time.geekbang.org/column/article/118826\">《06 | 渲染流程（下）：HTML、CSS和JavaScript文件，是如何变成页面的？》</a>介绍的渲染流水线。关于其中任意一帧的生成方式，有<strong>重排、重绘</strong>和<strong>合成</strong>三种方式。</p><p>这三种方式的渲染路径是不同的，<strong>通常渲染路径越长，生成图像花费的时间就越多</strong>。比如<strong>重排</strong>，它需要重新根据CSSOM和DOM来计算布局树，这样生成一幅图片时，会让整个渲染流水线的每个阶段都执行一遍，如果布局复杂的话，就很难保证渲染的效率了。而<strong>重绘</strong>因为没有了重新布局的阶段，操作效率稍微高点，但是依然需要重新计算绘制信息，并触发绘制操作之后的一系列操作。</p><p>相较于重排和重绘，<strong>合成</strong>操作的路径就显得非常短了，并不需要触发布局和绘制两个阶段，如果采用了GPU，那么合成的效率会非常高。</p><p>所以，关于渲染引擎生成一帧图像的几种方式，按照效率我们推荐合成方式优先，若实在不能满足需求，那么就再退后一步使用重绘或者重排的方式。</p><p>本文我们的焦点在合成上，所以接下来我们就来深入分析下Chrome浏览器是怎么实现合成操作的。Chrome中的合成技术，可以用三个词来概括总结：<strong>分层、分块</strong>和<strong>合成</strong>。</p><h2>分层和合成</h2><p>通常页面的组成是非常复杂的，有的页面里要实现一些复杂的动画效果，比如点击菜单时弹出菜单的动画特效，滚动鼠标滚轮时页面滚动的动画效果，当然还有一些炫酷的3D动画特效。如果没有采用分层机制，从布局树直接生成目标图片的话，那么每次页面有很小的变化时，都会触发重排或者重绘机制，这种“牵一发而动全身”的绘制策略会严重影响页面的渲染效率。</p><p><strong>为了提升每帧的渲染效率，Chrome引入了分层和合成的机制。那该怎么来理解分层和合成机制呢？</strong></p><p>你可以把一张网页想象成是由很多个图片叠加在一起的，每个图片就对应一个图层，Chrome合成器最终将这些图层合成了用于显示页面的图片。如果你熟悉PhotoShop的话，就能很好地理解这个过程了，PhotoShop中一个项目是由很多图层构成的，每个图层都可以是一张单独图片，可以设置透明度、边框阴影，可以旋转或者设置图层的上下位置，将这些图层叠加在一起后，就能呈现出最终的图片了。</p><p>在这个过程中，将素材分解为多个图层的操作就称为<strong>分层</strong>，最后将这些图层合并到一起的操作就称为<strong>合成</strong>。所以，分层和合成通常是一起使用的。</p><p>考虑到一个页面被划分为两个层，当进行到下一帧的渲染时，上面的一帧可能需要实现某些变换，如平移、旋转、缩放、阴影或者Alpha渐变，这时候合成器只需要将两个层进行相应的变化操作就可以了，显卡处理这些操作驾轻就熟，所以这个合成过程时间非常短。</p><p><strong>理解了为什么要引入合成和分层机制，下面我们再来看看Chrome是怎么实现分层和合成机制的。</strong></p><p>在Chrome的渲染流水线中，<strong>分层体现在生成布局树之后</strong>，渲染引擎会根据布局树的特点将其转换为层树（Layer Tree），层树是渲染流水线后续流程的基础结构。</p><p>层树中的每个节点都对应着一个图层，下一步的绘制阶段就依赖于层树中的节点。在<a href=\"https://time.geekbang.org/column/article/118826\">《06 | 渲染流程（下）：HTML、CSS和JavaScript文件，是如何变成页面的？》</a>中我们介绍过，绘制阶段其实并不是真正地绘出图片，而是将绘制指令组合成一个列表，比如一个图层要设置的背景为黑色，并且还要在中间画一个圆形，那么绘制过程会生成<code>|Paint BackGroundColor:Black | Paint Circle|</code>这样的绘制指令列表，绘制过程就完成了。</p><p>有了绘制列表之后，就需要进入光栅化阶段了，光栅化就是按照绘制列表中的指令生成图片。每一个图层都对应一张图片，合成线程有了这些图片之后，会将这些图片合成为“一张”图片，并最终将生成的图片发送到后缓冲区。这就是一个大致的分层、合成流程。</p><p><strong>需要重点关注的是，合成操作是在合成线程上完成的，这也就意味着在执行合成操作时，是不会影响到主线程执行的</strong>。这就是为什么经常主线程卡住了，但是CSS动画依然能执行的原因。</p><h2>分块</h2><p>如果说分层是从宏观上提升了渲染效率，那么分块则是从微观层面提升了渲染效率。</p><p>通常情况下，页面的内容都要比屏幕大得多，显示一个页面时，如果等待所有的图层都生成完毕，再进行合成的话，会产生一些不必要的开销，也会让合成图片的时间变得更久。</p><p>因此，合成线程会将每个图层分割为大小固定的图块，然后优先绘制靠近视口的图块，这样就可以大大加速页面的显示速度。不过有时候， 即使只绘制那些优先级最高的图块，也要耗费不少的时间，因为涉及到一个很关键的因素——<strong>纹理上传</strong>，这是因为从计算机内存上传到GPU内存的操作会比较慢。</p><p>为了解决这个问题，Chrome又采取了一个策略：<strong>在首次合成图块的时候使用一个低分辨率的图片</strong>。比如可以是正常分辨率的一半，分辨率减少一半，纹理就减少了四分之三。在首次显示页面内容的时候，将这个低分辨率的图片显示出来，然后合成器继续绘制正常比例的网页内容，当正常比例的网页内容绘制完成后，再替换掉当前显示的低分辨率内容。这种方式尽管会让用户在开始时看到的是低分辨率的内容，但是也比用户在开始时什么都看不到要好。</p><h2>如何利用分层技术优化代码</h2><p>通过上面的介绍，相信你已经理解了渲染引擎是怎么将布局树转换为漂亮图片的，理解其中原理之后，你就可以利用分层和合成技术来优化代码了。</p><p>在写Web应用的时候，你可能经常需要对某个元素做几何形状变换、透明度变换或者一些缩放操作，如果使用JavaScript来写这些效果，会牵涉到整个渲染流水线，所以JavaScript的绘制效率会非常低下。</p><p>这时你可以使用 will-change来告诉渲染引擎你会对该元素做一些特效变换，CSS代码如下：</p><pre><code>.box {\nwill-change: transform, opacity;\n}\n</code></pre><p>这段代码就是提前告诉渲染引擎box元素将要做几何变换和透明度变换操作，这时候渲染引擎会将该元素单独实现一帧，等这些变换发生时，渲染引擎会通过合成线程直接去处理变换，这些变换并没有涉及到主线程，这样就大大提升了渲染的效率。<strong>这也是CSS动画比JavaScript动画高效的原因</strong>。</p><p>所以，如果涉及到一些可以使用合成线程来处理CSS特效或者动画的情况，就尽量使用will-change来提前告诉渲染引擎，让它为该元素准备独立的层。但是凡事都有两面性，每当渲染引擎为一个元素准备一个独立层的时候，它占用的内存也会大大增加，因为从层树开始，后续每个阶段都会多一个层结构，这些都需要额外的内存，所以你需要恰当地使用 will-change。</p><h2>总结</h2><p>好了，今天就介绍到这里，下面我来总结下今天的内容。</p><ul>\n<li>首先我们介绍了显示器显示图像的原理，以及帧和帧率的概念，然后基于帧和帧率我们又介绍渲染引擎是如何实现一帧图像的。通常渲染引擎生成一帧图像有三种方式：重排、重绘和合成。其中重排和重绘操作都是在渲染进程的主线程上执行的，比较耗时；而合成操作是在渲染进程的合成线程上执行的，执行速度快，且不占用主线程。</li>\n<li>然后我们重点介绍了浏览器是怎么实现合成的，其技术细节主要可以使用三个词来概括：分层、分块和合成。</li>\n<li>最后我们还讲解了CSS动画比JavaScript动画高效的原因，以及怎么使用 will-change来优化动画或特效。</li>\n</ul><h2>思考时间</h2><p>观察下面代码，结合Performance面板、内存面板和分层面板，全面比较在box中使用 will-change和不使用 will-change的效率、性能和内存占用等情况。</p><pre><code>\n\n&lt;html&gt;\n\n&lt;head&gt;\n    &lt;title&gt;观察will-change&lt;/title&gt;\n    &lt;style&gt;\n        .box {\n            will-change: transform, opacity;\n            display: block;\n            float: left;\n            width: 40px;\n            height: 40px;\n            margin: 15px;\n            padding: 10px;\n            border: 1px solid rgb(136, 136, 136);\n            background: rgb(187, 177, 37);\n            border-radius: 30px;\n            transition: border-radius 1s ease-out;\n        }\n\n        body {\n            font-family: Arial;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n\n\n&lt;body&gt;\n    &lt;div id=&quot;controls&quot;&gt;\n        &lt;button id=&quot;start&quot;&gt;start&lt;/button&gt;\n        &lt;button id=&quot;stop&quot;&gt;stop&lt;/button&gt;\n    &lt;/div&gt;\n    &lt;div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n        &lt;div class=&quot;box&quot;&gt;旋转盒子&lt;/div&gt;\n    &lt;/div&gt;\n    &lt;script&gt;\n\n        let boxes = document.querySelectorAll('.box');\n        let boxes1 = document.querySelectorAll('.box1');\n        let start = document.getElementById('start');\n        let stop = document.getElementById('stop');\n        let stop_flag = false\n\n\n        start.addEventListener('click', function () {\n            stop_flag = false\n            requestAnimationFrame(render);\n        })\n\n\n        stop.addEventListener('click', function () {\n            stop_flag = true\n        })\n\n\n        let rotate_ = 0\n        let opacity_ = 0\n        function render() {\n            if (stop_flag)\n                return 0\n            rotate_ = rotate_ + 6\n            if (opacity_ &gt; 1)\n                opacity_ = 0\n            opacity_ = opacity_ + 0.01\n            let command = 'rotate(' + rotate_ + 'deg)';\n            for (let index = 0; index &lt; boxes.length; index++) {\n                boxes[index].style.transform = command\n                boxes[index].style.opacity = opacity_\n            }\n            requestAnimationFrame(render);\n        }\n    &lt;/script&gt;\n&lt;/body&gt;\n\n\n&lt;/html&gt;\n\n</code></pre><p>欢迎在留言区与我分享你的想法，也欢迎你在留言区记录你的思考过程。感谢阅读，如果你觉得这篇文章对你有帮助的话，也欢迎把它分享给更多的朋友。</p><p></p>","comments":[{"had_liked":false,"id":137129,"user_name":"宇宙全栈","can_delete":false,"product_type":"c1","uid":1001309,"ip_address":"","ucode":"2E984CA0ECFB85","user_header":"https://static001.geekbang.org/account/avatar/00/0f/47/5d/9afdf648.jpg","comment_is_top":false,"comment_ctime":1569632686,"is_pvip":false,"replies":[{"id":"52590","content":"<br>记住一点，能直接在合成线程中完成的任务都不会改变图层的内容，如文字信息的改变，布局的改变，颜色的改变，统统不会涉及，涉及到这些内容的变化就要牵涉到重排或者重绘了。<br><br>能直接在合成线程中实现的是整个图层的几何变换，透明度变换，阴影等，这些变换都不会影响到图层的内容。<br><br>比如滚动页面的时候，整个页面内容没有变化，这时候做的其实是对图层做上下移动，这种操作直接在合成线程里面就可以完成了。<br><br>再比如文章题目列子中的旋转操作，如果样式里面使用了will-change ，那么这些box元素都会生成单独的一层，那么在旋转操作时，只要在合成线程将这些box图层整体旋转到设置的角度，再拿旋转后的box图层和背景图层合成一张新图片，这个图片就是最终输出的一帧，整个过程都是在合成线程中实现的。","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1569643581,"ip_address":"","comment_id":137129,"utype":1}],"discussion_count":8,"race_medal":0,"score":"392411656622","product_id":100033601,"comment_content":"请问老师：既然css动画会跳过重绘阶段，则意味着合成阶段的绘制列表不会变化。但是最终得到的相邻两帧的位图是不一样的。那么在合成阶段，相同的绘制列表是如何绘制出不同的位图的？难道绘制列表是有状态的？还是绘制列表一次能绘制出多张位图？","like_count":92,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468951,"discussion_content":"\n记住一点，能直接在合成线程中完成的任务都不会改变图层的内容，如文字信息的改变，布局的改变，颜色的改变，统统不会涉及，涉及到这些内容的变化就要牵涉到重排或者重绘了。\n\n能直接在合成线程中实现的是整个图层的几何变换，透明度变换，阴影等，这些变换都不会影响到图层的内容。\n\n比如滚动页面的时候，整个页面内容没有变化，这时候做的其实是对图层做上下移动，这种操作直接在合成线程里面就可以完成了。\n\n再比如文章题目列子中的旋转操作，如果样式里面使用了will-change ，那么这些box元素都会生成单独的一层，那么在旋转操作时，只要在合成线程将这些box图层整体旋转到设置的角度，再拿旋转后的box图层和背景图层合成一张新图片，这个图片就是最终输出的一帧，整个过程都是在合成线程中实现的。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1569643581,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1106123,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKOASyV1lpdkW6It8WQltNGj9021PTibqOwRUTccaSUEM1GmQThOTIRp9Eu7XNZZFfGGNveLbUSw9Q/132","nickname":"tick","note":"","ucode":"D2C864306C06CB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":30018,"discussion_content":"既然几何变化不需要涉及到重排重绘，那么javascript比css执行几何变化是慢在哪里呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570794735,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1295848,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/yicibWmBIDaSpBYI5wCBDQcYu6mxjvz3XZzBibxSNXFfqCS6OJOjvy2Nc2lyDicZfmneW9ZY4KbicA1sNgLktVSicgkw/132","nickname":"老余","note":"","ucode":"17AC6C60D0EB86","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1106123,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKOASyV1lpdkW6It8WQltNGj9021PTibqOwRUTccaSUEM1GmQThOTIRp9Eu7XNZZFfGGNveLbUSw9Q/132","nickname":"tick","note":"","ucode":"D2C864306C06CB","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":31754,"discussion_content":"js执行几何变化会涉及到重排。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1570953167,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":30018,"ip_address":""},"score":31754,"extra":""},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":1106123,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKOASyV1lpdkW6It8WQltNGj9021PTibqOwRUTccaSUEM1GmQThOTIRp9Eu7XNZZFfGGNveLbUSw9Q/132","nickname":"tick","note":"","ucode":"D2C864306C06CB","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":35044,"discussion_content":"JS 操作 css 会修改 CSSOM 的结构","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1571232977,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":30018,"ip_address":""},"score":35044,"extra":""},{"author":{"id":1079779,"avatar":"https://static001.geekbang.org/account/avatar/00/10/79/e3/0ec0b681.jpg","nickname":"mini💝","note":"","ucode":"3B6BA1B5177922","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1106123,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKOASyV1lpdkW6It8WQltNGj9021PTibqOwRUTccaSUEM1GmQThOTIRp9Eu7XNZZFfGGNveLbUSw9Q/132","nickname":"tick","note":"","ucode":"D2C864306C06CB","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534539,"discussion_content":"首先就是几何变化会涉及重排，然后js动画慢在gpu处理动画操作的是纹理，纹理进行的是矩阵运算，gpu很擅长矩阵运算，而且gpu做矩阵运算的时候是并行计算，速度比cpu快好几个数量级。比如让一个图片执行transform，其实css里很多时候是缩写的，全写是用matrix。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1638207237,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":30018,"ip_address":""},"score":534539,"extra":""}]},{"author":{"id":1001309,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/5d/9afdf648.jpg","nickname":"宇宙全栈","note":"","ucode":"2E984CA0ECFB85","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":22488,"discussion_content":"谢谢，基本上明白了。至于几何变换这个过程到底是怎么实现的，可能需要了解更底层的逻辑。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569644872,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1229032,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c0/e8/bf987d79.jpg","nickname":"Rookie","note":"","ucode":"893C46F39346AF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1001309,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/5d/9afdf648.jpg","nickname":"宇宙全栈","note":"","ucode":"2E984CA0ECFB85","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348718,"discussion_content":"大佬，绘制列表是不是只是只针对图层的内容进行绘制的，像几何变化这些不在内容的范围内？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612688554,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":22488,"ip_address":""},"score":348718,"extra":""},{"author":{"id":1079779,"avatar":"https://static001.geekbang.org/account/avatar/00/10/79/e3/0ec0b681.jpg","nickname":"mini💝","note":"","ucode":"3B6BA1B5177922","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1229032,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c0/e8/bf987d79.jpg","nickname":"Rookie","note":"","ucode":"893C46F39346AF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534541,"discussion_content":"几何变化可以看下gpu如何操作纹理的。关键字就是并行计算，矩阵运算。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638207326,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":348718,"ip_address":""},"score":534541,"extra":""}]}]},{"had_liked":false,"id":137105,"user_name":"早起不吃虫","can_delete":false,"product_type":"c1","uid":1369757,"ip_address":"","ucode":"13CD3B5E1F9435","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/7WkTI1IicbKvsPJng5vQh5qlrf1smbfl2zb7icHZfzcAk1k4lr8w8IDEAdrqq1NHW5XZMPXiaa1h7Jn1LGOWOCkIA/132","comment_is_top":false,"comment_ctime":1569604354,"is_pvip":false,"replies":[{"id":"52592","content":"这块资料比较少，都是通过chromium源码还有blinkon上一些视频总结的。<br><br>blinkon：https:&#47;&#47;www.youtube.com&#47;channel&#47;UCIfQb9u7ALnOE4ZmexRecDg<br><br>Chromium源码： https:&#47;&#47;chromium.googlesource.com&#47;chromium&#47;src<br><br>https:&#47;&#47;chromium.googlesource.com&#47;chromium&#47;src&#47;+&#47;master&#47;docs&#47;README.md<br><br>不过源码看起来会比较吃力，里面充斥着大量的回调，梳理起来也是非常不轻松的<br><br>","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1569644616,"ip_address":"","comment_id":137105,"utype":1}],"discussion_count":3,"race_medal":0,"score":"139008557826","product_id":100033601,"comment_content":"这篇文章信息量巨大，需要很多的知识储备，老师能不能提供一些课外阅读帮助理解呢，谢谢","like_count":33,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468942,"discussion_content":"这块资料比较少，都是通过chromium源码还有blinkon上一些视频总结的。\n\nblinkon：https://www.youtube.com/channel/UCIfQb9u7ALnOE4ZmexRecDg\n\nChromium源码： https://chromium.googlesource.com/chromium/src\n\nhttps://chromium.googlesource.com/chromium/src/+/master/docs/README.md\n\n不过源码看起来会比较吃力，里面充斥着大量的回调，梳理起来也是非常不轻松的\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569644616,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1001309,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/5d/9afdf648.jpg","nickname":"宇宙全栈","note":"","ucode":"2E984CA0ECFB85","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":22376,"discussion_content":"把专栏前面浏览器渲染页面的两篇文章细读一下，应该会有帮助","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569631723,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1240802,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ee/e2/23e44221.jpg","nickname":"余熙","note":"","ucode":"7F98DCFB899CB7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1001309,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/5d/9afdf648.jpg","nickname":"宇宙全栈","note":"","ucode":"2E984CA0ECFB85","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336785,"discussion_content":"专栏前面浏览器渲染页面的两篇文章，我已经理解并背下来了hhh","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1608699498,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":22376,"ip_address":""},"score":336785,"extra":""}]}]},{"had_liked":false,"id":153249,"user_name":"bai","can_delete":false,"product_type":"c1","uid":1462911,"ip_address":"","ucode":"C9673B7F2C896E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKf9xWMCV4ic5dsKyroQpGkYGZ32IPicVPVsF1TPENeTcspd6HhhaciaHCCmzeicaiaItZS3DahASFovJQ/132","comment_is_top":false,"comment_ctime":1574208328,"is_pvip":false,"replies":[{"id":"58860","content":"嗯 标题是不算严谨，修订时我会做一些调整","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1574211552,"ip_address":"","comment_id":153249,"utype":1}],"discussion_count":4,"race_medal":0,"score":"96063488840","product_id":100033601,"comment_content":"关于css动画和js动画效率的问题应该有点武断了，will-change只是优化手段，使用js改变transform也能享受这个属性带来的优化。既然css动画和js动画都能享受这个优化，那就不能说明css动画比js动画效率高","like_count":23,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475092,"discussion_content":"嗯 标题是不算严谨，修订时我会做一些调整","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574211552,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1043716,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ed/04/7941d031.jpg","nickname":"Atoe","note":"","ucode":"5FB8C5C6A67067","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390609,"discussion_content":"我说一下我的理解。js如果新增transform等CSS3属性都会改变stylesheet ，那么也会涉及到图层新增，就是说从流水线来说就是在stylesheet那里开始执行。这里说是第一次改变c3属性，后续的话会和css中设置c3属性效率一样。\n","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1629939452,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1231317,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c9/d5/b08a27ed.jpg","nickname":"灵感_idea","note":"","ucode":"E0DBDDFA6040F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341637,"discussion_content":"我觉得作者这里所说的js动画主要指传统的那些实现方式，比如使用定时器来改变位置、尺寸等等，如果是用了transform，就相当于使用了css3的优势，并不单指animation。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610468262,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1406834,"avatar":"https://static001.geekbang.org/account/avatar/00/15/77/72/ad7056f9.jpg","nickname":"hb","note":"","ucode":"DCFA6CECF64E37","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1231317,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c9/d5/b08a27ed.jpg","nickname":"灵感_idea","note":"","ucode":"E0DBDDFA6040F6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385826,"discussion_content":"总的方式是看你怎么改变，而不是与js或者css有关吧，老师这样说确实会误导","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627289127,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":341637,"ip_address":""},"score":385826,"extra":""}]}]},{"had_liked":false,"id":137123,"user_name":"宇宙全栈","can_delete":false,"product_type":"c1","uid":1001309,"ip_address":"","ucode":"2E984CA0ECFB85","user_header":"https://static001.geekbang.org/account/avatar/00/0f/47/5d/9afdf648.jpg","comment_is_top":false,"comment_ctime":1569631620,"is_pvip":false,"replies":[{"id":"52591","content":"嗯。多谢指正","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1569643622,"ip_address":"","comment_id":137123,"utype":1}],"discussion_count":12,"race_medal":0,"score":"91763944836","product_id":100033601,"comment_content":"文中这段话中的“帧”应该改为“层”：<br>这段代码就是提前告诉渲染引擎 box 元素将要做几何变换和透明度变换操作，这时候渲染引擎会将该元素单独实现一帧，等这些变换发生时，渲染引擎会通过合成线程直接去处理变换，这些变换并没有涉及到主线程，这样就大大提升了渲染的效率。","like_count":21,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468948,"discussion_content":"嗯。多谢指正","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569643622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2051828,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/4e/f4/ea62a317.jpg","nickname":"DJALONE","note":"","ucode":"36D0CA21951B0A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343829,"discussion_content":"2021-1-21，看文章的时候就在想应该是“层”才对吧，翻评论果然是“层”","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1611192848,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1390118,"avatar":"","nickname":"Geek_aa9028","note":"","ucode":"A0938810155A75","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349166,"discussion_content":"2021.02.10，还没改，韭菜割完就不管了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1612946284,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1816927,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/G5S9SXFiaeQH7DNUuXErMKhnFw5Rib2QrGkxUOugak9GLMibuanEBGxfZlA9icS5JWYMYE5s0yH6ucggcCJr9TwRSw/132","nickname":"Geek_43337f","note":"","ucode":"3F17C873DA35EC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285169,"discussion_content":"2020.6.21 今天是星期天 天气晴 还没改过来~","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1592753929,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1445936,"avatar":"https://static001.geekbang.org/account/avatar/00/16/10/30/c07d419c.jpg","nickname":"卡尔","note":"","ucode":"BD6F76BC18FF8F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284339,"discussion_content":"可惜现在已经是20年6月18号了，还没改~","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1592496243,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2596310,"avatar":"https://static001.geekbang.org/account/avatar/00/27/9d/d6/42c095a1.jpg","nickname":"大W的幻想","note":"","ucode":"E9FE9B09E38DA4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414066,"discussion_content":"可惜现在已经是21年11月11号了，还没改~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636643494,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1913986,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/34/82/ed7a6c2c.jpg","nickname":"YSQ","note":"","ucode":"E862D188312EDF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337630,"discussion_content":"2020.12.26 星期六 小雨转多云 还没改~\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608994304,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2015986,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/c2/f2/b3b349a4.jpg","nickname":"OOP","note":"","ucode":"FA536DFBF793F8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311969,"discussion_content":"2020/10/13 老师忘记改了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602553819,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1039904,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/de/20/03130a39.jpg","nickname":"沧海一声笑","note":"","ucode":"5297F2F4736B63","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291571,"discussion_content":"是的我也觉得 刚才阅读起来就怪怪的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594871420,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2026249,"avatar":"","nickname":"Geek_0725e1","note":"","ucode":"47FF5C30FF6424","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287700,"discussion_content":"2020.6.30 天气闷热，依旧还没改过来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593513074,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":283771,"discussion_content":"不 现在是2020/06/17","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592361964,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1971173,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/13/e5/afcff70c.jpg","nickname":"ykx","note":"","ucode":"E5B3ECB91F645A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":247266,"discussion_content":"可惜现在已经是20年4月25号了，还没改~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587806697,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":177779,"user_name":"小蛋糕","can_delete":false,"product_type":"c1","uid":1807662,"ip_address":"","ucode":"335A6F4301CF22","user_header":"https://static001.geekbang.org/account/avatar/00/1b/95/2e/f8575abb.jpg","comment_is_top":false,"comment_ctime":1581498378,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"61711040522","product_id":100033601,"comment_content":"设置了 will-change :<br><br>- Layers 中会看到 document 下为每一个 .box 都创建了一个 layer，每个节点占用了 15KB 的内存。<br>- Performance 看不太懂，大致说一下直观感受<br>  - FPS 约 60、稳定<br>  - CPU 低、偶有突然增高<br>  - GPU 使用频率非常低<br>  - Chrome_ChildOThread 任务非常少<br>  - Compositor 任务密集<br><br>关闭 will-change：<br><br>- Layers 中就只剩下 document 层了。<br>- Performance 30s<br>  - FPS 约 60、稳定，但相对于开启 will-change不稳定<br>  - CPU 相对更低、偶有突然增高<br>  - GPU 使用频率很高<br>  - Raster 有 2 个光栅线程<br>  - Chrome_ChildOThread 任务密集<br>  - Compositor 任务非常密集<br><br>另外关于 Memory 中进行内存快照和 Heap，虽然第一次确实开启了 will-change 后更高，但多测试了几次发现差不多...","like_count":15,"discussions":[{"author":{"id":1762591,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/e5/1f/6a22926f.jpg","nickname":"cinob","note":"","ucode":"96ED5CD2C9D860","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584371,"discussion_content":"基于chrome 103.0.5060.134\nwill-change :\n - CPU 低\n - GPU 低\n - 无Raster\n - Chrome_ChildOThread 少\n关闭 will-change :\n - CPU 高\n - GPU 高\n - Raster 4 个进程\n - Chrome_ChildOThread 非常多\n\nCompositor 差不多，内存差不多 甚至开启will-change更低","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660792524,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"辽宁"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2383973,"avatar":"https://static001.geekbang.org/account/avatar/00/24/60/65/0658ca66.jpg","nickname":"付伟超","note":"","ucode":"2CD9A5902B1FA8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339269,"discussion_content":"基本上情况一致，说说不一样的点：\n1.Raster前后都是4个线程；\n2.使用will-change的CPU使用率非常高；\n自己结论：\n使用will-change分层帧率稳定，Main图表显示每一帧的合成用时都很长，基本上占据了每一帧大部分任务时间;GPU使用率非常低，说明分层对GPU的使用会减少；相应的IO线程使用也减少，主要使用的是光栅化线程池和compositor线程；","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609585735,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137385,"user_name":"Angus","can_delete":false,"product_type":"c1","uid":1377467,"ip_address":"","ucode":"7CC3BA1550FB5B","user_header":"https://static001.geekbang.org/account/avatar/00/15/04/bb/5e5c37c1.jpg","comment_is_top":false,"comment_ctime":1569727415,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"31634498487","product_id":100033601,"comment_content":"题设的问题答案会不会很牵强？因为使用will-change渲染引擎会通过合成线程去处理元素的变化，所以CSS动画比JavaScript高效？不是应该从CSS动画的原理实现层面去解释吗，will-change只是让CSS动画更高效的一个API，就像JavaScript中的requestAnimationFrame也只是一个优化方案而已。","like_count":7,"discussions":[{"author":{"id":1623567,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c6/0f/3937645e.jpg","nickname":"NBE01","note":"","ucode":"DF0D22D4495D54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":26932,"discussion_content":"不太一样把， 渲染的流程不一样了，你js操作cssom实现动画是从重排重绘制，开始的流程，中间会占用主线程。而css动画，是从合成线程内开始，不是在占用主线程，并且，距离最终的gpu绘制输出到屏幕上的路径更加近，近就少计算流程，效率自然就是高啊。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1570624690,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1377467,"avatar":"https://static001.geekbang.org/account/avatar/00/15/04/bb/5e5c37c1.jpg","nickname":"Angus","note":"","ucode":"7CC3BA1550FB5B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1623567,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c6/0f/3937645e.jpg","nickname":"NBE01","note":"","ucode":"DF0D22D4495D54","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":30639,"discussion_content":"从渲染流程来看，肯定是CSS效率高。我质疑的是文中加粗文字：这也是CSS动画比JavaScript动画高效的原因。这句话的前文是说的是will-change带来的效率提升。我的意思是在这里下结论并不严谨。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1570848507,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":26932,"ip_address":""},"score":30639,"extra":""},{"author":{"id":1462911,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKf9xWMCV4ic5dsKyroQpGkYGZ32IPicVPVsF1TPENeTcspd6HhhaciaHCCmzeicaiaItZS3DahASFovJQ/132","nickname":"bai","note":"","ucode":"C9673B7F2C896E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1623567,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c6/0f/3937645e.jpg","nickname":"NBE01","note":"","ucode":"DF0D22D4495D54","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":79203,"discussion_content":"可以实际测一下，如果只是js改变transform，浏览器应该是不会重绘的，这点优化还是应该有的","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1576067496,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":26932,"ip_address":""},"score":79203,"extra":""}]}]},{"had_liked":false,"id":205413,"user_name":"HoSalt","can_delete":false,"product_type":"c1","uid":1156074,"ip_address":"","ucode":"610B03E2A002D1","user_header":"https://static001.geekbang.org/account/avatar/00/11/a3/ea/53333dd5.jpg","comment_is_top":false,"comment_ctime":1586611779,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"18766480963","product_id":100033601,"comment_content":"老师，分成这个概念是不是和CSS里面的BFC这个概念相关?","like_count":4,"discussions":[{"author":{"id":1938247,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/93/47/ef2c3c4e.jpg","nickname":"何江涛","note":"","ucode":"844470733623BF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581967,"discussion_content":"看winter老师的课，bfc只是 &#34;盒&#34; 的意思，几乎所有能装正常流的元素，都会产生bfc。可以把bfc理解为一个个div。\n而分层是将元素归类，不变化元素的为一层，常变化的另一层。\n\n如果bfc与层有联系，那 一层包含多个bfc，即一层包含多个盒元素。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659090656,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1673843,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erXRaa98A3zjLDkOibUJV1254aQ4EYFTbSLJuEvD0nXicMNA8pLoxOfHf5kPTbGLXNicg8CPFH3Tn0mA/132","nickname":"Geek_115bc8","note":"","ucode":"71FBC9F02AFE1B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":570113,"discussion_content":"c3的动画，canvas, video, will-change, 拥有c3变化的属性都会创建一个图层。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651667788,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2258397,"avatar":"https://static001.geekbang.org/account/avatar/00/22/75/dd/9affd4d5.jpg","nickname":"九千七","note":"","ucode":"1E385C88B3401A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344703,"discussion_content":"根本不一样好吗，分层是浏览器做的事，BFC只是css规定的一个块级格式上下文而已","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611562822,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1516144,"avatar":"https://static001.geekbang.org/account/avatar/00/17/22/70/ab911260.jpg","nickname":"太白北路","note":"","ucode":"3C7E54D38408A3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300060,"discussion_content":"不一样的，参考https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context；https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Understanding_z_index/The_stacking_context","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597924201,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1374421,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f8/d5/fd04fcbc.jpg","nickname":"Kite","note":"","ucode":"9DACE8E0EC84A6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":235114,"discussion_content":"我也特想知道， BFC 应该就是分层吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587021185,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":218731,"user_name":"王妍","can_delete":false,"product_type":"c1","uid":1019641,"ip_address":"","ucode":"D4CCE6C7F7F1C5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8e/f9/8221aac3.jpg","comment_is_top":false,"comment_ctime":1589861121,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14474763009","product_id":100033601,"comment_content":"Performance面板：<br>使用了will-change后帧率能达到60fps左右。不使用则30～50fps之间。<br>内存面板：<br>内存方面没看出明显区别。<br>分层面板：<br>使用will-change，每个box有一个单独的层。不使用则整个document是一层。","like_count":3},{"had_liked":false,"id":205713,"user_name":"风里有诗句","can_delete":false,"product_type":"c1","uid":1812388,"ip_address":"","ucode":"9D8D8731EB553E","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a7/a4/da2e300b.jpg","comment_is_top":false,"comment_ctime":1586706665,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14471608553","product_id":100033601,"comment_content":"老师，想听您讲解一下这道题目的分析","like_count":3},{"had_liked":false,"id":225614,"user_name":"james","can_delete":false,"product_type":"c1","uid":1232771,"ip_address":"","ucode":"AC42035106E5B9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/yyibGRYCArsUNBfCAEAibua09Yb9D5AdO8TkCmXymhAepibqmlz0hzg06ggBLxyvXicnjqFVGr7zYF0rQoZ0aXCBAg/132","comment_is_top":false,"comment_ctime":1591800294,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"10181734886","product_id":100033601,"comment_content":"如果样式里面使用了will-change, 样式中涉及到的动画操作就会在合成线程中执行，将旋转后的图层和图层合成一张新的图片，这个就是最终输出的一帧，因为动画过程在合成线程中实现，没有占用主线程，因此渲染速度大大提高","like_count":2},{"had_liked":false,"id":160419,"user_name":"-_-|||","can_delete":false,"product_type":"c1","uid":1328142,"ip_address":"","ucode":"94B21594658BF9","user_header":"https://static001.geekbang.org/account/avatar/00/14/44/0e/ce14b7d3.jpg","comment_is_top":false,"comment_ctime":1575947833,"is_pvip":false,"discussion_count":2,"race_medal":1,"score":"10165882425","product_id":100033601,"comment_content":"Performance：使用‘ will-change: transform, opacity;‘后，主线程均匀分布，密集棱状性；GPU均匀稀疏，平均500ms一条棱;rasterizer thread1 持续paint;Summery中GPU占用一小点其它98%以上都是idle;FPS,CPU都很稳定。去掉‘ will-change: transform, opacity;‘后，主线程均匀分布，密集棱状性；GPU密集棱状形；rasterizer thread1 和 thread2 持续paint；Summery中rendering和paint占用约20%时间；FPS，CPU略微不稳定。结论：will-change可以减轻GPU负担（为什么？合成线程不用GPU？），可以减轻rasterizer 线程负担（是因为减少重绘和重排吗），减少重绘和重排，动画的针率更稳定，cpu计算更少（为什么？计算分配给别的核了？）。。。。Layers: ：使用‘ will-change: transform, opacity;‘后，会合成新的层，不使用‘ will-change: transform, opacity;‘后，没有新的层。结论：不使用‘ will-change: transform, opacity;‘由于没有新的层生成，更改都会在一个层改变，所以会涉及到更多重绘和重排。Memory： 使用‘ will-change: transform, opacity;‘这个后System会更少，应该是占有系统内存会更少吧。那就尴尬了，will-change会有新图层，应该内存会增加。","like_count":2,"discussions":[{"author":{"id":1375777,"avatar":"https://static001.geekbang.org/account/avatar/00/14/fe/21/df75ca94.jpg","nickname":"林浩","note":"","ucode":"266C06165AFA47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312796,"discussion_content":"老师说了，合成进程是不会改变图层内容，transform opacity是不会引起重排重汇的！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602819092,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1058638,"avatar":"https://static001.geekbang.org/account/avatar/00/10/27/4e/080cb3a0.jpg","nickname":"CodingWith","note":"","ucode":"F9E463F5823332","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":100592,"discussion_content":"我也发现了，使用will-change以后内存占用系统会更少。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577271824,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":211462,"user_name":"zhangbao","can_delete":false,"product_type":"c1","uid":1383052,"ip_address":"","ucode":"9CA3D465BFBBF1","user_header":"https://static001.geekbang.org/account/avatar/00/15/1a/8c/d91b01a6.jpg","comment_is_top":false,"comment_ctime":1587967584,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5882934880","product_id":100033601,"comment_content":"浏览器的 分层 依据是什么呢，就是如何决定哪些元素使用的是单独图层？我开始把 CSS 中的 层叠上下文 看成是一个图层，但观察发现好像并不是这样的。 ","like_count":1},{"had_liked":false,"id":173794,"user_name":"时光逆行","can_delete":false,"product_type":"c1","uid":1395627,"ip_address":"","ucode":"D2D49FA034A558","user_header":"https://static001.geekbang.org/account/avatar/00/15/4b/ab/220aa56c.jpg","comment_is_top":false,"comment_ctime":1579692950,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5874660246","product_id":100033601,"comment_content":"使用 will-change 掉帧情况几乎没有，内存占用比不用will-change会减少三分之二左右，这个属性给力","like_count":1},{"had_liked":false,"id":140471,"user_name":"老余","can_delete":false,"product_type":"c1","uid":1295848,"ip_address":"","ucode":"17AC6C60D0EB86","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/yicibWmBIDaSpBYI5wCBDQcYu6mxjvz3XZzBibxSNXFfqCS6OJOjvy2Nc2lyDicZfmneW9ZY4KbicA1sNgLktVSicgkw/132","comment_is_top":false,"comment_ctime":1570953997,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5865921293","product_id":100033601,"comment_content":"加will-change：开启动画后整个过程帧率在59.9。图层由60个排列的变为1个重叠的60层。load时间在80ms左右，fp时间在200ms左右。内存方面为2m左右。<br>不加will-change：透明度变为0的时候帧率会变成40左右，随后增加到60。图层由60个排列。load时间在80ms左右，fp时间在100ms左右。内存方面为2m左右。","like_count":1},{"had_liked":false,"id":357383,"user_name":"罗武钢","can_delete":false,"product_type":"c1","uid":2843394,"ip_address":"广东","ucode":"E739A170C1D341","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLzSRrK59sydknSSYZdeTww3Cgib9Gy9N4BJGgSXMYdmVIxJYwDXPsLCIE68AbwTkgUct8J4iboAqicA/132","comment_is_top":false,"comment_ctime":1663213104,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1663213104","product_id":100033601,"comment_content":"太棒了，老师这套课程真得很受用","like_count":0},{"had_liked":false,"id":348845,"user_name":"lzh","can_delete":false,"product_type":"c1","uid":3026145,"ip_address":"","ucode":"CBEF51FF0D35EE","user_header":"https://static001.geekbang.org/account/avatar/00/2e/2c/e1/74c5e110.jpg","comment_is_top":false,"comment_ctime":1655453176,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655453176","product_id":100033601,"comment_content":"你好请问文中这句话里的一帧是指一层吗：“这段代码就是提前告诉渲染引擎 box 元素将要做几何变换和透明度变换操作，这时候渲染引擎会将该元素单独实现一帧”","like_count":0},{"had_liked":false,"id":328260,"user_name":"Yvan","can_delete":false,"product_type":"c1","uid":2159152,"ip_address":"","ucode":"DA5BB215E65ED3","user_header":"https://static001.geekbang.org/account/avatar/00/20/f2/30/5b677e8d.jpg","comment_is_top":false,"comment_ctime":1640637191,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640637191","product_id":100033601,"comment_content":"两个问题，评论区都已经提到了<br>1.帧改为层<br>2.will-change 是配合css使用还是配合js使用<br>另外，app夜间模式影响查看html代码<br>","like_count":0},{"had_liked":false,"id":299399,"user_name":"1830","can_delete":false,"product_type":"c1","uid":1374337,"ip_address":"","ucode":"246FEF7C97F39C","user_header":"https://static001.geekbang.org/account/avatar/00/14/f8/81/bff52f91.jpg","comment_is_top":false,"comment_ctime":1624611129,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1624611129","product_id":100033601,"comment_content":"老师。我有一些疑问希望老师可以解答：<br>        1. canvas动画和svg动画和传统css动画，js动画在执行性能上有何提升<br>        2. transform的动画是否都是基于合成执行的<br>        3. 普通图层的修改是不是会造成整个网页的重排重绘","like_count":0},{"had_liked":false,"id":288695,"user_name":"张宗伟","can_delete":false,"product_type":"c1","uid":1374181,"ip_address":"","ucode":"1447A20C7A8982","user_header":"https://static001.geekbang.org/account/avatar/00/14/f7/e5/ec543f3b.jpg","comment_is_top":false,"comment_ctime":1618628691,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618628691","product_id":100033601,"comment_content":" 补充一点：使用 will-change 会为每个 .box 生成一个图层。","like_count":0},{"had_liked":false,"id":288693,"user_name":"张宗伟","can_delete":false,"product_type":"c1","uid":1374181,"ip_address":"","ucode":"1447A20C7A8982","user_header":"https://static001.geekbang.org/account/avatar/00/14/f7/e5/ec543f3b.jpg","comment_is_top":false,"comment_ctime":1618627954,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618627954","product_id":100033601,"comment_content":"关于课后题，就我观察到的现象描述(Mac air 2019)：<br>1. 使用 will-change，帧率维持在 60FPS 之上，很稳定；GPU 很多空闲时间，压力小；内存占用3.6MB。<br>2. 不使用 will-change，帧率波动特别大，范围从 60FPS之上 ～ 30&#47;40FPS 之间，说明生成图片时很耗时；GPU 利用率很高，压力大；内存占用3.7MB。<br>PS：即使使用 will-change，帧率维持在 60FPS 之上，但是对于我的设备屏幕刷新率来说还是出现掉帧的情况；主线程一直都运行良好，未被阻塞。","like_count":0},{"had_liked":false,"id":288692,"user_name":"张宗伟","can_delete":false,"product_type":"c1","uid":1374181,"ip_address":"","ucode":"1447A20C7A8982","user_header":"https://static001.geekbang.org/account/avatar/00/14/f7/e5/ec543f3b.jpg","comment_is_top":false,"comment_ctime":1618627470,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618627470","product_id":100033601,"comment_content":"关于课后题，就我所观察到的现象描述：<br>1. 使用 will-change 属性时：帧率稳定在60FPS之上，很稳定；GPU存在很多空闲时间，说明压力小；","like_count":0},{"had_liked":false,"id":287826,"user_name":"飞天","can_delete":false,"product_type":"c1","uid":1271687,"ip_address":"","ucode":"65923554BE3667","user_header":"https://static001.geekbang.org/account/avatar/00/13/67/87/2c0c1c93.jpg","comment_is_top":false,"comment_ctime":1618188213,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618188213","product_id":100033601,"comment_content":"老师，c ss媒体取消阻止，来优化性能怎么理解？举个例子？","like_count":0},{"had_liked":false,"id":282053,"user_name":"Geek_2753cc","can_delete":false,"product_type":"c1","uid":1759808,"ip_address":"","ucode":"9A108A3E1FFC6B","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLRPuYmxCsTaEroajHBWnBALgPW1PFYXviarfeCpvIGap5xZ3uo6XOyW6QA4ibvuyX0w3YsW0aYRf8w/132","comment_is_top":false,"comment_ctime":1615037276,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1615037276","product_id":100033601,"comment_content":"请问老师：多个图层合成为一个图层是合成线程处理的，还是浏览器进程处理的呢？看前面的文章意思是浏览器处理的，合成线程是将多个图块合成为一个图层","like_count":0,"discussions":[{"author":{"id":2547859,"avatar":"https://static001.geekbang.org/account/avatar/00/26/e0/93/c512e343.jpg","nickname":"云销雨霁","note":"","ucode":"0F3F5867B9EC82","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391956,"discussion_content":"合成操作是在合成线程上完成的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630729515,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":267603,"user_name":"孟谦","can_delete":false,"product_type":"c1","uid":1043824,"ip_address":"","ucode":"7504C438D973D3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/70/dafc8858.jpg","comment_is_top":false,"comment_ctime":1607841696,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1607841696","product_id":100033601,"comment_content":"开启了will-change, 在performance &gt; setting 中开启 Advance Paint 之后, 点击某一个frame的时候可以, 可以看到. 渲染引擎为每一个标记了 CSS: will-change 开了新的layer, 用来叠加动画. 来减少重绘<br><br>&lt;a href=&quot;https:&#47;&#47;ibb.co&#47;4Y343hq&quot;&gt;&lt;img src=&quot;https:&#47;&#47;i.ibb.co&#47;SdGVGFj&#47;Clean-Shot-2020-12-13-at-14-37-02-2x.png&quot; alt=&quot;Clean-Shot-2020-12-13-at-14-37-02-2x&quot; border=&quot;0&quot;&gt;&lt;&#47;a&gt;","like_count":0},{"had_liked":false,"id":260892,"user_name":"君自兰芳","can_delete":false,"product_type":"c1","uid":2029706,"ip_address":"","ucode":"780F3AFEEB9B73","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f8/8a/f7e7fd54.jpg","comment_is_top":false,"comment_ctime":1605148907,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605148907","product_id":100033601,"comment_content":"“一旦显卡把合成的图像写到后缓冲区，系统就会让后缓冲区和前缓冲区互换”<br><br>这里的 “系统” 具体指的是什么？ 操作系统？","like_count":0},{"had_liked":false,"id":230833,"user_name":"BrotherWang","can_delete":false,"product_type":"c1","uid":1047913,"ip_address":"","ucode":"86BF7869AF317B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fd/69/48595516.jpg","comment_is_top":false,"comment_ctime":1593506877,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593506877","product_id":100033601,"comment_content":"css开启gpu硬件加速是指什么呢？是指栅格化图块转成位图时使用gpu么?","like_count":0},{"had_liked":false,"id":230296,"user_name":"王沙沙","can_delete":false,"product_type":"c1","uid":1151692,"ip_address":"","ucode":"288D34F0B40E85","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eo62etdyoSUiagbCGxcfhUTqP6hIOje6ibiaFKtnZiaVbJ7zmLsCkYeDBgCGficZEGia6DViay65IyaqbmEA/132","comment_is_top":false,"comment_ctime":1593341154,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593341154","product_id":100033601,"comment_content":"请问老师：给到GPU的是绘制指令 还是 经过合成线程绘制并分块的图块？文中“有了绘制列表之后，就需要进入光栅化阶段了，光栅化就是按照绘制列表中的指令生成图片”的意思是指令，那为啥会存在图片从计算机内存上传到GPU内存的问题？","like_count":0},{"had_liked":false,"id":173440,"user_name":"sugar","can_delete":false,"product_type":"c1","uid":1167046,"ip_address":"","ucode":"454538FF253B5F","user_header":"https://static001.geekbang.org/account/avatar/00/11/ce/c6/958212b5.jpg","comment_is_top":false,"comment_ctime":1579538541,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579538541","product_id":100033601,"comment_content":"请问老师，本节提到的 分层 分块 合成 等操作都是在skia中做的吗？ 查阅了一下源码并没找到，想请教一下具体的位置？","like_count":0},{"had_liked":false,"id":166103,"user_name":"-_-|||","can_delete":false,"product_type":"c1","uid":1328142,"ip_address":"","ucode":"94B21594658BF9","user_header":"https://static001.geekbang.org/account/avatar/00/14/44/0e/ce14b7d3.jpg","comment_is_top":false,"comment_ctime":1577404863,"is_pvip":false,"discussion_count":2,"race_medal":1,"score":"1577404863","product_id":100033601,"comment_content":"Js动画操作使用translateX相比于position 中left值的改变优势是什么？它们都会重绘重拍？","like_count":0,"discussions":[{"author":{"id":1167046,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ce/c6/958212b5.jpg","nickname":"sugar","note":"","ucode":"454538FF253B5F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":145183,"discussion_content":"按之前在stackoverflow看到的说法是translate做了特殊的优化，特别是3d那个api会基于gpu加速。结合老师这节的阐释，我的理解应该是translate的属性会拎出来单独放一个layer？ gpu方面的优化暂时没找到chromium/skia源码中的位置，渴望老师指正","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579538768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1374421,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f8/d5/fd04fcbc.jpg","nickname":"Kite","note":"","ucode":"9DACE8E0EC84A6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1167046,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ce/c6/958212b5.jpg","nickname":"sugar","note":"","ucode":"454538FF253B5F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":236643,"discussion_content":"我也是这样理解的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587112035,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":145183,"ip_address":""},"score":236643,"extra":""}]}]},{"had_liked":false,"id":160502,"user_name":"-_-|||","can_delete":false,"product_type":"c1","uid":1328142,"ip_address":"","ucode":"94B21594658BF9","user_header":"https://static001.geekbang.org/account/avatar/00/14/44/0e/ce14b7d3.jpg","comment_is_top":false,"comment_ctime":1575965961,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1575965961","product_id":100033601,"comment_content":"translate3d 相比于 translate 合成线程渲染，不仅合成线程会渲染还会有调用GPU加速？","like_count":0},{"had_liked":false,"id":156259,"user_name":"江谢木","can_delete":false,"product_type":"c1","uid":1563403,"ip_address":"","ucode":"E1B1B0F0F03D41","user_header":"https://static001.geekbang.org/account/avatar/00/17/db/0b/f0ded153.jpg","comment_is_top":false,"comment_ctime":1574844209,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574844209","product_id":100033601,"comment_content":"老师，文中说的一副图片、一帧，指的就是一个图层？","like_count":0},{"had_liked":false,"id":153044,"user_name":"钓人的鱼","can_delete":false,"product_type":"c1","uid":1663106,"ip_address":"","ucode":"FB437B918E5868","user_header":"https://static001.geekbang.org/account/avatar/00/19/60/82/1d8c8c27.jpg","comment_is_top":false,"comment_ctime":1574146312,"is_pvip":false,"replies":[{"id":"59305","content":"加餐会提到一些，但是不是专门讲这几个的","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1574481466,"ip_address":"","comment_id":153044,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574146312","product_id":100033601,"comment_content":"希望老师就 重排、重绘、合成这一块弄个加餐，我自己测试出来感觉没什么变化，不知道为什么，也不知道怎么进行有针对性的分析","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475026,"discussion_content":"加餐会提到一些，但是不是专门讲这几个的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574481466,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150848,"user_name":"Crack","can_delete":false,"product_type":"c1","uid":1638828,"ip_address":"","ucode":"BA9573576069C2","user_header":"https://static001.geekbang.org/account/avatar/00/19/01/ac/0a84e410.jpg","comment_is_top":false,"comment_ctime":1573616470,"is_pvip":false,"replies":[{"id":"58022","content":"这里面执行的是合成操作，效率最高","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1573623090,"ip_address":"","comment_id":150848,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573616470","product_id":100033601,"comment_content":"compositing layer中不会进行重绘重排这些操作吗？","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474287,"discussion_content":"这里面执行的是合成操作，效率最高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573623090,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140037,"user_name":"渴望做梦","can_delete":false,"product_type":"c1","uid":1398219,"ip_address":"","ucode":"9EB47530A69C91","user_header":"https://static001.geekbang.org/account/avatar/00/15/55/cb/1efe460a.jpg","comment_is_top":false,"comment_ctime":1570793841,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1570793841","product_id":100033601,"comment_content":"老师，是每一个指令生成一个图层吗？","like_count":0,"discussions":[{"author":{"id":1663106,"avatar":"https://static001.geekbang.org/account/avatar/00/19/60/82/1d8c8c27.jpg","nickname":"钓人的鱼","note":"","ucode":"FB437B918E5868","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45983,"discussion_content":"应该是 一个指令完成一个任务，比如 div｛background：red；box-shadow：｝就会有两个 指令生成，一个是 填充背景色的指令，一个是 合成阴影的指令","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573106101,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139222,"user_name":"Luke","can_delete":false,"product_type":"c1","uid":1003156,"ip_address":"","ucode":"4060B4E2EF1D13","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4e/94/0b22b6a2.jpg","comment_is_top":false,"comment_ctime":1570588263,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1570588263","product_id":100033601,"comment_content":"老师能讲解一下BFC和图层的区别与联系吗？总感觉它们之间有点相似。","like_count":0,"discussions":[{"author":{"id":1623567,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c6/0f/3937645e.jpg","nickname":"NBE01","note":"","ucode":"DF0D22D4495D54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":26924,"discussion_content":"还是有些不同的， 你可以上网查查 如何强制提升出来一个合成图层 Compositing Layer","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570624408,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138249,"user_name":"晓小东","can_delete":false,"product_type":"c1","uid":1194643,"ip_address":"","ucode":"93F9462EAAA63C","user_header":"https://static001.geekbang.org/account/avatar/00/12/3a/93/d7be8a1a.jpg","comment_is_top":false,"comment_ctime":1570114125,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1570114125","product_id":100033601,"comment_content":"打开Permance, 点击start按钮， 记录30秒内的性能监测， 发现如下区别： set-will-change(Main trhead,  GPU, chrome_childIOThead, Compositor)&#47;no-set-will-change(Main thread, Raster, GPU, chrome_childIOThead,  Compositor) ， 两者区别也很大， no-set-will-change中发现GPU运行了很长时间， 似乎很繁忙。 老师 我猜测是不是， 没有独立的层， 每次改变css, 每次都要整体进行raster(光栅）光栅的过程进行GPU进程通讯调用(chrome_childIOThead task也比较频繁）所以最为繁忙的为GPU， 主线程的任务看了下基本上没有差别。但是每一帧的时间明显差了好多。 我看了Life of a Pixel， 感觉还有一些懵懂（可能英文不太好吧）， 老师有空是否可以结合一下， 把浏览器渲染流水线流程，在给剖析一下。","like_count":0},{"had_liked":false,"id":137700,"user_name":"晓小东","can_delete":false,"product_type":"c1","uid":1194643,"ip_address":"","ucode":"93F9462EAAA63C","user_header":"https://static001.geekbang.org/account/avatar/00/12/3a/93/d7be8a1a.jpg","comment_is_top":false,"comment_ctime":1569825552,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1569825552","product_id":100033601,"comment_content":"chrome 无痕模式 开启more-tools -&gt; Rendering -&gt; FPS meter no-will-changes(fps:12, gpu-memory：15MB) set-will-change(fps:53， gpu-memory:4.5MB)","like_count":0,"discussions":[{"author":{"id":1663106,"avatar":"https://static001.geekbang.org/account/avatar/00/19/60/82/1d8c8c27.jpg","nickname":"钓人的鱼","note":"","ucode":"FB437B918E5868","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":53223,"discussion_content":"不是 设置了  will-change 内存会更大嘛？为什么你的还少了那么多？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574146653,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137657,"user_name":"晓小东","can_delete":false,"product_type":"c1","uid":1194643,"ip_address":"","ucode":"93F9462EAAA63C","user_header":"https://static001.geekbang.org/account/avatar/00/12/3a/93/d7be8a1a.jpg","comment_is_top":false,"comment_ctime":1569813586,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1569813586","product_id":100033601,"comment_content":"单独进程打开两个Tab, 一个tab设置set-will-change, 一个tab no-will-change, 打开浏览器任务管理器查看页面内存情况set-will-change:29M; no-will-change:21M; 有个疑问老师， 如果在一个Tab进行切换时当从no-will-change 到 set-will-change 再到no-will-change， 刷新发现内存变化21M -&gt; 29M -&gt; 29M降不下了 chrome canary版本","like_count":0},{"had_liked":false,"id":137392,"user_name":"伪装","can_delete":false,"product_type":"c1","uid":1614884,"ip_address":"","ucode":"F484F3ADFEB060","user_header":"https://static001.geekbang.org/account/avatar/00/18/a4/24/0f4a9157.jpg","comment_is_top":false,"comment_ctime":1569728404,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1569728404","product_id":100033601,"comment_content":"will-change有很多的局限性 而且浏览器兼容不是很好 在移动端 cpu开销很大","like_count":0,"discussions":[{"author":{"id":1623567,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c6/0f/3937645e.jpg","nickname":"NBE01","note":"","ucode":"DF0D22D4495D54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":26928,"discussion_content":"开销大是因为 合成图层开的太多了。 有些不必要的提升需要优化掉，具体的看chrome控制台的layer。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570624546,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137362,"user_name":"Sobine","can_delete":false,"product_type":"c1","uid":1381062,"ip_address":"","ucode":"8E90C825D54839","user_header":"https://static001.geekbang.org/account/avatar/00/15/12/c6/c6fab5d8.jpg","comment_is_top":false,"comment_ctime":1569723950,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569723950","product_id":100033601,"comment_content":"老师请教一个问题，spa页面有外链到别人家的网站，新开页面报错如下，error 404—bad request .From RFC 2068 Hypertext Transfer protocol—HTTP&#47;1.1:","like_count":0},{"had_liked":false,"id":137342,"user_name":"Snow同學","can_delete":false,"product_type":"c1","uid":1390875,"ip_address":"","ucode":"231E98C721E4D2","user_header":"https://static001.geekbang.org/account/avatar/00/15/39/1b/bcabd223.jpg","comment_is_top":false,"comment_ctime":1569719984,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1569719984","product_id":100033601,"comment_content":"文中说：我们介绍过 DOM 树生成之后，还要经历布局、分层、绘制、合成，显示。<br>1.那如何用代码检测页面第一次打开时，元素的合成和显示阶段的完？<br>2.还有页面显示后，利用ajax请求会内容，在某个节点插入一段html，如何用代码检测新插入的html的合成和显示阶段完成时间？","like_count":0,"discussions":[{"author":{"id":1623567,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c6/0f/3937645e.jpg","nickname":"NBE01","note":"","ucode":"DF0D22D4495D54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":26936,"discussion_content":"在performance选项卡中，有main thread， 里面这些都有， 还包括 光纤线程。 都能看到的。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570624880,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1390875,"avatar":"https://static001.geekbang.org/account/avatar/00/15/39/1b/bcabd223.jpg","nickname":"Snow同學","note":"","ucode":"231E98C721E4D2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1623567,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c6/0f/3937645e.jpg","nickname":"NBE01","note":"","ucode":"DF0D22D4495D54","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":32129,"discussion_content":"你好，我想说的是用代码检测的方式。要写代码的那种。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571004955,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":26936,"ip_address":""},"score":32129,"extra":""}]}]},{"had_liked":false,"id":137292,"user_name":"易儿易","can_delete":false,"product_type":"c1","uid":1242864,"ip_address":"","ucode":"B15D1031CA841E","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqLcWH3mSPmhjrs1aGL4b3TqI7xDqWWibM4nYFrRlp0z7FNSWaJz0mqovrgIA7ibmrPt8zRScSfRaqQ/132","comment_is_top":false,"comment_ctime":1569678624,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569678624","product_id":100033601,"comment_content":"大道至简！<br>","like_count":0},{"had_liked":false,"id":137261,"user_name":"空间","can_delete":false,"product_type":"c1","uid":1294597,"ip_address":"","ucode":"2C83162E9E914A","user_header":"https://static001.geekbang.org/account/avatar/00/13/c1/05/fd1d47b6.jpg","comment_is_top":false,"comment_ctime":1569671718,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569671718","product_id":100033601,"comment_content":"请教两个问题: 1，我经常使用css动画的方法是用js触发，比如加个css class，或者直接操作element style。这样是否会导致文中这样的css优化效果失效？2，能否比较css动画，canvase 2D动画和webgl动画的性能？比如在插值动画和逐帧动画不同场景下。","like_count":0}]}