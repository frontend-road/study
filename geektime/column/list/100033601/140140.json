{"id":140140,"title":"22 | DOM树：JavaScript是如何影响DOM树构建的？","content":"<p>在<a href=\"https://time.geekbang.org/column/article/138844\">上一篇文章</a>中，我们通过开发者工具中的网络面板，介绍了网络请求过程的几种<strong>性能指标</strong>以及对页面加载的影响。</p><p>而在渲染流水线中，后面的步骤都直接或者间接地依赖于DOM结构，所以本文我们就继续沿着网络数据流路径来<strong>介绍DOM树是怎么生成的</strong>。然后再基于DOM树的解析流程介绍两块内容：第一个是在解析过程中遇到JavaScript脚本，DOM解析器是如何处理的？第二个是DOM解析器是如何处理跨站点资源的？</p><h2>什么是DOM</h2><p>从网络传给渲染引擎的HTML文件字节流是无法直接被渲染引擎理解的，所以要将其转化为渲染引擎能够理解的内部结构，这个结构就是DOM。DOM提供了对HTML文档结构化的表述。在渲染引擎中，DOM有三个层面的作用。</p><ul>\n<li>从页面的视角来看，DOM是生成页面的基础数据结构。</li>\n<li>从JavaScript脚本视角来看，DOM提供给JavaScript脚本操作的接口，通过这套接口，JavaScript可以对DOM结构进行访问，从而改变文档的结构、样式和内容。</li>\n<li>从安全视角来看，DOM是一道安全防护线，一些不安全的内容在DOM解析阶段就被拒之门外了。</li>\n</ul><p>简言之，DOM是表述HTML的内部数据结构，它会将Web页面和JavaScript脚本连接起来，并过滤一些不安全的内容。</p><!-- [[[read_end]]] --><h2>DOM树如何生成</h2><p>在渲染引擎内部，有一个叫<strong>HTML解析器（HTMLParser）</strong>的模块，它的职责就是负责将HTML字节流转换为DOM结构。所以这里我们需要先要搞清楚HTML解析器是怎么工作的。</p><p>在开始介绍HTML解析器之前，我要先解释一个大家在留言区问到过好多次的问题：<strong>HTML解析器是等整个HTML文档加载完成之后开始解析的，还是随着HTML文档边加载边解析的？</strong></p><p>在这里我统一解答下，HTML解析器并不是等整个文档加载完成之后再解析的，而是<strong>网络进程加载了多少数据，HTML解析器便解析多少数据</strong>。</p><p>那详细的流程是怎样的呢？网络进程接收到响应头之后，会根据响应头中的content-type字段来判断文件的类型，比如content-type的值是“text/html”，那么浏览器就会判断这是一个HTML类型的文件，然后为该请求选择或者创建一个渲染进程。渲染进程准备好之后，<strong>网络进程和渲染进程之间会建立一个共享数据的管道</strong>，网络进程接收到数据后就往这个管道里面放，而渲染进程则从管道的另外一端不断地读取数据，并同时将读取的数据“喂”给HTML解析器。你可以把这个管道想象成一个“水管”，网络进程接收到的字节流像水一样倒进这个“水管”，而“水管”的另外一端是渲染进程的HTML解析器，它会动态接收字节流，并将其解析为DOM。</p><p>解答完这个问题之后，接下来我们就可以来详细聊聊DOM的具体生成流程了。</p><p>前面我们说过代码从网络传输过来是字节流的形式，那么后续字节流是如何转换为DOM的呢？你可以参考下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/1b/8c/1bfcd419acf6402c20ffc1a5b1909d8c.png?wh=1142*565\" alt=\"\"></p><center><span class=\"reference\">字节流转换为DOM</span></center><p>从图中你可以看出，字节流转换为DOM需要三个阶段。</p><p><strong>第一个阶段，通过分词器将字节流转换为Token。</strong></p><p>前面<a href=\"https://time.geekbang.org/column/article/131887\">《14 | 编译器和解释器：V8是如何执行一段JavaScript代码的？》</a>文章中我们介绍过，V8编译JavaScript过程中的第一步是做词法分析，将JavaScript先分解为一个个Token。解析HTML也是一样的，需要通过分词器先将字节流转换为一个个Token，分为Tag Token和文本Token。上述HTML代码通过词法分析生成的Token如下所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/b1/ac/b16d2fbb77e12e376ac0d7edec20ceac.png?wh=1142*151\" alt=\"\"></p><center><span class=\"reference\">生成的Token示意图</span></center><p>由图可以看出，Tag Token又分StartTag 和 EndTag，比如<code>&lt;body&gt;</code>就是StartTag ，<code>&lt;/body&gt;就是EndTag</code>，分别对于图中的蓝色和红色块，文本Token对应的绿色块。</p><p><strong>至于后续的第二个和第三个阶段是同步进行的，需要将Token解析为DOM节点，并将DOM节点添加到DOM树中。</strong></p><p>HTML解析器维护了一个<strong>Token栈结构</strong>，该Token栈主要用来计算节点之间的父子关系，在第一个阶段中生成的Token会被按照顺序压到这个栈中。具体的处理规则如下所示：</p><ul>\n<li>如果压入到栈中的是<strong>StartTag Token</strong>，HTML解析器会为该Token创建一个DOM节点，然后将该节点加入到DOM树中，它的父节点就是栈中相邻的那个元素生成的节点。</li>\n<li>如果分词器解析出来是<strong>文本Token</strong>，那么会生成一个文本节点，然后将该节点加入到DOM树中，文本Token是不需要压入到栈中，它的父节点就是当前栈顶Token所对应的DOM节点。</li>\n<li>如果分词器解析出来的是<strong>EndTag标签</strong>，比如是EndTag div，HTML解析器会查看Token栈顶的元素是否是StarTag div，如果是，就将StartTag  div从栈中弹出，表示该div元素解析完成。</li>\n</ul><p>通过分词器产生的新Token就这样不停地压栈和出栈，整个解析过程就这样一直持续下去，直到分词器将所有字节流分词完成。</p><p>为了更加直观地理解整个过程，下面我们结合一段HTML代码（如下），来一步步分析DOM树的生成过程。</p><pre><code>&lt;html&gt;\n&lt;body&gt;\n    &lt;div&gt;1&lt;/div&gt;\n    &lt;div&gt;test&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p>这段代码以字节流的形式传给了HTML解析器，经过分词器处理，解析出来的第一个Token是StartTag html，解析出来的Token会被压入到栈中，并同时创建一个html的DOM节点，将其加入到DOM树中。</p><p>这里需要补充说明下，<strong>HTML解析器开始工作时，会默认创建了一个根为document的空DOM结构</strong>，同时会将一个StartTag document的Token压入栈底。然后经过分词器解析出来的第一个StartTag html Token会被压入到栈中，并创建一个html的DOM节点，添加到document上，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/7a/f1/7a6cd022bd51a3f274cd994b1398bef1.png?wh=1142*676\" alt=\"\"></p><center><span class=\"reference\">解析到StartTag html时的状态</span></center><p>然后按照同样的流程解析出来StartTag body和StartTag div，其Token栈和DOM的状态如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/8c/a5/8c7ba966cebb0050b81c0385ffb4f2a5.png?wh=1142*676\" alt=\"\"></p><center><span class=\"reference\">解析到StartTag div时的状态</span></center><p>接下来解析出来的是第一个div的文本Token，渲染引擎会为该Token创建一个文本节点，并将该Token添加到DOM中，它的父节点就是当前Token栈顶元素对应的节点，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/dc/af/dc0ddd4e3bf3569555f4b1ebec7a8caf.png?wh=1142*692\" alt=\"\"></p><center><span class=\"reference\">解析出第一个文本Token时的状态</span></center><p>再接下来，分词器解析出来第一个EndTag div，这时候HTML解析器会去判断当前栈顶的元素是否是StartTag div，如果是则从栈顶弹出StartTag div，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/c4/a6/c4a255a8881ef9d21e419aa010ce24a6.png?wh=1142*608\" alt=\"\"></p><center><span class=\"reference\">元素弹出Token栈示意图</span></center><p>按照同样的规则，一路解析，最终结果如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/aa/2e/aabf14cde38b058c5203195db82ec22e.png?wh=1142*687\" alt=\"\"></p><center><span class=\"reference\">最终解析结果</span></center><p>通过上面的介绍，相信你已经清楚DOM是怎么生成的了。不过在实际生产环境中，HTML源文件中既包含CSS和JavaScript，又包含图片、音频、视频等文件，所以处理过程远比上面这个示范Demo复杂。不过理解了这个简单的Demo生成过程，我们就可以往下分析更加复杂的场景了。</p><h2>JavaScript是如何影响DOM生成的</h2><p>我们再来看看稍微复杂点的HTML文件，如下所示：</p><pre><code>&lt;html&gt;\n&lt;body&gt;\n    &lt;div&gt;1&lt;/div&gt;\n    &lt;script&gt;\n    let div1 = document.getElementsByTagName('div')[0]\n    div1.innerText = 'time.geekbang'\n    &lt;/script&gt;\n    &lt;div&gt;test&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p>我在两段div中间插入了一段JavaScript脚本，这段脚本的解析过程就有点不一样了。<code>&lt;script&gt;</code>标签之前，所有的解析流程还是和之前介绍的一样，但是解析到<code>&lt;script&gt;</code>标签时，渲染引擎判断这是一段脚本，此时HTML解析器就会暂停DOM的解析，因为接下来的JavaScript可能要修改当前已经生成的DOM结构。</p><p>通过前面DOM生成流程分析，我们已经知道当解析到script脚本标签时，其DOM树结构如下所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/41/54/4150e27b332fab9f5a10bfafb524ff54.png?wh=1142*1487\" alt=\"\"></p><center><span class=\"reference\">执行脚本时DOM的状态</span></center><p>这时候HTML解析器暂停工作，JavaScript引擎介入，并执行script标签中的这段脚本，因为这段JavaScript脚本修改了DOM中第一个div中的内容，所以执行这段脚本之后，div节点内容已经修改为time.geekbang了。脚本执行完成之后，HTML解析器恢复解析过程，继续解析后续的内容，直至生成最终的DOM。</p><p>以上过程应该还是比较好理解的，不过除了在页面中直接内嵌JavaScript脚本之外，我们还通常需要在页面中引入JavaScript文件，这个解析过程就稍微复杂了些，如下面代码：</p><pre><code>//foo.js\nlet div1 = document.getElementsByTagName('div')[0]\ndiv1.innerText = 'time.geekbang'\n</code></pre><pre><code>&lt;html&gt;\n&lt;body&gt;\n    &lt;div&gt;1&lt;/div&gt;\n    &lt;script type=&quot;text/javascript&quot; src='foo.js'&gt;&lt;/script&gt;\n    &lt;div&gt;test&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p>这段代码的功能还是和前面那段代码是一样的，不过这里我把内嵌JavaScript脚本修改成了通过JavaScript文件加载。其整个执行流程还是一样的，执行到JavaScript标签时，暂停整个DOM的解析，执行JavaScript代码，不过这里执行JavaScript时，需要先下载这段JavaScript代码。这里需要重点关注下载环境，因为<strong>JavaScript文件的下载过程会阻塞DOM解析</strong>，而通常下载又是非常耗时的，会受到网络环境、JavaScript文件大小等因素的影响。</p><p>不过Chrome浏览器做了很多优化，其中一个主要的优化是<strong>预解析操作</strong>。当渲染引擎收到字节流之后，会开启一个预解析线程，用来分析HTML文件中包含的JavaScript、CSS等相关文件，解析到相关文件之后，预解析线程会提前下载这些文件。</p><p>再回到DOM解析上，我们知道引入JavaScript线程会阻塞DOM，不过也有一些相关的策略来规避，比如使用CDN来加速JavaScript文件的加载，压缩JavaScript文件的体积。另外，如果JavaScript文件中没有操作DOM相关代码，就可以将该JavaScript脚本设置为异步加载，通过async 或defer来标记代码，使用方式如下所示：</p><pre><code> &lt;script async type=&quot;text/javascript&quot; src='foo.js'&gt;&lt;/script&gt;\n</code></pre><pre><code>&lt;script defer type=&quot;text/javascript&quot; src='foo.js'&gt;&lt;/script&gt;\n</code></pre><p>async和defer虽然都是异步的，不过还有一些差异，使用async标志的脚本文件一旦加载完成，会立即执行；而使用了defer标记的脚本文件，需要在DOMContentLoaded事件之前执行。</p><p>现在我们知道了JavaScript是如何阻塞DOM解析的了，那接下来我们再来结合文中代码看看另外一种情况：</p><pre><code>//theme.css\ndiv {color:blue}\n</code></pre><pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;style src='theme.css'&gt;&lt;/style&gt;\n    &lt;/head&gt;\n&lt;body&gt;\n    &lt;div&gt;1&lt;/div&gt;\n    &lt;script&gt;\n            let div1 = document.getElementsByTagName('div')[0]\n            div1.innerText = 'time.geekbang' //需要DOM\n            div1.style.color = 'red'  //需要CSSOM\n        &lt;/script&gt;\n    &lt;div&gt;test&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p>该示例中，JavaScript代码出现了 <code>div1.style.color = ‘red'</code> 的语句，它是用来操纵CSSOM的，所以在执行JavaScript之前，需要先解析JavaScript语句之上所有的CSS样式。所以如果代码里引用了外部的CSS文件，那么在执行JavaScript之前，还需要等待外部的CSS文件下载完成，并解析生成CSSOM对象之后，才能执行JavaScript脚本。</p><p>而JavaScript引擎在解析JavaScript之前，是不知道JavaScript是否操纵了CSSOM的，所以渲染引擎在遇到JavaScript脚本时，不管该脚本是否操纵了CSSOM，都会执行CSS文件下载，解析操作，再执行JavaScript脚本。</p><p>所以说JavaScript脚本是依赖样式表的，这又多了一个阻塞过程。至于如何优化，我们在下篇文章中再来深入探讨。</p><p>通过上面的分析，我们知道了JavaScript会阻塞DOM生成，而样式文件又会阻塞JavaScript的执行，所以在实际的工程中需要重点关注JavaScript文件和样式表文件，使用不当会影响到页面性能的。</p><h2>总结</h2><p>好了，今天就讲到这里，下面我来总结下今天的内容。</p><p>首先我们介绍了DOM是如何生成的，然后又基于DOM的生成过程分析了JavaScript是如何影响到DOM生成的。因为CSS和JavaScript都会影响到DOM的生成，所以我们又介绍了一些加速生成DOM的方案，理解了这些，能让你更加深刻地理解如何去优化首次页面渲染。</p><p>额外说明一下，渲染引擎还有一个安全检查模块叫XSSAuditor，是用来检测词法安全的。在分词器解析出来Token之后，它会检测这些模块是否安全，比如是否引用了外部脚本，是否符合CSP规范，是否存在跨站点请求等。如果出现不符合规范的内容，XSSAuditor会对该脚本或者下载任务进行拦截。详细内容我们会在后面的安全模块介绍，这里就不赘述了。</p><h2>思考时间</h2><p>看下面这样一段代码，你认为打开这个HTML页面，页面显示的内容是什么？</p><pre><code>&lt;html&gt;\n&lt;body&gt;\n    &lt;div&gt;1&lt;/div&gt;\n    &lt;script&gt;\n    let div1 = document.getElementsByTagName('div')[0]\n    div1.innerText = 'time.geekbang'\n\n    let div2 = document.getElementsByTagName('div')[1]\n    div2.innerText = 'time.geekbang.com'\n    &lt;/script&gt;\n    &lt;div&gt;test&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p>欢迎在留言区与我分享你的想法，也欢迎你在留言区记录你的思考过程。感谢阅读，如果你觉得这篇文章对你有帮助的话，也欢迎把它分享给更多的朋友。</p><p></p>","comments":[{"had_liked":false,"id":136173,"user_name":"Luke","can_delete":false,"product_type":"c1","uid":1003156,"ip_address":"","ucode":"4060B4E2EF1D13","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4e/94/0b22b6a2.jpg","comment_is_top":false,"comment_ctime":1569377097,"is_pvip":false,"discussion_count":24,"race_medal":0,"score":"474015779657","product_id":100033601,"comment_content":"CSS不阻塞dom的生成。<br>CSS不阻塞js的加载，但是会阻塞js的执行。<br>js会阻塞dom的生成，也就是会阻塞页面的渲染，那么css也有可能会阻塞页面的渲染。<br>如果把CSS放在文档的最后面加载执行，CSS不会阻塞DOM的生成，也不会阻塞JS，但是浏览器在解析完DOM后，要花费额外时间来解析CSS，而不是在解析DOM的时候，并行解析CSS。<br>并且浏览器会先渲染出一个没有样式的页面，等CSS加载完后会再渲染成一个有样式的页面，页面会出现明显的闪动的现象。<br>所以应该把CSS放在文档的头部，尽可能的提前加载CSS；把JS放在文档的尾部，这样JS也不会阻塞页面的渲染。CSS会和JS并行解析，CSS解析也尽可能的不去阻塞JS的执行，从而使页面尽快的渲染完成。<br>","like_count":111,"discussions":[{"author":{"id":1394238,"avatar":"https://static001.geekbang.org/account/avatar/00/15/46/3e/f9ae9462.jpg","nickname":"盖世英雄","note":"","ucode":"50CD6CCD4D8B76","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379764,"discussion_content":"js放底部，仍然会阻塞渲染，只是不阻塞解析Html\n\nCss没有解析完，是不会执行js的，因为js可能操作Cssom","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1624116396,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1078786,"avatar":"https://static001.geekbang.org/account/avatar/00/10/76/02/ce50af35.jpg","nickname":"梦见君笑","note":"","ucode":"7C06D6351D75B5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350998,"discussion_content":"CSS 不阻塞DOM的解析，但是阻塞DOM的渲染（因为解析DOM树和解析CSSOM树是并行的，但是DOM树和CSSOM合成渲染树，需要两者都是准备好）","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1614092663,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1240802,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ee/e2/23e44221.jpg","nickname":"余熙","note":"","ucode":"7F98DCFB899CB7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336365,"discussion_content":"CSS加载和解析，不阻塞dom的解析，但是layouttree需要等待CSS解析。\nCSS解析不阻塞js的加载，但是会阻塞js的执行。\njs执行会阻塞dom的生成，也就是会阻塞页面的渲染","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1608558514,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1913986,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/34/82/ed7a6c2c.jpg","nickname":"YSQ","note":"","ucode":"E862D188312EDF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1240802,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ee/e2/23e44221.jpg","nickname":"余熙","note":"","ucode":"7F98DCFB899CB7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337229,"discussion_content":"应该是Render Tree需要等待CSS OM解析完吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608826980,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":336365,"ip_address":""},"score":337229,"extra":""},{"author":{"id":1240802,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ee/e2/23e44221.jpg","nickname":"余熙","note":"","ucode":"7F98DCFB899CB7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1913986,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/34/82/ed7a6c2c.jpg","nickname":"YSQ","note":"","ucode":"E862D188312EDF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337263,"discussion_content":"Dom Tree, LayoutTree, LayerTree\nLayoutTree需要CSSOM做布局计算哦","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1608857810,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":337229,"ip_address":""},"score":337263,"extra":""},{"author":{"id":1394238,"avatar":"https://static001.geekbang.org/account/avatar/00/15/46/3e/f9ae9462.jpg","nickname":"盖世英雄","note":"","ucode":"50CD6CCD4D8B76","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":1240802,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ee/e2/23e44221.jpg","nickname":"余熙","note":"","ucode":"7F98DCFB899CB7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549903,"discussion_content":"DOM 解析和 渲染是两个阶段； JS 不仅影响DOM 解析，也影响页面渲染；\nJS 放在HTML 底部 是不影响DOM解析；但是仍然会影响渲染；","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1644290579,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":336365,"ip_address":""},"score":549903,"extra":""}]},{"author":{"id":1375214,"avatar":"https://static001.geekbang.org/account/avatar/00/14/fb/ee/e574554d.jpg","nickname":"王晓聪","note":"","ucode":"FAE8648A33BD62","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361703,"discussion_content":"除了“把JS放在文档的尾部，这样JS也不会阻塞页面的渲染” 这一句有问题，其他的没毛病","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1616734175,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1046141,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f6/7d/29432580.jpg","nickname":"诤","note":"","ucode":"1EEA4BDDD6227E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":188059,"discussion_content":"应该说是CSS和HTML并行解析吧","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1582791784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1822678,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/cf/d6/7f912c6d.jpg","nickname":"头号大家庭","note":"","ucode":"257EA88817AC98","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1046141,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f6/7d/29432580.jpg","nickname":"诤","note":"","ucode":"1EEA4BDDD6227E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":199251,"discussion_content":"并不是哦  可以打开 performance 面板看一下  Parse Stylesheet 和 Parse HTML 都是分开在渲染主线程运行的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1583576105,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":188059,"ip_address":""},"score":199251,"extra":""},{"author":{"id":1622655,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c2/7f/7b22f12b.jpg","nickname":"乔","note":"","ucode":"1286F8742B4A01","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1822678,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/cf/d6/7f912c6d.jpg","nickname":"头号大家庭","note":"","ucode":"257EA88817AC98","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":266097,"discussion_content":"确实是这样，那为什么说css不阻塞dom的解析？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589468981,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":199251,"ip_address":""},"score":266097,"extra":""}]},{"author":{"id":1673843,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erXRaa98A3zjLDkOibUJV1254aQ4EYFTbSLJuEvD0nXicMNA8pLoxOfHf5kPTbGLXNicg8CPFH3Tn0mA/132","nickname":"Geek_115bc8","note":"","ucode":"71FBC9F02AFE1B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":570065,"discussion_content":"但是如果css放在文档的最后，他可能会阻塞js执行啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651652698,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1963947,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/0iaIWczXBpgnVVQwKmKNg62rMUDhMyuZOD9BMzbcfg37zu5NFMAAm79FTwsiblmMHfSu0ew6BHWRTyaCR7s8vbtw/132","nickname":"Geek_392d92","note":"","ucode":"73F65CC90BE036","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":356394,"discussion_content":"前三句话真的是总结的让人无语。。。一三两句话矛盾。第二句话css会阻塞js的执行，为何会扯到阻不阻塞js的加载呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615577171,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1651618,"avatar":"https://static001.geekbang.org/account/avatar/00/19/33/a2/585be249.jpg","nickname":"草原上的骆驼🐫","note":"","ucode":"F0B12CB1FEED84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":247662,"discussion_content":"老师文章不是说浏览器有预检查机制吗，会提前下载文件呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587820672,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2136469,"avatar":"https://static001.geekbang.org/account/avatar/00/20/99/95/1e332315.jpg","nickname":"Geek_2014ce","note":"","ucode":"167B4CCDA4D5BD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1651618,"avatar":"https://static001.geekbang.org/account/avatar/00/19/33/a2/585be249.jpg","nickname":"草原上的骆驼🐫","note":"","ucode":"F0B12CB1FEED84","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364506,"discussion_content":"只是会提前下载，但是到了js执行的时候没有下载完呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617505714,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":247662,"ip_address":""},"score":364506,"extra":""}]},{"author":{"id":1822678,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/cf/d6/7f912c6d.jpg","nickname":"头号大家庭","note":"","ucode":"257EA88817AC98","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":199254,"discussion_content":"performance 试了下  外部 css 貌似并不会阻塞内联 script 脚本的执行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583576354,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1298172,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ce/fc/aaec47e6.jpg","nickname":"少华","note":"","ucode":"A84BBFCEECD91C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":23391,"discussion_content":"把JS放在文档的尾部，js执行的时候也是会阻塞页面的渲染，你可以写个demo测试下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569811004,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":8,"child_discussions":[{"author":{"id":1502796,"avatar":"https://static001.geekbang.org/account/avatar/00/16/ee/4c/dc3da8f1.jpg","nickname":"π_π蔚","note":"","ucode":"DED817B325A9E9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1298172,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ce/fc/aaec47e6.jpg","nickname":"少华","note":"","ucode":"A84BBFCEECD91C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":46797,"discussion_content":"js无论放在哪里，执行的时候一定会阻塞页面的渲染。我理解，放到文档尾部，是为了不阻塞在这个脚本之前的元素的渲染","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1573209998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":23391,"ip_address":""},"score":46797,"extra":""},{"author":{"id":1394238,"avatar":"https://static001.geekbang.org/account/avatar/00/15/46/3e/f9ae9462.jpg","nickname":"盖世英雄","note":"","ucode":"50CD6CCD4D8B76","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":1502796,"avatar":"https://static001.geekbang.org/account/avatar/00/16/ee/4c/dc3da8f1.jpg","nickname":"π_π蔚","note":"","ucode":"DED817B325A9E9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379763,"discussion_content":"你的理解不对的，把js放页面尾部，不影响上面的DOM解析，但影响Dom渲染，即使放底下，仍然影响全部的渲染！因为js可能操作Dom，所以浏览器一定等js执行完再渲染！\n   否则浏览器完上面的DOM，底部的js再操作DOM，岂不是又要重新渲染？\n\n  所以js无论放哪里都会阻塞页面的渲染的！\n\n  自己可以实验：页面底部执行一个for循环100000次，\n打印，打印结束前，页面根本没内容！\n\n 不要凭感觉，要动手实验！","likes_number":12,"is_delete":false,"is_hidden":false,"ctime":1624116235,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":46797,"ip_address":""},"score":379763,"extra":""},{"author":{"id":1902607,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/08/0f/9ed70716.jpg","nickname":"非洲小白狼","note":"","ucode":"5F22AC9981C8C3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1394238,"avatar":"https://static001.geekbang.org/account/avatar/00/15/46/3e/f9ae9462.jpg","nickname":"盖世英雄","note":"","ucode":"50CD6CCD4D8B76","race_medal":1,"user_type":1,"is_pvip":false},"discussion":{"id":380263,"discussion_content":"js会阻止dom的解析，但是并不影响已经渲染出来的元素的显示","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624416771,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":379763,"ip_address":""},"score":380263,"extra":""}]}]},{"had_liked":false,"id":135866,"user_name":"Angus","can_delete":false,"product_type":"c1","uid":1377467,"ip_address":"","ucode":"7CC3BA1550FB5B","user_header":"https://static001.geekbang.org/account/avatar/00/15/04/bb/5e5c37c1.jpg","comment_is_top":false,"comment_ctime":1569290400,"is_pvip":false,"discussion_count":7,"race_medal":0,"score":"199137786016","product_id":100033601,"comment_content":"会显示time.geekbang和test，JavaScript代码执行的时候第二个div还没有生成DOM节点，所以是获取不到div2的，页面会报错Uncaught TypeError: Cannot set property &#39;innerText&#39; of undefined。<br><br>另外复习了下async和defer：<br><br>async：脚本并行加载，加载完成之后立即执行，执行时机不确定，仍有可能阻塞HTML解析，执行时机在load事件派发之前<br><br>defer：脚本并行加载，等待HTML解析完成之后，按照加载顺序执行脚本，执行时机在DOMContentLoaded事件派发之前","like_count":47,"discussions":[{"author":{"id":1482073,"avatar":"https://static001.geekbang.org/account/avatar/00/16/9d/59/1c084632.jpg","nickname":"Ron","note":"","ucode":"A8EC4E4D85CAE6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288586,"discussion_content":"Async和defer的应用都是避免解析阻塞。区别是async异步下载完毕之后立即执行，defer会在解析完毕，dom建立之后，但是DOMContentLoaded 事件触发之前按照script在document中出场的顺序依次执行。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1593796595,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1913986,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/34/82/ed7a6c2c.jpg","nickname":"YSQ","note":"","ucode":"E862D188312EDF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337230,"discussion_content":"async执行时机可能在DOMContentLoaded之前，也可能在之后，试想一个场景：DOM 构建完成后触发DOMContentLoaded，但此时还未加载完script","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608827248,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1243584,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f9/c0/20b4a205.jpg","nickname":"啊哈哈","note":"","ucode":"A8542946C03707","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332160,"discussion_content":"async 加载完脚本后，立即执行，为什么执行时机不确定？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607079339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":2246757,"avatar":"https://static001.geekbang.org/account/avatar/00/22/48/65/3277386b.jpg","nickname":"刘至","note":"","ucode":"030D761BDF4957","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1243584,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f9/c0/20b4a205.jpg","nickname":"啊哈哈","note":"","ucode":"A8542946C03707","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":368295,"discussion_content":"async所谓时机不确定，是指既可能dom构建完毕之前执行（阻塞dom构建），也可能在dom构建完毕之后执行，但总归是要在load事件之前执行。\n\ndefer就不一样了，它能确保在dom构建完毕后，DOMContentLoaded前执行。\n\n它们的共同点是加载不阻塞dom解析，区别是执行时机不同。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1618646179,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":332160,"ip_address":""},"score":368295,"extra":""},{"author":{"id":1167767,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d1/97/3abdd9cd.jpg","nickname":"stanny","note":"","ucode":"DD2BB91548A881","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2246757,"avatar":"https://static001.geekbang.org/account/avatar/00/22/48/65/3277386b.jpg","nickname":"刘至","note":"","ucode":"030D761BDF4957","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":372431,"discussion_content":"它们的共同点是加载不阻塞dom解析， async 执行时机不确定，如果说再dom 解析完毕之前加载完了就执行，不还是阻塞吗","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1620314484,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":368295,"ip_address":""},"score":372431,"extra":""},{"author":{"id":1613641,"avatar":"https://static001.geekbang.org/account/avatar/00/18/9f/49/2d502a32.jpg","nickname":"optimistic","note":"","ucode":"A304345D163D44","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1167767,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d1/97/3abdd9cd.jpg","nickname":"stanny","note":"","ucode":"DD2BB91548A881","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389013,"discussion_content":"async是下载不阻塞，，deffer是执行不阻塞","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1629089949,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":372431,"ip_address":""},"score":389013,"extra":""}]},{"author":{"id":1632217,"avatar":"https://static001.geekbang.org/account/avatar/00/18/e7/d9/83d1346c.jpg","nickname":"Lx","note":"","ucode":"90F4EEE985A9B0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":37273,"discussion_content":"两种执行时机有点疑问？load不是资源加载完就触发吗？为什么会跟js开始执行时机有顺序关系？defer也一样的疑问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571567707,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":213414,"user_name":"Geek_93f234","can_delete":false,"product_type":"c1","uid":1443661,"ip_address":"","ucode":"B9E9717622CDE2","user_header":"https://static001.geekbang.org/account/avatar/00/16/07/4d/408daf20.jpg","comment_is_top":false,"comment_ctime":1588408635,"is_pvip":false,"discussion_count":7,"race_medal":0,"score":"83192787259","product_id":100033601,"comment_content":"网络进程加载了多少数据，HTML 解析器便解析多少数据。这里有一个问题，如果是边加载边解析，那么一个标签还在网络传输过程中，浏览器还没有接受到script这个词段，那么浏览器又是怎么预加载的呢？","like_count":19,"discussions":[{"author":{"id":1230416,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c6/50/78b81553.jpg","nickname":"lfe","note":"","ucode":"006AF1C623627B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549394,"discussion_content":"让人感到矛盾的预加载","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643937149,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1406834,"avatar":"https://static001.geekbang.org/account/avatar/00/15/77/72/ad7056f9.jpg","nickname":"hb","note":"","ucode":"DCFA6CECF64E37","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385774,"discussion_content":"应该是暂停等待数据加载","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627268969,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1385297,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ereXO67Tb71gRRXOuMWaiaDkHq33d0KCfLmm0Vh0zkU1MRR6YHia6rZN4nRUPPjUZwLz5RLAg5mQ4RA/132","nickname":"渡松","note":"","ucode":"372616783DFBA4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":354295,"discussion_content":"置顶求答案","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615269784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1913986,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/34/82/ed7a6c2c.jpg","nickname":"YSQ","note":"","ucode":"E862D188312EDF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337231,"discussion_content":"可能预解析提供了类似async的功能？即解析到外部资源时并行加载。。这里我也没懂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608827412,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2114442,"avatar":"https://static001.geekbang.org/account/avatar/00/20/43/8a/9380fe92.jpg","nickname":"KeilingZhuang","note":"","ucode":"CDBA0336FE3E26","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319435,"discussion_content":"开一下脑洞，网络进程可能是两头下载的，即存在一个从文件尾部面往头部加载解析的线程，这个也印证了为何要把JS引入写在最后面。纯属个人脑洞，召唤老师解答^_^","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604029333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1474386,"avatar":"https://static001.geekbang.org/account/avatar/00/16/7f/52/6af41d32.jpg","nickname":"tiutiu","note":"","ucode":"4AB10D2003D66B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2114442,"avatar":"https://static001.geekbang.org/account/avatar/00/20/43/8a/9380fe92.jpg","nickname":"KeilingZhuang","note":"","ucode":"CDBA0336FE3E26","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":320451,"discussion_content":"如果是2头的话得等整个请求结束了才会开始解析，不符合边下载边解析","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604371319,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":319435,"ip_address":""},"score":320451,"extra":""},{"author":{"id":1375777,"avatar":"https://static001.geekbang.org/account/avatar/00/14/fe/21/df75ca94.jpg","nickname":"林浩","note":"","ucode":"266C06165AFA47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2114442,"avatar":"https://static001.geekbang.org/account/avatar/00/20/43/8a/9380fe92.jpg","nickname":"KeilingZhuang","note":"","ucode":"CDBA0336FE3E26","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328661,"discussion_content":"写在后面是因为js会阻塞dom解析","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606206047,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":319435,"ip_address":""},"score":328661,"extra":""}]}]},{"had_liked":false,"id":152174,"user_name":"忘忧草的约定","can_delete":false,"product_type":"c1","uid":1114753,"ip_address":"","ucode":"F99D2F5D179B2A","user_header":"https://static001.geekbang.org/account/avatar/00/11/02/81/489e1cd4.jpg","comment_is_top":false,"comment_ctime":1573897419,"is_pvip":false,"replies":[{"id":"58530","content":"如果正在执行ParserHTML，那么页面只会显示之前绘制好的内容，举个极端点的例子，比如ParserHTML占用了主线程10秒，那么这10秒内，页面都不会发生新的绘制操作，也就是页面卡顿了10秒！<br>","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1573948750,"ip_address":"","comment_id":152174,"utype":1}],"discussion_count":3,"race_medal":0,"score":"40228603083","product_id":100033601,"comment_content":"老师请问一下：主线程在parseHtml时，是不是没办法执行执行paint等操作、那这时候页面又是如何绘制出来的呀？","like_count":9,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474737,"discussion_content":"如果正在执行ParserHTML，那么页面只会显示之前绘制好的内容，举个极端点的例子，比如ParserHTML占用了主线程10秒，那么这10秒内，页面都不会发生新的绘制操作，也就是页面卡顿了10秒！\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573948750,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2644996,"avatar":"","nickname":"Geek_2a1e86","note":"","ucode":"8573861C0EF092","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538381,"discussion_content":"就白屏了呗，或者是上一个网站的内容","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639401669,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2383973,"avatar":"https://static001.geekbang.org/account/avatar/00/24/60/65/0658ca66.jpg","nickname":"付伟超","note":"","ucode":"2CD9A5902B1FA8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339242,"discussion_content":"也证明了FP事件会创建空白页面","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609575839,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135781,"user_name":"mfist","can_delete":false,"product_type":"c1","uid":1373624,"ip_address":"","ucode":"4F99F422C23FB4","user_header":"https://static001.geekbang.org/account/avatar/00/14/f5/b8/9f165f4b.jpg","comment_is_top":false,"comment_ctime":1569278923,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"27339082699","product_id":100033601,"comment_content":"开始看文章的时候就在想如果js获取的dom还没有解析出来，会如何处理，结果思考题就是这个。<br><br>会两行显示，一行是time.geekbang 另外一行是test。原因是script脚本执行的时候获取想不到第二个div，所以不会对后来的div有影响。<br><br>今日总结：<br>1. 首先介绍了什么是DOM（表述渲染引擎内部数据结构，它将Web页面和JavaScript脚本连接起来，并过滤不安全内容）、DOM树如何生成（网络进程和渲染进程建立一个流式管道，HTML解析器直接解析，不需要等待text&#47;html类型的接口 接受完毕再进行解析），第一步：通过分词器将字节流转换为Token；第二步：将Token解析为DOM节点；第三步：将DOM节点添加到DOM树中。<br>2. JavaScript是如何影响DOM生成的？暂停html解析，下载解析执行完毕js之后再进行html解析（如果这期间使用到了cssDom，需要等待相应css过程）。预解析线程的优化（提前加载相应js css文件）<br>3. 渲染引擎还有一个安全检查模块XSSAuditor用来检测词法安全的","like_count":6,"discussions":[{"author":{"id":2033513,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/07/69/43cf2251.jpg","nickname":"Alan He","note":"","ucode":"A0780F4619D388","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":354390,"discussion_content":"JS执行报错，为什么不影响之后的DOM解析，比如出现白屏","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1615285297,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138040,"user_name":"欣欣向荣的万七七","can_delete":false,"product_type":"c1","uid":1386665,"ip_address":"","ucode":"ED6BB1BF8C29B8","user_header":"https://static001.geekbang.org/account/avatar/00/15/28/a9/99b74f3e.jpg","comment_is_top":false,"comment_ctime":1569991666,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"23044828146","product_id":100033601,"comment_content":"讲得太赞了！一直以来我都只记着加载表现结果（大部分文章都并不知道细节原因，而只能从做测试得到的结果来推测）。而老师的视角则可以从运行时进行讲解 这种知识是很难得的呀～","like_count":5},{"had_liked":false,"id":205382,"user_name":"HoSalt","can_delete":false,"product_type":"c1","uid":1156074,"ip_address":"","ucode":"610B03E2A002D1","user_header":"https://static001.geekbang.org/account/avatar/00/11/a3/ea/53333dd5.jpg","comment_is_top":false,"comment_ctime":1586603801,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"18766472985","product_id":100033601,"comment_content":"老师，CSSOM的生成依赖于DOM吗？","like_count":4,"discussions":[{"author":{"id":2444863,"avatar":"https://static001.geekbang.org/account/avatar/00/25/4e/3f/3e84f39e.jpg","nickname":"Chin 是我啊","note":"","ucode":"F52E85B13C7BAC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589438,"discussion_content":"不依赖吧，可以并行解析的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1664932322,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":269417,"user_name":"余熙","can_delete":false,"product_type":"c1","uid":1240802,"ip_address":"","ucode":"7F98DCFB899CB7","user_header":"https://static001.geekbang.org/account/avatar/00/12/ee/e2/23e44221.jpg","comment_is_top":false,"comment_ctime":1608637974,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14493539862","product_id":100033601,"comment_content":"这是需求本身要求的: DOM 生成依赖 JS加载和执行，JS 依赖 CSS加载和解析。<br><br>DOM 生成等待 JS: <br>解析到&lt;script&gt;标签时，渲染引擎判断这是一段脚本，此时 HTML 解析器就会暂停 DOM 的解析，因为接下来的 JavaScript 可能要修改当前已经生成的 DOM 结构。<br><br>JS 等待 CSS加载和解析：<br>JavaScript 引擎在解析 JavaScript 之前，是不知道 JavaScript 是否操纵了 CSSOM 的，所以渲染引擎在遇到 JavaScript 脚本时，不管该脚本是否操纵了 CSSOM，都会执行 CSS 文件下载，解析操作，再执行 JavaScript 脚本。","like_count":3},{"had_liked":false,"id":295621,"user_name":"sky","can_delete":false,"product_type":"c1","uid":1060892,"ip_address":"","ucode":"B29CA98AC45F88","user_header":"https://static001.geekbang.org/account/avatar/00/10/30/1c/e160955d.jpg","comment_is_top":false,"comment_ctime":1622517680,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10212452272","product_id":100033601,"comment_content":"有个问题，网络传输过程中，传输包有可能是乱序的，如果index.html没有加载完，怎么保证传输回来的index.html字节流不是乱序的呢。这样边加载边解析不会有问题吗？","like_count":2,"discussions":[{"author":{"id":2211363,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoWoXojHwtbL72K6oXgbiaThl5UuNlkNyWFpw5klRzQ7RhIhNOXtkgmH4h4d0AyWShk2D41emXM5PQ/132","nickname":"玲珑佩","note":"","ucode":"57FEC507F8DEDB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378082,"discussion_content":"这是tcp的知识点，tcp有长度限制，所以内容大多是由多个包组成的，而tcp有重排序+重传机制保证了最后消息体是正确的顺序","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623052406,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1598828,"avatar":"https://static001.geekbang.org/account/avatar/00/18/65/6c/5cb98fc3.jpg","nickname":"locke","note":"","ucode":"DD0554D06C7937","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377688,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622776055,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":220570,"user_name":"张萌","can_delete":false,"product_type":"c1","uid":1377299,"ip_address":"","ucode":"89C08DB3239BE5","user_header":"https://static001.geekbang.org/account/avatar/00/15/04/13/84d35588.jpg","comment_is_top":false,"comment_ctime":1590289096,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10180223688","product_id":100033601,"comment_content":"一个很长的 html 文档，浏览器会分段进行渲染，一般是按什么规则分段的？","like_count":2},{"had_liked":false,"id":169807,"user_name":"不二","can_delete":false,"product_type":"c1","uid":1253124,"ip_address":"","ucode":"B018B32EDB44E5","user_header":"https://static001.geekbang.org/account/avatar/00/13/1f/04/1cddf65b.jpg","comment_is_top":false,"comment_ctime":1578449503,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"10168384095","product_id":100033601,"comment_content":"老师，思考题有个疑问：首先html解析器，解析到完&lt;div&gt;1&lt;&#47;div&gt;，此时dom树里是没有&lt;div&gt;test&lt;&#47;div&gt;的，然后开始i 解析script标签，在解析过程中，发现&lt;div&gt;test&lt;&#47;div&gt;找不到，所以此时js会报错，既然此时js报错了，不会阻止后面其他dom的生成吗？为什么页面&lt;div&gt;test&lt;&#47;div&gt;还是显示了出来？求解答","like_count":2,"discussions":[{"author":{"id":1231133,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c9/1d/c7586cfc.jpg","nickname":"Zkerhcy","note":"","ucode":"43A883F6FB6070","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284214,"discussion_content":"JS引擎和渲染引擎是两个线程在干活","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1592474450,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1644811,"avatar":"https://static001.geekbang.org/account/avatar/00/19/19/0b/13329677.jpg","nickname":"喵喵喵","note":"","ucode":"16D61FB3591234","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":206664,"discussion_content":"是不是因为js这边报错并不影响这边dom树继续执行呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584425728,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":2707455,"avatar":"https://static001.geekbang.org/account/avatar/00/29/4f/ff/61152e87.jpg","nickname":"崔冬","note":"","ucode":"73A5C3561B6BD8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1644811,"avatar":"https://static001.geekbang.org/account/avatar/00/19/19/0b/13329677.jpg","nickname":"喵喵喵","note":"","ucode":"16D61FB3591234","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385203,"discussion_content":"是的，JS引擎和渲染引擎是两个线程在干活","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626942271,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":206664,"ip_address":""},"score":385203,"extra":""},{"author":{"id":1759808,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLRPuYmxCsTaEroajHBWnBALgPW1PFYXviarfeCpvIGap5xZ3uo6XOyW6QA4ibvuyX0w3YsW0aYRf8w/132","nickname":"Geek_2753cc","note":"","ucode":"9A108A3E1FFC6B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2707455,"avatar":"https://static001.geekbang.org/account/avatar/00/29/4f/ff/61152e87.jpg","nickname":"崔冬","note":"","ucode":"73A5C3561B6BD8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557541,"discussion_content":"不是都在渲染进程的主线程执行吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647855966,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":385203,"ip_address":""},"score":557541,"extra":""},{"author":{"id":1759808,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLRPuYmxCsTaEroajHBWnBALgPW1PFYXviarfeCpvIGap5xZ3uo6XOyW6QA4ibvuyX0w3YsW0aYRf8w/132","nickname":"Geek_2753cc","note":"","ucode":"9A108A3E1FFC6B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2707455,"avatar":"https://static001.geekbang.org/account/avatar/00/29/4f/ff/61152e87.jpg","nickname":"崔冬","note":"","ucode":"73A5C3561B6BD8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557542,"discussion_content":"难道是js引擎报错，不代表线程报错？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647856125,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":385203,"ip_address":""},"score":557542,"extra":""}]}]},{"had_liked":false,"id":136112,"user_name":"ytd","can_delete":false,"product_type":"c1","uid":1038790,"ip_address":"","ucode":"C6AEA2D19E447A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d9/c6/8be8664d.jpg","comment_is_top":false,"comment_ctime":1569369877,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10159304469","product_id":100033601,"comment_content":"第一行是time.geekbang，第二行不会变，仍是test。原因就是浏览器是边加载边解析html的，而且遇到js会停止dom的解析执行js，js执行完毕后再接着解析dom。上面的代码，js执行时第2个div并未被解析为dom，所以js中获取不到，js会抛出错误TypeError，但js抛出错误并未影响html的继续解析。所以，第2个div保持原来的状态被解析出来。","like_count":2},{"had_liked":false,"id":135969,"user_name":"HB","can_delete":false,"product_type":"c1","uid":1607795,"ip_address":"","ucode":"80D38E55C6DBDF","user_header":"https://static001.geekbang.org/account/avatar/00/18/88/73/592c8ddd.jpg","comment_is_top":false,"comment_ctime":1569318035,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10159252627","product_id":100033601,"comment_content":"每节课都能学到东西，如果能更新快一点就好了。比如二四六改成一三五七","like_count":2,"discussions":[{"author":{"id":1121383,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1c/67/8bc3f8a6.jpg","nickname":"Ciel","note":"","ucode":"EB2FF38EE85EB0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":21451,"discussion_content":"质量重要啊，不要催hhh","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569485753,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1028582,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b1/e6/d09e9277.jpg","nickname":"Geek_aa4de8","note":"","ucode":"8BAF6A3B421E86","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":20905,"discussion_content":"大佬被催稿催的已经受不了了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569391763,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":244412,"user_name":"Leon","can_delete":false,"product_type":"c1","uid":1315812,"ip_address":"","ucode":"D1BF5F9EDA584E","user_header":"https://static001.geekbang.org/account/avatar/00/14/13/e4/3acadb90.jpg","comment_is_top":false,"comment_ctime":1598509920,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5893477216","product_id":100033601,"comment_content":"谷歌源码有涉及就好了<br>","like_count":1},{"had_liked":false,"id":142866,"user_name":"Lx","can_delete":false,"product_type":"c1","uid":1632217,"ip_address":"","ucode":"90F4EEE985A9B0","user_header":"https://static001.geekbang.org/account/avatar/00/18/e7/d9/83d1346c.jpg","comment_is_top":false,"comment_ctime":1571567874,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5866535170","product_id":100033601,"comment_content":"即使js脚本设置了a sync defer，也还是会被css的文件下载阻塞吧？","like_count":1,"discussions":[{"author":{"id":2539250,"avatar":"https://static001.geekbang.org/account/avatar/00/26/be/f2/60711467.jpg","nickname":"光影","note":"","ucode":"CE6EF591D3A7B5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534643,"discussion_content":"下载和执行是俩码事，js是执行的时候被阻塞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638248937,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136651,"user_name":"Hurry","can_delete":false,"product_type":"c1","uid":1138560,"ip_address":"","ucode":"12FEE2A50CC667","user_header":"https://static001.geekbang.org/account/avatar/00/11/5f/80/51269d88.jpg","comment_is_top":false,"comment_ctime":1569487606,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5864454902","product_id":100033601,"comment_content":"Token 栈，遇到结束标签，但是栈顶刚好不是对应开始标签, 这种错误，解析器，如何处理？","like_count":1,"discussions":[{"author":{"id":1231133,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c9/1d/c7586cfc.jpg","nickname":"Zkerhcy","note":"","ucode":"43A883F6FB6070","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284527,"discussion_content":"自己写个demo测试下就能明白的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592547938,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136176,"user_name":"成楠Peter","can_delete":false,"product_type":"c1","uid":1252977,"ip_address":"","ucode":"4D13E7368D8CF2","user_header":"https://static001.geekbang.org/account/avatar/00/13/1e/71/9dcbe6c4.jpg","comment_is_top":false,"comment_ctime":1569378007,"is_pvip":false,"discussion_count":8,"race_medal":0,"score":"5864345303","product_id":100033601,"comment_content":"针对文章中js和css加载我有一个疑问。<br>&lt;head&gt;<br>&lt;link ref=&quot;a.css&quot;&gt;<br>&lt;script src=&quot;b.js&quot;&gt;&lt;&#47;scripit&gt;<br>&lt;link ref=&quot;c.css&quot;&gt;<br>&lt;&#47;head&gt;<br>这三个资源的加载顺序是什么。按照老师文章中的意思，是先加载css文件，再加载js文件吗。<br>即a.css，c.css，b.js。<br>","like_count":1,"discussions":[{"author":{"id":1913986,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/34/82/ed7a6c2c.jpg","nickname":"YSQ","note":"","ucode":"E862D188312EDF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337234,"discussion_content":"我理解是按照a.css，b.js，c.css这个顺序吧，DOM解析到a.css时a.css开始加载，由于DOM解析和CSS解析是并行的，所以DOM会继续往下解析，解析到b.js时会阻塞DOM解析，由于js执行依赖于CSS OM，这时会等待a.css解析完成后再执行b.js，执行完成后DOM会继续往下解析至c.css...","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1608827895,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2514423,"avatar":"","nickname":"Xx","note":"","ucode":"0BE62D47E42B0E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1913986,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/34/82/ed7a6c2c.jpg","nickname":"YSQ","note":"","ucode":"E862D188312EDF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":360806,"discussion_content":"有预解析。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616541717,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":337234,"ip_address":""},"score":360806,"extra":""}]},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":33951,"discussion_content":"老师文章中已经说了 css 会阻塞 js 的执行 ，所以执行顺序为  a.css, b.css, b.js\n 页做了实验\n\n<!DOCTYPE html>\n<html lang=&#34;en&#34;>\n<head>\n</head>\n<body>\n    <!-- \n        div {\n            background-color: blue;\n        }\n     -->\n    <link rel=&#34;stylesheet&#34; href=&#34;./color.css&#34;/> \n    <div>\n        test\n    </div>\n    <script>\n            let div1 = document.getElementsByTagName(&#39;div&#39;)[0]\n            div1.style.backgroundColor = &#39;yellow&#39;\n    </script>\n        <!-- \n        div {\n            background-color: red;\n        }\n     -->\n    <link rel=&#34;stylesheet&#34; href=&#34;./color1.css&#34;/>\n</body>\n</html>\n\n这段代码，最后 div 的背景颜色为 js 设置的黄色","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1571150075,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1394410,"avatar":"https://static001.geekbang.org/account/avatar/00/15/46/ea/b86667b8.jpg","nickname":"王玄","note":"","ucode":"E54ABB340D1E49","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"discussion":{"id":100394,"discussion_content":"css的权重问题你考虑了吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577256962,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":33951,"ip_address":""},"score":100394,"extra":""},{"author":{"id":1394410,"avatar":"https://static001.geekbang.org/account/avatar/00/15/46/ea/b86667b8.jpg","nickname":"王玄","note":"","ucode":"E54ABB340D1E49","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"discussion":{"id":100406,"discussion_content":"<!DOCTYPE html>\n<html lang=&#34;en&#34;>\n\n<head>\n    <style>\n        .div {\n            background-color: yellow;\n        }\n    </style>\n</head>\n\n<body>\n    <!-- .div {\n        background-color: blue;\n    } -->\n    <link rel=&#34;stylesheet&#34; href=&#34;./color.css&#34; />\n    <div>test</div>\n    <script>\n        let div1 = document.getElementsByTagName(&#39;div&#39;)[0]\n        div1.classList.add(&#39;div&#39;);\n    </script>\n    <!-- .div {\n        background-color: red;\n    } -->\n    <link rel=&#34;stylesheet&#34; href=&#34;./color1.css&#34; />\n    <!-- 最终背景色位红色 -->\n</body>\n\n</html>","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1577257421,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":33951,"ip_address":""},"score":100406,"extra":""}]},{"author":{"id":1585967,"avatar":"https://static001.geekbang.org/account/avatar/00/18/33/2f/84f7d587.jpg","nickname":"YBB","note":"","ucode":"1507DBFE008715","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":25462,"discussion_content":"我也有这个疑问，我的感觉是js只会被前置的css阻塞、、","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1570530094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1913986,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/34/82/ed7a6c2c.jpg","nickname":"YSQ","note":"","ucode":"E862D188312EDF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337235,"discussion_content":"有个疑问是，css解析会阻塞js的执行， 那会不会阻塞js的加载呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608827973,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1623567,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c6/0f/3937645e.jpg","nickname":"NBE01","note":"","ucode":"DF0D22D4495D54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":26832,"discussion_content":"mark一下 应该是顺序执行吧，执行到b.js的时候会等待a.css 执行完毕才行，不过有预解析的存在，会不会把c.css也给提前了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570621226,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136000,"user_name":"王大可","can_delete":false,"product_type":"c1","uid":1003033,"ip_address":"","ucode":"9DBCA811C21C9B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4e/19/69f6e2ec.jpg","comment_is_top":false,"comment_ctime":1569324648,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5864291944","product_id":100033601,"comment_content":"time.geekbang<br>test<br>把script标签包裹的代码放入一个js文件中，在引入该文件<br>1. 放入第一个div之前页面显示<br>1<br>test <br>控制台报错；<br>2. 放入最后一个div之前页面显示<br>time.geekbang<br>time.geekbang.com ；<br>3.放入任何位置加入defer或async 显示<br>time.geekbang<br>time.geekbang.com ","like_count":1},{"had_liked":false,"id":135957,"user_name":"柒月","can_delete":false,"product_type":"c1","uid":1371240,"ip_address":"","ucode":"839A8F88C376A3","user_header":"https://static001.geekbang.org/account/avatar/00/14/ec/68/06d59613.jpg","comment_is_top":false,"comment_ctime":1569314616,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5864281912","product_id":100033601,"comment_content":"time.geekbang<br>test<br>get了，一直以为CSS的解析不会阻塞DOM的解析呢","like_count":1},{"had_liked":false,"id":356845,"user_name":"有一种踏实","can_delete":false,"product_type":"c1","uid":2634945,"ip_address":"上海","ucode":"CF9A6273741105","user_header":"https://static001.geekbang.org/account/avatar/00/28/34/c1/4e4917f5.jpg","comment_is_top":false,"comment_ctime":1662634829,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1662634829","product_id":100033601,"comment_content":"不是说现在没有 CSSOM 的概念吗？已经被重构优化成样式表？","like_count":0},{"had_liked":false,"id":355972,"user_name":"宇宙机吴彦祖","can_delete":false,"product_type":"c1","uid":1516856,"ip_address":"江苏","ucode":"2FC14CDFD65502","user_header":"https://static001.geekbang.org/account/avatar/00/17/25/38/d6644c30.jpg","comment_is_top":false,"comment_ctime":1661881825,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661881825","product_id":100033601,"comment_content":"哇更新了","like_count":1},{"had_liked":false,"id":345914,"user_name":"歪比巴卜","can_delete":false,"product_type":"c1","uid":3002823,"ip_address":"","ucode":"AD396BB8D643C8","user_header":"","comment_is_top":false,"comment_ctime":1652692980,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1652692980","product_id":100033601,"comment_content":"如果有预解析来提前下载css和js的话，那么js标签的async还有啥用吗？async标签不就是为了让js异步下载，在下载的阶段不阻塞dom解析，那如果已经有了预解析的下载了的话，aysnc就没用了不是吗？","like_count":0,"discussions":[{"author":{"id":2957881,"avatar":"","nickname":"Geek_74d527","note":"","ucode":"DC15B4CE79FFBF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577758,"discussion_content":"我的理解是，如果是同步的方式，在有预解析的状态下，可能由于网速原因，在需要执行该js脚本时，仍然没有下载好。这时就会阻塞，等待其下载完成。而async标签是让html parser跳过这个脚本，直到脚本下载好了再执行。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656321612,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":344572,"user_name":"Geek_115bc8","can_delete":false,"product_type":"c1","uid":1673843,"ip_address":"","ucode":"71FBC9F02AFE1B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erXRaa98A3zjLDkOibUJV1254aQ4EYFTbSLJuEvD0nXicMNA8pLoxOfHf5kPTbGLXNicg8CPFH3Tn0mA/132","comment_is_top":false,"comment_ctime":1651652556,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651652556","product_id":100033601,"comment_content":"老哥们，我想问一下，是不是在解析html时，遇到外部资源，比如img引入的图片，vedio，audio引入的音视频等加载也会阻塞dom的解析吗？","like_count":0},{"had_liked":false,"id":335025,"user_name":"Aki","can_delete":false,"product_type":"c1","uid":2807902,"ip_address":"","ucode":"B862D9A2F21480","user_header":"https://static001.geekbang.org/account/avatar/00/2a/d8/5e/3548334f.jpg","comment_is_top":false,"comment_ctime":1645259557,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645259557","product_id":100033601,"comment_content":"结果:<br>time.geekbang<br>test<br>第一个div插入成功，第二个还没有渲染到，所以插入失败，报错：Uncaught TypeError: Cannot set properties of undefined (setting &#39;innerText&#39;)","like_count":0},{"had_liked":false,"id":329750,"user_name":"Geek_e2c59e","can_delete":false,"product_type":"c1","uid":2708942,"ip_address":"","ucode":"14B60545ABB9F4","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/VzjUV1Io39wvVzLpdyF2ibIodS1JpTiaDKosSQSWDMgSjhxrWUSQYwUzK3cSeJW5Zz3zwLlDnyKcX1QAib9TCcvAw/132","comment_is_top":false,"comment_ctime":1641525389,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1641525389","product_id":100033601,"comment_content":"课后题，js 会阻塞dom 的渲染，div 2在获取之前还未渲染，所以获取到的值是undefined ，对undefined 进行操作，不是会报错嘛？为啥dom 还能正常渲染","like_count":0},{"had_liked":false,"id":323987,"user_name":"光影","can_delete":false,"product_type":"c1","uid":2539250,"ip_address":"","ucode":"CE6EF591D3A7B5","user_header":"https://static001.geekbang.org/account/avatar/00/26/be/f2/60711467.jpg","comment_is_top":false,"comment_ctime":1638249102,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638249102","product_id":100033601,"comment_content":"按照题目中所描述的，js操作了dom之后，html parser继续解析，这样是否会重新渲染呢？","like_count":0},{"had_liked":false,"id":320124,"user_name":"Geek_faff00","can_delete":false,"product_type":"c1","uid":2115834,"ip_address":"","ucode":"7986E1F2CA1040","user_header":"","comment_is_top":false,"comment_ctime":1636090878,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636090878","product_id":100033601,"comment_content":"&lt;html&gt;<br>&lt;body&gt;<br>  &lt;div&gt;1&lt;&#47;div&gt;<br>  &lt;link rel=&quot;stylesheet&quot; href=&quot;https:&#47;&#47;cdn.jsdelivr.net&#47;npm&#47;bootstrap@5.1.3&#47;dist&#47;css&#47;bootstrap.min.css&quot;&gt;<br>  &lt;div&gt;2&lt;&#47;div&gt;<br>&lt;&#47;body&gt;<br>&lt;&#47;html&gt;<br><br>测试结果为:  先显示1，待css加载完之后再显示12。<br><br>那么css的加载也会阻塞dom的解析？","like_count":0},{"had_liked":false,"id":316169,"user_name":"HXL","can_delete":false,"product_type":"c1","uid":2631455,"ip_address":"","ucode":"97298EEC95BFCA","user_header":"https://static001.geekbang.org/account/avatar/00/28/27/1f/42059b0f.jpg","comment_is_top":false,"comment_ctime":1634189658,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1634189658","product_id":100033601,"comment_content":"Js 直接阻塞htmlParser解析html生成Dom Tree.<br>Css 直接阻塞 js执行 ,间接阻塞 Dom Tree的生成.","like_count":0},{"had_liked":false,"id":309428,"user_name":"ronny","can_delete":false,"product_type":"c1","uid":2071110,"ip_address":"","ucode":"E2D3A70AAC89AA","user_header":"https://static001.geekbang.org/account/avatar/00/1f/9a/46/bb7d948e.jpg","comment_is_top":false,"comment_ctime":1630123364,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1630123364","product_id":100033601,"comment_content":"老师，js报错，不会影响DOM解析吗，因为是两个线程？","like_count":0},{"had_liked":false,"id":294714,"user_name":"小馋猫","can_delete":false,"product_type":"c1","uid":1387206,"ip_address":"","ucode":"9A4AF648E9D60E","user_header":"https://static001.geekbang.org/account/avatar/00/15/2a/c6/fab94c55.jpg","comment_is_top":false,"comment_ctime":1622071198,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622071198","product_id":100033601,"comment_content":"css不会阻塞dom加载，但会阻塞js执行<br>js会阻塞dom加载，因而会阻塞页面渲染，因此js放在最后加载<br>给script设置ansyc属性，该脚本会立即执行，设置defer属性，该脚本会等待资源dom加载完在执行","like_count":0},{"had_liked":false,"id":283674,"user_name":"张欣","can_delete":false,"product_type":"c1","uid":2448960,"ip_address":"","ucode":"557C42848C77E6","user_header":"https://static001.geekbang.org/account/avatar/00/25/5e/40/dee7906c.jpg","comment_is_top":false,"comment_ctime":1615880304,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615880304","product_id":100033601,"comment_content":"老师你好，在文章开头的时候介绍了html解析器是随着网络进程一遍加载一遍解析，那预解析操作是怎么实现的呢？想要实现预解析操作不是得等网络进程加载完html资源后才知道有没有外部引入css或者js","like_count":0},{"had_liked":false,"id":265107,"user_name":"云","can_delete":false,"product_type":"c1","uid":2107468,"ip_address":"","ucode":"705DF6B2A7654B","user_header":"https://static001.geekbang.org/account/avatar/00/20/28/4c/afe2ab34.jpg","comment_is_top":false,"comment_ctime":1606783926,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606783926","product_id":100033601,"comment_content":"当CSS后面跟着嵌入的JS的时候，该CSS就会出现阻塞后面资源下载的情况。而当把嵌入JS放到CSS前面，就不会出现阻塞的情况了","like_count":0},{"had_liked":false,"id":257922,"user_name":"Geek_941fee","can_delete":false,"product_type":"c1","uid":2161870,"ip_address":"","ucode":"428660D38C4C2B","user_header":"","comment_is_top":false,"comment_ctime":1604213827,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604213827","product_id":100033601,"comment_content":"老师你说样式文件会阻塞js文件的执行，那如果我把script标签设置为async或者defer之后又会是什么样呢？<br>","like_count":0},{"had_liked":false,"id":255852,"user_name":"Geek_d64504","can_delete":false,"product_type":"c1","uid":2173380,"ip_address":"","ucode":"189FCE37DC7F51","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/e2P3IHwSzByoDiaQpcB6qap62ia635GLEOSBXNnrOVf7AEMkliaT1gibNWBwWxJfABOqCHz5FRXUHvSiaSiaCvwrgUjw/132","comment_is_top":false,"comment_ctime":1603443991,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1603443991","product_id":100033601,"comment_content":"3秒后页面才会加载出来，怎么解释？<br>&lt;html&gt;<br>    &lt;body&gt;<br>        &lt;div&gt;1&lt;&#47;div&gt;<br>        &lt;script&gt;<br>        let div1 = document.getElementsByTagName(&#39;div&#39;)[0]<br>        div1.innerText = &#39;time.geekbang&#39;<br>        &lt;&#47;script&gt;<br>        &lt;div&gt;test&lt;&#47;div&gt;<br>        &lt;script&gt;<br>            let start = Date.now()<br>            while(Date.now() - start &lt; 3000){<br><br>            }<br>        &lt;&#47;script&gt;<br>    &lt;&#47;body&gt;<br>&lt;&#47;html&gt;","like_count":0,"discussions":[{"author":{"id":1963947,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/0iaIWczXBpgnVVQwKmKNg62rMUDhMyuZOD9BMzbcfg37zu5NFMAAm79FTwsiblmMHfSu0ew6BHWRTyaCR7s8vbtw/132","nickname":"Geek_392d92","note":"","ucode":"73F65CC90BE036","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553017,"discussion_content":"dom 解析是解析到 &lt;/html&gt; 才结束的，那时候才会生成 DOM 树，才会走后续渲染。至于为什么放在后面。。。一是因为防止 js 操作还未解析生成的 dom，还有一个我猜是放后面 cssom已经构建好了。因为 cssom 会阻塞 js，我们把css放在head 和 html 并行解析。等到后面的js时，说不定 cssom 已经好了，就不会被阻塞了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645690363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1913986,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/34/82/ed7a6c2c.jpg","nickname":"YSQ","note":"","ucode":"E862D188312EDF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337236,"discussion_content":"没问题啊，因为正常情况下（非async、defer）JS加载和执行都会阻塞DOM解析，上面虽然是内联脚本不用加载但还是要执行JS脚本（一次宏任务）过后才会继续解析DOM","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608828448,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":255608,"user_name":"zhenzhenChange","can_delete":false,"product_type":"c1","uid":2140340,"ip_address":"","ucode":"AFD74E6B4F0C29","user_header":"https://static001.geekbang.org/account/avatar/00/20/a8/b4/6a818036.jpg","comment_is_top":false,"comment_ctime":1603378504,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603378504","product_id":100033601,"comment_content":"老师，我有个问题想请教一下。<br>假若解析到了自闭合标签，比如 input 、br 之类的标签，那 HTMLParser 会怎么处理呢，也会压栈吗？","like_count":0},{"had_liked":false,"id":245995,"user_name":"Geek_fd81b3","can_delete":false,"product_type":"c1","uid":1899429,"ip_address":"","ucode":"5BF9C3C68B8178","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEIE3Vw0icEQic96rOykFD2bUo6KotVx53gvtG0CDe8tUKC3pNXxIQYMuyPyrgL06Zn32UWtEXTIVWMw/132","comment_is_top":false,"comment_ctime":1599127244,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1599127244","product_id":100033601,"comment_content":"html中间有js，内嵌和引入外部js效果不一样，能解答加是怎么回事吗？<br>问题链接:<br>https:&#47;&#47;segmentfault.com&#47;q&#47;1010000023021410","like_count":0,"discussions":[{"author":{"id":2707455,"avatar":"https://static001.geekbang.org/account/avatar/00/29/4f/ff/61152e87.jpg","nickname":"崔冬","note":"","ucode":"73A5C3561B6BD8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385215,"discussion_content":"引入外部js，会有预解析，","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626943814,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":234543,"user_name":"Geek_5dcc13","can_delete":false,"product_type":"c1","uid":2009388,"ip_address":"","ucode":"0D6F1907C5F451","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/60hX2atIe18teCsotXzyftfdK2rujYNbSD7u0ialIXDSwYk0B4UpmHX1LWHp98G8DBvod1BUxjrhT4qChwibgBaQ/132","comment_is_top":false,"comment_ctime":1594717259,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594717259","product_id":100033601,"comment_content":"之前第4节讲，等到文档被提交了才进行渲染阶段，但是文档提交的时候，网络进程请求到的数据已经传输完成了，但是这章DOM解析的时候，讲网络进程请求了多少就解析多少，我是不是可以理解为就是HTML加载完了才解析的？不知道是不是我理解错了","like_count":0},{"had_liked":false,"id":232658,"user_name":"Geek_525a15","can_delete":false,"product_type":"c1","uid":1643443,"ip_address":"","ucode":"422AC55BD5D618","user_header":"","comment_is_top":false,"comment_ctime":1594081537,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594081537","product_id":100033601,"comment_content":"文章开头“第二个是 DOM 解析器是如何处理跨站点资源的？”这个问题的讲解在哪里？","like_count":0},{"had_liked":false,"id":225336,"user_name":"james","can_delete":false,"product_type":"c1","uid":1232771,"ip_address":"","ucode":"AC42035106E5B9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/yyibGRYCArsUNBfCAEAibua09Yb9D5AdO8TkCmXymhAepibqmlz0hzg06ggBLxyvXicnjqFVGr7zYF0rQoZ0aXCBAg/132","comment_is_top":false,"comment_ctime":1591717489,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1591717489","product_id":100033601,"comment_content":"还显示time.geekbang和test，执行第一个脚本会将div的文本内容改为time.geekbang，接下来第二个脚本执行的时候回阻塞DOM的生成，因此获取不到第二个div元素，因此脚本div2.innerText执行后会报错，Uncaught TypeError: Cannot set property &#39;innerText&#39; of undefined，因为div2的值为undefined","like_count":0},{"had_liked":false,"id":220109,"user_name":"sh","can_delete":false,"product_type":"c1","uid":1428920,"ip_address":"","ucode":"720991D01D50D9","user_header":"https://static001.geekbang.org/account/avatar/00/15/cd/b8/14597b01.jpg","comment_is_top":false,"comment_ctime":1590159132,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590159132","product_id":100033601,"comment_content":"感谢老师 终于对这块有了更细致的了解","like_count":0},{"had_liked":false,"id":217330,"user_name":"乔","can_delete":false,"product_type":"c1","uid":1622655,"ip_address":"","ucode":"1286F8742B4A01","user_header":"https://static001.geekbang.org/account/avatar/00/18/c2/7f/7b22f12b.jpg","comment_is_top":false,"comment_ctime":1589465690,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1589465690","product_id":100033601,"comment_content":"css加载不会阻塞dom解析，但是会阻塞js执行，那css加载会不会阻塞页面渲染呢？因为css没加载完的时候，cssom没有形成，这时候即使dom解析好了，也没办法渲染页面吧","like_count":0,"discussions":[{"author":{"id":1869238,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/85/b6/eef40011.jpg","nickname":"Chrolly","note":"","ucode":"AD685B42238C93","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":270068,"discussion_content":"感觉你说对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589979895,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215558,"user_name":"帅到没朋友","can_delete":false,"product_type":"c1","uid":1375426,"ip_address":"","ucode":"7A3CB44AD0F844","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/KGPsyO5uuejSMba2nyMAQ0nWqp3rp7TBQMp6ibBMEf5BYa1bx31gjU6IA8iaDicx7AfMseUxibsvqzf0Eoq4D8JmUw/132","comment_is_top":false,"comment_ctime":1589016357,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589016357","product_id":100033601,"comment_content":"会显示time.geekbang 和 test，因为执行 script 的时候 div2 还没有生成 DOM 节点，所以获取不到这个 DOM 对象，无法改变它的内容，页面会报 Uncaught TypeError: Cannot set property &#39;innerText&#39; of undefined 这个错误。执行到 script 的时候 div1 的 DOM 节点已经生成了，所以可以更改它的内容。<br>","like_count":0},{"had_liked":false,"id":212473,"user_name":"laor狼","can_delete":false,"product_type":"c1","uid":1634746,"ip_address":"","ucode":"DFA22F4AEA02BD","user_header":"","comment_is_top":false,"comment_ctime":1588129845,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1588129845","product_id":100033601,"comment_content":"老师你好，单标签是不是也和文本一样直接插入到dom 节点了 ，它属于哪种Token类型呢","like_count":0,"discussions":[{"author":{"id":2286113,"avatar":"https://static001.geekbang.org/account/avatar/00/22/e2/21/60adf96b.jpg","nickname":"stone","note":"","ucode":"65816E57253D0F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335867,"discussion_content":"感觉自闭合标签应该不会入栈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608360069,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":201309,"user_name":"Emma","can_delete":false,"product_type":"c1","uid":1930698,"ip_address":"","ucode":"C2D31142AF7288","user_header":"https://static001.geekbang.org/account/avatar/00/1d/75/ca/4c127da3.jpg","comment_is_top":false,"comment_ctime":1585748751,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1585748751","product_id":100033601,"comment_content":"老师，那么CSS文件会边下载边解析，还是等到下载完了再解析呢?","like_count":0,"discussions":[{"author":{"id":1231133,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c9/1d/c7586cfc.jpg","nickname":"Zkerhcy","note":"","ucode":"43A883F6FB6070","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284216,"discussion_content":"CSS里面不会包含其他内容，所以下载完了解析，从Performance面板也可以看出来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592475006,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186017,"user_name":"blueBean","can_delete":false,"product_type":"c1","uid":1816697,"ip_address":"","ucode":"6A68D2414BD904","user_header":"https://static001.geekbang.org/account/avatar/00/1b/b8/79/a4dbe9ee.jpg","comment_is_top":false,"comment_ctime":1583742674,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1583742674","product_id":100033601,"comment_content":"还有一个问题，就是.js文件会等待该页面所有.css文件执行完再执行吗？(不要总是把问题放出来但不解答呀，抗议)","like_count":0,"discussions":[{"author":{"id":1231133,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c9/1d/c7586cfc.jpg","nickname":"Zkerhcy","note":"","ucode":"43A883F6FB6070","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284217,"discussion_content":"不会，实测JS只会等待他前面的CSS解析完了就执行，后面因为DOM都还没解析到，所以不管","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592475080,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1480732,"avatar":"https://static001.geekbang.org/account/avatar/00/16/98/1c/d7a1439e.jpg","nickname":"KaKaKa","note":"","ucode":"07D1980A71F321","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":229561,"discussion_content":"专利停止维护了，后续提问不再回复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586665052,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186013,"user_name":"blueBean","can_delete":false,"product_type":"c1","uid":1816697,"ip_address":"","ucode":"6A68D2414BD904","user_header":"https://static001.geekbang.org/account/avatar/00/1b/b8/79/a4dbe9ee.jpg","comment_is_top":false,"comment_ctime":1583742379,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583742379","product_id":100033601,"comment_content":"请问老师，标签的属性会生成dom节点吗？","like_count":0},{"had_liked":false,"id":177665,"user_name":"小蛋糕","can_delete":false,"product_type":"c1","uid":1807662,"ip_address":"","ucode":"335A6F4301CF22","user_header":"https://static001.geekbang.org/account/avatar/00/1b/95/2e/f8575abb.jpg","comment_is_top":false,"comment_ctime":1581469893,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581469893","product_id":100033601,"comment_content":"思考时间回答：<br><br>由于 JavaScript 脚本可能会修改 DOM ，所以在解析 &lt;script&gt; 时还不存在 div[1] 此元素，因此结果应该是:<br>time.geekbang<br>test<br>","like_count":0},{"had_liked":false,"id":175411,"user_name":"玉皇大亮","can_delete":false,"product_type":"c1","uid":1019849,"ip_address":"","ucode":"5C4FDF1FDCF8A9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8f/c9/833d5060.jpg","comment_is_top":false,"comment_ctime":1580712774,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580712774","product_id":100033601,"comment_content":"展示内容为<br>time.geekbang<br>test<br>浏览器首先完成&lt;div&gt;1&lt;&#47;div&gt;节点的渲染，然后遇到script脚本，执行脚本中的内容，操作div[0]节点并将内部内容改变为time.geekbang，执行let div2 = document.getElementsByTagName(&#39;div&#39;)[1]语句时，因为script脚本阻塞了之后DOM的渲染，因而找不到div2，div2为undefined，因此无法赋值，脚本执行完成后，继续渲染&lt;div&gt;test&lt;&#47;test&gt;，得到test内容","like_count":0},{"had_liked":false,"id":168137,"user_name":"玉皇大亮","can_delete":false,"product_type":"c1","uid":1019849,"ip_address":"","ucode":"5C4FDF1FDCF8A9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8f/c9/833d5060.jpg","comment_is_top":false,"comment_ctime":1578017553,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578017553","product_id":100033601,"comment_content":"页面会显示<br>time.geekbang<br>test<br>因为在获取第二个div时，对应的DOM还没有生成，被JS脚本阻塞了，因此div2为undefined，无法赋值","like_count":0},{"had_liked":false,"id":166560,"user_name":"-_-|||","can_delete":false,"product_type":"c1","uid":1328142,"ip_address":"","ucode":"94B21594658BF9","user_header":"https://static001.geekbang.org/account/avatar/00/14/44/0e/ce14b7d3.jpg","comment_is_top":false,"comment_ctime":1577500317,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1577500317","product_id":100033601,"comment_content":"在一个没有引用外部css资源的页面，把script(里面是工具函数库)标签放在html标签上，head标签上，body和html结束标签之间，html结束标签后，浏览器的首次加载时间是一样的，都会预解析下载脚本，解析完脚本才会首屏渲染？","like_count":0},{"had_liked":false,"id":160297,"user_name":"极客时间","can_delete":false,"product_type":"c1","uid":1015564,"ip_address":"","ucode":"AF7565BB5EF164","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/0c/392ce255.jpg","comment_is_top":false,"comment_ctime":1575907476,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575907476","product_id":100033601,"comment_content":"1、html页面中如果只引入了css没有引入js，那么css不会组织html解析dom。<br>2、html页面中如果同时引入了css和js，那么由于css会阻塞js的执行，那么css会间接阻塞html解析dom。<br>不知道这个结论是否正确。","like_count":0},{"had_liked":false,"id":148164,"user_name":"番茄","can_delete":false,"product_type":"c1","uid":1389069,"ip_address":"","ucode":"44935D8E8FFED3","user_header":"https://static001.geekbang.org/account/avatar/00/15/32/0d/9ffc70dd.jpg","comment_is_top":false,"comment_ctime":1572953474,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572953474","product_id":100033601,"comment_content":"老师，dom 操作怎么和渲染事件关联起来，比如一段js代码中有 div1.style.color = &#39;red&#39;，我测试了一下，是立刻生效的，但是当前js还没有执行完。dom 操作不应该生成一个宏任务，再执行吗？","like_count":0},{"had_liked":false,"id":142862,"user_name":"Lx","can_delete":false,"product_type":"c1","uid":1632217,"ip_address":"","ucode":"90F4EEE985A9B0","user_header":"https://static001.geekbang.org/account/avatar/00/18/e7/d9/83d1346c.jpg","comment_is_top":false,"comment_ctime":1571566693,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571566693","product_id":100033601,"comment_content":"从安全视角来看，DOM 是一道安全防护线，一些不安全的内容在 DOM 解析阶段就被拒之门外了。<br><br>这句话怎么理解呢","like_count":0},{"had_liked":false,"id":140982,"user_name":"Cris","can_delete":false,"product_type":"c1","uid":1473520,"ip_address":"","ucode":"F8A287134F1078","user_header":"https://static001.geekbang.org/account/avatar/00/16/7b/f0/269139d5.jpg","comment_is_top":false,"comment_ctime":1571101105,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571101105","product_id":100033601,"comment_content":"额外说明一下，渲染引擎还有一个安全检查模块叫 XSSAuditor，是用来检测词法安全的。老师XssAuditor也是渲染进程里的一个线程吗？","like_count":0},{"had_liked":false,"id":137243,"user_name":"蓝配鸡","can_delete":false,"product_type":"c1","uid":1348738,"ip_address":"","ucode":"C79A7CA8885B7C","user_header":"https://static001.geekbang.org/account/avatar/00/14/94/82/d0a417ba.jpg","comment_is_top":false,"comment_ctime":1569665221,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569665221","product_id":100033601,"comment_content":"思考题看法：<br>会生成<br>time.geekbang<br>Test<br><br>第二段js没有执行成功是因为在那个时间节点还找不到第二个div","like_count":0},{"had_liked":false,"id":136826,"user_name":"木瓜777","can_delete":false,"product_type":"c1","uid":1512537,"ip_address":"","ucode":"FC52A499AF6374","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/aFAYPyw7ywC1xE9h1qibnTBwtWn2ClJqlicy5cMomhZVaruMyqSq76wMkS279mUaGhrLGwWo9ZnW0WCWfmMovlXw/132","comment_is_top":false,"comment_ctime":1569540872,"is_pvip":false,"replies":[{"id":"52480","content":"嗯 是响应头，我改过来","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1569544546,"ip_address":"","comment_id":136826,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569540872","product_id":100033601,"comment_content":"您好，网络进程接收到响应头之后，会根据请求头中的 content-type 字段来判断文件的类型，比如 content-type 的值是“text&#47;html”！  <br>这个地方应该是根据响应头判断文件类型吧？","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468812,"discussion_content":"嗯 是响应头，我改过来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569544546,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136703,"user_name":"叫我大胖就好了","can_delete":false,"product_type":"c1","uid":1234560,"ip_address":"","ucode":"D6F29276DD828F","user_header":"https://static001.geekbang.org/account/avatar/00/12/d6/80/07de6693.jpg","comment_is_top":false,"comment_ctime":1569493947,"is_pvip":false,"replies":[{"id":"52426","content":"你是对的，我写错了。","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1569498641,"ip_address":"","comment_id":136703,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569493947","product_id":100033601,"comment_content":"我看MDN写的是defer在DOMContentLoaded 前执行","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468761,"discussion_content":"你是对的，我写错了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569498641,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136182,"user_name":"歌在云端","can_delete":false,"product_type":"c1","uid":1110238,"ip_address":"","ucode":"1C876780C9D25E","user_header":"https://static001.geekbang.org/account/avatar/00/10/f0/de/ef564e67.jpg","comment_is_top":false,"comment_ctime":1569378695,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1569378695","product_id":100033601,"comment_content":"time.geekbang 和 test ","like_count":0},{"had_liked":false,"id":135945,"user_name":"Geek_Jamorx","can_delete":false,"product_type":"c1","uid":1608908,"ip_address":"","ucode":"5B5669D0C75FBD","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ0F94uoYZQicRd7YEFjEJWm0EaUJXzkhiaqa5GQQ8a1FkicQIoHC4sp2ZG9m1JAFABuGsj34ucztjibA/132","comment_is_top":false,"comment_ctime":1569311266,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1569311266","product_id":100033601,"comment_content":"老师，上面defer那里有点问题<br>实测defer会阻塞DOMContentLoaded事件，也就是DOMContentLoaded事件之后触发defer<br>async不会，两个都会阻塞load事件","like_count":0,"discussions":[{"author":{"id":1299829,"avatar":"https://static001.geekbang.org/account/avatar/00/13/d5/75/d93f9648.jpg","nickname":"🍪","note":"","ucode":"2B6D01EA82DE97","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":22749,"discussion_content":"defer 在 content loaded 之前完成，async 在js下载完成后立刻执行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569677426,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135924,"user_name":"Chao","can_delete":false,"product_type":"c1","uid":1108745,"ip_address":"","ucode":"DD7742F5537521","user_header":"https://static001.geekbang.org/account/avatar/00/10/eb/09/ba5f0135.jpg","comment_is_top":false,"comment_ctime":1569303801,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569303801","product_id":100033601,"comment_content":"浏览器管道化解析 ，需要chunked的支持吗？","like_count":0}]}