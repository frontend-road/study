{"id":199552,"title":"09 | 微服务接口：怎么用Mock解决混乱的调用关系？","content":"<p>你好，我是陈磊。</p><p>欢迎你继续和我一起学习接口测试，到目前为止，我们已经学习了接口测试的逻辑模拟，也就是测试辅助工具和测试脚本代码，也学习了如何选取和通过代码调用测试参数，掌握了这些内容，你就算是一个接口测试的老手了。无论你的被测接口是一个你熟悉的协议，还是一个陌生的协议，它们都不会耽误你的工作进度了。</p><p>这节课是我们专栏的最后一节课，我想给你讲一讲关于微服务的接口测试。</p><p>现如今在我的工作中，我主要面对的就是微服务测试，每个服务都是RESTful接口。在最开始的微服务改造过程中，我的测试其实比之前的业务测试更容易，每一个接口通过测试框架来编写测试脚本就可以完成执行了，而且一次写完后再通过平台调用，也显得很轻松。但是这种美好的场景并没有持续多久。为什么呢？ 你先听听我的故事。</p><h2>微服务下混乱的调用关系</h2><p>开发团队开始采用微服务架构开发系统的时候，我的测试团队也开始同步学习对应的测试技术，我也像从前一样，逐步封装自己的测试框架，并且采用Postman和Python代码，完成接口测试脚本的快速积累，同时引入了参数类，完成了Excel参数的封装调用。</p><p>在开始的一些项目中，只要开发工程师提交了代码仓库主干的合并请求后，除去代码的静态扫描外，持续集成平台会自动调取一个开源的智能化单元测试框架，来完成单元测试，通过后它会自动部署被测系统，然后再执行测试脚本，这整个流程全部是流水线自动驱动完成的。</p><!-- [[[read_end]]] --><p>一般来说，开发工程师在开发前期就已经定义好了微服务接口，测试工程师和开发工程师几乎是同步开始进行各自的开发任务。但是，这种和谐的工作场景很快就被蜘蛛网一样的微服务调用关系给破坏了，几乎所有的项目都会出现相互依赖的关系，比如说服务A依赖服务B，服务B依赖服务C，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/aa/bd/aabd0247cbd7c358443ded723d7114bd.jpg?wh=1142*162\" alt=\"\"></p><p>这种混乱主要体现在：</p><ul>\n<li>当持续集成流水线部署服务A的时候，由于对应的开发工程师团队也在做同步改造，导致测试环境的服务B不可用；</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/9c/28/9c1e3f58863468fe261553c2dfbe5628.jpg?wh=1142*341\" alt=\"\"></p><ul>\n<li>由于服务B依赖服务C，而服务C还没有开发完成，导致即使服务A和服务B都没问题，但也没有办法完成服务A的接口测试。</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/fb/90/fbcb82104f467b3968fe05ec3d9c6090.jpg?wh=1142*259\" alt=\"\"></p><p>其实这种服务A依赖服务B，服务B依赖服务C的依赖方式还算简单，还有更多微服务随着开发越来越复杂，服务之间的调用关系就像蜘蛛网一样错乱，让你摸不清外部依赖到底有几层，以及一个接口到底依赖了几个外部接口。</p><p>这就导致了虽然被测系统已经开发完成，测试脚本也准备就绪，但是测试工作就是没办法进行的悲惨结局。面对这种局面，我当时心里确实很不舒服，因为自己做了那么多努力，到头来却被一个不是由自己负责的服务卡住了工作进度，这感觉就像是用尽了全身的力气，却一拳打到了棉花上，自己有再多的劲儿也没处使。</p><h2>Mock框架的抉择：用什么实现服务B的替身</h2><p>那作为测试工程师，面对这样的情形，我们该怎么办呢？</p><p>我当时想到的就是使用Mock服务。其实Mock服务是一个错误的说法，关于这一点我推荐你看一下Martin Flower的这篇叫做<a href=\"https://martinfowler.com/bliki/TestDouble.html\">TestDouble</a>的文章，一般我们将TestDouble服务叫做测试替身，但是如今的国内业界里，绝大部分人已经习惯了叫Mock服务，因此在这里我们也还是叫Mock服务。</p><p>针对混乱的调用关系，我的思路是：我的被测服务就是服务A，那么我不用管服务B是不是好用，我只要保障服务A能够走完流程，就可以完成接口测试任务了。循着这个思路，我只要用Mock服务伪装成服务B就万事大吉了，我也不用再关心服务B到底调用了多少服务。</p><p>但是在选取Mock服务框架时，我又面临着一个抉择，那就是用什么来实现服务B的替身。现在可以实现Mock服务的框架特别多，但绝大部分都要求你有很好的代码基础，每做一个Mock服务其实就是做了一个简单的服务B，不同的是，它不需要实现原有服务B负载的处理逻辑，只要能按服务B的处理逻辑给出对应返回就可以了。</p><p>因此，有些团队也会把这样的服务叫做挡板系统，这个名字很形象。也就是说，我给了Mock服务B的请求参数，它只要按照约定好的返回给我参数就可以了，至于一系列其它验证或者微服务调用，都不在Mock服务的设计内，这就像你对着墙打乒乓球一样，墙是你假设的对手，会把你打过去的球挡回来，而你要做的就是接住墙挡回给你的球。</p><p>那么，到底应该怎么选择Mock服务框架呢？</p><p>首先，你要基于自己和团队的技术栈来做选择，这决定了你完成服务B替身的速度。你要知道，无论服务B的替身做得多么完美，它只是一个Mock，它存在的意义就是帮助你快速完成服务A的接口测试工作，因此，选择一个学习成本低、上手快并且完全适合你自己技术栈的Mock框架，能让你的测试工作事半功倍。</p><p>其次，你要让写好的Mock服务容易修改和维护。Mock服务就是一个在测试过程中替代服务B的替身，就和拍电影时的替身演员一样，替身演员可能有好几个，需要在不同地方拍摄不同的电影片段。Mock服务可能只有一个，也有可能有好几个，为了不同的调用或者测试而存在。但是，Mock服务会随着服务B的变化而变化，如果服务B的请求参数和返回参数有变化，那么Mock服务也要能快速完成修改，并且能马上发挥作用。因此，一个非常容易维护的Mock服务框架，才更能马上快速投入使用，快速发挥作用。</p><p>如果你的团队技术基础很好，开发能力很强，那么我建议你用对应语言的Mock框架，例如Java语言的<a href=\"https://github.com/mockito/mockito\">Mockito框架</a>和Python语言的<a href=\"https://pypi.org/project/mock/\">mock框架</a>。</p><p>如果你的团队技术基础相对比较薄弱，那么我推荐你看看<a href=\"https://github.com/dreamhead/moco\">moco</a>，这个框架在开发Mock服务的时候，提供了一种不需要任何编程语言的方式，你可以通过撰写它约束的Json建立服务，并通过命令启动对应的服务，这就可以快速开发和启动运行你需要的Mock服务。</p><p>更重要的是，Json格式的数据文件可以独立完成Mock的服务设计，而且Json的学习成本和Python语言相比，就如同小学一年级的数学和高中数学之间的难度差距一样，就更别说和犹如高等数学的Java语言相比较了。如果你想详细的学习moco，可以直接去它在Github上的项目空间，那里有详细的使用说明和示例代码。</p><h2>我的Mock服务设计经验</h2><p>在选择好Mock框架后，你就可以酣畅淋漓地完成各个外部依赖服务的解耦工作了，但是关于Mock服务，我还想告诉你一些我的设计经验。</p><p><strong>首先，简单是第一要素。</strong>无论原服务B处理了多么复杂的业务流程，你在设计服务B的Mock服务时，只要关心服务B可以处理几种类型的参数组合，对应的服务都会返回什么样的参数就可以了。这样你就能快速抓住Mock服务B的设计核心，也能快速完成Mock服务B的开发。</p><p><strong>其次，处理速度比完美的Mock服务更重要。</strong>一个Mock服务要能按照原服务正确又快速地返回参数，你不需要把大量的时间都浪费在Mock服务的调用上，它只是用来辅助你完成接口测试的一个手段。你需要让它像打在墙上的乒乓球一样，一触到墙面马上就反弹回来；而不能把球打出后，需要去喝个茶或者坐下休息一会，才能收到反弹回来的球。</p><p>如果你的Mock服务很耗时，你在只有一个两个服务时，可能影响还不是很明显，但如果你同时有多个Mock服务，或者需要用Mock服务完成性能测试的时候，这就会变成一个很严重的问题，后续会引发强烈的“蝴蝶效应”，使得整个被测接口的响应速度越来越慢。因此你要建立一套快速的Mock服务，尽最大可能不让Mock服务占据系统的调用时间。</p><p><strong>最后，你的Mock服务要能轻量化启动，并且容易销毁。</strong>你要时刻注意，Mock服务只是一个辅助服务，因此，任何一个团队都不希望启动一个Mock服务需要等待5分钟，或者需要100M的内存。它要能快速启动、容易修改并且方便迁移。既然Mock服务的定位是轻量化的辅助服务，那么它也要容易销毁，以便你在完成测试后，可以快速且便捷地释放它所占据的资源。</p><h2>总结</h2><p>微服务现在已经铺天盖地而来，尤其在中台化战略的推动下，业务中台服务的依赖关系会越来越复杂，并且随着团队内微服务数量越来越多，每个测试团队面临的被测系统都会是一团乱麻，很容易找不到头绪。</p><p>为了解决由于微服务间相互依赖而导致的混乱的系统调用关系，我建议你尽快掌握一个Mock服务框架，这样可以让你在混乱中理清思路，快速进行接口测试，交付高质量的项目。</p><p>最后我要提醒你的是，选择Mock的技术栈与选择测试框架的技术栈还是有些区别的，在选择Mock技术栈时，你重点要考虑的是学习成本，把学习成本降到最低，才是选择Mock框架的首要关注点。而且你不只要关注自己的学习成本，也要关注你所在团队的学习成本，因为现在每个项目都有可能需要Mock服务，这个时候，就要求每一个项目的测试工程师都具备自己独立建设Mock服务的能力，在Mock服务的技术选型上，还是要以团队整体的技术栈为基础，以自己的技术为参考进行选型。</p><h2>思考题</h2><p>这节课我讲了在微服务混乱的外部调用下，使用Mock外部接口完成被测接口的测试工作，文中我也给你推荐了一个快速入门的Mock工具，那么你在工作中，有没有遇见过被测系统因为外部依赖，而不得不阻塞项目进度的时候呢？你又是怎么解决的呢？</p><p>我是陈磊，欢迎你在留言区留言分享你的观点，如果这篇文章让你有新的启发，也欢迎你把文章分享给你的朋友，我们一起沟通探讨。</p>","neighbors":{"left":{"article_title":"08 | 测试数据：是不是可以把所有的参数都保存到Excel中？","id":199546},"right":{"article_title":"结束语 ｜ 如何成为一名优秀的测试工程师？","id":199999}},"comments":[{"had_liked":false,"id":179637,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1582045877,"is_pvip":false,"replies":[{"id":"69796","content":"您好，您的问题我一一回答，希望有些帮助：<br>1. 测试的微服务混用通信方式（HTTP同步、消息中间件异步），这时除了使用mock服务器测试，是否也需要搭建“消息中间件”才能完成测试？还是可以用HTTP代替？<br>答如果仅仅是为了做Mock可以使用http代替，这里并不是说用MQ不好，如果这个事情是测试来做，很多测试并无法独立完成，因此这里以解决问题为根本出发点。如果测试团队技术比较好，那么使用MQ会更好。<br><br>2. 老师在工作中是否遇到过对底层工具、核心类代码做“微基准测试”？如果有，一般哪部分代码需要进行此类测试？<br>答：接口测试并不适合对底层工具或者核心类做测试，这部分只适合对外提供或者对内提供调用的接口，如果是对核心代码，建议还是使用单元测试，可是采用EvoSuite这个框架做一次批量单元测试。EvoSuite可以在我的Blog https:&#47;&#47;blog.csdn.net&#47;crisschan找到，我对这个开源框架的使用有一些心德以及一些坑我都有记录。<br>3. 能否分享一下接口测试时常用的异常数据？例如：类型不一致、空字符串、超出长度、必传参数为空，SQL注入语句、传多个无效参数占用带宽、POST提交时包含10M+甚至更大容量的信息等。<br>答：异常我比较建议最开始使用边界值，例如整型的就包含了1，1.1，-1，-1.1，“asb”,null，True。先确定类型以及接口的程序中的约束，然后确定边界值，最后在完成测试入参组合，组合可以使用正交试验的方法，正交计算如果不是很熟悉（终归这个测试使用比较多）可以参考一下我写的正交试验的计算库：https:&#47;&#47;github.com&#47;crisschan&#47;TamanduaOATs，写的并没有那么好，是C++写的，但是可以使用，在您这样一个开发面前我有点班门弄斧。参数中是不是包含大容量的信息这些还是要看具体的参数要求，并不是一概而论。<br><br>谢谢您","user_name":"作者回复","user_name_real":"Criss@陈磊","uid":"1064280","ctime":1582091184,"ip_address":"","comment_id":179637,"utype":1}],"discussion_count":3,"race_medal":0,"score":"91776359093","product_id":100045801,"comment_content":"看到这篇，测试同学已经和程序员不相上下了。作为一名Java程序员，收获很多，十分感谢！也有几个问题请教您：<br><br>1. 测试的微服务混用通信方式（HTTP同步、消息中间件异步），这时除了使用mock服务器测试，是否也需要搭建“消息中间件”才能完成测试？还是可以用HTTP代替？<br><br>2. 老师在工作中是否遇到过对底层工具、核心类代码做“微基准测试”？如果有，一般哪部分代码需要进行此类测试？<br><br>3. 能否分享一下接口测试时常用的异常数据？例如：类型不一致、空字符串、超出长度、必传参数为空，SQL注入语句、传多个无效参数占用带宽、POST提交时包含10M+甚至更大容量的信息等。","like_count":22,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484336,"discussion_content":"您好，您的问题我一一回答，希望有些帮助：\n1. 测试的微服务混用通信方式（HTTP同步、消息中间件异步），这时除了使用mock服务器测试，是否也需要搭建“消息中间件”才能完成测试？还是可以用HTTP代替？\n答如果仅仅是为了做Mock可以使用http代替，这里并不是说用MQ不好，如果这个事情是测试来做，很多测试并无法独立完成，因此这里以解决问题为根本出发点。如果测试团队技术比较好，那么使用MQ会更好。\n\n2. 老师在工作中是否遇到过对底层工具、核心类代码做“微基准测试”？如果有，一般哪部分代码需要进行此类测试？\n答：接口测试并不适合对底层工具或者核心类做测试，这部分只适合对外提供或者对内提供调用的接口，如果是对核心代码，建议还是使用单元测试，可是采用EvoSuite这个框架做一次批量单元测试。EvoSuite可以在我的Blog https://blog.csdn.net/crisschan找到，我对这个开源框架的使用有一些心德以及一些坑我都有记录。\n3. 能否分享一下接口测试时常用的异常数据？例如：类型不一致、空字符串、超出长度、必传参数为空，SQL注入语句、传多个无效参数占用带宽、POST提交时包含10M+甚至更大容量的信息等。\n答：异常我比较建议最开始使用边界值，例如整型的就包含了1，1.1，-1，-1.1，“asb”,null，True。先确定类型以及接口的程序中的约束，然后确定边界值，最后在完成测试入参组合，组合可以使用正交试验的方法，正交计算如果不是很熟悉（终归这个测试使用比较多）可以参考一下我写的正交试验的计算库：https://github.com/crisschan/TamanduaOATs，写的并没有那么好，是C++写的，但是可以使用，在您这样一个开发面前我有点班门弄斧。参数中是不是包含大容量的信息这些还是要看具体的参数要求，并不是一概而论。\n\n谢谢您","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582091184,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1113445,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fd/65/0b05b5d4.jpg","nickname":"巴特尔","note":"","ucode":"1C5919DE960B23","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":177519,"discussion_content":"第一个问题我感觉答非所问，用MQ替代不了mock，是两个不同的应用，提出者是问如果有异步调用，是否也需要搭建中间件相关的，或是异步的怎么去测去实现","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582112460,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1113445,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fd/65/0b05b5d4.jpg","nickname":"巴特尔","note":"","ucode":"1C5919DE960B23","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":177557,"discussion_content":"老师的意思是结合实际情况落地方案，毕竟每个团队业务场景不同。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582114410,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":177519,"ip_address":""},"score":177557,"extra":""}]}]},{"had_liked":false,"id":181995,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1582689203,"is_pvip":false,"replies":[{"id":"70465","content":"谢谢您的总结，开发、测试，生产一般都是三个环境，dev环境是开发owner所有我没有说，这些内容我在我的博客中有写可以开讨论一下，您在专栏的留言让我很是敬畏。您说的我很认同性能部分也是接口测试内容，最开始规划了，因为极客时间有了类似课程，这些都被砍掉了。未来我也会将这些砍掉的内容放到我的blog里面。谢谢您的支持","user_name":"作者回复","user_name_real":"CrissChan","uid":"1064280","ctime":1582692650,"ip_address":"","comment_id":181995,"utype":1}],"discussion_count":2,"race_medal":0,"score":"31647460275","product_id":100045801,"comment_content":"OK，最后一节小结一下：<br>1：测试的痛点？<br>1-1：测试环境的搭建，微痛，一般都易解决<br>1-2：测试工具的搭建，稍痛，有现场工具也可以自己弄，关键是对接口的入参、出参、自动化的认识和积累，这是本专栏重点阐述和解决的问题<br>1-3：测试业务的积累，这个是一个针对简单业务不存在的问题，对于复杂业务需要不断积累的问题，对于接口测试比较难克服的问题，输入A返回B怎么判断这是一个OK的用例？复杂的接口，不敢说千变万化，不过一个接口可以有十几二十几中的输入又有十几二十几重的响应是很正常的，不了解业务基本判断不出来是否OK。这个每个企业的业务不同复杂度不同，不能一概而论，除了自己多和产品、研发以及其他了解的人多沟通，自己多思考多总结多积累，好像没有什么好法子，当然，如果项目文档比较完善也在持续跟进到是一种捷径<br>1-4：测试依赖问题，包括专栏里提到的外部服务依赖，另外就是测试数据依赖，目前我的经验是为了提高响应速度，微服务是依赖缓存数据进行计算的，不过缓存数据并不是从数据库直接放进去的需要经过复杂的计算，这种情况会到是测试链条拉长，需要配置数据刷新缓存，然后才能开始接口测试，有于业务本身的复杂性，不理解业务其实就是没法开展的。这个专栏里并未提到，我们目前的做法是隔离研发和厕所环境，测试环境的数据保持纯洁性，然后再进行定时任务的刷新，使依赖数据可以一直维持。<br>1-5：性能测试，接口测试功能OK，仅是其一，性能也很重要。也是接口测试内容，这个具体也有一些具体的方法和工具。并且有些问题仅通过功能测试是难以发现的，比如：线程安全问题，代码逻辑导致的性能差的问题。<br>2：专栏讲的核心内容？<br>2-1：利用工具提高效率，有现成用现成，没有就自己造<br>2-2：工具怎么造，封装、抽象、迭代，提高编码能力<br>3：有些收获，了解测试或者说接口测试思路，主要是时刻保持工具可复用化的观点。这个需要，工作生活中，养成这样的习惯。","like_count":8,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485192,"discussion_content":"谢谢您的总结，开发、测试，生产一般都是三个环境，dev环境是开发owner所有我没有说，这些内容我在我的博客中有写可以开讨论一下，您在专栏的留言让我很是敬畏。您说的我很认同性能部分也是接口测试内容，最开始规划了，因为极客时间有了类似课程，这些都被砍掉了。未来我也会将这些砍掉的内容放到我的blog里面。谢谢您的支持","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582692650,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1163974,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c2/c6/88d0c7b2.jpg","nickname":"一默","note":"","ucode":"F23A6E42DFD0C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200620,"discussion_content":"大神，我们做朋友吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583690950,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180266,"user_name":"每天晒白牙","can_delete":false,"product_type":"c1","uid":1004698,"ip_address":"","ucode":"A1B102CD933DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","comment_is_top":false,"comment_ctime":1582244494,"is_pvip":false,"replies":[{"id":"69992","content":"挡板我也是在银行或者第三方支付行业听说的。我们有了类似的经历。","user_name":"作者回复","user_name_real":"Criss Chan","uid":"1064280","ctime":1582246639,"ip_address":"","comment_id":180266,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23057080974","product_id":100045801,"comment_content":"看到&quot;挡板&quot;这两个字，一下子勾起了我16和17年在一家第三方支付公司的经历，那时候也是需要依赖第三方，然后测试的时候需要让下游服务加个&quot;挡板&quot;，那个时候听着觉得好玩儿，后面才慢慢知道就是返回假数据，也就是mock","like_count":6,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484590,"discussion_content":"挡板我也是在银行或者第三方支付行业听说的。我们有了类似的经历。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582246639,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180636,"user_name":"VeryYoung","can_delete":false,"product_type":"c1","uid":1198965,"ip_address":"","ucode":"50E129987FE4E5","user_header":"https://static001.geekbang.org/account/avatar/00/12/4b/75/71845744.jpg","comment_is_top":false,"comment_ctime":1582356479,"is_pvip":false,"replies":[{"id":"70088","content":"EvoSuite，是我稍微熟悉一点的，具体怎么使用已经使用中有什么坑，可以看一下https:&#47;&#47;blog.csdn.net&#47;crisschan我的博客中里面是有详细的介绍的。","user_name":"作者回复","user_name_real":"Criss Chan","uid":"1064280","ctime":1582362581,"ip_address":"","comment_id":180636,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14467258367","product_id":100045801,"comment_content":"文中有提到一款智能化单元测试框架，能请问下该框架是哪个吗？","like_count":3,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484741,"discussion_content":"EvoSuite，是我稍微熟悉一点的，具体怎么使用已经使用中有什么坑，可以看一下https://blog.csdn.net/crisschan我的博客中里面是有详细的介绍的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582362581,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1198965,"avatar":"https://static001.geekbang.org/account/avatar/00/12/4b/75/71845744.jpg","nickname":"VeryYoung","note":"","ucode":"50E129987FE4E5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":182378,"discussion_content":"好的，谢谢，我了解一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582421248,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":271222,"user_name":"蜡笔小新爱看书","can_delete":false,"product_type":"c1","uid":1224437,"ip_address":"","ucode":"3E597682ADB0C8","user_header":"https://static001.geekbang.org/account/avatar/00/12/ae/f5/a17bbcc9.jpg","comment_is_top":false,"comment_ctime":1609479822,"is_pvip":false,"replies":[{"id":"103488","content":"也可以","user_name":"作者回复","user_name_real":"陈磊@Criss","uid":"1064280","ctime":1616681341,"ip_address":"","comment_id":271222,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5904447118","product_id":100045801,"comment_content":"Mock服务，可以理解为Charles的Map Local功能么？","like_count":2,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512871,"discussion_content":"也可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616681341,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2081989,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/c4/c5/909a7e44.jpg","nickname":"random0","note":"","ucode":"E919DCFB5B668B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352417,"discussion_content":"Charles的 Map local应该也可以算的，只不过使用不便利。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614733072,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":216495,"user_name":"sincoolvip","can_delete":false,"product_type":"c1","uid":1997573,"ip_address":"","ucode":"477ED732EA4F1F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIykVsmj7PDjEeaUYyNVCA9SialFic98Swh6uF0hoqoEIrwU6D6cfNqeJibk9s8jGHtiatDeeoCEVW4OQ/132","comment_is_top":false,"comment_ctime":1589272120,"is_pvip":false,"replies":[{"id":"80181","content":"谢谢您","user_name":"作者回复","user_name_real":"CrissChan","uid":"1064280","ctime":1589334122,"ip_address":"","comment_id":216495,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5884239416","product_id":100045801,"comment_content":"快看完了再由衷的评价，此课程作为一个指引 ，是非常好的，可以看得出作者的测试开发功底，对于有基础的同学来讲，一个指引就够了。所以还是挺好的一个课程。","like_count":1,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494841,"discussion_content":"谢谢您","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589334122,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179717,"user_name":"ZeroIce","can_delete":false,"product_type":"c1","uid":1305369,"ip_address":"","ucode":"30133BA83CE349","user_header":"https://static001.geekbang.org/account/avatar/00/13/eb/19/0d990b03.jpg","comment_is_top":false,"comment_ctime":1582083195,"is_pvip":false,"replies":[{"id":"69792","content":"恩，相信很多人都开始觉得测试做了很多不是测试的事情，但是随着devops的出现，做事情的边界已经和之前不一样了，现在开发、测试运维是一个team，大家统一的目标是交付一个高质量的项目，因此目前这些内容还是属于测试的工作。","user_name":"作者回复","user_name_real":"Criss@陈磊","uid":"1064280","ctime":1582090050,"ip_address":"","comment_id":179717,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5877050491","product_id":100045801,"comment_content":"似乎问题很多都已经不属于接口测试的问题了😖","like_count":2,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484366,"discussion_content":"恩，相信很多人都开始觉得测试做了很多不是测试的事情，但是随着devops的出现，做事情的边界已经和之前不一样了，现在开发、测试运维是一个team，大家统一的目标是交付一个高质量的项目，因此目前这些内容还是属于测试的工作。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582090050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":281376,"user_name":"random0","can_delete":false,"product_type":"c1","uid":2081989,"ip_address":"","ucode":"E919DCFB5B668B","user_header":"https://static001.geekbang.org/account/avatar/00/1f/c4/c5/909a7e44.jpg","comment_is_top":false,"comment_ctime":1614733251,"is_pvip":true,"replies":[{"id":"103484","content":"最后的集成测试还是要有的","user_name":"作者回复","user_name_real":"陈磊@Criss","uid":"1064280","ctime":1616681219,"ip_address":"","comment_id":281376,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1614733251","product_id":100045801,"comment_content":"请问老师，如果已经通过mock服务测试完成，此时其他服务也已经正常，这时仍需要按正常流程回归一遍吧？","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516378,"discussion_content":"最后的集成测试还是要有的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616681219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":264618,"user_name":"捷后愚生","can_delete":false,"product_type":"c1","uid":1170483,"ip_address":"","ucode":"A1F935D39C8488","user_header":"https://static001.geekbang.org/account/avatar/00/11/dc/33/a68c6b26.jpg","comment_is_top":false,"comment_ctime":1606548949,"is_pvip":false,"replies":[{"id":"97231","content":"很棒，谢谢","user_name":"作者回复","user_name_real":"陈磊@Criss","uid":"1064280","ctime":1607906677,"ip_address":"","comment_id":264618,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1606548949","product_id":100045801,"comment_content":"本文总结<br><br><br>为什么需要mock？<br>a服务--b服务--c服务，需要测试a服务，但是b服务或者c服务有问题，不能返回报文或者不能返回正确的报文<br>a系统--b系统--c系统，需要测试a系统，但是b系统或者c系统有问题，不能返回报文或者不能返回正确的报文<br>所以需要一个工具模拟返回的报文，这可以保证a能顺利的测试，这就是mock服务或者挡板工具。<br><br>怎么选取mock工具？<br>1.学习成本低、上手快并且完全适合你自己技术栈的 Mock 框架<br>2.Mock 服务容易修改和维护<br>3.处理速度快<br>4.Mock 服务要能轻量化启动，并且容易销毁<br><br>除了老师提到的mock工具，其实fiddler也是可以做mock测试的，老师怎么看？","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510625,"discussion_content":"很棒，谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607906677,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":210418,"user_name":"夜歌","can_delete":false,"product_type":"c1","uid":1562121,"ip_address":"","ucode":"724CF22FC99AA7","user_header":"https://static001.geekbang.org/account/avatar/00/17/d6/09/e9bfe86f.jpg","comment_is_top":false,"comment_ctime":1587742113,"is_pvip":false,"replies":[{"id":"78587","content":"mock服务被调用需要开发做统一修改或者做一个统一配置，测试可以统一修改.<br>","user_name":"作者回复","user_name_real":"CrissChan","uid":"1064280","ctime":1587963544,"ip_address":"","comment_id":210418,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1587742113","product_id":100045801,"comment_content":"老师您好，没做过微服务，所以有个想问的问题：微服务接口是怎么测试的？我想测试接口b，但接口b依赖接口a，但这是接口b在服务端调用的接口a，我该怎么mock接口a？难道说测微服务都是把被测接口的代码部署到自己本地运行，然后mock、改调用，再测试的？没做过，所以猜想是不是这样，要不感觉够不到让接口b改为走mock接口。","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493019,"discussion_content":"mock服务被调用需要开发做统一修改或者做一个统一配置，测试可以统一修改.\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587963544,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1562121,"avatar":"https://static001.geekbang.org/account/avatar/00/17/d6/09/e9bfe86f.jpg","nickname":"夜歌","note":"","ucode":"724CF22FC99AA7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":249822,"discussion_content":"好的，了解了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587965355,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208997,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1587478874,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587478874","product_id":100045801,"comment_content":"基于mock的测试与契约测试有什么关系与联系？","like_count":0},{"had_liked":false,"id":197007,"user_name":"希涛","can_delete":false,"product_type":"c1","uid":1163954,"ip_address":"","ucode":"5DD4E22C2FE42F","user_header":"https://static001.geekbang.org/account/avatar/00/11/c2/b2/d20fe97a.jpg","comment_is_top":false,"comment_ctime":1585333041,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585333041","product_id":100045801,"comment_content":"看完了，学习了","like_count":0},{"had_liked":false,"id":196561,"user_name":"西","can_delete":false,"product_type":"c1","uid":1165315,"ip_address":"","ucode":"A6F774E6845F69","user_header":"https://static001.geekbang.org/account/avatar/00/11/c8/03/ae1d1057.jpg","comment_is_top":false,"comment_ctime":1585293142,"is_pvip":false,"replies":[{"id":"74446","content":"好思路好想法。","user_name":"作者回复","user_name_real":"CrissChan","uid":"1064280","ctime":1585307586,"ip_address":"","comment_id":196561,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585293142","product_id":100045801,"comment_content":"Mock服务，阻隔关联性，可做一个通用“替身”，自定义返回值。","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489332,"discussion_content":"好思路好想法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585307586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":193478,"user_name":"明","can_delete":false,"product_type":"c1","uid":1823194,"ip_address":"","ucode":"3CE6DEEEEB7598","user_header":"https://static001.geekbang.org/account/avatar/00/1b/d1/da/ee19903b.jpg","comment_is_top":false,"comment_ctime":1584907217,"is_pvip":false,"replies":[{"id":"73756","content":"不是的，也不是必须使用还是要看具体场景","user_name":"作者回复","user_name_real":"CrissChan","uid":"1064280","ctime":1584942208,"ip_address":"","comment_id":193478,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584907217","product_id":100045801,"comment_content":"实现分成自动化测试就要靠mock服务框架了，是吗","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488566,"discussion_content":"不是的，也不是必须使用还是要看具体场景","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584942208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":193276,"user_name":"smallfish","can_delete":false,"product_type":"c1","uid":1923145,"ip_address":"","ucode":"EF05549772CF8E","user_header":"https://static001.geekbang.org/account/avatar/00/1d/58/49/985d98c8.jpg","comment_is_top":false,"comment_ctime":1584887932,"is_pvip":false,"replies":[{"id":"73754","content":"感谢您的留言，其实怎么做解决问题才是主要的。java、python、go选哪种语言不是很重要。重要的是解决问题的思路。","user_name":"作者回复","user_name_real":"CrissChan","uid":"1064280","ctime":1584942126,"ip_address":"","comment_id":193276,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584887932","product_id":100045801,"comment_content":"一个很有趣的观点，json、python和java的学习成本对比，其实我想表达一个观点，对于测试人员，java优势比python大，我的观点如下：1.java市场占有率太高，开发使用的大概率是java，而测试是和开发使用的同一门语言，就会有共同话语，这样开发就会更好沟通，提高测试效率；2.所谓【人生苦短，我用python】，但其实现在IDE工具很强大，只需要负责关系逻辑代码就OK，一个玩笑话：写ython的都是使用游标卡尺量间距；3.大量的测试工具，都是使用java进行开发的，对于后期的扩展，java拥有很大的优势；4.java的学习成本并没有老师你说的那么夸张，那是对于开发人员来说的，对于测试人员，学基础就够用了，和python我的感觉是差不了太多。<br>老师讲的mock使用这种场景，我的实际工作中并没有遇到过，我们提测都是一次所有微服务同时提测，不会存在依赖性的服务，一个提测一个没有提测。但实际工作中mock服务还是很有用途的，我是这么使用的，是在开发开完接口设计评审和输出设计文档后，mock出接口，编写测试用例时，可以进行模拟调用，测试一下自己的用例是否OK。但老师讲的这个也是一个思路，可能有些公司会遇到这样的问题吧。","like_count":1,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488529,"discussion_content":"感谢您的留言，其实怎么做解决问题才是主要的。java、python、go选哪种语言不是很重要。重要的是解决问题的思路。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584942126,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187138,"user_name":"mia","can_delete":false,"product_type":"c1","uid":1458307,"ip_address":"","ucode":"83F6B65AE65121","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/9P7mlmEwl2E1m4b42bdUlaGVGunibesicCRJ9CLvkJB6Ljcgfk42BwJjiatv8mIHCWF3nNCT8o05hmC9k1nQvUQqg/132","comment_is_top":false,"comment_ctime":1584024357,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584024357","product_id":100045801,"comment_content":"看到最后一节课了，最后一节课的内容我现在还达不到那个水平，也没有接触这样大型的项目团队，不过关于接口测试思维还有测试工具和框架的组合使用还是学习蛮多的！先从自己搭建一个合适趁手的框架开始~","like_count":0},{"had_liked":false,"id":182204,"user_name":"技术修行者","can_delete":false,"product_type":"c1","uid":1013147,"ip_address":"","ucode":"28CA41A1214D6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/9b/611e74ab.jpg","comment_is_top":false,"comment_ctime":1582728667,"is_pvip":true,"replies":[{"id":"71824","content":"课程中代码我做了整理：https:&#47;&#47;github.com&#47;crisschan&#47;api_geektime。","user_name":"作者回复","user_name_real":"CrissChan","uid":"1064280","ctime":1583723257,"ip_address":"","comment_id":182204,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1582728667","product_id":100045801,"comment_content":"在有mock的情况下，一般会有一个特殊的环境或者特别的部署来执行测试。在微服务架构下，可能会有很多的微服务，微服务之间的调用链会很长，在创建mock的时候需要注意：1. 哪些服务需要做mock处理，2. 服务调用时，需要哪些服务调用会调用mock服务。这两部分，都需要开发团队介入，和测试团队一起完成。在这种情况下，基于不同的测试场景，一个微服务可能会部署多个版本，对于服务网关的配置也会是一个挑战。","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485251,"discussion_content":"课程中代码我做了整理：https://github.com/crisschan/api_geektime。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583723257,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181073,"user_name":"Tomorrow","can_delete":false,"product_type":"c1","uid":1169221,"ip_address":"","ucode":"647D94B3E45273","user_header":"https://static001.geekbang.org/account/avatar/00/11/d7/45/0ae73cb6.jpg","comment_is_top":false,"comment_ctime":1582470684,"is_pvip":false,"replies":[{"id":"70234","content":"在不更改代码的情况下有些外部依赖的服务可以通过统一的proxy转发，这个统一配置可以完成。您可以学习一下服务端的proxy的使用。另外还可以通过统一配置服务修改的，开发在代码中的路由是通过配置完成的，因此替换配置也可以完成。具体那种可行还要SUT，因此您可以看一下服务端proxy或者统一配置。应该还有其他方法，不过都是通过一下代码的配置或者转发完成的，目前还没有看到过可以一劳永逸的工具，这都要依赖于开发的系统设计，因此选择那种使用被测系统决定的。","user_name":"作者回复","user_name_real":"接口测试专栏作者陈磊","uid":"1064280","ctime":1582502084,"ip_address":"","comment_id":181073,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582470684","product_id":100045801,"comment_content":"老师您好，看见有同仁也在请教mock服务器定向访问的问题，关于这块我也想多请教一下～之前做过一个跟三方合作项目的自动化，在自动化的时候将三方接口都给mock掉了，在运维的帮助下，搭建了一个mock服务器，当时运维就给了我几个根路由，我只用在接口调用的时候带上相应的根路由+path，发出的请求就会自动发送到mock服务器上，而不去调用三方的接口。请问为啥在未改动相应开发代码的前提下，可以实现请求的转移的呢？或者有无相应的资料可以推荐我自行去查阅，感谢🙏","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484908,"discussion_content":"在不更改代码的情况下有些外部依赖的服务可以通过统一的proxy转发，这个统一配置可以完成。您可以学习一下服务端的proxy的使用。另外还可以通过统一配置服务修改的，开发在代码中的路由是通过配置完成的，因此替换配置也可以完成。具体那种可行还要SUT，因此您可以看一下服务端proxy或者统一配置。应该还有其他方法，不过都是通过一下代码的配置或者转发完成的，目前还没有看到过可以一劳永逸的工具，这都要依赖于开发的系统设计，因此选择那种使用被测系统决定的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582502084,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180962,"user_name":"彦鋆","can_delete":false,"product_type":"c1","uid":1819500,"ip_address":"","ucode":"400A12A6ADD7C3","user_header":"https://static001.geekbang.org/account/avatar/00/1b/c3/6c/d24a23a7.jpg","comment_is_top":false,"comment_ctime":1582449575,"is_pvip":false,"replies":[{"id":"70222","content":"在中文中应该是一个意思了，但是这种叫法确实不对，文章有Martin的一个文章 里面详细介绍了test double的区别，有一种叫做stub就是您说的打桩，和mock是有区别的，但是在国内这概念一点混淆。","user_name":"作者回复","user_name_real":"接口测试专栏作者陈磊","uid":"1064280","ctime":1582463872,"ip_address":"","comment_id":180962,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582449575","product_id":100045801,"comment_content":"我在工作中也遇到过使用Mock服务测试的情况；我们的软件是为生产产线服务的，代码分业务层代码和物理层代码，物理层的代码主要需要和机器仪器交互，由于生产环境紧张，所以我们需要验充分验证业务层的代码逻辑，就需要模拟物理层的接口返回。我们先在生产环境用Fiddler抓取接口返回数据，然后使用自己的MOckf服务完全模拟物理层的返回数据充分验证业务层的代码。  还有个问题想问问老师，mock服务和打桩测试有什么区别？","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484864,"discussion_content":"在中文中应该是一个意思了，但是这种叫法确实不对，文章有Martin的一个文章 里面详细介绍了test double的区别，有一种叫做stub就是您说的打桩，和mock是有区别的，但是在国内这概念一点混淆。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582463872,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180802,"user_name":"喵喵喵","can_delete":false,"product_type":"c1","uid":1211713,"ip_address":"","ucode":"E3AD8BF42E19DF","user_header":"https://static001.geekbang.org/account/avatar/00/12/7d/41/3c5b770b.jpg","comment_is_top":false,"comment_ctime":1582395891,"is_pvip":false,"replies":[{"id":"70140","content":"谢谢","user_name":"作者回复","user_name_real":"Criss Chan","uid":"1064280","ctime":1582419841,"ip_address":"","comment_id":180802,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582395891","product_id":100045801,"comment_content":"打卡～","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484799,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582419841,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180734,"user_name":"徐锦","can_delete":false,"product_type":"c1","uid":1116178,"ip_address":"","ucode":"5DFA43E12F685D","user_header":"https://static001.geekbang.org/account/avatar/00/11/08/12/9c7ea83a.jpg","comment_is_top":false,"comment_ctime":1582377189,"is_pvip":false,"replies":[{"id":"70125","content":"mock服务要让系统调用还是需要开发协助的，一般是让开发做一个独立的配置，方便切换","user_name":"作者回复","user_name_real":"Criss Chan","uid":"1064280","ctime":1582386477,"ip_address":"","comment_id":180734,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582377189","product_id":100045801,"comment_content":"老师你好，微服务中mock服务搭建好后，怎么路由到“替身”服务呢？面对微服务的主控，服务注册这些都不是很懂。","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484774,"discussion_content":"mock服务要让系统调用还是需要开发协助的，一般是让开发做一个独立的配置，方便切换","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582386477,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180121,"user_name":"Vengy","can_delete":false,"product_type":"c1","uid":1731262,"ip_address":"","ucode":"B4EACCBB68027E","user_header":"https://static001.geekbang.org/account/avatar/00/1a/6a/be/58b520d9.jpg","comment_is_top":false,"comment_ctime":1582191864,"is_pvip":true,"replies":[{"id":"69963","content":"如果push服务是你的SUT那就不能用替代服务。如果是不是，那么可以mock，你只需要知道push服务等方面返回就好了，模拟调用push服务，并返回成功推动结果就好了，那么是不是推送出去了不重要。","user_name":"作者回复","user_name_real":"Criss Chan","uid":"1064280","ctime":1582203188,"ip_address":"","comment_id":180121,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582191864","product_id":100045801,"comment_content":"有个很头疼的问题想请假老师。 push推送 能mock吗？ 公司的推送平台经常出问题，而且最近在家办公，测试环境push更是难通。如果不能mock，有什么解决的方案或方向吗？求指明，谢谢！","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484536,"discussion_content":"如果push服务是你的SUT那就不能用替代服务。如果是不是，那么可以mock，你只需要知道push服务等方面返回就好了，模拟调用push服务，并返回成功推动结果就好了，那么是不是推送出去了不重要。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582203188,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179980,"user_name":"派森","can_delete":false,"product_type":"c1","uid":1169937,"ip_address":"","ucode":"063AC75FA77EFB","user_header":"https://static001.geekbang.org/account/avatar/00/11/da/11/bdffffa6.jpg","comment_is_top":false,"comment_ctime":1582136320,"is_pvip":true,"replies":[{"id":"69890","content":"要做到mock服务，需要测试工程师和系统架构师、开发工程师有深入的交流，team内部高度的合作，解耦是为了接触外部问题，不是团队内部问题。这个mock服务既可以为测试使用，也可以提供给开发使用的。","user_name":"作者回复","user_name_real":"Criss Chan","uid":"1064280","ctime":1582169992,"ip_address":"","comment_id":179980,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582136320","product_id":100045801,"comment_content":"老师好，没用过mock，这块空白，所以几个小问题请教下，<br>1.我怎么样主动发现被测接口是有外部系统依赖的呢，有时候我并不知道存在这样的依赖关系<br>2.如果我依赖的不是一个另一个系统，而是一个数据库，这个也可以mock掉？<br>3.对于那些有外部依赖的被测接口，不同的接口依赖的返回结构也是不同的，怎么去描述这种结构呢？而且我在测试A接口的时候，并不清楚它依赖的B接口的接口信息啊<br>4.总感觉，这样会带来零一份开销，工作量也很大<br>5.有些依赖环境是OK的，有些不OK，那么我们是统一采用mock，还是部分采用mock<br>6.后续所有系统开发完毕后，还需要对当初使用mock的接口重新测试一下吗？（只是担心）","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484475,"discussion_content":"要做到mock服务，需要测试工程师和系统架构师、开发工程师有深入的交流，team内部高度的合作，解耦是为了接触外部问题，不是团队内部问题。这个mock服务既可以为测试使用，也可以提供给开发使用的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582169992,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}