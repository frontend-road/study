{"id":96315,"title":"31 | iOS 开发学习资料和书单推荐","content":"<p>你好，我是戴铭。</p><p>在更新专栏的这段时间里，我收到很多同学的反馈，希望我能推荐些iOS开发的优秀学习资料和图书，来帮助自己高效学习。确实，现在各种学习资料非常丰富，但这些资料一方面质量参差不齐，另一方面搜索出适合自己的内容也需要花费不少时间。</p><p>快速找到经过检验的、适合自己的学习资料，不仅可以提升我们的学习效率，还能帮助我们快速解决现阶段遇到的问题。所以，今天我就来跟你分享一些我觉得不错的学习资料和图书。</p><h2>学习资料</h2><p>iOS 开发往往会涉及界面交互，<a href=\"https://iosexample.com/\">iOS Examples</a>和<a href=\"https://www.cocoacontrols.com/\">Cocoa Controls</a>这两个网站收集了大量的开源组件和库，并且进行了非常细致的分类，你能够非常方便地找到适合自己的“轮子”。</p><p>如果你希望通过完整的例子来系统学习 App 开发，我推荐你查看一下GitHub上的<a href=\"https://github.com/dkhamsing/open-source-ios-apps\">Open-Source iOS Apps</a>项目。作者在这个项目中收录了很多优秀的、完整的开源 iOS App，并做了详细分类，还专门标出了上架了 App Store 的开源 iOS App。</p><p>AFNetworking 和 Alamofire 的作者 Mattt 维护着一个 <a href=\"https://nshipster.com/\">NSHipster</a>的网站，主要关注的是一些不常用的 iOS 知识点。如果你想扩展自己的iOS 知识面，这个网站里的内容会非常适合你。</p><!-- [[[read_end]]] --><p><a href=\"https://github.com/vsouza/awesome-ios\">Awesome iOS</a>也是一个值得推荐的网站，里面包含了 iOS 开发的方方面面，而且内容都是经过人工筛选、分类的。我觉得，<strong>你遇到任何 iOS 的问题，都应该先到这个网站看看</strong>。</p><p>Awesome iOS 最大的特点就是大而全，囊括了从开发、调试到发布 App Store的各种学习资料，也包含了博客、书籍、教程、邮件订阅、播客的推荐。同时，这个网站还包括了 iOS 开发更细分的 Awesome 推荐，比如关于 ARKit 的 <a href=\"https://github.com/olucurious/Awesome-ARKit\">Awesome ARKit</a>，关于面试问题收集的 <a href=\"https://github.com/dashvlas/awesome-ios-interview\">Awesome iOS Interview</a> question list 等等。</p><p>你还可以通过关注一些知名开发者动态的方式，来为自己学习方向的判断做输入。</p><p>这里有份列表，列出了 iOS 领域那些<a href=\"https://github.com/ipader/SwiftGuide/blob/master/2019/SwiftDevelopers.md\">知名开发者</a>，你可以通过关注他们的博客、Twitter、GitHub ，来了解走在 iOS 领域前沿开发者的视野和 iOS 最新的动向。除了关注知名开发者外，你还可以关注下<a href=\"https://github.com/ipader/SwiftGuide/blob/master/2019/SwiftDevelopmentTeam.md\">开源项目团队</a>的列表，如果你正在使用他们的开源项目，通过关注他们的动向，随时了解这些开源项目的最新进展。</p><h2>图书推荐</h2><p>通过上面我和你推荐的学习资料，你可以去分析并解决在开发中遇到的问题，也可以通过知名开发者和优秀开源项目的团队动态，来了解iOS开发的技术动向。但是，如果你想要透彻地掌握某领域的专业知识，还是需要静下心去慢慢学习。而，阅读相关书籍，就是一种很好的学习方式。</p><p>那么，接下来我再跟你推荐一些我觉得还不错的书籍，希望能够对你的学习有所帮助。</p><p><a href=\"https://store.raywenderlich.com/\">Raywenderlich</a>出版的图书质量都非常不错，可以一步一步教你掌握一些开发知识，内容非常实用，而且这些图书的涉及面广。比如，这些图书包括有 <a href=\"https://store.raywenderlich.com/products/arkit-by-tutorials\">ARKit</a>、Swift 服务端的 <a href=\"https://store.raywenderlich.com/products/server-side-swift-with-vapor\">Vapor</a> 和 <a href=\"https://store.raywenderlich.com/products/server-side-swift-with-kitura\">Kitura</a>、<a href=\"https://store.raywenderlich.com/products/metal-by-tutorials\">Metal</a>、<a href=\"https://store.raywenderlich.com/products/data-structures-and-algorithms-in-swift\">数据结构和算法的 Swift 版</a>、<a href=\"https://store.raywenderlich.com/products/design-patterns-by-tutorials\">设计模式</a>、<a href=\"https://store.raywenderlich.com/products/core-data-by-tutorials\">Core Data</a>、<a href=\"https://store.raywenderlich.com/products/ios-animations-by-tutorials\">iOS 动画</a>、<a href=\"https://store.raywenderlich.com/products/advanced-apple-debugging-and-reverse-engineering\">Apple 调试和逆向工程</a>、<a href=\"https://store.raywenderlich.com/products/rxswift\">RxSwift</a>、<a href=\"https://store.raywenderlich.com/products/realm-building-modern-swift-apps-with-realm-database\">Realm</a>、<a href=\"https://store.raywenderlich.com/products/2d-apple-games-by-tutorials\">2D</a> 和 <a href=\"https://store.raywenderlich.com/products/3d-apple-games-by-tutorials\">3D</a> 游戏开发等各个方面。</p><p>另外，<a href=\"https://www.objc.io/books/\">objc.io</a>家的图书会从原理和源代码实现的角度来讲解知识点，也非常不错，内容比 Raywenderlich 出版的图书更深入，适合有一定 iOS 开发经验的人阅读。</p><p>Raywenderlich 和 objc.io 的书基本都是 Swift 来写的。如果你想更深入地理解 Objective-C 的话，我推荐<a href=\"time://mall?url=https%3A%2F%2Fh5.youzan.com%2Fv2%2Fgoods%2F2ok8btknjr3e0%3Fstep%3D1\">《Objective-C高级编程》</a>这本书。这本书里的知识点并不多，主要讲的是内存管理、Block、GCD（Grand Central Dispatch）。</p><p>这三个知识点对Objective-C来说非常重要，如果使用不当将会置你的工程于风险之中。正是因为涉及的知识点不多，所以全书能基于苹果公司公开的源码，集中讲清楚这三个知识点。这，非常难得。因此，如果你对内存管理、Block、GCD 了解地不是很透彻，我建议你仔细阅读这本书。</p><p>如果你想要了解系统工作原理的话，我推荐阅读<a href=\"time://mall?url=https%3A%2F%2Fh5.youzan.com%2Fv2%2Fgoods%2F3f42f8o0371ug%3Fstep%3D1\">《程序员的自我修养 - 链接、装载与库》</a>。这本书详细且深入地讲解了硬件、操作系统、线程的知识。</p><p>阅读这本书之前，你需要先掌握 CPU、计算机原理、汇编、编译原理、C 语言、C++语言等计算机学科的基本知识。掌握了这些知识后再阅读这本书，它能帮你把知识串起来，帮你从代码编译、链接到运行时内存虚拟空间和物理空间映射的角度，了解一个程序从编写到运行时的底层知识的方方面面。</p><p>现在编程技术不断推陈出新，不断通过添加中间层将底层埋住，新一代开发人员也越来越不重视底层知识，所以当他们学到的上层知识被更新替代以后就会感叹赶不上技术更新的脚步，知识焦虑感越来越严重。</p><p>而读完这本书，你就会发现，有些知识是不会变的，不管上层如何变化，只要抓住这些知识就能够抓住核心，掌握技术的走向。</p><p>《程序员的自我修养 - 链接、装载与库》耗时30年才被出版，期间作者不断优化其中的内容，最终成为一本经典图书。正如其名，程序员的自我修养，就是来自对程序运行背后机制的学习，而不是一味地追新。除了内容地道以外，这本书的作者们精益求精的精神也非常值得我们学习。</p><p>当你有了大量的编程经验，需要考虑工程架构合理性的时候，我推荐你看看<a href=\"time://mall?url=https%3A%2F%2Fh5.youzan.com%2Fv2%2Fgoods%2F276fjn6r89uuw%3Fstep%3D1\">《架构整洁之道》</a>这本书。架构设计的思想也不会过时，并适用于所有的知识领域。</p><p>这本书详细分析了架构的目标价值、编程范式、架构设计原则、组件拆分和边界处理。其中，编程范式介绍了结构化编程、面向对象编程、函数式编程等。设计原则包含了开闭原则 OCP、单一职责原则 SRP、里氏替换原则 LSP、接口隔离原则 ISP、依赖反转原则 DIP 等等，内容十分丰富。熟练掌握这些架构设计原则，会让你对架构的理解更深，也可以从更多方面去思考。</p><p>值得一提的是，这本书还通过实践案例把所讲知识都串了起来，让你更容易理解架构设计的知识。</p><h2>小结</h2><p>在今天这篇文章中，我和你分享了很多关于iOS开发的学习资料，这其中有优秀的开源项目，也有一些经典的图书。尤其是《程序员的自我修养 - 链接、装载与库》和《架构整洁之道》这两本书，值得你反复阅读。在不同阶段去阅读这两本书，你会有不同的体会，也会有不同的收获。</p><p>如果你还想阅读更多计算机编程相关的经典书，可以再看看《编码》、<a href=\"time://mall?url=https%3A%2F%2Fh5.youzan.com%2Fv2%2Fgoods%2F3691yho9a34oo%3Fstep%3D1\">《代码整洁之道》</a>、《代码大全》、<a href=\"time://mall?url=https%3A%2F%2Fh5.youzan.com%2Fv2%2Fgoods%2F3f1l7krpotnjc%3Fstep%3D1\">《算法》</a>。</p><p>每个人的学习时间都是有限的，上班时要争分夺秒的完成任务，下班放假还要放松休息。与其无止境的寻找资料，还不如静下心来阅读经典和多一些思考。所以，希望我今天的这篇文章可以帮到你。</p><h2>课后作业</h2><p>你在读过的书里，哪一本对你帮助最大呢？</p><p>感谢你的收听，欢迎你在评论区给我留言分享你的观点，也欢迎把它分享给更多的朋友一起阅读。</p><p></p>","neighbors":{"left":{"article_title":"30 | 如何制定一套适合自己团队的 iOS 编码规范？","id":95854},"right":{"article_title":"32 | 热点问题答疑（三）","id":96883}},"comments":[{"had_liked":false,"id":96707,"user_name":"九夏对三冬","can_delete":false,"product_type":"c1","uid":1016797,"ip_address":"","ucode":"6010C1DE53EF3E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/83/dd/86468048.jpg","comment_is_top":false,"comment_ctime":1558489988,"is_pvip":false,"discussion_count":1,"race_medal":1,"score":"203421952900","product_id":100024501,"comment_content":"”《程序员的自我修养 - 链接、装载与库》耗时 30 年才被出版“ 有笔误啊，书的序里，大概是作者读研时期，拉了石凡和潘爱明，2006年开始构思，花了1-2两年完成的。30三十年的是《演员的自我修养》","like_count":48,"discussions":[{"author":{"id":1233054,"avatar":"https://static001.geekbang.org/account/avatar/00/12/d0/9e/eda4bcef.jpg","nickname":"董鹏宇","note":"","ucode":"8A722083682C8A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383828,"discussion_content":"哈哈～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626249591,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96427,"user_name":"1 OR 1=1","can_delete":false,"product_type":"c1","uid":1457539,"ip_address":"","ucode":"5324E073115CAD","user_header":"https://static001.geekbang.org/account/avatar/00/16/3d/83/89ff35f9.jpg","comment_is_top":false,"comment_ctime":1558419829,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"100342667637","product_id":100024501,"comment_content":"《Effective objective-C 2.0 编写高质量iOS与OS X代码的52个有效方法》 这本书也讲的很好","like_count":24},{"had_liked":false,"id":96313,"user_name":"clownfish","can_delete":false,"product_type":"c1","uid":1389506,"ip_address":"","ucode":"6838EE3D37BD54","user_header":"https://static001.geekbang.org/account/avatar/00/15/33/c2/3a5b0d9f.jpg","comment_is_top":false,"comment_ctime":1558397994,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27328201770","product_id":100024501,"comment_content":"读了前辈推荐的《Objective-C 高级编程》，确实会对内观管理，block底层有一个新的认识，GCD的话也会了解场景使用，但是没有深入底层讲解。<br>另外推荐两本刚刚读完的书，《Effective Objective-C 2.0》可以视为是针对OC的一个开发规范<br>还有一本和技术无关的书，《软技能，代码之外的生存指南》是一本毒鸡汤和提升认知价值观并存的书，休闲时间可以一读。<br>前辈推荐的clean code和程序员自我修养也是必读书籍，目前正准备开始了","like_count":7},{"had_liked":false,"id":96330,"user_name":"李志刚","can_delete":false,"product_type":"c1","uid":1239779,"ip_address":"","ucode":"13F17BF13275F8","user_header":"https://static001.geekbang.org/account/avatar/00/12/ea/e3/5818be1e.jpg","comment_is_top":false,"comment_ctime":1558399826,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23033236306","product_id":100024501,"comment_content":"这篇妥妥的干货，一篇就抵上整个课程的学费，果断收藏！","like_count":6},{"had_liked":false,"id":97321,"user_name":"杨少侠","can_delete":false,"product_type":"c1","uid":1006570,"ip_address":"","ucode":"56E21D166BBCF3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5b/ea/d49b9301.jpg","comment_is_top":false,"comment_ctime":1558656467,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"14443558355","product_id":100024501,"comment_content":"「码农翻身」，有趣，对没有计算机基础知识的同学们帮助会很大","like_count":4},{"had_liked":false,"id":96701,"user_name":"木木彡","can_delete":false,"product_type":"c1","uid":1455806,"ip_address":"","ucode":"2661AC2EF856E9","user_header":"https://static001.geekbang.org/account/avatar/00/16/36/be/f68a19b1.jpg","comment_is_top":false,"comment_ctime":1558489328,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14443391216","product_id":100024501,"comment_content":"《重构》","like_count":4},{"had_liked":false,"id":147201,"user_name":"Master","can_delete":false,"product_type":"c1","uid":1454833,"ip_address":"","ucode":"642F865923C98A","user_header":"https://static001.geekbang.org/account/avatar/00/16/32/f1/54575096.jpg","comment_is_top":false,"comment_ctime":1572837278,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10162771870","product_id":100024501,"comment_content":"《Objective-C 高级编程》这本书感觉不适合现在了，特别是内存管理这块，以为懂了，然后对着书上的代码敲了几遍想验证一下结果，发现结果和书上大不一样啊。","like_count":3,"discussions":[{"author":{"id":2402457,"avatar":"https://static001.geekbang.org/account/avatar/00/24/a8/99/3a40d0ee.jpg","nickname":"Batac","note":"","ucode":"4226F8BCE418C6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":346136,"discussion_content":"编译器更新后，又做很多优化， 比如类的底层结构，2020年又做了新的修改！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611881209,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96742,"user_name":"老友@极客时间","can_delete":false,"product_type":"c1","uid":1006312,"ip_address":"","ucode":"BA96C0D6200590","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5a/e8/6a73208c.jpg","comment_is_top":false,"comment_ctime":1558495773,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5853463069","product_id":100024501,"comment_content":"谢谢老板","like_count":1},{"had_liked":false,"id":96352,"user_name":"李超","can_delete":false,"product_type":"c1","uid":1100136,"ip_address":"","ucode":"4CB77844ADC513","user_header":"https://static001.geekbang.org/account/avatar/00/10/c9/68/38c5a4f3.jpg","comment_is_top":false,"comment_ctime":1558402270,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5853369566","product_id":100024501,"comment_content":"推荐看看编程珠玑，别看翻译版，英文原版才有味道","like_count":0},{"had_liked":false,"id":96326,"user_name":"Change","can_delete":false,"product_type":"c1","uid":1161260,"ip_address":"","ucode":"FB60D2378C9F02","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/2c/0f7baf3a.jpg","comment_is_top":false,"comment_ctime":1558399445,"is_pvip":false,"discussion_count":0,"race_medal":2,"score":"5853366741","product_id":100024501,"comment_content":"以不变应万变，万变不离其宗。还是要多掌握不变的东西，学习本质内容，才能应对技术的更新换代。","like_count":2},{"had_liked":false,"id":129221,"user_name":"Alex","can_delete":false,"product_type":"c1","uid":1454262,"ip_address":"","ucode":"E2B9DC52645593","user_header":"","comment_is_top":false,"comment_ctime":1567064709,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1567064709","product_id":100024501,"comment_content":"知名开发者和开源项目团队跳转的都是Swift的内容，不是OC啊................","like_count":0,"discussions":[{"author":{"id":1108007,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e8/27/4cb985b9.jpg","nickname":"春风","note":"","ucode":"29A33F2D4EA374","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":157492,"discussion_content":"说明你要向Swift靠了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580480848,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121987,"user_name":"宋唐不送糖","can_delete":false,"product_type":"c1","uid":1604777,"ip_address":"","ucode":"9A7DE4F11B59CC","user_header":"https://static001.geekbang.org/account/avatar/00/18/7c/a9/addd4b3a.jpg","comment_is_top":false,"comment_ctime":1565264820,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565264820","product_id":100024501,"comment_content":"马丁弗勒的重构确实很透彻","like_count":0},{"had_liked":false,"id":102822,"user_name":"Sven","can_delete":false,"product_type":"c1","uid":1319213,"ip_address":"","ucode":"25FDF688E782B4","user_header":"https://static001.geekbang.org/account/avatar/00/14/21/2d/22943c67.jpg","comment_is_top":false,"comment_ctime":1560308991,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1560308991","product_id":100024501,"comment_content":"如果你想要了解系统工作原理的话，我推荐阅读《程序员的自我修养 - 链接、装载与库》。这本书详细且深入地讲解了硬件、操作系统、线程的知识。<br><br>阅读这本书之前，你需要先掌握 CPU、计算机原理、汇编、编译原理、C 语言、C++ 语言等计算机学科的基本知识。<br><br>—————-<br>非计算机专业，转行干iOS的，在看自我修养这本书之前。应该看些什么呢？尝试看过自我修养。感觉不太懂","like_count":0,"discussions":[{"author":{"id":1244701,"avatar":"https://static001.geekbang.org/account/avatar/00/12/fe/1d/ed26272a.jpg","nickname":"Chouee","note":"","ucode":"F74E58A430C470","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":271884,"discussion_content":"同样是转行做iOS的，过去两年在看数据结构与算法，设计模式，计算机网络，汇编……感觉别人的大学四年真不是白读的啊，相比之下，自己落下的东西太多了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1590212725,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":98561,"user_name":"赶紧学起来","can_delete":false,"product_type":"c1","uid":1523664,"ip_address":"","ucode":"965392C1C38638","user_header":"https://static001.geekbang.org/account/avatar/00/17/3f/d0/5bd853ea.jpg","comment_is_top":false,"comment_ctime":1559029005,"is_pvip":false,"replies":[{"id":"38608","content":"哈哈，行动起来","user_name":"作者回复","user_name_real":"戴铭","uid":"1140280","ctime":1561388199,"ip_address":"","comment_id":98561,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1559029005","product_id":100024501,"comment_content":"如饥似渴地看了一半，激动的午休都没睡着。学习的指路明灯","like_count":1,"discussions":[{"author":{"id":1140280,"avatar":"https://static001.geekbang.org/account/avatar/00/11/66/38/f9999b2b.jpg","nickname":"戴铭","note":"","ucode":"D61E685F962387","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451738,"discussion_content":"哈哈，行动起来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561388199,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97580,"user_name":"政","can_delete":false,"product_type":"c1","uid":1234640,"ip_address":"","ucode":"F17443038872DE","user_header":"https://static001.geekbang.org/account/avatar/00/12/d6/d0/259e7ce3.jpg","comment_is_top":false,"comment_ctime":1558700907,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558700907","product_id":100024501,"comment_content":"30年前，怕是计算机都没怎么普及吧","like_count":1},{"had_liked":false,"id":97361,"user_name":"熊","can_delete":false,"product_type":"c1","uid":1406020,"ip_address":"","ucode":"C794160A03DD8B","user_header":"https://static001.geekbang.org/account/avatar/00/15/74/44/6d80dc8b.jpg","comment_is_top":false,"comment_ctime":1558660346,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558660346","product_id":100024501,"comment_content":"这篇最干。干了干了","like_count":0},{"had_liked":false,"id":96706,"user_name":"淇则有岸","can_delete":false,"product_type":"c1","uid":1473099,"ip_address":"","ucode":"342BB93F4F6D37","user_header":"https://static001.geekbang.org/account/avatar/00/16/7a/4b/70041204.jpg","comment_is_top":false,"comment_ctime":1558489971,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558489971","product_id":100024501,"comment_content":"《Objective-C 高级编程》真是一本特别棒的书，真正的深入浅出，看完对block和GCD都有新的认识，会帮你理解为什么很多底层的知识，或者最起码以后面试的时候问到这几个地方怎么问都能回答上来","like_count":0},{"had_liked":false,"id":96420,"user_name":"逍觉迷遥","can_delete":false,"product_type":"c1","uid":1070782,"ip_address":"","ucode":"4287B0B6A23A25","user_header":"https://static001.geekbang.org/account/avatar/00/10/56/be/d68998fa.jpg","comment_is_top":false,"comment_ctime":1558417926,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558417926","product_id":100024501,"comment_content":"大神，问你个个问题？自定义动态库内部的crash问题怎么收集？我在集成自己动态库的项目里加了bugly，模拟器可以收集。真机就不行了？大神，能否给个思路或意见","like_count":0},{"had_liked":false,"id":96308,"user_name":"Ant","can_delete":false,"product_type":"c1","uid":1079563,"ip_address":"","ucode":"07E6374F91F61E","user_header":"https://static001.geekbang.org/account/avatar/00/10/79/0b/4346a253.jpg","comment_is_top":false,"comment_ctime":1558397808,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558397808","product_id":100024501,"comment_content":"3Q","like_count":0}]}