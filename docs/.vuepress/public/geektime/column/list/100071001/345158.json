{"id":345158,"title":"06 | jieba分词：如何基于感情色彩进行单词数量统计？","content":"<p>你好，我是尹会生。</p><p>在涉及运营、市场的工作中，我们经常需要根据产品评论的情感分析，来了解某一产品的口碑。所谓的情感分析，就是指根据用户对产品的评论，分析出用户对产品的喜好程度。</p><p>最简单的，我们会<strong>区分产品的评价是正向还是负向</strong>的，然后根据反馈结果改变产品的特性。稍微复杂一点的，我们会<strong>根据情感色彩将产品的评价关键词提取出来，进行统计和分类（用于更深入的分析产品）。</strong></p><p>如果靠人工对产品评价进行辨析，有很大的局限性：一个是不够公平，因为每个人对词语感情色彩的理解并不是完全一致的；另一个是产品评价有很多，而且还会不定期增加，人工分析很难保证及时性。</p><p>因此，在进行词语的情感分析时，我通常都会使用Python的jieba库，来自动化实现文本情感分析功能。一般需要经过三个步骤，分别是<strong>分词、优化分词结果和情感分析</strong>。</p><p>那我就先带你看看<strong>为什么要进行分词，以及如何进行分词操作。</strong></p><h1>如何分词？</h1><p>要想判断一段话表达的情感是正向还是负向，就需要根据这句话中的关键词来得到情感的倾向。例如一段话中出现了“开心”“高兴”“物超所值”等正向的词语，我们就可以认定这条产品的评价是偏正向的。相反，出现“不喜欢”“差”等词语，评价就是偏负向的。</p><p>但是，要想从一句话中将这些表达情感的词一个一个找出来，就需要依靠专业的工具把一句话根据语义划分成多个词，再把表达情感的词语提取出来，进行情感分析。</p><!-- [[[read_end]]] --><p>为什么要先根据语义来划分词呢？这主要是因为中文句子里的每个词中间没有用空格进行分隔，没有分隔就没法进行之后的情感分析。而对中文句子按照语义进行切割的这种操作，我们就称为“分词”。</p><p>Python中有非常成熟的分词库，其中最流行的库是jieba库。在计算机中，实现语义分割的技术有两种，一种是从统计学的角度分词，另一种是从词库的角度基于TF-IDF算法实现分词。jieba就是采用第二种，基于词库的角度对文章进行自动分词的。</p><p>那我就以电商网站上的一段商品评论为例，给你演示一下jieba库是如何实现分词的。</p><pre><code>import jieba\n\nwords1=&quot;速度快，包装好，看着特别好，喝着肯定不错！价廉物美&quot;\n\nwords2 = jieba.cut(words1)\n\nprint(&quot;/&quot;.join(words2))\n# 速度/快/，/包装/好/，/看着/特别/好/，/喝/着/肯定/不错/！/价廉物美\n</code></pre><p>在这段代码中，我利用jieba库的cut()函数实现了自动分词功能。我刚才讲了，jieba分词是依靠词库实现的，词库里包含了提前准备好的词和词性。下图就是jieba词库的内容：</p><pre><code>一鼓 ru\n一鼓作气 ru\n一马当先 ru\n... ...\n</code></pre><p>这些词库中的词，jieba是怎么识别的呢？</p><p>在你使用pip命令安装了jieba库之后，它会附带一个默认的词库。在官方文档中，将这个词库称作“字典”文件。这个文件包含了日常汉语的词语、词性。jieba库会先基于“字典”对文章中所有可能出现的词进行匹配。匹配之后，会生成句子中的汉字所有可能形成的词。然后再将这些词构成的有向无环图（DAG），并采用动态规划算法查找最大概率路径，尽可能不会将一个词拆分成单个汉字。最后再从“字典”找出基于词频的最大切分组合，把这分词的组合从句子中找出来，形成一个一个的词。</p><p>而且，为了提高分词的准确率，jieba对没有记录在字典的词（称作未登录词）也使用了分词的模型，它就是大名鼎鼎的基于汉字成词能力的HMM模型（隐马尔可夫模型）。对词库中的词和未登录词进行处理之后，jieba就可以实现自动化分词了。</p><p>不过，分词之后，我们还需要对分词结果进行优化。因为在分词结果中存在着大量的标点符号，还有“看着”“喝着”“包装” 等和表达产品评价的情感无关的词语，为了加快计算词语的情感速度、避免无关词语影响情感倾向判断，我们就要优化分词的结果。</p><h1>优化分词结果</h1><p>优化分词结果主要从两个方面进行优化：一方面是移除标点符号；一方面是删除和情感无关的助词、名词等。</p><p>我先来带你学习下怎么从分词结果中移除标点符号。</p><p>移除标点符号一般有两种方法：</p><ol>\n<li>删除停止词（Stop Words）；</li>\n<li>根据词性提取关键词。</li>\n</ol><p>先来看看第一种，删除停止词。</p><p>所谓的停止词，就是指<strong>为了节省空间和提高匹配词语情感倾向的效率，在进****行情感分析前自动过滤掉的某些字或词。</strong></p><p>停止词主要是标点符号，也可以是“啊呀呢”等语气助词。把标点符号写入停止词列表后，再使用for循环功能，将jieba分好的词和停止词列表依次匹配。如果jieba分好的词出现在列表中，就将这些词删掉。如果没有出现在列表中，就把这些词再组合成一个新的列表，后续就可以对新的列表进行情感分析。</p><p>删除停止词的代码如下。通过删除停止词，我们就可以得到只有汉字的分词结果。</p><pre><code>words2 = jieba.cut(words1)\nwords3 = list(words2)\nprint(&quot;/&quot;.join(words3))\n# 速度/快/，/包装/好/，/看着/特别/好/，/喝/着/肯定/不错/！/价廉物美\n\nstop_words = [&quot;，&quot;, &quot;！&quot;]\nwords4 =[x for x in words3 if x not in stop_words]\nprint(words4)\n# ['速度', '快', '包装', '好', '看着', '特别', '好', '喝', '着', '肯定', '不错', '价廉物美']\n</code></pre><p>另一种优化分词结果的方式叫做根据词性提取关键词。这种方式的优点在于不用事先准备停用词列表，jieba库就能够根据每个词的词性对其进行标注。</p><p>我这里为你提供了一张paddle（paddle是百度开源的深度学习平台，jieba使用了paddle的模型库）模式词性表作为参考，你可以根据jieba自动分析得到的词性结果，手动将助词、虚词（标点符号）移除。</p><p><img src=\"https://static001.geekbang.org/resource/image/de/5a/dec72024563b5179f08b5c314a59da5a.png?wh=2178*1116\" alt=\"\"><br>\n我把这个基于词性移除标点符号的代码也提供给你：</p><pre><code># words5 基于词性移除标点符号\nimport jieba.posseg as psg  \nwords5 = [ (w.word, w.flag) for w in psg.cut(words1) ]\n# 保留形容词\nsaved = ['a',]\nwords5 =[x for x in words5 if x[1] in saved]\nprint(words5)\n# [('快', 'a'), ('好', 'a'), ('好', 'a'), ('不错', 'a')]\n\n</code></pre><p>在这段代码中，我在使用jieba库的posseg类实现分词的同时，也对词性进行了标注。为了让你看到更直接的结果，我只保留了形容词，因此，变量saved的列表参数就只有一个‘a’，表示保留的词类型为形容词。</p><p>如果你希望保留更多的词性，可以将词性表中代表每种词的英文缩写写入saved列表中，其中，我建议你在处理之后把形容词、副词、动词都保留下来，这些都有助于你进行下一步的语义情感分析。</p><p>在优化分词结果之后，我们就得到了只有形容词的处理结果。那么，接下来，我们需要基于这些形容词来获取产品评价的正向或负向结果，以及基于词语的情感色彩来统计单词的数量。</p><h1>语义情感分析</h1><p>对于已经分好词的语句，我们需要使用另一个库统计词的正向、负向情感倾向，这个库就是snownlp库。</p><p>snownlp库既能实现分词，也能计算词出现频率，以及进行情感分析。那你可能就发出疑问了：为什么不直接使用snownlp进行分词，而要使用jieba分词呢？</p><p>原因就在于，snownlp的算法问题，会让它对否定词划分得不够准确。例如“不喜欢”，snownlp会把这个词划分为两个独立的词，分别是“不”和“喜欢”。那么，在计算语义情感时，就会产生较大的误差。所以我们会先采用jieba进行分词，分词之后再采用snownlp来实现语义情感分析功能。</p><p>接下来，我带你看一下如何使用snownlp得到完成分词之后的情感分析结果。代码如下：</p><pre><code>from snownlp import SnowNLP\nwords6 = [ x[0] for x in words5 ]\ns1 = SnowNLP(&quot; &quot;.join(words3))\nprint(s1.sentiments)\n# 0.99583439264303 \n</code></pre><p>这段代码通过snownlp的Bayes（贝叶斯）模型训练方法，将模块自带的正样本和负样本读入内存之后，再使用Bayes模型中的classify()函数进行分类，这样就得到了sentiments属性的值，sentiments的值表示情感倾向的方向。在snownlp中：</p><ul>\n<li>如果情感倾向是正向的，sentiments的结果会接近1。</li>\n<li>如果情感倾向是负向的，结果会接近0。</li>\n</ul><p>可以看到，我们在刚刚的代码中得到的情感分析的结果是0.9958，非常接近1，因此这条产品的评价就是正向的。</p><p>情感倾向结果趋近于1或者趋近于0都是非常理想的情况，可以直接得到感情色彩比较强烈的产品评价。但是，有时候感情色彩不太强烈，在这种情况下，我们就需要根据评价的数值范围对评论进行分组，统计每组包含多少个评价。</p><p>这个功能也可以通过snownlp实现，我把代码写在这里，你可以参考：</p><pre><code>positive = 0\nnegtive = 0\nfor word in words6:\n    s2 = SnowNLP(word)\n\n    if s2.sentiments &gt; 0.7:\n        positive+=1\n    else:\n        negtive+=1\n\n    print(word,str(s2.sentiments))\nprint(f&quot;正向评价数量:{positive}&quot;)\nprint(f&quot;负向评价数量:{negtive}&quot;)\n# 快 0.7164835164835165\n# 好 0.6558628208940429\n# 好 0.6558628208940429\n# 不错 0.8612132352941176\n# 价廉物美 0.7777777777777779\n# 正向评价数量:3\n# 负向评价数量:2\n</code></pre><p>通过snownlp库配合jieba分词的结果，你就可以实现批量产品评论的自动语义情感分析了。同时，你还可以根据不断累积产品的评价，来持续优化你的产品。</p><h1>小结</h1><p>最后，我来为你总结一下对文件进行情感倾向分析的关键步骤和注意事项。实现语义情感分析功能，你必须掌握分词、优化分词结果、语义情感分析这三个步骤。</p><p>其中分词是实现中文语义分析的第一步，也是最基础的部分。分词的好坏决定了对每个词的情感进行标注的准确程度。如果默认的jieba分词没有正确地把词语划分，你也可以使用jieba自带的suggest_freq()函数进行词频调节。</p><p>举个小例子，“中”“将”两个字可以组成“中将”的词语，也可以拆开来用“我们中/将有人成功考上北大”。在不同的语言环境中，我们要通过词频调节来让它们以词的形式出现，还是以两个字的方式出现。调整的方法是：</p><pre><code>jieba.suggest_freq((&quot;中&quot;, &quot;将&quot;), tune = True)\n</code></pre><p>可以看到，利用调节词频使“中”“将”都能被分出来，而不会被错误地识别为一个词“中将”，通过这种方式，就可以提升jieba的识别正确率。</p><p>在优化分词结果这一步，你可以通过减少虚词和标点符号，通过停止词、词性的选择，来降低它们对情感分析结果的干扰。</p><p>最后，你还可以为snownlp增加新的流行词和网络用语，帮你更准确地分析用户对产品的喜好程度，从而提高产品定位的精确度。</p><p>在snownlp中，通过train()和 save()两个函数把模型训练和保存之后，就能实现扩展默认字典的功能了。此外，我在工作中还会利用这种方式增加emoji表情对应的情感倾向分析功能，以此来进一步提升snownlp分析情感倾向的准确度。</p><p>我将训练模型和保存训练后的模型的函数也写在这里供你参考，希望通过训练自己的模型，能够让你的产品分析更加准确。</p><pre><code>sentiment.train(neg2.txt,pos2.txt);  #   训练用户自定义正负情感数据集\nsentiment.save('sentiment2.marshal');  # 保存训练模型\n</code></pre><p>今天用到的代码，我都放在了 GitHub 上，你可以点击<a href=\"https://github.com/wilsonyin123/python_productivity/blob/main/%E6%96%87%E7%AB%A06%E4%BB%A3%E7%A0%81.zip\">这个链接</a>查看。</p><h1>思考题</h1><p>我给你留一道思考题，我在最后一段代码分别统计了正向和负向评价的数量，你能否根据这段代码统计一段文字中包含了多少个动词、多少个名词和多少个形容词呢？欢迎你在课程评论区留言，和我一起讨论。</p>","neighbors":{"left":{"article_title":"05 | 图像处理库：如何实现长图拼接？","id":344093},"right":{"article_title":"07｜快速读写文件：如何实现跨文件的字数统计？","id":345940}},"comments":[{"had_liked":false,"id":284328,"user_name":"陈东","can_delete":false,"product_type":"c1","uid":2213995,"ip_address":"","ucode":"FCDE6D237CC621","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Ge7uhlEVxicQT73YuomDPrVKI8UmhqxKWrhtO5GMNlFjrHWfd3HAjgaSribR4Pzorw8yalYGYqJI4VPvUyPzicSKg/132","comment_is_top":false,"comment_ctime":1616169401,"is_pvip":true,"replies":[{"id":"103319","content":"统计词性的一般思路是：<br>获取数据、数据预处理(去掉各种符号、空格)、词性标注(包含了jieba分词)、词频统计、数据再次处理(合并，计数，对统计结果格式调整)、数据保存到文件(一般为Excel)<br><br>按照这一顺序来实现词性统计","user_name":"作者回复","user_name_real":"尹会生","uid":"1056235","ctime":1616491190,"ip_address":"","comment_id":284328,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10206103993","product_id":100071001,"comment_content":"老师能分享你词性统计的思路吗？","like_count":2,"discussions":[{"author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517311,"discussion_content":"统计词性的一般思路是：\n获取数据、数据预处理(去掉各种符号、空格)、词性标注(包含了jieba分词)、词频统计、数据再次处理(合并，计数，对统计结果格式调整)、数据保存到文件(一般为Excel)\n\n按照这一顺序来实现词性统计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616491190,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2213995,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Ge7uhlEVxicQT73YuomDPrVKI8UmhqxKWrhtO5GMNlFjrHWfd3HAjgaSribR4Pzorw8yalYGYqJI4VPvUyPzicSKg/132","nickname":"陈东","note":"","ucode":"FCDE6D237CC621","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":372007,"discussion_content":"import jieba.posseg as pseg\nimport jieba\n\ntxt = open(&#39;围城(钱钟书).txt&#39;, &#39;r&#39;, encoding=&#39;utf-8&#39;).read()\nsentence = pseg.cut(txt)\nfor w in sentence:\n    print(w.word, w.flag)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620123533,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":280220,"user_name":"Soul of the Dragon","can_delete":false,"product_type":"c1","uid":2438011,"ip_address":"","ucode":"21603099E51B8A","user_header":"https://static001.geekbang.org/account/avatar/00/25/33/7b/9e012181.jpg","comment_is_top":false,"comment_ctime":1614136682,"is_pvip":false,"replies":[{"id":"101772","content":"你好, 方便描述一下具体统计的是哪种词性吗? 导致这种结果的可能有连个原因, 一个是自动分词分的不够准确,导致了识别出现误差,还有一种原因是统计词性的英文缩写指定的不正确,例如名词就包含了很多详细分类,比如<br>名词分为以下子类：<br>n 名词<br>nr 人名<br>nr1 汉语姓氏<br>nr2 汉语名字<br>nrj 日语人名<br><br>可以搜索 jieba词性表 关键字对照分词的结果进行查看","user_name":"作者回复","user_name_real":"尹会生","uid":"1056235","ctime":1614167036,"ip_address":"","comment_id":280220,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5909103978","product_id":100071001,"comment_content":"有个问题请教一下老师，我在思考题中用代码统计各种词性的数量，但每次统计的结果都不对，和实际数量相去甚远，不知道是什么原因。","like_count":1,"discussions":[{"author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516025,"discussion_content":"你好, 方便描述一下具体统计的是哪种词性吗? 导致这种结果的可能有连个原因, 一个是自动分词分的不够准确,导致了识别出现误差,还有一种原因是统计词性的英文缩写指定的不正确,例如名词就包含了很多详细分类,比如\n名词分为以下子类：\nn 名词\nnr 人名\nnr1 汉语姓氏\nnr2 汉语名字\nnrj 日语人名\n\n可以搜索 jieba词性表 关键字对照分词的结果进行查看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614167036,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}