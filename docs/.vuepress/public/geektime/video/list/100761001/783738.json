{"id":783738,"title":"26｜分布式条件类型的应用","content":"","comments":[{"had_liked":false,"id":391839,"user_name":"Jack Q","can_delete":false,"product_type":"c3","uid":1160078,"ip_address":"广东","ucode":"A7DBC311884FFA","user_header":"https://static001.geekbang.org/account/avatar/00/11/b3/8e/1c564eb2.jpg","comment_is_top":false,"comment_ctime":1719237917,"is_pvip":false,"replies":[{"id":142465,"content":"perfect~ :)","user_name":"作者回复","user_name_real":"编辑","uid":1521669,"ctime":1719310996,"ip_address":"江苏","comment_id":391839,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100761001,"comment_content":"type Falsy = false | 0 | -0 | &quot;&quot; | null | undefined;\n\ntype NotFalsy&lt;T&gt; = T extends Falsy ? never : T\n\ntype Truthy = NotFalsy&lt;false | 0 | -0 | &quot;&quot; | null | undefined | true | {} | { a: string } | (() =&gt; void) | []&gt;","like_count":2,"discussions":[{"author":{"id":1521669,"avatar":"https://static001.geekbang.org/account/avatar/00/17/38/05/7beecd5d.jpg","nickname":"Aiming","note":"","ucode":"66292B32F9960A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":647032,"discussion_content":"perfect~ :)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1719310996,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":393464,"user_name":"Geek_aeb936","can_delete":false,"product_type":"c3","uid":3887128,"ip_address":"日本","ucode":"863338D4895F25","user_header":"","comment_is_top":false,"comment_ctime":1723950119,"is_pvip":false,"replies":[{"id":142886,"content":"Trans6&lt;U&gt;得到的结果是一个新的联合。就好象arr !== arr.slice(0) 一样呵。\n留意一下Trans&lt;T&gt;和Trans3&lt;T&gt;，它们的计算结果会是T本身（相当于引用），所以跟Trans6就不同。","user_name":"作者回复","user_name_real":"编辑","uid":1521669,"ctime":1724041358,"ip_address":"江苏","comment_id":393464,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100761001,"comment_content":"type Trans6&lt;T&gt; = T extends T ? T : never;\ntype PatX6&lt;U&gt; = Trans6&lt;U&gt; extends string ? [U] : never;\ntype T66 = PatX6&lt;U6 | &#39;c&#39;&gt;;\n\n老师 这个例子反而没太搞懂\ntype Trans6&lt;T&gt; = T extends T ? T : never;\n按照裸类型参数， 返回T的所有分量的联合  不就是本身T这个联合类型吗？为什么不等同于T这个引用呢？","like_count":1,"discussions":[{"author":{"id":1521669,"avatar":"https://static001.geekbang.org/account/avatar/00/17/38/05/7beecd5d.jpg","nickname":"Aiming","note":"","ucode":"66292B32F9960A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":649837,"discussion_content":"Trans6&lt;U&gt;得到的结果是一个新的联合。就好象arr !== arr.slice(0) 一样呵。\n留意一下Trans&lt;T&gt;和Trans3&lt;T&gt;，它们的计算结果会是T本身（相当于引用），所以跟Trans6就不同。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1724041358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":1,"child_discussions":[{"author":{"id":3887128,"avatar":"","nickname":"Geek_aeb936","note":"","ucode":"863338D4895F25","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1521669,"avatar":"https://static001.geekbang.org/account/avatar/00/17/38/05/7beecd5d.jpg","nickname":"Aiming","note":"","ucode":"66292B32F9960A","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":649883,"discussion_content":"懂了！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1724088744,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":649837,"ip_address":"日本","group_id":0},"score":649883,"extra":""}]}]},{"had_liked":false,"id":396250,"user_name":"fatme","can_delete":false,"product_type":"c3","uid":1034451,"ip_address":"广东","ucode":"75A805D2BB2AD1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c8/d3/3020ae46.jpg","comment_is_top":false,"comment_ctime":1733756662,"is_pvip":false,"replies":[{"id":143854,"content":"确实可能存在版本问题。因为惰性计算和这里使用的祼类型特例都不在官方手册上。:(~","user_name":"作者回复","user_name_real":"编辑","uid":1521669,"ctime":1733896261,"ip_address":"江苏","comment_id":396250,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100761001,"comment_content":"tsc 5.4.5，`${U}` 不会计算为 U，从而不会采用分布式条件运算， 测试代码如下：\n\ntype T4&lt;U extends string&gt; = `${U}` extends &quot;b&quot; ? [U] : never;\ntype T5 = T4&lt;&#39;a&#39; | &#39;b&#39;&gt;;    &#47;&#47; T5 = never\ntype T6&lt;U extends string&gt; = (U) extends &quot;b&quot; ? [U] : never;\ntype T7 = T6&lt;&#39;a&#39; | &#39;b&#39;&gt;;    &#47;&#47; T7 = [&quot;b&quot;], T5 与 T7 不相同","like_count":0,"discussions":[{"author":{"id":1521669,"avatar":"https://static001.geekbang.org/account/avatar/00/17/38/05/7beecd5d.jpg","nickname":"Aiming","note":"","ucode":"66292B32F9960A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":654965,"discussion_content":"确实可能存在版本问题。因为惰性计算和这里使用的祼类型特例都不在官方手册上。:(~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1733896261,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":392325,"user_name":"Kyen","can_delete":false,"product_type":"c3","uid":2850722,"ip_address":"广东","ucode":"57EA9E1700298B","user_header":"https://static001.geekbang.org/account/avatar/00/2b/7f/a2/83dbba75.jpg","comment_is_top":false,"comment_ctime":1720597665,"is_pvip":false,"replies":[{"id":142607,"content":"在Test&lt;T, ...&gt;中，有两个条件：1、传入一个联合；2、联合以参数名形式参用在条件运算左侧（例如 T extends U ...）。当这两个条件“都满足”时，T作为祼类型参数使用，导致extends是一个“分布式条件类型”。\n\n在Test3中，上述两个条件都不满足，所以是在extends左侧的参数只是一个普通的联合类型，并且以普通联合类型的形式参与extends运算。——而联合不能赋给它的分量（反过来是可以的），所以这里返回是never。注意，这里只会发生一次False分支的运算。\n\n而回到Test1，它调用Test&lt;T, ...&gt;，由于满足上述“分布式条件类型”的要求，所以T将以“每一个分量”参与extends运算，三个分量导致True分支成功一次，False分支失败两次，三次结果的最终联合是&#39;id&#39;。\n\n注意听课程中对“裸类型参数”的讲解。","user_name":"作者回复","user_name_real":"编辑","uid":1521669,"ctime":1720626233,"ip_address":"江苏","comment_id":392325,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100761001,"comment_content":"type Test&lt;T, U&gt; = T extends U ? T : never\ntype Test3 =  (&quot;name&quot; | &quot;age&quot; | &quot;id&quot;) extends &quot;id&quot; ? ‘id’ : never\ninterface A  {\n    id: number,\n    name: string,\n    age: number\n}\ntype Test1 = Test&lt;keyof A, &quot;id&quot;&gt;\n\n\n老师您好，这里有一个疑问，就是我的test3 不也是联合类型嘛？但是输出的是 never，然后我用 Test 却是成功了，我的Test1 里面传入的 keyof A 不也是联合类型嘛？最终却是正常返回，这两者的差异我不是很理解，老师可以帮忙讲述一下嘛？","like_count":0,"discussions":[{"author":{"id":1521669,"avatar":"https://static001.geekbang.org/account/avatar/00/17/38/05/7beecd5d.jpg","nickname":"Aiming","note":"","ucode":"66292B32F9960A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":647812,"discussion_content":"在Test&lt;T, ...&gt;中，有两个条件：1、传入一个联合；2、联合以参数名形式参用在条件运算左侧（例如 T extends U ...）。当这两个条件“都满足”时，T作为祼类型参数使用，导致extends是一个“分布式条件类型”。\n\n在Test3中，上述两个条件都不满足，所以是在extends左侧的参数只是一个普通的联合类型，并且以普通联合类型的形式参与extends运算。——而联合不能赋给它的分量（反过来是可以的），所以这里返回是never。注意，这里只会发生一次False分支的运算。\n\n而回到Test1，它调用Test&lt;T, ...&gt;，由于满足上述“分布式条件类型”的要求，所以T将以“每一个分量”参与extends运算，三个分量导致True分支成功一次，False分支失败两次，三次结果的最终联合是&#39;id&#39;。\n\n注意听课程中对“裸类型参数”的讲解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1720626233,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]}]}