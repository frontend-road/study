{"id":169533,"title":"05丨文件系统原理：如何用1分钟遍历一个100TB的文件？","content":"<p>文件及硬盘管理是计算机操作系统的重要组成部分，让微软走上成功之路的正是微软最早推出的个人电脑PC操作系统，这个操作系统就叫DOS，即Disk Operating System，硬盘操作系统。我们每天使用电脑都离不开硬盘，硬盘既有大小的限制，通常大一点的硬盘也不过几T，又有速度限制，快一点的硬盘也不过每秒几百M。</p><p>文件是存储在硬盘上的，文件的读写访问速度必然受到硬盘的物理限制，那么如何才能1分钟完成一个100T大文件的遍历呢？</p><p>想要知道这个问题的答案，我们就必须知道文件系统的原理。</p><p>做软件开发时，必然要经常和文件系统打交道，而文件系统也是一个软件，了解文件系统的设计原理，可以帮助我们更好地使用文件系统，另外设计文件系统时的各种考量，也对我们自己做软件设计有诸多借鉴意义。</p><p>让我们先从硬盘的物理结构说起。</p><h2>硬盘</h2><p>硬盘是一种可持久保存、多次读写数据的存储介质。硬盘的形式主要两种，一种是机械式硬盘，一种是固态硬盘。</p><p>机械式硬盘的结构，主要包含盘片、主轴、磁头臂，主轴带动盘片高速旋转，当需要读写盘上的数据的时候，磁头臂会移动磁头到盘片所在的磁道上，磁头读取磁道上的数据。读写数据需要移动磁头，这样一个机械的动作，至少需要花费数毫秒的时间，这是机械式硬盘访问延迟的主要原因。</p><!-- [[[read_end]]] --><p>如果一个文件的数据在硬盘上不是连续存储的，比如数据库的B+树文件，那么要读取这个文件，磁头臂就必须来回移动，花费的时间必然很长。如果文件数据是连续存储的，比如日志文件，那么磁头臂就可以较少移动，相比离散存储的同样大小的文件，连续存储的文件的读写速度要快得多。</p><p>机械式硬盘的数据就存储在具有磁性特质的盘片上，因此这种硬盘也被称为磁盘，而固态硬盘则没有这种磁性特质的存储介质，也没有电机驱动的机械式结构。</p><p>其中主控芯片处理端口输入的指令和数据，然后控制闪存颗粒进行数据读写。由于固态硬盘没有了机械式硬盘的电机驱动磁头臂进行机械式物理移动的环节，而是完全的电子操作，因此固态硬盘的访问速度远快于机械式硬盘。</p><p>但是，到目前为止固态硬盘的成本还是明显高于机械式硬盘，因此在生产环境中，最主要的存储介质依然是机械式硬盘。如果一个场景对数据访问速度、存储容量、成本都有较高要求，那么可以采用固态硬盘和机械式硬盘混合部署的方式，即在一台服务器上既有固态硬盘，也有机械式硬盘，以满足不同文件类型的存储需求，比如日志文件存储在机械式硬盘上，而系统文件和随机读写的文件存储在固态硬盘上。</p><h2>文件系统</h2><p>作为应用程序开发者，我们不需要直接操作硬盘，而是通过操作系统，以文件的方式对硬盘上的数据进行读写访问。文件系统将硬盘空间以块为单位进行划分，每个文件占据若干个块，然后再通过一个文件控制块FCB记录每个文件占据的硬盘数据块。</p><p><img src=\"https://static001.geekbang.org/resource/image/fd/fc/fd01187215f71c82a0531c98d39442fc.png?wh=612*349\" alt=\"\"><br>\n这个文件控制块在Linux操作系统中就是inode，要想访问文件，就必须获得文件的inode信息，在inode中查找文件数据块索引表，根据索引中记录的硬盘地址信息访问硬盘，读写数据。</p><p>inode中记录着文件权限、所有者、修改时间和文件大小等文件属性信息，以及文件数据块硬盘地址索引。inode是固定结构的，能够记录的硬盘地址索引数也是固定的，只有15个索引。其中前12个索引直接记录数据块地址，第13个索引记录索引地址，也就是说，索引块指向的硬盘数据块并不直接记录文件数据，而是记录文件数据块的索引表，每个索引表可以记录256个索引；第14个索引记录二级索引地址，第15个索引记录三级索引地址，如下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/30/37/30e8aaa432b315e5b16a06a787ff0437.jpg?wh=2779*1867\" alt=\"\"><br>\n这样，每个inode最多可以存储12+256+256*256+256*256*256个数据块，如果每个数据块的大小为4k，也就是单个文件最大不超过70G，而且即使可以扩大数据块大小，文件大小也要受单个硬盘容量的限制。这样的话，对于我们开头提出的一分钟完成100T大文件的遍历，Linux文件系统是无法完成的。</p><p>那么，有没有更给力的解决方案呢？</p><h2>RAID</h2><p>RAID，即独立硬盘冗余阵列，将多块硬盘通过硬件RAID卡或者软件RAID的方案管理起来，使其共同对外提供服务。RAID的核心思路其实是利用文件系统将数据写入硬盘中不同数据块的特性，将多块硬盘上的空闲空间看做一个整体，进行数据写入，也就是说，一个文件的多个数据块可能写入多个硬盘。</p><p>根据硬盘组织和使用方式不同，常用RAID有五种，分别是RAID 0、RAID 1、RAID 10、RAID 5和RAID 6。</p><p><img src=\"https://static001.geekbang.org/resource/image/32/0b/327bcad9c707d4256c98ffeb88f76f0b.jpg?wh=1727*262\" alt=\"\"><br>\nRAID 0将一个文件的数据分成N片，同时向N个硬盘写入，这样单个文件可以存储在N个硬盘上，文件容量可以扩大N倍，（理论上）读写速度也可以扩大N倍。但是使用RAID 0的最大问题是文件数据分散在N块硬盘上，任何一块硬盘损坏，就会导致数据不完整，整个文件系统全部损坏，文件的可用性极大地降低了。</p><p>RAID 1则是利用两块硬盘进行数据备份，文件同时向两块硬盘写入，这样任何一块硬盘损坏都不会出现文件数据丢失的情况，文件的可用性得到提升。</p><p>RAID 10结合RAID 0和RAID 1，将多块硬盘进行两两分组，文件数据分成N片，每个分组写入一片，每个分组内的两块硬盘再进行数据备份。这样既扩大了文件的容量，又提高了文件的可用性。但是这种方式硬盘的利用率只有50%，有一半的硬盘被用来做数据备份。</p><p>RAID 5针对RAID 10硬盘浪费的情况，将数据分成N-1片，再利用这N-1片数据进行位运算，计算一片校验数据，然后将这N片数据写入N个硬盘。这样任何一块硬盘损坏，都可以利用校验片的数据和其他数据进行计算得到这片丢失的数据，而硬盘的利用率也提高到N-1/N。</p><p>RAID 5可以解决一块硬盘损坏后文件不可用的问题，那么如果两块文件损坏？RAID 6的解决方案是，用两种位运算校验算法计算两片校验数据，这样两块硬盘损坏还是可以计算得到丢失的数据片。</p><p>实践中，使用最多的是RAID 5，数据被分成N-1片并发写入N-1块硬盘，这样既可以得到较好的硬盘利用率，也能得到很好的读写速度，同时还能保证较好的数据可用性。使用RAID 5的文件系统比简单的文件系统文件容量和读写速度都提高了N-1倍，但是一台服务器上能插入的硬盘数量是有限的，通常是8块，也就是文件读写速度和存储容量提高了7倍，这远远达不到1分钟完成100T文件的遍历要求。</p><p>那么，有没有更给力的解决方案呢？</p><h2>分布式文件系统</h2><p>我们再回过头看下Linux的文件系统：文件的基本信息，也就是文件元信息记录在文件控制块inode中，文件的数据记录在硬盘的数据块中，inode通过索引记录数据块的地址，读写文件的时候，查询inode中的索引记录得到数据块的硬盘地址，然后访问数据。</p><p>如果将数据块的地址改成分布式服务器的地址呢？也就是查询得到的数据块地址不只是本机的硬盘地址，还可以是其他服务器的地址，那么文件的存储容量就将是整个分布式服务器集群的硬盘容量，这样还可以在不同的服务器上同时并行读取文件的数据块，文件访问速度也将极大的加快。</p><p>这样的文件系统就是分布式文件系统，分布式文件系统的思路其实和RAID是一脉相承的，就是将数据分成很多片，同时向N台服务器上进行数据写入。针对一片数据丢失就导致整个文件损坏的情况，分布式文件系统也是采用数据备份的方式，将多个备份数据片写入多个服务器，以保证文件的可用性。当然，也可以采用RAID 5的方式通过计算校验数据片的方式提高文件可用性。</p><p>我们以Hadoop分布式文件系统HDFS为例，看下分布式文件系统的具体架构设计。</p><p><img src=\"https://static001.geekbang.org/resource/image/a6/eb/a67d5e95c3ed1f6261649ae346e9aaeb.png?wh=1920*1142\" alt=\"\"><br>\nHDFS的关键组件有两个，一个是DataNode，一个是NameNode。</p><p>DataNode负责文件数据的存储和读写操作，HDFS将文件数据分割成若干数据块（Block），每个DataNode存储一部分数据块，这样文件就分布存储在整个HDFS服务器集群中。应用程序客户端（Client）可以并行对这些数据块进行访问，从而使得HDFS可以在服务器集群规模上实现数据并行访问，极大地提高了访问速度。在实践中，HDFS集群的DataNode服务器会有很多台，一般在几百台到几千台这样的规模，每台服务器配有数块硬盘，整个集群的存储容量大概在几PB到数百PB。</p><p>NameNode负责整个分布式文件系统的元数据（MetaData）管理，也就是文件路径名、访问权限、数据块的ID以及存储位置等信息，相当于Linux系统中inode的角色。HDFS为了保证数据的高可用，会将一个数据块复制为多份（缺省情况为3份），并将多份相同的数据块存储在不同的服务器上，甚至不同的机架上。这样当有硬盘损坏，或者某个DataNode服务器宕机，甚至某个交换机宕机，导致其存储的数据块不能访问的时候，客户端会查找其备份的数据块进行访问。</p><p>有了HDFS，可以实现单一文件存储几百T的数据，再配合大数据计算框架MapReduce或者Spark，可以对这个文件的数据块进行并发计算。也可以使用Impala这样的SQL引擎对这个文件进行结构化查询，在数千台服务器上并发遍历100T的数据，1分钟都是绰绰有余的。</p><h2>小结</h2><p>文件系统从简单操作系统文件，到RAID，再到分布式文件系统，其设计思路其实是具有统一性的。这种统一性一方面体现在文件数据如何管理，也就是如何通过文件控制块管理文件的数据，这个文件控制块在Linux系统中就是inode，在HDFS中就是NameNode。</p><p>另一方面体现在如何利用更多的硬盘实现越来越大的文件存储需求和越来越快的读写速度需求，也就是将数据分片后同时写入多块硬盘。单服务器我们可以通过RAID来实现，多服务器则可以将这些服务器组成一个文件系统集群，共同对外提供文件服务，这时候，数千台服务器的数万块硬盘以单一存储资源的方式对文件使用者提供服务，也就是一个文件可以存储数百T的数据，并在一分钟完成这样一个大文件的遍历。</p><h2>思考题</h2><p>在RAID 5的示意图中，P表示校验位数据，我们看到P不是单独存储在一块硬盘上，而是分散在不同的盘上，实际上，校验数据P的存储位置是螺旋式地落在所有硬盘上的，为什么要这样设计？</p><p>欢迎你在评论区写下你的思考，也欢迎把这篇文章分享给你的朋友或者同事，一起交流一下。</p>","neighbors":{"left":{"article_title":"04丨网络编程原理：一个字符的互联网之旅","id":169545},"right":{"article_title":"06丨数据库原理：为什么PrepareStatement性能更好更安全？","id":172000}},"comments":[{"had_liked":false,"id":156356,"user_name":"miracle","can_delete":false,"product_type":"c1","uid":1276137,"ip_address":"","ucode":"FD7074F1062AE9","user_header":"https://static001.geekbang.org/account/avatar/00/13/78/e9/9d807269.jpg","comment_is_top":false,"comment_ctime":1574861458,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"104654076562","product_id":100040201,"comment_content":"老师可以每篇最后问答下上篇文章结尾留下的问题吗","like_count":24,"discussions":[{"author":{"id":1044178,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ee/d2/7024431c.jpg","nickname":"探索无止境","note":"","ucode":"91D2A9907DFA79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":63597,"discussion_content":"同问","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1574898593,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1130948,"avatar":"https://static001.geekbang.org/account/avatar/00/11/41/c4/add90df3.jpg","nickname":"fresh_vito:)","note":"","ucode":"6AC05640717CE0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":193654,"discussion_content":"同问+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583159511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1310518,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ff/36/83281758.jpg","nickname":"L","note":"","ucode":"C18B98D3DC3387","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":84979,"discussion_content":"老师说，不可以，哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576509218,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1340732,"avatar":"https://static001.geekbang.org/account/avatar/00/14/75/3c/57601355.jpg","nickname":"暗影","note":"","ucode":"9222E285BE49F8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":75890,"discussion_content":"+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575793716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1173753,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eo435IStLENgDxYPDykxxE9CP6Tye3xPQ584UeNqW21pU62ic6vibrGpNjKVbhulVehVG5IGvicSTaZg/132","nickname":"alex","note":"","ucode":"C7572007957F1E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":65549,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575011733,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156637,"user_name":"ant","can_delete":false,"product_type":"c1","uid":1556708,"ip_address":"","ucode":"A39A03AF257471","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKYLPAlGUWic4yAqsGtEYBSRR7gDjyg9yiaJicNhMwiaNw4rMKQ5DHTfp7gmic0gpqEwCZaou8G6CdHKCg/132","comment_is_top":false,"comment_ctime":1574928214,"is_pvip":false,"replies":[{"id":"60132","content":"就是异或运算<br><br>所有数据的bit位，逐位进行异或，得到的就是校验位。<br><br>如果丢失部分数据，用校验数据和其余数据逐位进行异或运算，可到丢失部分数据。<br><br>举例，5块磁盘做RAID5，四块磁盘上的bit为：0 1 1 1 ，那么异或计算后，校验位为 1，如果丢失了第一块盘上的bit位0，那么校验位1和其他三块盘上的bit位进行异或运算，可以算出0","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1574934668,"ip_address":"","comment_id":156637,"utype":1}],"discussion_count":5,"race_medal":0,"score":"96064208726","product_id":100040201,"comment_content":"老师，针对校验数据的生成过程还是不太理解！能帮忙解释的详细一些么？","like_count":23,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476182,"discussion_content":"就是异或运算\n\n所有数据的bit位，逐位进行异或，得到的就是校验位。\n\n如果丢失部分数据，用校验数据和其余数据逐位进行异或运算，可到丢失部分数据。\n\n举例，5块磁盘做RAID5，四块磁盘上的bit为：0 1 1 1 ，那么异或计算后，校验位为 1，如果丢失了第一块盘上的bit位0，那么校验位1和其他三块盘上的bit位进行异或运算，可以算出0","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574934668,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1174704,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ec/b0/4e22819f.jpg","nickname":"syz","note":"","ucode":"54AF17ACD72645","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584406,"discussion_content":"没看懂 先插个眼","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660809136,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1690759,"avatar":"https://static001.geekbang.org/account/avatar/00/19/cc/87/2a196164.jpg","nickname":"小石头","note":"","ucode":"7B2EC4C8C6192F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":280634,"discussion_content":"如果坏两块磁盘就不行了吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591581502,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1328689,"avatar":"https://static001.geekbang.org/account/avatar/00/14/46/31/cb061c09.jpg","nickname":"陈小龙 Cheney","note":"","ucode":"4B721FE4DDB2F4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":78924,"discussion_content":"好神奇啊XOR运算的这个性质...","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576032961,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1556708,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKYLPAlGUWic4yAqsGtEYBSRR7gDjyg9yiaJicNhMwiaNw4rMKQ5DHTfp7gmic0gpqEwCZaou8G6CdHKCg/132","nickname":"ant","note":"","ucode":"A39A03AF257471","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":64111,"discussion_content":"感谢老师的解答！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574937193,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156256,"user_name":"奔奔奔跑","can_delete":false,"product_type":"c1","uid":1210265,"ip_address":"","ucode":"F86EC205DCAACE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Gswh7ibY4tubXhp0BXOmV2pXZ3XsXic1d942ZMAEgWrRSF99bDskOTsG1g172ibORXxSCWTn9HWUX5vSSUVWU5I4A/132","comment_is_top":false,"comment_ctime":1574843975,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"74589288007","product_id":100040201,"comment_content":"老师好，关于为什么P分散存储的问题我认为原因有以下两点:<br>1.高可用，避免检验盘损坏了所有都用不了了。<br>2.读取速度快，实现了检验数据的并行访问，大大加快了检验速度。","like_count":17},{"had_liked":false,"id":183907,"user_name":"探索无止境","can_delete":false,"product_type":"c1","uid":1044178,"ip_address":"","ucode":"91D2A9907DFA79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/d2/7024431c.jpg","comment_is_top":false,"comment_ctime":1583159961,"is_pvip":false,"replies":[{"id":"71302","content":"绝大部分文件都是小文件，直接索引减少查找时间，综合性能更好。","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1583284845,"ip_address":"","comment_id":183907,"utype":1}],"discussion_count":1,"race_medal":0,"score":"53122767513","product_id":100040201,"comment_content":"老师您好，文中提到inode的存储结构，其中前 12 个索引直接记录数据块地址，为什么要用前12个索引要直接存储数据块地址，如果也采用像第13,14,15的存储方式，那么一个文件不是可以存储更多的数据吗？比如就会超过70G，有点想不明白，还请老师指导！","like_count":13,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485817,"discussion_content":"绝大部分文件都是小文件，直接索引减少查找时间，综合性能更好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583284845,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":196486,"user_name":"非同凡想","can_delete":false,"product_type":"c1","uid":1934969,"ip_address":"","ucode":"713FD449A49D5A","user_header":"https://static001.geekbang.org/account/avatar/00/1d/86/79/066a062a.jpg","comment_is_top":false,"comment_ctime":1585285275,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"40239990939","product_id":100040201,"comment_content":"太阳地底果然没有新鲜事，很多的框架的设计都借鉴了linux","like_count":9},{"had_liked":false,"id":216925,"user_name":"G.S.K","can_delete":false,"product_type":"c1","uid":1222966,"ip_address":"","ucode":"88217F9289EB48","user_header":"https://static001.geekbang.org/account/avatar/00/12/a9/36/d054c979.jpg","comment_is_top":false,"comment_ctime":1589370433,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27359174209","product_id":100040201,"comment_content":"老师，12+256+256*256+256*256*256，这个公式应该是block大小为1k的吧。<br>实验了一下，ext4文件系统，block size 4k，单文件可以超过70G<br>[root@testvm disk2]# ll -h |grep testfile<br>-rw-r--r-- 1 root root 100G 5月 13 08:19 testfile<br>[root@testvm disk2]# df -hT |grep disk2<br>&#47;dev&#47;vdb1 ext4 296G 101G 181G 36% &#47;mnt&#47;disk2","like_count":6},{"had_liked":false,"id":156172,"user_name":"熊熊的多多","can_delete":false,"product_type":"c1","uid":1749597,"ip_address":"","ucode":"70D027DDB5E4E2","user_header":"https://static001.geekbang.org/account/avatar/00/1a/b2/5d/ac89a661.jpg","comment_is_top":false,"comment_ctime":1574828365,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27344632141","product_id":100040201,"comment_content":"校验数据分散存储在不同磁盘上最主要目的是为了提高并发IO","like_count":6},{"had_liked":false,"id":156055,"user_name":"golangboy","can_delete":false,"product_type":"c1","uid":1241559,"ip_address":"","ucode":"7632634FB022F5","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/OgopVGSkwlFuyHV0hWtzxjEAQ8qhwQuTeY9BdvXDDTj2JH5d9ZI1hJBnlgaoUcKtrceWVlUejJEUdjCjoKSUAQ/132","comment_is_top":false,"comment_ctime":1574815957,"is_pvip":false,"replies":[{"id":"59977","content":"元数据节点NameNode只提供类似文件控制块的数据读写，数据量非常小，不会成为瓶颈。一个数据块Block大小64M，对应的NameNode控制块数据大概只有几十个字节。","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1574835592,"ip_address":"","comment_id":156055,"utype":1}],"discussion_count":2,"race_medal":0,"score":"27344619733","product_id":100040201,"comment_content":"老师讲的透彻，成体系，感谢！分布式存储对数据的读写，都要经过元数据节点，此后的数据读写能力会提升很多。但元数据节点应该有性能瓶颈问题，找的过程会限制读写能力，请教老师，这种一般怎么处理？","like_count":7,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475971,"discussion_content":"元数据节点NameNode只提供类似文件控制块的数据读写，数据量非常小，不会成为瓶颈。一个数据块Block大小64M，对应的NameNode控制块数据大概只有几十个字节。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574835592,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1288985,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcFhGY0NV4kFzOSXWDHR2lrI2UbUP4Y016GOnpTH7dqSbicqJarX0pHxMsfLopRiacKEPXLx7IHHqg/132","nickname":"一路前行","note":"","ucode":"32D3C715690783","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":262662,"discussion_content":"海量小文件会引发namenode的压力问题，一般会采用合并压缩小文件方式，同时增加热备份","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1589120013,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156073,"user_name":"泡泡龙","can_delete":false,"product_type":"c1","uid":1208655,"ip_address":"","ucode":"8D43010FA3DC2C","user_header":"https://static001.geekbang.org/account/avatar/00/12/71/4f/bce0d5bc.jpg","comment_is_top":false,"comment_ctime":1574817093,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"23049653573","product_id":100040201,"comment_content":"我觉得螺旋存储校验位是为了提高磁盘使用率，校验位应该比数据块要小。如果校验位只存一块，应该会有数据盘满了，而校验盘还有一大块空间的情况","like_count":5},{"had_liked":false,"id":156856,"user_name":"而立斋","can_delete":false,"product_type":"c1","uid":1087258,"ip_address":"","ucode":"5FED6E9E148195","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/1a/389eab84.jpg","comment_is_top":false,"comment_ctime":1574988738,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"18754857922","product_id":100040201,"comment_content":"我觉得题目改成，如何完整的将100T的数据存起来，更搭","like_count":4,"discussions":[{"author":{"id":1142025,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6d/09/ffeabc27.jpg","nickname":"任鑫","note":"","ucode":"9803EB15B634C3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378457,"discussion_content":"如果只是存储，不考虑使用并发读写来提高读写速度的话，可以这样说","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623231568,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":241147,"user_name":"杯莫停","can_delete":false,"product_type":"c1","uid":1759325,"ip_address":"","ucode":"4FA1D5CBBEF702","user_header":"https://static001.geekbang.org/account/avatar/00/1a/d8/5d/07dfb3b5.jpg","comment_is_top":false,"comment_ctime":1597202523,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10187137115","product_id":100040201,"comment_content":"由于Kafka持久化数据是用日志存的，而且有顺序的偏移量，所以要求不是很高的集群，机械硬盘的性价比会高一点。机械硬盘容易坏，这个问题Kafka在软件层面解决了。","like_count":2},{"had_liked":false,"id":159116,"user_name":"Paul Shan","can_delete":false,"product_type":"c1","uid":1593140,"ip_address":"","ucode":"32D99989028284","user_header":"","comment_is_top":false,"comment_ctime":1575539960,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10165474552","product_id":100040201,"comment_content":"Raid 0 将磁盘并行写入<br>Raid 1 就是两块盘互为备份<br>Raid 10就是两组硬盘，并行写入，互为备份。<br>Raid 5 ((n-1)&#47;n)信息并行写入，1&#47;n信息校验备份<br>Raid 6 ((n-2)&#47;n)信息并行写入，2&#47;n信息校验备份<br>分布式：无数组信息并行写入，每组自己校验备份。","like_count":2},{"had_liked":false,"id":157025,"user_name":"俊伟","can_delete":false,"product_type":"c1","uid":1111175,"ip_address":"","ucode":"7905B4F25637F4","user_header":"https://static001.geekbang.org/account/avatar/00/10/f4/87/644c0c5d.jpg","comment_is_top":false,"comment_ctime":1575014744,"is_pvip":true,"replies":[{"id":"60291","content":"d  a t a表示需要写入RAID的数据，p q表示两种不同校验算法得到的校验数据。<br><br>","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1575070756,"ip_address":"","comment_id":157025,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10164949336","product_id":100040201,"comment_content":"老师，RAID那里图没看懂，D，a，t，p，Q都是什么意思？图有点没太明白。","like_count":2,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476307,"discussion_content":"d  a t a表示需要写入RAID的数据，p q表示两种不同校验算法得到的校验数据。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575070756,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1020525,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","nickname":"escray","note":"","ucode":"1F4204930E47C4","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312834,"discussion_content":"如果不是看到这条评论，都没有注意到 D a t a P Q 的隐藏信息","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602829720,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156116,"user_name":"禾斗君","can_delete":false,"product_type":"c1","uid":1748347,"ip_address":"","ucode":"DA390EE0697C9D","user_header":"https://static001.geekbang.org/account/avatar/00/1a/ad/7b/c2948370.jpg","comment_is_top":false,"comment_ctime":1574820871,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10164755463","product_id":100040201,"comment_content":"主要为了优化数据读取吧，如果校验码都放在同一块硬盘上，那么业务数据读取只有N-1块硬盘可以提供服务。 采用螺旋式分布时，N块硬盘都可以提供服务。","like_count":2},{"had_liked":false,"id":253711,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1602840116,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"5897807412","product_id":100040201,"comment_content":"有点奇怪，文中 70GB 的文件大小是怎么算出来的？<br><br>倒推了一下 12 + 256 + 256 * 256 + 256 * 256 * 256 = 16,843,020 <br><br>假设每个文件块为 4 kB 的话，那么最大文件当然就是 70G 左右。<br><br>MacBook Pro （macOS Catalina 10.15.17）的文件系统是 APFS，默认的 block size 是 4096 byte<br><br>按照留言的提示去看了一下李老师另一个专栏《从零开始学大数据》里面的《05 | 从RAID看垂直伸缩到水平伸缩的演化》，在 RAID 10 和 RAID 5 之间，其实还有一个 RAID 3，在第 N 块盘写入校验数据而不是螺旋写入所有磁盘。然后再接着看（试读）《06 | 新技术层出不穷，HDFS依然是存储的王者》。<br><br>老师总结，数据存储主要解决三个方面的问题：容量、速度、可靠性，无论大数据还是小数据，其实都是在这三个问题上面下功夫。<br><br>顺便说一句，Ceph 文件系统，专治小文件成灾的场景。","like_count":1},{"had_liked":false,"id":241210,"user_name":"杯莫停","can_delete":false,"product_type":"c1","uid":1759325,"ip_address":"","ucode":"4FA1D5CBBEF702","user_header":"https://static001.geekbang.org/account/avatar/00/1a/d8/5d/07dfb3b5.jpg","comment_is_top":false,"comment_ctime":1597216610,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5892183906","product_id":100040201,"comment_content":"RAID主要优势在于：<br>提供冗余的磁盘存储空间<br>提供负载均衡<br>用这两点来保证高可用、高并发和高性能。<br>值得一提的是Kafka貌似并没有使用RAID的方式去做数据的持久化，而是用了副本集的方式来支持高可用，在软件的层面来支持负载均衡。所以RAID显得就没那么有优势了。<br>像把数据分割成若干块存在不同机器上，同时提供冗余副本，副本在不同机器上交叉备份。很多文件系统都用这种方式来做集群。像redis，mongodb是分片和副本集，kafka是分区和副本集（leader和flower）。作用都是一样的，鸡蛋不要放在一个篮子里，且要避免全量IO提高性能。<br>","like_count":1},{"had_liked":false,"id":231128,"user_name":"LIKE","can_delete":false,"product_type":"c1","uid":1254252,"ip_address":"","ucode":"9DAB7F9051648A","user_header":"https://static001.geekbang.org/account/avatar/00/13/23/6c/82ba5e1f.jpg","comment_is_top":false,"comment_ctime":1593590014,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5888557310","product_id":100040201,"comment_content":"感兴趣的可以看老师的另外一个关于大数据的专栏，与本课相关的对应是那边的第5讲，《讲从RAID看垂直伸缩到水平伸缩的演化》（姿势：免费试读模式）","like_count":1},{"had_liked":false,"id":219362,"user_name":"iqoiwer","can_delete":false,"product_type":"c1","uid":1137214,"ip_address":"","ucode":"D54B2CAD0B588D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqzPOHJjMtAyicMn3bbnmtOqfAKyyvZN3bVa1JqWR5tzoVpMJA93aiaAjKyV3GlEgVtpuNsAQbeTccg/132","comment_is_top":false,"comment_ctime":1590018191,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5884985487","product_id":100040201,"comment_content":"如果校验位都放在同一块磁盘上, 任何对数据的修改都会导致校验磁盘的修改, 导致该磁盘频繁写入, 非常容易坏. P 不是单独存储在一块硬盘上，而是分散在不同的盘上, 这样修改校验位就分散到不同磁盘上去了. 螺旋存储是因为数据存储有先后, 且会存储到不同的磁盘, 自然而然就形成螺旋存储的样子","like_count":2},{"had_liked":false,"id":355099,"user_name":"有思想的芦苇","can_delete":false,"product_type":"c1","uid":1169474,"ip_address":"上海","ucode":"AA0B96363B1587","user_header":"https://static001.geekbang.org/account/avatar/00/11/d8/42/d4e7a136.jpg","comment_is_top":false,"comment_ctime":1661076863,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661076863","product_id":100040201,"comment_content":"硬盘----机械硬盘HDD：电机、磁头、盘片，连续读写速度快，不连续寻址效率低<br>     |----固态硬盘SSD：无机械操作，控制器直接控制闪存颗粒，速度快成本高<br>文件系统----FCB File Control Block<br>     |----------inode 编号，文件权限，所有者，时间、文件大小、15个索引指针（0-11直接索引指针、13、14二级索引指针、15三级索引指针），单个文件的理论大小12+256*256+ 256*256*256 *4KB=约70G。<br>RAID----RAID0 无备份无纠错，容量N<br>      |----RAID1 1&#47;2*N容量，双备份 50%磁盘利用率<br>      |----RAID10 2个一组作为备份，50%磁盘利用率<br>      |----RAID5 (N-1)&#47;N磁盘利用率，N-1数据盘，1个校验盘。损坏1个磁盘可恢复，数据异或XOR恢复<br>      |----RAID6 (N-2)&#47;N磁盘利用率，N-2数据库，2个校验盘。损坏2个磁盘可恢复。<br>分布式文件系统<br>|----HDFS NameNode类似于linux中的inode角色、DataNode，默认RAID0，数据3副本<br>","like_count":0},{"had_liked":false,"id":346290,"user_name":"算法成瘾者","can_delete":false,"product_type":"c1","uid":1531879,"ip_address":"","ucode":"6E7A8E8844F9C3","user_header":"https://static001.geekbang.org/account/avatar/00/17/5f/e7/318ce10e.jpg","comment_is_top":false,"comment_ctime":1653007461,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1653007461","product_id":100040201,"comment_content":"本文题目说 如何用1分钟遍历100TB的文件。看来答案是分布式的文件系统。<br>从硬盘的分类(机械硬盘，固态硬盘)<br> 到 硬盘的Raid实现。<br> 从单机的文件存储<br>  到Hadoop这样的分布式文件系统，文件的存储的容量和读写的效率也在不断提升。<br><br> 好文章，使我对文件系统走了较为完整的认识了👍🏻","like_count":0},{"had_liked":false,"id":310084,"user_name":"Middleware","can_delete":false,"product_type":"c1","uid":1072015,"ip_address":"","ucode":"C0028293ECDD47","user_header":"https://static001.geekbang.org/account/avatar/00/10/5b/8f/4b0ab5db.jpg","comment_is_top":false,"comment_ctime":1630481022,"is_pvip":true,"replies":[{"id":"112394","content":"参考MapReduce、Spark。专栏后面会讲","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1630546865,"ip_address":"","comment_id":310084,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1630481022","product_id":100040201,"comment_content":"老师好，请教一个问题，假设现在要处理一个大文件，超过 100g，甚至更大的文件，如何快速从文件内找出某几个关键词？期待老师的回复。非常感谢","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526120,"discussion_content":"参考MapReduce、Spark。专栏后面会讲","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630546865,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":299447,"user_name":"米兰的小铁匠","can_delete":false,"product_type":"c1","uid":1146923,"ip_address":"","ucode":"E52E05954BF39D","user_header":"https://static001.geekbang.org/account/avatar/00/11/80/2b/ef1581b5.jpg","comment_is_top":false,"comment_ctime":1624630248,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1624630248","product_id":100040201,"comment_content":"思考总结：本文讲述数据存储相关问题，最后涉及到分布式存储<br>1、硬盘：机械（磁头移动，存储连续文件，如日志）、固态（电机驱动，存储数据库等）<br>2、文件系统：介绍了Linux中inode及简单结构<br>3、RAID：独立硬盘阵列，有五种情况，介绍了备份与读取速度问题<br>4、分布式：将数据分片，对多台服务器进行读写（当然需要保证每片的可用性）<br>5、例子：Hadoop分布式文件系统HDFS，DataNode负责文件读写、NameNode负责元数据管理","like_count":0},{"had_liked":false,"id":279997,"user_name":"布拉姆","can_delete":false,"product_type":"c1","uid":1311125,"ip_address":"","ucode":"479FF27D73BCAD","user_header":"https://static001.geekbang.org/account/avatar/00/14/01/95/fd09e8a8.jpg","comment_is_top":false,"comment_ctime":1614049945,"is_pvip":false,"replies":[{"id":"101801","content":"(12+256+256*256+256*256*256)*4k = 16,843,020 * 4K ≈ 70G","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1614216603,"ip_address":"","comment_id":279997,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1614049945","product_id":100040201,"comment_content":"每个 inode 最多可以存储 12+256+256*256+256*256*256 个数据块，如果每个数据块的大小为 4k，也就是单个文件最大不超过 70G====》老师，怎么得出70G的啊，总数据块数量为4,295,033,100，每个4k，那磁盘总容量为4,295,033,100*4K，  单个文件是怎么得出70G的？","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515953,"discussion_content":"(12+256+256*256+256*256*256)*4k = 16,843,020 * 4K ≈ 70G","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614216603,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":251687,"user_name":"piboye","can_delete":false,"product_type":"c1","uid":1066752,"ip_address":"","ucode":"7CFD8712857A85","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","comment_is_top":false,"comment_ctime":1601797563,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1601797563","product_id":100040201,"comment_content":"写都发挥了n个盘的性能，读的时候若果不是螺旋方式只能利用n-1个盘的io性能","like_count":0},{"had_liked":false,"id":241958,"user_name":"Geek_100ec2","can_delete":false,"product_type":"c1","uid":2061693,"ip_address":"","ucode":"5B18F238F14352","user_header":"https://static001.geekbang.org/account/avatar/00/1f/75/7d/1283991d.jpg","comment_is_top":false,"comment_ctime":1597540599,"is_pvip":false,"replies":[{"id":"89421","content":"RAID5数据是N-1片，加上校验位就是N片","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1597650273,"ip_address":"","comment_id":241958,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1597540599","product_id":100040201,"comment_content":"老师，RAID究竟是往N片写数据还是N-1片写数据呢","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503886,"discussion_content":"RAID5数据是N-1片，加上校验位就是N片","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597650273,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226230,"user_name":"Geek__风雨","can_delete":false,"product_type":"c1","uid":1447977,"ip_address":"","ucode":"A2CA9983A1EAA0","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM70nnPpGc2c9vic68lB3ndZxlWLwXakhpkq8ZzZSPRusynorCafpoAYxkicOYhRic9GTEqWjhagDLp6w/132","comment_is_top":false,"comment_ctime":1592011140,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592011140","product_id":100040201,"comment_content":"感觉分布式文件系统使用的是RAID10方式呢，文件分成N块存储，每块又默认三份备份在分布式系统中","like_count":0},{"had_liked":false,"id":183922,"user_name":"探索无止境","can_delete":false,"product_type":"c1","uid":1044178,"ip_address":"","ucode":"91D2A9907DFA79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/d2/7024431c.jpg","comment_is_top":false,"comment_ctime":1583162607,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583162607","product_id":100040201,"comment_content":"老师您好，为什么实践中最多的是 RAID 5，因为RAID6的可用性更高，磁盘利用率也不低，而磁盘损坏的情况也是很常见的，所以感觉选择RAID6应该更优于RAID5，还请老师分享下做选择的思考权衡，学学老师的经验","like_count":0},{"had_liked":false,"id":166294,"user_name":"Mr.Edge","can_delete":false,"product_type":"c1","uid":1049045,"ip_address":"","ucode":"39BDF39E8E2719","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/d5/ce2bbdb7.jpg","comment_is_top":false,"comment_ctime":1577433935,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577433935","product_id":100040201,"comment_content":"老师有个问题 RAID 5是每次开机都有去生成校验位吗 我看图上并没有提到备份 如果某个文件校验位为1 说明坏了 到时恢复如何处理？","like_count":0},{"had_liked":false,"id":162236,"user_name":"灰灰","can_delete":false,"product_type":"c1","uid":1122397,"ip_address":"","ucode":"907A2FD339E158","user_header":"https://static001.geekbang.org/account/avatar/00/11/20/5d/69170b96.jpg","comment_is_top":false,"comment_ctime":1576483966,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576483966","product_id":100040201,"comment_content":"粗读，打卡。","like_count":0},{"had_liked":false,"id":161409,"user_name":"蓝魔丶","can_delete":false,"product_type":"c1","uid":1219438,"ip_address":"","ucode":"2AE4359E263558","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/6e/edd2da0c.jpg","comment_is_top":false,"comment_ctime":1576202255,"is_pvip":false,"replies":[{"id":"61516","content":"32位指针只有4G寻址空间，应该是不够管理硬盘空间的。","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1576205879,"ip_address":"","comment_id":161409,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1576202255","product_id":100040201,"comment_content":"求证老师一个问题：<br>我看网上解释Ext4 文件系统中13级block满满 4K 的指针。Block 指针是 32bit 的，一个 block 可以存储 4K&#47;32bit = 1024个 Block 指针，文中是256个，这个是因为文件系统不同吗？","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477708,"discussion_content":"32位指针只有4G寻址空间，应该是不够管理硬盘空间的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576205879,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":161338,"user_name":"芒果","can_delete":false,"product_type":"c1","uid":1124278,"ip_address":"","ucode":"5AD71E7F9FC738","user_header":"https://static001.geekbang.org/account/avatar/00/11/27/b6/e53c17ee.jpg","comment_is_top":false,"comment_ctime":1576195899,"is_pvip":false,"replies":[{"id":"61501","content":"收到，尽快修正，谢谢~","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1576201290,"ip_address":"","comment_id":161338,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1576195899","product_id":100040201,"comment_content":"这样，每个 inode 最多可以存储 12+256+256*25+256*256*256 个数据块<br><br>这里的公式写漏了，应该是12+256+256*256+256*256*256 个数据块","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477691,"discussion_content":"收到，尽快修正，谢谢~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576201290,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159217,"user_name":"木风","can_delete":false,"product_type":"c1","uid":1339677,"ip_address":"","ucode":"3BAA80C2F1FB68","user_header":"https://static001.geekbang.org/account/avatar/00/14/71/1d/8d1d27b2.jpg","comment_is_top":false,"comment_ctime":1575564391,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575564391","product_id":100040201,"comment_content":"均匀的数据分布，可以n个硬盘同时读取，速度更快","like_count":0},{"had_liked":false,"id":157230,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1575090598,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575090598","product_id":100040201,"comment_content":"针对校验数据的螺旋式存储 和 真正的数据存储一样 ，也是为了防止某块硬盘坏了 在丢了校验数据 和 某部分真实数据的时候 可以通过其他硬盘上的这部分备份 或 校验数据 来恢复吧","like_count":0},{"had_liked":false,"id":156768,"user_name":"丁丁历险记","can_delete":false,"product_type":"c1","uid":1661704,"ip_address":"","ucode":"A43829E454C067","user_header":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","comment_is_top":false,"comment_ctime":1574951998,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574951998","product_id":100040201,"comment_content":"为啥我的硬盘是顺序读3700M","like_count":0},{"had_liked":false,"id":156748,"user_name":"　扬帆丶启航　","can_delete":false,"product_type":"c1","uid":1235282,"ip_address":"","ucode":"4079D0889CD86C","user_header":"https://static001.geekbang.org/account/avatar/00/12/d9/52/73351eab.jpg","comment_is_top":false,"comment_ctime":1574947024,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574947024","product_id":100040201,"comment_content":"校验数据P存储在所有硬盘上，这样每一块数据丢失后都能通过校验数据与其他硬盘的数据进行运算获得丢失的数据。","like_count":0},{"had_liked":false,"id":156548,"user_name":"老男孩","can_delete":false,"product_type":"c1","uid":1134514,"ip_address":"","ucode":"CEC6D47412F620","user_header":"https://static001.geekbang.org/account/avatar/00/11/4f/b2/1e8b5616.jpg","comment_is_top":false,"comment_ctime":1574909634,"is_pvip":false,"replies":[{"id":"60112","content":"HDFS缺省的高可用策略是RAID0，数据会做多个备份，应用可以指定备份数，如果想要加快读的速度，可以增加备份个数。","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1574914924,"ip_address":"","comment_id":156548,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574909634","product_id":100040201,"comment_content":"突然发现专栏的名字好像变了？😁这估计是平台改的，这个名字目的性更强一些吧。今天的内容，老师从文件系统到RAID再到分布式文件系统讲解很系统也很全面。这里我有个问题想问一下，在分布式文件系统中，一个文件被分成多个数据块保存在不同datanode上，而且对这些数据块进行了备份。那么我们是否可以直接用RAID 0的方式把单节点的读写速度扩大N倍？还是采用RAID 5在速度和容错性之间做一个权衡？","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476150,"discussion_content":"HDFS缺省的高可用策略是RAID0，数据会做多个备份，应用可以指定备份数，如果想要加快读的速度，可以增加备份个数。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574914924,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156397,"user_name":"苏志辉","can_delete":false,"product_type":"c1","uid":1068927,"ip_address":"","ucode":"39B25CE21C04EE","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/7f/5dc11380.jpg","comment_is_top":false,"comment_ctime":1574866635,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574866635","product_id":100040201,"comment_content":"因为是每行的校验所以一行一个，为了防止一个坏了影响最小，所以每一块一个","like_count":0}]}