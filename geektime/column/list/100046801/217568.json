{"id":217568,"title":"15 | MySQL存储海量数据的最后一招：分库分表","content":"<p>你好，我是李玥。</p><p>从这节课开始，我们课程将进入最后一部分“海量数据篇”，这节课也是我们最后一节主要讲MySQL的课程。解决海量数据的问题，必须要用到分布式的存储集群，因为MySQL本质上是一个单机数据库，所以很多场景下不是太适合存TB级别以上的数据。</p><p>但是，绝大部分的电商大厂，它的在线交易这部分的业务，比如说，订单、支付相关的系统，还是舍弃不了MySQL，原因是，<strong>只有MySQL这类关系型数据库，才能提供金融级的事务保证</strong>。我们之前也讲过分布式事务，那些新的分布式数据库提供的所谓的分布式事务，多少都有点儿残血，目前还达不到这些交易类系统对数据一致性的要求。</p><p>那既然MySQL支持不了这么大的数据量，这么高的并发，还必须要用它，怎么解决这个问题呢？还是按照我上节课跟你说的思想，<strong>分片</strong>，也就是拆分数据。1TB的数据，一个库撑不住，我把它拆成100个库，每个库就只有10GB的数据了，这不就可以了么？这种拆分就是所谓的MySQL分库分表。</p><p>不过，思路是这样没错，分库分表实践起来是非常不容易的，有很多问题需要去思考和解决。</p><h2>如何规划分库分表？</h2><p>还是拿咱们的“老熟人”订单表来举例子。首先需要思考的问题是，分库还是分表？分库呢，就是把数据拆分到不同的MySQL库中去，分表就是把数据拆分到同一个库的多张表里面。</p><!-- [[[read_end]]] --><p>在考虑到底是分库还是分表之前，我们需要先明确一个原则，<strong>那就是能不拆就不拆，能少拆不多拆</strong>。原因也很简单，你把数据拆分得越散，开发和维护起来就越麻烦，系统出问题的概率就越大。</p><p>基于这个原则我们想一下，什么情况下适合分表，什么情况下不得不分库？</p><p>那我们分库分表的目的是为了解决两个问题：</p><p>第一，是数据量太大查询慢的问题。这里面我们讲的“查询”其实主要是事务中的查询和更新操作，因为只读的查询可以通过缓存和主从分离来解决，这个我们在之前的“MySQL如何应对高并发”的两节课中都讲过。那我们上节课也讲到过，<strong>解决查询慢，只要减少每次查询的数据总量就可以了，也就是说，分表就可以解决问题</strong>。</p><p>第二，是为了应对高并发的问题。应对高并发的思想我们之前也说过，一个数据库实例撑不住，就把并发请求分散到多个实例中去，所以，<strong>解决高并发的问题是需要分库的</strong>。</p><p>简单地说，<strong>数据量大，就分表；并发高，就分库</strong>。</p><p>一般情况下，我们的方案都需要同时做分库分表，这时候分多少个库，多少张表，分别用预估的并发量和数据量来计算就可以了。</p><p>另外，我个人不建议你在方案中考虑二次扩容的问题，也就是考虑未来的数据量，把这次分库分表设计的容量都填满了之后，数据如何再次分裂的问题。</p><p>现在技术和业务变化这么快，等真正到了那个时候，业务早就变了，可能新的技术也出来了，你之前设计的二次扩容方案大概率是用不上的，所以没必要为了这个而增加方案的复杂程度。还是那句话，<strong>越简单的设计可靠性越高</strong>。</p><h2>如何选择Sharding Key？</h2><p>分库分表还有一个重要的问题是，选择一个合适的列或者说是属性，作为分表的依据，这个属性一般称为Sharding Key。像我们上节课讲到的归档历史订单的方法，它的Sharding Key就是订单完成时间。每次查询的时候，查询条件中必须带上这个时间，我们的程序就知道，三个月以前的数据查订单历史表，三个月内的数据查订单表，这就是一个简单的按照时间范围来分片的算法。</p><p>选择合适Sharding Key和分片算法非常重要，直接影响了分库分表的效果。我们首先来说如何选择Sharding Key的问题。</p><p><strong>选择这个Sharding Key最重要的参考因素是，我们的业务是如何访问数据的</strong>。</p><p>比如我们把订单ID作为Sharding Key来拆分订单表，那拆分之后，如果我们按照订单ID来查订单，就需要先根据订单ID和分片算法计算出，我要查的这个订单它在哪个分片上，也就是哪个库哪张表中，然后再去那个分片执行查询就可以了。</p><p>但是，当我打开“我的订单”这个页面的时候，它的查询条件是用户ID，这里没有订单ID，那就没法知道我们要查的订单在哪个分片上，就没法查了。当然你要强行查的话，那就只能把所有分片都查一遍，再合并查询结果，这个就很麻烦，而且性能很差，还不能分页。</p><p>那要是把用户ID作为Sharding Key呢？也会面临同样的问题，使用订单ID作为查询条件来查订单的时候，就没办法找到订单在哪个分片了。这个问题的解决办法是，在生成订单ID的时候，把用户ID的后几位作为订单ID的一部分，比如说，可以规定，18位订单号中，第10-14位是用户ID的后四位，这样按订单ID查询的时候，就可以根据订单ID中的用户ID找到分片。</p><p>那我们系统对订单的查询方式，肯定不只是按订单ID或者按用户ID这两种啊。比如说，商家希望看到的是自己店铺的订单，还有各种和订单相关的报表。对于这些查询需求，我们一旦对订单做了分库分表，就没法解决了。那怎么办呢？</p><p>一般的做法是，把订单数据同步到其他的存储系统中去，在其他的存储系统里面解决问题。比如说，我们可以再构建一个以店铺ID作为Sharding Key的只读订单库，专门供商家来使用。或者，把订单数据同步到HDFS中，然后用一些大数据技术来生成订单相关的报表。</p><p>所以你看，一旦做了分库分表，就会极大地限制数据库的查询能力，之前很简单的查询，分库分表之后，可能就没法实现了。所以我们在之前的课程中，先讲了各种各样的方法，来缓解数据多、并发高的问题，而一直没讲分库分表。<strong>分库分表一定是，数据量和并发大到所有招数都不好使了，我们才拿出来的最后一招。</strong></p><h2>如何选择分片算法？</h2><p>在上节课我给你留的思考题中，我们提到过，能不能用订单完成时间作为Sharding Key呢？比如说，我分12个分片，每个月一个分片，这样对查询的兼容要好很多，毕竟查询条件中带上时间范围，让查询只落到某一个分片上，还是比较容易的，我在查询界面上强制用户必须指定时间范围就行了。</p><p>这种做法有个很大的问题，比如现在是3月份，那基本上所有的查询都集中在3月份这个分片上，其他11个分片都闲着，这样不仅浪费资源，很可能你3月那个分片根本抗不住几乎全部的并发请求。这个问题就是“热点问题”。</p><p>也就是说，我们希望并发请求和数据能均匀地分布到每一个分片上，尽量避免出现热点。这是选择分片算法时需要考虑的一个重要的因素。一般常用的分片算法就那么几种，刚刚讲到的按照时间范围分片的方法是其中的一种。</p><p>基于范围来分片容易产生热点问题，不适合作为订单的分片方法，但是这种分片方法的优点也很突出，那就是对查询非常友好，基本上只要加上一个时间范围的查询条件，原来该怎么查，分片之后还可以怎么查。范围分片特别适合那种数据量非常大，但并发访问量不大的ToB系统。比如说，电信运营商的监控系统，它可能要采集所有人手机的信号质量，然后做一些分析，这个数据量非常大，但是这个系统的使用者是运营商的工作人员，并发量很少。这种情况下就很适合范围分片。</p><p>一般来说，订单表都采用更均匀的哈希分片算法。比如说，我们要分24个分片，选定了Sharding Key是用户ID，那我们决定某个用户的订单应该落到那个分片上的算法是，拿用户ID除以24，得到的余数就是分片号。这是最简单的取模算法，一般就可以满足大部分要求了。当然也有一些更复杂的哈希算法，像一致性哈希之类的，特殊情况下也可以使用。</p><p>需要注意的一点是，哈希分片算法能够分得足够均匀的前提条件是，用户ID后几位数字必须是均匀分布的。比如说，你在生成用户ID的时候，自定义了一个用户ID的规则，最后一位0是男性，1是女性，这样的用户ID哈希出来可能就没那么均匀，可能会出现热点。</p><p>还有一种分片的方法：查表法。查表法其实就是没有分片算法，决定某个Sharding Key落在哪个分片上，全靠人为来分配，分配的结果记录在一张表里面。每次执行查询的时候，先去表里查一下要找的数据在哪个分片中。</p><p>查表法的好处就是灵活，怎么分都可以，你用上面两种分片算法都没法分均匀的情况下，就可以用查表法，人为地来把数据分均匀了。查表法还有一个特好的地方是，它的分片是可以随时改变的。比如我发现某个分片已经是热点了，那我可以把这个分片再拆成几个分片，或者把这个分片的数据移到其他分片中去，然后修改一下分片映射表，就可以在线完成数据拆分了。</p><p><img src=\"https://static001.geekbang.org/resource/image/0f/9d/0faac5967ca1f9385d8f7eda8eedd09d.jpg?wh=1142*701\" alt=\"\"></p><p>但你需要注意的是，分片映射表本身的数据不能太多，否则这个表反而成为热点和性能瓶颈了。查表法相对其他两种分片算法来说，缺点是需要二次查询，实现起来更复杂，性能上也稍微慢一些。但是，分片映射表可以通过缓存来加速查询，实际性能并不会慢很多。</p><h2>小结</h2><p>对MySQL这样的单机数据库来说，分库分表是应对海量数据和高并发的最后一招，分库分表之后，将会对数据查询有非常大的限制。</p><p>分多少个库需要用并发量来预估，分多少表需要用数据量来预估。选择Sharding Key的时候，一定要能兼容业务最常用的查询条件，让查询尽量落在一个分片中，分片之后无法兼容的查询，可以把数据同步到其他存储中去，来解决这个问题。</p><p>我们常用三种分片算法，范围分片容易产生热点问题，但对查询更友好，适合并发量不大的场景；哈希分片比较容易把数据和查询均匀地分布到所有分片中；查表法更灵活，但性能稍差。</p><p>对于订单表进行分库分表，一般按照用户ID作为Sharding Key，采用哈希分片算法来均匀分布用户订单数据。为了能支持按订单号查询的需求，需要把用户ID的后几位放到订单号中去。</p><p>最后还需要强调一下，我们这节课讲的这些分片相关的知识，不仅仅适用于MySQL的分库分表，你在使用其他分布式数据库的时候，一样会遇到如何分片、如何选择Sharding Key和分片算法的问题，它们的原理都是一样的，所以我们讲的这些方法也都是通用的。</p><h2>思考题</h2><p>课后请你想一下，把订单表拆分之后，那些和订单有外键关联的表，该怎么处理？欢迎你在留言区与我讨论。</p><p>感谢你的阅读，如果你觉得今天的内容对你有帮助，也欢迎把它分享给你的朋友。</p>","comments":[{"had_liked":false,"id":200999,"user_name":"李玥","can_delete":false,"product_type":"c1","uid":1501046,"ip_address":"","ucode":"B19E91EE248591","user_header":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","comment_is_top":true,"comment_ctime":1585704611,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"9.2233721372246999e+18","product_id":100046801,"comment_content":"Hi，我是李玥。<br><br>这里回顾一下上节课的思考题：<br><br>在数据持续增长的过程中，今天介绍的这种“归档历史订单”的数据拆分方法，和直接进行分库分表相比，比如说按照订单创建时间，自动拆分成每个月一张表，两种方法各有什么优点和缺点？欢迎你在留言区与我讨论。<br><br>这个问题我在本节课中也提到了，简单的总结一下。按月自动拆分订单的好处是，不需要做数据搬运，相对实现比较简单，数据分得更碎，缺点是跨月查询比较麻烦，但好处是容量也更大（因为分片更多）。归档历史订单的方法，实现起来更复杂，容量要小一些，但是对查询更加友好。","like_count":23},{"had_liked":false,"id":200982,"user_name":"每天晒白牙","can_delete":false,"product_type":"c1","uid":1004698,"ip_address":"","ucode":"A1B102CD933DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","comment_is_top":false,"comment_ctime":1585702682,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"139024656154","product_id":100046801,"comment_content":"分库分表的原则<br>能不拆就不拆，能少拆就少拆<br><br>分库分表的目的<br>1.数据量大查询慢的问题<br>解决查询慢就是减少每次查询的数据量，即分表可以解决该问题<br>2.应对高并发的问题<br>一个数据库实例撑不住就分散到多个实例中去，即分库可以解决<br><br>概括就是数据量大就分表，高并发就分库<br><br>如何选择 sharding key?<br>这是分表的依据，选择要考虑的因素取决于业务如何访问数据，让查询尽量落到一个分片中。如果分片无法兼容查询，可以把数据同步到其他存储中，供查询<br><br>常见的分片算法<br>1.范围分片<br>对查询友好，适合并发量不大的场景。但容易产生热点数据<br>2.哈希分片<br>比较均匀<br>3.查表法<br>灵活，性能差因为多了一次查表<br><br>实例案例<br>订单表分库分表<br>一般按用户id分，采用哈希分片算法。为了支持按订单号查询，可以把用户id的后几位放到订单号中","like_count":33,"discussions":[{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366359,"discussion_content":"订单表分库分表\n采用哈希分片算法，按用户部分的id分表。订单号包含用户部分的id\n\n1. 截取用户部分的id，哈希，找到数据所在的表；\n2. 按照订单号索引表，获取用户的订单列表；","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1618042656,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":201394,"user_name":"leslie","can_delete":false,"product_type":"c1","uid":1324255,"ip_address":"","ucode":"798E7C1CC98CC2","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg","comment_is_top":false,"comment_ctime":1585760884,"is_pvip":false,"replies":[{"id":"75366","content":"👍👍👍","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1585792712,"ip_address":"","comment_id":201394,"utype":1}],"discussion_count":2,"race_medal":0,"score":"126139812468","product_id":100046801,"comment_content":"是不是漏了另外一种拆分方式：纵向拆分？分表应当还有一个原因，早期数据量小可以几十个字段都没有关系；后期数据量大了，多列查询导致了一些性能问题。我自己在生产中就碰到了设计的不合理性，做了纵向分表-效果还不错，精度只能靠实战、学习、反思去提升。<br>课程中提及的分表所引发的外键问题其实应当和DML有关：查询并无影响。个人觉得影响不大，细看是多张表，但是设计时其实还是一张；查询时对应的判断补进去就好。","like_count":30,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490322,"discussion_content":"👍👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585792712,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1392924,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/rRCSdTPyqWcW6U8DO9xL55ictNPlbQ38VAcaBNgibqaAhcH7mn1W9ddxIJLlMiaA5sngBicMX02w2HP5pAWpBAJsag/132","nickname":"butterfly","note":"","ucode":"1B724973303FB0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343608,"discussion_content":"纵向分表带来的问题是，分到两个表中的字段该怎么查询？\n比如 后台运营系统，有很多查询条件，未拆分之前是在同一个页面上显示的，拆分之后，数据该如何聚合, 可能还需要涉及到分页，计算数量之类的操作。 而且运营操作之后，往往需要立即看到修改之后的数据，又不能放到ES.","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1611110933,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":206042,"user_name":"百威","can_delete":false,"product_type":"c1","uid":1074843,"ip_address":"","ucode":"758199FDD0B44F","user_header":"https://static001.geekbang.org/account/avatar/00/10/66/9b/59776420.jpg","comment_is_top":false,"comment_ctime":1586779011,"is_pvip":false,"replies":[{"id":"77010","content":"这个地方详细说一下，比如只取用户ID后四位，为了保证后四位的哈希结果和完整用户ID的哈希结果是一样的，分片的数量需要能被10000整除。300个分片是不行的，200、250这种分片数量就是可以满足要求的。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1586830115,"ip_address":"","comment_id":206042,"utype":1}],"discussion_count":7,"race_medal":0,"score":"113255928707","product_id":100046801,"comment_content":"接“发条橙子”“用完整用户id分片还是后四位分片”对话：为什么是一样的啊，没懂……比如300个分片，用取模法，用户id分别为12000和22000，后四位相同但查找的表不同呀……我感觉这块没说清楚，我听完之后也有这个疑惑","like_count":27,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491648,"discussion_content":"这个地方详细说一下，比如只取用户ID后四位，为了保证后四位的哈希结果和完整用户ID的哈希结果是一样的，分片的数量需要能被10000整除。300个分片是不行的，200、250这种分片数量就是可以满足要求的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586830115,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3206657,"avatar":"https://static001.geekbang.org/account/avatar/00/30/ee/01/2ecf51b0.jpg","nickname":"Catcher","note":"","ucode":"5BEFBEE3D367A5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592102,"discussion_content":"10000条数据可以均分到分片中，那么当数据条数小于10000，每条数据的位置，一定是确定的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667112245,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3206657,"avatar":"https://static001.geekbang.org/account/avatar/00/30/ee/01/2ecf51b0.jpg","nickname":"Catcher","note":"","ucode":"5BEFBEE3D367A5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592101,"discussion_content":"10000能整除分片数量，用户ID为四位数，那么用户ID除分片数量得到的余数一定是一致的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667112091,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2067919,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/8d/cf/52686d42.jpg","nickname":"19","note":"","ucode":"9CD0164890D7B6","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587777,"discussion_content":"这是什么数学知识","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663290521,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1742141,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/95/3d/2102902b.jpg","nickname":"Geek","note":"","ucode":"5A732EAAE96CFF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381262,"discussion_content":"数学","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624973488,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1081614,"avatar":"https://static001.geekbang.org/account/avatar/00/10/81/0e/ec667c01.jpg","nickname":"Wallace Pang","note":"","ucode":"6436E14695B1F9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284839,"discussion_content":"伦数学的重要性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592658480,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1666006,"avatar":"https://static001.geekbang.org/account/avatar/00/19/6b/d6/8d59d926.jpg","nickname":"热心市民小陈","note":"","ucode":"DED1930BEBC3AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":269046,"discussion_content":"感谢！解答了我的疑惑，还是要学好数学啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589860326,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":200546,"user_name":"sami","can_delete":false,"product_type":"c1","uid":1033240,"ip_address":"","ucode":"9A66FCA00D8A37","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJkwbyTYtSCx6Qc7cQPnnRWv38Jybh3etziaPmuP8gHcgS6FMxcdftrKgWiamH6fc2iciaicDKDVEwcEibQ/132","comment_is_top":false,"comment_ctime":1585617620,"is_pvip":true,"replies":[{"id":"75383","content":"你说的没错！","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1585802233,"ip_address":"","comment_id":200546,"utype":1}],"discussion_count":1,"race_medal":0,"score":"78895028948","product_id":100046801,"comment_content":"感觉Redis Cluster的分片规则有点像查表法","like_count":18,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490061,"discussion_content":"你说的没错！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585802233,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":200503,"user_name":"Mq","can_delete":false,"product_type":"c1","uid":1178359,"ip_address":"","ucode":"041F572AFAB275","user_header":"https://static001.geekbang.org/account/avatar/00/11/fa/f7/91ac44c5.jpg","comment_is_top":false,"comment_ctime":1585613570,"is_pvip":false,"replies":[{"id":"75385","content":"查表法一般可以配合哈希或者范围分片一起使用。<br><br>比如说，我们按用户ID哈希分成10个分片，其中第8个分片数据特别多不均匀。<br><br>那我们可以按用户ID哈希成100个逻辑分片。<br><br>再做一个100逻辑分片和10个物理分片的映射表，这个表里面只有100条记录。<br><br>那怎么来映射我们就可以人工分配，让10个物理分片中的数据尽量均匀。<br>","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1585802543,"ip_address":"","comment_id":200503,"utype":1}],"discussion_count":3,"race_medal":0,"score":"66010123010","product_id":100046801,"comment_content":"关联表可以冗余用户ID字段，跟订单表的都在一个库里吗，这样用户维度的交易都在一个库事物里面，大部分的关联查询也是在一个库里。<br>老师查找法有具体例子吗，我们之前也有过表按hash分后数据极度不均","like_count":15,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490051,"discussion_content":"查表法一般可以配合哈希或者范围分片一起使用。\n\n比如说，我们按用户ID哈希分成10个分片，其中第8个分片数据特别多不均匀。\n\n那我们可以按用户ID哈希成100个逻辑分片。\n\n再做一个100逻辑分片和10个物理分片的映射表，这个表里面只有100条记录。\n\n那怎么来映射我们就可以人工分配，让10个物理分片中的数据尽量均匀。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585802543,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366361,"discussion_content":"虚拟节点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618043021,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366360,"discussion_content":"hash slot","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618042972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":202473,"user_name":"Loren","can_delete":false,"product_type":"c1","uid":1189929,"ip_address":"","ucode":"ED83B080A3962C","user_header":"https://static001.geekbang.org/account/avatar/00/12/28/29/162e2795.jpg","comment_is_top":false,"comment_ctime":1585993698,"is_pvip":false,"replies":[{"id":"76050","content":"如果需要分库分表还要跨表查询，这种情况下没有什么好的分页解决方案，业务还是要规避分库分表之后跨表查询的情况。<br><br>如果实在规避不了，就要考虑sharding key是不是合理，或者可能要更换数据库。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1586223017,"ip_address":"","comment_id":202473,"utype":1}],"discussion_count":6,"race_medal":0,"score":"48830633954","product_id":100046801,"comment_content":"老师，请教一个问题，分库分表以后，数据量大的情况下，分页一般该怎么处理？我暂时没这方面的经验，想了解一下","like_count":11,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490593,"discussion_content":"如果需要分库分表还要跨表查询，这种情况下没有什么好的分页解决方案，业务还是要规避分库分表之后跨表查询的情况。\n\n如果实在规避不了，就要考虑sharding key是不是合理，或者可能要更换数据库。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586223017,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1250907,"avatar":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","nickname":"Monday","note":"","ucode":"77B9BACC783598","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295586,"discussion_content":"Loren大佬，正中我的下怀。我司MySql亿级表（后续数据还将一直爆涨）出现查询慢，需要做优化，就出现了分表后要分页查询的场景。现在还在想方案。看老师的回复，我的心拔凉拔凉的。   如果有好的方案，还请告知。谢谢","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1596256771,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1013683,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/77/b3/991f3f9b.jpg","nickname":"公号-技术夜未眠","note":"","ucode":"83825B57CBD952","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1250907,"avatar":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","nickname":"Monday","note":"","ucode":"77B9BACC783598","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311964,"discussion_content":"建立一个全局的包括查询字段，排序字段的全局表，尽量走覆盖索引。\n或者同步到es中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602551850,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":295586,"ip_address":""},"score":311964,"extra":""},{"author":{"id":1594215,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIG2aw6bmrrxPkrwIyStmZsfaYVHzYbP05A8V9LCa8ZnKl7yYb4zHTyicN5grp03nnpRqgQicpsaTxg/132","nickname":"STOREFEE","note":"","ucode":"CF660E3FF11D95","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1250907,"avatar":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","nickname":"Monday","note":"","ucode":"77B9BACC783598","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":372705,"discussion_content":"跟老师说的一样，根据业务需要，你选的分片key就只能是范围划分的， 每次查询都带上，就不怕分页了。其他的情况就只能分别查询再合并了？要么换专攻查询的高性能分布式数据库。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620439221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":295586,"ip_address":""},"score":372705,"extra":""},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1250907,"avatar":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","nickname":"Monday","note":"","ucode":"77B9BACC783598","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538270,"discussion_content":"这种一般是对部分字段做聚合 做在任意存储介质都行 然后在中间层或者控制层（一般是某个api）将其他数据补充完整再将其返回。\n对于中间层要查询的的字段 可以用多级缓存做挡拆 这里要和业务协调好几秒的脏读 一般都时可以接受。除非是金融或订单状态变换场景。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639391129,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":295586,"ip_address":""},"score":538270,"extra":""}]},{"author":{"id":1742141,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/95/3d/2102902b.jpg","nickname":"Geek","note":"","ucode":"5A732EAAE96CFF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381263,"discussion_content":"数据同步到ES，分页查询走ES","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1624973763,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208136,"user_name":"锐","can_delete":false,"product_type":"c1","uid":1110915,"ip_address":"","ucode":"A245BA96C9471F","user_header":"https://static001.geekbang.org/account/avatar/00/10/f3/83/e2612d81.jpg","comment_is_top":false,"comment_ctime":1587283074,"is_pvip":false,"replies":[{"id":"77827","content":"比较方便的方法是扩容后的分片数量是24的整数倍，这样每个分片相当于1分n。或者在设计之初就采用一致性哈希算法来分片。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1587349631,"ip_address":"","comment_id":208136,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35947021442","product_id":100046801,"comment_content":"请问老师，假设现在是24个分片，使用取模算法，后续发现分片后数据量还是太大，要改成扩大分片数，需要重新迁移数据吧？工作量大且复杂，该怎么设计比较方便扩容呢","like_count":8,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492353,"discussion_content":"比较方便的方法是扩容后的分片数量是24的整数倍，这样每个分片相当于1分n。或者在设计之初就采用一致性哈希算法来分片。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587349631,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":200504,"user_name":"饭团","can_delete":false,"product_type":"c1","uid":1332557,"ip_address":"","ucode":"E24F240CC91BE8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erbY9UsqHZhhVoI69yXNibBBg0TRdUVsKLMg2UZ1R3NJxXdMicqceI5yhdKZ5Ad6CJYO0XpFHlJzIYQ/132","comment_is_top":false,"comment_ctime":1585613576,"is_pvip":false,"replies":[{"id":"75384","content":"是的<br>","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1585802248,"ip_address":"","comment_id":200504,"utype":1}],"discussion_count":17,"race_medal":0,"score":"35945351944","product_id":100046801,"comment_content":"老师您好，您提到的把用户id放到订单id中，是说如果用订单id去做查询，就把第10-14位取出来，之后再用这部分去查询是吗？","like_count":8,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490052,"discussion_content":"是的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585802248,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1433535,"avatar":"https://static001.geekbang.org/account/avatar/00/15/df/bf/96b50d1e.jpg","nickname":"😚 46","note":"","ucode":"EED0EBBBF80A43","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":271918,"discussion_content":"我的理解是，本质上还是使用用户ID来作为sharding key！\n将用户ID添加到订单号中，可以实现根据订单号来查询数据也能路由到实际的分片上。\n为了加以理解，我参考了这篇文章：https://blog.csdn.net/fly910905/article/details/87285709","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1590218481,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1484192,"avatar":"https://static001.geekbang.org/account/avatar/00/16/a5/a0/e0cccf7e.jpg","nickname":"圆圆满满","note":"","ucode":"396E7A822014D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":223861,"discussion_content":"实际是用用户id和用户id后四位做了一个关联。前者是唯一，后者不必唯一，只要能找到分片就行","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1586259240,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1332557,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erbY9UsqHZhhVoI69yXNibBBg0TRdUVsKLMg2UZ1R3NJxXdMicqceI5yhdKZ5Ad6CJYO0XpFHlJzIYQ/132","nickname":"饭团","note":"","ucode":"E24F240CC91BE8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1484192,"avatar":"https://static001.geekbang.org/account/avatar/00/16/a5/a0/e0cccf7e.jpg","nickname":"圆圆满满","note":"","ucode":"396E7A822014D1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":223874,"discussion_content":"对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586260087,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":223861,"ip_address":""},"score":223874,"extra":""}]},{"author":{"id":1520538,"avatar":"https://static001.geekbang.org/account/avatar/00/17/33/9a/f295dea5.jpg","nickname":"李正g","note":"","ucode":"A7BEA03BB6537A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581353,"discussion_content":"保证按照客户IDsharding， 和按照客户ID后4位sharding的结果是一样的。 如果是4位，就需要保证10000/分片数=0， 如果是5位就保证100000/分片数=0","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658736659,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1253384,"avatar":"https://static001.geekbang.org/account/avatar/00/13/20/08/bc06bc69.jpg","nickname":"Dovelol","note":"","ucode":"9B5DDF7720F307","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":218084,"discussion_content":"是的，但是想问下这个到底取几位用户id，有没有什么讲究呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585618772,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":11,"child_discussions":[{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1253384,"avatar":"https://static001.geekbang.org/account/avatar/00/13/20/08/bc06bc69.jpg","nickname":"Dovelol","note":"","ucode":"9B5DDF7720F307","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":218126,"discussion_content":"只要能保证取出来的用户ID 能唯一并且能找到对应的分片就可以的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1585622100,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":218084,"ip_address":""},"score":218126,"extra":""},{"author":{"id":1253384,"avatar":"https://static001.geekbang.org/account/avatar/00/13/20/08/bc06bc69.jpg","nickname":"Dovelol","note":"","ucode":"9B5DDF7720F307","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":218258,"discussion_content":"和唯一没有关系的，比如正文讲的10-14位怎么也不可能做到唯一，是要拿这个id对分表数量取模的，所以肯定要大于分表数量才行。因为这里存的不是完整用户id，所以肯定不是唯一的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585639569,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":218126,"ip_address":""},"score":218258,"extra":""},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1253384,"avatar":"https://static001.geekbang.org/account/avatar/00/13/20/08/bc06bc69.jpg","nickname":"Dovelol","note":"","ucode":"9B5DDF7720F307","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":218261,"discussion_content":"这个前提是数据库是根据用户id进行分片的，如果你取出来的用户Id不是验证的或者真实的，那就定位不到对应的分片（这里保存也不一定是真实的用户id，只要能和真实的用户id映射起来就行）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585640170,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":218258,"ip_address":""},"score":218261,"extra":""}]}]},{"had_liked":false,"id":217836,"user_name":"Echo","can_delete":false,"product_type":"c1","uid":1409357,"ip_address":"","ucode":"F04C6BC4E288A7","user_header":"https://static001.geekbang.org/account/avatar/00/15/81/4d/5f892de2.jpg","comment_is_top":false,"comment_ctime":1589624798,"is_pvip":false,"replies":[{"id":"80846","content":"是这样的。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1589868436,"ip_address":"","comment_id":217836,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31654395870","product_id":100046801,"comment_content":"老师您好：您文中说“范围分片特别适合那种数据量非常大，但并发访问量不大的 ToB 系统”，如果是这样的话 并发量不大的ToB 系统就没必要分库了吧？因为分库要解决的是高并发的问题。可以用分表或者归档的方式解决？","like_count":7,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495272,"discussion_content":"是这样的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589868436,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":213866,"user_name":"旅途","can_delete":false,"product_type":"c1","uid":1212902,"ip_address":"","ucode":"5022477E8E9441","user_header":"https://static001.geekbang.org/account/avatar/00/12/81/e6/6cafed37.jpg","comment_is_top":false,"comment_ctime":1588579825,"is_pvip":false,"replies":[{"id":"79927","content":"1. 因为有可能用户的男女比例不同，造成分片不均衡，出现热点。<br>2. 如果要修改分片映射，一般的流程是：先完成扩容和数据复制，然后直接修改分片映射表。不需要修改代码。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1589168275,"ip_address":"","comment_id":213866,"utype":1}],"discussion_count":3,"race_medal":0,"score":"27358383601","product_id":100046801,"comment_content":"老师 问几个问题<br>1.用户Id的根据性别的0,1,这样分表为什么会造成热点问题,只看到了分表数据可能不均匀?<br>2.使用分表映射表,这种如果要修改映射是怎么做的呢?是直接修改表记录还是修改代码,在生成的时候让他改变?","like_count":6,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493888,"discussion_content":"1. 因为有可能用户的男女比例不同，造成分片不均衡，出现热点。\n2. 如果要修改分片映射，一般的流程是：先完成扩容和数据复制，然后直接修改分片映射表。不需要修改代码。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589168275,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":538271,"discussion_content":"但是迁移是在线迁移 实际上迁移过程还是很费劲的 这就和双写一样 。动不动就要对映射表做擦写 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639391210,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":493888,"ip_address":""},"score":538271,"extra":""}]},{"author":{"id":1212902,"avatar":"https://static001.geekbang.org/account/avatar/00/12/81/e6/6cafed37.jpg","nickname":"旅途","note":"","ucode":"5022477E8E9441","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":265902,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589453347,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208080,"user_name":"曙光","can_delete":false,"product_type":"c1","uid":1476450,"ip_address":"","ucode":"04D65BF7F19845","user_header":"https://static001.geekbang.org/account/avatar/00/16/87/62/f99b5b05.jpg","comment_is_top":false,"comment_ctime":1587271232,"is_pvip":false,"replies":[{"id":"77833","content":"如果一亿的数据分12个月，那实际上每个月的表中大概是一千万左右的数据，这个量级的数据，在做好索引的前提下，查询不会很慢。<br><br>建议你先看一下查询的执行计划，找出为什么慢的原因。<br><br>另外，你没有提到表中的数据是否会频繁删除。如果频繁插入和删除数据的这张表，它的索引会越来越大，定期重建索引是有必要的。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1587351391,"ip_address":"","comment_id":208080,"utype":1}],"discussion_count":5,"race_medal":0,"score":"27357075008","product_id":100046801,"comment_content":"老师，我有个生产问题，内部管理系统，使用的是Oracle数据库，按月分表，该表每天新增近6W的数据，目前共有1亿的数据量。现在的问题是，业务每天都需要查这个表进行对账，查询速度很慢，每次慢的适合，我们就重建索引速度就快一点，过一段时间又会变慢。最要命的事，这些数据有一个归属人的字段，如果某个人换部门或离职，这部分历史数据都要归宿新人，涉及历史数据的修改。 之前通过归档历史表，处理查询慢的问题，发现还没重建索引收益高，就没修改了。但是交易归属人就比较麻烦，一次变更需要2～3分钟，体验很差。我目前想的解决方案是：重构历史功能，将交易表拆分成两张表，账户表，交易余额对账表和人员归属表，虽然每天6w笔数据，但大部分账户是一样的只是余额不一样。这样查询的话，每次需要关联3张表。如果真的这样实施，需要修改很多中间表的洗数流程。面对目前的数据量，我这种方案可行么？还有更好的修改方案么？ 怕自己盲目修改后，和之前的查询修改性能差不多，就白忙活了","like_count":6,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492334,"discussion_content":"如果一亿的数据分12个月，那实际上每个月的表中大概是一千万左右的数据，这个量级的数据，在做好索引的前提下，查询不会很慢。\n\n建议你先看一下查询的执行计划，找出为什么慢的原因。\n\n另外，你没有提到表中的数据是否会频繁删除。如果频繁插入和删除数据的这张表，它的索引会越来越大，定期重建索引是有必要的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587351391,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1212902,"avatar":"https://static001.geekbang.org/account/avatar/00/12/81/e6/6cafed37.jpg","nickname":"旅途","note":"","ucode":"5022477E8E9441","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":257509,"discussion_content":"按月分表,每天6w的数据,一张表(一个月)才200w啊,怎么会查询慢呢?并且离职不会是一个很频繁发生的事吧,如果按你说的那么拆工作量不会小","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1588580386,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1476450,"avatar":"https://static001.geekbang.org/account/avatar/00/16/87/62/f99b5b05.jpg","nickname":"曙光","note":"","ucode":"04D65BF7F19845","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":240357,"discussion_content":"数据不会删除，每天会批量插入近6w笔数据，异常数据会修改对账结果，如果有账户负责人换了会修改负责人ID。有的账户每天都有数据，如果修改负责人ID，需要把几年的数据全部改成新的负责人ID。是否负责人ID需要单独建个索引。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1587355585,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1476450,"avatar":"https://static001.geekbang.org/account/avatar/00/16/87/62/f99b5b05.jpg","nickname":"曙光","note":"","ucode":"04D65BF7F19845","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366365,"discussion_content":"修改现在的负责人，修改以前的负责人，很奇怪的业务逻辑，导致修改量大\nMySQL更偏向事务处理，而不是分析处理","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1618043618,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":240357,"ip_address":""},"score":366365,"extra":""}]},{"author":{"id":1253530,"avatar":"https://static001.geekbang.org/account/avatar/00/13/20/9a/3b1c65fd.jpg","nickname":"八百","note":"","ucode":"79F1F79ADF5A00","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312021,"discussion_content":"୧😂୨不存真实的所属人id，再加一层映射关键  id和所属人的关系表，变更所属人就把这个id关联到新所属人上\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602565073,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":200679,"user_name":"正在减肥的胖籽。","can_delete":false,"product_type":"c1","uid":1033728,"ip_address":"","ucode":"99E2E4DF599236","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c6/00/683bb4f0.jpg","comment_is_top":false,"comment_ctime":1585636500,"is_pvip":false,"replies":[{"id":"75382","content":"是的，一般是同步到其它的数据库中去解决。我会在19中来讲，如何做实时同步。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1585801997,"ip_address":"","comment_id":200679,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27355440276","product_id":100046801,"comment_content":"老师您好，有几个问题需要请教你下：<br>1.运营后台查询数据，肯定就是查询很多数据，不止是单个用户的数据。京东怎么去处理运营后台的数据呢?是把数据同步到ES中还是？","like_count":6,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490098,"discussion_content":"是的，一般是同步到其它的数据库中去解决。我会在19中来讲，如何做实时同步。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585801997,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":207437,"user_name":"闫冬","can_delete":false,"product_type":"c1","uid":1109691,"ip_address":"","ucode":"1725E869D5A3D3","user_header":"https://static001.geekbang.org/account/avatar/00/10/ee/bb/7afd6824.jpg","comment_is_top":false,"comment_ctime":1587086625,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"23061923105","product_id":100046801,"comment_content":"分表分库的原则，能通过其他方式优化的就不去分库分表，一来容易出错二来增加了系统的复杂度<br>根据不同的场景原则分库还是分表<br>如果是数据量大则分表 如果并发量大则分库<br>分表又分水平分表和垂直分表<br>垂直分表主要应用于当表的字段过多时，讲常用的字段分到一个表 不常用的分到一个表<br><br>水平分表比较复杂<br>可以按时间划分 也可以哈希 取模<br>时间划分比较适用于 经常按时段 热度没那么高的场景 因为如果有热点数据会造成分布不均衡<br>哈希 取模主要应用于按某个字段分表 分布比较均匀 但是范围查找又会有问题 可以通过冗余表来实现<br><br>异构表 相当于索引表 可以人为的调整 灵活 但是性能没有 哈希或取模快<br><br>有一个小技巧 就是订单号可以隐藏一些信息 这样避免一些场景的局限性","like_count":5,"discussions":[{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538272,"discussion_content":"就是用基因法 生成订单号 末n位保留。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639391267,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1433535,"avatar":"https://static001.geekbang.org/account/avatar/00/15/df/bf/96b50d1e.jpg","nickname":"😚 46","note":"","ucode":"EED0EBBBF80A43","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":271418,"discussion_content":"能不能再详细说一说 小技巧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590134114,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1109691,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ee/bb/7afd6824.jpg","nickname":"闫冬","note":"","ucode":"1725E869D5A3D3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1433535,"avatar":"https://static001.geekbang.org/account/avatar/00/15/df/bf/96b50d1e.jpg","nickname":"😚 46","note":"","ucode":"EED0EBBBF80A43","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":272800,"discussion_content":"就是订单号的设计，比如你可以约定订单号是有商铺id和商品类型和时间组成这样一个订单号就隐藏了这些信息，具体根据你们的实际场景自由发挥","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590364588,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":271418,"ip_address":""},"score":272800,"extra":""}]}]},{"had_liked":false,"id":200692,"user_name":"虚竹","can_delete":false,"product_type":"c1","uid":1691109,"ip_address":"","ucode":"8D8C96C793724E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJIocn8OMjfSGqyeSJEV3ID2rquLR0S6xo0ibdNYQgzicib6L6VlqWjhgxOqD2iaicX1KhbWXWCsmBTskA/132","comment_is_top":false,"comment_ctime":1585638578,"is_pvip":false,"replies":[{"id":"75381","content":"直接用用户ID哈希，计算出这个用户的订单在哪个分片上，然后去查询就可以了。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1585801639,"ip_address":"","comment_id":200692,"utype":1}],"discussion_count":7,"race_medal":0,"score":"23060475058","product_id":100046801,"comment_content":"老师好，订单id总共18位，10-14位放用户id的后几位，当用户要查询自己的所有订单时怎么查呢？这里没太明白","like_count":5,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490104,"discussion_content":"直接用用户ID哈希，计算出这个用户的订单在哪个分片上，然后去查询就可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585801639,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1320730,"avatar":"https://static001.geekbang.org/account/avatar/00/14/27/1a/77fb1e4e.jpg","nickname":"Lingjun","note":"","ucode":"5CE38C19231D3B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":218410,"discussion_content":"我的理解是，这种情况下，订单数据是根据用户id的后几位进行分片的，所以一个用户的订单都会被分配到一个表里。所以当需要查询用户的所有订单时，可以根据该用户的id的后几位定位到相应的表，然后根据完整的用户id就可以查到这个用户所有的订单了。同理，如果想要搜索一个订单，那么也是先根据这个订单号中的10-14位来定位相应的表，然后在这个表里查询完整的订单号即可。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1585655619,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1691109,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJIocn8OMjfSGqyeSJEV3ID2rquLR0S6xo0ibdNYQgzicib6L6VlqWjhgxOqD2iaicX1KhbWXWCsmBTskA/132","nickname":"虚竹","note":"","ucode":"8D8C96C793724E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1320730,"avatar":"https://static001.geekbang.org/account/avatar/00/14/27/1a/77fb1e4e.jpg","nickname":"Lingjun","note":"","ucode":"5CE38C19231D3B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":218725,"discussion_content":"应该是这样的，不过这里是10-14位，总共是18位，hash的话应该是后几位才有效，所以这里怎么用10-14位分的还需要考虑下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585671492,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":218410,"ip_address":""},"score":218725,"extra":""},{"author":{"id":1324986,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/sj5FNib6wGL6lZoS9ZlhCyWehRmByToksrJicgJia05iaGEcSp9uthmJKlXuMGn1CUBicfdpj4XoMsgyJibquAGwIqIw/132","nickname":"艾瑞克","note":"","ucode":"3886599F102FE7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1691109,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJIocn8OMjfSGqyeSJEV3ID2rquLR0S6xo0ibdNYQgzicib6L6VlqWjhgxOqD2iaicX1KhbWXWCsmBTskA/132","nickname":"虚竹","note":"","ucode":"8D8C96C793724E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":219194,"discussion_content":"我也这么觉得，这么定义订单号，同一个用户下的订单号，未必会分到同一分片吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585742985,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":218725,"ip_address":""},"score":219194,"extra":""},{"author":{"id":1293835,"avatar":"https://static001.geekbang.org/account/avatar/00/13/be/0b/0a381067.jpg","nickname":"zz","note":"","ucode":"EFE0C8D60D0CAC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1691109,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJIocn8OMjfSGqyeSJEV3ID2rquLR0S6xo0ibdNYQgzicib6L6VlqWjhgxOqD2iaicX1KhbWXWCsmBTskA/132","nickname":"虚竹","note":"","ucode":"8D8C96C793724E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293475,"discussion_content":"我觉得可能是只拿这四位进行hash运算，假如hash算法是取模运算，取10的余数，哈希结果是0-9。这就有了10个分片","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1595554579,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":218725,"ip_address":""},"score":293475,"extra":""}]},{"author":{"id":1119098,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er4KLhnBRsrMVlFDUBl4icRB4D0sg9X6H5zWUuXrTW0sax2z2nBlUMEXiawfenEvDe4dtNQric5KppJQ/132","nickname":"futurexiong","note":"","ucode":"160D824AE27CFF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":231233,"discussion_content":"文中的例子说了，订单表分24片的话，用户ID取余24来得知该用户订单落在哪个分表里，也就是该用户订单会全部落在这个分表里","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1586789557,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":233237,"discussion_content":"没想通","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586914009,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":201142,"user_name":"gfgf","can_delete":false,"product_type":"c1","uid":1916764,"ip_address":"","ucode":"007190E2B44314","user_header":"https://static001.geekbang.org/account/avatar/00/1d/3f/5c/ed0f0836.jpg","comment_is_top":false,"comment_ctime":1585722635,"is_pvip":false,"replies":[{"id":"75367","content":"订单号是怎么构成的，应该算是商业秘密了。因为如果你知道它的规律，是有可能从中获得一些信息的。所以各家都不会公布自己的订单号是如何构成的。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1585792883,"ip_address":"","comment_id":201142,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18765591819","product_id":100046801,"comment_content":"用户id和订单id关联这块，订单中取用户id的几位来做分区分表的依据，这个做法是否会造成数据量的不均衡；<br>看到个人淘宝订单是嵌入了用户id的后几位，但是京东订单没有发现规律，这块能否请老师以淘宝和京东订单为例，做一个更深入的介绍","like_count":4,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490253,"discussion_content":"订单号是怎么构成的，应该算是商业秘密了。因为如果你知道它的规律，是有可能从中获得一些信息的。所以各家都不会公布自己的订单号是如何构成的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585792883,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229291,"user_name":"Cha","can_delete":false,"product_type":"c1","uid":1080389,"ip_address":"","ucode":"BE28533F67F0F5","user_header":"https://static001.geekbang.org/account/avatar/00/10/7c/45/416fe519.jpg","comment_is_top":false,"comment_ctime":1592960072,"is_pvip":false,"replies":[{"id":"84987","content":"因为取模的时候更快一些，如果是业务类的系统，这点儿差别可以忽略不计了。<br><br>如果你是做存储系统或者中间件类产品，还是需要考虑这个因素的。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1593312796,"ip_address":"","comment_id":229291,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10182894664","product_id":100046801,"comment_content":"老师，请教一个问题。我看网上分库分表，有的说要2的N次方，没想明白是怎么个缘故。","like_count":2,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499424,"discussion_content":"因为取模的时候更快一些，如果是业务类的系统，这点儿差别可以忽略不计了。\n\n如果你是做存储系统或者中间件类产品，还是需要考虑这个因素的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593312796,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1691245,"avatar":"https://static001.geekbang.org/account/avatar/00/19/ce/6d/cf51e81b.jpg","nickname":"Moving","note":"","ucode":"A107DBD829ABBD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287833,"discussion_content":"取模的时候可以用bit位运算","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1593565833,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2032840,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/04/c8/3c7af100.jpg","nickname":"Javatar","note":"","ucode":"E216645CDF632C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331573,"discussion_content":"方便做一致性哈希吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606903935,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215702,"user_name":"隰有荷","can_delete":false,"product_type":"c1","uid":1357944,"ip_address":"","ucode":"2BE9A32AB28963","user_header":"https://static001.geekbang.org/account/avatar/00/14/b8/78/2828195b.jpg","comment_is_top":false,"comment_ctime":1589080079,"is_pvip":false,"replies":[{"id":"79945","content":"某些场景下是可以的，具体还要根据业务情况来权衡。mycat的优点是对业务透明，不用修改代码，缺点是加长了调用链路，增加了故障点、降低了性能。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1589171352,"ip_address":"","comment_id":215702,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10179014671","product_id":100046801,"comment_content":"是否可以采用mycat中间件的方式去实现分表，让代码使用过程中不感知分表带来的变化呢？","like_count":2,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494533,"discussion_content":"某些场景下是可以的，具体还要根据业务情况来权衡。mycat的优点是对业务透明，不用修改代码，缺点是加长了调用链路，增加了故障点、降低了性能。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589171352,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287625,"user_name":"夜辉","can_delete":false,"product_type":"c1","uid":1886331,"ip_address":"","ucode":"9421385F51FF9E","user_header":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","comment_is_top":false,"comment_ctime":1618054137,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5913021433","product_id":100046801,"comment_content":"老师讲了数据分片<br>并没有讲集群方案，例如MySQL Cluster<br>能详细介绍下嘛？","like_count":1},{"had_liked":false,"id":238669,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1596254568,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5891221864","product_id":100046801,"comment_content":"老师的题目，正中下怀啊。","like_count":1},{"had_liked":false,"id":206121,"user_name":"StopLiu","can_delete":false,"product_type":"c1","uid":1007344,"ip_address":"","ucode":"1553FA4E3A285D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/f0/fab69114.jpg","comment_is_top":false,"comment_ctime":1586789633,"is_pvip":false,"replies":[{"id":"77009","content":"这种情况使用MySQL没有太好的解决方案，你可以看一下后面的19、22二节课，尝试使用其它的数据库来解决而你的问题。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1586829694,"ip_address":"","comment_id":206121,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5881756929","product_id":100046801,"comment_content":"按时间范围分片后，例如每月一个分片，但如果用户查询时想要3月15-4月15这种，就会跨月查询，这种怎么解决？","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491680,"discussion_content":"这种情况使用MySQL没有太好的解决方案，你可以看一下后面的19、22二节课，尝试使用其它的数据库来解决而你的问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586829694,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":200596,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1585622198,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5880589494","product_id":100046801,"comment_content":"分库分表使用的场景是不一样的，分表是因为数据量比较大查询较慢才进行的，分库是因为单库的性能无法满足要求才进行的","like_count":1},{"had_liked":false,"id":358427,"user_name":"Ronaldo","can_delete":false,"product_type":"c1","uid":1562787,"ip_address":"广东","ucode":"825F3FF118088E","user_header":"https://static001.geekbang.org/account/avatar/00/17/d8/a3/76396d94.jpg","comment_is_top":false,"comment_ctime":1664291342,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1664291342","product_id":100046801,"comment_content":"查表法中的映射表，怎么分片呢","like_count":0},{"had_liked":false,"id":346938,"user_name":"多学多看多记","can_delete":false,"product_type":"c1","uid":2276155,"ip_address":"","ucode":"0670C833007510","user_header":"https://static001.geekbang.org/account/avatar/00/22/bb/3b/6e020a32.jpg","comment_is_top":false,"comment_ctime":1653548637,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653548637","product_id":100046801,"comment_content":"解决高并发问题，mysql集群多加几个从库是不是就行了，有必要分库吗","like_count":0},{"had_liked":false,"id":343037,"user_name":"尔冬橙","can_delete":false,"product_type":"c1","uid":1225224,"ip_address":"","ucode":"0B013A49BC18DA","user_header":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","comment_is_top":false,"comment_ctime":1650605459,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650605459","product_id":100046801,"comment_content":"如果选择数据归档，要定时做迁移工作，会不会很麻烦","like_count":0},{"had_liked":false,"id":341691,"user_name":"Geek_154f14","can_delete":false,"product_type":"c1","uid":2181453,"ip_address":"","ucode":"F01FF696364E73","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJAnje12Sebss1BwgLF48Wk57zaMtMSWdStbC6R7l0ssCev0ddLPYd2QqGXBmpfNL89NtahYKVkVg/132","comment_is_top":false,"comment_ctime":1649771454,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1649771454","product_id":100046801,"comment_content":"时间范围分12个表，那查询一年的数据，得查表12次吧","like_count":0},{"had_liked":false,"id":340640,"user_name":"剑八","can_delete":false,"product_type":"c1","uid":1297630,"ip_address":"","ucode":"0A09F41DB8A4E7","user_header":"https://static001.geekbang.org/account/avatar/00/13/cc/de/e28c01e1.jpg","comment_is_top":false,"comment_ctime":1648985171,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1648985171","product_id":100046801,"comment_content":"分库分表，比如采用商户维度做分区，此时数据倾斜怎么处理","like_count":0},{"had_liked":false,"id":338613,"user_name":"Xiao8","can_delete":false,"product_type":"c1","uid":1905020,"ip_address":"","ucode":"37977F442C3CF9","user_header":"https://static001.geekbang.org/account/avatar/00/1d/11/7c/f8c8d99e.jpg","comment_is_top":false,"comment_ctime":1647595341,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647595341","product_id":100046801,"comment_content":"大佬好，想问下，关于海量小文件的存储，从浏览器到应用的解决方案，同时想问问：从应用到底层的金建议方案：比如：Ceph。是否有相关资料链接呀？","like_count":0},{"had_liked":false,"id":336285,"user_name":"千锤百炼领悟之极限","can_delete":false,"product_type":"c1","uid":1744257,"ip_address":"","ucode":"224B5CF2101716","user_header":"https://static001.geekbang.org/account/avatar/00/1a/9d/81/d748b7eb.jpg","comment_is_top":false,"comment_ctime":1646049959,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646049959","product_id":100046801,"comment_content":"数据量大就分表，并发高就分库。<br><br><br>范围分片对范围查询友好，但是会有热点表问题，不适合并发高的场景。<br><br>hash分片可以均匀分配数据，没有热点表的问题，适合并发高的场景，但是对范围查询不友好。<br><br>查表法需要二次查询（映射表，数据表），可以用缓存提升性能。但是映射表不要成为热点表，否则会有性能问题。","like_count":0},{"had_liked":false,"id":329090,"user_name":"建强","can_delete":false,"product_type":"c1","uid":1397126,"ip_address":"","ucode":"62B03D0E0C64EC","user_header":"https://static001.geekbang.org/account/avatar/00/15/51/86/b5fd8dd8.jpg","comment_is_top":false,"comment_ctime":1641113120,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1641113120","product_id":100046801,"comment_content":"思考题，和订单有外键关联的表也可以采用查表法来处理，单独搞一张表，里面存储外键ID和对应的分片信息，这样查询时，有外键的表在关联订单表时，需要多关联这张中间表。","like_count":0},{"had_liked":false,"id":293982,"user_name":"2022复杂心情","can_delete":false,"product_type":"c1","uid":1303141,"ip_address":"","ucode":"6600CF6B91F787","user_header":"","comment_is_top":false,"comment_ctime":1621667599,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621667599","product_id":100046801,"comment_content":"老师，分库分表提升了数据库性能，但是对于后台人员查询数据，多条件查询订单，用户数据，而且要进行分页查询，分成多个表或多个库，这种如何解决","like_count":0},{"had_liked":false,"id":285895,"user_name":"Grocker","can_delete":false,"product_type":"c1","uid":2003618,"ip_address":"","ucode":"39A324CDDCE918","user_header":"","comment_is_top":false,"comment_ctime":1617067109,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1617067109","product_id":100046801,"comment_content":"自己写路由算法手动分表和MySQL自带的partition分表，前者性能好很多吗？","like_count":0,"discussions":[{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366373,"discussion_content":"partition分表记录的分表的数据而已，算法都可以一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618044011,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":274360,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1610978830,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610978830","product_id":100046801,"comment_content":"数据量大，就分表；并发高，就分库。<br><br>可是现在单库就在1.5T（目前月增250G）的数据了，并发不高。这种场景适合分库吧。<br>按现在的增长规划未来3年需要分库   0.25T*12*3=9T   除以1T就等于分库数量为9个吧。<br><br>但考虑到业务增长，三年内用户得翻到10倍。强行分库个数得40个左右了。这样还适合用MySQL？","like_count":0},{"had_liked":false,"id":265457,"user_name":"Javatar","can_delete":false,"product_type":"c1","uid":2032840,"ip_address":"","ucode":"E216645CDF632C","user_header":"https://static001.geekbang.org/account/avatar/00/1f/04/c8/3c7af100.jpg","comment_is_top":false,"comment_ctime":1606902739,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1606902739","product_id":100046801,"comment_content":"老师对于查表法，有个疑问：<br>比如订单数据，按照用户id分表，那就需要在这个配置表里配置全部的用户id，每一个id都要指定是哪个分片。这样一来，那这张配置表岂不是会变得很大？比如有几千万甚至亿级别的用户。","like_count":0,"discussions":[{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366374,"discussion_content":"记录逻辑分片到物理分片的映射关系","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1618044104,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":248992,"user_name":"djfhchdh","can_delete":false,"product_type":"c1","uid":1484184,"ip_address":"","ucode":"E71D75328CE398","user_header":"https://static001.geekbang.org/account/avatar/00/16/a5/98/a65ff31a.jpg","comment_is_top":false,"comment_ctime":1600395845,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600395845","product_id":100046801,"comment_content":"那些和订单有外键关联的表，最好也和相应的订单分片到相同的库","like_count":0},{"had_liked":false,"id":248921,"user_name":"Tulane","can_delete":false,"product_type":"c1","uid":1242467,"ip_address":"","ucode":"E1F5108B9E738F","user_header":"https://static001.geekbang.org/account/avatar/00/12/f5/63/53639bb7.jpg","comment_is_top":false,"comment_ctime":1600358633,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600358633","product_id":100046801,"comment_content":"李玥老师, 查表法的一个缺点是二次查询, 但可以用缓存弥补所以不是问题.<br>另一个缺点是映射表数据过大, 自身成为瓶颈. 这种可不可以使用多个映射表来弥补.<br><br>我的想法是:<br>创建100个映射表, 其实就是规定了100个槽位, key通过hash取模, 进来匹配这100个槽并找到所属映射表, 映射表内存储真实 key 与分片关联.<br>这样映射表的存储极限就比只有一张表时, 增大100倍, 且只需做好缓存就能解决三次路由问题.<br><br>其实就是Redis Cluster的一致性hash方案啦.","like_count":0},{"had_liked":false,"id":222638,"user_name":"Mr.wang","can_delete":false,"product_type":"c1","uid":1224805,"ip_address":"","ucode":"86F341A5316BBC","user_header":"https://static001.geekbang.org/account/avatar/00/12/b0/65/90387745.jpg","comment_is_top":false,"comment_ctime":1590854099,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590854099","product_id":100046801,"comment_content":"李老师你好，我想请教一个问题，有一个数据量比较大的表，由于业务的需要，需要在表里面建一条普通索引，这张表的日并发量在三四百万左右，请问下李老师除了在业务量小的时候执行，还要其他比较好的建议去加这个索引吗？","like_count":0},{"had_liked":false,"id":222595,"user_name":"lesserror","can_delete":false,"product_type":"c1","uid":1351076,"ip_address":"","ucode":"25A54D1165FCF6","user_header":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","comment_is_top":false,"comment_ctime":1590845993,"is_pvip":false,"replies":[{"id":"82356","content":"这里的表述确实应该再改进一下，应该是让“每次”查询尽量落在一个分片上，而不是让“所有”查询都落在同一个分片上。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1591150333,"ip_address":"","comment_id":222595,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1590845993","product_id":100046801,"comment_content":"老师，您说的这句话：“选择 Sharding Key 的时候，一定要能兼容业务最常用的查询条件，让查询尽量落在一个分片中。”，查询都落在一个分片中了，那不是访问压力更大了嘛？","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496853,"discussion_content":"这里的表述确实应该再改进一下，应该是让“每次”查询尽量落在一个分片上，而不是让“所有”查询都落在同一个分片上。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591150333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":221358,"user_name":"hello","can_delete":false,"product_type":"c1","uid":1464199,"ip_address":"","ucode":"854500026E2187","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKhuGLVRYZibOTfMumk53Wn8Q0Rkg0o6DzTicbibCq42lWQoZ8lFeQvicaXuZa7dYsr9URMrtpXMVDDww/132","comment_is_top":false,"comment_ctime":1590481258,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1590481258","product_id":100046801,"comment_content":"老师，您好！我最近面试时遇到过一个面试题：假如现在有个用户体量为14亿，有ID、手机号、身份证号、email等字段，现在需要支持手机号、身份证、email三种形式登录，在MySQL中，该功能如何设计实现？我当时给的方案是：用户表中使用ID为sharding Key（用户表%140，每张表1000W），然后建立一张ID与手机号的映射表并选择手机号为sharding key，满足手机号登录;建立一张ID与身份证号的映射表并选择身份证号为sharding key，满足身份证号登录;建立一张ID与email的映射表并选择email为sharding key，满足email登录。面试后，我总觉得这个方案不够好，也没想出更好的解决方案，想请教下，老师有什么好的设计方案没？","like_count":0,"discussions":[{"author":{"id":2176180,"avatar":"","nickname":"Geek_5aae47","note":"","ucode":"2E6D974EE836E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390534,"discussion_content":"你说的这种类似于索引法，建立一个索引表存储UID与手机号，身份证号，email的映射，查询的话先从索引表定位UID，然后根据UID去定位分片表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629880755,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366377,"discussion_content":"因为ID是相对稳定不变的\n存储手机号对ID的映射，身份证对ID的映射，email对ID的映射\n根据ID，验证登录信息\n14亿数据，因此这些表都要分表\n实际中为加快查询，可以使用redis或者es等nosql数据库\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618044707,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1666025,"avatar":"https://static001.geekbang.org/account/avatar/00/19/6b/e9/7620ae7e.jpg","nickname":"雨落～紫竹","note":"","ucode":"33CED2F34E708F","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311480,"discussion_content":"把这3个信息 扔到es吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602353254,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":217219,"user_name":"monalisali","can_delete":false,"product_type":"c1","uid":1299521,"ip_address":"","ucode":"1FDEC87C133E28","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJbh5FQajwKhNlMrkoSklPpOXBtEYXCLvuWibhfWIS9QxHWDqzhEHJzEdmtUiaiaqFjfpsr2LwgNGpbQ/132","comment_is_top":false,"comment_ctime":1589442508,"is_pvip":false,"replies":[{"id":"80328","content":"还是要看GUID使用的是什么生成算法。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1589461537,"ip_address":"","comment_id":217219,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1589442508","product_id":100046801,"comment_content":"如果用户ID使用的是guid的话，是否就不能用哈希分片算法了呢？","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495082,"discussion_content":"还是要看GUID使用的是什么生成算法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589461537,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204401,"user_name":"Yezhiwei","can_delete":false,"product_type":"c1","uid":1005157,"ip_address":"","ucode":"31E8E33688CBEC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/65/22a37a8e.jpg","comment_is_top":false,"comment_ctime":1586396316,"is_pvip":false,"replies":[{"id":"76480","content":"TiDB也是属于New SQL范畴的数据库，我会在后面第23节课中说一下New SQL。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1586426865,"ip_address":"","comment_id":204401,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586396316","product_id":100046801,"comment_content":"TiDB是否可以代替 MySQL 解决大数据量的问题，同时又能满足金融级别的事物问题哈？","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491169,"discussion_content":"TiDB也是属于New SQL范畴的数据库，我会在后面第23节课中说一下New SQL。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586426865,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":201857,"user_name":"发条橙子 。","can_delete":false,"product_type":"c1","uid":1259218,"ip_address":"","ucode":"ED076F4534FFED","user_header":"https://static001.geekbang.org/account/avatar/00/13/36/d2/c7357723.jpg","comment_is_top":false,"comment_ctime":1585846048,"is_pvip":false,"replies":[{"id":"75538","content":"这个结果是一样的啊。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1585908673,"ip_address":"","comment_id":201857,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585846048","product_id":100046801,"comment_content":"老师 是直接用完整的用户id做哈希分片 还是那四位做哈希分片","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490439,"discussion_content":"这个结果是一样的啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585908673,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":201585,"user_name":"电光火石","can_delete":false,"product_type":"c1","uid":1013160,"ip_address":"","ucode":"3AD33BB4AA940F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/a8/dfe4cade.jpg","comment_is_top":false,"comment_ctime":1585807901,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585807901","product_id":100046801,"comment_content":"老师，请教一下：18 位订单号中，第 10-14 位是用户 ID 的后四位，这样按订单 ID 查询的时候，就可以根据订单 ID 中的用户 ID 找到分片。<br>这里实际上是根据是用户 ID 的后四位为base做分片是吗？这样按照用户id维度和订单维度都可以先定位分片再进行查询。<br><br>把订单表拆分之后，那些和订单有外键关联的表，该怎么处理？<br>插入的时候，是否根据订单的分区规则，将有外键关联的表尽量放在一个分片里面进行处理。","like_count":0},{"had_liked":false,"id":201091,"user_name":"靠人品去赢","can_delete":false,"product_type":"c1","uid":1301286,"ip_address":"","ucode":"7A20F9EBE847E1","user_header":"https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg","comment_is_top":false,"comment_ctime":1585713971,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585713971","product_id":100046801,"comment_content":"我觉得是外联的表数据量是不是也很大，如果外联的表并发小，数量少，其实不必要管他更不用也对他进行分库分表，因为从维护角度讲，能不拆就不拆，毕竟这是最后一步。","like_count":0}]}