{"id":69214,"title":"39 | 谈谈Service与Ingress","content":"<p>你好，我是张磊。今天我和你分享的主题是：谈谈Service与Ingress。</p><p>在上一篇文章中，我为你详细讲解了将Service暴露给外界的三种方法。其中有一个叫作LoadBalancer类型的Service，它会为你在Cloud Provider（比如：Google Cloud或者OpenStack）里创建一个与该Service对应的负载均衡服务。</p><p>但是，相信你也应该能感受到，由于每个 Service 都要有一个负载均衡服务，所以这个做法实际上既浪费成本又高。作为用户，我其实更希望看到Kubernetes为我内置一个全局的负载均衡器。然后，通过我访问的URL，把请求转发给不同的后端Service。</p><p><strong>这种全局的、为了代理不同后端Service而设置的负载均衡服务，就是Kubernetes里的Ingress服务。</strong></p><p>所以，Ingress的功能其实很容易理解：<strong>所谓Ingress，就是Service的“Service”。</strong></p><p>举个例子，假如我现在有这样一个站点：<code>https://cafe.example.com</code>。其中，<code>https://cafe.example.com/coffee</code>，对应的是“咖啡点餐系统”。而，<code>https://cafe.example.com/tea</code>，对应的则是“茶水点餐系统”。这两个系统，分别由名叫coffee和tea这样两个Deployment来提供服务。</p><!-- [[[read_end]]] --><p>那么现在，<span class=\"orange\">我如何能使用Kubernetes的Ingress来创建一个统一的负载均衡器，从而实现当用户访问不同的域名时，能够访问到不同的Deployment呢？</span></p><p>上述功能，在Kubernetes里就需要通过Ingress对象来描述，如下所示：</p><pre><code>apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: cafe-ingress\nspec:\n  tls:\n  - hosts:\n    - cafe.example.com\n    secretName: cafe-secret\n  rules:\n  - host: cafe.example.com\n    http:\n      paths:\n      - path: /tea\n        backend:\n          serviceName: tea-svc\n          servicePort: 80\n      - path: /coffee\n        backend:\n          serviceName: coffee-svc\n          servicePort: 80\n</code></pre><p>在上面这个名叫cafe-ingress.yaml文件中，最值得我们关注的，是rules字段。在Kubernetes里，这个字段叫作：<strong>IngressRule</strong>。</p><p>IngressRule的Key，就叫做：host。它必须是一个标准的域名格式（Fully Qualified Domain Name）的字符串，而不能是IP地址。</p><blockquote>\n<p>备注：Fully Qualified Domain Name的具体格式，可以参考<a href=\"https://tools.ietf.org/html/rfc3986\">RFC 3986</a>标准。</p>\n</blockquote><p>而host字段定义的值，就是这个Ingress的入口。这也就意味着，当用户访问cafe.example.com的时候，实际上访问到的是这个Ingress对象。这样，Kubernetes就能使用IngressRule来对你的请求进行下一步转发。</p><p>而接下来IngressRule规则的定义，则依赖于path字段。你可以简单地理解为，这里的每一个path都对应一个后端Service。所以在我们的例子里，我定义了两个path，它们分别对应coffee和tea这两个Deployment的Service（即：coffee-svc和tea-svc）。</p><p><strong>通过上面的讲解，不难看到，所谓Ingress对象，其实就是Kubernetes项目对“反向代理”的一种抽象。</strong></p><p>一个Ingress对象的主要内容，实际上就是一个“反向代理”服务（比如：Nginx）的配置文件的描述。而这个代理服务对应的转发规则，就是IngressRule。</p><p>这就是为什么在每条IngressRule里，需要有一个host字段来作为这条IngressRule的入口，然后还需要有一系列path字段来声明具体的转发策略。这其实跟Nginx、HAproxy等项目的配置文件的写法是一致的。</p><p>而有了Ingress这样一个统一的抽象，Kubernetes的用户就无需关心Ingress的具体细节了。</p><p>在实际的使用中，你只需要从社区里选择一个具体的Ingress Controller，把它部署在Kubernetes集群里即可。</p><p>然后，这个Ingress Controller会根据你定义的Ingress对象，提供对应的代理能力。目前，业界常用的各种反向代理项目，比如Nginx、HAProxy、Envoy、Traefik等，都已经为Kubernetes专门维护了对应的Ingress Controller。</p><p>接下来，<span class=\"orange\">我就以最常用的Nginx Ingress Controller为例，在我们前面用kubeadm部署的Bare-metal环境中，和你实践一下Ingress机制的使用过程。</span></p><p>部署Nginx Ingress Controller的方法非常简单，如下所示：</p><pre><code>$ kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/mandatory.yaml\n</code></pre><p>其中，在<a href=\"https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/mandatory.yaml\">mandatory.yaml</a>这个文件里，正是Nginx官方为你维护的Ingress Controller的定义。我们来看一下它的内容：</p><pre><code>kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: nginx-configuration\n  namespace: ingress-nginx\n  labels:\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: nginx-ingress-controller\n  namespace: ingress-nginx\n  labels:\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: ingress-nginx\n      app.kubernetes.io/part-of: ingress-nginx\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/name: ingress-nginx\n        app.kubernetes.io/part-of: ingress-nginx\n      annotations:\n        ...\n    spec:\n      serviceAccountName: nginx-ingress-serviceaccount\n      containers:\n        - name: nginx-ingress-controller\n          image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.20.0\n          args:\n            - /nginx-ingress-controller\n            - --configmap=$(POD_NAMESPACE)/nginx-configuration\n            - --publish-service=$(POD_NAMESPACE)/ingress-nginx\n            - --annotations-prefix=nginx.ingress.kubernetes.io\n          securityContext:\n            capabilities:\n              drop:\n                - ALL\n              add:\n                - NET_BIND_SERVICE\n            # www-data -&gt; 33\n            runAsUser: 33\n          env:\n            - name: POD_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.name\n            - name: POD_NAMESPACE\n            - name: http\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.namespace\n          ports:\n            - name: http\n              containerPort: 80\n            - name: https\n              containerPort: 443\n</code></pre><p>可以看到，在上述YAML文件中，我们定义了一个使用nginx-ingress-controller镜像的Pod。需要注意的是，这个Pod的启动命令需要使用该Pod所在的Namespace作为参数。而这个信息，当然是通过Downward API拿到的，即：Pod的env字段里的定义（env.valueFrom.fieldRef.fieldPath）。</p><p>而这个Pod本身，就是一个监听Ingress对象以及它所代理的后端Service变化的控制器。</p><p>当一个新的Ingress对象由用户创建后，nginx-ingress-controller就会根据Ingress对象里定义的内容，生成一份对应的Nginx配置文件（/etc/nginx/nginx.conf），并使用这个配置文件启动一个 Nginx 服务。</p><p>而一旦Ingress对象被更新，nginx-ingress-controller就会更新这个配置文件。需要注意的是，如果这里只是被代理的 Service 对象被更新，nginx-ingress-controller所管理的 Nginx 服务是不需要重新加载（reload）的。这当然是因为nginx-ingress-controller通过<a href=\"https://github.com/openresty/lua-nginx-module\">Nginx Lua</a>方案实现了Nginx Upstream的动态配置。</p><p>此外，nginx-ingress-controller还允许你通过Kubernetes的ConfigMap对象来对上述 Nginx 配置文件进行定制。这个ConfigMap的名字，需要以参数的方式传递给nginx-ingress-controller。而你在这个 ConfigMap 里添加的字段，将会被合并到最后生成的 Nginx 配置文件当中。</p><p><strong>可以看到，一个Nginx Ingress Controller为你提供的服务，其实是一个可以根据Ingress对象和被代理后端 Service 的变化，来自动进行更新的Nginx负载均衡器。</strong></p><p>当然，为了让用户能够用到这个Nginx，我们就需要创建一个Service来把Nginx Ingress Controller管理的 Nginx 服务暴露出去，如下所示：</p><pre><code>$ kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/provider/baremetal/service-nodeport.yaml\n</code></pre><p>由于我们使用的是Bare-metal环境，所以service-nodeport.yaml文件里的内容，就是一个NodePort类型的Service，如下所示：</p><pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: ingress-nginx\n  namespace: ingress-nginx\n  labels:\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\nspec:\n  type: NodePort\n  ports:\n    - name: http\n      port: 80\n      targetPort: 80\n      protocol: TCP\n    - name: https\n      port: 443\n      targetPort: 443\n      protocol: TCP\n  selector:\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n</code></pre><p>可以看到，这个Service的唯一工作，就是将所有携带ingress-nginx标签的Pod的80和433端口暴露出去。</p><blockquote>\n<p>而如果你是公有云上的环境，你需要创建的就是LoadBalancer类型的Service了。</p>\n</blockquote><p><strong>上述操作完成后，你一定要记录下这个Service的访问入口，即：宿主机的地址和NodePort的端口</strong>，如下所示：</p><pre><code>$ kubectl get svc -n ingress-nginx\nNAME            TYPE       CLUSTER-IP     EXTERNAL-IP   PORT(S)                      AGE\ningress-nginx   NodePort   10.105.72.96   &lt;none&gt;        80:30044/TCP,443:31453/TCP   3h\n</code></pre><p>为了后面方便使用，我会把上述访问入口设置为环境变量：</p><pre><code>$ IC_IP=10.168.0.2 # 任意一台宿主机的地址\n$ IC_HTTPS_PORT=31453 # NodePort端口\n</code></pre><p><span class=\"orange\">在Ingress Controller和它所需要的Service部署完成后，我们就可以使用它了。</span></p><blockquote>\n<p>备注：这个“咖啡厅”Ingress的所有示例文件，都在<a href=\"https://github.com/resouer/kubernetes-ingress/tree/master/examples/complete-example\">这里</a>。</p>\n</blockquote><p>首先，我们要在集群里部署我们的应用Pod和它们对应的Service，如下所示：</p><pre><code>$ kubectl create -f cafe.yaml\n</code></pre><p>然后，我们需要创建Ingress所需的SSL证书（tls.crt）和密钥（tls.key），这些信息都是通过Secret对象定义好的，如下所示：</p><pre><code>$ kubectl create -f cafe-secret.yaml\n</code></pre><p>这一步完成后，我们就可以创建在本篇文章一开始定义的Ingress对象了，如下所示：</p><pre><code>$ kubectl create -f cafe-ingress.yaml\n</code></pre><p>这时候，我们就可以查看一下这个Ingress对象的信息，如下所示：</p><pre><code>$ kubectl get ingress\nNAME           HOSTS              ADDRESS   PORTS     AGE\ncafe-ingress   cafe.example.com             80, 443   2h\n\n$ kubectl describe ingress cafe-ingress\nName:             cafe-ingress\nNamespace:        default\nAddress:          \nDefault backend:  default-http-backend:80 (&lt;none&gt;)\nTLS:\n  cafe-secret terminates cafe.example.com\nRules:\n  Host              Path  Backends\n  ----              ----  --------\n  cafe.example.com  \n                    /tea      tea-svc:80 (&lt;none&gt;)\n                    /coffee   coffee-svc:80 (&lt;none&gt;)\nAnnotations:\nEvents:\n  Type    Reason  Age   From                      Message\n  ----    ------  ----  ----                      -------\n  Normal  CREATE  4m    nginx-ingress-controller  Ingress default/cafe-ingress\n</code></pre><p>可以看到，这个Ingress对象最核心的部分，正是Rules字段。其中，我们定义的Host是<code>cafe.example.com</code>，它有两条转发规则（Path），分别转发给tea-svc和coffee-svc。</p><blockquote>\n<p>当然，在Ingress的YAML文件里，你还可以定义多个Host，比如<code>restaurant.example.com</code>、<code>movie.example.com</code>等等，来为更多的域名提供负载均衡服务。</p>\n</blockquote><p>接下来，我们就可以通过访问这个Ingress的地址和端口，访问到我们前面部署的应用了，比如，当我们访问<code>https://cafe.example.com:443/coffee</code>时，应该是coffee这个Deployment负责响应我的请求。我们可以来尝试一下：</p><pre><code>$ curl --resolve cafe.example.com:$IC_HTTPS_PORT:$IC_IP https://cafe.example.com:$IC_HTTPS_PORT/coffee --insecureServer address: 10.244.1.56:80\nServer name: coffee-7dbb5795f6-vglbv\nDate: 03/Nov/2018:03:55:32 +0000\nURI: /coffee\nRequest ID: e487e672673195c573147134167cf898\n</code></pre><p>我们可以看到，访问这个URL 得到的返回信息是：Server name: coffee-7dbb5795f6-vglbv。这正是 coffee 这个 Deployment 的名字。</p><p>而当我访问<code>https://cafe.example.com:433/tea</code>的时候，则应该是tea这个Deployment负责响应我的请求（Server name: tea-7d57856c44-lwbnp），如下所示：</p><pre><code>$ curl --resolve cafe.example.com:$IC_HTTPS_PORT:$IC_IP https://cafe.example.com:$IC_HTTPS_PORT/tea --insecure\nServer address: 10.244.1.58:80\nServer name: tea-7d57856c44-lwbnp\nDate: 03/Nov/2018:03:55:52 +0000\nURI: /tea\nRequest ID: 32191f7ea07cb6bb44a1f43b8299415c\n</code></pre><p>可以看到，Nginx Ingress Controller为我们创建的Nginx负载均衡器，已经成功地将请求转发给了对应的后端Service。</p><p>以上，就是Kubernetes里Ingress的设计思想和使用方法了。</p><p>不过，你可能会有一个疑问，<strong>如果我的请求没有匹配到任何一条IngressRule，那么会发生什么呢？</strong></p><p>首先，既然Nginx Ingress Controller是用Nginx实现的，那么它当然会为你返回一个 Nginx 的404页面。</p><p>不过，Ingress Controller也允许你通过Pod启动命令里的–default-backend-service参数，设置一条默认规则，比如：–default-backend-service=nginx-default-backend。</p><p>这样，任何匹配失败的请求，就都会被转发到这个名叫nginx-default-backend的Service。所以，你就可以通过部署一个专门的Pod，来为用户返回自定义的404页面了。</p><h2>总结</h2><p>在这篇文章里，我为你详细讲解了Ingress这个概念在Kubernetes里到底是怎么一回事儿。正如我在文章里所描述的，Ingress实际上就是Kubernetes对“反向代理”的抽象。</p><p>目前，Ingress只能工作在七层，而Service只能工作在四层。所以当你想要在Kubernetes里为应用进行TLS配置等HTTP相关的操作时，都必须通过Ingress来进行。</p><p>当然，正如同很多负载均衡项目可以同时提供七层和四层代理一样，将来Ingress的进化中，也会加入四层代理的能力。这样，一个比较完善的“反向代理”机制就比较成熟了。</p><p>而Kubernetes提出Ingress概念的原因其实也非常容易理解，有了Ingress这个抽象，用户就可以根据自己的需求来自由选择Ingress Controller。比如，如果你的应用对代理服务的中断非常敏感，那么你就应该考虑选择类似于Traefik这样支持“热加载”的Ingress Controller实现。</p><p>更重要的是，一旦你对社区里现有的Ingress方案感到不满意，或者你已经有了自己的负载均衡方案时，你只需要做很少的编程工作，就可以实现一个自己的Ingress Controller。</p><p>在实际的生产环境中，Ingress带来的灵活度和自由度，对于使用容器的用户来说，其实是非常有意义的。要知道，当年在Cloud Foundry项目里，不知道有多少人为了给Gorouter组件配置一个TLS而伤透了脑筋。</p><h2>思考题</h2><p>如果我的需求是，当访问<code>www.mysite.com</code>和 <code>forums.mysite.com</code>时，分别访问到不同的Service（比如：site-svc和forums-svc）。那么，这个Ingress该如何定义呢？请你描述出YAML文件中的rules字段。</p><p>感谢你的收听，欢迎你给我留言，也欢迎分享给更多的朋友一起阅读。</p><p></p>","neighbors":{"left":{"article_title":"38 | 从外界连通Service与Service调试“三板斧”","id":68964},"right":{"article_title":"40 | Kubernetes的资源模型与资源管理","id":69678}},"comments":[{"had_liked":false,"id":41478,"user_name":"虎虎❤️","can_delete":false,"product_type":"c1","uid":1086535,"ip_address":"","ucode":"157F261E80291A","user_header":"https://static001.geekbang.org/account/avatar/00/10/94/47/75875257.jpg","comment_is_top":false,"comment_ctime":1542790169,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"469694225433","product_id":100015201,"comment_content":"思考题：<br>spec:<br>  rules:<br>  - host: www.mysite.com<br>    http:<br>      paths:<br>      - backend:<br>          serviceName: site-svc<br>          servicePort: 80<br>  - host: forums.mysite.com<br>    http:<br>      paths:<br>      - backend:<br>          serviceName: forums-svc<br>          servicePort: 80","like_count":110},{"had_liked":false,"id":41519,"user_name":"swordholder","can_delete":false,"product_type":"c1","uid":1002569,"ip_address":"","ucode":"3D1361126AD3CB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4c/49/d21c134f.jpg","comment_is_top":false,"comment_ctime":1542798995,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"194816327315","product_id":100015201,"comment_content":"总结一下，从集群外访问到服务，要经过3次代理：<br><br>访问请求到达任一宿主机，会根据NodePort生成的iptables规则，跳转到nginx反向代理，<br>请求再按照nginx的配置跳转到后台service，nginx的配置是根据Ingress对象生成的，<br>后台service也是iptables规则，最后跳转到真正提供服务的POD。<br><br>另外，如果想查看nginx-ingress-controller生成的nginx配置，可以这么做：<br><br>$ kubectl get pods -n ingress-nginx <br>NAME                                        READY   STATUS    RESTARTS   AGE<br>nginx-ingress-controller-85d94747dd-lsggm   1&#47;1     Running   0          3h45m<br><br>$ kubectl exec nginx-ingress-controller-85d94747dd-lsggm -it --namespace=&quot;ingress-nginx&quot; -- bash<br><br>$ cat &#47;etc&#47;nginx&#47;nginx.conf<br>...<br>$ exit","like_count":45,"discussions":[{"author":{"id":1120428,"avatar":"https://static001.geekbang.org/account/avatar/00/11/18/ac/4d68ba46.jpg","nickname":"金时","note":"","ucode":"3491B2367A7238","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378520,"discussion_content":"nginx 会代理到service,  不是代理到pod ip 上吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623254231,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1261493,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3f/b5/5fe77e16.jpg","nickname":"不经意间","note":"","ucode":"C39D98697ACB8B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1120428,"avatar":"https://static001.geekbang.org/account/avatar/00/11/18/ac/4d68ba46.jpg","nickname":"金时","note":"","ucode":"3491B2367A7238","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":408622,"discussion_content":"ingress是service的service","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635296281,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":378520,"ip_address":""},"score":408622,"extra":""},{"author":{"id":1707741,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/vM2NmFZQYmb4kkk8Cba1fGP4bhK9diaeXb2LXFWXJWfOPuibK3aib24qujweqciaxt43btqicSz9gDDlJkUQ12RDfJQ/132","nickname":"Geek_955506","note":"","ucode":"D07C5B9A1ECEA1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1261493,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3f/b5/5fe77e16.jpg","nickname":"不经意间","note":"","ucode":"C39D98697ACB8B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574787,"discussion_content":"NGINX controller 根据配置的 ingress 资源，拿到 svc 名称，通过 informer 监听 endpoint，动态刷新 NGINX 的 upstream。请求进入 NGINX pod 后，直接就找到上游 pod 了，不会再走上游被代理服务的 svc了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1654338106,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":408622,"ip_address":""},"score":574787,"extra":""}]},{"author":{"id":1218501,"avatar":"https://static001.geekbang.org/account/avatar/00/12/97/c5/84491beb.jpg","nickname":"罗峰","note":"","ucode":"5F3D6AF8F28322","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376099,"discussion_content":"Ingress controller原来是默默创建了一个nginx，那我可以看到这个nginx吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621954806,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1261493,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3f/b5/5fe77e16.jpg","nickname":"不经意间","note":"","ucode":"C39D98697ACB8B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1218501,"avatar":"https://static001.geekbang.org/account/avatar/00/12/97/c5/84491beb.jpg","nickname":"罗峰","note":"","ucode":"5F3D6AF8F28322","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":408624,"discussion_content":"可以看到，一个 Nginx Ingress Controller 为你提供的服务，其实是一个可以根据 Ingress 对象和被代理后端 Service 的变化，来自动进行更新的 Nginx 负载均衡器。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635296395,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":376099,"ip_address":""},"score":408624,"extra":""}]}]},{"had_liked":false,"id":102879,"user_name":"Dem","can_delete":false,"product_type":"c1","uid":1032595,"ip_address":"","ucode":"C09FF65D904A75","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c1/93/e8bfb26e.jpg","comment_is_top":false,"comment_ctime":1560319223,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"134704305399","product_id":100015201,"comment_content":"Nginx Ingress Controller的mandatory.yaml地址改掉了。现在的命令：<br>kubectl apply -f https:&#47;&#47;raw.githubusercontent.com&#47;kubernetes&#47;ingress-nginx&#47;master&#47;deploy&#47;static&#47;mandatory.yaml","like_count":31},{"had_liked":false,"id":266129,"user_name":"ch_ort","can_delete":false,"product_type":"c1","uid":1580926,"ip_address":"","ucode":"B79746E687F29E","user_header":"","comment_is_top":false,"comment_ctime":1607178789,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"113276328485","product_id":100015201,"comment_content":"Kubernets中通过Service来实现Pod实例之间的负载均衡和固定VIP的场景。<br><br>Service的工作原理是通过kube-proxy来设置宿主机上的iptables规则来实现的。kube-proxy来观察service的创建，然后通过修改本机的iptables规则，将访问Service VIP的请求转发到真正的Pod上。<br><br>基于iptables规则的Service实现，导致当宿主机上有大量的Pod的时候，成百上千条iptables规则不断刷新占用大量的CPU资源。因此出现了一种新的模式: IPVS，通过Linux的 IPVS模块将大量iptables规则放到了内核态，降低了维护这些规则的代价（部分辅助性的规则无法放到内核态，依旧是iptable形式）。<br><br>Service的DNS记录： &lt;myservice&gt;.&lt;mynamespace&gt;.svc.cluster.local ，当访问这条记录，返回的是Service的VIP或者是所代理Pod的IP地址的集合<br><br>Pod的DNS记录： &lt;pod_hostname&gt;.&lt;subdomain&gt;.&lt;mynamespace&gt;.svc.cluster.local， 注意pod的hostname和subdomain都是在Pod里定义的。<br><br>Service的访问依赖宿主机的kube-proxy生成的iptables规则以及kube-dns生成的DNS记录。外部的宿主机没有kube-proxy和kube-dns应该如何访问对应的Service呢？有以下几种方式：<br><br>NodePort： 比如外部client访问任意一台宿主机的8080端口，就是访问Service所代理Pod的80端口。由接收外部请求的宿主机做转发。<br><br>即：client --&gt; nodeIP:nodePort --&gt; serviceVIP:port --&gt; podIp:targetPort<br><br>LoadBalance：由公有云提供kubernetes服务自带的loadbalancer做负载均衡和外部流量访问的入口<br><br>ExternalName：通过ExternalName或ExternalIp给Service挂在一个公有IP的地址或者域名，当访问这个公有IP地址时，就会转发到Service所代理的Pod服务上<br><br>Ingress是用来给不同Service做负载均衡服务的，也就是Service的Service。<br><br><br>","like_count":26},{"had_liked":false,"id":184024,"user_name":"wang jl","can_delete":false,"product_type":"c1","uid":1328098,"ip_address":"","ucode":"F32E4921EAECC1","user_header":"https://static001.geekbang.org/account/avatar/00/14/43/e2/a1ff289c.jpg","comment_is_top":false,"comment_ctime":1583207136,"is_pvip":false,"replies":[{"id":"72840","content":"是的","user_name":"作者回复","comment_id":184024,"uid":"1218095","ip_address":"","utype":1,"ctime":1584423461,"user_name_real":"Geek_6ef93d"}],"discussion_count":2,"race_medal":0,"score":"57417781984","product_id":100015201,"comment_content":"文章里面这个nginx ingress只是api网关啊，负载均衡体现在哪里？其实还是service做的？","like_count":13,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485857,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584423461,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1307903,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f4/ff/39e8543c.jpg","nickname":"gmthal","note":"","ucode":"DFFF0CB6927FC5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581044,"discussion_content":"不是，它本身就是一个nginx负载均衡","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658470995,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61196,"user_name":"峰哥","can_delete":false,"product_type":"c1","uid":1301870,"ip_address":"","ucode":"CB0652D3EF49A1","user_header":"https://static001.geekbang.org/account/avatar/00/13/dd/6e/f3cfebc5.jpg","comment_is_top":false,"comment_ctime":1547635499,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"48792275755","product_id":100015201,"comment_content":"Ingress只支持7层的话，tcp协议的service怎么处理？","like_count":11,"discussions":[{"author":{"id":1007201,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/61/985f3eb7.jpg","nickname":"songyy","note":"","ucode":"34D6443B91676D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":13909,"discussion_content":"nodePort 或云服务的 LoadBalancer","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1568713696,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1148392,"avatar":"https://static001.geekbang.org/account/avatar/00/11/85/e8/1e3e5657.jpg","nickname":"彬哥","note":"","ucode":"6FF7945FF40DD4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":9585,"discussion_content":"SLB","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568192984,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239936,"user_name":"海盗船长","can_delete":false,"product_type":"c1","uid":1363634,"ip_address":"","ucode":"ECB28BA21A4113","user_header":"https://static001.geekbang.org/account/avatar/00/14/ce/b2/1f914527.jpg","comment_is_top":false,"comment_ctime":1596696884,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"44546369844","product_id":100015201,"comment_content":"Nginx Ingress Controller的mandatory.yaml地址改掉了。现在的命令：<br>kubectl apply -f https:&#47;&#47;raw.githubusercontent.com&#47;kubernetes&#47;ingress-nginx&#47;controller-v0.34.1&#47;deploy&#47;static&#47;provider&#47;baremetal&#47;deploy.yaml","like_count":10,"discussions":[{"author":{"id":1524952,"avatar":"https://static001.geekbang.org/account/avatar/00/17/44/d8/708a0932.jpg","nickname":"李一","note":"","ucode":"EEB7C5099C566C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300648,"discussion_content":"感谢！！！！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598202035,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41802,"user_name":"小小笑儿","can_delete":false,"product_type":"c1","uid":1040354,"ip_address":"","ucode":"CA63CC50DC2091","user_header":"https://static001.geekbang.org/account/avatar/00/0f/df/e2/823a04b4.jpg","comment_is_top":false,"comment_ctime":1542852913,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"44492525873","product_id":100015201,"comment_content":"感觉是因为nodeport之类的没有路由功能而出现的ingress，而且ingress还是需要由loadbalance之类的暴露给集群外部访问","like_count":10},{"had_liked":false,"id":46839,"user_name":"黄巍","can_delete":false,"product_type":"c1","uid":1019058,"ip_address":"","ucode":"CFDB86DBF32813","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/b2/dfdcc8f3.jpg","comment_is_top":false,"comment_ctime":1543988771,"is_pvip":false,"replies":[{"id":"17509","content":"听起来就很给力","user_name":"作者回复","comment_id":46839,"uid":"1218095","ip_address":"","utype":1,"ctime":1544533631,"user_name_real":"Geek_6ef93d"}],"discussion_count":3,"race_medal":0,"score":"35903727139","product_id":100015201,"comment_content":"「但是，相信你也应该能感受到，由于每个 Service 都要有一个负载均衡服务，所以这个做法实际上既浪费成本又高。」没错，下周的 KubeCon 我会做一个关于共享 4 层 LoadBalancer 的session :)","like_count":8,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431563,"discussion_content":"听起来就很给力","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544533631,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1285453,"avatar":"https://static001.geekbang.org/account/avatar/00/13/9d/4d/7222ba28.jpg","nickname":"fenghui","note":"","ucode":"C61699756658C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":27046,"discussion_content":"有没有分享的链接地址？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570628665,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1102245,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d1/a5/2bbedc3b.jpg","nickname":"over","note":"","ucode":"FE272AC19842D3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1285453,"avatar":"https://static001.geekbang.org/account/avatar/00/13/9d/4d/7222ba28.jpg","nickname":"fenghui","note":"","ucode":"C61699756658C1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349937,"discussion_content":"没有","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613634250,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":27046,"ip_address":""},"score":349937,"extra":""}]}]},{"had_liked":false,"id":41562,"user_name":"busman","can_delete":false,"product_type":"c1","uid":1127405,"ip_address":"","ucode":"6A5B10403F0184","user_header":"https://static001.geekbang.org/account/avatar/00/11/33/ed/e6a6e60e.jpg","comment_is_top":false,"comment_ctime":1542806936,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"35902545304","product_id":100015201,"comment_content":"老师，我目前遇到个场景，就是一个非常耗资源的服务，需要容器化，部署在k8s集群中。目前问题就是这种大资源程序怎么打包(也是直接运行在一个容器里吗？)，如何调度？是否有通用方案。<br>这个程序大致是一个深度学习的算法，有tensorflow很耗cpu(监控来看，直接在一个容器里运行，能到十几核)，也会加载很大的模型(内存占用6G)，就这样的场景，老师能点拨一下吗？感谢","like_count":8,"discussions":[{"author":{"id":1300847,"avatar":"https://static001.geekbang.org/account/avatar/00/13/d9/6f/8f5a4f02.jpg","nickname":"HHHumbert","note":"","ucode":"04089DE3F0E093","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45483,"discussion_content":"kubeflow了解一下","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1573042707,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1207457,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6c/a1/80d83f0a.jpg","nickname":"Ellison","note":"","ucode":"A2FB94D4F6A332","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351279,"discussion_content":"你这种做深度学习的东西就需要用job 一次可能会跑个几天到几十天不得过","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1614225102,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170692,"user_name":"Tao","can_delete":false,"product_type":"c1","uid":1466809,"ip_address":"","ucode":"75FBDF49C601F4","user_header":"https://static001.geekbang.org/account/avatar/00/16/61/b9/dbf629c0.jpg","comment_is_top":false,"comment_ctime":1578666952,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"18758536136","product_id":100015201,"comment_content":"apiVersion: extensions&#47;v1beta1<br>kind: Ingress<br>metadata:<br>  name: cafe-ingress<br>spec:<br>  tls:<br>  - hosts:<br>    - www.mysite.com<br>    - forums.mysite.com<br>    secretName: mysite-secret<br>  rules:<br>  - host: www.mysite.com<br>    http:<br>      paths:<br>      - path: &#47;mysite<br>        backend:<br>          serviceName: site-svc<br>          servicePort: 80<br>  - host: forums.mysite.com<br>    http:<br>      paths:<br>      - path: &#47;forums<br>        backend:<br>          serviceName: site-svc<br>          servicePort: 80<br>","like_count":4,"discussions":[{"author":{"id":1068659,"avatar":"https://static001.geekbang.org/account/avatar/00/10/4e/73/93e09e89.jpg","nickname":"dengyu","note":"","ucode":"F3FEC6CF5DF24C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586553,"discussion_content":"hosts tls可以域名通配。*.my site.com","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662337133,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":103196,"user_name":"小猪","can_delete":false,"product_type":"c1","uid":1201662,"ip_address":"","ucode":"EAD6A4876CEF3B","user_header":"https://static001.geekbang.org/account/avatar/00/12/55/fe/ab541300.jpg","comment_is_top":false,"comment_ctime":1560395090,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"18740264274","product_id":100015201,"comment_content":"请问ingress里配置的域名访问地址，那么集群外部怎么根据域名访问到k8s的服务呢？","like_count":4,"discussions":[{"author":{"id":1512942,"avatar":"https://static001.geekbang.org/account/avatar/00/17/15/ee/f461168f.jpg","nickname":"Jay","note":"","ucode":"D9A45EA47908C9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":113698,"discussion_content":"比如基于nginx的ingress controller部署在一个pod中，这个pod使用hostnetwork监听宿主机的端口80/443，这里需要配置域名解析到ingress controoler pod所部署的节点的ip，当client通过域名发起请求时，请求到达部署ingree controller的节点，由于请求已经到达k8s集群中，直接将请求转发到对应的pod ip即可。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1577928491,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3188237,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/rdpX04rcx6G2XsN0FZia9DTY6olLhcV1iauznaItiaaKzEDtWB7qtjibTBWW5scPLkPMtKibkv3PH8awXVxb4Zk4icRQ/132","nickname":"Jzzz","note":"","ucode":"9703FEEF912015","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589768,"discussion_content":"访问端配置hosts添加域名到该pod部署的ip，公网用lb方式，直接就能映射到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665306288,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"福建"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1301758,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJzict2lUBuz584C9k4e2THsXY3oFiaiacLDvWDePHFHgCZlkKLCIhvs2Lqwibkxe7vh7mo0QGggYJSJw/132","nickname":"Geek_f567f9","note":"","ucode":"6E6F7DA5139CE1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541783,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640568180,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1363834,"avatar":"https://static001.geekbang.org/account/avatar/00/14/cf/7a/51951b07.jpg","nickname":"微笑","note":"","ucode":"6E8E2964D0191F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":98977,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577192941,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53356,"user_name":"学习者","can_delete":false,"product_type":"c1","uid":1282882,"ip_address":"","ucode":"E1F9665DBA47D9","user_header":"","comment_is_top":false,"comment_ctime":1545631831,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18725501015","product_id":100015201,"comment_content":"问题描述：前后端分离，但是同一域名下既有前端代码（部署在nginx中，以静态文件方式访问。），又用nginx 的proxy_pass ,根据url （location &#47;xx&#47; {}）反向代理做了后端。<br>方案 1：client -&gt; lb -&gt; ingress -&gt; nginx  (nginx 只部署前端，ingress 配置后端连接pod 的service，)<br>方案2 ： client -&gt; nginx  ( 后端采用nodeport暴露出来，采用问题描述方法部署)<br>请问这两种方案的可行性？或者还有什么更好的方案吗？","like_count":4},{"had_liked":false,"id":48341,"user_name":"Adam","can_delete":false,"product_type":"c1","uid":1305633,"ip_address":"","ucode":"338BA720880E4F","user_header":"https://static001.geekbang.org/account/avatar/00/13/ec/21/b0fe1bfd.jpg","comment_is_top":false,"comment_ctime":1544424897,"is_pvip":false,"replies":[{"id":"17502","content":"多层lb的方案不是挺普遍的？","user_name":"作者回复","comment_id":48341,"uid":"1218095","ip_address":"","utype":1,"ctime":1544533323,"user_name_real":"Geek_6ef93d"}],"discussion_count":1,"race_medal":0,"score":"18724294081","product_id":100015201,"comment_content":"感觉再加上一层ingress，又多了一层转发，性能上会不会损失比较大。","like_count":4,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432138,"discussion_content":"多层lb的方案不是挺普遍的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544533323,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43836,"user_name":"勤劳的小胖子-libo","can_delete":false,"product_type":"c1","uid":1158344,"ip_address":"","ucode":"5BB20CD5A56568","user_header":"https://static001.geekbang.org/account/avatar/00/11/ac/c8/4b1c0d40.jpg","comment_is_top":false,"comment_ctime":1543307367,"is_pvip":false,"replies":[{"id":"15725","content":"对的，假证书，哈哈","user_name":"作者回复","comment_id":43836,"uid":"1218095","ip_address":"","utype":1,"ctime":1543371569,"user_name_real":"Geek_6ef93d"}],"discussion_count":2,"race_medal":0,"score":"18723176551","product_id":100015201,"comment_content":"老师，为什么在创建 Ingress 所需的 SSL 证书（tls.crt）和密钥（tls.key）之后，使用curl命令还需要加上--insecure.<br>&quot;curl --resolve cafe.example.com:$IC_HTTPS_PORT:$IC_IP https:&#47;&#47;cafe.example.com:$IC_HTTPS_PORT&#47;tea --insecure&quot;<br><br>我的理解是：创建的SSL证书和密钥没有通过CA验证，所以要加上--secure. 对吗？","like_count":4,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430517,"discussion_content":"对的，假证书，哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543371569,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1284957,"avatar":"https://static001.geekbang.org/account/avatar/00/13/9b/5d/51ce0111.jpg","nickname":"故地重游","note":"","ucode":"4232938A5B9B43","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347535,"discussion_content":"应该是自签的CA颁发的证书吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612251835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42597,"user_name":"王天明","can_delete":false,"product_type":"c1","uid":1012262,"ip_address":"","ucode":"60C51851C73A37","user_header":"https://static001.geekbang.org/account/avatar/00/0f/72/26/7387fc89.jpg","comment_is_top":false,"comment_ctime":1542976324,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14427878212","product_id":100015201,"comment_content":"张老师，curl 那行代码，应该在“--insecureServer”中间换行了。","like_count":3},{"had_liked":false,"id":274732,"user_name":"陈斯佳","can_delete":false,"product_type":"c1","uid":1259323,"ip_address":"","ucode":"C236F874FC767A","user_header":"https://static001.geekbang.org/account/avatar/00/13/37/3b/495e2ce6.jpg","comment_is_top":false,"comment_ctime":1611139005,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10201073597","product_id":100015201,"comment_content":"“Ingress是service的service” 太精辟了！一下就理解了ingress存在的意义！","like_count":2},{"had_liked":false,"id":47026,"user_name":"火车飞侠","can_delete":false,"product_type":"c1","uid":1202579,"ip_address":"","ucode":"3595C18C5BBC96","user_header":"https://static001.geekbang.org/account/avatar/00/12/59/93/aa3cb0fc.jpg","comment_is_top":false,"comment_ctime":1544021148,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10133955740","product_id":100015201,"comment_content":"老师，如果我后端服务是https的，ingress如何定义呢？","like_count":2,"discussions":[{"author":{"id":1108695,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ea/d7/9506fe35.jpg","nickname":"pllsxyc","note":"","ucode":"402B95BCA36779","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300643,"discussion_content":"同问，老哥找到方案了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598200188,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1012816,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/74/50/59d429c9.jpg","nickname":"MiracleWong","note":"","ucode":"05233774710AFE","race_medal":3,"user_type":1,"is_pvip":true},"reply_author":{"id":1108695,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ea/d7/9506fe35.jpg","nickname":"pllsxyc","note":"","ucode":"402B95BCA36779","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353572,"discussion_content":"我们的业务一般处理方式：连接公网的OpenResty（多个实现负载均衡），配置https，直接转发到Kubernetes集群。集群内部的ingress就不需要https 配置了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1615174531,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":300643,"ip_address":""},"score":353572,"extra":""}]}]},{"had_liked":false,"id":42717,"user_name":"蓝魔丶","can_delete":false,"product_type":"c1","uid":1219438,"ip_address":"","ucode":"2AE4359E263558","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/6e/edd2da0c.jpg","comment_is_top":false,"comment_ctime":1543027283,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10132961875","product_id":100015201,"comment_content":"学习过程中遇到一些一直想不通的问题，麻烦能怎么联系老师解答下吗？","like_count":2},{"had_liked":false,"id":41640,"user_name":"zylv","can_delete":false,"product_type":"c1","uid":1210173,"ip_address":"","ucode":"D90E50E78B5B2D","user_header":"https://static001.geekbang.org/account/avatar/00/12/77/3d/d998a34f.jpg","comment_is_top":false,"comment_ctime":1542813101,"is_pvip":false,"replies":[{"id":"14952","content":"公有IP可以","user_name":"作者回复","comment_id":41640,"uid":"1218095","ip_address":"","utype":1,"ctime":1542846701,"user_name_real":"Geek_6ef93d"}],"discussion_count":2,"race_medal":0,"score":"10132747693","product_id":100015201,"comment_content":"ingress-controller 里面如果不配置域名，配置ip,可以吗","like_count":2,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429866,"discussion_content":"公有IP可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542846701,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1027823,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ae/ef/cbb8d881.jpg","nickname":"黄智荣","note":"","ucode":"3C84C8654CCB11","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285731,"discussion_content":"ingress 里面的host 配置IP，会提示不是DNS，必须用IP。老师为什么说可以？我一直想实现这个功能，但是一直用不了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592922295,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":282277,"user_name":"MiracleWong","can_delete":false,"product_type":"c1","uid":1012816,"ip_address":"","ucode":"05233774710AFE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/74/50/59d429c9.jpg","comment_is_top":false,"comment_ctime":1615184261,"is_pvip":true,"discussion_count":0,"race_medal":3,"score":"5910151557","product_id":100015201,"comment_content":"由 @思维 给出的地址：https:&#47;&#47;raw.githubusercontent.com&#47;kubernetes&#47;ingress-nginx&#47;controller-v0.34.1&#47;deploy&#47;static&#47;provider&#47;baremetal&#47;deploy.yaml<br><br>我们可以看到使用的Helm Charts 是helm.sh&#47;chart: ingress-nginx-2.11.1<br>如果你是使用helm （v3 版本）管理服务的话，可以通过<br>helm repo add ingress-nginx https:&#47;&#47;kubernetes.github.io&#47;ingress-nginx<br>helm repo update<br>helm search repo ingress-nginx (看到现在最高版本是3.23.0)<br><br>helm install ingress-nginx ingress-nginx&#47;ingress-nginx  安装。<br><br>如果想安装  ingress-nginx-2.11.1 <br>可以<br>helm fetch ingress-nginx&#47;ingress-nginx --version 2.1.1<br>tar zxvf ingress-nginx-2.11.1.tgz<br>helm install ingress-nginx .&#47;ingress-nginx  进行安装<br><br>如果下载镜像版本过慢，可以考虑把镜像推送到私有仓库","like_count":1},{"had_liked":false,"id":274631,"user_name":"我在睡觉","can_delete":false,"product_type":"c1","uid":2179383,"ip_address":"","ucode":"6503B611151D3C","user_header":"https://static001.geekbang.org/account/avatar/00/21/41/37/b89f3d67.jpg","comment_is_top":false,"comment_ctime":1611107373,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5906074669","product_id":100015201,"comment_content":"老师这节课讲的ingress是一个7层负载均衡<br>用ingress是否可以搭建一个4层负载均衡？","like_count":1},{"had_liked":false,"id":274625,"user_name":"我在睡觉","can_delete":false,"product_type":"c1","uid":2179383,"ip_address":"","ucode":"6503B611151D3C","user_header":"https://static001.geekbang.org/account/avatar/00/21/41/37/b89f3d67.jpg","comment_is_top":false,"comment_ctime":1611105810,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5906073106","product_id":100015201,"comment_content":"是否也可以用云提供的7层负载均衡器+nodeport形式实现的ingress效果。这样做效率是否会更高？","like_count":1},{"had_liked":false,"id":232076,"user_name":"ch_ort","can_delete":false,"product_type":"c1","uid":1580926,"ip_address":"","ucode":"B79746E687F29E","user_header":"","comment_is_top":false,"comment_ctime":1593850840,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5888818136","product_id":100015201,"comment_content":"按照文档操作，最后的curl报了个异常<br><br>curl --resolve cafe.example.com:$IC_HTTPS_PORT:$IC_IP https:&#47;&#47;cafe.example.com:$IC_HTTPS_PORT&#47;tea --insecure<br>curl: (35) SSL received a record that exceeded the maximum permissible length.","like_count":1},{"had_liked":false,"id":189358,"user_name":"阿硕","can_delete":false,"product_type":"c1","uid":1210978,"ip_address":"","ucode":"39856C29E6614B","user_header":"https://static001.geekbang.org/account/avatar/00/12/7a/62/9b248708.jpg","comment_is_top":false,"comment_ctime":1584504891,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5879472187","product_id":100015201,"comment_content":"一个ingress部署后，每个node上的端口都会占用，在真实环境中是不是每个node前都在外加一个lvs？","like_count":1,"discussions":[{"author":{"id":1137214,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqzPOHJjMtAyicMn3bbnmtOqfAKyyvZN3bVa1JqWR5tzoVpMJA93aiaAjKyV3GlEgVtpuNsAQbeTccg/132","nickname":"iqoiwer","note":"","ucode":"D54B2CAD0B588D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381554,"discussion_content":"可以单独做一组机器通过标签匹配或者DS模式部署ingress-pod ,就不影响其他业务节点的端口申请了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625124766,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184021,"user_name":"wang jl","can_delete":false,"product_type":"c1","uid":1328098,"ip_address":"","ucode":"F32E4921EAECC1","user_header":"https://static001.geekbang.org/account/avatar/00/14/43/e2/a1ff289c.jpg","comment_is_top":false,"comment_ctime":1583206877,"is_pvip":false,"replies":[{"id":"72842","content":"如果你愿意，还可以继续往前面搭","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1584423507,"ip_address":"","comment_id":184021,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5878174173","product_id":100015201,"comment_content":"lvs-&gt;nginx-&gt;lvs-&gt;service 这操作骚得可以。<br>关键是lvs还是nat模式的。","like_count":1,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485855,"discussion_content":"如果你愿意，还可以继续往前面搭","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584423507,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155802,"user_name":"坤","can_delete":false,"product_type":"c1","uid":1010922,"ip_address":"","ucode":"74E6838226A405","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6c/ea/ce9854a5.jpg","comment_is_top":false,"comment_ctime":1574759046,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5869726342","product_id":100015201,"comment_content":"“一旦 Ingress 对象被更新，nginx-ingress-controller 就会更新这个配置文件”，张老师您好, 请问controller修改该文件的方式有谁来执行？另外确认一下，configmap仅在nginx启动时才有效对吧。也就是后期每一个ingress对象并不会更新configmap。我看nginx-ingress的源码没找到您提到的关于配置文件修改的逻辑。","like_count":1},{"had_liked":false,"id":108862,"user_name":"坤","can_delete":false,"product_type":"c1","uid":1010922,"ip_address":"","ucode":"74E6838226A405","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6c/ea/ce9854a5.jpg","comment_is_top":false,"comment_ctime":1561904112,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5856871408","product_id":100015201,"comment_content":"有效地址为： https:&#47;&#47;raw.githubusercontent.com&#47;kubernetes&#47;ingress-nginx&#47;master&#47;deploy&#47;static&#47;provider&#47;baremetal&#47;service-nodeport.yaml","like_count":1},{"had_liked":false,"id":69761,"user_name":"宝爷","can_delete":false,"product_type":"c1","uid":1153664,"ip_address":"","ucode":"DD517FA7EB59AB","user_header":"https://static001.geekbang.org/account/avatar/00/11/9a/80/2bf8d7fc.jpg","comment_is_top":false,"comment_ctime":1550830927,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5845798223","product_id":100015201,"comment_content":"比如我有一个websocket的服务端，客户端希望通过HTTPS访问，ingress可否帮我在不改动服务端的前提下完成这样的一个需求？如果可以的话，大概应该怎么做呢？","like_count":1},{"had_liked":false,"id":41948,"user_name":"@Yang","can_delete":false,"product_type":"c1","uid":1045906,"ip_address":"","ucode":"11C99A4AE76C62","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f5/92/28669fbc.jpg","comment_is_top":false,"comment_ctime":1542879201,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5837846497","product_id":100015201,"comment_content":"请教老师一个问题:我想一次export 集群里namesapces pv pvc pod deploy svc ingress 等等所有的配置，改如何做？<br>不胜感激","like_count":1,"discussions":[{"author":{"id":1284618,"avatar":"https://static001.geekbang.org/account/avatar/00/13/9a/0a/6c74e932.jpg","nickname":"光","note":"","ucode":"BDA7F41566E4FE","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":274990,"discussion_content":"用helm","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590642169,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":360720,"user_name":"gogo","can_delete":false,"product_type":"c1","uid":1003104,"ip_address":"北京","ucode":"E8F0F3B000020A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4e/60/0d5aa340.jpg","comment_is_top":false,"comment_ctime":1666780245,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1666780245","product_id":100015201,"comment_content":"真实环境域名是解析到哪个机器上呢？","like_count":0},{"had_liked":false,"id":348735,"user_name":"窝窝头","can_delete":false,"product_type":"c1","uid":1063866,"ip_address":"","ucode":"5C2635ED6484F8","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/ba/3b30dcde.jpg","comment_is_top":false,"comment_ctime":1655359258,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1655359258","product_id":100015201,"comment_content":"对于两个域名各对应一条rule","like_count":0},{"had_liked":false,"id":347293,"user_name":"Evan","can_delete":false,"product_type":"c1","uid":1344281,"ip_address":"","ucode":"B877ABD0CF4661","user_header":"https://static001.geekbang.org/account/avatar/00/14/83/19/0a3fe8c1.jpg","comment_is_top":false,"comment_ctime":1653905102,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1653905102","product_id":100015201,"comment_content":"在阿里云自建 K8S集群，如何将 ingress 服务转发到SLB中  ","like_count":0},{"had_liked":false,"id":344758,"user_name":"Geek_c9d969","can_delete":false,"product_type":"c1","uid":2633427,"ip_address":"","ucode":"C05DADCF25A072","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/U23QibvwAbZ0lyTHut5L7aWUqpRQd0bDEJcYwrXXeleXId7iaOQ9g0Luh4amNoMsiaadVsdkQibdgvT2cib5vgOrnCQ/132","comment_is_top":false,"comment_ctime":1651753737,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651753737","product_id":100015201,"comment_content":"现在ingress支持四层代理了吗？","like_count":0},{"had_liked":false,"id":335830,"user_name":"超级芒果冰","can_delete":false,"product_type":"c1","uid":1188976,"ip_address":"","ucode":"97480FBFA4F699","user_header":"https://static001.geekbang.org/account/avatar/00/12/24/70/4e7751f3.jpg","comment_is_top":false,"comment_ctime":1645707201,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1645707201","product_id":100015201,"comment_content":"ingress必须要结合ingress controller使用吗？ingress能单独使用吗","like_count":0,"discussions":[{"author":{"id":3188237,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/rdpX04rcx6G2XsN0FZia9DTY6olLhcV1iauznaItiaaKzEDtWB7qtjibTBWW5scPLkPMtKibkv3PH8awXVxb4Zk4icRQ/132","nickname":"Jzzz","note":"","ucode":"9703FEEF912015","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589771,"discussion_content":"只有ingress就只是个对象，你可以理解为ng的一条代理规则，光有这个有什么用，当然要有ingress controller去实现","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665306391,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"福建"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1027152,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ac/50/71c25e34.jpg","nickname":"赵先生","note":"","ucode":"A8E7EE3D400698","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580795,"discussion_content":"没有Controller不能单独使用ingress","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658374610,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":335734,"user_name":"超级芒果冰","can_delete":false,"product_type":"c1","uid":1188976,"ip_address":"","ucode":"97480FBFA4F699","user_header":"https://static001.geekbang.org/account/avatar/00/12/24/70/4e7751f3.jpg","comment_is_top":false,"comment_ctime":1645668744,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645668744","product_id":100015201,"comment_content":"老师，ingress controller 是怎么找到 ingress 这个对象，并读取它的配置的","like_count":0},{"had_liked":false,"id":327742,"user_name":"阿甘","can_delete":false,"product_type":"c1","uid":1057843,"ip_address":"","ucode":"BC93175B70E05D","user_header":"https://static001.geekbang.org/account/avatar/00/10/24/33/bcf37f50.jpg","comment_is_top":false,"comment_ctime":1640262305,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1640262305","product_id":100015201,"comment_content":"这样看起来Ingress就好像一个nginx，那么k8s是怎样保证ingress本身的HA和负载均衡呢？","like_count":0,"discussions":[{"author":{"id":2853149,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/89/1d/d1d8edcc.jpg","nickname":"梅斌","note":"","ucode":"DDE15A3FD12738","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546114,"discussion_content":"ingress是nginx的反响代理配置，ingresscontroller用deployment部署，因为是无状态应用，实现ha","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642163864,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321601,"user_name":"神毓逍遥","can_delete":false,"product_type":"c1","uid":2147220,"ip_address":"","ucode":"83351CB18B190E","user_header":"https://static001.geekbang.org/account/avatar/00/20/c3/94/e89ebc50.jpg","comment_is_top":false,"comment_ctime":1636962760,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1636962760","product_id":100015201,"comment_content":"为什么公网要用 loadbalance 类型","like_count":0},{"had_liked":false,"id":303525,"user_name":"asdf100","can_delete":false,"product_type":"c1","uid":1043738,"ip_address":"","ucode":"39D8D71453E575","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/1a/ce7f7d54.jpg","comment_is_top":false,"comment_ctime":1626845933,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626845933","product_id":100015201,"comment_content":"https:&#47;&#47;kubernetes.io&#47;docs&#47;reference&#47;generated&#47;kubernetes-api&#47;v1.21&#47;#ingressrule-v1-networking-k8s-io <br><br>是不是ingress 只支持 80 和 443这两个端口的？","like_count":0},{"had_liked":false,"id":300776,"user_name":"kissingers","can_delete":false,"product_type":"c1","uid":1135299,"ip_address":"","ucode":"615151808CF628","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKzqiaZnBw2myRWY802u48Rw3W2zDtKoFQ6vN63m4FdyjibM21FfaOYe8MbMpemUdxXJeQH6fRdVbZA/132","comment_is_top":false,"comment_ctime":1625384248,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1625384248","product_id":100015201,"comment_content":"https:&#47;&#47;cafe.example.com:443&#47;coffee<br>DNS 解析怎么实现的？","like_count":0,"discussions":[{"author":{"id":1030861,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJrqLEic7DVicYY1s9ldH0vGBialDoplVGpicZUJ0Fdaklw27Frv8Ac67eicb5LibhL74SUxAzlick2nfltA/132","nickname":"jiangb","note":"","ucode":"A09415749CA88D","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":565767,"discussion_content":"将 HOST:PORT 强制解析到 ADDRESS。\ncurl --resolve HOST:PORT:ADDRESS ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650539870,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":300539,"user_name":"海海海儿 Dylan(王一硼)","can_delete":false,"product_type":"c1","uid":1095418,"ip_address":"","ucode":"9D1B3A97925889","user_header":"https://static001.geekbang.org/account/avatar/00/10/b6/fa/30497178.jpg","comment_is_top":false,"comment_ctime":1625211018,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625211018","product_id":100015201,"comment_content":"ingress 配置的域名 节点是怎么解析出来的，是在k8s 的dns服务中记录了这个信息吗","like_count":0},{"had_liked":false,"id":294732,"user_name":"罗峰","can_delete":false,"product_type":"c1","uid":1218501,"ip_address":"","ucode":"5F3D6AF8F28322","user_header":"https://static001.geekbang.org/account/avatar/00/12/97/c5/84491beb.jpg","comment_is_top":false,"comment_ctime":1622077093,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622077093","product_id":100015201,"comment_content":"Ingress没法跨namespace吗？如果不能叫全局负载均衡是不是有点不恰当","like_count":0},{"had_liked":false,"id":288259,"user_name":"Mr_W","can_delete":false,"product_type":"c1","uid":1171427,"ip_address":"","ucode":"436679C8DFDD53","user_header":"https://static001.geekbang.org/account/avatar/00/11/df/e3/cd12f78d.jpg","comment_is_top":false,"comment_ctime":1618383353,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1618383353","product_id":100015201,"comment_content":"cafe.example.com  这个域名是不是要能转到集群内的任何一台宿主机（80，443端口未被占用）？","like_count":0},{"had_liked":false,"id":285115,"user_name":"齐航","can_delete":false,"product_type":"c1","uid":1012606,"ip_address":"","ucode":"5E83B7FB493BD5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/73/7e/d36cb031.jpg","comment_is_top":false,"comment_ctime":1616632645,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616632645","product_id":100015201,"comment_content":"我想问下 ingress 和ingress controller是怎么联动的 是通过 那个deployment的<br>--publish-service=$(POD_NAMESPACE)&#47;ingress-nginx 获取到的ingress的规则信息的么<br>","like_count":0},{"had_liked":false,"id":274626,"user_name":"我在睡觉","can_delete":false,"product_type":"c1","uid":2179383,"ip_address":"","ucode":"6503B611151D3C","user_header":"https://static001.geekbang.org/account/avatar/00/21/41/37/b89f3d67.jpg","comment_is_top":false,"comment_ctime":1611105845,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1611105845","product_id":100015201,"comment_content":"是否也可以用云提供的7层负载均衡器+nodeport形式实现的ingress效果。这样做效率是否会更高？","like_count":0,"discussions":[{"author":{"id":1139367,"avatar":"https://static001.geekbang.org/account/avatar/00/11/62/a7/3e6fee86.jpg","nickname":"K战神","note":"","ucode":"527E6BB26BB766","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559309,"discussion_content":"每个node都要开端口的也是个问题，服务少还行，多的话安全、维护都会变困难","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648698038,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1137214,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqzPOHJjMtAyicMn3bbnmtOqfAKyyvZN3bVa1JqWR5tzoVpMJA93aiaAjKyV3GlEgVtpuNsAQbeTccg/132","nickname":"iqoiwer","note":"","ucode":"D54B2CAD0B588D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381552,"discussion_content":"当然可以，我们就是这么干的，但是云SLB等在添加大批量node的时候需要手动操作容易出错，且后端也要配置安全组开放端口，腾讯云等提供的ingress 可以自动关联CLB，效率上有提升","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625124542,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":264675,"user_name":"瑜晴呀","can_delete":false,"product_type":"c1","uid":1579980,"ip_address":"","ucode":"459F53D9FF99B1","user_header":"https://static001.geekbang.org/account/avatar/00/18/1b/cc/f72650f3.jpg","comment_is_top":false,"comment_ctime":1606572790,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606572790","product_id":100015201,"comment_content":"Ingress 和 api gateway 的功能有点重合，微服务项目一般用 spring cloud gateway 来做网关路由，请问老师能讲下他们的区别和实际应用场合吗","like_count":0},{"had_liked":false,"id":233187,"user_name":"killua","can_delete":false,"product_type":"c1","uid":1005951,"ip_address":"","ucode":"3108F880E48D3B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/7f/1c505317.jpg","comment_is_top":false,"comment_ctime":1594256896,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1594256896","product_id":100015201,"comment_content":"从k8外部访问 我理解是不是只有nodeport 方式？ingress  需要结合外部dns ，使k8s外部系统访问内部service？<br>","like_count":0,"discussions":[{"author":{"id":1137214,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqzPOHJjMtAyicMn3bbnmtOqfAKyyvZN3bVa1JqWR5tzoVpMJA93aiaAjKyV3GlEgVtpuNsAQbeTccg/132","nickname":"iqoiwer","note":"","ucode":"D54B2CAD0B588D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381553,"discussion_content":"不一定啊 ，云上一般都用LB，减少东西向的传输损耗啊啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625124630,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1005951,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/59/7f/1c505317.jpg","nickname":"killua","note":"","ucode":"3108F880E48D3B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1137214,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqzPOHJjMtAyicMn3bbnmtOqfAKyyvZN3bVa1JqWR5tzoVpMJA93aiaAjKyV3GlEgVtpuNsAQbeTccg/132","nickname":"iqoiwer","note":"","ucode":"D54B2CAD0B588D","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":383409,"discussion_content":"外部访问内部可以通过lb方式吗？ lb的backend 是？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626082236,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":381553,"ip_address":""},"score":383409,"extra":""}]},{"author":{"id":1269156,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5d/a4/2e4b6d33.jpg","nickname":"素还真","note":"","ucode":"9ABA456355F7E3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":346784,"discussion_content":"我理解也是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612063130,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":232349,"user_name":"Ally","can_delete":false,"product_type":"c1","uid":2055759,"ip_address":"","ucode":"056CF7769CFC05","user_header":"https://static001.geekbang.org/account/avatar/00/1f/5e/4f/f348ed4c.jpg","comment_is_top":false,"comment_ctime":1593963595,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593963595","product_id":100015201,"comment_content":"我有两个service，都用port forward到local host不同的端口，如果想在service1的ui上点击一个自动生成的在这个url下某个路径，并把这个url中的port改成service2的port，应该怎么做？谢谢！","like_count":0},{"had_liked":false,"id":227951,"user_name":"朱东辉","can_delete":false,"product_type":"c1","uid":1983157,"ip_address":"","ucode":"D9EA5C37A1B386","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIh7iatqAeGsJuDNxsDlmCQx64ktJl7ATAkBtDO6iczIqsLFPXkF6GPGJpMBCxbl4DJ5obHwAK0bSAQ/132","comment_is_top":false,"comment_ctime":1592529618,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1592529618","product_id":100015201,"comment_content":"老师，我们刚开始设定了nodeport端口，但是后面访问的时候为什么没有用到呢，还是用   域名:80端口访问，那这个nodeport用在哪里呢","like_count":0,"discussions":[{"author":{"id":3188237,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/rdpX04rcx6G2XsN0FZia9DTY6olLhcV1iauznaItiaaKzEDtWB7qtjibTBWW5scPLkPMtKibkv3PH8awXVxb4Zk4icRQ/132","nickname":"Jzzz","note":"","ucode":"9703FEEF912015","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589772,"discussion_content":"文章后面外网访问的时候用到nodeport了呀，80端口是集群内部的映射","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665306564,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"福建"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1269156,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5d/a4/2e4b6d33.jpg","nickname":"素还真","note":"","ucode":"9ABA456355F7E3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":346786,"discussion_content":"可以用 nodeport端口 从外网访问啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612063183,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":224935,"user_name":"piboye","can_delete":false,"product_type":"c1","uid":1066752,"ip_address":"","ucode":"7CFD8712857A85","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","comment_is_top":false,"comment_ctime":1591596913,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1591596913","product_id":100015201,"comment_content":"ingress 不能直接转发到service的Pod上吗？ 通过ipatable 来到pod 是不是效率不行啊？","like_count":0},{"had_liked":false,"id":223481,"user_name":"Andy","can_delete":false,"product_type":"c1","uid":1119133,"ip_address":"","ucode":"4BCA899B8E4E85","user_header":"https://static001.geekbang.org/account/avatar/00/11/13/9d/0ff43179.jpg","comment_is_top":false,"comment_ctime":1591100272,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591100272","product_id":100015201,"comment_content":"网络这整章有难度了。","like_count":0},{"had_liked":false,"id":198673,"user_name":"vincent","can_delete":false,"product_type":"c1","uid":1796234,"ip_address":"","ucode":"9FAD09D87C1E42","user_header":"","comment_is_top":false,"comment_ctime":1585463407,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585463407","product_id":100015201,"comment_content":"创建Ingress是顺序：<br>service - ingress_control  - ingress - service -pod<br>实验上看实际转发流程是：<br>service - ingress_control - pod<br>流量是直接从ingress_control 分发给后端pod，流程上没有再经过pod之前的service<br>创建过程中多创建了一个service，流量分发时又用不上，这样设计是否有什么考虑","like_count":0},{"had_liked":false,"id":186775,"user_name":"左氧佛沙星人","can_delete":false,"product_type":"c1","uid":1195278,"ip_address":"","ucode":"0D8295E1DABA8C","user_header":"https://static001.geekbang.org/account/avatar/00/12/3d/0e/92176eaa.jpg","comment_is_top":false,"comment_ctime":1583921471,"is_pvip":true,"replies":[{"id":"72830","content":"因为外部的用户需要通过 http&#47;https 方式访问这个pod","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1584422885,"ip_address":"","comment_id":186775,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583921471","product_id":100015201,"comment_content":"请问各位大神和老师<br>可以看到，这个 Service 的唯一工作，就是将所有携带 ingress-nginx 标签的 Pod 的 80 和 433 端口bao lu出去。<br>为啥需要创建一个svc呢？为啥需要bao lu80和443呢？","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486866,"discussion_content":"因为外部的用户需要通过 http/https 方式访问这个pod","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584422885,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146276,"user_name":"benben","can_delete":false,"product_type":"c1","uid":1222193,"ip_address":"","ucode":"A861DEB5A88AA2","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/mWicFKgbjL299CQPEhoFdSLGvibCiaXeZo2EjV1hDLicPxicyRTWCODxeYwq8eBgxU6zUuU6rrIw3d7hGwFmRflicibHA/132","comment_is_top":false,"comment_ctime":1572487995,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1572487995","product_id":100015201,"comment_content":"老师，问一个困扰我的问题，ingress-nginx 通过nodePort暴露的端口为什么通过netstat查看不到呢？","like_count":0,"discussions":[{"author":{"id":1227336,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ba/48/c892a35b.jpg","nickname":"csoulsi","note":"","ucode":"96C9BBE9097FB3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":96717,"discussion_content":"看一下iptable转发","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577088460,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140452,"user_name":"张若初","can_delete":false,"product_type":"c1","uid":1575256,"ip_address":"","ucode":"143B6016CA06D5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epT7abaupjJFDn2WuwRNY2PzD5gNVpWaclZWNYclUKPm16uyKMrON8wQUicKU2evgpduEDf5CxoFyg/132","comment_is_top":false,"comment_ctime":1570947343,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570947343","product_id":100015201,"comment_content":"ingress 和 ingress cintroller关联在一起的","like_count":0},{"had_liked":false,"id":122832,"user_name":"蛋蛋","can_delete":false,"product_type":"c1","uid":1033691,"ip_address":"","ucode":"E5E8E4CF113EF0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c5/db/165d84f0.jpg","comment_is_top":false,"comment_ctime":1565538049,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1565538049","product_id":100015201,"comment_content":"一个集群里能否有多个ingress controller","like_count":0,"discussions":[{"author":{"id":1108695,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ea/d7/9506fe35.jpg","nickname":"pllsxyc","note":"","ucode":"402B95BCA36779","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300645,"discussion_content":"可以创建多个，然后绑定到不同端口好了，个人理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598200301,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1033691,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c5/db/165d84f0.jpg","nickname":"蛋蛋","note":"","ucode":"E5E8E4CF113EF0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4583,"discussion_content":"ingress controller 如何关联加载ingress rule?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565577387,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120452,"user_name":"Geek_53fe7f","can_delete":false,"product_type":"c1","uid":1617925,"ip_address":"","ucode":"C38EE8F458E141","user_header":"","comment_is_top":false,"comment_ctime":1564903683,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564903683","product_id":100015201,"comment_content":"如果访问公网 ip : 80 ,让其转到 k8s 集群的ingress 上的话，还需要配置一个nginx 做反向代理，这样理解对么？","like_count":0},{"had_liked":false,"id":64914,"user_name":"文雅的疯狂","can_delete":false,"product_type":"c1","uid":1269491,"ip_address":"","ucode":"92C5419CC92A07","user_header":"https://static001.geekbang.org/account/avatar/00/13/5e/f3/d87f4e7f.jpg","comment_is_top":false,"comment_ctime":1548955570,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1548955570","product_id":100015201,"comment_content":"老师好，我在配置rabbitmq的AMQP协议服务时，5672端口，总是不成功，原因是不是因为nginx-ingress只支持7层协议的原因？有什么好的方法么？","like_count":0,"discussions":[{"author":{"id":1530493,"avatar":"","nickname":"Geek_e7834d","note":"","ucode":"ABAF1B1B7E6490","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2244,"discussion_content":"同问， 配通了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563409975,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":60739,"user_name":"邋遢熊","can_delete":false,"product_type":"c1","uid":1000257,"ip_address":"","ucode":"9B4732F85904D5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/41/f7aa80e9.jpg","comment_is_top":false,"comment_ctime":1547540983,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547540983","product_id":100015201,"comment_content":"我对ingress的理解是，它不能等同于nginx等真正的代理服务，应该算是kubernetes上关于代理服务的一种事实标准，nginx这类代理服务都是尊重ingress和ingress controller的规范，进行容器化的支持，不知道我这么理解是否有偏差。","like_count":0},{"had_liked":false,"id":45927,"user_name":"V V","can_delete":false,"product_type":"c1","uid":1220390,"ip_address":"","ucode":"9494330A6AA770","user_header":"https://static001.geekbang.org/account/avatar/00/12/9f/26/89eda2c8.jpg","comment_is_top":false,"comment_ctime":1543819770,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543819770","product_id":100015201,"comment_content":"如何直接暴露给外部使用呢？","like_count":0},{"had_liked":false,"id":45362,"user_name":"郭健","can_delete":false,"product_type":"c1","uid":1219570,"ip_address":"","ucode":"2525D03079EB5D","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/f2/283ca833.jpg","comment_is_top":false,"comment_ctime":1543612728,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543612728","product_id":100015201,"comment_content":"老师你好，有个实际的问题，假定ingress的host是A.com，而A.com只是一个我本地开发测试使用的假想域名，现在我在集群里的具体的容器想去访问A.com，而且这些容器与ingress又处在不同的namespace中，这个应该怎么处理呢？host entry或者是external service都需要IP值却没法使用A.com这个值。","like_count":0},{"had_liked":false,"id":44248,"user_name":"cco","can_delete":false,"product_type":"c1","uid":1284795,"ip_address":"","ucode":"86978EB3D3D40E","user_header":"","comment_is_top":false,"comment_ctime":1543394039,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543394039","product_id":100015201,"comment_content":"root@master nginx-ingress]# kubectl get ns<br>NAME            STATUS        AGE<br>epk             Active        37d<br>ingress-nginx   Terminating   42d<br># kubectl delete ns ingress-nginx<br>Error from server (Conflict): Operation cannot be fulfilled on namespaces &quot;ingress-nginx&quot;: The system is ensuring all content is removed from this namespace.  Upon completion, this namespace will automatically be purged by the system.<br><br>老师删除命名空间不成功不知道什么问题 ，我都查过了 kind     （kubecel get 关于 ingress-nginx 命名空间的东西 都删除了，可是ingress-nginx 命名空间还是删除不了。","like_count":0},{"had_liked":false,"id":43962,"user_name":"Holy","can_delete":false,"product_type":"c1","uid":1061153,"ip_address":"","ucode":"17F008120403D4","user_header":"","comment_is_top":false,"comment_ctime":1543338378,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543338378","product_id":100015201,"comment_content":"深度学习的问题同学，需要考虑的是任务的场景。如果你说的是离线训练任务，可以考虑kubeflow tfjob，对tf集群进行自动化监控管理。如果是指在线推理服务，假设你的client端也在j8s集群内且对性能要求不高且流量不大，可以基于service  加deployment进行负载均衡与多副本，另外tfserving是个好的选择。至于CPU与内存限制都是container的隔离属性，跟选型关系不大，除非你要模型分片，是另外的方案","like_count":0},{"had_liked":false,"id":43960,"user_name":"Holy","can_delete":false,"product_type":"c1","uid":1061153,"ip_address":"","ucode":"17F008120403D4","user_header":"","comment_is_top":false,"comment_ctime":1543337298,"is_pvip":false,"replies":[{"id":"15721","content":"service的话没有单点的问题啊","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1543371429,"ip_address":"","comment_id":43960,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1543337298","product_id":100015201,"comment_content":"K8s目前这几类负载均衡都属于服务端负载均衡，优点很明显，对客户端友好透明，无需额外的感知工作，缺点是在大流量高并发对性能有要求的场景，负载均衡器可能会变为单点瓶颈，不知道自己理解的对不对","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430572,"discussion_content":"service的话没有单点的问题啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543371429,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1053390,"avatar":"https://static001.geekbang.org/account/avatar/00/10/12/ce/a8c8b5e8.jpg","nickname":"Jason","note":"","ucode":"ABB3F1A63E102A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297143,"discussion_content":"我能理解一楼的话，比如说视频直播场景，所有用户的拉取视频流的请求都从ingress进入到具体的service里各个pod，这没有问题，毕竟一个请求流量也不大，但是各个pod将视频数据通过ingress传送给各个用户的时候，所有的视频流量不就都压在了ingress上？此时，ingress不就成了流量的单点瓶颈？不知道事实是不是这样的……","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596785833,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1201259,"avatar":"https://static001.geekbang.org/account/avatar/00/12/54/6b/80ebeefc.jpg","nickname":"板栗","note":"","ucode":"A40F13DAAAA596","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2221,"discussion_content":"ingress会有瓶颈问题吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563359585,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41867,"user_name":"lane","can_delete":false,"product_type":"c1","uid":1220780,"ip_address":"","ucode":"9F76D2BEB610AA","user_header":"https://static001.geekbang.org/account/avatar/00/12/a0/ac/a23f48e3.jpg","comment_is_top":false,"comment_ctime":1542863428,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542863428","product_id":100015201,"comment_content":"老师，现在有的微服务文章里提到du的上下文根非必须，那么rules的path是可空吗？","like_count":0},{"had_liked":false,"id":41814,"user_name":"Pixar","can_delete":false,"product_type":"c1","uid":1197659,"ip_address":"","ucode":"E653387BA8EA16","user_header":"https://static001.geekbang.org/account/avatar/00/12/46/5b/07858c33.jpg","comment_is_top":false,"comment_ctime":1542854476,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1542854476","product_id":100015201,"comment_content":"nginx-ingress-controller 本身就是运行 nginx 的反向代理吧？ 那是不是这个集群的所有通过 ingree 进来的流量都会通过 nginx-ingress-controller 的 pod 转发至指定后端服务？是这样的话那这个 nginx pod 会不会就成为性能的瓶颈之一？还望老师可以解答下","like_count":0,"discussions":[{"author":{"id":1137214,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqzPOHJjMtAyicMn3bbnmtOqfAKyyvZN3bVa1JqWR5tzoVpMJA93aiaAjKyV3GlEgVtpuNsAQbeTccg/132","nickname":"iqoiwer","note":"","ucode":"D54B2CAD0B588D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381555,"discussion_content":"是的，一般我们用的时候不用deploy，而是改成DS，提高性能","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625124942,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41557,"user_name":"陈小虎","can_delete":false,"product_type":"c1","uid":1218864,"ip_address":"","ucode":"CB8707CE7F0BB7","user_header":"https://static001.geekbang.org/account/avatar/00/12/99/30/231af749.jpg","comment_is_top":false,"comment_ctime":1542805568,"is_pvip":false,"discussion_count":0,"race_medal":3,"score":"1542805568","product_id":100015201,"comment_content":"很多次出问题，检查日志后都是镜像拉不下来:(","like_count":0},{"had_liked":false,"id":41469,"user_name":"陈小虎","can_delete":false,"product_type":"c1","uid":1218864,"ip_address":"","ucode":"CB8707CE7F0BB7","user_header":"https://static001.geekbang.org/account/avatar/00/12/99/30/231af749.jpg","comment_is_top":false,"comment_ctime":1542788540,"is_pvip":false,"replies":[{"id":"14953","content":"没有固定约束","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1542846816,"ip_address":"","comment_id":41469,"utype":1}],"discussion_count":1,"race_medal":3,"score":"1542788540","product_id":100015201,"comment_content":"这种非系统类控制器本来就主要部署在work-node上吧：）","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429813,"discussion_content":"没有固定约束","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542846816,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41172,"user_name":"Johnson","can_delete":false,"product_type":"c1","uid":1218343,"ip_address":"","ucode":"E05B656B238C33","user_header":"https://static001.geekbang.org/account/avatar/00/12/97/27/385b3e33.jpg","comment_is_top":false,"comment_ctime":1542754381,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1542754381","product_id":100015201,"comment_content":"请问老师ingress controller 可以部署在work node上吗？<br>如果是控制器应该只会部署在master节点吧？","like_count":0,"discussions":[{"author":{"id":1137214,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqzPOHJjMtAyicMn3bbnmtOqfAKyyvZN3bVa1JqWR5tzoVpMJA93aiaAjKyV3GlEgVtpuNsAQbeTccg/132","nickname":"iqoiwer","note":"","ucode":"D54B2CAD0B588D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381556,"discussion_content":"看节点标签啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625124989,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}