{"id":160985,"title":"02 | 从哪些维度评判代码质量的好坏？如何具备写出高质量代码的能力？","content":"<p>在我的工作经历中，每当同事评论起项目代码质量的时候，听到的最多的评语就是：“代码写得很烂”或者“代码写得很好”。用“好”“烂”这样的字眼来描述，非常地笼统。当我具体问到底如何烂、如何好的时候，尽管大部分同事都能简单地罗列上几个点，但往往都不够全面、非常零碎，也切不中要害。</p><p>当然，也有一些工程师对如何评价代码质量有所认识，比如，好代码是易扩展、易读、简单、易维护的等等，但他们对于这些评价的理解往往只停留在表面概念上，对于诸多更深入的问题，比如，“怎么才算可读性好？什么样的代码才算易扩展、易维护？可读、可扩展与可维护之间有什么关系？可维护中‘维护’两字该如何理解？”等等，并没有太清晰的认识。</p><p>对于程序员来说，辨别代码写得“好”还是“烂”，是一个非常重要的能力。这也是我们写出好代码的前提。毕竟，如果我们连什么是好代码、什么是烂代码，都分辨不清，又谈何写出好代码呢？</p><p>所以，今天我们就聊一聊关于代码质量评判的相关问题，希望你在学完今天的内容之后，对代码质量的评判有个更加清晰、更加透彻的认识和理解。</p><h2>如何评价代码质量的高低？</h2><p>实际上，咱们平时嘴中常说的“好”和“烂”，是对代码质量的一种描述。“好”笼统地表示代码质量高，“烂”笼统地表示代码质量低。对于代码质量的描述，除了“好”“烂”这样比较简单粗暴的描述方式之外，我们也经常会听到很多其他的描述方式。这些描述方法语义更丰富、更专业、更细化。我搜集整理了一下，罗列在了下面。这些几乎涵盖我们所能听到的描述代码质量的所有常用词汇，你可以看一看。</p><!-- [[[read_end]]] --><blockquote>\n<p>灵活性（flexibility）、可扩展性（extensibility）、可维护性（maintainability）、可读性（readability）、可理解性（understandability）、易修改性（changeability）、可复用（reusability）、可测试性（testability）、模块化（modularity）、高内聚低耦合（high cohesion loose coupling）、高效（high effciency）、高性能（high performance）、安全性（security）、兼容性（compatibility）、易用性（usability）、整洁（clean）、清晰（clarity）、简单（simple）、直接（straightforward）、少即是多（less code is more）、文档详尽（well-documented）、分层清晰（well-layered）、正确性（correctness、bug free）、健壮性（robustness）、鲁棒性（robustness）、可用性（reliability）、可伸缩性（scalability）、稳定性（stability）、优雅（elegant）、好（good）、坏（bad）……</p>\n</blockquote><p>看到如此多的描述词，你可能要问了，我们到底该用哪些词来描述一段代码的质量呢？</p><p>实际上，我们很难通过其中的某个或者某几个词汇来全面地评价代码质量。因为这些词汇都是从不同维度来说的。这就好比，对于一个人的评价，我们需要综合各个方面来给出，比如性格、相貌、能力、财富等等。代码质量高低也是一个综合各种因素得到的结论。我们并不能通过单一的维度去评价一段代码写的好坏。比如，即使一段代码的可扩展性很好，但可读性很差，那我们也不能说这段代码质量高。</p><p>除此之外，不同的评价维度也并不是完全独立的，有些是具有包含关系、重叠关系或者可以互相影响的。比如，代码的可读性好、可扩展性好，就意味着代码的可维护性好。而且，各种评价维度也不是非黑即白的。比如，我们不能简单地将代码分为可读与不可读。如果用数字来量化代码的可读性的话，它应该是一个连续的区间值，而非0、1这样的离散值。</p><p>不过，我们真的可以客观地量化一段代码质量的高低吗？答案是否定的。对一段代码的质量评价，常常有很强的主观性。比如，怎么样的代码才算可读性好，每个人的评判标准都不大一样。这就好比我们去评价一本小说写得是否精彩，本身就是一个很难量化的、非常主观的事情。</p><p>正是因为代码质量评价的主观性，使得这种主观评价的准确度，跟工程师自身经验有极大的关系。越是有经验的工程师，给出的评价也就越准确。相反，资历比较浅的工程师就常常会觉得，没有一个可执行的客观的评价标准作为参考，很难准确地判断一段代码写得好与坏。有的时候，自己觉得代码写得已经够好了，但实际上并不是。所以，这也导致如果没有人指导的话，自己一个人闷头写代码，即便写再多的代码，代码能力也可能一直没有太大提高。</p><h2>最常用的评价标准有哪几个？</h2><p>仔细看前面罗列的所有代码质量评价标准，你会发现，有些词语过于笼统、抽象，比较偏向对于整体的描述，比如优雅、好、坏、整洁、清晰等；有些过于细节、偏重方法论，比如模块化、高内聚低耦合、文档详尽、分层清晰等；有些可能并不仅仅局限于编码，跟架构设计等也有关系，比如可伸缩性、可用性、稳定性等。</p><p>为了做到有的放矢、有重点地学习，我挑选了其中几个最常用的、最重要的评价标准，来详细讲解，其中就包括：可维护性、可读性、可扩展性、灵活性、简洁性（简单、复杂）、可复用性、可测试性。接下来，我们逐一讲解一下。</p><h3>1.可维护性（maintainability）</h3><p>我们首先来看，什么是代码的“可维护性”？所谓的“维护代码”到底包含哪些具体工作？</p><p>落实到编码开发，所谓的“维护”无外乎就是修改bug、修改老的代码、添加新的代码之类的工作。所谓“代码易维护”就是指，在不破坏原有代码设计、不引入新的bug的情况下，能够快速地修改或者添加代码。所谓“代码不易维护”就是指，修改或者添加代码需要冒着极大的引入新bug的风险，并且需要花费很长的时间才能完成。</p><p>我们知道，对于一个项目来说，维护代码的时间远远大于编写代码的时间。工程师大部分的时间可能都是花在修修bug、改改老的功能逻辑、添加一些新的功能逻辑之类的工作上。所以，代码的可维护性就显得格外重要。</p><p>维护、易维护、不易维护这三个概念不难理解。不过，对于实际的软件开发来说，更重要的是搞清楚，如何来判断代码可维护性的好坏。</p><p>实际上，可维护性也是一个很难量化、偏向对代码整体的评价标准，它有点类似之前提到的“好”“坏”“优雅”之类的笼统评价。代码的可维护性是由很多因素协同作用的结果。代码的可读性好、简洁、可扩展性好，就会使得代码易维护；相反，就会使得代码不易维护。更细化地讲，如果代码分层清晰、模块化好、高内聚低耦合、遵从基于接口而非实现编程的设计原则等等，那就可能意味着代码易维护。除此之外，代码的易维护性还跟项目代码量的多少、业务的复杂程度、利用到的技术的复杂程度、文档是否全面、团队成员的开发水平等诸多因素有关。</p><p>所以，从正面去分析一个代码是否易维护稍微有点难度。不过，我们可以从侧面上给出一个比较主观但又比较准确的感受。如果bug容易修复，修改、添加功能能够轻松完成，那我们就可以主观地认为代码对我们来说易维护。相反，如果修改一个bug，修改、添加一个功能，需要花费很长的时间，那我们就可以主观地认为代码对我们来说不易维护。</p><p>你可能会说，这样的评价方式也太主观了吧？没错，是否易维护本来就是针对维护的人来说的。不同水平的人对于同一份代码的维护能力并不是相同的。对于同样一个系统，熟悉它的资深工程师会觉得代码的可维护性还不错，而一些新人因为不熟悉代码，修改bug、修改添加代码要花费很长的时间，就有可能会觉得代码的可维护性不那么好。这实际上也印证了我们之前的观点：代码质量的评价有很强的主观性。</p><h3>2.可读性（readability）</h3><p>软件设计大师Martin Fowler曾经说过：“Any fool can write code that a computer can understand. Good programmers write code that humans can understand.”翻译成中文就是：“任何傻瓜都会编写计算机能理解的代码。好的程序员能够编写人能够理解的代码。”Google内部甚至专门有个认证就叫作Readability。只有拿到这个认证的工程师，才有资格在code review的时候，批准别人提交代码。可见代码的可读性有多重要，毕竟，代码被阅读的次数远远超过被编写和执行的次数。</p><p>我个人认为，代码的可读性应该是评价代码质量最重要的指标之一。我们在编写代码的时候，时刻要考虑到代码是否易读、易理解。除此之外，代码的可读性在非常大程度上会影响代码的可维护性。毕竟，不管是修改bug，还是修改添加功能代码，我们首先要做的事情就是读懂代码。代码读不大懂，就很有可能因为考虑不周全，而引入新的bug。</p><p>既然可读性如此重要，那我们又该如何评价一段代码的可读性呢？</p><p>我们需要看代码是否符合编码规范、命名是否达意、注释是否详尽、函数是否长短合适、模块划分是否清晰、是否符合高内聚低耦合等等。你应该也能感觉到，从正面上，我们很难给出一个覆盖所有评价指标的列表。这也是我们无法量化可读性的原因。</p><p>实际上，code review是一个很好的测验代码可读性的手段。如果你的同事可以轻松地读懂你写的代码，那说明你的代码可读性很好；如果同事在读你的代码时，有很多疑问，那就说明你的代码可读性有待提高了。</p><h3>3.可扩展性（extensibility）</h3><p>可扩展性也是一个评价代码质量非常重要的标准。它表示我们的代码应对未来需求变化的能力。跟可读性一样，代码是否易扩展也很大程度上决定代码是否易维护。那到底什么是代码的可扩展性呢？</p><p>代码的可扩展性表示，我们在不修改或少量修改原有代码的情况下，通过扩展的方式添加新的功能代码。说直白点就是，代码预留了一些功能扩展点，你可以把新功能代码，直接插到扩展点上，而不需要因为要添加一个功能而大动干戈，改动大量的原始代码。</p><p>关于代码的扩展性，在后面讲到“对修改关闭，对扩展开放”这条设计原则的时候，我会来详细讲解，今天我们只需要知道，代码的可扩展性是评价代码质量非常重要的标准就可以了。</p><h3>4.灵活性（flexibility）</h3><p>灵活性也是描述代码质量的一个常用词汇。比如我们经常会听到这样的描述：“代码写得很灵活”。那这里的“灵活”该如何理解呢？</p><p>尽管有很多人用这个词汇来描述代码的质量。但实际上，灵活性是一个挺抽象的评价标准，要给灵活性下个定义也是挺难的。不过，我们可以想一下，什么情况下我们才会说代码写得好灵活呢？我这里罗列了几个场景，希望能引发你自己对什么是灵活性的思考。</p><ul>\n<li>当我们添加一个新的功能代码的时候，原有的代码已经预留好了扩展点，我们不需要修改原有的代码，只要在扩展点上添加新的代码即可。这个时候，我们除了可以说代码易扩展，还可以说代码写得好灵活。</li>\n<li>当我们要实现一个功能的时候，发现原有代码中，已经抽象出了很多底层可以复用的模块、类等代码，我们可以拿来直接使用。这个时候，我们除了可以说代码易复用之外，还可以说代码写得好灵活。</li>\n<li>当我们使用某组接口的时候，如果这组接口可以应对各种使用场景，满足各种不同的需求，我们除了可以说接口易用之外，还可以说这个接口设计得好灵活或者代码写得好灵活。</li>\n</ul><p>从刚刚举的场景来看，如果一段代码易扩展、易复用或者易用，我们都可以称这段代码写得比较灵活。所以，灵活这个词的含义非常宽泛，很多场景下都可以使用。</p><h3>5.简洁性（simplicity）</h3><p>有一条非常著名的设计原则，你一定听过，那就是KISS原则：“Keep It Simple，Stupid”。这个原则说的意思就是，尽量保持代码简单。代码简单、逻辑清晰，也就意味着易读、易维护。我们在编写代码的时候，往往也会把简单、清晰放到首位。</p><p>不过，很多编程经验不足的程序员会觉得，简单的代码没有技术含量，喜欢在项目中引入一些复杂的设计模式，觉得这样才能体现自己的技术水平。实际上，<strong>思从深而行从简，真正的高手能云淡风轻地用最简单的方法解决最复杂的问题。这也是一个编程老手跟编程新手的本质区别之一。</strong></p><p>除此之外，虽然我们都能认识到，代码要尽量写得简洁，符合KISS原则，但怎么样的代码才算足够简洁？不是每个人都能很准确地判断出来这一点。所以，在后面的章节中，当我们讲到KISS原则的时候，我会通过具体的代码实例，详细给你解释，“为什么KISS原则看似非常简单、好理解，但实际上用好并不容易”。今天，我们就暂且不展开详细讲解了。</p><h3>6.可复用性（reusability）</h3><p>代码的可复用性可以简单地理解为，尽量减少重复代码的编写，复用已有的代码。在后面的很多章节中，我们都会经常提到“可复用性”这一代码评价标准。</p><p>比如，当讲到面向对象特性的时候，我们会讲到继承、多态存在的目的之一，就是为了提高代码的可复用性；当讲到设计原则的时候，我们会讲到单一职责原则也跟代码的可复用性相关；当讲到重构技巧的时候，我们会讲到解耦、高内聚、模块化等都能提高代码的可复用性。可见，可复用性也是一个非常重要的代码评价标准，是很多设计原则、思想、模式等所要达到的最终效果。</p><p>实际上，代码可复用性跟DRY（Don’t Repeat Yourself）这条设计原则的关系挺紧密的，所以，在后面的章节中，当我们讲到DRY设计原则的时候，我还会讲更多代码复用相关的知识，比如，“有哪些编程方法可以提高代码的复用性”等。</p><h3>7.可测试性（testability）</h3><p>相对于前面六个评价标准，代码的可测试性是一个相对较少被提及，但又非常重要的代码质量评价标准。代码可测试性的好坏，能从侧面上非常准确地反应代码质量的好坏。代码的可测试性差，比较难写单元测试，那基本上就能说明代码设计得有问题。关于代码的可测试性，我们在重构那一部分，会花两节课的时间来详细讲解。现在，你暂时只需要知道，代码的可测试性非常重要就可以了。</p><h2>如何才能写出高质量的代码？</h2><p>我相信每个工程师都想写出高质量的代码，不想一直写没有成长、被人吐槽的烂代码。那如何才能写出高质量的代码呢？针对什么是高质量的代码，我们刚刚讲到了七个最常用、最重要的评价指标。所以，问如何写出高质量的代码，也就等同于在问，如何写出易维护、易读、易扩展、灵活、简洁、可复用、可测试的代码。</p><p>要写出满足这些评价标准的高质量代码，我们需要掌握一些更加细化、更加能落地的编程方法论，包括面向对象设计思想、设计原则、设计模式、编码规范、重构技巧等。而所有这些编程方法论的最终目的都是为了编写出高质量的代码。</p><p>比如，面向对象中的继承、多态能让我们写出可复用的代码；编码规范能让我们写出可读性好的代码；设计原则中的单一职责、DRY、基于接口而非实现、里式替换原则等，可以让我们写出可复用、灵活、可读性好、易扩展、易维护的代码；设计模式可以让我们写出易扩展的代码；持续重构可以时刻保持代码的可维护性等等。具体这些编程方法论是如何提高代码的可维护性、可读性、可扩展性等等的呢？我们在后面的课程中慢慢来学习。</p><h2>重点回顾</h2><p>今天的内容到此就讲完了。我们来一起回顾一下，你需要重点掌握的几个知识点。</p><p><strong>1.如何评价代码质量的高低？</strong></p><p>代码质量的评价有很强的主观性，描述代码质量的词汇也有很多，比如可读性、可维护性、灵活、优雅、简洁等，这些词汇是从不同的维度去评价代码质量的。它们之间有互相作用，并不是独立的，比如，代码的可读性好、可扩展性好就意味着代码的可维护性好。代码质量高低是一个综合各种因素得到的结论。我们并不能通过单一的维度去评价一段代码的好坏。</p><p><strong>2.最常用的评价标准有哪几个？</strong></p><p>最常用到几个评判代码质量的标准是：可维护性、可读性、可扩展性、灵活性、简洁性、可复用性、可测试性。其中，可维护性、可读性、可扩展性又是提到最多的、最重要的三个评价标准。</p><p><strong>3.如何才能写出高质量的代码？</strong></p><p>要写出高质量代码，我们就需要掌握一些更加细化、更加能落地的编程方法论，这就包含面向对象设计思想、设计原则、设计模式、编码规范、重构技巧等等，这也是我们后面课程学习的重点。</p><h2>课堂讨论</h2><p>除了我今天提到的这些，你觉得还有哪些其他的代码评价标准非常重要？聊一聊你心目中的好代码是什么样子的？</p><p>欢迎在留言区发表你的观点，积极参与讨论。你也可以把这篇文章分享给你的朋友，邀请他一起学习。</p>","comments":[{"had_liked":false,"id":147406,"user_name":"丁丁历险记","can_delete":false,"product_type":"c1","uid":1661704,"ip_address":"","ucode":"A43829E454C067","user_header":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","comment_is_top":false,"comment_ctime":1572862458,"is_pvip":false,"discussion_count":13,"race_medal":0,"score":"1474746644986","product_id":100039001,"comment_content":"笔记：<br>个人理解，代码质量评判<br>1  机器的运行效率 （往往还和可读性相冲突，但又非绝对冲突） ， 有时候算法在没优化好的时候，时间空间是可以一起省下来的。<br>2  代码可管理行数。 好的代码，层次分明，职能分明，让人感受到代码品味。<br>  <br>2  最常用的评价标准。<br>    这块我一直没细分好，经常和同事开玩笑说“代码品味”（尊重大脑的特性，写出可便于维护的代码。程序 = 数据结构+算法   算法分control 相关和logic  相关。  合理的把control 相关与logic 相关进行分离就是非常好的套路 ，时间久了，看到违和感重的代码就很敏感了，主要是要求别把代码写死写散， 像dry 等基础原则都没遵守的，烂用全局变量的，创建对象没用框架的createObj 的，没支持依赖注入的，直接code review 时会指出 ）<br>如何才能写出高质量的代码？<br>    做中学。 我只说我自己，我在每完成一份工作后，都要拿出很大一部分时间来优化重构，自己改自己的代码。 【主要套路来源，代码整洁之道，重构-改善即有代码设计】  这算是我自律的一部分，我很珍惜工作中的开发实践。纯理论的东西学多了，人会飘飘乎乎的，需要实操来落地。<br> ","like_count":344,"discussions":[{"author":{"id":1254656,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/00/3afbab43.jpg","nickname":"88591","note":"","ucode":"04CE3E46455185","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":165156,"discussion_content":"在性能与高质量的代码标准中，会出现冲突的情况。如果性能优先，那么就优选性能。比如用汇编代码。大多数情况下面还是代码质量优先的，毕竟好的代码重从可维护，可扩展，可阅读上面节约的时间比优化性能的时间要少的多，成不也要低的多。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1581257170,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2058510,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/djjK4h3FfPGyllqd7Oc5TpCoJEU6TOcuiarLtAPGrROocibML1OgtUIgtxQDDsia3qqLfZkpCcDykl3l8WHNxzCag/132","nickname":"Geek_63aa00","note":"","ucode":"4AF5D3318F4468","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1254656,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/00/3afbab43.jpg","nickname":"88591","note":"","ucode":"04CE3E46455185","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":321920,"discussion_content":"可以，以实际经验来决定用哪个，总起来说高质量和高性能都具备，而有时候我们做的是根据项目工期而时间没那么多的情况下，优先重构结构从而减少时间。汇编等手段不一定有效果。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604650892,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":165156,"ip_address":""},"score":321920,"extra":""}]},{"author":{"id":1939320,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/97/78/9229749e.jpg","nickname":"未见","note":"","ucode":"EC8F9B0E5F3D9A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":320959,"discussion_content":"最后一句点的很好，理论学多了，人会飘。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1604510023,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1547048,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9b/28/9d89de4d.jpg","nickname":"暒","note":"","ucode":"9C956F418C66BB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43328,"discussion_content":"这个衡量代码的好坏的标准，接地气，我喜欢","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1572868446,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015483,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7e/bb/947c329a.jpg","nickname":"程序员小跃","note":"","ucode":"25BB96E0791A60","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":51071,"discussion_content":"老铁总结的很赞，你提到的书，我还在那里睡觉，尴尬","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573807346,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2097639,"avatar":"https://static001.geekbang.org/account/avatar/00/20/01/e7/0d4ea17d.jpg","nickname":"TapNugget","note":"","ucode":"502BED31148211","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1015483,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7e/bb/947c329a.jpg","nickname":"程序员小跃","note":"","ucode":"25BB96E0791A60","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":374469,"discussion_content":"写的越多代码，越觉得自己的代码原则和设计有问题…","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1621208469,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":51071,"ip_address":""},"score":374469,"extra":""}]},{"author":{"id":1140836,"avatar":"https://static001.geekbang.org/account/avatar/00/11/68/64/756ba667.jpg","nickname":"just code it","note":"","ucode":"9953DAD398F33D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":368484,"discussion_content":"这是陈皓总结的吧，不理解就不要乱说","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618730787,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1661704,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","nickname":"丁丁历险记","note":"","ucode":"A43829E454C067","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1140836,"avatar":"https://static001.geekbang.org/account/avatar/00/11/68/64/756ba667.jpg","nickname":"just code it","note":"","ucode":"9953DAD398F33D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369439,"discussion_content":"陈皓是谁，  如有雷同，有点巧和。\n可能大家看的书类似，例如google  整理术，代码大全等","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1619023905,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":368484,"ip_address":""},"score":369439,"extra":""}]},{"author":{"id":2058510,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/djjK4h3FfPGyllqd7Oc5TpCoJEU6TOcuiarLtAPGrROocibML1OgtUIgtxQDDsia3qqLfZkpCcDykl3l8WHNxzCag/132","nickname":"Geek_63aa00","note":"","ucode":"4AF5D3318F4468","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":322005,"discussion_content":"你的尊重大脑，我很受启发，是的，设计就是服务人类的，人类思维去做些事情，各种设计模式最后都是为了设计合理性提供工具，借助前人的智慧（设计模式）去不断提炼重构自己的代码（好比做题刷题，印脑子里），定期与同事讨论结构合理性（code review）。就像写文章一样错落有致，层次分明。你说的control和logic分开，我想linux设计里边很多这种思想","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604662144,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1364141,"avatar":"https://static001.geekbang.org/account/avatar/00/14/d0/ad/584a4aa1.jpg","nickname":"NieXY","note":"","ucode":"C131B9A44CB55C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282440,"discussion_content":"算法分control和logic，有没有实际的例子，望指教","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591972542,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1622209,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c0/c1/414d5d1b.jpg","nickname":"_yh葱","note":"","ucode":"FA899711E91113","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":190206,"discussion_content":"接地气，也喜欢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582905706,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1034922,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ca/aa/2ce2bdce.jpg","nickname":"。。","note":"","ucode":"E75F20D89106B5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45271,"discussion_content":"框架创建对象这个不太明白，是所有的对象都要用框架来创建吗？比如局部的呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573016935,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1016299,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/81/eb/04c16c3e.jpg","nickname":"silence_wh","note":"","ucode":"95FB5D6C02EC89","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43876,"discussion_content":"这个标准挺好的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572914951,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147814,"user_name":"时光勿念","can_delete":false,"product_type":"c1","uid":1025003,"ip_address":"","ucode":"72C8EC5A62C700","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a3/eb/d26459ae.jpg","comment_is_top":false,"comment_ctime":1572909808,"is_pvip":false,"discussion_count":18,"race_medal":0,"score":"1096789570288","product_id":100039001,"comment_content":"好看的代码千篇一律，垃圾的代码花样百出","like_count":256,"discussions":[{"author":{"id":1780511,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/2b/1f/ee760e4c.jpg","nickname":"小福贵","note":"","ucode":"04DC99E94E369A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":97242,"discussion_content":"奈何没文化，一句卧槽行天下","likes_number":12,"is_delete":false,"is_hidden":false,"ctime":1577109125,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1215219,"avatar":"https://static001.geekbang.org/account/avatar/00/12/8a/f3/7c89d00e.jpg","nickname":"Presley","note":"","ucode":"D8F125835F4903","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":196905,"discussion_content":"幸福的家庭大多类似，不幸的家庭各有各的不幸","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1583383381,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1045577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f4/49/2add4f6b.jpg","nickname":"北极的大企鹅","note":"","ucode":"8935346D08E109","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1215219,"avatar":"https://static001.geekbang.org/account/avatar/00/12/8a/f3/7c89d00e.jpg","nickname":"Presley","note":"","ucode":"D8F125835F4903","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":354305,"discussion_content":"还得过啊","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1615272066,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":196905,"ip_address":""},"score":354305,"extra":""}]},{"author":{"id":1002938,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4d/ba/83e6dcbf.jpg","nickname":"skyline","note":"","ucode":"4E73F9049751F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":46225,"discussion_content":"同九年，何独秀","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1573132965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1451295,"avatar":"https://static001.geekbang.org/account/avatar/00/16/25/1f/8e304ec0.jpg","nickname":"卖火柴的托儿索","note":"","ucode":"A9C7412E75DA82","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44056,"discussion_content":"腰间盘同学，请你克制一下，不要这么突出","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1572926198,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44606,"discussion_content":"可能是我基础太差，对于力扣#7 整数反转，官方给出的解题思路很难理解，但时间复杂度是log(x) ，空间复杂度是O(1) ，真看不懂。自己是通过指针交换实现的，虽然易懂，但时间复杂度是O(n) ，没有官方的高效。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1572958736,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2071327,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/9b/1f/9f3379d3.jpg","nickname":"Geek_7f21d2","note":"","ucode":"12204FDAD951BE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292903,"discussion_content":"然后呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595381345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":44606,"ip_address":""},"score":292903,"extra":""},{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2071327,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/9b/1f/9f3379d3.jpg","nickname":"Geek_7f21d2","note":"","ucode":"12204FDAD951BE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293096,"discussion_content":"解答成功","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595430924,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":292903,"ip_address":""},"score":293096,"extra":""}]},{"author":{"id":1426493,"avatar":"https://static001.geekbang.org/account/avatar/00/15/c4/3d/1a89f1b3.jpg","nickname":"Kevin Liao","note":"","ucode":"C95900FE702E40","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44223,"discussion_content":"太优秀了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1572940238,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2664142,"avatar":"","nickname":"QL","note":"","ucode":"B2EA2101793B56","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":415177,"discussion_content":"优秀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637021931,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2833619,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/3c/d3/fab9d588.jpg","nickname":"探雪","note":"","ucode":"2332650D9C8D54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412496,"discussion_content":"这个总结秀我一脸，哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636192097,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1622696,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c2/a8/f3f8f5d2.jpg","nickname":"一格状语","note":"","ucode":"EBA9ED5F97416D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394559,"discussion_content":"yyds","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631937043,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1115232,"avatar":"https://static001.geekbang.org/account/avatar/00/11/04/60/64d166b6.jpg","nickname":"Fan","note":"","ucode":"3BF28670FD9407","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380838,"discussion_content":"这个总结优秀。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624720350,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2055554,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/5d/82/81b2ba91.jpg","nickname":"keep_it_real","note":"","ucode":"F5057CAF752FF3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366124,"discussion_content":"优秀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617963449,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1983034,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/42/3a/bca96a7f.jpg","nickname":"人什么人","note":"","ucode":"052538EFD0B1D6","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":334065,"discussion_content":"太优秀了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607729892,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1862936,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/6d/18/e05f72ee.jpg","nickname":"冰原的苍蓝星","note":"","ucode":"84120EC31A63AF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":254077,"discussion_content":"秀啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588294034,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1181647,"avatar":"https://static001.geekbang.org/account/avatar/00/12/07/cf/b0d6fe74.jpg","nickname":"L.","note":"","ucode":"46A2F679C094E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":229018,"discussion_content":"太优秀了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586602872,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1938739,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/95/33/7d4b08ec.jpg","nickname":"乐朦","note":"","ucode":"C5A666DB0521E0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":216448,"discussion_content":"精辟","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585452224,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147476,"user_name":"aof","can_delete":false,"product_type":"c1","uid":1062864,"ip_address":"","ucode":"5815D63C4926BC","user_header":"https://static001.geekbang.org/account/avatar/00/10/37/d0/26975fba.jpg","comment_is_top":false,"comment_ctime":1572865925,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"723127371653","product_id":100039001,"comment_content":"“思从深而行从简，真正的高手能云淡风轻地用最简单的方法解决最复杂的问题。” —— 这句话是写代码的精髓","like_count":169,"discussions":[{"author":{"id":1469608,"avatar":"https://static001.geekbang.org/account/avatar/00/16/6c/a8/1922a0f5.jpg","nickname":"郑祖煌","note":"","ucode":"49A0D2E3279826","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301140,"discussion_content":"大道至简。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1598421892,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2833619,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/3c/d3/fab9d588.jpg","nickname":"探雪","note":"","ucode":"2332650D9C8D54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412497,"discussion_content":"思之深，行之简","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636192121,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1060202,"avatar":"https://static001.geekbang.org/account/avatar/00/10/2d/6a/323163df.jpg","nickname":"Mao","note":"","ucode":"14CC85BC590A71","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318158,"discussion_content":"我的一个同事，恰恰相反，喜欢放大问题，用复杂的方式，解决简单的问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603670053,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1254656,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/00/3afbab43.jpg","nickname":"88591","note":"","ucode":"04CE3E46455185","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":165147,"discussion_content":"确实，肯定写代码是越少越好，至少节约时间，但是用很少的代码完成需求就不容易了。\n代码量少了，可读性就提高了，可读性提高了，可维护性就提高了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581256854,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1738062,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/85/4e/1cecdfba.jpg","nickname":"Rongfan Leo","note":"","ucode":"9E65C1AA80CE2C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1254656,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/00/3afbab43.jpg","nickname":"88591","note":"","ucode":"04CE3E46455185","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":228957,"discussion_content":"代码量少，可读性会更好吗","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1586594841,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":165147,"ip_address":""},"score":228957,"extra":""}]},{"author":{"id":1187122,"avatar":"https://static001.geekbang.org/account/avatar/00/12/1d/32/005c7ba4.jpg","nickname":"大熊","note":"","ucode":"8163EC5BC6A519","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":63762,"discussion_content":"大道至简的境界呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574908004,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148201,"user_name":"深藏Blue","can_delete":false,"product_type":"c1","uid":1031616,"ip_address":"","ucode":"CBEBCBDA47281C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bd/c0/57b06721.jpg","comment_is_top":false,"comment_ctime":1572957841,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"667292888721","product_id":100039001,"comment_content":"我理解的好代码：<br>1. 当你读我代码的时候，我已经不在了，但你依然能够清楚清晰的明白我要传递的信息<br>2. 当程序出错时，一方面我汇报的错误信息能够帮你找出你的错误在哪; 另一方面，你能准确告诉我，我到底错哪了，而不是说：&quot;xx接口报错了，你看下怎么回事&quot;<br>3. 当你需要造个轮子的时候，我的代码能够作为现成的轮毂，你只需要再配上其他的组装一下就行","like_count":156,"discussions":[{"author":{"id":1235611,"avatar":"https://static001.geekbang.org/account/avatar/00/12/da/9b/e0ef47df.jpg","nickname":"凭实力写bug","note":"","ucode":"6F772551F18935","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571663,"discussion_content":"现实是你写的代码别人看不懂， 公司里你才是无可替代的","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1652338089,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2848276,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIRrgrGQYmic2V6bkmbtfXXrsjk3boxpt8KyBuQvazSVHpvtzzvdT4p192jdG5JgIN1nPVziav8Auew/132","nickname":"Geek_38d160","note":"","ucode":"AE3588D61FBB6D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536822,"discussion_content":"【我已经不在了】是怎么回事？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1638876225,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1178951,"avatar":"https://static001.geekbang.org/account/avatar/00/11/fd/47/78ee760d.jpg","nickname":"学习，学习，再学习","note":"","ucode":"3B07D19CCFB15C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378678,"discussion_content":"精辟 点赞！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623331125,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1002201,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/d9/75dd7cf9.jpg","nickname":"Mew151","note":"","ucode":"D4793F5874F345","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278106,"discussion_content":"第一条很赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591151177,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1032345,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c0/99/259a412f.jpg","nickname":"Geeker","note":"","ucode":"9937127DE96D78","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":223264,"discussion_content":"👍🏻","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586198296,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1938739,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/95/33/7d4b08ec.jpg","nickname":"乐朦","note":"","ucode":"C5A666DB0521E0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":216449,"discussion_content":"高手","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585452296,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147856,"user_name":"小北","can_delete":false,"product_type":"c1","uid":1120156,"ip_address":"","ucode":"A428FC9B771108","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ercic1LB9N9P1kArjS1f3hOo641elcwFGHWrxeYF4yZjfwiaydLwVeM4ZJEmVkib66GtJoE0cr6Dviauw/132","comment_is_top":false,"comment_ctime":1572914419,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"370940101875","product_id":100039001,"comment_content":"除了小争哥提到的七个评价标准，我认为还有一个评价标准：易debug。在日常工作中，经常要追查各种线上case，代码是否易于debug，会非常影响工程师的追查效率。比如是否有打印详细的日志，是否有debug干涉点可以在debug模式下打印详细的线上请求信息便于快速定位问题。当然，这一点也可以放在可维护性中。","like_count":87,"discussions":[{"author":{"id":1547327,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9c/3f/ba9705e9.jpg","nickname":"杨娟","note":"","ucode":"52DF40E4921202","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":362033,"discussion_content":"易debug 易测试最实用","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1616831818,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1395629,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIiaOoIa1KJvwu6LgMc46ibFI7Intz5Xxic7dJbpwVDqD3KlAwPkXR7nqAwOAzQibnDOaSVxwG9OciaurQ/132","nickname":"Codyyyyyy","note":"","ucode":"EAE77EDB7C7153","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318299,"discussion_content":"debug就是可维护性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603700829,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1590960,"avatar":"https://static001.geekbang.org/account/avatar/00/18/46/b0/4f45e06e.jpg","nickname":"天雨流芳","note":"","ucode":"81657BA9C900FE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45845,"discussion_content":"易debug感觉跟可测试性沾边，出bug了，拉着入参，跑测试即可。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573090253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1120156,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ercic1LB9N9P1kArjS1f3hOo641elcwFGHWrxeYF4yZjfwiaydLwVeM4ZJEmVkib66GtJoE0cr6Dviauw/132","nickname":"小北","note":"","ucode":"A428FC9B771108","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1590960,"avatar":"https://static001.geekbang.org/account/avatar/00/18/46/b0/4f45e06e.jpg","nickname":"天雨流芳","note":"","ucode":"81657BA9C900FE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45892,"discussion_content":"很多时候是线上case需要研发立刻debug，测试是无法覆盖这种场景的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573095162,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":45845,"ip_address":""},"score":45892,"extra":""},{"author":{"id":1464013,"avatar":"https://static001.geekbang.org/account/avatar/00/16/56/cd/0add8290.jpg","nickname":"刘学习来学习","note":"","ucode":"5078B1EC8D8A66","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1120156,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ercic1LB9N9P1kArjS1f3hOo641elcwFGHWrxeYF4yZjfwiaydLwVeM4ZJEmVkib66GtJoE0cr6Dviauw/132","nickname":"小北","note":"","ucode":"A428FC9B771108","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":112669,"discussion_content":"推荐一下 阿里的阿尔萨斯 开源工具\n","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1577877909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":45892,"ip_address":""},"score":112669,"extra":""},{"author":{"id":1032345,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c0/99/259a412f.jpg","nickname":"Geeker","note":"","ucode":"9937127DE96D78","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1120156,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ercic1LB9N9P1kArjS1f3hOo641elcwFGHWrxeYF4yZjfwiaydLwVeM4ZJEmVkib66GtJoE0cr6Dviauw/132","nickname":"小北","note":"","ucode":"A428FC9B771108","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":223265,"discussion_content":"易复现，比如拥有大量周边配套，方便复现测试未覆盖的线上问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586198465,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":45892,"ip_address":""},"score":223265,"extra":""}]}]},{"had_liked":false,"id":147503,"user_name":"burning ‍微信超級會員","can_delete":false,"product_type":"c1","uid":1229789,"ip_address":"","ucode":"6B82995489A2BB","user_header":"https://static001.geekbang.org/account/avatar/00/12/c3/dd/a9ff98e7.jpg","comment_is_top":false,"comment_ctime":1572867174,"is_pvip":false,"discussion_count":8,"race_medal":0,"score":"177666526310","product_id":100039001,"comment_content":"稳定性很重要 尤其在前后端分离开发时。说好了按约定的接口规则开发 可联调时各种出错 甚至接口崩溃报异常。前端成测试了","like_count":41,"discussions":[{"author":{"id":1368038,"avatar":"https://static001.geekbang.org/account/avatar/00/14/df/e6/bd1b3c0b.jpg","nickname":"Jesse","note":"","ucode":"727CA882B84DA0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43942,"discussion_content":"联调时接口崩溃异常，有时候我也会出现这种情况（我写后台的），我总结了一个重要原因，方法的上下限没校验，导致各种参数异常。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1572918149,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1206787,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6a/03/cb597311.jpg","nickname":"远心","note":"","ucode":"1157202C315655","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1368038,"avatar":"https://static001.geekbang.org/account/avatar/00/14/df/e6/bd1b3c0b.jpg","nickname":"Jesse","note":"","ucode":"727CA882B84DA0","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":46575,"discussion_content":"方法的上下限是啥意思？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573183519,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":43942,"ip_address":""},"score":46575,"extra":""},{"author":{"id":1736676,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/7f/e4/60bd025a.jpg","nickname":"FlyW","note":"","ucode":"6F2F7D4385CBD7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1206787,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6a/03/cb597311.jpg","nickname":"远心","note":"","ucode":"1157202C315655","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":47515,"discussion_content":"应该说说极值，比如最大值和最小值","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573356959,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":46575,"ip_address":""},"score":47515,"extra":""},{"author":{"id":1368038,"avatar":"https://static001.geekbang.org/account/avatar/00/14/df/e6/bd1b3c0b.jpg","nickname":"Jesse","note":"","ucode":"727CA882B84DA0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1206787,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6a/03/cb597311.jpg","nickname":"远心","note":"","ucode":"1157202C315655","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":47614,"discussion_content":"方法参数的范围","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573380688,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":46575,"ip_address":""},"score":47614,"extra":""}]},{"author":{"id":1141612,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6b/6c/1e097d82.jpg","nickname":"donglu","note":"","ucode":"427B50B0BCC559","race_medal":2,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43863,"discussion_content":"后端需要自测或者必须要有单元测试","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1572914459,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2032840,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/04/c8/3c7af100.jpg","nickname":"Javatar","note":"","ucode":"E216645CDF632C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297162,"discussion_content":"这个主要是健壮性吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596790125,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1039813,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/dd/c5/9ae99a7f.jpg","nickname":"¾阳光","note":"","ucode":"C67D0E18F6158D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295352,"discussion_content":"边缘case嘛","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596173287,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150396,"user_name":"郑童文","can_delete":false,"product_type":"c1","uid":1030733,"ip_address":"","ucode":"3D193715CB8549","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ba/4d/7ba09ff0.jpg","comment_is_top":false,"comment_ctime":1573527169,"is_pvip":false,"replies":[{"id":"58370","content":"是的，扩展性和可读性有的时候是相冲突的，后面会讲到的。","user_name":"作者回复","comment_id":150396,"uid":"1190123","ip_address":"","utype":1,"ctime":1573789969,"user_name_real":"王争"}],"discussion_count":3,"race_medal":0,"score":"169077251713","product_id":100039001,"comment_content":"个人感觉，有的时候为了提高代码的可扩展性和可复用性 就会抽象出好多的接口，类和方法。 然后代码的简洁性和可读性就降低了。不知道我这样的感觉对不对？请问老师如何看待这个问题？","like_count":39,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474147,"discussion_content":"是的，扩展性和可读性有的时候是相冲突的，后面会讲到的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573789969,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1360712,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c3/48/3a739da6.jpg","nickname":"天草二十六","note":"","ucode":"3165EE3007527B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":216188,"discussion_content":"所以要都知道模式，套路深没关系，关键是大家都懂否","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585408558,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1186089,"avatar":"https://static001.geekbang.org/account/avatar/00/12/19/29/4a8214b7.jpg","nickname":"Bug Killer","note":"","ucode":"2741A206F504E1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":50539,"discussion_content":"我觉得那是为了提高扩展性和后期的可维护性，把大概的逻辑写在抽象层，具体的实现卸载具体的类里面，我觉得是这样。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573733084,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148685,"user_name":"小毅","can_delete":false,"product_type":"c1","uid":1016799,"ip_address":"","ucode":"5651C740D68038","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/hg9Tsg2iaBeG6Q5mxiczjw1ph0OvhKziblEIiaOxg4gwQ0Dgia7Fw7pDQ0mM8AL5SJAm2Yavk1RmBJrFd9jKPBQRkOw/132","comment_is_top":false,"comment_ctime":1573049132,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"134717035308","product_id":100039001,"comment_content":"借用clean code中的标准，code review时WTF&#47;min是最好的评判指标😏<br>个人理解好代码最重要的标准就是可读性，相对于可扩展和灵活，由于很多项目一开始并不清楚后续迭代的方向，过早引入过多的设计，反而会让项目臃肿，可读性特别差，后续反而更不好维护～<br>另外，对于一个team来说，我觉得好代码有一个非常重要的标准就是风格一致性，代码写的像一个人写的那这个team就是真的很厉害","like_count":31,"discussions":[{"author":{"id":1032345,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c0/99/259a412f.jpg","nickname":"Geeker","note":"","ucode":"9937127DE96D78","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":223266,"discussion_content":"看别人写的高端代码也会情不自禁的说一句：“卧槽”୧😂୨","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1586198540,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2884274,"avatar":"","nickname":"Geek_79f317","note":"","ucode":"CE27E7ED63C49C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543968,"discussion_content":"对于前端android 来说，页面通用的和业务没有关系的可以封装服用，基于业务的，越不封装，越好用，后面的修改，基本没有成本","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641368288,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1541022,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/9e/2f4aba1b.jpg","nickname":"thunder","note":"","ucode":"5569DCFFB90F19","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376494,"discussion_content":"这点我深有体会，同一个team写的代码风格各异","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622164534,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1745665,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/a3/01/07190654.jpg","nickname":"Jnnes","note":"","ucode":"23F45CD6AEE838","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":50982,"discussion_content":"赞同","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573796442,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148618,"user_name":"斐波那契","can_delete":false,"product_type":"c1","uid":1464006,"ip_address":"","ucode":"85E2EBC01392B1","user_header":"https://static001.geekbang.org/account/avatar/00/16/56/c6/0b449bc6.jpg","comment_is_top":false,"comment_ctime":1573038868,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"100357286676","product_id":100039001,"comment_content":"在上一家公司提到一个标准 就是写的单元测试不能依赖于环境 不能在你的机子上能跑换到别的机子上就不能跑了 当时项目中跑测试的时候都是直接在内存中创建需要的表 然后把测试用到的数据插入进去然后在一条一条跑","like_count":23,"discussions":[{"author":{"id":1133194,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4a/8a/c1069412.jpg","nickname":"makermade","note":"","ucode":"03386B90CB8F20","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":220983,"discussion_content":"本来就应该这样啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585958224,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1464006,"avatar":"https://static001.geekbang.org/account/avatar/00/16/56/c6/0b449bc6.jpg","nickname":"斐波那契","note":"","ucode":"85E2EBC01392B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1133194,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4a/8a/c1069412.jpg","nickname":"makermade","note":"","ucode":"03386B90CB8F20","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":222117,"discussion_content":"关键是很多企业都不是这样 都是怎么简单粗暴怎么来","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586097637,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":220983,"ip_address":""},"score":222117,"extra":""}]},{"author":{"id":1241183,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f0/5f/25942dfb.jpg","nickname":"地铁林黛玉","note":"","ucode":"3D35D965E54649","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":218369,"discussion_content":"刚刷评论看到，请问这是怎么实现的呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585653279,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1464013,"avatar":"https://static001.geekbang.org/account/avatar/00/16/56/cd/0add8290.jpg","nickname":"刘学习来学习","note":"","ucode":"5078B1EC8D8A66","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":112670,"discussion_content":"就是使用类似h2那种数据库作为数据来源","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577877952,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148067,"user_name":"Jackey","can_delete":false,"product_type":"c1","uid":1063751,"ip_address":"","ucode":"125DE81993FEDD","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/47/f6c772a1.jpg","comment_is_top":false,"comment_ctime":1572935726,"is_pvip":false,"discussion_count":9,"race_medal":0,"score":"91767248942","product_id":100039001,"comment_content":"大道至简，一次面试中，我写了半页纸的代码被面试官3行实现的事对我打击很大…","like_count":22,"discussions":[{"author":{"id":1048918,"avatar":"https://static001.geekbang.org/account/avatar/00/10/01/56/03fb63d9.jpg","nickname":"于留月","note":"","ucode":"DE3516198CF1B2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44821,"discussion_content":"我觉得那不是代码质量的问题，是解题思路的问题！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1572968230,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1063751,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3b/47/f6c772a1.jpg","nickname":"Jackey","note":"","ucode":"125DE81993FEDD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1048918,"avatar":"https://static001.geekbang.org/account/avatar/00/10/01/56/03fb63d9.jpg","nickname":"于留月","note":"","ucode":"DE3516198CF1B2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44879,"discussion_content":"不是啊，他是按我的思路来的，只能说我当时确实非常菜😂","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1572970371,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":44821,"ip_address":""},"score":44879,"extra":""},{"author":{"id":1048918,"avatar":"https://static001.geekbang.org/account/avatar/00/10/01/56/03fb63d9.jpg","nickname":"于留月","note":"","ucode":"DE3516198CF1B2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1063751,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3b/47/f6c772a1.jpg","nickname":"Jackey","note":"","ucode":"125DE81993FEDD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44910,"discussion_content":"都是这么过来的，咱们大学教育最缺少的就是没教会你如何思考","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1572974111,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":44879,"ip_address":""},"score":44910,"extra":""},{"author":{"id":1048918,"avatar":"https://static001.geekbang.org/account/avatar/00/10/01/56/03fb63d9.jpg","nickname":"于留月","note":"","ucode":"DE3516198CF1B2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1063751,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3b/47/f6c772a1.jpg","nickname":"Jackey","note":"","ucode":"125DE81993FEDD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44913,"discussion_content":"我以后教育孩子，要更注重思维模式，知识没有想像中那么重要，用到自然会学","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1572974256,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":44879,"ip_address":""},"score":44913,"extra":""}]},{"author":{"id":1510154,"avatar":"https://static001.geekbang.org/account/avatar/00/17/0b/0a/36968d91.jpg","nickname":"Geek_GuoYuying","note":"","ucode":"53CFF7437B43E0","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544013,"discussion_content":"不会是你写的递推和面试官写的递归？🙃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641379579,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1338247,"avatar":"https://static001.geekbang.org/account/avatar/00/14/6b/87/20527fa0.jpg","nickname":"张阔","note":"","ucode":"404E4431B03836","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":315791,"discussion_content":"难道是汉诺塔？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603327561,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1070286,"avatar":"https://static001.geekbang.org/account/avatar/00/10/54/ce/92029d2f.jpg","nickname":"子夜2104","note":"","ucode":"C4FF54AEA6002F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":254608,"discussion_content":"好奇 那三行代码是啥。。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588337173,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1730305,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/67/01/44626cb9.jpg","nickname":"爱水人家","note":"","ucode":"0C94C6ACBC9CEB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":69247,"discussion_content":"感觉这种情况，明显就是没有用STL中现存的算法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575275626,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149096,"user_name":"岁月如歌","can_delete":false,"product_type":"c1","uid":1428828,"ip_address":"","ucode":"1AEBD6F79941B7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/QFE00aXGzaS6ibbfJSJsDrpIkqs0OrIYjzZv6L9vZmMhOlut2j24iaeZb0MCQazToE6FRXN960nNiaTrsmw09YjGw/132","comment_is_top":false,"comment_ctime":1573140406,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"70292617142","product_id":100039001,"comment_content":"我对好代码理解：<br>1、具备统一的代码规范：类、方法、变量命名达意；代码核心逻辑注释清晰；(可以遵循《阿里巴巴 Java开发手册》）<br>2、代码模块分层清晰：类似框架层面controller、service、handler、mapper各司其职。 而在单独的业务开发中也应该借鉴，如争哥说的高内聚、低耦合的特点。<br>3、每个方法代码不易过长，复杂的业务逻辑应该拆分成多个职责单一对方法，进而降低难度，也即保证可读性和灵活性。<br>4、详尽的wiki文档 和 业务主流程图。很多互联网公司最流行的就是“口口相传”，对刚接锅的兄弟简直是场灾难，只能一点点啃代码，极大降低工作效率。<br>5、单元测试junit test。高质量代码必备，该点与第2、第3点是息息相关。个人觉得能写出好的junit test case 才能真正显示码代码功力。<br>","like_count":16,"discussions":[{"author":{"id":1198158,"avatar":"https://static001.geekbang.org/account/avatar/00/12/48/4e/51896855.jpg","nickname":"落风","note":"","ucode":"D70B221D22A439","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560171,"discussion_content":"代码即文档，非必要不用文档。这个得结合一些方法论落地，比如DDD，关键文档不可少","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649220826,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147624,"user_name":"赌神很低调","can_delete":false,"product_type":"c1","uid":1168545,"ip_address":"","ucode":"1066778E1EDF26","user_header":"https://static001.geekbang.org/account/avatar/00/11/d4/a1/8bc8e7e1.jpg","comment_is_top":false,"comment_ctime":1572874009,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"65997383449","product_id":100039001,"comment_content":"好代码就像一篇好文章，层次分明，用词贴切，简洁素雅，形象化抽象，脉络化复杂，而且有趣，吸引你通宵看完，然后合上书本，意犹未尽。","like_count":16,"discussions":[{"author":{"id":1711057,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/1b/d1/0c9e20f8.jpg","nickname":"CH0918","note":"","ucode":"DCADD098A62766","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":47654,"discussion_content":"真存在这一的代码吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573386568,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150048,"user_name":"xiong","can_delete":false,"product_type":"c1","uid":1099375,"ip_address":"","ucode":"C1BFD9EF96372F","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/6f/ac3003fa.jpg","comment_is_top":false,"comment_ctime":1573453416,"is_pvip":false,"replies":[{"id":"58376","content":"多去看看开源优秀的代码如何写的，我觉得比较有帮助。","user_name":"作者回复","comment_id":150048,"uid":"1190123","ip_address":"","utype":1,"ctime":1573790477,"user_name_real":"王争"}],"discussion_count":4,"race_medal":0,"score":"61702995560","product_id":100039001,"comment_content":"所在的公司也很少有code review 的流程，所以有时候都无法评估自己写的代码是好还是坏。这种情况该如何去提高自己的code 水平呢？","like_count":14,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474048,"discussion_content":"多去看看开源优秀的代码如何写的，我觉得比较有帮助。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573790477,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1609871,"avatar":"https://static001.geekbang.org/account/avatar/00/18/90/8f/9c691a5f.jpg","nickname":"奔跑的码仔","note":"","ucode":"AB3B02B07B8B8C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295488,"discussion_content":"优秀的代码可以提升自己的代码品味","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596206511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1224708,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZpzZqvib4bzgfFb6Wt7fP2k4wefKYaoPwza1L19UGalddjREELPd6zAjyibdHJ7jxB2xtZmSuJjuA/132","nickname":"seele","note":"","ucode":"1824AA95FF1DF1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":163039,"discussion_content":"java的集大成框架Spring的源码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581043689,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1259613,"avatar":"https://static001.geekbang.org/account/avatar/00/13/38/5d/5b427e60.jpg","nickname":"Miracle","note":"","ucode":"1DF29700FEE22C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49385,"discussion_content":"同感，小公司。没有好代码参考，也没有code review。没法进步","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573574201,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148290,"user_name":"开发小能手","can_delete":false,"product_type":"c1","uid":1107899,"ip_address":"","ucode":"3ED813CBE77009","user_header":"https://static001.geekbang.org/account/avatar/00/10/e7/bb/18eb89fd.jpg","comment_is_top":false,"comment_ctime":1572968763,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"57407543611","product_id":100039001,"comment_content":"我听过最牛逼的一句话：“什么样的代码都能写、这不是工期太紧吗？” 然后旁边的小领导乐呵呵的来一句：“对”。","like_count":13},{"had_liked":false,"id":148555,"user_name":"Michael","can_delete":false,"product_type":"c1","uid":1066768,"ip_address":"","ucode":"BD6908DAA347A4","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/10/c23b2457.jpg","comment_is_top":false,"comment_ctime":1573029936,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"53112637488","product_id":100039001,"comment_content":"高质量的代码就好比讲了一个好故事，编程的本质是沟通。<br>编程是给未来的未知人讲故事，你无法知道将来这个人是谁，他都懂什么，他经历过什么，这个系统将来已经是什么样子了。我们需要在这种无知，缺乏信息的情况下做决定，从千万种把这件事做出来的方法里，选出你觉得最能把这个故事给讲好的那种方式，把故事写下来。编程是一种沟通，沟通是一种艺术，用程序沟通则是一门非常有意思的艺术。 coding is all about the art of communication！","like_count":12,"discussions":[{"author":{"id":1451910,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep3DicN9rHZiblqUmR1icKl5FoSJnibSibkdm2nHaibDwDatI3G9iaib5e7FQ0fJgiahR5VEqLFh8ZQBFmdBzw/132","nickname":"追风少年刘全有","note":"","ucode":"A727759687C963","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":207484,"discussion_content":"编程先是人跟机器的沟通，更高级的是跟未来的未知人沟通","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584500375,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147437,"user_name":"SweetyTang","can_delete":false,"product_type":"c1","uid":1601101,"ip_address":"","ucode":"5EB1431FA66F1D","user_header":"https://static001.geekbang.org/account/avatar/00/18/6e/4d/22de9c0e.jpg","comment_is_top":false,"comment_ctime":1572863901,"is_pvip":false,"replies":[{"id":"57061","content":"是的！","user_name":"作者回复","comment_id":147437,"uid":"1190123","ip_address":"","utype":1,"ctime":1572947802,"user_name_real":"王争"}],"discussion_count":3,"race_medal":0,"score":"53112471453","product_id":100039001,"comment_content":"争哥，好的代码是不是也得考虑错误处理","like_count":12,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473246,"discussion_content":"是的！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572947802,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1240465,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ed/91/1d332031.jpg","nickname":"我能走多远","note":"","ucode":"07DF5D5DADFA3C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43457,"discussion_content":"代码的健壮性","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1572875447,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1601101,"avatar":"https://static001.geekbang.org/account/avatar/00/18/6e/4d/22de9c0e.jpg","nickname":"SweetyTang","note":"","ucode":"5EB1431FA66F1D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43543,"discussion_content":"嗯，就是健壮性，给你点赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572880720,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149310,"user_name":"条","can_delete":false,"product_type":"c1","uid":1203836,"ip_address":"","ucode":"6F8679175256E3","user_header":"https://static001.geekbang.org/account/avatar/00/12/5e/7c/94af3f5e.jpg","comment_is_top":false,"comment_ctime":1573189132,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"44522862092","product_id":100039001,"comment_content":"写代码其实也可以像写故事一样，每个方法就当成一个情节来描述，方法不要太大，想表述的东西也要单一，当然要有个主线，就是主方法，让读代码的人一眼看下去就有了一个大概的了解，知道这段代码大致做了什么，这样阅读起来也会比较愉悦","like_count":10},{"had_liked":false,"id":148300,"user_name":"于留月","can_delete":false,"product_type":"c1","uid":1048918,"ip_address":"","ucode":"DE3516198CF1B2","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/56/03fb63d9.jpg","comment_is_top":false,"comment_ctime":1572970420,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"44522643380","product_id":100039001,"comment_content":"你觉得还有哪些其他的代码评价标准非常重要？<br>健壮性：程序应该具备较强的鲁棒性，极低地线上崩溃率，流畅的应用体验，高并发高承载能力，错误处理：日志上报或者现场恢复等等；<br>安全性：涉及到支付、金融、社交私密信息、商业等领域的安全，及反编译反逆向；<br><br>聊一聊你心目中的好代码是什么样子的？<br><br>除了具备文中提到的7个标准，应该明晰代码的边界，适用场景等。<br>","like_count":10,"discussions":[{"author":{"id":2277251,"avatar":"https://static001.geekbang.org/account/avatar/00/22/bf/83/c83be5a3.jpg","nickname":"eHackyd","note":"","ucode":"E6E7994FBDF0A5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":562679,"discussion_content":"哥，你写的错误处理是属于健壮性里的还是单独的一个标准？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649861860,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149309,"user_name":"天天向上","can_delete":false,"product_type":"c1","uid":1282639,"ip_address":"","ucode":"D0914D4FD82272","user_header":"https://static001.geekbang.org/account/avatar/00/13/92/4f/ff04156a.jpg","comment_is_top":false,"comment_ctime":1573188199,"is_pvip":true,"discussion_count":3,"race_medal":0,"score":"40227893863","product_id":100039001,"comment_content":"代码质量我们团队用的SoanrQube衡量，它有几个指标：可靠性，安全性，可维护性，重复，复杂度。感觉这个平台把同事的代码一扫描就能发现哪些同事代码水平整的高了。","like_count":9,"discussions":[{"author":{"id":1261313,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3f/01/e1f2da41.jpg","nickname":"光裕","note":"","ucode":"1CAD27E16B6D96","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":108289,"discussion_content":"嗯，我们也在用sonar扫。但觉得还得加上code review会更好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577628276,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1282639,"avatar":"https://static001.geekbang.org/account/avatar/00/13/92/4f/ff04156a.jpg","nickname":"天天向上","note":"","ucode":"D0914D4FD82272","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1261313,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3f/01/e1f2da41.jpg","nickname":"光裕","note":"","ucode":"1CAD27E16B6D96","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":406966,"discussion_content":"是的 可以把Sonar扫描结果推送到代码走查平台Gerrit或者Gitlab，方便人工代码走查","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634875286,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":108289,"ip_address":""},"score":406966,"extra":""}]},{"author":{"id":1282639,"avatar":"https://static001.geekbang.org/account/avatar/00/13/92/4f/ff04156a.jpg","nickname":"天天向上","note":"","ucode":"D0914D4FD82272","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":84095,"discussion_content":"更正>Sonarqube","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576487747,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147663,"user_name":"汤小高","can_delete":false,"product_type":"c1","uid":1555565,"ip_address":"","ucode":"D4AB7766273D52","user_header":"https://static001.geekbang.org/account/avatar/00/17/bc/6d/f6f0a442.jpg","comment_is_top":false,"comment_ctime":1572877326,"is_pvip":false,"replies":[{"id":"57051","content":"扩展主要是指添加功能，维护更广些，添加、修改...可读性和可扩展性都影响到代码的可维护性。除此之外，这些判定标准本身就有点重合，文章中也提到了。","user_name":"作者回复","comment_id":147663,"uid":"1190123","ip_address":"","utype":1,"ctime":1572946792,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"40227582990","product_id":100039001,"comment_content":"老师，怎么感觉您说的可维护性和可拓展性是同一个东西，都是让未来修改某个功能，某个bug或者新增功能需求更简单？<br>是不是维护性更针对于现有功能的维护修改，拓展性更针对与未来新增需求的修改？","like_count":9,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473282,"discussion_content":"扩展主要是指添加功能，维护更广些，添加、修改...可读性和可扩展性都影响到代码的可维护性。除此之外，这些判定标准本身就有点重合，文章中也提到了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572946792,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148023,"user_name":"编程界的小学生","can_delete":false,"product_type":"c1","uid":1593289,"ip_address":"","ucode":"4A5BE9A5E877FA","user_header":"https://static001.geekbang.org/account/avatar/00/18/4f/c9/9f51fd27.jpg","comment_is_top":false,"comment_ctime":1572929796,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31637700868","product_id":100039001,"comment_content":"可扩展，可读性，健壮性<br>我认为mybatis做的很到位，小巧简单，功能强大。健壮稳定可扩展。正是有了这么好的代码，才使得有很多框架可以无缝集成进来，比如spring-mybatis，再比如sharding-jdbc","like_count":7},{"had_liked":false,"id":149101,"user_name":"Y024","can_delete":false,"product_type":"c1","uid":1018056,"ip_address":"","ucode":"397126D2E17997","user_header":"https://static001.geekbang.org/account/avatar/00/0f/88/c8/ae476935.jpg","comment_is_top":false,"comment_ctime":1573141123,"is_pvip":true,"replies":[{"id":"57460","content":"你就没认真看 我觉得 说了没量化的标准的","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1573257447,"ip_address":"","comment_id":149101,"utype":1}],"discussion_count":4,"race_medal":2,"score":"27342944899","product_id":100039001,"comment_content":"Day003 02<br>收获金句：“思从深而行从简”。<br>比较遗憾的是，开头讲了好代码的标准太过泛泛而谈，以为会有量化的标准，结果还是没有。","like_count":6,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473735,"discussion_content":"你就没认真看 我觉得 说了没量化的标准的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573257447,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1082785,"avatar":"https://static001.geekbang.org/account/avatar/00/10/85/a1/2442332c.jpg","nickname":"郭俊杰","note":"","ucode":"D328E5738A4413","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":260844,"discussion_content":"google不是有个证书吗?你考过了，你就是标准。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1588907300,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2662969,"avatar":"https://static001.geekbang.org/account/avatar/00/28/a2/39/3ee6f996.jpg","nickname":"You","note":"","ucode":"ACBDB82E9B39C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385746,"discussion_content":"后面有很多编程方法论，都是量化的标准，开篇是为了导学，用简单的语句就能理解其好代码的含义这不香吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627261726,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1115232,"avatar":"https://static001.geekbang.org/account/avatar/00/11/04/60/64d166b6.jpg","nickname":"Fan","note":"","ucode":"3BF28670FD9407","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380842,"discussion_content":"google 这个证书考什么内容？题目是什么呀？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624721833,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":245684,"user_name":"WilliamVector","can_delete":false,"product_type":"c1","uid":1898112,"ip_address":"","ucode":"E0D3C3D4FCB7C9","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f6/80/85ec2c2a.jpg","comment_is_top":false,"comment_ctime":1599026639,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23073863119","product_id":100039001,"comment_content":"【要点】<br>1、如何评价代码质量的高低。我们很难通过某个或某几个词汇来全面的评价代码质量。这些词汇都是从不同维度来说的，并且不同的评价维度也并不是完全独立的，有些具有包含关系、重叠关系或者可以相互影响。对于一段代码的评价常常有很强的主观性，这种主观评价的准确性跟工程师自身经验有很大的关系，越是有经验的工程师，给出的评价也就越准确。<br>2、最常用的评价标准。包括：可维护性、可读性、可扩展性、灵活性、简洁性、可复用性、可测试性。<br>(1)可维护性：所谓的“维护”无外乎就是修改bug、修改老代码、添加新代码之类的工作。所谓的“代码易维护”就是指，在不破坏原有代码设计、不引入新的bug的情况下，能够快速的修改或者添加代码。所谓的“代码不易维护”就是指，修改或者添加代码要冒着极大的引入新bug的风险，并且需要花很长时间才能完成。<br>(2)可阅读性。判断代码是否可读性好，我们需要代码是否符合编码规范、命名是否达意、注释是否想尽、函数是否长短合适、模块划分是否清晰、是否符合高内聚低耦合等等。软件设计大师 Martin Fowler 曾经说过：任何傻瓜都会编写计算机能理解的代码。好的程序员能够编写人能够理解的代码。<br>(3)可扩展性。表示我们的代码应对未来需求变化的能力。跟可读性一样，代码是否易扩展也很大程度上决定了代码是否易维护。代码的可扩展性表示，我们在不修改或少量修改原有代码的情况下，通过扩展的方式添加新的功能代码。<br>(4)灵活性。灵活性一般表现为，当要添加新的代码时，原有代码已经预留好了扩展点，我们不需要修改原有代码，只需要在扩展点上添加新的代码即可。当要实现一个功能的时候，原有代码中已经抽象出了很多底层可复用的模块、类等代码，我们可以拿来直接使用。当使用某组接口的时候，这组接口可以应对各种场景，满足各种不同的需求。<br>(5)简洁性。有一条非常重要的原则，KISS原则：Keep It Simple，Stupid。要尽量保持代码简单。思从深而行从简，真正的高手能云淡风轻的用最简单的方法解决最复杂的问题。这也是编程老手跟编程新手之间的区别。<br>(6)可复用性。可以简单的理解为，尽量减少重复代码的编写，复用已有的代码。是很多设计原则、思想、模式等所要达到的最终效果。另外，代码可复用性跟DIY(Don’t Repeat Yourself)这条设计原则关系也很紧密。<br>(7)可测试性。代码可测试性的好坏，能从侧面上非常准确地反应代码质量的好坏。代码的可测试性差，比较难写单元测试，那基本上就能说明代码设计得有问题。<br>3、如何写出高质量的代码。要想写出易维护、易读、易扩展、灵活、简洁、可服用、可测试的代码，我们需要掌握一些更加细化、更加能落地的编程方法论，包括面向对象设计思想、设计原则、设计模式、编码规范、重构技巧等。而所有这些编程方法论的最终目的都是为了编写出高质量的代码。<br>【思考】<br>我心中的好代码，非Chromium浏览器内核代码莫属，简直就是一件艺术品，阅读这样的源码不仅可以学习各种设计模式、C++语言特性的应用之妙，更能学习到一种高级的品味，一种做到极致的追求。","like_count":5},{"had_liked":false,"id":281866,"user_name":"杨昌业","can_delete":false,"product_type":"c1","uid":2452804,"ip_address":"","ucode":"0F043DA819F975","user_header":"","comment_is_top":false,"comment_ctime":1614929477,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18794798661","product_id":100039001,"comment_content":"可穿越性 , 老员工熟悉-前任员工留下的遗作, 仿佛两个时空的大牛对话","like_count":4},{"had_liked":false,"id":260332,"user_name":"韩梅梅","can_delete":false,"product_type":"c1","uid":2304629,"ip_address":"","ucode":"75F6D1B81807DB","user_header":"https://static001.geekbang.org/account/avatar/00/23/2a/75/001b8038.jpg","comment_is_top":false,"comment_ctime":1604986425,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18784855609","product_id":100039001,"comment_content":"Don&#39;t make me think 别人在阅读你的代码时，不需要思考太久的代码就是好代码","like_count":4},{"had_liked":false,"id":147728,"user_name":"仙道","can_delete":false,"product_type":"c1","uid":1161146,"ip_address":"","ucode":"CF35D34B484B71","user_header":"https://static001.geekbang.org/account/avatar/00/11/b7/ba/ae4cabd8.jpg","comment_is_top":false,"comment_ctime":1572881544,"is_pvip":false,"discussion_count":10,"race_medal":0,"score":"18752750728","product_id":100039001,"comment_content":"我觉得最好是能把注释尽可能的写详细，最好能举几个例子。<br>因为员工之间水平层次不齐，哪怕是再好的代码，在他眼里就是垃圾<br>遇到爱扯皮的同事，真的很难受","like_count":4,"discussions":[{"author":{"id":1102702,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d3/6e/281b85aa.jpg","nickname":"永光","note":"","ucode":"0C54531ABED1B0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45176,"discussion_content":"可读性如果要靠详细的注释，那其实是很危险的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573009570,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44619,"discussion_content":"请看力扣 #7 整数反转，官方解题已经描述的非常详细，但我还是没看懂，因为数学太差。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572959111,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1131687,"avatar":"https://static001.geekbang.org/account/avatar/00/11/44/a7/171c1e86.jpg","nickname":"啦啦啦","note":"","ucode":"6B12EC90A62525","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45325,"discussion_content":"你跑题了吧\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573023432,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":44619,"ip_address":""},"score":45325,"extra":""},{"author":{"id":1134861,"avatar":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","nickname":"James","note":"","ucode":"48B0F2A334D1C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45797,"discussion_content":"每条留言都有你的………","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573087205,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":44619,"ip_address":""},"score":45797,"extra":""},{"author":{"id":1132304,"avatar":"https://static001.geekbang.org/account/avatar/00/11/47/10/2d673601.jpg","nickname":"好饿早知道送外卖了","note":"","ucode":"AED22DB5BF8FC7","race_medal":2,"user_type":1,"is_pvip":false},"reply_author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132514,"discussion_content":"大概这就是教都教不会的类型..","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578914071,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":44619,"ip_address":""},"score":132514,"extra":""}]},{"author":{"id":1356225,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b1/c1/08cc53c0.jpg","nickname":"...","note":"","ucode":"D2E6EBA5E9B6F0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44385,"discussion_content":"见名知其义 是最好的。 需要写注释的地方提成一个函数试试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572945382,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1161146,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b7/ba/ae4cabd8.jpg","nickname":"仙道","note":"","ucode":"CF35D34B484B71","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1356225,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b1/c1/08cc53c0.jpg","nickname":"...","note":"","ucode":"D2E6EBA5E9B6F0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44407,"discussion_content":"我之前一个同事是培训班出来的，真的是杠，我狠怕他","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572946922,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":44385,"ip_address":""},"score":44407,"extra":""},{"author":{"id":1037925,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d6/65/e6abeba2.jpg","nickname":"Persistfanāāā","note":"","ucode":"8C4EF892B7ED27","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1356225,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b1/c1/08cc53c0.jpg","nickname":"...","note":"","ucode":"D2E6EBA5E9B6F0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":46321,"discussion_content":"函数是个好办法，不过如果是单片机的话函数调用太深怕压栈太多崩溃，多种方法并用吧，尽量命名清楚，代码结构清晰，关键地方写点注释。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573140314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":44385,"ip_address":""},"score":46321,"extra":""}]},{"author":{"id":1340563,"avatar":"https://static001.geekbang.org/account/avatar/00/14/74/93/c21f1531.jpg","nickname":"Twinkle","note":"","ucode":"FE1596741E257B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44208,"discussion_content":"有地方说到可读性高到代码是不需要注释的, 哈哈哈哈,但是有时候还是得写,","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572939881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147643,"user_name":"lijun","can_delete":false,"product_type":"c1","uid":1116095,"ip_address":"","ucode":"69EC8B86211AD9","user_header":"https://static001.geekbang.org/account/avatar/00/11/07/bf/49f385ec.jpg","comment_is_top":false,"comment_ctime":1572875797,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"18752744981","product_id":100039001,"comment_content":"Jdk源码和spring源码写的非常棒，可惜目前还看不懂。","like_count":4,"discussions":[{"author":{"id":1959822,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/e7/8e/318cfde0.jpg","nickname":"Spoon","note":"","ucode":"2FF9193AD482C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":358765,"discussion_content":"JDK源码可以深入研究一下AQS，参考一下相关论文","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1616046663,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44614,"discussion_content":"JDK排序、ArrayList实现之类的看一看还是能看懂的。Spring一个启动做了哪些操作，真心看不下去，代码太多了，嵌套的逻辑开始怀疑人生。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1572958985,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":307403,"user_name":"GeekGa","can_delete":false,"product_type":"c1","uid":2716077,"ip_address":"","ucode":"2148DC2EF4B316","user_header":"https://static001.geekbang.org/account/avatar/00/29/71/ad/a6618420.jpg","comment_is_top":false,"comment_ctime":1629084244,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14513986132","product_id":100039001,"comment_content":"听得我热血沸腾，反手打开VS,看了一眼代码然后回来了","like_count":3},{"had_liked":false,"id":150583,"user_name":"qqq","can_delete":false,"product_type":"c1","uid":1006786,"ip_address":"","ucode":"91B0ACF8CBE7BD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/c2/8ffd2ad0.jpg","comment_is_top":false,"comment_ctime":1573562791,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"14458464679","product_id":100039001,"comment_content":"Clean code always looks like it was written by someone who cares. - Michael Feathers","like_count":3},{"had_liked":false,"id":148560,"user_name":"攀登者","can_delete":false,"product_type":"c1","uid":1074549,"ip_address":"","ucode":"FC26A8AC504C5E","user_header":"https://static001.geekbang.org/account/avatar/00/10/65/75/9c0b9b5b.jpg","comment_is_top":false,"comment_ctime":1573031063,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14457932951","product_id":100039001,"comment_content":"20191106 看完代码后，心里默默的说真NB，就是好代码","like_count":3},{"had_liked":false,"id":147825,"user_name":"我能走多远","can_delete":false,"product_type":"c1","uid":1240465,"ip_address":"","ucode":"07DF5D5DADFA3C","user_header":"https://static001.geekbang.org/account/avatar/00/12/ed/91/1d332031.jpg","comment_is_top":false,"comment_ctime":1572911637,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14457813525","product_id":100039001,"comment_content":"代码健壮性-异常场景的处理。代码可维护性还包含日志记录。可定位性。","like_count":3},{"had_liked":false,"id":147551,"user_name":"爱吃彩虹糖的猫~","can_delete":false,"product_type":"c1","uid":1261108,"ip_address":"","ucode":"9EC7A8FD4B7DB1","user_header":"https://static001.geekbang.org/account/avatar/00/13/3e/34/dd0a3c61.jpg","comment_is_top":false,"comment_ctime":1572869455,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14457771343","product_id":100039001,"comment_content":"001 如何评价代码质量的高低？<br>代码质量的评价有很强的主观性，描述代码质量的词汇也有很多，比如可读性、可维护性、灵活、优雅、简洁等。<br>002 常用的评价标准<br>可维护性、可读性、可扩展性、灵活性、简洁性、可复用性、可测试性。<br>003 如何才能写出高质量的代码？<br>需要掌握一些更加细化、更加能落地的编程方法论，这就包含面向对象设计思想、设计原则、设计模式、编码规范、重构技巧等等<br>","like_count":3},{"had_liked":false,"id":279538,"user_name":"Kuris_01🦖","can_delete":false,"product_type":"c1","uid":2391763,"ip_address":"","ucode":"DE346E0FA7EC7D","user_header":"https://static001.geekbang.org/account/avatar/00/24/7e/d3/0e85f07c.jpg","comment_is_top":false,"comment_ctime":1613813314,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10203747906","product_id":100039001,"comment_content":"个人理解：好代码就是离职后接手我代码的同学不会感到头痛。","like_count":2},{"had_liked":false,"id":273453,"user_name":"刘立嘉","can_delete":false,"product_type":"c1","uid":2414637,"ip_address":"","ucode":"1241140EBE7FE3","user_header":"https://static001.geekbang.org/account/avatar/00/24/d8/2d/6ec3760c.jpg","comment_is_top":false,"comment_ctime":1610600235,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10200534827","product_id":100039001,"comment_content":"如果是单枪匹马写一个程序，那可读性也就不那么重要，反正都是自己在看，如果是团队做项目，共享代码，共同提交，那么，可读性很重要，至少要让你的团队成员看地懂，理解。","like_count":2},{"had_liked":false,"id":210168,"user_name":"track6688","can_delete":false,"product_type":"c1","uid":1088040,"ip_address":"","ucode":"0A9E893F8FD379","user_header":"https://static001.geekbang.org/account/avatar/00/10/9a/28/03613c22.jpg","comment_is_top":false,"comment_ctime":1587693638,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10177628230","product_id":100039001,"comment_content":"找了最近写的一些代码，对着这些标准来思考了一下，发现质量还真是有点差吖！","like_count":2},{"had_liked":false,"id":156338,"user_name":"未来的胡先森","can_delete":false,"product_type":"c1","uid":1234682,"ip_address":"","ucode":"AFF193AC0E2E6C","user_header":"https://static001.geekbang.org/account/avatar/00/12/d6/fa/1f5bf642.jpg","comment_is_top":false,"comment_ctime":1574858736,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10164793328","product_id":100039001,"comment_content":"最近的工作中，老板提了一些关于好的代码的判断：<br>1、高可靠。例如，在数据库崩溃时服务是否依旧能够正常运行。<br>2、安全。对于常见的 SQL 注入、XSS 等是否有做防御。<br>3、高并发。能否满足百万级、千万级 QPS。","like_count":2,"discussions":[{"author":{"id":1116862,"avatar":"","nickname":"leior","note":"","ucode":"82AEBD0D254362","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":143123,"discussion_content":"感觉这个更像是好的架构的要求","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579491200,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1603271,"avatar":"","nickname":"Geek_f3a3d1","note":"","ucode":"E15FA1C3AB3174","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":110888,"discussion_content":"代码具有安全性，又考虑到安全方面。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577762569,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154655,"user_name":"ZengTudou","can_delete":false,"product_type":"c1","uid":1370064,"ip_address":"","ucode":"6F76C977C4E093","user_header":"https://static001.geekbang.org/account/avatar/00/14/e7/d0/2a9b3208.jpg","comment_is_top":false,"comment_ctime":1574501409,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10164436001","product_id":100039001,"comment_content":"笔记<br>自己以前都是瞎几把写代码，当然看了一些大牛写的代码，确实感觉别人的代码牛逼，但确确实实不知道该如何评价。也知道一些评价的名词，说实话，在看这篇博客之前，这些名词的具体含义是什么还真不是那么清楚的。读了这篇文章之后我至少知道了代码的一些评价标准，虽然这个事情本来也是很主观的<br>可维护性:在保留原有的设计，不加入新的bug的前提下，能够写入或者修改代码。<br>可读性:这个就更主观了，这个还是得多做code review才知道，最基本的是，是否编码规范，类名是否合理，类的设计是否合理，接口是否合理等等。<br>可拓展性:是否留有接口让新的功能加入，这个是比较重要的。<br>可读性和可拓展性会影响可维护性。<br>灵活性:一般来说，接口是否能够在功能需求改变的情况下继续使用等。<br>简洁性:我觉得越简单的代码越难写，因为当需求越难实现，代码就会越多，如果还能做到简洁，那么就是好代码了。<br>可复用性:这个就比较好理解了，没有太多重复的代码。","like_count":2},{"had_liked":false,"id":150043,"user_name":"张驰","can_delete":false,"product_type":"c1","uid":1080050,"ip_address":"","ucode":"0ED97C2FCE6599","user_header":"https://static001.geekbang.org/account/avatar/00/10/7a/f2/6770d0a9.jpg","comment_is_top":false,"comment_ctime":1573452332,"is_pvip":false,"replies":[{"id":"58377","content":"抽空写篇文章说说吧","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1573790507,"ip_address":"","comment_id":150043,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10163386924","product_id":100039001,"comment_content":"老师是否可以提供下，您日常工作中CR环节的一些标准呢。目前团队内对代码质量的把控能力一般，CR环节也是最近开始强制执行的，以前都没有，但是整个CR过程有点生搬硬套一些标准了，比如单测覆盖率、编码规范等，这些都比较初级，想了解下google都是如何做CR的。","like_count":2,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474046,"discussion_content":"抽空写篇文章说说吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573790507,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149397,"user_name":"桃翁","can_delete":false,"product_type":"c1","uid":1044036,"ip_address":"","ucode":"CB438AF450DC00","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/44/26ac883e.jpg","comment_is_top":false,"comment_ctime":1573210988,"is_pvip":false,"replies":[{"id":"57455","content":"可以看下我之前写的这篇文章<br>https:&#47;&#47;mp.weixin.qq.com&#47;s&#47;Wv5kNmRBY2ZurFq7Rxv6Kw","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1573253634,"ip_address":"","comment_id":149397,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10163145580","product_id":100039001,"comment_content":"老师，对于更好的写出可测试性的代码TDD我觉得是一种非常好的方式，测试在前必然写出来的代码易于测试，但是写测试用例往往会占用很多的时间，请问老师你是如何看待TDD的？","like_count":2,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473849,"discussion_content":"可以看下我之前写的这篇文章\nhttps://mp.weixin.qq.com/s/Wv5kNmRBY2ZurFq7Rxv6Kw","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573253634,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1139738,"avatar":"https://static001.geekbang.org/account/avatar/00/11/64/1a/bb797b99.jpg","nickname":"Michael翔","note":"","ucode":"1229ACC823DA02","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335055,"discussion_content":"该内容已被发布者删除……","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1608082954,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1115232,"avatar":"https://static001.geekbang.org/account/avatar/00/11/04/60/64d166b6.jpg","nickname":"Fan","note":"","ucode":"3BF28670FD9407","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380843,"discussion_content":"该内容已被发布者删除…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624721880,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149314,"user_name":"Tiger","can_delete":false,"product_type":"c1","uid":1284857,"ip_address":"","ucode":"6F9CAB3C29BAD7","user_header":"https://static001.geekbang.org/account/avatar/00/13/9a/f9/6d55ee0b.jpg","comment_is_top":false,"comment_ctime":1573190103,"is_pvip":false,"replies":[{"id":"57457","content":"是的 说的没错 但也不能一概而论 专栏后面会讲到 别急","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1573254108,"ip_address":"","comment_id":149314,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10163124695","product_id":100039001,"comment_content":"一直有个疑问，很多人都说一开始写代码尽量不要用设计模式，避免过度设计。要根据业务的发展和当前的场景进行重构代码时再考虑用设计模式。真是这样的吗？","like_count":2,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473812,"discussion_content":"是的 说的没错 但也不能一概而论 专栏后面会讲到 别急","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573254108,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148990,"user_name":"YourSweetHeart","can_delete":false,"product_type":"c1","uid":1242122,"ip_address":"","ucode":"38843F447B03F2","user_header":"https://static001.geekbang.org/account/avatar/00/12/f4/0a/cf728857.jpg","comment_is_top":false,"comment_ctime":1573122959,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"10163057551","product_id":100039001,"comment_content":"我觉得好代码是这样的，<br>摘掉眼镜，离开屏幕5米，如果映入眼帘的是一行行有序，整齐有层次的代码，就是好代码","like_count":2,"discussions":[{"author":{"id":1746552,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/a6/78/d79be6fc.jpg","nickname":"hudson","note":"","ucode":"55D28AD8714D90","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":51276,"discussion_content":"缩进搞好就可以达到这个效果了","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1573830591,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1198685,"avatar":"https://static001.geekbang.org/account/avatar/00/12/4a/5d/ef93cec4.jpg","nickname":"apibrain","note":"","ucode":"0C6F706C0A8113","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":47300,"discussion_content":"那是视力好。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573310340,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1102484,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d2/94/c804f9a9.jpg","nickname":"木桑苏","note":"","ucode":"ACD493FFB8DFF7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48204,"discussion_content":"我觉得是因为format了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573462253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147949,"user_name":"you-aholic","can_delete":false,"product_type":"c1","uid":1499363,"ip_address":"","ucode":"E346825EC3AA53","user_header":"https://static001.geekbang.org/account/avatar/00/16/e0/e3/31a250ce.jpg","comment_is_top":false,"comment_ctime":1572921276,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10162855868","product_id":100039001,"comment_content":"老师已经总结的非常详细了。我能想到的评判代码的另一个标准就是，能否从代码中看出来作者对代码的思考。相比那些“能用的代码”好代码一定会体现出作者的思考和心思。当开始酝酿那些原本闭着眼睛都能写出来的代码时，离写出好代码就更近了一步。","like_count":2,"discussions":[{"author":{"id":1032345,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c0/99/259a412f.jpg","nickname":"Geeker","note":"","ucode":"9937127DE96D78","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":223267,"discussion_content":"易推测性？让代码保持该有的样子😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586198794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147815,"user_name":"zcdll","can_delete":false,"product_type":"c1","uid":1004086,"ip_address":"","ucode":"F1F20EB17D8789","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/36/18f5d218.jpg","comment_is_top":false,"comment_ctime":1572910302,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10162844894","product_id":100039001,"comment_content":"自己的感觉，概括来说，就是 现在 写的代码，要让自己以及别人在 以后 能够继续维护，不能一锤子买卖，写完上线就算了。在此至上，能写出更优雅的代码。","like_count":2},{"had_liked":false,"id":147768,"user_name":"Yayu","can_delete":false,"product_type":"c1","uid":1058015,"ip_address":"","ucode":"5E7842458D8229","user_header":"https://static001.geekbang.org/account/avatar/00/10/24/df/645f8087.jpg","comment_is_top":false,"comment_ctime":1572884794,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10162819386","product_id":100039001,"comment_content":"希望王争老师讲解套路时尽量避免语言耦合，热切盼望举例部分可以像『数据结构和算法』课程中的实例一样，出据不同语言的解法，毕竟语言不同最佳实现方式还是不一样的。当然我也会在自己擅长的语言部分提交实现代码，参与到刻意练习的活动中。加油💪","like_count":2},{"had_liked":false,"id":267488,"user_name":"Geek_652490","can_delete":false,"product_type":"c1","uid":1817165,"ip_address":"","ucode":"0612EE1FD02AF1","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/0qP9dQyibmPu1JUAan9bXEXZBAaOetRStstIcQDXZUFdU9jHb5W3RlNfCBI0kVkZzZTf6NbXwSY4IQqOsVSNQibw/132","comment_is_top":false,"comment_ctime":1607765673,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5902732969","product_id":100039001,"comment_content":"可读性肥肠重要啊！！！<br>拿到一份代码，无论你要做些什么，阅读总是第一部。","like_count":1},{"had_liked":false,"id":208572,"user_name":"naku","can_delete":false,"product_type":"c1","uid":1528610,"ip_address":"","ucode":"B49EF5B5B38400","user_header":"https://static001.geekbang.org/account/avatar/00/17/53/22/cce9a2e5.jpg","comment_is_top":false,"comment_ctime":1587384469,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5882351765","product_id":100039001,"comment_content":"不多比比，大有孙子兵法第一篇的感觉","like_count":1},{"had_liked":false,"id":198011,"user_name":"郭强","can_delete":false,"product_type":"c1","uid":1192928,"ip_address":"","ucode":"38F36F0F4CC775","user_header":"https://static001.geekbang.org/account/avatar/00/12/33/e0/387ab6fd.jpg","comment_is_top":false,"comment_ctime":1585406648,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5880373944","product_id":100039001,"comment_content":"不同的项目，代码质量的着重点不同。我们公司是一个小型互联网教育公司，从事轻课程在线学习与答题，招生引流等10几款h5应用。其中有很多快速试错产品，对于这种项目我认为最重要的是简洁性和可读性。如果是可能会在未来重构，应该是可读性最重要。如果是维护项目，可读性，可维护性，可扩展性最重要。","like_count":1},{"had_liked":false,"id":164086,"user_name":"攻城狮Ra","can_delete":false,"product_type":"c1","uid":1681051,"ip_address":"","ucode":"4D6F97A6481166","user_header":"https://static001.geekbang.org/account/avatar/00/19/a6/9b/20b9fce3.jpg","comment_is_top":false,"comment_ctime":1576856787,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5871824083","product_id":100039001,"comment_content":"可维护性、可读性、可扩展性、灵活性、简洁性（简单、复杂）、可复用性、可测试性是很重要。最近在做报表，由于是多X轴Y轴的，对于坐标轴定义出现了重复的地方就在想设计一个CSS选择器，通过调用选择器来使用重复属性，增加代码可复用性。在此过程总是把问题想复杂，在跟同事交流之后发现往往可以用简单的方式解决","like_count":1},{"had_liked":false,"id":163631,"user_name":"明月几时","can_delete":false,"product_type":"c1","uid":1675716,"ip_address":"","ucode":"E46C844EAB2CD0","user_header":"https://static001.geekbang.org/account/avatar/00/19/91/c4/bcdcda65.jpg","comment_is_top":false,"comment_ctime":1576757483,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5871724779","product_id":100039001,"comment_content":"在我的大学里有一门课，叫做《软件体系结构》，印象中里面讲述的就是各种各样的软件体系结构，其中还有对软件的评价分析。从王争老师讲解中，我似乎又回到了当时上课的时候，当然在当时我却没有认真地去学习，也成为了现在的一个遗憾。<br>王争老师所讲的这些评价标准和当时我学习的软件体系结构中对软件的评析分析有很多很相似的评价指标；可维护性、可扩展性、可测试性、高内聚低耦合，安全性、易用性等等这些都在里面有所体现。这就让我觉得，其实很多知识都是相通的，在我们所处的计算机这个行业中，每个课程都能看到其他课程的一些影子，所以学习好一门基础学科，然后学习其他的内容会更加容易些，到最后不管学习什么都会变得非常容易了！","like_count":1},{"had_liked":false,"id":157527,"user_name":"亚伦碎语","can_delete":false,"product_type":"c1","uid":1014505,"ip_address":"","ucode":"F32E5E1B63CC90","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7a/e9/da5c0203.jpg","comment_is_top":false,"comment_ctime":1575186568,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5870153864","product_id":100039001,"comment_content":"部署一个最基本的前提，要正确的实现需求","like_count":1},{"had_liked":false,"id":149726,"user_name":"join","can_delete":false,"product_type":"c1","uid":1130132,"ip_address":"","ucode":"C097D89F7BA3EF","user_header":"https://static001.geekbang.org/account/avatar/00/11/3e/94/c6460883.jpg","comment_is_top":false,"comment_ctime":1573355197,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5868322493","product_id":100039001,"comment_content":"我觉得好的代码：<br>1. 可读性好，包括代码本身的可读性和注释的可读性，代码和注释都要写好，这样别人在接手你的代码时会感觉很舒服。<br>2. 不要有超常的方法或者类，代码行数要有限制，不要太过臃肿，如果代码行数过多则一定要拆分方法或者类，然后进行组合调用。  <br>3. 性能好，写代码时要吝啬计算机资源，写出高性能的代码  <br><br>总结：<br>1. 可维护性  <br>    代码易读性好，好改，不会由于改动旧的逻辑而容易引发新的bug。    <br>2. 可扩展性  <br>  “对修改关闭，对扩展开放”，代码预留了扩展点，增加新功能时不需要大动干戈改动现有代码。    <br>3. 灵活性  <br>4. 简洁性  <br>  KISS原则——“Keep it Simple,Stupid”——让代码保持简单。  <br>  不要为了用“设计模式”而用设计模式。  <br>  用最简单的方式解决最复杂的问题。  <br>5. 可复用性  <br>  DRP原则——Don&#39;t Reeat Yourself  <br>  继承、多态、解耦、高内聚、模块化等都是为了提高可复用性。<br>6. 可测试性  <br>  比如“容易些单元测试”等  <br><br>","like_count":1},{"had_liked":false,"id":149590,"user_name":"enjoylearning","can_delete":false,"product_type":"c1","uid":1000237,"ip_address":"","ucode":"DCAF8538DEA277","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/2d/af86d73f.jpg","comment_is_top":false,"comment_ctime":1573285806,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5868253102","product_id":100039001,"comment_content":"感觉作者已经总结的很全面了","like_count":1},{"had_liked":false,"id":148743,"user_name":"Fun","can_delete":false,"product_type":"c1","uid":1145502,"ip_address":"","ucode":"5D89BA4C678785","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJdUGdEj3R25CrYqibPibYibibRicqUfyL4aTTPbMagyywjKMhXGZE37RTe7lEdvC4DibvtYpzg8zXvt9HQ/132","comment_is_top":false,"comment_ctime":1573062643,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5868029939","product_id":100039001,"comment_content":"# day3.<br>中心思想：怎样的代码算的上好代码。<br>涉及到评价好代码的几个非常重要的评价维度：简洁易读，可维护，可扩展，可测试，灵活复用（按我个人理解的重要性排序）。其中，每个维度都不可能单独存在，几乎可以认为都是强相关。<br>以我个人理解，几个评价维度的本质，就是代码虽然运行在计算机上，但代码本身终究是为人服务。这个服务的要点在于，能被人轻松阅读理解，能被人愉快修改不出错，其实，也就仅此而已了。<br>于是，为了好代码的这个本质，我们产生了各种方法论，包括但不限于设计思想，方法，模式，规范，重构技巧等等…<br>最后，金句：<br>&gt; 思从深而行从简，真正的高手能云淡风轻地用最简单的方法解决最复杂的问题。","like_count":1},{"had_liked":false,"id":148611,"user_name":"熊斌","can_delete":false,"product_type":"c1","uid":1026280,"ip_address":"","ucode":"24D0C32F397113","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a8/e8/bc84c47d.jpg","comment_is_top":false,"comment_ctime":1573038100,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5868005396","product_id":100039001,"comment_content":"评价代码好坏的常用标准：<br><br>代码质量的评价有很强的主观性。<br><br>1. 可维护性（maintainability)<br>    我们开发的系统大多是在金融和保险领域，业务场景复杂度很高。功能上线后除了BUG，还会有很多新的需求，可维护性对于我们而言就是解决BUG和新增功能时的影响范围尽可能小，新功能添加时不是通过类似在原分支上面住家 if-else这样的代码实现。<br>    <br>2、可读性（readability）<br>      如果要做到这一点，需要在写代码之前让大家达成共识，比如遵循业界统一的标准，编写codetemplates作为统一模板。另外通过自动化代码检查工具等手段来约束程序员，让写出来的代码更规范，可读性更高。<br><br>3. 可扩展性（extensibilty）<br>   这一点我觉得可以想象成电脑连接外设的接口，如果我买了一个外设，是否能够有接口支持“一插即用”？<br><br>4、灵活性（flexibility）<br>     接口易于扩展、有开箱即用的组件、能在不改变现有逻辑得情况下应对复杂的业务场景。<br><br>5、简洁性（simplity）<br>     &quot;Keep it simple stupid&quot;,<br>      思从深、行从简<br><br>6、可复用性（reusability）<br>     具体实践中就是在项目中实现某个功能做到以下两点：<br> 6.1、先去类库中去找“轮子”，不要闭门造车；<br> 6.2、将业务共通部分进行抽象，做成“轮子”供大家使用<br><br> 7、可测试性（testability）<br>完成功能点后，很容易做单元测试。<br><br>另外补充一点<br>8、安全性<br>    任正非在 给全体员工的公开信《全面提升软件工程能力与实践，打造可信的高质量产品》中说：”在确保可信的前提下，要在性能、功能、扩展性等方面做好权衡；慎重地定义我们的模块与接口，真正做到高内聚与低耦合；我们要遵循权限和攻击面最小化等安全设计原则，科学设计模块之间的隔离与接口，提升安全性；“。","like_count":1},{"had_liked":false,"id":148182,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1572955307,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5867922603","product_id":100039001,"comment_content":"个人认为可维护性，易读性，简单，可测试性更重要些。今天这七种评价原则之间有时候没有那么明显的界限。","like_count":1},{"had_liked":false,"id":147567,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1572870499,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5867837795","product_id":100039001,"comment_content":"大佬把我一直强调但又说不好的东西，捋得明明白白。优秀。<br><br><br>回答问题：<br>1.日志（我给自己的标准是，仅看这块业务的所有日志，就能看明白所有逻辑动向）。<br>2.安全性<br>3.异常流处理","like_count":1},{"had_liked":false,"id":147524,"user_name":"moqifei","can_delete":false,"product_type":"c1","uid":1358410,"ip_address":"","ucode":"E0A6C858B78A3A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLGovXf8jNP5ZqHsDKLwajjicbFwpX9on1xiaJDR4CgWaWP2KcfOdneasBfKFo3dO3dwQyGG6WjK40w/132","comment_is_top":false,"comment_ctime":1572868100,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5867835396","product_id":100039001,"comment_content":"《重构》中用坏味道来描述代码，一言以蔽之，高质量的代码没有坏味道。","like_count":1},{"had_liked":false,"id":356524,"user_name":"徐李","can_delete":false,"product_type":"c1","uid":1213325,"ip_address":"浙江","ucode":"41550F6CA1E112","user_header":"https://static001.geekbang.org/account/avatar/00/12/83/8d/03cac826.jpg","comment_is_top":false,"comment_ctime":1662380151,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1662380151","product_id":100039001,"comment_content":"个人理解：可读性排在第一位，写出来的代码大多时候都是被读的。可维护性，别人要好还。可扩展性，在有新功能增加的时候，易于扩展。<br>简洁，优雅，灵活，可复用，总体这七个吧！其实感觉意思上是有重叠，没有百分百明确的界限！","like_count":0},{"had_liked":false,"id":355871,"user_name":"Stay_Gold","can_delete":false,"product_type":"c1","uid":1119904,"ip_address":"北京","ucode":"ACB8DCD2EF8F95","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJRCtuJkpyy2NTTABPFibg2k9tZscOOKx9wu80a85d5HspCorO9Nibj7Z7q9v1icPTVm5ia52r0RCzEaA/132","comment_is_top":false,"comment_ctime":1661822057,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661822057","product_id":100039001,"comment_content":"感觉作者已经总结得很好了。<br>我自己就在下面再写一遍加深自己的印象。<br>1.可维护性：可维护性是一个大的概念，我自己的理解是可以使代码很好的活下去。<br>2.可读性：能让自己或者其他人快速的明白自己写的代码意图，让代码本身也是可自述的。可读是代码作为代码的基本属性之一，不可读的代码可以说是无用的代码。<br>3.可扩展性：有新需求或者新业务的时候能在不改动或者很少改动原来代码情况下去快速准确的实现。<br>4.灵活性：灵活性也是一个大的说法。想扩展的时候可以方便扩展，新增功能的时候有很多可以复用的功能点，一个功能能覆盖多个业务场景。。。上面的都是灵活性的体现。<br>5.简洁：就像写文章一样，三流的作家用复杂的文字描述简单的事情。一流的作家用简练的文字描述复杂的事情。简练是天才的姐妹。<br>6.可复用性：可复用性贯穿于代码的整个生命周期，可复用性在很大程度上面降低了代码的维护成本同时也大大降低了代码的复杂度。<br>7.可测试性：代码是人写的，是人就可能犯错。所以需要一套机制来检查人是否犯错。有了良好的测试之后，我们也才能更加放心大胆的重构自己的代码。<br>上面说的很多点，其实不是互相独立的，而是互相之间有很多融合的点的。是站在不同的维度，来说明良好代码的点的。","like_count":0},{"had_liked":false,"id":355254,"user_name":"秃然","can_delete":false,"product_type":"c1","uid":2074711,"ip_address":"广东","ucode":"00AF15893E30DC","user_header":"https://static001.geekbang.org/account/avatar/00/1f/a8/57/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1661227202,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661227202","product_id":100039001,"comment_content":"喜欢炫技的工程师大有人在","like_count":0},{"had_liked":false,"id":353999,"user_name":"Geek_19d46a","can_delete":false,"product_type":"c1","uid":1593319,"ip_address":"广东","ucode":"6B137E4FC514D1","user_header":"","comment_is_top":false,"comment_ctime":1660005936,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1660005936","product_id":100039001,"comment_content":"根据个人的工作场景重新制定了自己的代码评价指标如下：<br>简洁性，易读性，易维护性，可复用性，易扩展性，可测试性。<br>希望整个课程下来，可以进一步细化上述指标，做到可判断，可实施。","like_count":0},{"had_liked":false,"id":352600,"user_name":"二蛋","can_delete":false,"product_type":"c1","uid":1236432,"ip_address":"","ucode":"E4258312339C9C","user_header":"https://static001.geekbang.org/account/avatar/00/12/dd/d0/c1e6db47.jpg","comment_is_top":false,"comment_ctime":1658801760,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1658801760","product_id":100039001,"comment_content":"哈哈哈，跟战斗机一样，颜值即战斗力！好的代码，一定是鲁棒性高，低异常的","like_count":0},{"had_liked":false,"id":350922,"user_name":"SICUN","can_delete":false,"product_type":"c1","uid":1254261,"ip_address":"","ucode":"22A384904EB9E9","user_header":"https://static001.geekbang.org/account/avatar/00/13/23/75/2b599841.jpg","comment_is_top":false,"comment_ctime":1657349358,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657349358","product_id":100039001,"comment_content":"我觉得除了这些主观的评价外，一些客观的可量化的编码规范也非常重要，比如规定一个函数最多不能超过200行这样的标准，可以避免一些没有下限的代码，量化之后还可以借助工具做初步的代码规范检查，提高code review效率","like_count":0},{"had_liked":false,"id":348489,"user_name":"陈平Edgar","can_delete":false,"product_type":"c1","uid":1043749,"ip_address":"","ucode":"DD5A715893827E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/25/a48988c0.jpg","comment_is_top":false,"comment_ctime":1655133264,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655133264","product_id":100039001,"comment_content":"心中的好代码是看着舒服。方法小巧、功能内聚、修改简单","like_count":0},{"had_liked":false,"id":348389,"user_name":"Mr.Jiang","can_delete":false,"product_type":"c1","uid":3023788,"ip_address":"","ucode":"AA90AA926E8DE8","user_header":"https://static001.geekbang.org/account/avatar/00/2e/23/ac/4d5217bd.jpg","comment_is_top":false,"comment_ctime":1655044290,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655044290","product_id":100039001,"comment_content":"我也经常在工作中深有体会，包括自己在内，周边的同事，都会吐槽一段代码是，写得这么烂，这代码不知道在写个啥，看不懂。或者这代码也太长了，亦或这里可以复用的，没有复用，导致代码全部都是duplicate警告等。<br><br>我后续应该从多方面去评价代码，审视代码，设计代码，编写代码，是否易扩展？可读性高吗？灵活吗，有没有留给项目上二开的口子？ 这里可复用吗？这个类是否太臃肿了，违反单一职责，且不可复用？<br>这里的代码实现是否过于复杂晦涩，是否满足KISS原则了？【思从深而行从简，写优秀的代码不是在秀技术，而是要遵循行业内多年的一些优秀设计模式，经验】","like_count":0},{"had_liked":false,"id":345298,"user_name":"姚钫","can_delete":false,"product_type":"c1","uid":1498146,"ip_address":"","ucode":"ECB8B0627A4F9B","user_header":"https://static001.geekbang.org/account/avatar/00/16/dc/22/41a390ae.jpg","comment_is_top":false,"comment_ctime":1652178018,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1652178018","product_id":100039001,"comment_content":"220509 day02<br>1. 如何评价代码的好坏(1.可维护(新增功能简单) 2.可读(架构清晰 分层合理 代码优雅) 3.可拓展(开闭原则 对修改关闭 对拓展开放) 4.灵活(易拓展和可复用) 5.简洁(思从深而行从简 代码简单逻辑清晰) 6.可复用(减少重复代码编写复用已有代码) 7.可测试(单元测试比较好写)<br>2. 使用设计思想 设计原则 设计模式 编码规范 重构技巧改善自己的代码","like_count":0},{"had_liked":false,"id":341378,"user_name":"Hero","can_delete":false,"product_type":"c1","uid":1321726,"ip_address":"","ucode":"33D7939CC3C815","user_header":"https://static001.geekbang.org/account/avatar/00/14/2a/fe/197449a0.jpg","comment_is_top":false,"comment_ctime":1649572051,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1649572051","product_id":100039001,"comment_content":"我心目中的好代码：一个类&#47;方法不能太长；代码有简单的注释；方法里面不能在套n个方法，debug起来简直就是噩梦，异常处理得当；","like_count":0},{"had_liked":false,"id":333702,"user_name":"Geek_1af452","can_delete":false,"product_type":"c1","uid":2908485,"ip_address":"","ucode":"2FF76FB24B3FD1","user_header":"","comment_is_top":false,"comment_ctime":1644478071,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1644478071","product_id":100039001,"comment_content":"逻辑清晰、层次分明，一看就懂的代码就是好代码","like_count":0},{"had_liked":false,"id":331604,"user_name":"骑白马的菜鸟","can_delete":false,"product_type":"c1","uid":1042644,"ip_address":"","ucode":"6BD69C742B3AE0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e8/d4/a0c2569d.jpg","comment_is_top":false,"comment_ctime":1642668942,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642668942","product_id":100039001,"comment_content":"可维护性、可扩展性、可读性、可读性、可复用性、可测试性、简洁性","like_count":0},{"had_liked":false,"id":325831,"user_name":"lany66","can_delete":false,"product_type":"c1","uid":1446987,"ip_address":"","ucode":"EEF95BA9076AB4","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKdzXiawss5gGq1iaXGEECyKUFthSIOKA0cLtuYDUlvjTjkJgtjODJVOvleEENnmms98qAPNUpic3UicA/132","comment_is_top":false,"comment_ctime":1639182972,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639182972","product_id":100039001,"comment_content":"我理解的好代码易读，有注解，易维护，好扩展，耦合性小","like_count":0},{"had_liked":false,"id":322864,"user_name":"Geek_225452","can_delete":false,"product_type":"c1","uid":2850015,"ip_address":"","ucode":"EAD6D398C2A42E","user_header":"","comment_is_top":false,"comment_ctime":1637636373,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637636373","product_id":100039001,"comment_content":"评判代码质量的好坏很大程度上是比较主观的一件事，但是有一些通用的准则和评判标准：<br>1. 可维护性强<br>2. 可读性高<br>3. 可扩展性高<br>4. 简洁、灵活<br>5. 复用性强<br>6. 易测试<br>","like_count":0},{"had_liked":false,"id":322816,"user_name":"奕涛_steve","can_delete":false,"product_type":"c1","uid":1630504,"ip_address":"","ucode":"07B39F3C746C3C","user_header":"https://static001.geekbang.org/account/avatar/00/18/e1/28/0a26566d.jpg","comment_is_top":false,"comment_ctime":1637598780,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637598780","product_id":100039001,"comment_content":"总结下，可读性、可复用性、可扩展性是高质量代码最重要的指标，做到这三点其实就能写出灵活、可维护的代码。除了这三点，可测试性也很重要，但这需要与单元测试结合，需要开发流程重视单元测试。<br>模块化好的代码是在这三者的基础之上，对职责进行良好的划分得到的。职责怎样算良好划分呢？其实就是经常一起出现的代码尽量放在一起。此外，代码的职责随着项目的迭代是会变动的，因此想代码保持好的模块化，需要对代码持续重构。","like_count":0},{"had_liked":false,"id":322785,"user_name":"adrian_xia","can_delete":false,"product_type":"c1","uid":1101454,"ip_address":"","ucode":"957C329EAFD31C","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/8e/204736bb.jpg","comment_is_top":false,"comment_ctime":1637587250,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1637587250","product_id":100039001,"comment_content":"1. 不要滥用设计模式，简单的事情可能会变得复杂且不易维护<br>2. 流程的优化，可以从执行的过程入手，简单的方法就是代码执行的行数越少，执行的速度越快<br>3. 易扩展，ifelse多了就可以考虑策略了，流程相同就可以考虑模板了<br>4. 代码是持续的重构更新，从而变得越来越舒服。","like_count":0},{"had_liked":false,"id":320914,"user_name":"张浩","can_delete":false,"product_type":"c1","uid":1001225,"ip_address":"","ucode":"DBEAFFB7660813","user_header":"https://static001.geekbang.org/account/avatar/00/0f/47/09/316b0aa1.jpg","comment_is_top":false,"comment_ctime":1636555596,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1636555596","product_id":100039001,"comment_content":"好的代码能够用简单的方法解决复杂的问题。","like_count":0},{"had_liked":false,"id":320274,"user_name":"探雪","can_delete":false,"product_type":"c1","uid":2833619,"ip_address":"","ucode":"2332650D9C8D54","user_header":"https://static001.geekbang.org/account/avatar/00/2b/3c/d3/fab9d588.jpg","comment_is_top":false,"comment_ctime":1636192257,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636192257","product_id":100039001,"comment_content":"我觉得好的代码应该模块划分的足够清晰、简单易懂、运行效率高，尽可能的减少与数据库的交互","like_count":0},{"had_liked":false,"id":319249,"user_name":"慢动作","can_delete":false,"product_type":"c1","uid":2184311,"ip_address":"","ucode":"F47BDAEC694E32","user_header":"https://static001.geekbang.org/account/avatar/00/21/54/77/b0986fed.jpg","comment_is_top":false,"comment_ctime":1635695519,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635695519","product_id":100039001,"comment_content":"代码质量评判标准，自己写代码的时候也要主要：<br>可维护、可读、可扩展、可复用、灵活、简洁、可测试<br>其中可维护、可读、可扩展是最重要的3个<br>细化落地：面向对象设计思想、设计原则、设计模式、编码规范、重构技巧","like_count":0},{"had_liked":false,"id":318761,"user_name":"Geek_c46527","can_delete":false,"product_type":"c1","uid":2800355,"ip_address":"","ucode":"3C6008B6BC999F","user_header":"","comment_is_top":false,"comment_ctime":1635416962,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635416962","product_id":100039001,"comment_content":"个人理解：先是能让人理解，清晰明确，否则使用了再多的技巧也是锦上添花；其次是代码的运行效率要高，能高效率解决实际业务问题；最后是代码的维护成本较低，别人接手并且接入开发工作使用的时间少，熟悉效率高","like_count":0},{"had_liked":false,"id":317221,"user_name":"Xingyi_Xie","can_delete":false,"product_type":"c1","uid":2222614,"ip_address":"","ucode":"D1849DB8BFB1B2","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/1fXYkS0UlZUQQtzUpG2TZzVhVZHarfpWT5wjO7iajw959zysQks1vLFM2uQsKnYG3uQAhzenH9LP86goiciaCDNibQ/132","comment_is_top":false,"comment_ctime":1634715202,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634715202","product_id":100039001,"comment_content":"我认为《Zen of Python》那19句箴言（Python中执行import this可查看）的中心思想就是KISS 原则（Keep It Simple，Stupid），其中有一句就是Readability counts.（可读性至关重要。）<br><br>作为设计模式的小白一枚，不懂什么是好代码，我能尽量做到的也只有“可读性&quot;。除了认真遵守coding style的规范以外，还要做一只快乐的注释狂魔+文档狂魔。说明性文字甚至有代码的好几倍长。因为文档认真交待了问题背景、功能简介、输入输出示例、注意事项、未实现&#47;待改进等，以及一些关键点为什么要用这个方案。夸张地说，哪怕我下一秒就撞车失忆，我也能明白自己要干啥，哈哈哈~~<br><br>还好我不是程序员，不然只怕压力山大、更新迅速的残酷开发环境下，40米大刀在等着我呢~~","like_count":0},{"had_liked":false,"id":317045,"user_name":"不二","can_delete":false,"product_type":"c1","uid":1076451,"ip_address":"","ucode":"CDB603B9F87354","user_header":"https://static001.geekbang.org/account/avatar/00/10/6c/e3/45f550b5.jpg","comment_is_top":false,"comment_ctime":1634648296,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634648296","product_id":100039001,"comment_content":"类比白居易的诗，用老妪能解的字，写出美妙的诗","like_count":0},{"had_liked":false,"id":316025,"user_name":"水手","can_delete":false,"product_type":"c1","uid":1336430,"ip_address":"","ucode":"536BB54E1E3617","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/6e/e5ecc1d2.jpg","comment_is_top":false,"comment_ctime":1634110536,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634110536","product_id":100039001,"comment_content":"好的代码像诗一样优美，烂的代码像屎一样腐烂","like_count":0},{"had_liked":false,"id":315810,"user_name":"Geek1986","can_delete":false,"product_type":"c1","uid":2791270,"ip_address":"","ucode":"9D782C4382881D","user_header":"","comment_is_top":false,"comment_ctime":1634007481,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634007481","product_id":100039001,"comment_content":"赞","like_count":0},{"had_liked":false,"id":313769,"user_name":"Geek_1","can_delete":false,"product_type":"c1","uid":2704407,"ip_address":"","ucode":"59300A73996D20","user_header":"https://static001.geekbang.org/account/avatar/00/29/44/17/e4fdcaad.jpg","comment_is_top":false,"comment_ctime":1632655551,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632655551","product_id":100039001,"comment_content":"感觉自己的代码确实有很大提高空间","like_count":0},{"had_liked":false,"id":308024,"user_name":"刘泽民","can_delete":false,"product_type":"c1","uid":2731016,"ip_address":"","ucode":"E4F55018D01ABD","user_header":"","comment_is_top":false,"comment_ctime":1629361476,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629361476","product_id":100039001,"comment_content":"从代码的结构上结构清晰，功能明确，能够以简洁准确的代码来描述对应业务逻辑","like_count":0},{"had_liked":false,"id":307920,"user_name":"破发者","can_delete":false,"product_type":"c1","uid":1401266,"ip_address":"","ucode":"3B3091527479F2","user_header":"https://static001.geekbang.org/account/avatar/00/15/61/b2/f36c1d40.jpg","comment_is_top":false,"comment_ctime":1629309227,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1629309227","product_id":100039001,"comment_content":"编写大家都认为好的代码太难了，需要慢慢不断磨炼，经常向比自己牛的前辈们学习，也慢慢提升了我们的编码水平","like_count":0},{"had_liked":false,"id":306722,"user_name":"小周","can_delete":false,"product_type":"c1","uid":2453498,"ip_address":"","ucode":"7ED7BC27A46C4C","user_header":"https://static001.geekbang.org/account/avatar/00/25/6f/fa/615a0df3.jpg","comment_is_top":false,"comment_ctime":1628680950,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628680950","product_id":100039001,"comment_content":"代码分层，职责明确也挺重要的。","like_count":0},{"had_liked":false,"id":306552,"user_name":"小伟","can_delete":false,"product_type":"c1","uid":1043401,"ip_address":"","ucode":"B631E56A112BDC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/eb/c9/b1b233cf.jpg","comment_is_top":false,"comment_ctime":1628605275,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628605275","product_id":100039001,"comment_content":"可观测性，可调试性，性能，稳定性","like_count":0},{"had_liked":false,"id":306371,"user_name":"Geek_842f07","can_delete":false,"product_type":"c1","uid":2698987,"ip_address":"","ucode":"ED772AF755FE7E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/WP4Ge8ABcINFkccKaNYKibicFnI0JAoojBBAUGrichNeRAgzm5RGbHG7GqYrFX3ELEzenuEbicQHJy2HZ72RxSOuMA/132","comment_is_top":false,"comment_ctime":1628518380,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628518380","product_id":100039001,"comment_content":"文档写的好的代码也非常重要，否则后续很难相互交流","like_count":0},{"had_liked":false,"id":301811,"user_name":"风格","can_delete":false,"product_type":"c1","uid":2694209,"ip_address":"","ucode":"2CD3EA00FEA35E","user_header":"https://static001.geekbang.org/account/avatar/00/29/1c/41/f61b7f5d.jpg","comment_is_top":false,"comment_ctime":1625893641,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625893641","product_id":100039001,"comment_content":"我感觉可读的代码的代码读起来应该像『流水』一样顺畅。","like_count":0},{"had_liked":false,"id":301720,"user_name":"招选","can_delete":false,"product_type":"c1","uid":2534929,"ip_address":"","ucode":"8571CE69383BAB","user_header":"https://static001.geekbang.org/account/avatar/00/26/ae/11/8262df48.jpg","comment_is_top":false,"comment_ctime":1625821488,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625821488","product_id":100039001,"comment_content":"对于迭代开发，最怕的是读代码？！！！人员的交接不恰当项目开发进度的紧迫性，迫使我要以最快的时间读懂之前人开发的代码。","like_count":0},{"had_liked":false,"id":301439,"user_name":"Geek__126303fc81f7","can_delete":false,"product_type":"c1","uid":1453774,"ip_address":"","ucode":"D256622360E1B4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibFY0KibR500NUAibZqsZCqg8Z6XicEaqr23oZTUlFcQaMXAlhETpVBXPAiamJ1IYcc7ibn7ZGdmUycxAicibkhtSc3xYA/132","comment_is_top":false,"comment_ctime":1625699460,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625699460","product_id":100039001,"comment_content":"几个评判代码质量的标准是：可维护性、可读性、可扩展性、灵活性、简洁性、可复用性、可测试性","like_count":0},{"had_liked":false,"id":301154,"user_name":"ryzedicaprio","can_delete":false,"product_type":"c1","uid":2165183,"ip_address":"","ucode":"17B09626B466AF","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/zt58d6jCuqwTr2qSdOvBJapsB1gGPnpjORu3jq1uKKV2mdbYMBrWucKUlCwg6kjNfAQpdyCNTmcY8NYmR6UTsA/132","comment_is_top":false,"comment_ctime":1625557293,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625557293","product_id":100039001,"comment_content":"要写得不好，方法有很多：<br>1. 没有固定的编码风格，或者和整个项目的风格不一致。或者用 C++ 的风格写 Python。<br>2. 性能低下的代码。比如 n 比较大的时候，明明有 O(lgn) 的算法，却用 O(n) 的算法；n 比较小的时候，明明直接拼接字符串是最快的，还要用 StringBuffer。 <br>3. 缺乏良好的设计，想到哪里写到哪里。造成未来不可扩展。<br>4. 过早设计，过度设计，造成不必要的维护成本和运行性能低下。<br>5. 不容易懂的代码不加注释。<br>6. 作为一个模块，没有给调用者准备文档或者接口上的注释。<br>7. 考虑不周全，在大多数场合下能工作，在边界条件下就挂掉的代码。这是最主要的产生 bug 的原因。","like_count":0},{"had_liked":false,"id":300296,"user_name":"Kenneth。🌞","can_delete":false,"product_type":"c1","uid":1786752,"ip_address":"","ucode":"299ADF236395CC","user_header":"https://static001.geekbang.org/account/avatar/00/1b/43/80/b1ae32cd.jpg","comment_is_top":false,"comment_ctime":1625100961,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625100961","product_id":100039001,"comment_content":"接口职能清晰，有一个通用类实现接口，预留出扩展点，有新需求只需要针对扩展点实现业务逻辑，得到需要的业务参数","like_count":0},{"had_liked":false,"id":299375,"user_name":"易飞","can_delete":false,"product_type":"c1","uid":2630424,"ip_address":"","ucode":"32AC28754237F7","user_header":"https://static001.geekbang.org/account/avatar/00/28/23/18/4284361f.jpg","comment_is_top":false,"comment_ctime":1624602552,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1624602552","product_id":100039001,"comment_content":"健壮性也很重要","like_count":0},{"had_liked":false,"id":297077,"user_name":"Faded","can_delete":false,"product_type":"c1","uid":2655908,"ip_address":"","ucode":"9BFD018D7FAF7B","user_header":"https://static001.geekbang.org/account/avatar/00/28/86/a4/39115ec9.jpg","comment_is_top":false,"comment_ctime":1623301871,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623301871","product_id":100039001,"comment_content":"我理解的好代码：<br>  能轻松读懂其代码意思，可以重复使用，可以轻松在其基础上扩展其他功能","like_count":0},{"had_liked":false,"id":296961,"user_name":"HSC胡舒程","can_delete":false,"product_type":"c1","uid":1941115,"ip_address":"","ucode":"77D81890F5E66B","user_header":"","comment_is_top":false,"comment_ctime":1623240654,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623240654","product_id":100039001,"comment_content":"我认为可维护性性包含了对程序的扩展和修改。所以可维护性性包含了可扩展性。<br>所以在我看来好的代码主要就是做到了良好的可读性和可维护性。虽然这两点的评判标准相对主观，但是我认为所有程序员对于什么是好的代码都有一个基本的共识，","like_count":0},{"had_liked":false,"id":296400,"user_name":"管管","can_delete":false,"product_type":"c1","uid":1117885,"ip_address":"","ucode":"4CA941AD1D0167","user_header":"https://static001.geekbang.org/account/avatar/00/11/0e/bd/0046f85a.jpg","comment_is_top":false,"comment_ctime":1622954917,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1622954917","product_id":100039001,"comment_content":"类名，属性名，方法名能让人一目了然","like_count":0},{"had_liked":false,"id":295448,"user_name":"李培晟","can_delete":false,"product_type":"c1","uid":1376129,"ip_address":"","ucode":"FADEF5EBDECC18","user_header":"https://static001.geekbang.org/account/avatar/00/14/ff/81/9d05811f.jpg","comment_is_top":false,"comment_ctime":1622434231,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622434231","product_id":100039001,"comment_content":"好代码的特点：<br>1：要小，函数和类要尽量“小“<br>2：单一职责，一个函数做一件事<br>3：命名规范，名副其实<br>4：层次分明，合理划分层次<br>5：多用组合少用继承<br>6：面向接口编程","like_count":0},{"had_liked":false,"id":294567,"user_name":"Geek_ccbd80","can_delete":false,"product_type":"c1","uid":2638517,"ip_address":"","ucode":"BBA76D078D8584","user_header":"","comment_is_top":false,"comment_ctime":1622001144,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622001144","product_id":100039001,"comment_content":"经常进行重构，避免重复代码，提高可重用性","like_count":0},{"had_liked":false,"id":294292,"user_name":"米豆丸","can_delete":false,"product_type":"c1","uid":2042568,"ip_address":"","ucode":"CE99FE3A1EBCAF","user_header":"https://static001.geekbang.org/account/avatar/00/1f/2a/c8/dc4e314e.jpg","comment_is_top":false,"comment_ctime":1621865730,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621865730","product_id":100039001,"comment_content":"米豆丸-&gt;打卡","like_count":0},{"had_liked":false,"id":294237,"user_name":"帅气的名字","can_delete":false,"product_type":"c1","uid":2635800,"ip_address":"","ucode":"59B71A677963D1","user_header":"https://static001.geekbang.org/account/avatar/00/28/38/18/0a4ef54d.jpg","comment_is_top":false,"comment_ctime":1621845448,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621845448","product_id":100039001,"comment_content":"真正的高手往往能通过最简洁高效的方法来解决问题","like_count":0},{"had_liked":false,"id":293235,"user_name":"wonderful2","can_delete":false,"product_type":"c1","uid":2625536,"ip_address":"","ucode":"6BA4BBA3B9B32B","user_header":"","comment_is_top":false,"comment_ctime":1621300026,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621300026","product_id":100039001,"comment_content":"方法内部有嵌套子方法，嵌套子方法里又有嵌套子方法，一般来说建议最多嵌套几层？","like_count":0},{"had_liked":false,"id":292685,"user_name":"阿晟","can_delete":false,"product_type":"c1","uid":1103765,"ip_address":"","ucode":"690690FDC25F8A","user_header":"https://static001.geekbang.org/account/avatar/00/10/d7/95/5e53e085.jpg","comment_is_top":false,"comment_ctime":1620920654,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620920654","product_id":100039001,"comment_content":"笔记 <br>评论代码的指标<br>可维护性<br>可读性<br>可扩展性<br>简洁性<br>可重用性<br>可测试性","like_count":0},{"had_liked":false,"id":292405,"user_name":"Geek_5a9dc0","can_delete":false,"product_type":"c1","uid":2432026,"ip_address":"","ucode":"81B464DE3EAC26","user_header":"","comment_is_top":false,"comment_ctime":1620807795,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620807795","product_id":100039001,"comment_content":"的确可测试行很重要，相比其他，它是可以直接告诉你代码质量如何方法。","like_count":0},{"had_liked":false,"id":291480,"user_name":"Time-sun","can_delete":false,"product_type":"c1","uid":1949865,"ip_address":"","ucode":"47D2EB4FD2F925","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/tiaEaUwoYl8z5FROHibq5XYjjcuTia840dHYT8zqwV4ibfWPNeQHw3ib20iba8bRRkVxwYUCz9ENkDGRsfnmSJQBAALA/132","comment_is_top":false,"comment_ctime":1620302160,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620302160","product_id":100039001,"comment_content":"好的代码：不给后面维护的人留坑，后面维护的人可以很容易的增加、删除、修改某些功能","like_count":0},{"had_liked":false,"id":289982,"user_name":"贝壳喊母","can_delete":false,"product_type":"c1","uid":1208159,"ip_address":"","ucode":"4D0E8C55BDE64F","user_header":"","comment_is_top":false,"comment_ctime":1619308012,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619308012","product_id":100039001,"comment_content":"我认为除此之外，可预见性比较重要吧？尤其是在动态脚本语言当中，看别人的代码比较折磨人。<br>除此之外代码的性能也能算上一个重要的评价标准呢？ 好的代码在执行效率等方面应该也是占据一部分吧？","like_count":0},{"had_liked":false,"id":288924,"user_name":"Geek_9dbc25","can_delete":false,"product_type":"c1","uid":2242904,"ip_address":"","ucode":"6CB31893173165","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIHxTg3tYriaCXiccCf7xUl9QHibAhCMBKQ2oCicvgcuHCo4ULSguISXeHzxM9a8fFD7icfy3OgXibvUNxw/132","comment_is_top":false,"comment_ctime":1618789587,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618789587","product_id":100039001,"comment_content":"好代码：易读，易扩展","like_count":0},{"had_liked":false,"id":288530,"user_name":"杰良","can_delete":false,"product_type":"c1","uid":2567349,"ip_address":"","ucode":"5DC1D1C58A4731","user_header":"https://static001.geekbang.org/account/avatar/00/27/2c/b5/10141329.jpg","comment_is_top":false,"comment_ctime":1618531857,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618531857","product_id":100039001,"comment_content":"不同角度、不同出发点的评判标准，有时会相互冲突不可兼得，此时就需要明智地权衡、trade-off 了。","like_count":0},{"had_liked":false,"id":287894,"user_name":"Better me","can_delete":false,"product_type":"c1","uid":1261959,"ip_address":"","ucode":"CADF08D357489A","user_header":"https://static001.geekbang.org/account/avatar/00/13/41/87/46d7e1c2.jpg","comment_is_top":false,"comment_ctime":1618210582,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1618210582","product_id":100039001,"comment_content":"高质量代码的各种特性都是在表层比较主观的一些评判，但其本质应该充分符合六大设计原则单一职责、开放封闭、里氏替换、接口隔离、依赖倒置、迪米特，以及KISS、DRY、YAGNI等设计原则","like_count":0},{"had_liked":false,"id":287823,"user_name":"williamcai","can_delete":false,"product_type":"c1","uid":1158294,"ip_address":"","ucode":"B158F52C2D39BC","user_header":"https://static001.geekbang.org/account/avatar/00/11/ac/96/46b13896.jpg","comment_is_top":false,"comment_ctime":1618187176,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618187176","product_id":100039001,"comment_content":"代码结构清晰，逻辑简单明了，修改起来立马在脑子里知道要怎么处理<br>","like_count":0},{"had_liked":false,"id":287469,"user_name":"keep_it_real","can_delete":false,"product_type":"c1","uid":2055554,"ip_address":"","ucode":"F5057CAF752FF3","user_header":"https://static001.geekbang.org/account/avatar/00/1f/5d/82/81b2ba91.jpg","comment_is_top":false,"comment_ctime":1617963840,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617963840","product_id":100039001,"comment_content":"我觉得代码中多加日志也很重要，主要是异常日志，异常越早处理越好。如果是线上抛异常了，乙方能忍受你用多少时间去做调试呢？紧急情况去现场，别人都眼巴巴看着你在那里满头大汗的找bug，两三个小时过去了，你还没搞定。那你就死了。如果你加了精细的异常日志，就算甩锅你也有证据。","like_count":0},{"had_liked":false,"id":285419,"user_name":"Jerry","can_delete":false,"product_type":"c1","uid":1120977,"ip_address":"","ucode":"F10BBBA2644E46","user_header":"https://static001.geekbang.org/account/avatar/00/11/1a/d1/698609e1.jpg","comment_is_top":false,"comment_ctime":1616803782,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616803782","product_id":100039001,"comment_content":"我理解高质量的代码一定是 易于调试、易于单元测试，出现bug后能很明确是哪个类的哪个方法出现的问题。","like_count":0},{"had_liked":false,"id":284556,"user_name":"Johar","can_delete":false,"product_type":"c1","uid":1101969,"ip_address":"","ucode":"834136A6F64CDC","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/91/89123507.jpg","comment_is_top":false,"comment_ctime":1616336325,"is_pvip":false,"discussion_count":0,"race_medal":2,"score":"1616336325","product_id":100039001,"comment_content":"适当注释，文档齐全，有必要的日志，","like_count":0},{"had_liked":false,"id":284183,"user_name":"御风","can_delete":false,"product_type":"c1","uid":1812807,"ip_address":"","ucode":"51C8212BE06364","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a9/47/ded5da90.jpg","comment_is_top":false,"comment_ctime":1616116651,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616116651","product_id":100039001,"comment_content":"1.评估代码质量好坏的7个指标：可维护、可拓展、易复用、简洁、灵活、可测、<br>2.有些标准是主观的，比如可维护和可读性，不同水平的人结论不同；<br>有些标准是交叉的，比如，易用、可拓展、易复用，灵活性就强，可读、可拓展性好，那么可维护性就好。<br>3.设计原则、设计模式、编码规范的目的就是为了写出满足以上标准的代码。","like_count":0},{"had_liked":false,"id":284074,"user_name":"Wangyf","can_delete":false,"product_type":"c1","uid":2226219,"ip_address":"","ucode":"349068A07CB1D4","user_header":"https://static001.geekbang.org/account/avatar/00/21/f8/2b/339660f1.jpg","comment_is_top":false,"comment_ctime":1616057316,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1616057316","product_id":100039001,"comment_content":"作为一个刚刚入门的菜鸡，我记得大一上 C 语言课，我做作业的时候写代码，从来不添加空格，我看着那些变量和数字都挤在一起，觉得也没啥，能出结果就行。后来看视频，视频里代码，能加空格的地方，都加了空格，于是看起来，美观大方了一些。后来使用 VS 做课程设计，发现换行自动会添加空格，以至于现在我写代码，又开始依赖于写完之后，来一下格式化，看着那么多代码一下子被空格填充，真是一种莫名的美感","like_count":0},{"had_liked":false,"id":282750,"user_name":"风","can_delete":false,"product_type":"c1","uid":1077538,"ip_address":"","ucode":"104638BF19B048","user_header":"https://static001.geekbang.org/account/avatar/00/10/71/22/b8c596b6.jpg","comment_is_top":false,"comment_ctime":1615388400,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615388400","product_id":100039001,"comment_content":"好的代码首先结构要清晰，不要来回引用，不要看的时候跳来跳去；其次嵌套层级不要太深，点了100层还没有结束；再次不要写大而全的方法，功能不单一导致的问题就是功能之间容易产生影响从而产生bug，另外不容易扩展与维护，修改一个功能要考虑是否会影响其他的功能；最后就是要符合团队的编码规范，要以团队可以顺利交流为基准而不是自己以为的标准去衡量。<br>并不是看不懂就是不好，看得懂就是好，好的代码就像阅读优美的文章一样清晰而又顺畅。","like_count":0},{"had_liked":false,"id":281538,"user_name":"chenruoxu","can_delete":false,"product_type":"c1","uid":1144192,"ip_address":"","ucode":"74F740C1C5DEDA","user_header":"https://static001.geekbang.org/account/avatar/00/11/75/80/8da73d9c.jpg","comment_is_top":false,"comment_ctime":1614778192,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1614778192","product_id":100039001,"comment_content":"我觉得异常处理的全面性是比较重要的，异常捕获，根据不同异常提示不同信息，可以大大减少出问题时候的调试成本，减少排查问题所需的时间，所以我认为合适的日志级别，正确的异常处理也是好代码的评价标准。","like_count":0},{"had_liked":false,"id":280941,"user_name":"建强","can_delete":false,"product_type":"c1","uid":1397126,"ip_address":"","ucode":"62B03D0E0C64EC","user_header":"https://static001.geekbang.org/account/avatar/00/15/51/86/b5fd8dd8.jpg","comment_is_top":false,"comment_ctime":1614497958,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614497958","product_id":100039001,"comment_content":"代码的可移植性也很重要，现在的各种应用都要适应各种不同的平台和应用端，对程序的可移植性也提出了交高的要求。好的程序应该层次清晰，逻辑明确，简练优雅，清晰易懂。","like_count":0},{"had_liked":false,"id":280164,"user_name":"Geek_ea3267","can_delete":false,"product_type":"c1","uid":1962384,"ip_address":"","ucode":"71C1EBF50F457A","user_header":"","comment_is_top":false,"comment_ctime":1614100892,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614100892","product_id":100039001,"comment_content":"个人主观认为可读性是第一位, 开发中的时间是在看别人写的代码, 简洁性, 可读性高的代码能很大的提高工作效率","like_count":0},{"had_liked":false,"id":278317,"user_name":"星夜","can_delete":false,"product_type":"c1","uid":1128491,"ip_address":"","ucode":"3B46C09D994CEB","user_header":"https://static001.geekbang.org/account/avatar/00/11/38/2b/9db9406b.jpg","comment_is_top":false,"comment_ctime":1612871130,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612871130","product_id":100039001,"comment_content":"个人在一些代码的命名上常常感觉非常头疼，比如类、变量、方法等等，也见识过一些大佬的命名，都是非常精确的描述了其作用与功能，但是自己常常不得要领。当然这个问题和讨论有写跑题，因为老师总结的非常全面了。","like_count":0},{"had_liked":false,"id":278227,"user_name":"你当像鸟飞往你的山","can_delete":false,"product_type":"c1","uid":1116363,"ip_address":"","ucode":"7F63B307D7B92D","user_header":"https://static001.geekbang.org/account/avatar/00/11/08/cb/5a0690cb.jpg","comment_is_top":false,"comment_ctime":1612835584,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612835584","product_id":100039001,"comment_content":"我觉得可读性是可维护性的基本前提","like_count":0},{"had_liked":false,"id":271167,"user_name":"牛牛","can_delete":false,"product_type":"c1","uid":1194626,"ip_address":"","ucode":"CFCE68B4F92209","user_header":"https://static001.geekbang.org/account/avatar/00/12/3a/82/1ff83a38.jpg","comment_is_top":false,"comment_ctime":1609427943,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609427943","product_id":100039001,"comment_content":"常用评价代码质量的角度：<br>1. 易维护<br>2. 可读性强<br>3. 可扩展<br>4. 灵活<br>5. 可复用<br>6. 可测试<br>7. 简洁","like_count":0},{"had_liked":false,"id":269263,"user_name":"衡友乐","can_delete":false,"product_type":"c1","uid":1110813,"ip_address":"","ucode":"DF776E7C452ED2","user_header":"https://static001.geekbang.org/account/avatar/00/10/f3/1d/3d1746bd.jpg","comment_is_top":false,"comment_ctime":1608595575,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608595575","product_id":100039001,"comment_content":"对于可读性，代码注释不重要么？现在很多人不爱写注释包括版本管理提交的时候写的注释也很简单","like_count":0},{"had_liked":false,"id":269232,"user_name":"Tracy.li","can_delete":false,"product_type":"c1","uid":1243460,"ip_address":"","ucode":"0338DEC133CC9F","user_header":"https://static001.geekbang.org/account/avatar/00/12/f9/44/1a5e5992.jpg","comment_is_top":false,"comment_ctime":1608562518,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608562518","product_id":100039001,"comment_content":"邓主席说过 ：管他什么扩展可读性，能满足企业生产力得代码就是好代码","like_count":0},{"had_liked":false,"id":268248,"user_name":"Hi Young","can_delete":false,"product_type":"c1","uid":1548645,"ip_address":"","ucode":"E1E9C88399F3C2","user_header":"https://static001.geekbang.org/account/avatar/00/17/a1/65/44853770.jpg","comment_is_top":false,"comment_ctime":1608112094,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608112094","product_id":100039001,"comment_content":"读书笔记：https:&#47;&#47;www.yuque.com&#47;zhaohaiyang&#47;notes&#47;uimfq9","like_count":0},{"had_liked":false,"id":267937,"user_name":"Hi Young","can_delete":false,"product_type":"c1","uid":1548645,"ip_address":"","ucode":"E1E9C88399F3C2","user_header":"https://static001.geekbang.org/account/avatar/00/17/a1/65/44853770.jpg","comment_is_top":false,"comment_ctime":1608000394,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608000394","product_id":100039001,"comment_content":"🎁可读性<br>1. 易读、易理解（code review）<br>2. 符合编码规范<br>🎁简洁性<br>1. 简单，清晰（KISS）<br>a. 思从深，行从简<br>b. 不要过早、过度设计<br>🎁健壮性<br>1. 边界处理<br>2. 异常处理<br>3. 高并发承载<br>🎁可维护性<br>无论新人、老人，无论初级、资深<br>1. 是否冒着极大风险修改or添加代码？<br>2. 是否花费很长时间完成维护？<br>a. 使用容易通过log等手段排查问题？<br>🎁可扩展性<br>1. 应对未来需求变化的能力<br>a. 代码预留扩展点<br>ⅰ. 不修改or少量修改原有代码，通过扩展的方式添加新功能代码<br>b. 程序=数据结构+算法（control + logic），分离两种算法<br>🎁可复用性<br>1. 减少重复代码编写，复用已有（DRY）<br>🎁可测试性<br>1. 单元测试难写，侧面说明代码设计有问题<br>2. 单元测试不要依赖于环境","like_count":0},{"had_liked":false,"id":267487,"user_name":"Geek_652490","can_delete":false,"product_type":"c1","uid":1817165,"ip_address":"","ucode":"0612EE1FD02AF1","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/0qP9dQyibmPu1JUAan9bXEXZBAaOetRStstIcQDXZUFdU9jHb5W3RlNfCBI0kVkZzZTf6NbXwSY4IQqOsVSNQibw/132","comment_is_top":false,"comment_ctime":1607765569,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607765569","product_id":100039001,"comment_content":"代码质量的评价七个角度<br>1 维护性<br>2 可读性<br>3 可扩展性<br>4 灵活性<br>5 简洁性<br>6 可复用性<br>7 可测试性","like_count":0},{"had_liked":false,"id":267360,"user_name":"焱","can_delete":false,"product_type":"c1","uid":1113301,"ip_address":"","ucode":"677BF1BE4B94D5","user_header":"https://static001.geekbang.org/account/avatar/00/10/fc/d5/1cf5fd56.jpg","comment_is_top":false,"comment_ctime":1607693768,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607693768","product_id":100039001,"comment_content":"个人理解，好的代码别人一看就能自叹弗如( っ&#39;-&#39;)╮ =͟͟͞͞🏀","like_count":0},{"had_liked":false,"id":265197,"user_name":"冯佳兴","can_delete":false,"product_type":"c1","uid":1717342,"ip_address":"","ucode":"41D308E99EF9FF","user_header":"https://static001.geekbang.org/account/avatar/00/1a/34/5e/089ac156.jpg","comment_is_top":false,"comment_ctime":1606811221,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606811221","product_id":100039001,"comment_content":"简单易读，今天看能明白，明天看也能明白，过一年后依然能够明白<br>整洁，层次分明，但凡有重复的代码，就该想着抽离<br>为啥源码不易读，感觉抽象程度太高了，扩展性太高了，你调用我，我调用你，我感觉中性的代码最好了","like_count":0},{"had_liked":false,"id":261661,"user_name":"Coding小先","can_delete":false,"product_type":"c1","uid":1051563,"ip_address":"","ucode":"965B1CC757E026","user_header":"https://static001.geekbang.org/account/avatar/00/10/0b/ab/0e2857e5.jpg","comment_is_top":false,"comment_ctime":1605485754,"is_pvip":false,"replies":[{"id":"96138","content":"������","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1606701380,"ip_address":"","comment_id":261661,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1605485754","product_id":100039001,"comment_content":"代码质量，我觉得首先最重要的是代码规范，还有一个就是代码注释，起码要让自己过段时间后，还有同事能够一眼明白你的代码的作用是什么。另外在架构 代码设计上，扩展性也是非常重要的。有些不好的设计和架构，要添加一个功能得修改很多的代码才行","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509557,"discussion_content":"������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606701380,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":260712,"user_name":"Geek_7cb078","can_delete":false,"product_type":"c1","uid":1697610,"ip_address":"","ucode":"EEEE2DF8D21121","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ6peT4XHOU7sibZ1Htb2oU3Ldg668DPWJTZuq1y6NzcTKPxU0KB50Cy3EI8CJ33bJAHnlZ1jVicg8Q/132","comment_is_top":false,"comment_ctime":1605087308,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605087308","product_id":100039001,"comment_content":"运行效率，代码注释覆盖率","like_count":0},{"had_liked":false,"id":258990,"user_name":"sethlee","can_delete":false,"product_type":"c1","uid":2286923,"ip_address":"","ucode":"71E5AEC9BF1117","user_header":"","comment_is_top":false,"comment_ctime":1604590764,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604590764","product_id":100039001,"comment_content":"结构清晰，风格统一","like_count":0},{"had_liked":false,"id":256276,"user_name":"一万小时","can_delete":false,"product_type":"c1","uid":1297927,"ip_address":"","ucode":"D2D443595BB1ED","user_header":"","comment_is_top":false,"comment_ctime":1603591350,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603591350","product_id":100039001,"comment_content":"我认为好的代码就是艺术品，从main就可以看出这代码是出自高手之手，从命名到设计都有一种优美感","like_count":0},{"had_liked":false,"id":255270,"user_name":"幺零贰肆","can_delete":false,"product_type":"c1","uid":1726261,"ip_address":"","ucode":"B559E8E9AA5183","user_header":"https://static001.geekbang.org/account/avatar/00/1a/57/35/b325d272.jpg","comment_is_top":false,"comment_ctime":1603292327,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603292327","product_id":100039001,"comment_content":"1.代码整洁且符合语言规范格式，<br>2.有必要注释，<br>3.较少的逻辑冗余","like_count":0},{"had_liked":false,"id":251144,"user_name":"Evan","can_delete":false,"product_type":"c1","uid":1344281,"ip_address":"","ucode":"B877ABD0CF4661","user_header":"https://static001.geekbang.org/account/avatar/00/14/83/19/0a3fe8c1.jpg","comment_is_top":false,"comment_ctime":1601377072,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1601377072","product_id":100039001,"comment_content":"KISS, 可测试性非常重要，另外可维护性、可读性、可扩展性等也比较重要，其它特性也重要。","like_count":0},{"had_liked":false,"id":249224,"user_name":"REAL_MADIRD","can_delete":false,"product_type":"c1","uid":1012889,"ip_address":"","ucode":"9E327B5456739D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/74/99/dbdee494.jpg","comment_is_top":false,"comment_ctime":1600509496,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600509496","product_id":100039001,"comment_content":"readability这条应该是给同水平或者更高水平的程序员看的，就算可读性很好，水平低的程序员还是不会觉得可读，哈哈","like_count":0},{"had_liked":false,"id":248827,"user_name":"曙光","can_delete":false,"product_type":"c1","uid":1476450,"ip_address":"","ucode":"04D65BF7F19845","user_header":"https://static001.geekbang.org/account/avatar/00/16/87/62/f99b5b05.jpg","comment_is_top":false,"comment_ctime":1600326572,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600326572","product_id":100039001,"comment_content":"思考题，老师对代码评判标准提的非常清晰了。一般自己评判代码的标准，也就停留在易扩展、易维护、易读这一层，只要能读懂，就是成功。","like_count":0},{"had_liked":false,"id":246354,"user_name":"Younger Ku","can_delete":false,"product_type":"c1","uid":1323102,"ip_address":"","ucode":"D157DC38BDB515","user_header":"https://static001.geekbang.org/account/avatar/00/14/30/5e/c42bc33f.jpg","comment_is_top":false,"comment_ctime":1599293722,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599293722","product_id":100039001,"comment_content":"不熟悉设计思想，设计模式， 设计原则，编码规范，重构技巧等知识，即便看到好的代码也说不出哪里好，但就是觉得好，这种感觉挺痛苦的，觉得自己进了蛋糕房，吃着🍰味道不错，结果出来后就忘了刚才的味道。所以我觉得好的代码是我看的时候知道作者为什么这样编码，符合哪些规范，而如果想要有这种感觉首先就得提升自己品鉴代码的能力。","like_count":0},{"had_liked":false,"id":244965,"user_name":"JerryZhu","can_delete":false,"product_type":"c1","uid":1591223,"ip_address":"","ucode":"76850CD45786C1","user_header":"https://static001.geekbang.org/account/avatar/00/18/47/b7/b30472fd.jpg","comment_is_top":false,"comment_ctime":1598764974,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598764974","product_id":100039001,"comment_content":"我心目中的好代码从直观来说，就是一看就知道干啥，设计思路清晰， 几乎不用写过多的注释， 符合人类语言习惯，想调用和扩展，直接根据习惯就能拿到想要的方法","like_count":0},{"had_liked":false,"id":243796,"user_name":"y y gi r l","can_delete":false,"product_type":"c1","uid":2132615,"ip_address":"","ucode":"0BC00677D3071D","user_header":"https://static001.geekbang.org/account/avatar/00/20/8a/87/dd68531b.jpg","comment_is_top":false,"comment_ctime":1598278757,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598278757","product_id":100039001,"comment_content":"好代码就是注重模块化","like_count":0},{"had_liked":false,"id":241678,"user_name":"python","can_delete":false,"product_type":"c1","uid":1870014,"ip_address":"","ucode":"2226125EBC99A5","user_header":"https://static001.geekbang.org/account/avatar/00/1c/88/be/cc6a7c11.jpg","comment_is_top":false,"comment_ctime":1597388933,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597388933","product_id":100039001,"comment_content":"1、代码的可读性非常重要，之前有个同事写的代码难以理解，别人都不愿意看他写的代码，那种逻辑不是一般人能够理解的","like_count":0},{"had_liked":false,"id":239872,"user_name":"席席","can_delete":false,"product_type":"c1","uid":1591399,"ip_address":"","ucode":"656377E29D4F76","user_header":"https://static001.geekbang.org/account/avatar/00/18/48/67/128eda8f.jpg","comment_is_top":false,"comment_ctime":1596681394,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596681394","product_id":100039001,"comment_content":"面向接口","like_count":0},{"had_liked":false,"id":239643,"user_name":"天网_beta","can_delete":false,"product_type":"c1","uid":1191117,"ip_address":"","ucode":"57F334F9AA8EAF","user_header":"https://static001.geekbang.org/account/avatar/00/12/2c/cd/314156af.jpg","comment_is_top":false,"comment_ctime":1596603347,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596603347","product_id":100039001,"comment_content":"我自己排序质量指标重要性：<br>1. 可读性<br>2. 维护性<br>3. 可扩展性<br>4. 可测试性<br>同时满足这4个指标的代码已经很好，很安全了","like_count":0},{"had_liked":false,"id":239493,"user_name":"坚持","can_delete":false,"product_type":"c1","uid":1004051,"ip_address":"","ucode":"80049DF366F37E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI8HY5UxPvK5EIEicxCARjePdicpkcdyViaxn0dHrVsfXOA49BHkyMW4h3LSZhnCz6jXTgx2PFEKXYWQ/132","comment_is_top":false,"comment_ctime":1596548420,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596548420","product_id":100039001,"comment_content":"逻辑清晰，简单明了，新手都能看懂","like_count":0},{"had_liked":false,"id":239350,"user_name":"磐星","can_delete":false,"product_type":"c1","uid":1003640,"ip_address":"","ucode":"19436A86714C3D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/50/78/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1596508744,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596508744","product_id":100039001,"comment_content":"以前主要在可扩展 可读 可维护几个方面去看","like_count":0},{"had_liked":false,"id":238995,"user_name":"Ilearning99","can_delete":false,"product_type":"c1","uid":1989119,"ip_address":"","ucode":"7901836A2C47EF","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/qOdqzmC507sibL6sichNSDaVmyoMKibEIqHWpic4CftgOQnoA3QKeRPwic9j1Ha8MLtzzqzfSRavR9GWMju09SMADUg/132","comment_is_top":false,"comment_ctime":1596412087,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596412087","product_id":100039001,"comment_content":"我觉得好代码的标准，应该是可读性、可维护性、可扩展性、有时候可能还需要先进性，代码中能有最新的一些语言方面的特性。好代码从命名方面就显得非常不一样，一定非常易读。","like_count":0},{"had_liked":false,"id":238590,"user_name":"Elvis Lee","can_delete":false,"product_type":"c1","uid":2098270,"ip_address":"","ucode":"A4B26AFFE817FA","user_header":"https://static001.geekbang.org/account/avatar/00/20/04/5e/5d2e6254.jpg","comment_is_top":false,"comment_ctime":1596207278,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1596207278","product_id":100039001,"comment_content":"简单易读，易使用，新手也能上手修改","like_count":0},{"had_liked":false,"id":238301,"user_name":"Happy—sea","can_delete":false,"product_type":"c1","uid":1624484,"ip_address":"","ucode":"4EAD3636164392","user_header":"https://static001.geekbang.org/account/avatar/00/18/c9/a4/66b606ad.jpg","comment_is_top":false,"comment_ctime":1596116328,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596116328","product_id":100039001,"comment_content":"我觉得代码健壮性很重要","like_count":0},{"had_liked":false,"id":237143,"user_name":"思密达","can_delete":false,"product_type":"c1","uid":1812646,"ip_address":"","ucode":"82FF8EE9A37461","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a8/a6/825879a0.jpg","comment_is_top":false,"comment_ctime":1595689595,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595689595","product_id":100039001,"comment_content":"刚开始写代码的时候，没有高手指点，也不知道好代码长什么样子，写代码就像写散文，东一块西一块，乱的没有样子。现在知道了要把公共部分抽象为方法，遵循dry原则。变量命名和规范也开始注意了起来。又开始学习设计模式������","like_count":0},{"had_liked":false,"id":236862,"user_name":"吴佳同","can_delete":false,"product_type":"c1","uid":2082847,"ip_address":"","ucode":"F6D3B5FF421662","user_header":"https://static001.geekbang.org/account/avatar/00/1f/c8/1f/bbfaa4d9.jpg","comment_is_top":false,"comment_ctime":1595571297,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595571297","product_id":100039001,"comment_content":"可运行性 可用性 能达到预期目的","like_count":0},{"had_liked":false,"id":235406,"user_name":"大飞守角","can_delete":false,"product_type":"c1","uid":1199825,"ip_address":"","ucode":"5A5BFF885986A3","user_header":"https://static001.geekbang.org/account/avatar/00/12/4e/d1/ded6b849.jpg","comment_is_top":false,"comment_ctime":1595001215,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595001215","product_id":100039001,"comment_content":"遵循六大设计原则的代码，属于高质量的代码","like_count":0},{"had_liked":false,"id":235203,"user_name":"prepared","can_delete":false,"product_type":"c1","uid":1194853,"ip_address":"","ucode":"00E54A5C7CDCBE","user_header":"https://static001.geekbang.org/account/avatar/00/12/3b/65/3a4fc8cf.jpg","comment_is_top":false,"comment_ctime":1594943939,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594943939","product_id":100039001,"comment_content":"注释规范很重要。没有无关注释，没有不对题的注释；有注释，而不是一大堆没注释的代码；方法简短逻辑清晰的代码，很多新手写超过500行的代码。。。","like_count":0},{"had_liked":false,"id":232460,"user_name":"幽林萌逐","can_delete":false,"product_type":"c1","uid":1520451,"ip_address":"","ucode":"E6D95EC891800F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLqrAA1j4Oyy6ibicNOicn8K0olrEjtLLanic8V0y9icia6cvCVRCiabOm5llC0WhzcSWvaI2fia75hYbvjrQ/132","comment_is_top":false,"comment_ctime":1594010489,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594010489","product_id":100039001,"comment_content":"以最少的代码 做最多的事情 是我心目中 代码量少了必然可读性高了，也更好的维护了，当然必须遵循单一职责原则，不然后期代码复用会有很大的问题。","like_count":0},{"had_liked":false,"id":228331,"user_name":"陈狄","can_delete":false,"product_type":"c1","uid":2011954,"ip_address":"","ucode":"456F00EB2EB43D","user_header":"https://static001.geekbang.org/account/avatar/00/1e/b3/32/0ee78a1a.jpg","comment_is_top":false,"comment_ctime":1592642753,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592642753","product_id":100039001,"comment_content":"我自己写代码的一个原则是奥卡姆剃刀，没有必要就不要写的很复杂","like_count":0},{"had_liked":false,"id":226512,"user_name":"小树苗","can_delete":false,"product_type":"c1","uid":1644500,"ip_address":"","ucode":"71288176D058E2","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqtnoXPFibFwKdrUibJQWYSCmAlc7FeEH5MbjiawszNgwEXAkuWKGYQMTQbnQbjlR8n9lpDgN4GQHoXQ/132","comment_is_top":false,"comment_ctime":1592126183,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592126183","product_id":100039001,"comment_content":"逻辑清晰，代码简洁，命名规范，功能单一。","like_count":0},{"had_liked":false,"id":226442,"user_name":"Chris Zou","can_delete":false,"product_type":"c1","uid":1897148,"ip_address":"","ucode":"B6DFC71C1DD8B7","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f2/bc/ffc7ad67.jpg","comment_is_top":false,"comment_ctime":1592103805,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592103805","product_id":100039001,"comment_content":"* 你觉得还有哪些其他的代码评价标准非常重要？聊一聊你心目中的好代码是什么样子的？<br>1. 功能完整：不会频繁崩溃<br>2. 阅读性好：有必要的注释，简洁，编码规范、命名，模块化<br>3. 扩展性好：容易增加功能<br>4. 维护性好：定位问题方便<br>5. 可复用：<br>6. 可测试：<br>7. 高性能：<br>8. 高安全性","like_count":0},{"had_liked":false,"id":226231,"user_name":"邹培俊","can_delete":false,"product_type":"c1","uid":1199467,"ip_address":"","ucode":"54B1AAE6BDAB33","user_header":"https://static001.geekbang.org/account/avatar/00/12/4d/6b/79642a53.jpg","comment_is_top":false,"comment_ctime":1592011182,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592011182","product_id":100039001,"comment_content":"职则边界清晰，隔离变的业务和不变的逻辑，代码工整。代码评审的时候一句话能说清楚干什么，解决什么问题。","like_count":0},{"had_liked":false,"id":224835,"user_name":"面向工资编程","can_delete":false,"product_type":"c1","uid":1618828,"ip_address":"","ucode":"07F797F021BDD0","user_header":"","comment_is_top":false,"comment_ctime":1591560928,"is_pvip":false,"replies":[{"id":"84003","content":"😂","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1592526845,"ip_address":"","comment_id":224835,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1591560928","product_id":100039001,"comment_content":"为什么 KISS 中最后一个 S 代表 Stupid 而不是 Smart 呢？","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497624,"discussion_content":"😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592526845,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":220002,"user_name":"朝小树","can_delete":false,"product_type":"c1","uid":1323875,"ip_address":"","ucode":"18DC282DEF16C8","user_header":"https://static001.geekbang.org/account/avatar/00/14/33/63/2d48822a.jpg","comment_is_top":false,"comment_ctime":1590133647,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590133647","product_id":100039001,"comment_content":"大巧不工，不要为了炫技，去写一些不够简洁的代码","like_count":0},{"had_liked":false,"id":219996,"user_name":"朝小树","can_delete":false,"product_type":"c1","uid":1323875,"ip_address":"","ucode":"18DC282DEF16C8","user_header":"https://static001.geekbang.org/account/avatar/00/14/33/63/2d48822a.jpg","comment_is_top":false,"comment_ctime":1590133251,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590133251","product_id":100039001,"comment_content":"思从深而行从简；<br>赞同这句话，有时候把需求想到很清晰了，写代码就会成竹在熊，游刃有余；不用为了炫技而去写别人比较难看懂的代码，大巧不工。","like_count":0},{"had_liked":false,"id":219907,"user_name":"Geek_216fd5","can_delete":false,"product_type":"c1","uid":1602049,"ip_address":"","ucode":"EA6804E9E974B3","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLb5UK2u6RyS48ia8H2lUSlUyQEaBiclDlqpbQUWqTWeuf3Djl3ruHRN3U37GXYuWAfAW5d1xkm6F7w/132","comment_is_top":false,"comment_ctime":1590116325,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590116325","product_id":100039001,"comment_content":"优秀项目解析非常利于技术水平成长，赞一个","like_count":0},{"had_liked":false,"id":219795,"user_name":"永远不要低估一颗冠军的心","can_delete":false,"product_type":"c1","uid":1339230,"ip_address":"","ucode":"FF0DD7382CD3CA","user_header":"https://static001.geekbang.org/account/avatar/00/14/6f/5e/3f7e9ccd.jpg","comment_is_top":false,"comment_ctime":1590102147,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590102147","product_id":100039001,"comment_content":"代码评价标准还有规范的命名，想不到更多了，老师的总结已经很全面了。","like_count":0},{"had_liked":false,"id":216413,"user_name":"师哥","can_delete":false,"product_type":"c1","uid":1333376,"ip_address":"","ucode":"A86CD1661D370F","user_header":"https://static001.geekbang.org/account/avatar/00/14/58/80/c9e232b6.jpg","comment_is_top":false,"comment_ctime":1589254882,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589254882","product_id":100039001,"comment_content":"我学到的什么内容？ 我学到了 1.代码好坏的评判标准涉及到几个方面；可维护性，可读行，可扩展性，简洁，灵活性  ，复用性，可测试性。2.知道了评判标准就要按照评判标准写出高质量的代码，编写的时候要使用面向对象设计思想，设计原则，设计模式，编码规范，重构等技巧。<br>我对学到内容的感受？如果要成为一个行业从业者，这些知识要早点知道。<br>这些内容给我带来的收获是？高质量和高效代码的开端。<br>我今后会应用到哪些方面？ 马上会在我的日常工作中使用。<br>","like_count":0},{"had_liked":false,"id":214979,"user_name":"文超","can_delete":false,"product_type":"c1","uid":1673835,"ip_address":"","ucode":"9994423E67FB4C","user_header":"https://static001.geekbang.org/account/avatar/00/19/8a/6b/992dc7d1.jpg","comment_is_top":false,"comment_ctime":1588862782,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588862782","product_id":100039001,"comment_content":"1. 变量命名和函数命名的准确性；<br>2. 代码长度的控制。<br><br>上面两个是比较具体的方法","like_count":0},{"had_liked":false,"id":213953,"user_name":"JKwar","can_delete":false,"product_type":"c1","uid":1047466,"ip_address":"","ucode":"B733CA24D5701F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/aa/01fedf6c.jpg","comment_is_top":false,"comment_ctime":1588598221,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1588598221","product_id":100039001,"comment_content":"接手过一个项目，那代码看的我一言难尽，没注释，面向过程编程，策略末世都不会用，感觉掉进了坑。","like_count":0},{"had_liked":false,"id":213952,"user_name":"JKwar","can_delete":false,"product_type":"c1","uid":1047466,"ip_address":"","ucode":"B733CA24D5701F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/aa/01fedf6c.jpg","comment_is_top":false,"comment_ctime":1588598124,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1588598124","product_id":100039001,"comment_content":"代码质量的标准知道了，比我看书得到的要清晰的多。","like_count":0},{"had_liked":false,"id":213483,"user_name":"子夜2104","can_delete":false,"product_type":"c1","uid":1070286,"ip_address":"","ucode":"C4FF54AEA6002F","user_header":"https://static001.geekbang.org/account/avatar/00/10/54/ce/92029d2f.jpg","comment_is_top":false,"comment_ctime":1588430010,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588430010","product_id":100039001,"comment_content":"今天重温了第二节，什么是好的代码？我的收获有：<br><br>首先，我们需要知道的是代码好坏的评判是很主观的事情。资深工程师会觉得添加新的功能很容易实现，一下就能读懂代码的含义。但对于新手而言，代码理解起来就比较困难。可以参考一些基本的评价标准。<br>可维护性（maintainability）<br>对于一个项目来说，维护代码的时间远远大于编写代码的时间。一个项目好维护可以体现在容易Debug 、好修改老代码、方便加新功能。对于Debug而言，可行的操作是记录好日志。要想修改老代码，你得读懂老代码，最好有注释、有文档、有测试代码。候选要添加新功能，那得预留好扩展点，好添加新模块、函数等。<br>可读性（readability）<br>代码被阅读的次数远远超过被编写和执行的次数。你的同事能够读懂你的代码。这可以体现在模块划分明确，职责单一、编码规范、命名达意、注释详尽、函数长短合适等方面。<br>可扩展性（extensibilty）<br>代码中提前留好了扩展点，以后添加新功能时，可以直接开始做，不必对源代码做出很大的修改，这可以遵循开闭原则，即对扩展开放，对修改关闭。模块、类和方法在不同层面看，可以说是修改，也可以说是扩展，所以只需要最核心的部分满足开闭原则即可，不可能代码一点都不修改，就能完成新的功能。开闭原则的初衷是修改后的代码不影响现有的功能，单元测试。遵循开闭原则，行之有效的操作是封装和抽象。变化的用类来封装，不变的用接口来抽象。<br>灵活性（fexibility）<br>代码的灵活性包括是比较广泛的，比如代码易扩展、易复用、接口易用都可以体现出灵活。<br>简洁性（simplity）<br>要使代码简洁，可以遵循KISS原则(Keep It Simple，Stupid)：不要使用同事可能不懂的技术来实现代码，不要炫技；不要重复造轮子，要善于使用已经有的工具类库；不要过度优化。<br>可复用性（reusability）<br>在开发新的功能时，开发者复用现有的代码， 那么这段代码就具有可复用性。要想编写出可复用性的代码，可以遵循的原则有：单一职责原则、使用封装，继承，抽象，多态的思想、区分业务代码和通用代码、应用模板等设计模式。<br>可测试性（testability）<br>代码可以进行单元测试，要写出可测试性的代码可以遵循的原则有：解耦、多用组合、依赖注入、封装未决行为。<br>我认为的好的代码：当你写的代码，交给别人时，他很容易看懂，能够快速理解你想要表达的意思；很方便的进行测试，以理解各个模块的功能；容易扩展，添加新功能时，不出bug；不重复造轮子，可以复用你的代码。<br>要写出满足这些评价标准的高质量代码，我们需要掌握一些更加细化、更加能落地的编程方法论，包括面向对象设计思想、设计原则、设计模式、编码规范、重构技巧等。","like_count":0},{"had_liked":false,"id":209044,"user_name":"蚂蚁内推+v","can_delete":false,"product_type":"c1","uid":1050508,"ip_address":"","ucode":"24B10AEE54B3FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/07/8c/0d886dcc.jpg","comment_is_top":false,"comment_ctime":1587482290,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587482290","product_id":100039001,"comment_content":"有些时候系统的扩展性不仅仅只需要后端设计上去考虑，优秀的工程师还要站在产品的的角度去考虑，然后推动产品去改进","like_count":0},{"had_liked":false,"id":208447,"user_name":"LiJun","can_delete":false,"product_type":"c1","uid":1230243,"ip_address":"","ucode":"393B4FC43D8441","user_header":"https://static001.geekbang.org/account/avatar/00/12/c5/a3/f941c7ff.jpg","comment_is_top":false,"comment_ctime":1587360386,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587360386","product_id":100039001,"comment_content":"我心中好代码的标准是：<br>1.  易阅读，好维护。<br>2. 注释全。<br>3. 性能好。<br>个人觉得代码不仅是写给机器读的，而且是写给人看的（因为系统需要维护，升级）。","like_count":0},{"had_liked":false,"id":206553,"user_name":"孙晴鹍","can_delete":false,"product_type":"c1","uid":1641796,"ip_address":"","ucode":"314BD485CBAA8A","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqOiaQb1nAtlbXKP07HaOWQyeRfmtqj0JEIE7Q9IoDDvmriczIfKMfSfrnOiciazzHPNnaBeaTNqOhF8Q/132","comment_is_top":false,"comment_ctime":1586878749,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586878749","product_id":100039001,"comment_content":"思从深而行从简","like_count":0},{"had_liked":false,"id":203743,"user_name":"冯佳兴","can_delete":false,"product_type":"c1","uid":1717342,"ip_address":"","ucode":"41D308E99EF9FF","user_header":"https://static001.geekbang.org/account/avatar/00/1a/34/5e/089ac156.jpg","comment_is_top":false,"comment_ctime":1586261749,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586261749","product_id":100039001,"comment_content":"高内聚，低耦合，可读，可扩展。高可用，高并发，高性能<br>","like_count":0},{"had_liked":false,"id":203150,"user_name":"MrVito","can_delete":false,"product_type":"c1","uid":1252169,"ip_address":"","ucode":"716FF6F8871706","user_header":"https://static001.geekbang.org/account/avatar/00/13/1b/49/ddefc656.jpg","comment_is_top":false,"comment_ctime":1586144926,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586144926","product_id":100039001,"comment_content":"我觉得，需要尊重人脑，尊重人的思路，像命名也是一种设计原则，KISS虽然看似简单，但是要用好也不容易。可测试性也是蛮重要的，粒度需要适当，不能太小也不能太大。","like_count":0},{"had_liked":false,"id":203131,"user_name":"guan0078","can_delete":false,"product_type":"c1","uid":1090467,"ip_address":"","ucode":"53B15FF3752A40","user_header":"https://static001.geekbang.org/account/avatar/00/10/a3/a3/804fb3e9.jpg","comment_is_top":false,"comment_ctime":1586142684,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586142684","product_id":100039001,"comment_content":"代码可读性还应该有一个：代码风格的一致性。现在公司的一个系统基本没有一个人就能完全搞定，都是需要协同作业。但每个人代码风格都不一样。尤其新搭建的团队，真是一人一种写法，引用的utils也全凭自己喜好。<br>code review一直是我最喜欢的工具。就算团队没有大神坐镇，起码能快速实现代码编程风格的统一，阅读起来也会轻松一些。其实有些代码无所谓好坏，然如果风格统一，那他就是好的。","like_count":0},{"had_liked":false,"id":202507,"user_name":"爱乐之城QF","can_delete":false,"product_type":"c1","uid":1946274,"ip_address":"","ucode":"62ACCB2769BB94","user_header":"https://static001.geekbang.org/account/avatar/00/1d/b2/a2/929b6e31.jpg","comment_is_top":false,"comment_ctime":1585998008,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585998008","product_id":100039001,"comment_content":"可测试性   这点经常忽略和提及","like_count":0},{"had_liked":false,"id":202385,"user_name":"👅","can_delete":false,"product_type":"c1","uid":1335335,"ip_address":"","ucode":"3A3198E899DC6A","user_header":"https://static001.geekbang.org/account/avatar/00/14/60/27/fcc46413.jpg","comment_is_top":false,"comment_ctime":1585980894,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585980894","product_id":100039001,"comment_content":"我认为要用对合适的设计模式，就像文中说的，大道至简","like_count":0},{"had_liked":false,"id":202354,"user_name":"五行属鱼","can_delete":false,"product_type":"c1","uid":1396667,"ip_address":"","ucode":"D8D81C17730C79","user_header":"https://static001.geekbang.org/account/avatar/00/15/4f/bb/7da4906b.jpg","comment_is_top":false,"comment_ctime":1585973559,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585973559","product_id":100039001,"comment_content":"评价代码质量好坏，不能单一评价。但日常工作中，我会把代码可维护性，可扩展性，易读性，机器执行效率作为代码评价标准。公司评论代码好坏是要求，脱机换环境后仍可执行，功能完成，在此基础上尽可能执行效率高。<br>但遗憾的是，自己写出的总是觉得差点意思。经常以前的代码过段时间，注释稍微简略点，就不知道怎么写出来的了。注释详尽，deadline时间线紧，当时又太难受","like_count":0},{"had_liked":false,"id":200401,"user_name":"技术骨干","can_delete":false,"product_type":"c1","uid":1098720,"ip_address":"","ucode":"8FCF8DE6D29201","user_header":"https://static001.geekbang.org/account/avatar/00/10/c3/e0/3db22579.jpg","comment_is_top":false,"comment_ctime":1585580416,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585580416","product_id":100039001,"comment_content":"好质量一看就知道了，逻辑清晰的代码","like_count":0},{"had_liked":false,"id":198564,"user_name":"与路同飞","can_delete":false,"product_type":"c1","uid":1138821,"ip_address":"","ucode":"2985F1440A1962","user_header":"https://static001.geekbang.org/account/avatar/00/11/60/85/f72f1d94.jpg","comment_is_top":false,"comment_ctime":1585456802,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1585456802","product_id":100039001,"comment_content":"个人理解，好的代码应该读起来很清爽，层次分明，像一篇文章一样，让读的人没有歧义。另外可测试性也是一个很重要的特性，编写可测试性的代码，让后来人有了敢重构代码的勇气","like_count":0},{"had_liked":false,"id":198454,"user_name":"乐朦","can_delete":false,"product_type":"c1","uid":1938739,"ip_address":"","ucode":"C5A666DB0521E0","user_header":"https://static001.geekbang.org/account/avatar/00/1d/95/33/7d4b08ec.jpg","comment_is_top":false,"comment_ctime":1585452485,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585452485","product_id":100039001,"comment_content":"这个时候，就体现出code review的好处来了。之前自己闷头写代码，感觉写的还不错。几次code review 感觉自己写的好垃圾。之前我的同学告诉我，如果你现在看到你一个月前写的代码，感觉很垃圾。那说明，这一个月你进步了。","like_count":0},{"had_liked":false,"id":198020,"user_name":"赵毅","can_delete":false,"product_type":"c1","uid":1905585,"ip_address":"","ucode":"28F6820F1987F6","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIgDicRj9LAvWVyuibTbRnZDFeC6uWI8zfWU1gLM6yPoNklUaiar4TKxEyRHFibjIth3iahRNLcNvewjug/132","comment_is_top":false,"comment_ctime":1585407163,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585407163","product_id":100039001,"comment_content":"笔记：可维护、可读性（命名、注释、函数长短、模块划分、高内聚低耦合等）、可扩展、可复用、简洁、灵活、可测试<br>面向对象、编程规范、设计原则、设计模式、持续重构<br><br>我觉得非常重要的就是用简单的代码解决复杂的问题：<br>“思从深而行从简，真正的高手能云淡风轻地用最简单的方法解决最复杂的问题”","like_count":0},{"had_liked":false,"id":197907,"user_name":"梅梅","can_delete":false,"product_type":"c1","uid":1257085,"ip_address":"","ucode":"2437EBC71C1B0E","user_header":"","comment_is_top":false,"comment_ctime":1585403146,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585403146","product_id":100039001,"comment_content":"代码的质量的评判没有一个统一的标准，但老师总结的还是很到位的","like_count":0},{"had_liked":false,"id":197672,"user_name":"面向百度编程","can_delete":false,"product_type":"c1","uid":1732780,"ip_address":"","ucode":"8FE04A019D71D1","user_header":"https://static001.geekbang.org/account/avatar/00/1a/70/ac/83bc14c0.jpg","comment_is_top":false,"comment_ctime":1585390999,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585390999","product_id":100039001,"comment_content":"思从深而行从简，真正的高手能云淡风轻地用最简单的方法解决最复杂的问题。这是我的目标","like_count":0},{"had_liked":false,"id":197497,"user_name":"这得从我捡到一个鼠标垫开始说起","can_delete":false,"product_type":"c1","uid":1272321,"ip_address":"","ucode":"2FF4347B4E7A9B","user_header":"https://static001.geekbang.org/account/avatar/00/13/6a/01/d9cb531d.jpg","comment_is_top":false,"comment_ctime":1585381985,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1585381985","product_id":100039001,"comment_content":"可维护可扩展可读性确实是最重要的三个点。","like_count":0},{"had_liked":false,"id":196517,"user_name":"余结","can_delete":false,"product_type":"c1","uid":1272016,"ip_address":"","ucode":"6F852213FC8E8A","user_header":"https://static001.geekbang.org/account/avatar/00/13/68/d0/cc05745c.jpg","comment_is_top":false,"comment_ctime":1585289026,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585289026","product_id":100039001,"comment_content":"掌握方法原理，反复实践。","like_count":0},{"had_liked":false,"id":195010,"user_name":"屴","can_delete":false,"product_type":"c1","uid":1406688,"ip_address":"","ucode":"512BDF75C5BEDA","user_header":"https://static001.geekbang.org/account/avatar/00/15/76/e0/95be78a9.jpg","comment_is_top":false,"comment_ctime":1585127686,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585127686","product_id":100039001,"comment_content":"其实我在实践中发现，能写好的代码的人一定是对业务非常了解的人。毕竟世界上没有银弹，有得必有失。","like_count":0},{"had_liked":false,"id":191061,"user_name":"不学不行啊","can_delete":false,"product_type":"c1","uid":1335474,"ip_address":"","ucode":"69368165141C2D","user_header":"https://static001.geekbang.org/account/avatar/00/14/60/b2/ccebcb71.jpg","comment_is_top":false,"comment_ctime":1584721097,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584721097","product_id":100039001,"comment_content":"面向对象中的继承、多态能让我们写出可复用的代码；编码规范能让我们写出可读性好的代码；设计原则中的单一职责、DRY、基于接口而非实现、里式替换原则等，可以让我们写出可复用、灵活、可读性好、易扩展、易维护的代码；设计模式可以让我们写出易扩展的代码；持续重构可以时刻保持代码的可维护性等等","like_count":0},{"had_liked":false,"id":190314,"user_name":"不能忍的地精","can_delete":false,"product_type":"c1","uid":1754913,"ip_address":"","ucode":"66A921C0BC8102","user_header":"","comment_is_top":false,"comment_ctime":1584628559,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584628559","product_id":100039001,"comment_content":"我心目中的好代码是为了需求变更而设计的，随时应对变化，而不是僵直，不灵活的代码，一但产品有了新的需求，我只需要添加几个新类就能搞定，而不是修改一大堆代码，容易阅读","like_count":0},{"had_liked":false,"id":190235,"user_name":"Geek_032104","can_delete":false,"product_type":"c1","uid":1298282,"ip_address":"","ucode":"25542A2348F99F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/G61OS6hibNG7iakUmXeKmcY5VtFWnPpywzjOcUCm3t0HsibCibm3jzLNbdvjKQ8G8WSIkicBiaqoCsvHibn3M7wV4YbrA/132","comment_is_top":false,"comment_ctime":1584619996,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584619996","product_id":100039001,"comment_content":"可读，可扩展，易测试","like_count":0},{"had_liked":false,"id":189079,"user_name":"酸辣土豆丝","can_delete":false,"product_type":"c1","uid":1751234,"ip_address":"","ucode":"0E3E4AFB31E1E6","user_header":"https://static001.geekbang.org/account/avatar/00/1a/b8/c2/d1904d74.jpg","comment_is_top":false,"comment_ctime":1584454355,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584454355","product_id":100039001,"comment_content":"整体上简洁，有注释，代码命名见字知意","like_count":0},{"had_liked":false,"id":189035,"user_name":"治慧","can_delete":false,"product_type":"c1","uid":1245904,"ip_address":"","ucode":"47C331EF63EDC6","user_header":"https://static001.geekbang.org/account/avatar/00/13/02/d0/8abab63f.jpg","comment_is_top":false,"comment_ctime":1584448951,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584448951","product_id":100039001,"comment_content":"笔记:个人觉得好的代码从方法名称上就能知道作者要表达的意思,不需要额外过多的注释来修饰;在则就是性能上的优化和可维护性要强 多反省自己写的代码和把代码给大神review能学到很多的东西,从小事做起","like_count":0},{"had_liked":false,"id":187939,"user_name":"wakaka","can_delete":false,"product_type":"c1","uid":1471508,"ip_address":"","ucode":"835A7341577D3B","user_header":"https://static001.geekbang.org/account/avatar/00/16/74/14/ea854bfc.jpg","comment_is_top":false,"comment_ctime":1584280819,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584280819","product_id":100039001,"comment_content":"好代码都是有共性的，差代码千差万别。","like_count":0},{"had_liked":false,"id":187422,"user_name":"Run","can_delete":false,"product_type":"c1","uid":1371941,"ip_address":"","ucode":"6738D2F36ACFF6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLMDBq7lqg9ZasC4f21R0axKJRVCBImPKlQF8yOicLLXIsNgsZxsVyN1mbvFOL6eVPluTNgJofwZeA/132","comment_is_top":false,"comment_ctime":1584106826,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584106826","product_id":100039001,"comment_content":"算法之美还没领悟，就来设计之美了","like_count":0},{"had_liked":false,"id":185832,"user_name":"墨鱼","can_delete":false,"product_type":"c1","uid":1022720,"ip_address":"","ucode":"8FB5E4DCB8A024","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9b/00/654be3f7.jpg","comment_is_top":false,"comment_ctime":1583690149,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583690149","product_id":100039001,"comment_content":"可以评判好代码的维度有很多,比如易读,可扩展,易维护,易复用等,虽然里面有些标准甚至是有矛盾的,需要我们根据情况进行选择.不过可维护,可扩展,可读写这个三个是最重要的.像我们以前公司,根本没有单元测试等 ,所以不考虑可测试性<br><br>写出质量高的代码,写之前就要考虑好代码怎么写,后期有没有新增需要(可扩展),别人或者自己以后能不能轻松看懂这个代码(可读写),这个东西以后是不是能复用带别的地方(可复用性)<br><br>最后是一定要有 code review.这个是最重要的,也是防止坏代码的最后手段","like_count":0},{"had_liked":false,"id":184693,"user_name":"Presley","can_delete":false,"product_type":"c1","uid":1215219,"ip_address":"","ucode":"D8F125835F4903","user_header":"https://static001.geekbang.org/account/avatar/00/12/8a/f3/7c89d00e.jpg","comment_is_top":false,"comment_ctime":1583383195,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583383195","product_id":100039001,"comment_content":"我心中的好代码，层次清晰，基本上不太用注释","like_count":0},{"had_liked":false,"id":184576,"user_name":"融梨","can_delete":false,"product_type":"c1","uid":1033405,"ip_address":"","ucode":"66D0A4054612C6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/bd/72180435.jpg","comment_is_top":false,"comment_ctime":1583346995,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583346995","product_id":100039001,"comment_content":"对什么是好代码的定义，我感觉自己并不知道，自己写了两年多前端代码，汗颜阿。","like_count":0},{"had_liked":false,"id":183449,"user_name":"新的起点，新的开始^_^","can_delete":false,"product_type":"c1","uid":1262068,"ip_address":"","ucode":"9C0810F472AC93","user_header":"https://static001.geekbang.org/account/avatar/00/13/41/f4/5df17eff.jpg","comment_is_top":false,"comment_ctime":1583044091,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583044091","product_id":100039001,"comment_content":"个人理解，好的代码具有的特点：<br>1.执行效率高<br>2.占用内存少<br>3.易读，易扩展，易维护<br>4.可复用","like_count":0},{"had_liked":false,"id":181761,"user_name":"雷刚","can_delete":false,"product_type":"c1","uid":1655725,"ip_address":"","ucode":"115FE2BE1AAB61","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/pTD8nS0SsORKiaRD3wB0NK9Bpd0wFnPWtYLPfBRBhvZ68iaJErMlM2NNSeEibwQfY7GReILSIYZXfT9o8iaicibcyw3g/132","comment_is_top":false,"comment_ctime":1582630169,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582630169","product_id":100039001,"comment_content":"就上面的这些原则，谈谈我最近阅读一些开源框架的感受。个人认为最重要的三个原则是可读可维护可测性。<br>（1）可读性。要求代码简洁，结构清晰。比如 spring-beans 这个包，最核心的接口就是 BeanFactory 这个类，spring-context 核心接口是 ApplicationContext。在这些包中所有的功能都是围绕这个接口而展开，你甚至不用看具体的实现，就知道它的功能是干什么的。代码的可读性就非常强，甚至可以说是简单，正如 KISS 原则：“Keep It Simple，Stupid”，代码简单、逻辑清晰。<br>（2）可维护性。设计原则的重要一条就是开闭原则：对修改闭合，对扩展开放。这要求我们面向接口编程，模块之间解耦。<br>（3）可测性。以前我基本上不写单元测试，直接debug调试后上线。但后来源码看多了，也发现测试很重要，对这一块也逐渐重视起来。比我看源码时，如果发现有那个类的功能不太懂，直接看单元测试，一下就明白了。单元测试好写，同时也说明你的代码解耦做的好。<br>最后，一句话总结：好看的代码千篇一律，垃圾的代码花样百出。<br>","like_count":0},{"had_liked":false,"id":181248,"user_name":"Geek_4eeff6","can_delete":false,"product_type":"c1","uid":1681947,"ip_address":"","ucode":"C1B40B950F9D17","user_header":"https://static001.geekbang.org/account/avatar/00/19/aa/1b/9303452a.jpg","comment_is_top":false,"comment_ctime":1582527255,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582527255","product_id":100039001,"comment_content":"我感觉还应该考虑到 可能会存在的并发，代码的运行时间、以及内存方面的问题","like_count":0},{"had_liked":false,"id":181186,"user_name":"悠游","can_delete":false,"product_type":"c1","uid":1222834,"ip_address":"","ucode":"4FDDDDF29AE3F0","user_header":"https://static001.geekbang.org/account/avatar/00/12/a8/b2/998448ca.jpg","comment_is_top":false,"comment_ctime":1582514216,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582514216","product_id":100039001,"comment_content":"易维护、可扩展、可读性、灵活性、简洁性、可复用性、可测试性","like_count":0},{"had_liked":false,"id":179215,"user_name":"Heaven","can_delete":false,"product_type":"c1","uid":1694207,"ip_address":"","ucode":"FA33FBCC66C911","user_header":"https://static001.geekbang.org/account/avatar/00/19/d9/ff/b23018a6.jpg","comment_is_top":false,"comment_ctime":1581938207,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581938207","product_id":100039001,"comment_content":"在开发过程中,像是使用Idea或者Eclipse时候,减少出现的黄色警告,也是重要的一环.即为,减少使用不确定的类型,避免使用过期的类或者方法","like_count":0},{"had_liked":false,"id":178903,"user_name":"小伟","can_delete":false,"product_type":"c1","uid":1043401,"ip_address":"","ucode":"B631E56A112BDC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/eb/c9/b1b233cf.jpg","comment_is_top":false,"comment_ctime":1581850879,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581850879","product_id":100039001,"comment_content":"<br>打卡：<br>除了我今天提到的这些，你觉得还有哪些其他的代码评价标准非常重要？聊一聊你心目中的好代码是什么样子的？<br>答：<br>好的命名规范：快速读懂代码。<br>可测试性：保证代码质量；为不断重构提供方便。<br>可扩展性：对未来可预期的功能非常方便就能支持。<br><br>其他的指标：简洁、可复用、高性能等，我认为大部分都可以通过逐渐迭代来实现；","like_count":0},{"had_liked":false,"id":177964,"user_name":"秀丽","can_delete":false,"product_type":"c1","uid":1402332,"ip_address":"","ucode":"9872272B8056F5","user_header":"https://static001.geekbang.org/account/avatar/00/15/65/dc/0737102d.jpg","comment_is_top":false,"comment_ctime":1581563040,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581563040","product_id":100039001,"comment_content":"代码写的好的7点评价标准 = 3目标（可维护性+可读性+可扩展性）+2心法（灵活性+简洁性）+2招式（可复用性+可测试性）<br><br>代码写得好，感觉便于别人调用很重要，比如可以自动生成接口文档，便于别人理解这些接口，省去了很多与别人沟通的成本。<br><br>","like_count":0},{"had_liked":false,"id":177766,"user_name":"未来小娃","can_delete":false,"product_type":"c1","uid":1047329,"ip_address":"","ucode":"477D166EBB6B70","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/21/d017438c.jpg","comment_is_top":false,"comment_ctime":1581494670,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1581494670","product_id":100039001,"comment_content":"【设计模式笔记3】20200212<br>文章提到了很多评价标准，也许很多都或多或少接触过，我觉得好代码首先得是有价值的，也就是能切实解决问题的，不然空谈可读性可扩展性有什么意义；其次好代码得简洁，简洁通俗地理解就是虽然代码很复杂，但看上去很舒服，感觉像是一件艺术品（个人yy）；然后是可扩展，为什么？你想想啊，可扩展就意味着修改和新增风险都很小，我们写代码的不就希望自己写的代码线上不出问题嘛。接着是可复用，我写代码有个习惯看到有重复代码就起鸡皮疙瘩，必须没有一行重复代码才作罢，倒不是我的习惯有问题，因为重复代码必然意味着有优化的空间，既然发现了为啥不多做一步呢，不会一个快捷键的事嘛，耽误不了你几秒钟的。接着是鲁棒性，鲁棒性就意味着写代码不能只考虑正常分支还得考虑异常分支，如果一段代码没有任何异常分支绝对是有问题的，我们暂不论是否会出现异常分支，没有异常分支首先就表明你思考问题不全面，你愿意和一个思考不全面的人协作么，因为除了问题你还得背锅（血淋淋的例子啊）。接着是可测试性，为什么？代码写完了你不能直接发版吧，不先得测测不是？那么测试点覆盖是否全面就能间接表明你思考问题的点是否MICE，比如刚才的正常分支和异常分支，可能还有兜底分支等等都是好代码的体现。这里说个例子，阿里巴巴有道面试算法题的评判标准就包括正确性、测试用例完整性、代码健壮性。最后是可读性，为啥放到最后？刚才说的简洁某种程度已经包括了可读性，复杂的代码可读性通常不会很好。","like_count":0},{"had_liked":false,"id":177311,"user_name":"freesocean","can_delete":false,"product_type":"c1","uid":1529210,"ip_address":"","ucode":"CAD4C80CF569D3","user_header":"https://static001.geekbang.org/account/avatar/00/17/55/7a/d44df1d6.jpg","comment_is_top":false,"comment_ctime":1581345232,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581345232","product_id":100039001,"comment_content":"可读性（能懂），可扩展（能动），效率高，便于测试","like_count":0},{"had_liked":false,"id":177052,"user_name":"88591","can_delete":false,"product_type":"c1","uid":1254656,"ip_address":"","ucode":"04CE3E46455185","user_header":"https://static001.geekbang.org/account/avatar/00/13/25/00/3afbab43.jpg","comment_is_top":false,"comment_ctime":1581257333,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581257333","product_id":100039001,"comment_content":"老师提到的标准，也就是程序设计需要达到的目的。设计模式是实现这样的标准（目的）的一种通用的方法","like_count":0},{"had_liked":false,"id":176166,"user_name":"Geek_bb89c3","can_delete":false,"product_type":"c1","uid":1331828,"ip_address":"","ucode":"0F97B5B0F2DDD6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/IZKGetBZDuMEa2VwwtesTELvLORIyV749ItgfAqNPv30n4zEv71wuGNr1aNVIVltG0icvH53DHDuqPuzNpiauWAg/132","comment_is_top":false,"comment_ctime":1580977222,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580977222","product_id":100039001,"comment_content":"好的代码有主观性，但是还是有一些标准的。主要是：可维护性，可读性，可扩展，简洁，复用，已测试。<br>可维护性：当修改代码的时候引入bug的概率会非常的低，其中bug包括当前的代码范围内的bug,以及依赖当前代码的代码中出现的bug<br>可读性：代码易于阅读，容易理解，这里需要编码规范来帮助实现。<br>可扩展性：系统中留下了足够的扩展点当系统，当需要扩展的时候只需要添加扩展性就好。<br>简洁性：系统足够简单，思从深行从简，将事情做得足够简单。<br>易复用：代码足够内部，原子，易于复用。<br>可测试性：系统易于测试，验证当前系统的正确性。如果不容易测试，往往是系统设计的有问题。<br>需要完成系统的高质量代码：需要掌握：各种设计思想，设计原则，设计模式，编码规范，面向对象的各种元素，系统重构的技巧等。","like_count":0},{"had_liked":false,"id":175691,"user_name":"张理查","can_delete":false,"product_type":"c1","uid":1003152,"ip_address":"","ucode":"1F93E631CD4B35","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4e/90/a8d19e7b.jpg","comment_is_top":false,"comment_ctime":1580801119,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580801119","product_id":100039001,"comment_content":"02.这一节主要讲了什么是好的代码，我们从众多的形容词中挑选了几个有代表性的。首先就是可维护性，可维护最直接的体现就是我改一个bug会多快，会不会牵一发而动全身；第二是可读性与简洁性，就是大牛能不能看懂你的代码，会不会code review的时候一脸懵逼，我觉得可读性和简洁性有关联，简洁的代码通常是可读的，而简洁的心法就是不要炫技，注重逻辑和易读。第三是可扩展性、可复用性和灵活性，就是你的代码有没有为后人（有时后人就是你自己）着想，你是创造出了乐高积木，还是创造出了代码黑洞。最后第四点就是可测试性，如果连写测试都是十分困难的，多半说明你的代码设计有问题。除了这些形容词，还要掌握一些更细化的方法论，比如面向对象的设计思想、设计原则、设计模式、编码规范、重构技巧等。","like_count":0},{"had_liked":false,"id":172916,"user_name":"linker","can_delete":false,"product_type":"c1","uid":1803259,"ip_address":"","ucode":"6C5799F2FC2C82","user_header":"https://static001.geekbang.org/account/avatar/00/1b/83/fb/621adceb.jpg","comment_is_top":false,"comment_ctime":1579357745,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579357745","product_id":100039001,"comment_content":"1:时空复杂度<br>2:圈复杂度","like_count":0},{"had_liked":false,"id":172293,"user_name":"M","can_delete":false,"product_type":"c1","uid":1810576,"ip_address":"","ucode":"06F26E1D62E9C9","user_header":"https://wx.qlogo.cn/mmopen/vi_32/eLNeJNaEkwGSK7xvtamMibVLMy2MpbIqX3iaEhT7JtSnTRMRTwZ2j4HX7WAapiashbiaBDVriaXKSP0Oeic6ZAEVEXag/132","comment_is_top":false,"comment_ctime":1579145609,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579145609","product_id":100039001,"comment_content":"思从深而行从简，真正的高手能云淡风轻地用最简单的方法解决最复杂的问题。这也是一个编程老手跟编程新手的本质区别之一。","like_count":0},{"had_liked":false,"id":171668,"user_name":"Will","can_delete":false,"product_type":"c1","uid":1440599,"ip_address":"","ucode":"15E7715ADDABE3","user_header":"https://static001.geekbang.org/account/avatar/00/15/fb/57/258a7ff6.jpg","comment_is_top":false,"comment_ctime":1578988434,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578988434","product_id":100039001,"comment_content":"接口灵活满足多种场景，那不是让一个接口承担的责任太重了，不满足单一职责原则","like_count":0},{"had_liked":false,"id":171353,"user_name":"好饿早知道送外卖了","can_delete":false,"product_type":"c1","uid":1132304,"ip_address":"","ucode":"AED22DB5BF8FC7","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/10/2d673601.jpg","comment_is_top":false,"comment_ctime":1578906946,"is_pvip":false,"discussion_count":0,"race_medal":2,"score":"1578906946","product_id":100039001,"comment_content":"对于可扩展性、今天在项目里发现个问题。<br>流程内的单个动作的具体操作，是通过ifelse判断的，但是有很多动作。<br>导致添加一个新的操作，需要修添加好多个位置的ifelse~<br>虽然单个动作里ifelse看着清晰，但是放到整体就很难扩展了","like_count":0},{"had_liked":false,"id":170960,"user_name":"Moloch","can_delete":false,"product_type":"c1","uid":1760947,"ip_address":"","ucode":"B0046D601CC7C7","user_header":"","comment_is_top":false,"comment_ctime":1578800208,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578800208","product_id":100039001,"comment_content":"根据自己现在的能力来看：代码的可读性、可重复性、简洁、可测试性这几个在当前的几个项中涉及得更多一些。","like_count":0},{"had_liked":false,"id":170602,"user_name":"HoshinoKanade","can_delete":false,"product_type":"c1","uid":1770245,"ip_address":"","ucode":"AA8B4F90FB9E5F","user_header":"https://static001.geekbang.org/account/avatar/00/1b/03/05/140068f9.jpg","comment_is_top":false,"comment_ctime":1578643158,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578643158","product_id":100039001,"comment_content":"小的項目用直覺就能判斷，但是到大型項目裡莫名跪了。","like_count":0},{"had_liked":false,"id":170505,"user_name":"晓杉","can_delete":false,"product_type":"c1","uid":1209336,"ip_address":"","ucode":"19E634BB61A165","user_header":"https://static001.geekbang.org/account/avatar/00/12/73/f8/dbd2fa50.jpg","comment_is_top":false,"comment_ctime":1578622632,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578622632","product_id":100039001,"comment_content":"我心中的好代码首先是可读。<br>然后有设计文档，自解释性强，层次清晰，交互方式规范，未来扩展性不会太差。即使重构，也简单可拆解复用。","like_count":0},{"had_liked":false,"id":170501,"user_name":"晓杉","can_delete":false,"product_type":"c1","uid":1209336,"ip_address":"","ucode":"19E634BB61A165","user_header":"https://static001.geekbang.org/account/avatar/00/12/73/f8/dbd2fa50.jpg","comment_is_top":false,"comment_ctime":1578622333,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578622333","product_id":100039001,"comment_content":"高手不做选择题，好与不好，0和1不是评价标准而是结果。<br>凡评价，都要有一个指标，对每个指标进行打分，给出综合评分，定义好与坏的程度。<br>作者文中给出了7个指标，以后的评价可根据7个指标纬度进行评价，打分","like_count":0},{"had_liked":false,"id":169840,"user_name":"夕林语","can_delete":false,"product_type":"c1","uid":1264180,"ip_address":"","ucode":"B57681D0C73E1B","user_header":"https://static001.geekbang.org/account/avatar/00/13/4a/34/1faac99b.jpg","comment_is_top":false,"comment_ctime":1578454895,"is_pvip":false,"discussion_count":0,"race_medal":2,"score":"1578454895","product_id":100039001,"comment_content":"我觉得可读性是非常重要的评价标准，实际项目中经常会面临人员更替的问题，新人进来接手老人代码，可读性好的代码可以快速上手。<br>可读性好的代码我认为有以下几点要素：<br>1.方法、变量命名比较规范；<br>2.逻辑层次清晰；<br>3.注释详尽；<br>4.方法划分以及行数控制合理","like_count":0},{"had_liked":false,"id":169404,"user_name":"意","can_delete":false,"product_type":"c1","uid":1129311,"ip_address":"","ucode":"A4B0C03248EA77","user_header":"https://static001.geekbang.org/account/avatar/00/11/3b/5f/a2c78423.jpg","comment_is_top":false,"comment_ctime":1578327868,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578327868","product_id":100039001,"comment_content":"可维护性  ","like_count":0},{"had_liked":false,"id":166094,"user_name":"原点","can_delete":false,"product_type":"c1","uid":1204499,"ip_address":"","ucode":"E662FD2B62B8A9","user_header":"https://static001.geekbang.org/account/avatar/00/12/61/13/dd987817.jpg","comment_is_top":false,"comment_ctime":1577398097,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1577398097","product_id":100039001,"comment_content":"可能水平有限，我觉得老师这节课讲的七个标准记牢靠，写代码时常常反思运用就很受用啦。<br><br>引用：<br>最常用到几个评判代码质量的标准是：可维护性、可读性、可扩展性、灵活性、简洁性、可复用性、可测试性。其中，可维护性、可读性、可扩展性又是提到最多的、最重要的三个评价标准。","like_count":0},{"had_liked":false,"id":165415,"user_name":"铁血柔情","can_delete":false,"product_type":"c1","uid":1124220,"ip_address":"","ucode":"F09CACF06B8D05","user_header":"https://static001.geekbang.org/account/avatar/00/11/27/7c/463d4342.jpg","comment_is_top":false,"comment_ctime":1577235236,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577235236","product_id":100039001,"comment_content":"老师所说的几点已经涵盖了代码评判标准，还有一点就是代码的稳定性，好的代码就是刚工作的新人能够读懂你的代码，并且有种醍醐灌顶的感觉。","like_count":0},{"had_liked":false,"id":165316,"user_name":"桂城老托尼","can_delete":false,"product_type":"c1","uid":1306032,"ip_address":"","ucode":"139E4B8EE88B79","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcxSpNMqwqyicMvdOSr9ic0p1ABiauHnv7g7YQVSJuoHPoQbYDu3YzdpgmSAk2KricUBQ5yibWBWIq75w/132","comment_is_top":false,"comment_ctime":1577199472,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577199472","product_id":100039001,"comment_content":"心目中的好代码，多一点设计腻，少一点设计柴，没有过度设计，行文恰到好处，读起来通俗易懂。","like_count":0},{"had_liked":false,"id":164327,"user_name":"那些真真实实","can_delete":false,"product_type":"c1","uid":1242333,"ip_address":"","ucode":"53BBF975B7F155","user_header":"https://static001.geekbang.org/account/avatar/00/12/f4/dd/b0206d86.jpg","comment_is_top":false,"comment_ctime":1576937295,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576937295","product_id":100039001,"comment_content":"其实好的代码，相当于城市规划或者是国家战略方向。以超前的眼光，预见未来的可能。让后来者在已经划分好的地方发展，而不是重新花费时间选择。<br>代码上，可以说以后会有的扩展、修复、安全、变动等其它事项，都预留好了位置。不需要对现有结构做出很大调整。","like_count":0},{"had_liked":false,"id":163864,"user_name":"黄政","can_delete":false,"product_type":"c1","uid":1345630,"ip_address":"","ucode":"9076A1BF7BB051","user_header":"https://static001.geekbang.org/account/avatar/00/14/88/5e/cc916a2b.jpg","comment_is_top":false,"comment_ctime":1576813650,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1576813650","product_id":100039001,"comment_content":"代码评价标准： 简洁，优雅，性能高效，功能间独立","like_count":0},{"had_liked":false,"id":163613,"user_name":"请叫我和尚","can_delete":false,"product_type":"c1","uid":1703256,"ip_address":"","ucode":"33A8A1CDA103F9","user_header":"https://static001.geekbang.org/account/avatar/00/19/fd/58/1af629c7.jpg","comment_is_top":false,"comment_ctime":1576755647,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1576755647","product_id":100039001,"comment_content":"很多经常被别人调用的类、方法、接口真得最重要了，因为当这个方法被调用很多次之后，再改这个，就会非常麻烦，以至于就不改了，就变成以后每个人都会说的的遗留问题","like_count":0},{"had_liked":false,"id":160933,"user_name":"胖子","can_delete":false,"product_type":"c1","uid":1037760,"ip_address":"","ucode":"E6371346288A87","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLIuRQaZX70dsBg6khub2VPM1eQAP9IWRWxgOFed3ia4kXyNJInFRicWJ0ibf2YmLsOvJa1sGygGpmJg/132","comment_is_top":false,"comment_ctime":1576064031,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576064031","product_id":100039001,"comment_content":"好代码应自然反映业务模型。随着互联网应用的蓬勃发展代码的安全性日益凸显。","like_count":0},{"had_liked":false,"id":160229,"user_name":"看，世界倒着","can_delete":false,"product_type":"c1","uid":1021951,"ip_address":"","ucode":"FFBFF8E4B63ED6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/97/ff/df9cb5b9.jpg","comment_is_top":false,"comment_ctime":1575895162,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575895162","product_id":100039001,"comment_content":"先达成review共识，易读，个人觉得应该排高优先级","like_count":0},{"had_liked":false,"id":160112,"user_name":"蜗牛","can_delete":false,"product_type":"c1","uid":1086220,"ip_address":"","ucode":"01CC18F12E556D","user_header":"https://static001.geekbang.org/account/avatar/00/10/93/0c/0a6a0d5e.jpg","comment_is_top":false,"comment_ctime":1575871968,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575871968","product_id":100039001,"comment_content":"性能好的代码","like_count":0},{"had_liked":false,"id":157528,"user_name":"金霖","can_delete":false,"product_type":"c1","uid":1322362,"ip_address":"","ucode":"8CFE41BEEB5EF7","user_header":"https://static001.geekbang.org/account/avatar/00/14/2d/7a/3a37efe4.jpg","comment_is_top":false,"comment_ctime":1575186812,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575186812","product_id":100039001,"comment_content":"看到作者列出的一些代码质量评价指标，联想到以下几个跟代码质量相关的点：<br>1、不同的编程语言可能在一些指标方面就有天然的优势或者劣势。可能选择某些语言的原因就有-该语言天然的容易达到这个方面的高质量；<br>2、如果你的常用&#47;工作的编程语言有某些优势特性，善于利用就容易写出高质量的代码；<br>3、编码经验丰富的人，不管用的是哪门语言（熟悉的代码）都容易出高质量的代码，我想他们应该是有语言无关的编程方法论指导，所以在使用不同语言的时候也可以轻松的扬长避短。","like_count":0},{"had_liked":false,"id":157197,"user_name":"王盛武","can_delete":false,"product_type":"c1","uid":1182516,"ip_address":"","ucode":"DE7EF246D3DCE8","user_header":"https://static001.geekbang.org/account/avatar/00/12/0b/34/f41d73a4.jpg","comment_is_top":false,"comment_ctime":1575079327,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575079327","product_id":100039001,"comment_content":"有个框架库，所有类 方法 成员 全部一个不漏final。  老师怎么看","like_count":0},{"had_liked":false,"id":156884,"user_name":"蓝思绪","can_delete":false,"product_type":"c1","uid":1361693,"ip_address":"","ucode":"2D8CE718DEAD96","user_header":"https://static001.geekbang.org/account/avatar/00/14/c7/1d/048dc01a.jpg","comment_is_top":false,"comment_ctime":1574991753,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574991753","product_id":100039001,"comment_content":"可维护性就是修改bug的时候引入新bug的风险小，bug修复，添加修改新功能能够快速完成。<br>可读性就是同事能否轻松读懂你写的代码<br>可扩展性对修改关闭，对扩展开放<br>灵活性，代码易拓展，易复用<br>简洁性，简单的代码实现复杂的功能<br>可复用性， dont repeat yourself<br>抄一遍加深印象","like_count":0},{"had_liked":false,"id":156632,"user_name":"大给给","can_delete":false,"product_type":"c1","uid":1238618,"ip_address":"","ucode":"69B6FBE9E81467","user_header":"https://static001.geekbang.org/account/avatar/00/12/e6/5a/377dc4bf.jpg","comment_is_top":false,"comment_ctime":1574927081,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574927081","product_id":100039001,"comment_content":"没太明白可扩展性和灵活性的区别呢，小争哥","like_count":0},{"had_liked":false,"id":155776,"user_name":"禅若静水","can_delete":false,"product_type":"c1","uid":1266038,"ip_address":"","ucode":"5028D28106963C","user_header":"https://static001.geekbang.org/account/avatar/00/13/51/76/ad8115b0.jpg","comment_is_top":false,"comment_ctime":1574754291,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574754291","product_id":100039001,"comment_content":"个人理解，代码质量评判应该加入<br>1. 易于debug, 代码文档齐全详尽<br>2. 高性能；<br>3. 稳定性好；<br>4. 兼容性<br>","like_count":0},{"had_liked":false,"id":154630,"user_name":"迷羊","can_delete":false,"product_type":"c1","uid":1286251,"ip_address":"","ucode":"85AF8CED3436C8","user_header":"https://static001.geekbang.org/account/avatar/00/13/a0/6b/0a21b2b8.jpg","comment_is_top":false,"comment_ctime":1574496418,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574496418","product_id":100039001,"comment_content":"感觉这节被几个名词绕晕了，可扩展性、可读性、可维护性。。。最后啥也没记住","like_count":0},{"had_liked":false,"id":154547,"user_name":"张鼎松","can_delete":false,"product_type":"c1","uid":1063160,"ip_address":"","ucode":"061F86EA9AA93D","user_header":"https://static001.geekbang.org/account/avatar/00/10/38/f8/b7ae7c6d.jpg","comment_is_top":false,"comment_ctime":1574478655,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574478655","product_id":100039001,"comment_content":"字字珠玑，通俗易懂，通篇没有一句废话。服了！","like_count":0},{"had_liked":false,"id":154451,"user_name":"Geek_212c40","can_delete":false,"product_type":"c1","uid":1746216,"ip_address":"","ucode":"93335D388232BA","user_header":"https://static001.geekbang.org/account/avatar/00/1a/a5/28/9dd784ec.jpg","comment_is_top":false,"comment_ctime":1574432984,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574432984","product_id":100039001,"comment_content":"我认为，代码即注释是一个衡量标准，应该也属于易读行，不用加多余的注释读者就能轻松理解代码逻辑个要实现的功能","like_count":0},{"had_liked":false,"id":154200,"user_name":"hungery","can_delete":false,"product_type":"c1","uid":1349902,"ip_address":"","ucode":"5CE6E6C1DB073E","user_header":"https://static001.geekbang.org/account/avatar/00/14/99/0e/cf461038.jpg","comment_is_top":false,"comment_ctime":1574390537,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574390537","product_id":100039001,"comment_content":"     最常用到几个评判代码质量的标准是：可维护性、可读性、可扩展性、灵活性、简洁性、可复用性、可测试性。其中，可维护性、可读性、可扩展性又是提到最多的、最重要的三个评价标准。<br>     要写出高质量代码，我们就需要掌握一些更加细化、更加能落地的编程方法论，这就包含面向对象设计思想、设计原则、设计模式、编码规范、重构技巧等等","like_count":0},{"had_liked":false,"id":154008,"user_name":"千锤百炼领悟之极限","can_delete":false,"product_type":"c1","uid":1744257,"ip_address":"","ucode":"224B5CF2101716","user_header":"https://static001.geekbang.org/account/avatar/00/1a/9d/81/d748b7eb.jpg","comment_is_top":false,"comment_ctime":1574346193,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574346193","product_id":100039001,"comment_content":"可维护性，可读性，可扩展性，灵活性，简洁性，可重用性，可测试性。🍸","like_count":0},{"had_liked":false,"id":153787,"user_name":"捕风捉影","can_delete":false,"product_type":"c1","uid":1713935,"ip_address":"","ucode":"E7F75B2521C8CF","user_header":"https://static001.geekbang.org/account/avatar/00/1a/27/0f/4af4daff.jpg","comment_is_top":false,"comment_ctime":1574307423,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574307423","product_id":100039001,"comment_content":"1.我自己心中认为的优质代码：<br>1.1 分层明显，条理清晰，至少让人看了可以大致知道你的脉络、架构设计。最好可以在代码的起始，说一下大致的架构，让阅读着有一个大致的轮廓感。 另可注释自己平时的命名习惯，或者常用逻辑。当然这个注释更多是我自己的一个习惯，似乎有些强人所难。<br>1.2 对于代码bug的捕捉，最好给出明确的提示，有助于解决问题。<br>2.从本篇学到的知识点：<br>2.2 以前的好代码定义比较模糊，没有一个具体的概念，或者说自己描述不出来，现在大致有了，可读性—可维护性—可扩展性—-可测试性—-简洁性—灵活性—-可复用性。<br>2.2 以后更多按照这个顺序、从这些层面上去思考自己写的代码，更多的是需要多练习，多思考。<br>写代码的时候，想象一个人在你的身边，他要用它，他会怎么想","like_count":0},{"had_liked":false,"id":153586,"user_name":"被讨厌的勇气","can_delete":false,"product_type":"c1","uid":1547913,"ip_address":"","ucode":"AE3B3CA27D91A2","user_header":"https://static001.geekbang.org/account/avatar/00/17/9e/89/6e9c05d6.jpg","comment_is_top":false,"comment_ctime":1574263432,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574263432","product_id":100039001,"comment_content":"##坚持打卡##<br><br>想要写出高质量的代码，首先要熟悉高质量的代码有哪些特征。<br><br>可维护性：在不改变原有代码设计、不引入新bug的情况下，能够快速的添加或修改代码。<br>可扩展性：在不修改或少量修改原有代码的情况下，通过扩展的方式添加新的功能代码。<br>可读性：是否符合编码规范、命名是否达意、注释是否详尽、函数是否长度合适、模块划分是否清晰、是否高内聚低耦合等等。<br>简洁性：Keep it Simple，Stupid.<br>灵活性：比较宽泛，易于添加新功能、容易复用。<br>可复用性：尽量减少重复代码的编写，复用已有的代码。<br><br>对“源代码即设计”有了更深的理解，上述特性都是基于代码。","like_count":0},{"had_liked":false,"id":153524,"user_name":"August","can_delete":false,"product_type":"c1","uid":1747702,"ip_address":"","ucode":"21794846E0E510","user_header":"https://static001.geekbang.org/account/avatar/00/1a/aa/f6/66cc1bcb.jpg","comment_is_top":false,"comment_ctime":1574253029,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574253029","product_id":100039001,"comment_content":"在兼顾效率的前提下，使用最少的代码量解决问题","like_count":0},{"had_liked":false,"id":153436,"user_name":"霸波儿奔","can_delete":false,"product_type":"c1","uid":1035314,"ip_address":"","ucode":"4AB75DB06CB254","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cc/32/d9dbf4e7.jpg","comment_is_top":false,"comment_ctime":1574235755,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1574235755","product_id":100039001,"comment_content":"好的代码就是要做到可维护性、可读性、可扩展性、灵活性、简洁性、可复用性、可测试性的平衡点，不同的项目、开发团队实际情况不一样，根据自己的情况动态调整，是这样的意思吧","like_count":0},{"had_liked":false,"id":153217,"user_name":"蟹肥","can_delete":false,"product_type":"c1","uid":1737493,"ip_address":"","ucode":"382B86651ED909","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/rNMTN9E43LZ0dpb4s3ElcRnBYpic5zzrCXGvKdib7rDwSEEWto83gXgFFQWMWXQmUxodcKyNnhDK1yIjeiaR7Mz3A/132","comment_is_top":false,"comment_ctime":1574192821,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574192821","product_id":100039001,"comment_content":"代码是为人们工作,将一些能够自动化的事务交由机器处理,<br>所以写代码最一开始的初衷就是增加生产力,<br>代码的质量好不好应该是由团队的长期生产力决定,<br>我同时也认为代码的持有者应是团队,而不是属于个人","like_count":0},{"had_liked":false,"id":153174,"user_name":"姚布斯","can_delete":false,"product_type":"c1","uid":1335972,"ip_address":"","ucode":"09F958407F63FB","user_header":"https://static001.geekbang.org/account/avatar/00/14/62/a4/972b2b33.jpg","comment_is_top":false,"comment_ctime":1574174589,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574174589","product_id":100039001,"comment_content":"团队协作的话，维护一个好的文档肯定是重要的，另外就是老师说的这些原则。","like_count":0},{"had_liked":false,"id":153039,"user_name":"lovelykooo","can_delete":false,"product_type":"c1","uid":1009369,"ip_address":"","ucode":"B8B9DF2C05E123","user_header":"https://static001.geekbang.org/account/avatar/00/0f/66/d9/b81be44b.jpg","comment_is_top":false,"comment_ctime":1574144987,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574144987","product_id":100039001,"comment_content":"在以前，有种错误的看法.觉得那些异常处理都是脏代码，破坏了代码的结构。现在觉得是逻辑不够严谨，好的代码一定是优先实现功能的代码。<br>","like_count":0},{"had_liked":false,"id":152850,"user_name":"Simplation","can_delete":false,"product_type":"c1","uid":1176020,"ip_address":"","ucode":"22CC71D3B021AB","user_header":"https://static001.geekbang.org/account/avatar/00/11/f1/d4/bd644628.jpg","comment_is_top":false,"comment_ctime":1574089141,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574089141","product_id":100039001,"comment_content":"01.最常用的评价标准：<br>1. 可维护性（maintainability）：方便后期迭代<br>2. 可读性（readability）：易读、好理解<br>3. 可扩展性（extensibility）：预留功能扩展点<br>4. 灵活性（flexibility）：易扩展、易复用、易用<br>5. 简洁性（simplicity）：KISS原则，代码简单、逻辑清晰<br>6. 可复用性（reusability）：减少重复代码的编写，复用已有的代码<br>7. 可测试性（testability）：难以进行单元测试<br><br>02.如何具备写出高质量代码的能力？<br>掌握编程方法论：面向对象设计思想、设计原则、设计模式、编码规范、重构技巧<br><br>好的代码没有具体的量化标准，个人理解主要是看从哪些方面来评判。","like_count":0},{"had_liked":false,"id":152816,"user_name":"菩提晓","can_delete":false,"product_type":"c1","uid":1052898,"ip_address":"","ucode":"9716098118C32D","user_header":"https://static001.geekbang.org/account/avatar/00/10/10/e2/d4b51007.jpg","comment_is_top":false,"comment_ctime":1574083222,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1574083222","product_id":100039001,"comment_content":"个人认为以下几点也可作为评价标准：<br>1.代码的格式化也很重要，比如说缩进，整洁的代码会让人至少心里上会很舒服，有心情将代码看完<br>2.代码中的注释，有良好可读性的代码，完整而详细的注释必不可少<br>","like_count":0},{"had_liked":false,"id":152445,"user_name":"小沫","can_delete":false,"product_type":"c1","uid":1000977,"ip_address":"","ucode":"52341656210E0D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/46/11/1cf8c174.jpg","comment_is_top":false,"comment_ctime":1574003328,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574003328","product_id":100039001,"comment_content":"好的代码，应该是读代码的人读完后可以正确理解编写代码人的思想 ，同时 当需要扩展的时候 可以很容易的进行扩展（不需要编写大量的代码），最后 代码中有很好的注释信息。","like_count":0},{"had_liked":false,"id":152417,"user_name":"Lyle","can_delete":false,"product_type":"c1","uid":1002548,"ip_address":"","ucode":"55371A8BE9F88D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4c/34/0df5906a.jpg","comment_is_top":false,"comment_ctime":1573995627,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573995627","product_id":100039001,"comment_content":"好的代码，看函数名就大概能知道函数做什么的，不需要太多的注释，代码本身就是最好的注释","like_count":0},{"had_liked":false,"id":152322,"user_name":"王喜春","can_delete":false,"product_type":"c1","uid":1022349,"ip_address":"","ucode":"436E91FDED1B30","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/8d/4d5dbfc5.jpg","comment_is_top":false,"comment_ctime":1573971961,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1573971961","product_id":100039001,"comment_content":"老师您好， 上面提到“如果你的同事可以轻松地读懂你写的代码，那说明你的代码可读性很好；如果同事在读你的代码时，有很多疑问，那就说明你的代码可读性有待提高了”。 也能体会到这个说法背后的考虑点，工作中也经常被这样说法引入灵魂层面上的思考。 <br>后来想到一个这方面的反例:像Spring这样优秀的代码，一般人是看不懂的， 我们能说Spring代码的可读性差么？ 好像也不能。","like_count":0,"discussions":[{"author":{"id":1731602,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/6c/12/67bcce50.jpg","nickname":"我太难了","note":"","ucode":"B80133799A4494","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":96680,"discussion_content":"只能说你思路清奇。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577085795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":152182,"user_name":"王先生","can_delete":false,"product_type":"c1","uid":1082275,"ip_address":"","ucode":"027C061F660605","user_header":"https://static001.geekbang.org/account/avatar/00/10/83/a3/432bbbd9.jpg","comment_is_top":false,"comment_ctime":1573904199,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573904199","product_id":100039001,"comment_content":"代码质量的标准是：可维护性、可读性、可扩展性、灵活性、简洁性、可复用性、可测试性。","like_count":0},{"had_liked":false,"id":152179,"user_name":"不忘初心","can_delete":false,"product_type":"c1","uid":1267558,"ip_address":"","ucode":"FF0E30038CC71A","user_header":"https://static001.geekbang.org/account/avatar/00/13/57/66/4a747704.jpg","comment_is_top":false,"comment_ctime":1573901608,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573901608","product_id":100039001,"comment_content":"我觉得好代码就是可读性强，简单利落，看不出臃肿，便于维护和扩展。","like_count":0},{"had_liked":false,"id":152061,"user_name":"麻婆豆腐","can_delete":false,"product_type":"c1","uid":1731885,"ip_address":"","ucode":"F371FE05D081D6","user_header":"https://static001.geekbang.org/account/avatar/00/1a/6d/2d/de41f9cf.jpg","comment_is_top":false,"comment_ctime":1573867986,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573867986","product_id":100039001,"comment_content":"易读，易维护，易debug，稳定性。在哪里维护一个老系统都是很头疼的事吧！","like_count":0},{"had_liked":false,"id":152060,"user_name":"debug","can_delete":false,"product_type":"c1","uid":1746558,"ip_address":"","ucode":"B7B18146BB30DB","user_header":"https://static001.geekbang.org/account/avatar/00/1a/a6/7e/83d6b7dd.jpg","comment_is_top":false,"comment_ctime":1573867951,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573867951","product_id":100039001,"comment_content":"自己写出一段可读性的代码，自己都会觉得很漂亮，时不时要看一遍","like_count":0},{"had_liked":false,"id":151994,"user_name":"欲戴皇冠","can_delete":false,"product_type":"c1","uid":1233766,"ip_address":"","ucode":"02F6FFCCCBC76D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJMHOCOglWIDP8SFfgJogFeBicfBGWt7hIWtXX5kocMTaicohNpgB34F1yHy5dmAPHfw962NvhKciaAg/132","comment_is_top":false,"comment_ctime":1573830029,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573830029","product_id":100039001,"comment_content":"最近写代码时，一直在苦笑自己在初期时的日志记录，记录的太杂，出现问题时，需要在大量无用的信息找某个故障点。所以感觉代码易于故障排查也是非常重要的。不知这个算不算可维护性一个方面呢？","like_count":0},{"had_liked":false,"id":151949,"user_name":"jeffery","can_delete":false,"product_type":"c1","uid":1268106,"ip_address":"","ucode":"597CBF4AED4162","user_header":"https://static001.geekbang.org/account/avatar/00/13/59/8a/2722f79c.jpg","comment_is_top":false,"comment_ctime":1573820289,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573820289","product_id":100039001,"comment_content":"1.易于维护<br>2.易扩展<br>3.高性能","like_count":0},{"had_liked":false,"id":151823,"user_name":"hongyu","can_delete":false,"product_type":"c1","uid":1035593,"ip_address":"","ucode":"62CF7E3D433AC1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cd/49/4f490295.jpg","comment_is_top":false,"comment_ctime":1573797024,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573797024","product_id":100039001,"comment_content":"心目的的好代码  就是隔一段时间看的懂 好修改 ","like_count":0},{"had_liked":false,"id":151805,"user_name":"乐观的鹏程","can_delete":false,"product_type":"c1","uid":1746026,"ip_address":"","ucode":"FA527FA2C4204B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJgXIicettSIeIDpL2zt39Zb0fdBwOlibdia5AjWITYQZCWPGDPdFKKe9UiahgROkAyoES7niaobZatvQA/132","comment_is_top":false,"comment_ctime":1573794915,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573794915","product_id":100039001,"comment_content":"代码一直写的不咋地，急需这样的学习机会哈哈，没想到还真的等到了","like_count":0},{"had_liked":false,"id":151767,"user_name":"个人练习生niki👍","can_delete":false,"product_type":"c1","uid":1191678,"ip_address":"","ucode":"48E5D6DE94BBBB","user_header":"https://static001.geekbang.org/account/avatar/00/12/2e/fe/5541689b.jpg","comment_is_top":false,"comment_ctime":1573787632,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573787632","product_id":100039001,"comment_content":"文档详尽 通过文档了解设计总体思路、流程。<br>健壮性 对异常情况需要考虑全面、清楚。<br><br>好代码的样子<br>命名规范 不滥用缩写，取名有意义，保持名称清晰易理解<br>使用框架、工具类时，对业务场景预估，对容器容量，容器类型做合适的选择<br>定期思考是否可以重构<br>","like_count":0},{"had_liked":false,"id":151599,"user_name":"Jason","can_delete":false,"product_type":"c1","uid":1025030,"ip_address":"","ucode":"62A89FD460827A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/06/cf6b6d0f.jpg","comment_is_top":false,"comment_ctime":1573747219,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573747219","product_id":100039001,"comment_content":"打卡。作为小白也讲不出太高深的见解，代码能加上注释我就觉得很好了。今天读了小争哥的文章我才知道写代码要考虑可维护、可读性、可扩展性等这么多地方。以后常复习，希望课程结束能真正说上两句。","like_count":0},{"had_liked":false,"id":151591,"user_name":"秋葵","can_delete":false,"product_type":"c1","uid":1354644,"ip_address":"","ucode":"6D72EFFCDD14E3","user_header":"https://static001.geekbang.org/account/avatar/00/14/ab/94/729a2318.jpg","comment_is_top":false,"comment_ctime":1573746048,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573746048","product_id":100039001,"comment_content":"1.可拓展性高、易读、简单、可维护性好，可复用；","like_count":0},{"had_liked":false,"id":151577,"user_name":"东流","can_delete":false,"product_type":"c1","uid":1738147,"ip_address":"","ucode":"2715BC6E87BD83","user_header":"https://static001.geekbang.org/account/avatar/00/1a/85/a3/7e078442.jpg","comment_is_top":false,"comment_ctime":1573742245,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573742245","product_id":100039001,"comment_content":"结构清晰，耦合度低","like_count":0},{"had_liked":false,"id":151386,"user_name":"几点了","can_delete":false,"product_type":"c1","uid":1029537,"ip_address":"","ucode":"3F690A93A352A7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b5/a1/7706597c.jpg","comment_is_top":false,"comment_ctime":1573711917,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573711917","product_id":100039001,"comment_content":"由于我的业务特点，在我目前的工作当中，可读性和可维护性是最重要；其次是代码执行效率。","like_count":0},{"had_liked":false,"id":151349,"user_name":"木子00","can_delete":false,"product_type":"c1","uid":1314724,"ip_address":"","ucode":"8F78CA722EB29B","user_header":"https://static001.geekbang.org/account/avatar/00/14/0f/a4/0b49469f.jpg","comment_is_top":false,"comment_ctime":1573703759,"is_pvip":true,"replies":[{"id":"58364","content":"后面有几篇实战文章，你可以借鉴一下。","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1573789254,"ip_address":"","comment_id":151349,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573703759","product_id":100039001,"comment_content":"这一篇老师讲的太好了，老师讲的一些自己的问题。我现在也是处于这个阶段。<br>让我写一个从无到有到系统，或者独立的模块。都不知道从何下手。也看过设计模式，也看过框架源码，知道这么写的，但是让我写就是写不出来，没有一点思路。<br>学完设计模式之美能改变现在的状况吗？<br>(能说说老师怎么脱离这样的状况吗？）","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474450,"discussion_content":"后面有几篇实战文章，你可以借鉴一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573789254,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151331,"user_name":"风vs雷","can_delete":false,"product_type":"c1","uid":1065647,"ip_address":"","ucode":"2DD109C71C9B42","user_header":"","comment_is_top":false,"comment_ctime":1573700831,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573700831","product_id":100039001,"comment_content":"有哪些可以参考的有效的函数或者接口命名规则。","like_count":0},{"had_liked":false,"id":151280,"user_name":"小青蛙和大公鸡","can_delete":false,"product_type":"c1","uid":1006657,"ip_address":"","ucode":"C0D23CBA1B8F8E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/41/bf2c9ae0.jpg","comment_is_top":false,"comment_ctime":1573694626,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573694626","product_id":100039001,"comment_content":"<br>1. 可维护性；<br>2. 可读性；<br>3.可扩展性；<br>4.灵活性；<br>5.简单性；<br>6.可复制性；<br>7. 可测试性","like_count":0},{"had_liked":false,"id":151253,"user_name":"斜杠ing...","can_delete":false,"product_type":"c1","uid":1676247,"ip_address":"","ucode":"C4AE866AC8B9AE","user_header":"https://static001.geekbang.org/account/avatar/00/19/93/d7/93c8f92a.jpg","comment_is_top":false,"comment_ctime":1573691813,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573691813","product_id":100039001,"comment_content":"我的评判就是简单简单再简单，不写啰嗦的代码","like_count":0},{"had_liked":false,"id":151239,"user_name":"春夏秋冬","can_delete":false,"product_type":"c1","uid":1433348,"ip_address":"","ucode":"298733E724F776","user_header":"https://static001.geekbang.org/account/avatar/00/15/df/04/9d207229.jpg","comment_is_top":false,"comment_ctime":1573690453,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573690453","product_id":100039001,"comment_content":"可读性，可维护，可扩展，这三个是我感觉很重要的方面，代码是在电脑上运行的，但是终究是人写出来的，最后还是要人来阅读和操作，脱离了人的代码就是耍流氓","like_count":0},{"had_liked":false,"id":151185,"user_name":"Wong","can_delete":false,"product_type":"c1","uid":1574533,"ip_address":"","ucode":"9D9D07A13549D3","user_header":"https://static001.geekbang.org/account/avatar/00/18/06/85/b797483b.jpg","comment_is_top":false,"comment_ctime":1573662508,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573662508","product_id":100039001,"comment_content":"代码自文档化","like_count":0},{"had_liked":false,"id":151164,"user_name":"彭序猿","can_delete":false,"product_type":"c1","uid":1002648,"ip_address":"","ucode":"EC59F7968147B6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4c/98/9845e6b5.jpg","comment_is_top":false,"comment_ctime":1573659879,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573659879","product_id":100039001,"comment_content":"代码的健壮性，鲁棒性也非常重要，代码脆弱到不足以支撑业务，这个是非常糟糕的，这个算是最基本的能力。<br><br>好代码的格式也很重要的，可以有效降低阅读者的逆反心理。<br>","like_count":0},{"had_liked":false,"id":151118,"user_name":"even","can_delete":false,"product_type":"c1","uid":1249431,"ip_address":"","ucode":"C976CFB2A0EBBF","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Cwkic25ndkExxY3HvVjAaYKVzFRicv2X6TE2sjdqTBBmqeh7X8crIQe3SHPichvcayOCqI3PJ88yVuMNlD8VvkE3A/132","comment_is_top":false,"comment_ctime":1573655374,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573655374","product_id":100039001,"comment_content":"思从深行从简！","like_count":0},{"had_liked":false,"id":151115,"user_name":"天使梦泪","can_delete":false,"product_type":"c1","uid":1235750,"ip_address":"","ucode":"782991747DD424","user_header":"https://static001.geekbang.org/account/avatar/00/12/db/26/3c8d68fb.jpg","comment_is_top":false,"comment_ctime":1573654950,"is_pvip":false,"replies":[{"id":"58216","content":"有的","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1573700756,"ip_address":"","comment_id":151115,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573654950","product_id":100039001,"comment_content":"老师好，如果可以帮助分析下jdk和spring源码就更好了。","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474368,"discussion_content":"有的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573700756,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151110,"user_name":"志振爱咋滴咋滴","can_delete":false,"product_type":"c1","uid":1237624,"ip_address":"","ucode":"E7A5049920C101","user_header":"https://static001.geekbang.org/account/avatar/00/12/e2/78/9241b7b2.jpg","comment_is_top":false,"comment_ctime":1573654425,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573654425","product_id":100039001,"comment_content":"根据个人理解来看<br>1.健壮性，首先能够稳定的执行而不会有各种幺蛾子出现<br>2.好的日志记录，能够让人在出问题的时候可以快速定位问题，做好预先防范<br>3.简洁清晰，结构明确，不会东一块西一块，调用和修改起来十分困难，命名不要太类似，让人眼花缭乱。<br>4.尽可能把不涉及到具体内容的代码抽取复用，避免互相影响","like_count":0},{"had_liked":false,"id":151050,"user_name":"Joker","can_delete":false,"product_type":"c1","uid":1241567,"ip_address":"","ucode":"C42E11098E1B38","user_header":"https://static001.geekbang.org/account/avatar/00/12/f1/df/8ba04bec.jpg","comment_is_top":false,"comment_ctime":1573647638,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573647638","product_id":100039001,"comment_content":"代码的健壮性，执行效率高就是好代码","like_count":0},{"had_liked":false,"id":150978,"user_name":"Felix Cao","can_delete":false,"product_type":"c1","uid":1192259,"ip_address":"","ucode":"3C4690F1D9D5B8","user_header":"https://static001.geekbang.org/account/avatar/00/12/31/43/a1947dcb.jpg","comment_is_top":false,"comment_ctime":1573637438,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573637438","product_id":100039001,"comment_content":"笔记：<br>1、好代码命名清晰，结构清晰，格式规整，配套文档API详细；<br>2、好代码有灵魂，看完后，知道代码后续扩展，甚至知道后续feature方向；<br>3、好代码定位bug、修改bug迅速，新功能上手迅速。","like_count":0},{"had_liked":false,"id":150943,"user_name":"sevenfan","can_delete":false,"product_type":"c1","uid":1005261,"ip_address":"","ucode":"DD5757CEF9FD2E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/cd/74c40655.jpg","comment_is_top":false,"comment_ctime":1573632759,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573632759","product_id":100039001,"comment_content":"代码Review过程中，个人经验非常重要；实际开发过程很难长时间组织优秀大牛给新人小白Review。不知大家有没有好的实践方法？","like_count":0},{"had_liked":false,"id":150449,"user_name":"成楠Peter","can_delete":false,"product_type":"c1","uid":1252977,"ip_address":"","ucode":"4D13E7368D8CF2","user_header":"https://static001.geekbang.org/account/avatar/00/13/1e/71/9dcbe6c4.jpg","comment_is_top":false,"comment_ctime":1573536920,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573536920","product_id":100039001,"comment_content":"好的代码应该具备高性能","like_count":0},{"had_liked":false,"id":150410,"user_name":"饭太司替可","can_delete":false,"product_type":"c1","uid":1171829,"ip_address":"","ucode":"9A47FCA16199B0","user_header":"https://static001.geekbang.org/account/avatar/00/11/e1/75/bbdf9052.jpg","comment_is_top":false,"comment_ctime":1573529627,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573529627","product_id":100039001,"comment_content":"代码整洁性吧，让人只是扫一眼这一块的代码看起来比较舒服，不乱。 也能反应出编写这段代码的工程师当时的心态。","like_count":0},{"had_liked":false,"id":150333,"user_name":"辞酒轻尘","can_delete":false,"product_type":"c1","uid":1243330,"ip_address":"","ucode":"70445E8E5D0CB9","user_header":"https://static001.geekbang.org/account/avatar/00/12/f8/c2/2f28b148.jpg","comment_is_top":false,"comment_ctime":1573520151,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573520151","product_id":100039001,"comment_content":"正在看代码整洁之道，目前了解到的有方法名见名之意，少注释因为注释不易维护，代码要尽量抽象解耦，要有层次感。<br>里面提到了程序员大部分时间都是在看已有的代码，我很赞同，我觉得易维护扩展是非常重要的，为了便于定位，日志、异常的分级处理和输出也是如此。<br>根据工作经验，好代码的检验标准之一，是看你写的代码能否被同事快速理解和维护。","like_count":0},{"had_liked":false,"id":150305,"user_name":"jack","can_delete":false,"product_type":"c1","uid":1737808,"ip_address":"","ucode":"983B0510EE354F","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ2m0BftUtLicRjQq9ItFjYDmiamHBMxCEoAUic8mP7Kx6XzFW9Y4dG26km3ibOyu9Z74ECicfb5oIarKg/132","comment_is_top":false,"comment_ctime":1573517307,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573517307","product_id":100039001,"comment_content":"争哥，希望在接下来八个月时间，在你的带领下能写出可读可扩展易维护的代码。","like_count":0},{"had_liked":false,"id":150134,"user_name":"张三","can_delete":false,"product_type":"c1","uid":1004092,"ip_address":"","ucode":"1155528FAE1546","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/3c/d6fcb93a.jpg","comment_is_top":false,"comment_ctime":1573466810,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573466810","product_id":100039001,"comment_content":"高内聚低耦合","like_count":0},{"had_liked":false,"id":150111,"user_name":"吉吉","can_delete":false,"product_type":"c1","uid":1126111,"ip_address":"","ucode":"5A5DAB5B49D0F1","user_header":"https://static001.geekbang.org/account/avatar/00/11/2e/df/59725073.jpg","comment_is_top":false,"comment_ctime":1573463318,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573463318","product_id":100039001,"comment_content":"最基本的我觉得首先应该：<br>1、代码格式整洁<br>2、代码注释要有<br>3、层次分明，简单明了<br>一定要考虑下后面接盘侠的感受，能在很短时间内读懂你写的代码并能很快上手","like_count":0},{"had_liked":false,"id":150088,"user_name":"冬渐暖","can_delete":false,"product_type":"c1","uid":1586800,"ip_address":"","ucode":"907E41AAE9A36C","user_header":"https://static001.geekbang.org/account/avatar/00/18/36/70/00122b24.jpg","comment_is_top":false,"comment_ctime":1573460568,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573460568","product_id":100039001,"comment_content":"代码写得好的几个层面<br>1.方不方便客户端加字段<br>2.方不方便产品改需求<br>3.我能不能快速读懂<br>4.我还能不能再复用<br>5.我还能不能精简你的东西<br>至于方不方便测试，因为在的公司都是流程化，先定好yapi，然后按照yapi上的内容开发接口，可以不需要考虑这个问题，减轻负担<br><br>至于怎么写好，相信笔者后面也会讲到，这也是带着问题去思考的优点","like_count":0},{"had_liked":false,"id":150042,"user_name":"努力努力再努力m","can_delete":false,"product_type":"c1","uid":1644369,"ip_address":"","ucode":"9DD9E9C2988FFC","user_header":"https://static001.geekbang.org/account/avatar/00/19/17/51/3e13dc0c.jpg","comment_is_top":false,"comment_ctime":1573452193,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573452193","product_id":100039001,"comment_content":"我觉得代码的安全性也非常重要，不仅是代码逻辑上的安全性，确保数据的安全性也很重要。","like_count":0},{"had_liked":false,"id":149841,"user_name":"米 虫","can_delete":false,"product_type":"c1","uid":1073087,"ip_address":"","ucode":"6F35AA8BB8195B","user_header":"https://static001.geekbang.org/account/avatar/00/10/5f/bf/4bd3eb4b.jpg","comment_is_top":false,"comment_ctime":1573400562,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573400562","product_id":100039001,"comment_content":"各个模块都该尽量保持独立，就像炒菜的时候。锅边放的一壶油，一盒盐，一瓶酱油，完全独立，炒菜函数再去各个模块拿东西，改东西。","like_count":0},{"had_liked":false,"id":149824,"user_name":"学好习，做好人","can_delete":false,"product_type":"c1","uid":1205294,"ip_address":"","ucode":"C991643DB458E2","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/2e/e70a317a.jpg","comment_is_top":false,"comment_ctime":1573394462,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573394462","product_id":100039001,"comment_content":"工作这几年发现，对于一段好代码，是否能让人看懂以及是否能够易于扩展真的是非常非常重要的，经常会看见一段代码，看的时候就会觉得当时写的人再写的时候没有丝毫的逻辑性可言，基本是想到哪写到哪，各个功能混杂在一起，当然这让的代码也就不易懂更不易扩展了。为了能够写出好代码我觉得以下思考是必须的：<br>1.面对一个新的业务或者产品，你的步骤或者原则有哪些<br>2.这些步骤或者原则是否可以抽象来复用<br>3.你写的代码除了遵循一定的设计原则之外，是否是高效的并且适于当下产品的场景的<br><br>总之：想清楚在做，想明白再写","like_count":0},{"had_liked":false,"id":149767,"user_name":"初心","can_delete":false,"product_type":"c1","uid":1104576,"ip_address":"","ucode":"C090A1723E3474","user_header":"https://static001.geekbang.org/account/avatar/00/10/da/c0/9fc31f2d.jpg","comment_is_top":false,"comment_ctime":1573371799,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573371799","product_id":100039001,"comment_content":"好的代码，在定位问题时，第一时间找到核心点。","like_count":0},{"had_liked":false,"id":149662,"user_name":"学明","can_delete":false,"product_type":"c1","uid":1033677,"ip_address":"","ucode":"1A499A2557F74D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c5/cd/7d3e4355.jpg","comment_is_top":false,"comment_ctime":1573308660,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573308660","product_id":100039001,"comment_content":"我自已的经验，注释较少的代码，往往质量较高。<br>因为注释基本上是针对逻辑复杂或者设计定义不明确代码的说明。","like_count":0},{"had_liked":false,"id":149656,"user_name":"javaadu","can_delete":false,"product_type":"c1","uid":1000519,"ip_address":"","ucode":"8C0B140F1C8992","user_header":"https://static001.geekbang.org/account/avatar/00/0f/44/47/3ddb94d0.jpg","comment_is_top":false,"comment_ctime":1573305804,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573305804","product_id":100039001,"comment_content":"好的代码表达力强，又足够简单不啰嗦，能满足现有的业务需求，同时留了一些应对变化的扩展点<br><br>好的代码能让人看懂作者的思考，忍不住击节赞叹，而不是暗暗骂娘<br><br>争哥这篇文章算是将代码的好坏、评价标准、软件工程里对应的方法论时间的关系给理清楚了","like_count":0},{"had_liked":false,"id":149598,"user_name":"Arthur","can_delete":false,"product_type":"c1","uid":1151989,"ip_address":"","ucode":"B6CD75EACF6AF4","user_header":"https://static001.geekbang.org/account/avatar/00/11/93/f5/32c9fc77.jpg","comment_is_top":false,"comment_ctime":1573288217,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573288217","product_id":100039001,"comment_content":"maintainability，readability，extensibility 是说的最多的几点，还有一个 testability","like_count":0},{"had_liked":false,"id":149583,"user_name":"Lorne.Z","can_delete":false,"product_type":"c1","uid":1109854,"ip_address":"","ucode":"8C67D82246A3AC","user_header":"https://static001.geekbang.org/account/avatar/00/10/ef/5e/381d043b.jpg","comment_is_top":false,"comment_ctime":1573282774,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573282774","product_id":100039001,"comment_content":"我觉得： 能够把理论应用到实际的代码开发中，是评价标准之一","like_count":0},{"had_liked":false,"id":149369,"user_name":"星一","can_delete":false,"product_type":"c1","uid":1103829,"ip_address":"","ucode":"EF550131FAE1BF","user_header":"https://static001.geekbang.org/account/avatar/00/10/d7/d5/6fbf1070.jpg","comment_is_top":false,"comment_ctime":1573202470,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573202470","product_id":100039001,"comment_content":"老师说的很好，但是现实是很多团队根本都不care这些，尤其是领导只关注功能是否实现，至于代码写的漂亮与否丝毫不在意。。","like_count":0},{"had_liked":false,"id":149358,"user_name":"吖蒲","can_delete":false,"product_type":"c1","uid":1036972,"ip_address":"","ucode":"397C5DA20D5693","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d2/ac/aeb9f156.jpg","comment_is_top":false,"comment_ctime":1573201292,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573201292","product_id":100039001,"comment_content":"读起来清晰易懂，改起来不费周章。","like_count":0},{"had_liked":false,"id":149277,"user_name":"随心而至","can_delete":false,"product_type":"c1","uid":1097836,"ip_address":"","ucode":"31866865255101","user_header":"https://static001.geekbang.org/account/avatar/00/10/c0/6c/29be1864.jpg","comment_is_top":false,"comment_ctime":1573181715,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573181715","product_id":100039001,"comment_content":"有没有一种精神追求也很重要，有的人就满足于写能用的代码。","like_count":0},{"had_liked":false,"id":149256,"user_name":"噗╰_╯噗 ","can_delete":false,"product_type":"c1","uid":1140666,"ip_address":"","ucode":"AFB831EB42256D","user_header":"https://static001.geekbang.org/account/avatar/00/11/67/ba/5a1bd8c9.jpg","comment_is_top":false,"comment_ctime":1573179794,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573179794","product_id":100039001,"comment_content":"一类代码，简单几行实现复杂的功能，而且在没有注释的情况下一个人不费吹灰之力即可读懂，扩展功能只是分分钟的事。二类代码需要需要借助于注释，配合扎实的深厚的代码功底也能读懂，新手读懂代码需要花费较长时间时间，想要实现新的功能对于新手来说费了老劲了。三类代码，有注释，意大利面条式，可读性还不错，代码复用性差，想要加点东西要改很多地方。四类代码，没有注释，读只我代码主人亲自上阵才能读懂，整个代码就是像积木堆成的一幢楼，一不小心全线崩塌","like_count":0},{"had_liked":false,"id":149242,"user_name":"开心学习","can_delete":false,"product_type":"c1","uid":1215134,"ip_address":"","ucode":"DCC050F6A8840B","user_header":"https://static001.geekbang.org/account/avatar/00/12/8a/9e/502e5f14.jpg","comment_is_top":false,"comment_ctime":1573178032,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573178032","product_id":100039001,"comment_content":"之前我个人对于好代码还是烂代码只是嘴上说说，心中完全没有具体的评判和鉴别标准，看了老师对于代码好坏的评判标准真的是很全面和清晰。<br>","like_count":0},{"had_liked":false,"id":149184,"user_name":"quietwater","can_delete":false,"product_type":"c1","uid":1055029,"ip_address":"","ucode":"C25E2CD356D3F9","user_header":"https://static001.geekbang.org/account/avatar/00/10/19/35/be8372be.jpg","comment_is_top":false,"comment_ctime":1573174164,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573174164","product_id":100039001,"comment_content":"反其道而行之，说什么是好的很难，但说什么是不好的要更简单实用些。<br>1.重复代码。<br>2.复杂度太高。<br>3入参太多。<br>4.不止做一件事。（要么修改状态，要么查询，不要两样都做）<br>5.方法之间传递可变属性。（比如传递对象，应该传递对象ID)","like_count":0},{"had_liked":false,"id":149133,"user_name":"Paul Shan","can_delete":false,"product_type":"c1","uid":1593140,"ip_address":"","ucode":"32D99989028284","user_header":"","comment_is_top":false,"comment_ctime":1573163495,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573163495","product_id":100039001,"comment_content":"我读别人代码的时候喜欢画一些图(graph)，然后根据图的复杂性来大致判断代码质量。例如模块相互依赖关系可以表达成一个图,节点是模块，边是依赖关系，如果这个图是比较简单，甚至是树，或者图可以分成若干子图，层次结构一目了然，这样的依赖结构就是不错的依赖关系。如果图的边是杂乱无章，很难理解，这样的依赖结构就是不太好。再低一个层次，类与类之间的依赖关系也可以画成一个图，同样可以用图是否简洁，判断代码优劣。虽然判断图的标准也挺主观，但是比起判断代码质量来讲更容易把握一点。","like_count":0},{"had_liked":false,"id":149125,"user_name":"北极的大企鹅","can_delete":false,"product_type":"c1","uid":1045577,"ip_address":"","ucode":"8935346D08E109","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f4/49/2add4f6b.jpg","comment_is_top":false,"comment_ctime":1573148922,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573148922","product_id":100039001,"comment_content":"可读性真的很重要","like_count":0},{"had_liked":false,"id":149104,"user_name":"拉格朗日的忧桑","can_delete":false,"product_type":"c1","uid":1312991,"ip_address":"","ucode":"5FCB2C6616E113","user_header":"https://static001.geekbang.org/account/avatar/00/14/08/df/4e5c2b29.jpg","comment_is_top":false,"comment_ctime":1573141584,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573141584","product_id":100039001,"comment_content":"碰到好的代码，就像捡到了宝一样","like_count":0},{"had_liked":false,"id":149103,"user_name":"Geekwangc","can_delete":false,"product_type":"c1","uid":1591256,"ip_address":"","ucode":"C7CF64DF3E3EAA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/phlKhN4SKv2dic5Sr6fE4qWILbkDUjCQ2xhdiboM3UWSib4ulj3u7vl9OX4tylQTH8DfXWYELia7ry2WJ6PReowAVw/132","comment_is_top":false,"comment_ctime":1573141583,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573141583","product_id":100039001,"comment_content":"思从深而行从简，觉得可以作为我自己的flag","like_count":0},{"had_liked":false,"id":149089,"user_name":"Johar","can_delete":false,"product_type":"c1","uid":1101969,"ip_address":"","ucode":"834136A6F64CDC","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/91/89123507.jpg","comment_is_top":false,"comment_ctime":1573139715,"is_pvip":false,"discussion_count":0,"race_medal":2,"score":"1573139715","product_id":100039001,"comment_content":"1.错误处理，特别是和第三方对接，调用前打印入参，调用后打印返回结果，能够快速定位问题。另外异常不要乱抛，否则问题查半天<br>2.考虑效率，明确处理流程，尽量将不耗时的检查项放在前面，耗时的放在后面<br>3.单一原则，不要所有的功能都放在一个类里面实现","like_count":0},{"had_liked":false,"id":149065,"user_name":"Warn","can_delete":false,"product_type":"c1","uid":1465310,"ip_address":"","ucode":"F2F7FCDB0940D0","user_header":"https://static001.geekbang.org/account/avatar/00/16/5b/de/152f1c2c.jpg","comment_is_top":false,"comment_ctime":1573134042,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573134042","product_id":100039001,"comment_content":"代码的质量评判可能直白一点会看起来就会很美好，当然性能优化、稳定健壮、性能优化少不了。","like_count":0},{"had_liked":false,"id":149000,"user_name":"roaming","can_delete":false,"product_type":"c1","uid":1039232,"ip_address":"","ucode":"2736679690AB81","user_header":"https://static001.geekbang.org/account/avatar/00/0f/db/80/6b7629d7.jpg","comment_is_top":false,"comment_ctime":1573125649,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573125649","product_id":100039001,"comment_content":"纵向对比，自己代码也有写的相对好的时候；但写的不好的时候，一定是写代码之前思考的时间比较少的时候","like_count":0},{"had_liked":false,"id":148918,"user_name":"Walker Jiang","can_delete":false,"product_type":"c1","uid":1023818,"ip_address":"","ucode":"92AE855D428917","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9f/4a/f5b8c6b3.jpg","comment_is_top":false,"comment_ctime":1573109146,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573109146","product_id":100039001,"comment_content":"写的非常好","like_count":0},{"had_liked":false,"id":148879,"user_name":"符明明","can_delete":false,"product_type":"c1","uid":1736485,"ip_address":"","ucode":"44028EA9967627","user_header":"https://static001.geekbang.org/account/avatar/00/1a/7f/25/f6c3a5d8.jpg","comment_is_top":false,"comment_ctime":1573098658,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573098658","product_id":100039001,"comment_content":"我心目中的好代码是易读，简洁，高效，模块化，高内聚低耦合。","like_count":0},{"had_liked":false,"id":148877,"user_name":"符明明","can_delete":false,"product_type":"c1","uid":1736485,"ip_address":"","ucode":"44028EA9967627","user_header":"https://static001.geekbang.org/account/avatar/00/1a/7f/25/f6c3a5d8.jpg","comment_is_top":false,"comment_ctime":1573098555,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573098555","product_id":100039001,"comment_content":"其他标准有1. 高效性，即代码在机器上跑的效率，2. 牛逼性，即使用了很好的算法。","like_count":0},{"had_liked":false,"id":148863,"user_name":"lpf32","can_delete":false,"product_type":"c1","uid":1039717,"ip_address":"","ucode":"E1B127FDFF74BB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/dd/65/3b4a2930.jpg","comment_is_top":false,"comment_ctime":1573095772,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573095772","product_id":100039001,"comment_content":"为了提高可维护性，需要做好扩展性。扩展性好了，有时候代码就不那么简单易读。","like_count":0},{"had_liked":false,"id":148845,"user_name":"不与三季人说","can_delete":false,"product_type":"c1","uid":1693164,"ip_address":"","ucode":"A3F03832309FDD","user_header":"https://static001.geekbang.org/account/avatar/00/19/d5/ec/3d6e7ea7.jpg","comment_is_top":false,"comment_ctime":1573094232,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573094232","product_id":100039001,"comment_content":"通过导读的文章，越来越能认识到也越来越期待读到正文，开始真正的学习，正如老师所说，对于这些设计模式的重要性，好的代码的评判标准，还有一些设计原则，这些几乎是每一本书的开头部分都会着重介绍的，我也在很多书上看到过，但是有个特点，看的时候都明白，但是就是不知道有什么用，让我说我也说不上来那么多的原则和模式，同时又觉得不能死记硬背，所以一直在重复的看，同时想把这些技巧运用到实战中。","like_count":0},{"had_liked":false,"id":148790,"user_name":"James","can_delete":false,"product_type":"c1","uid":1134861,"ip_address":"","ucode":"48B0F2A334D1C1","user_header":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","comment_is_top":false,"comment_ctime":1573087378,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573087378","product_id":100039001,"comment_content":"也要适当加点注释说明方法功能等等…<br>","like_count":0},{"had_liked":false,"id":148769,"user_name":"居培波","can_delete":false,"product_type":"c1","uid":1437396,"ip_address":"","ucode":"27A5A8D9D4682B","user_header":"https://static001.geekbang.org/account/avatar/00/15/ee/d4/204d0c6d.jpg","comment_is_top":false,"comment_ctime":1573084247,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573084247","product_id":100039001,"comment_content":"好的工程师写完功能后能优化代码这一步。","like_count":0},{"had_liked":false,"id":148730,"user_name":"李斯大炮","can_delete":false,"product_type":"c1","uid":1191464,"ip_address":"","ucode":"8CB9C681634784","user_header":"https://static001.geekbang.org/account/avatar/00/12/2e/28/9c3adea2.jpg","comment_is_top":false,"comment_ctime":1573056420,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573056420","product_id":100039001,"comment_content":"代码逻辑清晰明了，分层明确，防御式编程，逻辑严谨辅以适当的设计模式，针对功能适度抽象做到代码的复用，添加功能也不需改动原逻辑，就是当下的代码诗人😂","like_count":0},{"had_liked":false,"id":148716,"user_name":"Amorfati","can_delete":false,"product_type":"c1","uid":1047091,"ip_address":"","ucode":"71122E777FE2AB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fa/33/0eb31e67.jpg","comment_is_top":false,"comment_ctime":1573053391,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573053391","product_id":100039001,"comment_content":"好的代码看起来就像读小说，简单清晰，不用太多思考就可以清楚知道是什么意思，比较讨厌炫技，在项目初始就开始各种抽象，最后大家看起来都很恼火，好的代码应该是便于修改的，能够清晰传达出要做的事情，即便长一点儿也没关系","like_count":0},{"had_liked":false,"id":148690,"user_name":"石头","can_delete":false,"product_type":"c1","uid":1238189,"ip_address":"","ucode":"EA620450F50642","user_header":"https://static001.geekbang.org/account/avatar/00/12/e4/ad/abc7540f.jpg","comment_is_top":false,"comment_ctime":1573049696,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573049696","product_id":100039001,"comment_content":"个人理解：<br>1、易读性：不用太多的注释，能够做到一看就懂。你定义的变量是干嘛的，函数的作用是啥。<br>2、可扩展性：新增逻辑只需要修改很少的代码即可完成。<br>3、高效：执行效率高。<br>4、可复用性：不同的平台只需修改少量的代码即可实现快速出产品。","like_count":0},{"had_liked":false,"id":148689,"user_name":"Holmes","can_delete":false,"product_type":"c1","uid":1078589,"ip_address":"","ucode":"28DD6247AC3908","user_header":"https://static001.geekbang.org/account/avatar/00/10/75/3d/0d6cf519.jpg","comment_is_top":false,"comment_ctime":1573049496,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573049496","product_id":100039001,"comment_content":"感觉文章里的一些句子有很多重复描述，有点冗余！希望后面的内容干货满满","like_count":0},{"had_liked":false,"id":148688,"user_name":"Holmes","can_delete":false,"product_type":"c1","uid":1078589,"ip_address":"","ucode":"28DD6247AC3908","user_header":"https://static001.geekbang.org/account/avatar/00/10/75/3d/0d6cf519.jpg","comment_is_top":false,"comment_ctime":1573049224,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573049224","product_id":100039001,"comment_content":"还是想看实践操作，理论看多了，没有实践的场景，或者说不知道什么时候还用什么设计模式","like_count":0},{"had_liked":false,"id":148678,"user_name":"柳树","can_delete":false,"product_type":"c1","uid":1025223,"ip_address":"","ucode":"F03249D4534BCB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/c7/d1ee69c6.jpg","comment_is_top":false,"comment_ctime":1573048155,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573048155","product_id":100039001,"comment_content":"好的代码，大概看起来像阅读文章一样吧，有的像悬疑小说，有的像散文。","like_count":0},{"had_liked":false,"id":148665,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1573046469,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1573046469","product_id":100039001,"comment_content":"我们想写出高质量的代码，好的代码首先就要知道怎么去判断什么是高质量好的代码，以什么纬度什么标准","like_count":0},{"had_liked":false,"id":148650,"user_name":"vivi_lee","can_delete":false,"product_type":"c1","uid":1027680,"ip_address":"","ucode":"166D8CB1648300","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/UswOHxYIocRX8Lzhxbotte13bKzRhk9fexAXVzGeibljibY15g30PwolaDOQvQyKsBtJziaFasu67qVCU4fib5ZKIQ/132","comment_is_top":false,"comment_ctime":1573044858,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573044858","product_id":100039001,"comment_content":"和软件架构质量属性部分类似：可用性、性能、可修改行、可测试性、安全性、易用性。","like_count":0},{"had_liked":false,"id":148598,"user_name":"jaryoung","can_delete":false,"product_type":"c1","uid":1077406,"ip_address":"","ucode":"6E72D107DB7E51","user_header":"https://static001.geekbang.org/account/avatar/00/10/70/9e/5095f881.jpg","comment_is_top":false,"comment_ctime":1573036349,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573036349","product_id":100039001,"comment_content":"paper，如此好看的代码，好的代码像看报纸一样，清晰明了。","like_count":0},{"had_liked":false,"id":148556,"user_name":"洛奇","can_delete":false,"product_type":"c1","uid":1624355,"ip_address":"","ucode":"662B4005721119","user_header":"https://static001.geekbang.org/account/avatar/00/18/c9/23/76511858.jpg","comment_is_top":false,"comment_ctime":1573029984,"is_pvip":false,"replies":[{"id":"57277","content":"是的 后面有讲到","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1573084895,"ip_address":"","comment_id":148556,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573029984","product_id":100039001,"comment_content":"单元测试真的很重要吗？以前都没重视","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473533,"discussion_content":"是的 后面有讲到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573084895,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148548,"user_name":"张和祥","can_delete":false,"product_type":"c1","uid":1000985,"ip_address":"","ucode":"AFFCA32CA6C166","user_header":"https://static001.geekbang.org/account/avatar/00/0f/46/19/827d1ce0.jpg","comment_is_top":false,"comment_ctime":1573029269,"is_pvip":false,"replies":[{"id":"57278","content":"算吧😂","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1573084925,"ip_address":"","comment_id":148548,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1573029269","product_id":100039001,"comment_content":"写足够的注释算个标准吗？","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473528,"discussion_content":"算吧😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573084925,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1238221,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e4/cd/5363c8fa.jpg","nickname":"Rain","note":"","ucode":"6A270D922A3B9D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45848,"discussion_content":"好的代码本身就是注释，clean code里面讲解了什么情况需要什么样的注释。不过我想老师也会讲到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573090471,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148522,"user_name":"啦啦啦","can_delete":false,"product_type":"c1","uid":1131687,"ip_address":"","ucode":"6B12EC90A62525","user_header":"https://static001.geekbang.org/account/avatar/00/11/44/a7/171c1e86.jpg","comment_is_top":false,"comment_ctime":1573024292,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1573024292","product_id":100039001,"comment_content":"看完评论，买了两本书，哈哈<br>","like_count":0,"discussions":[{"author":{"id":1087243,"avatar":"https://static001.geekbang.org/account/avatar/00/10/97/0b/a943bcb3.jpg","nickname":"zhou","note":"","ucode":"E1CE8575B3F106","race_medal":3,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":51826,"discussion_content":"啥书","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573957387,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1238221,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e4/cd/5363c8fa.jpg","nickname":"Rain","note":"","ucode":"6A270D922A3B9D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45846,"discussion_content":"帮你➕一本，Head First 设计模式😇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573090375,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148507,"user_name":"王智","can_delete":false,"product_type":"c1","uid":1079657,"ip_address":"","ucode":"0335277F255F7A","user_header":"https://static001.geekbang.org/account/avatar/00/10/79/69/5960a2af.jpg","comment_is_top":false,"comment_ctime":1573021014,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573021014","product_id":100039001,"comment_content":"命名规范, 方法的行数要少, 方法的封装, 代码简单易懂(注释标准)","like_count":0},{"had_liked":false,"id":148490,"user_name":"刘旺旺","can_delete":false,"product_type":"c1","uid":1086132,"ip_address":"","ucode":"A9E89684BAE08D","user_header":"https://static001.geekbang.org/account/avatar/00/10/92/b4/bd466eed.jpg","comment_is_top":false,"comment_ctime":1573018280,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573018280","product_id":100039001,"comment_content":"有的好代码，让人看着心情就很好，这个就很主观了。","like_count":0},{"had_liked":false,"id":148480,"user_name":"宝宝疯","can_delete":false,"product_type":"c1","uid":1026637,"ip_address":"","ucode":"D86F5A645FE61B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/aa/4d/c7df89bf.jpg","comment_is_top":false,"comment_ctime":1573016235,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573016235","product_id":100039001,"comment_content":"补充一个大家没有提到的，理想情况下一个团队的人尽量使用统一的编码风格，代码看起来像是同一个人写的，后期维护就很方便了。而不是一看代码就知道这一定是某某人写的。","like_count":0},{"had_liked":false,"id":148428,"user_name":"搅局","can_delete":false,"product_type":"c1","uid":1733851,"ip_address":"","ucode":"5664F01ADDAA37","user_header":"https://static001.geekbang.org/account/avatar/00/1a/74/db/164c9f7b.jpg","comment_is_top":false,"comment_ctime":1573006295,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573006295","product_id":100039001,"comment_content":"<br>笔记：<br>好代码的标准？<br>- 可维护性<br>- 可读性（人工可读）<br>- 可拓展性<br>- 可测试性<br>- DRY（灵活性、简洁性、可复用性）<br>如何写出高质量代码？<br>1. 知道好代码的标准<br>2. 知道方法论（前人的肩膀）<br>3. 实践<br>","like_count":0},{"had_liked":false,"id":148419,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1573005472,"is_pvip":false,"replies":[{"id":"57141","content":"多谢认可","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1573009819,"ip_address":"","comment_id":148419,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573005472","product_id":100039001,"comment_content":"争哥总结能力很强","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473488,"discussion_content":"多谢认可","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573009819,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148415,"user_name":"xavier","can_delete":false,"product_type":"c1","uid":1243128,"ip_address":"","ucode":"2F7918EA37ED9F","user_header":"https://static001.geekbang.org/account/avatar/00/12/f7/f8/3c0a6854.jpg","comment_is_top":false,"comment_ctime":1573005001,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573005001","product_id":100039001,"comment_content":"代码质量评判常用的七个标准：可维护性、可读性、可扩展性、灵活性、简洁性、可复用性、可测试性。","like_count":0},{"had_liked":false,"id":148414,"user_name":"GGL","can_delete":false,"product_type":"c1","uid":1215892,"ip_address":"","ucode":"AED10B8248D1E7","user_header":"https://static001.geekbang.org/account/avatar/00/12/8d/94/150dfe78.jpg","comment_is_top":false,"comment_ctime":1573004930,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573004930","product_id":100039001,"comment_content":"第二天，代码质量的好坏，如何写出高质量的代码。<br>        代码质量的高低评判需要综合各方面的因素，不能通过单一的维度去评价，而且不同的评价维度也不是相互独立的，而是相互影响、重叠以及包含的关系；<br>        量化一段代码质量的高低往往带有极强的主观性，与工程师自身的经验有很大的关系；最常用的评判标准大概有七个：可维护性、可读性、可扩展性、灵活性、简洁性、可复用性、可测试性，其中可维护性、可读性、可扩展性又是提到的最多的、最重要的评价标准；<br>        要写出高质量的代码就需要掌握更加细化、能落地的编程方法论，其中包含：面向对象设计思想、设计原则、设计模式、编码规范重构技巧等等（继承、多态、编码规范-可读性、设计原则-复用，灵活，可扩展、设计模式-易扩展、持续重构-可维护性）","like_count":0},{"had_liked":false,"id":148407,"user_name":"Holland","can_delete":false,"product_type":"c1","uid":1733170,"ip_address":"","ucode":"DE5EF4E8D8D573","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/x9U78tCoyfhWnFTr6f1AhH4c6ibOFtO6bYjoIM3ByCplx0lUU4wZSms5gic2Wxm7icfia1g8OJSgvqXKHQNPWAaHJQ/132","comment_is_top":false,"comment_ctime":1573003706,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573003706","product_id":100039001,"comment_content":"作为一个新手程序员,现在写的业务想的是代码如何能够更高效率的运行,减少时间成本....设计模式什么的完全不懂啊....","like_count":0},{"had_liked":false,"id":148386,"user_name":"Yangjing","can_delete":false,"product_type":"c1","uid":1018061,"ip_address":"","ucode":"D88DFD4958D07C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/88/cd/2c3808ce.jpg","comment_is_top":false,"comment_ctime":1573000897,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573000897","product_id":100039001,"comment_content":"变量命名，函数命名也是每天花费很多时间的","like_count":0},{"had_liked":false,"id":148370,"user_name":"Z冰红茶","can_delete":false,"product_type":"c1","uid":1237132,"ip_address":"","ucode":"8CAE9E0269882B","user_header":"https://static001.geekbang.org/account/avatar/00/12/e0/8c/edad0017.jpg","comment_is_top":false,"comment_ctime":1572999703,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572999703","product_id":100039001,"comment_content":"代码不够，注释来凑","like_count":0},{"had_liked":false,"id":148282,"user_name":"Xuyang","can_delete":false,"product_type":"c1","uid":1686661,"ip_address":"","ucode":"DE968B1EA68CA9","user_header":"https://static001.geekbang.org/account/avatar/00/19/bc/85/31ce7363.jpg","comment_is_top":false,"comment_ctime":1572967812,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572967812","product_id":100039001,"comment_content":"好的代码：1. 类接口设计需要考虑到后续的功能可扩展；2. 提高代码复用性（后续出现bug，也方便维护）， 3. 添加注释（可读性好） 4. 增加异常处理（提高鲁棒性）","like_count":0},{"had_liked":false,"id":148255,"user_name":"小晏子","can_delete":false,"product_type":"c1","uid":1132337,"ip_address":"","ucode":"3AAA6FB5ACB6AE","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/31/f35367c8.jpg","comment_is_top":false,"comment_ctime":1572964372,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1572964372","product_id":100039001,"comment_content":"我能看懂的就是好代码 😄","like_count":0},{"had_liked":false,"id":148253,"user_name":"逍遥思","can_delete":false,"product_type":"c1","uid":1015512,"ip_address":"","ucode":"340F05C786730F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7e/d8/92a98fb6.jpg","comment_is_top":false,"comment_ctime":1572964169,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572964169","product_id":100039001,"comment_content":"好代码一定不能有重构后留下的以注释形式存在的原代码，这更多的是个习惯问题，应该也可以归到可读性里","like_count":0},{"had_liked":false,"id":148236,"user_name":"小可爱(๑• . •๑)","can_delete":false,"product_type":"c1","uid":1106190,"ip_address":"","ucode":"1E97973449DBDC","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/0e/2912db26.jpg","comment_is_top":false,"comment_ctime":1572961831,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572961831","product_id":100039001,"comment_content":"一眼明意，注释整洁，命名规范等等","like_count":0},{"had_liked":false,"id":148206,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1572958089,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572958089","product_id":100039001,"comment_content":"合理的使用数据结构和算法。","like_count":0},{"had_liked":false,"id":148173,"user_name":"天才小飞猫","can_delete":false,"product_type":"c1","uid":1017409,"ip_address":"","ucode":"82BDC9F23CE320","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoaknSzhibWMuhuQRibib9MP0QyOIYMsyPxicpmTQHlHE0icgRUXicOqt6YyIzJQtDCLsStuRyK2bV74tmA/132","comment_is_top":false,"comment_ctime":1572954276,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572954276","product_id":100039001,"comment_content":"代码review的时候，要提出违反了哪些好的原则，或者反思哪些方面自己做的还不够好","like_count":0},{"had_liked":false,"id":148172,"user_name":"君不得闲","can_delete":false,"product_type":"c1","uid":1101581,"ip_address":"","ucode":"718AA2C9B410BB","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/0d/f4150547.jpg","comment_is_top":false,"comment_ctime":1572954186,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1572954186","product_id":100039001,"comment_content":"我觉得一个项目的代码首先得有规范和实时更新的文档，阿里的规范文档和oracle的规范文档都不错，有很好的参考价值。<br>其次是可读性，变量名一定程度上得表达出意思，表达不出也要注释标明，不然后期维护修改需求时很可能只能靠猜，费时费力。还有就是可复用性和可测试性，前者保证了维护的时候能够减少更改的次数，测试性保证了代码在边界内正常执行，边界外能够正确的返回错误信息。保证维护时增加新的bug。","like_count":0},{"had_liked":false,"id":148152,"user_name":"wl","can_delete":false,"product_type":"c1","uid":1392730,"ip_address":"","ucode":"45062AA2460F1F","user_header":"https://static001.geekbang.org/account/avatar/00/15/40/5a/e65e8c40.jpg","comment_is_top":false,"comment_ctime":1572950389,"is_pvip":false,"replies":[{"id":"57181","content":"多谢指出 我改","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1573027483,"ip_address":"","comment_id":148152,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572950389","product_id":100039001,"comment_content":"老师， Simplicity 和 Extensibility 建议都改下哦","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473416,"discussion_content":"多谢指出 我改","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573027483,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148146,"user_name":"冬渐暖","can_delete":false,"product_type":"c1","uid":1586800,"ip_address":"","ucode":"907E41AAE9A36C","user_header":"https://static001.geekbang.org/account/avatar/00/18/36/70/00122b24.jpg","comment_is_top":false,"comment_ctime":1572948898,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572948898","product_id":100039001,"comment_content":"<br>代码评测，一是你尽量参考《阿里巴巴开发手册》里面的规范，二是有些现有的东西你就不要造轮子，能用的就不要复制粘贴，把它们重构起来。除非你认为你能写的更好<br>三是你改的时候尽量遵守开关原则。","like_count":0},{"had_liked":false,"id":148135,"user_name":"...","can_delete":false,"product_type":"c1","uid":1356225,"ip_address":"","ucode":"D2E6EBA5E9B6F0","user_header":"https://static001.geekbang.org/account/avatar/00/14/b1/c1/08cc53c0.jpg","comment_is_top":false,"comment_ctime":1572946728,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572946728","product_id":100039001,"comment_content":"代码的可读性，和可维护性肯定是最高的。 如果你的代码具有可读性，那么你的逻辑肯定是清晰的，接着就是可扩展性了。 但是问题是这些都是不可以被量化的。有的时候我们只是会觉得，这么做会好一些，但是好哪里、哪里好、优缺点是什么。而且如果没有环境，个人的看法会具有局限性。而且我们大多数也不会去看之前的代码。 所以。。。 ","like_count":0},{"had_liked":false,"id":148122,"user_name":"teddytyy","can_delete":false,"product_type":"c1","uid":1268738,"ip_address":"","ucode":"E1569D81A4154E","user_header":"https://static001.geekbang.org/account/avatar/00/13/5c/02/e7af1750.jpg","comment_is_top":false,"comment_ctime":1572944265,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572944265","product_id":100039001,"comment_content":"打个卡吧","like_count":0},{"had_liked":false,"id":148121,"user_name":"zhanyd","can_delete":false,"product_type":"c1","uid":1073845,"ip_address":"","ucode":"4C994EE512A3C4","user_header":"https://static001.geekbang.org/account/avatar/00/10/62/b5/4159fa05.jpg","comment_is_top":false,"comment_ctime":1572944195,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1572944195","product_id":100039001,"comment_content":"好的代码有一种美感，和艺术是相通的，构图之美，数学之美，代码之美。","like_count":0,"discussions":[{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44624,"discussion_content":"数学不好，要想写出好代码有时还挺难","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572959245,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148120,"user_name":"sherry","can_delete":false,"product_type":"c1","uid":1234416,"ip_address":"","ucode":"4F1BB26390527D","user_header":"https://static001.geekbang.org/account/avatar/00/12/d5/f0/1f86793d.jpg","comment_is_top":false,"comment_ctime":1572943801,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572943801","product_id":100039001,"comment_content":"\t1. 评价标准（代码质量的评价有很强的主观性）<br>\t1\t可维护性 maintainability\tbug容易修复，修改、添加新功能能够轻松完成，就可以主观地认为易维护<br>\t2\t可读性 readability\t是否符合编码规范、命名是否达意、注释是否详尽、函数长短是否合适、模块划分是否清晰、是否具有高内聚低耦合等 --&gt; code review验证代码可读性<br>\t3\t可扩展性 extensibility\t在不修改或少量修改原有代码的情况下，通过扩展的方式添加新的功能代码<br>\t\t\t设计原则：对修改关闭，对扩展开放<br>\t4\t灵活性 flexibility\t易扩展、易复用、易用等<br>\t5\t简洁性 simplity\tKISS: Keep it simple, stupid<br>\t\t\t思从深而行从简，真正的高手能云淡风轻地用最简单的方法解决最复杂的问题<br>\t6\t可复用性 reuseability\t尽量减少重复代码的编写，复用已有的代码<br>\t7\t可测试性 testability\t可测试性差，难写单元测试，代码设计有问题<br><br>\t2. 如何写出高质量的代码？<br>编程方法：面向对象设计思想、设计原则、设计模式、编码规范、重构技巧","like_count":0},{"had_liked":false,"id":148115,"user_name":"真是艹0","can_delete":false,"product_type":"c1","uid":1234043,"ip_address":"","ucode":"0A082CE0D79C6E","user_header":"https://static001.geekbang.org/account/avatar/00/12/d4/7b/74e59208.jpg","comment_is_top":false,"comment_ctime":1572943423,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572943423","product_id":100039001,"comment_content":"叮","like_count":0},{"had_liked":false,"id":148085,"user_name":"小鸟淫太","can_delete":false,"product_type":"c1","uid":1247186,"ip_address":"","ucode":"AC44F552DDF93E","user_header":"https://static001.geekbang.org/account/avatar/00/13/07/d2/d7a200d5.jpg","comment_is_top":false,"comment_ctime":1572939608,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572939608","product_id":100039001,"comment_content":"最近大半年一直在做重构工作，希望在这个课程中能有所收获。。","like_count":0},{"had_liked":false,"id":148031,"user_name":"Sisyphus235","can_delete":false,"product_type":"c1","uid":1366359,"ip_address":"","ucode":"829CC4CE0FA96E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ooZCPFY1xgC81h0Eu3vuqbWG5MaBp8RNmvXXGQwupo2LpSOLq0rBlTDRAF1yM6wF09WdeG49rA9dJSVKIUBxnQ/132","comment_is_top":false,"comment_ctime":1572930810,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572930810","product_id":100039001,"comment_content":"代码不要过度设计，根据需求迭代，留有接口和扩展性。同时大型项目一定要考虑安全性，做好过滤和校检。","like_count":0},{"had_liked":false,"id":148030,"user_name":"张瑞浩","can_delete":false,"product_type":"c1","uid":1242092,"ip_address":"","ucode":"3F37052E1D00FB","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLnQfCfmXCPI1icrD2mVlIkY5AVY6MT3VMAYKjDXZYlBgUk6wxBj61vpK1Om3aRlj27R0RYbVoALGw/132","comment_is_top":false,"comment_ctime":1572930628,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572930628","product_id":100039001,"comment_content":"深刻同意，简单有效是代码的最终极答案。<br>之前负责项目中，有些业务代码刻意使用设计模式，比如访问者模式，导致后来者很难阅读；另外递归这种尽量少在业务代码中使用，第一个是阅读性，第二是问题可维护性","like_count":0},{"had_liked":false,"id":148017,"user_name":"子夜2104","can_delete":false,"product_type":"c1","uid":1070286,"ip_address":"","ucode":"C4FF54AEA6002F","user_header":"https://static001.geekbang.org/account/avatar/00/10/54/ce/92029d2f.jpg","comment_is_top":false,"comment_ctime":1572929359,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572929359","product_id":100039001,"comment_content":"我认为的好的代码：当你写的代码，交给别人时，他很容易看懂，能够快速理解你想要表达的意思；很方便的进行测试，以理解各个模块的功能；容易扩展，添加新功能时，不出bug，不重复造轮子，可以复用你的代码。<br><br>怎么做到呢？ 遵循设计模式、设计原则、有测试模块、编码规范（命名、模块化、统一编码风格）、有文档。","like_count":0},{"had_liked":false,"id":148009,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1015754,"ip_address":"","ucode":"00DF2FEC58D2E6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","comment_is_top":false,"comment_ctime":1572928099,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572928099","product_id":100039001,"comment_content":"思从深而行从简，说的真好，写程序如此，做人亦如此！","like_count":0},{"had_liked":false,"id":148003,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1119593,"ip_address":"","ucode":"94656FE4A6C378","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","comment_is_top":false,"comment_ctime":1572927199,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1572927199","product_id":100039001,"comment_content":"思从深，行从简！赞！","like_count":0},{"had_liked":false,"id":147971,"user_name":"胖大海","can_delete":false,"product_type":"c1","uid":1002290,"ip_address":"","ucode":"E9994CC28D49CB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4b/32/c067cd2f.jpg","comment_is_top":false,"comment_ctime":1572923766,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572923766","product_id":100039001,"comment_content":"对于一些特殊用途的业务需求，可能代码还需要考虑性能的一些硬性指标，因此就有可能需要牺牲一部分可读性可扩展性等；对于一些特殊的行业，比如医药行业的支持系统，还有可能需要考虑一些合规性政策对代码编写上的要求， 这方面恰恰是我们程序员们不太愿意去关注的。","like_count":0},{"had_liked":false,"id":147961,"user_name":"马小平","can_delete":false,"product_type":"c1","uid":1139457,"ip_address":"","ucode":"31B6F88F04B918","user_header":"https://static001.geekbang.org/account/avatar/00/11/63/01/cc4d66ea.jpg","comment_is_top":false,"comment_ctime":1572922552,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1572922552","product_id":100039001,"comment_content":"好的代码都差不多，不好的代码各有各的不好","like_count":0},{"had_liked":false,"id":147960,"user_name":"天空只能仰望？","can_delete":false,"product_type":"c1","uid":1102357,"ip_address":"","ucode":"D87BF6A57DAB42","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/15/4d43d05a.jpg","comment_is_top":false,"comment_ctime":1572922510,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572922510","product_id":100039001,"comment_content":"代码执行效率，代码稳定性两个重要指标，工作中很多公司都很重视这两个指标，都进行压测或者全链路压测去检验","like_count":0},{"had_liked":false,"id":147959,"user_name":"小伟","can_delete":false,"product_type":"c1","uid":1359701,"ip_address":"","ucode":"124953423491E2","user_header":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","comment_is_top":false,"comment_ctime":1572922421,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572922421","product_id":100039001,"comment_content":"代码除了运行外(给机器看)，大部分时间是给人看的。<br>一份代码是“好”还是“坏”，首先要能让人读懂，所以可读性是首位的，甚至牺牲某些性能也要保证可读性。读代码前，了解这份代码的背景很重要，说白话就是要知道这段代码是在干嘛，故一段overall的注释很有必要和重要，可以是思路、算法步骤或功能说明。最好是把可读变成易读。王老师的一句话很好，你的同事或其他人能轻松读懂你的代码，那么这个代码就是“好”代码。<br>其次，要有代码设计要有前瞻性，说白话就是业务逻辑分支要尽量多考虑到。业务逻辑决定了采用哪些设计模式来达成易扩展和易复用。如果做不到考虑周全，那么尽量选择那些有插件接口的模式来规提高易扩展和易复用性，如策略、工厂、模板等。<br>最后，易测试非常重要，尤其是在CI&#47;CD的模式下，代码要对自动化的单元、集成、回归等测试友好，否则CI&#47;CD很难有效率和效果。具体做法可参考各种DD，如TDD、BDD、DDD等。<br>总结，代码先要能读懂、好读懂，再能扩展、能复用，最后好测试、易测试。对于“好”代码，业务逻辑对错，优先级最低。可先做好前面几步，再调试业务逻辑，而不是反过来，这样的效率和效果都比较高。<br>个人看法，欢迎拍砖。","like_count":0},{"had_liked":false,"id":147954,"user_name":"蝴蝶","can_delete":false,"product_type":"c1","uid":1193167,"ip_address":"","ucode":"8019924D99182F","user_header":"https://static001.geekbang.org/account/avatar/00/12/34/cf/0a316b48.jpg","comment_is_top":false,"comment_ctime":1572922214,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1572922214","product_id":100039001,"comment_content":"打卡!","like_count":0},{"had_liked":false,"id":147928,"user_name":"考休","can_delete":false,"product_type":"c1","uid":1053955,"ip_address":"","ucode":"968DFC00D6D0CF","user_header":"https://static001.geekbang.org/account/avatar/00/10/15/03/c0fe1dbf.jpg","comment_is_top":false,"comment_ctime":1572919746,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572919746","product_id":100039001,"comment_content":"本专栏最有逼格的一句话，思丛深而行从简！","like_count":0},{"had_liked":false,"id":147916,"user_name":"坎迪汪","can_delete":false,"product_type":"c1","uid":1017033,"ip_address":"","ucode":"5B1ADFA2AF2934","user_header":"https://static001.geekbang.org/account/avatar/00/0f/84/c9/cfed3a2f.jpg","comment_is_top":false,"comment_ctime":1572919019,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572919019","product_id":100039001,"comment_content":"最重要的还是可维护性，写代码的时候就要先考虑这个。这个项目两年以后让你再添加个特性或修改个bug，你能迅速搞定么？老员工离职，新员工接手代码，完全没有办法下手的话，对他人来讲更是地狱。","like_count":0},{"had_liked":false,"id":147894,"user_name":"mark","can_delete":false,"product_type":"c1","uid":1015720,"ip_address":"","ucode":"39EDFEA8010F9B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/a8/d103904b.jpg","comment_is_top":false,"comment_ctime":1572917548,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1572917548","product_id":100039001,"comment_content":"最核心的点还是模块化，模块化之后，它的可读性就会变得非常好，可读性变好了，它的可维护性就会好，然后模块化之后它的扩展性也会变得很好，还有也会变得非常灵活，模块可以被复用，所以真正的软件编程的核心就是模块化。当然模块化不仅仅是软件工程的核心，也是传统工程问题的核心。写好代码实际上是，如何切分模块，如何组织模块的问题。我这里说的模块，可以是微观角度一个类，也可以是宏观角度的一个组件。类的组织问题，涉及到设计模式，宏观模块的组织问题涉及到架构的设计。他们两者实际上有共同的点，因为他们都是关于模块组织的艺术。","like_count":0},{"had_liked":false,"id":147888,"user_name":"古古惑惑","can_delete":false,"product_type":"c1","uid":1039710,"ip_address":"","ucode":"37724A018564FF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/dd/5e/2354204d.jpg","comment_is_top":false,"comment_ctime":1572917338,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1572917338","product_id":100039001,"comment_content":"除了文中提到的评价标准，我认为好的代码应该充分考虑各种异常情况的处理，保证代码的健壮性。<br>其次，每个函数应该尽可能简单，功能独立，代码行数最好不要超过100行。","like_count":0},{"had_liked":false,"id":147857,"user_name":"杜","can_delete":false,"product_type":"c1","uid":1236070,"ip_address":"","ucode":"E372639657C9AB","user_header":"https://static001.geekbang.org/account/avatar/00/12/dc/66/5861451b.jpg","comment_is_top":false,"comment_ctime":1572914499,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572914499","product_id":100039001,"comment_content":"高代码的另一个标准：考虑单测覆盖率","like_count":0},{"had_liked":false,"id":147855,"user_name":"追风少年","can_delete":false,"product_type":"c1","uid":1318664,"ip_address":"","ucode":"C172E9CFA3FB3E","user_header":"https://static001.geekbang.org/account/avatar/00/14/1f/08/7b5bfbc7.jpg","comment_is_top":false,"comment_ctime":1572914290,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1572914290","product_id":100039001,"comment_content":"能看懂的，能复用的","like_count":0},{"had_liked":false,"id":147801,"user_name":"辣么大","can_delete":false,"product_type":"c1","uid":1396951,"ip_address":"","ucode":"AB308B6DCA0108","user_header":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","comment_is_top":false,"comment_ctime":1572904514,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1572904514","product_id":100039001,"comment_content":"1、我觉得一个项目中要使用共同的编码标准（coding standards），例如变量命名，编码风格等等，这样写出的代码才符合项目的要求。<br>2、稳定性：维护代码的最低要求是不引入新的bug，不影响原有功能","like_count":0},{"had_liked":false,"id":147759,"user_name":"Yuuuuu","can_delete":false,"product_type":"c1","uid":1233780,"ip_address":"","ucode":"64FD04761D2111","user_header":"https://static001.geekbang.org/account/avatar/00/12/d3/74/578b169d.jpg","comment_is_top":false,"comment_ctime":1572883919,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572883919","product_id":100039001,"comment_content":"好的代码应该是大佬一看就能把握程序的整体设计，而新手看的一脸懵逼。","like_count":0},{"had_liked":false,"id":147757,"user_name":"雷霹雳的爸爸","can_delete":false,"product_type":"c1","uid":1119490,"ip_address":"","ucode":"99BBA6D83DD11F","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/02/66f65388.jpg","comment_is_top":false,"comment_ctime":1572883895,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1572883895","product_id":100039001,"comment_content":"如老师所说，代码好坏的评价带有很强的主观性，所以我还是倾向于识别代码坏味道来实际落地执行一些措施，就好象评价一个人好坏很难，甚至一些可能看似德行高尚的行为搞不好还会损害少数人的利益，但就某一个具体行为判断道德败坏还是比较容易操作的吧，拿底线来约束虽然是一种无奈，但总是向通常认为好的方向进了一步，特别是如果没有一个良好的工程师文化氛围，code review 的时候也很容易扯皮，用工具执行静态代码检查就是这个思路吧，虽然不一定能让你写出漂亮的代码，但至少能滤掉不少的初级问题","like_count":0,"discussions":[{"author":{"id":1087243,"avatar":"https://static001.geekbang.org/account/avatar/00/10/97/0b/a943bcb3.jpg","nickname":"zhou","note":"","ucode":"E1CE8575B3F106","race_medal":3,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":51825,"discussion_content":"你们code review具体是怎么做的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573957347,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147733,"user_name":"Joanfen","can_delete":false,"product_type":"c1","uid":1004260,"ip_address":"","ucode":"4CF1B92337B625","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/e4/50600574.jpg","comment_is_top":false,"comment_ctime":1572881861,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572881861","product_id":100039001,"comment_content":"代码可以很容易看出业务逻辑，方便其他人接手<br>与其他系统交互时，异常与错误信息，bug追踪是否方便","like_count":0},{"had_liked":false,"id":147723,"user_name":"仙道","can_delete":false,"product_type":"c1","uid":1161146,"ip_address":"","ucode":"CF35D34B484B71","user_header":"https://static001.geekbang.org/account/avatar/00/11/b7/ba/ae4cabd8.jpg","comment_is_top":false,"comment_ctime":1572881371,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572881371","product_id":100039001,"comment_content":"我觉得最直接的就是注释要尽可能的写详细点，最好还能举几个例子出来。","like_count":0},{"had_liked":false,"id":147716,"user_name":"花儿少年","can_delete":false,"product_type":"c1","uid":1318540,"ip_address":"","ucode":"CFE4F64243673B","user_header":"https://static001.geekbang.org/account/avatar/00/14/1e/8c/450fe5cb.jpg","comment_is_top":false,"comment_ctime":1572880635,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572880635","product_id":100039001,"comment_content":"我个人觉得需要补上两个<br>安全性---不能只有正常逻辑而不处理任何异常<br>性能--- 如果不是性能敏感的场景，或者说做到了老师说的那七点，这个点应该就不存在了","like_count":0},{"had_liked":false,"id":147656,"user_name":"潇潇雨歇","can_delete":false,"product_type":"c1","uid":1251429,"ip_address":"","ucode":"4BD52BF0F0A084","user_header":"https://static001.geekbang.org/account/avatar/00/13/18/65/35361f02.jpg","comment_is_top":false,"comment_ctime":1572876920,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572876920","product_id":100039001,"comment_content":"优雅，健壮，能处理各种问题，比较稳定。可读性很重要，平常总是觉得项目设计的不够好，很多时候为了完成而完成，没有更多的从代码层面去思考，怎么写出更好的代码，加油","like_count":0},{"had_liked":false,"id":147639,"user_name":"GeekAmI","can_delete":false,"product_type":"c1","uid":1005030,"ip_address":"","ucode":"232C0B6DFB9F56","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/e6/87197b10.jpg","comment_is_top":false,"comment_ctime":1572875409,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1572875409","product_id":100039001,"comment_content":"目前来看，我认为Netty的代码抽象的不错。","like_count":0,"discussions":[{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44629,"discussion_content":"感觉Spring的抽象很疯狂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572959422,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147616,"user_name":"　扬帆丶启航　","can_delete":false,"product_type":"c1","uid":1235282,"ip_address":"","ucode":"4079D0889CD86C","user_header":"https://static001.geekbang.org/account/avatar/00/12/d9/52/73351eab.jpg","comment_is_top":false,"comment_ctime":1572873386,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572873386","product_id":100039001,"comment_content":"可读性，健壮性，易于阅读并且能够处理各种异常情况","like_count":0},{"had_liked":false,"id":147593,"user_name":"ldd","can_delete":false,"product_type":"c1","uid":1208157,"ip_address":"","ucode":"E8344FAFFE5CF3","user_header":"https://static001.geekbang.org/account/avatar/00/12/6f/5d/f0a19f09.jpg","comment_is_top":false,"comment_ctime":1572872048,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1572872048","product_id":100039001,"comment_content":"稳定性，健壮性也很重要，特别是在一些特定错误的容错上。我个人觉得，这点在客户端的开发过程中尤为重要！","like_count":0,"discussions":[{"author":{"id":2323679,"avatar":"https://static001.geekbang.org/account/avatar/00/23/74/df/6c4c970c.jpg","nickname":"刘胜","note":"","ucode":"2ED796A94E1C8B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327458,"discussion_content":"我补充2点  1性能 2安全 客户端开发的 感受","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605842519,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147579,"user_name":"Cy23","can_delete":false,"product_type":"c1","uid":1591293,"ip_address":"","ucode":"8DC561C5151758","user_header":"https://static001.geekbang.org/account/avatar/00/18/47/fd/895f0c27.jpg","comment_is_top":false,"comment_ctime":1572871060,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572871060","product_id":100039001,"comment_content":"可读性不佳，可能水平不对等带来降级打击，也有可能是逻辑有点乱没有连续性。","like_count":0},{"had_liked":false,"id":147553,"user_name":"不破楼兰终不还","can_delete":false,"product_type":"c1","uid":1145867,"ip_address":"","ucode":"F06EEF04552A90","user_header":"https://static001.geekbang.org/account/avatar/00/11/7c/0b/2b5e5da5.jpg","comment_is_top":false,"comment_ctime":1572869498,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572869498","product_id":100039001,"comment_content":"平常践行最多的也就是简洁性，可读性，可复用性了。灵活性，可扩展性和可测试性都没有特别的在意，或者说不知道怎么去在意。","like_count":0},{"had_liked":false,"id":147511,"user_name":"哇哦","can_delete":false,"product_type":"c1","uid":1250599,"ip_address":"","ucode":"1F16B9150E93C3","user_header":"https://static001.geekbang.org/account/avatar/00/13/15/27/c5e4ec99.jpg","comment_is_top":false,"comment_ctime":1572867592,"is_pvip":false,"replies":[{"id":"57055","content":"是有重合，文章中有提到。","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1572947529,"ip_address":"","comment_id":147511,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572867592","product_id":100039001,"comment_content":"感觉列出的七个标准有一定重合部分。。比如说感觉灵活性，可拓展性，可复用。","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473256,"discussion_content":"是有重合，文章中有提到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572947529,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147496,"user_name":"梁军","can_delete":false,"product_type":"c1","uid":1521145,"ip_address":"","ucode":"81E22EFAFD77B4","user_header":"https://static001.geekbang.org/account/avatar/00/17/35/f9/7a682fc1.jpg","comment_is_top":false,"comment_ctime":1572867010,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572867010","product_id":100039001,"comment_content":"学之前先确定目标，标准，事半功倍","like_count":0},{"had_liked":false,"id":147467,"user_name":"七楼","can_delete":false,"product_type":"c1","uid":1491023,"ip_address":"","ucode":"106856DF5F8F12","user_header":"https://static001.geekbang.org/account/avatar/00/16/c0/4f/db7f2ab2.jpg","comment_is_top":false,"comment_ctime":1572865497,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1572865497","product_id":100039001,"comment_content":"是嘛。可测试性 ","like_count":0,"discussions":[{"author":{"id":1491023,"avatar":"https://static001.geekbang.org/account/avatar/00/16/c0/4f/db7f2ab2.jpg","nickname":"七楼","note":"","ucode":"106856DF5F8F12","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43291,"discussion_content":"相加老师微信。咨询下学习方向。我很迷","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572867057,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147396,"user_name":"虎哥","can_delete":false,"product_type":"c1","uid":1185061,"ip_address":"","ucode":"29D604EC85D3BC","user_header":"https://static001.geekbang.org/account/avatar/00/12/15/25/1d3d616f.jpg","comment_is_top":false,"comment_ctime":1572862236,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1572862236","product_id":100039001,"comment_content":"tomcat源码就蛮好","like_count":0,"discussions":[{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44634,"discussion_content":"具体请看tomcat相关专栏","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572959530,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1126534,"avatar":"https://static001.geekbang.org/account/avatar/00/11/30/86/c4e4d753.jpg","nickname":"优雅一点","note":"","ucode":"DA9608594E7602","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43250,"discussion_content":"光说好没用，要说出具体哪里好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572865124,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1725831,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/55/87/2ca3c6ab.jpg","nickname":"欢乐马","note":"","ucode":"8B9EFAFE948B61","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1126534,"avatar":"https://static001.geekbang.org/account/avatar/00/11/30/86/c4e4d753.jpg","nickname":"优雅一点","note":"","ucode":"DA9608594E7602","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43548,"discussion_content":"👍，那必须的，说出哪点好，才是真的好😊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572880945,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":43250,"ip_address":""},"score":43548,"extra":""}]}]},{"had_liked":false,"id":147406,"user_name":"丁丁历险记","can_delete":false,"product_type":"c1","uid":1661704,"ip_address":"","ucode":"A43829E454C067","user_header":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","comment_is_top":false,"comment_ctime":1572862458,"is_pvip":false,"discussion_count":13,"race_medal":0,"score":"1474746644986","product_id":100039001,"comment_content":"笔记：<br>个人理解，代码质量评判<br>1  机器的运行效率 （往往还和可读性相冲突，但又非绝对冲突） ， 有时候算法在没优化好的时候，时间空间是可以一起省下来的。<br>2  代码可管理行数。 好的代码，层次分明，职能分明，让人感受到代码品味。<br>  <br>2  最常用的评价标准。<br>    这块我一直没细分好，经常和同事开玩笑说“代码品味”（尊重大脑的特性，写出可便于维护的代码。程序 = 数据结构+算法   算法分control 相关和logic  相关。  合理的把control 相关与logic 相关进行分离就是非常好的套路 ，时间久了，看到违和感重的代码就很敏感了，主要是要求别把代码写死写散， 像dry 等基础原则都没遵守的，烂用全局变量的，创建对象没用框架的createObj 的，没支持依赖注入的，直接code review 时会指出 ）<br>如何才能写出高质量的代码？<br>    做中学。 我只说我自己，我在每完成一份工作后，都要拿出很大一部分时间来优化重构，自己改自己的代码。 【主要套路来源，代码整洁之道，重构-改善即有代码设计】  这算是我自律的一部分，我很珍惜工作中的开发实践。纯理论的东西学多了，人会飘飘乎乎的，需要实操来落地。<br> ","like_count":344,"discussions":[{"author":{"id":1254656,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/00/3afbab43.jpg","nickname":"88591","note":"","ucode":"04CE3E46455185","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":165156,"discussion_content":"在性能与高质量的代码标准中，会出现冲突的情况。如果性能优先，那么就优选性能。比如用汇编代码。大多数情况下面还是代码质量优先的，毕竟好的代码重从可维护，可扩展，可阅读上面节约的时间比优化性能的时间要少的多，成不也要低的多。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1581257170,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2058510,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/djjK4h3FfPGyllqd7Oc5TpCoJEU6TOcuiarLtAPGrROocibML1OgtUIgtxQDDsia3qqLfZkpCcDykl3l8WHNxzCag/132","nickname":"Geek_63aa00","note":"","ucode":"4AF5D3318F4468","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1254656,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/00/3afbab43.jpg","nickname":"88591","note":"","ucode":"04CE3E46455185","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":321920,"discussion_content":"可以，以实际经验来决定用哪个，总起来说高质量和高性能都具备，而有时候我们做的是根据项目工期而时间没那么多的情况下，优先重构结构从而减少时间。汇编等手段不一定有效果。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604650892,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":165156,"ip_address":""},"score":321920,"extra":""}]},{"author":{"id":1939320,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/97/78/9229749e.jpg","nickname":"未见","note":"","ucode":"EC8F9B0E5F3D9A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":320959,"discussion_content":"最后一句点的很好，理论学多了，人会飘。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1604510023,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1547048,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9b/28/9d89de4d.jpg","nickname":"暒","note":"","ucode":"9C956F418C66BB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43328,"discussion_content":"这个衡量代码的好坏的标准，接地气，我喜欢","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1572868446,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015483,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7e/bb/947c329a.jpg","nickname":"程序员小跃","note":"","ucode":"25BB96E0791A60","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":51071,"discussion_content":"老铁总结的很赞，你提到的书，我还在那里睡觉，尴尬","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573807346,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2097639,"avatar":"https://static001.geekbang.org/account/avatar/00/20/01/e7/0d4ea17d.jpg","nickname":"TapNugget","note":"","ucode":"502BED31148211","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1015483,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7e/bb/947c329a.jpg","nickname":"程序员小跃","note":"","ucode":"25BB96E0791A60","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":374469,"discussion_content":"写的越多代码，越觉得自己的代码原则和设计有问题…","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1621208469,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":51071,"ip_address":""},"score":374469,"extra":""}]},{"author":{"id":1140836,"avatar":"https://static001.geekbang.org/account/avatar/00/11/68/64/756ba667.jpg","nickname":"just code it","note":"","ucode":"9953DAD398F33D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":368484,"discussion_content":"这是陈皓总结的吧，不理解就不要乱说","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618730787,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1661704,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","nickname":"丁丁历险记","note":"","ucode":"A43829E454C067","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1140836,"avatar":"https://static001.geekbang.org/account/avatar/00/11/68/64/756ba667.jpg","nickname":"just code it","note":"","ucode":"9953DAD398F33D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369439,"discussion_content":"陈皓是谁，  如有雷同，有点巧和。\n可能大家看的书类似，例如google  整理术，代码大全等","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1619023905,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":368484,"ip_address":""},"score":369439,"extra":""}]},{"author":{"id":2058510,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/djjK4h3FfPGyllqd7Oc5TpCoJEU6TOcuiarLtAPGrROocibML1OgtUIgtxQDDsia3qqLfZkpCcDykl3l8WHNxzCag/132","nickname":"Geek_63aa00","note":"","ucode":"4AF5D3318F4468","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":322005,"discussion_content":"你的尊重大脑，我很受启发，是的，设计就是服务人类的，人类思维去做些事情，各种设计模式最后都是为了设计合理性提供工具，借助前人的智慧（设计模式）去不断提炼重构自己的代码（好比做题刷题，印脑子里），定期与同事讨论结构合理性（code review）。就像写文章一样错落有致，层次分明。你说的control和logic分开，我想linux设计里边很多这种思想","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604662144,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1364141,"avatar":"https://static001.geekbang.org/account/avatar/00/14/d0/ad/584a4aa1.jpg","nickname":"NieXY","note":"","ucode":"C131B9A44CB55C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282440,"discussion_content":"算法分control和logic，有没有实际的例子，望指教","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591972542,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1622209,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c0/c1/414d5d1b.jpg","nickname":"_yh葱","note":"","ucode":"FA899711E91113","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":190206,"discussion_content":"接地气，也喜欢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582905706,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1034922,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ca/aa/2ce2bdce.jpg","nickname":"。。","note":"","ucode":"E75F20D89106B5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45271,"discussion_content":"框架创建对象这个不太明白，是所有的对象都要用框架来创建吗？比如局部的呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573016935,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1016299,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/81/eb/04c16c3e.jpg","nickname":"silence_wh","note":"","ucode":"95FB5D6C02EC89","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43876,"discussion_content":"这个标准挺好的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572914951,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147814,"user_name":"时光勿念","can_delete":false,"product_type":"c1","uid":1025003,"ip_address":"","ucode":"72C8EC5A62C700","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a3/eb/d26459ae.jpg","comment_is_top":false,"comment_ctime":1572909808,"is_pvip":false,"discussion_count":18,"race_medal":0,"score":"1096789570288","product_id":100039001,"comment_content":"好看的代码千篇一律，垃圾的代码花样百出","like_count":256},{"had_liked":false,"id":147476,"user_name":"aof","can_delete":false,"product_type":"c1","uid":1062864,"ip_address":"","ucode":"5815D63C4926BC","user_header":"https://static001.geekbang.org/account/avatar/00/10/37/d0/26975fba.jpg","comment_is_top":false,"comment_ctime":1572865925,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"723127371653","product_id":100039001,"comment_content":"“思从深而行从简，真正的高手能云淡风轻地用最简单的方法解决最复杂的问题。” —— 这句话是写代码的精髓","like_count":169},{"had_liked":false,"id":148201,"user_name":"深藏Blue","can_delete":false,"product_type":"c1","uid":1031616,"ip_address":"","ucode":"CBEBCBDA47281C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bd/c0/57b06721.jpg","comment_is_top":false,"comment_ctime":1572957841,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"667292888721","product_id":100039001,"comment_content":"我理解的好代码：<br>1. 当你读我代码的时候，我已经不在了，但你依然能够清楚清晰的明白我要传递的信息<br>2. 当程序出错时，一方面我汇报的错误信息能够帮你找出你的错误在哪; 另一方面，你能准确告诉我，我到底错哪了，而不是说：&quot;xx接口报错了，你看下怎么回事&quot;<br>3. 当你需要造个轮子的时候，我的代码能够作为现成的轮毂，你只需要再配上其他的组装一下就行","like_count":156,"discussions":[{"author":{"id":1132304,"avatar":"https://static001.geekbang.org/account/avatar/00/11/47/10/2d673601.jpg","nickname":"好饿早知道送外卖了","note":"","ucode":"AED22DB5BF8FC7","race_medal":2,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":168723,"discussion_content":"一般都是下划线吧。毕竟你返回的数据结构而不是属性","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1581592814,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1033096,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c3/88/d16816a8.jpg","nickname":"如来神掌","note":"","ucode":"45E20FF935BD2F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289784,"discussion_content":"我喜欢下划线的，貌似Java的喜欢驼峰?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594211550,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1564002,"avatar":"https://static001.geekbang.org/account/avatar/00/17/dd/62/824e5e16.jpg","nickname":"沁塵","note":"","ucode":"4AD780EF50882B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":186231,"discussion_content":"下划线。抛开什么理论和定义不说，下划线分割更具美感","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582648273,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147856,"user_name":"小北","can_delete":false,"product_type":"c1","uid":1120156,"ip_address":"","ucode":"A428FC9B771108","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ercic1LB9N9P1kArjS1f3hOo641elcwFGHWrxeYF4yZjfwiaydLwVeM4ZJEmVkib66GtJoE0cr6Dviauw/132","comment_is_top":false,"comment_ctime":1572914419,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"370940101875","product_id":100039001,"comment_content":"除了小争哥提到的七个评价标准，我认为还有一个评价标准：易debug。在日常工作中，经常要追查各种线上case，代码是否易于debug，会非常影响工程师的追查效率。比如是否有打印详细的日志，是否有debug干涉点可以在debug模式下打印详细的线上请求信息便于快速定位问题。当然，这一点也可以放在可维护性中。","like_count":87,"discussions":[{"author":{"id":1547327,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9c/3f/ba9705e9.jpg","nickname":"杨娟","note":"","ucode":"52DF40E4921202","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":362033,"discussion_content":"易debug 易测试最实用","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1616831818,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1395629,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIiaOoIa1KJvwu6LgMc46ibFI7Intz5Xxic7dJbpwVDqD3KlAwPkXR7nqAwOAzQibnDOaSVxwG9OciaurQ/132","nickname":"Codyyyyyy","note":"","ucode":"EAE77EDB7C7153","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318299,"discussion_content":"debug就是可维护性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603700829,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1590960,"avatar":"https://static001.geekbang.org/account/avatar/00/18/46/b0/4f45e06e.jpg","nickname":"天雨流芳","note":"","ucode":"81657BA9C900FE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45845,"discussion_content":"易debug感觉跟可测试性沾边，出bug了，拉着入参，跑测试即可。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573090253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1120156,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ercic1LB9N9P1kArjS1f3hOo641elcwFGHWrxeYF4yZjfwiaydLwVeM4ZJEmVkib66GtJoE0cr6Dviauw/132","nickname":"小北","note":"","ucode":"A428FC9B771108","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1590960,"avatar":"https://static001.geekbang.org/account/avatar/00/18/46/b0/4f45e06e.jpg","nickname":"天雨流芳","note":"","ucode":"81657BA9C900FE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45892,"discussion_content":"很多时候是线上case需要研发立刻debug，测试是无法覆盖这种场景的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573095162,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":45845,"ip_address":""},"score":45892,"extra":""},{"author":{"id":1464013,"avatar":"https://static001.geekbang.org/account/avatar/00/16/56/cd/0add8290.jpg","nickname":"刘学习来学习","note":"","ucode":"5078B1EC8D8A66","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1120156,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ercic1LB9N9P1kArjS1f3hOo641elcwFGHWrxeYF4yZjfwiaydLwVeM4ZJEmVkib66GtJoE0cr6Dviauw/132","nickname":"小北","note":"","ucode":"A428FC9B771108","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":112669,"discussion_content":"推荐一下 阿里的阿尔萨斯 开源工具\n","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1577877909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":45892,"ip_address":""},"score":112669,"extra":""},{"author":{"id":1032345,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c0/99/259a412f.jpg","nickname":"Geeker","note":"","ucode":"9937127DE96D78","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1120156,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ercic1LB9N9P1kArjS1f3hOo641elcwFGHWrxeYF4yZjfwiaydLwVeM4ZJEmVkib66GtJoE0cr6Dviauw/132","nickname":"小北","note":"","ucode":"A428FC9B771108","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":223265,"discussion_content":"易复现，比如拥有大量周边配套，方便复现测试未覆盖的线上问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586198465,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":45892,"ip_address":""},"score":223265,"extra":""}]}]},{"had_liked":false,"id":147503,"user_name":"burning ‍微信超級會員","can_delete":false,"product_type":"c1","uid":1229789,"ip_address":"","ucode":"6B82995489A2BB","user_header":"https://static001.geekbang.org/account/avatar/00/12/c3/dd/a9ff98e7.jpg","comment_is_top":false,"comment_ctime":1572867174,"is_pvip":false,"discussion_count":8,"race_medal":0,"score":"177666526310","product_id":100039001,"comment_content":"稳定性很重要 尤其在前后端分离开发时。说好了按约定的接口规则开发 可联调时各种出错 甚至接口崩溃报异常。前端成测试了","like_count":41,"discussions":[{"author":{"id":1368038,"avatar":"https://static001.geekbang.org/account/avatar/00/14/df/e6/bd1b3c0b.jpg","nickname":"Jesse","note":"","ucode":"727CA882B84DA0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43942,"discussion_content":"联调时接口崩溃异常，有时候我也会出现这种情况（我写后台的），我总结了一个重要原因，方法的上下限没校验，导致各种参数异常。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1572918149,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1206787,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6a/03/cb597311.jpg","nickname":"远心","note":"","ucode":"1157202C315655","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1368038,"avatar":"https://static001.geekbang.org/account/avatar/00/14/df/e6/bd1b3c0b.jpg","nickname":"Jesse","note":"","ucode":"727CA882B84DA0","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":46575,"discussion_content":"方法的上下限是啥意思？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573183519,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":43942,"ip_address":""},"score":46575,"extra":""},{"author":{"id":1736676,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/7f/e4/60bd025a.jpg","nickname":"FlyW","note":"","ucode":"6F2F7D4385CBD7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1206787,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6a/03/cb597311.jpg","nickname":"远心","note":"","ucode":"1157202C315655","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":47515,"discussion_content":"应该说说极值，比如最大值和最小值","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573356959,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":46575,"ip_address":""},"score":47515,"extra":""},{"author":{"id":1368038,"avatar":"https://static001.geekbang.org/account/avatar/00/14/df/e6/bd1b3c0b.jpg","nickname":"Jesse","note":"","ucode":"727CA882B84DA0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1206787,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6a/03/cb597311.jpg","nickname":"远心","note":"","ucode":"1157202C315655","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":47614,"discussion_content":"方法参数的范围","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573380688,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":46575,"ip_address":""},"score":47614,"extra":""}]},{"author":{"id":1141612,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6b/6c/1e097d82.jpg","nickname":"donglu","note":"","ucode":"427B50B0BCC559","race_medal":2,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43863,"discussion_content":"后端需要自测或者必须要有单元测试","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1572914459,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2032840,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/04/c8/3c7af100.jpg","nickname":"Javatar","note":"","ucode":"E216645CDF632C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297162,"discussion_content":"这个主要是健壮性吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596790125,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1039813,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/dd/c5/9ae99a7f.jpg","nickname":"¾阳光","note":"","ucode":"C67D0E18F6158D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295352,"discussion_content":"边缘case嘛","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596173287,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150396,"user_name":"郑童文","can_delete":false,"product_type":"c1","uid":1030733,"ip_address":"","ucode":"3D193715CB8549","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ba/4d/7ba09ff0.jpg","comment_is_top":false,"comment_ctime":1573527169,"is_pvip":false,"replies":[{"id":"58370","content":"是的，扩展性和可读性有的时候是相冲突的，后面会讲到的。","user_name":"作者回复","comment_id":150396,"uid":"1190123","ip_address":"","utype":1,"ctime":1573789969,"user_name_real":"王争"}],"discussion_count":3,"race_medal":0,"score":"169077251713","product_id":100039001,"comment_content":"个人感觉，有的时候为了提高代码的可扩展性和可复用性 就会抽象出好多的接口，类和方法。 然后代码的简洁性和可读性就降低了。不知道我这样的感觉对不对？请问老师如何看待这个问题？","like_count":39,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474147,"discussion_content":"是的，扩展性和可读性有的时候是相冲突的，后面会讲到的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573789969,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1360712,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c3/48/3a739da6.jpg","nickname":"天草二十六","note":"","ucode":"3165EE3007527B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":216188,"discussion_content":"所以要都知道模式，套路深没关系，关键是大家都懂否","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585408558,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1186089,"avatar":"https://static001.geekbang.org/account/avatar/00/12/19/29/4a8214b7.jpg","nickname":"Bug Killer","note":"","ucode":"2741A206F504E1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":50539,"discussion_content":"我觉得那是为了提高扩展性和后期的可维护性，把大概的逻辑写在抽象层，具体的实现卸载具体的类里面，我觉得是这样。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573733084,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148685,"user_name":"小毅","can_delete":false,"product_type":"c1","uid":1016799,"ip_address":"","ucode":"5651C740D68038","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/hg9Tsg2iaBeG6Q5mxiczjw1ph0OvhKziblEIiaOxg4gwQ0Dgia7Fw7pDQ0mM8AL5SJAm2Yavk1RmBJrFd9jKPBQRkOw/132","comment_is_top":false,"comment_ctime":1573049132,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"134717035308","product_id":100039001,"comment_content":"借用clean code中的标准，code review时WTF&#47;min是最好的评判指标😏<br>个人理解好代码最重要的标准就是可读性，相对于可扩展和灵活，由于很多项目一开始并不清楚后续迭代的方向，过早引入过多的设计，反而会让项目臃肿，可读性特别差，后续反而更不好维护～<br>另外，对于一个team来说，我觉得好代码有一个非常重要的标准就是风格一致性，代码写的像一个人写的那这个team就是真的很厉害","like_count":31,"discussions":[{"author":{"id":1032345,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c0/99/259a412f.jpg","nickname":"Geeker","note":"","ucode":"9937127DE96D78","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":223266,"discussion_content":"看别人写的高端代码也会情不自禁的说一句：“卧槽”୧😂୨","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1586198540,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2884274,"avatar":"","nickname":"Geek_79f317","note":"","ucode":"CE27E7ED63C49C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543968,"discussion_content":"对于前端android 来说，页面通用的和业务没有关系的可以封装服用，基于业务的，越不封装，越好用，后面的修改，基本没有成本","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641368288,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1541022,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/9e/2f4aba1b.jpg","nickname":"thunder","note":"","ucode":"5569DCFFB90F19","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376494,"discussion_content":"这点我深有体会，同一个team写的代码风格各异","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622164534,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1745665,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/a3/01/07190654.jpg","nickname":"Jnnes","note":"","ucode":"23F45CD6AEE838","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":50982,"discussion_content":"赞同","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573796442,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148618,"user_name":"斐波那契","can_delete":false,"product_type":"c1","uid":1464006,"ip_address":"","ucode":"85E2EBC01392B1","user_header":"https://static001.geekbang.org/account/avatar/00/16/56/c6/0b449bc6.jpg","comment_is_top":false,"comment_ctime":1573038868,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"100357286676","product_id":100039001,"comment_content":"在上一家公司提到一个标准 就是写的单元测试不能依赖于环境 不能在你的机子上能跑换到别的机子上就不能跑了 当时项目中跑测试的时候都是直接在内存中创建需要的表 然后把测试用到的数据插入进去然后在一条一条跑","like_count":23},{"had_liked":false,"id":148067,"user_name":"Jackey","can_delete":false,"product_type":"c1","uid":1063751,"ip_address":"","ucode":"125DE81993FEDD","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/47/f6c772a1.jpg","comment_is_top":false,"comment_ctime":1572935726,"is_pvip":false,"discussion_count":9,"race_medal":0,"score":"91767248942","product_id":100039001,"comment_content":"大道至简，一次面试中，我写了半页纸的代码被面试官3行实现的事对我打击很大…","like_count":22,"discussions":[{"author":{"id":1484184,"avatar":"https://static001.geekbang.org/account/avatar/00/16/a5/98/a65ff31a.jpg","nickname":"djfhchdh","note":"","ucode":"E71D75328CE398","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":134920,"discussion_content":"确实gofmt很方便","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579055292,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149096,"user_name":"岁月如歌","can_delete":false,"product_type":"c1","uid":1428828,"ip_address":"","ucode":"1AEBD6F79941B7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/QFE00aXGzaS6ibbfJSJsDrpIkqs0OrIYjzZv6L9vZmMhOlut2j24iaeZb0MCQazToE6FRXN960nNiaTrsmw09YjGw/132","comment_is_top":false,"comment_ctime":1573140406,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"70292617142","product_id":100039001,"comment_content":"我对好代码理解：<br>1、具备统一的代码规范：类、方法、变量命名达意；代码核心逻辑注释清晰；(可以遵循《阿里巴巴 Java开发手册》）<br>2、代码模块分层清晰：类似框架层面controller、service、handler、mapper各司其职。 而在单独的业务开发中也应该借鉴，如争哥说的高内聚、低耦合的特点。<br>3、每个方法代码不易过长，复杂的业务逻辑应该拆分成多个职责单一对方法，进而降低难度，也即保证可读性和灵活性。<br>4、详尽的wiki文档 和 业务主流程图。很多互联网公司最流行的就是“口口相传”，对刚接锅的兄弟简直是场灾难，只能一点点啃代码，极大降低工作效率。<br>5、单元测试junit test。高质量代码必备，该点与第2、第3点是息息相关。个人觉得能写出好的junit test case 才能真正显示码代码功力。<br>","like_count":16,"discussions":[{"author":{"id":1314724,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0f/a4/0b49469f.jpg","nickname":"木子00","note":"","ucode":"8F78CA722EB29B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":277596,"discussion_content":"就是没有规范。所有就根据自己的喜好编码代码了。如果if 确实只有一句话。我也会 携程一行。\n如：  if(max < val) max = val;","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591076825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1698258,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx7FdRzUuQf4Fopr7DOXEHZyCFfH4GQViaqo7bymf1qaANcOvuEhHyTNwOOUFW7psxEeSQ5k9uXWw/132","nickname":"阿顺","note":"","ucode":"36F2AD6F980B11","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":135013,"discussion_content":"有些同事不喜欢加末尾不喜欢加；导致有分号结尾和没分号结尾经过编辑器的format之后格式很不一样，很难受","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579060257,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1738326,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/86/56/509535da.jpg","nickname":"守拙","note":"","ucode":"F594B2DA3F6D4F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":134860,"discussion_content":"一般来说if哪怕只有一行语句,也要加上大括号的.可维护性,可读性都好.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579052697,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147624,"user_name":"赌神很低调","can_delete":false,"product_type":"c1","uid":1168545,"ip_address":"","ucode":"1066778E1EDF26","user_header":"https://static001.geekbang.org/account/avatar/00/11/d4/a1/8bc8e7e1.jpg","comment_is_top":false,"comment_ctime":1572874009,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"65997383449","product_id":100039001,"comment_content":"好代码就像一篇好文章，层次分明，用词贴切，简洁素雅，形象化抽象，脉络化复杂，而且有趣，吸引你通宵看完，然后合上书本，意犹未尽。","like_count":16,"discussions":[{"author":{"id":1711057,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/1b/d1/0c9e20f8.jpg","nickname":"CH0918","note":"","ucode":"DCADD098A62766","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":47654,"discussion_content":"真存在这一的代码吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573386568,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150048,"user_name":"xiong","can_delete":false,"product_type":"c1","uid":1099375,"ip_address":"","ucode":"C1BFD9EF96372F","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/6f/ac3003fa.jpg","comment_is_top":false,"comment_ctime":1573453416,"is_pvip":false,"replies":[{"id":"58376","content":"多去看看开源优秀的代码如何写的，我觉得比较有帮助。","user_name":"作者回复","comment_id":150048,"uid":"1190123","ip_address":"","utype":1,"ctime":1573790477,"user_name_real":"王争"}],"discussion_count":4,"race_medal":0,"score":"61702995560","product_id":100039001,"comment_content":"所在的公司也很少有code review 的流程，所以有时候都无法评估自己写的代码是好还是坏。这种情况该如何去提高自己的code 水平呢？","like_count":14,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474048,"discussion_content":"多去看看开源优秀的代码如何写的，我觉得比较有帮助。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573790477,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1609871,"avatar":"https://static001.geekbang.org/account/avatar/00/18/90/8f/9c691a5f.jpg","nickname":"奔跑的码仔","note":"","ucode":"AB3B02B07B8B8C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295488,"discussion_content":"优秀的代码可以提升自己的代码品味","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596206511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1224708,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZpzZqvib4bzgfFb6Wt7fP2k4wefKYaoPwza1L19UGalddjREELPd6zAjyibdHJ7jxB2xtZmSuJjuA/132","nickname":"seele","note":"","ucode":"1824AA95FF1DF1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":163039,"discussion_content":"java的集大成框架Spring的源码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581043689,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1259613,"avatar":"https://static001.geekbang.org/account/avatar/00/13/38/5d/5b427e60.jpg","nickname":"Miracle","note":"","ucode":"1DF29700FEE22C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49385,"discussion_content":"同感，小公司。没有好代码参考，也没有code review。没法进步","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573574201,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148290,"user_name":"开发小能手","can_delete":false,"product_type":"c1","uid":1107899,"ip_address":"","ucode":"3ED813CBE77009","user_header":"https://static001.geekbang.org/account/avatar/00/10/e7/bb/18eb89fd.jpg","comment_is_top":false,"comment_ctime":1572968763,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"57407543611","product_id":100039001,"comment_content":"我听过最牛逼的一句话：“什么样的代码都能写、这不是工期太紧吗？” 然后旁边的小领导乐呵呵的来一句：“对”。","like_count":13},{"had_liked":false,"id":148555,"user_name":"Michael","can_delete":false,"product_type":"c1","uid":1066768,"ip_address":"","ucode":"BD6908DAA347A4","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/10/c23b2457.jpg","comment_is_top":false,"comment_ctime":1573029936,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"53112637488","product_id":100039001,"comment_content":"高质量的代码就好比讲了一个好故事，编程的本质是沟通。<br>编程是给未来的未知人讲故事，你无法知道将来这个人是谁，他都懂什么，他经历过什么，这个系统将来已经是什么样子了。我们需要在这种无知，缺乏信息的情况下做决定，从千万种把这件事做出来的方法里，选出你觉得最能把这个故事给讲好的那种方式，把故事写下来。编程是一种沟通，沟通是一种艺术，用程序沟通则是一门非常有意思的艺术。 coding is all about the art of communication！","like_count":12,"discussions":[{"author":{"id":1451910,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep3DicN9rHZiblqUmR1icKl5FoSJnibSibkdm2nHaibDwDatI3G9iaib5e7FQ0fJgiahR5VEqLFh8ZQBFmdBzw/132","nickname":"追风少年刘全有","note":"","ucode":"A727759687C963","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":207484,"discussion_content":"编程先是人跟机器的沟通，更高级的是跟未来的未知人沟通","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584500375,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147437,"user_name":"SweetyTang","can_delete":false,"product_type":"c1","uid":1601101,"ip_address":"","ucode":"5EB1431FA66F1D","user_header":"https://static001.geekbang.org/account/avatar/00/18/6e/4d/22de9c0e.jpg","comment_is_top":false,"comment_ctime":1572863901,"is_pvip":false,"replies":[{"id":"57061","content":"是的！","user_name":"作者回复","comment_id":147437,"uid":"1190123","ip_address":"","utype":1,"ctime":1572947802,"user_name_real":"王争"}],"discussion_count":3,"race_medal":0,"score":"53112471453","product_id":100039001,"comment_content":"争哥，好的代码是不是也得考虑错误处理","like_count":12,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473246,"discussion_content":"是的！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572947802,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1240465,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ed/91/1d332031.jpg","nickname":"我能走多远","note":"","ucode":"07DF5D5DADFA3C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43457,"discussion_content":"代码的健壮性","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1572875447,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1601101,"avatar":"https://static001.geekbang.org/account/avatar/00/18/6e/4d/22de9c0e.jpg","nickname":"SweetyTang","note":"","ucode":"5EB1431FA66F1D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43543,"discussion_content":"嗯，就是健壮性，给你点赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572880720,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149310,"user_name":"条","can_delete":false,"product_type":"c1","uid":1203836,"ip_address":"","ucode":"6F8679175256E3","user_header":"https://static001.geekbang.org/account/avatar/00/12/5e/7c/94af3f5e.jpg","comment_is_top":false,"comment_ctime":1573189132,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"44522862092","product_id":100039001,"comment_content":"写代码其实也可以像写故事一样，每个方法就当成一个情节来描述，方法不要太大，想表述的东西也要单一，当然要有个主线，就是主方法，让读代码的人一眼看下去就有了一个大概的了解，知道这段代码大致做了什么，这样阅读起来也会比较愉悦","like_count":10},{"had_liked":false,"id":148300,"user_name":"于留月","can_delete":false,"product_type":"c1","uid":1048918,"ip_address":"","ucode":"DE3516198CF1B2","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/56/03fb63d9.jpg","comment_is_top":false,"comment_ctime":1572970420,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"44522643380","product_id":100039001,"comment_content":"你觉得还有哪些其他的代码评价标准非常重要？<br>健壮性：程序应该具备较强的鲁棒性，极低地线上崩溃率，流畅的应用体验，高并发高承载能力，错误处理：日志上报或者现场恢复等等；<br>安全性：涉及到支付、金融、社交私密信息、商业等领域的安全，及反编译反逆向；<br><br>聊一聊你心目中的好代码是什么样子的？<br><br>除了具备文中提到的7个标准，应该明晰代码的边界，适用场景等。<br>","like_count":10,"discussions":[{"author":{"id":2277251,"avatar":"https://static001.geekbang.org/account/avatar/00/22/bf/83/c83be5a3.jpg","nickname":"eHackyd","note":"","ucode":"E6E7994FBDF0A5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":562679,"discussion_content":"哥，你写的错误处理是属于健壮性里的还是单独的一个标准？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649861860,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149309,"user_name":"天天向上","can_delete":false,"product_type":"c1","uid":1282639,"ip_address":"","ucode":"D0914D4FD82272","user_header":"https://static001.geekbang.org/account/avatar/00/13/92/4f/ff04156a.jpg","comment_is_top":false,"comment_ctime":1573188199,"is_pvip":true,"discussion_count":3,"race_medal":0,"score":"40227893863","product_id":100039001,"comment_content":"代码质量我们团队用的SoanrQube衡量，它有几个指标：可靠性，安全性，可维护性，重复，复杂度。感觉这个平台把同事的代码一扫描就能发现哪些同事代码水平整的高了。","like_count":9,"discussions":[{"author":{"id":1261313,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3f/01/e1f2da41.jpg","nickname":"光裕","note":"","ucode":"1CAD27E16B6D96","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":108289,"discussion_content":"嗯，我们也在用sonar扫。但觉得还得加上code review会更好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577628276,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1282639,"avatar":"https://static001.geekbang.org/account/avatar/00/13/92/4f/ff04156a.jpg","nickname":"天天向上","note":"","ucode":"D0914D4FD82272","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1261313,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3f/01/e1f2da41.jpg","nickname":"光裕","note":"","ucode":"1CAD27E16B6D96","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":406966,"discussion_content":"是的 可以把Sonar扫描结果推送到代码走查平台Gerrit或者Gitlab，方便人工代码走查","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634875286,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":108289,"ip_address":""},"score":406966,"extra":""}]},{"author":{"id":1282639,"avatar":"https://static001.geekbang.org/account/avatar/00/13/92/4f/ff04156a.jpg","nickname":"天天向上","note":"","ucode":"D0914D4FD82272","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":84095,"discussion_content":"更正>Sonarqube","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576487747,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147663,"user_name":"汤小高","can_delete":false,"product_type":"c1","uid":1555565,"ip_address":"","ucode":"D4AB7766273D52","user_header":"https://static001.geekbang.org/account/avatar/00/17/bc/6d/f6f0a442.jpg","comment_is_top":false,"comment_ctime":1572877326,"is_pvip":false,"replies":[{"id":"57051","content":"扩展主要是指添加功能，维护更广些，添加、修改...可读性和可扩展性都影响到代码的可维护性。除此之外，这些判定标准本身就有点重合，文章中也提到了。","user_name":"作者回复","comment_id":147663,"uid":"1190123","ip_address":"","utype":1,"ctime":1572946792,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"40227582990","product_id":100039001,"comment_content":"老师，怎么感觉您说的可维护性和可拓展性是同一个东西，都是让未来修改某个功能，某个bug或者新增功能需求更简单？<br>是不是维护性更针对于现有功能的维护修改，拓展性更针对与未来新增需求的修改？","like_count":9,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473282,"discussion_content":"扩展主要是指添加功能，维护更广些，添加、修改...可读性和可扩展性都影响到代码的可维护性。除此之外，这些判定标准本身就有点重合，文章中也提到了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572946792,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148023,"user_name":"编程界的小学生","can_delete":false,"product_type":"c1","uid":1593289,"ip_address":"","ucode":"4A5BE9A5E877FA","user_header":"https://static001.geekbang.org/account/avatar/00/18/4f/c9/9f51fd27.jpg","comment_is_top":false,"comment_ctime":1572929796,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31637700868","product_id":100039001,"comment_content":"可扩展，可读性，健壮性<br>我认为mybatis做的很到位，小巧简单，功能强大。健壮稳定可扩展。正是有了这么好的代码，才使得有很多框架可以无缝集成进来，比如spring-mybatis，再比如sharding-jdbc","like_count":7},{"had_liked":false,"id":149101,"user_name":"Y024","can_delete":false,"product_type":"c1","uid":1018056,"ip_address":"","ucode":"397126D2E17997","user_header":"https://static001.geekbang.org/account/avatar/00/0f/88/c8/ae476935.jpg","comment_is_top":false,"comment_ctime":1573141123,"is_pvip":true,"replies":[{"id":"57460","content":"你就没认真看 我觉得 说了没量化的标准的","user_name":"作者回复","comment_id":149101,"uid":"1190123","ip_address":"","utype":1,"ctime":1573257447,"user_name_real":"王争"}],"discussion_count":4,"race_medal":2,"score":"27342944899","product_id":100039001,"comment_content":"Day003 02<br>收获金句：“思从深而行从简”。<br>比较遗憾的是，开头讲了好代码的标准太过泛泛而谈，以为会有量化的标准，结果还是没有。","like_count":6,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473735,"discussion_content":"你就没认真看 我觉得 说了没量化的标准的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573257447,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1082785,"avatar":"https://static001.geekbang.org/account/avatar/00/10/85/a1/2442332c.jpg","nickname":"郭俊杰","note":"","ucode":"D328E5738A4413","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":260844,"discussion_content":"google不是有个证书吗?你考过了，你就是标准。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1588907300,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2662969,"avatar":"https://static001.geekbang.org/account/avatar/00/28/a2/39/3ee6f996.jpg","nickname":"You","note":"","ucode":"ACBDB82E9B39C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385746,"discussion_content":"后面有很多编程方法论，都是量化的标准，开篇是为了导学，用简单的语句就能理解其好代码的含义这不香吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627261726,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1115232,"avatar":"https://static001.geekbang.org/account/avatar/00/11/04/60/64d166b6.jpg","nickname":"Fan","note":"","ucode":"3BF28670FD9407","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380842,"discussion_content":"google 这个证书考什么内容？题目是什么呀？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624721833,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":245684,"user_name":"WilliamVector","can_delete":false,"product_type":"c1","uid":1898112,"ip_address":"","ucode":"E0D3C3D4FCB7C9","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f6/80/85ec2c2a.jpg","comment_is_top":false,"comment_ctime":1599026639,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23073863119","product_id":100039001,"comment_content":"【要点】<br>1、如何评价代码质量的高低。我们很难通过某个或某几个词汇来全面的评价代码质量。这些词汇都是从不同维度来说的，并且不同的评价维度也并不是完全独立的，有些具有包含关系、重叠关系或者可以相互影响。对于一段代码的评价常常有很强的主观性，这种主观评价的准确性跟工程师自身经验有很大的关系，越是有经验的工程师，给出的评价也就越准确。<br>2、最常用的评价标准。包括：可维护性、可读性、可扩展性、灵活性、简洁性、可复用性、可测试性。<br>(1)可维护性：所谓的“维护”无外乎就是修改bug、修改老代码、添加新代码之类的工作。所谓的“代码易维护”就是指，在不破坏原有代码设计、不引入新的bug的情况下，能够快速的修改或者添加代码。所谓的“代码不易维护”就是指，修改或者添加代码要冒着极大的引入新bug的风险，并且需要花很长时间才能完成。<br>(2)可阅读性。判断代码是否可读性好，我们需要代码是否符合编码规范、命名是否达意、注释是否想尽、函数是否长短合适、模块划分是否清晰、是否符合高内聚低耦合等等。软件设计大师 Martin Fowler 曾经说过：任何傻瓜都会编写计算机能理解的代码。好的程序员能够编写人能够理解的代码。<br>(3)可扩展性。表示我们的代码应对未来需求变化的能力。跟可读性一样，代码是否易扩展也很大程度上决定了代码是否易维护。代码的可扩展性表示，我们在不修改或少量修改原有代码的情况下，通过扩展的方式添加新的功能代码。<br>(4)灵活性。灵活性一般表现为，当要添加新的代码时，原有代码已经预留好了扩展点，我们不需要修改原有代码，只需要在扩展点上添加新的代码即可。当要实现一个功能的时候，原有代码中已经抽象出了很多底层可复用的模块、类等代码，我们可以拿来直接使用。当使用某组接口的时候，这组接口可以应对各种场景，满足各种不同的需求。<br>(5)简洁性。有一条非常重要的原则，KISS原则：Keep It Simple，Stupid。要尽量保持代码简单。思从深而行从简，真正的高手能云淡风轻的用最简单的方法解决最复杂的问题。这也是编程老手跟编程新手之间的区别。<br>(6)可复用性。可以简单的理解为，尽量减少重复代码的编写，复用已有的代码。是很多设计原则、思想、模式等所要达到的最终效果。另外，代码可复用性跟DIY(Don’t Repeat Yourself)这条设计原则关系也很紧密。<br>(7)可测试性。代码可测试性的好坏，能从侧面上非常准确地反应代码质量的好坏。代码的可测试性差，比较难写单元测试，那基本上就能说明代码设计得有问题。<br>3、如何写出高质量的代码。要想写出易维护、易读、易扩展、灵活、简洁、可服用、可测试的代码，我们需要掌握一些更加细化、更加能落地的编程方法论，包括面向对象设计思想、设计原则、设计模式、编码规范、重构技巧等。而所有这些编程方法论的最终目的都是为了编写出高质量的代码。<br>【思考】<br>我心中的好代码，非Chromium浏览器内核代码莫属，简直就是一件艺术品，阅读这样的源码不仅可以学习各种设计模式、C++语言特性的应用之妙，更能学习到一种高级的品味，一种做到极致的追求。","like_count":5},{"had_liked":false,"id":281866,"user_name":"杨昌业","can_delete":false,"product_type":"c1","uid":2452804,"ip_address":"","ucode":"0F043DA819F975","user_header":"","comment_is_top":false,"comment_ctime":1614929477,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18794798661","product_id":100039001,"comment_content":"可穿越性 , 老员工熟悉-前任员工留下的遗作, 仿佛两个时空的大牛对话","like_count":4},{"had_liked":false,"id":260332,"user_name":"韩梅梅","can_delete":false,"product_type":"c1","uid":2304629,"ip_address":"","ucode":"75F6D1B81807DB","user_header":"https://static001.geekbang.org/account/avatar/00/23/2a/75/001b8038.jpg","comment_is_top":false,"comment_ctime":1604986425,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18784855609","product_id":100039001,"comment_content":"Don&#39;t make me think 别人在阅读你的代码时，不需要思考太久的代码就是好代码","like_count":4},{"had_liked":false,"id":147728,"user_name":"仙道","can_delete":false,"product_type":"c1","uid":1161146,"ip_address":"","ucode":"CF35D34B484B71","user_header":"https://static001.geekbang.org/account/avatar/00/11/b7/ba/ae4cabd8.jpg","comment_is_top":false,"comment_ctime":1572881544,"is_pvip":false,"discussion_count":10,"race_medal":0,"score":"18752750728","product_id":100039001,"comment_content":"我觉得最好是能把注释尽可能的写详细，最好能举几个例子。<br>因为员工之间水平层次不齐，哪怕是再好的代码，在他眼里就是垃圾<br>遇到爱扯皮的同事，真的很难受","like_count":4,"discussions":[{"author":{"id":1102702,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d3/6e/281b85aa.jpg","nickname":"永光","note":"","ucode":"0C54531ABED1B0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45176,"discussion_content":"可读性如果要靠详细的注释，那其实是很危险的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573009570,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44619,"discussion_content":"请看力扣 #7 整数反转，官方解题已经描述的非常详细，但我还是没看懂，因为数学太差。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572959111,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1131687,"avatar":"https://static001.geekbang.org/account/avatar/00/11/44/a7/171c1e86.jpg","nickname":"啦啦啦","note":"","ucode":"6B12EC90A62525","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45325,"discussion_content":"你跑题了吧\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573023432,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":44619,"ip_address":""},"score":45325,"extra":""},{"author":{"id":1134861,"avatar":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","nickname":"James","note":"","ucode":"48B0F2A334D1C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45797,"discussion_content":"每条留言都有你的………","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573087205,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":44619,"ip_address":""},"score":45797,"extra":""},{"author":{"id":1132304,"avatar":"https://static001.geekbang.org/account/avatar/00/11/47/10/2d673601.jpg","nickname":"好饿早知道送外卖了","note":"","ucode":"AED22DB5BF8FC7","race_medal":2,"user_type":1,"is_pvip":false},"reply_author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132514,"discussion_content":"大概这就是教都教不会的类型..","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578914071,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":44619,"ip_address":""},"score":132514,"extra":""}]},{"author":{"id":1356225,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b1/c1/08cc53c0.jpg","nickname":"...","note":"","ucode":"D2E6EBA5E9B6F0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44385,"discussion_content":"见名知其义 是最好的。 需要写注释的地方提成一个函数试试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572945382,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1161146,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b7/ba/ae4cabd8.jpg","nickname":"仙道","note":"","ucode":"CF35D34B484B71","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1356225,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b1/c1/08cc53c0.jpg","nickname":"...","note":"","ucode":"D2E6EBA5E9B6F0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44407,"discussion_content":"我之前一个同事是培训班出来的，真的是杠，我狠怕他","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572946922,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":44385,"ip_address":""},"score":44407,"extra":""},{"author":{"id":1037925,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d6/65/e6abeba2.jpg","nickname":"Persistfanāāā","note":"","ucode":"8C4EF892B7ED27","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1356225,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b1/c1/08cc53c0.jpg","nickname":"...","note":"","ucode":"D2E6EBA5E9B6F0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":46321,"discussion_content":"函数是个好办法，不过如果是单片机的话函数调用太深怕压栈太多崩溃，多种方法并用吧，尽量命名清楚，代码结构清晰，关键地方写点注释。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573140314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":44385,"ip_address":""},"score":46321,"extra":""}]},{"author":{"id":1340563,"avatar":"https://static001.geekbang.org/account/avatar/00/14/74/93/c21f1531.jpg","nickname":"Twinkle","note":"","ucode":"FE1596741E257B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44208,"discussion_content":"有地方说到可读性高到代码是不需要注释的, 哈哈哈哈,但是有时候还是得写,","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572939881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147643,"user_name":"lijun","can_delete":false,"product_type":"c1","uid":1116095,"ip_address":"","ucode":"69EC8B86211AD9","user_header":"https://static001.geekbang.org/account/avatar/00/11/07/bf/49f385ec.jpg","comment_is_top":false,"comment_ctime":1572875797,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"18752744981","product_id":100039001,"comment_content":"Jdk源码和spring源码写的非常棒，可惜目前还看不懂。","like_count":4,"discussions":[{"author":{"id":1959822,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/e7/8e/318cfde0.jpg","nickname":"Spoon","note":"","ucode":"2FF9193AD482C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":358765,"discussion_content":"JDK源码可以深入研究一下AQS，参考一下相关论文","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1616046663,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44614,"discussion_content":"JDK排序、ArrayList实现之类的看一看还是能看懂的。Spring一个启动做了哪些操作，真心看不下去，代码太多了，嵌套的逻辑开始怀疑人生。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1572958985,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":307403,"user_name":"GeekGa","can_delete":false,"product_type":"c1","uid":2716077,"ip_address":"","ucode":"2148DC2EF4B316","user_header":"https://static001.geekbang.org/account/avatar/00/29/71/ad/a6618420.jpg","comment_is_top":false,"comment_ctime":1629084244,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14513986132","product_id":100039001,"comment_content":"听得我热血沸腾，反手打开VS,看了一眼代码然后回来了","like_count":3},{"had_liked":false,"id":150583,"user_name":"qqq","can_delete":false,"product_type":"c1","uid":1006786,"ip_address":"","ucode":"91B0ACF8CBE7BD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/c2/8ffd2ad0.jpg","comment_is_top":false,"comment_ctime":1573562791,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"14458464679","product_id":100039001,"comment_content":"Clean code always looks like it was written by someone who cares. - Michael Feathers","like_count":3},{"had_liked":false,"id":148560,"user_name":"攀登者","can_delete":false,"product_type":"c1","uid":1074549,"ip_address":"","ucode":"FC26A8AC504C5E","user_header":"https://static001.geekbang.org/account/avatar/00/10/65/75/9c0b9b5b.jpg","comment_is_top":false,"comment_ctime":1573031063,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14457932951","product_id":100039001,"comment_content":"20191106 看完代码后，心里默默的说真NB，就是好代码","like_count":3},{"had_liked":false,"id":147825,"user_name":"我能走多远","can_delete":false,"product_type":"c1","uid":1240465,"ip_address":"","ucode":"07DF5D5DADFA3C","user_header":"https://static001.geekbang.org/account/avatar/00/12/ed/91/1d332031.jpg","comment_is_top":false,"comment_ctime":1572911637,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14457813525","product_id":100039001,"comment_content":"代码健壮性-异常场景的处理。代码可维护性还包含日志记录。可定位性。","like_count":3},{"had_liked":false,"id":147551,"user_name":"爱吃彩虹糖的猫~","can_delete":false,"product_type":"c1","uid":1261108,"ip_address":"","ucode":"9EC7A8FD4B7DB1","user_header":"https://static001.geekbang.org/account/avatar/00/13/3e/34/dd0a3c61.jpg","comment_is_top":false,"comment_ctime":1572869455,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14457771343","product_id":100039001,"comment_content":"001 如何评价代码质量的高低？<br>代码质量的评价有很强的主观性，描述代码质量的词汇也有很多，比如可读性、可维护性、灵活、优雅、简洁等。<br>002 常用的评价标准<br>可维护性、可读性、可扩展性、灵活性、简洁性、可复用性、可测试性。<br>003 如何才能写出高质量的代码？<br>需要掌握一些更加细化、更加能落地的编程方法论，这就包含面向对象设计思想、设计原则、设计模式、编码规范、重构技巧等等<br>","like_count":3},{"had_liked":false,"id":279538,"user_name":"Kuris_01🦖","can_delete":false,"product_type":"c1","uid":2391763,"ip_address":"","ucode":"DE346E0FA7EC7D","user_header":"https://static001.geekbang.org/account/avatar/00/24/7e/d3/0e85f07c.jpg","comment_is_top":false,"comment_ctime":1613813314,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10203747906","product_id":100039001,"comment_content":"个人理解：好代码就是离职后接手我代码的同学不会感到头痛。","like_count":2},{"had_liked":false,"id":273453,"user_name":"刘立嘉","can_delete":false,"product_type":"c1","uid":2414637,"ip_address":"","ucode":"1241140EBE7FE3","user_header":"https://static001.geekbang.org/account/avatar/00/24/d8/2d/6ec3760c.jpg","comment_is_top":false,"comment_ctime":1610600235,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10200534827","product_id":100039001,"comment_content":"如果是单枪匹马写一个程序，那可读性也就不那么重要，反正都是自己在看，如果是团队做项目，共享代码，共同提交，那么，可读性很重要，至少要让你的团队成员看地懂，理解。","like_count":2},{"had_liked":false,"id":210168,"user_name":"track6688","can_delete":false,"product_type":"c1","uid":1088040,"ip_address":"","ucode":"0A9E893F8FD379","user_header":"https://static001.geekbang.org/account/avatar/00/10/9a/28/03613c22.jpg","comment_is_top":false,"comment_ctime":1587693638,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10177628230","product_id":100039001,"comment_content":"找了最近写的一些代码，对着这些标准来思考了一下，发现质量还真是有点差吖！","like_count":2},{"had_liked":false,"id":156338,"user_name":"未来的胡先森","can_delete":false,"product_type":"c1","uid":1234682,"ip_address":"","ucode":"AFF193AC0E2E6C","user_header":"https://static001.geekbang.org/account/avatar/00/12/d6/fa/1f5bf642.jpg","comment_is_top":false,"comment_ctime":1574858736,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10164793328","product_id":100039001,"comment_content":"最近的工作中，老板提了一些关于好的代码的判断：<br>1、高可靠。例如，在数据库崩溃时服务是否依旧能够正常运行。<br>2、安全。对于常见的 SQL 注入、XSS 等是否有做防御。<br>3、高并发。能否满足百万级、千万级 QPS。","like_count":2,"discussions":[{"author":{"id":1116862,"avatar":"","nickname":"leior","note":"","ucode":"82AEBD0D254362","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":143123,"discussion_content":"感觉这个更像是好的架构的要求","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579491200,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1603271,"avatar":"","nickname":"Geek_f3a3d1","note":"","ucode":"E15FA1C3AB3174","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":110888,"discussion_content":"代码具有安全性，又考虑到安全方面。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577762569,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154655,"user_name":"ZengTudou","can_delete":false,"product_type":"c1","uid":1370064,"ip_address":"","ucode":"6F76C977C4E093","user_header":"https://static001.geekbang.org/account/avatar/00/14/e7/d0/2a9b3208.jpg","comment_is_top":false,"comment_ctime":1574501409,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10164436001","product_id":100039001,"comment_content":"笔记<br>自己以前都是瞎几把写代码，当然看了一些大牛写的代码，确实感觉别人的代码牛逼，但确确实实不知道该如何评价。也知道一些评价的名词，说实话，在看这篇博客之前，这些名词的具体含义是什么还真不是那么清楚的。读了这篇文章之后我至少知道了代码的一些评价标准，虽然这个事情本来也是很主观的<br>可维护性:在保留原有的设计，不加入新的bug的前提下，能够写入或者修改代码。<br>可读性:这个就更主观了，这个还是得多做code review才知道，最基本的是，是否编码规范，类名是否合理，类的设计是否合理，接口是否合理等等。<br>可拓展性:是否留有接口让新的功能加入，这个是比较重要的。<br>可读性和可拓展性会影响可维护性。<br>灵活性:一般来说，接口是否能够在功能需求改变的情况下继续使用等。<br>简洁性:我觉得越简单的代码越难写，因为当需求越难实现，代码就会越多，如果还能做到简洁，那么就是好代码了。<br>可复用性:这个就比较好理解了，没有太多重复的代码。","like_count":2},{"had_liked":false,"id":150043,"user_name":"张驰","can_delete":false,"product_type":"c1","uid":1080050,"ip_address":"","ucode":"0ED97C2FCE6599","user_header":"https://static001.geekbang.org/account/avatar/00/10/7a/f2/6770d0a9.jpg","comment_is_top":false,"comment_ctime":1573452332,"is_pvip":false,"replies":[{"id":"58377","content":"抽空写篇文章说说吧","user_name":"作者回复","comment_id":150043,"uid":"1190123","ip_address":"","utype":1,"ctime":1573790507,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"10163386924","product_id":100039001,"comment_content":"老师是否可以提供下，您日常工作中CR环节的一些标准呢。目前团队内对代码质量的把控能力一般，CR环节也是最近开始强制执行的，以前都没有，但是整个CR过程有点生搬硬套一些标准了，比如单测覆盖率、编码规范等，这些都比较初级，想了解下google都是如何做CR的。","like_count":2,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474046,"discussion_content":"抽空写篇文章说说吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573790507,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149397,"user_name":"桃翁","can_delete":false,"product_type":"c1","uid":1044036,"ip_address":"","ucode":"CB438AF450DC00","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/44/26ac883e.jpg","comment_is_top":false,"comment_ctime":1573210988,"is_pvip":false,"replies":[{"id":"57455","content":"可以看下我之前写的这篇文章<br>https:&#47;&#47;mp.weixin.qq.com&#47;s&#47;Wv5kNmRBY2ZurFq7Rxv6Kw","user_name":"作者回复","comment_id":149397,"uid":"1190123","ip_address":"","utype":1,"ctime":1573253634,"user_name_real":"王争"}],"discussion_count":3,"race_medal":0,"score":"10163145580","product_id":100039001,"comment_content":"老师，对于更好的写出可测试性的代码TDD我觉得是一种非常好的方式，测试在前必然写出来的代码易于测试，但是写测试用例往往会占用很多的时间，请问老师你是如何看待TDD的？","like_count":2,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473849,"discussion_content":"可以看下我之前写的这篇文章\nhttps://mp.weixin.qq.com/s/Wv5kNmRBY2ZurFq7Rxv6Kw","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573253634,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1139738,"avatar":"https://static001.geekbang.org/account/avatar/00/11/64/1a/bb797b99.jpg","nickname":"Michael翔","note":"","ucode":"1229ACC823DA02","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335055,"discussion_content":"该内容已被发布者删除……","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1608082954,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1115232,"avatar":"https://static001.geekbang.org/account/avatar/00/11/04/60/64d166b6.jpg","nickname":"Fan","note":"","ucode":"3BF28670FD9407","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380843,"discussion_content":"该内容已被发布者删除…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624721880,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149314,"user_name":"Tiger","can_delete":false,"product_type":"c1","uid":1284857,"ip_address":"","ucode":"6F9CAB3C29BAD7","user_header":"https://static001.geekbang.org/account/avatar/00/13/9a/f9/6d55ee0b.jpg","comment_is_top":false,"comment_ctime":1573190103,"is_pvip":false,"replies":[{"id":"57457","content":"是的 说的没错 但也不能一概而论 专栏后面会讲到 别急","user_name":"作者回复","comment_id":149314,"uid":"1190123","ip_address":"","utype":1,"ctime":1573254108,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"10163124695","product_id":100039001,"comment_content":"一直有个疑问，很多人都说一开始写代码尽量不要用设计模式，避免过度设计。要根据业务的发展和当前的场景进行重构代码时再考虑用设计模式。真是这样的吗？","like_count":2,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473812,"discussion_content":"是的 说的没错 但也不能一概而论 专栏后面会讲到 别急","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573254108,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148990,"user_name":"YourSweetHeart","can_delete":false,"product_type":"c1","uid":1242122,"ip_address":"","ucode":"38843F447B03F2","user_header":"https://static001.geekbang.org/account/avatar/00/12/f4/0a/cf728857.jpg","comment_is_top":false,"comment_ctime":1573122959,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"10163057551","product_id":100039001,"comment_content":"我觉得好代码是这样的，<br>摘掉眼镜，离开屏幕5米，如果映入眼帘的是一行行有序，整齐有层次的代码，就是好代码","like_count":2,"discussions":[{"author":{"id":1746552,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/a6/78/d79be6fc.jpg","nickname":"hudson","note":"","ucode":"55D28AD8714D90","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":51276,"discussion_content":"缩进搞好就可以达到这个效果了","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1573830591,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1198685,"avatar":"https://static001.geekbang.org/account/avatar/00/12/4a/5d/ef93cec4.jpg","nickname":"apibrain","note":"","ucode":"0C6F706C0A8113","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":47300,"discussion_content":"那是视力好。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573310340,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1102484,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d2/94/c804f9a9.jpg","nickname":"木桑苏","note":"","ucode":"ACD493FFB8DFF7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48204,"discussion_content":"我觉得是因为format了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573462253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147949,"user_name":"you-aholic","can_delete":false,"product_type":"c1","uid":1499363,"ip_address":"","ucode":"E346825EC3AA53","user_header":"https://static001.geekbang.org/account/avatar/00/16/e0/e3/31a250ce.jpg","comment_is_top":false,"comment_ctime":1572921276,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10162855868","product_id":100039001,"comment_content":"老师已经总结的非常详细了。我能想到的评判代码的另一个标准就是，能否从代码中看出来作者对代码的思考。相比那些“能用的代码”好代码一定会体现出作者的思考和心思。当开始酝酿那些原本闭着眼睛都能写出来的代码时，离写出好代码就更近了一步。","like_count":2,"discussions":[{"author":{"id":1032345,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c0/99/259a412f.jpg","nickname":"Geeker","note":"","ucode":"9937127DE96D78","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":223267,"discussion_content":"易推测性？让代码保持该有的样子😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586198794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147815,"user_name":"zcdll","can_delete":false,"product_type":"c1","uid":1004086,"ip_address":"","ucode":"F1F20EB17D8789","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/36/18f5d218.jpg","comment_is_top":false,"comment_ctime":1572910302,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10162844894","product_id":100039001,"comment_content":"自己的感觉，概括来说，就是 现在 写的代码，要让自己以及别人在 以后 能够继续维护，不能一锤子买卖，写完上线就算了。在此至上，能写出更优雅的代码。","like_count":2},{"had_liked":false,"id":147768,"user_name":"Yayu","can_delete":false,"product_type":"c1","uid":1058015,"ip_address":"","ucode":"5E7842458D8229","user_header":"https://static001.geekbang.org/account/avatar/00/10/24/df/645f8087.jpg","comment_is_top":false,"comment_ctime":1572884794,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10162819386","product_id":100039001,"comment_content":"希望王争老师讲解套路时尽量避免语言耦合，热切盼望举例部分可以像『数据结构和算法』课程中的实例一样，出据不同语言的解法，毕竟语言不同最佳实现方式还是不一样的。当然我也会在自己擅长的语言部分提交实现代码，参与到刻意练习的活动中。加油💪","like_count":2},{"had_liked":false,"id":267488,"user_name":"Geek_652490","can_delete":false,"product_type":"c1","uid":1817165,"ip_address":"","ucode":"0612EE1FD02AF1","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/0qP9dQyibmPu1JUAan9bXEXZBAaOetRStstIcQDXZUFdU9jHb5W3RlNfCBI0kVkZzZTf6NbXwSY4IQqOsVSNQibw/132","comment_is_top":false,"comment_ctime":1607765673,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5902732969","product_id":100039001,"comment_content":"可读性肥肠重要啊！！！<br>拿到一份代码，无论你要做些什么，阅读总是第一部。","like_count":1},{"had_liked":false,"id":208572,"user_name":"naku","can_delete":false,"product_type":"c1","uid":1528610,"ip_address":"","ucode":"B49EF5B5B38400","user_header":"https://static001.geekbang.org/account/avatar/00/17/53/22/cce9a2e5.jpg","comment_is_top":false,"comment_ctime":1587384469,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5882351765","product_id":100039001,"comment_content":"不多比比，大有孙子兵法第一篇的感觉","like_count":1},{"had_liked":false,"id":198011,"user_name":"郭强","can_delete":false,"product_type":"c1","uid":1192928,"ip_address":"","ucode":"38F36F0F4CC775","user_header":"https://static001.geekbang.org/account/avatar/00/12/33/e0/387ab6fd.jpg","comment_is_top":false,"comment_ctime":1585406648,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5880373944","product_id":100039001,"comment_content":"不同的项目，代码质量的着重点不同。我们公司是一个小型互联网教育公司，从事轻课程在线学习与答题，招生引流等10几款h5应用。其中有很多快速试错产品，对于这种项目我认为最重要的是简洁性和可读性。如果是可能会在未来重构，应该是可读性最重要。如果是维护项目，可读性，可维护性，可扩展性最重要。","like_count":1},{"had_liked":false,"id":164086,"user_name":"攻城狮Ra","can_delete":false,"product_type":"c1","uid":1681051,"ip_address":"","ucode":"4D6F97A6481166","user_header":"https://static001.geekbang.org/account/avatar/00/19/a6/9b/20b9fce3.jpg","comment_is_top":false,"comment_ctime":1576856787,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5871824083","product_id":100039001,"comment_content":"可维护性、可读性、可扩展性、灵活性、简洁性（简单、复杂）、可复用性、可测试性是很重要。最近在做报表，由于是多X轴Y轴的，对于坐标轴定义出现了重复的地方就在想设计一个CSS选择器，通过调用选择器来使用重复属性，增加代码可复用性。在此过程总是把问题想复杂，在跟同事交流之后发现往往可以用简单的方式解决","like_count":1},{"had_liked":false,"id":163631,"user_name":"明月几时","can_delete":false,"product_type":"c1","uid":1675716,"ip_address":"","ucode":"E46C844EAB2CD0","user_header":"https://static001.geekbang.org/account/avatar/00/19/91/c4/bcdcda65.jpg","comment_is_top":false,"comment_ctime":1576757483,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5871724779","product_id":100039001,"comment_content":"在我的大学里有一门课，叫做《软件体系结构》，印象中里面讲述的就是各种各样的软件体系结构，其中还有对软件的评价分析。从王争老师讲解中，我似乎又回到了当时上课的时候，当然在当时我却没有认真地去学习，也成为了现在的一个遗憾。<br>王争老师所讲的这些评价标准和当时我学习的软件体系结构中对软件的评析分析有很多很相似的评价指标；可维护性、可扩展性、可测试性、高内聚低耦合，安全性、易用性等等这些都在里面有所体现。这就让我觉得，其实很多知识都是相通的，在我们所处的计算机这个行业中，每个课程都能看到其他课程的一些影子，所以学习好一门基础学科，然后学习其他的内容会更加容易些，到最后不管学习什么都会变得非常容易了！","like_count":1},{"had_liked":false,"id":157527,"user_name":"亚伦碎语","can_delete":false,"product_type":"c1","uid":1014505,"ip_address":"","ucode":"F32E5E1B63CC90","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7a/e9/da5c0203.jpg","comment_is_top":false,"comment_ctime":1575186568,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5870153864","product_id":100039001,"comment_content":"部署一个最基本的前提，要正确的实现需求","like_count":1},{"had_liked":false,"id":149726,"user_name":"join","can_delete":false,"product_type":"c1","uid":1130132,"ip_address":"","ucode":"C097D89F7BA3EF","user_header":"https://static001.geekbang.org/account/avatar/00/11/3e/94/c6460883.jpg","comment_is_top":false,"comment_ctime":1573355197,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5868322493","product_id":100039001,"comment_content":"我觉得好的代码：<br>1. 可读性好，包括代码本身的可读性和注释的可读性，代码和注释都要写好，这样别人在接手你的代码时会感觉很舒服。<br>2. 不要有超常的方法或者类，代码行数要有限制，不要太过臃肿，如果代码行数过多则一定要拆分方法或者类，然后进行组合调用。  <br>3. 性能好，写代码时要吝啬计算机资源，写出高性能的代码  <br><br>总结：<br>1. 可维护性  <br>    代码易读性好，好改，不会由于改动旧的逻辑而容易引发新的bug。    <br>2. 可扩展性  <br>  “对修改关闭，对扩展开放”，代码预留了扩展点，增加新功能时不需要大动干戈改动现有代码。    <br>3. 灵活性  <br>4. 简洁性  <br>  KISS原则——“Keep it Simple,Stupid”——让代码保持简单。  <br>  不要为了用“设计模式”而用设计模式。  <br>  用最简单的方式解决最复杂的问题。  <br>5. 可复用性  <br>  DRP原则——Don&#39;t Reeat Yourself  <br>  继承、多态、解耦、高内聚、模块化等都是为了提高可复用性。<br>6. 可测试性  <br>  比如“容易些单元测试”等  <br><br>","like_count":1},{"had_liked":false,"id":149590,"user_name":"enjoylearning","can_delete":false,"product_type":"c1","uid":1000237,"ip_address":"","ucode":"DCAF8538DEA277","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/2d/af86d73f.jpg","comment_is_top":false,"comment_ctime":1573285806,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5868253102","product_id":100039001,"comment_content":"感觉作者已经总结的很全面了","like_count":1},{"had_liked":false,"id":148743,"user_name":"Fun","can_delete":false,"product_type":"c1","uid":1145502,"ip_address":"","ucode":"5D89BA4C678785","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJdUGdEj3R25CrYqibPibYibibRicqUfyL4aTTPbMagyywjKMhXGZE37RTe7lEdvC4DibvtYpzg8zXvt9HQ/132","comment_is_top":false,"comment_ctime":1573062643,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5868029939","product_id":100039001,"comment_content":"# day3.<br>中心思想：怎样的代码算的上好代码。<br>涉及到评价好代码的几个非常重要的评价维度：简洁易读，可维护，可扩展，可测试，灵活复用（按我个人理解的重要性排序）。其中，每个维度都不可能单独存在，几乎可以认为都是强相关。<br>以我个人理解，几个评价维度的本质，就是代码虽然运行在计算机上，但代码本身终究是为人服务。这个服务的要点在于，能被人轻松阅读理解，能被人愉快修改不出错，其实，也就仅此而已了。<br>于是，为了好代码的这个本质，我们产生了各种方法论，包括但不限于设计思想，方法，模式，规范，重构技巧等等…<br>最后，金句：<br>&gt; 思从深而行从简，真正的高手能云淡风轻地用最简单的方法解决最复杂的问题。","like_count":1},{"had_liked":false,"id":148611,"user_name":"熊斌","can_delete":false,"product_type":"c1","uid":1026280,"ip_address":"","ucode":"24D0C32F397113","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a8/e8/bc84c47d.jpg","comment_is_top":false,"comment_ctime":1573038100,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5868005396","product_id":100039001,"comment_content":"评价代码好坏的常用标准：<br><br>代码质量的评价有很强的主观性。<br><br>1. 可维护性（maintainability)<br>    我们开发的系统大多是在金融和保险领域，业务场景复杂度很高。功能上线后除了BUG，还会有很多新的需求，可维护性对于我们而言就是解决BUG和新增功能时的影响范围尽可能小，新功能添加时不是通过类似在原分支上面住家 if-else这样的代码实现。<br>    <br>2、可读性（readability）<br>      如果要做到这一点，需要在写代码之前让大家达成共识，比如遵循业界统一的标准，编写codetemplates作为统一模板。另外通过自动化代码检查工具等手段来约束程序员，让写出来的代码更规范，可读性更高。<br><br>3. 可扩展性（extensibilty）<br>   这一点我觉得可以想象成电脑连接外设的接口，如果我买了一个外设，是否能够有接口支持“一插即用”？<br><br>4、灵活性（flexibility）<br>     接口易于扩展、有开箱即用的组件、能在不改变现有逻辑得情况下应对复杂的业务场景。<br><br>5、简洁性（simplity）<br>     &quot;Keep it simple stupid&quot;,<br>      思从深、行从简<br><br>6、可复用性（reusability）<br>     具体实践中就是在项目中实现某个功能做到以下两点：<br> 6.1、先去类库中去找“轮子”，不要闭门造车；<br> 6.2、将业务共通部分进行抽象，做成“轮子”供大家使用<br><br> 7、可测试性（testability）<br>完成功能点后，很容易做单元测试。<br><br>另外补充一点<br>8、安全性<br>    任正非在 给全体员工的公开信《全面提升软件工程能力与实践，打造可信的高质量产品》中说：”在确保可信的前提下，要在性能、功能、扩展性等方面做好权衡；慎重地定义我们的模块与接口，真正做到高内聚与低耦合；我们要遵循权限和攻击面最小化等安全设计原则，科学设计模块之间的隔离与接口，提升安全性；“。","like_count":1},{"had_liked":false,"id":148182,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1572955307,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5867922603","product_id":100039001,"comment_content":"个人认为可维护性，易读性，简单，可测试性更重要些。今天这七种评价原则之间有时候没有那么明显的界限。","like_count":1},{"had_liked":false,"id":147567,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1572870499,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5867837795","product_id":100039001,"comment_content":"大佬把我一直强调但又说不好的东西，捋得明明白白。优秀。<br><br><br>回答问题：<br>1.日志（我给自己的标准是，仅看这块业务的所有日志，就能看明白所有逻辑动向）。<br>2.安全性<br>3.异常流处理","like_count":1},{"had_liked":false,"id":147524,"user_name":"moqifei","can_delete":false,"product_type":"c1","uid":1358410,"ip_address":"","ucode":"E0A6C858B78A3A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLGovXf8jNP5ZqHsDKLwajjicbFwpX9on1xiaJDR4CgWaWP2KcfOdneasBfKFo3dO3dwQyGG6WjK40w/132","comment_is_top":false,"comment_ctime":1572868100,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5867835396","product_id":100039001,"comment_content":"《重构》中用坏味道来描述代码，一言以蔽之，高质量的代码没有坏味道。","like_count":1},{"had_liked":false,"id":356524,"user_name":"徐李","can_delete":false,"product_type":"c1","uid":1213325,"ip_address":"浙江","ucode":"41550F6CA1E112","user_header":"https://static001.geekbang.org/account/avatar/00/12/83/8d/03cac826.jpg","comment_is_top":false,"comment_ctime":1662380151,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1662380151","product_id":100039001,"comment_content":"个人理解：可读性排在第一位，写出来的代码大多时候都是被读的。可维护性，别人要好还。可扩展性，在有新功能增加的时候，易于扩展。<br>简洁，优雅，灵活，可复用，总体这七个吧！其实感觉意思上是有重叠，没有百分百明确的界限！","like_count":0},{"had_liked":false,"id":355871,"user_name":"Stay_Gold","can_delete":false,"product_type":"c1","uid":1119904,"ip_address":"北京","ucode":"ACB8DCD2EF8F95","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJRCtuJkpyy2NTTABPFibg2k9tZscOOKx9wu80a85d5HspCorO9Nibj7Z7q9v1icPTVm5ia52r0RCzEaA/132","comment_is_top":false,"comment_ctime":1661822057,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661822057","product_id":100039001,"comment_content":"感觉作者已经总结得很好了。<br>我自己就在下面再写一遍加深自己的印象。<br>1.可维护性：可维护性是一个大的概念，我自己的理解是可以使代码很好的活下去。<br>2.可读性：能让自己或者其他人快速的明白自己写的代码意图，让代码本身也是可自述的。可读是代码作为代码的基本属性之一，不可读的代码可以说是无用的代码。<br>3.可扩展性：有新需求或者新业务的时候能在不改动或者很少改动原来代码情况下去快速准确的实现。<br>4.灵活性：灵活性也是一个大的说法。想扩展的时候可以方便扩展，新增功能的时候有很多可以复用的功能点，一个功能能覆盖多个业务场景。。。上面的都是灵活性的体现。<br>5.简洁：就像写文章一样，三流的作家用复杂的文字描述简单的事情。一流的作家用简练的文字描述复杂的事情。简练是天才的姐妹。<br>6.可复用性：可复用性贯穿于代码的整个生命周期，可复用性在很大程度上面降低了代码的维护成本同时也大大降低了代码的复杂度。<br>7.可测试性：代码是人写的，是人就可能犯错。所以需要一套机制来检查人是否犯错。有了良好的测试之后，我们也才能更加放心大胆的重构自己的代码。<br>上面说的很多点，其实不是互相独立的，而是互相之间有很多融合的点的。是站在不同的维度，来说明良好代码的点的。","like_count":0},{"had_liked":false,"id":355254,"user_name":"秃然","can_delete":false,"product_type":"c1","uid":2074711,"ip_address":"广东","ucode":"00AF15893E30DC","user_header":"https://static001.geekbang.org/account/avatar/00/1f/a8/57/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1661227202,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661227202","product_id":100039001,"comment_content":"喜欢炫技的工程师大有人在","like_count":0,"discussions":[{"author":{"id":1115128,"avatar":"https://static001.geekbang.org/account/avatar/00/11/03/f8/f98df0a7.jpg","nickname":"vaccywen","note":"","ucode":"077FDB50831921","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285722,"discussion_content":"万万没想到，这个假期有点长","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1592920381,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1228518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/be/e6/7808520d.jpg","nickname":"Edward Lee","note":"","ucode":"156223F1D7E94A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":181366,"discussion_content":"却万万没想到放假到3月份","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1582365395,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1133194,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4a/8a/c1069412.jpg","nickname":"makermade","note":"","ucode":"03386B90CB8F20","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":226541,"discussion_content":"哈哈哈，开工没","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586435908,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1258674,"avatar":"https://static001.geekbang.org/account/avatar/00/13/34/b2/1e593de7.jpg","nickname":"QFann","note":"","ucode":"910DD5C907E347","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138198,"discussion_content":"24号放假的我投来了羡慕的目光！！！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1579228054,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1484184,"avatar":"https://static001.geekbang.org/account/avatar/00/16/a5/98/a65ff31a.jpg","nickname":"djfhchdh","note":"","ucode":"E71D75328CE398","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138132,"discussion_content":"不看最后一句，以为是退休了呢","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1579225331,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1362631,"avatar":"https://static001.geekbang.org/account/avatar/00/14/ca/c7/00e544c2.jpg","nickname":"黄林晴","note":"","ucode":"B15C38AECDA88F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1484184,"avatar":"https://static001.geekbang.org/account/avatar/00/16/a5/98/a65ff31a.jpg","nickname":"djfhchdh","note":"","ucode":"E71D75328CE398","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138188,"discussion_content":"😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579227352,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":138132,"ip_address":""},"score":138188,"extra":""}]},{"author":{"id":1045577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f4/49/2add4f6b.jpg","nickname":"北极的大企鹅","note":"","ucode":"8935346D08E109","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376518,"discussion_content":"明天周末了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622172117,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1310192,"avatar":"https://static001.geekbang.org/account/avatar/00/13/fd/f0/67ed878c.jpg","nickname":"拙言","note":"","ucode":"40179CFED35579","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":175685,"discussion_content":"都是上班开始来争哥这里打卡。哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581989890,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015483,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7e/bb/947c329a.jpg","nickname":"程序员小跃","note":"","ucode":"25BB96E0791A60","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":141474,"discussion_content":"我怀疑你是来招人的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579423151,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1362631,"avatar":"https://static001.geekbang.org/account/avatar/00/14/ca/c7/00e544c2.jpg","nickname":"黄林晴","note":"","ucode":"B15C38AECDA88F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1015483,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7e/bb/947c329a.jpg","nickname":"程序员小跃","note":"","ucode":"25BB96E0791A60","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":141623,"discussion_content":"哈哈哈\n我是打工的\n哪有那个资格招人\n坐标合肥 感兴趣的可以内推\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579434780,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":141474,"ip_address":""},"score":141623,"extra":""},{"author":{"id":1015483,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7e/bb/947c329a.jpg","nickname":"程序员小跃","note":"","ucode":"25BB96E0791A60","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1362631,"avatar":"https://static001.geekbang.org/account/avatar/00/14/ca/c7/00e544c2.jpg","nickname":"黄林晴","note":"","ucode":"B15C38AECDA88F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":147821,"discussion_content":"哈哈，太远了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579676771,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":141623,"ip_address":""},"score":147821,"extra":""}]},{"author":{"id":1161271,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b8/37/98991aeb.jpg","nickname":"不似旧日","note":"","ucode":"DF4C5E3AB9570C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":141224,"discussion_content":"卧槽我要上到23号","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579403614,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1211223,"avatar":"https://static001.geekbang.org/account/avatar/00/12/7b/57/a9b04544.jpg","nickname":"QQ怪","note":"","ucode":"1A39B8433D9208","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138219,"discussion_content":"我也是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579229514,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1457464,"avatar":"https://static001.geekbang.org/account/avatar/00/16/3d/38/6f02a4b9.jpg","nickname":"your problem？","note":"","ucode":"6E096E7958CFD7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138197,"discussion_content":"？？？我们还要上到20号，烦死了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579228003,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065849,"avatar":"https://static001.geekbang.org/account/avatar/00/10/43/79/18073134.jpg","nickname":"test","note":"","ucode":"9A4973E591DD12","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138010,"discussion_content":"这是什么神仙公司","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579222462,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1362631,"avatar":"https://static001.geekbang.org/account/avatar/00/14/ca/c7/00e544c2.jpg","nickname":"黄林晴","note":"","ucode":"B15C38AECDA88F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1065849,"avatar":"https://static001.geekbang.org/account/avatar/00/10/43/79/18073134.jpg","nickname":"test","note":"","ucode":"9A4973E591DD12","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138190,"discussion_content":"现在放假 元宵节之后上班😉","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1579227386,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":138010,"ip_address":""},"score":138190,"extra":""}]},{"author":{"id":1241770,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f2/aa/32fc0d54.jpg","nickname":"失火的夏天","note":"","ucode":"10C6E66EB2A65F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138002,"discussion_content":"我怀疑你和我在一家公司😅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579222113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1362631,"avatar":"https://static001.geekbang.org/account/avatar/00/14/ca/c7/00e544c2.jpg","nickname":"黄林晴","note":"","ucode":"B15C38AECDA88F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1241770,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f2/aa/32fc0d54.jpg","nickname":"失火的夏天","note":"","ucode":"10C6E66EB2A65F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138186,"discussion_content":"大声的告诉我你公司的缩写","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579227328,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":138002,"ip_address":""},"score":138186,"extra":""},{"author":{"id":1241770,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f2/aa/32fc0d54.jpg","nickname":"失火的夏天","note":"","ucode":"10C6E66EB2A65F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1362631,"avatar":"https://static001.geekbang.org/account/avatar/00/14/ca/c7/00e544c2.jpg","nickname":"黄林晴","note":"","ucode":"B15C38AECDA88F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138619,"discussion_content":"你是元宵之后上班，那肯定就不和我在一家了，哈哈😄。公司缩写yyyc","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579256712,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":138186,"ip_address":""},"score":138619,"extra":""}]},{"author":{"id":1385377,"avatar":"https://static001.geekbang.org/account/avatar/00/15/23/a1/b08f3ee7.jpg","nickname":"何妨","note":"","ucode":"EC3983BFF7992A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":137971,"discussion_content":"今天上午最后一天，就放假了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579221081,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1362631,"avatar":"https://static001.geekbang.org/account/avatar/00/14/ca/c7/00e544c2.jpg","nickname":"黄林晴","note":"","ucode":"B15C38AECDA88F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1385377,"avatar":"https://static001.geekbang.org/account/avatar/00/15/23/a1/b08f3ee7.jpg","nickname":"何妨","note":"","ucode":"EC3983BFF7992A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138187,"discussion_content":"一起玩耍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579227341,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":137971,"ip_address":""},"score":138187,"extra":""}]},{"author":{"id":1237655,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e2/97/dfadcc92.jpg","nickname":"Kang","note":"","ucode":"088A8DA0A16BDE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":137943,"discussion_content":"羡慕","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579220038,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1259525,"avatar":"https://static001.geekbang.org/account/avatar/00/13/38/05/67aae6c8.jpg","nickname":"Rainbow","note":"","ucode":"248A7E2C05E4DE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":137919,"discussion_content":"啥公司这么早放假","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579218389,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353999,"user_name":"Geek_19d46a","can_delete":false,"product_type":"c1","uid":1593319,"ip_address":"广东","ucode":"6B137E4FC514D1","user_header":"","comment_is_top":false,"comment_ctime":1660005936,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1660005936","product_id":100039001,"comment_content":"根据个人的工作场景重新制定了自己的代码评价指标如下：<br>简洁性，易读性，易维护性，可复用性，易扩展性，可测试性。<br>希望整个课程下来，可以进一步细化上述指标，做到可判断，可实施。","like_count":0},{"had_liked":false,"id":352600,"user_name":"二蛋","can_delete":false,"product_type":"c1","uid":1236432,"ip_address":"","ucode":"E4258312339C9C","user_header":"https://static001.geekbang.org/account/avatar/00/12/dd/d0/c1e6db47.jpg","comment_is_top":false,"comment_ctime":1658801760,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1658801760","product_id":100039001,"comment_content":"哈哈哈，跟战斗机一样，颜值即战斗力！好的代码，一定是鲁棒性高，低异常的","like_count":0},{"had_liked":false,"id":350922,"user_name":"SICUN","can_delete":false,"product_type":"c1","uid":1254261,"ip_address":"","ucode":"22A384904EB9E9","user_header":"https://static001.geekbang.org/account/avatar/00/13/23/75/2b599841.jpg","comment_is_top":false,"comment_ctime":1657349358,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657349358","product_id":100039001,"comment_content":"我觉得除了这些主观的评价外，一些客观的可量化的编码规范也非常重要，比如规定一个函数最多不能超过200行这样的标准，可以避免一些没有下限的代码，量化之后还可以借助工具做初步的代码规范检查，提高code review效率","like_count":0},{"had_liked":false,"id":348489,"user_name":"陈平Edgar","can_delete":false,"product_type":"c1","uid":1043749,"ip_address":"","ucode":"DD5A715893827E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/25/a48988c0.jpg","comment_is_top":false,"comment_ctime":1655133264,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655133264","product_id":100039001,"comment_content":"心中的好代码是看着舒服。方法小巧、功能内聚、修改简单","like_count":0},{"had_liked":false,"id":348389,"user_name":"Mr.Jiang","can_delete":false,"product_type":"c1","uid":3023788,"ip_address":"","ucode":"AA90AA926E8DE8","user_header":"https://static001.geekbang.org/account/avatar/00/2e/23/ac/4d5217bd.jpg","comment_is_top":false,"comment_ctime":1655044290,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655044290","product_id":100039001,"comment_content":"我也经常在工作中深有体会，包括自己在内，周边的同事，都会吐槽一段代码是，写得这么烂，这代码不知道在写个啥，看不懂。或者这代码也太长了，亦或这里可以复用的，没有复用，导致代码全部都是duplicate警告等。<br><br>我后续应该从多方面去评价代码，审视代码，设计代码，编写代码，是否易扩展？可读性高吗？灵活吗，有没有留给项目上二开的口子？ 这里可复用吗？这个类是否太臃肿了，违反单一职责，且不可复用？<br>这里的代码实现是否过于复杂晦涩，是否满足KISS原则了？【思从深而行从简，写优秀的代码不是在秀技术，而是要遵循行业内多年的一些优秀设计模式，经验】","like_count":0},{"had_liked":false,"id":345298,"user_name":"姚钫","can_delete":false,"product_type":"c1","uid":1498146,"ip_address":"","ucode":"ECB8B0627A4F9B","user_header":"https://static001.geekbang.org/account/avatar/00/16/dc/22/41a390ae.jpg","comment_is_top":false,"comment_ctime":1652178018,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1652178018","product_id":100039001,"comment_content":"220509 day02<br>1. 如何评价代码的好坏(1.可维护(新增功能简单) 2.可读(架构清晰 分层合理 代码优雅) 3.可拓展(开闭原则 对修改关闭 对拓展开放) 4.灵活(易拓展和可复用) 5.简洁(思从深而行从简 代码简单逻辑清晰) 6.可复用(减少重复代码编写复用已有代码) 7.可测试(单元测试比较好写)<br>2. 使用设计思想 设计原则 设计模式 编码规范 重构技巧改善自己的代码","like_count":0},{"had_liked":false,"id":341378,"user_name":"Hero","can_delete":false,"product_type":"c1","uid":1321726,"ip_address":"","ucode":"33D7939CC3C815","user_header":"https://static001.geekbang.org/account/avatar/00/14/2a/fe/197449a0.jpg","comment_is_top":false,"comment_ctime":1649572051,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1649572051","product_id":100039001,"comment_content":"我心目中的好代码：一个类&#47;方法不能太长；代码有简单的注释；方法里面不能在套n个方法，debug起来简直就是噩梦，异常处理得当；","like_count":0},{"had_liked":false,"id":333702,"user_name":"Geek_1af452","can_delete":false,"product_type":"c1","uid":2908485,"ip_address":"","ucode":"2FF76FB24B3FD1","user_header":"","comment_is_top":false,"comment_ctime":1644478071,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1644478071","product_id":100039001,"comment_content":"逻辑清晰、层次分明，一看就懂的代码就是好代码","like_count":0},{"had_liked":false,"id":331604,"user_name":"骑白马的菜鸟","can_delete":false,"product_type":"c1","uid":1042644,"ip_address":"","ucode":"6BD69C742B3AE0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e8/d4/a0c2569d.jpg","comment_is_top":false,"comment_ctime":1642668942,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642668942","product_id":100039001,"comment_content":"可维护性、可扩展性、可读性、可读性、可复用性、可测试性、简洁性","like_count":0},{"had_liked":false,"id":325831,"user_name":"lany66","can_delete":false,"product_type":"c1","uid":1446987,"ip_address":"","ucode":"EEF95BA9076AB4","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKdzXiawss5gGq1iaXGEECyKUFthSIOKA0cLtuYDUlvjTjkJgtjODJVOvleEENnmms98qAPNUpic3UicA/132","comment_is_top":false,"comment_ctime":1639182972,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639182972","product_id":100039001,"comment_content":"我理解的好代码易读，有注解，易维护，好扩展，耦合性小","like_count":0},{"had_liked":false,"id":322864,"user_name":"Geek_225452","can_delete":false,"product_type":"c1","uid":2850015,"ip_address":"","ucode":"EAD6D398C2A42E","user_header":"","comment_is_top":false,"comment_ctime":1637636373,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637636373","product_id":100039001,"comment_content":"评判代码质量的好坏很大程度上是比较主观的一件事，但是有一些通用的准则和评判标准：<br>1. 可维护性强<br>2. 可读性高<br>3. 可扩展性高<br>4. 简洁、灵活<br>5. 复用性强<br>6. 易测试<br>","like_count":0},{"had_liked":false,"id":322816,"user_name":"奕涛_steve","can_delete":false,"product_type":"c1","uid":1630504,"ip_address":"","ucode":"07B39F3C746C3C","user_header":"https://static001.geekbang.org/account/avatar/00/18/e1/28/0a26566d.jpg","comment_is_top":false,"comment_ctime":1637598780,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637598780","product_id":100039001,"comment_content":"总结下，可读性、可复用性、可扩展性是高质量代码最重要的指标，做到这三点其实就能写出灵活、可维护的代码。除了这三点，可测试性也很重要，但这需要与单元测试结合，需要开发流程重视单元测试。<br>模块化好的代码是在这三者的基础之上，对职责进行良好的划分得到的。职责怎样算良好划分呢？其实就是经常一起出现的代码尽量放在一起。此外，代码的职责随着项目的迭代是会变动的，因此想代码保持好的模块化，需要对代码持续重构。","like_count":0},{"had_liked":false,"id":322785,"user_name":"adrian_xia","can_delete":false,"product_type":"c1","uid":1101454,"ip_address":"","ucode":"957C329EAFD31C","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/8e/204736bb.jpg","comment_is_top":false,"comment_ctime":1637587250,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1637587250","product_id":100039001,"comment_content":"1. 不要滥用设计模式，简单的事情可能会变得复杂且不易维护<br>2. 流程的优化，可以从执行的过程入手，简单的方法就是代码执行的行数越少，执行的速度越快<br>3. 易扩展，ifelse多了就可以考虑策略了，流程相同就可以考虑模板了<br>4. 代码是持续的重构更新，从而变得越来越舒服。","like_count":0},{"had_liked":false,"id":320914,"user_name":"张浩","can_delete":false,"product_type":"c1","uid":1001225,"ip_address":"","ucode":"DBEAFFB7660813","user_header":"https://static001.geekbang.org/account/avatar/00/0f/47/09/316b0aa1.jpg","comment_is_top":false,"comment_ctime":1636555596,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1636555596","product_id":100039001,"comment_content":"好的代码能够用简单的方法解决复杂的问题。","like_count":0},{"had_liked":false,"id":320274,"user_name":"探雪","can_delete":false,"product_type":"c1","uid":2833619,"ip_address":"","ucode":"2332650D9C8D54","user_header":"https://static001.geekbang.org/account/avatar/00/2b/3c/d3/fab9d588.jpg","comment_is_top":false,"comment_ctime":1636192257,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636192257","product_id":100039001,"comment_content":"我觉得好的代码应该模块划分的足够清晰、简单易懂、运行效率高，尽可能的减少与数据库的交互","like_count":0},{"had_liked":false,"id":319249,"user_name":"慢动作","can_delete":false,"product_type":"c1","uid":2184311,"ip_address":"","ucode":"F47BDAEC694E32","user_header":"https://static001.geekbang.org/account/avatar/00/21/54/77/b0986fed.jpg","comment_is_top":false,"comment_ctime":1635695519,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635695519","product_id":100039001,"comment_content":"代码质量评判标准，自己写代码的时候也要主要：<br>可维护、可读、可扩展、可复用、灵活、简洁、可测试<br>其中可维护、可读、可扩展是最重要的3个<br>细化落地：面向对象设计思想、设计原则、设计模式、编码规范、重构技巧","like_count":0},{"had_liked":false,"id":318761,"user_name":"Geek_c46527","can_delete":false,"product_type":"c1","uid":2800355,"ip_address":"","ucode":"3C6008B6BC999F","user_header":"","comment_is_top":false,"comment_ctime":1635416962,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635416962","product_id":100039001,"comment_content":"个人理解：先是能让人理解，清晰明确，否则使用了再多的技巧也是锦上添花；其次是代码的运行效率要高，能高效率解决实际业务问题；最后是代码的维护成本较低，别人接手并且接入开发工作使用的时间少，熟悉效率高","like_count":0},{"had_liked":false,"id":317221,"user_name":"Xingyi_Xie","can_delete":false,"product_type":"c1","uid":2222614,"ip_address":"","ucode":"D1849DB8BFB1B2","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/1fXYkS0UlZUQQtzUpG2TZzVhVZHarfpWT5wjO7iajw959zysQks1vLFM2uQsKnYG3uQAhzenH9LP86goiciaCDNibQ/132","comment_is_top":false,"comment_ctime":1634715202,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634715202","product_id":100039001,"comment_content":"我认为《Zen of Python》那19句箴言（Python中执行import this可查看）的中心思想就是KISS 原则（Keep It Simple，Stupid），其中有一句就是Readability counts.（可读性至关重要。）<br><br>作为设计模式的小白一枚，不懂什么是好代码，我能尽量做到的也只有“可读性&quot;。除了认真遵守coding style的规范以外，还要做一只快乐的注释狂魔+文档狂魔。说明性文字甚至有代码的好几倍长。因为文档认真交待了问题背景、功能简介、输入输出示例、注意事项、未实现&#47;待改进等，以及一些关键点为什么要用这个方案。夸张地说，哪怕我下一秒就撞车失忆，我也能明白自己要干啥，哈哈哈~~<br><br>还好我不是程序员，不然只怕压力山大、更新迅速的残酷开发环境下，40米大刀在等着我呢~~","like_count":0},{"had_liked":false,"id":317045,"user_name":"不二","can_delete":false,"product_type":"c1","uid":1076451,"ip_address":"","ucode":"CDB603B9F87354","user_header":"https://static001.geekbang.org/account/avatar/00/10/6c/e3/45f550b5.jpg","comment_is_top":false,"comment_ctime":1634648296,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634648296","product_id":100039001,"comment_content":"类比白居易的诗，用老妪能解的字，写出美妙的诗","like_count":0},{"had_liked":false,"id":316025,"user_name":"水手","can_delete":false,"product_type":"c1","uid":1336430,"ip_address":"","ucode":"536BB54E1E3617","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/6e/e5ecc1d2.jpg","comment_is_top":false,"comment_ctime":1634110536,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634110536","product_id":100039001,"comment_content":"好的代码像诗一样优美，烂的代码像屎一样腐烂","like_count":0,"discussions":[{"author":{"id":1681459,"avatar":"https://static001.geekbang.org/account/avatar/00/19/a8/33/b71635c1.jpg","nickname":"锋子","note":"","ucode":"89FFA85BDB1C99","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327380,"discussion_content":"第一个没感觉瑕疵，看用处吧，有时候单步调试不喜欢return一个函数，除非很直观。 第二点新增一个变量主要是一个语义，让人阅读代码就知道你这一串是做什么用的，你看阿里开发手册应该又提到，复杂判断抽出来用变量装。   ","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1605806633,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1944895,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/ad/3f/b5eabecf.jpg","nickname":"王川","note":"","ucode":"AED1548E793EB3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339865,"discussion_content":"第2个问题我喜欢这么干，当这个判断条件只使用一次的时候，我会直接在 if() 里面写成表达式的形式。如果这个条件会多次使用且作用域局限于当前作用域时，我会使用一个变量来进行保存。如果这个判断条件会在多个作用域使用，那么应该抽离成函数~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609828930,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1944895,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/ad/3f/b5eabecf.jpg","nickname":"王川","note":"","ucode":"AED1548E793EB3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339935,"discussion_content":"复杂条件直接抽函数，目的是隔离复杂性。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1609845792,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":339865,"ip_address":""},"score":339935,"extra":""}]},{"author":{"id":2286788,"avatar":"https://static001.geekbang.org/account/avatar/00/22/e4/c4/065f8c0c.jpg","nickname":"Tom-TTC","note":"","ucode":"36AB0797D6FD3A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333076,"discussion_content":"C问题是大佬理解错了吧😄，栏主说的是依赖类的import顺序是按字母表，没说类的属性按字母表排列。( ´･･)ﾉ(._.`)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607428469,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2286788,"avatar":"https://static001.geekbang.org/account/avatar/00/22/e4/c4/065f8c0c.jpg","nickname":"Tom-TTC","note":"","ucode":"36AB0797D6FD3A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333107,"discussion_content":"如果是import。那就无视我这个吧。只是import都靠ide自动排了，应该没有拿出来讨论的必要哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607433955,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":333076,"ip_address":""},"score":333107,"extra":""}]}]},{"had_liked":false,"id":315810,"user_name":"Geek1986","can_delete":false,"product_type":"c1","uid":2791270,"ip_address":"","ucode":"9D782C4382881D","user_header":"","comment_is_top":false,"comment_ctime":1634007481,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634007481","product_id":100039001,"comment_content":"赞","like_count":0},{"had_liked":false,"id":313769,"user_name":"Geek_1","can_delete":false,"product_type":"c1","uid":2704407,"ip_address":"","ucode":"59300A73996D20","user_header":"https://static001.geekbang.org/account/avatar/00/29/44/17/e4fdcaad.jpg","comment_is_top":false,"comment_ctime":1632655551,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632655551","product_id":100039001,"comment_content":"感觉自己的代码确实有很大提高空间","like_count":0},{"had_liked":false,"id":308024,"user_name":"刘泽民","can_delete":false,"product_type":"c1","uid":2731016,"ip_address":"","ucode":"E4F55018D01ABD","user_header":"","comment_is_top":false,"comment_ctime":1629361476,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629361476","product_id":100039001,"comment_content":"从代码的结构上结构清晰，功能明确，能够以简洁准确的代码来描述对应业务逻辑","like_count":0},{"had_liked":false,"id":307920,"user_name":"破发者","can_delete":false,"product_type":"c1","uid":1401266,"ip_address":"","ucode":"3B3091527479F2","user_header":"https://static001.geekbang.org/account/avatar/00/15/61/b2/f36c1d40.jpg","comment_is_top":false,"comment_ctime":1629309227,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1629309227","product_id":100039001,"comment_content":"编写大家都认为好的代码太难了，需要慢慢不断磨炼，经常向比自己牛的前辈们学习，也慢慢提升了我们的编码水平","like_count":0},{"had_liked":false,"id":306722,"user_name":"小周","can_delete":false,"product_type":"c1","uid":2453498,"ip_address":"","ucode":"7ED7BC27A46C4C","user_header":"https://static001.geekbang.org/account/avatar/00/25/6f/fa/615a0df3.jpg","comment_is_top":false,"comment_ctime":1628680950,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628680950","product_id":100039001,"comment_content":"代码分层，职责明确也挺重要的。","like_count":0},{"had_liked":false,"id":306552,"user_name":"小伟","can_delete":false,"product_type":"c1","uid":1043401,"ip_address":"","ucode":"B631E56A112BDC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/eb/c9/b1b233cf.jpg","comment_is_top":false,"comment_ctime":1628605275,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628605275","product_id":100039001,"comment_content":"可观测性，可调试性，性能，稳定性","like_count":0},{"had_liked":false,"id":306371,"user_name":"Geek_842f07","can_delete":false,"product_type":"c1","uid":2698987,"ip_address":"","ucode":"ED772AF755FE7E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/WP4Ge8ABcINFkccKaNYKibicFnI0JAoojBBAUGrichNeRAgzm5RGbHG7GqYrFX3ELEzenuEbicQHJy2HZ72RxSOuMA/132","comment_is_top":false,"comment_ctime":1628518380,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628518380","product_id":100039001,"comment_content":"文档写的好的代码也非常重要，否则后续很难相互交流","like_count":0},{"had_liked":false,"id":301811,"user_name":"风格","can_delete":false,"product_type":"c1","uid":2694209,"ip_address":"","ucode":"2CD3EA00FEA35E","user_header":"https://static001.geekbang.org/account/avatar/00/29/1c/41/f61b7f5d.jpg","comment_is_top":false,"comment_ctime":1625893641,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625893641","product_id":100039001,"comment_content":"我感觉可读的代码的代码读起来应该像『流水』一样顺畅。","like_count":0},{"had_liked":false,"id":301720,"user_name":"招选","can_delete":false,"product_type":"c1","uid":2534929,"ip_address":"","ucode":"8571CE69383BAB","user_header":"https://static001.geekbang.org/account/avatar/00/26/ae/11/8262df48.jpg","comment_is_top":false,"comment_ctime":1625821488,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625821488","product_id":100039001,"comment_content":"对于迭代开发，最怕的是读代码？！！！人员的交接不恰当项目开发进度的紧迫性，迫使我要以最快的时间读懂之前人开发的代码。","like_count":0},{"had_liked":false,"id":301439,"user_name":"Geek__126303fc81f7","can_delete":false,"product_type":"c1","uid":1453774,"ip_address":"","ucode":"D256622360E1B4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibFY0KibR500NUAibZqsZCqg8Z6XicEaqr23oZTUlFcQaMXAlhETpVBXPAiamJ1IYcc7ibn7ZGdmUycxAicibkhtSc3xYA/132","comment_is_top":false,"comment_ctime":1625699460,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625699460","product_id":100039001,"comment_content":"几个评判代码质量的标准是：可维护性、可读性、可扩展性、灵活性、简洁性、可复用性、可测试性","like_count":0},{"had_liked":false,"id":301154,"user_name":"ryzedicaprio","can_delete":false,"product_type":"c1","uid":2165183,"ip_address":"","ucode":"17B09626B466AF","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/zt58d6jCuqwTr2qSdOvBJapsB1gGPnpjORu3jq1uKKV2mdbYMBrWucKUlCwg6kjNfAQpdyCNTmcY8NYmR6UTsA/132","comment_is_top":false,"comment_ctime":1625557293,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625557293","product_id":100039001,"comment_content":"要写得不好，方法有很多：<br>1. 没有固定的编码风格，或者和整个项目的风格不一致。或者用 C++ 的风格写 Python。<br>2. 性能低下的代码。比如 n 比较大的时候，明明有 O(lgn) 的算法，却用 O(n) 的算法；n 比较小的时候，明明直接拼接字符串是最快的，还要用 StringBuffer。 <br>3. 缺乏良好的设计，想到哪里写到哪里。造成未来不可扩展。<br>4. 过早设计，过度设计，造成不必要的维护成本和运行性能低下。<br>5. 不容易懂的代码不加注释。<br>6. 作为一个模块，没有给调用者准备文档或者接口上的注释。<br>7. 考虑不周全，在大多数场合下能工作，在边界条件下就挂掉的代码。这是最主要的产生 bug 的原因。","like_count":0},{"had_liked":false,"id":300296,"user_name":"Kenneth。🌞","can_delete":false,"product_type":"c1","uid":1786752,"ip_address":"","ucode":"299ADF236395CC","user_header":"https://static001.geekbang.org/account/avatar/00/1b/43/80/b1ae32cd.jpg","comment_is_top":false,"comment_ctime":1625100961,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625100961","product_id":100039001,"comment_content":"接口职能清晰，有一个通用类实现接口，预留出扩展点，有新需求只需要针对扩展点实现业务逻辑，得到需要的业务参数","like_count":0},{"had_liked":false,"id":299375,"user_name":"易飞","can_delete":false,"product_type":"c1","uid":2630424,"ip_address":"","ucode":"32AC28754237F7","user_header":"https://static001.geekbang.org/account/avatar/00/28/23/18/4284361f.jpg","comment_is_top":false,"comment_ctime":1624602552,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1624602552","product_id":100039001,"comment_content":"健壮性也很重要","like_count":0},{"had_liked":false,"id":297077,"user_name":"Faded","can_delete":false,"product_type":"c1","uid":2655908,"ip_address":"","ucode":"9BFD018D7FAF7B","user_header":"https://static001.geekbang.org/account/avatar/00/28/86/a4/39115ec9.jpg","comment_is_top":false,"comment_ctime":1623301871,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623301871","product_id":100039001,"comment_content":"我理解的好代码：<br>  能轻松读懂其代码意思，可以重复使用，可以轻松在其基础上扩展其他功能","like_count":0},{"had_liked":false,"id":296961,"user_name":"HSC胡舒程","can_delete":false,"product_type":"c1","uid":1941115,"ip_address":"","ucode":"77D81890F5E66B","user_header":"","comment_is_top":false,"comment_ctime":1623240654,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623240654","product_id":100039001,"comment_content":"我认为可维护性性包含了对程序的扩展和修改。所以可维护性性包含了可扩展性。<br>所以在我看来好的代码主要就是做到了良好的可读性和可维护性。虽然这两点的评判标准相对主观，但是我认为所有程序员对于什么是好的代码都有一个基本的共识，","like_count":0},{"had_liked":false,"id":296400,"user_name":"管管","can_delete":false,"product_type":"c1","uid":1117885,"ip_address":"","ucode":"4CA941AD1D0167","user_header":"https://static001.geekbang.org/account/avatar/00/11/0e/bd/0046f85a.jpg","comment_is_top":false,"comment_ctime":1622954917,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1622954917","product_id":100039001,"comment_content":"类名，属性名，方法名能让人一目了然","like_count":0},{"had_liked":false,"id":295448,"user_name":"李培晟","can_delete":false,"product_type":"c1","uid":1376129,"ip_address":"","ucode":"FADEF5EBDECC18","user_header":"https://static001.geekbang.org/account/avatar/00/14/ff/81/9d05811f.jpg","comment_is_top":false,"comment_ctime":1622434231,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622434231","product_id":100039001,"comment_content":"好代码的特点：<br>1：要小，函数和类要尽量“小“<br>2：单一职责，一个函数做一件事<br>3：命名规范，名副其实<br>4：层次分明，合理划分层次<br>5：多用组合少用继承<br>6：面向接口编程","like_count":0},{"had_liked":false,"id":294567,"user_name":"Geek_ccbd80","can_delete":false,"product_type":"c1","uid":2638517,"ip_address":"","ucode":"BBA76D078D8584","user_header":"","comment_is_top":false,"comment_ctime":1622001144,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622001144","product_id":100039001,"comment_content":"经常进行重构，避免重复代码，提高可重用性","like_count":0},{"had_liked":false,"id":294292,"user_name":"米豆丸","can_delete":false,"product_type":"c1","uid":2042568,"ip_address":"","ucode":"CE99FE3A1EBCAF","user_header":"https://static001.geekbang.org/account/avatar/00/1f/2a/c8/dc4e314e.jpg","comment_is_top":false,"comment_ctime":1621865730,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621865730","product_id":100039001,"comment_content":"米豆丸-&gt;打卡","like_count":0},{"had_liked":false,"id":294237,"user_name":"帅气的名字","can_delete":false,"product_type":"c1","uid":2635800,"ip_address":"","ucode":"59B71A677963D1","user_header":"https://static001.geekbang.org/account/avatar/00/28/38/18/0a4ef54d.jpg","comment_is_top":false,"comment_ctime":1621845448,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621845448","product_id":100039001,"comment_content":"真正的高手往往能通过最简洁高效的方法来解决问题","like_count":0,"discussions":[{"author":{"id":1115041,"avatar":"https://static001.geekbang.org/account/avatar/00/11/03/a1/e6a0f60b.jpg","nickname":"Sid","note":"","ucode":"0461B574B2736B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338089,"discussion_content":"对，这个我也很困惑，一般入参加了boolean类型，都是有很多公用逻辑，用到boolean标志的特殊逻辑插在中间。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609168820,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2200205,"avatar":"https://static001.geekbang.org/account/avatar/00/21/92/8d/a849daae.jpg","nickname":"山猫大战响尾蛇","note":"","ucode":"FE8CEE50873120","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1115041,"avatar":"https://static001.geekbang.org/account/avatar/00/11/03/a1/e6a0f60b.jpg","nickname":"Sid","note":"","ucode":"0461B574B2736B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":372150,"discussion_content":"就我个人经验而言，一般来说，如果有一个地方需要用flag去切换逻辑分支，那么大概率到后期分支不会只局限于true或者false两条，最好还是尽早把分支控制部分独立成一个函数比较好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620211561,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":338089,"ip_address":""},"score":372150,"extra":""}]}]},{"had_liked":false,"id":293235,"user_name":"wonderful2","can_delete":false,"product_type":"c1","uid":2625536,"ip_address":"","ucode":"6BA4BBA3B9B32B","user_header":"","comment_is_top":false,"comment_ctime":1621300026,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621300026","product_id":100039001,"comment_content":"方法内部有嵌套子方法，嵌套子方法里又有嵌套子方法，一般来说建议最多嵌套几层？","like_count":0},{"had_liked":false,"id":292685,"user_name":"阿晟","can_delete":false,"product_type":"c1","uid":1103765,"ip_address":"","ucode":"690690FDC25F8A","user_header":"https://static001.geekbang.org/account/avatar/00/10/d7/95/5e53e085.jpg","comment_is_top":false,"comment_ctime":1620920654,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620920654","product_id":100039001,"comment_content":"笔记 <br>评论代码的指标<br>可维护性<br>可读性<br>可扩展性<br>简洁性<br>可重用性<br>可测试性","like_count":0},{"had_liked":false,"id":292405,"user_name":"Geek_5a9dc0","can_delete":false,"product_type":"c1","uid":2432026,"ip_address":"","ucode":"81B464DE3EAC26","user_header":"","comment_is_top":false,"comment_ctime":1620807795,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620807795","product_id":100039001,"comment_content":"的确可测试行很重要，相比其他，它是可以直接告诉你代码质量如何方法。","like_count":0},{"had_liked":false,"id":291480,"user_name":"Time-sun","can_delete":false,"product_type":"c1","uid":1949865,"ip_address":"","ucode":"47D2EB4FD2F925","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/tiaEaUwoYl8z5FROHibq5XYjjcuTia840dHYT8zqwV4ibfWPNeQHw3ib20iba8bRRkVxwYUCz9ENkDGRsfnmSJQBAALA/132","comment_is_top":false,"comment_ctime":1620302160,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620302160","product_id":100039001,"comment_content":"好的代码：不给后面维护的人留坑，后面维护的人可以很容易的增加、删除、修改某些功能","like_count":0},{"had_liked":false,"id":289982,"user_name":"贝壳喊母","can_delete":false,"product_type":"c1","uid":1208159,"ip_address":"","ucode":"4D0E8C55BDE64F","user_header":"","comment_is_top":false,"comment_ctime":1619308012,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619308012","product_id":100039001,"comment_content":"我认为除此之外，可预见性比较重要吧？尤其是在动态脚本语言当中，看别人的代码比较折磨人。<br>除此之外代码的性能也能算上一个重要的评价标准呢？ 好的代码在执行效率等方面应该也是占据一部分吧？","like_count":0},{"had_liked":false,"id":288924,"user_name":"Geek_9dbc25","can_delete":false,"product_type":"c1","uid":2242904,"ip_address":"","ucode":"6CB31893173165","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIHxTg3tYriaCXiccCf7xUl9QHibAhCMBKQ2oCicvgcuHCo4ULSguISXeHzxM9a8fFD7icfy3OgXibvUNxw/132","comment_is_top":false,"comment_ctime":1618789587,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618789587","product_id":100039001,"comment_content":"好代码：易读，易扩展","like_count":0},{"had_liked":false,"id":288530,"user_name":"杰良","can_delete":false,"product_type":"c1","uid":2567349,"ip_address":"","ucode":"5DC1D1C58A4731","user_header":"https://static001.geekbang.org/account/avatar/00/27/2c/b5/10141329.jpg","comment_is_top":false,"comment_ctime":1618531857,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618531857","product_id":100039001,"comment_content":"不同角度、不同出发点的评判标准，有时会相互冲突不可兼得，此时就需要明智地权衡、trade-off 了。","like_count":0},{"had_liked":false,"id":287894,"user_name":"Better me","can_delete":false,"product_type":"c1","uid":1261959,"ip_address":"","ucode":"CADF08D357489A","user_header":"https://static001.geekbang.org/account/avatar/00/13/41/87/46d7e1c2.jpg","comment_is_top":false,"comment_ctime":1618210582,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1618210582","product_id":100039001,"comment_content":"高质量代码的各种特性都是在表层比较主观的一些评判，但其本质应该充分符合六大设计原则单一职责、开放封闭、里氏替换、接口隔离、依赖倒置、迪米特，以及KISS、DRY、YAGNI等设计原则","like_count":0},{"had_liked":false,"id":287823,"user_name":"williamcai","can_delete":false,"product_type":"c1","uid":1158294,"ip_address":"","ucode":"B158F52C2D39BC","user_header":"https://static001.geekbang.org/account/avatar/00/11/ac/96/46b13896.jpg","comment_is_top":false,"comment_ctime":1618187176,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618187176","product_id":100039001,"comment_content":"代码结构清晰，逻辑简单明了，修改起来立马在脑子里知道要怎么处理<br>","like_count":0},{"had_liked":false,"id":287469,"user_name":"keep_it_real","can_delete":false,"product_type":"c1","uid":2055554,"ip_address":"","ucode":"F5057CAF752FF3","user_header":"https://static001.geekbang.org/account/avatar/00/1f/5d/82/81b2ba91.jpg","comment_is_top":false,"comment_ctime":1617963840,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617963840","product_id":100039001,"comment_content":"我觉得代码中多加日志也很重要，主要是异常日志，异常越早处理越好。如果是线上抛异常了，乙方能忍受你用多少时间去做调试呢？紧急情况去现场，别人都眼巴巴看着你在那里满头大汗的找bug，两三个小时过去了，你还没搞定。那你就死了。如果你加了精细的异常日志，就算甩锅你也有证据。","like_count":0},{"had_liked":false,"id":285419,"user_name":"Jerry","can_delete":false,"product_type":"c1","uid":1120977,"ip_address":"","ucode":"F10BBBA2644E46","user_header":"https://static001.geekbang.org/account/avatar/00/11/1a/d1/698609e1.jpg","comment_is_top":false,"comment_ctime":1616803782,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616803782","product_id":100039001,"comment_content":"我理解高质量的代码一定是 易于调试、易于单元测试，出现bug后能很明确是哪个类的哪个方法出现的问题。","like_count":0},{"had_liked":false,"id":284556,"user_name":"Johar","can_delete":false,"product_type":"c1","uid":1101969,"ip_address":"","ucode":"834136A6F64CDC","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/91/89123507.jpg","comment_is_top":false,"comment_ctime":1616336325,"is_pvip":false,"discussion_count":0,"race_medal":2,"score":"1616336325","product_id":100039001,"comment_content":"适当注释，文档齐全，有必要的日志，","like_count":0},{"had_liked":false,"id":284183,"user_name":"御风","can_delete":false,"product_type":"c1","uid":1812807,"ip_address":"","ucode":"51C8212BE06364","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a9/47/ded5da90.jpg","comment_is_top":false,"comment_ctime":1616116651,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616116651","product_id":100039001,"comment_content":"1.评估代码质量好坏的7个指标：可维护、可拓展、易复用、简洁、灵活、可测、<br>2.有些标准是主观的，比如可维护和可读性，不同水平的人结论不同；<br>有些标准是交叉的，比如，易用、可拓展、易复用，灵活性就强，可读、可拓展性好，那么可维护性就好。<br>3.设计原则、设计模式、编码规范的目的就是为了写出满足以上标准的代码。","like_count":0},{"had_liked":false,"id":284074,"user_name":"Wangyf","can_delete":false,"product_type":"c1","uid":2226219,"ip_address":"","ucode":"349068A07CB1D4","user_header":"https://static001.geekbang.org/account/avatar/00/21/f8/2b/339660f1.jpg","comment_is_top":false,"comment_ctime":1616057316,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1616057316","product_id":100039001,"comment_content":"作为一个刚刚入门的菜鸡，我记得大一上 C 语言课，我做作业的时候写代码，从来不添加空格，我看着那些变量和数字都挤在一起，觉得也没啥，能出结果就行。后来看视频，视频里代码，能加空格的地方，都加了空格，于是看起来，美观大方了一些。后来使用 VS 做课程设计，发现换行自动会添加空格，以至于现在我写代码，又开始依赖于写完之后，来一下格式化，看着那么多代码一下子被空格填充，真是一种莫名的美感","like_count":0},{"had_liked":false,"id":282750,"user_name":"风","can_delete":false,"product_type":"c1","uid":1077538,"ip_address":"","ucode":"104638BF19B048","user_header":"https://static001.geekbang.org/account/avatar/00/10/71/22/b8c596b6.jpg","comment_is_top":false,"comment_ctime":1615388400,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615388400","product_id":100039001,"comment_content":"好的代码首先结构要清晰，不要来回引用，不要看的时候跳来跳去；其次嵌套层级不要太深，点了100层还没有结束；再次不要写大而全的方法，功能不单一导致的问题就是功能之间容易产生影响从而产生bug，另外不容易扩展与维护，修改一个功能要考虑是否会影响其他的功能；最后就是要符合团队的编码规范，要以团队可以顺利交流为基准而不是自己以为的标准去衡量。<br>并不是看不懂就是不好，看得懂就是好，好的代码就像阅读优美的文章一样清晰而又顺畅。","like_count":0},{"had_liked":false,"id":281538,"user_name":"chenruoxu","can_delete":false,"product_type":"c1","uid":1144192,"ip_address":"","ucode":"74F740C1C5DEDA","user_header":"https://static001.geekbang.org/account/avatar/00/11/75/80/8da73d9c.jpg","comment_is_top":false,"comment_ctime":1614778192,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1614778192","product_id":100039001,"comment_content":"我觉得异常处理的全面性是比较重要的，异常捕获，根据不同异常提示不同信息，可以大大减少出问题时候的调试成本，减少排查问题所需的时间，所以我认为合适的日志级别，正确的异常处理也是好代码的评价标准。","like_count":0},{"had_liked":false,"id":280941,"user_name":"建强","can_delete":false,"product_type":"c1","uid":1397126,"ip_address":"","ucode":"62B03D0E0C64EC","user_header":"https://static001.geekbang.org/account/avatar/00/15/51/86/b5fd8dd8.jpg","comment_is_top":false,"comment_ctime":1614497958,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614497958","product_id":100039001,"comment_content":"代码的可移植性也很重要，现在的各种应用都要适应各种不同的平台和应用端，对程序的可移植性也提出了交高的要求。好的程序应该层次清晰，逻辑明确，简练优雅，清晰易懂。","like_count":0},{"had_liked":false,"id":280164,"user_name":"Geek_ea3267","can_delete":false,"product_type":"c1","uid":1962384,"ip_address":"","ucode":"71C1EBF50F457A","user_header":"","comment_is_top":false,"comment_ctime":1614100892,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614100892","product_id":100039001,"comment_content":"个人主观认为可读性是第一位, 开发中的时间是在看别人写的代码, 简洁性, 可读性高的代码能很大的提高工作效率","like_count":0},{"had_liked":false,"id":278317,"user_name":"星夜","can_delete":false,"product_type":"c1","uid":1128491,"ip_address":"","ucode":"3B46C09D994CEB","user_header":"https://static001.geekbang.org/account/avatar/00/11/38/2b/9db9406b.jpg","comment_is_top":false,"comment_ctime":1612871130,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612871130","product_id":100039001,"comment_content":"个人在一些代码的命名上常常感觉非常头疼，比如类、变量、方法等等，也见识过一些大佬的命名，都是非常精确的描述了其作用与功能，但是自己常常不得要领。当然这个问题和讨论有写跑题，因为老师总结的非常全面了。","like_count":0},{"had_liked":false,"id":278227,"user_name":"你当像鸟飞往你的山","can_delete":false,"product_type":"c1","uid":1116363,"ip_address":"","ucode":"7F63B307D7B92D","user_header":"https://static001.geekbang.org/account/avatar/00/11/08/cb/5a0690cb.jpg","comment_is_top":false,"comment_ctime":1612835584,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612835584","product_id":100039001,"comment_content":"我觉得可读性是可维护性的基本前提","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504638,"discussion_content":"Android是收购的吧������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598833903,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1007013,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5d/a5/e35e15eb.jpg","nickname":"大壮哥","note":"","ucode":"340296B9B54032","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":404040,"discussion_content":"Android操作系统最初由Andy Rubin开发，主要支持手机。2005年8月由Google收购注资","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634213917,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":271167,"user_name":"牛牛","can_delete":false,"product_type":"c1","uid":1194626,"ip_address":"","ucode":"CFCE68B4F92209","user_header":"https://static001.geekbang.org/account/avatar/00/12/3a/82/1ff83a38.jpg","comment_is_top":false,"comment_ctime":1609427943,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609427943","product_id":100039001,"comment_content":"常用评价代码质量的角度：<br>1. 易维护<br>2. 可读性强<br>3. 可扩展<br>4. 灵活<br>5. 可复用<br>6. 可测试<br>7. 简洁","like_count":0},{"had_liked":false,"id":269263,"user_name":"衡友乐","can_delete":false,"product_type":"c1","uid":1110813,"ip_address":"","ucode":"DF776E7C452ED2","user_header":"https://static001.geekbang.org/account/avatar/00/10/f3/1d/3d1746bd.jpg","comment_is_top":false,"comment_ctime":1608595575,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608595575","product_id":100039001,"comment_content":"对于可读性，代码注释不重要么？现在很多人不爱写注释包括版本管理提交的时候写的注释也很简单","like_count":0},{"had_liked":false,"id":269232,"user_name":"Tracy.li","can_delete":false,"product_type":"c1","uid":1243460,"ip_address":"","ucode":"0338DEC133CC9F","user_header":"https://static001.geekbang.org/account/avatar/00/12/f9/44/1a5e5992.jpg","comment_is_top":false,"comment_ctime":1608562518,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608562518","product_id":100039001,"comment_content":"邓主席说过 ：管他什么扩展可读性，能满足企业生产力得代码就是好代码","like_count":0},{"had_liked":false,"id":268248,"user_name":"Hi Young","can_delete":false,"product_type":"c1","uid":1548645,"ip_address":"","ucode":"E1E9C88399F3C2","user_header":"https://static001.geekbang.org/account/avatar/00/17/a1/65/44853770.jpg","comment_is_top":false,"comment_ctime":1608112094,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608112094","product_id":100039001,"comment_content":"读书笔记：https:&#47;&#47;www.yuque.com&#47;zhaohaiyang&#47;notes&#47;uimfq9","like_count":0},{"had_liked":false,"id":267937,"user_name":"Hi Young","can_delete":false,"product_type":"c1","uid":1548645,"ip_address":"","ucode":"E1E9C88399F3C2","user_header":"https://static001.geekbang.org/account/avatar/00/17/a1/65/44853770.jpg","comment_is_top":false,"comment_ctime":1608000394,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608000394","product_id":100039001,"comment_content":"🎁可读性<br>1. 易读、易理解（code review）<br>2. 符合编码规范<br>🎁简洁性<br>1. 简单，清晰（KISS）<br>a. 思从深，行从简<br>b. 不要过早、过度设计<br>🎁健壮性<br>1. 边界处理<br>2. 异常处理<br>3. 高并发承载<br>🎁可维护性<br>无论新人、老人，无论初级、资深<br>1. 是否冒着极大风险修改or添加代码？<br>2. 是否花费很长时间完成维护？<br>a. 使用容易通过log等手段排查问题？<br>🎁可扩展性<br>1. 应对未来需求变化的能力<br>a. 代码预留扩展点<br>ⅰ. 不修改or少量修改原有代码，通过扩展的方式添加新功能代码<br>b. 程序=数据结构+算法（control + logic），分离两种算法<br>🎁可复用性<br>1. 减少重复代码编写，复用已有（DRY）<br>🎁可测试性<br>1. 单元测试难写，侧面说明代码设计有问题<br>2. 单元测试不要依赖于环境","like_count":0},{"had_liked":false,"id":267487,"user_name":"Geek_652490","can_delete":false,"product_type":"c1","uid":1817165,"ip_address":"","ucode":"0612EE1FD02AF1","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/0qP9dQyibmPu1JUAan9bXEXZBAaOetRStstIcQDXZUFdU9jHb5W3RlNfCBI0kVkZzZTf6NbXwSY4IQqOsVSNQibw/132","comment_is_top":false,"comment_ctime":1607765569,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607765569","product_id":100039001,"comment_content":"代码质量的评价七个角度<br>1 维护性<br>2 可读性<br>3 可扩展性<br>4 灵活性<br>5 简洁性<br>6 可复用性<br>7 可测试性","like_count":0},{"had_liked":false,"id":267360,"user_name":"焱","can_delete":false,"product_type":"c1","uid":1113301,"ip_address":"","ucode":"677BF1BE4B94D5","user_header":"https://static001.geekbang.org/account/avatar/00/10/fc/d5/1cf5fd56.jpg","comment_is_top":false,"comment_ctime":1607693768,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607693768","product_id":100039001,"comment_content":"个人理解，好的代码别人一看就能自叹弗如( っ&#39;-&#39;)╮ =͟͟͞͞🏀","like_count":0},{"had_liked":false,"id":265197,"user_name":"冯佳兴","can_delete":false,"product_type":"c1","uid":1717342,"ip_address":"","ucode":"41D308E99EF9FF","user_header":"https://static001.geekbang.org/account/avatar/00/1a/34/5e/089ac156.jpg","comment_is_top":false,"comment_ctime":1606811221,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606811221","product_id":100039001,"comment_content":"简单易读，今天看能明白，明天看也能明白，过一年后依然能够明白<br>整洁，层次分明，但凡有重复的代码，就该想着抽离<br>为啥源码不易读，感觉抽象程度太高了，扩展性太高了，你调用我，我调用你，我感觉中性的代码最好了","like_count":0},{"had_liked":false,"id":261661,"user_name":"Coding小先","can_delete":false,"product_type":"c1","uid":1051563,"ip_address":"","ucode":"965B1CC757E026","user_header":"https://static001.geekbang.org/account/avatar/00/10/0b/ab/0e2857e5.jpg","comment_is_top":false,"comment_ctime":1605485754,"is_pvip":false,"replies":[{"id":"96138","content":"������","user_name":"作者回复","comment_id":261661,"uid":"1190123","ip_address":"","utype":1,"ctime":1606701380,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1605485754","product_id":100039001,"comment_content":"代码质量，我觉得首先最重要的是代码规范，还有一个就是代码注释，起码要让自己过段时间后，还有同事能够一眼明白你的代码的作用是什么。另外在架构 代码设计上，扩展性也是非常重要的。有些不好的设计和架构，要添加一个功能得修改很多的代码才行","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509557,"discussion_content":"������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606701380,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":260712,"user_name":"Geek_7cb078","can_delete":false,"product_type":"c1","uid":1697610,"ip_address":"","ucode":"EEEE2DF8D21121","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ6peT4XHOU7sibZ1Htb2oU3Ldg668DPWJTZuq1y6NzcTKPxU0KB50Cy3EI8CJ33bJAHnlZ1jVicg8Q/132","comment_is_top":false,"comment_ctime":1605087308,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605087308","product_id":100039001,"comment_content":"运行效率，代码注释覆盖率","like_count":0},{"had_liked":false,"id":258990,"user_name":"sethlee","can_delete":false,"product_type":"c1","uid":2286923,"ip_address":"","ucode":"71E5AEC9BF1117","user_header":"","comment_is_top":false,"comment_ctime":1604590764,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604590764","product_id":100039001,"comment_content":"结构清晰，风格统一","like_count":0},{"had_liked":false,"id":256276,"user_name":"一万小时","can_delete":false,"product_type":"c1","uid":1297927,"ip_address":"","ucode":"D2D443595BB1ED","user_header":"","comment_is_top":false,"comment_ctime":1603591350,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603591350","product_id":100039001,"comment_content":"我认为好的代码就是艺术品，从main就可以看出这代码是出自高手之手，从命名到设计都有一种优美感","like_count":0},{"had_liked":false,"id":255270,"user_name":"幺零贰肆","can_delete":false,"product_type":"c1","uid":1726261,"ip_address":"","ucode":"B559E8E9AA5183","user_header":"https://static001.geekbang.org/account/avatar/00/1a/57/35/b325d272.jpg","comment_is_top":false,"comment_ctime":1603292327,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603292327","product_id":100039001,"comment_content":"1.代码整洁且符合语言规范格式，<br>2.有必要注释，<br>3.较少的逻辑冗余","like_count":0},{"had_liked":false,"id":251144,"user_name":"Evan","can_delete":false,"product_type":"c1","uid":1344281,"ip_address":"","ucode":"B877ABD0CF4661","user_header":"https://static001.geekbang.org/account/avatar/00/14/83/19/0a3fe8c1.jpg","comment_is_top":false,"comment_ctime":1601377072,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1601377072","product_id":100039001,"comment_content":"KISS, 可测试性非常重要，另外可维护性、可读性、可扩展性等也比较重要，其它特性也重要。","like_count":0},{"had_liked":false,"id":249224,"user_name":"REAL_MADIRD","can_delete":false,"product_type":"c1","uid":1012889,"ip_address":"","ucode":"9E327B5456739D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/74/99/dbdee494.jpg","comment_is_top":false,"comment_ctime":1600509496,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600509496","product_id":100039001,"comment_content":"readability这条应该是给同水平或者更高水平的程序员看的，就算可读性很好，水平低的程序员还是不会觉得可读，哈哈","like_count":0},{"had_liked":false,"id":248827,"user_name":"曙光","can_delete":false,"product_type":"c1","uid":1476450,"ip_address":"","ucode":"04D65BF7F19845","user_header":"https://static001.geekbang.org/account/avatar/00/16/87/62/f99b5b05.jpg","comment_is_top":false,"comment_ctime":1600326572,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600326572","product_id":100039001,"comment_content":"思考题，老师对代码评判标准提的非常清晰了。一般自己评判代码的标准，也就停留在易扩展、易维护、易读这一层，只要能读懂，就是成功。","like_count":0},{"had_liked":false,"id":246354,"user_name":"Younger Ku","can_delete":false,"product_type":"c1","uid":1323102,"ip_address":"","ucode":"D157DC38BDB515","user_header":"https://static001.geekbang.org/account/avatar/00/14/30/5e/c42bc33f.jpg","comment_is_top":false,"comment_ctime":1599293722,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599293722","product_id":100039001,"comment_content":"不熟悉设计思想，设计模式， 设计原则，编码规范，重构技巧等知识，即便看到好的代码也说不出哪里好，但就是觉得好，这种感觉挺痛苦的，觉得自己进了蛋糕房，吃着🍰味道不错，结果出来后就忘了刚才的味道。所以我觉得好的代码是我看的时候知道作者为什么这样编码，符合哪些规范，而如果想要有这种感觉首先就得提升自己品鉴代码的能力。","like_count":0},{"had_liked":false,"id":244965,"user_name":"JerryZhu","can_delete":false,"product_type":"c1","uid":1591223,"ip_address":"","ucode":"76850CD45786C1","user_header":"https://static001.geekbang.org/account/avatar/00/18/47/b7/b30472fd.jpg","comment_is_top":false,"comment_ctime":1598764974,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598764974","product_id":100039001,"comment_content":"我心目中的好代码从直观来说，就是一看就知道干啥，设计思路清晰， 几乎不用写过多的注释， 符合人类语言习惯，想调用和扩展，直接根据习惯就能拿到想要的方法","like_count":0},{"had_liked":false,"id":243796,"user_name":"y y gi r l","can_delete":false,"product_type":"c1","uid":2132615,"ip_address":"","ucode":"0BC00677D3071D","user_header":"https://static001.geekbang.org/account/avatar/00/20/8a/87/dd68531b.jpg","comment_is_top":false,"comment_ctime":1598278757,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598278757","product_id":100039001,"comment_content":"好代码就是注重模块化","like_count":0},{"had_liked":false,"id":241678,"user_name":"python","can_delete":false,"product_type":"c1","uid":1870014,"ip_address":"","ucode":"2226125EBC99A5","user_header":"https://static001.geekbang.org/account/avatar/00/1c/88/be/cc6a7c11.jpg","comment_is_top":false,"comment_ctime":1597388933,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597388933","product_id":100039001,"comment_content":"1、代码的可读性非常重要，之前有个同事写的代码难以理解，别人都不愿意看他写的代码，那种逻辑不是一般人能够理解的","like_count":0},{"had_liked":false,"id":239872,"user_name":"席席","can_delete":false,"product_type":"c1","uid":1591399,"ip_address":"","ucode":"656377E29D4F76","user_header":"https://static001.geekbang.org/account/avatar/00/18/48/67/128eda8f.jpg","comment_is_top":false,"comment_ctime":1596681394,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596681394","product_id":100039001,"comment_content":"面向接口","like_count":0},{"had_liked":false,"id":239643,"user_name":"天网_beta","can_delete":false,"product_type":"c1","uid":1191117,"ip_address":"","ucode":"57F334F9AA8EAF","user_header":"https://static001.geekbang.org/account/avatar/00/12/2c/cd/314156af.jpg","comment_is_top":false,"comment_ctime":1596603347,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596603347","product_id":100039001,"comment_content":"我自己排序质量指标重要性：<br>1. 可读性<br>2. 维护性<br>3. 可扩展性<br>4. 可测试性<br>同时满足这4个指标的代码已经很好，很安全了","like_count":0},{"had_liked":false,"id":239493,"user_name":"坚持","can_delete":false,"product_type":"c1","uid":1004051,"ip_address":"","ucode":"80049DF366F37E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI8HY5UxPvK5EIEicxCARjePdicpkcdyViaxn0dHrVsfXOA49BHkyMW4h3LSZhnCz6jXTgx2PFEKXYWQ/132","comment_is_top":false,"comment_ctime":1596548420,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596548420","product_id":100039001,"comment_content":"逻辑清晰，简单明了，新手都能看懂","like_count":0},{"had_liked":false,"id":239350,"user_name":"磐星","can_delete":false,"product_type":"c1","uid":1003640,"ip_address":"","ucode":"19436A86714C3D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/50/78/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1596508744,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596508744","product_id":100039001,"comment_content":"以前主要在可扩展 可读 可维护几个方面去看","like_count":0},{"had_liked":false,"id":238995,"user_name":"Ilearning99","can_delete":false,"product_type":"c1","uid":1989119,"ip_address":"","ucode":"7901836A2C47EF","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/qOdqzmC507sibL6sichNSDaVmyoMKibEIqHWpic4CftgOQnoA3QKeRPwic9j1Ha8MLtzzqzfSRavR9GWMju09SMADUg/132","comment_is_top":false,"comment_ctime":1596412087,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596412087","product_id":100039001,"comment_content":"我觉得好代码的标准，应该是可读性、可维护性、可扩展性、有时候可能还需要先进性，代码中能有最新的一些语言方面的特性。好代码从命名方面就显得非常不一样，一定非常易读。","like_count":0},{"had_liked":false,"id":238590,"user_name":"Elvis Lee","can_delete":false,"product_type":"c1","uid":2098270,"ip_address":"","ucode":"A4B26AFFE817FA","user_header":"https://static001.geekbang.org/account/avatar/00/20/04/5e/5d2e6254.jpg","comment_is_top":false,"comment_ctime":1596207278,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1596207278","product_id":100039001,"comment_content":"简单易读，易使用，新手也能上手修改","like_count":0},{"had_liked":false,"id":238301,"user_name":"Happy—sea","can_delete":false,"product_type":"c1","uid":1624484,"ip_address":"","ucode":"4EAD3636164392","user_header":"https://static001.geekbang.org/account/avatar/00/18/c9/a4/66b606ad.jpg","comment_is_top":false,"comment_ctime":1596116328,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596116328","product_id":100039001,"comment_content":"我觉得代码健壮性很重要","like_count":0},{"had_liked":false,"id":237143,"user_name":"思密达","can_delete":false,"product_type":"c1","uid":1812646,"ip_address":"","ucode":"82FF8EE9A37461","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a8/a6/825879a0.jpg","comment_is_top":false,"comment_ctime":1595689595,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595689595","product_id":100039001,"comment_content":"刚开始写代码的时候，没有高手指点，也不知道好代码长什么样子，写代码就像写散文，东一块西一块，乱的没有样子。现在知道了要把公共部分抽象为方法，遵循dry原则。变量命名和规范也开始注意了起来。又开始学习设计模式������","like_count":0},{"had_liked":false,"id":236862,"user_name":"吴佳同","can_delete":false,"product_type":"c1","uid":2082847,"ip_address":"","ucode":"F6D3B5FF421662","user_header":"https://static001.geekbang.org/account/avatar/00/1f/c8/1f/bbfaa4d9.jpg","comment_is_top":false,"comment_ctime":1595571297,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595571297","product_id":100039001,"comment_content":"可运行性 可用性 能达到预期目的","like_count":0},{"had_liked":false,"id":235406,"user_name":"大飞守角","can_delete":false,"product_type":"c1","uid":1199825,"ip_address":"","ucode":"5A5BFF885986A3","user_header":"https://static001.geekbang.org/account/avatar/00/12/4e/d1/ded6b849.jpg","comment_is_top":false,"comment_ctime":1595001215,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595001215","product_id":100039001,"comment_content":"遵循六大设计原则的代码，属于高质量的代码","like_count":0},{"had_liked":false,"id":235203,"user_name":"prepared","can_delete":false,"product_type":"c1","uid":1194853,"ip_address":"","ucode":"00E54A5C7CDCBE","user_header":"https://static001.geekbang.org/account/avatar/00/12/3b/65/3a4fc8cf.jpg","comment_is_top":false,"comment_ctime":1594943939,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594943939","product_id":100039001,"comment_content":"注释规范很重要。没有无关注释，没有不对题的注释；有注释，而不是一大堆没注释的代码；方法简短逻辑清晰的代码，很多新手写超过500行的代码。。。","like_count":0},{"had_liked":false,"id":232460,"user_name":"幽林萌逐","can_delete":false,"product_type":"c1","uid":1520451,"ip_address":"","ucode":"E6D95EC891800F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLqrAA1j4Oyy6ibicNOicn8K0olrEjtLLanic8V0y9icia6cvCVRCiabOm5llC0WhzcSWvaI2fia75hYbvjrQ/132","comment_is_top":false,"comment_ctime":1594010489,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594010489","product_id":100039001,"comment_content":"以最少的代码 做最多的事情 是我心目中 代码量少了必然可读性高了，也更好的维护了，当然必须遵循单一职责原则，不然后期代码复用会有很大的问题。","like_count":0},{"had_liked":false,"id":228331,"user_name":"陈狄","can_delete":false,"product_type":"c1","uid":2011954,"ip_address":"","ucode":"456F00EB2EB43D","user_header":"https://static001.geekbang.org/account/avatar/00/1e/b3/32/0ee78a1a.jpg","comment_is_top":false,"comment_ctime":1592642753,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592642753","product_id":100039001,"comment_content":"我自己写代码的一个原则是奥卡姆剃刀，没有必要就不要写的很复杂","like_count":0},{"had_liked":false,"id":226512,"user_name":"小树苗","can_delete":false,"product_type":"c1","uid":1644500,"ip_address":"","ucode":"71288176D058E2","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqtnoXPFibFwKdrUibJQWYSCmAlc7FeEH5MbjiawszNgwEXAkuWKGYQMTQbnQbjlR8n9lpDgN4GQHoXQ/132","comment_is_top":false,"comment_ctime":1592126183,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592126183","product_id":100039001,"comment_content":"逻辑清晰，代码简洁，命名规范，功能单一。","like_count":0},{"had_liked":false,"id":226442,"user_name":"Chris Zou","can_delete":false,"product_type":"c1","uid":1897148,"ip_address":"","ucode":"B6DFC71C1DD8B7","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f2/bc/ffc7ad67.jpg","comment_is_top":false,"comment_ctime":1592103805,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592103805","product_id":100039001,"comment_content":"* 你觉得还有哪些其他的代码评价标准非常重要？聊一聊你心目中的好代码是什么样子的？<br>1. 功能完整：不会频繁崩溃<br>2. 阅读性好：有必要的注释，简洁，编码规范、命名，模块化<br>3. 扩展性好：容易增加功能<br>4. 维护性好：定位问题方便<br>5. 可复用：<br>6. 可测试：<br>7. 高性能：<br>8. 高安全性","like_count":0},{"had_liked":false,"id":226231,"user_name":"邹培俊","can_delete":false,"product_type":"c1","uid":1199467,"ip_address":"","ucode":"54B1AAE6BDAB33","user_header":"https://static001.geekbang.org/account/avatar/00/12/4d/6b/79642a53.jpg","comment_is_top":false,"comment_ctime":1592011182,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592011182","product_id":100039001,"comment_content":"职则边界清晰，隔离变的业务和不变的逻辑，代码工整。代码评审的时候一句话能说清楚干什么，解决什么问题。","like_count":0},{"had_liked":false,"id":224835,"user_name":"面向工资编程","can_delete":false,"product_type":"c1","uid":1618828,"ip_address":"","ucode":"07F797F021BDD0","user_header":"","comment_is_top":false,"comment_ctime":1591560928,"is_pvip":false,"replies":[{"id":"84003","content":"😂","user_name":"作者回复","comment_id":224835,"uid":"1190123","ip_address":"","utype":1,"ctime":1592526845,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1591560928","product_id":100039001,"comment_content":"为什么 KISS 中最后一个 S 代表 Stupid 而不是 Smart 呢？","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497624,"discussion_content":"😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592526845,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":220002,"user_name":"朝小树","can_delete":false,"product_type":"c1","uid":1323875,"ip_address":"","ucode":"18DC282DEF16C8","user_header":"https://static001.geekbang.org/account/avatar/00/14/33/63/2d48822a.jpg","comment_is_top":false,"comment_ctime":1590133647,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590133647","product_id":100039001,"comment_content":"大巧不工，不要为了炫技，去写一些不够简洁的代码","like_count":0},{"had_liked":false,"id":219996,"user_name":"朝小树","can_delete":false,"product_type":"c1","uid":1323875,"ip_address":"","ucode":"18DC282DEF16C8","user_header":"https://static001.geekbang.org/account/avatar/00/14/33/63/2d48822a.jpg","comment_is_top":false,"comment_ctime":1590133251,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590133251","product_id":100039001,"comment_content":"思从深而行从简；<br>赞同这句话，有时候把需求想到很清晰了，写代码就会成竹在熊，游刃有余；不用为了炫技而去写别人比较难看懂的代码，大巧不工。","like_count":0},{"had_liked":false,"id":219907,"user_name":"Geek_216fd5","can_delete":false,"product_type":"c1","uid":1602049,"ip_address":"","ucode":"EA6804E9E974B3","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLb5UK2u6RyS48ia8H2lUSlUyQEaBiclDlqpbQUWqTWeuf3Djl3ruHRN3U37GXYuWAfAW5d1xkm6F7w/132","comment_is_top":false,"comment_ctime":1590116325,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590116325","product_id":100039001,"comment_content":"优秀项目解析非常利于技术水平成长，赞一个","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503762,"discussion_content":"文章中有解释\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597408590,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":219795,"user_name":"永远不要低估一颗冠军的心","can_delete":false,"product_type":"c1","uid":1339230,"ip_address":"","ucode":"FF0DD7382CD3CA","user_header":"https://static001.geekbang.org/account/avatar/00/14/6f/5e/3f7e9ccd.jpg","comment_is_top":false,"comment_ctime":1590102147,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590102147","product_id":100039001,"comment_content":"代码评价标准还有规范的命名，想不到更多了，老师的总结已经很全面了。","like_count":0},{"had_liked":false,"id":216413,"user_name":"师哥","can_delete":false,"product_type":"c1","uid":1333376,"ip_address":"","ucode":"A86CD1661D370F","user_header":"https://static001.geekbang.org/account/avatar/00/14/58/80/c9e232b6.jpg","comment_is_top":false,"comment_ctime":1589254882,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589254882","product_id":100039001,"comment_content":"我学到的什么内容？ 我学到了 1.代码好坏的评判标准涉及到几个方面；可维护性，可读行，可扩展性，简洁，灵活性  ，复用性，可测试性。2.知道了评判标准就要按照评判标准写出高质量的代码，编写的时候要使用面向对象设计思想，设计原则，设计模式，编码规范，重构等技巧。<br>我对学到内容的感受？如果要成为一个行业从业者，这些知识要早点知道。<br>这些内容给我带来的收获是？高质量和高效代码的开端。<br>我今后会应用到哪些方面？ 马上会在我的日常工作中使用。<br>","like_count":0},{"had_liked":false,"id":214979,"user_name":"文超","can_delete":false,"product_type":"c1","uid":1673835,"ip_address":"","ucode":"9994423E67FB4C","user_header":"https://static001.geekbang.org/account/avatar/00/19/8a/6b/992dc7d1.jpg","comment_is_top":false,"comment_ctime":1588862782,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588862782","product_id":100039001,"comment_content":"1. 变量命名和函数命名的准确性；<br>2. 代码长度的控制。<br><br>上面两个是比较具体的方法","like_count":0},{"had_liked":false,"id":213953,"user_name":"JKwar","can_delete":false,"product_type":"c1","uid":1047466,"ip_address":"","ucode":"B733CA24D5701F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/aa/01fedf6c.jpg","comment_is_top":false,"comment_ctime":1588598221,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1588598221","product_id":100039001,"comment_content":"接手过一个项目，那代码看的我一言难尽，没注释，面向过程编程，策略末世都不会用，感觉掉进了坑。","like_count":0},{"had_liked":false,"id":213952,"user_name":"JKwar","can_delete":false,"product_type":"c1","uid":1047466,"ip_address":"","ucode":"B733CA24D5701F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/aa/01fedf6c.jpg","comment_is_top":false,"comment_ctime":1588598124,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1588598124","product_id":100039001,"comment_content":"代码质量的标准知道了，比我看书得到的要清晰的多。","like_count":0},{"had_liked":false,"id":213483,"user_name":"子夜2104","can_delete":false,"product_type":"c1","uid":1070286,"ip_address":"","ucode":"C4FF54AEA6002F","user_header":"https://static001.geekbang.org/account/avatar/00/10/54/ce/92029d2f.jpg","comment_is_top":false,"comment_ctime":1588430010,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588430010","product_id":100039001,"comment_content":"今天重温了第二节，什么是好的代码？我的收获有：<br><br>首先，我们需要知道的是代码好坏的评判是很主观的事情。资深工程师会觉得添加新的功能很容易实现，一下就能读懂代码的含义。但对于新手而言，代码理解起来就比较困难。可以参考一些基本的评价标准。<br>可维护性（maintainability）<br>对于一个项目来说，维护代码的时间远远大于编写代码的时间。一个项目好维护可以体现在容易Debug 、好修改老代码、方便加新功能。对于Debug而言，可行的操作是记录好日志。要想修改老代码，你得读懂老代码，最好有注释、有文档、有测试代码。候选要添加新功能，那得预留好扩展点，好添加新模块、函数等。<br>可读性（readability）<br>代码被阅读的次数远远超过被编写和执行的次数。你的同事能够读懂你的代码。这可以体现在模块划分明确，职责单一、编码规范、命名达意、注释详尽、函数长短合适等方面。<br>可扩展性（extensibilty）<br>代码中提前留好了扩展点，以后添加新功能时，可以直接开始做，不必对源代码做出很大的修改，这可以遵循开闭原则，即对扩展开放，对修改关闭。模块、类和方法在不同层面看，可以说是修改，也可以说是扩展，所以只需要最核心的部分满足开闭原则即可，不可能代码一点都不修改，就能完成新的功能。开闭原则的初衷是修改后的代码不影响现有的功能，单元测试。遵循开闭原则，行之有效的操作是封装和抽象。变化的用类来封装，不变的用接口来抽象。<br>灵活性（fexibility）<br>代码的灵活性包括是比较广泛的，比如代码易扩展、易复用、接口易用都可以体现出灵活。<br>简洁性（simplity）<br>要使代码简洁，可以遵循KISS原则(Keep It Simple，Stupid)：不要使用同事可能不懂的技术来实现代码，不要炫技；不要重复造轮子，要善于使用已经有的工具类库；不要过度优化。<br>可复用性（reusability）<br>在开发新的功能时，开发者复用现有的代码， 那么这段代码就具有可复用性。要想编写出可复用性的代码，可以遵循的原则有：单一职责原则、使用封装，继承，抽象，多态的思想、区分业务代码和通用代码、应用模板等设计模式。<br>可测试性（testability）<br>代码可以进行单元测试，要写出可测试性的代码可以遵循的原则有：解耦、多用组合、依赖注入、封装未决行为。<br>我认为的好的代码：当你写的代码，交给别人时，他很容易看懂，能够快速理解你想要表达的意思；很方便的进行测试，以理解各个模块的功能；容易扩展，添加新功能时，不出bug；不重复造轮子，可以复用你的代码。<br>要写出满足这些评价标准的高质量代码，我们需要掌握一些更加细化、更加能落地的编程方法论，包括面向对象设计思想、设计原则、设计模式、编码规范、重构技巧等。","like_count":0},{"had_liked":false,"id":209044,"user_name":"蚂蚁内推+v","can_delete":false,"product_type":"c1","uid":1050508,"ip_address":"","ucode":"24B10AEE54B3FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/07/8c/0d886dcc.jpg","comment_is_top":false,"comment_ctime":1587482290,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587482290","product_id":100039001,"comment_content":"有些时候系统的扩展性不仅仅只需要后端设计上去考虑，优秀的工程师还要站在产品的的角度去考虑，然后推动产品去改进","like_count":0},{"had_liked":false,"id":208447,"user_name":"LiJun","can_delete":false,"product_type":"c1","uid":1230243,"ip_address":"","ucode":"393B4FC43D8441","user_header":"https://static001.geekbang.org/account/avatar/00/12/c5/a3/f941c7ff.jpg","comment_is_top":false,"comment_ctime":1587360386,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587360386","product_id":100039001,"comment_content":"我心中好代码的标准是：<br>1.  易阅读，好维护。<br>2. 注释全。<br>3. 性能好。<br>个人觉得代码不仅是写给机器读的，而且是写给人看的（因为系统需要维护，升级）。","like_count":0},{"had_liked":false,"id":206553,"user_name":"孙晴鹍","can_delete":false,"product_type":"c1","uid":1641796,"ip_address":"","ucode":"314BD485CBAA8A","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqOiaQb1nAtlbXKP07HaOWQyeRfmtqj0JEIE7Q9IoDDvmriczIfKMfSfrnOiciazzHPNnaBeaTNqOhF8Q/132","comment_is_top":false,"comment_ctime":1586878749,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586878749","product_id":100039001,"comment_content":"思从深而行从简","like_count":0},{"had_liked":false,"id":203743,"user_name":"冯佳兴","can_delete":false,"product_type":"c1","uid":1717342,"ip_address":"","ucode":"41D308E99EF9FF","user_header":"https://static001.geekbang.org/account/avatar/00/1a/34/5e/089ac156.jpg","comment_is_top":false,"comment_ctime":1586261749,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586261749","product_id":100039001,"comment_content":"高内聚，低耦合，可读，可扩展。高可用，高并发，高性能<br>","like_count":0},{"had_liked":false,"id":203150,"user_name":"MrVito","can_delete":false,"product_type":"c1","uid":1252169,"ip_address":"","ucode":"716FF6F8871706","user_header":"https://static001.geekbang.org/account/avatar/00/13/1b/49/ddefc656.jpg","comment_is_top":false,"comment_ctime":1586144926,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586144926","product_id":100039001,"comment_content":"我觉得，需要尊重人脑，尊重人的思路，像命名也是一种设计原则，KISS虽然看似简单，但是要用好也不容易。可测试性也是蛮重要的，粒度需要适当，不能太小也不能太大。","like_count":0},{"had_liked":false,"id":203131,"user_name":"guan0078","can_delete":false,"product_type":"c1","uid":1090467,"ip_address":"","ucode":"53B15FF3752A40","user_header":"https://static001.geekbang.org/account/avatar/00/10/a3/a3/804fb3e9.jpg","comment_is_top":false,"comment_ctime":1586142684,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586142684","product_id":100039001,"comment_content":"代码可读性还应该有一个：代码风格的一致性。现在公司的一个系统基本没有一个人就能完全搞定，都是需要协同作业。但每个人代码风格都不一样。尤其新搭建的团队，真是一人一种写法，引用的utils也全凭自己喜好。<br>code review一直是我最喜欢的工具。就算团队没有大神坐镇，起码能快速实现代码编程风格的统一，阅读起来也会轻松一些。其实有些代码无所谓好坏，然如果风格统一，那他就是好的。","like_count":0},{"had_liked":false,"id":202507,"user_name":"爱乐之城QF","can_delete":false,"product_type":"c1","uid":1946274,"ip_address":"","ucode":"62ACCB2769BB94","user_header":"https://static001.geekbang.org/account/avatar/00/1d/b2/a2/929b6e31.jpg","comment_is_top":false,"comment_ctime":1585998008,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585998008","product_id":100039001,"comment_content":"可测试性   这点经常忽略和提及","like_count":0},{"had_liked":false,"id":202385,"user_name":"👅","can_delete":false,"product_type":"c1","uid":1335335,"ip_address":"","ucode":"3A3198E899DC6A","user_header":"https://static001.geekbang.org/account/avatar/00/14/60/27/fcc46413.jpg","comment_is_top":false,"comment_ctime":1585980894,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585980894","product_id":100039001,"comment_content":"我认为要用对合适的设计模式，就像文中说的，大道至简","like_count":0},{"had_liked":false,"id":202354,"user_name":"五行属鱼","can_delete":false,"product_type":"c1","uid":1396667,"ip_address":"","ucode":"D8D81C17730C79","user_header":"https://static001.geekbang.org/account/avatar/00/15/4f/bb/7da4906b.jpg","comment_is_top":false,"comment_ctime":1585973559,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585973559","product_id":100039001,"comment_content":"评价代码质量好坏，不能单一评价。但日常工作中，我会把代码可维护性，可扩展性，易读性，机器执行效率作为代码评价标准。公司评论代码好坏是要求，脱机换环境后仍可执行，功能完成，在此基础上尽可能执行效率高。<br>但遗憾的是，自己写出的总是觉得差点意思。经常以前的代码过段时间，注释稍微简略点，就不知道怎么写出来的了。注释详尽，deadline时间线紧，当时又太难受","like_count":0},{"had_liked":false,"id":200401,"user_name":"技术骨干","can_delete":false,"product_type":"c1","uid":1098720,"ip_address":"","ucode":"8FCF8DE6D29201","user_header":"https://static001.geekbang.org/account/avatar/00/10/c3/e0/3db22579.jpg","comment_is_top":false,"comment_ctime":1585580416,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585580416","product_id":100039001,"comment_content":"好质量一看就知道了，逻辑清晰的代码","like_count":0},{"had_liked":false,"id":198564,"user_name":"与路同飞","can_delete":false,"product_type":"c1","uid":1138821,"ip_address":"","ucode":"2985F1440A1962","user_header":"https://static001.geekbang.org/account/avatar/00/11/60/85/f72f1d94.jpg","comment_is_top":false,"comment_ctime":1585456802,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1585456802","product_id":100039001,"comment_content":"个人理解，好的代码应该读起来很清爽，层次分明，像一篇文章一样，让读的人没有歧义。另外可测试性也是一个很重要的特性，编写可测试性的代码，让后来人有了敢重构代码的勇气","like_count":0},{"had_liked":false,"id":198454,"user_name":"乐朦","can_delete":false,"product_type":"c1","uid":1938739,"ip_address":"","ucode":"C5A666DB0521E0","user_header":"https://static001.geekbang.org/account/avatar/00/1d/95/33/7d4b08ec.jpg","comment_is_top":false,"comment_ctime":1585452485,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585452485","product_id":100039001,"comment_content":"这个时候，就体现出code review的好处来了。之前自己闷头写代码，感觉写的还不错。几次code review 感觉自己写的好垃圾。之前我的同学告诉我，如果你现在看到你一个月前写的代码，感觉很垃圾。那说明，这一个月你进步了。","like_count":0},{"had_liked":false,"id":198020,"user_name":"赵毅","can_delete":false,"product_type":"c1","uid":1905585,"ip_address":"","ucode":"28F6820F1987F6","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIgDicRj9LAvWVyuibTbRnZDFeC6uWI8zfWU1gLM6yPoNklUaiar4TKxEyRHFibjIth3iahRNLcNvewjug/132","comment_is_top":false,"comment_ctime":1585407163,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585407163","product_id":100039001,"comment_content":"笔记：可维护、可读性（命名、注释、函数长短、模块划分、高内聚低耦合等）、可扩展、可复用、简洁、灵活、可测试<br>面向对象、编程规范、设计原则、设计模式、持续重构<br><br>我觉得非常重要的就是用简单的代码解决复杂的问题：<br>“思从深而行从简，真正的高手能云淡风轻地用最简单的方法解决最复杂的问题”","like_count":0},{"had_liked":false,"id":197907,"user_name":"梅梅","can_delete":false,"product_type":"c1","uid":1257085,"ip_address":"","ucode":"2437EBC71C1B0E","user_header":"","comment_is_top":false,"comment_ctime":1585403146,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585403146","product_id":100039001,"comment_content":"代码的质量的评判没有一个统一的标准，但老师总结的还是很到位的","like_count":0},{"had_liked":false,"id":197672,"user_name":"面向百度编程","can_delete":false,"product_type":"c1","uid":1732780,"ip_address":"","ucode":"8FE04A019D71D1","user_header":"https://static001.geekbang.org/account/avatar/00/1a/70/ac/83bc14c0.jpg","comment_is_top":false,"comment_ctime":1585390999,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585390999","product_id":100039001,"comment_content":"思从深而行从简，真正的高手能云淡风轻地用最简单的方法解决最复杂的问题。这是我的目标","like_count":0},{"had_liked":false,"id":197497,"user_name":"这得从我捡到一个鼠标垫开始说起","can_delete":false,"product_type":"c1","uid":1272321,"ip_address":"","ucode":"2FF4347B4E7A9B","user_header":"https://static001.geekbang.org/account/avatar/00/13/6a/01/d9cb531d.jpg","comment_is_top":false,"comment_ctime":1585381985,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1585381985","product_id":100039001,"comment_content":"可维护可扩展可读性确实是最重要的三个点。","like_count":0},{"had_liked":false,"id":196517,"user_name":"余结","can_delete":false,"product_type":"c1","uid":1272016,"ip_address":"","ucode":"6F852213FC8E8A","user_header":"https://static001.geekbang.org/account/avatar/00/13/68/d0/cc05745c.jpg","comment_is_top":false,"comment_ctime":1585289026,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585289026","product_id":100039001,"comment_content":"掌握方法原理，反复实践。","like_count":0},{"had_liked":false,"id":195010,"user_name":"屴","can_delete":false,"product_type":"c1","uid":1406688,"ip_address":"","ucode":"512BDF75C5BEDA","user_header":"https://static001.geekbang.org/account/avatar/00/15/76/e0/95be78a9.jpg","comment_is_top":false,"comment_ctime":1585127686,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585127686","product_id":100039001,"comment_content":"其实我在实践中发现，能写好的代码的人一定是对业务非常了解的人。毕竟世界上没有银弹，有得必有失。","like_count":0},{"had_liked":false,"id":191061,"user_name":"不学不行啊","can_delete":false,"product_type":"c1","uid":1335474,"ip_address":"","ucode":"69368165141C2D","user_header":"https://static001.geekbang.org/account/avatar/00/14/60/b2/ccebcb71.jpg","comment_is_top":false,"comment_ctime":1584721097,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584721097","product_id":100039001,"comment_content":"面向对象中的继承、多态能让我们写出可复用的代码；编码规范能让我们写出可读性好的代码；设计原则中的单一职责、DRY、基于接口而非实现、里式替换原则等，可以让我们写出可复用、灵活、可读性好、易扩展、易维护的代码；设计模式可以让我们写出易扩展的代码；持续重构可以时刻保持代码的可维护性等等","like_count":0},{"had_liked":false,"id":190314,"user_name":"不能忍的地精","can_delete":false,"product_type":"c1","uid":1754913,"ip_address":"","ucode":"66A921C0BC8102","user_header":"","comment_is_top":false,"comment_ctime":1584628559,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584628559","product_id":100039001,"comment_content":"我心目中的好代码是为了需求变更而设计的，随时应对变化，而不是僵直，不灵活的代码，一但产品有了新的需求，我只需要添加几个新类就能搞定，而不是修改一大堆代码，容易阅读","like_count":0},{"had_liked":false,"id":190235,"user_name":"Geek_032104","can_delete":false,"product_type":"c1","uid":1298282,"ip_address":"","ucode":"25542A2348F99F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/G61OS6hibNG7iakUmXeKmcY5VtFWnPpywzjOcUCm3t0HsibCibm3jzLNbdvjKQ8G8WSIkicBiaqoCsvHibn3M7wV4YbrA/132","comment_is_top":false,"comment_ctime":1584619996,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584619996","product_id":100039001,"comment_content":"可读，可扩展，易测试","like_count":0},{"had_liked":false,"id":189079,"user_name":"酸辣土豆丝","can_delete":false,"product_type":"c1","uid":1751234,"ip_address":"","ucode":"0E3E4AFB31E1E6","user_header":"https://static001.geekbang.org/account/avatar/00/1a/b8/c2/d1904d74.jpg","comment_is_top":false,"comment_ctime":1584454355,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584454355","product_id":100039001,"comment_content":"整体上简洁，有注释，代码命名见字知意","like_count":0},{"had_liked":false,"id":189035,"user_name":"治慧","can_delete":false,"product_type":"c1","uid":1245904,"ip_address":"","ucode":"47C331EF63EDC6","user_header":"https://static001.geekbang.org/account/avatar/00/13/02/d0/8abab63f.jpg","comment_is_top":false,"comment_ctime":1584448951,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584448951","product_id":100039001,"comment_content":"笔记:个人觉得好的代码从方法名称上就能知道作者要表达的意思,不需要额外过多的注释来修饰;在则就是性能上的优化和可维护性要强 多反省自己写的代码和把代码给大神review能学到很多的东西,从小事做起","like_count":0},{"had_liked":false,"id":187939,"user_name":"wakaka","can_delete":false,"product_type":"c1","uid":1471508,"ip_address":"","ucode":"835A7341577D3B","user_header":"https://static001.geekbang.org/account/avatar/00/16/74/14/ea854bfc.jpg","comment_is_top":false,"comment_ctime":1584280819,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584280819","product_id":100039001,"comment_content":"好代码都是有共性的，差代码千差万别。","like_count":0},{"had_liked":false,"id":187422,"user_name":"Run","can_delete":false,"product_type":"c1","uid":1371941,"ip_address":"","ucode":"6738D2F36ACFF6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLMDBq7lqg9ZasC4f21R0axKJRVCBImPKlQF8yOicLLXIsNgsZxsVyN1mbvFOL6eVPluTNgJofwZeA/132","comment_is_top":false,"comment_ctime":1584106826,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584106826","product_id":100039001,"comment_content":"算法之美还没领悟，就来设计之美了","like_count":0},{"had_liked":false,"id":185832,"user_name":"墨鱼","can_delete":false,"product_type":"c1","uid":1022720,"ip_address":"","ucode":"8FB5E4DCB8A024","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9b/00/654be3f7.jpg","comment_is_top":false,"comment_ctime":1583690149,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583690149","product_id":100039001,"comment_content":"可以评判好代码的维度有很多,比如易读,可扩展,易维护,易复用等,虽然里面有些标准甚至是有矛盾的,需要我们根据情况进行选择.不过可维护,可扩展,可读写这个三个是最重要的.像我们以前公司,根本没有单元测试等 ,所以不考虑可测试性<br><br>写出质量高的代码,写之前就要考虑好代码怎么写,后期有没有新增需要(可扩展),别人或者自己以后能不能轻松看懂这个代码(可读写),这个东西以后是不是能复用带别的地方(可复用性)<br><br>最后是一定要有 code review.这个是最重要的,也是防止坏代码的最后手段","like_count":0},{"had_liked":false,"id":184693,"user_name":"Presley","can_delete":false,"product_type":"c1","uid":1215219,"ip_address":"","ucode":"D8F125835F4903","user_header":"https://static001.geekbang.org/account/avatar/00/12/8a/f3/7c89d00e.jpg","comment_is_top":false,"comment_ctime":1583383195,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583383195","product_id":100039001,"comment_content":"我心中的好代码，层次清晰，基本上不太用注释","like_count":0},{"had_liked":false,"id":184576,"user_name":"融梨","can_delete":false,"product_type":"c1","uid":1033405,"ip_address":"","ucode":"66D0A4054612C6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/bd/72180435.jpg","comment_is_top":false,"comment_ctime":1583346995,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583346995","product_id":100039001,"comment_content":"对什么是好代码的定义，我感觉自己并不知道，自己写了两年多前端代码，汗颜阿。","like_count":0},{"had_liked":false,"id":183449,"user_name":"新的起点，新的开始^_^","can_delete":false,"product_type":"c1","uid":1262068,"ip_address":"","ucode":"9C0810F472AC93","user_header":"https://static001.geekbang.org/account/avatar/00/13/41/f4/5df17eff.jpg","comment_is_top":false,"comment_ctime":1583044091,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583044091","product_id":100039001,"comment_content":"个人理解，好的代码具有的特点：<br>1.执行效率高<br>2.占用内存少<br>3.易读，易扩展，易维护<br>4.可复用","like_count":0},{"had_liked":false,"id":181761,"user_name":"雷刚","can_delete":false,"product_type":"c1","uid":1655725,"ip_address":"","ucode":"115FE2BE1AAB61","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/pTD8nS0SsORKiaRD3wB0NK9Bpd0wFnPWtYLPfBRBhvZ68iaJErMlM2NNSeEibwQfY7GReILSIYZXfT9o8iaicibcyw3g/132","comment_is_top":false,"comment_ctime":1582630169,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582630169","product_id":100039001,"comment_content":"就上面的这些原则，谈谈我最近阅读一些开源框架的感受。个人认为最重要的三个原则是可读可维护可测性。<br>（1）可读性。要求代码简洁，结构清晰。比如 spring-beans 这个包，最核心的接口就是 BeanFactory 这个类，spring-context 核心接口是 ApplicationContext。在这些包中所有的功能都是围绕这个接口而展开，你甚至不用看具体的实现，就知道它的功能是干什么的。代码的可读性就非常强，甚至可以说是简单，正如 KISS 原则：“Keep It Simple，Stupid”，代码简单、逻辑清晰。<br>（2）可维护性。设计原则的重要一条就是开闭原则：对修改闭合，对扩展开放。这要求我们面向接口编程，模块之间解耦。<br>（3）可测性。以前我基本上不写单元测试，直接debug调试后上线。但后来源码看多了，也发现测试很重要，对这一块也逐渐重视起来。比我看源码时，如果发现有那个类的功能不太懂，直接看单元测试，一下就明白了。单元测试好写，同时也说明你的代码解耦做的好。<br>最后，一句话总结：好看的代码千篇一律，垃圾的代码花样百出。<br>","like_count":0},{"had_liked":false,"id":181248,"user_name":"Geek_4eeff6","can_delete":false,"product_type":"c1","uid":1681947,"ip_address":"","ucode":"C1B40B950F9D17","user_header":"https://static001.geekbang.org/account/avatar/00/19/aa/1b/9303452a.jpg","comment_is_top":false,"comment_ctime":1582527255,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582527255","product_id":100039001,"comment_content":"我感觉还应该考虑到 可能会存在的并发，代码的运行时间、以及内存方面的问题","like_count":0},{"had_liked":false,"id":181186,"user_name":"悠游","can_delete":false,"product_type":"c1","uid":1222834,"ip_address":"","ucode":"4FDDDDF29AE3F0","user_header":"https://static001.geekbang.org/account/avatar/00/12/a8/b2/998448ca.jpg","comment_is_top":false,"comment_ctime":1582514216,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582514216","product_id":100039001,"comment_content":"易维护、可扩展、可读性、灵活性、简洁性、可复用性、可测试性","like_count":0},{"had_liked":false,"id":179215,"user_name":"Heaven","can_delete":false,"product_type":"c1","uid":1694207,"ip_address":"","ucode":"FA33FBCC66C911","user_header":"https://static001.geekbang.org/account/avatar/00/19/d9/ff/b23018a6.jpg","comment_is_top":false,"comment_ctime":1581938207,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581938207","product_id":100039001,"comment_content":"在开发过程中,像是使用Idea或者Eclipse时候,减少出现的黄色警告,也是重要的一环.即为,减少使用不确定的类型,避免使用过期的类或者方法","like_count":0},{"had_liked":false,"id":178903,"user_name":"小伟","can_delete":false,"product_type":"c1","uid":1043401,"ip_address":"","ucode":"B631E56A112BDC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/eb/c9/b1b233cf.jpg","comment_is_top":false,"comment_ctime":1581850879,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581850879","product_id":100039001,"comment_content":"<br>打卡：<br>除了我今天提到的这些，你觉得还有哪些其他的代码评价标准非常重要？聊一聊你心目中的好代码是什么样子的？<br>答：<br>好的命名规范：快速读懂代码。<br>可测试性：保证代码质量；为不断重构提供方便。<br>可扩展性：对未来可预期的功能非常方便就能支持。<br><br>其他的指标：简洁、可复用、高性能等，我认为大部分都可以通过逐渐迭代来实现；","like_count":0},{"had_liked":false,"id":177964,"user_name":"秀丽","can_delete":false,"product_type":"c1","uid":1402332,"ip_address":"","ucode":"9872272B8056F5","user_header":"https://static001.geekbang.org/account/avatar/00/15/65/dc/0737102d.jpg","comment_is_top":false,"comment_ctime":1581563040,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581563040","product_id":100039001,"comment_content":"代码写的好的7点评价标准 = 3目标（可维护性+可读性+可扩展性）+2心法（灵活性+简洁性）+2招式（可复用性+可测试性）<br><br>代码写得好，感觉便于别人调用很重要，比如可以自动生成接口文档，便于别人理解这些接口，省去了很多与别人沟通的成本。<br><br>","like_count":0},{"had_liked":false,"id":177766,"user_name":"未来小娃","can_delete":false,"product_type":"c1","uid":1047329,"ip_address":"","ucode":"477D166EBB6B70","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/21/d017438c.jpg","comment_is_top":false,"comment_ctime":1581494670,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1581494670","product_id":100039001,"comment_content":"【设计模式笔记3】20200212<br>文章提到了很多评价标准，也许很多都或多或少接触过，我觉得好代码首先得是有价值的，也就是能切实解决问题的，不然空谈可读性可扩展性有什么意义；其次好代码得简洁，简洁通俗地理解就是虽然代码很复杂，但看上去很舒服，感觉像是一件艺术品（个人yy）；然后是可扩展，为什么？你想想啊，可扩展就意味着修改和新增风险都很小，我们写代码的不就希望自己写的代码线上不出问题嘛。接着是可复用，我写代码有个习惯看到有重复代码就起鸡皮疙瘩，必须没有一行重复代码才作罢，倒不是我的习惯有问题，因为重复代码必然意味着有优化的空间，既然发现了为啥不多做一步呢，不会一个快捷键的事嘛，耽误不了你几秒钟的。接着是鲁棒性，鲁棒性就意味着写代码不能只考虑正常分支还得考虑异常分支，如果一段代码没有任何异常分支绝对是有问题的，我们暂不论是否会出现异常分支，没有异常分支首先就表明你思考问题不全面，你愿意和一个思考不全面的人协作么，因为除了问题你还得背锅（血淋淋的例子啊）。接着是可测试性，为什么？代码写完了你不能直接发版吧，不先得测测不是？那么测试点覆盖是否全面就能间接表明你思考问题的点是否MICE，比如刚才的正常分支和异常分支，可能还有兜底分支等等都是好代码的体现。这里说个例子，阿里巴巴有道面试算法题的评判标准就包括正确性、测试用例完整性、代码健壮性。最后是可读性，为啥放到最后？刚才说的简洁某种程度已经包括了可读性，复杂的代码可读性通常不会很好。","like_count":0},{"had_liked":false,"id":177311,"user_name":"freesocean","can_delete":false,"product_type":"c1","uid":1529210,"ip_address":"","ucode":"CAD4C80CF569D3","user_header":"https://static001.geekbang.org/account/avatar/00/17/55/7a/d44df1d6.jpg","comment_is_top":false,"comment_ctime":1581345232,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581345232","product_id":100039001,"comment_content":"可读性（能懂），可扩展（能动），效率高，便于测试","like_count":0},{"had_liked":false,"id":177052,"user_name":"88591","can_delete":false,"product_type":"c1","uid":1254656,"ip_address":"","ucode":"04CE3E46455185","user_header":"https://static001.geekbang.org/account/avatar/00/13/25/00/3afbab43.jpg","comment_is_top":false,"comment_ctime":1581257333,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581257333","product_id":100039001,"comment_content":"老师提到的标准，也就是程序设计需要达到的目的。设计模式是实现这样的标准（目的）的一种通用的方法","like_count":0},{"had_liked":false,"id":176166,"user_name":"Geek_bb89c3","can_delete":false,"product_type":"c1","uid":1331828,"ip_address":"","ucode":"0F97B5B0F2DDD6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/IZKGetBZDuMEa2VwwtesTELvLORIyV749ItgfAqNPv30n4zEv71wuGNr1aNVIVltG0icvH53DHDuqPuzNpiauWAg/132","comment_is_top":false,"comment_ctime":1580977222,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580977222","product_id":100039001,"comment_content":"好的代码有主观性，但是还是有一些标准的。主要是：可维护性，可读性，可扩展，简洁，复用，已测试。<br>可维护性：当修改代码的时候引入bug的概率会非常的低，其中bug包括当前的代码范围内的bug,以及依赖当前代码的代码中出现的bug<br>可读性：代码易于阅读，容易理解，这里需要编码规范来帮助实现。<br>可扩展性：系统中留下了足够的扩展点当系统，当需要扩展的时候只需要添加扩展性就好。<br>简洁性：系统足够简单，思从深行从简，将事情做得足够简单。<br>易复用：代码足够内部，原子，易于复用。<br>可测试性：系统易于测试，验证当前系统的正确性。如果不容易测试，往往是系统设计的有问题。<br>需要完成系统的高质量代码：需要掌握：各种设计思想，设计原则，设计模式，编码规范，面向对象的各种元素，系统重构的技巧等。","like_count":0},{"had_liked":false,"id":175691,"user_name":"张理查","can_delete":false,"product_type":"c1","uid":1003152,"ip_address":"","ucode":"1F93E631CD4B35","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4e/90/a8d19e7b.jpg","comment_is_top":false,"comment_ctime":1580801119,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580801119","product_id":100039001,"comment_content":"02.这一节主要讲了什么是好的代码，我们从众多的形容词中挑选了几个有代表性的。首先就是可维护性，可维护最直接的体现就是我改一个bug会多快，会不会牵一发而动全身；第二是可读性与简洁性，就是大牛能不能看懂你的代码，会不会code review的时候一脸懵逼，我觉得可读性和简洁性有关联，简洁的代码通常是可读的，而简洁的心法就是不要炫技，注重逻辑和易读。第三是可扩展性、可复用性和灵活性，就是你的代码有没有为后人（有时后人就是你自己）着想，你是创造出了乐高积木，还是创造出了代码黑洞。最后第四点就是可测试性，如果连写测试都是十分困难的，多半说明你的代码设计有问题。除了这些形容词，还要掌握一些更细化的方法论，比如面向对象的设计思想、设计原则、设计模式、编码规范、重构技巧等。","like_count":0},{"had_liked":false,"id":172916,"user_name":"linker","can_delete":false,"product_type":"c1","uid":1803259,"ip_address":"","ucode":"6C5799F2FC2C82","user_header":"https://static001.geekbang.org/account/avatar/00/1b/83/fb/621adceb.jpg","comment_is_top":false,"comment_ctime":1579357745,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579357745","product_id":100039001,"comment_content":"1:时空复杂度<br>2:圈复杂度","like_count":0},{"had_liked":false,"id":172293,"user_name":"M","can_delete":false,"product_type":"c1","uid":1810576,"ip_address":"","ucode":"06F26E1D62E9C9","user_header":"https://wx.qlogo.cn/mmopen/vi_32/eLNeJNaEkwGSK7xvtamMibVLMy2MpbIqX3iaEhT7JtSnTRMRTwZ2j4HX7WAapiashbiaBDVriaXKSP0Oeic6ZAEVEXag/132","comment_is_top":false,"comment_ctime":1579145609,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579145609","product_id":100039001,"comment_content":"思从深而行从简，真正的高手能云淡风轻地用最简单的方法解决最复杂的问题。这也是一个编程老手跟编程新手的本质区别之一。","like_count":0},{"had_liked":false,"id":171668,"user_name":"Will","can_delete":false,"product_type":"c1","uid":1440599,"ip_address":"","ucode":"15E7715ADDABE3","user_header":"https://static001.geekbang.org/account/avatar/00/15/fb/57/258a7ff6.jpg","comment_is_top":false,"comment_ctime":1578988434,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578988434","product_id":100039001,"comment_content":"接口灵活满足多种场景，那不是让一个接口承担的责任太重了，不满足单一职责原则","like_count":0},{"had_liked":false,"id":171353,"user_name":"好饿早知道送外卖了","can_delete":false,"product_type":"c1","uid":1132304,"ip_address":"","ucode":"AED22DB5BF8FC7","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/10/2d673601.jpg","comment_is_top":false,"comment_ctime":1578906946,"is_pvip":false,"discussion_count":0,"race_medal":2,"score":"1578906946","product_id":100039001,"comment_content":"对于可扩展性、今天在项目里发现个问题。<br>流程内的单个动作的具体操作，是通过ifelse判断的，但是有很多动作。<br>导致添加一个新的操作，需要修添加好多个位置的ifelse~<br>虽然单个动作里ifelse看着清晰，但是放到整体就很难扩展了","like_count":0},{"had_liked":false,"id":170960,"user_name":"Moloch","can_delete":false,"product_type":"c1","uid":1760947,"ip_address":"","ucode":"B0046D601CC7C7","user_header":"","comment_is_top":false,"comment_ctime":1578800208,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578800208","product_id":100039001,"comment_content":"根据自己现在的能力来看：代码的可读性、可重复性、简洁、可测试性这几个在当前的几个项中涉及得更多一些。","like_count":0},{"had_liked":false,"id":170602,"user_name":"HoshinoKanade","can_delete":false,"product_type":"c1","uid":1770245,"ip_address":"","ucode":"AA8B4F90FB9E5F","user_header":"https://static001.geekbang.org/account/avatar/00/1b/03/05/140068f9.jpg","comment_is_top":false,"comment_ctime":1578643158,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578643158","product_id":100039001,"comment_content":"小的項目用直覺就能判斷，但是到大型項目裡莫名跪了。","like_count":0},{"had_liked":false,"id":170505,"user_name":"晓杉","can_delete":false,"product_type":"c1","uid":1209336,"ip_address":"","ucode":"19E634BB61A165","user_header":"https://static001.geekbang.org/account/avatar/00/12/73/f8/dbd2fa50.jpg","comment_is_top":false,"comment_ctime":1578622632,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578622632","product_id":100039001,"comment_content":"我心中的好代码首先是可读。<br>然后有设计文档，自解释性强，层次清晰，交互方式规范，未来扩展性不会太差。即使重构，也简单可拆解复用。","like_count":0},{"had_liked":false,"id":170501,"user_name":"晓杉","can_delete":false,"product_type":"c1","uid":1209336,"ip_address":"","ucode":"19E634BB61A165","user_header":"https://static001.geekbang.org/account/avatar/00/12/73/f8/dbd2fa50.jpg","comment_is_top":false,"comment_ctime":1578622333,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578622333","product_id":100039001,"comment_content":"高手不做选择题，好与不好，0和1不是评价标准而是结果。<br>凡评价，都要有一个指标，对每个指标进行打分，给出综合评分，定义好与坏的程度。<br>作者文中给出了7个指标，以后的评价可根据7个指标纬度进行评价，打分","like_count":0},{"had_liked":false,"id":169840,"user_name":"夕林语","can_delete":false,"product_type":"c1","uid":1264180,"ip_address":"","ucode":"B57681D0C73E1B","user_header":"https://static001.geekbang.org/account/avatar/00/13/4a/34/1faac99b.jpg","comment_is_top":false,"comment_ctime":1578454895,"is_pvip":false,"discussion_count":0,"race_medal":2,"score":"1578454895","product_id":100039001,"comment_content":"我觉得可读性是非常重要的评价标准，实际项目中经常会面临人员更替的问题，新人进来接手老人代码，可读性好的代码可以快速上手。<br>可读性好的代码我认为有以下几点要素：<br>1.方法、变量命名比较规范；<br>2.逻辑层次清晰；<br>3.注释详尽；<br>4.方法划分以及行数控制合理","like_count":0},{"had_liked":false,"id":169404,"user_name":"意","can_delete":false,"product_type":"c1","uid":1129311,"ip_address":"","ucode":"A4B0C03248EA77","user_header":"https://static001.geekbang.org/account/avatar/00/11/3b/5f/a2c78423.jpg","comment_is_top":false,"comment_ctime":1578327868,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578327868","product_id":100039001,"comment_content":"可维护性  ","like_count":0},{"had_liked":false,"id":166094,"user_name":"原点","can_delete":false,"product_type":"c1","uid":1204499,"ip_address":"","ucode":"E662FD2B62B8A9","user_header":"https://static001.geekbang.org/account/avatar/00/12/61/13/dd987817.jpg","comment_is_top":false,"comment_ctime":1577398097,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1577398097","product_id":100039001,"comment_content":"可能水平有限，我觉得老师这节课讲的七个标准记牢靠，写代码时常常反思运用就很受用啦。<br><br>引用：<br>最常用到几个评判代码质量的标准是：可维护性、可读性、可扩展性、灵活性、简洁性、可复用性、可测试性。其中，可维护性、可读性、可扩展性又是提到最多的、最重要的三个评价标准。","like_count":0},{"had_liked":false,"id":165415,"user_name":"铁血柔情","can_delete":false,"product_type":"c1","uid":1124220,"ip_address":"","ucode":"F09CACF06B8D05","user_header":"https://static001.geekbang.org/account/avatar/00/11/27/7c/463d4342.jpg","comment_is_top":false,"comment_ctime":1577235236,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577235236","product_id":100039001,"comment_content":"老师所说的几点已经涵盖了代码评判标准，还有一点就是代码的稳定性，好的代码就是刚工作的新人能够读懂你的代码，并且有种醍醐灌顶的感觉。","like_count":0},{"had_liked":false,"id":165316,"user_name":"桂城老托尼","can_delete":false,"product_type":"c1","uid":1306032,"ip_address":"","ucode":"139E4B8EE88B79","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcxSpNMqwqyicMvdOSr9ic0p1ABiauHnv7g7YQVSJuoHPoQbYDu3YzdpgmSAk2KricUBQ5yibWBWIq75w/132","comment_is_top":false,"comment_ctime":1577199472,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577199472","product_id":100039001,"comment_content":"心目中的好代码，多一点设计腻，少一点设计柴，没有过度设计，行文恰到好处，读起来通俗易懂。","like_count":0},{"had_liked":false,"id":164327,"user_name":"那些真真实实","can_delete":false,"product_type":"c1","uid":1242333,"ip_address":"","ucode":"53BBF975B7F155","user_header":"https://static001.geekbang.org/account/avatar/00/12/f4/dd/b0206d86.jpg","comment_is_top":false,"comment_ctime":1576937295,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576937295","product_id":100039001,"comment_content":"其实好的代码，相当于城市规划或者是国家战略方向。以超前的眼光，预见未来的可能。让后来者在已经划分好的地方发展，而不是重新花费时间选择。<br>代码上，可以说以后会有的扩展、修复、安全、变动等其它事项，都预留好了位置。不需要对现有结构做出很大调整。","like_count":0},{"had_liked":false,"id":163864,"user_name":"黄政","can_delete":false,"product_type":"c1","uid":1345630,"ip_address":"","ucode":"9076A1BF7BB051","user_header":"https://static001.geekbang.org/account/avatar/00/14/88/5e/cc916a2b.jpg","comment_is_top":false,"comment_ctime":1576813650,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1576813650","product_id":100039001,"comment_content":"代码评价标准： 简洁，优雅，性能高效，功能间独立","like_count":0},{"had_liked":false,"id":163613,"user_name":"请叫我和尚","can_delete":false,"product_type":"c1","uid":1703256,"ip_address":"","ucode":"33A8A1CDA103F9","user_header":"https://static001.geekbang.org/account/avatar/00/19/fd/58/1af629c7.jpg","comment_is_top":false,"comment_ctime":1576755647,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1576755647","product_id":100039001,"comment_content":"很多经常被别人调用的类、方法、接口真得最重要了，因为当这个方法被调用很多次之后，再改这个，就会非常麻烦，以至于就不改了，就变成以后每个人都会说的的遗留问题","like_count":0},{"had_liked":false,"id":160933,"user_name":"胖子","can_delete":false,"product_type":"c1","uid":1037760,"ip_address":"","ucode":"E6371346288A87","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLIuRQaZX70dsBg6khub2VPM1eQAP9IWRWxgOFed3ia4kXyNJInFRicWJ0ibf2YmLsOvJa1sGygGpmJg/132","comment_is_top":false,"comment_ctime":1576064031,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576064031","product_id":100039001,"comment_content":"好代码应自然反映业务模型。随着互联网应用的蓬勃发展代码的安全性日益凸显。","like_count":0},{"had_liked":false,"id":160229,"user_name":"看，世界倒着","can_delete":false,"product_type":"c1","uid":1021951,"ip_address":"","ucode":"FFBFF8E4B63ED6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/97/ff/df9cb5b9.jpg","comment_is_top":false,"comment_ctime":1575895162,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575895162","product_id":100039001,"comment_content":"先达成review共识，易读，个人觉得应该排高优先级","like_count":0},{"had_liked":false,"id":160112,"user_name":"蜗牛","can_delete":false,"product_type":"c1","uid":1086220,"ip_address":"","ucode":"01CC18F12E556D","user_header":"https://static001.geekbang.org/account/avatar/00/10/93/0c/0a6a0d5e.jpg","comment_is_top":false,"comment_ctime":1575871968,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575871968","product_id":100039001,"comment_content":"性能好的代码","like_count":0},{"had_liked":false,"id":157528,"user_name":"金霖","can_delete":false,"product_type":"c1","uid":1322362,"ip_address":"","ucode":"8CFE41BEEB5EF7","user_header":"https://static001.geekbang.org/account/avatar/00/14/2d/7a/3a37efe4.jpg","comment_is_top":false,"comment_ctime":1575186812,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575186812","product_id":100039001,"comment_content":"看到作者列出的一些代码质量评价指标，联想到以下几个跟代码质量相关的点：<br>1、不同的编程语言可能在一些指标方面就有天然的优势或者劣势。可能选择某些语言的原因就有-该语言天然的容易达到这个方面的高质量；<br>2、如果你的常用&#47;工作的编程语言有某些优势特性，善于利用就容易写出高质量的代码；<br>3、编码经验丰富的人，不管用的是哪门语言（熟悉的代码）都容易出高质量的代码，我想他们应该是有语言无关的编程方法论指导，所以在使用不同语言的时候也可以轻松的扬长避短。","like_count":0},{"had_liked":false,"id":157197,"user_name":"王盛武","can_delete":false,"product_type":"c1","uid":1182516,"ip_address":"","ucode":"DE7EF246D3DCE8","user_header":"https://static001.geekbang.org/account/avatar/00/12/0b/34/f41d73a4.jpg","comment_is_top":false,"comment_ctime":1575079327,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575079327","product_id":100039001,"comment_content":"有个框架库，所有类 方法 成员 全部一个不漏final。  老师怎么看","like_count":0},{"had_liked":false,"id":156884,"user_name":"蓝思绪","can_delete":false,"product_type":"c1","uid":1361693,"ip_address":"","ucode":"2D8CE718DEAD96","user_header":"https://static001.geekbang.org/account/avatar/00/14/c7/1d/048dc01a.jpg","comment_is_top":false,"comment_ctime":1574991753,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574991753","product_id":100039001,"comment_content":"可维护性就是修改bug的时候引入新bug的风险小，bug修复，添加修改新功能能够快速完成。<br>可读性就是同事能否轻松读懂你写的代码<br>可扩展性对修改关闭，对扩展开放<br>灵活性，代码易拓展，易复用<br>简洁性，简单的代码实现复杂的功能<br>可复用性， dont repeat yourself<br>抄一遍加深印象","like_count":0},{"had_liked":false,"id":156632,"user_name":"大给给","can_delete":false,"product_type":"c1","uid":1238618,"ip_address":"","ucode":"69B6FBE9E81467","user_header":"https://static001.geekbang.org/account/avatar/00/12/e6/5a/377dc4bf.jpg","comment_is_top":false,"comment_ctime":1574927081,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574927081","product_id":100039001,"comment_content":"没太明白可扩展性和灵活性的区别呢，小争哥","like_count":0},{"had_liked":false,"id":155776,"user_name":"禅若静水","can_delete":false,"product_type":"c1","uid":1266038,"ip_address":"","ucode":"5028D28106963C","user_header":"https://static001.geekbang.org/account/avatar/00/13/51/76/ad8115b0.jpg","comment_is_top":false,"comment_ctime":1574754291,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574754291","product_id":100039001,"comment_content":"个人理解，代码质量评判应该加入<br>1. 易于debug, 代码文档齐全详尽<br>2. 高性能；<br>3. 稳定性好；<br>4. 兼容性<br>","like_count":0},{"had_liked":false,"id":154630,"user_name":"迷羊","can_delete":false,"product_type":"c1","uid":1286251,"ip_address":"","ucode":"85AF8CED3436C8","user_header":"https://static001.geekbang.org/account/avatar/00/13/a0/6b/0a21b2b8.jpg","comment_is_top":false,"comment_ctime":1574496418,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574496418","product_id":100039001,"comment_content":"感觉这节被几个名词绕晕了，可扩展性、可读性、可维护性。。。最后啥也没记住","like_count":0},{"had_liked":false,"id":154547,"user_name":"张鼎松","can_delete":false,"product_type":"c1","uid":1063160,"ip_address":"","ucode":"061F86EA9AA93D","user_header":"https://static001.geekbang.org/account/avatar/00/10/38/f8/b7ae7c6d.jpg","comment_is_top":false,"comment_ctime":1574478655,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574478655","product_id":100039001,"comment_content":"字字珠玑，通俗易懂，通篇没有一句废话。服了！","like_count":0},{"had_liked":false,"id":154451,"user_name":"Geek_212c40","can_delete":false,"product_type":"c1","uid":1746216,"ip_address":"","ucode":"93335D388232BA","user_header":"https://static001.geekbang.org/account/avatar/00/1a/a5/28/9dd784ec.jpg","comment_is_top":false,"comment_ctime":1574432984,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574432984","product_id":100039001,"comment_content":"我认为，代码即注释是一个衡量标准，应该也属于易读行，不用加多余的注释读者就能轻松理解代码逻辑个要实现的功能","like_count":0},{"had_liked":false,"id":154200,"user_name":"hungery","can_delete":false,"product_type":"c1","uid":1349902,"ip_address":"","ucode":"5CE6E6C1DB073E","user_header":"https://static001.geekbang.org/account/avatar/00/14/99/0e/cf461038.jpg","comment_is_top":false,"comment_ctime":1574390537,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574390537","product_id":100039001,"comment_content":"     最常用到几个评判代码质量的标准是：可维护性、可读性、可扩展性、灵活性、简洁性、可复用性、可测试性。其中，可维护性、可读性、可扩展性又是提到最多的、最重要的三个评价标准。<br>     要写出高质量代码，我们就需要掌握一些更加细化、更加能落地的编程方法论，这就包含面向对象设计思想、设计原则、设计模式、编码规范、重构技巧等等","like_count":0},{"had_liked":false,"id":154008,"user_name":"千锤百炼领悟之极限","can_delete":false,"product_type":"c1","uid":1744257,"ip_address":"","ucode":"224B5CF2101716","user_header":"https://static001.geekbang.org/account/avatar/00/1a/9d/81/d748b7eb.jpg","comment_is_top":false,"comment_ctime":1574346193,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574346193","product_id":100039001,"comment_content":"可维护性，可读性，可扩展性，灵活性，简洁性，可重用性，可测试性。🍸","like_count":0},{"had_liked":false,"id":153787,"user_name":"捕风捉影","can_delete":false,"product_type":"c1","uid":1713935,"ip_address":"","ucode":"E7F75B2521C8CF","user_header":"https://static001.geekbang.org/account/avatar/00/1a/27/0f/4af4daff.jpg","comment_is_top":false,"comment_ctime":1574307423,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574307423","product_id":100039001,"comment_content":"1.我自己心中认为的优质代码：<br>1.1 分层明显，条理清晰，至少让人看了可以大致知道你的脉络、架构设计。最好可以在代码的起始，说一下大致的架构，让阅读着有一个大致的轮廓感。 另可注释自己平时的命名习惯，或者常用逻辑。当然这个注释更多是我自己的一个习惯，似乎有些强人所难。<br>1.2 对于代码bug的捕捉，最好给出明确的提示，有助于解决问题。<br>2.从本篇学到的知识点：<br>2.2 以前的好代码定义比较模糊，没有一个具体的概念，或者说自己描述不出来，现在大致有了，可读性—可维护性—可扩展性—-可测试性—-简洁性—灵活性—-可复用性。<br>2.2 以后更多按照这个顺序、从这些层面上去思考自己写的代码，更多的是需要多练习，多思考。<br>写代码的时候，想象一个人在你的身边，他要用它，他会怎么想","like_count":0},{"had_liked":false,"id":153586,"user_name":"被讨厌的勇气","can_delete":false,"product_type":"c1","uid":1547913,"ip_address":"","ucode":"AE3B3CA27D91A2","user_header":"https://static001.geekbang.org/account/avatar/00/17/9e/89/6e9c05d6.jpg","comment_is_top":false,"comment_ctime":1574263432,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574263432","product_id":100039001,"comment_content":"##坚持打卡##<br><br>想要写出高质量的代码，首先要熟悉高质量的代码有哪些特征。<br><br>可维护性：在不改变原有代码设计、不引入新bug的情况下，能够快速的添加或修改代码。<br>可扩展性：在不修改或少量修改原有代码的情况下，通过扩展的方式添加新的功能代码。<br>可读性：是否符合编码规范、命名是否达意、注释是否详尽、函数是否长度合适、模块划分是否清晰、是否高内聚低耦合等等。<br>简洁性：Keep it Simple，Stupid.<br>灵活性：比较宽泛，易于添加新功能、容易复用。<br>可复用性：尽量减少重复代码的编写，复用已有的代码。<br><br>对“源代码即设计”有了更深的理解，上述特性都是基于代码。","like_count":0},{"had_liked":false,"id":153524,"user_name":"August","can_delete":false,"product_type":"c1","uid":1747702,"ip_address":"","ucode":"21794846E0E510","user_header":"https://static001.geekbang.org/account/avatar/00/1a/aa/f6/66cc1bcb.jpg","comment_is_top":false,"comment_ctime":1574253029,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574253029","product_id":100039001,"comment_content":"在兼顾效率的前提下，使用最少的代码量解决问题","like_count":0},{"had_liked":false,"id":153436,"user_name":"霸波儿奔","can_delete":false,"product_type":"c1","uid":1035314,"ip_address":"","ucode":"4AB75DB06CB254","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cc/32/d9dbf4e7.jpg","comment_is_top":false,"comment_ctime":1574235755,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1574235755","product_id":100039001,"comment_content":"好的代码就是要做到可维护性、可读性、可扩展性、灵活性、简洁性、可复用性、可测试性的平衡点，不同的项目、开发团队实际情况不一样，根据自己的情况动态调整，是这样的意思吧","like_count":0},{"had_liked":false,"id":153217,"user_name":"蟹肥","can_delete":false,"product_type":"c1","uid":1737493,"ip_address":"","ucode":"382B86651ED909","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/rNMTN9E43LZ0dpb4s3ElcRnBYpic5zzrCXGvKdib7rDwSEEWto83gXgFFQWMWXQmUxodcKyNnhDK1yIjeiaR7Mz3A/132","comment_is_top":false,"comment_ctime":1574192821,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574192821","product_id":100039001,"comment_content":"代码是为人们工作,将一些能够自动化的事务交由机器处理,<br>所以写代码最一开始的初衷就是增加生产力,<br>代码的质量好不好应该是由团队的长期生产力决定,<br>我同时也认为代码的持有者应是团队,而不是属于个人","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481897,"discussion_content":"是的，我改下，多谢指出","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580118181,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153174,"user_name":"姚布斯","can_delete":false,"product_type":"c1","uid":1335972,"ip_address":"","ucode":"09F958407F63FB","user_header":"https://static001.geekbang.org/account/avatar/00/14/62/a4/972b2b33.jpg","comment_is_top":false,"comment_ctime":1574174589,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574174589","product_id":100039001,"comment_content":"团队协作的话，维护一个好的文档肯定是重要的，另外就是老师说的这些原则。","like_count":0},{"had_liked":false,"id":153039,"user_name":"lovelykooo","can_delete":false,"product_type":"c1","uid":1009369,"ip_address":"","ucode":"B8B9DF2C05E123","user_header":"https://static001.geekbang.org/account/avatar/00/0f/66/d9/b81be44b.jpg","comment_is_top":false,"comment_ctime":1574144987,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574144987","product_id":100039001,"comment_content":"在以前，有种错误的看法.觉得那些异常处理都是脏代码，破坏了代码的结构。现在觉得是逻辑不够严谨，好的代码一定是优先实现功能的代码。<br>","like_count":0},{"had_liked":false,"id":152850,"user_name":"Simplation","can_delete":false,"product_type":"c1","uid":1176020,"ip_address":"","ucode":"22CC71D3B021AB","user_header":"https://static001.geekbang.org/account/avatar/00/11/f1/d4/bd644628.jpg","comment_is_top":false,"comment_ctime":1574089141,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574089141","product_id":100039001,"comment_content":"01.最常用的评价标准：<br>1. 可维护性（maintainability）：方便后期迭代<br>2. 可读性（readability）：易读、好理解<br>3. 可扩展性（extensibility）：预留功能扩展点<br>4. 灵活性（flexibility）：易扩展、易复用、易用<br>5. 简洁性（simplicity）：KISS原则，代码简单、逻辑清晰<br>6. 可复用性（reusability）：减少重复代码的编写，复用已有的代码<br>7. 可测试性（testability）：难以进行单元测试<br><br>02.如何具备写出高质量代码的能力？<br>掌握编程方法论：面向对象设计思想、设计原则、设计模式、编码规范、重构技巧<br><br>好的代码没有具体的量化标准，个人理解主要是看从哪些方面来评判。","like_count":0},{"had_liked":false,"id":152816,"user_name":"菩提晓","can_delete":false,"product_type":"c1","uid":1052898,"ip_address":"","ucode":"9716098118C32D","user_header":"https://static001.geekbang.org/account/avatar/00/10/10/e2/d4b51007.jpg","comment_is_top":false,"comment_ctime":1574083222,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1574083222","product_id":100039001,"comment_content":"个人认为以下几点也可作为评价标准：<br>1.代码的格式化也很重要，比如说缩进，整洁的代码会让人至少心里上会很舒服，有心情将代码看完<br>2.代码中的注释，有良好可读性的代码，完整而详细的注释必不可少<br>","like_count":0},{"had_liked":false,"id":152445,"user_name":"小沫","can_delete":false,"product_type":"c1","uid":1000977,"ip_address":"","ucode":"52341656210E0D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/46/11/1cf8c174.jpg","comment_is_top":false,"comment_ctime":1574003328,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574003328","product_id":100039001,"comment_content":"好的代码，应该是读代码的人读完后可以正确理解编写代码人的思想 ，同时 当需要扩展的时候 可以很容易的进行扩展（不需要编写大量的代码），最后 代码中有很好的注释信息。","like_count":0},{"had_liked":false,"id":152417,"user_name":"Lyle","can_delete":false,"product_type":"c1","uid":1002548,"ip_address":"","ucode":"55371A8BE9F88D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4c/34/0df5906a.jpg","comment_is_top":false,"comment_ctime":1573995627,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573995627","product_id":100039001,"comment_content":"好的代码，看函数名就大概能知道函数做什么的，不需要太多的注释，代码本身就是最好的注释","like_count":0},{"had_liked":false,"id":152322,"user_name":"王喜春","can_delete":false,"product_type":"c1","uid":1022349,"ip_address":"","ucode":"436E91FDED1B30","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/8d/4d5dbfc5.jpg","comment_is_top":false,"comment_ctime":1573971961,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1573971961","product_id":100039001,"comment_content":"老师您好， 上面提到“如果你的同事可以轻松地读懂你写的代码，那说明你的代码可读性很好；如果同事在读你的代码时，有很多疑问，那就说明你的代码可读性有待提高了”。 也能体会到这个说法背后的考虑点，工作中也经常被这样说法引入灵魂层面上的思考。 <br>后来想到一个这方面的反例:像Spring这样优秀的代码，一般人是看不懂的， 我们能说Spring代码的可读性差么？ 好像也不能。","like_count":0,"discussions":[{"author":{"id":1731602,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/6c/12/67bcce50.jpg","nickname":"我太难了","note":"","ucode":"B80133799A4494","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":96680,"discussion_content":"只能说你思路清奇。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577085795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":152182,"user_name":"王先生","can_delete":false,"product_type":"c1","uid":1082275,"ip_address":"","ucode":"027C061F660605","user_header":"https://static001.geekbang.org/account/avatar/00/10/83/a3/432bbbd9.jpg","comment_is_top":false,"comment_ctime":1573904199,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573904199","product_id":100039001,"comment_content":"代码质量的标准是：可维护性、可读性、可扩展性、灵活性、简洁性、可复用性、可测试性。","like_count":0},{"had_liked":false,"id":152179,"user_name":"不忘初心","can_delete":false,"product_type":"c1","uid":1267558,"ip_address":"","ucode":"FF0E30038CC71A","user_header":"https://static001.geekbang.org/account/avatar/00/13/57/66/4a747704.jpg","comment_is_top":false,"comment_ctime":1573901608,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573901608","product_id":100039001,"comment_content":"我觉得好代码就是可读性强，简单利落，看不出臃肿，便于维护和扩展。","like_count":0},{"had_liked":false,"id":152061,"user_name":"麻婆豆腐","can_delete":false,"product_type":"c1","uid":1731885,"ip_address":"","ucode":"F371FE05D081D6","user_header":"https://static001.geekbang.org/account/avatar/00/1a/6d/2d/de41f9cf.jpg","comment_is_top":false,"comment_ctime":1573867986,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573867986","product_id":100039001,"comment_content":"易读，易维护，易debug，稳定性。在哪里维护一个老系统都是很头疼的事吧！","like_count":0},{"had_liked":false,"id":152060,"user_name":"debug","can_delete":false,"product_type":"c1","uid":1746558,"ip_address":"","ucode":"B7B18146BB30DB","user_header":"https://static001.geekbang.org/account/avatar/00/1a/a6/7e/83d6b7dd.jpg","comment_is_top":false,"comment_ctime":1573867951,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573867951","product_id":100039001,"comment_content":"自己写出一段可读性的代码，自己都会觉得很漂亮，时不时要看一遍","like_count":0},{"had_liked":false,"id":151994,"user_name":"欲戴皇冠","can_delete":false,"product_type":"c1","uid":1233766,"ip_address":"","ucode":"02F6FFCCCBC76D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJMHOCOglWIDP8SFfgJogFeBicfBGWt7hIWtXX5kocMTaicohNpgB34F1yHy5dmAPHfw962NvhKciaAg/132","comment_is_top":false,"comment_ctime":1573830029,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573830029","product_id":100039001,"comment_content":"最近写代码时，一直在苦笑自己在初期时的日志记录，记录的太杂，出现问题时，需要在大量无用的信息找某个故障点。所以感觉代码易于故障排查也是非常重要的。不知这个算不算可维护性一个方面呢？","like_count":0},{"had_liked":false,"id":151949,"user_name":"jeffery","can_delete":false,"product_type":"c1","uid":1268106,"ip_address":"","ucode":"597CBF4AED4162","user_header":"https://static001.geekbang.org/account/avatar/00/13/59/8a/2722f79c.jpg","comment_is_top":false,"comment_ctime":1573820289,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573820289","product_id":100039001,"comment_content":"1.易于维护<br>2.易扩展<br>3.高性能","like_count":0},{"had_liked":false,"id":151823,"user_name":"hongyu","can_delete":false,"product_type":"c1","uid":1035593,"ip_address":"","ucode":"62CF7E3D433AC1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cd/49/4f490295.jpg","comment_is_top":false,"comment_ctime":1573797024,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573797024","product_id":100039001,"comment_content":"心目的的好代码  就是隔一段时间看的懂 好修改 ","like_count":0},{"had_liked":false,"id":151805,"user_name":"乐观的鹏程","can_delete":false,"product_type":"c1","uid":1746026,"ip_address":"","ucode":"FA527FA2C4204B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJgXIicettSIeIDpL2zt39Zb0fdBwOlibdia5AjWITYQZCWPGDPdFKKe9UiahgROkAyoES7niaobZatvQA/132","comment_is_top":false,"comment_ctime":1573794915,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573794915","product_id":100039001,"comment_content":"代码一直写的不咋地，急需这样的学习机会哈哈，没想到还真的等到了","like_count":0},{"had_liked":false,"id":151767,"user_name":"个人练习生niki👍","can_delete":false,"product_type":"c1","uid":1191678,"ip_address":"","ucode":"48E5D6DE94BBBB","user_header":"https://static001.geekbang.org/account/avatar/00/12/2e/fe/5541689b.jpg","comment_is_top":false,"comment_ctime":1573787632,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573787632","product_id":100039001,"comment_content":"文档详尽 通过文档了解设计总体思路、流程。<br>健壮性 对异常情况需要考虑全面、清楚。<br><br>好代码的样子<br>命名规范 不滥用缩写，取名有意义，保持名称清晰易理解<br>使用框架、工具类时，对业务场景预估，对容器容量，容器类型做合适的选择<br>定期思考是否可以重构<br>","like_count":0},{"had_liked":false,"id":151599,"user_name":"Jason","can_delete":false,"product_type":"c1","uid":1025030,"ip_address":"","ucode":"62A89FD460827A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/06/cf6b6d0f.jpg","comment_is_top":false,"comment_ctime":1573747219,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573747219","product_id":100039001,"comment_content":"打卡。作为小白也讲不出太高深的见解，代码能加上注释我就觉得很好了。今天读了小争哥的文章我才知道写代码要考虑可维护、可读性、可扩展性等这么多地方。以后常复习，希望课程结束能真正说上两句。","like_count":0},{"had_liked":false,"id":151591,"user_name":"秋葵","can_delete":false,"product_type":"c1","uid":1354644,"ip_address":"","ucode":"6D72EFFCDD14E3","user_header":"https://static001.geekbang.org/account/avatar/00/14/ab/94/729a2318.jpg","comment_is_top":false,"comment_ctime":1573746048,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573746048","product_id":100039001,"comment_content":"1.可拓展性高、易读、简单、可维护性好，可复用；","like_count":0},{"had_liked":false,"id":151577,"user_name":"东流","can_delete":false,"product_type":"c1","uid":1738147,"ip_address":"","ucode":"2715BC6E87BD83","user_header":"https://static001.geekbang.org/account/avatar/00/1a/85/a3/7e078442.jpg","comment_is_top":false,"comment_ctime":1573742245,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573742245","product_id":100039001,"comment_content":"结构清晰，耦合度低","like_count":0},{"had_liked":false,"id":151386,"user_name":"几点了","can_delete":false,"product_type":"c1","uid":1029537,"ip_address":"","ucode":"3F690A93A352A7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b5/a1/7706597c.jpg","comment_is_top":false,"comment_ctime":1573711917,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573711917","product_id":100039001,"comment_content":"由于我的业务特点，在我目前的工作当中，可读性和可维护性是最重要；其次是代码执行效率。","like_count":0},{"had_liked":false,"id":151349,"user_name":"木子00","can_delete":false,"product_type":"c1","uid":1314724,"ip_address":"","ucode":"8F78CA722EB29B","user_header":"https://static001.geekbang.org/account/avatar/00/14/0f/a4/0b49469f.jpg","comment_is_top":false,"comment_ctime":1573703759,"is_pvip":true,"replies":[{"id":"58364","content":"后面有几篇实战文章，你可以借鉴一下。","user_name":"作者回复","comment_id":151349,"uid":"1190123","ip_address":"","utype":1,"ctime":1573789254,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1573703759","product_id":100039001,"comment_content":"这一篇老师讲的太好了，老师讲的一些自己的问题。我现在也是处于这个阶段。<br>让我写一个从无到有到系统，或者独立的模块。都不知道从何下手。也看过设计模式，也看过框架源码，知道这么写的，但是让我写就是写不出来，没有一点思路。<br>学完设计模式之美能改变现在的状况吗？<br>(能说说老师怎么脱离这样的状况吗？）","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474450,"discussion_content":"后面有几篇实战文章，你可以借鉴一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573789254,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151331,"user_name":"风vs雷","can_delete":false,"product_type":"c1","uid":1065647,"ip_address":"","ucode":"2DD109C71C9B42","user_header":"","comment_is_top":false,"comment_ctime":1573700831,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573700831","product_id":100039001,"comment_content":"有哪些可以参考的有效的函数或者接口命名规则。","like_count":0},{"had_liked":false,"id":151280,"user_name":"小青蛙和大公鸡","can_delete":false,"product_type":"c1","uid":1006657,"ip_address":"","ucode":"C0D23CBA1B8F8E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/41/bf2c9ae0.jpg","comment_is_top":false,"comment_ctime":1573694626,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573694626","product_id":100039001,"comment_content":"<br>1. 可维护性；<br>2. 可读性；<br>3.可扩展性；<br>4.灵活性；<br>5.简单性；<br>6.可复制性；<br>7. 可测试性","like_count":0},{"had_liked":false,"id":151253,"user_name":"斜杠ing...","can_delete":false,"product_type":"c1","uid":1676247,"ip_address":"","ucode":"C4AE866AC8B9AE","user_header":"https://static001.geekbang.org/account/avatar/00/19/93/d7/93c8f92a.jpg","comment_is_top":false,"comment_ctime":1573691813,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573691813","product_id":100039001,"comment_content":"我的评判就是简单简单再简单，不写啰嗦的代码","like_count":0},{"had_liked":false,"id":151239,"user_name":"春夏秋冬","can_delete":false,"product_type":"c1","uid":1433348,"ip_address":"","ucode":"298733E724F776","user_header":"https://static001.geekbang.org/account/avatar/00/15/df/04/9d207229.jpg","comment_is_top":false,"comment_ctime":1573690453,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573690453","product_id":100039001,"comment_content":"可读性，可维护，可扩展，这三个是我感觉很重要的方面，代码是在电脑上运行的，但是终究是人写出来的，最后还是要人来阅读和操作，脱离了人的代码就是耍流氓","like_count":0},{"had_liked":false,"id":151185,"user_name":"Wong","can_delete":false,"product_type":"c1","uid":1574533,"ip_address":"","ucode":"9D9D07A13549D3","user_header":"https://static001.geekbang.org/account/avatar/00/18/06/85/b797483b.jpg","comment_is_top":false,"comment_ctime":1573662508,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573662508","product_id":100039001,"comment_content":"代码自文档化","like_count":0},{"had_liked":false,"id":151164,"user_name":"彭序猿","can_delete":false,"product_type":"c1","uid":1002648,"ip_address":"","ucode":"EC59F7968147B6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4c/98/9845e6b5.jpg","comment_is_top":false,"comment_ctime":1573659879,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573659879","product_id":100039001,"comment_content":"代码的健壮性，鲁棒性也非常重要，代码脆弱到不足以支撑业务，这个是非常糟糕的，这个算是最基本的能力。<br><br>好代码的格式也很重要的，可以有效降低阅读者的逆反心理。<br>","like_count":0},{"had_liked":false,"id":151118,"user_name":"even","can_delete":false,"product_type":"c1","uid":1249431,"ip_address":"","ucode":"C976CFB2A0EBBF","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Cwkic25ndkExxY3HvVjAaYKVzFRicv2X6TE2sjdqTBBmqeh7X8crIQe3SHPichvcayOCqI3PJ88yVuMNlD8VvkE3A/132","comment_is_top":false,"comment_ctime":1573655374,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573655374","product_id":100039001,"comment_content":"思从深行从简！","like_count":0},{"had_liked":false,"id":151115,"user_name":"天使梦泪","can_delete":false,"product_type":"c1","uid":1235750,"ip_address":"","ucode":"782991747DD424","user_header":"https://static001.geekbang.org/account/avatar/00/12/db/26/3c8d68fb.jpg","comment_is_top":false,"comment_ctime":1573654950,"is_pvip":false,"replies":[{"id":"58216","content":"有的","user_name":"作者回复","comment_id":151115,"uid":"1190123","ip_address":"","utype":1,"ctime":1573700756,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1573654950","product_id":100039001,"comment_content":"老师好，如果可以帮助分析下jdk和spring源码就更好了。","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474368,"discussion_content":"有的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573700756,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151110,"user_name":"志振爱咋滴咋滴","can_delete":false,"product_type":"c1","uid":1237624,"ip_address":"","ucode":"E7A5049920C101","user_header":"https://static001.geekbang.org/account/avatar/00/12/e2/78/9241b7b2.jpg","comment_is_top":false,"comment_ctime":1573654425,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573654425","product_id":100039001,"comment_content":"根据个人理解来看<br>1.健壮性，首先能够稳定的执行而不会有各种幺蛾子出现<br>2.好的日志记录，能够让人在出问题的时候可以快速定位问题，做好预先防范<br>3.简洁清晰，结构明确，不会东一块西一块，调用和修改起来十分困难，命名不要太类似，让人眼花缭乱。<br>4.尽可能把不涉及到具体内容的代码抽取复用，避免互相影响","like_count":0},{"had_liked":false,"id":151050,"user_name":"Joker","can_delete":false,"product_type":"c1","uid":1241567,"ip_address":"","ucode":"C42E11098E1B38","user_header":"https://static001.geekbang.org/account/avatar/00/12/f1/df/8ba04bec.jpg","comment_is_top":false,"comment_ctime":1573647638,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573647638","product_id":100039001,"comment_content":"代码的健壮性，执行效率高就是好代码","like_count":0},{"had_liked":false,"id":150978,"user_name":"Felix Cao","can_delete":false,"product_type":"c1","uid":1192259,"ip_address":"","ucode":"3C4690F1D9D5B8","user_header":"https://static001.geekbang.org/account/avatar/00/12/31/43/a1947dcb.jpg","comment_is_top":false,"comment_ctime":1573637438,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573637438","product_id":100039001,"comment_content":"笔记：<br>1、好代码命名清晰，结构清晰，格式规整，配套文档API详细；<br>2、好代码有灵魂，看完后，知道代码后续扩展，甚至知道后续feature方向；<br>3、好代码定位bug、修改bug迅速，新功能上手迅速。","like_count":0},{"had_liked":false,"id":150943,"user_name":"sevenfan","can_delete":false,"product_type":"c1","uid":1005261,"ip_address":"","ucode":"DD5757CEF9FD2E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/cd/74c40655.jpg","comment_is_top":false,"comment_ctime":1573632759,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573632759","product_id":100039001,"comment_content":"代码Review过程中，个人经验非常重要；实际开发过程很难长时间组织优秀大牛给新人小白Review。不知大家有没有好的实践方法？","like_count":0},{"had_liked":false,"id":150449,"user_name":"成楠Peter","can_delete":false,"product_type":"c1","uid":1252977,"ip_address":"","ucode":"4D13E7368D8CF2","user_header":"https://static001.geekbang.org/account/avatar/00/13/1e/71/9dcbe6c4.jpg","comment_is_top":false,"comment_ctime":1573536920,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573536920","product_id":100039001,"comment_content":"好的代码应该具备高性能","like_count":0},{"had_liked":false,"id":150410,"user_name":"饭太司替可","can_delete":false,"product_type":"c1","uid":1171829,"ip_address":"","ucode":"9A47FCA16199B0","user_header":"https://static001.geekbang.org/account/avatar/00/11/e1/75/bbdf9052.jpg","comment_is_top":false,"comment_ctime":1573529627,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573529627","product_id":100039001,"comment_content":"代码整洁性吧，让人只是扫一眼这一块的代码看起来比较舒服，不乱。 也能反应出编写这段代码的工程师当时的心态。","like_count":0},{"had_liked":false,"id":150333,"user_name":"辞酒轻尘","can_delete":false,"product_type":"c1","uid":1243330,"ip_address":"","ucode":"70445E8E5D0CB9","user_header":"https://static001.geekbang.org/account/avatar/00/12/f8/c2/2f28b148.jpg","comment_is_top":false,"comment_ctime":1573520151,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573520151","product_id":100039001,"comment_content":"正在看代码整洁之道，目前了解到的有方法名见名之意，少注释因为注释不易维护，代码要尽量抽象解耦，要有层次感。<br>里面提到了程序员大部分时间都是在看已有的代码，我很赞同，我觉得易维护扩展是非常重要的，为了便于定位，日志、异常的分级处理和输出也是如此。<br>根据工作经验，好代码的检验标准之一，是看你写的代码能否被同事快速理解和维护。","like_count":0},{"had_liked":false,"id":150305,"user_name":"jack","can_delete":false,"product_type":"c1","uid":1737808,"ip_address":"","ucode":"983B0510EE354F","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ2m0BftUtLicRjQq9ItFjYDmiamHBMxCEoAUic8mP7Kx6XzFW9Y4dG26km3ibOyu9Z74ECicfb5oIarKg/132","comment_is_top":false,"comment_ctime":1573517307,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573517307","product_id":100039001,"comment_content":"争哥，希望在接下来八个月时间，在你的带领下能写出可读可扩展易维护的代码。","like_count":0},{"had_liked":false,"id":150134,"user_name":"张三","can_delete":false,"product_type":"c1","uid":1004092,"ip_address":"","ucode":"1155528FAE1546","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/3c/d6fcb93a.jpg","comment_is_top":false,"comment_ctime":1573466810,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573466810","product_id":100039001,"comment_content":"高内聚低耦合","like_count":0},{"had_liked":false,"id":150111,"user_name":"吉吉","can_delete":false,"product_type":"c1","uid":1126111,"ip_address":"","ucode":"5A5DAB5B49D0F1","user_header":"https://static001.geekbang.org/account/avatar/00/11/2e/df/59725073.jpg","comment_is_top":false,"comment_ctime":1573463318,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573463318","product_id":100039001,"comment_content":"最基本的我觉得首先应该：<br>1、代码格式整洁<br>2、代码注释要有<br>3、层次分明，简单明了<br>一定要考虑下后面接盘侠的感受，能在很短时间内读懂你写的代码并能很快上手","like_count":0},{"had_liked":false,"id":150088,"user_name":"冬渐暖","can_delete":false,"product_type":"c1","uid":1586800,"ip_address":"","ucode":"907E41AAE9A36C","user_header":"https://static001.geekbang.org/account/avatar/00/18/36/70/00122b24.jpg","comment_is_top":false,"comment_ctime":1573460568,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573460568","product_id":100039001,"comment_content":"代码写得好的几个层面<br>1.方不方便客户端加字段<br>2.方不方便产品改需求<br>3.我能不能快速读懂<br>4.我还能不能再复用<br>5.我还能不能精简你的东西<br>至于方不方便测试，因为在的公司都是流程化，先定好yapi，然后按照yapi上的内容开发接口，可以不需要考虑这个问题，减轻负担<br><br>至于怎么写好，相信笔者后面也会讲到，这也是带着问题去思考的优点","like_count":0},{"had_liked":false,"id":150042,"user_name":"努力努力再努力m","can_delete":false,"product_type":"c1","uid":1644369,"ip_address":"","ucode":"9DD9E9C2988FFC","user_header":"https://static001.geekbang.org/account/avatar/00/19/17/51/3e13dc0c.jpg","comment_is_top":false,"comment_ctime":1573452193,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573452193","product_id":100039001,"comment_content":"我觉得代码的安全性也非常重要，不仅是代码逻辑上的安全性，确保数据的安全性也很重要。","like_count":0},{"had_liked":false,"id":149841,"user_name":"米 虫","can_delete":false,"product_type":"c1","uid":1073087,"ip_address":"","ucode":"6F35AA8BB8195B","user_header":"https://static001.geekbang.org/account/avatar/00/10/5f/bf/4bd3eb4b.jpg","comment_is_top":false,"comment_ctime":1573400562,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573400562","product_id":100039001,"comment_content":"各个模块都该尽量保持独立，就像炒菜的时候。锅边放的一壶油，一盒盐，一瓶酱油，完全独立，炒菜函数再去各个模块拿东西，改东西。","like_count":0},{"had_liked":false,"id":149824,"user_name":"学好习，做好人","can_delete":false,"product_type":"c1","uid":1205294,"ip_address":"","ucode":"C991643DB458E2","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/2e/e70a317a.jpg","comment_is_top":false,"comment_ctime":1573394462,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573394462","product_id":100039001,"comment_content":"工作这几年发现，对于一段好代码，是否能让人看懂以及是否能够易于扩展真的是非常非常重要的，经常会看见一段代码，看的时候就会觉得当时写的人再写的时候没有丝毫的逻辑性可言，基本是想到哪写到哪，各个功能混杂在一起，当然这让的代码也就不易懂更不易扩展了。为了能够写出好代码我觉得以下思考是必须的：<br>1.面对一个新的业务或者产品，你的步骤或者原则有哪些<br>2.这些步骤或者原则是否可以抽象来复用<br>3.你写的代码除了遵循一定的设计原则之外，是否是高效的并且适于当下产品的场景的<br><br>总之：想清楚在做，想明白再写","like_count":0},{"had_liked":false,"id":149767,"user_name":"初心","can_delete":false,"product_type":"c1","uid":1104576,"ip_address":"","ucode":"C090A1723E3474","user_header":"https://static001.geekbang.org/account/avatar/00/10/da/c0/9fc31f2d.jpg","comment_is_top":false,"comment_ctime":1573371799,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573371799","product_id":100039001,"comment_content":"好的代码，在定位问题时，第一时间找到核心点。","like_count":0},{"had_liked":false,"id":149662,"user_name":"学明","can_delete":false,"product_type":"c1","uid":1033677,"ip_address":"","ucode":"1A499A2557F74D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c5/cd/7d3e4355.jpg","comment_is_top":false,"comment_ctime":1573308660,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573308660","product_id":100039001,"comment_content":"我自已的经验，注释较少的代码，往往质量较高。<br>因为注释基本上是针对逻辑复杂或者设计定义不明确代码的说明。","like_count":0},{"had_liked":false,"id":149656,"user_name":"javaadu","can_delete":false,"product_type":"c1","uid":1000519,"ip_address":"","ucode":"8C0B140F1C8992","user_header":"https://static001.geekbang.org/account/avatar/00/0f/44/47/3ddb94d0.jpg","comment_is_top":false,"comment_ctime":1573305804,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573305804","product_id":100039001,"comment_content":"好的代码表达力强，又足够简单不啰嗦，能满足现有的业务需求，同时留了一些应对变化的扩展点<br><br>好的代码能让人看懂作者的思考，忍不住击节赞叹，而不是暗暗骂娘<br><br>争哥这篇文章算是将代码的好坏、评价标准、软件工程里对应的方法论时间的关系给理清楚了","like_count":0},{"had_liked":false,"id":149598,"user_name":"Arthur","can_delete":false,"product_type":"c1","uid":1151989,"ip_address":"","ucode":"B6CD75EACF6AF4","user_header":"https://static001.geekbang.org/account/avatar/00/11/93/f5/32c9fc77.jpg","comment_is_top":false,"comment_ctime":1573288217,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573288217","product_id":100039001,"comment_content":"maintainability，readability，extensibility 是说的最多的几点，还有一个 testability","like_count":0},{"had_liked":false,"id":149583,"user_name":"Lorne.Z","can_delete":false,"product_type":"c1","uid":1109854,"ip_address":"","ucode":"8C67D82246A3AC","user_header":"https://static001.geekbang.org/account/avatar/00/10/ef/5e/381d043b.jpg","comment_is_top":false,"comment_ctime":1573282774,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573282774","product_id":100039001,"comment_content":"我觉得： 能够把理论应用到实际的代码开发中，是评价标准之一","like_count":0},{"had_liked":false,"id":149369,"user_name":"星一","can_delete":false,"product_type":"c1","uid":1103829,"ip_address":"","ucode":"EF550131FAE1BF","user_header":"https://static001.geekbang.org/account/avatar/00/10/d7/d5/6fbf1070.jpg","comment_is_top":false,"comment_ctime":1573202470,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573202470","product_id":100039001,"comment_content":"老师说的很好，但是现实是很多团队根本都不care这些，尤其是领导只关注功能是否实现，至于代码写的漂亮与否丝毫不在意。。","like_count":0},{"had_liked":false,"id":149358,"user_name":"吖蒲","can_delete":false,"product_type":"c1","uid":1036972,"ip_address":"","ucode":"397C5DA20D5693","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d2/ac/aeb9f156.jpg","comment_is_top":false,"comment_ctime":1573201292,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573201292","product_id":100039001,"comment_content":"读起来清晰易懂，改起来不费周章。","like_count":0},{"had_liked":false,"id":149277,"user_name":"随心而至","can_delete":false,"product_type":"c1","uid":1097836,"ip_address":"","ucode":"31866865255101","user_header":"https://static001.geekbang.org/account/avatar/00/10/c0/6c/29be1864.jpg","comment_is_top":false,"comment_ctime":1573181715,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573181715","product_id":100039001,"comment_content":"有没有一种精神追求也很重要，有的人就满足于写能用的代码。","like_count":0},{"had_liked":false,"id":149256,"user_name":"噗╰_╯噗 ","can_delete":false,"product_type":"c1","uid":1140666,"ip_address":"","ucode":"AFB831EB42256D","user_header":"https://static001.geekbang.org/account/avatar/00/11/67/ba/5a1bd8c9.jpg","comment_is_top":false,"comment_ctime":1573179794,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573179794","product_id":100039001,"comment_content":"一类代码，简单几行实现复杂的功能，而且在没有注释的情况下一个人不费吹灰之力即可读懂，扩展功能只是分分钟的事。二类代码需要需要借助于注释，配合扎实的深厚的代码功底也能读懂，新手读懂代码需要花费较长时间时间，想要实现新的功能对于新手来说费了老劲了。三类代码，有注释，意大利面条式，可读性还不错，代码复用性差，想要加点东西要改很多地方。四类代码，没有注释，读只我代码主人亲自上阵才能读懂，整个代码就是像积木堆成的一幢楼，一不小心全线崩塌","like_count":0},{"had_liked":false,"id":149242,"user_name":"开心学习","can_delete":false,"product_type":"c1","uid":1215134,"ip_address":"","ucode":"DCC050F6A8840B","user_header":"https://static001.geekbang.org/account/avatar/00/12/8a/9e/502e5f14.jpg","comment_is_top":false,"comment_ctime":1573178032,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573178032","product_id":100039001,"comment_content":"之前我个人对于好代码还是烂代码只是嘴上说说，心中完全没有具体的评判和鉴别标准，看了老师对于代码好坏的评判标准真的是很全面和清晰。<br>","like_count":0},{"had_liked":false,"id":149184,"user_name":"quietwater","can_delete":false,"product_type":"c1","uid":1055029,"ip_address":"","ucode":"C25E2CD356D3F9","user_header":"https://static001.geekbang.org/account/avatar/00/10/19/35/be8372be.jpg","comment_is_top":false,"comment_ctime":1573174164,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573174164","product_id":100039001,"comment_content":"反其道而行之，说什么是好的很难，但说什么是不好的要更简单实用些。<br>1.重复代码。<br>2.复杂度太高。<br>3入参太多。<br>4.不止做一件事。（要么修改状态，要么查询，不要两样都做）<br>5.方法之间传递可变属性。（比如传递对象，应该传递对象ID)","like_count":0},{"had_liked":false,"id":149133,"user_name":"Paul Shan","can_delete":false,"product_type":"c1","uid":1593140,"ip_address":"","ucode":"32D99989028284","user_header":"","comment_is_top":false,"comment_ctime":1573163495,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573163495","product_id":100039001,"comment_content":"我读别人代码的时候喜欢画一些图(graph)，然后根据图的复杂性来大致判断代码质量。例如模块相互依赖关系可以表达成一个图,节点是模块，边是依赖关系，如果这个图是比较简单，甚至是树，或者图可以分成若干子图，层次结构一目了然，这样的依赖结构就是不错的依赖关系。如果图的边是杂乱无章，很难理解，这样的依赖结构就是不太好。再低一个层次，类与类之间的依赖关系也可以画成一个图，同样可以用图是否简洁，判断代码优劣。虽然判断图的标准也挺主观，但是比起判断代码质量来讲更容易把握一点。","like_count":0},{"had_liked":false,"id":149125,"user_name":"北极的大企鹅","can_delete":false,"product_type":"c1","uid":1045577,"ip_address":"","ucode":"8935346D08E109","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f4/49/2add4f6b.jpg","comment_is_top":false,"comment_ctime":1573148922,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573148922","product_id":100039001,"comment_content":"可读性真的很重要","like_count":0},{"had_liked":false,"id":149104,"user_name":"拉格朗日的忧桑","can_delete":false,"product_type":"c1","uid":1312991,"ip_address":"","ucode":"5FCB2C6616E113","user_header":"https://static001.geekbang.org/account/avatar/00/14/08/df/4e5c2b29.jpg","comment_is_top":false,"comment_ctime":1573141584,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573141584","product_id":100039001,"comment_content":"碰到好的代码，就像捡到了宝一样","like_count":0},{"had_liked":false,"id":149103,"user_name":"Geekwangc","can_delete":false,"product_type":"c1","uid":1591256,"ip_address":"","ucode":"C7CF64DF3E3EAA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/phlKhN4SKv2dic5Sr6fE4qWILbkDUjCQ2xhdiboM3UWSib4ulj3u7vl9OX4tylQTH8DfXWYELia7ry2WJ6PReowAVw/132","comment_is_top":false,"comment_ctime":1573141583,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573141583","product_id":100039001,"comment_content":"思从深而行从简，觉得可以作为我自己的flag","like_count":0},{"had_liked":false,"id":149089,"user_name":"Johar","can_delete":false,"product_type":"c1","uid":1101969,"ip_address":"","ucode":"834136A6F64CDC","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/91/89123507.jpg","comment_is_top":false,"comment_ctime":1573139715,"is_pvip":false,"discussion_count":0,"race_medal":2,"score":"1573139715","product_id":100039001,"comment_content":"1.错误处理，特别是和第三方对接，调用前打印入参，调用后打印返回结果，能够快速定位问题。另外异常不要乱抛，否则问题查半天<br>2.考虑效率，明确处理流程，尽量将不耗时的检查项放在前面，耗时的放在后面<br>3.单一原则，不要所有的功能都放在一个类里面实现","like_count":0},{"had_liked":false,"id":149065,"user_name":"Warn","can_delete":false,"product_type":"c1","uid":1465310,"ip_address":"","ucode":"F2F7FCDB0940D0","user_header":"https://static001.geekbang.org/account/avatar/00/16/5b/de/152f1c2c.jpg","comment_is_top":false,"comment_ctime":1573134042,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573134042","product_id":100039001,"comment_content":"代码的质量评判可能直白一点会看起来就会很美好，当然性能优化、稳定健壮、性能优化少不了。","like_count":0},{"had_liked":false,"id":149000,"user_name":"roaming","can_delete":false,"product_type":"c1","uid":1039232,"ip_address":"","ucode":"2736679690AB81","user_header":"https://static001.geekbang.org/account/avatar/00/0f/db/80/6b7629d7.jpg","comment_is_top":false,"comment_ctime":1573125649,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573125649","product_id":100039001,"comment_content":"纵向对比，自己代码也有写的相对好的时候；但写的不好的时候，一定是写代码之前思考的时间比较少的时候","like_count":0},{"had_liked":false,"id":148918,"user_name":"Walker Jiang","can_delete":false,"product_type":"c1","uid":1023818,"ip_address":"","ucode":"92AE855D428917","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9f/4a/f5b8c6b3.jpg","comment_is_top":false,"comment_ctime":1573109146,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573109146","product_id":100039001,"comment_content":"写的非常好","like_count":0},{"had_liked":false,"id":148879,"user_name":"符明明","can_delete":false,"product_type":"c1","uid":1736485,"ip_address":"","ucode":"44028EA9967627","user_header":"https://static001.geekbang.org/account/avatar/00/1a/7f/25/f6c3a5d8.jpg","comment_is_top":false,"comment_ctime":1573098658,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573098658","product_id":100039001,"comment_content":"我心目中的好代码是易读，简洁，高效，模块化，高内聚低耦合。","like_count":0},{"had_liked":false,"id":148877,"user_name":"符明明","can_delete":false,"product_type":"c1","uid":1736485,"ip_address":"","ucode":"44028EA9967627","user_header":"https://static001.geekbang.org/account/avatar/00/1a/7f/25/f6c3a5d8.jpg","comment_is_top":false,"comment_ctime":1573098555,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573098555","product_id":100039001,"comment_content":"其他标准有1. 高效性，即代码在机器上跑的效率，2. 牛逼性，即使用了很好的算法。","like_count":0},{"had_liked":false,"id":148863,"user_name":"lpf32","can_delete":false,"product_type":"c1","uid":1039717,"ip_address":"","ucode":"E1B127FDFF74BB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/dd/65/3b4a2930.jpg","comment_is_top":false,"comment_ctime":1573095772,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573095772","product_id":100039001,"comment_content":"为了提高可维护性，需要做好扩展性。扩展性好了，有时候代码就不那么简单易读。","like_count":0},{"had_liked":false,"id":148845,"user_name":"不与三季人说","can_delete":false,"product_type":"c1","uid":1693164,"ip_address":"","ucode":"A3F03832309FDD","user_header":"https://static001.geekbang.org/account/avatar/00/19/d5/ec/3d6e7ea7.jpg","comment_is_top":false,"comment_ctime":1573094232,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573094232","product_id":100039001,"comment_content":"通过导读的文章，越来越能认识到也越来越期待读到正文，开始真正的学习，正如老师所说，对于这些设计模式的重要性，好的代码的评判标准，还有一些设计原则，这些几乎是每一本书的开头部分都会着重介绍的，我也在很多书上看到过，但是有个特点，看的时候都明白，但是就是不知道有什么用，让我说我也说不上来那么多的原则和模式，同时又觉得不能死记硬背，所以一直在重复的看，同时想把这些技巧运用到实战中。","like_count":0},{"had_liked":false,"id":148790,"user_name":"James","can_delete":false,"product_type":"c1","uid":1134861,"ip_address":"","ucode":"48B0F2A334D1C1","user_header":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","comment_is_top":false,"comment_ctime":1573087378,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573087378","product_id":100039001,"comment_content":"也要适当加点注释说明方法功能等等…<br>","like_count":0},{"had_liked":false,"id":148769,"user_name":"居培波","can_delete":false,"product_type":"c1","uid":1437396,"ip_address":"","ucode":"27A5A8D9D4682B","user_header":"https://static001.geekbang.org/account/avatar/00/15/ee/d4/204d0c6d.jpg","comment_is_top":false,"comment_ctime":1573084247,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573084247","product_id":100039001,"comment_content":"好的工程师写完功能后能优化代码这一步。","like_count":0},{"had_liked":false,"id":148730,"user_name":"李斯大炮","can_delete":false,"product_type":"c1","uid":1191464,"ip_address":"","ucode":"8CB9C681634784","user_header":"https://static001.geekbang.org/account/avatar/00/12/2e/28/9c3adea2.jpg","comment_is_top":false,"comment_ctime":1573056420,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573056420","product_id":100039001,"comment_content":"代码逻辑清晰明了，分层明确，防御式编程，逻辑严谨辅以适当的设计模式，针对功能适度抽象做到代码的复用，添加功能也不需改动原逻辑，就是当下的代码诗人😂","like_count":0},{"had_liked":false,"id":148716,"user_name":"Amorfati","can_delete":false,"product_type":"c1","uid":1047091,"ip_address":"","ucode":"71122E777FE2AB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fa/33/0eb31e67.jpg","comment_is_top":false,"comment_ctime":1573053391,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573053391","product_id":100039001,"comment_content":"好的代码看起来就像读小说，简单清晰，不用太多思考就可以清楚知道是什么意思，比较讨厌炫技，在项目初始就开始各种抽象，最后大家看起来都很恼火，好的代码应该是便于修改的，能够清晰传达出要做的事情，即便长一点儿也没关系","like_count":0},{"had_liked":false,"id":148690,"user_name":"石头","can_delete":false,"product_type":"c1","uid":1238189,"ip_address":"","ucode":"EA620450F50642","user_header":"https://static001.geekbang.org/account/avatar/00/12/e4/ad/abc7540f.jpg","comment_is_top":false,"comment_ctime":1573049696,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573049696","product_id":100039001,"comment_content":"个人理解：<br>1、易读性：不用太多的注释，能够做到一看就懂。你定义的变量是干嘛的，函数的作用是啥。<br>2、可扩展性：新增逻辑只需要修改很少的代码即可完成。<br>3、高效：执行效率高。<br>4、可复用性：不同的平台只需修改少量的代码即可实现快速出产品。","like_count":0},{"had_liked":false,"id":148689,"user_name":"Holmes","can_delete":false,"product_type":"c1","uid":1078589,"ip_address":"","ucode":"28DD6247AC3908","user_header":"https://static001.geekbang.org/account/avatar/00/10/75/3d/0d6cf519.jpg","comment_is_top":false,"comment_ctime":1573049496,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573049496","product_id":100039001,"comment_content":"感觉文章里的一些句子有很多重复描述，有点冗余！希望后面的内容干货满满","like_count":0},{"had_liked":false,"id":148688,"user_name":"Holmes","can_delete":false,"product_type":"c1","uid":1078589,"ip_address":"","ucode":"28DD6247AC3908","user_header":"https://static001.geekbang.org/account/avatar/00/10/75/3d/0d6cf519.jpg","comment_is_top":false,"comment_ctime":1573049224,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573049224","product_id":100039001,"comment_content":"还是想看实践操作，理论看多了，没有实践的场景，或者说不知道什么时候还用什么设计模式","like_count":0},{"had_liked":false,"id":148678,"user_name":"柳树","can_delete":false,"product_type":"c1","uid":1025223,"ip_address":"","ucode":"F03249D4534BCB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/c7/d1ee69c6.jpg","comment_is_top":false,"comment_ctime":1573048155,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573048155","product_id":100039001,"comment_content":"好的代码，大概看起来像阅读文章一样吧，有的像悬疑小说，有的像散文。","like_count":0},{"had_liked":false,"id":148665,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1573046469,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1573046469","product_id":100039001,"comment_content":"我们想写出高质量的代码，好的代码首先就要知道怎么去判断什么是高质量好的代码，以什么纬度什么标准","like_count":0},{"had_liked":false,"id":148650,"user_name":"vivi_lee","can_delete":false,"product_type":"c1","uid":1027680,"ip_address":"","ucode":"166D8CB1648300","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/UswOHxYIocRX8Lzhxbotte13bKzRhk9fexAXVzGeibljibY15g30PwolaDOQvQyKsBtJziaFasu67qVCU4fib5ZKIQ/132","comment_is_top":false,"comment_ctime":1573044858,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573044858","product_id":100039001,"comment_content":"和软件架构质量属性部分类似：可用性、性能、可修改行、可测试性、安全性、易用性。","like_count":0},{"had_liked":false,"id":148598,"user_name":"jaryoung","can_delete":false,"product_type":"c1","uid":1077406,"ip_address":"","ucode":"6E72D107DB7E51","user_header":"https://static001.geekbang.org/account/avatar/00/10/70/9e/5095f881.jpg","comment_is_top":false,"comment_ctime":1573036349,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573036349","product_id":100039001,"comment_content":"paper，如此好看的代码，好的代码像看报纸一样，清晰明了。","like_count":0},{"had_liked":false,"id":148556,"user_name":"洛奇","can_delete":false,"product_type":"c1","uid":1624355,"ip_address":"","ucode":"662B4005721119","user_header":"https://static001.geekbang.org/account/avatar/00/18/c9/23/76511858.jpg","comment_is_top":false,"comment_ctime":1573029984,"is_pvip":false,"replies":[{"id":"57277","content":"是的 后面有讲到","user_name":"作者回复","comment_id":148556,"uid":"1190123","ip_address":"","utype":1,"ctime":1573084895,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1573029984","product_id":100039001,"comment_content":"单元测试真的很重要吗？以前都没重视","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473533,"discussion_content":"是的 后面有讲到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573084895,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148548,"user_name":"张和祥","can_delete":false,"product_type":"c1","uid":1000985,"ip_address":"","ucode":"AFFCA32CA6C166","user_header":"https://static001.geekbang.org/account/avatar/00/0f/46/19/827d1ce0.jpg","comment_is_top":false,"comment_ctime":1573029269,"is_pvip":false,"replies":[{"id":"57278","content":"算吧😂","user_name":"作者回复","comment_id":148548,"uid":"1190123","ip_address":"","utype":1,"ctime":1573084925,"user_name_real":"王争"}],"discussion_count":2,"race_medal":0,"score":"1573029269","product_id":100039001,"comment_content":"写足够的注释算个标准吗？","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473528,"discussion_content":"算吧😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573084925,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1238221,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e4/cd/5363c8fa.jpg","nickname":"Rain","note":"","ucode":"6A270D922A3B9D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45848,"discussion_content":"好的代码本身就是注释，clean code里面讲解了什么情况需要什么样的注释。不过我想老师也会讲到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573090471,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148522,"user_name":"啦啦啦","can_delete":false,"product_type":"c1","uid":1131687,"ip_address":"","ucode":"6B12EC90A62525","user_header":"https://static001.geekbang.org/account/avatar/00/11/44/a7/171c1e86.jpg","comment_is_top":false,"comment_ctime":1573024292,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1573024292","product_id":100039001,"comment_content":"看完评论，买了两本书，哈哈<br>","like_count":0,"discussions":[{"author":{"id":1087243,"avatar":"https://static001.geekbang.org/account/avatar/00/10/97/0b/a943bcb3.jpg","nickname":"zhou","note":"","ucode":"E1CE8575B3F106","race_medal":3,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":51826,"discussion_content":"啥书","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573957387,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1238221,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e4/cd/5363c8fa.jpg","nickname":"Rain","note":"","ucode":"6A270D922A3B9D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45846,"discussion_content":"帮你➕一本，Head First 设计模式😇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573090375,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148507,"user_name":"王智","can_delete":false,"product_type":"c1","uid":1079657,"ip_address":"","ucode":"0335277F255F7A","user_header":"https://static001.geekbang.org/account/avatar/00/10/79/69/5960a2af.jpg","comment_is_top":false,"comment_ctime":1573021014,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573021014","product_id":100039001,"comment_content":"命名规范, 方法的行数要少, 方法的封装, 代码简单易懂(注释标准)","like_count":0},{"had_liked":false,"id":148490,"user_name":"刘旺旺","can_delete":false,"product_type":"c1","uid":1086132,"ip_address":"","ucode":"A9E89684BAE08D","user_header":"https://static001.geekbang.org/account/avatar/00/10/92/b4/bd466eed.jpg","comment_is_top":false,"comment_ctime":1573018280,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573018280","product_id":100039001,"comment_content":"有的好代码，让人看着心情就很好，这个就很主观了。","like_count":0},{"had_liked":false,"id":148480,"user_name":"宝宝疯","can_delete":false,"product_type":"c1","uid":1026637,"ip_address":"","ucode":"D86F5A645FE61B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/aa/4d/c7df89bf.jpg","comment_is_top":false,"comment_ctime":1573016235,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573016235","product_id":100039001,"comment_content":"补充一个大家没有提到的，理想情况下一个团队的人尽量使用统一的编码风格，代码看起来像是同一个人写的，后期维护就很方便了。而不是一看代码就知道这一定是某某人写的。","like_count":0},{"had_liked":false,"id":148428,"user_name":"搅局","can_delete":false,"product_type":"c1","uid":1733851,"ip_address":"","ucode":"5664F01ADDAA37","user_header":"https://static001.geekbang.org/account/avatar/00/1a/74/db/164c9f7b.jpg","comment_is_top":false,"comment_ctime":1573006295,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573006295","product_id":100039001,"comment_content":"<br>笔记：<br>好代码的标准？<br>- 可维护性<br>- 可读性（人工可读）<br>- 可拓展性<br>- 可测试性<br>- DRY（灵活性、简洁性、可复用性）<br>如何写出高质量代码？<br>1. 知道好代码的标准<br>2. 知道方法论（前人的肩膀）<br>3. 实践<br>","like_count":0},{"had_liked":false,"id":148419,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1573005472,"is_pvip":false,"replies":[{"id":"57141","content":"多谢认可","user_name":"作者回复","comment_id":148419,"uid":"1190123","ip_address":"","utype":1,"ctime":1573009819,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1573005472","product_id":100039001,"comment_content":"争哥总结能力很强","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473488,"discussion_content":"多谢认可","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573009819,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148415,"user_name":"xavier","can_delete":false,"product_type":"c1","uid":1243128,"ip_address":"","ucode":"2F7918EA37ED9F","user_header":"https://static001.geekbang.org/account/avatar/00/12/f7/f8/3c0a6854.jpg","comment_is_top":false,"comment_ctime":1573005001,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573005001","product_id":100039001,"comment_content":"代码质量评判常用的七个标准：可维护性、可读性、可扩展性、灵活性、简洁性、可复用性、可测试性。","like_count":0},{"had_liked":false,"id":148414,"user_name":"GGL","can_delete":false,"product_type":"c1","uid":1215892,"ip_address":"","ucode":"AED10B8248D1E7","user_header":"https://static001.geekbang.org/account/avatar/00/12/8d/94/150dfe78.jpg","comment_is_top":false,"comment_ctime":1573004930,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573004930","product_id":100039001,"comment_content":"第二天，代码质量的好坏，如何写出高质量的代码。<br>        代码质量的高低评判需要综合各方面的因素，不能通过单一的维度去评价，而且不同的评价维度也不是相互独立的，而是相互影响、重叠以及包含的关系；<br>        量化一段代码质量的高低往往带有极强的主观性，与工程师自身的经验有很大的关系；最常用的评判标准大概有七个：可维护性、可读性、可扩展性、灵活性、简洁性、可复用性、可测试性，其中可维护性、可读性、可扩展性又是提到的最多的、最重要的评价标准；<br>        要写出高质量的代码就需要掌握更加细化、能落地的编程方法论，其中包含：面向对象设计思想、设计原则、设计模式、编码规范重构技巧等等（继承、多态、编码规范-可读性、设计原则-复用，灵活，可扩展、设计模式-易扩展、持续重构-可维护性）","like_count":0},{"had_liked":false,"id":148407,"user_name":"Holland","can_delete":false,"product_type":"c1","uid":1733170,"ip_address":"","ucode":"DE5EF4E8D8D573","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/x9U78tCoyfhWnFTr6f1AhH4c6ibOFtO6bYjoIM3ByCplx0lUU4wZSms5gic2Wxm7icfia1g8OJSgvqXKHQNPWAaHJQ/132","comment_is_top":false,"comment_ctime":1573003706,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573003706","product_id":100039001,"comment_content":"作为一个新手程序员,现在写的业务想的是代码如何能够更高效率的运行,减少时间成本....设计模式什么的完全不懂啊....","like_count":0},{"had_liked":false,"id":148386,"user_name":"Yangjing","can_delete":false,"product_type":"c1","uid":1018061,"ip_address":"","ucode":"D88DFD4958D07C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/88/cd/2c3808ce.jpg","comment_is_top":false,"comment_ctime":1573000897,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573000897","product_id":100039001,"comment_content":"变量命名，函数命名也是每天花费很多时间的","like_count":0},{"had_liked":false,"id":148370,"user_name":"Z冰红茶","can_delete":false,"product_type":"c1","uid":1237132,"ip_address":"","ucode":"8CAE9E0269882B","user_header":"https://static001.geekbang.org/account/avatar/00/12/e0/8c/edad0017.jpg","comment_is_top":false,"comment_ctime":1572999703,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572999703","product_id":100039001,"comment_content":"代码不够，注释来凑","like_count":0},{"had_liked":false,"id":148282,"user_name":"Xuyang","can_delete":false,"product_type":"c1","uid":1686661,"ip_address":"","ucode":"DE968B1EA68CA9","user_header":"https://static001.geekbang.org/account/avatar/00/19/bc/85/31ce7363.jpg","comment_is_top":false,"comment_ctime":1572967812,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572967812","product_id":100039001,"comment_content":"好的代码：1. 类接口设计需要考虑到后续的功能可扩展；2. 提高代码复用性（后续出现bug，也方便维护）， 3. 添加注释（可读性好） 4. 增加异常处理（提高鲁棒性）","like_count":0},{"had_liked":false,"id":148255,"user_name":"小晏子","can_delete":false,"product_type":"c1","uid":1132337,"ip_address":"","ucode":"3AAA6FB5ACB6AE","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/31/f35367c8.jpg","comment_is_top":false,"comment_ctime":1572964372,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1572964372","product_id":100039001,"comment_content":"我能看懂的就是好代码 😄","like_count":0},{"had_liked":false,"id":148253,"user_name":"逍遥思","can_delete":false,"product_type":"c1","uid":1015512,"ip_address":"","ucode":"340F05C786730F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7e/d8/92a98fb6.jpg","comment_is_top":false,"comment_ctime":1572964169,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572964169","product_id":100039001,"comment_content":"好代码一定不能有重构后留下的以注释形式存在的原代码，这更多的是个习惯问题，应该也可以归到可读性里","like_count":0},{"had_liked":false,"id":148236,"user_name":"小可爱(๑• . •๑)","can_delete":false,"product_type":"c1","uid":1106190,"ip_address":"","ucode":"1E97973449DBDC","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/0e/2912db26.jpg","comment_is_top":false,"comment_ctime":1572961831,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572961831","product_id":100039001,"comment_content":"一眼明意，注释整洁，命名规范等等","like_count":0},{"had_liked":false,"id":148206,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1572958089,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572958089","product_id":100039001,"comment_content":"合理的使用数据结构和算法。","like_count":0},{"had_liked":false,"id":148173,"user_name":"天才小飞猫","can_delete":false,"product_type":"c1","uid":1017409,"ip_address":"","ucode":"82BDC9F23CE320","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoaknSzhibWMuhuQRibib9MP0QyOIYMsyPxicpmTQHlHE0icgRUXicOqt6YyIzJQtDCLsStuRyK2bV74tmA/132","comment_is_top":false,"comment_ctime":1572954276,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572954276","product_id":100039001,"comment_content":"代码review的时候，要提出违反了哪些好的原则，或者反思哪些方面自己做的还不够好","like_count":0},{"had_liked":false,"id":148172,"user_name":"君不得闲","can_delete":false,"product_type":"c1","uid":1101581,"ip_address":"","ucode":"718AA2C9B410BB","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/0d/f4150547.jpg","comment_is_top":false,"comment_ctime":1572954186,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1572954186","product_id":100039001,"comment_content":"我觉得一个项目的代码首先得有规范和实时更新的文档，阿里的规范文档和oracle的规范文档都不错，有很好的参考价值。<br>其次是可读性，变量名一定程度上得表达出意思，表达不出也要注释标明，不然后期维护修改需求时很可能只能靠猜，费时费力。还有就是可复用性和可测试性，前者保证了维护的时候能够减少更改的次数，测试性保证了代码在边界内正常执行，边界外能够正确的返回错误信息。保证维护时增加新的bug。","like_count":0},{"had_liked":false,"id":148152,"user_name":"wl","can_delete":false,"product_type":"c1","uid":1392730,"ip_address":"","ucode":"45062AA2460F1F","user_header":"https://static001.geekbang.org/account/avatar/00/15/40/5a/e65e8c40.jpg","comment_is_top":false,"comment_ctime":1572950389,"is_pvip":false,"replies":[{"id":"57181","content":"多谢指出 我改","user_name":"作者回复","comment_id":148152,"uid":"1190123","ip_address":"","utype":1,"ctime":1573027483,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1572950389","product_id":100039001,"comment_content":"老师， Simplicity 和 Extensibility 建议都改下哦","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473416,"discussion_content":"多谢指出 我改","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573027483,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148146,"user_name":"冬渐暖","can_delete":false,"product_type":"c1","uid":1586800,"ip_address":"","ucode":"907E41AAE9A36C","user_header":"https://static001.geekbang.org/account/avatar/00/18/36/70/00122b24.jpg","comment_is_top":false,"comment_ctime":1572948898,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572948898","product_id":100039001,"comment_content":"<br>代码评测，一是你尽量参考《阿里巴巴开发手册》里面的规范，二是有些现有的东西你就不要造轮子，能用的就不要复制粘贴，把它们重构起来。除非你认为你能写的更好<br>三是你改的时候尽量遵守开关原则。","like_count":0},{"had_liked":false,"id":148135,"user_name":"...","can_delete":false,"product_type":"c1","uid":1356225,"ip_address":"","ucode":"D2E6EBA5E9B6F0","user_header":"https://static001.geekbang.org/account/avatar/00/14/b1/c1/08cc53c0.jpg","comment_is_top":false,"comment_ctime":1572946728,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572946728","product_id":100039001,"comment_content":"代码的可读性，和可维护性肯定是最高的。 如果你的代码具有可读性，那么你的逻辑肯定是清晰的，接着就是可扩展性了。 但是问题是这些都是不可以被量化的。有的时候我们只是会觉得，这么做会好一些，但是好哪里、哪里好、优缺点是什么。而且如果没有环境，个人的看法会具有局限性。而且我们大多数也不会去看之前的代码。 所以。。。 ","like_count":0,"discussions":[{"author":{"id":1119609,"avatar":"https://static001.geekbang.org/account/avatar/00/11/15/79/efde2a69.jpg","nickname":"马球先生","note":"","ucode":"858C2CE0E494C5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":217436,"discussion_content":"小王的代码 我真是看了半天才懂","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1585559358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1194858,"avatar":"https://static001.geekbang.org/account/avatar/00/12/3b/6a/80d9c545.jpg","nickname":"RD","note":"","ucode":"E3947B6E1681AD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352992,"discussion_content":"我们的头像好像呀~","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1614938404,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1952394,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/ca/8a/8f64cf86.jpg","nickname":"地平线","note":"","ucode":"52213F99782147","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585058,"discussion_content":"小王就是我😀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661317359,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"新加坡"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3015503,"avatar":"","nickname":"Geek_08a0f7","note":"","ucode":"C2D78F6B714B88","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577371,"discussion_content":"终于看完了，代码也跑通啦，小王设计的还行吧hh","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656054957,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3015503,"avatar":"","nickname":"Geek_08a0f7","note":"","ucode":"C2D78F6B714B88","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577339,"discussion_content":"今天我一定要看懂小王的代码！搞明白LoggerFactory怎么用的！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656040940,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1077406,"avatar":"https://static001.geekbang.org/account/avatar/00/10/70/9e/5095f881.jpg","nickname":"jaryoung","note":"","ucode":"6E72D107DB7E51","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":249062,"discussion_content":"火哥 哪里都是你哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587908925,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009422,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/0e/c77ad9b1.jpg","nickname":"eason2017","note":"","ucode":"E070BA624FA490","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":163548,"discussion_content":"哈哈，老师念了几遍“小王”，我也想是在回忆曾经的自己了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581084893,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1307080,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f1/c8/8e6dc340.jpg","nickname":"potato00fa","note":"","ucode":"D179E68D87CC50","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":151019,"discussion_content":"😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579847463,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1146275,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/CXI9o2xQCYN83wISxMFIzUJJRSzPRM715WdtoX49u8MTZwpLaISt6PjcKd7fqN7GzFV1qU1iaBp8aUuG7ia1gGyA/132","nickname":"Geek_5939c6","note":"","ucode":"F1674B710FB7C7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":145862,"discussion_content":"哪都能见到你啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579584932,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1241770,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f2/aa/32fc0d54.jpg","nickname":"失火的夏天","note":"","ucode":"10C6E66EB2A65F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1146275,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/CXI9o2xQCYN83wISxMFIzUJJRSzPRM715WdtoX49u8MTZwpLaISt6PjcKd7fqN7GzFV1qU1iaBp8aUuG7ia1gGyA/132","nickname":"Geek_5939c6","note":"","ucode":"F1674B710FB7C7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":147048,"discussion_content":"除了争哥的，其他地点我留言很少啊","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1579621459,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":145862,"ip_address":""},"score":147048,"extra":""}]},{"author":{"id":1131034,"avatar":"https://static001.geekbang.org/account/avatar/00/11/42/1a/de91a790.jpg","nickname":"ddq432","note":"","ucode":"C84F5727BA37B5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":145608,"discussion_content":"评论的都是人才啊，哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579572591,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1161271,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b8/37/98991aeb.jpg","nickname":"不似旧日","note":"","ucode":"DF4C5E3AB9570C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":143124,"discussion_content":"我觉得小王设计的不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579491207,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1141173,"avatar":"https://static001.geekbang.org/account/avatar/00/11/69/b5/1e1731cc.jpg","nickname":"zs阿帅","note":"","ucode":"07A54AE7F1CAFF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":142914,"discussion_content":"😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579484840,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148122,"user_name":"teddytyy","can_delete":false,"product_type":"c1","uid":1268738,"ip_address":"","ucode":"E1569D81A4154E","user_header":"https://static001.geekbang.org/account/avatar/00/13/5c/02/e7af1750.jpg","comment_is_top":false,"comment_ctime":1572944265,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572944265","product_id":100039001,"comment_content":"打个卡吧","like_count":0},{"had_liked":false,"id":148121,"user_name":"zhanyd","can_delete":false,"product_type":"c1","uid":1073845,"ip_address":"","ucode":"4C994EE512A3C4","user_header":"https://static001.geekbang.org/account/avatar/00/10/62/b5/4159fa05.jpg","comment_is_top":false,"comment_ctime":1572944195,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1572944195","product_id":100039001,"comment_content":"好的代码有一种美感，和艺术是相通的，构图之美，数学之美，代码之美。","like_count":0,"discussions":[{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44624,"discussion_content":"数学不好，要想写出好代码有时还挺难","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572959245,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148120,"user_name":"sherry","can_delete":false,"product_type":"c1","uid":1234416,"ip_address":"","ucode":"4F1BB26390527D","user_header":"https://static001.geekbang.org/account/avatar/00/12/d5/f0/1f86793d.jpg","comment_is_top":false,"comment_ctime":1572943801,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572943801","product_id":100039001,"comment_content":"\t1. 评价标准（代码质量的评价有很强的主观性）<br>\t1\t可维护性 maintainability\tbug容易修复，修改、添加新功能能够轻松完成，就可以主观地认为易维护<br>\t2\t可读性 readability\t是否符合编码规范、命名是否达意、注释是否详尽、函数长短是否合适、模块划分是否清晰、是否具有高内聚低耦合等 --&gt; code review验证代码可读性<br>\t3\t可扩展性 extensibility\t在不修改或少量修改原有代码的情况下，通过扩展的方式添加新的功能代码<br>\t\t\t设计原则：对修改关闭，对扩展开放<br>\t4\t灵活性 flexibility\t易扩展、易复用、易用等<br>\t5\t简洁性 simplity\tKISS: Keep it simple, stupid<br>\t\t\t思从深而行从简，真正的高手能云淡风轻地用最简单的方法解决最复杂的问题<br>\t6\t可复用性 reuseability\t尽量减少重复代码的编写，复用已有的代码<br>\t7\t可测试性 testability\t可测试性差，难写单元测试，代码设计有问题<br><br>\t2. 如何写出高质量的代码？<br>编程方法：面向对象设计思想、设计原则、设计模式、编码规范、重构技巧","like_count":0},{"had_liked":false,"id":148115,"user_name":"真是艹0","can_delete":false,"product_type":"c1","uid":1234043,"ip_address":"","ucode":"0A082CE0D79C6E","user_header":"https://static001.geekbang.org/account/avatar/00/12/d4/7b/74e59208.jpg","comment_is_top":false,"comment_ctime":1572943423,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572943423","product_id":100039001,"comment_content":"叮","like_count":0},{"had_liked":false,"id":148085,"user_name":"小鸟淫太","can_delete":false,"product_type":"c1","uid":1247186,"ip_address":"","ucode":"AC44F552DDF93E","user_header":"https://static001.geekbang.org/account/avatar/00/13/07/d2/d7a200d5.jpg","comment_is_top":false,"comment_ctime":1572939608,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572939608","product_id":100039001,"comment_content":"最近大半年一直在做重构工作，希望在这个课程中能有所收获。。","like_count":0},{"had_liked":false,"id":148031,"user_name":"Sisyphus235","can_delete":false,"product_type":"c1","uid":1366359,"ip_address":"","ucode":"829CC4CE0FA96E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ooZCPFY1xgC81h0Eu3vuqbWG5MaBp8RNmvXXGQwupo2LpSOLq0rBlTDRAF1yM6wF09WdeG49rA9dJSVKIUBxnQ/132","comment_is_top":false,"comment_ctime":1572930810,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572930810","product_id":100039001,"comment_content":"代码不要过度设计，根据需求迭代，留有接口和扩展性。同时大型项目一定要考虑安全性，做好过滤和校检。","like_count":0},{"had_liked":false,"id":148030,"user_name":"张瑞浩","can_delete":false,"product_type":"c1","uid":1242092,"ip_address":"","ucode":"3F37052E1D00FB","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLnQfCfmXCPI1icrD2mVlIkY5AVY6MT3VMAYKjDXZYlBgUk6wxBj61vpK1Om3aRlj27R0RYbVoALGw/132","comment_is_top":false,"comment_ctime":1572930628,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572930628","product_id":100039001,"comment_content":"深刻同意，简单有效是代码的最终极答案。<br>之前负责项目中，有些业务代码刻意使用设计模式，比如访问者模式，导致后来者很难阅读；另外递归这种尽量少在业务代码中使用，第一个是阅读性，第二是问题可维护性","like_count":0},{"had_liked":false,"id":148017,"user_name":"子夜2104","can_delete":false,"product_type":"c1","uid":1070286,"ip_address":"","ucode":"C4FF54AEA6002F","user_header":"https://static001.geekbang.org/account/avatar/00/10/54/ce/92029d2f.jpg","comment_is_top":false,"comment_ctime":1572929359,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572929359","product_id":100039001,"comment_content":"我认为的好的代码：当你写的代码，交给别人时，他很容易看懂，能够快速理解你想要表达的意思；很方便的进行测试，以理解各个模块的功能；容易扩展，添加新功能时，不出bug，不重复造轮子，可以复用你的代码。<br><br>怎么做到呢？ 遵循设计模式、设计原则、有测试模块、编码规范（命名、模块化、统一编码风格）、有文档。","like_count":0},{"had_liked":false,"id":148009,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1015754,"ip_address":"","ucode":"00DF2FEC58D2E6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","comment_is_top":false,"comment_ctime":1572928099,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572928099","product_id":100039001,"comment_content":"思从深而行从简，说的真好，写程序如此，做人亦如此！","like_count":0},{"had_liked":false,"id":148003,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1119593,"ip_address":"","ucode":"94656FE4A6C378","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","comment_is_top":false,"comment_ctime":1572927199,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1572927199","product_id":100039001,"comment_content":"思从深，行从简！赞！","like_count":0},{"had_liked":false,"id":147971,"user_name":"胖大海","can_delete":false,"product_type":"c1","uid":1002290,"ip_address":"","ucode":"E9994CC28D49CB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4b/32/c067cd2f.jpg","comment_is_top":false,"comment_ctime":1572923766,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572923766","product_id":100039001,"comment_content":"对于一些特殊用途的业务需求，可能代码还需要考虑性能的一些硬性指标，因此就有可能需要牺牲一部分可读性可扩展性等；对于一些特殊的行业，比如医药行业的支持系统，还有可能需要考虑一些合规性政策对代码编写上的要求， 这方面恰恰是我们程序员们不太愿意去关注的。","like_count":0},{"had_liked":false,"id":147961,"user_name":"马小平","can_delete":false,"product_type":"c1","uid":1139457,"ip_address":"","ucode":"31B6F88F04B918","user_header":"https://static001.geekbang.org/account/avatar/00/11/63/01/cc4d66ea.jpg","comment_is_top":false,"comment_ctime":1572922552,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1572922552","product_id":100039001,"comment_content":"好的代码都差不多，不好的代码各有各的不好","like_count":0},{"had_liked":false,"id":147960,"user_name":"天空只能仰望？","can_delete":false,"product_type":"c1","uid":1102357,"ip_address":"","ucode":"D87BF6A57DAB42","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/15/4d43d05a.jpg","comment_is_top":false,"comment_ctime":1572922510,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572922510","product_id":100039001,"comment_content":"代码执行效率，代码稳定性两个重要指标，工作中很多公司都很重视这两个指标，都进行压测或者全链路压测去检验","like_count":0},{"had_liked":false,"id":147959,"user_name":"小伟","can_delete":false,"product_type":"c1","uid":1359701,"ip_address":"","ucode":"124953423491E2","user_header":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","comment_is_top":false,"comment_ctime":1572922421,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572922421","product_id":100039001,"comment_content":"代码除了运行外(给机器看)，大部分时间是给人看的。<br>一份代码是“好”还是“坏”，首先要能让人读懂，所以可读性是首位的，甚至牺牲某些性能也要保证可读性。读代码前，了解这份代码的背景很重要，说白话就是要知道这段代码是在干嘛，故一段overall的注释很有必要和重要，可以是思路、算法步骤或功能说明。最好是把可读变成易读。王老师的一句话很好，你的同事或其他人能轻松读懂你的代码，那么这个代码就是“好”代码。<br>其次，要有代码设计要有前瞻性，说白话就是业务逻辑分支要尽量多考虑到。业务逻辑决定了采用哪些设计模式来达成易扩展和易复用。如果做不到考虑周全，那么尽量选择那些有插件接口的模式来规提高易扩展和易复用性，如策略、工厂、模板等。<br>最后，易测试非常重要，尤其是在CI&#47;CD的模式下，代码要对自动化的单元、集成、回归等测试友好，否则CI&#47;CD很难有效率和效果。具体做法可参考各种DD，如TDD、BDD、DDD等。<br>总结，代码先要能读懂、好读懂，再能扩展、能复用，最后好测试、易测试。对于“好”代码，业务逻辑对错，优先级最低。可先做好前面几步，再调试业务逻辑，而不是反过来，这样的效率和效果都比较高。<br>个人看法，欢迎拍砖。","like_count":0},{"had_liked":false,"id":147954,"user_name":"蝴蝶","can_delete":false,"product_type":"c1","uid":1193167,"ip_address":"","ucode":"8019924D99182F","user_header":"https://static001.geekbang.org/account/avatar/00/12/34/cf/0a316b48.jpg","comment_is_top":false,"comment_ctime":1572922214,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1572922214","product_id":100039001,"comment_content":"打卡!","like_count":0},{"had_liked":false,"id":147928,"user_name":"考休","can_delete":false,"product_type":"c1","uid":1053955,"ip_address":"","ucode":"968DFC00D6D0CF","user_header":"https://static001.geekbang.org/account/avatar/00/10/15/03/c0fe1dbf.jpg","comment_is_top":false,"comment_ctime":1572919746,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572919746","product_id":100039001,"comment_content":"本专栏最有逼格的一句话，思丛深而行从简！","like_count":0},{"had_liked":false,"id":147916,"user_name":"坎迪汪","can_delete":false,"product_type":"c1","uid":1017033,"ip_address":"","ucode":"5B1ADFA2AF2934","user_header":"https://static001.geekbang.org/account/avatar/00/0f/84/c9/cfed3a2f.jpg","comment_is_top":false,"comment_ctime":1572919019,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572919019","product_id":100039001,"comment_content":"最重要的还是可维护性，写代码的时候就要先考虑这个。这个项目两年以后让你再添加个特性或修改个bug，你能迅速搞定么？老员工离职，新员工接手代码，完全没有办法下手的话，对他人来讲更是地狱。","like_count":0},{"had_liked":false,"id":147894,"user_name":"mark","can_delete":false,"product_type":"c1","uid":1015720,"ip_address":"","ucode":"39EDFEA8010F9B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/a8/d103904b.jpg","comment_is_top":false,"comment_ctime":1572917548,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1572917548","product_id":100039001,"comment_content":"最核心的点还是模块化，模块化之后，它的可读性就会变得非常好，可读性变好了，它的可维护性就会好，然后模块化之后它的扩展性也会变得很好，还有也会变得非常灵活，模块可以被复用，所以真正的软件编程的核心就是模块化。当然模块化不仅仅是软件工程的核心，也是传统工程问题的核心。写好代码实际上是，如何切分模块，如何组织模块的问题。我这里说的模块，可以是微观角度一个类，也可以是宏观角度的一个组件。类的组织问题，涉及到设计模式，宏观模块的组织问题涉及到架构的设计。他们两者实际上有共同的点，因为他们都是关于模块组织的艺术。","like_count":0},{"had_liked":false,"id":147888,"user_name":"古古惑惑","can_delete":false,"product_type":"c1","uid":1039710,"ip_address":"","ucode":"37724A018564FF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/dd/5e/2354204d.jpg","comment_is_top":false,"comment_ctime":1572917338,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1572917338","product_id":100039001,"comment_content":"除了文中提到的评价标准，我认为好的代码应该充分考虑各种异常情况的处理，保证代码的健壮性。<br>其次，每个函数应该尽可能简单，功能独立，代码行数最好不要超过100行。","like_count":0},{"had_liked":false,"id":147857,"user_name":"杜","can_delete":false,"product_type":"c1","uid":1236070,"ip_address":"","ucode":"E372639657C9AB","user_header":"https://static001.geekbang.org/account/avatar/00/12/dc/66/5861451b.jpg","comment_is_top":false,"comment_ctime":1572914499,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572914499","product_id":100039001,"comment_content":"高代码的另一个标准：考虑单测覆盖率","like_count":0,"discussions":[{"author":{"id":1227840,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/40/2279cfb5.jpg","nickname":"大力水手Jerry","note":"","ucode":"E4A6C71E275DB5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":316746,"discussion_content":"这篇文章（https://testing.googleblog.com/2008/12/static-methods-are-death-to-testability.html）说的比较清楚。单个的静态方法如果没有其他依赖的话，非常容易测试，但如果静态方法A又调用了静态方法B，因为B的不可替换性，我们无法单独测试静态方法A。如果整个系统引入了很多静态方法，那么这个系统的可测试性就会大大降低。简言之，静态方法是面向过程的，是一种紧耦合，从而降低了可测试性。","likes_number":12,"is_delete":false,"is_hidden":false,"ctime":1603448747,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2234620,"avatar":"https://static001.geekbang.org/account/avatar/00/22/18/fc/4f92ee4e.jpg","nickname":"江南一笑","note":"","ucode":"E38938A1178827","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1227840,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/40/2279cfb5.jpg","nickname":"大力水手Jerry","note":"","ucode":"E4A6C71E275DB5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377644,"discussion_content":"B的不可替换性是什么意思？我的理解是B方法引用进来的函数是没有被固定下来的，导致测试A方法的时候无法进行, 只能mock?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622744973,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":316746,"ip_address":""},"score":377644,"extra":""}]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588529,"discussion_content":"通读了连接的全篇，总结的非常好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663816779,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1088199,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9a/c7/c6f400c1.jpg","nickname":"许换","note":"","ucode":"2542F77E8EDDCE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312829,"discussion_content":"不好mock","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602828771,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1655940,"avatar":"https://static001.geekbang.org/account/avatar/00/19/44/84/4da14994.jpg","nickname":"呆瓜","note":"","ucode":"C98C7B224D0640","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310928,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602140671,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147855,"user_name":"追风少年","can_delete":false,"product_type":"c1","uid":1318664,"ip_address":"","ucode":"C172E9CFA3FB3E","user_header":"https://static001.geekbang.org/account/avatar/00/14/1f/08/7b5bfbc7.jpg","comment_is_top":false,"comment_ctime":1572914290,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1572914290","product_id":100039001,"comment_content":"能看懂的，能复用的","like_count":0},{"had_liked":false,"id":147801,"user_name":"辣么大","can_delete":false,"product_type":"c1","uid":1396951,"ip_address":"","ucode":"AB308B6DCA0108","user_header":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","comment_is_top":false,"comment_ctime":1572904514,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1572904514","product_id":100039001,"comment_content":"1、我觉得一个项目中要使用共同的编码标准（coding standards），例如变量命名，编码风格等等，这样写出的代码才符合项目的要求。<br>2、稳定性：维护代码的最低要求是不引入新的bug，不影响原有功能","like_count":0},{"had_liked":false,"id":147759,"user_name":"Yuuuuu","can_delete":false,"product_type":"c1","uid":1233780,"ip_address":"","ucode":"64FD04761D2111","user_header":"https://static001.geekbang.org/account/avatar/00/12/d3/74/578b169d.jpg","comment_is_top":false,"comment_ctime":1572883919,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572883919","product_id":100039001,"comment_content":"好的代码应该是大佬一看就能把握程序的整体设计，而新手看的一脸懵逼。","like_count":0},{"had_liked":false,"id":147757,"user_name":"雷霹雳的爸爸","can_delete":false,"product_type":"c1","uid":1119490,"ip_address":"","ucode":"99BBA6D83DD11F","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/02/66f65388.jpg","comment_is_top":false,"comment_ctime":1572883895,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1572883895","product_id":100039001,"comment_content":"如老师所说，代码好坏的评价带有很强的主观性，所以我还是倾向于识别代码坏味道来实际落地执行一些措施，就好象评价一个人好坏很难，甚至一些可能看似德行高尚的行为搞不好还会损害少数人的利益，但就某一个具体行为判断道德败坏还是比较容易操作的吧，拿底线来约束虽然是一种无奈，但总是向通常认为好的方向进了一步，特别是如果没有一个良好的工程师文化氛围，code review 的时候也很容易扯皮，用工具执行静态代码检查就是这个思路吧，虽然不一定能让你写出漂亮的代码，但至少能滤掉不少的初级问题","like_count":0,"discussions":[{"author":{"id":1087243,"avatar":"https://static001.geekbang.org/account/avatar/00/10/97/0b/a943bcb3.jpg","nickname":"zhou","note":"","ucode":"E1CE8575B3F106","race_medal":3,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":51825,"discussion_content":"你们code review具体是怎么做的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573957347,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147733,"user_name":"Joanfen","can_delete":false,"product_type":"c1","uid":1004260,"ip_address":"","ucode":"4CF1B92337B625","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/e4/50600574.jpg","comment_is_top":false,"comment_ctime":1572881861,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572881861","product_id":100039001,"comment_content":"代码可以很容易看出业务逻辑，方便其他人接手<br>与其他系统交互时，异常与错误信息，bug追踪是否方便","like_count":0},{"had_liked":false,"id":147723,"user_name":"仙道","can_delete":false,"product_type":"c1","uid":1161146,"ip_address":"","ucode":"CF35D34B484B71","user_header":"https://static001.geekbang.org/account/avatar/00/11/b7/ba/ae4cabd8.jpg","comment_is_top":false,"comment_ctime":1572881371,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572881371","product_id":100039001,"comment_content":"我觉得最直接的就是注释要尽可能的写详细点，最好还能举几个例子出来。","like_count":0},{"had_liked":false,"id":147716,"user_name":"花儿少年","can_delete":false,"product_type":"c1","uid":1318540,"ip_address":"","ucode":"CFE4F64243673B","user_header":"https://static001.geekbang.org/account/avatar/00/14/1e/8c/450fe5cb.jpg","comment_is_top":false,"comment_ctime":1572880635,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572880635","product_id":100039001,"comment_content":"我个人觉得需要补上两个<br>安全性---不能只有正常逻辑而不处理任何异常<br>性能--- 如果不是性能敏感的场景，或者说做到了老师说的那七点，这个点应该就不存在了","like_count":0},{"had_liked":false,"id":147656,"user_name":"潇潇雨歇","can_delete":false,"product_type":"c1","uid":1251429,"ip_address":"","ucode":"4BD52BF0F0A084","user_header":"https://static001.geekbang.org/account/avatar/00/13/18/65/35361f02.jpg","comment_is_top":false,"comment_ctime":1572876920,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572876920","product_id":100039001,"comment_content":"优雅，健壮，能处理各种问题，比较稳定。可读性很重要，平常总是觉得项目设计的不够好，很多时候为了完成而完成，没有更多的从代码层面去思考，怎么写出更好的代码，加油","like_count":0},{"had_liked":false,"id":147639,"user_name":"GeekAmI","can_delete":false,"product_type":"c1","uid":1005030,"ip_address":"","ucode":"232C0B6DFB9F56","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/e6/87197b10.jpg","comment_is_top":false,"comment_ctime":1572875409,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1572875409","product_id":100039001,"comment_content":"目前来看，我认为Netty的代码抽象的不错。","like_count":0},{"had_liked":false,"id":147616,"user_name":"　扬帆丶启航　","can_delete":false,"product_type":"c1","uid":1235282,"ip_address":"","ucode":"4079D0889CD86C","user_header":"https://static001.geekbang.org/account/avatar/00/12/d9/52/73351eab.jpg","comment_is_top":false,"comment_ctime":1572873386,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572873386","product_id":100039001,"comment_content":"可读性，健壮性，易于阅读并且能够处理各种异常情况","like_count":0},{"had_liked":false,"id":147593,"user_name":"ldd","can_delete":false,"product_type":"c1","uid":1208157,"ip_address":"","ucode":"E8344FAFFE5CF3","user_header":"https://static001.geekbang.org/account/avatar/00/12/6f/5d/f0a19f09.jpg","comment_is_top":false,"comment_ctime":1572872048,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1572872048","product_id":100039001,"comment_content":"稳定性，健壮性也很重要，特别是在一些特定错误的容错上。我个人觉得，这点在客户端的开发过程中尤为重要！","like_count":0,"discussions":[{"author":{"id":2323679,"avatar":"https://static001.geekbang.org/account/avatar/00/23/74/df/6c4c970c.jpg","nickname":"刘胜","note":"","ucode":"2ED796A94E1C8B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327458,"discussion_content":"我补充2点  1性能 2安全 客户端开发的 感受","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605842519,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147579,"user_name":"Cy23","can_delete":false,"product_type":"c1","uid":1591293,"ip_address":"","ucode":"8DC561C5151758","user_header":"https://static001.geekbang.org/account/avatar/00/18/47/fd/895f0c27.jpg","comment_is_top":false,"comment_ctime":1572871060,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572871060","product_id":100039001,"comment_content":"可读性不佳，可能水平不对等带来降级打击，也有可能是逻辑有点乱没有连续性。","like_count":0},{"had_liked":false,"id":147553,"user_name":"不破楼兰终不还","can_delete":false,"product_type":"c1","uid":1145867,"ip_address":"","ucode":"F06EEF04552A90","user_header":"https://static001.geekbang.org/account/avatar/00/11/7c/0b/2b5e5da5.jpg","comment_is_top":false,"comment_ctime":1572869498,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572869498","product_id":100039001,"comment_content":"平常践行最多的也就是简洁性，可读性，可复用性了。灵活性，可扩展性和可测试性都没有特别的在意，或者说不知道怎么去在意。","like_count":0},{"had_liked":false,"id":147511,"user_name":"哇哦","can_delete":false,"product_type":"c1","uid":1250599,"ip_address":"","ucode":"1F16B9150E93C3","user_header":"https://static001.geekbang.org/account/avatar/00/13/15/27/c5e4ec99.jpg","comment_is_top":false,"comment_ctime":1572867592,"is_pvip":false,"replies":[{"id":"57055","content":"是有重合，文章中有提到。","user_name":"作者回复","comment_id":147511,"uid":"1190123","ip_address":"","utype":1,"ctime":1572947529,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1572867592","product_id":100039001,"comment_content":"感觉列出的七个标准有一定重合部分。。比如说感觉灵活性，可拓展性，可复用。","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473256,"discussion_content":"是有重合，文章中有提到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572947529,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147496,"user_name":"梁军","can_delete":false,"product_type":"c1","uid":1521145,"ip_address":"","ucode":"81E22EFAFD77B4","user_header":"https://static001.geekbang.org/account/avatar/00/17/35/f9/7a682fc1.jpg","comment_is_top":false,"comment_ctime":1572867010,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572867010","product_id":100039001,"comment_content":"学之前先确定目标，标准，事半功倍","like_count":0},{"had_liked":false,"id":147467,"user_name":"七楼","can_delete":false,"product_type":"c1","uid":1491023,"ip_address":"","ucode":"106856DF5F8F12","user_header":"https://static001.geekbang.org/account/avatar/00/16/c0/4f/db7f2ab2.jpg","comment_is_top":false,"comment_ctime":1572865497,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1572865497","product_id":100039001,"comment_content":"是嘛。可测试性 ","like_count":0,"discussions":[{"author":{"id":1491023,"avatar":"https://static001.geekbang.org/account/avatar/00/16/c0/4f/db7f2ab2.jpg","nickname":"七楼","note":"","ucode":"106856DF5F8F12","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43291,"discussion_content":"相加老师微信。咨询下学习方向。我很迷","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572867057,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147396,"user_name":"虎哥","can_delete":false,"product_type":"c1","uid":1185061,"ip_address":"","ucode":"29D604EC85D3BC","user_header":"https://static001.geekbang.org/account/avatar/00/12/15/25/1d3d616f.jpg","comment_is_top":false,"comment_ctime":1572862236,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1572862236","product_id":100039001,"comment_content":"tomcat源码就蛮好","like_count":0,"discussions":[{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44634,"discussion_content":"具体请看tomcat相关专栏","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572959530,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1126534,"avatar":"https://static001.geekbang.org/account/avatar/00/11/30/86/c4e4d753.jpg","nickname":"优雅一点","note":"","ucode":"DA9608594E7602","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43250,"discussion_content":"光说好没用，要说出具体哪里好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572865124,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1725831,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/55/87/2ca3c6ab.jpg","nickname":"欢乐马","note":"","ucode":"8B9EFAFE948B61","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1126534,"avatar":"https://static001.geekbang.org/account/avatar/00/11/30/86/c4e4d753.jpg","nickname":"优雅一点","note":"","ucode":"DA9608594E7602","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43548,"discussion_content":"👍，那必须的，说出哪点好，才是真的好😊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572880945,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":43250,"ip_address":""},"score":43548,"extra":""}]}]}]}