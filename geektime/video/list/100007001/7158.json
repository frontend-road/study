{"id":7158,"title":"16 |【实验】授权服务器支持 JWT 令牌","content":"无","comments":[{"had_liked":false,"id":17955,"user_name":"简白","can_delete":false,"product_type":"c3","uid":1043215,"ip_address":"","ucode":"6FEF61822B7355","user_header":"https://static001.geekbang.org/account/avatar/00/0f/eb/0f/f2803e83.jpg","comment_is_top":false,"comment_ctime":1533049340,"is_pvip":false,"replies":[{"id":6386,"content":"嗯，节省集中式令牌校验开销，实现无状态授权认证，是jwt等自包含令牌一大优势。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1533217932,"ip_address":"","comment_id":17955,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"自包含token的优势在哪里呢？节约一次访问？","like_count":4,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421344,"discussion_content":"嗯，节省集中式令牌校验开销，实现无状态授权认证，是jwt等自包含令牌一大优势。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533217932,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186592,"user_name":"也无名","can_delete":false,"product_type":"c3","uid":1847908,"ip_address":"","ucode":"174E6122E9B947","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKZicicibGibtR5zMkY5ia9Mn8sFJxHACMwtPfdstWLhXWPVTO1h6EMMo9KgVE8gb6aIzR7mDrUAZZpSNQ/132","comment_is_top":false,"comment_ctime":1583889707,"is_pvip":false,"replies":[{"id":72325,"content":"这个应该有不少做法。\n\n如果按oauth2的一个做法，你每个应用都应该在oauth2服务器上注册client，后面每个应用client都需要去oauth2服务器认证授权获取token，比如针对web应用可以走授权码流程，这个时候每个client获得的token其实是不同的，但是只要用户的browser在oauth2服务器上登录过，那么oauth2服务器就会暂存web session，后面只要session不过期，用户browser再次访问oauth2服务器(即便是另外一个client应用)，就不需要登录了，brower直接跳回，后台自动完成授权码的后续流程，也就是获得token。\n\n可以参考这个项目，ppt中有sso流程样例。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1584102385,"ip_address":"","comment_id":186592,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"杨老师，我们需要做SSO，用oauth + jwt怎么实现呢？ 也就是用户希望通过一个token在一个browser上免密登录多个Web服务。我想法是把这个用户的信息放到jwt token中由授权服务器保存，然后用户登录的多个web服务都会跳转到授权服务器，授权服务器发现是来自于一个browser的就可以返还相同的token（前提是做过一次正常的password验证），然后用户的体验就是只要在一个browser上成功登录一次，访问其他通认证体系的web server都直接进入不需要再进行认证。业界是这样做的吗？","like_count":2,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486807,"discussion_content":"这个应该有不少做法。\n\n如果按oauth2的一个做法，你每个应用都应该在oauth2服务器上注册client，后面每个应用client都需要去oauth2服务器认证授权获取token，比如针对web应用可以走授权码流程，这个时候每个client获得的token其实是不同的，但是只要用户的browser在oauth2服务器上登录过，那么oauth2服务器就会暂存web session，后面只要session不过期，用户browser再次访问oauth2服务器(即便是另外一个client应用)，就不需要登录了，brower直接跳回，后台自动完成授权码的后续流程，也就是获得token。\n\n可以参考这个项目，ppt中有sso流程样例。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584102385,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94961,"user_name":"follow","can_delete":false,"product_type":"c3","uid":1509136,"ip_address":"","ucode":"5CB49510077AFD","user_header":"https://static001.geekbang.org/account/avatar/00/17/07/10/7ff147b5.jpg","comment_is_top":false,"comment_ctime":1557930426,"is_pvip":false,"replies":[{"id":34039,"content":"具体要看场景对安全的严格要求程度，大部分场景轻量级jwt这种无状态自包含令牌就基本ok了，有些要求比较严的场景（比如金融行业），需要透明令牌+有状态集中式校验，这个时候一般可以采用redis做令牌缓存进行令牌校验操作的性能优化。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1558009238,"ip_address":"","comment_id":94961,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"波波老师您好，大型产品生产环境中一般会选用jwt这种方案吗？还是会使用redis做缓存好呢？","like_count":2,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450275,"discussion_content":"具体要看场景对安全的严格要求程度，大部分场景轻量级jwt这种无状态自包含令牌就基本ok了，有些要求比较严的场景（比如金融行业），需要透明令牌+有状态集中式校验，这个时候一般可以采用redis做令牌缓存进行令牌校验操作的性能优化。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558009238,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":34915,"user_name":"Douglas","can_delete":false,"product_type":"c3","uid":1073027,"ip_address":"","ucode":"CFDE3D76B9DAE6","user_header":"https://static001.geekbang.org/account/avatar/00/10/5f/83/bb728e53.jpg","comment_is_top":false,"comment_ctime":1540352852,"is_pvip":false,"replies":[{"id":12616,"content":"可以，适合单页应用，实现无状态登录","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1540554249,"ip_address":"","comment_id":34915,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"老师jwt 适合浏览器端的吗","like_count":2,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427385,"discussion_content":"可以，适合单页应用，实现无状态登录","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540554249,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":220516,"user_name":"胡卡杰","can_delete":false,"product_type":"c3","uid":1908327,"ip_address":"","ucode":"85C95A22D0EFCE","user_header":"","comment_is_top":false,"comment_ctime":1590269225,"is_pvip":false,"replies":[{"id":81763,"content":"一般把本地缓存(比如说浏览器的local storage or cookie)里头的jwt令牌清除掉，就可以登出了。或者，等过期自然登出。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1590593550,"ip_address":"","comment_id":220516,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"jwt如何登出","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496162,"discussion_content":"一般把本地缓存(比如说浏览器的local storage or cookie)里头的jwt令牌清除掉，就可以登出了。或者，等过期自然登出。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590593550,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74679,"user_name":"Ethan","can_delete":false,"product_type":"c3","uid":1061767,"ip_address":"","ucode":"86F679C62B90AA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epTXXDNFFe90dwTK2s5PxeuYn3MOLvfU6YLQ0uxuf9bXI8dWXgib5LRnOwk1uWiaDHqIGibOKyU4x3CQ/132","comment_is_top":false,"comment_ctime":1552280240,"is_pvip":false,"replies":[{"id":27285,"content":"也不一定，具体要看应用场景，有些应用（比如一些文章社区站点）是安全不敏感的，user name&#47;id之类信息被外面用户看到也没关系(当然密码之类机密信息肯定不能放在自包含token向外暴露)；而有些应用则是安全敏感的(例如涉及交易支付的)，则不能随便泄露用户敏感信息，一般对外要用透明令牌并且严格校验。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1552310137,"ip_address":"","comment_id":74679,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"自包含token是只能用于内部系统间的通信？毕竟secrete应该是不能给到第三方客户的吧？","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442650,"discussion_content":"也不一定，具体要看应用场景，有些应用（比如一些文章社区站点）是安全不敏感的，user name/id之类信息被外面用户看到也没关系(当然密码之类机密信息肯定不能放在自包含token向外暴露)；而有些应用则是安全敏感的(例如涉及交易支付的)，则不能随便泄露用户敏感信息，一般对外要用透明令牌并且严格校验。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552310137,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":38023,"user_name":"朢不了你","can_delete":false,"product_type":"c3","uid":1232145,"ip_address":"","ucode":"2C2F6E8F9C6139","user_header":"https://static001.geekbang.org/account/avatar/00/12/cd/11/cdcc761e.jpg","comment_is_top":false,"comment_ctime":1541864307,"is_pvip":false,"replies":[{"id":13752,"content":"如果使用授权码模式且启用支持refresh token，则用户webapp经过授权认证可获取一对access token和refresh token对，后继访问api可用access token，refresh token可暂存（一般可存webapp对应db或cache，后面如果access token过期的话，webapp就可用refresh token重新获取access token。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1542026816,"ip_address":"","comment_id":38023,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"老师，问下 比如说 用户第一次登录拿到access_token 后进行访问，这是token过期了，想利用refresh_token给用户一个token ,我想问得是\n第一：token和refresh_token这个具体关系是怎么样的,比如说登录成功后可以把token写到herder,这个refresh_token是调用授权服务器生成的吗 ？可以有其他处理方式吗？比如说我想自己生成一个refresh_token,但是这两者具体细节是怎样的","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428565,"discussion_content":"如果使用授权码模式且启用支持refresh token，则用户webapp经过授权认证可获取一对access token和refresh token对，后继访问api可用access token，refresh token可暂存（一般可存webapp对应db或cache，后面如果access token过期的话，webapp就可用refresh token重新获取access token。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542026816,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":191733,"user_name":"孙宏","can_delete":false,"product_type":"c3","uid":1267800,"ip_address":"","ucode":"AC5E277007343D","user_header":"https://static001.geekbang.org/account/avatar/00/13/58/58/ab1234e1.jpg","comment_is_top":false,"comment_ctime":1584793273,"is_pvip":false,"replies":[{"id":74005,"content":"谢谢支持！⛽️","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1585052655,"ip_address":"","comment_id":191733,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"老师讲的真好","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488243,"discussion_content":"谢谢支持！⛽️","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585052655,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46387,"user_name":"涧泉","can_delete":false,"product_type":"c3","uid":1045974,"ip_address":"","ucode":"41FA440AD70751","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f5/d6/0b90452b.jpg","comment_is_top":false,"comment_ctime":1543913517,"is_pvip":false,"replies":[{"id":16606,"content":"根据安全需求，合理设置令牌有效期，可做一些加秘密，增加黑客偷取难度","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1543929402,"ip_address":"","comment_id":46387,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"老师，关于客户端存储Token的安全性有没有什么方案？","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431443,"discussion_content":"根据安全需求，合理设置令牌有效期，可做一些加秘密，增加黑客偷取难度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543929402,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":35208,"user_name":"Douglas","can_delete":false,"product_type":"c3","uid":1073027,"ip_address":"","ucode":"CFDE3D76B9DAE6","user_header":"https://static001.geekbang.org/account/avatar/00/10/5f/83/bb728e53.jpg","comment_is_top":false,"comment_ctime":1540459845,"is_pvip":false,"replies":[{"id":12612,"content":"授权码模式是支持刷新令牌的，令牌过期通过刷新令牌换新令牌。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1540553623,"ip_address":"","comment_id":35208,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"Token 的刷新有好的方案吗","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427477,"discussion_content":"授权码模式是支持刷新令牌的，令牌过期通过刷新令牌换新令牌。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540553623,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}