{"id":770290,"title":"06｜指纹ID：如何通过指纹ID关联全链路日志？","content":"<p>你好，我是三桥。</p><p>在之前的课程当中，我们设计了一套基于最少字段原则的全链路日志模型。你还记得数据模型中提到的fpId字段吗？</p><p>对，它就是指纹ID。在我们深入探讨指纹ID之前，先来看看前端同学在实际项目遇到的一种情况。这次，我们以极客时间的网站为例。</p><p>通常，一个Web网站总会有陌生的访客通过浏览器访问。我注意到极客官网会对陌生访客自动弹出一个提供双方意向匹配度的产品功能，给用户推荐合适的内容。</p><p><img src=\"https://static001.geekbang.org/resource/image/11/03/1160479530cb678897632c70cdf36b03.png?wh=1284x1330\" alt=\"图片\"></p><p>咱们来看看这个业务场景，用户在选好信息选项后，直接提交并跳转至登录页面。登录成功后，页面会自动跳转至个人主页。</p><p>我们假设，你进入个人中心页面时发现很多地方都是空白的，没任何数据显示，包括推荐购买课程的列表。</p><p>在这种情况下，我们的前端同学只能针对发生这个问题的用户检查接口是否存在问题。虽然检查结果显示接口没有问题，但我们还是无法追踪用户登录前的流程状态，因为我们无法关联任何未登录用户的交互日志。</p><p>想一下，如果我们能在用户访问我们的服务时提供有一个唯一的标识，并将这个标识和用户的行为日志关联起来，那么是不是无论用户是否登录，我们都可以追踪到用户的行为轨迹了？</p><h2>指纹ID</h2><p>我们每个人的指纹都是独一无二的，浏览器指纹也是同样道理。由于浏览器提供了很多有价值的特性给前端同学通过代码获取，例如UserAgent、分辨率、色彩深度、系统平台、语言、触摸屏、地理位置、语言支持特性、图像特性等等。<strong>所以，我们只要收集这些具有较高辨析度的信息，并进行一定的计算处理，就能生成一个能唯一标识当前浏览器的值，也就是我们所说的指纹ID。</strong></p><!-- [[[read_end]]] --><p>既然指纹ID是利用浏览器的一些特性来生成一个独一无二的标识，那么，我们就可以利用这个标识，把用户在登录前和登录后的行为日志关联起来，追踪到用户的行为轨迹。有时候，你在不同网站上看到的那些曾经访问过的产品的广告，就是利用指纹特性记录用户行为之后推荐给你的。</p><p>如果作为用户，你可能会觉得被网站通过指纹技术追踪自己的行为踪迹，或多或少侵犯了自己的隐私。但在这里，我们的目的是追踪前端应用的用户行为，是为了帮助用户提升体验，快速解决问题。一定要记住，我们的出发点并不是获取用户的隐私。</p><h2>指纹生成方案的选择</h2><p>市场上有很多生成指纹ID的解决方案。在前端技术领域中，最知名的JavaScript库就是 <strong>FingerprintJS</strong>，它有两个版本，分别是开源版本和商用版本。据官方介绍，开源版本的识别率达到40~60%，而商用版本的识别率则高到99.5%。</p><p>实际上，尽管FingerprintJS的指纹识别技术非常出色，但在前端全链路中使用就有点儿大材小用了。为了一个字段，没有必要引入一个复杂的JavaScript库。</p><p>那么，有没有其它轻量级的指纹生成解决方案？</p><p>答案是有的，这个方案就是<strong>帆布指纹识别技术</strong>。它是一种利用帆布纹理特征进行身份验证的方法。具体实现的思路，就是利用HTML5的画布的Canvas特性，通过Canvas生成的图片，然后转换成哈希码，从而形成用户指纹。</p><p>为什么选择Canvas作为我们指纹生成方案呢？</p><p>你想想看，我们追踪用户链路日志的前提是<strong>在一个浏览器场景下的行为追踪</strong>。在这节课开始时提到的例子中，我们并不需要在多个浏览器之间识别同一用户。恰好，使用Canvas生成的画布在不同设备和浏览器之间是存在细微的差异的，只有在同设备和浏览器下生成的指纹几乎不变。</p><h2>浏览器指纹的实现</h2><p>接下来，我们将尝试利用Canvas画布特性，实现生成独特指纹ID的通用方法。</p><p>既然我们要使用Canvas特性，那么有一个前提条件就是浏览器必须支持Canvas标签。首先，我们需要创建一个Canvas元素，并生成上下文Context。</p><pre><code class=\"language-javascript\">const canvas = document.createElement('canvas'); const ctx = canvas.getContext(\"2d\");\n</code></pre><p>第二步，我们在Canvas画布上填充矩形和文字，并设置字体、颜色、位置等属性。</p><pre><code class=\"language-javascript\">const txt = 'geekbang'\nctx.textBaseline =\"top\"\nctx.font = \"14px 'Arial'\"\n\nctx.fillStyle = \"#f60\"\n// 先画一个60x20矩形内容\nctx.fillRect(125, 1, 60, 20)\n// 把字填充到矩形内\nctx.fillStyle = \"#069\"\nctx.fillText(txt, 2, 15);\n</code></pre><p>然后，我们采用社区提供的转换方案，将填充的矩形和文字的画布转换成Base64字符串。接下来，我们使用atob函数对Base64字符串进行编码，最后截取一部分字符，将其转换成十六进制字符串。</p><pre><code class=\"language-javascript\">const b64 = canvas.toDataURL().replace(\"data:image/png;base64,\",\"\");\nconst bin = atob(b64);\nconst crc = bin2hex(bin.slice(-16,-12));\n</code></pre><p>通过刚才的方案生成指纹ID后，就能产生同一设备下、同一个浏览器的唯一标识。</p><p>但要注意，这个代码不是通用的，因为画布是通过输出“geekbang”字符串实现的。为了让每个业务都有自己独特的指纹ID识别逻辑，我们还需要对代码进行简单的封装。</p><p>你可以和我一起尝试一下封装优化。由于每个业务都有各自独立性，我们将填充字符串、字体、色彩、位置的部分提取出来，作为参数传入。</p><p>例如，我定义了以下四个指纹参数类型。</p><pre><code class=\"language-javascript\">type FingerprintOptions = {\n&nbsp; font?: string\n&nbsp; reactStyle?: string | CanvasGradient | CanvasPattern\n&nbsp; contentStyle?: string | CanvasGradient | CanvasPattern\n&nbsp; textBaseline?: CanvasTextBaseline\n}\n</code></pre><p>接下来，我把生成指纹的逻辑封装在了一个函数中，并把它命名为getFingerprintId函数。</p><pre><code class=\"language-typescript\">export const getFingerprintId = (content: string, options?: FingerprintOptions) =&gt; {\n&nbsp; if (!content) {\n&nbsp; &nbsp; console.error(\"content is empty\");\n&nbsp; &nbsp; return null;\n&nbsp; }\n&nbsp; const canvas = document.createElement('canvas');\n&nbsp; const ctx = canvas.getContext(\"2d\");\n&nbsp; // 如果不存在，则返回空值，说明不支持Canvas指纹\n&nbsp; if (!ctx) return null;\n\n&nbsp; const txt = content || 'geekbang';\n&nbsp; ctx.textBaseline = options &amp;&amp; options.textBaseline ? options.textBaseline : \"top\";\n&nbsp; ctx.font = options &amp;&amp; options.font ? options.font : \"14px 'Arial'\";\n\n&nbsp; ctx.fillStyle = options &amp;&amp; options.reactStyle ? options.reactStyle : \"#f60\";\n&nbsp; // 先画一个60x20矩形内容\n&nbsp; ctx.fillRect(125, 1, 60, 20);\n\n&nbsp; ctx.fillStyle = options &amp;&amp; options.contentStyle ? options.contentStyle : \"#069\";\n&nbsp; // 把字填充到矩形内\n&nbsp; ctx.fillText(txt, 2, 15);\n\n&nbsp; const b64 = canvas.toDataURL().replace(\"data:image/png;base64,\",\"\");\n&nbsp; const bin = atob(b64);\n&nbsp; const crc = bin2hex(bin.slice(-16,-12));\n&nbsp; return crc;\n}\n</code></pre><p>getFingerprintId函数接收了两个参数。第一个是必选项，传入业务名称参数，也就是我们在画布上填充的内容。第二个参数是可选项，传入样式参数，用于业务自定义参数，以实现与不同项目的差异化。</p><p>至此，我们实现了一套获取浏览器指纹的通用方法。拥有了指纹ID，我们就能将这节课开始时提到的登录前后的用户交互逻辑关联起来。通过登录前的用户全链路日志，我们就能了解用户在登录前的状态了。</p><p>下图展示了指纹ID关联全链路日志的流程。</p><p><img src=\"https://static001.geekbang.org/resource/image/96/e8/964f3917def73be24cd600502cc726e8.png?wh=2014x872\" alt=\"图片\"></p><p>实际上，使用Canvas特性生成的指纹ID也是有缺点的。它需要依赖canvas画布能力，万一浏览器不支持Canvas就无法生成指纹ID，例如小程序环境。</p><p>小程序是一个特殊的容器环境，并非是一个真实的浏览器容器，其提供的canvas能力差异性较大，不能用作指纹ID生成的方案。所以，如果小程序环境要获取类似指纹作用的唯一值，我的建议是把小程序设置为静默登录后获取openid。</p><h2>指纹ID的局限性</h2><p>说到这，你可能会觉得指纹ID简直太重要了，关联用户在同一浏览器下的每个过程的行为轨迹，定位问题，能解决各种疑难杂症。但是，任何解决方案都是有自己的局限性的。</p><p>首先，我们再强调一下，浏览器指纹ID可能侵犯用户的隐私，当多款前端产品使用的是同一套指纹逻辑，产品之间的指纹ID就可以实现用户信息的共享。这也是你经常在不同的软件里看到推荐的广告都很像的原因之一。</p><p>其次，就咱们这节课使用的<strong>帆布指纹识别技术</strong>来说，不同设备和浏览器生成的指纹ID是存在差异的。那反过来说，同一用户在不同浏览器使用前端功能的时候，我们就不能关联分析两个浏览器的状态。假设，你在苹果手机上使用微信和Safari浏览器访问同一个前端页面，这时就会出现两个不同指纹ID，这样就没法把两者的链路日志关联起来。</p><h2>总结</h2><p>本节课，我们重点探讨了把指纹ID关联到全链路日志的方法。这节课实现的Canvas指纹方案逻辑相对简单，不能保证100%不会重复指纹ID，但已足够协助前端同学快速定位问题。</p><p>在大公司里，指纹ID的实现方案大同小异。他们的前端产品用户量级更大，更需要增加更多的影响元素来减少重复率。</p><p>例如，在前端场景，我们还可以增加浏览器语言、屏幕色彩、屏幕分辨率、操作系统、CPU信息等。结合Canvas指纹，可以进一步增加指纹ID的量级，减少重复率。</p><p>对于海外的前端工程师，由于产品调性以及个人喜好，他们更倾向使用诸如Fingerprint这样的订阅制产品。这类商业产品提供的指纹ID更精准，接近100%无重复，非常受欢迎。只不过唯一的缺点是需要付费，且价格不菲。</p><h2>思考题</h2><p>在这节课的最后，我给你一个思考题。我们之前提到，为了提高指纹识别ID的精度并降低重复率，需要增加更多的影响因素。</p><p>首先，你可以尝试增加更多的影响因素，修改上面的通用函数逻辑。</p><p>其次，观察一下，增加影响因素后指纹ID是否有明显的差异，以及是否有重复的问题？</p><p>欢迎你在留言区和我交流。如果觉得有所收获，也可以把课程分享给更多的朋友一起学习。我们下节课见！</p>","comments":[{"had_liked":false,"id":392573,"user_name":"苏果果","can_delete":false,"product_type":"c1","uid":2852467,"ip_address":"北京","ucode":"12A62ED032F345","user_header":"https://static001.geekbang.org/account/avatar/00/2b/86/73/5190bbde.jpg","comment_is_top":true,"comment_ctime":1721270708,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100759401,"comment_content":"06源码：\nhttps:&#47;&#47;github.com&#47;sankyutang&#47;fontend-trace-geekbang-course&#47;blob&#47;main&#47;trace-sdk&#47;src&#47;core&#47;fingerprint.ts\n\n完整源码入口：\nhttps:&#47;&#47;github.com&#47;sankyutang&#47;fontend-trace-geekbang-course","like_count":0},{"had_liked":false,"id":392346,"user_name":"嘿~那个谁","can_delete":false,"product_type":"c1","uid":1565897,"ip_address":"广东","ucode":"4959A1745AB5E0","user_header":"https://static001.geekbang.org/account/avatar/00/17/e4/c9/651c54a7.jpg","comment_is_top":false,"comment_ctime":1720659827,"is_pvip":false,"replies":[{"id":142665,"content":"源码地址：https:&#47;&#47;github.com&#47;sankyutang&#47;fontend-trace-geekbang-course","user_name":"作者回复","user_name_real":"编辑","uid":1327155,"ctime":1721204901,"ip_address":"广东","comment_id":392346,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100759401,"comment_content":"课程中的内容没有课间和源码吗？","like_count":0,"discussions":[{"author":{"id":1327155,"avatar":"https://static001.geekbang.org/account/avatar/00/14/40/33/11e434ba.jpg","nickname":"三橋sankyu 🐩","note":"","ucode":"2129405EA8D3D7","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":648201,"discussion_content":"源码地址：https://github.com/sankyutang/fontend-trace-geekbang-course","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1721204901,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":390523,"user_name":"JuneRain","can_delete":false,"product_type":"c1","uid":3688751,"ip_address":"广东","ucode":"2A92727BF9F6DE","user_header":"https://static001.geekbang.org/account/avatar/00/38/49/2f/590142fb.jpg","comment_is_top":false,"comment_ctime":1715562516,"is_pvip":false,"replies":[{"id":142700,"content":"指纹ID使用Canvas方案是利用手机端浏览器渲染的差异性实现的。指定字符串“geekbang”的作用是区分项目，如果纯粹转换&quot;geekbang&quot;为base64，那么指纹ID的差异性就没法突显出作用了。","user_name":"作者回复","user_name_real":"编辑","uid":1327155,"ctime":1721636414,"ip_address":"广东","comment_id":390523,"utype":1}],"discussion_count":5,"race_medal":0,"score":2,"product_id":100759401,"comment_content":"没太理解这个指纹ID为什么要利用 canvas 来生成，直接利用指定字符串 &quot;geekbang&quot; 然后转成 base64 格式再截取不也一样的效果？","like_count":0,"discussions":[{"author":{"id":1327155,"avatar":"https://static001.geekbang.org/account/avatar/00/14/40/33/11e434ba.jpg","nickname":"三橋sankyu 🐩","note":"","ucode":"2129405EA8D3D7","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":648449,"discussion_content":"指纹ID使用Canvas方案是利用手机端浏览器渲染的差异性实现的。指定字符串“geekbang”的作用是区分项目，如果纯粹转换&#34;geekbang&#34;为base64，那么指纹ID的差异性就没法突显出作用了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1721636414,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":1,"child_discussions":[{"author":{"id":3688751,"avatar":"https://static001.geekbang.org/account/avatar/00/38/49/2f/590142fb.jpg","nickname":"JuneRain","note":"","ucode":"2A92727BF9F6DE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1327155,"avatar":"https://static001.geekbang.org/account/avatar/00/14/40/33/11e434ba.jpg","nickname":"三橋sankyu 🐩","note":"","ucode":"2129405EA8D3D7","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":648460,"discussion_content":"所以意思是，不同设备，利用canvas将同样的字符串生成的图案数据是不一样的是吧。就像不同的人写同一个名字，笔顺之类地方的有差异？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1721650508,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":648449,"ip_address":"广东","group_id":0},"score":648460,"extra":""}]},{"author":{"id":1303713,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e4/a1/178387da.jpg","nickname":"25ma","note":"","ucode":"AB5435B9DB52C9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":645779,"discussion_content":"的确是的，希望老师讲讲为什么要这么做？以及还有其他方案吗？ ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1716769340,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3688751,"avatar":"https://static001.geekbang.org/account/avatar/00/38/49/2f/590142fb.jpg","nickname":"JuneRain","note":"","ucode":"2A92727BF9F6DE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":644872,"discussion_content":"文章中，老师给的示例是简单的利用 canvas 画个矩形，再填充 ‘geekbang’ 字符串，然后转base64再截取。这样的话，每台设备生成的结果应该也都是一样的吧。 难道说每台设备的分辨率之类的不同，canvas 画出来的图像结果有细微差异？！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1715577185,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2849211,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/79/bb/fc85ee5e.jpg","nickname":"Hqudmx1994","note":"","ucode":"A9B88EC663C294","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":644855,"discussion_content":"直接base64后截取，这样所有人的应该都是一样的，没有设备的差异性在","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1715566363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":390141,"user_name":"westfall","can_delete":false,"product_type":"c1","uid":1632773,"ip_address":"上海","ucode":"F3F5CB7DF695FC","user_header":"https://static001.geekbang.org/account/avatar/00/18/ea/05/9976b871.jpg","comment_is_top":false,"comment_ctime":1714459170,"is_pvip":false,"replies":[{"id":142067,"content":"traceId是日志唯一键值噢，指纹ID主要作用是识别用户的。","user_name":"作者回复","user_name_real":"编辑","uid":1327155,"ctime":1715699460,"ip_address":"广东","comment_id":390141,"utype":1}],"discussion_count":5,"race_medal":0,"score":2,"product_id":100759401,"comment_content":"有了指纹ID，还需要 traceId 吗？","like_count":0,"discussions":[{"author":{"id":1327155,"avatar":"https://static001.geekbang.org/account/avatar/00/14/40/33/11e434ba.jpg","nickname":"三橋sankyu 🐩","note":"","ucode":"2129405EA8D3D7","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":645016,"discussion_content":"traceId是日志唯一键值噢，指纹ID主要作用是识别用户的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1715699460,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3883639,"avatar":"","nickname":"Geek_daf4db","note":"","ucode":"77C73FC126AF00","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":643821,"discussion_content":"traceId是后端内部系统唯一追踪ID，况且指纹ID是前端生成的不具备唯一性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1714659293,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1632773,"avatar":"https://static001.geekbang.org/account/avatar/00/18/ea/05/9976b871.jpg","nickname":"westfall","note":"","ucode":"F3F5CB7DF695FC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":3883639,"avatar":"","nickname":"Geek_daf4db","note":"","ucode":"77C73FC126AF00","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":643869,"discussion_content":"traceid也是前端生成的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1714721382,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":643821,"ip_address":"江苏","group_id":0},"score":643869,"extra":""}]},{"author":{"id":1040095,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/de/df/e94b88aa.jpg","nickname":"dudustyle","note":"","ucode":"80094CCBBB6F99","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":643605,"discussion_content":"不一样，traceId是针对每一个请求的链路追踪","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1714468264,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"湖南","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1632773,"avatar":"https://static001.geekbang.org/account/avatar/00/18/ea/05/9976b871.jpg","nickname":"westfall","note":"","ucode":"F3F5CB7DF695FC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1040095,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/de/df/e94b88aa.jpg","nickname":"dudustyle","note":"","ucode":"80094CCBBB6F99","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":643643,"discussion_content":"哦，你的意思是比如某个用户发起了三次请求，其中一个请求发生了错误，如果只有指纹id的话，三个请求都是一样的，无法区分出错误的那个链路了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1714489501,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":643605,"ip_address":"上海","group_id":0},"score":643643,"extra":""}]}]},{"had_liked":false,"id":394264,"user_name":"Aaaaaaaaaaayou","can_delete":false,"product_type":"c1","uid":1073601,"ip_address":"广东","ucode":"67BA315B87587D","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/c1/93031a2a.jpg","comment_is_top":false,"comment_ctime":1726280583,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100759401,"comment_content":"同一个型号的手机加同一个版本的浏览器生成出来的画布也会不同么？","like_count":1},{"had_liked":false,"id":395655,"user_name":"天天","can_delete":false,"product_type":"c1","uid":2000254,"ip_address":"四川","ucode":"2B9414A72EB338","user_header":"https://static001.geekbang.org/account/avatar/00/1e/85/7e/dc5ee66c.jpg","comment_is_top":false,"comment_ctime":1731586575,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100759401,"comment_content":"canvas这个原理确实没讲清楚，我猜就算是同一个型号的手机，同个版本的浏览器，用canvas画一个图案出来也不一样","like_count":0},{"had_liked":false,"id":390676,"user_name":"雪舞","can_delete":false,"product_type":"c1","uid":1245961,"ip_address":"广东","ucode":"4A06FE6D3EB777","user_header":"https://static001.geekbang.org/account/avatar/00/13/03/09/afbc9616.jpg","comment_is_top":false,"comment_ctime":1715939054,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100759401,"comment_content":"bin2hex 这个是自定义函数吗？作用是干嘛的？函数定义是怎样的？","like_count":0,"discussions":[{"author":{"id":1303713,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e4/a1/178387da.jpg","nickname":"25ma","note":"","ucode":"AB5435B9DB52C9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":645778,"discussion_content":"这个是二进制转换成16进制的方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1716769221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}