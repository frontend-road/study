{"id":186537,"title":"11丨性能脚本：用案例和图示帮你理解HTTP协议","content":"<p>当前使用得最为广泛的应用层协议就是HTTP了。我想了好久，还是觉得应该把HTTP协议写一下。</p><p>因为做性能测试分析的人来说，HTTP协议可能是绕不过去的一个槛。在讲HTTP之前，我们得先知道一些基本的信息。</p><p>HTTP（HyperText Transfer Protocol，超文本传输协议），显然是规定了传输的规则，但是它并没有规定内容的规则。</p><p>HTML（HyperText Marked Language，超文本标记语言），规定的是内容的规则。浏览器之所以能认识传输过来的数据，都是因为浏览器具有相同的解析规则。</p><p>希望你先搞清楚这个区别。</p><p>我们首先关注一下HTTP交互的大体内容。想了很久，画了这么一张图，我觉得它展示了我对HTTP协议在交互过程上的理解。</p><p><img src=\"https://static001.geekbang.org/resource/image/5f/ba/5fe0f2607000183eb8375cb66cfd41ba.jpg?wh=1526*656\" alt=\"\"></p><p>在这张图中，可以看到这些信息：</p><ol>\n<li>在交互过程中，数据经过了Frame、Ethernet、IP、TCP、HTTP这些层面。不管是发送和接收端，都必须经过这些层。这就意味着，任何每一层出现问题，都会影响HTTP传输。</li>\n<li>在每次传输中，每一层都会加上自己的头信息。这一点要说重要也重要，说不重要也不重要。重要是因为如果这些头出了问题，非常难定位（在我之前的一个项目中，就曾经出现过TCP包头的一个option因为BUG产生了变化，查了两个星期，一层层抓包，最后才找到原因）。不重要是因为它们基本上不会出什么问题。</li>\n<li>HTTP是请求-应答的模式。就是说，有请求，就要有应答。没有应答就是有问题。</li>\n<li>客户端接收到所有的内容之后，还要展示。而这个展示的动作，也就是前端的动作。<strong>在当前主流的性能测试工具中，都是不模拟前端时间的</strong><strong>，</strong>比如说JMeter。我们在运行结束后只能看到结果，但是不会有响应的信息。你也可以选择保存响应信息，但这会导致压力机工作负载高，压力基本上也上不去。也正是因为不存这些内容，才让一台机器模拟成千上百的客户端有了可能。</li>\n</ol><!-- [[[read_end]]] --><p>如果你希望能理解这些层的头都是什么，可以直接抓包来看，比如如下示图：</p><p><img src=\"https://static001.geekbang.org/resource/image/5c/06/5cb8a2717a30ab54334728e8e7658306.png?wh=1336*573\" alt=\"\"></p><p>从这个图中，我们就能看到各层的内容都是什么。当然了，这些都属于网络协议的知识范围，如果你有兴趣，可以去看一下《TCP/IP详解 卷1：协议》。</p><p>我们还是主要来说一说HTTP层的内容。同样，我希望通过最简单的示例的方式，给你解释一下HTTP的知识，而不是纯讲压力工具，或纯理论。</p><p>在我看来，只有实践的操作和理论的结合，才能真正的融会贯通。只讲压力工具而不讲原理，是不可能学会处理复杂问题的；空有理论没有动手能力是不可能解决实际问题的。</p><p>由于压力工具并不处理客户端页面解析、渲染等动作，所以，以下内容都是从协议层出发的，不包括前端页面层的部分。</p><h2>JMeter脚本</h2><p>在这里，我写了一个简单的HTTP GET请求（由于HTTP2.0在市场上还没有普及，所以这里不做特别说明的话，就是HTTP1.1）。</p><p><img src=\"https://static001.geekbang.org/resource/image/d1/21/d1dd869b165bf14a06102d452a3a6921.png?wh=1095*611\" alt=\"\"></p><p>在前面的文章中，我已经写过了HTTP GET和POST请求。在这里只解释几个重要信息：</p><p>第一个就是Protocol。</p><p>这个当然重要。从“HTTP”这几个字符中，我们就能知道这个协议有什么特点。 HTTP的特点是建立在TCP之上、无连接（TCP就是它的连接）、无状态（后来加了Cookies、Session技术，用KeepAlive来维持，也算是有状态吧）、请求-响应模式等。</p><p>第二个是Method的选项GET。</p><p>HTTP中有多少个Method呢？我在这里做个说明。在RFC中的HTTP相关的定义中（比如RFC2616、2068），定义了HTTP的方法，如下：GET、POST、PUT、PATCH、DELETE、COPY、HEAD、OPTIONS、LINK、UNLINK、PURGE。</p><p>回到我们文章中的选项中来。GET方法是怎么工作的呢？</p><blockquote>\n<p>The GET method means retrieve whatever information (in the form of an entity) is identified by the Request-URI.</p>\n</blockquote><p>也就是说，GET可以得到由URI请求（定义）的各种信息。同样的，其他方法也有清楚的规定。我们要注意的是，HTTP只规定了你要如何交互。它是交互的协议，就是两个人对话，如何能传递过去？小时候一个人手上拿个纸杯子，中间有根线，相互说话能听到，这就是协议。</p><p>第三个是Path，也就是请求的路径。这个路径是在哪里规定的呢？在我这个Spring Boot的示例中。</p><pre><code>   @RequestMapping(value = &quot;pabcd&quot;)\n    public class PABCDController {\n        @Autowired\n        private PABCDService pabcdService;\n        @Autowired\n        private PABCDRedisService pabcdRedisService;\n        @Autowired\n        private PABCDRedisMqService pabcdRedisMqService;\n        @GetMapping(&quot;/redis_mq/query/{id}&quot;)\n        public ResultVO&lt;User&gt; getRedisMqById(@PathVariable(&quot;id&quot;) String id) {\n            User user = pabcdRedisMqService.getById(id);\n            return ResultVO.&lt;User&gt;builder().success(user).build();\n        }\n</code></pre><p>看到了吧。因为我们定义了request的路径，所以，我们必须在Path中写上<code>/pabcd/redis_mq/query</code>这样的路径。</p><p>第四个是Redirect，重定向。HTTP 3XX的代码都和重定向有关，从示意上来看，如下所示。</p><p><img src=\"https://static001.geekbang.org/resource/image/1d/73/1d03ddd7a269480b0e38dec3c6bb0f73.jpg?wh=1673*827\" alt=\"\"><br>\n用户发了个URL A到服务A上，服务A返回了HTTP代码302和URL B。 这时用户看到了接着访问URL B，得到了服务B的响应。对于JMeter来说，它可以处理这种重定向。</p><p>第五个是Content-Encoding，内容编码。它是在HTTP的标准中对服务端和客户端之间处理内容做的一种约定。当大家都用相同的编码时，相互都认识，或者有一端可以根据对端的编码进行适配解释，否则就会出现乱码的情况。</p><p>默认是UTF8。但是我们经常会碰到这种情况。当我们发送中文字符的时候。比如下面的名字。</p><p><img src=\"https://static001.geekbang.org/resource/image/d5/0e/d56493383d4c80469d9af7960e94830e.png?wh=1205*333\" alt=\"\"></p><p>当我们发送出去时，会看到它变成了这种编码。如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/c1/d0/c1884e6b0a4e071edc0d1e17b8ba3fd0.png?wh=1165*157\" alt=\"\"></p><p>如果服务端不去处理，显然交互就错了。如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/73/3a/73680e9d1fb278dbd0ab144ffe8a373a.png?wh=1121*212\" alt=\"\"></p><p>这时，只能把配置改为如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/6c/49/6c48ebfddff84238fb5ea01a175eb449.png?wh=748*71\" alt=\"\"></p><p>我们这里用GBK来处理中文。就会得到正确的结果。</p><p><img src=\"https://static001.geekbang.org/resource/image/6d/5f/6dbc3c868b1790c001942bd9d777df5f.png?wh=471*291\" alt=\"\"></p><p>你就会发现现在用了正常的中文字符。在这个例子，有人选择用URL编码来去处理，会发现处理不了。这是需要注意的地方。</p><p>第六个是超时设置。在HTTP协议中，规定了几种超时时间，分别是连接超时、网关超时、响应超时等。</p><p>如下所示，JMeter中可以设置连接和响应超时：</p><p><img src=\"https://static001.geekbang.org/resource/image/3b/fd/3b0b351b50b2deeb1cbc6853eeb886fd.png?wh=1084*142?wh=1084*142\" alt=\"\"></p><p>在工具中，我们可以定义连接和响应的超时时间。但通常情况下，我们不用做这样的规定，只要跟着服务端的超时走就行了。但在有些场景中，不止是应用服务器有超时时间，网络也会有延迟，这些会影响我们的响应时间。如果HTTP默认的120s 超时时间不够，我们可以将这里放大。</p><p>在这里为了演示，我将它设置为100ms。我们来看一下执行的结果是什么样。</p><p><img src=\"https://static001.geekbang.org/resource/image/ab/50/ab12ae557c1a89cb74de32c0a8ed4a50.png?wh=1065*376\" alt=\"\"></p><p>从栈的信息上就可以看到，在读数据的时候，超时了。</p><p>超时的设置是为了保证数据可以正常地发送到客户端。做性能分析的时候，经常有人听到“超时”这个词就觉得是系统慢导致的，其实有时也是因为配置。</p><p>通常，我们会对系统的超时做梳理，每个服务应该是什么样的超时设置，我们要有全局的考量。比如说：</p><p><img src=\"https://static001.geekbang.org/resource/image/34/13/34e07921468afe8d5bba61093de97813.jpg?wh=2412*483\" alt=\"\"></p><p>超时应该是逐渐放大的（不管你后面用的是什么协议，超时都应该是这个样子）。而我们现在的系统，经常是所有的服务超时都设置得一样大，或者都是跟着协议的默认超时来。在压力小的时候，还没有什么问题，但是在压力大的时候，就会发现系统因为超时设置不合理而导致业务错误。</p><p>如果倒过来的话，你可以想像，用户都返回超时报错了，后端还在处理着呢，那就更有问题了。</p><p>而我们性能测试人员，都是在压力工具中看到的超时错误。如果后端的系统链路比较长，就需要一层层地往后端去查找，看具体是哪个服务有问题。所以在架构层级来分析超时是非常有必要的。</p><p><img src=\"https://static001.geekbang.org/resource/image/3b/fd/3b0b351b50b2deeb1cbc6853eeb886fd.png?wh=1084*142?wh=1084*142\" alt=\"\"></p><p>在上图中，还有一个参数是客户端实现（Client Implementation）。其中有三个选项：空值、HTTPClient4、Java。</p><p>官方给出如下的解释。</p><p>JAVA： 使用JVM提供的HTTP实现，相比HttpClient实现来说，这个实现有一些限制，这个限制我会在后面提到。</p><p>HTTPClient4：使用Apache的HTTP组件HttpClient 4.x实现。</p><p>空值：如果为空，则依赖HTTP Request默认方法，或在<code>jmeter.properties</code>文件中的<code>jmeter.httpsample</code>定义的值。</p><p>用JAVA实现可能会有如下限制。</p><ol>\n<li>在连接复用上没有任何控制。就是当一个连接已经释放之后，同一个线程有可能复用这个已经释放掉的连接。</li>\n<li>API最适用于单线程，但是很多设置都是依赖系统属性值的，所以都应用到所有连接上了。</li>\n<li>不支持 Kerberos Authentication（这是一种计算机网络授权协议，用在非安全网络中，对个人通信以安全的手段进行身份认证）。</li>\n<li>不支持通过keystore配置的客户端证书。</li>\n<li>更容易控制重试机制。</li>\n<li>不支持Virtual hosts。</li>\n<li>只支持这些方法： GET、POST、HEAD、OPTIONS、PUT、DELETE和TRACE。</li>\n<li>使用DNS Cache Manager更容易控制DNS缓存。</li>\n</ol><p>第八个就是HTTP层的压缩。我们经常会听到在性能测试过程中，因为没有压缩，导致网络带宽不够的事情。当我们截获一个HTTP请求时，你会看到如下内容。</p><p><img src=\"https://static001.geekbang.org/resource/image/3a/64/3a339b618e592c19493cd6acce810364.png?wh=393*358\" alt=\"\"></p><p>这就是有压缩的情况。在我们常用的Nginx中，会用如下常见配置来支持压缩：</p><pre><code>    gzip  on;   #打开gzip\n    gzip_min_length 2k; #低于2kb的资源不用压缩\n    gzip_comp_level 4; #压缩级别【1-9】值越大，压缩率就越高，但是CPU消耗也越多，根据我们在网上看到建议，大部分都是建议设置为中间4、5之类的，这里我建议大家根据自己的项目实际情况，在压力测试之后给出适合的值。\n    gzip_types text/plain application/javascript;  #设置压缩类型\n    gzip_disable &quot;MSIE [1-6]\\.&quot;;  # 禁用gzip的条件，支持正则\n</code></pre><p>在RFC2616中，Content Codings部分定义了压缩的格式gzip 和 Deflate，不过我们现在看到的大部分都是gzip。</p><p>不过在压缩这件事情上，我们在压力工具中并不需要做什么太多的动作，最多也就是加个头。</p><p><img src=\"https://static001.geekbang.org/resource/image/35/54/3566e5a03656918cc92b9a88596f9054.png?wh=648*173\" alt=\"\"></p><p>第九个就是并发。在RFC2616中的8.1.1节明确说明了为什么要限制浏览器的并发。大概翻译如下，有兴趣的去读下原文：</p><ol>\n<li>少开TCP链接，可以节省路由和主机（客户端、服务端、代理、网关、通道、缓存）的CPU资源和内存资源。</li>\n<li>HTTP请求和响应可以通过Pipelining在一个连接上发送。Pipelining允许客户端发出多个请求而不用等待每个返回，一个TCP连接更为高效。</li>\n<li>通过减少打开的TCP来减少网络拥堵，也让TCP有充足的时间解决拥堵。</li>\n<li>后续请求不用在TCP三次握手上再花时间，延迟降低。</li>\n<li>因为报告错误时，没有关闭TCP连接的惩罚，而使HTTP可以升级得更为优雅（原文使用gracefully）。</li>\n<li>如果不限制的话，一个客户端发出很多个链接到服务器，服务器的资源可以同时服务的客户端就会减少。</li>\n</ol><p>我们常见的浏览器有如下的并发限制。</p><p><img src=\"https://static001.geekbang.org/resource/image/ff/ad/ffea49962bdbf58bb0cea66e222dcead.png?wh=897*663\" alt=\"\"></p><p>在压力工具中，并没有参数来控制这个并发值，如果是在同一个线程中，就是并行着执行下去。</p><p>HTTPS只是加了一个S，就在访问中加了一层。这一层可以说的话题有很多，因为技术原理比较多。还好对性能测试中的脚本部分来说，关系并不大，需要时导进去就可以了。而在性能分析中，基本上除了看下不同产品、不同软件硬件的性能验证之外，其他的也没什么可分析的部分。因为证书是个非常标准的产品，加在中间，就是加密算法和位数也会对性能产生影响。如果执行场景时报：<code>javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake</code>，就应该把证书也加载进来。</p><p>有了前面这些压力工具中常用的HTTP知识之后，有些人肯定会有一种感觉，总觉得有什么内容没有讲到。对了，就是HTML。前面我们提到了，HTML是属于内容的规则，前端是个宏大的话题，以后有机会详聊。</p><p>其实对我们做性能测试的人来说，无需关心HTTP的内容，我们只要关心数据的流向和处理的逻辑就可以了。至于你是A业务还是B业务，在性能分析中都是一样的，逻辑仍然没有变化。</p><p>从性能测试的角度来看，如果你要模拟页面请求，最多也就是正常实现HTTP的方法GET、POST之类的。它发送和接收的内容，只要符合业务系统的正常流程就可以，这样业务才能正常运行。</p><p>比如说，前面提到的POST请求。如果我们发送了一段JSON。内容如下：</p><pre><code>{\n    &quot;userNumber&quot;: &quot;${Counter}&quot;,\n    &quot;userName&quot;: &quot;Zee_${Counter}&quot;,\n    &quot;orgId&quot;: null,\n    &quot;email&quot;: &quot;test${Counter}@dunshan.com&quot;,\n    &quot;mobile&quot;: &quot;18611865555&quot;\n}\n</code></pre><p>代码中的Service负责接收User对象，同时转换它的是如下代码：</p><pre><code>@Override\n    public String toString() {\n        return &quot;User{&quot; +\n            &quot;id='&quot; + id + '\\'' +\n            &quot;, userNumber='&quot; + userNumber + '\\'' +\n            &quot;, userName='&quot; + userName + '\\'' +\n            &quot;, orgId='&quot; + orgId + '\\'' +\n            &quot;, email='&quot; + email + '\\'' +\n            &quot;, mobile='&quot; + mobile + '\\'' +\n            &quot;, createTime=&quot; + createTime +\n            '}';\n    }\n</code></pre><p>然后通过Service的add方法insert到数据库中，这里后面使用的MyBatis：</p><pre><code>    Boolean result = paRedisService.add(user);\n</code></pre><p>而这些，都属于业务逻辑处理的部分，我们分析时把这个链路都想清楚才可以一层层剥离。</p><h2>总结</h2><p>对于HTTP协议来说，我们在性能分析中，主要关心的部分就是传输字节的大小、超时的设置以及压缩等内容。在编写脚本的时候，要注意HTTP头部，至于Body的内容，只要能让业务跑起来即可。</p><h2>思考题</h2><p>你能说一下为什么压力机不模拟\b前端吗？</p><p>欢迎你在评论区写下你的思考，也欢迎把这篇文章分享给你的朋友或者同事，一起交流一下。</p>","neighbors":{"left":{"article_title":"10丨案例：在JMeter中如何设置参数化数据？","id":185382},"right":{"article_title":"12丨性能场景：做参数化之前，我们需要考虑什么？","id":187551}},"comments":[{"had_liked":false,"id":173357,"user_name":"zuozewei","can_delete":false,"product_type":"c1","uid":1039631,"ip_address":"","ucode":"D594C9CBAF15A5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/dd/0f/ee37a7fe.jpg","comment_is_top":false,"comment_ctime":1579510242,"is_pvip":false,"replies":[{"id":"67233","content":"描述的很详细。有机会可以写一下前端的性能分析了。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1579545610,"ip_address":"","comment_id":173357,"utype":1}],"discussion_count":2,"race_medal":0,"score":"156198332898","product_id":100042501,"comment_content":"思考题：你能说一下为什么压力机不模拟前端吗？<br><br>目前的压力工具大部分是针对服务端，即模拟「网络 API 请求」，而前端程序基本上是由一系列的「用户交互事件」所驱动，其业务状态是一颗 DOM 树。<br><br>通常来讲，前端性能关注的是浏览器端的页面渲染时间、资源加载顺序、请求数量、前端缓存使用情况、资源压缩等内容，希望借此找到页面加载过程中比较耗时的操作和资源，然后进行有针对性的优化，最终达到优化终端用户在浏览器端使用体验的目的。<br><br>目前获取和衡量一个页面的性能，主要可以通过以下几个方面：Performance Timing API、Prpfile 工具、页面埋点计时、资源加载时序图分析；<br>- Performance Timing API 是一个支持 Internet Explorer 9 以上版本及 WebKit；<br>内核浏览器中用于记录页面加载和解析过程中关键时间点的机制，它可以详细记录每个页面资源从开始加载到解析完成这一过程中具体操作发生的时间点，这样根据开始和结束时间戳就可以计算出这个过程所花的时间了；<br>- Profile 是 Chrome 和 Firefox 等标准浏览器提供的一种用于测试页面脚本运行时系统内存和 CPU 资源占用情况的 API；<br>- 通过脚本埋点计时的方式来统计没部分代码的运行时间；<br>- 借助浏览器或其他工具的资源加载时序图来帮助分析页面资源加载过程中的性能问题。这种方法可以粗粒度地宏观分析浏览器的所有资源文件请求耗时和文件加载顺序情况。","like_count":36,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482047,"discussion_content":"描述的很详细。有机会可以写一下前端的性能分析了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579545610,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1787187,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/45/33/cdea4bca.jpg","nickname":"zwm","note":"","ucode":"BDF98B3A1CD406","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388610,"discussion_content":"真.大佬","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628847546,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170583,"user_name":"善行通","can_delete":false,"product_type":"c1","uid":1785980,"ip_address":"","ucode":"AC9159314DEA5A","user_header":"https://static001.geekbang.org/account/avatar/00/1b/40/7c/43bafeb8.jpg","comment_is_top":false,"comment_ctime":1578638337,"is_pvip":false,"replies":[{"id":"66222","content":"照这样下去。已经快超过我了。哈哈。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1578753638,"ip_address":"","comment_id":170583,"utype":1}],"discussion_count":1,"race_medal":0,"score":"74593082369","product_id":100042501,"comment_content":"1、听完这样一节才知道http协议在交互过程中，数据经过了 Frame、Ethernet、IP、TCP、HTTP 这些层面，还会再每一次传输都会增加自己的信息头，而且还了解了应答模式；<br><br>2、之前一直没有思考【客户端接收到所有的内容之后，还要展示。而这个展示的动作，也就是前端的动作。在当前主流的性能测试工具中，都是不模拟前端时间的，比如说 JMeter。我们在运行结束后只能看到结果，但是不会有响应的信息。你也可以选择保存响应信息，但这会导致压力机工作负载高，压力基本上也上不去。也正是因为不存这些内容，才让一台机器模拟成千上百的客户端有了可能】 听完这一次后，明白了很多细节；<br><br>3、明白Nginx【压缩级别【1-9】值越大，压缩率就越高】之前只知道有压缩，但不知道再什么地方压测，今天看了老师写 Ngix 配置才明白再这里配置；<br><br>4、明白各个浏览器厂商在处理并发限制不一样，之前一直不知道，今天增加自己知识积累。<br><br>5、之前不知道https也是影响性能的，听完了这一篇增加了知识；<br><br>6、感谢老师总结【性能分析中，主要关心的部分就是传输字节的大小、超时的设置以及压缩等内容。在编写脚本的时候，要注意 HTTP 头部，至于 Body 的内容，只要能让业务跑起来即可。】<br><br><br>为什么压力机不模拟前端<br>1、客户端接收到所有的内容之后会在前端浏览器渲染，如果在本地渲染会增加压力机性能消耗，当消耗过大会影响压力发压能力，如果下载资源保存到本地，会增加IO操作压力机性能。<br>2、前端js&#47;css&#47;img等静态资源都走CDN.","like_count":17,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481027,"discussion_content":"照这样下去。已经快超过我了。哈哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578753638,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":191588,"user_name":"小呀么小二郎","can_delete":false,"product_type":"c1","uid":1326905,"ip_address":"","ucode":"149540DCFDF43E","user_header":"https://static001.geekbang.org/account/avatar/00/14/3f/39/b1558fc9.jpg","comment_is_top":false,"comment_ctime":1584783390,"is_pvip":false,"replies":[{"id":"73484","content":"真是太努力了，小伙子。😃😃<br>Client implementation如果不理解的话，就查查官网的资料吧，或者翻翻源码。<br>","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1584829388,"ip_address":"","comment_id":191588,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10174717982","product_id":100042501,"comment_content":"今日思考题：<br><br>你能说一下为什么压力机不模拟前端吗？<br>模拟前端时间则需要保存响应信息，而保存响应信息会导致压力工具负载变大，进而导致压力上不去，压力上不去就没办法做压力机了……<br><br><br>我的感悟：<br><br>感谢高老师结合JMeter工具来讲解HTTP协议，我之前从没点开过HTTP Request Sampler的advanced部分……不过我还是不太明白客户端实现（Client Implementation）这个参数能干啥，或者说什么场景需要用到这个参数。<br><br>前几天看了本书，书里介绍了一些前端性能测试的内容，其中有一个前端性能优化方法就是开启GZIP，给的例子是在Apache的配置文件中设置，现在看来这个其实应该属于服务器端性能优化的方法。（但是好像对前端优化也是起作用的，毕竟内容压缩之后变小了，前端展示也会更快）","like_count":2,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488210,"discussion_content":"真是太努力了，小伙子。😃😃\nClient implementation如果不理解的话，就查查官网的资料吧，或者翻翻源码。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584829388,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172184,"user_name":"songyy","can_delete":false,"product_type":"c1","uid":1007201,"ip_address":"","ucode":"34D6443B91676D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/61/985f3eb7.jpg","comment_is_top":false,"comment_ctime":1579102618,"is_pvip":false,"replies":[{"id":"66819","content":"理解的很正确。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1579141725,"ip_address":"","comment_id":172184,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10169037210","product_id":100042501,"comment_content":"你能说一下为什么压力机不模拟\b前端吗：因为模拟前端消耗的计算资源太大，相比之下意义可能并不大。<br>计算消耗大，是说去Parse这个前端的HTML，需要一些计算量；如果需要把这些内容给render出来，需要更多的内存。<br>一个HTML页面，Load之后会load更多的一些API，这些API可以通过估算，进行混合测试；而那些固态资源，通常会被 浏览器Cache &#47; 网络中的一些路由器给cache，且是从一个静态资源的server单独serve，不用太担心。<br>需要测的是产生的压力，前端产生<br> 无意义。","like_count":3,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481656,"discussion_content":"理解的很正确。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579141725,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":279761,"user_name":"Geek_b76638","can_delete":false,"product_type":"c1","uid":2421802,"ip_address":"","ucode":"858FB196CDFF7E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ermm498iaT8hp4xmMu51AGoq20UOEwhZeE0wuHkaEsPQ461x1sib0WPwyV5ypQeYJZQ906piaQ4icf9eQ/132","comment_is_top":false,"comment_ctime":1613958647,"is_pvip":false,"replies":[{"id":"103262","content":"我觉得是要分析报错是什么才对。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1616423139,"ip_address":"","comment_id":279761,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5908925943","product_id":100042501,"comment_content":"高老师，测试100个用户并发时无报错，测试200-300用户时超时报错很多？是需要设置超时时间吗？","like_count":1,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515862,"discussion_content":"我觉得是要分析报错是什么才对。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616423139,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":271477,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1609660033,"is_pvip":true,"replies":[{"id":"98409","content":"前端也不是不重要。压力工具之所以不模拟是因为在展现层有太多的技术局限。<br>而前后端的通信靠的是协议，所以走协议层模拟就可以压出后端的容量。<br>在实际的项目性能分析中，前后端都是要做的哦。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1609700624,"ip_address":"","comment_id":271477,"utype":1}],"discussion_count":1,"race_medal":1,"score":"5904627329","product_id":100042501,"comment_content":"前端也就是 客户端会有各种各样的情况，比如：网络不行 等等，是不可控的。，所以没有必要进行模拟的，只需要压测出后端服务的实际处理能力就可以","like_count":1,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512937,"discussion_content":"前端也不是不重要。压力工具之所以不模拟是因为在展现层有太多的技术局限。\n而前后端的通信靠的是协议，所以走协议层模拟就可以压出后端的容量。\n在实际的项目性能分析中，前后端都是要做的哦。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609700624,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":357339,"user_name":"Geek_0c1732","can_delete":false,"product_type":"c1","uid":1721278,"ip_address":"北京","ucode":"6276D0412CCE51","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ajNVdqHZLLAhj2fB8NI2TPI1SNicgiciczuMUHyAb9HHBkkKJHrgtR162fsicaTqdAneHfuVX7icDXaVibDHstM9L47g/132","comment_is_top":false,"comment_ctime":1663164171,"is_pvip":false,"replies":[{"id":"130281","content":"对的。 ","user_name":"作者回复","user_name_real":"编辑","uid":"1785562","ctime":1663808216,"ip_address":"北京","comment_id":357339,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1663164171","product_id":100042501,"comment_content":"前端渲染是客户端的工作，客户端一般不存在什么并发压力。所以没有必要通过jmeter模拟。想要知道前段渲染性能，可以使用chrome的performance工具","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588506,"discussion_content":"对的。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663808216,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339418,"user_name":"章鱼","can_delete":false,"product_type":"c1","uid":2673745,"ip_address":"","ucode":"D44893DC2526D4","user_header":"","comment_is_top":false,"comment_ctime":1648090086,"is_pvip":false,"replies":[{"id":"124351","content":"要看测试的目标，我也见过一定要模拟前端的老板。😊","user_name":"作者回复","user_name_real":"编辑","uid":"1785562","ctime":1648600913,"ip_address":"","comment_id":339418,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1648090086","product_id":100042501,"comment_content":"【在当前主流的性能测试工具中，都是不模拟前端时间的，比如说 JMeter。我们在运行结束后只能看到结果，但是不会有响应的信息。你也可以选择保存响应信息，但这会导致压力机工作负载高，压力基本上也上不去。也正是因为不存这些内容，才让一台机器模拟成千上百的客户端有了可能。】---- 模拟前端，会导致压力机负载高，压力大，进行性能测试的意义也不大，因为多了不必要的资源消耗。","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559059,"discussion_content":"要看测试的目标，我也见过一定要模拟前端的老板。😊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648600913,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":293486,"user_name":"Mingyan","can_delete":false,"product_type":"c1","uid":1344408,"ip_address":"","ucode":"02F222332B9045","user_header":"https://static001.geekbang.org/account/avatar/00/14/83/98/fab9bd2a.jpg","comment_is_top":false,"comment_ctime":1621406914,"is_pvip":false,"replies":[{"id":"106298","content":"据我的经验推测是个连接不能复用有关。但具体是什么错误，得抓包看一下来往的报文了。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1621425614,"ip_address":"","comment_id":293486,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1621406914","product_id":100042501,"comment_content":"所以请问选implementation选java还是选httpclient4？还是没看懂两者区别，有个项目用httpclient4会报socket closed的error 但是选java的就不会。请问这种怎么区别？","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":520237,"discussion_content":"据我的经验推测是个连接不能复用有关。但具体是什么错误，得抓包看一下来往的报文了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621425614,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":280322,"user_name":"bolo","can_delete":false,"product_type":"c1","uid":1357170,"ip_address":"","ucode":"7C91CEA2F1970E","user_header":"https://static001.geekbang.org/account/avatar/00/14/b5/72/bb10f3d0.jpg","comment_is_top":false,"comment_ctime":1614159416,"is_pvip":false,"replies":[{"id":"103255","content":"理解非常对。点赞。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1616422941,"ip_address":"","comment_id":280322,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1614159416","product_id":100042501,"comment_content":"你能说一下为什么压力机不模拟\b前端吗？<br><br>文中有答案，哈哈。 当前的主流性能测试工具中，都不模拟前端时间的，比如Jmeter。我们在运行结束时，只能看到接口响应的结果。但是不会响应信息保存下来。如果保存涉及了大量的文件读写操作，会加大压力机的负载，压力也就上不去。也正是因为这样，一个压力机才能更好的模拟成百上千的客户端。<br><br>如果想保存可以写一些文件读写的代码将数据进行提取后保存下来（或者也可以用数据库？）。<br><br>附：<br>FileWriter fstream = new FileWriter(&quot;C:\\\\Users\\\\xxx\\\\Desktop\\\\result.csv&quot;, true);<br>BufferedWriter out = new BufferedWriter(fstream);<br>out.write( vars.get(&quot;seq&quot;) +&quot;\\n&quot; );<br>out.close();<br>fstream.close();<br><br>不过我用来保存数据，不是用来做性能测试的，而仅仅是把jmeter 作为接口调用的工具，数据保存是用来做数据统计的（涉及的项目是一个分流链接项目，支持配置比例）。","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516057,"discussion_content":"理解非常对。点赞。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616422941,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":222345,"user_name":"HE明伟","can_delete":false,"product_type":"c1","uid":1211663,"ip_address":"","ucode":"DC302021D4250A","user_header":"https://static001.geekbang.org/account/avatar/00/12/7d/0f/26c38307.jpg","comment_is_top":false,"comment_ctime":1590755683,"is_pvip":false,"replies":[{"id":"84049","content":"jmeter录制时模拟的前端和后端的交互请求，并不模拟js、css之类的内部动作。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1592533606,"ip_address":"","comment_id":222345,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1590755683","product_id":100042501,"comment_content":"高老师，我有点不明白了，压力机不模拟前端，那jmeter进行录制的时候，不是模拟了前端吗，模拟前端不是更加符合用户的真实操作吗，虽然这样会造成压力机的压力很大","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496761,"discussion_content":"jmeter录制时模拟的前端和后端的交互请求，并不模拟js、css之类的内部动作。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592533606,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185293,"user_name":"胡戎","can_delete":false,"product_type":"c1","uid":1850167,"ip_address":"","ucode":"880926B307AD88","user_header":"","comment_is_top":false,"comment_ctime":1583554738,"is_pvip":false,"replies":[{"id":"71567","content":"按全链路的思路就可以做，其实就是AB测试。在生产上做。<br>","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1583562796,"ip_address":"","comment_id":185293,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583554738","product_id":100042501,"comment_content":"高老师:<br>目前很多项目信息化建设项目。由于经费等原因，只有一套硬件环境，测试需要在生产开展。项目通常进度比较紧，前期主要保功能，待功能研发的差不多时候用户也开始使用，这时还可以注入部分测试数据。一旦用户正式使用后基本不可能用性能测试工具注入数据。对于这种信息化建设项目如何开展性能分析和测试。","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486316,"discussion_content":"按全链路的思路就可以做，其实就是AB测试。在生产上做。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583562796,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182591,"user_name":"zwm","can_delete":false,"product_type":"c1","uid":1787187,"ip_address":"","ucode":"BDF98B3A1CD406","user_header":"https://static001.geekbang.org/account/avatar/00/1b/45/33/cdea4bca.jpg","comment_is_top":false,"comment_ctime":1582813420,"is_pvip":false,"replies":[{"id":"70659","content":"Jmeter本身就加了最基本的头信息。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1582844115,"ip_address":"","comment_id":182591,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582813420","product_id":100042501,"comment_content":"老师有个问题，这里说的关注请求头信息，我在网页访问和开发提供的api访问，拿到的请求头跟多在jmeter中加不加不影响我的请求正常发出，这点应该怎么考虑呢","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485379,"discussion_content":"Jmeter本身就加了最基本的头信息。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582844115,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170885,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1578750310,"is_pvip":false,"replies":[{"id":"66258","content":"这些不在我认为的专栏应该写的重点范围里。找找度娘就可以了。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1578812446,"ip_address":"","comment_id":170885,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1578750310","product_id":100042501,"comment_content":"1，JMeter中cookies几种类型可介绍下吗？2，可否介绍yahoo前端优化30条建议？","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481152,"discussion_content":"这些不在我认为的专栏应该写的重点范围里。找找度娘就可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578812446,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170026,"user_name":"律飛","can_delete":false,"product_type":"c1","uid":1462608,"ip_address":"","ucode":"65394E437AD2DF","user_header":"https://static001.geekbang.org/account/avatar/00/16/51/50/f5f2a121.jpg","comment_is_top":false,"comment_ctime":1578494372,"is_pvip":false,"replies":[{"id":"66234","content":"理解滴对。 ","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1578754147,"ip_address":"","comment_id":170026,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1578494372","product_id":100042501,"comment_content":"为什么压力机不模拟\b前端吗？<br>性能测试的目的是获得系统性能指标，利用断言判断业务是否成功即可，并不关注前端页面显示内容，所以无需保存响应信息。<br>测试工具时，必须多了解参数，知其然并要知其所依然，才能更高效地更自如地配置参数，准确地满足测试要求。","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480813,"discussion_content":"理解滴对。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578754147,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169735,"user_name":"晴空","can_delete":false,"product_type":"c1","uid":1786328,"ip_address":"","ucode":"1BB34D8E405314","user_header":"https://static001.geekbang.org/account/avatar/00/1b/41/d8/5a9fbb71.jpg","comment_is_top":false,"comment_ctime":1578425669,"is_pvip":false,"replies":[{"id":"65894","content":"嗯。正确理解了内容。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1578459020,"ip_address":"","comment_id":169735,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1578425669","product_id":100042501,"comment_content":"你能说一下为什么压力机不模拟\b前端吗？<br>在当前主流的性能测试工具中，都是不模拟前端时间的，比如说 JMeter。我们在运行结束后只能看到结果，但是不会有响应的信息。你也可以选择保存响应信息，但这会导致压力机工作负载高，压力基本上也上不去。也正是因为不存这些内容，才让一台机器模拟成千上百的客户端有了可能。<br><br>另外前端页面展示还有部分是静态的图片或文字等，这些可以列在性能测试范围内也可以列在性能测试范围外。","like_count":1,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480698,"discussion_content":"嗯。正确理解了内容。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578459020,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}