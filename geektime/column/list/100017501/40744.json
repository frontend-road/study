{"id":40744,"title":"07 | 准备Plan B：如何设计兜底方案?","content":"<p>这是《如何设计一个秒杀系统》专栏的最后一篇文章，前面我们一起看了很多极致的优化思路，以及架构的优化方案。但是很遗憾，现实中总难免会发生一些这样或者那样的意外，而这些看似不经意的意外，却可能带来非常严重的后果。</p><p>我想对于很多秒杀系统而言，在诸如双十一这样的大流量的迅猛冲击下，都曾经或多或少发生过宕机的情况。当一个系统面临持续的大流量时，它其实很难单靠自身调整来恢复状态，你必须等待流量自然下降或者人为地把流量切走才行，这无疑会严重影响用户的购物体验。</p><p>同时，你也要知道，没有人能够提前预估所有情况，意外无法避免。那么，我们是不是就没办法了呢？当然不是，我们可以在系统达到不可用状态之前就做好流量限制，防止最坏情况的发生。用现在流行的话来说，任何一个系统，都需要“反脆弱”。</p><p>具体到秒杀这一场景下，为了保证系统的高可用，我们必须设计一个Plan B方案来兜底，这样在最坏情况发生时我们仍然能够从容应对。今天，我们就来看下兜底方案设计的一些具体思路。</p><h2>高可用建设应该从哪里着手</h2><p>说到系统的高可用建设，它其实是一个系统工程，需要考虑到系统建设的各个阶段，也就是说它其实贯穿了系统建设的整个生命周期，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/42/35/4225335357b6208a67410c36ea8a1535.jpg?wh=1985*618\" alt=\"\"></p><center><span class=\"reference\">图1  高可用系统建设</span></center><!-- [[[read_end]]] --><p>具体来说，系统的高可用建设涉及架构阶段、编码阶段、测试阶段、发布阶段、运行阶段，以及故障发生时。接下来，我们分别看一下。</p><ol>\n<li><strong>架构阶段</strong>：架构阶段主要考虑系统的可扩展性和容错性，要避免系统出现单点问题。例如多机房单元化部署，即使某个城市的某个机房出现整体故障，仍然不会影响整体网站的运转。</li>\n<li><strong>编码阶段</strong>：编码最重要的是保证代码的健壮性，例如涉及远程调用问题时，要设置合理的超时退出机制，防止被其他系统拖垮，也要对调用的返回结果集有预期，防止返回的结果超出程序处理范围，最常见的做法就是对错误异常进行捕获，对无法预料的错误要有默认处理结果。</li>\n<li><strong>测试阶段</strong>：测试主要是保证测试用例的覆盖度，保证最坏情况发生时，我们也有相应的处理流程。</li>\n<li><strong>发布阶段</strong>：发布时也有一些地方需要注意，因为发布时最容易出现错误，因此要有紧急的回滚机制。</li>\n<li><strong>运行阶段</strong>：运行时是系统的常态，系统大部分时间都会处于运行态，运行态最重要的是对系统的监控要准确及时，发现问题能够准确报警并且报警数据要准确详细，以便于排查问题。</li>\n<li><strong>故障发生</strong>：故障发生时首先最重要的就是及时止损，例如由于程序问题导致商品价格错误，那就要及时下架商品或者关闭购买链接，防止造成重大资产损失。然后就是要能够及时恢复服务，并定位原因解决问题。</li>\n</ol><p>为什么系统的高可用建设要放到整个生命周期中全面考虑？因为我们在每个环节中都可能犯错，而有些环节犯的错，你在后面是无法弥补的。例如在架构阶段，你没有消除单点问题，那么系统上线后，遇到突发流量把单点给挂了，你就只能干瞪眼，有时候想加机器都加不进去。所以高可用建设是一个系统工程，必须在每个环节都做好。</p><p>那么针对秒杀系统，我们重点介绍在遇到大流量时，应该从哪些方面来保障系统的稳定运行，所以更多的是看如何针对运行阶段进行处理，这就引出了接下来的内容：降级、限流和拒绝服务。</p><h2>降级</h2><p>所谓“降级”，就是当系统的容量达到一定程度时，限制或者关闭系统的某些非核心功能，从而把有限的资源保留给更核心的业务。它是一个有目的、有计划的执行过程，所以对降级我们一般需要有一套预案来配合执行。如果我们把它系统化，就可以通过预案系统和开关系统来实现降级。</p><p>降级方案可以这样设计：当秒杀流量达到5w/s时，把成交记录的获取从展示20条降级到只展示5条。“从20改到5”这个操作由一个开关来实现，也就是设置一个能够从开关系统动态获取的系统参数。</p><p>这里，我给出开关系统的示意图。它分为两部分，一部分是开关控制台，它保存了开关的具体配置信息，以及具体执行开关所对应的机器列表；另一部分是执行下发开关数据的Agent，主要任务就是保证开关被正确执行，即使系统重启后也会生效。</p><p><img src=\"https://static001.geekbang.org/resource/image/13/1a/1310c57927f5b0ef1b3e8f6bef8f2e1a.jpg?wh=1385*724\" alt=\"\"></p><center><span class=\"reference\">图2  开关系统</span></center><p>执行降级无疑是在系统性能和用户体验之间选择了前者，降级后肯定会影响一部分用户的体验，例如在双11零点时，如果优惠券系统扛不住，可能会临时降级商品详情的优惠信息展示，把有限的系统资源用在保障交易系统正确展示优惠信息上，即保障用户真正下单时的价格是正确的。所以降级的核心目标是牺牲次要的功能和用户体验来保证核心业务流程的稳定，是一个不得已而为之的举措。</p><h2>限流</h2><p>如果说降级是牺牲了一部分次要的功能和用户的体验效果，那么限流就是更极端的一种保护措施了。限流就是当系统容量达到瓶颈时，我们需要通过限制一部分流量来保护系统，并做到既可以人工执行开关，也支持自动化保护的措施。</p><p>这里，我同样给出了限流系统的示意图。总体来说，限流既可以是在客户端限流，也可以是在服务端限流。此外，限流的实现方式既要支持URL以及方法级别的限流，也要支持基于QPS和线程的限流。</p><p>首先，我以内部的系统调用为例，来分别说下客户端限流和服务端限流的优缺点。</p><ul>\n<li><strong>客户端限流</strong>，好处可以限制请求的发出，通过减少发出无用请求从而减少对系统的消耗。缺点就是当客户端比较分散时，没法设置合理的限流阈值：如果阈值设的太小，会导致服务端没有达到瓶颈时客户端已经被限制；而如果设的太大，则起不到限制的作用。</li>\n<li><strong>服务端限流</strong>，好处是可以根据服务端的性能设置合理的阈值，而缺点就是被限制的请求都是无效的请求，处理这些无效的请求本身也会消耗服务器资源。</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/79/5a/796b93a97ae4083412ff352148a8bc5a.jpg?wh=849*400\" alt=\"\"></p><center><span class=\"reference\">图3  限流系统</span></center><p>在限流的实现手段上来讲，基于QPS和线程数的限流应用最多，最大QPS很容易通过压测提前获取，例如我们的系统最高支持1w QPS时，可以设置8000来进行限流保护。线程数限流在客户端比较有效，例如在远程调用时我们设置连接池的线程数，超出这个并发线程请求，就将线程进行排队或者直接超时丢弃。</p><p>限流无疑会影响用户的正常请求，所以必然会导致一部分用户请求失败，因此在系统处理这种异常时一定要设置超时时间，防止因被限流的请求不能fast fail（快速失败）而拖垮系统。</p><h2>拒绝服务</h2><p>如果限流还不能解决问题，最后一招就是直接拒绝服务了。</p><p>当系统负载达到一定阈值时，例如CPU使用率达到90%或者系统load值达到2*CPU核数时，系统直接拒绝所有请求，这种方式是最暴力但也最有效的系统保护方式。例如秒杀系统，我们在如下几个环节设计过载保护：</p><blockquote>\n<p>在最前端的Nginx上设置过载保护，当机器负载达到某个值时直接拒绝HTTP请求并返回503错误码，在Java层同样也可以设计过载保护。</p>\n</blockquote><p>拒绝服务可以说是一种不得已的兜底方案，用以防止最坏情况发生，防止因把服务器压跨而长时间彻底无法提供服务。像这种系统过载保护虽然在过载时无法提供服务，但是系统仍然可以运作，当负载下降时又很容易恢复，所以每个系统和每个环节都应该设置这个兜底方案，对系统做最坏情况下的保护。</p><h2>总结一下</h2><p>网站的高可用建设是基础，可以说要深入到各个环节，更要长期规划并进行体系化建设，要在预防（建立常态的压力体系，例如上线前的单机压测到上线后的全链路压测）、管控（做好线上运行时的降级、限流和兜底保护）、监控（建立性能基线来记录性能的变化趋势以及线上机器的负载报警体系，发现问题及时预警）和恢复体系（遇到故障要及时止损，并提供快速的数据订正工具等）等这些地方加强建设，每一个环节可能都有很多事情要做。</p><p>另外，要保证高可用建设的落实，你不仅要做系统建设，还要在组织上做好保障。高可用其实就是在说“稳定性”。稳定性是一个平时不重要，但真出了问题就会要命的事儿，所以很可能平时业务发展良好，稳定性建设就会给业务让路，相关的稳定性负责人员平时根本得不到重视，一旦遇到故障却又成了“背锅侠”。</p><p>而要防止出现这种情况，就必须在组织上有所保障，例如可以让业务负责人背上稳定性KPI考核指标，然后在技术部门中建立稳定性建设小组，小组成员由每个业务线的核心力量兼任，他们的KPI由稳定性负责人来打分，这样稳定性小组就可以把一些体系化的建设任务落实到具体的业务系统中了。</p><p>最后，欢迎你在留言区和我交流，你也可以说说在实际工作中，还有哪些关于系统稳定性建设方面有更好的思路或者方案，我们一起沟通探讨。</p><p></p>","comments":[{"had_liked":false,"id":36694,"user_name":"江中芦苇","can_delete":false,"product_type":"c1","uid":1068059,"ip_address":"","ucode":"1FB79B0904BFEE","user_header":"https://static001.geekbang.org/account/avatar/00/10/4c/1b/b1953a5e.jpg","comment_is_top":false,"comment_ctime":1541243704,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"242059412280","product_id":100017501,"comment_content":"世界好小，大佬作为滴滴复试面试官","like_count":57,"discussions":[{"author":{"id":1161271,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b8/37/98991aeb.jpg","nickname":"不似旧日","note":"","ucode":"DF4C5E3AB9570C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":187985,"discussion_content":"看來你是沒有通過\n","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1582784925,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1139455,"avatar":"https://static001.geekbang.org/account/avatar/00/11/62/ff/f71034e9.jpg","nickname":"悟空WuKong","note":"","ucode":"49AFD2B048C1BA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":217559,"discussion_content":"面试架构师还是高级开发","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1585570473,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":32162,"user_name":"似水流年","can_delete":false,"product_type":"c1","uid":1259319,"ip_address":"","ucode":"AC33A814D42D08","user_header":"https://static001.geekbang.org/account/avatar/00/13/37/37/5b23a28f.jpg","comment_is_top":false,"comment_ctime":1539447999,"is_pvip":false,"replies":[{"id":"11656","content":"具体的实现，还是留给大家自己尝试啦☺","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1539489545,"ip_address":"","comment_id":32162,"utype":1}],"discussion_count":2,"race_medal":0,"score":"65963957439","product_id":100017501,"comment_content":"从第一篇到第最后一篇大都是思想理论指导，有具体的例子和实现伪代码会更好","like_count":16,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426660,"discussion_content":"具体的实现，还是留给大家自己尝试啦☺","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539489545,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1361159,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqJobg767PUeqrqQQ4B6YvMatj2SRyOicKZZ4gWTf30dMketiaj58Gc3RFTmckGxAXlL9ERSxGovq9g/132","nickname":"涛哥哥","note":"","ucode":"329A1384E3AB5E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543567,"discussion_content":"真实太水了，这个课程。。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1641206261,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":30473,"user_name":"小喵喵","can_delete":false,"product_type":"c1","uid":1062444,"ip_address":"","ucode":"FDBBB2A59DB8B6","user_header":"https://static001.geekbang.org/account/avatar/00/10/36/2c/8bd4be3a.jpg","comment_is_top":false,"comment_ctime":1538880209,"is_pvip":false,"replies":[{"id":"11198","content":"统计qps用一个计数器就行，来一个请求加一，一秒统计一次<br><br>客户端和服务端限流是针对rpc调用来说的，发起方可以理解为客户端，调用方可以理解为服务端，限流就是分别限制发起方和调用方的次数<br><br>","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1539086182,"ip_address":"","comment_id":30473,"utype":1}],"discussion_count":1,"race_medal":0,"score":"57373455057","product_id":100017501,"comment_content":"1。降级方案可以这样设计：当秒杀流量达到 5w&#47;s 时，如何判断达到了5w&#47;s呢？我想到的写一个windows服务或者一个工具不停的跑，但这样也太low了吧。期待老师更好的方案？<br>2.客户端限流，是在数据库做配置吗？配置某些用户不让发起请求或者发请求次数的限制吗？<br>3.服务端限流，完全不明白，请老师举例说明一下。<br>4.例如我们的系统最高支持 1w QPS 时，可以设置 8000...，你是怎么判断是否到达8000?","like_count":14,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426015,"discussion_content":"统计qps用一个计数器就行，来一个请求加一，一秒统计一次\n\n客户端和服务端限流是针对rpc调用来说的，发起方可以理解为客户端，调用方可以理解为服务端，限流就是分别限制发起方和调用方的次数\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539086182,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":30435,"user_name":"小喵喵","can_delete":false,"product_type":"c1","uid":1062444,"ip_address":"","ucode":"FDBBB2A59DB8B6","user_header":"https://static001.geekbang.org/account/avatar/00/10/36/2c/8bd4be3a.jpg","comment_is_top":false,"comment_ctime":1538844405,"is_pvip":false,"replies":[{"id":"11199","content":"接口超时设置以及异常处理很多开源框架都有，建议你看一下例如dobbo这种框架是如何实现的😊","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1539086413,"ip_address":"","comment_id":30435,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35898582773","product_id":100017501,"comment_content":"编码阶段：例如涉及远程调用问题时，要设置合理的超时退出机制，防止被其他系统拖垮，也要对调用的返回结果集有预期，防止返回的结果超出程序处理范围，最常见的做法就是对错误异常进行捕获，对无法预料的错误要有默认处理结果。<br>1.如何判断调用一个接口超时？接口那边不会返回超时标识的。<br>2.结果集有预期,后面请举一个具体的例子说明一下，什么预期，程序处理范围，错误异常进行捕获，默认处理结果等等。","like_count":8,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426000,"discussion_content":"接口超时设置以及异常处理很多开源框架都有，建议你看一下例如dobbo这种框架是如何实现的😊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539086413,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70659,"user_name":"_Mr.Bool ®","can_delete":false,"product_type":"c1","uid":1428225,"ip_address":"","ucode":"01206E2658C940","user_header":"https://static001.geekbang.org/account/avatar/00/15/cb/01/1f3cfc2d.jpg","comment_is_top":false,"comment_ctime":1551158579,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"18731027763","product_id":100017501,"comment_content":"之前分布式QPS限流用的Redis+lua实现的，还好用的redis cluster集群结构，100个节点，几十万QPS都稳定扛下来了","like_count":5,"discussions":[{"author":{"id":1857536,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoG6W3ugJo1XEqmLPULB9o19GribV7hDZTMuVauvcpW8gaS2QPibwMkxce4fT2xCLGqRG0rx3V9WAWA/132","nickname":"睡不醒的🐷","note":"","ucode":"E88BD4EAD6F655","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":184325,"discussion_content":"那你别用redis试试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582552775,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":32860,"user_name":"贵楠","can_delete":false,"product_type":"c1","uid":1114342,"ip_address":"","ucode":"9EC2F934ABCD5C","user_header":"https://static001.geekbang.org/account/avatar/00/11/00/e6/7201c9f3.jpg","comment_is_top":false,"comment_ctime":1539704999,"is_pvip":false,"replies":[{"id":"12234","content":"像load保护这种功能在阿里开源的tengine系统里其实有实现，你可以去了解一下<br><br>其他的限流降级这些在阿里开源的中间件产品里也都有实现，大家可以去下载学习一下","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1540096835,"ip_address":"","comment_id":32860,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14424606887","product_id":100017501,"comment_content":"老师可否提供一个demo呢","like_count":3,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426903,"discussion_content":"像load保护这种功能在阿里开源的tengine系统里其实有实现，你可以去了解一下\n\n其他的限流降级这些在阿里开源的中间件产品里也都有实现，大家可以去下载学习一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540096835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":39175,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1542203472,"is_pvip":false,"replies":[{"id":"14442","content":"😉","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1542527218,"ip_address":"","comment_id":39175,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10132138064","product_id":100017501,"comment_content":"意犹未尽，内功心法口诀已经传授，下面就看悟性和修炼啦！<br>为了系统的高可用，我们需要B计划，为了使系统仍然可用，我们准备了降级、限流、拒绝服务三件法宝。每次备战，也玩这些！不过是组织配合实现自己完全实现还远的很。<br>这个专栏值得反复回味！","like_count":3,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428953,"discussion_content":"😉","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542527218,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1361159,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqJobg767PUeqrqQQ4B6YvMatj2SRyOicKZZ4gWTf30dMketiaj58Gc3RFTmckGxAXlL9ERSxGovq9g/132","nickname":"涛哥哥","note":"","ucode":"329A1384E3AB5E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543568,"discussion_content":"呵，是吗？你能说出来你学到了什么吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641206322,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":192087,"user_name":"Mango","can_delete":false,"product_type":"c1","uid":1734886,"ip_address":"","ucode":"EC2D20BD322E22","user_header":"","comment_is_top":false,"comment_ctime":1584837133,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5879804429","product_id":100017501,"comment_content":"兜底方案可以采用最简单的方法，为极端情况下减少访问量","like_count":1},{"had_liked":false,"id":182564,"user_name":"zero","can_delete":false,"product_type":"c1","uid":1684113,"ip_address":"","ucode":"27019747CA63FF","user_header":"https://static001.geekbang.org/account/avatar/00/19/b2/91/fbc34225.jpg","comment_is_top":false,"comment_ctime":1582809727,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5877777023","product_id":100017501,"comment_content":"听完老师的课程，顿时毛塞顿开，方法方向已经有了，剩下的就靠自己摸索了，感谢","like_count":1},{"had_liked":false,"id":180585,"user_name":"czh","can_delete":false,"product_type":"c1","uid":1159078,"ip_address":"","ucode":"649FE5C9269D69","user_header":"https://static001.geekbang.org/account/avatar/00/11/af/a6/3f15ba2f.jpg","comment_is_top":false,"comment_ctime":1582343149,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5877310445","product_id":100017501,"comment_content":"整个专栏，一口气读完，最大收获是思考问题方法：在软件的整个【生命周期】中全面考虑如何解决！","like_count":0},{"had_liked":false,"id":79217,"user_name":"随风","can_delete":false,"product_type":"c1","uid":1252647,"ip_address":"","ucode":"8FC362F9DA7E5A","user_header":"https://static001.geekbang.org/account/avatar/00/13/1d/27/46aeb4aa.jpg","comment_is_top":false,"comment_ctime":1553404821,"is_pvip":false,"replies":[{"id":"30089","content":"继续积累积累，继续努力一段时间再来","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1554532473,"ip_address":"","comment_id":79217,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5848372117","product_id":100017501,"comment_content":"我初试都没过，所以也就没机会碰见大佬了","like_count":1,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444402,"discussion_content":"继续积累积累，继续努力一段时间再来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554532473,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":32593,"user_name":"打老师屁屁","can_delete":false,"product_type":"c1","uid":1087536,"ip_address":"","ucode":"E40BB11FF09DEC","user_header":"https://static001.geekbang.org/account/avatar/00/10/98/30/6516b094.jpg","comment_is_top":false,"comment_ctime":1539618078,"is_pvip":false,"replies":[{"id":"12236","content":"这个要更每个环节的系统能支持多大的负载来计算的，比如cache单台能支持多大的并发请求，然后要根据总请求量单台的性能<br><br>还要计算最外层的请求分别对应到每个环节拆分的请求数，例如一个web请求可能对应多个cache请求。","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1540097222,"ip_address":"","comment_id":32593,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5834585374","product_id":100017501,"comment_content":"老师， 如何根据并发量有效的计算需要多少台机器， 比如 LB，WEB，CACHE，MQ，各需要多少台机器。有没有一个参考值","like_count":1,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426828,"discussion_content":"这个要更每个环节的系统能支持多大的负载来计算的，比如cache单台能支持多大的并发请求，然后要根据总请求量单台的性能\n\n还要计算最外层的请求分别对应到每个环节拆分的请求数，例如一个web请求可能对应多个cache请求。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540097222,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":30511,"user_name":"歌在云端","can_delete":false,"product_type":"c1","uid":1110238,"ip_address":"","ucode":"1C876780C9D25E","user_header":"https://static001.geekbang.org/account/avatar/00/10/f0/de/ef564e67.jpg","comment_is_top":false,"comment_ctime":1538899252,"is_pvip":true,"replies":[{"id":"11058","content":"执行起来，感觉差不多😂","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1538997968,"ip_address":"","comment_id":30511,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5833866548","product_id":100017501,"comment_content":"最讨厌的就是kpi考核，不是流行OKR吗","like_count":2,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426030,"discussion_content":"执行起来，感觉差不多😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538997968,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":262921,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1605884581,"is_pvip":true,"discussion_count":0,"race_medal":2,"score":"1605884581","product_id":100017501,"comment_content":"Plan B 有两层意思，一个是说在前面所有的方案之外，再叠加一个保险方案；另外就是说，不得不用的方案。<br><br>高可用系统建设框架估计也是知易行难的事情，除非做到系统架构师级别，否则也只能是纸上谈兵。不过知道一个大致的高可用框架——架构、编码、测试、发布、运行、故障处理全生命周期，也是有意义的，至少知道整体的蓝图是什么样子的——预防、管控、监控、恢复一个也不能少。<br><br>降级、限流、拒绝服务，这个应该是一个逐步递进的兜底方案，到了拒绝服务的时候，一般来说应该不会被击穿了。即使用户体验不好，但是至少系统还活着。","like_count":0},{"had_liked":false,"id":248617,"user_name":"不要挑战自己的智商","can_delete":false,"product_type":"c1","uid":2063114,"ip_address":"","ucode":"4910FF07C35DC5","user_header":"https://static001.geekbang.org/account/avatar/00/1f/7b/0a/b65e1fae.jpg","comment_is_top":false,"comment_ctime":1600242026,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1600242026","product_id":100017501,"comment_content":"拒绝服务也没用什么不好。秒杀本来就是一种抢购行为。库存有限。排队结果也会是后面的用户买不到商品，这和直接拒绝的效果是一样的。","like_count":0},{"had_liked":false,"id":144357,"user_name":"dingdongfm","can_delete":false,"product_type":"c1","uid":1564213,"ip_address":"","ucode":"7D17D2BC392A66","user_header":"","comment_is_top":false,"comment_ctime":1571902889,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571902889","product_id":100017501,"comment_content":"请教一个问题：“限流”和“拒绝服务”两种方式本身也会消耗服务器的资源，如果对应服务器的资源也超负荷了，系统不是一样会被压垮么？","like_count":0},{"had_liked":false,"id":136798,"user_name":"傻不拉几二锅头","can_delete":false,"product_type":"c1","uid":1356474,"ip_address":"","ucode":"E26045E067A099","user_header":"https://static001.geekbang.org/account/avatar/00/14/b2/ba/b74f2ec0.jpg","comment_is_top":false,"comment_ctime":1569510848,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569510848","product_id":100017501,"comment_content":"期待有针对客户端与服务端分布式环境的限流讲解","like_count":0},{"had_liked":false,"id":85639,"user_name":"Geek_eae456","can_delete":false,"product_type":"c1","uid":1337852,"ip_address":"","ucode":"863454A84F542E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKwvj3wcI41yfw60JaB0vNBDgWaURgMOlGcoHVCX9mvzOFiaUjMXZu9lLmwuufEHcgibZjt2avNHXibw/132","comment_is_top":false,"comment_ctime":1555152867,"is_pvip":false,"replies":[{"id":"34293","content":"还没看明白你的意思😂","user_name":"作者回复","user_name_real":"君山","uid":"1253339","ctime":1558246584,"ip_address":"","comment_id":85639,"utype":1}],"discussion_count":6,"race_medal":0,"score":"1555152867","product_id":100017501,"comment_content":"请问“统计qps用一个计数器就行，来一个请求加一，一秒统计一次”这种方案如果遇到【0.5，1】【1，1.3】两个区间都有4.5WQPS，假设最大是5WQPS，这样单秒没有超，可是【0.5，1.5】超了怎么处理呢？","like_count":0,"discussions":[{"author":{"id":1253339,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/db/d7d863ed.jpg","nickname":"君山","note":"","ucode":"F8ACCB6FBFAFCD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446747,"discussion_content":"还没看明白你的意思😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558246584,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1139455,"avatar":"https://static001.geekbang.org/account/avatar/00/11/62/ff/f71034e9.jpg","nickname":"悟空WuKong","note":"","ucode":"49AFD2B048C1BA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":217562,"discussion_content":"我明白你意思了，可以在方法入口判断当前正在执行方法的数量，然后进行判断","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1585570722,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2582372,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/sTmCOXh19off3uvUDIsDic4SYJGulgl1v6o3R4E32OZCkZAVzZw751jg9Tya8jLicxKzQWHC4Bu6o08J55YJib9oQ/132","nickname":"wsyzwddsg111","note":"","ucode":"7C59E81ECFF8AB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391046,"discussion_content":"系统能承受的峰值是1w qps，并不是说1s 一万个就崩了，而是1w qps持续几分钟十几分钟这样子的，所以可以用计数器，如果你非要用1s限制多少，要求非常准确，你就用滑动窗口了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630246300,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1435845,"avatar":"https://static001.geekbang.org/account/avatar/00/15/e8/c5/8bdb0bba.jpg","nickname":"DarKnight","note":"","ucode":"B04AFD03768827","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":324168,"discussion_content":"限流触发的处理时机一般也不会是一瞬间，不是说哪个一秒内QPS超限就立马限流，而是一个合理时间窗口，例如30秒，这样站在一个时间窗口的范围来看，并不在意这种瞬间QPS超限的情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605063991,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1228471,"avatar":"https://static001.geekbang.org/account/avatar/00/12/be/b7/638b5d30.jpg","nickname":"白泗小林","note":"","ucode":"CEF6A23B70947D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":134596,"discussion_content":"直接用令牌桶应该更好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579018009,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1103529,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d6/a9/ffd70fdc.jpg","nickname":"振超","note":"","ucode":"D55B896810DBBF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":154,"discussion_content":"限流器可以引入滑动窗口的策略","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561194913,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":77580,"user_name":"叶易","can_delete":false,"product_type":"c1","uid":1103445,"ip_address":"","ucode":"0983EA217ACF28","user_header":"https://static001.geekbang.org/account/avatar/00/10/d6/55/47e76936.jpg","comment_is_top":false,"comment_ctime":1552964862,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552964862","product_id":100017501,"comment_content":"许老师是把方法论给我们了，要真正掌握还是要在工作中不断实践。","like_count":0},{"had_liked":false,"id":49044,"user_name":"罗罗诺亚.恩佐","can_delete":false,"product_type":"c1","uid":1083422,"ip_address":"","ucode":"42D7932946CEBF","user_header":"https://static001.geekbang.org/account/avatar/00/10/88/1e/69e84907.jpg","comment_is_top":false,"comment_ctime":1544594025,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544594025","product_id":100017501,"comment_content":"看完了，非常不错！赞，期待新的课程上架。","like_count":0}]}