{"id":94075,"title":"06 | 指令跳转：原来if...else就是goto","content":"<p>上一讲，我们讲解了一行代码是怎么变成计算机指令的。你平时写的程序中，肯定不只有int a = 1这样最最简单的代码或者指令。我们总是要用到if…else这样的条件判断语句、while和for这样的循环语句，还有函数或者过程调用。</p><p>对应的，CPU执行的也不只是一条指令，一般一个程序包含很多条指令。因为有if…else、for这样的条件和循环存在，这些指令也不会一路平铺直叙地执行下去。</p><p>今天我们就在上一节的基础上来看看，一个计算机程序是怎么被分解成一条条指令来执行的。</p><h2>CPU是如何执行指令的？</h2><p>拿我们用的Intel CPU来说，里面差不多有几百亿个晶体管。实际上，一条条计算机指令执行起来非常复杂。好在CPU在软件层面已经为我们做好了封装。对于我们这些做软件的程序员来说，我们只要知道，写好的代码变成了指令之后，是一条一条<strong>顺序</strong>执行的就可以了。</p><p>我们先不管几百亿的晶体管的背后是怎么通过电路运转起来的，逻辑上，我们可以认为，CPU其实就是由一堆寄存器组成的。而寄存器就是CPU内部，由多个触发器（Flip-Flop）或者锁存器（Latches）组成的简单电路。</p><p>触发器和锁存器，其实就是两种不同原理的数字电路组成的逻辑门。这块内容并不是我们这节课的重点，所以你只要了解就好。如果想要深入学习的话，你可以学习数字电路的相关课程，这里我们不深入探讨。</p><!-- [[[read_end]]] --><p>好了，现在我们接着前面说。N个触发器或者锁存器，就可以组成一个N位（Bit）的寄存器，能够保存N位的数据。比方说，我们用的64位Intel服务器，寄存器就是64位的。</p><p><img src=\"https://static001.geekbang.org/resource/image/cd/6f/cdba5c17a04f0dd5ef05b70368b9a96f.jpg?wh=2404*1375\" alt=\"\"></p><p>一个CPU里面会有很多种不同功能的寄存器。我这里给你介绍三种比较特殊的。</p><p>一个是<strong>PC寄存器</strong>（Program Counter Register），我们也叫<strong>指令地址寄存器</strong>（Instruction Address Register）。顾名思义，它就是用来存放下一条需要执行的计算机指令的内存地址。</p><p>第二个是<strong>指令寄存器</strong>（Instruction Register），用来存放当前正在执行的指令。</p><p>第三个是<strong>条件码寄存器</strong>（Status Register），用里面的一个一个标记位（Flag），存放CPU进行算术或者逻辑计算的结果。</p><p>除了这些特殊的寄存器，CPU里面还有更多用来存储数据和内存地址的寄存器。这样的寄存器通常一类里面不止一个。我们通常根据存放的数据内容来给它们取名字，比如整数寄存器、浮点数寄存器、向量寄存器和地址寄存器等等。有些寄存器既可以存放数据，又能存放地址，我们就叫它通用寄存器。</p><p><img src=\"https://static001.geekbang.org/resource/image/ad/8a/ad91b005e97959d571bbd2a0fa30b48a.jpeg?wh=2237*1103\" alt=\"\"></p><p>实际上，一个程序执行的时候，CPU会根据PC寄存器里的地址，从内存里面把需要执行的指令读取到指令寄存器里面执行，然后根据指令长度自增，开始顺序读取下一条指令。可以看到，一个程序的一条条指令，在内存里面是连续保存的，也会一条条顺序加载。</p><p>而有些特殊指令，比如上一讲我们讲到J类指令，也就是跳转指令，会修改PC寄存器里面的地址值。这样，下一条要执行的指令就不是从内存里面顺序加载的了。事实上，这些跳转指令的存在，也是我们可以在写程序的时候，使用if…else条件语句和while/for循环语句的原因。</p><h2>从if…else来看程序的执行和跳转</h2><p>我们现在就来看一个包含if…else的简单程序。</p><pre><code>// test.c\n\n\n#include &lt;time.h&gt;\n#include &lt;stdlib.h&gt;\n\n\nint main()\n{\n  srand(time(NULL));\n  int r = rand() % 2;\n  int a = 10;\n  if (r == 0)\n  {\n    a = 1;\n  } else {\n    a = 2;\n  } \n</code></pre><p>我们用rand生成了一个随机数r，r要么是0，要么是1。当r是0的时候，我们把之前定义的变量a设成1，不然就设成2。</p><pre><code>$ gcc -g -c test.c\n$ objdump -d -M intel -S test.o \n</code></pre><p>我们把这个程序编译成汇编代码。你可以忽略前后无关的代码，只关注于这里的if…else条件判断语句。对应的汇编代码是这样的：</p><pre><code>    if (r == 0)\n  3b:   83 7d fc 00             cmp    DWORD PTR [rbp-0x4],0x0\n  3f:   75 09                   jne    4a &lt;main+0x4a&gt;\n    {\n        a = 1;\n  41:   c7 45 f8 01 00 00 00    mov    DWORD PTR [rbp-0x8],0x1\n  48:   eb 07                   jmp    51 &lt;main+0x51&gt;\n    }\n    else\n    {\n        a = 2;\n  4a:   c7 45 f8 02 00 00 00    mov    DWORD PTR [rbp-0x8],0x2\n  51:   b8 00 00 00 00          mov    eax,0x0\n    } \n</code></pre><p>可以看到，这里对于r ==  0的条件判断，被编译成了cmp和jne这两条指令。</p><p>cmp指令比较了前后两个操作数的值，这里的DWORD PTR代表操作的数据类型是32位的整数，而[rbp-0x4]则是变量r的内存地址。所以，第一个操作数就是从内存里拿到的变量r的值。第二个操作数0x0就是我们设定的常量0的16进制表示。cmp指令的比较结果，会存入到<strong>条件码寄存器</strong>当中去。</p><p>在这里，如果比较的结果是 True，也就是 r == 0，就把<strong>零标志条件码</strong>（对应的条件码是ZF，Zero Flag）设置为1。除了零标志之外，Intel的CPU下还有<strong>进位标志</strong>（CF，Carry Flag）、<strong>符号标志</strong>（SF，Sign Flag）以及<strong>溢出标志</strong>（OF，Overflow Flag），用在不同的判断条件下。</p><p>cmp指令执行完成之后，PC寄存器会自动自增，开始执行下一条jne的指令。</p><p>跟着的jne指令，是jump if not equal的意思，它会查看对应的零标志位。如果ZF为1，说明上面的比较结果是TRUE，如果是ZF是0，也就是上面的比较结果是False，会跳转到后面跟着的操作数4a的位置。这个4a，对应这里汇编代码的行号，也就是上面设置的else条件里的第一条指令。当跳转发生的时候，PC寄存器就不再是自增变成下一条指令的地址，而是被直接设置成这里的4a这个地址。这个时候，CPU再把4a地址里的指令加载到指令寄存器中来执行。</p><p>跳转到执行地址为4a的指令，实际是一条mov指令，第一个操作数和前面的cmp指令一样，是另一个32位整型的内存地址，以及2的对应的16进制值0x2。mov指令把2设置到对应的内存里去，相当于一个赋值操作。然后，PC寄存器里的值继续自增，执行下一条mov指令。</p><p>这条mov指令的第一个操作数eax，代表累加寄存器，第二个操作数0x0则是16进制的0的表示。这条指令其实没有实际的作用，它的作用是一个占位符。我们回过头去看前面的if条件，如果满足的话，在赋值的mov指令执行完成之后，有一个jmp的无条件跳转指令。跳转的地址就是这一行的地址51。我们的main函数没有设定返回值，而mov eax, 0x0 其实就是给main函数生成了一个默认的为0的返回值到累加器里面。if条件里面的内容执行完成之后也会跳转到这里，和else里的内容结束之后的位置是一样的。</p><p><img src=\"https://static001.geekbang.org/resource/image/b4/fa/b439cebb2d85496ad6eef2f61071aefa.jpeg?wh=2716*1330\" alt=\"\"></p><p>上一讲我们讲打孔卡的时候说到，读取打孔卡的机器会顺序地一段一段地读取指令，然后执行。执行完一条指令，它会自动地顺序读取下一条指令。如果执行的当前指令带有跳转的地址，比如往后跳10个指令，那么机器会自动将卡片带往后移动10个指令的位置，再来执行指令。同样的，机器也能向前移动，去读取之前已经执行过的指令。这也就是我们的while/for循环实现的原理。</p><h2>如何通过if…else和goto来实现循环？</h2><pre><code>int main()\n{\n    int a = 0;\n    for (int i = 0; i &lt; 3; i++)\n    {\n        a += i;\n    }\n}\n</code></pre><p>我们再看一段简单的利用for循环的程序。我们循环自增变量i三次，三次之后，i&gt;=3，就会跳出循环。整个程序，对应的Intel汇编代码就是这样的：</p><pre><code>    for (int i = 0; i &lt;= 2; i++)\n   b:   c7 45 f8 00 00 00 00    mov    DWORD PTR [rbp-0x4],0x0\n  12:   eb 0a                   jmp    1e \n    {\n        a += i;\n  14:   8b 45 f8                mov    eax,DWORD PTR [rbp-0x4]\n  17:   01 45 fc                add    DWORD PTR [rbp-0x8],eax\n\n  1a:   83 45 f8 01             add    DWORD PTR [rbp-0x4],0x1\n  1e:   83 7d f8 02             cmp    DWORD PTR [rbp-0x4],0x2\n  22:   7e f0                   jle    14 \n  24:   b8 00 00 00 00          mov    eax,0x0\n    }\n</code></pre><p>可以看到，对应的循环也是用1e这个地址上的cmp比较指令，和紧接着的jle条件跳转指令来实现的。主要的差别在于，这里的jle跳转的地址，在这条指令之前的地址14，而非if…else编译出来的跳转指令之后。往前跳转使得条件满足的时候，PC寄存器会把指令地址设置到之前执行过的指令位置，重新执行之前执行过的指令，直到条件不满足，顺序往下执行jle之后的指令，整个循环才结束。</p><p><img src=\"https://static001.geekbang.org/resource/image/fb/17/fb50fe39181abb0f70fcfec53cf12317.jpg?wh=2634*1092\" alt=\"\"></p><p>如果你看一长条打孔卡的话，就会看到卡片往后移动一段，执行了之后，又反向移动，去重新执行前面的指令。</p><p>其实，你有没有觉得，jle和jmp指令，有点像程序语言里面的goto命令，直接指定了一个特定条件下的跳转位置。虽然我们在用高级语言开发程序的时候反对使用goto，但是实际在机器指令层面，无论是if…else…也好，还是for/while也好，都是用和goto相同的跳转到特定指令位置的方式来实现的。</p><h2>总结延伸</h2><p>这一节，我们在单条指令的基础上，学习了程序里的多条指令，究竟是怎么样一条一条被执行的。除了简单地通过PC寄存器自增的方式顺序执行外，条件码寄存器会记录下当前执行指令的条件判断状态，然后通过跳转指令读取对应的条件码，修改PC寄存器内的下一条指令的地址，最终实现if…else以及for/while这样的程序控制流程。</p><p>你会发现，虽然我们可以用高级语言，可以用不同的语法，比如 if…else 这样的条件分支，或者 while/for 这样的循环方式，来实现不同的程序运行流程，但是回归到计算机可以识别的机器指令级别，其实都只是一个简单的地址跳转而已，也就是一个类似于goto的语句。</p><p>想要在硬件层面实现这个goto语句，除了本身需要用来保存下一条指令地址，以及当前正要执行指令的PC寄存器、指令寄存器外，我们只需要再增加一个条件码寄存器，来保留条件判断的状态。这样简简单单的三个寄存器，就可以实现条件判断和循环重复执行代码的功能。</p><p>下一节，我们会进一步讲解，如果程序中出现函数或者过程这样可以复用的代码模块，对应的指令是怎么样执行的，会和我们这里的if…else有什么不同。</p><h2>推荐阅读</h2><p>《深入理解计算机系统》的第3章，详细讲解了C语言和Intel CPU的汇编语言以及指令的对应关系，以及Intel CPU的各种寄存器和指令集。</p><p>Intel指令集相对于之前的MIPS指令集要复杂一些，一方面，所有的指令是变长的，从1个字节到15个字节不等；另一方面，即使是汇编代码，还有很多针对操作数据的长度不同有不同的后缀。我在这里没有详细解释各个指令的含义，如果你对用C/C++做Linux系统层面开发感兴趣，建议你一定好好读一读这一章节。</p><h2>课后思考</h2><p>除了if…else的条件语句和for/while的循环之外，大部分编程语言还有switch…case这样的条件跳转语句。switch…case编译出来的汇编代码也是这样使用jne指令进行跳转吗？对应的汇编代码的性能和写很多if…else有什么区别呢？你可以试着写一个简单的C语言程序，编译成汇编代码看一看。</p><p>欢迎留言和我分享你的思考和疑惑，你也可以把今天的内容分享给你的朋友，和他一起学习和进步。</p>","neighbors":{"left":{"article_title":"05 | 计算机指令：让我们试试用纸带编程","id":93359},"right":{"article_title":"07 | 函数调用：为什么会发生stack overflow？","id":94427}},"comments":[{"had_liked":false,"id":92551,"user_name":"宋不肥","can_delete":false,"product_type":"c1","uid":1240126,"ip_address":"","ucode":"32B34AF579C91C","user_header":"https://static001.geekbang.org/account/avatar/00/12/ec/3e/885ec1d2.jpg","comment_is_top":false,"comment_ctime":1557299889,"is_pvip":false,"replies":[{"id":"33362","content":"👍完全正确。","user_name":"作者回复","comment_id":92551,"uid":"1053568","ip_address":"","utype":1,"ctime":1557470008,"user_name_real":"徐文浩"}],"discussion_count":23,"race_medal":0,"score":"847665857201","product_id":100026001,"comment_content":"个人理解：这一讲的核心在于理解几个寄存器的作用，从而理解cpu运行程序的过程：cpu从PC寄存器中取地址，找到地址对应的内存位子，取出其中指令送入指令寄存器执行，然后指令自增，重复操作。所以只要程序在内存中是连续存储的，就会顺序执行这也是冯诺依曼体系的理念吧。而实际上跳转指令就是当前指令修改了当前PC寄存器中所保存的下一条指令的地址，从而实现了跳转。当然各个寄存器实际上是由数电中的一个一个门电路组合出来的，而各个门电路的具体电路形式也是属于模电的东西。对于我们来说，有个具体概念就行，实在需要的时候再回去翻翻课本捡起来就行。","like_count":197,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449315,"discussion_content":"👍完全正确。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557470008,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1834181,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/fc/c5/ff8b770e.jpg","nickname":"BugBean","note":"","ucode":"B51232281AD9BC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326547,"discussion_content":"您好，有一点不太明白，我的理解是CPU从PC寄存器拿到指令的内存地址，去内存找到指令内容，然后把指令内容存到指令寄存器，再从指令寄存器取出来执行，我这样理解对吗？为什么要先存在指令寄存器，而不是直接执行？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1605615230,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":5,"child_discussions":[{"author":{"id":1047423,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/fb/7f/746a6f5e.jpg","nickname":"Q","note":"","ucode":"785546C617D3DF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1834181,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/fc/c5/ff8b770e.jpg","nickname":"BugBean","note":"","ucode":"B51232281AD9BC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340350,"discussion_content":"CPU是两个核心部件组成，一个是控制器，一个计算器。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609984082,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":326547,"ip_address":""},"score":340350,"extra":""},{"author":{"id":1643181,"avatar":"https://static001.geekbang.org/account/avatar/00/19/12/ad/8a149930.jpg","nickname":"青城","note":"","ucode":"9C255FF808D4EF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1834181,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/fc/c5/ff8b770e.jpg","nickname":"BugBean","note":"","ucode":"B51232281AD9BC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":357832,"discussion_content":"个人理解，仅供参考：CPU中包含控制器和计算器，控制器从PC中取出指令地址，从内存中取出指令。指令由两部分组成，第一部分是操作类型，第二部分是操作的数据内存地址。控制器解析出两部分后，将第一部分即操作类型存入指令寄存器，然后跟据第二部分地址去内存中取数据，等数据取回后再一起执行。所以，要先存指令寄存器，实际存的不是指令本身，而是指令的操作类型。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1615878183,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":326547,"ip_address":""},"score":357832,"extra":""},{"author":{"id":2837328,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/4b/50/fae00aff.jpg","nickname":"HollyWong","note":"","ucode":"03A66A2BCC0A58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1834181,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/fc/c5/ff8b770e.jpg","nickname":"BugBean","note":"","ucode":"B51232281AD9BC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412306,"discussion_content":"放到指令寄存器以后就是译码和执行了，译码的对象是指令寄存器IR所以要先放到IR里。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636123948,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":326547,"ip_address":""},"score":412306,"extra":""}]},{"author":{"id":2571524,"avatar":"","nickname":"Akuya","note":"","ucode":"2B85A1AA8DD396","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588257,"discussion_content":"那如果是高级语言的多线程，在这里是怎么理解啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663636606,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2837328,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/4b/50/fae00aff.jpg","nickname":"HollyWong","note":"","ucode":"03A66A2BCC0A58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412298,"discussion_content":"纠正一下，不是模电，是数电，晶体管工作在开关状态，没工作在放大状态。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636123511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1240126,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ec/3e/885ec1d2.jpg","nickname":"宋不肥","note":"","ucode":"32B34AF579C91C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2837328,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/4b/50/fae00aff.jpg","nickname":"HollyWong","note":"","ucode":"03A66A2BCC0A58","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412427,"discussion_content":"“数电中的一个一个门电路组合出来的，而各个门电路的具体电路形式也是属于模电的东西。”门电路组合成触发器，计数器，存储器属于数电。门电路里面具体形式，各个半导体的运作不属于模电？先看清楚再扛好吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636164945,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":412298,"ip_address":""},"score":412427,"extra":""},{"author":{"id":2837328,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/4b/50/fae00aff.jpg","nickname":"HollyWong","note":"","ucode":"03A66A2BCC0A58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1240126,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ec/3e/885ec1d2.jpg","nickname":"宋不肥","note":"","ucode":"32B34AF579C91C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414088,"discussion_content":"工作在放大状态是模电，工作在开关状态就是数电了，这也是数电最基本的原理（01布尔量）。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636645193,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":412427,"ip_address":""},"score":414088,"extra":""},{"author":{"id":1240126,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ec/3e/885ec1d2.jpg","nickname":"宋不肥","note":"","ucode":"32B34AF579C91C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2837328,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/4b/50/fae00aff.jpg","nickname":"HollyWong","note":"","ucode":"03A66A2BCC0A58","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414638,"discussion_content":"看清楚：“门电路的具体形式”，你一个输入信号在门电路里面信号电流是怎么流动的（具体）是怎么实现门的功能的，这个就是模电的内容，得到各个基本门电路之后才是01实现数字电路里面的具体逻辑。你的说法没错，这也是属于模电，不知道你在杠什么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636819521,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":414088,"ip_address":""},"score":414638,"extra":""}]},{"author":{"id":2721501,"avatar":"","nickname":"Geek_ee66c4","note":"","ucode":"77440415DAE9F7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387215,"discussion_content":"纠正一下，&#34;而各个门电路的具体电路形式也是属于模电的东西&#34;这句话错了，应该是数电","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628057068,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":5,"child_discussions":[{"author":{"id":1240126,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ec/3e/885ec1d2.jpg","nickname":"宋不肥","note":"","ucode":"32B34AF579C91C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2721501,"avatar":"","nickname":"Geek_ee66c4","note":"","ucode":"77440415DAE9F7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411044,"discussion_content":"门电路组成触发器，各个小功能部件是数字电路内容，具体每个门电路里面PN结组成3级管，共射，共集这些知识是属于模电的话，希望不要误导到看我留言的朋友哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635837453,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":387215,"ip_address":""},"score":411044,"extra":""},{"author":{"id":2837328,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/4b/50/fae00aff.jpg","nickname":"HollyWong","note":"","ucode":"03A66A2BCC0A58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1240126,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ec/3e/885ec1d2.jpg","nickname":"宋不肥","note":"","ucode":"32B34AF579C91C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414089,"discussion_content":"晶体管可以工作在三种工作状态下，数电就是它在开关态工作。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636645327,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":411044,"ip_address":""},"score":414089,"extra":""},{"author":{"id":1240126,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ec/3e/885ec1d2.jpg","nickname":"宋不肥","note":"","ucode":"32B34AF579C91C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2837328,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/4b/50/fae00aff.jpg","nickname":"HollyWong","note":"","ucode":"03A66A2BCC0A58","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414639,"discussion_content":"本科通信出身，知道你说的什么意思，你先看下我的表述，再杠","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636819585,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":414089,"ip_address":""},"score":414639,"extra":""}]},{"author":{"id":2063037,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/7a/bd/1f461acf.jpg","nickname":"西电","note":"","ucode":"95BD4CE9D93018","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":362671,"discussion_content":"有个疑问：看汇编代码，变量都是通过rbp地址偏移来存储的，那就是存储在寄存器中？寄存器不够用怎么办？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617005933,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2728259,"avatar":"https://static001.geekbang.org/account/avatar/00/29/a1/43/fd7dc717.jpg","nickname":"木易若","note":"","ucode":"C167478785BCB1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2063037,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/7a/bd/1f461acf.jpg","nickname":"西电","note":"","ucode":"95BD4CE9D93018","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388202,"discussion_content":"可以用栈，栈就是让数据住进去的地方，也叫运存。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628651389,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":362671,"ip_address":""},"score":388202,"extra":""},{"author":{"id":2837328,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/4b/50/fae00aff.jpg","nickname":"HollyWong","note":"","ucode":"03A66A2BCC0A58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2063037,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/7a/bd/1f461acf.jpg","nickname":"西电","note":"","ucode":"95BD4CE9D93018","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412300,"discussion_content":"是内存中，不是寄存器中，寄存器只存当前正在处理的数据，处理完就又保存到内存里了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636123665,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":362671,"ip_address":""},"score":412300,"extra":""}]},{"author":{"id":1240126,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ec/3e/885ec1d2.jpg","nickname":"宋不肥","note":"","ucode":"32B34AF579C91C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326902,"discussion_content":"cpu只能计算…就是加法器啥的来着记得，本质上计算机只能执行与运算和或运算熬，凑成加法器，在凑成各个基本单元熬","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605696199,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2837328,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/4b/50/fae00aff.jpg","nickname":"HollyWong","note":"","ucode":"03A66A2BCC0A58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1240126,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ec/3e/885ec1d2.jpg","nickname":"宋不肥","note":"","ucode":"32B34AF579C91C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412302,"discussion_content":"CPU就是运算器和控制器，当然还有了解他们的数据通路","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636123756,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":326902,"ip_address":""},"score":412302,"extra":""}]}]},{"had_liked":false,"id":92485,"user_name":"L","can_delete":false,"product_type":"c1","uid":1289120,"ip_address":"","ucode":"ED1EF491CCFC95","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKibpqtH0ORBMSibtP6DzJ9yZmWzSxzv9ULPZmXyDrduib1fFkacNiakhOuOEOrUILFbA7jXQq2NEFKUg/132","comment_is_top":false,"comment_ctime":1557281491,"is_pvip":true,"replies":[{"id":"33375","content":"那要加油搞清楚啊。","user_name":"作者回复","comment_id":92485,"uid":"1053568","ip_address":"","utype":1,"ctime":1557471642,"user_name_real":"徐文浩"}],"discussion_count":6,"race_medal":0,"score":"293615057619","product_id":100026001,"comment_content":"非计算机专业 表示看到这一章已经很懵逼了","like_count":69,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449279,"discussion_content":"那要加油搞清楚啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557471642,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1240465,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ed/91/1d332031.jpg","nickname":"我能走多远","note":"","ucode":"07DF5D5DADFA3C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":83692,"discussion_content":"和你一样懵逼","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1576458681,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2641303,"avatar":"https://static001.geekbang.org/account/avatar/00/28/4d/97/1d99a0a3.jpg","nickname":"柒城","note":"","ucode":"CAC7861175232A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535856,"discussion_content":"非科班建议先学一门语言，最好c语言，然后再来看这种课","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1638581234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1623117,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c4/4d/85014aab.jpg","nickname":"一叉树","note":"","ucode":"BFC984403ACD1F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576602,"discussion_content":"没关系，看多几遍，理解多几遍，你也是科班了。并不是什么不可逾越的鸿沟。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655697362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1356956,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b4/9c/e034537f.jpg","nickname":"wudishi","note":"","ucode":"E60E5DBA5C44E2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574704,"discussion_content":"能看懂就有鬼了. 这课只适合科班来复习","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654269258,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2175174,"avatar":"","nickname":"Geek_70d9c5","note":"","ucode":"19FC571E16EB68","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305514,"discussion_content":"看看最高赞回答～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599979250,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92846,"user_name":"Out","can_delete":false,"product_type":"c1","uid":1122104,"ip_address":"","ucode":"61C6F189F784BC","user_header":"https://static001.geekbang.org/account/avatar/00/11/1f/38/38d52458.jpg","comment_is_top":false,"comment_ctime":1557336193,"is_pvip":false,"replies":[{"id":"33400","content":"是得，笔误了。应该是 “如果比较得结果是True，也就是 r == 0，就把零标志码设置为1”<br>不然后面得jne跳转和这里也对不上。","user_name":"作者回复","comment_id":92846,"uid":"1053568","ip_address":"","utype":1,"ctime":1557475911,"user_name_real":"徐文浩"}],"discussion_count":2,"race_medal":0,"score":"190535897217","product_id":100026001,"comment_content":"老师您好，在文中您提到：“在这里，如果比较的结果是False，也就是0，就把零标志码设置为1” 这个地方是不是有问题，根据我查到结果，cmp will ZF to 1 when two operands are equal. 所以如果比较的结果是True，才会把零标志码设置为1。","like_count":44,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449399,"discussion_content":"是得，笔误了。应该是 “如果比较得结果是True，也就是 r == 0，就把零标志码设置为1”\n不然后面得jne跳转和这里也对不上。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557475911,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2923808,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/9d/20/b4f0d8f7.jpg","nickname":"甜瓜","note":"","ucode":"DC6B6E448C86D5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":552964,"discussion_content":"那是不是ZF＝0的时候，会跳转到4a呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645670642,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":449399,"ip_address":""},"score":552964,"extra":""}]}]},{"had_liked":false,"id":93048,"user_name":"免费的人","can_delete":false,"product_type":"c1","uid":1032106,"ip_address":"","ucode":"2B12D8ED63C564","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bf/aa/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1557384874,"is_pvip":false,"replies":[{"id":"33386","content":"👍","user_name":"作者回复","comment_id":93048,"uid":"1053568","ip_address":"","utype":1,"ctime":1557472720,"user_name_real":"徐文浩"}],"discussion_count":3,"race_medal":0,"score":"181946011306","product_id":100026001,"comment_content":"switch case 要看编译器有没有生成跳表，没有的话跟if else效率应该是一样的，比如case个数比较少的情况","like_count":43,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449470,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557472720,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1014061,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/79/2d/dbb5570f.jpg","nickname":"huadanian","note":"","ucode":"A986E1DB777428","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370162,"discussion_content":"vs2017下面当case个数大于3的时候，就会生成跳表，也就是一个数组，数组里面的值就是指针，数组的内容会随着case中的值不同而做调整","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1619315807,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2354332,"avatar":"https://static001.geekbang.org/account/avatar/00/23/ec/9c/b4acd768.jpg","nickname":"Sarah","note":"","ucode":"FDC8A0D30EAE28","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378575,"discussion_content":"学习到了强 厉害 赞 真棒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623292308,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92479,"user_name":"Linuxer","can_delete":false,"product_type":"c1","uid":1153978,"ip_address":"","ucode":"272D9D8089C3D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/ba/333b59e5.jpg","comment_is_top":false,"comment_ctime":1557280417,"is_pvip":false,"replies":[{"id":"33377","content":"是的，如果没有提供返回值，很多版本的编译器会隐式地生成一个return 0;的返回值，就会生成 mov eax, 0x0 的多出来的指令。我修改一下让文章更准确一点。","user_name":"作者回复","comment_id":92479,"uid":"1053568","ip_address":"","utype":1,"ctime":1557471720,"user_name_real":"徐文浩"}],"discussion_count":2,"race_medal":0,"score":"117521397409","product_id":100026001,"comment_content":"int main()<br>{<br>   0:   55                      push   rbp<br>   1:   48 89 e5                mov    rbp,rsp<br>   int i = 0;<br>   4:   c7 45 fc 00 00 00 00    mov    DWORD PTR [rbp-0x4],0x0<br>   int a = 0;<br>   b:   c7 45 f8 00 00 00 00    mov    DWORD PTR [rbp-0x8],0x0<br>   switch(i)<br>  12:   8b 45 fc                mov    eax,DWORD PTR [rbp-0x4]<br>  15:   83 f8 01                cmp    eax,0x1<br>  18:   74 07                   je     21 &lt;main+0x21&gt;<br>  1a:   83 f8 02                cmp    eax,0x2<br>  1d:   74 0b                   je     2a &lt;main+0x2a&gt;<br>  1f:   eb 12                   jmp    33 &lt;main+0x33&gt;<br>   {<br>      case 1:<br>        a = 1;<br>  21:   c7 45 f8 01 00 00 00    mov    DWORD PTR [rbp-0x8],0x1<br>        break;<br>  28:   eb 11                   jmp    3b &lt;main+0x3b&gt;<br>      case 2:<br>        a = 2;<br>  2a:   c7 45 f8 02 00 00 00    mov    DWORD PTR [rbp-0x8],0x2<br>        break;<br>  31:   eb 08                   jmp    3b &lt;main+0x3b&gt;<br>      default:<br>        a = 3;<br>  33:   c7 45 f8 03 00 00 00    mov    DWORD PTR [rbp-0x8],0x3<br>        break;<br>  3a:   90                      nop<br>   }<br><br>   return 1;<br>  3b:   b8 01 00 00 00          mov    eax,0x1<br>}<br>  40:   5d                      pop    rbp<br>  41:   c3                      ret<br><br>课后问题验证，这么看如果是单纯的两个分支采用if else更有利，另外 mov    eax,0x1从这儿看象是main的返回值","like_count":27,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449278,"discussion_content":"是的，如果没有提供返回值，很多版本的编译器会隐式地生成一个return 0;的返回值，就会生成 mov eax, 0x0 的多出来的指令。我修改一下让文章更准确一点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557471720,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2441162,"avatar":"https://static001.geekbang.org/account/avatar/00/25/3f/ca/f348ccc9.jpg","nickname":"青青","note":"","ucode":"098366D59F86D3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":574515,"discussion_content":"发现编织优化加了-o2后，没加return ，程序会循环，最后栈溢出，想请教老师是什么原因","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654096146,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":449278,"ip_address":""},"score":574515,"extra":""}]}]},{"had_liked":false,"id":93229,"user_name":"不记年","can_delete":false,"product_type":"c1","uid":1045945,"ip_address":"","ucode":"287E40C68356DC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f5/b9/888fe350.jpg","comment_is_top":false,"comment_ctime":1557444512,"is_pvip":false,"replies":[{"id":"33379","content":"👍这个关于CPU的控制器的译码器的部分我会在后续讲解CPU的部分讲到。","user_name":"作者回复","comment_id":93229,"uid":"1053568","ip_address":"","utype":1,"ctime":1557472000,"user_name_real":"徐文浩"}],"discussion_count":1,"race_medal":0,"score":"78866855840","product_id":100026001,"comment_content":"cpu的在执行指令时还要有个转码的电路来将指令转换成不同的电信号，这些电信号可以控制各个寄存器的动作～","like_count":18,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449535,"discussion_content":"👍这个关于CPU的控制器的译码器的部分我会在后续讲解CPU的部分讲到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557472000,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96720,"user_name":"大熊","can_delete":false,"product_type":"c1","uid":1008951,"ip_address":"","ucode":"D7858E9DA87B5E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/65/37/56c492d3.jpg","comment_is_top":false,"comment_ctime":1558492676,"is_pvip":false,"replies":[{"id":"35526","content":"👍多动手自己体会是王道。","user_name":"作者回复","comment_id":96720,"uid":"1053568","ip_address":"","utype":1,"ctime":1559130365,"user_name_real":"徐文浩"}],"discussion_count":1,"race_medal":0,"score":"61688034820","product_id":100026001,"comment_content":"接testswitch1的那条<br>如果条件比较多，3个以上，反汇编出来的代码就是先经过一系列计算，最后跳转。<br><br>-----------testswitch2.c<br>#include &lt;stdio.h&gt;<br><br>int main(int argc, char const *argv[])<br>{<br>    int m = 3;<br>    int a = 0;<br><br>    switch (m)<br>    {<br>    case 5:<br>        a = 5;<br>        break;<br>    case 4:<br>        a = 4;<br>        break;<br>    case 3:<br>        a = 3;<br>        break;<br>    case 2:<br>        a = 2;<br>        break;<br>    case 1:<br>        a = 1;<br>        break;<br>    default:<br>        a = 9;<br>    }<br>    return 0;<br>}<br>-----------testswitch2.c<br><br>上面的代码进行的反汇编：<br><br>-----------testswitch2<br>#include &lt;stdio.h&gt;<br><br>int main()<br>{<br>   0:   55                      push   rbp<br>   1:   48 89 e5                mov    rbp,rsp<br>   4:   89 7d ec                mov    DWORD PTR [rbp-0x14],edi<br>   7:   48 89 75 e0             mov    QWORD PTR [rbp-0x20],rsi<br>    int m = 3;<br>   b:   c7 45 f8 03 00 00 00    mov    DWORD PTR [rbp-0x8],0x3    # 把3，放在地址[rbp-0x8]<br>    int a = 0;<br>  12:   c7 45 fc 00 00 00 00    mov    DWORD PTR [rbp-0x4],0x0    # 把0，放在地址[rbp-0x4]<br><br>    switch (m)<br>  19:   83 7d f8 05             cmp    DWORD PTR [rbp-0x8],0x5    # 把[rbp-0x8]的值(即3)和5比较<br>  1d:   77 51                   ja     70 &lt;main+0x70&gt;    # 如果大于5，则跳转到70(即default)执行 a = 9<br>  1f:   8b 45 f8                mov    eax,DWORD PTR [rbp-0x8]    # 把3，放入eax<br><br>  # 从这里开始不做过多解释，这就是经过一系列操作和计算的部分<br>  22:   48 8d 14 85 00 00 00    lea    rdx,[rax*4+0x0]    <br>  29:   00 <br>  2a:   48 8d 05 00 00 00 00    lea    rax,[rip+0x0]        # 31 &lt;main+0x31&gt;   <br>  31:   8b 04 02                mov    eax,DWORD PTR [rdx+rax*1]    # <br>  34:   48 63 d0                movsxd rdx,eax<br>  37:   48 8d 05 00 00 00 00    lea    rax,[rip+0x0]        # 3e &lt;main+0x3e&gt;<br>  3e:   48 01 d0                add    rax,rdx<br>  # 到这里结束<br>  41:   ff e0                   jmp    rax    # 直接执行的是jmp指令，直接跳转到要执行的语句位置<br>&#47;*后面代码省略*&#47;<br>-----------testswitch2<br><br>所以，switch判断条件多，且最好case之间的差值不要过大的时候最好使用switch","like_count":14,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450985,"discussion_content":"👍多动手自己体会是王道。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559130365,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":103939,"user_name":"Amark","can_delete":false,"product_type":"c1","uid":1121326,"ip_address":"","ucode":"E5F48633654002","user_header":"https://static001.geekbang.org/account/avatar/00/11/1c/2e/93812642.jpg","comment_is_top":false,"comment_ctime":1560569237,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"48805209493","product_id":100026001,"comment_content":"上一节讲的是: 高级语言的代码到汇编语言再到机器指令的过程，而这节其实是: 计算机如何执行机器指令的，分为顺序执行与跳转执行的方式，当然这两种执行方式是通过指令寄存器，PC寄存器，条形码寄存器实现的。","like_count":11,"discussions":[{"author":{"id":1250807,"avatar":"https://static001.geekbang.org/account/avatar/00/13/15/f7/744720a2.jpg","nickname":"DriveMan_邱佳源","note":"","ucode":"A4C83BF07DEE7A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":12964,"discussion_content":"其实大概记住这些概念就行了，没必要扣一些细节","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568620377,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92444,"user_name":"Linuxer","can_delete":false,"product_type":"c1","uid":1153978,"ip_address":"","ucode":"272D9D8089C3D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/ba/333b59e5.jpg","comment_is_top":false,"comment_ctime":1557275322,"is_pvip":false,"replies":[{"id":"33366","content":"Linuxer同学你说得对，这个就是main的返回值。","user_name":"作者回复","comment_id":92444,"uid":"1053568","ip_address":"","utype":1,"ctime":1557470715,"user_name_real":"徐文浩"}],"discussion_count":1,"race_medal":0,"score":"48801915578","product_id":100026001,"comment_content":"51:   b8 00 00 00 00          mov    eax,0x0<br>这个会不会是main的返回值呢?","like_count":11,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449260,"discussion_content":"Linuxer同学你说得对，这个就是main的返回值。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557470715,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93537,"user_name":"rookie","can_delete":false,"product_type":"c1","uid":1451605,"ip_address":"","ucode":"F23FB0F2CC9AD0","user_header":"https://static001.geekbang.org/account/avatar/00/16/26/55/e72a671e.jpg","comment_is_top":false,"comment_ctime":1557490700,"is_pvip":false,"replies":[{"id":"33430","content":"👍","user_name":"作者回复","comment_id":93537,"uid":"1053568","ip_address":"","utype":1,"ctime":1557508428,"user_name_real":"徐文浩"}],"discussion_count":1,"race_medal":0,"score":"40212196364","product_id":100026001,"comment_content":"程序如下：<br>int main(){<br>\tint i = 0;<br>\tint a = 0;<br>\tswitch(i){<br>\t\tcase 1:<br>\t\t\ta = 1;<br>\t\t\tbreak;<br>\t\tcase 2:<br>\t\t\ta = 2;<br>\t\t\tbreak;<br>\t\tdefault:<br>\t\t\ta = 3;<br>\t\t\tbreak;}<br>\treturn 1;<br>}<br><br>下面是机器码和汇编代码：<br>0000000000000000 &lt;main&gt;:<br>   0:\t55                            \tpush   rbp<br>   1:\t48 89 e5                   \tmov    rbp,rsp<br>   4:\tc7 45 f8 00 00 00 00 \tmov    DWORD PTR [rbp-0x8],0x0 #将0复制给[rbp-0x8] 这个内存地址，即 i = 0<br>   b:\tc7 45 fc 00 00 00 00 \tmov    DWORD PTR [rbp-0x4],0x0 #将0复制给[rbp-0x4] 这个内存地址，即 a = 0<br>  12:\t8b 45 f8                   \tmov    eax,DWORD PTR [rbp-0x8] #将i的值1复制给寄存器eax<br>  15:\t83 f8 01                    \tcmp    eax,0x1  #将eax与1进行比较，如果true则执行下面的je指令，跳转到21<br>  18:\t74 07                        \tje     21 &lt;main+0x21&gt;<br>  1a:\t83 f8 02                    \tcmp    eax,0x2  #将eax与2进行比较，如果true则执行下面的je指令，跳转到2a<br>  1d:\t74 0b                       \tje     2a &lt;main+0x2a&gt;<br>  1f:\teb 12                        \tjmp    33 &lt;main+0x33&gt;                    #跳转到33<br>  21:\tc7 45 fc 01 00 00 00   \tmov    DWORD PTR [rbp-0x4],0x1     #a = 1<br>  28:\teb 11                         \tjmp    3b &lt;main+0x3b&gt;<br>  2a:\tc7 45 fc 02 00 00 00 \tmov    DWORD PTR [rbp-0x4],0x2     #a = 2<br>  31:\teb 08                       \tjmp    3b &lt;main+0x3b&gt;<br>  33:\tc7 45 fc 03 00 00 00 \tmov    DWORD PTR [rbp-0x4],0x3     #a = 3<br>  3a:\t90                            \tnop<br>  3b:\tb8 01 00 00 00          \tmov    eax,0x1                                   # eax = 1<br>  40:\t5d                            \tpop    rbp<br>  41:\tc3                      \t        ret                                                     # 返回eax","like_count":9,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449669,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557508428,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92865,"user_name":"aiter","can_delete":false,"product_type":"c1","uid":1261780,"ip_address":"","ucode":"8B1D45C2D72B1D","user_header":"https://static001.geekbang.org/account/avatar/00/13/40/d4/9aabdac0.jpg","comment_is_top":false,"comment_ctime":1557358932,"is_pvip":false,"replies":[{"id":"33385","content":"aiter同学谢谢。我回复了，不过你这里的理解不太对，jle指令并不是和2做比较，而是判断标志位的，jle 和 jl 用的是不同的标志位，具体可以看看这个reference http:&#47;&#47;www.unixwiz.net&#47;techtips&#47;x86-jumps.html","user_name":"作者回复","comment_id":92865,"uid":"1053568","ip_address":"","utype":1,"ctime":1557472526,"user_name_real":"徐文浩"}],"discussion_count":1,"race_medal":0,"score":"40212064596","product_id":100026001,"comment_content":"徐老师好～<br>C语言我不会，。，努力看了半天，算是懂了大部分，但是for循环那里还是有点问题～汇编语言里，jmp 1e 之后，应该是做比较cmp，但是为什么不是0和3比较，而是和16进制的2（0x2）比较？<br>————-<br>因为后面用的jle(jump if less or equal) &lt;=2.如果是使用jl(jump if less) &lt;3.应该是编译器的优化行为？可以自己写汇编代码，使用jl 0x3试试效果是否一样","like_count":9,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449404,"discussion_content":"aiter同学谢谢。我回复了，不过你这里的理解不太对，jle指令并不是和2做比较，而是判断标志位的，jle 和 jl 用的是不同的标志位，具体可以看看这个reference http://www.unixwiz.net/techtips/x86-jumps.html","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557472526,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178229,"user_name":"Paul Shan","can_delete":false,"product_type":"c1","uid":1593140,"ip_address":"","ucode":"32D99989028284","user_header":"","comment_is_top":false,"comment_ctime":1581628037,"is_pvip":false,"replies":[{"id":"69417","content":"👍，这个描述和比喻也很恰当。其实计算机是一个依靠非常简单的基础电路组建起来的一个极其精巧的设备。就好像用砖头砌起了米兰大教堂一样。","user_name":"作者回复","comment_id":178229,"uid":"1053568","ip_address":"","utype":1,"ctime":1581839562,"user_name_real":"徐文浩"}],"discussion_count":1,"race_medal":0,"score":"31646399109","product_id":100026001,"comment_content":"PC寄存器像在一条磁带上滑动磁头，指令寄存器则是这个磁头读取的内容，条件码寄存器存储的是计算的中间过程，跳转指令则是让这个磁头向前或者向后跳转到预先指定的位置。判断寄存器内容并往前跳转是实现条件的关键，往回跳转是循环的关键，在一个线性结构中实现条件和循环真不容易。","like_count":7,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483714,"discussion_content":"👍，这个描述和比喻也很恰当。其实计算机是一个依靠非常简单的基础电路组建起来的一个极其精巧的设备。就好像用砖头砌起了米兰大教堂一样。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581839562,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154737,"user_name":"大马猴","can_delete":false,"product_type":"c1","uid":1012528,"ip_address":"","ucode":"E3482CBDF43CDE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/73/30/fd602742.jpg","comment_is_top":false,"comment_ctime":1574526419,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"31639297491","product_id":100026001,"comment_content":" [rbp-0x4] 则是一个寄存器的地址，这里讲错了，rbp寄存器保存的是栈基址","like_count":7,"discussions":[{"author":{"id":2887982,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/11/2e/acf48f1e.jpg","nickname":"Map1e","note":"","ucode":"96FF2ECE391FD7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545033,"discussion_content":"确实啊 这些变量是被系统开辟到了栈空间 而rbp是栈基址寄存器--指向栈底，int 类型正好是四个字节 所以就是rbp-0x4","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1641809850,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381404,"discussion_content":"这里的确不太准确，rbp是寄存器，里面存放了栈帧指针，[rbp-0x4] 是在这个指针加上偏移量后的内存地址","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1625042389,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1136480,"avatar":"https://static001.geekbang.org/account/avatar/00/11/57/60/65b006a6.jpg","nickname":"Chief","note":"","ucode":"CAFB24CBA215A8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582075,"discussion_content":"栈底寄存器","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659179561,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125345,"user_name":"晴天~","can_delete":false,"product_type":"c1","uid":1631066,"ip_address":"","ucode":"352D6EB12DCB09","user_header":"https://static001.geekbang.org/account/avatar/00/18/e3/5a/a641388c.jpg","comment_is_top":false,"comment_ctime":1566172016,"is_pvip":false,"replies":[{"id":"52655","content":"晴天~同学<br><br>你好，为什么不能只有一个呢？x86里一个CPU只有一个条件吗寄存器","user_name":"作者回复","comment_id":125345,"uid":"1053568","ip_address":"","utype":1,"ctime":1569661555,"user_name_real":"徐文浩"}],"discussion_count":1,"race_medal":0,"score":"23041008496","product_id":100026001,"comment_content":"徐老师好，有一个问题想请教一下：<br>执行cmp这样的指令会改变条件码寄存器部分状态码的值，我想请教一下，cpu的条件码寄存器肯定不止一个，后面的jne，jle需要判断条件码的值执行跳转，是不是有一个机制来保证jne这样的指令找到正确的条件码寄存器呢？","like_count":5,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463537,"discussion_content":"晴天~同学\n\n你好，为什么不能只有一个呢？x86里一个CPU只有一个条件吗寄存器","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569661555,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97894,"user_name":"-W.LI-","can_delete":false,"product_type":"c1","uid":1210699,"ip_address":"","ucode":"3556786538664F","user_header":"https://static001.geekbang.org/account/avatar/00/12/79/4b/740f91ca.jpg","comment_is_top":false,"comment_ctime":1558835427,"is_pvip":false,"replies":[{"id":"35512","content":"可以写一些带switch...case的程序试一下，你会发现编译器是很聪明的","user_name":"作者回复","comment_id":97894,"uid":"1053568","ip_address":"","utype":1,"ctime":1559129416,"user_name_real":"徐文浩"}],"discussion_count":1,"race_medal":0,"score":"18738704611","product_id":100026001,"comment_content":"switch case 我猜是用jump if equal写的，所有判断顺序写一起，所有处理逻辑顺序写一起，满足条件就跳到对应的处理逻辑，遇见break就跳转到switch块的外面，如果没有就会顺序执行剩下的处理逻辑(case穿透）。","like_count":4,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451463,"discussion_content":"可以写一些带switch...case的程序试一下，你会发现编译器是很聪明的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559129416,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97526,"user_name":"HopeYoung.Lee","can_delete":false,"product_type":"c1","uid":1038540,"ip_address":"","ucode":"E7CB076A44BEF8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d8/cc/d104eabd.jpg","comment_is_top":false,"comment_ctime":1558688424,"is_pvip":false,"replies":[{"id":"35480","content":"可以安装WSL和GCC来跑对应的Linux命令和程序。","user_name":"作者回复","comment_id":97526,"uid":"1053568","ip_address":"","utype":1,"ctime":1559123600,"user_name_real":"徐文浩"}],"discussion_count":2,"race_medal":0,"score":"18738557608","product_id":100026001,"comment_content":"请问，Windows命令行可以编写C语言，然后查看汇编代码么？要怎么操作呢？Linux系统我也不会，尴尬。","like_count":4,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451312,"discussion_content":"可以安装WSL和GCC来跑对应的Linux命令和程序。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1559123600,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2628460,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK9Yvy5STDw874VEEuPehIcONR9kEq7knIicUNuINU0ovf2ViabhFqiabZiaoXC5FqL89YDCxp3tBnFzA/132","nickname":"Geek_5b2ab1","note":"","ucode":"C1AF841A9F0B6C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545542,"discussion_content":"需要Windows10 或以上，最好装wsl2, 比wsl1 功能更强大。https://docs.microsoft.com/zh-cn/windows/wsl/install","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641993117,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97305,"user_name":"hello","can_delete":false,"product_type":"c1","uid":1103163,"ip_address":"","ucode":"6E24DDD2981001","user_header":"","comment_is_top":false,"comment_ctime":1558651875,"is_pvip":false,"replies":[{"id":"35468","content":"hello同学你好，<br><br>上一讲里面，我们是拿MIPS这样比较简单的指令集来举例子的，里面的指令都是等长的。<br><br>这一讲里面，实际是在一台Intel CPU的Linux机器上的程序，Intel的指令集里面的每条指令的长度并不是都相等的。","user_name":"作者回复","comment_id":97305,"uid":"1053568","ip_address":"","utype":1,"ctime":1559122483,"user_name_real":"徐文浩"}],"discussion_count":1,"race_medal":0,"score":"18738521059","product_id":100026001,"comment_content":"老师，您上一讲讲道指令都是32位，为什么这次jne 指令是16位，mov指令是56位？","like_count":4,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451219,"discussion_content":"hello同学你好，\n\n上一讲里面，我们是拿MIPS这样比较简单的指令集来举例子的，里面的指令都是等长的。\n\n这一讲里面，实际是在一台Intel CPU的Linux机器上的程序，Intel的指令集里面的每条指令的长度并不是都相等的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559122483,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94798,"user_name":"越努力，越幸运","can_delete":false,"product_type":"c1","uid":1452825,"ip_address":"","ucode":"57D928A855513A","user_header":"https://static001.geekbang.org/account/avatar/00/16/2b/19/bc9d2a33.jpg","comment_is_top":false,"comment_ctime":1557899353,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"18737768537","product_id":100026001,"comment_content":"`而 [rbp-0x4] 则是一个寄存器的地址`  这个不应该是栈地址吗，rbp是栈基址，rbp - 0x4是第一个local var的内存地址","like_count":4,"discussions":[{"author":{"id":1748911,"avatar":"","nickname":"Geek_aa8017","note":"","ucode":"286195887103C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":114936,"discussion_content":"加了括号应该就表示是对内存寻址","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1577978919,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1012528,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/73/30/fd602742.jpg","nickname":"大马猴","note":"","ucode":"E3482CBDF43CDE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":56932,"discussion_content":"只有你指出来了，老师还没解释，唉","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1574526076,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381405,"discussion_content":"这里的确不太准确，rbp是寄存器，里面存放了栈帧指针，[rbp-0x4] 是在这个指针加上偏移量后的内存地址","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625042400,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1400806,"avatar":"https://static001.geekbang.org/account/avatar/00/15/5f/e6/19778e70.jpg","nickname":"Mr.埃克斯","note":"","ucode":"855BE5DFD2BB0B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292472,"discussion_content":"<mem>\tA memory address (e.g., [eax], [var + 4], or dword ptr [eax+ebx])\n老师应该是口误了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595238956,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1748911,"avatar":"","nickname":"Geek_aa8017","note":"","ucode":"286195887103C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":114929,"discussion_content":"对这里同样有疑问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577978871,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92552,"user_name":"北北、Pepper","can_delete":false,"product_type":"c1","uid":1259513,"ip_address":"","ucode":"46A74C52E68BC1","user_header":"https://static001.geekbang.org/account/avatar/00/13/37/f9/f4428000.jpg","comment_is_top":false,"comment_ctime":1557300382,"is_pvip":false,"replies":[{"id":"33361","content":"👍加油","user_name":"作者回复","comment_id":92552,"uid":"1053568","ip_address":"","utype":1,"ctime":1557469989,"user_name_real":"徐文浩"}],"discussion_count":1,"race_medal":0,"score":"18737169566","product_id":100026001,"comment_content":"今年大四，正在实习。在实际工作慢慢发现自己基础知识的薄弱，所以现在也是抓紧时间在补习这些知识。听老师这一讲，又想起了汇编的知识，比起以前，又有了更深的理解。十分期待老师更新专栏~","like_count":4,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449316,"discussion_content":"👍加油","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557469989,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92469,"user_name":"起飞的鸭子","can_delete":false,"product_type":"c1","uid":1093056,"ip_address":"","ucode":"F04049210F7DF7","user_header":"https://static001.geekbang.org/account/avatar/00/10/ad/c0/ea2b3a14.jpg","comment_is_top":false,"comment_ctime":1557278775,"is_pvip":false,"replies":[{"id":"33381","content":"sunyunjian同学，千万不要气馁，可以顺序多看几遍，学习不是个着急的事儿。","user_name":"作者回复","comment_id":92469,"uid":"1053568","ip_address":"","utype":1,"ctime":1557472162,"user_name_real":"徐文浩"}],"discussion_count":1,"race_medal":0,"score":"18737147959","product_id":100026001,"comment_content":"看这些都有些<br>吃力我是没救了","like_count":4,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449273,"discussion_content":"sunyunjian同学，千万不要气馁，可以顺序多看几遍，学习不是个着急的事儿。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557472162,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235903,"user_name":"Mr.埃克斯","can_delete":false,"product_type":"c1","uid":1400806,"ip_address":"","ucode":"855BE5DFD2BB0B","user_header":"https://static001.geekbang.org/account/avatar/00/15/5f/e6/19778e70.jpg","comment_is_top":false,"comment_ctime":1595238931,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"14480140819","product_id":100026001,"comment_content":"&quot;cmp 指令比较了前后两个操作数的值，这里的 DWORD PTR 代表操作的数据类型是 32 位的整数，而[rbp-0x4]则是一个寄存器的地址。所以，第一个操作数就是从寄存器里拿到的变量 r 的值。&quot;<br>老师，这里的[rbp-0x4]应该是表示一个内存地址。<br>https:&#47;&#47;www.cs.virginia.edu&#47;~evans&#47;cs216&#47;guides&#47;x86.html<br>&lt;mem&gt;\tA memory address (e.g., [eax], [var + 4], or dword ptr [eax+ebx])<br>","like_count":3},{"had_liked":false,"id":99098,"user_name":"恩佐","can_delete":false,"product_type":"c1","uid":1509370,"ip_address":"","ucode":"955C45137073EE","user_header":"https://static001.geekbang.org/account/avatar/00/17/07/fa/62186c97.jpg","comment_is_top":false,"comment_ctime":1559142007,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14444043895","product_id":100026001,"comment_content":"老师你的r==0，ZF=1讲错了吧。<br>到底是ZF=1是True，还是ZF=0是True。<br>前面说ZF=1是True<br>后面却ZF=1是False，跳转到了4a行","like_count":3},{"had_liked":false,"id":95128,"user_name":"活的潇洒","can_delete":false,"product_type":"c1","uid":1238830,"ip_address":"","ucode":"666C30CA894754","user_header":"https://static001.geekbang.org/account/avatar/00/12/e7/2e/1522a7d6.jpg","comment_is_top":false,"comment_ctime":1557972034,"is_pvip":false,"replies":[{"id":"34162","content":"👍感谢分享给大家","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1558093425,"ip_address":"","comment_id":95128,"utype":1}],"discussion_count":3,"race_medal":0,"score":"14442873922","product_id":100026001,"comment_content":"反复阅读、并实践操作、我用的是CentOS实践过程中遇到一些问题我都记录下来了，具体详见我的博客<br>https:&#47;&#47;www.cnblogs.com&#47;luoahong&#47;p&#47;10862085.html","like_count":3,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450339,"discussion_content":"👍感谢分享给大家","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558093425,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1675966,"avatar":"https://static001.geekbang.org/account/avatar/00/19/92/be/8de4e1fe.jpg","nickname":"kaizen","note":"","ucode":"313EEA97AEC7C3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":222386,"discussion_content":"抄袭","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586140767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1400806,"avatar":"https://static001.geekbang.org/account/avatar/00/15/5f/e6/19778e70.jpg","nickname":"Mr.埃克斯","note":"","ucode":"855BE5DFD2BB0B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":131097,"discussion_content":"使用的图应该标注一下引入出处吧，尊重作者。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578826316,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92498,"user_name":"　　　　　　　鸟人","can_delete":false,"product_type":"c1","uid":1035165,"ip_address":"","ucode":"E504B22F336035","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cb/9d/2bc85843.jpg","comment_is_top":false,"comment_ctime":1557284479,"is_pvip":false,"replies":[{"id":"33370","content":"这一节这里用的是Intel X86体系结构的汇编。对应的代码你可以直接复制到Linux下面通过同样的gcc和objdump命令dump出来看。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1557471421,"ip_address":"","comment_id":92498,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14442186367","product_id":100026001,"comment_content":"大家不要把“汇编语言”当成是像C一样的一门统一编程语言。<br><br>请问这节转换的汇编是哪里的汇编？","like_count":3,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449286,"discussion_content":"这一节这里用的是Intel X86体系结构的汇编。对应的代码你可以直接复制到Linux下面通过同样的gcc和objdump命令dump出来看。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557471421,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178646,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1581770001,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10171704593","product_id":100026001,"comment_content":"大学学过汇编语言，阅读本章，又回忆起来了。","like_count":2},{"had_liked":false,"id":166352,"user_name":"陌.寒哲","can_delete":false,"product_type":"c1","uid":1147711,"ip_address":"","ucode":"B7079FF211D712","user_header":"https://static001.geekbang.org/account/avatar/00/11/83/3f/bc2ea80d.jpg","comment_is_top":false,"comment_ctime":1577438411,"is_pvip":false,"replies":[{"id":"68651","content":"陌.寒哲同学，<br><br>你好，PC寄存器在x86里就是CS:IP寄存器了。CS是段地址，IP相当于一个偏移量，两个的组合指向下一条要执行的指令。<br><br>PC寄存器是所有现代计算机实现的一个通用概念，CS:IP是x86对这个概念的一个具体实现。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1581233799,"ip_address":"","comment_id":166352,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10167373003","product_id":100026001,"comment_content":"这里的PC寄存器就是x86里的IP寄存器吗？这个寄存器和CS寄存器是什么关系呢？对这个PC寄存器的名称有些疑惑，它到底是一个专门的寄存器，还是就是指IP寄存器，为什么会有两个名字，有人知道吗？","like_count":2,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479490,"discussion_content":"陌.寒哲同学，\n\n你好，PC寄存器在x86里就是CS:IP寄存器了。CS是段地址，IP相当于一个偏移量，两个的组合指向下一条要执行的指令。\n\nPC寄存器是所有现代计算机实现的一个通用概念，CS:IP是x86对这个概念的一个具体实现。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581233799,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":132981,"user_name":"疯狂土豆","can_delete":false,"product_type":"c1","uid":1273966,"ip_address":"","ucode":"16ADC351B57151","user_header":"https://static001.geekbang.org/account/avatar/00/13/70/6e/27f43b70.jpg","comment_is_top":false,"comment_ctime":1568289710,"is_pvip":false,"replies":[{"id":"50995","content":"如果主要的工作和目标是在应用层，而不是编译器、硬件这样的底层，我觉得对汇编有个简单的了解就够了。<br><br>大部分学校的微机原理类型的课程里面都会有汇编的入门。大作业通常是通过汇编写个加法器之类课程。<br><br>能理解到这个程度对于做应用层开发了解底层原理应该足够了。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1568428798,"ip_address":"","comment_id":132981,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10158224302","product_id":100026001,"comment_content":"非计算机用专业的，感觉整体都可以看懂和理解，就是涉及到汇编语言的就吃力了，是不是应该学点汇编啊？","like_count":2,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467200,"discussion_content":"如果主要的工作和目标是在应用层，而不是编译器、硬件这样的底层，我觉得对汇编有个简单的了解就够了。\n\n大部分学校的微机原理类型的课程里面都会有汇编的入门。大作业通常是通过汇编写个加法器之类课程。\n\n能理解到这个程度对于做应用层开发了解底层原理应该足够了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568428798,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97527,"user_name":"HopeYoung.Lee","can_delete":false,"product_type":"c1","uid":1038540,"ip_address":"","ucode":"E7CB076A44BEF8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d8/cc/d104eabd.jpg","comment_is_top":false,"comment_ctime":1558688484,"is_pvip":false,"replies":[{"id":"35479","content":"HopeYoung.Lee同学你好，<br><br>windows下可以安装wsl来安装和运行gcc，我本人对于Windows程序开发有很多年没有碰了，就不太适合具体详细介绍以免误人子弟了。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1559123573,"ip_address":"","comment_id":97527,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10148623076","product_id":100026001,"comment_content":"你可以试着写一个简单的 C 语言程序，编译成汇编代码看一看。这个要怎么操作呢？我就用windows","like_count":2,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451313,"discussion_content":"HopeYoung.Lee同学你好，\n\nwindows下可以安装wsl来安装和运行gcc，我本人对于Windows程序开发有很多年没有碰了，就不太适合具体详细介绍以免误人子弟了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559123573,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1235320,"avatar":"https://static001.geekbang.org/account/avatar/00/12/d9/78/8a328299.jpg","nickname":"佳佳大魔王","note":"","ucode":"D5214903D85A0F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295698,"discussion_content":"也可以用cygwin，直接下载一个就好，里面有gcc 和objdump","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596291609,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93927,"user_name":"aiter","can_delete":false,"product_type":"c1","uid":1261780,"ip_address":"","ucode":"8B1D45C2D72B1D","user_header":"https://static001.geekbang.org/account/avatar/00/13/40/d4/9aabdac0.jpg","comment_is_top":false,"comment_ctime":1557670322,"is_pvip":false,"replies":[{"id":"35534","content":"cmp指令执行完成之后，会更新对应的标志位<br>而jle指令读取特定的标志位来决定是否跳转<br>使用什么指令是由编译器决定的<br>不同的跳转指令有时候可以实现相同的功能<br>不同的跳转指令读取的标志位可以参见<br>http:&#47;&#47;marin.jb.free.fr&#47;jumps&#47;","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1559131207,"ip_address":"","comment_id":93927,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10147604914","product_id":100026001,"comment_content":"徐老师好～<br>C语言我不会，。，努力看了半天，算是懂了大部分，但是for循环那里还是有点问题～汇编语言里，jmp 1e 之后，应该是做比较cmp，但是为什么不是0和3比较，而是和16进制的2（0x2）比较？<br>————-<br>因为后面用的jle(jump if less or equal) &lt;=2.如果是使用jl(jump if less) &lt;3.应该是编译器的优化行为？可以自己写汇编代码，使用jl 0x3试试效果是否一样<br>作者回复: aiter同学谢谢。我回复了，不过你这里的理解不太对，jle指令并不是和2做比较，而是判断标志位的，jle 和 jl 用的是不同的标志位，具体可以看看这个reference http:&#47;&#47;www.unixwiz.net&#47;techtips&#47;x86-jumps.html<br>———-<br>谢谢老师，我再学习一下。我上面想说的是cmpl指令后面的数字，比如把代码改为：for(i =0;i&lt;50;i++),objdump的汇编就是cmpl $0x31,-0x8(rbp). 0x31=49。但是这个cmpl比较指令，和后面的jle这个是什么关系（比如什么情况才会使用jl），再学习理解一下","like_count":2,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449830,"discussion_content":"cmp指令执行完成之后，会更新对应的标志位\n而jle指令读取特定的标志位来决定是否跳转\n使用什么指令是由编译器决定的\n不同的跳转指令有时候可以实现相同的功能\n不同的跳转指令读取的标志位可以参见\nhttp://marin.jb.free.fr/jumps/","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559131207,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93284,"user_name":"二进制","can_delete":false,"product_type":"c1","uid":1005170,"ip_address":"","ucode":"E3F48DBBDA62D2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/72/6c5c9a7b.jpg","comment_is_top":false,"comment_ctime":1557450081,"is_pvip":false,"replies":[{"id":"33349","content":"👍","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1557468497,"ip_address":"","comment_id":93284,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10147384673","product_id":100026001,"comment_content":"认真学一遍汇编课程，你会觉得这文章很简单。","like_count":2,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449561,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557468497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92726,"user_name":"Z.Clark","can_delete":false,"product_type":"c1","uid":1476747,"ip_address":"","ucode":"DE5B782EBB8DC0","user_header":"https://static001.geekbang.org/account/avatar/00/16/88/8b/12fb6161.jpg","comment_is_top":false,"comment_ctime":1557317324,"is_pvip":false,"replies":[{"id":"33358","content":"👍谢谢支持","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1557469728,"ip_address":"","comment_id":92726,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10147251916","product_id":100026001,"comment_content":"老师这几节的安排很合理，循序渐进，虽然没学过汇编，但听完之后也能观其大略，拓展知识面，也是清爽的八达鸟!","like_count":2,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449364,"discussion_content":"👍谢谢支持","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557469728,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92468,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1557278562,"is_pvip":true,"replies":[{"id":"33363","content":"一步同学你好，差不多，但是不完全一样。二进制可执行文件里面除了指令信息之外还有很多别的信息，可以参考稍后的静态链接那一讲，会更具体地讲解我们的二进制可执行文件里面有些什么内容。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1557470075,"ip_address":"","comment_id":92468,"utype":1}],"discussion_count":1,"race_medal":1,"score":"10147213154","product_id":100026001,"comment_content":"老师，我们常说的二进制执行文件，是指高级语言已经编译成一条条cpu 指令组成的文件吗？","like_count":2,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449272,"discussion_content":"一步同学你好，差不多，但是不完全一样。二进制可执行文件里面除了指令信息之外还有很多别的信息，可以参考稍后的静态链接那一讲，会更具体地讲解我们的二进制可执行文件里面有些什么内容。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557470075,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353393,"user_name":"X","can_delete":false,"product_type":"c1","uid":1581509,"ip_address":"上海","ucode":"BE05C1D25CE313","user_header":"https://static001.geekbang.org/account/avatar/00/18/21/c5/024e1ef1.jpg","comment_is_top":false,"comment_ctime":1659419631,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5954386927","product_id":100026001,"comment_content":"原来高级语言不推荐的goto正是指令层面实现if、for、while的关键。<br>goto的实现依赖于：pc寄存器（存储下一条指令存储的位置）、指令寄存器（存储当前要执行的指令）、条件码寄存器（存储条件是否符合的寄存器）","like_count":1},{"had_liked":false,"id":230561,"user_name":"Fan","can_delete":false,"product_type":"c1","uid":1115232,"ip_address":"","ucode":"3BF28670FD9407","user_header":"https://static001.geekbang.org/account/avatar/00/11/04/60/64d166b6.jpg","comment_is_top":false,"comment_ctime":1593418585,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5888385881","product_id":100026001,"comment_content":"推荐北京大学的《计算机组成》视频课程。看完后对这几讲理解得更深些。","like_count":1},{"had_liked":false,"id":229647,"user_name":"Edward Lee","can_delete":false,"product_type":"c1","uid":1228518,"ip_address":"","ucode":"156223F1D7E94A","user_header":"https://static001.geekbang.org/account/avatar/00/12/be/e6/7808520d.jpg","comment_is_top":false,"comment_ctime":1593084658,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5888051954","product_id":100026001,"comment_content":"推荐大家玩一款游戏，与汇编的思维相似，所以，我学习这里的汇编指令的时候比较轻松愉快。<br><br>游戏名为：《Human Resource Machine》<br><br><br><br><br><br>","like_count":1},{"had_liked":false,"id":201920,"user_name":"King-ZJ","can_delete":false,"product_type":"c1","uid":1915385,"ip_address":"","ucode":"7448A4BBB5A118","user_header":"https://static001.geekbang.org/account/avatar/00/1d/39/f9/b946719a.jpg","comment_is_top":false,"comment_ctime":1585877136,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5880844432","product_id":100026001,"comment_content":"对于代码这个层面，目前的自己从思想到行动都满满是拒绝的，没有消除这种知识点很难的观念，继而让自己在学习的时候都是畏难心理和行动的迟缓。","like_count":1},{"had_liked":false,"id":200897,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1585670080,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5880637376","product_id":100026001,"comment_content":"我编译出来的结果和老师的有出入，在24行还有一个a += i，如下：<br>另外为什么一个for编译后会有两个for的结果？<br>[computer-composition]# cat test2.c<br>int main()<br>{<br>    int a = 0;<br>    for (int i = 0; i &lt; 3; i++)<br>    {<br>        a += i;<br>    }<br>}<br>[computer-composition]# objdump -d -M intel -S test2.o<br><br>test2.o:     file format elf64-x86-64<br><br><br>Disassembly of section .text:<br><br>0000000000000000 &lt;main&gt;:<br>int main()<br>{<br>   0:   55                      push   rbp<br>   1:   48 89 e5                mov    rbp,rsp<br>    int a = 0;<br>   4:   c7 45 fc 00 00 00 00    mov    DWORD PTR [rbp-0x4],0x0<br>    for (int i = 0; i &lt; 3; i++)<br>   b:   c7 45 f8 00 00 00 00    mov    DWORD PTR [rbp-0x8],0x0<br>  12:   eb 0a                   jmp    1e &lt;main+0x1e&gt;<br>    {<br>        a += i;<br>  14:   8b 45 f8                mov    eax,DWORD PTR [rbp-0x8]<br>  17:   01 45 fc                add    DWORD PTR [rbp-0x4],eax<br>int main()<br>{<br>    int a = 0;<br>    for (int i = 0; i &lt; 3; i++)<br>  1a:   83 45 f8 01             add    DWORD PTR [rbp-0x8],0x1<br>  1e:   83 7d f8 02             cmp    DWORD PTR [rbp-0x8],0x2<br>  22:   7e f0                   jle    14 &lt;main+0x14&gt;<br>  24:   b8 00 00 00 00          mov    eax,0x0<br>    {<br>        a += i;<br>    }<br>}<br>  29:   5d                      pop    rbp<br>  2a:   c3                      ret    ","like_count":1},{"had_liked":false,"id":111075,"user_name":"Jaising","can_delete":false,"product_type":"c1","uid":1037630,"ip_address":"","ucode":"F68830B7B90F96","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d5/3e/7f3a9c2b.jpg","comment_is_top":false,"comment_ctime":1562466445,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5857433741","product_id":100026001,"comment_content":"徐老师，用if else和goto实现循环的汇编代码有误吧，内存地址1a的汇编代码应该是1a add DWORD PTR [rbp-0x8], 0x1","like_count":1},{"had_liked":false,"id":96899,"user_name":"半斤八两","can_delete":false,"product_type":"c1","uid":1067622,"ip_address":"","ucode":"973F074F0E899E","user_header":"https://static001.geekbang.org/account/avatar/00/10/4a/66/d3d19642.jpg","comment_is_top":false,"comment_ctime":1558531654,"is_pvip":false,"replies":[{"id":"35514","content":"ZF=1，代表前面的equals比较是True<br>JNE是在ZF=0的时候跳转<br>下面图里面的文字写得有点不够清楚，我改一下<br><br>不同标志位和指令跳转的逻辑，可以参见这个表<br>http:&#47;&#47;marin.jb.free.fr&#47;jumps&#47;","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1559129862,"ip_address":"","comment_id":96899,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5853498950","product_id":100026001,"comment_content":"老师您那个图上写着ZF为1跳转到4a执行，不是应该ZF为0才跳转吗，还是我哪里理解错了","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451054,"discussion_content":"ZF=1，代表前面的equals比较是True\nJNE是在ZF=0的时候跳转\n下面图里面的文字写得有点不够清楚，我改一下\n\n不同标志位和指令跳转的逻辑，可以参见这个表\nhttp://marin.jb.free.fr/jumps/","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559129862,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96719,"user_name":"大熊","can_delete":false,"product_type":"c1","uid":1008951,"ip_address":"","ucode":"D7858E9DA87B5E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/65/37/56c492d3.jpg","comment_is_top":false,"comment_ctime":1558492649,"is_pvip":false,"replies":[{"id":"35517","content":"👍自己动手，丰衣足食","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1559129960,"ip_address":"","comment_id":96719,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5853459945","product_id":100026001,"comment_content":"执行switch发现，如果条件比较少，比如3个以内的情况下，反汇编出来的结果和if...else...没有什么差别；<br><br>-----------testswitch1.c<br>#include &lt;stdio.h&gt;<br><br>int main()<br>{<br>    int m = 5;<br>    int a = 0;<br><br>    switch (m)<br>    {<br>    case 5:<br>        a = 5;<br>        break;<br>    case 3:<br>        a = 3;<br>        break;<br>    default:<br>        a = 9;<br>    }<br>    return 0;<br>}<br>-----------testswitch1.c<br><br>上面的代码进行的反汇编：<br><br>---------------testswitch1<br>#include &lt;stdio.h&gt;<br><br>int main(int argc, char const *argv[])<br>{<br>   0:   55                      push   rbp    # 保存现场<br>   1:   48 89 e5                mov    rbp,rsp<br>   4:   89 7d ec                mov    DWORD PTR [rbp-0x14],edi<br>   7:   48 89 75 e0             mov    QWORD PTR [rbp-0x20],rsi<br>    int m = 5;<br>   b:   c7 45 f8 05 00 00 00    mov    DWORD PTR [rbp-0x8],0x5     # 把5，放在地址[rbp-0x8]<br>    int a = 0;<br>  12:   c7 45 fc 00 00 00 00    mov    DWORD PTR [rbp-0x4],0x0    # 把0，放在地址[rbp-0x4]<br><br>    switch (m)<br>  19:   8b 45 f8                mov    eax,DWORD PTR [rbp-0x8]    # 把5，放入eax<br>  1c:   83 f8 03                cmp    eax,0x3    # eax(即5)和3进行比较<br>  1f:   74 0e                   je     2f &lt;main+0x2f&gt;    # 如果相等，就跳转到2f执行a = 3<br>  21:   83 f8 05                cmp    eax,0x5    # eax(即5)和5进行比较<br>  24:   75 12                   jne    38 &lt;main+0x38&gt;    # 如果不等，就跳转到38(即default)执行a = 9<br>&#47;*代码省略*&#47;<br>---------------testswitch1<br>另外一种情况，单起一条评论","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450984,"discussion_content":"👍自己动手，丰衣足食","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559129960,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95461,"user_name":"cw","can_delete":false,"product_type":"c1","uid":1264296,"ip_address":"","ucode":"82A6B50462F9F9","user_header":"https://static001.geekbang.org/account/avatar/00/13/4a/a8/b7e36dd2.jpg","comment_is_top":false,"comment_ctime":1558058938,"is_pvip":false,"replies":[{"id":"34185","content":"👍正确","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1558098368,"ip_address":"","comment_id":95461,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5853026234","product_id":100026001,"comment_content":"捋一捋，<br>我们通过PC寄存器找到对应具体执行的字节码指令，然后把字节码指令加载到指令寄存器中，<br>如果有if else这种条件码，那么是基于条件码寄存器中的数据 jkl指令转向到对应的PC寄存器 内部地址。","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450466,"discussion_content":"👍正确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558098368,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93327,"user_name":"喜欢吃鱼","can_delete":false,"product_type":"c1","uid":1250205,"ip_address":"","ucode":"02F41572F53E3C","user_header":"https://static001.geekbang.org/account/avatar/00/13/13/9d/d91dc762.jpg","comment_is_top":false,"comment_ctime":1557452705,"is_pvip":false,"replies":[{"id":"33401","content":"是得，笔误了，但是不是后面JNE写反了，而是前面置标志位写反了。<br>应该是 “ 如果比较的结果是 True，也就是 r == 0”，才会置 ZF = 1, JNE还是按照 ZF = 0 才会跳转。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1557476129,"ip_address":"","comment_id":93327,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5852420001","product_id":100026001,"comment_content":"老师，您上面有个地方是不是笔误了？<br>对于r==0的条件判断，如果比较的结果是False,即r!=0,就把零标志条件码（ZF）设置为1。但是您下面说cmp指令执行完后，开始执行下一条指令jne会检查零标志位，如果为0，则跳转到操作数4a的位置。前面不是在r!=0的时候把ZF置为1了吗？所以这里应该是检查到零标志位1才跳转到4a的位置吧，是我理解错了吗？<br>","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449586,"discussion_content":"是得，笔误了，但是不是后面JNE写反了，而是前面置标志位写反了。\n应该是 “ 如果比较的结果是 True，也就是 r == 0”，才会置 ZF = 1, JNE还是按照 ZF = 0 才会跳转。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557476129,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92796,"user_name":"Geek","can_delete":false,"product_type":"c1","uid":1358337,"ip_address":"","ucode":"276E2950D31AFB","user_header":"https://static001.geekbang.org/account/avatar/00/14/ba/01/c5161563.jpg","comment_is_top":false,"comment_ctime":1557326508,"is_pvip":false,"replies":[{"id":"33357","content":"因为 i &lt; 3 对于一个整数来说等价于 i &lt;= 2 或者说 i - 2 &gt;= 0。如果我没有记错的话，CMP指令设置FLAG是和 SUB 这个减法指令一致，根据加法后结果的符号来设置FLAG","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1557469718,"ip_address":"","comment_id":92796,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5852293804","product_id":100026001,"comment_content":"徐老师好～<br>C语言我不会，。，努力看了半天，算是懂了大部分，但是for循环那里还是有点问题～汇编语言里，jmp 1e 之后，应该是做比较cmp，但是为什么不是0和3比较，而是和16进制的2（0x2）比较？","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449385,"discussion_content":"因为 i &amp;lt; 3 对于一个整数来说等价于 i &amp;lt;= 2 或者说 i - 2 &amp;gt;= 0。如果我没有记错的话，CMP指令设置FLAG是和 SUB 这个减法指令一致，根据加法后结果的符号来设置FLAG","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557469718,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92532,"user_name":"斐波那契","can_delete":false,"product_type":"c1","uid":1464006,"ip_address":"","ucode":"85E2EBC01392B1","user_header":"https://static001.geekbang.org/account/avatar/00/16/56/c6/0b449bc6.jpg","comment_is_top":false,"comment_ctime":1557293552,"is_pvip":false,"replies":[{"id":"33388","content":"并不一样啊，可以自己编译一下看看对应的中间代码。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1557473640,"ip_address":"","comment_id":92532,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5852260848","product_id":100026001,"comment_content":"之前听说java的switch case编译出来的就相当于if else","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449306,"discussion_content":"并不一样啊，可以自己编译一下看看对应的中间代码。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557473640,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92478,"user_name":"Linuxer","can_delete":false,"product_type":"c1","uid":1153978,"ip_address":"","ucode":"272D9D8089C3D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/ba/333b59e5.jpg","comment_is_top":false,"comment_ctime":1557279856,"is_pvip":false,"replies":[{"id":"33402","content":"有的，就是rip。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1557476610,"ip_address":"","comment_id":92478,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5852247152","product_id":100026001,"comment_content":"请问gdb info reg 里面有当前指令寄存器吗？我印象中rip是PC","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449277,"discussion_content":"有的，就是rip。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557476610,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92470,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1557278828,"is_pvip":true,"replies":[{"id":"33399","content":"一步同学你好，可以把你编译出来的代码和大家分享一下。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1557475049,"ip_address":"","comment_id":92470,"utype":1}],"discussion_count":1,"race_medal":1,"score":"5852246124","product_id":100026001,"comment_content":"编译了一下，switch...case是使用je指令跳转的","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449274,"discussion_content":"一步同学你好，可以把你编译出来的代码和大家分享一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557475049,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92465,"user_name":"ezra.xu","can_delete":false,"product_type":"c1","uid":1014005,"ip_address":"","ucode":"6C3E11889BC6AB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/78/f5/ae200a94.jpg","comment_is_top":false,"comment_ctime":1557278147,"is_pvip":false,"replies":[{"id":"33389","content":"Sentry同学你好，可以动手试试写一个10来行的C语言程序试试，然后和大家分享一下。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1557473679,"ip_address":"","comment_id":92465,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5852245443","product_id":100026001,"comment_content":"switch语句性能要好点，貌似编译器对其进行了优化，编译产生的汇编代码和if else…的应该不一样。","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449271,"discussion_content":"Sentry同学你好，可以动手试试写一个10来行的C语言程序试试，然后和大家分享一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557473679,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92463,"user_name":"一塌糊涂","can_delete":false,"product_type":"c1","uid":1106566,"ip_address":"","ucode":"B55DAEFB98D83C","user_header":"https://static001.geekbang.org/account/avatar/00/10/e2/86/90041355.jpg","comment_is_top":false,"comment_ctime":1557278108,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5852245404","product_id":100026001,"comment_content":"通俗易懂","like_count":1},{"had_liked":false,"id":92442,"user_name":"null","can_delete":false,"product_type":"c1","uid":1274609,"ip_address":"","ucode":"F07FCCF6552F1C","user_header":"https://static001.geekbang.org/account/avatar/00/13/72/f1/3d7460bb.jpg","comment_is_top":false,"comment_ctime":1557275255,"is_pvip":false,"replies":[{"id":"33367","content":"null同学你好，条件码寄存器只存放判断结果，跳转地址是在jmp类指令里面指定的。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1557470939,"ip_address":"","comment_id":92442,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5852242551","product_id":100026001,"comment_content":"老师你好，条件码寄存器中存放的是判断结果0，1？还是跳转地址？还是两者都有呢？","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449259,"discussion_content":"null同学你好，条件码寄存器只存放判断结果，跳转地址是在jmp类指令里面指定的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557470939,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":359394,"user_name":"Nuvole Bianche","can_delete":false,"product_type":"c1","uid":2100301,"ip_address":"上海","ucode":"3C059A454C16C7","user_header":"https://static001.geekbang.org/account/avatar/00/20/0c/4d/90ab20d8.jpg","comment_is_top":false,"comment_ctime":1665493134,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1665493134","product_id":100026001,"comment_content":"原文：“往前跳转使得条件满足的时候，PC 寄存器会...” 这种写法真行，不觉得：“条件满足的时候，往前跳转，使得PC 寄存器会把.....” 这样更容易理解吗？","like_count":0},{"had_liked":false,"id":356857,"user_name":"Nuvole Bianche","can_delete":false,"product_type":"c1","uid":2100301,"ip_address":"上海","ucode":"3C059A454C16C7","user_header":"https://static001.geekbang.org/account/avatar/00/20/0c/4d/90ab20d8.jpg","comment_is_top":false,"comment_ctime":1662644300,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1662644300","product_id":100026001,"comment_content":"原文中：“所有的指令是变长的”，这句话就很奇异，也许原文是一个 主+系+表  结构，  但那个“变”字感觉有些别扭。如果将变 理解为动词，那个感觉..... ， 纵观前面已经阅读过的文章，有不少的这样蹩脚的表述方式。   “所有的指令是更长的”     “所有的指令更长了”    “所有的指令比MIPS指令集更长”  更容理解。 真不是在钻牛角尖。","like_count":0},{"had_liked":false,"id":356855,"user_name":"Nuvole Bianche","can_delete":false,"product_type":"c1","uid":2100301,"ip_address":"上海","ucode":"3C059A454C16C7","user_header":"https://static001.geekbang.org/account/avatar/00/20/0c/4d/90ab20d8.jpg","comment_is_top":false,"comment_ctime":1662643817,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1662643817","product_id":100026001,"comment_content":"原文：想要在硬件层面实现这个 goto 语句，除了本身需要用来保存下一条指令地址，以及当前正要执行指令的 PC 寄存器、指令寄存器外，我们只需要再增加一个条件码寄存器，来保留条件判断的状态。这样简简单单的三个寄存器，就可以实现条件判断和循环重复执行代码的功能。<br><br>感觉原文后面的这段话换个表示更明确一些：想要在硬件层面实现这个 goto 语句，除了PC 寄存器需要用来保存下一条指令地址以外，还有存放当前正在执行指令的指令寄存器，同时需要再增加一个条件码寄存器，来保留条件判断的状态。这三个寄存器结合就能实现条件判断和循环重复执行代码的功能。","like_count":0},{"had_liked":false,"id":356853,"user_name":"Nuvole Bianche","can_delete":false,"product_type":"c1","uid":2100301,"ip_address":"上海","ucode":"3C059A454C16C7","user_header":"https://static001.geekbang.org/account/avatar/00/20/0c/4d/90ab20d8.jpg","comment_is_top":false,"comment_ctime":1662643584,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1662643584","product_id":100026001,"comment_content":"原文最后：想要在硬件层面实现这个 goto 语句，除了本身需要用来保存下一条指令地址，以及当前正要执行指令的 PC 寄存器、指令寄存器外。其中的：“除了本身需要用来保存下一条指令地址”越读越觉得指代不明，“本身需要用来”。 我毫不怀疑老师的专业能力的强大，可同时在阅读文章时总觉得笔墨表述有时缺少主语，有时指代不明。  同时一定会坚持学习完本专栏的，感谢。","like_count":0},{"had_liked":false,"id":356778,"user_name":"穆柏","can_delete":false,"product_type":"c1","uid":3173613,"ip_address":"上海","ucode":"669CA6F2C28AD6","user_header":"https://static001.geekbang.org/account/avatar/00/30/6c/ed/83844d56.jpg","comment_is_top":false,"comment_ctime":1662570453,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1662570453","product_id":100026001,"comment_content":"呜呜讲的好好，美术仔也可以看个几成懂","like_count":0},{"had_liked":false,"id":352757,"user_name":"Mr.x","can_delete":false,"product_type":"c1","uid":1130726,"ip_address":"","ucode":"FDA144380DB9AE","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/e6/2cd0f52b.jpg","comment_is_top":false,"comment_ctime":1658914808,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1658914808","product_id":100026001,"comment_content":"PC寄存器存储的是“机器码”的指令地址A，谁来把这个指令地址A中的指令读取到指令寄存器？PC寄存器把指令A的长度加上，就获取到了新的指令地址，读取到新的指令放到指令寄存器，循环执行，这样理解对吗","like_count":0},{"had_liked":false,"id":352286,"user_name":"浮石沉木","can_delete":false,"product_type":"c1","uid":2223167,"ip_address":"","ucode":"D585768321B84A","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/mQddXC7nRiaKHTwdficicTB3bH0q5ic5UoSab51Omic7eyLBz0SNcvbLpQnNib7zP1yJFm7xxx4ia81iahfibRVnbTwHmhw/132","comment_is_top":false,"comment_ctime":1658500122,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1658500122","product_id":100026001,"comment_content":"有个问题，问啥会有寄存器，它为啥会产生","like_count":0},{"had_liked":false,"id":349060,"user_name":"一叉树","can_delete":false,"product_type":"c1","uid":1623117,"ip_address":"","ucode":"BFC984403ACD1F","user_header":"https://static001.geekbang.org/account/avatar/00/18/c4/4d/85014aab.jpg","comment_is_top":false,"comment_ctime":1655705509,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1655705509","product_id":100026001,"comment_content":"苹果 M1&#47;M2 芯片的电脑，运行 objdump -d -M intel -S test.o 跑不了的，可以使用 otool -xv test.o。虽然不像 objdump 那样一条条语句对应起来那么清晰，但也能显示汇编语句。","like_count":0},{"had_liked":false,"id":348822,"user_name":"_MISSYOURLOVE","can_delete":false,"product_type":"c1","uid":1516206,"ip_address":"","ucode":"6B595FD0B32D96","user_header":"https://static001.geekbang.org/account/avatar/00/17/22/ae/8a2945c8.jpg","comment_is_top":false,"comment_ctime":1655438616,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1655438616","product_id":100026001,"comment_content":"我也不是科班出身，做过多年开发以后来看这篇文章，发现自己居然看懂了，真是不可思议","like_count":0},{"had_liked":false,"id":348559,"user_name":"ahao","can_delete":false,"product_type":"c1","uid":2898682,"ip_address":"","ucode":"BA63BE2FD58AAB","user_header":"https://static001.geekbang.org/account/avatar/00/2c/3a/fa/31f5319d.jpg","comment_is_top":false,"comment_ctime":1655196552,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655196552","product_id":100026001,"comment_content":"老师，有个问题问您一下：“一个程序的一条条指令，在内存里面是连续保存的”，这句话的意思指的是PC寄存器中程序指令的内存地址连续保存呢还是说程序指令本身就连续保存在内存中呢？","like_count":0},{"had_liked":false,"id":347567,"user_name":"shuangman","can_delete":false,"product_type":"c1","uid":1378425,"ip_address":"","ucode":"DA8D5A92F8A1A4","user_header":"https://static001.geekbang.org/account/avatar/00/15/08/79/656d0f43.jpg","comment_is_top":false,"comment_ctime":1654159681,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1654159681","product_id":100026001,"comment_content":"原文引用：“ 第三个是条件码寄存器（Status Register），用里面的一个一个标记位（Flag），存放 CPU 进行算术或者逻辑计算的结果。”<br><br>其他书籍引用：“Flag的本意是“旗子”，这里引申为“标志”。一旦执行了算术运算、逻辑运算、比较运算等指令后，标志寄存器并不会存放运算结果的值，而是会把运算后的某些状态存储起来，例如运算结果是否为0、是否产生了负数、是否有溢出（Overflow）等。”<br><br>限于我的理解能力有限，本人觉得两句话表达的含义有所不同，请老师指教","like_count":0},{"had_liked":false,"id":329790,"user_name":"Geek_237cef","can_delete":false,"product_type":"c1","uid":2718584,"ip_address":"","ucode":"06D84FC4A4FF2A","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL9YwnzDGnOqlriaMaNXtY8R9b8QpgmnYP9xEBWWy1iaUwdTkiaNHPiajNlB7UKbXHovxkad0oRDEsCDg/132","comment_is_top":false,"comment_ctime":1641539893,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1641539893","product_id":100026001,"comment_content":"指令寄存器是用来存放当前需要执行的指令的，但是x86 指令是变长的，最长的单条指令是否会存在超过指令寄存器的长度的可能，64位处理器的指令寄存器是64bits吧？","like_count":0},{"had_liked":false,"id":320601,"user_name":"Geek_sayyi","can_delete":false,"product_type":"c1","uid":1680109,"ip_address":"","ucode":"EE4C19344D5D66","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM6KTE02vbwkJYSGVg82j1pY5oCVh9LIyuCVw56ib3xuQI4qtZ4j5KicINuLRLcpKic3b4TghqrR3eFGg/132","comment_is_top":false,"comment_ctime":1636418617,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636418617","product_id":100026001,"comment_content":"这一讲主要结合代码介绍了跳转的实现原理，指令寄存器从PC寄存器中获取下一步执行指令的位置，读取指令进行执行，指令寄存器会将条件判断结果放入条件码寄存器，指令寄存器执行跳转语句时，会从条件码寄存器中获取条件判断结果，并修改PC寄存器中下一条执行指令的位置，实现跳转","like_count":0},{"had_liked":false,"id":320206,"user_name":"HollyWong","can_delete":false,"product_type":"c1","uid":2837328,"ip_address":"","ucode":"03A66A2BCC0A58","user_header":"https://static001.geekbang.org/account/avatar/00/2b/4b/50/fae00aff.jpg","comment_is_top":false,"comment_ctime":1636123385,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636123385","product_id":100026001,"comment_content":"那个例子是ZF为1是的指令执行，PC寄存器值的各周期值错了，应该是3f,41,48,51.","like_count":0},{"had_liked":false,"id":315914,"user_name":"大风封","can_delete":false,"product_type":"c1","uid":1071070,"ip_address":"","ucode":"9F4A87C549B115","user_header":"https://static001.geekbang.org/account/avatar/00/10/57/de/4ea51085.jpg","comment_is_top":false,"comment_ctime":1634045258,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1634045258","product_id":100026001,"comment_content":"这句话:N 个触发器或者锁存器，就可以组成一个 N 位（Bit）的寄存器，能够保存 N 位的数据。比方说，我们用的 64 位 Intel 服务器，寄存器就是 64 位的。<br><br>64位的意思，是不是64bit呀，64位应该很大吧","like_count":0},{"had_liked":false,"id":313227,"user_name":"叶先生","can_delete":false,"product_type":"c1","uid":2765213,"ip_address":"","ucode":"2D048B3F574C79","user_header":"https://static001.geekbang.org/account/avatar/00/2a/31/9d/d94382c3.jpg","comment_is_top":false,"comment_ctime":1632317806,"is_pvip":true,"replies":[{"id":"113911","content":"国内教材一般都叫 条件码寄存器，也有叫状态寄存器的，是一个意思。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1633162794,"ip_address":"","comment_id":313227,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1632317806","product_id":100026001,"comment_content":"这里的条件寄存器（Status Register）是不是应该改为是状态寄存器更好？是存放CPU算术或逻辑运算之后CPU状态的寄存器，例如：是否有进位&#47;借位、结果为零、是否中断。","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527284,"discussion_content":"国内教材一般都叫 条件码寄存器，也有叫状态寄存器的，是一个意思。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633162794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":312605,"user_name":"ryanxw","can_delete":false,"product_type":"c1","uid":2119325,"ip_address":"","ucode":"0B91EAC8D06EED","user_header":"https://static001.geekbang.org/account/avatar/00/20/56/9d/4b2a7d29.jpg","comment_is_top":false,"comment_ctime":1631888730,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631888730","product_id":100026001,"comment_content":"    int a = 2;<br>   8:   c7 45 fc 02 00 00 00    mov    DWORD PTR [rbp-0x4],0x2<br>    switch(a)<br>   f:   83 7d fc 03             cmp    DWORD PTR [rbp-0x4],0x3<br>  13:   74 4c                   je     61 &lt;main+0x61&gt;<br>  15:   83 7d fc 03             cmp    DWORD PTR [rbp-0x4],0x3<br>  19:   7f 62                   jg     7d &lt;main+0x7d&gt;<br>  1b:   83 7d fc 01             cmp    DWORD PTR [rbp-0x4],0x1<br>  1f:   74 08                   je     29 &lt;main+0x29&gt;<br>  21:   83 7d fc 02             cmp    DWORD PTR [rbp-0x4],0x2<br>  25:   74 1e                   je     45 &lt;main+0x45&gt;<br><br>switch case 会先比较该值和case的情况，然后通过je来实现跳转到指定的地址输出","like_count":0},{"had_liked":false,"id":302116,"user_name":"国旗","can_delete":false,"product_type":"c1","uid":1346964,"ip_address":"","ucode":"09BA50A445F81D","user_header":"https://static001.geekbang.org/account/avatar/00/14/8d/94/a04cf407.jpg","comment_is_top":false,"comment_ctime":1626086663,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626086663","product_id":100026001,"comment_content":"开始看不太懂，把《计算机是怎么跑起来的》和《程序是怎么跑起来的》看完接受快了点","like_count":0},{"had_liked":false,"id":296736,"user_name":"依然didala","can_delete":false,"product_type":"c1","uid":1048487,"ip_address":"","ucode":"085ADABE1972F8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ff/a7/977e479c.jpg","comment_is_top":false,"comment_ctime":1623139104,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623139104","product_id":100026001,"comment_content":"老师，有几个问题想请教下。<br>1.cpu指令重排序会导致指令执行顺序会发生变化，那么文中所说的从pc寄存器中取址来顺序获取指令岂不是成顺序的了？<br>2.java中，JMM说是保证单线程情况下执行的效果和代码相同，意思就是指令再怎么重排都必须保证指令执行结果和代码一致，cpu应该是可以保证的吧，还需要JMM保证？","like_count":0},{"had_liked":false,"id":296296,"user_name":"杰良","can_delete":false,"product_type":"c1","uid":2567349,"ip_address":"","ucode":"5DC1D1C58A4731","user_header":"https://static001.geekbang.org/account/avatar/00/27/2c/b5/10141329.jpg","comment_is_top":false,"comment_ctime":1622888130,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622888130","product_id":100026001,"comment_content":"基于 PC 寄存器、指令寄存器、条件码寄存器等几个特殊的寄存器依次执行程序代码编译出来的对应指令序列，其中遇到 jmp、jle 等跳转指令的时候就不是一个接一个地挨个指令执行了。可以实现条件分支与循环执行。","like_count":0},{"had_liked":false,"id":295118,"user_name":"a仁A仁阿仁啊仁","can_delete":false,"product_type":"c1","uid":1547073,"ip_address":"","ucode":"0A52AE9396B8F6","user_header":"https://static001.geekbang.org/account/avatar/00/17/9b/41/0c62ae9a.jpg","comment_is_top":false,"comment_ctime":1622254632,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1622254632","product_id":100026001,"comment_content":"前端表示C忘完了…应该搞清楚到什么程度呢…","like_count":0},{"had_liked":false,"id":291074,"user_name":"友","can_delete":false,"product_type":"c1","uid":2536820,"ip_address":"","ucode":"972A4333A8B101","user_header":"https://static001.geekbang.org/account/avatar/00/26/b5/74/cd80b9f4.jpg","comment_is_top":false,"comment_ctime":1620008433,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620008433","product_id":100026001,"comment_content":"打卡打卡，作为go语言学习者  汇编准备去学习 plan9 ","like_count":0},{"had_liked":false,"id":285766,"user_name":"西电","can_delete":false,"product_type":"c1","uid":2063037,"ip_address":"","ucode":"95BD4CE9D93018","user_header":"https://static001.geekbang.org/account/avatar/00/1f/7a/bd/1f461acf.jpg","comment_is_top":false,"comment_ctime":1617006148,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617006148","product_id":100026001,"comment_content":"有个疑问请问老师：通过汇编代码，我注意到变量都是通过bp指针偏移存储在寄存器中的，但是寄存器是有限的，而我们定义的变量是无限的，请问寄存器不够用的情况怎么处理呢？","like_count":0},{"had_liked":false,"id":283452,"user_name":"树心","can_delete":false,"product_type":"c1","uid":1589523,"ip_address":"","ucode":"6C329F0FF798B9","user_header":"https://static001.geekbang.org/account/avatar/00/18/41/13/ab14ad25.jpg","comment_is_top":false,"comment_ctime":1615788622,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1615788622","product_id":100026001,"comment_content":"老师讲得很好，很清楚，第一遍也能看懂文章在说什么。","like_count":0},{"had_liked":false,"id":281154,"user_name":"张Dave","can_delete":false,"product_type":"c1","uid":2440338,"ip_address":"","ucode":"0E8B6FDEB7505B","user_header":"https://static001.geekbang.org/account/avatar/00/25/3c/92/81fa306d.jpg","comment_is_top":false,"comment_ctime":1614600952,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1614600952","product_id":100026001,"comment_content":"跟着的 jne 指令，是 jump if not equal 的意思，它会查看对应的零标志位。如果为 0，会跳转到后面跟着的操作数 4a 的位置。<br>这里不应该是，不为0，跳转吗？为什么是为0时跳转呢？<br>","like_count":0,"discussions":[{"author":{"id":2440338,"avatar":"https://static001.geekbang.org/account/avatar/00/25/3c/92/81fa306d.jpg","nickname":"张Dave","note":"","ucode":"0E8B6FDEB7505B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352107,"discussion_content":"后面的图片里面，又是画的，标志位置为1，跳转，前后不对应呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614603300,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":272219,"user_name":"Bruce","can_delete":false,"product_type":"c1","uid":2403865,"ip_address":"","ucode":"2EA3B9DBF5821C","user_header":"https://static001.geekbang.org/account/avatar/00/24/ae/19/5f2d96ce.jpg","comment_is_top":false,"comment_ctime":1609992040,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609992040","product_id":100026001,"comment_content":"有个问题想问一下，在上面的if-else的例子里，我看到您给了一张图示。我想问的是，在执行地址3f代码，即jne 4a之前，PC寄存器是存放的顺序的下一条指令的地址41。然后执行完了jne 4a，因为ZF=1，要发生跳转，接下来CPU准备执行4a位置的指令了。但是我的疑问是，此时PC寄存器里先存放一个4a，再立即存放一个51。还是直接存放4a的下一条指令地址51?我看您的图上在PC寄存器里标了一个红色的4a，我还是不明白这个意思。难道还有可能是把41擦除掉，替换成4a吗？求教。<br>因为按理说，如果我正在执行的指令没有jump相关的，我接下来都会去PC寄存器里找下一条指令要准备去执行它。然后PC寄存器立即更新接下来的下一条顺序指令地址。所以，只有51吗？","like_count":0},{"had_liked":false,"id":262114,"user_name":"BugBean","can_delete":false,"product_type":"c1","uid":1834181,"ip_address":"","ucode":"B51232281AD9BC","user_header":"https://static001.geekbang.org/account/avatar/00/1b/fc/c5/ff8b770e.jpg","comment_is_top":false,"comment_ctime":1605615219,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605615219","product_id":100026001,"comment_content":"老师您好，有一点不太明白，我的理解是CPU从PC寄存器拿到指令的内存地址，去内存找到指令内容，然后把指令内容存到指令寄存器，再从指令寄存器取出来执行，我这样理解对吗？为什么要先存在指令寄存器，而不是直接执行？","like_count":0},{"had_liked":false,"id":256586,"user_name":"蒋波","can_delete":false,"product_type":"c1","uid":1526325,"ip_address":"","ucode":"611A1F0629F08E","user_header":"https://static001.geekbang.org/account/avatar/00/17/4a/35/16861bf8.jpg","comment_is_top":false,"comment_ctime":1603684562,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603684562","product_id":100026001,"comment_content":"CPU从硬件角度看，是一个超大规模集成电路。<br>CPU从软件角度看，是一个执行计算机指令的逻辑机器。<br>高级语言程序——编译——汇编代码——汇编——机器码(机器指令)<br>机器指令分类<br>算术类指令、数据传输类指令、逻辑类指令、条件分支类指令、无条件跳转指令<br>机器码生成过程<br>以MIPS指令集为例<br><br>以一个简单的加法算术指令 add t0, s1, $s2, 为例：<br>对应的 MIPS 指令里 opcode 是 0，rs 代表第一个寄存器 s1 的地址是 17，rt 代表第二个寄存器 s2 的地址是 18，rd 代表目标的临时寄存器 t0 的地址，是 8。因为不是位移操作，所以位移量是 0。把这些数字拼在一起，就变成了一个 MIPS 的加法指令。<br>为了读起来方便，我们一般把对应的二进制数，用 16 进制表示出来。在这里，也就是 0X02324020。这个数字也就是这条指令对应的机器码，该机器码可以用4行八列的打孔卡表示如下：<br><br>对于Java这种使用虚拟机的语言，则是由虚拟机把编译出来的中间代码解释成机器指令，或者即时编译成机器指令执行。<br>问题：机器指令存在哪里呢？<br>CPU内部探视<br>逻辑上我们可以认为，CPU就是一堆寄存器。<br>而寄存器就是由触发器或者锁存器组成的简单电路，n个触发器或者锁存器就可以组成n为寄存器。<br>寄存器种类<br><br><br>其它寄存器通常我们根据它存放的内容取名，既可以存放地址，又可以存放数据的寄存器，就称为通用寄存器。<br>内存中存放着计算机指令，而且是连续保存的，加载到CPU也会顺序加载，跳转指令，会修改PC寄存器里面的地址值，例如if…else…来看，先执行cmp指令，比较指令完成后会把比较结果存入条件码寄存器，jne指令会查看零标志位的值，把PC寄存器的地址值改变，CPU后面根据PC寄存器地址值去加载指令到指令寄存器，实现跳转。<br>不管我们高级语言使用if…else或者while或者for循环，回归到机器指令都是一个跳转指令<br>问题：<br>1、内存中的计算机指令是什么时候生成的呢？<br>2、递归程序的机器指令是什么样呢？","like_count":0},{"had_liked":false,"id":255735,"user_name":"笨鸟","can_delete":false,"product_type":"c1","uid":1236320,"ip_address":"","ucode":"68029ADA76AA5A","user_header":"https://static001.geekbang.org/account/avatar/00/12/dd/60/a6a4f79a.jpg","comment_is_top":false,"comment_ctime":1603419833,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603419833","product_id":100026001,"comment_content":"明白了C语言主函数为啥默认返回值是0","like_count":0},{"had_liked":false,"id":254978,"user_name":"Ironshuai","can_delete":false,"product_type":"c1","uid":1635895,"ip_address":"","ucode":"392F5DE3762024","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/dQZH4oEsCUjunqCIs4ls8nujhJKxjyJCibk5aXznM2dK2QdxZgLuZXnUZdjxb8XagD0yEPzXDnqFhoZDtpYIHiag/132","comment_is_top":false,"comment_ctime":1603244008,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603244008","product_id":100026001,"comment_content":"不同架构的CPU，寄存器名称被添以不同前缀以指示寄存器的大小。例如对于x86架构，字母“e”用作名称前缀，指示各寄存器大小为32位；对于x86_64寄存器，字母“r”用作名称前缀，指示各寄存器大小为64位。","like_count":0},{"had_liked":false,"id":252893,"user_name":"liufengyu","can_delete":false,"product_type":"c1","uid":1128737,"ip_address":"","ucode":"1F89B66A270ED3","user_header":"https://static001.geekbang.org/account/avatar/00/11/39/21/d46d45f7.jpg","comment_is_top":false,"comment_ctime":1602508607,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602508607","product_id":100026001,"comment_content":"pc寄存器是什么怎么知道该去存放哪个内存地址的呢？","like_count":0},{"had_liked":false,"id":251266,"user_name":"Magic","can_delete":false,"product_type":"c1","uid":1272047,"ip_address":"","ucode":"FD9CEDAA419EB0","user_header":"https://static001.geekbang.org/account/avatar/00/13/68/ef/6264ca3d.jpg","comment_is_top":false,"comment_ctime":1601445068,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601445068","product_id":100026001,"comment_content":"switch case编译后的汇编指令和if else，while差不多，编译后的指令也是cmp,je。default一般编译为一个nop指令","like_count":0},{"had_liked":false,"id":245361,"user_name":"Dougleas","can_delete":false,"product_type":"c1","uid":1127312,"ip_address":"","ucode":"FF22E2E7C5BA30","user_header":"https://static001.geekbang.org/account/avatar/00/11/33/90/900ce74c.jpg","comment_is_top":false,"comment_ctime":1598923850,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1598923850","product_id":100026001,"comment_content":"非计算机专业的我看懂了，谢谢老师","like_count":0},{"had_liked":false,"id":243314,"user_name":"E","can_delete":false,"product_type":"c1","uid":1075666,"ip_address":"","ucode":"80B68506B590EF","user_header":"https://static001.geekbang.org/account/avatar/00/10/69/d2/8a53f0a3.jpg","comment_is_top":false,"comment_ctime":1598058438,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1598058438","product_id":100026001,"comment_content":"老师和编辑好，“cmp 指令比较了前后两个操作数的值，这里的 DWORD PTR 代表操作的数据类型是 32 位的整数，而[rbp-0x4]则是一个寄存器的地址。” 这段在代码在文中没有啊，请问一下在哪里，是漏掉了吗？","like_count":0},{"had_liked":false,"id":236344,"user_name":"阿呆041","can_delete":false,"product_type":"c1","uid":1334501,"ip_address":"","ucode":"D0787DC84F7297","user_header":"https://static001.geekbang.org/account/avatar/00/14/5c/e5/349a84cf.jpg","comment_is_top":false,"comment_ctime":1595394327,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595394327","product_id":100026001,"comment_content":"&quot;[rbp-0x4]则是一个寄存器的地址&quot; 这个应该是相对当前函数栈上的偏移吧","like_count":0},{"had_liked":false,"id":235630,"user_name":"Don Wang","can_delete":false,"product_type":"c1","uid":1319529,"ip_address":"","ucode":"1853365FA279F2","user_header":"https://static001.geekbang.org/account/avatar/00/14/22/69/09f7a8a2.jpg","comment_is_top":false,"comment_ctime":1595131933,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595131933","product_id":100026001,"comment_content":"<br>\t&#47;&#47; test.c<br><br><br>\t#include &lt;time.h&gt;<br>\t#include &lt;stdlib.h&gt;<br><br><br>\tint main()<br>\t{<br>\t  srand(time(NULL));<br>\t  int r = rand() % 2;<br>\t  int a = 10;<br>\t  if (r == 0)<br>\t  {<br>\t\ta = 1;<br>\t  } else {<br>\t\ta = 2;<br>\t  } <br>_____________________________________<br><br>test2.c: 在函数‘main’中:<br>test2.c:19:3: 错误：expected declaration or statement at end of input<br>   } <br>   ^<br><br><br><br>少一个} 符号。","like_count":0},{"had_liked":false,"id":235584,"user_name":"108度","can_delete":false,"product_type":"c1","uid":1015008,"ip_address":"","ucode":"085C8A8278C7D5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/e0/acbca24e.jpg","comment_is_top":false,"comment_ctime":1595114515,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1595114515","product_id":100026001,"comment_content":"老师，你好，之前了解到微指令集，它会把可以并行的指令放在一起，把要按顺序执行指令的放在微指令集，指令执行不一定全是按顺序执行的吧！","like_count":0},{"had_liked":false,"id":235117,"user_name":"Eleven","can_delete":false,"product_type":"c1","uid":1168452,"ip_address":"","ucode":"FB4A0C8CA732BE","user_header":"https://static001.geekbang.org/account/avatar/00/11/d4/44/0ec958f4.jpg","comment_is_top":false,"comment_ctime":1594896895,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594896895","product_id":100026001,"comment_content":"感觉status register应该直接叫结果(状态)寄存器，条件码寄存器一点都不直观...","like_count":0},{"had_liked":false,"id":234791,"user_name":"ada_shen","can_delete":false,"product_type":"c1","uid":1605373,"ip_address":"","ucode":"3DBB748F36A657","user_header":"https://static001.geekbang.org/account/avatar/00/18/7e/fd/8498aa0d.jpg","comment_is_top":false,"comment_ctime":1594796062,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594796062","product_id":100026001,"comment_content":"int main(){<br>    int i = 0;<br>    switch (i) {<br>        case 0:<br>            <br>            break;<br>        case 1:<br>        <br>        break;<br>        default:<br>            break;<br>    }<br>}<br><br>大致意思是通过JE和JMP来比较和跳转不同的分支<br>mov\tdword ptr [rbp - 12], eax<br>je\tLBB0_1 &#47;&#47;如果i==0，跳转LBB0_1<br>\tjmp\tLBB0_5 &#47;&#47;如果i!=0，跳转LBB0_5<br>LBB0_5:<br>\tmov\teax, dword ptr [rbp - 12] ## 4-byte Reload，&#47;&#47;获取值<br>\tsub\teax, 1<br>\tje\tLBB0_2&#47;&#47;如果i==1,跳转LBB0_2<br>\tjmp\tLBB0_3&#47;&#47;否则，跳转LBB0_3<br>LBB0_1:<br>\tjmp\tLBB0_4&#47;&#47;最终都跳转LBB0_4<br>LBB0_2:<br>\tjmp\tLBB0_4&#47;&#47;最终都跳转LBB0_4<br>LBB0_3:<br>\tjmp\tLBB0_4&#47;&#47;最终都跳转LBB0_4<br>LBB0_4:<br>\tmov\teax, dword ptr [rbp - 4]<br>\t","like_count":0},{"had_liked":false,"id":229884,"user_name":"Chica Digital","can_delete":false,"product_type":"c1","uid":1901164,"ip_address":"","ucode":"33F3847052167F","user_header":"https://static001.geekbang.org/account/avatar/00/1d/02/6c/e0ae650d.jpg","comment_is_top":false,"comment_ctime":1593175964,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593175964","product_id":100026001,"comment_content":"补充一点这章出现过的汇编语言指令：<br><br>JMP是汇编语言中的无条件跳转指令。无条件跳转指令可转到内存中任何程序段。转移地址可在指令中给出，也可以在寄存器中给出，或在储存器中指出。<br><br>jne是一个条件转移指令。当ZF=0，即条件不为0时，转至标号处执行。<br><br>JLE（或JNG）（jump if less or equal,or not greater），汇编语言中的条件转移指令。小于或等于，或者不大于则转移。","like_count":0},{"had_liked":false,"id":227555,"user_name":"A君","can_delete":false,"product_type":"c1","uid":1940105,"ip_address":"","ucode":"FE96F089C2312C","user_header":"https://static001.geekbang.org/account/avatar/00/1d/9a/89/babe8b52.jpg","comment_is_top":false,"comment_ctime":1592408087,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1592408087","product_id":100026001,"comment_content":"如果case数小于4，switch…case用if…else来实现，反之，如果case数大于等于4且每个case的比较数值是从小到大（连续的）顺序排列，switch…case就用goto实现，case里的常数就被用作jump地址。","like_count":0},{"had_liked":false,"id":227554,"user_name":"A君","can_delete":false,"product_type":"c1","uid":1940105,"ip_address":"","ucode":"FE96F089C2312C","user_header":"https://static001.geekbang.org/account/avatar/00/1d/9a/89/babe8b52.jpg","comment_is_top":false,"comment_ctime":1592407586,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1592407586","product_id":100026001,"comment_content":"把if指令的比较结果是放在条件控制寄存器的某个flag上的，pc寄存器放的是下一条指令的地址，而指令本身也是放在指令寄存器中。","like_count":0},{"had_liked":false,"id":225974,"user_name":"Ethan","can_delete":false,"product_type":"c1","uid":1810189,"ip_address":"","ucode":"75F613D58909DB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ZHw73tgCqGKhvticUWGRz4icgicu4hFWfKtacoFJeItH7maNuNUmjnEgDTJvOibwUWgGV0p6guNPibMVWDV4BUmEmlA/132","comment_is_top":false,"comment_ctime":1591922382,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591922382","product_id":100026001,"comment_content":"徐老师你好，“一个程序执行的时候，CPU 会根据 PC 寄存器里的地址，从内存里面把需要执行的指令读取到指令寄存器里面执行，然后根据指令长度自增，开始顺序读取下一条指令。”里面的“然后根据指令长度自增”这句话要怎么理解？我目前的理解是，PC寄存器会自动的顺序的往下读取内存地址值，那么“指令自增”是PC寄存器读取的汇编的序号自增吗？","like_count":0},{"had_liked":false,"id":225496,"user_name":"EncodedStar","can_delete":false,"product_type":"c1","uid":1504234,"ip_address":"","ucode":"03958CA7DDD6AE","user_header":"https://static001.geekbang.org/account/avatar/00/16/f3/ea/2b2adda5.jpg","comment_is_top":false,"comment_ctime":1591769866,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591769866","product_id":100026001,"comment_content":"计算机就是这样，又复杂又简单，不明白他的人认为他太复杂了，明白他的人觉得他太简单了。","like_count":0},{"had_liked":false,"id":218177,"user_name":"牺牲","can_delete":false,"product_type":"c1","uid":1619402,"ip_address":"","ucode":"5780E562A43494","user_header":"https://static001.geekbang.org/account/avatar/00/18/b5/ca/bba4d696.jpg","comment_is_top":false,"comment_ctime":1589728217,"is_pvip":false,"discussion_count":0,"race_medal":2,"score":"1589728217","product_id":100026001,"comment_content":"for循环嵌套for循环，第一句完事为什么跳到了1e，不应该往下执行a+=i？","like_count":0},{"had_liked":false,"id":214878,"user_name":"Geek_jikuo","can_delete":false,"product_type":"c1","uid":1902002,"ip_address":"","ucode":"D4AF9E736701B8","user_header":"https://static001.geekbang.org/account/avatar/00/1d/05/b2/93b64021.jpg","comment_is_top":false,"comment_ctime":1588840972,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588840972","product_id":100026001,"comment_content":"self-conclusion：<br><br>学到了计算机的处理指令流程，取指令，处理指令，指令跳转，标志符号等。还有几种寄存器的工作内容。<br>","like_count":0},{"had_liked":false,"id":200107,"user_name":"WENMURAN","can_delete":false,"product_type":"c1","uid":1915404,"ip_address":"","ucode":"5D1CE8B41937C7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXNhbTULKiakib8lYXrvGF2zPwfedooBzC2EtSv1nt1MwV1KUvTkcJrvCBFvcdwJicnr3OEXnk9GUCg/132","comment_is_top":false,"comment_ctime":1585544576,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585544576","product_id":100026001,"comment_content":"跳转指令<br>CPU是由一堆的寄存器组成，寄存器是由CPU内部多个触发器或锁存器组成的简单电路。<br>寄存器的类型：<br> PC寄存器（指令地址）：存放下一条需要执行指令的内存地址<br>指令寄存器：存放当前正在执行的指令<br>条件码寄存器：存放CPU进行算术或者逻辑计算的结果<br>其他，整数，浮点数，向量，地址，通用<br>J指令（跳转指令）会修改pc寄存器里面的地址值<br>If&#47;else语句，条件比较后会把结果存入条件码寄存器中，当语句执行完，条件成立时，PC寄存器会自增，顺序执行下一条命令，如果发生跳转时，PC寄存器会修改相应的地址，然后CPU再把这个地址对应的指令加载到指令寄存器中执行。","like_count":0},{"had_liked":false,"id":191683,"user_name":"邹友","can_delete":false,"product_type":"c1","uid":1919425,"ip_address":"","ucode":"3ACEE22DBFEE86","user_header":"https://static001.geekbang.org/account/avatar/00/1d/49/c1/5a77c210.jpg","comment_is_top":false,"comment_ctime":1584790448,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584790448","product_id":100026001,"comment_content":"这个for循环的跳转，让我想到Go里面常会说到数组遍历时，不要对迭代的引用延迟调用，因为共用一份内存地址，从这里看明白了，因为实际是指令回头重复调用，地址还没变","like_count":0},{"had_liked":false,"id":187249,"user_name":"Zeal","can_delete":false,"product_type":"c1","uid":1898857,"ip_address":"","ucode":"327D516A1D0F0E","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f9/69/384e33e6.jpg","comment_is_top":false,"comment_ctime":1584069338,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584069338","product_id":100026001,"comment_content":"switch case是帮助增加书写程序的逻辑，对于机器而言还是：是否满足条件的跳转。","like_count":0},{"had_liked":false,"id":187084,"user_name":"Geek_d1c701","can_delete":false,"product_type":"c1","uid":1898723,"ip_address":"","ucode":"3FD22B9BB6AC0F","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f8/e3/7da106f7.jpg","comment_is_top":false,"comment_ctime":1584009262,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584009262","product_id":100026001,"comment_content":"美术生看了五遍终于看懂了，谢谢老师在评论区的鼓励","like_count":0},{"had_liked":false,"id":185399,"user_name":"何赫赫","can_delete":false,"product_type":"c1","uid":1385332,"ip_address":"","ucode":"AB715356D60068","user_header":"https://static001.geekbang.org/account/avatar/00/15/23/74/b81c9f8c.jpg","comment_is_top":false,"comment_ctime":1583574481,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583574481","product_id":100026001,"comment_content":"老师你好，高级语言编译成汇编后，汇编里面的地址是指相对于代码段的位置吗？代码不是载进内存之后才会有地址的概念吗","like_count":0},{"had_liked":false,"id":184527,"user_name":"哪里有会生气的龙","can_delete":false,"product_type":"c1","uid":1380366,"ip_address":"","ucode":"7F12FB7D01EB7E","user_header":"https://static001.geekbang.org/account/avatar/00/15/10/0e/5a0f2339.jpg","comment_is_top":false,"comment_ctime":1583333476,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583333476","product_id":100026001,"comment_content":"Unknown command line argument &#39;-M&#39;.  Try: &#39;&#47;Applications&#47;Xcode.app&#47;Contents&#47;Developer&#47;Toolchains&#47;XcodeDefault.xctoolchain&#47;usr&#47;bin&#47;objdump -help&#39;<br>objdump: Did you mean &#39;-C&#39;?<br><br>执行完 objdump -d -M intel -S test.o ，报错，请问有遇到了小伙伴吗？","like_count":0},{"had_liked":false,"id":180548,"user_name":"北风一叶","can_delete":false,"product_type":"c1","uid":1087302,"ip_address":"","ucode":"30310E66341D2A","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/46/fe1f21d8.jpg","comment_is_top":false,"comment_ctime":1582335115,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582335115","product_id":100026001,"comment_content":"这一篇大部分指令能理解，看来之前学习汇编还是有用的","like_count":0},{"had_liked":false,"id":179621,"user_name":"信长","can_delete":false,"product_type":"c1","uid":1746710,"ip_address":"","ucode":"294D19040C09C0","user_header":"https://static001.geekbang.org/account/avatar/00/1a/a7/16/b2ff3f70.jpg","comment_is_top":false,"comment_ctime":1582040317,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582040317","product_id":100026001,"comment_content":"看了这章，我觉得汇编至少阅读起码不困难，但是自己写一遍呢？我怎么知道这个指令或者变量的地址是什么？感觉很困难，而且如果这个if条件有or的判断，怎么玩呢？cmp后紧接着什么指令？这个得去了解一下才行","like_count":0},{"had_liked":false,"id":176499,"user_name":"函数方程(弘宇)","can_delete":false,"product_type":"c1","uid":1695043,"ip_address":"","ucode":"FF32376E9B7C84","user_header":"https://static001.geekbang.org/account/avatar/00/19/dd/43/93f04f89.jpg","comment_is_top":false,"comment_ctime":1581072773,"is_pvip":false,"replies":[{"id":"68635","content":"函数方程(弘宇) 同学，<br><br>你好，你想问的问题，是“谁”在“什么情况”下去读取呢？<br><br>对于指令是怎么一条一条执行的，可以往后看 17-19 讲CPU如何建立数据通路的部分","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1581220679,"ip_address":"","comment_id":176499,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1581072773","product_id":100026001,"comment_content":"想问下，读取之前已经执行的指令或者跳转至后续指令，是通过移位寄存器来实现的吗？","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483127,"discussion_content":"函数方程(弘宇) 同学，\n\n你好，你想问的问题，是“谁”在“什么情况”下去读取呢？\n\n对于指令是怎么一条一条执行的，可以往后看 17-19 讲CPU如何建立数据通路的部分","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581220679,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1695043,"avatar":"https://static001.geekbang.org/account/avatar/00/19/dd/43/93f04f89.jpg","nickname":"函数方程(弘宇)","note":"","ucode":"FF32376E9B7C84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":179728,"discussion_content":"在执行if-else或者while时，pc寄存器读取指令时如果需要跳转，硬件方面是通过移位寄存器来实现的吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582249018,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170167,"user_name":"-_-|||","can_delete":false,"product_type":"c1","uid":1328142,"ip_address":"","ucode":"94B21594658BF9","user_header":"https://static001.geekbang.org/account/avatar/00/14/44/0e/ce14b7d3.jpg","comment_is_top":false,"comment_ctime":1578542006,"is_pvip":false,"replies":[{"id":"68083","content":"-_-_aaa同学，<br><br>你好，寄存器是没有内存地址的，只有寄存器本身的“编号”，寄存器里面可以存放一个内存地址。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1580631604,"ip_address":"","comment_id":170167,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1578542006","product_id":100026001,"comment_content":"16位寄存器的内存地址是类似 3F3F吗？ 8位寄存处就是类似3F吗？","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480867,"discussion_content":"-_-_aaa同学，\n\n你好，寄存器是没有内存地址的，只有寄存器本身的“编号”，寄存器里面可以存放一个内存地址。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580631604,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169489,"user_name":"许先森","can_delete":false,"product_type":"c1","uid":1795371,"ip_address":"","ucode":"1F42D4A6B5C6AF","user_header":"https://static001.geekbang.org/account/avatar/00/1b/65/2b/446ef7b6.jpg","comment_is_top":false,"comment_ctime":1578365095,"is_pvip":false,"replies":[{"id":"68111","content":"许先森同学，<br><br>switch...case 建议自己编译了试一下就知道了，不同情况编译出来的代码不一样。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1580637354,"ip_address":"","comment_id":169489,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1578365095","product_id":100026001,"comment_content":"if…else的实现逻辑：if()对应生成两条指令：cmp（compare：比较）和jne（jump if not equal：不相等就跳转到）。cmp指令用来比较得出这个条件的结果，然后存到条件码寄存器中，如果结果是TRUE，就把条件码寄存器中的零标志条件码设置成1（记住TREU==1）。 cmp执行完毕后，PC寄存器继续执行下一条指令jne，jne会查看零标志位的值，如果是0（false）就会跳转jne后面跟着的操作数x的位置，x为else条件中生成的第一条指令。 这时PC寄存器不再自增变成下一条指令地址（即条件为true时生成的指令），而是直接被设置成x这个位置地址（去走else的逻辑了），然后CPU把x位置的指令加载到指令寄存器中执行。并且else里会有一条”废“指令，if里面的所有指令执行完后也会加一条jmp指令跳转到这条废指令，目的就是让if和else里内容结束后最终的位置都一样。<br>switch case应该是先cmp所有的case，然后找到满足的那个条件下指令直接goto过去？","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480579,"discussion_content":"许先森同学，\n\nswitch...case 建议自己编译了试一下就知道了，不同情况编译出来的代码不一样。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580637354,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159604,"user_name":"lanco","can_delete":false,"product_type":"c1","uid":1188352,"ip_address":"","ucode":"C24A0A8716C78C","user_header":"https://static001.geekbang.org/account/avatar/00/12/22/00/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1575702904,"is_pvip":true,"replies":[{"id":"68674","content":"lanco同学，<br><br>你好，C代码都没有行号呀，有行号的是对应的汇编代码，jne的4a跳转到的就是对a赋值的汇编代码呀。<br>","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1581240299,"ip_address":"","comment_id":159604,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1575702904","product_id":100026001,"comment_content":"老师您好，我想请问if-else代码编译成汇编代码那儿，if的a赋值和else那儿的赋值为啥没有行号，jne跳转为什么不是跳到a的赋值，而是它的下一行","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477117,"discussion_content":"lanco同学，\n\n你好，C代码都没有行号呀，有行号的是对应的汇编代码，jne的4a跳转到的就是对a赋值的汇编代码呀。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581240299,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159558,"user_name":"王加武","can_delete":false,"product_type":"c1","uid":1665471,"ip_address":"","ucode":"DDCFE578C6C428","user_header":"https://static001.geekbang.org/account/avatar/00/19/69/bf/50a824a4.jpg","comment_is_top":false,"comment_ctime":1575683356,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575683356","product_id":100026001,"comment_content":"这一节几个重要的知识点——<br>1，CPU是由什么组成的？<br>CPU是由一堆寄存器组成的，寄存器又是由触发器或者是锁存器组成的<br>2，常见的几种寄存器是什么？<br>（1）PC寄存器：用来存放的是下一条指令的地址<br>（2）指令寄存器：用来存放的是当前执行指令的地址<br>（3）条件码寄存器：用来存放的是算术或者是逻辑运算的结果<br><br>3、CPU是如何运行程序的<br>CPU从PC寄存器里面读取地址，找到其地址对应的内存位置，取出其中的指令送入指令寄存器中执行，然后指令自增，重复的操作！<br>4、指令跳转是怎么回事？<br>其实指的就是当前指令修改了当前PC寄存器中所保存的下一条指令的地址，从而实现了跳转！","like_count":0},{"had_liked":false,"id":142818,"user_name":"拯救地球好累","can_delete":false,"product_type":"c1","uid":1339022,"ip_address":"","ucode":"7643439601EF4C","user_header":"https://static001.geekbang.org/account/avatar/00/14/6e/8e/5d309a85.jpg","comment_is_top":false,"comment_ctime":1571542586,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571542586","product_id":100026001,"comment_content":"---总结---<br>上节中曾讲到五种指令：算术、逻辑、无条件跳转、数据传输、条件分支<br>依赖于PC寄存器、指令寄存器可以实现指令的存放和下一条指令的加载<br>依赖于条件码寄存器可以实现无条件跳转和条件分支等指令逻辑，同时也能通过标志位进行算术运算中的进位和溢出判断<br>依赖于其他寄存器可以实现算术和逻辑运算等<br>条件分支、循环语句不过是根据某个状态去决定是否跳转到指定地址的指令，而这个状态值也可能会发生变化","like_count":0},{"had_liked":false,"id":142594,"user_name":"心浮天空","can_delete":false,"product_type":"c1","uid":1051609,"ip_address":"","ucode":"3B2D0E6CC51EE6","user_header":"https://static001.geekbang.org/account/avatar/00/10/0b/d9/3328dd12.jpg","comment_is_top":false,"comment_ctime":1571407899,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1571407899","product_id":100026001,"comment_content":"int main(void)<br>{<br>   0:\t55                   \tpush   rbp<br>   1:\t48 89 e5             \tmov    rbp,rsp<br>  int a = 1;<br>   4:\tc7 45 fc 01 00 00 00 \tmov    DWORD PTR [rbp-0x4],0x1<br>  switch(a)\t\t\t\t\t\t# 将所有的case集中编译在一起, 各case之间按顺序执行, 不需要跳转, 遇到条件成立的case则跳转到对应的case执行内容的地址<br>   b:\t8b 45 fc             \tmov    eax,DWORD PTR [rbp-0x4]<br>   e:\t83 f8 02             \tcmp    eax,0x2<br>  11:\t74 0a                \tje     1d &lt;main+0x1d&gt;<br>  13:\t83 f8 03             \tcmp    eax,0x3<br>  16:\t74 08                \tje     20 &lt;main+0x20&gt;<br>  18:\t83 f8 01             \tcmp    eax,0x1<br>  {<br>    case 1:<br>      break;<br>  1b:\teb 04                \tjmp    21 &lt;main+0x21&gt;<br>    case 2:<br>      break;<br>  1d:\t90                   \tnop<br>  1e:\teb 01                \tjmp    21 &lt;main+0x21&gt;<br>    case 3:<br>      break;<br>  20:\t90                   \tnop<br>  }<br>  return a;<br>  21:\t8b 45 fc             \tmov    eax,DWORD PTR [rbp-0x4]<br>}<br>  24:\t5d                   \tpop    rbp<br>  25:\tc3                   \tret    <br><br>switch...case语句会先编译所有的case条件,而case的执行内容会编译到所有的case判断之后, 真正执行的时候按顺序执行, 执行到case条件成立则跳转到对应的case执行内容。<br>与if...else...语句相比, switch...case语句的多个case判断之间没有跳转, 按从上到下的顺序执行指令, 效率应该会更高一些。<br>有个疑问: 为什么switch...case语句编译后的case条件判断顺序与代码中声明顺序不一致？","like_count":0},{"had_liked":false,"id":141056,"user_name":"唐宋元明清","can_delete":false,"product_type":"c1","uid":1334985,"ip_address":"","ucode":"E7C37724461C4D","user_header":"https://static001.geekbang.org/account/avatar/00/14/5e/c9/0f5b31a2.jpg","comment_is_top":false,"comment_ctime":1571107664,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571107664","product_id":100026001,"comment_content":"    for (int i = 0; i &lt; 3; i++)<br>   b:   c7 45 f8 00 00 00 00    mov    DWORD PTR [rbp-0x8],0x0<br>  12:   eb 0a                   jmp    1e &lt;main+0x1e&gt;<br>    {<br>        a += i;<br>  14:   8b 45 f8                mov    eax,DWORD PTR [rbp-0x8]<br>  17:   01 45 fc                add    DWORD PTR [rbp-0x4],eax<br>    for (int i = 0; i &lt; 3; i++)<br>  1a:   83 45 f8 01             add    DWORD PTR [rbp-0x8],0x1<br>  1e:   83 7d f8 02             cmp    DWORD PTR [rbp-0x8],0x2<br>  22:   7e f0                   jle    14 &lt;main+0x14&gt;<br>  24:   b8 00 00 00 00          mov    eax,0x0<br>    }<br>对于这段代码，我想问一下，如果执行到1e后发现条件满足，它会继续执行22，然后跳转到14，如果条件不满足那如何跳出循环呢","like_count":0},{"had_liked":false,"id":140181,"user_name":"Richard","can_delete":false,"product_type":"c1","uid":1316758,"ip_address":"","ucode":"893F958B9DD161","user_header":"https://static001.geekbang.org/account/avatar/00/14/17/96/846fc11b.jpg","comment_is_top":false,"comment_ctime":1570844815,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1570844815","product_id":100026001,"comment_content":"老师你好，我想确认一下pc自增的方式，因为很多文章简单的描述为pc+1，我感觉有很大的误导性，我查阅了相关资料，指令虽然在代码段顺序分布，但每下一条指令的地址不是简单的+1来获取，我观察反汇编的代码，发现指令地址的增长都是前一个指令地址+该指令的字节数，我是不是就可以理解为pc自增的方式就是当前pc的值+该指令的字节数呢？","like_count":0,"discussions":[{"author":{"id":1007254,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/96/a03175bc.jpg","nickname":"莫名","note":"","ucode":"E28F2602BA25DD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":90834,"discussion_content":"正解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576799062,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1316758,"avatar":"https://static001.geekbang.org/account/avatar/00/14/17/96/846fc11b.jpg","nickname":"Richard","note":"","ucode":"893F958B9DD161","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":39985,"discussion_content":"已经通过查阅资料证实PC是个抽象称谓，并不存在pc寄存器，功能是由cs：ip两个寄存器通过基址+偏移地址通过移位运算来寻址的，自增的是ip，增加的值就是当前指令字节数。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572052016,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125563,"user_name":"曾经瘦过","can_delete":false,"product_type":"c1","uid":1240106,"ip_address":"","ucode":"57C32575A1C1FD","user_header":"https://static001.geekbang.org/account/avatar/00/12/ec/2a/b11d5ad8.jpg","comment_is_top":false,"comment_ctime":1566204316,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566204316","product_id":100026001,"comment_content":"cpu 中的指令像流水一样一条条的有序执行，遇到跳转指令的时候会跳转到指定地方继续顺序执行。","like_count":0},{"had_liked":false,"id":121535,"user_name":"袭","can_delete":false,"product_type":"c1","uid":1077573,"ip_address":"","ucode":"D5B8609CDFB145","user_header":"https://static001.geekbang.org/account/avatar/00/10/71/45/126cd913.jpg","comment_is_top":false,"comment_ctime":1565155102,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565155102","product_id":100026001,"comment_content":"老师请问main+0x4a是什么意思？ 3f:   75 09                   jne    4a &lt;main+0x4a&gt;","like_count":0},{"had_liked":false,"id":119766,"user_name":"lzz","can_delete":false,"product_type":"c1","uid":1258776,"ip_address":"","ucode":"6DE16C490E0707","user_header":"https://static001.geekbang.org/account/avatar/00/13/35/18/88e34f2c.jpg","comment_is_top":false,"comment_ctime":1564676604,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564676604","product_id":100026001,"comment_content":"那个for循环是不是没有跟3进行比较？而且好像为没有循环三次。希望有空给我解答一下。谢谢","like_count":0},{"had_liked":false,"id":111338,"user_name":"凯","can_delete":false,"product_type":"c1","uid":1238355,"ip_address":"","ucode":"218482D0347EC3","user_header":"https://static001.geekbang.org/account/avatar/00/12/e5/53/83146bd7.jpg","comment_is_top":false,"comment_ctime":1562546410,"is_pvip":false,"replies":[{"id":"40520","content":"后面章节有的～慢慢往后看。个别不会的名词可以先自己查一下，老师讲的时候加深印象。祝你学习愉快","user_name":"编辑回复","user_name_real":"王锦","uid":"1058895","ctime":1562547558,"ip_address":"","comment_id":111338,"utype":2}],"discussion_count":1,"race_medal":0,"score":"1562546410","product_id":100026001,"comment_content":"base 可以简单介绍一下门电路 寄存器 时钟信号等等这些内容，否则很多人真的跟不上了~","like_count":0,"discussions":[{"author":{"id":1058895,"avatar":"https://static001.geekbang.org/account/avatar/00/10/28/4f/48e48553.jpg","nickname":"@阿锦啊","note":"","ucode":"3C5F00333D7174","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457311,"discussion_content":"后面章节有的～慢慢往后看。个别不会的名词可以先自己查一下，老师讲的时候加深印象。祝你学习愉快","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562547558,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110277,"user_name":"卡卡","can_delete":false,"product_type":"c1","uid":1298798,"ip_address":"","ucode":"E85C439AF7E56F","user_header":"https://static001.geekbang.org/account/avatar/00/13/d1/6e/040a30d1.jpg","comment_is_top":false,"comment_ctime":1562220721,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562220721","product_id":100026001,"comment_content":"PC 寄存器默认是自增【指令地址在内存中是连续的】的方式存放指令的内存地址。CPU 根据 PC 寄存器的指令地址读取指令到指令寄存器中执行。执行后会有结果，把结果存到了条件码寄存器中。同时 PC 寄存器会自增。CPU 开始执行下一条指令【如：jne: jump if not equal】，该指令判断条件码寄存器的零标志位，决定是继续往下执行还是跳转到别的位置执行。这个别的位置是通过判断条件码寄存器的标志位，来改变 PC 寄存器的指令地址。<br><br>","like_count":0},{"had_liked":false,"id":109042,"user_name":"小甘","can_delete":false,"product_type":"c1","uid":1376733,"ip_address":"","ucode":"17E68EF8D1AE85","user_header":"https://static001.geekbang.org/account/avatar/00/15/01/dd/169c2c54.jpg","comment_is_top":false,"comment_ctime":1561951900,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561951900","product_id":100026001,"comment_content":"在遇到if ... else语句时<br>1. 将指令地址寄存器内存储的值 修改为对应的条件所执行的指令 的地址<br>2. 并将当前 指令地址寄存器 所对应的指令存储到 指令寄存器 中<br>3. cpu执行指令寄存器中的指令。","like_count":0},{"had_liked":false,"id":109038,"user_name":"小甘","can_delete":false,"product_type":"c1","uid":1376733,"ip_address":"","ucode":"17E68EF8D1AE85","user_header":"https://static001.geekbang.org/account/avatar/00/15/01/dd/169c2c54.jpg","comment_is_top":false,"comment_ctime":1561951581,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561951581","product_id":100026001,"comment_content":"当出现if elese语句时，修改指令地址寄存器到对应的条件所执行的代码处，并根据指令地址寄存器找到对应的指令放在指令寄存器中供CPU执行。","like_count":0},{"had_liked":false,"id":109023,"user_name":"默默地付出","can_delete":false,"product_type":"c1","uid":1588122,"ip_address":"","ucode":"85D1FC806A7E84","user_header":"https://static001.geekbang.org/account/avatar/00/18/3b/9a/aab5286a.jpg","comment_is_top":false,"comment_ctime":1561950164,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561950164","product_id":100026001,"comment_content":"CPU 首先会去PC寄存器里拿地址，根据这个地址去内存中获取指令，把指令放在指令寄存器中。我的问题是，PC寄存器第一次的地址信息是从哪里来的呢？","like_count":0},{"had_liked":false,"id":108984,"user_name":"Student","can_delete":false,"product_type":"c1","uid":1527219,"ip_address":"","ucode":"C70F96C2907B01","user_header":"https://static001.geekbang.org/account/avatar/00/17/4d/b3/39af5072.jpg","comment_is_top":false,"comment_ctime":1561943801,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561943801","product_id":100026001,"comment_content":"非计算机专业转行的，听了3遍没听懂，看了一遍还是不懂，今天坐地铁的时候认认真真的结合代码又看了一遍，终于看懂了😁。李笑来的《自学是门手艺》这本书真的使我受益无穷啊，什么东西都经不住重复😄","like_count":0},{"had_liked":false,"id":108885,"user_name":"少盐","can_delete":false,"product_type":"c1","uid":1305743,"ip_address":"","ucode":"BCC7E264B75702","user_header":"https://static001.geekbang.org/account/avatar/00/13/ec/8f/8299495a.jpg","comment_is_top":false,"comment_ctime":1561907429,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561907429","product_id":100026001,"comment_content":"调用函数的时候肯定要把当前状态保存的，就相当于在做数学题，演算到一半，出去吃饭，回来接着演算，总得知道演算到哪里了，中间结果多少吧<br>栈溢出，栈先入后出，后入先出，和摞盘子一样","like_count":0},{"had_liked":false,"id":108516,"user_name":"少盐","can_delete":false,"product_type":"c1","uid":1305743,"ip_address":"","ucode":"BCC7E264B75702","user_header":"https://static001.geekbang.org/account/avatar/00/13/ec/8f/8299495a.jpg","comment_is_top":false,"comment_ctime":1561790312,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561790312","product_id":100026001,"comment_content":"看到指令总是会想知道具体的电路是如何实现的，就像在饭店点菜一样，跟老板说我要宫保鸡丁，可是总想知道怎么做出来的","like_count":0},{"had_liked":false,"id":108224,"user_name":"Geek_hahaha","can_delete":false,"product_type":"c1","uid":1561936,"ip_address":"","ucode":"F248F8643CE957","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJt6TyUk2YZXDibOt3C8MeC3BMgVPMXh0mdoGCTYNmBsa2xT5WBG9QwU6D84qQnC0CBVUkibV1pUcvA/132","comment_is_top":false,"comment_ctime":1561701113,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561701113","product_id":100026001,"comment_content":"Stack overflow 其实不是指Stack内存不够用了，溢出。这是字面解释，而是指stack frame 溢出到上一级的frame stack,因为这样会覆盖原始返回地址,造成安全隐患,这是stack overflow 漏洞。","like_count":0},{"had_liked":false,"id":107608,"user_name":"LK","can_delete":false,"product_type":"c1","uid":1037871,"ip_address":"","ucode":"F40EF08B744CC0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d6/2f/b56385c6.jpg","comment_is_top":false,"comment_ctime":1561563578,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561563578","product_id":100026001,"comment_content":"工作中接触过一种芯片，用类汇编语言编程，懵懂中总是来和cpu对比，现在发现很多原理真的很类似","like_count":0},{"had_liked":false,"id":106376,"user_name":"lanjuuff","can_delete":false,"product_type":"c1","uid":1555405,"ip_address":"","ucode":"F033CE4D471B47","user_header":"https://static001.geekbang.org/account/avatar/00/17/bb/cd/f6bbd2de.jpg","comment_is_top":false,"comment_ctime":1561284202,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561284202","product_id":100026001,"comment_content":"switch类似if else和循环，也是goto。switch编译时会计算所有情况。<br>有个疑问：编译出来结果比较顺序为：和第二个值相等(je)跳转，和第三个值相等(je)跳转，和第一个值不相等(jne)跳转，如果和第一个值相等则继续。<br>为什么不是：按顺序判断第1、2、3个值。<br>编译结果如下（太长，删除开头部分）：<br><br>  switch(r)<br>  4f:   8b 45 f8                mov    eax,DWORD PTR [rbp-0x8]<br>  52:   83 f8 02                cmp    eax,0x2<br>  55:   74 13                   je     6a &lt;main+0x6a&gt;<br>  57:   83 f8 03                cmp    eax,0x3<br>  5a:   74 17                   je     73 &lt;main+0x73&gt;<br>  5c:   83 f8 01                cmp    eax,0x1<br>  5f:   75 1b                   jne    7c &lt;main+0x7c&gt;<br>  {<br>  case 1:<br>    a = 1111;<br>  61:   c7 45 fc 57 04 00 00    mov    DWORD PTR [rbp-0x4],0x457<br>    break;<br>  68:   eb 19                   jmp    83 &lt;main+0x83&gt;<br>  case 2:<br>    a = 2222;<br>  6a:   c7 45 fc ae 08 00 00    mov    DWORD PTR [rbp-0x4],0x8ae<br>    break;<br>  71:   eb 10                   jmp    83 &lt;main+0x83&gt;<br>  case 3:<br>    a = 3333;<br>  73:   c7 45 fc 05 0d 00 00    mov    DWORD PTR [rbp-0x4],0xd05<br>    break;<br>  7a:   eb 07                   jmp    83 &lt;main+0x83&gt;<br>  default:<br>    a = 123;<br>  7c:   c7 45 fc 7b 00 00 00    mov    DWORD PTR [rbp-0x4],0x7b<br>  }<br>  return a;<br>  83:   8b 45 fc                mov    eax,DWORD PTR [rbp-0x4]<br>}<br>  86:   c9                      leave  <br>  87:   c3                      ret    ","like_count":0},{"had_liked":false,"id":104527,"user_name":"ginger","can_delete":false,"product_type":"c1","uid":1321670,"ip_address":"","ucode":"73892EB5DDCE66","user_header":"https://static001.geekbang.org/account/avatar/00/14/2a/c6/8646048e.jpg","comment_is_top":false,"comment_ctime":1560772414,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560772414","product_id":100026001,"comment_content":"cpu已经在软件层面封装好了,我们只需要代码变成指令之后是一条一条执行的,可不可以这么去理解:<br>我们写java代码需要在jdk基础上,这里jdk帮我们封装好了很多东西,我们完成代码编写,只需要知道我们一行行代码编译成class文件,是&quot;一行一行&quot;执行的就好,而cpu在软件层面已经帮我们封装好了,意思就是操作系统,或者说底层逻辑开发的工作者,只需要知道cpu封装好的逻辑就好了,而我们,学到最底层,只用学到操作系统层面就好了,再往下学的意义,和收益都不大.<br>如果再换一句话,是不是就是说,如果只想用高层语言写写业务逻辑,只用学习到对应语言的编译层面就哈了,如果想从事业务逻辑编写的同事,让自己的程序向最优化靠拢,就需要学习到操作系统层面.","like_count":0},{"had_liked":false,"id":103404,"user_name":"djfhchdh","can_delete":false,"product_type":"c1","uid":1484184,"ip_address":"","ucode":"E71D75328CE398","user_header":"https://static001.geekbang.org/account/avatar/00/16/a5/98/a65ff31a.jpg","comment_is_top":false,"comment_ctime":1560429384,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560429384","product_id":100026001,"comment_content":"switch.o:     file format elf64-x86-64<br><br><br>Disassembly of section .text:<br><br>0000000000000000 &lt;main&gt;:<br>#include &lt;stdio.h&gt;<br>#include &lt;stdlib.h&gt;<br><br><br>int main()<br>{<br>   0:   55                      push   rbp<br>   1:   48 89 e5                mov    rbp,rsp<br>   4:   48 83 ec 10             sub    rsp,0x10<br>  int i = 1;<br>   8:   c7 45 fc 01 00 00 00    mov    DWORD PTR [rbp-0x4],0x1<br>  switch(i)<br>   f:   8b 45 fc                mov    eax,DWORD PTR [rbp-0x4]<br>  12:   83 f8 01                cmp    eax,0x1<br>  15:   74 15                   je     2c &lt;main+0x2c&gt;<br>  17:   83 f8 02                cmp    eax,0x2<br>  1a:   74 1c                   je     38 &lt;main+0x38&gt;<br>  1c:   85 c0                   test   eax,eax<br>  1e:   75 24                   jne    44 &lt;main+0x44&gt;<br>  {<br>          case 0:<br>                  printf(&quot;0\\n&quot;);<br>  20:   bf 00 00 00 00          mov    edi,0x0<br>  25:   e8 00 00 00 00          call   2a &lt;main+0x2a&gt;<br>                  break;<br>  2a:   eb 22                   jmp    4e &lt;main+0x4e&gt;<br>          case 1:<br>                  printf(&quot;1\\n&quot;);<br>  2c:   bf 00 00 00 00          mov    edi,0x0<br>  31:   e8 00 00 00 00          call   36 &lt;main+0x36&gt;<br>                  break;<br>  36:   eb 16                   jmp    4e &lt;main+0x4e&gt;<br>          case 2:<br>                  printf(&quot;2\\n&quot;);<br>  38:   bf 00 00 00 00          mov    edi,0x0<br>  3d:   e8 00 00 00 00          call   42 &lt;main+0x42&gt;<br>                  break;<br>  42:   eb 0a                   jmp    4e &lt;main+0x4e&gt;<br>          default:<br>                  printf(&quot;default\\n&quot;);<br>  44:   bf 00 00 00 00          mov    edi,0x0<br>  49:   e8 00 00 00 00          call   4e &lt;main+0x4e&gt;<br>  4e:   b8 00 00 00 00          mov    eax,0x0<br>  }<br>}<br>  53:   c9                      leave<br>  54:   c3                      ret<br>","like_count":0},{"had_liked":false,"id":103152,"user_name":"古夜","can_delete":false,"product_type":"c1","uid":1341612,"ip_address":"","ucode":"0A82D3CFCEDF07","user_header":"https://static001.geekbang.org/account/avatar/00/14/78/ac/e5e6e7f3.jpg","comment_is_top":false,"comment_ctime":1560388361,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560388361","product_id":100026001,"comment_content":"“从内存里面把需要执行的指令读取到指令寄存器里面执行，”这里的意思是在指令寄存器里执行程序吗？不是内存吗？","like_count":0},{"had_liked":false,"id":103147,"user_name":"古夜","can_delete":false,"product_type":"c1","uid":1341612,"ip_address":"","ucode":"0A82D3CFCEDF07","user_header":"https://static001.geekbang.org/account/avatar/00/14/78/ac/e5e6e7f3.jpg","comment_is_top":false,"comment_ctime":1560387906,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560387906","product_id":100026001,"comment_content":"条件码寄存器存放 CPU 进行算术或者逻辑还有条件计算的结果？上面图和文说了两种意思","like_count":0},{"had_liked":false,"id":99376,"user_name":"永耀","can_delete":false,"product_type":"c1","uid":1329808,"ip_address":"","ucode":"F0F897EE8EF12F","user_header":"https://static001.geekbang.org/account/avatar/00/14/4a/90/2261ef7e.jpg","comment_is_top":false,"comment_ctime":1559202066,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559202066","product_id":100026001,"comment_content":"微机原理与接口技术，大学上这门课的时候就一脸懵逼","like_count":0},{"had_liked":false,"id":99114,"user_name":"Stephen","can_delete":false,"product_type":"c1","uid":1318347,"ip_address":"","ucode":"D13D693D66E5FE","user_header":"","comment_is_top":false,"comment_ctime":1559144227,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559144227","product_id":100026001,"comment_content":"一个线程运行一个时间片之后就会发生线程间的切换，切换时会把cpu寄存器中的数据保存到当前线程的内核对象内部的一个上下文结构中，这里的线程的内核对象是保存到内存中的吗？求老师解答","like_count":0},{"had_liked":false,"id":95732,"user_name":"lanlyhs","can_delete":false,"product_type":"c1","uid":1002731,"ip_address":"","ucode":"C7FDAECE5A8494","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4c/eb/73b45431.jpg","comment_is_top":false,"comment_ctime":1558151971,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1558151971","product_id":100026001,"comment_content":"老师既然 ZF = 0 才会跳转，那图中两个 ZF = 1 也是有问题的吧","like_count":0},{"had_liked":false,"id":94894,"user_name":"aline","can_delete":false,"product_type":"c1","uid":1028616,"ip_address":"","ucode":"CF3483CC107727","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b2/08/88e38a7c.jpg","comment_is_top":false,"comment_ctime":1557917646,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557917646","product_id":100026001,"comment_content":"基于 Mac 编译的博客上的 if&#47;else 代码，<br>编程命令如下：<br>gcc -g -c test.c<br>objdump -d intel -S test.o <br><br>编译结果如下：<br><br>```<br>1 &#47;&#47; test.c<br>26:   99  cltd<br>27:   b9 02 00 00 00  movl    $2, %ecx<br>2c:   f7 f9   idivl   %ecx<br>2e:   89 55 f8    movl    %edx, -8(%rbp)<br>; int a = 10;<br>31:   c7 45 f4 0a 00 00 00    movl    $10, -12(%rbp)<br>; if (r == 0)<br>38:   83 7d f8 00     cmpl    $0, -8(%rbp)<br>3c:   0f 85 0c 00 00 00   jne 12 &lt;_main+0x4e&gt;<br>; a = 1;<br>42:   c7 45 f4 01 00 00 00    movl    $1, -12(%rbp)<br>; } else {<br>49:   e9 07 00 00 00  jmp 7 &lt;_main+0x55&gt;<br>; a = 2;<br>4e:   c7 45 f4 02 00 00 00    movl    $2, -12(%rbp)<br>; }<br>55:   8b 45 fc    movl    -4(%rbp), %eax<br>58:   48 83 c4 10     addq    $16, %rsp<br>5c:   5d  popq    %rbp<br>5d:   c3  retq<br>```<br><br>但是 if(r == 0) 语句的编译结果如下：<br><br>38:   83 7d f8 00     cmpl    $0, -8(%rbp)<br>3c:   0f 85 0c 00 00 00   jne 12 &lt;_main+0x4e&gt;<br><br>但是这个操作数为 12 的指令并不存在，请问一下老师这是怎么回事？","like_count":0},{"had_liked":false,"id":93717,"user_name":"萝卜祥子","can_delete":false,"product_type":"c1","uid":1476139,"ip_address":"","ucode":"367F4E644D4656","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/B9z4VJwCSPPI0Zng5OmbC0EX7TYvqiconRv4GolDKxWLK97GLvvoroqTgkHlIlLyZZTVlRRiaZkCeTlthNDYauhA/132","comment_is_top":false,"comment_ctime":1557567755,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557567755","product_id":100026001,"comment_content":"switch...case是使用je进行跳转,这里还应该关注一下条件测试指令，如果case中没有0,那么就是使用cmp指令依次比较每个值是否与case中的值是否相等然后跳转，但是假设存在0的情况，此时跳转逻辑会有一点变化，并且此时是使用test命令&lt;b&gt;优先判断&lt;&#47;b&gt;为0 的分支代码如下<br>&#47;**************含有0分支*********************&#47;<br><br>sw.o：     文件格式 elf64-x86-64<br><br><br>Disassembly of section .text:<br><br>0000000000000000 &lt;main&gt;:<br><br><br>int main(int argc, char const *argv[])<br>{<br>   0:\t55                   \tpush   %rbp<br>   1:\t48 89 e5             \tmov    %rsp,%rbp<br>   4:\t89 7d ec             \tmov    %edi,-0x14(%rbp)<br>   7:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)<br>    int i = 3;<br>   b:\tc7 45 fc 03 00 00 00 \tmovl   $0x3,-0x4(%rbp)<br>    switch(i)<br>  12:\t8b 45 fc             \tmov    -0x4(%rbp),%eax<br>  15:\t85 c0                \ttest   %eax,%eax       &#47;&#47; 会先判断是否为0<br>  17:\t74 07                \tje     20 &lt;main+0x20&gt;  &#47;&#47; 为零就跳转<br>  19:\t83 f8 02             \tcmp    $0x2,%eax<br>  1c:\t74 0b                \tje     29 &lt;main+0x29&gt;<br>  1e:\teb 12                \tjmp    32 &lt;main+0x32&gt;<br>    {<br>        case 0:<br>            i = 0;<br>  20:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)<br>            break;<br>  27:\teb 11                \tjmp    3a &lt;main+0x3a&gt;<br>        case 2:<br>            i = 2;<br>  29:\tc7 45 fc 02 00 00 00 \tmovl   $0x2,-0x4(%rbp)<br>            break;<br>  30:\teb 08                \tjmp    3a &lt;main+0x3a&gt;<br>        <br>        default:    <br>            i =3;<br>  32:\tc7 45 fc 03 00 00 00 \tmovl   $0x3,-0x4(%rbp)<br>            break;        <br>  39:\t90                   \tnop<br>    }<br>    return 0;<br>  3a:\tb8 00 00 00 00       \tmov    $0x0,%eax<br>}<br>  3f:\t5d                   \tpop    %rbp<br>  40:\tc3                   \tretq   <br><br>如果case分支较多，这里还会使用跳转表进行优化，代码太长就不贴出来了","like_count":0},{"had_liked":false,"id":93698,"user_name":"冰心丹","can_delete":false,"product_type":"c1","uid":1248443,"ip_address":"","ucode":"9E75D881373AD7","user_header":"https://static001.geekbang.org/account/avatar/00/13/0c/bb/057ec571.jpg","comment_is_top":false,"comment_ctime":1557561982,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557561982","product_id":100026001,"comment_content":"老师，最终正确的答案是啥呢？只知道判断多了的情况，switch比if...else好","like_count":0},{"had_liked":false,"id":93697,"user_name":"萝卜祥子","can_delete":false,"product_type":"c1","uid":1476139,"ip_address":"","ucode":"367F4E644D4656","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/B9z4VJwCSPPI0Zng5OmbC0EX7TYvqiconRv4GolDKxWLK97GLvvoroqTgkHlIlLyZZTVlRRiaZkCeTlthNDYauhA/132","comment_is_top":false,"comment_ctime":1557561726,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557561726","product_id":100026001,"comment_content":"老师，有没有专门介绍ABI的资料呢？只能看intel官方文档？很多汇编的调用规则还是不清楚","like_count":0},{"had_liked":false,"id":93479,"user_name":"曾经瘦过","can_delete":false,"product_type":"c1","uid":1240106,"ip_address":"","ucode":"57C32575A1C1FD","user_header":"https://static001.geekbang.org/account/avatar/00/12/ec/2a/b11d5ad8.jpg","comment_is_top":false,"comment_ctime":1557478912,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557478912","product_id":100026001,"comment_content":"对汇编不太理解  具体的代码分析看的有点吃力   基本的流程还是很清晰的 尤其是  卡带的例子 更加形象的 说明了 工作原理 ","like_count":0},{"had_liked":false,"id":92446,"user_name":"Zed","can_delete":false,"product_type":"c1","uid":1184951,"ip_address":"","ucode":"09947C76F55A46","user_header":"https://static001.geekbang.org/account/avatar/00/12/14/b7/bb6a1fd4.jpg","comment_is_top":false,"comment_ctime":1557276292,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557276292","product_id":100026001,"comment_content":"这一章是我看得最快的一章。","like_count":0}]}