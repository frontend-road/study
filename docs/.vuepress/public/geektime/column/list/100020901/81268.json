{"id":81268,"title":"35 | 基础篇：C10K 和 C1000K 回顾","content":"<p>你好，我是倪朋飞。</p><p>前面内容，我们学习了 Linux 网络的基础原理以及性能观测方法。简单回顾一下，Linux 网络基于 TCP/IP 模型，构建了其网络协议栈，把繁杂的网络功能划分为应用层、传输层、网络层、网络接口层等四个不同的层次，既解决了网络环境中设备异构的问题，也解耦了网络协议的复杂性。</p><p>基于 TCP/IP 模型，我们还梳理了 Linux 网络收发流程和相应的性能指标。在应用程序通过套接字接口发送或者接收网络包时，这些网络包都要经过协议栈的逐层处理。我们通常用带宽、吞吐、延迟、PPS 等来衡量网络性能。</p><p>今天，我们主要来回顾下经典的 C10K 和 C1000K 问题，以更好理解 Linux 网络的工作原理，并进一步分析，如何做到单机支持 C10M。</p><p>注意，C10K 和 C1000K 的首字母 C 是 Client 的缩写。C10K 就是单机同时处理 1 万个请求（并发连接1万）的问题，而 C1000K 也就是单机支持处理 100 万个请求（并发连接100万）的问题。</p><h2>C10K</h2><p><a href=\"http://www.kegel.com/c10k.html\">C10K 问题</a>最早由 Dan Kegel 在 1999年提出。那时的服务器还只是 32 位系统，运行着 Linux 2.2 版本（后来又升级到了 2.4 和 2.6，而 2.6 才支持 x86_64），只配置了很少的内存（2GB）和千兆网卡。</p><!-- [[[read_end]]] --><p>怎么在这样的系统中支持并发 1 万的请求呢？</p><p>从资源上来说，对2GB 内存和千兆网卡的服务器来说，同时处理 10000 个请求，只要每个请求处理占用不到 200KB（2GB/10000）的内存和 100Kbit （1000Mbit/10000）的网络带宽就可以。所以，物理资源是足够的，接下来自然是软件的问题，特别是网络的 I/O 模型问题。</p><p>说到 I/O 的模型，我在文件系统的原理中，曾经介绍过文件 I/O，其实网络 I/O 模型也类似。在 C10K 以前，Linux 中网络处理都用同步阻塞的方式，也就是每个请求都分配一个进程或者线程。请求数只有 100 个时，这种方式自然没问题，但增加到 10000 个请求时，10000 个进程或线程的调度、上下文切换乃至它们占用的内存，都会成为瓶颈。</p><p>既然每个请求分配一个线程的方式不合适，那么，为了支持 10000 个并发请求，这里就有两个问题需要我们解决。</p><p>第一，怎样在一个线程内处理多个请求，也就是要在一个线程内响应多个网络 I/O。以前的同步阻塞方式下，一个线程只能处理一个请求，到这里不再适用，是不是可以用非阻塞 I/O 或者异步 I/O 来处理多个网络请求呢？</p><p>第二，怎么更节省资源地处理客户请求，也就是要用更少的线程来服务这些请求。是不是可以继续用原来的 100 个或者更少的线程，来服务现在的 10000 个请求呢？</p><p>当然，事实上，现在 C10K 的问题早就解决了，在继续学习下面的内容前，你可以先自己思考一下这两个问题。结合前面学过的内容，你是不是已经有了解决思路呢？</p><h3>I/O 模型优化</h3><p>异步、非阻塞 I/O 的解决思路，你应该听说过，其实就是我们在网络编程中经常用到的 I/O 多路复用（I/O Multiplexing）。I/O 多路复用是什么意思呢？</p><p>别急，详细了解前，我先来讲两种 I/O 事件通知的方式：水平触发和边缘触发，它们常用在套接字接口的文件描述符中。</p><ul>\n<li>\n<p>水平触发：只要文件描述符可以非阻塞地执行 I/O ，就会触发通知。也就是说，应用程序可以随时检查文件描述符的状态，然后再根据状态，进行 I/O 操作。</p>\n</li>\n<li>\n<p>边缘触发：只有在文件描述符的状态发生改变（也就是 I/O 请求达到）时，才发送一次通知。这时候，应用程序需要尽可能多地执行 I/O，直到无法继续读写，才可以停止。如果 I/O 没执行完，或者因为某种原因没来得及处理，那么这次通知也就丢失了。</p>\n</li>\n</ul><p>接下来，我们再回过头来看 I/O 多路复用的方法。这里其实有很多实现方法，我带你来逐个分析一下。</p><p><strong>第一种，使用非阻塞 I/O 和水平触发通知，比如使用 select 或者 poll。</strong></p><p>根据刚才水平触发的原理，select 和 poll 需要从文件描述符列表中，找出哪些可以执行 I/O ，然后进行真正的网络 I/O 读写。由于 I/O 是非阻塞的，一个线程中就可以同时监控一批套接字的文件描述符，这样就达到了单线程处理多请求的目的。</p><p>所以，这种方式的最大优点，是对应用程序比较友好，它的 API 非常简单。</p><p>但是，应用软件使用 select 和 poll 时，需要对这些文件描述符列表进行轮询，这样，请求数多的时候就会比较耗时。并且，select 和 poll 还有一些其他的限制。</p><p>select 使用固定长度的位相量，表示文件描述符的集合，因此会有最大描述符数量的限制。比如，在 32 位系统中，默认限制是 1024。并且，在 select 内部，检查套接字状态是用轮询的方法，处理耗时跟描述符数量是 O(N) 的关系。</p><p>而 poll 改进了 select 的表示方法，换成了一个没有固定长度的数组，这样就没有了最大描述符数量的限制（当然还会受到系统文件描述符限制）。但应用程序在使用 poll 时，同样需要对文件描述符列表进行轮询，这样，处理耗时跟描述符数量就是 O(N) 的关系。</p><p>除此之外，应用程序每次调用 select 和 poll 时，还需要把文件描述符的集合，从用户空间传入内核空间，由内核修改后，再传出到用户空间中。这一来一回的内核空间与用户空间切换，也增加了处理成本。</p><p>有没有什么更好的方式来处理呢？答案自然是肯定的。</p><p><strong>第二种，使用非阻塞 I/O 和边缘触发通知，比如 epoll</strong>。</p><p>既然 select 和 poll 有那么多的问题，就需要继续对其进行优化，而 epoll 就很好地解决了这些问题。</p><ul>\n<li>\n<p>epoll 使用红黑树，在内核中管理文件描述符的集合，这样，就不需要应用程序在每次操作时都传入、传出这个集合。</p>\n</li>\n<li>\n<p>epoll 使用事件驱动的机制，只关注有 I/O 事件发生的文件描述符，不需要轮询扫描整个集合。</p>\n</li>\n</ul><p>不过要注意，epoll 是在 Linux 2.6 中才新增的功能（2.4 虽然也有，但功能不完善）。由于边缘触发只在文件描述符可读或可写事件发生时才通知，那么应用程序就需要尽可能多地执行 I/O，并要处理更多的异常事件。</p><p><strong>第三种，使用异步 I/O（Asynchronous I/O，简称为 AIO）</strong>。在前面文件系统原理的内容中，我曾介绍过异步I/O 与同步 I/O 的区别。异步I/O 允许应用程序同时发起很多 I/O 操作，而不用等待这些操作完成。而在 I/O完成后，系统会用事件通知（比如信号或者回调函数）的方式，告诉应用程序。这时，应用程序才会去查询 I/O 操作的结果。</p><p>异步 I/O 也是到了 Linux 2.6 才支持的功能，并且在很长时间里都处于不完善的状态，比如 glibc 提供的异步 I/O 库，就一直被社区诟病。同时，由于异步 I/O 跟我们的直观逻辑不太一样，想要使用的话，一定要小心设计，其使用难度比较高。</p><h3>工作模型优化</h3><p>了解了 I/O 模型后，请求处理的优化就比较直观了。使用 I/O 多路复用后，就可以在一个进程或线程中处理多个请求，其中，又有下面两种不同的工作模型。</p><p><strong>第一种，主进程+多个 worker 子进程，这也是最常用的一种模型</strong>。这种方法的一个通用工作模式就是：</p><ul>\n<li>\n<p>主进程执行 bind() + listen() 后，创建多个子进程；</p>\n</li>\n<li>\n<p>然后，在每个子进程中，都通过 accept() 或 epoll_wait() ，来处理相同的套接字。</p>\n</li>\n</ul><p>比如，最常用的反向代理服务器 Nginx 就是这么工作的。它也是由主进程和多个 worker 进程组成。主进程主要用来初始化套接字，并管理子进程的生命周期；而 worker 进程，则负责实际的请求处理。我画了一张图来表示这个关系。</p><p><img src=\"https://static001.geekbang.org/resource/image/45/7e/451a24fb8f096729ed6822b1615b097e.png?wh=436*462\" alt=\"\"></p><p>这里要注意，accept() 和 epoll_wait() 调用，还存在一个惊群的问题。换句话说，当网络 I/O 事件发生时，多个进程被同时唤醒，但实际上只有一个进程来响应这个事件，其他被唤醒的进程都会重新休眠。</p><ul>\n<li>\n<p>其中，accept() 的惊群问题，已经在 Linux 2.6 中解决了；</p>\n</li>\n<li>\n<p>而 epoll 的问题，到了 Linux 4.5 ，才通过 EPOLLEXCLUSIVE 解决。</p>\n</li>\n</ul><p>为了避免惊群问题， Nginx 在每个 worker 进程中，都增加一个了全局锁（accept_mutex）。这些 worker 进程需要首先竞争到锁，只有竞争到锁的进程，才会加入到 epoll 中，这样就确保只有一个 worker 子进程被唤醒。</p><p>不过，根据前面 CPU 模块的学习，你应该还记得，进程的管理、调度、上下文切换的成本非常高。那为什么使用多进程模式的 Nginx ，却具有非常好的性能呢？</p><p>这里最主要的一个原因就是，这些 worker 进程，实际上并不需要经常创建和销毁，而是在没任务时休眠，有任务时唤醒。只有在 worker 由于某些异常退出时，主进程才需要创建新的进程来代替它。</p><p>当然，你也可以用线程代替进程：主线程负责套接字初始化和子线程状态的管理，而子线程则负责实际的请求处理。由于线程的调度和切换成本比较低，实际上你可以进一步把 epoll_wait() 都放到主线程中，保证每次事件都只唤醒主线程，而子线程只需要负责后续的请求处理。</p><p><strong>第二种，监听到相同端口的多进程模型</strong>。在这种方式下，所有的进程都监听相同的接口，并且开启 SO_REUSEPORT 选项，由内核负责将请求负载均衡到这些监听进程中去。这一过程如下图所示。</p><p><img src=\"https://static001.geekbang.org/resource/image/90/bd/90df0945f6ce5c910ae361bf2b135bbd.png?wh=436*462\" alt=\"\"></p><p>由于内核确保了只有一个进程被唤醒，就不会出现惊群问题了。比如，Nginx 在 1.9.1 中就已经支持了这种模式。</p><p><img src=\"https://static001.geekbang.org/resource/image/af/38/af2e6c3a19a6e90098772b5df0605b38.png?wh=850*780\" alt=\"\"><br>\n（图片来自 <a href=\"https://www.nginx.com/blog/socket-sharding-nginx-release-1-9-1/\">Nginx 官网博客</a>）</p><p>不过要注意，想要使用SO_REUSEPORT选项，需要用 Linux 3.9 以上的版本才可以。</p><h2>C1000K</h2><p>基于 I/O 多路复用和请求处理的优化，C10K 问题很容易就可以解决。不过，随着摩尔定律带来的服务器性能提升，以及互联网的普及，你并不难想到，新兴服务会对性能提出更高的要求。</p><p>很快，原来的 C10K 已经不能满足需求，所以又有了 C100K 和 C1000K，也就是并发从原来的 1 万增加到10 万、乃至 100 万。从 1 万到 10 万，其实还是基于 C10K 的这些理论，epoll 配合线程池，再加上 CPU、内存和网络接口的性能和容量提升。大部分情况下，C100K 很自然就可以达到。</p><p>那么，再进一步，C1000K 是不是也可以很容易就实现呢？这其实没有那么简单了。</p><p>首先从物理资源使用上来说，100 万个请求需要大量的系统资源。比如，</p><ul>\n<li>\n<p>假设每个请求需要 16KB 内存的话，那么总共就需要大约 15 GB 内存。</p>\n</li>\n<li>\n<p>而从带宽上来说，假设只有 20% 活跃连接，即使每个连接只需要 1KB/s 的吞吐量，总共也需要 1.6 Gb/s 的吞吐量。千兆网卡显然满足不了这么大的吞吐量，所以还需要配置万兆网卡，或者基于多网卡 Bonding 承载更大的吞吐量。</p>\n</li>\n</ul><p>其次，从软件资源上来说，大量的连接也会占用大量的软件资源，比如文件描述符的数量、连接状态的跟踪（CONNTRACK）、网络协议栈的缓存大小（比如套接字读写缓存、TCP 读写缓存）等等。</p><p>最后，大量请求带来的中断处理，也会带来非常高的处理成本。这样，就需要多队列网卡、中断负载均衡、CPU 绑定、RPS/RFS（软中断负载均衡到多个 CPU 核上），以及将网络包的处理卸载（Offload）到网络设备（如 TSO/GSO、LRO/GRO、VXLAN OFFLOAD）等各种硬件和软件的优化。</p><p>C1000K 的解决方法，本质上还是构建在 epoll 的非阻塞 I/O 模型上。只不过，除了 I/O 模型之外，还需要从应用程序到 Linux 内核、再到 CPU、内存和网络等各个层次的深度优化，特别是需要借助硬件，来卸载那些原来通过软件处理的大量功能。</p><h2>C10M</h2><p>显然，人们对于性能的要求是无止境的。再进一步，有没有可能在单机中，同时处理 1000 万的请求呢？这也就是 <a href=\"http://c10m.robertgraham.com/p/blog-page.html\">C10M</a> 问题。</p><p>实际上，在 C1000K 问题中，各种软件、硬件的优化很可能都已经做到头了。特别是当升级完硬件（比如足够多的内存、带宽足够大的网卡、更多的网络功能卸载等）后，你可能会发现，无论你怎么优化应用程序和内核中的各种网络参数，想实现 1000 万请求的并发，都是极其困难的。</p><p>究其根本，还是 Linux 内核协议栈做了太多太繁重的工作。从网卡中断带来的硬中断处理程序开始，到软中断中的各层网络协议处理，最后再到应用程序，这个路径实在是太长了，就会导致网络包的处理优化，到了一定程度后，就无法更进一步了。</p><p>要解决这个问题，最重要就是跳过内核协议栈的冗长路径，把网络包直接送到要处理的应用程序那里去。这里有两种常见的机制，DPDK 和 XDP。</p><p>第一种机制，DPDK，是用户态网络的标准。它跳过内核协议栈，直接由用户态进程通过轮询的方式，来处理网络接收。</p><p><img src=\"https://static001.geekbang.org/resource/image/99/3a/998fd2f52f0a48a910517ada9f2bb23a.png?wh=1600*1532\" alt=\"\"><br>\n（图片来自 <a href=\"https://blog.selectel.com/introduction-dpdk-architecture-principles/\">https://blog.selectel.com/introduction-dpdk-architecture-principles/</a>）</p><p>说起轮询，你肯定会下意识认为它是低效的象征，但是进一步反问下自己，它的低效主要体现在哪里呢？是查询时间明显多于实际工作时间的情况下吧！那么，换个角度来想，如果每时每刻都有新的网络包需要处理，轮询的优势就很明显了。比如：</p><ul>\n<li>\n<p>在 PPS 非常高的场景中，查询时间比实际工作时间少了很多，绝大部分时间都在处理网络包；</p>\n</li>\n<li>\n<p>而跳过内核协议栈后，就省去了繁杂的硬中断、软中断再到 Linux 网络协议栈逐层处理的过程，应用程序可以针对应用的实际场景，有针对性地优化网络包的处理逻辑，而不需要关注所有的细节。</p>\n</li>\n</ul><p>此外，DPDK 还通过大页、CPU 绑定、内存对齐、流水线并发等多种机制，优化网络包的处理效率。</p><p>第二种机制，XDP（eXpress Data Path），则是 Linux 内核提供的一种高性能网络数据路径。它允许网络包，在进入内核协议栈之前，就进行处理，也可以带来更高的性能。XDP 底层跟我们之前用到的 bcc-tools 一样，都是基于 Linux 内核的 eBPF 机制实现的。</p><p>XDP 的原理如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/06/be/067ef9df4212cd4ede3cffcdac7001be.png?wh=1024*560\" alt=\"\"><br>\n（图片来自 <a href=\"https://www.iovisor.org/technology/xdp\">https://www.iovisor.org/technology/xdp</a>）</p><p>你可以看到，XDP 对内核的要求比较高，需要的是 Linux <a href=\"https://github.com/iovisor/bcc/blob/master/docs/kernel-versions.md#xdp\">4.8 以上版本</a>，并且它也不提供缓存队列。基于 XDP 的应用程序通常是专用的网络应用，常见的有 IDS（入侵检测系统）、DDoS 防御、 <a href=\"https://github.com/cilium/cilium\">cilium</a> 容器网络插件等。</p><h2>小结</h2><p>今天我带你回顾了经典的 C10K 问题，并进一步延伸到了C1000K 和 C10M 问题。</p><p>C10K 问题的根源，一方面在于系统有限的资源；另一方面，也是更重要的因素，是同步阻塞的 I/O 模型以及轮询的套接字接口，限制了网络事件的处理效率。Linux 2.6 中引入的 epoll ，完美解决了 C10K 的问题，现在的高性能网络方案都基于 epoll。</p><p>从 C10K 到 C100K ，可能只需要增加系统的物理资源就可以满足；但从 C100K 到 C1000K ，就不仅仅是增加物理资源就能解决的问题了。这时，就需要多方面的优化工作了，从硬件的中断处理和网络功能卸载、到网络协议栈的文件描述符数量、连接状态跟踪、缓存队列等内核的优化，再到应用程序的工作模型优化，都是考虑的重点。</p><p>再进一步，要实现 C10M ，就不只是增加物理资源，或者优化内核和应用程序可以解决的问题了。这时候，就需要用 XDP 的方式，在内核协议栈之前处理网络包；或者用 DPDK 直接跳过网络协议栈，在用户空间通过轮询的方式直接处理网络包。</p><p>当然了，实际上，在大多数场景中，我们并不需要单机并发 1000 万的请求。通过调整系统架构，把这些请求分发到多台服务器中来处理，通常是更简单和更容易扩展的方案。</p><h2>思考</h2><p>最后，我想请你来聊聊，你所理解的 C10K 和 C1000K 问题。你碰到过哪些网络并发相关的性能瓶颈？你又是怎么样来分析它们的呢？你可以结合今天学到的网络知识，提出自己的观点。</p><p>欢迎在留言区和我讨论，也欢迎你把这篇文章分享给你的同事、朋友。我们一起在实战中演练，在交流中进步。</p>","neighbors":{"left":{"article_title":"34 | 关于 Linux 网络，你必须知道这些（下）","id":81057},"right":{"article_title":"36 | 套路篇：怎么评估系统的网络性能？","id":81497}},"comments":[{"had_liked":false,"id":83580,"user_name":"双","can_delete":false,"product_type":"c1","uid":1226462,"ip_address":"","ucode":"9A6A370DAD648E","user_header":"https://static001.geekbang.org/account/avatar/00/12/b6/de/95dc7537.jpg","comment_is_top":false,"comment_ctime":1554660599,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"267842632951","product_id":100020901,"comment_content":"select&#47;poll是LT模式，epoll缺省使用的也是水平触发模式（LT）。<br>目前业界对于ET的最佳实践大概就是Nginx了，单线程redis也是使用的LT<br>说下我对水平触发（LT）和边缘触发（ET）我的理解。<br>LT:文件描述符准备就绪时（FD关联的读缓冲区不为空，可读。写缓冲区还没满，可写），触发通知。<br>也就是你文中表述的&quot;只要文件描述符可以非阻塞地执行 I&#47;O ，就会触发通知...&quot;<br>ET:当FD关联的缓冲区发生变化时（例如：读缓冲区由空变为非空，有新数据达到，可读。写缓冲区满变有空间了，有数据被发送走，可写），触发通知，仅此一次<br>也就是你文中表述的&quot;只有在文件描述符的状态发生改变（也就是 I&#47;O 请求达到）时&quot;<br><br>","like_count":63,"discussions":[{"author":{"id":2341231,"avatar":"https://static001.geekbang.org/account/avatar/00/23/b9/6f/b40d1acf.jpg","nickname":"mkcaptain","note":"","ucode":"0BF1BAE12B0C11","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589546,"discussion_content":"还是没懂，这个概念认知复杂度有点儿高，能再展开说说吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665105692,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69199,"user_name":"Maxwell","can_delete":false,"product_type":"c1","uid":1086275,"ip_address":"","ucode":"720A00AD472616","user_header":"https://static001.geekbang.org/account/avatar/00/10/93/43/0e84492d.jpg","comment_is_top":false,"comment_ctime":1550676187,"is_pvip":false,"replies":[{"id":"24835","content":"如果是只有一个IP地址的客户端，那的确是受限于端口数量。<br><br>不过，如果是服务器端，那可以接受的连接就多得多了（组合客户端IP+端口）。","user_name":"作者回复","comment_id":69199,"uid":"1001282","ip_address":"","utype":1,"ctime":1550848763,"user_name_real":"倪朋飞"}],"discussion_count":4,"race_medal":0,"score":"151874531547","product_id":100020901,"comment_content":"一台机器不是只有65536个端口吗，每个网络请求都需要消耗一个端口，这样大于65536个请求会不会导致端口不够用呢？","like_count":36,"discussions":[{"author":{"id":1020028,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/7c/99806536.jpg","nickname":"一天到晚游泳的鱼","note":"","ucode":"645C9442DF3811","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":190520,"discussion_content":"连接数量是由服务器ip,端口,客户端ip,端口的四元组决定的","likes_number":19,"is_delete":false,"is_hidden":false,"ctime":1582953673,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439996,"discussion_content":"如果是只有一个IP地址的客户端，那的确是受限于端口数量。\n\n不过，如果是服务器端，那可以接受的连接就多得多了（组合客户端IP+端口）。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1550848763,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1055994,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1c/fa/fc5d1819.jpg","nickname":"k","note":"","ucode":"D79B878A79C8D0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":272430,"discussion_content":"一个listen端口理论上可以建立/proc/sys/fs/file-max 数量的链接","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1590305969,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1315869,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erPN3WJcBzetTFhTTNIBgkGVVVK3ibEL5r5YDqDXMNrn8ety7AOLnww35sUffJR5jWlrLzVeMr84ZQ/132","nickname":"24kliu","note":"","ucode":"2BE93B0478DA55","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":235005,"discussion_content":"补充下：作为客户端时连接不同的服务器端口可以复复用，即四元组，需要kernel>3.2","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587011614,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90176,"user_name":"涛涛","can_delete":false,"product_type":"c1","uid":1180810,"ip_address":"","ucode":"747C4B1F20A2D3","user_header":"https://static001.geekbang.org/account/avatar/00/12/04/8a/ff94bd60.jpg","comment_is_top":false,"comment_ctime":1556440302,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"108930622702","product_id":100020901,"comment_content":"10k并发：epoll+线程池；<br>100K：增加物理资源；<br>1000k：更高的系统优化（软件的功能交给专业硬件）；<br>10mk:dpdx xdp","like_count":24},{"had_liked":false,"id":81760,"user_name":"挺直腰板","can_delete":false,"product_type":"c1","uid":1178397,"ip_address":"","ucode":"B7DD679A3A4EEB","user_header":"https://static001.geekbang.org/account/avatar/00/11/fb/1d/12c7c021.jpg","comment_is_top":false,"comment_ctime":1554027437,"is_pvip":false,"replies":[{"id":"29847","content":"注意区分客户端还是服务器端：客户端使用单个IP去访问服务器的时候，端口号数是最大限制；服务器端没有这个限制。","user_name":"作者回复","comment_id":81760,"uid":"1001282","ip_address":"","utype":1,"ctime":1554210956,"user_name_real":"倪朋飞"}],"discussion_count":2,"race_medal":0,"score":"61683569581","product_id":100020901,"comment_content":"老师，很多人都说并发数不能超过65536，假如访问服务器80端口，服务器ip是183.3.226.35这个，客户端ip是58.62.30.2，超过65536端口如何显示，是这样183.3.226.35 58.62.30.2:80？单机最大并发的连接数据是多少？谢谢！","like_count":15,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445334,"discussion_content":"注意区分客户端还是服务器端：客户端使用单个IP去访问服务器的时候，端口号数是最大限制；服务器端没有这个限制。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1554210956,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1112139,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/4b/5ae62b10.jpg","nickname":"Geek_b04b12","note":"","ucode":"F8705A21FCDF09","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6565,"discussion_content":"服务器端对外一般只开放80端口或者443(https),一般的系统占用端口都是小于1025，客户端都会提供一个端口（随机）去监听服务器的端口","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1566976993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":199131,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1119593,"ip_address":"","ucode":"94656FE4A6C378","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","comment_is_top":false,"comment_ctime":1585479807,"is_pvip":true,"discussion_count":6,"race_medal":0,"score":"57420054655","product_id":100020901,"comment_content":"网络一直是盲区，看完之后懂了一些，不懂的更多了。","like_count":14,"discussions":[{"author":{"id":1447569,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/WtHCCMoLJ2DvzqQwPYZyj2RlN7eibTLMHDMTSO4xIKjfKR1Eh9L98AMkkZY7FmegWyGLahRQJ5ibPzeeFtfpeSow/132","nickname":"脱缰的野马__","note":"","ucode":"D5F993E7232C61","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369565,"discussion_content":"从不知道自己不知道  到  知道自己不知道，其实就是一种进步！","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1619082797,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2806043,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLBFkSq1oiaEMRjtyyv4ZpCI0OuaSsqs04ODm0OkZF6QhsAh3SvqhxibS2n7PLAVZE3QRSn5Hic0DyXg/132","nickname":"ddh","note":"","ucode":"8E852375365F16","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1447569,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/WtHCCMoLJ2DvzqQwPYZyj2RlN7eibTLMHDMTSO4xIKjfKR1Eh9L98AMkkZY7FmegWyGLahRQJ5ibPzeeFtfpeSow/132","nickname":"脱缰的野马__","note":"","ucode":"D5F993E7232C61","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541353,"discussion_content":"好吧， 给你点赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640338956,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":369565,"ip_address":""},"score":541353,"extra":""}]},{"author":{"id":2031689,"avatar":"","nickname":"不凡","note":"","ucode":"28A3EC4C309C56","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":359266,"discussion_content":"你不是一个人","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1616154476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2806043,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLBFkSq1oiaEMRjtyyv4ZpCI0OuaSsqs04ODm0OkZF6QhsAh3SvqhxibS2n7PLAVZE3QRSn5Hic0DyXg/132","nickname":"ddh","note":"","ucode":"8E852375365F16","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541354,"discussion_content":"越看感觉自己越菜","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640338971,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2136069,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/rxz5aKicRkvqWmt6c6c7eayHvh577uibBTVQzcJKwSTqI9FaxZSRlx7NRVw4atWpqER8ncA5jErQb3wb4cPzZxlA/132","nickname":"Geek_065895","note":"","ucode":"2E6FCCC78E5767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333147,"discussion_content":"干货很多呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607440893,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2060756,"avatar":"","nickname":"在下蟑螂王","note":"","ucode":"E66A65A327095A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302334,"discussion_content":"👍🏻👍🏻👍🏻","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598880129,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":236038,"user_name":"Geek_9815f1","can_delete":false,"product_type":"c1","uid":2068424,"ip_address":"","ucode":"34EE8566A53F10","user_header":"","comment_is_top":false,"comment_ctime":1595296439,"is_pvip":false,"replies":[{"id":"87249","content":"👍 还是要以文档为准","user_name":"作者回复","comment_id":236038,"uid":"1001282","ip_address":"","utype":1,"ctime":1595342699,"user_name_real":"倪朋飞"}],"discussion_count":3,"race_medal":0,"score":"48839936695","product_id":100020901,"comment_content":"老师，redis的采用水平触发的epoll。 nginx 采用 垂直触发的epoll 。所以epoll跟 触发方式无关。老师，你的一言一语对于小白  都是圣经， 好好斟酌","like_count":11,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501922,"discussion_content":"👍 还是要以文档为准","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595342699,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1008348,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/dc/8876c73b.jpg","nickname":"moooofly","note":"","ucode":"4A20795C281B6F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551304,"discussion_content":"&#34;所以epoll跟 触发方式无关&#34;--这个说法有点问题吧，触发方式决定了后续的处理逻辑，只能说两个开源软件在使用 epoll 的时候，基于不同的目的，采用了不同处理逻辑而已","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1644979509,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1926057,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/63/a9/abed781e.jpg","nickname":"李維道","note":"","ucode":"9A16ECAB2522E3","race_medal":5,"user_type":1,"is_pvip":true},"reply_author":{"id":1008348,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/dc/8876c73b.jpg","nickname":"moooofly","note":"","ucode":"4A20795C281B6F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590637,"discussion_content":"确实大大有关系。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665938714,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":551304,"ip_address":"中国台湾"},"score":590637,"extra":""}]}]},{"had_liked":false,"id":128280,"user_name":"zzyalbert","can_delete":false,"product_type":"c1","uid":1318448,"ip_address":"","ucode":"A6E3691ADCAECA","user_header":"","comment_is_top":false,"comment_ctime":1566868202,"is_pvip":false,"discussion_count":7,"race_medal":0,"score":"23041704682","product_id":100020901,"comment_content":"为什么select是o（n^2）poll是o（n）？","like_count":5,"discussions":[{"author":{"id":1636551,"avatar":"https://static001.geekbang.org/account/avatar/00/18/f8/c7/d0c0a613.jpg","nickname":"大地","note":"","ucode":"62D9098C0BCE13","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":279186,"discussion_content":"这个地方写的有问题，应该都是O(N) ，要是O(N^2)就别玩了，1024个socket的平方就是100万了","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1591287668,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1206935,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6a/97/9422bf31.jpg","nickname":"TTY","note":"","ucode":"D097636D322215","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":187994,"discussion_content":"有同样的疑问，poll也该也是O(n^2)吧？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1582786085,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1415619,"avatar":"https://static001.geekbang.org/account/avatar/00/15/99/c3/e4f408d4.jpg","nickname":"陌兮","note":"","ucode":"00CE47CAECD5CD","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578489,"discussion_content":"这里的O(n^2)，应该是指应用端先遍历一遍，然后拿到io请求集合之后内核再遍历一遍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656823849,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2542376,"avatar":"https://static001.geekbang.org/account/avatar/00/26/cb/28/21a8a29e.jpg","nickname":"夏天","note":"","ucode":"5F224DDAC94DFF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":372090,"discussion_content":"都是O(n)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620183019,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1045634,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f4/82/466ecee2.jpg","nickname":"方木木","note":"","ucode":"44E0C9318DF794","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288622,"discussion_content":"应该是select成功返回前，在select内部设置准备就绪的实现复杂度是N，拿到返回结果后，应用程序拿到后再遍历一遍是N","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593827741,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1543040,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8b/80/8702bd5f.jpg","nickname":"evan","note":"","ucode":"491B073D5AFEDE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1045634,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f4/82/466ecee2.jpg","nickname":"方木木","note":"","ucode":"44E0C9318DF794","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318059,"discussion_content":"应用程序在select返回后还要遍历吗..没用过select...","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603634088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":288622,"ip_address":""},"score":318059,"extra":""},{"author":{"id":1959822,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/e7/8e/318cfde0.jpg","nickname":"Spoon","note":"","ucode":"2FF9193AD482C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1543040,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8b/80/8702bd5f.jpg","nickname":"evan","note":"","ucode":"491B073D5AFEDE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332301,"discussion_content":"需要遍历，看下Unix网络编程那本书","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607154048,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":318059,"ip_address":""},"score":332301,"extra":""}]}]},{"had_liked":false,"id":66536,"user_name":"我来也","can_delete":false,"product_type":"c1","uid":1205253,"ip_address":"","ucode":"773D6104F56767","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","comment_is_top":false,"comment_ctime":1549954631,"is_pvip":false,"replies":[{"id":"23728","content":"其实并不是 65530，Linux使用五元组标志一个连接：协议、源IP、源端口、目的IP、目的端口。根据这些，你可以算下理论上最大支持的连接数。","user_name":"作者回复","comment_id":66536,"uid":"1001282","ip_address":"","utype":1,"ctime":1550070469,"user_name_real":"倪朋飞"}],"discussion_count":2,"race_medal":0,"score":"23024791111","product_id":100020901,"comment_content":"[D35打卡]<br>09年那会,我所在公司的服务器端都是单进程+select.<br>后来把select换为了poll和epoll.<br>再后来还拆分成了多进程,N个网络收发层+M个业务处理层.<br>毕竟我们的情况是 业务处理的耗时远大于网络收发的耗时.<br>目前的网络收发层也只支持最大65530个并发连接,毕竟是单ip单端口的.<br>如果想支持更多并发连接,就另外再开一个进程.<br>并没有往C100K甚至是C1000K的方向上努力了.","like_count":6,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438824,"discussion_content":"其实并不是 65530，Linux使用五元组标志一个连接：协议、源IP、源端口、目的IP、目的端口。根据这些，你可以算下理论上最大支持的连接数。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1550070469,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1033066,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c3/6a/3272e095.jpg","nickname":"李春恒","note":"","ucode":"F2DCA19EC66DC1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":81967,"discussion_content":"socketserver服务端的accept方法返回值socket  指的是【客户端ip+客户端port】","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576302317,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":66060,"user_name":"9527","can_delete":false,"product_type":"c1","uid":1032735,"ip_address":"","ucode":"04B51C09E3C7B8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c2/1f/343f2dec.jpg","comment_is_top":false,"comment_ctime":1549867059,"is_pvip":false,"replies":[{"id":"23696","content":"这在流量集中的场景是需要的，比如网关或者流量清洗这种安全系统上","user_name":"作者回复","comment_id":66060,"uid":"1001282","ip_address":"","utype":1,"ctime":1550067386,"user_name_real":"倪朋飞"}],"discussion_count":2,"race_medal":0,"score":"23024703539","product_id":100020901,"comment_content":"没碰到单机一千万这么夸张的场景，想问下一千万连接这种场景下，一般机器是什么配置呢<br>按这么发展下去，以后会不会出现单机1亿连接，那样的话所有处理都得硬件来完成了吧","like_count":5,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438690,"discussion_content":"这在流量集中的场景是需要的，比如网关或者流量清洗这种安全系统上","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1550067386,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1160951,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b6/f7/3c3b1385.jpg","nickname":"海胆阶段","note":"","ucode":"7A8C4BB4D0CDB8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371975,"discussion_content":"FPGA?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620111803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":66059,"user_name":"Days","can_delete":false,"product_type":"c1","uid":1317834,"ip_address":"","ucode":"4DDB1CD8F493E1","user_header":"https://static001.geekbang.org/account/avatar/00/14/1b/ca/9afb89a2.jpg","comment_is_top":false,"comment_ctime":1549867023,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23024703503","product_id":100020901,"comment_content":"总结：通过对C10K 和 C100K案例分析，总结了常见的IO模型实现框架，比较基础知识补充！","like_count":5},{"had_liked":false,"id":77503,"user_name":"深海极光","can_delete":false,"product_type":"c1","uid":1096111,"ip_address":"","ucode":"331024F7E99C64","user_header":"https://static001.geekbang.org/account/avatar/00/10/b9/af/f59b4c7c.jpg","comment_is_top":false,"comment_ctime":1552957464,"is_pvip":false,"replies":[{"id":"29611","content":"因为一次读有可能不会读到所有数据，但这种情况不会有新的事件通知了","user_name":"作者回复","comment_id":77503,"uid":"1001282","ip_address":"","utype":1,"ctime":1554019144,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"18732826648","product_id":100020901,"comment_content":"老师你好，您说到epoll 的边缘触发只在文件描述符可读或可写事件发生时才通知，那么应用程序就需要尽可能多地执行 I&#47;O，并要处理更多的异常事件，我有点不理解这个多执行IO是为什么？是指有一个文件描述符也就是链接可读或者可写时就通知应用程序一次，那么有100个链接同时都可读，就通知应用程序100次吗，应用程序拿到这100个都是可读的。并没有多的IO执行啥，还请老师解惑，谢谢！<br>","like_count":5,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443750,"discussion_content":"因为一次读有可能不会读到所有数据，但这种情况不会有新的事件通知了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554019144,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69609,"user_name":"杜嘉嘉","can_delete":false,"product_type":"c1","uid":1306430,"ip_address":"","ucode":"C23DE27E7886BD","user_header":"https://static001.geekbang.org/account/avatar/00/13/ef/3e/9c3a8abc.jpg","comment_is_top":false,"comment_ctime":1550796971,"is_pvip":false,"replies":[{"id":"24851","content":"还记得虚拟文件系统（VFS）吧，使用套接字接口的时候，也是要分配一个文件描述符，然后后续所有的I&#47;O都通过这个文件描述符来操作（包括IO模型中要判断可读写状态）。","user_name":"作者回复","comment_id":69609,"uid":"1001282","ip_address":"","utype":1,"ctime":1550851050,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"14435698859","product_id":100020901,"comment_content":"老师，您好。我看IO模型这块老提到文件描述符，这个跟IO模型有啥关系呢？","like_count":4,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440186,"discussion_content":"还记得虚拟文件系统（VFS）吧，使用套接字接口的时候，也是要分配一个文件描述符，然后后续所有的I/O都通过这个文件描述符来操作（包括IO模型中要判断可读写状态）。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550851050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":219673,"user_name":"Damoncui","can_delete":false,"product_type":"c1","uid":1566446,"ip_address":"","ucode":"5F09EB267F0572","user_header":"https://static001.geekbang.org/account/avatar/00/17/e6/ee/8fdbd5db.jpg","comment_is_top":false,"comment_ctime":1590061691,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10179996283","product_id":100020901,"comment_content":"干货，正在学习DPDK，受教啦~打卡 D8~","like_count":2},{"had_liked":false,"id":130348,"user_name":"小花","can_delete":false,"product_type":"c1","uid":1401483,"ip_address":"","ucode":"BFF0A1A59FD35D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/umxqic2CHGySYhT47Rz03ePCloIZ7X21dCLZMVo82m2gjhJdJVqYt3AOdZUXg1roTNSRibkj2g5eia76cbFdxjliag/132","comment_is_top":false,"comment_ctime":1567430154,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10157364746","product_id":100020901,"comment_content":"一个请求16kb，请问这个是怎么预估出来，或者任意一个请求，我如何判断它的大小？","like_count":2,"discussions":[{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":313839,"discussion_content":"比方说一个dto是1K，算上它生成时依赖的上下游数据请求响应，再乘以放大系数。放大系数是你系统的伸缩量，比方说你的系统QPS在2000，但是设计可以扛1w并发，那么放大系数你可以算作5","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603098359,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1509657,"avatar":"","nickname":"Geek_03056e","note":"","ucode":"6D4289AD71BC1A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303968,"discussion_content":"这个根据业务吧，计算一下平均值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599439703,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72614,"user_name":"科学Jia","can_delete":false,"product_type":"c1","uid":1080409,"ip_address":"","ucode":"95430413F82A69","user_header":"https://static001.geekbang.org/account/avatar/00/10/7c/59/26b1e65a.jpg","comment_is_top":false,"comment_ctime":1551678384,"is_pvip":false,"replies":[{"id":"26333","content":"是的，都需要额外的开发","user_name":"作者回复","comment_id":72614,"uid":"1001282","ip_address":"","utype":1,"ctime":1551706738,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"10141612976","product_id":100020901,"comment_content":"老师，问题1： DPDK和XDP，是不是在qps不能上去的情况下都可以采用的方案？问题2：DPDK和XDP是linux需要额外配置的工具么？","like_count":3,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441660,"discussion_content":"是的，都需要额外的开发","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551706738,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":66182,"user_name":"shawn","can_delete":false,"product_type":"c1","uid":1053716,"ip_address":"","ucode":"8F7CE170AE1F57","user_header":"","comment_is_top":false,"comment_ctime":1549889518,"is_pvip":false,"replies":[{"id":"23701","content":"要看场景的，特别是流量集中的位置（比如数据中心的入口或出口处的应用）对 PPS 的要求还是很高的","user_name":"作者回复","comment_id":66182,"uid":"1001282","ip_address":"","utype":1,"ctime":1550068132,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"10139824110","product_id":100020901,"comment_content":"我理解，流量大于十万就该用集群了吧，一堆小型机的维护和开发成本应该小于一个大家伙吧","like_count":3,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438741,"discussion_content":"要看场景的，特别是流量集中的位置（比如数据中心的入口或出口处的应用）对 PPS 的要求还是很高的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550068132,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":259870,"user_name":"唐江","can_delete":false,"product_type":"c1","uid":1878120,"ip_address":"","ucode":"867C9808CF7760","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJpJXWFP3dNle88WnTkRTsEQkPJmOhepibiaTfhEtMRrbdg5EAWm4EzurA61oKxvCK2ZjMmy1QvmChw/132","comment_is_top":false,"comment_ctime":1604879907,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5899847203","product_id":100020901,"comment_content":"老师您说，通过调整系统架构，把这些请求分发到多台服务器中来处理，通常是更简单和更容易扩展的方案。  那么我的疑问是分发设备就不会面对c10m的问题吗？还有网络中的成千上万的节点设备也会面对c10m的问题吧？","like_count":1,"discussions":[{"author":{"id":1778000,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ncicjtgbOgxk2V3VWYJQAia6VqrvHE23JVGtkQALgl6XScQmdqmKZ5RXicfw0CQ4uMplhMeeYoSZNPggBRTpQLR1Q/132","nickname":"0xkjAlbert","note":"","ucode":"B607DA1230321F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338951,"discussion_content":"网络设备比如出口防火墙，出口负载均衡等是会有这个问题的，老师的文章中也说了，可以通过硬件方式卸载，单独增加处理某个部分的针对性硬件，并对应用进行针对性开发就可以了，至于应用服务器目前我看都倾向于横向扩展，毕竟比设计硬件和专有程序，成本小的多，灵活性也高的多","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609451995,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":241813,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1597455973,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5892423269","product_id":100020901,"comment_content":"- C10K 问题解决：基于 I&#47;O 多路复用和请求处理的优化。<br>- C100k问题解决：还是基于 C10K 的这些理论，epoll 配合线程池，再加上 CPU、内存和网络接口的性能和容量提升。<br>- C1000K 的解决方法：本质上还是构建在 epoll 的非阻塞 I&#47;O 模型上。只不过，除了 I&#47;O 模型之外，还需要从应用程序到 Linux 内核、再到 CPU、内存和网络等各个层次的深度优化，特别是需要借助硬件，来卸载那些原来通过软件处理的大量功能。<br>- C10M的解决办法：在 C1000K 问题中，各种软件、硬件的优化很可能都已经做到头了，究其根本，还是 Linux 内核协议栈做了太多太繁重的工作。从网卡中断带来的硬中断处理程序开始，到软中断中的各层网络协议处理，最后再到应用程序，这个路径实在是太长了，就会导致网络包的处理优化，到了一定程度后，就无法更进一步了。要解决这个问题，最重要就是跳过内核协议栈的冗长路径，把网络包直接送到要处理的应用程序那里去。这里有两种常见的机制，DPDK 和 XDP。<br>","like_count":2},{"had_liked":false,"id":218832,"user_name":"阿飞","can_delete":false,"product_type":"c1","uid":1298046,"ip_address":"","ucode":"F8B1FC8521264D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKZicicibGibtR5zAia782Ajc5I5BN3F3tjAdlibATIknHv67gbxeH21N7B6vbgwLjYb1miaLKhqicptB5ibYw/132","comment_is_top":false,"comment_ctime":1589883192,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5884850488","product_id":100020901,"comment_content":"从资源上来说，对 2GB 内存和千兆网卡的服务器来说，同时处理 10000 个请求，只要每个请求处理占用不到 200KB（2GB&#47;10000）的内存和 100Kbit （1000Mbit&#47;10000）的网络带宽就可以.<br><br>假设每个请求包大小是1000字节，那么10000个请求合计约9216KB，对于带宽100Mbit&#47;s=12800KB&#47;s来说带宽使用率为72%","like_count":1},{"had_liked":false,"id":170616,"user_name":"Aoser","can_delete":false,"product_type":"c1","uid":1318534,"ip_address":"","ucode":"B356387524BAA7","user_header":"https://static001.geekbang.org/account/avatar/00/14/1e/86/33ccfeb7.jpg","comment_is_top":false,"comment_ctime":1578644298,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5873611594","product_id":100020901,"comment_content":"老师关于IO模型中，I&#47;O多路复用，本身不是阻塞型I&#47;O吗？比不过相比之前阻塞在了select和poll上","like_count":1,"discussions":[{"author":{"id":1543040,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8b/80/8702bd5f.jpg","nickname":"evan","note":"","ucode":"491B073D5AFEDE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318060,"discussion_content":"嗯 select/epoll本质上还是同步模型(注意和阻塞没关系/不要搞混), 真正的异步模型需要os支持(windows支持)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603634305,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109423,"user_name":"GaelYang","can_delete":false,"product_type":"c1","uid":1463730,"ip_address":"","ucode":"B8E0B2402A7DCC","user_header":"https://static001.geekbang.org/account/avatar/00/16/55/b2/d70deacf.jpg","comment_is_top":false,"comment_ctime":1562031339,"is_pvip":false,"replies":[{"id":"40093","content":"都可以","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1562249455,"ip_address":"","comment_id":109423,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5856998635","product_id":100020901,"comment_content":"原文中 C10K 和 C1000K 的首字母 C 是 Client的缩写。<br>C可能是concurrtently 的缩写 ？","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456404,"discussion_content":"都可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562249455,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97312,"user_name":"懵懂的Java","can_delete":false,"product_type":"c1","uid":1312151,"ip_address":"","ucode":"19D3BE0AA1410B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELTaqicWVpIsOpha9icy6LLJrrd24lGlwsBYhBTkBUdGHIGFXRbyZicNbSafvhMATDBjX6NSGLam9bag/132","comment_is_top":false,"comment_ctime":1558654046,"is_pvip":false,"replies":[{"id":"34970","content":"不对，不是每个请求都会直接发送给数据库","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1558793701,"ip_address":"","comment_id":97312,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5853621342","product_id":100020901,"comment_content":"老师你好，前段再多的请求数，如果后段数据库连接池设置的很小比如200最多并发不也就是200吗，不知道我理解的对不对","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451221,"discussion_content":"不对，不是每个请求都会直接发送给数据库","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558793701,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":67688,"user_name":"好好学习","can_delete":false,"product_type":"c1","uid":1258789,"ip_address":"","ucode":"63A002997462E3","user_header":"https://static001.geekbang.org/account/avatar/00/13/35/25/bab760a1.jpg","comment_is_top":false,"comment_ctime":1550222921,"is_pvip":false,"replies":[{"id":"24042","content":"我所碰到的高PPS场景都是DPDK解决的，包括虚拟化环境。上千client随机端口组合这个看起来不算高呀，不知道你在使用DPDK的时候碰到了什么问题？","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1550326077,"ip_address":"","comment_id":67688,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5845190217","product_id":100020901,"comment_content":"在UDP小包，上千client随机端口组合的情景下，对网络要求极高，特别在虚拟机环境下，DPDK解决不了，DPDK还是偏向吞吐率较高，四元组比较集中复用的情景。","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439328,"discussion_content":"我所碰到的高PPS场景都是DPDK解决的，包括虚拟化环境。上千client随机端口组合这个看起来不算高呀，不知道你在使用DPDK的时候碰到了什么问题？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550326077,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":66706,"user_name":"刘士涛","can_delete":false,"product_type":"c1","uid":1192218,"ip_address":"","ucode":"6D83F766D189E5","user_header":"https://static001.geekbang.org/account/avatar/00/12/31/1a/fd82b2d5.jpg","comment_is_top":false,"comment_ctime":1549983602,"is_pvip":false,"replies":[{"id":"23709","content":"嗯，不过现在网络库已经不是个大问题了，特别是新型的语言（比如 Go）都内置了很好用的网络库","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1550069079,"ip_address":"","comment_id":66706,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5844950898","product_id":100020901,"comment_content":"推荐陈硕的 muduo网络库，就是采用reator模式(epoll)+线程池实现的，写的非常好","like_count":2,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438872,"discussion_content":"嗯，不过现在网络库已经不是个大问题了，特别是新型的语言（比如 Go）都内置了很好用的网络库","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550069079,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":66467,"user_name":"dahey","can_delete":false,"product_type":"c1","uid":1033381,"ip_address":"","ucode":"B2657BB10ABAE4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/a5/716951be.jpg","comment_is_top":false,"comment_ctime":1549942887,"is_pvip":false,"replies":[{"id":"23730","content":"嗯嗯，不过真正做到单机C10M的应用还是少数，毕竟工程实现太复杂了","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1550070626,"ip_address":"","comment_id":66467,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5844910183","product_id":100020901,"comment_content":"整个世界都在解决C10M的问题：http:&#47;&#47;highscalability.com&#47;blog&#47;2013&#47;5&#47;13&#47;the-secret-to-10-million-concurrent-connections-the-kernel-i.html","like_count":2,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438809,"discussion_content":"嗯嗯，不过真正做到单机C10M的应用还是少数，毕竟工程实现太复杂了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550070626,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325074,"user_name":"Geek_577a0c","can_delete":false,"product_type":"c1","uid":1726965,"ip_address":"","ucode":"4A60D8F2700AAB","user_header":"https://static001.geekbang.org/account/avatar/00/1a/59/f5/78883d24.jpg","comment_is_top":false,"comment_ctime":1638798632,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638798632","product_id":100020901,"comment_content":"想了解select、poll、epoll该看哪方面的资料","like_count":0},{"had_liked":false,"id":323451,"user_name":"RunBoying","can_delete":false,"product_type":"c1","uid":1204423,"ip_address":"","ucode":"C027A4DBCC6030","user_header":"https://static001.geekbang.org/account/avatar/00/12/60/c7/2b2a0695.jpg","comment_is_top":false,"comment_ctime":1637909330,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637909330","product_id":100020901,"comment_content":"老师请教下，上节课的全连接队列长度会不会影响到最大连接数，是怎么影响的","like_count":0},{"had_liked":false,"id":279060,"user_name":"鱼","can_delete":false,"product_type":"c1","uid":1487584,"ip_address":"","ucode":"89EC9CE3AD0281","user_header":"https://static001.geekbang.org/account/avatar/00/16/b2/e0/d856f5a4.jpg","comment_is_top":false,"comment_ctime":1613578936,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1613578936","product_id":100020901,"comment_content":"“监听到相同端口的多进程模型”工作模式相对于“主进程 + 多个 worker 子进程”工作模式，除了天然的规避了惊群问题之外，还带来了更优的负载均衡效果。以Nginx为例，老版本“主进程 + 多个 worker 子进程”工作模式需要在用户空间调整获取accept_mutex互斥锁的几率调整多个Worker子进程的负载均衡。使用reuserport方式之后，每个worker子进程有独立的accept队列，由内核负责向不同的队列分配新连接的socket。","like_count":0},{"had_liked":false,"id":265003,"user_name":"姜姜","can_delete":false,"product_type":"c1","uid":1120332,"ip_address":"","ucode":"1DAD620C8E9F31","user_header":"https://static001.geekbang.org/account/avatar/00/11/18/4c/e12f3b41.jpg","comment_is_top":false,"comment_ctime":1606731346,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606731346","product_id":100020901,"comment_content":"老师，一般我们说的C10K到C1000K模型，都是基于tcp的服务器，用epoll加上性能优化实现。那么对基于udp的服务器，实现C10K或C1000K有什么好的建议呢？(虽然udp没有连接的概念，但可以假设一个四元组来代表一个建立的连接)","like_count":0},{"had_liked":false,"id":258987,"user_name":"凯","can_delete":false,"product_type":"c1","uid":1405256,"ip_address":"","ucode":"60DB11CF72C7B0","user_header":"https://static001.geekbang.org/account/avatar/00/15/71/48/44df7f4e.jpg","comment_is_top":false,"comment_ctime":1604590501,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604590501","product_id":100020901,"comment_content":"篇篇都很精彩，作者真是大牛，","like_count":0},{"had_liked":false,"id":258514,"user_name":"凯文小猪","can_delete":false,"product_type":"c1","uid":1980201,"ip_address":"","ucode":"36D8AD0229547F","user_header":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","comment_is_top":false,"comment_ctime":1604470771,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1604470771","product_id":100020901,"comment_content":"关于异步IO，请教一个问题。操作系统通知应用程序后，是把IO结果放在用户态还是内核态？是否需要应用程序自己做一次CPU拷贝？","like_count":0,"discussions":[{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389478,"discussion_content":"嗯 标准的实现确实是打到程序用户态 唤醒后执行 但是对 内核要求更高。windows实现是IOCP","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629289660,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1120332,"avatar":"https://static001.geekbang.org/account/avatar/00/11/18/4c/e12f3b41.jpg","nickname":"姜姜","note":"","ucode":"1DAD620C8E9F31","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330921,"discussion_content":"异步IO就是内核将数据直接推到用户态缓冲区里了。linux目前并不支持真正的异步IO，windows的完成端口支持。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606730609,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":241771,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1597416791,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1597416791","product_id":100020901,"comment_content":"现如今由于硬件物力资源，以及分布式集群的普及和廉价，高并发应该说不再成问题了。老师觉得如今企业级产品的关注点在哪里","like_count":0,"discussions":[{"author":{"id":1543040,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8b/80/8702bd5f.jpg","nickname":"evan","note":"","ucode":"491B073D5AFEDE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318061,"discussion_content":"开发效能 快速迭代","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603634332,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239778,"user_name":"向文超","can_delete":false,"product_type":"c1","uid":1976384,"ip_address":"","ucode":"3DA58D26FF8FCB","user_header":"https://static001.geekbang.org/account/avatar/00/1e/28/40/1c1a34c7.jpg","comment_is_top":false,"comment_ctime":1596639150,"is_pvip":false,"replies":[{"id":"88787","content":"怎么突破的？可以分享一下详细的步骤","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1596977456,"ip_address":"","comment_id":239778,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1596639150","product_id":100020901,"comment_content":"老师您好，应对高并发也需要调整关于打开文件数的参数，如ulimit -n或fs.file-max等。其中fs.file-max是控制系统中所有进程允许打开的文件总数。但我实际测试发现进程可以突破fs.file-max设置的总数限制，这是为什么呢？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503217,"discussion_content":"怎么突破的？可以分享一下详细的步骤","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596977456,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226423,"user_name":"慕容","can_delete":false,"product_type":"c1","uid":1086319,"ip_address":"","ucode":"BEE694935853E1","user_header":"https://static001.geekbang.org/account/avatar/00/10/93/6f/5ab3da19.jpg","comment_is_top":false,"comment_ctime":1592097401,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592097401","product_id":100020901,"comment_content":"老师，咨询一下为什么select是o（n^2）poll是o（n）？<br><br>select提到需要轮询，poll除了文件描述符没有限制外，没有看到是否需要轮序的描述呢？","like_count":0},{"had_liked":false,"id":224724,"user_name":"jorin@zou","can_delete":false,"product_type":"c1","uid":1564869,"ip_address":"","ucode":"A8CEF7CCF33570","user_header":"https://static001.geekbang.org/account/avatar/00/17/e0/c5/c324a7de.jpg","comment_is_top":false,"comment_ctime":1591521828,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1591521828","product_id":100020901,"comment_content":"select 内部，检查套接字状态是用轮询的方法，再加上应用软件使用时的轮询，就变成了一个 O(n^2) 的关系。?<br>为什么是O(n^2)，感觉是O(n)","like_count":0,"discussions":[{"author":{"id":1367483,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/FZcFOjpBplrAYsUcmPhO0kUmfcqvA4WpXzDWvBw6hEILHR3EqGzPYjnibyz3pUKNdfjsSYibLRZhlZS82SoaRAWg/132","nickname":"Brother_Gao","note":"","ucode":"37119D9CA3DC1A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310906,"discussion_content":"这个地方，我也不能理解，为什么是O(n^2)?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602122128,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":224722,"user_name":"jorin@zou","can_delete":false,"product_type":"c1","uid":1564869,"ip_address":"","ucode":"A8CEF7CCF33570","user_header":"https://static001.geekbang.org/account/avatar/00/17/e0/c5/c324a7de.jpg","comment_is_top":false,"comment_ctime":1591521403,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1591521403","product_id":100020901,"comment_content":"这一章出现了很多新名词，沟起我的兴趣和求知欲","like_count":0,"discussions":[{"author":{"id":1231289,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM56TmIEXDkHOfMNr7cAlCyGSQHiab7frfp59ibfuIibyPcpG1vugMLjNDeosfewg3sUkIfE0mzicqGgtw/132","nickname":"北极熊","note":"","ucode":"80B9CB59E151CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590481,"discussion_content":"简称 勾起了性 n欲","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665806626,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":219963,"user_name":"向南","can_delete":false,"product_type":"c1","uid":2007213,"ip_address":"","ucode":"F4D2AB9D5DDFD9","user_header":"","comment_is_top":false,"comment_ctime":1590126571,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590126571","product_id":100020901,"comment_content":"这一章值得反复看，解决我好多疑问","like_count":0},{"had_liked":false,"id":209639,"user_name":"joseph.herder💭.","can_delete":false,"product_type":"c1","uid":1006963,"ip_address":"","ucode":"632A743D6B7355","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5d/73/742097e2.jpg","comment_is_top":false,"comment_ctime":1587574522,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1587574522","product_id":100020901,"comment_content":"一般的网站应用服务器达到多少k就够了？然后就是加机器负载均衡。","like_count":0},{"had_liked":false,"id":208018,"user_name":"凌空飞起的剪刀腿","can_delete":false,"product_type":"c1","uid":1243680,"ip_address":"","ucode":"16FBBF4A3B54C6","user_header":"https://static001.geekbang.org/account/avatar/00/12/fa/20/0f06b080.jpg","comment_is_top":false,"comment_ctime":1587257220,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587257220","product_id":100020901,"comment_content":"10k并发：epoll+线程池；<br>100K：增加物理资源；<br>1000k：更高的系统优化（软件的功能交给专业硬件）；<br>10mk:dpdx xdp","like_count":0},{"had_liked":false,"id":126231,"user_name":"GeekCoder","can_delete":false,"product_type":"c1","uid":1523315,"ip_address":"","ucode":"14BB73CBE28545","user_header":"","comment_is_top":false,"comment_ctime":1566351614,"is_pvip":false,"replies":[{"id":"47205","content":"c10k对服务器要求很低，甚至个人开发机都可以；c10m对硬件有一些要求，比如需要支持dpdk的网卡","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1566743321,"ip_address":"","comment_id":126231,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566351614","product_id":100020901,"comment_content":"想问一下c10,c1000k,c10m这些都是基于什么服务器配置？比如怎么样的服务器实现了","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463897,"discussion_content":"c10k对服务器要求很低，甚至个人开发机都可以；c10m对硬件有一些要求，比如需要支持dpdk的网卡","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566743321,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110851,"user_name":"JJj","can_delete":false,"product_type":"c1","uid":1196463,"ip_address":"","ucode":"EA53F2CEAFCFF1","user_header":"https://static001.geekbang.org/account/avatar/00/12/41/af/4307867a.jpg","comment_is_top":false,"comment_ctime":1562377323,"is_pvip":false,"replies":[{"id":"40446","content":"poll需要轮询查询每个fd的状态，所以时间复杂度是O(N)，N是fd的个数","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1562510472,"ip_address":"","comment_id":110851,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562377323","product_id":100020901,"comment_content":"请问下在 poll内部，检查套接字状态不是用轮询方法吗？为什么时间复杂度是O（N）<br>","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457091,"discussion_content":"poll需要轮询查询每个fd的状态，所以时间复杂度是O(N)，N是fd的个数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562510472,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109852,"user_name":"k","can_delete":false,"product_type":"c1","uid":1250383,"ip_address":"","ucode":"612C04D327D7BB","user_header":"https://static001.geekbang.org/account/avatar/00/13/14/4f/4d5efcf9.jpg","comment_is_top":false,"comment_ctime":1562121119,"is_pvip":false,"replies":[{"id":"40448","content":"嗯嗯，其实DPDK本身就包含了大量的软硬件优化","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1562510541,"ip_address":"","comment_id":109852,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562121119","product_id":100020901,"comment_content":"那性价比最高的C1000K方案是不是epoll多线程+dpdk？这样好像也不需要对硬件进行过多的优化","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456605,"discussion_content":"嗯嗯，其实DPDK本身就包含了大量的软硬件优化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562510541,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105400,"user_name":"bigzuo","can_delete":false,"product_type":"c1","uid":1224554,"ip_address":"","ucode":"448C258D31A8A6","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/RQdib68D7dsoFlYXOweiaPqLrcyn2jD6DCGnz8nc2VFmhmX0bpGTeSrVM5M9Qs7ibIInAmt5MeLcpcNja5YjyZCIg/132","comment_is_top":false,"comment_ctime":1560992951,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560992951","product_id":100020901,"comment_content":"内容非常赞！","like_count":0},{"had_liked":false,"id":101515,"user_name":"孙成子","can_delete":false,"product_type":"c1","uid":1317819,"ip_address":"","ucode":"7DF58E9202FC60","user_header":"https://static001.geekbang.org/account/avatar/00/14/1b/bb/4a749b6c.jpg","comment_is_top":false,"comment_ctime":1559835250,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559835250","product_id":100020901,"comment_content":"到了硬骨头了，网络不太懂，努力学习","like_count":0},{"had_liked":false,"id":98356,"user_name":"kubxy","can_delete":false,"product_type":"c1","uid":1514411,"ip_address":"","ucode":"EDA317D303CC42","user_header":"https://static001.geekbang.org/account/avatar/00/17/1b/ab/a5f88914.jpg","comment_is_top":false,"comment_ctime":1558966868,"is_pvip":false,"replies":[{"id":"35922","content":"HTTP2支持多路复用","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1559429154,"ip_address":"","comment_id":98356,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1558966868","product_id":100020901,"comment_content":"老师，我是疑问是TCP连接和HTTP请求的关系，一万并发请求需要建立一万个TCP连接吗？即一个TCP连接同一个时间点只能发送一个HTTP请求，是这样吗？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451654,"discussion_content":"HTTP2支持多路复用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559429154,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79491,"user_name":"如果","can_delete":false,"product_type":"c1","uid":1320638,"ip_address":"","ucode":"138A3EEEE50850","user_header":"","comment_is_top":false,"comment_ctime":1553497265,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553497265","product_id":100020901,"comment_content":"DAY35，打卡","like_count":0},{"had_liked":false,"id":76893,"user_name":"青石","can_delete":false,"product_type":"c1","uid":1215531,"ip_address":"","ucode":"B0056AD6453322","user_header":"https://static001.geekbang.org/account/avatar/00/12/8c/2b/3ab96998.jpg","comment_is_top":false,"comment_ctime":1552740845,"is_pvip":false,"replies":[{"id":"28163","content":"不是的，效率太低了，epoll才是正解","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1552904167,"ip_address":"","comment_id":76893,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552740845","product_id":100020901,"comment_content":"向老师咨询下，文中select、poll部分提到的文件描述符列表，是否可以理解为，每个客户端连接对应一个文件描述符，当有新的客户端连接时，就会将对应的文件描述符放到select、poll的文件描述符列表中中。<br><br>select的fd_setsize限制是1024，要支持C10K，至少需要100个进程&#47;线程处理请求，这样理解对吗？<br><br>","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443490,"discussion_content":"不是的，效率太低了，epoll才是正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552904167,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74201,"user_name":"好好学习","can_delete":false,"product_type":"c1","uid":1258789,"ip_address":"","ucode":"63A002997462E3","user_header":"https://static001.geekbang.org/account/avatar/00/13/35/25/bab760a1.jpg","comment_is_top":false,"comment_ctime":1552141270,"is_pvip":false,"replies":[{"id":"27331","content":"现在很多人也用DPDK来做负载均衡、软路由或流量清洗","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1552349177,"ip_address":"","comment_id":74201,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552141270","product_id":100020901,"comment_content":"DPDK适合五元组比较集中的高pps请求模型，在没有复用五元组的情况下貌似支持下比较差。","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442496,"discussion_content":"现在很多人也用DPDK来做负载均衡、软路由或流量清洗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552349177,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69436,"user_name":"Chn.K","can_delete":false,"product_type":"c1","uid":1285191,"ip_address":"","ucode":"F82E8CE20C16FA","user_header":"https://static001.geekbang.org/account/avatar/00/13/9c/47/50cf2cab.jpg","comment_is_top":false,"comment_ctime":1550743909,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1550743909","product_id":100020901,"comment_content":"倪老师，IO多路复用的各个模型的缺点能不能描述下？","like_count":0},{"had_liked":false,"id":69147,"user_name":"饼子","can_delete":false,"product_type":"c1","uid":1085953,"ip_address":"","ucode":"981A44836A5216","user_header":"https://static001.geekbang.org/account/avatar/00/10/92/01/c723d180.jpg","comment_is_top":false,"comment_ctime":1550669778,"is_pvip":false,"replies":[{"id":"24538","content":"可以的","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1550675724,"ip_address":"","comment_id":69147,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550669778","product_id":100020901,"comment_content":"没有遇到过尴尬，能不能自己模拟呢？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439971,"discussion_content":"可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550675724,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68765,"user_name":"狗蛋儿","can_delete":false,"product_type":"c1","uid":1072546,"ip_address":"","ucode":"22005A177034C0","user_header":"https://static001.geekbang.org/account/avatar/00/10/5d/a2/c6fb8fb8.jpg","comment_is_top":false,"comment_ctime":1550594451,"is_pvip":false,"replies":[{"id":"24526","content":"LT简单，易实现；ET极端情况下性能更好，但维护也麻烦","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1550674506,"ip_address":"","comment_id":68765,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550594451","product_id":100020901,"comment_content":"想在这讨论一个问题？对于epoll，什么时候用ET？什么时候才用LT？据我所知，redis就是使用的LT，而nginx则用的是ET。","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439836,"discussion_content":"LT简单，易实现；ET极端情况下性能更好，但维护也麻烦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550674506,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68156,"user_name":"ninuxer","can_delete":false,"product_type":"c1","uid":1243135,"ip_address":"","ucode":"5394ADAF2667D6","user_header":"https://wx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKQMM4m7NHuicr55aRiblTSEWIYe0QqbpyHweaoAbG7j2v7UUElqqeP3Ihrm3UfDPDRb1Hv8LvPwXqA/132","comment_is_top":false,"comment_ctime":1550450512,"is_pvip":false,"replies":[{"id":"24385","content":"嗯嗯 流量集中的地方需要更高的性能","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1550570801,"ip_address":"","comment_id":68156,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550450512","product_id":100020901,"comment_content":"打卡day37<br>此前waf上是有c1000k的场景的","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439540,"discussion_content":"嗯嗯 流量集中的地方需要更高的性能","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550570801,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":66532,"user_name":"xfan","can_delete":false,"product_type":"c1","uid":1315147,"ip_address":"","ucode":"48ED8D498D7F56","user_header":"https://static001.geekbang.org/account/avatar/00/14/11/4b/fa64f061.jpg","comment_is_top":false,"comment_ctime":1549953976,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1549953976","product_id":100020901,"comment_content":"提升关键点在于，调整IO模型，处理IO的架构，将影响性能的地方压榨到极致","like_count":0}]}