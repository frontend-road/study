{"id":296422,"title":"16 | 语法面面观：智能指针（二）","content":"<p><strong>课件及Demo下载链接</strong><br>\n<a href=\"https://gitee.com/geektime-geekbang/geektime-Rust\">https://gitee.com/geektime-geekbang/geektime-Rust</a></p>","comments":[{"had_liked":false,"id":343259,"user_name":"万正宇","can_delete":false,"product_type":"c3","uid":2985047,"ip_address":"","ucode":"B8E70029D5F131","user_header":"https://static001.geekbang.org/account/avatar/00/2d/8c/57/b7bc2b9e.jpg","comment_is_top":false,"comment_ctime":1650731847,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"--014\tpattern match\n&#47;&#47;fn sum(x: String, ref y: String) -&gt; String { x + y }    \nfn f(x: &amp;Option&lt;String&gt;) {\n    match x {\n        Some(ref s) =&gt; { println!(&quot;{:?}&quot;, s)},&#47;&#47;ref模式\n        None =&gt; { println!(&quot;none&quot;) }\n    }\n}\nfn main() {\n    let x = Some(&quot;ky-tech&quot;.to_owned());\n    f(&amp;x);\n    &#47;&#47;匹配动态数组\n    let vec = vec![1, 2, 3];\n    match vec[..] {\n        [a, b, c] =&gt; {println!(&quot;{}, {}, {}&quot;, a, b, c)},\n        _ =&gt; { println!(&quot;no match vector&quot;) },\n    };\n}\n\n\n--015\t\nDeRef Trait \t类型的指针行为\nDrop Trait \t\t类型的析构行为\nimpl&lt;T:?Sized&gt; Deref for Box&lt;T&gt; {\n    type Target = T;\n    fn deref(&amp;self) -&gt; &amp;T { &amp;**self }\n}\n&#47;&#47;&#47;&#47;\nuse std::ops::Deref;\nstruct Point&lt;T&gt;(T);\nimpl&lt;T&gt; Point&lt;T&gt; {\n    fn new(x: T) -&gt; Point&lt;T&gt; { Point(x) }\n}\nimpl&lt;T&gt; Deref for Point&lt;T&gt; {\n    type Target = T;\n    fn deref(&amp;self) -&gt; &amp;T { &amp;self.0 }\n}\nfn main() {\n    let y = Point::new(3);\n    assert_eq!(3, *y);\n    println!(&quot;*y = {:?}&quot;, *y);\n}\n\n\n--016\n*y = *( y.deref() )\nBox&lt;T&gt;\nVec&lt;T&gt;\nString \nRc&lt;T&gt;\nArc&lt;T&gt;\nHashMap&lt;K, V&gt;\t&#47;&#47;impl drop trait\n\n&#47;**\nderef pointer 自动解引用\n*&#47;\nimpl&lt;T: ?Sized&gt; Deref for &amp;mut T {\n    type Target = T;\n    fn deref(&amp;self) -&gt; &amp;T { *self }\n}\nstruct User { name: &amp;&#39;static str }","like_count":0},{"had_liked":false,"id":253665,"user_name":"jm26","can_delete":false,"product_type":"c3","uid":1079281,"ip_address":"","ucode":"967305BB8451BB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eocAWvBbWEqT2MfiaNYPHiaBAxWZa4UEsw6p0ZiaOIwzcVcy8DyGjABKkIbwsjbfsgHx1TibEdD4CCxOA/132","comment_is_top":false,"comment_ctime":1602822271,"is_pvip":false,"replies":null,"discussion_count":5,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"您好，您的编程之道在讲trait对象时关于trait不能是Sized的，原因是实现该trait的类可能没有实现Sized，但是既然是trait是继承的，为什么会出现实现了该trait却没有实现继承的Sized呢？","like_count":0,"discussions":[{"author":{"id":1498664,"avatar":"https://static001.geekbang.org/account/avatar/00/16/de/28/acb248d6.jpg","nickname":"晖","note":"","ucode":"D12C7EBDCD4236","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312955,"discussion_content":"你再仔细读一下。书里说的是如果一个 Trait 要被当成 Trait Object 使用，则\n- 实现该 Trait 的类型 Self 不能是 Sized，而需要是默认的隐式限定 ?Sized\n- Trait 中的所有方法都必须是类型安全的\n\n上面的总结，并没有说 trait 不能是 Sized 的。\n感觉你把几个概念揉在一起了，分开看看每一个概念再理解试试：Sized, ?Sized, Trait, Trait Object.","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1602869680,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1047574,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/fc/16/0a3f1c15.jpg","nickname":"神 一生有你","note":"","ucode":"423AD11359E265","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":313345,"discussion_content":"let  f: dyn  FLY=Pig; // FLY是trait,pig是实现FLY  trait\nf实际上是一个名叫trait的结构体，它有两个指针，data指针指向了在堆中真正pig对象，虚方法指针指向在堆中创建的虚方法表对象，当f调用且只能调用FLY中定义的方法(安全方法)，书上说的trait:sized是说trait这个特殊结构在编译期是无法确定大小的，因为实现了该trait类型，在编译期可能是无法确定大小，比如str这样在编译期无法确定大小的类型实现了一个trait，在编译时就会报错，trait:sized要求在编译期确定大小，而str确是在编译期无法确定大小的(如果我理解的没问题，是不是编译器发现trait:sized，而有!sized类型实现，应该禁止!sized类型去实现该trait，因为你定义trait又不是为了用trait对象，估计我这个想法rust觉得没必要这样干)，两个冲突，自然无法编译通过","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1603036788,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2831163,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/33/3b/0b25b622.jpg","nickname":"陆一鸣猜不动","note":"","ucode":"68E89A037F9A0C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549948,"discussion_content":"前几节课在讲闭包的时候，我记得说traits不是继承关系","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644308560,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1111835,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f7/1b/db7a0edc.jpg","nickname":"Marvichov","note":"","ucode":"7482099415C41C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373120,"discussion_content":"应该是和trait object safety有关 https://rust-lang.github.io/rfcs/0255-object-safety.html","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620621932,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1198100,"avatar":"https://static001.geekbang.org/account/avatar/00/12/48/14/bb345fa8.jpg","nickname":"🍵Alex","note":"","ucode":"88373FAA431D5A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":320728,"discussion_content":"关于编程之道的问题，去编程之道随书源码发issues讨论更好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604465800,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}