{"id":252705,"title":"02 |  指令式绘图系统：如何用Canvas绘制层次关系图？","content":"<p>你好，我是月影。</p><p>Canvas是可视化领域里非常重要且常用的图形系统，在可视化项目中，它能够帮助我们将数据内容以几何图形的形式，非常方便地呈现出来。</p><p>今天，我们就在上一节课的基础上对Canvas进行稍微深入一些的介绍，来学习一下Canvas绘制基本几何图形的方法。</p><p>我主要会讲解如何用它的2D上下文来完成绘图，不过，我不会去讲和它有关的所有Api，重点只是希望通过调用一些常用的API能给你讲清楚，Canvas2D能做什么、要怎么使用，以及它的局限性是什么。最后，我还会带你用Canvas绘制一个表示省市关系的层次关系图（Hierarchy Graph）。希望通过这个可视化的例子，能帮你实践并掌握Canvas的用法。</p><p>在我们后面的课程中，基本上70~80%的图都可以用Canvas来绘制，所以其重要性不言而喻。话不多说，让我们正式开始今天的内容吧！</p><h2>如何用Canvas绘制几何图形？</h2><p>首先，我们通过一个绘制红色正方形的简单例子，来讲一讲Canvas的基本用法。</p><h3>1. Canvas元素和2D上下文</h3><p>对浏览器来说，Canvas也是HTML元素，我们可以用canvas标签将它插入到HTML内容中。比如，我们可以在body里插入一个宽、高分别为512的canvas元素。</p><!-- [[[read_end]]] --><pre><code>&lt;body&gt;\n  &lt;canvas width=&quot;512&quot; height=&quot;512&quot;&gt;&lt;/canvas&gt;\n&lt;/body&gt;\n</code></pre><p>这里有一点需要特别注意，Canvas元素上的width和height属性不等同于Canvas元素的CSS样式的属性。这是因为，CSS属性中的宽高影响Canvas在页面上呈现的大小，而HTML属性中的宽高则决定了Canvas的坐标系。为了区分它们，我们称Canvas的HTML属性宽高为<strong>画布宽高</strong>，CSS样式宽高为<strong>样式宽高</strong>。</p><p>在实际绘制的时候，如果我们不设置Canvas元素的样式，那么Canvas元素的画布宽高就会等于它的样式宽高的像素值，也就是512px。</p><p>而如果这个时候，我们通过CSS设置其他的值指定了它的样式宽高。比如说，我们将样式宽高设置成256px，那么它实际的画布宽高就是样式宽高的两倍了。代码和效果如下：</p><pre><code>canvas {\n  width: 256px;\n  height: 256px;\n}\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/01/f1/01b8b4f686e776b379a2d8141ac13ff1.jpg?wh=1920*1080\" alt=\"\" title=\"将canvas的样式宽高设为256px，画布宽高设为512px\"></p><p>因为画布宽高决定了可视区域的坐标范围，所以Canvas将画布宽高和样式宽高分开的做法，能更方便地适配不同的显示设备。</p><p>比如，我们要在画布宽高为500<code>*</code>500的Canvas画布上，绘制一个居中显示的100<code>*</code>100宽高的正方形。我们只要将它的坐标设置在  x = 200, y = 200 处即可。这样，不论这个Canvas以多大的尺寸显示在各种设备上，我们的代码都不需要修改。否则，如果Canvas的坐标范围（画布宽高）跟着样式宽高变化，那么当屏幕尺寸改变的时候，我们就要重新计算需要绘制的图形的所有坐标，这对于我们来说将会是一场“灾难”。</p><p><img src=\"https://static001.geekbang.org/resource/image/5e/45/5e5d78e4fd8c42948b6ae68e79e69e45.jpg?wh=1920*1080\" alt=\"\" title=\"在画布宽高为500*500的Canvas上居中绘制一个100*100的正方形\"></p><h3>2. Canvas 的坐标系</h3><p>好了，Canvas画布已经设置好了，接下来我们来了解一下Canvas的坐标系。</p><p>Canvas的坐标系和浏览器窗口的坐标系类似，它们都默认左上角为坐标原点，x轴水平向右，y轴垂直向下。那在我们设置好的画布宽高为512<code>*</code>512的Canvas画布中，它的左上角坐标值为（0,0），右下角坐标值为（512,512） 。这意味着，坐标（0,0）到（512,512）之间的所有图形，都会被浏览器渲染到画布上。</p><p><a href=\"https://www.jianshu.com/p/ef8244cb7ec4\"><img src=\"https://static001.geekbang.org/resource/image/6c/f1/6cb9eca4e9c8c64a5e07694f7f6428f1.jpg?wh=1920*1080\" alt=\"\" title=\"canvas坐标系\"></a></p><p>注意，上图中这个坐标系的y轴向下，意味着这个坐标系和笛卡尔坐标系不同，它们的y轴是相反的。那在实际应用的时候，如果我们想绘制一个向右上平抛小球的动画，它的抛物线轨迹，在Canvas上绘制出来的方向就是向下凹的。</p><p><a href=\"https://www.jianshu.com/p/ef8244cb7ec4\"><img src=\"https://static001.geekbang.org/resource/image/f0/2e/f025b55279ea553387a058ab9184012e.jpeg?wh=1920*1080\" alt=\"\" title=\"Canvas坐标系\"></a></p><p>另外，如果我们再考虑旋转或者三维运动，这个坐标系就会变成“左手系”。而左手系的平面法向量的方向和旋转方向，和我们熟悉的右手系相反。如果你现在还不能完全理解它们的区别，那也没关系，在实际应用的时候，我会再讲的，这里你只需要有一个大体印象就可以了。</p><p><a href=\"https://zhuanlan.zhihu.com/p/64707259\"><img src=\"https://static001.geekbang.org/resource/image/2c/0d/2c01d99b4a3c9a46ba446cc208a6560d.jpeg?wh=1920*1080\" alt=\"\" title=\"左手系和右手系\"></a></p><h3>3. 利用 Canvas 绘制几何图形</h3><p>有了坐标系，我们就可以将几何图形绘制到Canvas上了。具体的步骤可以分为两步，分别是获取Canvas上下文和利用Canvas 上下文绘制图形。下面，我们一一来看。</p><p><strong>第一步，获取Canvas上下文。</strong></p><p>那在JavaScript中，我们要获取Canvas上下文也需要两个步骤。首先是获取Canvas元素。因为Canvas元素就是HTML文档中的canvas标签，所以，我们可以通过DOM API获取它，代码如下：</p><pre><code>const canvas = document.querySelector('canvas');\n</code></pre><p>获取了canvas元素后，我们就可以通过getContext方法拿到它的上下文对象。具体的操作就是，我们调用canvas.getContext传入参数2d。</p><pre><code>const context = canvas.getContext('2d');\n</code></pre><p>有了2d上下文，我们就可以开始绘制图形了。</p><p><strong>第二步，用 Canvas 上下文绘制图形。</strong></p><p>我们拿到的context对象上会有许多API，它们大体上可以分为两类：一类是设置状态的API，可以设置或改变当前的绘图状态，比如，改变要绘制图形的颜色、线宽、坐标变换等等；另一类是绘制指令API，用来绘制不同形状的几何图形。</p><p>如何使用这些API呢？我来举个例子，假设我们要在画布的中心位置绘制一个100<code>*</code>100的红色正方形。那我们该怎么做呢？</p><p>首先，我们要通过计算得到Canvas画布的中心点。前面我们已经说过，Canvas坐标系的左上角坐标是(0,0)，右下角是Canvas的画布坐标，即 （canvas.width,canvas.height），所以画布的中心点坐标是（0.5 <code>*</code>canvas.width, 0.5 <code>*</code> canvas.height）。</p><p>如果我们要在中心点绘制一个100 <code>*</code> 100的正方形，那对应的 Canvas指令是：</p><pre><code>context.rect(0.5 * canvas.width, 0.5 * canvas.height, 100, 100);\n</code></pre><p>其中，context.rect是绘制矩形的Canvas指令，它的四个参数分别表示要绘制的矩形的x、y坐标和宽高。在这里我们要绘制的正方形宽高都是100，所以后两个参数是100和100。</p><p>那在实际绘制之前，我们还有一些工作要做。我要将正方形填充成红色，这一步通过调用context.fillStyle指令就可以完成。然后，我们要调用一个beginPath的指令，告诉Canvas我们现在绘制的路径。接着，才是调用 rect 指令完成绘图。最后，我们还要调用 fill 指令，将绘制的内容真正输出到画布中。这样我们就完整了绘制，绘制的效果和代码如下：</p><pre><code>const rectSize = [100, 100];\ncontext.fillStyle = 'red';\ncontext.beginPath();\ncontext.rect(0.5 * canvas.width, 0.5 * canvas.height, ...rectSize);\ncontext.fill();\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/1c/44/1c13a4yyd5f8284edb29038178eb9144.jpeg?wh=1920*1080\" alt=\"\"></p><p>但是，看到上面这张图，我们发现了一个问题：正方形并没有居于画布的正中心。这是为什么呢？</p><p>你可以回想一下我们刚才的操作，在绘制正方形的时候，我们将rect指令的参数x、y设为画布宽高的一半。而rect指令的x、y的值表示的是，我们要绘制出的矩形的左上角坐标而不是中心点坐标，所以绘制出来的正方形自然就不在正中心了。</p><p>那我们该如何将正方形的中心点放在画布的中心呢？这就需要我们移动一下图形中心的坐标了。具体的实现方法有两种。</p><p><strong>第一种做法</strong>是，我们可以让rect指令的x、y参数，等于画布宽高的一半分别减去矩形自身宽高的一半。这样，我们就把正方形的中心点真正地移动到画布中心了。代码如下所示：</p><pre><code>context.rect(0.5 * (canvas.width - rectSize[0]), 0.5 * (canvas.height - rectSize[1]), ...rectSize);\n</code></pre><p><strong>第二种做法</strong>是，我们可以先给画布设置一个平移变换（Translate），然后再进行绘制。代码如下所示：</p><pre><code>context.translate(-0.5 * rectSize[0], -0.5 * rectSize[1]);\n\n</code></pre><p>在上面的代码中，我们给画布设置了一个平移，平移距离为矩形宽高的一半，这样它的中心点就是画布的中心了。</p><p><img src=\"https://static001.geekbang.org/resource/image/3a/56/3ab2306311ba2382301ae9b654e62856.jpeg?wh=1920*1080\" alt=\"\"></p><p>既然这两种方法都能将图形绘制到画布的中心，那我们该怎么选择呢？其实，我们可以从这两种方式各自的优缺点入手，下面我就具体来说一说。</p><p>第一种方式很简单，它直接改变了我们要绘制的图形顶点的坐标位置，但如果我们绘制的不是矩形，而是很多顶点的多边形，我们就需要在绘图前重新计算出每个顶点的位置，这会非常麻烦。</p><p>第二种方式是对Canvas画布的整体做一个平移操作，这样我们只需要获取中心点与左上角的偏移，然后对画布设置translate变换就可以了，不需要再去改变图形的顶点位置。不过，这样一来我们就改变了画布的状态。如果后续还有其他的图形需要绘制，我们一定要记得把画布状态给恢复回来。好在，这也不会影响到我们已经画好的图形。</p><p>那怎么把画布状态恢复回来呢？恢复画布状态的方式有两种，<strong>第一种是反向平移。</strong>反向平移的原理也很简单，你可以直接看下面的代码。</p><pre><code>// 平移\ncontext.translate(-0.5 * rectSize[0], -0.5 * rectSize[1]);\n\n... 执行绘制\n\n// 恢复\ncontext.translate(0.5 * rectSize[0], 0.5 * rectSize[1]);\n</code></pre><p>除了使用反向平移的恢复方式以外，Canvas上下文还提供了<strong>save和restore</strong>方法，可以暂存和恢复画布某个时刻的状态。其中，save指令不仅可以保存当前的translate状态，还可以保存其他的信息，比如，fillStyle等颜色信息。 而restore指令则可以将状态指令恢复成save指令前的设置。操作代码如下：</p><pre><code>context.save(); // 暂存状态\n// 平移\ncontext.translate(-0.5 * rectSize[0], -0.5 * rectSize[1]);\n\n... 执行绘制\n\ncontext.restore(); // 恢复状态\n</code></pre><p>好了，把一个简单矩形绘制到画布中心的完整方法，我们已经说完了。那我们再来回顾一下利用Canvas绘制矩形的过程。我把这个过程总结为了5个步骤：</p><ol>\n<li>获取Canvas对象，通过getContext(‘2d’)得到2D上下文；</li>\n<li>设置绘图状态，比如填充颜色fillStyle，平移变换translate等等；</li>\n<li>调用 beginPath 指令开始绘制图形；</li>\n<li>调用绘图指令，比如rect，表示绘制矩形；</li>\n<li>调用fill指令，将绘制内容真正输出到画布上。</li>\n</ol><p>除此之外，Canvas上下文还提供了更多丰富的API，可以用来绘制直线、多边形、弧线、圆、椭圆、扇形和贝塞尔曲线等等，这里我们不一一介绍了。在之后的课程中，我们会详细讲解如何利用这些API来绘制复杂的几何图形。如果你还想了解更多关于Canvas的API相关的知识，还可以去阅读<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Canvas_API/Tutorial\">MDN文档</a>。</p><h2>如何用Canvas 绘制层次关系图？</h2><p>知道了Canvas的基本用法之后，接下来，我们就可以利用Canvas给一组城市数据绘制一个层次关系图了。也就是在一组给出的层次结构数据中，体现出同属于一个省的城市。</p><p>在操作之前呢，我们先引入一个概念层次结构数据 （Hierarchy Data），它是可视化领域的专业术语，用来表示能够体现层次结构的信息，例如城市与省与国家。一般来说，层次结构数据用层次关系图表来呈现。</p><p>其中，城市数据是一组JSON格式的数据，如下所示。</p><pre><code>{\n  &quot;name&quot;:&quot;中国&quot;,\n  &quot;children&quot;:\n  [\n    { \n      &quot;name&quot;:&quot;浙江&quot; , \n        &quot;children&quot;:\n        [\n            {&quot;name&quot;:&quot;杭州&quot; },\n            {&quot;name&quot;:&quot;宁波&quot; },\n            {&quot;name&quot;:&quot;温州&quot; },\n            {&quot;name&quot;:&quot;绍兴&quot; }\n        ] \n      },\n    { \n      &quot;name&quot;:&quot;广西&quot; , \n      &quot;children&quot;:\n      [\n        {&quot;name&quot;:&quot;桂林&quot;},\n        {&quot;name&quot;:&quot;南宁&quot;},\n        ...\n    }\n  ]\n}\n</code></pre><p>我们要绘制的层次关系图效果如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/07/bf/072dbcd9607dd7feafa47e34f97784bf.jpeg?wh=1920*1080\" alt=\"\"></p><p>知道了要求之后，我们应该怎么做呢？首先，我们要从数据源获取JSON数据。</p><pre><code>const dataSource = 'https://s5.ssl.qhres.com/static/b0695e2dd30daa64.json';\n(async function () {\n  const data = await (await fetch(dataSource)).json();\n\n}());\n</code></pre><p>这份JSON数据中只有“城市&gt;省份&gt;中国”这样的层级数据，我们要将它与绘图指令建立联系。建立联系指的是，我们要把数据的层级、位置和要绘制的圆的半径、位置一一对应起来。</p><p>换句话说，我们要把数据转换成图形信息，这个步骤需要数学计算。不过，我们可以直接使用d3-hierarchy<a href=\"https://github.com/d3/d3-hierarchy\">d3-hierarchy</a>这个工具库转换数据。</p><pre><code>(async function () {\n  const data = await (await fetch(dataSource)).json();\n\n  const regions = d3.hierarchy(data)\n    .sum(d =&gt; 1)\n    .sort((a, b) =&gt; b.value - a.value);\n\n  const pack = d3.pack()\n    .size([1600, 1600])\n    .padding(3);\n\n  const root = pack(regions);\n}());\n</code></pre><p>数学计算的内容，我会在数据篇中详细来讲。这里，我们就先不介绍d3的具体转换实现了，你只需要知道，我们可以用d3.hierarchy(data).sum(…).sort(…)将省份数据按照包含城市的数量，从多到少排序就可以了。</p><p>假设，我们要将它们展现在一个画布宽高为1600 * 1600的Canvas中，那我们可以通过d3.pack()将数据映射为一组1600宽高范围内的圆形。不过，为了展示得美观一些，在每个相邻的圆之间我们还保留3个像素的padding（按照经验，我们一般是保留3个像素padding的，但这也要根据实际的设计需求来更改）。</p><p>这样，我们就获得了包含几何图形信息的数据对象。此时它的内部结构如下所示：</p><pre><code>{\n  data: {name: '中国', children: [...]},\n  children: [\n    {\n      data: {name: '江苏', children: [...]},\n      value: 7,\n      r: 186.00172579386546,\n      x: 586.5048250548921,\n      y: 748.2441892254667,\n    }\n    ...\n  ],\n  value: 69,\n  x: 800,\n  y: 800,\n  r: 800,\n}\n</code></pre><p>我们需要的信息是数据中的x、y、r，这些数值是前面调用d3.hierarchy帮我们算出来的。接下来我们只需要用Canvas将它们绘制出来就可以了。具体绘制过程比较简单，<strong>只需要遍历数据并且根据数据内容绘制圆弧</strong>，我也把它总结成了两步。</p><p>第一步：我们在当前数据节点绘制一个圆，圆可以使用arc指令来绘制。arc方法的五个参数分别是圆心的x、y坐标、半径r、起始角度和结束角度，前三个参数就是数据中的x、y和r。因为我们要绘制的是整圆，所以后面的两个参数中起始角是0，结束角是2π。</p><p>第二步，绘制图成后，如果这个数据节点有下一级数据，我们遍历它的下一级数据，然后递归地对这些数据调用绘图过程。如果没有下一级数据，说明当前数据为城市数据，那么我们就直接给出城市的名字，这一步可以通过fillText指令来完成。具体的代码如下所示：</p><pre><code>const TAU = 2 * Math.PI;\n\nfunction draw(ctx, node, {fillStyle = 'rgba(0, 0, 0, 0.2)', textColor = 'white'} = {}) {\n  const children = node.children;\n  const {x, y, r} = node;\n  ctx.fillStyle = fillStyle;\n  ctx.beginPath();\n  ctx.arc(x, y, r, 0, TAU);\n  ctx.fill();\n  if(children) {\n    for(let i = 0; i &lt; children.length; i++) {\n      draw(ctx, children[i]);\n    }\n  } else {\n    const name = node.data.name;\n    ctx.fillStyle = textColor;\n    ctx.font = '1.5rem Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText(name, x, y);\n  }\n}\n\ndraw(context, root);\n</code></pre><p>这样，我们就用Canvas绘图简单地实现了一个层次关系图，它的代码不多也不复杂，你可以很容易理解，所以我就不做过多的解释啦。</p><h2>Canvas有哪些优缺点？</h2><p>通过上面的例子，相信你已经熟悉了Canvas的基础用法。但是，浏览器是一个复杂的图形环境，要想灵活使用Canvas，我们还需要从宏观层面来知道，它能做什么，不能做什么。</p><p>简单来说，就是要了解Canvas 的优缺点。</p><p>首先，Canvas是一个非常简单易用的图形系统。结合刚才的例子你也能感受到，Canvas通过一组简单的绘图指令，就能够方便快捷地绘制出各种复杂的几何图形。</p><p>另外，Canvas渲染起来相当高效。即使是绘制大量轮廓非常复杂的几何图形，Canvas也只需要调用一组简单的绘图指令就能高性能地完成渲染。这个呀，其实和Canvas更偏向于渲染层，能够提供底层的图形渲染API有关。那在实际实现可视化业务的时候，Canvas出色的渲染能力正是它的优势所在。</p><p>不过Canvas也有缺点，因为Canvas在HTML层面上是一个独立的画布元素，所以所有的绘制内容都是在内部通过绘图指令来完成的，绘制出的图形对于浏览器来说，只是Canvas中的一个个像素点，我们很难直接抽取其中的图形对象进行操作。</p><p>比如说，在HTML或SVG中绘制一系列图形的时候，我们可以一一获取这些图形的元素对象，然后给它们绑定用户事件。但同样的操作在Canvas中没有可以实现的简单方法（但是我们仍然可以和Canvas图形交互，在后续课程中我们会有专门讨论）。下一节课中，我们会详细讲解SVG图形系统，到时你就会更加明白它们的差异具体是什么了。</p><h2>要点总结</h2><p>好了，Canvas的使用讲完了，我们来总结一下你要掌握的重点内容。</p><p>首先，我们讲了利用Canvas绘制几何图形，这个过程很简单，不过依然有3点需要我们注意：</p><ol>\n<li>在HTML中建立画布时，我们要分别设置画布宽高和样式宽高；</li>\n<li>在建立坐标系时，我们要注意canvas的坐标系和笛卡尔坐标系在y轴上是相反的；</li>\n<li>如果要把图形绘制在画布中心，我们不能直接让x、y的坐标等于画布中心坐标，而是要让图形中心和画布中心的位置重叠。这个操作，我们可以通过计算顶点坐标或者 平移变换来实现。</li>\n</ol><p>接着，我们讲了利用Canvas展示数据的层级关系。在这个过程中，我们应当先处理数据，将数据内容与绘图指令建立映射关系，然后遍历数据，通过映射关系将代表数据内容的参数传给绘图指令，最后将图形绘制到Canvas上。</p><p>另外，我们还讲了Canvas的优缺点。在实际实现可视化业务的时候，Canvas的简单易操作和高效的渲染能力是它的优势，但是它的缺点是不能方便地控制它内部的图形元素。</p><p>最后，我还有一点想要补充一下。我们今天绘制的图形都是静态的，如果要使用Canvas绘制动态的图形也很简单，我们可以通过clearRect指令，将之前的图形擦除，再把新的图形绘制上去即可。在后续课程中，我们有专门的章节来介绍动画。</p><h2>小试牛刀</h2><p>最后呢，我为你准备了两道课后题，试着动手操作一下吧！</p><ol>\n<li>这节课我们介绍了用Canvas绘制矩形和圆弧，实际上Canvas还有更多的绘图指令来绘制不同类型的几何图形。你可以试着修改一下前面显示正方形的例子，在画布的中心位置显示一个三角形、椭圆或五角星。</li>\n<li>Canvas的缺点是不能方便地控制它内部的图形元素，但这不代表它完全不能控制。你可以尝试给我们前面绘制的层次关系图增加鼠标的交互，让鼠标指针在移动到某个城市所属的圆的时候，这个圆显示不同的颜色（提示：你可以获取鼠标坐标，然后用这个坐标到圆心的距离来判断）。</li>\n</ol><p>欢迎在留言区和我讨论，分享你的答案和思考，也欢迎你把这节课分享给你的朋友，我们下节课见！</p><hr><h2><span class=\"reference\">源码</span></h2><p><span class=\"reference\"><a href=\"https://github.com/akira-cn/graphics/tree/master/canvas/hierarchy\">用Canvas绘制层次关系图的完整代码.</a></span></p><h2><span class=\"reference\">推荐阅读</span></h2><p><span class=\"reference\">[1] <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Canvas_API/Tutorial\">MDN官方文档.</a></span></p>","neighbors":{"left":{"article_title":"01 | 浏览器中实现可视化的四种方式","id":252076},"right":{"article_title":"03 | 声明式图形系统：如何用SVG图形元素绘制可视化图表？","id":252710}},"comments":[{"had_liked":false,"id":229395,"user_name":"Spring","can_delete":false,"product_type":"c1","uid":1007267,"ip_address":"","ucode":"80594B4B056A53","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/a3/9670d4b4.jpg","comment_is_top":false,"comment_ctime":1592984510,"is_pvip":false,"replies":[{"id":"84646","content":"平移的是坐标系，你可以理解为将坐标原点移动了，例如本来画布左上角坐标是0,0，现在translate(100,100)，那么也就是距离画布左上角(100,100)处的坐标是0,0，相应左上角坐标就是-100,-100了。相当于此时开始再绘制任何图形，每个顶点的坐标和原来相比都偏移了100,100","user_name":"作者回复","comment_id":229395,"uid":"1159792","ip_address":"","utype":1,"ctime":1592985070,"user_name_real":"月影"}],"discussion_count":1,"race_medal":0,"score":"134736970686","product_id":100053801,"comment_content":"老师，有点不太理解translate的平移操作，平移后画布的坐标系是怎么发生变化的呢?<br>平移的是画布还是坐标系。","like_count":32,"discussions":[{"author":{"id":1159792,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/70/ba9cecc6.jpg","nickname":"月影","note":"","ucode":"298582FA7DBF27","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499467,"discussion_content":"平移的是坐标系，你可以理解为将坐标原点移动了，例如本来画布左上角坐标是0,0，现在translate(100,100)，那么也就是距离画布左上角(100,100)处的坐标是0,0，相应左上角坐标就是-100,-100了。相当于此时开始再绘制任何图形，每个顶点的坐标和原来相比都偏移了100,100","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592985070,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229626,"user_name":"特异型大光头","can_delete":false,"product_type":"c1","uid":2047839,"ip_address":"","ucode":"44CC71886FB121","user_header":"https://static001.geekbang.org/account/avatar/00/1f/3f/5f/053bc2da.jpg","comment_is_top":false,"comment_ctime":1593076609,"is_pvip":false,"replies":[{"id":"84860","content":"这两种写法是参数签名不同，我上面这种写法调用起来虽然麻烦一点，但是能让代码可读性更好。<br><br>因为同样调用：<br>draw(context, el, {fillStyle: &#39;red&#39;, textColor: &#39;black&#39;})<br><br>比 draw(context, el, &#39;red&#39;, &#39;black&#39;) 可读性要好<br><br>假设你是代码维护者，前者你一看就知道后面两个颜色参数哪个是fillStyle，哪个是textColor；后者你不看函数定义，不知道red和black分别哪个是fillStyle，哪个是textColor。<br><br>代码是给人阅读的，所以设计API的时候需要考虑这样的细节。<br><br>打砖块很赞~~","user_name":"作者回复","comment_id":229626,"uid":"1159792","ip_address":"","utype":1,"ctime":1593230847,"user_name_real":"月影"}],"discussion_count":2,"race_medal":0,"score":"87492422529","product_id":100053801,"comment_content":"原理大致听懂了,学着做个打砖块练习<br>https:&#47;&#47;codepen.io&#47;ysosu&#47;pen&#47;MWKorYj<br>问题:<br>function draw(ctx, node, {fillStyle = &#39;rgba(0, 0, 0, 0.2)&#39;, textColor = &#39;white&#39;} = {}) {};<br>里面这个{fillStyle = &#39;rgba(0, 0, 0, 0.2)&#39;, textColor = &#39;white&#39;} = {}没看懂<br>跟这样写的差别是啥function draw(ctx, node, fillStyle = &#39;rgba(0, 0, 0, 0.2)&#39;, textColor = &#39;white&#39; ) {};","like_count":21,"discussions":[{"author":{"id":1159792,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/70/ba9cecc6.jpg","nickname":"月影","note":"","ucode":"298582FA7DBF27","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499569,"discussion_content":"这两种写法是参数签名不同，我上面这种写法调用起来虽然麻烦一点，但是能让代码可读性更好。\n\n因为同样调用：\ndraw(context, el, {fillStyle: &amp;#39;red&amp;#39;, textColor: &amp;#39;black&amp;#39;})\n\n比 draw(context, el, &amp;#39;red&amp;#39;, &amp;#39;black&amp;#39;) 可读性要好\n\n假设你是代码维护者，前者你一看就知道后面两个颜色参数哪个是fillStyle，哪个是textColor；后者你不看函数定义，不知道red和black分别哪个是fillStyle，哪个是textColor。\n\n代码是给人阅读的，所以设计API的时候需要考虑这样的细节。\n\n打砖块很赞~~","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1593230847,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1468864,"avatar":"https://static001.geekbang.org/account/avatar/00/16/69/c0/5558436f.jpg","nickname":"I have a dream","note":"","ucode":"9BBB3B6AE87568","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347440,"discussion_content":"大佬太厉害了，就学了这一点就能做出来这样的小游戏","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612232364,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229739,"user_name":"宁康","can_delete":false,"product_type":"c1","uid":1044760,"ip_address":"","ucode":"B7FB9DDFFF3F69","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f1/18/63b9bd3c.jpg","comment_is_top":false,"comment_ctime":1593135448,"is_pvip":false,"replies":[{"id":"84857","content":"赞~这个五子棋不错。同样宽度覆盖，因为Canvas有反锯齿等处理，另外还有光栅化的精度问题，所以边缘的像素会覆盖不了的，一般来说是需要增加线宽，这个是正常的。","user_name":"作者回复","comment_id":229739,"uid":"1159792","ip_address":"","utype":1,"ctime":1593230485,"user_name_real":"月影"}],"discussion_count":2,"race_medal":0,"score":"74607579480","product_id":100053801,"comment_content":"借鉴了之前留言的朋友的部分逻辑重新开发了一个五子棋程序，主要修改了几个地方：<br>- 使用二维数组记录落子情况，方便后续判断胜负<br>- 重新获取光标后不进行整个棋盘的渲染，而是将上一个光标处局部修复<br>- 根据当前落子周围八个方向4个单位距离的棋盘中是否赢了<br><br>遇到的问题：<br>- 光标是用1个单位线宽绘制出来的，我用同样一个单位线宽去覆盖，发现覆盖不全，还会残留线段，最后只能加大线宽去覆盖，请问老师这个是什么问题？<br><br>五子棋在线预览：https:&#47;&#47;codesandbox.io&#47;s&#47;chess-demo-d2qgt","like_count":18,"discussions":[{"author":{"id":1159792,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/70/ba9cecc6.jpg","nickname":"月影","note":"","ucode":"298582FA7DBF27","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499618,"discussion_content":"赞~这个五子棋不错。同样宽度覆盖，因为Canvas有反锯齿等处理，另外还有光栅化的精度问题，所以边缘的像素会覆盖不了的，一般来说是需要增加线宽，这个是正常的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593230485,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2046753,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/3b/21/69b8cebe.jpg","nickname":"undefined","note":"","ucode":"0CDDEFC591E3AF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383144,"discussion_content":"总体很不错，最后赢的时候报错了\nReferenceError\nsetImmediate is not defined\nVueComponent.judgeWin\n/src/App.vue:397:10","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625926563,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":313600,"user_name":"阿辉","can_delete":false,"product_type":"c1","uid":1202750,"ip_address":"","ucode":"152F586FF94755","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/OCfic4TOUJjGfeVe7I7hKNYsibiazsrGyRxoRbqVPkpl5j4y8vkKjqeApPh2akhriazOiaWWEwlXeSDGas1kQ4RLRPg/132","comment_is_top":false,"comment_ctime":1632550837,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"44582223797","product_id":100053801,"comment_content":"就看这一节课，就能写出一个五子棋？这些留言还挺让初学者有沮丧感的","like_count":11,"discussions":[{"author":{"id":1017863,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/88/07/7804f4cc.jpg","nickname":"逗逼师父","note":"","ucode":"ECC2D82F83CBE6","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560930,"discussion_content":"炫技啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649493086,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1625453,"avatar":"https://static001.geekbang.org/account/avatar/00/18/cd/6d/928b0ffd.jpg","nickname":"、轻","note":"","ucode":"30713196ED1AA6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555033,"discussion_content":"这就是卷呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646724910,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2497664,"avatar":"","nickname":"Geek_dbf9da","note":"","ucode":"5F48CEDA7E964C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553025,"discussion_content":"是的 惊呆了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645693902,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2054910,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/5a/fe/3fada2bb.jpg","nickname":"permit","note":"","ucode":"081DE5CA35C98A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530711,"discussion_content":"大家基础不一样。学完了，你也可以，加油呀。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637132456,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229491,"user_name":"Geek_3469f6","can_delete":false,"product_type":"c1","uid":2047009,"ip_address":"","ucode":"AE8CA3C7A8EF86","user_header":"https://static001.geekbang.org/account/avatar/00/1f/3c/21/58f3740d.jpg","comment_is_top":false,"comment_ctime":1593014752,"is_pvip":false,"replies":[{"id":"84723","content":"赞👍","user_name":"作者回复","comment_id":229491,"uid":"1159792","ip_address":"","utype":1,"ctime":1593047261,"user_name_real":"月影"}],"discussion_count":2,"race_medal":0,"score":"40247720416","product_id":100053801,"comment_content":"老师现在讲的还可以完全听懂，学习了之后立刻实践了以下。并且，学练结合，把以前的想法实现了下。这次没有偷懒。画了个五子棋盘+棋子，输赢判定逻辑还没写。<br>https:&#47;&#47;codepen.io&#47;maslke&#47;pen&#47;MWKoKKp","like_count":10,"discussions":[{"author":{"id":1159792,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/70/ba9cecc6.jpg","nickname":"月影","note":"","ucode":"298582FA7DBF27","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499504,"discussion_content":"赞👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593047261,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1308710,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f8/26/e0bd8d24.jpg","nickname":"Crystal","note":"","ucode":"1481B20843D690","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333723,"discussion_content":"为什么都在写五子棋","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607604231,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229325,"user_name":"随遇而安","can_delete":false,"product_type":"c1","uid":1940389,"ip_address":"","ucode":"03F1F3CA355232","user_header":"https://static001.geekbang.org/account/avatar/00/1d/9b/a5/90a5c106.jpg","comment_is_top":false,"comment_ctime":1592965439,"is_pvip":false,"replies":[{"id":"84679","content":"棒～","user_name":"作者回复","comment_id":229325,"uid":"1159792","ip_address":"","utype":1,"ctime":1592988324,"user_name_real":"月影"}],"discussion_count":4,"race_medal":0,"score":"40247671103","product_id":100053801,"comment_content":"我尝试了用canvas绘制不规则多边形，如果想要添加鼠标交互事件，获取到鼠标的坐标之后，可以利用凸包算法判断点是否在不规则多边形内。","like_count":9,"discussions":[{"author":{"id":1159792,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/70/ba9cecc6.jpg","nickname":"月影","note":"","ucode":"298582FA7DBF27","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499441,"discussion_content":"棒～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592988324,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1381864,"avatar":"https://static001.geekbang.org/account/avatar/00/15/15/e8/519df449.jpg","nickname":"1973","note":"","ucode":"0C34E2372985BF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289169,"discussion_content":"请问，凸包算法是啥？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594013938,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1374421,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f8/d5/fd04fcbc.jpg","nickname":"Kite","note":"","ucode":"9DACE8E0EC84A6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1381864,"avatar":"https://static001.geekbang.org/account/avatar/00/15/15/e8/519df449.jpg","nickname":"1973","note":"","ucode":"0C34E2372985BF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300045,"discussion_content":"看看这个：https://www.cnblogs.com/cglongge/p/9408417.html","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597917908,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":289169,"ip_address":""},"score":300045,"extra":""}]},{"author":{"id":1473187,"avatar":"","nickname":"虚竹","note":"","ucode":"96617FB3A417E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":286296,"discussion_content":"一般都用isPointInPath和包围盒来做拾取","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593108346,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":297272,"user_name":"良辰美景岂虚设","can_delete":false,"product_type":"c1","uid":1376778,"ip_address":"","ucode":"69654CD67EE1AB","user_header":"https://static001.geekbang.org/account/avatar/00/15/02/0a/5d81243a.jpg","comment_is_top":false,"comment_ctime":1623400695,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"31688171767","product_id":100053801,"comment_content":"层次结构数据接口https:&#47;&#47;s5.ssl.qhres.com&#47;static&#47;b0695e2dd30daa64.json 不能用了","like_count":8,"discussions":[{"author":{"id":1159792,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/70/ba9cecc6.jpg","nickname":"月影","note":"","ucode":"298582FA7DBF27","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":401864,"discussion_content":"要换成qhres2","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633752809,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229813,"user_name":"筑梦师刘渊","can_delete":false,"product_type":"c1","uid":1026867,"ip_address":"","ucode":"35C309A266AC02","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ab/33/75b1f724.jpg","comment_is_top":false,"comment_ctime":1593153911,"is_pvip":false,"replies":[{"id":"84855","content":"很棒~","user_name":"作者回复","comment_id":229813,"uid":"1159792","ip_address":"","utype":1,"ctime":1593229820,"user_name_real":"月影"}],"discussion_count":5,"race_medal":0,"score":"14478055799","product_id":100053801,"comment_content":"作业2:<br><br>1. 先封装一个清除圆形方法：           <br> CanvasRenderingContext2D.prototype.clearCircle = function (x, y,r) {<br>                context.save();<br>                context.fillStyle = &quot;rgba(255,255,255,255)&quot;;<br>                context.beginPath();<br>                context.arc(x, y, r, 0, TAU);<br>                context.fill();<br>                context.restore();<br>            };<br>2. 检测鼠标是否在圆内(在圆内就先清除圆再绘制名称和新颜色):<br>            &#47;&#47; 鼠标检测移动到小圆就变色<br>            function isInCircle(ctx, mx, my, node) {<br>                const children = node.children;<br>                if (children) {<br>                    for (let i = 0; i &lt; children.length; i++) {<br>                        isInCircle(ctx, mx, my, children[i]);<br>                    }<br>                } else {<br>                    const { x, y, r } = node;<br>                    if ((my - y) * (my - y) + (mx - x) * (mx - x) &lt; r * r) {<br>                        console.log(x, y);<br>                        ctx.clearCircle(x, y, r);<br>                        ctx.fillStyle = &quot;rgba(255,0,0,0.2)&quot;;<br>                        ctx.beginPath();<br>                        ctx.arc(x, y, r, 0, TAU);<br>                        ctx.fill();<br>                        const name = node.data.name;<br>                        ctx.fillStyle = &quot;white&quot;;<br>                        ctx.font = &quot;1.5rem Arial&quot;;<br>                        ctx.textAlign = &quot;center&quot;;<br>                        ctx.fillText(name, x, y);<br>                    }<br>                }<br>            }<br>3. 监听鼠标mousemove事件(变换页面鼠标位置与canvas内坐标的关系)：<br>                canvas.addEventListener(&quot;mousemove&quot;, (e) =&gt; {<br>                    const x = e.clientX * 2;<br>                    const y = e.clientY * 2;<br>                    isInCircle(context, x, y, root);<br>                });","like_count":3,"discussions":[{"author":{"id":1159792,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/70/ba9cecc6.jpg","nickname":"月影","note":"","ucode":"298582FA7DBF27","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499652,"discussion_content":"很棒~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593229820,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1130862,"avatar":"https://static001.geekbang.org/account/avatar/00/11/41/6e/e04ab385.jpg","nickname":"null","note":"","ucode":"3C97A82395E95C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414998,"discussion_content":"clearCircle的想法很棒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636959432,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2518919,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ9d89ymlVge9vQMDFURgib37hho3nkbFlccyL6cLj5WpIWQib8JcV0TYnqRekeKREvcKiaGEdbzq0dw/132","nickname":"fourthree","note":"","ucode":"1A5AC64F6E9CED","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383827,"discussion_content":"当前面发生scroll的情况，需重新计算圆的中心坐标，[canvas.getBoundingClientRect().left+,canvas.getBoundingClientRect().top + y]","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626248424,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1381864,"avatar":"https://static001.geekbang.org/account/avatar/00/15/15/e8/519df449.jpg","nickname":"1973","note":"","ucode":"0C34E2372985BF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289218,"discussion_content":"棒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594029090,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1490128,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEJwHLLQK3AicN8XqichEbfqSACpRB5kry8bIMBcuB3bSiaeic9hABrmn7TZgqaWJ8Xc1gWh6icasZCt3Fg/132","nickname":"l_j_dota_1111","note":"","ucode":"4CA8A41F5107C7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288011,"discussion_content":"这种方式是一直在上面重新画吗，其实只是更改背景色，却要不断的重复画圆和字，性能不受影响吗，我一直很好奇，虽然能检测在圆内，但是如何很好的变换，因为确实无法获得这个圆，更别说更改其颜色了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593612715,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229358,"user_name":"gltjk","can_delete":false,"product_type":"c1","uid":1341515,"ip_address":"","ucode":"A2ACFE7D8A32C5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ7hqBj1WIXVJgRwxVEg7fREAwI04BKRM8ibzVA8DIOaLSLqIrjw8UYr9GDUFFZW7mhBLC4hSp5r9g/132","comment_is_top":false,"comment_ctime":1592973599,"is_pvip":false,"replies":[{"id":"84745","content":"可以，这个思路挺好的，当然这个问题也可以只用一个canvas，不过用两个的好处也是有的，这样只需要更新局部的图形了。","user_name":"作者回复","comment_id":229358,"uid":"1159792","ip_address":"","utype":1,"ctime":1593070661,"user_name_real":"月影"}],"discussion_count":2,"race_medal":0,"score":"14477875487","product_id":100053801,"comment_content":"提交一下第二个作业。之前纠结了一下怎么在鼠标移出城市时恢复小圆的颜色，最后决定专门做一个新的 canvas 叠在上面。另外鼠标移动的事件是不是要做个节流比较好？我试了一下感觉又不够流畅，就去掉了…… https:&#47;&#47;codepen.io&#47;gltjk&#47;pen&#47;GRomzQE","like_count":3,"discussions":[{"author":{"id":1159792,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/70/ba9cecc6.jpg","nickname":"月影","note":"","ucode":"298582FA7DBF27","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499453,"discussion_content":"可以，这个思路挺好的，当然这个问题也可以只用一个canvas，不过用两个的好处也是有的，这样只需要更新局部的图形了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593070661,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1543460,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8d/24/a2f886d3.jpg","nickname":"Rexxar","note":"","ucode":"86D0238F0F0C55","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293494,"discussion_content":"前端小白求问,这位同学的代码里为什么必须要有position: absolute的样式才能使鼠标事件显示出效果?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595559417,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":301371,"user_name":"1830","can_delete":false,"product_type":"c1","uid":1374337,"ip_address":"","ucode":"246FEF7C97F39C","user_header":"https://static001.geekbang.org/account/avatar/00/14/f8/81/bff52f91.jpg","comment_is_top":false,"comment_ctime":1625648700,"is_pvip":false,"replies":[{"id":"114137","content":"因为之前用了360的CDN服务，那个域名过期了，把代码里面的qhres全都换成qhres2就可以了","user_name":"作者回复","comment_id":301371,"uid":"1159792","ip_address":"","utype":1,"ctime":1633750774,"user_name_real":"月影"}],"discussion_count":1,"race_medal":0,"score":"10215583292","product_id":100053801,"comment_content":"老师，JSON数据不能用了可以解决一下不，或者把数据结构要求贴一下我们模拟一下","like_count":2,"discussions":[{"author":{"id":1159792,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/70/ba9cecc6.jpg","nickname":"月影","note":"","ucode":"298582FA7DBF27","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522982,"discussion_content":"因为之前用了360的CDN服务，那个域名过期了，把代码里面的qhres全都换成qhres2就可以了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633750774,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":300992,"user_name":"春饼sama","can_delete":false,"product_type":"c1","uid":1843380,"ip_address":"","ucode":"B01C2B0DD7A9C0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/OGMflcxuxblzCaAAZ9uXn0ak6rgrlxp9N8tt7sd1L8n3CRrfiblmLG3yJsSepwdc2DnLG9ibDqGdH8cnAQuIQlCg/132","comment_is_top":false,"comment_ctime":1625478309,"is_pvip":false,"replies":[{"id":"114138","content":"把代码里的qhres全都替换成qhres2就可以了","user_name":"作者回复","comment_id":300992,"uid":"1159792","ip_address":"","utype":1,"ctime":1633750794,"user_name_real":"月影"}],"discussion_count":1,"race_medal":0,"score":"10215412901","product_id":100053801,"comment_content":"老师，获取json的都挂了","like_count":2,"discussions":[{"author":{"id":1159792,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/70/ba9cecc6.jpg","nickname":"月影","note":"","ucode":"298582FA7DBF27","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522869,"discussion_content":"把代码里的qhres全都替换成qhres2就可以了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633750794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":232885,"user_name":"sheeeeep","can_delete":false,"product_type":"c1","uid":1340246,"ip_address":"","ucode":"218AA77BAA73C8","user_header":"https://static001.geekbang.org/account/avatar/00/14/73/56/9cfb1e43.jpg","comment_is_top":false,"comment_ctime":1594139193,"is_pvip":false,"replies":[{"id":"86029","content":"棒~","user_name":"作者回复","comment_id":232885,"uid":"1159792","ip_address":"","utype":1,"ctime":1594261511,"user_name_real":"月影"}],"discussion_count":2,"race_medal":0,"score":"10184073785","product_id":100053801,"comment_content":"交作业：https:&#47;&#47;output.jsbin.com&#47;rirahom，思路基本和大家一致。<br>看完评论有两个主要的优化方法：<br>1. 减少重绘次数：判断是否在「圆」内 或 判断结果和上次不同，才进行重绘<br>2. 缩小重绘区域：进行局部清除和局部重绘","like_count":2,"discussions":[{"author":{"id":1159792,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/70/ba9cecc6.jpg","nickname":"月影","note":"","ucode":"298582FA7DBF27","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500795,"discussion_content":"棒~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594261511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1500459,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e5/2b/47a48b9b.jpg","nickname":"柳林博弈","note":"","ucode":"51354296B07BAF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294550,"discussion_content":"感谢分享，在您的代码基础上，修复了页面滚动后，鼠标移动到对应城市位置时，高亮失效的问题：https://blog.heyliubo.top/Visualization-of-learning-front-end/city","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595924743,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":231047,"user_name":"River","can_delete":false,"product_type":"c1","uid":1420598,"ip_address":"","ucode":"71CB419202A354","user_header":"https://static001.geekbang.org/account/avatar/00/15/ad/36/fc989053.jpg","comment_is_top":false,"comment_ctime":1593571622,"is_pvip":false,"replies":[{"id":"85611","content":"赞","user_name":"作者回复","comment_id":231047,"uid":"1159792","ip_address":"","utype":1,"ctime":1593823273,"user_name_real":"月影"}],"discussion_count":2,"race_medal":0,"score":"10183506214","product_id":100053801,"comment_content":"ifInCircle(pos, node) {<br>        if (pos[0] &lt; node.x + node.r &amp;&amp; pos[1] &lt; node.y + node.r) {<br>          let result = Math.pow((node.x - pos[0]), 2) + Math.pow((node.y - pos[1]), 2) &lt; Math.pow(node.r, 2)<br>          if (result) {<br>            if (node.children) {<br>              for (let childNode of node.children) {<br>                let has = this.ifInCircle(pos, childNode)<br>                if (has) {<br>                  break<br>                }<br>              }<br>            } else {<br>              if (!node.colorful) {<br>                if (this.chooseNode &amp;&amp; node !== this.chooseNode) {<br>                  this.chooseNode.colorful = false<br>                  this.clearAll()<br>                  this.draw(this.context, this.root)<br>                }<br>                this.draw(this.context, node, {fillStyle: &#39;rgba(90, 35, 35, 0.2)&#39;})<br>                this.chooseNode = node<br>                node.colorful = true<br>                return true<br>              }<br>            }<br>          }<br>        }<br>      },<br>好歹是实现了。。。不卡","like_count":2,"discussions":[{"author":{"id":1159792,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/70/ba9cecc6.jpg","nickname":"月影","note":"","ucode":"298582FA7DBF27","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500134,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593823273,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2667591,"avatar":"https://static001.geekbang.org/account/avatar/00/28/b4/47/8cdd9ee6.jpg","nickname":"城南花已开","note":"","ucode":"07BD0F0D51A512","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538559,"discussion_content":"看到了一个同思路判断距离","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639446652,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":279035,"user_name":"我叫张小咩²⁰¹⁹","can_delete":false,"product_type":"c1","uid":1374463,"ip_address":"","ucode":"68A8C87EB09D26","user_header":"https://static001.geekbang.org/account/avatar/00/14/f8/ff/ae800f6b.jpg","comment_is_top":false,"comment_ctime":1613560100,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5908527396","product_id":100053801,"comment_content":"全都利用老师封装好的`draw`方法绘制就好了  <br>```js<br>const redraw = () =&gt; {<br>    context.clearRect(0, 0, 1600, 1600)<br>    draw(context, root)<br>  }<br><br>  function isInCircle(node, mx, my) {<br>    const { children, data, x, y, r } = node<br>    if (children) {<br>      children.find((v) =&gt; isInCircle(v, mx, my))<br>    } else if ((mx - x) * (mx - x) + (my - y) * (my - y) &lt; r * r) {<br>      redraw()<br>      draw(context, node, { fillStyle: &#39;rgba(255,0,0,0.2)&#39; })<br>      return data<br>    }<br>  }<br><br>  function bindMouseEvent() {<br>    canvas.onmousemove = (e) =&gt; {<br>      let { x, y } = e<br>      &#47;&#47;! 注意画布宽高、样式宽高的比例<br>      x = x * 2<br>      y = y * 2<br>      const current = isInCircle(root, x, y)<br>      if (current) {<br>        console.log(&#39;In Circle&#39;, current)<br>      }<br>    }<br>  }<br><br>  draw(context, root)<br>  bindMouseEvent()<br>```","like_count":1},{"had_liked":false,"id":230646,"user_name":"浩明啦","can_delete":false,"product_type":"c1","uid":1377422,"ip_address":"","ucode":"120ED8FC45B992","user_header":"https://static001.geekbang.org/account/avatar/00/15/04/8e/e75ecc5e.jpg","comment_is_top":false,"comment_ctime":1593439929,"is_pvip":true,"replies":[{"id":"85197","content":"你先保存上一次hover的信息，两次检查比较，如果圆是同样的没有变化，就不用重新绘制","user_name":"作者回复","comment_id":230646,"uid":"1159792","ip_address":"","utype":1,"ctime":1593484360,"user_name_real":"月影"}],"discussion_count":1,"race_medal":0,"score":"5888407225","product_id":100053801,"comment_content":"老师，鼠标移动圆发生变化的前提是需要遍历整个数据结构，当找到对应变化的点之后再重绘，但是这样我还是需要渲染多次，对于这个优化应该怎么写呢，实在没什么头绪了","like_count":2,"discussions":[{"author":{"id":1159792,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/70/ba9cecc6.jpg","nickname":"月影","note":"","ucode":"298582FA7DBF27","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499973,"discussion_content":"你先保存上一次hover的信息，两次检查比较，如果圆是同样的没有变化，就不用重新绘制","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593484360,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229542,"user_name":"王子晨","can_delete":false,"product_type":"c1","uid":1390005,"ip_address":"","ucode":"4A207E2AB34253","user_header":"https://static001.geekbang.org/account/avatar/00/15/35/b5/a139a821.jpg","comment_is_top":false,"comment_ctime":1593054505,"is_pvip":false,"replies":[{"id":"84743","content":"canvas对css字体单位都支持，不过是相对于画布坐标的，也就是说当画布坐标和样式坐标相同的时候，1rem和html的1rem是完全一样的，如果画布坐标是样式坐标的2倍，那么canvas字体1rem看起来就只有html的一半大小。使用时根据具体情况来使用吧，在需要自适应设备的时候使用相对单位肯定是会方便一些的。","user_name":"作者回复","comment_id":229542,"uid":"1159792","ip_address":"","utype":1,"ctime":1593067667,"user_name_real":"月影"}],"discussion_count":1,"race_medal":0,"score":"5888021801","product_id":100053801,"comment_content":"老师我看你本节课案例，里面的城市名字字体单位是rem，canvas对rem和view这些单位，支持的程度是怎样的？如果都支持，那俩个单位在使用时更倾向于使用哪种？","like_count":1,"discussions":[{"author":{"id":1159792,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/70/ba9cecc6.jpg","nickname":"月影","note":"","ucode":"298582FA7DBF27","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499532,"discussion_content":"canvas对css字体单位都支持，不过是相对于画布坐标的，也就是说当画布坐标和样式坐标相同的时候，1rem和html的1rem是完全一样的，如果画布坐标是样式坐标的2倍，那么canvas字体1rem看起来就只有html的一半大小。使用时根据具体情况来使用吧，在需要自适应设备的时候使用相对单位肯定是会方便一些的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593067667,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229434,"user_name":"Alex🦁","can_delete":false,"product_type":"c1","uid":1996935,"ip_address":"","ucode":"9EE0DE584B55B4","user_header":"https://static001.geekbang.org/account/avatar/00/1e/78/87/a70878a5.jpg","comment_is_top":false,"comment_ctime":1592993621,"is_pvip":false,"replies":[{"id":"84730","content":"不用每次mousemove都重绘canvas，只有鼠标移动到的圆发生了变化时才需要重绘。你可以试着这样优化一下～","user_name":"作者回复","comment_id":229434,"uid":"1159792","ip_address":"","utype":1,"ctime":1593049782,"user_name_real":"月影"}],"discussion_count":1,"race_medal":0,"score":"5887960917","product_id":100053801,"comment_content":"2的交作业 感觉 有点卡顿。。。    <br>         function caculate(dx, dy, node) {<br>            let children = node.children;<br>            const { x, y, r } = node;<br>            if ((dx - x) * (dx - x) + (dy - y) * (dy - y) &lt; r * r) {<br>                node.color = 1;<br>                node.parent?node.parent.color = 0:&#39;&#39;;<br>            } else {<br>                node.color = 0;<br>            }<br>            if (children) {<br>                for (let i = 0; i &lt; children.length; i++) {<br>                    caculate(dx, dy, children[i]);<br>                }<br>            }<br>        }<br>        dom.onmousemove = (e) =&gt; {<br>            let x = e.pageX, y = e.pageY;<br>            caculate(x, y, root);<br>            context.clearRect(0,0,800,800)<br>            draw(context, root);<br>        }","like_count":1,"discussions":[{"author":{"id":1159792,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/70/ba9cecc6.jpg","nickname":"月影","note":"","ucode":"298582FA7DBF27","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499480,"discussion_content":"不用每次mousemove都重绘canvas，只有鼠标移动到的圆发生了变化时才需要重绘。你可以试着这样优化一下～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593049782,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":332493,"user_name":"聂鹏","can_delete":false,"product_type":"c1","uid":1005479,"ip_address":"","ucode":"98AA4D9E9BF9F1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJQLfPbnibuQwaXIgyr3hxUdVAuaZfsn4pjic3lDvUmlpfPqvMJ2aSfetI18lKpRyzLuIbYeY2K15ibg/132","comment_is_top":false,"comment_ctime":1643274953,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1643274953","product_id":100053801,"comment_content":"说到底还是得有数学基础，一个简单的项目还得引个D3，开销有点大","like_count":0},{"had_liked":false,"id":329740,"user_name":"Kennydaidai","can_delete":false,"product_type":"c1","uid":1254027,"ip_address":"","ucode":"2AC2D7D41DE0B7","user_header":"https://static001.geekbang.org/account/avatar/00/13/22/8b/9685ae63.jpg","comment_is_top":false,"comment_ctime":1641521823,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1641521823","product_id":100053801,"comment_content":"老师你好：<br>五子棋练习：https:&#47;&#47;codepen.io&#47;xiaodaidai&#47;pen&#47;rNGKPRq <br>问题：canvas 如何清除指定的图形，我使用了重新设置 canvas 的宽高来重置整个画布了，这是不是会有性能问题。<br>谢谢老师","like_count":0},{"had_liked":false,"id":320617,"user_name":"log","can_delete":false,"product_type":"c1","uid":2414585,"ip_address":"","ucode":"DBDD9F4A289BB7","user_header":"https://static001.geekbang.org/account/avatar/00/24/d7/f9/3cc65e57.jpg","comment_is_top":false,"comment_ctime":1636423926,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636423926","product_id":100053801,"comment_content":"老师，请问一下，国家-》省份-》城市的圆圈的颜色深浅是通过啥控制的呀？看了一圈就发现了fillStyle，但是他就是rgbs(0,0,0,0.2)，请问怎么改变的呢？","like_count":0},{"had_liked":false,"id":303747,"user_name":"HY","can_delete":false,"product_type":"c1","uid":1622759,"ip_address":"","ucode":"6D96EF4D2DB6A0","user_header":"https://static001.geekbang.org/account/avatar/00/18/c2/e7/72208894.jpg","comment_is_top":false,"comment_ctime":1626960464,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626960464","product_id":100053801,"comment_content":"老师这个，canvas图层问题没看懂，是通过绘图的先后关系吗？后绘制的在后面。如果 并行绘制多个元素呢，我应该如何控制上下里级关系呢？","like_count":0},{"had_liked":false,"id":290192,"user_name":"许永平","can_delete":false,"product_type":"c1","uid":2452820,"ip_address":"","ucode":"E784E0F328545E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLI6ibAJRoCG6gib0NOmBOM80iaibLx8Wz7kUXqRkxZGIWqDyOMyAaSypOV7zjRq6GNia8icbKnCm4oOXhQ/132","comment_is_top":false,"comment_ctime":1619425365,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1619425365","product_id":100053801,"comment_content":"<br>&#47;&#47; 平移<br>context.translate(-0.5 * rectSize[0], -0.5 * rectSize[1]);<br><br>... 执行绘制<br><br>&#47;&#47; 恢复<br>context.translate(0.5 * rectSize[0], 0.5 * rectSize[1]);<br><br>按照这个执行代码，无法复位……是不是我误解这个意思了","like_count":0,"discussions":[{"author":{"id":1547073,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9b/41/0c62ae9a.jpg","nickname":"a仁A仁阿仁啊仁","note":"","ucode":"0A52AE9396B8F6","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":564800,"discussion_content":"绘制完之后好像不能translate了，不知道老师怎么操作的。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650331548,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":288117,"user_name":"凹凸🔥","can_delete":false,"product_type":"c1","uid":1378466,"ip_address":"","ucode":"96F9C8B901F41C","user_header":"https://static001.geekbang.org/account/avatar/00/15/08/a2/8b703b6c.jpg","comment_is_top":false,"comment_ctime":1618307578,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618307578","product_id":100053801,"comment_content":"let isInside = false;<br>  function isInCircle(context, mx, my, node) {<br>    const children = node.children;<br>    const { x, y, r, data } = node;<br>    if (children) {<br>      for (let i = 0; i &lt; children.length; i++) {<br>        if (isInside) {<br>          break;<br>        } else {<br>          isInCircle(context, mx, my, children[i])<br>        }<br>      }<br>    } else {<br>      if ((my - y) * (my - y) + (mx - x) * (mx - x) &lt; r * r) {<br>        if (hightItemName &amp;&amp; hightItemName === data.name) {<br>          console.log(&#39;已经存在渲染&#39;)<br>        } else {<br>          hightItemName = data.name<br>          isInside = true<br>        }<br>      }<br>    }<br>    if (isInside) {<br>      context.clearRect(0, 0, 1600, 1600);<br>      draw(context, root);<br>      isInside = false<br>    }<br>  }<br><br>看了大部分留言的代码 感觉都不太清晰，地区的名字可以作为一个ID ，ID只要不变可以优化渲染重复数，然后根据ID，去单独渲染对于的节点背景样式","like_count":0},{"had_liked":false,"id":287954,"user_name":"刘洪林","can_delete":false,"product_type":"c1","uid":1535242,"ip_address":"","ucode":"1FDBB425191CA8","user_header":"https://static001.geekbang.org/account/avatar/00/17/6d/0a/8e7f0f04.jpg","comment_is_top":false,"comment_ctime":1618233724,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618233724","product_id":100053801,"comment_content":"    let point;<br>    let lastIn = null;<br>    let isIn = null;<br>    canvas.addEventListener(&#39;mousemove&#39;, (event) =&gt; {<br>        isIn = null;<br>        point= {x: event.offsetX, y: event.offsetY};<br>        redraw(context, root);<br>        if ((isIn &amp;&amp; isIn !== lastIn) || (!isIn &amp;&amp; lastIn)) {<br>            lastIn = isIn;<br>            context.clearRect(0, 0, canvas.width, canvas.height);<br>            draw(context, root);<br>        }<br>    });<br>    function redraw(ctx, node) {<br>        if (node.children) {<br>            for(let i = 0; i &lt; node.children.length; i++) {<br>                redraw(ctx, node.children[i]);<br>            }<br>        } else {<br>            if (isInCircle(node, point)) {<br>                &#47;&#47; 标志鼠标在节点内<br>                isIn = node;<br>            }<br>        }<br>    }<br>    function isInCircle(node, point) {<br>        &#47;&#47; 忽略父级圆<br>        if (!!node.children || !point) {<br>            return false;<br>        }<br>        const {x, y, r} = node;<br>        &#47;&#47; 判断鼠标落点是否在圆内<br>        &#47;&#47; 鼠标落点和圆心的距离小于半径<br>        return Math.sqrt(<br>            Math.abs(point.y - y) ** 2 + Math.abs(point.x - x) ** 2) &lt; r;<br>    }<br>&#47;&#47; 通过一个变量标记上一次鼠标进入的节点和当前鼠标进入的节点避免鼠标在同一个节点上移动时的重复绘制","like_count":0},{"had_liked":false,"id":286646,"user_name":"james","can_delete":false,"product_type":"c1","uid":1232771,"ip_address":"","ucode":"AC42035106E5B9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/yyibGRYCArsUNBfCAEAibua09Yb9D5AdO8TkCmXymhAepibqmlz0hzg06ggBLxyvXicnjqFVGr7zYF0rQoZ0aXCBAg/132","comment_is_top":false,"comment_ctime":1617446504,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617446504","product_id":100053801,"comment_content":" const TAU = 2 * Math.PI;<br>        const canvas = document.getElementById(&#39;canvas&#39;);<br>        &#47;&#47; 获取画布2d上下文<br>        const context = canvas.getContext(&#39;2d&#39;);<br>        &#47;&#47; 1、清除圆形的方法<br>        const clearCircle = (ctx, x, y, r) =&gt; {<br>            &#47;&#47; 保存状态<br>            ctx.save();<br>            &#47;&#47; 画布填充底色<br>            ctx.fillStyle = &#39;#fff&#39;;<br>            &#47;&#47; 开始绘制<br>            ctx.beginPath();<br>            &#47;&#47; 圆的坐标、圆的半径、画的区域<br>            ctx.arc(x, y, r, 0, TAU);<br>            &#47;&#47; 绘制完填充到画布上<br>            ctx.fill();<br>            &#47;&#47; 回到保存钱的状态<br>            ctx.restore();<br>        };<br><br>        &#47;&#47; 2、检测鼠标是否在圆内（如果在圆内就先清除圆再绘制名称和新颜色）<br>        const isInCircle = (ctx, my, my, node) =&gt; {<br>            const children = node.children;<br>            if (Array.isArray(children)) {<br>                for (let i = 0; i &lt; children.length; i++) {<br>                    isInCircle(ctx, my, my, children[i]);<br>                }<br>            } else {<br>                const { x, y, r } = node;<br>                const area = Math.pow((my - y), 2) + Math.pow((mx - x), 2);<br>                const inCircle = area &lt; Math.pow(r, 2);<br>                if (inCircle) {<br>                    &#47;&#47; 清除圆形<br>                    ctx.clearCircle(x, y, r);<br>                    ctx.fillStyle = &#39;#000&#39;;<br>                    &#47;&#47; 开始绘制<br>                    ctx.beginPath();<br>                    &#47;&#47; 绘制圆形<br>                    ctx.arc(x, y, r, 0, TAU);<br>                    &#47;&#47; 绘制到画布上<br>                    ctx.fill();<br>                    const name = node.data.name;<br>                    ctx.fillStyle = &#39;#fff&#39;;<br>                    ctx.beginPath();<br>                    ctx.font = &#39;1.5rem Arial&#39;;<br>                    ctx.textAlign = &#39;center&#39;;<br>                    ctx.fillText(name, x, y);<br>                }<br>            }<br>        };<br><br>        &#47;&#47; 3、监听鼠标mousemove事件(判断鼠标位置和canvas中心坐标的关系)<br>        canvas.addEventListener(&#39;mousemove&#39;, (e) =&gt; {<br>            &#47;&#47; 注意画布宽高、样式宽高的比例<br>            const x = e.clientX * 2;<br>            const y = e.clientY * 2;<br>            isInCircle(context, x, y, root);<br>        });","like_count":0},{"had_liked":false,"id":285304,"user_name":"惜余","can_delete":false,"product_type":"c1","uid":1327374,"ip_address":"","ucode":"52417DC17CDB7A","user_header":"https://static001.geekbang.org/account/avatar/00/14/41/0e/162bd1eb.jpg","comment_is_top":false,"comment_ctime":1616729762,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616729762","product_id":100053801,"comment_content":"感谢。","like_count":0},{"had_liked":false,"id":279982,"user_name":"2oops","can_delete":false,"product_type":"c1","uid":1910332,"ip_address":"","ucode":"E8896273BBB202","user_header":"https://static001.geekbang.org/account/avatar/00/1d/26/3c/5d6f3508.jpg","comment_is_top":false,"comment_ctime":1614046409,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614046409","product_id":100053801,"comment_content":"如果用了d3.hierarchy的话，那直接用d3的打包图也可以实现层次关系图喔","like_count":0},{"had_liked":false,"id":276409,"user_name":"锐锐爱南球","can_delete":false,"product_type":"c1","uid":1158621,"ip_address":"","ucode":"7AA4CA355B9D69","user_header":"https://static001.geekbang.org/account/avatar/00/11/ad/dd/970e7b4a.jpg","comment_is_top":false,"comment_ctime":1611912088,"is_pvip":true,"replies":[{"id":"101085","content":"是的，平移坐标只会影响后续绘制","user_name":"作者回复","user_name_real":"月影","uid":"1159792","ctime":1612875130,"ip_address":"","comment_id":276409,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1611912088","product_id":100053801,"comment_content":"老师，平移和恢复那块有个小问题。就是第一次画图的时候，坐标系平移了，然后回撤，或者再平移回去不会对原来的图形造成影响吗？是不是可以这样说，我画A图形的时候，我的指令怎么操作，都是针对A，而当调用canvas.fill()的时候，A图形就已经被定格了，后面的变化是针对后面的图形了，所以我回撤之后，再画图形B，但是因为A被定格输出在canvas上了，所以后续的任何操作都不会对A造成影响，请问老师，可以这样理解吗？","like_count":0,"discussions":[{"author":{"id":1159792,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/70/ba9cecc6.jpg","nickname":"月影","note":"","ucode":"298582FA7DBF27","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514692,"discussion_content":"是的，平移坐标只会影响后续绘制","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612875130,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":273036,"user_name":"百香果蜜","can_delete":false,"product_type":"c1","uid":2044424,"ip_address":"","ucode":"72A84DB17CBB48","user_header":"","comment_is_top":false,"comment_ctime":1610418336,"is_pvip":false,"replies":[{"id":"101088","content":"👍","user_name":"作者回复","user_name_real":"月影","uid":"1159792","ctime":1612875678,"ip_address":"","comment_id":273036,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1610418336","product_id":100053801,"comment_content":"看了评论，收获好多，交拓展一二的作业：<br>https:&#47;&#47;github.com&#47;xsometimes&#47;visual-practices&#47;blob&#47;main&#47;src&#47;view&#47;demo1&#47;index.js","like_count":0,"discussions":[{"author":{"id":1159792,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/70/ba9cecc6.jpg","nickname":"月影","note":"","ucode":"298582FA7DBF27","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513468,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612875678,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":259982,"user_name":"RRRRRRRR","can_delete":false,"product_type":"c1","uid":1075692,"ip_address":"","ucode":"3EF53DF1ACE2D8","user_header":"https://static001.geekbang.org/account/avatar/00/10/69/ec/ba28c292.jpg","comment_is_top":false,"comment_ctime":1604903106,"is_pvip":false,"replies":[{"id":"94952","content":"赞","user_name":"作者回复","user_name_real":"月影","uid":"1159792","ctime":1605492463,"ip_address":"","comment_id":259982,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1604903106","product_id":100053801,"comment_content":"来交作业了，讲一下大致思路和做的优化点。<br>作业一 https:&#47;&#47;output.jsbin.com&#47;qehuxuq，用三角函数画圆的方式来画椭圆，圆毕竟可以看作是长轴短轴相等的椭圆。<br>作业二 https:&#47;&#47;output.jsbin.com&#47;rafigod，用 Map 保存所有的城市位置和半径，判断鼠标位置与所有城市间的距离，同时用 throttle 函数，减少不必要的重绘。<br>","like_count":0,"discussions":[{"author":{"id":1159792,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/70/ba9cecc6.jpg","nickname":"月影","note":"","ucode":"298582FA7DBF27","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509078,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605492463,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":248658,"user_name":"国旗","can_delete":false,"product_type":"c1","uid":1346964,"ip_address":"","ucode":"09BA50A445F81D","user_header":"https://static001.geekbang.org/account/avatar/00/14/8d/94/a04cf407.jpg","comment_is_top":false,"comment_ctime":1600255115,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600255115","product_id":100053801,"comment_content":"感觉很简单，上手也是少不了踩坑啊 <br>https:&#47;&#47;codepen.io&#47;AAI&#47;pen&#47;bGpjQJg","like_count":0},{"had_liked":false,"id":243006,"user_name":"Kite","can_delete":false,"product_type":"c1","uid":1374421,"ip_address":"","ucode":"9DACE8E0EC84A6","user_header":"https://static001.geekbang.org/account/avatar/00/14/f8/d5/fd04fcbc.jpg","comment_is_top":false,"comment_ctime":1597917874,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597917874","product_id":100053801,"comment_content":"了解了一下凸包算法，记录在此：https:&#47;&#47;www.cnblogs.com&#47;cglongge&#47;p&#47;9408417.html","like_count":0},{"had_liked":false,"id":239079,"user_name":"Geek_cd63d9","can_delete":false,"product_type":"c1","uid":2015085,"ip_address":"","ucode":"1EF4B98DF1E171","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL1H2TOJnNTblhmzJ2p88sTjvb86PuXP7A8HpCNKrfobuOc6Cxgy1UogZMIPTmD3VDGXZfTXIaWNw/132","comment_is_top":false,"comment_ctime":1596428661,"is_pvip":false,"replies":[{"id":"88833","content":"这个涉及到设备像素比，你可以查一下device pixel ratio理解一下这块的知识","user_name":"作者回复","user_name_real":"月影","uid":"1159792","ctime":1597022800,"ip_address":"","comment_id":239079,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1596428661","product_id":100053801,"comment_content":"我之前用canvas完成的饼状图，样式尺寸和坐标尺寸不一致，在移动设备上图很模糊，老师可以解答一下吗，看过别人的回答，但还不是很清晰。","like_count":0,"discussions":[{"author":{"id":1159792,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/70/ba9cecc6.jpg","nickname":"月影","note":"","ucode":"298582FA7DBF27","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502969,"discussion_content":"这个涉及到设备像素比，你可以查一下device pixel ratio理解一下这块的知识","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597022800,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233298,"user_name":"三笠耶格尔","can_delete":false,"product_type":"c1","uid":2053901,"ip_address":"","ucode":"96EE00C1D11F6C","user_header":"https://static001.geekbang.org/account/avatar/00/1f/57/0d/57eed3a3.jpg","comment_is_top":false,"comment_ctime":1594282512,"is_pvip":false,"replies":[{"id":"86182","content":"可以用坐标映射，方式就是先计算相对于canvas的像素坐标，然后再换算成画布坐标就行了","user_name":"作者回复","user_name_real":"月影","uid":"1159792","ctime":1594346975,"ip_address":"","comment_id":233298,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1594282512","product_id":100053801,"comment_content":"请问老师，canvas大小是自动适应屏幕的大小，那么怎么才能让监听的鼠标位置信息和canvas中的点一一对应呢？","like_count":0,"discussions":[{"author":{"id":1159792,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/70/ba9cecc6.jpg","nickname":"月影","note":"","ucode":"298582FA7DBF27","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500975,"discussion_content":"可以用坐标映射，方式就是先计算相对于canvas的像素坐标，然后再换算成画布坐标就行了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594346975,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":231478,"user_name":"l_j_dota_1111","can_delete":false,"product_type":"c1","uid":1490128,"ip_address":"","ucode":"4CA8A41F5107C7","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEJwHLLQK3AicN8XqichEbfqSACpRB5kry8bIMBcuB3bSiaeic9hABrmn7TZgqaWJ8Xc1gWh6icasZCt3Fg/132","comment_is_top":false,"comment_ctime":1593683378,"is_pvip":false,"replies":[{"id":"85608","content":"这个后续我会把答案放在加餐里给大家","user_name":"作者回复","user_name_real":"月影","uid":"1159792","ctime":1593823169,"ip_address":"","comment_id":231478,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1593683378","product_id":100053801,"comment_content":"老师能把触发城市变色的代码发出来吗，感觉好多地方没有优化好","like_count":0,"discussions":[{"author":{"id":1159792,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/70/ba9cecc6.jpg","nickname":"月影","note":"","ucode":"298582FA7DBF27","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500313,"discussion_content":"这个后续我会把答案放在加餐里给大家","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593823169,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":231241,"user_name":"l_j_dota_1111","can_delete":false,"product_type":"c1","uid":1490128,"ip_address":"","ucode":"4CA8A41F5107C7","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEJwHLLQK3AicN8XqichEbfqSACpRB5kry8bIMBcuB3bSiaeic9hABrmn7TZgqaWJ8Xc1gWh6icasZCt3Fg/132","comment_is_top":false,"comment_ctime":1593612756,"is_pvip":false,"replies":[{"id":"85406","content":"改颜色只能重绘，不过canvas可以局部清除和局部重绘。不过即使是全部重绘在现在的浏览器上也不会有太大问题","user_name":"作者回复","user_name_real":"月影","uid":"1159792","ctime":1593653312,"ip_address":"","comment_id":231241,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1593612756","product_id":100053801,"comment_content":"canvas改变背景色，是只能一直在上面重新画吗，只是更改背景色，却要不断的重复画圆和字，性能不受影响吗，我一直很好奇，虽然能检测在圆内，但是如何很好的变换，因为确实无法获得这个圆，更别说更改其颜色了","like_count":0,"discussions":[{"author":{"id":1159792,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/70/ba9cecc6.jpg","nickname":"月影","note":"","ucode":"298582FA7DBF27","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500213,"discussion_content":"改颜色只能重绘，不过canvas可以局部清除和局部重绘。不过即使是全部重绘在现在的浏览器上也不会有太大问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593653312,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1490128,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEJwHLLQK3AicN8XqichEbfqSACpRB5kry8bIMBcuB3bSiaeic9hABrmn7TZgqaWJ8Xc1gWh6icasZCt3Fg/132","nickname":"l_j_dota_1111","note":"","ucode":"4CA8A41F5107C7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288196,"discussion_content":"局部清除，那像作业题，小圆部分清除，会影像底层的中圆和最底层的大圆吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593676027,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":230566,"user_name":"Geek_frank","can_delete":false,"product_type":"c1","uid":2049021,"ip_address":"","ucode":"CF973E61ED2E59","user_header":"https://static001.geekbang.org/account/avatar/00/1f/43/fd/cf190699.jpg","comment_is_top":false,"comment_ctime":1593420409,"is_pvip":true,"replies":[{"id":"85201","content":"当然是可以的，用d3的scale，domain，range等工具来处理数据，名字那个你可以缩放文字","user_name":"作者回复","user_name_real":"月影","uid":"1159792","ctime":1593484795,"ip_address":"","comment_id":230566,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1593420409","product_id":100053801,"comment_content":"案例数据中每个城市的名字长度最大为4，如果超过4个字，就会溢出。这该如何解决呢？可以让圆的大小适应名字的长度吗？<br>甚至可以让画布大小适应整个图的宽高，而不是固定的值【1600,1600】？<br>","like_count":0,"discussions":[{"author":{"id":1159792,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/70/ba9cecc6.jpg","nickname":"月影","note":"","ucode":"298582FA7DBF27","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499938,"discussion_content":"当然是可以的，用d3的scale，domain，range等工具来处理数据，名字那个你可以缩放文字","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593484795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":230220,"user_name":"Sam","can_delete":false,"product_type":"c1","uid":1314195,"ip_address":"","ucode":"C6454F1D848055","user_header":"","comment_is_top":false,"comment_ctime":1593315974,"is_pvip":false,"replies":[{"id":"85417","content":"判断点在某个圆内然后用不同的fillStyle来绘制","user_name":"作者回复","user_name_real":"月影","uid":"1159792","ctime":1593654936,"ip_address":"","comment_id":230220,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1593315974","product_id":100053801,"comment_content":"在做老师示例的时候，想做类似svg的hover效果，不知道怎么做，希望老师指点下。","like_count":0,"discussions":[{"author":{"id":1159792,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/70/ba9cecc6.jpg","nickname":"月影","note":"","ucode":"298582FA7DBF27","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499803,"discussion_content":"判断点在某个圆内然后用不同的fillStyle来绘制","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593654936,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229732,"user_name":"Maker","can_delete":false,"product_type":"c1","uid":1385569,"ip_address":"","ucode":"1193AA6126A596","user_header":"https://static001.geekbang.org/account/avatar/00/15/24/61/ab88f481.jpg","comment_is_top":false,"comment_ctime":1593132946,"is_pvip":false,"replies":[{"id":"84858","content":"哈哈，你可以试着再重新实现一下，或者试试改用webgl来实现","user_name":"作者回复","user_name_real":"月影","uid":"1159792","ctime":1593230526,"ip_address":"","comment_id":229732,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1593132946","product_id":100053801,"comment_content":"几年前使用canvas写过一些小游戏 俄罗斯方块、坦克大战🤣现在都忘了","like_count":0,"discussions":[{"author":{"id":1159792,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/70/ba9cecc6.jpg","nickname":"月影","note":"","ucode":"298582FA7DBF27","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499616,"discussion_content":"哈哈，你可以试着再重新实现一下，或者试试改用webgl来实现","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593230526,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229619,"user_name":"特异型大光头","can_delete":false,"product_type":"c1","uid":2047839,"ip_address":"","ucode":"44CC71886FB121","user_header":"https://static001.geekbang.org/account/avatar/00/1f/3f/5f/053bc2da.jpg","comment_is_top":false,"comment_ctime":1593075806,"is_pvip":false,"replies":[{"id":"84861","content":"函数的参数解构，你可以看看ES6文档。","user_name":"作者回复","user_name_real":"月影","uid":"1159792","ctime":1593230909,"ip_address":"","comment_id":229619,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1593075806","product_id":100053801,"comment_content":"初学前端,请问下 draw() 方法这个参数是什么意思{fillStyle = &#39;rgba(0, 0, 0, 0.2)&#39;, textColor = &#39;white&#39;} = {}","like_count":0,"discussions":[{"author":{"id":1159792,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/70/ba9cecc6.jpg","nickname":"月影","note":"","ucode":"298582FA7DBF27","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499566,"discussion_content":"函数的参数解构，你可以看看ES6文档。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593230909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2053893,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/57/05/4f27774e.jpg","nickname":"﹣7","note":"","ucode":"47DEA61FC2FC4C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291794,"discussion_content":"function draw({fillStyle , textColor}) {console.log(fillStyle,textColor)}\ndraw({ fillStyle:1, textColor:2 })   //  es6 参数的结构赋值\n\nfunction draw({ fillStyle=1, textColor=2 }) {console.log(fillStyle,textColor)}\ndraw({})  //  es6 参数的结构赋值,并且添加默认值\n\nfunction draw({ fillStyle=1, textColor=2 } = {}) {console.log(fillStyle,textColor)}\ndraw()  // es6 参数的结构赋值,并且添加默认值,再给对象加一个默认值\n\n我第一眼也看懵了...   学到了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594954706,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}