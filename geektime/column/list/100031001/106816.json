{"id":106816,"title":"06 | 基础语法与类型变量：Dart是如何表示信息的？","content":"<p>你好，我是陈航。</p><p>在专栏的第2篇预习文章“<a href=\"https://time.geekbang.org/column/article/104071\">Dart语言概览</a>”中，我们简单地认识了Dart这门优秀的程序语言。那么，Dart与其他语言究竟有什么不同呢？在已有其他编程语言经验的基础上，我又如何快速上手呢？</p><p>今天，我们就从编程语言中最重要的组成部分，也就是基础语法与类型变量出发，一起来学习Dart吧。</p><h2>Dart初体验</h2><p>为了简单地体验一下Dart，我们打开浏览器，直接在<a href=\"https://repl.it/languages/dart\">repl.it</a> 新建一个main.dart文件就可以了（当然，你也可以在电脑安装Dart SDK，体验最新的语法）。</p><p>下面是一个基本的hello world示例，我声明了一个带int参数的函数，并通过字符串内嵌表达式的方式把这个参数打印出来：</p><pre><code>printInteger(int a) {\n  print('Hello world, this is $a.'); \n}\n\nmain() {\n  var number = 2019; \n  printInteger(number); \n}\n</code></pre><p>然后，在编辑器中点击“run”按钮，命令行就会输出：</p><pre><code>Hello world, this is 2019. \n</code></pre><p>和绝大多数编译型语言一样，Dart要求以main函数作为执行的入口。</p><p>在知道了如何简单地运行Dart代码后，我们再来看一下Dart的基本变量类型。</p><h2>Dart的变量与类型</h2><p>在Dart中，我们可以用var或者具体的类型来声明一个变量。当使用var定义变量时，表示类型是交由编译器推断决定的，当然你也可以用静态类型去定义变量，更清楚地跟编译器表达你的意图，这样编辑器和编译器就能使用这些静态类型，向你提供代码补全或编译警告的提示了。</p><!-- [[[read_end]]] --><p>在默认情况下，未初始化的变量的值都是null，因此我们不用担心无法判定一个传递过来的、未定义变量到底是undefined，还是烫烫烫而写一堆冗长的判断语句了。</p><p>Dart是类型安全的语言，并且所有类型都是对象类型，都继承自顶层类型Object，因此一切变量的值都是类的实例（即对象），甚至数字、布尔值、函数和null也都是继承自Object的对象。</p><p>Dart内置了一些基本类型，如 num、bool、String、List和Map，在不引入其他库的情况下可以使用它们去声明变量。下面，我将逐一和你介绍。</p><h3>num、bool与String</h3><p>作为编程语言中最常用的类型，num、bool、String这三种基本类型被我放到了一起来介绍。</p><p><strong>Dart的数值类型num，只有两种子类</strong>：即64位int和符合IEEE 754标准的64位double。前者代表整数类型，而后者则是浮点数的抽象。在正常情况下，它们的精度与取值范围就足够满足我们的诉求了。</p><pre><code>int x = 1;\nint hex = 0xEEADBEEF;\ndouble y = 1.1;\ndouble exponents = 1.13e5;\nint roundY = y.round();\n</code></pre><p>除了常见的基本运算符，比如+、-、*、/，以及位运算符外，你还能使用继承自num的 abs()、round()等方法，来实现求绝对值、取整的功能。</p><p>实际上，你打开官方文档或查看源码，就会发现这些常见的运算符也是继承自num：</p><p><img src=\"https://static001.geekbang.org/resource/image/37/10/37958a8f0953edace700f29c0f820d10.png?wh=1422*984\" alt=\"\"></p><center><span class=\"reference\">图1 num中的运算符</span></center><p>如果还有其他高级运算方法的需求num无法满足，你可以试用一下dart:math库。这个库提供了诸如三角函数、指数、对数、平方根等高级函数。</p><p><strong>为了表示布尔值，Dart使用了一种名为bool的类型</strong>。在Dart里，只有两个对象具有bool类型：true和false，它们都是编译时常量。</p><p>Dart是类型安全的，因此我们不能使用<strong>if(nonbooleanValue)</strong> 或<strong>assert(nonbooleanValue)</strong>之类的在JavaScript可以正常工作的代码，而应该显式地检查值。</p><p>如下所示，检查变量是否为0，在Dart中需要显示地与0做比较：</p><pre><code>// 检查是否为0.\nvar number = 0;\nassert(number == 0);\n// assert(number); 错误\n</code></pre><p><strong>Dart的String由UTF-16的字符串组成。</strong>和JavaScript一样，构造字符串字面量时既能使用单引号也能使用双引号，还能在字符串中嵌入变量或表达式：你可以使用 <strong>${express}</strong> 把一个表达式的值放进字符串。而如果是一个标识符，你可以省略{}。</p><p>下面这段代码就是内嵌表达式的例子。我们把单词’cat’转成大写放入到变量s1的声明中：</p><pre><code>var s = 'cat';\nvar s1 = 'this is a uppercased string: ${s.toUpperCase()}';\n</code></pre><p>为了获得内嵌对象的字符串，Dart会调用对象的<strong>toString()</strong>方法。而常见字符串的拼接，Dart则通过内置运算符“+”实现。比如，下面这条语句会如你所愿声明一个值为’Hello World!'的字符串：</p><pre><code>var s2 = 'Hello' + ' ' + 'World!' ;\n</code></pre><p>对于多行字符串的构建，你可以通过三个单引号或三个双引号的方式声明，这与Python是一致的：</p><pre><code>var s3 = &quot;&quot;&quot;This is a\nmulti-line string.&quot;&quot;&quot;;\n</code></pre><h3>List与Map</h3><p>其他编程语言中常见的数组和字典类型，在Dart中的对应实现是List和Map，统称为集合类型。它们的声明和使用很简单，和JavaScript中的用法类似。</p><p>接下来，我们一起看一段代码示例。</p><ul>\n<li>在代码示例的前半部分，我们声明并初始化了两个List变量，在第二个变量中添加了一个新的元素后，调用其迭代方法依次打印出其内部元素；</li>\n<li>在代码示例的后半部分，我们声明并初始化了两个Map变量，在第二个变量中添加了两个键值对后，同样调用其迭代方法依次打印出其内部元素。</li>\n</ul><pre><code>var arr1 = [&quot;Tom&quot;, &quot;Andy&quot;, &quot;Jack&quot;];\nvar arr2 = List.of([1,2,3]);\narr2.add(499);\narr2.forEach((v) =&gt; print('${v}'));\n  \nvar map1 = {&quot;name&quot;: &quot;Tom&quot;, 'sex': 'male'}; \nvar map2 = new Map();\nmap2['name'] = 'Tom';\nmap2['sex'] = 'male';\nmap2.forEach((k,v) =&gt; print('${k}: ${v}')); \n</code></pre><p>容器里的元素也需要有类型，比如上述代码中arr2的类型是<strong>List&lt;int&gt;</strong>，map2的类型则为<strong>Map&lt;String, String&gt;</strong>。Dart会自动根据上下文进行类型推断，所以你后续往容器内添加的元素也必须遵照这一类型。</p><p>如果编译器自动推断的类型不符合预期，我们当然可以在声明时显式地把类型标记出来，不仅可以让代码提示更友好一些，更重要的是可以让静态分析器帮忙检查字面量中的错误，解除类型不匹配带来的安全隐患或是Bug。</p><p>以上述代码为例，如果往arr2集合中添加一个浮点数<strong>arr2.add(1.1)</strong>，尽管语义上合法，但编译器会提示类型不匹配，从而导致编译失败。</p><p>和Java语言类似，在初始化集合实例对象时，你可以为它的类型添加约束，也可以用于后续判断集合类型。</p><p>下面的这段代码，在增加了类型约束后，语义是不是更清晰了？</p><pre><code>var arr1 = &lt;String&gt;['Tom', 'Andy', 'Jack'];\nvar arr2 = new List&lt;int&gt;.of([1,2,3]);\narr2.add(499);\narr2.forEach((v) =&gt; print('${v}'));\nprint(arr2 is List&lt;int&gt;); // true\n\nvar map1 = &lt;String, String&gt;{'name': 'Tom','sex': 'male',};\nvar map2 = new Map&lt;String, String&gt;();\nmap2['name'] = 'Tom';\nmap2['sex'] = 'male';\nmap2.forEach((k,v) =&gt; print('${k}: ${v}')); \nprint(map2 is Map&lt;String, String&gt;); // true\n</code></pre><h3>常量定义</h3><p>如果你想定义不可变的变量，则需要在定义变量前加上final或const关键字：</p><ul>\n<li>const，表示变量在编译期间即能确定的值；</li>\n<li>final则不太一样，用它定义的变量可以在运行时确定值，而一旦确定后就不可再变。</li>\n</ul><p>声明const常量与final常量的典型例子，如下所示：</p><pre><code>final name = 'Andy';\nconst count = 3;\n\nvar x = 70;  \nvar y = 30;\nfinal z = x / y;\n</code></pre><p>可以看到，const适用于定义编译常量（字面量固定值）的场景，而final适用于定义运行时常量的场景。</p><h2>总结</h2><p>通过上面的介绍，相信你已经对Dart的基本语法和类型系统有了一个初步的印象。这些初步的印象，有助于你理解Dart语言设计的基本思路，在已有编程语言经验的基础上快速上手。</p><p>而对于流程控制语法：如<strong>if-else、for</strong>、<strong>while</strong>、<strong>do-while</strong>、<strong>break/continue、switch-case、assert</strong>，由于与其他编程语言类似，在这里我就不做一一介绍了，更多的Dart语言特性需要你在后续的使用过程中慢慢学习。在我们使用Dart的过程中，<a href=\"https://api.dartlang.org/stable/2.2.0/index.html\">官方文档</a>是我们最重要的学习参考资料。</p><p>恭喜你！你现在已经迈出了Dart语言学习的第一步。接下来，我们简单回顾一下今天的内容，以便加深记忆与理解：</p><ul>\n<li>在Dart中，所有类型都是对象类型，都继承自顶层类型Object，因此一切变量都是对象，数字、布尔值、函数和null也概莫能外；</li>\n<li>未初始化变量的值都是null；</li>\n<li>为变量指定类型，这样编辑器和编译器都能更好地理解你的意图。</li>\n</ul><h2>思考题</h2><p>对于集合类型List和Map，如何让其内部元素支持多种类型（比如，int、double）呢？又如何在遍历集合时，判断究竟是何种类型呢？</p><p>欢迎你在评论区给我留言分享你的观点，我会在下一篇文章中等待你！感谢你的收听，也欢迎你把这篇文章分享给更多的朋友一起阅读。</p><p></p>","comments":[{"had_liked":false,"id":112708,"user_name":"加温后的啤酒","can_delete":false,"product_type":"c1","uid":1344488,"ip_address":"","ucode":"5F30978CDB1606","user_header":"https://static001.geekbang.org/account/avatar/00/14/83/e8/f726c635.jpg","comment_is_top":false,"comment_ctime":1562808608,"is_pvip":false,"replies":[{"id":"41088","content":"在定义const常量时，你必须直接赋一个字面量，而不能是一个变量或者公式；<br>在定义final常量时，如何赋值就无所谓了，但赋值后就不能再改了。","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562865814,"ip_address":"","comment_id":112708,"utype":1}],"discussion_count":2,"race_medal":0,"score":"190541369632","product_id":100031001,"comment_content":"老师，能详细解释下final和const吗。你说“const，表示变量在编译期间即能确定的值； final 则可以在运行时确定值”。<br>那是否能理解为：在编译期间能确定的值 用const或者用final修饰都可以，但是在运行时确定的值，只能用final修饰？？<br>","like_count":45,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457866,"discussion_content":"在定义const常量时，你必须直接赋一个字面量，而不能是一个变量或者公式；\n在定义final常量时，如何赋值就无所谓了，但赋值后就不能再改了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562865814,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1160657,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b5/d1/527c7f86.jpg","nickname":"在下猴子派来的逗比","note":"","ucode":"44E35D1F7F0969","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298736,"discussion_content":"用java比较一下，const 跟static final作用一样，只能赋一个已知的值，不能赋值变量,final也一样，跟java的final基本一样用法","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1597391183,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112646,"user_name":"TerryGoForIt","can_delete":false,"product_type":"c1","uid":1020644,"ip_address":"","ucode":"701B0E72F15AB5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/e4/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1562798747,"is_pvip":false,"replies":[{"id":"41083","content":"如果类型是可枚举的，这样做是可以的。但不建议定义容器类型时用dynamic哈，最好还是明确下类型，比如放double和int的可以用num","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562865531,"ip_address":"","comment_id":112646,"utype":1}],"discussion_count":2,"race_medal":0,"score":"113231948443","product_id":100031001,"comment_content":"思考题：<br>Dart 是支持泛型的，所以可以使用形如 List&lt;dynamic&gt; 和 Map&lt;String, dynamic&gt; 为集合添加不同类型的元素，遍历时判断类型用 is 关键字。","like_count":27,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457834,"discussion_content":"如果类型是可枚举的，这样做是可以的。但不建议定义容器类型时用dynamic哈，最好还是明确下类型，比如放double和int的可以用num","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562865531,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1329434,"avatar":"https://static001.geekbang.org/account/avatar/00/14/49/1a/f092d231.jpg","nickname":"Mr.Martin","note":"","ucode":"147C126C4D4E48","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1703,"discussion_content":"类似Java","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562829394,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113536,"user_name":"davidzhou","can_delete":false,"product_type":"c1","uid":1018904,"ip_address":"","ucode":"F4B2929F4111DC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/18/7cbc34eb.jpg","comment_is_top":false,"comment_ctime":1563071800,"is_pvip":false,"replies":[{"id":"41542","content":"棒棒哒。纠正一个小问题：这里不是反射，是运行时类型。另外Flutter是不支持Dart 的反射的哈。","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1563211895,"ip_address":"","comment_id":113536,"utype":1}],"discussion_count":1,"race_medal":0,"score":"48807712056","product_id":100031001,"comment_content":"所有皆为对象，就可以通过反射机制获取对象的类型，不过，list和map不做类型约束的话，在读取里面数据会有很多坑，代码也不够健壮","like_count":12,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458264,"discussion_content":"棒棒哒。纠正一个小问题：这里不是反射，是运行时类型。另外Flutter是不支持Dart 的反射的哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563211895,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112912,"user_name":"七分呗轻唱","can_delete":false,"product_type":"c1","uid":1460664,"ip_address":"","ucode":"9170C8C9DD3468","user_header":"https://static001.geekbang.org/account/avatar/00/16/49/b8/cfebebf8.jpg","comment_is_top":false,"comment_ctime":1562842207,"is_pvip":false,"replies":[{"id":"41081","content":"可以的。<br>如果类型是可枚举的，用&quot;if(v is num)&quot; 或 &quot;if(v is String)&quot;也可以","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562865269,"ip_address":"","comment_id":112912,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31627613279","product_id":100031001,"comment_content":"runtimeType 判断","like_count":7,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457954,"discussion_content":"可以的。\n如果类型是可枚举的，用&amp;quot;if(v is num)&amp;quot; 或 &amp;quot;if(v is String)&amp;quot;也可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562865269,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112718,"user_name":"于留月","can_delete":false,"product_type":"c1","uid":1048918,"ip_address":"","ucode":"DE3516198CF1B2","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/56/03fb63d9.jpg","comment_is_top":false,"comment_ctime":1562809466,"is_pvip":false,"replies":[{"id":"41087","content":"可以的。不过不太建议用dynamic，如果是int和double，用num即可","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562865659,"ip_address":"","comment_id":112718,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18742678650","product_id":100031001,"comment_content":"可以使用List&lt;dynamic&gt; 和 Map&lt;dynamic&gt;支持多种类型内部元素，遍历集合时，可以根据泛型确认数据类型","like_count":4,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457875,"discussion_content":"可以的。不过不太建议用dynamic，如果是int和double，用num即可","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562865659,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":253353,"user_name":"白马","can_delete":false,"product_type":"c1","uid":1103540,"ip_address":"","ucode":"FD4DA715AC5984","user_header":"https://static001.geekbang.org/account/avatar/00/10/d6/b4/0808999d.jpg","comment_is_top":false,"comment_ctime":1602694742,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10192629334","product_id":100031001,"comment_content":"老师，有两个问题，1.可以直接print(v)吗？2.什么叫做类型安全？能麻烦您详细解释一下吗？","like_count":2},{"had_liked":false,"id":191021,"user_name":"九三","can_delete":false,"product_type":"c1","uid":1454691,"ip_address":"","ucode":"7D093ED7273CBE","user_header":"https://static001.geekbang.org/account/avatar/00/16/32/63/fa24f92e.jpg","comment_is_top":false,"comment_ctime":1584718176,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5879685472","product_id":100031001,"comment_content":"老师，int x = 20 和 var x = 20 是等同的吧， int x 比var x 表达上更好一些事吗","like_count":1,"discussions":[{"author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212117,"discussion_content":"是等同的。但是声明类型可以加快程序的运行速度。var还要进行自动判断。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584936407,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129279,"user_name":"晓冰","can_delete":false,"product_type":"c1","uid":1139231,"ip_address":"","ucode":"E0117E14E6BB8C","user_header":"https://static001.geekbang.org/account/avatar/00/11/62/1f/cd1cbdb1.jpg","comment_is_top":false,"comment_ctime":1567077647,"is_pvip":false,"replies":[{"id":"48124","content":"赞","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1567097432,"ip_address":"","comment_id":129279,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5862044943","product_id":100031001,"comment_content":"对于Map和List  我在写swift时也是需要指定确定类型的，同一个字典或者数组类型一般都要一样，如果不一样处理起来麻烦，自己的程序就不要给自己挖坑了 哈哈。 只有在一种情况下我才会使用Any 就是提交服务器数据的时候，由于配置的数据类型不可能完全一样。","like_count":2,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465379,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567097432,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114597,"user_name":"春阳","can_delete":false,"product_type":"c1","uid":1330210,"ip_address":"","ucode":"71AF3C3AD9409B","user_header":"https://static001.geekbang.org/account/avatar/00/14/4c/22/812f754a.jpg","comment_is_top":false,"comment_ctime":1563347927,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5858315223","product_id":100031001,"comment_content":"List 指定 length 后，默认数值都为null ，这是由于未初始化的变量都是 null<br>特性，并且这时候可以在安全下标内进行赋值，但是不指定 length 的 List 则无法指定下标赋值，因为超出了下标边界。","like_count":1},{"had_liked":false,"id":113452,"user_name":"薛敬飞","can_delete":false,"product_type":"c1","uid":1348064,"ip_address":"","ucode":"73F754F00911AD","user_header":"https://static001.geekbang.org/account/avatar/00/14/91/e0/39432f9b.jpg","comment_is_top":false,"comment_ctime":1563015243,"is_pvip":false,"replies":[{"id":"41335","content":"为了类型安全呀","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1563054180,"ip_address":"","comment_id":113452,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5857982539","product_id":100031001,"comment_content":"帮忙解释一下评论区中Dynamic？为啥不建议用这个？","like_count":1,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458229,"discussion_content":"为了类型安全呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563054180,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112965,"user_name":"Qilin Lou","can_delete":false,"product_type":"c1","uid":1031075,"ip_address":"","ucode":"29AD43329E7404","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bb/a3/af469d27.jpg","comment_is_top":false,"comment_ctime":1562856698,"is_pvip":false,"replies":[{"id":"41082","content":"可以的。<br>如果类型是可枚举的，用&quot;if(v is num)&quot; 或 &quot;if(v is String)&quot;也可以","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562865421,"ip_address":"","comment_id":112965,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5857823994","product_id":100031001,"comment_content":"抛砖引玉哈，直接拿各个item的runtimeType属性，简单代码如下<br><br>main() {<br>  var arr = [1,2,&#39;s&#39;];<br>  arr.forEach(<br>    (v) =&gt; print(&#39;The value is ${v}, and the type is ${v.runtimeType}&#39;)<br>  );<br>}","like_count":2,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457982,"discussion_content":"可以的。\n如果类型是可枚举的，用&amp;quot;if(v is num)&amp;quot; 或 &amp;quot;if(v is String)&amp;quot;也可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562865421,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1031075,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/bb/a3/af469d27.jpg","nickname":"Qilin Lou","note":"","ucode":"29AD43329E7404","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1738,"discussion_content":"极客时间的网页对一些字符做处理了。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562857889,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112661,"user_name":"Young","can_delete":false,"product_type":"c1","uid":1334725,"ip_address":"","ucode":"646F0A2D28EFEA","user_header":"https://static001.geekbang.org/account/avatar/00/14/5d/c5/2f359dc3.jpg","comment_is_top":false,"comment_ctime":1562803833,"is_pvip":false,"replies":[{"id":"41085","content":"可以的","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562865546,"ip_address":"","comment_id":112661,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5857771129","product_id":100031001,"comment_content":"类，方法参数，返回值都可以指定泛型，判断单个元素的类型可以使用is","like_count":1,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457844,"discussion_content":"可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562865546,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":311636,"user_name":"不负","can_delete":false,"product_type":"c1","uid":1238323,"ip_address":"","ucode":"147F5860711811","user_header":"https://static001.geekbang.org/account/avatar/00/12/e5/33/ff5c52ad.jpg","comment_is_top":false,"comment_ctime":1631354891,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1631354891","product_id":100031001,"comment_content":"【day003】<br>1. 集合类型 List 和 Map，如何让其内部元素支持多种类型（比如，int、double）？<br>    使用var 关键字 或 不指定子项类型 或 显示地指定为 dynamic 类型，如 List&lt;dynamic&gt;.of([1, &#39;test&#39;, true])<br>2. 如何在遍历集合时，判断究竟是何种类型呢？<br>    通过 is 操作符， xx is String","like_count":1,"discussions":[{"author":{"id":1334583,"avatar":"https://static001.geekbang.org/account/avatar/00/14/5d/37/061e7fac.jpg","nickname":"小苗晓雪","note":"","ucode":"B15FDF455853D2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583146,"discussion_content":"有道理~Mark!","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659931393,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":307907,"user_name":"吖金女的闻先生","can_delete":false,"product_type":"c1","uid":1202821,"ip_address":"","ucode":"41B7BB1CA68BF2","user_header":"https://static001.geekbang.org/account/avatar/00/12/5a/85/a9cf7c2a.jpg","comment_is_top":false,"comment_ctime":1629300920,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629300920","product_id":100031001,"comment_content":"实际上，你打开官方文档或查看源码，就会发现这些常见的运算符也是继承自 num：<br>这些操作符，不是继承num吧，应该是在num中运算符重载","like_count":0},{"had_liked":false,"id":281486,"user_name":"Geek_763c44","can_delete":false,"product_type":"c1","uid":2463529,"ip_address":"","ucode":"BEDDC86886EA2B","user_header":"","comment_is_top":false,"comment_ctime":1614763061,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614763061","product_id":100031001,"comment_content":"List&lt;String&gt;这个跟java的泛型一样吗？","like_count":0},{"had_liked":false,"id":172937,"user_name":"Geek_183f9e","can_delete":false,"product_type":"c1","uid":1576826,"ip_address":"","ucode":"70405BB513AA9E","user_header":"https://static001.geekbang.org/account/avatar/00/18/0f/7a/420b41cd.jpg","comment_is_top":false,"comment_ctime":1579362738,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579362738","product_id":100031001,"comment_content":"今日打卡","like_count":0},{"had_liked":false,"id":161545,"user_name":"cv0cv0","can_delete":false,"product_type":"c1","uid":1360093,"ip_address":"","ucode":"93FF9277F03FD0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLEIsgI4ub1VOKWtVOfouAzSqx8Yt8ibQEsAnwNJsJHmuJzzpQqG79HullvYwpic8hgiclgON2GwXSjw/132","comment_is_top":false,"comment_ctime":1576226902,"is_pvip":false,"replies":[{"id":"63401","content":"Dart 2.7才支持 https:&#47;&#47;dart.dev&#47;guides&#47;language&#47;extension-methods","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1577438829,"ip_address":"","comment_id":161545,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1576226902","product_id":100031001,"comment_content":"Dart 支持扩展函数吗？","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477755,"discussion_content":"Dart 2.7才支持 https://dart.dev/guides/language/extension-methods","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577438829,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150603,"user_name":"moran","can_delete":false,"product_type":"c1","uid":1594748,"ip_address":"","ucode":"50C1DA866968E3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/WIpLWqkJ8fRQEKqjkWE8ytr302DiaxNnUoiaK4MrmVoc2nibOcK13cDzAvnoiblMKYE5pyIoIia6sQJdBvHeoT60hxQ/132","comment_is_top":false,"comment_ctime":1573566513,"is_pvip":false,"replies":[{"id":"58652","content":"final可以，const是声明后","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1574059863,"ip_address":"","comment_id":150603,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573566513","product_id":100031001,"comment_content":"老师好，const和final可不可以理解为赋值后，值就不可更改？","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474214,"discussion_content":"final可以，const是声明后","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574059863,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140369,"user_name":"sixgod","can_delete":false,"product_type":"c1","uid":1375116,"ip_address":"","ucode":"43D67B62AEA126","user_header":"https://static001.geekbang.org/account/avatar/00/14/fb/8c/ffc4215e.jpg","comment_is_top":false,"comment_ctime":1570894167,"is_pvip":false,"replies":[{"id":"54846","content":"dynamic可以当任意类型使用","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1571290894,"ip_address":"","comment_id":140369,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1570894167","product_id":100031001,"comment_content":"用dynamic类型和object有什么区别吗","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470361,"discussion_content":"dynamic可以当任意类型使用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571290894,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1038715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d9/7b/2a28fa4a.jpg","nickname":"杰杰杰米","note":"","ucode":"A123D96408DCE1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379069,"discussion_content":"object 类型在调用不存在的方法时编译会报错\ndynamic 类型在调用不存在的方法时会尝试去调用 noSuchMenthod 方法，若还不存在，则报异常","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623660002,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130323,"user_name":"陶先森来了","can_delete":false,"product_type":"c1","uid":1454240,"ip_address":"","ucode":"2EE44C8BC8F576","user_header":"https://static001.geekbang.org/account/avatar/00/16/30/a0/ddde3c31.jpg","comment_is_top":false,"comment_ctime":1567425982,"is_pvip":false,"replies":[{"id":"49528","content":"通常我们并不需要单独安装Dart SDK，flutter会自带（bin&#47;cache&#47;dart-sdk目录），并且会锁死flutter对应的dart版本。如果你想试用最新的功能，可以把flutter切到dev channel，dev channel没有锁死Dart版本，你可以自行替换","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1567682887,"ip_address":"","comment_id":130323,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567425982","product_id":100031001,"comment_content":"我用Android Studio安装了Dart的安装包，版本是2.2.1的，但是我的项目是2.2.2以上的，请问如何升级Dart呢？还有就是能否单独安装Dart SDK?","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465906,"discussion_content":"通常我们并不需要单独安装Dart SDK，flutter会自带（bin/cache/dart-sdk目录），并且会锁死flutter对应的dart版本。如果你想试用最新的功能，可以把flutter切到dev channel，dev channel没有锁死Dart版本，你可以自行替换","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567682887,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124615,"user_name":"Eagle~","can_delete":false,"product_type":"c1","uid":1457983,"ip_address":"","ucode":"83987CED72594E","user_header":"https://static001.geekbang.org/account/avatar/00/16/3f/3f/3ed9119b.jpg","comment_is_top":false,"comment_ctime":1565928531,"is_pvip":false,"replies":[{"id":"45790","content":"参考了C++的实现","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1565956998,"ip_address":"","comment_id":124615,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565928531","product_id":100031001,"comment_content":"文中的“实际上，你打开官方文档或查看源码，就会发现这些常见的运算符也是继承自 num：”不是很理解，为什么运算符能继承呢？","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463253,"discussion_content":"参考了C++的实现","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565956998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119613,"user_name":"lf","can_delete":false,"product_type":"c1","uid":1610496,"ip_address":"","ucode":"047770DA537EB4","user_header":"https://static001.geekbang.org/account/avatar/00/18/93/00/afeeb6ed.jpg","comment_is_top":false,"comment_ctime":1564637423,"is_pvip":false,"replies":[{"id":"43936","content":"常量构造函数，初始化完就不让改了","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1564678012,"ip_address":"","comment_id":119613,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1564637423","product_id":100031001,"comment_content":"老师，flutter源码中构造函数都是用const，为什么呢","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460979,"discussion_content":"常量构造函数，初始化完就不让改了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564678012,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113220,"user_name":"呼呼","can_delete":false,"product_type":"c1","uid":1594623,"ip_address":"","ucode":"BFD64DD4D64ED1","user_header":"https://static001.geekbang.org/account/avatar/00/18/54/ff/7c878439.jpg","comment_is_top":false,"comment_ctime":1562918745,"is_pvip":false,"replies":[{"id":"41339","content":"debug环境正常吗","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1563054467,"ip_address":"","comment_id":113220,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1562918745","product_id":100031001,"comment_content":"升级到最新的flutter 版本，打包生成ipa，app打开是空白的，请教一下，这个是什么原因呢？","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458116,"discussion_content":"debug环境正常吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563054467,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1594623,"avatar":"https://static001.geekbang.org/account/avatar/00/18/54/ff/7c878439.jpg","nickname":"呼呼","note":"","ucode":"BFD64DD4D64ED1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1968,"discussion_content":"debug环境是正常的，是因为没有“flutter build ios”编译一次，生成ipa包之后，运行比较卡顿。尝试了使用&#34;flutter build apk&#34; 生成apk,安卓低端的机器运行很流畅。请问这种现象正常吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563154859,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}