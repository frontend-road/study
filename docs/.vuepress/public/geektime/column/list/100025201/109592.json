{"id":109592,"title":"27 | 实战（二）：怎么设计一个“画图”程序？","content":"<p>你好，我是七牛云许式伟。</p><p>上一讲开始，我们进入了实战模式。从目前看到的反馈看，我的预期目标并没有达到。</p><p>我复盘了一下，虽然这个程序看起来比较简单，但是实际上仍然有很多需要交代而没有交代清楚的东西。</p><p>我个人对这个例子的期望是比较高的。因为我认为 “画图” 程序非常适合作为架构实战的第一课。“画图” 程序需求的可伸缩性非常大，完完全全是一个迷你小 Office 程序，很适合由浅及深去谈架构的演进。</p><p>所以我今天微调了一下计划，把服务端对接往后延后一讲，增加一篇 “实战（中）” 篇。这个“中”篇一方面把前面 “实战（上）” 篇没有交代清楚的补一下，另一方面对 “画图” 程序做一次需求的迭代。</p><h2>MVP 版画图程序</h2><p>先回到 “实战（上）” 篇。这个版本对画图程序来说，基本上是一个 MVP 版本：只能增加新图形，没法删除，也没法修改。</p><p>怎么做？我们先看 Model 层，它的代码就是一个 <a href=\"https://github.com/qiniu/qpaint/blob/v26/paintweb/www/dom.js\">dom.js</a> 文件。从数据结构来说，它是一棵以 QPaintDoc 为根的 DOM 树。这个 DOM 树只有三级：Document -&gt; Shape -&gt; LineStyle。具体细节可以参阅下表：</p><p><img src=\"https://static001.geekbang.org/resource/image/5a/55/5a2233a851ae2cb234d001725e437755.png?wh=612*305\" alt=\"\"></p><p>这个表列出的是 Model 和 View、Controllers 的耦合关系：Model 都为它们提供了什么？可以看出，View 层当前对 Model 层除了绘制（onpaint），没有其他任何需求。而各个 Controller，对 Model 的需求看起来似乎方法数量不少，但是实质上目的也只有一个，那就是创建图形（addShape）。</p><!-- [[[read_end]]] --><p>我们再看 View 层。它的代码主要是一个 <a href=\"https://github.com/qiniu/qpaint/blob/v26/paintweb/www/index.htm\">index.htm</a> 文件和一个 <a href=\"https://github.com/qiniu/qpaint/blob/v26/paintweb/www/view.js\">view.js</a> 文件。View 层只依赖 Model 层，并且只依赖一个 doc.onpaint 函数。所以我们把关注点放在 View 自身的功能。</p><p>View 层只有一个 QPaintView 类。我们将其功能分为了三类：属于 Model 层职责相关的，属于 View 自身职责相关的，以及为 Controller 层服务的，得到下表。</p><p><img src=\"https://static001.geekbang.org/resource/image/09/4e/09297c130d51b3f6e502522367284b4e.png?wh=613*542\" alt=\"\"></p><p>最后，我们来看 Controller 层。Controller 层的文件有很多，这还是一些 Controller 因为实现相近被合并到一个文件，如下所示。</p><ul>\n<li>Menu, PropSelectors, MousePosTracker： <a href=\"https://github.com/qiniu/qpaint/blob/v26/paintweb/www/accel/menu.js\">accel/menu.js</a></li>\n<li>Create Path：<a href=\"https://github.com/qiniu/qpaint/blob/v26/paintweb/www/creator/path.js\">creator/path.js</a></li>\n<li>Create FreePath：<a href=\"https://github.com/qiniu/qpaint/blob/v26/paintweb/www/creator/freepath.js\">creator/freepath.js</a></li>\n<li>Create Line, Rect, Ellipse, Circle： <a href=\"https://github.com/qiniu/qpaint/blob/v26/paintweb/www/creator/rect.js\">creator/rect.js</a></li>\n</ul><p>Controller 位于 MVC 的最上层，我们对它的关注点就不再是它的规格本身，也没人去调用它的方法。所以我们把关注点放在了每个 Controller 都怎么用 Model 和 View 的。</p><p>我们列了个表，如下。注意 Controller 对事件（Event）的使用从 View 中单独列出来了。</p><p><img src=\"https://static001.geekbang.org/resource/image/76/2a/769fa627d0cf556a9fb8fb494005e92a.png?wh=823*628\" alt=\"\"></p><p>通过以上三张表对照着看，可以清晰看出 Model、View、Controllers 是怎么关联起来的。</p><h2>改进版的画图程序</h2><p>MVP 版本的画图程序，用着就会发现不好用，毕竟图形创建完就没法改了。所以我们打算做一个新版本出来，功能上有这样一些改进。</p><ul>\n<li>选择一个图形，允许删除、移动或者对其样式进行修改。</li>\n<li>图形样式增加 fillColor（填充色）。</li>\n<li>更加现代的交互范式：默认处于 ShapeSelector 状态，创建完图形后自动回到此状态。</li>\n<li>选择图形后，界面上的当前样式自动更新为被选图形的样式。</li>\n</ul><p>怎么改我们的程序？</p><p>完整的差异对比，请参见：</p><ul>\n<li><a href=\"https://github.com/qiniu/qpaint/compare/v26...v27\">https://github.com/qiniu/qpaint/compare/v26...v27</a></li>\n</ul><p>下面，我们将详细讲解这些修改背后的思考。</p><p>我们先看 Model 层，新的规格见下表。</p><ul>\n<li><a href=\"https://github.com/qiniu/qpaint/blob/v27/paintweb/www/dom.js\">dom.js</a></li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/a1/6e/a1faf9a3a19124e7240b06341a7d356e.png?wh=616*557\" alt=\"\"></p><p>为了方便大家理解，我们做了一个 Model 的 ChangeNotes 表格，如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/2a/42/2a0dbe3fe4a13e555b13dd3b247d7042.png?wh=1018*399\" alt=\"\"></p><p>大部分是新功能的增加，不提。我们重点关注一个点：QLineStyle 改名为 QShapeStyle，且其属性 width、color 被改名为 lineWidth、lineColor。这些属于不兼容修改，相当于做了一次小重构。</p><p>重构关键是要及时处理，把控质量。尤其对 JavaScript 这种弱类型语言，重构的心智负担较大。为了保证质量仍然可控，最好辅以足够多的单元测试。</p><p>这也是我个人会更喜欢静态类型语言的原因，重构有任何遗漏，编译器会告诉你哪里漏改了。当然，这并不意味着单元测试可以省略，对每一门语言来说，自动化的测试永远是质量保障的重要手段。</p><p>话题回到图形样式。最初我们 new QLine、QRect、QEllipse、QPath 的时候，传入的最后一个参数是 QLineStyle，从设计上这是一次失误，这意味着后面这些构造还是都需要增加更多参数如 QFillStyle 之类。</p><p>把最后一个参数改为 QShapeStyle，这从设计上就完备了。后面图形样式就算有更多的演进，也会集中到 QShapeStyle 这一个类上。</p><p>当前 QShapeStyle 的数据结构是这样的：</p><pre><code>class QShapeStyle {\n  lineWidth: number\n  lineColor: string\n  fillColor: string\n}\n</code></pre><p>那么，这是合理的么？未来潜在的演进是什么？</p><p>对需求演进的推演，关键是眼光看多远。当前各类 GDI 对 LineStyle、FillStyle 支持都非常丰富。所以如果作为一个实实在在要去迭代的画图程序来说，上面这个 QShapeStyle 必然还会面临一次重构。变成如下这个样子：</p><pre><code>class QLineStyle {\n  width: number\n  color: string  \n}\n\nclass QFillStyle {\n  color: string  \n}\n\nclass QShapeStyle {\n  line: any\n  fill: any\n}\n</code></pre><p>为什么 QShapeStyle 里面的 line 不是 QLineStyle，fill 不是 QFillStyle，而是 any 类型？因为它们都只是简单版本的线型样式和填充样式。</p><p>举个例子，在 GDI 系统中，FillStyle 往往还可以是一张图片平铺，也可以是多个颜色渐变填充，这些都无法用 QFillStyle 来表示。所以这里的 QFillStyle 更好的叫法也许是 QSimpleFillStyle。</p><p>聊完了 Model 层，我们再来看 View 层。</p><ul>\n<li><a href=\"https://github.com/qiniu/qpaint/blob/v27/paintweb/www/view.js\">view.js</a></li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/97/0f/97573e6adacaccee0708b6d8937e650f.png?wh=615*564\" alt=\"\"></p><p>View 层的变化不大。为了给大家更直观的感觉，我这里也列了一个 ChangeNotes 表格，如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/74/35/74ec3e1f23a052d57f677603b1e9c035.png?wh=812*265\" alt=\"\"></p><p>其中，properties 改名为 style，以及删除了 get lineStyle()，和 properties 统一为 style。这个和我上面说的 Model 层的小重构相关，并不是本次新版本的功能引起的。</p><p>所以 View 层真正的变化是两个：</p><ul>\n<li>引入了 selection，当前只能单选一个 shape；在 selection 变化时会发出 onSelectionChanged 事件；</li>\n<li>引入了 onControllerReset 事件，它在 Controller 完成或放弃图形的创建时发出。</li>\n</ul><p>引入 selection 比较常规。View 变复杂了通常都会有 selection，唯一需要考虑的是 selection 会有什么样的变化，对于 Office 类程序，如果 selection 只允许是单 shape 这不太合理，但我们这里略过，不进行展开。</p><p>我们重点谈 onControllerReset 事件。</p><p>onControllerReset 事件是创建图形的 Controller（例如 QPathCreator、QRectCreator 等）发出，并由 Menu 这个 Controller 接收。</p><p>这就涉及了一个问题：类似情况还会有多少？以后是不是还会有更多的事件需要在 Controller 之间传递，需要 View 来中转的？</p><p>这个问题就涉及了 View 层事件机制的设计问题。和这个问题相关的有：</p><ul>\n<li>要不要支持任意的事件；</li>\n<li>监听事件是支持单播还是多播？</li>\n</ul><p>从最通用的角度，肯定是支持任意事件、支持多播。比如我们定义一个 QEventManager 类，规格如下。</p><pre><code>class QEventManager {\n  fire(eventName: string, params: ...any): void\n  addListener(eventName: string, handler: Handler): void\n  removeListener(eventName: string, handler: Handler): void\n}\n</code></pre><p>但是，View 的事件机制设定，需要在通用性与架构的可控性之平衡。一旦 View 聚合了这个 QEventManager，通用是通用了，但是 Controller 之间会有什么样的事件飞来飞去，就比较难去从机制上把控了。</p><p>代码即文档。如果能够用代码约束的事情，最好不要在文档中来约束。</p><p>所以，就算是我们底层实现 QEventManager 类，我个人也不倾向于在 View 的接口中直接将它暴露出去，而是定义更具体的 fireControllerReset、 onControllerReset/offControllerReset 方法，让架构的依赖直观化。</p><p>具体代码看起来是这样的：</p><pre><code>class QPaintView {\n  constructor() {\n    this._eventManager = new QEventManager()\n  }\n  onControllerReset(handler) {\n    this._eventManager.addListener(&quot;onControllerReset&quot;, handler)\n  }\n  offControllerReset(handler) {\n    this._eventManager.removeListener(&quot;onControllerReset&quot;, handler)\n  }\n  fireControllerReset() {\n    this._eventManager.fire(&quot;onControllerReset&quot;)\n  }\n}\n</code></pre><p>聊完了 View 层，我们接着聊 Controller 层。我们也把每个 Controller 怎么用 Model 和 View 列了个表，如下。</p><ul>\n<li>Menu, PropSelectors, MousePosTracker： <a href=\"https://github.com/qiniu/qpaint/blob/v27/paintweb/www/accel/menu.js\">accel/menu.js</a></li>\n<li>ShapeSelector：<a href=\"https://github.com/qiniu/qpaint/blob/v27/paintweb/www/accel/select.js\">accel/select.js</a></li>\n<li>Create Path：<a href=\"https://github.com/qiniu/qpaint/blob/v27/paintweb/www/creator/path.js\">creator/path.js</a></li>\n<li>Create FreePath：<a href=\"https://github.com/qiniu/qpaint/blob/v27/paintweb/www/creator/freepath.js\">creator/freepath.js</a></li>\n<li>Create Line, Rect, Ellipse, Circle： <a href=\"https://github.com/qiniu/qpaint/blob/v27/paintweb/www/creator/rect.js\">creator/rect.js</a></li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/5e/95/5e3f87dc0a0695028362bc0fe28ea895.png?wh=845*747\" alt=\"\"></p><p>内容有点多。为了更清楚地看到差异，我们做了 ChangeNotes 表格，如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/6e/e9/6e97b0ccb1268fdcc2cea62dccd7e4e9.png?wh=979*705\" alt=\"\"></p><p>首先，Menu、QPathCreator、QFreePathCreator、QRectCreator 的变更，主要因为引入了新的交互范式导致，我们为此引入了 onControllerReset 事件。还有一个变化是 QLineStyle 变 QShapeStyle，这一点前面已经详细讨论，不提。</p><p>所以 Controller 层的变化其实主要是两个。</p><p>其一，PropSelectors。这个 Controller 要比上一版本的复杂很多：之前只是修改 View 的 properties (现在是 style) 属性，以便于创建图形时引用。现在是改变它时还会作用于 selection (被选中的图形)，改变它的样式；而且，在 selection 改变时，会自动更新界面以反映被选图形的样式。</p><p>其二，QShapSelector。这是新增加的 Controller，支持选择图形，支持删除、移动被选择的图形。</p><p>通过这次的需求迭代我们可以看出，目前 Model、View、Controller 的分工，可以使需求的分解非常正交。</p><p>Model 只需要考虑需求导致的数据结构演进，并抽象出足够自然的业务接口。View 层非常稳定，主要起到各类角色之间的桥接作用。Controller 层每个 Controller 各司其职，彼此之间不会受到对方需求的干扰。</p><h2>结语</h2><p>今天我们结合“画图” 程序重新梳理了一遍 MVC 架构。并且我们更进一步，通过对画图程序进行一次需求演进，来观察 MVC 架构各个角色对需求变更的敏感性。需要再次强调的是，虽然我们基于 Web 开发，但是我们当前给出的画图程序本质上还是单机版的。</p><p>如果你对今天的内容有什么思考与解读，欢迎给我留言，我们一起讨论。下一讲我们将继续实战一个联网版本的画图程序。</p><p>如果你觉得有所收获，也欢迎把文章分享给你的朋友。感谢你的收听，我们下期再见。</p>","comments":[{"had_liked":false,"id":116454,"user_name":"有铭","can_delete":false,"product_type":"c1","uid":1046302,"ip_address":"","ucode":"2C7CB36CA5C04C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/3XbCueYYVWTiclv8T5tFpwiblOxLphvSZxL4ujMdqVMibZnOiaFK2C5nKRGv407iaAsrI0CDICYVQJtiaITzkjfjbvrQ/132","comment_is_top":false,"comment_ctime":1563852194,"is_pvip":false,"replies":[{"id":"42586","content":"理解，我想一下怎么才能说得更明白。这里面每一个角色的分解是有非常明确的套路可循，遵循文章中说的几个要点即可。","user_name":"作者回复","comment_id":116454,"uid":"1228022","ip_address":"","utype":1,"ctime":1563853629,"user_name_real":"许式伟-七牛云(已满)"}],"discussion_count":1,"race_medal":0,"score":"139002805666","product_id":100025201,"comment_content":"老师，我知道你这章讲了很厉害的东西，但是我也只能和上面某人说的一样，说一声：“不明觉厉”。原因不在别的，抽象现实需要对现实有很长时间的切身体会，必须要经历痛苦，有痛彻灵魂，深刻的总结，才能体会到解决方案的甜美。这里的大部分人，包括我在内，没有在实践里经历“从头构建一个画图”程序。所以对于这章的知识，看得懂，但是难有感悟，换个场景，就使不出来","like_count":33,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459546,"discussion_content":"理解，我想一下怎么才能说得更明白。这里面每一个角色的分解是有非常明确的套路可循，遵循文章中说的几个要点即可。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563853629,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121875,"user_name":"Geek_e55641","can_delete":false,"product_type":"c1","uid":1081875,"ip_address":"","ucode":"63201F64CC5FC2","user_header":"","comment_is_top":false,"comment_ctime":1565239961,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"35924978329","product_id":100025201,"comment_content":"流程图能够更清晰表示需求，组件图能够表示模块划分，类图显示设计依赖<br>希望能用通用表示法，纯文字不太好理解","like_count":9},{"had_liked":false,"id":118061,"user_name":"Being","can_delete":false,"product_type":"c1","uid":1152227,"ip_address":"","ucode":"80A8783927B650","user_header":"https://static001.geekbang.org/account/avatar/00/11/94/e3/ed118550.jpg","comment_is_top":false,"comment_ctime":1564222624,"is_pvip":false,"replies":[{"id":"43254","content":"我们这个例子其实controller都是插件，只是在init application的时候创建一下就完了，是不是实现成标准plugin机制不是关键点","user_name":"作者回复","comment_id":118061,"uid":"1228022","ip_address":"","utype":1,"ctime":1564234095,"user_name_real":"许式伟-七牛云(已满)"}],"discussion_count":1,"race_medal":0,"score":"23039059104","product_id":100025201,"comment_content":"实战一二的例子套用前面的知识点，对MVC的理解慢慢清晰了。更重要的是在实战的学习中也结合现在自己手头的项目进行思考。现在在做地图方面结合图元的绘制，目前的平台是Qt。我负责的是图元模块，即要对图元抽象并且使用Qt的绘制方法，当然，对于Qt的部分是严格控制在绘制部分的，也是考虑了跨平台的因素。图元部分其实是抽象了接口的，对于上层的调用完全不用关心底层绘制是用的什么平台。整个项目也是明确了几个模块来管理和组织事件、绘制、地图数据、资源引擎、算法等。仔细考虑下来，也是绕不开MVC给的模式的。有一个很明显的感受是，关于Controller层，是可以扩展成插件的，也就是说，Controller基于业务上的各种需求，也需要更大的灵活性。思考是，完全可以把事件管理起来，抽象出事件核心驱动，然后分配给各个Controller各取所需，至于是插件还是观察者，其实就是具体实现机制的区别了。","like_count":5,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460244,"discussion_content":"我们这个例子其实controller都是插件，只是在init application的时候创建一下就完了，是不是实现成标准plugin机制不是关键点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564234095,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117055,"user_name":"Taozi","can_delete":false,"product_type":"c1","uid":1021926,"ip_address":"","ucode":"DD6567A31B3E33","user_header":"","comment_is_top":false,"comment_ctime":1563960316,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18743829500","product_id":100025201,"comment_content":"多看几遍代码，先看v26分支，已经明朗很多了。谢谢。","like_count":5},{"had_liked":false,"id":116537,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1563865930,"is_pvip":false,"replies":[{"id":"42620","content":"明白。这些反馈对我很有收益。","user_name":"作者回复","comment_id":116537,"uid":"1228022","ip_address":"","utype":1,"ctime":1563877119,"user_name_real":"许式伟-七牛云(已满)"}],"discussion_count":2,"race_medal":0,"score":"14448767818","product_id":100025201,"comment_content":"每一个字都看得懂，但连到一起就看不懂了。","like_count":3,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459581,"discussion_content":"明白。这些反馈对我很有收益。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563877119,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1112490,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f9/aa/3e80212e.jpg","nickname":"龙猫","note":"","ucode":"FD726CC969EF9C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382132,"discussion_content":"O(∩_∩)O哈哈~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625447739,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118034,"user_name":"Demon.Lee","can_delete":false,"product_type":"c1","uid":1052859,"ip_address":"","ucode":"7F0E5493A8E345","user_header":"https://static001.geekbang.org/account/avatar/00/10/10/bb/f1061601.jpg","comment_is_top":false,"comment_ctime":1564215044,"is_pvip":false,"replies":[{"id":"43255","content":"嗯，后面可以看一个不解耦的版本","user_name":"作者回复","comment_id":118034,"uid":"1228022","ip_address":"","utype":1,"ctime":1564234122,"user_name_real":"许式伟-七牛云(已满)"}],"discussion_count":1,"race_medal":1,"score":"10154149636","product_id":100025201,"comment_content":"我也没怎么看懂，估计是不会前端，看的时候我一直在告诉自己:  老师是要告诉我们，解耦，解耦，解耦!","like_count":2,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460231,"discussion_content":"嗯，后面可以看一个不解耦的版本","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564234122,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172525,"user_name":"瓜瓜","can_delete":false,"product_type":"c1","uid":1108505,"ip_address":"","ucode":"F90A5135A9BB4B","user_header":"https://static001.geekbang.org/account/avatar/00/10/ea/19/14018371.jpg","comment_is_top":false,"comment_ctime":1579219888,"is_pvip":false,"replies":[{"id":"66891","content":"因为js是动态类型语言，所以这个接口只出现在文档中","user_name":"作者回复","comment_id":172525,"uid":"1228022","ip_address":"","utype":1,"ctime":1579221345,"user_name_real":"许式伟-七牛云(已满)"}],"discussion_count":2,"race_medal":0,"score":"5874187184","product_id":100025201,"comment_content":"interface Shape {<br>    onpaint(ctx: CanvasRenderingContext2D): void<br>    bound(): Rect<br>    hitTest(pt: Point): {hitCode: number, hitShape: Shape}<br>    setProp(key: string, val: any): void<br>    move(dx, dy: number): void<br>}<br>老师您好，readme中的这个接口，没有看到在什么地方呢，是不是我理解的不对","like_count":1,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481768,"discussion_content":"因为js是动态类型语言，所以这个接口只出现在文档中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579221345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1108505,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ea/19/14018371.jpg","nickname":"瓜瓜","note":"","ucode":"F90A5135A9BB4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138322,"discussion_content":"好的，谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579235889,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127630,"user_name":"zKerry","can_delete":false,"product_type":"c1","uid":1497740,"ip_address":"","ucode":"9FB006D1A38D3F","user_header":"","comment_is_top":false,"comment_ctime":1566754291,"is_pvip":false,"replies":[{"id":"47322","content":"这里侧重点是模块边界，不是流程","user_name":"作者回复","comment_id":127630,"uid":"1228022","ip_address":"","utype":1,"ctime":1566790559,"user_name_real":"许式伟-七牛云(已满)"}],"discussion_count":1,"race_medal":0,"score":"5861721587","product_id":100025201,"comment_content":"接口之间的调用关系，最好用流程图啊，看图表有点懵。","like_count":1,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464585,"discussion_content":"这里侧重点是模块边界，不是流程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566790559,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117648,"user_name":"3k","can_delete":false,"product_type":"c1","uid":1528920,"ip_address":"","ucode":"0D4D20680F3289","user_header":"","comment_is_top":false,"comment_ctime":1564104971,"is_pvip":false,"replies":[{"id":"43140","content":"这个在下一章，服务端架构","user_name":"作者回复","comment_id":117648,"uid":"1228022","ip_address":"","utype":1,"ctime":1564135310,"user_name_real":"许式伟-七牛云(已满)"}],"discussion_count":1,"race_medal":0,"score":"5859072267","product_id":100025201,"comment_content":"MVC相对简单，可以讲讲微服务模型之类的架构么？","like_count":1,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460067,"discussion_content":"这个在下一章，服务端架构","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564135310,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116859,"user_name":"Charles","can_delete":false,"product_type":"c1","uid":1001410,"ip_address":"","ucode":"32646D78CC0389","user_header":"https://static001.geekbang.org/account/avatar/00/0f/47/c2/e9fa4cf6.jpg","comment_is_top":false,"comment_ctime":1563932126,"is_pvip":false,"replies":[{"id":"42970","content":"最好能够先大致看一下代码","user_name":"作者回复","comment_id":116859,"uid":"1228022","ip_address":"","utype":1,"ctime":1564029834,"user_name_real":"许式伟-七牛云(已满)"}],"discussion_count":1,"race_medal":0,"score":"5858899422","product_id":100025201,"comment_content":"许老师，我反复读了好久还是有点懵懂，可能要先去读下完整的源码再回来读可能好一些？","like_count":1,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459713,"discussion_content":"最好能够先大致看一下代码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564029834,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116347,"user_name":"我的腿腿","can_delete":false,"product_type":"c1","uid":1239277,"ip_address":"","ucode":"2AAA36A7C3AD75","user_header":"https://static001.geekbang.org/account/avatar/00/12/e8/ed/f9347e5e.jpg","comment_is_top":false,"comment_ctime":1563842911,"is_pvip":false,"replies":[{"id":"42528","content":"本例中什么地方没看懂？","user_name":"作者回复","comment_id":116347,"uid":"1228022","ip_address":"","utype":1,"ctime":1563844609,"user_name_real":"许式伟-七牛云(已满)"}],"discussion_count":1,"race_medal":0,"score":"5858810207","product_id":100025201,"comment_content":"最近在看GoF的设计模式，里面也是用图形界面做例子引入某某模式，和作者的不谋而合，不过还是太抽象了！感觉在爬一座充满荆棘的山","like_count":1,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459495,"discussion_content":"本例中什么地方没看懂？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563844609,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":313045,"user_name":"méng","can_delete":false,"product_type":"c1","uid":1338665,"ip_address":"","ucode":"44DAD63C738E9F","user_header":"https://static001.geekbang.org/account/avatar/00/14/6d/29/ae69a30f.jpg","comment_is_top":false,"comment_ctime":1632226867,"is_pvip":false,"replies":[{"id":"113416","content":"这里谈的是不同层的关系。每层肯定得有对方的调用，否则它们就是孤立系统，不存在耦合，但是显然这不可能。所以核心是搞清楚它们是怎么被关联起来的，研究清楚后回去看MVC模型图，看是否与其画的关系一致。","user_name":"作者回复","comment_id":313045,"uid":"1228022","ip_address":"","utype":1,"ctime":1632265364,"user_name_real":"许式伟-七牛云(已满)"}],"discussion_count":1,"race_medal":0,"score":"1632226867","product_id":100025201,"comment_content":"看到这里蒙了，model层，view层列出来都有controller","like_count":1,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527209,"discussion_content":"这里谈的是不同层的关系。每层肯定得有对方的调用，否则它们就是孤立系统，不存在耦合，但是显然这不可能。所以核心是搞清楚它们是怎么被关联起来的，研究清楚后回去看MVC模型图，看是否与其画的关系一致。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632265364,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287992,"user_name":"不温暖啊不纯良","can_delete":false,"product_type":"c1","uid":2079117,"ip_address":"","ucode":"204474A214E00C","user_header":"https://static001.geekbang.org/account/avatar/00/1f/b9/8d/00bded19.jpg","comment_is_top":false,"comment_ctime":1618242548,"is_pvip":false,"replies":[{"id":"104580","content":"加油","user_name":"作者回复","comment_id":287992,"uid":"1228022","ip_address":"","utype":1,"ctime":1618294003,"user_name_real":"许式伟-七牛云(已满)"}],"discussion_count":1,"race_medal":0,"score":"1618242548","product_id":100025201,"comment_content":"老师今天确实没看懂，但我觉得不应用到实战中的设计都是耍流氓，于是我打算多看几遍，直到看懂为止。","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518480,"discussion_content":"加油","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618294003,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":279134,"user_name":"呆子練","can_delete":false,"product_type":"c1","uid":1505595,"ip_address":"","ucode":"CF6697660CF325","user_header":"https://static001.geekbang.org/account/avatar/00/16/f9/3b/f631a6dd.jpg","comment_is_top":false,"comment_ctime":1613634002,"is_pvip":false,"replies":[{"id":"101433","content":"多谢推荐","user_name":"作者回复","comment_id":279134,"uid":"1228022","ip_address":"","utype":1,"ctime":1613641599,"user_name_real":"许式伟-七牛云(已满)"}],"discussion_count":1,"race_medal":0,"score":"1613634002","product_id":100025201,"comment_content":"https:&#47;&#47;martinfowler.com&#47;eaaDev&#47;uiArchs.html<br>为了理解MVC模式，读了下这篇文章，感觉有点帮助。","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515633,"discussion_content":"多谢推荐","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613641599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":250111,"user_name":"浩然","can_delete":false,"product_type":"c1","uid":1378201,"ip_address":"","ucode":"FC771E92869796","user_header":"https://static001.geekbang.org/account/avatar/00/15/07/99/2c12c56c.jpg","comment_is_top":false,"comment_ctime":1600938359,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600938359","product_id":100025201,"comment_content":"要是按之前写法我觉得我会在这些对象上监听各种事件 然后就会出现各种状态，然后应该就是各种BUG～<br>挪了下代码～ 就当熟悉思想。https:&#47;&#47;github.com&#47;jianghaoran116&#47;study-code&#47;tree&#47;mvc-27&#47;mvc<br>最后问下老师，在Controller层里拿Model层的Qpath、QEllipse等是不是不合适，我把这些给了VM层，然后Ccontroller去VM那取","like_count":0},{"had_liked":false,"id":180196,"user_name":"子杰sai","can_delete":false,"product_type":"c1","uid":1494536,"ip_address":"","ucode":"291DF79EE4D4D9","user_header":"https://static001.geekbang.org/account/avatar/00/16/ce/08/d6d6ba0d.jpg","comment_is_top":false,"comment_ctime":1582208298,"is_pvip":false,"replies":[{"id":"70009","content":"后面实现了你说的功能","user_name":"作者回复","comment_id":180196,"uid":"1228022","ip_address":"","utype":1,"ctime":1582248439,"user_name_real":"许式伟-七牛云(已满)"}],"discussion_count":1,"race_medal":0,"score":"1582208298","product_id":100025201,"comment_content":"老师，您好，如果需求改成画完图形后还是维持当前工具不变，但是如果鼠标移动到图形时鼠标会变成十字，另外在图形上点击时可以拖动图形，即选择工具的功能，但点击在空白处时，又可以用当前工具画图形，我想问问这种需求应该怎么实现比较好呢，感觉工具间就有点不太正交。","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484560,"discussion_content":"后面实现了你说的功能","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582248439,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172538,"user_name":"瓜瓜","can_delete":false,"product_type":"c1","uid":1108505,"ip_address":"","ucode":"F90A5135A9BB4B","user_header":"https://static001.geekbang.org/account/avatar/00/10/ea/19/14018371.jpg","comment_is_top":false,"comment_ctime":1579221341,"is_pvip":false,"replies":[{"id":"66894","content":"何为默认？","user_name":"作者回复","comment_id":172538,"uid":"1228022","ip_address":"","utype":1,"ctime":1579222737,"user_name_real":"许式伟-七牛云(已满)"}],"discussion_count":2,"race_medal":0,"score":"1579221341","product_id":100025201,"comment_content":"interface Controller {<br>  stop(): void<br>  onpaint(ctx: CanvasRenderingContext2D): void<br>}<br>这个接口是默认的吗？？","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481770,"discussion_content":"何为默认？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579222737,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1108505,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ea/19/14018371.jpg","nickname":"瓜瓜","note":"","ucode":"F90A5135A9BB4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138320,"discussion_content":"这个只是用来描述接口信息的吗，代码里面没有看到这个接口呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579235851,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130582,"user_name":"糊李糊涂","can_delete":false,"product_type":"c1","uid":1197625,"ip_address":"","ucode":"E0F6064CBA32B1","user_header":"https://static001.geekbang.org/account/avatar/00/12/46/39/e545c885.jpg","comment_is_top":false,"comment_ctime":1567488106,"is_pvip":false,"replies":[{"id":"48932","content":"这块可能是因为我自己的背景的原因，有些知识想当然认为比较容易理解。后面还会就这个案例进行补充讲解。","user_name":"作者回复","comment_id":130582,"uid":"1228022","ip_address":"","utype":1,"ctime":1567519323,"user_name_real":"许式伟-七牛云(已满)"}],"discussion_count":1,"race_medal":0,"score":"1567488106","product_id":100025201,"comment_content":"许大 这部分还是讲的有点 凌乱，我这写了4年web 愣是捋了半天，可能这种例子适合视频讲吧","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466016,"discussion_content":"这块可能是因为我自己的背景的原因，有些知识想当然认为比较容易理解。后面还会就这个案例进行补充讲解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567519323,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124513,"user_name":"闫飞","can_delete":false,"product_type":"c1","uid":1013162,"ip_address":"","ucode":"30C782D30108D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/aa/21275b9d.jpg","comment_is_top":false,"comment_ctime":1565915478,"is_pvip":false,"replies":[{"id":"45809","content":"是vscode","user_name":"作者回复","comment_id":124513,"uid":"1228022","ip_address":"","utype":1,"ctime":1565972074,"user_name_real":"许式伟-七牛云(已满)"}],"discussion_count":1,"race_medal":0,"score":"1565915478","product_id":100025201,"comment_content":"文中的表格是用VSCode自动生成的吗还是贴的图片？能否分享一下。<br><br>描述静态结构确实UML会更直观一点","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463210,"discussion_content":"是vscode","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565972074,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121208,"user_name":"Geek_8476da","can_delete":false,"product_type":"c1","uid":1623282,"ip_address":"","ucode":"9AE358E5F160AE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erMrXia5kb1AXUJoiccmIQxSQ7ib5SkibsQqd9FZInQcwYeNbZXp7CCtMibtg0RLHoza1NVo8A5M3uIluA/132","comment_is_top":false,"comment_ctime":1565078072,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565078072","product_id":100025201,"comment_content":"感觉好难啊","like_count":0},{"had_liked":false,"id":118308,"user_name":"Aaron Cheung","can_delete":false,"product_type":"c1","uid":1079816,"ip_address":"","ucode":"03972759C53667","user_header":"https://static001.geekbang.org/account/avatar/00/10/7a/08/4d3e47dd.jpg","comment_is_top":false,"comment_ctime":1564318352,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564318352","product_id":100025201,"comment_content":"补打卡 27","like_count":0},{"had_liked":false,"id":117515,"user_name":"刘宗尧","can_delete":false,"product_type":"c1","uid":1009476,"ip_address":"","ucode":"3E10A471C9177D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/44/1d63fc03.jpg","comment_is_top":false,"comment_ctime":1564065000,"is_pvip":false,"replies":[{"id":"43047","content":"是说它们有什么差异？站在我们架构分析的纬度，两者大同小异","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1564096608,"ip_address":"","comment_id":117515,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1564065000","product_id":100025201,"comment_content":"能类比一下移动的操作系统吗？android或者ios","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460004,"discussion_content":"是说它们有什么差异？站在我们架构分析的纬度，两者大同小异","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564096608,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117128,"user_name":"梦醒十分","can_delete":false,"product_type":"c1","uid":1043585,"ip_address":"","ucode":"33830A5A73DDF8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/81/2127e215.jpg","comment_is_top":false,"comment_ctime":1563973613,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563973613","product_id":100025201,"comment_content":"好文章需要多看几遍。","like_count":0},{"had_liked":false,"id":116867,"user_name":"Charles","can_delete":false,"product_type":"c1","uid":1001410,"ip_address":"","ucode":"32646D78CC0389","user_header":"https://static001.geekbang.org/account/avatar/00/0f/47/c2/e9fa4cf6.jpg","comment_is_top":false,"comment_ctime":1563932422,"is_pvip":false,"replies":[{"id":"42757","content":"主要我们的侧重点是子系统（或模块）之间的耦合，所以并没有把关注点放在流程上","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1563944075,"ip_address":"","comment_id":116867,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563932422","product_id":100025201,"comment_content":"另外有个建议，文中的类、方法、事件这些用uml图或自定义流程图之类的表达会不会更直观一些？","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459715,"discussion_content":"主要我们的侧重点是子系统（或模块）之间的耦合，所以并没有把关注点放在流程上","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563944075,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116660,"user_name":"吴","can_delete":false,"product_type":"c1","uid":1495840,"ip_address":"","ucode":"4807FB811B2EDC","user_header":"https://static001.geekbang.org/account/avatar/00/16/d3/20/95e71191.jpg","comment_is_top":false,"comment_ctime":1563887039,"is_pvip":false,"replies":[{"id":"42641","content":"其实这个程序虽然是b&#47;s结构的，但是实质上是单机版本的，只需要看js代码即可","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1563890277,"ip_address":"","comment_id":116660,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563887039","product_id":100025201,"comment_content":"有深度，模模糊糊懂，具体细节不太明白，没做过cs端的估计也看不懂","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459627,"discussion_content":"其实这个程序虽然是b/s结构的，但是实质上是单机版本的，只需要看js代码即可","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563890277,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116511,"user_name":"别摔我的饼","can_delete":false,"product_type":"c1","uid":1090736,"ip_address":"","ucode":"65C937A90320A8","user_header":"https://static001.geekbang.org/account/avatar/00/10/a4/b0/ad3b0b90.jpg","comment_is_top":false,"comment_ctime":1563860902,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563860902","product_id":100025201,"comment_content":"感觉这一章有几本书的知识量","like_count":0},{"had_liked":false,"id":116322,"user_name":"Jian","can_delete":false,"product_type":"c1","uid":1023040,"ip_address":"","ucode":"358133EC2AFEB0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9c/40/6323850e.jpg","comment_is_top":false,"comment_ctime":1563841133,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563841133","product_id":100025201,"comment_content":"代码面向扩展，面向对象，高内聚低耦合。设计者需要很强的抽象思维能力，才能设计出艺术品般的代码。开发者需要更多有效锤炼才能掌握这样的能力。","like_count":0}]}