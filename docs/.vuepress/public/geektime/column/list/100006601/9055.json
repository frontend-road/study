{"id":9055,"title":"21 | 高性能负载均衡：算法","content":"<p>负载均衡算法数量较多，而且可以根据一些业务特性进行定制开发，抛开细节上的差异，根据算法期望达到的目的，大体上可以分为下面几类。</p>\n<ul>\n<li><p>任务平分类：负载均衡系统将收到的任务平均分配给服务器进行处理，这里的“平均”可以是绝对数量的平均，也可以是比例或者权重上的平均。</p>\n</li>\n<li><p>负载均衡类：负载均衡系统根据服务器的负载来进行分配，这里的负载并不一定是通常意义上我们说的“CPU负载”，而是系统当前的压力，可以用CPU负载来衡量，也可以用连接数、I/O使用率、网卡吞吐量等来衡量系统的压力。</p>\n</li>\n<li><p>性能最优类：负载均衡系统根据服务器的响应时间来进行任务分配，优先将新任务分配给响应最快的服务器。</p>\n</li>\n<li><p>Hash类：负载均衡系统根据任务中的某些关键信息进行Hash运算，将相同Hash值的请求分配到同一台服务器上。常见的有源地址Hash、目标地址Hash、session id hash、用户ID Hash等。</p>\n</li>\n</ul>\n<p>接下来我介绍一下<span class=\"orange\">负载均衡算法以及它们的优缺点。</span></p>\n<h2 id=\"-\">轮询</h2>\n<p>负载均衡系统收到请求后，按照顺序轮流分配到服务器上。</p>\n<p>轮询是最简单的一个策略，无须关注服务器本身的状态，例如：</p>\n<!-- [[[read_end]]] -->\n<ul>\n<li><p>某个服务器当前因为触发了程序bug进入了死循环导致CPU负载很高，负载均衡系统是不感知的，还是会继续将请求源源不断地发送给它。</p>\n</li>\n<li><p>集群中有新的机器是32核的，老的机器是16核的，负载均衡系统也是不关注的，新老机器分配的任务数是一样的。</p>\n</li>\n</ul>\n<p>需要注意的是负载均衡系统无须关注“服务器本身状态”，这里的关键词是“本身”。也就是说，<strong>只要服务器在运行，运行状态是不关注的</strong>。但如果服务器直接宕机了，或者服务器和负载均衡系统断连了，这时负载均衡系统是能够感知的，也需要做出相应的处理。例如，将服务器从可分配服务器列表中删除，否则就会出现服务器都宕机了，任务还不断地分配给它，这明显是不合理的。</p>\n<p>总而言之，“简单”是轮询算法的优点，也是它的缺点。</p>\n<h2 id=\"-\">加权轮询</h2>\n<p>负载均衡系统根据服务器权重进行任务分配，这里的权重一般是根据硬件配置进行静态配置的，采用动态的方式计算会更加契合业务，但复杂度也会更高。</p>\n<p>加权轮询是轮询的一种特殊形式，其主要目的就是为了<strong>解决不同服务器处理能力有差异的问题</strong>。例如，集群中有新的机器是32核的，老的机器是16核的，那么理论上我们可以假设新机器的处理能力是老机器的2倍，负载均衡系统就可以按照2:1的比例分配更多的任务给新机器，从而充分利用新机器的性能。</p>\n<p>加权轮询解决了轮询算法中无法根据服务器的配置差异进行任务分配的问题，但同样存在无法根据服务器的状态差异进行任务分配的问题。</p>\n<h2 id=\"-\">负载最低优先</h2>\n<p>负载均衡系统将任务分配给当前负载最低的服务器，这里的负载根据不同的任务类型和业务场景，可以用不同的指标来衡量。例如：</p>\n<ul>\n<li><p>LVS这种4层网络负载均衡设备，可以以“连接数”来判断服务器的状态，服务器连接数越大，表明服务器压力越大。</p>\n</li>\n<li><p>Nginx这种7层网络负载系统，可以以“HTTP请求数”来判断服务器状态（Nginx内置的负载均衡算法不支持这种方式，需要进行扩展）。</p>\n</li>\n<li><p>如果我们自己开发负载均衡系统，可以根据业务特点来选择指标衡量系统压力。如果是CPU密集型，可以以“CPU负载”来衡量系统压力；如果是I/O密集型，可以以“I/O负载”来衡量系统压力。</p>\n</li>\n</ul>\n<p>负载最低优先的算法解决了轮询算法中无法感知服务器状态的问题，由此带来的代价是复杂度要增加很多。例如：</p>\n<ul>\n<li><p>最少连接数优先的算法要求负载均衡系统统计每个服务器当前建立的连接，其应用场景仅限于负载均衡接收的任何连接请求都会转发给服务器进行处理，否则如果负载均衡系统和服务器之间是固定的连接池方式，就不适合采取这种算法。例如，LVS可以采取这种算法进行负载均衡，而一个通过连接池的方式连接MySQL集群的负载均衡系统就不适合采取这种算法进行负载均衡。</p>\n</li>\n<li><p>CPU负载最低优先的算法要求负载均衡系统以某种方式收集每个服务器的CPU负载，而且要确定是以1分钟的负载为标准，还是以15分钟的负载为标准，不存在1分钟肯定比15分钟要好或者差。不同业务最优的时间间隔是不一样的，时间间隔太短容易造成频繁波动，时间间隔太长又可能造成峰值来临时响应缓慢。</p>\n</li>\n</ul>\n<p>负载最低优先算法基本上能够比较完美地解决轮询算法的缺点，因为采用这种算法后，负载均衡系统需要感知服务器当前的运行状态。当然，其代价是复杂度大幅上升。通俗来讲，轮询可能是5行代码就能实现的算法，而负载最低优先算法可能要1000行才能实现，甚至需要负载均衡系统和服务器都要开发代码。负载最低优先算法如果本身没有设计好，或者不适合业务的运行特点，算法本身就可能成为性能的瓶颈，或者引发很多莫名其妙的问题。所以负载最低优先算法虽然效果看起来很美好，但实际上真正应用的场景反而没有轮询（包括加权轮询）那么多。</p>\n<h2 id=\"-\">性能最优类</h2>\n<p>负载最低优先类算法是站在服务器的角度来进行分配的，而性能最优优先类算法则是站在客户端的角度来进行分配的，优先将任务分配给处理速度最快的服务器，通过这种方式达到最快响应客户端的目的。</p>\n<p>和负载最低优先类算法类似，性能最优优先类算法本质上也是感知了服务器的状态，只是通过响应时间这个外部标准来衡量服务器状态而已。因此性能最优优先类算法存在的问题和负载最低优先类算法类似，复杂度都很高，主要体现在：</p>\n<ul>\n<li><p>负载均衡系统需要收集和分析每个服务器每个任务的响应时间，在大量任务处理的场景下，这种收集和统计本身也会消耗较多的性能。</p>\n</li>\n<li><p>为了减少这种统计上的消耗，可以采取采样的方式来统计，即不统计所有任务的响应时间，而是抽样统计部分任务的响应时间来估算整体任务的响应时间。采样统计虽然能够减少性能消耗，但使得复杂度进一步上升，因为要确定合适的<strong>采样率</strong>，采样率太低会导致结果不准确，采样率太高会导致性能消耗较大，找到合适的采样率也是一件复杂的事情。</p>\n</li>\n<li><p>无论是全部统计还是采样统计，都需要选择合适的<strong>周期</strong>：是10秒内性能最优，还是1分钟内性能最优，还是5分钟内性能最优……没有放之四海而皆准的周期，需要根据实际业务进行判断和选择，这也是一件比较复杂的事情，甚至出现系统上线后需要不断地调优才能达到最优设计。</p>\n</li>\n</ul>\n<h2 id=\"hash-\">Hash类</h2>\n<p>负载均衡系统根据任务中的某些关键信息进行Hash运算，将相同Hash值的请求分配到同一台服务器上，这样做的目的主要是为了满足特定的业务需求。例如：</p>\n<ul>\n<li>源地址Hash</li>\n</ul>\n<p>将来源于同一个源IP地址的任务分配给同一个服务器进行处理，适合于存在事务、会话的业务。例如，当我们通过浏览器登录网上银行时，会生成一个会话信息，这个会话是临时的，关闭浏览器后就失效。网上银行后台无须持久化会话信息，只需要在某台服务器上临时保存这个会话就可以了，但需要保证用户在会话存在期间，每次都能访问到同一个服务器，这种业务场景就可以用源地址Hash来实现。</p>\n<ul>\n<li>ID Hash</li>\n</ul>\n<p>将某个ID标识的业务分配到同一个服务器中进行处理，这里的ID一般是临时性数据的ID（如session id）。例如，上述的网上银行登录的例子，用session id hash同样可以实现同一个会话期间，用户每次都是访问到同一台服务器的目的。</p>\n<h2 id=\"-\">小结</h2>\n<p>今天我为你讲了常见负载均衡算法的优缺点和应用场景，希望对你有所帮助。 </p>\n<p>这就是今天的全部内容，留一道思考题给你吧，微信抢红包的高并发架构，应该采取什么样的负载均衡算法？谈谈你的分析和理解。</p>\n<p>欢迎你把答案写到留言区，和我一起讨论。相信经过深度思考的回答，也会让你对知识的理解更加深刻。（编辑乱入：精彩的留言有机会获得丰厚福利哦！）</p>\n<p></p>\n","neighbors":{"left":{"article_title":"20 | 高性能负载均衡：分类及架构","id":8942},"right":{"article_title":"22 | 想成为架构师，你必须知道CAP理论","id":9302}},"comments":[{"had_liked":false,"id":12581,"user_name":"姜泮昌","can_delete":false,"product_type":"c1","uid":1107213,"ip_address":"","ucode":"89B63270BAE099","user_header":"https://static001.geekbang.org/account/avatar/00/10/e5/0d/b4258141.jpg","comment_is_top":false,"comment_ctime":1528934300,"is_pvip":false,"replies":[{"id":"4163","content":"基本正确，详细可以参考微信公开的红包高并发架构设计","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1528942654,"ip_address":"","comment_id":12581,"utype":1}],"discussion_count":4,"race_medal":0,"score":"439615598492","product_id":100006601,"comment_content":"微信抢红包架构应该至少包含两个负载均衡，一个是应用服务器的负载均衡，用于将任务请求分发到不同应用服务器，这里可以采用轮询或加速轮询的算法，因为这种速度快，适合抢红包的业务场景;另一起负载均衡是数据服务器的负载均衡，这里更适合根据红包ID进行hash负载均衡，将所有数据请求在同一台服务器上进行，防止多台服务器间的不同步问题。","like_count":103,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419305,"discussion_content":"基本正确，详细可以参考微信公开的红包高并发架构设计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528942654,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":562856,"discussion_content":"https://www.infoq.cn/article/2017hongbao-weixin // 百亿级微信红包的高并发资金交易系统设计方案\nhttps://cloud.tencent.com/developer/article/1637408 // 微信红包后台系统设计","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1649899734,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2621412,"avatar":"https://static001.geekbang.org/account/avatar/00/27/ff/e4/927547a9.jpg","nickname":"无名无姓","note":"","ucode":"487BD5AA2CD305","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588528,"discussion_content":"这个是在那块","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663816137,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":562851,"discussion_content":"没理解？TBD","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649899461,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12686,"user_name":"肖一林","can_delete":false,"product_type":"c1","uid":1113317,"ip_address":"","ucode":"1DE45D906EB836","user_header":"https://static001.geekbang.org/account/avatar/00/10/fc/e5/605f423f.jpg","comment_is_top":false,"comment_ctime":1528958493,"is_pvip":false,"replies":[{"id":"4252","content":"嗯，要根据具体业务来分析","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1529047103,"ip_address":"","comment_id":12686,"utype":1}],"discussion_count":3,"race_medal":0,"score":"370896145949","product_id":100006601,"comment_content":"看完了方乐明的对微信红包架构描述的技术文章，来回答一下问题：<br><br>有三个基本动作:发红包，抢红包，拆红包。发红包就是在数据库插一条红包库存数据，抢红包就是查询红包库存数据，拆红包就是插入一条秒杀流水并更新库存数据。<br><br>有三个难点:一是海量的并发，二是资金安全，三是良好的用户体验。资金安全决定了交易只能直接建立在数据库上，不能建立在缓存上。良好的用户体验就是要求不能出现不公平的现象，保证先抢先得，先抢的不能失败。<br><br>解决方案是:<br>1.分而治之，分成很多个并行的服务和数据库。相同的红包id总是分到相同的服务和数据库。所以负载均衡算法应该是hash算法<br>2.相同红包id的所有请求放在一个先进先出队列。然后分配一个独立的线程&#47;进程处理。杜绝抢锁。<br>3.分离过期数据，减少单表数据量<br><br>","like_count":87,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419370,"discussion_content":"嗯，要根据具体业务来分析","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1529047103,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1201875,"avatar":"https://static001.geekbang.org/account/avatar/00/12/56/d3/8d8d78ad.jpg","nickname":"星空","note":"","ucode":"D6E89F0F5BC41C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350453,"discussion_content":"大佬，请问抢红包的架构设计请问在哪看的 网上一直搜不到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613878798,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2118930,"avatar":"https://static001.geekbang.org/account/avatar/00/20/55/12/ec19ad14.jpg","nickname":"人生","note":"","ucode":"3259F341C683E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1201875,"avatar":"https://static001.geekbang.org/account/avatar/00/12/56/d3/8d8d78ad.jpg","nickname":"星空","note":"","ucode":"D6E89F0F5BC41C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411796,"discussion_content":"https://www.infoq.cn/article/2017hongbao-weixin/#","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636007176,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":350453,"ip_address":""},"score":411796,"extra":""}]}]},{"had_liked":false,"id":16826,"user_name":"孙振超","can_delete":false,"product_type":"c1","uid":1101755,"ip_address":"","ucode":"0F9EABC6125350","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/bb/22af0e52.jpg","comment_is_top":false,"comment_ctime":1532240107,"is_pvip":false,"replies":[{"id":"5832","content":"分析点基本到位了，详细可以参考微信公开的技术文档","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1532254615,"ip_address":"","comment_id":16826,"utype":1}],"discussion_count":2,"race_medal":0,"score":"186215833835","product_id":100006601,"comment_content":"负载均衡算法一共十来种之多，但经过抽取共性归纳之后就变成了4类，不仅容易记忆，即使以后再新增加其他的算法，也不外乎是进行了丰富，种类并没有什么变化，归纳为4类之后遇到类似的问题也可以用这样的方式去予以解决，从中也可以看到高手不只是机械性的记忆，而是带着思考去看待问题。<br><br>具体到微信红包的算法选择上，由于并发量特别高，需要有一个简单高效的算法，因而性能优先类算法可以不做考虑。对于微信这种级别的机房，其容器化技术必然是炉火纯青，每一台vm的配置是可以完全相同的，因而也就无需采用负载均衡类算法和权重轮询算法，剩下来的就是hash类算法和简单轮询算法。对于红包业务，最主要的操作是发红包和抢红包：不管是发个人红包还是发群红包整体业务相差不大，可以采用简单轮询算法，到任何一台服务器均可。但抢个人红包和抢群红包是不同的，抢群红包是有先后顺序，当有多个人抢同一个群红包时最好是由同一个服务器进行处理，这台服务器在收到抢红包的请求后将请求放到一个队列中，而后按照先进先出的方式进行消费，可以保证先到的人能抢到红包，后到的人后抢到红包。因而对于抢红包业务最好按照红包id进行hash负载。<br>如果是只选择一个负载算法的话，就是hash负载，发红包按照userid进行hash负载，抢红包按照红包id进行hash负载","like_count":44,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420941,"discussion_content":"分析点基本到位了，详细可以参考微信公开的技术文档","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532254615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1020525,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","nickname":"escray","note":"","ucode":"1F4204930E47C4","race_medal":2,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":307729,"discussion_content":"这个分析实在是太厉害了，采用排除法，和微信公开的红包设计方案思路近似。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600743965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12754,"user_name":"Tom","can_delete":false,"product_type":"c1","uid":1109832,"ip_address":"","ucode":"00EEDE4CB11776","user_header":"","comment_is_top":false,"comment_ctime":1529021244,"is_pvip":false,"replies":[{"id":"4246","content":"你以为是一个红包，实际上是几千上万个红包😂","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1529046676,"ip_address":"","comment_id":12754,"utype":1}],"discussion_count":8,"race_medal":0,"score":"83133399868","product_id":100006601,"comment_content":"看到评论说按红包id hash，上亿人抢同一个新年红包，应该只有一个红包id 吧？","like_count":20,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419394,"discussion_content":"你以为是一个红包，实际上是几千上万个红包😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1529046676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1109389,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ed/8d/377c106a.jpg","nickname":"KW💤","note":"","ucode":"290DD7016F4EE0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":404324,"discussion_content":"跟秒杀差不多啦，业务分仓负载均衡肯定也有的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634287938,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1120057,"avatar":"https://static001.geekbang.org/account/avatar/00/11/17/39/3274257b.jpg","nickname":"ple","note":"","ucode":"E1C4519C325994","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":345467,"discussion_content":"作者这里文章描述和问题回复说的不清楚导致的误解，是说对于腾讯来说，所用用户发的总红包数有很多个，用红包id的hash负载保证一个红包被一台服务器处理，避免数据同步的问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611723852,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1810051,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK0uyg1IicbEhLwsgM2A2ROoyVdWdmUqZfQfs6G67w9m3hdRNBMOQJatQoACj3qNGgj2KVIgricaYiaQ/132","nickname":"木得感情的编码机器","note":"","ucode":"9C6CD47ADCB8E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":290413,"discussion_content":"“实际上是几千上万个红包”意思是一个红包其实被拆成了N个红包，比如1万元红包实际上是1000个10元红包，分布在10个服务节点上，用户抢红包时经过hash计算被分配到某一个服务节点，那么最多也就抢10元咯？如果业务上确实是有这样的设计，倒也没问题。如果真是这样，那么是不是要把分出来的红包散落在哪些服务节点给记录下来？\n如果服务节点挂掉了？又如何处理呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594462818,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1046584,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f8/38/8af56e18.jpg","nickname":"知识没学到","note":"","ucode":"5D819DFFC7AB08","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1810051,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK0uyg1IicbEhLwsgM2A2ROoyVdWdmUqZfQfs6G67w9m3hdRNBMOQJatQoACj3qNGgj2KVIgricaYiaQ/132","nickname":"木得感情的编码机器","note":"","ucode":"9C6CD47ADCB8E6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":363647,"discussion_content":"我也有这个疑问，希望作者讲一下“实际上是几千上万个红包”的具体实现","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617253686,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":290413,"ip_address":""},"score":363647,"extra":""}]},{"author":{"id":1768852,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/fd/94/8704d2b0.jpg","nickname":"spoofer","note":"","ucode":"6723F64ACC3F27","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":96737,"discussion_content":"一个群好像最多500人？所以一个红包最多被500人抢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577089740,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1160192,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b4/00/661fb98d.jpg","nickname":"追忆似水年华","note":"","ucode":"C1D7C0DD7E7411","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1768852,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/fd/94/8704d2b0.jpg","nickname":"spoofer","note":"","ucode":"6723F64ACC3F27","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310207,"discussion_content":"说的可能是微信官方发给所有微信用户的一个大红包？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601688799,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":96737,"ip_address":""},"score":310207,"extra":""},{"author":{"id":1502442,"avatar":"https://static001.geekbang.org/account/avatar/00/16/ec/ea/9d7823dd.jpg","nickname":"TaceyWong","note":"","ucode":"117996F449EB45","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1160192,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b4/00/661fb98d.jpg","nickname":"追忆似水年华","note":"","ucode":"C1D7C0DD7E7411","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":414887,"discussion_content":"那就不是负载均衡了，就是秒杀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636915333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":310207,"ip_address":""},"score":414887,"extra":""}]}]},{"had_liked":false,"id":12682,"user_name":"赵正 Allen","can_delete":false,"product_type":"c1","uid":1109394,"ip_address":"","ucode":"892B98C996054A","user_header":"https://static001.geekbang.org/account/avatar/00/10/ed/92/9e58858c.jpg","comment_is_top":false,"comment_ctime":1528956394,"is_pvip":false,"replies":[{"id":"4253","content":"分析到位，详细参考微信公开的技术文章，搜 微信红包高并发","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1529047124,"ip_address":"","comment_id":12682,"utype":1}],"discussion_count":2,"race_medal":0,"score":"57363531242","product_id":100006601,"comment_content":"发红包业务应该以红包的生命周期为思考的出发点。主要经历：发，抢，查询，回收（没抢完，返回给发红包的用户）。如果按这些细颗粒来看，抢，查询红包的并发要求最高，发红包次之，回收最低。<br>首先，发红包使用加权轮询，简单适用，成功后返回红包ID给客户端。<br>其次，抢红包，查询红包都带着ID给服务端，根据ID计算HASH，再利用一致性hash算法，找到最近的一个结点提供服务。<br>最后，回收应该由服务端定时触发，可以同样按抢红包处理。<br>","like_count":13,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419366,"discussion_content":"分析到位，详细参考微信公开的技术文章，搜 微信红包高并发","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1529047124,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1109389,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ed/8d/377c106a.jpg","nickname":"KW💤","note":"","ucode":"290DD7016F4EE0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":404326,"discussion_content":"一致性hash算法不是这样用的，一致性hash扩容会影响上下游最近的两个节点的，会hash失败，通常只用在缓存扩容","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1634288163,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":195376,"user_name":"CDz","can_delete":false,"product_type":"c1","uid":1114779,"ip_address":"","ucode":"A23BEE1C4A5922","user_header":"https://static001.geekbang.org/account/avatar/00/11/02/9b/b1a3c60d.jpg","comment_is_top":false,"comment_ctime":1585184214,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31649955286","product_id":100006601,"comment_content":"* 根据负载均衡达到的目的可分四类<br>    * 任务平分类：负载均衡系统收到任务平均分配给服务器进行处理，可以是绝对的平均，也可以是按比例的“加权”平均<br>    * 负载均衡类：突出负载的均衡，根据当前系统压力<br>        * CPU负载<br>        * IO负载<br>        * 网卡吞吐量<br>    * 性能最优类：根据服务器响应时间来任务分配<br>    * Hash类：根据某些关键信息进行Hash运算，同一个放在同一服务器上处理<br>        * 源地址hash<br>        * 目标地址hash<br>        * session ID hash<br>        * 用户ID hash<br>* 轮询<br>    * 优点简单<br>    * 缺点不关心服务器状态<br>        * 如果有一个服务器死循环CPU过高，还是会发送任务<br>* 加权轮询<br>    * 根据不通服务器的配置差异，不同的权重设置<br>* 负载最低优先<br>    * 不同任务类型、不同业务场景、选择不同指标<br>        * LVS是4层负载，以连接数来判断服务器状态<br>        * Nginx是7层负载，以HTTP请求数来判断服务器状态<br>    * 自己开发，还需要注意，考虑选择的指标<br>        * IO密集型<br>        * CPU密集型<br>    * 复杂性问题：<br>        * 连接数优先算法<br>            * 要求：每个请求都会发送给服务器进行处理<br>            * 不适合：固定连接池方式<br>        * CPU负载<br>            * 收集信息的方式<br>                * 收集时间长度<br>                    * 1分钟长度与15分钟长度效果不同，并不一定15分钟就好<br>                * 收集动作消耗性能<br>        * 代码复杂度<br>            * 轮询可能10行代码<br>            * 负载可能1000行<br>                * 并且需要多方面调试<br>* 性能最优类<br>    * 站在客户端进行分配任务<br>    * 谁的性能此时最好，分配给谁<br>    * 高复杂度<br>        * 收集分析过程中，本身收集就会消耗性能<br>        * 为了减少性能消耗<br>            * 设置合适的采样率<br>                * 越大性能消耗越大<br>            * 合适的周期<br>                * 多久采样一次<br>* Hash类<br>    * 源地址Hash<br>        * 适合存在事务、会话业务<br>        * 网上银行：生成临时会话信息<br>    * ID Hash<br>        * 根据某个ID的业务分配服务器处理<br>        * session ID也可以解决网上银行的例子","like_count":7},{"had_liked":false,"id":12624,"user_name":"Dofla Mingle","can_delete":false,"product_type":"c1","uid":1099069,"ip_address":"","ucode":"DE7D5F806700E6","user_header":"https://static001.geekbang.org/account/avatar/00/10/c5/3d/7f3b821c.jpg","comment_is_top":false,"comment_ctime":1528937394,"is_pvip":false,"replies":[{"id":"4153","content":"基本正确，详细可以参考微信公开的红包高并发架构设计","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1528941789,"ip_address":"","comment_id":12624,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31593708466","product_id":100006601,"comment_content":"一个红包对应多人去抢，服务器端要根据红包状态（是否抢完）来计算用户的结果（无法抢或抢了多少）。所以感觉最好是在同一台服务器上计算才能提高性能。那么红包和所有能够抢的用户之间应该有某个一致的关联信息（红包所在群的id），根据这个信息的负载算法负载到同一个服务器。所以我认为选hash算法合适，不知道想的对不对。","like_count":7,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419332,"discussion_content":"基本正确，详细可以参考微信公开的红包高并发架构设计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528941789,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12632,"user_name":"feifei","can_delete":false,"product_type":"c1","uid":1105431,"ip_address":"","ucode":"B1F8AE3AD82C51","user_header":"https://static001.geekbang.org/account/avatar/00/10/de/17/75e2b624.jpg","comment_is_top":false,"comment_ctime":1528938401,"is_pvip":false,"replies":[{"id":"4152","content":"红包分为发和抢，发的时候轮询就可以，抢的时候一般不是按照群id做hash，而是按照红包id做hash","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1528941711,"ip_address":"","comment_id":12632,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18708807585","product_id":100006601,"comment_content":"针对这个问题首先分析下抢红包的流程<br>1，首先一个用户在群组内发了一个红包，分成10份，并设置为随机大小。<br>2，假如群共有50人，都参与抢红包。<br>3，群里只能前10个用户可以抢到红包，并且金额随机<br>再来分析下业务流程<br>1，首先需要扣除发红包用户的红包金额。<br>2，按用户请求到达的先后顺序排队，进行抢红包，需要事务保证。<br>3，在队列中的用户抢到红包，其他用户没抢到红包。<br><br>然后再分析负载均衡的算法，主要针对抢红包的核心流程负载：<br>轮询，与加权轮训，都无法满足业务，此场景中存在事务，所以不合适<br>按机器负载，也无法满足，也是事务问题。<br>最后是hast，使用群id作为key进行分配，可以让同一个用户组的人负载到同一台机器，就可以完成事务。<br><br>所以我最终的负载均衡方案是选择hast算法。<br><br>我的分析是否合理？欢迎指正<br><br><br><br>","like_count":4,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419338,"discussion_content":"红包分为发和抢，发的时候轮询就可以，抢的时候一般不是按照群id做hash，而是按照红包id做hash","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528941711,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12596,"user_name":"sunlight001","can_delete":false,"product_type":"c1","uid":1126975,"ip_address":"","ucode":"A72C4274D5DE8A","user_header":"https://static001.geekbang.org/account/avatar/00/11/32/3f/fa4ac035.jpg","comment_is_top":false,"comment_ctime":1528935446,"is_pvip":false,"replies":[{"id":"4159","content":"没有结合业务的特点分析，详细可以参考微信公开的红包高并发架构设计","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1528942362,"ip_address":"","comment_id":12596,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14413837334","product_id":100006601,"comment_content":"性能最优优先算法，抢发红包需要响应及时，该算法最优，但是复杂度比较好，需要不断调优。","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419313,"discussion_content":"没有结合业务的特点分析，详细可以参考微信公开的红包高并发架构设计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528942362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14060,"user_name":"summer","can_delete":false,"product_type":"c1","uid":1103386,"ip_address":"","ucode":"A57684B7A90129","user_header":"https://static001.geekbang.org/account/avatar/00/10/d6/1a/532f8a66.jpg","comment_is_top":false,"comment_ctime":1530155998,"is_pvip":false,"replies":[{"id":"4678","content":"抢红包，别抢劫😂","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1530178035,"ip_address":"","comment_id":14060,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10120090590","product_id":100006601,"comment_content":"微信抢红包，最好所有人都在红包所在server进行抢劫。适合ID hash这种算法","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419857,"discussion_content":"抢红包，别抢劫😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530178035,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12814,"user_name":"9527","can_delete":false,"product_type":"c1","uid":1032735,"ip_address":"","ucode":"04B51C09E3C7B8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c2/1f/343f2dec.jpg","comment_is_top":false,"comment_ctime":1529049828,"is_pvip":false,"replies":[{"id":"4261","content":"没有专门书籍，或者说我没有看过类似书籍，都是我逐步积累的，网络编程基础看《unix网络编程 卷1》","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1529058977,"ip_address":"","comment_id":12814,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10118984420","product_id":100006601,"comment_content":"老师好，这几天讲的负载均衡分类，算法，还有前面的reactor，proactor，这些东西我想再深细看一下，有没有什么相关的书籍可以推荐呢","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419421,"discussion_content":"没有专门书籍，或者说我没有看过类似书籍，都是我逐步积累的，网络编程基础看《unix网络编程 卷1》","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1529058977,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":309539,"user_name":"rs勿忘初心","can_delete":false,"product_type":"c1","uid":1519200,"ip_address":"","ucode":"557D1ECD757195","user_header":"https://static001.geekbang.org/account/avatar/00/17/2e/60/4fa1f3bd.jpg","comment_is_top":false,"comment_ctime":1630221244,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5925188540","product_id":100006601,"comment_content":"方乐明【微信红包后台系统可用性设计实践 】https:&#47;&#47;www.sohu.com&#47;a&#47;150354603_355140，供参考","like_count":1},{"had_liked":false,"id":305813,"user_name":"while (1)等;","can_delete":false,"product_type":"c1","uid":1061991,"ip_address":"","ucode":"BAEC7258D65B69","user_header":"https://static001.geekbang.org/account/avatar/00/10/34/67/06a7f9be.jpg","comment_is_top":false,"comment_ctime":1628176288,"is_pvip":true,"replies":[{"id":"110670","content":"nginx的反向代理是这样的，但是LVS做负载均衡的时候，返回的流量可以不经过LVS，具体你可以查查LVS的TUN和DR模式","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1628238500,"ip_address":"","comment_id":305813,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5923143584","product_id":100006601,"comment_content":"有个问题想请教老师，进出的流量是不是都要通过负载均衡的那台机器。比如a是NGINX负载均衡服务器，bcd是具体的机器，http请求时是不是所有的input和output都经过负载均衡返回给客户端？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":524521,"discussion_content":"nginx的反向代理是这样的，但是LVS做负载均衡的时候，返回的流量可以不经过LVS，具体你可以查查LVS的TUN和DR模式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628238500,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":267072,"user_name":"民工597","can_delete":false,"product_type":"c1","uid":1529858,"ip_address":"","ucode":"DB6857E21E9318","user_header":"https://static001.geekbang.org/account/avatar/00/17/58/02/2b7ccf09.jpg","comment_is_top":false,"comment_ctime":1607588721,"is_pvip":false,"replies":[{"id":"97069","content":"年轻人武德不错 ：）","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1607733824,"ip_address":"","comment_id":267072,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5902556017","product_id":100006601,"comment_content":"简单来讲，就三个字，接化发","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511496,"discussion_content":"年轻人武德不错 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607733824,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1144171,"avatar":"https://static001.geekbang.org/account/avatar/00/11/75/6b/fd685164.jpg","nickname":"lcf枫","note":"","ucode":"D51E8F68BD41CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386300,"discussion_content":"秀儿 是你吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627521445,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239024,"user_name":"慎独明强","can_delete":false,"product_type":"c1","uid":1965699,"ip_address":"","ucode":"DC2F7F2C0C8F60","user_header":"https://static001.geekbang.org/account/avatar/00/1d/fe/83/df562574.jpg","comment_is_top":false,"comment_ctime":1596418232,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5891385528","product_id":100006601,"comment_content":"负载均衡在面试中经常被问到，任务分配，负载分配，性能分配，hash。任务分配有轮询，加权轮询，随机。负载分配有最小连接，还有看cpu计算密集还是io密集等指标来负载分配。性能分配主要看响应时间，hash主要是将同一类业务分配到同一台服务器","like_count":1},{"had_liked":false,"id":12969,"user_name":"小喵喵","can_delete":false,"product_type":"c1","uid":1062444,"ip_address":"","ucode":"FDBBB2A59DB8B6","user_header":"https://static001.geekbang.org/account/avatar/00/10/36/2c/8bd4be3a.jpg","comment_is_top":false,"comment_ctime":1529215029,"is_pvip":false,"replies":[{"id":"4320","content":"hash都不懂哇，赶紧去学😭","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1529281825,"ip_address":"","comment_id":12969,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5824182325","product_id":100006601,"comment_content":"什么hash算法，轮循加权完全看不懂啊，是不是数据结构的知识，数据结构和算法全部还给老师了。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419481,"discussion_content":"hash都不懂哇，赶紧去学😭","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1529281825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1195017,"avatar":"https://static001.geekbang.org/account/avatar/00/12/3c/09/b7f0eac6.jpg","nickname":"谁都会变","note":"","ucode":"9965748F7EBB57","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551540,"discussion_content":"这里应该根据红包id进行hash计算，然后得出具体的服务器的物理ip地址","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645060749,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12646,"user_name":"大光头","can_delete":false,"product_type":"c1","uid":1041792,"ip_address":"","ucode":"8EF797AFD1E27C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eo3DrWeV7ZwRLXrRZg4V3ic1LQYdZ3u1oicDhqPic47vMguvf5QS69roTiaJrwDr5Re3Sy2UyHDWwmsTA/132","comment_is_top":false,"comment_ctime":1528941446,"is_pvip":false,"replies":[{"id":"4166","content":"你前面的理解挺好，但是对于hash的理解不全面，session可以用hash，强一致性也需要用hash，单元化也需要用hash","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1528942823,"ip_address":"","comment_id":12646,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5823908742","product_id":100006601,"comment_content":"通过读你的这篇文章，我觉得到底采用哪种策略取决于业务，是否要求有session或者需要用户访问指定机器，如果是需要用hash，如果不是则考虑其它三种，轮巡和性能分配，采用哪种策略取决于性能轮巡算法的复杂度和用户体验，如果复杂度高，往往采用简单轮巡更加，用户体验对响应时间跟你敏感，也需要采用性能分配。<br>微信抢红包，业务是有大量高并发请求，它不需要session，所以不用hash策论。由于用户体验是快速响应，所以应该采用性能响应时间策略","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419348,"discussion_content":"你前面的理解挺好，但是对于hash的理解不全面，session可以用hash，强一致性也需要用hash，单元化也需要用hash","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528942823,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12600,"user_name":"黄国瑞","can_delete":false,"product_type":"c1","uid":1026005,"ip_address":"","ucode":"4AAD10B5F2014E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a7/d5/94f1d391.jpg","comment_is_top":false,"comment_ctime":1528936040,"is_pvip":false,"replies":[{"id":"4158","content":"详细可以参考微信公开的红包高并发架构设计","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1528942327,"ip_address":"","comment_id":12600,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5823903336","product_id":100006601,"comment_content":"随机负载以及相应的加权应该也算是一个不错的负载方式吧和轮询类似。<br><br>另外TCP场景下还可以最小连接类似性能最优这种负载，然后再结合随机和加权在特定业务场景还挺好用。<br><br>微信抢红包负载，个人感觉应该是一种轮询加权重加性能最优结合的吧。而且感觉里面应该还会设计hash负载，因为有可能设计数据不一致，这种高并发同步数据代价比较大，可以使用这种在里面减少这种操作。<br>具体怎么搞没有细研究过。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419315,"discussion_content":"详细可以参考微信公开的红包高并发架构设计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528942327,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12592,"user_name":"莫何","can_delete":false,"product_type":"c1","uid":1107000,"ip_address":"","ucode":"6E5D1443CBF5F8","user_header":"https://static001.geekbang.org/account/avatar/00/10/e4/38/06ec9119.jpg","comment_is_top":false,"comment_ctime":1528935209,"is_pvip":false,"replies":[{"id":"4160","content":"回答正确，区分了发和抢的不同特点，详细可以参考微信公开的红包高并发架构设计","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1528942412,"ip_address":"","comment_id":12592,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5823902505","product_id":100006601,"comment_content":"抢红包时可以根据红包标识hash，将同一红包路由到一台机器以减少后端逻辑复杂度，分布式一致性等难度。不过考虑企业客户发的大红包，会不会瞬间击垮一台服务器需要斟酌。红包发到哪台机器可以采取其他均衡策略。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419312,"discussion_content":"回答正确，区分了发和抢的不同特点，详细可以参考微信公开的红包高并发架构设计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528942412,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":340643,"user_name":"雪飞鸿","can_delete":false,"product_type":"c1","uid":1012325,"ip_address":"","ucode":"65D7B030828809","user_header":"https://static001.geekbang.org/account/avatar/00/0f/72/65/68bd8177.jpg","comment_is_top":false,"comment_ctime":1648989085,"is_pvip":true,"replies":[{"id":"124587","content":"这个理解很不错，这样学习后，知识就真正变成你自己的了 ：）","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1649119606,"ip_address":"","comment_id":340643,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1648989085","product_id":100006601,"comment_content":"进一步概括负载均衡算法，可以分为考虑服务器实际情况和不考虑服务器实际情况两类。轮询，Hash属于前者，加权轮询、性能最优和负载最低属于后者。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559999,"discussion_content":"这个理解很不错，这样学习后，知识就真正变成你自己的了 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649119606,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":294070,"user_name":"Master","can_delete":false,"product_type":"c1","uid":1613760,"ip_address":"","ucode":"79D0145B853C9E","user_header":"https://static001.geekbang.org/account/avatar/00/18/9f/c0/86febfff.jpg","comment_is_top":false,"comment_ctime":1621745677,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621745677","product_id":100006601,"comment_content":"我觉得可以通过日常生活实际体验来想，公司群大老板过年过节发了个包，员工们抢，有时候会发现，怎么明明我抢到了点开反而提示我红包已经抢完。所以我觉得首先微信红包的过程，发包，分包，拆包，发和分都是事先就根据一定的算法就直接完成了，等于一个红包任务建立，分成了n个待拆任务，那么大家开始抢了，考虑抢红包必须要考虑数据高可用，以及体验性，所以最终抢的结果必须数据一致，并且先来后到，不多发不少发不冲突，50个包就是50个，综上所以我觉得抢的动作是按照hash轮训，保证一个包的任务，都在一台机器上执行完成，包括抢互斥（50个，51个人抢到，开头说的问题，也无妨吧现在看来），拆包（实际拆包算金额，这就考虑到“库存”）统一在一台服务器执行完成比较简单直接。而且结合实际，群发红包记得也有金额上限，拆包上限，我觉得肯定就是为了方式单台出现性能问题，而且我觉得微信那边肯定会做好类似云原生等的保证红包这种核心业务的高可用性。","like_count":0},{"had_liked":false,"id":285829,"user_name":"DFighting","can_delete":false,"product_type":"c1","uid":1233193,"ip_address":"","ucode":"F3BA2426FF8582","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/29/1b1234ed.jpg","comment_is_top":false,"comment_ctime":1617024271,"is_pvip":true,"replies":[{"id":"103781","content":"正确","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1617067927,"ip_address":"","comment_id":285829,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1617024271","product_id":100006601,"comment_content":"发红包没有太多的业务需求，任意一台服务器处理都可以，适合按照服务器负载均衡分发；抢红包虽然可能会因为不同地方的网络等差异导致请求到达服务器的时机不同，但抛却这个差异来看，同一个时间点到达的请求应该遵照公平原则，所以适合按照红包Id进行hash运算，从另一个角度来看，抢红包存在一个转账的操作，如果同一个红包抢的请求被分派到了不同服务器，就需要额外处理多节点间的异常情况，所以还是一个红包放在一个节点比较合适。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517793,"discussion_content":"正确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617067927,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":249657,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1600745025,"is_pvip":true,"replies":[{"id":"91871","content":"并不是每个红包都一定有人抢完的，你这样设计可能会有一些浪费，抢红包的性能最高，但生成红包的性能就会下降","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1601431570,"ip_address":"","comment_id":249657,"utype":1}],"discussion_count":1,"race_medal":2,"score":"1600745025","product_id":100006601,"comment_content":"“负载均衡”这个翻译稍微有一点误导，load balancing 里面的 balance 的英文解释其实并没有“均分”的意思。<br><br>四类负载均衡算法：任务平分，负载均衡，性能最优，Hash 类。按我的理解，上一节讲到的 软硬件负载均衡（F5、A10 和 Nginx、LVS），应该可以配置不同的算法。<br><br>（DNS 只能按照 IP 简单的配置为访问最近的服务器，而且负载均衡的控制权属于域名商。）<br><br>看过留言，也按图索骥去看了方乐明的《百亿级微信红包的高并发资金交易系统设计方案》，微信抢红包的高并发架构还是挺巧妙的，只是不知道大概三年之后，架构有没有什么变化。<br><br>我觉的核心是在于将 红包ID 做 Hash 来进行了 SET 化。<br><br>在我看来，因为红包在一开始的时候就已经设定了金额和份数，那么代码实现的时候其实可以在发出的时候就完成随机分配。<br><br>比如一个 100 元红包随机 20 份，那么发出的时候，就可以在数据库红包分配表上直接插入 20 条记录，金额随机人名空缺（或者写成发送人的ID，可以帮助回收）。有人抢红包的时候，就不需要插入操作，而是更新操作即可。<br><br>不过这样一来，似乎在性能上未必有优势。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505980,"discussion_content":"并不是每个红包都一定有人抢完的，你这样设计可能会有一些浪费，抢红包的性能最高，但生成红包的性能就会下降","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601431570,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235741,"user_name":"M1racle","can_delete":false,"product_type":"c1","uid":1057144,"ip_address":"","ucode":"CFA981F34AFDA8","user_header":"https://static001.geekbang.org/account/avatar/00/10/21/78/732a2e33.jpg","comment_is_top":false,"comment_ctime":1595167721,"is_pvip":true,"replies":[{"id":"87410","content":"你看看其它评论","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1595474667,"ip_address":"","comment_id":235741,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1595167721","product_id":100006601,"comment_content":"抢红包为了快速响应，应该选择性能最优的那种方式","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501817,"discussion_content":"你看看其它评论","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595474667,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":196034,"user_name":"Mark","can_delete":false,"product_type":"c1","uid":1078374,"ip_address":"","ucode":"719442E6ED8A91","user_header":"https://static001.geekbang.org/account/avatar/00/10/74/66/451b6b79.jpg","comment_is_top":false,"comment_ctime":1585231988,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585231988","product_id":100006601,"comment_content":"这个案例日常都用到啊","like_count":0},{"had_liked":false,"id":195944,"user_name":"那迦树","can_delete":false,"product_type":"c1","uid":1055625,"ip_address":"","ucode":"34519C1DEA41A0","user_header":"https://static001.geekbang.org/account/avatar/00/10/1b/89/b7fae170.jpg","comment_is_top":false,"comment_ctime":1585225306,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585225306","product_id":100006601,"comment_content":"负载均衡如果要求实时性非常高，可以参考加权负载，如果实时性要求不高，平均负载应该也问题不大","like_count":0},{"had_liked":false,"id":184581,"user_name":"谭方敏","can_delete":false,"product_type":"c1","uid":1710960,"ip_address":"","ucode":"728DC7ECB7C902","user_header":"https://static001.geekbang.org/account/avatar/00/1a/1b/70/547042ee.jpg","comment_is_top":false,"comment_ctime":1583365046,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583365046","product_id":100006601,"comment_content":"另外在微信红包架构在原理上跟电商秒杀差不多，有一定的同构性，在负载均衡的处理上需要做一些过滤，减少性能的损失，比如，在200 个人的群里发了10个红包，有100个人来抢，那么只需要服务10个人就好了，其他人可以直接返回说红包已经抢完了，这样就减少了95%的用户流量对业务系统带来的冲击了。<br>如果数据量的确很大的话，那么可以通过加缓存，分库分表，或者set化等措施使得业务请求得到好好处理。","like_count":0},{"had_liked":false,"id":184579,"user_name":"谭方敏","can_delete":false,"product_type":"c1","uid":1710960,"ip_address":"","ucode":"728DC7ECB7C902","user_header":"https://static001.geekbang.org/account/avatar/00/1a/1b/70/547042ee.jpg","comment_is_top":false,"comment_ctime":1583364632,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583364632","product_id":100006601,"comment_content":"微信红包架构中，对业务进行分拆，分包，抢包，拆包，回收包四个子动作，而每个动作对并发的要求不同，因而选择的负载均衡策略不一样。<br>通常，在业务系统中不会只是采用某种负载均衡策略，而是会采取组合的方式，拿我现在公司的业务系统来说，我们有二级负载均衡策略，一级负载均衡的是用户连接到网关，这要确保每个网关上的用户数都是合适的，一般采用的策略是hash，而之后二级负载均衡的是业务处理，这里要确保每个网关到业务系统的业务请求数据不会存在过多的情况，其负载均衡的策略是轮询和业务复杂度（在线人数）负载。<br>","like_count":0},{"had_liked":false,"id":184075,"user_name":"zk_207","can_delete":false,"product_type":"c1","uid":1183552,"ip_address":"","ucode":"196D92ECC8540D","user_header":"https://static001.geekbang.org/account/avatar/00/12/0f/40/e838871e.jpg","comment_is_top":false,"comment_ctime":1583218486,"is_pvip":false,"replies":[{"id":"72867","content":"介绍架构的基本结构，然后就介绍这个架构中关键的设计点和复杂点","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1584426411,"ip_address":"","comment_id":184075,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583218486","product_id":100006601,"comment_content":"华哥，请教个问题，面试的时候面试官问：介绍下你项目的架构，这个问题应该从哪些方面分析作答呢？能回复下吗。谢谢","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485875,"discussion_content":"介绍架构的基本结构，然后就介绍这个架构中关键的设计点和复杂点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584426411,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180064,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1582177310,"is_pvip":false,"replies":[{"id":"69934","content":"nginx有两个参数控制: max_fails和fail_timeout","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1582191392,"ip_address":"","comment_id":180064,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1582177310","product_id":100006601,"comment_content":"后端服务器挂掉一台，负载均衡设备怎么感知到呢？nginx可以直接支持吗？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484506,"discussion_content":"nginx有两个参数控制: max_fails和fail_timeout","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582191392,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2348234,"avatar":"","nickname":"Geek_b15dc0","note":"","ucode":"7DEF9A3A1F77D3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333288,"discussion_content":"nginx的负载均衡配置的 upstream 里面可以配置与应用服务器的心跳连接","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607495823,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":178757,"discussion_content":"👌","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582194802,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168172,"user_name":"阿杜","can_delete":false,"product_type":"c1","uid":1066705,"ip_address":"","ucode":"349D3572F5ABE7","user_header":"https://static001.geekbang.org/account/avatar/00/10/46/d1/a1ddf49f.jpg","comment_is_top":false,"comment_ctime":1578025212,"is_pvip":false,"replies":[{"id":"65422","content":"随机本质上和轮询类似，代码上轮询是直接取next节点，随机是先算一个随机数，然后取余获取节点索引，用索引取出节点","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1578184838,"ip_address":"","comment_id":168172,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1578025212","product_id":100006601,"comment_content":"还有随机，也是很实用的负载均衡算法","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480162,"discussion_content":"随机本质上和轮询类似，代码上轮询是直接取next节点，随机是先算一个随机数，然后取余获取节点索引，用索引取出节点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578184838,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145080,"user_name":"妥协","can_delete":false,"product_type":"c1","uid":1249656,"ip_address":"","ucode":"7201DFE9C12669","user_header":"https://static001.geekbang.org/account/avatar/00/13/11/78/4f0cd172.jpg","comment_is_top":false,"comment_ctime":1572182940,"is_pvip":false,"replies":[{"id":"56222","content":"连接池架构中负载均衡是和服务器之间的连接数量一般是固定的","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1572330385,"ip_address":"","comment_id":145080,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1572182940","product_id":100006601,"comment_content":"请教老师 最少连接数优先的算法中，负载均衡器和服务器之间不管是通过连接池，还是单个长链接方式，都可以统计当前请求数来统计，也就是发送请求加一，收到响应减一。以服务器为单位统计，为何说连接池不适合用这种算法。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472235,"discussion_content":"连接池架构中负载均衡是和服务器之间的连接数量一般是固定的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572330385,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1249656,"avatar":"https://static001.geekbang.org/account/avatar/00/13/11/78/4f0cd172.jpg","nickname":"妥协","note":"","ucode":"7201DFE9C12669","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41206,"discussion_content":"连接数量是固定，可以统计在线请求数，这种方式不行吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572363583,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":128931,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1566986131,"is_pvip":false,"replies":[{"id":"48290","content":"抢和拆一起的吧，抢到后拆就简单一些","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1567153091,"ip_address":"","comment_id":128931,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566986131","product_id":100006601,"comment_content":"1：分活策略<br>1-1：平分——轮询<br>1-2：我讨厌谁，就给谁多分——加权轮询<br>1-3：想给就给谁——随机<br>1-4：谁干的快给谁——负载均衡<br>1-5：谁干的少给谁——性能最优<br>1-6：前端给小云，后端给小强——哈希<br><br>微信红包应该用什么分配策略？<br>微信红包细分有如下环节：发、抢、拆、查、返，其中发、查、返相对容易处理，抢和拆是最难处理的，抢和拆也是关联起来的，抢的时候需要处理高并发，不能抢到拆不出红包，也不能把钱分多或分少啦！<br>发的时候随机到那台机器生产红包的记录就行<br>抢的时候需要排队抢先到先得，用哈希把抢的人都分到一个红包所在的机器上排队强<br>拆的时候就是查看抢了多少钱也是用哈希<br>查是在看一下自己抢了多少钱，随机一台机器查下就行<br>返把没抢完的返回去随机一台就行吧<br>","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465182,"discussion_content":"抢和拆一起的吧，抢到后拆就简单一些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567153091,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68888,"user_name":"gkb111","can_delete":false,"product_type":"c1","uid":1224217,"ip_address":"","ucode":"9B3154BCC9046B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLLUic3XzxET3L3QXxcTbeg96GMx1HkiaiaZdudchmOmtPnuEPHK5vYEeMkvJR098XljMbXDialYib3z6w/132","comment_is_top":false,"comment_ctime":1550626225,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1550626225","product_id":100006601,"comment_content":"轮训，加速轮询，性能最低优先，负载最低优先，hash类","like_count":0},{"had_liked":false,"id":39364,"user_name":"小狮子辛巴","can_delete":false,"product_type":"c1","uid":1088420,"ip_address":"","ucode":"B9676851AF3370","user_header":"https://static001.geekbang.org/account/avatar/00/10/9b/a4/ddb31c5b.jpg","comment_is_top":false,"comment_ctime":1542255082,"is_pvip":false,"replies":[{"id":"14076","content":"你的思路不太符合红包的场景，你看看其它评论","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1542262024,"ip_address":"","comment_id":39364,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542255082","product_id":100006601,"comment_content":"微信红包可能的方案有<br>1、加权轮询  因为有不同配置的机器，不能简单的采用最普通的轮询<br>2、负载最低优先， 对于微信红包业务应该用”CPU负载“来衡量服务器负载","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429030,"discussion_content":"你的思路不太符合红包的场景，你看看其它评论","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542262024,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":28122,"user_name":"水月洞天","can_delete":false,"product_type":"c1","uid":1055551,"ip_address":"","ucode":"58C98CEA27312D","user_header":"https://static001.geekbang.org/account/avatar/00/10/1b/3f/9316f3f6.jpg","comment_is_top":false,"comment_ctime":1538010378,"is_pvip":false,"replies":[{"id":"10177","content":"思路正确👍","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1538051095,"ip_address":"","comment_id":28122,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1538010378","product_id":100006601,"comment_content":"红包逻辑是先发红包，再抢红包，最后拆红包。。关键点是红包的拆开金额不能超过当前红包金额。鉴于性能考虑，发红包时最好按照红包id负载红包库存。用户抢红包时根据红包id负载到不同的队列上，并处理拆红包业务。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425149,"discussion_content":"思路正确👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538051095,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21724,"user_name":"Sky","can_delete":false,"product_type":"c1","uid":1206722,"ip_address":"","ucode":"00BB00AB540297","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/c2/34490844.jpg","comment_is_top":false,"comment_ctime":1535279055,"is_pvip":false,"replies":[{"id":"7724","content":"可以这样做，也可以将红包id放到url中","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1535289785,"ip_address":"","comment_id":21724,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1535279055","product_id":100006601,"comment_content":"你好，请问：红包id做hash路由，负载均衡器要解析抢红包协议，来得到红包id，然后分派到不同的业务服吗？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422828,"discussion_content":"可以这样做，也可以将红包id放到url中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535289785,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":20738,"user_name":"文竹","can_delete":false,"product_type":"c1","uid":1103167,"ip_address":"","ucode":"74413B1975976B","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/3f/80bf4841.jpg","comment_is_top":false,"comment_ctime":1534724271,"is_pvip":false,"replies":[{"id":"7280","content":"需要按场景分析，参考其他人的答案","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1534738078,"ip_address":"","comment_id":20738,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1534724271","product_id":100006601,"comment_content":"采用ID hash的负载均衡算法。根据红包ID做Hash运算，这样同一个红包的请求被分到一个机器上做运算，处理比较方便。若对同一个红包的请求被分散在不同的机器上，需要使用分布式锁协助，处理起来较麻烦。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422387,"discussion_content":"需要按场景分析，参考其他人的答案","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534738078,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19431,"user_name":"文竹","can_delete":false,"product_type":"c1","uid":1103167,"ip_address":"","ucode":"74413B1975976B","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/3f/80bf4841.jpg","comment_is_top":false,"comment_ctime":1533824978,"is_pvip":false,"replies":[{"id":"6725","content":"分析太简单了，看看其它评论或者上网找资料","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1533864754,"ip_address":"","comment_id":19431,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1533824978","product_id":100006601,"comment_content":"使用红包ID进行hash负载均衡。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421838,"discussion_content":"分析太简单了，看看其它评论或者上网找资料","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533864754,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15820,"user_name":"renwotao","can_delete":false,"product_type":"c1","uid":1042503,"ip_address":"","ucode":"8054CA7EC0C8AB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e8/47/3e4a03ac.jpg","comment_is_top":false,"comment_ctime":1531538108,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1531538108","product_id":100006601,"comment_content":"根据作者的文章，我也注意到了业务有无状态也是选择均衡算法时要考虑的","like_count":0},{"had_liked":false,"id":15365,"user_name":"Alan","can_delete":false,"product_type":"c1","uid":1061340,"ip_address":"","ucode":"15C718CA868099","user_header":"https://static001.geekbang.org/account/avatar/00/10/31/dc/af9c4356.jpg","comment_is_top":false,"comment_ctime":1531142538,"is_pvip":false,"replies":[{"id":"5268","content":"红包肯定存在状态的呀😄","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1531292330,"ip_address":"","comment_id":15365,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1531142538","product_id":100006601,"comment_content":"红包服务本身不存在状态，所以性能瓶颈在于如何分库，服务本身不存在性能瓶颈，按服务器好坏加权轮讯即可。由于涉及钱不考虑引入缓存增加复杂度。<br>分库：写入轮询即可，抢红包按照红包的主键查询即可。<br>1、发红包<br>2、抢红包","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420353,"discussion_content":"红包肯定存在状态的呀😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531292330,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12890,"user_name":"王维","can_delete":false,"product_type":"c1","uid":1091684,"ip_address":"","ucode":"836E6CDB1A56BA","user_header":"https://static001.geekbang.org/account/avatar/00/10/a8/64/965e0d9b.jpg","comment_is_top":false,"comment_ctime":1529114233,"is_pvip":false,"replies":[{"id":"4356","content":"单点操作保证一致性，详细搜索微信红包高并发的文章","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1529378137,"ip_address":"","comment_id":12890,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1529114233","product_id":100006601,"comment_content":"华仔你好，我觉得对于微信红包这种高并发的应用场景，应该采用的负载均衡算法是hash值的方式，因为<br>这种场景对事务的要求高，所以要保持事务的一致性不知道是不是这样，盼指教。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419446,"discussion_content":"单点操作保证一致性，详细搜索微信红包高并发的文章","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1529378137,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12834,"user_name":"张玮(大圣)","can_delete":false,"product_type":"c1","uid":1111343,"ip_address":"","ucode":"D567C4BE87D116","user_header":"https://static001.geekbang.org/account/avatar/00/10/f5/2f/56117bab.jpg","comment_is_top":false,"comment_ctime":1529060460,"is_pvip":false,"replies":[{"id":"4358","content":"分布式事务性能扛不住，你可以搜索微信红包高并发的设计文章","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1529378505,"ip_address":"","comment_id":12834,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1529060460","product_id":100006601,"comment_content":"1. 发红包：查询类型，可采用轮询、负载最低、性能优先等<br><br>2 抢红包：更新类型，涉及到红包的分配、扣减金额到用户账户等事务性操作，如果要在负载均衡层解决，那就使用 hash 路由，如果不在负载均衡层解决，可以用分布式事务的几种解决方案","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419428,"discussion_content":"分布式事务性能扛不住，你可以搜索微信红包高并发的设计文章","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1529378505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12749,"user_name":"Tom","can_delete":false,"product_type":"c1","uid":1109832,"ip_address":"","ucode":"00EEDE4CB11776","user_header":"","comment_is_top":false,"comment_ctime":1529020316,"is_pvip":false,"replies":[{"id":"4248","content":"详细参考微信公开的技术文章，搜 微信红包高并发","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1529046907,"ip_address":"","comment_id":12749,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1529020316","product_id":100006601,"comment_content":"微信抢红包的特点是瞬间负载变化很大，如果用负载最低优先算法，统计状态可能要秒级别，感觉不适合。应该还是轮询算法吧，不过bug导致某台单机负载问题不知道怎么解决，靠监控系统发现然后加权呢还是其他？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419392,"discussion_content":"详细参考微信公开的技术文章，搜 微信红包高并发","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1529046907,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12636,"user_name":"星火燎原","can_delete":false,"product_type":"c1","uid":1101373,"ip_address":"","ucode":"15AD8E3006E107","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/3d/385b8263.jpg","comment_is_top":false,"comment_ctime":1528939451,"is_pvip":false,"replies":[{"id":"4168","content":"没有结合业务的特点分析，详细可以参考微信公开的红包高并发架构设计","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1528942967,"ip_address":"","comment_id":12636,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1528939451","product_id":100006601,"comment_content":"抢红包肯定是选择最近这段时间窗口评论响应时间最小的服务器节点算法啦，不过腾讯这种土豪公司动态扩容节点小意思啦，也有可能简单粗暴采取随机算法呢🤔","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419341,"discussion_content":"没有结合业务的特点分析，详细可以参考微信公开的红包高并发架构设计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528942967,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12621,"user_name":"xzyeah","can_delete":false,"product_type":"c1","uid":1106882,"ip_address":"","ucode":"AEC6AA55A73D44","user_header":"https://static001.geekbang.org/account/avatar/00/10/e3/c2/7406eaf1.jpg","comment_is_top":false,"comment_ctime":1528936997,"is_pvip":false,"replies":[{"id":"4154","content":"虽然与会话无关，但是红包的一个典型特征就是红包处理逻辑是强一致性的，一个红包的处理只能在一台服务器上，如果多台服务器并发处理一个红包，锁设计会很复杂而且更低效，所以抢红包的场景和会话类似，需要用hash<br><br><br>发红包可以简单轮询<br>","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1528942136,"ip_address":"","comment_id":12621,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1528936997","product_id":100006601,"comment_content":"对于微信红包场景，我觉得更加适合加权轮询类<br>主要原因<br>1，场景单一，会话无关<br>2，高并发，对性能要求高，加权轮询算法简单高效<br>3，高并发场景计算性能与负载已经没有意义，保证所有服务能均衡分配更好<br><br>以上是我的理解，如有不对请指正，谢谢！","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419329,"discussion_content":"虽然与会话无关，但是红包的一个典型特征就是红包处理逻辑是强一致性的，一个红包的处理只能在一台服务器上，如果多台服务器并发处理一个红包，锁设计会很复杂而且更低效，所以抢红包的场景和会话类似，需要用hash\n\n\n发红包可以简单轮询\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528942136,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12609,"user_name":"xzyeah","can_delete":false,"product_type":"c1","uid":1106882,"ip_address":"","ucode":"AEC6AA55A73D44","user_header":"https://static001.geekbang.org/account/avatar/00/10/e3/c2/7406eaf1.jpg","comment_is_top":false,"comment_ctime":1528936391,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1528936391","product_id":100006601,"comment_content":"负载均衡主要算法<br>轮询，简单高效 适用于无状态的场景，问题在于太简单不关注服务实际性能情况，或者每个请求处理消耗的情况，适合场景单一的情况<br>加权轮询(静态)，根据服务器性能过其他特征进行权重分配，能够解决服务器性能不一样导致分配不合适的情况，问题在于相对于轮询算法会复杂，但同样无法解决轮询存在的一些问题<br>性能最优，根据请求响应时间进行统计或者抽样统计，优先分配给性能最优的服务器，由于统计也会消耗服务器性能，且需要不断优化才能确认统计周期<br>负载最低，根据cpu，io，内存等负载情况进行统计。优先分配给负载低的服务器，存在的问题同性能最优算法一样，但与之不同的是，关注的维度不一样，能够更加充分的均衡服务器利用率<br>其他hash算法，都适用于有事务，状态有关的服务","like_count":0},{"had_liked":false,"id":12608,"user_name":"Skysper","can_delete":false,"product_type":"c1","uid":1058800,"ip_address":"","ucode":"164B3CAF81A7C5","user_header":"https://static001.geekbang.org/account/avatar/00/10/27/f0/06ecce19.jpg","comment_is_top":false,"comment_ctime":1528936369,"is_pvip":false,"replies":[{"id":"4155","content":"理论正确，但没有结合红包业务来分析，你可以查一下微信红包高并发的处理，网上有资料","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1528942242,"ip_address":"","comment_id":12608,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1528936369","product_id":100006601,"comment_content":"抢红包主要要面对的是高并发，瞬时流量可能导致服务器压力过大，拒绝服务 这种情况下 以性能为负载更好一点，讲请求分发给性能最优的机器去处理 不知道理解是否正确","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419322,"discussion_content":"理论正确，但没有结合红包业务来分析，你可以查一下微信红包高并发的处理，网上有资料","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528942242,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12604,"user_name":"求渔","can_delete":false,"product_type":"c1","uid":1103671,"ip_address":"","ucode":"6EABC5A0C703C9","user_header":"https://static001.geekbang.org/account/avatar/00/10/d7/37/d8c8acdf.jpg","comment_is_top":false,"comment_ctime":1528936233,"is_pvip":false,"replies":[{"id":"4157","content":"分析的太简单了，要结合业务分析","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1528942298,"ip_address":"","comment_id":12604,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1528936233","product_id":100006601,"comment_content":"个人认为带权重的轮询和基于会话id的hash都可以","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419318,"discussion_content":"分析的太简单了，要结合业务分析","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528942298,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12591,"user_name":"鹅米豆发","can_delete":false,"product_type":"c1","uid":1017687,"ip_address":"","ucode":"98E8D911EE32DE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/87/57/645159ee.jpg","comment_is_top":false,"comment_ctime":1528935152,"is_pvip":false,"replies":[{"id":"4161","content":"基本正确，详细可以参考微信公开的红包高并发架构设计。<br><br>电商双十一的流量更大，因为电商业务复杂，用户访问一个页面，实际上后端会收到几十上百的调用，红包就没那么复杂","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1528942546,"ip_address":"","comment_id":12591,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1528935152","product_id":100006601,"comment_content":"       微信红包，大致过程是发，抢，拆，查询。<br>       简单分析：出于性能考虑，一般会使用多级存储，本地缓存，分布式缓存，数据库等。其中，本地缓存位于集群中的各个服务器节点上，这使得每个节点都带了状态，可以采用按照某个维度进行哈希的方式。<br>       维度选择，可以按照微信群ID、或发红包用户ID进行哈希，也可以按照红包ID进行哈希，后者会更均衡一些。<br>       另外，微信手Q的流量、并发量，比天猫淘宝高出很多，但对于数据存储和访问这块，却要简单很多，因为绝大多数数据，都带有用户ID，天然适合分片，且无需过多考虑异构和冗余。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419311,"discussion_content":"基本正确，详细可以参考微信公开的红包高并发架构设计。\n\n电商双十一的流量更大，因为电商业务复杂，用户访问一个页面，实际上后端会收到几十上百的调用，红包就没那么复杂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528942546,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12582,"user_name":"narry","can_delete":false,"product_type":"c1","uid":1033576,"ip_address":"","ucode":"B8010C1DE39D08","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c5/68/7afb7304.jpg","comment_is_top":false,"comment_ctime":1528934323,"is_pvip":false,"replies":[{"id":"4162","content":"这是抢的设计，发红包呢😄","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1528942574,"ip_address":"","comment_id":12582,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1528934323","product_id":100006601,"comment_content":"个人感觉应该根据红包的id来进行hash负载均衡，这样除了可以实现负载均衡外，还可以减少数据同步的过程，也便于计算红包分配金额","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419306,"discussion_content":"这是抢的设计，发红包呢😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528942574,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12575,"user_name":"crazyone","can_delete":false,"product_type":"c1","uid":1115042,"ip_address":"","ucode":"705E34642E41F5","user_header":"https://static001.geekbang.org/account/avatar/00/11/03/a2/ceb37046.jpg","comment_is_top":false,"comment_ctime":1528933256,"is_pvip":false,"replies":[{"id":"4164","content":"没有结合业务的特点分析，详细可以参考微信公开的红包高并发架构设计","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1528942663,"ip_address":"","comment_id":12575,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1528933256","product_id":100006601,"comment_content":"微信抢红包的架构我觉得应该是用性能优先的负载算法，优先考虑客户端的响应时间来选择负载算法。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419301,"discussion_content":"没有结合业务的特点分析，详细可以参考微信公开的红包高并发架构设计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528942663,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12572,"user_name":"郭涛","can_delete":false,"product_type":"c1","uid":1085298,"ip_address":"","ucode":"238800B59497E0","user_header":"https://static001.geekbang.org/account/avatar/00/10/8f/72/8d7d872b.jpg","comment_is_top":false,"comment_ctime":1528933103,"is_pvip":false,"replies":[{"id":"4165","content":"分析的太简单啦，没有结合业务的特点分析，详细可以参考微信公开的红包高并发架构设计","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1528942682,"ip_address":"","comment_id":12572,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1528933103","product_id":100006601,"comment_content":"性能最优算法，因为抢红包对响应速度要求高😜","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419299,"discussion_content":"分析的太简单啦，没有结合业务的特点分析，详细可以参考微信公开的红包高并发架构设计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528942682,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}