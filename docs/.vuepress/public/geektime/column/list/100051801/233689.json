{"id":233689,"title":"02 | 编码阶段能做什么：秀出好的code style","content":"<p>你好，我是Chrono。</p><p>上节课我介绍了C++程序的生命周期和编程范式，今天我就接着展开来讲，看看在编码阶段我们能做哪些事情。</p><p>在编码阶段，我们的核心任务就是写出在预处理、编译和运行等不同阶段里执行的代码，还记得那句编程格言吗：</p><p>“<strong>任何人都能写出机器能看懂的代码，但只有优秀的程序员才能写出人能看懂的代码。</strong>”</p><p>所以，我们在编码阶段的首要目标，不是实现功能，而是要写出清晰易读的代码，也就是要有好的code style。</p><p>怎么样才能写出human readable的好代码呢？</p><p>这就需要有一些明确的、经过实践验证的规则来指导，只要自觉遵守、合理运用这些规则，想把代码写“烂”都很难。</p><p>在此，我强烈推荐一份非常棒的<a href=\"http://openresty.org/cn/c-coding-style-guide.html\">指南</a>，它来自OpenResty的作者章亦春，代码风格参照的是顶级开源产品Nginx，内容非常详细完善。</p><p>不过有一点要注意，这份指南描述的是C语言，但对于C++仍然有很好的指导意义，所以接下来我就以它为基础，加上我的工作体会，从<strong>代码格式</strong>、<strong>标识符命名</strong>和<strong>注释</strong>三个方面，讲一下怎么“秀出好的code style”。</p><h2>空格与空行</h2><p>当我们拿到一份编码风格指南的时候，不论它是公司内部的还是外部的，通常第一感觉就是“头大”，几十个、上百个的条款罗列在一起，规则甚至细致到了标点符号，再配上干巴巴的说明和示例，不花个半天功夫是绝对看不完的。而且，最大的可能是半途而废，成了“从入门到放弃”。</p><!-- [[[read_end]]] --><p>我写了很多年代码，也看过不少这样的文档，我从中总结出了一条最基本、最关键的规则，只要掌握了这条规则，就可以把你code style的“颜值”起码提高80%。</p><p>这条“神奇”的规则是什么呢？</p><p>认真听，只有五个字：<strong>留白的艺术</strong>。</p><p>再多说一点，就是像“写诗”一样去写代码，<strong>恰当地运用空格和空行</strong>。不要为了“节省篇幅”和“紧凑”而把很多语句挤在一起，而是要多用空格分隔开变量与操作符，用空行分隔开代码块，保持适当的阅读节奏。</p><p>你可以看看下面的这个示例，这是我从某个实际的项目中摘出来的真实代码（当然，我隐去了一些敏感信息）：</p><pre><code>if(!value.contains(&quot;xxx&quot;)){\n  LOGIT(WARNING,&quot;value is incomplete.\\n&quot;)\n  return;\n}\nchar suffix[16]=&quot;xxx&quot;;\nint  data_len = 100;\nif(!value.empty()&amp;&amp;value.contains(&quot;tom&quot;)){\n  const char* name=value.c_str();\n  for(int i=0;i&lt;MAX_LEN;i++){\n    ...  // do something\n  }\n  int count=0;\n  for(int i=0;i&lt;strlen(name);i++){\n    ... // do something  \n  }\n}\n</code></pre><p>这段代码真可谓是“高密度”，密密麻麻一大堆，看着“有如滔滔江水，连绵不绝”，读起来让人“窒息”，code style非常糟糕。</p><p>应用“留白的艺术”，代码就变成了下面的样子：</p><pre><code>if (!value.contains(&quot;xxx&quot;)) {                    // if后{前有空格\n  LOGIT(WARNING, &quot;value is incomplete.\\n&quot;)        // 逗号后有空格\n  return;                                      // 逻辑联系紧密就不用加空行\n}\n                                                  // 新增空行分隔段落\nchar suffix[16] = &quot;xxx&quot;;                          // 等号两边有空格\nint data_len = 100;                            // 逻辑联系紧密就不用加空行\n                                                  // 新增空行分隔段落\nif (!value.empty() &amp;&amp; value.contains(&quot;tom&quot;)) {   // &amp;&amp;两边有空格\n  const char* name = value.c_str();              // 等号两边有空格\n                                                  // 新增空行分隔段落\n  for(int i = 0; i &lt; MAX_LEN; i++){              // =;&lt;处有空格\n    ...  // do something\n  }\n                                                  // 新增空行分隔段落\n  int count = 0;                                  // 等号两边有空格\n                                                  // 新增空行分隔段落\n  for(int i = 0; i &lt; strlen(name); i++){          // =;&lt;处有空格\n    ... // do something  \n  }\n}\n</code></pre><p>加上了适当的空格和空行后，代码就显得错落有致，舒缓得当，看着就像是莎翁的十四行诗，读起来不那么累，也更容易理清楚代码的逻辑。</p><p>我还有个私人观点：<strong>好程序里的空白行至少要占到总行数的20%以上</strong>。虽然比较“极端”，但也不失为一个可量化的指标，你可以在今后的实际工作中尝试一下。</p><h2>起个好名字</h2><p>有了好的代码格式，接下来我们要操心的就是里面的内容了，而其中一个很重要的部分就是为变量、函数、类、项目等起一个好听易懂的名字。</p><p>这里有一个广泛流传的笑话：“<strong>缓存失效与命名是计算机科学的两大难题</strong>。”把起名字与缓存失效（也有说是并发）相提并论，足见它有多么重要了，值得引起你的重视。</p><p>但其实命名这件事并不难，主要就在于平时的词汇和经验积累，知道在什么情况下用哪个单词最合适，千万不要偷懒用“谜之缩写”和汉语拼音（更有甚者，是汉语拼音的缩写）。由于现在搜索引擎、电子词典都很发达，只要你有足够认真的态度，在网上一搜，就能够找到合适的名字。</p><p>另外，你还可以用一些已经在程序员之间形成了普遍共识的变量名，比如用于循环的i/j/k、用于计数的count、表示指针的p/ptr、表示缓冲区的buf/buffer、表示变化量的delta、表示总和的sum……</p><p>关于命名的风格，我所知道的应用比较广的有三种。</p><p>第一种风格叫“匈牙利命名法”，在早期的Windows上很流行，使用前缀i/n/sz等来表示变量的类型，比如iNum/szName。它把类型信息做了“硬编码”，不适合代码重构和泛型编程，所以目前基本上被淘汰了。</p><p>不过它里面有一种做法我还是比较欣赏的，就是给成员变量加“m_”前缀（member），给全局变量加“g_”前缀（global），比如m_count、g_total，这样一看就知道了变量的作用域，在大型程序里还是挺有用的。</p><p>第二种风格叫“CamelCase”，也就是“驼峰式命名法”，在Java语言里非常流行，主张单词首字母大写，比如MyJobClass、tryToLock，但这种风格在C++世界里的接受程度不是太高。</p><p>第三种风格叫“snake_case”，用的是全小写，单词之间用下划线连接。这是C和C++主要采用的命名方式，看一下标准库，里面的vector、unordered_set、shrink_to_fit都是这样。</p><p>那么，你该选用哪种命名风格呢？</p><p>我的建议是“取百家之长”，混用这几种中能够让名字辨识度最高的那些优点，就是四条规则：</p><ol>\n<li>变量、函数名和名字空间用snake_case，全局变量加“g_”前缀；</li>\n<li>自定义类名用CamelCase，成员函数用snake_case，成员变量加“m_”前缀；</li>\n<li>宏和常量应当全大写，单词之间用下划线连接；</li>\n<li>尽量不要用下划线作为变量的前缀或者后缀（比如_local、name_），很难识别。</li>\n</ol><p>下面我举几个例子，你一看就能明白了：</p><pre><code>#define  MAX_PATH_LEN  256             //常量，全大写\n\nint g_sys_flag;                        // 全局变量，加g_前缀\n\nnamespace linux_sys {                // 名字空间，全小写\n  void get_rlimit_core();               // 函数，全小写\n}\n\nclass FilePath final                 // 类名，首字母大写\n{\npublic:\n  void set_path(const string&amp; str);    // 函数，全小写\nprivate:  \n  string m_path;                      // 成员变量，m_前缀 \n  int    m_level;                     // 成员变量，m_前缀\n};\n\n\n</code></pre><p>命名另一个相关的问题是“名字的长度”，有人喜欢写得长，有人喜欢写得短，我觉得都可以，只要易读易写就行。</p><p>不过一个被普遍认可的原则是：<strong>变量/函数的名字长度与它的作用域成正比</strong>，也就是说，局部变量/函数名可以短一点，而全局变量/函数名应该长一点。</p><p>想一下，如果你辛辛苦苦起了一个包含四五个单词的长名字，却只能在短短十几行的循环体里使用，岂不是太浪费了？</p><h2>用好注释</h2><p>写出了有好名字的变量、函数和类还不够，要让其他人能“一眼”看懂代码，还需要加上注释。</p><p>“注释”在任何编程语言里都是一项非常重要的功能，甚至在编程语言之外，比如配置文件（ini、yml）、标记语言（html、xml），都有注释。一个突出的反例就是JSON，没有注释功能让许多人都很不适应。</p><p>注释表面上的功能很简单，就是给代码配上额外的文字，起到注解、补充说明的作用。但就像是写文章一样，写些什么、写多写少、写成什么样子，都是大有讲究的。</p><p>你可能也有不少写注释的经验了，一般来说，注释可以用来阐述目的、用途、工作原理、注意事项等代码本身无法“自说明”的那些东西。</p><p>但要小心，注释必须要正确、清晰、有效，尽量言简意赅、点到为止，不要画蛇添足，更不能写出含糊、错误的注释。</p><p>比如说，有这么一个模板函数get_value：</p><pre><code>template&lt;typename T&gt;\nint get_value(const T&amp; v);\n</code></pre><p>代码很简单，但可用的信息太少了，你就可以给它加上作者、功能说明、调用注意事项、可能的返回值，等等，这样看起来就会舒服得多：</p><pre><code>// author  : chrono\n// date    : 2020-xx-xx\n// purpose : get inner counter value of generic T\n// notice  : T must have xxx member\n// notice  : return value maybe -1, means xxx, you should xxx\ntemplate&lt;typename T&gt;\nint get_value(const T&amp; v);\n</code></pre><p>你可能注意到了，在注释里我都用的是英文，因为英文（ASCII，或者说是UTF-8）的“兼容性”最好，不会由于操作系统、编码的问题变成无法阅读的乱码，而且还能够锻炼自己的英语表达能力。</p><p>不过，用英文写注释的同时也对你提出了更高的要求，最基本的是<strong>不要出现低级的语法、拼写错误</strong>。别笑，我就经常见到有人英文水平不佳，或者是“敷衍了事”，写出的都是“Chinglish”，看了让人哭笑不得。</p><p>写注释最好也要有一些标准的格式，比如用统一的“标签”来标记作者、参数说明什么的。这方面我觉得你可以参考Javadoc，它算是一个不错的工程化实践。</p><p>对于C++来说，也有一个类似的工具叫Doxgen，用好它甚至可以直接从源码生成完整的API文档。不过我个人觉得，Doxgen的格式有些过于“死板”，很难严格执行，是否采用就在于你自己了。</p><p>除了给代码、函数、类写注释，我还建议<strong>最好在文件的开头写上本文件的注释</strong>，里面有文件的版权声明、更新历史、功能描述，等等。</p><p>下面这个就是我比较常用的一个文件头注释，简单明了，你可以参考一下。</p><pre><code>// Copyright (c) 2020 by Chrono\n//\n// file  : xxx.cpp\n// since : 2020-xx-xx\n// desc  : ...\n</code></pre><p>另外，注释还有一个很有用的功能就是todo，作为功能的占位符，提醒将来的代码维护者（也许就是你），比如：</p><pre><code>// TODO: change it to unordered_map\n// XXX: fixme later\n</code></pre><p>总的来说，要写好注释，你要时刻“换位思考”，设身处地去想别人怎么看你的代码，这样的话，上面的那些细则也就不难实施了。</p><h2>小结</h2><p>在编码阶段，拥有一个良好的编程习惯和态度是非常重要的（我见过太多对此漫不经心的“老”程序员）。今天，我只介绍了三个最基本的部分，再来“敲黑板”画个重点：</p><ol>\n<li>用好空格和空行，多留白，让写代码就像写诗一样；</li>\n<li>给变量、函数、类起个好名字，你的代码就成功了一半；</li>\n<li>给变量、函数、类再加上注释，让代码自带文档，就成了“人能够看懂的代码”。</li>\n</ol><p>有了这个基础，你还可以更进一步，使用其他高级规则写出更好的代码，比如函数体不能太长、入口参数不宜过多，避免使用else/switch导致层次太深（圈复杂度），等等，这些虽然也很有用但比较琐碎，暂时就不细说了。</p><p>对了，还有一招“必杀技”：善用code review，和你周围的同事互相审查代码，可以迅速改善自己的code style。</p><h2>课下作业</h2><p>最后是课下作业时间，给你留两个思考题：</p><ol>\n<li>你用过哪些好的code style，你最喜欢今天介绍的哪几条？</li>\n<li>注释在代码里通常的作用是“说明文档”，但它还有另外一个重要的用法，你知道吗？</li>\n</ol><p>欢迎你在留言区写下你的思考和答案，如果觉得对你有所帮助，也欢迎分享给你的朋友，我们下节课见。</p><p><img src=\"https://static001.geekbang.org/resource/image/3a/41/3a5325510a8c10a318f82f9ac2696941.jpg?wh=2284*2457\" alt=\"\"></p>","neighbors":{"left":{"article_title":"01 | 重新认识C++：生命周期和编程范式","id":231454},"right":{"article_title":"03 | 预处理阶段能做什么：宏定义和条件编译","id":233711}},"comments":[{"had_liked":false,"id":215592,"user_name":"嵇斌","can_delete":false,"product_type":"c1","uid":1047812,"ip_address":"","ucode":"C9422C3F8A7B23","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fd/04/89cc31ab.jpg","comment_is_top":false,"comment_ctime":1589027700,"is_pvip":false,"replies":[{"id":"79817","content":"分享的经验质量非常高，nice。<br><br>关于pragma once，我的建议还是要慎用，因为很多时候我们还会导出纯C接口给外界，还是include guard最保险。<br><br>而且我记得在哪里看过资料，好像是cppreference上吧，pragma once也是有缺陷的。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1589062663,"ip_address":"","comment_id":215592,"utype":1}],"discussion_count":3,"race_medal":0,"score":"151912883060","product_id":100051801,"comment_content":"分享我的一些实践：<br>1. 匈牙利命名真心不推荐了，参考《clean code》中关于avoid encoding的说明。<br>2. 如果是存现代c++工程，不考虑兼容C的话. Header guards可以使用#pragma once替代。<br>3. 避免注释，最好使用代码来阐述。很多信息可以通过代码仓库来表达，比如commit message。<br>4. m_，g_ 等前缀如果使用现代化的ide的话，也可以考虑省略，因为ide的高亮能够区分。<br>5. 如果不是在写类库，比如开发应用程序，最好命名规则能快速区分这个是你的代码，还是标准库、知名类库的代码，可能这也是大厂流行CamalCase的缘由。<br>6. Google的style guide是个不错的参考，但是也有很多不可取的规则，感觉原因：Google出这个guide的时候modern c++还没有流行，Google当时内部还有很多技术债，Google想把c++写的像java。所以Google后来在golang里面....<br>7. 如果是参与现有项目，无论现有规则多么的不爽，都先遵循现有的规则。","like_count":35,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494487,"discussion_content":"分享的经验质量非常高，nice。\n\n关于pragma once，我的建议还是要慎用，因为很多时候我们还会导出纯C接口给外界，还是include guard最保险。\n\n而且我记得在哪里看过资料，好像是cppreference上吧，pragma once也是有缺陷的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589062663,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2007921,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/a3/71/efe133d4.jpg","nickname":"零下10度C","note":"","ucode":"57D290FE97F7C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282767,"discussion_content":"第四点认为还是有必要加上一些前缀的，毕竟通过高亮区分的代价比较大。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1592068624,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1426798,"avatar":"https://static001.geekbang.org/account/avatar/00/15/c5/6e/604ec5d4.jpg","nickname":"海漩涡","note":"","ucode":"4963172386B1A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2007921,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/a3/71/efe133d4.jpg","nickname":"零下10度C","note":"","ucode":"57D290FE97F7C2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293252,"discussion_content":"赞同，这样才更能体现所见即所得","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595492457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":282767,"ip_address":""},"score":293252,"extra":""}]}]},{"had_liked":false,"id":215444,"user_name":"jxon-H","can_delete":false,"product_type":"c1","uid":1897700,"ip_address":"","ucode":"D491FAB6A07A4A","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f4/e4/e7471344.jpg","comment_is_top":false,"comment_ctime":1588993316,"is_pvip":false,"replies":[{"id":"79733","content":"写的太好了，我非常感同身受。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1588994780,"ip_address":"","comment_id":215444,"utype":1}],"discussion_count":1,"race_medal":0,"score":"66013502756","product_id":100051801,"comment_content":"磨刀不误砍柴工，编码风格我觉得不仅是软件开发行业的共识，更是一种软件开发的文化。回顾我自己写过的代码，简直惨不忍睹。罗老师这节内容让我收获极大，也让进一步加深了以下认识：<br><br>1、之所以讲究编码风格，因为软件的规模越大，协作性要求就越高，软件开发是一件群体性的智力活动，每个人的代码都只有自己懂，每段代码都将成为一个信息孤岛，没法让代码变得可交流、可复用、可维护。<br><br>2、一段代码的功能，不仅仅是完成一个任务，也是一种思想的传播，因此注释担当着传递信息的功能，要养成良好的注释习惯和明了易懂注释风格。<br><br>3、留白的艺术深受启发，既给代码空间留下了闲余，给视觉留下了美感，也给代码的阅读增添了节奏，更是给大脑腾出足够的思考空间。<br>","like_count":15,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494440,"discussion_content":"写的太好了，我非常感同身受。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588994780,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215373,"user_name":"Carlos","can_delete":false,"product_type":"c1","uid":1898075,"ip_address":"","ucode":"F1B9951E9845D2","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f6/5b/8e321b62.jpg","comment_is_top":false,"comment_ctime":1588983880,"is_pvip":false,"replies":[{"id":"79703","content":"<br>1.可以多看看一些开源项目，它们的代码量比较大，你就可以体会到空格和空行的作用了。<br>专栏的GitHub仓库代码虽然比较小，但也都应用了这些规范，可以做参考。<br><br>2.说的很对，这也是注释一个非常重要的作用。我的建议是尽量不要删代码，毕竟是自己辛辛苦苦写出来的，删掉太可惜了。<br>应该用注释暂时禁用，放一段时间，如果确实没有用再考虑删除。<br><br>3.这个是include guard，后面的预处理阶段就会讲，你这是提前预习了，笑。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1588985819,"ip_address":"","comment_id":215373,"utype":1}],"discussion_count":3,"race_medal":0,"score":"66013493320","product_id":100051801,"comment_content":"哈哈, 容我先说一句题外话, 我作为一个 c++ 入门新手, 昨天和前天还真的读了一份 &quot;公司色彩很重&quot; 的 code style guide 😂(虽然没完全读懂). <br><br>1. 今天文章中的 &quot;留白&quot;, 和 &quot;命名&quot; 我倒是注意到了, 但是可能因为我目前写的 c++ 代码基本上都是不超过 50 行的练习文件, 所以注释这一点我没有注意到, 从现在开始注意. <br>2. 我觉得另一个重要的用法是把一些代码备注掉. 可能是为了 debug 方便(如果新代码错了, 换回旧代码, 程序还能运行), 也可能是为了以后功能拓展方便(直接把相关模块取消备注就能用了). <br><br>补充一条我前天刚学会的 code style: <br><br>All header files should have #define guards to prevent multiple inclusion. The format of the symbol name should be &lt;PROJECT&gt;_&lt;PATH&gt;_&lt;FILE&gt;_H_","like_count":15,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494408,"discussion_content":"\n1.可以多看看一些开源项目，它们的代码量比较大，你就可以体会到空格和空行的作用了。\n专栏的GitHub仓库代码虽然比较小，但也都应用了这些规范，可以做参考。\n\n2.说的很对，这也是注释一个非常重要的作用。我的建议是尽量不要删代码，毕竟是自己辛辛苦苦写出来的，删掉太可惜了。\n应该用注释暂时禁用，放一段时间，如果确实没有用再考虑删除。\n\n3.这个是include guard，后面的预处理阶段就会讲，你这是提前预习了，笑。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588985819,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1230960,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c8/70/f2ebfb6f.jpg","nickname":"莫慌","note":"","ucode":"45782C19DB1F87","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":266766,"discussion_content":"关于作者回复的第二点：现在的项目版本控制都做得很好了，删掉的代码能够很方便找回来，仅仅注释的话观感不太好","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1589554058,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1216016,"avatar":"https://static001.geekbang.org/account/avatar/00/12/8e/10/10092bb1.jpg","nickname":"Luke","note":"","ucode":"C34D4C44DBCE03","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1230960,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c8/70/f2ebfb6f.jpg","nickname":"莫慌","note":"","ucode":"45782C19DB1F87","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587210,"discussion_content":"是的，僵尸代码会让维护者一下子搞不清楚是漏删了还是其他目的😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662884941,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":266766,"ip_address":"江苏"},"score":587210,"extra":""}]}]},{"had_liked":false,"id":215439,"user_name":"winsummer","can_delete":false,"product_type":"c1","uid":1796546,"ip_address":"","ucode":"55060A70E85105","user_header":"https://static001.geekbang.org/account/avatar/00/1b/69/c2/519723fb.jpg","comment_is_top":false,"comment_ctime":1588992399,"is_pvip":false,"replies":[{"id":"79731","content":"看怎么用，如果是对外发布的，就写在声明，如果是内部用的，就在定义处。<br><br>但一定要注意，最好不要两处都有注释，否则一旦有变动，维护保持同步很麻烦。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1588994615,"ip_address":"","comment_id":215439,"utype":1}],"discussion_count":1,"race_medal":0,"score":"48833632655","product_id":100051801,"comment_content":"老师，函数的注释是写在声明处还是写在定义处好呢","like_count":11,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494438,"discussion_content":"看怎么用，如果是对外发布的，就写在声明，如果是内部用的，就在定义处。\n\n但一定要注意，最好不要两处都有注释，否则一旦有变动，维护保持同步很麻烦。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588994615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215412,"user_name":"Yaxe","can_delete":false,"product_type":"c1","uid":1620956,"ip_address":"","ucode":"18F23727F32401","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83erD9YTBibqNvibwp8mTWQMjgkenv0MWM1iaOhDiaC99noFm95UWISibzOgZf9kELlktJJcnvnXT9B24wRw/132","comment_is_top":false,"comment_ctime":1588987778,"is_pvip":false,"replies":[{"id":"79718","content":"笑，看来我的隐身能力还是挺成功的。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1588988653,"ip_address":"","comment_id":215412,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31653758850","product_id":100051801,"comment_content":"昨天上github看cpp_study这个仓库的时候 发现头像莫名熟悉，才知道之前star的注释版nginx也是罗大写的  十分有缘 学习学习！","like_count":7,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494421,"discussion_content":"笑，看来我的隐身能力还是挺成功的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588988653,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215363,"user_name":"幻境之桥","can_delete":false,"product_type":"c1","uid":1061517,"ip_address":"","ucode":"F9F4DD94CB554E","user_header":"https://static001.geekbang.org/account/avatar/00/10/32/8d/91cd624b.jpg","comment_is_top":false,"comment_ctime":1588982297,"is_pvip":false,"replies":[{"id":"79695","content":"nice，用clang-format这样的工具能够减少很多手工的工作，但编码风格的意识还是要有的，不能完全依赖工具。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1588985331,"ip_address":"","comment_id":215363,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27358786073","product_id":100051801,"comment_content":"在此基础上使用 clang-format 统一并减少大部分手工格式化的工作","like_count":6,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494403,"discussion_content":"nice，用clang-format这样的工具能够减少很多手工的工作，但编码风格的意识还是要有的，不能完全依赖工具。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588985331,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":231201,"user_name":"湫兮如风","can_delete":false,"product_type":"c1","uid":1672641,"ip_address":"","ucode":"972CC6C888101F","user_header":"https://static001.geekbang.org/account/avatar/00/19/85/c1/d94111b4.jpg","comment_is_top":false,"comment_ctime":1593606600,"is_pvip":false,"replies":[{"id":"85395","content":"共同营造“风清气正”的讨论氛围，笑。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1593651896,"ip_address":"","comment_id":231201,"utype":1}],"discussion_count":2,"race_medal":0,"score":"23068443080","product_id":100051801,"comment_content":"看完一节的内容一定一定要阅读大家的评论！罗老师这个专栏的氛围真好、质量真高!师生共进!","like_count":5,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500197,"discussion_content":"共同营造“风清气正”的讨论氛围，笑。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593651896,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2276457,"avatar":"https://static001.geekbang.org/account/avatar/00/22/bc/69/c8c5d9b0.jpg","nickname":"祥子","note":"","ucode":"8B01ED8B2CFD1A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":405859,"discussion_content":"老师的，笑，get到了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634654113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215355,"user_name":"Geek_0315ca","can_delete":false,"product_type":"c1","uid":1810532,"ip_address":"","ucode":"675254A9FC25A8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKVAVOYIoohh3bCdgErne0VHtoPorcrtmOAR45rsWPmJsLkzlvqMulbRyv0Skj8JHajrA9bPia3Lxw/132","comment_is_top":false,"comment_ctime":1588980062,"is_pvip":false,"replies":[{"id":"79698","content":"对，这个几个对于改善代码可读性非常有用，而且也简单容易上手。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1588985412,"ip_address":"","comment_id":215355,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23063816542","product_id":100051801,"comment_content":"我比较喜欢变量名使用m和g前缀，说明变量的作用域范围；todo注释标注自己未实现的功能和想法💡 ；函数体内部使用空行分离不同的代码片段","like_count":5,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494400,"discussion_content":"对，这个几个对于改善代码可读性非常有用，而且也简单容易上手。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588985412,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":216798,"user_name":"yelin","can_delete":false,"product_type":"c1","uid":1416262,"ip_address":"","ucode":"4341B2F4C513FE","user_header":"https://static001.geekbang.org/account/avatar/00/15/9c/46/a2c1a99f.jpg","comment_is_top":false,"comment_ctime":1589345263,"is_pvip":false,"replies":[{"id":"80201","content":"<br>1.匈牙利命名法里的类型前缀现在已经不提倡了，比如你写了一个int iNum，后来想改成long，那么前缀i就失去意义了。m_和g_表示作用域还是很好的，不会因为重构而失效。<br><br>2.操作符两边加空格也是优良的编码风格传统了，留白非常重要。<br>","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1589349238,"ip_address":"","comment_id":216798,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18769214447","product_id":100051801,"comment_content":"特别喜欢匈牙利命名法里的类型前缀，不过现在使用的也基本就是m和g前缀了。我个人特别喜欢空格！很多CPP check，没有空格是会报错的，所以不能说习惯啦，这是规则。<br>","like_count":4,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494948,"discussion_content":"\n1.匈牙利命名法里的类型前缀现在已经不提倡了，比如你写了一个int iNum，后来想改成long，那么前缀i就失去意义了。m_和g_表示作用域还是很好的，不会因为重构而失效。\n\n2.操作符两边加空格也是优良的编码风格传统了，留白非常重要。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589349238,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":216084,"user_name":"hb","can_delete":false,"product_type":"c1","uid":1139064,"ip_address":"","ucode":"788700127D3635","user_header":"https://static001.geekbang.org/account/avatar/00/11/61/78/84e3433a.jpg","comment_is_top":false,"comment_ctime":1589186585,"is_pvip":false,"replies":[{"id":"79968","content":"很对，但对于C++来说，并没有官方推荐的style，这大概也是C++崇尚的自由吧，我们可以任意选择自己喜欢的style。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1589187692,"ip_address":"","comment_id":216084,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14474088473","product_id":100051801,"comment_content":"其实各个语言都有自己的code style， 例如OC就是习惯驼峰命名，基本不用加 &quot;_&quot;","like_count":3,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494662,"discussion_content":"很对，但对于C++来说，并没有官方推荐的style，这大概也是C++崇尚的自由吧，我们可以任意选择自己喜欢的style。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589187692,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215820,"user_name":"c1rew","can_delete":false,"product_type":"c1","uid":1021813,"ip_address":"","ucode":"4F9FAFD8FCC0A7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/97/75/d73a7828.jpg","comment_is_top":false,"comment_ctime":1589110026,"is_pvip":true,"replies":[{"id":"79843","content":"好东西欢迎大家一起分享。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1589110897,"ip_address":"","comment_id":215820,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14474011914","product_id":100051801,"comment_content":"代码统一规范，推荐一个工具，astyle，命令行或者vscode也有插件，大家提交代码前一键格式化，风格还可以根据配置自定义。","like_count":3,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494571,"discussion_content":"好东西欢迎大家一起分享。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589110897,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215758,"user_name":"虎皮青椒","can_delete":false,"product_type":"c1","uid":1018783,"ip_address":"","ucode":"04476E85B28842","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8b/9f/bce7b518.jpg","comment_is_top":false,"comment_ctime":1589097388,"is_pvip":false,"replies":[{"id":"79838","content":"记住代码是写给别人看的，自己看觉得很清楚，可别人不一定理解，所以适当的注释还是要有的。<br><br>最基本的文件头、函数和类的功能说明是必须的，关键的业务逻辑部分最好加上注释，每次有重大修改也应该加上注释说明。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1589101060,"ip_address":"","comment_id":215758,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14473999276","product_id":100051801,"comment_content":"我觉得如果代码自己把自己写清楚了，比如清晰的布局，贴切的函数和变量名，适当的空行分割等等，注释就不必了。这是上策。<br><br>如果不行，那尽量写上规整周全的注释，帮助其他人维护。这是中策。<br><br>如果代码写得不行，注释也没有就太糟糕了。","like_count":3,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494543,"discussion_content":"记住代码是写给别人看的，自己看觉得很清楚，可别人不一定理解，所以适当的注释还是要有的。\n\n最基本的文件头、函数和类的功能说明是必须的，关键的业务逻辑部分最好加上注释，每次有重大修改也应该加上注释说明。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589101060,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":218493,"user_name":"EncodedStar","can_delete":false,"product_type":"c1","uid":1504234,"ip_address":"","ucode":"03958CA7DDD6AE","user_header":"https://static001.geekbang.org/account/avatar/00/16/f3/ea/2b2adda5.jpg","comment_is_top":false,"comment_ctime":1589808723,"is_pvip":false,"replies":[{"id":"80790","content":"说的很好。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1589849468,"ip_address":"","comment_id":218493,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10179743315","product_id":100051801,"comment_content":"code style 从开始学写代码就注意起来了，之前看初学者的代码都是没有换行或者空格，真的读起来难受。优秀的代码都是可以阅读的，这种代码从结构到逻辑都是让人感觉眼前一亮，而不是一脸懵逼。<br>代码除了注释之外，我觉得会写log也比较重要，很多程序不仅仅是再运行前审查代码，还有就是出错时候返回来看代码，这时候你的code style和log里面的内容就为精确排查错误剩下一大笔时间！！！","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495483,"discussion_content":"说的很好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589849468,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":218154,"user_name":"怪兽","can_delete":false,"product_type":"c1","uid":1324007,"ip_address":"","ucode":"3342C55CB83B08","user_header":"https://static001.geekbang.org/account/avatar/00/14/33/e7/145be2f9.jpg","comment_is_top":false,"comment_ctime":1589725511,"is_pvip":false,"replies":[{"id":"80698","content":"<br>1.函数参数的作用域仅限于本函数，作用域很小，而且在最前面，一眼就能看到，一般不用什么特别的前缀，但要注意不要写超长的函数。<br><br>2.如果你把变量类型改成vector&lt;char&gt;，那么前缀就失去意义了，所以尽量不要在名字里硬编码类型信息。<br>str前缀不应该表示具体类型，而是表示含义才对。<br><br>3.看习惯，还有公司的规范，没有强制标准。我个人喜欢用&#47;&#47;。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1589763816,"ip_address":"","comment_id":218154,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10179660103","product_id":100051801,"comment_content":"我在实践中有几个疑惑，想请教一下老师：<br>1. 函数参数也是变量，该怎么命名能够直观地知道这个变量是入参，而不是局部变量？<br>2. 匈牙利命名法：string str_value;不是更能表示该变量是个字符串吗？<br>3. member fucntion要注释的话，建议采用单行&#47;&#47;……， 还是多行 &#47;* @param ……   @return…… *&#47;？","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495364,"discussion_content":"\n1.函数参数的作用域仅限于本函数，作用域很小，而且在最前面，一眼就能看到，一般不用什么特别的前缀，但要注意不要写超长的函数。\n\n2.如果你把变量类型改成vector&amp;lt;char&amp;gt;，那么前缀就失去意义了，所以尽量不要在名字里硬编码类型信息。\nstr前缀不应该表示具体类型，而是表示含义才对。\n\n3.看习惯，还有公司的规范，没有强制标准。我个人喜欢用//。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589763816,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":216768,"user_name":"yelin","can_delete":false,"product_type":"c1","uid":1416262,"ip_address":"","ucode":"4341B2F4C513FE","user_header":"https://static001.geekbang.org/account/avatar/00/15/9c/46/a2c1a99f.jpg","comment_is_top":false,"comment_ctime":1589338906,"is_pvip":false,"replies":[{"id":"80194","content":"那就只能“随大流”了，不过内心里还是要做一个“理想主义者”，笑。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1589339503,"ip_address":"","comment_id":216768,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10179273498","product_id":100051801,"comment_content":"非常认同本文提到的很多观念啊，取百家之长，不过有些公司单位强制使用谷歌规范或者公司规范，对于这一类和自己理念冲突的问题，老师怎么解决","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494941,"discussion_content":"那就只能“随大流”了，不过内心里还是要做一个“理想主义者”，笑。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589339503,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1729060,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/62/24/07e2507c.jpg","nickname":"托尼斯威特","note":"","ucode":"98A1035527292E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387084,"discussion_content":"统一的规范其实比个人审美形成的规范更有用。代码规范的长期价值是可维护性。多人合作的代码不能因为个人审美而混乱，git commit 也不应该包含很多样式的改来改去","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627977996,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215612,"user_name":"qinsi","can_delete":false,"product_type":"c1","uid":1667175,"ip_address":"","ucode":"090D9C4068FF12","user_header":"https://static001.geekbang.org/account/avatar/00/19/70/67/0c1359c2.jpg","comment_is_top":false,"comment_ctime":1589032438,"is_pvip":true,"replies":[{"id":"79813","content":"如果是与国情结合比较紧密的业务，没有合适的英文词，那就可以用中文了，但最好配上合适的注释。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1589062332,"ip_address":"","comment_id":215612,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10178967030","product_id":100051801,"comment_content":"There are 2 hard problems in computer science: cache invalidation, naming things, and off-by-1 errors.<br><br>团队英文水平有限，试过直接用中文来命名一些业务上较难翻译成英文或翻译后较繁琐的概念，用作变量名和函数名，反而没那么纠结，代码review或接手一看就懂","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494496,"discussion_content":"如果是与国情结合比较紧密的业务，没有合适的英文词，那就可以用中文了，但最好配上合适的注释。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589062332,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215581,"user_name":"wuwei","can_delete":false,"product_type":"c1","uid":1689329,"ip_address":"","ucode":"DA60894F10C71F","user_header":"https://static001.geekbang.org/account/avatar/00/19/c6/f1/aac154fe.jpg","comment_is_top":false,"comment_ctime":1589023872,"is_pvip":false,"replies":[{"id":"79799","content":"<br>1.注意，是成员变量加m_，成员函数不需要。<br>而且加m_也不是强制的，只是我个人的推荐，你一定要找到对自己最合适的风格。<br><br>2.其实真要全写各种注释也是很累的，看实际情况，在大中型项目中很有必要，小项目可以适当省略。<br>如果有code review，最好听一下别人的意见，看他们觉得哪里最需要注释。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1589026877,"ip_address":"","comment_id":215581,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10178958464","product_id":100051801,"comment_content":"留白的习惯我一直都有。命名倒是有点问题，member_function没有加m_的习惯。注释只做了代码说明和注释实验代码，文件开头、函数和类的说明一直没做，要改改了。","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494485,"discussion_content":"\n1.注意，是成员变量加m_，成员函数不需要。\n而且加m_也不是强制的，只是我个人的推荐，你一定要找到对自己最合适的风格。\n\n2.其实真要全写各种注释也是很累的，看实际情况，在大中型项目中很有必要，小项目可以适当省略。\n如果有code review，最好听一下别人的意见，看他们觉得哪里最需要注释。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589026877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215382,"user_name":"Sochooligan","can_delete":false,"product_type":"c1","uid":1318528,"ip_address":"","ucode":"B66F78B6B86476","user_header":"https://static001.geekbang.org/account/avatar/00/14/1e/80/e409fff6.jpg","comment_is_top":false,"comment_ctime":1588985124,"is_pvip":false,"replies":[{"id":"79708","content":"有这个指标可以强制让大家多用空白，改善代码的可读性，具体的数字可以根据实际情况调整。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1588986334,"ip_address":"","comment_id":215382,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10178919716","product_id":100051801,"comment_content":"还没看完，“20%的留白”，观点非常启发人。","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494411,"discussion_content":"有这个指标可以强制让大家多用空白，改善代码的可读性，具体的数字可以根据实际情况调整。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588986334,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215360,"user_name":"fl260919784","can_delete":false,"product_type":"c1","uid":1045678,"ip_address":"","ucode":"D6E10B8BDD0BB8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f4/ae/3b101c00.jpg","comment_is_top":false,"comment_ctime":1588981502,"is_pvip":false,"replies":[{"id":"79696","content":"我是标准库、Boost、Nginx看习惯了，对于CamelCase总是不太适应。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1588985381,"ip_address":"","comment_id":215360,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10178916094","product_id":100051801,"comment_content":"Facebook的命名方式也很赞，类JAVA风格；除了函数、变量、类的命名，还有文件夹、文件、namespace的命名也很重要","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494402,"discussion_content":"我是标准库、Boost、Nginx看习惯了，对于CamelCase总是不太适应。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588985381,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":281013,"user_name":"201201782","can_delete":false,"product_type":"c1","uid":2438666,"ip_address":"","ucode":"5342B6F72213CE","user_header":"","comment_is_top":false,"comment_ctime":1614525463,"is_pvip":false,"replies":[{"id":"102024","content":"是的，这样做可以让代码写起来更像文档，阅读起来更容易，也更方便今后的维护。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1614563285,"ip_address":"","comment_id":281013,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5909492759","product_id":100051801,"comment_content":"留白确实是以前没怎么注意到的点，一开始以为公司不允许留白。。。感觉之后写代码一定要注意这个问题<br>注释里的TODO确实是非常重要，因为很多开发都是迭代式的，写在代码中也能保证以后能快速想起要做的关键事项，可以提升效率同时最重要的是尽早发现以及避免错误","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516276,"discussion_content":"是的，这样做可以让代码写起来更像文档，阅读起来更容易，也更方便今后的维护。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614563285,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":245281,"user_name":"宇天飞","can_delete":false,"product_type":"c1","uid":1126444,"ip_address":"","ucode":"3FB37D1E2DAA61","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/2c/06375913.jpg","comment_is_top":false,"comment_ctime":1598883359,"is_pvip":true,"replies":[{"id":"90213","content":"认真学习，再多看其他同学的留言可以学到更多的东西。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1598921736,"ip_address":"","comment_id":245281,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5893850655","product_id":100051801,"comment_content":"你用过哪些好的 code style，你最喜欢今天介绍的哪几条？<br>总则：“任何人都能写出机器能看懂的代码，但只有优秀的程序员才能写出人能看懂的代码。”，让我确定了要写达到什么目的。当人都能看懂的时候，bug有没有也很容易看出来。<br>1、用好空格和空行，多留白，让写代码就像写诗一样；让我坚定了code style的可践行性。<br>2、给变量、函数、类起个好名字，你的代码就成功了一半；code style非常简短，非常好。<br><br><br>注释在代码里通常的作用是“说明文档”，但它还有另外一个重要的用法，你知道吗？<br>1、多人协作<br>2、未来继续开发<br><br>评论区学到了：clang-format这个工具","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504829,"discussion_content":"认真学习，再多看其他同学的留言可以学到更多的东西。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598921736,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":218745,"user_name":"ericluo","can_delete":false,"product_type":"c1","uid":1104341,"ip_address":"","ucode":"1A593C7AEC45FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/d9/d5/b439fe35.jpg","comment_is_top":false,"comment_ctime":1589863872,"is_pvip":false,"replies":[{"id":"80857","content":"对，写代码就像写诗一样，要有适当的断句。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1589869893,"ip_address":"","comment_id":218745,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5884831168","product_id":100051801,"comment_content":"很赞同留白的艺术<br>个人觉得留白主用于分割逻辑段，让别人或自己去阅读时不会那个累，逻辑也很容易理解","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495565,"discussion_content":"对，写代码就像写诗一样，要有适当的断句。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589869893,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":217598,"user_name":"写代码的人","can_delete":false,"product_type":"c1","uid":1063612,"ip_address":"","ucode":"377F18ADB8CBA6","user_header":"https://static001.geekbang.org/account/avatar/00/10/3a/bc/23a2c340.jpg","comment_is_top":false,"comment_ctime":1589541049,"is_pvip":false,"replies":[{"id":"80486","content":"这个完全就是个人的喜好了。<br><br>第一种写法我比较推荐，因为花括号的层次对应关系看得很清楚。<br><br>第二种写法比较紧凑，节约空间，因为Java流行它也就跟着流行了。<br><br>两种写法并无优劣之分，在项目里保持一致就好，有的工具也可以很简单地格式化，就不必为此纠结了。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1589546502,"ip_address":"","comment_id":217598,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5884508345","product_id":100051801,"comment_content":"我对大括号用法有个疑惑，以前写C的时候，都是上下对称的写法，如下，<br>if(xx)<br>{<br><br>}<br>但是看java代码大部分人都是下面这样的，<br>if(xx){<br><br>}<br>感觉还是上面的看着舒服一些，下面这种用法有啥好处呢？是为了节省空间？","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495192,"discussion_content":"这个完全就是个人的喜好了。\n\n第一种写法我比较推荐，因为花括号的层次对应关系看得很清楚。\n\n第二种写法比较紧凑，节约空间，因为Java流行它也就跟着流行了。\n\n两种写法并无优劣之分，在项目里保持一致就好，有的工具也可以很简单地格式化，就不必为此纠结了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589546502,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2021825,"avatar":"","nickname":"Geek_6a88ab","note":"","ucode":"2DCF784A192461","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295608,"discussion_content":"使用VS2019 学习C++，自动格式化总是把左大括号新起一行，我就把他移上去……因为习惯了第二种写法，","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596261444,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1670664,"avatar":"https://static001.geekbang.org/account/avatar/00/19/7e/08/a50945c3.jpg","nickname":"muzigef","note":"","ucode":"BB65A61733D1D4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285108,"discussion_content":"开始我也是喜欢第一种，用习惯之后发现第二种也是很美的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592743857,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":217395,"user_name":"章大蒜📍","can_delete":false,"product_type":"c1","uid":1527051,"ip_address":"","ucode":"B109218608DAFB","user_header":"https://static001.geekbang.org/account/avatar/00/17/4d/0b/ac1f7fec.jpg","comment_is_top":false,"comment_ctime":1589478087,"is_pvip":false,"replies":[{"id":"80408","content":"是的，注释也要及时维护，所以注释要写的言简意赅，否则改起来也是很累的。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1589492910,"ip_address":"","comment_id":217395,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5884445383","product_id":100051801,"comment_content":"修改代码时要更新注释，不要出现牛头不对马嘴的情况，很容易误导别人，时间长了甚至自己都会被误导","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495134,"discussion_content":"是的，注释也要及时维护，所以注释要写的言简意赅，否则改起来也是很累的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589492910,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":217010,"user_name":"无为而立","can_delete":false,"product_type":"c1","uid":2003887,"ip_address":"","ucode":"A74526BF43A077","user_header":"https://static001.geekbang.org/account/avatar/00/1e/93/af/54e2a654.jpg","comment_is_top":false,"comment_ctime":1589385021,"is_pvip":false,"replies":[{"id":"80264","content":"自己写完注释后让旁边的同事看看，让别人指出有什么问题，该怎么写才好，多这样做就能写好注释了。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1589417947,"ip_address":"","comment_id":217010,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5884352317","product_id":100051801,"comment_content":"我的code style和老师说的几乎一样，类用驼峰，变量和函数名用snake case。就是感觉注释说明有时候写的不好。","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495007,"discussion_content":"自己写完注释后让旁边的同事看看，让别人指出有什么问题，该怎么写才好，多这样做就能写好注释了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589417947,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215692,"user_name":"土土人","can_delete":false,"product_type":"c1","uid":1045486,"ip_address":"","ucode":"6501B7D4F63E95","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f3/ee/33ef689b.jpg","comment_is_top":false,"comment_ctime":1589078947,"is_pvip":true,"replies":[{"id":"79822","content":"一般文件名都是跟类名相同的，所以做好面向对象设计，分解出好的类就行了。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1589091088,"ip_address":"","comment_id":215692,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5884046243","product_id":100051801,"comment_content":"关于文件名的规范有没有什么建议呀？","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494531,"discussion_content":"一般文件名都是跟类名相同的，所以做好面向对象设计，分解出好的类就行了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589091088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215691,"user_name":"黄骏","can_delete":false,"product_type":"c1","uid":1849733,"ip_address":"","ucode":"3C41D02F4F712C","user_header":"https://static001.geekbang.org/account/avatar/00/1c/39/85/c6110f83.jpg","comment_is_top":false,"comment_ctime":1589078786,"is_pvip":true,"replies":[{"id":"79823","content":"Linux的代码也是很规整的，值得读。注释少的代码看起来确实累，可以用一些工具辅助，比如画uml图。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1589091159,"ip_address":"","comment_id":215691,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5884046082","product_id":100051801,"comment_content":"觉得linux内核的代码注释值得学习，很详细。工作中读了一些开源代码，读注释少的代码会很痛苦，比如，ceph，哈哈","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494530,"discussion_content":"Linux的代码也是很规整的，值得读。注释少的代码看起来确实累，可以用一些工具辅助，比如画uml图。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589091159,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215629,"user_name":"泡泡龙","can_delete":false,"product_type":"c1","uid":1208655,"ip_address":"","ucode":"8D43010FA3DC2C","user_header":"https://static001.geekbang.org/account/avatar/00/12/71/4f/bce0d5bc.jpg","comment_is_top":false,"comment_ctime":1589035761,"is_pvip":true,"replies":[{"id":"79812","content":"<br>1.是的，这个也要看团队的整体水平。小段注释尽量用英文，复杂的逻辑我们可能用英文表述不清楚，就可以用中文。<br><br>2.git历史当然也可以，但有的时候在代码提交历史里查找也是比较累人的事情，直接放开注释更省事。<br><br>3.有多种选择不是坏事，找到最适合自己的就好。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1589062214,"ip_address":"","comment_id":215629,"utype":1}],"discussion_count":1,"race_medal":2,"score":"5884003057","product_id":100051801,"comment_content":"喜欢老师说的写好注释应该换位思考。<br><br>还有就是我觉得团队英语水平不行时候还是应该写汉字注释，要比蹩脚的英文注释更好一些。<br><br>网上还有种说法是，不要留注释的代码，一是交给git来管理历史，这样文件更干净；<br>另外是过几天返回来看注释掉的代码可能有更简洁的实现，而不是放开原来的注释","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494502,"discussion_content":"\n1.是的，这个也要看团队的整体水平。小段注释尽量用英文，复杂的逻辑我们可能用英文表述不清楚，就可以用中文。\n\n2.git历史当然也可以，但有的时候在代码提交历史里查找也是比较累人的事情，直接放开注释更省事。\n\n3.有多种选择不是坏事，找到最适合自己的就好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589062214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215597,"user_name":"Tedeer","can_delete":false,"product_type":"c1","uid":1693287,"ip_address":"","ucode":"7DD9837A38378D","user_header":"https://static001.geekbang.org/account/avatar/00/19/d6/67/5e0cac1b.jpg","comment_is_top":false,"comment_ctime":1589028546,"is_pvip":false,"replies":[{"id":"79816","content":"对，编码规范看似简单枯燥，但却是最应该被重视的，就像是要求大家都用标准普通话交流。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1589062477,"ip_address":"","comment_id":215597,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5883995842","product_id":100051801,"comment_content":"用过较好的codestyle是《阿里java开发手册》中的介绍，vscode中prettier代码格式化工具，最喜欢今天介绍留白（清爽）和命名，以前在开发中遇到过long a = 10l的情况，被坑了。我觉得注释写的好也是代码协同者的交流语言，节约时间成本。","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494490,"discussion_content":"对，编码规范看似简单枯燥，但却是最应该被重视的，就像是要求大家都用标准普通话交流。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589062477,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":359276,"user_name":"夕林语","can_delete":false,"product_type":"c1","uid":1264180,"ip_address":"北京","ucode":"B57681D0C73E1B","user_header":"https://static001.geekbang.org/account/avatar/00/13/4a/34/1faac99b.jpg","comment_is_top":false,"comment_ctime":1665389367,"is_pvip":false,"replies":[{"id":"130674","content":"非常好的经验分享。<br><br>Code style不是绝对的，关键要和周围的同事保持一致。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1665404863,"ip_address":"北京","comment_id":359276,"utype":1}],"discussion_count":2,"race_medal":2,"score":"1665389367","product_id":100051801,"comment_content":"课后作业：<br>1.由于我是Java语言的开发者，所以我最常用的code style就是alibaba Java Coding Guidelines。<br>个人实践中比较宝贵的有一条是逻辑控制方面的，我叫它“失败判断优先”，例如：if (!obj == null) {....}会变成if (obj == null) {return;} .....<br>2.注释的另一个主要作用我觉得可能是“备忘录”吧，因为代码逻辑实现之后如果很长时间不动，自己都会忘掉，如果有个完备的注释很快就能捡起来","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589939,"discussion_content":"非常好的经验分享。\n\nCode style不是绝对的，关键要和周围的同事保持一致。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665404864,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1264180,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/34/1faac99b.jpg","nickname":"夕林语","note":"","ucode":"B57681D0C73E1B","race_medal":2,"user_type":1,"is_pvip":false},"reply_author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":590018,"discussion_content":"理解，code style的主要作用是提升代码可读性嘛，如果大家都保持一致的编码风格，更加利于同事理解代码。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665469543,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":589939,"ip_address":"江西"},"score":590018,"extra":""}]}]},{"had_liked":false,"id":336374,"user_name":"BrandonH","can_delete":false,"product_type":"c1","uid":2839988,"ip_address":"","ucode":"51ABE1EC0A8255","user_header":"https://static001.geekbang.org/account/avatar/00/2b/55/b4/5fd0fc40.jpg","comment_is_top":false,"comment_ctime":1646119880,"is_pvip":true,"replies":[{"id":"122971","content":"great","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1646186215,"ip_address":"","comment_id":336374,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1646119880","product_id":100051801,"comment_content":"总结一下自己体会到的编码规范：<br>1.命名规则：<br>常量和宏需要全部大写，不同单词之间用下划线_分隔<br>自定义的类用CamelCase命名，成员函数、变量用小写和下划线分隔<br>成员变量前加上m_进行表示，全局变量前加上g_进行表示<br><br>2.其他常见的编码规范：缩进两个字符，将Tab变成空格。写条件判断语句时()后空一格接大括号，等等","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554005,"discussion_content":"great","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646186215,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319757,"user_name":"Joseph","can_delete":false,"product_type":"c1","uid":1085994,"ip_address":"","ucode":"B031FACEBEE273","user_header":"https://static001.geekbang.org/account/avatar/00/10/92/2a/bae66865.jpg","comment_is_top":false,"comment_ctime":1635930675,"is_pvip":true,"replies":[{"id":"115950","content":"great","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1635982334,"ip_address":"","comment_id":319757,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1635930675","product_id":100051801,"comment_content":"个人经验，现代c++一定要用clang-format，否则多人之间没法统一格式化，代码风格我喜欢google风格，因为这个风格使用的人最多。其他的个人喜好在多数派之下都要服从多数，因为这东西本来就是为了有更多的style，再有什么个人喜好也得考虑交流方便。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529761,"discussion_content":"great","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635982334,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":294429,"user_name":"奋斗","can_delete":false,"product_type":"c1","uid":2047392,"ip_address":"","ucode":"C84C2D030ACA51","user_header":"https://static001.geekbang.org/account/avatar/00/1f/3d/a0/acf6b165.jpg","comment_is_top":false,"comment_ctime":1621938642,"is_pvip":false,"replies":[{"id":"106838","content":"总结的非常好，清晰详细，great。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1621950715,"ip_address":"","comment_id":294429,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1621938642","product_id":100051801,"comment_content":"TODO: + 说明：<br>如果代码中有该标识，说明在标识处有功能代码待编写，待实现的功能在说明中会简略说明。如果你使用过 MFC 就会看见很多地方给编程者预留的代编写区，有该注释。<br><br>FIXME: + 说明：<br>如果代码中有该标识，说明标识处代码需要修正，甚至代码是错误的，不能工作，需要修复，如何修正会在说明中简略说明。如果代码中某部分还未进行测试，或者逻辑错误，可以这样标识。<br><br>XXX: + 说明：<br>如果代码中有该标识，说明标识处代码虽然实现了功能，但是实现的方法有待商榷，希望将来能改进，要改进的地方会在说明中简略说明。写的代码不管是性能或者功能不确定可以使用此注释进行标识。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":520648,"discussion_content":"总结的非常好，清晰详细，great。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621950715,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287417,"user_name":"凡人我回来","can_delete":false,"product_type":"c1","uid":2463755,"ip_address":"","ucode":"88B34BF95AA3A9","user_header":"https://static001.geekbang.org/account/avatar/00/25/98/0b/702cb261.jpg","comment_is_top":false,"comment_ctime":1617937760,"is_pvip":true,"replies":[{"id":"104390","content":"这也是很好的习惯，不过S&#47;C&#47;E开头还是有点匈牙利命名法的风格，建议再考虑一下。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1617945928,"ip_address":"","comment_id":287417,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1617937760","product_id":100051801,"comment_content":"我的命名习惯是<br>驼峰命名法，变量名以小写字母开头（成员变量加m_前缀，全局变量加g_前缀），函数以大写字母开头，struct以S开头，class以C开头、enum以E开头<br>","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518303,"discussion_content":"这也是很好的习惯，不过S/C/E开头还是有点匈牙利命名法的风格，建议再考虑一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617945928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":280116,"user_name":"企鹅君需要充电","can_delete":false,"product_type":"c1","uid":1858704,"ip_address":"","ucode":"EAD2F1C4A73363","user_header":"","comment_is_top":false,"comment_ctime":1614082940,"is_pvip":false,"replies":[{"id":"101748","content":"非常好的经验分享，nice。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1614128859,"ip_address":"","comment_id":280116,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1614082940","product_id":100051801,"comment_content":"1、根据我司习惯，风格基本用大小驼峰，python倒是用snake_case，编码风格我觉得还是要适应团队习惯，但一般用ide配一下通用检测工具（例如pclint&#47;pclint-plus）养成好习惯吧；<br>2、readme用中文写很正常，但是代码注释真的用英文吧……既少切换输入法，有减少中英符号混用的bug不是很好咩……而且有时候，源码被不同软件读写过后，很容易中文编乱码，那真的痛苦啊<br>3、注释我觉得还是很好的分隔符，特别是在ide显示，高亮情况下很容易区分不同代码块","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515986,"discussion_content":"非常好的经验分享，nice。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614128859,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":269211,"user_name":"lemon K.🍋","can_delete":false,"product_type":"c1","uid":2359143,"ip_address":"","ucode":"2083C5AC11E2E0","user_header":"https://static001.geekbang.org/account/avatar/00/23/ff/67/4ace1f68.jpg","comment_is_top":false,"comment_ctime":1608557577,"is_pvip":false,"replies":[{"id":"97670","content":"欢迎实用经验分享。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1608600336,"ip_address":"","comment_id":269211,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1608557577","product_id":100051801,"comment_content":"一个关于注释的实践经验<br>建议把枚举  全局变量等的注释写在代码上方，这样在其他地方使用的时候  可以将鼠标悬浮在变量或方法上，就能看到关于这个变量或方法的注释  很好用","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512193,"discussion_content":"欢迎实用经验分享。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608600336,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":267545,"user_name":"Master_Hongyi","can_delete":false,"product_type":"c1","uid":2244040,"ip_address":"","ucode":"65150B78F7FE07","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/g1ZMe3RcZJmEiatEWOOEO1eKe9fYLP0SW0wdVP86JdNl96SfT44ITaqEeTaZMuwlQB8oXKEiauiaKIoE5RL28HJ0Q/132","comment_is_top":false,"comment_ctime":1607824405,"is_pvip":false,"replies":[{"id":"97253","content":"只要统一风格就好，大家都用一种一致的方式去交流。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1607915562,"ip_address":"","comment_id":267545,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1607824405","product_id":100051801,"comment_content":"我们公司的变量名是小驼峰，函数或者类名是大驼峰","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511676,"discussion_content":"只要统一风格就好，大家都用一种一致的方式去交流。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607915562,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242426,"user_name":"ym","can_delete":false,"product_type":"c1","uid":1986914,"ip_address":"","ucode":"4C2DBB83731ACA","user_header":"https://static001.geekbang.org/account/avatar/00/1e/51/62/770c1f72.jpg","comment_is_top":false,"comment_ctime":1597719355,"is_pvip":false,"replies":[{"id":"89464","content":"可以从变量的作用域来考虑。<br><br>函数的形参只在函数里用，应该表示在函数内的意义，而实参更多的是在外部的大环境下有意义。<br><br>一个例子是比较函数，形参一般就是left&#47;right，而实参会因为应用场景有更具体的意义。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1597720635,"ip_address":"","comment_id":242426,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1597719355","product_id":100051801,"comment_content":"老师，我在变量命名方面的困惑，可能是词穷，形参的名称和实参经常写的一样，有什么好办法来区分形参和实参的命名","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504009,"discussion_content":"可以从变量的作用域来考虑。\n\n函数的形参只在函数里用，应该表示在函数内的意义，而实参更多的是在外部的大环境下有意义。\n\n一个例子是比较函数，形参一般就是left/right，而实参会因为应用场景有更具体的意义。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597720635,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":227179,"user_name":"Geek_7969f3","can_delete":false,"product_type":"c1","uid":2040533,"ip_address":"","ucode":"DDC698D91D8DF9","user_header":"","comment_is_top":false,"comment_ctime":1592306890,"is_pvip":false,"replies":[{"id":"83756","content":"<br>1.说的不错，代码风格看个人习惯，C++比较自由，没有强制的规定。<br><br>2.这也是注释的一大用途，大段注释很爽。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1592357053,"ip_address":"","comment_id":227179,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1592306890","product_id":100051801,"comment_content":"1.最喜欢驼峰命名法，但是看了这篇文章后觉得文章里推荐的写法也很不错<br>2第二个我平时喜欢用来备注代码，进行debug.","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498526,"discussion_content":"\n1.说的不错，代码风格看个人习惯，C++比较自由，没有强制的规定。\n\n2.这也是注释的一大用途，大段注释很爽。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592357053,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":222394,"user_name":"立春","can_delete":false,"product_type":"c1","uid":1004877,"ip_address":"","ucode":"F52E829EDE4519","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/4d/c57092e4.jpg","comment_is_top":false,"comment_ctime":1590778625,"is_pvip":false,"replies":[{"id":"82030","content":"Google code style的确是公司色彩太重，有Google自己很多自己的考虑，这个是毫无疑问的。<br><br>引号的问题，好像有点多虑了，没有特别歧视的意思。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1590802704,"ip_address":"","comment_id":222394,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1590778625","product_id":100051801,"comment_content":"讲真，Google的Code Style更符合个人观感和习惯，我能接受每家的Code Style都或多或少有些差异，但“公司色彩”这双引号打的是否也带了点“个人色彩”。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496776,"discussion_content":"Google code style的确是公司色彩太重，有Google自己很多自己的考虑，这个是毫无疑问的。\n\n引号的问题，好像有点多虑了，没有特别歧视的意思。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590802704,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":220220,"user_name":"谷鱼","can_delete":false,"product_type":"c1","uid":1004052,"ip_address":"","ucode":"F22DB0C0269829","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/14/397145a4.jpg","comment_is_top":false,"comment_ctime":1590208499,"is_pvip":false,"replies":[{"id":"81293","content":"nice","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1590214074,"ip_address":"","comment_id":220220,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1590208499","product_id":100051801,"comment_content":"我比较喜欢留白这一点<br><br>注释除了正规的必要信息外，最好写上为何要写这段代码，尝试过的方案简介","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496092,"discussion_content":"nice","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590214074,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":218685,"user_name":"汪zZ","can_delete":false,"product_type":"c1","uid":1234757,"ip_address":"","ucode":"8B93062A683902","user_header":"https://static001.geekbang.org/account/avatar/00/12/d7/45/d1621188.jpg","comment_is_top":false,"comment_ctime":1589854627,"is_pvip":true,"replies":[{"id":"80823","content":"适当借鉴其他语言的经验，把好的东西搬进C++来，就能让C++更好。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1589860212,"ip_address":"","comment_id":218685,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1589854627","product_id":100051801,"comment_content":"学习到了使用todo。这个很好。感觉莫名其妙的python编码风格就符合老师的要求了。真实偷笑。直接把C++也照搬好了","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495543,"discussion_content":"适当借鉴其他语言的经验，把好的东西搬进C++来，就能让C++更好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589860212,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":217784,"user_name":"熊出没","can_delete":false,"product_type":"c1","uid":1145377,"ip_address":"","ucode":"6E39230CC87808","user_header":"https://static001.geekbang.org/account/avatar/00/11/7a/21/a33cc944.jpg","comment_is_top":false,"comment_ctime":1589613661,"is_pvip":true,"replies":[{"id":"80565","content":"good。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1589671036,"ip_address":"","comment_id":217784,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1589613661","product_id":100051801,"comment_content":"1、这里面大部分的编码风险都经历过，因为每个公司都有不同的要求，甚至有些公司还开发工具来检查编码规范。留白是喜欢且一直践行的，变量命名方式使用是课中讲到方式。唯一我没听过的是这个：“变量 &#47; 函数的名字长度与它的作用域成正比”，第一次，受教了，觉得很有必要，开发过程从未在意这一点；<br>2、注释的另一个用法就是代码屏蔽吧，有时代码调试会用到；其他的就不知道了","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495262,"discussion_content":"good。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589671036,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":217742,"user_name":"Luke","can_delete":false,"product_type":"c1","uid":1010819,"ip_address":"","ucode":"8368A63185356D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6c/83/48e528cb.jpg","comment_is_top":false,"comment_ctime":1589600425,"is_pvip":false,"replies":[{"id":"80532","content":"留白就跟网络小说一样，如果没有空行，看起来就会很累。<br><br>我觉得人的大脑的“暂存区”是有效的，紧凑的大段代码会难以记忆理解，会导致隐藏的bug。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1589610686,"ip_address":"","comment_id":217742,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1589600425","product_id":100051801,"comment_content":"关于留白看大家都是捧得多，我来个反面观点，说下为什么从最开始注重代码中的留白到追求代码紧凑。留白的好处是代码有节奏感，有美感，但是如果一段代码逻辑比较复杂，过于追求留白导致单屏代码行数太少，查阅代码得上下翻屏，虽然这个问题可以通过（一）写函数封装复杂逻辑，但阅读时还是需要在函数间跳来跳去；（二）用竖屏显示器，但还是追求能够在单屏内显示足够多的代码来实现快速阅览。<br><br>不知道这个偏好是非常个性化的，还是别人也有同感，笑。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495249,"discussion_content":"留白就跟网络小说一样，如果没有空行，看起来就会很累。\n\n我觉得人的大脑的“暂存区”是有效的，紧凑的大段代码会难以记忆理解，会导致隐藏的bug。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589610686,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1010819,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/6c/83/48e528cb.jpg","nickname":"Luke","note":"","ucode":"8368A63185356D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":276171,"discussion_content":"我没有表述清除，必要的留白是需要的，例如在逻辑独立的代码片段之间，但是为了能够尽量在单屏显示更多的代码，其他任何非必要的留白都删除（个人喜好）。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590833206,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":217706,"user_name":"zhao.shaowei","can_delete":false,"product_type":"c1","uid":1901415,"ip_address":"","ucode":"7263738B085A5D","user_header":"https://static001.geekbang.org/account/avatar/00/1d/03/67/a1d46d25.jpg","comment_is_top":false,"comment_ctime":1589594135,"is_pvip":false,"replies":[{"id":"80516","content":"好像C++里不行吧，注释只能是注释，给人看的，机器不能理解注释。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1589601234,"ip_address":"","comment_id":217706,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1589594135","product_id":100051801,"comment_content":"第一次了解到“注释中的示例可以用于单元测试”是在Rust中，在C++也有工具能够实现这个功能？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495227,"discussion_content":"好像C++里不行吧，注释只能是注释，给人看的，机器不能理解注释。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589601234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":217553,"user_name":"朱亚光","can_delete":false,"product_type":"c1","uid":1047981,"ip_address":"","ucode":"CC2B95C31EBFA4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fd/ad/33edf122.jpg","comment_is_top":false,"comment_ctime":1589533060,"is_pvip":false,"replies":[{"id":"80485","content":"这个就违反C++的设计哲学了：相信程序员，给予充分的自由，不对程序员有过多的限制。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1589539279,"ip_address":"","comment_id":217553,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1589533060","product_id":100051801,"comment_content":"C++ 可以学习go语言，对于编码不规范的代码编译出错，或者利用IDE的插件强制校验代码规范，强制写出规范的代码","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495177,"discussion_content":"这个就违反C++的设计哲学了：相信程序员，给予充分的自由，不对程序员有过多的限制。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589539279,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215851,"user_name":"有学识的兔子","can_delete":false,"product_type":"c1","uid":1628867,"ip_address":"","ucode":"D1D654B1562FC9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIicr82CnrdEjibibAvyeKRQHszSzIAqoCWxN0kqC442XcjEae6S9j6NDtKLpg4Da4CUQQeUFUicWqiaDw/132","comment_is_top":false,"comment_ctime":1589118773,"is_pvip":false,"replies":[{"id":"79882","content":"编码风格不是强制的，只要在团队里保持统一就好，其实驼峰式命名法在很多开源项目中都有，可能是跟Java流行有关吧。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1589151296,"ip_address":"","comment_id":215851,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1589118773","product_id":100051801,"comment_content":"1. 命名格式 我还是偏爱驼峰式命令法，函数采用大驼峰，变量采用小驼峰；成员变量用m_，全局用g_；代码中增加空行的使用值得借鉴。<br>2. 个人觉得注释不要到处都是，而是类或函数命名无法表达其主要内容或里面有些特殊原因可以增加注释，提高可读性。<br>","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494583,"discussion_content":"编码风格不是强制的，只要在团队里保持统一就好，其实驼峰式命名法在很多开源项目中都有，可能是跟Java流行有关吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589151296,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215791,"user_name":"dao","can_delete":false,"product_type":"c1","uid":1087879,"ip_address":"","ucode":"4181FB270462CF","user_header":"https://static001.geekbang.org/account/avatar/00/10/99/87/98ebb20e.jpg","comment_is_top":false,"comment_ctime":1589103621,"is_pvip":true,"replies":[{"id":"79840","content":"有IDE和工具辅助当然很好，但有的时候还是得靠人工，所以编码风格的意识一定要有。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1589106436,"ip_address":"","comment_id":215791,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1589103621","product_id":100051801,"comment_content":"关于编码风格也可以简单用 lint 和 editorconfig  来辅助","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494558,"discussion_content":"有IDE和工具辅助当然很好，但有的时候还是得靠人工，所以编码风格的意识一定要有。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589106436,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}