{"id":94972,"title":"03 | 列表和元组，到底用哪一个？","content":"<p>你好，我是景霄。</p><p>前面的课程，我们讲解了Python语言的学习方法，并且带你了解了Python必知的常用工具——Jupyter。那么从这节课开始，我们将正式学习Python的具体知识。</p><p>对于每一门编程语言来说，数据结构都是其根基。了解掌握Python的基本数据结构，对于学好这门语言至关重要。今天我们就一起来学习，Python中最常见的两种数据结构：列表（list）和元组（tuple）。</p><h2>列表和元组基础</h2><p>首先，我们需要弄清楚最基本的概念，什么是列表和元组呢？</p><p>实际上，列表和元组，都是<strong>一个可以放置任意数据类型的有序集合</strong>。</p><p>在绝大多数编程语言中，集合的数据类型必须一致。不过，对于Python的列表和元组来说，并无此要求：</p><pre><code>l = [1, 2, 'hello', 'world'] # 列表中同时含有int和string类型的元素\nl\n[1, 2, 'hello', 'world']\n\ntup = ('jason', 22) # 元组中同时含有int和string类型的元素\ntup\n('jason', 22)\n</code></pre><p>其次，我们必须掌握它们的区别。</p><ul>\n<li>\n<p><strong>列表是动态的</strong>，长度大小不固定，可以随意地增加、删减或者改变元素（mutable）。</p>\n</li>\n<li>\n<p><strong>而元组是静态的</strong>，长度大小固定，无法增加删减或者改变（immutable）。</p>\n</li>\n</ul><p>下面的例子中，我们分别创建了一个列表与元组。你可以看到，对于列表，我们可以很轻松地让其最后一个元素，由4变为40；但是，如果你对元组采取相同的操作，Python 就会报错，原因就是元组是不可变的。</p><!-- [[[read_end]]] --><pre><code>l = [1, 2, 3, 4]\nl[3] = 40 # 和很多语言类似，python中索引同样从0开始，l[3]表示访问列表的第四个元素\nl\n[1, 2, 3, 40]\n\ntup = (1, 2, 3, 4)\ntup[3] = 40\nTraceback (most recent call last):\n  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;\nTypeError: 'tuple' object does not support item assignment\n</code></pre><p>可是，如果你想对已有的元组做任何\"改变\"，该怎么办呢？那就只能重新开辟一块内存，创建新的元组了。</p><p>比如下面的例子，我们想增加一个元素5给元组，实际上就是创建了一个新的元组，然后把原来两个元组的值依次填充进去。</p><p>而对于列表来说，由于其是动态的，我们只需简单地在列表末尾，加入对应元素就可以了。如下操作后，会修改原来列表中的元素，而不会创建新的列表。</p><pre><code>tup = (1, 2, 3, 4)\nnew_tup = tup + (5, ) # 创建新的元组new_tup，并依次填充原元组的值\nnew _tup\n(1, 2, 3, 4, 5)\n\nl = [1, 2, 3, 4]\nl.append(5) # 添加元素5到原列表的末尾\nl\n[1, 2, 3, 4, 5]\n</code></pre><p>通过上面的例子，相信你肯定掌握了列表和元组的基本概念。接下来我们来看一些列表和元组的基本操作和注意事项。</p><p>首先，和其他语言不同，<strong>Python中的列表和元组都支持负数索引</strong>，-1表示最后一个元素，-2表示倒数第二个元素，以此类推。</p><pre><code>l = [1, 2, 3, 4]\nl[-1]\n4\n\ntup = (1, 2, 3, 4)\ntup[-1]\n4\n</code></pre><p>除了基本的初始化，索引外，<strong>列表和元组都支持切片操作</strong>：</p><pre><code>l = [1, 2, 3, 4]\nl[1:3] # 返回列表中索引从1到2的子列表\n[2, 3]\n\ntup = (1, 2, 3, 4)\ntup[1:3] # 返回元组中索引从1到2的子元组\n(2, 3) \n</code></pre><p>另外，列表和元组都<strong>可以随意嵌套</strong>：</p><pre><code>l = [[1, 2, 3], [4, 5]] # 列表的每一个元素也是一个列表\n\ntup = ((1, 2, 3), (4, 5, 6)) # 元组的每一个元素也是一个元组\n</code></pre><p>当然，两者也可以通过list()和tuple()函数相互转换：</p><pre><code>list((1, 2, 3))\n[1, 2, 3]\n\ntuple([1, 2, 3])\n(1, 2, 3)\n</code></pre><p>最后，我们来看一些列表和元组常用的内置函数：</p><pre><code>l = [3, 2, 3, 7, 8, 1]\nl.count(3) \n2\nl.index(7)\n3\nl.reverse()\nl\n[1, 8, 7, 3, 2, 3]\nl.sort()\nl\n[1, 2, 3, 3, 7, 8]\n\ntup = (3, 2, 3, 7, 8, 1)\ntup.count(3)\n2\ntup.index(7)\n3\nlist(reversed(tup))\n[1, 8, 7, 3, 2, 3]\nsorted(tup)\n[1, 2, 3, 3, 7, 8]\n</code></pre><p>这里我简单解释一下这几个函数的含义。</p><ul>\n<li>\n<p>count(item)表示统计列表/元组中item出现的次数。</p>\n</li>\n<li>\n<p>index(item)表示返回列表/元组中item第一次出现的索引。</p>\n</li>\n<li>\n<p>list.reverse()和list.sort()分别表示原地倒转列表和排序（注意，元组没有内置的这两个函数)。</p>\n</li>\n<li>\n<p>reversed()和sorted()同样表示对列表/元组进行倒转和排序，reversed()返回一个倒转后的迭代器（上文例子使用list()函数再将其转换为列表）；sorted()返回排好序的新列表。</p>\n</li>\n</ul><h2>列表和元组存储方式的差异</h2><p>前面说了，列表和元组最重要的区别就是，列表是动态的、可变的，而元组是静态的、不可变的。这样的差异，势必会影响两者存储方式。我们可以来看下面的例子：</p><pre><code>l = [1, 2, 3]\nl.__sizeof__()\n64\ntup = (1, 2, 3)\ntup.__sizeof__()\n48\n\n</code></pre><p>你可以看到，对列表和元组，我们放置了相同的元素，但是元组的存储空间，却比列表要少16字节。这是为什么呢？</p><p>事实上，由于列表是动态的，所以它需要存储指针，来指向对应的元素（上述例子中，对于int型，8字节）。另外，由于列表可变，所以需要额外存储已经分配的长度大小（8字节），这样才可以实时追踪列表空间的使用情况，当空间不足时，及时分配额外空间。</p><pre><code>l = []\nl.__sizeof__() // 空列表的存储空间为40字节\n40\nl.append(1)\nl.__sizeof__() \n72 // 加入了元素1之后，列表为其分配了可以存储4个元素的空间 (72 - 40)/8 = 4\nl.append(2) \nl.__sizeof__()\n72 // 由于之前分配了空间，所以加入元素2，列表空间不变\nl.append(3)\nl.__sizeof__() \n72 // 同上\nl.append(4)\nl.__sizeof__() \n72 // 同上\nl.append(5)\nl.__sizeof__() \n104 // 加入元素5之后，列表的空间不足，所以又额外分配了可以存储4个元素的空间\n</code></pre><p>上面的例子，大概描述了列表空间分配的过程。我们可以看到，为了减小每次增加/删减操作时空间分配的开销，Python每次分配空间时都会额外多分配一些，这样的机制（over-allocating）保证了其操作的高效性：增加/删除的时间复杂度均为O(1)。</p><p>但是对于元组，情况就不同了。元组长度大小固定，元素不可变，所以存储空间固定。</p><p>看了前面的分析，你也许会觉得，这样的差异可以忽略不计。但是想象一下，如果列表和元组存储元素的个数是一亿，十亿甚至更大数量级时，你还能忽略这样的差异吗？</p><h2>列表和元组的性能</h2><p>通过学习列表和元组存储方式的差异，我们可以得出结论：元组要比列表更加轻量级一些，所以总体上来说，元组的性能速度要略优于列表。</p><p>另外，Python会在后台，对静态数据做一些<strong>资源缓存</strong>（resource caching）。通常来说，因为垃圾回收机制的存在，如果一些变量不被使用了，Python就会回收它们所占用的内存，返还给操作系统，以便其他变量或其他应用使用。</p><p>但是对于一些静态变量，比如元组，如果它不被使用并且占用空间不大时，Python会暂时缓存这部分内存。这样，下次我们再创建同样大小的元组时，Python就可以不用再向操作系统发出请求，去寻找内存，而是可以直接分配之前缓存的内存空间，这样就能大大加快程序的运行速度。</p><p>下面的例子，是计算<strong>初始化</strong>一个相同元素的列表和元组分别所需的时间。我们可以看到，元组的初始化速度，要比列表快5倍。</p><pre><code>python3 -m timeit 'x=(1,2,3,4,5,6)'\n20000000 loops, best of 5: 9.97 nsec per loop\npython3 -m timeit 'x=[1,2,3,4,5,6]'\n5000000 loops, best of 5: 50.1 nsec per loop\n</code></pre><p>但如果是<strong>索引操作</strong>的话，两者的速度差别非常小，几乎可以忽略不计。</p><pre><code>python3 -m timeit -s 'x=[1,2,3,4,5,6]' 'y=x[3]'\n10000000 loops, best of 5: 22.2 nsec per loop\npython3 -m timeit -s 'x=(1,2,3,4,5,6)' 'y=x[3]'\n10000000 loops, best of 5: 21.9 nsec per loop\n</code></pre><p>当然，如果你想要增加、删减或者改变元素，那么列表显然更优。原因你现在肯定知道了，那就是对于元组，你必须得通过新建一个元组来完成。</p><h2>列表和元组的使用场景</h2><p>那么列表和元组到底用哪一个呢？根据上面所说的特性，我们具体情况具体分析。</p><p><strong>1. </strong>如果存储的数据和数量不变，比如你有一个函数，需要返回的是一个地点的经纬度，然后直接传给前端渲染，那么肯定选用元组更合适。</p><pre><code>def get_location():\n    ..... \n    return (longitude, latitude)\n</code></pre><p><strong>2. </strong>如果存储的数据或数量是可变的，比如社交平台上的一个日志功能，是统计一个用户在一周之内看了哪些用户的帖子，那么则用列表更合适。</p><pre><code>viewer_owner_id_list = [] # 里面的每个元素记录了这个viewer一周内看过的所有owner的id\nrecords = queryDB(viewer_id) # 索引数据库，拿到某个viewer一周内的日志\nfor record in records:\n    viewer_owner_id_list.append(record.id)\n</code></pre><h2>总结</h2><p>关于列表和元组，我们今天聊了很多，最后一起总结一下你必须掌握的内容。</p><p>总的来说，列表和元组都是有序的，可以存储任意数据类型的集合，区别主要在于下面这两点。</p><ul>\n<li>\n<p>列表是动态的，长度可变，可以随意的增加、删减或改变元素。列表的存储空间略大于元组，性能略逊于元组。</p>\n</li>\n<li>\n<p>元组是静态的，长度大小固定，不可以对元素进行增加、删减或者改变操作。元组相对于列表更加轻量级，性能稍优。</p>\n</li>\n</ul><h2>思考题</h2><p><strong>1. </strong>想创建一个空的列表，我们可以用下面的A、B两种方式，请问它们在效率上有什么区别吗？我们应该优先考虑使用哪种呢？可以说说你的理由。</p><pre><code># 创建空列表\n# option A\nempty_list = list()\n\n# option B\nempty_list = []\n</code></pre><p><strong>2. </strong>你在平时的学习工作中，是在什么场景下使用列表或者元组呢？欢迎留言和我分享。</p>","comments":[{"had_liked":false,"id":94606,"user_name":"和你一起搬砖的胡大爷","can_delete":false,"product_type":"c1","uid":1008587,"ip_address":"","ucode":"54607F4E17917A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/cb/7c004188.jpg","comment_is_top":false,"comment_ctime":1557850842,"is_pvip":false,"replies":[{"id":"33911","content":"1. list和tuple的内部实现都是array的形式，list因为可变，所以是一个over-allocate的array，tuple因为不可变，所以长度大小固定。具体可以参照源码list: https:&#47;&#47;github.com&#47;python&#47;cpython&#47;blob&#47;master&#47;Objects&#47;listobject.c. tuple: https:&#47;&#47;github.com&#47;python&#47;cpython&#47;blob&#47;master&#47;Objects&#47;tupleobject.c<br><br>2. 最后的思考题：<br>区别主要在于list()是一个function call，Python的function call会创建stack，并且进行一系列参数检查的操作，比较expensive，反观[]是一个内置的C函数，可以直接被调用，因此效率高。<br>内存分配，GC等等知识会在第二章进阶里面专门讲到。","user_name":"作者回复","comment_id":94606,"uid":"1259521","ip_address":"","utype":1,"ctime":1557906325,"user_name_real":"Jingxiao"}],"discussion_count":8,"race_medal":0,"score":"924975819482","product_id":100026901,"comment_content":"老师能不能讲一下list和tuple的内部实现，里边是linked list 还是array，还是把array linked一下这种。<br>最后那个问题，类比java，new 是在heap，直接声明就可能在常量区了。老师能讲下Python的vm么，比如内存分配，gc算法之类的。","like_count":216,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450131,"discussion_content":"1. list和tuple的内部实现都是array的形式，list因为可变，所以是一个over-allocate的array，tuple因为不可变，所以长度大小固定。具体可以参照源码list: https://github.com/python/cpython/blob/master/Objects/listobject.c. tuple: https://github.com/python/cpython/blob/master/Objects/tupleobject.c\n\n2. 最后的思考题：\n区别主要在于list()是一个function call，Python的function call会创建stack，并且进行一系列参数检查的操作，比较expensive，反观[]是一个内置的C函数，可以直接被调用，因此效率高。\n内存分配，GC等等知识会在第二章进阶里面专门讲到。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1557906325,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1026593,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/21/6c3ba9af.jpg","nickname":"lfn","note":"","ucode":"2E1558C6A12A89","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":264406,"discussion_content":"内置的c函数也是function 调用啊","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1589308333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2357566,"avatar":"https://static001.geekbang.org/account/avatar/00/23/f9/3e/0d5f27c4.jpg","nickname":"肥猫不开心","note":"","ucode":"FA9204B84913C0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1026593,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/21/6c3ba9af.jpg","nickname":"lfn","note":"","ucode":"2E1558C6A12A89","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382942,"discussion_content":">>> dis(&#34;[]&#34;)\n  1           0 BUILD_LIST               0\n              2 RETURN_VALUE\n>>> dis(&#34;list()&#34;)\n  1           0 LOAD_NAME                0 (list)\n              2 CALL_FUNCTION            0\n              4 RETURN_VALUE\n一个直接创建，一个去寻找list变量，然后看到()又去调用它","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1625801289,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":264406,"ip_address":""},"score":382942,"extra":""}]},{"author":{"id":1099375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c6/6f/ac3003fa.jpg","nickname":"xiong","note":"","ucode":"C1BFD9EF96372F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":87780,"discussion_content":"为什么用 python3 -m timeit -s &#39;empty_list=list()&#39; 和 python3 -m timeit -s &#39;empty_list=[]&#39; 结果差不多呢？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1576678701,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1030657,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ba/01/5ce8ce0b.jpg","nickname":"Leoorz","note":"","ucode":"8912628AD6ADE0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1099375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c6/6f/ac3003fa.jpg","nickname":"xiong","note":"","ucode":"C1BFD9EF96372F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296937,"discussion_content":"-s表示起始先执行的背景命令\npython -m timeit &#39;test_cmd&#39;\npython -m timeit -s &#39;start_cmd&#39; &#39;test_cmd&#39;\n具体可以通过 python -m timeit --help 进行查看timeit 模块的使用帮助","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596708806,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":87780,"ip_address":""},"score":296937,"extra":""}]},{"author":{"id":1362687,"avatar":"","nickname":"李梓铭","note":"","ucode":"FAA526C4665798","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":82063,"discussion_content":"一数组意味着其中的每个元素都是同一类型的数据，显然列表示可以多种数据类型并存的。虽然我也不知道list的内部实现，但感觉这些说是基于array似乎不妥。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1576316458,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1134884,"avatar":"https://static001.geekbang.org/account/avatar/00/11/51/24/60fa7332.jpg","nickname":"花间隐虎","note":"","ucode":"976D63774B28D3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1362687,"avatar":"","nickname":"李梓铭","note":"","ucode":"FAA526C4665798","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":313843,"discussion_content":"存储的只是指针，指针所指的数据类型可能不一样，但指针的长度就是8个字节","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1603098525,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":82063,"ip_address":""},"score":313843,"extra":""}]},{"author":{"id":1650748,"avatar":"https://static001.geekbang.org/account/avatar/00/19/30/3c/0668d6ae.jpg","nickname":"盘胧","note":"","ucode":"5386CC4C92ECC2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":252548,"discussion_content":"list是用链表？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588170509,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94774,"user_name":"Python高效编程","can_delete":false,"product_type":"c1","uid":1325271,"ip_address":"","ucode":"B12B5F43B4335E","user_header":"https://static001.geekbang.org/account/avatar/00/14/38/d7/de6832df.jpg","comment_is_top":false,"comment_ctime":1557893494,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"753177170294","product_id":100026901,"comment_content":"元素不需要改变时:<br>两三个元素，使用 tuple，元素多一点使用namedtuple。<br>元素需要改变时:<br>需要高效随机读取，使用list。需要关键字高效查找，采用 dict。去重，使用 set。大型数据节省空间，使用标准库 array。大型数据高效操作，使用 numpy.array。","like_count":176,"discussions":[{"author":{"id":2396911,"avatar":"https://static001.geekbang.org/account/avatar/00/24/92/ef/55102379.jpg","nickname":"李某人","note":"","ucode":"64977FC6D13D3E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338458,"discussion_content":"sa","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609295382,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1718654,"avatar":"","nickname":"Geek_79bae4","note":"","ucode":"346BA57103A60E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278264,"discussion_content":"课代表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591165885,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1784860,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELibyXd2xTKQEpSvfaU96viaya1XNlvlsAejsS567MMIckKwzdAbBemYJSE55rh3pI7XVcRZnQw4m8w/132","nickname":"Geek_c5ed16","note":"","ucode":"90AD108AA6BC62","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":89515,"discussion_content":"学习了，谢谢！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576756792,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94656,"user_name":"看，有只猪","can_delete":false,"product_type":"c1","uid":1137727,"ip_address":"","ucode":"F9BB302BC71CE8","user_header":"https://static001.geekbang.org/account/avatar/00/11/5c/3f/34e5c750.jpg","comment_is_top":false,"comment_ctime":1557879471,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"602853300911","product_id":100026901,"comment_content":"[]比list()更快，因为调用list函数有一定的开销，而[]却没有。<br>这个有点像C语言中的内联函数与函数的差异","like_count":141,"discussions":[{"author":{"id":2454232,"avatar":"https://static001.geekbang.org/account/avatar/00/25/72/d8/173744ae.jpg","nickname":"时间以北","note":"","ucode":"E1571F1B73D273","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351133,"discussion_content":"C++才有内联函数的说法吧\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614160040,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94778,"user_name":"布霆","can_delete":false,"product_type":"c1","uid":1525986,"ip_address":"","ucode":"D9C966DDA1ACA7","user_header":"https://static001.geekbang.org/account/avatar/00/17/48/e2/0a1dff73.jpg","comment_is_top":false,"comment_ctime":1557894844,"is_pvip":false,"replies":[{"id":"33912","content":"列表的over-allocate是在你加入了新元素之后解释器判断得出当前存储空间不够，给你分配额外的空间，因此<br>l=[], l.append(1), l.append(2), l.append(3)实际分配了4个元素的空间。但是l=[1, 2, 3]直接初始化列表，并没有增加元素的操作，因此只会分配3个元素的空间","user_name":"作者回复","comment_id":94778,"uid":"1259521","ip_address":"","utype":1,"ctime":1557906648,"user_name_real":"Jingxiao"}],"discussion_count":2,"race_medal":0,"score":"340860311228","product_id":100026901,"comment_content":"老师请问一下，为什么l = [1, 2, 3]消耗的空间为64字节，而l.append(1), l.append(2), l.append(3)消耗的空间为72字节，这不是相同的列表吗？","like_count":80,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450202,"discussion_content":"列表的over-allocate是在你加入了新元素之后解释器判断得出当前存储空间不够，给你分配额外的空间，因此\nl=[], l.append(1), l.append(2), l.append(3)实际分配了4个元素的空间。但是l=[1, 2, 3]直接初始化列表，并没有增加元素的操作，因此只会分配3个元素的空间","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1557906648,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2566739,"avatar":"https://static001.geekbang.org/account/avatar/00/27/2a/53/e59af8a9.jpg","nickname":"阿琴老师","note":"","ucode":"A6DE0EDD50B06C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381346,"discussion_content":"可以理解为增加额外空间的操作是在追加元素时触发，不是在初始化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625019776,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94738,"user_name":"adapt","can_delete":false,"product_type":"c1","uid":1237547,"ip_address":"","ucode":"A26DA1AF84A785","user_header":"https://static001.geekbang.org/account/avatar/00/12/e2/2b/3483d165.jpg","comment_is_top":false,"comment_ctime":1557887431,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"263550892487","product_id":100026901,"comment_content":"如果一个列表在元组中的话，其实这个元组是”可变”的，只是这个可变只是能改变该列表里的内容。  这一点作者没有讲到哦 。","like_count":62,"discussions":[{"author":{"id":1590957,"avatar":"https://static001.geekbang.org/account/avatar/00/18/46/ad/bc7626c4.jpg","nickname":"sundang","note":"","ucode":"74D951345EE676","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4285,"discussion_content":"tuple所谓的“不变”是说，tuple的每个元素，指向永远不变。即指向&#39;a&#39;，就不能改成指向&#39;b&#39;，指向一个list，就不能改成指向其他对象，但指向的这个list本身是可变的！（https://www.liaoxuefeng.com/wiki/1016959663602400/1017092876846880）","likes_number":31,"is_delete":false,"is_hidden":false,"ctime":1565274584,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1005618,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/58/32/535e5c3c.jpg","nickname":"mlbjay","note":"","ucode":"FB62EAB4568AFA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1590957,"avatar":"https://static001.geekbang.org/account/avatar/00/18/46/ad/bc7626c4.jpg","nickname":"sundang","note":"","ucode":"74D951345EE676","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6198,"discussion_content":"正解！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566781976,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4285,"ip_address":""},"score":6198,"extra":""},{"author":{"id":1134884,"avatar":"https://static001.geekbang.org/account/avatar/00/11/51/24/60fa7332.jpg","nickname":"花间隐虎","note":"","ucode":"976D63774B28D3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1590957,"avatar":"https://static001.geekbang.org/account/avatar/00/18/46/ad/bc7626c4.jpg","nickname":"sundang","note":"","ucode":"74D951345EE676","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":313834,"discussion_content":"正解！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603098081,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4285,"ip_address":""},"score":313834,"extra":""},{"author":{"id":1593251,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4f/a3/0e56b4e5.jpg","nickname":"doge","note":"","ucode":"9E2D4C8F9B4CBC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1590957,"avatar":"https://static001.geekbang.org/account/avatar/00/18/46/ad/bc7626c4.jpg","nickname":"sundang","note":"","ucode":"74D951345EE676","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385820,"discussion_content":"常量指针啊const type*๛ก(ｰ̀ωｰ́ก) ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627287685,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4285,"ip_address":""},"score":385820,"extra":""}]},{"author":{"id":1251148,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/4c/a32ef7d6.jpg","nickname":"牧儿","note":"","ucode":"DF72C2E3E5FC43","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":248492,"discussion_content":"这并不是说元组就能是“可变”的，元组中存列表存的是列表的地址，改变列表中的内容，元组中的列表地址是没有改变的。","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1587875958,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1134884,"avatar":"https://static001.geekbang.org/account/avatar/00/11/51/24/60fa7332.jpg","nickname":"花间隐虎","note":"","ucode":"976D63774B28D3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":313837,"discussion_content":"我好奇的是空列表&#39;[]&#39;占了40 byte，这里头都有些啥啊？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1603098188,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95497,"user_name":"converse✪","can_delete":false,"product_type":"c1","uid":1433812,"ip_address":"","ucode":"0CC4C24A6458B6","user_header":"https://static001.geekbang.org/account/avatar/00/15/e0/d4/bdd3ed27.jpg","comment_is_top":false,"comment_ctime":1558064800,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"224896364192","product_id":100026901,"comment_content":"针对可以随意嵌套进行总结：<br><br>- 列表嵌套列表：本质是列表，内部列表和外部列表的内容可以进行修改元素，插入，删除元素。也就是二维数组。<br>- 列表嵌套元组：本质是列表，所以可以对列表中除元组外的其他元素可以修改插入、删除。但元组中的内容不可以改变。<br>- 元组嵌套列表：本质是元组，元组中的任何元素不能进行改变，但是对于元素本身是列表的情况，可以对列表中的值进行修改。这是因为：列表对象是不变的，只是的列表中的内容进行变化。列表本来就是动态的。<br>- 元组嵌套元组：本质元组，元组中的元素还是元组。所以这种情况下，不能进行任何改变。也就是不可变的二维数组。","like_count":52},{"had_liked":false,"id":94700,"user_name":"对方正在输入中…","can_delete":false,"product_type":"c1","uid":1210596,"ip_address":"","ucode":"D40224951C57E1","user_header":"https://static001.geekbang.org/account/avatar/00/12/78/e4/7978869e.jpg","comment_is_top":false,"comment_ctime":1557883345,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"143291804113","product_id":100026901,"comment_content":"python -m timeit &#39;empty_list = list()&#39;<br>10000000 loops, best of 3: 0.0829 usec per loop<br><br>python -m timeit &#39;empty_list = []&#39;<br>10000000 loops, best of 3: 0.0218 usec per loop<br><br>python -m timeit &#39;empty_list = ()&#39;<br>100000000 loops, best of 3: 0.0126 usec per loop<br>测试结果，虽然直接创建元组初始化速度最快，但是由于要用list函数转一道反而不如直接创建列表的速度快。","like_count":33,"discussions":[{"author":{"id":1035013,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/cb/05/a8155440.jpg","nickname":"阿克木•寒苏哲•买买提•穆罕默德","note":"","ucode":"5483EEE6975C8E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375008,"discussion_content":"“虽然……但是……”用在这里不合适。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1621435073,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1813410,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKFHQ2kCcnwWKEBkJYGIYwuf6vrfPF0ORXX0ZXYOvFrudMQu0sLO221D68SHaGPCdeBRah8aKsCjg/132","nickname":"仓央嘉措","note":"","ucode":"A6455C747EDC0F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294590,"discussion_content":"list()创建的是列表","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1595936995,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1535891,"avatar":"https://static001.geekbang.org/account/avatar/00/17/6f/93/e5bcd0f4.jpg","nickname":"fahsa","note":"","ucode":"5ABBBEF0A6221D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581240,"discussion_content":"这个是在哪里测试的呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658657802,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95418,"user_name":"converse✪","can_delete":false,"product_type":"c1","uid":1433812,"ip_address":"","ucode":"0CC4C24A6458B6","user_header":"https://static001.geekbang.org/account/avatar/00/15/e0/d4/bdd3ed27.jpg","comment_is_top":false,"comment_ctime":1558054899,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"108932237299","product_id":100026901,"comment_content":"空list在申请空间时候，是40字节。当加入新元素后会额外多分配空间变成72字节。当加入4个元素后还是72字节。那么问题来了，初始化申请的40字节是什么？感觉一直没有用到？不是用于存储元素的么？","like_count":25,"discussions":[{"author":{"id":1221991,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a5/67/bf286335.jpg","nickname":"AllenGFLiu","note":"","ucode":"90FA8A619A2629","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5592,"discussion_content":"老师有说：事实上，由于列表是动态的，所以它需要存储指针，来指向对应的元素。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1566367908,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1184505,"avatar":"https://static001.geekbang.org/account/avatar/00/12/12/f9/7e6e3ac6.jpg","nickname":"Geek_04e22a","note":"","ucode":"B64FF12EA28BA6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":190508,"discussion_content":"When an empty list [] is created, no space for elements is allocated - this can be seen in PyList_New. 36 bytes is the amount of space required for the list data structure itself on a 32-bit machine. stackover说到空列表的内存应该是结构体占用的内存","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1582952503,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1813410,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKFHQ2kCcnwWKEBkJYGIYwuf6vrfPF0ORXX0ZXYOvFrudMQu0sLO221D68SHaGPCdeBRah8aKsCjg/132","nickname":"仓央嘉措","note":"","ucode":"A6455C747EDC0F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294591,"discussion_content":"32位和64位开销都是40吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595937170,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1453609,"avatar":"","nickname":"Geek__2ecb7d93cc04","note":"","ucode":"77A3791D0F28FB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":97422,"discussion_content":"开辟列表后的40字节不是用来存储元素的，本身可变的存储结构都需要一部分内部开销来记录一些特性，就像链表会有头尾指针一样的道理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577111713,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1645665,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/61/0ca1ca43.jpg","nickname":"蒋腾飞同学","note":"","ucode":"AF72D93DDAC536","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":19912,"discussion_content":"不是吧，L1=[1,2,3], T1=(1,2,3) 差16个字节，这16个字节是用来存指针和下标的，但是初始的40个字节不知道是干什么的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569237353,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94801,"user_name":"Geek_59f23e","can_delete":false,"product_type":"c1","uid":1513783,"ip_address":"","ucode":"A463C6EB7447FD","user_header":"https://static001.geekbang.org/account/avatar/00/17/19/37/e0a9bf99.jpg","comment_is_top":false,"comment_ctime":1557899777,"is_pvip":false,"replies":[{"id":"33897","content":"1. 区别主要在于list()是一个function call，Python的function call会创建stack，并且进行一系列参数检查的操作，比较expensive，反观[]是一个内置的C函数，可以直接被调用，因此效率高<br><br>2. 嗯嗯","user_name":"作者回复","comment_id":94801,"uid":"1259521","ip_address":"","utype":1,"ctime":1557904327,"user_name_real":"Jingxiao"}],"discussion_count":1,"race_medal":0,"score":"104637114881","product_id":100026901,"comment_content":"1、用list()方法构造一个空列表使用的是class list([iterable])的类型构造器，参数可以是一个iterable，如果没有给出参数，构造器将创建一个空列表[ ]，相比较而言多了一步class调用和参数判断，所以用 [ ] 直接构造一个空列表的方法速度更快，刚查的官方解释，不知道我理解的对不对。。。<br>2、敲代码的时候我一般元祖用来传参用的比较多，能用元祖的地方尽量不用列表，这样代码性能好些。","like_count":24,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450214,"discussion_content":"1. 区别主要在于list()是一个function call，Python的function call会创建stack，并且进行一系列参数检查的操作，比较expensive，反观[]是一个内置的C函数，可以直接被调用，因此效率高\n\n2. 嗯嗯","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557904327,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94712,"user_name":"kevinsu","can_delete":false,"product_type":"c1","uid":1078506,"ip_address":"","ucode":"BAD46B815D6A5C","user_header":"https://static001.geekbang.org/account/avatar/00/10/74/ea/10661bdc.jpg","comment_is_top":false,"comment_ctime":1557884374,"is_pvip":false,"replies":[{"id":"33905","content":"这样可以，但是不是很准确，尤其对于简单并且运行速度很快的代码块，建议用timeit。<br>因为程序中还有很多因素会影响计算的时间，比如垃圾回收机制。使用timeit会自动关掉垃圾回收机制，让程序的运行更加独立，时间计算更加准确。","user_name":"作者回复","comment_id":94712,"uid":"1259521","ip_address":"","utype":1,"ctime":1557905176,"user_name_real":"Jingxiao"}],"discussion_count":3,"race_medal":0,"score":"78867295702","product_id":100026901,"comment_content":"可以这样比较吗？老师<br>import time<br>time1 = time.clock()<br>empty_list = list()<br>time2 = time.clock()<br>diff_time = time2 - time1<br>print (diff_time)<br><br>import time<br>time1 = time.clock()<br>empty_list = []<br>time2 = time.clock()<br>diff_time = time2 - time1<br>print (diff_time)","like_count":18,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450179,"discussion_content":"这样可以，但是不是很准确，尤其对于简单并且运行速度很快的代码块，建议用timeit。\n因为程序中还有很多因素会影响计算的时间，比如垃圾回收机制。使用timeit会自动关掉垃圾回收机制，让程序的运行更加独立，时间计算更加准确。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557905176,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1519200,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2e/60/4fa1f3bd.jpg","nickname":"rs勿忘初心","note":"","ucode":"557D1ECD757195","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":397445,"discussion_content":"mark + 1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632622488,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1593251,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4f/a3/0e56b4e5.jpg","nickname":"doge","note":"","ucode":"9E2D4C8F9B4CBC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385830,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627290240,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97558,"user_name":"小豹子","can_delete":false,"product_type":"c1","uid":1346267,"ip_address":"","ucode":"972F3E6BF0FDEA","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/db/76ab84c6.jpg","comment_is_top":false,"comment_ctime":1558695138,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"48803335394","product_id":100026901,"comment_content":"看了很多留言，大部分都在讲的不对，两个时间都一样。我恰好windows，linux，jupyter都测试了下，windows和jupyter的确是时间一样，之后linux才是老师说的情况。","like_count":11},{"had_liked":false,"id":94916,"user_name":"汤尼房","can_delete":false,"product_type":"c1","uid":1100996,"ip_address":"","ucode":"A4D961DD9C2F74","user_header":"https://static001.geekbang.org/account/avatar/00/10/cc/c4/5ac16f31.jpg","comment_is_top":false,"comment_ctime":1557923134,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"48802563390","product_id":100026901,"comment_content":"景老师，一直在想一个tuple元组如何拥有大数据量的元素，比如千万个元素、上亿个元素。因为tuple是静态的，不能添加元素，于是今天实践将[i for i in xrange(1000000000)]给初始化成tuple，发现初始化的过程相当耗时间，之前也希望利用tuple的性能比list好的优点，想把含有大数据量的list给转换成tuple来处理，今天实践发现初始化过程非常耗时间，请问景老师，平时在工作过程中遇到的含有大数据量个元素的tuple是如何形成的呢？","like_count":11,"discussions":[{"author":{"id":1746831,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/a7/8f/670756ee.jpg","nickname":"longsang","note":"","ucode":"27AE9C7EBB24A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":286666,"discussion_content":"大数据量应该不采用python的内置数据类型，可以用numpy，底层是用c写的，速度更快","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1593258861,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97134,"user_name":"高权","can_delete":false,"product_type":"c1","uid":1306239,"ip_address":"","ucode":"F27E5BBC66CF9C","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIywDoPiaztn3MnZuAgseN1jutRnrGaM14mKEl8mjDhibomce7dfoickNuX5fxqKDbZiaz3o3hJKYy0WA/132","comment_is_top":false,"comment_ctime":1558594496,"is_pvip":true,"discussion_count":2,"race_medal":0,"score":"44508267456","product_id":100026901,"comment_content":"为什么我测试的元组和列表的初始化时间一样呢？","like_count":10,"discussions":[{"author":{"id":2002645,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/8e/d5/64d8484c.jpg","nickname":"kalos","note":"","ucode":"4A711F24125E7E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":281270,"discussion_content":"我的也是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591703805,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1610960,"avatar":"https://static001.geekbang.org/account/avatar/00/18/94/d0/851a8a37.jpg","nickname":"🙈🇨🇳LJ","note":"","ucode":"9B62541437AC7E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":173455,"discussion_content":"我也是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581855491,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94859,"user_name":"kevinsu","can_delete":false,"product_type":"c1","uid":1078506,"ip_address":"","ucode":"BAD46B815D6A5C","user_header":"https://static001.geekbang.org/account/avatar/00/10/74/ea/10661bdc.jpg","comment_is_top":false,"comment_ctime":1557912046,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"35917650414","product_id":100026901,"comment_content":"import timeit<br>print(timeit.timeit(&#39;list(x for x in range(1,1000))&#39;,number=10000))<br>print(timeit.timeit(&#39;[x for x in range(1,1000)]&#39;,number=10000))<br>0.6829426919994148<br>0.36637431800045306<br>看着是[]更快些，😄","like_count":8,"discussions":[{"author":{"id":1527721,"avatar":"https://static001.geekbang.org/account/avatar/00/17/4f/a9/0279cee8.jpg","nickname":"星星在线","note":"","ucode":"C2EE7A8CB54E20","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1990,"discussion_content":"list(x for x in range(1,1000))中间的x for x in range(1,1000)这次循环去掉，可以得到同样结果，对比结果看着更直白一点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563164524,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1263561,"avatar":"https://static001.geekbang.org/account/avatar/00/13/47/c9/0ff8bc5f.jpg","nickname":"程运来","note":"","ucode":"8A09A42770C31D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1299,"discussion_content":"你这个不能这么看，x for x in range(1, 1000) 是生成了一个生成器。 list() 转生成器本身又循环了一次。一共循环了两次。个人理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562546473,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94833,"user_name":"Jared","can_delete":false,"product_type":"c1","uid":1526354,"ip_address":"","ucode":"37ADB10F2A64BB","user_header":"https://static001.geekbang.org/account/avatar/00/17/4a/52/4ccf9b09.jpg","comment_is_top":false,"comment_ctime":1557906635,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"35917645003","product_id":100026901,"comment_content":"老师真帅。","like_count":9},{"had_liked":false,"id":94807,"user_name":"Geek_59f23e","can_delete":false,"product_type":"c1","uid":1513783,"ip_address":"","ucode":"A463C6EB7447FD","user_header":"https://static001.geekbang.org/account/avatar/00/17/19/37/e0a9bf99.jpg","comment_is_top":false,"comment_ctime":1557900639,"is_pvip":false,"replies":[{"id":"33917","content":"你的命令有些奇怪。在程序里也应该是timeit(...)，试过用文中的命令测试的结果吗？<br><br>另外你python的版本和运行环境的截图能贴一下吗？","user_name":"作者回复","comment_id":94807,"uid":"1259521","ip_address":"","utype":1,"ctime":1557907034,"user_name_real":"Jingxiao"}],"discussion_count":3,"race_medal":0,"score":"35917639007","product_id":100026901,"comment_content":"实测被打脸了😂函数构建和直接构建一个空列表或数组速度上并没有什么差别，有时前者快些，有时后者快些。。。<br><br>In [1]: timeit &#39;lst1 = []&#39;<br>9.86 ns ± 0.721 ns per loop (mean ± std. dev. of 7 runs, 100000000 loops each)<br><br>In [2]: timeit &#39;lst2 = list()&#39;<br>9.82 ns ± 0.43 ns per loop (mean ± std. dev. of 7 runs, 100000000 loops each)<br><br>In [3]: timeit &#39;tup1 = (,)&#39;<br>9.59 ns ± 0.294 ns per loop (mean ± std. dev. of 7 runs, 100000000 loops each)<br><br>In [4]: timeit &#39;tup2 = tuple()&#39;<br>9.75 ns ± 0.464 ns per loop (mean ± std. dev. of 7 runs, 100000000 loops each)","like_count":8,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450217,"discussion_content":"你的命令有些奇怪。在程序里也应该是timeit(...)，试过用文中的命令测试的结果吗？\n\n另外你python的版本和运行环境的截图能贴一下吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557907034,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1071316,"avatar":"https://static001.geekbang.org/account/avatar/00/10/58/d4/c52f9f6d.jpg","nickname":"芝士老爹","note":"","ucode":"5F2935967574D0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2933,"discussion_content":"jupyter下面确实差距不大，猜测和某些jupyter的运行机制有关，比如一些缓存啥的。\n在终端下面运行结果和文中一致。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1564042375,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1636568,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM6iagw7ct4ca3niaSEFNicu2wy2KuCibO6eiaRzoRGJb50WTrbkKQib9mTArnTr8jJUazO9O2ibLZNfjjl35cfCHkBPs7N/132","nickname":"Geek_f39659","note":"","ucode":"2206A8C590423C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5449,"discussion_content":"jupiter 下显示 The slowest run took 91.30 times longer than the fastest. This could mean that an intermediate result is being cached.\n100000000 loops, best of 3: 13.1 ns per loop \n看起来是结果被缓存了，所以测速结果不准。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566280550,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139665,"user_name":"Mr.Chen","can_delete":false,"product_type":"c1","uid":1559182,"ip_address":"","ucode":"2AF23AAF147037","user_header":"https://static001.geekbang.org/account/avatar/00/17/ca/8e/4b1d7063.jpg","comment_is_top":false,"comment_ctime":1570701009,"is_pvip":false,"replies":[{"id":"54717","content":"内部的排列是有序的，比如你遍历一遍并打印，其顺序应该和你插入元素的顺序一样","user_name":"作者回复","comment_id":139665,"uid":"1259521","ip_address":"","utype":1,"ctime":1571208873,"user_name_real":"Jingxiao"}],"discussion_count":1,"race_medal":0,"score":"31635472081","product_id":100026901,"comment_content":"老师，“有序”应该怎么理解。","like_count":8,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470043,"discussion_content":"内部的排列是有序的，比如你遍历一遍并打印，其顺序应该和你插入元素的顺序一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571208873,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94843,"user_name":"刘朋","can_delete":false,"product_type":"c1","uid":1075141,"ip_address":"","ucode":"7B7B8E4776C22E","user_header":"https://static001.geekbang.org/account/avatar/00/10/67/c5/63b09189.jpg","comment_is_top":false,"comment_ctime":1557908787,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"31622679859","product_id":100026901,"comment_content":"import timeit<br>timeit.timeit(&#39;a=list()&#39;,number=10000)  返回 0.0006914390251040459<br>timeit.timeit(&#39;a=[]&#39;,number=10000)      返回 0.00018375739455223083<br>timeit.timeit(&#39;a=()&#39;,number=10000)      返回 0.00010870955884456635","like_count":7,"discussions":[{"author":{"id":2143115,"avatar":"https://static001.geekbang.org/account/avatar/00/20/b3/8b/3f47b23b.jpg","nickname":"再见孙悟空","note":"","ucode":"70AAA76ADEF7B1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":564602,"discussion_content":"啥配置呀，跑的这么快的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650287230,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94933,"user_name":"安亚明","can_delete":false,"product_type":"c1","uid":1093777,"ip_address":"","ucode":"3FC29E2530D438","user_header":"https://static001.geekbang.org/account/avatar/00/10/b0/91/21317f1d.jpg","comment_is_top":false,"comment_ctime":1557925373,"is_pvip":false,"replies":[{"id":"33963","content":"因为这是最基本的数据结构啊，学语言肯定得先了解数据结构啊","user_name":"作者回复","comment_id":94933,"uid":"1259521","ip_address":"","utype":1,"ctime":1557948656,"user_name_real":"Jingxiao"}],"discussion_count":1,"race_medal":0,"score":"27327729149","product_id":100026901,"comment_content":"老师，PYTHON学校为何要从元组和列表开始。","like_count":6,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450263,"discussion_content":"因为这是最基本的数据结构啊，学语言肯定得先了解数据结构啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557948656,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":128967,"user_name":"播州新府","can_delete":false,"product_type":"c1","uid":1628914,"ip_address":"","ucode":"6CA4BA53C885C3","user_header":"https://static001.geekbang.org/account/avatar/00/18/da/f2/6aadb378.jpg","comment_is_top":false,"comment_ctime":1566997165,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23041833645","product_id":100026901,"comment_content":"[]比list()更快，因为调用list函数有一定的开销，而[]却没有。<br>这个有点像C语言中的内联函数与函数的差异(from 看 有只猪)","like_count":6},{"had_liked":false,"id":97892,"user_name":"小豹子","can_delete":false,"product_type":"c1","uid":1346267,"ip_address":"","ucode":"972F3E6BF0FDEA","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/db/76ab84c6.jpg","comment_is_top":false,"comment_ctime":1558834965,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"23033671445","product_id":100026901,"comment_content":"之前用list，dict，set，tuple，都是只知道这是什么类型，怎么用，从来也没有想过这些数据结构是如何存储的，突然想搞明白这些事的时候，网上却很难找到有意义的文章，老师能推荐相关书籍吗？","like_count":5,"discussions":[{"author":{"id":1934625,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/85/21/5c5714c7.jpg","nickname":"DA.Lin","note":"","ucode":"415E6819942423","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339687,"discussion_content":"python源码剖析","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1609758085,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94841,"user_name":"lizhaochao","can_delete":false,"product_type":"c1","uid":1170705,"ip_address":"","ucode":"1357C60BB567B7","user_header":"https://static001.geekbang.org/account/avatar/00/11/dd/11/04ebee55.jpg","comment_is_top":false,"comment_ctime":1557908549,"is_pvip":false,"replies":[{"id":"34016","content":"1. 是的<br>2. 你可以自己overallocate的pattern一般是0, 4, 8, 16, 25, 35, 46, 58, 72, 88, ...","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1557993816,"ip_address":"","comment_id":94841,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23032745029","product_id":100026901,"comment_content":"list的内部实现是over-allocate array的形式<br>1. 那在需要扩容的时候，是不是也是需要重新开辟一块连续的内存空间呢？<br>2. 每次扩容都会预留一些空间，这里面有没有公式，公式是什么呢","like_count":5,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450230,"discussion_content":"1. 是的\n2. 你可以自己overallocate的pattern一般是0, 4, 8, 16, 25, 35, 46, 58, 72, 88, ...","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557993816,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94753,"user_name":"........","can_delete":false,"product_type":"c1","uid":1236198,"ip_address":"","ucode":"D54E7F428E7F49","user_header":"https://static001.geekbang.org/account/avatar/00/12/dc/e6/ea4b2c10.jpg","comment_is_top":false,"comment_ctime":1557889526,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23032726006","product_id":100026901,"comment_content":"1. 测试了一下， []快于list()<br>2. 一般在key中使用元祖，其他情况多数都使用列表","like_count":5},{"had_liked":false,"id":129192,"user_name":"蒋腾飞同学","can_delete":false,"product_type":"c1","uid":1645665,"ip_address":"","ucode":"AF72D93DDAC536","user_header":"https://static001.geekbang.org/account/avatar/00/19/1c/61/0ca1ca43.jpg","comment_is_top":false,"comment_ctime":1567060520,"is_pvip":false,"replies":[{"id":"48138","content":"感谢你的认可","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1567123253,"ip_address":"","comment_id":129192,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18746929704","product_id":100026901,"comment_content":"非常涨姿势，一般的课程肯定不会有的～","like_count":4,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465324,"discussion_content":"感谢你的认可","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567123253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101900,"user_name":"六麦","can_delete":false,"product_type":"c1","uid":1538413,"ip_address":"","ucode":"C173A6265EC1BF","user_header":"https://static001.geekbang.org/account/avatar/00/17/79/6d/e641a526.jpg","comment_is_top":false,"comment_ctime":1560044666,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"18739913850","product_id":100026901,"comment_content":"文中：reversed() 和 sorted() 同样表示对列表&#47; 元组进行倒转和排序，返回一个倒转后或者排好序的新的列表 &#47; 元组。但是，sorted() 返回的是list，不是tuple。是不是需要转换才能得到元祖，而不是直接返回元祖？","like_count":4,"discussions":[{"author":{"id":1385569,"avatar":"https://static001.geekbang.org/account/avatar/00/15/24/61/ab88f481.jpg","nickname":"Maker","note":"","ucode":"1193AA6126A596","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":12956,"discussion_content":"测试了一下reversed()，返回的是reversed对象类型，需要通过list转换才能得到列表；sorted()返回的是list；如果要保留原有的数据类型应该需要手动转换一下","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1568619339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94650,"user_name":"許敲敲","can_delete":false,"product_type":"c1","uid":1046681,"ip_address":"","ucode":"6486466820E7BF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/99/8e760987.jpg","comment_is_top":false,"comment_ctime":1557879196,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"18737748380","product_id":100026901,"comment_content":"思考题 试了运行timeit，发现在我电脑上两个创建列表的时间一样，所以答案是什么呢？","like_count":4,"discussions":[{"author":{"id":1782781,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/33/fd/1169c0f8.jpg","nickname":"Jack","note":"","ucode":"33C2A27D2F4284","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":346461,"discussion_content":"在linux系统下不一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611968485,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94973,"user_name":"不瘦到140不改名","can_delete":false,"product_type":"c1","uid":1528298,"ip_address":"","ucode":"31DA063A17FC27","user_header":"https://static001.geekbang.org/account/avatar/00/17/51/ea/2ce84d5a.jpg","comment_is_top":false,"comment_ctime":1557932996,"is_pvip":false,"replies":[{"id":"34019","content":"文中有提到。元祖是直接存储的元素，但是列表存储的是指向元素的指针，这就是你说的剩余的8字节。可以参考源码：<br>列表：https:&#47;&#47;github.com&#47;python&#47;cpython&#47;blob&#47;3.7&#47;Include&#47;listobject.h<br>元祖：https:&#47;&#47;github.com&#47;python&#47;cpython&#47;blob&#47;3.7&#47;Include&#47;tupleobject.h","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1557994347,"ip_address":"","comment_id":94973,"utype":1}],"discussion_count":6,"race_medal":0,"score":"14442834884","product_id":100026901,"comment_content":"print([].__sizeof__())  # 40<br>print(().__sizeof__())  # 24<br>老师  我想问一下，列表比元组多了16个字节，由于列表是可变的，所以需要分配8字节来存储已经分配的长度大小，那剩余的8字节干什么了呢？","like_count":3,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450280,"discussion_content":"文中有提到。元祖是直接存储的元素，但是列表存储的是指向元素的指针，这就是你说的剩余的8字节。可以参考源码：\n列表：https://github.com/python/cpython/blob/3.7/Include/listobject.h\n元祖：https://github.com/python/cpython/blob/3.7/Include/tupleobject.h","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557994347,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1260026,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/fa/a7edbc72.jpg","nickname":"安排","note":"","ucode":"F78CFA9624CAEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41201,"discussion_content":"看了下源码，回答里的元素指的应该是指针，也就是一级指针，直接指向元素。list里面是二级指针，先指向一块内存，内存中再存放指向元素的指针。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1572363219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1650748,"avatar":"https://static001.geekbang.org/account/avatar/00/19/30/3c/0668d6ae.jpg","nickname":"盘胧","note":"","ucode":"5386CC4C92ECC2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1260026,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/fa/a7edbc72.jpg","nickname":"安排","note":"","ucode":"F78CFA9624CAEF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":252564,"discussion_content":"我觉得这个对的。感觉老师有时候解释的太笼统了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588170844,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":41201,"ip_address":""},"score":252564,"extra":""}]},{"author":{"id":1260026,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/fa/a7edbc72.jpg","nickname":"安排","note":"","ucode":"F78CFA9624CAEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41199,"discussion_content":"元组是直接存储的元素？这个解释不太对吧，那如果元素类型不同时，怎么直接存储元素呢？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1572362962,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1051873,"avatar":"https://static001.geekbang.org/account/avatar/00/10/0c/e1/f663213e.jpg","nickname":"拾掇拾掇","note":"","ucode":"D775F374C2A1D3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1260026,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/fa/a7edbc72.jpg","nickname":"安排","note":"","ucode":"F78CFA9624CAEF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":166381,"discussion_content":"我猜是使用的链表吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581389071,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":41199,"ip_address":""},"score":166381,"extra":""}]},{"author":{"id":1260026,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/fa/a7edbc72.jpg","nickname":"安排","note":"","ucode":"F78CFA9624CAEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41209,"discussion_content":"从源码看，空list和空tuple只差8字节，tuple里面那个数组并不是柔性数组的用法，默认是有1个指针的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572363694,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94888,"user_name":"金子菇凉的铁粉小逗","can_delete":false,"product_type":"c1","uid":1000602,"ip_address":"","ucode":"6A2C601F6EEBB5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/44/9a/c03bea17.jpg","comment_is_top":false,"comment_ctime":1557915833,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14442817721","product_id":100026901,"comment_content":"元组更像底层数组，列表更像数组的封装！","like_count":3},{"had_liked":false,"id":211038,"user_name":"Steve","can_delete":false,"product_type":"c1","uid":1072131,"ip_address":"","ucode":"9C4E9E62A79C3A","user_header":"https://static001.geekbang.org/account/avatar/00/10/5c/03/370ebbc8.jpg","comment_is_top":false,"comment_ctime":1587885578,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10177820170","product_id":100026901,"comment_content":"list()方式可以从字符串创建列表：<br>list_1 = list(&#39;hello&#39;)<br>此时list_1的值是：[&#39;h&#39;, &#39;e&#39;, &#39;l&#39;, &#39;l&#39;, &#39;o&#39;].<br>如果换成第二种方式：<br>list_2 = [&#39;hello&#39;]<br>此时list_2的值是：[&#39;hello&#39;]","like_count":2},{"had_liked":false,"id":109014,"user_name":"Michael","can_delete":false,"product_type":"c1","uid":1118976,"ip_address":"","ucode":"35F4FFAC4A4B15","user_header":"https://static001.geekbang.org/account/avatar/00/11/13/00/a4a2065f.jpg","comment_is_top":false,"comment_ctime":1561948833,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10151883425","product_id":100026901,"comment_content":"空列表占用了 40 个字节，都用来存储了什么，老师能讲下么，Python 源代码看不懂，还有下面的为什么会这样？<br><br>Python 3.6.4 (v3.6.4:d48ecebad5, Dec 18 2017, 21:07:28)<br>[GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin<br><br>&gt;&gt;&gt; l = []<br>&gt;&gt;&gt; l.__sizeof__()<br>40<br>&gt;&gt;&gt; sys.getsizeof(l)<br>64<br><br>","like_count":2},{"had_liked":false,"id":103072,"user_name":"　","can_delete":false,"product_type":"c1","uid":1285138,"ip_address":"","ucode":"DA2B6E94E06207","user_header":"https://static001.geekbang.org/account/avatar/00/13/9c/12/664dde08.jpg","comment_is_top":false,"comment_ctime":1560381460,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10150316052","product_id":100026901,"comment_content":"&quot;由于列表是动态的，需要存储指针，来指向对应的元素&quot;，因此这里多了8字节，老师能对这个稍微详细解释下吗？没太明白","like_count":2},{"had_liked":false,"id":95174,"user_name":"武林秀才","can_delete":false,"product_type":"c1","uid":1283182,"ip_address":"","ucode":"5B5E9949FE0DCF","user_header":"https://static001.geekbang.org/account/avatar/00/13/94/6e/d564a10a.jpg","comment_is_top":false,"comment_ctime":1557978207,"is_pvip":false,"replies":[{"id":"34007","content":"是的。但是我这里只是以列表和元祖为例，迭代器的概念第二大章才讲到","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1557992491,"ip_address":"","comment_id":95174,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10147912799","product_id":100026901,"comment_content":"reversed()返回的是一个反转的迭代器，不是返回倒排的列表或元组。","like_count":2,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450353,"discussion_content":"是的。但是我这里只是以列表和元祖为例，迭代器的概念第二大章才讲到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557992491,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95048,"user_name":"enjoylearning","can_delete":false,"product_type":"c1","uid":1000237,"ip_address":"","ucode":"DCAF8538DEA277","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/2d/af86d73f.jpg","comment_is_top":false,"comment_ctime":1557964340,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10147898932","product_id":100026901,"comment_content":"带上括号就变为函数调用，所以会耗费时间","like_count":2},{"had_liked":false,"id":95034,"user_name":"呼啦啦","can_delete":false,"product_type":"c1","uid":1534175,"ip_address":"","ucode":"530346C41D46C6","user_header":"https://static001.geekbang.org/account/avatar/00/17/68/df/0f8a481c.jpg","comment_is_top":false,"comment_ctime":1557960045,"is_pvip":false,"replies":[{"id":"34011","content":"怀疑windows平台是不是加了什么限制，你放到linux或者mac上看看（或者用前面一讲的云端jupyter或者colab上试试）","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1557992731,"ip_address":"","comment_id":95034,"utype":1}],"discussion_count":6,"race_medal":0,"score":"10147894637","product_id":100026901,"comment_content":"老师，我测试了一下，好像只有0.1nsec秒之差。没有五倍之多，我是用python3.7测试的。<br>C:\\Users\\wuzhaoming&gt;python -m timeit &#39;x=(1,2,3,4,5,6)&#39;\r<br>50000000 loops, best of 5: 8.1 nsec per loop\r<br>\r<br>C:\\Users\\wuzhaoming&gt;python -m timeit &#39;x=[1,2,3,4,5,6]&#39;\r<br>50000000 loops, best of 5: 8.2 nsec per loop","like_count":2,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450307,"discussion_content":"怀疑windows平台是不是加了什么限制，你放到linux或者mac上看看（或者用前面一讲的云端jupyter或者colab上试试）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557992731,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1476450,"avatar":"https://static001.geekbang.org/account/avatar/00/16/87/62/f99b5b05.jpg","nickname":"曙光","note":"","ucode":"04D65BF7F19845","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369513,"discussion_content":"windows的测试结果元组和列表是一样的时间，但在wins安装的jupytert-lab测试，terminal测试结果差不多相差5倍。不知道内部具体原因，还是jupyter的测试环境和老师的环境接近","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619062051,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1764941,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/ee/4d/5d021e4c.jpg","nickname":"向左看齐","note":"","ucode":"2E0AC7D59AF85C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":224583,"discussion_content":"linux系统测试和老师的结果是一样的，感觉用linux做比较准确些，在查看这样细小的时间上","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586316731,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1097569,"avatar":"https://static001.geekbang.org/account/avatar/00/10/bf/61/6c3fbfc8.jpg","nickname":"亚楠村民威斯克","note":"","ucode":"4C6E13DBA8504D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":64033,"discussion_content":"± % python3 -m timeit &#39;x=[1,2,3,4,5,6]&#39;                                   !1449\n10000000 loops, best of 3: 0.0847 usec per loop\nMac测试，确实是 5 倍的差距，但我的为啥要慢呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574931341,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1097569,"avatar":"https://static001.geekbang.org/account/avatar/00/10/bf/61/6c3fbfc8.jpg","nickname":"亚楠村民威斯克","note":"","ucode":"4C6E13DBA8504D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":64032,"discussion_content":"± % python3 -m timeit &#39;x=(1,2,3,4,5,6)&#39;                                   !1447\n100000000 loops, best of 3: 0.0171 usec per loop","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574931291,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1021741,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/97/2d/8e4836f3.jpg","nickname":"Bonaparte","note":"","ucode":"27E9CEE38A30C3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48758,"discussion_content":"我也是Windows哎，我的不是一样的...","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573523927,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":341396,"user_name":"woJA1wCgAArFOluiYMpFX9ID7yM-LSjA","can_delete":false,"product_type":"c1","uid":2971650,"ip_address":"","ucode":"D81031B5FDA84F","user_header":"","comment_is_top":false,"comment_ctime":1649578676,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5944545972","product_id":100026901,"comment_content":"l = [1,2,3]<br>print(l.__sizeof__())<br>这个是104byte，不是64byte，文章上面是64byte","like_count":1},{"had_liked":false,"id":223756,"user_name":"牺牲","can_delete":false,"product_type":"c1","uid":1619402,"ip_address":"","ucode":"5780E562A43494","user_header":"https://static001.geekbang.org/account/avatar/00/18/b5/ca/bba4d696.jpg","comment_is_top":false,"comment_ctime":1591174895,"is_pvip":false,"replies":[{"id":"84302","content":"因为比如对于列表l[x:y]中的y是开区间，即返回列表中从x到y-1的子列表，这是语法规定，记住就行","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1592775519,"ip_address":"","comment_id":223756,"utype":1}],"discussion_count":2,"race_medal":2,"score":"5886142191","product_id":100026901,"comment_content":"l[1:3] # 返回列表中索引从1到2的子列表<br>为什么1:3是返回1到2呢","like_count":1,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497232,"discussion_content":"因为比如对于列表l[x:y]中的y是开区间，即返回列表中从x到y-1的子列表，这是语法规定，记住就行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592775519,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1619402,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b5/ca/bba4d696.jpg","nickname":"牺牲","note":"","ucode":"5780E562A43494","race_medal":2,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278596,"discussion_content":"我查了查startindex和endindex了解了，endindex不包含该index指向值。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591198480,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":223527,"user_name":"Joshua","can_delete":false,"product_type":"c1","uid":1348231,"ip_address":"","ucode":"6823D5F0EC5D10","user_header":"https://static001.geekbang.org/account/avatar/00/14/92/87/15931e41.jpg","comment_is_top":false,"comment_ctime":1591108592,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5886075888","product_id":100026901,"comment_content":"2.基本上都会选择list","like_count":1},{"had_liked":false,"id":206275,"user_name":"杨红Paul","can_delete":false,"product_type":"c1","uid":1032003,"ip_address":"","ucode":"EA23530AD4EF08","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bf/43/53a75a92.jpg","comment_is_top":false,"comment_ctime":1586832766,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5881800062","product_id":100026901,"comment_content":"列表和元组的异同：<br>1 相同之处：都是有序数列（有索引），可以存放任意类型的数据。<br>2 不同之处：列表是可变的（增加减少改变），元组是不可变的。所占的内存不同，列表所占内存多，元组占的少。存储的数据和数量是变化的，使用列表。储存的数据是不变的，确定的，使用元组。","like_count":1},{"had_liked":false,"id":202819,"user_name":"LiuJ","can_delete":false,"product_type":"c1","uid":1937496,"ip_address":"","ucode":"EE4896E8E96B95","user_header":"https://static001.geekbang.org/account/avatar/00/1d/90/58/e2ab3dfe.jpg","comment_is_top":false,"comment_ctime":1586073677,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"5881040973","product_id":100026901,"comment_content":"老师你好，对于 “由于列表是动态的，所以它需要存储指针，来指向对应的元素（上述例子中，对于 int 型，8 字节）。” 这句话有两点疑惑：<br>1、列表是通过数组来实现的，那么直接通过索引来访问对应元素就可以了，这里所说的指针是用来指向什么元素的，作用是什么；<br>2、对于64位操作系统来说，指针大小分配的不都是 8 个字节吗，这里说 “对于 int 型，8 字节” 是有什么其它含义吗。","like_count":1,"discussions":[{"author":{"id":1937496,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/90/58/e2ab3dfe.jpg","nickname":"LiuJ","note":"","ucode":"EE4896E8E96B95","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":234927,"discussion_content":"自己来回答吧：\n查看，listobject. h 和 tupleobject. h 中的结构体，发现 list 只比 tuple   多一个int64的 allocated ，也就是8个字节，那么剩下的 8 个字节哪去了呢？\n查看 listobject. c  就会发现 __sizeof__()  的实现中返回的是结构体本身的大小，再加上一个指针。\n那么这个指针是来干什么的呢？\n因为 list 是可变类型的，要保证在原有地址的基础上再添加元素，需要通过一个指针来指向list 中的所有元素。而 tuple 是不可变的，所以里面直接存储的是每个元素的指针。\n\n","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1587006182,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1695261,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/9doFL0ZzcWf5gkQ10cHsOziamhHicjq1k2KHvJibkicBjHsKyvf9jMepvdgLFiadiaI8PScf73Pl7QK3ibp6MYicWn9BuQ/132","nickname":"Geek_6df977","note":"","ucode":"4F26A42C9BD901","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1937496,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/90/58/e2ab3dfe.jpg","nickname":"LiuJ","note":"","ucode":"EE4896E8E96B95","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378141,"discussion_content":"但是我发现只有1个元素的时候是多出20字节，大神可以解释一下吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623065860,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":234927,"ip_address":""},"score":378141,"extra":""},{"author":{"id":1695261,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/9doFL0ZzcWf5gkQ10cHsOziamhHicjq1k2KHvJibkicBjHsKyvf9jMepvdgLFiadiaI8PScf73Pl7QK3ibp6MYicWn9BuQ/132","nickname":"Geek_6df977","note":"","ucode":"4F26A42C9BD901","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1937496,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/90/58/e2ab3dfe.jpg","nickname":"LiuJ","note":"","ucode":"EE4896E8E96B95","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378142,"discussion_content":"l = [1]\nprint(l.__sizeof__())\n# 48\ntup = (1)\nprint(tup.__sizeof__())\n# 28","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623065890,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":234927,"ip_address":""},"score":378142,"extra":""}]},{"author":{"id":1937496,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/90/58/e2ab3dfe.jpg","nickname":"LiuJ","note":"","ucode":"EE4896E8E96B95","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":234948,"discussion_content":"对于 64位 的Python解释器，指针分配的是 8 个字节。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587007680,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123569,"user_name":"celia  li","can_delete":false,"product_type":"c1","uid":1545801,"ip_address":"","ucode":"1092531136B01E","user_header":"https://static001.geekbang.org/account/avatar/00/17/96/49/289b59ae.jpg","comment_is_top":false,"comment_ctime":1565704286,"is_pvip":false,"replies":[{"id":"48144","content":"来得及","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1567123628,"ip_address":"","comment_id":123569,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5860671582","product_id":100026901,"comment_content":"38岁了，还来得及学吗？","like_count":1,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462730,"discussion_content":"来得及","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567123628,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104262,"user_name":"Luove","can_delete":false,"product_type":"c1","uid":1545251,"ip_address":"","ucode":"73CD4D2C731B47","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7adYZoHGic7ZS6cp9OmBjh1C4ajCCpciblR3ib3jDtiaKrFdbT9J7sl2B9eNoCQicfx5QWgVVZQB74pfQ/132","comment_is_top":false,"comment_ctime":1560701197,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5855668493","product_id":100026901,"comment_content":"(base) bogon:~ alex$ python3 -m timeit &#39;l=[]&#39;<br>20000000 loops, best of 5: 17.2 nsec per loop<br>(base) bogon:~ alex$ python3 -m timeit &#39;l=list()&#39;<br>5000000 loops, best of 5: 60.2 nsec per loop<br>(base) bogon:~ alex$ python3 -m timeit &#39;l=tuple()&#39;<br>5000000 loops, best of 5: 40.3 nsec per loop<br>(base) bogon:~ alex$ python3 -m timeit &#39;l=()&#39;<br>20000000 loops, best of 5: 10 nsec per loop<br>从执行时间效率来看，() &gt; [] &gt; tuple() &gt; list()，学习时间不是很久，个人list用的比较多","like_count":1},{"had_liked":false,"id":98076,"user_name":"王者归来","can_delete":false,"product_type":"c1","uid":1349051,"ip_address":"","ucode":"7518431E647410","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Dyic3CxSFwI4wsNTia2UzqaQL2pENLp8rRkNgBaCzr82BSMibegfnfYQbTCYOMXicZymXAqIk8zf1neUFeicmyxnFXw/132","comment_is_top":false,"comment_ctime":1558892800,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5853860096","product_id":100026901,"comment_content":"list = [1, 2, 3, 4]<br>l[1:3] # 返回列表中索引从 1 到 2 的子列表<br>[2, 3]<br><br>l书写有误吧？应该是list<br>","like_count":1,"discussions":[{"author":{"id":1525828,"avatar":"","nickname":"Geek_鱼","note":"","ucode":"38517BA2598458","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":79,"discussion_content":"没错 看到你的评论，我还特地测试了一下 233","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561085539,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95320,"user_name":"GLADIATOR","can_delete":false,"product_type":"c1","uid":1448564,"ip_address":"","ucode":"6FE14E0BCD6240","user_header":"https://static001.geekbang.org/account/avatar/00/16/1a/74/8f7f8786.jpg","comment_is_top":false,"comment_ctime":1558019064,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"5852986360","product_id":100026901,"comment_content":"老师，您说列表和元组是有序的数据集合，这个“有序”怎么理解？list=[3,2,1,10,11,1,2]这个列表何来有序？","like_count":1,"discussions":[{"author":{"id":1590957,"avatar":"https://static001.geekbang.org/account/avatar/00/18/46/ad/bc7626c4.jpg","nickname":"sundang","note":"","ucode":"74D951345EE676","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4286,"discussion_content":"列表和元组的有序性应该体现在索引上，你可以通过索引来获取相应的元素，而索引是从0递增的，我是这么理解的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1565275581,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1026724,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/a4/a1111483.jpg","nickname":"温柔的贪婪","note":"","ucode":"BA2BCFDC8FDE5E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285208,"discussion_content":"这里的“有序”与“排序”是不一样的。“有序”就像排队一样，来得早位置就靠前，通常位置不会变化。而“排序”是指将列表中的元素，按值的大小、字母顺序或其他方式进行排列。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592784419,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1764941,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/ee/4d/5d021e4c.jpg","nickname":"向左看齐","note":"","ucode":"2E0AC7D59AF85C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":224592,"discussion_content":"特意翻看了老师在上边的回答：内部的排列是有序的，比如你遍历一遍并打印，其顺序应该和你插入元素的顺序一样。对于list我的理解是指针（由于列表是动态的，所以它需要存储指针，来指向对应的元素），tup的理解是索引。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586317413,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95241,"user_name":"lizhaochao","can_delete":false,"product_type":"c1","uid":1170705,"ip_address":"","ucode":"1357C60BB567B7","user_header":"https://static001.geekbang.org/account/avatar/00/11/dd/11/04ebee55.jpg","comment_is_top":false,"comment_ctime":1557995275,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5852962571","product_id":100026901,"comment_content":"list存的是元素的指针，那么<br>1. 存指针的地方是array吗<br>2. 存元素的地方也是array吗","like_count":1},{"had_liked":false,"id":94890,"user_name":"Danpier","can_delete":false,"product_type":"c1","uid":1463474,"ip_address":"","ucode":"11E208FDE34961","user_header":"https://static001.geekbang.org/account/avatar/00/16/54/b2/5ea0b709.jpg","comment_is_top":false,"comment_ctime":1557916358,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5852883654","product_id":100026901,"comment_content":"&gt;&gt;&gt; l=list()<br>&gt;&gt;&gt; l.__sizeof__()<br>20<br>&gt;&gt;&gt; l.append(1)<br>&gt;&gt;&gt; l.__sizeof__()<br>36<br>老师，我电脑实测结果都比你的空间分配少了一半，是因为32-bit系统的缘故吗？<br><br>还有，对于思考题，按老师的示例测试固定的loop次数（分别是100000、200000、500000、1000000、5000000）,两者的性能差别竟然不相上下（测试环境python2.7.1和3.7.1都一样），而进入交互模式才能明显测出[ ]比list( )高效，这个好奇怪？","like_count":1},{"had_liked":false,"id":94885,"user_name":"Geek_59f23e","can_delete":false,"product_type":"c1","uid":1513783,"ip_address":"","ucode":"A463C6EB7447FD","user_header":"https://static001.geekbang.org/account/avatar/00/17/19/37/e0a9bf99.jpg","comment_is_top":false,"comment_ctime":1557915286,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5852882582","product_id":100026901,"comment_content":"我用的是ipython测试timeit，元组生成速度是列表的5倍，这个测试结果是一致的。空列表和list方法差异不大，我感觉这两种生成方法应该被优化过了等价，运行环境如下:<br><br>Python 3.7.1 (default, Dec 10 2018, 22:54:23) [MSC v.1915 64 bit (AMD64)]<br>Type &#39;copyright&#39;, &#39;credits&#39; or &#39;license&#39; for more information<br>IPython 7.2.0 -- An enhanced Interactive Python. Type &#39;?&#39; for help.<br>","like_count":1},{"had_liked":false,"id":94721,"user_name":"kevinsu","can_delete":false,"product_type":"c1","uid":1078506,"ip_address":"","ucode":"BAD46B815D6A5C","user_header":"https://static001.geekbang.org/account/avatar/00/10/74/ea/10661bdc.jpg","comment_is_top":false,"comment_ctime":1557884986,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5852852282","product_id":100026901,"comment_content":"一点感悟：<br>1.列表中每个元素的指向可变，元组中每个元素的指向不可变。<br>2.列表是动态的，元组是静态的。<br>3.存储同样的元素，元组比列表占用的资源更小。","like_count":1},{"had_liked":false,"id":94663,"user_name":"绝望中的希望","can_delete":false,"product_type":"c1","uid":1524396,"ip_address":"","ucode":"53A9BCA9D09307","user_header":"https://static001.geekbang.org/account/avatar/00/17/42/ac/12e98544.jpg","comment_is_top":false,"comment_ctime":1557880261,"is_pvip":false,"replies":[{"id":"33914","content":"列表的over-allocate是在你加入了新元素之后解释器判断得出当前存储空间不够，给你分配额外的空间，因此<br>l=[], l.append(1), l.append(2), l.append(3)实际分配了4个元素的空间。但是l=[1, 2, 3]直接初始化列表，并没有增加元素的操作，因此只会分配3个元素的空间","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1557906799,"ip_address":"","comment_id":94663,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5852847557","product_id":100026901,"comment_content":"老师，想问下直接创建一个有3个元素的列表和创建空列表，再增加3个元素，为什么存储空间会不一样？","like_count":1,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450160,"discussion_content":"列表的over-allocate是在你加入了新元素之后解释器判断得出当前存储空间不够，给你分配额外的空间，因此\nl=[], l.append(1), l.append(2), l.append(3)实际分配了4个元素的空间。但是l=[1, 2, 3]直接初始化列表，并没有增加元素的操作，因此只会分配3个元素的空间","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557906799,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94642,"user_name":"拾掇拾掇","can_delete":false,"product_type":"c1","uid":1051873,"ip_address":"","ucode":"D775F374C2A1D3","user_header":"https://static001.geekbang.org/account/avatar/00/10/0c/e1/f663213e.jpg","comment_is_top":false,"comment_ctime":1557878014,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5852845310","product_id":100026901,"comment_content":"list[]是系统级&gt;[]，所以用list[]","like_count":1},{"had_liked":false,"id":94639,"user_name":"阿德","can_delete":false,"product_type":"c1","uid":1482125,"ip_address":"","ucode":"7C4C4525B96E05","user_header":"https://static001.geekbang.org/account/avatar/00/16/9d/8d/f5c3c491.jpg","comment_is_top":false,"comment_ctime":1557877636,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5852844932","product_id":100026901,"comment_content":"老师可以从原理上讲下python六种数据类型的可变与不可变吗？这个看了很多网上资料，还是一知半解，多谢！😁","like_count":1},{"had_liked":false,"id":94633,"user_name":"lizhaochao","can_delete":false,"product_type":"c1","uid":1170705,"ip_address":"","ucode":"1357C60BB567B7","user_header":"https://static001.geekbang.org/account/avatar/00/11/dd/11/04ebee55.jpg","comment_is_top":false,"comment_ctime":1557876364,"is_pvip":false,"replies":[{"id":"33915","content":"底层是overallocate的array，详细可以参考我对第一个留言的回复","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1557906854,"ip_address":"","comment_id":94633,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5852843660","product_id":100026901,"comment_content":"列表的底层实现是数组还是链表，或者说是杂交品种","like_count":1,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450150,"discussion_content":"底层是overallocate的array，详细可以参考我对第一个留言的回复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557906854,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94620,"user_name":"brat","can_delete":false,"product_type":"c1","uid":1304133,"ip_address":"","ucode":"0F5FD7D3EC0938","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/46AUkKhEV2bDYn6c0rRVqr5IicVOWeXQIgSbNGTnHQDIfyF5HmWLEZriawLQUD1c3mNf9WibYZZKwgC1WPIiahogeg/132","comment_is_top":false,"comment_ctime":1557865293,"is_pvip":false,"replies":[{"id":"33909","content":"区别主要在于list()是一个function call，Python的function call会创建stack，并且进行一系列参数检查的操作，比较expensive，反观[]是一个内置的C函数，可以直接被调用，因此效率高","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1557905706,"ip_address":"","comment_id":94620,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5852832589","product_id":100026901,"comment_content":"Option A的方括号应该是圆括号呢。同样尝试用timeit的方法测试了一下两者的速度，发现果然是直接赋值[]速度比较快，但是不知道该如何解释呢？总觉得在哪儿看到过一样的问题。","like_count":1,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450140,"discussion_content":"区别主要在于list()是一个function call，Python的function call会创建stack，并且进行一系列参数检查的操作，比较expensive，反观[]是一个内置的C函数，可以直接被调用，因此效率高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557905706,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94613,"user_name":"Jeffrey張","can_delete":false,"product_type":"c1","uid":1297897,"ip_address":"","ucode":"41DFC2AB8ACC6E","user_header":"https://static001.geekbang.org/account/avatar/00/13/cd/e9/671bd088.jpg","comment_is_top":false,"comment_ctime":1557853084,"is_pvip":false,"replies":[{"id":"33910","content":"谢谢，已更正","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1557905725,"ip_address":"","comment_id":94613,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5852820380","product_id":100026901,"comment_content":"创建空列表的情况下，[] 会比 list() 快！<br><br>P.S. option A 写错了吧，初始化空字符串应该是list() 不应该是list[]","like_count":1,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450137,"discussion_content":"谢谢，已更正","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557905725,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":357241,"user_name":"xiangxiaobaog3","can_delete":false,"product_type":"c1","uid":1030893,"ip_address":"北京","ucode":"C767A8E0EB4328","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ba/ed/03f3d826.jpg","comment_is_top":false,"comment_ctime":1663083203,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1663083203","product_id":100026901,"comment_content":"已看完","like_count":0},{"had_liked":false,"id":352590,"user_name":"Geek_ce8d35","can_delete":false,"product_type":"c1","uid":2996551,"ip_address":"","ucode":"A971F14DE925F6","user_header":"","comment_is_top":false,"comment_ctime":1658798441,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1658798441","product_id":100026901,"comment_content":"python3 -m timeit &#39;x=(1,2,3,4,5,6)&#39;这个我在jupyter里面运行报错，老师这个哪里不对吗","like_count":0},{"had_liked":false,"id":348029,"user_name":"Geek_8d65e8","can_delete":false,"product_type":"c1","uid":2925304,"ip_address":"","ucode":"DB86D0C5AA4B57","user_header":"https://static001.geekbang.org/account/avatar/00/2c/a2/f8/433afb58.jpg","comment_is_top":false,"comment_ctime":1654675721,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1654675721","product_id":100026901,"comment_content":"想问下new_tup=tup+(5,)<br>问什么5后面有个,   不加为什么会报错？？？","like_count":0},{"had_liked":false,"id":346414,"user_name":"只吃七分饱","can_delete":false,"product_type":"c1","uid":2202160,"ip_address":"","ucode":"EE967959DD1AA3","user_header":"https://static001.geekbang.org/account/avatar/00/21/9a/30/12f46ae6.jpg","comment_is_top":false,"comment_ctime":1653118997,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653118997","product_id":100026901,"comment_content":"bit（比特）和byte（字节）的区别，老师说的不准确。","like_count":0},{"had_liked":false,"id":344701,"user_name":"Gavin","can_delete":false,"product_type":"c1","uid":1155218,"ip_address":"","ucode":"D6480CBE48243F","user_header":"https://static001.geekbang.org/account/avatar/00/11/a0/92/0264b691.jpg","comment_is_top":false,"comment_ctime":1651730888,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1651730888","product_id":100026901,"comment_content":"-&gt; % python -m timeit &#39;list()&#39;<br>python -m timeit &#39;[]&#39;<br>5000000 loops, best of 5: 56.4 nsec per loop<br>10000000 loops, best of 5: 19.8 nsec per loop<br><br>list(): 创建 tuple, 然后再转型到(创建)list; <br>[]: 直接创建list。 所以后者更高效。","like_count":0},{"had_liked":false,"id":340444,"user_name":"徐李","can_delete":false,"product_type":"c1","uid":1213325,"ip_address":"","ucode":"41550F6CA1E112","user_header":"https://static001.geekbang.org/account/avatar/00/12/83/8d/03cac826.jpg","comment_is_top":false,"comment_ctime":1648816218,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1648816218","product_id":100026901,"comment_content":"真的是言简意赅的就讲清楚了，大师就是大师！","like_count":0},{"had_liked":false,"id":337413,"user_name":"老衲","can_delete":false,"product_type":"c1","uid":1787314,"ip_address":"","ucode":"8C0DB540426FC5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/6ejYgEC8IZIwDS9icia20bwmrjfjOOAfrHIsfnZpa4Q92ShiaNXhOicR2gDBpu5hR84FtHs2dZemgNXUEt86jSfSicQ/132","comment_is_top":false,"comment_ctime":1646812348,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646812348","product_id":100026901,"comment_content":"C:\\Users\\xxx&gt;python --version<br>Python 3.9.7<br><br>C:\\Users\\xxx&gt;python -m timeit &#39;x=(1,2,3,4,5,6)&#39;<br>50000000 loops, best of 5: 9.05 nsec per loop<br><br>C:\\Users\\xxx&gt;python -m timeit &#39;x=[1,2,3,4,5,6]&#39;<br>50000000 loops, best of 5: 8.97 nsec per loop<br><br>C:\\Users\\xxx&gt;python -m timeit -s &#39;x=[1,2,3,4,5,6]&#39; &#39;y=x[3]&#39;<br>50000000 loops, best of 5: 9.19 nsec per loop<br><br>C:\\Users\\xxx&gt;python -m timeit -s &#39;x=(1,2,3,4,5,6)&#39; &#39;y=x[3]&#39;<br>50000000 loops, best of 5: 9.19 nsec per loop<br><br>感觉差距没有这么大","like_count":0},{"had_liked":false,"id":336029,"user_name":"399","can_delete":false,"product_type":"c1","uid":1526030,"ip_address":"","ucode":"E71D85605A33AF","user_header":"https://static001.geekbang.org/account/avatar/00/17/49/0e/25968cc6.jpg","comment_is_top":false,"comment_ctime":1645854991,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1645854991","product_id":100026901,"comment_content":"终于知道列表和元组的差异了","like_count":0},{"had_liked":false,"id":330765,"user_name":"涓涓","can_delete":false,"product_type":"c1","uid":1173140,"ip_address":"","ucode":"16C6C308BA2816","user_header":"https://static001.geekbang.org/account/avatar/00/11/e6/94/ba217a11.jpg","comment_is_top":false,"comment_ctime":1642149377,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642149377","product_id":100026901,"comment_content":"景霄老师，你好。<br>tup=(1,2,3)<br>tup[0:1]输出的是（1, ），为什么不是（1）？不理解。<br>期待老师的回复，不胜感激。","like_count":0},{"had_liked":false,"id":330014,"user_name":"安静","can_delete":false,"product_type":"c1","uid":2887896,"ip_address":"","ucode":"3A5F020B189957","user_header":"https://static001.geekbang.org/account/avatar/00/2c/10/d8/f395e602.jpg","comment_is_top":false,"comment_ctime":1641732227,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1641732227","product_id":100026901,"comment_content":"l = [1, 2, 3]<br>l.__sizeof__()<br>64<br><br>l = []<br>l.__sizeof__() &#47;&#47; 空列表的存储空间为40字节<br>40<br>l.append(1)<br>l.__sizeof__() <br>72 &#47;&#47; 加入了元素1之后，列表为其分配了可以存储4个元素的空间 (72 - 40)&#47;8 = 4<br><br>为什么三个元素，list size 64，一个元素72呢？","like_count":0},{"had_liked":false,"id":329397,"user_name":"Geek_59f23e","can_delete":false,"product_type":"c1","uid":1513783,"ip_address":"","ucode":"A463C6EB7447FD","user_header":"https://static001.geekbang.org/account/avatar/00/17/19/37/e0a9bf99.jpg","comment_is_top":false,"comment_ctime":1641312686,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1641312686","product_id":100026901,"comment_content":"import timeit<br><br>print(timeit.timeit(&#39;lst1 = list()&#39;, number=10000000))<br>print(timeit.timeit(&#39;lst2 = []&#39;, number=10000000))<br>print(timeit.timeit(&#39;tup1 = tuple()&#39;, number=10000000))<br>print(timeit.timeit(&#39;tup2 = ()&#39;, number=10000000))<br><br>输出：<br>0.39343090000000003<br>0.16545710000000002<br>0.26018719999999995<br>0.09593839999999998<br><br>ipython里执行得出的结果不准确，执行运行发现函数调用确实慢很多。","like_count":0},{"had_liked":false,"id":326562,"user_name":"海棠","can_delete":false,"product_type":"c1","uid":2628251,"ip_address":"","ucode":"9416069D151314","user_header":"https://static001.geekbang.org/account/avatar/00/28/1a/9b/aa3b16f5.jpg","comment_is_top":false,"comment_ctime":1639562728,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639562728","product_id":100026901,"comment_content":"获取所需要的时间时我在编译器这样写时报了无效语法，我也定义timeit模块了还有错误这是什么原因 ？python版本3.6 .7 python3 -m timeit &#39;x=(1,2,3,4,5,6)&#39;","like_count":0},{"had_liked":false,"id":323829,"user_name":"kevinsu","can_delete":false,"product_type":"c1","uid":1078506,"ip_address":"","ucode":"BAD46B815D6A5C","user_header":"https://static001.geekbang.org/account/avatar/00/10/74/ea/10661bdc.jpg","comment_is_top":false,"comment_ctime":1638176486,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638176486","product_id":100026901,"comment_content":"Python 3.9.1 (v3.9.1:1e5d33e9b9, Dec  7 2020, 12:44:01)<br>kevin@192 ~ % python3 -m timeit &#39;x=(1,2,3,4,5)&#39;<br>50000000 loops, best of 5: 6.02 nsec per loop<br>kevin@192 ~ % python3 -m timeit &#39;x=[1,2,3,4,5]&#39;<br>10000000 loops, best of 5: 29.6 nsec per loop<br>感觉这个版本，性能又提升了一些","like_count":0},{"had_liked":false,"id":320940,"user_name":"Kimiao","can_delete":false,"product_type":"c1","uid":2839243,"ip_address":"","ucode":"6C7CA4AE523977","user_header":"https://static001.geekbang.org/account/avatar/00/2b/52/cb/4b56a088.jpg","comment_is_top":false,"comment_ctime":1636588306,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636588306","product_id":100026901,"comment_content":"不知道有没有用jupyter notebook记笔记学习的同学，补充一个点：<br>python3 -m timeit &#39;x=(1,2,3,4,5,6)&#39;<br>这行代码直接运行会报错，查了下估计是因为特殊关键字的原因，我将其改成如下能够运行了：<br>%timeit &#39;x=(1,2,3,4,5,6)&#39;<br>前面一个%表示计时指定代码；前面加%%表示计时整个cell<br><br>另外估计是因为平台的关系，执行结果虽然初始化tuple更快，但幅度没有老师所叙述的那样。","like_count":0},{"had_liked":false,"id":316604,"user_name":"土豆","can_delete":false,"product_type":"c1","uid":1733914,"ip_address":"","ucode":"474FD62EC70BFF","user_header":"https://static001.geekbang.org/account/avatar/00/1a/75/1a/395242db.jpg","comment_is_top":false,"comment_ctime":1634444135,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634444135","product_id":100026901,"comment_content":"第二个更快：<br>!python3 -m timeit &#39;empty_list = list()&#39;<br>5000000 loops, best of 5: 56 nsec per loop<br><br>!python3 -m timeit &#39;empty_list = []&#39;<br>20000000 loops, best of 5: 17.4 nsec per loop","like_count":0},{"had_liked":false,"id":314660,"user_name":"黎华图","can_delete":false,"product_type":"c1","uid":2794921,"ip_address":"","ucode":"8D3DEE2B4014C0","user_header":"https://static001.geekbang.org/account/avatar/00/2a/a5/a9/35637dc2.jpg","comment_is_top":false,"comment_ctime":1633312918,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633312918","product_id":100026901,"comment_content":"两者在显示的时候，一个是()，一个是[]","like_count":0},{"had_liked":false,"id":313663,"user_name":"jerry guo","can_delete":false,"product_type":"c1","uid":1267753,"ip_address":"","ucode":"179943AFCB93F8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eo2GMhevabZrjINs2TKvIeGC7TJkicNlLvqTticuM5KL8ZN80OC2CnrsUyzPcZXO4uptj4Q1S4jT2lQ/132","comment_is_top":false,"comment_ctime":1632585482,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1632585482","product_id":100026901,"comment_content":"我觉得这个道理要懂，但是写代码的时候没必要一定要用[]初始化，因为差别太小。我先学的java，所以我更喜欢list()的方式初始化。","like_count":0},{"had_liked":false,"id":311755,"user_name":"TheOne","can_delete":false,"product_type":"c1","uid":1582134,"ip_address":"","ucode":"2A359780156A8B","user_header":"https://static001.geekbang.org/account/avatar/00/18/24/36/1c4af368.jpg","comment_is_top":false,"comment_ctime":1631446125,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631446125","product_id":100026901,"comment_content":"当list容量不够的时候，是4个空间增加？","like_count":0},{"had_liked":false,"id":308177,"user_name":"Geek_f431a5","can_delete":false,"product_type":"c1","uid":2668258,"ip_address":"","ucode":"BA758496FE16ED","user_header":"","comment_is_top":false,"comment_ctime":1629442161,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629442161","product_id":100026901,"comment_content":"老师关于存储的有两个问题，希望解答下<br>1，直接定义和append有什么区别？为什么空间不一样，<br>2，下面测试的空间不符合原因是什么？python版本3.9.4<br><br>l = []<br>l.__sizeof__()<br># 40<br>l = [1]<br>l.__sizeof__()<br># # 48<br>l = [1,2]<br>l.__sizeof__()<br># # 56<br>l = [1,2,3]<br>l.__sizeof__()<br># # 104       为什么这里直接就加上了48<br>l = [1,2,3,4,5]<br>l.__sizeof__()<br># # 104<br>l = [1,2,3,4,5,6]<br>l.__sizeof__()<br># # 136<br>l = [1,2,3,4,5,6,7]<br>l.__sizeof__()<br># # 104      为什么反而少了呢？？？？<br>l = [1,2,3,4,5,6,7,8]<br>l.__sizeof__()<br># # 104<br>l = [1,2,3,4,5,6,7,8,9]<br>l.__sizeof__()<br># # 136<br>l = [1,2,3,4,5,6,7,8,9,10]<br>l.__sizeof__()<br># # 136<br>l = [1,2,3,4,5,6,7,8,9,10,11]<br>l.__sizeof__()<br># # 136<br>l = [1,2,3,4,5,6,7,8,9,10,11,12,13]<br>l.__sizeof__()<br># # 168","like_count":0},{"had_liked":false,"id":306663,"user_name":"风中劲草","can_delete":false,"product_type":"c1","uid":1107179,"ip_address":"","ucode":"DF4AAEC3FE95A2","user_header":"https://static001.geekbang.org/account/avatar/00/10/e4/eb/a6ec4c1e.jpg","comment_is_top":false,"comment_ctime":1628662806,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1628662806","product_id":100026901,"comment_content":"Linux平台：<br>python -m timeit &#39;x=(1,2,3,4,5,6)&#39;<br>5000000 loops, best of 5: 42.2 nsec per loop<br>python -m timeit &#39;x=[1,2,3,4,5,6]&#39;<br>2000000 loops, best of 5: 122 nsec per loop<br><br>Windows平台：<br>(myenv39) λ python -m timeit &#39;x=[1,2,3,4,5,6]&#39;<br>50000000 loops, best of 5: 7.76 nsec per loop<br><br>(myenv39) λ python -m timeit &#39;x=[1,2,3,4,5,6]&#39;<br>50000000 loops, best of 5: 7.78 nsec per loop<br><br>不知道为什么会出现时间差异性","like_count":0},{"had_liked":false,"id":305721,"user_name":"何超超","can_delete":false,"product_type":"c1","uid":2023584,"ip_address":"","ucode":"B2794E7C2FD4E8","user_header":"","comment_is_top":false,"comment_ctime":1628133269,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628133269","product_id":100026901,"comment_content":"empty_list = list()与empty_list = [] 相比耗时更长","like_count":0},{"had_liked":false,"id":305545,"user_name":"小匚","can_delete":false,"product_type":"c1","uid":1611663,"ip_address":"","ucode":"78E800B23C457A","user_header":"https://static001.geekbang.org/account/avatar/00/18/97/8f/ccce7df1.jpg","comment_is_top":false,"comment_ctime":1628041582,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628041582","product_id":100026901,"comment_content":"平时几乎用不到元组，不管他变不变都用列表用的多些","like_count":0},{"had_liked":false,"id":300935,"user_name":"Geek_a793cc","can_delete":false,"product_type":"c1","uid":2639849,"ip_address":"","ucode":"780D90FE318991","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKzbriccqBJoZ6WaibzRibHmg2pmnHFGxayMPvSbwibQglLxA6IYwQD0MbfeWQIKI9mtDIl0lInXLmDWg/132","comment_is_top":false,"comment_ctime":1625455346,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625455346","product_id":100026901,"comment_content":"老师，数据结构与数据类型到底是什么关系，有教程说，列表，字典是python的基本数据类型，您这里又说是数据结构，有关系和区别吗","like_count":0},{"had_liked":false,"id":299510,"user_name":"King","can_delete":false,"product_type":"c1","uid":2406910,"ip_address":"","ucode":"9545341BCCFF9F","user_header":"https://static001.geekbang.org/account/avatar/00/24/b9/fe/6fcfff2c.jpg","comment_is_top":false,"comment_ctime":1624687898,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1624687898","product_id":100026901,"comment_content":"Microsoft Windows [版本 10.0.19043.1052]<br>(c) Microsoft Corporation。保留所有权利。<br><br>C:\\WINDOWS\\system32&gt;python<br>Python 3.7.8 (tags&#47;v3.7.8:4b47a5b6ba, Jun 28 2020, 08:53:46) [MSC v.1916 64 bit (AMD64)] on win32<br>Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.<br>&gt;&gt;&gt;<br><br>C:\\WINDOWS\\system32&gt;python -m timeit &#39;x=(1,2,3,4,5,6)&#39;<br>50000000 loops, best of 5: 7.03 nsec per loop<br><br>C:\\WINDOWS\\system32&gt;python -m timeit &#39;x=[1,2,3,4,5,6]&#39;<br>50000000 loops, best of 5: 6.93 nsec per loop<br>为啥我的没差距？","like_count":0},{"had_liked":false,"id":296617,"user_name":"Geek_6df977","can_delete":false,"product_type":"c1","uid":1695261,"ip_address":"","ucode":"4F26A42C9BD901","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/9doFL0ZzcWf5gkQ10cHsOziamhHicjq1k2KHvJibkicBjHsKyvf9jMepvdgLFiadiaI8PScf73Pl7QK3ibp6MYicWn9BuQ/132","comment_is_top":false,"comment_ctime":1623065922,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1623065922","product_id":100026901,"comment_content":"l = [1]<br>print(l.__sizeof__())<br># 48<br>tup = (1)<br>print(tup.__sizeof__())<br># 28<br>为啥只有一个元素的时候是20字节","like_count":0},{"had_liked":false,"id":296125,"user_name":"无为无不为","can_delete":false,"product_type":"c1","uid":2649670,"ip_address":"","ucode":"FF5B8AC7542244","user_header":"https://static001.geekbang.org/account/avatar/00/28/6e/46/53ffb03e.jpg","comment_is_top":false,"comment_ctime":1622771806,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1622771806","product_id":100026901,"comment_content":"(base) C:\\Users\\yaoxuedan&gt;python -m timeit &#39;x=[1,2,3,4,5,6]&#39;<br>50000000 loops, best of 5: 7.32 nsec per loop<br><br>(base) C:\\Users\\yaoxuedan&gt;python -m timeit &#39;x=(1,2,3,4,5,6)&#39;<br>50000000 loops, best of 5: 7.31 nsec per loop<br><br>为什么我的列表和元组的初始化时间一样？","like_count":0,"discussions":[{"author":{"id":2406910,"avatar":"https://static001.geekbang.org/account/avatar/00/24/b9/fe/6fcfff2c.jpg","nickname":"King","note":"","ucode":"9545341BCCFF9F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380753,"discussion_content":"我也是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624688017,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":294965,"user_name":"BertGeek","can_delete":false,"product_type":"c1","uid":1452799,"ip_address":"","ucode":"8E1D72C9F9778C","user_header":"https://static001.geekbang.org/account/avatar/00/16/2a/ff/a9d72102.jpg","comment_is_top":false,"comment_ctime":1622167829,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622167829","product_id":100026901,"comment_content":"列表和元组都是有序集合，<br>列表特性：元组可变，长度可变<br>元组特性：元组不可变，长度固定<br>列表和元组都支持相互转换","like_count":0},{"had_liked":false,"id":293378,"user_name":"　","can_delete":false,"product_type":"c1","uid":2628048,"ip_address":"","ucode":"75FD3BD3937811","user_header":"https://static001.geekbang.org/account/avatar/00/28/19/d0/02ade92b.jpg","comment_is_top":false,"comment_ctime":1621361403,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621361403","product_id":100026901,"comment_content":"选择b方案，因为[ ]就代表了空列表并不需要特别去声明","like_count":0},{"had_liked":false,"id":290727,"user_name":"otakuhuang","can_delete":false,"product_type":"c1","uid":1541263,"ip_address":"","ucode":"283641975339AD","user_header":"https://static001.geekbang.org/account/avatar/00/17/84/8f/a305cc1e.jpg","comment_is_top":false,"comment_ctime":1619705918,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619705918","product_id":100026901,"comment_content":"timeit.timeit(&#39;empty_list = []&#39;)<br>0.02480719999948633<br><br>timeit.timeit(&#39;empty_list = list()&#39;)<br>0.12398339999981545<br><br>timeit.timeit(&#39;empty_tup = ()&#39;)<br>0.017139700000370794<br><br>timeit.timeit(&#39;empty_tup = tuple()&#39;)<br>0.07301149999966583<br><br>使用 JupyterLab 对比了下，直接创建元组、列表的时间与转换的时间相差有点多，应该需要避免转换吧。<br>","like_count":0},{"had_liked":false,"id":289723,"user_name":"枫之林","can_delete":false,"product_type":"c1","uid":2570817,"ip_address":"","ucode":"8BE10E7A808AAF","user_header":"https://static001.geekbang.org/account/avatar/00/27/3a/41/a0b59351.jpg","comment_is_top":false,"comment_ctime":1619155324,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619155324","product_id":100026901,"comment_content":"老师，你能不能把list的存储大小讲清楚一点，首先，在python里，一个int型是8字节，然后你说list会多出16字节，其中8字节是用来存储指针，那么一个int型指针占几个字节，而且你也没说清楚是每个元素都会存一个指针指向它，还是只存一个指针指向list的头？为什么一个空的list为什么是40字节，除了预先分配额外的8字节空间和指针空间，还有24字节干嘛的？","like_count":0},{"had_liked":false,"id":282774,"user_name":"阳","can_delete":false,"product_type":"c1","uid":2487222,"ip_address":"","ucode":"8D12C4A1C3E9DE","user_header":"https://static001.geekbang.org/account/avatar/00/25/f3/b6/5696ee30.jpg","comment_is_top":false,"comment_ctime":1615392739,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615392739","product_id":100026901,"comment_content":"思考题<br>list（）等同于list（[]）<br>是否像内联函数的区别，调用函数花时间多","like_count":0},{"had_liked":false,"id":282612,"user_name":"Will","can_delete":false,"product_type":"c1","uid":1263687,"ip_address":"","ucode":"FF4235F376FB8E","user_header":"https://static001.geekbang.org/account/avatar/00/13/48/47/a6812efa.jpg","comment_is_top":false,"comment_ctime":1615340480,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615340480","product_id":100026901,"comment_content":"[]相比list()创建空列表效率更高，原因在于[]是用的内置C函数，而list()则涉及python的函数调用需要创建栈，开销较大。","like_count":0},{"had_liked":false,"id":281922,"user_name":"Skyrim","can_delete":false,"product_type":"c1","uid":2468051,"ip_address":"","ucode":"22E848619D3A67","user_header":"https://static001.geekbang.org/account/avatar/00/25/a8/d3/c58fae41.jpg","comment_is_top":false,"comment_ctime":1614951235,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614951235","product_id":100026901,"comment_content":"python -m timeit &#39;empty_list=[]&#39;<br>50000000 loops, best of 5: 6.23 nsec per loop<br><br>python -m timeit &#39;empty_list=list()&#39;<br>50000000 loops, best of 5: 6.24 nsec per loop<br><br>感觉不是很明显啊<br>测试环境 python 3.9.2 win10 专业版","like_count":0},{"had_liked":false,"id":280700,"user_name":"维生素胶囊","can_delete":false,"product_type":"c1","uid":2457544,"ip_address":"","ucode":"B14FC4919BF1C2","user_header":"https://static001.geekbang.org/account/avatar/00/25/7f/c8/a55740dc.jpg","comment_is_top":false,"comment_ctime":1614323045,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614323045","product_id":100026901,"comment_content":"A和B建立空的列表和元组的效率上应该是没有区别的。在存储数据后，会呗频繁调用的时候应该优先考虑使用列表，因为列表方便数据的存储，而且存储的效率比元祖高，当存入数据后，基本不会改变的时候，优先考虑元祖，虽然元组在增加数据的时候效率比列表低，但是增加完成之后的使用上，效率是优与列表的。","like_count":0},{"had_liked":false,"id":278543,"user_name":"Geek_b5c1c5","can_delete":false,"product_type":"c1","uid":2360290,"ip_address":"","ucode":"2D11BD116A0036","user_header":"","comment_is_top":false,"comment_ctime":1613036704,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1613036704","product_id":100026901,"comment_content":"python3.8， 实测list和tuple的性能没有太大区别了<br><br>(venv) D:\\PythonCodes&gt;python -m timeit &#39;x=[1,2,3,4,5,6]&#39;<br>50000000 loops, best of 5: 8.39 nsec per loop<br><br>(venv) D:\\PythonCodes&gt;python -m timeit &#39;x=(1,2,3,4,5,6)&#39;<br>50000000 loops, best of 5: 8.22 nsec per loop<br>","like_count":0,"discussions":[{"author":{"id":1091460,"avatar":"https://static001.geekbang.org/account/avatar/00/10/a7/84/b9b81d8d.jpg","nickname":"大包","note":"","ucode":"07A12BDA5E08D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349787,"discussion_content":"有区别的. 我用的python 3.9, mac mini 2018, 元祖11.8s, 列表46.7s.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613542891,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":273060,"user_name":"赤松子","can_delete":false,"product_type":"c1","uid":2412005,"ip_address":"","ucode":"35339F2DCE80A6","user_header":"https://static001.geekbang.org/account/avatar/00/24/cd/e5/7f8ad62d.jpg","comment_is_top":false,"comment_ctime":1610422828,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610422828","product_id":100026901,"comment_content":"1.用__sizeof__()跟sys.getsizeof()获得的内存大小为什么不一样呢?<br><br>2.int 8字节是指什么呢，四个int总共占了8字节还是四个int的指针占了8字节","like_count":0},{"had_liked":false,"id":271093,"user_name":"朱雯","can_delete":false,"product_type":"c1","uid":1035744,"ip_address":"","ucode":"064C45FBF6B51F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cd/e0/c85bb948.jpg","comment_is_top":false,"comment_ctime":1609398098,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1609398098","product_id":100026901,"comment_content":"l=[(1,2,3,4,5,6,7,8),(4,5,6),(7,8,9)] <br>l.__sizeof__() <br>长度为啥是64，明显第一个元组存的数据已经大于64了。","like_count":0},{"had_liked":false,"id":270050,"user_name":"Kidron","can_delete":false,"product_type":"c1","uid":1818552,"ip_address":"","ucode":"BCBEDF8C7F1A3F","user_header":"https://static001.geekbang.org/account/avatar/00/1b/bf/b8/6980b4e8.jpg","comment_is_top":false,"comment_ctime":1608886823,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608886823","product_id":100026901,"comment_content":"自己在实际工程上一般都用列表，看来具体场景上还是要多思考效率问题。","like_count":0},{"had_liked":false,"id":269352,"user_name":"周萱萱","can_delete":false,"product_type":"c1","uid":1185181,"ip_address":"","ucode":"65499DDEB634C9","user_header":"https://static001.geekbang.org/account/avatar/00/12/15/9d/1efd064d.jpg","comment_is_top":false,"comment_ctime":1608620674,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608620674","product_id":100026901,"comment_content":"1. 创建空列表，效率上元组更优，因为分配空间小。选用的话需要看具体存储的内容，可变的话选用列表，固定的选元组。<br>2. 工作中业务大部分变量都用列表，只有固定的参数会用到元组。","like_count":0},{"had_liked":false,"id":264927,"user_name":"Shu🐹","can_delete":false,"product_type":"c1","uid":2347194,"ip_address":"","ucode":"29521F803CE2CC","user_header":"https://static001.geekbang.org/account/avatar/00/23/d0/ba/98bc816b.jpg","comment_is_top":false,"comment_ctime":1606708858,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606708858","product_id":100026901,"comment_content":"老师，list和tuple都是存储在连续的内存空间上吗？如果是的话，list的指针指向元素value，是否表示list的这块连续空间存储的不是元素的value，而是某个别的东西？","like_count":0},{"had_liked":false,"id":254300,"user_name":"花间隐虎","can_delete":false,"product_type":"c1","uid":1134884,"ip_address":"","ucode":"976D63774B28D3","user_header":"https://static001.geekbang.org/account/avatar/00/11/51/24/60fa7332.jpg","comment_is_top":false,"comment_ctime":1603098208,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603098208","product_id":100026901,"comment_content":"老师，我好奇的是空列表&#39;[]&#39;占了40 byte，这里头都有些啥啊？","like_count":0},{"had_liked":false,"id":248106,"user_name":"Kelly.W","can_delete":false,"product_type":"c1","uid":1518308,"ip_address":"","ucode":"6EFB58A24355C4","user_header":"https://static001.geekbang.org/account/avatar/00/17/2a/e4/714ffd01.jpg","comment_is_top":false,"comment_ctime":1600010856,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1600010856","product_id":100026901,"comment_content":"确定不变的内容使用元组，可能会修改的有序集合使用列表。<br>之前还真不知道[]比list()效率高，涨知识了~","like_count":0},{"had_liked":false,"id":239998,"user_name":"Leoorz","can_delete":false,"product_type":"c1","uid":1030657,"ip_address":"","ucode":"8912628AD6ADE0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ba/01/5ce8ce0b.jpg","comment_is_top":false,"comment_ctime":1596708554,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596708554","product_id":100026901,"comment_content":"思考题1:<br>使用老师 python -m timeit 的方式，确实list()更耗时，看了前排的留言发现老师讲的很细，赞<br>思考题2:<br>看了fluent python，tuple目前一般用的较多的方式是collections.namedtuple，当简单的record使用，再看看留言区其他同学的去😁","like_count":0},{"had_liked":false,"id":227748,"user_name":"dcj123","can_delete":false,"product_type":"c1","uid":1714280,"ip_address":"","ucode":"123D5B5166C399","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eq1EKibJ5N8ZJBFjFxbgA35xtF3JXA2HWTQ3l1o2DAdEK6vx1XK9SLozLz1ocQ3j4SWQSV8F8yTetg/132","comment_is_top":false,"comment_ctime":1592469870,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592469870","product_id":100026901,"comment_content":"所以，下面的方法更快<br><br>hanxiadeMacBook-Pro:~ hanxia$ python3 -m timeit &#39;empty_list=list()&#39;<br>10000000 loops, best of 3: 0.107 usec per loop<br>hanxiadeMacBook-Pro:~ hanxia$ python3 -m timeit &#39;empty_list=[]&#39;<br>10000000 loops, best of 3: 0.0221 usec per loop","like_count":0},{"had_liked":false,"id":225743,"user_name":"daowuli_chihai","can_delete":false,"product_type":"c1","uid":2017371,"ip_address":"","ucode":"13E5DD278D8E95","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIiaeebUYxl7e1b8DhQGz7v6uibGcytfL8iaTke1S6NwSVxicOy5iaLGbRn2aZtxZy8vVnF6j3fjtxDEbQ/132","comment_is_top":false,"comment_ctime":1591844989,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591844989","product_id":100026901,"comment_content":"为什么我用命令行运行下面2行代码，元组的运行速度42反而长于列表的41.5呢？<br><br>C:\\Users\\Administrator&gt;python -m timeit &#39;x=(1,2,3,4,5,6,7,8,9)&#39;<br>5000000 loops, best of 5: 42 nsec per loop<br>C:\\Users\\Administrator&gt;python -m timeit &#39;x=[1,2,3,4,5,6,7,8,9]&#39;<br>5000000 loops, best of 5: 41.5 nsec per loop<br><br>","like_count":0},{"had_liked":false,"id":225740,"user_name":"daowuli_chihai","can_delete":false,"product_type":"c1","uid":2017371,"ip_address":"","ucode":"13E5DD278D8E95","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIiaeebUYxl7e1b8DhQGz7v6uibGcytfL8iaTke1S6NwSVxicOy5iaLGbRn2aZtxZy8vVnF6j3fjtxDEbQ/132","comment_is_top":false,"comment_ctime":1591844418,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591844418","product_id":100026901,"comment_content":"你运行是40<br>我运行是20<br>下面代码<br>是因为 系统不同？<br><br>&gt;&gt;&gt; l.__sizeof__()<br>20<br>&gt;&gt;&gt; print(&quot;第二：&quot;)<br>第二：<br>&gt;&gt;&gt; l.append(1)<br>&gt;&gt;&gt; l.__sizeof__()<br>36<br>&gt;&gt;&gt; print(&quot;第三：&quot;)<br>第三：<br>&gt;&gt;&gt; l.append(2)<br>&gt;&gt;&gt; l.__sizeof__()<br>36<br>&gt;&gt;&gt; l.append(3)<br>&gt;&gt;&gt; l.__sizeof__()<br>36<br>&gt;&gt;&gt; l.append(4)<br>&gt;&gt;&gt; l.__sizeof__()<br>36<br>&gt;&gt;&gt; l.append(5)<br>&gt;&gt;&gt; l.__sizeof__()<br>52<br>&gt;&gt;&gt;","like_count":0},{"had_liked":false,"id":225572,"user_name":"As1m0v","can_delete":false,"product_type":"c1","uid":2035261,"ip_address":"","ucode":"279177F30FA011","user_header":"https://static001.geekbang.org/account/avatar/00/1f/0e/3d/ded8bc06.jpg","comment_is_top":false,"comment_ctime":1591792122,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591792122","product_id":100026901,"comment_content":"老师您好，因为元祖和列表是可以随意嵌套的，假如元祖中有一元素为列表，那么对列表进行元素删除和增加操作时，是如何在起始对元祖分配的存储空间上进行改变的？","like_count":0},{"had_liked":false,"id":224301,"user_name":"Liam","can_delete":false,"product_type":"c1","uid":1531029,"ip_address":"","ucode":"0C66D7707BFD1F","user_header":"https://static001.geekbang.org/account/avatar/00/17/5c/95/553956fb.jpg","comment_is_top":false,"comment_ctime":1591340508,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591340508","product_id":100026901,"comment_content":"[] 方式优于 list():<br>- list() 是通过func 来创建一个List，需要执行 func 执行前的一系列准备操作，最后还是通过内置函数创建List；<br>- [] 是直接通过内置函数来创建List；<br>综上优先使用 [] 创建List。<br><br># option B<br>empty_list = []","like_count":0},{"had_liked":false,"id":221720,"user_name":"Marchin On","can_delete":false,"product_type":"c1","uid":1705366,"ip_address":"","ucode":"4EDAF4D5242756","user_header":"https://static001.geekbang.org/account/avatar/00/1a/05/96/8a3aa537.jpg","comment_is_top":false,"comment_ctime":1590574319,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590574319","product_id":100026901,"comment_content":"from timeit import Timer<br><br>def test_list1():<br>    x = []<br>    <br>def test_list2():<br>    x = list()<br><br>def test1():<br>    x = [1,2,3,4,5,6]<br>    <br>def test2():<br>    x = [1,2,3,4,5,6]<br>    y = x[3]<br>    <br>def test3():<br>    x = (1,2,3,4,5,6)<br>    <br>def test4():<br>    x = (1,2,3,4,5,6)<br>    y = x[3]<br><br>list1 = Timer(&quot;test_list1()&quot;, &quot;from __main__ import test_list1&quot;)<br>list2 = Timer(&quot;test_list2()&quot;, &quot;from __main__ import test_list2&quot;)<br>print(&quot;列表初始化使用&#39;[]&#39;耗时:&quot;, list1.timeit(), &quot;列表初始化使用&#39;list()&#39;耗时:&quot;, list2.timeit())<br>t1 = Timer(&quot;test1()&quot;, &quot;from __main__ import test1&quot;)<br>t2 = Timer(&quot;test2()&quot;, &quot;from __main__ import test2&quot;)<br>t3 = Timer(&quot;test3()&quot;, &quot;from __main__ import test3&quot;)<br>t4 = Timer(&quot;test4()&quot;, &quot;from __main__ import test4&quot;)<br>print(&quot;列表赋值耗时:&quot;, t1.timeit(), &quot;列表索引耗时:&quot;, t2.timeit())<br>print(&quot;元组赋值耗时:&quot;, t3.timeit(), &quot;元元组索引耗时:&quot;, t4.timeit())","like_count":0},{"had_liked":false,"id":201068,"user_name":"Mark","can_delete":false,"product_type":"c1","uid":1925653,"ip_address":"","ucode":"6327732FB93A9F","user_header":"https://static001.geekbang.org/account/avatar/00/1d/62/15/af1f1ff9.jpg","comment_is_top":false,"comment_ctime":1585711886,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585711886","product_id":100026901,"comment_content":"老师，您说：Python 每次分配空间时都会额外多分配一些，这样的机制（over-allocating）保证了其操作的高效性：增加 &#47; 删除的时间复杂度均为 O(1)。如果列表和元组存储元素的个数是一亿，十亿甚至更大数量级时，你还能忽略这样的差异吗？<br><br>我这里有个疑问：<br> · 列表数据我一般不是压入一次，往往有可能是在一个大的loop中，不断的循环压入元素，那么一次只分配4个是不是就显得少了呢？<br> · loop 1亿次，时间复杂度不就是O(1亿&#47;4)了吗？会不会在数量巨增的时候，列表一次分配的空间变大呢？","like_count":0},{"had_liked":false,"id":199789,"user_name":"方扬波","can_delete":false,"product_type":"c1","uid":1855749,"ip_address":"","ucode":"94DEAD0C27350B","user_header":"","comment_is_top":false,"comment_ctime":1585495988,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585495988","product_id":100026901,"comment_content":"看评论能学到不少东西","like_count":0},{"had_liked":false,"id":198628,"user_name":"Geek.S.","can_delete":false,"product_type":"c1","uid":1899087,"ip_address":"","ucode":"FC8A9FE3300B94","user_header":"https://static001.geekbang.org/account/avatar/00/1c/fa/4f/4252911a.jpg","comment_is_top":false,"comment_ctime":1585460787,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585460787","product_id":100026901,"comment_content":"$ python -m timeit -n 50000000 &#39;x=list()&#39;<br>50000000 loops, best of 5: 9.15 nsec per loop<br><br>$ python -m timeit -n 50000000 &#39;x=[]&#39;<br>50000000 loops, best of 5: 9.14 nsec per loop<br><br>$ python -m timeit -n 50000000 &#39;x=[]&#39;<br>50000000 loops, best of 5: 9.16 nsec per loop<br><br>$ python -m timeit -n 50000000 &#39;x=[]&#39;<br>50000000 loops, best of 5: 9.14 nsec per loop<br><br>$ python -m timeit -n 50000000 &#39;x=list()&#39;<br>50000000 loops, best of 5: 9.1 nsec per loop<br><br>$ python -m timeit -n 50000000 &#39;x=list()&#39;<br>50000000 loops, best of 5: 9.13 nsec per loop<br><br>$ python -m timeit -n 50000000 &#39;x=[]&#39;<br>50000000 loops, best of 5: 9.13 nsec per loop<br><br>$ python -m timeit -n 50000000 &#39;x=[]&#39;<br>50000000 loops, best of 5: 9.13 nsec per loop<br><br>$ python -m timeit -n 50000000 &#39;x=list()&#39;<br>50000000 loops, best of 5: 9.13 nsec per loop<br><br>$ python -m timeit -n 50000000 &#39;x=list()&#39;<br>50000000 loops, best of 5: 9.12 nsec per loop<br><br>$ python -m timeit -n 50000000 &#39;x=[]&#39;<br>50000000 loops, best of 5: 9.11 nsec per loop<br><br>$ python -V  <br>Python 3.7.1<br><br>请教一下老师, 我这里实际测试这两种定义空列表的效率上看不出差异, 是现在 Python 版本底层优化了? 还是这个测试语句测试结果不能看出效率上的差异? ","like_count":0},{"had_liked":false,"id":195277,"user_name":"小土","can_delete":false,"product_type":"c1","uid":1928670,"ip_address":"","ucode":"992DBB3085CF36","user_header":"https://static001.geekbang.org/account/avatar/00/1d/6d/de/d7c8a811.jpg","comment_is_top":false,"comment_ctime":1585152869,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1585152869","product_id":100026901,"comment_content":"老师您好，请问您的课程是需要有python 编程基础的吗？","like_count":0,"discussions":[{"author":{"id":1164531,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c4/f3/92f654f1.jpg","nickname":"Bug? Feature!","note":"","ucode":"F8FA8A0094FBA0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288208,"discussion_content":"我没有python基础，同样看懂了，兄弟，只需要你有编程基础就好啦！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1593678152,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":195097,"user_name":"Antonios","can_delete":false,"product_type":"c1","uid":1934241,"ip_address":"","ucode":"4B62FA9A2487F7","user_header":"https://static001.geekbang.org/account/avatar/00/1d/83/a1/c061308f.jpg","comment_is_top":false,"comment_ctime":1585136428,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585136428","product_id":100026901,"comment_content":"为什么我的空列表是20个字节呢","like_count":0},{"had_liked":false,"id":194422,"user_name":"单色","can_delete":false,"product_type":"c1","uid":1907486,"ip_address":"","ucode":"A1DA6E497FD74C","user_header":"https://static001.geekbang.org/account/avatar/00/1d/1b/1e/f5c16f7e.jpg","comment_is_top":false,"comment_ctime":1585059177,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585059177","product_id":100026901,"comment_content":"课后题： empty_list = [] 的效率高<br>$ python3 -m timeit &#39;l = list()&#39;<br>10000000 loops, best of 3: 0.0984 usec per loop<br>$ python3 -m timeit &#39;l = []&#39;<br>10000000 loops, best of 3: 0.0269 usec per loop","like_count":0},{"had_liked":false,"id":191115,"user_name":"徐丶昌隆","can_delete":false,"product_type":"c1","uid":1604438,"ip_address":"","ucode":"9EE3F971F90C4F","user_header":"https://static001.geekbang.org/account/avatar/00/18/7b/56/80a75331.jpg","comment_is_top":false,"comment_ctime":1584745576,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584745576","product_id":100026901,"comment_content":"老师您好，执行 list()的函数是否是PyListNew()?","like_count":0},{"had_liked":false,"id":180621,"user_name":"本来是亚","can_delete":false,"product_type":"c1","uid":1073592,"ip_address":"","ucode":"14527E5BC3C2A8","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/b8/7b23f8cb.jpg","comment_is_top":false,"comment_ctime":1582353294,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1582353294","product_id":100026901,"comment_content":"对于思考题1，list()更难，因为函数调用有额外的开销。","like_count":0},{"had_liked":false,"id":177187,"user_name":"付凡(Joey)","can_delete":false,"product_type":"c1","uid":1395524,"ip_address":"","ucode":"837EE5620F8292","user_header":"https://static001.geekbang.org/account/avatar/00/15/4b/44/6b0cbbea.jpg","comment_is_top":false,"comment_ctime":1581317407,"is_pvip":false,"replies":[{"id":"72039","content":"已更正，谢谢你阅读仔细指出问题","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1583890989,"ip_address":"","comment_id":177187,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581317407","product_id":100026901,"comment_content":"&quot;reversed() 和 sorted() 同样表示对列表 &#47; 元组进行倒转和排序，但是会返回一个倒转后或者排好序的新的列表 &#47; 元组。&quot;<br>请教一下，这里是不是不太准确<br>reversed()返回的是一个iterator，sorted()不管对于元祖还是列表应该都是会返回一个list的","like_count":0,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483334,"discussion_content":"已更正，谢谢你阅读仔细指出问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583890989,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170892,"user_name":"滴","can_delete":false,"product_type":"c1","uid":1805481,"ip_address":"","ucode":"DDECE2FC9409F5","user_header":"https://static001.geekbang.org/account/avatar/00/1b/8c/a9/209d1953.jpg","comment_is_top":false,"comment_ctime":1578751974,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578751974","product_id":100026901,"comment_content":"（注意，元组没有内置的这两个函数)。<br>呀呀，我居然发现这里两个括号不一样","like_count":0},{"had_liked":false,"id":170674,"user_name":"李默蹊长","can_delete":false,"product_type":"c1","uid":1806736,"ip_address":"","ucode":"D9C987A8A535B2","user_header":"https://static001.geekbang.org/account/avatar/00/1b/91/90/0e5e748d.jpg","comment_is_top":false,"comment_ctime":1578662178,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578662178","product_id":100026901,"comment_content":"对元组进行reversed和sorted操作，不会返回一个新的元组，而返回“reversed”类型和list类型，不知道reversed是个什么数据类型？","like_count":0},{"had_liked":false,"id":167924,"user_name":"青鸟","can_delete":false,"product_type":"c1","uid":1547020,"ip_address":"","ucode":"9D989911056674","user_header":"https://static001.geekbang.org/account/avatar/00/17/9b/0c/bcd2b32b.jpg","comment_is_top":false,"comment_ctime":1577964263,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577964263","product_id":100026901,"comment_content":"C:\\Users\\Administrator&gt;python -m timeit -s &#39;x=[]&#39;<br>50000000 loops, best of 5: 8.16 nsec per loop<br><br>C:\\Users\\Administrator&gt;python -m timeit -s &#39;x=list()&#39;<br>50000000 loops, best of 5: 8.23 nsec per loop","like_count":0},{"had_liked":false,"id":167151,"user_name":"Joeforfun","can_delete":false,"product_type":"c1","uid":1797145,"ip_address":"","ucode":"3D2BA912E0D77D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/iaxgvyIjNFomptQ9qBk4iaakYOS1XojYHDp48TXt1kX9DxTkKuR2UXGTyhG1liahib6E4BLF12ia6mic2pF0t4ECeZIQ/132","comment_is_top":false,"comment_ctime":1577699510,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577699510","product_id":100026901,"comment_content":"学以致用：<br>python3 -m timeit &#39;empty_list = list()&#39;<br>2000000 loops, best of 5: 120 nsec per loop<br> python3 -m timeit &#39;empty_list = []&#39;<br>10000000 loops, best of 5: 27.3 nsec per loop <br>理解:一般越短可能越好用，同理可证：裙子越短越有杀伤力，但是不是什么都是适合越短越好。","like_count":0},{"had_liked":false,"id":166199,"user_name":"咚咚咚东","can_delete":false,"product_type":"c1","uid":1352917,"ip_address":"","ucode":"BAAF965577592B","user_header":"https://static001.geekbang.org/account/avatar/00/14/a4/d5/d1381d9b.jpg","comment_is_top":false,"comment_ctime":1577414757,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577414757","product_id":100026901,"comment_content":"timeit empty_list = list()<br>The slowest run took 12.66 times longer than the fastest. This could mean that an intermediate result is being cached.<br>10000000 loops, best of 3: 135 ns per loop<br><br>timeit empty_list = []<br>10000000 loops, best of 3: 23.5 ns per loop<br>可以看出,使用 empty_list=[]这种方法更优,原因是,使用[]是直接调用内置的C函数,而list(),是一个由C实现的Python函数,相当于绕了远路.","like_count":0},{"had_liked":false,"id":165920,"user_name":"老郭丶","can_delete":false,"product_type":"c1","uid":1794660,"ip_address":"","ucode":"383CF185947FA8","user_header":"","comment_is_top":false,"comment_ctime":1577345307,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577345307","product_id":100026901,"comment_content":"test_tuple = (1, 2, [1, 2], {&quot;a&quot;: 1})<br>test_tuple[2].append(1)<br>test_tuple[3][&#39;b&#39;] = 2<br>print(test_tuple)<br>为什么子元素的值可以改变？<br>","like_count":0},{"had_liked":false,"id":159973,"user_name":"峰","can_delete":false,"product_type":"c1","uid":1056019,"ip_address":"","ucode":"C53CB64E8E7D19","user_header":"https://static001.geekbang.org/account/avatar/00/10/1d/13/31ea1b0b.jpg","comment_is_top":false,"comment_ctime":1575853189,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1575853189","product_id":100026901,"comment_content":"一个是方法调用，一个是语言内建的支持，后者可以直接映射成某个操作，so 快点。","like_count":0},{"had_liked":false,"id":158689,"user_name":"陌尘","can_delete":false,"product_type":"c1","uid":1155739,"ip_address":"","ucode":"83BFC1BE25C5BF","user_header":"https://static001.geekbang.org/account/avatar/00/11/a2/9b/22498552.jpg","comment_is_top":false,"comment_ctime":1575433936,"is_pvip":false,"replies":[{"id":"66794","content":"哪里有问题？","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1579135992,"ip_address":"","comment_id":158689,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1575433936","product_id":100026901,"comment_content":"请问这句话的表述是否有误？<br>----reversed() 和 sorted() 同样表示对列表 &#47; 元组进行倒转和排序，但是会返回一个倒转后或者排好序的新的列表 &#47; 元组。<br>运行以下代码：<br>tup = (3, 2, 3, 7, 8, 1)<br>l = reversed(tup)<br>print(type(l))<br>l = sorted(tup)<br>print(type(l))<br>输出为：<br>&lt;class &#39;reversed&#39;&gt;<br>&lt;class &#39;list&#39;&gt;","like_count":0,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476812,"discussion_content":"哪里有问题？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579135992,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":152991,"user_name":"BeanNan","can_delete":false,"product_type":"c1","uid":1088253,"ip_address":"","ucode":"FCF21A73BBE707","user_header":"https://static001.geekbang.org/account/avatar/00/10/9a/fd/30c425f9.jpg","comment_is_top":false,"comment_ctime":1574134729,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1574134729","product_id":100026901,"comment_content":"&quot;为了减小每次增加 &#47; 删减操作时空间分配的开销，Python 每次分配空间时都会额外多分配一些，这样的机制（over-allocating）保证了其操作的高效性：增加 &#47; 删除的时间复杂度均为 O(1)&quot;  老师，，这里我有点疑惑，，增加和删除的时间度不能为O(1)吧","like_count":0,"discussions":[{"author":{"id":1961641,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/ee/a9/699c87c4.jpg","nickname":"Zhou伊🌠","note":"","ucode":"A34F935AA1550C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297840,"discussion_content":"我的理解是，这里的&#34;增加&#34;指的是在末尾append一个元素，&#34;删除&#34;指的是pop末尾的元素，此时时间复杂度为O(1)。如果是insert，remove，或者pop指定位置的元素，时间复杂度就应该是O(n)了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597070665,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150542,"user_name":"Paul Shan","can_delete":false,"product_type":"c1","uid":1593140,"ip_address":"","ucode":"32D99989028284","user_header":"","comment_is_top":false,"comment_ctime":1573551965,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573551965","product_id":100026901,"comment_content":"列表是可扩展线性存储结构，元祖是只读线性线性结构。列表可以方便的在尾部增加删除，以及修改，和Java的ArrayList差不多。元祖是只读的，和Java里的String差不多。元祖减少了功能，自然也就提高了在更小操作集下的效率。","like_count":0},{"had_liked":false,"id":150370,"user_name":"Bonaparte","can_delete":false,"product_type":"c1","uid":1021741,"ip_address":"","ucode":"27E9CEE38A30C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/97/2d/8e4836f3.jpg","comment_is_top":false,"comment_ctime":1573523740,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573523740","product_id":100026901,"comment_content":"C:\\Users\\lenovo&gt;python -m timeit &quot;empty_list = list()&quot;<br>2000000 loops, best of 5: 159 nsec per loop<br><br>C:\\Users\\lenovo&gt;python -m timeit &quot;empty_list =[]&quot;<br>10000000 loops, best of 5: 36.7 nsec per loop<br><br>有差别，[]更快一点点","like_count":0},{"had_liked":false,"id":148535,"user_name":"小伟","can_delete":false,"product_type":"c1","uid":1359701,"ip_address":"","ucode":"124953423491E2","user_header":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","comment_is_top":false,"comment_ctime":1573026891,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573026891","product_id":100026901,"comment_content":"既然[]和list的功能相同，且前者是内置函数效率高，为何还要提供list函数？<br>","like_count":0},{"had_liked":false,"id":142850,"user_name":"追风筝的人","can_delete":false,"product_type":"c1","uid":1488020,"ip_address":"","ucode":"2993D60F94C396","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/94/2796de72.jpg","comment_is_top":false,"comment_ctime":1571561026,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571561026","product_id":100026901,"comment_content":"[]比()","like_count":0},{"had_liked":false,"id":141250,"user_name":"Steve","can_delete":false,"product_type":"c1","uid":1072131,"ip_address":"","ucode":"9C4E9E62A79C3A","user_header":"https://static001.geekbang.org/account/avatar/00/10/5c/03/370ebbc8.jpg","comment_is_top":false,"comment_ctime":1571132181,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571132181","product_id":100026901,"comment_content":"在我的机器上，列表和元组的索引操作也有不小的差距。列表是80，而元组是27. 创建空列表的两种方法，虽然每次运行时间都会变化，但A方法基本都是要用4倍于B的时间。","like_count":0},{"had_liked":false,"id":140337,"user_name":"Geek_8980","can_delete":false,"product_type":"c1","uid":1618707,"ip_address":"","ucode":"B13B9AB67FB3B1","user_header":"https://static001.geekbang.org/account/avatar/00/18/b3/13/65109975.jpg","comment_is_top":false,"comment_ctime":1570882795,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570882795","product_id":100026901,"comment_content":"list和tuple初始化效率比较<br>5次运行时间如下：<br># tuple : 0.016255757999999995 +0.025686561 +0.033417921 +0.023551100999999998 +0.027688651 avg = 0.0253199984<br># list : 0.14345796700000002 +0.091764757 +0.12169864200000001 +0.098271677 +0.148353162 avg = 0.120709241<br># list &#47; tuple = 4.76734789209149","like_count":0},{"had_liked":false,"id":139851,"user_name":"Nemo","can_delete":false,"product_type":"c1","uid":1657039,"ip_address":"","ucode":"2B11D18D6FA2AE","user_header":"https://static001.geekbang.org/account/avatar/00/19/48/cf/8c88e6c0.jpg","comment_is_top":false,"comment_ctime":1570756402,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570756402","product_id":100026901,"comment_content":"option b","like_count":0},{"had_liked":false,"id":138075,"user_name":"小太阳","can_delete":false,"product_type":"c1","uid":1566413,"ip_address":"","ucode":"80FD4A871ABFAD","user_header":"https://static001.geekbang.org/account/avatar/00/17/e6/cd/bf5e928c.jpg","comment_is_top":false,"comment_ctime":1570009821,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1570009821","product_id":100026901,"comment_content":"list和tuple的初始化，我执行下来差别为什么没有那么大？usec和nsec代表什么？<br>C:\\Users\\Thinkpad&gt;python -m timeit &#39;x=(1,2,3,4,5,6)&#39;<br>100000000 loops, best of 3: 0.00609 usec per loop<br>C:\\Users\\Thinkpad&gt;python -m timeit &#39;x=[1,2,3,4,5,6]&#39;<br>100000000 loops, best of 3: 0.00597 usec per loop","like_count":0},{"had_liked":false,"id":133612,"user_name":"Maker","can_delete":false,"product_type":"c1","uid":1385569,"ip_address":"","ucode":"1193AA6126A596","user_header":"https://static001.geekbang.org/account/avatar/00/15/24/61/ab88f481.jpg","comment_is_top":false,"comment_ctime":1568621215,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568621215","product_id":100026901,"comment_content":"python -m timeit &#39;el=list()&#39;<br>50000000 loops, best of 5: 7.19 nsec per loop<br><br>python -m timeit &#39;el=[]&#39;<br>50000000 loops, best of 5: 7.25 nsec per loop<br><br>python -m timeit &#39;el=()&#39;<br>50000000 loops, best of 5: 7.21 nsec per loop<br><br>我电脑第一次测试是list()创建列表最快<br>但反复测试几遍，情况都不一样，有时候 [] 是最快的<br>有时候是() 最快，但基本时间上相差几个纳秒<br>所以我感觉，这个跟硬件本身的配置有关<br>经过测试，得出两种创建空列表的方式效率上基本一致<br>出于编写方便，优选 [] 创建","like_count":0},{"had_liked":false,"id":133563,"user_name":"Mr_No爱学习","can_delete":false,"product_type":"c1","uid":1663943,"ip_address":"","ucode":"C77D85C24A6ECF","user_header":"https://static001.geekbang.org/account/avatar/00/19/63/c7/4f10c53c.jpg","comment_is_top":false,"comment_ctime":1568606357,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568606357","product_id":100026901,"comment_content":"windows下初始化测试 两种方式性能相差无几<br>C:\\Users\\jtsh1&gt;python --version<br>Python 3.6.6<br>C:\\Users\\jtsh1&gt;python -m timeit &#39;ep_list=list()&#39;<br>100000000 loops, best of 3: 0.00818 usec per loop<br>C:\\Users\\jtsh1&gt;python -m timeit &#39;ep_list=[]&#39;<br>100000000 loops, best of 3: 0.00811 usec per loop<br>WSL下测试也相差无几<br>zhu@DESKTOP-8IUI6HS:&#47;mnt&#47;c&#47;Windows&#47;system32$ python3 --version<br>Python 3.6.7<br>zhu@DESKTOP-8IUI6HS:&#47;mnt&#47;c&#47;Windows&#47;system32$ python3 -m timeit -s &#39;empty_list=list()&#39;<br>100000000 loops, best of 3: 0.00584 usec per loop<br>zhu@DESKTOP-8IUI6HS:&#47;mnt&#47;c&#47;Windows&#47;system32$ python3 -m timeit -s &#39;empty_list=[]&#39;<br>100000000 loops, best of 3: 0.0058 usec per loop<br>另外在osx10下py3.7执行差别比较大，list()111 nsec， [] 24.2 nsec，为何windows下列表初始化两种方式性能差不多，而且都比osx快上不少","like_count":0},{"had_liked":false,"id":133546,"user_name":"自由民","can_delete":false,"product_type":"c1","uid":1346236,"ip_address":"","ucode":"435C67531697F1","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/bc/cb39ed38.jpg","comment_is_top":false,"comment_ctime":1568601794,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1568601794","product_id":100026901,"comment_content":"思考题<br>1.第二种更优，它会分配更大的空间，不必每次插入都重新分配。而第一种则不会分配更大的空间。<br>2.平时主要用列表，元组用得很少，只在要防止数据被修改时才用元组。主要还是受C语言的影响，把列表当C语言数组用了。<br>总结:列表和元组是Python的两个基本的数据结构，区别是列表是动态的，可以增删。而元组是静态的。从效率上来说，元组要更高一些。要注意二者的使用场景。猜一下，列表背后的实现应该是链表或双链表，而元组的实现方式应该是线性表，用c语言的数组之类的结构来实现的。<br>实操:在手机上测试了，效率问题跟课程的结果差不多<br>$ python -m timeit &quot;x = (1,2,3,4,5,6)&quot;<br>10000000 loops, best of 5: 35 nsec per loop<br>$ python -m timeit &quot;x = [1,2,3,4,5,6]&quot;<br>2000000 loops, best of 5: 161 nsec per loop<br>元组操作比列表快5倍。<br>python -m timeit &quot;x = (1,2,3,4,5,6)&quot; &quot;y = x[3]&quot;5000000 loops, best of 5: 94.2 nsec per loop<br>$ python -m timeit &quot;x = [1,2,3,4,5,6]&quot; &quot;y = x[3]&quot;1000000 loops, best of 5: 245 nsec per loop<br>索引操作却与教程不同，元组还是比列表快近三倍。<br>但是变量所占内存的大小都比教程里的结果少一倍，例如:<br>    l = [1,2,3]<br>    tup = (1,2,3)<br>    print(l.__sizeof__()) #32<br>    print(tup.__sizeof__()) #24<br>结果与教程里相比小了一倍，是cup还是Python解释器的差异的结果？查了一下我的手机CPU型号是MSM8998(蛟龙835)，是64位的啊。<br>Python信息<br>&#47;storage&#47;emulated&#47;0 $ python --version<br>Python 3.6.2                                                &#47;storage&#47;emulated&#47;0 $<br>不知道是何原因？<br>最后，建了一个github仓库，所有练习实操都会传上去: <br>https:&#47;&#47;github.com&#47;zwdnet&#47;PythonPractice","like_count":0,"discussions":[{"author":{"id":1346236,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8a/bc/cb39ed38.jpg","nickname":"自由民","note":"","ucode":"435C67531697F1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":12857,"discussion_content":"看了之前的留言，第一题我错了，应该是调用函数的消耗使第一种更慢。另外列表的实现也是数组而不是链表。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568603053,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124731,"user_name":"技术修行者","can_delete":false,"product_type":"c1","uid":1013147,"ip_address":"","ucode":"28CA41A1214D6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/9b/611e74ab.jpg","comment_is_top":false,"comment_ctime":1565954230,"is_pvip":true,"discussion_count":0,"race_medal":5,"score":"1565954230","product_id":100026901,"comment_content":"1. 元组和列表做索引操作时的性能差距挺大的。<br>%%timeit<br>x=(1, 2, 3, 4, 5, 6)<br>y=x[3]<br>32.1 ns ± 1.21 ns per loop (mean ± std. dev. of 7 runs, 10000000 loops each)<br><br>%%timeit<br>x=[1, 2, 3, 4, 5, 6]<br>y=x[3]<br>74.5 ns ± 2.46 ns per loop (mean ± std. dev. of 7 runs, 10000000 loops each)<br><br>从上面的测试可以看到，执行索引操作，元组要比列表快50%左右。<br><br>2. 不同方式初始化列表的差别，[] 要比list()快很多。<br>%%timeit<br>l = list()<br>75 ns ± 2.19 ns per loop (mean ± std. dev. of 7 runs, 10000000 loops each)<br><br>%%timeit<br>l = []<br>21.8 ns ± 1.72 ns per loop (mean ± std. dev. of 7 runs, 10000000 loops each)","like_count":0},{"had_liked":false,"id":116950,"user_name":"橙子不知橘子味","can_delete":false,"product_type":"c1","uid":1195065,"ip_address":"","ucode":"6FDB869D975D59","user_header":"https://static001.geekbang.org/account/avatar/00/12/3c/39/44b0359a.jpg","comment_is_top":false,"comment_ctime":1563944379,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563944379","product_id":100026901,"comment_content":"在有元素增加操作时，如果出现内存不够，一次就会分配出四个元素的空间？ 四个元素的空间是最小分配单位？是这个意思吗，老师","like_count":0},{"had_liked":false,"id":110788,"user_name":"gugu","can_delete":false,"product_type":"c1","uid":1346069,"ip_address":"","ucode":"A87EFB95B43CE7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/QEqicKQS1lCunSfI7tIcfhTOb0GjIRRIiav2PBc4ZUvstNXhP2LISfhwwRqSJjwbpupMeaqclUGKc78lfS7JVmUQ/132","comment_is_top":false,"comment_ctime":1562335138,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562335138","product_id":100026901,"comment_content":"列表的每个元素是8个字节，看起来并没有额外存储指针。另一个佐证就是链表无法支持下标索引。<br><br>所以我认为python的列表List更像C++的vector，而不是链表list。相应地，虽然list.append()很快，但list.insert()时间复杂度还是O(N)。","like_count":0},{"had_liked":false,"id":109952,"user_name":"彼埃罗","can_delete":false,"product_type":"c1","uid":1595155,"ip_address":"","ucode":"EDC5CAFA680CB2","user_header":"https://static001.geekbang.org/account/avatar/00/18/57/13/afa196d9.jpg","comment_is_top":false,"comment_ctime":1562139131,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562139131","product_id":100026901,"comment_content":"总的来说 元组没啥用， 列表使用方便，牺牲些许内存，统一使用列表要方便多了","like_count":0},{"had_liked":false,"id":107627,"user_name":"Michael","can_delete":false,"product_type":"c1","uid":1118976,"ip_address":"","ucode":"35F4FFAC4A4B15","user_header":"https://static001.geekbang.org/account/avatar/00/11/13/00/a4a2065f.jpg","comment_is_top":false,"comment_ctime":1561567254,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561567254","product_id":100026901,"comment_content":"想请问一下老师，list 的扩容策略？","like_count":0},{"had_liked":false,"id":106771,"user_name":"赵鹏举","can_delete":false,"product_type":"c1","uid":1260182,"ip_address":"","ucode":"B3785788D6176C","user_header":"https://static001.geekbang.org/account/avatar/00/13/3a/96/9fddfb4a.jpg","comment_is_top":false,"comment_ctime":1561385504,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561385504","product_id":100026901,"comment_content":"麻烦问下老师，64位机器上，<br>对于[]，sizeof为40包含了哪些字段？<br>对于()，sizeof为24包含了哪些字段？","like_count":0},{"had_liked":false,"id":105664,"user_name":"红娟","can_delete":false,"product_type":"c1","uid":1164879,"ip_address":"","ucode":"F5988451FC91A6","user_header":"https://static001.geekbang.org/account/avatar/00/11/c6/4f/0c215abf.jpg","comment_is_top":false,"comment_ctime":1561071742,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561071742","product_id":100026901,"comment_content":"列表和元祖<br>列表，长度可变，可以随意插入元素；<br>运行效率偏低","like_count":0},{"had_liked":false,"id":105465,"user_name":"Ben","can_delete":false,"product_type":"c1","uid":1252353,"ip_address":"","ucode":"70351D4FAE47F7","user_header":"https://static001.geekbang.org/account/avatar/00/13/1c/01/5aaaf5b6.jpg","comment_is_top":false,"comment_ctime":1561008261,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561008261","product_id":100026901,"comment_content":"reversed()函数: 列表返回迭代器, 元组返回对象","like_count":0},{"had_liked":false,"id":102863,"user_name":"知更鸟","can_delete":false,"product_type":"c1","uid":1543575,"ip_address":"","ucode":"4A6129E331BC46","user_header":"https://static001.geekbang.org/account/avatar/00/17/8d/97/866cdfc6.jpg","comment_is_top":false,"comment_ctime":1560316555,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560316555","product_id":100026901,"comment_content":"“由于列表是动态的，所以它需要存储指针，来指向对应的元素”这句话我不太了解，难道说元祖就不需要通过指针来索引元素吗","like_count":0},{"had_liked":false,"id":102238,"user_name":"jini_ll","can_delete":false,"product_type":"c1","uid":1153999,"ip_address":"","ucode":"572E622E8C6E7E","user_header":"","comment_is_top":false,"comment_ctime":1560167507,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560167507","product_id":100026901,"comment_content":"老师，在哪里能查到详细的语法说明文档？","like_count":0},{"had_liked":false,"id":101609,"user_name":"slinv","can_delete":false,"product_type":"c1","uid":1263629,"ip_address":"","ucode":"119608DB2FFCB1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/8tsib9FYEejY703Lhw5yMBNrUia7S6lMnMtWdSS5Mctu02dJ9KU5QLZwXLjJhK5quWERqBLlxQUiau2YlFEYricJsg/132","comment_is_top":false,"comment_ctime":1559883050,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559883050","product_id":100026901,"comment_content":"老实说一直没想过两个constructors的效率，去time了一下<br>python -m timeit &#39;empty_list = list()&#39;<br>5000000 loops, best of 5: 67.4 nsec per loop<br>-------------------------<br>python -m timeit &#39;empty_list = []&#39;<br>10000000 loops, best of 5: 19.6 nsec per loop<br><br>发现差别巨大。平时用list()来转换iterables，用[]来用list comprehension操作，还真没有仔细想过空列表constructor的区别。所以尝试看看源码，感觉constructor应该是这里<br>https:&#47;&#47;github.com&#47;python&#47;cpython&#47;blob&#47;664fe3996f7e05ae351526f02b21504bb065bcf8&#47;Objects&#47;listobject.c#L2696<br>而list literal 建empty list应该是<br>https:&#47;&#47;github.com&#47;python&#47;cpython&#47;blob&#47;664fe3996f7e05ae351526f02b21504bb065bcf8&#47;Objects&#47;listobject.c#L2696<br>不过我也有可能找错了。。如果我找对了那时间差只能是assert造成了，constructor里的assert可能拖慢了速度。<br>至于内部肯定是array了，py list就像c++的vector一样，动态扩展和overallocate","like_count":0},{"had_liked":false,"id":100049,"user_name":"山石尹口","can_delete":false,"product_type":"c1","uid":1053346,"ip_address":"","ucode":"0BAAEE2FD579B5","user_header":"https://static001.geekbang.org/account/avatar/00/10/12/a2/d18e6394.jpg","comment_is_top":false,"comment_ctime":1559401682,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1559401682","product_id":100026901,"comment_content":"list和tuple最主要的区别应该是语义上的，list的语义是容器，里面的项是元素，每个元素描述的是同一个事物；tuple的语义是类型，里面的项是成员，每个成员描述的是不同事物。虽然在实现上，两者在某些情况下可以混用，但如果用错了场景，即使程序能跑通，也不能认为程序是正确的。","like_count":0},{"had_liked":false,"id":99977,"user_name":"至尊宝","can_delete":false,"product_type":"c1","uid":1389537,"ip_address":"","ucode":"DA24D200054026","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqPljnIrvyGQyBhJ3lnqJPGmvO6HrD4MzhjSerjNEiagic6QjGeSIR8AG0F8OoxYGMFWjQrE4ZInxJQ/132","comment_is_top":false,"comment_ctime":1559375837,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559375837","product_id":100026901,"comment_content":"打卡第三天 <br>","like_count":0},{"had_liked":false,"id":98838,"user_name":"Joe","can_delete":false,"product_type":"c1","uid":1525880,"ip_address":"","ucode":"19F3F2F53549A4","user_header":"https://static001.geekbang.org/account/avatar/00/17/48/78/dc3bb94f.jpg","comment_is_top":false,"comment_ctime":1559103011,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559103011","product_id":100026901,"comment_content":"列表和元组是python的数据类型还是数据结构？数据结构不是指的是队列，栈，堆这些吗？","like_count":0},{"had_liked":false,"id":98810,"user_name":"Aspirin","can_delete":false,"product_type":"c1","uid":1141751,"ip_address":"","ucode":"858B551CF0C2F4","user_header":"https://static001.geekbang.org/account/avatar/00/11/6b/f7/3a3b82c2.jpg","comment_is_top":false,"comment_ctime":1559099146,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559099146","product_id":100026901,"comment_content":"在Terminal中测试结果是`empty_list = []`的方式比`empty_list = list()`的方法快许多，原因是函数调用需要额外开销造成的吧？另外，在jupyter的cell中`timeit`时，两者消耗时间很接近，并且都比在terminal中要快，可能jupyter notebook做了优化？？？还需要进一步探讨","like_count":0},{"had_liked":false,"id":98567,"user_name":"AI悦创","can_delete":false,"product_type":"c1","uid":1525309,"ip_address":"","ucode":"D1007711CB0A79","user_header":"https://static001.geekbang.org/account/avatar/00/17/46/3d/55653953.jpg","comment_is_top":false,"comment_ctime":1559032019,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1559032019","product_id":100026901,"comment_content":"：增加 &#47; 删除的时间复杂度均为 O(1)。其中O（1）是什么意思？","like_count":0},{"had_liked":false,"id":98358,"user_name":"阿丽","can_delete":false,"product_type":"c1","uid":1170970,"ip_address":"","ucode":"C01D32E7165302","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erJFlHhylrbLANtehiaX50wgVa2Z1ibQAdLpgyW4gCpEyOKEI9bPNZZBiabrP2oCleZWc2KKyKADz8tg/132","comment_is_top":false,"comment_ctime":1558967263,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558967263","product_id":100026901,"comment_content":"老师，是不是可以得出这样的结论：python里所有() {} 类似这样的初始都优于调用函数初始化？","like_count":0},{"had_liked":false,"id":98238,"user_name":"极客中心","can_delete":false,"product_type":"c1","uid":1542363,"ip_address":"","ucode":"F1CE36E3E47A3C","user_header":"https://static001.geekbang.org/account/avatar/00/17/88/db/adad4661.jpg","comment_is_top":false,"comment_ctime":1558939274,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1558939274","product_id":100026901,"comment_content":"list(reversed(tup)) <br>我运行这条命令，报错。  是为什么了？","like_count":0,"discussions":[{"author":{"id":1525828,"avatar":"","nickname":"Geek_鱼","note":"","ucode":"38517BA2598458","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":80,"discussion_content":"tup = (1, 2, 3, 4, 5)\nprint(list(reversed(tup)))\n这样写","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561086865,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97949,"user_name":"皮皮侠","can_delete":false,"product_type":"c1","uid":1258402,"ip_address":"","ucode":"04205990C1DE1F","user_header":"https://static001.geekbang.org/account/avatar/00/13/33/a2/6c0ffc15.jpg","comment_is_top":false,"comment_ctime":1558851143,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558851143","product_id":100026901,"comment_content":"老师，初始化一个相同元素的列表和元组分别所需的时间，我在jupyter上运行，元组比列表效率更高，这跟具体环境有关么？<br>timeit &#39;x=(1,2,3,4,5,6)&#39;<br>9.77 ns ± 0.385 ns per loop (mean ± std. dev. of 7 runs, 100000000 loops each)<br>timeit &#39;x=[1,2,3,4,5,6]&#39;<br>8.83 ns ± 0.556 ns per loop (mean ± std. dev. of 7 runs, 100000000 loops each)","like_count":0},{"had_liked":false,"id":97886,"user_name":"Steven","can_delete":false,"product_type":"c1","uid":1495454,"ip_address":"","ucode":"BC5B33911FEC46","user_header":"https://static001.geekbang.org/account/avatar/00/16/d1/9e/fe7bc8df.jpg","comment_is_top":false,"comment_ctime":1558828247,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558828247","product_id":100026901,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":97636,"user_name":"隰有荷","can_delete":false,"product_type":"c1","uid":1357944,"ip_address":"","ucode":"2BE9A32AB28963","user_header":"https://static001.geekbang.org/account/avatar/00/14/b8/78/2828195b.jpg","comment_is_top":false,"comment_ctime":1558724384,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558724384","product_id":100026901,"comment_content":"你好，我有个问题不太明白:<br><br>文中 ，&quot;上面的例子，大概描述了列表空间分配的过程。我们可以看到，为了减小每次增加 &#47; 删减操作时空间分配的开销，Python 每次分配空间时都会额外多分配一些，这样的机制（over-allocating）保证了其操作的高效性：增加 &#47; 删除的时间复杂度均为 O(1)。&quot;<br>当我们在列表中插入一个元素，那该位置后面的所有元素不都要向后移动一位吗，同理，删除一个元素时，删除处之后的所有元素也要向前移动一位，假设这个列表有n个元素，那么这个时间复杂度不是O(n)吗？","like_count":0},{"had_liked":false,"id":97616,"user_name":"Lee","can_delete":false,"product_type":"c1","uid":1283776,"ip_address":"","ucode":"C7A13CA2030D5A","user_header":"https://static001.geekbang.org/account/avatar/00/13/96/c0/3ae19f08.jpg","comment_is_top":false,"comment_ctime":1558712734,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558712734","product_id":100026901,"comment_content":"python -m timeit -s &#39;x=[]&#39;<br>100000000 loops, best of 3: 0.00799 usec per loop<br><br>python -m timeit -s &#39;x=list()&#39;<br>100000000 loops, best of 3: 0.00859 usec per loop<br><br>实测 用[] 创建列表的速度更快","like_count":0},{"had_liked":false,"id":97556,"user_name":"Jove","can_delete":false,"product_type":"c1","uid":1012919,"ip_address":"","ucode":"39C09911EEFE0F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/74/b7/169fa6fe.jpg","comment_is_top":false,"comment_ctime":1558694887,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558694887","product_id":100026901,"comment_content":"请问，列表、元组的元素在内存中的地址是连续的吗？","like_count":0},{"had_liked":false,"id":97548,"user_name":"羽球码农","can_delete":false,"product_type":"c1","uid":1546687,"ip_address":"","ucode":"63D4290291A2A3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erPWSp3arBicQmlYFsPxOTImLDOQk5RYgianH1C4jf3zrxYI8ggwcXq50LQy45x3D87lYGE4EJfa43Q/132","comment_is_top":false,"comment_ctime":1558691260,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558691260","product_id":100026901,"comment_content":"如果[]是内置C函数效率更高，那是不是同理，创建元组应该用() ？但是创建集合和字典的话，是不是都用{}呢？","like_count":0},{"had_liked":false,"id":97481,"user_name":"小豹子","can_delete":false,"product_type":"c1","uid":1346267,"ip_address":"","ucode":"972F3E6BF0FDEA","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/db/76ab84c6.jpg","comment_is_top":false,"comment_ctime":1558681176,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558681176","product_id":100026901,"comment_content":"老师，我不太理解“列表是动态的，所以它需要存储指针，来指向对应的元素”这段话，能具体解释下吗？ ","like_count":0},{"had_liked":false,"id":97413,"user_name":"稻香","can_delete":false,"product_type":"c1","uid":1359605,"ip_address":"","ucode":"7D4E03ACC38392","user_header":"https://static001.geekbang.org/account/avatar/00/14/be/f5/e98a2199.jpg","comment_is_top":false,"comment_ctime":1558666187,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558666187","product_id":100026901,"comment_content":"元组的初始化速度，要比列表快 5 倍？怎们看出来的？timeit以前没用过，执行结果是怎么看的？<br><br>python3 -m timeit &#39;x=(1,2,3,4,5,6)&#39;<br>20000000 loops, best of 5: 9.97 nsec per loop<br>python3 -m timeit &#39;x=[1,2,3,4,5,6]&#39;<br>5000000 loops, best of 5: 50.1 nsec per loop<br>","like_count":0},{"had_liked":false,"id":97298,"user_name":"Eline","can_delete":false,"product_type":"c1","uid":1164589,"ip_address":"","ucode":"936EF16B8C08FB","user_header":"https://static001.geekbang.org/account/avatar/00/11/c5/2d/3f658d3f.jpg","comment_is_top":false,"comment_ctime":1558638403,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558638403","product_id":100026901,"comment_content":"老师，帮忙看下这个问题：<br>---Anaconda1.9.7内置的python3.7.3 jupyter输出效果：<br>tup<br>Out[141]:<br>(3, 2, 3, 7, 8, 1, 5)<br>In [144]:<br>list(reversed(tup))<br>---------------------------------------------------------------------------<br>TypeError                                 Traceback (most recent call last)<br>&lt;ipython-input-144-8c6248ea8387&gt; in &lt;module&gt;<br>----&gt; 1 list(reversed(tup))<br><br>TypeError: &#39;list&#39; object is not callable<br><br>---3.6.8命令行输出效果：<br>C:\\Users\\jhz_1&gt;python<br>Python 3.6.8 (tags&#47;v3.6.8:3c6b436a57, Dec 24 2018, 00:16:47) [MSC v.1916 64 bit (AMD64)] on win32<br>Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.<br>&gt;&gt;&gt; tup=(3, 2, 3, 7, 8, 1, 5)<br>&gt;&gt;&gt; tup<br>(3, 2, 3, 7, 8, 1, 5)<br>&gt;&gt;&gt; list(reversed(tup))<br>[5, 1, 8, 7, 3, 2, 3]<br>&gt;&gt;&gt;","like_count":0},{"had_liked":false,"id":97287,"user_name":"Eline","can_delete":false,"product_type":"c1","uid":1164589,"ip_address":"","ucode":"936EF16B8C08FB","user_header":"https://static001.geekbang.org/account/avatar/00/11/c5/2d/3f658d3f.jpg","comment_is_top":false,"comment_ctime":1558629002,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558629002","product_id":100026901,"comment_content":"留言为啥不能粘贴图片？<br>老师，我看了下，计算初始化相同元素的列表和元祖时间是差不多的。如下，<br>C:\\Users\\jhz_1&gt;python<br>Python 3.6.8 (tags&#47;v3.6.8:3c6b436a57, Dec 24 2018, 00:16:47) [MSC v.1916 64 bit (AMD64)] on win32<br>Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.<br>&gt;&gt;&gt;<br>C:\\Users\\jhz_1&gt;python -m timeit &#39;x=(1,2,3,4,5,6)&#39;<br>100000000 loops, best of 3: 0.00867 usec per loop<br><br>C:\\Users\\jhz_1&gt;python -m timeit &#39;x=[1,2,3,4,5,6]&#39;<br>100000000 loops, best of 3: 0.00698 usec per loop<br><br>C:\\Users\\jhz_1&gt;python -m timeit -s &#39;x=[1,2,3,4,5,6]&#39; &#39;y=x[3]&#39;<br>100000000 loops, best of 3: 0.00694 usec per loop<br><br>C:\\Users\\jhz_1&gt;python -m timeit -s &#39;x=(1,2,3,4,5,6)&#39; &#39;y=x[3]&#39;<br>100000000 loops, best of 3: 0.00745 usec per loop","like_count":0},{"had_liked":false,"id":96795,"user_name":"SCAR","can_delete":false,"product_type":"c1","uid":1031209,"ip_address":"","ucode":"38C0927FA3C5FC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bc/29/022905e6.jpg","comment_is_top":false,"comment_ctime":1558508646,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558508646","product_id":100026901,"comment_content":"第一题：<br>Answer: B  <br>要点：1 ，两者的初始化后列表开辟的空间是一样的<br>           2，时间上的开销，list()要高于[],因为list()是python实现的函数，有些的操作是[]没有的，比如产生一个list的副本，而[]是c写的内置函数，可以直接被调用，效率高速度要快。<br>扩展：对于创建空的元组,字典，集合等来说也是如此<br>第二题：<br>本身我是做工业类软件，比如某个控制器的一些不变的要素用元组，可变的时间序列如温度用列表。","like_count":0},{"had_liked":false,"id":96616,"user_name":"fdconan","can_delete":false,"product_type":"c1","uid":1244596,"ip_address":"","ucode":"01C71C6E9FD1E4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLv9HJIW4OACkjlwOQJ9cU7HzvaDFYkACWCib2lzOMef9ZiaGDTVFqjPicpVK5KDRbBRVGGHrMHQO1Rw/132","comment_is_top":false,"comment_ctime":1558479268,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558479268","product_id":100026901,"comment_content":"有两个疑问。<br>1.计算初始化的第一个例子，我自己在命令行执行，测试结果是初始化时间列表和元组几乎一样。为什么老师的例子相差这么大，有5倍之差？毕竟只是初始化一个只有5个元素的列表或者元组。<br><br>2.空列表默认40字节的例子，自己也实验了一下，跟老师结果是一样的。问题是，为啥list不提供指定初始化大小的函数，毕竟现实中有预先知道列表大小的场景，然后在循环里面append元素，指定大小就不需要频繁扩容了，自己做实验加第5个int类型就扩容一次32。加第9个int类型是扩容一次64，看来扩容的字节数也是动态，难道这种扩容算法比预先分配空间的性能更好么？毕竟扩容涉及到元素的拷贝过程啊。","like_count":0},{"had_liked":false,"id":96561,"user_name":"William","can_delete":false,"product_type":"c1","uid":1241365,"ip_address":"","ucode":"4499F99B180102","user_header":"https://static001.geekbang.org/account/avatar/00/12/f1/15/8fcf8038.jpg","comment_is_top":false,"comment_ctime":1558449587,"is_pvip":true,"discussion_count":0,"race_medal":2,"score":"1558449587","product_id":100026901,"comment_content":"思考题：[]比list()函数快。<br>拓展知识： timeit模块。","like_count":0},{"had_liked":false,"id":96545,"user_name":"郭杰","can_delete":false,"product_type":"c1","uid":1139077,"ip_address":"","ucode":"8A14FC047A679B","user_header":"https://static001.geekbang.org/account/avatar/00/11/61/85/6accd013.jpg","comment_is_top":false,"comment_ctime":1558445561,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558445561","product_id":100026901,"comment_content":"平时工作中元祖用的很少，用列表比较多","like_count":0},{"had_liked":false,"id":96544,"user_name":"郭杰","can_delete":false,"product_type":"c1","uid":1139077,"ip_address":"","ucode":"8A14FC047A679B","user_header":"https://static001.geekbang.org/account/avatar/00/11/61/85/6accd013.jpg","comment_is_top":false,"comment_ctime":1558445502,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558445502","product_id":100026901,"comment_content":"empty_list = list()和empty_list = []我会选择后面一个，第一个还转化了一下，有一个过程。<br><br>","like_count":0},{"had_liked":false,"id":96542,"user_name":"郭杰","can_delete":false,"product_type":"c1","uid":1139077,"ip_address":"","ucode":"8A14FC047A679B","user_header":"https://static001.geekbang.org/account/avatar/00/11/61/85/6accd013.jpg","comment_is_top":false,"comment_ctime":1558445231,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558445231","product_id":100026901,"comment_content":"macdeMacBook-Pro:~ macbookpro$ python3 -m timeit &#39;x=(1,2,3,4,5,6)&#39;<br>100000000 loops, best of 3: 0.0123 usec per loop<br>macdeMacBook-Pro:~ macbookpro$ <br>macdeMacBook-Pro:~ macbookpro$ <br>macdeMacBook-Pro:~ macbookpro$ <br>macdeMacBook-Pro:~ macbookpro$ <br>macdeMacBook-Pro:~ macbookpro$ python3 -m timeit &#39;x=[1,2,3,4,5,6]&#39;<br>10000000 loops, best of 3: 0.0647 usec per loop<br><br>跟你哪个-s效果一样","like_count":0},{"had_liked":false,"id":96370,"user_name":"风午","can_delete":false,"product_type":"c1","uid":1527144,"ip_address":"","ucode":"5840C51FF26D58","user_header":"https://static001.geekbang.org/account/avatar/00/17/4d/68/d7d447cf.jpg","comment_is_top":false,"comment_ctime":1558404769,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558404769","product_id":100026901,"comment_content":"老师，空列表增加了一个元素后，字节数变成72,算出来可以增加4个元素，不明白这块72-40之后为啥是除以8呢，8代表啥？小白开始学习，基础有点差，还望老师指点😊","like_count":0},{"had_liked":false,"id":96357,"user_name":"vivien_zh","can_delete":false,"product_type":"c1","uid":1137491,"ip_address":"","ucode":"3C029219C90C14","user_header":"https://static001.geekbang.org/account/avatar/00/11/5b/53/200fda62.jpg","comment_is_top":false,"comment_ctime":1558402704,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558402704","product_id":100026901,"comment_content":"老师你好，笔记本上执行索引操作：<br>➜  &gt;python3 -m timeit &#39;x=[1,2,3,4]&#39; &#39;y=x[3]&#39;<br>5000000 loops, best of 5: 73.1 nsec per loop<br>➜ &gt;python3 -m timeit &#39;x=(1,2,3,4)&#39; &#39;y=x[3]&#39;<br>10000000 loops, best of 5: 32.1 nsec per loop<br>元组和列表的索引操作差距有点大<br><br>python 版本信息如下：<br>Python 3.7.3 (default, Mar 27 2019, 09:23:15)<br>[Clang 10.0.1 (clang-1001.0.46.3)] on darwin<br><br>笔记本为<br>Mac 2018款 i5 16G<br><br>可以帮忙解答下疑惑吗","like_count":0},{"had_liked":false,"id":96241,"user_name":"志偉?。","can_delete":false,"product_type":"c1","uid":1529370,"ip_address":"","ucode":"0952AEAE2082CD","user_header":"https://static001.geekbang.org/account/avatar/00/17/56/1a/5c206f71.jpg","comment_is_top":false,"comment_ctime":1558362546,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558362546","product_id":100026901,"comment_content":"C:\\Users\\Administrator.DESKTOP-C1CE68H&gt;python -m timeit &#39;x=(1,2,3,4,5,6)&#39;<br>50000000 loops, best of 5: 5.55 nsec per loop<br><br>C:\\Users\\Administrator.DESKTOP-C1CE68H&gt;python -m timeit &#39;x=[1,2,3,4,5,6]&#39;<br>50000000 loops, best of 5: 5.56 nsec per loop<br><br>C:\\Users\\Administrator.DESKTOP-C1CE68H&gt;python -m timeit -s &#39;x=[1,2,3,4,5,6]&#39; &#39;y=x[3]&#39;<br>50000000 loops, best of 5: 5.58 nsec per loop<br><br>C:\\Users\\Administrator.DESKTOP-C1CE68H&gt;python -m timeit -s &#39;x=(1,2,3,4,5,6)&#39; &#39;y=x[3]&#39;<br>50000000 loops, best of 5: 5.59 nsec per loop<br><br>我的结果是差不多的？","like_count":0},{"had_liked":false,"id":96124,"user_name":"黄矢","can_delete":false,"product_type":"c1","uid":1136224,"ip_address":"","ucode":"7ADD89AB9380AD","user_header":"https://static001.geekbang.org/account/avatar/00/11/56/60/fb5ca9e5.jpg","comment_is_top":false,"comment_ctime":1558338028,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558338028","product_id":100026901,"comment_content":"[]更快，因为list()还多了一个调用函数的过程，在创建列表时用[]，在将数据转为列表时，用list()，如list((1,2,3))","like_count":0},{"had_liked":false,"id":96099,"user_name":"oldman","can_delete":false,"product_type":"c1","uid":1164780,"ip_address":"","ucode":"31024C1146F3D1","user_header":"https://static001.geekbang.org/account/avatar/00/11/c5/ec/54d560d9.jpg","comment_is_top":false,"comment_ctime":1558330912,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558330912","product_id":100026901,"comment_content":"不能上传截图<br>python -m timeit &#39;x=(1,2,3,4,5,6)&#39;<br>100000000 loops, best of 3: 0.00645 usec per loop<br><br>python -m timeit &#39;x=[1,2,3,4,5,6]&#39;<br>100000000 loops, best of 3: 0.00646 usec per loop<br><br>感觉差别没有那么大啊","like_count":0},{"had_liked":false,"id":95998,"user_name":"睡着了去做梦","can_delete":false,"product_type":"c1","uid":1171280,"ip_address":"","ucode":"1B553D695BC70D","user_header":"https://static001.geekbang.org/account/avatar/00/11/df/50/ed811610.jpg","comment_is_top":false,"comment_ctime":1558307298,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558307298","product_id":100026901,"comment_content":"(venv) C:\\Users\\jyd\\PycharmProjects\\untitled14&gt;python -m timeit &#39;x=[1,2,3,4,5,6]&#39;<br>100000000 loops, best of 3: 0.0101 usec per loop<br><br>(venv) C:\\Users\\jyd\\PycharmProjects\\untitled14&gt;python -m timeit &#39;a=(1,2,3,4,5,6)&#39;<br>100000000 loops, best of 3: 0.0102 usec per loop<br><br>(venv) C:\\Users\\jyd\\PycharmProjects\\untitled14&gt;python --version<br>Python 3.6.1<br><br>我用python3.6.1试的，元组比列表还有耗时长一点","like_count":0},{"had_liked":false,"id":95988,"user_name":"杨树鹏","can_delete":false,"product_type":"c1","uid":1223137,"ip_address":"","ucode":"446D56DE640127","user_header":"https://static001.geekbang.org/account/avatar/00/12/a9/e1/f5206700.jpg","comment_is_top":false,"comment_ctime":1558286230,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558286230","product_id":100026901,"comment_content":"(base) C:\\Users\\keya&gt;python -m timeit &#39;x=(1,2,3,4,5,6)&#39;<br>50000000 loops, best of 5: 7.53 nsec per loop<br><br>(base) C:\\Users\\keya&gt;python -m timeit &#39;x=[1,2,3,4,5,6]&#39;<br>50000000 loops, best of 5: 7.53 nsec per loop<br><br>(base) C:\\Users\\keya&gt;python -m timeit &#39;empty_list = list()&#39;<br>Traceback (most recent call last):<br>  File &quot;C:\\Users\\keya\\AppData\\Local\\Continuum\\anaconda3\\lib\\runpy.py&quot;, line 193, in _run_module_as_main<br>    &quot;__main__&quot;, mod_spec)<br>  File &quot;C:\\Users\\keya\\AppData\\Local\\Continuum\\anaconda3\\lib\\runpy.py&quot;, line 85, in _run_code<br>    exec(code, run_globals)<br>  File &quot;C:\\Users\\keya\\AppData\\Local\\Continuum\\anaconda3\\lib\\timeit.py&quot;, line 374, in &lt;module&gt;<br>    sys.exit(main())<br>  File &quot;C:\\Users\\keya\\AppData\\Local\\Continuum\\anaconda3\\lib\\timeit.py&quot;, line 313, in main<br>    t = Timer(stmt, setup, timer)<br>  File &quot;C:\\Users\\keya\\AppData\\Local\\Continuum\\anaconda3\\lib\\timeit.py&quot;, line 121, in __init__<br>    compile(stmtprefix + stmt, dummy_src_name, &quot;exec&quot;)<br>  File &quot;&lt;timeit-src&gt;&quot;, line 2<br>    &#39;empty_list<br>              ^<br>SyntaxError: EOL while scanning string literal<br><br>(base) C:\\Users\\keya&gt;python -m timeit &#39;empty_list = []&#39;<br>Traceback (most recent call last):<br>  File &quot;C:\\Users\\keya\\AppData\\Local\\Continuum\\anaconda3\\lib\\runpy.py&quot;, line 193, in _run_module_as_main<br>    &quot;__main__&quot;, mod_spec)<br>  File &quot;C:\\Users\\keya\\AppData\\Local\\Continuum\\anaconda3\\lib\\runpy.py&quot;, line 85, in _run_code<br>    exec(code, run_globals)<br>  File &quot;C:\\Users\\keya\\AppData\\Local\\Continuum\\anaconda3\\lib\\timeit.py&quot;, line 374, in &lt;module&gt;<br>    sys.exit(main())<br>  File &quot;C:\\Users\\keya\\AppData\\Local\\Continuum\\anaconda3\\lib\\timeit.py&quot;, line 313, in main<br>    t = Timer(stmt, setup, timer)<br>  File &quot;C:\\Users\\keya\\AppData\\Local\\Continuum\\anaconda3\\lib\\timeit.py&quot;, line 121, in __init__<br>    compile(stmtprefix + stmt, dummy_src_name, &quot;exec&quot;)<br>  File &quot;&lt;timeit-src&gt;&quot;, line 2<br>    &#39;empty_list<br>              ^<br>SyntaxError: EOL while scanning string literal<br>win10+anaconda3下，速度差别不大。后面的为什么报错呢？","like_count":0},{"had_liked":false,"id":95961,"user_name":"瑄应","can_delete":false,"product_type":"c1","uid":1524660,"ip_address":"","ucode":"7FDF6299AF2FD7","user_header":"https://static001.geekbang.org/account/avatar/00/17/43/b4/a52a7e8e.jpg","comment_is_top":false,"comment_ctime":1558275901,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558275901","product_id":100026901,"comment_content":"老师，问个问题例如：<br>ipset = [ ]<br>for l in log:<br>    if &#39;Failed password&#39; in l:<br>        ip = l.split(&#39; from &#39;)[1].split(&#39; port &#39;)[0]<br>        ipset.append( ip )<br>现在把IP提取出来加入进去了，列表里现在是[192.168.0.1  192.134.13.1]这样的形式。如果想让列表里的形式变成[sshd:192.168.168.1  sshd:192.168.16.1]这样，把元素和字符串拼接，应该要怎么写才对。希望老师能帮忙解答一下","like_count":0},{"had_liked":false,"id":95890,"user_name":"南瓜","can_delete":false,"product_type":"c1","uid":1441789,"ip_address":"","ucode":"0E2F515E085595","user_header":"https://static001.geekbang.org/account/avatar/00/15/ff/fd/df112fd1.jpg","comment_is_top":false,"comment_ctime":1558244936,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558244936","product_id":100026901,"comment_content":"老师，有两个问题请教您。<br>1、两个两亿数据量的list，求交集<br>2、一个两亿数据量的list，一个很少数据量的list，求交集<br>怎样做效率会更高呢？<br>麻烦老师了。<br>","like_count":0},{"had_liked":false,"id":95889,"user_name":"Shawn.C","can_delete":false,"product_type":"c1","uid":1046295,"ip_address":"","ucode":"9CE004D0325320","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/17/f94e987f.jpg","comment_is_top":false,"comment_ctime":1558243825,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1558243825","product_id":100026901,"comment_content":"一般元组用于做类似simpleclass的操作。<br>这种情况下通常会使用namedtuple来进行操作。<br>同时由于元组是不可变的，元组可以用于做字典的key，这个技巧在数据处理中非常实用。","like_count":0},{"had_liked":false,"id":95763,"user_name":"frekoala","can_delete":false,"product_type":"c1","uid":1143422,"ip_address":"","ucode":"A5C77D82692046","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/TKywGoQEbNyWzKHV5xsc1bPvCwlA1NWgHtabsd4xGSibvyWdUjF3Qo8CMhgOjJ6Q83ribh5BxKO8X8xaER2w3Axw/132","comment_is_top":false,"comment_ctime":1558168116,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558168116","product_id":100026901,"comment_content":"In [1]: l = [1,2,3]<br><br>In [2]: l.__sizeof__()<br>Out[2]: 32<br><br>In [3]: tup = (1,2,3)<br><br>In [4]: tup.__sizeof__()<br>Out[4]: 24<br><br>为什么在本地环境执行的结果跟老师执行的不一样？在jupyter上执行的结果就跟老师的一样","like_count":0},{"had_liked":false,"id":95630,"user_name":"Geek_season","can_delete":false,"product_type":"c1","uid":1531424,"ip_address":"","ucode":"9F0317D4C702BF","user_header":"https://static001.geekbang.org/account/avatar/00/17/5e/20/f8a6b369.jpg","comment_is_top":false,"comment_ctime":1558105584,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558105584","product_id":100026901,"comment_content":"思考题1，如果元素都已知，并且不会再进行修改的时候，比如学生姓名表这种的时候可以用到元组<br>而学习成绩可以用列表形式表现。这样对吗？","like_count":0},{"had_liked":false,"id":95614,"user_name":"人间乐园","can_delete":false,"product_type":"c1","uid":1350559,"ip_address":"","ucode":"4A203AB47FCF3C","user_header":"https://static001.geekbang.org/account/avatar/00/14/9b/9f/2cbc2a4f.jpg","comment_is_top":false,"comment_ctime":1558101431,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1558101431","product_id":100026901,"comment_content":"tuple底层按照元素的长度排序，使用链表进行缓存。","like_count":0},{"had_liked":false,"id":95404,"user_name":"昵称已隐藏","can_delete":false,"product_type":"c1","uid":1528423,"ip_address":"","ucode":"0462993893FEE0","user_header":"https://static001.geekbang.org/account/avatar/00/17/52/67/fcc15216.jpg","comment_is_top":false,"comment_ctime":1558053538,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558053538","product_id":100026901,"comment_content":"老师，我在Linux上初始化两者的时间是一样的啊。<br>$ python3 -m timeit -s &#39;x=[1,2,3]&#39;<br>100000000 loops, best of 3: 0.00582 usec per loop<br>$ python3 -m timeit -s &#39;x=(1,2,3)&#39;<br>100000000 loops, best of 3: 0.00581 usec per loop<br>","like_count":0},{"had_liked":false,"id":95342,"user_name":"birdzb","can_delete":false,"product_type":"c1","uid":1164421,"ip_address":"","ucode":"9E204B886F3ECB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqwqU1R58VSRVYRQV1OyDefCtOv7FoZwhwOIDHmJTmCFzIPGevqeZVbiaJzVARabY0uV7UibXXHibgqA/132","comment_is_top":false,"comment_ctime":1558022710,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558022710","product_id":100026901,"comment_content":"Windows平台有cmd和powershell的区别。对于Python -m timeit &#39;empty1=[]&#39; 和Python -m timeit &#39;empty1=list()&#39; 这两个命令，如果是在cmd下执行，那么2个命令的耗时基本一样，如果是在powershell下执行，那么就和老师说的一样，[]更快。<br>至于为啥会有这个区别也不是很清楚。","like_count":0},{"had_liked":false,"id":95202,"user_name":"Mr.L","can_delete":false,"product_type":"c1","uid":1486770,"ip_address":"","ucode":"0E7AD06356771A","user_header":"https://static001.geekbang.org/account/avatar/00/16/af/b2/2aaa36d5.jpg","comment_is_top":false,"comment_ctime":1557984258,"is_pvip":false,"replies":[{"id":"34018","content":"可能是windows平台的问题。试试放到linux或者mac上（前面一章的jupyter云端或者colab试试）","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1557993966,"ip_address":"","comment_id":95202,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557984258","product_id":100026901,"comment_content":"C:\\Users\\Administrator&gt;python -m timeit &#39;x=(1,2,3,4,5,6)&#39;<br>50000000 loops, best of 5: 6.34 nsec per loop<br><br>C:\\Users\\Administrator&gt;python -m timeit &#39;x=[1,2,3,4,5,6]&#39;<br>50000000 loops, best of 5: 6.33 nsec per loop<br>老师 我执行命令的时候发现 带不带索引好像差距都不是很大 我的是Windows64+python3.7环境下执行的 什么原因呢 ","like_count":0,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450368,"discussion_content":"可能是windows平台的问题。试试放到linux或者mac上（前面一章的jupyter云端或者colab试试）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557993966,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95200,"user_name":"jeffery","can_delete":false,"product_type":"c1","uid":1219972,"ip_address":"","ucode":"35E2DAA386FB86","user_header":"https://static001.geekbang.org/account/avatar/00/12/9d/84/171b2221.jpg","comment_is_top":false,"comment_ctime":1557983268,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557983268","product_id":100026901,"comment_content":"timeit测试完 发现时间基本一样 list 0.00797<br>tup 0.0081 怎么才能具体判断list块N倍tup 谢谢","like_count":0},{"had_liked":false,"id":95192,"user_name":"Mr.L","can_delete":false,"product_type":"c1","uid":1486770,"ip_address":"","ucode":"0E7AD06356771A","user_header":"https://static001.geekbang.org/account/avatar/00/16/af/b2/2aaa36d5.jpg","comment_is_top":false,"comment_ctime":1557980429,"is_pvip":false,"replies":[{"id":"34006","content":"什么error贴出来看看？是不是中文输入法的问题","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1557992459,"ip_address":"","comment_id":95192,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557980429","product_id":100026901,"comment_content":"python3 -m timeit &#39;x=(1,2,3,4,5,6)&#39;<br><br>为什么直接执行该语句提示我SyntaxError？","like_count":0,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450364,"discussion_content":"什么error贴出来看看？是不是中文输入法的问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557992459,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95166,"user_name":"豊","can_delete":false,"product_type":"c1","uid":1069119,"ip_address":"","ucode":"2610D927B456CE","user_header":"https://static001.geekbang.org/account/avatar/00/10/50/3f/ddd032bb.jpg","comment_is_top":false,"comment_ctime":1557976837,"is_pvip":true,"replies":[{"id":"34008","content":"可以看第一条留言的回答","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1557992518,"ip_address":"","comment_id":95166,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557976837","product_id":100026901,"comment_content":"小量元素下测试结果：<br># python -mtimeit &#39;x=[1,2,3,4,5]&#39;<br>10000000 loops, best of 3: 0.0778 usec per loop<br># python -mtimeit &#39;x=list([1,2,3,4,5])&#39;<br>1000000 loops, best of 3: 0.312 usec per loop<br>[]的性能是list()的近5倍，个人猜测[]初始化时候复用的缓存中的数据结构而list()则需要重新构造？","like_count":0,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450352,"discussion_content":"可以看第一条留言的回答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557992518,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95146,"user_name":"Walter","can_delete":false,"product_type":"c1","uid":1254653,"ip_address":"","ucode":"981C5FDD240AD4","user_header":"https://static001.geekbang.org/account/avatar/00/13/24/fd/d541c3c2.jpg","comment_is_top":false,"comment_ctime":1557974503,"is_pvip":false,"replies":[{"id":"34017","content":"在2.x和3.x上都是有区别的，文章的例子就是3.x的版本","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1557993912,"ip_address":"","comment_id":95146,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557974503","product_id":100026901,"comment_content":"列表与元组的初始化速度上，在2.x版本上有相差，在3.x版本是没有差别的。<br>我猜测是3.x对列表的初始化做了优化，希望老师都严谨一些。","like_count":0,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450344,"discussion_content":"在2.x和3.x上都是有区别的，文章的例子就是3.x的版本","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557993912,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95141,"user_name":"Vamei","can_delete":false,"product_type":"c1","uid":1235710,"ip_address":"","ucode":"992F45FB0300BA","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/fe/e4a7e322.jpg","comment_is_top":false,"comment_ctime":1557973763,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1557973763","product_id":100026901,"comment_content":"恩，基本一致<br>In [21]: %timeit s = [1,2,3,4,5,6]                                                                                                                                               <br>51.8 ns ± 0.272 ns per loop (mean ± std. dev. of 7 runs, 10000000 loops each)<br><br>In [22]: %timeit s = (1,2,3,4,5,6)                                                                                                                                               <br>10.8 ns ± 0.0171 ns per loop (mean ± std. dev. of 7 runs, 100000000 loops each)<br><br>In [23]: %timeit s = []                                                                                                                                                          <br>20.8 ns ± 0.213 ns per loop (mean ± std. dev. of 7 runs, 10000000 loops each)<br><br>In [24]: %timeit s = list()                                                                                                                                                      <br>95.5 ns ± 0.672 ns per loop (mean ± std. dev. of 7 runs, 10000000 loops each)<br>","like_count":0},{"had_liked":false,"id":95140,"user_name":"倾","can_delete":false,"product_type":"c1","uid":1524099,"ip_address":"","ucode":"ADE03757A4AAE2","user_header":"https://static001.geekbang.org/account/avatar/00/17/41/83/a6263932.jpg","comment_is_top":false,"comment_ctime":1557973658,"is_pvip":false,"replies":[{"id":"34009","content":"-s表示初始化一次，把-s去掉试试","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1557992570,"ip_address":"","comment_id":95140,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557973658","product_id":100026901,"comment_content":"F:\\my_project\\ut_uos&gt;python -m timeit -s &#39;x=[]&#39;<br>50000000 loops, best of 5: 6.48 nsec per loop<br><br>F:\\my_project\\ut_uos&gt;python -m timeit -s &#39;x=list()&#39;<br>50000000 loops, best of 5: 6.47 nsec per loop<br>测试出这结果。","like_count":0,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450341,"discussion_content":"-s表示初始化一次，把-s去掉试试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557992570,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95052,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1239362,"ip_address":"","ucode":"1B5EF54A2A56F8","user_header":"https://static001.geekbang.org/account/avatar/00/12/e9/42/1de79e71.jpg","comment_is_top":false,"comment_ctime":1557964519,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557964519","product_id":100026901,"comment_content":"测了一下，list[] 比 list()生成要快，把把评论区所有的评论和老师的回复看了一遍，发现能学到很多，老师最好把代码执行环境说明，以免结果不一致","like_count":0},{"had_liked":false,"id":95049,"user_name":"enjoylearning","can_delete":false,"product_type":"c1","uid":1000237,"ip_address":"","ucode":"DCAF8538DEA277","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/2d/af86d73f.jpg","comment_is_top":false,"comment_ctime":1557964341,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557964341","product_id":100026901,"comment_content":"带上括号就变为函数调用，所以会耗费时间","like_count":0},{"had_liked":false,"id":95029,"user_name":"首席民工","can_delete":false,"product_type":"c1","uid":1079418,"ip_address":"","ucode":"8B8D2407A1F7E3","user_header":"https://static001.geekbang.org/account/avatar/00/10/78/7a/41ba6b76.jpg","comment_is_top":false,"comment_ctime":1557958474,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557958474","product_id":100026901,"comment_content":"老师，为什么同样的代码，在我的电脑上运行的结果和您贴出来的不一样，“元组的初始化速度要比列表快5倍” 然我这里只是差了一点点，为什么？<br><br>python3 -m timeit &#39;x=(1,2,3,4,5,6)&#39;<br>100000000 loops, best of 3: 0.0128 usec per loop<br><br>python3 -m timeit &#39;x=[1,2,3,4,5,6]&#39;<br>100000000 loops, best of 3: 0.0132 usec per loop","like_count":0},{"had_liked":false,"id":95019,"user_name":"毕竟我是唐某人","can_delete":false,"product_type":"c1","uid":1528526,"ip_address":"","ucode":"E81673897750DF","user_header":"https://static001.geekbang.org/account/avatar/00/17/52/ce/6f0be196.jpg","comment_is_top":false,"comment_ctime":1557940370,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557940370","product_id":100026901,"comment_content":"class Solution:<br>        # @return a tuple, (index1, index2)<br>        # 8:42<br>        def twoSum(self, num, target):<br>            map = {}<br>            for i in range(len(num)):<br>                if num[i] not in map:<br>                    map[target - num[i]] = i   1<br>                else:<br>                    return map[num[i]], i   1<br>    <br>            return -1, -1<br><br><br><br><br><br>这段代码，列表后面的1   是什么意思啊，看老师推荐的APP,第一题就打来闷起","like_count":0},{"had_liked":false,"id":94985,"user_name":"IT蜗壳-Tango","can_delete":false,"product_type":"c1","uid":1000612,"ip_address":"","ucode":"92330844C1EF9C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/44/a4/7a45d979.jpg","comment_is_top":false,"comment_ctime":1557933660,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1557933660","product_id":100026901,"comment_content":"第四天打卡。","like_count":0},{"had_liked":false,"id":94970,"user_name":"小侠龙旋风","can_delete":false,"product_type":"c1","uid":1126441,"ip_address":"","ucode":"073F3924A99835","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/29/d6816ebf.jpg","comment_is_top":false,"comment_ctime":1557932067,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557932067","product_id":100026901,"comment_content":"python3 -m timeit -s &#39;empty_list = list()&#39;<br>20000000 loops, best of 5: 12.8 nsec per loop<br>python3 -m timeit -s &#39;empty_list = []&#39;<br>20000000 loops, best of 5: 11 nsec per loop<br><br>正如老师所言：Python的function call会创建stack，并且进行一系列参数检查的操作，比较费时；[]是一个内置的C函数，可被直接调用，因此效率更高。<br><br>现在练习主要用列表的增删改查功能较多，元组定义常量专用，比如sockfd.bind((&quot;0.0.0.0&quot;,8080))","like_count":0},{"had_liked":false,"id":94963,"user_name":"yshan","can_delete":false,"product_type":"c1","uid":1136788,"ip_address":"","ucode":"A2ECDCDA52B8EE","user_header":"https://static001.geekbang.org/account/avatar/00/11/58/94/c8bc2b59.jpg","comment_is_top":false,"comment_ctime":1557930498,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557930498","product_id":100026901,"comment_content":"root@test01:~# python -m timeit &#39;empty_list = list()&#39;\r<br>10000000 loops, best of 3: 0.0784 usec per loop\r<br>root@test01:~# python -m timeit &#39;empty_list = []&#39;\r<br>10000000 loops, best of 3: 0.0279 usec per loop<br><br>结果如上。<br>想请问下结果的含义：\r<br>10000000 loops, best of 3: 0.0784 usec per loop\r<br>指的是100万次语句循环，3次timeit循环，然后每次语句循环的平均时间是0.00784usec？","like_count":0},{"had_liked":false,"id":94951,"user_name":"倔强的潇洒小姐","can_delete":false,"product_type":"c1","uid":1167484,"ip_address":"","ucode":"A1CB6588A352E9","user_header":"https://static001.geekbang.org/account/avatar/00/11/d0/7c/868ccb4a.jpg","comment_is_top":false,"comment_ctime":1557928541,"is_pvip":false,"replies":[{"id":"33962","content":"如果是初始化，没有增加删除操作，你的回答是正确的。如果有增加删除操作，他是会overallocate的","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1557948623,"ip_address":"","comment_id":94951,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557928541","product_id":100026901,"comment_content":"代码：<br>&gt;&gt;&gt; l =[]<br>&gt;&gt;&gt; l.__sizeof__()<br>40<br>&gt;&gt;&gt; l1 =[1]<br>&gt;&gt;&gt; l1.__sizeof__()<br>48<br>&gt;&gt;&gt; l2 = [1, 3]<br>&gt;&gt;&gt; l2.__sizeof__()<br>56<br>&gt;&gt;&gt; l3 = [1,  2，3， 4， 5]<br>&gt;&gt;&gt; l3.__sizeof__()<br>80<br><br>问题：list的大小是在空list的基础上根据list里面的元素个数计算的嘛，l3的80=40+5*8，老师，是这样嘛","like_count":0,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450269,"discussion_content":"如果是初始化，没有增加删除操作，你的回答是正确的。如果有增加删除操作，他是会overallocate的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557948623,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94883,"user_name":"大志","can_delete":false,"product_type":"c1","uid":1058663,"ip_address":"","ucode":"7DD23AB8B19131","user_header":"https://static001.geekbang.org/account/avatar/00/10/27/67/613baedb.jpg","comment_is_top":false,"comment_ctime":1557915147,"is_pvip":false,"replies":[{"id":"34014","content":"可能是windows系统加了一些限制，在linux或者mac上试试（前面一章的云端jupyter或者colab）","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1557993668,"ip_address":"","comment_id":94883,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557915147","product_id":100026901,"comment_content":"C:\\Users\\XZC43&gt;python -m timeit  &#39;x=[1,2,3,4,5,6]&#39;<br>50000000 loops, best of 5: 8.24 nsec per loop<br>C:\\Users\\XZC43&gt;python -m timeit  &#39;x=(1,2,3,4,5,6)&#39;<br>50000000 loops, best of 5: 8.25 nsec per loop<br><br>----------<br>C:\\Users\\XZC43&gt;python -m timeit -s &#39;x=(1,2,3,4,5,6)&#39; &#39;y=x[3]&#39;<br>50000000 loops, best of 5: 8.24 nsec per loop<br>C:\\Users\\XZC43&gt;python -m timeit -s &#39;x=[1,2,3,4,5,6]&#39; &#39;y=x[3]&#39;<br>50000000 loops, best of 5: 8.22 nsec per loop<br><br>---------<br>老师您看下，是不是我timeit用法错了？初始化和索引都是列表要快～","like_count":0,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450244,"discussion_content":"可能是windows系统加了一些限制，在linux或者mac上试试（前面一章的云端jupyter或者colab）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557993668,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94872,"user_name":"Hoo-Ah","can_delete":false,"product_type":"c1","uid":1306913,"ip_address":"","ucode":"823093A6C7DEE7","user_header":"https://static001.geekbang.org/account/avatar/00/13/f1/21/52e8267b.jpg","comment_is_top":false,"comment_ctime":1557914058,"is_pvip":false,"replies":[{"id":"33964","content":"嗯","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1557948801,"ip_address":"","comment_id":94872,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557914058","product_id":100026901,"comment_content":"创建空列表使用中括号就好，实际使用也是直接用中括号。一般数据量比较大，数据需要改变使用列表，元组使用在数据量较小而为数据不会发生改变的应用场景。","like_count":0,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450240,"discussion_content":"嗯","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557948801,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94866,"user_name":"徐海浪","can_delete":false,"product_type":"c1","uid":1078528,"ip_address":"","ucode":"21801C420D0610","user_header":"https://static001.geekbang.org/account/avatar/00/10/75/00/618b20da.jpg","comment_is_top":false,"comment_ctime":1557913414,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1557913414","product_id":100026901,"comment_content":"思考题1：<br>C:\\Users\\foresee&gt;python -m timeit -s &#39;empty_list=list()&#39;<br>100000000 loops, best of 3: 0.0136 usec per loop<br><br>C:\\Users\\foresee&gt;python -m timeit -s &#39;empty_list=[]&#39;<br>100000000 loops, best of 3: 0.0134 usec per loop<br>------<br>我实验的结果是效率差不多，底层分别是怎么工作的呢？","like_count":0},{"had_liked":false,"id":94865,"user_name":"coder","can_delete":false,"product_type":"c1","uid":1136797,"ip_address":"","ucode":"4F9A006DA78074","user_header":"https://static001.geekbang.org/account/avatar/00/11/58/9d/91d795cf.jpg","comment_is_top":false,"comment_ctime":1557913187,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557913187","product_id":100026901,"comment_content":"从使用上直接构造比函数调用更快，用 timeit 测试了一下是对的。","like_count":0},{"had_liked":false,"id":94851,"user_name":"cr","can_delete":false,"product_type":"c1","uid":1533219,"ip_address":"","ucode":"3D198A3A3D4118","user_header":"https://static001.geekbang.org/account/avatar/00/17/65/23/210a869c.jpg","comment_is_top":false,"comment_ctime":1557910102,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557910102","product_id":100026901,"comment_content":"没实际用过python做项目，如果是mysql  limit 方式进行分页，理解元组更好些，毕竟每页输出内容数量固定，而最后一页有可能不满数量的置空就行了","like_count":0},{"had_liked":false,"id":94846,"user_name":"可乐泡枸杞","can_delete":false,"product_type":"c1","uid":1308516,"ip_address":"","ucode":"C709B781DF0456","user_header":"https://static001.geekbang.org/account/avatar/00/13/f7/64/03d8154f.jpg","comment_is_top":false,"comment_ctime":1557909220,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557909220","product_id":100026901,"comment_content":"[] 好   差了近五倍<br>5000000 loops, best of 5: 95.1 nsec per loop<br>10000000 loops, best of 5: 20.1 nsec per loop<br>","like_count":0},{"had_liked":false,"id":94829,"user_name":"南瓜","can_delete":false,"product_type":"c1","uid":1441789,"ip_address":"","ucode":"0E2F515E085595","user_header":"https://static001.geekbang.org/account/avatar/00/15/ff/fd/df112fd1.jpg","comment_is_top":false,"comment_ctime":1557905845,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557905845","product_id":100026901,"comment_content":"验证了是[]快，猜想list()较慢可能是因为list()内部有一些判断之类的<br><br>老师，有个疑问，取元素那里，我测试了几次都是元祖取25.2nsec，列表取62.2nsec<br><br><br>2019-05-15<br>作者回复: 能把你的代码贴一下吗？是不是loop数太少了，有noise<br><br>现在测试后，时间基本没差了，尴尬了。。。早上确实差了三倍左右","like_count":0},{"had_liked":false,"id":94806,"user_name":"大志","can_delete":false,"product_type":"c1","uid":1058663,"ip_address":"","ucode":"7DD23AB8B19131","user_header":"https://static001.geekbang.org/account/avatar/00/10/27/67/613baedb.jpg","comment_is_top":false,"comment_ctime":1557900531,"is_pvip":false,"replies":[{"id":"33895","content":"能把你的命令贴一下吗？","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1557903572,"ip_address":"","comment_id":94806,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557900531","product_id":100026901,"comment_content":"我用了timeit后，结果都是列表更快是什么原因，，，","like_count":0,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450216,"discussion_content":"能把你的命令贴一下吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557903572,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94802,"user_name":"夜路破晓","can_delete":false,"product_type":"c1","uid":1353577,"ip_address":"","ucode":"9B875F94B759B9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/3hZfficKPGCq2kjFBu9SgaMjibJTEl7iaW1ta6pZNyiaWP8XEsNpunlnsiaOtBpWTXfT5BvRP3qNByml6p9rtBvqewg/132","comment_is_top":false,"comment_ctime":1557899916,"is_pvip":false,"replies":[{"id":"33896","content":"你作业的答案是正确的。<br><br>没有明白你的问题，O(1)通常表示算法的时间复杂度是常数，没有明白你说的O(0)，O(1)，能具体一下吗？","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1557903715,"ip_address":"","comment_id":94802,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557899916","product_id":100026901,"comment_content":"先说作业：<br><br>结论：<br>直接创建空列表效率<br>理由：<br>1.经验判断，直接创建空列表比较多<br>2.看数据，<br>import time<br>from timeit import timeit<br><br>timeit(&#39;empty_list= list()&#39;,number=10000)<br>output:0.0017435490397019748<br>timeit(&#39;empty_list= []&#39;,number=10000)<br>output:0.0003138986990052217<br>各运行1万次的结果，直接创建空列表明显优于用列表函数封装<br><br>我的问题：<br>O(0)和O(1)是不存在和存在一个过渡分配的意思吗？因为之前在leetcode刷题基本每次都是O(2)，看别人说自己O(0)的写法，一直也没花心思去搞明白，只是知道自己 写得很菜。。。","like_count":0,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450215,"discussion_content":"你作业的答案是正确的。\n\n没有明白你的问题，O(1)通常表示算法的时间复杂度是常数，没有明白你说的O(0)，O(1)，能具体一下吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557903715,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94797,"user_name":"大志","can_delete":false,"product_type":"c1","uid":1058663,"ip_address":"","ucode":"7DD23AB8B19131","user_header":"https://static001.geekbang.org/account/avatar/00/10/27/67/613baedb.jpg","comment_is_top":false,"comment_ctime":1557899345,"is_pvip":false,"replies":[{"id":"33894","content":"不是这样的，你可以参考一下官方文档关于timeit的用法(https:&#47;&#47;docs.python.org&#47;3.7&#47;library&#47;timeit.html)： &quot;If -n is not given, a suitable number of loops is calculated by trying successive powers of 10 until the total time is at least 0.2 seconds.&quot;你可以统一设置运行次数为10000000次，再运行一下，结果肯定还是元祖的初始化要快很多","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1557903106,"ip_address":"","comment_id":94797,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557899345","product_id":100026901,"comment_content":"初始化运行速度那里，一个是20000000次loops，一个是5000000次loops，运行时间肯定差5倍，如果运行次数相同，其实差距并不是很大","like_count":0,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450212,"discussion_content":"不是这样的，你可以参考一下官方文档关于timeit的用法(https://docs.python.org/3.7/library/timeit.html)： &amp;quot;If -n is not given, a suitable number of loops is calculated by trying successive powers of 10 until the total time is at least 0.2 seconds.&amp;quot;你可以统一设置运行次数为10000000次，再运行一下，结果肯定还是元祖的初始化要快很多","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557903106,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94796,"user_name":"大志","can_delete":false,"product_type":"c1","uid":1058663,"ip_address":"","ucode":"7DD23AB8B19131","user_header":"https://static001.geekbang.org/account/avatar/00/10/27/67/613baedb.jpg","comment_is_top":false,"comment_ctime":1557899188,"is_pvip":false,"replies":[{"id":"33898","content":"可以把你的代码贴一下吗？<br><br>运行次数不同只是因为元祖初始化更快， 因此需要更多的loop。你可以指定两者运行的loop数量一致，然后比较，结果是一样的。","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1557904481,"ip_address":"","comment_id":94796,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557899188","product_id":100026901,"comment_content":"我觉得初始化速度那段代码有问题，我运行的是几乎差不多速度，老师的运行结果明显是一个20000000次","like_count":0,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450211,"discussion_content":"可以把你的代码贴一下吗？\n\n运行次数不同只是因为元祖初始化更快， 因此需要更多的loop。你可以指定两者运行的loop数量一致，然后比较，结果是一样的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557904481,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94769,"user_name":"白下","can_delete":false,"product_type":"c1","uid":1085157,"ip_address":"","ucode":"5AD8360FE05D58","user_header":"https://static001.geekbang.org/account/avatar/00/10/8e/e5/69d77d56.jpg","comment_is_top":false,"comment_ctime":1557891776,"is_pvip":true,"replies":[{"id":"33899","content":"肯定是[]比list()快很多，具体原因我再一个评论里说了，能把你的代码贴一下吗，应该是代码不对","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1557904741,"ip_address":"","comment_id":94769,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557891776","product_id":100026901,"comment_content":"时间相差无几<br>空间大小一致<br>难道是对象内存指向的区别，empty_list = list(） 这个可能好一点 因为这个是创建对象？","like_count":0,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450199,"discussion_content":"肯定是[]比list()快很多，具体原因我再一个评论里说了，能把你的代码贴一下吗，应该是代码不对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557904741,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94767,"user_name":"汪zZ","can_delete":false,"product_type":"c1","uid":1234757,"ip_address":"","ucode":"8B93062A683902","user_header":"https://static001.geekbang.org/account/avatar/00/12/d7/45/d1621188.jpg","comment_is_top":false,"comment_ctime":1557891353,"is_pvip":true,"replies":[{"id":"33902","content":"区别主要在于list()是一个function call，Python的function call会创建stack，并且进行一系列参数检查的操作，比较expensive，反观[]是一个内置的C函数，可以直接被调用，因此效率高","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1557904985,"ip_address":"","comment_id":94767,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1557891353","product_id":100026901,"comment_content":"思考题1<br>[]应该各方面更好，list()更多的用来把其他类型的转为列表。<br>用[]就像直接初始化成列表<br>用list()有点像两部曲，初始化了一个东西，然后把他转化为列表","like_count":0,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450197,"discussion_content":"区别主要在于list()是一个function call，Python的function call会创建stack，并且进行一系列参数检查的操作，比较expensive，反观[]是一个内置的C函数，可以直接被调用，因此效率高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557904985,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94757,"user_name":"大斌","can_delete":false,"product_type":"c1","uid":1002183,"ip_address":"","ucode":"1434C2B0A29135","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4a/c7/ec18673b.jpg","comment_is_top":false,"comment_ctime":1557889775,"is_pvip":false,"replies":[{"id":"33903","content":"区别主要在于list()是一个function call，Python的function call会创建stack，并且进行一系列参数检查的操作，比较expensive，反观[]是一个内置的C函数，可以直接被调用，因此效率高","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1557905008,"ip_address":"","comment_id":94757,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557889775","product_id":100026901,"comment_content":"用文中的timeit函数测试了一下list()和[]的运行时间，4倍的性能差距，应该是调用list函数这个动作会耗时多一点，而[]就是直接对变量进行定义了， 不需要调用过程。所以[]的性能要强一点。","like_count":0,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450195,"discussion_content":"区别主要在于list()是一个function call，Python的function call会创建stack，并且进行一系列参数检查的操作，比较expensive，反观[]是一个内置的C函数，可以直接被调用，因此效率高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557905008,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94749,"user_name":"qing_add","can_delete":false,"product_type":"c1","uid":1225528,"ip_address":"","ucode":"C3D2A1D6B5F8EA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJvyicEy3oF5G7QNiaxJArqdDDnrHUXMdmiaT6GNDhbW4ibicA5Lus538NqVWJnsvKtDwmyKDfIYhEyrXQ/132","comment_is_top":false,"comment_ctime":1557888927,"is_pvip":false,"replies":[{"id":"33918","content":"你python的版本是？如果是老版本的话，可能没有资源缓存的优化","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1557907104,"ip_address":"","comment_id":94749,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557888927","product_id":100026901,"comment_content":"执行时间并没有那么明显<br>C:\\Users\\qw&gt;python -m timeit &#39;x=(1,2,3,4,5,6)&#39;<br>100000000 loops, best of 3: 0.00807 usec per loop<br><br>C:\\Users\\qw&gt;python -m timeit &#39;x=[1,2,3,4,5,6]&#39;<br>100000000 loops, best of 3: 0.00805 usec per loop","like_count":0,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450193,"discussion_content":"你python的版本是？如果是老版本的话，可能没有资源缓存的优化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557907104,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94747,"user_name":"C.R7","can_delete":false,"product_type":"c1","uid":1201627,"ip_address":"","ucode":"54A0A1CD050B1B","user_header":"https://static001.geekbang.org/account/avatar/00/12/55/db/9fd0a48d.jpg","comment_is_top":false,"comment_ctime":1557888543,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557888543","product_id":100026901,"comment_content":"但是对于一些静态变量，比如元组，如果它不被使用并且占用空间不大时，对这里占用空间不大有疑问？怎么算不大呢，是基于什么做的判断","like_count":0},{"had_liked":false,"id":94736,"user_name":"程序员人生","can_delete":false,"product_type":"c1","uid":1113668,"ip_address":"","ucode":"C5C5073D89AAA2","user_header":"https://static001.geekbang.org/account/avatar/00/10/fe/44/3e3040ac.jpg","comment_is_top":false,"comment_ctime":1557887013,"is_pvip":false,"replies":[{"id":"33900","content":"把-s去掉试试，-s表示只初始化一次","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1557904884,"ip_address":"","comment_id":94736,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557887013","product_id":100026901,"comment_content":"D:\\Python37&gt;python -m timeit -s &#39;empty_list=list()&#39;<br>50000000 loops, best of 5: 7.28 nsec per loop<br><br>D:\\Python37&gt;python -m timeit -s &#39;empty_list=[]&#39;<br>50000000 loops, best of 5: 7.25 nsec per loop<br><br>D:\\Python37&gt;python -m timeit -s &#39;empty_list=list()&#39;<br>50000000 loops, best of 5: 7.25 nsec per loop<br><br>D:\\Python37&gt;python -m timeit -s &#39;empty_list=[]&#39;<br>50000000 loops, best of 5: 7.25 nsec per loop<br><br>以上是我的测试结果，应该[] 比list()快一点","like_count":0,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450188,"discussion_content":"把-s去掉试试，-s表示只初始化一次","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557904884,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94727,"user_name":"马星","can_delete":false,"product_type":"c1","uid":1247867,"ip_address":"","ucode":"83D9460D21CEF3","user_header":"https://static001.geekbang.org/account/avatar/00/13/0a/7b/eb3323eb.jpg","comment_is_top":false,"comment_ctime":1557885443,"is_pvip":false,"replies":[{"id":"33901","content":"number=1太少了，会有noise，建议设为1000000以上，你再试试，是不是速度差距很明显。","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1557904925,"ip_address":"","comment_id":94727,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557885443","product_id":100026901,"comment_content":"&gt;&gt;&gt; import timeit<br>&gt;&gt;&gt; timeit.timeit(&#39;x=(1,2,3,4,5,6)&#39;,number=1)<br>1.0279999287376995e-06<br>&gt;&gt;&gt; timeit.timeit(&#39;x=[1,2,3,4,5,6]&#39;,number=1)<br>1.0280000424245372e-06<br>我的电脑上元组的创建速度比列表的创建速度快，但是没有5倍那么多","like_count":0,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450185,"discussion_content":"number=1太少了，会有noise，建议设为1000000以上，你再试试，是不是速度差距很明显。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557904925,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94726,"user_name":"小胖","can_delete":false,"product_type":"c1","uid":1022958,"ip_address":"","ucode":"1B8D884D254070","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9b/ee/8950c240.jpg","comment_is_top":false,"comment_ctime":1557885330,"is_pvip":false,"replies":[{"id":"33904","content":"1. 区别主要在于list()是一个function call，Python的function call会创建stack，并且进行一系列参数检查的操作，比较expensive，反观[]是一个内置的C函数，可以直接被调用，因此效率高<br><br>2. 对的","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1557905042,"ip_address":"","comment_id":94726,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557885330","product_id":100026901,"comment_content":"1、option A 的话会新建一个对象，底层的数据结构并不能重用<br>而 option B 的话，如果系统中有缓存这个，则可以继续重用，效率更佳<br>2、平时工作中如果数据需要进行增加、删除、修改就会使用list, 反之就使用tuple<br>不知道的理解的对不对","like_count":0,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450184,"discussion_content":"1. 区别主要在于list()是一个function call，Python的function call会创建stack，并且进行一系列参数检查的操作，比较expensive，反观[]是一个内置的C函数，可以直接被调用，因此效率高\n\n2. 对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557905042,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94720,"user_name":"Wesley","can_delete":false,"product_type":"c1","uid":1447393,"ip_address":"","ucode":"C7CBB2ADDA38AA","user_header":"https://static001.geekbang.org/account/avatar/00/16/15/e1/d199f33f.jpg","comment_is_top":false,"comment_ctime":1557884958,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557884958","product_id":100026901,"comment_content":"还有一个重要的点：可变和不可变类型<br>元组中嵌套列表和数字，数字不可变，列表中的值可变，因为元组存储的是列表的id值","like_count":0},{"had_liked":false,"id":94713,"user_name":"Walter","can_delete":false,"product_type":"c1","uid":1254653,"ip_address":"","ucode":"981C5FDD240AD4","user_header":"https://static001.geekbang.org/account/avatar/00/13/24/fd/d541c3c2.jpg","comment_is_top":false,"comment_ctime":1557884396,"is_pvip":false,"replies":[{"id":"33907","content":"你python的版本号是？试试在Python3.x中运行一下？<br>我估计老版本的Python可能没有做这个优化","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1557905464,"ip_address":"","comment_id":94713,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557884396","product_id":100026901,"comment_content":"计算初始化一个相同元素的列表和元组分别所需的时间，为什么我的电脑测试基本是一样的：<br>λ python -m timeit &#39;x=(1,2,3,4,5,6)&#39;<br>50000000 loops, best of 5: 6.27 nsec per loop<br><br>λ python -m timeit &#39;x=[1,2,3,4,5,6]&#39;<br>50000000 loops, best of 5: 6.25 nsec per loop","like_count":0,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450180,"discussion_content":"你python的版本号是？试试在Python3.x中运行一下？\n我估计老版本的Python可能没有做这个优化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557905464,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94704,"user_name":"南瓜","can_delete":false,"product_type":"c1","uid":1441789,"ip_address":"","ucode":"0E2F515E085595","user_header":"https://static001.geekbang.org/account/avatar/00/15/ff/fd/df112fd1.jpg","comment_is_top":false,"comment_ctime":1557883676,"is_pvip":false,"replies":[{"id":"33906","content":"能把你的代码贴一下吗？是不是loop数太少了，有noise","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1557905366,"ip_address":"","comment_id":94704,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557883676","product_id":100026901,"comment_content":"验证了是[]快，猜想list()较慢可能是因为list()内部有一些判断之类的<br><br>老师，有个疑问，取元素那里，我测试了几次都是元祖取25.2nsec，列表取62.2nsec","like_count":0,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450176,"discussion_content":"能把你的代码贴一下吗？是不是loop数太少了，有noise","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557905366,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94703,"user_name":"yuanwen","can_delete":false,"product_type":"c1","uid":1354941,"ip_address":"","ucode":"4868FEF5D77856","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIE1rkD3MKRppo1l03vo81rJaIDAE5qsB313g4lJtt9v9Lk6Po3nPDFtoETRNaaSkQIMVHI8lvE7Q/132","comment_is_top":false,"comment_ctime":1557883666,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557883666","product_id":100026901,"comment_content":"tuple很少使用，大多是作为list的子元素，或者dict的key，list比较灵活所以使用的比较多。","like_count":0},{"had_liked":false,"id":94702,"user_name":"无形","can_delete":false,"product_type":"c1","uid":1016889,"ip_address":"","ucode":"B740E2A68A17A5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/84/39/c8772466.jpg","comment_is_top":false,"comment_ctime":1557883510,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1557883510","product_id":100026901,"comment_content":"干货满满","like_count":0},{"had_liked":false,"id":94691,"user_name":"Geek_974cd5","can_delete":false,"product_type":"c1","uid":1528654,"ip_address":"","ucode":"5A6BC28919AD4D","user_header":"","comment_is_top":false,"comment_ctime":1557882563,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557882563","product_id":100026901,"comment_content":"两种方式的效率一样，跟我想的结果不一致，我认为list（）应该慢一点，因为有函数调用。","like_count":0},{"had_liked":false,"id":94684,"user_name":"somenzz","can_delete":false,"product_type":"c1","uid":1187197,"ip_address":"","ucode":"EA59A170DF8910","user_header":"https://static001.geekbang.org/account/avatar/00/12/1d/7d/368df396.jpg","comment_is_top":false,"comment_ctime":1557882108,"is_pvip":false,"replies":[{"id":"33908","content":"区别主要在于list()是一个function call，Python的function call会创建stack，并且进行一系列参数检查的操作，比较expensive，反观[]是一个内置的C函数，可以直接被调用，因此效率高","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1557905511,"ip_address":"","comment_id":94684,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557882108","product_id":100026901,"comment_content":"个人理解：empty_list = [] 稍快，empty_list = list() 的作用是将一个对象转化成列表类型，再将 empty_list 指向这个对象。而 empty_list = [] 直接指向一个空列表对象。所以会稍快那么一点，如果不对请老师指正。<br><br>","like_count":0,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450169,"discussion_content":"区别主要在于list()是一个function call，Python的function call会创建stack，并且进行一系列参数检查的操作，比较expensive，反观[]是一个内置的C函数，可以直接被调用，因此效率高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557905511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94676,"user_name":"陈柏林","can_delete":false,"product_type":"c1","uid":1282562,"ip_address":"","ucode":"2636649821FAB9","user_header":"https://static001.geekbang.org/account/avatar/00/13/92/02/288a6b8c.jpg","comment_is_top":false,"comment_ctime":1557881555,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557881555","product_id":100026901,"comment_content":"个人感觉应该是初始化的时候长度的区别","like_count":0},{"had_liked":false,"id":94666,"user_name":"无法言喻.","can_delete":false,"product_type":"c1","uid":1322328,"ip_address":"","ucode":"7F375BE388D4FC","user_header":"https://static001.geekbang.org/account/avatar/00/14/2d/58/aa35c402.jpg","comment_is_top":false,"comment_ctime":1557880616,"is_pvip":false,"replies":[{"id":"33913","content":"是的。<br>因为你每次增加新的元素时，列表会overallocate，因此文中的例子实际上一开始分配了4个元素的空间，因此增加了32字节","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1557906743,"ip_address":"","comment_id":94666,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557880616","product_id":100026901,"comment_content":"老师，sizeof是返回的对象的大小吗，3个int为什么不是24字节","like_count":0,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450162,"discussion_content":"是的。\n因为你每次增加新的元素时，列表会overallocate，因此文中的例子实际上一开始分配了4个元素的空间，因此增加了32字节","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557906743,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94645,"user_name":"Dunksky","can_delete":false,"product_type":"c1","uid":1525152,"ip_address":"","ucode":"CEAC51C891EE35","user_header":"https://static001.geekbang.org/account/avatar/00/17/45/a0/436a2fd4.jpg","comment_is_top":false,"comment_ctime":1557878299,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557878299","product_id":100026901,"comment_content":"满满的干货，元组和列表的存储区别是我之前不知道的","like_count":0},{"had_liked":false,"id":94643,"user_name":"Geek_597599","can_delete":false,"product_type":"c1","uid":1525268,"ip_address":"","ucode":"DFBC20C35BD8D5","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIpWMNibhLaaRLhWwtJac1onPYM228GYUcKymeoAtkYtRibIrmmuAvJTPVzEYricUODBq2Ymh7gIYkicA/132","comment_is_top":false,"comment_ctime":1557878164,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557878164","product_id":100026901,"comment_content":"第一题着实不知道为啥。<br>第二题，一般在元素个数不固定，需要新增或者删减的时候，还有需要遍历元素处理的时候我都使用列表。元祖我之前都很少使用。。","like_count":0},{"had_liked":false,"id":94619,"user_name":"canownu","can_delete":false,"product_type":"c1","uid":1524498,"ip_address":"","ucode":"0E9B2EDDBC8572","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoT9nVNcyrunC5RjsOZwLObffWPgKnsCVcjctqFPNSK6j1XHNibDPQpBVmO6jyIemnepILyTIJ7SQw/132","comment_is_top":false,"comment_ctime":1557863144,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557863144","product_id":100026901,"comment_content":"好","like_count":0},{"had_liked":false,"id":94618,"user_name":"LJK","can_delete":false,"product_type":"c1","uid":1199213,"ip_address":"","ucode":"12B2441099FF1D","user_header":"https://static001.geekbang.org/account/avatar/00/12/4c/6d/c20f2d5a.jpg","comment_is_top":false,"comment_ctime":1557860439,"is_pvip":false,"replies":[{"id":"33916","content":"是的","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1557906882,"ip_address":"","comment_id":94618,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557860439","product_id":100026901,"comment_content":"老师好，请问如果列表空间满了之后是会像链表一样再申请空间存下一组数据么？这样的话是不是还需要一个指针指向下一段的地址？","like_count":0,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450139,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557906882,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94615,"user_name":"夢","can_delete":false,"product_type":"c1","uid":1532241,"ip_address":"","ucode":"4607C9A91C9B9B","user_header":"https://static001.geekbang.org/account/avatar/00/17/61/51/8d5aa9af.jpg","comment_is_top":false,"comment_ctime":1557855411,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557855411","product_id":100026901,"comment_content":"List一般用于动态，可变 io <br>元祖一般用于加密，秘钥","like_count":0}]}