{"id":65106,"title":"04 | 移动计算比移动数据更划算","content":"<p>大数据技术和传统的软件开发技术在架构思路上有很大不同，大数据技术更为关注数据，所以相关的架构设计也围绕数据展开，如何存储、计算、传输大规模的数据是要考虑的核心要素。</p><p>传统的软件计算处理模型，都是“输入  -&gt;  计算  -&gt;  输出”模型。也就是说，一个程序给它传入一些数据也好，它自己从某个地方读取一些数据也好，总是先有一些输入数据，然后对这些数据进行计算处理，最后得到输出结果。</p><p>但是在互联网大数据时代，需要计算处理的数据量急速膨胀。一来是因为互联网用户数远远超过传统企业的用户，相应产生了更大量的数据；二来很多以往被忽视的数据重新被发掘利用，比如用户在一个页面的停留时长、鼠标在屏幕移动的轨迹都会被记录下来进行分析。在稍微大一点的互联网企业，需要计算处理的数据量常常以PB计（10<sup>15</sup> Byte）。</p><p>正因为如此，传统的计算处理模型不能适用于大数据时代的计算要求。你能想象一个程序读取PB级的数据进行计算是怎样一个场景吗？一个程序所能调度的网络带宽（通常数百MB）、内存容量（通常几十GB ）、磁盘大小（通常数TB）、CPU运算速度是不可能满足这种计算要求的。</p><p><span class=\"orange\">那么如何解决PB级数据进行计算的问题呢？</span></p><p>这个问题的解决思路其实跟大型网站的分布式架构思路是一样的，采用分布式集群的解决方案，用数千台甚至上万台计算机构建一个大数据计算处理集群，利用更多的网络带宽、内存空间、磁盘容量、CPU核心数去进行计算处理。关于分布式架构，你可以参考我写的《大型网站技术架构：核心原理与案例分析》这本书，但是大数据计算处理的场景跟网站的实时请求处理场景又有很大不同。</p><!-- [[[read_end]]] --><p>网站实时处理通常针对单个用户的请求操作，虽然大型网站面临大量的高并发请求，比如天猫的“双十一”活动。但是每个用户之间的请求是独立的，只要网站的分布式系统能将不同用户的不同业务请求分配到不同的服务器上，只要这些分布式的服务器之间耦合关系足够小，就可以通过添加更多的服务器去处理更多的用户请求及由此产生的用户数据。这也正是网站系统架构的核心原理。</p><p>我们再回过头来看大数据。<strong>大数据计算处理通常针对的是网站的存量数据</strong>，也就是刚才我提到的全部用户在一段时间内请求产生的数据，这些数据之间是有大量关联的，比如购买同一个商品用户之间的关系，这是使用协同过滤进行商品推荐；比如同一件商品的历史销量走势，这是对历史数据进行统计分析。<strong>网站大数据系统要做的就是将这些统计规律和关联关系计算出来，并由此进一步改善网站的用户体验和运营决策</strong>。</p><p>为了解决这种计算场景的问题，技术专家们设计了一套相应的技术架构方案。最早的时候由Google实现并通过论文的方式发表出来，随后根据这些论文，开源社区开发出对应的开源产品，并得到业界的普遍支持和应用。这段历史我们在前面的“预习”中已经讨论过了。</p><p>这套方案的核心思路是，既然数据是庞大的，而程序要比数据小得多，将数据输入给程序是不划算的，那么就反其道而行之，<strong>将程序分发到数据所在的地方进行计算，也就是所谓的移动计算比移动数据更划算</strong>。</p><p>有一句古老的谚语，说的是“当一匹马拉不动车的时候，用两匹马拉”。听起来是如此简单的道理，但是在计算机这个最年轻的科技领域，在很长一段时间里却并没有这样做。当一台计算机的处理能力不能满足计算要求的时候，我们并没有想办法用两台计算机去处理，而是换更强大的计算机。</p><p>商业级的服务器不够用，就升级小型机；小型机不够用，就升级中型机；还不够，升级大型机，升级超级计算机。</p><p>在互联网时代之前，这种不断升级计算机硬件的办法还是行得通的，凭借摩尔定律，计算机硬件的处理能力每18个月增强一倍，越来越强大的计算机被制造出来。传统企业虽然对计算机的处理需求越来越高，但是工程师和科学家总能制造出满足需求的计算机。</p><p>但是这种思路并不适合互联网的技术要求。Google、Facebook、阿里巴巴这些网站每天需要处理数十亿次的用户请求、产生上百PB的数据，不可能有一台计算机能够支撑起这么大的计算需求。</p><p>于是互联网公司不得不换一种思路解决问题，当一台计算机的计算能力不能满足需求的时候，就增加一台计算机，还不够的话，就再增加一台。就这样，由一台计算机起家的小网站，逐渐成长为百万台服务器的巨无霸。Google、Facebook、阿里巴巴这些公司的成长过程都是如此。</p><p>但是买一台新计算机和一台老计算机放在一起，就能自己开始工作了吗？两台计算机要想合作构成一个系统，必须要在技术上重新架构。这就是现在互联网企业广泛使用的负载均衡、分布式缓存、分布式数据库、分布式服务等种种分布式系统。</p><p>当这些分布式技术满足互联网的日常业务需求时，对离线数据和存量数据的处理就被提了出来，当时这些分布式技术并不能满足要求，于是大数据技术就出现了。</p><p>现在我们来看，移动计算程序到数据所在位置进行计算是如何实现的呢？</p><p>1.将待处理的大规模数据存储在服务器集群的所有服务器上，主要使用HDFS分布式文件存储系统，将文件分成很多块（Block），以块为单位存储在集群的服务器上。</p><p>2.大数据引擎根据集群里不同服务器的计算能力，在每台服务器上启动若干分布式任务执行进程，这些进程会等待给它们分配执行任务。</p><p>3.使用大数据计算框架支持的编程模型进行编程，比如Hadoop的MapReduce编程模型，或者Spark的RDD编程模型。应用程序编写好以后，将其打包，MapReduce和Spark都是在JVM环境中运行，所以打包出来的是一个Java的JAR包。</p><p>4.用Hadoop或者Spark的启动命令执行这个应用程序的JAR包，首先执行引擎会解析程序要处理的数据输入路径，根据输入数据量的大小，将数据分成若干片（Split），每一个数据片都分配给一个任务执行进程去处理。</p><p>5.任务执行进程收到分配的任务后，检查自己是否有任务对应的程序包，如果没有就去下载程序包，下载以后通过反射的方式加载程序。走到这里，最重要的一步，也就是移动计算就完成了。</p><p>6.加载程序后，任务执行进程根据分配的数据片的文件地址和数据在文件内的偏移量读取数据，并把数据输入给应用程序相应的方法去执行，从而实现在分布式服务器集群中移动计算程序，对大规模数据进行并行处理的计算目标。</p><p>这只是大数据计算实现过程的简单描述，具体过程我们会在讲到HDFS、MapReduce和Spark的时候详细讨论。</p><h2>小结</h2><p>移动程序到数据所在的地方去执行，这种技术方案其实我们并不陌生。从事Java开发的同学可能有过用反射的方式热加载代码执行的经验，如果这个代码是从网络其他地方传输过来的，那就是在移动计算。杀毒软件从服务器更新病毒库，然后在Windows内查杀病毒，也是一种移动计算（病毒库）比移动数据（Windows可能感染病毒的程序）更划算的例子。</p><p>大数据技术将移动计算这一编程技巧上升到编程模型的高度，并开发了相应的编程框架，使得开发人员只需要关注大数据的算法实现，而不必关注如何将这个算法在分布式的环境中执行，这极大地简化了大数据的开发难度，并统一了大数据的开发方式，从而使大数据从原来的高高在上，变成了今天的人人参与。</p><h2>思考题</h2><p>互联网应用系统架构中有一种重要架构原则是尽量使用无状态的服务，不同服务实例之间不共享状态，也就是不持有数据，用户请求交给任何一个服务实例计算，处理的结果都是一样的，为什么要这样设计？这种架构有什么好处？</p><p>欢迎你写下自己的思考或疑问，与我和其他同学一起讨论。</p><p></p>","neighbors":{"left":{"article_title":"预习 03 | 大数据应用领域：数据驱动一切","id":64643},"right":{"article_title":"05 | 从RAID看垂直伸缩到水平伸缩的演化","id":65366}},"comments":[{"had_liked":false,"id":37085,"user_name":"面试官问","can_delete":false,"product_type":"c1","uid":1009375,"ip_address":"","ucode":"F9CE89589772F4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/66/df/501ba989.jpg","comment_is_top":false,"comment_ctime":1541460914,"is_pvip":true,"replies":[{"id":"13376","content":"是的","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1541506275,"ip_address":"","comment_id":37085,"utype":1}],"discussion_count":1,"race_medal":0,"score":"598541915058","product_id":100020201,"comment_content":"无状态服务的主要好处是服务间无需同步状态或者数据，便于扩缩容。","like_count":140,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428160,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541506275,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37418,"user_name":"不求","can_delete":false,"product_type":"c1","uid":1231745,"ip_address":"","ucode":"C807EB6F4BE515","user_header":"https://static001.geekbang.org/account/avatar/00/12/cb/81/14dd3bab.jpg","comment_is_top":false,"comment_ctime":1541578829,"is_pvip":false,"replies":[{"id":"13424","content":"思考深入👍🏻","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1541585927,"ip_address":"","comment_id":37418,"utype":1}],"discussion_count":3,"race_medal":0,"score":"229174845517","product_id":100020201,"comment_content":"针对于思考题的一些思考：<br>分布式架构的原则：尽量使用无状态的服务，不同服务实例之间不共享状态，也就是不持有数据。。。<br><br>这个问题我是这样考虑的，什么是无状态的服务？为什么需要它？它是在怎样的情况下出现的？<br><br>这个应该是分布式架构的设计者在考虑架构的可扩展行（伸缩性）的时候设计出来的这样一个针对于服务的一个要求或者是标准（也就是原则）；<br><br>所以我想说，这个问题太“应试”了，就像您的课程一样，之前都是顺着从无到有的一个顺序给我们讲解，我听的很爽，真的是爽，突然来了一个这样的反逻辑的“应试”问题，我有点懵。<br><br>再多说一点，好像国内的教育太“应试”的原因也有是过于拆解概念，然后对概念进行逻辑行考核验证；所以我们上学时都挺会考试的，都在应付这个逻辑，而忽略了真正的学识，一个从无到有的东西，它是如何被创造出来的，它为什么会被创造出来，它还有没有改善的余地。也是“应试”环境下的学生创造力越来越差的原因吧，更多的花费在了逻辑推理上。<br><br>老师，若有冒昧，还请批评指正，感谢🙏","like_count":53,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428332,"discussion_content":"思考深入👍🏻","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541585927,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1352697,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a3/f9/9180d6d1.jpg","nickname":"szm","note":"","ucode":"53E753D3D04431","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282382,"discussion_content":"我们的教育什么时候把逻辑教育放在第一位了，我们教育中缺少的就是逻辑思考能力，从小学校教的都是辩证法，和稀泥，怎么说都有理，缺少独立思考和逻辑思考能力。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1591959675,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1253652,"avatar":"https://static001.geekbang.org/account/avatar/00/13/21/14/423a821f.jpg","nickname":"Steven","note":"","ucode":"3FE64459842015","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":565273,"discussion_content":"与“应试”教育没什么关系，不要拉逻辑推理下水，逻辑推理能力很重要。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650424767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136445,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1569451634,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"96058732146","product_id":100020201,"comment_content":"1、本文核心观点：<br>移动计算比移动数据更核算<br><br>2、课后思考及问题<br>2-1：啥是大数据？<br>数据很好理解，就是计算机处理的基本材料，文本、音频、视频都是数据，大怎么理解？多大算大？我的理解这是一个相对的概念，比如：数据量大到世界上最牛逼的计算机都存不下，都计算好几个小时，如果用单位表示，大到PB就算大数据啦！<br>2-2：为啥出现大数据？<br>因为有了互联网，网上的计算机数以亿计，有些公司想把数以亿计的计算机的操作人、操作人的信息、操作人的操作轨迹、操作历史等等数据都想记录下。这个量可能使用PB都不好表示，比如：Google、Facebook、亚马逊、阿里、腾讯、百度、京东、美团等等。<br>2-3：处理大数据的老思路是啥？<br>提高单机的存储和性能，普通PC——服务器——小型机——大型机——超型机——超大型机。<br>2-4：处理大数据的新思路是啥？<br>分而治之，用普通PC通过互联网联系起来，就像产生大数据一样的根本原因一样，不断的通过增加机器来提高存储空间和计算能力。<br>2-5：老思路为啥走不通了？<br>单机再牛逼也有上限，好比关羽是武圣，但也抵挡不了千军万马。<br>2-6：新思路为啥走的通？<br>她的解决思路和产生问题的根源是类似的，数以亿计的电脑能同时记录下操作人的信息、能知道数以亿计的人在操作什么，另外，这些数以亿计的电脑，无论是搜索、购物、社交、娱乐，他们基本都是在同时做，但互联网公司中这些都同为巨头的确没有，此时已经分而治之过一次了，所以，理论上增加机器确实能够存储下那么多数据其且不用数以亿计上万台就行。<br>2-7：新思路带来了那些新问题？<br>上万台机器怎么分工协作，数据怎么快速存储？数据又怎么快速获取？数据怎么聚合？怎么从海量的数据中发现珍珠？怎么保证数据高可用？<br>2-8：这些新问题的解决思路是啥？<br>怎么快速存取？怎么聚合？怎么发现价值？三者是相关联的，其中怎么快速存取又是矛盾的，大部分数据是读多写少，所以，选择了怎么快速的取数，取数要想快，好像没啥好点子，就是三板斧，一是尽量在内存中操作；二是用哈希分片；三是用有序存储结构来存储实际的数据，比如：B+树，取的快就能聚合的快，聚合后就能发现数据的规律，发现规律就能预测未来，预测未来就能占领先机，占领先机那赚钱就是翻手之事啦。<br>数据高可用，好像就一手，副本，一个不够两个，两个还不够三个，当然，副本间最好离的远远的。<br><br> 集群间无状态的好处，很自然，比如：公司想辞你，随便组内某个成员都能接手你的活，或者随便招一个人都能接手你的活，那对领导而言你和小组间就是无状态的，你的有无，宕机与否并不太重要。假如你做了许多核心项目，代码只能你看得懂，那公司领导就不管随意辞你，即使你要走，也要交接许久，否则后面会很难过的，其实每个领导也都想达到这个效果，只是人不是机器，数据说同步就同步啦！所以，对于某些员工客客气气，对于其他的则粗声大气。","like_count":23,"discussions":[{"author":{"id":1730052,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/66/04/22190a73.jpg","nickname":"weiming","note":"","ucode":"3EC2968FB08501","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389026,"discussion_content":"豁然开朗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629097040,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":39366,"user_name":"高国君","can_delete":false,"product_type":"c1","uid":1308879,"ip_address":"","ucode":"AF205FFDED7E92","user_header":"https://static001.geekbang.org/account/avatar/00/13/f8/cf/e73c402f.jpg","comment_is_top":false,"comment_ctime":1542257083,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"87441603003","product_id":100020201,"comment_content":"互联网使用无状态服务的原则，主要目的是为了实现服务的低耦合高内聚的目标。一旦低耦合高内聚，服务就可以动态伸缩（放&#47;换哪个机器上都可以运行），同时，也引申出另外一个要求：如何实现服务的发现、编排、调度？这就涉及一些微服务框架了。<br>对于大数据，如果不是无状态服务，那弹出一个服务，还要调它依赖的服务，那么这个处理过程，会有非常多非必要的开销，也有非常多的隐患。譬如，被调用的服务怎么保证面对大量请求时的处理性能和可用性？所以，大数据的计算或存储，必须用一个无状态服务。<br>对于它的处理逻辑：就是先把计算模型先设计好，之后，在先抓数据源，并分片后处理成任务。任务调用计算模型，生成计算结果。这样，任务分片后，被放入了一个分布式环境中执行，就实现了分布式计算。","like_count":20},{"had_liked":false,"id":37312,"user_name":"陈柏林","can_delete":false,"product_type":"c1","uid":1282562,"ip_address":"","ucode":"2636649821FAB9","user_header":"https://static001.geekbang.org/account/avatar/00/13/92/02/288a6b8c.jpg","comment_is_top":false,"comment_ctime":1541549127,"is_pvip":false,"replies":[{"id":"13426","content":"是的","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1541586130,"ip_address":"","comment_id":37312,"utype":1}],"discussion_count":1,"race_medal":0,"score":"87440895047","product_id":100020201,"comment_content":"每台服务器原本都不带有程序，但是调度服务器为处理服务器分发任务之后，处理服务器就执行任务并检查是否有该程序，没有就下载，下载之后从指定路径中读取数据进行处理，处理好之后统一存放处理结果，大概的执行流程是这样吗？","like_count":21,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428288,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541586130,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37084,"user_name":"jon","can_delete":false,"product_type":"c1","uid":1253287,"ip_address":"","ucode":"5768A34E292CAA","user_header":"https://static001.geekbang.org/account/avatar/00/13/1f/a7/d379ca4f.jpg","comment_is_top":false,"comment_ctime":1541460696,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"65965970136","product_id":100020201,"comment_content":"移动数据的成本高且一台机器负载不了，所以用计算找数据的方式，让数据平均分布在集群中，把软件包发生到各台机器上并行对相对较小的数据计算，计算结果再合并起来。<br>无状态的原因是程序包可以负载均衡的分发到任何最优的节点进行计算，计算时宕机了也可以在另一台创新计算，各个节点都是一样的环境","like_count":15},{"had_liked":false,"id":37218,"user_name":"cellardoor","can_delete":false,"product_type":"c1","uid":1003824,"ip_address":"","ucode":"ECB20F7DFC5A65","user_header":"https://static001.geekbang.org/account/avatar/00/0f/51/30/da6ae0d8.jpg","comment_is_top":false,"comment_ctime":1541489804,"is_pvip":false,"replies":[{"id":"13331","content":"赞<br><br>关于2幂等，应用服务器无状态，但是应用服务器依赖的数据库或者其他服务器可能有状态，无状态的应用服务器也无法幂等了。需要看情况。","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1541496244,"ip_address":"","comment_id":37218,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31606260876","product_id":100020201,"comment_content":"无状态的好处：<br>1，伸缩性更好，应用之间无需同步状态，方便伸缩。<br>2，幂等，应用服务器之间都是对等的，请求落在哪里都可以得到相同的响应。<br>3，可用性更好，有状态，意味着有数据丢失的可能，在某些情况下，状态不一致容易造成可怕的结果。<br>4，性能好，应用服务器之间无需同步，减少对资源的浪费；","like_count":8,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428244,"discussion_content":"赞\n\n关于2幂等，应用服务器无状态，但是应用服务器依赖的数据库或者其他服务器可能有状态，无状态的应用服务器也无法幂等了。需要看情况。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541496244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37184,"user_name":"五岳寻仙","can_delete":false,"product_type":"c1","uid":1247467,"ip_address":"","ucode":"88A46A4E1832CE","user_header":"https://static001.geekbang.org/account/avatar/00/13/08/eb/594e9e6c.jpg","comment_is_top":false,"comment_ctime":1541476790,"is_pvip":false,"replies":[{"id":"13337","content":"即使有状态的服务器，也尽量做到share nothing，尽少通信，不然n对n通信，通信量巨大","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1541496545,"ip_address":"","comment_id":37184,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31606247862","product_id":100020201,"comment_content":"刚接触这个领域，认知还比较浅显。我觉得成千上万的机器之间通信会很耗费时间，无状态能保证减少机器之间的耦合，提高效率。","like_count":7,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428223,"discussion_content":"即使有状态的服务器，也尽量做到share nothing，尽少通信，不然n对n通信，通信量巨大","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541496545,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48148,"user_name":"小橘子🍊","can_delete":false,"product_type":"c1","uid":1280984,"ip_address":"","ucode":"417D6A2722BEE8","user_header":"https://static001.geekbang.org/account/avatar/00/13/8b/d8/07a43fcc.jpg","comment_is_top":false,"comment_ctime":1544367981,"is_pvip":false,"replies":[{"id":"17338","content":"现在流行的微服务架构，微服务通常都是无状态，状态可以理解成数据。","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1544487856,"ip_address":"","comment_id":48148,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23019204461","product_id":100020201,"comment_content":"小白问？老师能不能举一个例子说明一下什么是有状态什么是无状态？","like_count":5,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432052,"discussion_content":"现在流行的微服务架构，微服务通常都是无状态，状态可以理解成数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544487856,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37335,"user_name":"没有枫树的枫林","can_delete":false,"product_type":"c1","uid":1281397,"ip_address":"","ucode":"A1F0E15576F2B3","user_header":"https://static001.geekbang.org/account/avatar/00/13/8d/75/8f9e5731.jpg","comment_is_top":false,"comment_ctime":1541552146,"is_pvip":false,"replies":[{"id":"13425","content":"大数据的分布式都是有状态的，这个无状态是网站架构里的无状态应用，抱歉思考题跳跃有点大。<br><br>关于无状态应用可以参考我的《大型网站技术架构》这本书","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1541586097,"ip_address":"","comment_id":37335,"utype":1}],"discussion_count":2,"race_medal":0,"score":"23016388626","product_id":100020201,"comment_content":"有点抽象，能举例子说明一下什么是无状态的什么是有状态的吗？移动计算不就是那个节点都进行相同的计算吗？是说计算过程需要依赖其他节点的数据叫有状态？","like_count":5,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428295,"discussion_content":"大数据的分布式都是有状态的，这个无状态是网站架构里的无状态应用，抱歉思考题跳跃有点大。\n\n关于无状态应用可以参考我的《大型网站技术架构》这本书","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541586097,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2284218,"avatar":"","nickname":"Geek_e9aed7","note":"","ucode":"0E0360C43B9D14","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":334164,"discussion_content":"6了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607757296,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37185,"user_name":"老男孩","can_delete":false,"product_type":"c1","uid":1134514,"ip_address":"","ucode":"CEC6D47412F620","user_header":"https://static001.geekbang.org/account/avatar/00/11/4f/b2/1e8b5616.jpg","comment_is_top":false,"comment_ctime":1541476821,"is_pvip":false,"replies":[{"id":"13336","content":"是的","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1541496419,"ip_address":"","comment_id":37185,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18721346005","product_id":100020201,"comment_content":"期待后面的文章。无状态的服务是内聚的低耦合的，同一个用户的请求可以被分发到不同服务节点上进行处理。伸缩自如。","like_count":4,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428224,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541496419,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37099,"user_name":"公号-技术夜未眠","can_delete":false,"product_type":"c1","uid":1013683,"ip_address":"","ucode":"83825B57CBD952","user_header":"https://static001.geekbang.org/account/avatar/00/0f/77/b3/991f3f9b.jpg","comment_is_top":false,"comment_ctime":1541463425,"is_pvip":true,"replies":[{"id":"13375","content":"是的","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1541506260,"ip_address":"","comment_id":37099,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18721332609","product_id":100020201,"comment_content":"无状态服务有利于提升分布式系统的可伸缩性。","like_count":4,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428168,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541506260,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":38569,"user_name":"苏锐","can_delete":false,"product_type":"c1","uid":1002650,"ip_address":"","ucode":"63FE08BDA85187","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4c/9a/e030acb9.jpg","comment_is_top":false,"comment_ctime":1542075442,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14426977330","product_id":100020201,"comment_content":"在 hadoop 提出的年代是百兆网卡为主，所以搬数据会出现网络带宽的瓶颈。今天，万兆网卡已经成为标配，data locality 已经没那么重要了吧，请教李老师。同时，下发计算，scale-out 的能力会受 data node 数量的限制，Facebook 等厂商开始实践存储与计算分离的架构，计算资源更容易在大任务执行时去临时扩展。希望和李老师探讨","like_count":3,"discussions":[{"author":{"id":1031868,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/be/bc/62d402da.jpg","nickname":"Goku","note":"","ucode":"8008F3BB10E609","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":12328,"discussion_content":"正解，计算存储分离是趋势。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568522983,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":38069,"user_name":"贝特","can_delete":false,"product_type":"c1","uid":1276977,"ip_address":"","ucode":"C98E09E7120032","user_header":"https://static001.geekbang.org/account/avatar/00/13/7c/31/3486d7a5.jpg","comment_is_top":false,"comment_ctime":1541919093,"is_pvip":false,"replies":[{"id":"13771","content":"是的","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1542031773,"ip_address":"","comment_id":38069,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14426820981","product_id":100020201,"comment_content":"无状态，主要是为了可靠性和扩缩容。<br>可靠性体现在如果集群中单个节点故障后，其他节点能无缝接管比此节点的数据，而不需要实时做同步。<br>扩缩容和可靠性类似，单节点坏掉就是缩容的一个特殊场景，扩容体现在增加节点后也不需要做状态和数据同步。","like_count":3,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428590,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542031773,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37081,"user_name":"John Lau","can_delete":false,"product_type":"c1","uid":1228942,"ip_address":"","ucode":"891909F6452F6B","user_header":"","comment_is_top":false,"comment_ctime":1541458253,"is_pvip":false,"replies":[{"id":"13377","content":"状态委托给其他服务器，缓存或者数据库。<br>有状态是逻辑需要，可以委托出去，但是很难不要状态。","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1541506573,"ip_address":"","comment_id":37081,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14426360141","product_id":100020201,"comment_content":"無狀態服務可以免除需要同步狀態的情況，系統可以跟據情況把計算自由分發到不同的機器上，而不用考慮同步問題。實現起來也會簡單很多。<br>但我有個問題:現實場景就是有很多時候需要有狀態，有沒有系統的思考方法，把需要狀態的工作方式，改寫成不需要狀態的工作方式？","like_count":3,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428157,"discussion_content":"状态委托给其他服务器，缓存或者数据库。\n有状态是逻辑需要，可以委托出去，但是很难不要状态。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541506573,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139477,"user_name":"达子不一般","can_delete":false,"product_type":"c1","uid":1315527,"ip_address":"","ucode":"A91C8DB45184F7","user_header":"https://static001.geekbang.org/account/avatar/00/14/12/c7/a7a5df8b.jpg","comment_is_top":false,"comment_ctime":1570665953,"is_pvip":false,"replies":[{"id":"54054","content":"分发任务通常是尽量保证任务访问本地数据，这就是MapReduce任务分发算法中的locality。","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1570773459,"ip_address":"","comment_id":139477,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10160600545","product_id":100020201,"comment_content":"分发任务到执行进程执行，执行进程还是要从hdfs数据节点远程拉数据是不？所以是否还是不能算移动计算？","like_count":2,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469965,"discussion_content":"分发任务通常是尽量保证任务访问本地数据，这就是MapReduce任务分发算法中的locality。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570773459,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57904,"user_name":"丶请叫我七七丿。","can_delete":false,"product_type":"c1","uid":1319483,"ip_address":"","ucode":"1F1F4263F317BF","user_header":"https://static001.geekbang.org/account/avatar/00/14/22/3b/a9064d21.jpg","comment_is_top":false,"comment_ctime":1546937955,"is_pvip":false,"replies":[{"id":"20942","content":"继续学习，会有答案～","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1547001293,"ip_address":"","comment_id":57904,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10136872547","product_id":100020201,"comment_content":"大数据引擎根据集群里不同服务器的计算能力，在每台服务器上启动若干分布式任务执行进程，这些进程会等待给它们分配执行任务....<br>请问：分布式任务执行程序是指什么？","like_count":2,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435821,"discussion_content":"继续学习，会有答案～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547001293,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":192568,"user_name":"Geek_f0bcfd","can_delete":false,"product_type":"c1","uid":1519883,"ip_address":"","ucode":"99188FE897FDC6","user_header":"","comment_is_top":false,"comment_ctime":1584860731,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5879828027","product_id":100020201,"comment_content":"纸上来得终觉浅","like_count":1},{"had_liked":false,"id":169258,"user_name":"淤白","can_delete":false,"product_type":"c1","uid":1206503,"ip_address":"","ucode":"D1E65DC40DAF68","user_header":"https://static001.geekbang.org/account/avatar/00/12/68/e7/ee47d0e2.jpg","comment_is_top":false,"comment_ctime":1578302044,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5873269340","product_id":100020201,"comment_content":"无状态服务，可以方便进行服务器扩容和缩容，增加水平扩展性","like_count":1},{"had_liked":false,"id":150532,"user_name":"xiong","can_delete":false,"product_type":"c1","uid":1099375,"ip_address":"","ucode":"C1BFD9EF96372F","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/6f/ac3003fa.jpg","comment_is_top":false,"comment_ctime":1573550962,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5868518258","product_id":100020201,"comment_content":"无状态的服务，更容易支持并发or 并行，也就更容易水平扩容，提高服务整体的吞吐量。","like_count":1},{"had_liked":false,"id":62353,"user_name":"不似旧日","can_delete":false,"product_type":"c1","uid":1161271,"ip_address":"","ucode":"DF4C5E3AB9570C","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/37/98991aeb.jpg","comment_is_top":false,"comment_ctime":1548037491,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5843004787","product_id":100020201,"comment_content":"对移动计算的理解: 当我自己想吃KFC时我自己去店里吃,这叫做移动数据;当1000个人要吃KFC时我让kfc来我家做这叫做移动计算。举个栗子,不接受反驳","like_count":1,"discussions":[{"author":{"id":1102245,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d1/a5/2bbedc3b.jpg","nickname":"over","note":"","ucode":"FE272AC19842D3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394421,"discussion_content":"1万个人吃，kfc也是在店里做好再送过去","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631877164,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61978,"user_name":"杰之7","can_delete":false,"product_type":"c1","uid":1297232,"ip_address":"","ucode":"F7DA2E21085332","user_header":"https://static001.geekbang.org/account/avatar/00/13/cb/50/66d0bd7f.jpg","comment_is_top":false,"comment_ctime":1547870502,"is_pvip":false,"replies":[{"id":"22021","content":"👍","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1548032208,"ip_address":"","comment_id":61978,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5842837798","product_id":100020201,"comment_content":"通过这一节的复习，针对每日PB级数据量，一台计算机的内存，磁盘，带宽没法满足需求时，产生了移动计算比移动数据更划算的思路。<br><br>在大数据技术之前，老师讲述了大型网站的分布式架构思路，由于大型网站的用户请求数量庞大，用更多的服务器来满足不同用户的需求。在次基础之上，产生了大量的已存数据，我们需要对这些数据进行统计算计和关联关系，来给用户更好的体验，于是就产生了大数据技术。<br><br>大数据技术同样也是分布式架构，HDFS存储数据，将数据分成很多Block，数据引擎根据不同服务器的计算能力，启动若干个分布式任务执行进程。MR或者Spark编程，打包成JAR包。Hadoop等执行引擎解析程序处理的数据输入路径，根据数据量大小，分成Split。任务执行进程通过放射加载程序，这一步就是移动计算，即完成了程序的传输。最后执行进程读取数据给程序去执行。<br><br>回到老师的问题架构中无状态服务或者不共享数据，我想是这样服务器之间的耦合更低，便于增加更多的服务器，来满足更多用户的请求。<br><br>之后每一篇的复习都会回答文章老师的问题，也是自己思考的一个过程和学习，会有思考的不足，请老师给出修正。<br>","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437060,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548032208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61840,"user_name":"渔夫","can_delete":false,"product_type":"c1","uid":1019289,"ip_address":"","ucode":"6BF08FD8923E45","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/99/f886543d.jpg","comment_is_top":false,"comment_ctime":1547816102,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5842783398","product_id":100020201,"comment_content":"无状态计算节点的优势之一毫无疑问是方便横向扩展，其二是数据计算与数据存储职责分离，各有各的关注点和架构方向，方便各自迭代演进，协作时可由调度服务根据需求灵活调配。","like_count":1},{"had_liked":false,"id":61414,"user_name":"不似旧日","can_delete":false,"product_type":"c1","uid":1161271,"ip_address":"","ucode":"DF4C5E3AB9570C","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/37/98991aeb.jpg","comment_is_top":false,"comment_ctime":1547694126,"is_pvip":false,"replies":[{"id":"21836","content":"简单说，就是服务自身不记录数据","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1547695866,"ip_address":"","comment_id":61414,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5842661422","product_id":100020201,"comment_content":"什么叫做无状态服务<br>?<br>","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436866,"discussion_content":"简单说，就是服务自身不记录数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547695866,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57341,"user_name":"风之翼","can_delete":false,"product_type":"c1","uid":1218129,"ip_address":"","ucode":"FD524CE1530E9A","user_header":"https://static001.geekbang.org/account/avatar/00/12/96/51/dc51d2d4.jpg","comment_is_top":false,"comment_ctime":1546757092,"is_pvip":false,"replies":[{"id":"20874","content":"等待下一轮分配","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1546940296,"ip_address":"","comment_id":57341,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5841724388","product_id":100020201,"comment_content":"老师你好，既然每台分布式服务器上的任务进程数量是由大数据引擎根据其性能所分配的，那么如果需要处理的数据量较大，导致分片时，数量超过原定的任务进程数怎么办呢","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435533,"discussion_content":"等待下一轮分配","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546940296,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53768,"user_name":"随时都有好心情","can_delete":false,"product_type":"c1","uid":1168769,"ip_address":"","ucode":"85F8E3DE9CFDDC","user_header":"https://static001.geekbang.org/account/avatar/00/11/d5/81/708301e1.jpg","comment_is_top":false,"comment_ctime":1545721846,"is_pvip":false,"replies":[{"id":"19544","content":"mpp也是分布计算，计算模型不同，大数据更灵活，更稳定。","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1545786612,"ip_address":"","comment_id":53768,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5840689142","product_id":100020201,"comment_content":"老师，请问大数据和MPP的区别，有一点在于MPP是数据分散但是集中计算，而大数据是数据分散计算也分散，这样理解对吗？","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434234,"discussion_content":"mpp也是分布计算，计算模型不同，大数据更灵活，更稳定。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545786612,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49918,"user_name":"朱晗","can_delete":false,"product_type":"c1","uid":1236441,"ip_address":"","ucode":"EA3C2DAC795A8B","user_header":"https://static001.geekbang.org/account/avatar/00/12/dd/d9/35171244.jpg","comment_is_top":false,"comment_ctime":1544789741,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5839757037","product_id":100020201,"comment_content":"mapReduce虽然没听过，但我知道python中map是映射，拿到一个迭代器，reduce也是迭代累积功能，常见的就是计算求和，我这么理解，把文件先map分片，然后拿去处理(看作某个lamada函数)，然后再把结果累积起来，这就是mapreduce😂😂","like_count":1},{"had_liked":false,"id":42602,"user_name":"杰之7","can_delete":false,"product_type":"c1","uid":1297232,"ip_address":"","ucode":"F7DA2E21085332","user_header":"https://static001.geekbang.org/account/avatar/00/13/cb/50/66d0bd7f.jpg","comment_is_top":false,"comment_ctime":1542977270,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5837944566","product_id":100020201,"comment_content":"这一节的核心思想移动计算，而不是之前编程思维移动数据，这也是大数据最重要的思维模型。首先`通过HDFS将文件分成很多Block。大数据引擎给每台服务器启动若干分布式执行进程。然后根据大数据计算框架支持的编程模型编写应用程序。最后Hadoop的mapreduce或者Spark的RDD执行应用程序。通过这样的方式，解决的PB级别数据量的处理，为大数据挖掘和分析提供了技术上的支持。","like_count":1},{"had_liked":false,"id":37293,"user_name":"Ahikaka","can_delete":false,"product_type":"c1","uid":1045146,"ip_address":"","ucode":"B3A678567E40A9","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/vhOPEib27xAuTycN0eQekLzsCe9zwcTTcrOb98cIfpgibgcweZBDN38tIicABibuZBwah9jnGVr02H2Zjuue1fLfEQ/132","comment_is_top":false,"comment_ctime":1541519378,"is_pvip":false,"replies":[{"id":"13427","content":"对","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1541586145,"ip_address":"","comment_id":37293,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5836486674","product_id":100020201,"comment_content":"无状态的好处：<br>这样可方便管理调度不用考虑节点的状态。并且可以通过多个节点冗余计算来容错","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428283,"discussion_content":"对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541586145,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37157,"user_name":"Lucas WANG","can_delete":false,"product_type":"c1","uid":1134129,"ip_address":"","ucode":"25C71F06E0A070","user_header":"https://static001.geekbang.org/account/avatar/00/11/4e/31/33c95b53.jpg","comment_is_top":false,"comment_ctime":1541469606,"is_pvip":false,"replies":[{"id":"13369","content":"分配的数据通常在任务进程本地，叫做任务分配的locality，MapReduce架构部分会讨论","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1541505423,"ip_address":"","comment_id":37157,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5836436902","product_id":100020201,"comment_content":"6. 加载程序后，任务执行进程根据分配的数据片的文件地址和数据在文件内的偏移量读取数据，并把数据输入给应用程序相应的方法去执行，从而实现在分布式服务器集群中移动计算程序，对大规模数据进行并行处理的计算目标。<br><br>没看出来是移动计算呀？好像还是移动数据？","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428206,"discussion_content":"分配的数据通常在任务进程本地，叫做任务分配的locality，MapReduce架构部分会讨论","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541505423,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37111,"user_name":"geek","can_delete":false,"product_type":"c1","uid":1234974,"ip_address":"","ucode":"BF9406F6ABDB7B","user_header":"https://static001.geekbang.org/account/avatar/00/12/d8/1e/985d5363.jpg","comment_is_top":false,"comment_ctime":1541464318,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5836431614","product_id":100020201,"comment_content":"最近在自学一些大数据的组件，有个问题想请问一下老师，在不改写sqoop源码的情况下，有没有什么好的方法避免数据倾斜？","like_count":1},{"had_liked":false,"id":37100,"user_name":"公号-技术夜未眠","can_delete":false,"product_type":"c1","uid":1013683,"ip_address":"","ucode":"83825B57CBD952","user_header":"https://static001.geekbang.org/account/avatar/00/0f/77/b3/991f3f9b.jpg","comment_is_top":false,"comment_ctime":1541463426,"is_pvip":true,"replies":[{"id":"13374","content":"是的","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1541505712,"ip_address":"","comment_id":37100,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5836430722","product_id":100020201,"comment_content":"无状态服务有利于提升分布式系统的可伸缩性。","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428169,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541505712,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37090,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1541462309,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5836429605","product_id":100020201,"comment_content":"【自问自答】什么是无状态服务？无状态服务的好处是什么？无状态服务有没有缺点？","like_count":1},{"had_liked":false,"id":343429,"user_name":"以吻封笺","can_delete":false,"product_type":"c1","uid":1232768,"ip_address":"","ucode":"A526E8F27DF5A1","user_header":"https://static001.geekbang.org/account/avatar/00/12/cf/80/012a0b90.jpg","comment_is_top":false,"comment_ctime":1650850247,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1650850247","product_id":100020201,"comment_content":"移动的是程序，数据是不移动的，如果程序之间共享数据或被程序独有，这部分数据不被移动，最终可能导致分布式计算的结果出现不一致","like_count":0},{"had_liked":false,"id":342705,"user_name":"Steven","can_delete":false,"product_type":"c1","uid":1253652,"ip_address":"","ucode":"3FE64459842015","user_header":"https://static001.geekbang.org/account/avatar/00/13/21/14/423a821f.jpg","comment_is_top":false,"comment_ctime":1650425476,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650425476","product_id":100020201,"comment_content":"回答思考题：理论上，计算能力可以任意扩容缩容。","like_count":0},{"had_liked":false,"id":324757,"user_name":"Geek6116","can_delete":false,"product_type":"c1","uid":2844811,"ip_address":"","ucode":"C228701EDBF648","user_header":"","comment_is_top":false,"comment_ctime":1638604771,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638604771","product_id":100020201,"comment_content":"这样的设计保证每一个服务都是完全一样的，缺失和增加任一台服务器都对整体都是无感知的","like_count":0},{"had_liked":false,"id":309879,"user_name":"钱鹏 Allen","can_delete":false,"product_type":"c1","uid":2518863,"ip_address":"","ucode":"7E95E82C0717DA","user_header":"https://static001.geekbang.org/account/avatar/00/26/6f/4f/3cf1e9c4.jpg","comment_is_top":false,"comment_ctime":1630378958,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1630378958","product_id":100020201,"comment_content":"思路一变，局势全变。<br><br>我们从需要更加更强大的处理器变成需要更多粉不是的额服务器劲儿来处理大量数据，将移动计算到移动数据。当我们一直陷入问题本身的时候，不妨跳出来看看是否有其他的解决方案。<br>","like_count":0},{"had_liked":false,"id":308837,"user_name":"阿文","can_delete":false,"product_type":"c1","uid":1467219,"ip_address":"","ucode":"B53454CA52BD7E","user_header":"https://static001.geekbang.org/account/avatar/00/16/63/53/b4590ccc.jpg","comment_is_top":false,"comment_ctime":1629817117,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629817117","product_id":100020201,"comment_content":"课后的问题：无状态计算当然好啊，减轻了分布式情况下状态存储和管理的负担。但我还是觉得应该问题就是用来克服，有状态计算也是非常有用，而且有时候能解决很大的性能问题。像Flink就支持有状态计算","like_count":0},{"had_liked":false,"id":299926,"user_name":"本来是亚","can_delete":false,"product_type":"c1","uid":1073592,"ip_address":"","ucode":"14527E5BC3C2A8","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/b8/7b23f8cb.jpg","comment_is_top":false,"comment_ctime":1624925751,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1624925751","product_id":100020201,"comment_content":"无状态的服务可以减少服务间的强依赖性，利于伸缩扩容","like_count":0},{"had_liked":false,"id":291850,"user_name":"Django","can_delete":false,"product_type":"c1","uid":2251107,"ip_address":"","ucode":"7BBC6F2EDD41AD","user_header":"https://static001.geekbang.org/account/avatar/00/22/59/63/f4a0f3b9.jpg","comment_is_top":false,"comment_ctime":1620550258,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620550258","product_id":100020201,"comment_content":"这个问题问得好，不过能不能首先讲一下“无状态服务”的表现形式……说到无状态，首先想到的是http，但是和“服务”联系不起来…","like_count":0},{"had_liked":false,"id":289529,"user_name":"levi","can_delete":false,"product_type":"c1","uid":1501281,"ip_address":"","ucode":"41AFA57F56C15E","user_header":"https://static001.geekbang.org/account/avatar/00/16/e8/61/47293afd.jpg","comment_is_top":false,"comment_ctime":1619062848,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619062848","product_id":100020201,"comment_content":"1. 无状态的服务便于服务的扩展，伸缩和替换。因为无状态，node就可以随意的增加删除可伸缩，在架构和管理上都极其方便快捷。<br>2. 无状态的服务降低了架构考虑的复杂性，对于有状态的服务，架构中需要考虑服务的状态如何处理，增加了很多异常点<br>3. 从网站整体架构来说，存储系统的出现就是试图将状态都挪到存储系统中，而将无状态的计算留到各个服务中，这种存算分离的模式，也是在贯彻无状态服务的设计。","like_count":0},{"had_liked":false,"id":281320,"user_name":"Geek_287001","can_delete":false,"product_type":"c1","uid":2357290,"ip_address":"","ucode":"191B3044FEECD8","user_header":"","comment_is_top":false,"comment_ctime":1614689184,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614689184","product_id":100020201,"comment_content":"前面4章当看小说似的看完了。万万没想到评论里有这么多优质的思考与总结，草率了。","like_count":0},{"had_liked":false,"id":280867,"user_name":"毛巧龙","can_delete":false,"product_type":"c1","uid":1053393,"ip_address":"","ucode":"4FDB06EAB67A61","user_header":"https://static001.geekbang.org/account/avatar/00/10/12/d1/eb07d91a.jpg","comment_is_top":false,"comment_ctime":1614431230,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614431230","product_id":100020201,"comment_content":"应用系统的核心是计算，结果是数据。而大数据程序面对的核心数据，辅助是数据应用。应用系统面对的是及时响应和大请求，而数据系统面对的是数据量庞大和分散的关联计算。因此大数据需要先规划数据的位置和分片，应用根据数据的切分来分发和部署。面对历史的大数据不是无状态，而是用数据规划来完成数据和应用的匹配。可以说其天然就是单点且有状态的。再往后学习学习，毕竟这些都是经验猜想","like_count":0},{"had_liked":false,"id":263543,"user_name":"eden","can_delete":false,"product_type":"c1","uid":1907540,"ip_address":"","ucode":"CF8F33380D2C4D","user_header":"https://static001.geekbang.org/account/avatar/00/1d/1b/54/c0f328ab.jpg","comment_is_top":false,"comment_ctime":1606180897,"is_pvip":false,"replies":[{"id":"95784","content":"后续专栏有详细讲解","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1606355398,"ip_address":"","comment_id":263543,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1606180897","product_id":100020201,"comment_content":"您好李老师：第四步里面：这个首先是说把输入数据找到对应的服务器，然后再再服务器上面去看这个数据量大小，再看分配几个任务吧？<br>根据输入数据量的大小，将数据分成若干片（Split），每一个数据片都分配给一个任务执行进程去处理。","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510231,"discussion_content":"后续专栏有详细讲解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606355398,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":241453,"user_name":"之渊","can_delete":false,"product_type":"c1","uid":1876212,"ip_address":"","ucode":"02B9299DBB4881","user_header":"https://static001.geekbang.org/account/avatar/00/1c/a0/f4/7e122a67.jpg","comment_is_top":false,"comment_ctime":1597299252,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597299252","product_id":100020201,"comment_content":"把移动计算讲得很明白了。之前一直不是很清楚到底怎样移动计算的","like_count":0},{"had_liked":false,"id":233273,"user_name":"官","can_delete":false,"product_type":"c1","uid":1696727,"ip_address":"","ucode":"E3FF6D04B9846B","user_header":"https://static001.geekbang.org/account/avatar/00/19/e3/d7/d7b3505f.jpg","comment_is_top":false,"comment_ctime":1594277014,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594277014","product_id":100020201,"comment_content":"便于扩展吧，毕竟分布式最重要的特性就是扩展","like_count":0},{"had_liked":false,"id":229678,"user_name":"jams","can_delete":false,"product_type":"c1","uid":1647000,"ip_address":"","ucode":"3C37EF4825CDE3","user_header":"https://static001.geekbang.org/account/avatar/00/19/21/98/16b6dce5.jpg","comment_is_top":false,"comment_ctime":1593096867,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593096867","product_id":100020201,"comment_content":"session就是有状态的，所以java分布式一般采用jwt","like_count":0},{"had_liked":false,"id":220793,"user_name":"技术修行者","can_delete":false,"product_type":"c1","uid":1013147,"ip_address":"","ucode":"28CA41A1214D6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/9b/611e74ab.jpg","comment_is_top":false,"comment_ctime":1590324729,"is_pvip":true,"discussion_count":0,"race_medal":5,"score":"1590324729","product_id":100020201,"comment_content":"无状态的服务，更容易进行水平扩展。<br>有状态的服务，意味着有状态信息需要维护，如何维护这些信息，会让整个系统设计的更加复杂。","like_count":0},{"had_liked":false,"id":153821,"user_name":"Coding小先","can_delete":false,"product_type":"c1","uid":1051563,"ip_address":"","ucode":"965B1CC757E026","user_header":"https://static001.geekbang.org/account/avatar/00/10/0b/ab/0e2857e5.jpg","comment_is_top":false,"comment_ctime":1574312432,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574312432","product_id":100020201,"comment_content":"不同服务实例处理结果必须一致，不然用户请求买个A商品，结果一号服务给他买了A商品，二号服务给他买了B商品，谁都得崩溃。<br>无状态可能是指，例如：用户请求购买一件商品，服务实例只关注自己所需处理的信息，处理完成就继续下一笔，不记录用户状态，用户权限验证，交易成功或者异常等情况，交给专门处理这些任务的服务。","like_count":0},{"had_liked":false,"id":145916,"user_name":"dany","can_delete":false,"product_type":"c1","uid":1185926,"ip_address":"","ucode":"0990375202642F","user_header":"https://static001.geekbang.org/account/avatar/00/12/18/86/3599130b.jpg","comment_is_top":false,"comment_ctime":1572402139,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1572402139","product_id":100020201,"comment_content":"你这哪里是从0开始啊，没有头绪啊 ","like_count":0,"discussions":[{"author":{"id":1336951,"avatar":"https://static001.geekbang.org/account/avatar/00/14/66/77/194ba21d.jpg","nickname":"lzh","note":"","ucode":"C3D83DF4230109","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":368248,"discussion_content":"不然先从原码补码反码开始吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618631703,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1013147,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/75/9b/611e74ab.jpg","nickname":"技术修行者","note":"","ucode":"28CA41A1214D6B","race_medal":5,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":272558,"discussion_content":"可能每个人对0基础的理解不一样吧。\n如果感觉对思考题不知道如何解答，建议看一遍留言，收获会很多。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590324852,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115310,"user_name":"weiruan85","can_delete":false,"product_type":"c1","uid":1069949,"ip_address":"","ucode":"8CFD7B198759E3","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Ng7NIuMhg8E3U6DjwJlTKFcEYsTtFJkiag22G13JXSiaobpibfI6MicKg93VNqQnG7Rkvl2OfCsAaSksCAVbNDp8zw/132","comment_is_top":false,"comment_ctime":1563529345,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563529345","product_id":100020201,"comment_content":"这篇文章给我最大的收获是：分布式计算的设计思想，将计算移动到数据端。 对于复杂的工作任务，我们可以通过分解将任务分解成为小任务。由不同的人去完成不同的任务，最后进行结果汇总。<br><br>","like_count":0},{"had_liked":false,"id":108659,"user_name":"少盐","can_delete":false,"product_type":"c1","uid":1305743,"ip_address":"","ucode":"BCC7E264B75702","user_header":"https://static001.geekbang.org/account/avatar/00/13/ec/8f/8299495a.jpg","comment_is_top":false,"comment_ctime":1561823596,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561823596","product_id":100020201,"comment_content":"无状态服务是内聚的，低耦合的，减少通信，便于伸缩，而大数据分布式的移动计算最后还是要把结果集合起来，应该是有状态的服务","like_count":0},{"had_liked":false,"id":101014,"user_name":"我是不知道我","can_delete":false,"product_type":"c1","uid":1007686,"ip_address":"","ucode":"62B089B481DC78","user_header":"https://static001.geekbang.org/account/avatar/00/0f/60/46/06657cab.jpg","comment_is_top":false,"comment_ctime":1559700882,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559700882","product_id":100020201,"comment_content":"从共享数据引发的问题考虑，共享数据会引发数据不一致导致的异常，数据读写增加的延迟性能问题，维护数据一致增加的复杂度问题。维护数据共享同时会降低集群水平扩展的能力。<br>无服务状态，每次请求都是独立的，程序更简单，更容易扩展。","like_count":0},{"had_liked":false,"id":88342,"user_name":"之外^Excepts","can_delete":false,"product_type":"c1","uid":1035331,"ip_address":"","ucode":"FD2284F65DB22F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cc/43/59a9b4ae.jpg","comment_is_top":false,"comment_ctime":1555907921,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555907921","product_id":100020201,"comment_content":"将逻辑运算与存量数据分离。可以分而制之， 如逻辑运算可以优化时，无需考虑影响数据的存放；增强数据的一致性，减少存量数据再利用的难度（需要再经过至少一次ETL）等。","like_count":0},{"had_liked":false,"id":87553,"user_name":"songgoogle","can_delete":false,"product_type":"c1","uid":1225810,"ip_address":"","ucode":"B45BC4007C08E7","user_header":"https://static001.geekbang.org/account/avatar/00/12/b4/52/75c44c71.jpg","comment_is_top":false,"comment_ctime":1555635040,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555635040","product_id":100020201,"comment_content":"如果做不到，那就转移状态到计算框架之外，这样就会涉及到一致性，zookeeper","like_count":0},{"had_liked":false,"id":84947,"user_name":"gkb111","can_delete":false,"product_type":"c1","uid":1224217,"ip_address":"","ucode":"9B3154BCC9046B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLLUic3XzxET3L3QXxcTbeg96GMx1HkiaiaZdudchmOmtPnuEPHK5vYEeMkvJR098XljMbXDialYib3z6w/132","comment_is_top":false,"comment_ctime":1554948534,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554948534","product_id":100020201,"comment_content":"无状态服务，我（数据）就在这里，你索取也好，存储也罢，我始终在这里。哈哈😄","like_count":0},{"had_liked":false,"id":61895,"user_name":"水电工٩(｡•ω•｡)﻿و","can_delete":false,"product_type":"c1","uid":1348364,"ip_address":"","ucode":"C43B6B4DDA9BE7","user_header":"https://static001.geekbang.org/account/avatar/00/14/93/0c/dd383681.jpg","comment_is_top":false,"comment_ctime":1547830827,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547830827","product_id":100020201,"comment_content":"请问老师，移动计算是否可以理解为把大数据分析的总任务切分成无数小任务分配到不同服务器上面，由各自的服务器计算各自的任务，然后汇总起来？<br>如果是这样的话，我有个疑问，一开始所有数据被切分成片单个存储在服务器集群的所有服务器中，那每个服务器分配到的任务是随机的，还是存储哪个切片分析哪个？<br>另外，对于无状态服务，我依旧太清楚。请老师指点。","like_count":0},{"had_liked":false,"id":58378,"user_name":"阿袁","can_delete":false,"product_type":"c1","uid":1115038,"ip_address":"","ucode":"25D8B8699C0E2D","user_header":"https://static001.geekbang.org/account/avatar/00/11/03/9e/a61e0598.jpg","comment_is_top":false,"comment_ctime":1547046931,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547046931","product_id":100020201,"comment_content":"这篇文章很赞，值了专栏的钱","like_count":0},{"had_liked":false,"id":56925,"user_name":"Acrofrank","can_delete":false,"product_type":"c1","uid":1242227,"ip_address":"","ucode":"A168E89336225A","user_header":"https://static001.geekbang.org/account/avatar/00/12/f4/73/3de86e77.jpg","comment_is_top":false,"comment_ctime":1546580846,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1546580846","product_id":100020201,"comment_content":"无状态我一直就没有搞懂","like_count":0},{"had_liked":false,"id":55101,"user_name":"安静","can_delete":false,"product_type":"c1","uid":1212634,"ip_address":"","ucode":"7C4DB6D81A48EB","user_header":"https://static001.geekbang.org/account/avatar/00/12/80/da/9c0c458c.jpg","comment_is_top":false,"comment_ctime":1546044752,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546044752","product_id":100020201,"comment_content":"通篇看下来，这句话的意思我的理解就是数据所在服务器使用hdfs存储，然后相应的计算框架通过数据的输入路径来找到这些数据进行计算，这个就是所谓的移动计算嘛。","like_count":0},{"had_liked":false,"id":45285,"user_name":"周翔","can_delete":false,"product_type":"c1","uid":1068734,"ip_address":"","ucode":"E5E12D9B02AF59","user_header":"https://static001.geekbang.org/account/avatar/00/10/4e/be/693b5e5e.jpg","comment_is_top":false,"comment_ctime":1543576862,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543576862","product_id":100020201,"comment_content":"无状态才能去中心化，从而做到大规模集群。<br>移动计算的逻辑应用场景就是，从存储空间上来说，现在是大数据和小程序的时代，以前逻辑数据是中心化存储的，通过网络传输给程序运算机器（或者直接数据存储机器上完成的，比如关系型数据库和存储过程）。但是，数据大到一定程度，必须分布式存储，既然数据大到搬不动，那就把比较小的运算程序分发给数据所在服务器，这样分而治之，能管理好分布式任务，能接受到最后结果就行了。","like_count":0},{"had_liked":false,"id":40439,"user_name":"刘胜","can_delete":false,"product_type":"c1","uid":1251625,"ip_address":"","ucode":"487374D72543E3","user_header":"https://static001.geekbang.org/account/avatar/00/13/19/29/f9490983.jpg","comment_is_top":false,"comment_ctime":1542619715,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542619715","product_id":100020201,"comment_content":"这样方便分配数据，可以把数据分配到不同的计算机去计算而不对结果产生影响。结果仍然是对的。当数据很大的时候，计算所需的时间就会短一点。","like_count":0},{"had_liked":false,"id":40037,"user_name":"哈哈小侠","can_delete":false,"product_type":"c1","uid":1281376,"ip_address":"","ucode":"26A806CE3991DA","user_header":"https://static001.geekbang.org/account/avatar/00/13/8d/60/318f6019.jpg","comment_is_top":false,"comment_ctime":1542449344,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542449344","product_id":100020201,"comment_content":"希望课程后续还是更加的贴近实际的开发，以及内在的技术讲解，谢谢作为一个大数据的小白，希望了解技术的历史，同时也希望技术能更加贴近自己的生活……","like_count":0},{"had_liked":false,"id":39965,"user_name":"One day","can_delete":false,"product_type":"c1","uid":1126868,"ip_address":"","ucode":"F71F465ABB3A6A","user_header":"https://static001.geekbang.org/account/avatar/00/11/31/d4/3dcddc04.jpg","comment_is_top":false,"comment_ctime":1542423540,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542423540","product_id":100020201,"comment_content":"为什么不是从hadoop开始讲呢？","like_count":0},{"had_liked":false,"id":39481,"user_name":"clairec","can_delete":false,"product_type":"c1","uid":1281520,"ip_address":"","ucode":"4B1C80C5CC61C7","user_header":"https://static001.geekbang.org/account/avatar/00/13/8d/f0/38fbd52d.jpg","comment_is_top":false,"comment_ctime":1542287067,"is_pvip":false,"replies":[{"id":"14136","content":"是的","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1542293243,"ip_address":"","comment_id":39481,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542287067","product_id":100020201,"comment_content":"无状态的好处就是方便扩展，可伸缩性，可扩展性相对高","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429079,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542293243,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":38961,"user_name":"左数第三","can_delete":false,"product_type":"c1","uid":1163222,"ip_address":"","ucode":"7A840DC4BF9471","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJLt9GVR0GqQlUNvxUMOfBib6U9PAkFIS21j27MYAhPLsJPxibTm3YfEIKLdPv2kgubVapicljg6VopA/132","comment_is_top":false,"comment_ctime":1542162519,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542162519","product_id":100020201,"comment_content":"无状态的服务可以随时被调度，而不会对其他的进程产生不良影响，避免微小错误传播积累，产生涟漪，波及整个系统。","like_count":0},{"had_liked":false,"id":38753,"user_name":"Franklin.du","can_delete":false,"product_type":"c1","uid":1005891,"ip_address":"","ucode":"A249024B44A164","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/43/66e5643a.jpg","comment_is_top":false,"comment_ctime":1542121043,"is_pvip":false,"replies":[{"id":"14012","content":"是的","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1542238864,"ip_address":"","comment_id":38753,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542121043","product_id":100020201,"comment_content":"看到这个问题，想到最近看到RESTful架构介绍的文章，也有无状态服务的介绍。扩展性更强。","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428796,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542238864,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":38512,"user_name":"小阳","can_delete":false,"product_type":"c1","uid":1296135,"ip_address":"","ucode":"97A162992E6A81","user_header":"https://static001.geekbang.org/account/avatar/00/13/c7/07/5798c17e.jpg","comment_is_top":false,"comment_ctime":1542070084,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542070084","product_id":100020201,"comment_content":"无状态的服务可以极大的解除耦合，让分布式集群有更强大的并发能力。共享状态和数据成本是很高的，其共享的数据需要牺牲一定的性能做同步，而且一个请求进来需要多个服务协同工作才能响应的话，效率并不高。","like_count":0},{"had_liked":false,"id":38129,"user_name":"有何不可","can_delete":false,"product_type":"c1","uid":1152000,"ip_address":"","ucode":"922D7C721E1047","user_header":"https://static001.geekbang.org/account/avatar/00/11/94/00/507db37c.jpg","comment_is_top":false,"comment_ctime":1541949477,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1541949477","product_id":100020201,"comment_content":"无状态更好管理，有状态就有耦合，互相之间就会千丝万缕。","like_count":0},{"had_liked":false,"id":37969,"user_name":"innovator琳","can_delete":false,"product_type":"c1","uid":1175445,"ip_address":"","ucode":"8C9258DF7E5B0C","user_header":"https://static001.geekbang.org/account/avatar/00/11/ef/95/754df959.jpg","comment_is_top":false,"comment_ctime":1541830143,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1541830143","product_id":100020201,"comment_content":"做客户端的，感觉看了老师这节课队服务器后端有点感性的认识了","like_count":0},{"had_liked":false,"id":37746,"user_name":"酱了个油","can_delete":false,"product_type":"c1","uid":1059627,"ip_address":"","ucode":"5A13CA4EAACB81","user_header":"https://static001.geekbang.org/account/avatar/00/10/2b/2b/bebf6eed.jpg","comment_is_top":false,"comment_ctime":1541723473,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1541723473","product_id":100020201,"comment_content":"为什么大数据的计算节点有状态的呀","like_count":0},{"had_liked":false,"id":37606,"user_name":"Jeff.W","can_delete":false,"product_type":"c1","uid":1140420,"ip_address":"","ucode":"2043F83FB7B39C","user_header":"https://static001.geekbang.org/account/avatar/00/11/66/c4/038f9325.jpg","comment_is_top":false,"comment_ctime":1541650353,"is_pvip":false,"replies":[{"id":"13537","content":"是的","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1541678174,"ip_address":"","comment_id":37606,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1541650353","product_id":100020201,"comment_content":"无状态，才能scale-out，横向扩展，配合容器编排效果更佳~","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428422,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541678174,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37605,"user_name":"jack","can_delete":false,"product_type":"c1","uid":1182934,"ip_address":"","ucode":"D3DBD1DC490E1E","user_header":"https://static001.geekbang.org/account/avatar/00/12/0c/d6/2677ec43.jpg","comment_is_top":false,"comment_ctime":1541650273,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1541650273","product_id":100020201,"comment_content":"通俗易懂，传统软件开发移动数据，大数据时代移动计算。","like_count":0},{"had_liked":false,"id":37481,"user_name":"蔓蔓玖零","can_delete":false,"product_type":"c1","uid":1282902,"ip_address":"","ucode":"0CC5C9663B4918","user_header":"","comment_is_top":false,"comment_ctime":1541602911,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1541602911","product_id":100020201,"comment_content":"老师，我是学法律的，虽然很多词汇都是第一次接触，但是感觉大数据就是改变以前传统将数据整合分析，而是将算法分配到每一个数据片，然后算出来。所以叫分布式架构。那至于为什么要采用这种架构，为什么有这个原理。就是为了增大效率吗？还是有点懵懂。但是想到一个思考：为什么淘宝要做大数据分析，为什么中国才有代购？我认为代购事业其实效率极低，当我们在刷朋友圈的时候，这些都是无的放矢，其实是浪费我们的有目的性浏览时间。但是淘宝智能地选择出我们感兴趣的，就可以刺激消费。所以代购事业其实是反淘宝之理念，通过让你看到不同的产品刺激消费。但是为啥中国代购事业崛起呢？<br>是因为中国人被动接受习惯了？不喜欢大数据吗？就像有时候我刷抖音看到的都是类似的；觉得很没意思，就需要新鲜感来刺激。所以可能大数据还是有bug的，他没法了解我们人类真实想法吧。还需要优化吧。","like_count":0},{"had_liked":false,"id":37397,"user_name":"滔布什","can_delete":false,"product_type":"c1","uid":1087576,"ip_address":"","ucode":"BB035CA3CDFF2A","user_header":"https://static001.geekbang.org/account/avatar/00/10/98/58/d8b7f61a.jpg","comment_is_top":false,"comment_ctime":1541569252,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1541569252","product_id":100020201,"comment_content":"讲的挺好，通俗易懂，就是更新太慢啦","like_count":0},{"had_liked":false,"id":37281,"user_name":"暴风雪","can_delete":false,"product_type":"c1","uid":1283139,"ip_address":"","ucode":"BF1523D69866FF","user_header":"https://static001.geekbang.org/account/avatar/00/13/94/43/46a7d0a8.jpg","comment_is_top":false,"comment_ctime":1541517878,"is_pvip":false,"replies":[{"id":"13428","content":"部署使用后再听效果更好","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1541586236,"ip_address":"","comment_id":37281,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1541517878","product_id":100020201,"comment_content":"请问老师，我要不要先去使用一下那些关于hadoop之类的软件，以便于听课有助于理解","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428274,"discussion_content":"部署使用后再听效果更好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541586236,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37278,"user_name":"5-","can_delete":false,"product_type":"c1","uid":1198962,"ip_address":"","ucode":"2EEA7A58A24139","user_header":"https://static001.geekbang.org/account/avatar/00/12/4b/72/26203e13.jpg","comment_is_top":false,"comment_ctime":1541515901,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1541515901","product_id":100020201,"comment_content":"有点不懂。。<br>原则上无状态当然可以降低通信量，便于扩容。<br>但是做不到啊。。<br>每个节点各算各的，假如有100个节点，节点1算了一半，节点2算完了，这个状态所有的节点不需要都知道吗？如果都知道的话是不是就需要有状态啊，是委托到一个状态server吗？","like_count":0},{"had_liked":false,"id":37267,"user_name":"davino","can_delete":false,"product_type":"c1","uid":1060869,"ip_address":"","ucode":"F1C6C6524E3EAE","user_header":"https://static001.geekbang.org/account/avatar/00/10/30/05/d20a9361.jpg","comment_is_top":false,"comment_ctime":1541512958,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1541512958","product_id":100020201,"comment_content":"之前一直有看到ServerLess这个词，但一直不太明白。看了留言，多少了解概念。但是在现实的工作当中，很多都是有状态有关的。哪怕跟踪到点击，也是需要知道是哪个用户点击，这些在我理解当中都是状态。不知道作者对有状态的操作分解成无状态有什么见解？","like_count":0},{"had_liked":false,"id":37260,"user_name":"伊森","can_delete":false,"product_type":"c1","uid":1142172,"ip_address":"","ucode":"270A665771F463","user_header":"https://static001.geekbang.org/account/avatar/00/11/6d/9c/beaf7642.jpg","comment_is_top":false,"comment_ctime":1541509883,"is_pvip":false,"replies":[{"id":"13430","content":"可以写入消息队列，直接从队列读取显示<br>也可以写入MySQL","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1541588358,"ip_address":"","comment_id":37260,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1541509883","product_id":100020201,"comment_content":"老师，那个实时计算的结果，一般都存储在什么库上？便于实时的展示","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428266,"discussion_content":"可以写入消息队列，直接从队列读取显示\n也可以写入MySQL","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541588358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37258,"user_name":"无形","can_delete":false,"product_type":"c1","uid":1016889,"ip_address":"","ucode":"B740E2A68A17A5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/84/39/c8772466.jpg","comment_is_top":false,"comment_ctime":1541509776,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1541509776","product_id":100020201,"comment_content":"无状态深有体会，不然会出现数据不一致","like_count":0},{"had_liked":false,"id":37254,"user_name":"足迹","can_delete":false,"product_type":"c1","uid":1105779,"ip_address":"","ucode":"38134D1A6B8DC2","user_header":"https://static001.geekbang.org/account/avatar/00/10/df/73/4a4ce2b5.jpg","comment_is_top":false,"comment_ctime":1541508460,"is_pvip":false,"replies":[{"id":"13431","content":"是的","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1541588390,"ip_address":"","comment_id":37254,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1541508460","product_id":100020201,"comment_content":"1、解耦合，每台服务器之间各自计算，加机器或某机器挂掉时无需同步状态。<br>2、减少服务器之间的io，io太频繁会成为瓶颈。<br>","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428262,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541588390,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37247,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1541504803,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1541504803","product_id":100020201,"comment_content":"气象预报适合与大型机还是分布式计算。这两种各有什么优缺点？","like_count":0},{"had_liked":false,"id":37214,"user_name":"暴风雪","can_delete":false,"product_type":"c1","uid":1283139,"ip_address":"","ucode":"BF1523D69866FF","user_header":"https://static001.geekbang.org/account/avatar/00/13/94/43/46a7d0a8.jpg","comment_is_top":false,"comment_ctime":1541488890,"is_pvip":false,"replies":[{"id":"13332","content":"是的","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1541496254,"ip_address":"","comment_id":37214,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1541488890","product_id":100020201,"comment_content":"无状态有助于架构应用的扩展","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428241,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541496254,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37205,"user_name":"Martin Lee","can_delete":false,"product_type":"c1","uid":1043485,"ip_address":"","ucode":"3D311DCAC159AA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/1d/3bf65e5c.jpg","comment_is_top":false,"comment_ctime":1541483945,"is_pvip":false,"replies":[{"id":"13334","content":"使用需要优化，大数据产品也在不断迭代优化，可关注后面spark性能优化的内容","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1541496370,"ip_address":"","comment_id":37205,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1541483945","product_id":100020201,"comment_content":"大数据如何保证性能，流式计算，离线计算，实时计算","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428235,"discussion_content":"使用需要优化，大数据产品也在不断迭代优化，可关注后面spark性能优化的内容","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541496370,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37202,"user_name":"张白水","can_delete":false,"product_type":"c1","uid":1072821,"ip_address":"","ucode":"4F0057BFB5A7B3","user_header":"https://static001.geekbang.org/account/avatar/00/10/5e/b5/88d0754b.jpg","comment_is_top":false,"comment_ctime":1541482026,"is_pvip":false,"replies":[{"id":"13335","content":"是的","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1541496387,"ip_address":"","comment_id":37202,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1541482026","product_id":100020201,"comment_content":"无状态服务，方便负载均衡，实现请求的转发，降低服务之间的耦合性","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428233,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541496387,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37180,"user_name":"lyshrine","can_delete":false,"product_type":"c1","uid":1058278,"ip_address":"","ucode":"497551F047A5C6","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/e6/a69cff76.jpg","comment_is_top":false,"comment_ctime":1541475493,"is_pvip":false,"replies":[{"id":"13338","content":"hive是构建在MapReduce上的SQL引擎，后面有专门讨论hive的内容，可关注","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1541496615,"ip_address":"","comment_id":37180,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1541475493","product_id":100020201,"comment_content":"老师，Hive是在合适用的呢？<br>&quot;使用大数据计算框架支持的编程模型进行编程，比如 Hadoop 的 MapReduce 编程模型，或者 Spark 的 RDD 编程模型。&quot;是在编程时用Hive?","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428221,"discussion_content":"hive是构建在MapReduce上的SQL引擎，后面有专门讨论hive的内容，可关注","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541496615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37162,"user_name":"落叶飞逝的恋","can_delete":false,"product_type":"c1","uid":1046429,"ip_address":"","ucode":"F9A95DB28BCF1E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/9d/be04b331.jpg","comment_is_top":false,"comment_ctime":1541470581,"is_pvip":false,"replies":[{"id":"13340","content":"1的好处更大一些<br>2 3受有无状态影响小一点","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1541496786,"ip_address":"","comment_id":37162,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1541470581","product_id":100020201,"comment_content":"这种无状态服务用术语可以描述为：微服务。<br>使用这样的好处：<br>1、若请求量过大时候，可以很快速的增加服务器，也就是增强应用对外提供的能力。<br>2、减少各个应用的之间的耦合性<br>3、过载时，可以快速熔断","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428210,"discussion_content":"1的好处更大一些\n2 3受有无状态影响小一点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541496786,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37139,"user_name":"于腾跃","can_delete":false,"product_type":"c1","uid":1180963,"ip_address":"","ucode":"EE1816FEB6DC45","user_header":"https://static001.geekbang.org/account/avatar/00/12/05/23/1ad30a17.jpg","comment_is_top":false,"comment_ctime":1541466317,"is_pvip":false,"replies":[{"id":"13380","content":"谢谢","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1541506678,"ip_address":"","comment_id":37139,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1541466317","product_id":100020201,"comment_content":"讲的很好，很期待后面的文章！","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428193,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541506678,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37130,"user_name":"微思","can_delete":false,"product_type":"c1","uid":1004349,"ip_address":"","ucode":"853C48AA183A7B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/53/3d/1189e48a.jpg","comment_is_top":false,"comment_ctime":1541465396,"is_pvip":true,"replies":[{"id":"13371","content":"是的","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1541505493,"ip_address":"","comment_id":37130,"utype":1}],"discussion_count":1,"race_medal":4,"score":"1541465396","product_id":100020201,"comment_content":"一句话：无状态服务更方便横向扩展。","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428186,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541505493,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37113,"user_name":"Jowin","can_delete":false,"product_type":"c1","uid":1114356,"ip_address":"","ucode":"19017F7D06C22A","user_header":"https://static001.geekbang.org/account/avatar/00/11/00/f4/cc5f0896.jpg","comment_is_top":false,"comment_ctime":1541464362,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1541464362","product_id":100020201,"comment_content":"程序无状态是分布式时代提出的，可以快速重启，灵活扩容，负载均衡等等。在大数据时代，显著的就是方便移动计算到需要的地方。","like_count":0},{"had_liked":false,"id":37096,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1541463063,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1541463063","product_id":100020201,"comment_content":"【自问自答】什么是无状态服务？ 无状态服务的好处是什么？ ","like_count":0}]}