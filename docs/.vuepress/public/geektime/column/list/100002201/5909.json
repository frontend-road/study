{"id":5909,"title":"54 | 管理设计篇之“边车模式”","content":"<p>你好，我是陈皓，网名左耳朵耗子。</p>\n<p>所谓的边车模式，对应于我们生活中熟知的边三轮摩托车。也就是说，我们可以通过给一个摩托车加上一个边车的方式来扩展现有的服务和功能。这样可以很容易地做到&quot;控制&quot;和&quot;逻辑&quot;的分离。</p>\n<p>也就是说，我们不需要在服务中实现控制面上的东西，如监视、日志记录、限流、熔断、服务注册、协议适配转换等这些属于控制面上的东西，而只需要专注地做好和业务逻辑相关的代码，然后，由“边车”来实现这些与业务逻辑没有关系的控制功能。</p>\n<h1>边车模式设计</h1>\n<p>具体来说，你可以理解为，边车就有点像一个服务的Agent，这个服务所有对外的进出通讯都通过这个Agent来完成。这样，我们就可以在这个Agent上做很多文章了。但是，我们需要保证的是，这个Agent要和应用程序一起创建，一起停用。</p>\n<p>边车模式有时候也叫搭档模式，或是伴侣模式，或是跟班模式。就像我们在《编程范式游记》中看到的那样，<strong>编程的本质就是将控制和逻辑分离和解耦，而边车模式也是异曲同工</strong>，同样是让我们在分布式架构中做到逻辑和控制分离。</p>\n<!-- [[[read_end]]] -->\n<p>对于监视、日志、限流、熔断、服务注册、协议转换等等这些功能，其实都是大同小异，甚至是完全可以做成标准化的组件和模块的。一般来说，我们有两种方式。</p>\n<ul>\n<li>\n<p>一种是通过SDK、Lib或Framework软件包方式，在开发时与真实的应用服务集成起来。</p>\n</li>\n<li>\n<p>另一种是通过像Sidecar这样的方式，在运维时与真实的应用服务集成起来。</p>\n</li>\n</ul>\n<p>这两种方式各有优缺点。</p>\n<ul>\n<li>\n<p>以软件包的方式可以和应用密切集成，有利于资源的利用和应用的性能，但是对应用有侵入，而且受应用的编程语言和技术限制。同时，当软件包升级的时候，需要重新编译并重新发布应用。</p>\n</li>\n<li>\n<p>以Sidecar的方式，对应用服务没有侵入性，并且不用受到应用服务的语言和技术的限制，而且可以做到控制和逻辑的分开升级和部署。但是，这样一来，增加了每个应用服务的依赖性，也增加了应用的延迟，并且也会大大增加管理、托管、部署的复杂度。</p>\n<p>注意，对于一些“老的系统”，因为代码太老，改造不过来，我们又没有能力重写。比如一些银行里很老的用C语言或是COBAL语言写的子系统，我们想把它们变成分布式系统，需要对其进行协议的改造以及进行相应的监控和管理。这个时候，Sidecar的方式就很有价值了。因为没有侵入性，所以可以很快地低风险地改造。</p>\n<p>Sidecar服务在逻辑上和应用服务部署在一个结点中，其和应用服务有相同的生命周期。对比于应用程序的每个实例，都会有一个Sidecar的实例。Sidecar可以很快也很方便地为应用服务进行扩展，而不需要应用服务的改造。比如：</p>\n</li>\n<li>\n<p>Sidecar可以帮助服务注册到相应的服务发现系统，并对服务做相关的健康检查。如果服务不健康，我们可以从服务发现系统中把服务实例移除掉。</p>\n</li>\n<li>\n<p>当应用服务要调用外部服务时， Sidecar可以帮助从服务发现中找到相应外部服务的地址，然后做服务路由。</p>\n</li>\n<li>\n<p>Sidecar接管了进出的流量，我们就可以做相应的日志监视、调用链跟踪、流控熔断……这些都可以放在Sidecar里实现。</p>\n</li>\n<li>\n<p>然后，服务控制系统可以通过控制Sidecar来控制应用服务，如流控、下线等。</p>\n</li>\n</ul>\n<p>于是，我们的应用服务则可以完全做到专注于业务逻辑。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/e3/f7/e30300b16a8fe0870ebfbec5a093b4f7.png?wh=864*441\" alt=\"\" /></p>\n<p>注意，如果把Sidecar这个实例和应用服务部署在同一台机器中，那么，其实Sidecar的进程在理论上来说是可以访问应用服务的进程能访问的资源的。比如，Sidecar是可以监控到应用服务的进程信息的。</p>\n<p>另外，因为两个进程部署在同一台机器上，所以两者之间的通信不存在明显的延迟。也就是说，服务的响应延迟虽然会因为跨进程调用而增加，但这个增加完全是可以接受的。</p>\n<p>另外，我们可以看到这样的部署方式，最好是与Docker容器的方式一起使用的。为什么Docker一定会是分布式系统或是云计算的关键技术，相信你从我的这一系列文章中已经看到其简化架构的部署和管理的重要作用。否则，这么多的分布式架构模式实施起来会有很多麻烦。</p>\n<h1>边车设计的重点</h1>\n<p>首先，我们要知道边车模式重点解决什么样的问题。</p>\n<ol>\n<li>控制和逻辑的分离。</li>\n<li>服务调用中上下文的问题。</li>\n</ol>\n<p>我们知道，熔断、路由、服务发现、计量、流控、监视、重试、幂等、鉴权等控制面上的功能，以及其相关的配置更新，本质来上来说，和服务的关系并不大。但是传统的工程做法是在开发层面完成这些功能，这就会导致各种维护上的问题，而且还会受到特定语言和编程框架的约束和限制。</p>\n<p>而随着系统架构的复杂化和扩张，我们需要更统一地管理和控制这些控制面上的功能，所以传统的在开发层面上完成控制面的管理会变得非常难以管理和维护。这使得我们需要通过Sidecar模式来架构我们的系统。</p>\n<p>边车模式从概念上理解起来比较简单，但是在工程实现上来说，需要注意以下几点。</p>\n<ul>\n<li>\n<p>进程间通讯机制是这个设计模式的重点，千万不要使用任何对应用服务有侵入的方式，比如，通过信号的方式，或是通过共享内存的方式。最好的方式就是网络远程调用的方式（因为都在127.0.0.1上通讯，所以开销并不明显）。</p>\n</li>\n<li>\n<p>服务协议方面，也请使用标准统一的方式。这里有两层协议，一个是Sidecar到service的内部协议，另一个是Sidecar到远端Sidecar或service的外部协议。对于内部协议，需要尽量靠近和兼容本地service的协议；对于外部协议，需要尽量使用更为开放更为标准的协议。但无论是哪种，都不应该使用与语言相关的协议。</p>\n</li>\n<li>\n<p>使用这样的模式，需要在服务的整体打包、构建、部署、管控、运维上设计好。使用Docker容器方面的技术可以帮助你全面降低复杂度。</p>\n</li>\n<li>\n<p>Sidecar中所实现的功能应该是控制面上的东西，而不是业务逻辑上的东西，所以请尽量不要把业务逻辑设计到Sidecar中。</p>\n</li>\n<li>\n<p>小心在Sidecar中包含通用功能可能带来的影响。例如，重试操作，这可能不安全，除非所有操作都是幂等的。</p>\n</li>\n<li>\n<p>另外，我们还要考虑允许应用服务和Sidecar的上下文传递的机制。 例如，包含HTTP请求标头以选择退出重试，或指定最大重试次数等等这样的信息交互。或是Sidecar告诉应用服务限流发生，或是远程服务不可用等信息，这样可以让应用服务和Sidecar配合得更好。</p>\n</li>\n</ul>\n<p>当然，我们要清楚Sidecar适用于什么样的场景，下面罗列几个。</p>\n<ul>\n<li>一个比较明显的场景是对老应用系统的改造和扩展。</li>\n<li>另一个是对由多种语言混合出来的分布式服务系统进行管理和扩展。</li>\n<li>其中的应用服务由不同的供应商提供。</li>\n<li>把控制和逻辑分离，标准化控制面上的动作和技术，从而提高系统整体的稳定性和可用性。也有利于分工——并不是所有的程序员都可以做好控制面上的开发的。</li>\n</ul>\n<p>同时，我们还要清楚Sidecar不适用于什么样的场景，下面罗列几个。</p>\n<ul>\n<li>架构并不复杂的时候，不需要使用这个模式，直接使用API Gateway或者Nginx和HAProxy等即可。</li>\n<li>服务间的协议不标准且无法转换。</li>\n<li>不需要分布式的架构。</li>\n</ul>\n<h1>小结</h1>\n<p>好了，我们来总结一下今天分享的主要内容。首先，我介绍了什么是边车模式。为了把诸如监视、日志、限流等控制逻辑与业务逻辑分离解耦，我们可以采用边车模式。与之对应的另一种实现控制逻辑的方式是库或框架。虽然相对来说边车模式资源消耗较大，但控制逻辑不会侵入业务逻辑，还能适应遗留老系统的低风险改造。</p>\n<p>边车作为另一个进程，和服务进程部署在同一个结点中，通过一个标准的网络协议，如HTTP来进行通信。这样可以做到低延迟和标准化。同时，用Docker来打包边车和服务两者，可以非常方便部署。最后，我指出了边车模式适用和不适用的场景。下节课，我们讲述服务网格。希望对你有帮助。</p>\n<p>也欢迎你分享一下你实现服务的同时有没有实现边车模式？有没有用到Docker来打包边车和服务两者？</p>\n<p>文末给出了《分布式系统设计模式》系列文章的目录，希望你能在这个列表里找到自己感兴趣的内容。</p>\n<ul>\n<li>弹力设计篇\n<ul>\n<li><a href=\"https://time.geekbang.org/column/article/3912\">认识故障和弹力设计</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/3917\">隔离设计Bulkheads</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/3926\">异步通讯设计Asynchronous</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/4050\">幂等性设计Idempotency</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/4086\">服务的状态State</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/4087\">补偿事务Compensating Transaction</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/4121\">重试设计Retry</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/4241\">熔断设计Circuit Breaker</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/4245\">限流设计Throttle</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/4252\">降级设计degradation</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/4253\">弹力设计总结</a></li>\n</ul>\n</li>\n<li>管理设计篇\n<ul>\n<li><a href=\"https://time.geekbang.org/column/article/5175\">分布式锁Distributed Lock</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/5819\">配置中心Configuration Management</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/5909\">边车模式Sidecar</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/5920\">服务网格Service Mesh</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/6086\">网关模式Gateway</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/6283\">部署升级策略</a></li>\n</ul>\n</li>\n<li>性能设计篇\n<ul>\n<li><a href=\"https://time.geekbang.org/column/article/6282\">缓存Cache</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/7036\">异步处理Asynchronous</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/7045\">数据库扩展</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/7047\">秒杀Flash Sales</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/7086\">边缘计算Edge Computing</a></li>\n</ul>\n</li>\n</ul>\n","neighbors":{"left":{"article_title":"53 | 管理设计篇之“配置中心”","id":5819},"right":{"article_title":"55 | 管理设计篇之“服务网格”","id":5920}},"comments":[{"had_liked":false,"id":6442,"user_name":"约书亚","can_delete":false,"product_type":"c1","uid":1046714,"ip_address":"","ucode":"81EA27ADD9EC1A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/ba/14e05601.jpg","comment_is_top":false,"comment_ctime":1524734810,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"83129113434","product_id":100002201,"comment_content":"出门左转，service mesh就是靠sidecar支撑起来的，随着微服务的升级换代sidecar会越来越多的提起<br>netflix有prana，主要是针对自己的微服务全家桶的，好像spring cloud也有对应实现<br><br><br>","like_count":19,"discussions":[{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390231,"discussion_content":"右转会遇到什么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629722699,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1033748,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c6/14/3f206319.jpg","nickname":"Finch","note":"","ucode":"627124740E3940","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392887,"discussion_content":"love\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1631167654,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":390231,"ip_address":""},"score":392887,"extra":""}]}]},{"had_liked":false,"id":6396,"user_name":"AYOU","can_delete":false,"product_type":"c1","uid":1048845,"ip_address":"","ucode":"BEF18C1DB4B621","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/0d/75b3cb10.jpg","comment_is_top":false,"comment_ctime":1524703811,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"61654245955","product_id":100002201,"comment_content":"求一个边车模式的开源项目。。","like_count":14,"discussions":[{"author":{"id":1045078,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f2/56/c39046c0.jpg","nickname":"Jie","note":"","ucode":"AB94041E548FEB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":123206,"discussion_content":"Istio","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1578395736,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1191577,"avatar":"https://static001.geekbang.org/account/avatar/00/12/2e/99/98db6622.jpg","nickname":"布雷顿森林","note":"","ucode":"86EB9EFF7A06E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376495,"discussion_content":"SpringCloud Sidecar，通过Sidecar 支持non-JVM language接入SpringCloud，使用Eureka，SpringCloud Config server和Ribbon","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622164966,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2446418,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/zdK3dSkFwicZHtx5CLAKFJRORRibq2YqvHOP0tySLxVx0X1oD9AJanan2wia2hHaswgxdrCzEEGyVgFTVZ8sElTzQ/132","nickname":"Geek_fbfc4f","note":"","ucode":"7010B242A3F474","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373758,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620867117,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1104850,"avatar":"https://static001.geekbang.org/account/avatar/00/10/db/d2/e29f8834.jpg","nickname":"lidashuang","note":"","ucode":"560ABE8032760E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":322398,"discussion_content":"istio","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604738569,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1554638,"avatar":"https://static001.geekbang.org/account/avatar/00/17/b8/ce/0abbb54d.jpg","nickname":"俊毓","note":"","ucode":"F150D39D00FAAC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":131367,"discussion_content":"opentracing jaeger","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578838632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":13586,"user_name":"neohope","can_delete":false,"product_type":"c1","uid":1043475,"ip_address":"","ucode":"C0268F6E7E2B6E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/13/49e98289.jpg","comment_is_top":false,"comment_ctime":1529825534,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"27299629310","product_id":100002201,"comment_content":"在近期的项目中用过，新项目是基于spring cloud的，我们有些旧服务是C#写的webservice，重新封装为rest，并用了side car模式提供服务信息和监控信息，虽然与spring boot实现的服务还是有些差距，但效果还可以：） ","like_count":6,"discussions":[{"author":{"id":1503506,"avatar":"https://static001.geekbang.org/account/avatar/00/16/f1/12/7dac30d6.jpg","nickname":"你为啥那么牛","note":"","ucode":"1ABC604A54A8F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319223,"discussion_content":"webservice 与 rest 是两个概念，要说与spring boot 对比的话，应该是 dotnet MVC。dotnet mvc的理念要早于spring boot，即所谓的约定优于配置。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603966092,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":6648,"user_name":"alienradio","can_delete":false,"product_type":"c1","uid":1065364,"ip_address":"","ucode":"57FA9FAC616EC4","user_header":"https://static001.geekbang.org/account/avatar/00/10/41/94/dfbf6107.jpg","comment_is_top":false,"comment_ctime":1524879908,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14409781796","product_id":100002201,"comment_content":"linkerd 边车部署","like_count":3},{"had_liked":false,"id":167401,"user_name":"文刂 氵共 超","can_delete":false,"product_type":"c1","uid":1282813,"ip_address":"","ucode":"C2CE1512D23012","user_header":"https://static001.geekbang.org/account/avatar/00/13/92/fd/6b0e58fe.jpg","comment_is_top":false,"comment_ctime":1577784101,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10167718693","product_id":100002201,"comment_content":"检查学习，学习笔记 https:&#47;&#47;mubu.com&#47;colla&#47;3uIVMTpB10M","like_count":2},{"had_liked":false,"id":6459,"user_name":"秋天","can_delete":false,"product_type":"c1","uid":1057056,"ip_address":"","ucode":"A7E1D953EF7E17","user_header":"https://static001.geekbang.org/account/avatar/00/10/21/20/1299e137.jpg","comment_is_top":false,"comment_ctime":1524745589,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10114680181","product_id":100002201,"comment_content":"有没有可以参考的边车模式实现？？？？<br>","like_count":2},{"had_liked":false,"id":6427,"user_name":"曾经的十字镐","can_delete":false,"product_type":"c1","uid":1083415,"ip_address":"","ucode":"EC9297BEC3085F","user_header":"https://static001.geekbang.org/account/avatar/00/10/88/17/68aa48cb.jpg","comment_is_top":false,"comment_ctime":1524721237,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10114655829","product_id":100002201,"comment_content":"第一遍没有好好看，感觉和api gateway差不多，第二遍看的时候发现其中的猫腻，感谢老鼠哥","like_count":2,"discussions":[{"author":{"id":1242217,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f4/69/be6c8fc1.jpg","nickname":"ericlf","note":"","ucode":"08345AB709CB60","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":126999,"discussion_content":"这个api gateway 有啥区别吗，求教","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1578558183,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":211722,"user_name":"Geek_CK2020","can_delete":false,"product_type":"c1","uid":1961826,"ip_address":"","ucode":"5DF4BE058F5A58","user_header":"https://static001.geekbang.org/account/avatar/00/1d/ef/62/87d9ef62.jpg","comment_is_top":false,"comment_ctime":1587998908,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5882966204","product_id":100002201,"comment_content":"为了把诸如监视、日志、限流等控制逻辑与业务逻辑分离解耦，我们可以采用边车模式。","like_count":1},{"had_liked":false,"id":171073,"user_name":"俊毓","can_delete":false,"product_type":"c1","uid":1554638,"ip_address":"","ucode":"F150D39D00FAAC","user_header":"https://static001.geekbang.org/account/avatar/00/17/b8/ce/0abbb54d.jpg","comment_is_top":false,"comment_ctime":1578839038,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5873806334","product_id":100002201,"comment_content":"opentracing jaeger的agent，如果是在k8s或者容器化部署，时候可以给每一个服务自动注入。这样，trace信息就可以直接发给localhost。这是边车在agent部署的典型应用","like_count":1},{"had_liked":false,"id":167808,"user_name":"奔跑H赛道","can_delete":false,"product_type":"c1","uid":1622851,"ip_address":"","ucode":"6C276C2203DA6D","user_header":"https://static001.geekbang.org/account/avatar/00/18/c3/43/18af0008.jpg","comment_is_top":false,"comment_ctime":1577938073,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5872905369","product_id":100002201,"comment_content":"哈哈，前两天刚看了一点service mesh。今天看到sidecar越看越眼熟","like_count":1},{"had_liked":false,"id":6424,"user_name":"枫晴 andy","can_delete":false,"product_type":"c1","uid":1050830,"ip_address":"","ucode":"10ABBD7E7561A8","user_header":"https://static001.geekbang.org/account/avatar/00/10/08/ce/f7d637fb.jpg","comment_is_top":false,"comment_ctime":1524719318,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5819686614","product_id":100002201,"comment_content":"一次调用副作用和调用多次副作用一样，这里的副作用是指什么？","like_count":1,"discussions":[{"author":{"id":1299347,"avatar":"https://static001.geekbang.org/account/avatar/00/13/d3/93/c3fb8566.jpg","nickname":"ProcessIsTheKey","note":"","ucode":"BE02EFD75F7D98","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376731,"discussion_content":"对被调用方系统产生的影响。例如更新一条数据，更新一次，和更新多次应该效果一样；删除一条数据，第一次成功删除后，被调用方系统已经不存在这条数据了，后续第二次，第三次等等的所有删除调用，被调用方系统仍然是不存在这条数据的状态。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622296173,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":360128,"user_name":"eightAge","can_delete":false,"product_type":"c1","uid":1031336,"ip_address":"北京","ucode":"FF7AB24E25ABA9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bc/a8/4a1a4166.jpg","comment_is_top":false,"comment_ctime":1666191447,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1666191447","product_id":100002201,"comment_content":"之前为了在运行时去修改nginx的配置，用go写了个简单的api，打到nginx镜像后跑在pod里供其他服务调用","like_count":0},{"had_liked":false,"id":324767,"user_name":"饭粒","can_delete":false,"product_type":"c1","uid":1153455,"ip_address":"","ucode":"4C3220B0D43997","user_header":"https://static001.geekbang.org/account/avatar/00/11/99/af/d29273e2.jpg","comment_is_top":false,"comment_ctime":1638610567,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638610567","product_id":100002201,"comment_content":"有点像给业务应用绑定一个agent","like_count":0},{"had_liked":false,"id":320609,"user_name":"方勇(gopher)","can_delete":false,"product_type":"c1","uid":1290625,"ip_address":"","ucode":"D199911C4CFEF5","user_header":"https://static001.geekbang.org/account/avatar/00/13/b1/81/13f23d1e.jpg","comment_is_top":false,"comment_ctime":1636420091,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636420091","product_id":100002201,"comment_content":"目前用的java   sidecar模式，解决异构服务的通信！","like_count":0},{"had_liked":false,"id":292345,"user_name":"健康的小牛犊","can_delete":false,"product_type":"c1","uid":2263754,"ip_address":"","ucode":"A63C30B602F0A5","user_header":"https://static001.geekbang.org/account/avatar/00/22/8a/ca/1afcc75b.jpg","comment_is_top":false,"comment_ctime":1620787476,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1620787476","product_id":100002201,"comment_content":"istio的数据平面使用的envoy就是一个典型的边车，接管了pod里所有和网络通信相关的内容","like_count":0},{"had_liked":false,"id":237389,"user_name":"余巍","can_delete":false,"product_type":"c1","uid":1995082,"ip_address":"","ucode":"B0819C42A82371","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI0eGJygV4lh6PJuotKrz1jsZcOdNiaHnUC3y5A2O3yudUQLkzOE8758icDoXlvgpytQ50ibSIc9nJmg/132","comment_is_top":false,"comment_ctime":1595816403,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595816403","product_id":100002201,"comment_content":"实现控制和业务的分离，有很多种方案，每种方案都是不同粒度层面选择。","like_count":0},{"had_liked":false,"id":209528,"user_name":"Geek_dwq","can_delete":false,"product_type":"c1","uid":1817279,"ip_address":"","ucode":"7DC6BFCF746787","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/wI2LwgvwseNqXwkF67zicD9UXBSle9DPhmL6uyKG9Nib6NLfU3OuKYuSQ4DHCWxIQecnqell2vKVvNX8boox0B8w/132","comment_is_top":false,"comment_ctime":1587564077,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1587564077","product_id":100002201,"comment_content":"标题下面的三轮摩托车图片非常棒，很形象，一看就容易理解边车模式，太赞了！","like_count":0,"discussions":[{"author":{"id":1288001,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/41/9993b112.jpg","nickname":"君子鸿","note":"","ucode":"F81F79D61B0E20","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373490,"discussion_content":"真的是一图胜千言","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620744083,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183571,"user_name":"亢（知行合一的路上）","can_delete":false,"product_type":"c1","uid":1347013,"ip_address":"","ucode":"958AF7C96EB9E8","user_header":"https://static001.geekbang.org/account/avatar/00/14/8d/c5/898b13b4.jpg","comment_is_top":false,"comment_ctime":1583069219,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583069219","product_id":100002201,"comment_content":"陈老师把边车模式讲透了，介绍了概念、解决的问题、实现方式、适合的场景、不适合的场景、注意事项等，这样深入才能把一个概念搞透，借鉴学习模式。<br>","like_count":0},{"had_liked":false,"id":170472,"user_name":"知行合一","can_delete":false,"product_type":"c1","uid":1521486,"ip_address":"","ucode":"2B8E634FC4CFB7","user_header":"https://static001.geekbang.org/account/avatar/00/17/37/4e/5c3153b2.jpg","comment_is_top":false,"comment_ctime":1578618831,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578618831","product_id":100002201,"comment_content":"边车模式，全链路监控系统就是这种模式，应用端会有一个agent负责收集数据，发送到服务端来统计","like_count":0},{"had_liked":false,"id":170265,"user_name":"ericlf","can_delete":false,"product_type":"c1","uid":1242217,"ip_address":"","ucode":"08345AB709CB60","user_header":"https://static001.geekbang.org/account/avatar/00/12/f4/69/be6c8fc1.jpg","comment_is_top":false,"comment_ctime":1578558523,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578558523","product_id":100002201,"comment_content":"请问jmx管理属于边车模式吗？","like_count":0},{"had_liked":false,"id":114489,"user_name":"edisonhuang","can_delete":false,"product_type":"c1","uid":1530167,"ip_address":"","ucode":"BB2F639A779F96","user_header":"https://static001.geekbang.org/account/avatar/00/17/59/37/bd2de0a4.jpg","comment_is_top":false,"comment_ctime":1563324664,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563324664","product_id":100002201,"comment_content":"边车模式是为了解决服务控制和逻辑的分离，同时解决服务上下文的问题。和边车模式类似还有使用SDK或者框架的方式，后者相较边车模式的缺点在于需要侵入到软件代码中，当需要改造的软件较老时，使用边车模式可以不受编程语言的限制。<br>使用边车模式和应用软件是同机器一起部署的，虽然有跨进程调用的开销，但基本可以忽略","like_count":0},{"had_liked":false,"id":107315,"user_name":"程序员Artist","can_delete":false,"product_type":"c1","uid":1063635,"ip_address":"","ucode":"F6AEC69AE77DC0","user_header":"https://static001.geekbang.org/account/avatar/00/10/3a/d3/c273ee50.jpg","comment_is_top":false,"comment_ctime":1561513914,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1561513914","product_id":100002201,"comment_content":"回头一想，发现这个模式有一个问题，就是粒度比较粗，它只能做到接口级别。这样细粒度（代码片段级别）的监控、日志做不了。但是其实也无所谓，更重要更大头的熔断降级限流重试、注册、协议适配等可以做。","like_count":0,"discussions":[{"author":{"id":1554638,"avatar":"https://static001.geekbang.org/account/avatar/00/17/b8/ce/0abbb54d.jpg","nickname":"俊毓","note":"","ucode":"F150D39D00FAAC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":131375,"discussion_content":"代码级别的，一样可以通过opentracing_jaeger的边车部署方式来实现trace。其实边车是一个思想，本文把它细化成一种设计模式了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578838840,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":107308,"user_name":"程序员Artist","can_delete":false,"product_type":"c1","uid":1063635,"ip_address":"","ucode":"F6AEC69AE77DC0","user_header":"https://static001.geekbang.org/account/avatar/00/10/3a/d3/c273ee50.jpg","comment_is_top":false,"comment_ctime":1561513518,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561513518","product_id":100002201,"comment_content":"这个有意思啊，对于复杂的分布式服务来说确实好处非常多，我竟然第一次听说。这种模式目前有公司在用了吗？控制和逻辑分离，思想很不错，实现也简单，感觉有搞头。","like_count":0},{"had_liked":false,"id":62458,"user_name":"Sam_bo","can_delete":false,"product_type":"c1","uid":1155916,"ip_address":"","ucode":"888F4117855CF2","user_header":"https://static001.geekbang.org/account/avatar/00/11/a3/4c/ae84f80e.jpg","comment_is_top":false,"comment_ctime":1548062493,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1548062493","product_id":100002201,"comment_content":"目前我所知道的边车模式 thanos https:&#47;&#47;github.com&#47;improbable-eng&#47;thanos 应该算是边车模式的一种，不确定说的是不是对的","like_count":0},{"had_liked":false,"id":40108,"user_name":"剑八","can_delete":false,"product_type":"c1","uid":1297630,"ip_address":"","ucode":"0A09F41DB8A4E7","user_header":"https://static001.geekbang.org/account/avatar/00/13/cc/de/e28c01e1.jpg","comment_is_top":false,"comment_ctime":1542505036,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1542505036","product_id":100002201,"comment_content":"会有一点性能开销","like_count":0},{"had_liked":false,"id":33544,"user_name":"Panda","can_delete":false,"product_type":"c1","uid":1095740,"ip_address":"","ucode":"911A200C7B18BE","user_header":"https://static001.geekbang.org/account/avatar/00/10/b8/3c/1a294619.jpg","comment_is_top":false,"comment_ctime":1539824026,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1539824026","product_id":100002201,"comment_content":"Sidecare 和Server Mesh 密切相关 例如开源项目istio","like_count":0},{"had_liked":false,"id":14795,"user_name":"Han","can_delete":false,"product_type":"c1","uid":1122349,"ip_address":"","ucode":"280808D4F641AA","user_header":"https://static001.geekbang.org/account/avatar/00/11/20/2d/dfa5bec8.jpg","comment_is_top":false,"comment_ctime":1530668340,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1530668340","product_id":100002201,"comment_content":"耗子叔，能否推荐个工具或框架能比较好的实现边车模式呢？ ","like_count":0},{"had_liked":false,"id":11380,"user_name":"风的叹息","can_delete":false,"product_type":"c1","uid":1014963,"ip_address":"","ucode":"5982CA332D46E0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/b3/40e8fa1d.jpg","comment_is_top":false,"comment_ctime":1528103412,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1528103412","product_id":100002201,"comment_content":"如果再有一节实践讲解就更好啦，知道原理和实践还有些路程。","like_count":0},{"had_liked":false,"id":7134,"user_name":"free","can_delete":false,"product_type":"c1","uid":1063817,"ip_address":"","ucode":"65F3F0ADD38D19","user_header":"","comment_is_top":false,"comment_ctime":1525307312,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525307312","product_id":100002201,"comment_content":"没个写笔记功能啊。sidecar还没用过","like_count":0},{"had_liked":false,"id":6447,"user_name":"LIngo1990","can_delete":false,"product_type":"c1","uid":1074627,"ip_address":"","ucode":"68C5C5277ECF7B","user_header":"","comment_is_top":false,"comment_ctime":1524738472,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1524738472","product_id":100002201,"comment_content":"hadoop生态集群管理工具，cloudera manager 了解一下？","like_count":0}]}