{"id":85770,"title":"16 | Go语言的相关接口","content":"<h1>课件及源代码地址</h1><p><a href=\"https://gitee.com/geektime-geekbang/go_learning\">https://gitee.com/geektime-geekbang/go_learning</a></p><h2>书目推荐</h2><p><a href=\"time://mall?url=https%3A%2F%2Fh5.youzan.com%2Fv2%2Fgoods%2F1ycmk3uob0ryw\">《计算机程序的构造和解释》</a></p>","comments":[{"had_liked":false,"id":129895,"user_name":"三年级2班 陈同学","can_delete":false,"product_type":"c3","uid":1639318,"ip_address":"","ucode":"5242BA5A1AACE1","user_header":"https://static001.geekbang.org/account/avatar/00/19/03/96/3def6d95.jpg","comment_is_top":false,"comment_ctime":1567319059,"is_pvip":false,"replies":[{"id":48464,"content":"不用担心，多看看我给的例子，多改多试","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1567343226,"ip_address":"","comment_id":129895,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"作为 PHPer  总用java来讲我也很懵啊","like_count":7,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465703,"discussion_content":"不用担心，多看看我给的例子，多改多试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567343226,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1429336,"avatar":"https://static001.geekbang.org/account/avatar/00/15/cf/58/dabb0f73.jpg","nickname":"Super Ollie","note":"","ucode":"4F30DE41673C97","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391318,"discussion_content":"什么语言重要吗？重点在那个继承","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630398080,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82486,"user_name":"哇哈哈","can_delete":false,"product_type":"c3","uid":1175537,"ip_address":"","ucode":"47453D1C96A1DD","user_header":"https://static001.geekbang.org/account/avatar/00/11/ef/f1/8b06801a.jpg","comment_is_top":false,"comment_ctime":1554221693,"is_pvip":false,"replies":[{"id":29964,"content":"之所以穿指针是为了数据复制，interface是协议定义并不包含数据","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1554364805,"ip_address":"","comment_id":82486,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"把参数从interface指针换成interface就可以了，但是之前说的传指针是一种好习惯可以避免对象的拷贝，所以很不理解这里为什么用interface指针就不可以","like_count":5,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445610,"discussion_content":"之所以穿指针是为了数据复制，interface是协议定义并不包含数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554364805,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2890901,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/1c/95/3d8920c9.jpg","nickname":"abcdabcd999","note":"","ucode":"E1D9902737F544","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":600261,"discussion_content":"interface 本身就是一根指针\npackage main\n\nimport (\n\t&#34;fmt&#34;\n\t&#34;os&#34;\n)\n\nfunc main() {\n\ta := &amp;Cat{}\n\tvar i Animal = a // Animal 对象的本质是一根指针\n\tfmt.Println(&#34;cat sound is&#34;, i.Sound())\n\tfmt.Println(&#34;cat sound is&#34;, a.Sound())\n\tWhatType(a)\n\tWhatType(i)\n\tfmt.Println(&#34;--------cat seperation--------&#34;)\n\tb := new(Dog)\n\ti = b\n\tfmt.Println(&#34;dog sound is&#34;, b.Sound())\n\tfmt.Println(&#34;dog sound is&#34;, i.Sound())\n\tWhatType(b)\n\tWhatType(i)\n\tos.Exit(0)\n}\n\n// interface\ntype Animal interface {\n\tSound() string\n}\n\nfunc WhatType(a Animal) {\n\tfmt.Printf(&#34;%T\\n&#34;, a)\n}\n\ntype Cat struct {\n}\n\nfunc (c *Cat) Sound() string {\n\treturn &#34;miaomiao&#34;\n}\n\ntype Dog struct {\n}\n\nfunc (d *Dog) Sound() string {\n\treturn &#34;wangwang&#34;\n}","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1674140190,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"山西","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1419723,"avatar":"https://static001.geekbang.org/account/avatar/00/15/a9/cb/a431bde5.jpg","nickname":"木头发芽","note":"","ucode":"657B381C5DA963","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":235678,"discussion_content":"mark也解了我的疑惑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587047005,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":251701,"user_name":"青鸟飞鱼","can_delete":false,"product_type":"c3","uid":1807943,"ip_address":"","ucode":"8C64517DA556FE","user_header":"https://static001.geekbang.org/account/avatar/00/1b/96/47/93838ff7.jpg","comment_is_top":false,"comment_ctime":1601803040,"is_pvip":false,"replies":[{"id":95906,"content":"因为借口类型需要对应的是指针类型的实例。new返回的就是指向实例的指针","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1606549166,"ip_address":"","comment_id":251701,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"老师你好，为什么Programmer要new，我测试不new的话，编译不过，想不通","like_count":4,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506588,"discussion_content":"因为借口类型需要对应的是指针类型的实例。new返回的就是指向实例的指针","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606549166,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1890825,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/da/09/5fc3b526.jpg","nickname":"郭泽鑫🐤","note":"","ucode":"40B9981EEC524F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":651855,"discussion_content":"因为你的 WriteHelloWorld 方法有指针接收器，改成值接收器的话就可以使用实例了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1727597276,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134927,"user_name":"iMARS","can_delete":false,"product_type":"c3","uid":1113733,"ip_address":"","ucode":"10C5C31908AA09","user_header":"https://static001.geekbang.org/account/avatar/00/10/fe/85/9ab352a7.jpg","comment_is_top":false,"comment_ctime":1568957380,"is_pvip":false,"replies":[{"id":51904,"content":"这里要用指针才行：\tanimal := append(zoo, &amp;dog1)\n","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1569138782,"ip_address":"","comment_id":134927,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"&#47;&#47;定义一个抽象的动物类接口\ntype IAnimal interface {\n\tSay(msg string) string\n}\n\ntype Duck struct {\n\tName string\n}\n\ntype Dog struct {\n\tName string\n}\n\nfunc (duck *Duck) Say(msg string) string {\n\treturn fmt.Sprintf(&quot;duck duck! my name is %s,%s&quot;, duck.Name, msg)\n}\n\nfunc (dog *Dog) Say(world string) string {\n\treturn fmt.Sprintf(&quot;wang wang! my name is %s,%s&quot;, dog.Name, msg)\n}\n\nfunc TestAnimal(t *testing.T) {\n\tdog1 := Dog{Name: &quot;Kitty&quot;}\n\tvar zoo = make([]IAnimal, 10, 20)\n\tanimal := append(zoo, dog1)\n      t.Log(animal)\n}\n\n为何最后两句会报 cannot use dog1 (type Dog) as type IAnimal in append:\n\tDog does not implement IAnimal (Say method has pointer receiver)\n求指点！谢谢。","like_count":4,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467960,"discussion_content":"这里要用指针才行：\tanimal := append(zoo, &amp;amp;dog1)\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569138782,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1113733,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fe/85/9ab352a7.jpg","nickname":"iMARS","note":"","ucode":"10C5C31908AA09","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":17262,"discussion_content":"找到原因了，dog1 := Dog{Name: &#34;Kitty&#34;} 类型推断系统只会认为它是Dog类型。当放入Slice中时不会做自动转换，Test代码修改后可以正常工作了。func TestInterfaceType(t *testing.T) {\n\tvar myDuck, myDog IAnimal\n\tmyDuck = new(Duck)\n\tif _, ok := myDuck.(*Duck); ok { //判断是否实现了某个接口\n\t\tt.Log(&#34;Duck is implements IAnimal&#34;)\n\t}\n\n\tmyDog = new(Dog)\n\tzoo := []IAnimal{myDuck, myDog}\n\tfor _, animal := range zoo {\n\t\tt.Log(animal.Say())\n\t}\n}","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1568962888,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2890901,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/1c/95/3d8920c9.jpg","nickname":"abcdabcd999","note":"","ucode":"E1D9902737F544","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":600262,"discussion_content":"Animal 本身就是一根指针，你得传入指针才行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1674140281,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"山西","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":102593,"user_name":"春春家的雷雷","can_delete":false,"product_type":"c3","uid":1453138,"ip_address":"","ucode":"267A4726E5F95F","user_header":"","comment_is_top":false,"comment_ctime":1560259359,"is_pvip":false,"replies":[{"id":37523,"content":"通常先定义两个模块交互的方法，这些方法定义在接口里。然后，模块都依赖于接口。各模块的分别实现自己的，接口就像协议。","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1560501137,"ip_address":"","comment_id":102593,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"接口是定义多个对象之间交互的协议？不是太懂，这个有点蒙，老师能不能再稍微解释一下，接口对我们开发有什么指导意义吗？为什么要有接口呢，我只是知道接口定义了类的行为，必须实现哪些动作才能实现这个接口，这样有什么意思吗？还是不懂，望老师指点","like_count":4,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453491,"discussion_content":"通常先定义两个模块交互的方法，这些方法定义在接口里。然后，模块都依赖于接口。各模块的分别实现自己的，接口就像协议。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1560501137,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"奕","note":"","ucode":"73CEA468CE70C3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":186303,"discussion_content":"在类似java语言中，基于接口而非实现编程，是为了达到很好的扩展性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582675843,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":252927,"user_name":"甘康艺","can_delete":false,"product_type":"c3","uid":1953633,"ip_address":"","ucode":"D06219B5C592CF","user_header":"https://static001.geekbang.org/account/avatar/00/1d/cf/61/f592700e.jpg","comment_is_top":false,"comment_ctime":1602517250,"is_pvip":false,"replies":[{"id":92993,"content":"函数定义是必须按照函数签名展开的","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1603284884,"ip_address":"","comment_id":252927,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"老师请教一个问题，该节课最后谈到的自定义类型里面，返回值类型为什么使用自定义类型会出错？\ntype IntConv func(op int) int\n\nfunc timeSpent(inner IntConv) IntConv {\n\treturn func(n int) int { &#47;&#47;此处 func(n int) int 用 IntConv代替会出错\n\t\tstart := time.Now()\n\t\tret := inner(n)\n\t\tfmt.Println(&quot;time spent: &quot;, time.Since(start).Seconds())\n\t\treturn ret\n\t}\n}","like_count":3,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506918,"discussion_content":"函数定义是必须按照函数签名展开的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603284884,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1152178,"avatar":"https://static001.geekbang.org/account/avatar/00/11/94/b2/6d587bb1.jpg","nickname":"久违的","note":"","ucode":"34F703D88A643D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":561200,"discussion_content":"func timeSpent(inner IntConv) IntConv\n这里面只有 func timeSpent() 是函数前面，也展开了，所以编译正常","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649575691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1152178,"avatar":"https://static001.geekbang.org/account/avatar/00/11/94/b2/6d587bb1.jpg","nickname":"久违的","note":"","ucode":"34F703D88A643D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":561199,"discussion_content":"func timeSpent(inner IntConv) IntConv","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649575633,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":76437,"user_name":"逗逼师父","can_delete":false,"product_type":"c3","uid":1017863,"ip_address":"","ucode":"ECC2D82F83CBE6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/88/07/7804f4cc.jpg","comment_is_top":false,"comment_ctime":1552611810,"is_pvip":false,"replies":[{"id":28326,"content":"这里是方法类型的定义，就像你定义struct，这里不是类型转化。\n至于性能和消耗，接下我的课程会讲如何benchmark代码，留给你自己实验分析得出结论，并分享给大家","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1552965234,"ip_address":"","comment_id":76437,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"老师您好，结合之前的知识点：go不支持隐式类型转换，我有些疑问，我的代码如下，也是我思考问题的思路：\n\n代码块1：\ntype MyInt int\nfunc myFunc(op int) MyInt {\n       &#47;&#47; 明显,go不支持隐式类型转换，所以编译是不会通过的\n\treturn op\n}\n\n代码块2：\n&#47;&#47; 原始代码\nfunc timeSpent(inner func(op int) int) func(op int) int {\n\treturn func(n int) int {\n\t\tstart := time.Now()\n\t\tret := inner(n)\n\t\tfmt.Println(&quot;time spent: &quot;, time.Since(start).Seconds())\n\t\treturn ret\n\t}\n}\n\ntype IntConv func(op int) int\n&#47;&#47; 改良代码1\nfunc timeSpent1(inner IntConv) IntConv {\n       &#47;&#47; 我总觉得这里就是一种隐式转换\n      &#47;&#47; 但是函数不是数据类型，所以不受隐式类型转换规则的约束\n\treturn func(n int) int {\n\t\tstart := time.Now()\n\t\tret := inner(n)\n\t\tfmt.Println(&quot;time spent: &quot;, time.Since(start).Seconds())\n\t\treturn ret\n\t}\n}\n\n&#47;&#47; 改良代码2\nfunc timeSpent2(inner IntConv) IntConv {\n       &#47;&#47; 于是，我想到了一种算是“显示”转换的方式，代码如下：\n\tintConv := *new(IntConv)\n\tintConv = func(op int) int {\n\t\tstart := time.Now()\n\t\tret := inner(op)\n\t\tfmt.Println(&quot;time spent: &quot;, time.Since(start).Seconds())\n\t\treturn ret\n\t}\n\treturn intConv\n}\n\n我的疑问在于：\n1. 我对显示转换和隐式转换的理解是否有误，如果有误的话，是错在哪里了？\n2. timeSpent1和timeSpent2函数都实现了原有功能，只是实现方式不同，那么它们更深层次的区别是什么，比如是不是会有额外的内存消耗之类的？\n\n提问完毕，期待老师的解答，谢谢。","like_count":2,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443309,"discussion_content":"这里是方法类型的定义，就像你定义struct，这里不是类型转化。\n至于性能和消耗，接下我的课程会讲如何benchmark代码，留给你自己实验分析得出结论，并分享给大家","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552965234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172524,"user_name":"风骑","can_delete":false,"product_type":"c3","uid":1017289,"ip_address":"","ucode":"D96526F7F37442","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKDe7Ep3YW87sWJLc9GzgA2z1CSyHI3iaZQpCLzM2O1e30CQywGsMj5cQyh6pTGybvFgN0bTuWE8nA/132","comment_is_top":false,"comment_ctime":1579218849,"is_pvip":false,"replies":[{"id":67052,"content":"你想说的是override吧，是指子类覆盖父类的方法，至于overload是指同一个类中方法名相同，但参数不同的方法。\n上面代码，并不属于这些，只是同一接口的不同实现。","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1579339399,"ip_address":"","comment_id":172524,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"有个问题，老师，如果我用多个方法去实现这个接口函数的话，如下面的例子：\npackage interface_test\n\nimport &quot;testing&quot;\n\ntype Programmer interface {\n\tWriteHelloWorld() string\n}\n\ntype GoProgrammer struct {\n\n}\n\ntype GoSecProgrammer struct {\n\n}\n\nfunc (g *GoProgrammer) WriteHelloWorld() string {\n\treturn &quot;fmt.Println(\\&quot;Hello World\\&quot;)&quot;\n}\n\nfunc (g *GoSecProgrammer) WriteHelloWorld() string {\n\treturn &quot;fmt.Println(\\&quot;Hello World,too\\&quot;)&quot;\n}\n\nfunc TestClient(t *testing.T) {\n\tvar p Programmer\n\tp = new(GoProgrammer)\n\n\tt.Log(p.WriteHelloWorld())\n\n\tvar g Programmer\n\tg = new(GoSecProgrammer)\n\n\tt.Log(g.WriteHelloWorld())\n}\n那这个就算是重载了吧","like_count":0,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481767,"discussion_content":"你想说的是override吧，是指子类覆盖父类的方法，至于overload是指同一个类中方法名相同，但参数不同的方法。\n上面代码，并不属于这些，只是同一接口的不同实现。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579339399,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1245504,"avatar":"https://static001.geekbang.org/account/avatar/00/13/01/40/a203a3b9.jpg","nickname":"爱学习不害怕","note":"","ucode":"BE325C02E4C92F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285389,"discussion_content":"按你的代码不存在疑问啊，你可以理解接口就是一个桶，不同的实现就是拿接口去装不同的东西。一个商店里同样的桶有好多，每个人买回家都可能装不同的东西。\n你代码里的接口：\ntype Programmer interface {\nWriteHelloWorld() string\n}\n就是两个不同的结构：\ntype GoProgrammer struct {\n}\ntype GoSecProgrammer struct {\n}\n分别实现的，就相当于商店里同一个型号的桶被不同的人买了。不会存在冲突，也不是继承关系，就没有重载。\n如果说，你是同一个结构：\ntype GoProgrammer struct {\n}\n实现了两次这个接口，如下：\nfunc (g *GoProgrammer) WriteHelloWorld() string {\n\treturn &#34;fmt.Println(\\&#34;Hello World\\&#34;)&#34;\n}\n\nfunc (g *GoProgrammer) WriteHelloWorld() string {\n\treturn &#34;fmt.Println(\\&#34;Hello World,too\\&#34;)&#34;\n}\n那么go编译器会报错：\n.\\study_test.go:36:24: (*GoProgrammer).WriteHelloWorld redeclared in this block\n        previous declaration at .\\study_test.go:32:6\n\n我的理解，欢迎指正","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592823348,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82484,"user_name":"哇哈哈","can_delete":false,"product_type":"c3","uid":1175537,"ip_address":"","ucode":"47453D1C96A1DD","user_header":"https://static001.geekbang.org/account/avatar/00/11/ef/f1/8b06801a.jpg","comment_is_top":false,"comment_ctime":1554221396,"is_pvip":false,"replies":[{"id":30145,"content":"改为func write_sth(p Programmer)","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1554597381,"ip_address":"","comment_id":82484,"utype":1}],"discussion_count":6,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"type Programmer interface {\n\tWriteHW() string\n}\n\ntype GoProgrammer struct {\n}\n\nfunc write_sth(p *Programmer) string {\n\treturn p.WriteHW()\n}\n\n这段代码在write_sth出错，报错为“p.WriteHW undefined (type *Programmer is pointer to interface, not interface)”\n请问下为什么不能使用一个interface的指针作为传入参数？\n我的目的是为了让所有实现了这个接口的struct都能用来调用这个write_sth函数","like_count":0,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445609,"discussion_content":"改为func write_sth(p Programmer)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554597381,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1366505,"avatar":"https://static001.geekbang.org/account/avatar/00/14/d9/e9/eaa1222d.jpg","nickname":"qazwsx","note":"","ucode":"E8F6D7FD26C34F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1220,"discussion_content":"interface本身就有指针的意思，\nvar p Programmer=&amp;Programmer｛｝\np.WriteHW（）\n\n你这样*p 是指针的指针，指针的指针怎么能调用函数？","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1562410531,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1067570,"avatar":"https://static001.geekbang.org/account/avatar/00/10/4a/32/23db38ab.jpg","nickname":"Sunny","note":"","ucode":"FE57B69A9CF91D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1366505,"avatar":"https://static001.geekbang.org/account/avatar/00/14/d9/e9/eaa1222d.jpg","nickname":"qazwsx","note":"","ucode":"E8F6D7FD26C34F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":605660,"discussion_content":"这个才是正解，说到点上了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1676823124,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":1220,"ip_address":"江苏","group_id":0},"score":605660,"extra":""}]},{"author":{"id":2890901,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/1c/95/3d8920c9.jpg","nickname":"abcdabcd999","note":"","ucode":"E1D9902737F544","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":600263,"discussion_content":"qazwsx 同学正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1674140542,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"山西","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1020525,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","nickname":"escray","note":"","ucode":"1F4204930E47C4","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364541,"discussion_content":"func (g *GoProgrammer) WriteHelloWorld() string {\n\treturn &#34;fmt.Println(\\&#34;Hello World\\&#34;)&#34;\n}\n\nfunc write_sth(p Programmer) string {\n\treturn p.WriteHelloWorld()\n}\n\nfunc TestClient(t *testing.T) {\n\tvar p Programmer = new(GoProgrammer)\n\tt.Log(p.WriteHelloWorld())\n\tt.Log(write_sth(p))\n}","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617511461,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1098519,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c3/17/01652c3e.jpg","nickname":"AlittleChange","note":"","ucode":"4098171B9EEF18","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":31476,"discussion_content":"函数了，不是方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570929822,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78284,"user_name":"3Golds","can_delete":false,"product_type":"c3","uid":1203477,"ip_address":"","ucode":"A27DEF9616432A","user_header":"https://static001.geekbang.org/account/avatar/00/12/5d/15/7df9df88.jpg","comment_is_top":false,"comment_ctime":1553125866,"is_pvip":false,"replies":null,"discussion_count":4,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"建议老师不要总用java来讲","like_count":63,"discussions":[{"author":{"id":2721761,"avatar":"https://static001.geekbang.org/account/avatar/00/29/87/e1/b3edcc09.jpg","nickname":"范飞扬","note":"","ucode":"A665DF46833A81","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592051,"discussion_content":"java 受众最广，懂的人最多，不用java难道用c++，rust？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1667046175,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2303258,"avatar":"","nickname":"Geek_d54dbb","note":"","ucode":"082606DDBE1963","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364111,"discussion_content":"java挺好的，对比学习","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1617367376,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2035884,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/10/ac/83b81784.jpg","nickname":"漆黑的白蛋","note":"","ucode":"B3D13482437AD6","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2303258,"avatar":"","nickname":"Geek_d54dbb","note":"","ucode":"082606DDBE1963","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583190,"discussion_content":"不会java的一头雾水","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659943421,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":364111,"ip_address":"北京","group_id":0},"score":583190,"extra":""}]},{"author":{"id":2834946,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/42/02/7c9d5339.jpg","nickname":"ksl","note":"","ucode":"206906DBB07AE1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":625525,"discussion_content":"不用java的话 像你这样抱怨的会更多......","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1691828479,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81684,"user_name":"Mao","can_delete":false,"product_type":"c3","uid":1060202,"ip_address":"","ucode":"14CC85BC590A71","user_header":"https://static001.geekbang.org/account/avatar/00/10/2d/6a/323163df.jpg","comment_is_top":false,"comment_ctime":1554006337,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":3,"product_id":100024001,"comment_content":"感谢老师用 Java 来讲， Java 程序员秒懂","like_count":57,"discussions":[{"author":{"id":1876823,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/X4ib36ADEvj76XaKD4OUY9k15KqWCAVCwibPicBxz6BBUfDrVolpYInn8zFOw3JBPtVw3L4Lkibaf2eLPemwGKzAXA/132","nickname":"Geek_427d0c","note":"","ucode":"D7A04138C4B8CB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309046,"discussion_content":"同款感谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601180692,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":252185,"user_name":"🍦","can_delete":false,"product_type":"c3","uid":1455387,"ip_address":"","ucode":"027A57EAD61849","user_header":"https://static001.geekbang.org/account/avatar/00/16/35/1b/46da03db.jpg","comment_is_top":false,"comment_ctime":1602165941,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100024001,"comment_content":"讲道理有的东西听的一头雾水。毕竟不是java出身","like_count":4},{"had_liked":false,"id":291558,"user_name":"幻影霸者","can_delete":false,"product_type":"c3","uid":1033534,"ip_address":"","ucode":"09850FD9E61A63","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c5/3e/41339003.jpg","comment_is_top":false,"comment_ctime":1620361450,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100024001,"comment_content":"开头讲的interface循环依赖的那个问题，个人认为不是问题，Java设计本身就是支持的，SPI就是要由第三方来提供实现。","like_count":3},{"had_liked":false,"id":267348,"user_name":"寒溪","can_delete":false,"product_type":"c3","uid":1001970,"ip_address":"","ucode":"67B9F1A1C15A20","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/f2/25cfa472.jpg","comment_is_top":false,"comment_ctime":1607687613,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100024001,"comment_content":"有个问题，如果有多个client 用到了同一个interface怎么办？","like_count":2},{"had_liked":false,"id":321243,"user_name":"Geek__38012c6589d3","can_delete":false,"product_type":"c3","uid":1454933,"ip_address":"","ucode":"85A08CF5E70C73","user_header":"","comment_is_top":false,"comment_ctime":1636723024,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100024001,"comment_content":"5 分钟那块 说“签名跟上面一致” 才理解上个视频里那个行为的语法，服了","like_count":1},{"had_liked":false,"id":286701,"user_name":"escray","can_delete":false,"product_type":"c3","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1617512859,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100024001,"comment_content":"Go 接口的实现，不依赖与接口的定义，那么还要接口做什么？\n\n先写代码，再写接口。这个有点狠。\n\n对于自定义类型，一方面可以简化代码，是不是有 C++ 的影子（宏定义）？另一方面感觉更像语法糖。\n\n好几条留言都和 Java 有关，看来 Java 还是人多。\n\n@iMARS 的代码可以帮助理解","like_count":1},{"had_liked":false,"id":102855,"user_name":"春春家的雷雷","can_delete":false,"product_type":"c3","uid":1453138,"ip_address":"","ucode":"267A4726E5F95F","user_header":"","comment_is_top":false,"comment_ctime":1560315497,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100024001,"comment_content":"关于接口的作用，我又想了想，我的理解是，接口规定了一组约束，来一个实例，框架中都有关于缓存的实现，接口定义了缓存的使用行为，屏蔽了底层是基于redis还是memcache还是其他的缓存引擎，这样我们在业务层，就不用考虑底层的具体实现，因为他们一定实现了这些方法，所以说接口是多个对象之间交互的协议，我这么理解对吗？","like_count":1},{"had_liked":false,"id":83199,"user_name":"逗逼师父","can_delete":false,"product_type":"c3","uid":1017863,"ip_address":"","ucode":"ECC2D82F83CBE6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/88/07/7804f4cc.jpg","comment_is_top":false,"comment_ctime":1554457619,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100024001,"comment_content":"接着我上面的提问，做了benchamark：\n代码如下：\npackage customertype\n\nimport (\n\t&quot;testing&quot;\n\t&quot;time&quot;\n)\n\nfunc BenchmarkTimeSpent(b *testing.B) {\n\tb.ResetTimer()\n\tfor i := 0; i &lt; b.N; i++ {\n\t\ttimeSpent(func(op int) int {\n\t\t\ttime.Sleep(time.Second * 1)\n\t\t\treturn op\n\t\t})\n\t}\n\tb.StopTimer()\n}\n\nfunc BenchmarkTimeSpent1(b *testing.B) {\n\tb.ResetTimer()\n\tfor i := 0; i &lt; b.N; i++ {\n\t\ttimeSpent1(slowFun)\n\t}\n\tb.StopTimer()\n}\n\nfunc BenchmarkTimeSpent2(b *testing.B) {\n\tb.ResetTimer()\n\tfor i := 0; i &lt; b.N; i++ {\n\t\ttimeSpent2(slowFun)\n\t}\n\tb.StopTimer()\n}\n\n结果：\nRunning tool: &#47;usr&#47;local&#47;go&#47;bin&#47;go test -benchmem -run=^$ ch11&#47;customer_type -bench ^(BenchmarkTimeSpent|BenchmarkTimeSpent1|BenchmarkTimeSpent2)$ -v -cover\n\ngoos: darwin\ngoarch: amd64\npkg: ch11&#47;customer_type\nBenchmarkTimeSpent-4    \t50000000\t        32.8 ns&#47;op\t      16 B&#47;op\t       1 allocs&#47;op\nBenchmarkTimeSpent1-4   \t50000000\t        32.3 ns&#47;op\t      16 B&#47;op\t       1 allocs&#47;op\nBenchmarkTimeSpent2-4   \t50000000\t        33.4 ns&#47;op\t      16 B&#47;op\t       1 allocs&#47;op\nPASS\ncoverage: 0.0% of statements\nok  \tch11&#47;customer_type\t5.043s\nSuccess: Benchmarks passed.\n\n反复做了几次之后，发现效率其实并没有本质的区别，单个操作所占的内存也都是一样的。所以应该是我想太多了，有没有给func(op int) int定义一个别名其实没有影响的，只是看需不需要就好了。","like_count":1},{"had_liked":false,"id":395527,"user_name":"一秒","can_delete":false,"product_type":"c3","uid":1311001,"ip_address":"山东","ucode":"F149B7F60620BD","user_header":"https://static001.geekbang.org/account/avatar/00/14/01/19/f4da2829.jpg","comment_is_top":false,"comment_ctime":1731070047,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100024001,"comment_content":"啊啊啊，总是理解不了闭包怎么弄啊。。好着急","like_count":0},{"had_liked":false,"id":374865,"user_name":"Lhv","can_delete":false,"product_type":"c3","uid":2356864,"ip_address":"广东","ucode":"721447297ABF96","user_header":"https://static001.geekbang.org/account/avatar/00/23/f6/80/b39dfb5b.jpg","comment_is_top":false,"comment_ctime":1684512867,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100024001,"comment_content":"作为python程序员，看得好懵逼","like_count":0},{"had_liked":false,"id":236492,"user_name":"写给三月","can_delete":false,"product_type":"c3","uid":1214026,"ip_address":"","ucode":"F9DCF7C9B76AC5","user_header":"https://static001.geekbang.org/account/avatar/00/12/86/4a/0370f832.jpg","comment_is_top":false,"comment_ctime":1595428189,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100024001,"comment_content":"自定义类型还能当泛型用","like_count":0},{"had_liked":false,"id":236487,"user_name":"写给三月","can_delete":false,"product_type":"c3","uid":1214026,"ip_address":"","ucode":"F9DCF7C9B76AC5","user_header":"https://static001.geekbang.org/account/avatar/00/12/86/4a/0370f832.jpg","comment_is_top":false,"comment_ctime":1595427279,"is_pvip":false,"replies":null,"discussion_count":3,"race_medal":0,"score":4,"product_id":100024001,"comment_content":"我擅长js和java，且C语言基础扎实，感觉学习go易如反掌，舒服的不得了","like_count":0,"discussions":[{"author":{"id":1556406,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/iaXcnYOjwO39gSSyo0CprNeLxx6OF80KqPz69ErJKmibMSxn5YeM4VGD6ATBnUR045ibsYjQGlAAQo5r3iaTPydTbA/132","nickname":"docker131313","note":"","ucode":"5B24734D18B57C","race_medal":5,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":636241,"discussion_content":"感觉是内部人士","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1705892878,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1035744,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/cd/e0/c85bb948.jpg","nickname":"朱雯","note":"","ucode":"064C45FBF6B51F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388911,"discussion_content":"凡哥你好","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1629035561,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1020525,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","nickname":"escray","note":"","ucode":"1F4204930E47C4","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364539,"discussion_content":"欢迎凡尔赛","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617511221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90153,"user_name":"kubernetes","can_delete":false,"product_type":"c3","uid":1496693,"ip_address":"","ucode":"B1BC6F1E7B3CCC","user_header":"https://static001.geekbang.org/account/avatar/00/16/d6/75/792acf22.jpg","comment_is_top":false,"comment_ctime":1556433659,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100024001,"comment_content":"go语言接口的实现是不依赖于接口的定义的，使用的是鸭子类型的方式的","like_count":0}]}