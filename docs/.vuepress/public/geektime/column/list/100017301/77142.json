{"id":77142,"title":"46 | 概率统计：如何利用朴素贝叶斯算法过滤垃圾短信？","content":"<p>上一节我们讲到，如何用位图、布隆过滤器，来过滤重复的数据。今天，我们再讲一个跟过滤相关的问题，如何过滤垃圾短信？</p><p>垃圾短信和骚扰电话，我想每个人都收到过吧？买房、贷款、投资理财、开发票，各种垃圾短信和骚扰电话，不胜其扰。<strong><span class=\"orange\">如果你是一名手机应用开发工程师，让你实现一个简单的垃圾短信过滤功能以及骚扰电话拦截功能，该用什么样的数据结构和算法实现呢？</span></strong></p><h2>算法解析</h2><p>实际上，解决这个问题并不会涉及很高深的算法。今天，我就带你一块看下，如何利用简单的数据结构和算法，解决这种看似非常复杂的问题。</p><h3>1.基于黑名单的过滤器</h3><p>我们可以维护一个骚扰电话号码和垃圾短信发送号码的黑名单。这个黑名单的收集，有很多途径，比如，我们可以从一些公开的网站上下载，也可以通过类似“360骚扰电话拦截”的功能，通过用户自主标记骚扰电话来收集。对于被多个用户标记，并且标记个数超过一定阈值的号码，我们就可以定义为骚扰电话，并将它加入到我们的黑名单中。</p><p>如果黑名单中的电话号码不多的话，我们可以使用散列表、二叉树等动态数据结构来存储，对内存的消耗并不会很大。如果我们把每个号码看作一个字符串，并且假设平均长度是16个字节，那存储50万个电话号码，大约需要10MB的内存空间。即便是对于手机这样的内存有限的设备来说，这点内存的消耗也是可以接受的。</p><!-- [[[read_end]]] --><p>但是，如果黑名单中的电话号码很多呢？比如有500万个。这个时候，如果再用散列表存储，就需要大约100MB的存储空间。为了实现一个拦截功能，耗费用户如此多的手机内存，这显然有点儿不合理。</p><p>上一节我们讲了，布隆过滤器最大的特点就是比较省存储空间，所以，用它来解决这个问题再合适不过了。如果我们要存储500万个手机号码，我们把位图大小设置为10倍数据大小，也就是5000万，那也只需要使用5000万个二进制位（5000万bits），换算成字节，也就是不到7MB的存储空间。比起散列表的解决方案，内存的消耗减少了很多。</p><p>实际上，我们还有一种时间换空间的方法，可以将内存的消耗优化到极致。</p><p>我们可以把黑名单存储在服务器端上，把过滤和拦截的核心工作，交给服务器端来做。手机端只负责将要检查的号码发送给服务器端，服务器端通过查黑名单，判断这个号码是否应该被拦截，并将结果返回给手机端。</p><p>用这个解决思路完全不需要占用手机内存。不过，有利就有弊。我们知道，网络通信是比较慢的，所以，网络延迟就会导致处理速度降低。而且，这个方案还有个硬性要求，那就是只有在联网的情况下，才能正常工作。</p><p>基于黑名单的过滤器我就讲完了，不过，你可能还会说，布隆过滤器会有判错的概率呀！如果它把一个重要的电话或者短信，当成垃圾短信或者骚扰电话拦截了，对于用户来说，这是无法接受的。你说得没错，这是一个很大的问题。不过，我们现在先放一放，等三种过滤器都讲完之后，我再来解答。</p><h3>2.基于规则的过滤器</h3><p>刚刚讲了一种基于黑名单的垃圾短信过滤方法，但是，如果某个垃圾短信发送者的号码并不在黑名单中，那这种方法就没办法拦截了。所以，基于黑名单的过滤方式，还不够完善，我们再继续看一种基于规则的过滤方式。</p><p>对于垃圾短信来说，我们还可以通过短信的内容，来判断某条短信是否是垃圾短信。我们预先设定一些规则，如果某条短信符合这些规则，我们就可以判定它是垃圾短信。实际上，规则可以有很多，比如下面这几个：</p><ul>\n<li>\n<p>短信中包含特殊单词（或词语），比如一些非法、淫秽、反动词语等；</p>\n</li>\n<li>\n<p>短信发送号码是群发号码，非我们正常的手机号码，比如+60389585；</p>\n</li>\n<li>\n<p>短信中包含回拨的联系方式，比如手机号码、微信、QQ、网页链接等，因为群发短信的号码一般都是无法回拨的；</p>\n</li>\n<li>\n<p>短信格式花哨、内容很长，比如包含各种表情、图片、网页链接等；</p>\n</li>\n<li>\n<p>符合已知垃圾短信的模板。垃圾短信一般都是重复群发，对于已经判定为垃圾短信的短信，我们可以抽象成模板，将获取到的短信与模板匹配，一旦匹配，我们就可以判定为垃圾短信。</p>\n</li>\n</ul><p>当然，如果短信只是满足其中一条规则，如果就判定为垃圾短信，那会存在比较大的误判的情况。我们可以综合多条规则进行判断。比如，满足2条以上才会被判定为垃圾短信；或者每条规则对应一个不同的得分，满足哪条规则，我们就累加对应的分数，某条短信的总得分超过某个阈值，才会被判定为垃圾短信。</p><p>不过，我只是给出了一些制定规则的思路，具体落实到执行层面，其实还有很大的距离，还有很多细节需要处理。比如，第一条规则中，我们该如何定义特殊单词；第二条规则中，我们该如何定义什么样的号码是群发号码等等。限于篇幅，我就不一一详细展开来讲了。我这里只讲一下，如何定义特殊单词？</p><p>如果我们只是自己拍脑袋想，哪些单词属于特殊单词，那势必有比较大的主观性，也很容易漏掉某些单词。实际上，我们可以基于概率统计的方法，借助计算机强大的计算能力，找出哪些单词最常出现在垃圾短信中，将这些最常出现的单词，作为特殊单词，用来过滤短信。</p><p>不过这种方法的前提是，我们有大量的样本数据，也就是说，要有大量的短信（比如1000万条短信），并且我们还要求，每条短信都做好了标记，它是垃圾短信还是非垃圾短信。</p><p>我们对这1000万条短信，进行分词处理（借助中文或者英文分词算法），去掉“的、和、是”等没有意义的停用词（Stop words），得到n个不同的单词。针对每个单词，我们统计有多少个垃圾短信出现了这个单词，有多少个非垃圾短信会出现这个单词，进而求出每个单词出现在垃圾短信中的概率，以及出现在非垃圾短信中的概率。如果某个单词出现在垃圾短信中的概率，远大于出现在非垃圾短信中的概率，那我们就把这个单词作为特殊单词，用来过滤垃圾短信。</p><p>文字描述不好理解，我举个例子来解释一下。</p><p><img src=\"https://static001.geekbang.org/resource/image/05/c0/05b9358cac3721e746bbfec8b705cdc0.jpg?wh=1142*723\" alt=\"\"></p><h3>3.基于概率统计的过滤器</h3><p>基于规则的过滤器，看起来很直观，也很好理解，但是它也有一定的局限性。一方面，这些规则受人的思维方式局限，规则未免太过简单；另一方面，垃圾短信发送者可能会针对规则，精心设计短信，绕过这些规则的拦截。对此，我们再来看一种更加高级的过滤方式，基于概率统计的过滤方式。</p><p>这种基于概率统计的过滤方式，基础理论是基于朴素贝叶斯算法。为了让你更好地理解下面的内容，我们先通过一个非常简单的例子来看下，什么是朴素贝叶斯算法？</p><p>假设事件A是“小明不去上学”，事件B是“下雨了”。我们现在统计了一下过去10天的下雨情况和小明上学的情况，作为样本数据。</p><p><img src=\"https://static001.geekbang.org/resource/image/e8/32/e8a0bf4643453266c012e5384fc29932.jpg?wh=1142*288\" alt=\"\"></p><p>我们来分析一下，这组样本有什么规律。在这10天中，有4天下雨，所以下雨的概率P(B)=4/10。10天中有3天，小明没有去上学，所以小明不去上学的概率P(A)=3/10。在4个下雨天中，小明有2天没去上学，所以下雨天不去上学的概率P(A|B)=2/4。在小明没有去上学的3天中，有2天下雨了，所以小明因为下雨而不上学的概率是P(B|A)=2/3。实际上，这4个概率值之间，有一定的关系，这个关系就是朴素贝叶斯算法，我们用公式表示出来，就是下面这个样子。</p><p><img src=\"https://static001.geekbang.org/resource/image/fb/cc/fbef6a760f916941bc3128c2d32540cc.jpg?wh=1142*802\" alt=\"\"></p><p>朴素贝叶斯算法是不是非常简单？我们用一个公式就可以将它概括。弄懂了朴素贝叶斯算法，我们再回到垃圾短信过滤这个问题上，看看如何利用朴素贝叶斯算法，来做垃圾短信的过滤。</p><p>基于概率统计的过滤器，是基于短信内容来判定是否是垃圾短信。而计算机没办法像人一样理解短信的含义。所以，我们需要把短信抽象成一组计算机可以理解并且方便计算的<strong>特征项</strong>，用这一组特征项代替短信本身，来做垃圾短信过滤。</p><p>我们可以通过分词算法，把一个短信分割成n个单词。这n个单词就是一组特征项，全权代表这个短信。因此，判定一个短信是否是垃圾短信这样一个问题，就变成了，判定同时包含这几个单词的短信是否是垃圾短信。</p><p>不过，这里我们并不像基于规则的过滤器那样，非黑即白，一个短信要么被判定为垃圾短信、要么被判定为非垃圾短息。我们使用概率，来表征一个短信是垃圾短信的可信程度。如果我们用公式将这个概率表示出来，就是下面这个样子：</p><p><img src=\"https://static001.geekbang.org/resource/image/b8/e7/b8f76a5fd26f785055b78ffe08ccfbe7.jpg?wh=2048*434\" alt=\"\"></p><p>尽管我们有大量的短信样本，但是我们没法通过样本数据统计得到这个概率。为什么不可以呢？你可能会说，我只需要统计同时包含$W_{1}$，$W_{2}$，$W_{3}$，…，$W_{n}$这n个单词的短信有多少个（我们假设有x个），然后看这里面属于垃圾短信的有几个（我们假设有y个），那包含$W_{1}$，$W_{2}$，$W_{3}$，…，$W_{n}$这n个单词的短信是垃圾短信的概率就是y/x。</p><p>理想很丰满，但现实往往很骨感。你忽视了非常重要的一点，那就是样本的数量再大，毕竟也是有限的，样本中不会有太多同时包含$W_{1}$，$W_{2}$，$W_{3}$，…，$W_{n}$的短信的，甚至很多时候，样本中根本不存在这样的短信。没有样本，也就无法计算概率。所以这样的推理方式虽然正确，但是实践中并不好用。</p><p>这个时候，朴素贝叶斯公式就可以派上用场了。我们通过朴素贝叶斯公式，将这个概率的求解，分解为其他三个概率的求解。你可以看我画的图。那转化之后的三个概率是否可以通过样本统计得到呢？</p><p><img src=\"https://static001.geekbang.org/resource/image/39/ae/39c57b1a8a008e50a9f6cb8b7b9c9bae.jpg?wh=2048*783\" alt=\"\"></p><p>P（$W_{1}$，$W_{2}$，$W_{3}$，…，$W_{n}$同时出现在一条短信中 | 短信是垃圾短信）这个概率照样无法通过样本来统计得到。但是我们可以基于下面这条著名的概率规则来计算。</p><blockquote>\n<p>独立事件发生的概率计算公式：P(A*B) = P(A)*P(B)</p>\n</blockquote><blockquote>\n<p>如果事件A和事件B是独立事件，两者的发生没有相关性，事件A发生的概率P(A)等于p1，事件B发生的概率P(B)等于p2，那两个同时发生的概率P(A*B)就等于P(A)*P(B)。</p>\n</blockquote><p>基于这条独立事件发生概率的计算公式，我们可以把P（W1，W2，W3，…，Wn同时出现在一条短信中 | 短信是垃圾短信）分解为下面这个公式：</p><p><img src=\"https://static001.geekbang.org/resource/image/6c/f2/6c261a3f5312c515cf348cc59a5e73f2.jpg?wh=1142*580\" alt=\"\"></p><p>其中，P（$W_{i}$出现在短信中 | 短信是垃圾短信）表示垃圾短信中包含$W_{i}$这个单词的概率有多大。这个概率值通过统计样本很容易就能获得。我们假设垃圾短信有y个，其中包含$W_{i}$的有x个，那这个概率值就等于x/y。</p><p>P（$W_{1}$，$W_{2}$，$W_{3}$，…，$W_{n}$同时出现在一条短信中 | 短信是垃圾短信）这个概率值，我们就计算出来了，我们再来看下剩下两个。</p><p>P（短信是垃圾短信）表示短信是垃圾短信的概率，这个很容易得到。我们把样本中垃圾短信的个数除以总样本短信个数，就是短信是垃圾短信的概率。</p><p>不过，P（$W_{1}$，$W_{2}$，$W_{3}$，…，$W_{n}$同时出现在一条短信中）这个概率还是不好通过样本统计得到，原因我们前面说过了，样本空间有限。不过，我们没必要非得计算这一部分的概率值。为什么这么说呢？</p><p>实际上，我们可以分别计算同时包含$W_{1}$，$W_{2}$，$W_{3}$，…，$W_{n}$这n个单词的短信，是垃圾短信和非垃圾短信的概率。假设它们分别是p1和p2。我们并不需要单纯地基于p1值的大小来判断是否是垃圾短信，而是通过对比p1和p2值的大小，来判断一条短信是否是垃圾短信。更细化一点讲，那就是，如果p1是p2的很多倍（比如10倍），我们才确信这条短信是垃圾短信。</p><p><img src=\"https://static001.geekbang.org/resource/image/0f/2a/0f0369a955ee8d15bd7d7958829d5b2a.jpg?wh=1142*745\" alt=\"\"></p><p>基于这两个概率的倍数来判断是否是垃圾短信的方法，我们就可以不用计算P（$W_{1}$，$W_{2}$，$W_{3}$，…，$W_{n}$同时出现在一条短信中）这一部分的值了，因为计算p1与p2的时候，都会包含这个概率值的计算，所以在求解p1和p2倍数（p1/p2）的时候，我们也就不需要这个值。</p><h2>总结引申</h2><p>今天，我们讲了基于黑名单、规则、概率统计三种垃圾短信的过滤方法，实际上，今天讲的这三种方法，还可以应用到很多类似的过滤、拦截的领域，比如垃圾邮件的过滤等等。</p><p>在讲黑名单过滤的时候，我讲到布隆过滤器可能会存在误判情况，可能会导致用户投诉。实际上，我们可以结合三种不同的过滤方式的结果，对同一个短信处理，如果三者都表明这个短信是垃圾短信，我们才把它当作垃圾短信拦截过滤，这样就会更精准。</p><p>当然，在实际的工程中，我们还需要结合具体的场景，以及大量的实验，不断去调整策略，权衡垃圾短信判定的<strong>准确率</strong>（是否会把不是垃圾的短信错判为垃圾短信）和<strong>召回率</strong>（是否能把所有的垃圾短信都找到），来实现我们的需求。</p><p></p><h2>课后思考</h2><p>关于垃圾短信过滤和骚扰电话的拦截，我们可以一块儿头脑风暴一下，看看你还有没有其他方法呢？</p><p>欢迎留言和我分享，也欢迎点击“<span class=\"orange\">请朋友读</span>”，把今天的内容分享给你的好友，和他一起讨论、学习。</p>","neighbors":{"left":{"article_title":"45 | 位图：如何实现网页爬虫中的URL去重功能？","id":76827},"right":{"article_title":"47 | 向量空间：如何实现一个简单的音乐推荐系统？","id":77457}},"comments":[{"had_liked":false,"id":58659,"user_name":"罗洲","can_delete":false,"product_type":"c1","uid":1263417,"ip_address":"","ucode":"68133E38A25C17","user_header":"https://static001.geekbang.org/account/avatar/00/13/47/39/0ce1aa62.jpg","comment_is_top":false,"comment_ctime":1547168581,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"345144552261","product_id":100017301,"comment_content":"我觉得这种分类过滤，最好的可能是机器学习，通过大量的垃圾短信样本来训练特征，最后可以达到过滤短信和邮件的目的，而且这种方法应该效果更好，至于电话拦截，实际上就是电话号码黑名单的问题，我觉得用布隆过滤器可以满足通用场景，一般实际场景中，对于这种电话是提示谨慎接听，但是我们可以本地和云端结合处理，解决部分的误报问题，当判断是黑名单的时候再去云端查，确认是否是真的黑名单。这样用布隆过滤器+云端也是一种方式<br>","like_count":81,"discussions":[{"author":{"id":1328098,"avatar":"https://static001.geekbang.org/account/avatar/00/14/43/e2/a1ff289c.jpg","nickname":"wang jl","note":"","ucode":"F32E4921EAECC1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295943,"discussion_content":"用贝叶斯给垃圾邮件分类是经过几十年检验的稳定算法了。不能有了把锤子就当什么都是钉子~~","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1596386670,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1549032,"avatar":"","nickname":"Zzz","note":"","ucode":"9323254354868B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":181664,"discussion_content":"机器学习里也有朴素贝叶斯分类，跟王老师讲的原理基本一致","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1582378761,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1238762,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e6/ea/87878711.jpg","nickname":"麒麟儿","note":"","ucode":"B4B942EFC0F9D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":407781,"discussion_content":"朴素贝叶斯就是机器学习算法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635122811,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1438860,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f4/8c/0866b228.jpg","nickname":"子房","note":"","ucode":"CB05938C248BB3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389980,"discussion_content":"楼上都是大佬","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629553766,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1218937,"avatar":"https://static001.geekbang.org/account/avatar/00/12/99/79/74d4f24f.jpg","nickname":"anker","note":"","ucode":"6EDF1FB9D45238","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":55880,"discussion_content":"机器学习也需要大量的判断样本","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574409230,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58661,"user_name":"slvher","can_delete":false,"product_type":"c1","uid":1018964,"ip_address":"","ucode":"F4ED6980C8248B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/54/deb19880.jpg","comment_is_top":false,"comment_ctime":1547168938,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"108921351338","product_id":100017301,"comment_content":"对于短信文本，机器学习尤其是 NLP 方向的很多算法可用于 anti-spam。文本分类任务，特征工程做得稍用心的话，判别式模型（典型如 logistic regression）的效果通常好于生成式模型（典型如 naive-bayes）。<br><br>对于电话号码数字，感觉用正则或定时拉取黑名单比 ml 模型简单可靠。","like_count":25,"discussions":[{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330380,"discussion_content":"特征怎么抽取？怎么量化？怎么减少无效特征量？ 电话号码，你说的这个有点简单，就是这个正则和黑名单怎么来？这文章主要就是解决这个问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606607044,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":59980,"user_name":"C_love","can_delete":false,"product_type":"c1","uid":1043613,"ip_address":"","ucode":"F268D1867C90C0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/9d/4d705f03.jpg","comment_is_top":false,"comment_ctime":1547434845,"is_pvip":false,"replies":[{"id":"22485","content":"也是也是。","user_name":"作者回复","comment_id":59980,"uid":"1190123","ip_address":"","utype":1,"ctime":1548406053,"user_name_real":"gg"}],"discussion_count":8,"race_medal":0,"score":"83151813469","product_id":100017301,"comment_content":"为啥P(W1W2...Wn|垃圾短信)是独立事件，能够拆成乘积，而P(W1W2...Wn)不是独立事件？","like_count":19,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436429,"discussion_content":"也是也是。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548406053,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1062804,"avatar":"https://static001.geekbang.org/account/avatar/00/10/37/94/723ec0e9.jpg","nickname":"佐镜兄","note":"","ucode":"18DB653A028632","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379437,"discussion_content":"这里感觉作者没有说清楚，应该假设独立，实际情况不可能是独立的，要算是非常复杂，为了简化运算，才做了独立假设，也正是“朴素”由来","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1623903768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1207488,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gLC1Z8lYdWPHquZbJCf5FfIDgOJKiapygoyNrl4b5fkibyV2LBnCKV5BjRAYOhPGJxL425rIdSVnibTMEg012S9Pg/132","nickname":"邵帅","note":"","ucode":"EB662C972CC248","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":359187,"discussion_content":"那是不是可以直接求解  不用求比值了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616132743,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1260026,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/fa/a7edbc72.jpg","nickname":"安排","note":"","ucode":"F78CFA9624CAEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1207488,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gLC1Z8lYdWPHquZbJCf5FfIDgOJKiapygoyNrl4b5fkibyV2LBnCKV5BjRAYOhPGJxL425rIdSVnibTMEg012S9Pg/132","nickname":"邵帅","note":"","ucode":"EB662C972CC248","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547701,"discussion_content":"分母本质是对所有的y求sum  p（w1w2....wn|y），这个例子中y有两种取值，分别是垃圾短信和非垃圾短信，按独立分布假设确实不用求比值了，到这时候求分母的复杂度很高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642831045,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":359187,"ip_address":""},"score":547701,"extra":""}]},{"author":{"id":1324314,"avatar":"https://static001.geekbang.org/account/avatar/00/14/35/1a/9fa38dc9.jpg","nickname":"子瞻","note":"","ucode":"5C26FF10934534","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":307598,"discussion_content":"主要原因我们前面说过了，样本空间有限","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600694177,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1972505,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/19/19/d82e24fb.jpg","nickname":"李润东","note":"","ucode":"65CFEA3C8B27C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":267314,"discussion_content":"条件独立不一定独立啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589630929,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1972505,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/19/19/d82e24fb.jpg","nickname":"李润东","note":"","ucode":"65CFEA3C8B27C4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330381,"discussion_content":"没懂。前面的条件可以独立，后面的为啥不能独立？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606607151,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":267314,"ip_address":""},"score":330381,"extra":""}]},{"author":{"id":1330065,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/N0NACGUr8dNAbN6BdiagPHBaB0EnyDsI9zWpwJteqTY38apOEnTOA7JkBAQnzYKJBgxu3Q8YMUILwLAB6camn4w/132","nickname":"Swing","note":"","ucode":"55FCA9ECEFBBEB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":89554,"discussion_content":"em  是啊。。刚刚也懵逼来着","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576757648,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58717,"user_name":"纯洁的憎恶","can_delete":false,"product_type":"c1","uid":1130512,"ip_address":"","ucode":"5E9757DE6F45DF","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/10/b6bf3c3c.jpg","comment_is_top":false,"comment_ctime":1547182630,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"65971692070","product_id":100017301,"comment_content":"黑名单过滤法基于经验判断，难以确保及时性。基于内容规则的过滤法容易被针对，而且动态调整规则的成本较高。基于朴素贝叶斯算法的内容概率过滤法，既可以确保及时性，又能够较好的基于实际情况的变化而变化，具备初步智能特性。因为贝叶斯方法是基于先验判断，然后根据现实反馈动态调整判断的算法。<br><br>当绝对值不好计算时，可以结合场景需要，合理使用相对值代替绝对值，以简化计算难度、消除无法计算的因子。","like_count":16},{"had_liked":false,"id":62399,"user_name":"🐱您的好友William🐱","can_delete":false,"product_type":"c1","uid":1215456,"ip_address":"","ucode":"427786DB178965","user_header":"https://static001.geekbang.org/account/avatar/00/12/8b/e0/9a79ddac.jpg","comment_is_top":false,"comment_ctime":1548046776,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"48792687032","product_id":100017301,"comment_content":"1.为啥叫naive：因为假设了条件分布中各个feature是独立出现的，feature之间啥关系没有！所以很naive，很朴素，很“傻”，但是效果真的不一定差，而且在没开发出更好的模型之前直接进行统计计算就能得出结果，且可以做成online的，怎么看都不亏啊（反正你也得用统计数据做其他的事，顺道做了呗老弟）！<br><br>2.如果概率为0了怎么办！可以使用laplacian smoothing，简单的来说就是在分子分母上面加数来保证不会有0的出现。直接使用很小的数是可以的（遵循频率学派频率为大），但更精确的在分母分子上加什么，这个其实是与贝叶斯学派所认为的先验分布有关，就是在不看sample时，我们的先验知识对这种情况的估计是多少（比如我在不统计工科学校男女比例的时候就有了一定的先验知识：7:1，之后我再统计其实是对我的先验估计的一种调整）。","like_count":12,"discussions":[{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330584,"discussion_content":"赞。哥们是做算法的吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606651051,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":89492,"user_name":"小新村小学扛霸子","can_delete":false,"product_type":"c1","uid":1250309,"ip_address":"","ucode":"BECFAB70A68C9F","user_header":"https://static001.geekbang.org/account/avatar/00/13/14/05/5f46ffa6.jpg","comment_is_top":false,"comment_ctime":1556185073,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"44505858033","product_id":100017301,"comment_content":"P（W1,W2...Wn同时出现在一条短信中） = P（W1出现在短信中） *   P（W2出现在短信中） *....*  P（Wn出现在短信中）这样计算应该就可以吧","like_count":10,"discussions":[{"author":{"id":2026987,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/ed/eb/de365451.jpg","nickname":"邵晨钟","note":"","ucode":"8C217BF86B8880","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":290505,"discussion_content":"我认为这样计算的前提是基于，W1出现在短信中、W2出现在短信中等事件之间相互独立，的假设。但这个假设一定程度上并不成立，例如“哲学”和“思想”两个词的出现可能不相互独立，出现“哲学”的短信中，出现“思想”的概率可能大一些。为了提高判断的准确性，相对不准确计算就尽量少做。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1594516924,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1324314,"avatar":"https://static001.geekbang.org/account/avatar/00/14/35/1a/9fa38dc9.jpg","nickname":"子瞻","note":"","ucode":"5C26FF10934534","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":307599,"discussion_content":"原因我们前面说过了，样本空间有限","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600694195,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1268797,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5c/3d/e8325811.jpg","nickname":"对白","note":"","ucode":"3183E5ADBC794B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300331,"discussion_content":"可以这么算","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598045932,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1033499,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c5/1b/abb7bfe3.jpg","nickname":"happyzeng","note":"","ucode":"AD9DDE21448613","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285940,"discussion_content":"我觉得是可以的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592992535,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":83251,"user_name":"loda","can_delete":false,"product_type":"c1","uid":1043287,"ip_address":"","ucode":"3F9575DBFA1031","user_header":"https://static001.geekbang.org/account/avatar/00/0f/eb/57/3032e1a7.jpg","comment_is_top":false,"comment_ctime":1554480403,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"35914218771","product_id":100017301,"comment_content":"朴素贝叶斯讲的很好","like_count":9},{"had_liked":false,"id":206803,"user_name":"大毛","can_delete":false,"product_type":"c1","uid":1899599,"ip_address":"","ucode":"93B18287F06706","user_header":"https://static001.geekbang.org/account/avatar/00/1c/fc/4f/0a452c94.jpg","comment_is_top":false,"comment_ctime":1586937914,"is_pvip":true,"discussion_count":2,"race_medal":0,"score":"27356741690","product_id":100017301,"comment_content":"从高级篇开始经常会感到似曾相识的感觉，到了这一章，发现解题思路和《数学之美》中翻译统计的思路如出一辙。<br>《数学之美》的作者是吴军老师，Google翻译中的大牛，争哥也在Google的翻译部门，且《数据结构与算法之美》很可能是向《数学之美》致敬。<br>根据朴素贝叶斯算法，我判断争哥认识吴军老师，置信度为 95%。（这一条是我瞎编的，哈哈）","like_count":7,"discussions":[{"author":{"id":1972505,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/19/19/d82e24fb.jpg","nickname":"李润东","note":"","ucode":"65CFEA3C8B27C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":266040,"discussion_content":"最后一句笑死🤣","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1589466918,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1939316,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/97/74/a933d664.jpg","nickname":"莜戏","note":"","ucode":"C3488A2BB44359","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":345955,"discussion_content":"吴军博士，顶尖的工程师，又兼具极强的写作与表达能力。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611822999,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62496,"user_name":"Clement","can_delete":false,"product_type":"c1","uid":1325624,"ip_address":"","ucode":"45BE6D2FDDF6FC","user_header":"https://static001.geekbang.org/account/avatar/00/14/3a/38/1e8a1760.jpg","comment_is_top":false,"comment_ctime":1548072958,"is_pvip":false,"replies":[{"id":"22199","content":"iPad Paper","user_name":"编辑回复","comment_id":62496,"uid":"1058895","ip_address":"","utype":2,"ctime":1548145714,"user_name_real":"王锦"}],"discussion_count":1,"race_medal":0,"score":"27317876734","product_id":100017301,"comment_content":"图片上的数据和公式使用什么软件画出来的？","like_count":6,"discussions":[{"author":{"id":1058895,"avatar":"https://static001.geekbang.org/account/avatar/00/10/28/4f/48e48553.jpg","nickname":"@阿锦啊","note":"","ucode":"3C5F00333D7174","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437237,"discussion_content":"iPad Paper","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548145714,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":59370,"user_name":"Geek_477c02","can_delete":false,"product_type":"c1","uid":1218578,"ip_address":"","ucode":"CB9A714A50B977","user_header":"https://static001.geekbang.org/account/avatar/00/12/98/12/a169bdcd.jpg","comment_is_top":false,"comment_ctime":1547357915,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"27317161691","product_id":100017301,"comment_content":"P（ Wi出现在短信中 | 短信是垃圾短信）表示垃圾短信中包含 Wi这个单词的概率有多大。<br><br>如果wi出现的概率是0怎么办，连乘导致结果是0了？","like_count":6,"discussions":[{"author":{"id":1207488,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gLC1Z8lYdWPHquZbJCf5FfIDgOJKiapygoyNrl4b5fkibyV2LBnCKV5BjRAYOhPGJxL425rIdSVnibTMEg012S9Pg/132","nickname":"邵帅","note":"","ucode":"EB662C972CC248","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":359188,"discussion_content":"这说明样本空间不够吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616132836,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1850499,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/3c/83/93e7af9e.jpg","nickname":"兰柯","note":"","ucode":"6D7230B3CE8722","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":180267,"discussion_content":"其实老师今天讲的就是naive bayes，可以拉普拉斯修正","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582288823,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1188524,"avatar":"https://static001.geekbang.org/account/avatar/00/12/22/ac/fc8e435a.jpg","nickname":"郭凯强","note":"","ucode":"002F58C3640560","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":137085,"discussion_content":"之前做过类似的，为0的设置成一个很小的数就行了。比如0.000000000000000001","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579178169,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164403,"user_name":"郑家庄赶大车的老郑","can_delete":false,"product_type":"c1","uid":1687570,"ip_address":"","ucode":"D432A3961840B8","user_header":"https://static001.geekbang.org/account/avatar/00/19/c0/12/1afb4b75.jpg","comment_is_top":false,"comment_ctime":1576979308,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"18756848492","product_id":100017301,"comment_content":"所以小明因为下雨而不上学的概率是 P(B|A)=2&#47;3。<br>这说法虽然没错，但似乎有点歧义，把“而”改成“才”会不会更好？","like_count":5,"discussions":[{"author":{"id":1972505,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/19/19/d82e24fb.jpg","nickname":"李润东","note":"","ucode":"65CFEA3C8B27C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":267218,"discussion_content":"其实P(B|A)直接理解的话应该是指的小明不上学的日子里下雨的概率","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1589616594,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":175305,"user_name":"注定非凡","can_delete":false,"product_type":"c1","uid":1113597,"ip_address":"","ucode":"80673056E131B7","user_header":"https://static001.geekbang.org/account/avatar/00/10/fd/fd/326be9bb.jpg","comment_is_top":false,"comment_ctime":1580649535,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"14465551423","product_id":100017301,"comment_content":"算法解析1. 基于黑名单的过滤器1，维护一个骚扰电话号码和垃圾短信发送号码的黑名单。①：如果黑名单中的电话号码不多，可以使用散列表、二叉树等动态数据结构来存储，对内存的消耗并不会很大    每个号码看作一个字符串，并且假设平均长度是 16 个字节，那存储 50 万个电话号码，大约需要 10MB 的内存空间，但当号码超过500万个时，使用散列表就需要100MB空间，这个对用户的手机而言是不可接受的。②：布隆过滤器最大的特点就是比较省存储空间，所以，用它来解决这个问题很合适    存储 500 万个手机号码，把位图大小设置为 10 倍数据大小，也只需要5000 万 bits，换算成字节不到 7MB 的存储空间③：还有一种时间换空间的方法，可以将内存的消耗优化到极致    把黑名单存储在服务器端上，服务器端来做过滤和拦截的核心工作。手机端只将要检查的号码发送给服务器端，服务器端将判断结果返回给手机端，但网络通信通常比较慢2. 基于规则的过滤器<br><br><br>1，基于规则的过滤方式<br>    ①：预先设定一些规则，如果某条短信符合这些规则，我们就可以判定它是垃圾短信<br>    ②：但如果短信只是满足其中一条规则，如果就判定为垃圾短信，会存在比较大的误判的情况。所以可以综合多条规则进行判断<br>    ③：或每条规则对应一个不同的得分，满足哪条规则，就累加对应的分数，某短信的总得分超过阈值，才会被判定为垃圾短信<br><br>2，难点问题<br>    过滤规则要实到执行层面，其实还有很大的距离，还有很多细节需要处理，如第一条规则中，我们该如何定义特殊单词；第二条规则中，我们该如何定义什么样的号码是群发号码等等<br>3，具体细节<br>    我们该如何定义特殊单词<br>    虽然可以基于概率统计的方法，借助计算机强大的计算能力，找出哪些单词最常出现在垃圾短信中，将这些最常出现的单词，作为特殊单词，用来过滤短信。<br>    不过这种方法的前提是，要有大量的样本数据，并且每条短信都做好了标记，它是垃圾短信还是非垃圾短信。<br>    如对 1000 万条短信，<br>    ①，进行分词处理（借助中文或者英文分词算法），去掉“的、和、是”等没有意义的停用词（Stop words），得到 n 个不同的单词<br>    ②，针对每个单词，统计有多少个垃圾短信出现了这个单词，有多少个非垃圾短信会出现这个单词，进而求出每个单词分别出现在垃圾短信，非垃圾短信中的概率。<br>    ③，如果某个单词出现在垃圾短信中的概率，远大于出现在非垃圾短信中的概率，则可这个单词作为特殊单词，用来过滤垃圾短信<br>4，缺点问题<br>        一方面，这些规则受人的思维方式局限，规则未免太过简单；<br>        另一方面，垃圾短信发送者可能会针对规则，精心设计短信，绕过这些规则的拦截<br>3. 基于概率统计的过滤器<br><br><br>1，理论基础<br>    ①：这种基于概率统计的过滤方式，基础理论是基于朴素贝叶斯算法<br>2，实践方法<br>    ①：基于概率统计的过滤器，是基于短信内容来判定是否是垃圾短信<br>    ②：需要把短信抽象成一组计算机可以理解并且方便计算的特征项，用这一组特征项代替短信本身，来做垃圾短信过滤<br>    ③：可以通过分词算法，把一个短信分割成 n 个单词。这 n 个单词就是一组特征项，全权代表这个短信。<br>    ④：因此，判定一个短信是否是垃圾短信的问题，就变成了，判定同时包含这几个单词的短信是否是垃圾短信<br>3，<br><br>使用概率，来表征一个短信是垃圾短信的可信程度。如果用公式将这个概率表示出来，就是下面这个样子：<br><br><br>尽管我们有大量的短信样本，但是我们没法通过样本数据统计得到这个概率。没有样本，也就无法计算概率。所以这样的推理方式虽然正确，但是实践中并不好用。所以我们需要通过朴素贝叶斯公式，将这个概率的求解，分解为其他三个概率的求解。<br><br><br>基于下面这条著名的概率规则来计算。<br><br>独立事件发生的概率计算公式：P(A*B) = P(A)*P(B)<br><br>如果事件 A 和事件 B 是独立事件，两者的发生没有相关性，事件 A 发生的概率 P(A) 等于 p1，事件 B 发生的概率 P(B) 等于 p2，那两个同时发生的概率 P(A*B) 就等于 P(A)*P(B)。<br>基于这条独立事件发生概率的计算公式，我们可以把 P（W1，W2，W3，…，Wn 同时出现在一条短信中 | 短信是垃圾短信）分解为下面这个公式：<br><br><br><br>在求解 p1 和 p2 倍数（p1&#47;p2）的时候，我们也就不需要这个值。<br>","like_count":4},{"had_liked":false,"id":136473,"user_name":"junjun","can_delete":false,"product_type":"c1","uid":1547322,"ip_address":"","ucode":"1F7EE146B9BE04","user_header":"https://static001.geekbang.org/account/avatar/00/17/9c/3a/bfd73920.jpg","comment_is_top":false,"comment_ctime":1569457157,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14454359045","product_id":100017301,"comment_content":"以前把算法一直和程序联系起来，现在突然发现，算法存在我们生活的各个方面，任何地方都是算法，比如你今天准备吃啥，其实也是一个算法。","like_count":3},{"had_liked":false,"id":102601,"user_name":"ferry","can_delete":false,"product_type":"c1","uid":1255187,"ip_address":"","ucode":"0A848FA96C3AD8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJGOSxM1GIHX9Y2JIe7vGQ87rK8xpo5F03KmiaGyXeKnozZsicHeSZrbSlzUVhTOdDlXCkTrcYNIVJg/132","comment_is_top":false,"comment_ctime":1560261628,"is_pvip":false,"replies":[{"id":"37275","content":"你说的也没错，不过那样就复杂了。","user_name":"作者回复","comment_id":102601,"uid":"1190123","ip_address":"","utype":1,"ctime":1560382259,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"14445163516","product_id":100017301,"comment_content":"将短信内容中的分词假设为完全独立是不是不太符合实际情况呢？是否应该使用多元文法，假设为分词与前若干个分词相关呢？","like_count":3,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453495,"discussion_content":"你说的也没错，不过那样就复杂了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560382259,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":83660,"user_name":"ldd","can_delete":false,"product_type":"c1","uid":1208157,"ip_address":"","ucode":"E8344FAFFE5CF3","user_header":"https://static001.geekbang.org/account/avatar/00/12/6f/5d/f0a19f09.jpg","comment_is_top":false,"comment_ctime":1554691652,"is_pvip":false,"replies":[{"id":"31023","content":"你说的这是一种情况，大部分情况，都不会命中，也就说，都不是骚扰电话。","user_name":"作者回复","comment_id":83660,"uid":"1190123","ip_address":"","utype":1,"ctime":1555381797,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"14439593540","product_id":100017301,"comment_content":"请问，基于黑名单的过滤方式，用布隆过滤器只能存储Bool值，即是否存储，但是还要实现“标记次数来判断是否达到阈值”，就需要额外的散列表了，需要的内存空间依然很大，方案上还不如直接用散列表来的更好吧？","like_count":3,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446118,"discussion_content":"你说的这是一种情况，大部分情况，都不会命中，也就说，都不是骚扰电话。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555381797,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169269,"user_name":"余晓飞","can_delete":false,"product_type":"c1","uid":1007370,"ip_address":"","ucode":"EEC632FF776327","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5f/0a/7f9c476b.jpg","comment_is_top":false,"comment_ctime":1578302922,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10168237514","product_id":100017301,"comment_content":"题图的 statics 其实是静力学的意思，不如直接用statistics","like_count":2,"discussions":[{"author":{"id":1972505,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/19/19/d82e24fb.jpg","nickname":"李润东","note":"","ucode":"65CFEA3C8B27C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":267312,"discussion_content":"列文虎克🤣","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589630811,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68009,"user_name":"lttzzlll","can_delete":false,"product_type":"c1","uid":1105387,"ip_address":"","ucode":"FA160F7C02ABAA","user_header":"https://static001.geekbang.org/account/avatar/00/10/dd/eb/80f9d212.jpg","comment_is_top":false,"comment_ctime":1550385371,"is_pvip":false,"replies":[{"id":"24712","content":"布隆过滤器本身就是解决位图消耗空间比较多的问题。位图的大小是数据的范围。而布隆过滤器的大小应该是小于位图大小的，所以肯定就是数据的范围了。","user_name":"作者回复","comment_id":68009,"uid":"1190123","ip_address":"","utype":1,"ctime":1550802748,"user_name_real":"gg"}],"discussion_count":2,"race_medal":0,"score":"10140319963","product_id":100017301,"comment_content":"上一节我们讲了，布隆过滤器最大的特点就是比较省存储空间，所以，用它来解决这个问题再合适不过了。如果我们要存储 500 万个手机号码，我们把位图大小设置为 10 倍数据大小，也就是 5000 万，那也只需要使用 5000 万个二进制位（5000 万 bits），换算成字节，也就是不到 7MB 的存储空间。比起散列表的解决方案，内存的消耗减少了很多。<br><br>这段话中：对于需要使用的内存空间有疑问，按照上一节的处理方式，把手机号码转换为整数，使用的内存空间应该是整数的范围 * 10 bits, 而不是手机号的数量 * 10 bits? 或者，这里不把手机号码转化为整数，用其他的哈希方法，把这500w个手机号映射到[0, 500W)这个区间内？","like_count":2,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439468,"discussion_content":"布隆过滤器本身就是解决位图消耗空间比较多的问题。位图的大小是数据的范围。而布隆过滤器的大小应该是小于位图大小的，所以肯定就是数据的范围了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550802748,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1330065,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/N0NACGUr8dNAbN6BdiagPHBaB0EnyDsI9zWpwJteqTY38apOEnTOA7JkBAQnzYKJBgxu3Q8YMUILwLAB6camn4w/132","nickname":"Swing","note":"","ucode":"55FCA9ECEFBBEB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":89577,"discussion_content":"也没看出这个位图的范围怎么取得，\n怎么判断 就是 数据规模的10倍，而不是 数据范围呢？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1576758064,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":59486,"user_name":"ban","can_delete":false,"product_type":"c1","uid":1034204,"ip_address":"","ucode":"E523CE97E48266","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c7/dc/9408c8c2.jpg","comment_is_top":false,"comment_ctime":1547378625,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10137313217","product_id":100017301,"comment_content":"https:&#47;&#47;www.jianshu.com&#47;p&#47;5cf3a155b2f0<br>找到另外一个相亲的例子","like_count":2},{"had_liked":false,"id":58634,"user_name":"墨禾","can_delete":false,"product_type":"c1","uid":1216590,"ip_address":"","ucode":"81BA44231AABE8","user_header":"https://static001.geekbang.org/account/avatar/00/12/90/4e/efaea936.jpg","comment_is_top":false,"comment_ctime":1547163870,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10137098462","product_id":100017301,"comment_content":"其实这个问题就是个分类预测问题，传统的机器学习方法中的分类预测算法都可以用","like_count":2},{"had_liked":false,"id":222717,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1590898464,"is_pvip":true,"discussion_count":0,"race_medal":2,"score":"5885865760","product_id":100017301,"comment_content":"看完整篇文章，都没有看到代码（虽然有公式），不开心。<br><br>其实我觉得黑名单过滤应该挺好用的，主要是考虑到每个人的黑名单并不会特别多，除了骚扰电话，估计还有前男友什么的也需要屏蔽。<br><br>把黑名单放在服务器上，应该不是什么好主意，主要是在打电话的时候，移动网络的信号似乎是没法使用的，不是特别清楚后续的移动技术有没有解决这个问题。<br><br>可以把所有的来电都放到服务器上去，进行分析比对，然后再返回一些判断条件，在手机上存储一些离线黑名单或者是条件。比如，如果我在北京，那么来自云南偏远小城市的电话号码，就有可能是骚扰电话。<br><br>黑名单可以对已经标记为骚扰的电话或者短信进行处理，而基于规则的过滤器可以处理没有在黑名单之内的。<br><br>基于概率或者说是朴素贝叶斯公式的过滤，其实应该也算是规则的一种。<br><br>如果让我来头脑风暴的话，我觉的对于来电或者短信，<br><br>* 首先应该从白名单开始，如果短信或电话的来源是在通讯录里面有的，那么就不用判断了，白名单不会太多；<br>* 然后再考虑指定的离线黑名单，这个应该也不会太多；<br>* 过了这两关，应该就是规则过滤了，有一些权重比较高的关键词应该很好用，“见光死”；<br>* 最后才是概率过滤，如果整个算法的速度不够快的话，这个时候用户应该已经接起电话来了。","like_count":1},{"had_liked":false,"id":176734,"user_name":"短迪大魔王","can_delete":false,"product_type":"c1","uid":1236079,"ip_address":"","ucode":"37E8117E0495B8","user_header":"https://static001.geekbang.org/account/avatar/00/12/dc/6f/5d86dbe9.jpg","comment_is_top":false,"comment_ctime":1581151443,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5876118739","product_id":100017301,"comment_content":"f分母没那么简单，P（w）=P（A）P（W｜A）+P（B）P（W｜B），A是正常邮件，B是垃圾邮件。所以贝叶斯公式分母要展开，每一项都是独立计算","like_count":1},{"had_liked":false,"id":168677,"user_name":"持续性创造","can_delete":false,"product_type":"c1","uid":1286758,"ip_address":"","ucode":"33C689165FE150","user_header":"https://static001.geekbang.org/account/avatar/00/13/a2/66/b709a000.jpg","comment_is_top":false,"comment_ctime":1578136579,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"5873103875","product_id":100017301,"comment_content":"小明不上学的概率：0.3。<br>下雨的概率：0.4。<br>同时发生的概率：0.3*0.4=0.12。<br>但是从样本里看是0.2啊。<br>这块想不明白哇老师。<br><br>是垃圾短信情况下，同时包含某些词的概率可以拆成分别的乘积。类比小明不上学下雨的问题，真的可以这么拆么？<br>","like_count":1,"discussions":[{"author":{"id":1324314,"avatar":"https://static001.geekbang.org/account/avatar/00/14/35/1a/9fa38dc9.jpg","nickname":"子瞻","note":"","ucode":"5C26FF10934534","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":307595,"discussion_content":"事件不独立呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600693717,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1899599,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/fc/4f/0a452c94.jpg","nickname":"大毛","note":"","ucode":"93B18287F06706","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":234161,"discussion_content":"2. \n下雨的例子中是不可以直接乘积的，下雨 和 不上学 同时满足可以表示为 P（AB）注意，A 和 B 此时并不独立，根据乘法公式，P(AB)=P(A|B)P(B)=P(B|A)P(A)，你可以算一下，它的值是 0.2。\n\n根据其它同学的留言，我们知道了朴素贝叶斯中假定各个特性之间是相互独立的，也就是说，朴素贝叶斯可以让下面的公式成立 ：P(w1,w2...,wn)=p(w1)p(w2)...p(wn)\n\n所以你要搞清楚，什么情况下可以相乘，什么情况下不能相乘","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586959575,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1899599,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/fc/4f/0a452c94.jpg","nickname":"大毛","note":"","ucode":"93B18287F06706","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":233660,"discussion_content":"1.在概率论中，当两个事件相互的独立的时候才可以直接将概率相乘。在小明上学的这个例子中，很明显 “不上学” 和 “下雨” 是有关联的，也就是说，它们之间不是独立的。所以你不能直接 0.3 * 0.4 。\n2.这个问题我还没有仔细看，稍后回复你","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586937579,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82266,"user_name":"ppingfann","can_delete":false,"product_type":"c1","uid":1242999,"ip_address":"","ucode":"38DE7D2F6D22E4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eo435IStLENgI45dWOow9gPDh8RcqvuCOLp30XqLJK3wqmwO7QKRLx8sMg9eucMKnJdjwickrAQMBw/132","comment_is_top":false,"comment_ctime":1554172411,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5849139707","product_id":100017301,"comment_content":"有一问题：<br><br>短信中出现的单词w1、w2、…、wn应该不是独立事件吧。很多输入法也是依据用户前面输入的单词来推荐后面用户可能会想输入的单词的。这个应该就能说明单词输入之间不应该是独立事件的。<br><br>就算为了解决问题方便，假设事件为独立事件，那么<br><br>P(w1、w2、…、wn同时出现在短信中)，这个概率是可以拆分成P(w1)、P(w2)、…、P(wn)相乘计算出来的。也就没有后面那些步骤了。<br><br>（btw后面这个思想确实很智慧）","like_count":1},{"had_liked":false,"id":58733,"user_name":"Kudo","can_delete":false,"product_type":"c1","uid":1036948,"ip_address":"","ucode":"21965914B72AEB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d2/94/8bd217f1.jpg","comment_is_top":false,"comment_ctime":1547186610,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5842153906","product_id":100017301,"comment_content":"朴素贝叶斯模型的一个基本假设是条件独立性，即假定w1, w2, ..., wn之间相互独立。这是一个较强的假设，正是这一假设，使朴素贝叶斯的学习与预测大为简化，且易于实现，其缺点是分类的准确率不一定高。","like_count":1},{"had_liked":false,"id":267120,"user_name":"毛启圣","can_delete":false,"product_type":"c1","uid":1330056,"ip_address":"","ucode":"233DA95ED28C11","user_header":"https://static001.geekbang.org/account/avatar/00/14/4b/88/272b4562.jpg","comment_is_top":false,"comment_ctime":1607601295,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607601295","product_id":100017301,"comment_content":"trie 树存储是否要节省空间？","like_count":0},{"had_liked":false,"id":264709,"user_name":"拉布拉多","can_delete":false,"product_type":"c1","uid":1204353,"ip_address":"","ucode":"637A88D9F29F57","user_header":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","comment_is_top":false,"comment_ctime":1606605366,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606605366","product_id":100017301,"comment_content":"王老师这课程真是值，能把一些算法，简单的篇幅讲清楚。能达到自己传授别人知识，算法这块是完全融会贯通了。至少这些篇节是。","like_count":0},{"had_liked":false,"id":246110,"user_name":"迷途书童","can_delete":false,"product_type":"c1","uid":1090142,"ip_address":"","ucode":"462BE64D3373DA","user_header":"https://static001.geekbang.org/account/avatar/00/10/a2/5e/3871ff79.jpg","comment_is_top":false,"comment_ctime":1599181787,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1599181787","product_id":100017301,"comment_content":"朴素贝叶斯原理听起来简单，实际上有很多落地工作要做","like_count":0},{"had_liked":false,"id":243308,"user_name":"对白","can_delete":false,"product_type":"c1","uid":1268797,"ip_address":"","ucode":"3183E5ADBC794B","user_header":"https://static001.geekbang.org/account/avatar/00/13/5c/3d/e8325811.jpg","comment_is_top":false,"comment_ctime":1598046189,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598046189","product_id":100017301,"comment_content":"朴素贝叶斯算法如果没有特征之间相互独立这个假设，那么是无法求出结果的","like_count":0},{"had_liked":false,"id":232944,"user_name":"梅端","can_delete":false,"product_type":"c1","uid":1525335,"ip_address":"","ucode":"FEC08731457770","user_header":"https://static001.geekbang.org/account/avatar/00/17/46/57/fe38a6db.jpg","comment_is_top":false,"comment_ctime":1594174688,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594174688","product_id":100017301,"comment_content":"学习算法真的需要耐心，反复不断的推演和思考。","like_count":0},{"had_liked":false,"id":224544,"user_name":"大聪明","can_delete":false,"product_type":"c1","uid":1976284,"ip_address":"","ucode":"6FE999C07F214A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/aM94SrGBJ0iaOZfQ1UiaVgTYN4cDAZiaGicHpLcjfXsiaDzibFjeHOicP4Nfyexk6Mm19dvaW4CByxVPlLjoPjicpEWlnQ/132","comment_is_top":false,"comment_ctime":1591436576,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591436576","product_id":100017301,"comment_content":"先验概率+数据=后验概率","like_count":0},{"had_liked":false,"id":219190,"user_name":"默默","can_delete":false,"product_type":"c1","uid":1006635,"ip_address":"","ucode":"AF798B9D327F24","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/2b/8b771383.jpg","comment_is_top":false,"comment_ctime":1589963907,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589963907","product_id":100017301,"comment_content":"老师在讲基于统计过滤时，用到了独立事件概率公式。一般来说词与词之间并非独立，直接这样使用，可能会有较大的误差。","like_count":0},{"had_liked":false,"id":195989,"user_name":"墟","can_delete":false,"product_type":"c1","uid":1519087,"ip_address":"","ucode":"5E33E9FE51CE88","user_header":"https://static001.geekbang.org/account/avatar/00/17/2d/ef/2f18b76f.jpg","comment_is_top":false,"comment_ctime":1585227983,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585227983","product_id":100017301,"comment_content":"工作中用到了该算法，很受用。","like_count":0},{"had_liked":false,"id":170399,"user_name":"宇飞","can_delete":false,"product_type":"c1","uid":1105513,"ip_address":"","ucode":"D64C53CD189164","user_header":"https://static001.geekbang.org/account/avatar/00/10/de/69/113da382.jpg","comment_is_top":false,"comment_ctime":1578585688,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578585688","product_id":100017301,"comment_content":"垃圾邮件，短信，骚扰电话，可以继续规则，黑名单方式判断，我觉得也可以基于随机森林的方式判断，抽取特征值归类，还有朴素贝叶斯算法","like_count":0},{"had_liked":false,"id":144743,"user_name":"xuanyuan","can_delete":false,"product_type":"c1","uid":1113737,"ip_address":"","ucode":"1EC79B9372868F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI2icbib62icXtibTkThtyRksbuJLoTLMts7zook2S30MiaBtbz0f5JskwYicwqXkhpYfvCpuYkcvPTibEaQ/132","comment_is_top":false,"comment_ctime":1572021237,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572021237","product_id":100017301,"comment_content":"深度学习的经典例子。吴恩达的课上就有。","like_count":0},{"had_liked":false,"id":134475,"user_name":"🇩 🇱 🇱","can_delete":false,"product_type":"c1","uid":1480661,"ip_address":"","ucode":"950CE425B2D710","user_header":"https://static001.geekbang.org/account/avatar/00/16/97/d5/f0c82b43.jpg","comment_is_top":false,"comment_ctime":1568854096,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1568854096","product_id":100017301,"comment_content":"那p1&#47;p2到底是多少呢","like_count":0,"discussions":[{"author":{"id":1330065,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/N0NACGUr8dNAbN6BdiagPHBaB0EnyDsI9zWpwJteqTY38apOEnTOA7JkBAQnzYKJBgxu3Q8YMUILwLAB6camn4w/132","nickname":"Swing","note":"","ucode":"55FCA9ECEFBBEB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":89585,"discussion_content":"这个比值的几个关键元素 都是容易求的，上面讲到了啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576758222,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133636,"user_name":"李冲","can_delete":false,"product_type":"c1","uid":1254530,"ip_address":"","ucode":"C8C12308B0FDDA","user_header":"https://static001.geekbang.org/account/avatar/00/13/24/82/b5808a60.jpg","comment_is_top":false,"comment_ctime":1568625303,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568625303","product_id":100017301,"comment_content":"思考题可以借鉴推荐系统的思路不？就是以近邻的方式推测最终评价结果。<br><br>载体的内容的评分是一个维度，其他维度可以考虑历史联系次数占比，历史联系频度。如果结果偏向负面，有条件也可以在云端查询对方的近期行为的评分。<br><br>其实常见的做法都能够解决问题，搞不定的反而是那些白名单。银行总机打电话推销保险谁能拦得住","like_count":0},{"had_liked":false,"id":120757,"user_name":"Paul Shan","can_delete":false,"product_type":"c1","uid":1593140,"ip_address":"","ucode":"32D99989028284","user_header":"","comment_is_top":false,"comment_ctime":1564990872,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564990872","product_id":100017301,"comment_content":"现在基于有监督的深度学习的检测算法比较流行，也就是通过标注样本来检测。这种方法的好处是准确率高，而且可以与时俱进，动态调整。缺点是训练模型时间长，消耗运算量大，需要标注的样本多。","like_count":0},{"had_liked":false,"id":98940,"user_name":"danvid","can_delete":false,"product_type":"c1","uid":1270415,"ip_address":"","ucode":"84C50611B1DEA5","user_header":"https://static001.geekbang.org/account/avatar/00/13/62/8f/c0f40d98.jpg","comment_is_top":false,"comment_ctime":1559117014,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559117014","product_id":100017301,"comment_content":"评分模型中BM25模型中的二元独立模型也是基于这个来做的～一模一样～，这个东西加上词频就是BM25模型了","like_count":0},{"had_liked":false,"id":90427,"user_name":"磊爷","can_delete":false,"product_type":"c1","uid":1234515,"ip_address":"","ucode":"CF381D4CE0F5BB","user_header":"https://static001.geekbang.org/account/avatar/00/12/d6/53/21da9e2b.jpg","comment_is_top":false,"comment_ctime":1556517199,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556517199","product_id":100017301,"comment_content":"高频点击判断为骚扰短信，中奖，打钱，送东西","like_count":0},{"had_liked":false,"id":59912,"user_name":"Geek_41d472","can_delete":false,"product_type":"c1","uid":1247965,"ip_address":"","ucode":"DEC2B6329460CF","user_header":"https://static001.geekbang.org/account/avatar/00/13/0a/dd/88fa7b52.jpg","comment_is_top":false,"comment_ctime":1547430598,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547430598","product_id":100017301,"comment_content":"前段时间刚看概率论与数理统计，看了2&#47;3，这么经典的公式现在居然忘完了……","like_count":0},{"had_liked":false,"id":59371,"user_name":"Alexis何春光","can_delete":false,"product_type":"c1","uid":1181149,"ip_address":"","ucode":"614570FAE3B56A","user_header":"https://static001.geekbang.org/account/avatar/00/12/05/dd/b201cf13.jpg","comment_is_top":false,"comment_ctime":1547358055,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547358055","product_id":100017301,"comment_content":"请问具体要如何用位图存储手机号码呢？之前的例子是存储数字，可以直接使用数字的值作为下标。那么这里也要用手机号作为下标吗？还是要再做一次hash处理呢？会需要额外维护手机号与下表的hashmap吗？","like_count":0},{"had_liked":false,"id":58841,"user_name":"許敲敲","can_delete":false,"product_type":"c1","uid":1046681,"ip_address":"","ucode":"6486466820E7BF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/99/8e760987.jpg","comment_is_top":false,"comment_ctime":1547210889,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547210889","product_id":100017301,"comment_content":"打算入行NLP的学员，听了这个比较亲切，想多了解一些NLP领域的算法","like_count":1},{"had_liked":false,"id":58726,"user_name":"刘远通","can_delete":false,"product_type":"c1","uid":1253307,"ip_address":"","ucode":"4D3EE819E4B235","user_header":"https://static001.geekbang.org/account/avatar/00/13/1f/bb/c488d5db.jpg","comment_is_top":false,"comment_ctime":1547185529,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547185529","product_id":100017301,"comment_content":"用贝叶斯公式以后  <br>可以在垃圾短信这个小规模样本里面 去求W_I出现的概率  （有几个关键词就需要考虑几次但是规模小）<br>以及垃圾短信本身的概率 (只需要计算一次)<br>分母的话可以不知道<br>因为有它的对偶式子 P1+P2=1 足矣  实在想知道求P1以后可以反推分母","like_count":0}]}