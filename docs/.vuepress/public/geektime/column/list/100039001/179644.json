{"id":179644,"title":"25 | 实战二（上）：针对非业务的通用框架开发，如何做需求分析和设计？","content":"<p>上两节课中，我们讲了如何针对一个业务系统做需求分析、设计和实现，并且通过一个积分兑换系统的开发，实践了之前学过的一些设计原则。接下来的两节课，我们再结合一个支持各种统计规则的性能计数器项目，学习针对一个非业务的通用框架开发，如何来做需求分析、设计和实现，同时学习如何灵活应用各种设计原则。</p><p>话不多说，让我们正式开始今天的内容吧！</p><h2>项目背景</h2><p>我们希望设计开发一个小的框架，能够获取接口调用的各种统计信息，比如，响应时间的最大值（max）、最小值（min）、平均值（avg）、百分位值（percentile）、接口调用次数（count）、频率（tps） 等，并且支持将统计结果以各种显示格式（比如：JSON格式、网页格式、自定义显示格式等）输出到各种终端（Console命令行、HTTP网页、Email、日志文件、自定义输出终端等），以方便查看。</p><p>我们假设这是真实项目中的一个开发需求，如果让你来负责开发这样一个通用的框架，应用到各种业务系统中，支持实时计算、查看数据的统计信息，你会如何设计和实现呢？你可以先自己主动思考一下，然后再来看我的分析思路。</p><h2>需求分析</h2><p>性能计数器作为一个跟业务无关的功能，我们完全可以把它开发成一个独立的框架或者类库，集成到很多业务系统中。而作为可被复用的框架，除了功能性需求之外，非功能性需求也非常重要。所以，接下来，我们从这两个方面来做需求分析。</p><!-- [[[read_end]]] --><h3>1.功能性需求分析</h3><p>相对于一大长串的文字描述，人脑更容易理解短的、罗列的比较规整、分门别类的列表信息。显然，刚才那段需求描述不符合这个规律。我们需要把它拆解成一个一个的“干条条”。拆解之后我写在下面了，是不是看起来更加清晰、有条理？</p><ul>\n<li>接口统计信息：包括接口响应时间的统计信息，以及接口调用次数的统计信息等。</li>\n<li>统计信息的类型：max、min、avg、percentile、count、tps等。</li>\n<li>统计信息显示格式：Json、Html、自定义显示格式。</li>\n<li>统计信息显示终端：Console、Email、HTTP网页、日志、自定义显示终端。</li>\n</ul><p>除此之外，我们还可以借助设计产品的时候，经常用到的线框图，把最终数据的显示样式画出来，会更加一目了然。具体的线框图如下所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/f0/e5/f04b341ad5fda418ae24f166d0a4dde5.jpg?wh=3663*1413\" alt=\"\"></p><p>实际上，从线框图中，我们还能挖掘出了下面几个隐藏的需求。</p><ul>\n<li>统计触发方式：包括主动和被动两种。主动表示以一定的频率定时统计数据，并主动推送到显示终端，比如邮件推送。被动表示用户触发统计，比如用户在网页中选择要统计的时间区间，触发统计，并将结果显示给用户。</li>\n<li>统计时间区间：框架需要支持自定义统计时间区间，比如统计最近10分钟的某接口的tps、访问次数，或者统计12月11日00点到12月12日00点之间某接口响应时间的最大值、最小值、平均值等。</li>\n<li>统计时间间隔：对于主动触发统计，我们还要支持指定统计时间间隔，也就是多久触发一次统计显示。比如，每间隔10s统计一次接口信息并显示到命令行中，每间隔24小时发送一封统计信息邮件。</li>\n</ul><h3>2.非功能性需求分析</h3><p>对于这样一个通用的框架的开发，我们还需要考虑很多非功能性的需求。具体来讲，我总结了以下几个比较重要的方面。</p><ul>\n<li>易用性</li>\n</ul><p>易用性听起来更像是一个评判产品的标准。没错，我们在开发这样一个技术框架的时候，也要有产品意识。框架是否易集成、易插拔、跟业务代码是否松耦合、提供的接口是否够灵活等等，都是我们应该花心思去思考和设计的。有的时候，文档写得好坏甚至都有可能决定一个框架是否受欢迎。</p><ul>\n<li>性能</li>\n</ul><p>对于需要集成到业务系统的框架来说，我们不希望框架本身的代码执行效率，对业务系统有太多性能上的影响。对于性能计数器这个框架来说，一方面，我们希望它是低延迟的，也就是说，统计代码不影响或很少影响接口本身的响应时间；另一方面，我们希望框架本身对内存的消耗不能太大。</p><ul>\n<li>扩展性</li>\n</ul><p>这里说的扩展性跟之前讲到的代码的扩展性有点类似，都是指在不修改或尽量少修改代码的情况下添加新的功能。但是这两者也有区别。之前讲到的扩展是从框架代码开发者的角度来说的。这里所说的扩展是从框架使用者的角度来说的，特指使用者可以在不修改框架源码，甚至不拿到框架源码的情况下，为框架扩展新的功能。这就有点类似给框架开发插件。关于这一点，我举一个例子来解释一下。</p><p>feign是一个HTTP客户端框架，我们可以在不修改框架源码的情况下，用如下方式来扩展我们自己的编解码方式、日志、拦截器等。</p><pre><code>Feign feign = Feign.builder()\n        .logger(new CustomizedLogger())\n        .encoder(new FormEncoder(new JacksonEncoder()))\n        .decoder(new JacksonDecoder())\n        .errorDecoder(new ResponseErrorDecoder())\n        .requestInterceptor(new RequestHeadersInterceptor()).build();\n\npublic class RequestHeadersInterceptor implements RequestInterceptor {  \n  @Override\n  public void apply(RequestTemplate template) {\n    template.header(&quot;appId&quot;, &quot;...&quot;);\n    template.header(&quot;version&quot;, &quot;...&quot;);\n    template.header(&quot;timestamp&quot;, &quot;...&quot;);\n    template.header(&quot;token&quot;, &quot;...&quot;);\n    template.header(&quot;idempotent-token&quot;, &quot;...&quot;);\n    template.header(&quot;sequence-id&quot;, &quot;...&quot;);\n}\n\npublic class CustomizedLogger extends feign.Logger {\n  //...\n}\n\npublic class ResponseErrorDecoder implements ErrorDecoder {\n  @Override\n  public Exception decode(String methodKey, Response response) {\n    //...\n  }\n}\n</code></pre><ul>\n<li>容错性</li>\n</ul><p>容错性这一点也非常重要。对于性能计数器框架来说，不能因为框架本身的异常导致接口请求出错。所以，我们要对框架可能存在的各种异常情况都考虑全面，对外暴露的接口抛出的所有运行时、非运行时异常都进行捕获处理。</p><ul>\n<li>通用性</li>\n</ul><p>为了提高框架的复用性，能够灵活应用到各种场景中。框架在设计的时候，要尽可能通用。我们要多去思考一下，除了接口统计这样一个需求，还可以适用到其他哪些场景中，比如是否还可以处理其他事件的统计信息，比如SQL请求时间的统计信息、业务统计信息（比如支付成功率）等。</p><h2>框架设计</h2><p>前面讲了需求分析，现在我们来看如何针对需求做框架设计。</p><p>对于稍微复杂系统的开发，很多人觉得不知从何开始。我个人喜欢借鉴TDD（测试驱动开发）和Prototype（最小原型）的思想，先聚焦于一个简单的应用场景，基于此设计实现一个简单的原型。尽管这个最小原型系统在功能和非功能特性上都不完善，但它能够看得见、摸得着，比较具体、不抽象，能够很有效地帮助我缕清更复杂的设计思路，是迭代设计的基础。</p><p>这就好比做算法题目。当我们想要一下子就想出一个最优解法时，可以先写几组测试数据，找找规律，再先想一个最简单的算法去解决它。虽然这个最简单的算法在时间、空间复杂度上可能都不令人满意，但是我们可以基于此来做优化，这样思路就会更加顺畅。</p><p>对于性能计数器这个框架的开发来说，我们可以先聚焦于一个非常具体、简单的应用场景，比如统计用户注册、登录这两个接口的响应时间的最大值和平均值、接口调用次数，并且将统计结果以JSON的格式输出到命令行中。现在这个需求简单、具体、明确，设计实现起来难度降低了很多。</p><p>我们先给出应用场景的代码。具体如下所示：</p><pre><code>//应用场景：统计下面两个接口(注册和登录）的响应时间和访问次数\npublic class UserController {\n  public void register(UserVo user) {\n    //...\n  }\n  \n  public UserVo login(String telephone, String password) {\n    //...\n  }\n}\n</code></pre><p>要输出接口的响应时间的最大值、平均值和接口调用次数，我们首先要采集每次接口请求的响应时间，并且存储起来，然后按照某个时间间隔做聚合统计，最后才是将结果输出。在原型系统的代码实现中，我们可以把所有代码都塞到一个类中，暂时不用考虑任何代码质量、线程安全、性能、扩展性等等问题，怎么简单怎么来就行。</p><p>最小原型的代码实现如下所示。其中，recordResponseTime()和recordTimestamp()两个函数分别用来记录接口请求的响应时间和访问时间。startRepeatedReport()函数以指定的频率统计数据并输出结果。</p><pre><code>public class Metrics {\n  // Map的key是接口名称，value对应接口请求的响应时间或时间戳；\n  private Map&lt;String, List&lt;Double&gt;&gt; responseTimes = new HashMap&lt;&gt;();\n  private Map&lt;String, List&lt;Double&gt;&gt; timestamps = new HashMap&lt;&gt;();\n  private ScheduledExecutorService executor = Executors.newSingleThreadScheduledExecutor();\n\n  public void recordResponseTime(String apiName, double responseTime) {\n    responseTimes.putIfAbsent(apiName, new ArrayList&lt;&gt;());\n    responseTimes.get(apiName).add(responseTime);\n  }\n\n  public void recordTimestamp(String apiName, double timestamp) {\n    timestamps.putIfAbsent(apiName, new ArrayList&lt;&gt;());\n    timestamps.get(apiName).add(timestamp);\n  }\n\n  public void startRepeatedReport(long period, TimeUnit unit){\n    executor.scheduleAtFixedRate(new Runnable() {\n      @Override\n      public void run() {\n        Gson gson = new Gson();\n        Map&lt;String, Map&lt;String, Double&gt;&gt; stats = new HashMap&lt;&gt;();\n        for (Map.Entry&lt;String, List&lt;Double&gt;&gt; entry : responseTimes.entrySet()) {\n          String apiName = entry.getKey();\n          List&lt;Double&gt; apiRespTimes = entry.getValue();\n          stats.putIfAbsent(apiName, new HashMap&lt;&gt;());\n          stats.get(apiName).put(&quot;max&quot;, max(apiRespTimes));\n          stats.get(apiName).put(&quot;avg&quot;, avg(apiRespTimes));\n        }\n  \n        for (Map.Entry&lt;String, List&lt;Double&gt;&gt; entry : timestamps.entrySet()) {\n          String apiName = entry.getKey();\n          List&lt;Double&gt; apiTimestamps = entry.getValue();\n          stats.putIfAbsent(apiName, new HashMap&lt;&gt;());\n          stats.get(apiName).put(&quot;count&quot;, (double)apiTimestamps.size());\n        }\n        System.out.println(gson.toJson(stats));\n      }\n    }, 0, period, unit);\n  }\n\n  private double max(List&lt;Double&gt; dataset) {//省略代码实现}\n  private double avg(List&lt;Double&gt; dataset) {//省略代码实现}\n}\n</code></pre><p>我们通过不到50行代码就实现了最小原型。接下来，我们再来看，如何用它来统计注册、登录接口的响应时间和访问次数。具体的代码如下所示：</p><pre><code>//应用场景：统计下面两个接口(注册和登录）的响应时间和访问次数\npublic class UserController {\n  private Metrics metrics = new Metrics();\n  \n  public UserController() {\n    metrics.startRepeatedReport(60, TimeUnit.SECONDS);\n  }\n\n  public void register(UserVo user) {\n    long startTimestamp = System.currentTimeMillis();\n    metrics.recordTimestamp(&quot;regsiter&quot;, startTimestamp);\n    //...\n    long respTime = System.currentTimeMillis() - startTimestamp;\n    metrics.recordResponseTime(&quot;register&quot;, respTime);\n  }\n\n  public UserVo login(String telephone, String password) {\n    long startTimestamp = System.currentTimeMillis();\n    metrics.recordTimestamp(&quot;login&quot;, startTimestamp);\n    //...\n    long respTime = System.currentTimeMillis() - startTimestamp;\n    metrics.recordResponseTime(&quot;login&quot;, respTime);\n  }\n}\n</code></pre><p>最小原型的代码实现虽然简陋，但它却帮我们将思路理顺了很多，我们现在就基于它做最终的框架设计。下面是我针对性能计数器框架画的一个粗略的系统设计图。图可以非常直观地体现设计思想，并且能有效地帮助我们释放更多的脑空间，来思考其他细节问题。</p><p><img src=\"https://static001.geekbang.org/resource/image/92/16/926561b82b49c937dcf4a2b9e6b35c16.jpg?wh=1914*621\" alt=\"\"></p><p>如图所示，我们把整个框架分为四个模块：数据采集、存储、聚合统计、显示。每个模块负责的工作简单罗列如下。</p><ul>\n<li>数据采集：负责打点采集原始数据，包括记录每次接口请求的响应时间和请求时间。数据采集过程要高度容错，不能影响到接口本身的可用性。除此之外，因为这部分功能是暴露给框架的使用者的，所以在设计数据采集API的时候，我们也要尽量考虑其易用性。</li>\n<li>存储：负责将采集的原始数据保存下来，以便后面做聚合统计。数据的存储方式有多种，比如：Redis、MySQL、HBase、日志、文件、内存等。数据存储比较耗时，为了尽量地减少对接口性能（比如响应时间）的影响，采集和存储的过程异步完成。</li>\n<li>聚合统计：负责将原始数据聚合为统计数据，比如：max、min、avg、pencentile、count、tps等。为了支持更多的聚合统计规则，代码希望尽可能灵活、可扩展。</li>\n<li>显示：负责将统计数据以某种格式显示到终端，比如：输出到命令行、邮件、网页、自定义显示终端等。</li>\n</ul><p>前面讲到面向对象分析、设计和实现的时候，我们讲到设计阶段最终输出的是类的设计，同时也讲到，软件设计开发是一个迭代的过程，分析、设计和实现这三个阶段的界限划分并不明显。所以，今天我们只给出了比较粗略的模块划分，至于更加详细的设计，我们留在下一节课中跟实现一块来讲解。</p><h2>重点回顾</h2><p>今天的内容到此就讲完了。我们来一起总结回顾一下，你需要掌握的重点内容。</p><p>对于非业务通用框架的开发，我们在做需求分析的时候，除了功能性需求分析之外，还需要考虑框架的非功能性需求。比如，框架的易用性、性能、扩展性、容错性、通用性等。</p><p>对于复杂框架的设计，很多人往往觉得无从下手。今天我们分享了几个小技巧，其中包括：画产品线框图、聚焦简单应用场景、设计实现最小原型、画系统设计图等。这些方法的目的都是为了让问题简化、具体、明确，提供一个迭代设计开发的基础，逐步推进。</p><p>实际上，不仅仅是软件设计开发，不管做任何事情，如果我们总是等到所有的东西都想好了再开始，那这件事情可能永远都开始不了。有句老话讲：万事开头难，所以，先迈出第一步很重要。</p><h2>课堂讨论</h2><p>今天的课堂讨论题有下面两道。</p><ol>\n<li>应对复杂系统的设计实现，我今天讲到了聚焦简单场景、最小原型、画图等几个技巧，你还有什么经验可以分享给大家吗？</li>\n<li>今天提到的线框图、最小原型、易用性等，实际上都是产品设计方面的手段或者概念，应用到像框架这样的技术产品的设计上也非常有用。你觉得对于一个技术人来说，产品能力是否同样重要呢？技术人是否应该具备一些产品思维呢？</li>\n</ol><p>欢迎在留言区写下你的答案，和同学一起交流和分享。如果有收获，也欢迎你把这篇文章分享给你的朋友。</p>","comments":[{"had_liked":false,"id":166970,"user_name":"辣么大","can_delete":false,"product_type":"c1","uid":1396951,"ip_address":"","ucode":"AB308B6DCA0108","user_header":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","comment_is_top":false,"comment_ctime":1577658071,"is_pvip":true,"discussion_count":5,"race_medal":0,"score":"366649878231","product_id":100039001,"comment_content":"没有经历过大型系统的全过程（设计，开发，实现，维护）。自己开发一些功能时，比较喜欢“用户故事”，这样能基本能做到一次交付一个可用功能。干就是了！先有一个原型，然后再迭代优化。最后“纸上得来终觉浅”，照着争哥的代码还是自己实现了一下：https:&#47;&#47;github.com&#47;gdhucoder&#47;Algorithms4&#47;tree&#47;master&#47;designpattern&#47;u025","like_count":86,"discussions":[{"author":{"id":1444122,"avatar":"https://static001.geekbang.org/account/avatar/00/16/09/1a/e0f95684.jpg","nickname":"空空","note":"","ucode":"8F6EFE5A6F6F64","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":171735,"discussion_content":"user story是目前大厂流行的方式，和TDD一起用就有点过于违和，目前我公司的用法是和BDD结合，由测试驱动转向行为驱动，这样更符合用户故事的开发模式，这样的好处是代码可读性接近自然语言了。","likes_number":11,"is_delete":false,"is_hidden":false,"ctime":1581742432,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1396951,"avatar":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","nickname":"辣么大","note":"","ucode":"AB308B6DCA0108","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1444122,"avatar":"https://static001.geekbang.org/account/avatar/00/16/09/1a/e0f95684.jpg","nickname":"空空","note":"","ucode":"8F6EFE5A6F6F64","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":171886,"discussion_content":"谢谢！学习了！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581755723,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":171735,"ip_address":""},"score":171886,"extra":""}]},{"author":{"id":1237624,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e2/78/9241b7b2.jpg","nickname":"志振爱咋滴咋滴","note":"","ucode":"E7A5049920C101","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":118997,"discussion_content":"在我们团队做敏捷开发的时候，所有的需求的都是用户故事，从用户角度去看一个功能的实现，和具体交付时要做什么什么程度。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1578207769,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1359701,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","nickname":"小伟","note":"","ucode":"124953423491E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":110942,"discussion_content":"建议把测试以UT的方式写在源代码class或UT class里，个人感觉main不是个很好的方式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577767446,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1396951,"avatar":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","nickname":"辣么大","note":"","ucode":"AB308B6DCA0108","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1359701,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","nickname":"小伟","note":"","ucode":"124953423491E2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":110984,"discussion_content":"好的，谢谢建议！我学习一下！\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577770198,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":110942,"ip_address":""},"score":110984,"extra":""}]}]},{"had_liked":false,"id":168328,"user_name":"        ","can_delete":false,"product_type":"c1","uid":1255918,"ip_address":"","ucode":"21028A49D81B06","user_header":"https://static001.geekbang.org/account/avatar/00/13/29/ee/fba11edf.jpg","comment_is_top":false,"comment_ctime":1578048112,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"186261641840","product_id":100039001,"comment_content":"https:&#47;&#47;github.com&#47;Aspire814&#47;DesignPattern.git<br>因为争哥的简单实现具有代码倾入性，简单实现了了一个基于自定义切面和注解的接口统计服务。供学习参考","like_count":44,"discussions":[{"author":{"id":1239462,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e9/a6/69907ec1.jpg","nickname":"李伟","note":"","ucode":"F0EF60EB250B20","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":270696,"discussion_content":"咋这么优秀呢","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1590038285,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2870321,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLE9hv64CEabxt76tQQcWDicx0sucpAApFvYoM8eXBViaJgz06EjcfJjiamSFWY9aAuxjILaPoiaa0lNw/132","nickname":"Soil","note":"","ucode":"3B353BC858B5AE","race_medal":5,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587007,"discussion_content":"棒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662683901,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166988,"user_name":"progyoung","can_delete":false,"product_type":"c1","uid":1014692,"ip_address":"","ucode":"0B4898AE78F9F5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7b/a4/24955994.jpg","comment_is_top":false,"comment_ctime":1577664704,"is_pvip":false,"replies":[{"id":"64817","content":"可以使用类似spring aop 做到无侵入","user_name":"作者回复","comment_id":166988,"uid":"1190123","ip_address":"","utype":1,"ctime":1577665692,"user_name_real":"王争"}],"discussion_count":8,"race_medal":0,"score":"126131716288","product_id":100039001,"comment_content":"老师，本文中的案例统计时间时对业务代码是侵入式的，有没有非侵入式的案例呀？","like_count":30,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479703,"discussion_content":"可以使用类似spring aop 做到无侵入","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1577665692,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1018552,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8a/b8/97d30803.jpg","nickname":"布拉格的鱼","note":"","ucode":"95145A236D6033","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":219743,"discussion_content":"还可以用 agent 方式，应用无感知","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1585801305,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1257453,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2f/ed/a87bb8fa.jpg","nickname":"此鱼不得水","note":"","ucode":"95268E823FB4D2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":114563,"discussion_content":"直接字节码增强比较合适","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1577974343,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2051293,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/4c/dd/c6035349.jpg","nickname":"Bumblebee","note":"","ucode":"B879C8A511D08D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381928,"discussion_content":"注解加拦截器也挺好的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625300555,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2449401,"avatar":"https://static001.geekbang.org/account/avatar/00/25/5f/f9/12e67bb4.jpg","nickname":"阿天","note":"","ucode":"8F56A31D84FDE3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361499,"discussion_content":"用字节码插桩还挺好的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616680258,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1002134,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/96/99466a06.jpg","nickname":"Laughing","note":"","ucode":"F68F1E000CA800","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":321995,"discussion_content":"Java instrumentation 了解下。探针最好用premain的方式启动加载，里面可以用动态代理自己实现，也可以通过字节码修改的方式实现","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604659686,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1591223,"avatar":"https://static001.geekbang.org/account/avatar/00/18/47/b7/b30472fd.jpg","nickname":"JerryZhu","note":"","ucode":"76850CD45786C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304180,"discussion_content":"一般这种东西， 都是一个注解扔个业务， 想要统计埋点的接口 打个注解就好， 甚至可以提供一个全局的注解， 指定哪些包下面的所有接口需要统计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599489655,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1200708,"avatar":"https://static001.geekbang.org/account/avatar/00/12/52/44/de7f2b98.jpg","nickname":"pines","note":"","ucode":"7B925605B36B4E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":109188,"discussion_content":"可以使用prometheus，用hook的方式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577672806,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167696,"user_name":"花儿少年","can_delete":false,"product_type":"c1","uid":1318540,"ip_address":"","ucode":"CFE4F64243673B","user_header":"https://static001.geekbang.org/account/avatar/00/14/1e/8c/450fe5cb.jpg","comment_is_top":false,"comment_ctime":1577895337,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"100362143145","product_id":100039001,"comment_content":"目前在维护和开发营销插件系统，对于产品思维算是有一点感悟吧。<br>营销插件多种多样，每个插件都有一些共性的地方，也有特性的地方。插件于插件之间还有叠加互斥关系，比如说有了满减送也可以使用优惠券等等。不同的产品定义不同的插件规则，后来就出现了在同一个点上，不同插件的理解都不一一致，商家理解使用费劲。还有针对某个插件定义一些奇怪的功能，极少商家在用，但是还不允许去掉这个功能。这就为后来的优化产生了极大的阻碍，设计和开发的人都走了，奇怪的功能还涉及好几个团队，尝试过沟通，无结果，保持现状。<br>还有在开发新功能的时候，产品拍脑袋说这个手机壳的颜色要随心情变化，你说这能给做吗。<br>技术人员一定要有产品思维，代码是你写的也是你维护，某个功能是不是屎坑一定要三思，产品拍脑袋，技术不能拍脑袋，最后掉的是自己的头发，走的也是自己。一定要把风险都给他讲明白，我们不生气，我们讲道理！！！","like_count":24,"discussions":[{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588018,"discussion_content":"最喜欢这样的评论了，说出自己的苦，说出自己思路，稳","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663471696,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1612910,"avatar":"https://static001.geekbang.org/account/avatar/00/18/9c/6e/01b4d5d2.jpg","nickname":"liupan","note":"","ucode":"C6C7C48BCCAE12","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337489,"discussion_content":"技术人一定要有产品思维挺好的，否则就是一直和产品在扯皮了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608947138,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1117318,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0c/86/8e52afb8.jpg","nickname":"花花大脸猫","note":"","ucode":"8ABDB3F7F4FB0F","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278483,"discussion_content":"哈哈，深有感触，同道中人。。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591192074,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167195,"user_name":"一壶浊酒","can_delete":false,"product_type":"c1","uid":1145530,"ip_address":"","ucode":"5D90F8F8121BBE","user_header":"https://static001.geekbang.org/account/avatar/00/11/7a/ba/8545f2d7.jpg","comment_is_top":false,"comment_ctime":1577713227,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"91772026443","product_id":100039001,"comment_content":"我觉得技术人需要一些产品的思维，这样即使在做已经设计好的产品的时候，也能提出一些不同的看法和见解，而不是一味的做一个执行者，别人说啥就做啥，而且框架的设计我觉得也是一个产品，需要我们技术人自己去推敲去打磨。","like_count":22,"discussions":[{"author":{"id":1438860,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f4/8c/0866b228.jpg","nickname":"子房","note":"","ucode":"CB05938C248BB3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338998,"discussion_content":"赞同","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609471758,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169188,"user_name":"Lyre","can_delete":false,"product_type":"c1","uid":1275759,"ip_address":"","ucode":"61AB16508AFFDA","user_header":"https://static001.geekbang.org/account/avatar/00/13/77/6f/454951d2.jpg","comment_is_top":false,"comment_ctime":1578288351,"is_pvip":false,"replies":[{"id":"65744","content":"是的，先做设计，后写代码。先做顶层设计，再做细分设计。","user_name":"作者回复","comment_id":169188,"uid":"1190123","ip_address":"","utype":1,"ctime":1578379772,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"66002797791","product_id":100039001,"comment_content":"复杂的系统设计，首先应该梳理出功能点，整理架构设计，画出架构设计图，有了总体的规划，做下去才更顺畅。对吗老师<br>","like_count":15,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480450,"discussion_content":"是的，先做设计，后写代码。先做顶层设计，再做细分设计。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578379772,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167144,"user_name":"李小四","can_delete":false,"product_type":"c1","uid":1112747,"ip_address":"","ucode":"2A766BE16B276B","user_header":"https://static001.geekbang.org/account/avatar/00/10/fa/ab/0d39e745.jpg","comment_is_top":false,"comment_ctime":1577698272,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"57412273120","product_id":100039001,"comment_content":"设计模式_25:<br><br>1. 做事要避免极端，最小原型和场景，是为了避免完美主义，永远开不了头的极端。但另一方面，如果是复杂的系统，避免不了地要花很多时间去思考系统设计的问题，要有思考和记录，这样是为了避免另一个极端，过于简单的架构开发复杂系统，最终导致改不动了。<br><br>2. 如果问题是“是否应该有产品意识”，答案是不言而喻的。而且，于是技术能力强的技术人员，对于产品意识的需求就越是迫切，在真实的市场竞争中，用户只会接触到产品，技术可能会成为产品的竞争优势，也可能不会，但技术人员了解产品思维，这样能够更全面地了解自己做的事情，在真实的用户场景中，在发挥着怎样的价值；另外，在做了很久的技术后，我们可能有欲望把自己的一些idea转化成产品，并最终推向市场，面向用户。做成这样的事情，会有更强烈的成就感，离创业也更近了一部。","like_count":14,"discussions":[{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588019,"discussion_content":"技术人要有产品思维是为自己的职业生涯铺路","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663471801,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166971,"user_name":"北天魔狼","can_delete":false,"product_type":"c1","uid":1188144,"ip_address":"","ucode":"C22623ECEB8DBA","user_header":"https://static001.geekbang.org/account/avatar/00/12/21/30/8ecce1e1.jpg","comment_is_top":false,"comment_ctime":1577658738,"is_pvip":true,"replies":[{"id":"64818","content":"39 40讲 会给出完善的代码","user_name":"作者回复","comment_id":166971,"uid":"1190123","ip_address":"","utype":1,"ctime":1577665724,"user_name_real":"王争"}],"discussion_count":4,"race_medal":0,"score":"35937397106","product_id":100039001,"comment_content":"一直没有做过关于统计和监控的项目，希望老师可以出一个小的MVP🙏🙏🙏","like_count":8,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479695,"discussion_content":"39 40讲 会给出完善的代码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577665724,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1307611,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f3/db/5b7a8fd8.jpg","nickname":"筱乐乐哦","note":"","ucode":"AE92539F0419C3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":110545,"discussion_content":"Spring Boot Actuator + Prometheus项目，挺好的监控体系","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1577724071,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1188144,"avatar":"https://static001.geekbang.org/account/avatar/00/12/21/30/8ecce1e1.jpg","nickname":"北天魔狼","note":"","ucode":"C22623ECEB8DBA","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1307611,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f3/db/5b7a8fd8.jpg","nickname":"筱乐乐哦","note":"","ucode":"AE92539F0419C3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":110596,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577744862,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":110545,"ip_address":""},"score":110596,"extra":""}]},{"author":{"id":1188144,"avatar":"https://static001.geekbang.org/account/avatar/00/12/21/30/8ecce1e1.jpg","nickname":"北天魔狼","note":"","ucode":"C22623ECEB8DBA","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":109046,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577666046,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167214,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1577718410,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31642489482","product_id":100039001,"comment_content":"手机听读终觉浅，归来PC撸代码.。<br>GET完。代码：https:&#47;&#47;gitee.com&#47;MondayLiu&#47;geek-design.git","like_count":7},{"had_liked":false,"id":167266,"user_name":"小畅","can_delete":false,"product_type":"c1","uid":1322880,"ip_address":"","ucode":"D031CC07CD564E","user_header":"","comment_is_top":false,"comment_ctime":1577754125,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"27347557901","product_id":100039001,"comment_content":"打卡似懂非懂","like_count":6,"discussions":[{"author":{"id":1322880,"avatar":"","nickname":"小畅","note":"","ucode":"D031CC07CD564E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":395335,"discussion_content":"这次又看懂了些","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1632283989,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166953,"user_name":"Flynn","can_delete":false,"product_type":"c1","uid":1174517,"ip_address":"","ucode":"293321CC198C0C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/aY5QA2COoiaGy7P3MJzUIam3GG94GpA0fTx8yJN3OyBiaP3eNL65ia99H4RbaqC4fypg7JhBOujlJs7bBTdJKdMUQ/132","comment_is_top":false,"comment_ctime":1577636751,"is_pvip":false,"replies":[{"id":"64819","content":"有单元测试的讲解","user_name":"作者回复","comment_id":166953,"uid":"1190123","ip_address":"","utype":1,"ctime":1577665751,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"23052473231","product_id":100039001,"comment_content":"老师，后面有TDD相关的内容讲解和练习么","like_count":5,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479691,"discussion_content":"有单元测试的讲解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577665751,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":251977,"user_name":"Ilearning99","can_delete":false,"product_type":"c1","uid":1989119,"ip_address":"","ucode":"7901836A2C47EF","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/qOdqzmC507sibL6sichNSDaVmyoMKibEIqHWpic4CftgOQnoA3QKeRPwic9j1Ha8MLtzzqzfSRavR9GWMju09SMADUg/132","comment_is_top":false,"comment_ctime":1602033847,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18781903031","product_id":100039001,"comment_content":"我发现很多时候，我想问题都很复杂，快到deadline的时候就会实现一个非常简化的版本","like_count":4},{"had_liked":false,"id":167070,"user_name":"桂城老托尼","can_delete":false,"product_type":"c1","uid":1306032,"ip_address":"","ucode":"139E4B8EE88B79","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcxSpNMqwqyicMvdOSr9ic0p1ABiauHnv7g7YQVSJuoHPoQbYDu3YzdpgmSAk2KricUBQ5yibWBWIq75w/132","comment_is_top":false,"comment_ctime":1577684226,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14462586114","product_id":100039001,"comment_content":"感谢争哥分享，先看了第一段过来作答，完了再回到文章验证想法。<br>统计接口各维度信息的框架设计思路如下，<br>1，确认框架职责，框架的用例。采集原始数据(标准埋点日志)，加工原始数据(时间窗口内)，提供外围消费(适配各种style)<br>2. 细分每一职责，采集原始数据，围绕框架提供能力，确定原始数据标准，甚至原始数据标准的定义也开放给业务系统，解析关键信息的规则由业务系统自己把控。框架负责制定规则的枚举，和规则解析。<br>3. 加工原始数据，其实就是使用规则对原始数据流进行解析和统计，这里可以给出默认时间窗口和更新周期，业务系统可配置变更。<br>4. 提供外围系统消费，框架给出指标数据，自己默认展示样式，自定义样式留好扩展，交给业务系统自己扩展，框架也可以管控起来，形成类似于“主题市场”的东西。<br>总结下来，就是确定职责边界，高内聚框架职责，低耦合业务系统，对修改关闭，对扩展开放。基于这些原则，再往上走就是各种xx设计模式了，这时候就是水到渠成的事儿了。 <br>-----回去再看下文章验证下猜想，不被打脸才好 。","like_count":3},{"had_liked":false,"id":166986,"user_name":"javaadu","can_delete":false,"product_type":"c1","uid":1000519,"ip_address":"","ucode":"8C0B140F1C8992","user_header":"https://static001.geekbang.org/account/avatar/00/0f/44/47/3ddb94d0.jpg","comment_is_top":false,"comment_ctime":1577664540,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"14462566428","product_id":100039001,"comment_content":"还没有看文章的方案，先来留个言：<br>运行时：框架的接口是注解；通过mq将统计的数据发出到实时计算引擎例如flink，编写udf统计各种特征数据<br><br>管理时：核心是数据存储和查询模块；渠道接入放在独立的模块","like_count":3},{"had_liked":false,"id":247416,"user_name":"郑大钱","can_delete":false,"product_type":"c1","uid":1503067,"ip_address":"","ucode":"114CF48056880E","user_header":"https://static001.geekbang.org/account/avatar/00/16/ef/5b/ff28088f.jpg","comment_is_top":false,"comment_ctime":1599703931,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10189638523","product_id":100039001,"comment_content":"高级工程师会从易用、扩展、性能、稳定等方面设计架构，这对我来说是很难的。但我也想写出牛逼的代码，怎么办？<br>最小原型是我的最佳实践。<br>先聚焦于实现一个单一的功能点，就算实现的代码毫无设计可言，但至少要先让它跑起来。谈易用、谈扩展、谈性能、谈健壮，具体代码比抽象概念更容易。<br>一定要给你的代码挤出重构的时间，哪怕只有一句代码。对我来说，重构相当于在复盘，这是你学到的设计模式落地的时候，也是真正成长的时候。","like_count":2,"discussions":[{"author":{"id":1045577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f4/49/2add4f6b.jpg","nickname":"北极的大企鹅","note":"","ucode":"8935346D08E109","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376207,"discussion_content":"看到你的网名还是真名...就感觉很好笑啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622015824,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":177636,"user_name":"努力呼吸","can_delete":false,"product_type":"c1","uid":1718303,"ip_address":"","ucode":"52941DD7A01BBA","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKDfO7wKibzpw4YsoqLRCHUKxX4rYRUh7m7RCdOwzWVaN9QLlhcU5ho3w2Qcpib1O69YPj65ib07xQBQ/132","comment_is_top":false,"comment_ctime":1581439236,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10171373828","product_id":100039001,"comment_content":"个人简单实现的无侵入代码 https:&#47;&#47;github.com&#47;ghaoxiangzZ&#47;design-pattern-code&#47;tree&#47;master&#47;src&#47;main&#47;java&#47;com&#47;ghaoxiang&#47;lesson&#47;twentyfive","like_count":2},{"had_liked":false,"id":174882,"user_name":"javaadu","can_delete":false,"product_type":"c1","uid":1000519,"ip_address":"","ucode":"8C0B140F1C8992","user_header":"https://static001.geekbang.org/account/avatar/00/0f/44/47/3ddb94d0.jpg","comment_is_top":false,"comment_ctime":1580446147,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10170380739","product_id":100039001,"comment_content":"问题1：要重视设计，但是可以采取不同的方法，有的人喜欢用本文中的方法——先写一个简单的原型，在写的过程中理清楚对问题的理解和设计；也有的人喜欢将设计作为一个单独的流程，先用一些抽象的线框图推到清楚再动手。我的观点是，两者不冲突，可以两者一起使用，如果是团队项目，建议先各自有个深度的思考然后再进行碰撞合并，应该可以产出大方向没问题的设计","like_count":2},{"had_liked":false,"id":172372,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1015754,"ip_address":"","ucode":"00DF2FEC58D2E6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","comment_is_top":false,"comment_ctime":1579162765,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10169097357","product_id":100039001,"comment_content":"在设计一个系统的时候，不需要也不能100%都考虑到了才开始，要先设计一个能简单实现的系统，先编码实现了这个简单系统，然后逐步迭代完善；在这个过程中能用图示画出来的要画出来，图示能给人以十分直观的方式；在学习其他的课程的过程中，通过画系统的流程图就能让自己可以很清晰地了解系统的执行流程，尤其是自己总结流程图很重要！并且当时间长了来回顾复习的时候，流程图更直观，更容易复习","like_count":2},{"had_liked":false,"id":167041,"user_name":"。","can_delete":false,"product_type":"c1","uid":1222200,"ip_address":"","ucode":"75B163F01F20F3","user_header":"https://static001.geekbang.org/account/avatar/00/12/a6/38/55483b8c.jpg","comment_is_top":false,"comment_ctime":1577676349,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10167610941","product_id":100039001,"comment_content":"像这种统计频次的功能，是通过集成框架去实现好，还是说通过mq由消费服务去实现好","like_count":2,"discussions":[{"author":{"id":1306032,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcxSpNMqwqyicMvdOSr9ic0p1ABiauHnv7g7YQVSJuoHPoQbYDu3YzdpgmSAk2KricUBQ5yibWBWIq75w/132","nickname":"桂城老托尼","note":"","ucode":"139E4B8EE88B79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":109932,"discussion_content":"这里说的应该只是举个例子，真实场景应该有很多实现套路，但底层设计原则比较类似，看产品能做多成熟了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1577714899,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166997,"user_name":"再见孙悟空","can_delete":false,"product_type":"c1","uid":1025518,"ip_address":"","ucode":"57E12A2F9CD915","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a5/ee/6bbac848.jpg","comment_is_top":false,"comment_ctime":1577666720,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10167601312","product_id":100039001,"comment_content":"使用线框图，采用最小原型模式，先做出一个模型，画出模型图，然后再迭代优化，使抽象的东西变得看得见摸得着，这确实是一个好方法，实际项目中也不知不觉用到了这种思想，做非业务类的需求如此，业务类的也一样。还有留言里说的用户故事也是很不错的方法，通俗点就是技术要有产品的思维，站在使用者的角度看问题。","like_count":2},{"had_liked":false,"id":207064,"user_name":"Albert","can_delete":false,"product_type":"c1","uid":1374620,"ip_address":"","ucode":"AC04CD1BF1F8E5","user_header":"https://static001.geekbang.org/account/avatar/00/14/f9/9c/7c959e68.jpg","comment_is_top":false,"comment_ctime":1587001775,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5881969071","product_id":100039001,"comment_content":"对于框架的设计还可以站在框架使用者的角度去看怎么用得爽，怎么用比较合适，然后做针对性设计，也可以说是针对用户设计","like_count":1},{"had_liked":false,"id":202330,"user_name":"波波","can_delete":false,"product_type":"c1","uid":1034120,"ip_address":"","ucode":"F63725D3416CC5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c7/88/a2e42dc8.jpg","comment_is_top":false,"comment_ctime":1585969162,"is_pvip":false,"replies":[{"id":"88031","content":"好像这是两个概念啊，不用减啊","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1596113505,"ip_address":"","comment_id":202330,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5880936458","product_id":100039001,"comment_content":"老师，计算最大响应时间max应该是 响应时间减去请求时间吧，为什么代码中只用到了响应时间呢？","like_count":1,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490558,"discussion_content":"好像这是两个概念啊，不用减啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596113505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169962,"user_name":"睁眼看世界","can_delete":false,"product_type":"c1","uid":1206388,"ip_address":"","ucode":"F94CF34BC5B2AC","user_header":"https://static001.geekbang.org/account/avatar/00/12/68/74/461b202d.jpg","comment_is_top":false,"comment_ctime":1578484358,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5873451654","product_id":100039001,"comment_content":"   对于复杂的业务系统，我倾向于先构思，用相关画图软件如processOn画出来流程图，再列出一个一个功能点，先面向过程实现功能再调整打磨完善代码。<br>   技术人必须得有产品思维，懂得从用户的角度出发，才能不断打磨自身代码、程序以及产品。不然一切都是空中楼阁，再好的程序也是毫无意义的。","like_count":1},{"had_liked":false,"id":168636,"user_name":"落叶飞逝的恋","can_delete":false,"product_type":"c1","uid":1046429,"ip_address":"","ucode":"F9A95DB28BCF1E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/9d/be04b331.jpg","comment_is_top":false,"comment_ctime":1578128776,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5873096072","product_id":100039001,"comment_content":"课堂讨论<br>第一题：复杂系统简单化处理，先罗列出必须要实现的功能模块，后面不重要的再后期迭代<br>第二题：其实代码只是一种表现手段，只有自己真正了解产品，才能更好的发挥主观能动性","like_count":1},{"had_liked":false,"id":168276,"user_name":"传说中的成大大","can_delete":false,"product_type":"c1","uid":1236766,"ip_address":"","ucode":"103543D6E706BF","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","comment_is_top":false,"comment_ctime":1578040720,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5873008016","product_id":100039001,"comment_content":"1. 最最最最最最.........................最重要的一点 那就是和产品方沟通清楚它的需求，多和产品沟通 这是我最近与一个做过主策的策划合作过程中最大的收获，一般跟他合作的时候 他都会问我这样做好不好，程序容不容易实现，在跟我沟通交流的过程中 我也把他的需求 理解清楚了，最后才开策划案<br>2. 我觉得技术人还是需要有一定的产品思维比较好，不然遇到一些稍微古板或者能力欠缺的产品 可能会把你坑太平洋里去(这也是我最近一个月工作遇到的坑，不然我咋个会落下这么多课程,还没学T_T)","like_count":1},{"had_liked":false,"id":167170,"user_name":"一名小学生","can_delete":false,"product_type":"c1","uid":1137292,"ip_address":"","ucode":"5C73082E6B6370","user_header":"https://static001.geekbang.org/account/avatar/00/11/5a/8c/1fec5fa2.jpg","comment_is_top":false,"comment_ctime":1577706281,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5872673577","product_id":100039001,"comment_content":"最小原型是很棒的方法，跨出第一步就成功了一半<br>","like_count":1},{"had_liked":false,"id":350041,"user_name":"谁都会变","can_delete":false,"product_type":"c1","uid":1195017,"ip_address":"","ucode":"9965748F7EBB57","user_header":"https://static001.geekbang.org/account/avatar/00/12/3c/09/b7f0eac6.jpg","comment_is_top":false,"comment_ctime":1656514788,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1656514788","product_id":100039001,"comment_content":"数据一直放Map里会不会有问题，后续优化是不是要放到数据库","like_count":0},{"had_liked":false,"id":345881,"user_name":"郑思雨","can_delete":false,"product_type":"c1","uid":1474579,"ip_address":"","ucode":"F1F4B08FC94E7D","user_header":"https://static001.geekbang.org/account/avatar/00/16/80/13/df2a0ced.jpg","comment_is_top":false,"comment_ctime":1652672994,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1652672994","product_id":100039001,"comment_content":"1、在有限时间内尽可能的在技术设计上多付出精力，首先抽取出需求中的主线流程，设计上优先满足主线流程，一些边界情况的处理后续有时间可以慢慢迭代进去。这里就可以参考ARGNI原则，系统需要迭代过程，先设计出MVP版本满足需求才是最重要的。当然也分场景，如果是容错性非常低的业务场景，比如资金相关的，那么在初期，就要尽可能的考虑清楚，最起码一些运维的功能要提前设计；<br>2、技术培养产品思维是非常有必要且重要的，如果只是根据需求做开发，何谈业务积累呢？并且从某种程度讲，开发甚至比产品还要了解系统，有些需求产品可能更多的是考量眼前的场景，但是会忽略掉是否在其他方向存在不兼容或者逻辑不能自洽的情况，这时，如果开发能及时提出，那么问题产生的可能性也会大大降低。另一方面，技术拥有产品思维，会更多的考虑向后兼容，这样在技术设计上更加注重精益求精。","like_count":0},{"had_liked":false,"id":343463,"user_name":"恬毅","can_delete":false,"product_type":"c1","uid":1015240,"ip_address":"","ucode":"914ED16F3BE714","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/c8/e4727683.jpg","comment_is_top":false,"comment_ctime":1650861847,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650861847","product_id":100039001,"comment_content":"时间管理老师叶武滨说过：烂开始，好结束","like_count":0},{"had_liked":false,"id":303357,"user_name":"昵称C","can_delete":false,"product_type":"c1","uid":1234963,"ip_address":"","ucode":"1BB2D537942DC2","user_header":"https://static001.geekbang.org/account/avatar/00/12/d8/13/082013bc.jpg","comment_is_top":false,"comment_ctime":1626749480,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626749480","product_id":100039001,"comment_content":"讨论一：<br>时机工作中，自己梳理出初步方案后(流程图&#47;架构图)，可以找同事一块进行讨论，头脑风暴之后，再做完善。根据复杂度不同和当前完善程度可以重复上述操作。<br>讨论二：<br>程序员具有一定的产品思维是必要的，程序员做出来的东西必定是具有一定功能的可应用的产品，本身就要从产品设计角度去思考它的功能闭环、易用性和扩展性。","like_count":0},{"had_liked":false,"id":301339,"user_name":"小帅","can_delete":false,"product_type":"c1","uid":1239663,"ip_address":"","ucode":"4129A7E9427FFC","user_header":"https://static001.geekbang.org/account/avatar/00/12/ea/6f/09de5f65.jpg","comment_is_top":false,"comment_ctime":1625639386,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625639386","product_id":100039001,"comment_content":"这篇是干货！！","like_count":0},{"had_liked":false,"id":300063,"user_name":"陆离","can_delete":false,"product_type":"c1","uid":1483932,"ip_address":"","ucode":"2C8C206CE36A81","user_header":"https://static001.geekbang.org/account/avatar/00/16/a4/9c/b32ed9e9.jpg","comment_is_top":false,"comment_ctime":1624969629,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1624969629","product_id":100039001,"comment_content":"前40讲都值得多读几遍，不亚于去啃一本砖头书了","like_count":0},{"had_liked":false,"id":294538,"user_name":"述为","can_delete":false,"product_type":"c1","uid":1238965,"ip_address":"","ucode":"E62AEC705AEDC2","user_header":"https://static001.geekbang.org/account/avatar/00/12/e7/b5/c08b71e1.jpg","comment_is_top":false,"comment_ctime":1621992531,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621992531","product_id":100039001,"comment_content":"aop吧","like_count":0},{"had_liked":false,"id":283947,"user_name":"鸵鸟","can_delete":false,"product_type":"c1","uid":1042066,"ip_address":"","ucode":"92E710D05E4894","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e6/92/db9a2fcf.jpg","comment_is_top":false,"comment_ctime":1615992284,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615992284","product_id":100039001,"comment_content":"产品能力某种意义上是讲好一个故事的能力和听懂一个故事的能力，技术越往后做越需要这些能力。","like_count":0},{"had_liked":false,"id":281414,"user_name":"Chloe","can_delete":false,"product_type":"c1","uid":1004953,"ip_address":"","ucode":"C4848ED5B35752","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/99/4bdadfd3.jpg","comment_is_top":false,"comment_ctime":1614742354,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614742354","product_id":100039001,"comment_content":"echo back to 老师讲的“易用性”，好用又简单的设计很重要；同时全面友好的文档也体现了你对使用你的通用框架的用户的一种欢迎态度。<br>这个也讲到我的心里去了 “万事开头难，所以，先迈出第一步很重要。”， 明知道一口吃不成胖子，但是还是觉得要开始的精彩，所以迟迟没有迈出第一步。","like_count":0},{"had_liked":false,"id":272922,"user_name":"Gabriel","can_delete":false,"product_type":"c1","uid":1437358,"ip_address":"","ucode":"714772A93E93DC","user_header":"https://static001.geekbang.org/account/avatar/00/15/ee/ae/855b7e6e.jpg","comment_is_top":false,"comment_ctime":1610355667,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610355667","product_id":100039001,"comment_content":"还是得多看看别人优秀的代码；代码写的好不好，除了对自身代码review，还要得多学习。<br>就像这个系统，其实很简单。但是如果给自己写，估计会写的乱起八糟。<br>代码的解耦，其实是在思考公能怎么实现的时候，然后在看看哪些代码该分层的分层，该解耦的解耦。<br>","like_count":0},{"had_liked":false,"id":263324,"user_name":"淤白","can_delete":false,"product_type":"c1","uid":1206503,"ip_address":"","ucode":"D1E65DC40DAF68","user_header":"https://static001.geekbang.org/account/avatar/00/12/68/e7/ee47d0e2.jpg","comment_is_top":false,"comment_ctime":1606101319,"is_pvip":false,"replies":[{"id":"96101","content":"加油","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1606700788,"ip_address":"","comment_id":263324,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1606101319","product_id":100039001,"comment_content":"打卡：用Java实现了文中案例。","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510148,"discussion_content":"加油","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606700788,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":249781,"user_name":"曾帅","can_delete":false,"product_type":"c1","uid":1234319,"ip_address":"","ucode":"322F049DA9284D","user_header":"https://static001.geekbang.org/account/avatar/00/12/d5/8f/d0874a01.jpg","comment_is_top":false,"comment_ctime":1600789015,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600789015","product_id":100039001,"comment_content":"虽然已经过了很久才来补课，但是还是说一点自己的感受。<br>对于复杂的系统，其实也可以使用上一节课说的知识点，就是借鉴，对于一些复杂的业务系统，很多都有通用的方案，我们可以多了解一下这方面的东西，对于如何开始开发和避坑都有好处。<br>至于技术人员来说，产品思维一样也是很重要的，就像易用性、容错性、扩展性其实这些都是一个好产品具有的特性。对于技术人员来说，写出来的代码也想一个产品一般，我们也要用产品的思维去评审我们的代码。","like_count":0},{"had_liked":false,"id":249669,"user_name":"David","can_delete":false,"product_type":"c1","uid":1021825,"ip_address":"","ucode":"22CBBC13FC97A9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/97/81/e1eaf621.jpg","comment_is_top":false,"comment_ctime":1600750833,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1600750833","product_id":100039001,"comment_content":"有产品思维才能是架构师 而不是码农。产品 架构 生活很多道理是相通的。成为一个有智慧的人","like_count":0},{"had_liked":false,"id":246838,"user_name":"JerryZhu","can_delete":false,"product_type":"c1","uid":1591223,"ip_address":"","ucode":"76850CD45786C1","user_header":"https://static001.geekbang.org/account/avatar/00/18/47/b7/b30472fd.jpg","comment_is_top":false,"comment_ctime":1599489560,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599489560","product_id":100039001,"comment_content":"技术人如果缺乏产品思维， 只是机械的当个螺丝钉， 永远无法写出高质量的业务代码， 只会到后面不断迭代，不断偿还技术债，业务债","like_count":0},{"had_liked":false,"id":246705,"user_name":"宇天飞","can_delete":false,"product_type":"c1","uid":1126444,"ip_address":"","ucode":"3FB37D1E2DAA61","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/2c/06375913.jpg","comment_is_top":false,"comment_ctime":1599457493,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1599457493","product_id":100039001,"comment_content":"产品思维也很重要，把自己写的代码本身作为一个产品，已产品的特性去考虑代码的交付的发展。同时具有产品思维也可以主动产品的发展","like_count":0},{"had_liked":false,"id":235839,"user_name":"夜空咏叹调","can_delete":false,"product_type":"c1","uid":1189074,"ip_address":"","ucode":"CC9350BCF218CD","user_header":"https://static001.geekbang.org/account/avatar/00/12/24/d2/a5e272ce.jpg","comment_is_top":false,"comment_ctime":1595217124,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595217124","product_id":100039001,"comment_content":"对于设计一个复杂系统，由于要思考的场景多，特殊情况多，因此很难一次就把所有情况考虑到，因此不应该把所有情况考虑到，而是先写一个比较简单的场景，通过这个场景，梳理整个系统的运作流程，理清思路，根据这个场景，再去设计相应的模块，其实这个场景的编写就相当于一块敲门砖，让自己对整个模块功能和流程更加清晰。","like_count":0},{"had_liked":false,"id":223822,"user_name":"花花大脸猫","can_delete":false,"product_type":"c1","uid":1117318,"ip_address":"","ucode":"8ABDB3F7F4FB0F","user_header":"https://static001.geekbang.org/account/avatar/00/11/0c/86/8e52afb8.jpg","comment_is_top":false,"comment_ctime":1591191534,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1591191534","product_id":100039001,"comment_content":"1.一般都是先考虑目标群体是啥，需要解决目标群里哪些难题，基于此画些简单的线框图，把大概的业务流转模块简单切分开，然后基于业务流转模块进行具象化的场景考虑（可以参考些类似的成熟行业解决方案）。这之后可以结合uml工作画出简单的设计思路。<br>2.产品思维可能后期比技术思维要更加重要，因为技术是为产品服务的，如果技术更能了解产品的需求，贴切用户的产品角度，形成自己的产品简介，那样的话与产品经理之间的合作会更加的如鱼得水，而不是单方面的接收产品经理的转述，这样会使得双方更近一步，相向而行，那做出来的产品也会更加的优秀。","like_count":0},{"had_liked":false,"id":219855,"user_name":"王先森","can_delete":false,"product_type":"c1","uid":1022267,"ip_address":"","ucode":"1AF1A395107479","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/3b/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1590110949,"is_pvip":false,"replies":[{"id":"86622","content":"java spring可以放到切面中进行~","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1594783463,"ip_address":"","comment_id":219855,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1590110949","product_id":100039001,"comment_content":"案例统计时间时对业务代码是侵入式,针对php语言是可以有定时脚本去统计,大家还有什么其他的方式么？","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495965,"discussion_content":"java spring可以放到切面中进行~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594783463,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":219278,"user_name":"师哥","can_delete":false,"product_type":"c1","uid":1333376,"ip_address":"","ucode":"A86CD1661D370F","user_header":"https://static001.geekbang.org/account/avatar/00/14/58/80/c9e232b6.jpg","comment_is_top":false,"comment_ctime":1589982861,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589982861","product_id":100039001,"comment_content":" 技术人很应该懂产品，这样技术人在设计系统的时候能把握方向型问题。","like_count":0},{"had_liked":false,"id":216194,"user_name":"Aliliin","can_delete":false,"product_type":"c1","uid":1025239,"ip_address":"","ucode":"61F9A09BB6650F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/d7/5d2bfaa7.jpg","comment_is_top":false,"comment_ctime":1589203896,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589203896","product_id":100039001,"comment_content":"对于只会一门PHP语言的我来说，文稿中的代码，确实看不懂。","like_count":0},{"had_liked":false,"id":211548,"user_name":"worthto","can_delete":false,"product_type":"c1","uid":1387712,"ip_address":"","ucode":"41D7ABBBD2E7FF","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/N6yjnrLnMW4XVSkBr3f0N3F962l35b5j0kib9VSlAqqbf6iaoCPicL1WnJ9KjgT4egQ7A2G0Zx3OayaK4yuoZrUVA/132","comment_is_top":false,"comment_ctime":1587981264,"is_pvip":false,"replies":[{"id":"78751","content":"😂 这不属于专栏学习的重点","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1588042038,"ip_address":"","comment_id":211548,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1587981264","product_id":100039001,"comment_content":"Metrics 类的线程是一个单线程的模型，如果线程池使用多个线程，老师能否帮我们设计一款支持多线程并发的统计模型。","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493294,"discussion_content":"😂 这不属于专栏学习的重点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588042038,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208880,"user_name":"冬渐暖","can_delete":false,"product_type":"c1","uid":1586800,"ip_address":"","ucode":"907E41AAE9A36C","user_header":"https://static001.geekbang.org/account/avatar/00/18/36/70/00122b24.jpg","comment_is_top":false,"comment_ctime":1587457125,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587457125","product_id":100039001,"comment_content":"针对非业务的通用框架开发，如何做需求分析和设计？<br><br>1.把需求按功能拆分。一个功能拆成一个点。比如接口响应时间拆成一个功能、调用次数拆<br>2.将各个功能慢慢拆细，难度大的可以先不考虑性能之类的问题，之后再来改。比如如果是对系统业务没关系的，就用Redis存。有关系数据小就用mysql，庞大就用MongoDB。重复这个步骤，直至不能再拆，其实这个就是原子性。<br>3.先做好功能，再考虑效率之类的东西。注意的有性能高、耦合度低、拓展强、错了会不会影响主流程（搞不懂，一般都是一步错，步步错。如果真的无关的，那就新开个线程来跑）<br>","like_count":0},{"had_liked":false,"id":198121,"user_name":"和你一起搬砖的胡大爷","can_delete":false,"product_type":"c1","uid":1008587,"ip_address":"","ucode":"54607F4E17917A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/cb/7c004188.jpg","comment_is_top":false,"comment_ctime":1585410690,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585410690","product_id":100039001,"comment_content":"现在产品经理的门槛好低，啥事干不好就去做产品。产品经理思维还真不一定比得上码农<br>","like_count":0},{"had_liked":false,"id":186107,"user_name":"考休","can_delete":false,"product_type":"c1","uid":1053955,"ip_address":"","ucode":"968DFC00D6D0CF","user_header":"https://static001.geekbang.org/account/avatar/00/10/15/03/c0fe1dbf.jpg","comment_is_top":false,"comment_ctime":1583759009,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583759009","product_id":100039001,"comment_content":"技术人员当然需要有产品思维，拥有良好的产品思维，将有助于技术方案的设计甚至是架构上的优化。","like_count":0},{"had_liked":false,"id":185342,"user_name":"zmysang","can_delete":false,"product_type":"c1","uid":1642663,"ip_address":"","ucode":"8A98057E7819DD","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/tjhOILHBAmlx6YiaTZJzqzxn1uyB6XpdvGDIZhBn127TYEcoLLzxRiaKvtVd3HllQqPx7cqf2YmibyBUgGGGJPDkw/132","comment_is_top":false,"comment_ctime":1583564532,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583564532","product_id":100039001,"comment_content":"对于比较复杂的架构设计，可以先不用考虑到每个功能点的逻辑细节。先有一个整体的模块划分，然后再逐步去细化。<br>可以借鉴最小原型和画系统设计图的思想，并且分析每个模块分别需要具有的功能性需求和非功能性需求。这里非功能性需求可能会比较容易被忽略。<br>做技术的人应该要具备产品能力。这样可以帮助自己更加细化用户故事，考虑的更全面。","like_count":0},{"had_liked":false,"id":182132,"user_name":"小文同学","can_delete":false,"product_type":"c1","uid":1001893,"ip_address":"","ucode":"48F2AEB989C12A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/a5/e4c1c2d4.jpg","comment_is_top":false,"comment_ctime":1582715197,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582715197","product_id":100039001,"comment_content":"最近也在独立设计一点功能模块，从需求到构思到产出是一件不容易的事情。<br><br>程序应该是我们的作品，一个作品就会有优劣之分，一个有品位有产品意识的程序员不会让自己的作品一塌糊涂的。","like_count":0},{"had_liked":false,"id":182019,"user_name":"Heaven","can_delete":false,"product_type":"c1","uid":1694207,"ip_address":"","ucode":"FA33FBCC66C911","user_header":"https://static001.geekbang.org/account/avatar/00/19/d9/ff/b23018a6.jpg","comment_is_top":false,"comment_ctime":1582693378,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582693378","product_id":100039001,"comment_content":"首先对于问题1,我一般是开发比较通用的系统的时候，会将自己带入使用人员，也就是使用这个框架的开发人员的角度去思考，思考它可能进行什么样的扩展，并且给它留有相对应的接口方面，同样自己开发的时候,也使用这个接口，最后通过依赖注入的方式,来融入到自己的产品,带入客户的思维很重要<br>对于问题2,开发人员理所当然的需要具有一些产品思维，但是现在的互联网公司,他们的产品线都非常紧的情况下,我们开发人员想要对整个产品有一个大而且深的理解，是需要浪费一定时间的.而实际上的开发的工作任务很重,基本是不会给我们留有这么多的时间的，这就需要我们从其他方面去弥补，比如说提高自己的产品思维，让我们首先接触到这个产品的时候，自己就去脑补出产品接下来的发展,用户的使用,这就需要大量的开发经验了<br>还有就是,希望老师能讲一讲线框图如何去画,因为一直都是见到别人给的线框图","like_count":0},{"had_liked":false,"id":180338,"user_name":"M","can_delete":false,"product_type":"c1","uid":1810576,"ip_address":"","ucode":"06F26E1D62E9C9","user_header":"https://wx.qlogo.cn/mmopen/vi_32/eLNeJNaEkwGSK7xvtamMibVLMy2MpbIqX3iaEhT7JtSnTRMRTwZ2j4HX7WAapiashbiaBDVriaXKSP0Oeic6ZAEVEXag/132","comment_is_top":false,"comment_ctime":1582259624,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582259624","product_id":100039001,"comment_content":"老师，这两节课有完整的代码么，","like_count":0},{"had_liked":false,"id":180315,"user_name":"DFighting","can_delete":false,"product_type":"c1","uid":1233193,"ip_address":"","ucode":"F3BA2426FF8582","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/29/1b1234ed.jpg","comment_is_top":false,"comment_ctime":1582255499,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1582255499","product_id":100039001,"comment_content":"业务产品为客户提供服务，更关注业务逻辑；框架和一些底层的技术研究与开发，是为上一层的调用者服务的，除非是做最底层的系统开发，不然大多数框架的设计与开发都应该具有一定的产品思维，不然很难维持某个框架或技术组件的不断更新与迭代","like_count":0},{"had_liked":false,"id":180021,"user_name":"不记年","can_delete":false,"product_type":"c1","uid":1045945,"ip_address":"","ucode":"287E40C68356DC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f5/b9/888fe350.jpg","comment_is_top":false,"comment_ctime":1582166915,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582166915","product_id":100039001,"comment_content":"技术人应该具备产品思维，只有明确你写的代码，你开发的系统是为谁服务的，解决了什么问题，才能够在系统设计，技术选型，编写业务代码时心里有数","like_count":0},{"had_liked":false,"id":171234,"user_name":"uranusleon","can_delete":false,"product_type":"c1","uid":1186044,"ip_address":"","ucode":"3CD5222E590A92","user_header":"https://static001.geekbang.org/account/avatar/00/12/18/fc/a0f8a88d.jpg","comment_is_top":false,"comment_ctime":1578884909,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578884909","product_id":100039001,"comment_content":"25：对于负责需求的开发，要用产品思维，首先对需求进行需求设计，然后开发出原型和画出模型图，最后迭代优化。<br><br>需求设计<br>\t1. 分为功能性需求设计和非功能性需求设计。功能性需求设计是以完成需求的基本功能进行设计；非功能需求设计是考虑功能的扩展性，通用性，性能等。<br>\t2. 具体方法可以将需求拆解，按顺序用简短的语句罗列出来，清晰有条理。<br><br>初步开发设计：在复杂需求开发时，不方便入手，有如下方法<br>\t1. 可以根据Prototype(最小原型)的思想，聚焦一个简单的应用场景，实现一个简单的原型。<br>\t2. 画出初步的系统设计图<br>        3. 根据原型和设计图做迭代优化。","like_count":0},{"had_liked":false,"id":171179,"user_name":"相逢是缘","can_delete":false,"product_type":"c1","uid":1060730,"ip_address":"","ucode":"CB299F53A95654","user_header":"https://static001.geekbang.org/account/avatar/00/10/2f/7a/ab6c811c.jpg","comment_is_top":false,"comment_ctime":1578878050,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578878050","product_id":100039001,"comment_content":"打卡<br>针对非业务通用框架的需求分析：<br>一、功能性需求分析<br>1、最好把信息整理成短的、罗列比较规整、分门别类的信息。<br>2、挖掘隐藏的需求<br>二、非功能需求分析<br>易用性、性能、扩展性、容错性、通用性<br>框架设计：<br>聚焦一个简单应用的场景、实现一个最小的原型，有一个看得见，摸得着的东西，之后进行迭代和优化。","like_count":0},{"had_liked":false,"id":170799,"user_name":"迷羊","can_delete":false,"product_type":"c1","uid":1286251,"ip_address":"","ucode":"85AF8CED3436C8","user_header":"https://static001.geekbang.org/account/avatar/00/13/a0/6b/0a21b2b8.jpg","comment_is_top":false,"comment_ctime":1578726306,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578726306","product_id":100039001,"comment_content":"产品能力非常重要，这样你就会知道这个产品未来会有什么需求变化，也就可以针对这些可能出现的需求提前设计好代码的可扩展性。","like_count":0},{"had_liked":false,"id":170797,"user_name":"quietwater","can_delete":false,"product_type":"c1","uid":1055029,"ip_address":"","ucode":"C25E2CD356D3F9","user_header":"https://static001.geekbang.org/account/avatar/00/10/19/35/be8372be.jpg","comment_is_top":false,"comment_ctime":1578724297,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1578724297","product_id":100039001,"comment_content":"应对复杂系统的设计实现，我今天讲到了聚焦简单场景、最小原型、画图等几个技巧，你还有什么经验可以分享给大家吗？<br>复制系统的设计和实现都是迭代出来的，很难一步到位，除非是开发过类似的系统。自上而下和自下而上是基本的思路，通常都会用到，具体因人而异。但通过一个具体的业务场景来了解系统的复杂性是绝对必要的。<br><br>今天提到的线框图、最小原型、易用性等，实际上都是产品设计方面的手段或者概念，应用到像框架这样的技术产品的设计上也非常有用。你觉得对于一个技术人来说，产品能力是否同样重要呢？技术人是否应该具备一些产品思维呢？<br>技术人不仅要具备产品思维，还有项目思维，测试思维，运维思维都是必不可少的，甚至市场思维。不要自我设限，最牛的技术人绝对是会当凌绝顶，一览众山小的。","like_count":0},{"had_liked":false,"id":170494,"user_name":"莫大-潇湘夜雨","can_delete":false,"product_type":"c1","uid":1068506,"ip_address":"","ucode":"893824ED26444D","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/da/8af6f035.jpg","comment_is_top":false,"comment_ctime":1578621427,"is_pvip":false,"replies":[{"id":"67745","content":"是的，不过这是最小原型，我也讲到了可以暂时不用考虑并发问题","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1580118749,"ip_address":"","comment_id":170494,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1578621427","product_id":100039001,"comment_content":"老师，案例选用hashmap来存储监控数据，因为涉及到并发访问， 是不是换成并发包更合适一些呢？","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480999,"discussion_content":"是的，不过这是最小原型，我也讲到了可以暂时不用考虑并发问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580118749,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1286251,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a0/6b/0a21b2b8.jpg","nickname":"迷羊","note":"","ucode":"85AF8CED3436C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129667,"discussion_content":"老师一开始已经说了先写出一个简单的最小原型，然后慢慢迭代上去，怎么简单怎么来，后期再慢慢迭代。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578725768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169601,"user_name":"不似旧日","can_delete":false,"product_type":"c1","uid":1161271,"ip_address":"","ucode":"DF4C5E3AB9570C","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/37/98991aeb.jpg","comment_is_top":false,"comment_ctime":1578386708,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578386708","product_id":100039001,"comment_content":"走马观花的看了一遍，回头有时间了再看。","like_count":0},{"had_liked":false,"id":168872,"user_name":"志振爱咋滴咋滴","can_delete":false,"product_type":"c1","uid":1237624,"ip_address":"","ucode":"E7A5049920C101","user_header":"https://static001.geekbang.org/account/avatar/00/12/e2/78/9241b7b2.jpg","comment_is_top":false,"comment_ctime":1578208014,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578208014","product_id":100039001,"comment_content":"1.在目前团队的中，我们都是以一个简单的用户故事开始，身为用户，我可以...，以便我可以...，交付的内容以验收条件为基础，不一定是详细的可靠地，只要从这一点出发，理解用户需求，了解实现目的，然后才是慢慢的优化和重构<br>2.很多时候小团队里面不一定有专业的产品经理或者需求分析师，这时候技术人员会需要直接面对客户或者需求方，那就需要一定的产品思维，去理解客户的需求，根据交互经验，技术实现周期，难度等方面去给用户提供意见和看法，而不是仅仅从可以做不可以做，想做不想做出发简单的表达意见。","like_count":0},{"had_liked":false,"id":168623,"user_name":"L🚲🐱","can_delete":false,"product_type":"c1","uid":1577856,"ip_address":"","ucode":"08A012739614DE","user_header":"https://static001.geekbang.org/account/avatar/00/18/13/80/2c9da1b1.jpg","comment_is_top":false,"comment_ctime":1578125177,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578125177","product_id":100039001,"comment_content":"技术人也需要一定的产品思维, 先实现一个原型, 然后再迭代优化, 这是现在软件开发的常见套路, 但是如果是外包的话, 很少有后续多次迭代的情况","like_count":0},{"had_liked":false,"id":168609,"user_name":"Johar","can_delete":false,"product_type":"c1","uid":1101969,"ip_address":"","ucode":"834136A6F64CDC","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/91/89123507.jpg","comment_is_top":false,"comment_ctime":1578122308,"is_pvip":false,"discussion_count":0,"race_medal":2,"score":"1578122308","product_id":100039001,"comment_content":"作为一名软件开发工程师，必须要有一定的产品设计意识，需要考虑用户的实际使用场景，怎么使用，怎么做到业务闭环。","like_count":0},{"had_liked":false,"id":168104,"user_name":"JM","can_delete":false,"product_type":"c1","uid":1737845,"ip_address":"","ucode":"5CCCD7D0811A54","user_header":"https://static001.geekbang.org/account/avatar/00/1a/84/75/e3e5072d.jpg","comment_is_top":false,"comment_ctime":1578014139,"is_pvip":false,"replies":[{"id":"65966","content":"1. 我们可以通过切面的方式，在某一个地方统一加timestamp，而不用每个接口都加timestamp<br>2. 每个接口隶属不同team是什么意思呢？","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1578491172,"ip_address":"","comment_id":168104,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1578014139","product_id":100039001,"comment_content":"这个例子里面每个接口程序块的开头和结尾都要加上timestamp，如果要统计成百上千个接口，是不是有更高效的方式呢？每个接口可能会隶属于不同的team，那这样是不是需要和多个team沟通合作，沟通协作成本很高啊。","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480137,"discussion_content":"1. 我们可以通过切面的方式，在某一个地方统一加timestamp，而不用每个接口都加timestamp\n2. 每个接口隶属不同team是什么意思呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578491172,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167905,"user_name":"李心宇🦉","can_delete":false,"product_type":"c1","uid":1208306,"ip_address":"","ucode":"C381CA80170D5B","user_header":"https://static001.geekbang.org/account/avatar/00/12/6f/f2/1f77b0bd.jpg","comment_is_top":false,"comment_ctime":1577960940,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577960940","product_id":100039001,"comment_content":"一个不太成熟的思路，一个类处理数据的保存和统计，另外一个类类似一个秒表，提供start和stop两个方法，把API的调用和响应时间写入统计类。<br><br><br>type ApiStatis struct {<br>\tStatis map[string]map[string]float64<br>\tRecord map[string][][]time.Time<br>}<br><br>type StopWatch struct {<br>\tApiName     string<br>\tTimeStarted time.Time<br>\tTimeStopped time.Time<br>\tStatis      *ApiStatis<br>}<br><br>func (s *ApiStatis) GetStopWatch(name string) *StopWatch {<br>\treturn &amp;StopWatch{ApiName: name, Statis: s}<br>}<br><br>func (w *StopWatch) Start() {<br>\tw.TimeStarted = time.Now()<br>}<br><br>func (w *StopWatch) Stop() {<br>\tw.TimeStopped = time.Now()<br>\trecord, ok := w.Statis.Record[w.ApiName]<br>\trecord = append(record, []time.Time{w.TimeStarted, w.TimeStopped})<br>\tif !ok {<br>\t\tw.Statis.Record[w.ApiName] = record<br>\t}<br>}","like_count":0},{"had_liked":false,"id":167636,"user_name":"君哥聊技术","can_delete":false,"product_type":"c1","uid":1325816,"ip_address":"","ucode":"2C9A22BCE4C79E","user_header":"https://static001.geekbang.org/account/avatar/00/14/3a/f8/c1a939e7.jpg","comment_is_top":false,"comment_ctime":1577884238,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577884238","product_id":100039001,"comment_content":"1.对于大型复杂的系统，可以先进行功能模块拆分，确定好业务边界，部署方式，模块间通信，对单个模块使用文章中的绘图方法来实现。<br>2.我觉得程序员必须具备产品思维。假如我们做的直接面向用户的系统，思考用户使用情况会对我们的设计实现有很好的指导作用。假如我们做的是提供给上游系统的服务，要考虑上游系统的情况，比如调用链，服务修改对上游造成的工作量，调用频次，故障影响等。","like_count":0},{"had_liked":false,"id":167455,"user_name":"xavier","can_delete":false,"product_type":"c1","uid":1243128,"ip_address":"","ucode":"2F7918EA37ED9F","user_header":"https://static001.geekbang.org/account/avatar/00/12/f7/f8/3c0a6854.jpg","comment_is_top":false,"comment_ctime":1577806437,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1577806437","product_id":100039001,"comment_content":"对于复杂系统，先按照功能模块划分，然后各个击破。","like_count":0,"discussions":[{"author":{"id":1326336,"avatar":"https://static001.geekbang.org/account/avatar/00/14/3d/00/e66b2fac.jpg","nickname":"大板","note":"","ucode":"BF3E8DFCA10460","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":154972,"discussion_content":"名字有意思。深度学习的初始化方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580205170,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167402,"user_name":"Geek_342489","can_delete":false,"product_type":"c1","uid":1477359,"ip_address":"","ucode":"40610664021607","user_header":"https://static001.geekbang.org/account/avatar/00/16/8a/ef/ac2937ac.jpg","comment_is_top":false,"comment_ctime":1577784498,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577784498","product_id":100039001,"comment_content":"之前看我们中心同事开发的一些监控、鉴权相关的中间件代码感觉很牛，但具体哪里牛说不上来，听了争哥的课，做到知其所以然，感觉距离自己写出让别人“感觉很牛”的代码更近了一步，感谢！","like_count":0},{"had_liked":false,"id":167384,"user_name":"satoshi","can_delete":false,"product_type":"c1","uid":1114872,"ip_address":"","ucode":"11508C95259E97","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLQcr5YD5xznNjMxltFI04NgpTWWicKD3QicBfshIEWtckXNYMicjdNfQu8w5hSTGicuxUg6sOI8yfoNw/132","comment_is_top":false,"comment_ctime":1577781568,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577781568","product_id":100039001,"comment_content":"解答了我好多的疑惑，每天都盼着有更新","like_count":0},{"had_liked":false,"id":167247,"user_name":"lmdcx","can_delete":false,"product_type":"c1","uid":1334409,"ip_address":"","ucode":"F2CDD0091ADFD7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIjRETqRjvLESLDZkNTjIiaSibtNYBaS1o8WMUicOFn3ycF3Mgh6LRJibqSBjVBjiaO2ibW0gHkafATb21A/132","comment_is_top":false,"comment_ctime":1577751587,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577751587","product_id":100039001,"comment_content":"本节理解：<br>1. 功能列表，往往对应方法签名列表，主要分为采集功能、聚合计算功能、持久化功能<br>2.聚合计算（功能列表的一部分）的功能往往在持久化的基础之上<br>3.存储部分是采集部分的结果，又常常是聚合功能的输入<br>  当然如果使用了其他同学留言说的流计算，可能这个存储相当程度上指缓存<br>4.最小原型部分当然是个好办法，我个人唯一可以补充的是，老师和大家肯定也这么做了，但是未提到的是：做最小原型时，可以记下很多的 TODO 和疑问，然后通过反复迭代修复补充改进<br>5.我个人还有一种感觉，就是每一个层面都会有核心部分，核心部分往往是稳定的，<br>  还有一些啮合部分，啮合部分往往是可扩展的，比如Spring 的视图解析，数据源适配，<br>  当然SpringBoot 也提供了StopWatch这样的功能和老师现在做的功能有部分雷同，可以对比参考，可能会对理解整个功能有很好的帮助","like_count":0},{"had_liked":false,"id":167242,"user_name":"Chen","can_delete":false,"product_type":"c1","uid":1503113,"ip_address":"","ucode":"C1128558AB5BC4","user_header":"https://static001.geekbang.org/account/avatar/00/16/ef/89/8c73a24d.jpg","comment_is_top":false,"comment_ctime":1577749020,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577749020","product_id":100039001,"comment_content":"肯定要有产品思维啊，不然怎么跟产品扯皮","like_count":0},{"had_liked":false,"id":167203,"user_name":"刘大明","can_delete":false,"product_type":"c1","uid":1035081,"ip_address":"","ucode":"83C063FBD9BF2B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cb/49/0b9ffc8e.jpg","comment_is_top":false,"comment_ctime":1577715731,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577715731","product_id":100039001,"comment_content":"没有经历过特别复杂的系统。一般工作中遇到需求，第一步是做业务分解和用户故事。将一个功能分解成一个个小任务，理清楚每个小任务之间的关联关系。任务分解清晰之后可以用tdd的方式实现一个最小原型版本，然后在这个最小原型的版本上面持续重构。<br>问题2我觉得技术肯定还是要懂产品的，毕竟产品才是公司最需要的东西，有产品能力的技术才能在很多编码和设计的时候让产品更容易扩展。","like_count":0},{"had_liked":false,"id":167192,"user_name":"DullBird","can_delete":false,"product_type":"c1","uid":1110494,"ip_address":"","ucode":"80E2FD5F9687CB","user_header":"https://static001.geekbang.org/account/avatar/00/10/f1/de/3ebcbb3f.jpg","comment_is_top":false,"comment_ctime":1577712701,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577712701","product_id":100039001,"comment_content":"问题1: <br>1.1一般会画一下用例图，标注一下优先级，然后针对核心用例，简化它，不要考虑太多个性化的东西。先实现最通用简单的一个场景。<br>1.2 流程很复杂的时候，会画流程图，泳道流程图，一方面可以很清楚查漏补缺，另一方面泳道就划分了模块。<br>问题2: 其实上面1.1，就需要程序员有产品的思维，要知道什么是业务最核心的需求，哪些个性化其实只是为了满足这个核心需求的点缀。程序员不能只关注技术，否则可能花了很多时间。但是解决了一个并不是业务痛点的情况。<br>","like_count":0},{"had_liked":false,"id":167107,"user_name":"Ken张云忠","can_delete":false,"product_type":"c1","uid":1134288,"ip_address":"","ucode":"D0BAC9FC17DE2B","user_header":"https://static001.geekbang.org/account/avatar/00/11/4e/d0/d8a5f720.jpg","comment_is_top":false,"comment_ctime":1577692725,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577692725","product_id":100039001,"comment_content":"1.应对复杂系统的设计实现，我今天讲到了聚焦简单场景、最小原型、画图等几个技巧，你还有什么经验可以分享给大家吗？<br>找个类似的系统多体验几把.<br>平时多积累各种业务背景知识.<br>有条件的可以找有经验的前辈了解业务,快速得到一个业务模型.<br>2.今天提到的线框图、最小原型、易用性等，实际上都是产品设计方面的手段或者概念，应用到像框架这样的技术产品的设计上也非常有用。你觉得对于一个技术人来说，产品能力是否同样重要呢？技术人是否应该具备一些产品思维呢？<br>产品能力对于一个技术人来说是重要的,但不是同样重要的.产品经理也是专业的活,业务深层次的战略性的思考还是得要有专业的人来干,技术人员还是该要把精力聚焦在自身的工作内容上.<br>但是技术人是该要具备一些产品思维,可以方便与业务人员进行沟通交流,可以帮助深入理解业务,可以容易理解业务架构和程序.","like_count":0},{"had_liked":false,"id":167089,"user_name":"逍遥思","can_delete":false,"product_type":"c1","uid":1015512,"ip_address":"","ucode":"340F05C786730F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7e/d8/92a98fb6.jpg","comment_is_top":false,"comment_ctime":1577689214,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577689214","product_id":100039001,"comment_content":"技术人必须具备产品思维，因为哪怕是交付的一份代码，也是一个广义上的产品","like_count":0},{"had_liked":false,"id":167067,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1577682301,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577682301","product_id":100039001,"comment_content":"1.都提了tdd怎么能少掉测试代码的编写呢。哪怕是最小原型，也要尽量区分好稳定层和变化层，然后针对变化层构建完整的测试用例。这对后续持续重构或则迭代功能都能发挥回归测试的价值。回归测试有助于进一步降低写代码时的心智负担，写好跑一跑，有问题debug调整下，而不是每一步都用意念测试。省时省心安全。<br><br>2.产品技术本就是一体两面。关于功能的易用需要产品思维，关于功能的健全需要技术背景。关于大功能的落地，无论是需求文档的编写还是代码实现的落地，都需要“干条条”的梳理和一系列“导向工具”的辅助（各种图或表格）。做业务的，兼备产品思维比深入底层的技术重要，毕竟这更有利于优质（代码、效率和功能）软件的产出。而且技术架构师和科学家也要糊口的，你个写业务的全包了，人家拿什么吃饭。（以上只是开个玩笑，但社会分工是真的重要）","like_count":0},{"had_liked":false,"id":167065,"user_name":"Kang","can_delete":false,"product_type":"c1","uid":1237655,"ip_address":"","ucode":"088A8DA0A16BDE","user_header":"https://static001.geekbang.org/account/avatar/00/12/e2/97/dfadcc92.jpg","comment_is_top":false,"comment_ctime":1577681410,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577681410","product_id":100039001,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":167059,"user_name":"Eden Ma","can_delete":false,"product_type":"c1","uid":1457408,"ip_address":"","ucode":"755312F0D154F9","user_header":"https://static001.geekbang.org/account/avatar/00/16/3d/00/7daa7403.jpg","comment_is_top":false,"comment_ctime":1577679336,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577679336","product_id":100039001,"comment_content":"我觉得拥有产品思维对一个开发者来说非常重要,不但工作中更有利于与其它岗位的人员交流,而且如果做独立开发作用也是极大的.","like_count":0},{"had_liked":false,"id":167056,"user_name":"shniu","can_delete":false,"product_type":"c1","uid":1019555,"ip_address":"","ucode":"E64CD8BED96D8D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8e/a3/d7e5fe8a.jpg","comment_is_top":false,"comment_ctime":1577678572,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577678572","product_id":100039001,"comment_content":"1. 自己没有做过特别复杂的系统，开发的项目时做需求分析和系统设计，一般是从典型的User Story开始，使用TDD，持续重构，版本迭代的思想一步步来做，一开始就把功能拆小，然后使用组合思维，看要不要某些功能聚合在一起；尽可能分离稳定的需求和变化的需求，后来接触了 DDD 的战略设计和战术设计，确实也很有帮助：不断深入理解业务的基础上，去划分不同上下文，定义通用语言，再结合一些战术技巧进行落地，最重要的是将业务内聚；<br>2. 需要具备产品思维；产品思维从不一样的角度来处理事情，我们写的代码做的设计不仅自己是用户，其他人也是，有了产品思维，我们就会更多考虑易用性、通用性、容错和扩展等","like_count":0},{"had_liked":false,"id":167047,"user_name":"守拙","can_delete":false,"product_type":"c1","uid":1738326,"ip_address":"","ucode":"F594B2DA3F6D4F","user_header":"https://static001.geekbang.org/account/avatar/00/1a/86/56/509535da.jpg","comment_is_top":false,"comment_ctime":1577677151,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577677151","product_id":100039001,"comment_content":"Question1:<br><br>应对复杂系统的设计实现，我今天讲到了聚焦简单场景、最小原型、画图等几个技巧，你还有什么经验可以分享给大家吗？<br><br><br><br>Answer:<br><br>针对复杂系统设计实现,要站在巨人的肩膀上:即搭梯子查阅洋文资料,通过翻阅资料取得灵感.<br><br><br><br>Question2:<br><br>今天提到的线框图、最小原型、易用性等，实际上都是产品设计方面的手段或者概念，应用到像框架这样的技术产品的设计上也非常有用。你觉得对于一个技术人来说，产品能力是否同样重要呢？技术人是否应该具备一些产品思维呢？<br><br><br><br>Answer:<br><br>技术人应当具备一些产品思想,但产品思维是锦上添花.<br><br>换句话说,产品思维不如技术能力有用.<br><br>如果技术能力到达了瓶颈,再钻研技术收益严重衰减,当且仅当如此情况,才考虑产品能力的提升.<br><br>总之,产品能力相对重要,但不如技术能力同样重要.","like_count":0},{"had_liked":false,"id":167031,"user_name":"liyghting","can_delete":false,"product_type":"c1","uid":1108970,"ip_address":"","ucode":"439794ECEEFD26","user_header":"https://static001.geekbang.org/account/avatar/00/10/eb/ea/7d00f657.jpg","comment_is_top":false,"comment_ctime":1577674788,"is_pvip":false,"replies":[{"id":"65138","content":"是的 lomg更好 我改下","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1577949523,"ip_address":"","comment_id":167031,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577674788","product_id":100039001,"comment_content":"Metrics类中List&lt;Double&gt;类型，怎么不是List&lt;Long&gt;，看使用的时候都是放的long时间。","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479720,"discussion_content":"是的 lomg更好 我改下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577949523,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167015,"user_name":"编程界的小学生","can_delete":false,"product_type":"c1","uid":1593289,"ip_address":"","ucode":"4A5BE9A5E877FA","user_header":"https://static001.geekbang.org/account/avatar/00/18/4f/c9/9f51fd27.jpg","comment_is_top":false,"comment_ctime":1577670300,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577670300","product_id":100039001,"comment_content":"之前用aop写了个通用的日志处理框架，结果没考虑到容错影，导致我的日志框架报错后，接入方主程序也抛出异常方法停止工作😢😢😢","like_count":0},{"had_liked":false,"id":167007,"user_name":"小晏子","can_delete":false,"product_type":"c1","uid":1132337,"ip_address":"","ucode":"3AAA6FB5ACB6AE","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/31/f35367c8.jpg","comment_is_top":false,"comment_ctime":1577668728,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1577668728","product_id":100039001,"comment_content":"1. 可以把设计跟同事一起讨论啊，三个臭皮匠顶个诸葛亮～<br>2. 产品能力很重要，没有好的产品能力，无法设计出让用户满意的产品，尤其是技术产品，从产品角度出发设计出来的API会更易于使用","like_count":0},{"had_liked":false,"id":167004,"user_name":"小可","can_delete":false,"product_type":"c1","uid":1006735,"ip_address":"","ucode":"8834AF621FA67D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/8f/551b5624.jpg","comment_is_top":false,"comment_ctime":1577667820,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577667820","product_id":100039001,"comment_content":"估计大多数人都是把简单问题复杂化，害怕解决方案不完美，这也要考虑，那也要考虑，到最后把自己陷进去，还有考虑不到的。😂","like_count":0},{"had_liked":false,"id":166991,"user_name":"知行合一","can_delete":false,"product_type":"c1","uid":1521486,"ip_address":"","ucode":"2B8E634FC4CFB7","user_header":"https://static001.geekbang.org/account/avatar/00/17/37/4e/5c3153b2.jpg","comment_is_top":false,"comment_ctime":1577665243,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577665243","product_id":100039001,"comment_content":"系统设计非常需要产品思维，只有对业务需求有足够的理解，才能留有扩展性，系统的稳定性才有可能实现。","like_count":0},{"had_liked":false,"id":166990,"user_name":"码到成功","can_delete":false,"product_type":"c1","uid":1251915,"ip_address":"","ucode":"E9CD9832CD14BD","user_header":"https://static001.geekbang.org/account/avatar/00/13/1a/4b/98c5a1e8.jpg","comment_is_top":false,"comment_ctime":1577664890,"is_pvip":false,"replies":[{"id":"64838","content":"太忙了 后面有空了吧","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1577666868,"ip_address":"","comment_id":166990,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577664890","product_id":100039001,"comment_content":"老师可以把每期的代码放到github上吗","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479704,"discussion_content":"太忙了 后面有空了吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577666868,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166985,"user_name":"终结者999号","can_delete":false,"product_type":"c1","uid":1055854,"ip_address":"","ucode":"33ADE61580B6DD","user_header":"https://static001.geekbang.org/account/avatar/00/10/1c/6e/6c5f5734.jpg","comment_is_top":false,"comment_ctime":1577664450,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1577664450","product_id":100039001,"comment_content":"技术人也需要具有产品思维，在一开始就确保可以生产出产品，测试，开发都可以接受的原型产品，这样之后大的骨骼不动，产品和测试也都能熟悉了。","like_count":0},{"had_liked":false,"id":166981,"user_name":"黄林晴","can_delete":false,"product_type":"c1","uid":1362631,"ip_address":"","ucode":"B15C38AECDA88F","user_header":"https://static001.geekbang.org/account/avatar/00/14/ca/c7/00e544c2.jpg","comment_is_top":false,"comment_ctime":1577663717,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577663717","product_id":100039001,"comment_content":"打卡✔<br>技术人同样需要产品思维与产品分析与设计的能力，不一定要求像产品一样精准，但自己的分析更有助于编码功能实现","like_count":0},{"had_liked":false,"id":166978,"user_name":"aya","can_delete":false,"product_type":"c1","uid":1325690,"ip_address":"","ucode":"F50E350DCF72D6","user_header":"https://static001.geekbang.org/account/avatar/00/14/3a/7a/a68f0ff8.jpg","comment_is_top":false,"comment_ctime":1577662771,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577662771","product_id":100039001,"comment_content":"最小原型，画流程草图的方式最常用，程序员应该有意识的培养自己的产品思维，但个人认为应该是在做好本职技术工作的基础上，去磨练自己的产品思维。","like_count":0},{"had_liked":false,"id":166966,"user_name":"MindController","can_delete":false,"product_type":"c1","uid":1159113,"ip_address":"","ucode":"3B9CECCD12CF6E","user_header":"https://static001.geekbang.org/account/avatar/00/11/af/c9/d9c72c60.jpg","comment_is_top":false,"comment_ctime":1577641850,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577641850","product_id":100039001,"comment_content":"是的，需要有产品思维，尤其是做框架这种技术产品，所以我在极客时间上也购买过产品课程。<br>还有一点，开发经常和产品起冲突，我们有了技术思维后，也能提出一些好的建议来。","like_count":0},{"had_liked":false,"id":166970,"user_name":"辣么大","can_delete":false,"product_type":"c1","uid":1396951,"ip_address":"","ucode":"AB308B6DCA0108","user_header":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","comment_is_top":false,"comment_ctime":1577658071,"is_pvip":true,"discussion_count":5,"race_medal":0,"score":"366649878231","product_id":100039001,"comment_content":"没有经历过大型系统的全过程（设计，开发，实现，维护）。自己开发一些功能时，比较喜欢“用户故事”，这样能基本能做到一次交付一个可用功能。干就是了！先有一个原型，然后再迭代优化。最后“纸上得来终觉浅”，照着争哥的代码还是自己实现了一下：https:&#47;&#47;github.com&#47;gdhucoder&#47;Algorithms4&#47;tree&#47;master&#47;designpattern&#47;u025","like_count":86,"discussions":[{"author":{"id":1444122,"avatar":"https://static001.geekbang.org/account/avatar/00/16/09/1a/e0f95684.jpg","nickname":"空空","note":"","ucode":"8F6EFE5A6F6F64","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":171735,"discussion_content":"user story是目前大厂流行的方式，和TDD一起用就有点过于违和，目前我公司的用法是和BDD结合，由测试驱动转向行为驱动，这样更符合用户故事的开发模式，这样的好处是代码可读性接近自然语言了。","likes_number":11,"is_delete":false,"is_hidden":false,"ctime":1581742432,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1396951,"avatar":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","nickname":"辣么大","note":"","ucode":"AB308B6DCA0108","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1444122,"avatar":"https://static001.geekbang.org/account/avatar/00/16/09/1a/e0f95684.jpg","nickname":"空空","note":"","ucode":"8F6EFE5A6F6F64","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":171886,"discussion_content":"谢谢！学习了！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581755723,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":171735,"ip_address":""},"score":171886,"extra":""}]},{"author":{"id":1237624,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e2/78/9241b7b2.jpg","nickname":"志振爱咋滴咋滴","note":"","ucode":"E7A5049920C101","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":118997,"discussion_content":"在我们团队做敏捷开发的时候，所有的需求的都是用户故事，从用户角度去看一个功能的实现，和具体交付时要做什么什么程度。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1578207769,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1359701,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","nickname":"小伟","note":"","ucode":"124953423491E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":110942,"discussion_content":"建议把测试以UT的方式写在源代码class或UT class里，个人感觉main不是个很好的方式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577767446,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1396951,"avatar":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","nickname":"辣么大","note":"","ucode":"AB308B6DCA0108","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1359701,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","nickname":"小伟","note":"","ucode":"124953423491E2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":110984,"discussion_content":"好的，谢谢建议！我学习一下！\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577770198,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":110942,"ip_address":""},"score":110984,"extra":""}]}]},{"had_liked":false,"id":168328,"user_name":"        ","can_delete":false,"product_type":"c1","uid":1255918,"ip_address":"","ucode":"21028A49D81B06","user_header":"https://static001.geekbang.org/account/avatar/00/13/29/ee/fba11edf.jpg","comment_is_top":false,"comment_ctime":1578048112,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"186261641840","product_id":100039001,"comment_content":"https:&#47;&#47;github.com&#47;Aspire814&#47;DesignPattern.git<br>因为争哥的简单实现具有代码倾入性，简单实现了了一个基于自定义切面和注解的接口统计服务。供学习参考","like_count":44,"discussions":[{"author":{"id":1239462,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e9/a6/69907ec1.jpg","nickname":"李伟","note":"","ucode":"F0EF60EB250B20","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":270696,"discussion_content":"咋这么优秀呢","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1590038285,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2870321,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLE9hv64CEabxt76tQQcWDicx0sucpAApFvYoM8eXBViaJgz06EjcfJjiamSFWY9aAuxjILaPoiaa0lNw/132","nickname":"Soil","note":"","ucode":"3B353BC858B5AE","race_medal":5,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587007,"discussion_content":"棒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662683901,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166988,"user_name":"progyoung","can_delete":false,"product_type":"c1","uid":1014692,"ip_address":"","ucode":"0B4898AE78F9F5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7b/a4/24955994.jpg","comment_is_top":false,"comment_ctime":1577664704,"is_pvip":false,"replies":[{"id":"64817","content":"可以使用类似spring aop 做到无侵入","user_name":"作者回复","comment_id":166988,"uid":"1190123","ip_address":"","utype":1,"ctime":1577665692,"user_name_real":"王争"}],"discussion_count":8,"race_medal":0,"score":"126131716288","product_id":100039001,"comment_content":"老师，本文中的案例统计时间时对业务代码是侵入式的，有没有非侵入式的案例呀？","like_count":30,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479703,"discussion_content":"可以使用类似spring aop 做到无侵入","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1577665692,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1018552,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8a/b8/97d30803.jpg","nickname":"布拉格的鱼","note":"","ucode":"95145A236D6033","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":219743,"discussion_content":"还可以用 agent 方式，应用无感知","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1585801305,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1257453,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2f/ed/a87bb8fa.jpg","nickname":"此鱼不得水","note":"","ucode":"95268E823FB4D2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":114563,"discussion_content":"直接字节码增强比较合适","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1577974343,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2051293,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/4c/dd/c6035349.jpg","nickname":"Bumblebee","note":"","ucode":"B879C8A511D08D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381928,"discussion_content":"注解加拦截器也挺好的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625300555,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2449401,"avatar":"https://static001.geekbang.org/account/avatar/00/25/5f/f9/12e67bb4.jpg","nickname":"阿天","note":"","ucode":"8F56A31D84FDE3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361499,"discussion_content":"用字节码插桩还挺好的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616680258,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1002134,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/96/99466a06.jpg","nickname":"Laughing","note":"","ucode":"F68F1E000CA800","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":321995,"discussion_content":"Java instrumentation 了解下。探针最好用premain的方式启动加载，里面可以用动态代理自己实现，也可以通过字节码修改的方式实现","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604659686,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1591223,"avatar":"https://static001.geekbang.org/account/avatar/00/18/47/b7/b30472fd.jpg","nickname":"JerryZhu","note":"","ucode":"76850CD45786C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304180,"discussion_content":"一般这种东西， 都是一个注解扔个业务， 想要统计埋点的接口 打个注解就好， 甚至可以提供一个全局的注解， 指定哪些包下面的所有接口需要统计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599489655,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1200708,"avatar":"https://static001.geekbang.org/account/avatar/00/12/52/44/de7f2b98.jpg","nickname":"pines","note":"","ucode":"7B925605B36B4E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":109188,"discussion_content":"可以使用prometheus，用hook的方式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577672806,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167696,"user_name":"花儿少年","can_delete":false,"product_type":"c1","uid":1318540,"ip_address":"","ucode":"CFE4F64243673B","user_header":"https://static001.geekbang.org/account/avatar/00/14/1e/8c/450fe5cb.jpg","comment_is_top":false,"comment_ctime":1577895337,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"100362143145","product_id":100039001,"comment_content":"目前在维护和开发营销插件系统，对于产品思维算是有一点感悟吧。<br>营销插件多种多样，每个插件都有一些共性的地方，也有特性的地方。插件于插件之间还有叠加互斥关系，比如说有了满减送也可以使用优惠券等等。不同的产品定义不同的插件规则，后来就出现了在同一个点上，不同插件的理解都不一一致，商家理解使用费劲。还有针对某个插件定义一些奇怪的功能，极少商家在用，但是还不允许去掉这个功能。这就为后来的优化产生了极大的阻碍，设计和开发的人都走了，奇怪的功能还涉及好几个团队，尝试过沟通，无结果，保持现状。<br>还有在开发新功能的时候，产品拍脑袋说这个手机壳的颜色要随心情变化，你说这能给做吗。<br>技术人员一定要有产品思维，代码是你写的也是你维护，某个功能是不是屎坑一定要三思，产品拍脑袋，技术不能拍脑袋，最后掉的是自己的头发，走的也是自己。一定要把风险都给他讲明白，我们不生气，我们讲道理！！！","like_count":24,"discussions":[{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588018,"discussion_content":"最喜欢这样的评论了，说出自己的苦，说出自己思路，稳","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663471696,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1612910,"avatar":"https://static001.geekbang.org/account/avatar/00/18/9c/6e/01b4d5d2.jpg","nickname":"liupan","note":"","ucode":"C6C7C48BCCAE12","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337489,"discussion_content":"技术人一定要有产品思维挺好的，否则就是一直和产品在扯皮了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608947138,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1117318,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0c/86/8e52afb8.jpg","nickname":"花花大脸猫","note":"","ucode":"8ABDB3F7F4FB0F","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278483,"discussion_content":"哈哈，深有感触，同道中人。。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591192074,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167195,"user_name":"一壶浊酒","can_delete":false,"product_type":"c1","uid":1145530,"ip_address":"","ucode":"5D90F8F8121BBE","user_header":"https://static001.geekbang.org/account/avatar/00/11/7a/ba/8545f2d7.jpg","comment_is_top":false,"comment_ctime":1577713227,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"91772026443","product_id":100039001,"comment_content":"我觉得技术人需要一些产品的思维，这样即使在做已经设计好的产品的时候，也能提出一些不同的看法和见解，而不是一味的做一个执行者，别人说啥就做啥，而且框架的设计我觉得也是一个产品，需要我们技术人自己去推敲去打磨。","like_count":22,"discussions":[{"author":{"id":1438860,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f4/8c/0866b228.jpg","nickname":"子房","note":"","ucode":"CB05938C248BB3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338998,"discussion_content":"赞同","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609471758,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169188,"user_name":"Lyre","can_delete":false,"product_type":"c1","uid":1275759,"ip_address":"","ucode":"61AB16508AFFDA","user_header":"https://static001.geekbang.org/account/avatar/00/13/77/6f/454951d2.jpg","comment_is_top":false,"comment_ctime":1578288351,"is_pvip":false,"replies":[{"id":"65744","content":"是的，先做设计，后写代码。先做顶层设计，再做细分设计。","user_name":"作者回复","comment_id":169188,"uid":"1190123","ip_address":"","utype":1,"ctime":1578379772,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"66002797791","product_id":100039001,"comment_content":"复杂的系统设计，首先应该梳理出功能点，整理架构设计，画出架构设计图，有了总体的规划，做下去才更顺畅。对吗老师<br>","like_count":15,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480450,"discussion_content":"是的，先做设计，后写代码。先做顶层设计，再做细分设计。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578379772,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167144,"user_name":"李小四","can_delete":false,"product_type":"c1","uid":1112747,"ip_address":"","ucode":"2A766BE16B276B","user_header":"https://static001.geekbang.org/account/avatar/00/10/fa/ab/0d39e745.jpg","comment_is_top":false,"comment_ctime":1577698272,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"57412273120","product_id":100039001,"comment_content":"设计模式_25:<br><br>1. 做事要避免极端，最小原型和场景，是为了避免完美主义，永远开不了头的极端。但另一方面，如果是复杂的系统，避免不了地要花很多时间去思考系统设计的问题，要有思考和记录，这样是为了避免另一个极端，过于简单的架构开发复杂系统，最终导致改不动了。<br><br>2. 如果问题是“是否应该有产品意识”，答案是不言而喻的。而且，于是技术能力强的技术人员，对于产品意识的需求就越是迫切，在真实的市场竞争中，用户只会接触到产品，技术可能会成为产品的竞争优势，也可能不会，但技术人员了解产品思维，这样能够更全面地了解自己做的事情，在真实的用户场景中，在发挥着怎样的价值；另外，在做了很久的技术后，我们可能有欲望把自己的一些idea转化成产品，并最终推向市场，面向用户。做成这样的事情，会有更强烈的成就感，离创业也更近了一部。","like_count":14,"discussions":[{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588019,"discussion_content":"技术人要有产品思维是为自己的职业生涯铺路","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663471801,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166971,"user_name":"北天魔狼","can_delete":false,"product_type":"c1","uid":1188144,"ip_address":"","ucode":"C22623ECEB8DBA","user_header":"https://static001.geekbang.org/account/avatar/00/12/21/30/8ecce1e1.jpg","comment_is_top":false,"comment_ctime":1577658738,"is_pvip":true,"replies":[{"id":"64818","content":"39 40讲 会给出完善的代码","user_name":"作者回复","comment_id":166971,"uid":"1190123","ip_address":"","utype":1,"ctime":1577665724,"user_name_real":"王争"}],"discussion_count":4,"race_medal":0,"score":"35937397106","product_id":100039001,"comment_content":"一直没有做过关于统计和监控的项目，希望老师可以出一个小的MVP🙏🙏🙏","like_count":8,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479695,"discussion_content":"39 40讲 会给出完善的代码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577665724,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1307611,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f3/db/5b7a8fd8.jpg","nickname":"筱乐乐哦","note":"","ucode":"AE92539F0419C3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":110545,"discussion_content":"Spring Boot Actuator + Prometheus项目，挺好的监控体系","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1577724071,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1188144,"avatar":"https://static001.geekbang.org/account/avatar/00/12/21/30/8ecce1e1.jpg","nickname":"北天魔狼","note":"","ucode":"C22623ECEB8DBA","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1307611,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f3/db/5b7a8fd8.jpg","nickname":"筱乐乐哦","note":"","ucode":"AE92539F0419C3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":110596,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577744862,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":110545,"ip_address":""},"score":110596,"extra":""}]},{"author":{"id":1188144,"avatar":"https://static001.geekbang.org/account/avatar/00/12/21/30/8ecce1e1.jpg","nickname":"北天魔狼","note":"","ucode":"C22623ECEB8DBA","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":109046,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577666046,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167214,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1577718410,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31642489482","product_id":100039001,"comment_content":"手机听读终觉浅，归来PC撸代码.。<br>GET完。代码：https:&#47;&#47;gitee.com&#47;MondayLiu&#47;geek-design.git","like_count":7},{"had_liked":false,"id":167266,"user_name":"小畅","can_delete":false,"product_type":"c1","uid":1322880,"ip_address":"","ucode":"D031CC07CD564E","user_header":"","comment_is_top":false,"comment_ctime":1577754125,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"27347557901","product_id":100039001,"comment_content":"打卡似懂非懂","like_count":6,"discussions":[{"author":{"id":1322880,"avatar":"","nickname":"小畅","note":"","ucode":"D031CC07CD564E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":395335,"discussion_content":"这次又看懂了些","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1632283989,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166953,"user_name":"Flynn","can_delete":false,"product_type":"c1","uid":1174517,"ip_address":"","ucode":"293321CC198C0C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/aY5QA2COoiaGy7P3MJzUIam3GG94GpA0fTx8yJN3OyBiaP3eNL65ia99H4RbaqC4fypg7JhBOujlJs7bBTdJKdMUQ/132","comment_is_top":false,"comment_ctime":1577636751,"is_pvip":false,"replies":[{"id":"64819","content":"有单元测试的讲解","user_name":"作者回复","comment_id":166953,"uid":"1190123","ip_address":"","utype":1,"ctime":1577665751,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"23052473231","product_id":100039001,"comment_content":"老师，后面有TDD相关的内容讲解和练习么","like_count":5,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479691,"discussion_content":"有单元测试的讲解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577665751,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":251977,"user_name":"Ilearning99","can_delete":false,"product_type":"c1","uid":1989119,"ip_address":"","ucode":"7901836A2C47EF","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/qOdqzmC507sibL6sichNSDaVmyoMKibEIqHWpic4CftgOQnoA3QKeRPwic9j1Ha8MLtzzqzfSRavR9GWMju09SMADUg/132","comment_is_top":false,"comment_ctime":1602033847,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18781903031","product_id":100039001,"comment_content":"我发现很多时候，我想问题都很复杂，快到deadline的时候就会实现一个非常简化的版本","like_count":4},{"had_liked":false,"id":167070,"user_name":"桂城老托尼","can_delete":false,"product_type":"c1","uid":1306032,"ip_address":"","ucode":"139E4B8EE88B79","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcxSpNMqwqyicMvdOSr9ic0p1ABiauHnv7g7YQVSJuoHPoQbYDu3YzdpgmSAk2KricUBQ5yibWBWIq75w/132","comment_is_top":false,"comment_ctime":1577684226,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14462586114","product_id":100039001,"comment_content":"感谢争哥分享，先看了第一段过来作答，完了再回到文章验证想法。<br>统计接口各维度信息的框架设计思路如下，<br>1，确认框架职责，框架的用例。采集原始数据(标准埋点日志)，加工原始数据(时间窗口内)，提供外围消费(适配各种style)<br>2. 细分每一职责，采集原始数据，围绕框架提供能力，确定原始数据标准，甚至原始数据标准的定义也开放给业务系统，解析关键信息的规则由业务系统自己把控。框架负责制定规则的枚举，和规则解析。<br>3. 加工原始数据，其实就是使用规则对原始数据流进行解析和统计，这里可以给出默认时间窗口和更新周期，业务系统可配置变更。<br>4. 提供外围系统消费，框架给出指标数据，自己默认展示样式，自定义样式留好扩展，交给业务系统自己扩展，框架也可以管控起来，形成类似于“主题市场”的东西。<br>总结下来，就是确定职责边界，高内聚框架职责，低耦合业务系统，对修改关闭，对扩展开放。基于这些原则，再往上走就是各种xx设计模式了，这时候就是水到渠成的事儿了。 <br>-----回去再看下文章验证下猜想，不被打脸才好 。","like_count":3},{"had_liked":false,"id":166986,"user_name":"javaadu","can_delete":false,"product_type":"c1","uid":1000519,"ip_address":"","ucode":"8C0B140F1C8992","user_header":"https://static001.geekbang.org/account/avatar/00/0f/44/47/3ddb94d0.jpg","comment_is_top":false,"comment_ctime":1577664540,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"14462566428","product_id":100039001,"comment_content":"还没有看文章的方案，先来留个言：<br>运行时：框架的接口是注解；通过mq将统计的数据发出到实时计算引擎例如flink，编写udf统计各种特征数据<br><br>管理时：核心是数据存储和查询模块；渠道接入放在独立的模块","like_count":3},{"had_liked":false,"id":247416,"user_name":"郑大钱","can_delete":false,"product_type":"c1","uid":1503067,"ip_address":"","ucode":"114CF48056880E","user_header":"https://static001.geekbang.org/account/avatar/00/16/ef/5b/ff28088f.jpg","comment_is_top":false,"comment_ctime":1599703931,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10189638523","product_id":100039001,"comment_content":"高级工程师会从易用、扩展、性能、稳定等方面设计架构，这对我来说是很难的。但我也想写出牛逼的代码，怎么办？<br>最小原型是我的最佳实践。<br>先聚焦于实现一个单一的功能点，就算实现的代码毫无设计可言，但至少要先让它跑起来。谈易用、谈扩展、谈性能、谈健壮，具体代码比抽象概念更容易。<br>一定要给你的代码挤出重构的时间，哪怕只有一句代码。对我来说，重构相当于在复盘，这是你学到的设计模式落地的时候，也是真正成长的时候。","like_count":2,"discussions":[{"author":{"id":1045577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f4/49/2add4f6b.jpg","nickname":"北极的大企鹅","note":"","ucode":"8935346D08E109","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376207,"discussion_content":"看到你的网名还是真名...就感觉很好笑啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622015824,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":177636,"user_name":"努力呼吸","can_delete":false,"product_type":"c1","uid":1718303,"ip_address":"","ucode":"52941DD7A01BBA","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKDfO7wKibzpw4YsoqLRCHUKxX4rYRUh7m7RCdOwzWVaN9QLlhcU5ho3w2Qcpib1O69YPj65ib07xQBQ/132","comment_is_top":false,"comment_ctime":1581439236,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10171373828","product_id":100039001,"comment_content":"个人简单实现的无侵入代码 https:&#47;&#47;github.com&#47;ghaoxiangzZ&#47;design-pattern-code&#47;tree&#47;master&#47;src&#47;main&#47;java&#47;com&#47;ghaoxiang&#47;lesson&#47;twentyfive","like_count":2},{"had_liked":false,"id":174882,"user_name":"javaadu","can_delete":false,"product_type":"c1","uid":1000519,"ip_address":"","ucode":"8C0B140F1C8992","user_header":"https://static001.geekbang.org/account/avatar/00/0f/44/47/3ddb94d0.jpg","comment_is_top":false,"comment_ctime":1580446147,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10170380739","product_id":100039001,"comment_content":"问题1：要重视设计，但是可以采取不同的方法，有的人喜欢用本文中的方法——先写一个简单的原型，在写的过程中理清楚对问题的理解和设计；也有的人喜欢将设计作为一个单独的流程，先用一些抽象的线框图推到清楚再动手。我的观点是，两者不冲突，可以两者一起使用，如果是团队项目，建议先各自有个深度的思考然后再进行碰撞合并，应该可以产出大方向没问题的设计","like_count":2},{"had_liked":false,"id":172372,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1015754,"ip_address":"","ucode":"00DF2FEC58D2E6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","comment_is_top":false,"comment_ctime":1579162765,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10169097357","product_id":100039001,"comment_content":"在设计一个系统的时候，不需要也不能100%都考虑到了才开始，要先设计一个能简单实现的系统，先编码实现了这个简单系统，然后逐步迭代完善；在这个过程中能用图示画出来的要画出来，图示能给人以十分直观的方式；在学习其他的课程的过程中，通过画系统的流程图就能让自己可以很清晰地了解系统的执行流程，尤其是自己总结流程图很重要！并且当时间长了来回顾复习的时候，流程图更直观，更容易复习","like_count":2},{"had_liked":false,"id":167041,"user_name":"。","can_delete":false,"product_type":"c1","uid":1222200,"ip_address":"","ucode":"75B163F01F20F3","user_header":"https://static001.geekbang.org/account/avatar/00/12/a6/38/55483b8c.jpg","comment_is_top":false,"comment_ctime":1577676349,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10167610941","product_id":100039001,"comment_content":"像这种统计频次的功能，是通过集成框架去实现好，还是说通过mq由消费服务去实现好","like_count":2,"discussions":[{"author":{"id":1306032,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcxSpNMqwqyicMvdOSr9ic0p1ABiauHnv7g7YQVSJuoHPoQbYDu3YzdpgmSAk2KricUBQ5yibWBWIq75w/132","nickname":"桂城老托尼","note":"","ucode":"139E4B8EE88B79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":109932,"discussion_content":"这里说的应该只是举个例子，真实场景应该有很多实现套路，但底层设计原则比较类似，看产品能做多成熟了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1577714899,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166997,"user_name":"再见孙悟空","can_delete":false,"product_type":"c1","uid":1025518,"ip_address":"","ucode":"57E12A2F9CD915","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a5/ee/6bbac848.jpg","comment_is_top":false,"comment_ctime":1577666720,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10167601312","product_id":100039001,"comment_content":"使用线框图，采用最小原型模式，先做出一个模型，画出模型图，然后再迭代优化，使抽象的东西变得看得见摸得着，这确实是一个好方法，实际项目中也不知不觉用到了这种思想，做非业务类的需求如此，业务类的也一样。还有留言里说的用户故事也是很不错的方法，通俗点就是技术要有产品的思维，站在使用者的角度看问题。","like_count":2},{"had_liked":false,"id":207064,"user_name":"Albert","can_delete":false,"product_type":"c1","uid":1374620,"ip_address":"","ucode":"AC04CD1BF1F8E5","user_header":"https://static001.geekbang.org/account/avatar/00/14/f9/9c/7c959e68.jpg","comment_is_top":false,"comment_ctime":1587001775,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5881969071","product_id":100039001,"comment_content":"对于框架的设计还可以站在框架使用者的角度去看怎么用得爽，怎么用比较合适，然后做针对性设计，也可以说是针对用户设计","like_count":1},{"had_liked":false,"id":202330,"user_name":"波波","can_delete":false,"product_type":"c1","uid":1034120,"ip_address":"","ucode":"F63725D3416CC5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c7/88/a2e42dc8.jpg","comment_is_top":false,"comment_ctime":1585969162,"is_pvip":false,"replies":[{"id":"88031","content":"好像这是两个概念啊，不用减啊","user_name":"作者回复","comment_id":202330,"uid":"1190123","ip_address":"","utype":1,"ctime":1596113505,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"5880936458","product_id":100039001,"comment_content":"老师，计算最大响应时间max应该是 响应时间减去请求时间吧，为什么代码中只用到了响应时间呢？","like_count":1,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490558,"discussion_content":"好像这是两个概念啊，不用减啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596113505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169962,"user_name":"睁眼看世界","can_delete":false,"product_type":"c1","uid":1206388,"ip_address":"","ucode":"F94CF34BC5B2AC","user_header":"https://static001.geekbang.org/account/avatar/00/12/68/74/461b202d.jpg","comment_is_top":false,"comment_ctime":1578484358,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5873451654","product_id":100039001,"comment_content":"   对于复杂的业务系统，我倾向于先构思，用相关画图软件如processOn画出来流程图，再列出一个一个功能点，先面向过程实现功能再调整打磨完善代码。<br>   技术人必须得有产品思维，懂得从用户的角度出发，才能不断打磨自身代码、程序以及产品。不然一切都是空中楼阁，再好的程序也是毫无意义的。","like_count":1},{"had_liked":false,"id":168636,"user_name":"落叶飞逝的恋","can_delete":false,"product_type":"c1","uid":1046429,"ip_address":"","ucode":"F9A95DB28BCF1E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/9d/be04b331.jpg","comment_is_top":false,"comment_ctime":1578128776,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5873096072","product_id":100039001,"comment_content":"课堂讨论<br>第一题：复杂系统简单化处理，先罗列出必须要实现的功能模块，后面不重要的再后期迭代<br>第二题：其实代码只是一种表现手段，只有自己真正了解产品，才能更好的发挥主观能动性","like_count":1},{"had_liked":false,"id":168276,"user_name":"传说中的成大大","can_delete":false,"product_type":"c1","uid":1236766,"ip_address":"","ucode":"103543D6E706BF","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","comment_is_top":false,"comment_ctime":1578040720,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5873008016","product_id":100039001,"comment_content":"1. 最最最最最最.........................最重要的一点 那就是和产品方沟通清楚它的需求，多和产品沟通 这是我最近与一个做过主策的策划合作过程中最大的收获，一般跟他合作的时候 他都会问我这样做好不好，程序容不容易实现，在跟我沟通交流的过程中 我也把他的需求 理解清楚了，最后才开策划案<br>2. 我觉得技术人还是需要有一定的产品思维比较好，不然遇到一些稍微古板或者能力欠缺的产品 可能会把你坑太平洋里去(这也是我最近一个月工作遇到的坑，不然我咋个会落下这么多课程,还没学T_T)","like_count":1},{"had_liked":false,"id":167170,"user_name":"一名小学生","can_delete":false,"product_type":"c1","uid":1137292,"ip_address":"","ucode":"5C73082E6B6370","user_header":"https://static001.geekbang.org/account/avatar/00/11/5a/8c/1fec5fa2.jpg","comment_is_top":false,"comment_ctime":1577706281,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5872673577","product_id":100039001,"comment_content":"最小原型是很棒的方法，跨出第一步就成功了一半<br>","like_count":1},{"had_liked":false,"id":350041,"user_name":"谁都会变","can_delete":false,"product_type":"c1","uid":1195017,"ip_address":"","ucode":"9965748F7EBB57","user_header":"https://static001.geekbang.org/account/avatar/00/12/3c/09/b7f0eac6.jpg","comment_is_top":false,"comment_ctime":1656514788,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1656514788","product_id":100039001,"comment_content":"数据一直放Map里会不会有问题，后续优化是不是要放到数据库","like_count":0},{"had_liked":false,"id":345881,"user_name":"郑思雨","can_delete":false,"product_type":"c1","uid":1474579,"ip_address":"","ucode":"F1F4B08FC94E7D","user_header":"https://static001.geekbang.org/account/avatar/00/16/80/13/df2a0ced.jpg","comment_is_top":false,"comment_ctime":1652672994,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1652672994","product_id":100039001,"comment_content":"1、在有限时间内尽可能的在技术设计上多付出精力，首先抽取出需求中的主线流程，设计上优先满足主线流程，一些边界情况的处理后续有时间可以慢慢迭代进去。这里就可以参考ARGNI原则，系统需要迭代过程，先设计出MVP版本满足需求才是最重要的。当然也分场景，如果是容错性非常低的业务场景，比如资金相关的，那么在初期，就要尽可能的考虑清楚，最起码一些运维的功能要提前设计；<br>2、技术培养产品思维是非常有必要且重要的，如果只是根据需求做开发，何谈业务积累呢？并且从某种程度讲，开发甚至比产品还要了解系统，有些需求产品可能更多的是考量眼前的场景，但是会忽略掉是否在其他方向存在不兼容或者逻辑不能自洽的情况，这时，如果开发能及时提出，那么问题产生的可能性也会大大降低。另一方面，技术拥有产品思维，会更多的考虑向后兼容，这样在技术设计上更加注重精益求精。","like_count":0},{"had_liked":false,"id":343463,"user_name":"恬毅","can_delete":false,"product_type":"c1","uid":1015240,"ip_address":"","ucode":"914ED16F3BE714","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/c8/e4727683.jpg","comment_is_top":false,"comment_ctime":1650861847,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650861847","product_id":100039001,"comment_content":"时间管理老师叶武滨说过：烂开始，好结束","like_count":0},{"had_liked":false,"id":303357,"user_name":"昵称C","can_delete":false,"product_type":"c1","uid":1234963,"ip_address":"","ucode":"1BB2D537942DC2","user_header":"https://static001.geekbang.org/account/avatar/00/12/d8/13/082013bc.jpg","comment_is_top":false,"comment_ctime":1626749480,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626749480","product_id":100039001,"comment_content":"讨论一：<br>时机工作中，自己梳理出初步方案后(流程图&#47;架构图)，可以找同事一块进行讨论，头脑风暴之后，再做完善。根据复杂度不同和当前完善程度可以重复上述操作。<br>讨论二：<br>程序员具有一定的产品思维是必要的，程序员做出来的东西必定是具有一定功能的可应用的产品，本身就要从产品设计角度去思考它的功能闭环、易用性和扩展性。","like_count":0},{"had_liked":false,"id":301339,"user_name":"小帅","can_delete":false,"product_type":"c1","uid":1239663,"ip_address":"","ucode":"4129A7E9427FFC","user_header":"https://static001.geekbang.org/account/avatar/00/12/ea/6f/09de5f65.jpg","comment_is_top":false,"comment_ctime":1625639386,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625639386","product_id":100039001,"comment_content":"这篇是干货！！","like_count":0},{"had_liked":false,"id":300063,"user_name":"陆离","can_delete":false,"product_type":"c1","uid":1483932,"ip_address":"","ucode":"2C8C206CE36A81","user_header":"https://static001.geekbang.org/account/avatar/00/16/a4/9c/b32ed9e9.jpg","comment_is_top":false,"comment_ctime":1624969629,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1624969629","product_id":100039001,"comment_content":"前40讲都值得多读几遍，不亚于去啃一本砖头书了","like_count":0},{"had_liked":false,"id":294538,"user_name":"述为","can_delete":false,"product_type":"c1","uid":1238965,"ip_address":"","ucode":"E62AEC705AEDC2","user_header":"https://static001.geekbang.org/account/avatar/00/12/e7/b5/c08b71e1.jpg","comment_is_top":false,"comment_ctime":1621992531,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621992531","product_id":100039001,"comment_content":"aop吧","like_count":0},{"had_liked":false,"id":283947,"user_name":"鸵鸟","can_delete":false,"product_type":"c1","uid":1042066,"ip_address":"","ucode":"92E710D05E4894","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e6/92/db9a2fcf.jpg","comment_is_top":false,"comment_ctime":1615992284,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615992284","product_id":100039001,"comment_content":"产品能力某种意义上是讲好一个故事的能力和听懂一个故事的能力，技术越往后做越需要这些能力。","like_count":0},{"had_liked":false,"id":281414,"user_name":"Chloe","can_delete":false,"product_type":"c1","uid":1004953,"ip_address":"","ucode":"C4848ED5B35752","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/99/4bdadfd3.jpg","comment_is_top":false,"comment_ctime":1614742354,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614742354","product_id":100039001,"comment_content":"echo back to 老师讲的“易用性”，好用又简单的设计很重要；同时全面友好的文档也体现了你对使用你的通用框架的用户的一种欢迎态度。<br>这个也讲到我的心里去了 “万事开头难，所以，先迈出第一步很重要。”， 明知道一口吃不成胖子，但是还是觉得要开始的精彩，所以迟迟没有迈出第一步。","like_count":0},{"had_liked":false,"id":272922,"user_name":"Gabriel","can_delete":false,"product_type":"c1","uid":1437358,"ip_address":"","ucode":"714772A93E93DC","user_header":"https://static001.geekbang.org/account/avatar/00/15/ee/ae/855b7e6e.jpg","comment_is_top":false,"comment_ctime":1610355667,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610355667","product_id":100039001,"comment_content":"还是得多看看别人优秀的代码；代码写的好不好，除了对自身代码review，还要得多学习。<br>就像这个系统，其实很简单。但是如果给自己写，估计会写的乱起八糟。<br>代码的解耦，其实是在思考公能怎么实现的时候，然后在看看哪些代码该分层的分层，该解耦的解耦。<br>","like_count":0},{"had_liked":false,"id":263324,"user_name":"淤白","can_delete":false,"product_type":"c1","uid":1206503,"ip_address":"","ucode":"D1E65DC40DAF68","user_header":"https://static001.geekbang.org/account/avatar/00/12/68/e7/ee47d0e2.jpg","comment_is_top":false,"comment_ctime":1606101319,"is_pvip":false,"replies":[{"id":"96101","content":"加油","user_name":"作者回复","comment_id":263324,"uid":"1190123","ip_address":"","utype":1,"ctime":1606700788,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1606101319","product_id":100039001,"comment_content":"打卡：用Java实现了文中案例。","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510148,"discussion_content":"加油","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606700788,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":249781,"user_name":"曾帅","can_delete":false,"product_type":"c1","uid":1234319,"ip_address":"","ucode":"322F049DA9284D","user_header":"https://static001.geekbang.org/account/avatar/00/12/d5/8f/d0874a01.jpg","comment_is_top":false,"comment_ctime":1600789015,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600789015","product_id":100039001,"comment_content":"虽然已经过了很久才来补课，但是还是说一点自己的感受。<br>对于复杂的系统，其实也可以使用上一节课说的知识点，就是借鉴，对于一些复杂的业务系统，很多都有通用的方案，我们可以多了解一下这方面的东西，对于如何开始开发和避坑都有好处。<br>至于技术人员来说，产品思维一样也是很重要的，就像易用性、容错性、扩展性其实这些都是一个好产品具有的特性。对于技术人员来说，写出来的代码也想一个产品一般，我们也要用产品的思维去评审我们的代码。","like_count":0},{"had_liked":false,"id":249669,"user_name":"David","can_delete":false,"product_type":"c1","uid":1021825,"ip_address":"","ucode":"22CBBC13FC97A9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/97/81/e1eaf621.jpg","comment_is_top":false,"comment_ctime":1600750833,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1600750833","product_id":100039001,"comment_content":"有产品思维才能是架构师 而不是码农。产品 架构 生活很多道理是相通的。成为一个有智慧的人","like_count":0},{"had_liked":false,"id":246838,"user_name":"JerryZhu","can_delete":false,"product_type":"c1","uid":1591223,"ip_address":"","ucode":"76850CD45786C1","user_header":"https://static001.geekbang.org/account/avatar/00/18/47/b7/b30472fd.jpg","comment_is_top":false,"comment_ctime":1599489560,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599489560","product_id":100039001,"comment_content":"技术人如果缺乏产品思维， 只是机械的当个螺丝钉， 永远无法写出高质量的业务代码， 只会到后面不断迭代，不断偿还技术债，业务债","like_count":0},{"had_liked":false,"id":246705,"user_name":"宇天飞","can_delete":false,"product_type":"c1","uid":1126444,"ip_address":"","ucode":"3FB37D1E2DAA61","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/2c/06375913.jpg","comment_is_top":false,"comment_ctime":1599457493,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1599457493","product_id":100039001,"comment_content":"产品思维也很重要，把自己写的代码本身作为一个产品，已产品的特性去考虑代码的交付的发展。同时具有产品思维也可以主动产品的发展","like_count":0},{"had_liked":false,"id":235839,"user_name":"夜空咏叹调","can_delete":false,"product_type":"c1","uid":1189074,"ip_address":"","ucode":"CC9350BCF218CD","user_header":"https://static001.geekbang.org/account/avatar/00/12/24/d2/a5e272ce.jpg","comment_is_top":false,"comment_ctime":1595217124,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595217124","product_id":100039001,"comment_content":"对于设计一个复杂系统，由于要思考的场景多，特殊情况多，因此很难一次就把所有情况考虑到，因此不应该把所有情况考虑到，而是先写一个比较简单的场景，通过这个场景，梳理整个系统的运作流程，理清思路，根据这个场景，再去设计相应的模块，其实这个场景的编写就相当于一块敲门砖，让自己对整个模块功能和流程更加清晰。","like_count":0},{"had_liked":false,"id":223822,"user_name":"花花大脸猫","can_delete":false,"product_type":"c1","uid":1117318,"ip_address":"","ucode":"8ABDB3F7F4FB0F","user_header":"https://static001.geekbang.org/account/avatar/00/11/0c/86/8e52afb8.jpg","comment_is_top":false,"comment_ctime":1591191534,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1591191534","product_id":100039001,"comment_content":"1.一般都是先考虑目标群体是啥，需要解决目标群里哪些难题，基于此画些简单的线框图，把大概的业务流转模块简单切分开，然后基于业务流转模块进行具象化的场景考虑（可以参考些类似的成熟行业解决方案）。这之后可以结合uml工作画出简单的设计思路。<br>2.产品思维可能后期比技术思维要更加重要，因为技术是为产品服务的，如果技术更能了解产品的需求，贴切用户的产品角度，形成自己的产品简介，那样的话与产品经理之间的合作会更加的如鱼得水，而不是单方面的接收产品经理的转述，这样会使得双方更近一步，相向而行，那做出来的产品也会更加的优秀。","like_count":0},{"had_liked":false,"id":219855,"user_name":"王先森","can_delete":false,"product_type":"c1","uid":1022267,"ip_address":"","ucode":"1AF1A395107479","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/3b/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1590110949,"is_pvip":false,"replies":[{"id":"86622","content":"java spring可以放到切面中进行~","user_name":"作者回复","comment_id":219855,"uid":"1190123","ip_address":"","utype":1,"ctime":1594783463,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1590110949","product_id":100039001,"comment_content":"案例统计时间时对业务代码是侵入式,针对php语言是可以有定时脚本去统计,大家还有什么其他的方式么？","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495965,"discussion_content":"java spring可以放到切面中进行~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594783463,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":219278,"user_name":"师哥","can_delete":false,"product_type":"c1","uid":1333376,"ip_address":"","ucode":"A86CD1661D370F","user_header":"https://static001.geekbang.org/account/avatar/00/14/58/80/c9e232b6.jpg","comment_is_top":false,"comment_ctime":1589982861,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589982861","product_id":100039001,"comment_content":" 技术人很应该懂产品，这样技术人在设计系统的时候能把握方向型问题。","like_count":0},{"had_liked":false,"id":216194,"user_name":"Aliliin","can_delete":false,"product_type":"c1","uid":1025239,"ip_address":"","ucode":"61F9A09BB6650F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/d7/5d2bfaa7.jpg","comment_is_top":false,"comment_ctime":1589203896,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589203896","product_id":100039001,"comment_content":"对于只会一门PHP语言的我来说，文稿中的代码，确实看不懂。","like_count":0},{"had_liked":false,"id":211548,"user_name":"worthto","can_delete":false,"product_type":"c1","uid":1387712,"ip_address":"","ucode":"41D7ABBBD2E7FF","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/N6yjnrLnMW4XVSkBr3f0N3F962l35b5j0kib9VSlAqqbf6iaoCPicL1WnJ9KjgT4egQ7A2G0Zx3OayaK4yuoZrUVA/132","comment_is_top":false,"comment_ctime":1587981264,"is_pvip":false,"replies":[{"id":"78751","content":"😂 这不属于专栏学习的重点","user_name":"作者回复","comment_id":211548,"uid":"1190123","ip_address":"","utype":1,"ctime":1588042038,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1587981264","product_id":100039001,"comment_content":"Metrics 类的线程是一个单线程的模型，如果线程池使用多个线程，老师能否帮我们设计一款支持多线程并发的统计模型。","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493294,"discussion_content":"😂 这不属于专栏学习的重点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588042038,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208880,"user_name":"冬渐暖","can_delete":false,"product_type":"c1","uid":1586800,"ip_address":"","ucode":"907E41AAE9A36C","user_header":"https://static001.geekbang.org/account/avatar/00/18/36/70/00122b24.jpg","comment_is_top":false,"comment_ctime":1587457125,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587457125","product_id":100039001,"comment_content":"针对非业务的通用框架开发，如何做需求分析和设计？<br><br>1.把需求按功能拆分。一个功能拆成一个点。比如接口响应时间拆成一个功能、调用次数拆<br>2.将各个功能慢慢拆细，难度大的可以先不考虑性能之类的问题，之后再来改。比如如果是对系统业务没关系的，就用Redis存。有关系数据小就用mysql，庞大就用MongoDB。重复这个步骤，直至不能再拆，其实这个就是原子性。<br>3.先做好功能，再考虑效率之类的东西。注意的有性能高、耦合度低、拓展强、错了会不会影响主流程（搞不懂，一般都是一步错，步步错。如果真的无关的，那就新开个线程来跑）<br>","like_count":0},{"had_liked":false,"id":198121,"user_name":"和你一起搬砖的胡大爷","can_delete":false,"product_type":"c1","uid":1008587,"ip_address":"","ucode":"54607F4E17917A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/cb/7c004188.jpg","comment_is_top":false,"comment_ctime":1585410690,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585410690","product_id":100039001,"comment_content":"现在产品经理的门槛好低，啥事干不好就去做产品。产品经理思维还真不一定比得上码农<br>","like_count":0},{"had_liked":false,"id":186107,"user_name":"考休","can_delete":false,"product_type":"c1","uid":1053955,"ip_address":"","ucode":"968DFC00D6D0CF","user_header":"https://static001.geekbang.org/account/avatar/00/10/15/03/c0fe1dbf.jpg","comment_is_top":false,"comment_ctime":1583759009,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583759009","product_id":100039001,"comment_content":"技术人员当然需要有产品思维，拥有良好的产品思维，将有助于技术方案的设计甚至是架构上的优化。","like_count":0},{"had_liked":false,"id":185342,"user_name":"zmysang","can_delete":false,"product_type":"c1","uid":1642663,"ip_address":"","ucode":"8A98057E7819DD","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/tjhOILHBAmlx6YiaTZJzqzxn1uyB6XpdvGDIZhBn127TYEcoLLzxRiaKvtVd3HllQqPx7cqf2YmibyBUgGGGJPDkw/132","comment_is_top":false,"comment_ctime":1583564532,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583564532","product_id":100039001,"comment_content":"对于比较复杂的架构设计，可以先不用考虑到每个功能点的逻辑细节。先有一个整体的模块划分，然后再逐步去细化。<br>可以借鉴最小原型和画系统设计图的思想，并且分析每个模块分别需要具有的功能性需求和非功能性需求。这里非功能性需求可能会比较容易被忽略。<br>做技术的人应该要具备产品能力。这样可以帮助自己更加细化用户故事，考虑的更全面。","like_count":0},{"had_liked":false,"id":182132,"user_name":"小文同学","can_delete":false,"product_type":"c1","uid":1001893,"ip_address":"","ucode":"48F2AEB989C12A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/a5/e4c1c2d4.jpg","comment_is_top":false,"comment_ctime":1582715197,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582715197","product_id":100039001,"comment_content":"最近也在独立设计一点功能模块，从需求到构思到产出是一件不容易的事情。<br><br>程序应该是我们的作品，一个作品就会有优劣之分，一个有品位有产品意识的程序员不会让自己的作品一塌糊涂的。","like_count":0},{"had_liked":false,"id":182019,"user_name":"Heaven","can_delete":false,"product_type":"c1","uid":1694207,"ip_address":"","ucode":"FA33FBCC66C911","user_header":"https://static001.geekbang.org/account/avatar/00/19/d9/ff/b23018a6.jpg","comment_is_top":false,"comment_ctime":1582693378,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582693378","product_id":100039001,"comment_content":"首先对于问题1,我一般是开发比较通用的系统的时候，会将自己带入使用人员，也就是使用这个框架的开发人员的角度去思考，思考它可能进行什么样的扩展，并且给它留有相对应的接口方面，同样自己开发的时候,也使用这个接口，最后通过依赖注入的方式,来融入到自己的产品,带入客户的思维很重要<br>对于问题2,开发人员理所当然的需要具有一些产品思维，但是现在的互联网公司,他们的产品线都非常紧的情况下,我们开发人员想要对整个产品有一个大而且深的理解，是需要浪费一定时间的.而实际上的开发的工作任务很重,基本是不会给我们留有这么多的时间的，这就需要我们从其他方面去弥补，比如说提高自己的产品思维，让我们首先接触到这个产品的时候，自己就去脑补出产品接下来的发展,用户的使用,这就需要大量的开发经验了<br>还有就是,希望老师能讲一讲线框图如何去画,因为一直都是见到别人给的线框图","like_count":0},{"had_liked":false,"id":180338,"user_name":"M","can_delete":false,"product_type":"c1","uid":1810576,"ip_address":"","ucode":"06F26E1D62E9C9","user_header":"https://wx.qlogo.cn/mmopen/vi_32/eLNeJNaEkwGSK7xvtamMibVLMy2MpbIqX3iaEhT7JtSnTRMRTwZ2j4HX7WAapiashbiaBDVriaXKSP0Oeic6ZAEVEXag/132","comment_is_top":false,"comment_ctime":1582259624,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582259624","product_id":100039001,"comment_content":"老师，这两节课有完整的代码么，","like_count":0},{"had_liked":false,"id":180315,"user_name":"DFighting","can_delete":false,"product_type":"c1","uid":1233193,"ip_address":"","ucode":"F3BA2426FF8582","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/29/1b1234ed.jpg","comment_is_top":false,"comment_ctime":1582255499,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1582255499","product_id":100039001,"comment_content":"业务产品为客户提供服务，更关注业务逻辑；框架和一些底层的技术研究与开发，是为上一层的调用者服务的，除非是做最底层的系统开发，不然大多数框架的设计与开发都应该具有一定的产品思维，不然很难维持某个框架或技术组件的不断更新与迭代","like_count":0},{"had_liked":false,"id":180021,"user_name":"不记年","can_delete":false,"product_type":"c1","uid":1045945,"ip_address":"","ucode":"287E40C68356DC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f5/b9/888fe350.jpg","comment_is_top":false,"comment_ctime":1582166915,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582166915","product_id":100039001,"comment_content":"技术人应该具备产品思维，只有明确你写的代码，你开发的系统是为谁服务的，解决了什么问题，才能够在系统设计，技术选型，编写业务代码时心里有数","like_count":0},{"had_liked":false,"id":171234,"user_name":"uranusleon","can_delete":false,"product_type":"c1","uid":1186044,"ip_address":"","ucode":"3CD5222E590A92","user_header":"https://static001.geekbang.org/account/avatar/00/12/18/fc/a0f8a88d.jpg","comment_is_top":false,"comment_ctime":1578884909,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578884909","product_id":100039001,"comment_content":"25：对于负责需求的开发，要用产品思维，首先对需求进行需求设计，然后开发出原型和画出模型图，最后迭代优化。<br><br>需求设计<br>\t1. 分为功能性需求设计和非功能性需求设计。功能性需求设计是以完成需求的基本功能进行设计；非功能需求设计是考虑功能的扩展性，通用性，性能等。<br>\t2. 具体方法可以将需求拆解，按顺序用简短的语句罗列出来，清晰有条理。<br><br>初步开发设计：在复杂需求开发时，不方便入手，有如下方法<br>\t1. 可以根据Prototype(最小原型)的思想，聚焦一个简单的应用场景，实现一个简单的原型。<br>\t2. 画出初步的系统设计图<br>        3. 根据原型和设计图做迭代优化。","like_count":0},{"had_liked":false,"id":171179,"user_name":"相逢是缘","can_delete":false,"product_type":"c1","uid":1060730,"ip_address":"","ucode":"CB299F53A95654","user_header":"https://static001.geekbang.org/account/avatar/00/10/2f/7a/ab6c811c.jpg","comment_is_top":false,"comment_ctime":1578878050,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578878050","product_id":100039001,"comment_content":"打卡<br>针对非业务通用框架的需求分析：<br>一、功能性需求分析<br>1、最好把信息整理成短的、罗列比较规整、分门别类的信息。<br>2、挖掘隐藏的需求<br>二、非功能需求分析<br>易用性、性能、扩展性、容错性、通用性<br>框架设计：<br>聚焦一个简单应用的场景、实现一个最小的原型，有一个看得见，摸得着的东西，之后进行迭代和优化。","like_count":0},{"had_liked":false,"id":170799,"user_name":"迷羊","can_delete":false,"product_type":"c1","uid":1286251,"ip_address":"","ucode":"85AF8CED3436C8","user_header":"https://static001.geekbang.org/account/avatar/00/13/a0/6b/0a21b2b8.jpg","comment_is_top":false,"comment_ctime":1578726306,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578726306","product_id":100039001,"comment_content":"产品能力非常重要，这样你就会知道这个产品未来会有什么需求变化，也就可以针对这些可能出现的需求提前设计好代码的可扩展性。","like_count":0},{"had_liked":false,"id":170797,"user_name":"quietwater","can_delete":false,"product_type":"c1","uid":1055029,"ip_address":"","ucode":"C25E2CD356D3F9","user_header":"https://static001.geekbang.org/account/avatar/00/10/19/35/be8372be.jpg","comment_is_top":false,"comment_ctime":1578724297,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1578724297","product_id":100039001,"comment_content":"应对复杂系统的设计实现，我今天讲到了聚焦简单场景、最小原型、画图等几个技巧，你还有什么经验可以分享给大家吗？<br>复制系统的设计和实现都是迭代出来的，很难一步到位，除非是开发过类似的系统。自上而下和自下而上是基本的思路，通常都会用到，具体因人而异。但通过一个具体的业务场景来了解系统的复杂性是绝对必要的。<br><br>今天提到的线框图、最小原型、易用性等，实际上都是产品设计方面的手段或者概念，应用到像框架这样的技术产品的设计上也非常有用。你觉得对于一个技术人来说，产品能力是否同样重要呢？技术人是否应该具备一些产品思维呢？<br>技术人不仅要具备产品思维，还有项目思维，测试思维，运维思维都是必不可少的，甚至市场思维。不要自我设限，最牛的技术人绝对是会当凌绝顶，一览众山小的。","like_count":0,"discussions":[{"author":{"id":1649057,"avatar":"https://static001.geekbang.org/account/avatar/00/19/29/a1/41607383.jpg","nickname":"hello","note":"","ucode":"4F42DAA5DB5C38","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349850,"discussion_content":"开始读了吗？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1613580800,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3081038,"avatar":"https://static001.geekbang.org/account/avatar/00/2f/03/4e/ab7b85ba.jpg","nickname":"小小学习家","note":"","ucode":"D6D530C0622DE2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585857,"discussion_content":"20222.8了，读了没有","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661849910,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1172090,"avatar":"https://static001.geekbang.org/account/avatar/00/11/e2/7a/38a27e47.jpg","nickname":"蓦然回首","note":"","ucode":"B17658DCFE6402","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582962,"discussion_content":"坐等回答！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659845623,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1607786,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKxyQPXkicIdnjmwbROOLzEfUYz7iaZIp6CKKseIlwBiaof9Sl3SZp9RuK9yt8FZoXD8MOAXByetuWwQ/132","nickname":"Totoro_Sama","note":"","ucode":"2D157076F1D5B7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579296,"discussion_content":"哈哈 你们真的都是魔鬼","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657326801,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2763179,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/29/ab/59a6e437.jpg","nickname":"Kevin","note":"","ucode":"3588850B3370C8","race_medal":5,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578799,"discussion_content":"2022.7了，读了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657021123,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1024164,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a0/a4/b060c723.jpg","nickname":"阿斯蒂芬","note":"","ucode":"61D5E3BDA4EBC5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575468,"discussion_content":"求笔记分享一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654852664,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2076251,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/ae/5b/4bd42286.jpg","nickname":"宋计洋","note":"","ucode":"9A34E8F71C6CBD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":564536,"discussion_content":"读了多少了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650272072,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1025748,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a6/d4/84ce26cb.jpg","nickname":"VVK","note":"","ucode":"6C07E1548DEABA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549012,"discussion_content":"层主读完了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643514323,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1171165,"avatar":"https://static001.geekbang.org/account/avatar/00/11/de/dd/67d4e0d2.jpg","nickname":"小苏","note":"","ucode":"FB36B69864F7C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548879,"discussion_content":"哈哈，你们都是魔鬼吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643432495,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1750549,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/b6/15/e2cfd10d.jpg","nickname":"ImYours°","note":"","ucode":"51F653129034C9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545122,"discussion_content":"哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641834591,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2608768,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/9oJnE8uzky99QCCaRiajMEeSic0505fEdBicJzPXtCB7HGr8OZOTib2l6Qiap50zibyFxRMecm1CPEttiaQac5OHWBZibQ/132","nickname":"Geek_9f0582","note":"","ucode":"DCB03F384FCB18","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533536,"discussion_content":"笔记看一下谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637897335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1107907,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e7/c3/41c0c47d.jpg","nickname":"lcy","note":"","ucode":"B709AF38B68E53","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391339,"discussion_content":"代码下载了吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630406903,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1612910,"avatar":"https://static001.geekbang.org/account/avatar/00/18/9c/6e/01b4d5d2.jpg","nickname":"liupan","note":"","ucode":"C6C7C48BCCAE12","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387614,"discussion_content":"拿到源码了么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628304780,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1640517,"avatar":"https://static001.geekbang.org/account/avatar/00/19/08/45/62ff43de.jpg","nickname":"HooYa","note":"","ucode":"43F3577E7D939A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386515,"discussion_content":"读完了吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627624839,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1001970,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/49/f2/25cfa472.jpg","nickname":"寒溪","note":"","ucode":"67B9F1A1C15A20","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385036,"discussion_content":"哥们儿读了多少了？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626856866,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2441239,"avatar":"","nickname":"白开水","note":"","ucode":"9D4CD6057200FD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374567,"discussion_content":"读完了么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621250358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1438860,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f4/8c/0866b228.jpg","nickname":"子房","note":"","ucode":"CB05938C248BB3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347530,"discussion_content":"读完了么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612250724,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170494,"user_name":"莫大-潇湘夜雨","can_delete":false,"product_type":"c1","uid":1068506,"ip_address":"","ucode":"893824ED26444D","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/da/8af6f035.jpg","comment_is_top":false,"comment_ctime":1578621427,"is_pvip":false,"replies":[{"id":"67745","content":"是的，不过这是最小原型，我也讲到了可以暂时不用考虑并发问题","user_name":"作者回复","comment_id":170494,"uid":"1190123","ip_address":"","utype":1,"ctime":1580118749,"user_name_real":"王争"}],"discussion_count":2,"race_medal":0,"score":"1578621427","product_id":100039001,"comment_content":"老师，案例选用hashmap来存储监控数据，因为涉及到并发访问， 是不是换成并发包更合适一些呢？","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480999,"discussion_content":"是的，不过这是最小原型，我也讲到了可以暂时不用考虑并发问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580118749,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1286251,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a0/6b/0a21b2b8.jpg","nickname":"迷羊","note":"","ucode":"85AF8CED3436C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129667,"discussion_content":"老师一开始已经说了先写出一个简单的最小原型，然后慢慢迭代上去，怎么简单怎么来，后期再慢慢迭代。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578725768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169601,"user_name":"不似旧日","can_delete":false,"product_type":"c1","uid":1161271,"ip_address":"","ucode":"DF4C5E3AB9570C","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/37/98991aeb.jpg","comment_is_top":false,"comment_ctime":1578386708,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578386708","product_id":100039001,"comment_content":"走马观花的看了一遍，回头有时间了再看。","like_count":0},{"had_liked":false,"id":168872,"user_name":"志振爱咋滴咋滴","can_delete":false,"product_type":"c1","uid":1237624,"ip_address":"","ucode":"E7A5049920C101","user_header":"https://static001.geekbang.org/account/avatar/00/12/e2/78/9241b7b2.jpg","comment_is_top":false,"comment_ctime":1578208014,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578208014","product_id":100039001,"comment_content":"1.在目前团队的中，我们都是以一个简单的用户故事开始，身为用户，我可以...，以便我可以...，交付的内容以验收条件为基础，不一定是详细的可靠地，只要从这一点出发，理解用户需求，了解实现目的，然后才是慢慢的优化和重构<br>2.很多时候小团队里面不一定有专业的产品经理或者需求分析师，这时候技术人员会需要直接面对客户或者需求方，那就需要一定的产品思维，去理解客户的需求，根据交互经验，技术实现周期，难度等方面去给用户提供意见和看法，而不是仅仅从可以做不可以做，想做不想做出发简单的表达意见。","like_count":0},{"had_liked":false,"id":168623,"user_name":"L🚲🐱","can_delete":false,"product_type":"c1","uid":1577856,"ip_address":"","ucode":"08A012739614DE","user_header":"https://static001.geekbang.org/account/avatar/00/18/13/80/2c9da1b1.jpg","comment_is_top":false,"comment_ctime":1578125177,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578125177","product_id":100039001,"comment_content":"技术人也需要一定的产品思维, 先实现一个原型, 然后再迭代优化, 这是现在软件开发的常见套路, 但是如果是外包的话, 很少有后续多次迭代的情况","like_count":0},{"had_liked":false,"id":168609,"user_name":"Johar","can_delete":false,"product_type":"c1","uid":1101969,"ip_address":"","ucode":"834136A6F64CDC","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/91/89123507.jpg","comment_is_top":false,"comment_ctime":1578122308,"is_pvip":false,"discussion_count":0,"race_medal":2,"score":"1578122308","product_id":100039001,"comment_content":"作为一名软件开发工程师，必须要有一定的产品设计意识，需要考虑用户的实际使用场景，怎么使用，怎么做到业务闭环。","like_count":0},{"had_liked":false,"id":168104,"user_name":"JM","can_delete":false,"product_type":"c1","uid":1737845,"ip_address":"","ucode":"5CCCD7D0811A54","user_header":"https://static001.geekbang.org/account/avatar/00/1a/84/75/e3e5072d.jpg","comment_is_top":false,"comment_ctime":1578014139,"is_pvip":false,"replies":[{"id":"65966","content":"1. 我们可以通过切面的方式，在某一个地方统一加timestamp，而不用每个接口都加timestamp<br>2. 每个接口隶属不同team是什么意思呢？","user_name":"作者回复","comment_id":168104,"uid":"1190123","ip_address":"","utype":1,"ctime":1578491172,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1578014139","product_id":100039001,"comment_content":"这个例子里面每个接口程序块的开头和结尾都要加上timestamp，如果要统计成百上千个接口，是不是有更高效的方式呢？每个接口可能会隶属于不同的team，那这样是不是需要和多个team沟通合作，沟通协作成本很高啊。","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494586,"discussion_content":"可以结合着一块看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594389077,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167905,"user_name":"李心宇🦉","can_delete":false,"product_type":"c1","uid":1208306,"ip_address":"","ucode":"C381CA80170D5B","user_header":"https://static001.geekbang.org/account/avatar/00/12/6f/f2/1f77b0bd.jpg","comment_is_top":false,"comment_ctime":1577960940,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577960940","product_id":100039001,"comment_content":"一个不太成熟的思路，一个类处理数据的保存和统计，另外一个类类似一个秒表，提供start和stop两个方法，把API的调用和响应时间写入统计类。<br><br><br>type ApiStatis struct {<br>\tStatis map[string]map[string]float64<br>\tRecord map[string][][]time.Time<br>}<br><br>type StopWatch struct {<br>\tApiName     string<br>\tTimeStarted time.Time<br>\tTimeStopped time.Time<br>\tStatis      *ApiStatis<br>}<br><br>func (s *ApiStatis) GetStopWatch(name string) *StopWatch {<br>\treturn &amp;StopWatch{ApiName: name, Statis: s}<br>}<br><br>func (w *StopWatch) Start() {<br>\tw.TimeStarted = time.Now()<br>}<br><br>func (w *StopWatch) Stop() {<br>\tw.TimeStopped = time.Now()<br>\trecord, ok := w.Statis.Record[w.ApiName]<br>\trecord = append(record, []time.Time{w.TimeStarted, w.TimeStopped})<br>\tif !ok {<br>\t\tw.Statis.Record[w.ApiName] = record<br>\t}<br>}","like_count":0},{"had_liked":false,"id":167636,"user_name":"君哥聊技术","can_delete":false,"product_type":"c1","uid":1325816,"ip_address":"","ucode":"2C9A22BCE4C79E","user_header":"https://static001.geekbang.org/account/avatar/00/14/3a/f8/c1a939e7.jpg","comment_is_top":false,"comment_ctime":1577884238,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577884238","product_id":100039001,"comment_content":"1.对于大型复杂的系统，可以先进行功能模块拆分，确定好业务边界，部署方式，模块间通信，对单个模块使用文章中的绘图方法来实现。<br>2.我觉得程序员必须具备产品思维。假如我们做的直接面向用户的系统，思考用户使用情况会对我们的设计实现有很好的指导作用。假如我们做的是提供给上游系统的服务，要考虑上游系统的情况，比如调用链，服务修改对上游造成的工作量，调用频次，故障影响等。","like_count":0},{"had_liked":false,"id":167455,"user_name":"xavier","can_delete":false,"product_type":"c1","uid":1243128,"ip_address":"","ucode":"2F7918EA37ED9F","user_header":"https://static001.geekbang.org/account/avatar/00/12/f7/f8/3c0a6854.jpg","comment_is_top":false,"comment_ctime":1577806437,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1577806437","product_id":100039001,"comment_content":"对于复杂系统，先按照功能模块划分，然后各个击破。","like_count":0,"discussions":[{"author":{"id":1326336,"avatar":"https://static001.geekbang.org/account/avatar/00/14/3d/00/e66b2fac.jpg","nickname":"大板","note":"","ucode":"BF3E8DFCA10460","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":154972,"discussion_content":"名字有意思。深度学习的初始化方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580205170,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167402,"user_name":"Geek_342489","can_delete":false,"product_type":"c1","uid":1477359,"ip_address":"","ucode":"40610664021607","user_header":"https://static001.geekbang.org/account/avatar/00/16/8a/ef/ac2937ac.jpg","comment_is_top":false,"comment_ctime":1577784498,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577784498","product_id":100039001,"comment_content":"之前看我们中心同事开发的一些监控、鉴权相关的中间件代码感觉很牛，但具体哪里牛说不上来，听了争哥的课，做到知其所以然，感觉距离自己写出让别人“感觉很牛”的代码更近了一步，感谢！","like_count":0},{"had_liked":false,"id":167384,"user_name":"satoshi","can_delete":false,"product_type":"c1","uid":1114872,"ip_address":"","ucode":"11508C95259E97","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLQcr5YD5xznNjMxltFI04NgpTWWicKD3QicBfshIEWtckXNYMicjdNfQu8w5hSTGicuxUg6sOI8yfoNw/132","comment_is_top":false,"comment_ctime":1577781568,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577781568","product_id":100039001,"comment_content":"解答了我好多的疑惑，每天都盼着有更新","like_count":0},{"had_liked":false,"id":167247,"user_name":"lmdcx","can_delete":false,"product_type":"c1","uid":1334409,"ip_address":"","ucode":"F2CDD0091ADFD7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIjRETqRjvLESLDZkNTjIiaSibtNYBaS1o8WMUicOFn3ycF3Mgh6LRJibqSBjVBjiaO2ibW0gHkafATb21A/132","comment_is_top":false,"comment_ctime":1577751587,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577751587","product_id":100039001,"comment_content":"本节理解：<br>1. 功能列表，往往对应方法签名列表，主要分为采集功能、聚合计算功能、持久化功能<br>2.聚合计算（功能列表的一部分）的功能往往在持久化的基础之上<br>3.存储部分是采集部分的结果，又常常是聚合功能的输入<br>  当然如果使用了其他同学留言说的流计算，可能这个存储相当程度上指缓存<br>4.最小原型部分当然是个好办法，我个人唯一可以补充的是，老师和大家肯定也这么做了，但是未提到的是：做最小原型时，可以记下很多的 TODO 和疑问，然后通过反复迭代修复补充改进<br>5.我个人还有一种感觉，就是每一个层面都会有核心部分，核心部分往往是稳定的，<br>  还有一些啮合部分，啮合部分往往是可扩展的，比如Spring 的视图解析，数据源适配，<br>  当然SpringBoot 也提供了StopWatch这样的功能和老师现在做的功能有部分雷同，可以对比参考，可能会对理解整个功能有很好的帮助","like_count":0},{"had_liked":false,"id":167242,"user_name":"Chen","can_delete":false,"product_type":"c1","uid":1503113,"ip_address":"","ucode":"C1128558AB5BC4","user_header":"https://static001.geekbang.org/account/avatar/00/16/ef/89/8c73a24d.jpg","comment_is_top":false,"comment_ctime":1577749020,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577749020","product_id":100039001,"comment_content":"肯定要有产品思维啊，不然怎么跟产品扯皮","like_count":0},{"had_liked":false,"id":167203,"user_name":"刘大明","can_delete":false,"product_type":"c1","uid":1035081,"ip_address":"","ucode":"83C063FBD9BF2B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cb/49/0b9ffc8e.jpg","comment_is_top":false,"comment_ctime":1577715731,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577715731","product_id":100039001,"comment_content":"没有经历过特别复杂的系统。一般工作中遇到需求，第一步是做业务分解和用户故事。将一个功能分解成一个个小任务，理清楚每个小任务之间的关联关系。任务分解清晰之后可以用tdd的方式实现一个最小原型版本，然后在这个最小原型的版本上面持续重构。<br>问题2我觉得技术肯定还是要懂产品的，毕竟产品才是公司最需要的东西，有产品能力的技术才能在很多编码和设计的时候让产品更容易扩展。","like_count":0},{"had_liked":false,"id":167192,"user_name":"DullBird","can_delete":false,"product_type":"c1","uid":1110494,"ip_address":"","ucode":"80E2FD5F9687CB","user_header":"https://static001.geekbang.org/account/avatar/00/10/f1/de/3ebcbb3f.jpg","comment_is_top":false,"comment_ctime":1577712701,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577712701","product_id":100039001,"comment_content":"问题1: <br>1.1一般会画一下用例图，标注一下优先级，然后针对核心用例，简化它，不要考虑太多个性化的东西。先实现最通用简单的一个场景。<br>1.2 流程很复杂的时候，会画流程图，泳道流程图，一方面可以很清楚查漏补缺，另一方面泳道就划分了模块。<br>问题2: 其实上面1.1，就需要程序员有产品的思维，要知道什么是业务最核心的需求，哪些个性化其实只是为了满足这个核心需求的点缀。程序员不能只关注技术，否则可能花了很多时间。但是解决了一个并不是业务痛点的情况。<br>","like_count":0},{"had_liked":false,"id":167107,"user_name":"Ken张云忠","can_delete":false,"product_type":"c1","uid":1134288,"ip_address":"","ucode":"D0BAC9FC17DE2B","user_header":"https://static001.geekbang.org/account/avatar/00/11/4e/d0/d8a5f720.jpg","comment_is_top":false,"comment_ctime":1577692725,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577692725","product_id":100039001,"comment_content":"1.应对复杂系统的设计实现，我今天讲到了聚焦简单场景、最小原型、画图等几个技巧，你还有什么经验可以分享给大家吗？<br>找个类似的系统多体验几把.<br>平时多积累各种业务背景知识.<br>有条件的可以找有经验的前辈了解业务,快速得到一个业务模型.<br>2.今天提到的线框图、最小原型、易用性等，实际上都是产品设计方面的手段或者概念，应用到像框架这样的技术产品的设计上也非常有用。你觉得对于一个技术人来说，产品能力是否同样重要呢？技术人是否应该具备一些产品思维呢？<br>产品能力对于一个技术人来说是重要的,但不是同样重要的.产品经理也是专业的活,业务深层次的战略性的思考还是得要有专业的人来干,技术人员还是该要把精力聚焦在自身的工作内容上.<br>但是技术人是该要具备一些产品思维,可以方便与业务人员进行沟通交流,可以帮助深入理解业务,可以容易理解业务架构和程序.","like_count":0},{"had_liked":false,"id":167089,"user_name":"逍遥思","can_delete":false,"product_type":"c1","uid":1015512,"ip_address":"","ucode":"340F05C786730F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7e/d8/92a98fb6.jpg","comment_is_top":false,"comment_ctime":1577689214,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577689214","product_id":100039001,"comment_content":"技术人必须具备产品思维，因为哪怕是交付的一份代码，也是一个广义上的产品","like_count":0},{"had_liked":false,"id":167067,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1577682301,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577682301","product_id":100039001,"comment_content":"1.都提了tdd怎么能少掉测试代码的编写呢。哪怕是最小原型，也要尽量区分好稳定层和变化层，然后针对变化层构建完整的测试用例。这对后续持续重构或则迭代功能都能发挥回归测试的价值。回归测试有助于进一步降低写代码时的心智负担，写好跑一跑，有问题debug调整下，而不是每一步都用意念测试。省时省心安全。<br><br>2.产品技术本就是一体两面。关于功能的易用需要产品思维，关于功能的健全需要技术背景。关于大功能的落地，无论是需求文档的编写还是代码实现的落地，都需要“干条条”的梳理和一系列“导向工具”的辅助（各种图或表格）。做业务的，兼备产品思维比深入底层的技术重要，毕竟这更有利于优质（代码、效率和功能）软件的产出。而且技术架构师和科学家也要糊口的，你个写业务的全包了，人家拿什么吃饭。（以上只是开个玩笑，但社会分工是真的重要）","like_count":0},{"had_liked":false,"id":167065,"user_name":"Kang","can_delete":false,"product_type":"c1","uid":1237655,"ip_address":"","ucode":"088A8DA0A16BDE","user_header":"https://static001.geekbang.org/account/avatar/00/12/e2/97/dfadcc92.jpg","comment_is_top":false,"comment_ctime":1577681410,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577681410","product_id":100039001,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":167059,"user_name":"Eden Ma","can_delete":false,"product_type":"c1","uid":1457408,"ip_address":"","ucode":"755312F0D154F9","user_header":"https://static001.geekbang.org/account/avatar/00/16/3d/00/7daa7403.jpg","comment_is_top":false,"comment_ctime":1577679336,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577679336","product_id":100039001,"comment_content":"我觉得拥有产品思维对一个开发者来说非常重要,不但工作中更有利于与其它岗位的人员交流,而且如果做独立开发作用也是极大的.","like_count":0},{"had_liked":false,"id":167056,"user_name":"shniu","can_delete":false,"product_type":"c1","uid":1019555,"ip_address":"","ucode":"E64CD8BED96D8D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8e/a3/d7e5fe8a.jpg","comment_is_top":false,"comment_ctime":1577678572,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577678572","product_id":100039001,"comment_content":"1. 自己没有做过特别复杂的系统，开发的项目时做需求分析和系统设计，一般是从典型的User Story开始，使用TDD，持续重构，版本迭代的思想一步步来做，一开始就把功能拆小，然后使用组合思维，看要不要某些功能聚合在一起；尽可能分离稳定的需求和变化的需求，后来接触了 DDD 的战略设计和战术设计，确实也很有帮助：不断深入理解业务的基础上，去划分不同上下文，定义通用语言，再结合一些战术技巧进行落地，最重要的是将业务内聚；<br>2. 需要具备产品思维；产品思维从不一样的角度来处理事情，我们写的代码做的设计不仅自己是用户，其他人也是，有了产品思维，我们就会更多考虑易用性、通用性、容错和扩展等","like_count":0},{"had_liked":false,"id":167047,"user_name":"守拙","can_delete":false,"product_type":"c1","uid":1738326,"ip_address":"","ucode":"F594B2DA3F6D4F","user_header":"https://static001.geekbang.org/account/avatar/00/1a/86/56/509535da.jpg","comment_is_top":false,"comment_ctime":1577677151,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577677151","product_id":100039001,"comment_content":"Question1:<br><br>应对复杂系统的设计实现，我今天讲到了聚焦简单场景、最小原型、画图等几个技巧，你还有什么经验可以分享给大家吗？<br><br><br><br>Answer:<br><br>针对复杂系统设计实现,要站在巨人的肩膀上:即搭梯子查阅洋文资料,通过翻阅资料取得灵感.<br><br><br><br>Question2:<br><br>今天提到的线框图、最小原型、易用性等，实际上都是产品设计方面的手段或者概念，应用到像框架这样的技术产品的设计上也非常有用。你觉得对于一个技术人来说，产品能力是否同样重要呢？技术人是否应该具备一些产品思维呢？<br><br><br><br>Answer:<br><br>技术人应当具备一些产品思想,但产品思维是锦上添花.<br><br>换句话说,产品思维不如技术能力有用.<br><br>如果技术能力到达了瓶颈,再钻研技术收益严重衰减,当且仅当如此情况,才考虑产品能力的提升.<br><br>总之,产品能力相对重要,但不如技术能力同样重要.","like_count":0},{"had_liked":false,"id":167031,"user_name":"liyghting","can_delete":false,"product_type":"c1","uid":1108970,"ip_address":"","ucode":"439794ECEEFD26","user_header":"https://static001.geekbang.org/account/avatar/00/10/eb/ea/7d00f657.jpg","comment_is_top":false,"comment_ctime":1577674788,"is_pvip":false,"replies":[{"id":"65138","content":"是的 lomg更好 我改下","user_name":"作者回复","comment_id":167031,"uid":"1190123","ip_address":"","utype":1,"ctime":1577949523,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1577674788","product_id":100039001,"comment_content":"Metrics类中List&lt;Double&gt;类型，怎么不是List&lt;Long&gt;，看使用的时候都是放的long时间。","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479720,"discussion_content":"是的 lomg更好 我改下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577949523,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167015,"user_name":"编程界的小学生","can_delete":false,"product_type":"c1","uid":1593289,"ip_address":"","ucode":"4A5BE9A5E877FA","user_header":"https://static001.geekbang.org/account/avatar/00/18/4f/c9/9f51fd27.jpg","comment_is_top":false,"comment_ctime":1577670300,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577670300","product_id":100039001,"comment_content":"之前用aop写了个通用的日志处理框架，结果没考虑到容错影，导致我的日志框架报错后，接入方主程序也抛出异常方法停止工作😢😢😢","like_count":0},{"had_liked":false,"id":167007,"user_name":"小晏子","can_delete":false,"product_type":"c1","uid":1132337,"ip_address":"","ucode":"3AAA6FB5ACB6AE","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/31/f35367c8.jpg","comment_is_top":false,"comment_ctime":1577668728,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1577668728","product_id":100039001,"comment_content":"1. 可以把设计跟同事一起讨论啊，三个臭皮匠顶个诸葛亮～<br>2. 产品能力很重要，没有好的产品能力，无法设计出让用户满意的产品，尤其是技术产品，从产品角度出发设计出来的API会更易于使用","like_count":0},{"had_liked":false,"id":167004,"user_name":"小可","can_delete":false,"product_type":"c1","uid":1006735,"ip_address":"","ucode":"8834AF621FA67D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/8f/551b5624.jpg","comment_is_top":false,"comment_ctime":1577667820,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577667820","product_id":100039001,"comment_content":"估计大多数人都是把简单问题复杂化，害怕解决方案不完美，这也要考虑，那也要考虑，到最后把自己陷进去，还有考虑不到的。😂","like_count":0},{"had_liked":false,"id":166991,"user_name":"知行合一","can_delete":false,"product_type":"c1","uid":1521486,"ip_address":"","ucode":"2B8E634FC4CFB7","user_header":"https://static001.geekbang.org/account/avatar/00/17/37/4e/5c3153b2.jpg","comment_is_top":false,"comment_ctime":1577665243,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577665243","product_id":100039001,"comment_content":"系统设计非常需要产品思维，只有对业务需求有足够的理解，才能留有扩展性，系统的稳定性才有可能实现。","like_count":0},{"had_liked":false,"id":166990,"user_name":"码到成功","can_delete":false,"product_type":"c1","uid":1251915,"ip_address":"","ucode":"E9CD9832CD14BD","user_header":"https://static001.geekbang.org/account/avatar/00/13/1a/4b/98c5a1e8.jpg","comment_is_top":false,"comment_ctime":1577664890,"is_pvip":false,"replies":[{"id":"64838","content":"太忙了 后面有空了吧","user_name":"作者回复","comment_id":166990,"uid":"1190123","ip_address":"","utype":1,"ctime":1577666868,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1577664890","product_id":100039001,"comment_content":"老师可以把每期的代码放到github上吗","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479704,"discussion_content":"太忙了 后面有空了吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577666868,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166985,"user_name":"终结者999号","can_delete":false,"product_type":"c1","uid":1055854,"ip_address":"","ucode":"33ADE61580B6DD","user_header":"https://static001.geekbang.org/account/avatar/00/10/1c/6e/6c5f5734.jpg","comment_is_top":false,"comment_ctime":1577664450,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1577664450","product_id":100039001,"comment_content":"技术人也需要具有产品思维，在一开始就确保可以生产出产品，测试，开发都可以接受的原型产品，这样之后大的骨骼不动，产品和测试也都能熟悉了。","like_count":0},{"had_liked":false,"id":166981,"user_name":"黄林晴","can_delete":false,"product_type":"c1","uid":1362631,"ip_address":"","ucode":"B15C38AECDA88F","user_header":"https://static001.geekbang.org/account/avatar/00/14/ca/c7/00e544c2.jpg","comment_is_top":false,"comment_ctime":1577663717,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577663717","product_id":100039001,"comment_content":"打卡✔<br>技术人同样需要产品思维与产品分析与设计的能力，不一定要求像产品一样精准，但自己的分析更有助于编码功能实现","like_count":0},{"had_liked":false,"id":166978,"user_name":"aya","can_delete":false,"product_type":"c1","uid":1325690,"ip_address":"","ucode":"F50E350DCF72D6","user_header":"https://static001.geekbang.org/account/avatar/00/14/3a/7a/a68f0ff8.jpg","comment_is_top":false,"comment_ctime":1577662771,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577662771","product_id":100039001,"comment_content":"最小原型，画流程草图的方式最常用，程序员应该有意识的培养自己的产品思维，但个人认为应该是在做好本职技术工作的基础上，去磨练自己的产品思维。","like_count":0},{"had_liked":false,"id":166966,"user_name":"MindController","can_delete":false,"product_type":"c1","uid":1159113,"ip_address":"","ucode":"3B9CECCD12CF6E","user_header":"https://static001.geekbang.org/account/avatar/00/11/af/c9/d9c72c60.jpg","comment_is_top":false,"comment_ctime":1577641850,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577641850","product_id":100039001,"comment_content":"是的，需要有产品思维，尤其是做框架这种技术产品，所以我在极客时间上也购买过产品课程。<br>还有一点，开发经常和产品起冲突，我们有了技术思维后，也能提出一些好的建议来。","like_count":0}]}