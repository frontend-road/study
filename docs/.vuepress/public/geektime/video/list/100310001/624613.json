{"id":624613,"title":"98｜再回首：“办公自动化”单元小结","content":"<p>你好，我是尹会生。</p><p>恭喜你又学完了一个章节，这一讲的编写时间刚好是春节，在这里祝愿你新春快乐。</p><p>这一章，我带你学习了Python的另一个应用领域——自动化办公。Python为什么能成为自动化办公的主力语言呢？我认为还是因为Python的简洁和第三方库的强大，它能帮助我们完成很多日常办公中的“杂事”。比如大量重复性的工作，你能用Python一次性完成，那些需要凌晨定时发送的邮件，能用Python自动发出去，为你释放大量宝贵的时间。</p><p>因此将Python应用到自动化办公的重点就是掌握丰富的外部接口。那么在这一讲，我将围绕Python自动化的两个神器，来为你总结一下Python自动化办公的重点。</p><h2>丰富的接口</h2><p>要说哪种编程语言的第三方库最丰富，Python肯定是首当其冲的。丰富的库让Python能够非常便捷地完成大量的日常工作。试想一下，如果完成一个重复合并Excel的工作要2小时，而开发一个Excel读取，搞懂Excel文件结构的工作要2小时以上，试问谁也不愿意使用Python来完成办公自动化工作。</p><p>相反，Python丰富的库可以通过pip命令直接安装openpyxl等Excel支持库。安装后，就像打开文本文档一样打开文件，操作Excel表格里的数据。就像操作二维的列表一样方便，这样才达到了操作简便的目的。</p>","comments":[{"had_liked":false,"id":392048,"user_name":"710526","can_delete":false,"product_type":"c3","uid":3754598,"ip_address":"上海","ucode":"73B310A1D13362","user_header":"","comment_is_top":false,"comment_ctime":1719823332,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"已学完","like_count":0},{"had_liked":false,"id":385030,"user_name":"760418","can_delete":false,"product_type":"c3","uid":3768167,"ip_address":"上海","ucode":"C160176FE97575","user_header":"","comment_is_top":false,"comment_ctime":1701951495,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"# 本题答案由 PatrickL 同学提供\nimport re\nfrom collections import Counter\nwith open(&#39;1.txt&#39;,&#39;r&#39;) as f:\n    data = f.read().lower()\nwords = re.findall(r&#39;\\w+&#39;, data)\nprint(Counter(words).most_common(5))","like_count":0},{"had_liked":false,"id":384981,"user_name":"760418","can_delete":false,"product_type":"c3","uid":3768167,"ip_address":"上海","ucode":"C160176FE97575","user_header":"","comment_is_top":false,"comment_ctime":1701869038,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"from docx import Document\nfrom openpyxl import Workbook,load_workbook\n\n# 关键代码\nworkbook1  = load_workbook(&quot;1.xlsx&quot;)\nwb_sheet_actived = workbook1.active\n\n\ndocument = Document()\ntable = document.add_table(rows = 0, cols = wb_sheet_actived.max_column)\ndocument.save(&#39;tables.docx&#39;)","like_count":0}]}