{"id":65312,"title":"21 | 哈希算法（上）：如何防止数据库中的用户信息被脱库？","content":"<p>还记得2011年CSDN的“脱库”事件吗？当时，CSDN网站被黑客攻击，超过600万用户的注册邮箱和密码明文被泄露，很多网友对CSDN明文保存用户密码行为产生了不满。如果你是CSDN的一名工程师，<strong><span class=\"orange\">你会如何存储用户密码这么重要的数据吗？仅仅MD5加密一下存储就够了吗？</span></strong> 要想搞清楚这个问题，就要先弄明白哈希算法。</p><p>哈希算法历史悠久，业界著名的哈希算法也有很多，比如MD5、SHA等。在我们平时的开发中，基本上都是拿现成的直接用。所以，我今天不会重点剖析哈希算法的原理，也不会教你如何设计一个哈希算法，而是从实战的角度告诉你，<strong>在实际的开发中，我们该如何用哈希算法解决问题</strong>。</p><h2>什么是哈希算法？</h2><p>我们前面几节讲到“散列表”“散列函数”，这里又讲到“哈希算法”，你是不是有点一头雾水？实际上，不管是“散列”还是“哈希”，这都是中文翻译的差别，英文其实就是“<strong>Hash</strong>”。所以，我们常听到有人把“散列表”叫作“哈希表”“Hash表”，把“哈希算法”叫作“Hash算法”或者“散列算法”。那到底什么是哈希算法呢？</p><p>哈希算法的定义和原理非常简单，基本上一句话就可以概括了。将任意长度的二进制值串映射为固定长度的二进制值串，这个映射的规则就是<strong>哈希算法</strong>，而通过原始数据映射之后得到的二进制值串就是<strong>哈希值</strong>。但是，要想设计一个优秀的哈希算法并不容易，根据我的经验，我总结了需要满足的几点要求：</p><!-- [[[read_end]]] --><ul>\n<li>\n<p>从哈希值不能反向推导出原始数据（所以哈希算法也叫单向哈希算法）；</p>\n</li>\n<li>\n<p>对输入数据非常敏感，哪怕原始数据只修改了一个Bit，最后得到的哈希值也大不相同；</p>\n</li>\n<li>\n<p>散列冲突的概率要很小，对于不同的原始数据，哈希值相同的概率非常小；</p>\n</li>\n<li>\n<p>哈希算法的执行效率要尽量高效，针对较长的文本，也能快速地计算出哈希值。</p>\n</li>\n</ul><p>这些定义和要求都比较理论，可能还是不好理解，我拿MD5这种哈希算法来具体说明一下。</p><p>我们分别对“今天我来讲哈希算法”和“jiajia”这两个文本，计算MD5哈希值，得到两串看起来毫无规律的字符串（MD5的哈希值是128位的Bit长度，为了方便表示，我把它们转化成了16进制编码）。可以看出来，无论要哈希的文本有多长、多短，通过MD5哈希之后，得到的哈希值的长度都是相同的，而且得到的哈希值看起来像一堆随机数，完全没有规律。</p><pre><code>MD5(&quot;今天我来讲哈希算法&quot;) = bb4767201ad42c74e650c1b6c03d78fa\nMD5(&quot;jiajia&quot;) = cd611a31ea969b908932d44d126d195b\n</code></pre><p>我们再来看两个非常相似的文本，“我今天讲哈希算法！”和“我今天讲哈希算法”。这两个文本只有一个感叹号的区别。如果用MD5哈希算法分别计算它们的哈希值，你会发现，尽管只有一字之差，得到的哈希值也是完全不同的。</p><pre><code>MD5(&quot;我今天讲哈希算法！&quot;) = 425f0d5a917188d2c3c3dc85b5e4f2cb\nMD5(&quot;我今天讲哈希算法&quot;) = a1fb91ac128e6aa37fe42c663971ac3d\n</code></pre><p>我在前面也说了，通过哈希算法得到的哈希值，很难反向推导出原始数据。比如上面的例子中，我们就很难通过哈希值“a1fb91ac128e6aa37fe42c663971ac3d”反推出对应的文本“我今天讲哈希算法”。</p><p>哈希算法要处理的文本可能是各种各样的。比如，对于非常长的文本，如果哈希算法的计算时间很长，那就只能停留在理论研究的层面，很难应用到实际的软件开发中。比如，我们把今天这篇包含4000多个汉字的文章，用MD5计算哈希值，用不了1ms的时间。</p><p>哈希算法的应用非常非常多，我选了最常见的七个，分别是安全加密、唯一标识、数据校验、散列函数、负载均衡、数据分片、分布式存储。这节我们先来看前四个应用。</p><h2>应用一：安全加密</h2><p>说到哈希算法的应用，最先想到的应该就是安全加密。最常用于加密的哈希算法是<strong>MD5</strong>（MD5 Message-Digest Algorithm，MD5消息摘要算法）和<strong>SHA</strong>（Secure Hash Algorithm，安全散列算法）。</p><p>除了这两个之外，当然还有很多其他加密算法，比如<strong>DES</strong>（Data Encryption Standard，数据加密标准）、<strong>AES</strong>（Advanced Encryption Standard，高级加密标准）。</p><p>前面我讲到的哈希算法四点要求，对用于加密的哈希算法来说，有两点格外重要。第一点是很难根据哈希值反向推导出原始数据，第二点是散列冲突的概率要很小。</p><p>第一点很好理解，加密的目的就是防止原始数据泄露，所以很难通过哈希值反向推导原始数据，这是一个最基本的要求。所以我着重讲一下第二点。实际上，不管是什么哈希算法，我们只能尽量减少碰撞冲突的概率，理论上是没办法做到完全不冲突的。为什么这么说呢？</p><p>这里就基于组合数学中一个非常基础的理论，鸽巢原理（也叫抽屉原理）。这个原理本身很简单，它是说，如果有10个鸽巢，有11只鸽子，那肯定有1个鸽巢中的鸽子数量多于1个，换句话说就是，肯定有2只鸽子在1个鸽巢内。</p><p>有了鸽巢原理的铺垫之后，我们再来看，<strong>为什么哈希算法无法做到零冲突？</strong></p><p>我们知道，哈希算法产生的哈希值的长度是固定且有限的。比如前面举的MD5的例子，哈希值是固定的128位二进制串，能表示的数据是有限的，最多能表示2^128个数据，而我们要哈希的数据是无穷的。基于鸽巢原理，如果我们对2^128+1个数据求哈希值，就必然会存在哈希值相同的情况。这里你应该能想到，一般情况下，哈希值越长的哈希算法，散列冲突的概率越低。</p><pre><code>2^128=340282366920938463463374607431768211456\n</code></pre><p>为了让你能有个更加直观的感受，我找了两段字符串放在这里。这两段字符串经过MD5哈希算法加密之后，产生的哈希值是相同的。</p><p><img src=\"https://static001.geekbang.org/resource/image/65/d8/65ee084ee47ae9ef6f53f618c65d00d8.jpg?wh=1010*120\" alt=\"\"></p><p><img src=\"https://static001.geekbang.org/resource/image/71/f1/715de12e09843a1c4a5f99ffd00c9ef1.jpg?wh=1004*116\" alt=\"\"></p><p>不过，即便哈希算法存在散列冲突的情况，但是因为哈希值的范围很大，冲突的概率极低，所以相对来说还是很难破解的。像MD5，有2^128个不同的哈希值，这个数据已经是一个天文数字了，所以散列冲突的概率要小于1/2^128。</p><p>如果我们拿到一个MD5哈希值，希望通过毫无规律的穷举的方法，找到跟这个MD5值相同的另一个数据，那耗费的时间应该是个天文数字。所以，即便哈希算法存在冲突，但是在有限的时间和资源下，哈希算法还是很难被破解的。</p><p>除此之外，没有绝对安全的加密。越复杂、越难破解的加密算法，需要的计算时间也越长。比如SHA-256比SHA-1要更复杂、更安全，相应的计算时间就会比较长。密码学界也一直致力于找到一种快速并且很难被破解的哈希算法。我们在实际的开发过程中，也需要权衡破解难度和计算时间，来决定究竟使用哪种加密算法。</p><h2>应用二：唯一标识</h2><p>我先来举一个例子。如果要在海量的图库中，搜索一张图是否存在，我们不能单纯地用图片的元信息（比如图片名称）来比对，因为有可能存在名称相同但图片内容不同，或者名称不同图片内容相同的情况。那我们该如何搜索呢？</p><p>我们知道，任何文件在计算中都可以表示成二进制码串，所以，比较笨的办法就是，拿要查找的图片的二进制码串与图库中所有图片的二进制码串一一比对。如果相同，则说明图片在图库中存在。但是，每个图片小则几十KB、大则几MB，转化成二进制是一个非常长的串，比对起来非常耗时。有没有比较快的方法呢？</p><p>我们可以给每一个图片取一个唯一标识，或者说信息摘要。比如，我们可以从图片的二进制码串开头取100个字节，从中间取100个字节，从最后再取100个字节，然后将这300个字节放到一块，通过哈希算法（比如MD5），得到一个哈希字符串，用它作为图片的唯一标识。通过这个唯一标识来判定图片是否在图库中，这样就可以减少很多工作量。</p><p>如果还想继续提高效率，我们可以把每个图片的唯一标识，和相应的图片文件在图库中的路径信息，都存储在散列表中。当要查看某个图片是不是在图库中的时候，我们先通过哈希算法对这个图片取唯一标识，然后在散列表中查找是否存在这个唯一标识。</p><p>如果不存在，那就说明这个图片不在图库中；如果存在，我们再通过散列表中存储的文件路径，获取到这个已经存在的图片，跟现在要插入的图片做全量的比对，看是否完全一样。如果一样，就说明已经存在；如果不一样，说明两张图片尽管唯一标识相同，但是并不是相同的图片。</p><h2>应用三：数据校验</h2><p>电驴这样的BT下载软件你肯定用过吧？我们知道，BT下载的原理是基于P2P协议的。我们从多个机器上并行下载一个2GB的电影，这个电影文件可能会被分割成很多文件块（比如可以分成100块，每块大约20MB）。等所有的文件块都下载完成之后，再组装成一个完整的电影文件就行了。</p><p>我们知道，网络传输是不安全的，下载的文件块有可能是被宿主机器恶意修改过的，又或者下载过程中出现了错误，所以下载的文件块可能不是完整的。如果我们没有能力检测这种恶意修改或者文件下载出错，就会导致最终合并后的电影无法观看，甚至导致电脑中毒。现在的问题是，如何来校验文件块的安全、正确、完整呢？</p><p>具体的BT协议很复杂，校验方法也有很多，我来说其中的一种思路。</p><p>我们通过哈希算法，对100个文件块分别取哈希值，并且保存在种子文件中。我们在前面讲过，哈希算法有一个特点，对数据很敏感。只要文件块的内容有一丁点儿的改变，最后计算出的哈希值就会完全不同。所以，当文件块下载完成之后，我们可以通过相同的哈希算法，对下载好的文件块逐一求哈希值，然后跟种子文件中保存的哈希值比对。如果不同，说明这个文件块不完整或者被篡改了，需要再重新从其他宿主机器上下载这个文件块。</p><h2>应用四：散列函数</h2><p>前面讲了很多哈希算法的应用，实际上，散列函数也是哈希算法的一种应用。</p><p>我们前两节讲到，散列函数是设计一个散列表的关键。它直接决定了散列冲突的概率和散列表的性能。不过，相对哈希算法的其他应用，散列函数对于散列算法冲突的要求要低很多。即便出现个别散列冲突，只要不是过于严重，我们都可以通过开放寻址法或者链表法解决。</p><p>不仅如此，散列函数对于散列算法计算得到的值，是否能反向解密也并不关心。散列函数中用到的散列算法，更加关注散列后的值是否能平均分布，也就是，一组数据是否能均匀地散列在各个槽中。除此之外，散列函数执行的快慢，也会影响散列表的性能，所以，散列函数用的散列算法一般都比较简单，比较追求效率。</p><h2>解答开篇</h2><p>好了，有了前面的基础，现在你有没有发现开篇的问题其实很好解决？</p><p>我们可以通过哈希算法，对用户密码进行加密之后再存储，不过最好选择相对安全的加密算法，比如SHA等（因为MD5已经号称被破解了）。不过仅仅这样加密之后存储就万事大吉了吗？</p><p>字典攻击你听说过吗？如果用户信息被“脱库”，黑客虽然拿到是加密之后的密文，但可以通过“猜”的方式来破解密码，这是因为，有些用户的密码太简单。比如很多人习惯用00000、123456这样的简单数字组合做密码，很容易就被猜中。</p><p>那我们就需要维护一个常用密码的字典表，把字典中的每个密码用哈希算法计算哈希值，然后拿哈希值跟脱库后的密文比对。如果相同，基本上就可以认为，这个加密之后的密码对应的明文就是字典中的这个密码。（注意，这里说是的是“基本上可以认为”，因为根据我们前面的学习，哈希算法存在散列冲突，也有可能出现，尽管密文一样，但是明文并不一样的情况。）</p><p>针对字典攻击，我们可以引入一个盐（salt），跟用户的密码组合在一起，增加密码的复杂度。我们拿组合之后的字符串来做哈希算法加密，将它存储到数据库中，进一步增加破解的难度。不过我这里想多说一句，我认为安全和攻击是一种博弈关系，不存在绝对的安全。所有的安全措施，只是增加攻击的成本而已。</p><h2>内容小结</h2><p>今天的内容比较偏实战，我讲到了哈希算法的四个应用场景。我带你来回顾一下。</p><p>第一个应用是唯一标识，哈希算法可以对大数据做信息摘要，通过一个较短的二进制编码来表示很大的数据。</p><p>第二个应用是用于校验数据的完整性和正确性。</p><p>第三个应用是安全加密，我们讲到任何哈希算法都会出现散列冲突，但是这个冲突概率非常小。越是复杂哈希算法越难破解，但同样计算时间也就越长。所以，选择哈希算法的时候，要权衡安全性和计算时间来决定用哪种哈希算法。</p><p>第四个应用是散列函数，这个我们前面讲散列表的时候已经详细地讲过，它对哈希算法的要求非常特别，更加看重的是散列的平均性和哈希算法的执行效率。</p><h2>课后思考</h2><p>现在，区块链是一个很火的领域，它被很多人神秘化，不过其底层的实现原理并不复杂。其中，哈希算法就是它的一个非常重要的理论基础。你能讲一讲区块链使用的是哪种哈希算法吗？是为了解决什么问题而使用的呢？</p><p>欢迎留言和我分享，我会第一时间给你反馈。</p>","comments":[{"had_liked":true,"id":37384,"user_name":"Smallfly","can_delete":false,"product_type":"c1","uid":1013841,"ip_address":"","ucode":"D388D5E0249A69","user_header":"https://static001.geekbang.org/account/avatar/00/0f/78/51/4790e13e.jpg","comment_is_top":false,"comment_ctime":1541563377,"is_pvip":false,"replies":[{"id":"13453","content":"👍","user_name":"作者回复","user_name_real":"gg","uid":"1190123","ctime":1541641691,"ip_address":"","comment_id":37384,"utype":1}],"discussion_count":19,"race_medal":0,"score":"2599996777457","product_id":100017301,"comment_content":"课后思考：<br><br>区块链是一块块区块组成的，每个区块分为两部分：区块头和区块体。<br><br>区块头保存着 自己区块体 和 上一个区块头 的哈希值。<br><br>因为这种链式关系和哈希值的唯一性，只要区块链上任意一个区块被修改过，后面所有区块保存的哈希值就不对了。<br><br>区块链使用的是 SHA256 哈希算法，计算哈希值非常耗时，如果要篡改一个区块，就必须重新计算该区块后面所有的区块的哈希值，短时间内几乎不可能做到。","like_count":606,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428319,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541641691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1165364,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c8/34/fb871b2c.jpg","nickname":"海罗沃德","note":"","ucode":"8704F1D6980FA0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48263,"discussion_content":"其实计算SHA256不怎么耗时，至于为什么那些基于PoW共识的区块链(如比特币，莱特币)会需要很长时间计算才能得到记账权，主要是因为老师文中讲的那个“盐”，虽然计算一个任意文本的SHA256不难，但是要得到样子特别的SHA256就很难，比如开头是0的，所以比特币引入了一个难度系数的概念，比如根据白皮书初始难度系数是6，就是要计算出开头6个0的SHA256，但是任意文本几乎不可能开头是0，更别提6个0了，因此在原始文本(区块交易信息)上增加“盐”，(比特币称作nonce)，加上盐之后就有可能得到0开头的SHA256，而nonce也不是乱加的，通常是从0开始递增的正整数，而所谓的挖矿“算力”就是只一秒内能计算几次增加了“盐”的hash，因为显卡的渲染管线特别擅长做数值运算，并且天生就是并行计算，因此很多人用显卡改造驱动程序来计算SHA256，上述内容都来源于比特币和以太坊的白皮书，有兴趣可以探讨一下","likes_number":74,"is_delete":false,"is_hidden":false,"ctime":1573469893,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1165364,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c8/34/fb871b2c.jpg","nickname":"海罗沃德","note":"","ucode":"8704F1D6980FA0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379831,"discussion_content":"赞！POW","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624178835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":48263,"ip_address":""},"score":379831,"extra":""}]},{"author":{"id":1307617,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f3/e1/5da8486d.jpg","nickname":"James","note":"","ucode":"6B9F8EA5365EAC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":286055,"discussion_content":"计算哈希值并不耗时，耗时的是要找出一个整数值nonce，使其满足如下不等式：SHA256(SHA256($version+$hashPrevBlock+$hashMerkleRoot+ $timeStamp+ $target+ $nonce)) <= $target\n而这需要不断的尝试，target用来控制算的难度，前段时间特地研究了一下“挖矿”的含义，写了一篇总结文章：https://mp.weixin.qq.com/s/iHoRRJbDOkPFFtR3baqSDw","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1593042319,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318351,"discussion_content":"且区块链(目前比特币是这样)只允许添加区块，不允许修改已经存在的区块。即现有的是只读。所以才出现区块可靠","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1603716343,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318349,"discussion_content":"查了下，保存了2个hash值：那如果修改后，父hash保留，自己区块体的hash值变化，按道理只影响后一个区块的父hash。而不会影响孙子节点及以后的hash值。所以怎么会出现所有区块hash值不对？\n\n只是因为分布式存储，需要修改所有节点上的后一个节点的hash值，才能算修改了这个区块。。。不知道我理解的对不对？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1603715978,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1183398,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0e/a6/9554fd6f.jpg","nickname":"옌찐롱","note":"","ucode":"396F14A08D3CEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393067,"discussion_content":"后一个区块头变化，肯定也影响到了再后一个的区块头了（因为每个区块头保存的是当前区块体跟上一个区块头的hash,而上一个区块头又包括上一个区块体跟上上个区块头的hash）,以此类推，牵一发而动全身","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631239190,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":318349,"ip_address":""},"score":393067,"extra":""}]},{"author":{"id":1005947,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/59/7b/ebe8451e.jpg","nickname":"德先生","note":"","ucode":"659061785DCF4C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533893,"discussion_content":"区块分为区块头和区块体，然后区块头又有区块体，也就是一个区块有两个地方保存了区块体？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638013074,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2052521,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/51/a9/741b5ad9.jpg","nickname":"FD","note":"","ucode":"ED396BD322489E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294368,"discussion_content":"每个区块有一条条交易组成，每条交易有一个唯一的交易ID，即TxID，他是根据交易内容生成的，区块的id是上一区块的id和当前区块的头部信息生成的。比特币使用一种巧妙的merkle树的概念，在长度保持不变的情况下，把所有交易id生成一个id（merkle树根），可以快速校验某一交易是否在当前区块中。这个merkle树根是区块头部信息的一个元数据。椭圆曲线是用来生成用户的密钥对，用户使用私钥来证明自己拥有莫个公钥，以及生成签名，来使用公钥验签","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595861048,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1921394,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/51/72/16b13cd4.jpg","nickname":"Beyond myself","note":"","ucode":"BB0218446CD64F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":283119,"discussion_content":"区块链用的是曲面算法，该算法特点是公钥检验高效，私钥破解成本极其大。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592189573,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1282162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/90/72/e17e7c61.jpg","nickname":"艺比天高","note":"","ucode":"F52AC257F834A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":262238,"discussion_content":"根据这位老哥说的，每块区块头的哈希值是不是通过对上个区块头的哈希值和区块体的值的求和再进行哈希算法得到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589046617,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1245294,"avatar":"https://static001.geekbang.org/account/avatar/00/13/00/6e/11362a1e.jpg","nickname":"感动超人","note":"","ucode":"DDBFE64A9DB28D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1282162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/90/72/e17e7c61.jpg","nickname":"艺比天高","note":"","ucode":"F52AC257F834A2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":265846,"discussion_content":"这个是细节问题,知道跟本身区块体和上个区块头有关就可以了,改变任意一个区块后面一串的区块都会变化,像链式反应,这个链字用的真好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589446638,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":262238,"ip_address":""},"score":265846,"extra":""}]},{"author":{"id":1092218,"avatar":"https://static001.geekbang.org/account/avatar/00/10/aa/7a/ae8c247d.jpg","nickname":"指尖以东","note":"","ucode":"1DEE134FE92FD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":256950,"discussion_content":"学习了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588519022,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":254416,"discussion_content":"一语道破","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588324608,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1046304,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f7/20/e2dfa9c2.jpg","nickname":"花儿与少年","note":"","ucode":"E2D685737E4F1B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42763,"discussion_content":"区块链不可能是用了一种加密算法啊，你可以说比特币用了xxx加密算法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572774274,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1258401,"avatar":"https://static001.geekbang.org/account/avatar/00/13/33/a1/f3835f01.jpg","nickname":"社会猪","note":"","ucode":"CFF5EA7F247373","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":13951,"discussion_content":"在睡觉睡觉","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568717154,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1230910,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c8/3e/e178f9ab.jpg","nickname":"chaos","note":"","ucode":"7626391D1D5157","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2478,"discussion_content":"tql","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563698136,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1258401,"avatar":"https://static001.geekbang.org/account/avatar/00/13/33/a1/f3835f01.jpg","nickname":"社会猪","note":"","ucode":"CFF5EA7F247373","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1230910,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c8/3e/e178f9ab.jpg","nickname":"chaos","note":"","ucode":"7626391D1D5157","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":13950,"discussion_content":"那你说你是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568717144,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":2478,"ip_address":""},"score":13950,"extra":""}]},{"author":{"id":1082785,"avatar":"https://static001.geekbang.org/account/avatar/00/10/85/a1/2442332c.jpg","nickname":"郭俊杰","note":"","ucode":"D328E5738A4413","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1718,"discussion_content":"顶","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562842017,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":true,"id":37339,"user_name":"雪无痕","can_delete":false,"product_type":"c1","uid":1235903,"ip_address":"","ucode":"261357711A568E","user_header":"https://static001.geekbang.org/account/avatar/00/12/db/bf/d990f851.jpg","comment_is_top":false,"comment_ctime":1541552629,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"1040923638261","product_id":100017301,"comment_content":"除了hash+salt，现在大多公司都采用无论密码长度多少，计算字符串hash时间都固定或者足够慢的算法如PBKDF2WithHmacSHA1，来降低硬件计算hash速度，减少不同长度字符串计算hash所需时间不一样而泄漏字符串长度信息，进一步减少风险。","like_count":242,"discussions":[{"author":{"id":1472051,"avatar":"https://static001.geekbang.org/account/avatar/00/16/76/33/928ffd21.jpg","nickname":"AlexS","note":"","ucode":"3DA81A613CE645","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":40052,"discussion_content":"和优秀的人儿们一起学习，就是能比一个人学了解到更多。\n","likes_number":12,"is_delete":false,"is_hidden":false,"ctime":1572068112,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2173090,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIstR9CfEytdeJyicODHOe6cYGt4icg8cNVam9mE0s7picUsInZvwvia1hEtKsyHETfic0jrAddjt0wXdA/132","nickname":"Geek_d68bf9","note":"","ucode":"D88E117B6A18B3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580931,"discussion_content":"秀儿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658406364,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318353,"discussion_content":"厉害了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603716730,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1330065,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/N0NACGUr8dNAbN6BdiagPHBaB0EnyDsI9zWpwJteqTY38apOEnTOA7JkBAQnzYKJBgxu3Q8YMUILwLAB6camn4w/132","nickname":"Swing","note":"","ucode":"55FCA9ECEFBBEB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":72704,"discussion_content":"暴露出可能的长度信息 如何利用呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575518190,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1019588,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8e/c4/8d1150f3.jpg","nickname":"Richie","note":"","ucode":"12314EF0347693","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1330065,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/N0NACGUr8dNAbN6BdiagPHBaB0EnyDsI9zWpwJteqTY38apOEnTOA7JkBAQnzYKJBgxu3Q8YMUILwLAB6camn4w/132","nickname":"Swing","note":"","ucode":"55FCA9ECEFBBEB","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":120853,"discussion_content":"时序攻击（Timing Attack）了解一下。","likes_number":12,"is_delete":false,"is_hidden":false,"ctime":1578300716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":72704,"ip_address":""},"score":120853,"extra":""}]},{"author":{"id":1484184,"avatar":"https://static001.geekbang.org/account/avatar/00/16/a5/98/a65ff31a.jpg","nickname":"djfhchdh","note":"","ucode":"E71D75328CE398","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4507,"discussion_content":"厉害，学习了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565502136,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":38514,"user_name":"oyt","can_delete":false,"product_type":"c1","uid":1075038,"ip_address":"","ucode":"E1E4F27FB3535F","user_header":"https://static001.geekbang.org/account/avatar/00/10/67/5e/e0323566.jpg","comment_is_top":false,"comment_ctime":1542070497,"is_pvip":false,"replies":[{"id":"13804","content":"👍","user_name":"作者回复","user_name_real":"gg","uid":"1190123","ctime":1542073419,"ip_address":"","comment_id":38514,"utype":1}],"discussion_count":24,"race_medal":0,"score":"839060693217","product_id":100017301,"comment_content":"加salt，也可理解为为密码加点佐料后再进行hash运算。比如原密码是123456，不加盐的情况加密后假设是是xyz。 黑客拿到脱机的数据后，通过彩虹表匹配可以轻松破解常用密码。如果加盐，密码123456加盐后可能是12ng34qq56zz，再对加盐后的密码进行hash后值就与原密码hash后的值完全不同了。而且加盐的方式有很多种，可以是在头部加，可以在尾部加，还可在内容中间加，甚至加的盐还可以是随机的。这样即使用户使用的是最常用的密码，黑客拿到密文后破解的难度也很高。","like_count":196,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428729,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542073419,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1058015,"avatar":"https://static001.geekbang.org/account/avatar/00/10/24/df/645f8087.jpg","nickname":"Yayu","note":"","ucode":"5E7842458D8229","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":35404,"discussion_content":"随机加盐以后的验证工作怎么做？","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1571276350,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1014665,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7b/89/34f2cbcc.jpg","nickname":"杨宇","note":"","ucode":"EB74DF6E269F03","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1058015,"avatar":"https://static001.geekbang.org/account/avatar/00/10/24/df/645f8087.jpg","nickname":"Yayu","note":"","ucode":"5E7842458D8229","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557839,"discussion_content":"生成时随机，生成后保存在该用户记录的salt字段。\n后端从前端永远拿到js进行hash后的口令，而不是口令明文，且配合传输加解密。\n用户注册时，后端随机生成盐，将参数hash口令与盐拼接，再进行后端的hash，并保存盐和最终hash值。\n用户登录时，后端查询用户记录，将参数hash口令与盐拼接，再进行后端的hash，并与注册时存储的最终hash值比对。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647997170,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":35404,"ip_address":""},"score":557839,"extra":""},{"author":{"id":1295609,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJRFRX8kNzNet7FibNvtavbVpAwK09AhIhrib9k762qWtH6mre8ickP7hM5mgZC4ytr8NnmIfmAhxMSQ/132","nickname":"老大不小","note":"","ucode":"35BCDD3CB13467","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1014665,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7b/89/34f2cbcc.jpg","nickname":"杨宇","note":"","ucode":"EB74DF6E269F03","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":581768,"discussion_content":"生成时随机，生成后保存在该用户记录的salt字段。\n--&gt; 如何保存，保存在数据库中吗，那脱库了之后，黑客也可以拿到盐，然后再进行hash。是不是没有意义？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658982676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":557839,"ip_address":"北京"},"score":581768,"extra":""},{"author":{"id":1014665,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7b/89/34f2cbcc.jpg","nickname":"杨宇","note":"","ucode":"EB74DF6E269F03","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1295609,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJRFRX8kNzNet7FibNvtavbVpAwK09AhIhrib9k762qWtH6mre8ickP7hM5mgZC4ytr8NnmIfmAhxMSQ/132","nickname":"老大不小","note":"","ucode":"35BCDD3CB13467","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582221,"discussion_content":"楼主说过：“而且加盐的方式有很多种，可以是在头部加，可以在尾部加，还可在内容中间加”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659320885,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":581768,"ip_address":"安徽"},"score":582221,"extra":""}]},{"author":{"id":1250807,"avatar":"https://static001.geekbang.org/account/avatar/00/13/15/f7/744720a2.jpg","nickname":"DriveMan_邱佳源","note":"","ucode":"A4C83BF07DEE7A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7115,"discussion_content":"如果是做登录密码，加盐应该不能随机的吧，不然用户一辈子都登录不了","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1567390484,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1037940,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d6/74/6f04af6f.jpg","nickname":"鸿溟","note":"","ucode":"C8FC4C3DB6161E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1250807,"avatar":"https://static001.geekbang.org/account/avatar/00/13/15/f7/744720a2.jpg","nickname":"DriveMan_邱佳源","note":"","ucode":"A4C83BF07DEE7A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":98189,"discussion_content":"之前看到过一个例子是，对用户密码进行两次MD5加密，前端到后端进行加md5+盐值加密，然后存到数据库时再进行一次MD5+随机盐值加密，然后把这个随机salt存在用户的信息表中，实现随机盐值","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1577149238,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":7115,"ip_address":""},"score":98189,"extra":""},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1037940,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d6/74/6f04af6f.jpg","nickname":"鸿溟","note":"","ucode":"C8FC4C3DB6161E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318489,"discussion_content":"如果数据库被脱库呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603764331,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":98189,"ip_address":""},"score":318489,"extra":""},{"author":{"id":1014665,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7b/89/34f2cbcc.jpg","nickname":"杨宇","note":"","ucode":"EB74DF6E269F03","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557836,"discussion_content":"即使脱库，黑客也得对每一条记录单独处理。而如果没有盐，相同口令的哈希值总是相同。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1647996692,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":318489,"ip_address":""},"score":557836,"extra":""}]},{"author":{"id":2063037,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/7a/bd/1f461acf.jpg","nickname":"西电","note":"","ucode":"95BD4CE9D93018","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305670,"discussion_content":"请问一下，使用hash这种单向映射的算法对数据加密了之后，我自己也不知道这个数据是多少了呀。那自己怎么用呢","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1600052345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1339586,"avatar":"https://static001.geekbang.org/account/avatar/00/14/70/c2/0df5cc71.jpg","nickname":"Melon","note":"","ucode":"8E4A96B3BA0239","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2063037,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/7a/bd/1f461acf.jpg","nickname":"西电","note":"","ucode":"95BD4CE9D93018","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390485,"discussion_content":"想了下。一般是不是这么用。比如，登录场景，用户输入密码，服务端拿到密码明文（保存在内存用完则即刻销毁），用hash单向映射得到密文，再与数据库保存密文比较，相同则登录成功，否则失败。服务端不需要主动拿到用户密码明文","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629859258,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":305670,"ip_address":""},"score":390485,"extra":""},{"author":{"id":1014665,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7b/89/34f2cbcc.jpg","nickname":"杨宇","note":"","ucode":"EB74DF6E269F03","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1339586,"avatar":"https://static001.geekbang.org/account/avatar/00/14/70/c2/0df5cc71.jpg","nickname":"Melon","note":"","ucode":"8E4A96B3BA0239","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557837,"discussion_content":"服务端最好不拿明文，而是跟前端约定一种对称或非对称加密，即传输加解密。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647996820,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":390485,"ip_address":""},"score":557837,"extra":""}]},{"author":{"id":1928441,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/cfNtHoAbHvia1O0jIopiafYbnppEPiawgicKa8vdI2FxMMEdqORB4VLzkYTuGJGA7HibustnU0hDTOD7YSDAWuxhmrg/132","nickname":"Geek_299a34","note":"","ucode":"79AECE06F08E87","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294173,"discussion_content":"UUID作为盐值，并把盐值保存到数据库中","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1595818731,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1236079,"avatar":"https://static001.geekbang.org/account/avatar/00/12/dc/6f/5d86dbe9.jpg","nickname":"短迪大魔王","note":"","ucode":"37E8117E0495B8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":154642,"discussion_content":"图像匹配的三驾马车，用了统计学和ai的相关知识，直接对大量数据这么做很慢，先用hash来一下，再精选工程上快了很多","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1580170925,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1236079,"avatar":"https://static001.geekbang.org/account/avatar/00/12/dc/6f/5d86dbe9.jpg","nickname":"短迪大魔王","note":"","ucode":"37E8117E0495B8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318482,"discussion_content":"没懂。大量数据是指图片？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603763679,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":154642,"ip_address":""},"score":318482,"extra":""}]},{"author":{"id":1231682,"avatar":"https://static001.geekbang.org/account/avatar/00/12/cb/42/0b2617b1.jpg","nickname":"浮世逍遥","note":"","ucode":"03D8A1B3ED8781","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":40869,"discussion_content":"加了salt之后怎么解析呢？这个salt怎么保存？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1572278111,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2962599,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/34/a7/52c4ea60.jpg","nickname":"年少挽滑稽世无双","note":"","ucode":"793DCBDE25A07B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572756,"discussion_content":"优秀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652948531,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388326,"discussion_content":"个人认为，加盐可以使用固定盐值，直接定义在代码中，当然这种方式安全性没有下面随机加盐高。\n随机加盐，可以使用类似于UUID或者随机生成的盐值，每个用户的盐值都基本是不同的方式加盐加密，这里的盐值可以保存在数据库中，而且盐值也可以经过加密保存。\n即便脱库，因为每个用户的盐值是不一样的，而且可能还是加密的，再加上代码加盐的过程是相对不可知，这一系列因素，基本能保证短时间内密码不会被攻破~ 就像作者而言，没有绝对的安全，攻防之间不过是取一个平衡，有时候的安全可能是只要保证一定时间内不被攻破就达到目的了~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628696174,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1246707,"avatar":"https://static001.geekbang.org/account/avatar/00/13/05/f3/5488276f.jpg","nickname":"心雨鑫晴","note":"","ucode":"37A42C19B98F1D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":313221,"discussion_content":"借楼。如果非要使用hash算法存储加密后的数据，可否连带着将密码的随机连续四位进行存储(这里的随机连续四位，也可以换成是四个随机位)。如果完整密码是8位以上(这里的数字都是一个设想值，对应的前面的存储字符的长度也可以变更)。而校验时，先判断hash值是否相等，如果相等，再判断那个四位数是否存在于密码中即可。这里即使脱库，大部分用户的数据也是安全的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603005687,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1246707,"avatar":"https://static001.geekbang.org/account/avatar/00/13/05/f3/5488276f.jpg","nickname":"心雨鑫晴","note":"","ucode":"37A42C19B98F1D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318481,"discussion_content":"为啥要暴露4位明文密码？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1603763597,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":313221,"ip_address":""},"score":318481,"extra":""}]},{"author":{"id":1675882,"avatar":"https://static001.geekbang.org/account/avatar/00/19/92/6a/dd37a054.jpg","nickname":"张y .","note":"","ucode":"85918469492F4C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306376,"discussion_content":"代码中常量定义好salt吧应该是？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600259354,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1986708,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKT9Tk01eiaQ9aAhszthzGm6lwruRWPXia1YYFozctrdRvKg0Usp8NbwuKBApwD0D6Fty2tib3RdtFJg/132","nickname":"欧阳洲","note":"","ucode":"94606A6315F2BA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":257543,"discussion_content":"那黑客可以获取到md5值，查表得出密码，\n那么也可以获取到salt值吧？\nmd5是存在数据库吗，\nsalt也是存在数据库吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588586661,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1048286,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/fe/de/2019f370.jpg","nickname":"jony","note":"","ucode":"80765A6B9ABA0D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3232,"discussion_content":"补充得不错。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564324742,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51225,"user_name":"王鸿运","can_delete":false,"product_type":"c1","uid":1068577,"ip_address":"","ucode":"14AF7B485D29A1","user_header":"https://static001.geekbang.org/account/avatar/00/10/4e/21/700586eb.jpg","comment_is_top":false,"comment_ctime":1545139357,"is_pvip":false,"discussion_count":10,"race_medal":0,"score":"620020429981","product_id":100017301,"comment_content":"md5不应该称之为加密算法，所谓加密，肯定对应有解密，不管是简单的异或加密，还是对称加密算法（aes，des）或者是非对称加密（rsa，ecc），都有加密和解密方式<br>而md5是不可逆的，因此不能称为加密算法，从名字来看，md5就算一个摘要算法，用于生成字符串的摘要信息以及签名校验信息","like_count":145,"discussions":[{"author":{"id":1438860,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f4/8c/0866b228.jpg","nickname":"子房","note":"","ucode":"CB05938C248BB3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349257,"discussion_content":"加密分为可解密的和不可解密的，都属于加密的方式。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1613023507,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1664589,"avatar":"","nickname":"starwonder","note":"","ucode":"B6953F2626AAC6","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1438860,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f4/8c/0866b228.jpg","nickname":"子房","note":"","ucode":"CB05938C248BB3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":372753,"discussion_content":"不可解密的加密又有何意义呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620450952,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":349257,"ip_address":""},"score":372753,"extra":""},{"author":{"id":1073947,"avatar":"https://static001.geekbang.org/account/avatar/00/10/63/1b/83ac7733.jpg","nickname":"忧天小鸡","note":"","ucode":"A1412BDC108FD6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1438860,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f4/8c/0866b228.jpg","nickname":"子房","note":"","ucode":"CB05938C248BB3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374509,"discussion_content":"加密解密，属于编码类型，不可解密属于编码类型，没有所谓的加密解密，只是人的理解","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1621221605,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":349257,"ip_address":""},"score":374509,"extra":""},{"author":{"id":1136450,"avatar":"https://static001.geekbang.org/account/avatar/00/11/57/42/bd500d0f.jpg","nickname":"小恶魔","note":"","ucode":"C2A6197CC74886","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1664589,"avatar":"","nickname":"starwonder","note":"","ucode":"B6953F2626AAC6","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":383463,"discussion_content":"保护用户隐私 手动狗头","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626102544,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":372753,"ip_address":""},"score":383463,"extra":""}]},{"author":{"id":2206029,"avatar":"https://static001.geekbang.org/account/avatar/00/21/a9/4d/c64803ea.jpg","nickname":"ZJUZZ","note":"","ucode":"E1E3446BC85592","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":323248,"discussion_content":"md5本来就是message digest呀","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1604906556,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2107804,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ7VKDBDPfEML4J8gtSxTLv9f4kAdE46IC3leV4DS88HqZLj5dQOEicLTkJmkGV14KKruhP0Xv1jlA/132","nickname":"LalexH","note":"","ucode":"D35144BD4EB872","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":561844,"discussion_content":"md5是可解密的，解密方式就是穷尽，只是解密所需要的时间是天文数字，所以说md5也属于加密算法的一种。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649731300,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1608726,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/eVgcqg5p554rB5Oxs5uOBRtiaTkaGJoPf8IODUWdRPicgUonTtCyK0YJ8t0hTAtHoSMAr8jZNWwJgQtMu5NMcS0w/132","nickname":"去777","note":"","ucode":"8EF8CF537ABED3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547434,"discussion_content":"非对称的也不能解密 只能效验","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642671979,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1014665,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7b/89/34f2cbcc.jpg","nickname":"杨宇","note":"","ucode":"EB74DF6E269F03","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1608726,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/eVgcqg5p554rB5Oxs5uOBRtiaTkaGJoPf8IODUWdRPicgUonTtCyK0YJ8t0hTAtHoSMAr8jZNWwJgQtMu5NMcS0w/132","nickname":"去777","note":"","ucode":"8EF8CF537ABED3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557841,"discussion_content":"1.公钥加密，私钥解密。\n2.私钥加签，公钥验签。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647997266,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":547434,"ip_address":""},"score":557841,"extra":""}]},{"author":{"id":1356689,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b3/91/b01d99af.jpg","nickname":"哈哈","note":"","ucode":"A48D48DEBE5701","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393129,"discussion_content":"是摘要或者hash  不是加密 ， 不可逆的加密不能称之为加密","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631261880,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2015066,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/bf/5a/824a5e46.jpg","nickname":"百川","note":"","ucode":"BCC9D224C09CD6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388751,"discussion_content":"支持","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628935109,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37307,"user_name":"Jerry银银","can_delete":false,"product_type":"c1","uid":1008404,"ip_address":"","ucode":"80DA1172A2360A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/14/06eff9a4.jpg","comment_is_top":false,"comment_ctime":1541547045,"is_pvip":false,"replies":[{"id":"13461","content":"👍","user_name":"作者回复","user_name_real":"gg","uid":"1190123","ctime":1541642482,"ip_address":"","comment_id":37307,"utype":1}],"discussion_count":8,"race_medal":0,"score":"504052720677","product_id":100017301,"comment_content":"原来“散列冲突”的数学原理是鸽巢原理，为啥大部分算法书上讲解散列表的时候，不提一下呢。搞得我平时向朋友解释为什么存在冲突的时候，用得都是“鸽巢原理的白话版”，而且在讲解的时候还不知道那就是鸽巢原理，很尬!<br><br>离散数学的课必须得好好补完","like_count":118,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428286,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541642482,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1542987,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8b/4b/fa52d222.jpg","nickname":"行则将至","note":"","ucode":"DB972F2DF059C4","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575068,"discussion_content":"把一个很复杂的事用一个很浅显的道理讲明白，会非常有利于自己的记忆。这是一项很重要的本领","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654579252,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2962599,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/34/a7/52c4ea60.jpg","nickname":"年少挽滑稽世无双","note":"","ucode":"793DCBDE25A07B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572759,"discussion_content":"可惜我大学离散数学挂科了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652948604,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2190670,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIbSS9mUibLF6aicw1SNL1AEBt3U8jcKUIfealiaRc9oBtRRkIS8wAPPeducahUzWVo1AeFOYAJklFibw/132","nickname":"Geek_luo","note":"","ucode":"0A7207157BD00F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351693,"discussion_content":"抽屉原理我是知道的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614404140,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1177430,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f7/56/b82eeac7.jpg","nickname":"champ可口可乐了","note":"","ucode":"EA75C67E9124C7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":283176,"discussion_content":"我怎么感觉散列冲突很容易解释呢？\n要把几乎无限个数据映射到有限(比如md5就是2^128)个值，肯定会有多个数据被映射到同一个值上面。\n我不理解的是，为什么有无限个数据映射，概率还是很低呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592205120,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1909732,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLY0FFoux40Negib6LrE7EwT3T2BUbpYzOzUeiaiaXBmNGDGVgIZr5NeWBTEeCuALOg3ODtWa21bHMgg/132","nickname":"Geek_99ae14","note":"","ucode":"268852986A6B69","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1177430,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f7/56/b82eeac7.jpg","nickname":"champ可口可乐了","note":"","ucode":"EA75C67E9124C7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302137,"discussion_content":"因为2^128这个数据很大。。。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1598797548,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":283176,"ip_address":""},"score":302137,"extra":""},{"author":{"id":2093945,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/f3/79/a2bedc1e.jpg","nickname":"J6","note":"","ucode":"3F097CE1FFCA05","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1909732,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLY0FFoux40Negib6LrE7EwT3T2BUbpYzOzUeiaiaXBmNGDGVgIZr5NeWBTEeCuALOg3ODtWa21bHMgg/132","nickname":"Geek_99ae14","note":"","ucode":"268852986A6B69","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":317353,"discussion_content":"不管从概率论还是微积分的角度来说，在趋近无穷面前，再大的常数都可以忽略不计。在无穷个数据下，冲突的概率必然为1。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1603536751,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":302137,"ip_address":""},"score":317353,"extra":""},{"author":{"id":2273754,"avatar":"https://static001.geekbang.org/account/avatar/00/22/b1/da/5602cb4b.jpg","nickname":"king","note":"","ucode":"1E5BD0E2A789C3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2093945,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/f3/79/a2bedc1e.jpg","nickname":"J6","note":"","ucode":"3F097CE1FFCA05","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335376,"discussion_content":"但是在现实世界中，这种情况是极少极少见的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1608175988,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":317353,"ip_address":""},"score":335376,"extra":""}]}]},{"had_liked":false,"id":37320,"user_name":"小龙的城堡","can_delete":false,"product_type":"c1","uid":1005727,"ip_address":"","ucode":"7F1F9704548E2D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/58/9f/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1541550652,"is_pvip":false,"replies":[{"id":"13458","content":"没错 可以理解为数字签名","user_name":"作者回复","user_name_real":"gg","uid":"1190123","ctime":1541642329,"ip_address":"","comment_id":37320,"utype":1}],"discussion_count":3,"race_medal":0,"score":"246354686524","product_id":100017301,"comment_content":"老师您好，我有一个疑问就是hash算法用于加密数据，但是我理解的加密是需要对应解密的，但是hash算法并不能解密，这用应用更像是数字签名，不知道我理解是不是有问题，感谢！","like_count":57,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428290,"discussion_content":"没错 可以理解为数字签名","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541642329,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1112747,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fa/ab/0d39e745.jpg","nickname":"李小四","note":"","ucode":"2A766BE16B276B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4078,"discussion_content":"严格意义上，hash不能算加密，因为不能解密。\n但是，hash事实上也起到了保护用户信息的作用。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1565096519,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1120265,"avatar":"https://static001.geekbang.org/account/avatar/00/11/18/09/ab1758bb.jpg","nickname":"月月飞","note":"","ucode":"1974D44B0D63CC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3559,"discussion_content":"消息摘要更合适一些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564578364,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":39887,"user_name":"姜威","can_delete":false,"product_type":"c1","uid":1244051,"ip_address":"","ucode":"C58EB9A5AD634D","user_header":"https://static001.geekbang.org/account/avatar/00/12/fb/93/f19a5364.jpg","comment_is_top":false,"comment_ctime":1542375689,"is_pvip":false,"discussion_count":7,"race_medal":0,"score":"220585707785","product_id":100017301,"comment_content":"带着问题来学习：<br>1.如何防止数据库中的用户信息被脱库？<br>2.你会如何存储用户密码这么重要的数据吗？仅仅 MD5 加密一下存储就够了吗？<br>3.在实际开发中，我们应该如何用哈希算法解决问题？<br>一、什么是哈希算法？<br>1.定义<br>将任意长度的二进制值串映射成固定长度的二进制值串，这个映射的规则就是哈希算法，而通过原始数据映射之后得到的二进制值串就是哈希值。<br>2.如何设计一个优秀的哈希算法？<br>①单向哈希：<br>从哈希值不能反向推导出哈希值（所以哈希算法也叫单向哈希算法）。<br>②篡改无效：<br>对输入敏感，哪怕原始数据只修改一个Bit，最后得到的哈希值也大不相同。<br>③散列冲突：<br>散列冲突的概率要很小，对于不同的原始数据，哈希值相同的概率非常小。<br>④执行效率：<br>哈希算法的执行效率要尽量高效，针对较长的文本，也能快速计算哈希值。<br>二、哈希算法的常见应用有哪些？<br>7个常见应用：安全加密、唯一标识、数据校验、散列函数、负载均衡、数据分片、分布式存储。<br>1.安全加密<br>①常用于加密的哈希算法：<br>MD5：MD5 Message-Digest Algorithm，MD5消息摘要算法<br>SHA：Secure Hash Algorithm，安全散列算法<br>DES：Data Encryption Standard，数据加密标准<br>AES：Advanced Encryption Standard，高级加密标准<br>②对用于加密的哈希算法，有两点格外重要，第一点是很难根据哈希值反向推导出原始数据，第二点是散列冲突的概率要小。<br>③在实际开发中要权衡破解难度和计算时间来决定究竟使用哪种加密算法。<br>2.唯一标识<br>通过哈希算法计算出数据的唯一标识，从而用于高效检索数据。<br>3.数据校验<br>利用哈希算法对输入数据敏感的特点，可以对数据取哈希值，从而高效校验数据是否被篡改过。<br>4.散列函数<br>散列函数中用到的哈希算法更加关注散列后的值能不能平均分布，以及散列函数的执行快慢。<br>三、思考<br>1.如何防止数据库中的用户信息被脱库？你会如何存储用户密码这么重要的数据吗？<br>①使用MD5进行加密<br>②字典攻击：如果用户信息被“脱库”，黑客虽然拿到的是加密之后的密文，但可以通过“猜”的方式来破解密码，这是因为，有些用户的密码太简单。<br>③针对字典攻击，我们可以引入一个盐（salt），跟用户密码组合在一起，增加密码的复杂度。<br>2.现在，区块链是一个很火的领域，它被很多人神秘化，不过其底层的实现原理并不复杂。其中，哈希算法就是它的一个非常重要的理论基础。你能讲一讲区块链使用的是哪种哈希算法吗？是为了解决什么问题而使用的呢？","like_count":51,"discussions":[{"author":{"id":1698258,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx7FdRzUuQf4Fopr7DOXEHZyCFfH4GQViaqo7bymf1qaANcOvuEhHyTNwOOUFW7psxEeSQ5k9uXWw/132","nickname":"阿顺","note":"","ucode":"36F2AD6F980B11","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41054,"discussion_content":"我就喜欢抄尖子生的笔记","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1572337606,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1324122,"avatar":"https://static001.geekbang.org/account/avatar/00/14/34/5a/723311cd.jpg","nickname":"句子","note":"","ucode":"C0C20F466DF9D0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":402987,"discussion_content":"Des AES不是哈希算法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633972209,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1640978,"avatar":"https://static001.geekbang.org/account/avatar/00/19/0a/12/f8b988b8.jpg","nickname":"Kyle(","note":"","ucode":"0C14C4C086CAA9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":372690,"discussion_content":"课代表你太帅了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620436604,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2063037,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/7a/bd/1f461acf.jpg","nickname":"西电","note":"","ucode":"95BD4CE9D93018","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305667,"discussion_content":"请问一下，我对数据加密了之后，我自己也不知道这个邮箱是多少了呀。那自己怎么用呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600052035,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1267257,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKtBwSeHSkf6a8KMA6V8tkHsGV7SWkcVyCnyYU9KnwZ5LPnL89KGq4KOcTpefmVI7MQg86tQUs5qg/132","nickname":"Ever","note":"","ucode":"6ACB71BDCAFEAA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2063037,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/7a/bd/1f461acf.jpg","nickname":"西电","note":"","ucode":"95BD4CE9D93018","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361693,"discussion_content":"无法用，只能修改密码，以前还有很多网站有找回密码功能，现在已经没有了，都是修改密码，因为人家也不知道你密码是啥","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616731369,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":305667,"ip_address":""},"score":361693,"extra":""},{"author":{"id":1831099,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/f0/bb/f7025f42.jpg","nickname":"大祭司","note":"","ucode":"06479A180B8DED","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2063037,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/7a/bd/1f461acf.jpg","nickname":"西电","note":"","ucode":"95BD4CE9D93018","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387695,"discussion_content":"邮箱就别加密了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628350386,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":305667,"ip_address":""},"score":387695,"extra":""}]},{"author":{"id":1753115,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/c0/1b/319baf9d.jpg","nickname":"ZMH.","note":"","ucode":"D45D6CEDFDF8F5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":225430,"discussion_content":"开始就看你的笔记,总结的很棒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586358465,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37581,"user_name":"🐱您的好友William🐱","can_delete":false,"product_type":"c1","uid":1215456,"ip_address":"","ucode":"427786DB178965","user_header":"https://static001.geekbang.org/account/avatar/00/12/8b/e0/9a79ddac.jpg","comment_is_top":false,"comment_ctime":1541644241,"is_pvip":false,"replies":[{"id":"13601","content":"👍","user_name":"作者回复","user_name_real":"gg","uid":"1190123","ctime":1541729095,"ip_address":"","comment_id":37581,"utype":1}],"discussion_count":4,"race_medal":0,"score":"151865499601","product_id":100017301,"comment_content":"其实我感觉hash不可能做到无冲突的原理可以用机器学习里面的免费午餐理论解释，因为hash追求的其实就是机器学习中的best seperate，就是mapping之后，不只是把两个不一样的东西分开，还要保证两者足够远（最大margin），因为hash函数是要面对所有类型的数据分布，而免费午餐理论告诉我们：不存在一种完美的算法对所有类型的数据分布都能做到完美的分离，最好的算法一定是根据特定的数据分布特定设计出来的。所以像hash函数这种需要应对不特定数据分布的，需要广泛使用的，是一定不会将数据完美seperate的。 ","like_count":35,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428409,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541729095,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1593762,"avatar":"https://static001.geekbang.org/account/avatar/00/18/51/a2/84e9efe2.jpg","nickname":"马祖晖","note":"","ucode":"7866916C8EF9DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":324353,"discussion_content":"有点拿着锤子看哪都像钉子的感觉。。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1605094904,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1295609,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJRFRX8kNzNet7FibNvtavbVpAwK09AhIhrib9k762qWtH6mre8ickP7hM5mgZC4ytr8NnmIfmAhxMSQ/132","nickname":"老大不小","note":"","ucode":"35BCDD3CB13467","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581782,"discussion_content":"你这嘎达一会中文一会英文，不怕夹生吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658991784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318490,"discussion_content":"还是没有抽屉原理简单易懂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603764471,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163109,"user_name":"Qfxl","can_delete":false,"product_type":"c1","uid":1042753,"ip_address":"","ucode":"4554F28BB10F21","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/p6kkT7nsViayxazIrxx7p0pklPRvet933nEGBupj1phL2zArLStC3MnHFFyBYZ9fDGbPWJxS6WOICkxCCLia7nhw/132","comment_is_top":false,"comment_ctime":1576658026,"is_pvip":false,"discussion_count":7,"race_medal":0,"score":"130425676906","product_id":100017301,"comment_content":"大学专攻信息安全的闭门大弟子尝试解答一下留言区的问题，如有纰漏，请指正<br>1. 盐一般需要跟哈希值一起储存，无须额外加密<br>2. 盐要随机的，固定盐相当于没加。<br>3. 为何盐泄漏了也相对安全？假设盐是8bits， 相比没盐的彩虹表，新彩虹表大约是原来的2^8倍大小，加大了破解难度，回应原文，没有绝对的安全<br>4. 信息安全的一个重要假设是计算资源是有限的，很多安全措施都是增加破解成本。教授也强调量子计算可能会使现今所有加密手段失效。<br>5. 文中提到的哈希算法都属于密码学工具，广义上也算是加密算法，更准确是数字签名或信息摘要算法，以区分开可解密的对称非对称加密算法<br>6. 千万不要用MD5来存储密码！<br>","like_count":30,"discussions":[{"author":{"id":1243594,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f9/ca/ffa24abf.jpg","nickname":"SuperFox","note":"","ucode":"05414BC51FD263","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335018,"discussion_content":"以上回复小伟。。。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1608059828,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1243594,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f9/ca/ffa24abf.jpg","nickname":"SuperFox","note":"","ucode":"05414BC51FD263","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335017,"discussion_content":"发现自己之前的说法有些问题。。。 盐泄露关系不大最主要的原因是，即使盐泄露，但如果是随机的话，等于每一个密码都需要制作专门的彩虹表来尝试破解，破解成本就陡然上升到很难实行的地步","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608059750,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1359701,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","nickname":"小伟","note":"","ucode":"124953423491E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":169306,"discussion_content":"1. 盐和密文一起存储在密码表，如果密码表脱库就一起丢了。分开存储比较好。\n2. 同意，一个用户一个随机盐。对一个用户来说，盐在下次密码变动前是固定的。\n3. 能得到盐和密文，那彩虹表就不用变。因为 加密算法(明文+盐)=密文密码，现在知道了加密算法、盐和密文密码，明文靠猜，公式里的不都有了吗？\n4. 同意，量子叠加态带来的并行计算能力提升会让现有所有加密方式在有限时间内被破解。\n5. 同意。\n6. 为啥？能解释下为啥MD5能被破解吗？ ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581606422,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1899599,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/fc/4f/0a452c94.jpg","nickname":"大毛","note":"","ucode":"93B18287F06706","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1359701,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","nickname":"小伟","note":"","ucode":"124953423491E2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":211003,"discussion_content":"6.应该是前一段时间的事，MD5被一个中国教授破解了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584798838,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":169306,"ip_address":""},"score":211003,"extra":""},{"author":{"id":1359701,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","nickname":"小伟","note":"","ucode":"124953423491E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1899599,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/fc/4f/0a452c94.jpg","nickname":"大毛","note":"","ucode":"93B18287F06706","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":211723,"discussion_content":"但破解的代价还是很大的，需要几天时间，而且不是百分百能稳定破解。\n但能破解就意味着风险成倍增加，重要数据加密的确不适合md5了，但不敏感或不重要的数据还是问题不大吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584883642,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":211003,"ip_address":""},"score":211723,"extra":""},{"author":{"id":1899599,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/fc/4f/0a452c94.jpg","nickname":"大毛","note":"","ucode":"93B18287F06706","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1359701,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","nickname":"小伟","note":"","ucode":"124953423491E2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212127,"discussion_content":"嗯啊，我觉得可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584937532,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":211723,"ip_address":""},"score":212127,"extra":""}]}]},{"had_liked":false,"id":37318,"user_name":"FLYING","can_delete":false,"product_type":"c1","uid":1247930,"ip_address":"","ucode":"0389FE2337BADA","user_header":"https://static001.geekbang.org/account/avatar/00/13/0a/ba/7e7bb8a0.jpg","comment_is_top":false,"comment_ctime":1541550211,"is_pvip":false,"replies":[{"id":"13459","content":"谢谢指出 笔误 本来是想写“长”的 写成了“少”","user_name":"作者回复","user_name_real":"gg","uid":"1190123","ctime":1541642399,"ip_address":"","comment_id":37318,"utype":1}],"discussion_count":1,"race_medal":0,"score":"96030830723","product_id":100017301,"comment_content":"越是复杂哈希算法越难破解，但同样计算时间也就越少。这句话应该是越多吧？","like_count":22,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428289,"discussion_content":"谢谢指出 笔误 本来是想写“长”的 写成了“少”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541642399,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37569,"user_name":"道行三易","can_delete":false,"product_type":"c1","uid":1129196,"ip_address":"","ucode":"1E7730C11ED71A","user_header":"https://static001.geekbang.org/account/avatar/00/11/3a/ec/29ae62c5.jpg","comment_is_top":false,"comment_ctime":1541642188,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"61671184332","product_id":100017301,"comment_content":"所有的安全措施，只是增加攻击的成本而已！！！","like_count":14,"discussions":[{"author":{"id":1128059,"avatar":"https://static001.geekbang.org/account/avatar/00/11/36/7b/3788ca13.jpg","nickname":"冰风落叶","note":"","ucode":"E4DE480B95A17D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":21560,"discussion_content":"加盐的MD5怎么破解啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569500660,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1310452,"avatar":"https://static001.geekbang.org/account/avatar/00/13/fe/f4/78376973.jpg","nickname":"小白","note":"","ucode":"21B63AEFC8BF16","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1128059,"avatar":"https://static001.geekbang.org/account/avatar/00/11/36/7b/3788ca13.jpg","nickname":"冰风落叶","note":"","ucode":"E4DE480B95A17D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":179739,"discussion_content":"拿你的盐，盐和密文别放一起","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1582249523,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":21560,"ip_address":""},"score":179739,"extra":""}]}]},{"had_liked":false,"id":43538,"user_name":"Xianping","can_delete":false,"product_type":"c1","uid":1240709,"ip_address":"","ucode":"108EF4AFF699C9","user_header":"https://static001.geekbang.org/account/avatar/00/12/ee/85/59e39469.jpg","comment_is_top":false,"comment_ctime":1543238132,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"40197943796","product_id":100017301,"comment_content":"加盐之后，盐是随机的，但对一个用户来讲，盐是固定的，而且肯定是存储的，那同样找到盐之后可以轻易计算hash了<br>","like_count":9,"discussions":[{"author":{"id":1783603,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/37/33/7425bd10.jpg","nickname":"Jason","note":"","ucode":"25439BAAEEF8FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":143516,"discussion_content":"加盐是增加破解 hash 值的成本，计算 hash 是破解不了数据的哟","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1579512193,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318492,"discussion_content":"那盐应该怎么处理？但是又必须和用户信息存储在一块。除非存入另外一个数据库。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603764768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1250807,"avatar":"https://static001.geekbang.org/account/avatar/00/13/15/f7/744720a2.jpg","nickname":"DriveMan_邱佳源","note":"","ucode":"A4C83BF07DEE7A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7119,"discussion_content":"所以盐是公司私密的东西，应该锁在保险柜里","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567391013,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37324,"user_name":"伯安","can_delete":false,"product_type":"c1","uid":1047400,"ip_address":"","ucode":"3BD74E1EC689C0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/68/66e6e6d9.jpg","comment_is_top":false,"comment_ctime":1541551075,"is_pvip":false,"replies":[{"id":"13457","content":"应该没有吧。有破解方法 但也是基于碰撞的。但它也只是最近才被破解的","user_name":"作者回复","user_name_real":"gg","uid":"1190123","ctime":1541642304,"ip_address":"","comment_id":37324,"utype":1}],"discussion_count":3,"race_medal":0,"score":"35901289443","product_id":100017301,"comment_content":"哈希算法的特点有一条：从哈希值不能反向推导出原始数据（所以哈希算法也叫单向哈希算法）。<br><br>可是JAVA中的MD5类不是有加密和解密方法吗？解密的过程，是不是代表哈希算法能够反向推导出原始数据呢？就这块比较困惑。。","like_count":8,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428291,"discussion_content":"应该没有吧。有破解方法 但也是基于碰撞的。但它也只是最近才被破解的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541642304,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1092218,"avatar":"https://static001.geekbang.org/account/avatar/00/10/aa/7a/ae8c247d.jpg","nickname":"指尖以东","note":"","ucode":"1DEE134FE92FD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":256973,"discussion_content":"我也有这个疑惑，还没看java md5源码😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588519252,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1783603,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/37/33/7425bd10.jpg","nickname":"Jason","note":"","ucode":"25439BAAEEF8FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":143527,"discussion_content":"MD5 是一种 HASH 算法 ，拟作文件的唯一标识，可用于文件校验。MD5 后的信息本身不一定包含全部文件信息，就没有可逆的可能性。AES DES RSA 算法才可以加解密","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579512739,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49295,"user_name":"smarttime","can_delete":false,"product_type":"c1","uid":1140144,"ip_address":"","ucode":"460ED32D6165ED","user_header":"https://static001.geekbang.org/account/avatar/00/11/65/b0/9d11054a.jpg","comment_is_top":false,"comment_ctime":1544661950,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"27314465726","product_id":100017301,"comment_content":"salt存到数据库中，如果脱库了，通过彩虹表还是可以破解的对吗？请老师讲一下密码加盐最佳实践，在网上找了很多文章要么人云亦云，要么自以为是的重复造轮子，希望老师可以拿着当前大厂的真实方案来解惑","like_count":6,"discussions":[{"author":{"id":1359701,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","nickname":"小伟","note":"","ucode":"124953423491E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":169271,"discussion_content":"随机盐：\n  每个用户在创建或修改密码时产生一个随机数或序列，用户的密码明文和这个盐用加密算法得到密文密码并存储。盐单独存储，至少不要放在密码表里，防止一起脱库。校验密码时用读取盐，和输入的明文一起再生产密文密码，和密码表里的做比对。","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1581605881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318495,"discussion_content":"是否会引起特意拒绝服务攻击？比如每次都要读盐值。不过这些盐值可以存redis。落库时存db","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603765384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144619,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1571981924,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23046818404","product_id":100017301,"comment_content":"今天终于知道为什么hash值会冲突了","like_count":5},{"had_liked":false,"id":51876,"user_name":"落叶飞逝的恋","can_delete":false,"product_type":"c1","uid":1046429,"ip_address":"","ucode":"F9A95DB28BCF1E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/9d/be04b331.jpg","comment_is_top":false,"comment_ctime":1545272852,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"23020109332","product_id":100017301,"comment_content":"老师有个问题：<br>我们可以从图片的二进制码串开头取 100 个字节，从中间取 100 个字节，从最后再取 100 个字节，然后将这 300 个字节放到一块，通过哈希算法（比如 MD5），得到一个哈希字符串，用它作为图片的唯一标识。<br>这里说的取图片的二进制码串头部、中部、尾部的100个字节，这样图片在第一次计算的时候，还是需要完全读取图片的流。第一次就很耗时呀？","like_count":5,"discussions":[{"author":{"id":1061842,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLX8ole5k6gIZ1j5V0CUUGxBJoxGp9x6CxbkTHuTB9s2QKdyKT4PYYV3vTraLAxBqjwmJEXlRvXIQ/132","nickname":"bookheart","note":"","ucode":"96514218509202","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530623,"discussion_content":"根据文件开始位置取偏移就可以了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1637113107,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2169775,"avatar":"https://static001.geekbang.org/account/avatar/00/21/1b/af/f766fef7.jpg","nickname":"赵文帅","note":"","ucode":"B36E8BD8136B02","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566464,"discussion_content":"在第一次存图片的时候，本来就需要读到完整的流，要不然你怎么存储","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650696963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110742,"user_name":"坤","can_delete":false,"product_type":"c1","uid":1010922,"ip_address":"","ucode":"74E6838226A405","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6c/ea/ce9854a5.jpg","comment_is_top":false,"comment_ctime":1562322939,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"18742192123","product_id":100017301,"comment_content":"SHA128 也被攻破了，Google的成果。","like_count":4,"discussions":[{"author":{"id":1359701,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","nickname":"小伟","note":"","ucode":"124953423491E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":169315,"discussion_content":"有详情吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581606560,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1010922,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/6c/ea/ce9854a5.jpg","nickname":"坤","note":"","ucode":"74E6838226A405","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1359701,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","nickname":"小伟","note":"","ucode":"124953423491E2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":170690,"discussion_content":"建议自己google一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581682372,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":169315,"ip_address":""},"score":170690,"extra":""}]}]},{"had_liked":false,"id":97726,"user_name":"chengzise","can_delete":false,"product_type":"c1","uid":1006070,"ip_address":"","ucode":"1C27D216359894","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/f6/ed66d1c1.jpg","comment_is_top":false,"comment_ctime":1558756471,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"18738625655","product_id":100017301,"comment_content":"1. hash不可能做到无冲突的原理，可以用数学中的函数映射来理解。hash函数本质就是明文空间到密文空间的映射，以md5为例，它的密文空间是2^128，明文空间是无穷大的，所以存在多个明文映射到同一个密文，不存在无冲突的hash。<br>2. 同时，为什么说可以设计出md5等碰撞概率小的hash函数：虽然刚才说的明文空间是无穷大的，但是实际人类使用的明文空间没有想象中的那么大，例如：大量的文章都是相对于有意义的，随机的乱码文章，人类根本不会使用到。因此还是可以设计出在人类使用的明文空间的hash函数的","like_count":4,"discussions":[{"author":{"id":1783603,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/37/33/7425bd10.jpg","nickname":"Jason","note":"","ucode":"25439BAAEEF8FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":143530,"discussion_content":"明文空间无穷大是指明文存在无限可能","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579512851,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":38099,"user_name":"Tintin","can_delete":false,"product_type":"c1","uid":1230604,"ip_address":"","ucode":"53936A3C6A6D20","user_header":"https://static001.geekbang.org/account/avatar/00/12/c7/0c/8e7f1a85.jpg","comment_is_top":false,"comment_ctime":1541934631,"is_pvip":false,"replies":[{"id":"13706","content":"我再去研究下 有没有要求说加密算法必须能解密才叫加密算法。这里你看以理解为数字签名","user_name":"作者回复","user_name_real":"gg","uid":"1190123","ctime":1541985947,"ip_address":"","comment_id":38099,"utype":1}],"discussion_count":3,"race_medal":0,"score":"18721803815","product_id":100017301,"comment_content":"个人认为hash算法不能做加密用，因为解密不出来，文中说的不是准确","like_count":4,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428601,"discussion_content":"我再去研究下 有没有要求说加密算法必须能解密才叫加密算法。这里你看以理解为数字签名","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541985947,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1275407,"avatar":"https://static001.geekbang.org/account/avatar/00/13/76/0f/c7c8021d.jpg","nickname":"豆豆","note":"","ucode":"97788B134C3212","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284626,"discussion_content":"这样死扣，百度百科也不准备吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592571337,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1102926,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d4/4e/586b7bc6.jpg","nickname":"岁月如哥","note":"","ucode":"B7B870F6FFD6F0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":78710,"discussion_content":"严格的说编码和散列不属于加密解密范畴","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575994017,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142085,"user_name":"小喵喵","can_delete":false,"product_type":"c1","uid":1062444,"ip_address":"","ucode":"FDBBB2A59DB8B6","user_header":"https://static001.geekbang.org/account/avatar/00/10/36/2c/8bd4be3a.jpg","comment_is_top":false,"comment_ctime":1571292675,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"14456194563","product_id":100017301,"comment_content":"王老师，请教下：<br>1. 安全加密是指先根据原文通过哈希函数求哈希值，然后再对哈希值进行MD5或SHA加密吗？如果不是，那请老师举例说明一下具体怎么加密的。<br>2.针对字典攻击采用加盐的方式来增加复杂度。是不是加盐的字母，比如我加盐前缀为XYZ,用户的密码为123456，我加盐后变成了XYZ123456，那这个XYZ是不是要告诉用户，不然用户不知道自己的密码呀，对不对呢？","like_count":3,"discussions":[{"author":{"id":1652836,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epKJlW7sqts2ZbPuhMbseTAdvHWnrc4ficAeSZyKibkvn6qyxflPrkKKU3mH6XCNmYvDg11tB6y0pxg/132","nickname":"pc","note":"","ucode":"1AD538B9A900B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":245470,"discussion_content":"1、md5之类就是哈希了\n2、不对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587660171,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1866485,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/7a/f5/54a5084b.jpg","nickname":"简单猫","note":"","ucode":"EA027D4C344E25","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":238219,"discussion_content":"问题有点低级，加盐的后再用hash算法的这个方法都在服务器后台","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587215379,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1753115,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/c0/1b/319baf9d.jpg","nickname":"ZMH.","note":"","ucode":"D45D6CEDFDF8F5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":225491,"discussion_content":"用户的密码还是123456..用户注册时我们将123456加上XYZ,然后加密存储..下次用户输入密码123456..我们再加上XYZ然后加密..跟数据库比对是否一致","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586360048,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37405,"user_name":"bro.","can_delete":false,"product_type":"c1","uid":1124948,"ip_address":"","ucode":"D65283CD869804","user_header":"https://static001.geekbang.org/account/avatar/00/11/2a/54/c9990105.jpg","comment_is_top":false,"comment_ctime":1541576115,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"14426478003","product_id":100017301,"comment_content":"java中是没有MD5的解密的,一个很简单的例子,一部电影可以加密成128为的MD5值存储,那么能将这128位的md5值还原成相对应的一部高清电影吗,如果可以的话,以后就不用拍电影了,直接写128位密码值还原一下就好了吗,网上的破解,只是维护一个密码表,暴力的一一对应,根据密码生成的MD5到表中查询是否存在,如果存在对应的密码值是?一般小公司要求不高的话会在密码前后加上特定的字符串在生成md5在上传保存的.有效避免常用密码被破解","like_count":3,"discussions":[{"author":{"id":2032840,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/04/c8/3c7af100.jpg","nickname":"Javatar","note":"","ucode":"E216645CDF632C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288644,"discussion_content":"想太多了bro，md5是不可逆的。也就是你通过md5值，根本推不出来原本的信息是什么。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1593831396,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2221397,"avatar":"https://static001.geekbang.org/account/avatar/00/21/e5/55/ae64df9d.jpg","nickname":"cloudy","note":"","ucode":"8D3AA12C499F1B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2032840,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/04/c8/3c7af100.jpg","nickname":"Javatar","note":"","ucode":"E216645CDF632C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326003,"discussion_content":"md5的确是不可逆的，只是黑客有彩虹表，可以通过你加密后的数据，反向去彩虹表中查询对应的明文密码。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605497383,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":288644,"ip_address":""},"score":326003,"extra":""}]},{"author":{"id":1359701,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","nickname":"小伟","note":"","ucode":"124953423491E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":169312,"discussion_content":"固定盐","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581606534,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":222817,"user_name":"TheStarBoys","can_delete":false,"product_type":"c1","uid":2009311,"ip_address":"","ucode":"9A6D70482F9212","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/SiciaNKibn60SjA50TsTEtO09DoRA57UozylHmKckZXkJmNiaShSC0BIP6TdZC6cAphuEzmuxMHWwvpYN8P7kKb8eA/132","comment_is_top":false,"comment_ctime":1590919153,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"10180853745","product_id":100017301,"comment_content":"我就简单举几个点。<br>1. 比特币中的地址是通过根据公式：<br>address = Base58(version + pubKeyHash + Checksum)<br>将椭圆曲线乘法得到的公钥，进行双重哈希RIPEMD160(SHA256(pubKey)) =&gt; 得到公钥哈希PubKeyHash,。<br>Version是比特币的版本<br>Checksum = SAH256(SHA256(Version + PubKeyHash)) 取前四个字节作为校验和。<br>2. Merkel Tree，比特币中的默克尔树用来存储交易信息。<br>默克尔树形似二叉树，其结点值均为哈希值，叶子结点为交易信息的哈希值，父节点值由左右孩子结点值拼接后进行哈希运算得到，最终得到默克尔根，这是一个递归的过程（迭代也行，看具体实现）。一旦交易信息发生改变，默克尔树中这笔交易对应的所有结点值都会发生改变，最终导致默克尔根发生改变，以此来确保交易信息不可篡改。<br>以上两点在此网站有做一个简单的效果演示：<br>http:&#47;&#47;www.blockchaindemo.top&#47;merkleTree","like_count":2,"discussions":[{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318497,"discussion_content":"赞。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603765713,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118411,"user_name":"张三","can_delete":false,"product_type":"c1","uid":1004092,"ip_address":"","ucode":"1155528FAE1546","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/3c/d6fcb93a.jpg","comment_is_top":false,"comment_ctime":1564361707,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10154296299","product_id":100017301,"comment_content":"7月最后一周了，继续加油，从6月10号开始的，希望能坚持下去！","like_count":2},{"had_liked":false,"id":39418,"user_name":"学习爱好者","can_delete":false,"product_type":"c1","uid":1236851,"ip_address":"","ucode":"F00A42CAB9912D","user_header":"","comment_is_top":false,"comment_ctime":1542271508,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"10132206100","product_id":100017301,"comment_content":"王老师好，关于哈希加密，我查了一些资料，但是有几个点不太明白，希望老师能指点一下：<br>1、网上说，固定盐值硬编码到程序里不安全，推荐把哈希值和随机盐一起存储到数据库里，这种做法是否可行？如果盐存在库里，脱库后也轻松拿到盐，用彩虹表也能比较容易破解吧？感觉这样做也不行啊<br>2、这节里说到的哈希加密应该属于存储范畴，那web传输的账号密码怎么加密呢？直接在客户端求哈希值？还是把密码传到服务端再算哈希值？<br>3、这节的举例子aes，des应该属于对称加密吧？感觉放到哈希加密好像不太合适。<br>4、以MD5为例，有2^128个哈希值，但是我们可取的值有无数个，那按照鸽巢理论，碰撞的可能肯定大于1；相反，如果数据库里存原始密码，命中的可能只有1种，就是完全等于原始密码，从这个角度讲，如果不脱库，存储原始密码是不是更安全？","like_count":2,"discussions":[{"author":{"id":1359701,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","nickname":"小伟","note":"","ucode":"124953423491E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":169364,"discussion_content":"1. 密文密码和盐在不同表里存，如果两张表都脱了，那就没办法了。但增加了破解难度，因为你还要拿到盐表。\n2. HTTPS会搞定。\n3. 只是说AES等也是加密算法，没说也是哈希算法。\n4. 算算概率就知道了。\n    a)密码未脱库，明文被破解概率是1/2^128，密文是n/2^128，n是哈希冲突次数，就算n=10000000，两个值也几乎一样。\n    b)密码脱库，明文不用破解，100%泄露，密文要靠彩虹表，概率高下立判。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1581607234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1137727,"avatar":"https://static001.geekbang.org/account/avatar/00/11/5c/3f/34e5c750.jpg","nickname":"看，有只猪","note":"","ucode":"F9BB302BC71CE8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5747,"discussion_content":"1.可以将哈希值与盐分开存储，避免避免一个库被攻破，所有信息都泄露\n2.Web传输时可以采用HTTPS协议，将传输的内容进行加密\n4.存放明文的话，库被攻破，你的信息直接就泄露完，都不需要想方法去破解。库是存在被攻破的风险的(人为或者系统存在漏洞)，因此安全有一个重要的事是尽可能避免损失，即使被脱库，你不能获得原始数据，意义也不大","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1566459763,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1042753,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/p6kkT7nsViayxazIrxx7p0pklPRvet933nEGBupj1phL2zArLStC3MnHFFyBYZ9fDGbPWJxS6WOICkxCCLia7nhw/132","nickname":"Qfxl","note":"","ucode":"4554F28BB10F21","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":87281,"discussion_content":"补充一下 4. 储存的哈希值最主要是用来跟运行时新计算的哈希值做比对，只有相等才证明用户极大的概率输入了正确密码。即使有绝对安全的数据库也避免不了人这个最不稳定的因素，如社会工程...","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576658577,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1437292,"avatar":"https://static001.geekbang.org/account/avatar/00/15/ee/6c/246fa0d1.jpg","nickname":"Mr.差不多","note":"","ucode":"946555FCAE710B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":56909,"discussion_content":"web传输采用的HTTPS协议，HTTPS协议又利用了对称加密 和非对称加密的优点，利用非对称加密算法传输对称加密的秘钥。这样黑客在中间拦截到的数据也是加密过后的数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574524095,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37546,"user_name":"小虾米","can_delete":false,"product_type":"c1","uid":1005528,"ip_address":"","ucode":"F543987A7FAB20","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/d8/425e1b0a.jpg","comment_is_top":false,"comment_ctime":1541638814,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10131573406","product_id":100017301,"comment_content":"区块链的每个区块的hash值不仅和上个区块有关系，还要求最后的值满足一定条件，由于hash值不可逆推，这在计算结果时会耗费很大的计算资源去尝试不同的nonce值直到区块的hash值满足条件为止，所以如果篡改区块的历史数据需要花费很大的算力把那个区块以及以后的区块重新找一遍nonce值以满足hash值的范围要求，并且需要全网大多数机器的认可，这几乎是不可能完成的任务","like_count":2,"discussions":[{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318496,"discussion_content":"这个应该是第一个赞数最多smallfly的解答。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603765514,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37328,"user_name":"Hesher","can_delete":false,"product_type":"c1","uid":1026832,"ip_address":"","ucode":"99AB8B1704CB7E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ab/10/b812ff3e.jpg","comment_is_top":false,"comment_ctime":1541551595,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10131486187","product_id":100017301,"comment_content":"比特币是两重hash，先做hash160或sha256，然后RIPEMD160，得到160位的hash串。主要用于Pow工作量证明。使用这两种散列算法应该主要是考虑安全性，但至于为什么是这两种就不太清楚了。","like_count":2},{"had_liked":false,"id":165103,"user_name":"注定非凡","can_delete":false,"product_type":"c1","uid":1113597,"ip_address":"","ucode":"80673056E131B7","user_header":"https://static001.geekbang.org/account/avatar/00/10/fd/fd/326be9bb.jpg","comment_is_top":false,"comment_ctime":1577161622,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5872128918","product_id":100017301,"comment_content":"一：什么是哈希算法<br>\t将任意长度的二进制值串映射为固定长度的二进制值串，这个映射规则就是哈希算法，而通过原始数据映射之后得到的二进制值串就是哈希值。<br><br>二：设计一个优秀的哈希算法要求：<br>\t1，从哈希值不能反向推导出原始数据（所以哈希算法也叫单向哈希算法）<br>\t2，对输入数据非常敏感，哪怕原始数据只修改了一个Bit，最后得到的哈希值也大不相同<br>\t3，散列冲突的概率要小，对于不同的原始数据，哈希值相同的概率非常小<br>\t4，哈希算法的执行效率要尽量高效，针对较长的文本，也能快速的计算出哈希值。<br><br>三：常见的哈希算法应用<br>\t1，哈希算法的应用非常多，常见的七个：安全加密，唯一标识，数据校验，散列函数，负载均衡，数据分片，分布式存储<br><br>四：常见应用分析<br><br>应用一：安全加密<br>\t1，最常用的<br>MD5(Message-Digest Algorithm，信息摘要算法)，<br>SHA(Secure Hash Algorithm，安全散列算法)，<br>DES(Data Encryption Standard，数据加密标准)<br>AES(Advanced Encryption Standard，高级加密标准)<br><br>\t2，安全加密的关键点<br>\t\t第一点：很难根据哈希值反向推导出原始数据<br>\t\t第二点：散列冲突的概率要很小。<br><br>\t3，哈希算法为什么无法避免冲突<br>不管是什么哈希算法，只能尽量减少碰撞冲突的概率，理论上是无法做到完全不冲突的。<br>鸽巢原理（也叫抽屉原理）：如果有10个鸽巢，有11只鸽子，那肯定有1个鸽巢中的鸽子数量多于1。<br>\t\t基于鸽巢理论，可以解释为什么哈希算法无法做到零冲突：<br>①：哈希算法产生的哈希值的长度是固定且有限的，所以能表示的数据就是有限的，最多能够表示2^哈希值位数。<br>②：然而，需要哈希的数据是无穷的，无穷对有限，基于鸽巢理论，如果我们对有限个数据求哈希值，就必然会出现哈希值相同的情况。<br><br>\t4，哈希冲突的概率：<br>\t\t一般情况下，哈希值越长的哈希算法，散列冲突的概率越低。<br>\t\t2^128=340282366920938463463374607431768211456<br>\t5，没有绝对安全的加密。<br>\t\t越复杂，越难破解的加密算法，需要的计算时间也越长。<br>\t应用二：唯一标识<br>\t1，可以通过为每个资源取一个唯一标识，减少资源查找的工作量。<br>\t2，更高效的做法：先通过哈希算法对这个图片取唯一标识，然后在散列表中查找是否存在这个唯一标识。<br><br>\t应用三：数据校验<br>\t1，网络传输数据不安全，传输数据的过程中，数据可能被宿主机篡改，或数据丢失，所以需要校验文件的安全，正确，完整性<br>\t2，因为哈希算法很敏感，所以在文件块下载完后，使用相同的哈希算法，对于文件计算，判断是否相同。<br><br>\t应用四：散列函数<br>\t1，散列函数也是哈希算法的一种应用，但散列函数对散列算法冲突要求比较低。<br>\t2，散列函数对散列算法计算得到的值，是否能反向解密也并不关心。<br>\t3，散列函数对散列算法更关心的是散列后的值能否平均分布。散列算法执行速度是否足够快。<br>","like_count":1},{"had_liked":false,"id":133182,"user_name":"色即是空","can_delete":false,"product_type":"c1","uid":1189638,"ip_address":"","ucode":"46B8975ED087B8","user_header":"https://static001.geekbang.org/account/avatar/00/12/27/06/7ab75a5b.jpg","comment_is_top":false,"comment_ctime":1568436209,"is_pvip":false,"replies":[{"id":"51222","content":"慢慢来啊，一口吃不成大胖子","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1568588441,"ip_address":"","comment_id":133182,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5863403505","product_id":100017301,"comment_content":"迷迷糊糊的，知道个大概，没用过","like_count":1,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467284,"discussion_content":"慢慢来啊，一口吃不成大胖子","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568588441,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97728,"user_name":"chengzise","can_delete":false,"product_type":"c1","uid":1006070,"ip_address":"","ucode":"1C27D216359894","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/f6/ed66d1c1.jpg","comment_is_top":false,"comment_ctime":1558756779,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5853724075","product_id":100017301,"comment_content":"文章中的“脱库”应该用“拖库”比较形象。拖库是管理或者设计的错误导致的数据库被非法获取。hash函数处理本身不能解决拖库问题，解决的是被拖库后，防止被撞库，导致hash处理的密码被猜出。","like_count":1},{"had_liked":false,"id":82738,"user_name":"Anything","can_delete":false,"product_type":"c1","uid":1477255,"ip_address":"","ucode":"EAD6FB1A9BB60F","user_header":"https://static001.geekbang.org/account/avatar/00/16/8a/87/c7d0b1cb.jpg","comment_is_top":false,"comment_ctime":1554289277,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5849256573","product_id":100017301,"comment_content":"d131dd02c5e6eec4693d9a0698aff95c2fcab58712467eab4004583eb8fb7f8955ad340609f4b30283e488832571415a085125e8f7cdc99fd91dbdf280373c5bd8823e3156348f5bae6dacd436c919c6dd53e2b487da03fd02396306d248cda0e99f33420f577ee8ce54b67080a80d1ec69821bcb6a8839396f9652b6ff72a70<br>%edde4181249fea68547c2fd0edd2e22f<br><br><br>d131dd02c5e6eec4693d9a0698aff95c2fcab50712467eab4004583eb8fb7f8955ad340609f4b30283e4888325f1415a085125e8f7cdc99fd91dbd7280373c5bd8823e3156348f5bae6dacd436c919c6dd53e23487da03fd02396306d248cda0e99f33420f577ee8ce54b67080280d1ec69821bcb6a8839396f965ab6ff72a70<br>%e234dbc6aa0932d9dd5facd53ba0372a<br><br>老师, 请问这两个字符串经MD5加密后, 哈希值怎么不一样?","like_count":1,"discussions":[{"author":{"id":1729871,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJGrzCZ39qXib5DShdHEV9FSD6PjTTNuwicM5rg1EXYl2fiaxC6QpOIOBpwS3TZbygCvd7cI5Cee96Ug/132","nickname":"Geek_129053","note":"","ucode":"9C32C2C8BC859A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380022,"discussion_content":"同问，我也试了，确实不一样。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624284598,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48104,"user_name":"吴小智","can_delete":false,"product_type":"c1","uid":1310798,"ip_address":"","ucode":"C7C9F58B5C9F7B","user_header":"https://static001.geekbang.org/account/avatar/00/14/00/4e/be2b206b.jpg","comment_is_top":false,"comment_ctime":1544355300,"is_pvip":false,"replies":[{"id":"17169","content":"我觉得没必要","user_name":"作者回复","user_name_real":"gg","uid":"1190123","ctime":1544406977,"ip_address":"","comment_id":48104,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5839322596","product_id":100017301,"comment_content":"请问老师，有必要研究这些加密算法的具体实现吗?","like_count":1,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432027,"discussion_content":"我觉得没必要","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544406977,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":38416,"user_name":"小喵喵","can_delete":false,"product_type":"c1","uid":1062444,"ip_address":"","ucode":"FDBBB2A59DB8B6","user_header":"https://static001.geekbang.org/account/avatar/00/10/36/2c/8bd4be3a.jpg","comment_is_top":false,"comment_ctime":1542033245,"is_pvip":false,"replies":[{"id":"13807","content":"是非对称加密算法吧 跟现在讲的哈希算法 有点扯远了","user_name":"作者回复","user_name_real":"gg","uid":"1190123","ctime":1542073546,"ip_address":"","comment_id":38416,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5837000541","product_id":100017301,"comment_content":"Rsa加密呢？","like_count":1,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428695,"discussion_content":"是非对称加密算法吧 跟现在讲的哈希算法 有点扯远了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542073546,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1542987,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8b/4b/fa52d222.jpg","nickname":"行则将至","note":"","ucode":"DB972F2DF059C4","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575069,"discussion_content":"公钥、私钥，是另一种加密算法了吧。和hash没啥关系","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654579494,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37631,"user_name":"Nior","can_delete":false,"product_type":"c1","uid":1089144,"ip_address":"","ucode":"FADC1F3CFA21FC","user_header":"https://static001.geekbang.org/account/avatar/00/10/9e/78/7663ed26.jpg","comment_is_top":false,"comment_ctime":1541660560,"is_pvip":false,"replies":[{"id":"13593","content":"不好意思 你可以谷歌一下 网上有关于md5冲突的例子","user_name":"作者回复","user_name_real":"gg","uid":"1190123","ctime":1541728561,"ip_address":"","comment_id":37631,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5836627856","product_id":100017301,"comment_content":"老师，那两个示例的字符串不应该以图片的形式放出来啊，还要自己识别一下才能使用，稍有些不便。","like_count":1,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428433,"discussion_content":"不好意思 你可以谷歌一下 网上有关于md5冲突的例子","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541728561,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37332,"user_name":"Geek_d9e655","can_delete":false,"product_type":"c1","uid":1163936,"ip_address":"","ucode":"2137A54DB1129E","user_header":"","comment_is_top":false,"comment_ctime":1541551801,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5836519097","product_id":100017301,"comment_content":"MD5也并不是总看起来那么随机，比如说“ozulmt”<br>&lt;3","like_count":1},{"had_liked":false,"id":37321,"user_name":"Wei位","can_delete":false,"product_type":"c1","uid":1178939,"ip_address":"","ucode":"C5FDACA12058DA","user_header":"https://static001.geekbang.org/account/avatar/00/11/fd/3b/6169748b.jpg","comment_is_top":false,"comment_ctime":1541550725,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5836518021","product_id":100017301,"comment_content":"区块链正是每个块的信息拥有独特的hash值，每个节点保存上一节点的哈希。确保信息的不可篡改","like_count":1},{"had_liked":false,"id":359385,"user_name":"阿杰","can_delete":false,"product_type":"c1","uid":2370758,"ip_address":"广东","ucode":"B9C504269C8CD3","user_header":"https://static001.geekbang.org/account/avatar/00/24/2c/c6/416bd86e.jpg","comment_is_top":false,"comment_ctime":1665491053,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1665491053","product_id":100017301,"comment_content":"打卡学习，内容总结：<br>哈希算法的作用：<br>1. 用于安全加密，对于加密算法要求是：一、很难（有限的时间和空间资源基本不可能）反推出加密前的原文；二、散列冲突的概率很小。前者是为了保证人家没法根据密文反推窃取出你的正确密码。后者是为了保证不会出现你的密码是123，但是输入123.也能验证成功。<br>且用哈希加密还有一个好处，哪怕得到了加密后的密文，直接用密文登陆也没法验证成功，因为程序上做了处理，会把你的密文再执行一次哈希，然后把哈希后的结果和数据库的进行比对。<br><br>2. 作唯一标识，比如我们要搜索一个图片在图库是否存在，其实不止是图片可以这么干，任何文件其实都可以这么干（毕竟计算机眼里只有二进制，任何文件在计算机里都可以表示成字节码串），笨的办法是把文件对应的字节码流和电脑中每个文件的字节码流中的每个字节挨个比对，但是有的文件可能会很大，所以这种笨方法效率会很低。<br>比较好的方式是，从文件字节码流抽取前100，中间100，最后100（可以根据文件大小来制定抽样的次数和样本空间的大小），然后把抽取出来的这300个字节码进行哈希，把哈希值作为该图片或文件的唯一标识，然后把哈希值和文件路径用散列表存起来。当要搜索文件a时，我们依据上述方法把计算出a的哈希值，然后代入散列表中，若能查找到，则根据获取到的文件路径找到文件，并和查找文件进行全字节码比对，若完全一致则代表存在，否则代表不存在。<br><br>3.  作数据校验，比如用电驴这样的BT下载软件，我们可以从多台服务器上面下载文件内容，一个2GB大得文件可能被拆分成100个文件块（每个文件20MB左右大小），分开存放在若干个服务器上。但是这样问题就来了，网络传输是不安全的，我们必须有能够校验文件完整性以及文件是否被篡改的能力。这时我们可以用到哈希算法，种子文件中存放每个文件计算出来的哈希值，下载完每一个文件块之后都对其使用相同的哈希算法进行计算（如果分块的文件仍然比较大，那么可以采取应用二中的技巧，对文件块的字节流进行分组抽样计算哈希值），然后把计算之后的值与种子中存放的哈希值列表进行比对，如果不存在，则代表文件可能被恶意篡改了，需要从服务器上重新下载。<br><br>4. 做散列表的散列函数，散列函数本质上就是哈希算法。但是因为应用场景不同，所以对散列函数在某些点上的要求并没有那么高。比如：一、散列函数能够接收哈希冲突，因为散列表一般都有解决哈希冲突的手段，如：开放寻址法和拉链法。","like_count":1},{"had_liked":false,"id":358906,"user_name":"111","can_delete":false,"product_type":"c1","uid":3109487,"ip_address":"北京","ucode":"D6E8E83A118A3E","user_header":"https://static001.geekbang.org/account/avatar/00/2f/72/6f/44c10658.jpg","comment_is_top":false,"comment_ctime":1665018288,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1665018288","product_id":100017301,"comment_content":"总结：<br>1. hash应用<br> 1. 唯一标识<br> 2. 数据校验<br> 3. 加密<br> 4. hash表<br><br>区块链：<br> 用的sha256，同时其工作量证明就是依靠hash算法去找到符合目标的值。不可篡改是因为，如果有交易被篡改了，那么加密之后的hash值就是错误的，别人不会承认。只有最长的链才是合法的，篡改的代价太大。","like_count":0},{"had_liked":false,"id":356336,"user_name":"蒋慕平","can_delete":false,"product_type":"c1","uid":2302901,"ip_address":"重庆","ucode":"57B8FF7F00C042","user_header":"https://static001.geekbang.org/account/avatar/00/23/23/b5/639a12ec.jpg","comment_is_top":false,"comment_ctime":1662176110,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1662176110","product_id":100017301,"comment_content":"1. hash算法，应用数字签名。MD5(128),SHA256<br>2.唯一标示，应用表示事物的唯一性，常用的应用。秒转文件<br>3. 数据完整性，下载文件时MD5验证<br>4. Hash函数的","like_count":0},{"had_liked":false,"id":338177,"user_name":"Null","can_delete":false,"product_type":"c1","uid":1382587,"ip_address":"","ucode":"A7D4DF2A43C7D8","user_header":"https://static001.geekbang.org/account/avatar/00/15/18/bb/9299fab1.jpg","comment_is_top":false,"comment_ctime":1647335863,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1647335863","product_id":100017301,"comment_content":"（1）我们可以通过哈希算法，对用户密码进行加密之后再存储，不过最好选择相对安全的加密算法，比如 SHA 等（因为 MD5 已经号称被破解了）。不过仅仅这样加密之后存储就万事大吉了吗？<br><br>（2）字典攻击你听说过吗？如果用户信息被“脱库”，黑客虽然拿到是加密之后的密文，但可以通过“猜”的方式来破解密码，这是因为，有些用户的密码太简单。比如很多人习惯用 00000、123456 这样的简单数字组合做密码，很容易就被猜中。<br><br>（3）那我们就需要维护一个常用密码的字典表，把字典中的每个密码用哈希算法计算哈希值，然后拿哈希值跟脱库后的密文比对。如果相同，基本上就可以认为，这个加密之后的密码对应的明文就是字典中的这个密码。（注意，这里说是的是“基本上可以认为”，因为根据我们前面的学习，哈希算法存在散列冲突，也有可能出现，尽管密文一样，但是明文并不一样的情况。）<br><br>（4）针对字典攻击，我们可以引入一个盐（salt），跟用户的密码组合在一起，增加密码的复杂度。我们拿组合之后的字符串来做哈希算法加密，将它存储到数据库中，进一步增加破解的难度。不过我这里想多说一句，我认为安全和攻击是一种博弈关系，不存在绝对的安全。所有的安全措施，只是增加攻击的成本而已。<br><br><br>1、2、3、4是不是顺序调整下，读起来意思承接不对啊。应该是1、3、2、4。<br><br>3 那么我们需要维护一个字段表是接着1说的吧，“不过仅仅这样加密之后存储就万事大吉了吗？”应该放到3后面说，然后引出2.<br><br>虽然是网文，不然读起来还是很费脑子的，因果关系不对，对于我这种人就挺闹心的。","like_count":0},{"had_liked":false,"id":337056,"user_name":"Today","can_delete":false,"product_type":"c1","uid":1235000,"ip_address":"","ucode":"4FA397F0BD8C6E","user_header":"https://static001.geekbang.org/account/avatar/00/12/d8/38/41027bda.jpg","comment_is_top":false,"comment_ctime":1646573947,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646573947","product_id":100017301,"comment_content":"本节学习了哈希算法的以下应用：<br>1. 对数据进行唯一标识，或信息摘要<br>2. 验证数据的完整性和正确性<br>3. 散列函数<br>4. 加密算法，一般配合随机盐进行加密<br>思考题<br>通过评论了解到区块链中使用的是 SHA-256 的加密算法，通过一条唯一的哈希链保证链路的可靠","like_count":0},{"had_liked":false,"id":318969,"user_name":"QUINCY","can_delete":false,"product_type":"c1","uid":1236845,"ip_address":"","ucode":"ECB80013B19CA1","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/6d/b227801c.jpg","comment_is_top":false,"comment_ctime":1635493728,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635493728","product_id":100017301,"comment_content":"感觉称 MD5 是一种加密算法，并不太准确。 MD5 hash后是不可以逆转的。如果有加密，应该就有解密。所以个人觉得略欠妥当","like_count":0},{"had_liked":false,"id":316939,"user_name":"海","can_delete":false,"product_type":"c1","uid":2418232,"ip_address":"","ucode":"09FAF70D78668A","user_header":"https://static001.geekbang.org/account/avatar/00/24/e6/38/25e7cce5.jpg","comment_is_top":false,"comment_ctime":1634621992,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634621992","product_id":100017301,"comment_content":"在UNIX系统中用户的密码是以MD5（或其它类似的算法）经Hash运算后存储在文件系统中。当用户登录的时候，系统把用户输入的密码进行MD5 Hash运算，然后再去和保存在文件系统中的MD5值进行比较，进而确定输入的密码是否正确。通过这样的步骤，系统在并不知道用户密码的明码的情况下就可以确定用户登录系统的合法性。这可以避免用户的密码被具有系统管理员权限的用户知道。","like_count":0},{"had_liked":false,"id":313952,"user_name":"千锤百炼领悟之极限","can_delete":false,"product_type":"c1","uid":1744257,"ip_address":"","ucode":"224B5CF2101716","user_header":"https://static001.geekbang.org/account/avatar/00/1a/9d/81/d748b7eb.jpg","comment_is_top":false,"comment_ctime":1632753311,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632753311","product_id":100017301,"comment_content":"哈希算法的应用场景<br>数据加密(数据签名)<br>唯一标识<br>数据校验<br>散列表","like_count":0},{"had_liked":false,"id":313425,"user_name":"侯恩训","can_delete":false,"product_type":"c1","uid":1162376,"ip_address":"","ucode":"F4DC47EECA0F00","user_header":"https://static001.geekbang.org/account/avatar/00/11/bc/88/fbb6022e.jpg","comment_is_top":false,"comment_ctime":1632416518,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632416518","product_id":100017301,"comment_content":"学习总结：<br>1. 什么事hash算法：将任意长度的字符串通过hash函数转化成固定长度的字符串的算法。<br>2. hash函数特点<br>2.1 不能反向 单向hash<br>2.2 对输入敏感<br>2.3 冲突小<br>2.4 算法高效<br><br>3. hash算法用途<br>3.1 安全加密<br>3.2 唯一标示<br>3.3 数据校验<br>3.4 散列函数<br><br>思考题：<br>区块链使用的是sha256算法","like_count":0},{"had_liked":false,"id":311505,"user_name":"哈哈","can_delete":false,"product_type":"c1","uid":1356689,"ip_address":"","ucode":"A48D48DEBE5701","user_header":"https://static001.geekbang.org/account/avatar/00/14/b3/91/b01d99af.jpg","comment_is_top":false,"comment_ctime":1631260347,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631260347","product_id":100017301,"comment_content":"MD5不是加密 是hash，加密是可以解密的,  斗胆希望老师把MD5加密的说法改一下","like_count":0},{"had_liked":false,"id":311058,"user_name":"李叶","can_delete":false,"product_type":"c1","uid":1470449,"ip_address":"","ucode":"41B33FA8526E48","user_header":"https://static001.geekbang.org/account/avatar/00/16/6f/f1/35f9f16f.jpg","comment_is_top":false,"comment_ctime":1631058568,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631058568","product_id":100017301,"comment_content":"哈希算法的4个应用场景：数据加密，唯一标识，散列函数以及数据校验","like_count":0},{"had_liked":false,"id":297712,"user_name":"海崖","can_delete":false,"product_type":"c1","uid":2552745,"ip_address":"","ucode":"9D42E0B0D30A56","user_header":"https://static001.geekbang.org/account/avatar/00/26/f3/a9/bb9d8450.jpg","comment_is_top":false,"comment_ctime":1623744481,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623744481","product_id":100017301,"comment_content":"叮~打卡","like_count":0},{"had_liked":false,"id":291745,"user_name":"a(๑≖ิټ≖ิ)✌","can_delete":false,"product_type":"c1","uid":1392431,"ip_address":"","ucode":"AEF9B5CA1605DF","user_header":"https://static001.geekbang.org/account/avatar/00/15/3f/2f/8513c4d3.jpg","comment_is_top":false,"comment_ctime":1620459447,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1620459447","product_id":100017301,"comment_content":"sha256，<br>1. 用于从公钥生成地址，公钥暴露有可能被推出私钥，sha256信息不可逆，无法反向推断，增加安全性<br>2. merkle tree，保证交易不被篡改<br>3. 区块头hash，hash指针，区块链就是从这来的，同merkle tree的作用差不多，保证整条链数据可信不可篡改","like_count":0},{"had_liked":false,"id":291167,"user_name":"半夏","can_delete":false,"product_type":"c1","uid":1216710,"ip_address":"","ucode":"50A2C4CF8F85EA","user_header":"https://static001.geekbang.org/account/avatar/00/12/90/c6/0ba1789a.jpg","comment_is_top":false,"comment_ctime":1620088518,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620088518","product_id":100017301,"comment_content":"hash算法四个场景<br><br>1.散列函数<br>2.计算加密<br>3.唯一标识<br>4.计算数据完整性","like_count":0},{"had_liked":false,"id":288365,"user_name":"大数据智能团","can_delete":false,"product_type":"c1","uid":2228662,"ip_address":"","ucode":"C6C4F4CBCB59AE","user_header":"","comment_is_top":false,"comment_ctime":1618444468,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618444468","product_id":100017301,"comment_content":"用密文保存密码之后，没法反推回明文，那明文可以丢弃不用么","like_count":0},{"had_liked":false,"id":280780,"user_name":"罗耀龙@坐忘","can_delete":false,"product_type":"c1","uid":1917663,"ip_address":"","ucode":"3CEA258DE7F3C7","user_header":"https://static001.geekbang.org/account/avatar/00/1d/42/df/a034455d.jpg","comment_is_top":false,"comment_ctime":1614385087,"is_pvip":true,"discussion_count":0,"race_medal":5,"score":"1614385087","product_id":100017301,"comment_content":"茶艺师学编程<br><br>思考题<br>正如老师所说，区块链的实现原理并不复杂，就像其中所用到的哈希函数，仅用了一种：SHA256，安全哈希函数，运算结果是256位的2进制数。它解决其中两个问题：<br>1、串联前后两个区块。后面的区块包含了前一个区块的SHA256值<br>2、保证区块的生成有足够的时间间隔，避免同时有新区块的生成。说直白点，就是手动拉高时间复杂度。","like_count":0},{"had_liked":false,"id":273216,"user_name":"BoyiKia","can_delete":false,"product_type":"c1","uid":1983680,"ip_address":"","ucode":"D37541B4451D6B","user_header":"https://static001.geekbang.org/account/avatar/00/1e/44/c0/cd2cd082.jpg","comment_is_top":false,"comment_ctime":1610500620,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610500620","product_id":100017301,"comment_content":"哈希算法作用。<br>1.加密 类似于https的  交换密钥 加密<br>2.摘要  唯一标识<br>3.验证是都被篡改  <br>4.散列函数   散列表计算 hash值<br><br><br>数据安全<br> 1.脱敏(hash 值存储)<br> 2.加盐，防止大数据破解","like_count":0},{"had_liked":false,"id":267046,"user_name":"Rookie-Red","can_delete":false,"product_type":"c1","uid":1627358,"ip_address":"","ucode":"A2CC287D3442D7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJia5Ax51D8Nyap5xcPkaveicguf5Nm4715fXKT4TfccvBYKiabWVJTeHtrejmDNtdmM12JYLzxiaUVEQ/132","comment_is_top":false,"comment_ctime":1607581119,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607581119","product_id":100017301,"comment_content":"思考题：<br><br>区块链：由一块块区块组成的，每个区块分为两部分：区块头和区块体。<br><br>区块头保存着 自己区块体 和 上一个区块头 的哈希值。<br><br>因为这种链式关系和哈希值的唯一性，只要区块链上任意一个区块被修改过，后面所有区块保存的哈希值就不对了。<br><br>区块链使用的是 SHA256 哈希算法，计算哈希值非常耗时，如果要篡改一个区块，就必须重新计算该区块后面所有的区块的哈希值，短时间内几乎不可能做到。","like_count":0},{"had_liked":false,"id":261050,"user_name":"于途","can_delete":false,"product_type":"c1","uid":1669343,"ip_address":"","ucode":"70300C6CCCEAF1","user_header":"https://static001.geekbang.org/account/avatar/00/19/78/df/424bdc4a.jpg","comment_is_top":false,"comment_ctime":1605182906,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1605182906","product_id":100017301,"comment_content":"对哈希算法的理解都是停留在表面，今天终于看到正解：<br><br>将任意长度的二进制值串映射为固定长度的二进制值串，这个映射的规则就是哈希算法。","like_count":0},{"had_liked":false,"id":256844,"user_name":"拉布拉多","can_delete":false,"product_type":"c1","uid":1204353,"ip_address":"","ucode":"637A88D9F29F57","user_header":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","comment_is_top":false,"comment_ctime":1603764693,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1603764693","product_id":100017301,"comment_content":"怎么实现加盐后，用户登录校验的密码问题？","like_count":0,"discussions":[{"author":{"id":2668479,"avatar":"https://static001.geekbang.org/account/avatar/00/28/b7/bf/815f0ec6.jpg","nickname":"H.H","note":"","ucode":"3C0BB1E2A3EC51","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557598,"discussion_content":"登录再继续加盐呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647876585,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":254028,"user_name":"吉法师","can_delete":false,"product_type":"c1","uid":2232546,"ip_address":"","ucode":"F1E3F4F526CA13","user_header":"https://static001.geekbang.org/account/avatar/00/22/10/e2/35f2fc23.jpg","comment_is_top":false,"comment_ctime":1603022264,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603022264","product_id":100017301,"comment_content":"最常用于加密的哈希算法是 MD5（MD5 Message-Digest Algorithm，MD5 消息摘要算法）和 SHA（Secure Hash Algorithm，安全散列算法）。<br><br>加密算法最重要的一点就是它必须是可以被解密的呀，我仍然不认为MD5是一个加密算法。","like_count":0},{"had_liked":false,"id":244802,"user_name":"JerryZhu","can_delete":false,"product_type":"c1","uid":1591223,"ip_address":"","ucode":"76850CD45786C1","user_header":"https://static001.geekbang.org/account/avatar/00/18/47/b7/b30472fd.jpg","comment_is_top":false,"comment_ctime":1598685111,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598685111","product_id":100017301,"comment_content":"我觉得加密说的不太准。。 MD5这些官方名称是摘要算法， 从来没说过自己是加密用的， 而严格意义上来说密码学加密必须带上密钥， 在密钥的基础上再做操作才算是加密， 而且加密的一个重要特征就是可以还原。。 摘要算法几乎不能还原原数据了","like_count":0},{"had_liked":false,"id":244800,"user_name":"JerryZhu","can_delete":false,"product_type":"c1","uid":1591223,"ip_address":"","ucode":"76850CD45786C1","user_header":"https://static001.geekbang.org/account/avatar/00/18/47/b7/b30472fd.jpg","comment_is_top":false,"comment_ctime":1598684383,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598684383","product_id":100017301,"comment_content":"我只知道我炒的比特币是 SHA-256","like_count":0},{"had_liked":false,"id":239732,"user_name":"酸辣土豆丝","can_delete":false,"product_type":"c1","uid":1751234,"ip_address":"","ucode":"0E3E4AFB31E1E6","user_header":"https://static001.geekbang.org/account/avatar/00/1a/b8/c2/d1904d74.jpg","comment_is_top":false,"comment_ctime":1596627943,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596627943","product_id":100017301,"comment_content":"用鸽巢原理来解释散列冲突通俗异同","like_count":0},{"had_liked":false,"id":237226,"user_name":"~L.yy、","can_delete":false,"product_type":"c1","uid":1042650,"ip_address":"","ucode":"BD48129B83C4D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e8/da/f794db0f.jpg","comment_is_top":false,"comment_ctime":1595749563,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595749563","product_id":100017301,"comment_content":"密码的存储要结合登录的使用场景，最终目的是即使被脱裤，攻击者也无法伪造登录","like_count":0},{"had_liked":false,"id":229876,"user_name":"石头汤","can_delete":false,"product_type":"c1","uid":1022282,"ip_address":"","ucode":"45E4578E54F585","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/4a/bdf26d5c.jpg","comment_is_top":false,"comment_ctime":1593171983,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593171983","product_id":100017301,"comment_content":"hash 算法从定义上看不能称为加密算法，因为hash是单向的，无法解密。","like_count":0},{"had_liked":false,"id":228297,"user_name":"sam","can_delete":false,"product_type":"c1","uid":1000417,"ip_address":"","ucode":"8D48F4B9045947","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/e1/b7be5560.jpg","comment_is_top":false,"comment_ctime":1592637201,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592637201","product_id":100017301,"comment_content":"学完这节课终于跟工作中常用的一些东西联系起来了，很棒！区块链也明白了，可以不用讲是一个去中心化的数据存储啦","like_count":0},{"had_liked":false,"id":215481,"user_name":"Geek_ac7784","can_delete":false,"product_type":"c1","uid":1981613,"ip_address":"","ucode":"62F0E5E6D6F4BA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/8Dj4ugujXwY24G8pcpgDFGiciarXetG3ItQ4M9mSQMLyRdRRXEXXJVfib48mGUQAu87QcvImwyJIVJlEFeEguV44w/132","comment_is_top":false,"comment_ctime":1588999317,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588999317","product_id":100017301,"comment_content":"学习笔记:哈希算法的应用 <br>1. 安全加密: 追求单向性，不能反过来<br>2. 唯一标识：追求唯一性，信息摘要的哈希值如果相同，则可以进一步比较全文<br>3. 数据校验：网络传输是不够安全的，封包容易丢失和篡改。可以用哈希值来检验数据完整性。追求敏感性，一点不同都会有不同的哈希值<br>4. 散列函数:：追求速度、和平均分布，减少冲撞还要快速，并不追求能不能返回计算。<br>所以不同的场景要用到不同的哈希算法，常见的安全哈希算法:MD5,SHA<br>思考题:<br>区块链不熟悉。搜索下<br>https:&#47;&#47;www.zhihu.com&#47;question&#47;37290469<br>拜占庭问题和类两军问题https:&#47;&#47;www.jianshu.com&#47;p&#47;5d6eb9cb62a7<br>去中心化(没有唯一记账人，或者所有人都是记账人)的分布式账本数据库。<br>主要解决中心化记账问题(例如：支付宝帮所有人记账，万一他出错，岂不是很危险)，注意与比特币区别。<br>单回答思考题的话，就是为了解决计算机账目安全问题，不能乱记。哈希算法是SHA256<br>具体实现原理太长，随后再看.....","like_count":0},{"had_liked":false,"id":214701,"user_name":"你在不远的未来","can_delete":false,"product_type":"c1","uid":1318404,"ip_address":"","ucode":"5B34C8BD03B71A","user_header":"https://static001.geekbang.org/account/avatar/00/14/1e/04/f902047e.jpg","comment_is_top":false,"comment_ctime":1588787099,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588787099","product_id":100017301,"comment_content":"笔记：<br>什么是hash算法<br>    将任意长度的二进制值映射成固定长度的二进制值串，这个映射的规则就是哈希算法。<br>    <br>算法要求<br>    1. 从hash值中不能推导出原始的数据（所以hash算法又称为单向hash算法）<br>    2. 对输入数据非常敏感，输入值哪怕错一位，输出的hashcode也不相同<br>    3. 散列冲突概率非常小，对于不同的原始数据，hash值相同的概率非常小（因鸽巢理论，存在破解可能）<br>    4. hash算法的执行效率要高，针对长文本也能很快得出hash值<br><br>应用场景<br>一：安全加密<br>    1. 数据库要存放经过hash算法加密的密文，如再增加破解难度如撞库操作，可数据库加盐<br>    <br>二：唯一标识<br>    1. 针对图库中每张图片，用它的二进制码串以某种规则提取固定位数进行hash求值，此值作为图片的源文件标识。此标识用于检索图库文件是否存在。<br><br>三：数据校验<br>    1. P2P下载中，一个下载的大包被分割成多个block块，对每个block文件块进行取hash取值，最终多台宿主机下载完成后，在客户端进行block文件块hash值校验，排除掉下<br>    载出错或者文件攻击的可能。<br><br>四：散列函数<br>    1. 散列函数用到的散列算法，决定散列冲突概率和散列表性能，一般情况下散列函数比较追求高性能。<br><br>","like_count":0},{"had_liked":false,"id":213722,"user_name":"亢（知行合一的路上）","can_delete":false,"product_type":"c1","uid":1347013,"ip_address":"","ucode":"958AF7C96EB9E8","user_header":"https://static001.geekbang.org/account/avatar/00/14/8d/c5/898b13b4.jpg","comment_is_top":false,"comment_ctime":1588520483,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588520483","product_id":100017301,"comment_content":"加盐，以前是模模糊糊，在老师和网友的解释下，并查阅相关资料，了解多了一些。<br>要利用最新的成果解决项目中的问题，对密码不加盐的，只能说太懒惰啦。","like_count":0},{"had_liked":false,"id":213426,"user_name":"严丹","can_delete":false,"product_type":"c1","uid":1798204,"ip_address":"","ucode":"96FA634D06C3FD","user_header":"https://static001.geekbang.org/account/avatar/00/1b/70/3c/a002615b.jpg","comment_is_top":false,"comment_ctime":1588410525,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1588410525","product_id":100017301,"comment_content":"看来程序员不单纯，为什么要去破解别人的数据，搞得人心惶惶","like_count":0,"discussions":[{"author":{"id":1380312,"avatar":"https://static001.geekbang.org/account/avatar/00/15/0f/d8/9286b272.jpg","nickname":"leetcode","note":"","ucode":"3B8C3668A0DE74","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":273675,"discussion_content":"哈哈哈哈  ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590487507,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":213243,"user_name":"Allan","can_delete":false,"product_type":"c1","uid":1310388,"ip_address":"","ucode":"8DA4DBECC2C45C","user_header":"https://static001.geekbang.org/account/avatar/00/13/fe/b4/295338e7.jpg","comment_is_top":false,"comment_ctime":1588339644,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588339644","product_id":100017301,"comment_content":"什么是哈希算法？<br>将任意长度的二进制值串映射为固定长度的二进制值串，这个映射的规则就是哈希算法。<br>特点：<br>不能反向推到回去；对输入敏感不能有点修改；散列冲突的概率要很小；执行效率尽量高效<br><br>应用一：安全加密<br>应用二：唯一标识<br>应用三：数据校验<br>应用四：散列函数<br><br>区块链：没有接触过，安全性是他的一个特点吧，要做到安全就需要安全加密还要保证唯一表示每一块都是从上游到下游的过程，数据也需要校验。","like_count":0},{"had_liked":false,"id":212723,"user_name":"张三","can_delete":false,"product_type":"c1","uid":1004092,"ip_address":"","ucode":"1155528FAE1546","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/3c/d6fcb93a.jpg","comment_is_top":false,"comment_ctime":1588203545,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588203545","product_id":100017301,"comment_content":"应该举哈希算法在https中的应用","like_count":0},{"had_liked":false,"id":212446,"user_name":"拉普达","can_delete":false,"product_type":"c1","uid":1930686,"ip_address":"","ucode":"0E524C0D99B2A0","user_header":"https://static001.geekbang.org/account/avatar/00/1d/75/be/6f3ab95e.jpg","comment_is_top":false,"comment_ctime":1588125147,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588125147","product_id":100017301,"comment_content":"区块链中，哈希算法的应用有两个地方，一是确保数据的完整性，通过“链式结构”中一串关联的校验哈希值防止数据篡改;另外一点是控制区块的产生速度，即比如通过计算生成随机数的哈希值末尾0的个数，判断该区块是否能够生成，同时明确长度最长的链为主链。这个机制可以确保只要攻击者不具备超过全网50%以上算了，是无法伪造区块生成的。<br>另外，不建议用&quot;使用md5或sha1加密数据&quot;这种说法。加密通常是跟解密对应的，密码算法里只有对称（aes，sm1，sm4等）和非对称密码算法（rsa，sm2）称为加密算法，而哈希算法（也成杂凑算法）是单独一类，比较严谨的叫法是&quot;使用sha1算法计算用户密码明文的哈希值&quot;。","like_count":0},{"had_liked":false,"id":211879,"user_name":"Nick","can_delete":false,"product_type":"c1","uid":1584704,"ip_address":"","ucode":"C037710AACA0B2","user_header":"https://static001.geekbang.org/account/avatar/00/18/2e/40/84fdf54d.jpg","comment_is_top":false,"comment_ctime":1588034300,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588034300","product_id":100017301,"comment_content":"很有收获","like_count":0},{"had_liked":false,"id":206680,"user_name":"梅端","can_delete":false,"product_type":"c1","uid":1525335,"ip_address":"","ucode":"FEC08731457770","user_header":"https://static001.geekbang.org/account/avatar/00/17/46/57/fe38a6db.jpg","comment_is_top":false,"comment_ctime":1586916620,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586916620","product_id":100017301,"comment_content":"无处不在的哈希算法，一定要掌握啊！！！","like_count":0},{"had_liked":false,"id":205288,"user_name":"Steven.Tudou_yang","can_delete":false,"product_type":"c1","uid":1853517,"ip_address":"","ucode":"1B1C4418A0BFB2","user_header":"https://static001.geekbang.org/account/avatar/00/1c/48/4d/993204ff.jpg","comment_is_top":false,"comment_ctime":1586584675,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1586584675","product_id":100017301,"comment_content":"请教一个问题，如果已经有了散列冲突，第二个HASH出来的值也会存入槽中，也就是说，如果第N个人用同样的值来Hash出结果值存入槽中，极端情况下，会不会出现整个散列表中全部存的是同一个HASH值呢，如果用链表来解决散列冲突，是不是整个链表又都是同一个值呢？如果链表又用了跳表的话，最后查找数据的时候，跳表又该如何取舍呢？","like_count":0,"discussions":[{"author":{"id":1652836,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epKJlW7sqts2ZbPuhMbseTAdvHWnrc4ficAeSZyKibkvn6qyxflPrkKKU3mH6XCNmYvDg11tB6y0pxg/132","nickname":"pc","note":"","ucode":"1AD538B9A900B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":245471,"discussion_content":"1、极端情况就属于攻击了\n2、为什么冲突链表是一个值？\n3、跳表就是链表，什么叫怎么取she","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587660446,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204090,"user_name":"Geek_d89ed6","can_delete":false,"product_type":"c1","uid":1938233,"ip_address":"","ucode":"5456357A2022EF","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DWFVVSib6Kl84e3FdPwuLQWiaolDYC1obick8lB8f3FZfUgiarVYsglO401QQMezLIfr3EtiabvJXDUgmrgDBDBl8Cg/132","comment_is_top":false,"comment_ctime":1586331503,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586331503","product_id":100017301,"comment_content":"请问哈希算法的具体实现细节是怎么样的呢","like_count":0},{"had_liked":false,"id":202185,"user_name":"Damo","can_delete":false,"product_type":"c1","uid":1599197,"ip_address":"","ucode":"F332EA67F5A40C","user_header":"https://static001.geekbang.org/account/avatar/00/18/66/dd/c9f17139.jpg","comment_is_top":false,"comment_ctime":1585918386,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585918386","product_id":100017301,"comment_content":"区块链是使用：hash + 链表两种数据结构来确定唯一性的","like_count":0},{"had_liked":false,"id":201107,"user_name":"蜗牛","can_delete":false,"product_type":"c1","uid":1086220,"ip_address":"","ucode":"01CC18F12E556D","user_header":"https://static001.geekbang.org/account/avatar/00/10/93/0c/0a6a0d5e.jpg","comment_is_top":false,"comment_ctime":1585716571,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585716571","product_id":100017301,"comment_content":"hash算法大致分为对称hash算法，非对称hash算法，和散列hash算法。<br>在区块链中的BTC地址生成中，他用的是非对称hash算法，通过种子-&gt;私钥-&gt;公钥-&gt;地址。以及区块链<br>底层是通过p2p传输数据。","like_count":0},{"had_liked":false,"id":196330,"user_name":"Geek_112e68","can_delete":false,"product_type":"c1","uid":1644011,"ip_address":"","ucode":"82843584C97F43","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/WhoLIb4HZtuwErPetUjHj9JVOYFibDXDAcIic3K0CSzJp4zibe1cemraIq1S8YSN5KSCJcUdicm9f4aKTwZHxFBwTw/132","comment_is_top":false,"comment_ctime":1585273253,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585273253","product_id":100017301,"comment_content":"区块链使用的是 SHA256 哈希算法","like_count":0},{"had_liked":false,"id":192149,"user_name":"小马","can_delete":false,"product_type":"c1","uid":1040654,"ip_address":"","ucode":"0F7E0225A7E043","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e1/0e/dde741d7.jpg","comment_is_top":false,"comment_ctime":1584840671,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584840671","product_id":100017301,"comment_content":"我在文件下载中使用了 md5。也算是其中的一个应用吧。","like_count":0},{"had_liked":false,"id":190840,"user_name":"SteelHuaSheng","can_delete":false,"product_type":"c1","uid":1396126,"ip_address":"","ucode":"BC8127FC5207FC","user_header":"https://static001.geekbang.org/account/avatar/00/15/4d/9e/04ec08bf.jpg","comment_is_top":false,"comment_ctime":1584697540,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1584697540","product_id":100017301,"comment_content":"数学才是王道，那些说数学没用的人，是因为碰到的问题太low。。。","like_count":0},{"had_liked":false,"id":189093,"user_name":"chenzesam","can_delete":false,"product_type":"c1","uid":1045011,"ip_address":"","ucode":"34E76BB9C7618D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f2/13/3ee5a9b4.jpg","comment_is_top":false,"comment_ctime":1584455174,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584455174","product_id":100017301,"comment_content":"这个实际有用到，不错","like_count":0},{"had_liked":false,"id":185729,"user_name":"Baymax","can_delete":false,"product_type":"c1","uid":1577286,"ip_address":"","ucode":"DAE81AB14F9B63","user_header":"https://static001.geekbang.org/account/avatar/00/18/11/46/63bd0740.jpg","comment_is_top":false,"comment_ctime":1583672053,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1583672053","product_id":100017301,"comment_content":"请教，如果图片改变了灰度值，得到的标识不就不一样了吗？","like_count":0,"discussions":[{"author":{"id":1652836,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epKJlW7sqts2ZbPuhMbseTAdvHWnrc4ficAeSZyKibkvn6qyxflPrkKKU3mH6XCNmYvDg11tB6y0pxg/132","nickname":"pc","note":"","ucode":"1AD538B9A900B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":245473,"discussion_content":"得到的标识有可能一样。但是最后还会全量对比判断是否是同一个文件。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587660518,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183512,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1583055827,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583055827","product_id":100017301,"comment_content":"哈希的定义就是将一组数据映射为另一组数据，而且一般是单向映射。这样即使哈希后的数据丢失，只要他不知道加密方法（包含加密过程中用到的一些数据），就无法解密，可以保护原数据。<br>哈希后的长度一般来说是固定的，比如MD5，长度是128位，即16个字节。对应的集合是就是0～2^128，这个集合大小是固定的，暂称为Hash Set<br>在使用哈希时，可以根据待哈希的集合与哈希集合的大小关系进行分类：<br>1. 集合比Hash Set大<br>即将大集合映射到一个小集合，集合小了，即时间复杂度和空间复杂度中的N小了，处理的时间就降低了。比如数据校验，文件是否存在等。布隆过滤器就是这个原理。<br>2. 集合比Hash Set小<br>将增加数据规模，也即增加时间复杂度中的N。常用于数据加密，以及数据结构中的Hash表，将key与数组的下标进行映射，这种情况下，对哈希算法有一些特殊要求，比如要求哈希后的值冲突小","like_count":0},{"had_liked":false,"id":182729,"user_name":"佳娃","can_delete":false,"product_type":"c1","uid":1806618,"ip_address":"","ucode":"47004C40CBE019","user_header":"https://static001.geekbang.org/account/avatar/00/1b/91/1a/c51b24f4.jpg","comment_is_top":false,"comment_ctime":1582856721,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582856721","product_id":100017301,"comment_content":"md5可以通过穷举法破解，cpu的计算能力会越来越强，简单的密码都能硬破解。","like_count":0},{"had_liked":false,"id":175781,"user_name":"社会你强哥","can_delete":false,"product_type":"c1","uid":1243570,"ip_address":"","ucode":"325B9005588D9B","user_header":"https://static001.geekbang.org/account/avatar/00/12/f9/b2/2ed800b4.jpg","comment_is_top":false,"comment_ctime":1580826946,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1580826946","product_id":100017301,"comment_content":"链表法解决哈希冲突的散列表，如果根据key查找元素,使用散列函数hash( key)得到数组arr下标index。如果arr[index]为空，肯定是没查找到；如果arr[index]为一个链表，$则遍历链表，当链表中数据(linkedKey, linkedValue)中的likedKey equal(key), 则找到了这个元素。对$后面的这句话理解对么？没有自己写过散列表，望老师看到以后指点！谢谢！","like_count":0,"discussions":[{"author":{"id":1652836,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epKJlW7sqts2ZbPuhMbseTAdvHWnrc4ficAeSZyKibkvn6qyxflPrkKKU3mH6XCNmYvDg11tB6y0pxg/132","nickname":"pc","note":"","ucode":"1AD538B9A900B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":245475,"discussion_content":"先用哈希找到数据桶，然后在桶（冲突链）中遍历寻找search key","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1587660649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":173817,"user_name":"pikachu122","can_delete":false,"product_type":"c1","uid":1689365,"ip_address":"","ucode":"43FE4DBC872FFA","user_header":"https://static001.geekbang.org/account/avatar/00/19/c7/15/24bf166a.jpg","comment_is_top":false,"comment_ctime":1579705621,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579705621","product_id":100017301,"comment_content":"1、哈希算法是指对任意长度的二进制值串映射为固定长度的二进制值串的规则。得到的固定长度二进制值串叫做哈希值。<br>2、哈希算法需要满足4点要求：（1）哈希值不能反向推出原始数据（“单向”）（2）对输入数据需要非常敏感。1比特的变化也会导致哈希值完全不同（3）发生散列冲突的概率很小（4）执行尽量高效。<br>3、哈希算法的常见应用领域：安全加密、唯一标识、数据校验、散列函数、负载均衡、数据分片、分布式存储。<br>4、常用于加密的哈希算法主要有MD5、SHA、DES、AES等。用于加密的哈希算法对单向性和散列冲突概率小格外重要。哈希值越长的哈希算法，冲突概率越小。没有绝对安全的哈希算法，破解难度越大的哈希算法，计算起来也更耗时。<br>5、唯一标识：在寻找一个相同文件时，先计算这个文件的哈希值，然后通过散列表查找是否有哈希值相同的文件，再与这个文件全量比对。<br>6、数据校验：因为只要文件被修改，哈希值就完全不同。因此可以校验文件是否不完整或者被篡改。<br>7、散列函数：用于散列函数的哈希值，我们一般不关心它是否能倒推回原数据，对它发生散列冲突的概率要求也不高。但我们更看重它的计算效率，以及散列后的值能否平均分布在各个槽中。<br>8、为了防范字典攻击（黑客用明文密码和哈希值组成的字典“猜”密码），可以引入一个“盐”，和用户的密码结合在一起，以增加密码的复杂性，增加黑客破解的难度。","like_count":0},{"had_liked":false,"id":168839,"user_name":"马哲富","can_delete":false,"product_type":"c1","uid":1107917,"ip_address":"","ucode":"D6BDDFE3CC07ED","user_header":"https://static001.geekbang.org/account/avatar/00/10/e7/cd/08088f14.jpg","comment_is_top":false,"comment_ctime":1578196407,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578196407","product_id":100017301,"comment_content":"老师好，“将任意长度的二进制值串映射为固定长度的二进制值串，这个映射的规则就是哈希算法”，这个定义中数据是二进制，是否是指要先把所有的数据都转换成二进制（是否所有的数据都可以转换成二进制）？还有，固定长度的二进制值，可是老师在文中给出的经过md5算法后产生的值中不是用二进制表示 的啊（比如：340282366920938463463374607431768211456）？","like_count":0},{"had_liked":false,"id":168003,"user_name":"ican_只会0到9","can_delete":false,"product_type":"c1","uid":1029473,"ip_address":"","ucode":"9EE33C42EE519D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b5/61/9802a552.jpg","comment_is_top":false,"comment_ctime":1577974342,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1577974342","product_id":100017301,"comment_content":"为什么保存一个图片的唯一标识，要取三部分组合？只取其中两部分不可以吗？","like_count":0,"discussions":[{"author":{"id":1689365,"avatar":"https://static001.geekbang.org/account/avatar/00/19/c7/15/24bf166a.jpg","nickname":"pikachu122","note":"","ucode":"43FE4DBC872FFA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":148706,"discussion_content":"个人猜测：某些文件格式的头部和尾部数据是固定的，如果只取头尾，相同格式的文件的哈希值就全都一样了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579705580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163693,"user_name":"Allen_","can_delete":false,"product_type":"c1","uid":1677187,"ip_address":"","ucode":"CA5E00E4644CD5","user_header":"https://static001.geekbang.org/account/avatar/00/19/97/83/845b48e2.jpg","comment_is_top":false,"comment_ctime":1576768113,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576768113","product_id":100017301,"comment_content":"区块链中，哈希算法相当于是一个有奖竞猜，用的是SHA256，比如大部分人认定，现在SHA256的哈希值前10位都是零的原始数据是哪个？因为哈希算法单一性，想知道答案就得用强大的算力去试，得到结果后，算力优先者发出来并粘贴到block上面去，其他人就可以根据同样的哈希方程去检验，这样就造成了现在透明的区块链。","like_count":0},{"had_liked":false,"id":161945,"user_name":"洛奇","can_delete":false,"product_type":"c1","uid":1624355,"ip_address":"","ucode":"662B4005721119","user_header":"https://static001.geekbang.org/account/avatar/00/18/c9/23/76511858.jpg","comment_is_top":false,"comment_ctime":1576411286,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1576411286","product_id":100017301,"comment_content":"&quot;MD5有 2^128 个不同的哈希值，所以散列冲突的概率要小于 1&#47;2^128。&quot;，请问为什么是小于，而不是等于？？？","like_count":0,"discussions":[{"author":{"id":1464006,"avatar":"https://static001.geekbang.org/account/avatar/00/16/56/c6/0b449bc6.jpg","nickname":"斐波那契","note":"","ucode":"85E2EBC01392B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":199196,"discussion_content":"袋子里有2^128个小球 每次取一个后放回去 问两次取出来都相同的概率是多少？等于1/2^128? ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583568907,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":161410,"user_name":"港","can_delete":false,"product_type":"c1","uid":1122464,"ip_address":"","ucode":"35931FC6198180","user_header":"https://static001.geekbang.org/account/avatar/00/11/20/a0/1fca96c0.jpg","comment_is_top":false,"comment_ctime":1576202265,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576202265","product_id":100017301,"comment_content":"区块链使用的哈希算法是SHA256，区块链中的每一个区块都有一个对区块头部进行哈希计算出的哈希值进行标识，而区块头部包含父区块的哈希值，哈希算法用来保证区块链不容易被篡改。","like_count":0},{"had_liked":false,"id":160612,"user_name":"Cutler","can_delete":false,"product_type":"c1","uid":1228136,"ip_address":"","ucode":"2EDECFE039845B","user_header":"https://static001.geekbang.org/account/avatar/00/12/bd/68/3fd6428d.jpg","comment_is_top":false,"comment_ctime":1575985962,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575985962","product_id":100017301,"comment_content":"拿以太坊举例：公、私钥是椭圆曲线算法生成的，而地址是取的公钥的Keccak-256的HASH值前20位。<br>可以看出，以太坊的地址取得是很粗暴的。","like_count":0},{"had_liked":false,"id":156960,"user_name":"Sid","can_delete":false,"product_type":"c1","uid":1115041,"ip_address":"","ucode":"0461B574B2736B","user_header":"https://static001.geekbang.org/account/avatar/00/11/03/a1/e6a0f60b.jpg","comment_is_top":false,"comment_ctime":1575002672,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575002672","product_id":100017301,"comment_content":"hash+salt 加密，网上一搜很多都是重复的，能不能说说工程上实际如何保存密码的。看到也有其它同学有这个疑问，希望被翻牌^_^","like_count":0},{"had_liked":false,"id":155263,"user_name":"Sun Fei","can_delete":false,"product_type":"c1","uid":1032631,"ip_address":"","ucode":"092EC0992050BB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c1/b7/57f153f6.jpg","comment_is_top":false,"comment_ctime":1574672449,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574672449","product_id":100017301,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":150348,"user_name":"Airsaid","can_delete":false,"product_type":"c1","uid":1115302,"ip_address":"","ucode":"5B90BC0044F376","user_header":"https://static001.geekbang.org/account/avatar/00/11/04/a6/18c4f73c.jpg","comment_is_top":false,"comment_ctime":1573521529,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1573521529","product_id":100017301,"comment_content":"「哈希算法的定义和原理非常简单，基本上一句话就可以概括了。将任意长度的二进制值串映射为固定长度的二进制值串，这个映射的规则就是哈希算法」<br><br>「前面讲了很多哈希算法的应用，实际上，散列函数也是哈希算法的一种应用。」<br><br>那么可以理解为散列表中的散列函数等于哈希算法吗？如果可以这样理解的话，那么像 Java 中的  HashMap（JDK 1.8），其中的 hash() 函数并没有满足「任意长度的二进制值串映射为固定长度的二进制值串」又该如何理解呢？请老师解答谢谢~<br>","like_count":0,"discussions":[{"author":{"id":1115041,"avatar":"https://static001.geekbang.org/account/avatar/00/11/03/a1/e6a0f60b.jpg","nickname":"Sid","note":"","ucode":"0461B574B2736B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":65436,"discussion_content":"映射到0-table.length-1这个区间了，其实可理解为无论什么样的数据，最终hash后都得到固定块区间或固定长度的数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575002879,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149650,"user_name":"敏","can_delete":false,"product_type":"c1","uid":1610453,"ip_address":"","ucode":"D65E152F096C14","user_header":"https://static001.geekbang.org/account/avatar/00/18/92/d5/1ad4c24b.jpg","comment_is_top":false,"comment_ctime":1573304030,"is_pvip":false,"replies":[{"id":"57633","content":"你可以百度看下鸽巢原理","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1573424703,"ip_address":"","comment_id":149650,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573304030","product_id":100017301,"comment_content":"老师，您好。文中说到散列冲突的概率要小于 1&#47;2^128。请问，散列冲突概率的定义是什么？<br><br>已知一个MD5散列值，随机一个比特串的MD5散列值与已知的MD5散列值相同的概率不是1&#47;2^128吗？","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473925,"discussion_content":"你可以百度看下鸽巢原理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573424703,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145930,"user_name":"咩咩咩","can_delete":false,"product_type":"c1","uid":1237849,"ip_address":"","ucode":"9DEC7D5D52D972","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/6a8fRQFxX5VXOpRKyYibsemKwDMexMxkzZOBquPo6T4HOcYicBiaTcqibDoTIhZSjVjF3nKXTEGDYOGPt2xqqwiawjg/132","comment_is_top":false,"comment_ctime":1572403529,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1572403529","product_id":100017301,"comment_content":"有一点担心的问题不知道会不会出现:假如储存用户密码，储存的是经过md5哈希后的摘要信息。当用户登录时将用户输入的密码进行md5计算后和数据库的记录进行比较，相同则表示密码正确。但是由于md5是会有冲突的，所以可能会有另一个人使用另一个密码但是经过md5计算后却得到相同的md5值。这种情况虽然概率很低，但应该也不能忽略吧？","like_count":0,"discussions":[{"author":{"id":1105916,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DwOtGibgqEK8IHvnV6UzBuWAxUjTuI44lfsOPmHVtb8FpicXuOZlAEuqwHsAM6sHz0XH9UtIiaEnDyAqrgOp4TBHA/132","nickname":"caspar","note":"","ucode":"94CDC83BACA481","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319841,"discussion_content":"还有登录名作区分","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604137873,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1517095,"avatar":"https://static001.geekbang.org/account/avatar/00/17/26/27/a4abd984.jpg","nickname":"kango","note":"","ucode":"3D740DB0CE94F7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":135131,"discussion_content":"确实会，但是这样的概率太低了，可以忽略","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579071532,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143437,"user_name":"苦行僧","can_delete":false,"product_type":"c1","uid":1055334,"ip_address":"","ucode":"726024A9A9CF44","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/66/2d9db9ed.jpg","comment_is_top":false,"comment_ctime":1571708549,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571708549","product_id":100017301,"comment_content":"看来大家都喜欢 salt <br>推荐一篇关于 加盐的文章<br>https:&#47;&#47;libuchao.com&#47;2013&#47;07&#47;05&#47;password-salt","like_count":0},{"had_liked":false,"id":138240,"user_name":"科科","can_delete":false,"product_type":"c1","uid":1647304,"ip_address":"","ucode":"7DAE6FE781172E","user_header":"https://static001.geekbang.org/account/avatar/00/19/22/c8/f2892022.jpg","comment_is_top":false,"comment_ctime":1570111561,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1570111561","product_id":100017301,"comment_content":"md5会出现重复，不过这也是在好多亿之后了，如果不想有重复的话可以使用sha256，也能满足目前需求。加salt是一种比较常见的加密方式，之前的服务端的密码加密就是使用salt","like_count":0},{"had_liked":false,"id":136499,"user_name":"&#47;ka","can_delete":false,"product_type":"c1","uid":1291732,"ip_address":"","ucode":"3B23EF6C7AD3DB","user_header":"https://static001.geekbang.org/account/avatar/00/13/b5/d4/c48f1780.jpg","comment_is_top":false,"comment_ctime":1569460787,"is_pvip":false,"replies":[{"id":"52477","content":"他就是这么定义的 有啥为什么呀","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1569534387,"ip_address":"","comment_id":136499,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1569460787","product_id":100017301,"comment_content":"哪位再帮忙解释一下为什么完全二叉树最后一层要存储在左节点？就是为了节省内存吗？老师在文章中说的没明白。","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468669,"discussion_content":"他就是这么定义的 有啥为什么呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569534387,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1717444,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/34/c4/08d9f349.jpg","nickname":"元","note":"","ucode":"4576E15018EEA3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":74019,"discussion_content":"存右节点你又要问为什么存右节点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575624066,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121314,"user_name":"李小四","can_delete":false,"product_type":"c1","uid":1112747,"ip_address":"","ucode":"2A766BE16B276B","user_header":"https://static001.geekbang.org/account/avatar/00/10/fa/ab/0d39e745.jpg","comment_is_top":false,"comment_ctime":1565097993,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565097993","product_id":100017301,"comment_content":"算法_21<br># 作业<br><br>对区块链的技术实现不了解，看了其他同学的答案，同时也了解了一下：<br>区块链是一种链式结构，正如前面提到的链表，但是链表的指针是很容易修改的，我们也知道不可篡改(成本极高)是区块链的特征，区块链使用了HASH算法来标识区块信息，这样如果篡改，就需要修改整条链上的数据才能“圆”过去，这一步成本已经很高了，但想要自己的篡改真正生效，还需要协同分布式系统的其他节点一起修改才行，这个难度就可想而知了，于是区块链就成了不可篡改的技术。其中，ETH使用了SHA256哈希算法。<br><br># 内容<br><br>- 哈希的特点：<br>\t- 不可逆<br>\t- 输入数据敏感<br>\t- 碰撞率低(鸽巢原理非常形象)<br>\t- 通常很快<br><br>- 应用<br>\t- 加密(严格的说是信息保护)<br>\t- 唯一标示<br>\t- 数据校验<br>\t- 散列函数<br><br># 感想<br><br>Hash在开发中的应用非常多，无论常见的hashCode()方法，HashMap类，以及数据库索引，用户密码保存，数字签名等。真实地体验到人类脑力的思考，创造出一种算法对于社会的巨大贡献。<br><br>不过，从哈希算法的特点来看，无法想象该怎样实现一个哈希算法。","like_count":0},{"had_liked":false,"id":118832,"user_name":"被过去推开","can_delete":false,"product_type":"c1","uid":1276690,"ip_address":"","ucode":"8B4F34FE93FD5B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Cib5umA0W17N9pichI08pnrXAExdbyh7AVzH4nEhD6KN3FXuELk4LJJuqUPPD7xmIy9nq5Hjbgnzic7sVZG5BKiaUQ/132","comment_is_top":false,"comment_ctime":1564450524,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564450524","product_id":100017301,"comment_content":"唯一标识和数据检验可以做到数据不被中间人修改，但最好把https证书配好，对证书做强制检验<br>","like_count":0},{"had_liked":false,"id":114631,"user_name":"Jed","can_delete":false,"product_type":"c1","uid":1204911,"ip_address":"","ucode":"6021AF7FC03AF6","user_header":"https://static001.geekbang.org/account/avatar/00/12/62/af/2636bf51.jpg","comment_is_top":false,"comment_ctime":1563353864,"is_pvip":false,"replies":[{"id":"42198","content":"你说的貌似有道理，我改下。","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1563574466,"ip_address":"","comment_id":114631,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563353864","product_id":100017301,"comment_content":"安全加密部分提到散列冲突的概率要小于 1&#47;2^128，不是应该等于1&#47;2^128？不是很理解<br>","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458753,"discussion_content":"你说的貌似有道理，我改下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563574466,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109494,"user_name":"heyman","can_delete":false,"product_type":"c1","uid":1173894,"ip_address":"","ucode":"92EF9EF1B1B1B3","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/86/d34800a4.jpg","comment_is_top":false,"comment_ctime":1562044595,"is_pvip":false,"replies":[{"id":"39743","content":"只能说所有的安全措施只是提高犯罪成本，无法杜绝。","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1562112433,"ip_address":"","comment_id":109494,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1562044595","product_id":100017301,"comment_content":"请问随机盐一般怎么存储？要是被脱库了，盐也被拿到了吧","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456439,"discussion_content":"只能说所有的安全措施只是提高犯罪成本，无法杜绝。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562112433,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1542987,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8b/4b/fa52d222.jpg","nickname":"行则将至","note":"","ucode":"DB972F2DF059C4","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575070,"discussion_content":"拿到盐也没关系吧。每一个用户密码的盐值都不一样，破解一个对破解其他密码没有帮助，成本太高了，感觉黑客没这么大耐心吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654579701,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108169,"user_name":"拯救地球好累","can_delete":false,"product_type":"c1","uid":1339022,"ip_address":"","ucode":"7643439601EF4C","user_header":"https://static001.geekbang.org/account/avatar/00/14/6e/8e/5d309a85.jpg","comment_is_top":false,"comment_ctime":1561689733,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561689733","product_id":100017301,"comment_content":"哈希算法：将一串任意长度的二进制值串映射到固定长度的二进制值串的映射规则<br>哈希值：映射后得到的固定长度的二进制值串<br>优秀的哈希算法：<br><br>1. 从哈希值无法反向推导出原始值<br>2. 对输入数据十分敏感（原始数据一比特的改变也会导致哈希值大相径庭）<br>3. 散列冲突概率小<br>4. 哈希算法执行效率高<br><br>哈希算法的应用：<br>安全加密、唯一标识、数据校验、散列函数、负载均衡、数据分片、分布式存储<br><br>安全加密（摘要）常用的哈希算法：MD5和SHA<br>安全加密（摘要）的哈希算法的要求：无法反向推导 &amp; 散列冲突概率小<br>安全加密（摘要）的一些理论：<br><br>1. 哈希算法无法做到零冲突（抽屉原理）<br>2. 没有绝对安全的加密算法<br>3. 越复杂、越难破解的加密算法，需要的计算时间也越长<br><br>唯一标识：如图片的二进制码通过哈希算法得到得到哈希字符串作为图片的唯一标识<br>数据校验：如下载软件中的并行下载的文件块校验；磁盘阵列中的数据校验<br>散列函数的要求：散列值的平均分布 &amp; 哈希算法的执行效率","like_count":0},{"had_liked":false,"id":101877,"user_name":"建强","can_delete":false,"product_type":"c1","uid":1397126,"ip_address":"","ucode":"62B03D0E0C64EC","user_header":"https://static001.geekbang.org/account/avatar/00/15/51/86/b5fd8dd8.jpg","comment_is_top":false,"comment_ctime":1560007523,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560007523","product_id":100017301,"comment_content":"区块链采用SHA-256算法，主要作用是产生区块头，并通过prehash把各个区块串起来，区块头中的hash值也用来保证交易数据的安全性，防止数据被恶意篡改。","like_count":0},{"had_liked":false,"id":95299,"user_name":"秦俊山","can_delete":false,"product_type":"c1","uid":1101079,"ip_address":"","ucode":"42B5B221E0B8CF","user_header":"https://static001.geekbang.org/account/avatar/00/10/cd/17/59d4d531.jpg","comment_is_top":false,"comment_ctime":1558013592,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558013592","product_id":100017301,"comment_content":"唯一标识的例子：海量图库中，搜索一张图片是否存在。之前真的被做后台的同事问到过。","like_count":0},{"had_liked":false,"id":94182,"user_name":"CrekerLi","can_delete":false,"product_type":"c1","uid":1512621,"ip_address":"","ucode":"0ABF9CB85DDC5D","user_header":"https://wx.qlogo.cn/mmopen/vi_32/bwRdL4xlf3EZJvwUiaXibQX11IMKenZzXkxiaNZJ9QUO51UBLzLzVCjXjx5ZnDF8Rp2V4TficpfYDmRFMOsVdlnicKg/132","comment_is_top":false,"comment_ctime":1557740259,"is_pvip":false,"replies":[{"id":"33698","content":"也可以这么理解的","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1557790567,"ip_address":"","comment_id":94182,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557740259","product_id":100017301,"comment_content":"老师，个人觉得，加密的概念是通过加密算法对数据做转换，得到加密数据，也就是密文。如果使用加密算法的逆过程和和密文，可以得到原始数据。所以严格来说，hash不属于加密算法，应该属于编码","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449943,"discussion_content":"也可以这么理解的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557790567,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":89095,"user_name":"MarlboroKay","can_delete":false,"product_type":"c1","uid":1099304,"ip_address":"","ucode":"3F6B5861795A61","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/28/d6f49ec2.jpg","comment_is_top":false,"comment_ctime":1556076162,"is_pvip":false,"replies":[{"id":"31985","content":"salt 可以是验证码","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1556149185,"ip_address":"","comment_id":89095,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1556076162","product_id":100017301,"comment_content":"针对字典攻击可以引入一个盐（salt），可以理解为用户密码和验证码组合在一起？。之前开发云消费机系统的时候，用的这种方式。","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448015,"discussion_content":"salt 可以是验证码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556149185,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":86245,"user_name":"而立斋","can_delete":false,"product_type":"c1","uid":1087258,"ip_address":"","ucode":"5FED6E9E148195","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/1a/389eab84.jpg","comment_is_top":false,"comment_ctime":1555330649,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555330649","product_id":100017301,"comment_content":"交易打包(数据校验)，区块广播(唯一标识)都有hash算法的影子","like_count":0},{"had_liked":false,"id":84007,"user_name":"Lucus","can_delete":false,"product_type":"c1","uid":1198800,"ip_address":"","ucode":"CE8EB70CB9D9F1","user_header":"https://static001.geekbang.org/account/avatar/00/12/4a/d0/d319c44a.jpg","comment_is_top":false,"comment_ctime":1554769234,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554769234","product_id":100017301,"comment_content":"以太坊中是使用sha256座交易签名的","like_count":0},{"had_liked":false,"id":73352,"user_name":"Z-ll","can_delete":false,"product_type":"c1","uid":1266233,"ip_address":"","ucode":"68A75A53D1455E","user_header":"https://static001.geekbang.org/account/avatar/00/13/52/39/2211b1a2.jpg","comment_is_top":false,"comment_ctime":1551865200,"is_pvip":false,"replies":[{"id":"26789","content":"会越来越有感觉的","user_name":"作者回复","user_name_real":"gg","uid":"1190123","ctime":1551923989,"ip_address":"","comment_id":73352,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551865200","product_id":100017301,"comment_content":"学到这里，才开始有一种对数据结构有感觉的错觉。","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442035,"discussion_content":"会越来越有感觉的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551923989,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72481,"user_name":"QQ怪","can_delete":false,"product_type":"c1","uid":1211223,"ip_address":"","ucode":"1A39B8433D9208","user_header":"https://static001.geekbang.org/account/avatar/00/12/7b/57/a9b04544.jpg","comment_is_top":false,"comment_ctime":1551657602,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551657602","product_id":100017301,"comment_content":"牛逼","like_count":0},{"had_liked":false,"id":68867,"user_name":"晓龙","can_delete":false,"product_type":"c1","uid":1004576,"ip_address":"","ucode":"78CDCEBD183D3A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/20/93c79f7c.jpg","comment_is_top":false,"comment_ctime":1550624439,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1550624439","product_id":100017301,"comment_content":"每一个区块保存上一个区块的hash值，链接它的下一个区块保存他的hash值，串起来后，很难被攻击，如果要攻击，你必须把被攻击的连接点上的hash值都要修改，并且会引起连锁反应。","like_count":0},{"had_liked":false,"id":68572,"user_name":"xxy","can_delete":false,"product_type":"c1","uid":1391307,"ip_address":"","ucode":"B98660025010A9","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epmQsuhZqGY2o1fWyONsDVlT6Hbhaicaia5lDmyA6R5uPykG1PlEeGibnJo7ibLO3gPUGnesbGyibC3hAw/132","comment_is_top":false,"comment_ctime":1550546339,"is_pvip":false,"replies":[{"id":"24353","content":"单向加密，也叫加密啊。","user_name":"作者回复","user_name_real":"gg","uid":"1190123","ctime":1550553758,"ip_address":"","comment_id":68572,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550546339","product_id":100017301,"comment_content":"老师好，md5不适合做加解密吧。个人认为加解密比较常用的有 对称加密 aes des 非对称加密 rsa ecdsa。md5 sha1 sha256更适合的场景是做哈希函数  结果不可逆","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439735,"discussion_content":"单向加密，也叫加密啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550553758,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64656,"user_name":"Cc°°","can_delete":false,"product_type":"c1","uid":1149143,"ip_address":"","ucode":"6C88E8D2C4622D","user_header":"https://static001.geekbang.org/account/avatar/00/11/88/d7/43cf7b60.jpg","comment_is_top":false,"comment_ctime":1548846363,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1548846363","product_id":100017301,"comment_content":"针对@Smallfly 对区块链的评论进一步说明：并不是计算哈希值非常费时，而是要计算一个满足难度要求的哈希值非常费时，这个难度就是：通过加不同的盐（往往是一个随机数）来计算哈希值，使得哈希值的前N位都是0！这个过程也被称为挖矿，如果N越大表示难度越大，就越难计算出一个满足需求的哈希值，也就是挖矿越难！就会浪费越多的电力！<br>可以通过控制N的大小来控制整个区块链上产出新块的速度！","like_count":0},{"had_liked":false,"id":63002,"user_name":"泉","can_delete":false,"product_type":"c1","uid":1099760,"ip_address":"","ucode":"914709BE802A8D","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/f0/aa2e0749.jpg","comment_is_top":false,"comment_ctime":1548225059,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1548225059","product_id":100017301,"comment_content":"安全加密，唯一标识，数据检验，散列函数","like_count":0},{"had_liked":false,"id":62383,"user_name":"Tattoo","can_delete":false,"product_type":"c1","uid":1036503,"ip_address":"","ucode":"CE926AC8582C96","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d0/d7/a09ef784.jpg","comment_is_top":false,"comment_ctime":1548042399,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1548042399","product_id":100017301,"comment_content":"老师，学到这里，我真的有点迷糊了，主要有下面这些疑惑，希望老师能够指点迷津。哈希算法到底和散列函数有什么关系？哈希算法是不是就是散列函数的内部实现啊？另外，hash(key)，计算出来的是不是就一定是数组的下标？有什么样的含义呐？","like_count":0,"discussions":[{"author":{"id":1652836,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epKJlW7sqts2ZbPuhMbseTAdvHWnrc4ficAeSZyKibkvn6qyxflPrkKKU3mH6XCNmYvDg11tB6y0pxg/132","nickname":"pc","note":"","ucode":"1AD538B9A900B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":245477,"discussion_content":"1、哈希算法就是散列函数\n2、hash(key)计算出来的是是数组的下标，即桶","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587660986,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62375,"user_name":"Tattoo","can_delete":false,"product_type":"c1","uid":1036503,"ip_address":"","ucode":"CE926AC8582C96","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d0/d7/a09ef784.jpg","comment_is_top":false,"comment_ctime":1548041209,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1548041209","product_id":100017301,"comment_content":"老师，那么是不是说哈希算法就是散列函数的内部实现呐？","like_count":0,"discussions":[{"author":{"id":1652836,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epKJlW7sqts2ZbPuhMbseTAdvHWnrc4ficAeSZyKibkvn6qyxflPrkKKU3mH6XCNmYvDg11tB6y0pxg/132","nickname":"pc","note":"","ucode":"1AD538B9A900B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":245479,"discussion_content":"自及看源码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587660992,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61692,"user_name":"睡痴儿😑","can_delete":false,"product_type":"c1","uid":1187204,"ip_address":"","ucode":"750EF858EF2042","user_header":"https://static001.geekbang.org/account/avatar/00/12/1d/84/d0ec0064.jpg","comment_is_top":false,"comment_ctime":1547776341,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547776341","product_id":100017301,"comment_content":"从网上找到的答案。使用的分别是SHA256,RIPEMD160。其中RIPEMD160主要用于生成比特币地址，SHA256用来完成工作量的证明","like_count":0},{"had_liked":false,"id":61246,"user_name":"微末凡尘","can_delete":false,"product_type":"c1","uid":1099525,"ip_address":"","ucode":"25EDFD0914D0F4","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/05/19c5c255.jpg","comment_is_top":false,"comment_ctime":1547645519,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547645519","product_id":100017301,"comment_content":"没有绝对的安全，所谓的安全只是增加攻击的成本罢了~","like_count":0},{"had_liked":false,"id":51725,"user_name":"匆匆","can_delete":false,"product_type":"c1","uid":1333414,"ip_address":"","ucode":"4DB39C6CD5743B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/H8NxrljQXliccaT5fjdXJQYS3ou3Z9ykAuKw6EgicicEA9L4jQLz3h85P0odgDSaK0cA9oTyUKibbiagdNvnHuuV5mQ/132","comment_is_top":false,"comment_ctime":1545229524,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545229524","product_id":100017301,"comment_content":"哈希算法<br><br>什么时哈希算法：将任意长度的二进制值串映射为固定长度的二进制值串，这个映射规则就是哈希算法。映射得到的二进制值串就是哈希值。<br><br>哈希算法应满足的要求：1、从哈希值不能反推出原始数据（因此哈希算法也叫单向哈希算法）；2、对输入数据非常敏感，哪怕原始数据只修改了1个bit，得到的哈希值也大不相同；3、散列冲突的概率要非常小，对不同的原始数据，哈希值相同的概率非常小；4、哈希算法的执行效率要尽量高效，对较长的文本也要尽快的计算出哈希值。<br><br><br>应用非常非常多，最常见的：安全加密、唯一标志、数据校验、散列函数、负载均衡、数据分片、分布式存储。<br><br>安全加密：散列冲突的概率要很小，这点很重要。但理论上哈希算法做不到不冲突，只能减小冲突概率。如MD5最多能表示2^128个数据，当多于这个数据时必然有哈希值相同的情况（鸽巢原理）。<br><br>唯一标识：比如对海量的图片，通过哈希算法得到的字符串作为图片的唯一标识，这样就能唯一识别图片是否再图库中。<br><br>数据校验：比如BT下载电影。BT下载原理时基于P2P协议，我们可以从多个机器上并行下载一个2GB电影，即同时下载这个电影的很多片段（文件块），最后组装成一个电影。但如果其中一块时被恶意修改的那就最终无法观看甚至中毒。可以通过哈希算法对每一块取哈希值并保存再种子文件中。由于哈希算法对数据敏感，所以有一点错误就不下载这个文件块，重新找资源<br><br><br>散列函数：散列函数用的哈希算法一般都比较简单。因为只关心是否平均分布多一点和执行快慢。<br><br>ps：区块链的底层实现原理中，哈希算就是一个非常重要的理论基础<br>","like_count":0},{"had_liked":false,"id":50633,"user_name":"海军陆战队","can_delete":false,"product_type":"c1","uid":1134101,"ip_address":"","ucode":"EEB5336AE4E980","user_header":"https://static001.geekbang.org/account/avatar/00/11/4e/15/189686da.jpg","comment_is_top":false,"comment_ctime":1545018468,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545018468","product_id":100017301,"comment_content":"哈希用了数学里面的求余","like_count":0},{"had_liked":false,"id":49132,"user_name":"色即是空","can_delete":false,"product_type":"c1","uid":1189638,"ip_address":"","ucode":"46B8975ED087B8","user_header":"https://static001.geekbang.org/account/avatar/00/12/27/06/7ab75a5b.jpg","comment_is_top":false,"comment_ctime":1544608903,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544608903","product_id":100017301,"comment_content":"将任意长度的二进制值串映射为固定长度的二进制值串<br>安全加密<br>唯一标识<br>数据校验<br>散列函数<br>负载均衡<br>数据分片<br>分布式存储器<br>信息摘要算法MD5<br>安全散列算法SHA<br>数据加密标准DES<br>高级加密标准AES<br>目标就是找到一种快速且很难被破解的哈希算法<br>加入“盐”防止字典攻击<br>问答：看了第一个评论，觉得区块链用的是哈希校验这种方式","like_count":0},{"had_liked":false,"id":43864,"user_name":"👽","can_delete":false,"product_type":"c1","uid":1274117,"ip_address":"","ucode":"D313AF941B412D","user_header":"https://static001.geekbang.org/account/avatar/00/13/71/05/db554eba.jpg","comment_is_top":false,"comment_ctime":1543313050,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543313050","product_id":100017301,"comment_content":"这么说的话 图片文件算出的md5值其实有可能有两个图片的md5值事相同的咯？<br>之前开发功能，app管理，为了防止重复提交多个同一个版本的app，而占用服务器空间，做了一个去重功能，使用的就是md5校验。但是今天来看的话，似乎还需要进行其他的二次校验方式。<br>","like_count":0},{"had_liked":false,"id":43303,"user_name":"qinggeouye","can_delete":false,"product_type":"c1","uid":1251536,"ip_address":"","ucode":"5B53EEDD7BEC9C","user_header":"https://static001.geekbang.org/account/avatar/00/13/18/d0/49b06424.jpg","comment_is_top":false,"comment_ctime":1543209423,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543209423","product_id":100017301,"comment_content":"从散列函数到哈希算法，散列函数是哈希算法的一个特定应用，散列函数更要求散列后的散列值分布较均匀以及散列过程较快速，对散列冲突和是否能反向推导出原始值的要求较低。","like_count":0},{"had_liked":false,"id":42812,"user_name":"太空土豆","can_delete":false,"product_type":"c1","uid":1247622,"ip_address":"","ucode":"636253D0DE1384","user_header":"","comment_is_top":false,"comment_ctime":1543050367,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543050367","product_id":100017301,"comment_content":"赞","like_count":0},{"had_liked":false,"id":41904,"user_name":"花仙子","can_delete":false,"product_type":"c1","uid":1249216,"ip_address":"","ucode":"9840BF416F1F0F","user_header":"https://static001.geekbang.org/account/avatar/00/13/0f/c0/e6151cce.jpg","comment_is_top":false,"comment_ctime":1542870380,"is_pvip":false,"replies":[{"id":"15057","content":"是的 如果知道了盐的话","user_name":"作者回复","user_name_real":"gg","uid":"1190123","ctime":1542884796,"ip_address":"","comment_id":41904,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542870380","product_id":100017301,"comment_content":"对于加盐来说，如果破解者知道了加盐算法，是否加盐也就不起作用了？","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429941,"discussion_content":"是的 如果知道了盐的话","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542884796,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41482,"user_name":"inNovation","can_delete":false,"product_type":"c1","uid":1026063,"ip_address":"","ucode":"C150C5C9186D2A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a8/0f/9f657edc.jpg","comment_is_top":false,"comment_ctime":1542791238,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542791238","product_id":100017301,"comment_content":"以pow为主的区块链，如比特币采用了两次sha256进行hash，但为什么呢？<br>为什么不是三次，或者一次，有人说可以抵抗量子攻击，是真嘛？<br>脑阔疼","like_count":0},{"had_liked":false,"id":39644,"user_name":"梁成志（鹏金所）","can_delete":false,"product_type":"c1","uid":1240999,"ip_address":"","ucode":"EAC76707536627","user_header":"https://static001.geekbang.org/account/avatar/00/12/ef/a7/07dce4a9.jpg","comment_is_top":false,"comment_ctime":1542330789,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542330789","product_id":100017301,"comment_content":"哈希算法算出来是长度固定的字符串，而散列函数要求是int类型数据，怎么能用哈希算法设计散列函数呢？","like_count":0},{"had_liked":false,"id":38669,"user_name":"will","can_delete":false,"product_type":"c1","uid":1274698,"ip_address":"","ucode":"C3DDB85992DD12","user_header":"https://static001.geekbang.org/account/avatar/00/13/73/4a/ab67d08a.jpg","comment_is_top":false,"comment_ctime":1542101911,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542101911","product_id":100017301,"comment_content":"我知道有俩处<br>1.hashtree用于磁盘空间清理<br>2.保证不可篡改性。有人说过这个了。","like_count":0},{"had_liked":false,"id":37958,"user_name":"insist","can_delete":false,"product_type":"c1","uid":1054536,"ip_address":"","ucode":"1EE2800A900BA7","user_header":"https://static001.geekbang.org/account/avatar/00/10/17/48/3ab39c86.jpg","comment_is_top":false,"comment_ctime":1541826253,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1541826253","product_id":100017301,"comment_content":"散列函数只是哈希算法的应用之一","like_count":0},{"had_liked":false,"id":37601,"user_name":"咖啡巧克力丶","can_delete":false,"product_type":"c1","uid":1241940,"ip_address":"","ucode":"C205E66058859B","user_header":"https://static001.geekbang.org/account/avatar/00/12/f3/54/bcad6e64.jpg","comment_is_top":false,"comment_ctime":1541648865,"is_pvip":false,"replies":[{"id":"13599","content":"理解的没错","user_name":"作者回复","user_name_real":"gg","uid":"1190123","ctime":1541728876,"ip_address":"","comment_id":37601,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1541648865","product_id":100017301,"comment_content":"一开始没理解单向的算法如何加密？  密码不应该是双向的吗？ 所以我理解成校验过程加密，就是说用户输入的密码生成MD5，和服务器上的密码生成的MD5，做对比，向外传输的是MD5，所以拦截了也不会有什么问题。","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428418,"discussion_content":"理解的没错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541728876,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37576,"user_name":"🐱您的好友William🐱","can_delete":false,"product_type":"c1","uid":1215456,"ip_address":"","ucode":"427786DB178965","user_header":"https://static001.geekbang.org/account/avatar/00/12/8b/e0/9a79ddac.jpg","comment_is_top":false,"comment_ctime":1541643133,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1541643133","product_id":100017301,"comment_content":"之前只知道区块链使用的叫什么哈希碰撞，现在终于懂了","like_count":0},{"had_liked":false,"id":37492,"user_name":"莫弹弹","can_delete":false,"product_type":"c1","uid":1239978,"ip_address":"","ucode":"60A25C709A665F","user_header":"https://static001.geekbang.org/account/avatar/00/12/eb/aa/db213a66.jpg","comment_is_top":false,"comment_ctime":1541606686,"is_pvip":false,"replies":[{"id":"13447","content":"salt在加密之前就拼接到明文密码上的","user_name":"作者回复","user_name_real":"gg","uid":"1190123","ctime":1541641262,"ip_address":"","comment_id":37492,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1541606686","product_id":100017301,"comment_content":"散列函数的校验可以叫摘要算法，md5和sha是最常用的。<br>老师请问salt是具体怎么使用呢？看别人的源码比较吃力，不知道这个salt到底在哪一步怎么加进去的<br>另外在文章中我希望可以帮我们拓宽一下视野，就算是一笔带过也好，提一下其他好用，知名度比较低的算法；例如在这一节可以提一下CRC32，谢谢老师！","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428366,"discussion_content":"salt在加密之前就拼接到明文密码上的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541641262,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37447,"user_name":"牵手约定","can_delete":false,"product_type":"c1","uid":1249461,"ip_address":"","ucode":"01AF328FDDD38C","user_header":"https://static001.geekbang.org/account/avatar/00/13/10/b5/0813608c.jpg","comment_is_top":false,"comment_ctime":1541591169,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1541591169","product_id":100017301,"comment_content":"越来越高深了、","like_count":0},{"had_liked":false,"id":37412,"user_name":"MARK","can_delete":false,"product_type":"c1","uid":1126900,"ip_address":"","ucode":"9F429C9C5FEE6A","user_header":"https://static001.geekbang.org/account/avatar/00/11/31/f4/467cf5d7.jpg","comment_is_top":false,"comment_ctime":1541577485,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1541577485","product_id":100017301,"comment_content":"专门去隔壁左耳听风翻了下：区块链使用 SHA-256 算法,是为了得到区块的hash值，Block有两部分 协议头(header：6字段Version, Previous Block Hash, Merkle Root, Timestamp, Difficulty Target, Nonce)和交易数据，对区块头做两次SHA-256的hash求值就是本区块的hash值，即ID或地址：<br>SHA-256(SHA-256 (Block Header))。","like_count":0},{"had_liked":false,"id":37379,"user_name":"jenny","can_delete":false,"product_type":"c1","uid":1108249,"ip_address":"","ucode":"F8A8D7A7A813B1","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/19/219914ca.jpg","comment_is_top":false,"comment_ctime":1541562247,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1541562247","product_id":100017301,"comment_content":"比特币实现的区块链采用的安全哈希算法（SHA-256），每个交易使用哈希算法生成一个256位的hash值，用作安全加密。另外每一个区块也会生成一个hash值，放在下一个区块的头部，以便校验信息、放篡改。另外也有用SHA-256作为加密算法，生成私钥。","like_count":0},{"had_liked":false,"id":37369,"user_name":"白了少年头","can_delete":false,"product_type":"c1","uid":1053084,"ip_address":"","ucode":"A65E00E05B23BA","user_header":"https://static001.geekbang.org/account/avatar/00/10/11/9c/4fd6ebe0.jpg","comment_is_top":false,"comment_ctime":1541559981,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1541559981","product_id":100017301,"comment_content":"区块链使用SHA-256哈希算法，为了解决数据的完整性和正确性问题，防止恶意篡改，不知道我理解的对不对","like_count":0},{"had_liked":false,"id":37354,"user_name":"NeverMore","can_delete":false,"product_type":"c1","uid":1228498,"ip_address":"","ucode":"582698D772810D","user_header":"https://static001.geekbang.org/account/avatar/00/12/be/d2/3d88cb8e.jpg","comment_is_top":false,"comment_ctime":1541554630,"is_pvip":false,"replies":[{"id":"13454","content":"开拓下思维 不熟悉也没关系啊 ","user_name":"作者回复","user_name_real":"gg","uid":"1190123","ctime":1541641755,"ip_address":"","comment_id":37354,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1541554630","product_id":100017301,"comment_content":"区块链不熟悉啊。。","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428306,"discussion_content":"开拓下思维 不熟悉也没关系啊 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541641755,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37340,"user_name":"拉欧","can_delete":false,"product_type":"c1","uid":1206605,"ip_address":"","ucode":"40996A8093A95F","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/4d/81c44f45.jpg","comment_is_top":false,"comment_ctime":1541552755,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1541552755","product_id":100017301,"comment_content":"在对一个区块内所有交易记录打包时用到了哈希算法，应该是摘要算法吧","like_count":0}]}