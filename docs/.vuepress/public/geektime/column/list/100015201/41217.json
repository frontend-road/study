{"id":41217,"title":"20 | 深入理解StatefulSet（三）：有状态应用实践","content":"<p>你好，我是张磊。今天我和你分享的主题是：深入理解StatefulSet之有状态应用实践。</p><p>在前面的两篇文章中，我详细讲解了StatefulSet的工作原理，以及处理拓扑状态和存储状态的方法。而在今天这篇文章中，我将通过一个实际的例子，再次为你深入解读一下部署一个StatefulSet的完整流程。</p><p>今天我选择的实例是部署一个MySQL集群，这也是Kubernetes官方文档里的一个经典案例。但是，很多工程师都曾向我吐槽说这个例子“完全看不懂”。</p><p>其实，这样的吐槽也可以理解：相比于Etcd、Cassandra等“原生”就考虑了分布式需求的项目，MySQL以及很多其他的数据库项目，在分布式集群的搭建上并不友好，甚至有点“原始”。</p><p>所以，这次我就直接选择了这个具有挑战性的例子，和你分享如何使用StatefulSet将它的集群搭建过程“容器化”。</p><blockquote>\n<p>备注：在开始实践之前，请确保我们之前一起部署的那个Kubernetes集群还是可用的，并且网络插件和存储插件都能正常运行。具体的做法，请参考第11篇文章<a href=\"https://time.geekbang.org/column/article/39724\">《从0到1：搭建一个完整的Kubernetes集群》</a>的内容。</p>\n</blockquote><p>首先，用自然语言来描述一下我们想要部署的“有状态应用”。</p><!-- [[[read_end]]] --><ol>\n<li>\n<p>是一个“主从复制”（Maser-Slave Replication）的MySQL集群；</p>\n</li>\n<li>\n<p>有1个主节点（Master）；</p>\n</li>\n<li>\n<p>有多个从节点（Slave）；</p>\n</li>\n<li>\n<p>从节点需要能水平扩展；</p>\n</li>\n<li>\n<p>所有的写操作，只能在主节点上执行；</p>\n</li>\n<li>\n<p>读操作可以在所有节点上执行。</p>\n</li>\n</ol><p>这就是一个非常典型的主从模式的MySQL集群了。我们可以把上面描述的“有状态应用”的需求，通过一张图来表示。</p><p><img src=\"https://static001.geekbang.org/resource/image/bb/02/bb2d7f03443392ca40ecde6b1a91c002.png?wh=785*735\" alt=\"\"><br>\n在常规环境里，部署这样一个主从模式的MySQL集群的主要难点在于：如何让从节点能够拥有主节点的数据，即：如何配置主（Master）从（Slave）节点的复制与同步。</p><p>所以，在安装好MySQL的Master节点之后，你需要做的第一步工作，就是<strong>通过XtraBackup将Master节点的数据备份到指定目录。</strong></p><blockquote>\n<p>备注：XtraBackup是业界主要使用的开源MySQL备份和恢复工具。</p>\n</blockquote><p>这一步会自动在目标目录里生成一个备份信息文件，名叫：xtrabackup_binlog_info。这个文件一般会包含如下两个信息：</p><pre><code>$ cat xtrabackup_binlog_info\nTheMaster-bin.000001     481\n</code></pre><p>这两个信息会在接下来配置Slave节点的时候用到。</p><p><strong>第二步：配置Slave节点</strong>。Slave节点在第一次启动前，需要先把Master节点的备份数据，连同备份信息文件，一起拷贝到自己的数据目录（/var/lib/mysql）下。然后，我们执行这样一句SQL：</p><pre><code>TheSlave|mysql&gt; CHANGE MASTER TO\n                MASTER_HOST='$masterip',\n                MASTER_USER='xxx',\n                MASTER_PASSWORD='xxx',\n                MASTER_LOG_FILE='TheMaster-bin.000001',\n                MASTER_LOG_POS=481;\n</code></pre><p>其中，MASTER_LOG_FILE和MASTER_LOG_POS，就是该备份对应的二进制日志（Binary Log）文件的名称和开始的位置（偏移量），也正是xtrabackup_binlog_info文件里的那两部分内容（即：TheMaster-bin.000001和481）。</p><p><strong>第三步，启动Slave节点</strong>。在这一步，我们需要执行这样一句SQL：</p><pre><code>TheSlave|mysql&gt; START SLAVE;\n</code></pre><p>这样，Slave节点就启动了。它会使用备份信息文件中的二进制日志文件和偏移量，与主节点进行数据同步。</p><p><strong>第四步，在这个集群中添加更多的Slave节点</strong>。</p><p>需要注意的是，新添加的Slave节点的备份数据，来自于已经存在的Slave节点。</p><p>所以，在这一步，我们需要将Slave节点的数据备份在指定目录。而这个备份操作会自动生成另一种备份信息文件，名叫：xtrabackup_slave_info。同样地，这个文件也包含了MASTER_LOG_FILE和MASTER_LOG_POS两个字段。</p><p>然后，我们就可以执行跟前面一样的“CHANGE MASTER TO”和“START SLAVE” 指令，来初始化并启动这个新的Slave节点了。</p><p>通过上面的叙述，我们不难看到，<strong>将部署MySQL集群的流程迁移到Kubernetes项目上，需要能够“容器化”地解决下面的“三座大山”：</strong></p><ol>\n<li>\n<p>Master节点和Slave节点需要有不同的配置文件（即：不同的my.cnf）；</p>\n</li>\n<li>\n<p>Master节点和Slave节点需要能够传输备份信息文件；</p>\n</li>\n<li>\n<p>在Slave节点第一次启动之前，需要执行一些初始化SQL操作；</p>\n</li>\n</ol><p>而由于MySQL本身同时拥有拓扑状态（主从节点的区别）和存储状态（MySQL保存在本地的数据），我们自然要通过StatefulSet来解决这“三座大山”的问题。</p><p><strong>其中，“第一座大山：Master节点和Slave节点需要有不同的配置文件”，很容易处理</strong>：我们只需要给主从节点分别准备两份不同的MySQL配置文件，然后根据Pod的序号（Index）挂载进去即可。</p><p>正如我在前面文章中介绍过的，这样的配置文件信息，应该保存在ConfigMap里供Pod使用。它的定义如下所示：</p><pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: mysql\n  labels:\n    app: mysql\ndata:\n  master.cnf: |\n    # 主节点MySQL的配置文件\n    [mysqld]\n    log-bin\n  slave.cnf: |\n    # 从节点MySQL的配置文件\n    [mysqld]\n    super-read-only\n</code></pre><p>在这里，我们定义了master.cnf和slave.cnf两个MySQL的配置文件。</p><ul>\n<li>master.cnf开启了log-bin，即：使用二进制日志文件的方式进行主从复制，这是一个标准的设置。</li>\n<li>slave.cnf的开启了super-read-only，代表的是从节点会拒绝除了主节点的数据同步操作之外的所有写操作，即：它对用户是只读的。</li>\n</ul><p>而上述ConfigMap定义里的data部分，是Key-Value格式的。比如，master.cnf就是这份配置数据的Key，而“|”后面的内容，就是这份配置数据的Value。这份数据将来挂载进Master节点对应的Pod后，就会在Volume目录里生成一个叫作master.cnf的文件。</p><blockquote>\n<p>备注：如果你对ConfigMap的用法感到陌生的话，可以稍微复习一下第15篇文章<a href=\"https://time.geekbang.org/column/article/40466\">《深入解析Pod对象（二）：使用进阶》</a>中，我讲解Secret对象部分的内容。因为，ConfigMap跟Secret，无论是使用方法还是实现原理，几乎都是一样的。</p>\n</blockquote><p>接下来，我们需要创建两个Service来供StatefulSet以及用户使用。这两个Service的定义如下所示：</p><pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: mysql\n  labels:\n    app: mysql\nspec:\n  ports:\n  - name: mysql\n    port: 3306\n  clusterIP: None\n  selector:\n    app: mysql\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: mysql-read\n  labels:\n    app: mysql\nspec:\n  ports:\n  - name: mysql\n    port: 3306\n  selector:\n    app: mysql\n</code></pre><p>可以看到，这两个Service都代理了所有携带app=mysql标签的Pod，也就是所有的MySQL Pod。端口映射都是用Service的3306端口对应Pod的3306端口。</p><p>不同的是，第一个名叫“mysql”的Service是一个Headless Service（即：clusterIP= None）。所以它的作用，是通过为Pod分配DNS记录来固定它的拓扑状态，比如“mysql-0.mysql”和“mysql-1.mysql”这样的DNS名字。其中，编号为0的节点就是我们的主节点。</p><p>而第二个名叫“mysql-read”的Service，则是一个常规的Service。</p><p>并且我们规定，所有用户的读请求，都必须访问第二个Service被自动分配的DNS记录，即：“mysql-read”（当然，也可以访问这个Service的VIP）。这样，读请求就可以被转发到任意一个MySQL的主节点或者从节点上。</p><blockquote>\n<p>备注：Kubernetes中的所有Service、Pod对象，都会被自动分配同名的DNS记录。具体细节，我会在后面Service部分做重点讲解。</p>\n</blockquote><p>而所有用户的写请求，则必须直接以DNS记录的方式访问到MySQL的主节点，也就是：“mysql-0.mysql“这条DNS记录。</p><p>接下来，我们再一起解决“第二座大山：Master节点和Slave节点需要能够传输备份文件”的问题。</p><p><strong>翻越这座大山的思路，我比较推荐的做法是：先搭建框架，再完善细节。其中，Pod部分如何定义，是完善细节时的重点。</strong></p><p><strong>所以首先，我们先为StatefulSet对象规划一个大致的框架，如下图所示：</strong></p><p><img src=\"https://static001.geekbang.org/resource/image/16/09/16aa2e42034830a0e64120ecc330a509.png?wh=612*1058\" alt=\"\"></p><p>在这一步，我们可以先为StatefulSet定义一些通用的字段。</p><p>比如：selector表示，这个StatefulSet要管理的Pod必须携带app=mysql标签；它声明要使用的Headless Service的名字是：mysql。</p><p>这个StatefulSet的replicas值是3，表示它定义的MySQL集群有三个节点：一个Master节点，两个Slave节点。</p><p>可以看到，StatefulSet管理的“有状态应用”的多个实例，也都是通过同一份Pod模板创建出来的，使用的是同一个Docker镜像。这也就意味着：如果你的应用要求不同节点的镜像不一样，那就不能再使用StatefulSet了。对于这种情况，应该考虑我后面会讲解到的Operator。</p><p>除了这些基本的字段外，作为一个有存储状态的MySQL集群，StatefulSet还需要管理存储状态。所以，我们需要通过volumeClaimTemplate（PVC模板）来为每个Pod定义PVC。比如，这个PVC模板的resources.requests.strorage指定了存储的大小为10 GiB；ReadWriteOnce指定了该存储的属性为可读写，并且一个PV只允许挂载在一个宿主机上。将来，这个PV对应的的Volume就会充当MySQL Pod的存储数据目录。</p><p><strong>然后，我们来重点设计一下这个StatefulSet的Pod模板，也就是template字段。</strong></p><p>由于StatefulSet管理的Pod都来自于同一个镜像，这就要求我们在编写Pod时，一定要保持清醒，用“人格分裂”的方式进行思考：</p><ol>\n<li>\n<p>如果这个Pod是Master节点，我们要怎么做；</p>\n</li>\n<li>\n<p>如果这个Pod是Slave节点，我们又要怎么做。</p>\n</li>\n</ol><p>想清楚这两个问题，我们就可以按照Pod的启动过程来一步步定义它们了。</p><p><strong>第一步：从ConfigMap中，获取MySQL的Pod对应的配置文件。</strong></p><p>为此，我们需要进行一个初始化操作，根据节点的角色是Master还是Slave节点，为Pod分配对应的配置文件。此外，MySQL还要求集群里的每个节点都有一个唯一的ID文件，名叫server-id.cnf。</p><p>而根据我们已经掌握的Pod知识，这些初始化操作显然适合通过InitContainer来完成。所以，我们首先定义了一个InitContainer，如下所示：</p><pre><code>      ...\n      # template.spec\n      initContainers:\n      - name: init-mysql\n        image: mysql:5.7\n        command:\n        - bash\n        - &quot;-c&quot;\n        - |\n          set -ex\n          # 从Pod的序号，生成server-id\n          [[ `hostname` =~ -([0-9]+)$ ]] || exit 1\n          ordinal=${BASH_REMATCH[1]}\n          echo [mysqld] &gt; /mnt/conf.d/server-id.cnf\n          # 由于server-id=0有特殊含义，我们给ID加一个100来避开它\n          echo server-id=$((100 + $ordinal)) &gt;&gt; /mnt/conf.d/server-id.cnf\n          # 如果Pod序号是0，说明它是Master节点，从ConfigMap里把Master的配置文件拷贝到/mnt/conf.d/目录；\n          # 否则，拷贝Slave的配置文件\n          if [[ $ordinal -eq 0 ]]; then\n            cp /mnt/config-map/master.cnf /mnt/conf.d/\n          else\n            cp /mnt/config-map/slave.cnf /mnt/conf.d/\n          fi\n        volumeMounts:\n        - name: conf\n          mountPath: /mnt/conf.d\n        - name: config-map\n          mountPath: /mnt/config-map\n</code></pre><p>在这个名叫init-mysql的InitContainer的配置中，它从Pod的hostname里，读取到了Pod的序号，以此作为MySQL节点的server-id。</p><p>然后，init-mysql通过这个序号，判断当前Pod到底是Master节点（即：序号为0）还是Slave节点（即：序号不为0），从而把对应的配置文件从/mnt/config-map目录拷贝到/mnt/conf.d/目录下。</p><p>其中，文件拷贝的源目录/mnt/config-map，正是ConfigMap在这个Pod的Volume，如下所示：</p><pre><code>      ...\n      # template.spec\n      volumes:\n      - name: conf\n        emptyDir: {}\n      - name: config-map\n        configMap:\n          name: mysql\n</code></pre><p>通过这个定义，init-mysql在声明了挂载config-map这个Volume之后，ConfigMap里保存的内容，就会以文件的方式出现在它的/mnt/config-map目录当中。</p><p>而文件拷贝的目标目录，即容器里的/mnt/conf.d/目录，对应的则是一个名叫conf的、emptyDir类型的Volume。基于Pod Volume共享的原理，当InitContainer复制完配置文件退出后，后面启动的MySQL容器只需要直接声明挂载这个名叫conf的Volume，它所需要的.cnf配置文件已经出现在里面了。这跟我们之前介绍的Tomcat和WAR包的处理方法是完全一样的。</p><p><strong>第二步：在Slave Pod启动前，从Master或者其他Slave Pod里拷贝数据库数据到自己的目录下。</strong></p><p>为了实现这个操作，我们就需要再定义第二个InitContainer，如下所示：</p><pre><code>      ...\n      # template.spec.initContainers\n      - name: clone-mysql\n        image: gcr.io/google-samples/xtrabackup:1.0\n        command:\n        - bash\n        - &quot;-c&quot;\n        - |\n          set -ex\n          # 拷贝操作只需要在第一次启动时进行，所以如果数据已经存在，跳过\n          [[ -d /var/lib/mysql/mysql ]] &amp;&amp; exit 0\n          # Master节点(序号为0)不需要做这个操作\n          [[ `hostname` =~ -([0-9]+)$ ]] || exit 1\n          ordinal=${BASH_REMATCH[1]}\n          [[ $ordinal -eq 0 ]] &amp;&amp; exit 0\n          # 使用ncat指令，远程地从前一个节点拷贝数据到本地\n          ncat --recv-only mysql-$(($ordinal-1)).mysql 3307 | xbstream -x -C /var/lib/mysql\n          # 执行--prepare，这样拷贝来的数据就可以用作恢复了\n          xtrabackup --prepare --target-dir=/var/lib/mysql\n        volumeMounts:\n        - name: data\n          mountPath: /var/lib/mysql\n          subPath: mysql\n        - name: conf\n          mountPath: /etc/mysql/conf.d\n</code></pre><p>在这个名叫clone-mysql的InitContainer里，我们使用的是xtrabackup镜像（它里面安装了xtrabackup工具）。</p><p>而在它的启动命令里，我们首先做了一个判断。即：当初始化所需的数据（/var/lib/mysql/mysql 目录）已经存在，或者当前Pod是Master节点的时候，不需要做拷贝操作。</p><p>接下来，clone-mysql会使用Linux自带的ncat指令，向DNS记录为“mysql-&lt;当前序号减一&gt;.mysql”的Pod，也就是当前Pod的前一个Pod，发起数据传输请求，并且直接用xbstream指令将收到的备份数据保存在/var/lib/mysql目录下。</p><blockquote>\n<p>备注：3307是一个特殊端口，运行着一个专门负责备份MySQL数据的辅助进程。我们后面马上会讲到它。</p>\n</blockquote><p>当然，这一步你可以随意选择用自己喜欢的方法来传输数据。比如，用scp或者rsync，都没问题。</p><p>你可能已经注意到，这个容器里的/var/lib/mysql目录，<strong>实际上正是一个名为data的PVC</strong>，即：我们在前面声明的持久化存储。</p><p>这就可以保证，哪怕宿主机宕机了，我们数据库的数据也不会丢失。更重要的是，由于Pod Volume是被Pod里的容器共享的，所以后面启动的MySQL容器，就可以把这个Volume挂载到自己的/var/lib/mysql目录下，直接使用里面的备份数据进行恢复操作。</p><p>不过，clone-mysql容器还要对/var/lib/mysql目录，执行一句xtrabackup --prepare操作，目的是让拷贝来的数据进入一致性状态，这样，这些数据才能被用作数据恢复。</p><p>至此，我们就通过InitContainer完成了对“主、从节点间备份文件传输”操作的处理过程，也就是翻越了“第二座大山”。</p><p>接下来，我们可以开始定义MySQL容器,启动MySQL服务了。由于StatefulSet里的所有Pod都来自用同一个Pod模板，所以我们还要“人格分裂”地去思考：这个MySQL容器的启动命令，在Master和Slave两种情况下有什么不同。</p><p>有了Docker镜像，在Pod里声明一个Master角色的MySQL容器并不是什么困难的事情：直接执行MySQL启动命令即可。</p><p>但是，如果这个Pod是一个第一次启动的Slave节点，在执行MySQL启动命令之前，它就需要使用前面InitContainer拷贝来的备份数据进行初始化。</p><p>可是，别忘了，<strong>容器是一个单进程模型。</strong></p><p>所以，一个Slave角色的MySQL容器启动之前，谁能负责给它执行初始化的SQL语句呢？</p><p>这就是我们需要解决的“第三座大山”的问题，即：如何在Slave节点的MySQL容器第一次启动之前，执行初始化SQL。</p><p>你可能已经想到了，我们可以为这个MySQL容器额外定义一个sidecar容器，来完成这个操作，它的定义如下所示：</p><pre><code>      ...\n      # template.spec.containers\n      - name: xtrabackup\n        image: gcr.io/google-samples/xtrabackup:1.0\n        ports:\n        - name: xtrabackup\n          containerPort: 3307\n        command:\n        - bash\n        - &quot;-c&quot;\n        - |\n          set -ex\n          cd /var/lib/mysql\n          \n          # 从备份信息文件里读取MASTER_LOG_FILEM和MASTER_LOG_POS这两个字段的值，用来拼装集群初始化SQL\n          if [[ -f xtrabackup_slave_info ]]; then\n            # 如果xtrabackup_slave_info文件存在，说明这个备份数据来自于另一个Slave节点。这种情况下，XtraBackup工具在备份的时候，就已经在这个文件里自动生成了&quot;CHANGE MASTER TO&quot; SQL语句。所以，我们只需要把这个文件重命名为change_master_to.sql.in，后面直接使用即可\n            mv xtrabackup_slave_info change_master_to.sql.in\n            # 所以，也就用不着xtrabackup_binlog_info了\n            rm -f xtrabackup_binlog_info\n          elif [[ -f xtrabackup_binlog_info ]]; then\n            # 如果只存在xtrabackup_binlog_inf文件，那说明备份来自于Master节点，我们就需要解析这个备份信息文件，读取所需的两个字段的值\n            [[ `cat xtrabackup_binlog_info` =~ ^(.*?)[[:space:]]+(.*?)$ ]] || exit 1\n            rm xtrabackup_binlog_info\n            # 把两个字段的值拼装成SQL，写入change_master_to.sql.in文件\n            echo &quot;CHANGE MASTER TO MASTER_LOG_FILE='${BASH_REMATCH[1]}',\\\n                  MASTER_LOG_POS=${BASH_REMATCH[2]}&quot; &gt; change_master_to.sql.in\n          fi\n          \n          # 如果change_master_to.sql.in，就意味着需要做集群初始化工作\n          if [[ -f change_master_to.sql.in ]]; then\n            # 但一定要先等MySQL容器启动之后才能进行下一步连接MySQL的操作\n            echo &quot;Waiting for mysqld to be ready (accepting connections)&quot;\n            until mysql -h 127.0.0.1 -e &quot;SELECT 1&quot;; do sleep 1; done\n            \n            echo &quot;Initializing replication from clone position&quot;\n            # 将文件change_master_to.sql.in改个名字，防止这个Container重启的时候，因为又找到了change_master_to.sql.in，从而重复执行一遍这个初始化流程\n            mv change_master_to.sql.in change_master_to.sql.orig\n            # 使用change_master_to.sql.orig的内容，也是就是前面拼装的SQL，组成一个完整的初始化和启动Slave的SQL语句\n            mysql -h 127.0.0.1 &lt;&lt;EOF\n          $(&lt;change_master_to.sql.orig),\n            MASTER_HOST='mysql-0.mysql',\n            MASTER_USER='root',\n            MASTER_PASSWORD='',\n            MASTER_CONNECT_RETRY=10;\n          START SLAVE;\n          EOF\n          fi\n          \n          # 使用ncat监听3307端口。它的作用是，在收到传输请求的时候，直接执行&quot;xtrabackup --backup&quot;命令，备份MySQL的数据并发送给请求者\n          exec ncat --listen --keep-open --send-only --max-conns=1 3307 -c \\\n            &quot;xtrabackup --backup --slave-info --stream=xbstream --host=127.0.0.1 --user=root&quot;\n        volumeMounts:\n        - name: data\n          mountPath: /var/lib/mysql\n          subPath: mysql\n        - name: conf\n          mountPath: /etc/mysql/conf.d\n</code></pre><p>可以看到，<strong>在这个名叫xtrabackup的sidecar容器的启动命令里，其实实现了两部分工作。</strong></p><p><strong>第一部分工作，当然是MySQL节点的初始化工作</strong>。这个初始化需要使用的SQL，是sidecar容器拼装出来、保存在一个名为change_master_to.sql.in的文件里的，具体过程如下所示：</p><p>sidecar容器首先会判断当前Pod的/var/lib/mysql目录下，是否有xtrabackup_slave_info这个备份信息文件。</p><ul>\n<li>如果有，则说明这个目录下的备份数据是由一个Slave节点生成的。这种情况下，XtraBackup工具在备份的时候，就已经在这个文件里自动生成了\"CHANGE MASTER TO\" SQL语句。所以，我们只需要把这个文件重命名为change_master_to.sql.in，后面直接使用即可。</li>\n<li>如果没有xtrabackup_slave_info文件、但是存在xtrabackup_binlog_info文件，那就说明备份数据来自于Master节点。这种情况下，sidecar容器就需要解析这个备份信息文件，读取MASTER_LOG_FILE和MASTER_LOG_POS这两个字段的值，用它们拼装出初始化SQL语句，然后把这句SQL写入到change_master_to.sql.in文件中。</li>\n</ul><p>接下来，sidecar容器就可以执行初始化了。从上面的叙述中可以看到，只要这个change_master_to.sql.in文件存在，那就说明接下来需要进行集群初始化操作。</p><p>所以，这时候，sidecar容器只需要读取并执行change_master_to.sql.in里面的“CHANGE MASTER TO”指令，再执行一句START SLAVE命令，一个Slave节点就被成功启动了。</p><blockquote>\n<p>需要注意的是：Pod里的容器并没有先后顺序，所以在执行初始化SQL之前，必须先执行一句SQL（select 1）来检查一下MySQL服务是否已经可用。</p>\n</blockquote><p>当然，上述这些初始化操作完成后，我们还要删除掉前面用到的这些备份信息文件。否则，下次这个容器重启时，就会发现这些文件存在，所以又会重新执行一次数据恢复和集群初始化的操作，这是不对的。</p><p>同理，change_master_to.sql.in在使用后也要被重命名，以免容器重启时因为发现这个文件存在又执行一遍初始化。</p><p><strong>在完成MySQL节点的初始化后，这个sidecar容器的第二个工作，则是启动一个数据传输服务。</strong></p><p>具体做法是：sidecar容器会使用ncat命令启动一个工作在3307端口上的网络发送服务。一旦收到数据传输请求时，sidecar容器就会调用xtrabackup --backup指令备份当前MySQL的数据，然后把这些备份数据返回给请求者。这就是为什么我们在InitContainer里定义数据拷贝的时候，访问的是“上一个MySQL节点”的3307端口。</p><p>值得一提的是，由于sidecar容器和MySQL容器同处于一个Pod里，所以它是直接通过Localhost来访问和备份MySQL容器里的数据的，非常方便。</p><p>同样地，我在这里举例用的只是一种备份方法而已，你完全可以选择其他自己喜欢的方案。比如，你可以使用innobackupex命令做数据备份和准备，它的使用方法几乎与本文的备份方法一样。</p><p>至此，我们也就翻越了“第三座大山”，完成了Slave节点第一次启动前的初始化工作。</p><p>扳倒了这“三座大山”后，我们终于可以定义Pod里的主角，MySQL容器了。有了前面这些定义和初始化工作，MySQL容器本身的定义就非常简单了，如下所示：</p><pre><code>      ...\n      # template.spec\n      containers:\n      - name: mysql\n        image: mysql:5.7\n        env:\n        - name: MYSQL_ALLOW_EMPTY_PASSWORD\n          value: &quot;1&quot;\n        ports:\n        - name: mysql\n          containerPort: 3306\n        volumeMounts:\n        - name: data\n          mountPath: /var/lib/mysql\n          subPath: mysql\n        - name: conf\n          mountPath: /etc/mysql/conf.d\n        resources:\n          requests:\n            cpu: 500m\n            memory: 1Gi\n        livenessProbe:\n          exec:\n            command: [&quot;mysqladmin&quot;, &quot;ping&quot;]\n          initialDelaySeconds: 30\n          periodSeconds: 10\n          timeoutSeconds: 5\n        readinessProbe:\n          exec:\n            # 通过TCP连接的方式进行健康检查\n            command: [&quot;mysql&quot;, &quot;-h&quot;, &quot;127.0.0.1&quot;, &quot;-e&quot;, &quot;SELECT 1&quot;]\n          initialDelaySeconds: 5\n          periodSeconds: 2\n          timeoutSeconds: 1\n</code></pre><p>在这个容器的定义里，我们使用了一个标准的MySQL 5.7 的官方镜像。它的数据目录是/var/lib/mysql，配置文件目录是/etc/mysql/conf.d。</p><p>这时候，你应该能够明白，如果MySQL容器是Slave节点的话，它的数据目录里的数据，就来自于InitContainer从其他节点里拷贝而来的备份。它的配置文件目录/etc/mysql/conf.d里的内容，则来自于ConfigMap对应的Volume。而它的初始化工作，则是由同一个Pod里的sidecar容器完成的。这些操作，正是我刚刚为你讲述的大部分内容。</p><p>另外，我们为它定义了一个livenessProbe，通过mysqladmin ping命令来检查它是否健康；还定义了一个readinessProbe，通过查询SQL（select 1）来检查MySQL服务是否可用。当然，凡是readinessProbe检查失败的MySQL Pod，都会从Service里被摘除掉。</p><p>至此，一个完整的主从复制模式的MySQL集群就定义完了。</p><p>现在，我们就可以使用kubectl命令，尝试运行一下这个StatefulSet了。</p><p><strong>首先，我们需要在Kubernetes集群里创建满足条件的PV</strong>。如果你使用的是我们在第11篇文章《<a href=\"https://time.geekbang.org/column/article/39724\">从0到1：搭建一个完整的Kubernetes集群》</a>里部署的Kubernetes集群的话，你可以按照如下方式使用存储插件Rook：</p><pre><code>$ kubectl create -f rook-storage.yaml\n$ cat rook-storage.yaml\napiVersion: ceph.rook.io/v1beta1\nkind: Pool\nmetadata:\n  name: replicapool\n  namespace: rook-ceph\nspec:\n  replicated:\n    size: 3\n---\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: rook-ceph-block\nprovisioner: ceph.rook.io/block\nparameters:\n  pool: replicapool\n  clusterNamespace: rook-ceph\n</code></pre><p>在这里，我用到了StorageClass来完成这个操作。它的作用，是自动地为集群里存在的每一个PVC，调用存储插件（Rook）创建对应的PV，从而省去了我们手动创建PV的机械劳动。我在后续讲解容器存储的时候，会再详细介绍这个机制。</p><blockquote>\n<p>备注：在使用Rook的情况下，mysql-statefulset.yaml里的volumeClaimTemplates字段需要加上声明storageClassName=rook-ceph-block，才能使用到这个Rook提供的持久化存储。</p>\n</blockquote><p><strong>然后，我们就可以创建这个StatefulSet了</strong>，如下所示：</p><pre><code>$ kubectl create -f mysql-statefulset.yaml\n$ kubectl get pod -l app=mysql\nNAME      READY     STATUS    RESTARTS   AGE\nmysql-0   2/2       Running   0          2m\nmysql-1   2/2       Running   0          1m\nmysql-2   2/2       Running   0          1m\n</code></pre><p>可以看到，StatefulSet启动成功后，会有三个Pod运行。</p><p><strong>接下来，我们可以尝试向这个MySQL集群发起请求，执行一些SQL操作来验证它是否正常：</strong></p><pre><code>$ kubectl run mysql-client --image=mysql:5.7 -i --rm --restart=Never --\\\n  mysql -h mysql-0.mysql &lt;&lt;EOF\nCREATE DATABASE test;\nCREATE TABLE test.messages (message VARCHAR(250));\nINSERT INTO test.messages VALUES ('hello');\nEOF\n</code></pre><p>如上所示，我们通过启动一个容器，使用MySQL client执行了创建数据库和表、以及插入数据的操作。需要注意的是，我们连接的MySQL的地址必须是mysql-0.mysql（即：Master节点的DNS记录）。因为，只有Master节点才能处理写操作。</p><p>而通过连接mysql-read这个Service，我们就可以用SQL进行读操作，如下所示：</p><pre><code>$ kubectl run mysql-client --image=mysql:5.7 -i -t --rm --restart=Never --\\\n mysql -h mysql-read -e &quot;SELECT * FROM test.messages&quot;\nWaiting for pod default/mysql-client to be running, status is Pending, pod ready: false\n+---------+\n| message |\n+---------+\n| hello   |\n+---------+\npod &quot;mysql-client&quot; deleted\n</code></pre><p>在有了StatefulSet以后，你就可以像Deployment那样，非常方便地扩展这个MySQL集群，比如：</p><pre><code>$ kubectl scale statefulset mysql  --replicas=5\n</code></pre><p>这时候，你就会发现新的Slave Pod mysql-3和mysql-4被自动创建了出来。</p><p>而如果你像如下所示的这样，直接连接mysql-3.mysql，即mysql-3这个Pod的DNS名字来进行查询操作：</p><pre><code>$ kubectl run mysql-client --image=mysql:5.7 -i -t --rm --restart=Never --\\\n  mysql -h mysql-3.mysql -e &quot;SELECT * FROM test.messages&quot;\nWaiting for pod default/mysql-client to be running, status is Pending, pod ready: false\n+---------+\n| message |\n+---------+\n| hello   |\n+---------+\npod &quot;mysql-client&quot; deleted\n</code></pre><p>就会看到，从StatefulSet为我们新创建的mysql-3上，同样可以读取到之前插入的记录。也就是说，我们的数据备份和恢复，都是有效的。</p><h2>总结</h2><p>在今天这篇文章中，我以MySQL集群为例，和你详细分享了一个实际的StatefulSet的编写过程。这个YAML文件的<a href=\"https://kubernetes.io/docs/tasks/run-application/run-replicated-stateful-application/#statefulset\">链接在这里</a>，希望你能多花一些时间认真消化。</p><p>在这个过程中，有以下几个关键点（坑）特别值得你注意和体会。</p><ol>\n<li>\n<p>“人格分裂”：在解决需求的过程中，一定要记得思考，该Pod在扮演不同角色时的不同操作。</p>\n</li>\n<li>\n<p>“阅后即焚”：很多“有状态应用”的节点，只是在第一次启动的时候才需要做额外处理。所以，在编写YAML文件时，你一定要考虑“容器重启”的情况，不要让这一次的操作干扰到下一次的容器启动。</p>\n</li>\n<li>\n<p>“容器之间平等无序”：除非是InitContainer，否则一个Pod里的多个容器之间，是完全平等的。所以，你精心设计的sidecar，绝不能对容器的顺序做出假设，否则就需要进行前置检查。</p>\n</li>\n</ol><p>最后，相信你也已经能够理解，StatefulSet其实是一种特殊的Deployment，只不过这个“Deployment”的每个Pod实例的名字里，都携带了一个唯一并且固定的编号。这个编号的顺序，固定了Pod的拓扑关系；这个编号对应的DNS记录，固定了Pod的访问方式；这个编号对应的PV，绑定了Pod与持久化存储的关系。所以，当Pod被删除重建时，这些“状态”都会保持不变。</p><p>而一旦你的应用没办法通过上述方式进行状态的管理，那就代表了StatefulSet已经不能解决它的部署问题了。这时候，我后面讲到的Operator，可能才是一个更好的选择。</p><h2>思考题</h2><p>如果我们现在的需求是：所有的读请求，只由Slave节点处理；所有的写请求，只由Master节点处理。那么，你需要在今天这篇文章的基础上再做哪些改动呢？</p><p>感谢你的收听，欢迎你给我留言，也欢迎分享给更多的朋友一起阅读。</p>","neighbors":{"left":{"article_title":"19 | 深入理解StatefulSet（二）：存储状态","id":41154},"right":{"article_title":"21 | 容器化守护进程的意义：DaemonSet","id":41366}},"comments":[{"had_liked":false,"id":30682,"user_name":"Vincen","can_delete":false,"product_type":"c1","uid":1218185,"ip_address":"","ucode":"1029A901EC7BA0","user_header":"https://static001.geekbang.org/account/avatar/00/12/96/89/9312b3a2.jpg","comment_is_top":false,"comment_ctime":1538973296,"is_pvip":false,"replies":[{"id":"11062","content":"没错，这是一个很好的解决思路","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1538998732,"ip_address":"","comment_id":30682,"utype":1}],"discussion_count":11,"race_medal":0,"score":"461100473968","product_id":100015201,"comment_content":"因为是通过一个statefulset来实现的 感觉太复杂了，master和slave做成两个statefulset就非常简单了","like_count":108,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426067,"discussion_content":"没错，这是一个很好的解决思路","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538998732,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1702769,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTImicSGGrnTWbXu3snxpYJ1yMGhtwckV3sZq7K1YmscXxDBj2YOTGPA9t5hicGiaJjx3Zvm7ibickGynzg/132","nickname":"武神","note":"","ucode":"EB424DA42D52B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":399073,"discussion_content":"两个statefulset确实简单很多。而且先后顺序也容易控制。slave的statefulset再加上一个initContainer就行了，这个initContainer做ping操作：until nslookup mysql-master; do echo waiting for mysql-master; sleep 1; done;","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1632901873,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1302286,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoTiazkXvN29ebN6eotq8xu2pUGbQkrOduwBQsXmicsMBKl9qbfoggjBPacaIgk44zsjxlpbBgOcdaQ/132","nickname":"骑蜗牛上高速","note":"","ucode":"36648D52A76CF8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":313035,"discussion_content":"两个statefullset真是个好思路～比文章中的部署过程应该简单，更好理解～","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1602917709,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1261493,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3f/b5/5fe77e16.jpg","nickname":"不经意间","note":"","ucode":"C39D98697ACB8B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533406,"discussion_content":"如果就一主一从，两个deploy就可以吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637852647,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1298139,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ce/db/bb1821b3.jpg","nickname":"王      慈","note":"","ucode":"EACC3D086674D8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351037,"discussion_content":"两个的话slave集群可以用deployment吗？感觉没啥状态需要维护了。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614129781,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1740409,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/8e/79/f9d5dd3a.jpg","nickname":"吕超","note":"","ucode":"B36883984BE16B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1298139,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ce/db/bb1821b3.jpg","nickname":"王      慈","note":"","ucode":"EACC3D086674D8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352562,"discussion_content":"slave有存储状态","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614770904,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":351037,"ip_address":""},"score":352562,"extra":""}]},{"author":{"id":1066577,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/51/50457315.jpg","nickname":"哗丽转身","note":"","ucode":"AF59F8211115DD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347465,"discussion_content":"2个的话脚本更简单独立，缺点是依赖master先启动","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612237255,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1497162,"avatar":"https://static001.geekbang.org/account/avatar/00/16/d8/4a/99ba04cc.jpg","nickname":"杰","note":"","ucode":"8C6AE6374E77B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":334769,"discussion_content":"如果做成两个statefullset的话可能也会有一些局限吧，比如没办法控制启动的时候都是master先启动。 如果希望对master和slave做反亲和也不是很方便。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607962869,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1109528,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ee/18/65e89d9c.jpg","nickname":"王大喵","note":"","ucode":"C14AAE3ED964DE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1497162,"avatar":"https://static001.geekbang.org/account/avatar/00/16/d8/4a/99ba04cc.jpg","nickname":"杰","note":"","ucode":"8C6AE6374E77B1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574002,"discussion_content":"好好看下 武神 的评论，和老师说的“容器之间平等无序”。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653792765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":334769,"ip_address":""},"score":574002,"extra":""}]},{"author":{"id":1198816,"avatar":"https://static001.geekbang.org/account/avatar/00/12/4a/e0/eff34583.jpg","nickname":"马超","note":"","ucode":"FAFF55DC5DD15C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":40745,"discussion_content":"对的，可以省去很多pod编号的判断分支","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572264810,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1845394,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/28/92/436735f5.jpg","nickname":"晞月520","note":"","ucode":"4F05E02A5C1608","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1198816,"avatar":"https://static001.geekbang.org/account/avatar/00/12/4a/e0/eff34583.jpg","nickname":"马超","note":"","ucode":"FAFF55DC5DD15C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302375,"discussion_content":"你们是写成两个statefull吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598889186,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":40745,"ip_address":""},"score":302375,"extra":""}]}]},{"had_liked":false,"id":167956,"user_name":"巴西","can_delete":false,"product_type":"c1","uid":1119116,"ip_address":"","ucode":"6E68AA02011541","user_header":"https://static001.geekbang.org/account/avatar/00/11/13/8c/c86340ca.jpg","comment_is_top":false,"comment_ctime":1577969161,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"358060254729","product_id":100015201,"comment_content":"信息量太大,容我冷静一下","like_count":84,"discussions":[{"author":{"id":1934785,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Pu41KPIhAp72l0N7kOFL738owSAIT5EyH0oUUMacQRWzeFV77QDjSDNTSFNvjNZib1myibvxAfQAsAY5KzsIia73w/132","nickname":"王鹏","note":"","ucode":"B79003C125BE00","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575446,"discussion_content":"同样，有点多","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654841185,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1152145,"avatar":"https://static001.geekbang.org/account/avatar/00/11/94/91/6d6ca42f.jpg","nickname":"怀草诗","note":"","ucode":"78F8B9B4628F15","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555596,"discussion_content":"看得我有点被劝退😂😂😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646985044,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2147220,"avatar":"https://static001.geekbang.org/account/avatar/00/20/c3/94/e89ebc50.jpg","nickname":"神毓逍遥","note":"","ucode":"83351CB18B190E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":415317,"discussion_content":"看的头晕","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637054101,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":31136,"user_name":"DJH","can_delete":false,"product_type":"c1","uid":1256740,"ip_address":"","ucode":"2BDEF123B3DB6A","user_header":"https://static001.geekbang.org/account/avatar/00/13/2d/24/28acca15.jpg","comment_is_top":false,"comment_ctime":1539101627,"is_pvip":false,"replies":[{"id":"11215","content":"sidecar是常驻进程，要监听3370端口呢。一个容器里显然没办法管理两个常驻进程，这就是容器是单进程的意思啊。","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1539131929,"ip_address":"","comment_id":31136,"utype":1}],"discussion_count":4,"race_medal":0,"score":"173337793467","product_id":100015201,"comment_content":"有一点我还是没想通，为啥数据复制操作要用sidecar容器来处理，而不用mysql主容器来一并解决。如果把数据复制操作和启动mysql服务一并写到同一个sh -c后面，这样算不算一个单一进程呢？","like_count":41,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426245,"discussion_content":"sidecar是常驻进程，要监听3370端口呢。一个容器里显然没办法管理两个常驻进程，这就是容器是单进程的意思啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539131929,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1352415,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/YD1RqdHwfuNHSot5OcjlNhWiatJLmlhF47sUiczmzo0znLYvOpssdsqdlGKjUenXJzTG4eBR0bIJkJeUTibQ04Yqw/132","nickname":"jking","note":"","ucode":"05611E2DC82125","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577568,"discussion_content":"M","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656208059,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1109528,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ee/18/65e89d9c.jpg","nickname":"王大喵","note":"","ucode":"C14AAE3ED964DE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574003,"discussion_content":"sidecar也要来接收 其他slave的备份数据传输的请求。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653792821,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1113864,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ff/08/7c18d8a4.jpg","nickname":"团","note":"","ucode":"D56ABBCE4E4D90","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531048,"discussion_content":"Mark.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637212379,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":33668,"user_name":"彭锐","can_delete":false,"product_type":"c1","uid":1179669,"ip_address":"","ucode":"F2CB53DE42026D","user_header":"https://static001.geekbang.org/account/avatar/00/12/00/15/6e399ec7.jpg","comment_is_top":false,"comment_ctime":1539849532,"is_pvip":false,"replies":[{"id":"12103","content":"没错。你说的这种情况得用operator，后面会讲。","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1539868346,"ip_address":"","comment_id":33668,"utype":1}],"discussion_count":3,"race_medal":0,"score":"121798933820","product_id":100015201,"comment_content":"这样的有状态应用有个约束，pod标识一旦确定，角色就确定了。但实际应用中，不能有这样的约束，主挂了，要有一个从升主。这就要求至少有选主机制，所有的配置文件也不能依赖id确定角色。<br>这怎么玩呢？operater吗？operater可以看成一个特定应用的sre保姆吗？","like_count":29,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427025,"discussion_content":"没错。你说的这种情况得用operator，后面会讲。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539868346,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2041199,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/25/6f/bbf7bded.jpg","nickname":"Andrew","note":"","ucode":"837D7A71307A49","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300547,"discussion_content":"主挂了，k8s会自动创建新pod做主，就不用什么选举了","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1598167712,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1643296,"avatar":"https://static001.geekbang.org/account/avatar/00/19/13/20/2d22b331.jpg","nickname":"H.Z","note":"","ucode":"728417BD5B4DA8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2041199,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/25/6f/bbf7bded.jpg","nickname":"Andrew","note":"","ucode":"837D7A71307A49","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":306130,"discussion_content":"依赖K8S重启master的Pod，感觉会有一个隐患，如果因为节点原因一直重启失败，或者重启时间比选举时间长很多，业务是否会长时间终止。用选举机制的话，直接将一个正在正常运行的Pod选举为master，是否会更好一些。","likes_number":11,"is_delete":false,"is_hidden":false,"ctime":1600177951,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":300547,"ip_address":""},"score":306130,"extra":""}]}]},{"had_liked":false,"id":123983,"user_name":"sam700000","can_delete":false,"product_type":"c1","uid":1069133,"ip_address":"","ucode":"C2ABDDC56B2D50","user_header":"https://static001.geekbang.org/account/avatar/00/10/50/4d/db91e218.jpg","comment_is_top":false,"comment_ctime":1565787957,"is_pvip":true,"replies":[{"id":"46506","content":"说的对！","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1566350958,"ip_address":"","comment_id":123983,"utype":1}],"discussion_count":1,"race_medal":0,"score":"117529904949","product_id":100015201,"comment_content":"通过这节我才更清晰理解了，kubernetes最小的管理单位是pod的概念，把思维从容器这层抽出来。然后也更清楚的理解了statefulset实现有状态，就是把特定的状态配置绑定在某个对象名称上面，然后通过之前说的控制循环不断的维护这个对象的特性，只要这写特定对象和它们各自绑定的状态配置不变就实现了有状态的应用部署和维护。果然实践出真知👍","like_count":28,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462939,"discussion_content":"说的对！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566350958,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55074,"user_name":"黄俊","can_delete":false,"product_type":"c1","uid":1226759,"ip_address":"","ucode":"183229074B38AE","user_header":"https://static001.geekbang.org/account/avatar/00/12/b8/07/ef28a5f7.jpg","comment_is_top":false,"comment_ctime":1546026370,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"113215176066","product_id":100015201,"comment_content":"error: unable to recognize &quot;rook-storage.yaml&quot;: no matches for kind &quot;Pool&quot; in version &quot;ceph.rook.io&#47;v1&quot;<br><br>应该是rook新版本的问题，rook-storage.yaml 文件中有两个位置需要修改。<br><br>apiVersion: ceph.rook.io&#47;v1<br>kind: CephBlockPool<br>","like_count":27,"discussions":[{"author":{"id":1705468,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/05/fc/bceb3f2b.jpg","nickname":"开心哥","note":"","ucode":"D44C1F03B23C5A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291846,"discussion_content":"搞了几个钟，原来答案就在此楼。拜谢。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594972303,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226752,"user_name":"wenxuan","can_delete":false,"product_type":"c1","uid":1171262,"ip_address":"","ucode":"36840291028D94","user_header":"https://static001.geekbang.org/account/avatar/00/11/df/3e/718d6f1b.jpg","comment_is_top":false,"comment_ctime":1592195068,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"66016704508","product_id":100015201,"comment_content":"关于思考提的解决方案，有回答提到可以通过创建mysql-read和mysql-write两个service，用不同的label来分别筛选主从。我觉得这里面忽略了一点，即使是StatefulSet，各个副本的metadata也是完全一致的，不可能做到给主从节点打上不同的标签。主从分两个StatefulSet部署可以解决这个问题，但又引入了需要人为控制两个StagefulSet启动顺序的问题。<br>其实我觉得应该可以修改mysql的启动参数，让master容器和slave容器监听在不同的端口，然后分别创建read和write两个svc，绑定不同的端口。由于svc会把readiness探针失败的pod剔出去，所以就达到read svc只有slave节点，而write svc只有master节点的目的。","like_count":15,"discussions":[{"author":{"id":2291160,"avatar":"https://static001.geekbang.org/account/avatar/00/22/f5/d8/121e4b68.jpg","nickname":"Woa 🤞","note":"","ucode":"6033F496082F3B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545950,"discussion_content":"您就是魔改大牛！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642089522,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1171262,"avatar":"https://static001.geekbang.org/account/avatar/00/11/df/3e/718d6f1b.jpg","nickname":"wenxuan","note":"","ucode":"36840291028D94","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379605,"discussion_content":"一年前写的时候没有动手实践，应该只用一个svc提供读就够了，写入用域名mysql-0.mysql就可以了。（其实也无法同时实现只读svc和只写svc，因为探针是配置在容器这一层的，要么只能选出master，要么只能选出slave，不可能同时满足2个svc）。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624009072,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1102245,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d1/a5/2bbedc3b.jpg","nickname":"over","note":"","ucode":"FE272AC19842D3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":346349,"discussion_content":"mark\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611918399,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342983,"discussion_content":"人才啊！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610892022,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1217712,"avatar":"https://static001.geekbang.org/account/avatar/00/12/94/b0/b073fe8b.jpg","nickname":"aMaMiMoU","note":"","ucode":"AF1E6CA541E482","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319420,"discussion_content":"这个思路我觉得可行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604026344,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":31635,"user_name":"侯操宇","can_delete":false,"product_type":"c1","uid":1117242,"ip_address":"","ucode":"741E0DC3B8EB55","user_header":"https://static001.geekbang.org/account/avatar/00/11/0c/3a/d2161d37.jpg","comment_is_top":false,"comment_ctime":1539250374,"is_pvip":false,"replies":[{"id":"11390","content":"没啥讲究，能完成任务即可","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1539256971,"ip_address":"","comment_id":31635,"utype":1}],"discussion_count":3,"race_medal":0,"score":"57373825222","product_id":100015201,"comment_content":"老师，我发现在initContainers 的ini-mysql容器中，执行的只是简单的文件拷贝工作，但镜像却用的是mysql的镜像，可以用其他镜像取代吗？镜像的选择有什么讲究吗？","like_count":13,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426440,"discussion_content":"没啥讲究，能完成任务即可","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539256971,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1035612,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/cd/5c/e09eac13.jpg","nickname":"刘強","note":"","ucode":"B2E41BB894A727","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580273,"discussion_content":"这里用mysql镜像，应该是重用，不用再拉取新的镜像了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658057226,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1113864,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ff/08/7c18d8a4.jpg","nickname":"团","note":"","ucode":"D56ABBCE4E4D90","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531050,"discussion_content":"Mark，文中有同样疑问。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637212784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":30695,"user_name":"风轨","can_delete":false,"product_type":"c1","uid":1185844,"ip_address":"","ucode":"7B8A5233B61EB0","user_header":"https://static001.geekbang.org/account/avatar/00/12/18/34/c082419c.jpg","comment_is_top":false,"comment_ctime":1538977413,"is_pvip":false,"replies":[{"id":"11061","content":"其实也可以写成两个statefulset ","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1538998715,"ip_address":"","comment_id":30695,"utype":1}],"discussion_count":1,"race_medal":0,"score":"57373552261","product_id":100015201,"comment_content":"集群中的master&#47;slave节点关系不对等。Service是通过label来绑定pod的，一个statefulSet中所有pod的label都是一样的，无法区分，因此service也是无法区别绑定slave pod的。所以答案应该是老师在文中多次提及的Operator，一次编排多个角色不同甚至镜像不同的服务。","like_count":13,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426069,"discussion_content":"其实也可以写成两个statefulset ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538998715,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":30676,"user_name":"wtcctw","can_delete":false,"product_type":"c1","uid":1141208,"ip_address":"","ucode":"EECBBB9AC08CD9","user_header":"https://static001.geekbang.org/account/avatar/00/11/69/d8/112f69f8.jpg","comment_is_top":false,"comment_ctime":1538971223,"is_pvip":false,"replies":[{"id":"11063","content":"遇到问题能迅速定位到源码即可","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1538998768,"ip_address":"","comment_id":30676,"utype":1}],"discussion_count":7,"race_medal":0,"score":"53078578775","product_id":100015201,"comment_content":"张大大你好，<br>我之前自己玩过docker，在看这个专栏之前，特意简单过了一下《Docker容器与容器云 第二版》，之前一些章节看得非常过瘾，讲解得非常透彻。<br>但是看到StateFulSet的时候感觉有点晕。。。特别是里面的Pod YAML定义，感觉要记的东西非常多，学习曲线也比较陡峭，一段时间不用肯定就忘了。<br>所以想问一下，作为非专业的运维人员，对于k8s的掌握大致要到何种程度，多谢多谢。","like_count":12,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426066,"discussion_content":"遇到问题能迅速定位到源码即可","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538998768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2041199,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/25/6f/bbf7bded.jpg","nickname":"Andrew","note":"","ucode":"837D7A71307A49","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300550,"discussion_content":"定位到k8s源码？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1598167906,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1740409,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/8e/79/f9d5dd3a.jpg","nickname":"吕超","note":"","ucode":"B36883984BE16B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2041199,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/25/6f/bbf7bded.jpg","nickname":"Andrew","note":"","ucode":"837D7A71307A49","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":352559,"discussion_content":"应该是yaml的代码吧","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1614770586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":300550,"ip_address":""},"score":352559,"extra":""}]},{"author":{"id":2291160,"avatar":"https://static001.geekbang.org/account/avatar/00/22/f5/d8/121e4b68.jpg","nickname":"Woa 🤞","note":"","ucode":"6033F496082F3B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545952,"discussion_content":"有的时候是要定位到k8s源码的、尤其是文档没有讲、资料也没有、只能自己动手了😆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642089926,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1261493,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3f/b5/5fe77e16.jpg","nickname":"不经意间","note":"","ucode":"C39D98697ACB8B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533409,"discussion_content":"可能认为提问者是开发吧٩(๑•ㅂ•)۶","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637853141,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1201009,"avatar":"https://static001.geekbang.org/account/avatar/00/12/53/71/a4e9f20e.jpg","nickname":"言午木杉","note":"","ucode":"300BEDC1B07DF1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393171,"discussion_content":"定位到k8s的源码？？要这么硬核的吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631275967,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1970516,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLK4NPyaFDl4rzrd4A9z42tQDibFLdCicbrAdyUa5P2B5u8UCUBenpHX7VgUCibvHvhpza4icMBKVnhmA/132","nickname":"学无止境","note":"","ucode":"2C28E8E54DAB4E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389564,"discussion_content":"应该是定位到 yaml 即可， 不是K8S的源码    ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629340318,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44231,"user_name":"V V","can_delete":false,"product_type":"c1","uid":1220390,"ip_address":"","ucode":"9494330A6AA770","user_header":"https://static001.geekbang.org/account/avatar/00/12/9f/26/89eda2c8.jpg","comment_is_top":false,"comment_ctime":1543390616,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"35903128984","product_id":100015201,"comment_content":"这种部署方式，主节点pod挂了的时候，能自动重新创建一个出来吗？","like_count":8,"discussions":[{"author":{"id":1508329,"avatar":"https://static001.geekbang.org/account/avatar/00/17/03/e9/6358059c.jpg","nickname":"GalaxyCreater","note":"","ucode":"C79E8A088D57CF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572120,"discussion_content":"可以，但是服务会短时间不可用，此方式非高可用方案","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1652606734,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1261493,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3f/b5/5fe77e16.jpg","nickname":"不经意间","note":"","ucode":"C39D98697ACB8B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533411,"discussion_content":"它本身也是个控制循环","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637853243,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2041199,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/25/6f/bbf7bded.jpg","nickname":"Andrew","note":"","ucode":"837D7A71307A49","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300548,"discussion_content":"我也想知道","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598167851,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1715064,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/2b/78/97532f60.jpg","nickname":"","note":"","ucode":"FCC8B496F9A621","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2041199,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/25/6f/bbf7bded.jpg","nickname":"Andrew","note":"","ucode":"837D7A71307A49","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":308130,"discussion_content":"可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600851451,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":300548,"ip_address":""},"score":308130,"extra":""}]}]},{"had_liked":false,"id":30783,"user_name":"swordholder","can_delete":false,"product_type":"c1","uid":1002569,"ip_address":"","ucode":"3D1361126AD3CB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4c/49/d21c134f.jpg","comment_is_top":false,"comment_ctime":1538996771,"is_pvip":false,"replies":[{"id":"11059","content":"对，用rook的环境应该加上这个，我加一句注释上去。","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1538998515,"ip_address":"","comment_id":30783,"utype":1}],"discussion_count":4,"race_medal":0,"score":"35898735139","product_id":100015201,"comment_content":"总结里给的&#39;mysql-statefulset.yaml&#39;好像有点问题，在声明&#39;volumeClaimTemplates&#39;时，是不是应该通过&#39;storageClassName&#39;属性引用前面定义的&#39;StorageClass&#39;:<br><br>storageClassName: rook-ceph-block<br><br>我开始一直遇到&quot;pod has unbound immediate PersistentVolumeClaims&quot; 错误，增加了这个属性就好了。","like_count":8,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426096,"discussion_content":"对，用rook的环境应该加上这个，我加一句注释上去。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538998515,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1311001,"avatar":"https://static001.geekbang.org/account/avatar/00/14/01/19/f4da2829.jpg","nickname":"一秒","note":"","ucode":"F149B7F60620BD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":354960,"discussion_content":"git链接失效了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615368561,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1218347,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLvdWoCic6ItzibF8ia8vrUTRuyj6AT3tg5f4QicIK0jTIFheJ6274ZkibuRLFP1NXG3jibv5TiaSKNoJpLw/132","nickname":"Geek_37984c","note":"","ucode":"7A319AE28599B0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":158961,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580644566,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1448863,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/BIRpwViaN51yynIeFonD7QRlwDCVtKibrG956NTxzEqibOZZVjhMMgibOPmd3VicfYxpknZsic1oJq8KicZvXkmmiajuQg/132","nickname":"tuyu","note":"","ucode":"B235325B541408","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7550,"discussion_content":"请问一些加载哪个位置, 找不到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567562725,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54873,"user_name":"D","can_delete":false,"product_type":"c1","uid":1210514,"ip_address":"","ucode":"CCB5CADA48A734","user_header":"https://static001.geekbang.org/account/avatar/00/12/78/92/ae2c1b12.jpg","comment_is_top":false,"comment_ctime":1545974429,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31610745501","product_id":100015201,"comment_content":"这里创建MySQL的时候，由于设定了readnessProbe在启动后30秒执行，但是当你没办法在30秒之内启动成功过一会执行logs就会看到一个—init……的错误，这是因为容器检测到不可用就重新创建了一个新的，但是新的容器MySQL执行初始化的时候发现所在的数据目录(&#47;var&#47;lib&#47;MySQL)不为空，这时候只要响应的调高readnessProbe和livenessProbe的initialDelaySeconds值就好了","like_count":7},{"had_liked":false,"id":53949,"user_name":"xfan","can_delete":false,"product_type":"c1","uid":1315147,"ip_address":"","ucode":"48ED8D498D7F56","user_header":"https://static001.geekbang.org/account/avatar/00/14/11/4b/fa64f061.jpg","comment_is_top":false,"comment_ctime":1545779892,"is_pvip":false,"replies":[{"id":"19833","content":"所以才要讲operator的","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1545953794,"ip_address":"","comment_id":53949,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31610550964","product_id":100015201,"comment_content":"感觉实现起来很复杂，不优美","like_count":7,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434297,"discussion_content":"所以才要讲operator的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545953794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":324208,"user_name":"小水","can_delete":false,"product_type":"c1","uid":1104456,"ip_address":"","ucode":"808E8E28BA3827","user_header":"https://static001.geekbang.org/account/avatar/00/10/da/48/0d3cd6fa.jpg","comment_is_top":false,"comment_ctime":1638335702,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27408139478","product_id":100015201,"comment_content":"用了很大功夫，调通了老师的示例，代码都是照着老师代码敲的，也是不可以避免的有拼写的错误，通过不断的调试，在那成功的一瞬间，喜悦不可言语，老师的示例中使用国外的镜像，我是更换为国内的源，yaml如下链接，希望对后来的同学有所帮助<br>https:&#47;&#47;github.com&#47;Alexwalt&#47;kubernetes-yamls&#47;blob&#47;master&#47;mysql.yaml<br>调试工具<br>kubectl describe pod pod名<br>kubectl logs -p pod名 -c docker名","like_count":6},{"had_liked":false,"id":241484,"user_name":"正z","can_delete":false,"product_type":"c1","uid":2057031,"ip_address":"","ucode":"9220ECB4B0A2CC","user_header":"https://static001.geekbang.org/account/avatar/00/1f/63/47/e8164679.jpg","comment_is_top":false,"comment_ctime":1597307608,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27367111384","product_id":100015201,"comment_content":"mysql感觉有点复杂，自己试了下mongoDB，复杂度感觉低一点更容易成功，也同样能深刻理解上面的内容，伙计们也可以试试","like_count":6},{"had_liked":false,"id":154527,"user_name":"小刚","can_delete":false,"product_type":"c1","uid":1061898,"ip_address":"","ucode":"9CDB75A4083391","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIZtZz0LgYRdP1FKvmPfQUv7vQ04ibTvNTx3wcG0WEblMHQ8dORKqBeMlath93yO5a129tKhFPkA4w/132","comment_is_top":false,"comment_ctime":1574474688,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27344278464","product_id":100015201,"comment_content":"K8S 部署的Mysql集群，是否有HA的风险问题？ 考虑两种场景：<br>1 如果mysq-0 POD发生意外重启，无法再次调度成功（资源不足等情况），其他的节点POD无法切换微主用，集群整体就不可用了； <br>2 即使能再次调度成功，也依赖K8S集群的在异常情况下，重新调度一个POD时间； 比如节点下电后，K8S可能需要5分钟，才会在其他节点调度；<br>所以是否数据库等高可用性的应用，在生产环境，还是不要部署在K8S为妙？","like_count":7},{"had_liked":false,"id":44267,"user_name":"加菲老猫","can_delete":false,"product_type":"c1","uid":1316514,"ip_address":"","ucode":"65FE75E211BCD3","user_header":"https://static001.geekbang.org/account/avatar/00/14/16/a2/26ed8f44.jpg","comment_is_top":false,"comment_ctime":1543396580,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"27313200356","product_id":100015201,"comment_content":"老师方便提供一个官方的mysql-statefulset.yaml样本嘛，我storageClassName: rook-ceph-block参数怎么加都跑不出来，多谢多谢！","like_count":6,"discussions":[{"author":{"id":1217712,"avatar":"https://static001.geekbang.org/account/avatar/00/12/94/b0/b073fe8b.jpg","nickname":"aMaMiMoU","note":"","ucode":"AF1E6CA541E482","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374876,"discussion_content":"最新:      https://kubernetes.io/docs/tasks/run-application/run-replicated-stateful-application/","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621396388,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2441261,"avatar":"https://static001.geekbang.org/account/avatar/00/25/40/2d/9a766753.jpg","nickname":"郭贻铖","note":"","ucode":"B14B1DB14031F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351563,"discussion_content":"链接打不开","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614325389,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1102245,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d1/a5/2bbedc3b.jpg","nickname":"over","note":"","ucode":"FE272AC19842D3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":346348,"discussion_content":"文章里有链接","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611918257,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1311001,"avatar":"https://static001.geekbang.org/account/avatar/00/14/01/19/f4da2829.jpg","nickname":"一秒","note":"","ucode":"F149B7F60620BD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1102245,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d1/a5/2bbedc3b.jpg","nickname":"over","note":"","ucode":"FE272AC19842D3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":354961,"discussion_content":"文章里的链接失效了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615368714,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":346348,"ip_address":""},"score":354961,"extra":""}]}]},{"had_liked":false,"id":288450,"user_name":"jesse","can_delete":false,"product_type":"c1","uid":1254691,"ip_address":"","ucode":"8A72075A22D973","user_header":"https://static001.geekbang.org/account/avatar/00/13/25/23/06a37753.jpg","comment_is_top":false,"comment_ctime":1618473744,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18798342928","product_id":100015201,"comment_content":"哈哈，看着大佬的这篇文章，跟着搭建了redis的主备集群，比mysql简洁的多","like_count":4},{"had_liked":false,"id":48732,"user_name":"eden","can_delete":false,"product_type":"c1","uid":1220656,"ip_address":"","ucode":"8A5620A5C4BDB8","user_header":"https://static001.geekbang.org/account/avatar/00/12/a0/30/5a7247eb.jpg","comment_is_top":false,"comment_ctime":1544525329,"is_pvip":false,"replies":[{"id":"17498","content":"需要存储插件支持","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1544533156,"ip_address":"","comment_id":48732,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18724394513","product_id":100015201,"comment_content":"老师，请问mysql persistent volume需要扩容怎么做？通过kubectl scale不能修改volume大小。","like_count":4,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432332,"discussion_content":"需要存储插件支持","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544533156,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":31636,"user_name":"侯操宇","can_delete":false,"product_type":"c1","uid":1117242,"ip_address":"","ucode":"741E0DC3B8EB55","user_header":"https://static001.geekbang.org/account/avatar/00/11/0c/3a/d2161d37.jpg","comment_is_top":false,"comment_ctime":1539250473,"is_pvip":false,"replies":[{"id":"11392","content":"两个statefulset 肯定需要你在外部控制了","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1539257003,"ip_address":"","comment_id":31636,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18719119657","product_id":100015201,"comment_content":"如果master和slave用两个StatefulSet的话，怎么来保证master和slave的启动顺序呢？","like_count":4,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426441,"discussion_content":"两个statefulset 肯定需要你在外部控制了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539257003,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1217712,"avatar":"https://static001.geekbang.org/account/avatar/00/12/94/b0/b073fe8b.jpg","nickname":"aMaMiMoU","note":"","ucode":"AF1E6CA541E482","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319408,"discussion_content":"是不是可以在slave的statefullset的initcontainer里做前置检查","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604023970,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":30772,"user_name":"Caesar","can_delete":false,"product_type":"c1","uid":1253220,"ip_address":"","ucode":"0319C9E19387CD","user_header":"https://static001.geekbang.org/account/avatar/00/13/1f/64/54458855.jpg","comment_is_top":false,"comment_ctime":1538994545,"is_pvip":true,"replies":[{"id":"11060","content":"kata可不是虚拟机加容器，kata是用虚拟化实现的容器","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1538998637,"ip_address":"","comment_id":30772,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18718863729","product_id":100015201,"comment_content":"前面看大神说在搞kata-container，我有一个疑问，kata-container其实也是虚拟机加容器的方式，那它和docker加虚拟机的优势相比在哪呢","like_count":4,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426089,"discussion_content":"kata可不是虚拟机加容器，kata是用虚拟化实现的容器","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538998637,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1311001,"avatar":"https://static001.geekbang.org/account/avatar/00/14/01/19/f4da2829.jpg","nickname":"一秒","note":"","ucode":"F149B7F60620BD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":354963,"discussion_content":"kata 跟kubevirt比哪个好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615369032,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":246739,"user_name":"ch_ort","can_delete":false,"product_type":"c1","uid":1580926,"ip_address":"","ucode":"B79746E687F29E","user_header":"","comment_is_top":false,"comment_ctime":1599468741,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14484370629","product_id":100015201,"comment_content":"<br>Deployment无法应对实例之间有依赖关系的场景，因此出现了StatefulSet，来支持“有状态应用”。StatefulSet将状态抽象为了两种情况：（1）拓扑状态 （2）存储状态。<br><br>拓扑状态的稳定性如何保持？StatefulSet给Pod固定名字，然后通过Headless Service赋予了Pod唯一的“网络身份”，使用这个网络身份通过Pod的名字即可访问到对应的Pod。<br><br>存储状态如何管理？ 通过固定名字的PVC， 当Pod异常后。会重新绑定这个固定名字的PVC来保持存储状态。比如web-0删除之后，这个Pod对应的PVC和PV，并不会被删除，因此数据也依然保存在远程存储服务里。<br>","like_count":3},{"had_liked":false,"id":100485,"user_name":"彰玉","can_delete":false,"product_type":"c1","uid":1225932,"ip_address":"","ucode":"E35220D59D9B27","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/IyrKOr1vBfpdjgKEqRTOMpiciaMZtlVv6WLFt4lENZRtibt0O9EaOuI1DGIyfeiazD8x8Z1hgicVHZhOxIhez6pkQIw/132","comment_is_top":false,"comment_ctime":1559564160,"is_pvip":false,"replies":[{"id":"36290","content":"按yaml启动","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1559618482,"ip_address":"","comment_id":100485,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14444466048","product_id":100015201,"comment_content":"集群建好了  数据也插入成功了  集群也正常后  主从节点的任何节点重启 是重新按yamL启动 还是直接挂数据盘启幼","like_count":3,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452570,"discussion_content":"按yaml启动","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559618482,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":85638,"user_name":"强者之风","can_delete":false,"product_type":"c1","uid":1500643,"ip_address":"","ucode":"E7608F908B87E1","user_header":"https://static001.geekbang.org/account/avatar/00/16/e5/e3/06aa87b5.jpg","comment_is_top":false,"comment_ctime":1555152446,"is_pvip":false,"replies":[{"id":"31573","content":"而通过连接 mysql-read 这个 Service，我们就可以用 SQL 进行读操作，如下所示：","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1555695747,"ip_address":"","comment_id":85638,"utype":1}],"discussion_count":3,"race_medal":0,"score":"14440054334","product_id":100015201,"comment_content":"看不出来用MySQL-read  service","like_count":3,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446746,"discussion_content":"而通过连接 mysql-read 这个 Service，我们就可以用 SQL 进行读操作，如下所示：","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555695747,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1675662,"avatar":"https://static001.geekbang.org/account/avatar/00/19/91/8e/0c834bc3.jpg","nickname":"豆豆糖","note":"","ucode":"69208BE7771A65","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373778,"discussion_content":"这个我也研究了一下，如果您是不知道哪里使用了mysql-read那我尝试表达下我的理解。\n1.实际上statefulset和service的对应关系不是通过ServiceName字段来对应的，而是通过label来对应的。所以statefulset拉起来的pod会映射出来两个service，一个是mysql，一个是mysql-read。\n2.如果是写操作，就会直接访问mysql-0，这是headless service。而对于读操作，其实不管访问mysql的master还是replica其实都是一样的。所以实际的应用中我们是通过mysql-read这个service，来访问statefulset拉起来的任意一个pod都可以。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620871826,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1330141,"avatar":"https://static001.geekbang.org/account/avatar/00/14/4b/dd/41614582.jpg","nickname":"HomeyLiu","note":"","ucode":"EF4CCB92C369B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7038,"discussion_content":"啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567310224,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":32357,"user_name":"Joe Black","can_delete":false,"product_type":"c1","uid":1052528,"ip_address":"","ucode":"21FE222A286445","user_header":"https://static001.geekbang.org/account/avatar/00/10/0f/70/c8680841.jpg","comment_is_top":false,"comment_ctime":1539559496,"is_pvip":false,"replies":[{"id":"11810","content":"这个事儿自动化能不能做？","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1539571122,"ip_address":"","comment_id":32357,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14424461384","product_id":100015201,"comment_content":"其实给slave节点增加一个新的标签，创建读Service的时候选择这个标签的容器就行了吧？","like_count":3,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426738,"discussion_content":"这个事儿自动化能不能做？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539571122,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":214026,"user_name":"张三","can_delete":false,"product_type":"c1","uid":1004092,"ip_address":"","ucode":"1155528FAE1546","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/3c/d6fcb93a.jpg","comment_is_top":false,"comment_ctime":1588638431,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10178573023","product_id":100015201,"comment_content":"之前一直以为sidecar必须是initContainer类型的，看这里是在spec.template.container下面，和mysql容器同级的，它的作用是在slave启动之前做初始化操作，可是这种启动先后的顺序是怎么来定义的，如何确定是先执行了初始化操作然后才启动slave的呢？","like_count":2,"discussions":[{"author":{"id":1217712,"avatar":"https://static001.geekbang.org/account/avatar/00/12/94/b0/b073fe8b.jpg","nickname":"aMaMiMoU","note":"","ucode":"AF1E6CA541E482","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319422,"discussion_content":"有个until用来做前置检查，确保主容器运行之后才会让sidecar正常运行","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1604026615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1254691,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/23/06a37753.jpg","nickname":"jesse","note":"","ucode":"8A72075A22D973","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370985,"discussion_content":"initContainer容器必须执行完后才会执行主容器，而sidecar有个监听端口的功能，所以是个常驻进程，必须不能用initContainer，不然后面容器别想执行了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1619600739,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169163,"user_name":"YangFan","can_delete":false,"product_type":"c1","uid":1015850,"ip_address":"","ucode":"52FD97208DFCD5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/80/2a/98e659ca.jpg","comment_is_top":false,"comment_ctime":1578282036,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"10168216628","product_id":100015201,"comment_content":"现在存储部分是依赖了ceph的分布式文件系统能力，如果我只想用本地盘搭建mysql cluster呢？","like_count":2,"discussions":[{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":182472,"discussion_content":"同问,折腾了一天,硬是没法让 volumeClaimTemplates 从本地盘分配pvc.","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1582428273,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2117362,"avatar":"https://static001.geekbang.org/account/avatar/00/20/4e/f2/a3314a28.jpg","nickname":"鹤无双","note":"","ucode":"785B47B34FFBDC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":356137,"discussion_content":"apiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: mysql-db0\n  labels:\n    type: local\nspec:\n  volumeMode: Filesystem\n  accessModes:\n  - ReadWriteMany\n  - ReadWriteOnce\n  capacity:\n    storage: 10Gi\n  persistentVolumeReclaimPolicy: Recycle\n  hostPath:\n    path: /data/mysql-db","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615538423,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2117362,"avatar":"https://static001.geekbang.org/account/avatar/00/20/4e/f2/a3314a28.jpg","nickname":"鹤无双","note":"","ucode":"785B47B34FFBDC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":356136,"discussion_content":"你写一个 pv","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615538410,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149057,"user_name":"jack motor","can_delete":false,"product_type":"c1","uid":1248286,"ip_address":"","ucode":"158814F7DBBDC5","user_header":"https://static001.geekbang.org/account/avatar/00/13/0c/1e/74d65100.jpg","comment_is_top":false,"comment_ctime":1573132101,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10163066693","product_id":100015201,"comment_content":"我用的是Google GKE k8s1.13，我测试发现stateful set仍然是通过rs管理pod，但是您这里提到stateful set直接控制pod，为何？","like_count":2},{"had_liked":false,"id":32737,"user_name":"Alery","can_delete":false,"product_type":"c1","uid":1156557,"ip_address":"","ucode":"08F3F49181E67B","user_header":"https://static001.geekbang.org/account/avatar/00/11/a5/cd/3aff5d57.jpg","comment_is_top":false,"comment_ctime":1539683625,"is_pvip":false,"replies":[{"id":"11928","content":"有影响啊。文中不是讲到了sidecar要检查mysql的启动情况么？","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1539691820,"ip_address":"","comment_id":32737,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10129618217","product_id":100015201,"comment_content":"前辈你好，这里有个mysql数据库的疑问，既然xtrabackup与mysql这两个容器的启动顺序不一致会不会对mysql的数据产生影响？如果mysql先起来了，再恢复备份数据，mysql需要重启生效吗？","like_count":2,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426878,"discussion_content":"有影响啊。文中不是讲到了sidecar要检查mysql的启动情况么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539691820,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":31054,"user_name":"千寻","can_delete":false,"product_type":"c1","uid":1058635,"ip_address":"","ucode":"44A559E38819C0","user_header":"https://static001.geekbang.org/account/avatar/00/10/27/4b/170654bb.jpg","comment_is_top":false,"comment_ctime":1539076801,"is_pvip":false,"replies":[{"id":"11214","content":"node数太少不够启动存储节点了","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1539130997,"ip_address":"","comment_id":31054,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10129011393","product_id":100015201,"comment_content":"集群只有一个节点，ceph storageclass哪里replica设置为3，启动时一直处于pending，enent提示pod has unbound persistentvolumeclaims，将replica设置为1就没有问题，问一下这个大概是什么回事？<br>谢谢老师","like_count":2,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426204,"discussion_content":"node数太少不够启动存储节点了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539130997,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":299436,"user_name":"Geek_7a5c6a","can_delete":false,"product_type":"c1","uid":2560280,"ip_address":"","ucode":"B5F795D9CFFFED","user_header":"","comment_is_top":false,"comment_ctime":1624626076,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5919593372","product_id":100015201,"comment_content":"2021.06.25<br>rook现在默认不开启flex了。所以使用文中的配置安装时operator.yaml不改参数的话，会一直Pending。<br><br>可用的rook-storage.yaml<br>```yaml<br>apiVersion: ceph.rook.io&#47;v1<br>kind: CephBlockPool<br>metadata:<br>  name: replicapool<br>  namespace: rook-ceph<br>spec:<br>  failureDomain: host<br>  replicated:<br>    size: 3<br>---<br>apiVersion: storage.k8s.io&#47;v1<br>kind: StorageClass<br>metadata:<br>   name: rook-ceph-block<br>provisioner: rook-ceph.rbd.csi.ceph.com<br>parameters:<br>    clusterID: rook-ceph<br>    pool: replicapool<br><br><br>    imageFormat: &quot;2&quot;<br><br>    imageFeatures: layering<br><br>    csi.storage.k8s.io&#47;provisioner-secret-name: rook-csi-rbd-provisioner<br>    csi.storage.k8s.io&#47;provisioner-secret-namespace: rook-ceph<br>    csi.storage.k8s.io&#47;controller-expand-secret-name: rook-csi-rbd-provisioner<br>    csi.storage.k8s.io&#47;controller-expand-secret-namespace: rook-ceph<br>    csi.storage.k8s.io&#47;node-stage-secret-name: rook-csi-rbd-node<br>    csi.storage.k8s.io&#47;node-stage-secret-namespace: rook-ceph<br><br>    csi.storage.k8s.io&#47;fstype: ext4<br>reclaimPolicy: Delete<br>```<br><br>实验步骤：<br>0. 创建Rook StorageClass<br>kubectl create -f rook-storage.yaml<br>1. 创建configMap，注意cnf名称是否和官网示例相同<br>kubectl create -f 01-mysql-configmap.yaml  <br>2. 创建services<br>kubectl create -f 02-mysql-services.yaml  <br>3. 创建mysql statefulset<br>kubectl create -f 03-mysql-statefulset.yaml","like_count":1},{"had_liked":false,"id":294487,"user_name":"西门阿尔法","can_delete":false,"product_type":"c1","uid":2401305,"ip_address":"","ucode":"C7FDFCBC8583CB","user_header":"https://static001.geekbang.org/account/avatar/00/24/a4/19/3c10b632.jpg","comment_is_top":false,"comment_ctime":1621959150,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5916926446","product_id":100015201,"comment_content":"神乎其技！<br>一直在纠结如何在k8s中自动化的部署这种分布式的服务，看完这篇，意识到还是功力不足2333<br>一个statefulset虽然有点复杂，但是非常巧妙，完美主义者表示太过爽快！","like_count":1},{"had_liked":false,"id":229562,"user_name":"Spring.Fred","can_delete":false,"product_type":"c1","uid":1055148,"ip_address":"","ucode":"66C84150ACC304","user_header":"https://static001.geekbang.org/account/avatar/00/10/19/ac/32da70c9.jpg","comment_is_top":false,"comment_ctime":1593058410,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5888025706","product_id":100015201,"comment_content":"持久化这块有点疑问， 假设statefulset的副本数为3， 创建了4个PV: mysql-pv0, mysql-pv1,mysql-2pv,mysql-pv3,mysql-pv4<br>1. 处理选择PV的时候， 不一定是按选择mysql-pv0, mysql-pv1,mysql-pv2， 也可能是mysql-pv1,mysql-pv2,mysql-pv3,mysql-pv4。这个怎么限定mysql-0选择mysql-pv0， mysql-1选择mysql-pv1？<br>2.如果不能限定， 在pod重启的时候， mysql-0有没有可能选择mysql-pv1？或者选择到从未使用的mysql-pv4？这样的话， 是不是有问题？","like_count":1,"discussions":[{"author":{"id":1227840,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/40/2279cfb5.jpg","nickname":"大力水手Jerry","note":"","ucode":"E4A6C71E275DB5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297436,"discussion_content":"pvc是随statefulSet创建并和pv绑定的，statefulSet内部pod和pvc的关系也是确定的。所以无论pod如何重启，只要statefulSet的定义保持不变，pod和pv的关系就始终是确定的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1596938220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2057031,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/63/47/e8164679.jpg","nickname":"正z","note":"","ucode":"9220ECB4B0A2CC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298479,"discussion_content":"在定义pvc时候根本没有和pv有任何指定的联系，都是pvc自己去找合适的pv进行bound。pod和pv的关系通过pvc bound pv时候就确定了，只要不删除pvc，这种映射关系应该是一直存在的，无关pod的删除。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597307477,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":35221,"user_name":"killua","can_delete":false,"product_type":"c1","uid":1005951,"ip_address":"","ucode":"3108F880E48D3B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/7f/1c505317.jpg","comment_is_top":false,"comment_ctime":1540466108,"is_pvip":false,"replies":[{"id":"12565","content":"只有主节点才需要啊，从节点有read service啊。这不为了主从分离","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1540481065,"ip_address":"","comment_id":35221,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5835433404","product_id":100015201,"comment_content":"“k8s 内部应用访问数据库 要通过 mysql-id的方式 这种对于应用代码是不是不太好 k8s里可以屏蔽id吗？”<br>意思是应用写地址的时候要写成 mysql-0 mysql-1 mysql-2 这种 入口没有统一，其次应用可能并不知道 mysql个数？","like_count":1,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427480,"discussion_content":"只有主节点才需要啊，从节点有read service啊。这不为了主从分离","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540481065,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":30588,"user_name":"李博越","can_delete":false,"product_type":"c1","uid":1027808,"ip_address":"","ucode":"E6CDA0CDC0BCE6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ae/e0/3e636955.jpg","comment_is_top":false,"comment_ctime":1538957083,"is_pvip":false,"replies":[{"id":"11043","content":"可以的，估计还是那啥的问题吧","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1538967797,"ip_address":"","comment_id":30588,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5833924379","product_id":100015201,"comment_content":"Mac上用minikube是不是玩不起来啊？感觉搭建环境好多的坑","like_count":1,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426041,"discussion_content":"可以的，估计还是那啥的问题吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538967797,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2291160,"avatar":"https://static001.geekbang.org/account/avatar/00/22/f5/d8/121e4b68.jpg","nickname":"Woa 🤞","note":"","ucode":"6033F496082F3B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545954,"discussion_content":"静香辣不下来的😅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642090116,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":358778,"user_name":"NullPointer","can_delete":false,"product_type":"c1","uid":1179184,"ip_address":"广东","ucode":"83B7DA926A0411","user_header":"https://static001.geekbang.org/account/avatar/00/11/fe/30/c9b568c3.jpg","comment_is_top":false,"comment_ctime":1664759189,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1664759189","product_id":100015201,"comment_content":"有点复杂， 我们实际的情况数据库还是用虚拟机或物理机。没有云化， 只有应用上云了","like_count":0},{"had_liked":false,"id":358676,"user_name":"陈麒文","can_delete":false,"product_type":"c1","uid":2187256,"ip_address":"福建","ucode":"41475885FA5AD5","user_header":"https://static001.geekbang.org/account/avatar/00/21/5f/f8/1d16434b.jpg","comment_is_top":false,"comment_ctime":1664529950,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1664529950","product_id":100015201,"comment_content":"信息量太大，容我冷静🥶","like_count":0},{"had_liked":false,"id":349394,"user_name":"知行合一","can_delete":false,"product_type":"c1","uid":1521486,"ip_address":"","ucode":"2B8E634FC4CFB7","user_header":"https://static001.geekbang.org/account/avatar/00/17/37/4e/5c3153b2.jpg","comment_is_top":false,"comment_ctime":1655945769,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655945769","product_id":100015201,"comment_content":"数据存在远程服务器是指哪里？当前容器所在的宿主机吗？还是后面同样是一个分布式文件服务，不了解rook","like_count":0},{"had_liked":false,"id":349140,"user_name":"董永刚","can_delete":false,"product_type":"c1","uid":1169147,"ip_address":"","ucode":"ADA792B226A6CD","user_header":"https://static001.geekbang.org/account/avatar/00/11/d6/fb/837af7bf.jpg","comment_is_top":false,"comment_ctime":1655771145,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655771145","product_id":100015201,"comment_content":"这样部署起来后，如何将数据库服务暴露出来呢？比如部署到了阿里云上面","like_count":0},{"had_liked":false,"id":329440,"user_name":"努力做好技术","can_delete":false,"product_type":"c1","uid":2863979,"ip_address":"","ucode":"F4F32F235CF0A7","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/FvADgWRdOA1U1KciauXHLiaEn74B007ObTKwAJZIroEiauacJlKb3xhrMPvUyJ7moZ40YqKG4pd2jHejMsIQ83QSQ/132","comment_is_top":false,"comment_ctime":1641351247,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1641351247","product_id":100015201,"comment_content":"本人初出茅庐，问个小白问题，第一个service为Headless Service，第二个service是如何让用户的读请求，都必须访问第二个 Service 被自动分配的 DNS 记录","like_count":0},{"had_liked":false,"id":324206,"user_name":"小水","can_delete":false,"product_type":"c1","uid":1104456,"ip_address":"","ucode":"808E8E28BA3827","user_header":"https://static001.geekbang.org/account/avatar/00/10/da/48/0d3cd6fa.jpg","comment_is_top":false,"comment_ctime":1638335326,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638335326","product_id":100015201,"comment_content":"https:&#47;&#47;github.com&#47;Alexwalt&#47;kubernetes-yamls&#47;blob&#47;master&#47;mysql.yaml","like_count":0},{"had_liked":false,"id":324205,"user_name":"小水","can_delete":false,"product_type":"c1","uid":1104456,"ip_address":"","ucode":"808E8E28BA3827","user_header":"https://static001.geekbang.org/account/avatar/00/10/da/48/0d3cd6fa.jpg","comment_is_top":false,"comment_ctime":1638335308,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638335308","product_id":100015201,"comment_content":"根据课程，总算跑通代码","like_count":0},{"had_liked":false,"id":315260,"user_name":"陈斯佳","can_delete":false,"product_type":"c1","uid":1259323,"ip_address":"","ucode":"C236F874FC767A","user_header":"https://static001.geekbang.org/account/avatar/00/13/37/3b/495e2ce6.jpg","comment_is_top":false,"comment_ctime":1633771981,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633771981","product_id":100015201,"comment_content":"第二十课:深入理解StatefulSet（三）:有状态应用实践<br>在做有状态应用实践中，有几个坑要小心<br><br>1.“人格分裂”：在解决需求中，一定要“人格分裂”的思考Pod在扮演不同角色时的不同操作。或者干脆就写两个yaml文件，一个主，一个从<br>2.“阅后即焚”：要考虑容器重启的情况，不要让重启影响了下一次重启<br>3.“容器之间平等无序”：除非是initContainer，否则容器之间平等无序","like_count":0},{"had_liked":false,"id":309910,"user_name":"达叔灬","can_delete":false,"product_type":"c1","uid":2404887,"ip_address":"","ucode":"5CCBAF13548F02","user_header":"https://static001.geekbang.org/account/avatar/00/24/b2/17/3161b49c.jpg","comment_is_top":false,"comment_ctime":1630392218,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630392218","product_id":100015201,"comment_content":"总结下：内容太多，需要多刷。","like_count":0},{"had_liked":false,"id":307796,"user_name":"lai～～～","can_delete":false,"product_type":"c1","uid":1940339,"ip_address":"","ucode":"9288E0A6E1FDBD","user_header":"https://static001.geekbang.org/account/avatar/00/1d/9b/73/46f65f57.jpg","comment_is_top":false,"comment_ctime":1629259240,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629259240","product_id":100015201,"comment_content":"大佬，有个问题想问下，假如我使用statefulset pod 有了编号后，我怎么做到把请求制定规则（比如一致性哈希），然后分配给指定的pod","like_count":0},{"had_liked":false,"id":305360,"user_name":"南琛一梦","can_delete":false,"product_type":"c1","uid":1030082,"ip_address":"","ucode":"6338D5428DB2B0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b7/c2/196932c7.jpg","comment_is_top":false,"comment_ctime":1627918836,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627918836","product_id":100015201,"comment_content":"内容太多了。。。得消化消化","like_count":0},{"had_liked":false,"id":298800,"user_name":"青苹果","can_delete":false,"product_type":"c1","uid":2057451,"ip_address":"","ucode":"D85EE1743F9CC5","user_header":"https://static001.geekbang.org/account/avatar/00/1f/64/eb/732e9707.jpg","comment_is_top":false,"comment_ctime":1624329279,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1624329279","product_id":100015201,"comment_content":"前半部分还能跟上，后半部分就一脸懵逼了…… 不知道自己缺在哪里……","like_count":0},{"had_liked":false,"id":296392,"user_name":"小江哥哥","can_delete":false,"product_type":"c1","uid":1044266,"ip_address":"","ucode":"E5B3725FC9E366","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ef/2a/e9c5c163.jpg","comment_is_top":false,"comment_ctime":1622950924,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622950924","product_id":100015201,"comment_content":"关于思考题，要实现读写分离，从mysql的层面要能提供并区分主库与从库的访问方式，从程序的角度要能分别本次对数据库的操作是读还是写。<br>从数据库提供主从不同的访问方式可以有三种结局方案<br>第一种可以考虑用定义两个statefulset的方式把master和slave分开，svc层面自然就可以分开访问了。第二种可以考虑通过headless区分主从的访问方式。<br>第三种用oprate的方式<br>从程序角度区分对数据库的读写可以考虑对jdbc增强，比如Apache ShardingSphere","like_count":0},{"had_liked":false,"id":290539,"user_name":"钱波","can_delete":false,"product_type":"c1","uid":1958295,"ip_address":"","ucode":"F8FAECCE410B23","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJiaeTzf4V8ib490WBo9AztRXE6ZM15zmFaOZtViabjleATARIpMe4Diaeia5mhGQibNAicAWH3iclCmweDicQ/132","comment_is_top":false,"comment_ctime":1619605054,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619605054","product_id":100015201,"comment_content":"请教张老师：主备配置文件在initContainers的路径是&#47;mnt&#47;conf.d&#47;master.cnf 而实际Containers路径是在&#47;etc&#47;mysql&#47;conf.d，配置文件是内容是怎么过去的呢？","like_count":0},{"had_liked":false,"id":287666,"user_name":"ANUBIS","can_delete":false,"product_type":"c1","uid":1802320,"ip_address":"","ucode":"86EDF421192D9F","user_header":"https://static001.geekbang.org/account/avatar/00/1b/80/50/6b6e0f72.jpg","comment_is_top":false,"comment_ctime":1618085966,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618085966","product_id":100015201,"comment_content":"CephBlockPool和StorageClass都成功创建了，但是执行statefulset的脚本，pvc创建卡在这里<br>persistentvolume-controller  waiting for a volume to be created, either by external provisioner &quot;ceph.rook.io&#47;block&quot; or manually created by system administrator<br>看样子没有自动创建出PV，求解～～～～～～～～～～～～～","like_count":0},{"had_liked":false,"id":287145,"user_name":"noisyes","can_delete":false,"product_type":"c1","uid":2538540,"ip_address":"","ucode":"94EC310B284AD2","user_header":"https://static001.geekbang.org/account/avatar/00/26/bc/2c/963688bb.jpg","comment_is_top":false,"comment_ctime":1617794196,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617794196","product_id":100015201,"comment_content":"看了下具体实现，下次重启集群，master节点是不是也会执行start slave指令，毕竟会有xtrabackup_binlog_info文件（volume持久化数据），就一定会生成change_master_to.sql.in，然后就会执行start slave。","like_count":0},{"had_liked":false,"id":286551,"user_name":"jiapeish","can_delete":false,"product_type":"c1","uid":1128561,"ip_address":"","ucode":"833983A5F074DF","user_header":"https://static001.geekbang.org/account/avatar/00/11/38/71/65f84229.jpg","comment_is_top":false,"comment_ctime":1617371001,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617371001","product_id":100015201,"comment_content":"老师，为什么说容器是一个单进程模型？我记得之前公司里的业务模型，每个容器里有2个进程，多的有4个进程，好像也运行的挺好的","like_count":0},{"had_liked":false,"id":285719,"user_name":"Geek_f830f4","can_delete":false,"product_type":"c1","uid":2353215,"ip_address":"","ucode":"BB64CC824ADEC5","user_header":"","comment_is_top":false,"comment_ctime":1616989187,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616989187","product_id":100015201,"comment_content":"我采用rook-ceph v1.5 的cluster-test.yaml部署单节点模式, , 在k8s1.13及更高版本中rook-ceph采用CSI RBD驱动，在k8s 1.12及更早版本采用Flex 驱动，参考链接为: https:&#47;&#47;rook.io&#47;docs&#47;rook&#47;v1.5&#47;ceph-block.html<br>[root@centos7 mysql_cluster]# cat rook-storage.yaml <br>apiVersion: ceph.rook.io&#47;v1<br>kind: CephBlockPool <br>metadata:<br>  name: replicapool<br>  namespace: rook-ceph<br>spec:<br>  failureDomain: host<br>  replicated:<br>    size: 1<br>---<br>apiVersion: storage.k8s.io&#47;v1<br>kind: StorageClass<br>metadata:<br>  name: rook-ceph-block<br>provisioner: rook-ceph.rbd.csi.ceph.com <br>allowVolumeExpansion: true<br>parameters:<br>  clusterID: rook-ceph<br>  pool: replicapool<br> # secret ，否则会报错 provided secret is empty<br>  csi.storage.k8s.io&#47;provisioner-secret-name: rook-csi-rbd-provisioner<br>  csi.storage.k8s.io&#47;provisioner-secret-namespace: rook-ceph # namespace:cluster<br>  csi.storage.k8s.io&#47;controller-expand-secret-name: rook-csi-rbd-provisioner<br>  csi.storage.k8s.io&#47;controller-expand-secret-namespace: rook-ceph # namespace:cluster<br>  csi.storage.k8s.io&#47;node-stage-secret-name: rook-csi-rbd-node<br>  csi.storage.k8s.io&#47;node-stage-secret-namespace: rook-ceph # namespace:cluster<br>  csi.storage.k8s.io&#47;fstype: ext4<br><br># pvc-test文件<br>apiVersion: v1<br>kind: PersistentVolumeClaim<br>metadata:<br>  name: test<br>spec:<br>  accessModes:<br>  - ReadWriteOnce<br>  resources:<br>    requests:<br>      storage: 3Gi<br>  storageClassName: rook-ceph-block","like_count":0},{"had_liked":false,"id":282978,"user_name":"郭贻铖","can_delete":false,"product_type":"c1","uid":2441261,"ip_address":"","ucode":"B14B1DB14031F2","user_header":"https://static001.geekbang.org/account/avatar/00/25/40/2d/9a766753.jpg","comment_is_top":false,"comment_ctime":1615506769,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1615506769","product_id":100015201,"comment_content":"[root]@[k8s-master]: -&gt; mysqlkubectl logs pod&#47;mysql-1 clone-mysql -n default    <br>+ [[ -d &#47;var&#47;lib&#47;mysql&#47;mysql ]]<br>++ hostname<br>+ [[ mysql-1 =~ -([0-9]+)$ ]]<br>+ ordinal=1<br>+ [[ 1 == 0 ]]<br>+ xbstream -x -C &#47;var&#47;lib&#47;mysql<br>+ ncat --recv-only mysql-0.mysql 3307<br>Ncat: Could not resolve hostname &quot;mysql-0.mysql&quot;: Name or service not known. QUITTING.<br>+ xtrabackup --prepare --target-dir=&#47;var&#47;lib&#47;mysql<br>xtrabackup version 2.4.4 based on MySQL server 5.7.13 Linux (x86_64) (revision id: df58cf2)<br>xtrabackup: cd to &#47;var&#47;lib&#47;mysql<br>xtrabackup: Error: cannot open .&#47;xtrabackup_checkpoints<br>xtrabackup: error: xtrabackup_read_metadata()<br>xtrabackup: This target seems not to have correct metadata...<br>InnoDB: Number of pools: 1<br>InnoDB: Operating system error number 2 in a file operation.<br>InnoDB: The error means the system cannot find the path specified.<br>xtrabackup: Warning: cannot open .&#47;xtrabackup_logfile. will try to find.<br>InnoDB: Operating system error number 2 in a file operation.<br>InnoDB: The error means the system cannot find the path specified.<br>  xtrabackup: Fatal error: cannot find .&#47;xtrabackup_logfile.<br>xtrabackup: Error: xtrabackup_init_temp_log() failed.<br><br><br><br>[root]@[k8s-master]: -&gt; mysql#kubectl logs pod&#47;mysql-0 clone-mysql -n default <br>+ [[ -d &#47;var&#47;lib&#47;mysql&#47;mysql ]]<br>++ hostname<br>+ [[ mysql-0 =~ -([0-9]+)$ ]]<br>+ ordinal=0<br>+ [[ 0 == 0 ]]<br>+ exit 0<br>[root]@[k8s-master]: -&gt; mysql#  出现这个怎么解决？mysql-1第二个 pod启动logs里面","like_count":0,"discussions":[{"author":{"id":2643364,"avatar":"https://static001.geekbang.org/account/avatar/00/28/55/a4/82ad7618.jpg","nickname":"左手边的期待","note":"","ucode":"F2BE238E518000","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555613,"discussion_content":"你好，请问这个问题解决了吗?同样的问题，网上有说是镜像的问题，不清楚。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646991508,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2372775,"avatar":"","nickname":"子春茂明","note":"","ucode":"0DF01F84F6CD0C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538283,"discussion_content":"找不到服务，你要先创建service才行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639395169,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":282815,"user_name":"一秒","can_delete":false,"product_type":"c1","uid":1311001,"ip_address":"","ucode":"F149B7F60620BD","user_header":"https://static001.geekbang.org/account/avatar/00/14/01/19/f4da2829.jpg","comment_is_top":false,"comment_ctime":1615427917,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1615427917","product_id":100015201,"comment_content":"yaml文件链接失效了","like_count":0,"discussions":[{"author":{"id":1442097,"avatar":"https://static001.geekbang.org/account/avatar/00/16/01/31/4d116521.jpg","nickname":"鹏鹏哥","note":"","ucode":"28452AB202EA9A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370542,"discussion_content":"顶一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619446958,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":278956,"user_name":"Scott","can_delete":false,"product_type":"c1","uid":1149152,"ip_address":"","ucode":"8736333CBF3F0E","user_header":"https://static001.geekbang.org/account/avatar/00/11/88/e0/576c9598.jpg","comment_is_top":false,"comment_ctime":1613482974,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1613482974","product_id":100015201,"comment_content":"张老师啥时回来一波训练营课程，期待！","like_count":0},{"had_liked":false,"id":274906,"user_name":"Jay66","can_delete":false,"product_type":"c1","uid":2398816,"ip_address":"","ucode":"0461952B6DD4F1","user_header":"https://static001.geekbang.org/account/avatar/00/24/9a/60/4af14727.jpg","comment_is_top":false,"comment_ctime":1611215602,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611215602","product_id":100015201,"comment_content":"求问下：一个pod中应用程序和sidecard之间，启动顺序是不是不能保证的？如果先执行应用程序的话，那么本次启动就会失败，StatefulSet会再次重启，此时restart会+1么？","like_count":0},{"had_liked":false,"id":247689,"user_name":"Heaven","can_delete":false,"product_type":"c1","uid":1694207,"ip_address":"","ucode":"FA33FBCC66C911","user_header":"https://static001.geekbang.org/account/avatar/00/19/d9/ff/b23018a6.jpg","comment_is_top":false,"comment_ctime":1599794512,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1599794512","product_id":100015201,"comment_content":"对于课后问题来说,我们可以利用重新划分Service的方式来实现<br>给主节点划分一个mysql-master的service来保证绑定每次访问指访问主节点<br>将mysql-read改为绑定所有的从节点,就是不知道这样能不能走得通,不行的话,就将主节点和从节点划分为两个StatefulSet","like_count":0,"discussions":[{"author":{"id":1254691,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/23/06a37753.jpg","nickname":"jesse","note":"","ucode":"8A72075A22D973","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370978,"discussion_content":"service和statefulset是通过labels绑定的，由于单个statefulset中pod标签是一样的，那么你绑定读写service时就没办法区分主从pod了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619599794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":244665,"user_name":"Geek_5227ac","can_delete":false,"product_type":"c1","uid":1607208,"ip_address":"","ucode":"8C468F5C45696E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKiay65IMyD82E59Xnbp370ChMG3N9XQuXoKwfhZJ19zotzKMlJhwzBDxE61bp26jdkf54NY9L41yg/132","comment_is_top":false,"comment_ctime":1598606889,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1598606889","product_id":100015201,"comment_content":"针对思考题，如果变为主只写，从只读的话，应该主要改的是service的yaml定义吗，可不可以设置不同的选择标签来让k8s变更新的组内“主节点”呢，比如常规的mysql-read版service只作用于原节点mysql-2和mysql-3了","like_count":0,"discussions":[{"author":{"id":1254691,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/23/06a37753.jpg","nickname":"jesse","note":"","ucode":"8A72075A22D973","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370980,"discussion_content":"service和statefulset是通过labels绑定的，由于单个statefulset中pod标签是一样的，那么你绑定读写service时就没办法区分主从pod了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619599854,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242696,"user_name":"奇奇","can_delete":false,"product_type":"c1","uid":1399097,"ip_address":"","ucode":"BC86B0CB55E35A","user_header":"","comment_is_top":false,"comment_ctime":1597818620,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1597818620","product_id":100015201,"comment_content":"讨论一个极端的场景，如果在sidecar刚刚执行mv change_master_to.sql.in change_master_to.sql.orig后容器进程死掉了，重启容器。新启动的容器发现change_master_to.sql.orig存在，什么都不做，所以除了开一个数据备份端口外什么都不做，岂不是slave的同步都没有执行，就可以向外提供服务了？","like_count":0,"discussions":[{"author":{"id":1254691,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/23/06a37753.jpg","nickname":"jesse","note":"","ucode":"8A72075A22D973","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370981,"discussion_content":"change_master_to.sql.in文件如果没执行change_master的话你执行start slave会失败","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619600315,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":240461,"user_name":"大力水手Jerry","can_delete":false,"product_type":"c1","uid":1227840,"ip_address":"","ucode":"E4A6C71E275DB5","user_header":"https://static001.geekbang.org/account/avatar/00/12/bc/40/2279cfb5.jpg","comment_is_top":false,"comment_ctime":1596938994,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596938994","product_id":100015201,"comment_content":"单node如何搭建ceph集群？官方的common，operator和cluster几个yaml需要怎么修改？","like_count":0},{"had_liked":false,"id":240460,"user_name":"大力水手Jerry","can_delete":false,"product_type":"c1","uid":1227840,"ip_address":"","ucode":"E4A6C71E275DB5","user_header":"https://static001.geekbang.org/account/avatar/00/12/bc/40/2279cfb5.jpg","comment_is_top":false,"comment_ctime":1596938982,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596938982","product_id":100015201,"comment_content":"我用hostpath创建了三个pv也算是满足了这个实验的要求，有兴趣的可以参考：<br>apiVersion: v1<br>kind: PersistentVolume<br>metadata:<br>  name: pv-hostpath<br>spec:<br>  capacity:<br>    storage: 500Mi<br>  accessModes:<br>    - ReadWriteOnce<br>  hostPath:<br>    path: &quot;&#47;tmp&#47;kube&quot;","like_count":0},{"had_liked":false,"id":239452,"user_name":"cobb","can_delete":false,"product_type":"c1","uid":1421306,"ip_address":"","ucode":"0DFF2F0A683B61","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI7hsTibhnpQPxd4YexYrFvySzvnmSIzSIpdhBtgcoGlV4hL1BFfttmhz8pdZPOjDQbtDggZyG6NMg/132","comment_is_top":false,"comment_ctime":1596535436,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1596535436","product_id":100015201,"comment_content":"看完了 只能说大写的牛逼 这么复杂的部署方式 都能理的这么清楚","like_count":0,"discussions":[{"author":{"id":1400827,"avatar":"https://static001.geekbang.org/account/avatar/00/15/5f/fb/b28e5d57.jpg","nickname":"peer","note":"","ucode":"D6D0A60B4736B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311758,"discussion_content":"能对应到源码的， 容器化感觉只是开胃菜了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602483117,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235332,"user_name":"开心哥","can_delete":false,"product_type":"c1","uid":1705468,"ip_address":"","ucode":"D44C1F03B23C5A","user_header":"https://static001.geekbang.org/account/avatar/00/1a/05/fc/bceb3f2b.jpg","comment_is_top":false,"comment_ctime":1594976934,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1594976934","product_id":100015201,"comment_content":"一直pending，要如何创建volume？<br>waiting for a volume to be created, either by external provisioner &quot;ceph.rook.io&#47;block&quot; or manually created by system administrator","like_count":0,"discussions":[{"author":{"id":1705468,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/05/fc/bceb3f2b.jpg","nickname":"开心哥","note":"","ucode":"D44C1F03B23C5A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292025,"discussion_content":"应该是我自己跑k8s的云机的盘配小了，用rook toolbox进去看了 ceph df，空间不够。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595055977,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229653,"user_name":"Andy","can_delete":false,"product_type":"c1","uid":1119133,"ip_address":"","ucode":"4BCA899B8E4E85","user_header":"https://static001.geekbang.org/account/avatar/00/11/13/9d/0ff43179.jpg","comment_is_top":false,"comment_ctime":1593088768,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593088768","product_id":100015201,"comment_content":"error while running &quot;VolumeBinding&quot; filter plugin for pod<br>如果出现这个错误，排除不了，就先不要用 rook-ceph-block<br><br>删除156行 从volumeClaimTemplates 开始往下的内容，然后在第156行增加如下内容<br>      - name: data<br>        emptyDir: {}<br><br>另忘记运行 service.yaml<br>如果容器启不来，就用如下命令查看日志。<br>kubectl logs mysql-1 -c init-mysql<br>kubectl logs mysql-1 -c clone-mysql","like_count":0},{"had_liked":false,"id":229145,"user_name":"Spring.Fred","can_delete":false,"product_type":"c1","uid":1055148,"ip_address":"","ucode":"66C84150ACC304","user_header":"https://static001.geekbang.org/account/avatar/00/10/19/ac/32da70c9.jpg","comment_is_top":false,"comment_ctime":1592907896,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1592907896","product_id":100015201,"comment_content":"1.两个service的selector:都指向app: mysql， 是这么区分读和写的呢？<br>2.应用层面是访问mysql是读和写， 访问mysql-read是读是吗？","like_count":0,"discussions":[{"author":{"id":1227840,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/40/2279cfb5.jpg","nickname":"大力水手Jerry","note":"","ucode":"E4A6C71E275DB5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297437,"discussion_content":"mysql这个service的作用就是固定statefulSet的拓扑。只能经由mysql-0.mysql这个域名来写库。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596938339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":224116,"user_name":"励研冰","can_delete":false,"product_type":"c1","uid":1106394,"ip_address":"","ucode":"FCBC8266018FA0","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/da/d7f591a7.jpg","comment_is_top":false,"comment_ctime":1591277711,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591277711","product_id":100015201,"comment_content":"搞了好久了没成功啊，我安装rook-ceph用的release1.3的版本，安装之后没有生成相关osd的容器，所以这里一直不成功，好难受啊","like_count":0},{"had_liked":false,"id":221915,"user_name":"Geek_2b4a91","can_delete":false,"product_type":"c1","uid":1994572,"ip_address":"","ucode":"242A32ED80C420","user_header":"","comment_is_top":false,"comment_ctime":1590633421,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1590633421","product_id":100015201,"comment_content":"读写分离我个人理解应该可以在做service的时候通过不同的label去声明read-service和write-service，这样在代码中读操作使用read-service，写操作使用write-service，这样应该是一个思路把","like_count":0,"discussions":[{"author":{"id":1254691,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/23/06a37753.jpg","nickname":"jesse","note":"","ucode":"8A72075A22D973","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370984,"discussion_content":"你更应该先理解statefulset的pod副本的labels都是一样的，这种情况下你咋么去通过不同的labels绑定不同的service...","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619600559,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":210155,"user_name":"奔跑","can_delete":false,"product_type":"c1","uid":1361556,"ip_address":"","ucode":"A64A0DCA50D9FA","user_header":"https://static001.geekbang.org/account/avatar/00/14/c6/94/48ca3281.jpg","comment_is_top":false,"comment_ctime":1587692223,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1587692223","product_id":100015201,"comment_content":"老师，既然容器是单进程的，那容器里运行的JAVA项目里面是不是也不能调用Runtime.getRuntime（）.exec（“chmod 777 aaa”）。最近打算项目迁移到云上，突然想到这个问题。","like_count":0,"discussions":[{"author":{"id":1217712,"avatar":"https://static001.geekbang.org/account/avatar/00/12/94/b0/b073fe8b.jpg","nickname":"aMaMiMoU","note":"","ucode":"AF1E6CA541E482","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319424,"discussion_content":"应该是不能跑的，chmod执行完之后是不是就被认为进程执行完成，这个容器的生命周期就到头了吧？楼主有跑一把做测试么，结果如何？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604026784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":194486,"user_name":"Geek_c22199","can_delete":false,"product_type":"c1","uid":1441876,"ip_address":"","ucode":"1CE5B65513E360","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI2vn8hyjICTCletGs0omz28lhriaZKX2XX9icYzAEon2IEoRnlXqyOia2bEPP0j7T6xexTnr77JJic8w/132","comment_is_top":false,"comment_ctime":1585061922,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1585061922","product_id":100015201,"comment_content":"Pod没容器不分先后，除非是initContainer;<br>多个Pod一个模版;<br>Volume挂载在容器内，一个ConfigMap挂载多个Pod;<br>最后有一点没明白pvcTemplates是如何挂载到各个Pod容器的，需要自己实践试一下","like_count":0,"discussions":[{"author":{"id":2121783,"avatar":"https://static001.geekbang.org/account/avatar/00/20/60/37/fdbacf02.jpg","nickname":"叫我小卢","note":"","ucode":"A789E8407A0DBE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302422,"discussion_content":"pvc有个字段name，容器volumemounts集合中项的name和pvc的name一样就绑定了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598922143,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185688,"user_name":"StopLiu","can_delete":false,"product_type":"c1","uid":1007344,"ip_address":"","ucode":"1553FA4E3A285D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/f0/fab69114.jpg","comment_is_top":false,"comment_ctime":1583663124,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1583663124","product_id":100015201,"comment_content":"张哥，不太明白DNS访问这块，还请你指教。既然DNS规则是`&lt;pod-name&gt;.&lt;svc-name&gt;.&lt;namespace&gt;.svc.cluster.local`，mysql -h mysql-3.mysql -e &quot;SELECT * FROM test.messages&quot;，为什么这里是mysql-3.mysql，而不是mysql-3.mysql-read？","like_count":0,"discussions":[{"author":{"id":2121783,"avatar":"https://static001.geekbang.org/account/avatar/00/20/60/37/fdbacf02.jpg","nickname":"叫我小卢","note":"","ucode":"A789E8407A0DBE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302424,"discussion_content":"只有mysql那个service是headless，只有headless才能使用你上面的那个格式","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1598922229,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":173137,"user_name":"timyl","can_delete":false,"product_type":"c1","uid":1226808,"ip_address":"","ucode":"678546ECE787FC","user_header":"https://static001.geekbang.org/account/avatar/00/12/b8/38/f23fd852.jpg","comment_is_top":false,"comment_ctime":1579434218,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1579434218","product_id":100015201,"comment_content":"hi 老师，请问这个pvc的template是通过什么字段来绑定pv的呢，正常如果单独创建pvc，能写一个storageclassname来和pv里边的对应，但是我看你这个例子里边并没有，另外如果pv是使用本地的目录方式，是否能匹配上呢，只是为了测试，谢谢","like_count":0,"discussions":[{"author":{"id":2117362,"avatar":"https://static001.geekbang.org/account/avatar/00/20/4e/f2/a3314a28.jpg","nickname":"鹤无双","note":"","ucode":"785B47B34FFBDC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":356138,"discussion_content":"自动匹配，和他对应的规则以及要使用的大小，就最小的来匹配","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615538519,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2121783,"avatar":"https://static001.geekbang.org/account/avatar/00/20/60/37/fdbacf02.jpg","nickname":"叫我小卢","note":"","ucode":"A789E8407A0DBE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302425,"discussion_content":"pvc自动绑定pv的，或者使用selector","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598922289,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172364,"user_name":"feihui","can_delete":false,"product_type":"c1","uid":1007294,"ip_address":"","ucode":"13F1D4A82BC650","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/be/9ea55f46.jpg","comment_is_top":false,"comment_ctime":1579161374,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1579161374","product_id":100015201,"comment_content":"请教下，之前对 Sidecar 容器的理解是做一些辅助性的工作，像上面 xtrabackup 的 Sidecar 容器中执行  START SLAVE 是在当前容器即 Sidecar 容器中启动一个进行跑 salve mysql 吗？这样子不是跟 Sidecar 的职能不符合了？不知道我有没有理解正确","like_count":0,"discussions":[{"author":{"id":2121783,"avatar":"https://static001.geekbang.org/account/avatar/00/20/60/37/fdbacf02.jpg","nickname":"叫我小卢","note":"","ucode":"A789E8407A0DBE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302426,"discussion_content":"sidecar没有执行START SLAVE这条命令，它只是生成配置文件，mysql容器是延迟启动的，启动后会自动读取这个文件中的命令，因为一个pod中的多个容器共享同一个文件系统。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598922441,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145949,"user_name":"IOVE.-Minn","can_delete":false,"product_type":"c1","uid":1227784,"ip_address":"","ucode":"9C637EEEF64057","user_header":"https://static001.geekbang.org/account/avatar/00/12/bc/08/c43f85d9.jpg","comment_is_top":false,"comment_ctime":1572405768,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1572405768","product_id":100015201,"comment_content":"请问下，当我部署完mysql后，出现其中mysql-0是正常启动的，mysql-1就报错初始化的时候Ncat哪里报错mysql-0.mysql   没有路由，但是我部署了centos，再上面安装了nslookup后，是能解析到mysql-0的podip的。不知道是哪里的问题，求解答。错误内如如下：<br>+ ncat --recv-only mysql-0.mysql 3307<br>+ xbstream -x -C &#47;var&#47;lib&#47;mysql<br>Ncat: No route to host.<br>+ xtrabackup --prepare --target-dir=&#47;var&#47;lib&#47;mysql<br>xtrabackup version 2.4.4 based on MySQL server 5.7.13 Linux (x86_64) (revision id: df58cf2)<br>xtrabackup: cd to &#47;var&#47;lib&#47;mysql<br>xtrabackup: Error: cannot open .&#47;xtrabackup_checkpoints<br>xtrabackup: error: xtrabackup_read_metadata()<br>xtrabackup: This target seems not to have correct metadata...<br>InnoDB: Number of pools: 1<br>InnoDB: Operating system error number 2 in a file operation.<br>InnoDB: The error means the system cannot find the path specified.<br>xtrabackup: Warning: cannot open .&#47;xtrabackup_logfile. will try to find.<br>InnoDB: Operating system error number 2 in a file operation.<br>InnoDB: The error means the system cannot find the path specified.<br>  xtrabackup: Fatal error: cannot find .&#47;xtrabackup_logfile.<br>xtrabackup: Error: xtrabackup_init_temp_log() failed.<br>","like_count":0,"discussions":[{"author":{"id":2441261,"avatar":"https://static001.geekbang.org/account/avatar/00/25/40/2d/9a766753.jpg","nickname":"郭贻铖","note":"","ucode":"B14B1DB14031F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":355885,"discussion_content":"[root]@[k8s-master]: -> mysqlkubectl logs pod/mysql-1 clone-mysql -n default    \n+ [[ -d /var/lib/mysql/mysql ]]\n++ hostname\n+ [[ mysql-1 =~ -([0-9]+)$ ]]\n+ ordinal=1\n+ [[ 1 == 0 ]]\n+ xbstream -x -C /var/lib/mysql\n+ ncat --recv-only mysql-0.mysql 3307\nNcat: Could not resolve hostname &#34;mysql-0.mysql&#34;: Name or service not known. QUITTING.\n+ xtrabackup --prepare --target-dir=/var/lib/mysql\nxtrabackup version 2.4.4 based on MySQL server 5.7.13 Linux (x86_64) (revision id: df58cf2)\nxtrabackup: cd to /var/lib/mysql\nxtrabackup: Error: cannot open ./xtrabackup_checkpoints\nxtrabackup: error: xtrabackup_read_metadata()\nxtrabackup: This target seems not to have correct metadata...\nInnoDB: Number of pools: 1\nInnoDB: Operating system error number 2 in a file operation.\nInnoDB: The error means the system cannot find the path specified.\nxtrabackup: Warning: cannot open ./xtrabackup_logfile. will try to find.\nInnoDB: Operating system error number 2 in a file operation.\nInnoDB: The error means the system cannot find the path specified.\n  xtrabackup: Fatal error: cannot find ./xtrabackup_logfile.\nxtrabackup: Error: xtrabackup_init_temp_log() failed.\n我是Ncat: Could not resolve hostname &#34;mysql-0.mysql&#34;: Name or service not known. QUITTING.这个报错，请问你的问题解决了吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615508605,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141296,"user_name":"小太阳","can_delete":false,"product_type":"c1","uid":1566413,"ip_address":"","ucode":"80FD4A871ABFAD","user_header":"https://static001.geekbang.org/account/avatar/00/17/e6/cd/bf5e928c.jpg","comment_is_top":false,"comment_ctime":1571136826,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1571136826","product_id":100015201,"comment_content":"initcontainer会在statefulset初始化每一个pod之前都运行一次么？initcontainer是在操作上一个生成的pod么？","like_count":0,"discussions":[{"author":{"id":1254691,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/23/06a37753.jpg","nickname":"jesse","note":"","ucode":"8A72075A22D973","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370989,"discussion_content":"每一个新pod启动都会运行一次initcontainer","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619601406,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141277,"user_name":"小太阳","can_delete":false,"product_type":"c1","uid":1566413,"ip_address":"","ucode":"80FD4A871ABFAD","user_header":"https://static001.geekbang.org/account/avatar/00/17/e6/cd/bf5e928c.jpg","comment_is_top":false,"comment_ctime":1571135031,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1571135031","product_id":100015201,"comment_content":"在initcontainer的command部分，试图读取应用程序pod的hostname。可是pod不是等initcontainer运行完了才初始化么？那样运行initcontainer的时候，应用程序pod的hostname不是还不存在么？","like_count":0,"discussions":[{"author":{"id":1254691,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/23/06a37753.jpg","nickname":"jesse","note":"","ucode":"8A72075A22D973","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370990,"discussion_content":"initcontainer就是pod里运行的容器，那么运行initcontainer pod肯定初始化过了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619601512,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":132370,"user_name":"杨天一","can_delete":false,"product_type":"c1","uid":1640301,"ip_address":"","ucode":"3A10AEFA182A88","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJOsGtyIibIo4rvFgbVUiabeVCLMx5nNicfy25LiaNXRtZC9yEpNxkuiax5IMbb02aHoCjj1FWYJQZd9WQ/132","comment_is_top":false,"comment_ctime":1568101568,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568101568","product_id":100015201,"comment_content":"您好，想咨询下有没有全部的Yaml文件以及它们的启动顺序。我使用apply -f configmap.yaml后提示got &quot;string&quot;, expected &quot;map&quot;; if you choose to ignore these errors,turn validation off with……","like_count":0},{"had_liked":false,"id":110338,"user_name":"kkkkka","can_delete":false,"product_type":"c1","uid":1281992,"ip_address":"","ucode":"6885A932DDAB8E","user_header":"","comment_is_top":false,"comment_ctime":1562232156,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562232156","product_id":100015201,"comment_content":"之前我解决的办法是用deployment，每个都有权限去获取集群的状态，这块是用了一些自定义的镜像。获取到状态后会给自己的pod update tag，service其实是通过添加了比较多的selector来判断的。","like_count":0},{"had_liked":false,"id":105806,"user_name":"18646333118","can_delete":false,"product_type":"c1","uid":1202411,"ip_address":"","ucode":"35576AC4E5ADDD","user_header":"https://static001.geekbang.org/account/avatar/00/12/58/eb/cf3608bd.jpg","comment_is_top":false,"comment_ctime":1561086025,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561086025","product_id":100015201,"comment_content":"statefulset 处理有状态应用感觉很复杂，这个章节估计要消化很久","like_count":0},{"had_liked":false,"id":105800,"user_name":"18646333118","can_delete":false,"product_type":"c1","uid":1202411,"ip_address":"","ucode":"35576AC4E5ADDD","user_header":"https://static001.geekbang.org/account/avatar/00/12/58/eb/cf3608bd.jpg","comment_is_top":false,"comment_ctime":1561085494,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561085494","product_id":100015201,"comment_content":"statefulset 解决有状态应用还真是发复杂啊，这节就够消化的了","like_count":0},{"had_liked":false,"id":105494,"user_name":"不经意间","can_delete":false,"product_type":"c1","uid":1261493,"ip_address":"","ucode":"C39D98697ACB8B","user_header":"https://static001.geekbang.org/account/avatar/00/13/3f/b5/5fe77e16.jpg","comment_is_top":false,"comment_ctime":1561014613,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1561014613","product_id":100015201,"comment_content":"其实也没必要拷贝主的数据文件吧。只要主的binary日志一直在，从节点只需要指定主节点的地址就好。<br>当然，运行一段时间后的mysql可能数据会比较大，自动同步不方便；binary日志随着时间的推移越来越多，可能会限制binary日志的个数旧的binary被删除，无法直接同步。","like_count":0,"discussions":[{"author":{"id":1356206,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b1/ae/344fbda3.jpg","nickname":"追风","note":"","ucode":"D1D463D7B911A5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":270419,"discussion_content":"数据同步，第一次难道不需要全量+增量？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589996354,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":99689,"user_name":"Dem","can_delete":false,"product_type":"c1","uid":1032595,"ip_address":"","ucode":"C09FF65D904A75","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c1/93/e8bfb26e.jpg","comment_is_top":false,"comment_ctime":1559280342,"is_pvip":false,"replies":[{"id":"36300","content":"谢谢指出","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1559619273,"ip_address":"","comment_id":99689,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1559280342","product_id":100015201,"comment_content":"&quot;Master 节点和 Salve 节点需要能够传输备份信息文件；&quot;<br>&quot;接下来，我们再一起解决“第二座大山：Master 节点和 Salve 节点需要能够传输备份文件”的问题。&quot;<br>两个拼写错误：Salve-&gt;Slave<br>","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452224,"discussion_content":"谢谢指出","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559619273,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90155,"user_name":"cuikt","can_delete":false,"product_type":"c1","uid":1242702,"ip_address":"","ucode":"9A1DB426CEFEEA","user_header":"https://static001.geekbang.org/account/avatar/00/12/f6/4e/0066303c.jpg","comment_is_top":false,"comment_ctime":1556433778,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556433778","product_id":100015201,"comment_content":"在实际的场景中，很多时候mySQL部署架构比这复杂的多。又该如何考虑呢？","like_count":0},{"had_liked":false,"id":89505,"user_name":"罗帮奎","can_delete":false,"product_type":"c1","uid":1271773,"ip_address":"","ucode":"8598D116E1FC3C","user_header":"https://static001.geekbang.org/account/avatar/00/13/67/dd/55aa6e07.jpg","comment_is_top":false,"comment_ctime":1556189187,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1556189187","product_id":100015201,"comment_content":"有人能把这个Mysql 的demo跑通的么。各种方式都没办法跑通，一直是pod has unbound immediate PersistentVolumeClaims (repeated 2 times)","like_count":0,"discussions":[{"author":{"id":1109018,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ec/1a/f0dbaad3.jpg","nickname":"龙","note":"","ucode":"7ADB94BF8140E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4682,"discussion_content":"节点太少了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565660970,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":88817,"user_name":"罗帮奎","can_delete":false,"product_type":"c1","uid":1271773,"ip_address":"","ucode":"8598D116E1FC3C","user_header":"https://static001.geekbang.org/account/avatar/00/13/67/dd/55aa6e07.jpg","comment_is_top":false,"comment_ctime":1556007632,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1556007632","product_id":100015201,"comment_content":"我也是绑定了storageClassName，启用了三个node, 还是会报错pod has unbound immediate PersistentVolumeClaims (repeated 2 times)。而且，这个极客时间只能老实回复评论，学生都没办法讨论和互相回复，我也是醉的","like_count":0,"discussions":[{"author":{"id":1109018,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ec/1a/f0dbaad3.jpg","nickname":"龙","note":"","ucode":"7ADB94BF8140E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4683,"discussion_content":"检查node是否有效","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565661029,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81015,"user_name":"Geek_e71c3c","can_delete":false,"product_type":"c1","uid":1088807,"ip_address":"","ucode":"707D00CF61694D","user_header":"https://static001.geekbang.org/account/avatar/00/10/9d/27/7e36c9b2.jpg","comment_is_top":false,"comment_ctime":1553776321,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553776321","product_id":100015201,"comment_content":"把数据存储在ceph等分布式共享储存中，不会导致读写速度特别慢吗，性能应该不足以生产使用吧？如果确实性能差，有什么其他解决方案呢？谢谢！","like_count":0},{"had_liked":false,"id":77033,"user_name":"要没时间了","can_delete":false,"product_type":"c1","uid":1015973,"ip_address":"","ucode":"6578732FB4C5B0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/80/a5/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1552811648,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1552811648","product_id":100015201,"comment_content":"关于思考题其实本质上还是「Pod 如何对外暴露自己」的问题。之前提到过 Headless Service 和  Normal Service 的区别，其中一个比较重要的就是 Normal 类型的可以做负载均衡，通过一定策略或者随机将访问流量导入到后面的 Pod， 而 Headless Service 就没有这种功能了，它是直接给 Sts 内的 Pod 生成一条 DNS记录，pod DNS Name 直接对应 Pod IP。<br><br>所以，解决方案是，可以新建一个 Normal 类型的 Service，通过 label selector 选择所有的 slave 节点，然后将这个 Service 地址暴露给有读取需求的用户。另外，如果不想直接通过 master 的 dns name 访问，或者压根 master 就有多个，也可以按照处理 slave 节点的思路。创建新的 Service 去做这件事情，唯一的区别就是在 label Selector 的筛选条件上","like_count":0,"discussions":[{"author":{"id":1356206,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b1/ae/344fbda3.jpg","nickname":"追风","note":"","ucode":"D1D463D7B911A5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":270417,"discussion_content":"同一个st ，创建的pod lable 都是相同的，你怎么通过lable selector选择？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1589996165,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73553,"user_name":"Geek_32a1cf","can_delete":false,"product_type":"c1","uid":1203854,"ip_address":"","ucode":"319DDD9BAB6772","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ajNVdqHZLLDC4cj2XKjHPNdOiaZR6oxeO36umdW8cnuW0YfyKCfpia883ib4RheBicuL2TPhMY14HQ7e7Dl4Zvhd8w/132","comment_is_top":false,"comment_ctime":1551923881,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551923881","product_id":100015201,"comment_content":"老师，mysql的这种集群的搭建方式，在高并发的情况下怎么能保证数据的一致性呢","like_count":0},{"had_liked":false,"id":72348,"user_name":"谛听","can_delete":false,"product_type":"c1","uid":1228687,"ip_address":"","ucode":"7539D5B06662EA","user_header":"https://static001.geekbang.org/account/avatar/00/12/bf/8f/51f044dc.jpg","comment_is_top":false,"comment_ctime":1551593498,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551593498","product_id":100015201,"comment_content":"xtrabackup 和 mysql 的启动有先后顺序吗？如果有的话，如何保证的？","like_count":0},{"had_liked":false,"id":72150,"user_name":"付海清","can_delete":false,"product_type":"c1","uid":1389924,"ip_address":"","ucode":"0E100B9F392EC9","user_header":"https://static001.geekbang.org/account/avatar/00/15/35/64/e1921b8b.jpg","comment_is_top":false,"comment_ctime":1551529757,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551529757","product_id":100015201,"comment_content":"张老师，您好，之所以InitContainer可以检测到主容器的hostname，并根据ID执行主从操作，是因为InitContainer和主容器在同一个POD里面，从而共享存储，网络，以及相应namespace。这样理解对么？","like_count":0},{"had_liked":false,"id":62661,"user_name":"IOVE.-Minn","can_delete":false,"product_type":"c1","uid":1227784,"ip_address":"","ucode":"9C637EEEF64057","user_header":"https://static001.geekbang.org/account/avatar/00/12/bc/08/c43f85d9.jpg","comment_is_top":false,"comment_ctime":1548125554,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1548125554","product_id":100015201,"comment_content":"老师，请教下。这里部署出来的mysql集群，假如我有需求，要用第三方工具（可视化）去连接mysql的主节点，并且能有所有的操作的权限。如何来做呢？   尝试用nodeport的方式的话，始终是连接到的slave的节点。","like_count":0},{"had_liked":false,"id":53257,"user_name":"Francis","can_delete":false,"product_type":"c1","uid":1145834,"ip_address":"","ucode":"DC3F69EED29A5D","user_header":"https://static001.geekbang.org/account/avatar/00/11/7b/ea/70bf7e98.jpg","comment_is_top":false,"comment_ctime":1545620058,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545620058","product_id":100015201,"comment_content":"存储插件rook不需要指定存储目录吗？数据文件会存储在什么位置呢？<br>","like_count":0},{"had_liked":false,"id":53256,"user_name":"Francis","can_delete":false,"product_type":"c1","uid":1145834,"ip_address":"","ucode":"DC3F69EED29A5D","user_header":"https://static001.geekbang.org/account/avatar/00/11/7b/ea/70bf7e98.jpg","comment_is_top":false,"comment_ctime":1545619942,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545619942","product_id":100015201,"comment_content":" Failed to provision volume with StorageClass &quot;rook-ceph-block&quot;: invalid option &quot;value&quot; for volume plugin rookVolumeProvisioner   老师，创建pod的时候报错，pvc不能和pv绑定，能看下怎么解决吗","like_count":0},{"had_liked":false,"id":48731,"user_name":"eden","can_delete":false,"product_type":"c1","uid":1220656,"ip_address":"","ucode":"8A5620A5C4BDB8","user_header":"https://static001.geekbang.org/account/avatar/00/12/a0/30/5a7247eb.jpg","comment_is_top":false,"comment_ctime":1544525162,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544525162","product_id":100015201,"comment_content":"老师，我按你的方法把mysql 主从集群搭建好了，但有个问题，如果mysql persistent volume大小需要扩容怎么办，这个不能通过kubeadm update 来实现的。","like_count":0},{"had_liked":false,"id":47229,"user_name":"料峭春风","can_delete":false,"product_type":"c1","uid":1144484,"ip_address":"","ucode":"0FEA316B623161","user_header":"https://static001.geekbang.org/account/avatar/00/11/76/a4/acb15bc6.jpg","comment_is_top":false,"comment_ctime":1544082610,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544082610","product_id":100015201,"comment_content":"$ kubectl describe pvc data-mysql-0 <br>这是怎么回事？<br><br>Warning  ProvisioningFailed  2m (x2 over 2m)  ceph.rook.io&#47;block rook-ceph-operator-5bfbf654db-ff5tt 11b8281a-f855-11e8-8904-52168db40a83  Failed to provision volume with StorageClass &quot;rook-ceph-block&quot;: Failed to create rook block image replicapool&#47;pvc-2282d57d-f92b-11e8-8af8-fa163e3b8cd8: failed to create image pvc-2282d57d-f92b-11e8-8af8-fa163e3b8cd8 in pool replicapool of size 1073741824: Failed to complete &#39;&#39;: exit status 2. rbd: error opening pool &#39;replicapool&#39;: (2) No such file or directory<br>. output:<br>","like_count":0},{"had_liked":false,"id":39098,"user_name":"死后的天空","can_delete":false,"product_type":"c1","uid":1045293,"ip_address":"","ucode":"1652F8C8FE12F5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f3/2d/4b7f12b6.jpg","comment_is_top":false,"comment_ctime":1542188032,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1542188032","product_id":100015201,"comment_content":"老师我想问个问题，做完mysql的有状态应用，如果外部的应用访问节点的话，要用什么方式来做呢，ingress吗？另外，我写了个一个cronjob当作定时任务来备份数据库的时候，登录账号并不是cronjob所启容器的地址或者DNS，反而是172.17.0.1.这个是什么原因呢。","like_count":0},{"had_liked":false,"id":35110,"user_name":"killua","can_delete":false,"product_type":"c1","uid":1005951,"ip_address":"","ucode":"3108F880E48D3B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/7f/1c505317.jpg","comment_is_top":false,"comment_ctime":1540428223,"is_pvip":false,"replies":[{"id":"12530","content":"为什么不友好呢？","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1540439667,"ip_address":"","comment_id":35110,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1540428223","product_id":100015201,"comment_content":"k8s 内部应用访问数据库 要通过 mysql-id的方式 这种对于应用代码是不是不太好 k8s里可以屏蔽id吗？","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427452,"discussion_content":"为什么不友好呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540439667,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":33667,"user_name":"彭锐","can_delete":false,"product_type":"c1","uid":1179669,"ip_address":"","ucode":"F2CB53DE42026D","user_header":"https://static001.geekbang.org/account/avatar/00/12/00/15/6e399ec7.jpg","comment_is_top":false,"comment_ctime":1539849531,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1539849531","product_id":100015201,"comment_content":"这样的有状态应用有个约束，pod标识一旦确定，角色就确定了。但实际应用中，不能有这样的约束，主挂了，要有一个从升主。这就要求至少有选主机制，所有的配置文件也不能依赖id确定角色。<br>这怎么玩呢？operater吗？operater可以看成一个特定应用的sre保姆吗？","like_count":0},{"had_liked":false,"id":31067,"user_name":"IOVE.-Minn","can_delete":false,"product_type":"c1","uid":1227784,"ip_address":"","ucode":"9C637EEEF64057","user_header":"https://static001.geekbang.org/account/avatar/00/12/bc/08/c43f85d9.jpg","comment_is_top":false,"comment_ctime":1539079513,"is_pvip":false,"replies":[{"id":"11213","content":"我在文章里贴了链接呀","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1539130938,"ip_address":"","comment_id":31067,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1539079513","product_id":100015201,"comment_content":"老师能分享下完整的yaml文件么？感觉自己来拼接的话很费时间，而且错误好多哦。感谢","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426211,"discussion_content":"我在文章里贴了链接呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539130938,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":30912,"user_name":"Caesar","can_delete":false,"product_type":"c1","uid":1253220,"ip_address":"","ucode":"0319C9E19387CD","user_header":"https://static001.geekbang.org/account/avatar/00/13/1f/64/54458855.jpg","comment_is_top":false,"comment_ctime":1539046710,"is_pvip":true,"replies":[{"id":"11136","content":"请关注后续容器运行时部分。","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1539054094,"ip_address":"","comment_id":30912,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1539046710","product_id":100015201,"comment_content":"能不能把kata-container的优势简单讲一下，毕竟kata-container也是跑在虚拟机里的。想不出来和docker跑在虚拟机里有啥本质区别。","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426144,"discussion_content":"请关注后续容器运行时部分。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539054094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":30720,"user_name":"北卡","can_delete":false,"product_type":"c1","uid":1218128,"ip_address":"","ucode":"2D947A61689FC6","user_header":"https://static001.geekbang.org/account/avatar/00/12/96/50/bde525b1.jpg","comment_is_top":false,"comment_ctime":1538982649,"is_pvip":false,"replies":[{"id":"11065","content":"基本都已经覆盖到了","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1538998851,"ip_address":"","comment_id":30720,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1538982649","product_id":100015201,"comment_content":"张老师牛逼！看这套教程简直太爽了。<br>我记得有一章，老师贴了一些k8s内部实现的伪码。希望老师后面在讲使用的时候，也可以多讲讲k8s的设计思路，贴一点代码或者写点伪码这样子。除了能更好的使用k8s外，还对k8s的设计和代码思路特别感兴趣。","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426072,"discussion_content":"基本都已经覆盖到了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538998851,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":30619,"user_name":"mgxian","can_delete":false,"product_type":"c1","uid":1014806,"ip_address":"","ucode":"7B7E77E6A83B87","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/16/4d1e5cc1.jpg","comment_is_top":false,"comment_ctime":1538961469,"is_pvip":false,"replies":[{"id":"11045","content":"initcontainer就是个普通容器，它可不能操作pod本身","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1538969272,"ip_address":"","comment_id":30619,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1538961469","product_id":100015201,"comment_content":"在不使用读定分离中间件的情况下，使用k8s的service的话，由于service又是依赖label选择pod，所以看样子只能给pod添加相应的label来区分节点了，这个工作可以放在init-container里来做，不知思路是否正确，还请老师指点一下。","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426050,"discussion_content":"initcontainer就是个普通容器，它可不能操作pod本身","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538969272,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":30602,"user_name":"hugeo","can_delete":false,"product_type":"c1","uid":1042824,"ip_address":"","ucode":"438F289EDD21CD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e9/88/941e488a.jpg","comment_is_top":false,"comment_ctime":1538958949,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1538958949","product_id":100015201,"comment_content":"给大锅点赞，小白都看得懂","like_count":0,"discussions":[{"author":{"id":2831526,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/34/a6/1562d30e.jpg","nickname":"青春在学习","note":"","ucode":"BC6F3CD835930F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586001,"discussion_content":"小白开发，感觉有点复杂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661933848,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}