{"id":208253,"title":"09 | 健康检测：这个节点都挂了，为啥还要疯狂发请求？","content":"<p>你好，我是何小锋。上一讲我们介绍了超大规模集群“服务发现”的挑战，服务发现的作用就是实时感知集群IP的变化，实现接口跟服务集群节点IP的映射。在超大规模集群实战中，我们更多需要考虑的是保证最终一致性。其实总结来说，就一关键词，你要记住“推拉结合，以拉为准”。接着昨天的内容，我们再来聊聊RPC中的健康检测。</p><p>因为有了集群，所以每次发请求前，RPC框架会根据路由和负载均衡算法选择一个具体的IP地址。为了保证请求成功，我们就需要确保每次选择出来的IP对应的连接是健康的，这个逻辑你应该理解。</p><p>但你也知道，调用方跟服务集群节点之间的网络状况是瞬息万变的，两者之间可能会出现闪断或者网络设备损坏等情况，那怎么保证选择出来的连接一定是可用的呢？</p><p>从我的角度看，<strong>终极的解决方案是让调用方实时感知到节点的状态变化</strong>，这样他们才能做出正确的选择。这个道理像我们开车一样，车有各种各样的零件，我们不可能在开车之前先去挨个检查下他们的健康情况，转而是应该有一套反馈机制，比如今天我的大灯坏了，那中控台就可以给我提示；明天我的胎压不够了，中控台也能够收到提示。汽车中大部分关键零件的状态变化，我作为调用方，都能够第一时间了解。</p><p>那回到RPC框架里，我们应该怎么设计这套机制呢？你可以先停下来想想汽车的例子，看看他们是怎么做的。当然，回到我们RPC的框架里，这事用专业一点的词来说就是服务的健康检测。今天我们就来详细聊聊这个话题。</p><!-- [[[read_end]]] --><h2>遇到的问题</h2><p>在进一步讲解服务健康检测之前，我想先和你分享一个我曾经遇到过的线上问题。</p><p>有一天，我们公司某个业务研发团队的负责人急匆匆跑过来，让我帮他解决个问题。仔细听完他的描述后，我才明白，原来是他们发现线上业务的某个接口可用性并不高，基本上十次调用里总会有几次失败。</p><p>查看了具体的监控数据之后，我们发现只有请求具体打到某台机器的时候才会有这个问题，也就是说，集群中有某台机器出了问题。于是快刀斩乱麻，我建议他们先把这台“问题机器”下线，以快速解决目前的问题。</p><p><img src=\"https://static001.geekbang.org/resource/image/de/77/de02d702b4c2dc86400e59de8ae48277.jpg?wh=2583*1327\" alt=\"\"></p><p>但对于我来说，问题并没有结束，我开始进一步琢磨：“接口调用某台机器的时候已经出现不能及时响应了，那为什么RPC框架还会继续把请求发到这台有问题的机器上呢？RPC框架还会把请求发到这台机器上，也就是说从调用方的角度看，它没有觉得这台服务器有问题。”</p><p>就像警察破案一样，为了进一步了解事情的真相，我查看了问题时间点的监控和日志，在案发现场发现了这样几个线索：</p><ol>\n<li>通过日志发现请求确实会一直打到这台有问题的机器上，因为我看到日志里有很多超时的异常信息。</li>\n<li>从监控上看，这台机器还是有一些成功的请求，这说明当时调用方跟服务之间的网络连接没有断开。因为如果连接断开之后，RPC框架会把这个节点标识为“不健康”，不会被选出来用于发业务请求。</li>\n<li>深入进去看异常日志，我发现调用方到目标机器的定时心跳会有间歇性失败。</li>\n<li>从目标机器的监控上可以看到该机器的网络指标有异常，出问题时间点TCP重传数比正常高10倍以上。</li>\n</ol><p><strong>有了对这四个线索的分析，我基本上可以得出这样的结论：</strong>那台问题服务器在某些时间段出现了网络故障，但也还能处理部分请求。换句话说，它处于半死不活的状态。但是（是转折，也是关键点），它还没彻底“死”，还有心跳，这样，调用方就觉得它还正常，所以就没有把它及时挪出健康状态列表。</p><p>到这里，你应该也明白了，一开始，我们为了快速解决问题，手动把那台问题机器下线了。刨根问底之后，我们发现，其实更大的问题是我们的服务检测机制有问题，有的服务本来都已经病危了，但我们还以为人家只是个感冒。</p><p>接下来，我们就来看看服务检测的核心逻辑。</p><h2>健康检测的逻辑</h2><p>刚刚我们提到了心跳机制，我估计你会想，搞什么心跳，是不是我们把问题复杂化了。当服务方下线，正常情况下我们肯定会收到连接断开的通知事件，在这个事件里面直接加处理逻辑不就可以了？是的，我们前面汽车的例子里检测都是这样做的。但咱们这里不行，因为应用健康状况不仅包括TCP连接状况，还包括应用本身是否存活，很多情况下TCP连接没有断开，但应用可能已经“僵死了”。</p><p>所以，业内常用的检测方法就是用心跳机制。心跳机制说起来也不复杂，其实就是服务调用方每隔一段时间就问一下服务提供方，“兄弟，你还好吧？”，然后服务提供方很诚实地告诉调用方它目前的状态。</p><p>结合前面的文章，你也不难想出来，服务方的状态一般会有三种情况，一个是我很好，一个是我生病了，一个是没回复。用专业的词来对应这三个状态就是：</p><ol>\n<li>健康状态：建立连接成功，并且心跳探活也一直成功；</li>\n<li>亚健康状态：建立连接成功，但是心跳请求连续失败；</li>\n<li>死亡状态：建立连接失败。</li>\n</ol><p>节点的状态并不是固定不变的，它会根据心跳或者重连的结果来动态变化，具体状态间转换图如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/87/ac/872d83cb7a604a49302c16ca993c4bac.jpg?wh=2509*1291\" alt=\"\"></p><p>这里你可以关注下几个状态之间的转换箭头，我再给你解释下。首先，一开始初始化的时候，如果建立连接成功，那就是健康状态，否则就是死亡状态。这里没有亚健康这样的中间态。紧接着，如果健康状态的节点连续出现几次不能响应心跳请求的情况，那就会被标记为亚健康状态，也就是说，服务调用方会觉得它生病了。</p><p>生病之后（亚健康状态），如果连续几次都能正常响应心跳请求，那就可以转回健康状态，证明病好了。如果病一直好不了，那就会被断定为是死亡节点，死亡之后还需要善后，比如关闭连接。</p><p>当然，死亡并不是真正死亡，它还有复活的机会。如果某个时间点里，死亡的节点能够重连成功，那它就可以重新被标记为健康状态。</p><p>这就是整个节点的状态转换思路，你不用死记，它很简单，除了不能复活，其他都和我们人的状态一样。当服务调用方通过心跳机制了解了节点的状态之后，每次发请求的时候，就可以优先从健康列表里面选择一个节点。当然，如果健康列表为空，为了提高可用性，也可以尝试从亚健康列表里面选择一个，这就是具体的策略了。</p><h2>具体的解决方案</h2><p>理解了服务健康检测的逻辑，我们再回到开头我描述的场景里，看看怎么优化。现在你理解了，一个节点从健康状态过渡到亚健康状态的前提是“连续”心跳失败次数必须到达某一个阈值，比如3次（具体看你怎么配置了）。</p><p>而我们的场景里，节点的心跳日志只是间歇性失败，也就是时好时坏，这样，失败次数根本没到阈值，调用方会觉得它只是“生病”了，并且很快就好了。那怎么解决呢？我还是建议你先停下来想想。</p><p>你是不是会脱口而出，说改下配置，调低阈值呗。是的，这是最快的解决方法，但是我想说，它治标不治本。第一，像前面说的那样，调用方跟服务节点之间网络状况瞬息万变，出现网络波动的时候会导致误判。第二，在负载高情况，服务端来不及处理心跳请求，由于心跳时间很短，会导致调用方很快触发连续心跳失败而造成断开连接。</p><p>我们回到问题的本源，核心是服务节点网络有问题，心跳间歇性失败。我们现在判断节点状态只有一个维度，那就是心跳检测，那是不是可以再加上业务请求的维度呢？</p><p>起码我当时是顺着这个方向解决问题的。但紧接着，我又发现了新的麻烦：</p><ol>\n<li>调用方每个接口的调用频次不一样，有的接口可能1秒内调用上百次，有的接口可能半个小时才会调用一次，所以我们不能把简单的把总失败的次数当作判断条件。</li>\n<li>服务的接口响应时间也是不一样的，有的接口可能1ms，有的接口可能是10s，所以我们也不能把TPS至来当作判断条件。</li>\n</ol><p>和同事讨论之后，我们找到了<strong>可用率</strong>这个突破口，应该相对完美了。可用率的计算方式是某一个时间窗口内接口调用成功次数的百分比（成功次数/总调用次数）。当可用率低于某个比例就认为这个节点存在问题，把它挪到亚健康列表，这样既考虑了高低频的调用接口，也兼顾了接口响应时间不同的问题。</p><h2>总结</h2><p>这一讲我给你分享了RPC框架里面的一个核心的功能——健康检测，它能帮助我们从连接列表里面过滤掉一些存在问题的节点，避免在发请求的时候选择出有问题的节点而影响业务。但是在设计健康检测方案的时候，我们不能简单地从TCP连接是否健康、心跳是否正常等简单维度考虑，因为健康检测的目的就是要保证“业务无损”，所以在设计方案的时候，我们可以加入业务请求可用率因素，这样能最大化地提升RPC接口可用率。</p><p>正常情况下，我们大概30S会发一次心跳请求，这个间隔一般不会太短，如果太短会给服务节点造成很大的压力。但是如果太长的话，又不能及时摘除有问题的节点。</p><p>除了在RPC框架里面我们会有采用定时“健康检测”，其实在其它分布式系统设计的时候也会用到“心跳探活”机制。</p><p>比如在应用监控系统设计的时候，需要对不健康的应用实例进行报警，好让运维人员及时处理。和咱们RPC的例子一样，在这个场景里，你也不能简单地依赖端口的连通性来判断应用是否存活，因为在端口连通正常的情况下，应用也可能僵死了。</p><p>那有啥其他办法能处理应用僵死的情况吗？我们可以让每个应用实例提供一个“健康检测”的URL，检测程序定时通过构造HTTP请求访问该URL，然后根据响应结果来进行存活判断，这样就可以防止僵死状态的误判。你想想，这不就是咱们前面讲到的心跳机制吗？</p><p>不过，这个案例里，我还要卖个关子。<strong>加完心跳机制，是不是就没有问题了呢？</strong>当然不是，因为检测程序所在的机器和目标机器之间的网络可能还会出现故障，如果真出现了故障，不就会误判吗？你以为人家已经生病或者挂了，其实是心跳仪器坏了…</p><p>根据我的经验，有一个办法可以减少误判的几率，那就是把检测程序部署在多个机器里面，分布在不同的机架，甚至不同的机房。因为网络同时故障的概率非常低，所以只要任意一个检测程序实例访问目标机器正常，就可以说明该目标机器正常。</p><h2>课后思考</h2><p>不知道看完今天的分享之后你有何感触，你在工作中会接触到健康检测的场景吗？你可以在留言区给我分享下你是怎么做的，或者给我的方案挑挑毛病，我会第一时间给你反馈。</p><p>当然，也欢迎你留言和我分享你的思考和疑惑，期待你能把今天的所学分享给身边的朋友，邀请他一同交流。我们下节课再见！</p>","comments":[{"had_liked":false,"id":186621,"user_name":"楼下小黑哥","can_delete":false,"product_type":"c1","uid":1014680,"ip_address":"","ucode":"453B099B0EE52E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7b/98/8f1aecf4.jpg","comment_is_top":false,"comment_ctime":1583892511,"is_pvip":false,"replies":[{"id":"72564","content":"历史总是深刻","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1584285469,"ip_address":"","comment_id":186621,"utype":1}],"discussion_count":3,"race_medal":0,"score":"173382584351","product_id":100046201,"comment_content":"以前做过类似健康检查。<br>我们有个服务，需要通过银行安装在我们后台软件向银行分发交易。这个软件我们在使用过程发现会无故挂掉，为了能及时检测这种情况。<br>我通过 openresty 写了一个小插件、通过 http 接口访问银行软件，查看银行软件是否挂了。然后接入 钉钉 webhook，触发机器人报警。<br>这个健康检查啊我有个特别深刻记忆。由于当时是将 openresty 跟银行软件部署在同一台物理机器上去。某一天，整台机器挂了，报警机制当然也失效了。<br>通过这件事，我现在每次部署服务时，会注意将服务部署在不同物理机器上，防止意外发生。","like_count":41,"discussions":[{"author":{"id":1204168,"avatar":"https://static001.geekbang.org/account/avatar/00/12/5f/c8/13aa8aa9.jpg","nickname":"night","note":"","ucode":"03B3C955092C03","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531147,"discussion_content":"监控的监控失效了，我们做心跳的时候也会有这种考虑，除了分机器部署外（最好考虑多机房的问题），另外还有多重监控，比如对执行心跳检查服务（不是被检查的），再配上某种监控 base_monitor，这种 base_monitor 尽量轻量化，一般就是最粗略的进程存活监控；另一方面 base_monitor 也发出类似日报这样的东西，相当于他自己在向外主动汇报自己的健康状态。\n\n当然这里还是可能会有问题，这个 base_monitor 的存活问题，这个时候就是概率问题了，或者 SLA 的问题了，没法 100%，但也足够可用了。\n\n不知道大家还有啥补充思路不\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1637241364,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486821,"discussion_content":"历史总是深刻","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584285469,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1014680,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7b/98/8f1aecf4.jpg","nickname":"楼下小黑哥","note":"","ucode":"453B099B0EE52E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":205315,"discussion_content":"哈哈，老师这么晚还在回复阿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584285535,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186901,"user_name":"etdick","can_delete":false,"product_type":"c1","uid":1487506,"ip_address":"","ucode":"E43D68000E92CA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJiaiaQYkUHByDARl4ULduH8Y4hicOpMxGjzPZmJkXK9RYd1oVMICd0icCfarxI4Yvmiap2a8t3Eae3LMg/132","comment_is_top":false,"comment_ctime":1583952118,"is_pvip":false,"replies":[{"id":"72554","content":"还是需要分场景对待的，没有最好的，只有最合适的。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1584284917,"ip_address":"","comment_id":186901,"utype":1}],"discussion_count":2,"race_medal":0,"score":"113253101814","product_id":100046201,"comment_content":"成功次数&#47;调用总次数，建议加上总次数阀值。如果2次，一次成功，一次失败，就可能误判。例如调用总数&gt;10次以上，成次数&#47;调用次数&lt;50%，才比较准确","like_count":26,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486909,"discussion_content":"还是需要分场景对待的，没有最好的，只有最合适的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584284917,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1121588,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/34/8201baab.jpg","nickname":"端贺","note":"","ucode":"80F1400B138055","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":203589,"discussion_content":"是这样的，我们在实际生产也是使用的两个条件，同时满足才生效。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1584058810,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":196845,"user_name":"魔曦","can_delete":false,"product_type":"c1","uid":1045408,"ip_address":"","ucode":"87BA5EC5B0BC42","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f3/a0/a693e561.jpg","comment_is_top":false,"comment_ctime":1585317621,"is_pvip":false,"replies":[{"id":"74943","content":"是的","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1585570465,"ip_address":"","comment_id":196845,"utype":1}],"discussion_count":3,"race_medal":0,"score":"70304794357","product_id":100046201,"comment_content":"心跳检测需要分两个纬度，一个机器本身的，一个是应用，单纬度肯定会出问题","like_count":16,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489404,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585570465,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1228560,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/10/b7974690.jpg","nickname":"BD","note":"","ucode":"A95CF8C3EDC228","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343411,"discussion_content":"什么意思？应用部署在机器上的，应用没问题机器肯定不会有问题啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611036768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2714393,"avatar":"","nickname":"Geek_7a6fde","note":"","ucode":"6A00175AD4BF23","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1228560,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/10/b7974690.jpg","nickname":"BD","note":"","ucode":"A95CF8C3EDC228","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386407,"discussion_content":"傻瓜，他的意思是不仅要考虑机器本身的网络问题，还要考虑应用处理业务的能力","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1627567277,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":343411,"ip_address":""},"score":386407,"extra":""}]}]},{"had_liked":false,"id":188966,"user_name":"Darren","can_delete":false,"product_type":"c1","uid":1254968,"ip_address":"","ucode":"CCD2B2C492BE9A","user_header":"https://static001.geekbang.org/account/avatar/00/13/26/38/ef063dc2.jpg","comment_is_top":false,"comment_ctime":1584440088,"is_pvip":true,"replies":[{"id":"73843","content":"失败率统计是难点，需要考虑是否有网络设备坏或者不同idc问题","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1585007947,"ip_address":"","comment_id":188966,"utype":1}],"discussion_count":1,"race_medal":0,"score":"53124047640","product_id":100046201,"comment_content":"之前使用过返回状态保存在MQ中，有专门的消费者去消费消息，其中要是失败率大于阈值，直接调用注册中心，下线该服务，同时使用agent机制，自动重启有问题的服务，之后要是还会出现失败，则报警发出，人工介入。","like_count":12,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487579,"discussion_content":"失败率统计是难点，需要考虑是否有网络设备坏或者不同idc问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585007947,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186328,"user_name":"阿卧","can_delete":false,"product_type":"c1","uid":1229566,"ip_address":"","ucode":"68C0CC25E57707","user_header":"https://static001.geekbang.org/account/avatar/00/12/c2/fe/038a076e.jpg","comment_is_top":false,"comment_ctime":1583826029,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"35943564397","product_id":100046201,"comment_content":"健康检测：调用方向服务方发送心跳检测，如果超过3次（阈值可以设置）未响应则认为服务节点挂掉。<br>会存在的遇到的问题<br>1. 服务方会出现心跳正常响应，但是服务间歇性响应超时（亚健康状态），会导致调用方误判；可以用可用率的思路来解决。<br>2. 调用方心跳机制出现问题，导致误判服务方挂掉；可以用调用方集群部署，其中一台调用显示正常则认为正常的办法来减少误判。<br>Dubbo通过IdleStateHandler设置定时任务，服务空闲发送心跳，实现健康检测<br>http:&#47;&#47;dubbo.apache.org&#47;zh-cn&#47;blog&#47;dubbo-heartbeat-design.html<br>","like_count":8},{"had_liked":false,"id":210345,"user_name":"嘻嘻","can_delete":false,"product_type":"c1","uid":1325931,"ip_address":"","ucode":"E1EB75DD1C05E0","user_header":"","comment_is_top":false,"comment_ctime":1587724521,"is_pvip":false,"replies":[{"id":"79065","content":"调用方到提供方之间心跳正常才能保证链路没有问题","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1588256006,"ip_address":"","comment_id":210345,"utype":1}],"discussion_count":2,"race_medal":0,"score":"23062561001","product_id":100046201,"comment_content":"老师，几个问题:<br>1.上面说的基于失败率统计的方案，不就是熔断吗？<br>2.心跳检测，这个从调用方发心跳到服务方，会不会太重，基于熔断是不是就可以了<br>3.后面又说心跳检测可以放在多台机器去综合判断，刚刚不是说由调用方发起心跳吗？又变成第三方心跳检测了？<br>我理解这里有注册中心做心跳，再加熔断，失败重试等就可以了，不知道对不对","like_count":5,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493006,"discussion_content":"调用方到提供方之间心跳正常才能保证链路没有问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588256006,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2028277,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f2/f5/b82f410d.jpg","nickname":"Unknown element","note":"","ucode":"34A129800D0238","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589275,"discussion_content":"没错我也发现了3这个问题，如果心跳监测交给第三方去做，那又得考虑把结果及时同步给调用方的问题，感觉越搞越复杂了，然而老师的回答完全文不对题....","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1664612835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":252817,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1602493603,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18782362787","product_id":100046201,"comment_content":"个人见解：心跳检测存在滞后性,只能作为辅助手段。高并发场景，优先靠负载均衡来保证节点负载稳定。","like_count":4},{"had_liked":false,"id":186200,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1583797289,"is_pvip":true,"replies":[{"id":"72568","content":"不一定要接口纬度，一般情况下多个接口直接会共享tcp连接的，可以用tcp连接纬度","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1584285883,"ip_address":"","comment_id":186200,"utype":1}],"discussion_count":5,"race_medal":0,"score":"14468699177","product_id":100046201,"comment_content":"老师我认为心跳检测不应该接口的调用方来检测，这样的话调用接口的客户端量很大时，只是心跳检测就会把服务提供方的资源打满，而且当接口服务提供方很多时，客户端每个ip去健康检测也是不可能的","like_count":3,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486672,"discussion_content":"不一定要接口纬度，一般情况下多个接口直接会共享tcp连接的，可以用tcp连接纬度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584285883,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1571460,"avatar":"https://static001.geekbang.org/account/avatar/00/17/fa/84/f01d203a.jpg","nickname":"Simple life","note":"","ucode":"1902D7F72FB43F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310265,"discussion_content":"空闲心跳就好了，如果间隔时间内有业务请求则计数，如果超出间隔，则心跳","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1601723640,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1997605,"avatar":"","nickname":"蔡佳伟","note":"","ucode":"D7528B73994578","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":265882,"discussion_content":"感觉就算多个接口共享同一tcp链接也会造成楼主说的情况。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589450652,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1121588,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/34/8201baab.jpg","nickname":"端贺","note":"","ucode":"80F1400B138055","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":203592,"discussion_content":"IP通，不能代表服务是可用的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584059003,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1121588,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/34/8201baab.jpg","nickname":"端贺","note":"","ucode":"80F1400B138055","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":203607,"discussion_content":"你没抓住我说的重点啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584060116,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":203592,"ip_address":""},"score":203607,"extra":""}]}]},{"had_liked":false,"id":185850,"user_name":"🌀Pick Monster 🌀","can_delete":false,"product_type":"c1","uid":1141196,"ip_address":"","ucode":"EE67F41B360460","user_header":"https://static001.geekbang.org/account/avatar/00/11/69/cc/747c7629.jpg","comment_is_top":false,"comment_ctime":1583712679,"is_pvip":true,"replies":[{"id":"71836","content":"看看有没有插件支持","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1583732610,"ip_address":"","comment_id":185850,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10173647271","product_id":100046201,"comment_content":"老师，内容看明白了，可用率这个指标具体怎么实现呢？因为一般使用RPC框架都是三方框架，我们是需要自己对三方接口进行重新实现吗？","like_count":2,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486525,"discussion_content":"看看有没有插件支持","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583732610,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":291611,"user_name":"西门吹牛","can_delete":false,"product_type":"c1","uid":1508990,"ip_address":"","ucode":"E5D3624DDE1E83","user_header":"https://static001.geekbang.org/account/avatar/00/17/06/7e/735968e2.jpg","comment_is_top":false,"comment_ctime":1620382957,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5915350253","product_id":100046201,"comment_content":"是不是也可以采用分布式共识算法，比如Raft，来解决心跳间隙性失败带来的健康误判问题。","like_count":1,"discussions":[{"author":{"id":2714393,"avatar":"","nickname":"Geek_7a6fde","note":"","ucode":"6A00175AD4BF23","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386408,"discussion_content":"比如心跳5次，其中3次以上成功就认为是健康的，3次以上失败就转为亚健康？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627567516,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":206071,"user_name":"ant","can_delete":false,"product_type":"c1","uid":1556708,"ip_address":"","ucode":"A39A03AF257471","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKYLPAlGUWic4yAqsGtEYBSRR7gDjyg9yiaJicNhMwiaNw4rMKQ5DHTfp7gmic0gpqEwCZaou8G6CdHKCg/132","comment_is_top":false,"comment_ctime":1586783912,"is_pvip":false,"replies":[{"id":"77666","content":"没错","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1587270810,"ip_address":"","comment_id":206071,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5881751208","product_id":100046201,"comment_content":"心跳检测，单一纬度的标准始终差点意思。还是要结合业务场景，多维度判断，来保证结果准确性。例如 连续失败是最直接的纬度，可以综合考虑变更为 单位时间内失败次数，或单位次数的成功率","like_count":1,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491661,"discussion_content":"没错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587270810,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185851,"user_name":"每天晒白牙","can_delete":false,"product_type":"c1","uid":1004698,"ip_address":"","ucode":"A1B102CD933DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","comment_is_top":false,"comment_ctime":1583712731,"is_pvip":false,"replies":[{"id":"71837","content":"定时发心跳消息是最简单的方法，通过判断是否正常响应","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1583732788,"ip_address":"","comment_id":185851,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5878680027","product_id":100046201,"comment_content":"想请教老师，RPC 框架的心跳检测怎么做的呢？只听说过心跳检测这个概念，但在代码层面如何做，没有概念。看到老师在最后提到检测应用是否可用，可以在应用实例中开一个 url 供检测程序发 http 请求检测。但非应用级别的心跳检测也是这样做的吗？","like_count":1,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486526,"discussion_content":"定时发心跳消息是最简单的方法，通过判断是否正常响应","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583732788,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1147453,"avatar":"https://static001.geekbang.org/account/avatar/00/11/82/3d/356fc3d6.jpg","nickname":"忆水寒","note":"","ucode":"E3F86BD8AA8903","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200749,"discussion_content":"其实应该是调用空闲监测机制，超时没有读写操作，可以任务socket的channel失效，可以关闭该连接。我目前的RPC框架中就是这样做的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583718012,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":358712,"user_name":"Unknown element","can_delete":false,"product_type":"c1","uid":2028277,"ip_address":"广东","ucode":"34A129800D0238","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f2/f5/b82f410d.jpg","comment_is_top":false,"comment_ctime":1664613053,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1664613053","product_id":100046201,"comment_content":"“根据我的经验，有一个办法可以减少误判的几率，那就是把检测程序部署在多个机器里面，分布在不同的机架，甚至不同的机房”<br>老师问下这里是说把健康检测从调用方分离出去，由另一个集群去做吗？那调用方想获取检测的结果是不是又要考虑检测程序所在集群的健康情况？感觉成套娃了....","like_count":0},{"had_liked":false,"id":347862,"user_name":"周文童","can_delete":false,"product_type":"c1","uid":1005411,"ip_address":"","ucode":"0C65A0A67229FA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/63/be6db73e.jpg","comment_is_top":false,"comment_ctime":1654520389,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1654520389","product_id":100046201,"comment_content":"学习了。健康检查要考虑这么多点，关键在于如何减少误判。如何界定轮询请求的阈值、如何判断业务请求正常的阈值、如何避免网络情况（机房部署，网络抖动）影响统计口径。","like_count":0},{"had_liked":false,"id":336817,"user_name":"Geek3093","can_delete":false,"product_type":"c1","uid":2845206,"ip_address":"","ucode":"45BE4035BF22DB","user_header":"","comment_is_top":false,"comment_ctime":1646382064,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646382064","product_id":100046201,"comment_content":"“在负载高情况，服务端来不及处理心跳请求，由于心跳时间很短，会导致调用方很快触发连续心跳失败而造成断开连接”<br>这句话不是很理解，如果调用方连续失败，是不是说明该实例在高负载情况下都无法处理正常请求了，那断开连接也没有关系吧","like_count":0},{"had_liked":false,"id":329054,"user_name":"少平","can_delete":false,"product_type":"c1","uid":1228611,"ip_address":"","ucode":"9F14F328987093","user_header":"https://static001.geekbang.org/account/avatar/00/12/bf/43/2602b4a6.jpg","comment_is_top":false,"comment_ctime":1641087376,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1641087376","product_id":100046201,"comment_content":"突然想到是不是可以 由 监控平台来处理这个事情。<br>1. 接口的成功率会打点到 cat<br>2. 拉取 cat 的监控指标，当 接口失败率低于某个阈值时，直接 通知注册中心，下线该 节点","like_count":0},{"had_liked":false,"id":312590,"user_name":"hiyanxu","can_delete":false,"product_type":"c1","uid":1221750,"ip_address":"","ucode":"FA46A318154812","user_header":"https://static001.geekbang.org/account/avatar/00/12/a4/76/585dc6b3.jpg","comment_is_top":false,"comment_ctime":1631881005,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631881005","product_id":100046201,"comment_content":"老师，你好。<br>注册发现中心 -》定时发送健康检测请求到服务提供方；<br>服务提供方有问题 -》注册中心主动推消息到调用方。<br>整体的流程是上面那样吗？应该不是调用方到提供方直接的健康检测吧？","like_count":0},{"had_liked":false,"id":296134,"user_name":"Sic Pavis","can_delete":false,"product_type":"c1","uid":1106088,"ip_address":"","ucode":"48B5F0118347C8","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/a8/4e739cf6.jpg","comment_is_top":false,"comment_ctime":1622773693,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622773693","product_id":100046201,"comment_content":"针对不同接口做不同场景的预警策略。请求量大的当然直接用可用率就可以，请求量少的用可用率不太好，因为波动太大，误告警可能很多。 可以考虑采用类似每分钟五次错误这样的绝对值来处理","like_count":0},{"had_liked":false,"id":286403,"user_name":"êｗěｎ","can_delete":false,"product_type":"c1","uid":1066707,"ip_address":"","ucode":"5000233111BEFA","user_header":"https://static001.geekbang.org/account/avatar/00/10/46/d3/e25d104a.jpg","comment_is_top":false,"comment_ctime":1617282058,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1617282058","product_id":100046201,"comment_content":"空闲检测+心跳 应该可以解决","like_count":0,"discussions":[{"author":{"id":2714393,"avatar":"","nickname":"Geek_7a6fde","note":"","ucode":"6A00175AD4BF23","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386409,"discussion_content":"大佬怎么判断空闲","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627567534,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":286104,"user_name":"群书","can_delete":false,"product_type":"c1","uid":1437036,"ip_address":"","ucode":"BA9EE71D2D818A","user_header":"https://static001.geekbang.org/account/avatar/00/15/ed/6c/6fb35017.jpg","comment_is_top":false,"comment_ctime":1617156363,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1617156363","product_id":100046201,"comment_content":"从目标机器的监控上可以看到该机器的网络指标有异常，出问题时间点 TCP 重传数比正常高 10 倍以上。<br><br>大佬请教下，如何可以监控到tcp的重传数","like_count":0},{"had_liked":false,"id":253537,"user_name":"追忆似水年华","can_delete":false,"product_type":"c1","uid":1083395,"ip_address":"","ucode":"FB6C3EDC6988B6","user_header":"https://static001.geekbang.org/account/avatar/00/10/88/03/805c8e0e.jpg","comment_is_top":false,"comment_ctime":1602770236,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602770236","product_id":100046201,"comment_content":"健康检测在服务发现集群里是不是也存在","like_count":0},{"had_liked":false,"id":247053,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1599571092,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599571092","product_id":100046201,"comment_content":"老师，请问健康列表一般是维护在本地文件，还是应用内存，或者是第三方中间件如redis呢？还有健康检测程序是应用内部启动定时任务去定时检测，还是定时线程池，亦或是独立部署程序呢？有最佳实践吗？","like_count":0},{"had_liked":false,"id":244056,"user_name":"山头","can_delete":false,"product_type":"c1","uid":1610142,"ip_address":"","ucode":"9CD45A7966F37E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/1R7lHGBvwPTVfb3BAQrPX3AhsYWnXyicbUJUYDgWagWxMGTnsNFvKibzeJ8v7fF2vJLQGf2EY9dV07rnn5Mhv9Uw/132","comment_is_top":false,"comment_ctime":1598368681,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598368681","product_id":100046201,"comment_content":"哨兵机制","like_count":0},{"had_liked":false,"id":242143,"user_name":"xuanyuan","can_delete":false,"product_type":"c1","uid":1113737,"ip_address":"","ucode":"1EC79B9372868F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI2icbib62icXtibTkThtyRksbuJLoTLMts7zook2S30MiaBtbz0f5JskwYicwqXkhpYfvCpuYkcvPTibEaQ/132","comment_is_top":false,"comment_ctime":1597623548,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597623548","product_id":100046201,"comment_content":"基于时间窗口的多维度统计分析方法","like_count":0},{"had_liked":false,"id":217419,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1589502233,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589502233","product_id":100046201,"comment_content":"目前自己还没做过心跳检测的事情，通过此节的学习得到：<br>1：心跳探活核心要点在于<br>第一及时<br>第二准确<br>第三全面，网络环境瞬息万变，需要考虑探活机器本身是否OK？探活的机制是否OK？<br>探活机制的设置应视情况而定，可以是节点级？也可以是服务级？为了防止因网络通信问题误判，可以设置多个探活节点。为了使探活更准确，可以假如可用率，调用次数等维度。","like_count":0},{"had_liked":false,"id":213903,"user_name":"有米","can_delete":false,"product_type":"c1","uid":1005042,"ip_address":"","ucode":"C9A10B7A67BC12","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/f2/ba68d931.jpg","comment_is_top":false,"comment_ctime":1588588025,"is_pvip":false,"replies":[{"id":"80434","content":"检测的目的防止别人挂","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1589499932,"ip_address":"","comment_id":213903,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1588588025","product_id":100046201,"comment_content":"你以为别人挂了其实是自己挂了😢","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493893,"discussion_content":"检测的目的防止别人挂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589499932,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":212997,"user_name":"dancer","can_delete":false,"product_type":"c1","uid":1019036,"ip_address":"","ucode":"B8D5641A3AC490","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/9c/d48473ab.jpg","comment_is_top":false,"comment_ctime":1588258335,"is_pvip":false,"replies":[{"id":"79139","content":"多机房主要担心跨机房网络问题，只要有存活的就认为存活","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1588405525,"ip_address":"","comment_id":212997,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1588258335","product_id":100046201,"comment_content":"有一个地方没想明白，希望老师能解答一下。如果在多个机房部房部署探活程序，如果部分检测有问题 部分检测没有问题，这个状态需要怎么判断，又该怎样同步给所有探活程序？","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493663,"discussion_content":"多机房主要担心跨机房网络问题，只要有存活的就认为存活","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588405525,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186194,"user_name":"雨霖铃声声慢","can_delete":false,"product_type":"c1","uid":1052607,"ip_address":"","ucode":"656D98310C6DA3","user_header":"https://static001.geekbang.org/account/avatar/00/10/0f/bf/ee93c4cf.jpg","comment_is_top":false,"comment_ctime":1583793648,"is_pvip":false,"replies":[{"id":"72570","content":"是的，健康检查很重要","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1584285928,"ip_address":"","comment_id":186194,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583793648","product_id":100046201,"comment_content":"看完这篇文章的感触是健康检查这套逻辑需要业务和运维的配合实现，业务要提供heath check的endpoint，运维要调用这个endpoint来查看服务的情况，所以在进一步，一些通用的框架会自动集成health check的功能并可以通过配置打开，当新服务上线的时候，监控检查功能会自动提供。","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486667,"discussion_content":"是的，健康检查很重要","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584285928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186182,"user_name":"ple","can_delete":false,"product_type":"c1","uid":1120057,"ip_address":"","ucode":"E1C4519C325994","user_header":"https://static001.geekbang.org/account/avatar/00/11/17/39/3274257b.jpg","comment_is_top":false,"comment_ctime":1583773584,"is_pvip":false,"replies":[{"id":"72571","content":"用其他机器去检查反映出来的结果不一定准，可能中间经过的网络设备不一样。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1584286024,"ip_address":"","comment_id":186182,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583773584","product_id":100046201,"comment_content":"想问下。心跳检测文中说是调用方定时去看看提供方是否存活。但是平常好像不是这么做的，会有一台专门做健康检查的机器定时去调用健康检查接口，是说这两种方式都是可以的么  觉得第一种会不会做起来成本比较高？","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486662,"discussion_content":"用其他机器去检查反映出来的结果不一定准，可能中间经过的网络设备不一样。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584286024,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186086,"user_name":"jiemoon","can_delete":false,"product_type":"c1","uid":1202343,"ip_address":"","ucode":"A7461400AFF41C","user_header":"https://static001.geekbang.org/account/avatar/00/12/58/a7/7c972eb1.jpg","comment_is_top":false,"comment_ctime":1583752960,"is_pvip":false,"replies":[{"id":"72572","content":"应用级别的检查也是需要的","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1584286066,"ip_address":"","comment_id":186086,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1583752960","product_id":100046201,"comment_content":"健康检测是不是也要检测自己","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486617,"discussion_content":"应用级别的检查也是需要的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584286066,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1121588,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/34/8201baab.jpg","nickname":"端贺","note":"","ucode":"80F1400B138055","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":203596,"discussion_content":"自己死了就检测不了了吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584059076,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185893,"user_name":"Reason","can_delete":false,"product_type":"c1","uid":1878898,"ip_address":"","ucode":"C2A8D67BC6F94D","user_header":"https://static001.geekbang.org/account/avatar/00/1c/ab/72/c3a5eff3.jpg","comment_is_top":false,"comment_ctime":1583721313,"is_pvip":false,"replies":[{"id":"71834","content":"分机房部署不是说RPC，而是对应用存活检测","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1583732482,"ip_address":"","comment_id":185893,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583721313","product_id":100046201,"comment_content":"接触的印象最深刻的检测机制是spring boot actuator的health端点了。有个问题没太理解请老师解惑，文末说检测程序可以分机房机架部署，检测程序是单独rpc框架的一套程序么？我理解一般是在rpc框架里的一个线程，不知道理解的对不？","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486542,"discussion_content":"分机房部署不是说RPC，而是对应用存活检测","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583732482,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185892,"user_name":"Reason","can_delete":false,"product_type":"c1","uid":1878898,"ip_address":"","ucode":"C2A8D67BC6F94D","user_header":"https://static001.geekbang.org/account/avatar/00/1c/ab/72/c3a5eff3.jpg","comment_is_top":false,"comment_ctime":1583721118,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583721118","product_id":100046201,"comment_content":"接触到的健康检测机制，印象最深刻的是spring boot actuator包里的health端点。","like_count":0},{"had_liked":false,"id":185876,"user_name":"Jackey","can_delete":false,"product_type":"c1","uid":1063751,"ip_address":"","ucode":"125DE81993FEDD","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/47/f6c772a1.jpg","comment_is_top":false,"comment_ctime":1583718468,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583718468","product_id":100046201,"comment_content":"最近在协助运维同学搞部署流程，其中一个步骤就是健康检测。之前是直接检查应用的状态，现在看来应该加上服务发现到应用的通信状态了","like_count":0},{"had_liked":false,"id":185873,"user_name":"忆水寒","can_delete":false,"product_type":"c1","uid":1147453,"ip_address":"","ucode":"E3F86BD8AA8903","user_header":"https://static001.geekbang.org/account/avatar/00/11/82/3d/356fc3d6.jpg","comment_is_top":false,"comment_ctime":1583717952,"is_pvip":false,"replies":[{"id":"71835","content":"可以考虑心跳来解决","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1583732552,"ip_address":"","comment_id":185873,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583717952","product_id":100046201,"comment_content":"老师，我想问一下 应用程序僵住了，但是连接还在。这种情况是不是靠心跳超时 来判断是否需要移动到不正常状态。","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486538,"discussion_content":"可以考虑心跳来解决","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583732552,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185854,"user_name":"高源","can_delete":false,"product_type":"c1","uid":1048887,"ip_address":"","ucode":"751B41FD38EF7D","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/37/12e4c9c9.jpg","comment_is_top":false,"comment_ctime":1583713480,"is_pvip":false,"replies":[{"id":"71838","content":"看看tcp链接是否正常","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1583732881,"ip_address":"","comment_id":185854,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1583713480","product_id":100046201,"comment_content":"老师我遇到一个棘手的问题，服务端win，客户端嵌入式Linux，之间socket通信，服务端有心跳检测，最近发现现象就是例如第一天服务端从早上8点启动然后客户端连接服务端大概10多个开始跑业务运行到下午17点，这时候呢电源关闭所有客户端与服务端断开，但不是正常关闭的，服务端检测不到客户端心跳，讲所有客户端已经连接关闭socket，服务端继续运行到第二天的8点，客户端又连服务端，出现了客户端反映能连接服务端，但是给服务端发数据包服务端没响应，这个时候我把所有客户端断开，只保留一个客户端，再重新连接服务端，还是刚才现象，排查服务端没有异常日志，但是细查发现服务端连记录客户端连接日志都没有，服务端进程和线程运行着通过工具检测。如果将服务端重启一下现象马上消失，所有客户端全部正常跑一整天没问题。这个现象只有服务端长时间开着从不关闭服务端程序才能有这个现象发生，并且客户端不正常关闭连接，强制关闭电源。请教老师如何排查，因为服务端没有异常日志，现在定位服务端监听客户端连接部分，但没有异常，日志也没记录哪个客户端访问上来。但是定位肯定是服务端问题。怎么排查，谢谢","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486528,"discussion_content":"看看tcp链接是否正常","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583732881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1515149,"avatar":"https://static001.geekbang.org/account/avatar/00/17/1e/8d/5b242931.jpg","nickname":"Fish","note":"","ucode":"C20719F8B0F7C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":321441,"discussion_content":"强制关电源和拔客户端机器网线是不是一样？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604581270,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1799719,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/76/27/aa2743e7.jpg","nickname":"小南风","note":"","ucode":"249B070497C815","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":275207,"discussion_content":"你的服务器长时间跑，出现大量的close_wait状态的tcp连接。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590676424,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}