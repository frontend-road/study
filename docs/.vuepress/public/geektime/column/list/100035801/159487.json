{"id":159487,"title":"19 | 消息队列：如何降低消息队列系统中消息的延迟？","content":"<p>你好，我是唐扬。</p><p>学完前面两节课之后，相信你对在垂直电商项目中如何使用消息队列应对秒杀时的峰值流量已经有所了解。当然了，你也应该知道要如何做才能保证消息不会丢失，尽量避免消息重复带来的影响。<strong>那么我想让你思考一下：</strong>除了这些内容，你在使用消息队列时还需要关注哪些点呢？</p><p><strong>先来看一个场景：</strong>在你的垂直电商项目中，你会在用户下单支付之后向消息队列里面发送一条消息，队列处理程序消费了消息后会增加用户的积分或者给用户发送优惠券。用户在下单之后，等待几分钟或者十几分钟拿到积分和优惠券是可以接受的，但是一旦消息队列出现大量堆积，用户消费完成后几小时还拿到优惠券，那就会有用户投诉了。</p><p>这时你要关注的就是消息队列中消息的延迟了，这其实是消费性能的问题，那么你要如何提升消费性能保证更短的消息延迟呢？<strong>在我看来，</strong>首先需要掌握如何来监控消息的延迟，因为有了数据之后你才可以知道目前的延迟数据是否满足要求，也可以评估优化之后的效果。然后你要掌握使用消息队列的正确姿势以及关注消息队列本身是如何保证消息尽快被存储和投递的。</p><p>接下来，我们先来看看第一点：如何监控消息延迟。</p><h2>如何监控消息延迟</h2><p>在我看来，监控消息的延迟有两种方式：</p><ul>\n<li>使用消息队列提供的工具，通过监控消息的堆积来完成；</li>\n<li>通过生成监控消息的方式来监控消息的延迟情况。</li>\n</ul><!-- [[[read_end]]] --><p>接下来，我带你实际了解一下。</p><p>假设在开篇的场景之下电商系统中的消息队列已经堆积了大量的消息，那么你要想监控消息的堆积情况，首先需要从原理上了解在消息队列中消费者的消费进度是多少，因为这样才方便计算当前的消费延迟是多少。比如生产者向队列中一共生产了1000条消息，某一个消费者消费进度是900条，那么这个消费者的消费延迟就是100条消息。</p><p><strong>在Kafka中，消费者的消费进度在不同的版本上是不同的。</strong></p><p>在Kafka0.9之前的版本中，消费进度是存储在ZooKeeper中的，消费者在消费消息的时候先要从ZooKeeper中获取最新的消费进度，再从这个进度的基础上消费后面的消息。</p><p>在Kafka0.9版本之后，消费进度被迁入到Kakfa的一个专门的topic叫“__consumer_offsets”里面。所以如果你了解kafka的原理，可以依据不同的版本从不同的位置获取到这个消费进度的信息。</p><p>当然，作为一个成熟的组件，Kafka也提供了一些工具来获取这个消费进度的信息帮助你实现自己的监控，这个工具主要有两个：</p><p><strong>首先，Kafka提供了工具叫做“kafka-consumer-groups.sh”</strong>（它在Kafka安装包的bin目录下）。</p><p>为了帮助你理解，我简单地搭建了一个Kafka节点并且写入和消费了一些信息，然后我来使用命令看看消息累积情况，具体的命令如下：</p><pre><code>./bin/kafka-consumer-groups.sh --bootstrap-server localhost:9092 --describe --group test-consumer-group\n</code></pre><p>结果如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/40/4b/404811b07db8edb4c1bb9f1cfc0bc94b.jpg?wh=1142*209\" alt=\"\"></p><ul>\n<li>图中的前两列是队列的基本信息，包括话题名和分区名；</li>\n<li>第三列是当前消费者的消费进度；</li>\n<li>第四列是当前生产消息的总数；</li>\n<li>第五列就是消费消息的堆积数（也就是第四列与第三列的差值）。</li>\n</ul><p>通过这个命令你可以很方便地了解消费者的消费情况。</p><p><strong>第二个工具是JMX。</strong></p><p>Kafka通过JMX暴露了消息堆积的数据，我在本地启动了一个console consumer，然后使用jconsole连接consumer就可以看到consumer的堆积数据了（就是下图中红框里的数据）。这些数据你可以写代码来获取，这样也可以方便地输出到监控系统中，<strong>我比较推荐这种方式。</strong></p><p><img src=\"https://static001.geekbang.org/resource/image/33/2c/3384d3fcb52f98815fac667e5b543e2c.jpg?wh=1142*911\" alt=\"\"></p><p>除了使用消息队列提供的工具以外，你还可以通过生成监控消息的方式来监控消息的延迟。<strong>具体怎么做呢？</strong></p><p>你先定义一种特殊的消息，然后启动一个监控程序将这个消息定时地循环写入到消息队列中，消息的内容可以是生成消息的时间戳并且也会作为队列的消费者消费数据。业务处理程序消费到这个消息时直接丢弃掉，而监控程序在消费到这个消息时就可以和这个消息的生成时间做比较，如果时间差达到某一个阈值就可以向我们报警。</p><p><img src=\"https://static001.geekbang.org/resource/image/34/7f/34820c0b27e66af37fda116a1a98347f.jpg?wh=1142*376\" alt=\"\"></p><p>这两种方式都可以监控消息的消费延迟情况，<strong>而从我的经验出发，我比较推荐两种方式结合来使用。</strong>比如在实际项目中，我会优先在监控程序中获取JMX中的队列堆积数据做到dashboard报表中，同时也会启动探测进程确认消息的延迟情况是怎样的。</p><p>在我看来，消息的堆积是对于消息队列的基础监控，这是你无论如何都要做的。但是了解了消息的堆积情况并不能很直观地了解消息消费的延迟，你也只能利用经验来确定堆积的消息量到了多少才会影响到用户的体验；而第二种方式对于消费延迟的监控则更加直观，而且从时间的维度来做监控也比较容易确定报警阈值。</p><p>了解了消息延迟的监控方式之后，我们再来看看如何提升消息的写入和消费性能，这样才会让异步的消息得到尽快的处理。</p><h2>减少消息延迟的正确姿势</h2><p>想要减少消息的处理延迟，我们需要在<strong>消费端和消息队列</strong>两个层面来完成。</p><p>在消费端的目标是提升消费者的消息处理能力，你能做的是：</p><ul>\n<li>优化消费代码提升性能；</li>\n<li>增加消费者的数量（这个方式比较简单）。</li>\n</ul><p>不过第二种方式会受限于消息队列的实现。如果消息队列使用的是Kafka就无法通过增加消费者数量的方式来提升消息处理能力。</p><p>因为在Kafka中，一个Topic（话题）可以配置多个Partition（分区），数据会被平均或者按照生产者指定的方式写入到多个分区中，那么在消费的时候，Kafka约定一个分区只能被一个消费者消费，为什么要这么设计呢？在我看来，如果有多个consumer（消费者）可以消费一个分区的数据，那么在操作这个消费进度的时候就需要加锁，可能会对性能有一定的影响。</p><p>所以说，话题的分区数量决定了消费的并行度，增加多余的消费者也是没有用处的，你可以通过增加分区来提高消费者的处理能力。</p><p><img src=\"https://static001.geekbang.org/resource/image/cd/39/cdd960f49f982f8b96ab466d7e4b2739.jpg?wh=1142*495\" alt=\"\"></p><p>那么，如何在不增加分区的前提下提升消费能力呢？</p><p>虽然不能增加consumer，但你可以在一个consumer中提升处理消息的并行度，所以可以考虑使用多线程的方式来增加处理能力：你可以预先创建一个或者多个线程池，在接收到消息之后把消息丢到线程池中来异步地处理，这样，原本串行的消费消息的流程就变成了并行的消费，可以提高消息消费的吞吐量，在并行处理的前提下，我们就可以在一次和消息队列的交互中多拉取几条数据，然后分配给多个线程来处理。</p><p><img src=\"https://static001.geekbang.org/resource/image/2c/79/2c0eefd526eed3a1fe4df89f068daf79.jpg?wh=1142*325\" alt=\"\"></p><p>另外，在消费队列中数据的时候还需要注意消费线程空转的问题。</p><p><strong>我是在测试自己写的一个消息中间件的时候发现的。</strong>当时，我发现运行消费客户端的进程会偶发地出现CPU跑满的情况，于是打印了JVM线程堆栈，找到了那个跑满CPU的线程。这个时候才发现，原来是消息队列中有一段时间没有新的消息，于是消费客户端拉取不到新的消息就会不间断地轮询拉取消息，这个线程就把CPU跑满了。</p><p>所以，你在写消费客户端的时候要考虑这种场景，拉取不到消息可以等待一段时间再来拉取，等待的时间不宜过长，否则会增加消息的延迟。我一般建议固定的10ms~100ms，也可以按照一定步长递增，比如第一次拉取不到消息等待10ms，第二次20ms，最长可以到100ms，直到拉取到消息再回到10ms。</p><p>说完了消费端的做法之后，<strong>再来说说消息队列本身在读取性能优化方面做了哪些事情。</strong></p><p>我曾经也做过一个消息中间件，在最初设计中间件的时候我主要从两方面考虑读取性能问题：</p><ul>\n<li>消息的存储；</li>\n<li>零拷贝技术。</li>\n</ul><p><strong>针对第一点，</strong>我最初在设计的时候为了实现简单，使用了普通的数据库来存储消息，但是受限于数据库的性能瓶颈，读取QPS只能到2000，后面我重构了存储模块，使用本地磁盘作为存储介质。Page Cache的存在就可以提升消息的读取速度，即使要读取磁盘中的数据，由于消息的读取是顺序的并且不需要跨网络读取数据，所以读取消息的QPS提升了一个数量级。</p><p><strong>另外一个优化点是零拷贝技术，</strong>说是零拷贝，其实我们不可能消灭数据的拷贝，只是尽量减少拷贝的次数。在读取消息队列的数据的时候，其实就是把磁盘中的数据通过网络发送给消费客户端，在实现上会有四次数据拷贝的步骤：</p><p>1.数据从磁盘拷贝到内核缓冲区；<br>\n2.系统调用将内核缓存区的数据拷贝到用户缓冲区；<br>\n3.用户缓冲区的数据被写入到Socket缓冲区中；<br>\n4.操作系统再将Socket缓冲区的数据拷贝到网卡的缓冲区中。</p><p><img src=\"https://static001.geekbang.org/resource/image/52/8f/52c74ecac57e7a437442860029476d8f.jpg?wh=1142*383\" alt=\"\"></p><p>操作系统提供了Sendfile函数可以减少数据被拷贝的次数。使用了Sendfile之后，在内核缓冲区的数据不会被拷贝到用户缓冲区而是直接被拷贝到Socket缓冲区，节省了一次拷贝的过程提升了消息发送的性能。高级语言中对于Sendfile函数有封装，比如说在Java里面的java.nio.channels.FileChannel类就提供了transferTo方法提供了Sendfile的功能。</p><p><img src=\"https://static001.geekbang.org/resource/image/e3/ed/e38d36c7f077c6ce5b0b276efb8d4eed.jpg?wh=1142*488\" alt=\"\"></p><h2>课程小结</h2><p>本节课我带你了解了如何提升消息队列的性能来降低消息消费的延迟，这里我想让你明确的重点是：</p><ul>\n<li>我们可以使用消息队列提供的工具，或者通过发送监控消息的方式来监控消息的延迟情况；</li>\n<li>横向扩展消费者是提升消费处理能力的重要方式；</li>\n<li>选择高性能的数据存储方式配合零拷贝技术，可以提升消息的消费性能。</li>\n</ul><p>其实队列是一种常用的组件，只要涉及到队列，任务的堆积就是一个不可忽视的问题，<strong>我遇到过的很多故障都是源于此。</strong></p><p>比如前一段时间处理的一个故障，前期只是因为数据库性能衰减有少量的慢请求，结果这些慢请求占满了Tomcat线程池，导致整体服务的不可用。如果我们能对Tomcat线程池的任务堆积情况有实时的监控，或者说对线程池有一些保护策略，比方说线程全部使用之后丢弃请求，也许就会避免故障的发生。在此，我希望你在实际的工作中能够引以为戒，只要有队列就要监控它的堆积情况，把问题消灭在萌芽之中。</p><h2>一课一思</h2><p>在实际的项目中，你可能对于消息队列的使用已经很熟练了，那么结合今天的内容，你可以和我分享一下在研发过程中，你在降低消息延迟方面做过哪些事情呢？欢迎在留言区和我一起讨论，或者将你的实战经验分享给更多的人。</p><p>最后，感谢你的阅读，如果这篇文章让你有所收获，也欢迎你将它分享给更多的朋友。</p>","neighbors":{"left":{"article_title":"18 | 消息投递：如何保证消息仅仅被消费一次？","id":158277},"right":{"article_title":"20 | 面试现场第二期：当问到项目经历时，面试官究竟想要了解什么？","id":160321}},"comments":[{"had_liked":false,"id":147303,"user_name":"leechanx","can_delete":false,"product_type":"c1","uid":1700597,"ip_address":"","ucode":"6C0A2B42ABDA35","user_header":"https://static001.geekbang.org/account/avatar/00/19/f2/f5/46c23dd0.jpg","comment_is_top":false,"comment_ctime":1572857240,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"375235011992","product_id":100035801,"comment_content":"sendfile 在linux 2.1的时候，是文件与socket两个内核缓冲区间copy<br>在更高linux版本，已经能从文件缓冲区直接写到网卡了，socket缓冲区省掉了","like_count":88,"discussions":[{"author":{"id":1474954,"avatar":"https://static001.geekbang.org/account/avatar/00/16/81/8a/15a96a64.jpg","nickname":"Gatsby","note":"","ucode":"5DBFDA12556BDB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":404333,"discussion_content":"2.4版本进行了优化，https://zhuanlan.zhihu.com/p/362499466","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634289358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148612,"user_name":"仙道","can_delete":false,"product_type":"c1","uid":1161146,"ip_address":"","ucode":"CF35D34B484B71","user_header":"https://static001.geekbang.org/account/avatar/00/11/b7/ba/ae4cabd8.jpg","comment_is_top":false,"comment_ctime":1573038132,"is_pvip":false,"replies":[{"id":"57332","content":"也可以比如在Kafka下，把要求严格顺序的消息写到一个partition","user_name":"作者回复","comment_id":148612,"uid":"1448977","ip_address":"","utype":1,"ctime":1573170140,"user_name_real":"唐扬"}],"discussion_count":5,"race_medal":0,"score":"100357285940","product_id":100035801,"comment_content":"老师，关于消息队列的一个重要东西，您还没有讲到。<br>消息的顺序性。比如订单消息要在配送消息消费之前消费<br>对于这种问题，有因果一致性来解决。因果一致性的一种做法是，消息的编号递增，小的号码先消费，大的号码要在后消费。 <br>但是在分布式集群环境下，每个消费者消费的时候要把它的最大消息编号广播给其他消费者。<br>这样一来的话，代价就比较高了。","like_count":24,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473554,"discussion_content":"也可以比如在Kafka下，把要求严格顺序的消息写到一个partition","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573170140,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1161146,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b7/ba/ae4cabd8.jpg","nickname":"仙道","note":"","ucode":"CF35D34B484B71","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45912,"discussion_content":"请问下老师，消息顺序性有哪些方案实现。kafka本身有这种功能，其他消息队列都没有","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573097401,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1165364,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c8/34/fb871b2c.jpg","nickname":"海罗沃德","note":"","ucode":"8704F1D6980FA0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48187,"discussion_content":"關於維護消息對列順序這塊，在李玥老師的消息對列課程裡著重講過，可以去聽一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573459394,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1161146,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b7/ba/ae4cabd8.jpg","nickname":"仙道","note":"","ucode":"CF35D34B484B71","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1165364,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c8/34/fb871b2c.jpg","nickname":"海罗沃德","note":"","ucode":"8704F1D6980FA0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48191,"discussion_content":"哪个李玥\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573459526,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":48187,"ip_address":""},"score":48191,"extra":""},{"author":{"id":1165364,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c8/34/fb871b2c.jpg","nickname":"海罗沃德","note":"","ucode":"8704F1D6980FA0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1161146,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b7/ba/ae4cabd8.jpg","nickname":"仙道","note":"","ucode":"CF35D34B484B71","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48269,"discussion_content":"就一個李玥","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573470560,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":48191,"ip_address":""},"score":48269,"extra":""}]}]},{"had_liked":false,"id":146532,"user_name":"陆离","can_delete":false,"product_type":"c1","uid":1483932,"ip_address":"","ucode":"2C8C206CE36A81","user_header":"https://static001.geekbang.org/account/avatar/00/16/a4/9c/b32ed9e9.jpg","comment_is_top":false,"comment_ctime":1572569468,"is_pvip":false,"replies":[{"id":"56858","content":"会有这个风险，不过为了提升性能，需要一些权衡","user_name":"作者回复","comment_id":146532,"uid":"1448977","ip_address":"","utype":1,"ctime":1572835700,"user_name_real":"唐扬"}],"discussion_count":11,"race_medal":0,"score":"74587013500","product_id":100035801,"comment_content":"并行消费那块有数据丢失的风险吧。<br>server接收到数据返回给队列ack，然后丢给线程池，数据还没处理完这个节点挂掉了，数据不就全丢了。","like_count":18,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472904,"discussion_content":"会有这个风险，不过为了提升性能，需要一些权衡","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572835700,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1736048,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/MItiagXxZFfAQsF9T2OSJTyzQgs65fAcDU4PmxwzBJaasu3icUbxEDaZwu1DoB6zJ8ez9mfe9tzHtelbSgrOSjTg/132","nickname":"Geek_49e5c2","note":"","ucode":"A2DA9A279EB6B1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282658,"discussion_content":" 多线程这块是有问题的，message提前存在内存里，ack返回表示确认消费了，内存里肯定会丢消息；正常的做法是多个partition，多个consumer提高并发度；消费完成发送ack，这样能保证消息不丢","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1592040261,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1219438,"avatar":"https://static001.geekbang.org/account/avatar/00/12/9b/6e/edd2da0c.jpg","nickname":"蓝魔丶","note":"","ucode":"2AE4359E263558","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42861,"discussion_content":"消费消息如果使用手动ack，从理论上来说可以等到消息完成再ack保障消费进度的准确性，但是这种方式太影响性能，整个消费进度受制于线程池中最慢的那个线程，并且会阻塞后面其他消费者消费消息，如果使用自动ack的话，不能保证消息不丢失，所以个人觉得这种方式还是适用于对消息丢失或者消费顺序没有严格要求的场景，比如：日志处理","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1572792617,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1201733,"avatar":"https://static001.geekbang.org/account/avatar/00/12/56/45/24a5eea7.jpg","nickname":"小河","note":"","ucode":"70E299D670D0B8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":206975,"discussion_content":"再开启一个消息消费成功的topic，double check","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584455783,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1744053,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/9c/b5/c936c54b.jpg","nickname":"💣","note":"","ucode":"F3B82CEB6B6934","race_medal":3,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591357,"discussion_content":"有一说一，方案确实有危险性，但是从老师的回答看这种方案是一种很中肯的“经验方案”，机器宕机的偶发数据丢失与大幅度提升消息处理能力在场景不严格的条件下完全是可行的，现实工作中有很多这种潜在的危险方案，但是如果被理论上的缺陷而限制，这种“红灯思维”才是不可取的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666536690,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1062848,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ersGSic8ib7OguJv6CJiaXY0s4n9C7Z51sWxTTljklFpq3ZAIWXoFTPV5oLo0GMTkqW5sYJRRnibNqOJQ/132","nickname":"walle斌","note":"","ucode":"0DB3243004951F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386024,"discussion_content":"业务直接用rocketmq 解决这个问题即可。。kafka无论是延迟消息、client 并发消息消费【绝对并发量】、分布式事物支持上都跟rocketmq有区别，毕竟kafka的本身并不是给业务用的，而是给大数据用的。。rocketmq是适配业务更合适的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627384050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1095284,"avatar":"https://static001.geekbang.org/account/avatar/00/10/b6/74/c63449b1.jpg","nickname":"问题究竟系边度","note":"","ucode":"CA4F2C9A84F867","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":228679,"discussion_content":"批量提交","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586569252,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1465986,"avatar":"https://static001.geekbang.org/account/avatar/00/16/5e/82/438c8534.jpg","nickname":"longslee","note":"","ucode":"C24E32E5B1B6F5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42514,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572686984,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1666612,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epiau0XTQK3cIroGSC82B42lSyF99DaQzTT1bJSqrtDJ32H4uO2o4S4Ok9I0DgTvmSDYKuKRq5b8icQ/132","nickname":"Geek_8d14d3","note":"","ucode":"B209D9DCBB21A6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42068,"discussion_content":"这种消费partition的数据扔进线程池的实现比较坑，要是线程池处理不完，积压堆积会出问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572579961,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1201733,"avatar":"https://static001.geekbang.org/account/avatar/00/12/56/45/24a5eea7.jpg","nickname":"小河","note":"","ucode":"70E299D670D0B8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1666612,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epiau0XTQK3cIroGSC82B42lSyF99DaQzTT1bJSqrtDJ32H4uO2o4S4Ok9I0DgTvmSDYKuKRq5b8icQ/132","nickname":"Geek_8d14d3","note":"","ucode":"B209D9DCBB21A6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":206973,"discussion_content":"重启就全没了，哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584455706,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":42068,"ip_address":""},"score":206973,"extra":""}]},{"author":{"id":1022247,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/99/27/47aa9dea.jpg","nickname":"阿卡牛","note":"","ucode":"0BC43A904C3199","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42061,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572578422,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164391,"user_name":"每天晒白牙","can_delete":false,"product_type":"c1","uid":1004698,"ip_address":"","ucode":"A1B102CD933DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","comment_is_top":false,"comment_ctime":1576977519,"is_pvip":false,"replies":[{"id":"63065","content":"赞","user_name":"作者回复","comment_id":164391,"uid":"1448977","ip_address":"","utype":1,"ctime":1577241266,"user_name_real":"唐扬"}],"discussion_count":3,"race_medal":1,"score":"66001486959","product_id":100035801,"comment_content":"今日学习总结<br>我们使用消息队列，一般会关注消息的延迟，然后优化消息的读写性能，但首先要做的是对延迟的监控，那怎么监控消息队列的延迟呢？<br>1.通过消息队列的工具，来监控消息的堆积情况<br>一般消息队列都会提供这种工具，拿kafka来说，可以通过 kafka-consumer-groups.sh 这个命令来监控堆积情况。主要关注【lag】列<br>同时kafka会通过jmx暴露消息的堆积情况，所以可以使用jconsole这种工具进行查看<br><br>2.通过生成监控消息的方式来监控延迟情况<br>这种方式就是启动一个监控程序，并生产一种特殊的消息，比如是消息生成的时间戳，然后循环的写入到消息队列中，真正的消费者对于这种特殊的消息不进行处理，而监控程序会处理这种特殊的消息，通过比较消费到该消息的时间和生成该消息的时间差来判断是否有延迟<br><br>那如何减少消息的延迟呢？<br>1.优化消费端的代码以提升性能<br>2.增加消费者的数量<br><br>关于第2点对消息队列会有限制，比如对于kafka来说，在同一个分区下，消息只能被一个消费者【同一个consumer_group】消费，这样也是考虑到了多个消费者消费需要抢占锁，会有性能损失<br>【topic的分区数量决定了消费者的并行度】<br>所以想提高并行度就得增加分区，那如何不增加分区呢？可以在处理消息上做工作了，比如可以在一个消费者中增加处理消息的并行度，比如多线程的方式去处理，或者加入异步处理<br><br>【这里有值得注意的，就是消费消息时消费线程的空转问题】<br>消费端通过不断轮训去topic中拉取消息，就存在线程空转的情况，这里可以增加一个策略就是拉取不到消息，等待一会儿，等待时间可以是固定的。也可以是阶梯的，当然这样可能加重消息消费延迟情况<br><br>消息队列本身读取性能提升可以从下面两个方面着手<br>1.消息的存储<br>2.零拷贝技术","like_count":16,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478746,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577241266,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1114999,"avatar":"https://static001.geekbang.org/account/avatar/00/11/03/77/3f6a76a9.jpg","nickname":"极客","note":"","ucode":"A4AAA6B4F40E66","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326036,"discussion_content":"消息要是有序的话，还是多创建分区，线程池的话保证不了消息有序","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605504716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1797531,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/6d/9b/f928d5a8.jpg","nickname":"😒","note":"","ucode":"609004E868544E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310685,"discussion_content":"大佬，牛皮！看文章还有些看不懂，你的总结真的精简","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601994460,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163192,"user_name":"Klaus","can_delete":false,"product_type":"c1","uid":1326597,"ip_address":"","ucode":"BF2683C893E20A","user_header":"https://static001.geekbang.org/account/avatar/00/14/3e/05/cc934cb3.jpg","comment_is_top":false,"comment_ctime":1576668358,"is_pvip":false,"replies":[{"id":"62129","content":"数据库是随机写，磁盘是顺序写","user_name":"作者回复","comment_id":163192,"uid":"1448977","ip_address":"","utype":1,"ctime":1576734443,"user_name_real":"唐扬"}],"discussion_count":4,"race_medal":0,"score":"44526341318","product_id":100035801,"comment_content":"数据库数据本身也是属于磁盘数据啊，为什么在存储的时候将数据库换成本地磁盘，qps会提高一个数量级呢？","like_count":11,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478287,"discussion_content":"数据库是随机写，磁盘是顺序写","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576734443,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1123043,"avatar":"https://static001.geekbang.org/account/avatar/00/11/22/e3/510b69f9.jpg","nickname":"benny","note":"","ucode":"E2F30AF0C808D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":167446,"discussion_content":"老师可否具体讲讲本地IO和网络IO谁快谁慢","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1581495898,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1259854,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/4e/f937748b.jpg","nickname":"小小程序猿","note":"","ucode":"DCE81131B24285","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":223855,"discussion_content":"顺序写比随机写快吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586258760,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1213078,"avatar":"https://static001.geekbang.org/account/avatar/00/12/82/96/aa795685.jpg","nickname":"mghio","note":"","ucode":"74883EDE4FD0DC","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1259854,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/4e/f937748b.jpg","nickname":"小小程序猿","note":"","ucode":"DCE81131B24285","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":254774,"discussion_content":"顺序写比随机写要快很多","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1588343812,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":223855,"ip_address":""},"score":254774,"extra":""}]}]},{"had_liked":false,"id":210580,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1587790522,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"40242496186","product_id":100035801,"comment_content":"MQ的一个核心卖点就是削峰填谷，一般来讲生产和消费必然存在速度差，而且常常把慢动作放在消费侧，有短暂积压应该是正常现象，如果长时间有大量积压，那就是消费侧过慢了，需要优化，具体怎么优化，也需要看具体性能瓶颈在哪里，不过核心思路在于，有性能瓶颈的地方最好可以通过水平扩展的方式来解决，否则就只能沿着网线找性能瓶颈点，然后把具体瓶颈给优化掉啦！一般应用是IO密集型，找有IO的地方基本能找到性能瓶颈。","like_count":9},{"had_liked":false,"id":146701,"user_name":"intomymind","can_delete":false,"product_type":"c1","uid":1105126,"ip_address":"","ucode":"B954C9BFEC8667","user_header":"https://static001.geekbang.org/account/avatar/00/10/dc/e6/cfb409ab.jpg","comment_is_top":false,"comment_ctime":1572611955,"is_pvip":false,"replies":[{"id":"56838","content":"为了性能可能要损失一些消息完整性","user_name":"作者回复","comment_id":146701,"uid":"1448977","ip_address":"","utype":1,"ctime":1572833439,"user_name_real":"唐扬"}],"discussion_count":4,"race_medal":0,"score":"27342415731","product_id":100035801,"comment_content":"消费者接收到消息后，放入到线程池里面，那么在线程池里对消息处理完之后，如何实现返回ack给kafka呢","like_count":6,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472983,"discussion_content":"为了性能可能要损失一些消息完整性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572833439,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":59385,"discussion_content":"非顺序消费的话。拿到就当消费成功，失败业务侧捕捉异常重推mq。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574687879,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1219438,"avatar":"https://static001.geekbang.org/account/avatar/00/12/9b/6e/edd2da0c.jpg","nickname":"蓝魔丶","note":"","ucode":"2AE4359E263558","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42862,"discussion_content":"会返回最后那个位置作为offset进行ack","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572792666,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1219438,"avatar":"https://static001.geekbang.org/account/avatar/00/12/9b/6e/edd2da0c.jpg","nickname":"蓝魔丶","note":"","ucode":"2AE4359E263558","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":279258,"discussion_content":"如何做？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591317334,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":42862,"ip_address":""},"score":279258,"extra":""}]}]},{"had_liked":false,"id":229220,"user_name":"xiaochao321","can_delete":false,"product_type":"c1","uid":1083596,"ip_address":"","ucode":"8F5AC46CD9400C","user_header":"https://static001.geekbang.org/account/avatar/00/10/88/cc/11b10a6f.jpg","comment_is_top":false,"comment_ctime":1592925758,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14477827646","product_id":100035801,"comment_content":"消息顺序性问题<br>rabbitmq使用一个队列对应一个消费者消费<br>kafka 相同key的消息放到同一个partition中，使用同一个内存队列进行消费<br><br>还要保证消费端是单线程的","like_count":3},{"had_liked":false,"id":195573,"user_name":"dondon","can_delete":false,"product_type":"c1","uid":1732521,"ip_address":"","ucode":"8DD96E32BC02BD","user_header":"https://static001.geekbang.org/account/avatar/00/1a/6f/a9/ce325b9f.jpg","comment_is_top":false,"comment_ctime":1585198214,"is_pvip":false,"replies":[{"id":"75147","content":"可能生产环境不好用jconsole，不过可以写代码获取jmx的数据","user_name":"作者回复","comment_id":195573,"uid":"1448977","ip_address":"","utype":1,"ctime":1585659106,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"14470100102","product_id":100035801,"comment_content":"Kafka 通过 JMX 暴露了消息堆积的数据，我在本地启动了一个 console consumer，然后使用 jconsole 连接 consumer 就可以看到 consumer 的堆积数据了（就是下图中红框里的数据）。<br>意思是说，生产环境Linux服务器上的kafka服务，我可以在本地写一个consumer订阅broker, 然后能通过jconsole可以看到kafka里的消息队列情况？","like_count":4,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489113,"discussion_content":"可能生产环境不好用jconsole，不过可以写代码获取jmx的数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585659106,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":176193,"user_name":" 海大","can_delete":false,"product_type":"c1","uid":1175140,"ip_address":"","ucode":"03D1013FBE6047","user_header":"https://static001.geekbang.org/account/avatar/00/11/ee/64/55adb692.jpg","comment_is_top":false,"comment_ctime":1580984253,"is_pvip":false,"replies":[{"id":"68475","content":"是的，必要时可以做多级队列","user_name":"作者回复","comment_id":176193,"uid":"1448977","ip_address":"","utype":1,"ctime":1581040230,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"14465886141","product_id":100035801,"comment_content":"消息处理时避免耗时操作也很重要","like_count":4,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483041,"discussion_content":"是的，必要时可以做多级队列","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581040230,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155630,"user_name":"hunterlodge","can_delete":false,"product_type":"c1","uid":1069755,"ip_address":"","ucode":"5B83A79E784161","user_header":"https://static001.geekbang.org/account/avatar/00/10/52/bb/225e70a6.jpg","comment_is_top":false,"comment_ctime":1574730579,"is_pvip":false,"replies":[{"id":"60245","content":"是的呢~","user_name":"作者回复","comment_id":155630,"uid":"1448977","ip_address":"","utype":1,"ctime":1575015890,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"14459632467","product_id":100035801,"comment_content":"老师，请问怎么采集每个consumer的JMX数据呢，让监控程序去连接每一个consumer应用吗？","like_count":3,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475813,"discussion_content":"是的呢~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575015890,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148274,"user_name":"你净瞎说～","can_delete":false,"product_type":"c1","uid":1255437,"ip_address":"","ucode":"A4EE0154034D22","user_header":"https://static001.geekbang.org/account/avatar/00/13/28/0d/558f6141.jpg","comment_is_top":false,"comment_ctime":1572966783,"is_pvip":false,"replies":[{"id":"57335","content":"写文件一般都会写入pagecache 由操作系统来刷盘","user_name":"作者回复","comment_id":148274,"uid":"1448977","ip_address":"","utype":1,"ctime":1573170251,"user_name_real":"唐扬"}],"discussion_count":3,"race_medal":0,"score":"10162901375","product_id":100035801,"comment_content":"老师，我想问一下，消息中间件的读写都是顺序的吗？写文件的时候会先写到pageCache中，然后往文件写，写文件的时候应该是一行一行写的吧？如果不写入pageCache直接写入文件，也是一行一行写的吧，有什么区别吗？比如说写到文件的第1万行了，再往后继续写，是可以快速定位到这个位置的吗？读取消息的时候也是读的文件，假如说读到了第1万行，再往后读，也是可以很快定位到这个1万行吗？java有没有api，比如说，我直接读取第1万行的数据？","like_count":3,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473449,"discussion_content":"写文件一般都会写入pagecache 由操作系统来刷盘","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573170251,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1024294,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","nickname":"null","note":"","ucode":"F9039EFED6B55D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300917,"discussion_content":"写入 pagecache 再写文件，类似批量写吧，减少每次写时的 IO 等待时间。\n不太懂，等其他大佬的回复","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1598319527,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1255437,"avatar":"https://static001.geekbang.org/account/avatar/00/13/28/0d/558f6141.jpg","nickname":"你净瞎说～","note":"","ucode":"A4EE0154034D22","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45448,"discussion_content":"哪位大佬给解释一下啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573039581,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147012,"user_name":"电光火石","can_delete":false,"product_type":"c1","uid":1013160,"ip_address":"","ucode":"3AD33BB4AA940F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/a8/dfe4cade.jpg","comment_is_top":false,"comment_ctime":1572763164,"is_pvip":false,"replies":[{"id":"56853","content":"可以将描述符传输到socket缓冲区，这样可以减少一次拷贝","user_name":"作者回复","comment_id":147012,"uid":"1448977","ip_address":"","utype":1,"ctime":1572835424,"user_name_real":"唐扬"}],"discussion_count":2,"race_medal":0,"score":"10162697756","product_id":100035801,"comment_content":"零拷贝时，从内核缓冲区到socket缓冲区是否可以通过共享缓冲区的方式，再减少一次拷贝？谢谢！","like_count":3,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473095,"discussion_content":"可以将描述符传输到socket缓冲区，这样可以减少一次拷贝","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572835424,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2105364,"avatar":"https://static001.geekbang.org/account/avatar/00/20/20/14/89fbdcb7.jpg","nickname":"M.N.G.","note":"","ucode":"B96B914D7145F1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347155,"discussion_content":"sendfile将 内核缓冲区数据的文件描述符移动到socket 缓冲区 有什么意义呢，老师求解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612166070,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146654,"user_name":"Omer","can_delete":false,"product_type":"c1","uid":1676246,"ip_address":"","ucode":"8EE3E531313265","user_header":"https://static001.geekbang.org/account/avatar/00/19/93/d6/040e4965.jpg","comment_is_top":false,"comment_ctime":1572595217,"is_pvip":false,"replies":[{"id":"56837","content":"不会的，这样比如1分钟发送一个消息，相比于业务动辄每秒几十或者几百次请求来说太微不足道了","user_name":"作者回复","comment_id":146654,"uid":"1448977","ip_address":"","utype":1,"ctime":1572833409,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"10162529809","product_id":100035801,"comment_content":"你先定义一种特殊的消息，然后启动一个监控程序，将这个消息定时地循环写入到消息队列中，消息的内容可以是生成消息的时间戳，并且也会作为队列的消费者消费数据。业务处理程序消费到这个消息时直接丢弃掉，而监控程序在消费到这个消息时，就可以和这个消息的生成时间做比较，如果时间差达到某一个阈值就可以向我们报警。<br><br><br>老师，这里有个问题，你这么做是问了判断当前队列的延迟时间对吧，但是这样子做的话定时生成的时间戳和正式的任务混在一起了，这样不就给正常执行的业务处理程序增加了很多负担，会不会导致太多的这种任务导致对于正式的业务延迟更大？","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472958,"discussion_content":"不会的，这样比如1分钟发送一个消息，相比于业务动辄每秒几十或者几百次请求来说太微不足道了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572833409,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":209853,"user_name":"林腾","can_delete":false,"product_type":"c1","uid":1963793,"ip_address":"","ucode":"8E2438E56BF677","user_header":"","comment_is_top":false,"comment_ctime":1587626058,"is_pvip":false,"replies":[{"id":"78352","content":"io负载不高吧","user_name":"作者回复","comment_id":209853,"uid":"1448977","ip_address":"","utype":1,"ctime":1587699365,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"5882593354","product_id":100035801,"comment_content":"老师好，关于IO和NIO有一个疑问，我在java进程中用IO和NIO分别实现文件下载服务的功能，分别计算服务器提供文件下载服务前后的时间，好像是差不多的。这是什么原因呢？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492881,"discussion_content":"io负载不高吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587699365,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164197,"user_name":"jun.hai","can_delete":false,"product_type":"c1","uid":1702947,"ip_address":"","ucode":"9740C5118DE6DC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epx1w8VkC30tcu4GlOCkUZB7picI2xesBBZF3rGWVPp9tHZfJdkc5iaqhSg7LOsvtefiajkM1YPno2JA/132","comment_is_top":false,"comment_ctime":1576909102,"is_pvip":false,"replies":[{"id":"63072","content":"可以监控一下写入消息和处理消息的速率，看看是不是写入消息量级过大还来不及处理，还是说处理的慢了<br><br>如果处理的慢了，那么要排查处理的链路上哪处是瓶颈","user_name":"作者回复","comment_id":164197,"uid":"1448977","ip_address":"","utype":1,"ctime":1577242103,"user_name_real":"唐扬"}],"discussion_count":2,"race_medal":0,"score":"5871876398","product_id":100035801,"comment_content":"老师，请教个问题:我们用的ActiveMQ隔一段时间后会出现，生产后消费时隔半个小时到一个小时的延迟，并大量也不大，这个怎么检查能找到根源？谢谢","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478680,"discussion_content":"可以监控一下写入消息和处理消息的速率，看看是不是写入消息量级过大还来不及处理，还是说处理的慢了\n\n如果处理的慢了，那么要排查处理的链路上哪处是瓶颈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577242103,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2586341,"avatar":"","nickname":"石头","note":"","ucode":"EB3C9A277C7B0C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369971,"discussion_content":"缺少监控吧，关注lag，流入流出速度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619236549,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153470,"user_name":"李慢慢","can_delete":false,"product_type":"c1","uid":1026123,"ip_address":"","ucode":"7BB3B27C96260C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a8/4b/75b05efd.jpg","comment_is_top":false,"comment_ctime":1574239770,"is_pvip":false,"replies":[{"id":"59011","content":"可以的吧 ，RocketMQ也会提供一些工具","user_name":"作者回复","comment_id":153470,"uid":"1448977","ip_address":"","utype":1,"ctime":1574294261,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"5869207066","product_id":100035801,"comment_content":"问一下，公司还在jdk6时代，但是用到了RocketMQ,上面的这些监控也能做吗·。","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475179,"discussion_content":"可以的吧 ，RocketMQ也会提供一些工具","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574294261,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149178,"user_name":"云师兄","can_delete":false,"product_type":"c1","uid":1010459,"ip_address":"","ucode":"4475AF1598FBFD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6b/1b/4b397b80.jpg","comment_is_top":false,"comment_ctime":1573173528,"is_pvip":false,"replies":[{"id":"57675","content":"没有找到官方的benchmark","user_name":"作者回复","comment_id":149178,"uid":"1448977","ip_address":"","utype":1,"ctime":1573433936,"user_name_real":"唐扬"}],"discussion_count":2,"race_medal":0,"score":"5868140824","product_id":100035801,"comment_content":"请教老师kafka新版本offset通过主题方式替换zk，能提升多大的吞吐量，有没有量化的数据参考","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473762,"discussion_content":"没有找到官方的benchmark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573433936,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1165364,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c8/34/fb871b2c.jpg","nickname":"海罗沃德","note":"","ucode":"8704F1D6980FA0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48190,"discussion_content":"李玥老師的消息對列課程裡做過極限壓測，下一台配置比較高的但服務器上，部署但節點Kafka，極限情況下每秒數據吞吐量高達600M，幾乎跑滿帶寬","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1573459503,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147672,"user_name":"旅途","can_delete":false,"product_type":"c1","uid":1212902,"ip_address":"","ucode":"5022477E8E9441","user_header":"https://static001.geekbang.org/account/avatar/00/12/81/e6/6cafed37.jpg","comment_is_top":false,"comment_ctime":1572878412,"is_pvip":false,"replies":[{"id":"57033","content":"也可以","user_name":"作者回复","comment_id":147672,"uid":"1448977","ip_address":"","utype":1,"ctime":1572938904,"user_name_real":"唐扬"}],"discussion_count":3,"race_medal":0,"score":"5867845708","product_id":100035801,"comment_content":"我想问一下老师发送特殊消息队列的那个 正常的消息里面不是有时间戳吗 用这个时间戳比较不行吗","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473283,"discussion_content":"也可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572938904,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1679880,"avatar":"https://static001.geekbang.org/account/avatar/00/19/a2/08/9db00d06.jpg","nickname":"Y","note":"","ucode":"0CED0858B534E9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":55660,"discussion_content":"时间戳非常不好，不同物理机的时间几乎都不一样，强依赖运维","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574388019,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1212902,"avatar":"https://static001.geekbang.org/account/avatar/00/12/81/e6/6cafed37.jpg","nickname":"旅途","note":"","ucode":"5022477E8E9441","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1679880,"avatar":"https://static001.geekbang.org/account/avatar/00/19/a2/08/9db00d06.jpg","nickname":"Y","note":"","ucode":"0CED0858B534E9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":63241,"discussion_content":"物理机时间不一祥可能会影响集群，是需要校时的吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574868518,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":55660,"ip_address":""},"score":63241,"extra":""}]}]},{"had_liked":false,"id":146888,"user_name":"longslee","can_delete":false,"product_type":"c1","uid":1465986,"ip_address":"","ucode":"C24E32E5B1B6F5","user_header":"https://static001.geekbang.org/account/avatar/00/16/5e/82/438c8534.jpg","comment_is_top":false,"comment_ctime":1572687273,"is_pvip":false,"replies":[{"id":"56843","content":"消息处理程序一般是IO密集型的，所以可以提升线程数来提升并行处理能力<br>","user_name":"作者回复","comment_id":146888,"uid":"1448977","ip_address":"","utype":1,"ctime":1572834245,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"5867654569","product_id":100035801,"comment_content":"打卡。嗯文中监控实战不错。 然后就是下面很多同学提到的丢给线程池处理丢失数据和线程池本身的堆积问题。 如果线程池方式不能避免丢失，那么客户端是否只有一条条的消费来处理消息呢，此时线程数完全受控与Kafka的partition数？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473046,"discussion_content":"消息处理程序一般是IO密集型的，所以可以提升线程数来提升并行处理能力\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572834245,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146600,"user_name":"高源","can_delete":false,"product_type":"c1","uid":1048887,"ip_address":"","ucode":"751B41FD38EF7D","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/37/12e4c9c9.jpg","comment_is_top":false,"comment_ctime":1572578521,"is_pvip":false,"replies":[{"id":"56836","content":"局域网应该不会有大量超时，可以抓包看一下，也可以看看网卡是否有丢包","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1572833357,"ip_address":"","comment_id":146600,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5867545817","product_id":100035801,"comment_content":"老师请教问题经过排查发现客户端发的消息，服务器收的比较晚，造成超时，双方之间tcp socket通讯局域网，这种情况怎样解决啊","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472935,"discussion_content":"局域网应该不会有大量超时，可以抓包看一下，也可以看看网卡是否有丢包","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572833357,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1048887,"avatar":"https://static001.geekbang.org/account/avatar/00/10/01/37/12e4c9c9.jpg","nickname":"高源","note":"","ucode":"751B41FD38EF7D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43103,"discussion_content":"老师这个我用第三方的工具接收数据包测试过，客户端数据发上来第三方工具马上就收到了，但是在同台机器的服务端程序接收这个数据包就慢了过了一会才收到通过日志","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1572855469,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338387,"user_name":"永昌","can_delete":false,"product_type":"c1","uid":1025006,"ip_address":"","ucode":"A572DDE33DFAD9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a3/ee/636415d8.jpg","comment_is_top":false,"comment_ctime":1647479995,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1647479995","product_id":100035801,"comment_content":"问题：如果消费者的瓶颈是在数据落库，那多开消费者，或者增加线程都是无效的，这里是不是只能多几套数据库先接收数据？","like_count":0},{"had_liked":false,"id":315689,"user_name":"呵呵","can_delete":false,"product_type":"c1","uid":1253836,"ip_address":"","ucode":"6783A42717C666","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Nic2zzpAuiadVibETy3Um3IcjOa4O9gr8zVagG6tCbMlFF8O3tNmwMJicEEsA9pibcxgibtyKhl1ZicXYX8kLfXs6AMmg/132","comment_is_top":false,"comment_ctime":1633944991,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633944991","product_id":100035801,"comment_content":"老师，您好。<br>我对 通过生成监控消息的方式来监控消息的延迟 有点疑惑。<br><br>按照我的理解，业务处理程序和监控程序使用的是两个不同的 Consumer Group。业务处理程序会处理业务消息，监控程序会丢弃业务消息。这样的话，监控程序本身没有对业务消息做处理，仅仅对监控消息做了时间戳的校验，消费进度就会比业务处理程序快了，这样是否就无法监控到消息积压了？","like_count":0},{"had_liked":false,"id":304142,"user_name":"belief","can_delete":false,"product_type":"c1","uid":1765541,"ip_address":"","ucode":"563EDA9F2C9214","user_header":"https://static001.geekbang.org/account/avatar/00/1a/f0/a5/ff758400.jpg","comment_is_top":false,"comment_ctime":1627271179,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627271179","product_id":100035801,"comment_content":"有点局限性，更多是在站Java的角度提供解决方案","like_count":0},{"had_liked":false,"id":243880,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1598318915,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598318915","product_id":100035801,"comment_content":"老师您好！<br>请问一下，多线程消费消息，线程池中的线程，如何同步消费结果给队列吖？<br>谢谢！！","like_count":0},{"had_liked":false,"id":223898,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1015754,"ip_address":"","ucode":"00DF2FEC58D2E6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","comment_is_top":false,"comment_ctime":1591228081,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591228081","product_id":100035801,"comment_content":"针对『在并行处理的前提下，我们就可以在一次和消息队列的交互中多拉取几条数据，然后分配给多个线程来处理。』有疑问：疑问：<br>（1）Kafka客户端支持一次性拉去多个消息如何做？<br>（2）当一次性拉取多个消息时，当某个消息消费失败时，offset如何处理？","like_count":0},{"had_liked":false,"id":195436,"user_name":"Alex Liu","can_delete":false,"product_type":"c1","uid":1079515,"ip_address":"","ucode":"68D1F6F9E7F05C","user_header":"https://static001.geekbang.org/account/avatar/00/10/78/db/825d3b7c.jpg","comment_is_top":false,"comment_ctime":1585187842,"is_pvip":false,"replies":[{"id":"75840","content":"谢谢🙏","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1586088868,"ip_address":"","comment_id":195436,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585187842","product_id":100035801,"comment_content":"思路都清楚，不同的细节实现需要更多的积累","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489065,"discussion_content":"谢谢🙏","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586088868,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":152054,"user_name":"刘伟","can_delete":false,"product_type":"c1","uid":1425456,"ip_address":"","ucode":"26A77D2F6429F0","user_header":"https://static001.geekbang.org/account/avatar/00/15/c0/30/53965ee0.jpg","comment_is_top":false,"comment_ctime":1573866219,"is_pvip":false,"replies":[{"id":"58711","content":"对于Kafka来说是不行的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1574121197,"ip_address":"","comment_id":152054,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573866219","product_id":100035801,"comment_content":"能不能启用多个消费者放在同一个消费者组里来消费一个分区？这样是不是相当于启动多个消费者消费同一个分区了？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474700,"discussion_content":"对于Kafka来说是不行的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574121197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147042,"user_name":"chp","can_delete":false,"product_type":"c1","uid":1112415,"ip_address":"","ucode":"F0A2442230CD45","user_header":"https://static001.geekbang.org/account/avatar/00/10/f9/5f/b0a125a9.jpg","comment_is_top":false,"comment_ctime":1572773586,"is_pvip":false,"replies":[{"id":"56854","content":"kafka本身不会空转，因为kafka消费端是拉模式，所以kafka是接受读取请求的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1572835469,"ip_address":"","comment_id":147042,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1572773586","product_id":100035801,"comment_content":"老师，kafka的消费者端也是通过轮询的形式拉取消息？kafka是否也会出现空转的情况？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473111,"discussion_content":"kafka本身不会空转，因为kafka消费端是拉模式，所以kafka是接受读取请求的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572835469,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364703,"discussion_content":"producer将消息推送到broker，consumer从broker拉取消息","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617555127,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146740,"user_name":"阿土","can_delete":false,"product_type":"c1","uid":1183019,"ip_address":"","ucode":"2DBEAD80B0CA3C","user_header":"https://static001.geekbang.org/account/avatar/00/12/0d/2b/4814d3db.jpg","comment_is_top":false,"comment_ctime":1572624588,"is_pvip":false,"replies":[{"id":"56842","content":"监控程序会放弃业务消息<br>监控程序和业务的应用程序使用的是不同的consumer group","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1572833888,"ip_address":"","comment_id":146740,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1572624588","product_id":100035801,"comment_content":"生成监控消息来监控业务消息是否有延迟，这种方式里面，监控程序在消费到业务消息怎么处理呢？老师能再详细说明一下嘛，感觉监控消息跟业务消息混在一起，不晓得怎么监控消费进度了","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473002,"discussion_content":"监控程序会放弃业务消息\n监控程序和业务的应用程序使用的是不同的consumer group","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572833888,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1246178,"avatar":"https://static001.geekbang.org/account/avatar/00/13/03/e2/5768d26e.jpg","nickname":"inrtyx","note":"","ucode":"81CD18FF34ABAB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":186947,"discussion_content":"不同consumer group 等于是广播，不同group都可以收到这条消息，只是作用不一样。一个是监控用，一个是业务用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582722059,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146585,"user_name":"蚂蚁内推+v","can_delete":false,"product_type":"c1","uid":1050508,"ip_address":"","ucode":"24B10AEE54B3FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/07/8c/0d886dcc.jpg","comment_is_top":false,"comment_ctime":1572576867,"is_pvip":false,"replies":[{"id":"56830","content":"监控程序可以监控消息队列本身是否有问题<br>","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1572832815,"ip_address":"","comment_id":146585,"utype":1}],"discussion_count":4,"race_medal":0,"score":"1572576867","product_id":100035801,"comment_content":"监控程序看消息延迟有疑惑，我理解监控程序和正常业务程序不能是同一个消费组，既然不是一个消费组消费，监控到的消息延迟就没意义了啊。","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472926,"discussion_content":"监控程序可以监控消息队列本身是否有问题\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572832815,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1489979,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/5Z6cR9cK0icIhujF4kPMqMblnKyBpzfRcUQNHEJEgFI8Sy6e9LoEGOdliac7ibbwKGAnoxcSiaB9qIyqYCJicJyaRug/132","nickname":"doge","note":"","ucode":"B3FF6617F4CEC1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43116,"discussion_content":"监控程序会放弃业务消息\n监控程序和业务的应用程序使用的是不同的consumer group  ---监控不是应该监控业务消息消费的时间延迟情况吗？如果放弃业务消息，那监控用什么用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572858029,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1489979,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/5Z6cR9cK0icIhujF4kPMqMblnKyBpzfRcUQNHEJEgFI8Sy6e9LoEGOdliac7ibbwKGAnoxcSiaB9qIyqYCJicJyaRug/132","nickname":"doge","note":"","ucode":"B3FF6617F4CEC1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43113,"discussion_content":"我也没搞明白，一个队列不是只能由一个消费者消费吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572857252,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1246178,"avatar":"https://static001.geekbang.org/account/avatar/00/13/03/e2/5768d26e.jpg","nickname":"inrtyx","note":"","ucode":"81CD18FF34ABAB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1489979,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/5Z6cR9cK0icIhujF4kPMqMblnKyBpzfRcUQNHEJEgFI8Sy6e9LoEGOdliac7ibbwKGAnoxcSiaB9qIyqYCJicJyaRug/132","nickname":"doge","note":"","ucode":"B3FF6617F4CEC1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":186952,"discussion_content":"先了解下kafka机制可能就会懂了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582722176,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":43113,"ip_address":""},"score":186952,"extra":""}]}]},{"had_liked":false,"id":146549,"user_name":"包子","can_delete":false,"product_type":"c1","uid":1089345,"ip_address":"","ucode":"6CC4EBB8CD3924","user_header":"https://static001.geekbang.org/account/avatar/00/10/9f/41/82306dfe.jpg","comment_is_top":false,"comment_ctime":1572571151,"is_pvip":false,"replies":[{"id":"56834","content":"partition只能被一个consumer group中的consumer消费","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1572833152,"ip_address":"","comment_id":146549,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1572571151","product_id":100035801,"comment_content":"Kafka一个partition只能被一个consumer消费，这里和我使用kafka有点区别。<br>不同的consumer不是应该都可以消费相同的topic相同的partition吗，各自有各自的消费offset，互不影响","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472909,"discussion_content":"partition只能被一个consumer group中的consumer消费","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572833152,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1112415,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f9/5f/b0a125a9.jpg","nickname":"chp","note":"","ucode":"F0A2442230CD45","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42759,"discussion_content":"同一个消费者组的消费者只能消费主题的单个分区，不同消费者组可以有你说的情况","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1572773355,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1246178,"avatar":"https://static001.geekbang.org/account/avatar/00/13/03/e2/5768d26e.jpg","nickname":"inrtyx","note":"","ucode":"81CD18FF34ABAB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":186955,"discussion_content":"兄弟，是你没弄清楚","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582722314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146522,"user_name":"程序水果宝","can_delete":false,"product_type":"c1","uid":1371633,"ip_address":"","ucode":"1700DDFE073A56","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqyicZYyW7ahaXgXUD8ZAS8x0t8jx5rYLhwbUCJiawRepKIZfsLdkxdQ9XQMo99c1UDibmNVfFnAqwPg/132","comment_is_top":false,"comment_ctime":1572568382,"is_pvip":false,"replies":[{"id":"56857","content":"：（  其实总体的意思是让用户的请求可以更平缓，减少对于后端服务和资源的冲击","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1572835668,"ip_address":"","comment_id":146522,"utype":1}],"discussion_count":6,"race_medal":0,"score":"1572568382","product_id":100035801,"comment_content":"老师在之前的前面有提到消息队列能够削峰填谷，削峰老师已经讲的很清楚了，我想问一下消息队列填谷的作用是怎么体现的？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472898,"discussion_content":"：（  其实总体的意思是让用户的请求可以更平缓，减少对于后端服务和资源的冲击","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572835668,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1112415,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f9/5f/b0a125a9.jpg","nickname":"chp","note":"","ucode":"F0A2442230CD45","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42760,"discussion_content":"上游急促的流量被平缓的消费，填谷有这层意思吧","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1572773495,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1232334,"avatar":"","nickname":"13761642169","note":"","ucode":"68137695FC2120","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":224949,"discussion_content":"填谷：谷就是相对于 低峰时段啊 。把高峰时段的消息平滑到 低峰时段来处理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586339013,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1022247,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/99/27/47aa9dea.jpg","nickname":"阿卡牛","note":"","ucode":"0BC43A904C3199","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42062,"discussion_content":"设定消费消息数量的最低阈值，达到这个量才统一消费呗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572578487,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1371633,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqyicZYyW7ahaXgXUD8ZAS8x0t8jx5rYLhwbUCJiawRepKIZfsLdkxdQ9XQMo99c1UDibmNVfFnAqwPg/132","nickname":"程序水果宝","note":"","ucode":"1700DDFE073A56","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1022247,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/99/27/47aa9dea.jpg","nickname":"阿卡牛","note":"","ucode":"0BC43A904C3199","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42384,"discussion_content":"那什么业务场景下会用到填谷呢，按照设定消费消息数量的最低阈值，达到这个量才统一消费的逻辑，岂不是会降低消费的速度，消息队列难道不是为了提高消息的处理速度，来提高服务的性能吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572661809,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":42062,"ip_address":""},"score":42384,"extra":""},{"author":{"id":1274495,"avatar":"https://static001.geekbang.org/account/avatar/00/13/72/7f/5da093c5.jpg","nickname":"水目沾","note":"","ucode":"FDD1D15C277D58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1371633,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqyicZYyW7ahaXgXUD8ZAS8x0t8jx5rYLhwbUCJiawRepKIZfsLdkxdQ9XQMo99c1UDibmNVfFnAqwPg/132","nickname":"程序水果宝","note":"","ucode":"1700DDFE073A56","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49514,"discussion_content":"不一定啊，看需求场景，比如你希望消息队列中的数据积累到一定程度后再消费，这就起到填谷的作用了。还有你有个思维定式：消息被马上处理才体现了服务器性能，可有的时候并要求马上消费，只要最终被消费就好了。我举个例子:用户操作最终要给他发送一封邮件，采用消息队列的方式，消费者可以等到队列中有一定数量的用户信息后统一给他们大概率会比来一个用户给他发一条邮件来的性能高。这时候不就起到填谷的作用了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573607454,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":42384,"ip_address":""},"score":49514,"extra":""}]}]}]}