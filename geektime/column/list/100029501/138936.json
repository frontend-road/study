{"id":138936,"title":"45丨数据清洗：如何使用SQL对数据进行清洗？","content":"<p>SQL可以帮我们进行数据处理，总的来说可以分成OLTP和OLAP两种方式。</p><p>OLTP称之为联机事务处理，我们之前讲解的对数据进行增删改查，SQL查询优化，事务处理等就属于OLTP的范畴。它对实时性要求高，需要将用户的数据有效地存储到数据库中，同时有时候针对互联网应用的需求，我们还需要设置数据库的主从架构保证数据库的高并发和高可用性。</p><p>OLAP称之为联机分析处理，它是对已经存储在数据库中的数据进行分析，帮我们得出报表，指导业务。它对数据的实时性要求不高，但数据量往往很大，存储在数据库（数据仓库）中的数据可能还存在数据质量的问题，比如数据重复、数据中有缺失值，或者单位不统一等，因此在进行数据分析之前，首要任务就是对收集的数据进行清洗，从而保证数据质量。</p><p>对于数据分析工作来说，好的数据质量才是至关重要的，它决定了后期数据分析和挖掘的结果上限。数据挖掘模型选择得再好，也只能最大化地将数据特征挖掘出来。</p><p>高质量的数据清洗，才有高质量的数据。今天我们就来看下，如何用SQL对数据进行清洗。</p><ol>\n<li>想要进行数据清洗有怎样的准则呢？</li>\n<li>如何使用SQL对数据进行清洗？</li>\n<li>如何对清洗之后的数据进行可视化？</li>\n</ol><h2>数据清洗的准则</h2><p>我在《数据分析实战45讲》里专门讲到过数据清洗的原则，这里为了方便你理解，我用一个数据集实例讲一遍。</p><!-- [[[read_end]]] --><p>一般而言，数据集或多或少地会存在数据质量问题。这里我们使用泰坦尼克号乘客生存预测数据集，你可以从<a href=\"https://www.kaggle.com/c/titanic/data\">GitHub</a>上下载这个数据集。</p><p>数据集格式为csv，一共有两种文件：train.csv是训练数据集，包含特征信息和存活与否的标签；test.csv是测试数据集，只包含特征信息。</p><p>数据集中包括了以下字段，具体的含义如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/e7/e0/e717facd7cd53e7e2cfb714937347fe0.png?wh=646*530\" alt=\"\"><br>\n训练集给出了891名乘客幸存与否的结果，以及相关的乘客信息。通过训练集，我们可以对数据进行建模形成一个分类器，从而对测试集中的乘客生存情况进行预测。不过今天我们并不讲解数据分析的模型，而是来看下在数据分析之前，如何对数据进行清洗。</p><p>首先，我们可以通过Navicat将CSV文件导入到MySQL数据库中，然后浏览下数据集中的前几行，可以发现数据中存在缺失值的情况还是很明显的。</p><p><img src=\"https://static001.geekbang.org/resource/image/54/77/54b1d91f186945bcbb7f3a5df3575e77.png?wh=1729*438\" alt=\"\"><br>\n数据存在数据缺失值是非常常见的情况，此外我们还需要考虑数据集中某个字段是否存在单位标识不统一，数值是否合法，以及数据是否唯一等情况。要考虑的情况非常多，这里我将数据清洗中需要考虑的规则总结为4个关键点，统一起来称之为“完全合一”准则，你可以<a href=\"https://time.geekbang.org/column/article/76307\">点这里</a>看一下。</p><p>“完全合一”是个通用的准则，针对具体的数据集存在的问题，我们还需要对症下药，采取适合的解决办法，甚至为了后续分析方便，有时我们还需要将字符类型的字段替换成数值类型，比如我们想做一个Steam游戏用户的数据分析，统计数据存储在两张表上，一个是user_game数据表，记录了用户购买的各种Steam游戏，其中数据表中的game_title字段表示玩家购买的游戏名称，它们都采用英文字符的方式。另一个是game数据表，记录了游戏的id、游戏名称等。因为这两张表存在关联关系，实际上在user_game数据表中的game_title对应了game数据表中的name，这里我们就可以用game数据表中的id替换掉原有的game_title。替换之后，我们在进行数据清洗和质量评估的时候也会更清晰，比如如果还存在某个game_title没有被替换的情况，就证明这款游戏在game数据表中缺少记录。</p><h2>使用SQL对预测数据集进行清洗</h2><p>了解了数据清洗的原则之后，下面我们就用SQL对泰坦尼克号数据集中的训练集进行数据清洗，也就是train.csv文件。我们先将这个文件导入到titanic_train数据表中：</p><p><img src=\"https://static001.geekbang.org/resource/image/5d/b5/5ddd7c23f942cc2f90ed9621cb751eb5.png?wh=1397*134\" alt=\"\"></p><h3>检查完整性</h3><p>在完整性这里，我们需要重点检查字段数值是否存在空值，在此之前，我们需要先统计每个字段空值的个数。在SQL中，我们可以分别统计每个字段的空值个数，比如针对Age字段进行空值个数的统计，使用下面的命令即可：</p><pre><code>SELECT COUNT(*) as num FROM titanic_train WHERE Age IS NULL\n</code></pre><p>运行结果为177。</p><p>当然我们也可以同时对多个字段的非空值进行统计：</p><pre><code>SELECT \nSUM((CASE WHEN Age IS NULL THEN 1 ELSE 0 END)) AS age_null_num, \nSUM((CASE WHEN Cabin IS NULL THEN 1 ELSE 0 END)) AS cabin_null_num\nFROM titanic_train\n</code></pre><p>运行结果：</p><p><img src=\"https://static001.geekbang.org/resource/image/42/bb/42d6d85c533707c29bda5a7cf95ad6bb.png?wh=698*105\" alt=\"\"><br>\n不过这种方式适用于字段个数较少的情况，如果一个数据表存在几十个，甚至更多的字段，那么采用这种方式既麻烦又容易出错。这时我们可以采用存储过程的方式，用程序来进行字段的空值检查，代码如下：</p><pre><code>CREATE PROCEDURE `check_column_null_num`(IN schema_name VARCHAR(100), IN table_name2 VARCHAR(100))\nBEGIN\n-- 数据表schema_name中的列名称\nDECLARE temp_column VARCHAR(100); \n-- 创建结束标志变量  \nDECLARE done INT DEFAULT false;\n-- 定义游标来操作每一个COLUMN_NAME\nDECLARE cursor_column CURSOR FOR\nSELECT COLUMN_NAME FROM information_schema.COLUMNS WHERE table_schema = schema_name AND table_name = table_name2;\n-- 指定游标循环结束时的返回值  \nDECLARE CONTINUE HANDLER FOR NOT FOUND SET done = true;  \n-- 打开游标\nOPEN cursor_column;\nread_loop:LOOP\n           FETCH cursor_column INTO temp_column;\n           -- 判断游标的循环是否结束 \n           IF done THEN \n                    LEAVE read_loop;\n           END IF;\n           -- 这里需要设置具体的SQL语句temp_query\n           SET @temp_query=CONCAT('SELECT COUNT(*) as ', temp_column, '_null_num FROM ', table_name2, ' WHERE ', temp_column, ' IS NULL');\n           -- 执行SQL语句\n           PREPARE stmt FROM @temp_query;           \n           EXECUTE stmt;\nEND LOOP;\n-- 关闭游标\nCLOSE cursor_column;\nEND\n</code></pre><p>我来说下这个存储过程的作用，首先我定义了两个输入的参数schema_name和table_name2，用来接收想要检查的数据库的名称以及数据表名。</p><p>然后使用游标来操作读取出来的column_name，赋值给变量temp_column。对于列名，我们需要检查它是否为空，但是这个列名在MySQL中是动态的，我们无法使用@temp_column 来表示列名，对其进行判断，在这里我们需要使用SQL拼接的方式，这里我设置了@temp_query表示想要进行查询的SQL语句，然后设置COUNT(*)的别名为动态别名，也就是temp_column加上_null_num，同样在WHERE条件判断中，我们使用temp_column进行动态列名的输出，以此来判断这个列数值是否为空。</p><p>然后我们执行这个SQL语句，提取相应的结果。</p><pre><code>call check_column_null_num('wucai', 'titanic_train'); \n</code></pre><p>运行结果如下：</p><pre><code>Age_null_num：177\nCabin_null_num：687\nEmbarked_null_num：2\nFare_null_num：0\nName_null_num：0\nParch_null_num：0\nPassengerId_null_num：0\nPclass_null_num：0\nSex_null_num：0\nSibSp_null_num：0\nSurvived_null_num：0\nTicket_null_num：0\n</code></pre><p>为了浏览方便我调整了运行结果的格式，你能看到在titanic_train数据表中，有3个字段是存在空值的，其中Cabin空值数最多为687个，Age字段空值个数177个，Embarked空值个数2个。</p><p>既然存在空值的情况，我们就需要对它进行处理。针对缺失值，我们有3种处理方式。</p><ol>\n<li>删除：删除数据缺失的记录；</li>\n<li>均值：使用当前列的均值；</li>\n<li>高频：使用当前列出现频率最高的数据。</li>\n</ol><p>对于Age字段，这里我们采用均值的方式进行填充，但如果直接使用SQL语句可能会存在问题，比如下面这样。</p><pre><code>UPDATE titanic_train SET age = (SELECT AVG(age) FROM titanic_train) WHERE age IS NULL\n</code></pre><p>这时会报错：</p><pre><code>1093 - You can't specify target table 'titanic_train' for update in FROM clause\n</code></pre><p>也就是说同一条SQL语句不能先查询出来部分内容，再同时对当前表做修改。</p><p>这种情况下，最简单的方式就是复制一个临时表titanic_train2，数据和titanic_train完全一样，然后再执行下面这条语句：</p><pre><code>UPDATE titanic_train SET age = (SELECT ROUND(AVG(age),1) FROM titanic_train2) WHERE age IS NULL\n</code></pre><p>这里使用了ROUND函数，对age平均值AVG(age)进行四舍五入，只保留小数点后一位。</p><p>针对Cabin这个字段，我们了解到这个字段代表用户的船舱位置，我们先来看下Cabin字段的数值分布情况：</p><pre><code>SELECT COUNT(cabin), COUNT(DISTINCT(cabin)) FROM titanic_train\n</code></pre><p>运行结果：</p><p><img src=\"https://static001.geekbang.org/resource/image/37/13/379348df1bdd00235646df78ebc54f13.png?wh=891*132\" alt=\"\"><br>\n从结果中能看出Cabin字段的数值分布很广，而且根据常识，我们也可以知道船舱位置每个人的差异会很大，这里既不能删除掉记录航，又不能采用均值或者高频的方式填充空值，实际上这些空值即无法填充，也无法对后续分析结果产生影响，因此我们可以不处理这些空值，保留即可。</p><p>然后我们来看下Embarked字段，这里有2个空值，我们可以采用该字段中高频值作为填充，首先我们先了解字段的分布情况使用：</p><pre><code>SELECT COUNT(*), embarked FROM titanic_train GROUP BY embarked\n</code></pre><p>运行结果：</p><p><img src=\"https://static001.geekbang.org/resource/image/0e/cc/0efcdf6248e65e482502dbe313c6efcc.png?wh=803*282\" alt=\"\"><br>\n我们可以直接用S来对缺失值进行填充：</p><pre><code>UPDATE titanic_train SET embarked = 'S' WHERE embarked IS NULL\n</code></pre><p>至此，对于titanic_train这张数据表中的缺失值我们就处理完了。</p><h3>检查全面性</h3><p>在这个过程中，我们需要观察每一列的数值情况，同时查看每个字段的类型。</p><p><img src=\"https://static001.geekbang.org/resource/image/46/77/46d0be3acf6bf3526284cf4e56202277.png?wh=1730*692\" alt=\"\"><br>\n因为数据是直接从CSV文件中导进来的，所以每个字段默认都是VARCHAR(255)类型，但很明显PassengerID、Survived、Pclass和Sibsp应该设置为INT类型，Age和Fare应该设置为DECIMAL类型，这样更方便后续的操作。使用下面的SQL命令即可：</p><pre><code>ALTER TABLE titanic_train CHANGE PassengerId PassengerId INT(11) NOT NULL PRIMARY KEY;\nALTER TABLE titanic_train CHANGE Survived Survived INT(11) NOT NULL;\nALTER TABLE titanic_train CHANGE Pclass Pclass INT(11) NOT NULL;\nALTER TABLE titanic_train CHANGE Sibsp Sibsp INT(11) NOT NULL;\nALTER TABLE titanic_train CHANGE Age Age DECIMAL(5,2) NOT NULL;\nALTER TABLE titanic_train CHANGE Fare Fare DECIMAL(7,4) NOT NULL;\n</code></pre><p>然后我们将其余的字段（除了Cabin）都进行NOT NULL，这样在后续进行数据插入或其他操作的时候，即使发现数据异常，也可以对字段进行约束规范。</p><p>在全面性这个检查阶段里，除了字段类型定义需要修改以外，我们没有发现其他问题。</p><p><strong>然后我们来检查下合法性及唯一性。</strong>合法性就是要检查数据内容、大小等是否合法，这里不存在数据合法性问题。</p><p>针对数据是否存在重复的情况，我们刚才对PassengerId 字段类型进行更新的时候设置为了主键，并没有发现异常，证明数据是没有重复的。</p><h2>对清洗之后的数据进行可视化</h2><p>我们之前讲到过如何通过Excel来导入MySQL中的数据，以及如何使用Excel来进行数据透视表和数据透视图的呈现。</p><p>这里我们使用MySQL For Excel插件来进行操作，在操作之前有两个工具需要安装。</p><p>首先是mysql-for-excel，点击<a href=\"https://dev.mysql.com/downloads/windows/excel/\">这里</a>进行下载；然后是mysql-connector-odbc，点击<a href=\"https://dev.mysql.com/downloads/connector/odbc/\">这里</a>进行下载。</p><p>安装好之后，我们新建一个空的excel文件，打开这个文件，在数据选项中可以找到“MySQL for Excel”按钮，点击进入，然后输入密码连接MySQL数据库。</p><p>然后选择我们的数据库以及数据表名称，在下面可以找到Import MySQL Data按钮，选中后将数据表导入到Excel文件中。</p><p><img src=\"https://static001.geekbang.org/resource/image/69/f0/69aa90c22d9ecf107271e1dee38675f0.png?wh=1730*732\" alt=\"\"><br>\n在“插入”选项中找到“数据透视图”，这里我们选中Survived、Sex和Embarked字段，然后将Survive字段放到图例（系列）栏中，将Sex字段放到求和值栏中，可以看到呈现出如下的数据透视表：</p><p><img src=\"https://static001.geekbang.org/resource/image/03/74/03b27cf20f5e3dc313014c1018121174.png?wh=1506*900\" alt=\"\"><br>\n从这个透视表中你可以清晰地了解到用户生存情况（Survived）与Embarked字段的关系，当然你也可以通过数据透视图进行其他字段之间关系的探索。</p><p>为了让你能更好地理解操作的过程，我录制了一段操作视频。</p><p><video poster=\"https://media001.geekbang.org/db8b935832394abeab8c5226fc5a8969/snapshots/5df1fee85a4c4c1a9211393dc35ea39e-00003.jpg\" preload=\"none\" controls=\"\"><source src=\"https://media001.geekbang.org/customerTrans/fe4a99b62946f2c31c2095c167b26f9c/1e1fd347-16d4e5518af-0000-0000-01d-dbacd.mp4\" type=\"video/mp4\"><source src=\"https://media001.geekbang.org/db8b935832394abeab8c5226fc5a8969/1fa5200c814341e19c6d602700f2ff7f-d97a045b4b0d8266650e6248565634b0-sd.m3u8\" type=\"application/x-mpegURL\"><source src=\"https://media001.geekbang.org/db8b935832394abeab8c5226fc5a8969/1fa5200c814341e19c6d602700f2ff7f-fdf87ccb8238a9b89d3ce3d8f46875f9-hd.m3u8\" type=\"application/x-mpegURL\"></video></p><h2>总结</h2><p>在数据清洗过程中，你能看到通过SQL来进行数据概览的查询还是很方便的，但是使用SQL做数据清洗，会有些繁琐，这时你可以采用存储过程对数据进行逐一处理，当然你也可以使用后端语言，比如使用Python来做具体的数据清洗。</p><p>在进行数据探索的过程中，我们可能也会使用到数据可视化，如果不采用Python进行可视化，你也可以选择使用Excel自带的数据透视图来进行可视化的呈现，它会让你对数据有个更直观的认识。</p><p><img src=\"\" alt=\"\"></p><p>今天讲解的数据清洗的实例比较简单，实际上数据清洗是个反复的过程，有时候我们需要几天时间才能把数据完整清洗好。你在工作中，会使用哪些工具进行数据清洗呢？</p><p>另外，数据缺失问题在数据清洗中非常常见，我今天列举了三种填充数据缺失的方式，分别是删除、均值和高频的方式。实际上缺失值的处理方式不局限于这三种，你可以思考下，如果数据量非常大，某个字段的取值分布也很广，那么对这个字段中的缺失值该采用哪种方式来进行数据填充呢？</p><p>欢迎你在评论区写下你的思考，也欢迎把这篇文章分享给你的朋友或者同事，一起交流一下。</p>","comments":[{"had_liked":false,"id":135594,"user_name":"JustDoDT","can_delete":false,"product_type":"c1","uid":1127175,"ip_address":"","ucode":"6AF0B80F00EAEF","user_header":"https://static001.geekbang.org/account/avatar/00/11/33/07/8f351609.jpg","comment_is_top":false,"comment_ctime":1569223912,"is_pvip":false,"replies":[{"id":"63869","content":"Godo Job","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577601378,"ip_address":"","comment_id":135594,"utype":1}],"discussion_count":1,"race_medal":0,"score":"53108831464","product_id":100029501,"comment_content":"# Mac只能用Python了<br>import pandas as pd<br>import matplotlib.pyplot as plt<br><br># 读入清洗好的数据<br>df = pd.read_csv(&#39;.&#47;titanic_train.csv&#39;)<br><br># 数据透视表用到的数据 df_temp<br>df_temp = df[[&#39;Embarked&#39;, &#39;Survived&#39;]]<br><br># 生成数据透视表<br>## 方法1 <br>table = pd.pivot_table(df_temp, index=[&#39;Embarked&#39;], columns=[&#39;Survived&#39;], aggfunc=len)<br>table = pd.pivot_table(df_temp, index=[&#39;Embarked&#39;], columns=[&#39;Survived&#39;], aggfunc=len)<br>## 方法2 数据交叉表<br>table = pd.crosstab(df.Embarked, df.Survived)<br><br># 画图<br>table.plot(kind=&#39;bar&#39;)<br>plt.show()<br><br>----------------分割线 上面是code------------------<br>talbe<br># 输出结果<br>Survived\t0\t1<br>Embarked\t\t<br>C\t75\t93<br>Q\t47\t30<br>S\t427\t219<br>","like_count":12,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468259,"discussion_content":"Godo Job","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577601378,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163611,"user_name":"骑行的掌柜J","can_delete":false,"product_type":"c1","uid":1474214,"ip_address":"","ucode":"3163102651C653","user_header":"https://static001.geekbang.org/account/avatar/00/16/7e/a6/4e331ef4.jpg","comment_is_top":false,"comment_ctime":1576755324,"is_pvip":false,"replies":[{"id":"62565","content":"感谢总结和分享","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577068181,"ip_address":"","comment_id":163611,"utype":1}],"discussion_count":3,"race_medal":0,"score":"40231460988","product_id":100029501,"comment_content":"陈老师 我对这一节的操作全部用MySQL进行了一个实操 中间遇到一些问题 我也全部做了一个整理补充 放到了我的博客里面：https:&#47;&#47;blog.csdn.net&#47;weixin_41013322&#47;article&#47;details&#47;103616783  希望对后面学习的朋友有帮助 谢谢","like_count":9,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478474,"discussion_content":"感谢总结和分享","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577068181,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1319375,"avatar":"https://static001.geekbang.org/account/avatar/00/14/21/cf/f47e092d.jpg","nickname":"咕咕咕","note":"","ucode":"E939C1FD951235","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":125483,"discussion_content":"掌柜可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578488055,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1474214,"avatar":"https://static001.geekbang.org/account/avatar/00/16/7e/a6/4e331ef4.jpg","nickname":"骑行的掌柜J","note":"","ucode":"3163102651C653","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1319375,"avatar":"https://static001.geekbang.org/account/avatar/00/14/21/cf/f47e092d.jpg","nickname":"咕咕咕","note":"","ucode":"E939C1FD951235","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":274928,"discussion_content":"哈哈哈才看到评论 谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590633293,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":125483,"ip_address":""},"score":274928,"extra":""}]}]},{"had_liked":false,"id":135747,"user_name":"海洋","can_delete":false,"product_type":"c1","uid":1369704,"ip_address":"","ucode":"F82635CDB2FB93","user_header":"https://static001.geekbang.org/account/avatar/00/14/e6/68/1871d6ba.jpg","comment_is_top":false,"comment_ctime":1569251920,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23044088400","product_id":100029501,"comment_content":"检查全面性修改字段类型时，直接使用Navicat的设计表格功能修改，更快，只不过不利于新手锻炼SQL代码能力，同时可视化这块，一般清洗后，直接导出，然后使用Python或者BI软件进行进一步分析可视化","like_count":5},{"had_liked":false,"id":157361,"user_name":"ABC","can_delete":false,"product_type":"c1","uid":1054958,"ip_address":"","ucode":"7501AD9C0C4A70","user_header":"https://static001.geekbang.org/account/avatar/00/10/18/ee/a1ed60d1.jpg","comment_is_top":false,"comment_ctime":1575120480,"is_pvip":false,"replies":[{"id":"60395","content":"感谢 数据分析也很实用，包括Kaggle比赛的场景","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1575189871,"ip_address":"","comment_id":157361,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14460022368","product_id":100029501,"comment_content":"WPS同样可以使用,这种方式很方便.所需下载的文件我放到网盘了，地址: 链接: https:&#47;&#47;pan.baidu.com&#47;s&#47;1Wrq7VcypQiofKp70YaQLBA 提取码: 2avt<br><br>看了这一课，忽然想去买数据分析的课学习一下.","like_count":3,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476407,"discussion_content":"感谢 数据分析也很实用，包括Kaggle比赛的场景","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575189871,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135588,"user_name":"JustDoDT","can_delete":false,"product_type":"c1","uid":1127175,"ip_address":"","ucode":"6AF0B80F00EAEF","user_header":"https://static001.geekbang.org/account/avatar/00/11/33/07/8f351609.jpg","comment_is_top":false,"comment_ctime":1569221941,"is_pvip":false,"replies":[{"id":"62721","content":"不错的缺失值处理方式","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577086698,"ip_address":"","comment_id":135588,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14454123829","product_id":100029501,"comment_content":"仅对某一列缺失值处理<br>时序数据：线性插值<br>频谱数据：重采样<br>……","like_count":3,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468257,"discussion_content":"不错的缺失值处理方式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577086698,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":297099,"user_name":"完美坚持","can_delete":false,"product_type":"c1","uid":1919541,"ip_address":"","ucode":"AE0261D8DDEF64","user_header":"https://static001.geekbang.org/account/avatar/00/1d/4a/35/66caeed9.jpg","comment_is_top":false,"comment_ctime":1623308767,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10213243359","product_id":100029501,"comment_content":"可以用 LOAD DATA 导入，但是要注意，在默认的严格模式下，如果设置 age 列为 numeric 的类型，将会报错无法读取，原因是空字符段无法读取。<br>即使调整为非严格模式读取成功，Age 和 cabin 空的部分，本来该是NULL，但是在SQL读取后，分别是 0 和 空字符串，并非NULL。<br>先创建表格：<br>CREATE TABLE titanic_train(<br>\tpassenger_id INT(3) PRIMARY KEY,<br>\tsurvived INT(1),<br>\tpcalss INT(1),<br>\tname VARCHAR(255),<br>\tsex VARCHAR(6),<br>\tage DECIMAL(4,2),<br>\tsibsp INT(1),<br>\tparch INT(1),<br>\tticket VARCHAR(20),<br>\tfare DECIMAL(7,4),<br>\tcabin VARCHAR(5),<br>\tembarked CHAR(1)<br>) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;<br>再导入数据：<br>LOAD DATA INFILE &#39;文件位置&#47;train.csv&#39; <br>  INTO TABLE titanic_train<br>  FIELDS TERMINATED BY &#39;,&#39; OPTIONALLY ENCLOSED BY &#39;&quot;&#39; ESCAPED BY &#39;&quot;&#39;<br>  LINES TERMINATED BY &#39;\\n&#39;<br>  IGNORE 1 LINES<br>  (passenger_id, survived, pcalss, name, sex, @age, sibsp, parch, ticket, fare, @cabin, embarked)<br>  SET age = NULLIF(@age,&#39;&#39;), cabin = NULLIF(@cabin,&#39;&#39;);","like_count":2},{"had_liked":false,"id":162413,"user_name":"哈66","can_delete":false,"product_type":"c1","uid":1089458,"ip_address":"","ucode":"77962A5807D1AE","user_header":"https://static001.geekbang.org/account/avatar/00/10/9f/b2/3d3d8e05.jpg","comment_is_top":false,"comment_ctime":1576511401,"is_pvip":false,"replies":[{"id":"62651","content":"比如Titanic乘客生存预测这个例子，里面有些字段的数值是缺失的，比如Age字段，有些乘客的Age没有，而这个字段对于后续的预测是有影响的，这里就需要通过规则来把这个字段数值进行补齐，比如采用平均值的方式","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577081259,"ip_address":"","comment_id":162413,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10166445993","product_id":100029501,"comment_content":"老是想问一下收集过来的数据为什么需要清洗啊，能具体举一些使用场景嘛？","like_count":2,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478040,"discussion_content":"比如Titanic乘客生存预测这个例子，里面有些字段的数值是缺失的，比如Age字段，有些乘客的Age没有，而这个字段对于后续的预测是有影响的，这里就需要通过规则来把这个字段数值进行补齐，比如采用平均值的方式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577081259,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150506,"user_name":"Venom","can_delete":false,"product_type":"c1","uid":1187061,"ip_address":"","ucode":"2055AC6F322781","user_header":"https://static001.geekbang.org/account/avatar/00/12/1c/f5/fd386689.jpg","comment_is_top":false,"comment_ctime":1573546798,"is_pvip":false,"replies":[{"id":"59737","content":"感谢Venom的分享","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1574738673,"ip_address":"","comment_id":150506,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10163481390","product_id":100029501,"comment_content":"找不到数据集的人，这里能下，我也是刚找到。https:&#47;&#47;download.csdn.net&#47;download&#47;qq_44851287&#47;11142360","like_count":2,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474179,"discussion_content":"感谢Venom的分享","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574738673,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1317847,"avatar":"https://static001.geekbang.org/account/avatar/00/14/1b/d7/868d26ce.jpg","nickname":"songhyunmin","note":"","ucode":"D5A98668CD8532","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":561964,"discussion_content":"收费的。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649753994,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144999,"user_name":"Elliot","can_delete":false,"product_type":"c1","uid":1030070,"ip_address":"","ucode":"CC58A6FD2F338C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b7/b6/17103195.jpg","comment_is_top":false,"comment_ctime":1572157399,"is_pvip":false,"replies":[{"id":"59758","content":"可以从kaggle上下载，也可以从github上下载 https:&#47;&#47;github.com&#47;cystanford&#47;Titanic_Data","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1574739921,"ip_address":"","comment_id":144999,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10162091991","product_id":100029501,"comment_content":"https:&#47;&#47;www.kaggle.com&#47;c&#47;titanic&#47;data 这个属于github的吗？","like_count":2,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472205,"discussion_content":"可以从kaggle上下载，也可以从github上下载 https://github.com/cystanford/Titanic_Data","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574739921,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1701702,"avatar":"https://static001.geekbang.org/account/avatar/00/19/f7/46/209ca424.jpg","nickname":"Coool","note":"","ucode":"1D1AB3270B02B9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":40627,"discussion_content":"表示注册失败，下载不了。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572245947,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135596,"user_name":"JustDoDT","can_delete":false,"product_type":"c1","uid":1127175,"ip_address":"","ucode":"6AF0B80F00EAEF","user_header":"https://static001.geekbang.org/account/avatar/00/11/33/07/8f351609.jpg","comment_is_top":false,"comment_ctime":1569224500,"is_pvip":false,"replies":[{"id":"53343","content":"加油 感谢分享","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1570423447,"ip_address":"","comment_id":135596,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10159159092","product_id":100029501,"comment_content":"我的Python代码github地址<br>https:&#47;&#47;github.com&#47;LearningChanging&#47;sql_must_konw&#47;tree&#47;master&#47;45-%E6%95%B0%E6%8D%AE%E6%B8%85%E6%B4%97%EF%BC%9A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8SQL%E5%AF%B9%E6%95%B0%E6%8D%AE%E8%BF%9B%E8%A1%8C%E6%B8%85%E6%B4%97%EF%BC%9F","like_count":2,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468260,"discussion_content":"加油 感谢分享","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570423447,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":297194,"user_name":"完美坚持","can_delete":false,"product_type":"c1","uid":1919541,"ip_address":"","ucode":"AE0261D8DDEF64","user_header":"https://static001.geekbang.org/account/avatar/00/1d/4a/35/66caeed9.jpg","comment_is_top":false,"comment_ctime":1623373696,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5918340992","product_id":100029501,"comment_content":"mport pandas as pd<br>import matplotlib.pyplot as plt<br><br># Python导入数据<br>titanic_train1 = pd.read_csv(&#39;train.csv&#39;)<br># 大致看下数据，注意到空值可以正常读取为NaN，如果直接用MySQL客户端中LOAD DATA，会出现很多问题<br>titanic_train1.head(8)<br><br># 完整性<br>titanic_train1.isnull().sum()<br><br># 简单查看数据<br>titanic_train1.describe()<br><br># Age 列均值填充<br>titanic_train1.Age.fillna(titanic_train1.Age.mean(), inplace = True)<br><br># Cabin 列的不重复取值有多少个<br>titanic_train1.Cabin.nunique()<br># Cabin 列一共有多少个非空取值<br>titanic_train1.Cabin.count()<br># 上述两步只用一步就可以得出<br>titanic_train1.Cabin.describe()<br># 只有三种取值<br>titanic_train1.Embarked.describe()<br># 统计离散的登录港口变量，每个港口的个数统计<br>titanic_train1.Embarked.value_counts()<br># 采用高频方式填充控制<br>titanic_train1.Embarked.fillna(&#39;S&#39;, inplace = True)<br><br># MySQL导入清洗好的数据<br><br># -*- coding: UTF-8 -*-<br>import mysql.connector<br># 打开数据库连接<br>db = mysql.connector.connect(<br>       host=&quot;localhost&quot;,<br>       user=&quot;root&quot;,<br>       passwd=&quot;***********&quot;, # 写上你的数据库密码<br>       database=&#39;XXX, <br>       auth_plugin=&#39;mysql_native_password&#39;<br>)<br># 获取操作游标 <br>cursor = db.cursor()<br># 执行SQL语句<br>cursor.execute(&quot;SELECT GROUP_CONCAT(column_name SEPARATOR &#39;, &#39;) FROM information_schema.COLUMNS WHERE table_name = &#39;titanic_train&#39;&quot;)<br># 获取一条数据：列名<br>data = cursor.fetchone()<br>print(&quot;列名: %s &quot; % data)<br><br>cursor.execute(&quot;SELECT * FROM titanic_train&quot;)<br># 获取一条数据<br>data = cursor.fetchall()<br>titanic_train2 = pd.DataFrame(data, <br>                              columns = [&quot;passenger_id&quot;, &quot;Survived&quot;, &quot;pcalss&quot;, &quot;name&quot;, &quot;sex&quot;, &quot;Age&quot;, &quot;Sibsp&quot;, &quot;parch&quot;, &quot;ticket&quot;, &quot;Fare&quot;, &quot;cabin&quot;, &quot;embarked&quot; ])<br><br># 数据可视化<br><br># 数据透视表<br>table = pd.crosstab(titanic_train1.Embarked, titanic_train1.Survived)<br>print(table)<br><br># 用得到的数据透视表作数据透视图<br>table.plot(kind=&#39;bar&#39;, ylabel = &#39;Frequency&#39;)<br>plt.show()<br><br># 法二直接画图<br>import seaborn as sns<br>ax = sns.countplot(x=&quot;Embarked&quot;, hue=&quot;Survived&quot;, data=titanic_train1)","like_count":1},{"had_liked":false,"id":297101,"user_name":"完美坚持","can_delete":false,"product_type":"c1","uid":1919541,"ip_address":"","ucode":"AE0261D8DDEF64","user_header":"https://static001.geekbang.org/account/avatar/00/1d/4a/35/66caeed9.jpg","comment_is_top":false,"comment_ctime":1623309510,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5918276806","product_id":100029501,"comment_content":"LOAD DATA 导入数据 （二）<br>下面就来解决这个问题：<br>很容易想到方法一，但是觉得在数据量很大的时候，方法一还要在扫一遍表，而方法二只需要在读取扫描的时候，顺带加一个判断就行了，觉得这样的话，方法一消耗了一些不必要的资源。<br><br>**方法一**：导入数据后进行修改（利用 UPDATE）<br><br>**方法二**：读取数据时进行判断<br>参考：【解决Mysql导入csv中空值变为0的问题：导入数据时设定格式】<br>https:&#47;&#47;blog.csdn.net&#47;duckyamd&#47;article&#47;details&#47;53143639<br><br>先获得所有列名，用逗号 &#39;,&#39; 分隔，这样方便我们之后写“读取数据时进行判断”的 LOAD DATA 的代码：<br><br>SELECT GROUP_CONCAT(column_name SEPARATOR &#39;, &#39;) FROM information_schema.COLUMNS WHERE table_name = &#39;titanic_train&#39;;<br>+---------------------------------------------------------------------------------------------+<br>| GROUP_CONCAT(column_name SEPARATOR &#39;, &#39;)                                                    |<br>+---------------------------------------------------------------------------------------------+<br>| passenger_id, survived, pcalss, name, sex, age, sibsp, parch, ticket, fare, cabin, embarked |<br>+---------------------------------------------------------------------------------------------+<br>1 row in set (0.02 sec)<br>参考：GROUP_CONCAT 的官方文档说明：https:&#47;&#47;dev.mysql.com&#47;doc&#47;refman&#47;8.0&#47;en&#47;aggregate-functions.html#function_group-concat<br><br>passenger_id, survived, pcalss, name, sex, age, sibsp, parch, ticket, fare, cabin, embarked<br><br># 删除表格数据<br>DELETE FROM titanic_train<br><br>-- 加载数据的时候进行判断<br>LOAD DATA INFILE &#39;C:&#47;Users&#47;ASUS&#47;Documents&#47;Python Scripts&#47;sql&#47;train_ansi.csv&#39;<br>  INTO TABLE titanic_train<br>  FIELDS TERMINATED BY &#39;,&#39; OPTIONALLY ENCLOSED BY &#39;&quot;&#39; ESCAPED BY &#39;&quot;&#39;<br>  LINES TERMINATED BY &#39;\\n&#39;<br>  IGNORE 1 LINES<br>  (passenger_id, survived, pcalss, name, sex, @age, sibsp, parch, ticket, fare, @cabin, embarked)<br>  SET age = NULLIF(@age,&#39;&#39;), cabin = NULLIF(@cabin,&#39;&#39;);<br>Query OK, 891 rows affected (0.05 sec)<br>Records: 891  Deleted: 0  Skipped: 0  Warnings: 0<br>可以看到相应空字符的位置是 null 而不是 0 了<br>NULLIF 的文档：意思就是如果这个变量是空字符就设置为null<br>https:&#47;&#47;dev.mysql.com&#47;doc&#47;refman&#47;8.0&#47;en&#47;flow-control-functions.html#function_nullif","like_count":1},{"had_liked":false,"id":297100,"user_name":"完美坚持","can_delete":false,"product_type":"c1","uid":1919541,"ip_address":"","ucode":"AE0261D8DDEF64","user_header":"https://static001.geekbang.org/account/avatar/00/1d/4a/35/66caeed9.jpg","comment_is_top":false,"comment_ctime":1623309460,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5918276756","product_id":100029501,"comment_content":"LOAD DATA 导入数据（没有Navicat）（一）：<br>CREATE TABLE titanic_train(<br>\tpassenger_id INT(3) PRIMARY KEY,<br>\tsurvived INT(1),<br>\tpcalss INT(1),<br>\tname VARCHAR(255),<br>\tsex VARCHAR(6),<br>\tage DECIMAL(4,2),<br>\tsibsp INT(1),<br>\tparch INT(1),<br>\tticket VARCHAR(20),<br>\tfare DECIMAL(7,4),<br>\tcabin VARCHAR(5),<br>\tembarked CHAR(1)<br>) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;<br><br>ALTER TABLE titanic_train MODIFY name VARCHAR(255);<br>ALTER TABLE titanic_train MODIFY sex VARCHAR(6);<br>ALTER TABLE titanic_train MODIFY age INT(2) DEFAULT NULL;<br>ALTER TABLE titanic_train MODIFY fare DECIMAL(7,4);<br>ALTER TABLE titanic_train MODIFY cabin VARCHAR(255);<br><br>SET SESSION sql_mode = &#39;&#39;; -- 严格模式下会报错：Incorrect integer value: &#39;&#39; for column &#39;出错的column&#39; at row 出错的行数<br>-- 这里将session 的 sql_mode 置为空，就不是严格模式了<br>-- 另外 这里Setting the SESSION variable affects only the current client. Each client can change its session sql_mode value at any time. <br>-- 参考：SQL mode  网址：https:&#47;&#47;dev.mysql.com&#47;doc&#47;refman&#47;8.0&#47;en&#47;sql-mode.html#sqlmode_strict_trans_tables<br><br>LOAD DATA INFILE &#39;C:&#47;Users&#47;ASUS&#47;Documents&#47;Python Scripts&#47;sql&#47;train_ansi.csv&#39; <br>  INTO TABLE titanic_train<br>  FIELDS TERMINATED BY &#39;,&#39; OPTIONALLY ENCLOSED BY &#39;&quot;&#39; ESCAPED BY &#39;&quot;&#39;<br>  LINES TERMINATED BY &#39;\\n&#39;<br>  IGNORE 1 LINES;<br><br>SHOW warnings;<br>-- 在非严格模式下，很多严格模式下的错误会退化为 warnings，此时一定要查看 warnings，发现需要改正的问题。理论上讲，除了要忽略的问题（比如这里空字符无法导入int类型）之外，没有其他问题的时候，用严格模式来忽略这些问题；但是通常我们可能还有其它应该避免、不应该忽略的问题，最好查看一下非严格模式下的warnings.<br><br>-- 官方文档和很多资料里，都是 LINES TERMINATED BY &#39;\\r\\n&#39;，但是我只有用 \\n 才能插入成功<br>-- 发现空字符串不能被正常读取为（数据库中的）NULL，cabin就算了（空字符和NULL的区别可能影响不大），但是age空字符串在非严格模式下（在严格模式下根本无法导入数据，会报错：Incorrect integer value: &#39;&#39; for column &#39;出错的column&#39; at row 出错的行数），空字符导入后就变成了0，但是那些乘客显然不是零岁啊（我的数据里面出错的是 Age 一列）<br>【mysql 导入csv空值_如何处理csv中的空值】https:&#47;&#47;blog.csdn.net&#47;weixin_29969209&#47;article&#47;details&#47;114795753 这篇文章也提到了这个问题，主要讲了讲可能会带来那些衍生的问题，并且讨论了Python和 mysql 数据交互时，空字符串读取的情况，但是并没有解决问题。<br>","like_count":1},{"had_liked":false,"id":201079,"user_name":"ClaireToffler","can_delete":false,"product_type":"c1","uid":1738030,"ip_address":"","ucode":"0C537F129F4EAF","user_header":"https://static001.geekbang.org/account/avatar/00/1a/85/2e/92c506ce.jpg","comment_is_top":false,"comment_ctime":1585712808,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5880680104","product_id":100029501,"comment_content":"LTP 称之为联机事务处理，我们之前讲解的对数据进行增删改查，SQL 查询优化，事务处理等就属于 OLTP 的范畴。它对实时性要求高，需要将用户的数据有效地存储到数据库中，同时有时候针对互联网应用的需求，我们还需要设置数据库的主从架构保证数据库的高并发和高可用性。 忽然感觉平时好像只接触了这个领域","like_count":1},{"had_liked":false,"id":166715,"user_name":"阿飛","can_delete":false,"product_type":"c1","uid":1035813,"ip_address":"","ucode":"215CEA4F7838B8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ce/25/70634e86.jpg","comment_is_top":false,"comment_ctime":1577551635,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5872518931","product_id":100029501,"comment_content":"有没有oracle for excel<br>","like_count":1},{"had_liked":false,"id":321091,"user_name":"Wry","can_delete":false,"product_type":"c1","uid":2740574,"ip_address":"","ucode":"D1B1F21907E067","user_header":"https://static001.geekbang.org/account/avatar/00/29/d1/5e/2b7e685a.jpg","comment_is_top":false,"comment_ctime":1636677339,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636677339","product_id":100029501,"comment_content":"老师，看了这个我对sum和count的使用有些懵，多个字段查询是否有null值的情况的时候为什么这里SELECT <br>SUM((CASE WHEN Age IS NULL THEN 1 ELSE 0 END)) AS age_null_num, <br>SUM((CASE WHEN Cabin IS NULL THEN 1 ELSE 0 END)) AS cabin_null_num<br>FROM titanic_train使用sum而不用count呢？如果不用存储过程还有其他方法可以查多个字段null值情况吗？","like_count":0}]}