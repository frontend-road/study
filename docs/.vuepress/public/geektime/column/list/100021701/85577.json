{"id":85577,"title":"39丨数据挖掘实战（1）：信用卡违约率分析","content":"<p>今天我来带你做一个数据挖掘的项目。在数据挖掘的过程中，我们经常会遇到一些问题，比如：如何选择各种分类器，到底选择哪个分类算法，是SVM，决策树，还是KNN？如何优化分类器的参数，以便得到更好的分类准确率？</p><p>这两个问题，是数据挖掘核心的问题。当然对于一个新的项目，我们还有其他的问题需要了解，比如掌握数据探索和数据可视化的方式，还需要对数据的完整性和质量做评估。这些内容我在之前的课程中都有讲到过。</p><p>今天的学习主要围绕下面的三个目标，并通过它们完成信用卡违约率项目的实战，这三个目标分别是：</p><ol>\n<li>\n<p>创建各种分类器，包括已经掌握的SVM、决策树、KNN分类器，以及随机森林分类器；</p>\n</li>\n<li>\n<p>掌握GridSearchCV工具，优化算法模型的参数；</p>\n</li>\n<li>\n<p>使用Pipeline管道机制进行流水线作业。因为在做分类之前，我们还需要一些准备过程，比如数据规范化，或者数据降维等。</p>\n</li>\n</ol><h2>构建随机森林分类器</h2><p>在算法篇中，我主要讲了数据挖掘十大经典算法。实际工作中，你也可能会用到随机森林。</p><p>随机森林的英文是Random Forest，英文简写是RF。它实际上是一个包含多个决策树的分类器，每一个子分类器都是一棵CART分类回归树。所以随机森林既可以做分类，又可以做回归。当它做分类的时候，输出结果是每个子分类器的分类结果中最多的那个。你可以理解是每个分类器都做投票，取投票最多的那个结果。当它做回归的时候，输出结果是每棵CART树的回归结果的平均值。</p><!-- [[[read_end]]] --><p>在sklearn中，我们使用RandomForestClassifier()构造随机森林模型，函数里有一些常用的构造参数：</p><p><img src=\"https://static001.geekbang.org/resource/image/35/f9/352035fe3e92d412d652fd55c77f23f9.png?wh=629*210\" alt=\"\"><br>\n当我们创建好之后，就可以使用fit函数拟合，使用predict函数预测。</p><h2>使用GridSearchCV工具对模型参数进行调优</h2><p>在做分类算法的时候，我们需要经常调节网络参数（对应上面的构造参数），目的是得到更好的分类结果。实际上一个分类算法有很多参数，取值范围也比较广，那么该如何调优呢？</p><p>Python给我们提供了一个很好用的工具GridSearchCV，它是Python的参数自动搜索模块。我们只要告诉它想要调优的参数有哪些以及参数的取值范围，它就会把所有的情况都跑一遍，然后告诉我们哪个参数是最优的，结果如何。</p><p>使用GridSearchCV模块需要先引用工具包，方法如下：</p><pre><code>from sklearn.model_selection import GridSearchCV\n</code></pre><p>然后我们使用GridSearchCV(estimator, param_grid, cv=None, scoring=None)构造参数的自动搜索模块，这里有一些主要的参数需要说明下：</p><p><img src=\"https://static001.geekbang.org/resource/image/70/fd/7042cb450e5dcac9306d0178265642fd.png?wh=630*183\" alt=\"\"><br>\n构造完GridSearchCV之后，我们就可以使用fit函数拟合训练，使用predict函数预测，这时预测采用的是最优参数情况下的分类器。</p><p>这里举一个简单的例子，我们用sklearn自带的IRIS数据集，采用随机森林对IRIS数据分类。假设我们想知道n_estimators在1-10的范围内取哪个值的分类结果最好，可以编写代码：</p><pre><code># -*- coding: utf-8 -*-\n# 使用RandomForest对IRIS数据集进行分类\n# 利用GridSearchCV寻找最优参数\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.datasets import load_iris\nrf = RandomForestClassifier()\nparameters = {&quot;n_estimators&quot;: range(1,11)}\niris = load_iris()\n# 使用GridSearchCV进行参数调优\nclf = GridSearchCV(estimator=rf, param_grid=parameters)\n# 对iris数据集进行分类\nclf.fit(iris.data, iris.target)\nprint(&quot;最优分数： %.4lf&quot; %clf.best_score_)\nprint(&quot;最优参数：&quot;, clf.best_params_)\n运行结果如下：\n最优分数： 0.9667\n最优参数： {'n_estimators': 6}\n</code></pre><p>你能看到当我们采用随机森林作为分类器的时候，最优准确率是0.9667，当n_estimators=6的时候，是最优参数，也就是随机森林一共有6个子决策树。</p><h2>使用Pipeline管道机制进行流水线作业</h2><p>做分类的时候往往都是有步骤的，比如先对数据进行规范化处理，你也可以用PCA方法（一种常用的降维方法）对数据降维，最后使用分类器分类。</p><p>Python有一种Pipeline管道机制。管道机制就是让我们把每一步都按顺序列下来，从而创建Pipeline流水线作业。每一步都采用(‘名称’, 步骤)的方式来表示。</p><p>我们需要先采用StandardScaler方法对数据规范化，即采用数据规范化为均值为0，方差为1的正态分布，然后采用PCA方法对数据进行降维，最后采用随机森林进行分类。</p><p>具体代码如下：</p><pre><code>from sklearn.model_selection import GridSearchCV\npipeline = Pipeline([\n        ('scaler', StandardScaler()),\n        ('pca', PCA()),\n        ('randomforestclassifier', RandomForestClassifier())\n])\n</code></pre><p>那么我们现在采用Pipeline管道机制，用随机森林对IRIS数据集做一下分类。先用StandardScaler方法对数据规范化，然后再用随机森林分类，编写代码如下：</p><pre><code># -*- coding: utf-8 -*-\n# 使用RandomForest对IRIS数据集进行分类\n# 利用GridSearchCV寻找最优参数,使用Pipeline进行流水作业\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.datasets import load_iris\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.pipeline import Pipeline\nrf = RandomForestClassifier()\nparameters = {&quot;randomforestclassifier__n_estimators&quot;: range(1,11)}\niris = load_iris()\npipeline = Pipeline([\n        ('scaler', StandardScaler()),\n        ('randomforestclassifier', rf)\n])\n# 使用GridSearchCV进行参数调优\nclf = GridSearchCV(estimator=pipeline, param_grid=parameters)\n# 对iris数据集进行分类\nclf.fit(iris.data, iris.target)\nprint(&quot;最优分数： %.4lf&quot; %clf.best_score_)\nprint(&quot;最优参数：&quot;, clf.best_params_)\n运行结果：\n最优分数： 0.9667\n最优参数： {'randomforestclassifier__n_estimators': 9}\n</code></pre><p>你能看到是否采用数据规范化对结果还是有一些影响的，有了GridSearchCV和Pipeline这两个工具之后，我们在使用分类器的时候就会方便很多。</p><h2>对信用卡违约率进行分析</h2><p>我们现在来做一个信用卡违约率的项目，这个数据集你可以从GitHub上下载：<a href=\"https://github.com/cystanford/credit_default\">https://github.com/cystanford/credit_default</a>。</p><p>这个数据集是台湾某银行2005年4月到9月的信用卡数据，数据集一共包括25个字段，具体含义如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/17/88/1730fb3a809c99950739e7f50e1a6988.jpg?wh=627*843\" alt=\"\"><br>\n现在我们的目标是要针对这个数据集构建一个分析信用卡违约率的分类器。具体选择哪个分类器，以及分类器的参数如何优化，我们可以用GridSearchCV这个工具跑一遍。</p><p>先梳理下整个项目的流程：</p><p><img src=\"https://static001.geekbang.org/resource/image/92/a5/929c96584cbc25972f63ef39101c96a5.jpg?wh=2350*1079\" alt=\"\"></p><ol>\n<li>\n<p>加载数据；</p>\n</li>\n<li>\n<p>准备阶段：探索数据，采用数据可视化方式可以让我们对数据有更直观的了解，比如我们想要了解信用卡违约率和不违约率的人数。因为数据集没有专门的测试集，我们还需要使用train_test_split划分数据集。</p>\n</li>\n<li>\n<p>分类阶段：之所以把数据规范化放到这个阶段，是因为我们可以使用Pipeline管道机制，将数据规范化设置为第一步，分类为第二步。因为我们不知道采用哪个分类器效果好，所以我们需要多用几个分类器，比如SVM、决策树、随机森林和KNN。然后通过GridSearchCV工具，找到每个分类器的最优参数和最优分数，最终找到最适合这个项目的分类器和该分类器的参数。</p>\n</li>\n</ol><p>基于上面的流程，具体代码如下：</p><pre><code># -*- coding: utf-8 -*-\n# 信用卡违约率分析\nimport pandas as pd\nfrom sklearn.model_selection import learning_curve, train_test_split,GridSearchCV\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\n# 数据加载\ndata = data = pd.read_csv('./UCI_Credit_Card.csv')\n# 数据探索\nprint(data.shape) # 查看数据集大小\nprint(data.describe()) # 数据集概览\n# 查看下一个月违约率的情况\nnext_month = data['default.payment.next.month'].value_counts()\nprint(next_month)\ndf = pd.DataFrame({'default.payment.next.month': next_month.index,'values': next_month.values})\nplt.rcParams['font.sans-serif']=['SimHei'] #用来正常显示中文标签\nplt.figure(figsize = (6,6))\nplt.title('信用卡违约率客户\\n (违约：1，守约：0)')\nsns.set_color_codes(&quot;pastel&quot;)\nsns.barplot(x = 'default.payment.next.month', y=&quot;values&quot;, data=df)\nlocs, labels = plt.xticks()\nplt.show()\n# 特征选择，去掉ID字段、最后一个结果字段即可\ndata.drop(['ID'], inplace=True, axis =1) #ID这个字段没有用\ntarget = data['default.payment.next.month'].values\ncolumns = data.columns.tolist()\ncolumns.remove('default.payment.next.month')\nfeatures = data[columns].values\n# 30%作为测试集，其余作为训练集\ntrain_x, test_x, train_y, test_y = train_test_split(features, target, test_size=0.30, stratify = target, random_state = 1)\n    \n# 构造各种分类器\nclassifiers = [\n    SVC(random_state = 1, kernel = 'rbf'),    \n    DecisionTreeClassifier(random_state = 1, criterion = 'gini'),\n    RandomForestClassifier(random_state = 1, criterion = 'gini'),\n    KNeighborsClassifier(metric = 'minkowski'),\n]\n# 分类器名称\nclassifier_names = [\n            'svc', \n            'decisiontreeclassifier',\n            'randomforestclassifier',\n            'kneighborsclassifier',\n]\n# 分类器参数\nclassifier_param_grid = [\n            {'svc__C':[1], 'svc__gamma':[0.01]},\n            {'decisiontreeclassifier__max_depth':[6,9,11]},\n            {'randomforestclassifier__n_estimators':[3,5,6]} ,\n            {'kneighborsclassifier__n_neighbors':[4,6,8]},\n]\n \n# 对具体的分类器进行GridSearchCV参数调优\ndef GridSearchCV_work(pipeline, train_x, train_y, test_x, test_y, param_grid, score = 'accuracy'):\n    response = {}\n    gridsearch = GridSearchCV(estimator = pipeline, param_grid = param_grid, scoring = score)\n    # 寻找最优的参数 和最优的准确率分数\n    search = gridsearch.fit(train_x, train_y)\n    print(&quot;GridSearch最优参数：&quot;, search.best_params_)\n    print(&quot;GridSearch最优分数： %0.4lf&quot; %search.best_score_)\n\tpredict_y = gridsearch.predict(test_x)\n    print(&quot;准确率 %0.4lf&quot; %accuracy_score(test_y, predict_y))\n    response['predict_y'] = predict_y\n    response['accuracy_score'] = accuracy_score(test_y,predict_y)\n    return response\n \nfor model, model_name, model_param_grid in zip(classifiers, classifier_names, classifier_param_grid):\n    pipeline = Pipeline([\n            ('scaler', StandardScaler()),\n            (model_name, model)\n    ])\n    result = GridSearchCV_work(pipeline, train_x, train_y, test_x, test_y, model_param_grid , score = 'accuracy')\n</code></pre><pre><code>运行结果：\n(30000, 25)\n                 ID             ...              default.payment.next.month\ncount  30000.000000             ...                            30000.000000\nmean   15000.500000             ...                                0.221200\nstd     8660.398374             ...                                0.415062\nmin        1.000000             ...                                0.000000\n25%     7500.750000             ...                                0.000000\n50%    15000.500000             ...                                0.000000\n75%    22500.250000             ...                                0.000000\nmax    30000.000000             ...                                1.000000\n\n[8 rows x 25 columns]\n\nGridSearch最优参数： {'svc__C': 1, 'svc__gamma': 0.01}\nGridSearch最优分数： 0.8174\n准确率 0.8172\nGridSearch最优参数： {'decisiontreeclassifier__max_depth': 6}\nGridSearch最优分数： 0.8186\n准确率 0.8113\nGridSearch最优参数： {'randomforestclassifier__n_estimators': 6}\nGridSearch最优分数： 0.7998\n准确率 0.7994\nGridSearch最优参数： {'kneighborsclassifier__n_neighbors': 8}\nGridSearch最优分数： 0.8040\n准确率 0.8036\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/18/72/187d0233d4fb5f07a9653e5ae4754372.png?wh=1729*1774\" alt=\"\"><br>\n从结果中，我们能看到SVM分类器的准确率最高，测试准确率为0.8172。</p><p>在决策树分类中，我设置了3种最大深度，当最大深度=6时结果最优，测试准确率为0.8113；在随机森林分类中，我设置了3个决策树个数的取值，取值为6时结果最优，测试准确率为0.7994；在KNN分类中，我设置了3个n的取值，取值为8时结果最优，测试准确率为0.8036。</p><h2>总结</h2><p>今天我给你讲了随机森林的概念及工具的使用，另外针对数据挖掘算法中经常采用的参数调优，也介绍了GridSearchCV工具这个利器。并将这两者结合起来，在信用卡违约分析这个项目中进行了使用。</p><p>很多时候，我们不知道该采用哪种分类算法更适合。即便是对于一种分类算法，也有很多参数可以调优，每个参数都有一定的取值范围。我们可以把想要采用的分类器，以及这些参数的取值范围都设置到数组里，然后使用GridSearchCV工具进行调优。</p><p><img src=\"https://static001.geekbang.org/resource/image/14/16/14f9cddc17d6cceb0b8cbc4381c65216.png?wh=1728*1019\" alt=\"\"><br>\n今天我们讲了如何使用GridSearchCV做参数调优，你可以说说你的理解，如果有使用的经验也可以分享下。</p><p>另外针对信用卡违约率分析这个项目，我们使用了SVM、决策树、随机森林和KNN分类器，你能不能编写代码使用AdaBoost分类器做分类呢？其中n_estimators的取值有10、50、100三种可能，你可以使用GridSearchCV运行看看最优参数是多少，测试准确率是多少？</p><p>欢迎你在评论区与我分享你的答案，如果有问题也可以写在评论区。如果你觉得这篇文章有价值，欢迎把它分享给你的朋友或者同事。</p><p></p>","neighbors":{"left":{"article_title":"38丨数据可视化实战：如何给毛不易的歌曲做词云展示？","id":85158},"right":{"article_title":"40丨数据挖掘实战（2）：信用卡诈骗分析","id":85987}},"comments":[{"had_liked":false,"id":75780,"user_name":"柚子","can_delete":false,"product_type":"c1","uid":1382672,"ip_address":"","ucode":"721F6C7F5DD303","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI45zO9GOMquk9JymTibN9sC25Sy4WtsDGRQzIRVIoIzPnaJGKmGe3jXqxP0zKZyTYazrXHBGYjBzw/132","comment_is_top":false,"comment_ctime":1552467995,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"130401486875","product_id":100021701,"comment_content":"老师， 使用GridSearchCV 工具多次执行每次结果都不一样，是怎么判定最优分数就是0.9667，最优参数就是6呢？","like_count":31,"discussions":[{"author":{"id":1914504,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/36/88/20b6a6ee.jpg","nickname":"Simon","note":"","ucode":"A8A2E3E57BD029","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":232011,"discussion_content":"正常，本文使用了随机森林。随机森林每建一个树都有两次随机抽样：样本随机抽样和属性随机抽样。本质是为了防止过拟合，同时每次运行结果不一样。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1586845480,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1073136,"avatar":"https://static001.geekbang.org/account/avatar/00/10/5f/f0/a73607b3.jpg","nickname":"victor666","note":"","ucode":"20C9BE10E07D55","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":211634,"discussion_content":"是不是使用随机数的地方没有指定随机种子。例如划分测试与训练集 这样每次的划分结果都不一样 最好的结果自然不一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584872287,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1674204,"avatar":"https://static001.geekbang.org/account/avatar/00/19/8b/dc/925e0f8a.jpg","nickname":"换个调调","note":"","ucode":"F781C8EBB6D529","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":206523,"discussion_content":"同问，想了好久也没有弄懂，为什么每次结果都不一样，希望老师解惑！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584411691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130634,"user_name":"西湖晨曦","can_delete":false,"product_type":"c1","uid":1582253,"ip_address":"","ucode":"38FA2603461C5E","user_header":"https://static001.geekbang.org/account/avatar/00/18/24/ad/54571ab3.jpg","comment_is_top":false,"comment_ctime":1567498340,"is_pvip":false,"replies":[{"id":"53382","content":"用数据分析做分类预测，也就是遇到了其他的用户数据，通过模型进行分类预测，我们有多少准确率可以预测出来他是否是欺诈用户。","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1570431510,"ip_address":"","comment_id":130634,"utype":1}],"discussion_count":8,"race_medal":0,"score":"100351746148","product_id":100021701,"comment_content":"我是银行信用卡部的从业人员，也很喜欢数据分析。<br><br>但是看了这个案例，感觉这个案例能够给信用卡的数据分析带来什么呢？我的意思是，能够分析出什么问题吗？银行信用卡部应该在持卡人用卡的什么阶段开始开始要采取措施防止诈骗？什么类型的客户容易诈骗？---感觉这个案例就是从数字到数字，没有能够给真实业务带来什么帮助。<br><br>-----也想对从事数据分析的人员提个醒，数据分析不是从纯数字到纯数字的纯学术研究，应该是联系实际工作，能够给实际工作带来帮助的啊！联系到此案例，应该是能够给银行信用卡部的防欺诈工作带来提升的啊~分析了什么出来？银行的哪个环节应该提升以防止欺诈？","like_count":24,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466042,"discussion_content":"用数据分析做分类预测，也就是遇到了其他的用户数据，通过模型进行分类预测，我们有多少准确率可以预测出来他是否是欺诈用户。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570431510,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1131414,"avatar":"https://static001.geekbang.org/account/avatar/00/11/43/96/5bbfc853.jpg","nickname":"superMO潼","note":"","ucode":"AEE2274BF75E44","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293508,"discussion_content":"有监督学习，通过标注的好坏客户建立模型，新客户来的时候预测是不是坏客户，坏客户就拒了。不过一般实践过程中常用评分卡分贷前，贷中，贷后建立不同模型，对应贷前反欺诈，授信额度测算，贷中风险预警，贷后催收","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1595561387,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1828866,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erJEqa95HvFXL7kN2mT4SLWMhMb6XscnlTXN9EZq9fLuialHzQVDdoT0icGziacvs8YibxGdHej1JxR4w/132","nickname":"陶冀","note":"","ucode":"5B7B21E61BDD32","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590032,"discussion_content":"这里的数据给了是否违约的结果数据，你用有结果的数据训练好模型后。对于以后新的客户数据，可以用来预测是否违约。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665481564,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"中国香港"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1919541,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/4a/35/66caeed9.jpg","nickname":"完美坚持","note":"","ucode":"AE0261D8DDEF64","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369333,"discussion_content":"给您点赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619007371,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1149004,"avatar":"https://static001.geekbang.org/account/avatar/00/11/88/4c/2c3d2c7d.jpg","nickname":"小强","note":"","ucode":"CC3D3A9E5D9A42","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308036,"discussion_content":"学到这里，这是学习者最大的困惑，不知道是不是我脑子不好使，总觉得差很多，学的不好，没太大价值，还是需要看其他资料来学习，把不懂的再重新找资料学习，只起到了长见识的作用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600828104,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1073136,"avatar":"https://static001.geekbang.org/account/avatar/00/10/5f/f0/a73607b3.jpg","nickname":"victor666","note":"","ucode":"20C9BE10E07D55","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":211637,"discussion_content":"棒！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584872326,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1903481,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/0b/79/4202ffc6.jpg","nickname":"🌕","note":"","ucode":"85899FCC7FB482","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":201857,"discussion_content":"谢谢您的提醒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583845403,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1582253,"avatar":"https://static001.geekbang.org/account/avatar/00/18/24/ad/54571ab3.jpg","nickname":"西湖晨曦","note":"","ucode":"38FA2603461C5E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36307,"discussion_content":"谢谢老师的回复~\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571361375,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75573,"user_name":"vortual","can_delete":false,"product_type":"c1","uid":1258515,"ip_address":"","ucode":"1161CD103110C0","user_header":"https://static001.geekbang.org/account/avatar/00/13/34/13/d43ff5ed.jpg","comment_is_top":false,"comment_ctime":1552436800,"is_pvip":false,"replies":[{"id":"64431","content":"深度学习 是帮你发现一些不太明显（线性情况下不容易）发现的规律。有时候 你可以先用机器学习得到一个baseline，然后再考虑用 NN模型，毕竟深度模型计算量大，有时候还需要GPU","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577619148,"ip_address":"","comment_id":75573,"utype":1}],"discussion_count":1,"race_medal":0,"score":"57387011648","product_id":100021701,"comment_content":"老师，实际工作中数据量大的话跑个模型应该要不少时间，应该不允许这么去试所有参数和那么多算法吧？还有一个疑问是数据量超过一定量是不是要用深度学习了？希望老师能解惑下","like_count":14,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442949,"discussion_content":"深度学习 是帮你发现一些不太明显（线性情况下不容易）发现的规律。有时候 你可以先用机器学习得到一个baseline，然后再考虑用 NN模型，毕竟深度模型计算量大，有时候还需要GPU","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577619148,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":202871,"user_name":"CR77","can_delete":false,"product_type":"c1","uid":1933444,"ip_address":"","ucode":"138F832024B01E","user_header":"https://static001.geekbang.org/account/avatar/00/1d/80/84/a7af5eae.jpg","comment_is_top":false,"comment_ctime":1586078287,"is_pvip":false,"replies":[{"id":"104327","content":"1. 是否需要归一化，取决于所使用的模型。如果是树模型，只在意他们的相对大小不在意实际距离，其实可以不归一化。<br>2. 不错的想法，可以尝试下。<br>3. 下采样是解决样本极度不均衡的常用方法，有同学也确实得到了不错的效果，可以尝试下。<br>4. 在实际应用中，可以利用该模型对高风险客户的额度进行限制，也可以用来限制他们的贷款等等。","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1617902518,"ip_address":"","comment_id":202871,"utype":1}],"discussion_count":2,"race_medal":0,"score":"23060914767","product_id":100021701,"comment_content":"在做的时候又如下问题，我觉得需要注意：<br>第一、PAY_0到PAY_6经典指标性的特征，但是具体什么意义不知道，个人认为不应该草草的归一化。<br>第二，每月账单金额体现的是客户的消费水平，每月的还款金额体现的是客户的实际经济情况（当然不排除那些，有钱但是不还款的情况），所以我想能不能将（每月的账单金额 - 每月的还款金额）设置为一个新的特征，可能能更加贴近用户的实际经济情况。<br>第三，是否需要采用下采样？因为毕竟正负样本的比例是有一定的差距的，我们模型训练出来的效果并不是很好是不是有关系<br>第四，问题的实际意义的分析，这是一个违约率的数据挖掘，更多的可以说是一种分析，我们得到的结果是什么，是一个新的客户在产生种种交易之后，他违约的可能，这是我能想到的意义，放到商业上的话我们实际上是要做出怎么样的决策呢？","like_count":5,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490703,"discussion_content":"1. 是否需要归一化，取决于所使用的模型。如果是树模型，只在意他们的相对大小不在意实际距离，其实可以不归一化。\n2. 不错的想法，可以尝试下。\n3. 下采样是解决样本极度不均衡的常用方法，有同学也确实得到了不错的效果，可以尝试下。\n4. 在实际应用中，可以利用该模型对高风险客户的额度进行限制，也可以用来限制他们的贷款等等。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617902518,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2864924,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/b7/1c/b5c9456b.jpg","nickname":"Jeff","note":"","ucode":"F9230D1FA48AE1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566104,"discussion_content":"第二个问题，如果【每月的账单金额 - 每月的还款金额）设置为一个新的特征】，这个新特征和原特征是完全线性相关的，这样是不是不合理?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650603140,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75867,"user_name":"王彬成","can_delete":false,"product_type":"c1","uid":1015045,"ip_address":"","ucode":"386803B8FC2DD5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/05/4bad0c7c.jpg","comment_is_top":false,"comment_ctime":1552484768,"is_pvip":false,"replies":[{"id":"64423","content":"Good Job","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577618958,"ip_address":"","comment_id":75867,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23027321248","product_id":100021701,"comment_content":"GridSearch最优参数： {&#39;n_estimators&#39;: 10}<br>GridSearch最优分数： 0.8187<br>准确率 0.8129<br>-----代码------<br><br># -*- coding: utf-8 -*-<br># 信用卡违约率分析<br>import pandas as pd<br>from sklearn.model_selection import learning_curve, train_test_split,GridSearchCV<br>from sklearn.preprocessing import StandardScaler<br>from sklearn.pipeline import Pipeline<br>from sklearn.metrics import accuracy_score<br>from sklearn.ensemble import AdaBoostClassifier<br><br>from matplotlib import pyplot as plt<br>import seaborn as sns<br># 数据加载<br>data=data=pd.read_csv(&#39;.&#47;credit_default-master&#47;UCI_Credit_Card.csv&#39;)<br># 数据探索<br>print(data.shape) # 查看数据集大小<br>print(data.describe()) # 数据集概览<br># 查看下一个月违约率的情况<br>next_month = data[&#39;default.payment.next.month&#39;].value_counts()<br>print(next_month)<br>df = pd.DataFrame({&#39;default.payment.next.month&#39;: next_month.index,&#39;values&#39;: next_month.values})<br>plt.rcParams[&#39;font.sans-serif&#39;]=[&#39;SimHei&#39;] #用来正常显示中文标签<br>plt.figure(figsize = (6,6))<br>plt.title(&#39;信用卡违约率客户\\n (违约：1，守约：0)&#39;)<br>sns.set_color_codes(&quot;pastel&quot;)<br>sns.barplot(x = &#39;default.payment.next.month&#39;, y=&quot;values&quot;, data=df)<br>locs, labels = plt.xticks()<br>plt.show()<br># 特征选择，去掉ID字段、最后一个结果字段即可<br>data.drop([&#39;ID&#39;], inplace=True, axis =1) #ID这个字段没有用<br>target = data[&#39;default.payment.next.month&#39;].values<br>columns = data.columns.tolist()<br>columns.remove(&#39;default.payment.next.month&#39;)<br>features = data[columns].values<br># 30%作为测试集，其余作为训练集<br>train_x, test_x, train_y, test_y = train_test_split(features, target, test_size=0.30, stratify = target, random_state = 1)<br><br><br>#分类器<br>ada=AdaBoostClassifier( random_state=1)<br>#需要调整的参数<br>parameters={&#39;n_estimators&#39;:[10,50,100]}<br><br># 使用 GridSearchCV 进行参数调优<br>clf=GridSearchCV(estimator=ada,param_grid=parameters,scoring = &#39;accuracy&#39;)<br><br>clf.fit(train_x,train_y)<br>print(&quot;GridSearch最优参数：&quot;, clf.best_params_)<br>print(&quot;GridSearch最优分数： %0.4lf&quot; %clf.best_score_)<br>predict_y=clf.predict(test_x)<br>print(&quot;准确率 %0.4lf&quot; %accuracy_score(test_y, predict_y))<br> <br><br><br>","like_count":5,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443064,"discussion_content":"Good Job","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577618958,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75728,"user_name":"跳跳","can_delete":false,"product_type":"c1","uid":1172803,"ip_address":"","ucode":"80B697B89E1A0B","user_header":"https://static001.geekbang.org/account/avatar/00/11/e5/43/7bc7cfe3.jpg","comment_is_top":false,"comment_ctime":1552459671,"is_pvip":false,"replies":[{"id":"64430","content":"对的 给一个范围让GridSearchCV 利用穷举找到最优","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577619084,"ip_address":"","comment_id":75728,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23027296151","product_id":100021701,"comment_content":"1.对GridSearchCV的理解：就是在之前的经验的基础上选择了一些较好的取值备选，然后分别去试，得到一个好的性能。比直接选择参数多了一些保障，但是也增加一些计算负担。<br>2.在老师代码的基础上添加了adaboost分类，使用adaboost默认的分类器，结果是在n_estimators=10的时候取得最优性能，准确率是0.8187<br>GridSearch 最优参数： {&#39;AdaBoostClassifier__n_estimators&#39;: 10}<br>GridSearch 最优分数： 0.8187<br> 准确率 0.8129","like_count":5,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443004,"discussion_content":"对的 给一个范围让GridSearchCV 利用穷举找到最优","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577619084,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78198,"user_name":"third","can_delete":false,"product_type":"c1","uid":1025114,"ip_address":"","ucode":"9A37408A834F0B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/5a/e708e423.jpg","comment_is_top":false,"comment_ctime":1553091893,"is_pvip":false,"replies":[{"id":"64390","content":"可以屏蔽 warning","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577618214,"ip_address":"","comment_id":78198,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18732961077","product_id":100021701,"comment_content":"提问：老是出现futureWarning,是什么情况<br><br>GridSearch最优参数： {&#39;n_estimators&#39;: 10}<br>GridSearch最优分数： 0.8187<br>准确率 0.8129","like_count":4,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444001,"discussion_content":"可以屏蔽 warning","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577618214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1022786,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/9b/42/aeb79b35.jpg","nickname":"Ling","note":"","ucode":"EE15D1ABDB073B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":55935,"discussion_content":"from warnings import simplefilter\n\nsimplefilter(action=&#39;ignore&#39;, category=FutureWarning)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574414320,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75873,"user_name":"王彬成","can_delete":false,"product_type":"c1","uid":1015045,"ip_address":"","ucode":"386803B8FC2DD5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/05/4bad0c7c.jpg","comment_is_top":false,"comment_ctime":1552485879,"is_pvip":false,"replies":[{"id":"64428","content":"感谢分享","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577619039,"ip_address":"","comment_id":75873,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18732355063","product_id":100021701,"comment_content":"使用 Pipeline 管道机制的优势，参考资料：<br>https:&#47;&#47;www.jianshu.com&#47;p&#47;9c2c8c8ef42d<br>https:&#47;&#47;blog.csdn.net&#47;qq_41598851&#47;article&#47;details&#47;80957893<br><br>个人理解：<br>Pipeline是将数据处理流程的共同部分提取出来，简化代码。<br>以本文最后的编程案例为例，共同部分是“数据规范化”和“使用数据分类算法”，将俩部分封装。<br>在每一次循环“算法”时，pipeline里头完成算法更新。GridSearchCV引用固定的pipeline，实则算法已经更新了。这样减少了多余代码的书写。<br>","like_count":4,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443069,"discussion_content":"感谢分享","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577619039,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75832,"user_name":"白夜","can_delete":false,"product_type":"c1","uid":1354449,"ip_address":"","ucode":"7AABFA7C04EA34","user_header":"https://static001.geekbang.org/account/avatar/00/14/aa/d1/076482f3.jpg","comment_is_top":false,"comment_ctime":1552478093,"is_pvip":false,"replies":[{"id":"64425","content":"Good Job","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577618998,"ip_address":"","comment_id":75832,"utype":1}],"discussion_count":3,"race_medal":0,"score":"14437379981","product_id":100021701,"comment_content":"三万条，25个字段就要运算几分钟了，数据上亿。。。<br>&#39;&#39;&#39;<br>GridSearch最优参数： {&#39;svc__C&#39;: 1, &#39;svc__gamma&#39;: 0.01}<br>GridSearch最优分数： 0.8174<br>准确率 0.8172<br>68.59484457969666 s<br>GridSearch最优参数： {&#39;decisiontreeclassifier__max_depth&#39;: 6}<br>GridSearch最优分数： 0.8186<br>准确率 0.8113<br>1.8460278511047363 s<br>GridSearch最优参数： {&#39;randomforestclassifier__n_estimators&#39;: 6}<br>GridSearch最优分数： 0.7998<br>准确率 0.7994<br>2.297856330871582 s<br>GridSearch最优参数： {&#39;kneighborsclassifier__n_neighbors&#39;: 8}<br>GridSearch最优分数： 0.8040<br>准确率 0.8036<br>154.36387968063354 s<br>GridSearch最优参数： {&#39;adaboostclassifier__n_estimators&#39;: 10}<br>GridSearch最优分数： 0.8187<br>准确率 0.8129<br>13.483576774597168 s<br>&#39;&#39;&#39;","like_count":3,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443049,"discussion_content":"Good Job","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577618998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2285481,"avatar":"https://static001.geekbang.org/account/avatar/00/22/df/a9/bf395f99.jpg","nickname":"赵宁","note":"","ucode":"7E5C648BA67DAA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338604,"discussion_content":"这位仁兄，可请问下测试时间怎么写出来的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609321576,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1919541,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/4a/35/66caeed9.jpg","nickname":"完美坚持","note":"","ucode":"AE0261D8DDEF64","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2285481,"avatar":"https://static001.geekbang.org/account/avatar/00/22/df/a9/bf395f99.jpg","nickname":"赵宁","note":"","ucode":"7E5C648BA67DAA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369362,"discussion_content":"在想要测试时间的代码段，上下分别加上一段代码\n\nimport time\nstart_time = time.perf_counter()\n# 中间是想要测试时间的代码段\nend_time = time.perf_counter()\nprint(&#39;花费时间 {} s&#39;.format(end_time - start_time))","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619011533,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":338604,"ip_address":""},"score":369362,"extra":""}]}]},{"had_liked":false,"id":75848,"user_name":"王彬成","can_delete":false,"product_type":"c1","uid":1015045,"ip_address":"","ucode":"386803B8FC2DD5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/05/4bad0c7c.jpg","comment_is_top":false,"comment_ctime":1552481433,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10142416025","product_id":100021701,"comment_content":"‘GridSearch最优分数’和‘预测数据准确率’是怎么理解的。以下我的理解对吗<br><br>我理解是‘GridSearch最优分数’是从【训练数据】中得到的最优准确率。<br>而‘预测数据准确率’是利用最优模型，分析【测试数据】得到的准确率。","like_count":2},{"had_liked":false,"id":75766,"user_name":"JingZ","can_delete":false,"product_type":"c1","uid":1023464,"ip_address":"","ucode":"6F97895B2CC375","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/wJphZ3HcvhjVUyTWCIsCugzfQY5NAy6VJ0XoPLibDlcHWMswFmFe678zd0lUjFETia80NQhyQcVnGDlKgKPcRGyw/132","comment_is_top":false,"comment_ctime":1552466428,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10142401020","product_id":100021701,"comment_content":"# 信用卡违约率分析<br>KNN相比较而言，跑得最慢了点<br><br>from sklearn.ensemble import AdaBoostClassifier<br><br># 构造各种分类器<br>AdaBoostClassifier(random_state=1)<br><br># 分类器名称<br>&#39;adaboostclassifier&#39;<br><br># 分类器参数<br>{&#39;adaboostclassifier__n_estimators&#39;: [10, 50, 100]}<br><br>结果：<br><br>GridSearch 最优分数：0.8187<br>GridSearch 最优参数: {&#39;adaboostclassifier__n_estimators&#39;: 10}<br>准确率 0.8129","like_count":2},{"had_liked":false,"id":186356,"user_name":"建强","can_delete":false,"product_type":"c1","uid":1397126,"ip_address":"","ucode":"62B03D0E0C64EC","user_header":"https://static001.geekbang.org/account/avatar/00/15/51/86/b5fd8dd8.jpg","comment_is_top":false,"comment_ctime":1583829620,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5878796916","product_id":100021701,"comment_content":"加入AdaBoost分类器后，输出的结果如下：<br>GridSearch最优参数： {&#39;svc__C&#39;: 1, &#39;svc__gamma&#39;: 0.01}<br>GridSearch最优分数： 0.8174<br>准确率 0.8172<br>GridSearch最优参数： {&#39;decisiontreeclassifier__max_depth&#39;: 6}<br>GridSearch最优分数： 0.8186<br>准确率 0.8113<br>GridSearch最优参数： {&#39;randomforestclassifier__n_estimators&#39;: 6}<br>GridSearch最优分数： 0.7998<br>准确率 0.7994<br>GridSearch最优参数： {&#39;kneighborsclassifier__n_neighbors&#39;: 8}<br>GridSearch最优分数： 0.8040<br>准确率 0.8036<br>GridSearch最优参数： {&#39;adaboostclassifier__n_estimators&#39;: 10}<br>GridSearch最优分数： 0.8187<br>准确率 0.8129<br><br>AdaBoost的n_estimators最佳值是10，准确率较高，仅次于支持向量机（SVC)算法","like_count":1},{"had_liked":false,"id":154306,"user_name":"一纸书","can_delete":false,"product_type":"c1","uid":1659590,"ip_address":"","ucode":"C58A22B54521CA","user_header":"https://static001.geekbang.org/account/avatar/00/19/52/c6/8eb48963.jpg","comment_is_top":false,"comment_ctime":1574407059,"is_pvip":false,"replies":[{"id":"62645","content":"慢慢来啊~ 大家都是逐渐积累起来的，加油","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577080493,"ip_address":"","comment_id":154306,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5869374355","product_id":100021701,"comment_content":"勉勉强强看懂,但心知若让我在一片空白的python文件中,完全独立完成这个项目;我做不到; ","like_count":1,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475433,"discussion_content":"慢慢来啊~ 大家都是逐渐积累起来的，加油","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577080493,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":89211,"user_name":"滢","can_delete":false,"product_type":"c1","uid":1221511,"ip_address":"","ucode":"971A6F20AF3F9A","user_header":"https://static001.geekbang.org/account/avatar/00/12/a3/87/c415e370.jpg","comment_is_top":false,"comment_ctime":1556107907,"is_pvip":false,"replies":[{"id":"64219","content":"很好的洞察，随机森林和AdaBoost都是集成学习方法，<br>Random Forest是Bagging方式，AdaBoost是Boosting方法。Bagging就是投票模型","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577614551,"ip_address":"","comment_id":89211,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5851075203","product_id":100021701,"comment_content":"旸老师，想请教几个问题：1.为何执行多次 最优分数是一定的 0.9667  但是最优参数，n_estimators 每次都不一样，这是什么原因？2.随机森林是不是正好与AdaBoost相反，都数据集成模式，一个是集成里的投票模式，一个是学习模式。这样理解正确吗？","like_count":1,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448057,"discussion_content":"很好的洞察，随机森林和AdaBoost都是集成学习方法，\nRandom Forest是Bagging方式，AdaBoost是Boosting方法。Bagging就是投票模型","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577614551,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325172,"user_name":"静心","can_delete":false,"product_type":"c1","uid":1335457,"ip_address":"","ucode":"EB264FA6519FDA","user_header":"https://static001.geekbang.org/account/avatar/00/14/60/a1/8f003697.jpg","comment_is_top":false,"comment_ctime":1638848994,"is_pvip":true,"discussion_count":0,"race_medal":5,"score":"1638848994","product_id":100021701,"comment_content":"像&#39;svc__C&#39;:[1]、decisiontreeclassifier__max_depth、randomforestclassifier__n_estimators、kneighborsclassifier__n_neighbors这样的格式的规律是什么？没搞明白。","like_count":0},{"had_liked":false,"id":283422,"user_name":"小晨","can_delete":false,"product_type":"c1","uid":1935063,"ip_address":"","ucode":"B7ADDC309C0D19","user_header":"https://static001.geekbang.org/account/avatar/00/1d/86/d7/46842f90.jpg","comment_is_top":false,"comment_ctime":1615777060,"is_pvip":false,"replies":[{"id":"102992","content":"arr.astype(np.float32) 可以将数组从float64修改为float32的数据类型，float16同理","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1615988568,"ip_address":"","comment_id":283422,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1615777060","product_id":100021701,"comment_content":"用32位的python在执行kneighborsclassifier分类器时，会报内存错误：numpy.core._exceptions.MemoryError: Unable to allocate 1.00 GiB for an array with shape (6391, 21000) and data type float64<br>老师有无办法将numpy数据类型float64改为float16或float32呢？或是其他办法解决<br>&#47;&#47;&#47;重装64位，全部库需要重装&#47;&#47;&#47;","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517035,"discussion_content":"arr.astype(np.float32) 可以将数组从float64修改为float32的数据类型，float16同理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615988568,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1935063,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/86/d7/46842f90.jpg","nickname":"小晨","note":"","ucode":"B7ADDC309C0D19","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":358506,"discussion_content":"好，我刚重装了😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615990338,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270937,"user_name":"赵宁","can_delete":false,"product_type":"c1","uid":2285481,"ip_address":"","ucode":"7E5C648BA67DAA","user_header":"https://static001.geekbang.org/account/avatar/00/22/df/a9/bf395f99.jpg","comment_is_top":false,"comment_ctime":1609323035,"is_pvip":false,"replies":[{"id":"101925","content":"比如：PAY_0 代表2005年9月还款情况(-1=按期还款，1=拖欠一个月，2=拖欠两个月，…8=拖欠八个月，9=拖欠九个月及以上)<br>PAY_0 至 PAY_6，分别代表2005年9月-2005年4月每个月的还款情况，具体特征值含义如上。","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1614365200,"ip_address":"","comment_id":270937,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1609323035","product_id":100021701,"comment_content":"请问“客户还款情况”字段里的值分别代表什么意思？","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512798,"discussion_content":"比如：PAY_0 代表2005年9月还款情况(-1=按期还款，1=拖欠一个月，2=拖欠两个月，…8=拖欠八个月，9=拖欠九个月及以上)\nPAY_0 至 PAY_6，分别代表2005年9月-2005年4月每个月的还款情况，具体特征值含义如上。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614365200,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":206993,"user_name":"JustDoDT","can_delete":false,"product_type":"c1","uid":1127175,"ip_address":"","ucode":"6AF0B80F00EAEF","user_header":"https://static001.geekbang.org/account/avatar/00/11/33/07/8f351609.jpg","comment_is_top":false,"comment_ctime":1586972096,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586972096","product_id":100021701,"comment_content":"交作业：<br>https:&#47;&#47;github.com&#47;LearningChanging&#47;Data-analysis-in-action&#47;tree&#47;master&#47;39-%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E5%AE%9E%E6%88%98%EF%BC%881%EF%BC%89%EF%BC%9A%E4%BF%A1%E7%94%A8%E5%8D%A1%E8%BF%9D%E7%BA%A6%E7%8E%87%E5%88%86%E6%9E%90","like_count":0},{"had_liked":false,"id":206355,"user_name":"Simon","can_delete":false,"product_type":"c1","uid":1914504,"ip_address":"","ucode":"A8A2E3E57BD029","user_header":"https://static001.geekbang.org/account/avatar/00/1d/36/88/20b6a6ee.jpg","comment_is_top":false,"comment_ctime":1586846622,"is_pvip":true,"replies":[{"id":"103984","content":"没错！树模型不需要数据规范化","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1617291947,"ip_address":"","comment_id":206355,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586846622","product_id":100021701,"comment_content":"从best_score_看，是否对数据标准化，对随机森林算法确实没有影响。对决策树而言，重要的是属性的次序，而不是绝对大小。","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491762,"discussion_content":"没错！树模型不需要数据规范化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617291947,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":205686,"user_name":"JustDoDT","can_delete":false,"product_type":"c1","uid":1127175,"ip_address":"","ucode":"6AF0B80F00EAEF","user_header":"https://static001.geekbang.org/account/avatar/00/11/33/07/8f351609.jpg","comment_is_top":false,"comment_ctime":1586702269,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586702269","product_id":100021701,"comment_content":"看了这一节，感觉值回票价了。","like_count":0},{"had_liked":false,"id":196740,"user_name":"张贺","can_delete":false,"product_type":"c1","uid":1283181,"ip_address":"","ucode":"0254E40FB3EB5F","user_header":"https://static001.geekbang.org/account/avatar/00/13/94/6d/5cd6e8c7.jpg","comment_is_top":false,"comment_ctime":1585309200,"is_pvip":true,"replies":[{"id":"104343","content":"很棒！加油哦","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1617904151,"ip_address":"","comment_id":196740,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585309200","product_id":100021701,"comment_content":"GridSearch最优参数： {&#39;adaboostclassifier__n_estimators&#39;: 10}<br>GridSearch最优分数： 0.8187<br>准确率 0.8129","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489373,"discussion_content":"很棒！加油哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617904151,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":189477,"user_name":"William～Zhang","can_delete":false,"product_type":"c1","uid":1527138,"ip_address":"","ucode":"8659B589428F11","user_header":"https://static001.geekbang.org/account/avatar/00/17/4d/62/0fe9cbb3.jpg","comment_is_top":false,"comment_ctime":1584520459,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584520459","product_id":100021701,"comment_content":"使用gridsearchcv的时候，比如算法模型有n个参数，那么param_grid这个字典是不是应该对应写上参数的名称，但是在文章中，老师好像在前面还加上了模型名称比如svc__gamma","like_count":1},{"had_liked":false,"id":180155,"user_name":"苹果","can_delete":false,"product_type":"c1","uid":1761988,"ip_address":"","ucode":"5D0FA9D8560FD8","user_header":"https://static001.geekbang.org/account/avatar/00/1a/e2/c4/25acaa38.jpg","comment_is_top":false,"comment_ctime":1582201142,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582201142","product_id":100021701,"comment_content":"clf的最有分数:0.8163<br>clf的最优参数: {&#39;adboostclassifize__n_estimators&#39;: 10}<br>每次运行的结果不同，最优参数有时是50，不知道如何理解，<br>代码如下<br># -*- coding: utf-8 -*-<br>#对信用卡违约的预测判断<br>import numpy as np<br>import pandas as pd<br>import matplotlib.pyplot as plt<br>import seaborn as sns<br>from sklearn.ensemble import AdaBoostClassifier<br>from sklearn.pipeline import Pipeline<br>from sklearn.model_selection import train_test_split,GridSearchCV<br>from sklearn.preprocessing import StandardScaler<br><br>#观察违约的数量，可视化<br>data = pd.read_csv(&#39;E:\\\\C-01-pythonl练习\\\\01数据分析实战45\\\\credit_default-master\\\\UCI_Credit_Card.csv&#39;)<br>print(data.shape)<br>print(data.describe())<br>print(data.axes)<br>target_result = data[&#39;default.payment.next.month&#39;].value_counts()<br>print(target_result)<br># df = pd.DataFrame({&#39;default.payment.next.month&#39;:target_result})<br>plt.figure(figsize=(6,6),dpi=80)<br>plt.bar(target_result.index,target_result.values)<br>plt.title(&#39;信用卡违约客户\\n(违约：1，守约：0)&#39;)<br>plt.ylabel(&#39;人数&#39;)<br>locs , labels = plt.xticks()<br>plt.show()<br>#数据处理，特征选择  提取feature,target<br>data.drop(&#39;ID&#39;,inplace=True,axis=1)<br>target = data[&#39;default.payment.next.month&#39;].values<br>columns = data.columns.tolist()<br>columns.remove(&#39;default.payment.next.month&#39;)<br>features = data[columns].values<br>train_x , text_x, train_y,text_y = train_test_split(features,target,test_size=0.2)<br><br># 定义adboost算法<br>adb = AdaBoostClassifier()<br><br>#使用pipeline<br>pipeline = Pipeline([<br>    (&#39;scaler&#39;,StandardScaler()),<br>    (&#39;adboostclassifize&#39;, adb)<br>])<br>parameters = {&quot;adboostclassifize__n_estimators&quot;:[10,50,100]}<br># 使用GridsearchCV<br>clf = GridSearchCV(pipeline,param_grid=parameters)<br>clf.fit(train_x,train_y)<br>predict_y = clf.predict(text_x)<br>print(&#39;clf的最有分数:{:.4f}&#39;.format(clf.best_score_))<br>print(&#39;clf的最优参数:&#39;,clf.best_params_)<br><br># @Time : 2020&#47;2&#47;20 16:17<br>","like_count":0},{"had_liked":false,"id":170623,"user_name":"佳佳的爸","can_delete":false,"product_type":"c1","uid":1082338,"ip_address":"","ucode":"9D4FE7C3552087","user_header":"https://static001.geekbang.org/account/avatar/00/10/83/e2/297518ab.jpg","comment_is_top":false,"comment_ctime":1578645646,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1578645646","product_id":100021701,"comment_content":"程序运行出错了，Python3.7的环境<br><br>Traceback (most recent call last):<br>  File &quot;E:&#47;my_work_spaces&#47;pycharm&#47;Self_learn_projs&#47;Crawler_projs&#47;Data_ana_lesson_src&#47;Credit_card&#47;Creditcard_fraud.py&quot;, line 71, in &lt;module&gt;<br>    ax = sns.countplot(x=&#39;Class&#39;, data=data)<br>  File &quot;E:\\my_work_spaces\\pycharm\\venv_py37\\lib\\site-packages\\seaborn\\categorical.py&quot;, line 3553, in countplot<br>    errcolor, errwidth, capsize, dodge)<br>  File &quot;E:\\my_work_spaces\\pycharm\\venv_py37\\lib\\site-packages\\seaborn\\categorical.py&quot;, line 1607, in __init__<br>    order, hue_order, units)<br>  File &quot;E:\\my_work_spaces\\pycharm\\venv_py37\\lib\\site-packages\\seaborn\\categorical.py&quot;, line 155, in establish_variables<br>    raise ValueError(err)<br>ValueError: Could not interpret input &#39;Class&#39;","like_count":0,"discussions":[{"author":{"id":1460392,"avatar":"https://static001.geekbang.org/account/avatar/00/16/48/a8/7b1a2b65.jpg","nickname":"梦里的小猩猩","note":"","ucode":"D60A2C01A81795","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":203939,"discussion_content":"看起来是你的‘Class’没有定义？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584103638,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":157268,"user_name":"Ronnyz","can_delete":false,"product_type":"c1","uid":1488280,"ip_address":"","ucode":"9F34527B1D343D","user_header":"https://static001.geekbang.org/account/avatar/00/16/b5/98/ffaf2aca.jpg","comment_is_top":false,"comment_ctime":1575100931,"is_pvip":false,"replies":[{"id":"62621","content":"Ronnyz同学写的不错","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577078146,"ip_address":"","comment_id":157268,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1575100931","product_id":100021701,"comment_content":"# -*- coding:utf-8 -*-\r<br>import pandas as pd\r<br>from sklearn.model_selection import GridSearchCV,train_test_split\r<br>from sklearn.preprocessing import StandardScaler\r<br>from sklearn.pipeline import Pipeline\r<br>from sklearn.datasets import load_iris\r<br>from sklearn.metrics import accuracy_score\r<br>from sklearn.ensemble import AdaBoostClassifier\r<br>from matplotlib import pyplot as plt\r<br>import seaborn as sns\r<br>from warnings import simplefilter\r<br>simplefilter(action=&#39;ignore&#39;,category=FutureWarning)\r<br>\r<br>#数据加载\r<br>credits=pd.read_csv(&#39;CreditCard_data&#47;UCI_Credit_Card.csv&#39;)\r<br>#数据探索\r<br>print(credits.shape)\r<br>print(credits.describe()) #查看数据概览\r<br>\r<br>#特征选择，去掉ID字段\r<br>credits.drop([&#39;ID&#39;],inplace=True,axis=1)\r<br>target=credits[&#39;default.payment.next.month&#39;].values\r<br>columns=credits.columns.tolist()\r<br>columns.remove(&#39;default.payment.next.month&#39;)\r<br>features=credits[columns].values\r<br>\r<br>#分割数据，将30%作为测试集\r<br>X_train,X_test,y_train,y_test=train_test_split(features,target,test_size=0.3,random_state=666)\r<br>\r<br>#构建分类器\r<br>ada=AdaBoostClassifier()\r<br>#使用网格搜索调整参数\r<br>#参数设置\r<br>parameters={\r<br>    &#39;n_estimators&#39;:[10,50,100]\r<br>}\r<br>gscv=GridSearchCV(estimator=ada,param_grid=parameters,scoring=&#39;accuracy&#39;,n_jobs=-1)\r<br>gscv.fit(X_train,y_train)\r<br>print(&#39;GridSearch最优参数：&#39;,gscv.best_params_)\r<br>print(&#39;GridSearch最优分数：%0.4lf&#39; % gscv.best_score_)\r<br>y_pred=gscv.predict(X_test)\r<br>print(&#39;准确率：&#39;,accuracy_score(y_test,y_pred))\r<br>\r<br>GridSearch最优参数： {&#39;n_estimators&#39;: 50}\r<br>GridSearch最优分数：0.8197\r<br>准确率： 0.8121111111111111","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476380,"discussion_content":"Ronnyz同学写的不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577078146,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148746,"user_name":"孟君","can_delete":false,"product_type":"c1","uid":1691291,"ip_address":"","ucode":"94D8DC4001BA52","user_header":"https://static001.geekbang.org/account/avatar/00/19/ce/9b/46b3dc8d.jpg","comment_is_top":false,"comment_ctime":1573070071,"is_pvip":false,"replies":[{"id":"62678","content":"可以先进行balance处理，这样会好一些","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577082987,"ip_address":"","comment_id":148746,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573070071","product_id":100021701,"comment_content":"老师，这个数据集是明显的unbalanced dedataset。 需要先进行balance处理吗？我以前处理lending club的dataset，发现经过convert to balance dataset之后，random forest的准确率高了不少","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473593,"discussion_content":"可以先进行balance处理，这样会好一些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577082987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147117,"user_name":"许智鸿","can_delete":false,"product_type":"c1","uid":1655563,"ip_address":"","ucode":"18E41503CC43C2","user_header":"https://static001.geekbang.org/account/avatar/00/19/43/0b/25ff73e0.jpg","comment_is_top":false,"comment_ctime":1572797695,"is_pvip":false,"replies":[{"id":"59819","content":"每个比赛除了算法模型，特征工程还是很重要的。是否进行降维，这个还是看业务场景，在比赛中有的时候不需要降维，有时候反而需要构造出来一些新的特征，目的是为了让结果更好。在工程中，可以采用降维方式，毕竟更少的维度可以让计算效率更高","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1574757419,"ip_address":"","comment_id":147117,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572797695","product_id":100021701,"comment_content":"老师，参赛的范围划分有什么依据吗?还是说我下次遇到类似的题目，例如预测用户点击广告的概率，也可以直接套用您这套代码和参数氛围，然后得出最优的分类方案和参数取值?<br><br>另外，如果字段过多，需要进行降纬处理吗?怎么处理?","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473155,"discussion_content":"每个比赛除了算法模型，特征工程还是很重要的。是否进行降维，这个还是看业务场景，在比赛中有的时候不需要降维，有时候反而需要构造出来一些新的特征，目的是为了让结果更好。在工程中，可以采用降维方式，毕竟更少的维度可以让计算效率更高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574757419,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90161,"user_name":"滨滨","can_delete":false,"product_type":"c1","uid":1334567,"ip_address":"","ucode":"881EFA798BEE34","user_header":"https://static001.geekbang.org/account/avatar/00/14/5d/27/74e152d3.jpg","comment_is_top":false,"comment_ctime":1556436561,"is_pvip":false,"replies":[{"id":"64210","content":"是的","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577614256,"ip_address":"","comment_id":90161,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1556436561","product_id":100021701,"comment_content":"GridSearchCV本质是一种穷举法","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448410,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577614256,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1022786,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/9b/42/aeb79b35.jpg","nickname":"Ling","note":"","ucode":"EE15D1ABDB073B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":55862,"discussion_content":"暴力搜索，因此只适用于小数据量。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574407015,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81537,"user_name":"Geek_dancer","can_delete":false,"product_type":"c1","uid":1440561,"ip_address":"","ucode":"F66D454E58E35E","user_header":"https://static001.geekbang.org/account/avatar/00/15/fb/31/f0a884a3.jpg","comment_is_top":false,"comment_ctime":1553938325,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553938325","product_id":100021701,"comment_content":"我发现：classifier_param_grid的keys必须严格按照&#39;classifier_names&#39;+&#39;__&#39;+&#39;classifier_param_name&#39;的格式来写","like_count":1},{"had_liked":false,"id":77221,"user_name":"TKbook","can_delete":false,"product_type":"c1","uid":1073829,"ip_address":"","ucode":"F6E0E99CC79059","user_header":"https://static001.geekbang.org/account/avatar/00/10/62/a5/43aa0c27.jpg","comment_is_top":false,"comment_ctime":1552891341,"is_pvip":false,"replies":[{"id":"64407","content":"Good Job","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577618437,"ip_address":"","comment_id":77221,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552891341","product_id":100021701,"comment_content":"ada = AdaBoostClassifier()<br>parameters = {&#39;adaboostclassifier__n_estimators&#39;: [10, 50, 100]}<br>pipeline = Pipeline([<br>    (&#39;scaler&#39;, StandardScaler()),<br>    (&#39;adaboostclassifier&#39;, ada)<br>])<br>clf = GridSearchCV(estimator=pipeline, param_grid=parameters)<br>clf.fit(train_x, train_y)<br>print(&#39;GridSearch最优参数：&#39;, clf.best_params_)<br>print(&#39;GridSearch最优分数：%0.4lf&#39; % clf.best_score_)<br>predict_y = clf.predict(test_x)<br>print(&#39;准确率%0.4lf&#39; % accuracy_score(test_y, predict_y))<br><br>GridSearch最优参数： {&#39;adaboostclassifier__n_estimators&#39;: 10}<br>GridSearch最优分数：0.8187<br>准确率0.8129","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443641,"discussion_content":"Good Job","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577618437,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75834,"user_name":"Geek_2a6093","can_delete":false,"product_type":"c1","uid":1395560,"ip_address":"","ucode":"9C216A0B09A7AF","user_header":"https://static001.geekbang.org/account/avatar/00/15/4b/68/a6198a59.jpg","comment_is_top":false,"comment_ctime":1552478720,"is_pvip":false,"replies":[{"id":"64424","content":"xgboost lightgbm都是常用的机器学习工具","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577618984,"ip_address":"","comment_id":75834,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552478720","product_id":100021701,"comment_content":"这次get到了pipeline 和gridsearch真好，谢谢老师！老师下次能不能详细地介绍一下集成方法如Stacking，或者XgBoost这个库的特点呀？","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443050,"discussion_content":"xgboost lightgbm都是常用的机器学习工具","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577618984,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75814,"user_name":"晨曦后浪","can_delete":false,"product_type":"c1","uid":1064142,"ip_address":"","ucode":"41F476DDF37AB8","user_header":"https://static001.geekbang.org/account/avatar/00/10/3c/ce/27fe1845.jpg","comment_is_top":false,"comment_ctime":1552474902,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552474902","product_id":100021701,"comment_content":"使用GridSearchCV调参的时候,为什么设置了RandomForestClassifier的n_jobs=-1,运行多次,n_estimators的最优值为什么不一样?","like_count":0}]}