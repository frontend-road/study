{"id":741027,"title":"第 5 章 Linux系统用户与用户组管理","content":"\n<p>关于这部分内容，阿铭在Linux系统日常管理工作中用得并不多，可这不代表这部分内容不重要。毕竟Linux系统是一个多用户系统，每个账号用来干什么，我们必须了如指掌，因为这涉及安全问题。</p>\n<p>安装完系统后，如果我们一直使用root账号来操作，其实并不安全。因为root账号权限太高，容易误操作。阿铭建议你以后在工作中尽量避免直接使用root账号登录系统，使用普通用户就可以完成大部分工作。</p>\n<h2 id=\"nav_point_89\">5.1 认识 /etc/passwd和 /etc/shadow</h2>\n<p>这两个文件可以说是Linux系统中最重要的文件之一。如果没有这两个文件或者这两个文件出了问题，则无法正常登录系统。下面咱们先来看看/etc/passwd文件，示例命令如下：</p>\n<pre class=\"code-rows\"><code># cat /etc/passwd | head\nroot:x:0:0:root:/root:/bin/bash\nbin:x:1:1:bin:/bin:/sbin/nologin\ndaemon:x:2:2:daemon:/sbin:/sbin/nologin\nadm:x:3:4:adm:/var/adm:/sbin/nologin\nlp:x:4:7:lp:/var/spool/lpd:/sbin/nologin\nsync:x:5:0:sync:/sbin:/bin/sync\nshutdown:x:6:0:shutdown:/sbin:/sbin/shutdown\nhalt:x:7:0:halt:/sbin:/sbin/halt\nmail:x:8:12:mail:/var/spool/mail:/sbin/nologin\noperator:x:11:0:operator:/root:/sbin/nologin</code></pre>\n<p>看到上面那条命令，你是不是有点不知所以呢？其实，<code>head</code>前面的符号<code>|</code>，我们称之为管道符，它的作用是把前面命令的输出结果再输入给后面的命令。管道符在第10章中还会介绍，阿铭用得也蛮多的，请掌握它的用法。</p>\n<h3 id=\"nav_point_90\">5.1.1 解说/etc/passwd</h3>\n<p>/etc/passwd可以分割成7个字段，每个字段的具体含义如下所示。</p>\n<ul>\n<li>第1个字段为用户名（如第1行中的root就是用户名），是代表用户账号的字符串。用户名中的字符可以是大小写字母、数字、减号（不能出现在首位）、点或下划线，其他字符不合法。虽然用户名中可以出现点，但不建议使用，尤其是首位。另外，减号也不建议使用，这样容易造成混淆。</li>\n<li>第2个字段存放的是该账号的口令。这里为什么是<code>x</code>呢？早期的Unix系统口令确实存放在这里，但基于安全因素，后来就将其存放到/etc/shadow中了，这里只用一个<code>x</code>代替。</li>\n<li>第3个字段为一个数字，这个数字代表用户标识号，也称为uid。系统就是通过这个数字识别用户身份的。这里的0就是root，也就是说我们可以修改test用户的uid为0，那么系统会认为root和test为同一个账户。uid的取值范围是0~65 535（但实际上已经可以支持到4 294 967 294）。0是超级用户（root）的标识号，CentOS 7和CentOS 8的普通用户标识号从1000开始。如果我们自定义建立一个普通用户，那么会看到该账户的标识号是大于或等于1000的。</li>\n<li>第4个字段也是数字，表示组标识号，也称为gid。这个字段对应着/etc/group中的一条记录，其实/etc/group和/etc/passwd基本类似。</li>\n<li>第5个字段为注释说明，没有实际意义。通常记录该用户的一些属性，例如姓名、电话、地址等。我们可以使用<code>chfn</code>命令来更改这些信息。</li>\n<li>第6个字段为用户的家目录，当用户登录时，就处在这个目录下。root的家目录是/root，普通用户的家目录则为/home/username，用户家目录是可以自定义的。比如，建立一个普通用户test1，要想让test1的家目录在/data目录下，只要将/etc/passwd文件中对应该用户那行中的本字段修改为<code>/data</code>即可。</li>\n<li>最后一个字段为用户的shell。用户登录后，要启动一个进程，用来将用户下达的指令传给内核，这就是shell。Linux的shell有sh、csh、ksh、tcsh、bash等多种，而Red Hat、CentOS的shell就是bash。查看/etc/passwd文件，该字段中除了/bin/bash，还有很多/sbin/nologin，这表示不允许该账号登录。如果想建立一个不允许登录的账号，可以把该字段改成/sbin/nologin，默认是 /bin/bash。</li>\n</ul>\n<h3 id=\"nav_point_91\">5.1.2 解说/etc/shadow</h3>\n<p>/etc/shadow和/etc/passwd类似，由<code>:</code>分割成9个字段，示例命令如下：</p>\n<pre class=\"code-rows\"><code># cat /etc/shadow |head -n 3\nroot:$6$Wu/W4eryssf9B3xQ$jgNuM24oQ9boSTUPaeJ/79GFjLUX912bSDu3ak40qJIxNj4/SpaK.JXguDYowM00mt3/\n 5tvNIoBJ7RNcpH2K.1:18257:0:99999:7:::\nbin:*:18078:0:99999:7:::\ndaemon:*:18078:0:99999:7:::</code></pre>\n<p>每个字段的含义如下所示。</p>\n<ul>\n<li>第1个字段为用户名，与/etc/passwd对应。</li>\n<li><p>第2个字段为用户密码，是该账号的真正密码。虽然这个密码已经加密，但是有些黑客还是能够解密的。所以将该文件属性设置为<code>000</code>，但root账户还是可以访问或更改的。使用命令<code>ls -l</code>查看该文件的权限，示例命令如下：</p><!-- [[[read_end]]] -->\n<pre class=\"code-rows\"><code># ls -l /etc/shadow\n---------- 1 root root 689 12月 30 07:46 /etc/shadow</code></pre>\n</li>\n<li>第3个字段为上次更改密码的日期，这个数字以1970年1月1日和上次更改密码的日期为基准计算而来。例如，上次更改密码的日期为2020年1月1日，则这个值就是365×（2020－1970）+（2020－1970）/4+1=18263。如果是闰年，则有366天。</li>\n<li>第4个字段为要过多少天才可以更改密码，默认是0，即不受限制。</li>\n<li>第5个字段为密码多少天后到期，即在多少天内必须更改密码。例如，这里设置成30，则30天内必须更改一次密码；否则，将不能登录系统。默认是99999，可以理解为永远不需要改。</li>\n<li>第6个字段为密码到期前的警告期限。若这个值设置成7，则表示当7天后密码过期时，系统就发出警告，提醒用户他的密码将在7天后到期。</li>\n<li>第7个字段为账号失效期限。如果这个值设置为3，则表示密码已经到期，然而用户并没有在到期前修改密码，那么再过3天，这个账号便失效，即锁定。</li>\n<li>第8个字段为账号的生命周期。跟第3个字段一样，这个周期是按距离1970年1月1日多少天算的。它表示的含义是账号在这个日期前可以使用，到期后将作废。</li>\n<li>最后一个字段作为保留用的，没有什么意义。</li>\n</ul>\n<p>上面关于密码文件字段的介绍内容偏多并且不太容易记住，在这里阿铭提醒你，这部分内容无须记住，只需要了解即可，因为在工作中我们几乎用不到这些知识点。</p>\n<h2 id=\"nav_point_92\">5.2 用户和用户组管理</h2>\n<p>上面介绍了 /etc/passwd和 /etc/shadow这两个文件的具体含义，但这些只是理论知识。实际上，对于在Linux下如何创建、删除用户和组以及如何更改用户和组的属性，我们一无所知。</p>\n<h3 id=\"nav_point_93\">5.2.1 新增组的命令<code>groupadd</code></h3>\n<p>命令<code>groupadd</code>的格式为<code>groupadd [-g GID] groupname</code>，示例命令如下：</p>\n<pre class=\"code-rows\"><code># groupadd grptest1\n# tail -n1 /etc/group\ngrptest1:x:1002:</code></pre>\n<p>如果不加<code>-g</code>选项，则按照系统默认的<code>gid</code>创建组。跟<code>uid</code>一样，<code>gid</code>也是从1000开始的。我们也可以按如下操作自定义<code>gid</code>：</p>\n<pre class=\"code-rows\"><code># groupadd -g 1008 grptest2\n# tail -n2 /etc/group\ngrptest1:x:1002:\ngrptest2:x:1008:</code></pre>\n<h3 id=\"nav_point_94\">5.2.2 删除组的命令<code>groupdel</code></h3>\n<p>有时，我们会有删除组的需求，此时可进行如下操作：</p>\n<pre class=\"code-rows\"><code># groupdel grptest2\n# tail -n2 /etc/group\nslocate:x:21:\ngrptest1:x:1002:</code></pre>\n<p>命令<code>groupdel</code>没有特殊选项，但有一种情况不能删除组，如下所示：</p>\n<pre class=\"code-rows\"><code># groupdel user1\ngroupdel：不能移除用户“user1”的主组</code></pre>\n<p>上例中，user1组中包含user1账户，只有删除user1账户后才可以删除user1组。</p>\n<h3 id=\"nav_point_95\">5.2.3 增加用户的命令<code>useradd</code></h3>\n<p>从字面意思上看，<code>useradd</code>就是增加用户，该命令的格式为<code>useradd [-u UID] [-g GID] [-d HOME] [-M] [-s]</code>，其中各个选项的具体含义如下。</p>\n<ul>\n<li><strong><code>-u</code></strong>：表示自定义UID。</li>\n<li><strong><code>-g</code></strong>：表示使新增用户属于某个已经存在的组，后面可以跟组<code>id</code>，也可以跟组名。</li>\n<li><strong><code>-d</code></strong>：表示自定义用户的家目录。</li>\n<li><strong><code>-M</code></strong>：表示不建立家目录。</li>\n<li><strong><code>-s</code></strong>：表示自定义shell。</li>\n</ul>\n<p>下面我们先来新建一个用户test10，示例命令如下：</p>\n<pre class=\"code-rows\"><code># useradd test10\n# tail -n1 /etc/passwd\ntest10:x:1001:1001::/home/test10:/bin/bash\n# tail -n1 /etc/group\ntest10:x:1001:</code></pre>\n<p>如果<code>useradd</code>不加任何选项，直接跟用户名，则会创建一个跟用户名同名的组。当然，很多时候需要我们自己去定义<code>uid</code>、<code>gid</code>或者所属的组，示例命令如下：</p>\n<pre class=\"code-rows\"><code># useradd -u1005 -g 1006 -M -s /sbin/nologin user11\nuseradd：“1006”组不存在\n# useradd -u1005 -g 1001 -M -s /sbin/nologin user11\n# useradd -u1006 -g grptest1 user12\n# tail -n2 /etc/passwd\nuser11:x:1005:1001::/home/user11:/sbin/nologin\nuser12:x:1006:1002::/home/user12:/bin/bash\n# tail -n2 /etc/group\nuser1:x:1003:\ntest10:x:1001:</code></pre>\n<p>如果<code>-g</code>选项后面跟一个不存在的<code>gid</code>，则会报错，提示该组不存在。刚刚上面说过，加上<code>-M</code>选项后，则不建立用户家目录，但在 /etc/passwd文件中仍然有这个字段。如果你使用命令<code>ls /home/user11</code>查看一下，会提示该目录不存在。所以，<code>-M</code>选项的作用只是不创建那个目录。下面我们来查看user11的家目录，会提示我们目录不存在，示例命令如下：</p>\n<pre class=\"code-rows\"><code># ls /home/user11\nls: 无法访问/home/user11: 没有那个文件或目录</code></pre>\n<h3 id=\"nav_point_96\">5.2.4 删除用户的命令<code>userdel</code></h3>\n<p>命令<code>userdel</code>的格式为<code>userdel [-r] username</code>，其中<code>-r</code>选项的作用是当删除用户时，一并删除该用户的家目录。下面我们先来看看user12的家目录，示例命令如下：</p>\n<pre class=\"code-rows\"><code># ls -ld /home/user12\ndrwx------ 2 user12 grptest1 62 1月 2 06:47 /home/user12</code></pre>\n<p>如果不加<code>-r</code>选项，则会直接删除用户user12，但保留其家目录，命令如下所示：</p>\n<pre class=\"code-rows\"><code># userdel user12\n# ls -ld /home/user12\ndrwx------ 2 user12 grptest1 62 1月 2 06:47 /home/user12</code></pre>\n<p>此时user12的家目录还在，那么我们加上<code>-r</code>选项后再删除user1用户，命令如下所示：</p>\n<pre class=\"code-rows\"><code># ls -ld /home/user1\ndrwx------ 2 user1 test10 62 12月 30 07:46 /home/user1\n# userdel -r user1\n# ls -ld /home/usre1\nls: 无法访问/home/user1: 没有那个文件或目录</code></pre>\n<p>此时user1的家目录已经不复存在。</p>\n<h2 id=\"nav_point_97\">5.3 用户密码管理</h2>\n<p>密码对于一个用户来说是非常关键的，而且密码管理是系统管理员的一项非常重要的任务。</p>\n<h3 id=\"nav_point_98\">5.3.1 命令<code>passwd</code></h3>\n<p>用户创建后，默认是没有设置密码的。只有设置好密码后，才可以登录系统。为了安全，在为用户创建密码时，请尽量设置复杂一些。阿铭建议你按照如下规则设置密码：</p>\n<ul>\n<li>长度大于10个字符；</li>\n<li>密码中包含大小写字母、数字以及特殊字符<code>*</code>、<code>&amp;</code>、<code>%</code>等；</li>\n<li>不规则性（不要出现happy、love、linux、7758520、111111等单词或者数字）；</li>\n<li>密码中不要带有自己的名字、电话、生日以及公司名字等。</li>\n</ul>\n<p>为用户设置密码时，可以使用命令<code>passwd</code>，其格式为<code>passwd [username]</code>。该命令后面若不加用户名，则是为自己设定密码，示例命令如下：</p>\n<pre class=\"code-rows\"><code># passwd\n更改用户root的密码 。\n新的 密码：\n重新输入新的 密码：\npasswd： 所有的身份验证令牌已经成功更新。</code></pre>\n<p>如果你登录的是root用户，则后面可以跟普通用户的名字，意思是修改指定用户的密码，示例命令如下：</p>\n<pre class=\"code-rows\"><code># passwd user11\n更改用户 user11 的密码 。\n新的 密码：\n重新输入新的 密码：\npasswd： 所有的身份验证令牌已经成功更新。</code></pre>\n<p>需要注意的是，只有root才可以修改其他用户的密码，普通用户只能修改自己的密码。</p>\n<h3 id=\"nav_point_99\">5.3.2 命令<code>mkpasswd</code></h3>\n<p>命令<code>mkpasswd</code>用于生成密码。我们安装的Linux默认是没有这个命令的，因此需要安装一个expect软件包，安装命令如下：</p>\n<pre class=\"code-rows\"><code># yum install -y expect\n# mkpasswd\n$C7iuod6M</code></pre>\n<p>有时，我们需要生成指定长度的密码，这个用<code>mkpasswd</code>命令也可以满足。比如，生成12位长度的密码，示例命令如下：</p>\n<pre class=\"code-rows\"><code># mkpasswd -l 12\nj8nUg/0rddZh</code></pre>\n<p>当然，我们还可以指定密码中有几个特殊字符或有几个数字，示例命令如下：</p>\n<pre class=\"code-rows\"><code># mkpasswd -l 12 -s 0 -d 3\nyr4jm6SiwZ4p</code></pre>\n<p>上例中，<code>-s</code>指定的是特殊字符的个数，<code>-d</code>指定的是数字的个数。用生成的随机字符串作为密码再好不过了，只不过它不方便记忆。大家是否还记得第1章阿铭介绍的KeePass工具？大家可以把密码记录在这里，还是很方便的。</p>\n<h2 id=\"nav_point_100\">5.4 用户身份切换</h2>\n<p>在Linux系统中，有些事情只有root用户才能做，普通用户是不能的，这时就需要临时切换到root身份。下面阿铭带你做一个小试验，创建test用户，并修改其密码，这样我们就可以使用test用户登录Linux了。具体操作方法如下：</p>\n<pre class=\"code-rows\"><code># useradd test\n# passwd test\n更改用户 test 的密码 。\n新的 密码：\n重新输入新的 密码：\npasswd： 所有的身份验证令牌已经成功更新。</code></pre>\n<p>然后用test用户登录Linux，示例命令如下：</p>\n<pre class=\"code-rows\"><code>login as: test\ntest@192.168.188.128's password:\n$ whoami\ntest</code></pre>\n<p>登录后，使用<code>whoami</code>命令查看，发现当前用户是test。普通用户和root用户的shell提示符号有些区别，root用户是<code>#</code>，普通用户是<code>$</code>。</p>\n<h3 id=\"nav_point_101\">5.4.1 命令<code>su</code></h3>\n<p>命令<code>su</code>的格式为<code>su [-] username</code>，<code>su</code>后面既可以跟<code>-</code>，也可以不跟。普通用户的<code>su</code>命令不加<code>username</code>时，结果就是切换到root用户。当然，root用户同样可以使用<code>su</code>命令切换到普通用户。该命令加上<code>-</code>后，会初始化当前用户的各种环境变量（关于环境变量这部分内容，阿铭放在第10章中讲解）。下面阿铭做个简单的试验来说明加与不加<code>-</code>的区别，示例命令如下：</p>\n<pre class=\"code-rows\"><code>$ pwd\n/home/test\n$ su\n密码：\n# pwd\n/home/test\n# exit\n登出\n$ su -\n密码：\n# pwd\n/root</code></pre>\n<p>如果不加<code>-</code>，普通用户切换到root用户时，当前目录没有变化；而加上<code>-</code>切换到root用户时，当前目录为root用户的家目录。这跟直接登录root用户是一样的。当由root用户切换到普通用户时，是不需要输入密码的。在root下切换到普通用户的示例命令如下：</p>\n<pre class=\"code-rows\"><code># su - test\n上一次登录：四 1月 2 07:01:09 EST 2020从 192.168.72.1pts/2 上\n$ whoami\ntest</code></pre>\n<h3 id=\"nav_point_102\">5.4.2 命令<code>sudo</code></h3>\n<p>用<code>su</code>可以切换用户身份，而且每个普通用户都能切换到root身份。如果某个用户不小心泄露了root的密码，那系统岂不是非常不安全？是的。为了改进这个问题，Linux系统工程师设计了<code>sudo</code>这个命令。使用<code>sudo</code>命令执行一个只有root才能执行的命令是可以办到的，但是需要输入密码。这个密码并不是root的密码，而是用户自己的密码。在默认情况下，只有root用户才能使用<code>sudo</code>命令，普通用户想要使用，是需要root预先设定的。我们可以使用<code>visudo</code>命令编辑相关的配置文件/etc/sudoers。如果没有<code>visudo</code>这个命令，请使用命令<code>yum install -y sudo</code>安装。</p>\n<p>默认root支持<code>sudo</code>，是因为配置文件中有一行<code>root ALL=(ALL) ALL</code>。在该行下面加入<code>test ALL=(ALL) ALL</code>，就可以让test用户拥有<code>sudo</code>的特权。这行从左到右，第一段test表示一个用户，用于指定让哪个用户有<code>sudo</code>特权；第二段<code>ALL=(ALL)</code>比较难理解，左边的<code>ALL</code>指的是所有的主机，右边的<code>ALL</code>指的是获取哪个用户的身份，这段几乎都不用配置；第三段用于设定可以使用<code>sudo</code>的命令有哪些。</p>\n<p>使用<code>visudo</code>命令编辑/etc/sudoers配置文件（必须要使用root用户），<code>visudo</code>命令的使用方法和阿铭前面介绍的<code>vi</code>命令一样，即输入<code>i</code>进入编辑模式，编辑完成后，按Esc键，再输入<code>:wq</code>完成保存。具体操作方法如下所示：</p>\n<pre class=\"code-rows\"><code>## Allow root to run any commands anywhere\nroot ALL=(ALL) ALL\ntest ALL=(ALL) ALL</code></pre>\n<p>此时可以验证一下test用户的权限了，方法如下（操作是在root账号下进行的）：</p>\n<pre class=\"code-rows\"><code># su test\n$ ls // 当前目录是在/root下\nls: 无法打开目录'.': 权限不够\n$ sudo ls\n\n我们信任您已经从系统管理员那里了解了日常注意事项。\n总结起来无外乎这三点：\n\n #1) 尊重别人的隐私。\n #2) 输入前要先考虑(后果和风险)。\n #3) 权力越大，责任越大。\n\n[sudo] test 的密码：\n123 456 anaconda-ks.cfg</code></pre>\n<p>由于切换到test用户后当前目录还是/root，test用户没有任何权限，所以使用命令<code>ls</code>查看时，会提示权限不够。然而使用命令<code>sudo ls</code>输入test用户自身的密码后，就有权限了。初次使用<code>sudo</code>命令时，会出现上面的一大段提示，当再次使用<code>sudo</code>命令时则不再提示。</p>\n<p>如果每增加一个用户就需要多设置一行，那这样也太麻烦了，所以可以这样设置：把<code># %wheel ALL=(ALL) ALL</code>前面的<code>#</code>去掉，让这一行生效。此设置的意思是，让<code>wheel</code>这个组的所有用户都拥有<code>sudo</code>的权利。接下来，只要把所有需要设置<code>sudo</code>权限的用户都加入到<code>wheel</code>这个组中即可。如下所示：</p>\n<pre class=\"code-rows\"><code>## Allows people in group wheel to run all commands\n%wheel ALL=(ALL) ALL</code></pre>\n<p>配置文件 /etc/sudoers中包含许多配置项，可以使用命令<code>man sudoers</code>来获得帮助信息。下面阿铭介绍一个很实用的案例，我们的需求是把Linux服务器设置成这个样子：只允许使用普通用户登录，而普通用户登录后，可以不输入密码就能用<code>sudo</code>切换到root用户。阿铭的配置方法是，输入如下命令：</p>\n<pre class=\"code-rows\"><code># visudo</code></pre>\n<p>然后在文件的最后加入如下3行：</p>\n<pre class=\"code-rows\"><code>User_Alias USER_SU = test, test1, aming\nCmnd_Alias SU = /usr/bin/su\nUSER_SU ALL=(ALL) NOPASSWD: SU</code></pre>\n<p>其中第一行设定了一个user别名，其实这个<code>USER_SU</code>相当于是test、test1和aming三个用户；第二行设定了一个命令别名，<code>SU</code>相当于/usr/bin/su；第三行我们刚刚介绍过。保存配置文件后，使用test、test1、aming这3个用户登录Linux。执行命令<code>sudo su -</code>切换到root用户，获取root用户的所有权利，命令如下所示：</p>\n<pre class=\"code-rows\"><code># su - test\n$ sudo su -\n# whoami\nroot</code></pre>\n<p>不允许root直接登录，这个问题该如何解决呢？其实很简单，就是设置一个复杂到连自己都记不住的密码。不过这样也会有一个问题，就是普通用户可以使用<code>su</code>命令切换到root，然后再修改简单的密码就能直接登录root了。其实阿铭还有一个更好的办法，请看下面。</p>\n<h3 id=\"nav_point_103\">5.4.3 不允许root远程登录Linux</h3>\n<p>/etc/ssh/sshd_config为sshd服务的配置文件，默认允许root用户通过ssh远程登录Linux。要想不允许root用户远程登录Linux，具体操作方法为：修改配置文件/etc/ssh/sshd_config，在文件中查找<code>PermitRootLogin yes</code>并修改为<code>PermitRootLogin no</code>。保存配置文件后，需要重启sshd服务，命令如下所示：</p>\n<pre class=\"code-rows\"><code># systemctl restart sshd.service</code></pre>\n<p>需要注意的是，阿铭提供的这个方法只适用于通过ssh远程登录Linux的情况。</p>\n<h2 id=\"nav_point_104\">5.5 课后习题</h2>\n<p>(1) 查看配置文件/etc/shadow第一行中root账号的第3个字段（由<code>:</code>分隔）中的数字，请算一下这个数字是怎么得来的？</p>\n<p>(2) 写出一个你认为很强大的密码。</p>\n<p>(3) 查资料弄清楚/sbin/nologin和/bin/false的区别。你知道它们分别用在什么场合吗？</p>\n<p>(4) 当我们创建一个新账号时，系统会修改哪几个文件呢？</p>\n<p>(5) 如果我们已经创建了一个普通用户user1，默认这个用户的家目录为 /home/user1，请做试验证明能否通过直接修改/etc/passwd配置文件中user1的家目录那个字段来改变user1的家目录呢？（提示：你可以使用<code>cd ~</code>命令进入当前用户的家目录来验证）</p>\n<p>(6) /etc/passwd文件以<code>:</code>为分隔符，第3、4个字段分别表示什么含义？如果把某一行的第3个字段改为0，会发生什么呢？</p>\n<p>(7) 请先新增一个组group11，然后再新增一个账号user12，并使该账号所属组为group11组。</p>\n<p>(8) 如果删除一个组时报错：cannot remove the primary group of user 'aming'，这是什么意思？如何解决该问题呢？</p>\n<p>(9) 如何在删除某个用户时一并删除这个用户的家目录？</p>\n<p>(10) 如果你的Linux没有命令<code>mkpasswd</code>，则需要安装什么软件包？</p>\n<p>(11) 普通用户可以修改自己的密码吗？</p>\n<p>(12) 使用<code>su</code>命令时，后面加<code>-</code>表示什么含义？</p>\n<p>(13) <code>sudo</code>命令的作用是什么？</p>\n<p>(14) 创建系统账号时，用户名要符合什么样的规范？</p>\n<p>(15) 你知道在Linux系统里<code>uid</code>最大是多少吗？创建一个普通账号的默认<code>uid</code>最小是多少？</p>\n<p>(16) 一个用户可以同时属于多个用户组吗？如果可以，如何把一个用户加入到另外的组里？如何同时加入多个组？</p>\n\n<br style=\"page-break-after:always\" />","neighbors":{"left":{"article_title":"第 4 章 Linux文件和目录管理","id":741026},"right":{"article_title":"第 6 章 Linux磁盘管理","id":741028}},"comments":[]}