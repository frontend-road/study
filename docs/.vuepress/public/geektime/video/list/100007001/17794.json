{"id":17794,"title":"90 | Hystrix 主要概念","content":"无","comments":[{"had_liked":false,"id":34247,"user_name":"Sam_Deep_Thinking","can_delete":false,"product_type":"c3","uid":1001152,"ip_address":"","ucode":"8E4EF6F24B821B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/46/c0/106d98e7.jpg","comment_is_top":false,"comment_ctime":1540047541,"is_pvip":false,"replies":[{"id":12660,"content":"谢谢支持🌹","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1540732835,"ip_address":"","comment_id":34247,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"多谢杨老师","like_count":3,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427155,"discussion_content":"谢谢支持🌹","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540732835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180478,"user_name":"zhaoni","can_delete":false,"product_type":"c3","uid":1052158,"ip_address":"","ucode":"F317ECD6380984","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqT1ykjFve5LCsFvegqLb8MKrf6ASApsOgm8nRb5icDE7MgzKbia0zUQkxe44tKvpCwQ65QuHo4NVoQ/132","comment_is_top":false,"comment_ctime":1582292706,"is_pvip":false,"replies":[{"id":70178,"content":"应该是有些特殊的场景，一次用户请求执行多个相同HystrixCommand，参数相同的话可以做request soce的缓存，避免重复后台调用。这个功能既然是Netflix提供，估计它内部有这样的场景。如果你用不到，可以暂不关心。\n\nhttps:&#47;&#47;github.com&#47;Netflix&#47;Hystrix&#47;wiki&#47;How-To-Use#request-cache","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1582433345,"ip_address":"","comment_id":180478,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"波波老师：hystrix的缓存功能，做对应查询的缓存，缓存的作用范围指针对于一次请求，这个缓存意义有多大的？","like_count":2,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484674,"discussion_content":"应该是有些特殊的场景，一次用户请求执行多个相同HystrixCommand，参数相同的话可以做request soce的缓存，避免重复后台调用。这个功能既然是Netflix提供，估计它内部有这样的场景。如果你用不到，可以暂不关心。\n\nhttps://github.com/Netflix/Hystrix/wiki/How-To-Use#request-cache","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582433345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119647,"user_name":"citysun2009","can_delete":false,"product_type":"c3","uid":1090468,"ip_address":"","ucode":"285AB0E13C5927","user_header":"https://static001.geekbang.org/account/avatar/00/10/a3/a4/fc9cf791.jpg","comment_is_top":false,"comment_ctime":1564645351,"is_pvip":false,"replies":[{"id":43922,"content":"对，请求合并一般需要后台api配合的，比如请求数据操作，API既要支持单个请求，也要支持批量请求，这样hystrix才能配合实现请求合并(单位时间内多个单独操作合并成批量操作)。可以参考dzone上的一个案例：https:&#47;&#47;dzone.com&#47;articles&#47;batching-collapsing-requests","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1564673515,"ip_address":"","comment_id":119647,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"老师，你好：\n合并请求场景下，是不是后台的服务在设计时就要做成支持批量的。","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460995,"discussion_content":"对，请求合并一般需要后台api配合的，比如请求数据操作，API既要支持单个请求，也要支持批量请求，这样hystrix才能配合实现请求合并(单位时间内多个单独操作合并成批量操作)。可以参考dzone上的一个案例：https://dzone.com/articles/batching-collapsing-requests","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564673515,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}