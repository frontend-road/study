{"id":430173,"title":"导学（一）| 拆解CPU的基本结构和运行原理","content":"<p>你好，我是海纳。</p><p>在开始正式的课程之前，我专门为你设置了三节导学课，目的是帮你打好基础，扫清一些知识盲区，这样你学习这个课程会更加轻松、高效。</p><p>导学部分共有三节课，都是以视频方式讲述的，内容比较多，但我保证干货十足，非常值得你花时间好好观看学习。</p><p>今天这节导学课，我们会来拆解CPU的基本结构和运行原理。我们知道，CPU 作为计算机的总司令官，它管理着计算机的所有资源。它有两个主要的作用，分别是计算和控制。其中，计算主要是指逻辑数值运算，控制则体现在对数据传输，输入输出的控制上。可以想象，CPU在内存管理方面一定发挥着重要的作用。</p><p>CPU的基本架构，包含了运算器、寄存器、内存管理单元等模块。我在视频中会对这些模块的构成原理、运行原理以及其作用进行介绍。</p><p>了解了基本架构之后，我们还会从CPU运行的角度出发，来深入理解机器码和中断的原理。为什么我要给你讲机器码和中断呢？</p><p>这是因为程序员可以通过编程来指挥CPU为人们工作，而对 CPU 发号施令的就是机器码。此外，CPU 在与外设交互时，最重要的机制就是中断，内存、磁盘 IO、网络 IO 有很多功能都是依赖中断完成的，所以，不管是系统级程序员，还是应用开发程序员，深刻地理解中断也是你的必备技能之一。</p><!-- [[[read_end]]] --><p>好，不啰嗦了，现在就请你点开下面的视频，来学习今天的课程吧！</p><p><video poster=\"https://media001.geekbang.org/3ca2b614cc6c4fbcab0b6ba3a25e1f64/snapshots/d241fb180a394c4c98a2e7aac70639fe-00005.jpg\" preload=\"none\" controls=\"\"><source src=\"https://media001.geekbang.org/customerTrans/7e27d07d27d407ebcc195a0e78395f55/28f46a46-17ccae5d807-0000-0000-01d-dbacd.mp4\" type=\"video/mp4\"><source src=\" https://media001.geekbang.org/647d5951db0048dbbc7875e328e18e91/0c99a4dc3b204557ab88e1f750dfd208-97d79ddd66e04dddc645e76aacb835e0-sd.m3u8\" type=\"application/x-mpegURL\"></video></p><p>点击<a href=\"https://pan.baidu.com/s/1Zg0YBri3TJJasOC2KX3spQ\">这里</a>获取课件，提取码：j9e5。</p>","comments":[{"had_liked":false,"id":320387,"user_name":"冬风向左吹","can_delete":false,"product_type":"c1","uid":1066928,"ip_address":"","ucode":"376C45C5134F93","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/b0/a9b77a1e.jpg","comment_is_top":false,"comment_ctime":1636288297,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"53175895849","product_id":100094901,"comment_content":"视频尽然不能倍速播放。。。","like_count":12,"discussions":[{"author":{"id":1619597,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er6OV33jHia3U9LYlZEx2HrpsELeh3KMlqFiaKpSAaaZeBttXRAVvDXUgcufpqJ60bJWGYGNpT7752w/132","nickname":"dog_brother","note":"","ucode":"9F64D3C6D815FB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539268,"discussion_content":"B站极客时间账号有回放视频，可以倍速播放","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1639652479,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320354,"user_name":"分清云淡","can_delete":false,"product_type":"c1","uid":1269873,"ip_address":"","ucode":"7045AE6BF72D31","user_header":"https://static001.geekbang.org/account/avatar/00/13/60/71/895ee6cf.jpg","comment_is_top":false,"comment_ctime":1636274263,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"44585947223","product_id":100094901,"comment_content":"CPU这20年主频没法提升的核心原因是：频率提升就必然导致电压提升（3倍指数提升），这是因为频率高了，因为晶体管的门延迟效应，必须加大电压来抵消这个门延迟，所以一昧提升频率得不偿失（能耗高），另外温度控制不住，所以最终大家都选择了2-3G主频这个区间。特别追求主频的也有做到5G的，是用能耗高换来的，实操意义不大","like_count":10},{"had_liked":false,"id":332238,"user_name":"我爱裸奔","can_delete":false,"product_type":"c1","uid":1488641,"ip_address":"","ucode":"7201385CBE4D02","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJpOKoSyYZ5LtumlDpmA4z8JpJEicRjAvfrZBELHHvR4FSAZq9vqx5jThRB6A9X6pFaiaSeFkn8gXJQ/132","comment_is_top":false,"comment_ctime":1643103816,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18822973000","product_id":100094901,"comment_content":"极客看到目前最好的课程","like_count":4},{"had_liked":false,"id":318497,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1635315294,"is_pvip":true,"replies":[{"id":"115499","content":"大核频率高，电路更复杂，计算能力更强，功耗高；小核反之。这是为了适应不同特点的任务。有的任务时间敏感就调度给大核，有的任务时间长但性能要求不高就交给小核。任务的核间调度算法是大小核架构上的重要优化方向。","user_name":"作者回复","user_name_real":"氦钠锶","uid":"1360512","ctime":1635327772,"ip_address":"","comment_id":318497,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18815184478","product_id":100094901,"comment_content":"CPU 多核，大核和小核 有什么区别的？","like_count":4,"discussions":[{"author":{"id":1360512,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c2/80/6ebf32e8.jpg","nickname":"海纳","note":"","ucode":"AB9F7ADB1428D2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529273,"discussion_content":"大核频率高，电路更复杂，计算能力更强，功耗高；小核反之。这是为了适应不同特点的任务。有的任务时间敏感就调度给大核，有的任务时间长但性能要求不高就交给小核。任务的核间调度算法是大小核架构上的重要优化方向。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635327772,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":327989,"user_name":"海生","can_delete":false,"product_type":"c1","uid":1119247,"ip_address":"","ucode":"27E459D96E9E55","user_header":"https://static001.geekbang.org/account/avatar/00/11/14/0f/91f0194d.jpg","comment_is_top":false,"comment_ctime":1640434930,"is_pvip":false,"replies":[{"id":"119526","content":"顶你上精选评论！","user_name":"作者回复","user_name_real":"编辑","uid":"1360512","ctime":1640618477,"ip_address":"","comment_id":327989,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10230369522","product_id":100094901,"comment_content":"中断常规的就是楼主讲的，不过增加了芯片的管脚，后来发明了msi和msi-x技术，增加描述寄存器，通过带内总线来发中断。","like_count":2,"discussions":[{"author":{"id":1360512,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c2/80/6ebf32e8.jpg","nickname":"海纳","note":"","ucode":"AB9F7ADB1428D2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542007,"discussion_content":"顶你上精选评论！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640618477,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321103,"user_name":"伯阳","can_delete":false,"product_type":"c1","uid":1596631,"ip_address":"","ucode":"DBDC8735AA54AD","user_header":"https://static001.geekbang.org/account/avatar/00/18/5c/d7/3b92bb0d.jpg","comment_is_top":false,"comment_ctime":1636680819,"is_pvip":false,"replies":[{"id":"117077","content":"嗯。要记的东西有点多，难是不难的。加油！","user_name":"作者回复","user_name_real":"编辑","uid":"1360512","ctime":1637375585,"ip_address":"","comment_id":321103,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5931648115","product_id":100094901,"comment_content":"感觉这种东西有点难啊 老师","like_count":1,"discussions":[{"author":{"id":1360512,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c2/80/6ebf32e8.jpg","nickname":"海纳","note":"","ucode":"AB9F7ADB1428D2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531657,"discussion_content":"嗯。要记的东西有点多，难是不难的。加油！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637375585,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319928,"user_name":"小时候可鲜啦","can_delete":false,"product_type":"c1","uid":1050777,"ip_address":"","ucode":"C88B3EDF758230","user_header":"https://static001.geekbang.org/account/avatar/00/10/08/99/6ab45a2f.jpg","comment_is_top":false,"comment_ctime":1636011082,"is_pvip":false,"replies":[{"id":"116147","content":"它也不想啊:(，它在遇到分支指令的时候会猜一个去执行，如果发现最后猜错了，只好把流水线排空，再去把对的拿进来执行。","user_name":"作者回复","user_name_real":"海纳","uid":"1360512","ctime":1636279171,"ip_address":"","comment_id":319928,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5930978378","product_id":100094901,"comment_content":"CPU刷新流水线的目的是啥？","like_count":1,"discussions":[{"author":{"id":1360512,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c2/80/6ebf32e8.jpg","nickname":"海纳","note":"","ucode":"AB9F7ADB1428D2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529815,"discussion_content":"它也不想啊:(，它在遇到分支指令的时候会猜一个去执行，如果发现最后猜错了，只好把流水线排空，再去把对的拿进来执行。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636279171,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":360210,"user_name":"当初莫相识","can_delete":false,"product_type":"c1","uid":2768765,"ip_address":"北京","ucode":"313917BB360D48","user_header":"https://static001.geekbang.org/account/avatar/00/2a/3f/7d/f624fa69.jpg","comment_is_top":false,"comment_ctime":1666278894,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1666278894","product_id":100094901,"comment_content":"视频能在其他地方播放吗，这里不能缓存，没法在地铁上看，也不能倍速","like_count":0},{"had_liked":false,"id":331354,"user_name":"Geek_225244","can_delete":false,"product_type":"c1","uid":1940461,"ip_address":"","ucode":"43A0711FFAB44A","user_header":"https://static001.geekbang.org/account/avatar/00/1d/9b/ed/e633460a.jpg","comment_is_top":false,"comment_ctime":1642560446,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642560446","product_id":100094901,"comment_content":"PPT生成汇编地方，采用-S选项的 GCC 编译过程会为每个被编译的输入文件生成以.s作为后缀的汇编语言文件，变量的名称作为汇编语言语句中的注释，可以加上-fverbose-asm选项：<br>PPT用的是误写成 -s(小写），这个参数会把符号表从最终的可执行文件中删除。 ","like_count":0},{"had_liked":false,"id":327986,"user_name":"海生","can_delete":false,"product_type":"c1","uid":1119247,"ip_address":"","ucode":"27E459D96E9E55","user_header":"https://static001.geekbang.org/account/avatar/00/11/14/0f/91f0194d.jpg","comment_is_top":false,"comment_ctime":1640434273,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640434273","product_id":100094901,"comment_content":"ARM中针对大于32位位宽的操作数，通过增加单独一个得特殊寄存器，并标记有效位宽来实现","like_count":0},{"had_liked":false,"id":327984,"user_name":"海生","can_delete":false,"product_type":"c1","uid":1119247,"ip_address":"","ucode":"27E459D96E9E55","user_header":"https://static001.geekbang.org/account/avatar/00/11/14/0f/91f0194d.jpg","comment_is_top":false,"comment_ctime":1640433935,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640433935","product_id":100094901,"comment_content":"ARM好像也是跟这个汇编指令方向相反","like_count":0},{"had_liked":false,"id":327983,"user_name":"海生","can_delete":false,"product_type":"c1","uid":1119247,"ip_address":"","ucode":"27E459D96E9E55","user_header":"https://static001.geekbang.org/account/avatar/00/11/14/0f/91f0194d.jpg","comment_is_top":false,"comment_ctime":1640433292,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640433292","product_id":100094901,"comment_content":"Arm使用r15来做pc","like_count":0},{"had_liked":false,"id":327982,"user_name":"海生","can_delete":false,"product_type":"c1","uid":1119247,"ip_address":"","ucode":"27E459D96E9E55","user_header":"https://static001.geekbang.org/account/avatar/00/11/14/0f/91f0194d.jpg","comment_is_top":false,"comment_ctime":1640433149,"is_pvip":false,"replies":[{"id":"119527","content":"一点点，主要是arm的服务器不太容易搞。虽然手机很多，但是手机上的相关调试工具少了一点，所以还是拿大家最熟悉的x86来讲。我看你对arm已经很熟悉了呀。","user_name":"作者回复","user_name_real":"编辑","uid":"1360512","ctime":1640618563,"ip_address":"","comment_id":327982,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1640433149","product_id":100094901,"comment_content":"楼主会讲arm得汇编吗？","like_count":0,"discussions":[{"author":{"id":1360512,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c2/80/6ebf32e8.jpg","nickname":"海纳","note":"","ucode":"AB9F7ADB1428D2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542008,"discussion_content":"一点点，主要是arm的服务器不太容易搞。虽然手机很多，但是手机上的相关调试工具少了一点，所以还是拿大家最熟悉的x86来讲。我看你对arm已经很熟悉了呀。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640618563,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":327979,"user_name":"海生","can_delete":false,"product_type":"c1","uid":1119247,"ip_address":"","ucode":"27E459D96E9E55","user_header":"https://static001.geekbang.org/account/avatar/00/11/14/0f/91f0194d.jpg","comment_is_top":false,"comment_ctime":1640432295,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640432295","product_id":100094901,"comment_content":"这个是经典的soc设计架构，现在都是采用NOC来规避总线的弊端。总线技术从单总线然后是crossbar一直发展到现在的NOC全局异步局部同步技术。","like_count":0},{"had_liked":false,"id":327978,"user_name":"海生","can_delete":false,"product_type":"c1","uid":1119247,"ip_address":"","ucode":"27E459D96E9E55","user_header":"https://static001.geekbang.org/account/avatar/00/11/14/0f/91f0194d.jpg","comment_is_top":false,"comment_ctime":1640432050,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640432050","product_id":100094901,"comment_content":"图灵完备性要求实现.或和异或就可以，数理完备性要求实现加和乘法就可以。二者可以转换","like_count":0},{"had_liked":false,"id":321940,"user_name":"Stormouble","can_delete":false,"product_type":"c1","uid":1234875,"ip_address":"","ucode":"3163D9BEBF053D","user_header":"https://static001.geekbang.org/account/avatar/00/12/d7/bb/dd4442ba.jpg","comment_is_top":false,"comment_ctime":1637113771,"is_pvip":false,"replies":[{"id":"117053","content":"这个问题产生的原因非常复杂，我们在第15课会有详细解释，欢迎持续关注。如果看完第15课，还不能解决你的问题，你可以继续提问。","user_name":"作者回复","user_name_real":"编辑","uid":"1360512","ctime":1637326476,"ip_address":"","comment_id":321940,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1637113771","product_id":100094901,"comment_content":"<br>老师，关于CPU乱序执行有一个疑惑：乱序执行下，为保证顺序，会把指令的执行结果会被写入到重排序缓存ROB中，按照原有顺序进行提交。既然会保证顺序，那么为什么会出现因为乱序执行导致的并发问题呢？<br>举个例子；<br>cpu1: load 地址B 寄存器B；store 100 地址A<br>cpu2: load 地址A 寄存器A；store 200 地址B<br>假设cpu1乱序执行，先执行store指令，再执行load指令，cpu2顺序执行，初始时地址A、B的值为0。在cpu1执行完store指令后，cpu2开始执行load指令，这个时候cpu1看到的值可能是100吗？","like_count":0,"discussions":[{"author":{"id":1360512,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c2/80/6ebf32e8.jpg","nickname":"海纳","note":"","ucode":"AB9F7ADB1428D2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531514,"discussion_content":"这个问题产生的原因非常复杂，我们在第15课会有详细解释，欢迎持续关注。如果看完第15课，还不能解决你的问题，你可以继续提问。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637326476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320805,"user_name":"HollyWong","can_delete":false,"product_type":"c1","uid":2837328,"ip_address":"","ucode":"03A66A2BCC0A58","user_header":"https://static001.geekbang.org/account/avatar/00/2b/4b/50/fae00aff.jpg","comment_is_top":false,"comment_ctime":1636515532,"is_pvip":false,"replies":[{"id":"116351","content":"i386的段选择子我们已经讲了。你再看看64位是怎么处理的呢？","user_name":"作者回复","user_name_real":"海纳","uid":"1360512","ctime":1636526862,"ip_address":"","comment_id":320805,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1636515532","product_id":100094901,"comment_content":"段寄存器在8086里是直接存放段基址，但是在286以上也是有用的，存放的是段选择子，用它到段表里找段描述符，然后在段描述符里有段基址。所以一直有用，不能说段寄存器没用了。","like_count":0,"discussions":[{"author":{"id":1360512,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c2/80/6ebf32e8.jpg","nickname":"海纳","note":"","ucode":"AB9F7ADB1428D2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530121,"discussion_content":"i386的段选择子我们已经讲了。你再看看64位是怎么处理的呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636526862,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2837328,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/4b/50/fae00aff.jpg","nickname":"HollyWong","note":"","ucode":"03A66A2BCC0A58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414104,"discussion_content":"64位里弱化了段的概念，但是段机制的优点，如逻辑性强（按大小、性质分）、易实现共享这些都舍弃了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636646098,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318277,"user_name":"John","can_delete":false,"product_type":"c1","uid":1384406,"ip_address":"","ucode":"6CCFA8F531BB12","user_header":"https://static001.geekbang.org/account/avatar/00/15/1f/d6/261500b1.jpg","comment_is_top":false,"comment_ctime":1635227618,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635227618","product_id":100094901,"comment_content":"请问有简报档案吗？","like_count":0}]}