{"id":531551,"title":"12｜Pod：如何理解这个Kubernetes里最核心的概念？","content":"<p>你好，我是Chrono。</p><p>前两天我们学习了Kubernetes世界里的工作语言YAML，还编写了一个简短的YAML文件，描述了一个API对象：Pod，它在spec字段里包含了容器的定义。</p><p>那么为什么Kubernetes不直接使用已经非常成熟稳定的容器？为什么要再单独抽象出一个Pod对象？为什么几乎所有人都说Pod是Kubernetes里最核心最基本的概念呢？</p><p>今天我就来逐一解答这些问题，希望你学完今天的这次课，心里面能够有明确的答案。</p><h2>为什么要有Pod</h2><p>Pod这个词原意是“豌豆荚”，后来又延伸出“舱室”“太空舱”等含义，你可以看一下这张图片，形象地来说Pod就是包含了很多组件、成员的一种结构。</p><p><img src=\"https://static001.geekbang.org/resource/image/06/ba/0608d5d450c503c4102af27518d15bba.png?wh=800x533\" alt=\"图片\" title=\"图片来自网络\"></p><p>容器技术我想你现在已经比较熟悉了，它让进程在一个“沙盒”环境里运行，具有良好的隔离性，对应用是一个非常好的封装。</p><p>不过，当容器技术进入到现实的生产环境中时，这种隔离性就带来了一些麻烦。因为很少有应用是完全独立运行的，经常需要几个进程互相协作才能完成任务，比如在“入门篇”里我们搭建WordPress网站的时候，就需要Nginx、WordPress、MariaDB三个容器一起工作。</p><p>WordPress例子里的这三个应用之间的关系还是比较松散的，它们可以分别调度，运行在不同的机器上也能够以IP地址通信。</p><!-- [[[read_end]]] --><p>但还有一些特殊情况，多个应用结合得非常紧密以至于无法把它们拆开。比如，有的应用运行前需要其他应用帮它初始化一些配置，还有就是日志代理，它必须读取另一个应用存储在本地磁盘的文件再转发出去。这些应用如果被强制分离成两个容器，切断联系，就无法正常工作了。</p><p>那么把这些应用都放在一个容器里运行可不可以呢？</p><p>当然可以，但这并不是一种好的做法。因为容器的理念是对应用的独立封装，它里面就应该是一个进程、一个应用，如果里面有多个应用，不仅违背了容器的初衷，也会让容器更难以管理。</p><p><strong>为了解决这样多应用联合运行的问题，同时还要不破坏容器的隔离，就需要在容器外面再建立一个“收纳舱”</strong>，让多个容器既保持相对独立，又能够小范围共享网络、存储等资源，而且永远是“绑在一起”的状态。</p><p>所以，Pod的概念也就呼之欲出了，容器正是“豆荚”里那些小小的“豌豆”，你可以在Pod的YAML里看到，“spec.containers”字段其实是一个数组，里面允许定义多个容器。</p><p>如果再拿之前讲过的“小板房”来比喻的话，Pod就是由客厅、卧室、厨房等预制房间拼装成的一个齐全的生活环境，不仅同样具备易于拆装易于搬迁的优点，而且要比单独的“一居室”功能强大得多，能够让进程“住”得更舒服。</p><h2>为什么Pod是Kubernetes的核心对象</h2><p>因为Pod是对容器的“打包”，里面的容器是一个整体，总是能够一起调度、一起运行，绝不会出现分离的情况，而且Pod属于Kubernetes，可以在不触碰下层容器的情况下任意定制修改。所以有了Pod这个抽象概念，Kubernetes在集群级别上管理应用就会“得心应手”了。</p><p>Kubernetes让Pod去编排处理容器，然后把Pod作为应用调度部署的<strong>最小单位</strong>，Pod也因此成为了Kubernetes世界里的“原子”（当然这个“原子”内部是有结构的，不是铁板一块），基于Pod就可以构建出更多更复杂的业务形态了。</p><p>下面的这张图你也许在其他资料里见过，它从Pod开始，扩展出了Kubernetes里的一些重要API对象，比如配置信息ConfigMap、离线作业Job、多实例部署Deployment等等，它们都分别对应到现实中的各种实际运维需求。</p><p><img src=\"https://static001.geekbang.org/resource/image/9e/75/9ebab7d513a211a926dd69f7535ac175.png?wh=1478x812\" alt=\"图片\"></p><p>不过这张图虽然很经典，参考价值很高，但毕竟有些年头了，随着Kubernetes的发展，它已经不能够全面地描述Kubernetes的资源对象了。</p><p>受这张图的启发，我自己重新画了一份以Pod为中心的Kubernetes资源对象关系图，添加了一些新增的Kubernetes概念，今后我们就依据这张图来探索Kubernetes的各项功能。</p><p><img src=\"https://static001.geekbang.org/resource/image/b5/cf/b5a7003788cb6f2b1c5c4f6873a8b5cf.jpg?wh=1920x1298\" alt=\"图片\"></p><p>从这两张图中你也应该能够看出来，所有的Kubernetes资源都直接或者间接地依附在Pod之上，所有的Kubernetes功能都必须通过Pod来实现，所以Pod理所当然地成为了Kubernetes的核心对象。</p><h2>如何使用YAML描述Pod</h2><p>既然Pod这么重要，那么我们就很有必要来详细了解一下Pod，理解了Pod概念，我们的Kubernetes学习之旅就成功了一半。</p><p>还记得吧，我们始终可以用命令 <code>kubectl explain</code> 来查看任意字段的详细说明，所以接下来我就只简要说说写YAML时Pod里的一些常用字段。</p><p>因为Pod也是API对象，所以它也必然具有<strong>apiVersion</strong>、<strong>kind</strong>、<strong>metadata、spec</strong>这四个基本组成部分。</p><p>“apiVersion”和“kind”这两个字段很简单，对于Pod来说分别是固定的值 <code>v1</code> 和 <code>Pod</code>，而一般来说，“metadata”里应该有 <code>name</code> 和 <code>labels</code> 这两个字段。</p><p>我们在使用Docker创建容器的时候，可以不给容器起名字，但在Kubernetes里，Pod必须要有一个名字，这也是Kubernetes里所有资源对象的一个约定。在课程里，我通常会为Pod名字统一加上 <code>pod</code> 后缀，这样可以和其他类型的资源区分开。</p><p><code>name</code> 只是一个基本的标识，信息有限，所以 <code>labels</code> 字段就派上了用处。它可以添加任意数量的Key-Value，给Pod“贴”上归类的标签，结合 <code>name</code> 就更方便识别和管理了。</p><p>比如说，我们可以根据运行环境，使用标签 <code>env=dev/test/prod</code>，或者根据所在的数据中心，使用标签 <code>region: north/south</code>，还可以根据应用在系统中的层次，使用 <code>tier=front/middle/back</code> ……如此种种，只需要发挥你的想象力。</p><p>下面这段YAML代码就描述了一个简单的Pod，名字是“busy-pod”，再附加上一些标签：</p><pre><code class=\"language-yaml\">apiVersion: v1\nkind: Pod\nmetadata:\n&nbsp; name: busy-pod\n&nbsp; labels:\n&nbsp; &nbsp; owner: chrono\n&nbsp; &nbsp; env: demo\n&nbsp; &nbsp; region: north\n&nbsp; &nbsp; tier: back\n</code></pre><p>“metadata”一般写上 <code>name</code> 和 <code>labels</code> 就足够了，而“spec”字段由于需要管理、维护Pod这个Kubernetes的基本调度单元，里面有非常多的关键信息，今天我介绍最重要的“<strong>containers</strong>”，其他的hostname、restartPolicy等字段你可以课后自己查阅文档学习。</p><p>“containers”是一个数组，里面的每一个元素又是一个container对象，也就是容器。</p><p>和Pod一样，container对象也必须要有一个 <code>name</code> 表示名字，然后当然还要有一个 <code>image</code> 字段来说明它使用的镜像，这两个字段是必须要有的，否则Kubernetes会报告数据验证错误。</p><p>container对象的其他字段基本上都可以和“入门篇”学过的Docker、容器技术对应，理解起来难度不大，我就随便列举几个：</p><ul>\n<li><strong>ports</strong>：列出容器对外暴露的端口，和Docker的 <code>-p</code> 参数有点像。</li>\n<li><strong>imagePullPolicy</strong>：指定镜像的拉取策略，可以是Always/Never/IfNotPresent，一般默认是IfNotPresent，也就是说只有本地不存在才会远程拉取镜像，可以减少网络消耗。</li>\n<li><strong>env</strong>：定义Pod的环境变量，和Dockerfile里的 <code>ENV</code> 指令有点类似，但它是运行时指定的，更加灵活可配置。</li>\n<li><strong>command</strong>：定义容器启动时要执行的命令，相当于Dockerfile里的 <code>ENTRYPOINT</code> 指令。</li>\n<li><strong>args</strong>：它是command运行时的参数，相当于Dockerfile里的 <code>CMD</code> 指令，这两个命令和Docker的含义不同，要特别注意。</li>\n</ul><p>现在我们就来编写“busy-pod”的spec部分，添加 <code>env</code>、<code>command</code>、<code>args</code> 等字段：</p><pre><code class=\"language-yaml\">spec:\n&nbsp; containers:\n&nbsp; - image: busybox:latest\n&nbsp; &nbsp; name: busy\n&nbsp; &nbsp; imagePullPolicy: IfNotPresent\n&nbsp; &nbsp; env:\n&nbsp; &nbsp; &nbsp; - name: os\n&nbsp; &nbsp; &nbsp; &nbsp; value: \"ubuntu\"\n&nbsp; &nbsp; &nbsp; - name: debug\n&nbsp; &nbsp; &nbsp; &nbsp; value: \"on\"\n&nbsp; &nbsp; command:\n&nbsp; &nbsp; &nbsp; - /bin/echo\n&nbsp; &nbsp; args:\n&nbsp; &nbsp; &nbsp; - \"$(os), $(debug)\"\n</code></pre><p>这里我为Pod指定使用镜像busybox:latest，拉取策略是 <code>IfNotPresent</code> ，然后定义了 <code>os</code> 和 <code>debug</code> 两个环境变量，启动命令是 <code>/bin/echo</code>，参数里输出刚才定义的环境变量。</p><p>把这份YAML文件和Docker命令对比一下，你就可以看出，YAML在 <code>spec.containers</code> 字段里用“声明式”把容器的运行状态描述得非常清晰准确，要比 <code>docker run</code> 那长长的命令行要整洁的多，对人、对机器都非常友好。</p><h2>如何使用kubectl操作Pod</h2><p>有了描述Pod的YAML文件，现在我就介绍一下用来操作Pod的kubectl命令。</p><p><code>kubectl apply</code>、<code>kubectl delete</code> 这两个命令在上次课里已经说过了，它们可以使用 <code>-f</code> 参数指定YAML文件创建或者删除Pod，例如：</p><pre><code class=\"language-plain\">kubectl apply -f busy-pod.yml\nkubectl delete -f busy-pod.yml\n</code></pre><p>不过，因为我们在YAML里定义了“name”字段，所以也可以在删除的时候直接指定名字来删除：</p><pre><code class=\"language-plain\">kubectl delete pod busy-pod\n</code></pre><p>和Docker不一样，Kubernetes的Pod不会在前台运行，只能在后台（相当于默认使用了参数 <code>-d</code>），所以输出信息不能直接看到。我们可以用命令 <code>kubectl logs</code>，它会把Pod的标准输出流信息展示给我们看，在这里就会显示出预设的两个环境变量的值：</p><pre><code class=\"language-plain\">kubectl logs busy-pod\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/76/f2/76452a603cddaf3cce6706697369d1f2.png?wh=948x124\" alt=\"图片\"></p><p>使用命令 <code>kubectl get pod</code> 可以查看Pod列表和运行状态：</p><pre><code class=\"language-plain\">kubectl get pod\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/54/9c/544d4d4521yy1e2cyy3b79615cbcc69c.png?wh=1464x184\" alt=\"图片\"></p><p>你会发现这个Pod运行有点不正常，状态是“CrashLoopBackOff”，那么我们可以使用命令 <code>kubectl describe</code> 来检查它的详细状态，它在调试排错时很有用：</p><pre><code class=\"language-plain\">kubectl describe pod busy-pod\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/78/68/786bb31f3d6d69edd16ddfb540d9ef68.png?wh=1920x294\" alt=\"图片\"></p><p>通常需要关注的是末尾的“Events”部分，它显示的是Pod运行过程中的一些关键节点事件。对于这个busy-pod，因为它只执行了一条 <code>echo</code> 命令就退出了，而Kubernetes默认会重启Pod，所以就会进入一个反复停止-启动的循环错误状态。</p><p>因为Kubernetes里运行的应用大部分都是不会主动退出的服务，所以我们可以把这个busy-pod删掉，用上次课里创建的ngx-pod.yml，启动一个Nginx服务，这才是大多数Pod的工作方式。</p><pre><code class=\"language-plain\">kubectl apply -f ngx-pod.yml\n</code></pre><p>启动之后，我们再用 <code>kubectl get pod</code> 来查看状态，就会发现它已经是“Running”状态了：</p><p><img src=\"https://static001.geekbang.org/resource/image/6c/f9/6cd9e20234784f666687ca614873ccf9.png?wh=1124x184\" alt=\"图片\"></p><p>命令 <code>kubectl logs</code> 也能够输出Nginx的运行日志：</p><p><img src=\"https://static001.geekbang.org/resource/image/6c/b1/6c1ce29c29602f111ba39dea6aab95b1.png?wh=1920x415\" alt=\"图片\"></p><p>另外，kubectl也提供与docker类似的 <code>cp</code> 和 <code>exec</code> 命令，<code>kubectl cp</code> 可以把本地文件拷贝进Pod，<code>kubectl exec</code> 是进入Pod内部执行Shell命令，用法也差不多。</p><p>比如我有一个“a.txt”文件，那么就可以使用 <code>kubectl cp</code> 拷贝进Pod的“/tmp”目录里：</p><pre><code class=\"language-plain\">echo 'aaa' &gt; a.txt\nkubectl cp a.txt ngx-pod:/tmp\n</code></pre><p>不过 <code>kubectl exec</code> 的命令格式与Docker有一点小差异，需要在Pod后面加上 <code>--</code>，把kubectl的命令与Shell命令分隔开，你在用的时候需要小心一些：</p><pre><code class=\"language-plain\">kubectl exec -it ngx-pod -- sh\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/34/6b/343756ee45533a056fdca97f9fe2dd6b.png?wh=1920x402\" alt=\"图片\"></p><h2>小结</h2><p>好了，今天我们一起学习了Kubernetes里最核心最基本的概念Pod，知道了应该如何使用YAML来定制Pod，还有如何使用kubectl命令来创建、删除、查看、调试Pod。</p><p>Pod屏蔽了容器的一些底层细节，同时又具有足够的控制管理能力，比起容器的“细粒度”、虚拟机的“粗粒度”，Pod可以说是“中粒度”，灵活又轻便，非常适合在云计算领域作为应用调度的基本单元，因而成为了Kubernetes世界里构建一切业务的“原子”。</p><p>今天的知识要点我简单列在了下面：</p><ol>\n<li>现实中经常会有多个进程密切协作才能完成任务的应用，而仅使用容器很难描述这种关系，所以就出现了Pod，它“打包”一个或多个容器，保证里面的进程能够被整体调度。</li>\n<li>Pod是Kubernetes管理应用的最小单位，其他的所有概念都是从Pod衍生出来的。</li>\n<li>Pod也应该使用YAML“声明式”描述，关键字段是“spec.containers”，列出名字、镜像、端口等要素，定义内部的容器运行状态。</li>\n<li>操作Pod的命令很多与Docker类似，如 <code>kubectl run</code>、<code>kubectl cp</code>、<code>kubectl exec</code> 等，但有的命令有些小差异，使用的时候需要注意。</li>\n</ol><p>虽然Pod是Kubernetes的核心概念，非常重要，但事实上在Kubernetes里通常并不会直接创建Pod，因为它只是对容器做了简单的包装，比较脆弱，离复杂的业务需求还有些距离，需要Job、CronJob、Deployment等其他对象增添更多的功能才能投入生产使用。</p><h2>课下作业</h2><p>最后是课下作业时间，给你留两个思考题：</p><ol>\n<li>如果没有Pod，直接使用容器来管理应用会有什么样的麻烦？</li>\n<li>你觉得Pod和容器之间有什么区别和联系？</li>\n</ol><p>欢迎留言参与讨论，如果有收获也欢迎你分享给朋友一起学习。我们下节课再见。</p><p><img src=\"https://static001.geekbang.org/resource/image/f5/9b/f5f2bfcdc2ce5a94ae5113262351e89b.jpg?wh=1920x2868\" alt=\"图片\"></p>","comments":[{"had_liked":false,"id":352089,"user_name":"pyhhou","can_delete":false,"product_type":"c1","uid":1256496,"ip_address":"","ucode":"31EF8D50CF91A5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibZVAmmdAibBeVpUjzwId8ibgRzNk7fkuR5pgVicB5mFSjjmt2eNadlykVLKCyGA0GxGffbhqLsHnhDRgyzxcKUhjg/132","comment_is_top":false,"comment_ctime":1658381136,"is_pvip":false,"replies":[{"id":128048,"content":"awesome ","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1658388758,"ip_address":"","comment_id":352089,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100114501,"comment_content":"思考题\n\n1. 可以把 Pod 看作是介于容器之上的一层抽象，之所以需要这一层抽象是因为容器与容器之间有着不确定的关系，有的容器需要与彼此隔离，而有的容器却需要彼此交互。当容器规模增大，容器之间的作用关系就会变得极其复杂，难于管理。Pod 的出现就是为了解决容器管理的问题，让大规模应用下的容器编排变得更加清晰有序，易于维护\n\n2. 不管是容器还是 Pod，都是虚拟概念。把普通进程或应用加上权限限制就成了容器，再把容器加上权限限制就成了 Pod。说白了，就是不断地抽象封装，这也是软件中解决复杂问题的唯一手段。容器之于Pod，就好比 线程之于进程、函数之于类、文件之于文件夹等等","like_count":76,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580840,"discussion_content":"awesome ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658388758,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352803,"user_name":"三溪","can_delete":false,"product_type":"c1","uid":2078022,"ip_address":"","ucode":"00807C1B166E5E","user_header":"https://static001.geekbang.org/account/avatar/00/1f/b5/46/2ac4b984.jpg","comment_is_top":false,"comment_ctime":1658934694,"is_pvip":false,"replies":[{"id":128286,"content":"awesome","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1658960479,"ip_address":"","comment_id":352803,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100114501,"comment_content":"我这里补充下个人遇到的坑，希望对大家有所帮助！\n当你使用kubectl apply -f指定YAML文件来创建pod时，只要你spec.containers.image里面的tag是latest，那么无论你的imagePullpolicy策略是什么，无论本地是否已存在该镜像文件，一定会先联网查询镜像信息，如果此时正好是私网无法连接互联网时，那么pod就会直接创建失败，你使用describe查询时报错也是无法拉取镜像。\n只要tag不是latest，比如stable或者1.23什么的具体版本，本地已存在对应镜像文件，这时设置为IfNotPresent和Never才会生效，就可以在私网环境下愉快地离线创建pod。","like_count":36,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581731,"discussion_content":"awesome","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658960479,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1793361,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/5d/51/87fc7ef9.jpg","nickname":"Issac慜","note":"","ucode":"690B69FC1C0BB2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":601083,"discussion_content":"因为latest标签对应的版本号是不确定的，官方维护的latest镜像可能随时会变，所以latest镜像每次都会重新下载","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1675049005,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"四川","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1119845,"avatar":"https://static001.geekbang.org/account/avatar/00/11/16/65/c22b4415.jpg","nickname":"风华神使","note":"","ucode":"ECAAB52216820D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":614413,"discussion_content":"这其实不是坑，k8s官网写着，如果tag是latest，则imagePullpolicy【视为】Always","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1681784718,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":351685,"user_name":"江湖十年","can_delete":false,"product_type":"c1","uid":1297884,"ip_address":"","ucode":"957060CFCE31F8","user_header":"https://static001.geekbang.org/account/avatar/00/13/cd/dc/badd82d7.jpg","comment_is_top":false,"comment_ctime":1658104924,"is_pvip":false,"replies":[{"id":127901,"content":"Defaults to Alwaysif :latest tag is specified。 只有lastest才是always。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1658112236,"ip_address":"","comment_id":351685,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100114501,"comment_content":"imagePullPolicy 默认值并非 IfNotPresent，而是 Always：\n\n➜ kubectl explain pod.spec.containers.imagePullPolicy\nKIND:     Pod\nVERSION:  v1\n\nFIELD:    imagePullPolicy &lt;string&gt;\n\nDESCRIPTION:\n     Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always\n     if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated.\n     More info:\n     https:&#47;&#47;kubernetes.io&#47;docs&#47;concepts&#47;containers&#47;images#updating-images","like_count":15,"discussions":[{"author":{"id":2364092,"avatar":"","nickname":"Geek_c6f42c","note":"","ucode":"293389D579889B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":606855,"discussion_content":"k8s官方文档有详细说明。Always 其实时和latest标签相关的，其他时候都是默认IfNotPresent","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1677465522,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"四川","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580337,"discussion_content":"Defaults to Alwaysif :latest tag is specified。 只有lastest才是always。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1658112236,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":351756,"user_name":"奕","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1658155304,"is_pvip":false,"replies":[{"id":127922,"content":"抱歉，不小心手误了，确实，它属于container字段，是容器的环境变量。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1658185053,"ip_address":"","comment_id":351756,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100114501,"comment_content":"container 对象. env：定义 Pod 的环境变量\n-------------\n这里 不应该是 container 的环境变量吗？","like_count":13,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580430,"discussion_content":"抱歉，不小心手误了，确实，它属于container字段，是容器的环境变量。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658185053,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":351882,"user_name":"美妙的代码","can_delete":false,"product_type":"c1","uid":1111985,"ip_address":"","ucode":"9DADD72C193296","user_header":"https://static001.geekbang.org/account/avatar/00/10/f7/b1/982ea185.jpg","comment_is_top":false,"comment_ctime":1658278168,"is_pvip":true,"replies":[{"id":127952,"content":"一般是一个容器，但因为containers是一个数组，里面是可以有多个容器的。\n\nPod里的多个容器共享IP地址、存储卷、进程空间，pod就类似逻辑主机、虚拟机了，这些容器就可以像在主机里一样协同工作。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1658282291,"ip_address":"","comment_id":351882,"utype":1}],"discussion_count":5,"race_medal":1,"score":2,"product_id":100114501,"comment_content":"老师 ，一般情况下，pod里只定义一个容器吗？  还是可以定义多个容器。  它们之间没有什么区别吗？","like_count":11,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580594,"discussion_content":"一般是一个容器，但因为containers是一个数组，里面是可以有多个容器的。\n\nPod里的多个容器共享IP地址、存储卷、进程空间，pod就类似逻辑主机、虚拟机了，这些容器就可以像在主机里一样协同工作。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1658282291,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":4,"child_discussions":[{"author":{"id":1695261,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/9doFL0ZzcWf5gkQ10cHsOziamhHicjq1k2KHvJibkicBjHsKyvf9jMepvdgLFiadiaI8PScf73Pl7QK3ibp6MYicWn9BuQ/132","nickname":"Geek_6df977","note":"","ucode":"4F26A42C9BD901","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":592881,"discussion_content":"老是不是说pod是为了解决多应用联合运行的问题，怎么又一般是一个容器，没太理解，能否答疑一下","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1667796237,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":580594,"ip_address":"广东","group_id":0},"score":592881,"extra":""},{"author":{"id":1111861,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f7/35/e1afede7.jpg","nickname":"khaozi","note":"","ucode":"189ACDF21F8275","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1695261,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/9doFL0ZzcWf5gkQ10cHsOziamhHicjq1k2KHvJibkicBjHsKyvf9jMepvdgLFiadiaI8PScf73Pl7QK3ibp6MYicWn9BuQ/132","nickname":"Geek_6df977","note":"","ucode":"4F26A42C9BD901","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":594187,"discussion_content":"视需要而定，有的环境需要起业务容器之前做一些初始化，那就可以再加一个initContainer","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1668856604,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":592881,"ip_address":"北京","group_id":0},"score":594187,"extra":""},{"author":{"id":3616258,"avatar":"https://static001.geekbang.org/account/avatar/00/37/2e/02/7f151e08.jpg","nickname":"听说昵称太长了躲在树后面会被别人看见的","note":"","ucode":"EFFEE43631C3B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":617206,"discussion_content":"那如果 pod 里面有一个 nginx 和一个 MySQL 容器，使用 kubectl exec -it 命令进去的是哪个容器？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683379388,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":580594,"ip_address":"福建","group_id":0},"score":617206,"extra":""}]}]},{"had_liked":false,"id":363372,"user_name":"Apple_d39574","can_delete":false,"product_type":"c1","uid":3038791,"ip_address":"北京","ucode":"5CC841D6F69B82","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/mvvjzu4D1gJl8c9lnMMTatOou2EUsWCe4XiclyUOwk2rUawwqd6KKV8z9bSRMnD3ibQPUCIZUQOAkKAaKX0Ncaibw/132","comment_is_top":false,"comment_ctime":1669603014,"is_pvip":false,"replies":[{"id":132097,"content":"因为容器本质上就是一个应用程序，没有命令该如何启动应用呢？想清楚这一点应该就能够理解了吧。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1669614498,"ip_address":"北京","comment_id":363372,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100114501,"comment_content":"您好，想问一下，为什么要定义容器启动时要执行的命令？不设置会怎么样？","like_count":7,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":594977,"discussion_content":"因为容器本质上就是一个应用程序，没有命令该如何启动应用呢？想清楚这一点应该就能够理解了吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1669614498,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":351844,"user_name":"Guder","can_delete":false,"product_type":"c1","uid":2259625,"ip_address":"","ucode":"F770C5CE39CF4E","user_header":"https://static001.geekbang.org/account/avatar/00/22/7a/a9/279c0c39.jpg","comment_is_top":false,"comment_ctime":1658224904,"is_pvip":false,"replies":[{"id":127941,"content":"是的，不过尽量不要把docker的经验套在Kubernetes上，容易混淆。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1658236725,"ip_address":"","comment_id":351844,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100114501,"comment_content":"感觉pod有点像是docker-compose","like_count":6,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580540,"discussion_content":"是的，不过尽量不要把docker的经验套在Kubernetes上，容易混淆。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658236725,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":351727,"user_name":"咩咩咩","can_delete":false,"product_type":"c1","uid":1238037,"ip_address":"","ucode":"E2EEDA002BCCEC","user_header":"https://static001.geekbang.org/account/avatar/00/12/e4/15/c4866257.jpg","comment_is_top":false,"comment_ctime":1658131749,"is_pvip":false,"replies":[{"id":127909,"content":"great","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1658138858,"ip_address":"","comment_id":351727,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100114501,"comment_content":"1.若直接使用容器来管理应用，只能一个个容器去调度。应用之间一般都有进程和进程组的关系，而容器又只是单进程模型，无法管理多个进程\n2.Pod是一组共享了某些资源的容器，只是一个逻辑概念","like_count":6,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580393,"discussion_content":"great","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658138858,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":351738,"user_name":"摊牌","can_delete":false,"product_type":"c1","uid":1453182,"ip_address":"","ucode":"F142596BFE4594","user_header":"https://static001.geekbang.org/account/avatar/00/16/2c/7e/f1efd18b.jpg","comment_is_top":false,"comment_ctime":1658137385,"is_pvip":false,"replies":[{"id":127916,"content":"great，中间层的思想。","user_name":"作者回复","user_name_real":"作者","uid":1181974,"ctime":1658140950,"ip_address":"","comment_id":351738,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100114501,"comment_content":"个人观点，不知道对不对，我觉得pod就应该叫做k8s自己的容器，如果没有pod, k8s直接调度容器对象，比如docker, 那它就永远要依赖docker; 如果k8s不对容器包装一下，没有类似pod这种粒度的话，k8s就必须选择一种现有容器技术，限制了其现在和未来的灵活性。所以，于公于私，构建pod这个基本调度单元是非常明智的选择，将来如果有新的容器技术代替了docker，但是k8s的基本单元永远是pod","like_count":5,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580402,"discussion_content":"great，中间层的思想。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658140950,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":360902,"user_name":"bjdz","can_delete":false,"product_type":"c1","uid":3204877,"ip_address":"上海","ucode":"C4D012925674E2","user_header":"https://static001.geekbang.org/account/avatar/00/30/e7/0d/98e828c2.jpg","comment_is_top":false,"comment_ctime":1666957990,"is_pvip":false,"replies":[{"id":131293,"content":"要看pod被调度到哪个节点上运行，本地有，不代表节点上一定有，注意Kubernetes是集群管理系统，不要把本地和集群弄混了。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1667020873,"ip_address":"上海","comment_id":360902,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100114501,"comment_content":"向老师请教一个问题，被折磨坏了，\ndocker images 显示本地是有 busybox:stable-glibc 这个版本的，yaml文件中的 imagePullPolicy: IfNotPresent，image: busybox:stable-glibc，\n根据这个yaml文件创建pod，显示 pod&#47;busybox created，但是 kubectl logs busybox，就显示镜像拉取失败\nError from server (BadRequest): container &quot;busybox&quot; in pod &quot;busybox&quot; is waiting to start: trying and failing to pull image\n不明白为什么本地已经有镜像了，且不是最新的tag，为什么还要去拉取镜像？\n\nget pod报错：busybox   0&#47;1     CrashLoopBackOff   7 (4m47s ago)   22m\n\nEvents:\n  Normal   Scheduled  28m                   default-scheduler  Successfully assigned default&#47;busybox to minikube\n  Warning  Failed     24m                   kubelet            Failed to pull image &quot;busybox:stable-glibc&quot;: rpc error: code = Unknown desc = context canceled\n  Warning  Failed     24m (x2 over 24m)     kubelet            Error: ErrImagePull\n  Warning  Failed     24m                   kubelet            Failed to pull image &quot;busybox:stable-glibc&quot;: rpc error: code = Unknown desc = error pulling image configuration: Get &quot;xxx&quot;: net&#47;http: TLS handshake timeout\n  Normal   BackOff    24m (x2 over 24m)     kubelet            Back-off pulling image &quot;busybox:stable-glibc&quot;\n  Warning  Failed     24m (x2 over 24m)     kubelet            Error: ImagePullBackOff\n  Normal   Pulling    24m (x3 over 28m)     kubelet            Pulling image &quot;busybox:stable-glibc&quot;\n  Normal   Pulled     21m                   kubelet            Successfully pulled image &quot;busybox:stable-glibc&quot; in 2m20.001262902s\n  Normal   Created    20m (x4 over 21m)     kubelet            Created container busybox\n  Normal   Started    20m (x4 over 21m)     kubelet            Started container busybox\n  Normal   Pulled     20m (x3 over 21m)     kubelet            Container image &quot;busybox:stable-glibc&quot; already present on machine\n  Warning  BackOff    2m55s (x86 over 21m)  kubelet            Back-off restarting failed container","like_count":3,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591997,"discussion_content":"要看pod被调度到哪个节点上运行，本地有，不代表节点上一定有，注意Kubernetes是集群管理系统，不要把本地和集群弄混了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667020873,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352059,"user_name":"凯","can_delete":false,"product_type":"c1","uid":1405256,"ip_address":"","ucode":"60DB11CF72C7B0","user_header":"https://static001.geekbang.org/account/avatar/00/15/71/48/44df7f4e.jpg","comment_is_top":false,"comment_ctime":1658370175,"is_pvip":false,"replies":[{"id":128034,"content":"我可不是kubernetes 专家，K8s太大，我也只能挑感兴趣的学，还没到K8s开发的程度。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1658381485,"ip_address":"","comment_id":352059,"utype":1}],"discussion_count":4,"race_medal":0,"score":3,"product_id":100114501,"comment_content":"想请教一下老师，除了您讲解的内容。我更想知道您学习k8s的路线，您是怎么做到到精通的。我也自己学习，可是学习的都是一下粗略的内容。您是精读k8s的文档么，参加k8s的开源项目贡献代码么？","like_count":3,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580811,"discussion_content":"我可不是kubernetes 专家，K8s太大，我也只能挑感兴趣的学，还没到K8s开发的程度。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658381486,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":2,"child_discussions":[{"author":{"id":1405256,"avatar":"https://static001.geekbang.org/account/avatar/00/15/71/48/44df7f4e.jpg","nickname":"凯","note":"","ucode":"60DB11CF72C7B0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":580877,"discussion_content":"还是想请教一下老师，您学习k8s知识征程，能不能分享一下。我感觉自己学习k8s也就是到部署k8s，写简单的yaml，然后就到瓶颈了。尤其是k8s的api版本这块感觉有点迷迷糊糊的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658391352,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":580811,"ip_address":"","group_id":0},"score":580877,"extra":""},{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":1405256,"avatar":"https://static001.geekbang.org/account/avatar/00/15/71/48/44df7f4e.jpg","nickname":"凯","note":"","ucode":"60DB11CF72C7B0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":594978,"discussion_content":"理解了Kubernetes的基本概念和架构，后面就看个人的兴趣了，这个就和学Linux一样。Kubernetes是一个平台，会了它就要接着看平台上自己该怎么用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1669614628,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":580877,"ip_address":"北京","group_id":0},"score":594978,"extra":""}]},{"author":{"id":1074734,"avatar":"https://static001.geekbang.org/account/avatar/00/10/66/2e/527b73c9.jpg","nickname":"骑着🚀看银河","note":"","ucode":"8706A99A89F0CE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585322,"discussion_content":"老师太谦虚了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661482111,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":351755,"user_name":"peter","can_delete":false,"product_type":"c1","uid":1058183,"ip_address":"","ucode":"261C3FC001DE2D","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/87/f3a69d1b.jpg","comment_is_top":false,"comment_ctime":1658155232,"is_pvip":false,"replies":[{"id":127921,"content":"\n1.当然可以，多个YAML对象用“---”分隔。\n\n2.是的，毕竟minikube是一个学习环境，后面的kubeadm就不会这样了。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1658184993,"ip_address":"","comment_id":351755,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100114501,"comment_content":"请教老师两个问题：\nQ1:：YAML中可以定义多个POD吗？\nQ2：k8s集群启动命令每次开机后都要执行吗？\n       minikube start --kubernetes-version=v1.23.3，这个命令是启动k8s集群，\n       现在好像每次重启虚拟机后都要执行该命令，必须执行吗？","like_count":3,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580429,"discussion_content":"\n1.当然可以，多个YAML对象用“---”分隔。\n\n2.是的，毕竟minikube是一个学习环境，后面的kubeadm就不会这样了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658184993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354667,"user_name":"潜光隐耀","can_delete":false,"product_type":"c1","uid":1809457,"ip_address":"北京","ucode":"8A2FDDEFCB1863","user_header":"https://static001.geekbang.org/account/avatar/00/1b/9c/31/e4677275.jpg","comment_is_top":false,"comment_ctime":1660655980,"is_pvip":false,"replies":[{"id":129042,"content":"这个说明镜像里没有shell，所以无法运行sh。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1660706423,"ip_address":"北京","comment_id":354667,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100114501,"comment_content":"请教下，kubectl exec -it podname -- sh报错，提示：\n\nerror: Internal error occurred: error executing command in container: failed to exec in container: failed to start exec &quot;xxx&quot;: OCI runtime exec failed: exec failed: unable to start container process: exec: &quot;sh&quot;: executable file not found in $PATH: unknown\n\n这个错误该如何解决呢？","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584252,"discussion_content":"这个说明镜像里没有shell，所以无法运行sh。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1660706423,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1809457,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9c/31/e4677275.jpg","nickname":"潜光隐耀","note":"","ucode":"8A2FDDEFCB1863","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":584261,"discussion_content":"是的，换了个镜像就可以了，一直以为宿主机的问题，谢谢罗老师","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1660711936,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":584252,"ip_address":"湖北","group_id":0},"score":584261,"extra":""}]}]},{"had_liked":false,"id":351729,"user_name":"psoracle","can_delete":false,"product_type":"c1","uid":1219195,"ip_address":"","ucode":"26F9B166508BBA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/2xoGmvlQ9qfSibVpPJyyaEriavuWzXnuECrJITmGGHnGVuTibUuBho43Uib3Y5qgORHeSTxnOOSicxs0FV3HGvTpF0A/132","comment_is_top":false,"comment_ctime":1658132245,"is_pvip":false,"replies":[{"id":127910,"content":"great","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1658138892,"ip_address":"","comment_id":351729,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100114501,"comment_content":"来回答下作业：\n1. 如果没有 Pod，直接使用容器来管理应用会有什么样的麻烦？\nPod是一个或多个容器的集合，首先，如果Pod中运行的是单容器，则使用Pod包一层的好处是可以管理其中容器的状态如暂停、重启等（因Pod短暂的生命周期，不清楚这么做有什么好处，debug？），比如可以替换容器镜像；其次，如果Pod中运行的是多容器，则这些容器之间共享网络与存储，可以高效的分享资源与本地化服务调用，在调度方面，如果关联容器不使用Pod包一层则会增加调试的复杂度，影响性能，有了Pod则可以统一调度方便管理。\n\n2. 你觉得 Pod 和容器之间有什么区别和联系？\nPod是一个或多个关联容器的组合，它是一逻辑概念，它要解决的是在资源隔离的容器之上，如何实现关联容器之间高效的共享网络与存储。\n实现层面首先启动infra容器pause用来创建并保持网络空间，与Pod保持一致的生命周期，再启动业务容器加入到此NET空间，在docker运行时中同一Pod中的容器共享ipc&#47;net&#47;user&#47;uts等命名空间。\nPod与容器之间的关系类似于Linux进程组与进程的关系。","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580394,"discussion_content":"great","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658138892,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":351690,"user_name":"密码123456","can_delete":false,"product_type":"c1","uid":1126593,"ip_address":"","ucode":"9889463CC0EA71","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/c1/2dde6700.jpg","comment_is_top":false,"comment_ctime":1658107669,"is_pvip":false,"replies":[{"id":127904,"content":"nice","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1658112279,"ip_address":"","comment_id":351690,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100114501,"comment_content":"🤣原来是网线，没有插好。不说了。接受惩罚去。找了半天。","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580340,"discussion_content":"nice","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658112279,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":378481,"user_name":"牙小木","can_delete":false,"product_type":"c1","uid":1172050,"ip_address":"北京","ucode":"E5C12D37A62949","user_header":"https://static001.geekbang.org/account/avatar/00/11/e2/52/56dbb738.jpg","comment_is_top":false,"comment_ctime":1690327363,"is_pvip":false,"replies":[{"id":137929,"content":"great","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1690349959,"ip_address":"上海","comment_id":378481,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100114501,"comment_content":"pod是个中间层，因为container千差万别，所以没有什么不是通过加一个中间件不能解决的。如果是，那就再加一层中间层。","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":624228,"discussion_content":"great","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1690349959,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376251,"user_name":"原则","can_delete":false,"product_type":"c1","uid":3574650,"ip_address":"广东","ucode":"12E98F3728CC53","user_header":"https://static001.geekbang.org/account/avatar/00/36/8b/7a/ec36ff82.jpg","comment_is_top":false,"comment_ctime":1686613393,"is_pvip":false,"replies":[{"id":137239,"content":"amazing！","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1686713712,"ip_address":"上海","comment_id":376251,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100114501,"comment_content":"我遇到了拉取镜像失败的问题，原因是 docker 仓库限频\nError from server (BadRequest): container &quot;busy&quot; in pod &quot;busy-pod&quot; is waiting to start: trying and failing to pull image\n解决办法是，通过 minikube ssh 登录到节点上面去，使用 docker login 登录自己的账户。免费账户 6 小时 200 次，足够用了。","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":620979,"discussion_content":"amazing！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1686713712,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372185,"user_name":"蜘蛛侠","can_delete":false,"product_type":"c1","uid":3053481,"ip_address":"上海","ucode":"B59D7255BAD55B","user_header":"https://static001.geekbang.org/account/avatar/00/2e/97/a9/e3b097f1.jpg","comment_is_top":false,"comment_ctime":1680831425,"is_pvip":false,"replies":[{"id":135829,"content":"还是不太一样的，docker-compose和Pod的理念有些区别， Pod里的容器可以理解成是在一台主机上运行，而docker-compose里的容器是通过IP地址来通信的，关系要松散一些。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1680832991,"ip_address":"上海","comment_id":372185,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100114501,"comment_content":"可以这样理解嘛，Pod是不是就是把docker-compose 创建的多个容器放在了一个“房间”","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":612650,"discussion_content":"还是不太一样的，docker-compose和Pod的理念有些区别， Pod里的容器可以理解成是在一台主机上运行，而docker-compose里的容器是通过IP地址来通信的，关系要松散一些。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1680832991,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":361886,"user_name":"Demon.Lee","can_delete":false,"product_type":"c1","uid":1052859,"ip_address":"北京","ucode":"7F0E5493A8E345","user_header":"https://static001.geekbang.org/account/avatar/00/10/10/bb/f1061601.jpg","comment_is_top":false,"comment_ctime":1667957227,"is_pvip":false,"replies":[{"id":131633,"content":"great","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1667959790,"ip_address":"北京","comment_id":361886,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100114501,"comment_content":"思考题:\n----------\n\n1、容器用来隔离，Pod（容器组）用来协作。\n\n2、容器的最佳实践是：内部只有一个进程。如果有多个，其中某个进程挂了，外界也没法知道哪出了问题。\n\n一般来说，我们平常开发的应用服务，都是通过非亲密的方式来完成交互的，即跨节点的网络通信，这种情况下使用容器或 pod 来实现差异不大。\n\n3、但总有一些场景，我们需要让两个服务来协同完成一些事情，比如应用服务产生的日志，需要另一个服务收集上来，然后 push 到日志中心。\n云原生时代以前，它们就在同一台机器上，具备天生的亲密性，此时将它们绑起来就是最优解。因为使用相同的网络空间、存储空间、主机及域名空间、IPC 空间等，是进程间协作效率最高的方式。\n\n如果此时依然通过容器来管理，kubernetes 根据各个节点资源情况，将它们分配到不同节点的概率会非常高，这无疑是不可取的。","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":593110,"discussion_content":"great","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667959791,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352791,"user_name":"lesserror","can_delete":false,"product_type":"c1","uid":1351076,"ip_address":"","ucode":"25A54D1165FCF6","user_header":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","comment_is_top":false,"comment_ctime":1658927491,"is_pvip":false,"replies":[{"id":128289,"content":"\n1. 这个文字只是示意，实际在YAML 里写必须用冒号。\n\n2.看得很仔细，不小心写错了，应该和上面的一样，后缀都是yml。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1658962257,"ip_address":"","comment_id":352791,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100114501,"comment_content":"老师，有几个小问题。\n\n1. 用标签 env=dev&#47;test&#47;prod，使用标签 region: north&#47;south，tier=front&#47;middle&#47;back，这里的等于号和冒号有什么区别吗？\n\n2. kubectl delete -f busy-pod.yaml，这里的“yaml” 是不是应该写成 “yml”。","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581736,"discussion_content":"\n1. 这个文字只是示意，实际在YAML 里写必须用冒号。\n\n2.看得很仔细，不小心写错了，应该和上面的一样，后缀都是yml。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1658962257,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":351749,"user_name":"星垂平野阔","can_delete":false,"product_type":"c1","uid":3010581,"ip_address":"","ucode":"036EC20979D406","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/WrANpwBMr6DsGAE207QVs0YgfthMXy3MuEKJxR8icYibpGDCI1YX4DcpDq1EsTvlP8ffK1ibJDvmkX9LUU4yE8X0w/132","comment_is_top":false,"comment_ctime":1658148115,"is_pvip":false,"replies":[{"id":127917,"content":"great","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1658153755,"ip_address":"","comment_id":351749,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100114501,"comment_content":"1.直接用容器管理会让我们管理容器变得很复杂，每一个容器的配置我们都要用一长串配置信息对容器进行管理和配置，而且容器间的通信貌似也是一个大问题？\n2.pod就像收纳箱，里面装了不同类型的物品（容器，当我需要的时候直接找到对应的箱子打开就好。","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580418,"discussion_content":"great","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658153755,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":351731,"user_name":"psoracle","can_delete":false,"product_type":"c1","uid":1219195,"ip_address":"","ucode":"26F9B166508BBA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/2xoGmvlQ9qfSibVpPJyyaEriavuWzXnuECrJITmGGHnGVuTibUuBho43Uib3Y5qgORHeSTxnOOSicxs0FV3HGvTpF0A/132","comment_is_top":false,"comment_ctime":1658133532,"is_pvip":false,"replies":[{"id":127911,"content":"awesome","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1658138912,"ip_address":"","comment_id":351731,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100114501,"comment_content":"pod.spec.containers中的command与arg分别对应Dockerfile中的ENTRYPOINT与CMD，查资源对比其不同之处有：\n1. 可用形式不同，前者只有array的形式，类似于exec form，后者还有shell form，即在command中如果需要使用到shell需要显式指定如&#47;bin&#47;sh。\n2. 环境变量引用方式不同，前者可以通过&#39;$(env_varname)&#39;的方式引用pod.spec.conainers.env中给定的变量，但后者需要在exec form中显式指定shell，并使用&#39;${env_varname}&#39;来引用ENV中设定的环境变量，注意两者引用的形式不同，后者是标准的shell变量引用写法，前者不是。","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580395,"discussion_content":"awesome","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658138912,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":351688,"user_name":"密码123456","can_delete":false,"product_type":"c1","uid":1126593,"ip_address":"","ucode":"9889463CC0EA71","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/c1/2dde6700.jpg","comment_is_top":false,"comment_ctime":1658106726,"is_pvip":false,"replies":[{"id":127903,"content":"尝试先用docker下载","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1658112268,"ip_address":"","comment_id":351688,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100114501,"comment_content":"提示我， image  can&#39;t  be  pulled怎么解决呀？","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580339,"discussion_content":"尝试先用docker下载","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658112268,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":351686,"user_name":"闲渔一下","can_delete":false,"product_type":"c1","uid":1205724,"ip_address":"","ucode":"BDEFB01B75EBC1","user_header":"https://static001.geekbang.org/account/avatar/00/12/65/dc/d0c58ce5.jpg","comment_is_top":false,"comment_ctime":1658105679,"is_pvip":false,"replies":[{"id":127902,"content":"great","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1658112249,"ip_address":"","comment_id":351686,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100114501,"comment_content":"1.通常应用之间存在超亲密关系，如果只按容器去管理，就把它们割裂开来了，调度的时候只能按一个个容器去调度，而有了pod，可以按照一组容器这样去调度\n2.pod是一个逻辑概念，由容器组成","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580338,"discussion_content":"great","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658112249,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":391263,"user_name":"syc的猫","can_delete":false,"product_type":"c1","uid":1723890,"ip_address":"湖南","ucode":"A57D4215FFD4C5","user_header":"https://static001.geekbang.org/account/avatar/00/1a/4d/f2/768daf2d.jpg","comment_is_top":false,"comment_ctime":1717748775,"is_pvip":false,"replies":[{"id":142318,"content":"great","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1718005208,"ip_address":"北京","comment_id":391263,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100114501,"comment_content":"思考题1：如老师所说，但还有一些特殊情况，多个应用结合得非常紧密以至于无法把它们拆开。比如，有的应用运行前需要其他应用帮它初始化一些配置，还有就是日志代理，它必须读取另一个应用存储在本地磁盘的文件再转发出去。这些应用如果被强制分离成两个容器，切断联系，就无法正常工作了。直接用容器管理应用会导致 当应用所需的服务增多时，容器规模增大，容器之间的作用关系就会变得十分复杂，难以管理。pod的存在就是为了在虚拟机和容器之间找到一个合适的粒度来管理容器，易于维护。\n问题2：不管是容器还是 Pod，都是虚拟概念。把普通进程或应用加上权限限制就成了容器，再把容器加上权限限制就成了 Pod。说白了，就是不断地抽象封装，这也是软件中解决复杂问题的唯一手段。容器之于Pod，就好比 线程之于进程、函数之于类、文件之于文件夹等等。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":646449,"discussion_content":"great","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1718005208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":386547,"user_name":"MrZhaoCn","can_delete":false,"product_type":"c1","uid":1281312,"ip_address":"浙江","ucode":"6ED4381A5ABFF5","user_header":"https://static001.geekbang.org/account/avatar/00/13/8d/20/116db076.jpg","comment_is_top":false,"comment_ctime":1705050674,"is_pvip":false,"replies":[{"id":140960,"content":"应该挂载的是minikube节点的目录，而不是mac本地目录，这点需要弄清楚。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1705387469,"ip_address":"上海","comment_id":386547,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100114501,"comment_content":"老师您好，我这边在我的mac 机器上使用minikube 搭建的环境，然后我这边遇到的问题是我本机的工作目录无法挂载到Pod里面，可以确定的是我本机的目录存在，使用kubuctl apply部署pod ，pod得镜像能正常访问，请问知道什么原因吗？\n下面是pod得配置\napiVersion: v1\nkind: Pod\nmetadata:\n  name: code-server-pod\nspec:\n  containers:\n  - name: code-server-apph5pay\n    image: codercom&#47;code-server:4.20.0\n    command: [&quot;code-server&quot;, &quot;--auth&quot;, &quot;none&quot;, &quot;--bind-addr&quot;, &quot;0.0.0.0:8080&quot;, &quot;&#47;home&#47;coder&#47;project&quot;]\n    ports:\n    - containerPort: 8080\n    volumeMounts:\n    - mountPath: &#47;home&#47;coder&#47;project\n      name: test-volume\n  volumes:\n  - name: test-volume\n    hostPath:\n      path: &#47;Users&#47;xxx&#47;home&#47;workspace&#47;ide&#47;projects&#47;AppH5Pay\n      type: DirectoryOrCreate","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":635936,"discussion_content":"应该挂载的是minikube节点的目录，而不是mac本地目录，这点需要弄清楚。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1705387470,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":380358,"user_name":"Delight","can_delete":false,"product_type":"c1","uid":3003262,"ip_address":"广东","ucode":"FC436D82ED4205","user_header":"https://static001.geekbang.org/account/avatar/00/2d/d3/7e/38f506dd.jpg","comment_is_top":false,"comment_ctime":1693413321,"is_pvip":false,"replies":[{"id":138520,"content":"good","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1693448025,"ip_address":"上海","comment_id":380358,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100114501,"comment_content":"pod是一个api对象，pod是豌豆荚，主要为解决启动多个容器，以应对多应用的场景；在YAML文件中的spec.containers可以定义多个容器实例，然后apply。执行kubectl get pod 可以看到启动的容器有REDAY字段有多个。\n执行kubectl cp命令时，可以将文件拷贝到pod中，但是如果pod里面有多个容器，要怎么指定拷贝到其中的一个容器呢？\n百度资料如下：\nkubectl cp命令将文件拷贝到Pod中指定容器的文件系统中，默认情况下会选择Pod中的第一个容器作为目标。您可以使用-c或--container选项来指定要拷贝文件的目标容器。例如，使用以下命令将文件拷贝到名为container-a的容器中：\n\nkubectl cp &#47;local&#47;file&#47;path pod-name:&#47;container-a&#47;file&#47;path -c container-a","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":626855,"discussion_content":"good","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1693448025,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373615,"user_name":"Dexter","can_delete":false,"product_type":"c1","uid":2608728,"ip_address":"上海","ucode":"909CABC4AC4AC9","user_header":"https://static001.geekbang.org/account/avatar/00/27/ce/58/71ed845f.jpg","comment_is_top":false,"comment_ctime":1682779495,"is_pvip":true,"replies":[{"id":136552,"content":"对，有很多namespace，可以把pod看做是一个逻辑主机，里面的进程共享各种资源。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1683160414,"ip_address":"上海","comment_id":373615,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100114501,"comment_content":"关于pod内多container共享netns, uts namespace, storage, 应该还有IPC namespace把","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":616862,"discussion_content":"对，有很多namespace，可以把pod看做是一个逻辑主机，里面的进程共享各种资源。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683160414,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":366268,"user_name":"海盗船长","can_delete":false,"product_type":"c1","uid":1363634,"ip_address":"江苏","ucode":"ECB28BA21A4113","user_header":"https://static001.geekbang.org/account/avatar/00/14/ce/b2/1f914527.jpg","comment_is_top":false,"comment_ctime":1673521562,"is_pvip":false,"replies":[{"id":133477,"content":"后面会讲，主要用来筛选、过滤、查找对象，Deployment、Service等都需要用到。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1673580411,"ip_address":"上海","comment_id":366268,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100114501,"comment_content":"请问下老师 metadata里的labels字段有什么用？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":599547,"discussion_content":"后面会讲，主要用来筛选、过滤、查找对象，Deployment、Service等都需要用到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1673580412,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":361585,"user_name":"Mintisama","can_delete":false,"product_type":"c1","uid":1352496,"ip_address":"北京","ucode":"017335FB83323E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/LL8H5v0z7nNwasWIw47JKiagC1JFtu6XgN4ZkBtkRD81mQVD74OSicGWg6AjCYia81RMjCDBVqqN1hd6gNXybPxpA/132","comment_is_top":false,"comment_ctime":1667651759,"is_pvip":false,"replies":[{"id":131516,"content":"一般来说重试几次就好了。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1667690258,"ip_address":"北京","comment_id":361585,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100114501,"comment_content":"求教\n在执行kubectl describe pod ngx的时候，拉取镜像报错\n\n Failed to pull image &quot;nginx:alpine&quot;: rpc error: code = Unknown desc = Error response from daemon: Get &quot;https:&#47;&#47;registry-1.docker.io&#47;v2&#47;library&#47;nginx&#47;manifests&#47;sha256:2452715dd322b3273419652b7721b64aa60305f606ef7a674ae28b6f12d155a3&quot;: net&#47;http: TLS handshake timeout","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592761,"discussion_content":"一般来说重试几次就好了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667690258,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":357933,"user_name":"nc_ops","can_delete":false,"product_type":"c1","uid":3114351,"ip_address":"北京","ucode":"1A13CD76CECFDE","user_header":"https://static001.geekbang.org/account/avatar/00/2f/85/6f/1654f4b9.jpg","comment_is_top":false,"comment_ctime":1663753105,"is_pvip":false,"replies":[{"id":130253,"content":"重启容器的意思是删除原容器，创建一个新的容器再运行，所以重启的时候容器的cmd只会运行一次，看到的信息也只有一次。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1663754925,"ip_address":"北京","comment_id":357933,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100114501,"comment_content":"老师，请教一下，文中提到的CrashLoopBackOff的状态既然是反复停止 - 启动的循环错误状态，但是我实际按那个yaml文件创建pod的时候，日志为什么只看到一行“ubuntu, on”呢？每次重启容器都会触发这个命令的话，那我执行kubectl logs busy-pod时应该看到很多行“ubuntu, on”才对啊","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588427,"discussion_content":"重启容器的意思是删除原容器，创建一个新的容器再运行，所以重启的时候容器的cmd只会运行一次，看到的信息也只有一次。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663754925,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":357212,"user_name":"那风在极客","can_delete":false,"product_type":"c1","uid":1026502,"ip_address":"北京","ucode":"132B9263006BB9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a9/c6/30b29c22.jpg","comment_is_top":false,"comment_ctime":1663065739,"is_pvip":false,"replies":[{"id":130010,"content":"没有特别严格的定义，可以理解成引出、依附，看后面的课程来自己理解吧。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1663109800,"ip_address":"北京","comment_id":357212,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100114501,"comment_content":"请问图中的箭头表示什么？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587495,"discussion_content":"没有特别严格的定义，可以理解成引出、依附，看后面的课程来自己理解吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663109800,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354666,"user_name":"潜光隐耀","can_delete":false,"product_type":"c1","uid":1809457,"ip_address":"北京","ucode":"8A2FDDEFCB1863","user_header":"https://static001.geekbang.org/account/avatar/00/1b/9c/31/e4677275.jpg","comment_is_top":false,"comment_ctime":1660655855,"is_pvip":false,"replies":[{"id":129041,"content":"在下一个留言里回复。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1660706384,"ip_address":"北京","comment_id":354666,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100114501,"comment_content":"请教下，kubectl exec -it podname -- sh报错，提示","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584251,"discussion_content":"在下一个留言里回复。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660706384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}