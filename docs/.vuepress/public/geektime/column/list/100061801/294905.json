{"id":294905,"title":"01 | Mutex：如何解决资源并发访问问题？","content":"<p>你好，我是鸟窝。</p><p>今天是我们Go并发编程实战课的第一讲，我们就直接从解决并发访问这个棘手问题入手。</p><p>说起并发访问问题，真是太常见了，比如多个goroutine并发更新同一个资源，像计数器；同时更新用户的账户信息；秒杀系统；往同一个buffer中并发写入数据等等。如果没有互斥控制，就会出现一些异常情况，比如计数器的计数不准确、用户的账户可能出现透支、秒杀系统出现超卖、buffer中的数据混乱，等等，后果都很严重。</p><p>这些问题怎么解决呢？对，用互斥锁，那在Go语言里，就是<strong>Mutex。</strong></p><p>这节课，我会带你详细了解互斥锁的实现机制，以及Go标准库的互斥锁Mutex的基本使用方法。在后面的3节课里，我还会讲解Mutex的具体实现原理、易错场景和一些拓展用法。</p><p>好了，我们先来看看互斥锁的实现机制。</p><h2>互斥锁的实现机制</h2><p>互斥锁是并发控制的一个基本手段，是为了避免竞争而建立的一种并发控制机制。在学习它的具体实现原理前，我们要先搞懂一个概念，就是<strong>临界区</strong>。</p><p>在并发编程中，如果程序中的一部分会被并发访问或修改，那么，为了避免并发访问导致的意想不到的结果，这部分程序需要被保护起来，这部分被保护起来的程序，就叫做临界区。</p><p>可以说，临界区就是一个被共享的资源，或者说是一个整体的一组共享资源，比如对数据库的访问、对某一个共享数据结构的操作、对一个 I/O 设备的使用、对一个连接池中的连接的调用，等等。</p><!-- [[[read_end]]] --><p>如果很多线程同步访问临界区，就会造成访问或操作错误，这当然不是我们希望看到的结果。所以，我们可以<strong>使用互斥锁，限定临界区只能同时由一个线程持有</strong>。</p><p>当临界区由一个线程持有的时候，其它线程如果想进入这个临界区，就会返回失败，或者是等待。直到持有的线程退出临界区，这些等待线程中的某一个才有机会接着持有这个临界区。</p><p><img src=\"https://static001.geekbang.org/resource/image/44/b8/44c08abdd0aff633ca932fc89386ebb8.jpg?wh=3747*1972\" alt=\"\"></p><p>你看，互斥锁就很好地解决了资源竞争问题，有人也把互斥锁叫做排它锁。那在Go 标准库中，它提供了 Mutex 来实现互斥锁这个功能。</p><p>根据2019年第一篇全面分析Go并发Bug的论文<a href=\"https://songlh.github.io/paper/go-study.pdf\">Understanding Real-World Concurrency Bugs in Go</a>，<strong>Mutex是使用最广泛的同步原语</strong>（Synchronization primitives，有人也叫做<strong>并发原语</strong>。我们在这个课程中根据英文直译优先用同步原语，但是并发原语的指代范围更大，还可以包括任务编排的类型，所以后面我们讲Channel或者扩展类型时也会用并发原语）。关于同步原语，并没有一个严格的定义，你可以把它看作解决并发问题的一个基础的数据结构。</p><p>在这门课的前两个模块，我会和你讲互斥锁Mutex、读写锁RWMutex、并发编排WaitGroup、条件变量Cond、Channel等同步原语。所以，在这里，我先和你说一下同步原语的适用场景。</p><ul>\n<li>共享资源。并发地读写共享资源，会出现数据竞争（data race）的问题，所以需要Mutex、RWMutex这样的并发原语来保护。</li>\n<li>任务编排。需要goroutine按照一定的规律执行，而goroutine之间有相互等待或者依赖的顺序关系，我们常常使用WaitGroup或者Channel来实现。</li>\n<li>消息传递。信息交流以及不同的goroutine之间的线程安全的数据交流，常常使用Channel来实现。</li>\n</ul><p>今天这一讲，咱们就从公认的使用最广泛的Mutex开始学习吧。是骡子是马咱得拉出来遛遛，看看我们到底可以怎么使用Mutex。</p><h2>Mutex的基本使用方法</h2><p>在正式看Mutex用法之前呢，我想先给你交代一件事：Locker接口。</p><p>在Go的标准库中，package sync提供了锁相关的一系列同步原语，这个package还定义了一个Locker的接口，Mutex就实现了这个接口。</p><p>Locker的接口定义了锁同步原语的方法集：</p><pre><code>\ntype Locker interface {\n    Lock()\n    Unlock()\n}\n\n</code></pre><p>可以看到，Go定义的锁接口的方法集很简单，就是请求锁（Lock）和释放锁（Unlock）这两个方法，秉承了Go语言一贯的简洁风格。</p><p>但是，这个接口在实际项目应用得不多，因为我们一般会直接使用具体的同步原语，而不是通过接口。</p><p>我们这一讲介绍的Mutex以及后面会介绍的读写锁RWMutex都实现了Locker接口，所以首先我把这个接口介绍了，让你做到心中有数。</p><p>下面我们直接看Mutex。</p><p>简单来说，<strong>互斥锁Mutex就提供两个方法Lock和Unlock：进入临界区之前调用Lock方法，退出临界区的时候调用Unlock方法</strong>：</p><pre><code>  func(m *Mutex)Lock()\n  func(m *Mutex)Unlock()\n</code></pre><p><strong>当一个goroutine通过调用Lock方法获得了这个锁的拥有权后， 其它请求锁的goroutine就会阻塞在Lock方法的调用上，直到锁被释放并且自己获取到了这个锁的拥有权。</strong></p><p>看到这儿，你可能会问，为啥一定要加锁呢？别急，我带你来看一个并发访问场景中不使用锁的例子，看看实现起来会出现什么状况。</p><p>在这个例子中，我们创建了10个goroutine，同时不断地对一个变量（count）进行加1操作，每个goroutine负责执行10万次的加1操作，我们期望的最后计数的结果是10 * 100000 = 1000000 (一百万)。</p><pre><code> import (\n        &quot;fmt&quot;\n        &quot;sync&quot;\n    )\n    \n    func main() {\n        var count = 0\n        // 使用WaitGroup等待10个goroutine完成\n        var wg sync.WaitGroup\n        wg.Add(10)\n        for i := 0; i &lt; 10; i++ {\n            go func() {\n                defer wg.Done()\n                // 对变量count执行10次加1\n                for j := 0; j &lt; 100000; j++ {\n                    count++\n                }\n            }()\n        }\n        // 等待10个goroutine完成\n        wg.Wait()\n        fmt.Println(count)\n    }\n\n</code></pre><p>在这段代码中，我们使用sync.WaitGroup来等待所有的goroutine执行完毕后，再输出最终的结果。sync.WaitGroup这个同步原语我会在后面的课程中具体介绍，现在你只需要知道，我们使用它来控制等待一组goroutine全部做完任务。</p><p>但是，每次运行，你都可能得到不同的结果，基本上不会得到理想中的一百万的结果。</p><p><img src=\"https://static001.geekbang.org/resource/image/60/e2/6080fdf493e047917aa099ea33279de2.png?wh=427*137\" alt=\"\"></p><p>这是为什么呢？</p><p>其实，这是因为，<strong>count++</strong> 不是一个原子操作，它至少包含几个步骤，比如读取变量count的当前值，对这个值加1，把结果再保存到count中。因为不是原子操作，就可能有并发的问题。</p><p>比如，10个goroutine同时读取到count的值为9527，接着各自按照自己的逻辑加1，值变成了9528，然后把这个结果再写回到count变量。但是，实际上，此时我们增加的总数应该是10才对，这里却只增加了1，好多计数都被“吞”掉了。这是并发访问共享数据的常见错误。</p><pre><code> // count++操作的汇编代码\n    MOVQ    &quot;&quot;.count(SB), AX\n    LEAQ    1(AX), CX\n    MOVQ    CX, &quot;&quot;.count(SB)\n</code></pre><p>这个问题，有经验的开发人员还是比较容易发现的，但是，很多时候，并发问题隐藏得非常深，即使是有经验的人，也不太容易发现或者Debug出来。</p><p>针对这个问题，Go提供了一个检测并发访问共享资源是否有问题的工具： <a href=\"https://blog.golang.org/race-detector\">race detector</a>，它可以帮助我们自动发现程序有没有data race的问题。</p><p><strong>Go race detector</strong>是基于Google的 C/C++ <a href=\"https://github.com/google/sanitizers\">sanitizers</a> 技术实现的，编译器通过探测所有的内存访问，加入代码能监视对这些内存地址的访问（读还是写）。在代码运行的时候，race detector就能监控到对共享变量的非同步访问，出现race的时候，就会打印出警告信息。</p><p>这个技术在Google内部帮了大忙，探测出了Chromium等代码的大量并发问题。Go 1.1中就引入了这种技术，并且一下子就发现了标准库中的42个并发问题。现在，race detector已经成了Go持续集成过程中的一部分。</p><p>我们来看看这个工具怎么用。</p><p>在编译（compile）、测试（test）或者运行（run）Go代码的时候，加上<strong>race</strong>参数，就有可能发现并发问题。比如在上面的例子中，我们可以加上race参数运行，检测一下是不是有并发问题。如果你go run -race counter.go，就会输出警告信息。</p><p><img src=\"https://static001.geekbang.org/resource/image/f5/ff/f5eec2d6458e4bddc882ebb213f05aff.png?wh=792*359\" alt=\"\"></p><p>这个警告不但会告诉你有并发问题，而且还会告诉你哪个goroutine在哪一行对哪个变量有写操作，同时，哪个goroutine在哪一行对哪个变量有读操作，就是这些并发的读写访问，引起了data race。</p><p>例子中的goroutine 10对内存地址0x00c000126010有读的操作（counter.go文件第16行），同时，goroutine 7对内存地址0x00c000126010有写的操作（counter.go文件第16行）。而且还可能有多个goroutine在同时进行读写，所以，警告信息可能会很长。</p><p>虽然这个工具使用起来很方便，但是，因为它的实现方式，只能通过真正对实际地址进行读写访问的时候才能探测，所以它并不能在编译的时候发现data race的问题。而且，在运行的时候，只有在触发了data race之后，才能检测到，如果碰巧没有触发（比如一个data race问题只能在2月14号零点或者11月11号零点才出现），是检测不出来的。</p><p>而且，把开启了race的程序部署在线上，还是比较影响性能的。运行 go tool compile -race -S counter.go，可以查看计数器例子的代码，重点关注一下count++前后的编译后的代码：</p><pre><code>0x002a 00042 (counter.go:13)    CALL    runtime.racefuncenter(SB)\n       ......\n        0x0061 00097 (counter.go:14)    JMP     173\n        0x0063 00099 (counter.go:15)    MOVQ    AX, &quot;&quot;.j+8(SP)\n        0x0068 00104 (counter.go:16)    PCDATA  $0, $1\n        0x0068 00104 (counter.go:16)    MOVQ    &quot;&quot;.&amp;count+128(SP), AX\n        0x0070 00112 (counter.go:16)    PCDATA  $0, $0\n        0x0070 00112 (counter.go:16)    MOVQ    AX, (SP)\n        0x0074 00116 (counter.go:16)    CALL    runtime.raceread(SB)\n        0x0079 00121 (counter.go:16)    PCDATA  $0, $1\n        0x0079 00121 (counter.go:16)    MOVQ    &quot;&quot;.&amp;count+128(SP), AX\n        0x0081 00129 (counter.go:16)    MOVQ    (AX), CX\n        0x0084 00132 (counter.go:16)    MOVQ    CX, &quot;&quot;..autotmp_8+16(SP)\n        0x0089 00137 (counter.go:16)    PCDATA  $0, $0\n        0x0089 00137 (counter.go:16)    MOVQ    AX, (SP)\n        0x008d 00141 (counter.go:16)    CALL    runtime.racewrite(SB)\n        0x0092 00146 (counter.go:16)    MOVQ    &quot;&quot;..autotmp_8+16(SP), AX\n       ......\n        0x00b6 00182 (counter.go:18)    CALL    runtime.deferreturn(SB)\n        0x00bb 00187 (counter.go:18)    CALL    runtime.racefuncexit(SB)\n        0x00c0 00192 (counter.go:18)    MOVQ    104(SP), BP\n        0x00c5 00197 (counter.go:18)    ADDQ    $112, SP\n</code></pre><p>在编译的代码中，增加了runtime.racefuncenter、runtime.raceread、runtime.racewrite、runtime.racefuncexit等检测data race的方法。通过这些插入的指令，Go race detector工具就能够成功地检测出data race问题了。</p><p>总结一下，通过在编译的时候插入一些指令，在运行时通过这些插入的指令检测并发读写从而发现data race问题，就是这个工具的实现机制。</p><p>既然这个例子存在data race问题，我们就要想办法来解决它。这个时候，我们这节课的主角Mutex就要登场了，它可以轻松地消除掉data race。</p><p>具体怎么做呢？下面，我就结合这个例子，来具体给你讲一讲Mutex的基本用法。</p><p>我们知道，这里的共享资源是count变量，临界区是count++，只要在临界区前面获取锁，在离开临界区的时候释放锁，就能完美地解决data race的问题了。</p><pre><code>package main\n\n\n    import (\n        &quot;fmt&quot;\n        &quot;sync&quot;\n    )\n\n\n    func main() {\n        // 互斥锁保护计数器\n        var mu sync.Mutex\n        // 计数器的值\n        var count = 0\n        \n        // 辅助变量，用来确认所有的goroutine都完成\n        var wg sync.WaitGroup\n        wg.Add(10)\n\n        // 启动10个gourontine\n        for i := 0; i &lt; 10; i++ {\n            go func() {\n                defer wg.Done()\n                // 累加10万次\n                for j := 0; j &lt; 100000; j++ {\n                    mu.Lock()\n                    count++\n                    mu.Unlock()\n                }\n            }()\n        }\n        wg.Wait()\n        fmt.Println(count)\n    }\n</code></pre><p>如果你再运行一下程序，就会发现，data race警告没有了，系统干脆地输出了1000000：</p><p><img src=\"https://static001.geekbang.org/resource/image/d3/8e/d3c577aec0322488e349acf17789a08e.png?wh=457*73\" alt=\"\"></p><p>怎么样，使用Mutex是不是非常高效？效果很惊喜。</p><p>这里有一点需要注意：Mutex的零值是还没有goroutine等待的未加锁的状态，所以你不需要额外的初始化，直接声明变量（如 var mu sync.Mutex）即可。</p><p>那Mutex还有哪些用法呢？</p><p>很多情况下，<strong>Mutex会嵌入到其它struct中使用</strong>，比如下面的方式：</p><pre><code>type Counter struct {\n    mu    sync.Mutex\n    Count uint64\n}\n</code></pre><p>在初始化嵌入的struct时，也不必初始化这个Mutex字段，不会因为没有初始化出现空指针或者是无法获取到锁的情况。</p><p>有时候，我们还可以<strong>采用嵌入字段的方式</strong>。通过嵌入字段，你可以在这个struct上直接调用Lock/Unlock方法。</p><pre><code>func main() {\n    var counter Counter\n    var wg sync.WaitGroup\n    wg.Add(10)\n    for i := 0; i &lt; 10; i++ {\n        go func() {\n            defer wg.Done()\n            for j := 0; j &lt; 100000; j++ {\n                counter.Lock()\n                counter.Count++\n                counter.Unlock()\n            }\n        }()\n    }\n    wg.Wait()\n    fmt.Println(counter.Count)\n}\n\n\ntype Counter struct {\n    sync.Mutex\n    Count uint64\n}\n</code></pre><p><strong>如果嵌入的struct有多个字段，我们一般会把Mutex放在要控制的字段上面，然后使用空格把字段分隔开来。</strong>即使你不这样做，代码也可以正常编译，只不过，用这种风格去写的话，逻辑会更清晰，也更易于维护。</p><p>甚至，你还可以<strong>把获取锁、释放锁、计数加一的逻辑封装成一个方法</strong>，对外不需要暴露锁等逻辑：</p><pre><code>func main() {\n    // 封装好的计数器\n    var counter Counter\n\n    var wg sync.WaitGroup\n    wg.Add(10)\n\n    // 启动10个goroutine\n    for i := 0; i &lt; 10; i++ {\n        go func() {\n            defer wg.Done()\n            // 执行10万次累加\n            for j := 0; j &lt; 100000; j++ {\n                counter.Incr() // 受到锁保护的方法\n            }\n        }()\n    }\n    wg.Wait()\n    fmt.Println(counter.Count())\n}\n\n// 线程安全的计数器类型\ntype Counter struct {\n    CounterType int\n    Name        string\n\n    mu    sync.Mutex\n    count uint64\n}\n\n// 加1的方法，内部使用互斥锁保护\nfunc (c *Counter) Incr() {\n    c.mu.Lock()\n    c.count++\n    c.mu.Unlock()\n}\n\n// 得到计数器的值，也需要锁保护\nfunc (c *Counter) Count() uint64 {\n    c.mu.Lock()\n    defer c.mu.Unlock()\n    return c.count\n}\n</code></pre><h2>总结</h2><p>这节课，我介绍了并发问题的背景知识、标准库中Mutex的使用和最佳实践、通过race detector工具发现计数器程序的问题以及修复方法。相信你已经大致了解了Mutex这个同步原语。</p><p>在项目开发的初始阶段，我们可能并没有仔细地考虑资源的并发问题，因为在初始阶段，我们还不确定这个资源是否被共享。经过更加深入的设计，或者新功能的增加、代码的完善，这个时候，我们就需要考虑共享资源的并发问题了。当然，如果你能在初始阶段预见到资源会被共享并发访问就更好了。</p><p>意识到共享资源的并发访问的早晚不重要，重要的是，一旦你意识到这个问题，你就要及时通过互斥锁等手段去解决。</p><p>比如Docker issue <a href=\"https://github.com/moby/moby/pull/37583\">37583</a>、<a href=\"https://github.com/moby/moby/pull/35517\">35517</a>、<a href=\"https://github.com/moby/moby/pull/32826\">32826</a>、<a href=\"https://github.com/moby/moby/pull/30696\">30696</a>等、kubernetes issue <a href=\"https://github.com/kubernetes/kubernetes/pull/72361\">72361</a>、<a href=\"https://github.com/kubernetes/kubernetes/pull/71617\">71617</a>等，都是后来发现的data race而采用互斥锁Mutex进行修复的。</p><h2>思考题</h2><p>你已经知道，如果Mutex已经被一个goroutine获取了锁，其它等待中的goroutine们只能一直等待。那么，等这个锁释放后，等待中的goroutine中哪一个会优先获取Mutex呢？</p><p>欢迎在留言区写下你的思考和答案，我们一起交流讨论。如果你觉得有所收获，也欢迎你把今天的内容分享给你的朋友或同事。</p>","comments":[{"had_liked":false,"id":252834,"user_name":"Gojustforfun","can_delete":false,"product_type":"c1","uid":1187021,"ip_address":"","ucode":"7513A40F27344F","user_header":"https://static001.geekbang.org/account/avatar/00/12/1c/cd/8d552516.jpg","comment_is_top":false,"comment_ctime":1602497252,"is_pvip":true,"discussion_count":4,"race_medal":0,"score":"671617395428","product_id":100061801,"comment_content":"等待的goroutine们是以FIFO排队的<br>1）当Mutex处于正常模式时，若此时没有新goroutine与队头goroutine竞争，则队头goroutine获得。若有新goroutine竞争大概率新goroutine获得。<br>2）当队头goroutine竞争锁失败1ms后，它会将Mutex调整为饥饿模式。进入饥饿模式后，锁的所有权会直接从解锁goroutine移交给队头goroutine，此时新来的goroutine直接放入队尾。<br><br>3）当一个goroutine获取锁后，如果发现自己满足下列条件中的任何一个#1它是队列中最后一个#2它等待锁的时间少于1ms，则将锁切换回正常模式<br><br>以上简略翻译自https:&#47;&#47;golang.org&#47;src&#47;sync&#47;mutex.go 中注释Mutex fairness.","like_count":157,"discussions":[{"author":{"id":1065272,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/38/4f89095b.jpg","nickname":"写点啥呢","note":"","ucode":"C19032CF1C41BA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":314407,"discussion_content":"请问一下，如果队头goroutine与新goroutine竞争失败，那么它会在什么时机将mutex改为饥饿模式？感觉如果是等到队头goroutine得到mutex后才修改会导致较长的延迟就无法保证FIFO了（比如不断产生新goroutine的极端情况）谢谢","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1603155584,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1181650,"avatar":"https://static001.geekbang.org/account/avatar/00/12/07/d2/0d7ee298.jpg","nickname":"惘 闻","note":"","ucode":"C5909F034BF072","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1065272,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/38/4f89095b.jpg","nickname":"写点啥呢","note":"","ucode":"C19032CF1C41BA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385081,"discussion_content":"不是说了吗队头竞争失败就会设置为饥饿模式，应该是在竞争失败后进入阻塞前做的吧。切换模式应该就是改个标识位，消耗也不大顺便就做了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626874528,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":314407,"ip_address":""},"score":385081,"extra":""}]},{"author":{"id":2147220,"avatar":"https://static001.geekbang.org/account/avatar/00/20/c3/94/e89ebc50.jpg","nickname":"神毓逍遥","note":"","ucode":"83351CB18B190E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370603,"discussion_content":"为啥有新的goroutine时可以直接跟队首的竞争，不该放到队尾吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619484201,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1167430,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d0/46/7f9af8de.jpg","nickname":"寻","note":"","ucode":"473B2CC14158A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2147220,"avatar":"https://static001.geekbang.org/account/avatar/00/20/c3/94/e89ebc50.jpg","nickname":"神毓逍遥","note":"","ucode":"83351CB18B190E","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":375121,"discussion_content":"这样更快","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1621490197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":370603,"ip_address":""},"score":375121,"extra":""}]}]},{"had_liked":false,"id":252915,"user_name":"💎A","can_delete":false,"product_type":"c1","uid":1075412,"ip_address":"","ucode":"914FFA92CA2713","user_header":"https://static001.geekbang.org/account/avatar/00/10/68/d4/c9b5d3f9.jpg","comment_is_top":false,"comment_ctime":1602513620,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"435394210516","product_id":100061801,"comment_content":"看了下作者的发量，果断入手","like_count":102,"discussions":[{"author":{"id":1047278,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/fa/ee/748f13b5.jpg","nickname":"二十年前","note":"","ucode":"C98331689EECCF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546983,"discussion_content":"杀人诛心啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642487987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2063832,"avatar":"","nickname":"马宏图","note":"","ucode":"81721525304984","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382973,"discussion_content":"你是魔鬼吗 哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625813849,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":252914,"user_name":"我来也","can_delete":false,"product_type":"c1","uid":1205253,"ip_address":"","ucode":"773D6104F56767","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","comment_is_top":false,"comment_ctime":1602513583,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"126156565167","product_id":100061801,"comment_content":"课后思考题：<br>分享两篇文章吧（我还没看完😂）<br><br>鸟叔的：sync.mutex 源代码分析<br>https:&#47;&#47;colobu.com&#47;2018&#47;12&#47;18&#47;dive-into-sync-mutex&#47;<br><br>golang源码阅读-sync.Mutex<br>https:&#47;&#47;studygolang.com&#47;articles&#47;17017<br>","like_count":29,"discussions":[{"author":{"id":1033096,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c3/88/d16816a8.jpg","nickname":"如来神掌","note":"","ucode":"45E20FF935BD2F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":317286,"discussion_content":"第一篇也是鸟窝的😄","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1603528891,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1008348,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/dc/8876c73b.jpg","nickname":"moooofly","note":"","ucode":"4A20795C281B6F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":314560,"discussion_content":"第一篇好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603172022,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1008348,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/dc/8876c73b.jpg","nickname":"moooofly","note":"","ucode":"4A20795C281B6F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":314602,"discussion_content":"专栏作者的文章，能不好么。😄","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1603176685,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":314560,"ip_address":""},"score":314602,"extra":""}]}]},{"had_liked":false,"id":252972,"user_name":"pedro","can_delete":false,"product_type":"c1","uid":1200704,"ip_address":"","ucode":"F40C839DDFD599","user_header":"https://static001.geekbang.org/account/avatar/00/12/52/40/e57a736e.jpg","comment_is_top":false,"comment_ctime":1602551478,"is_pvip":false,"replies":[{"id":"92422","content":"你居然“剧透”第五讲的内容������","user_name":"作者回复","user_name_real":"鸟窝","uid":"1066613","ctime":1602551940,"ip_address":"","comment_id":252972,"utype":1}],"discussion_count":4,"race_medal":0,"score":"83206930102","product_id":100061801,"comment_content":"大家都已经解答了，就不重复了。这里给一些不熟悉 go 需要的同学补充一下，go 语言查看汇编代码命令:<br>go tool compile -S file.go<br>对于文中 counter 的例子可以过度优化一下，那就是获取计数的 Count 函数其实可以通过读写锁，也就是 RWMutex 来优化一下。","like_count":19,"discussions":[{"author":{"id":1066613,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/75/d35c7623.jpg","nickname":"鸟窝","note":"","ucode":"E49D44F9613F17","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506932,"discussion_content":"你居然“剧透”第五讲的内容������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602551940,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2009243,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/TUBrScQ5H00BUwjQkpyCyvhcGXyicHZqkAPy4rI4GyXMvmKfwZ4V00xDib0FFZRdAz8T89ANxx1sJ7KNNyFqCz6w/132","nickname":"gopher","note":"","ucode":"9FB521B55AE6CE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312742,"discussion_content":"再补充一点哈，这样加锁对性能影响很严重，可以通过 sync包下的Adduint（&amp;,val）方法实现累加，性能更好","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1602808022,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1618828,"avatar":"","nickname":"面向工资编程","note":"","ucode":"07F797F021BDD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391689,"discussion_content":"大神，能解释下为啥【获取计数的 Count 函数也要加锁呀】，主 goroutine 里面不是都通过 wait() 等待子 goroutine 里面的 count++ 操作完成了么，为啥主 goroutine 里面在完成之后读取 count 的值还要加锁呀？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630576842,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1193874,"avatar":"https://static001.geekbang.org/account/avatar/00/12/37/92/961ba560.jpg","nickname":"授人以🐟，不如授人以渔","note":"","ucode":"BD53829E924B66","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1618828,"avatar":"","nickname":"面向工资编程","note":"","ucode":"07F797F021BDD0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":410961,"discussion_content":"我最初也有这个问题。在调用 counter.Count() 的地方，肯定是不存在 goroutine 并发情况的，因此不加锁也是可以的。但是如果你在 counter.Incr() 前后位置添加 counter.Count() 调用，肯定会出现 data race。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635818225,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":391689,"ip_address":""},"score":410961,"extra":""}]}]},{"had_liked":false,"id":254007,"user_name":"Panmax","can_delete":false,"product_type":"c1","uid":1004871,"ip_address":"","ucode":"9D65E3B84C5519","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/47/d217c45f.jpg","comment_is_top":false,"comment_ctime":1603013799,"is_pvip":false,"replies":[{"id":"92766","content":"那借这个问题解答一下吧。编译的时候不能发现data race,但是编译的时候可以开启race参数，这样编译后的程序在运行时就可以data race问题了。你看到很仔细，希望这个解答能把这段解释清楚。<br>另外，绝对不要把带race参数编译的程序部署到线上。","user_name":"作者回复","user_name_real":"鸟窝","uid":"1066613","ctime":1603028174,"ip_address":"","comment_id":254007,"utype":1}],"discussion_count":4,"race_medal":0,"score":"78912425127","product_id":100061801,"comment_content":"原文中关于 race detector 的介绍有两句话前后矛盾，老师可否解释一下：<br><br>前边说：在编译（compile）、测试（test）或者运行（run）Go 代码的时候，加上 race 参数，就有可能发现并发问题。<br><br>后边却又说：因为它的实现方式，只能通过真正对实际地址进行读写访问的时候才能探测，所以它并不能在编译的时候发现 data race 的问题。<br><br>所以结论是 race detector 并不能在编译阶段发现并发问题？那么前边那句是不是就没必要提了，不然容易让大家误会。","like_count":19,"discussions":[{"author":{"id":1066613,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/75/d35c7623.jpg","nickname":"鸟窝","note":"","ucode":"E49D44F9613F17","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507248,"discussion_content":"那借这个问题解答一下吧。编译的时候不能发现data race,但是编译的时候可以开启race参数，这样编译后的程序在运行时就可以data race问题了。你看到很仔细，希望这个解答能把这段解释清楚。\n另外，绝对不要把带race参数编译的程序部署到线上。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1603028174,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1269633,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5f/81/07505cdf.jpg","nickname":"张金富","note":"","ucode":"2F571C73DB868F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385163,"discussion_content":"开始的compile是指加入检测代码 然后必须运行时才能检测到","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1626925896,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2331842,"avatar":"","nickname":"Geek_4f06ca","note":"","ucode":"69B37349DE3EC5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411357,"discussion_content":"QA性能测试的时候可以开启，跑一会，发现问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635906090,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1310798,"avatar":"https://static001.geekbang.org/account/avatar/00/14/00/4e/be2b206b.jpg","nickname":"吴小智","note":"","ucode":"C7C9F58B5C9F7B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383950,"discussion_content":"那在 CI 流程中，只能在测试阶段发现 data race 问题？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626316297,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":252931,"user_name":"Remember九离","can_delete":false,"product_type":"c1","uid":1237327,"ip_address":"","ucode":"97EE6E6344689F","user_header":"https://static001.geekbang.org/account/avatar/00/12/e1/4f/00476b4c.jpg","comment_is_top":false,"comment_ctime":1602518251,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"66027027691","product_id":100061801,"comment_content":"这个课程我想一直跟着走，不单单只是看，我想在吸收课程精华的同时，也进行独立的思考，然后输出，总结，加深理解。因此创建了一个仓库，欢迎大家在学习的同时一起做到手中有码，项目地址:https:&#47;&#47;github.com&#47;wuqinqiang&#47;Go_Concurrency","like_count":16,"discussions":[{"author":{"id":1066613,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/75/d35c7623.jpg","nickname":"鸟窝","note":"","ucode":"E49D44F9613F17","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311937,"discussion_content":"������，欢迎分享心得和自己的思考","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602547258,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":252833,"user_name":"Daiver","can_delete":false,"product_type":"c1","uid":1466447,"ip_address":"","ucode":"9B1A03AFBC79BC","user_header":"https://static001.geekbang.org/account/avatar/00/16/60/4f/db0e62b3.jpg","comment_is_top":false,"comment_ctime":1602497145,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"57437071993","product_id":100061801,"comment_content":"go的goroutine 调度中，内部维护了队列，goroutine在抢占锁的时候，会自旋一段时间，如果抢占失败，这个goroutine会被放到一个FIFO队列中，一般来说，锁释放时，会优先唤醒队头的goroutine，即队头的goroutine优先获得Mutex。","like_count":13},{"had_liked":false,"id":297480,"user_name":"骁勇善战","can_delete":false,"product_type":"c1","uid":1076063,"ip_address":"","ucode":"D57DC14EADC889","user_header":"https://static001.geekbang.org/account/avatar/00/10/6b/5f/8d10c47a.jpg","comment_is_top":false,"comment_ctime":1623573080,"is_pvip":false,"replies":[{"id":"108114","content":"说来话长。<br>1.mutex保护的临界区。如果读的时候不加锁，可能会造成不一致的后果，比如部分变量被修改了。<br>2.如果临界区比较简单，比如一个int64读写，也可能在一些cpu架构下有可见性问题，导致别的goroutine对变量的写读goroutine看不到<br>","user_name":"作者回复","user_name_real":"鸟窝","uid":"1066613","ctime":1623770242,"ip_address":"","comment_id":297480,"utype":1}],"discussion_count":2,"race_medal":0,"score":"44573246040","product_id":100061801,"comment_content":"老师，为什么读也要加锁呢？","like_count":10,"discussions":[{"author":{"id":1066613,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/75/d35c7623.jpg","nickname":"鸟窝","note":"","ucode":"E49D44F9613F17","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521836,"discussion_content":"说来话长。\n1.mutex保护的临界区。如果读的时候不加锁，可能会造成不一致的后果，比如部分变量被修改了。\n2.如果临界区比较简单，比如一个int64读写，也可能在一些cpu架构下有可见性问题，导致别的goroutine对变量的写读goroutine看不到\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1623770242,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1603004,"avatar":"https://static001.geekbang.org/account/avatar/00/18/75/bc/e24e181e.jpg","nickname":"Calvin","note":"","ucode":"0EEF5B207623B5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1066613,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/75/d35c7623.jpg","nickname":"鸟窝","note":"","ucode":"E49D44F9613F17","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":544786,"discussion_content":"老师，java可以用volatile关键字解决可见性的问题，go中是否有类似的同步原语？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641713156,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":521836,"ip_address":""},"score":544786,"extra":""}]}]},{"had_liked":false,"id":254727,"user_name":"Panda","can_delete":false,"product_type":"c1","uid":1095740,"ip_address":"","ucode":"911A200C7B18BE","user_header":"https://static001.geekbang.org/account/avatar/00/10/b8/3c/1a294619.jpg","comment_is_top":false,"comment_ctime":1603175812,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"44552848772","product_id":100061801,"comment_content":"推荐一个工具 Chronos - A static race detector for the go language    <br> https:&#47;&#47;github.com&#47;amit-davidson&#47;Chronos ","like_count":11},{"had_liked":false,"id":253855,"user_name":"ZY","can_delete":false,"product_type":"c1","uid":1284436,"ip_address":"","ucode":"BE2541F50DE864","user_header":"https://static001.geekbang.org/account/avatar/00/13/99/54/55554fa1.jpg","comment_is_top":false,"comment_ctime":1602920476,"is_pvip":false,"replies":[{"id":"92736","content":"进入自旋不一定会获取到锁。<br>饥饿模式不一定改变，看文章。只有等待时间小于阈值或者无等待者时才会改变模式","user_name":"作者回复","user_name_real":"鸟窝","uid":"1066613","ctime":1602932931,"ip_address":"","comment_id":253855,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31667691548","product_id":100061801,"comment_content":"有两种情况<br>1. 如果当前有协程进入自旋模式，当前协程会成功获取到锁<br>2. 如果没有协程进入自选模式，释放锁的协程会释放的信号量会成功唤醒等待队列中的协程，该卸程会成功获取到锁，并且把等待计数器减1.<br><br>老师：在饥饿模式下，信号量唤醒的协程成功获取到锁之后，该Mutex的模式会改变吗？","like_count":7,"discussions":[{"author":{"id":1066613,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/75/d35c7623.jpg","nickname":"鸟窝","note":"","ucode":"E49D44F9613F17","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507206,"discussion_content":"进入自旋不一定会获取到锁。\n饥饿模式不一定改变，看文章。只有等待时间小于阈值或者无等待者时才会改变模式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602932931,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":273517,"user_name":"一代咩神","can_delete":false,"product_type":"c1","uid":1505603,"ip_address":"","ucode":"72916825725038","user_header":"https://static001.geekbang.org/account/avatar/00/16/f9/43/654d107e.jpg","comment_is_top":false,"comment_ctime":1610619663,"is_pvip":false,"replies":[{"id":"99180","content":"否则获取的时候可能不能得到刚增加的值","user_name":"作者回复","user_name_real":"鸟窝","uid":"1066613","ctime":1610723141,"ip_address":"","comment_id":273517,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23085456143","product_id":100061801,"comment_content":"能否解答一下，为什么获取计数器的值也需要加锁？","like_count":5,"discussions":[{"author":{"id":1066613,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/75/d35c7623.jpg","nickname":"鸟窝","note":"","ucode":"E49D44F9613F17","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513620,"discussion_content":"否则获取的时候可能不能得到刚增加的值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610723141,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":253062,"user_name":"chapin","can_delete":false,"product_type":"c1","uid":1070020,"ip_address":"","ucode":"BB1800A771A8E9","user_header":"https://static001.geekbang.org/account/avatar/00/10/53/c4/dea5d7f3.jpg","comment_is_top":false,"comment_ctime":1602582056,"is_pvip":false,"replies":[{"id":"92453","content":"明天一讲剖析mutex","user_name":"作者回复","user_name_real":"鸟窝","uid":"1066613","ctime":1602590680,"ip_address":"","comment_id":253062,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18782451240","product_id":100061801,"comment_content":"个人希望🐤 窝大佬可以多分析一些源码。","like_count":4,"discussions":[{"author":{"id":1066613,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/75/d35c7623.jpg","nickname":"鸟窝","note":"","ucode":"E49D44F9613F17","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506960,"discussion_content":"明天一讲剖析mutex","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602590680,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":315311,"user_name":"无名无姓","can_delete":false,"product_type":"c1","uid":2621412,"ip_address":"","ucode":"487BD5AA2CD305","user_header":"https://static001.geekbang.org/account/avatar/00/27/ff/e4/927547a9.jpg","comment_is_top":false,"comment_ctime":1633826611,"is_pvip":true,"replies":[{"id":"114227","content":"一直尝试做获取锁，而不是让渡cpu给其他goroutine","user_name":"作者回复","user_name_real":"鸟窝","uid":"1066613","ctime":1633929539,"ip_address":"","comment_id":315311,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14518728499","product_id":100061801,"comment_content":"请问老师goroutine里面自旋怎么理解","like_count":3,"discussions":[{"author":{"id":1066613,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/75/d35c7623.jpg","nickname":"鸟窝","note":"","ucode":"E49D44F9613F17","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527930,"discussion_content":"一直尝试做获取锁，而不是让渡cpu给其他goroutine","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633929539,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":298194,"user_name":"geek_arong2048","can_delete":false,"product_type":"c1","uid":1518310,"ip_address":"","ucode":"AB575BE100E4A9","user_header":"https://static001.geekbang.org/account/avatar/00/17/2a/e6/c788257f.jpg","comment_is_top":false,"comment_ctime":1623941313,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14508843201","product_id":100061801,"comment_content":"&#47;&#47; 得到计数器的值，也需要锁保护<br>func (c *Counter) Count() uint64 { <br>c.mu.Lock() <br>defer c.mu.Unlock() <br>return c.count<br>}<br>老师，在这里读取count值时有必要加锁吗？我理解的是这类简单的读取应该不太需要增加锁，当需要进行读取并修改时才需要进行加锁操作，因为&quot;读取&quot;这个动作自身是原子的，而&quot;读取-修改&quot;这个动作是非原子的","like_count":3},{"had_liked":false,"id":294800,"user_name":"初学者","can_delete":false,"product_type":"c1","uid":2052670,"ip_address":"","ucode":"5E404009761B90","user_header":"https://static001.geekbang.org/account/avatar/00/1f/52/3e/f74da7bd.jpg","comment_is_top":false,"comment_ctime":1622095660,"is_pvip":false,"replies":[{"id":"107062","content":"对","user_name":"作者回复","user_name_real":"鸟窝","uid":"1066613","ctime":1622156097,"ip_address":"","comment_id":294800,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10212030252","product_id":100061801,"comment_content":"老师好，“多个goroutine并发更新同一个资源”，这里的同一个资源的条件是不是应该是堆栈分析后分配到堆上的变量，因为堆上是线程共享的，如果是栈上的变量的话，因为是线程独有的就不会出现并发更新的问题，望老师解答下","like_count":2,"discussions":[{"author":{"id":1066613,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/75/d35c7623.jpg","nickname":"鸟窝","note":"","ucode":"E49D44F9613F17","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":520817,"discussion_content":"对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622156097,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":255591,"user_name":"无名氏","can_delete":false,"product_type":"c1","uid":1001023,"ip_address":"","ucode":"D1F322E386430E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/46/3f/7825378a.jpg","comment_is_top":false,"comment_ctime":1603376995,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"10193311587","product_id":100061801,"comment_content":"每篇文章多品几遍","like_count":2,"discussions":[{"author":{"id":1072015,"avatar":"https://static001.geekbang.org/account/avatar/00/10/5b/8f/4b0ab5db.jpg","nickname":"Middleware","note":"","ucode":"C0028293ECDD47","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559041,"discussion_content":"牛逼 我才开始看这课了，你竟然20年就学习了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648582816,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310412,"user_name":"面向工资编程","can_delete":false,"product_type":"c1","uid":1618828,"ip_address":"","ucode":"07F797F021BDD0","user_header":"","comment_is_top":false,"comment_ctime":1630646054,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5925613350","product_id":100061801,"comment_content":"main 函数里面调用的 wg.Wait() 不是已经能够确保后面的读取 fmt.Println(counter.Count()) 操作和写入 counter.Incr() 这两个 goroutine 的前后顺序了么（确定是先 Incr 完成之后再读取）？为啥读取还要加锁？","like_count":1,"discussions":[{"author":{"id":1080563,"avatar":"https://static001.geekbang.org/account/avatar/00/10/7c/f3/d5cc779e.jpg","nickname":"周鸣","note":"","ucode":"0796B633876E92","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":562085,"discussion_content":"因为现在的cpu都有缓存的设计。可能存在一个线程修改了变量的值，但是还没来得及刷进内存，另一个线程就来读取这个值。导致读取的值不是最终的修改值。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649772234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2028277,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f2/f5/b82f410d.jpg","nickname":"Unknown element","note":"","ucode":"34A129800D0238","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1080563,"avatar":"https://static001.geekbang.org/account/avatar/00/10/7c/f3/d5cc779e.jpg","nickname":"周鸣","note":"","ucode":"0796B633876E92","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591632,"discussion_content":"加锁可以保证缓存刷进内存吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666717350,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":562085,"ip_address":"江苏"},"score":591632,"extra":""}]}]},{"had_liked":false,"id":274119,"user_name":"Albert","can_delete":false,"product_type":"c1","uid":2227374,"ip_address":"","ucode":"4A38B6BA2DD0ED","user_header":"https://static001.geekbang.org/account/avatar/00/21/fc/ae/0bfbb04a.jpg","comment_is_top":false,"comment_ctime":1610862547,"is_pvip":false,"replies":[{"id":"99563","content":"不清楚你说的那个代码？不是最终的值肯定是对计数值的更新有并发问题","user_name":"作者回复","user_name_real":"鸟窝","uid":"1066613","ctime":1610947149,"ip_address":"","comment_id":274119,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5905829843","product_id":100061801,"comment_content":"老师，，获取计数器的值 也加锁，解释为可能不能得到刚增加的值。&#47;&#47; 使用WaitGroup等待10个goroutine完成 既然已经完了计数的协程。为啥最后打印计数器 还可能不是最终的值啊？","like_count":1,"discussions":[{"author":{"id":1066613,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/75/d35c7623.jpg","nickname":"鸟窝","note":"","ucode":"E49D44F9613F17","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513913,"discussion_content":"不清楚你说的那个代码？不是最终的值肯定是对计数值的更新有并发问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610947149,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":262420,"user_name":"愤怒的显卡","can_delete":false,"product_type":"c1","uid":1640898,"ip_address":"","ucode":"5027D73E1CCDD4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKhZZ4YhWluhayDIDDicJXJkDe86hm2mYEpPZzYdyopt8hPbt2EMcwgZ4jzPBqFyVUEQzb3sEYXWuA/132","comment_is_top":false,"comment_ctime":1605712591,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5900679887","product_id":100061801,"comment_content":"鸟窝大大你好，请教下为什么在协程内部fmt.Println后最后的结果会是正常的，因为fmt是安全的么<br>func main() {<br>\tvar count = 0<br><br>\tvar wg sync.WaitGroup<br><br>\twg.Add(10)<br><br>\tfor i := 0; i &lt; 10; i++ {<br>\t\tgo func() {<br>\t\t\tdefer wg.Done()<br>\t\t\tfor j := 0; j &lt; 10000; j++ {<br>\t\t\tcount++<br>\t\t\t\tfmt.Println(count)<br>\t\t\t}<br>\t\t}()<br>\t}<br><br>\twg.Wait()<br><br>\tfmt.Println(count)<br>}<br>","like_count":1,"discussions":[{"author":{"id":1115232,"avatar":"https://static001.geekbang.org/account/avatar/00/11/04/60/64d166b6.jpg","nickname":"Fan","note":"","ucode":"3BF28670FD9407","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336685,"discussion_content":"这个也是不对。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1608654273,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":258998,"user_name":"一介农夫","can_delete":false,"product_type":"c1","uid":1231587,"ip_address":"","ucode":"FBDEE48436A542","user_header":"https://static001.geekbang.org/account/avatar/00/12/ca/e3/7e860739.jpg","comment_is_top":false,"comment_ctime":1604592635,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5899559931","product_id":100061801,"comment_content":"看完这章，才发现原来有检测这个共享资源竞争问题的命令啊😂","like_count":1},{"had_liked":false,"id":256907,"user_name":"jeffery","can_delete":false,"product_type":"c1","uid":1219972,"ip_address":"","ucode":"35E2DAA386FB86","user_header":"https://static001.geekbang.org/account/avatar/00/12/9d/84/171b2221.jpg","comment_is_top":false,"comment_ctime":1603781060,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5898748356","product_id":100061801,"comment_content":"对于go小白来说怎么快速的进阶！看鸟叔.发型.必定课程干货满满","like_count":1},{"had_liked":false,"id":256709,"user_name":"Kcaco","can_delete":false,"product_type":"c1","uid":1247099,"ip_address":"","ucode":"E292C8B89B2BE5","user_header":"https://static001.geekbang.org/account/avatar/00/13/07/7b/0b42148f.jpg","comment_is_top":false,"comment_ctime":1603713285,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5898680581","product_id":100061801,"comment_content":"思路清晰，学到很多！！！","like_count":1},{"had_liked":false,"id":254334,"user_name":"不求闻达","can_delete":false,"product_type":"c1","uid":1629565,"ip_address":"","ucode":"B265859B9566D5","user_header":"https://static001.geekbang.org/account/avatar/00/18/dd/7d/5d3ab033.jpg","comment_is_top":false,"comment_ctime":1603101664,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5898068960","product_id":100061801,"comment_content":"grouting 是以FIFO队列顺序来进入临界区。这只是正常模式。如果是饥饿模式就不一样了。","like_count":1},{"had_liked":false,"id":253735,"user_name":"风中花","can_delete":false,"product_type":"c1","uid":1085237,"ip_address":"","ucode":"067E0A1E116844","user_header":"https://static001.geekbang.org/account/avatar/00/10/8f/35/f1839bb2.jpg","comment_is_top":false,"comment_ctime":1602846760,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5897814056","product_id":100061801,"comment_content":"打卡 平台的go相关都学了 这个也不能错过 学习消化中 ","like_count":1},{"had_liked":false,"id":253026,"user_name":"新味道","can_delete":false,"product_type":"c1","uid":2227527,"ip_address":"","ucode":"979E3574082CE7","user_header":"https://static001.geekbang.org/account/avatar/00/21/fd/47/499339d1.jpg","comment_is_top":false,"comment_ctime":1602570481,"is_pvip":false,"replies":[{"id":"92445","content":"������������看的仔细。也可以。defer的耗时已经非常小了，我专栏中有讲到。","user_name":"作者回复","user_name_real":"鸟窝","uid":"1066613","ctime":1602580502,"ip_address":"","comment_id":253026,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5897537777","product_id":100061801,"comment_content":"func (c *Counter) Incr() { c.mu.Lock() c.count++ c.mu.Unlock()}&#47;&#47; 得到计数器的值，也需要锁保护func (c *Counter) Count() uint64 { c.mu.Lock() defer c.mu.Unlock() return c.count}<br><br>问题：Incr()里为什么不用defer c.mu.Unlock() ?","like_count":1,"discussions":[{"author":{"id":1066613,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/75/d35c7623.jpg","nickname":"鸟窝","note":"","ucode":"E49D44F9613F17","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506948,"discussion_content":"������������看的仔细。也可以。defer的耗时已经非常小了，我专栏中有讲到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602580502,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1115232,"avatar":"https://static001.geekbang.org/account/avatar/00/11/04/60/64d166b6.jpg","nickname":"Fan","note":"","ucode":"3BF28670FD9407","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336687,"discussion_content":"表情都变成乱码了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608654392,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2227527,"avatar":"https://static001.geekbang.org/account/avatar/00/21/fd/47/499339d1.jpg","nickname":"新味道","note":"","ucode":"979E3574082CE7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312084,"discussion_content":"你的回复开头是乱码，可以跟极客时间反应下。很多地方有乱码，是不是表情符？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602580620,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":252890,"user_name":"罗杰","can_delete":false,"product_type":"c1","uid":1320487,"ip_address":"","ucode":"96BAFAA147341F","user_header":"https://static001.geekbang.org/account/avatar/00/14/26/27/eba94899.jpg","comment_is_top":false,"comment_ctime":1602507196,"is_pvip":false,"discussion_count":1,"race_medal":2,"score":"5897474492","product_id":100061801,"comment_content":"直觉是随机的，让我到家用代码确认一下","like_count":1,"discussions":[{"author":{"id":1320487,"avatar":"https://static001.geekbang.org/account/avatar/00/14/26/27/eba94899.jpg","nickname":"罗杰","note":"","ucode":"96BAFAA147341F","race_medal":2,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311890,"discussion_content":"哈 并不是 评论区有大佬给出了正确答案","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1602513707,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":252837,"user_name":"Gojustforfun","can_delete":false,"product_type":"c1","uid":1187021,"ip_address":"","ucode":"7513A40F27344F","user_header":"https://static001.geekbang.org/account/avatar/00/12/1c/cd/8d552516.jpg","comment_is_top":false,"comment_ctime":1602498132,"is_pvip":true,"replies":[{"id":"92400","content":"这个代码直接复制到本地加到package main和import packages就能跑，如果有问题记得留言。<br>你理解的是对的，但是这种风格不是强制性的，只是作为推荐命名方式，所以也不能说别人不对。","user_name":"作者回复","user_name_real":"鸟窝","uid":"1066613","ctime":1602503497,"ip_address":"","comment_id":252837,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5897465428","product_id":100061801,"comment_content":"如果可以，希望老师将完整代码发一下。<br><br>另外，有个长久的疑问（很多Java背景的同事都这样）——明明Counter类型本身已经具有语义&#47;上下文，其中的字段只要用Type&#47;Name命名就好，调用:counter.Type&#47;counter.Name。<br><br>但常常看到的是counter.CounterType&#47;counter.CounterName？","like_count":1,"discussions":[{"author":{"id":1066613,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/75/d35c7623.jpg","nickname":"鸟窝","note":"","ucode":"E49D44F9613F17","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506888,"discussion_content":"这个代码直接复制到本地加到package main和import packages就能跑，如果有问题记得留言。\n你理解的是对的，但是这种风格不是强制性的，只是作为推荐命名方式，所以也不能说别人不对。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602503497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1044027,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ee/3b/0ecd751d.jpg","nickname":"ryon","note":"","ucode":"B1BD25FB739D6E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312841,"discussion_content":"我觉得是为了更加简洁吧: counter.Type","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602830369,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354345,"user_name":"菠萝吹雪—Code","can_delete":false,"product_type":"c1","uid":1650378,"ip_address":"河南","ucode":"A5B2FC661EE17D","user_header":"https://static001.geekbang.org/account/avatar/00/19/2e/ca/469f7266.jpg","comment_is_top":false,"comment_ctime":1660292984,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1660292984","product_id":100061801,"comment_content":"思考题：<br>执行步骤：<br>（1）先上来一个CAS操作，如果这把锁正空闲，并且没人抢，那么就直接成功<br>（2）否则，自旋几次，如果这个时候成功了，也不用加入队列<br>（3）否则，加入队列<br>（4）从队列中被唤醒：#1、正常模式：和新来的一起抢锁，但是大概率失败。 #2、饥饿模式：肯定拿到锁，也就是在这种模式下，锁会优先选择队列中的goroutine，对应的退出饥饿模式，要么队列中只剩下一个goroutine，要么 G2 的等待时间小于 1ms<br>","like_count":0},{"had_liked":false,"id":351185,"user_name":"方寸","can_delete":false,"product_type":"c1","uid":1686496,"ip_address":"","ucode":"FABF9235F9DF3C","user_header":"https://static001.geekbang.org/account/avatar/00/19/bb/e0/72d9448e.jpg","comment_is_top":false,"comment_ctime":1657596906,"is_pvip":false,"replies":[{"id":"127841","content":"Mutex可以直接使用零值","user_name":"作者回复","user_name_real":"编辑","uid":"1066613","ctime":1657861362,"ip_address":"","comment_id":351185,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1657596906","product_id":100061801,"comment_content":"题外话， 后面两个例子不创建实例， 是可以定义的时候， 会默认实例吗？","like_count":0,"discussions":[{"author":{"id":1066613,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/75/d35c7623.jpg","nickname":"鸟窝","note":"","ucode":"E49D44F9613F17","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580074,"discussion_content":"Mutex可以直接使用零值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657861363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":333713,"user_name":"吴同学","can_delete":false,"product_type":"c1","uid":2279884,"ip_address":"","ucode":"59861F2ECC6243","user_header":"https://static001.geekbang.org/account/avatar/00/22/c9/cc/6df7887e.jpg","comment_is_top":false,"comment_ctime":1644482455,"is_pvip":false,"replies":[{"id":"121904","content":"因为你没有创造出新goroutine和waiter竞争。<br>新创建的goroutine抢锁的时候，锁并没有释放，所以新创建的goroutine加到waiter中了","user_name":"作者回复","user_name_real":"编辑","uid":"1066613","ctime":1644500472,"ip_address":"","comment_id":333713,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1644482455","product_id":100061801,"comment_content":"老师，不是说“若有新goroutine竞争大概率新goroutine获得”，为什么下边的代码，每次都是50个旧的go程抢到锁之后，新的go程才会抢到。而不是在50个旧的go程执行的过程中，被每隔五秒创建的100个新的go程给抢断了。希望老师帮忙解释一下，万分感谢。<br><br>func main() {<br><br>\tvar mux sync.Mutex<br>\tfor i := 1; i &lt;= 50; i++ {<br>\t\tgo func(i int) {<br>\t\t\tmux.Lock()<br>\t\t\tfmt.Printf(&quot;第%d个go程获取到锁！\\n&quot;, i)<br>\t\t\ttime.Sleep(time.Second)<br>\t\t\tmux.Unlock()<br>\t\t}(i)<br>\t\ttime.Sleep(time.Millisecond)<br>\t\tfmt.Printf(&quot;第%d个go程准备就位\\n&quot;, i)<br>\t}<br><br>\t&#47;&#47; 睡两秒确保上述50个go程均处于阻塞状态<br>\ttime.Sleep(time.Second * 2)<br><br>\t&#47;&#47; 监听go程数量<br>\tgo func() {<br>\t\tfor i := 0; i &lt; 1000; i++ {<br>\t\t\tfmt.Println(&quot;此时go程的数量是:&quot;, runtime.NumGoroutine())<br>\t\t\ttime.Sleep(time.Second)<br>\t\t}<br>\t}()<br><br>\t&#47;&#47; 每隔五秒创建100个新的go程，同样无法模拟新的go程会比之前50个go程优先抢到锁<br>\tfor {<br>\t\tfor i := 0; i &lt; 100; i++ {<br>\t\t\tgo func() {<br>\t\t\t\tmux.Lock()<br>\t\t\t\tfmt.Println(&quot;新go程获取到锁！&quot;)<br>\t\t\t\tmux.Unlock()<br>\t\t\t}()<br>\t\t}<br>\t\ttime.Sleep(time.Second * 5)<br>\t}<br>}<br>","like_count":0,"discussions":[{"author":{"id":1066613,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/75/d35c7623.jpg","nickname":"鸟窝","note":"","ucode":"E49D44F9613F17","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550378,"discussion_content":"因为你没有创造出新goroutine和waiter竞争。\n新创建的goroutine抢锁的时候，锁并没有释放，所以新创建的goroutine加到waiter中了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644500472,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2279884,"avatar":"https://static001.geekbang.org/account/avatar/00/22/c9/cc/6df7887e.jpg","nickname":"吴同学","note":"","ucode":"59861F2ECC6243","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1066613,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/75/d35c7623.jpg","nickname":"鸟窝","note":"","ucode":"E49D44F9613F17","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":550380,"discussion_content":"感谢老师的回复，我再理解理解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644500751,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":550378,"ip_address":""},"score":550380,"extra":""}]}]},{"had_liked":false,"id":325424,"user_name":"圆圆圆","can_delete":false,"product_type":"c1","uid":1628994,"ip_address":"","ucode":"05A87DB5CC777F","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/ajNVdqHZLLAQBkjIMjPDc3f7AibTeCd8ibJUhRnCdAo2ETicK21HWGDxXgD6rw76cMkmGsObIHt5rpFrS69GicwwRA/132","comment_is_top":false,"comment_ctime":1638954331,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638954331","product_id":100061801,"comment_content":"对“得到计数器的值，也需要锁保护”也是隐蔽的坑。这样做有两个原因：<br>1. 防止此操作放在其他临界区操作中。因为Mutex是不可重入的（及不能被一个线程多次获取），所以在其他临界区中使用会直接报错。<br>2. 获得正确的值。因为现代计算机CPU存在自己的缓存只有在必要时才会刷回至内存，所以内存中的值可能是错误的。调用Mutex时CPU的写操作缓存会刷回至内存，这样获取的值才是争取的值。","like_count":0},{"had_liked":false,"id":319351,"user_name":"党","can_delete":false,"product_type":"c1","uid":1071974,"ip_address":"","ucode":"EE531DB3EA124D","user_header":"https://static001.geekbang.org/account/avatar/00/10/5b/66/ad35bc68.jpg","comment_is_top":false,"comment_ctime":1635755466,"is_pvip":false,"replies":[{"id":"118828","content":"-race -d=checkptr=0","user_name":"作者回复","user_name_real":"编辑","uid":"1066613","ctime":1639807536,"ip_address":"","comment_id":319351,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1635755466","product_id":100061801,"comment_content":"再用boltDb数据库时候 加上-race就会报错 fatal error: checkptr: converted pointer straddles multiple allocations 去掉就不报错了，代码里只有一句创建表，报的这个错也不是 data race错 是指针转换问题 咋弄啊","like_count":0,"discussions":[{"author":{"id":1066613,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/75/d35c7623.jpg","nickname":"鸟窝","note":"","ucode":"E49D44F9613F17","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539704,"discussion_content":"-race -d=checkptr=0","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639807536,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":311656,"user_name":"BROOKS","can_delete":false,"product_type":"c1","uid":1219678,"ip_address":"","ucode":"3CFC431DDABA3B","user_header":"https://static001.geekbang.org/account/avatar/00/12/9c/5e/80bbb02c.jpg","comment_is_top":false,"comment_ctime":1631368635,"is_pvip":true,"replies":[{"id":"112935","content":"在一个cpu上的写不一定及时的同步到另一个cpu核.amd64的可能没问题，arm就不一定了。看go内存模型","user_name":"作者回复","user_name_real":"鸟窝","uid":"1066613","ctime":1631434936,"ip_address":"","comment_id":311656,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1631368635","product_id":100061801,"comment_content":"&gt; 得到计数器的值，也需要锁保护<br><br>个人认为 Count() 方法不需要加锁，请问 Count() 方法加锁的作用是什么？","like_count":0,"discussions":[{"author":{"id":1066613,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/75/d35c7623.jpg","nickname":"鸟窝","note":"","ucode":"E49D44F9613F17","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526692,"discussion_content":"在一个cpu上的写不一定及时的同步到另一个cpu核.amd64的可能没问题，arm就不一定了。看go内存模型","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631434936,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1219678,"avatar":"https://static001.geekbang.org/account/avatar/00/12/9c/5e/80bbb02c.jpg","nickname":"BROOKS","note":"","ucode":"3CFC431DDABA3B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393443,"discussion_content":"原来如此，感谢解惑，我去查查内存模型","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631435173,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310213,"user_name":"党","can_delete":false,"product_type":"c1","uid":1071974,"ip_address":"","ucode":"EE531DB3EA124D","user_header":"https://static001.geekbang.org/account/avatar/00/10/5b/66/ad35bc68.jpg","comment_is_top":false,"comment_ctime":1630550101,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630550101","product_id":100061801,"comment_content":"在用-race的时候 如何让某个包或者.go文件禁止race检查 引用外来的包使用race就panic 现在只能禁止检查了","like_count":0},{"had_liked":false,"id":310209,"user_name":"党","can_delete":false,"product_type":"c1","uid":1071974,"ip_address":"","ucode":"EE531DB3EA124D","user_header":"https://static001.geekbang.org/account/avatar/00/10/5b/66/ad35bc68.jpg","comment_is_top":false,"comment_ctime":1630549251,"is_pvip":false,"replies":[{"id":"112416","content":"看看是不是你数据有并发的问题？如果确定不是，那就是bolt的bug了，不过可能性比较小","user_name":"作者回复","user_name_real":"鸟窝","uid":"1066613","ctime":1630589560,"ip_address":"","comment_id":310209,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1630549251","product_id":100061801,"comment_content":"用了一个内存库 github.com&#47;boltdb&#47;bolt，在用-race 运行的时候，里边一个函数的时候报错 panic类型的，fatal error: checkptr: converted pointer straddles multiple allocations 关键的两行报错  <br>D:&#47;GO&#47;src&#47;runtime&#47;checkptr.go:20 +0xc9 fp=0xc00029f9e8 sp=0xc00029f9b8 p<br>c=0x554b89<br>github.com&#47;boltdb&#47;bolt.(*freelist).write(0xc0004e5290, 0xc000508000, 0xc00050800<br>0, 0x0)<br>百度不出来所以然 老师这东西为啥报错啊 不带race运行好好的","like_count":0,"discussions":[{"author":{"id":1066613,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/75/d35c7623.jpg","nickname":"鸟窝","note":"","ucode":"E49D44F9613F17","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526160,"discussion_content":"看看是不是你数据有并发的问题？如果确定不是，那就是bolt的bug了，不过可能性比较小","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630589560,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":307812,"user_name":"thomas","can_delete":false,"product_type":"c1","uid":1016777,"ip_address":"","ucode":"9AB945308F1B50","user_header":"https://static001.geekbang.org/account/avatar/00/0f/83/c9/5d03981a.jpg","comment_is_top":false,"comment_ctime":1629267087,"is_pvip":true,"replies":[{"id":"112417","content":"不同的架构不同的go版本可能会不一样","user_name":"作者回复","user_name_real":"鸟窝","uid":"1066613","ctime":1630589725,"ip_address":"","comment_id":307812,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1629267087","product_id":100061801,"comment_content":"<br> &#47;&#47; count++操作的汇编代码<br>    MOVQ    &quot;&quot;.count(SB), AX<br>    LEAQ    1(AX), CX<br>    MOVQ    CX, &quot;&quot;.count(SB)<br>============================<br>count++的汇编码为什么和我go tool compile查看的不同呀？<br><br>MOVQ    &quot;&quot;.&amp;count+8(SP), AX<br>INCQ    (AX)","like_count":0,"discussions":[{"author":{"id":1066613,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/75/d35c7623.jpg","nickname":"鸟窝","note":"","ucode":"E49D44F9613F17","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525299,"discussion_content":"不同的架构不同的go版本可能会不一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630589725,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":302615,"user_name":"Stony.修行僧","can_delete":false,"product_type":"c1","uid":1061277,"ip_address":"","ucode":"0F2368F7D93E4A","user_header":"https://static001.geekbang.org/account/avatar/00/10/31/9d/daad92d2.jpg","comment_is_top":false,"comment_ctime":1626294128,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626294128","product_id":100061801,"comment_content":"有时觉得var 真的有点多余！受python 影响","like_count":0},{"had_liked":false,"id":302614,"user_name":"Stony.修行僧","can_delete":false,"product_type":"c1","uid":1061277,"ip_address":"","ucode":"0F2368F7D93E4A","user_header":"https://static001.geekbang.org/account/avatar/00/10/31/9d/daad92d2.jpg","comment_is_top":false,"comment_ctime":1626293318,"is_pvip":false,"replies":[{"id":"109604","content":"👍🏻👍🏻👍🏻👍🏻👍🏻","user_name":"作者回复","user_name_real":"鸟窝","uid":"1066613","ctime":1626437357,"ip_address":"","comment_id":302614,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1626293318","product_id":100061801,"comment_content":"二涮 走去，突然发现对go越发着迷","like_count":0,"discussions":[{"author":{"id":1066613,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/75/d35c7623.jpg","nickname":"鸟窝","note":"","ucode":"E49D44F9613F17","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":523364,"discussion_content":"👍🏻👍🏻👍🏻👍🏻👍🏻","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626437357,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":292976,"user_name":"破仑","can_delete":false,"product_type":"c1","uid":1032931,"ip_address":"","ucode":"3ED8194870FAED","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c2/e3/ce404215.jpg","comment_is_top":false,"comment_ctime":1621136481,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1621136481","product_id":100061801,"comment_content":"最后贴的关于 Docker 的 issue 不错。","like_count":0},{"had_liked":false,"id":281864,"user_name":"Only Once","can_delete":false,"product_type":"c1","uid":1333577,"ip_address":"","ucode":"5E98DDCB2FEAF7","user_header":"https://static001.geekbang.org/account/avatar/00/14/59/49/3299e908.jpg","comment_is_top":false,"comment_ctime":1614929338,"is_pvip":false,"replies":[{"id":"102326","content":"这只是为了讲解nytex代码风格的问题","user_name":"作者回复","user_name_real":"鸟窝","uid":"1066613","ctime":1614946911,"ip_address":"","comment_id":281864,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1614929338","product_id":100061801,"comment_content":"type Counter struct 当中的“CounterType int 和Name string”貌似并没有被引用啊，去掉也能运行；小白一个，请老师赐教","like_count":0,"discussions":[{"author":{"id":1066613,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/75/d35c7623.jpg","nickname":"鸟窝","note":"","ucode":"E49D44F9613F17","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516537,"discussion_content":"这只是为了讲解nytex代码风格的问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614946911,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":279449,"user_name":"14","can_delete":false,"product_type":"c1","uid":2057516,"ip_address":"","ucode":"67EB974A0842C3","user_header":"","comment_is_top":false,"comment_ctime":1613789637,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1613789637","product_id":100061801,"comment_content":"能不能推推荐几个优秀的开源项目工程，看着代码学习效果会更好。","like_count":0,"discussions":[{"author":{"id":1751496,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/b9/c8/4c0cc367.jpg","nickname":"言己","note":"","ucode":"FDD2A90EFA3B5A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578567,"discussion_content":"可以先看这个 https://github.com/panjf2000/ants ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656902759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":276309,"user_name":"博雅大公","can_delete":false,"product_type":"c1","uid":2231434,"ip_address":"","ucode":"B29962B01736E4","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep82iaEB1iaiaNrFr1SWXkmmlPMoOprgwhMDt9yILo7raCGDmuv3Gl7vgB5a1Euices12Loj8ko4U3nJQ/132","comment_is_top":false,"comment_ctime":1611883340,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1611883340","product_id":100061801,"comment_content":"啊！这个声音爱了","like_count":0,"discussions":[{"author":{"id":1751496,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/b9/c8/4c0cc367.jpg","nickname":"言己","note":"","ucode":"FDD2A90EFA3B5A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573092,"discussion_content":"https://github.com/panjf2000/ants","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653203237,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":273169,"user_name":"大毛","can_delete":false,"product_type":"c1","uid":1899599,"ip_address":"","ucode":"93B18287F06706","user_header":"https://static001.geekbang.org/account/avatar/00/1c/fc/4f/0a452c94.jpg","comment_is_top":false,"comment_ctime":1610462940,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1610462940","product_id":100061801,"comment_content":"1、并发源于是为了处理并发问题，对于并发来说，最重要的事情就是如何处理并发带来的副作用：资源争抢、并发顺序流程的调度、并发之间的消息传递。<br>2、运行代码是加上 -race 参数可以使用相关工具检测资源争抢的问题。<br>3、Mutex是最常见的解决并发问题的工具，即加锁","like_count":0},{"had_liked":false,"id":270751,"user_name":"李佳和","can_delete":false,"product_type":"c1","uid":2338857,"ip_address":"","ucode":"ADEF96C565BA12","user_header":"https://static001.geekbang.org/account/avatar/00/23/b0/29/0f21e388.jpg","comment_is_top":false,"comment_ctime":1609237007,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609237007","product_id":100061801,"comment_content":"go run -race xx.go  运行时检测是否有数据竞争问题","like_count":0},{"had_liked":false,"id":269135,"user_name":"DukeAnn","can_delete":false,"product_type":"c1","uid":1298323,"ip_address":"","ucode":"F018FF60F29844","user_header":"https://static001.geekbang.org/account/avatar/00/13/cf/93/d31d1938.jpg","comment_is_top":false,"comment_ctime":1608535802,"is_pvip":false,"replies":[{"id":"97621","content":"如果没有scope的考虑，是","user_name":"作者回复","user_name_real":"鸟窝","uid":"1066613","ctime":1608549136,"ip_address":"","comment_id":269135,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1608535802","product_id":100061801,"comment_content":"退出锁是不是用 defer 更好些","like_count":0,"discussions":[{"author":{"id":1066613,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/75/d35c7623.jpg","nickname":"鸟窝","note":"","ucode":"E49D44F9613F17","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512162,"discussion_content":"如果没有scope的考虑，是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608549136,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2621412,"avatar":"https://static001.geekbang.org/account/avatar/00/27/ff/e4/927547a9.jpg","nickname":"无名无姓","note":"","ucode":"487BD5AA2CD305","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":402186,"discussion_content":"scope指的是什么？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633827722,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":266575,"user_name":"杨博","can_delete":false,"product_type":"c1","uid":1862696,"ip_address":"","ucode":"B517B7FD3B6844","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/envP83iagHrA26valEtorcbw2tTIKAeepUmp1JbW4oaz69gaDgqXNjxwqVGJkbQ1YwkT88Uicnia9NYYuVVMg7n0Q/132","comment_is_top":false,"comment_ctime":1607397997,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607397997","product_id":100061801,"comment_content":"我觉得最后的问题会不会是像java中的aqs获取资源的协程组成fifo队列","like_count":0},{"had_liked":false,"id":265818,"user_name":"党","can_delete":false,"product_type":"c1","uid":1071974,"ip_address":"","ucode":"EE531DB3EA124D","user_header":"https://static001.geekbang.org/account/avatar/00/10/5b/66/ad35bc68.jpg","comment_is_top":false,"comment_ctime":1607043281,"is_pvip":false,"replies":[{"id":"96621","content":"No,并发读写这个map有race问题","user_name":"作者回复","user_name_real":"鸟窝","uid":"1066613","ctime":1607069310,"ip_address":"","comment_id":265818,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1607043281","product_id":100061801,"comment_content":"我想做一个数据仓库，用map结构，每个key值是唯一键，每个value是一个结构体，保存具体数据，结构体里加上锁保证数据并发安全，那这个整体的map结构可以不加锁吧，就算并发的增删查，对于同一个key对应的结构体都可以保证完全执行吧。","like_count":0,"discussions":[{"author":{"id":1066613,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/75/d35c7623.jpg","nickname":"鸟窝","note":"","ucode":"E49D44F9613F17","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511058,"discussion_content":"No,并发读写这个map有race问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607069310,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":261306,"user_name":"未定义丶","can_delete":false,"product_type":"c1","uid":2079901,"ip_address":"","ucode":"66426D32DE20E4","user_header":"https://static001.geekbang.org/account/avatar/00/1f/bc/9d/eaba20ca.jpg","comment_is_top":false,"comment_ctime":1605263954,"is_pvip":false,"replies":[{"id":"94852","content":"不会，除非没人提供正确的答案，实际上很多读者都给出来很好的答案。","user_name":"作者回复","user_name_real":"鸟窝","uid":"1066613","ctime":1605319266,"ip_address":"","comment_id":261306,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1605263954","product_id":100061801,"comment_content":"作者大大会解答最后的题目吗?","like_count":0,"discussions":[{"author":{"id":1066613,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/75/d35c7623.jpg","nickname":"鸟窝","note":"","ucode":"E49D44F9613F17","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509445,"discussion_content":"不会，除非没人提供正确的答案，实际上很多读者都给出来很好的答案。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605319266,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":255057,"user_name":"Bug Killer","can_delete":false,"product_type":"c1","uid":1186089,"ip_address":"","ucode":"2741A206F504E1","user_header":"https://static001.geekbang.org/account/avatar/00/12/19/29/4a8214b7.jpg","comment_is_top":false,"comment_ctime":1603260805,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1603260805","product_id":100061801,"comment_content":"Counter  中的 CounterType 和Name 属性为啥首字母要大写，是有啥特殊意义吗","like_count":0,"discussions":[{"author":{"id":2255111,"avatar":"","nickname":"Geek_b9ee84","note":"","ucode":"C49A0A7228B5C3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":315416,"discussion_content":"Go中首字母大写才是包外可见的","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1603272135,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1862696,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/envP83iagHrA26valEtorcbw2tTIKAeepUmp1JbW4oaz69gaDgqXNjxwqVGJkbQ1YwkT88Uicnia9NYYuVVMg7n0Q/132","nickname":"杨博","note":"","ucode":"B517B7FD3B6844","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2255111,"avatar":"","nickname":"Geek_b9ee84","note":"","ucode":"C49A0A7228B5C3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332936,"discussion_content":"bingo","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607398221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":315416,"ip_address":""},"score":332936,"extra":""}]}]},{"had_liked":false,"id":255028,"user_name":"悦悦","can_delete":false,"product_type":"c1","uid":1032388,"ip_address":"","ucode":"7D20EFCFC0546C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c0/c4/3f7b5eed.jpg","comment_is_top":false,"comment_ctime":1603253205,"is_pvip":false,"replies":[{"id":"92982","content":"相关的代码只有被触发，并且碰巧有data race才能被检测出来","user_name":"作者回复","user_name_real":"鸟窝","uid":"1066613","ctime":1603272764,"ip_address":"","comment_id":255028,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1603253205","product_id":100061801,"comment_content":"在运行的时候，只有在触发了 data race 之后，才能检测到，如果碰巧没有触发（比如一个 data race 问题只能在 2 月 14 号零点或者 11 月 11 号零点才出现），是检测不出来的。我运行时，开启data race     不太理解，2月14号是检查不出来！","like_count":0,"discussions":[{"author":{"id":1066613,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/75/d35c7623.jpg","nickname":"鸟窝","note":"","ucode":"E49D44F9613F17","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507590,"discussion_content":"相关的代码只有被触发，并且碰巧有data race才能被检测出来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603272764,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2051563,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/4d/eb/2ee44294.jpg","nickname":"DarkPrince","note":"","ucode":"B1138082EDA3E4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318922,"discussion_content":"我使用本地代码测试，好像只要run起来的带有race条件的代码都能检测到，老师能否给检测不到一个例子呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603882827,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":254765,"user_name":"houseme","can_delete":false,"product_type":"c1","uid":1018209,"ip_address":"","ucode":"888294955B1731","user_header":"https://static001.geekbang.org/account/avatar/00/0f/89/61/e989ee5c.jpg","comment_is_top":false,"comment_ctime":1603183342,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603183342","product_id":100061801,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":254326,"user_name":"Panda","can_delete":false,"product_type":"c1","uid":1095740,"ip_address":"","ucode":"911A200C7B18BE","user_header":"https://static001.geekbang.org/account/avatar/00/10/b8/3c/1a294619.jpg","comment_is_top":false,"comment_ctime":1603100853,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603100853","product_id":100061801,"comment_content":"同时更新用户的账户信息 这种场景 实际生产环境用分布式锁是不是更合适 例如 Redis 分布式锁 ZK 分布式锁","like_count":0},{"had_liked":false,"id":254038,"user_name":"oCupJS","can_delete":false,"product_type":"c1","uid":2244547,"ip_address":"","ucode":"D37DAD8B0FEB50","user_header":"https://static001.geekbang.org/account/avatar/00/22/3f/c3/7431e82e.jpg","comment_is_top":false,"comment_ctime":1603025639,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603025639","product_id":100061801,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":253695,"user_name":"新味道","can_delete":false,"product_type":"c1","uid":2227527,"ip_address":"","ucode":"979E3574082CE7","user_header":"https://static001.geekbang.org/account/avatar/00/21/fd/47/499339d1.jpg","comment_is_top":false,"comment_ctime":1602834356,"is_pvip":false,"replies":[{"id":"92655","content":"后面专门有一讲讲信号量。","user_name":"作者回复","user_name_real":"鸟窝","uid":"1066613","ctime":1602840284,"ip_address":"","comment_id":253695,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1602834356","product_id":100061801,"comment_content":"没提到后面文章要用到的信号量？  能否简要的说下go里的信号量作用。 ","like_count":0,"discussions":[{"author":{"id":1066613,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/75/d35c7623.jpg","nickname":"鸟窝","note":"","ucode":"E49D44F9613F17","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507148,"discussion_content":"后面专门有一讲讲信号量。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602840284,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":253357,"user_name":"大力水手","can_delete":false,"product_type":"c1","uid":1367822,"ip_address":"","ucode":"D44F1ABFE4C5C8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erkCRjibSLNBsK2umhGU2dFy4KUKbZjf7WdibiaL2a0icqvLwC4QskLCCehSnQYLuJsrvT5uVjYSETtMQ/132","comment_is_top":false,"comment_ctime":1602709631,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602709631","product_id":100061801,"comment_content":"打卡2","like_count":0},{"had_liked":false,"id":253226,"user_name":"飞沉血","can_delete":false,"product_type":"c1","uid":2025780,"ip_address":"","ucode":"C3122210A5D79D","user_header":"https://static001.geekbang.org/account/avatar/00/1e/e9/34/2eb0c21a.jpg","comment_is_top":false,"comment_ctime":1602656777,"is_pvip":false,"replies":[{"id":"92530","content":"加油，希望每一讲都看到你的打卡","user_name":"作者回复","user_name_real":"鸟窝","uid":"1066613","ctime":1602667392,"ip_address":"","comment_id":253226,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1602656777","product_id":100061801,"comment_content":"打卡，希望自己坚持学完22讲，加油！！！","like_count":0,"discussions":[{"author":{"id":1066613,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/75/d35c7623.jpg","nickname":"鸟窝","note":"","ucode":"E49D44F9613F17","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507010,"discussion_content":"加油，希望每一讲都看到你的打卡","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602667392,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":253127,"user_name":"橙子888","can_delete":false,"product_type":"c1","uid":1447790,"ip_address":"","ucode":"8FB8A9AAE526E3","user_header":"https://static001.geekbang.org/account/avatar/00/16/17/6e/76b4aa3d.jpg","comment_is_top":false,"comment_ctime":1602605529,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602605529","product_id":100061801,"comment_content":"思考题第一感觉应该是要保证每个goroutine都公平地得到执行，不能让个别goroutine等太久，看到大佬们的留言后，仔细琢磨了这个具体过程发现果真如此。文章中一会儿“并发原语”，一会儿“同步原语”看着有点晕。线上环境为了保证效率不加-race的话，也就只能等到发现数据异常了通过review相关代码来解决了……","like_count":0},{"had_liked":false,"id":253124,"user_name":"岁月长","can_delete":false,"product_type":"c1","uid":1297213,"ip_address":"","ucode":"CDD7BEC084AC51","user_header":"https://static001.geekbang.org/account/avatar/00/13/cb/3d/b290414d.jpg","comment_is_top":false,"comment_ctime":1602605156,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1602605156","product_id":100061801,"comment_content":"内容不错，讲解也很详细，希望能多讲一些effective go没有的内容","like_count":0},{"had_liked":false,"id":253061,"user_name":"A😇芳","can_delete":false,"product_type":"c1","uid":1931579,"ip_address":"","ucode":"668DBC579E08A5","user_header":"https://static001.geekbang.org/account/avatar/00/1d/79/3b/93e6fc6d.jpg","comment_is_top":false,"comment_ctime":1602581606,"is_pvip":false,"replies":[{"id":"92454","content":"编辑加油，多放些。后面会越来越精彩","user_name":"作者回复","user_name_real":"鸟窝","uid":"1066613","ctime":1602590722,"ip_address":"","comment_id":253061,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1602581606","product_id":100061801,"comment_content":"更新快点，课程非常实用","like_count":0,"discussions":[{"author":{"id":1066613,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/75/d35c7623.jpg","nickname":"鸟窝","note":"","ucode":"E49D44F9613F17","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506959,"discussion_content":"编辑加油，多放些。后面会越来越精彩","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602590722,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1807836,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/95/dc/07195a63.jpg","nickname":"锋","note":"","ucode":"F26BC1F14AB0D7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312304,"discussion_content":"群友 哈哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602658875,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":253038,"user_name":"Ethan Liu","can_delete":false,"product_type":"c1","uid":1070043,"ip_address":"","ucode":"231F944F7CD56A","user_header":"https://static001.geekbang.org/account/avatar/00/10/53/db/858337e3.jpg","comment_is_top":false,"comment_ctime":1602574357,"is_pvip":true,"replies":[{"id":"92446","content":"课程中有讲到，race detector依赖运行时的检测，不是编译期探测的","user_name":"作者回复","user_name_real":"鸟窝","uid":"1066613","ctime":1602580600,"ip_address":"","comment_id":253038,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1602574357","product_id":100061801,"comment_content":"可以在编译期探测data race吗","like_count":0,"discussions":[{"author":{"id":1066613,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/75/d35c7623.jpg","nickname":"鸟窝","note":"","ucode":"E49D44F9613F17","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506952,"discussion_content":"课程中有讲到，race detector依赖运行时的检测，不是编译期探测的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602580600,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312145,"discussion_content":"只是在编译期间加了一些指令","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602595265,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":253036,"user_name":"HACK_QC","can_delete":false,"product_type":"c1","uid":1033363,"ip_address":"","ucode":"623FA185569F9A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/93/9dd4b277.jpg","comment_is_top":false,"comment_ctime":1602573843,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602573843","product_id":100061801,"comment_content":"我觉得主要是两点：1.是否有自旋的goroutine（自旋情况下是可以告诉mutex不用私放锁的，直接加锁了，可能会导致某些goroutine继续阻塞等到，出现饥饿状态的情况） 2.当前mutex等待队列的状态的是否为饥饿状态下，如果是那必然是等待时间相对时间久的那一个。","like_count":0},{"had_liked":false,"id":252943,"user_name":"RRR","can_delete":false,"product_type":"c1","uid":1014991,"ip_address":"","ucode":"F32A579D201EC5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/cf/d5382404.jpg","comment_is_top":false,"comment_ctime":1602525994,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602525994","product_id":100061801,"comment_content":"Java 转到 Go，希望后面能看到更多关于锁的知识，如果可以，还希望对比一下 Java 多线程模式和 Go 并发的思想区别。","like_count":0}]}