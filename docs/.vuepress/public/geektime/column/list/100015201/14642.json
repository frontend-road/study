{"id":14642,"title":"05 | 白话容器基础（一）：从进程说开去","content":"<p>你好，我是张磊。今天我和你分享的主题是：白话容器基础之从进程说开去。</p><p>在前面的4篇预习文章中，我梳理了“容器”这项技术的来龙去脉，通过这些内容，我希望你能理解如下几个事实：</p><ul>\n<li>容器技术的兴起源于PaaS技术的普及；</li>\n<li>Docker公司发布的Docker项目具有里程碑式的意义；</li>\n<li>Docker项目通过“容器镜像”，解决了应用打包这个根本性难题。</li>\n</ul><p>紧接着，我详细介绍了容器技术圈在过去五年里的“风云变幻”，而通过这部分内容，我希望你能理解这样一个道理：</p><blockquote>\n<p>容器本身没有价值，有价值的是“容器编排”。</p>\n</blockquote><p>也正因为如此，容器技术生态才爆发了一场关于“容器编排”的“战争”。而这次战争，最终以Kubernetes项目和CNCF社区的胜利而告终。所以，这个专栏后面的内容，我会以Docker和Kubernetes项目为核心，为你详细介绍容器技术的各项实践与其中的原理。</p><p>不过在此之前，你还需要搞清楚一个更为基础的问题：</p><blockquote>\n<p>容器，到底是怎么一回事儿？</p>\n</blockquote><p>在第一篇预习文章<a href=\"https://time.geekbang.org/column/article/14254\">《小鲸鱼大事记（一）：初出茅庐》</a>中，我已经提到过，容器其实是一种沙盒技术。顾名思义，沙盒就是能够像一个集装箱一样，把你的应用“装”起来的技术。这样，应用与应用之间，就因为有了边界而不至于相互干扰；而被装进集装箱的应用，也可以被方便地搬来搬去，这不就是PaaS最理想的状态嘛。</p><!-- [[[read_end]]] --><p>不过，这两个能力说起来简单，但要用技术手段去实现它们，可能大多数人就无从下手了。</p><p><strong>所以，我就先来跟你说说这个“边界”的实现手段。</strong></p><p>假如，现在你要写一个计算加法的小程序，这个程序需要的输入来自于一个文件，计算完成后的结果则输出到另一个文件中。</p><p>由于计算机只认识0和1，所以无论用哪种语言编写这段代码，最后都需要通过某种方式翻译成二进制文件，才能在计算机操作系统中运行起来。</p><p>而为了能够让这些代码正常运行，我们往往还要给它提供数据，比如我们这个加法程序所需要的输入文件。这些数据加上代码本身的二进制文件，放在磁盘上，就是我们平常所说的一个“程序”，也叫代码的可执行镜像（executable image）。</p><p>然后，我们就可以在计算机上运行这个“程序”了。</p><p>首先，操作系统从“程序”中发现输入数据保存在一个文件中，所以这些数据就会被加载到内存中待命。同时，操作系统又读取到了计算加法的指令，这时，它就需要指示CPU完成加法操作。而CPU与内存协作进行加法计算，又会使用寄存器存放数值、内存堆栈保存执行的命令和变量。同时，计算机里还有被打开的文件，以及各种各样的I/O设备在不断地调用中修改自己的状态。</p><p>就这样，一旦“程序”被执行起来，它就从磁盘上的二进制文件，变成了计算机内存中的数据、寄存器里的值、堆栈中的指令、被打开的文件，以及各种设备的状态信息的一个集合。<strong>像这样一个程序运行起来后的计算机执行环境的总和，就是我们今天的主角：进程。</strong></p><p>所以，对于进程来说，它的静态表现就是程序，平常都安安静静地待在磁盘上；而一旦运行起来，它就变成了计算机里的数据和状态的总和，这就是它的动态表现。</p><p>而<strong>容器技术的核心功能，就是通过约束和修改进程的动态表现，从而为其创造出一个“边界”。</strong></p><p>对于Docker等大多数Linux容器来说，<strong>Cgroups技术</strong>是用来制造约束的主要手段，而<strong>Namespace技术</strong>则是用来修改进程视图的主要方法。</p><p>你可能会觉得Cgroups和Namespace这两个概念很抽象，别担心，接下来我们一起动手实践一下，你就很容易理解这两项技术了。</p><p>假设你已经有了一个Linux操作系统上的Docker项目在运行，比如我的环境是Ubuntu 16.04和Docker CE 18.05。</p><p>接下来，让我们首先创建一个容器来试试。</p><pre><code>$ docker run -it busybox /bin/sh\n/ #\n</code></pre><p>这个命令是Docker项目最重要的一个操作，即大名鼎鼎的docker run。</p><p>而-it参数告诉了Docker项目在启动容器后，需要给我们分配一个文本输入/输出环境，也就是TTY，跟容器的标准输入相关联，这样我们就可以和这个Docker容器进行交互了。而/bin/sh就是我们要在Docker容器里运行的程序。</p><p>所以，上面这条指令翻译成人类的语言就是：请帮我启动一个容器，在容器里执行/bin/sh，并且给我分配一个命令行终端跟这个容器交互。</p><p>这样，我的Ubuntu 16.04机器就变成了一个宿主机，而一个运行着/bin/sh的容器，就跑在了这个宿主机里面。</p><p>上面的例子和原理，如果你已经玩过Docker，一定不会感到陌生。此时，如果我们在容器里执行一下ps指令，就会发现一些更有趣的事情：</p><pre><code>/ # ps\nPID  USER   TIME COMMAND\n  1 root   0:00 /bin/sh\n  10 root   0:00 ps\n</code></pre><p>可以看到，我们在Docker里最开始执行的/bin/sh，就是这个容器内部的第1号进程（PID=1），而这个容器里一共只有两个进程在运行。这就意味着，前面执行的/bin/sh，以及我们刚刚执行的ps，已经被Docker隔离在了一个跟宿主机完全不同的世界当中。</p><p>这究竟是怎么做到的呢？</p><p>本来，每当我们在宿主机上运行了一个/bin/sh程序，操作系统都会给它分配一个进程编号，比如PID=100。这个编号是进程的唯一标识，就像员工的工牌一样。所以PID=100，可以粗略地理解为这个/bin/sh是我们公司里的第100号员工，而第1号员工就自然是比尔 · 盖茨这样统领全局的人物。</p><p>而现在，我们要通过Docker把这个/bin/sh程序运行在一个容器当中。这时候，Docker就会在这个第100号员工入职时给他施一个“障眼法”，让他永远看不到前面的其他99个员工，更看不到比尔 · 盖茨。这样，他就会错误地以为自己就是公司里的第1号员工。</p><p>这种机制，其实就是对被隔离应用的进程空间做了手脚，使得这些进程只能看到重新计算过的进程编号，比如PID=1。可实际上，他们在宿主机的操作系统里，还是原来的第100号进程。</p><p><strong>这种技术，就是Linux里面的Namespace机制</strong>。而Namespace的使用方式也非常有意思：它其实只是Linux创建新进程的一个可选参数。我们知道，在Linux系统中创建进程的系统调用是clone()，比如：</p><pre><code>int pid = clone(main_function, stack_size, SIGCHLD, NULL); \n</code></pre><p>这个系统调用就会为我们创建一个新的进程，并且返回它的进程号pid。</p><p>而当我们用clone()系统调用创建一个新进程时，就可以在参数中指定CLONE_NEWPID参数，比如：</p><pre><code>int pid = clone(main_function, stack_size, CLONE_NEWPID | SIGCHLD, NULL); \n</code></pre><p>这时，新创建的这个进程将会“看到”一个全新的进程空间，在这个进程空间里，它的PID是1。之所以说“看到”，是因为这只是一个“障眼法”，在宿主机真实的进程空间里，这个进程的PID还是真实的数值，比如100。</p><p>当然，我们还可以多次执行上面的clone()调用，这样就会创建多个PID Namespace，而每个Namespace里的应用进程，都会认为自己是当前容器里的第1号进程，它们既看不到宿主机里真正的进程空间，也看不到其他PID Namespace里的具体情况。</p><p>而<strong>除了我们刚刚用到的PID Namespace，Linux操作系统还提供了Mount、UTS、IPC、Network和User这些Namespace，用来对各种不同的进程上下文进行“障眼法”操作。</strong></p><p>比如，Mount Namespace，用于让被隔离进程只看到当前Namespace里的挂载点信息；Network Namespace，用于让被隔离进程看到当前Namespace里的网络设备和配置。</p><p><strong>这，就是Linux容器最基本的实现原理了。</strong></p><p>所以，Docker容器这个听起来玄而又玄的概念，实际上是在创建容器进程时，指定了这个进程所需要启用的一组Namespace参数。这样，容器就只能“看”到当前Namespace所限定的资源、文件、设备、状态，或者配置。而对于宿主机以及其他不相关的程序，它就完全看不到了。</p><p><strong>所以说，容器，其实是一种特殊的进程而已。</strong></p><h2>总结</h2><p>谈到为“进程划分一个独立空间”的思想，相信你一定会联想到虚拟机。而且，你应该还看过一张虚拟机和容器的对比图。</p><p><img src=\"https://static001.geekbang.org/resource/image/d1/96/d1bb34cda8744514ba4c233435bf4e96.jpg?wh=2242*1163\" alt=\"\"></p><p>这幅图的左边，画出了虚拟机的工作原理。其中，名为Hypervisor的软件是虚拟机最主要的部分。它通过硬件虚拟化功能，模拟出了运行一个操作系统需要的各种硬件，比如CPU、内存、I/O设备等等。然后，它在这些虚拟的硬件上安装了一个新的操作系统，即Guest OS。</p><p>这样，用户的应用进程就可以运行在这个虚拟的机器中，它能看到的自然也只有Guest OS的文件和目录，以及这个机器里的虚拟设备。这就是为什么虚拟机也能起到将不同的应用进程相互隔离的作用。</p><p>而这幅图的右边，则用一个名为Docker Engine的软件替换了Hypervisor。这也是为什么，很多人会把Docker项目称为“轻量级”虚拟化技术的原因，实际上就是把虚拟机的概念套在了容器上。</p><p><strong>可是这样的说法，却并不严谨。</strong></p><p>在理解了Namespace的工作方式之后，你就会明白，跟真实存在的虚拟机不同，在使用Docker的时候，并没有一个真正的“Docker容器”运行在宿主机里面。Docker项目帮助用户启动的，还是原来的应用进程，只不过在创建这些进程时，Docker为它们加上了各种各样的Namespace参数。</p><p>这时，这些进程就会觉得自己是各自PID Namespace里的第1号进程，只能看到各自Mount Namespace里挂载的目录和文件，只能访问到各自Network Namespace里的网络设备，就仿佛运行在一个个“容器”里面，与世隔绝。</p><p>不过，相信你此刻已经会心一笑：这些不过都是“障眼法”罢了。</p><h2>思考题</h2><ol>\n<li>\n<p>鉴于我对容器本质的讲解，你觉得上面这张容器和虚拟机对比图右侧关于容器的部分，怎么画才更精确？</p>\n</li>\n<li>\n<p>你是否知道最新的Docker项目默认会为容器启用哪些Namespace吗？</p>\n</li>\n</ol><p>感谢你的收听，欢迎你给我留言，也欢迎分享给更多的朋友一起阅读。</p>","comments":[{"had_liked":false,"id":22672,"user_name":"Hurt","can_delete":false,"product_type":"c1","uid":1050946,"ip_address":"","ucode":"DCE7428CCF08EF","user_header":"https://static001.geekbang.org/account/avatar/00/10/09/42/1f762b72.jpg","comment_is_top":true,"comment_ctime":1535933074,"is_pvip":false,"replies":[{"id":"8171","content":"看得非常认真！严格说，clone()是线程操作，但linux 的线程是用进程实现的","user_name":"作者回复","comment_id":22672,"uid":"1218095","ip_address":"","utype":1,"ctime":1535939873,"user_name_real":"Geek_6ef93d"}],"discussion_count":15,"race_medal":0,"score":"9.223372811484799e+18","product_id":100015201,"comment_content":"为什么clone()时 还有线程呢 是写错了吗 还是有线程的启动啊","like_count":181,"discussions":[{"author":{"id":1010922,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/6c/ea/ce9854a5.jpg","nickname":"坤","note":"","ucode":"74E6838226A405","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42644,"discussion_content":"线程是最小的执行单元，进程至少需要一个线程作为执行体。进程是最小的资源分配的单元。","likes_number":30,"is_delete":false,"is_hidden":false,"ctime":1572740452,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2511174,"avatar":"https://static001.geekbang.org/account/avatar/00/26/51/46/729c9002.jpg","nickname":"Young","note":"","ucode":"26CB06BDA2DAF0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":357958,"discussion_content":"是不是可以这样理解，线程是最小的执行单元，如果两个线程共享一组资源则表示他们是同一进程下的线程，这时切换线程的开销是比较小的，而当两个线程不共享任何资源，则表示它们分属不同进程，切换时开销比同进程下的线程要慢很多。","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1615900783,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423218,"discussion_content":"看得非常认真！严格说，clone()是线程操作，但linux 的线程是用进程实现的","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1535939873,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1188023,"avatar":"https://static001.geekbang.org/account/avatar/00/12/20/b7/bdb3bcf0.jpg","nickname":"Eternal","note":"","ucode":"EA6FE7CC98F740","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303172,"discussion_content":"线程是轻量级的进程","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1599178337,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1236394,"avatar":"https://static001.geekbang.org/account/avatar/00/12/dd/aa/859544fd.jpg","nickname":"@@fighting","note":"","ucode":"7235C1E74549AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302828,"discussion_content":"从操作系统内核态的角度来看是没有线程的","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1599040486,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1281715,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epLbHgQhI0pFNI9iblcKdXqI8F5Fc4fTW0OR78oPdT8rsdq6kIicLhjAUO8atSTIpYk66X1dv08RFcw/132","nickname":"大肉丸","note":"","ucode":"17C5B5FF4CF2B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1236394,"avatar":"https://static001.geekbang.org/account/avatar/00/12/dd/aa/859544fd.jpg","nickname":"@@fighting","note":"","ucode":"7235C1E74549AE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328389,"discussion_content":"那内核级线程如何理解呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606131554,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":302828,"ip_address":""},"score":328389,"extra":""},{"author":{"id":1336951,"avatar":"https://static001.geekbang.org/account/avatar/00/14/66/77/194ba21d.jpg","nickname":"lzh","note":"","ucode":"C3D83DF4230109","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1281715,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epLbHgQhI0pFNI9iblcKdXqI8F5Fc4fTW0OR78oPdT8rsdq6kIicLhjAUO8atSTIpYk66X1dv08RFcw/132","nickname":"大肉丸","note":"","ucode":"17C5B5FF4CF2B4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384385,"discussion_content":"都是task","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1626536203,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":328389,"ip_address":""},"score":384385,"extra":""}]},{"author":{"id":1007359,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/ff/295bcf2c.jpg","nickname":"vimfun","note":"","ucode":"EAB2281FC0552A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4862,"discussion_content":"linux 的线程 是用进程实现的？？！\n\n怎么感觉开倒车了？\n\n不是线程更清凉（轻量）吗？\n\n如果进程实现线程，咋轻量啊？😱","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1565779382,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":7,"child_discussions":[{"author":{"id":1291124,"avatar":"https://static001.geekbang.org/account/avatar/00/13/b3/74/d073de78.jpg","nickname":"严凯","note":"","ucode":"FF031FD966DE29","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1007359,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/ff/295bcf2c.jpg","nickname":"vimfun","note":"","ucode":"EAB2281FC0552A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":56533,"discussion_content":"在Linux内核2.6以前的确没有线程","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1574495499,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4862,"ip_address":""},"score":56533,"extra":""},{"author":{"id":1179565,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ff/ad/5020a8c5.jpg","nickname":"Farewell丶","note":"","ucode":"A0D69893C5375C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1007359,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/ff/295bcf2c.jpg","nickname":"vimfun","note":"","ucode":"EAB2281FC0552A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":73853,"discussion_content":"线程一直就没说自己轻量呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575601991,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4862,"ip_address":""},"score":73853,"extra":""},{"author":{"id":1946505,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/b3/89/549e1e34.jpg","nickname":"β","note":"","ucode":"5D39E10F83E67C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1007359,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/ff/295bcf2c.jpg","nickname":"vimfun","note":"","ucode":"EAB2281FC0552A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":245487,"discussion_content":"记得Linux中线程是轻量级进程LWP","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1587663877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4862,"ip_address":""},"score":245487,"extra":""}]}]},{"had_liked":false,"id":22713,"user_name":"atompi","can_delete":false,"product_type":"c1","uid":1212311,"ip_address":"","ucode":"D13F2DA4E41BA1","user_header":"https://static001.geekbang.org/account/avatar/00/12/7f/97/5acd3276.jpg","comment_is_top":true,"comment_ctime":1535937880,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"9.2233722273693e+18","product_id":100015201,"comment_content":"下一讲：隔离与限制，会介绍Cgroups的","like_count":44},{"had_liked":false,"id":22808,"user_name":"包子","can_delete":false,"product_type":"c1","uid":1089345,"ip_address":"","ucode":"6CC4EBB8CD3924","user_header":"https://static001.geekbang.org/account/avatar/00/10/9f/41/82306dfe.jpg","comment_is_top":false,"comment_ctime":1535980993,"is_pvip":false,"replies":[{"id":"8241","content":"是在运行的。但它们不受docker的控制，就像野孩子。所以单进程意思不是只能运行一个进程，而是只有一个进程是可控的。","user_name":"作者回复","comment_id":22808,"uid":"1218095","ip_address":"","utype":1,"ctime":1536027561,"user_name_real":"Geek_6ef93d"}],"discussion_count":13,"race_medal":0,"score":"1032328132033","product_id":100015201,"comment_content":"老师有个问题一直困扰，容器是一个单进程，那比如我有一个镜像里面集成了jdk, netstat, ping等，虽然这个容器启动时里面是一个java进程，但是我可以进到容器里面执行各种命令，比如netstat等，那这些命令在容器的运行过程中是在运行的吗？","like_count":241,"discussions":[{"author":{"id":1009850,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/68/ba/c0cf8bf3.jpg","nickname":"天天向上卡索","note":"","ucode":"E3724C3B39BD3F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351661,"discussion_content":"可以理解成docker容器是一个进程组，不一定只有一个进程","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1614385412,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1634795,"avatar":"https://static001.geekbang.org/account/avatar/00/18/f1/eb/386dab5c.jpg","nickname":"国家二级睡觉运动员","note":"","ucode":"6D28DBFDECF902","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547731,"discussion_content":"我理解是这样的, 镜像里面有安装 jdk, netstat, ping 等环境和命令, 然后最终会 RUN 启动 java 程序的命令, 所以, 容器启动的时候, 通过镜像启动了 java 程序, 假设 java 程序的 PID=1, 此时 netstat 和 ping 仅仅是被安装状态, 容器中仅有 PID=1 的进程, 只有用户进入到容器中, 使用 netstat 或者 ping 命令才会起新的进程, PID=2(netstat), PID=3(ping), 结论是, 这些命令是在你的控制之下运行的, java 程序是 DOCKER 控制运行的;","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1642843246,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423275,"discussion_content":"是在运行的。但它们不受docker的控制，就像野孩子。所以单进程意思不是只能运行一个进程，而是只有一个进程是可控的。","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1536027561,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1573307,"avatar":"https://static001.geekbang.org/account/avatar/00/18/01/bb/7d15d44a.jpg","nickname":"欧雄虎(Badguy）","note":"","ucode":"D72B1CC455AA56","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":552629,"discussion_content":"老师请教一下 ，那cgroup在限制的时候，是怎么样做到限制这些&#34;野孩子&#34;的呢？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1645530341,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":423275,"ip_address":""},"score":552629,"extra":""}]},{"author":{"id":1335273,"avatar":"https://static001.geekbang.org/account/avatar/00/14/5f/e9/510fa022.jpg","nickname":"吕小荣","note":"","ucode":"9CB18695616330","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":401219,"discussion_content":"> 是在运行的。但它们不受docker的控制，就像野孩子。所以单进程意思不是只能运行一个进程，而是只有一个进程是可控的。\n\n“可控” 是什么意思？","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1633606255,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1978914,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKDfO7wKibzpwicJPa4pIxBZbN7AkLlicYa4UFTWG7sVklmkCNBDT3C0S3XpxJVOI54wRF0tGVZariamQ/132","nickname":"Geek_8e5306","note":"","ucode":"553A0B82B38147","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412543,"discussion_content":"这就和在shell执行命令，fork出新进程执行命令吧。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1636205791,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1045107,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f2/73/1c7bceae.jpg","nickname":"乔纳森","note":"","ucode":"51EC9FAE071388","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378717,"discussion_content":"这些野孩子使用的cpu 和 内存，都在同一个cgroup 控制吗？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1623372570,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1042385,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/e7/d1/abb7bfe3.jpg","nickname":"木木夕","note":"","ucode":"75BDB2ED7B9A4E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575438,"discussion_content":"可控是什么意思？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654831346,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1196339,"avatar":"https://static001.geekbang.org/account/avatar/00/12/41/33/d1064f9a.jpg","nickname":"Sun","note":"","ucode":"1BC2741DC07FC5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":569599,"discussion_content":"三年后复习这门课的时候，居然发现了一个老友，哈哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651493771,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2846414,"avatar":"","nickname":"Geek_06eda3","note":"","ucode":"C4C3291B297286","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414487,"discussion_content":"老师，这个“可控”是指什么呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636787844,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2087462,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/da/26/dc9b0fd8.jpg","nickname":"Geek_283aa4","note":"","ucode":"E0648E97B0E634","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383023,"discussion_content":"这个解释我瞬间茅塞顿开","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625828447,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005290,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/56/ea/32608c44.jpg","nickname":"giteebravo","note":"","ucode":"C087E8D6B5A98B","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327393,"discussion_content":"\n只有我在 Duckerfile 中指定启动的进程可控吗？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605828622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1313840,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0c/30/bb4bfe9d.jpg","nickname":"lyonger","note":"","ucode":"E89A75DADEA2A1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1005290,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/56/ea/32608c44.jpg","nickname":"giteebravo","note":"","ucode":"C087E8D6B5A98B","race_medal":1,"user_type":1,"is_pvip":false},"discussion":{"id":375959,"discussion_content":"只有1号进程可控。","likes_number":15,"is_delete":false,"is_hidden":false,"ctime":1621906485,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":327393,"ip_address":""},"score":375959,"extra":""}]}]},{"had_liked":false,"id":22717,"user_name":"blackpiglet","can_delete":false,"product_type":"c1","uid":1032928,"ip_address":"","ucode":"58AA8329C91767","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c2/e0/7188aa0a.jpg","comment_is_top":false,"comment_ctime":1535938253,"is_pvip":false,"replies":[{"id":"8168","content":"没错，已经进门了哈","user_name":"作者回复","comment_id":22717,"uid":"1218095","ip_address":"","utype":1,"ctime":1535939571,"user_name_real":"Geek_6ef93d"}],"discussion_count":9,"race_medal":0,"score":"680140771021","product_id":100015201,"comment_content":"1 用 namespace 框住app。<br>2 PID, UTS, network, user, mount, IPC, cgroup<br><br>虽然本质上理解，namespace 和 cgroup 是内核特性，容器本质上就是一个加了限定参数的进程，效果上看，图画的也没毛病。<br>这么看，是不是说容器的安全性，也就是隔离性，就是没办法达到虚拟机的级别呢？","like_count":159,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423233,"discussion_content":"没错，已经进门了哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535939571,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1188023,"avatar":"https://static001.geekbang.org/account/avatar/00/12/20/b7/bdb3bcf0.jpg","nickname":"Eternal","note":"","ucode":"EA6FE7CC98F740","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303174,"discussion_content":"也就是两个容器共享一个宿主机器，一个容器可能把宿主的资源打满，影响另外一个，我这样理解对不","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1599178564,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1946257,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/b2/91/cf0de36e.jpg","nickname":"saltedfish","note":"","ucode":"936571E1AC4139","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1188023,"avatar":"https://static001.geekbang.org/account/avatar/00/12/20/b7/bdb3bcf0.jpg","nickname":"Eternal","note":"","ucode":"EA6FE7CC98F740","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542821,"discussion_content":"我理解是这样，所以服务混部会有风险。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640854033,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":303174,"ip_address":""},"score":542821,"extra":""},{"author":{"id":1126780,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZASwgBFRFPZbFSraf70jut9brx5ATqMXyDTkGP4icsia9fFL1pJW55nq93CyUmbaibdQ6K7uReiaZHQ/132","nickname":"matrix430","note":"","ucode":"E7B9868C4BED36","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1188023,"avatar":"https://static001.geekbang.org/account/avatar/00/12/20/b7/bdb3bcf0.jpg","nickname":"Eternal","note":"","ucode":"EA6FE7CC98F740","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550674,"discussion_content":"Cgroup能够限制容器的资源配额","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644665506,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":303174,"ip_address":""},"score":550674,"extra":""}]},{"author":{"id":1687709,"avatar":"","nickname":"kongchujun","note":"","ucode":"F9925FD3A9BE04","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":24236,"discussion_content":"我觉得这是用容器的轻量级特性换取安全性和隔离性","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1570065923,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1005290,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/56/ea/32608c44.jpg","nickname":"giteebravo","note":"","ucode":"C087E8D6B5A98B","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":1687709,"avatar":"","nickname":"kongchujun","note":"","ucode":"F9925FD3A9BE04","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327394,"discussion_content":"\n应该是利用了轻盈的姿势就获得了隔离性，但安全性略有不足吧。\n","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1605828767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":24236,"ip_address":""},"score":327394,"extra":""}]},{"author":{"id":1566695,"avatar":"https://static001.geekbang.org/account/avatar/00/17/e7/e7/28fe8070.jpg","nickname":"Enhao","note":"","ucode":"3652553F0329ED","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336569,"discussion_content":"呜呜呜，菜鸟重新认识了一遍docker，老师和评论区的小伙伴们都好棒！！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608626783,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1263050,"avatar":"https://static001.geekbang.org/account/avatar/00/13/45/ca/38d35ce8.jpg","nickname":"6km","note":"","ucode":"6262BBEC4D9F81","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330659,"discussion_content":"可以了解一下kata-container,可以代替runc的更安全的容器运行时","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606662909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2299989,"avatar":"https://static001.geekbang.org/account/avatar/00/23/18/55/4389c846.jpg","nickname":"滕达","note":"","ucode":"A0CBAA7F06B32E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326324,"discussion_content":"记录一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605578526,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23379,"user_name":"manatee","can_delete":false,"product_type":"c1","uid":1041112,"ip_address":"","ucode":"708D90E7A265BD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e2/d8/f0562ede.jpg","comment_is_top":false,"comment_ctime":1536318671,"is_pvip":false,"discussion_count":11,"race_medal":0,"score":"409558211791","product_id":100015201,"comment_content":"想请问下老师，如果说容器只是跑在系统上的一个进程，那容器和宿主机不同os<br>又是怎么实现的呢，请帮忙解惑，谢谢。","like_count":95,"discussions":[{"author":{"id":1212311,"avatar":"https://static001.geekbang.org/account/avatar/00/12/7f/97/5acd3276.jpg","nickname":"atompi","note":"","ucode":"D13F2DA4E41BA1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":20629,"discussion_content":"通常我们所说的容器指的是Linux容器，也就是基于Linux内核的容器实现，那么这里所说的容器和宿主机不同os其实是发行版不同罢了，内核都是相同的，可以在容器内和宿主机内都执行 uname -r 就可以看到容器和宿主机输出了相同的内核版本。知道了Linux kernel和发行版的区别就很好理解了，这是Linux世界的基础知识哦。","likes_number":37,"is_delete":false,"is_hidden":false,"ctime":1569336734,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":2032840,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/04/c8/3c7af100.jpg","nickname":"Javatar","note":"","ucode":"E216645CDF632C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1212311,"avatar":"https://static001.geekbang.org/account/avatar/00/12/7f/97/5acd3276.jpg","nickname":"atompi","note":"","ucode":"D13F2DA4E41BA1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289157,"discussion_content":"如果是MacOS上跑Ubuntu的容器呢？我看了下，这时候容器里跑任何进程，宿主机是看不到的。所以此时应该还是用到了虚拟化的技术","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1594008145,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":20629,"ip_address":""},"score":289157,"extra":""},{"author":{"id":1283989,"avatar":"https://static001.geekbang.org/account/avatar/00/13/97/95/aad51e9b.jpg","nickname":"waterjiao","note":"","ucode":"74F2F75BF0CA6F","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":2032840,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/04/c8/3c7af100.jpg","nickname":"Javatar","note":"","ucode":"E216645CDF632C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295543,"discussion_content":"macOs和windows都是用的虚拟化","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1596244203,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":289157,"ip_address":""},"score":295543,"extra":""},{"author":{"id":2032840,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/04/c8/3c7af100.jpg","nickname":"Javatar","note":"","ucode":"E216645CDF632C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1283989,"avatar":"https://static001.geekbang.org/account/avatar/00/13/97/95/aad51e9b.jpg","nickname":"waterjiao","note":"","ucode":"74F2F75BF0CA6F","race_medal":1,"user_type":1,"is_pvip":true},"discussion":{"id":295622,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596265232,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":295543,"ip_address":""},"score":295622,"extra":""}]},{"author":{"id":1030654,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b9/fe/12a61ed6.jpg","nickname":"岳永强","note":"","ucode":"091312D62B636F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":22077,"discussion_content":"容器和宿主机其实共享内核的，只是容器只是在宿主机上一个带有各种命名空间的进程。所以宿主机无法虚拟不同于宿主机OS的容器","likes_number":20,"is_delete":false,"is_hidden":false,"ctime":1569574869,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1207457,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6c/a1/80d83f0a.jpg","nickname":"Ellison","note":"","ucode":"A2FB94D4F6A332","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1030654,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b9/fe/12a61ed6.jpg","nickname":"岳永强","note":"","ucode":"091312D62B636F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379360,"discussion_content":"这句话有问题吧，我宿主机是centos，我在docker启一个ubuntu当然可以！ ","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1623845492,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":22077,"ip_address":""},"score":379360,"extra":""},{"author":{"id":2419502,"avatar":"https://static001.geekbang.org/account/avatar/00/24/eb/2e/90fea784.jpg","nickname":"柒","note":"","ucode":"D41241629321A1","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":1207457,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6c/a1/80d83f0a.jpg","nickname":"Ellison","note":"","ucode":"A2FB94D4F6A332","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392631,"discussion_content":"内核相同就可以。 不管是centos还是ubuntu，它们的内核是一样的。只要内核的版本相同。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1631081798,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":379360,"ip_address":""},"score":392631,"extra":""}]},{"author":{"id":2179383,"avatar":"https://static001.geekbang.org/account/avatar/00/21/41/37/b89f3d67.jpg","nickname":"我在睡觉","note":"","ucode":"6503B611151D3C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":334095,"discussion_content":"简单来讲就是windows和mac上运行容器（linux进程）都是跑在linux虚拟机上的，你装的docker服务里面自带一个linux虚拟机","likes_number":15,"is_delete":false,"is_hidden":false,"ctime":1607742482,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1655775,"avatar":"","nickname":"BIZ_UI_4","note":"","ucode":"EBA9DAB645837C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330932,"discussion_content":"mac 系统上使用的是linuxkit虚拟技术, 可以通过下面的命令来 sh 到虚拟机终端. \nscreen ~/Library/Containers/com.docker.docker/Data/vms/0/tty","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1606734729,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3217,"discussion_content":"硬盘，网络，cpu都是“障眼法”出来的啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564313487,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22852,"user_name":"登高","can_delete":false,"product_type":"c1","uid":1068600,"ip_address":"","ucode":"CD40046238BA18","user_header":"https://static001.geekbang.org/account/avatar/00/10/4e/38/3faa8377.jpg","comment_is_top":false,"comment_ctime":1536019533,"is_pvip":true,"replies":[{"id":"8232","content":"查水表！","user_name":"作者回复","comment_id":22852,"uid":"1218095","ip_address":"","utype":1,"ctime":1536027099,"user_name_real":"Geek_6ef93d"}],"discussion_count":6,"race_medal":0,"score":"375198174285","product_id":100015201,"comment_content":"👍docker是没有上过历史课的进程","like_count":88,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423294,"discussion_content":"查水表！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536027099,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1261493,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3f/b5/5fe77e16.jpg","nickname":"不经意间","note":"","ucode":"C39D98697ACB8B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391492,"discussion_content":"啥意思","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1630484253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":2747665,"avatar":"https://static001.geekbang.org/account/avatar/00/29/ed/11/f1d6d31e.jpg","nickname":"lt","note":"","ucode":"A795DA84222A09","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1261493,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3f/b5/5fe77e16.jpg","nickname":"不经意间","note":"","ucode":"C39D98697ACB8B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391782,"discussion_content":"选择了遗忘?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630634690,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":391492,"ip_address":""},"score":391782,"extra":""},{"author":{"id":1261493,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3f/b5/5fe77e16.jpg","nickname":"不经意间","note":"","ucode":"C39D98697ACB8B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2747665,"avatar":"https://static001.geekbang.org/account/avatar/00/29/ed/11/f1d6d31e.jpg","nickname":"lt","note":"","ucode":"A795DA84222A09","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391874,"discussion_content":"(´•ω•̥`)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630667765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":391782,"ip_address":""},"score":391874,"extra":""},{"author":{"id":1697559,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/OvskibaMLsga8OwJHOEubtWKziaW3sgOJsNWcBUicReYJNzuLl3naQjiafQGcxcjx0jvY8F3IhiaW3pyAWUF4r5YkAw/132","nickname":"jack","note":"","ucode":"7A474515DB7ACD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1261493,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3f/b5/5fe77e16.jpg","nickname":"不经意间","note":"","ucode":"C39D98697ACB8B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":406619,"discussion_content":"docker里的进程，以为自己是开天辟地的一号进程，你可以查下，1 号进程有特殊权限。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1634807520,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":391492,"ip_address":""},"score":406619,"extra":""}]}]},{"had_liked":false,"id":23462,"user_name":"jssfy","can_delete":false,"product_type":"c1","uid":1137238,"ip_address":"","ucode":"F16353CFE607B7","user_header":"https://static001.geekbang.org/account/avatar/00/11/5a/56/115c6433.jpg","comment_is_top":false,"comment_ctime":1536379932,"is_pvip":false,"replies":[{"id":"8499","content":"说的没毛病。","user_name":"作者回复","comment_id":23462,"uid":"1218095","ip_address":"","utype":1,"ctime":1536405986,"user_name_real":"Geek_6ef93d"}],"discussion_count":10,"race_medal":0,"score":"340838796316","product_id":100015201,"comment_content":"进一步，1. 如果容器镜像os支持某硬件的驱动，但是宿主机os如果不支持该硬件驱动的话，是否也白搭<br>2. 是否可以理解为 镜像只是提供了一套镜像文件系统中的各种文件，而各种内核相关的模块或者特性支持，完全依赖于宿主机？<br>","like_count":79,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423572,"discussion_content":"说的没毛病。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536405986,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2616028,"avatar":"https://static001.geekbang.org/account/avatar/00/27/ea/dc/aa699264.jpg","nickname":"宏典","note":"","ucode":"63953F36596C28","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":577416,"discussion_content":"是否有打包ko的方案？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656085467,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":423572,"ip_address":""},"score":577416,"extra":""}]},{"author":{"id":1259280,"avatar":"https://static001.geekbang.org/account/avatar/00/13/37/10/a8aa9acb.jpg","nickname":"jzdayz","note":"","ucode":"E84C0DFC53BE8A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":46104,"discussion_content":"难怪不同os的兼容不一致\n","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1573120731,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2853200,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/89/50/aee9fdab.jpg","nickname":"小杰","note":"","ucode":"BBDF8E9F348F65","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545914,"discussion_content":"总结下1、docker依赖os，os依赖硬件。2、镜像只是提供了各种文件，内核机制依赖os","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1642081329,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2941761,"avatar":"","nickname":"Geek_16ad58","note":"","ucode":"1180D9676FE595","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2853200,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/89/50/aee9fdab.jpg","nickname":"小杰","note":"","ucode":"BBDF8E9F348F65","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":555614,"discussion_content":"os依赖内核吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646992282,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":545914,"ip_address":""},"score":555614,"extra":""}]},{"author":{"id":1340955,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/FheCgo4OvibofpdXVyWzev07tDHpqZ5CSArjLZ10kDMDwN7sUk3AHLUsuDUWk9KZEnSTWgXoLicn18UhsGgMfzrg/132","nickname":"ZeWe","note":"","ucode":"F02CBFC395527B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543642,"discussion_content":"赞，描点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641257257,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1837179,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/08/7b/7f086546.jpg","nickname":"Alex","note":"","ucode":"70806CEA9AB15E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380503,"discussion_content":"不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624535408,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1250580,"avatar":"https://static001.geekbang.org/account/avatar/00/13/15/14/21e0807e.jpg","nickname":"gm","note":"","ucode":"0E39AE5BE34E27","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":219411,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585754108,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1119116,"avatar":"https://static001.geekbang.org/account/avatar/00/11/13/8c/c86340ca.jpg","nickname":"巴西","note":"","ucode":"6E68AA02011541","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":111100,"discussion_content":"做笔记","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577780148,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1260026,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/fa/a7edbc72.jpg","nickname":"安排","note":"","ucode":"F78CFA9624CAEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":100619,"discussion_content":"不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577272832,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22722,"user_name":"huan","can_delete":false,"product_type":"c1","uid":1012286,"ip_address":"","ucode":"46CB95F6E4E5FF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/72/3e/534db55d.jpg","comment_is_top":false,"comment_ctime":1535939246,"is_pvip":false,"replies":[{"id":"8169","content":"听起来不错哦","user_name":"作者回复","comment_id":22722,"uid":"1218095","ip_address":"","utype":1,"ctime":1535939689,"user_name_real":"Geek_6ef93d"}],"discussion_count":1,"race_medal":0,"score":"319363519150","product_id":100015201,"comment_content":"第一个问题，我感觉docker engine 最好虚线标识，表示他只是一种启动时用，运行时并不需要，真实进程是直接run在host os上","like_count":75,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423237,"discussion_content":"听起来不错哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535939689,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22737,"user_name":"P小二","can_delete":false,"product_type":"c1","uid":1030177,"ip_address":"","ucode":"FCEDF8E4673F44","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b8/21/072e5068.jpg","comment_is_top":false,"comment_ctime":1535945125,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"306478623141","product_id":100015201,"comment_content":"做了几年内核开发，看过docker源码，用lxc搞了一个容器轮子。浙大SEL实验室确实很早就在进行docker的研究，以前也跟进看过很多文章。lxc不是新东西，不过还是很多人不懂原理，博主文章通俗易懂，点赞！","like_count":71,"discussions":[{"author":{"id":2930234,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/KqZeIjNOVQJnsIFkDBWl5wfaxWDGLpIMUdFbF7SQhXFavmxgpwQPj9FrGAV4xNrqd733qicT4IZVibELyziaLokDQ/132","nickname":"罗艺","note":"","ucode":"9D4E1A377BCF23","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":570557,"discussion_content":"我感觉你很牛","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651818032,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233297,"user_name":"ican_只会0到9","can_delete":false,"product_type":"c1","uid":1029473,"ip_address":"","ucode":"9EE33C42EE519D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b5/61/9802a552.jpg","comment_is_top":false,"comment_ctime":1594281986,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"285062123522","product_id":100015201,"comment_content":"看了大家的评论，也反复地研读并自己实践了，获得：<br>1、虚拟机 是硬件隔离，因为hypervisor 虚拟一系列硬件资源<br>2、容器是 进程级隔离，依靠NameSpace 机制实现进程间的隔离（障眼法）<br>3. docker container 是通过 containerd 进程管理，因此可以像平常结束进程一样结束指定的容器<br>4. docker run 本质是创建一个新的容器进程（Namespace）<br>一个小总结","like_count":67},{"had_liked":false,"id":22922,"user_name":"小崔","can_delete":false,"product_type":"c1","uid":1104958,"ip_address":"","ucode":"4E537416787752","user_header":"https://static001.geekbang.org/account/avatar/00/10/dc/3e/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1536039458,"is_pvip":false,"replies":[{"id":"8332","content":"是你通过exec进去之后启动的后台进程，不受控制。控制指的是它们的回收和生命周期管理。","user_name":"作者回复","comment_id":22922,"uid":"1218095","ip_address":"","utype":1,"ctime":1536124728,"user_name_real":"Geek_6ef93d"}],"discussion_count":8,"race_medal":0,"score":"224874338850","product_id":100015201,"comment_content":"在容器内，除了pid=1的进程，其他进程是不受docker控制的。<br>这个控制具体指什么呢？其他进程和pid=1的进程关系又是什么呢？","like_count":52,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423324,"discussion_content":"是你通过exec进去之后启动的后台进程，不受控制。控制指的是它们的回收和生命周期管理。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1536124728,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2616028,"avatar":"https://static001.geekbang.org/account/avatar/00/27/ea/dc/aa699264.jpg","nickname":"宏典","note":"","ucode":"63953F36596C28","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":577415,"discussion_content":"通过fork+exec的进程是pid为1的进程的子进程，资源回收应该是父进程调用waitpid等接口进行回收。不受docker的控制吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656085400,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":423324,"ip_address":""},"score":577415,"extra":""}]},{"author":{"id":2420731,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/AYCIZYjDO4UAMhqNYNElcNiczfuD2qU6VkcEmSugImsq5bjicRNTQE1dJhPIuUDunzxSLexDoYazK7QadT3AekJw/132","nickname":"Geek_84025d","note":"","ucode":"D01E97134E49FF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":404903,"discussion_content":"mark","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1634455285,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2057056,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/63/60/305a6264.jpg","nickname":"Pan","note":"","ucode":"E37A0DBB1BD80A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574103,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653833890,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1295609,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJRFRX8kNzNet7FibNvtavbVpAwK09AhIhrib9k762qWtH6mre8ickP7hM5mgZC4ytr8NnmIfmAhxMSQ/132","nickname":"老大不小","note":"","ucode":"35BCDD3CB13467","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572097,"discussion_content":"mark，回头好好理解下（现在看不懂。。。）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652600766,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2062775,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/79/b7/67baddfe.jpg","nickname":"rafa","note":"","ucode":"6CD45F125FC748","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556435,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647358504,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1837179,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/08/7b/7f086546.jpg","nickname":"Alex","note":"","ucode":"70806CEA9AB15E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380504,"discussion_content":"mark，回头好好理解下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624535572,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1260026,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/fa/a7edbc72.jpg","nickname":"安排","note":"","ucode":"F78CFA9624CAEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":100690,"discussion_content":"mark，回头好好理解下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577275640,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23340,"user_name":"balancer","can_delete":false,"product_type":"c1","uid":1145758,"ip_address":"","ucode":"A865FAFF2FE1FA","user_header":"https://static001.geekbang.org/account/avatar/00/11/7b/9e/37d69ff0.jpg","comment_is_top":false,"comment_ctime":1536289017,"is_pvip":false,"replies":[{"id":"8458","content":"使用ubuntu里的文件，使用宿主机上的内核。","user_name":"作者回复","comment_id":23340,"uid":"1218095","ip_address":"","utype":1,"ctime":1536292919,"user_name_real":"Geek_6ef93d"}],"discussion_count":2,"race_medal":0,"score":"181924915449","product_id":100015201,"comment_content":"如果运行的容器是一个os ubuntu，那么在这ubuntu里面运行的进程，和这个ubuntu是什么关系 和主机OS是什么关系？谢谢","like_count":43,"discussions":[{"author":{"id":2052521,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/51/a9/741b5ad9.jpg","nickname":"FD","note":"","ucode":"ED396BD322489E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":356566,"discussion_content":"是否可以这样理解：在打包应用程序时，使用的基础镜像，比如busybox或者alpine,其实是不带内核的，只是一些相应系统上的文件？","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1615625383,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423522,"discussion_content":"使用ubuntu里的文件，使用宿主机上的内核。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1536292919,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22934,"user_name":"包子","can_delete":false,"product_type":"c1","uid":1089345,"ip_address":"","ucode":"6CC4EBB8CD3924","user_header":"https://static001.geekbang.org/account/avatar/00/10/9f/41/82306dfe.jpg","comment_is_top":false,"comment_ctime":1536049278,"is_pvip":false,"replies":[{"id":"8331","content":"ps同样可以看到。win mac docker上跑其实都是个虚拟机","user_name":"作者回复","comment_id":22934,"uid":"1218095","ip_address":"","utype":1,"ctime":1536124555,"user_name_real":"Geek_6ef93d"}],"discussion_count":1,"race_medal":0,"score":"143269970046","product_id":100015201,"comment_content":"老师有个问题一直困扰，容器是一个单进程，那比如我有一个镜像里面集成了jdk, netstat, ping等，虽然这个容器启动时里面是一个java进程，但是我可以进到容器里面执行各种命令，比如netstat等，那这些命令在容器的运行过程中是在运行的吗？<br>---------<br>作者回复<br>是在运行的。但它们不受docker的控制，就像野孩子。所以单进程意思不是只能运行一个进程，而是只有一个进程是可控的。<br><br>老师接着这个问题有几个问题<br>1. 这些不被docker管理的进程在哪里能看得到？这些进程是否会很占用硬件资源？比如netstat <br>2. 关于mac上运行的docker，比如容器进程依赖linux内核的版本4.2才能正确运行（镜像的内核版本是4.2的），那么既然docker只是用资源隔离的形式运行的。那我在mac起的这个容器时是否能正确运行？他会加载完整的linux操作系统吗？","like_count":33,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423329,"discussion_content":"ps同样可以看到。win mac docker上跑其实都是个虚拟机","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1536124555,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22825,"user_name":"Yuk亮","can_delete":false,"product_type":"c1","uid":1004350,"ip_address":"","ucode":"F3C684ADEB99D9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/53/3e/234726f9.jpg","comment_is_top":false,"comment_ctime":1535988534,"is_pvip":true,"replies":[{"id":"8236","content":"只要应用本身对内核没要求，那就完全没问题","user_name":"作者回复","comment_id":22825,"uid":"1218095","ip_address":"","utype":1,"ctime":1536027175,"user_name_real":"Geek_6ef93d"}],"discussion_count":1,"race_medal":0,"score":"143269909302","product_id":100015201,"comment_content":"镜像的运行对host os有要求吗？ 比如打包的镜像原来的kernel和运行时的kernel不一致，又或者镜像的发行版是centos，能运行在host为ubuntu的机器上吗","like_count":33,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423283,"discussion_content":"只要应用本身对内核没要求，那就完全没问题","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1536027175,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22790,"user_name":"芷兮","can_delete":false,"product_type":"c1","uid":1007564,"ip_address":"","ucode":"8D91D1A69BA743","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5f/cc/56940167.jpg","comment_is_top":false,"comment_ctime":1535974602,"is_pvip":false,"replies":[{"id":"8242","content":"有很多种方法。比如查看&#47;proc&#47;1&#47;cgroup下的文件结构","user_name":"作者回复","comment_id":22790,"uid":"1218095","ip_address":"","utype":1,"ctime":1536027676,"user_name_real":"Geek_6ef93d"}],"discussion_count":3,"race_medal":0,"score":"134679960778","product_id":100015201,"comment_content":"有一个问题 所以通过pid 可以判断自己是在docker里面还是在宿主机上。怎么通过命令行知道自己现在是在container里面还是在外面？","like_count":31,"discussions":[{"author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535918,"discussion_content":"/.dockerenv","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1638606889,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423266,"discussion_content":"有很多种方法。比如查看/proc/1/cgroup下的文件结构","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1536027676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1261493,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3f/b5/5fe77e16.jpg","nickname":"不经意间","note":"","ucode":"C39D98697ACB8B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391498,"discussion_content":"要是是一个Iass平台，提供的就是使用docker容器提供的一个虚拟主机给你当服务器用的话。这样通过pid应该不好判断。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630485337,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22721,"user_name":"贾鹏","can_delete":false,"product_type":"c1","uid":1157930,"ip_address":"","ucode":"9213D847AC7313","user_header":"https://static001.geekbang.org/account/avatar/00/11/ab/2a/f3207127.jpg","comment_is_top":false,"comment_ctime":1535939009,"is_pvip":false,"replies":[{"id":"8173","content":"cgroup ns是个新东西，能知道这个的可以做老师了哈","user_name":"作者回复","comment_id":22721,"uid":"1218095","ip_address":"","utype":1,"ctime":1535939942,"user_name_real":"Geek_6ef93d"}],"discussion_count":1,"race_medal":0,"score":"108910121409","product_id":100015201,"comment_content":"ipc pid mnt net uts user cgroup","like_count":25,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423236,"discussion_content":"cgroup ns是个新东西，能知道这个的可以做老师了哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535939942,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":158796,"user_name":"梅子黄时雨","can_delete":false,"product_type":"c1","uid":1015938,"ip_address":"","ucode":"9F788D09C2E9E7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/80/82/3c21b30c.jpg","comment_is_top":false,"comment_ctime":1575452717,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"78884864045","product_id":100015201,"comment_content":"容器就是个进程，我觉得光这一句，我就收益匪浅了。","like_count":19},{"had_liked":false,"id":22831,"user_name":"Kaer","can_delete":false,"product_type":"c1","uid":1113558,"ip_address":"","ucode":"1BD233D3FAC2B1","user_header":"https://static001.geekbang.org/account/avatar/00/10/fd/d6/71e1cc29.jpg","comment_is_top":false,"comment_ctime":1535989427,"is_pvip":false,"replies":[{"id":"8234","content":"实际上是 硬件级别 的隔离 VM可是有虚拟硬件的","user_name":"作者回复","comment_id":22831,"uid":"1218095","ip_address":"","utype":1,"ctime":1536027142,"user_name_real":"Geek_6ef93d"}],"discussion_count":1,"race_medal":0,"score":"74550433459","product_id":100015201,"comment_content":"虚拟化和容器的最大区别可以理解这个吗：1:虚拟化是同一台物理机不同的操作系统隔离应用进程2:但是容器是同一个操作系统的不同进程隔离。  简单来说就是：一个是操作系统级别隔离，一个是进程间隔离。","like_count":17,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423286,"discussion_content":"实际上是 硬件级别 的隔离 VM可是有虚拟硬件的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536027142,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22753,"user_name":"extraterrestrial！！","can_delete":false,"product_type":"c1","uid":1017987,"ip_address":"","ucode":"74AE07CA68F6B6","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/GDYkD2X7pXSKUSaUFC8u3TBPaakaibnOBV2NYDc2TNfb8Su9icFMwSod6iaQX5iaGU2gT6xkPuhXeWvY8KaVEZAYzg/132","comment_is_top":false,"comment_ctime":1535949389,"is_pvip":true,"replies":[{"id":"8247","content":"收到，后面推荐","user_name":"作者回复","comment_id":22753,"uid":"1218095","ip_address":"","utype":1,"ctime":1536027910,"user_name_real":"Geek_6ef93d"}],"discussion_count":2,"race_medal":0,"score":"74550393421","product_id":100015201,"comment_content":"能再推荐点扩展阅读材料就更好了，比如有一些不同资源使用namespace的程序例子，从内核的视角用没用namespace有啥区别，以及namespace的实现之类的～","like_count":17,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423253,"discussion_content":"收到，后面推荐","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536027910,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1366274,"avatar":"https://static001.geekbang.org/account/avatar/00/14/d9/02/7b696941.jpg","nickname":"听到微笑","note":"","ucode":"92FF2B14560BC3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369042,"discussion_content":"1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618910564,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22793,"user_name":"贾鹏","can_delete":false,"product_type":"c1","uid":1157930,"ip_address":"","ucode":"9213D847AC7313","user_header":"https://static001.geekbang.org/account/avatar/00/11/ab/2a/f3207127.jpg","comment_is_top":false,"comment_ctime":1535976268,"is_pvip":false,"replies":[{"id":"8238","content":"user ns只修改user&#47;group相关的视图。不过不太明白把cpu下线是什么情况？","user_name":"作者回复","comment_id":22793,"uid":"1218095","ip_address":"","utype":1,"ctime":1536027311,"user_name_real":"Geek_6ef93d"}],"discussion_count":1,"race_medal":0,"score":"65960485708","product_id":100015201,"comment_content":"user  ns这块我理解的不太清楚，默认情况下容器里的root和宿主机root感觉是一样的（通过&#47;proc&#47;pid&#47;uid_map看映射关系是把容器uid 0映射到宿主机0了），而且在容器中能把主机cpu下线。感觉userns-remap特性好像也解决不了这个cpu下线的问题。希望得到老师的解惑，谢谢。或者如果方便的话能不能加下微信呢: jp6439","like_count":15,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423267,"discussion_content":"user ns只修改user/group相关的视图。不过不太明白把cpu下线是什么情况？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536027311,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22662,"user_name":"Maiza","can_delete":false,"product_type":"c1","uid":1007248,"ip_address":"","ucode":"D6911CDAC0D8C7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/90/5f79859b.jpg","comment_is_top":false,"comment_ctime":1535928523,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"57370503371","product_id":100015201,"comment_content":"真的是白话 😄，终于搞懂了 namespace 了，话说 cgroup 是啥 。。。","like_count":13,"discussions":[{"author":{"id":2620686,"avatar":"https://static001.geekbang.org/account/avatar/00/27/fd/0e/c86ca88c.jpg","nickname":"Geek","note":"","ucode":"E7B1C6624D4E80","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373836,"discussion_content":"namespace--资源隔离，cgroups--内核资源限制","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1620890474,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":24292,"user_name":"abc","can_delete":false,"product_type":"c1","uid":1198332,"ip_address":"","ucode":"A4E989E85848D9","user_header":"https://static001.geekbang.org/account/avatar/00/12/48/fc/f46062b6.jpg","comment_is_top":false,"comment_ctime":1536891576,"is_pvip":false,"replies":[{"id":"8895","content":"它们当然都是pid 1进程的子进程","user_name":"作者回复","comment_id":24292,"uid":"1218095","ip_address":"","utype":1,"ctime":1536898956,"user_name_real":"Geek_6ef93d"}],"discussion_count":4,"race_medal":0,"score":"53076499128","product_id":100015201,"comment_content":"张老师我再追问一问题：在容器内，除了pid=1的进程，其他进程是不受docker控制的。那么如果在一个pod（容器，单pod单容器场景）中以CMD方式启动脚本（该脚本封装了多个启动程序，实测脚本自身的pid=1）。并且还配置了pod的prestop，poststart（是为了执行类似注册的脚本，一次执行而已，不是后台进程）。想请问这种方式下pod的prestop，poststart是如何控制的？实测是生效的，想知道其中的缘由？<br>","like_count":12,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423919,"discussion_content":"它们当然都是pid 1进程的子进程","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1536898956,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2113915,"avatar":"https://static001.geekbang.org/account/avatar/00/20/41/7b/cda2e622.jpg","nickname":"致良知","note":"","ucode":"73C722E31B726A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":355601,"discussion_content":"那这样 还可以说 一个容器是单进程吗？ 前面说 可控的是一个进程，现在可控的又是多个进程 这是不是前后矛盾呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615459040,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1207158,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6b/76/31549022.jpg","nickname":"Whark","note":"","ucode":"32FEE76C5C2789","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2113915,"avatar":"https://static001.geekbang.org/account/avatar/00/20/41/7b/cda2e622.jpg","nickname":"致良知","note":"","ucode":"73C722E31B726A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393898,"discussion_content":"前后并不矛盾，问题的关键在于，以CMD方式启动的脚本中，如果有部分程序异常退出了，也就是pid 1进程的部分子进程退出，容器应该如何管理运行状态呢？","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1631630267,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":355601,"ip_address":""},"score":393898,"extra":""},{"author":{"id":1631578,"avatar":"https://static001.geekbang.org/account/avatar/00/18/e5/5a/b7987ae1.jpg","nickname":"ken","note":"","ucode":"164151B21C153F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1207158,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6b/76/31549022.jpg","nickname":"Whark","note":"","ucode":"32FEE76C5C2789","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554666,"discussion_content":"k8s 用探针进行判断应用运行的状态 进行状态管理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646541778,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":393898,"ip_address":""},"score":554666,"extra":""}]}]},{"had_liked":false,"id":42407,"user_name":"Tony","can_delete":false,"product_type":"c1","uid":1206549,"ip_address":"","ucode":"8C3EE251551745","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/15/1e94f455.jpg","comment_is_top":false,"comment_ctime":1542949722,"is_pvip":false,"replies":[{"id":"15267","content":"docker啥都没虚拟","user_name":"作者回复","comment_id":42407,"uid":"1218095","ip_address":"","utype":1,"ctime":1542986681,"user_name_real":"Geek_6ef93d"}],"discussion_count":3,"race_medal":0,"score":"48787589978","product_id":100015201,"comment_content":"可以理解为虚拟机虚拟的是硬件，docker虚拟的是操作系统吗？","like_count":11,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430079,"discussion_content":"docker啥都没虚拟","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1542986681,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1303031,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e1/f7/e1fb23ff.jpg","nickname":"Ola","note":"","ucode":"4BF01A54C6204F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":358091,"discussion_content":"docker帮你启动了容器进程","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1615909449,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2271382,"avatar":"https://static001.geekbang.org/account/avatar/00/22/a8/96/f87ea7d8.jpg","nickname":"🦖","note":"","ucode":"9E73699EC4A734","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571225,"discussion_content":"可以理解为虚拟机虚拟的是硬件，docker啥都没虚拟，docker只是基于系统API提供了特殊进程的功能、这样理解对吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652145702,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23345,"user_name":"asdf100","can_delete":false,"product_type":"c1","uid":1043738,"ip_address":"","ucode":"39D8D71453E575","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/1a/ce7f7d54.jpg","comment_is_top":false,"comment_ctime":1536290951,"is_pvip":false,"replies":[{"id":"8455","content":"容器用的就是这个虚拟机的内核。docker软件负责给你启动这个虚拟机。","user_name":"作者回复","comment_id":23345,"uid":"1218095","ip_address":"","utype":1,"ctime":1536292693,"user_name_real":"Geek_6ef93d"}],"discussion_count":1,"race_medal":0,"score":"48780931207","product_id":100015201,"comment_content":"老师提到win mac docker上跑其实都是个虚拟机，可以运行不同平台的容器，如mac上运行ubuntu的容器。那么容器所需要的内核在哪里？是虚拟机的内核吗？还有这个虚拟机是不是这个正在运行的docker软件，也就是使用docker的虚拟机的内核？<br>","like_count":11,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423524,"discussion_content":"容器用的就是这个虚拟机的内核。docker软件负责给你启动这个虚拟机。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536292693,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104443,"user_name":"soooldier","can_delete":false,"product_type":"c1","uid":1000746,"ip_address":"","ucode":"04EC4C01DD06FD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/45/2a/c4413de4.jpg","comment_is_top":false,"comment_ctime":1560755483,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"40215461147","product_id":100015201,"comment_content":"老师您好，文章里说到除开pid=1的进程外其它进行都不受docker控制。我做了一个实验，启动一个container，docker run -it --cpu-period=100000 --cpu-quota=20000 ubuntu &#47;bin&#47;bash。在container里允许了一个耗cpu的脚本，这个程序本应该把cpu跑满，但在宿主机上top查看cpu一直%us不到20%。请问这是什么情况呢～","like_count":9,"discussions":[{"author":{"id":2271382,"avatar":"https://static001.geekbang.org/account/avatar/00/22/a8/96/f87ea7d8.jpg","nickname":"🦖","note":"","ucode":"9E73699EC4A734","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571227,"discussion_content":"老师说不受docker控制指的是它们的回收和生命周期管理。宿主机上top查看cpu一直%us不到20%，应该就是Linux Cgroups在起作用吧，限制了资源使用。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1652146472,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2271382,"avatar":"https://static001.geekbang.org/account/avatar/00/22/a8/96/f87ea7d8.jpg","nickname":"🦖","note":"","ucode":"9E73699EC4A734","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571228,"discussion_content":"除了pid=1的进程，其他进程的回收和生命周期管理（可能还有其他的）是不受docker控制的，但是其他进程所使用的资源还是受docker调用的系统API（Linux Cgroups）控制的。不知道我理解的正确不。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652147421,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22804,"user_name":"终身学习","can_delete":false,"product_type":"c1","uid":1219065,"ip_address":"","ucode":"BAF1D13FABCD1D","user_header":"https://static001.geekbang.org/account/avatar/00/12/99/f9/528a73db.jpg","comment_is_top":false,"comment_ctime":1535980140,"is_pvip":false,"replies":[{"id":"8240","content":"那时候各家有各家的方法，也打包操作系统，叫rootfs，请关注后面镜像部分的讲解","user_name":"作者回复","comment_id":22804,"uid":"1218095","ip_address":"","utype":1,"ctime":1536027388,"user_name_real":"Geek_6ef93d"}],"discussion_count":3,"race_medal":0,"score":"40190685804","product_id":100015201,"comment_content":"在docker出来之前是怎么用容器的，有想到把操作系统包进去吗？容器技术又是基于什么原因出现的呢？","like_count":9,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423272,"discussion_content":"那时候各家有各家的方法，也打包操作系统，叫rootfs，请关注后面镜像部分的讲解","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1536027388,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1036354,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d0/42/df3a3642.jpg","nickname":"晓","note":"","ucode":"3C6E971C630DB2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308991,"discussion_content":"vagrant 就是将操作系统一并打包。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1601161067,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2079138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/b9/a2/1fc80eb0.jpg","nickname":"锁锁里","note":"","ucode":"BD90AC2CCE7E93","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540242,"discussion_content":"FreeBSD 下 jail 的叫 sharedfs","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639998106,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22666,"user_name":"Linux云计算网络","can_delete":false,"product_type":"c1","uid":1114062,"ip_address":"","ucode":"8E1F8B049D3C95","user_header":"https://static001.geekbang.org/account/avatar/00/10/ff/ce/73ee54bf.jpg","comment_is_top":false,"comment_ctime":1535930423,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"40190636087","product_id":100015201,"comment_content":"1. 右边的图应该把docker engine去掉，用一个个的namespace来承载应用；<br>2. 除了文中说的 6 种，印象中还有一种cgroup","like_count":9},{"had_liked":false,"id":23116,"user_name":"Jeff.W","can_delete":false,"product_type":"c1","uid":1140420,"ip_address":"","ucode":"2043F83FB7B39C","user_header":"https://static001.geekbang.org/account/avatar/00/11/66/c4/038f9325.jpg","comment_is_top":false,"comment_ctime":1536156858,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"35895895226","product_id":100015201,"comment_content":"虚拟机虽然名字很虚，但是对于进程来说都是真实的。而容器，反而是虚无缥缈并不真实存在，是通过namespace的障眼法来达到的一种视觉效果~","like_count":8,"discussions":[{"author":{"id":2616028,"avatar":"https://static001.geekbang.org/account/avatar/00/27/ea/dc/aa699264.jpg","nickname":"宏典","note":"","ucode":"63953F36596C28","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577418,"discussion_content":"虚拟机的vcpu也是进程哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656085785,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22663,"user_name":"悟空聊架构","can_delete":false,"product_type":"c1","uid":1123163,"ip_address":"","ucode":"C2F482A0CF8AF1","user_header":"https://static001.geekbang.org/account/avatar/00/11/23/5b/983408b9.jpg","comment_is_top":false,"comment_ctime":1535929436,"is_pvip":true,"replies":[{"id":"8165","content":"当然是下一篇","user_name":"作者回复","comment_id":22663,"uid":"1218095","ip_address":"","utype":1,"ctime":1535939469,"user_name_real":"Geek_6ef93d"}],"discussion_count":1,"race_medal":0,"score":"31600700508","product_id":100015201,"comment_content":"老师，Cgroups是不是没有细讲？","like_count":7,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423216,"discussion_content":"当然是下一篇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535939469,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":271017,"user_name":"剑八","can_delete":false,"product_type":"c1","uid":1297630,"ip_address":"","ucode":"0A09F41DB8A4E7","user_header":"https://static001.geekbang.org/account/avatar/00/13/cc/de/e28c01e1.jpg","comment_is_top":false,"comment_ctime":1609368115,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"27379171891","product_id":100015201,"comment_content":"技术发展基本是朝资源利用高效发展的<br>虚拟机hypervisor是在OS上虚拟出多个OS，这个比较重，资源利用用不高，但安全性高<br>而docker是一个进程，用操作系统的namespace提供独立视图，cgroups做资源限制，资源利用高，且启动快，这个在弹性扩容是极大优势","like_count":6},{"had_liked":false,"id":137492,"user_name":"Up","can_delete":false,"product_type":"c1","uid":1032969,"ip_address":"","ucode":"3AACE765021AB5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c3/09/ee1b7ac0.jpg","comment_is_top":false,"comment_ctime":1569752908,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27339556684","product_id":100015201,"comment_content":"问题一：<br>docker engine层去掉，因为实际上并不存在这一层，图片右边应该描述下控制手段<br><br>问题二：<br>进程隔离：pid namespace<br>网络隔离：net namespace<br>挂载点隔离：mount namespace<br>进程间通信隔离：ipc namespace<br>独立的用户、用户组：user namespace<br>独立的hostname、domain name：uts namespace","like_count":6},{"had_liked":false,"id":23163,"user_name":"正是那朵玫瑰","can_delete":false,"product_type":"c1","uid":1048261,"ip_address":"","ucode":"73D630B654573F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fe/c5/3467cf94.jpg","comment_is_top":false,"comment_ctime":1536194310,"is_pvip":false,"replies":[{"id":"8382","content":"响应用户api，持有跟容器打交道的pipe，io等等。","user_name":"作者回复","comment_id":23163,"uid":"1218095","ip_address":"","utype":1,"ctime":1536199501,"user_name_real":"Geek_6ef93d"}],"discussion_count":2,"race_medal":0,"score":"27305998086","product_id":100015201,"comment_content":"老师想问个问题，既然容器只是在linux启动进程的时候添加一些参数进行隔离和限制，那么docker启动的守护进程是做什么用的呢？","like_count":6,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423446,"discussion_content":"响应用户api，持有跟容器打交道的pipe，io等等。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536199501,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1260026,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/fa/a7edbc72.jpg","nickname":"安排","note":"","ucode":"F78CFA9624CAEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":100708,"discussion_content":"mark，用户输入的docker命令先传到docker daemon也就是dockerd，dockerd通过指定的pipe或者io和相应的容器交互。 比如通过docker exec连接到一个指定容器，然后启动sh，等待用户输入命令。这个sh必须是存在与镜像中的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577276360,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22978,"user_name":"Sen","can_delete":false,"product_type":"c1","uid":1048925,"ip_address":"","ucode":"A73BFFE77A139E","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/5d/6586c756.jpg","comment_is_top":false,"comment_ctime":1536102599,"is_pvip":false,"replies":[{"id":"8327","content":"这个思路可以的","user_name":"作者回复","comment_id":22978,"uid":"1218095","ip_address":"","utype":1,"ctime":1536124380,"user_name_real":"Geek_6ef93d"}],"discussion_count":1,"race_medal":0,"score":"27305906375","product_id":100015201,"comment_content":"老师，如何监控容器内jvm的使用情况，在k8s中我希望用一个sidecar容器来监控主容器内tomcat的jmx，并将其数据转换成prometheus拉取的格式？","like_count":6,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423350,"discussion_content":"这个思路可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536124380,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22756,"user_name":"路人甲","can_delete":false,"product_type":"c1","uid":1222349,"ip_address":"","ucode":"869FAE43DA8BB9","user_header":"https://static001.geekbang.org/account/avatar/00/12/a6/cd/f078c005.jpg","comment_is_top":false,"comment_ctime":1535953050,"is_pvip":false,"replies":[{"id":"8243","content":"docker本身是有daemon的，但你说的没错，你完全可以开发一个操作runc的没daemon的docker","user_name":"作者回复","comment_id":22756,"uid":"1218095","ip_address":"","utype":1,"ctime":1536027727,"user_name_real":"Geek_6ef93d"}],"discussion_count":2,"race_medal":0,"score":"27305756826","product_id":100015201,"comment_content":"docker是一个基于内核提供的资源隔离机制而开发实现的客户端管理工具，这样理解没错吧？","like_count":6,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423255,"discussion_content":"docker本身是有daemon的，但你说的没错，你完全可以开发一个操作runc的没daemon的docker","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1536027727,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1140057,"avatar":"https://static001.geekbang.org/account/avatar/00/11/65/59/cbbcc945.jpg","nickname":"新","note":"","ucode":"43F407C284751E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":195623,"discussion_content":"docker只是个客户端工具，容器是内核机制，就像iptables和netfilter一样","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1583291945,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":301003,"user_name":"斐语","can_delete":false,"product_type":"c1","uid":1962270,"ip_address":"","ucode":"9649CC6AE6399C","user_header":"https://static001.geekbang.org/account/avatar/00/1d/f1/1e/92bd287c.jpg","comment_is_top":false,"comment_ctime":1625481545,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"23100318025","product_id":100015201,"comment_content":"你好，我想咨询个问题：docker容器是一个特殊的进程，当进入docker容器内部，再运行其它命令，如ping或ps，这时会新增进程(线程)吗？若有新增，新增的进程是容器进程的子进程 还是 宿主机的上进程？","like_count":5,"discussions":[{"author":{"id":1806720,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/91/80/bc38f890.jpg","nickname":"珍妮•玛仕多","note":"","ucode":"6E1E5564F979B3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550929,"discussion_content":"算野孩子","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644816523,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23411,"user_name":"jssfy","can_delete":false,"product_type":"c1","uid":1137238,"ip_address":"","ucode":"F16353CFE607B7","user_header":"https://static001.geekbang.org/account/avatar/00/11/5a/56/115c6433.jpg","comment_is_top":false,"comment_ctime":1536340282,"is_pvip":false,"replies":[{"id":"8482","content":"用不了","user_name":"作者回复","comment_id":23411,"uid":"1218095","ip_address":"","utype":1,"ctime":1536379558,"user_name_real":"Geek_6ef93d"}],"discussion_count":2,"race_medal":0,"score":"23011176762","product_id":100015201,"comment_content":"如果容器中跑的是4.x的虚拟kernel环境，宿主机真实是3.x的内核，那么是否有些4.x的内核新功能如果要用到的话是不可行的？","like_count":5,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423553,"discussion_content":"用不了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536379558,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2271382,"avatar":"https://static001.geekbang.org/account/avatar/00/22/a8/96/f87ea7d8.jpg","nickname":"🦖","note":"","ucode":"9E73699EC4A734","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":571236,"discussion_content":"这里为什么用不了呢，不是很理解老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652151136,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":423553,"ip_address":""},"score":571236,"extra":""}]}]},{"had_liked":false,"id":23140,"user_name":"李奋斗","can_delete":false,"product_type":"c1","uid":1068509,"ip_address":"","ucode":"0E2E39E733B9BB","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/dd/912b52ed.jpg","comment_is_top":false,"comment_ctime":1536191488,"is_pvip":false,"replies":[{"id":"8392","content":"看来最近租房市场感触很深。","user_name":"作者回复","comment_id":23140,"uid":"1218095","ip_address":"","utype":1,"ctime":1536200197,"user_name_real":"Geek_6ef93d"}],"discussion_count":1,"race_medal":0,"score":"23011027968","product_id":100015201,"comment_content":"Docker的理念，感觉有点类似北京的房屋租赁市场，以间为单位，而不是以套为单位。轻量级应用（单身人士，白天上班晚上加班，就来过个夜)节省资源（租插间)的好方式。😂","like_count":5,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423433,"discussion_content":"看来最近租房市场感触很深。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536200197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23136,"user_name":"旭东(Frank)","can_delete":false,"product_type":"c1","uid":1024486,"ip_address":"","ucode":"176FA629800062","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/e6/50da1b2d.jpg","comment_is_top":false,"comment_ctime":1536190578,"is_pvip":false,"replies":[{"id":"8383","content":"咱们这里默认都说的是linux容器。资源分配是内核统一管理的，不管你的pid是几。","user_name":"作者回复","comment_id":23136,"uid":"1218095","ip_address":"","utype":1,"ctime":1536199587,"user_name_real":"Geek_6ef93d"}],"discussion_count":1,"race_medal":0,"score":"23011027058","product_id":100015201,"comment_content":"作者回复<br>ps同样可以看到。win mac docker上跑其实都是个虚拟机<br>____<br>这么说的话只有linux才能算是在真实物理机上的Docker，win mac都需要一个底层的虚拟机才能跑Docker?<br><br>那虚拟机和Docker的对比图中是不是应该有个前提是linux下的对比?<br><br>单进程受控，是不是Docker中运行的其他进程都需要通过这个受控进程去访问硬件资源（host的系统资源）？","like_count":5,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423431,"discussion_content":"咱们这里默认都说的是linux容器。资源分配是内核统一管理的，不管你的pid是几。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536199587,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22802,"user_name":"Joe Black","can_delete":false,"product_type":"c1","uid":1052528,"ip_address":"","ucode":"21FE222A286445","user_header":"https://static001.geekbang.org/account/avatar/00/10/0f/70/c8680841.jpg","comment_is_top":false,"comment_ctime":1535979744,"is_pvip":false,"replies":[{"id":"8239","content":"哈哈，下一篇马上就来","user_name":"作者回复","comment_id":22802,"uid":"1218095","ip_address":"","utype":1,"ctime":1536027339,"user_name_real":"Geek_6ef93d"}],"discussion_count":1,"race_medal":0,"score":"23010816224","product_id":100015201,"comment_content":"chroot没提到啊，这个应该是一种很关键的资源隔离机制吧。","like_count":5,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423270,"discussion_content":"哈哈，下一篇马上就来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536027339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22746,"user_name":"Mr.Liu","can_delete":false,"product_type":"c1","uid":1199948,"ip_address":"","ucode":"371B7F2C35DE02","user_header":"https://static001.geekbang.org/account/avatar/00/12/4f/4c/088371bd.jpg","comment_is_top":false,"comment_ctime":1535947352,"is_pvip":false,"replies":[{"id":"8244","content":"我和李响以前就弄了一个，最近应该快发布了吧。@编辑","user_name":"作者回复","comment_id":22746,"uid":"1218095","ip_address":"","utype":1,"ctime":1536027769,"user_name_real":"Geek_6ef93d"}],"discussion_count":3,"race_medal":0,"score":"23010783832","product_id":100015201,"comment_content":"谢谢老师，讲得言简意赅！如果老师能整理一份思维导图，个人觉得对整个知识体系的理解会有很大帮助！","like_count":5,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423250,"discussion_content":"我和李响以前就弄了一个，最近应该快发布了吧。@编辑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536027769,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1363634,"avatar":"https://static001.geekbang.org/account/avatar/00/14/ce/b2/1f914527.jpg","nickname":"海盗船长","note":"","ucode":"ECB28BA21A4113","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547194,"discussion_content":"在哪呀？@编辑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642576232,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1782781,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/33/fd/1169c0f8.jpg","nickname":"Jack","note":"","ucode":"33C2A27D2F4284","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293795,"discussion_content":"这个思维导图在哪啊？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595669099,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22689,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1535935077,"is_pvip":true,"replies":[{"id":"8170","content":"当然可以，跟正常进程没有任何区别","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1535939722,"ip_address":"","comment_id":22689,"utype":1}],"discussion_count":1,"race_medal":1,"score":"23010771557","product_id":100015201,"comment_content":"在一个namespace启动的进程，在宿主机中是否可以进行控制呢？比如关闭，重启什么的......<br>放到docker中，就是宿主机能不能直接控制启动的docker容器中的进程呢？","like_count":5,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423225,"discussion_content":"当然可以，跟正常进程没有任何区别","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535939722,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155122,"user_name":"爱吃彩虹糖的猫~","can_delete":false,"product_type":"c1","uid":1261108,"ip_address":"","ucode":"9EC7A8FD4B7DB1","user_header":"https://static001.geekbang.org/account/avatar/00/13/3e/34/dd0a3c61.jpg","comment_is_top":false,"comment_ctime":1574648686,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18754517870","product_id":100015201,"comment_content":"看老师的文章总是浅显易懂。几下一句话<br>：“容器，其实是一种特殊的进程而已。”","like_count":4},{"had_liked":false,"id":101385,"user_name":"Vincent","can_delete":false,"product_type":"c1","uid":1565412,"ip_address":"","ucode":"F8B814DD92CBEE","user_header":"https://static001.geekbang.org/account/avatar/00/17/e2/e4/b5ed3789.jpg","comment_is_top":false,"comment_ctime":1559795826,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"18739665010","product_id":100015201,"comment_content":"麻烦请教下两个问题: 第一个是docker虽然宣称打包一次到处跑，实际上基于4.x内核的程序在3.x是跑不了的？所以其实是有限定条件的，这个限定条件是内核大版本相同吗？还是别的呢？    第二个问题是，容器对pid1之外的进程不可控，是指在容器中用命令启动这个进程后，无法结束这个进程吗？应该也不是，所以还是有点疑问","like_count":4,"discussions":[{"author":{"id":1514175,"avatar":"https://static001.geekbang.org/account/avatar/00/17/1a/bf/872c2289.jpg","nickname":"Geek_Fang","note":"","ucode":"CCF0DBC6AC247F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":356913,"discussion_content":"可能是docker ps无法查看到内部进程，无法通过docker进行管理","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1615706884,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2874917,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/de/25/c4894f61.jpg","nickname":"郝文杰","note":"","ucode":"59D2F989335F25","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541455,"discussion_content":"只要不是强依赖某个内核版本的 也可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640375389,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":25709,"user_name":"谷晓铭","can_delete":false,"product_type":"c1","uid":1228067,"ip_address":"","ucode":"581D4640C5E66A","user_header":"https://static001.geekbang.org/account/avatar/00/12/bd/23/969c6c6d.jpg","comment_is_top":false,"comment_ctime":1537419058,"is_pvip":false,"replies":[{"id":"9347","content":"当然是，因为PaaS啊","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1537419849,"ip_address":"","comment_id":25709,"utype":1}],"discussion_count":3,"race_medal":0,"score":"18717288242","product_id":100015201,"comment_content":"有两个关于cgroups和namespace的问题：<br>  1）这两种技术在其他OS（FreeBSD&#47;Solaris&#47;Windows&#47;MacOS）上是否存在？<br>  2）Linux上是什么时候支持这两种技术的？如果很早就有的话，为什么容器技术最近几年才火起来？<br><br>有一个引申问题：容器时代还需要虚拟机吗？","like_count":4,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424398,"discussion_content":"当然是，因为PaaS啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537419849,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":2,"child_discussions":[{"author":{"id":2271382,"avatar":"https://static001.geekbang.org/account/avatar/00/22/a8/96/f87ea7d8.jpg","nickname":"🦖","note":"","ucode":"9E73699EC4A734","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":571241,"discussion_content":"有一点疑问，其他OS（FreeBSD/Solaris/Windows/MacOS）上存在cgroups和namespace，为什么Windows和MacOS上的docker要基于Linux虚拟机，而不是直接使用对应系统的cgroups和namespace技术实现docker呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652151897,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":424398,"ip_address":""},"score":571241,"extra":""},{"author":{"id":1295609,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJRFRX8kNzNet7FibNvtavbVpAwK09AhIhrib9k762qWtH6mre8ickP7hM5mgZC4ytr8NnmIfmAhxMSQ/132","nickname":"老大不小","note":"","ucode":"35BCDD3CB13467","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2271382,"avatar":"https://static001.geekbang.org/account/avatar/00/22/a8/96/f87ea7d8.jpg","nickname":"🦖","note":"","ucode":"9E73699EC4A734","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572099,"discussion_content":"大佬，有答案了说下啊，同样有这个问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652602295,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":571241,"ip_address":""},"score":572099,"extra":""}]}]},{"had_liked":false,"id":24204,"user_name":"abc","can_delete":false,"product_type":"c1","uid":1198332,"ip_address":"","ucode":"A4E989E85848D9","user_header":"https://static001.geekbang.org/account/avatar/00/12/48/fc/f46062b6.jpg","comment_is_top":false,"comment_ctime":1536843650,"is_pvip":false,"replies":[{"id":"8880","content":"所以不要把hook写成后台进程","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1536889040,"ip_address":"","comment_id":24204,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18716712834","product_id":100015201,"comment_content":"<br>在容器内，除了pid=1的进程，其他进程是不受docker控制的，如果这样的话，请问pod生命周期中poststart,prestop这些钩子还能用吗？","like_count":4,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423879,"discussion_content":"所以不要把hook写成后台进程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536889040,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22681,"user_name":"岁月～静好","can_delete":false,"product_type":"c1","uid":1218348,"ip_address":"","ucode":"A639FDFE5EEC54","user_header":"https://static001.geekbang.org/account/avatar/00/12/97/2c/28f11cd9.jpg","comment_is_top":false,"comment_ctime":1535934344,"is_pvip":false,"replies":[{"id":"8167","content":"没错，下一篇有详细总结","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1535939530,"ip_address":"","comment_id":22681,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18715803528","product_id":100015201,"comment_content":"容器和虚拟机比不仅仅是少了一层操作系统那么简单啊","like_count":4,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423223,"discussion_content":"没错，下一篇有详细总结","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535939530,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":265019,"user_name":"书木子谢明","can_delete":false,"product_type":"c1","uid":1259879,"ip_address":"","ucode":"3090C080A570BE","user_header":"https://static001.geekbang.org/account/avatar/00/13/39/67/743128f7.jpg","comment_is_top":false,"comment_ctime":1606736421,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14491638309","product_id":100015201,"comment_content":"个人理解：docker甚至都不是一个“东西”，仅仅是创建进程时对进程的一系列设置","like_count":3},{"had_liked":false,"id":30453,"user_name":"haiker","can_delete":false,"product_type":"c1","uid":1131183,"ip_address":"","ucode":"4C4C799CACCF79","user_header":"https://static001.geekbang.org/account/avatar/00/11/42/af/8c37ca95.jpg","comment_is_top":false,"comment_ctime":1538872627,"is_pvip":false,"replies":[{"id":"11002","content":"容器里运行过别的进程也很正常啊","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1538879269,"ip_address":"","comment_id":30453,"utype":1}],"discussion_count":1,"race_medal":1,"score":"14423774515","product_id":100015201,"comment_content":"老师，&#47;bin&#47;bash是pid是1能理解，但是ps的pid为啥是10，不是2呢？","like_count":3,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426011,"discussion_content":"容器里运行过别的进程也很正常啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538879269,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23551,"user_name":"llitfkitfk@dockone.io","can_delete":false,"product_type":"c1","uid":1126240,"ip_address":"","ucode":"B026819FF3F5C4","user_header":"https://static001.geekbang.org/account/avatar/00/11/2f/60/e3c28130.jpg","comment_is_top":false,"comment_ctime":1536479238,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14421381126","product_id":100015201,"comment_content":"作者你好 <br>我是docker爱好者 从15年就开始用docker<br>也是docker swarm的忠实粉<br><br>在telegram 管理及维护有一个2000+的docker群组https:&#47;&#47;t.me&#47;dockertutorial<br><br>请问作者 我能否将文章分享到该Docker群组<br>(看了作者的文章实在是受益匪浅)希望让更多的Docker爱好者读到如此好文<br>当然分享时也会添加购买链接<br><br>期待作者的回复","like_count":3},{"had_liked":false,"id":22968,"user_name":"每一段路都是一种领悟","can_delete":false,"product_type":"c1","uid":1123452,"ip_address":"","ucode":"B23F0D4B02197B","user_header":"https://static001.geekbang.org/account/avatar/00/11/24/7c/b76ad65d.jpg","comment_is_top":false,"comment_ctime":1536076517,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14420978405","product_id":100015201,"comment_content":"实际上，docker镜像都是一些可执行的程序，容器是程序执行后的进程","like_count":3},{"had_liked":false,"id":22835,"user_name":"宝爷","can_delete":false,"product_type":"c1","uid":1153664,"ip_address":"","ucode":"DD517FA7EB59AB","user_header":"https://static001.geekbang.org/account/avatar/00/11/9a/80/2bf8d7fc.jpg","comment_is_top":false,"comment_ctime":1535991932,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14420893820","product_id":100015201,"comment_content":"所以这就是为什么一个容器只跑一个进程了，本质还是这个进程，容器只是一个抽象概念，右侧的图我觉得docker engine和容器应该是一个层级的东西，虽然容器是由docker engine启动的，但在运行时都是独立的进程。","like_count":3},{"had_liked":false,"id":238720,"user_name":"Shen","can_delete":false,"product_type":"c1","uid":1182167,"ip_address":"","ucode":"CFF7609A754392","user_header":"https://static001.geekbang.org/account/avatar/00/12/09/d7/ffe7b0bf.jpg","comment_is_top":false,"comment_ctime":1596272044,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10186206636","product_id":100015201,"comment_content":"1. docker engine这一层实际是没有的，可以画一个透明层，把上半部分覆盖","like_count":3},{"had_liked":false,"id":84316,"user_name":"招谁惹谁","can_delete":false,"product_type":"c1","uid":1014054,"ip_address":"","ucode":"F4B43C8C098E96","user_header":"https://static001.geekbang.org/account/avatar/00/0f/79/26/9ac98036.jpg","comment_is_top":false,"comment_ctime":1554825822,"is_pvip":false,"replies":[{"id":"31583","content":"完全是另一套机制了","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1555697911,"ip_address":"","comment_id":84316,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10144760414","product_id":100015201,"comment_content":"namespace 是linux的概念，那么docker在win中又是怎么运行的呢？","like_count":2,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446315,"discussion_content":"完全是另一套机制了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555697911,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":35219,"user_name":"Hurt","can_delete":false,"product_type":"c1","uid":1050946,"ip_address":"","ucode":"DCE7428CCF08EF","user_header":"https://static001.geekbang.org/account/avatar/00/10/09/42/1f762b72.jpg","comment_is_top":false,"comment_ctime":1540465592,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10130400184","product_id":100015201,"comment_content":"回过头了 再从头再学一遍 真的赞👍👍","like_count":2},{"had_liked":false,"id":23529,"user_name":"A 断了线的风筝","can_delete":false,"product_type":"c1","uid":1227670,"ip_address":"","ucode":"242C1EBB1F68A7","user_header":"https://static001.geekbang.org/account/avatar/00/12/bb/96/d1d8f640.jpg","comment_is_top":false,"comment_ctime":1536468301,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10126402893","product_id":100015201,"comment_content":"docker 容器之间是隔离的、每个启动docker 容器都会分配一个 namespace、","like_count":2},{"had_liked":false,"id":22724,"user_name":"asdf100","can_delete":false,"product_type":"c1","uid":1043738,"ip_address":"","ucode":"39D8D71453E575","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/1a/ce7f7d54.jpg","comment_is_top":false,"comment_ctime":1535940197,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10125874789","product_id":100015201,"comment_content":"namespace是用来隔离容器运行环境的，而cgroup是用来限制隔离容器使用资源的","like_count":2},{"had_liked":false,"id":320797,"user_name":"追风筝的人","can_delete":false,"product_type":"c1","uid":1488020,"ip_address":"","ucode":"2993D60F94C396","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/94/2796de72.jpg","comment_is_top":false,"comment_ctime":1636514175,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5931481471","product_id":100015201,"comment_content":"在理解了 Namespace 的工作方式之后，你就会明白，跟真实存在的虚拟机不同，在使用 Docker 的时候，并没有一个真正的“Docker 容器”运行在宿主机里面。Docker 项目帮助用户启动的，还是原来的应用进程，只不过在创建这些进程时，Docker 为它们加上了各种各样的 Namespace 参数。这时，这些进程就会觉得自己是各自 PID Namespace 里的第 1 号进程，只能看到各自 Mount Namespace 里挂载的目录和文件，只能访问到各自 Network Namespace 里的网络设备，就仿佛运行在一个个“容器”里面，与世隔绝。","like_count":1},{"had_liked":false,"id":270257,"user_name":"络石","can_delete":false,"product_type":"c1","uid":1677237,"ip_address":"","ucode":"B0FCF8156EB2AB","user_header":"https://static001.geekbang.org/account/avatar/00/19/97/b5/431b2561.jpg","comment_is_top":false,"comment_ctime":1609036676,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5904003972","product_id":100015201,"comment_content":"初步理解，docker像是地球上成长起来的一个普通村落(进程)，特殊的在于这个村五脏俱全，网络，设备，等等都是一个姓，都有自己的首领，首领进程编号1。","like_count":1,"discussions":[{"author":{"id":2754963,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/hSGZCTvHTKaJH5WibTcC15qDKYpGdgdMFEV6mwcslOFoADP6skWCpBiae2ykkaBFDaexEY9xXBPhZMAGmj1nW8vA/132","nickname":"进","note":"","ucode":"B971F478E3BE8E","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589678,"discussion_content":"这个理解形象","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665231811,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"湖北"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74081,"user_name":"田奇","can_delete":false,"product_type":"c1","uid":1006349,"ip_address":"","ucode":"4D7E9FF9D7E584","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5b/0d/597cfa28.jpg","comment_is_top":false,"comment_ctime":1552100468,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5847067764","product_id":100015201,"comment_content":"如果写了一个多进程服务器，那么从容器启动该服务器，结果这个服务器又创建了很多子进程，那么这些子进程是否还受到该容器的限制？","like_count":1,"discussions":[{"author":{"id":1597620,"avatar":"https://static001.geekbang.org/account/avatar/00/18/60/b4/430acd7f.jpg","nickname":"激水漂石","note":"","ucode":"C00B21DE4103E3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349271,"discussion_content":"感觉是会受到你分配给容器的资源多少的限制","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613034157,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23523,"user_name":"kkgo","can_delete":false,"product_type":"c1","uid":1199356,"ip_address":"","ucode":"AFCCBFD96CFA21","user_header":"https://static001.geekbang.org/account/avatar/00/12/4c/fc/0e887697.jpg","comment_is_top":false,"comment_ctime":1536465406,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"5831432702","product_id":100015201,"comment_content":"默认的namespace有，pid,net,ipc,mnt,uts,user","like_count":1},{"had_liked":false,"id":23124,"user_name":"在路上","can_delete":false,"product_type":"c1","uid":1143372,"ip_address":"","ucode":"335960F683C23C","user_header":"https://static001.geekbang.org/account/avatar/00/11/72/4c/4d636a23.jpg","comment_is_top":false,"comment_ctime":1536160269,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5831127565","product_id":100015201,"comment_content":"容器中pid=1的第一号进程，在宿主机外面能查到吗？和宿主机有无对应关系？","like_count":1,"discussions":[{"author":{"id":1708238,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/10/ce/1532559d.jpg","nickname":"酒酿丸子不甜","note":"","ucode":"B8F430B80DA281","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541801,"discussion_content":"可以查到的，里面的pid是namespqce 通过pid虚拟化的一个1，可以通过docker inspect 找到宿主机真正的pid,进行反查","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1640572376,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23091,"user_name":"^_^","can_delete":false,"product_type":"c1","uid":1088001,"ip_address":"","ucode":"EE5DAC03CFC2EE","user_header":"https://static001.geekbang.org/account/avatar/00/10/9a/01/1489f98d.jpg","comment_is_top":false,"comment_ctime":1536149464,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5831116760","product_id":100015201,"comment_content":"虚拟机是硬件级别的抽象，容器是应用级别的抽象。","like_count":1},{"had_liked":false,"id":22943,"user_name":"择动","can_delete":false,"product_type":"c1","uid":1038386,"ip_address":"","ucode":"09FB38D0F89E49","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d8/32/fab70236.jpg","comment_is_top":false,"comment_ctime":1536059978,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5831027274","product_id":100015201,"comment_content":"写的好好哦，圈粉!","like_count":1},{"had_liked":false,"id":22803,"user_name":"Tank","can_delete":false,"product_type":"c1","uid":1007106,"ip_address":"","ucode":"652A770CD3908B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/02/b50560ac.jpg","comment_is_top":false,"comment_ctime":1535979851,"is_pvip":false,"replies":[{"id":"8237","content":"在servce部分会重点讲解","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1536027203,"ip_address":"","comment_id":22803,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5830947147","product_id":100015201,"comment_content":"你好，我在打建K8S集群后在master 节点安装了dashboard ，采用kubectl proxy本地可以访问，但是我想要在集群外访问时，该如何做呢。我看资料说ingress可以实现，但不知道如何下手，不知是否可以提供demo","like_count":1,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423271,"discussion_content":"在servce部分会重点讲解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536027203,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1529822,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/GkMk4gBlfZfhDE2btGKnGxCDsOVgkahKVRpYHU2C7uUQTHIWicPOPVQQPMDltZvo2iafsWjjxdR1IoqiaKuOSunYw/132","nickname":"Geek_267887","note":"","ucode":"58A40D03329385","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383242,"discussion_content":"还有阿里的kit-connect 这个插件可以了解一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626008960,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22728,"user_name":"asdf100","can_delete":false,"product_type":"c1","uid":1043738,"ip_address":"","ucode":"39D8D71453E575","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/1a/ce7f7d54.jpg","comment_is_top":false,"comment_ctime":1535940962,"is_pvip":false,"replies":[{"id":"8245","content":"不存在一般是镜像的问题，换一个试试？","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1536027822,"ip_address":"","comment_id":22728,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5830908258","product_id":100015201,"comment_content":"docker run -it busybox &#47;bin&#47;sh<br>我这里为什么执行ps命令提示不存在这个命令呢？ 版本18.06.1","like_count":1,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423240,"discussion_content":"不存在一般是镜像的问题，换一个试试？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536027822,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22725,"user_name":"asdf100","can_delete":false,"product_type":"c1","uid":1043738,"ip_address":"","ucode":"39D8D71453E575","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/1a/ce7f7d54.jpg","comment_is_top":false,"comment_ctime":1535940322,"is_pvip":false,"replies":[{"id":"8246","content":"不是的，随机名字","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1536027835,"ip_address":"","comment_id":22725,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5830907618","product_id":100015201,"comment_content":"当创建一个容器的时候，会生成容器ID,这个容器ID和命名空间什么关系？是命名空间名字吗？","like_count":1,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423238,"discussion_content":"不是的，随机名字","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536027835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22706,"user_name":"eason2017","can_delete":false,"product_type":"c1","uid":1009422,"ip_address":"","ucode":"E070BA624FA490","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/0e/c77ad9b1.jpg","comment_is_top":false,"comment_ctime":1535936751,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5830904047","product_id":100015201,"comment_content":"深入浅出，厉害，学习👍","like_count":1},{"had_liked":false,"id":22673,"user_name":"Maktub","can_delete":false,"product_type":"c1","uid":1003234,"ip_address":"","ucode":"608125A573777D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4e/e2/fb5ad8e5.jpg","comment_is_top":false,"comment_ctime":1535933551,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5830900847","product_id":100015201,"comment_content":"那CGroups是什么没有讲呀","like_count":1},{"had_liked":false,"id":359081,"user_name":"jian","can_delete":false,"product_type":"c1","uid":1185102,"ip_address":"广东","ucode":"21CDBBB8000F0C","user_header":"https://static001.geekbang.org/account/avatar/00/12/15/4e/4636a81d.jpg","comment_is_top":false,"comment_ctime":1665224344,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1665224344","product_id":100015201,"comment_content":"请教一下老师，进程就会觉得自己是各自 PID Namespace 里的第 1 号进程，看到各自内的存和CPU，<br>但是为什么比较少看到各自的磁盘呢？","like_count":0},{"had_liked":false,"id":358344,"user_name":"张力","can_delete":false,"product_type":"c1","uid":1854207,"ip_address":"广东","ucode":"0B5DD5BC174A1D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/CvplgFqBmWqT7DUtE7zCFApPic2aLIsy2uSf9NmwicgPiatd0KumiaKBJpnn36MyhBlADkZYGvnWfr3l8EiaYGpo3EA/132","comment_is_top":false,"comment_ctime":1664237156,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1664237156","product_id":100015201,"comment_content":"接上次留言，我在一个主机上启用多个容器，然后部署我的应用，我怎么保证我在容器中映射到主机端口都是一致的呢？比如我启动一个tomcat需要给他分配8001端口，一个主机内的容器我怎么保证都能给他分配到8001端口。因为端口跟进程也是一样的，拥有的号都是唯一的","like_count":0},{"had_liked":false,"id":358343,"user_name":"张力","can_delete":false,"product_type":"c1","uid":1854207,"ip_address":"广东","ucode":"0B5DD5BC174A1D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/CvplgFqBmWqT7DUtE7zCFApPic2aLIsy2uSf9NmwicgPiatd0KumiaKBJpnn36MyhBlADkZYGvnWfr3l8EiaYGpo3EA/132","comment_is_top":false,"comment_ctime":1664236992,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1664236992","product_id":100015201,"comment_content":"虚拟机是使用虚拟化硬件资源将主机的内存，硬盘，io和cpu分配出来给虚拟机占用<br>docker容器是使用namespace对进程视图进行修改，使其只能看到自己的目录和文件，看不到其他进程下的资源信息<br>按照这样的理解来看虚拟机分配相应的硬件资源再使用的时候是真正占用了主机的硬件资源的，而docker是使用namespace对进程视图修改起到了类似虚拟化的作用，因为进程号是唯一的。他使用namespace模拟出不同进程使其认为拥有同一个进程id，使用的是主机资源，这样来看容器想对虚拟机来说不会造成资源分配的浪费","like_count":0},{"had_liked":false,"id":356039,"user_name":"仗剑天涯","can_delete":false,"product_type":"c1","uid":1095920,"ip_address":"广东","ucode":"5FFF74D866F33B","user_header":"https://static001.geekbang.org/account/avatar/00/10/b8/f0/1206a6d4.jpg","comment_is_top":false,"comment_ctime":1661931058,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661931058","product_id":100015201,"comment_content":"总结：<br>1、容器仅是启动时利用宿主机clone的进程，传入不同的namespace 实现的宿主机进程，通过ns实现了障眼法，这样容器内部仅看到自己可以看到的资源<br>2、虚拟机模式是硬件级别的虚拟，在此基础上装真实的操作系统，容器只是启动时docker创建的宿主机进程，利用namespace机制实现各种资源隔离","like_count":0},{"had_liked":false,"id":354403,"user_name":"樊海涛","can_delete":false,"product_type":"c1","uid":1323249,"ip_address":"北京","ucode":"0B04D5985EE0E1","user_header":"https://static001.geekbang.org/account/avatar/00/14/30/f1/bf7fd8d2.jpg","comment_is_top":false,"comment_ctime":1660361346,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1660361346","product_id":100015201,"comment_content":"感觉里面讲的每一段话都值得被记录下来","like_count":0},{"had_liked":false,"id":351418,"user_name":"cccccc","can_delete":false,"product_type":"c1","uid":1205724,"ip_address":"","ucode":"BDEFB01B75EBC1","user_header":"https://static001.geekbang.org/account/avatar/00/12/65/dc/d0c58ce5.jpg","comment_is_top":false,"comment_ctime":1657778247,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1657778247","product_id":100015201,"comment_content":"一个容器只运行一个应用，而容器只是宿主机上的一个特殊进程。比如我的多个前端项目，分别都启动一个容器去运行，那和原来在宿主机启动一个nginx进程去运行，这两种方式相比，容器的方式是隔离性更好，但多开了几份份nginx，会不会导致更多的进程上的切换造成性能上的损失","like_count":0,"discussions":[{"author":{"id":1218129,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/51/dc51d2d4.jpg","nickname":"风之翼","note":"","ucode":"FD524CE1530E9A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587139,"discussion_content":"你要这么考虑：将来你要做扩缩容的时候，可以针对不同 ng 集群的需要，docker可以帮你快速精准处理。另外你把多个前端项目放在一个ng服务上，本身就有高耦合的风险，ng一挂，所有前端都得跟着出问题，拆出来有助于程序的健壮性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662814876,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350347,"user_name":"不忘初心","can_delete":false,"product_type":"c1","uid":1117880,"ip_address":"","ucode":"5FE187B3F4EC39","user_header":"https://static001.geekbang.org/account/avatar/00/11/0e/b8/d91adbb3.jpg","comment_is_top":false,"comment_ctime":1656839577,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1656839577","product_id":100015201,"comment_content":"给容器内的进程设置pid=1的意义是什么呢？大多数应用程序运行的时候应该不关注pid是多少吧","like_count":0},{"had_liked":false,"id":350149,"user_name":"Geek_129f23","can_delete":false,"product_type":"c1","uid":3042006,"ip_address":"","ucode":"3E5391486B7CB0","user_header":"","comment_is_top":false,"comment_ctime":1656599315,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1656599315","product_id":100015201,"comment_content":"Namespace障眼法指的是实际上实现了不同Namespace中进程的资源隔离吗？也就是说进程只能使用自己Namespace中定义的资源吗？","like_count":0},{"had_liked":false,"id":349216,"user_name":"学习吧技术储备","can_delete":false,"product_type":"c1","uid":1134700,"ip_address":"","ucode":"E3F5A59CE748AE","user_header":"https://static001.geekbang.org/account/avatar/00/11/50/6c/1b5d2c28.jpg","comment_is_top":false,"comment_ctime":1655806487,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655806487","product_id":100015201,"comment_content":"想麻烦问下，意思就是其实没有隔离，只是用了障眼法，让人觉得隔离了是吗","like_count":0},{"had_liked":false,"id":349085,"user_name":"yang   ོ","can_delete":false,"product_type":"c1","uid":2838206,"ip_address":"","ucode":"86880873733783","user_header":"https://static001.geekbang.org/account/avatar/00/2b/4e/be/5d39360f.jpg","comment_is_top":false,"comment_ctime":1655721398,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655721398","product_id":100015201,"comment_content":"讲的很浅显易懂<br>","like_count":0},{"had_liked":false,"id":345611,"user_name":"keep_it_real","can_delete":false,"product_type":"c1","uid":2055554,"ip_address":"","ucode":"F5057CAF752FF3","user_header":"https://static001.geekbang.org/account/avatar/00/1f/5d/82/81b2ba91.jpg","comment_is_top":false,"comment_ctime":1652431330,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1652431330","product_id":100015201,"comment_content":"Docker容器本质上并不是虚拟机，它只是将一个进程用限制条件的手段隔离开，本质上他们还是跑在同一个操作系统上。","like_count":0},{"had_liked":false,"id":342508,"user_name":"Nio","can_delete":false,"product_type":"c1","uid":1529642,"ip_address":"","ucode":"A1B8D3C01FB937","user_header":"https://static001.geekbang.org/account/avatar/00/17/57/2a/c6c95f37.jpg","comment_is_top":false,"comment_ctime":1650295384,"is_pvip":true,"discussion_count":0,"race_medal":4,"score":"1650295384","product_id":100015201,"comment_content":"所以是各种进程还是一样运行，只是不同沙盒加了不同的屏蔽约束吗？但是环境控制是怎么实现的呢？","like_count":0},{"had_liked":false,"id":342500,"user_name":"斐语","can_delete":false,"product_type":"c1","uid":1962270,"ip_address":"","ucode":"9649CC6AE6399C","user_header":"https://static001.geekbang.org/account/avatar/00/1d/f1/1e/92bd287c.jpg","comment_is_top":false,"comment_ctime":1650291375,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650291375","product_id":100015201,"comment_content":"这个专栏是我看过写得最好的，将深奥的原理在不失幽默的描述中，讲得通透淋漓，可见作者功底深厚；","like_count":0},{"had_liked":false,"id":336998,"user_name":"ken","can_delete":false,"product_type":"c1","uid":1631578,"ip_address":"","ucode":"164151B21C153F","user_header":"https://static001.geekbang.org/account/avatar/00/18/e5/5a/b7987ae1.jpg","comment_is_top":false,"comment_ctime":1646542147,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646542147","product_id":100015201,"comment_content":"可以理解把docker理解成一个后台服务进程吗？ 通过command的方式调用docker的api， 然后docker根据用户的请求创建相应的进程。 那么docker是如何关闭容器（进程）的呢？我的猜想是docker会注册保存自己所创建过的进程，并存放起。关闭容器的时候，找到容器进程的进程号 然后kill？","like_count":0},{"had_liked":false,"id":333711,"user_name":"sunEditor","can_delete":false,"product_type":"c1","uid":2640119,"ip_address":"","ucode":"B640A13401901B","user_header":"https://static001.geekbang.org/account/avatar/00/28/48/f7/0a207b41.jpg","comment_is_top":false,"comment_ctime":1644481507,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1644481507","product_id":100015201,"comment_content":"通过在k8s宿主机上的进程观察，容器本身就是一个进程，容器中的1号进程是容器进程的子进程。一号进程似乎就是容器的dockerfile中的CMD这个启动指令。容器中的所有进程在宿主机中都可见。而且在宿主机中和容器中观察进程，他们的pid是不一样的，这个两个的联系还需要学习。","like_count":0},{"had_liked":false,"id":330836,"user_name":"WESTWALL","can_delete":false,"product_type":"c1","uid":1434423,"ip_address":"","ucode":"295A030F9D3BF4","user_header":"https://static001.geekbang.org/account/avatar/00/15/e3/37/c132802f.jpg","comment_is_top":false,"comment_ctime":1642212703,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642212703","product_id":100015201,"comment_content":"在容器里跑的那个进程太惨了，就像是电影……《楚门的世界》，哈哈哈哈","like_count":0},{"had_liked":false,"id":329162,"user_name":"hcyycb","can_delete":false,"product_type":"c1","uid":1226968,"ip_address":"","ucode":"77FF6CA41F9E66","user_header":"https://static001.geekbang.org/account/avatar/00/12/b8/d8/f81b5604.jpg","comment_is_top":false,"comment_ctime":1641191061,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1641191061","product_id":100015201,"comment_content":"以前没看懂，现在回来看，在刷刷评论，感觉自己又懂了。","like_count":0},{"had_liked":false,"id":325286,"user_name":"Alex","can_delete":false,"product_type":"c1","uid":1134539,"ip_address":"","ucode":"11C598D0723D08","user_header":"https://static001.geekbang.org/account/avatar/00/11/4f/cb/ede92cd5.jpg","comment_is_top":false,"comment_ctime":1638890045,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638890045","product_id":100015201,"comment_content":"（1）用namespace做限制<br>（2）UTS,IPC, PID, Network, Mount, User6个namespace<br>","like_count":0},{"had_liked":false,"id":317912,"user_name":"TZY","can_delete":false,"product_type":"c1","uid":2540788,"ip_address":"","ucode":"D9250CFBCB8BCE","user_header":"https://static001.geekbang.org/account/avatar/00/26/c4/f4/9654bcd5.jpg","comment_is_top":false,"comment_ctime":1635049376,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1635049376","product_id":100015201,"comment_content":"那请问像cuda driver这种只能在宿主机上安装，容器内无法安装以及无法改成其他driver version的硬件驱动，应该怎么从资源隔离角度和这张图来理解？","like_count":0},{"had_liked":false,"id":317450,"user_name":"Eleven","can_delete":false,"product_type":"c1","uid":1168452,"ip_address":"","ucode":"FB4A0C8CA732BE","user_header":"https://static001.geekbang.org/account/avatar/00/11/d4/44/0ec958f4.jpg","comment_is_top":false,"comment_ctime":1634800925,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634800925","product_id":100015201,"comment_content":"去掉docker那一层，docker进程应该是和app A和app B并行的","like_count":0},{"had_liked":false,"id":315913,"user_name":"Geek_fightingDC","can_delete":false,"product_type":"c1","uid":1843027,"ip_address":"","ucode":"EF7F7316ADFF49","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83equSjO9AVmwhvyhTZzk6icNTSED9s1sUdFZSfqTHq2PmZ4MibMFX58C8qDW2a4cjiaFvAdiaRchsLz54g/132","comment_is_top":false,"comment_ctime":1634045082,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1634045082","product_id":100015201,"comment_content":"基于namespace和cgroup技术实现的进程隔离，是docker容器的本质，namespace可以让进程空间和network都&quot;隔离&quot;起来，从而创建出一个个容器。所以说容器的本质是进程，一个容器里面，只有一个进程是受控的。比如容器内的1号进程，它的pid在宿主机上并不是1，只是namespace让这个进程在隔离空间内的pid为1.这是clone系统调用传入一个pid参数即可。","like_count":0},{"had_liked":false,"id":311310,"user_name":"奔跑的小孩","can_delete":false,"product_type":"c1","uid":1304259,"ip_address":"","ucode":"0053193F7A9870","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/21uTMWr7bx5qMibp2hwmGvLbYuj5Aic2dqD3futlNo25eDGDt4t7zzN9cdnj7cVGwTot1U4AyADfWUpqjq1SicgWQ/132","comment_is_top":false,"comment_ctime":1631167779,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631167779","product_id":100015201,"comment_content":"容器的核心表现就是分清楚进程的界限，容器其实就通过定义的一组namespace实现不同进程之间的隔离，资源独享，它本质上也就是一个进程，他也相当于一个虚拟机的作用，只是一个运行在hyperviser上一个在docker engine上，都有自己的io、存储、网络信息等，可以理解为更轻量级的虚拟机","like_count":0},{"had_liked":false,"id":302851,"user_name":"周烨","can_delete":false,"product_type":"c1","uid":1355560,"ip_address":"","ucode":"6DAE79E4966CEF","user_header":"https://static001.geekbang.org/account/avatar/00/14/af/28/cc69ea4b.jpg","comment_is_top":false,"comment_ctime":1626406326,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626406326","product_id":100015201,"comment_content":"如果我从写个程序主进程里启动另一个进程，启动的新进程没有使用namespace，那么新的进程是否会被宿主机的其他进程看见并且交互？","like_count":0},{"had_liked":false,"id":302771,"user_name":"王大红","can_delete":false,"product_type":"c1","uid":1585718,"ip_address":"","ucode":"90C78C0F50738E","user_header":"https://static001.geekbang.org/account/avatar/00/18/32/36/10ad4d3e.jpg","comment_is_top":false,"comment_ctime":1626358855,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626358855","product_id":100015201,"comment_content":"docker容器的启动命令，可以看到其中除了制定namespace以外，还有workdir、address、container-binary、runtime-root、systemd-cgroup<br>docker-containerd-shim -namespace moby -workdir &#47;var&#47;lib&#47;docker&#47;containerd&#47;daemon&#47;io.containerd.runtime.v1.linux&#47;moby&#47;68d9d634b5e20b328b7c2fa96245ade658251ed31e905a9f18bcfb69120baa54 -address &#47;var&#47;run&#47;docker&#47;containerd&#47;docker-containerd.sock -containerd-binary &#47;usr&#47;bin&#47;docker-containerd -runtime-root &#47;var&#47;run&#47;docker&#47;runtime-runc -systemd-cgroup","like_count":0},{"had_liked":false,"id":298351,"user_name":"BIZ_DATA_1","can_delete":false,"product_type":"c1","uid":1655770,"ip_address":"","ucode":"EB1706A649ECE2","user_header":"","comment_is_top":false,"comment_ctime":1624032068,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1624032068","product_id":100015201,"comment_content":"在&#47;sys&#47;fs&#47;cgroup&#47;cpu&#47;下无法新建container目录怎么解决呢？报错：mkdir: cannot create directory &#39;container&#39;: Read-only file system","like_count":0},{"had_liked":false,"id":295152,"user_name":"Jacky","can_delete":false,"product_type":"c1","uid":1387735,"ip_address":"","ucode":"B259184BC9E7B7","user_header":"https://static001.geekbang.org/account/avatar/00/15/2c/d7/5b1b09fd.jpg","comment_is_top":false,"comment_ctime":1622274468,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1622274468","product_id":100015201,"comment_content":"恍然大悟，怪不得 docker比虚拟机轻量很多，原来是直接运行在主机上，只不过是加了限制而已。<br>那么是如何保证 同一个docker镜像文件在不同机器上都可以运行的呢？","like_count":0},{"had_liked":false,"id":288345,"user_name":"Ethan New","can_delete":false,"product_type":"c1","uid":2063962,"ip_address":"","ucode":"9CA2EF39E58030","user_header":"https://static001.geekbang.org/account/avatar/00/1f/7e/5a/da39f489.jpg","comment_is_top":false,"comment_ctime":1618415605,"is_pvip":true,"discussion_count":0,"race_medal":4,"score":"1618415605","product_id":100015201,"comment_content":"“所以说，容器，其实是一种特殊的进程而已。” 这句话感觉不对呀，上面说了容器划分了进程的边界，进程是运行在容器内部的，现在又怎么说容器是进程？这就矛盾了。容器是逻辑上的，而进程是实实在在存在的。","like_count":0},{"had_liked":false,"id":288216,"user_name":"不明真相的群众","can_delete":false,"product_type":"c1","uid":2267730,"ip_address":"","ucode":"046A7D345171B8","user_header":"https://static001.geekbang.org/account/avatar/00/22/9a/52/93416b65.jpg","comment_is_top":false,"comment_ctime":1618367847,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1618367847","product_id":100015201,"comment_content":"看了正文，再把前面小伙伴的留言看了，收获满满","like_count":0},{"had_liked":false,"id":287821,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1194572,"ip_address":"","ucode":"FBFAE23E8E48B7","user_header":"https://static001.geekbang.org/account/avatar/00/12/3a/4c/b6200773.jpg","comment_is_top":false,"comment_ctime":1618186316,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618186316","product_id":100015201,"comment_content":"不知不觉开始想像自己多么牛逼的样子了！啊哈哈哈哈哈！！","like_count":0},{"had_liked":false,"id":284329,"user_name":"菠萝吹雪—Code","can_delete":false,"product_type":"c1","uid":1650378,"ip_address":"","ucode":"A5B2FC661EE17D","user_header":"https://static001.geekbang.org/account/avatar/00/19/2e/ca/469f7266.jpg","comment_is_top":false,"comment_ctime":1616169687,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1616169687","product_id":100015201,"comment_content":"Docker是逻辑上隔离，不是物理隔离","like_count":0},{"had_liked":false,"id":283327,"user_name":"Geek_Fang","can_delete":false,"product_type":"c1","uid":1514175,"ip_address":"","ucode":"CCF0DBC6AC247F","user_header":"https://static001.geekbang.org/account/avatar/00/17/1a/bf/872c2289.jpg","comment_is_top":false,"comment_ctime":1615707561,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615707561","product_id":100015201,"comment_content":"container is just special process in host OS","like_count":0},{"had_liked":false,"id":282753,"user_name":"小科蜜","can_delete":false,"product_type":"c1","uid":2194303,"ip_address":"","ucode":"E81B6DBB603AFC","user_header":"https://static001.geekbang.org/account/avatar/00/21/7b/7f/27ae9b63.jpg","comment_is_top":false,"comment_ctime":1615388916,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615388916","product_id":100015201,"comment_content":"容器的本质就是进程","like_count":0},{"had_liked":false,"id":280042,"user_name":"backlash","can_delete":false,"product_type":"c1","uid":1628794,"ip_address":"","ucode":"EB07757A86ED53","user_header":"https://static001.geekbang.org/account/avatar/00/18/da/7a/0782a666.jpg","comment_is_top":false,"comment_ctime":1614064222,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1614064222","product_id":100015201,"comment_content":"1 linux下的namespace技术, 有 pid ipc network mount user 来对进程进行障眼法操作。<br> 容器就是一种特殊的进程(通过调用系统函数clone()时加上一组namespace参数)","like_count":0,"discussions":[{"author":{"id":2271382,"avatar":"https://static001.geekbang.org/account/avatar/00/22/a8/96/f87ea7d8.jpg","nickname":"🦖","note":"","ucode":"9E73699EC4A734","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571278,"discussion_content":"还有UTS和Cgroup","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652167220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":278760,"user_name":"Stony.修行僧","can_delete":false,"product_type":"c1","uid":1061277,"ip_address":"","ucode":"0F2368F7D93E4A","user_header":"https://static001.geekbang.org/account/avatar/00/10/31/9d/daad92d2.jpg","comment_is_top":false,"comment_ctime":1613299556,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1613299556","product_id":100015201,"comment_content":"如果比尔盖次是1号员工，Linus 则是0号员工","like_count":0},{"had_liked":false,"id":277989,"user_name":"亚","can_delete":false,"product_type":"c1","uid":1445123,"ip_address":"","ucode":"CDF4DFC3F3619A","user_header":"https://static001.geekbang.org/account/avatar/00/16/0d/03/e59341b4.jpg","comment_is_top":false,"comment_ctime":1612690707,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1612690707","product_id":100015201,"comment_content":"既然是障眼法，如果其他docker内的进程异常，内存溢出，或者占用过高的cpu，会影响其他docker的进程吗","like_count":0,"discussions":[{"author":{"id":2543101,"avatar":"https://static001.geekbang.org/account/avatar/00/26/cd/fd/9122de17.jpg","nickname":"warning","note":"","ucode":"89B7933979F813","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389387,"discussion_content":"想请问，某个服务的namespace能否更换，求教","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629258345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1597620,"avatar":"https://static001.geekbang.org/account/avatar/00/18/60/b4/430acd7f.jpg","nickname":"激水漂石","note":"","ucode":"C00B21DE4103E3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349272,"discussion_content":"会影响同一个机器下的其他docker进程，就好比你有个进程把cpu吃完了，其他的就跑不动了，所以docker里的应用最好不要太复杂\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613034353,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":277171,"user_name":"dribblejj","can_delete":false,"product_type":"c1","uid":2434008,"ip_address":"","ucode":"D10CF2CE850CEB","user_header":"","comment_is_top":false,"comment_ctime":1612299680,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612299680","product_id":100015201,"comment_content":"这章写的很可爱","like_count":0},{"had_liked":false,"id":265018,"user_name":"书木子谢明","can_delete":false,"product_type":"c1","uid":1259879,"ip_address":"","ucode":"3090C080A570BE","user_header":"https://static001.geekbang.org/account/avatar/00/13/39/67/743128f7.jpg","comment_is_top":false,"comment_ctime":1606736321,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606736321","product_id":100015201,"comment_content":"学习完这节课的理解，docker甚至都不是一个“东西”","like_count":0},{"had_liked":false,"id":258398,"user_name":"Paul jyj","can_delete":false,"product_type":"c1","uid":1033919,"ip_address":"","ucode":"A0A3038AD9C243","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c6/bf/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1604409386,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604409386","product_id":100015201,"comment_content":"回答思考题1 我觉得这么画比较精确。容器是帮助每个进程在启动的时候指定 NameSpace，横向支持的能力。","like_count":0},{"had_liked":false,"id":258372,"user_name":"Geek_f309ca","can_delete":false,"product_type":"c1","uid":1635588,"ip_address":"","ucode":"E656C6A4AC3795","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/mib9kN41T9grP3g7gkvLnqH8rFyRs2W2CAT5tibVy1k5S8BZjT3P7kWHpAfOPiaWryXM1jtMpvl4HytXIYTyLmPhQ/132","comment_is_top":false,"comment_ctime":1604401168,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1604401168","product_id":100015201,"comment_content":"老师，今天面试 问了一个问题：是不是理论上， 可以把目前所有的应用服务，全部移植到容器里面运行？","like_count":0,"discussions":[{"author":{"id":2271382,"avatar":"https://static001.geekbang.org/account/avatar/00/22/a8/96/f87ea7d8.jpg","nickname":"🦖","note":"","ucode":"9E73699EC4A734","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571279,"discussion_content":"感觉好像 理论是的？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652167713,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":258113,"user_name":"Geek_6a11b8","can_delete":false,"product_type":"c1","uid":2133832,"ip_address":"","ucode":"8279F0D6329FA5","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/RxZc4ZGUwpUp5grZqJEtjgWXTgMicjmQsQByACCAmuUibJ6NZsI90IYiaOwEejy3TiaxEb2BbByve1dicNnGRgicFtFw/132","comment_is_top":false,"comment_ctime":1604302531,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1604302531","product_id":100015201,"comment_content":"老师，虚拟机和容器的区别还有一点没懂，容器中进程实际运行在宿主机上，只是用cgroup和namespace进行限制，那到底有没有像虚拟机一样启动一个os，怎么做到容器中进程的运行环境是镜像中指定的环境呢","like_count":0,"discussions":[{"author":{"id":2754963,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/hSGZCTvHTKaJH5WibTcC15qDKYpGdgdMFEV6mwcslOFoADP6skWCpBiae2ykkaBFDaexEY9xXBPhZMAGmj1nW8vA/132","nickname":"进","note":"","ucode":"B971F478E3BE8E","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589679,"discussion_content":"我也想知道，之前提到都是clone方法创建独立命名空间的进程，那这样的话.docker build时.为啥还需要镜像的操作系统文件，直接用应用程序及依赖项就应该足够了呀？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665232181,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"湖北"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2271382,"avatar":"https://static001.geekbang.org/account/avatar/00/22/a8/96/f87ea7d8.jpg","nickname":"🦖","note":"","ucode":"9E73699EC4A734","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571280,"discussion_content":"因为容器运行是使用了镜像里打包的源文件系统？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652167797,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":257488,"user_name":"Geek_678f0e","can_delete":false,"product_type":"c1","uid":2277026,"ip_address":"","ucode":"2B54FE4BC17E9C","user_header":"","comment_is_top":false,"comment_ctime":1603987658,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603987658","product_id":100015201,"comment_content":"梳理的清晰～","like_count":0},{"had_liked":false,"id":244381,"user_name":"Heaven","can_delete":false,"product_type":"c1","uid":1694207,"ip_address":"","ucode":"FA33FBCC66C911","user_header":"https://static001.geekbang.org/account/avatar/00/19/d9/ff/b23018a6.jpg","comment_is_top":false,"comment_ctime":1598498855,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1598498855","product_id":100015201,"comment_content":"容器应该是在进程运行的外面,包裹上了Namespaces和Cgroup,来做到了容器化的","like_count":0,"discussions":[{"author":{"id":2543101,"avatar":"https://static001.geekbang.org/account/avatar/00/26/cd/fd/9122de17.jpg","nickname":"warning","note":"","ucode":"89B7933979F813","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389388,"discussion_content":"请问第一次包裹上了namespace后，还能否改变namespace","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629258416,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":243912,"user_name":"nora","can_delete":false,"product_type":"c1","uid":1206539,"ip_address":"","ucode":"3A3EABF27D0261","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/0b/780b0aac.jpg","comment_is_top":false,"comment_ctime":1598325118,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598325118","product_id":100015201,"comment_content":"ps 的那个例子中，ps进程的PID为什么是10而不是2？<br> <br>10 root 0:00 ps","like_count":0},{"had_liked":false,"id":234952,"user_name":"windsor","can_delete":false,"product_type":"c1","uid":1120252,"ip_address":"","ucode":"ACCEDFAC248BC7","user_header":"https://static001.geekbang.org/account/avatar/00/11/17/fc/be4a343b.jpg","comment_is_top":false,"comment_ctime":1594857851,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594857851","product_id":100015201,"comment_content":"容器的原理如右侧图，但是实际使用时还是需要操作系统镜像作为基础。这个图上没体现。这个画出来是否和左侧图又类似了？","like_count":0},{"had_liked":false,"id":234670,"user_name":"kuke","can_delete":false,"product_type":"c1","uid":1215317,"ip_address":"","ucode":"5E9E8BC1C8F706","user_header":"https://static001.geekbang.org/account/avatar/00/12/8b/55/af71fbe8.jpg","comment_is_top":false,"comment_ctime":1594771683,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594771683","product_id":100015201,"comment_content":"实现一个多租户的学校管理系统，docker给每个租户都分配一个二级域名，其实底层都是同一套系统，只不过用对应的学校编号隔离了学校的信息，每套系统都有admin账号，就像只有自己一个学校在用这套系统。虚拟机是给每个学校安装一套系统，隔离性和安全性更高。","like_count":0},{"had_liked":false,"id":234586,"user_name":"Ace Wang","can_delete":false,"product_type":"c1","uid":2012053,"ip_address":"","ucode":"762F4D99066ED3","user_header":"https://static001.geekbang.org/account/avatar/00/1e/b3/95/2cb31290.jpg","comment_is_top":false,"comment_ctime":1594726915,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594726915","product_id":100015201,"comment_content":"讲得真好，学习了。","like_count":0},{"had_liked":false,"id":233843,"user_name":"开心哥","can_delete":false,"product_type":"c1","uid":1705468,"ip_address":"","ucode":"D44C1F03B23C5A","user_header":"https://static001.geekbang.org/account/avatar/00/1a/05/fc/bceb3f2b.jpg","comment_is_top":false,"comment_ctime":1594473728,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1594473728","product_id":100015201,"comment_content":"容器里能跑容器吗？能嵌套多少层？","like_count":0,"discussions":[{"author":{"id":1597620,"avatar":"https://static001.geekbang.org/account/avatar/00/18/60/b4/430acd7f.jpg","nickname":"激水漂石","note":"","ucode":"C00B21DE4103E3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349274,"discussion_content":"两层的，我玩过，嵌套多了，你编排会很困难吧，作者有这方面经验么，我个人觉得能少嵌套少嵌套，资源管理上面比较可控，网络拓扑也不会太复杂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613034641,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233709,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1594398201,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594398201","product_id":100015201,"comment_content":"原来神奇的Docker是玩转了Linux的 Namespace ！神奇！","like_count":0},{"had_liked":false,"id":233572,"user_name":"送过快递的码农","can_delete":false,"product_type":"c1","uid":1587666,"ip_address":"","ucode":"66EA81B3BADC73","user_header":"https://static001.geekbang.org/account/avatar/00/18/39/d2/845c0e39.jpg","comment_is_top":false,"comment_ctime":1594358166,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594358166","product_id":100015201,"comment_content":"我在生产中遇到个问题，请教一下。我这边需要调用一个https的服务，这个服务在本地运行可以调通。但是在服务器上在docker环境下运行，抛出了SSLException，个人感觉是证书问题。虽然后面是通过配置正向代理网关解决了这个问题，但是我心中不解。1.宿主机上面，如果有合适的证书，是不是在容器中校验会通过?2.docker的SSL的网络环境是不是有什么限制，比如会不会限制啥证书校验的？","like_count":0},{"had_liked":false,"id":232919,"user_name":"许长贵","can_delete":false,"product_type":"c1","uid":1963125,"ip_address":"","ucode":"FEFAD8EE6CB353","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/pcypf5euqnFpVkl3jCeIlRTyAyjrIAchR0EJvTXXfhaEicgjfbbT3xzibJTLUB8hnRhNwa5Uy4pS8mb5sPYGWvRg/132","comment_is_top":false,"comment_ctime":1594169659,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1594169659","product_id":100015201,"comment_content":"有一个疑惑困扰我很久，一个容器是一个进程，实际是在clone调用的时候指定了一个namespace参数，这个参数一次调用只能指定一个是吗？如果是的话那么对于一个容器而言，要实现网络，存储等资源的隔离是不是要调用多次clone指定不同的namespace参数？","like_count":0,"discussions":[{"author":{"id":1480914,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKzOaMIpbTBuxVhtsVQB3ibOAH5XBbVQuGtJUTP00QhYGJKZibpWHo4SB7kRJck3OtxZI4FJ4V8kI7Q/132","nickname":"Geek_574e6c","note":"","ucode":"C12E23EB7F9ACA","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366940,"discussion_content":"|  运算符\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618220691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":220500,"user_name":"开心噶花苞","can_delete":false,"product_type":"c1","uid":1959550,"ip_address":"","ucode":"848A07A46FF17D","user_header":"https://static001.geekbang.org/account/avatar/00/1d/e6/7e/1651f825.jpg","comment_is_top":false,"comment_ctime":1590251216,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590251216","product_id":100015201,"comment_content":"说得很清楚啊","like_count":0},{"had_liked":false,"id":195105,"user_name":"Andy","can_delete":false,"product_type":"c1","uid":1119133,"ip_address":"","ucode":"4BCA899B8E4E85","user_header":"https://static001.geekbang.org/account/avatar/00/11/13/9d/0ff43179.jpg","comment_is_top":false,"comment_ctime":1585136985,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585136985","product_id":100015201,"comment_content":"赞，以前在容器外ps时发现了容器里的进程，当时不明所以然。现在明白了。","like_count":0},{"had_liked":false,"id":193409,"user_name":"亢（知行合一的路上）","can_delete":false,"product_type":"c1","uid":1347013,"ip_address":"","ucode":"958AF7C96EB9E8","user_header":"https://static001.geekbang.org/account/avatar/00/14/8d/c5/898b13b4.jpg","comment_is_top":false,"comment_ctime":1584892024,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584892024","product_id":100015201,"comment_content":"docker 这种思想真是强大，造出一个“边界”，应用就可以独立部署，互不干扰。<br>而且，还主要依靠系统自带的 Cgroups 和 Namespace，不改变本质，但表象大不同。","like_count":0},{"had_liked":false,"id":178305,"user_name":"冯晓雨","can_delete":false,"product_type":"c1","uid":1644044,"ip_address":"","ucode":"9F704E3451589C","user_header":"https://static001.geekbang.org/account/avatar/00/19/16/0c/a56356cc.jpg","comment_is_top":false,"comment_ctime":1581657020,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581657020","product_id":100015201,"comment_content":"容器有价值的是“容器编排”","like_count":0},{"had_liked":false,"id":177953,"user_name":"Geek_c22199","can_delete":false,"product_type":"c1","uid":1441876,"ip_address":"","ucode":"1CE5B65513E360","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI2vn8hyjICTCletGs0omz28lhriaZKX2XX9icYzAEon2IEoRnlXqyOia2bEPP0j7T6xexTnr77JJic8w/132","comment_is_top":false,"comment_ctime":1581561012,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581561012","product_id":100015201,"comment_content":"1，容器并不是运行在docker里，而是在操作系统上，docker 起到管理的作用","like_count":0},{"had_liked":false,"id":170279,"user_name":"牛逼但","can_delete":false,"product_type":"c1","uid":1318525,"ip_address":"","ucode":"82408296E3F47E","user_header":"","comment_is_top":false,"comment_ctime":1578560272,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578560272","product_id":100015201,"comment_content":"我们知道，在 Linux 系统中创建线程的系统调用是 clone()，比如：int pid = clone(main_function, stack_size, SIGCHLD, NULL); 这个系统调用就会为我们创建一个新的进程，并且返回它的进程号 pid。<br>这块是不是写的有问题啊，前面是线程，后面又变成进程了。","like_count":0},{"had_liked":false,"id":164512,"user_name":"Jack","can_delete":false,"product_type":"c1","uid":1782781,"ip_address":"","ucode":"33C2A27D2F4284","user_header":"https://static001.geekbang.org/account/avatar/00/1b/33/fd/1169c0f8.jpg","comment_is_top":false,"comment_ctime":1577015470,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577015470","product_id":100015201,"comment_content":"看完这一讲，我有个疑问，比如一些cpp的应用或者源代码，可以在docker中运行吗？","like_count":0},{"had_liked":false,"id":145298,"user_name":"冉冉","can_delete":false,"product_type":"c1","uid":1436334,"ip_address":"","ucode":"D36C0F95BC1DAB","user_header":"https://static001.geekbang.org/account/avatar/00/15/ea/ae/0e056410.jpg","comment_is_top":false,"comment_ctime":1572247220,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572247220","product_id":100015201,"comment_content":"老师，我执行以下命令 <br>PS C:\\Users\\auror&gt; docker run -it busybox &#47;bin&#47;sh<br>&#47; # touch D:\\FilesForDocker\\zookeeper\\docker-compose.yml<br>为何硬盘上并没有出现docker-compose.yml呢，而且之行也没报错<br>","like_count":0},{"had_liked":false,"id":139984,"user_name":"靠人品去赢","can_delete":false,"product_type":"c1","uid":1301286,"ip_address":"","ucode":"7A20F9EBE847E1","user_header":"https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg","comment_is_top":false,"comment_ctime":1570780597,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570780597","product_id":100015201,"comment_content":"这些namespace参数是不是就是告诉，项目或者应用，你该用啥样的JDK，用啥样的包之类。这样虽然不是一个虚拟机，但是docker里面的应用就知道自己需要啥，也就没必要调整宿主机的环境配置，这样理解对不对？","like_count":0},{"had_liked":false,"id":132750,"user_name":"木心","can_delete":false,"product_type":"c1","uid":1178689,"ip_address":"","ucode":"955588CA0BBD33","user_header":"https://static001.geekbang.org/account/avatar/00/11/fc/41/bc18ff9f.jpg","comment_is_top":false,"comment_ctime":1568213364,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1568213364","product_id":100015201,"comment_content":"想问下如何让这段代码运行起来呢？<br>int pid = clone(main_function, stack_size, CLONE_NEWPID | SIGCHLD, NULL); <br>还有就是怎么验证里面的线程看到的就是，自己的Namespace<br><br>","like_count":0,"discussions":[{"author":{"id":1113737,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI2icbib62icXtibTkThtyRksbuJLoTLMts7zook2S30MiaBtbz0f5JskwYicwqXkhpYfvCpuYkcvPTibEaQ/132","nickname":"xuanyuan","note":"","ucode":"1EC79B9372868F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":24914,"discussion_content":"coolshell有相关文章","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570330019,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129673,"user_name":"╰ kenny","can_delete":false,"product_type":"c1","uid":1646810,"ip_address":"","ucode":"DE567B830E8106","user_header":"https://static001.geekbang.org/account/avatar/00/19/20/da/94169280.jpg","comment_is_top":false,"comment_ctime":1567215215,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1567215215","product_id":100015201,"comment_content":"老师，我有个问题，既然容器时一个进程，那我们在容器中运行的其他进程是怎么随着容器的销毁而销毁的？","like_count":0,"discussions":[{"author":{"id":1597620,"avatar":"https://static001.geekbang.org/account/avatar/00/18/60/b4/430acd7f.jpg","nickname":"激水漂石","note":"","ucode":"C00B21DE4103E3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349275,"discussion_content":"进程树呗，kill了解下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613034840,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129670,"user_name":"谢特","can_delete":false,"product_type":"c1","uid":1248684,"ip_address":"","ucode":"9C30DBFECFE649","user_header":"https://static001.geekbang.org/account/avatar/00/13/0d/ac/09678490.jpg","comment_is_top":false,"comment_ctime":1567214449,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567214449","product_id":100015201,"comment_content":"大数据开发和devops什么区别，不太懂","like_count":0},{"had_liked":false,"id":124278,"user_name":"minjiejiang","can_delete":false,"product_type":"c1","uid":1068679,"ip_address":"","ucode":"559DCC1F4178E8","user_header":"https://static001.geekbang.org/account/avatar/00/10/4e/87/5d0d161a.jpg","comment_is_top":false,"comment_ctime":1565851283,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565851283","product_id":100015201,"comment_content":"可以看到，我们在 Docker 里最开始执行的 &#47;bin&#47;s...<br><br>这段话意思没反应过来，老师是不是想说正常情况下应该不止2个进程信息是么？","like_count":0},{"had_liked":false,"id":113546,"user_name":"星期八","can_delete":false,"product_type":"c1","uid":1185504,"ip_address":"","ucode":"34A37F73A48E7F","user_header":"https://static001.geekbang.org/account/avatar/00/12/16/e0/7abad3cc.jpg","comment_is_top":false,"comment_ctime":1563075098,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563075098","product_id":100015201,"comment_content":"Docker容器技术，是在用的还是原操作系统的内核，那么docker打包只是打包了程序所需要的文件信息，像内核，网卡这些基础信息还是用操作系统本身的吧","like_count":0},{"had_liked":false,"id":113276,"user_name":"星期八","can_delete":false,"product_type":"c1","uid":1185504,"ip_address":"","ucode":"34A37F73A48E7F","user_header":"https://static001.geekbang.org/account/avatar/00/12/16/e0/7abad3cc.jpg","comment_is_top":false,"comment_ctime":1562932569,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562932569","product_id":100015201,"comment_content":"虽然我还没看懂namespace本质是什么，但是，我的理解是，它其实就是在我们的应用程序加了一系列的参数，来告诉应用程序，你是在单独的环境里运行，虚拟机是在一个真正的容器运行，运行在里面的程序，对操作系统来说，也只有一个虚拟机的进程，应用程序的进程是没有的。不知道 我的理解对不对！","like_count":0},{"had_liked":false,"id":110555,"user_name":"板栗","can_delete":false,"product_type":"c1","uid":1201259,"ip_address":"","ucode":"A40F13DAAAA596","user_header":"https://static001.geekbang.org/account/avatar/00/12/54/6b/80ebeefc.jpg","comment_is_top":false,"comment_ctime":1562293963,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562293963","product_id":100015201,"comment_content":"是不是不同容器镜像的内核层面一样，只是在用户空间跑了一套不同的系统","like_count":0},{"had_liked":false,"id":97768,"user_name":"罗辑思维","can_delete":false,"product_type":"c1","uid":1318941,"ip_address":"","ucode":"D257A06EDE928E","user_header":"https://static001.geekbang.org/account/avatar/00/14/20/1d/0c1a184c.jpg","comment_is_top":false,"comment_ctime":1558769447,"is_pvip":false,"replies":[{"id":"36296","content":"无所谓的","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1559619075,"ip_address":"","comment_id":97768,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1558769447","product_id":100015201,"comment_content":"Ubuntu 16.4是desktop还是Server版本的","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451409,"discussion_content":"无所谓的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559619075,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78726,"user_name":"龙坤","can_delete":false,"product_type":"c1","uid":1233455,"ip_address":"","ucode":"D1724E68D6304D","user_header":"https://static001.geekbang.org/account/avatar/00/12/d2/2f/04882ff8.jpg","comment_is_top":false,"comment_ctime":1553224698,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1553224698","product_id":100015201,"comment_content":"我操作系统的知识有点薄弱。听完之后，知道了容器是linux操作系统内的一个进程，而且该进程是做了一些namespace的控制","like_count":0},{"had_liked":false,"id":74134,"user_name":"lq","can_delete":false,"product_type":"c1","uid":1112815,"ip_address":"","ucode":"1C9D741B906403","user_header":"https://static001.geekbang.org/account/avatar/00/10/fa/ef/9d3fcb40.jpg","comment_is_top":false,"comment_ctime":1552113004,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552113004","product_id":100015201,"comment_content":"总结一下：虚拟机通过Hypervisor来虚拟硬件资源，在通过在这些虚拟的硬件资源上按照虚拟机操作系统从而达到资源的隔离。而docker则是通过在host os内核上通过指定namespace参数来达到资源隔离，如指定pid namespace，network namespace,mount namespace,user namespace 等","like_count":0},{"had_liked":false,"id":72918,"user_name":"云韵","can_delete":false,"product_type":"c1","uid":1025622,"ip_address":"","ucode":"3DE26DBAAAEDE6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a6/56/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1551755023,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1551755023","product_id":100015201,"comment_content":"磊哥，docker官网下载的window版，不支持家庭版，只支持专业版怎么办？网上查了一下说下载Docker Toolbox 可是下载之后启动Docker Quickstart Terminal 报错<br>1. VBoxManage.exe: error: Failed to create the host-only adapter <br>2. VBoxManage.exe: error: Querying NetCfgInstanceId failed (0x00000002) <br>3. VBoxManage.exe: error: Details: code E_FAIL (0x80004005), component HostNetworkInterfaceWrap, interface IHostNetworkInterface <br>4 VBoxManage.exe: error: Context: &quot;enum RTEXITCODE __cdecl handleCreate(struct HandlerArg *)&quot; at line 94 of file VBoxManageHostonly.cpp<br>网上google了好久还是没找到，希望老师抽空能帮忙解答下。谢谢。","like_count":0},{"had_liked":false,"id":64207,"user_name":"付志波","can_delete":false,"product_type":"c1","uid":1378093,"ip_address":"","ucode":"3842BD04E255DE","user_header":"https://static001.geekbang.org/account/avatar/00/15/07/2d/eab19d59.jpg","comment_is_top":false,"comment_ctime":1548718594,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1548718594","product_id":100015201,"comment_content":"右边的图没有docker engine,一个容器启动后默认有进程，网络，挂载这几个常用的。","like_count":0},{"had_liked":false,"id":47647,"user_name":"MING","can_delete":false,"product_type":"c1","uid":1341736,"ip_address":"","ucode":"AEE029B57C1B07","user_header":"https://static001.geekbang.org/account/avatar/00/14/79/28/6d8490a2.jpg","comment_is_top":false,"comment_ctime":1544171421,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544171421","product_id":100015201,"comment_content":"帅帅帅才大佬！我个疑问：按理说docker都是其继承真实系统上下文资源，理论上容器里边的跟目下一些系统资源也该是继承下来的，如果我强制删除docker中根目录下的大部分文件， 发现对原系统也没什么影响，所以说docker是一个进程，docker中各种系统指令就像是我们要用来计算的程序，系统文件就像用来计算输入或者输出的文件， 那这样的话，这些用户态的资源又完全独立于真实系统的用户态环境，只是分用了系统的硬件资源。所以我想请教：<br>1 我上边的描述对不对<br>2 docker 镜像的构建，根目录下的所有文件是不是都可以自己构建，还是必须按照文件系统方式提供哪些必须的类似 &#47;etc  &#47;proc  &#47;sys等“运行所用文件” ？<br>3 docker放到linux系统上运行的话，系统的内核态资源Docker是否会共享？","like_count":0},{"had_liked":false,"id":46139,"user_name":"！","can_delete":false,"product_type":"c1","uid":1219413,"ip_address":"","ucode":"CF5535F4E1645A","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/55/acd61897.jpg","comment_is_top":false,"comment_ctime":1543852717,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1543852717","product_id":100015201,"comment_content":"老师，比如说我景象是centos，我是mac机器。他是怎么能够使用我mac机器的内核？","like_count":0,"discussions":[{"author":{"id":1292438,"avatar":"https://static001.geekbang.org/account/avatar/00/13/b8/96/82a849e3.jpg","nickname":"nodenota","note":"","ucode":"6D5C9485CEB327","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306106,"discussion_content":"安装的Docker软件负责屏蔽这些差别，就像Java虚拟机屏蔽不同操作系统的差别一样一样的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600171093,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1020529,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/92/71/9fd7cd7a.jpg","nickname":"Daniel","note":"","ucode":"282E09B3146501","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132275,"discussion_content":"镜像是Centos的话，这个Centos实际上用的是Mac Docker所生成的一个虚拟机的内核。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578893790,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43945,"user_name":"chenchukun","can_delete":false,"product_type":"c1","uid":1298833,"ip_address":"","ucode":"C9F9D51F2EC7A0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibtic993snK2Drdwypz6SJajPk7g3JuEP1puDhomplXSGl9YobOp5uJZVGLRalHwNwS7cdHr3iasFbmz38GicNibknA/132","comment_is_top":false,"comment_ctime":1543332010,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543332010","product_id":100015201,"comment_content":"docker engine应该只是一个用来创建和管理容器&quot;进程&quot;的守护进程，并不是像虚拟机一样运行在dockwr engine之上。","like_count":0},{"had_liked":false,"id":42997,"user_name":"dingwood","can_delete":false,"product_type":"c1","uid":1153828,"ip_address":"","ucode":"460EB0C6E8C611","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/24/1e4883c6.jpg","comment_is_top":false,"comment_ctime":1543132695,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543132695","product_id":100015201,"comment_content":"张老师，我安装了docker和k8s，docker的cgroup driver分别有cgroupfs 和 systemd，请教两个问题1.这两个驱动有什么不同。2. 安装k8s集群时，必须统一为systemd驱动?   网上搜了搜，找不到答案，请教下","like_count":0},{"had_liked":false,"id":42700,"user_name":"石头剪刀布","can_delete":false,"product_type":"c1","uid":1080353,"ip_address":"","ucode":"7659B10D189153","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eq6tsM65SmllxicEqqbaHcnqOw6O541JJ8ib75qyZ0zAGLxFOpV9L5kwr1dLCvgeL1V52cOu3yZLN2g/132","comment_is_top":false,"comment_ctime":1543023440,"is_pvip":false,"replies":[{"id":"15305","content":"没有关系","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1543042279,"ip_address":"","comment_id":42700,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543023440","product_id":100015201,"comment_content":"硬件虚拟化和docker，cgroups有没有关系？","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430166,"discussion_content":"没有关系","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543042279,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41524,"user_name":"gl328518397","can_delete":false,"product_type":"c1","uid":1293354,"ip_address":"","ucode":"05AF4661EF0AAF","user_header":"https://static001.geekbang.org/account/avatar/00/13/bc/2a/00a3d488.jpg","comment_is_top":false,"comment_ctime":1542800943,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542800943","product_id":100015201,"comment_content":"宿主机执行 ulimit -n  显示 131072<br>进入容器执行  ulimit -n   显示65535 <br>如果共享内核，不应该一样么？ 为啥容器中的不是 131072 。<br>","like_count":0},{"had_liked":false,"id":40552,"user_name":"风声是棵树","can_delete":false,"product_type":"c1","uid":1230289,"ip_address":"","ucode":"7C39C02E5C49D2","user_header":"https://static001.geekbang.org/account/avatar/00/12/c5/d1/ebb0b033.jpg","comment_is_top":false,"comment_ctime":1542631931,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542631931","product_id":100015201,"comment_content":"对于namespace的解释，是我看过所有资料里边最形象最容易理解的，赞","like_count":0},{"had_liked":false,"id":35772,"user_name":"Geek_405817","can_delete":false,"product_type":"c1","uid":1238710,"ip_address":"","ucode":"93DB7D790BF0CA","user_header":"https://static001.geekbang.org/account/avatar/00/12/e6/b6/3d7e1a3d.jpg","comment_is_top":false,"comment_ctime":1540790298,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540790298","product_id":100015201,"comment_content":"看到文中那张对比图 就很值了，文章很精彩 收获多多😁","like_count":0},{"had_liked":false,"id":31081,"user_name":"赵冬晨","can_delete":false,"product_type":"c1","uid":1170391,"ip_address":"","ucode":"4A7A014DEE9E2B","user_header":"https://static001.geekbang.org/account/avatar/00/11/db/d7/53dff47f.jpg","comment_is_top":false,"comment_ctime":1539084030,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1539084030","product_id":100015201,"comment_content":"真是生动的Namespace,真是好理解哇~","like_count":0},{"had_liked":false,"id":27313,"user_name":"洛子墟","can_delete":false,"product_type":"c1","uid":1036273,"ip_address":"","ucode":"CFC500D00F0B9B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cf/f1/bf63fef6.jpg","comment_is_top":false,"comment_ctime":1537870186,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1537870186","product_id":100015201,"comment_content":"所以CPU和内存是无法隔离的","like_count":0},{"had_liked":false,"id":23527,"user_name":"A 断了线的风筝","can_delete":false,"product_type":"c1","uid":1227670,"ip_address":"","ucode":"242C1EBB1F68A7","user_header":"https://static001.geekbang.org/account/avatar/00/12/bb/96/d1d8f640.jpg","comment_is_top":false,"comment_ctime":1536468019,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1536468019","product_id":100015201,"comment_content":"启动docker 有必要启动宿主机的firewall吗？<br>","like_count":0},{"had_liked":false,"id":23346,"user_name":"Frank","can_delete":false,"product_type":"c1","uid":1220112,"ip_address":"","ucode":"48760096808AB6","user_header":"https://static001.geekbang.org/account/avatar/00/12/9e/10/71b44ec3.jpg","comment_is_top":false,"comment_ctime":1536291474,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1536291474","product_id":100015201,"comment_content":"挺生动形象的😄","like_count":0},{"had_liked":false,"id":23133,"user_name":"张鑫","can_delete":false,"product_type":"c1","uid":1001528,"ip_address":"","ucode":"65F7E769B2256D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/38/60cc585a.jpg","comment_is_top":false,"comment_ctime":1536166950,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1536166950","product_id":100015201,"comment_content":"前期的docker也是需要虚拟机呀","like_count":0},{"had_liked":false,"id":23126,"user_name":"Mrev","can_delete":false,"product_type":"c1","uid":1222773,"ip_address":"","ucode":"03D0A90E85FCE6","user_header":"https://static001.geekbang.org/account/avatar/00/12/a8/75/033eb656.jpg","comment_is_top":false,"comment_ctime":1536161335,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1536161335","product_id":100015201,"comment_content":"1：docker启动a容器，实际是创建多个ns。那么用户在宿主可以查看到a容器的pid，是否在宿主机可以查创建的ns的pid？<br>2：启动的容器a，是如何与一起创建的多个ns产生关联的？","like_count":0},{"had_liked":false,"id":23121,"user_name":"iMARS","can_delete":false,"product_type":"c1","uid":1113733,"ip_address":"","ucode":"10C5C31908AA09","user_header":"https://static001.geekbang.org/account/avatar/00/10/fe/85/9ab352a7.jpg","comment_is_top":false,"comment_ctime":1536158369,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1536158369","product_id":100015201,"comment_content":"如果对linux原理没有深刻理解的话，估计不太容易领会其中namespace的意义，包括mount等","like_count":0},{"had_liked":false,"id":23036,"user_name":"Johnson","can_delete":false,"product_type":"c1","uid":1225037,"ip_address":"","ucode":"55B582953E49F3","user_header":"https://static001.geekbang.org/account/avatar/00/12/b1/4d/10c75b34.jpg","comment_is_top":false,"comment_ctime":1536115591,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1536115591","product_id":100015201,"comment_content":"右图中dock engine应该和所有的容器并列着画，像这样https:&#47;&#47;3.bp.blogspot.com&#47;-SYRu5dCA4T0&#47;Wa9bZtW6ozI&#47;AAAAAAAAJ7E&#47;50ebDsF85zA-1VZLzL1GT--lyyR7G6O5wCLcBGAs&#47;s1600&#47;containers-versus-virtual-machines-docker-inc-rightscale.jpg","like_count":0},{"had_liked":false,"id":22939,"user_name":"CoolPanda","can_delete":false,"product_type":"c1","uid":1156121,"ip_address":"","ucode":"8EABAF97BE952A","user_header":"https://static001.geekbang.org/account/avatar/00/11/a4/19/e09d3529.jpg","comment_is_top":false,"comment_ctime":1536057431,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1536057431","product_id":100015201,"comment_content":"貌似MAC下不是这么运行的","like_count":0},{"had_liked":false,"id":22937,"user_name":"醉红颜","can_delete":false,"product_type":"c1","uid":1118507,"ip_address":"","ucode":"66C7FA47CC4D7A","user_header":"https://static001.geekbang.org/account/avatar/00/11/11/2b/4053b256.jpg","comment_is_top":false,"comment_ctime":1536055935,"is_pvip":false,"replies":[{"id":"8330","content":"讲网络的部分会详细解释","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1536124457,"ip_address":"","comment_id":22937,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1536055935","product_id":100015201,"comment_content":"老师，您好，我是第一次使用k8s，用它来搭建一个maven的私服，然后发现该pod访问不了外网，该怎么破？","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423332,"discussion_content":"讲网络的部分会详细解释","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536124457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22847,"user_name":"raging_sweet","can_delete":false,"product_type":"c1","uid":1057224,"ip_address":"","ucode":"8C5E4230A6CCCF","user_header":"","comment_is_top":false,"comment_ctime":1536018984,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1536018984","product_id":100015201,"comment_content":"写的很棒，加油！","like_count":0},{"had_liked":false,"id":22788,"user_name":"烟火不坠","can_delete":false,"product_type":"c1","uid":1149539,"ip_address":"","ucode":"BEEE3173C66E5F","user_header":"https://static001.geekbang.org/account/avatar/00/11/8a/63/a5fda84d.jpg","comment_is_top":false,"comment_ctime":1535974062,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1535974062","product_id":100015201,"comment_content":"公司有点吵，一会回家再看一遍。以前也看过，没怎么理解，这次好像有点感觉了😁","like_count":0},{"had_liked":false,"id":22763,"user_name":"haotrr","can_delete":false,"product_type":"c1","uid":1003428,"ip_address":"","ucode":"A8A2CC91AC893A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4f/a4/caf6ca87.jpg","comment_is_top":false,"comment_ctime":1535960890,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1535960890","product_id":100015201,"comment_content":"今天刚订，刚才看试读章节，有一种看武侠小说的感觉 😄","like_count":0},{"had_liked":false,"id":22741,"user_name":"江山如画","can_delete":false,"product_type":"c1","uid":1188280,"ip_address":"","ucode":"BEB6228E6135B5","user_header":"https://static001.geekbang.org/account/avatar/00/12/21/b8/aca814dd.jpg","comment_is_top":false,"comment_ctime":1535945628,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1535945628","product_id":100015201,"comment_content":"深入浅出！小白都看懂了！","like_count":0},{"had_liked":false,"id":22727,"user_name":"小狼","can_delete":false,"product_type":"c1","uid":1012488,"ip_address":"","ucode":"A342DAD414CE10","user_header":"https://static001.geekbang.org/account/avatar/00/0f/73/08/dd9a4a38.jpg","comment_is_top":false,"comment_ctime":1535940952,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1535940952","product_id":100015201,"comment_content":"简单易懂👍","like_count":0},{"had_liked":false,"id":22716,"user_name":"blackpiglet","can_delete":false,"product_type":"c1","uid":1032928,"ip_address":"","ucode":"58AA8329C91767","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c2/e0/7188aa0a.jpg","comment_is_top":false,"comment_ctime":1535938195,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1535938195","product_id":100015201,"comment_content":"1 用 namespace 框住app。<br>2 PID, UTS, network, user, mount, IPC, cgroup<br><br>虽然本质上理解，namespace 和 cgroup 是内核特性，容器本质上就是一个加了限定参数的进程，效果上看，图画的也没毛病。<br>这么看，是不是说容器的安全性，也就是隔离性，就是没办法达到虚拟机的级别呢？","like_count":0},{"had_liked":false,"id":22696,"user_name":"心情不错","can_delete":false,"product_type":"c1","uid":1218172,"ip_address":"","ucode":"A62967BE93885C","user_header":"https://static001.geekbang.org/account/avatar/00/12/96/7c/b1e6ea51.jpg","comment_is_top":false,"comment_ctime":1535935741,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1535935741","product_id":100015201,"comment_content":"右边图把bin&#47;labs去掉","like_count":0}]}