{"id":208171,"title":"08 | 服务发现：到底是要CP还是AP？","content":"<p>你好，我是何小锋。在上一讲中，我讲了“怎么设计一个灵活的RPC框架”，总结起来，就是怎么在RPC框架中应用插件，用插件方式构造一个基于微内核的RPC框架，其关键点就是“插件化”。</p><p>今天，我要和你聊聊RPC里面的“服务发现”在超大规模集群的场景下所面临的挑战。</p><h2>为什么需要服务发现？</h2><p>先举个例子，假如你要给一位以前从未合作过的同事发邮件请求帮助，但你却没有他的邮箱地址。这个时候你会怎么办呢？如果是我，我会选择去看公司的企业“通信录”。</p><p>同理，为了高可用，在生产环境中服务提供方都是以集群的方式对外提供服务，集群里面的这些IP随时可能变化，我们也需要用一本“通信录”及时获取到对应的服务节点，这个获取的过程我们一般叫作“服务发现”。</p><p>对于服务调用方和服务提供方来说，其契约就是接口，相当于“通信录”中的姓名，服务节点就是提供该契约的一个具体实例。服务IP集合作为“通信录”中的地址，从而可以通过接口获取服务IP的集合来完成服务的发现。这就是我要说的RPC框架的服务发现机制，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/51/5d/514dc04df2b8b2f3130b7d44776a825d.jpg?wh=2746*1445\" alt=\"\" title=\"RPC服务发现原理图\"></p><ol>\n<li>服务注册：在服务提供方启动的时候，将对外暴露的接口注册到注册中心之中，注册中心将这个服务节点的IP和接口保存下来。</li>\n<li>服务订阅：在服务调用方启动的时候，去注册中心查找并订阅服务提供方的IP，然后缓存到本地，并用于后续的远程调用。</li>\n</ol><!-- [[[read_end]]] --><h2>为什么不使用DNS？</h2><p>既然服务发现这么“厉害”，那是不是很难实现啊？其实类似机制一直在我们身边，我们回想下服务发现的本质，就是完成了接口跟服务提供者IP的映射。那我们能不能把服务提供者IP统一换成一个域名啊，利用已经成熟的DNS机制来实现？</p><p>好，先带着这个问题，简单地看下DNS的流程：</p><p><img src=\"https://static001.geekbang.org/resource/image/3b/18/3b6a23f392b9b8d6fcf31803a5b4ef18.jpg?wh=5273*1884\" alt=\"\" title=\"DNS查询流程\"></p><p>如果我们用DNS来实现服务发现，所有的服务提供者节点都配置在了同一个域名下，调用方的确可以通过DNS拿到随机的一个服务提供者的IP，并与之建立长连接，这看上去并没有太大问题，但在我们业界为什么很少用到这种方案呢？不知道你想过这个问题没有，如果没有，现在可以停下来想想这样两个问题：</p><ul>\n<li>如果这个IP端口下线了，服务调用者能否及时摘除服务节点呢？</li>\n<li>如果在之前已经上线了一部分服务节点，这时我突然对这个服务进行扩容，那么新上线的服务节点能否及时接收到流量呢？</li>\n</ul><p>这两个问题的答案都是：“不能”。这是因为为了提升性能和减少DNS服务的压力，DNS采取了多级缓存机制，一般配置的缓存时间较长，特别是JVM的默认缓存是永久有效的，所以说服务调用者不能及时感知到服务节点的变化。</p><p>这时你可能会想，我是不是可以加一个负载均衡设备呢？将域名绑定到这台负载均衡设备上，通过DNS拿到负载均衡的IP。这样服务调用的时候，服务调用方就可以直接跟VIP建立连接，然后由VIP机器完成TCP转发，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/d8/b9/d8549f6069a8ca5bd1012a0baf90f6b9.jpg?wh=2553*1299\" alt=\"\" title=\"VIP方案\"></p><p>这个方案确实能解决DNS遇到的一些问题，但在RPC场景里面也并不是很合适，原因有以下几点：</p><ul>\n<li>搭建负载均衡设备或TCP/IP四层代理，需求额外成本；</li>\n<li>请求流量都经过负载均衡设备，多经过一次网络传输，会额外浪费些性能；</li>\n<li>负载均衡添加节点和摘除节点，一般都要手动添加，当大批量扩容和下线时，会有大量的人工操作和生效延迟；</li>\n<li>我们在服务治理的时候，需要更灵活的负载均衡策略，目前的负载均衡设备的算法还满足不了灵活的需求。</li>\n</ul><p>由此可见，DNS或者VIP方案虽然可以充当服务发现的角色，但在RPC场景里面直接用还是很难的。</p><h2>基于ZooKeeper的服务发现</h2><p>那么在RPC里面我们该如何实现呢？我们还是要回到服务发现的本质，就是完成接口跟服务提供者IP之间的映射。这个映射是不是就是一种命名服务？当然，我们还希望注册中心能完成实时变更推送，是不是像开源的ZooKeeper、etcd就可以实现？我很肯定地说“确实可以”。下面我就来介绍下一种基于ZooKeeper的服务发现方式。</p><p>整体的思路很简单，就是搭建一个ZooKeeper集群作为注册中心集群，服务注册的时候只需要服务节点向ZooKeeper节点写入注册信息即可，利用ZooKeeper的Watcher机制完成服务订阅与服务下发功能，整体流程如下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/50/75/503fabeeae226a722f83e9fb6c0d4075.jpg?wh=4214*1803\" alt=\"\" title=\"基于ZooKeeper服务发现结构图\"></p><ol>\n<li>服务平台管理端先在ZooKeeper中创建一个服务根路径，可以根据接口名命名（例如：/service/com.demo.xxService），在这个路径再创建服务提供方目录与服务调用方目录（例如：provider、consumer），分别用来存储服务提供方的节点信息和服务调用方的节点信息。</li>\n<li>当服务提供方发起注册时，会在服务提供方目录中创建一个临时节点，节点中存储该服务提供方的注册信息。</li>\n<li>当服务调用方发起订阅时，则在服务调用方目录中创建一个临时节点，节点中存储该服务调用方的信息，同时服务调用方watch该服务的服务提供方目录（/service/com.demo.xxService/provider）中所有的服务节点数据。</li>\n<li>当服务提供方目录下有节点数据发生变更时，ZooKeeper就会通知给发起订阅的服务调用方。</li>\n</ol><p>我所在的技术团队早期使用的RPC框架服务发现就是基于ZooKeeper实现的，并且还平稳运行了一年多，但后续团队的微服务化程度越来越高之后，ZooKeeper集群整体压力也越来越高，尤其在集中上线的时候越发明显。“集中爆发”是在一次大规模上线的时候，当时有超大批量的服务节点在同时发起注册操作，ZooKeeper集群的CPU突然飙升，导致ZooKeeper集群不能工作了，而且我们当时也无法立马将ZooKeeper集群重新启动，一直到ZooKeeper集群恢复后业务才能继续上线。</p><p>经过我们的排查，引发这次问题的根本原因就是ZooKeeper本身的性能问题，当连接到ZooKeeper的节点数量特别多，对ZooKeeper读写特别频繁，且ZooKeeper存储的目录达到一定数量的时候，ZooKeeper将不再稳定，CPU持续升高，最终宕机。而宕机之后，由于各业务的节点还在持续发送读写请求，刚一启动，ZooKeeper就因无法承受瞬间的读写压力，马上宕机。</p><p>这次“意外”让我们意识到，ZooKeeper集群性能显然已经无法支撑我们现有规模的服务集群了，我们需要重新考虑服务发现方案。</p><h2>基于消息总线的最终一致性的注册中心</h2><p>我们知道，ZooKeeper的一大特点就是强一致性，ZooKeeper集群的每个节点的数据每次发生更新操作，都会通知其它ZooKeeper节点同时执行更新。它要求保证每个节点的数据能够实时的完全一致，这也就直接导致了ZooKeeper集群性能上的下降。这就好比几个人在玩传递东西的游戏，必须这一轮每个人都拿到东西之后，所有的人才能开始下一轮，而不是说我只要获得到东西之后，就可以直接进行下一轮了。</p><p>而RPC框架的服务发现，在服务节点刚上线时，服务调用方是可以容忍在一段时间之后（比如几秒钟之后）发现这个新上线的节点的。毕竟服务节点刚上线之后的几秒内，甚至更长的一段时间内没有接收到请求流量，对整个服务集群是没有什么影响的，所以我们可以牺牲掉CP（强制一致性），而选择AP（最终一致），来换取整个注册中心集群的性能和稳定性。</p><p>那么是否有一种简单、高效，并且最终一致的更新机制，能代替ZooKeeper那种数据强一致的数据更新机制呢？</p><p>因为要求最终一致性，我们可以考虑采用消息总线机制。注册数据可以全量缓存在每个注册中心内存中，通过消息总线来同步数据。当有一个注册中心节点接收到服务节点注册时，会产生一个消息推送给消息总线，再通过消息总线通知给其它注册中心节点更新数据并进行服务下发，从而达到注册中心间数据最终一致性，具体流程如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/73/ff/73b59c7949ebed2903ede474856062ff.jpg?wh=4256*2276\" alt=\"\" title=\"流程图\"></p><ul>\n<li>当有服务上线，注册中心节点收到注册请求，服务列表数据发生变化，会生成一个消息，推送给消息总线，每个消息都有整体递增的版本。</li>\n<li>消息总线会主动推送消息到各个注册中心，同时注册中心也会定时拉取消息。对于获取到消息的在消息回放模块里面回放，只接受大于本地版本号的消息，小于本地版本号的消息直接丢弃，从而实现最终一致性。</li>\n<li>消费者订阅可以从注册中心内存拿到指定接口的全部服务实例，并缓存到消费者的内存里面。</li>\n<li>采用推拉模式，消费者可以及时地拿到服务实例增量变化情况，并和内存中的缓存数据进行合并。</li>\n</ul><p>为了性能，这里采用了两级缓存，注册中心和消费者的内存缓存，通过异步推拉模式来确保最终一致性。</p><p>另外，你也可能会想到，服务调用方拿到的服务节点不是最新的，所以目标节点存在已经下线或不提供指定接口服务的情况，这个时候有没有问题？这个问题我们放到了RPC框架里面去处理，在服务调用方发送请求到目标节点后，目标节点会进行合法性验证，如果指定接口服务不存在或正在下线，则会拒绝该请求。服务调用方收到拒绝异常后，会安全重试到其它节点。</p><p>通过消息总线的方式，我们就可以完成注册中心集群间数据变更的通知，保证数据的最终一致性，并能及时地触发注册中心的服务下发操作。在RPC领域精耕细作后，你会发现，服务发现的特性是允许我们在设计超大规模集群服务发现系统的时候，舍弃强一致性，更多地考虑系统的健壮性。最终一致性才是分布式系统设计中更为常用的策略。</p><h2>总结</h2><p>今天我分享了RPC框架服务发现机制，以及如何用ZooKeeper完成“服务发现”，还有ZooKeeper在超大规模集群下作为注册中心所存在的问题。</p><p>通常我们可以使用ZooKeeper、etcd或者分布式缓存（如Hazelcast）来解决事件通知问题，但当集群达到一定规模之后，依赖的ZooKeeper集群、etcd集群可能就不稳定了，无法满足我们的需求。</p><p>在超大规模的服务集群下，注册中心所面临的挑战就是超大批量服务节点同时上下线，注册中心集群接受到大量服务变更请求，集群间各节点间需要同步大量服务节点数据，最终导致如下问题：</p><ul>\n<li>注册中心负载过高；</li>\n<li>各节点数据不一致；</li>\n<li>服务下发不及时或下发错误的服务节点列表。</li>\n</ul><p>RPC框架依赖的注册中心的服务数据的一致性其实并不需要满足CP，只要满足AP即可。我们就是采用“消息总线”的通知机制，来保证注册中心数据的最终一致性，来解决这些问题的。</p><p>另外，在今天的内容中，很多知识点不只可以应用到RPC框架的“服务发现”中。例如服务节点数据的推送采用增量更新的方式，这种方式提高了注册中心“服务下发”的效率，而这种方式，你还可以利用在其它地方，比如统一配置中心，用此方式可以提升统一配置中心下发配置的效率。</p><h2>课后思考</h2><p>目前服务提供者上线后会自动注册到注册中心，服务调用方会自动感知到新增的实例，并且流量会很快打到该新增的实例。如果我想把某些服务提供者实例的流量切走，除了下线实例，你有没有想到其它更便捷的办法呢？</p><p>欢迎留言和我分享你的思考和疑惑，也欢迎你把文章分享给你的朋友，邀请他加入学习。我们下节课再见！</p>","neighbors":{"left":{"article_title":"07 | 架构设计：设计一个灵活的RPC框架","id":207137},"right":{"article_title":"09 | 健康检测：这个节点都挂了，为啥还要疯狂发请求？","id":208253}},"comments":[{"had_liked":false,"id":243270,"user_name":"强哥","can_delete":false,"product_type":"c1","uid":1206726,"ip_address":"","ucode":"3B8DC780FE4EF9","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/c6/513df085.jpg","comment_is_top":false,"comment_ctime":1598008027,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"113267157723","product_id":100046201,"comment_content":"文章描述zk时不是很准确，zk并不是强一致性，而且顺序一致性。也算最终一致性的一种。","like_count":26,"discussions":[{"author":{"id":1508990,"avatar":"https://static001.geekbang.org/account/avatar/00/17/06/7e/735968e2.jpg","nickname":"西门吹牛","note":"","ucode":"E5D3624DDE1E83","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374967,"discussion_content":"顺序一致也就是强一致吧","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1621423085,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1617615,"avatar":"https://static001.geekbang.org/account/avatar/00/18/ae/cf/6186d936.jpg","nickname":"Geek_f71330","note":"","ucode":"40F8CD661E8F59","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1508990,"avatar":"https://static001.geekbang.org/account/avatar/00/17/06/7e/735968e2.jpg","nickname":"西门吹牛","note":"","ucode":"E5D3624DDE1E83","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388934,"discussion_content":"全是强一致的一种级别了，还有更高一级。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629068698,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":374967,"ip_address":""},"score":388934,"extra":""}]},{"author":{"id":1039883,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/de/0b/ddba7981.jpg","nickname":"rebort","note":"","ucode":"1ACB3E7AE81D8E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582731,"discussion_content":"zk读是顺序一致性，写是线性一致性，读的话可以用sync，确保读的是“最新”的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659608083,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184914,"user_name":"每天晒白牙","can_delete":false,"product_type":"c1","uid":1004698,"ip_address":"","ucode":"A1B102CD933DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","comment_is_top":false,"comment_ctime":1583452190,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"87482798110","product_id":100046201,"comment_content":"今天这个思考题好像是在说负载均衡策略，那是不是可以加个权重，把想下线的ip权重置为0，这样服务调用方就不会调用这个节点了","like_count":20,"discussions":[{"author":{"id":1110105,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f0/59/e902fda4.jpg","nickname":"御风","note":"","ucode":"5D9A11BC06ACA4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380960,"discussion_content":"一样的问题，你能设置该ip的权重，为什么不直接下线该ip，","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1624843370,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":204859,"discussion_content":"也是一个办法，但是不是很好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584234522,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":191569,"user_name":"冰河时代","can_delete":false,"product_type":"c1","uid":1098504,"ip_address":"","ucode":"F4375FB7CE4FD4","user_header":"https://static001.geekbang.org/account/avatar/00/10/c3/08/28c327d0.jpg","comment_is_top":false,"comment_ctime":1584782152,"is_pvip":false,"replies":[{"id":"73496","content":"临时节点是需要等到超时时间之后才删除的，不够实时。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1584841499,"ip_address":"","comment_id":191569,"utype":1}],"discussion_count":4,"race_medal":0,"score":"74599226184","product_id":100046201,"comment_content":"记得之前在京东的时候，服务挂了，在注册中心上还得要手动删除下死亡节点，如果zk的话，服务没了，就代表会话也没了，临时节点的特性，应该会被通知到呀？为什么还要手动删除呢","like_count":17,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488208,"discussion_content":"临时节点是需要等到超时时间之后才删除的，不够实时。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584841499,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1113737,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI2icbib62icXtibTkThtyRksbuJLoTLMts7zook2S30MiaBtbz0f5JskwYicwqXkhpYfvCpuYkcvPTibEaQ/132","nickname":"xuanyuan","note":"","ucode":"1EC79B9372868F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298629,"discussion_content":"1. 刚开始以为是gossip协议，后面发现是变体的gossip协议。为什么不直接使用gossip协议？\n2. ap+客户端负载均衡 + 两级缓存来替代cp模型，具体使用还要看场景，集群规模小ap模型更加复杂，所以大厂的架构千万不可照搬。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597366865,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1316926,"avatar":"https://static001.geekbang.org/account/avatar/00/14/18/3e/f8632713.jpg","nickname":"EveryDayIsNew","note":"","ucode":"776B81EF6830FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1113737,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI2icbib62icXtibTkThtyRksbuJLoTLMts7zook2S30MiaBtbz0f5JskwYicwqXkhpYfvCpuYkcvPTibEaQ/132","nickname":"xuanyuan","note":"","ucode":"1EC79B9372868F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388010,"discussion_content":"gossip协议不适合集群节点变更很频繁的场景，另外gossip协议同步完成需要时间，集群规模大会有问题。个人愚见。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1628555947,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":298629,"ip_address":""},"score":388010,"extra":""}]},{"author":{"id":1446976,"avatar":"https://static001.geekbang.org/account/avatar/00/16/14/40/2fb15a61.jpg","nickname":"七里香","note":"","ucode":"16A3957A14AA26","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295664,"discussion_content":"膜拜京东大佬","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596278612,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185304,"user_name":"雨霖铃声声慢","can_delete":false,"product_type":"c1","uid":1052607,"ip_address":"","ucode":"656D98310C6DA3","user_header":"https://static001.geekbang.org/account/avatar/00/10/0f/bf/ee93c4cf.jpg","comment_is_top":false,"comment_ctime":1583557477,"is_pvip":false,"replies":[{"id":"71611","content":"很好的思路","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1583620692,"ip_address":"","comment_id":185304,"utype":1}],"discussion_count":1,"race_medal":0,"score":"53123165029","product_id":100046201,"comment_content":"如果要能切换流量，那么要服务端配置有权重负载均衡策略，这样服务器端可以通过调整权重来安排流量","like_count":12,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486323,"discussion_content":"很好的思路","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583620692,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185505,"user_name":"🌀Pick Monster 🌀","can_delete":false,"product_type":"c1","uid":1141196,"ip_address":"","ucode":"EE67F41B360460","user_header":"https://static001.geekbang.org/account/avatar/00/11/69/cc/747c7629.jpg","comment_is_top":false,"comment_ctime":1583595126,"is_pvip":true,"replies":[{"id":"71634","content":"上面理解的很棒。event bus可以改造成主从模式保证高可用","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1583624411,"ip_address":"","comment_id":185505,"utype":1}],"discussion_count":3,"race_medal":0,"score":"48828235382","product_id":100046201,"comment_content":"消息总栈类似一个队列，队列表示是递增的数字，注册中心集群的任何一个节点接收到注册请求，都会把服务提供者信息发给消息总栈，消息总栈会像队列以先进先出的原则推送消息给所有注册中心集群节点，集群节点接收到消息后会比较自己内存中的当前版本，保存版本大的，这种方式有很强的实效性，注册中心集群也可以从消息总栈拉取消息，确保数据AP，个人理解这是为了防止消息未接收到导致个别节点数据不准确，因为服务提供者可以向任意一个节点发送注册请求，从而降低了单个注册中心的压力，而注册和注册中心同步是异步的，也解决了集中注册的压力，在Zookeeper中，因为Zookeeper注册集群的强一致性，导致必须所有节点执行完一次同步，才能执行新的同步，这样导致注册处理性能降低，从而高I&#47;O操作宕机。<br>以上是我的个人理解，老师给看一下是否正确。<br><br>还有一个问题：当集中注册时，消息总栈下发通知给注册中心集群节点，对于单个节点也会不停的收到更新通知，这里也存在高I&#47;O问题，会不会有宕机？","like_count":11,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486384,"discussion_content":"上面理解的很棒。event bus可以改造成主从模式保证高可用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583624411,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2743167,"avatar":"https://static001.geekbang.org/account/avatar/00/29/db/7f/7c97acf2.jpg","nickname":"不是一般的2","note":"","ucode":"886F8D1825B985","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390143,"discussion_content":"请问老哥，这个消息推送是我有一个注册消息进来之后就出队然后发送给其他的节点吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629687589,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1219172,"avatar":"https://static001.geekbang.org/account/avatar/00/12/9a/64/ad837224.jpg","nickname":"Christmas","note":"","ucode":"F48F6BE4A7595B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":277503,"discussion_content":"仅仅比较版本还不够，比如A注册到c1，然后A跟c1的连接出现问题。之后A立刻注册到c2，过一段时间c1应该发出A的超时信息，这个时候c2就需要判断如何采用这个新消息了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591063178,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185042,"user_name":"松花皮蛋me","can_delete":false,"product_type":"c1","uid":1000054,"ip_address":"","ucode":"B0846CEEF6B0D1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/42/76/256bbd43.jpg","comment_is_top":false,"comment_ctime":1583469968,"is_pvip":false,"replies":[{"id":"71635","content":"很棒","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1583624480,"ip_address":"","comment_id":185042,"utype":1}],"discussion_count":1,"race_medal":0,"score":"44533142928","product_id":100046201,"comment_content":"路由负载","like_count":10,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486228,"discussion_content":"很棒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583624480,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184959,"user_name":"楼下小黑哥","can_delete":false,"product_type":"c1","uid":1014680,"ip_address":"","ucode":"453B099B0EE52E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7b/98/8f1aecf4.jpg","comment_is_top":false,"comment_ctime":1583458456,"is_pvip":false,"replies":[{"id":"71879","content":"通过服务发现来摘除流量是最常见的手段，还可以上下线状态、权重等方式。现成的MQ也是可以充当消息总线来用","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1583751303,"ip_address":"","comment_id":184959,"utype":1}],"discussion_count":1,"race_medal":0,"score":"44533131416","product_id":100046201,"comment_content":"服务消费者都是从注册中心拉取服务提供者的地址信息，所以我们要切走某些服务提供者数据，只需要将注册中心这些实例的地址信息删除（其实下线应用实例，实际也是去删除注册中心地址信息），然后注册中心反向通知消费者，消费者受到拉取最新提供者地址信息就没有这些实例了。<br>老师，提问一个问题：现有开源注册中心是不是还没有消息总线这种实现方式？消息总线有没有开源实现？<br>","like_count":10,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486191,"discussion_content":"通过服务发现来摘除流量是最常见的手段，还可以上下线状态、权重等方式。现成的MQ也是可以充当消息总线来用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583751303,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185153,"user_name":"君言","can_delete":false,"product_type":"c1","uid":1125654,"ip_address":"","ucode":"70F4ABD5479166","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJD8FqEJwgFLR345UPmwKibMribfD8rEHrtweQTsKPpkfLiaUCesXrW9Iib0niaibib0th6WcKbsKFoicFS2Q/132","comment_is_top":false,"comment_ctime":1583499757,"is_pvip":false,"replies":[{"id":"71614","content":"推主要实现callback，拉的动作在客户端，像Eurek属于AP","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1583620977,"ip_address":"","comment_id":185153,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31648270829","product_id":100046201,"comment_content":"老师，在AP实现中“两级缓存，注册中心和消费者的内存缓存，通过异步推拉模式来确保最终一致性”能展开讲一下具体实现吗？另外请教下CP可以基于zk实现，AP在业内的实现方式有哪些呢？","like_count":7,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486271,"discussion_content":"推主要实现callback，拉的动作在客户端，像Eurek属于AP","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583620977,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":200320,"user_name":"南桥畂翊","can_delete":false,"product_type":"c1","uid":1003956,"ip_address":"","ucode":"A97C49A6309A42","user_header":"https://static001.geekbang.org/account/avatar/00/0f/51/b4/0d402ae8.jpg","comment_is_top":false,"comment_ctime":1585572028,"is_pvip":false,"replies":[{"id":"76888","content":"最简单的就用时间戳","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1586735588,"ip_address":"","comment_id":200320,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27355375804","product_id":100046201,"comment_content":"消息总线策略是啥，老师能指点下么，怎么保证消息总线全局版本递增","like_count":6,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489994,"discussion_content":"最简单的就用时间戳","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586735588,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":217087,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1589418961,"is_pvip":false,"replies":[{"id":"80421","content":"准确👍","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1589499248,"ip_address":"","comment_id":217087,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23064255441","product_id":100046201,"comment_content":"小结一下<br>1：注册中心的核心作用？<br>完成服务消费者和服务调用者，两者的路径匹配<br><br>2：注册中心的核心指标？<br>高效、稳定、高可用，使服务消费者及时感知节点的变化<br><br>3：路径匹配需要的信息？<br>服务提供者IP、端口、接口、方法＋服务分组别名<br>服务消费者IP、端口<br>路径匹配可以把分组别名利用上，即使提供者实例上线，不过由于设置的别名和服务消费者需要的不一致流量也不会打过去，什么时候打过去可以通过配置中心来自由的控制。分组内也是有多个服务提供者的，这里可以再利用相关的负载均衡策略来具体分发流量。","like_count":5,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495034,"discussion_content":"准确👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589499248,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186900,"user_name":"etdick","can_delete":false,"product_type":"c1","uid":1487506,"ip_address":"","ucode":"E43D68000E92CA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJiaiaQYkUHByDARl4ULduH8Y4hicOpMxGjzPZmJkXK9RYd1oVMICd0icCfarxI4Yvmiap2a8t3Eae3LMg/132","comment_is_top":false,"comment_ctime":1583950842,"is_pvip":false,"replies":[{"id":"72555","content":"是的","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1584284928,"ip_address":"","comment_id":186900,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14468852730","product_id":100046201,"comment_content":"EURAKA就是AP模型","like_count":3,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486908,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584284928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185002,"user_name":"阿卧","can_delete":false,"product_type":"c1","uid":1229566,"ip_address":"","ucode":"68C0CC25E57707","user_header":"https://static001.geekbang.org/account/avatar/00/12/c2/fe/038a076e.jpg","comment_is_top":false,"comment_ctime":1583464865,"is_pvip":false,"replies":[{"id":"71639","content":"这还是利用了服务发现","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1583627715,"ip_address":"","comment_id":185002,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14468366753","product_id":100046201,"comment_content":"zookeeper注册中心实现原理<br>1. 服务平台向zookeeper创建服务目录<br>2. 服务提供者向zookeeper创建临时节点<br>3. 服务调用者订阅zookeeper，创建临时节点，拉取服务全量数据，watch服务全部节点数据<br>4. zookeeper节点发生变化会通知服务调用者<br><br>切掉服务流量，只需要将注册中心的配置节点下掉就好了","like_count":3,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486209,"discussion_content":"这还是利用了服务发现","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583627715,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287866,"user_name":"金龟","can_delete":false,"product_type":"c1","uid":1228500,"ip_address":"","ucode":"1C7D35C8AE8D9D","user_header":"https://static001.geekbang.org/account/avatar/00/12/be/d4/ff1c1319.jpg","comment_is_top":false,"comment_ctime":1618202409,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10208137001","product_id":100046201,"comment_content":"基于消息总线的最终一致性，并不能解决zk 里面目录节点过多的问题吧，只能解决同时写入的问题吧","like_count":3},{"had_liked":false,"id":247010,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1599556973,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10189491565","product_id":100046201,"comment_content":"擦，有点像大佬面试过我的面试题，一个题之后，大佬说我了解了。。","like_count":2},{"had_liked":false,"id":217220,"user_name":"knife","can_delete":false,"product_type":"c1","uid":1123262,"ip_address":"","ucode":"55EBB099BC5CBB","user_header":"https://static001.geekbang.org/account/avatar/00/11/23/be/81bd6a7b.jpg","comment_is_top":false,"comment_ctime":1589442539,"is_pvip":true,"replies":[{"id":"80428","content":"所以zk有observer","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1589499669,"ip_address":"","comment_id":217220,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10179377131","product_id":100046201,"comment_content":"稍微做点压测作为参考，我说的未必是对的，zookeeper写要是zab协议的，<br>提交要大多数成功才能提交，所以越多节点效率可能越慢，<br>","like_count":2,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495083,"discussion_content":"所以zk有observer","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589499669,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186121,"user_name":"成熟中的猪","can_delete":false,"product_type":"c1","uid":1172324,"ip_address":"","ucode":"EDFAA2D09A0E21","user_header":"https://static001.geekbang.org/account/avatar/00/11/e3/64/871dd03e.jpg","comment_is_top":false,"comment_ctime":1583761676,"is_pvip":false,"replies":[{"id":"72573","content":"这个跟很多因素有关系，比如zk node数，机器内存大小等","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1584286317,"ip_address":"","comment_id":186121,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10173696268","product_id":100046201,"comment_content":"如文中描述： ZooKeeper 的节点数量特别多，对 ZooKeeper 读写特别频繁，且 ZooKeeper 存储的目录达到一定数量的时候，ZooKeeper 将不再稳定，CPU 持续升高，最终宕机。<br>这里有点笼统，是否有量化的压测数据或者实际经验值可以分享？","like_count":2,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486633,"discussion_content":"这个跟很多因素有关系，比如zk node数，机器内存大小等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584286317,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":218642,"user_name":"joker","can_delete":false,"product_type":"c1","uid":1041680,"ip_address":"","ucode":"DA1FD164B64083","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e5/10/0a94311f.jpg","comment_is_top":false,"comment_ctime":1589849540,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5884816836","product_id":100046201,"comment_content":"老师，您好。关于后面切换到AP模式的架构，服务调用方如何知道去哪个注册中心取数据呢？是需要维护一个注册中心的列表吗？","like_count":1,"discussions":[{"author":{"id":1876101,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/a0/85/fa6d6c3c.jpg","nickname":"信仰","note":"","ucode":"BE27FBFC243525","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":271319,"discussion_content":"全量的数据随机选一台这样吧，也可以维护注册中心的列表找到心仪的注册中心","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590115829,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":217771,"user_name":"oscarwin","can_delete":false,"product_type":"c1","uid":1131956,"ip_address":"","ucode":"492430BA342593","user_header":"https://static001.geekbang.org/account/avatar/00/11/45/b4/ec66d499.jpg","comment_is_top":false,"comment_ctime":1589609753,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5884577049","product_id":100046201,"comment_content":"如果用消息总线去做同步，那么消息总线本身要是高可用和强一致的，那么要保证消息总线的高可用和强一致同样要采用一致性算法，那么消息总线不会成为新的性能瓶颈吗？","like_count":1,"discussions":[{"author":{"id":1041680,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/e5/10/0a94311f.jpg","nickname":"joker","note":"","ucode":"DA1FD164B64083","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":268924,"discussion_content":"这个我觉得不会，我觉得这里的消息总线类似于一个消息队列，注册中心就只是负责往消息队列推送消息和消费消息就可以了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589850013,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":209464,"user_name":"嘻嘻","can_delete":false,"product_type":"c1","uid":1325931,"ip_address":"","ucode":"E1EB75DD1C05E0","user_header":"","comment_is_top":false,"comment_ctime":1587553704,"is_pvip":false,"replies":[{"id":"79063","content":"一般不会出现这种情况，只有连接断开后，那需要重新注册","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1588255859,"ip_address":"","comment_id":209464,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5882521000","product_id":100046201,"comment_content":"老师，消息总线构建ap 型注册中心，不是很理解。是多个注册中心独立提供读写，他们之间通过消息队列做数据同步？那么一致性感觉不好保证，比如服务a 先注册，再反注册，但是分别发到两个注册中心节点，最终同步可能是乱序的哇","like_count":1,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492809,"discussion_content":"一般不会出现这种情况，只有连接断开后，那需要重新注册","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588255859,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185530,"user_name":"蚂蚁内推+v","can_delete":false,"product_type":"c1","uid":1050508,"ip_address":"","ucode":"24B10AEE54B3FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/07/8c/0d886dcc.jpg","comment_is_top":false,"comment_ctime":1583600286,"is_pvip":false,"replies":[{"id":"71615","content":"是的","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1583620995,"ip_address":"","comment_id":185530,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5878567582","product_id":100046201,"comment_content":"请问老师，dubbo的服务发现也是用zk实现的，在大规模时有这个问题呢？","like_count":1,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486397,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583620995,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2826205,"avatar":"","nickname":"hillwater","note":"","ucode":"FB16D5FCE8C7E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":590012,"discussion_content":"dubbo多少机器，会达到zookeeper上限呢？可否给个参考","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665463902,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":486397,"ip_address":"上海"},"score":590012,"extra":""}]}]},{"had_liked":false,"id":185430,"user_name":"(Kelen)","can_delete":false,"product_type":"c1","uid":1241185,"ip_address":"","ucode":"C8578DB62E3B2D","user_header":"https://static001.geekbang.org/account/avatar/00/12/f0/61/fedca2e9.jpg","comment_is_top":false,"comment_ctime":1583582052,"is_pvip":false,"replies":[{"id":"71616","content":"很棒","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1583621041,"ip_address":"","comment_id":185430,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5878549348","product_id":100046201,"comment_content":"终于看到这个消息总线的另一个应用，我们的配置中心也利用了这个原理","like_count":1,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486358,"discussion_content":"很棒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583621041,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354894,"user_name":"尔冬橙","can_delete":false,"product_type":"c1","uid":1225224,"ip_address":"湖南","ucode":"0B013A49BC18DA","user_header":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","comment_is_top":false,"comment_ctime":1660871785,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1660871785","product_id":100046201,"comment_content":"zk是如何保证cp的","like_count":0},{"had_liked":false,"id":351777,"user_name":"Geek_66be20","can_delete":false,"product_type":"c1","uid":2674185,"ip_address":"","ucode":"3766A7C54E0E7E","user_header":"","comment_is_top":false,"comment_ctime":1658192560,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1658192560","product_id":100046201,"comment_content":"何老师，请教一下。注册中心通过消息总线（主从）方式保证高可用，但是broker上的分区副本通过raft保证高可用，为什么分区副本不采用消息总线的方式来保证高可用呢？","like_count":0},{"had_liked":false,"id":346643,"user_name":"奇","can_delete":false,"product_type":"c1","uid":2613620,"ip_address":"","ucode":"E81F5B65DEEF41","user_header":"https://static001.geekbang.org/account/avatar/00/27/e1/74/e1502000.jpg","comment_is_top":false,"comment_ctime":1653311668,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653311668","product_id":100046201,"comment_content":"讲道理，误区有点多，grpc是有支持dns的resolver方式的。","like_count":0},{"had_liked":false,"id":343195,"user_name":"MilkBeer","can_delete":false,"product_type":"c1","uid":1232314,"ip_address":"","ucode":"DC4FAC3F2A87EE","user_header":"https://static001.geekbang.org/account/avatar/00/12/cd/ba/84422076.jpg","comment_is_top":false,"comment_ctime":1650703263,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650703263","product_id":100046201,"comment_content":"老师你好，消息总线那里有个疑问，若A节点推了1.0版本，紧接着B节点推了2.0版本，C节点先收2.0版本，那么1.0版本就会无法更新到C节点？那访问打到C节点获取的服务就不是全量了呢？","like_count":0},{"had_liked":false,"id":341400,"user_name":"小乙哥","can_delete":false,"product_type":"c1","uid":1063308,"ip_address":"","ucode":"C77E79BEA0C325","user_header":"https://static001.geekbang.org/account/avatar/00/10/39/8c/089525aa.jpg","comment_is_top":false,"comment_ctime":1649581662,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1649581662","product_id":100046201,"comment_content":"客户端缓存了服务端的地址，那么在服务节点特别多的情况下，会不会导致客户端的内存溢出呢？","like_count":0},{"had_liked":false,"id":316973,"user_name":"墨白","can_delete":false,"product_type":"c1","uid":2259490,"ip_address":"","ucode":"D884B9C0056C80","user_header":"https://static001.geekbang.org/account/avatar/00/22/7a/22/45307c91.jpg","comment_is_top":false,"comment_ctime":1634630728,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634630728","product_id":100046201,"comment_content":"思考题可以通过配置机器的流量比重，然后在客户端掉用的时候根据比重配置做路由策略，其实有点类似于小流量或者灰度发布的实现","like_count":0},{"had_liked":false,"id":294105,"user_name":"Geek_47baf9","can_delete":false,"product_type":"c1","uid":1793038,"ip_address":"","ucode":"DCF187338050DC","user_header":"","comment_is_top":false,"comment_ctime":1621763004,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621763004","product_id":100046201,"comment_content":"问下消息总线的最佳实践一般是什么，现在有基于spring cloud bus的消息总线，但是本质上还是依赖底层的mq","like_count":0},{"had_liked":false,"id":293589,"user_name":"Bill","can_delete":false,"product_type":"c1","uid":2626502,"ip_address":"","ucode":"392183D370837D","user_header":"https://static001.geekbang.org/account/avatar/00/28/13/c6/36fb7993.jpg","comment_is_top":false,"comment_ctime":1621438067,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1621438067","product_id":100046201,"comment_content":"请问基于消息总线的最终一致性的注册中心有开源实现么","like_count":0,"discussions":[{"author":{"id":2714393,"avatar":"","nickname":"Geek_7a6fde","note":"","ucode":"6A00175AD4BF23","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386312,"discussion_content":"我们公司在用的qconf+zk的挺不错的，性能很高https://stefan.blog.csdn.net/article/details/118198745","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627523914,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":284034,"user_name":"FD","can_delete":false,"product_type":"c1","uid":2052521,"ip_address":"","ucode":"ED396BD322489E","user_header":"https://static001.geekbang.org/account/avatar/00/1f/51/a9/741b5ad9.jpg","comment_is_top":false,"comment_ctime":1616045705,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616045705","product_id":100046201,"comment_content":"Zookeeper是不是可以换最终一致性共识协议？比如gossip?","like_count":0},{"had_liked":false,"id":281817,"user_name":"蓝山","can_delete":false,"product_type":"c1","uid":1066264,"ip_address":"","ucode":"FBF673D51FF644","user_header":"https://static001.geekbang.org/account/avatar/00/10/45/18/3d05adb4.jpg","comment_is_top":false,"comment_ctime":1614912370,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614912370","product_id":100046201,"comment_content":"在当前最新的etcd版本的实现里，包括性能、稳定性等在内的各方面指标，都是十分强悍的。那么服务要达到多么大的规模后，etcd 集群会出现不稳定？","like_count":0},{"had_liked":false,"id":274484,"user_name":"BD","can_delete":false,"product_type":"c1","uid":1228560,"ip_address":"","ucode":"A95CF8C3EDC228","user_header":"https://static001.geekbang.org/account/avatar/00/12/bf/10/b7974690.jpg","comment_is_top":false,"comment_ctime":1611035650,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611035650","product_id":100046201,"comment_content":"最后的那个方案不太明白啊  通过消息总线增量新增，如果放在内存里的数据因为服务宕机而丢失呢","like_count":0},{"had_liked":false,"id":273988,"user_name":"程序员老王","can_delete":false,"product_type":"c1","uid":1025340,"ip_address":"","ucode":"28577A15F064CF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a5/3c/7c0d2e57.jpg","comment_is_top":false,"comment_ctime":1610780500,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610780500","product_id":100046201,"comment_content":"RPC 框架依赖的注册中心的服务数据的一致性其实并不需要满足 CP，只要满足 AP 即可 。还考虑这个问题，一般考虑不到，","like_count":0},{"had_liked":false,"id":253538,"user_name":"Geek_3046bc","can_delete":false,"product_type":"c1","uid":1451300,"ip_address":"","ucode":"55846FF72E25D0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJt38jZaMKP6tnUSrUlqRqYuVEB1TNZW67xNzQGx8Yt4rfFSdAXB3taQWz8xGCgN0G9oYKfyfM0VA/132","comment_is_top":false,"comment_ctime":1602770545,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602770545","product_id":100046201,"comment_content":"消息总线cache住所有注册中心的更新的数据，那会不会因为多个注册中心的频繁的重新拉起，将队列写满导致不可用？队列中会不会做丢弃的策略来防止这种场景","like_count":0},{"had_liked":false,"id":251611,"user_name":"Simple life","can_delete":false,"product_type":"c1","uid":1571460,"ip_address":"","ucode":"1902D7F72FB43F","user_header":"https://static001.geekbang.org/account/avatar/00/17/fa/84/f01d203a.jpg","comment_is_top":false,"comment_ctime":1601722737,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601722737","product_id":100046201,"comment_content":"不知道你们ZK集群为什么压力那么大，估计你们是参与者太多了，减少参与者，增加观察者可以增加读性能的同时不太那么的减低写性能","like_count":0},{"had_liked":false,"id":248402,"user_name":"半生","can_delete":false,"product_type":"c1","uid":1962148,"ip_address":"","ucode":"8F6BA3CA1AC1B2","user_header":"https://static001.geekbang.org/account/avatar/00/1d/f0/a4/9d8c3dc3.jpg","comment_is_top":false,"comment_ctime":1600151128,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600151128","product_id":100046201,"comment_content":"大量节点上线的时候集群风暴会不会导致总线的消息积压，既然是fifo那是不是意味着有个别模块的全部节点，因为积压完全不在注册中心中，而在消息消费完前以为着被积压的模块完全不可用？这种有可能出现吗","like_count":0},{"had_liked":false,"id":230147,"user_name":"勿更改任何信息","can_delete":false,"product_type":"c1","uid":2028955,"ip_address":"","ucode":"B4949BEB8B2AFD","user_header":"","comment_is_top":false,"comment_ctime":1593278263,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593278263","product_id":100046201,"comment_content":"Zk基于zab协议，应该是AP模型，说是强一致性是否有待商榷，文中提到的zk问题，基于zk也能解决，实现最终一致性？","like_count":0},{"had_liked":false,"id":222563,"user_name":"至山凌云","can_delete":false,"product_type":"c1","uid":1668158,"ip_address":"","ucode":"F6051635ECC42B","user_header":"https://static001.geekbang.org/account/avatar/00/19/74/3e/75d047d7.jpg","comment_is_top":false,"comment_ctime":1590834799,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590834799","product_id":100046201,"comment_content":"给服务分组，可以按照分组切换流量","like_count":0},{"had_liked":false,"id":220773,"user_name":"rm -rf *","can_delete":false,"product_type":"c1","uid":1617641,"ip_address":"","ucode":"C9CC98FF4540E6","user_header":"https://static001.geekbang.org/account/avatar/00/18/ae/e9/aad359f4.jpg","comment_is_top":false,"comment_ctime":1590322840,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1590322840","product_id":100046201,"comment_content":"zookeeper的大规模上下线导致服务不可用，原因在于写请求需要过半提交，机器多写入的成本就高，那是否能增加Oberver服务不参与投票，减少follower服务来解决这个问题。","like_count":0},{"had_liked":false,"id":218984,"user_name":"迪拜之塔","can_delete":false,"product_type":"c1","uid":1397476,"ip_address":"","ucode":"3670D0A3A50B24","user_header":"https://static001.geekbang.org/account/avatar/00/15/52/e4/455b3724.jpg","comment_is_top":false,"comment_ctime":1589909256,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589909256","product_id":100046201,"comment_content":"老师好，消息总线的推荐实践应该怎么做？","like_count":0},{"had_liked":false,"id":210915,"user_name":"指尖以东","can_delete":false,"product_type":"c1","uid":1092218,"ip_address":"","ucode":"1DEE134FE92FD0","user_header":"https://static001.geekbang.org/account/avatar/00/10/aa/7a/ae8c247d.jpg","comment_is_top":false,"comment_ctime":1587864914,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587864914","product_id":100046201,"comment_content":"在k8s里面考虑把服务发现功能和权重的能力交给它去做","like_count":0},{"had_liked":false,"id":210042,"user_name":"OlafOO","can_delete":false,"product_type":"c1","uid":1019254,"ip_address":"","ucode":"105F8B194ED37B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/76/994a9929.jpg","comment_is_top":false,"comment_ctime":1587656103,"is_pvip":true,"replies":[{"id":"79070","content":"可以看优雅停机那讲","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1588256298,"ip_address":"","comment_id":210042,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1587656103","product_id":100046201,"comment_content":"服务上线没有及时同步不会影响业务，但是服务下线了，单靠重试机制来避免问题么，要是掉用方配置的重试次数是0那这次请求就失败了","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492922,"discussion_content":"可以看优雅停机那讲","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588256298,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":207591,"user_name":"半个柚子","can_delete":false,"product_type":"c1","uid":1309592,"ip_address":"","ucode":"CF5D1190D970A9","user_header":"https://static001.geekbang.org/account/avatar/00/13/fb/98/6f238b8e.jpg","comment_is_top":false,"comment_ctime":1587114594,"is_pvip":false,"replies":[{"id":"77651","content":"可以根据实际情况选型","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1587268945,"ip_address":"","comment_id":207591,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1587114594","product_id":100046201,"comment_content":"文中说的使用AP来代替CP，直接用Eureka来代替Zookeeper就行了吧","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492177,"discussion_content":"可以根据实际情况选型","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587268945,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":206883,"user_name":"eason2017","can_delete":false,"product_type":"c1","uid":1009422,"ip_address":"","ucode":"E070BA624FA490","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/0e/c77ad9b1.jpg","comment_is_top":false,"comment_ctime":1586951531,"is_pvip":false,"replies":[{"id":"77661","content":"多机房问题需要根据公司怎么规划多idc的。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1587270359,"ip_address":"","comment_id":206883,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1586951531","product_id":100046201,"comment_content":"老师好，会存在一个服务多机房注册到不同的注册中心的情况吧？这样版本号的粒度是按照服务下的机器来做？请指点，谢谢","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491936,"discussion_content":"多机房问题需要根据公司怎么规划多idc的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587270359,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009422,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/0e/c77ad9b1.jpg","nickname":"eason2017","note":"","ucode":"E070BA624FA490","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":239347,"discussion_content":"谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587295488,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":203833,"user_name":"nothing","can_delete":false,"product_type":"c1","uid":1446874,"ip_address":"","ucode":"B984E8590D0349","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK2sqFM20XhgC5xjEfDhbB1lk6rIe7LnqnxEicDdEcRSJ20YCTeBEcYFE84lvHFrJDq9n4WW7P9Zkg/132","comment_is_top":false,"comment_ctime":1586271525,"is_pvip":true,"replies":[{"id":"76820","content":"zab协议","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1586691341,"ip_address":"","comment_id":203833,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1586271525","product_id":100046201,"comment_content":"老师，怎么理解zk的强一致性呢？","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490973,"discussion_content":"zab协议","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586691341,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1123262,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/be/81bd6a7b.jpg","nickname":"knife","note":"","ucode":"55EBB099BC5CBB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":265793,"discussion_content":"请问老师zab协议是多数节点提交成功就comit，但是比如3个节点2个节点提交，剩下一个节点还在刷盘，并没更新入内存，但是这是读请求到这个节点数据是有延迟的。这样也算强一致性吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589439847,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":203572,"user_name":"秋天","can_delete":false,"product_type":"c1","uid":1057056,"ip_address":"","ucode":"A7E1D953EF7E17","user_header":"https://static001.geekbang.org/account/avatar/00/10/21/20/1299e137.jpg","comment_is_top":false,"comment_ctime":1586235070,"is_pvip":true,"replies":[{"id":"76871","content":"zk是不需要消息总线的，zab协议就保证了一致性","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1586733964,"ip_address":"","comment_id":203572,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586235070","product_id":100046201,"comment_content":"那个消息总线模式还是搭配原来的zookeeper吗？还是单独使用消息总线？","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490899,"discussion_content":"zk是不需要消息总线的，zab协议就保证了一致性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586733964,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":201190,"user_name":"X中倪","can_delete":false,"product_type":"c1","uid":1418862,"ip_address":"","ucode":"F28FAFF2FEDD1A","user_header":"https://static001.geekbang.org/account/avatar/00/15/a6/6e/21907ff9.jpg","comment_is_top":false,"comment_ctime":1585730694,"is_pvip":false,"replies":[{"id":"76881","content":"你可以简单理解为redis","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1586734885,"ip_address":"","comment_id":201190,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585730694","product_id":100046201,"comment_content":"文档当中所提到的Hazelcast。<br>问题一：这个到底是个啥？<br>问题二：什么样的业务场景才能用上它？并且发挥出它巨大的优势。","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490260,"discussion_content":"你可以简单理解为redis","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586734885,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":200494,"user_name":"zero","can_delete":false,"product_type":"c1","uid":1168269,"ip_address":"","ucode":"B5D2A838392DF2","user_header":"https://static001.geekbang.org/account/avatar/00/11/d3/8d/f4ab1eab.jpg","comment_is_top":false,"comment_ctime":1585613178,"is_pvip":true,"replies":[{"id":"76887","content":"看gc时间长短，一般情况下gc很短的话，要让rpc来处理这种问题很难的","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1586735410,"ip_address":"","comment_id":200494,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585613178","product_id":100046201,"comment_content":"老师，有一种场景zk可能无法发现，如有台服务发生了gc，这时过来的请求大部分人都会失败，但是还是会把请求路由到此实例上来，这个有什么好的方案吗？","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490046,"discussion_content":"看gc时间长短，一般情况下gc很短的话，要让rpc来处理这种问题很难的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586735410,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":195851,"user_name":"魔曦","can_delete":false,"product_type":"c1","uid":1045408,"ip_address":"","ucode":"87BA5EC5B0BC42","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f3/a0/a693e561.jpg","comment_is_top":false,"comment_ctime":1585219216,"is_pvip":false,"replies":[{"id":"74945","content":"看集群规模","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1585570525,"ip_address":"","comment_id":195851,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585219216","product_id":100046201,"comment_content":"注册中心的选型可以采用现有的nacos；或者基于gossip协议来搞","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489174,"discussion_content":"看集群规模","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585570525,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":195126,"user_name":"王大伟","can_delete":false,"product_type":"c1","uid":1180955,"ip_address":"","ucode":"A3BDC4D7B94B0F","user_header":"https://static001.geekbang.org/account/avatar/00/12/05/1b/fc1aa0ac.jpg","comment_is_top":false,"comment_ctime":1585139213,"is_pvip":true,"replies":[{"id":"74973","content":"理论上可行，但这样复杂性相对很高","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1585571992,"ip_address":"","comment_id":195126,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585139213","product_id":100046201,"comment_content":"看了隔壁的分布式协议算法与实战，感觉可以基于gossip协议实现多节点分布式服务注册中心：<br>1. 注册中心与服务消费&#47;服务提供节点用netty tcp长连接<br>2. 注册中心之间的消息通过gossip协议传播<br>3. 注册中心接到消息，看是否需要投递到服务发现&#47;服务提供节点，有需要就投递<br><br>老师，目前有没有较为成熟的gossip开源实现呢？","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488984,"discussion_content":"理论上可行，但这样复杂性相对很高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585571992,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":194388,"user_name":"王大伟","can_delete":false,"product_type":"c1","uid":1180955,"ip_address":"","ucode":"A3BDC4D7B94B0F","user_header":"https://static001.geekbang.org/account/avatar/00/12/05/1b/fc1aa0ac.jpg","comment_is_top":false,"comment_ctime":1585056920,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1585056920","product_id":100046201,"comment_content":"通知rpc调用端限流","like_count":0},{"had_liked":false,"id":192684,"user_name":"桂冠远航","can_delete":false,"product_type":"c1","uid":1155463,"ip_address":"","ucode":"5959E1A1DAA05D","user_header":"https://static001.geekbang.org/account/avatar/00/11/a1/87/259ab5a3.jpg","comment_is_top":false,"comment_ctime":1584868082,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584868082","product_id":100046201,"comment_content":"讲的zk这个例子似曾相识，才想起来讲师是京东的。","like_count":0},{"had_liked":false,"id":188614,"user_name":"kevin","can_delete":false,"product_type":"c1","uid":1199192,"ip_address":"","ucode":"918EFC033B1630","user_header":"https://static001.geekbang.org/account/avatar/00/12/4c/58/25152fa9.jpg","comment_is_top":false,"comment_ctime":1584374554,"is_pvip":false,"replies":[{"id":"72792","content":"不错的主意。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1584410789,"ip_address":"","comment_id":188614,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584374554","product_id":100046201,"comment_content":"注册中心作为rpc框架的核心依赖，如果有问题整体的功能会收到影响，其可用性是一个非常重要的指标，所以更加关注AP，那么在进行技术选型时考虑一些支持AP模式的中间件，例如Redis","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487467,"discussion_content":"不错的主意。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584410789,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":188607,"user_name":"kevin","can_delete":false,"product_type":"c1","uid":1199192,"ip_address":"","ucode":"918EFC033B1630","user_header":"https://static001.geekbang.org/account/avatar/00/12/4c/58/25152fa9.jpg","comment_is_top":false,"comment_ctime":1584374220,"is_pvip":false,"replies":[{"id":"72795","content":"想一想有没有更好的办法。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1584411278,"ip_address":"","comment_id":188607,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584374220","product_id":100046201,"comment_content":"切流方案是控制流量进行路由，可以通过路由控制或者是给服务提供方设置权重达到目的","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487465,"discussion_content":"想一想有没有更好的办法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584411278,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187065,"user_name":"Sean","can_delete":false,"product_type":"c1","uid":1503171,"ip_address":"","ucode":"D30297DEBFA1DA","user_header":"https://static001.geekbang.org/account/avatar/00/16/ef/c3/ecf4c7fb.jpg","comment_is_top":false,"comment_ctime":1584004101,"is_pvip":false,"replies":[{"id":"72549","content":"需要跟rpc来配合，不用注册中心来判断，在调用方来判断。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1584284499,"ip_address":"","comment_id":187065,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584004101","product_id":100046201,"comment_content":"可以给每个节点加一个weight 有服务发现方控制修改 这个weight还可以用来帮助做负载测试和normalize不同的硬件SKU<br><br>老师 请问用AP的方法 怎样可以最快的发现节点消失 比如说crash或长GC","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486976,"discussion_content":"需要跟rpc来配合，不用注册中心来判断，在调用方来判断。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584284499,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186057,"user_name":"百威","can_delete":false,"product_type":"c1","uid":1074843,"ip_address":"","ucode":"758199FDD0B44F","user_header":"https://static001.geekbang.org/account/avatar/00/10/66/9b/59776420.jpg","comment_is_top":false,"comment_ctime":1583747140,"is_pvip":false,"replies":[{"id":"71876","content":"配置信息由客户端配置，也可由配置中心管理","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1583749988,"ip_address":"","comment_id":186057,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583747140","product_id":100046201,"comment_content":"老师，求解答……我看到这个思考题，第一反应是负载均衡，我看评论很多也是，也得到了老师的肯定，由此我有几个问题<br>1.在这种rpc框架中，是不是客户端和注册中心都会有负载均衡？（如果是的话，那这道题答案应该是客户端的吧）如果都有，那他们各自职责怎么明确呢，感觉总会有一些交集？<br>2.如果客户端有负载均衡，那这些配置也是存在注册中心上么？如果是的话，比如像题中的摘掉流量，应该是也会有一些延时才退给客户端，对么？<br><br>谢谢老师～","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486602,"discussion_content":"配置信息由客户端配置，也可由配置中心管理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583749988,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185788,"user_name":"wusiration","can_delete":false,"product_type":"c1","uid":1104438,"ip_address":"","ucode":"A9403377054F1E","user_header":"https://static001.geekbang.org/account/avatar/00/10/da/36/ac0ff6a7.jpg","comment_is_top":false,"comment_ctime":1583678920,"is_pvip":false,"replies":[{"id":"71839","content":"很棒","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1583732984,"ip_address":"","comment_id":185788,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583678920","product_id":100046201,"comment_content":"负载均衡，将对应节点的流量切为0","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486502,"discussion_content":"很棒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583732984,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185628,"user_name":"Reason","can_delete":false,"product_type":"c1","uid":1878898,"ip_address":"","ucode":"C2A8D67BC6F94D","user_header":"https://static001.geekbang.org/account/avatar/00/1c/ab/72/c3a5eff3.jpg","comment_is_top":false,"comment_ctime":1583649523,"is_pvip":false,"replies":[{"id":"71840","content":"很棒","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1583733019,"ip_address":"","comment_id":185628,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583649523","product_id":100046201,"comment_content":"要把服务流量切走还可以采用客户端服务负载均衡和服务路由的方式。服务路由则采取面向标签的路由方式，根据标签值确定选择访问的服务端实例","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486440,"discussion_content":"很棒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583733019,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185557,"user_name":"问心","can_delete":false,"product_type":"c1","uid":1250775,"ip_address":"","ucode":"6808568D61CE36","user_header":"https://static001.geekbang.org/account/avatar/00/13/15/d7/96e77edd.jpg","comment_is_top":false,"comment_ctime":1583633129,"is_pvip":true,"replies":[{"id":"71846","content":"这样负载均衡自身就有瓶颈，而且很难满足个性需求，比如：分组、路由等","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1583733517,"ip_address":"","comment_id":185557,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583633129","product_id":100046201,"comment_content":"老师，DNS+负载均衡的灵活性差体现在哪呢。现在负载均衡都提供了接口去注册，配置负载百分比，同时还可以使用http、tcp、udp的健康检查用于自动上下线。是有哪些高级玩法，这样不能用么？","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486413,"discussion_content":"这样负载均衡自身就有瓶颈，而且很难满足个性需求，比如：分组、路由等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583733517,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185525,"user_name":"shen","can_delete":false,"product_type":"c1","uid":1215066,"ip_address":"","ucode":"AE5737B0C7DC4F","user_header":"https://static001.geekbang.org/account/avatar/00/12/8a/5a/b67a82e3.jpg","comment_is_top":false,"comment_ctime":1583599066,"is_pvip":false,"replies":[{"id":"71847","content":"操作有点复杂","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1583733609,"ip_address":"","comment_id":185525,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583599066","product_id":100046201,"comment_content":"直接再管理后台将注册中心的路由下线有可以了","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486394,"discussion_content":"操作有点复杂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583733609,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185276,"user_name":"嚆同学","can_delete":false,"product_type":"c1","uid":1018329,"ip_address":"","ucode":"5F5BFE47B3302C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/89/d9/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1583551194,"is_pvip":false,"replies":[{"id":"71612","content":"很棒","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1583620709,"ip_address":"","comment_id":185276,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583551194","product_id":100046201,"comment_content":"想到通过修改负载均衡算法的负载权重，一般通过配置中心修改","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486311,"discussion_content":"很棒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583620709,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185194,"user_name":"小鱼儿","can_delete":false,"product_type":"c1","uid":1053492,"ip_address":"","ucode":"989EC453936B91","user_header":"https://static001.geekbang.org/account/avatar/00/10/13/34/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1583510805,"is_pvip":false,"replies":[{"id":"71636","content":"nginx的存在就变成集中式了","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1583624654,"ip_address":"","comment_id":185194,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583510805","product_id":100046201,"comment_content":"老师，你好。能够通过nginx进行负载均衡，consul进行服务注册与发现。服务提供方通过注册器注册到consul中，consul模板更新nginx。而调用发只需要连nginx即可。","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486284,"discussion_content":"nginx的存在就变成集中式了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583624654,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185019,"user_name":"hello","can_delete":false,"product_type":"c1","uid":1464199,"ip_address":"","ucode":"854500026E2187","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKhuGLVRYZibOTfMumk53Wn8Q0Rkg0o6DzTicbibCq42lWQoZ8lFeQvicaXuZa7dYsr9URMrtpXMVDDww/132","comment_is_top":false,"comment_ctime":1583466273,"is_pvip":false,"replies":[{"id":"71843","content":"可以考虑权重配置","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1583733330,"ip_address":"","comment_id":185019,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583466273","product_id":100046201,"comment_content":"一般会提供一个后台API接口，将需要下线的实例先从注册中心移除。期待老师巧妙地思路！！！","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486217,"discussion_content":"可以考虑权重配置","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583733330,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184911,"user_name":"lingjiango","can_delete":false,"product_type":"c1","uid":1876016,"ip_address":"","ucode":"202B67F1AACDAB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoz2e0Ka1CFfMIgZ8XHaVukpJm0Upibh68Wplru5a6zv0SkibM668tVaIGdMjpUHN8wEmiaTVtWgiahKQ/132","comment_is_top":false,"comment_ctime":1583451183,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583451183","product_id":100046201,"comment_content":"流量网关？","like_count":0}]}