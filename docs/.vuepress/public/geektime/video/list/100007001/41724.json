{"id":41724,"title":"104 | 服务发现需求和模式（下）","content":"无","comments":[{"had_liked":false,"id":43057,"user_name":"DDs moving castle","can_delete":false,"product_type":"c3","uid":1066684,"ip_address":"","ucode":"08CA816F665E39","user_header":"https://static001.geekbang.org/account/avatar/00/10/46/bc/463cca3f.jpg","comment_is_top":false,"comment_ctime":1543152003,"is_pvip":false,"replies":[{"id":15524,"content":"你理解了原理的话，用zuul或kong+Eureka都可以实现，定制是肯定需要的，比如kong和eureka集成，没有现成客户端，一般需要在kong里头，用lua去访问eureka的http接口，然后和kong内部负载均衡逻辑进行集成。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1543236278,"ip_address":"","comment_id":43057,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"变体1 和 变体2 都是很好的模式，能不能介绍一下实现变体1、2可以使用什么开源产品，它们的性能又如何？\n比如变体1是不是可以用Zuul+Eureka+Ribbon实现，但Zuul本身的性能不如Nginx，所以可以用Kong？那么注册中心及其客户端又使用什么呢？","like_count":3,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430287,"discussion_content":"你理解了原理的话，用zuul或kong+Eureka都可以实现，定制是肯定需要的，比如kong和eureka集成，没有现成客户端，一般需要在kong里头，用lua去访问eureka的http接口，然后和kong内部负载均衡逻辑进行集成。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543236278,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":39466,"user_name":"瓜子没有子","can_delete":false,"product_type":"c3","uid":1055920,"ip_address":"","ucode":"AE2D8513BB9513","user_header":"https://static001.geekbang.org/account/avatar/00/10/1c/b0/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1542284689,"is_pvip":false,"replies":[{"id":14310,"content":"F5下可配多台nginx，这样F5就可对nginx进行负载均衡，nginx再对后台服务做负载均衡，在nginx上配服务反向路由等会比较简单，nginx本身无状态可水平扩展。F5有专门的高可用方案，比如Master&#47;Slave方式。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1542367897,"ip_address":"","comment_id":39466,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"双重负载是怎么配置的？ F5下配置多台nignx吗 没太明白 最终F5不依然是单点吗","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429077,"discussion_content":"F5下可配多台nginx，这样F5就可对nginx进行负载均衡，nginx再对后台服务做负载均衡，在nginx上配服务反向路由等会比较简单，nginx本身无状态可水平扩展。F5有专门的高可用方案，比如Master/Slave方式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542367897,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1736444,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ZJjl8bEt5zdqufZ304Ra0eibWtJPoVqpMjhu5xgd0o2oAj1ib6MBBWicHzTSFkEPiahxWwiaGsPib4S6N38kCFF0pDDg/132","nickname":"Geek_d432e7","note":"","ucode":"11FCAA56EE8120","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295504,"discussion_content":"从拓扑结构上看，应该是H5托管多台nginx，这里可以将nginx看做是H5的后端webserver。将请求均匀分布到不同的nginx上，然后在使用nginx充当反向代理服务器，对于流量进行进一步的分流。这种设计类似于网络规范的方面的设计。H5看做核心交换，nginx可以看成三层交换。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596210391,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":276117,"user_name":"马文龙","can_delete":false,"product_type":"c3","uid":1068432,"ip_address":"","ucode":"679B0F0AB402C7","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/90/25b6f544.jpg","comment_is_top":false,"comment_ctime":1611798420,"is_pvip":false,"replies":[{"id":100439,"content":"变体1可以参考nginx + consul + consul template方案：\nhttps:&#47;&#47;learn.hashicorp.com&#47;tutorials&#47;consul&#47;load-balancing-nginx\nhttps:&#47;&#47;github.com&#47;hashicorp&#47;consul-template\n\n变体2可以参考点评的camel方案，它们扩展了nginx，支持通过API直接操作nginx，包括应用上下线，扩容缩容等：\nhttps:&#47;&#47;github.com&#47;dianping&#47;camel\n\n如果能一步到位，可以直接考虑上k8s云环境，内置自动支持服务发现和负载均衡，就不用自己去搞这一套了。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1612108571,"ip_address":"","comment_id":276117,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"老师是否可以再仔细全面的介绍一下变体1和变体2的解决方案，感觉这是很多企业过度需要的很重要的方案，尤其对于传统架构的企业在转型微服务过程中。","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514606,"discussion_content":"变体1可以参考nginx + consul + consul template方案：\nhttps://learn.hashicorp.com/tutorials/consul/load-balancing-nginx\nhttps://github.com/hashicorp/consul-template\n\n变体2可以参考点评的camel方案，它们扩展了nginx，支持通过API直接操作nginx，包括应用上下线，扩容缩容等：\nhttps://github.com/dianping/camel\n\n如果能一步到位，可以直接考虑上k8s云环境，内置自动支持服务发现和负载均衡，就不用自己去搞这一套了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612108571,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":192364,"user_name":"风影小民","can_delete":false,"product_type":"c3","uid":1744068,"ip_address":"","ucode":"8AC0CE7753BFD3","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/pwQBV7m6IeBFbUZ2e0aEjicdtSkz1HnJCxp0HGlN2VFvYs9hkHicG1lmPSVpQiatkItOnX7OibSmZeEPwn7oAlvlPA/132","comment_is_top":false,"comment_ctime":1584847713,"is_pvip":false,"replies":[{"id":74020,"content":"ingress在k8s中相当于部署在边界上的反向代理(常用nginx)。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1585055338,"ip_address":"","comment_id":192364,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"变体1跟k8s的ingress+service有点像","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488380,"discussion_content":"ingress在k8s中相当于部署在边界上的反向代理(常用nginx)。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585055338,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163660,"user_name":"赵津","can_delete":false,"product_type":"c3","uid":1121425,"ip_address":"","ucode":"B9FCE2609DC2E4","user_header":"https://static001.geekbang.org/account/avatar/00/11/1c/91/6eed5044.jpg","comment_is_top":false,"comment_ctime":1576762762,"is_pvip":false,"replies":[{"id":62342,"content":"泛域名可以参考百度百科的解释：\nhttps:&#47;&#47;baike.baidu.com&#47;item&#47;%E6%B3%9B%E5%9F%9F%E5%90%8D\n","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1576842066,"ip_address":"","comment_id":163660,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"老师指的泛域名是配置在 host 文件中的那种方式么？","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478493,"discussion_content":"泛域名可以参考百度百科的解释：\nhttps://baike.baidu.com/item/%E6%B3%9B%E5%9F%9F%E5%90%8D\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576842066,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78646,"user_name":"周学成","can_delete":false,"product_type":"c3","uid":1257370,"ip_address":"","ucode":"DA715C506650CD","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/9a/212395a9.jpg","comment_is_top":false,"comment_ctime":1553210081,"is_pvip":false,"replies":[{"id":29007,"content":"你好，变体一架构中，所有proxy无状态，可水平扩展实现HA，所以不能认为是单点。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1553518388,"ip_address":"","comment_id":78646,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100007001,"comment_content":"变体一\nconsumer调用proxy,proxy是单点吗？","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444176,"discussion_content":"你好，变体一架构中，所有proxy无状态，可水平扩展实现HA，所以不能认为是单点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553518388,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}