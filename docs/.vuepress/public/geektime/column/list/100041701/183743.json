{"id":183743,"title":"10 | 信息泄露：为什么黑客会知道你的代码逻辑？","content":"<p>你好，我是何为舟。</p><p>你平时在Debug的时候，一定首先会去查看错误信息。根据错误信息，你能够了解究竟是什么情况引发了什么样的错误。同样地，黑客也能够通过错误信息，推断出你的后台代码逻辑。那么，黑客究竟是怎么做的呢？接下来，我们就一起看一下这个过程。</p><h2>为什么错误信息会泄露代码逻辑？</h2><p>当黑客在登录某个页面时，在用户名位置输入一个单引号，在密码位置输入一个“g”之后，就会出现如下的错误信息。</p><pre><code>An Error Has Occurred.\n    Error Message:\n   System.Data.OleDb.OleDbException: Syntax error (missing operator) in query expression 'username = ''' and password = 'g''. at\n  System.Data.OleDb.OleDbCommand.ExecuteCommandTextErrorHandling ( Int32 hr) at\n  System.Data.OleDb.OleDbCommand.ExecuteCommandTextForSingleResult ( tagDBPARAMS dbParams,  Object&amp; executeResult) at \n</code></pre><p>从这个错误信息中，我们可以看到，网页最终执行了一个SQL语句，这个SQL语句的部分内容为<code>username = ''' and password = 'g'</code>。因此，后台的大致逻辑应该是下面这样的。</p><p>第一，错误信息反馈的是Syntax error，即语法错误。在密码位置输入单个字母“g”肯定不会引起错误，所以，这个SQL语句是因为多了一个单引号导致的报错。而如果使用了PreparedStatement等方法，是不会产生这个错误的。因此，后台的SQL查询应该是直接采用的字符串拼接，且没有过滤单引号。</p><p>第二，错误信息中显示了部分的WHERE条件是<code>username = '' and password = ''</code>。这又是一个登录的逻辑，所以，只要用户名和密码正确，这个SQL语句会返回黑客需要的用户信息。因此，后台的SQL语句应该是形如select from where的格式。</p><!-- [[[read_end]]] --><p>根据这些信息，黑客很容易就可以发起SQL注入攻击了。</p><p>那错误信息中包含的敏感信息这么多，怎么避免被直接展示到前端呢？我们可以通过正确地配置文件，来进行合适的错误处理。比如，在PHP中，我们可以进行如下配置：</p><pre><code>error_reporting  =  E_ALL                   ;向PHP报告发生的每个错误   \ndisplay_errors = Off                        ;不显示满足上条指令所定义规则的所有错误报告   \nlog_errors = On                             ;决定日志语句记录的位置   \nlog_errors_max_len = 1024                   ;设置每个日志项的最大长度   \nerror_log = /var/log/php_error.log          ;指定产生的错误报告写入的日志文件位置  \n</code></pre><p>在Java Spring中，我们也可以通过配置<a href=\"https://www.baeldung.com/exception-handling-for-rest-with-spring\">ExceptionHandler</a>等来进行处理。</p><p>避免错误信息泄露代码逻辑，一方面是要通过正确地配置文件，避免错误信息被展示到前端；另一方面是要对错误信息进行检测，这里就需要用到“黑盒”检测了。</p><p>所谓“黑盒（Black Box Testing，功能测试）”，就是在不获取代码的情况下，直接运行应用，然后对应用的请求和响应进行扫描。比如，在错误信息泄露的场景中，“黑盒”检测可以向应用发起一些必然会导致错误的请求（比如上述例子中的单引号），然后观察应用是返回完整的错误日志，还是返回某些经过处理的页面。</p><p>好了，现在你应该明白了，为啥错误信息会泄露代码逻辑。实际上，错误信息泄露属于一种间接的信息泄露方式。间接的信息泄露方式主要是通过拼凑各种零散信息，还原出代码整体的面貌，然后有针对性地发起攻击。所以我们常说，黑客的攻击本身就是一个“聚沙成塔”的过程。</p><h2>除了错误信息，还有什么地方会泄露代码逻辑？</h2><p>除了错误信息之外，间接的信息泄露方式还有两种：返回信息泄露和注释信息泄露。</p><p>注释信息你应该很熟悉。因为所有的前端代码基本都不需要编译就可以展示在浏览器中，所以黑客很容易就可以看到前端代码中的注释信息。但是，如果这些注释信息中出现服务器IP、数据库地址和认证密码这样的关键信息。一旦这些关键信息被泄露，将会造成十分严重的后果。</p><p>那该如何避免关键的注释信息出现在线上的代码中呢？我们经常会使用一种叫作“白盒”的代码检测方法。</p><p>所谓“白盒（White Box Testing，结构测试）”，即直接获取到线上的源代码，然后对它进行扫描。“白盒”扫描注释信息的原理比较简单，因为每一种语言的注释都会带有特殊的标记（比如Java和PHP中的/*等），可以比较准确地被识别出来。除此之外，“白盒”检测通常还会被用来做一些检测代码漏洞或者逻辑漏洞的工作，这一块比较复杂，现在你只需要有一个大概印象即可，我们会在后续的课程中专门来讲。</p><p>简单了解了注释信息泄露，我们下面重点来看返回信息泄露。</p><p>你可以回忆一下，在前面讲<a href=\"https://time.geekbang.org/column/article/182074\">SSRF</a>攻击的时候，我们模拟过这样一个场景：服务端在请求一个图片地址的时候，会根据地址的“存活”情况和返回数据的类型，分别返回三种结果：“图片不存在”“格式错误”以及图片正常显示。而黑客正是通过服务端返回信息的逻辑，利用一个请求图片的SSRF，摸清整个后端服务的“存活情况”。</p><p>类似的多种返回状态的场景还有很多，你可以想想自己平时工作中有没有遇到过。这里我再说一个常见的。当你在登录应用的时候，应用的返回逻辑可能是这样的：如果输入的用户名和密码正确，则登录成功；如果应用没有这个用户，则返回“用户名不存在”；如果输入的用户名和密码不匹配，则返回“密码错误”。</p><p>尽管这样清晰的登录提示对于用户体验来说，确实是一个较优解，但这个逻辑同样也暴露了过多的信息给黑客。黑客只需要不断地发起登录请求，就能够知道应用中存在的用户名，然后通过遍历常见的弱密码进行尝试，很容易就能够猜对密码。这样一来，猜对密码的成功率就比尝试同时猜测用户名和密码要高很多。</p><p>实际上，返回信息过于明确不算是代码层面的漏洞，更多的是产品层面的漏洞。因此，理论上没有任何技术手段能够对这种漏洞进行检测，只能依靠人为的分析审计来避免。解决方案也比较简单，直接将返回信息模糊化、统一化即可。比如，在上述登录的场景中，我们可以将两种登录失败的返回信息，统一修改为“用户名不存在或密码错误”。这样一来，既避免了用户体验受到太大影响，又消除了关键信息被黑客获取的隐患。</p><h2>有哪些常见的直接泄露方式？</h2><p>在间接的泄露方式中，黑客可以通过“蛛丝马迹”，推断出服务代码的逻辑。但是信息泄露最普遍的方式还是直接泄露 。这里我会讲两种常见的直接泄露方式。</p><p>第一种泄露方式与版本管理工具中的隐藏文件有关。</p><p>在开发应用的过程中，你一定使用过版本管理工具（比如SVN和Git），通过这些工具，你能够很方便地进行代码回滚、备份等操作。那你有没有想过，版本管理工具为什么这么方便呢？它的工作原理又是怎么样的呢？我们以SVN为例来说一说。</p><p>SVN会在项目目录中创建一个.svn文件夹，里面保存了应用每一个版本的源文件信息，这也是SVN实现代码回滚的数据基础。如果SVN可以通过.svn中的数据提取应用任意版本的代码，那黑客也可以。只要你没有在上线代码的时候删除其中的.svn目录，那就代表黑客可以通过.svn中的URL访问里面的所有文件。接下来，只需要通过执行简单的<a href=\"https://github.com/admintony/svnExploit\">脚本</a>，黑客就可以回溯出一个完整版本的代码了。</p><p>对于这种因为目录中额外内容（.svn/.git）导致的源码泄露，我们一方面需要对线上代码进行人工的代码审查，确保无关的文件和文件夹被正确地清除；另一方面，我们也可以在HTTP服务中对部分敏感的路径进行限制。比如，在Apache httpd中配置下面的内容，来禁止黑客对.svn和.git目录的访问。</p><pre><code>&lt;DirectoryMatch \\.(svn|git)&gt;\n  Order allow,deny\n  Deny from all\n&lt;/DirectoryMatch&gt;\n</code></pre><p>除此之外，还有一种最常见、也最不容易注意的泄露方式，那就是上传代码到GitHub上。</p><p>我们知道，Git除了是一个版本管理工具之外，还是一个很流行的代码管理工具。除了前面讲过的隐藏文件漏洞之外（Git会生成.git，同样包含应用各种版本的文件信息），Git还存在将代码上传到公开平台的问题。但是，使用GitHub上传代码通常属于个人行为，所以，我们很难从技术层面上进行预防。</p><p>那我们有没有一些有效的防护措施，可以尽可能地提高安全性呢？</p><p>我个人认为，公司应该从加强员工安全意识的培训、强化公司管理制度入手，避免员工私自上传代码。除此之外，公司还可以对GitHub发起巡检（比较知名的工具有<a href=\"https://github.com/0xbug/Hawkeye\">Hawkeye</a>），通过定期检索公司代码的关键字（比如常用的包名、域名等）来进行检测。通过这些方式匹配到的结果，很可能就是员工私自公开的代码。确认之后，我们就可以联系上传的人员进行删除了。</p><h2>总结</h2><p>好了，今天的内容讲完了。我们来一起总结回顾一下，你需要掌握的重点内容。</p><p>信息泄露这类漏洞很容易理解，但它能够造成的危害却不容小觑。<strong>基本上，所有攻击的第一步都是从信息泄露开始的</strong>。而且黑客没有办法攻击一个未知的系统，所以黑客会通过这些泄露的信息，去推断出应用的整体架构和逻辑。</p><p>信息泄露的方式和原因有很多，这其中，除了黑客主动发起攻击导致的信息泄露之外，有很多非技术原因导致的信息泄露。所以，相应的防护手段也比较零散。不过总体来说，我们可以从以下几个方面进行防护：</p><ul>\n<li>屏蔽信息：通过技术手段，将不该被访问的资源进行屏蔽，从而避免信息泄露的产生；</li>\n<li>代码检测：从“白盒”和“黑盒”两个方向，对代码、应用等进行检测，对可能的泄露进行预警；</li>\n<li>人工审计：对于非技术原因造成的泄露，加强人工审计的工作。同时从公司制度上，去提高员工的安全意识。</li>\n</ul><p>今天的内容虽然比较简单，但是为了方便你记忆，我还是总结了一张知识脑图，你可以利用它来查缺补漏，加深记忆。</p><p><img src=\"https://static001.geekbang.org/resource/image/9a/ad/9a522b774b1e2b40a94894c54300c3ad.jpg?wh=947*441\" alt=\"\"></p><h2>思考题</h2><p>最后给你留一个思考题。</p><p>通过今天的讲解，你可以回忆一下，你的公司或者你负责的应用当中，是否发生过类似的信息泄露事件呢？如果发生过，对你的公司或者应用都造成了什么影响呢？最后又是如何解决的呢？</p><p>欢迎留言和我分享你的思考和疑惑，也欢迎你把文章分享给你的朋友。我们下一讲再见！</p>","neighbors":{"left":{"article_title":"09 | 反序列化漏洞：使用了编译型语言，为什么还是会被注入？","id":182421},"right":{"article_title":"11 | 插件漏洞：我的代码看起来很安全，为什么还会出现漏洞？","id":184728}},"comments":[{"had_liked":false,"id":167066,"user_name":"qinsi","can_delete":false,"product_type":"c1","uid":1667175,"ip_address":"","ucode":"090D9C4068FF12","user_header":"https://static001.geekbang.org/account/avatar/00/19/70/67/0c1359c2.jpg","comment_is_top":false,"comment_ctime":1577681551,"is_pvip":true,"replies":[{"id":"64933","content":"你好，感谢你的留言。旁路泄露确实也比较重要。其实间接的泄露方式还有很多，比如robots.txt里面的url路径等。这些在平常都很难意识到问题的存在，更多的是吃一堑长一智～","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1577717550,"ip_address":"","comment_id":167066,"utype":1}],"discussion_count":1,"race_medal":0,"score":"66002190991","product_id":100041701,"comment_content":"还有旁路信息泄漏。以上面的用户登录场景为例，对于无效用户和有效用户的登录请求，如果服务端处理耗时不一样也会泄漏信息。又比如padding oracle攻击，只要服务端返回的信息可以区分解密成功与否，就可以在没有密钥的情况下经过有限次尝试枚举出解密后的信息","like_count":16,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479731,"discussion_content":"你好，感谢你的留言。旁路泄露确实也比较重要。其实间接的泄露方式还有很多，比如robots.txt里面的url路径等。这些在平常都很难意识到问题的存在，更多的是吃一堑长一智～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577717550,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169538,"user_name":"律飛","can_delete":false,"product_type":"c1","uid":1462608,"ip_address":"","ucode":"65394E437AD2DF","user_header":"https://static001.geekbang.org/account/avatar/00/16/51/50/f5f2a121.jpg","comment_is_top":false,"comment_ctime":1578374363,"is_pvip":false,"replies":[{"id":"66126","content":"对个人而言，可以关注一些安全论坛，了解最新的技术。对公司而言，一般都会建立安全响应中心，用来收集外界的情报。总之，这是这是一个长期发展运营的过程。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1578660536,"ip_address":"","comment_id":169538,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23053210843","product_id":100041701,"comment_content":"网上看了看，内容真不少呀！列举几个：<br>1.Apache样例文件泄露<br>apache 的一些样例文件没有删除，可能存在cookie、session伪造，进行后台登录操作。<br>2.字段加[] 造成信息泄露<br>数据包的所有参数都可能存在，把参数变为数组即可报错出网站绝对路径。<br>3.修改请求方法<br>将get方法改为put 程序就报错，泄漏网站绝对路径。<br> 4.tomcat<br>tomcat 后缀改成大写，会显示源码，只要把jsp文件后缀名改为大写就可以<br>5. war文件信息泄露<br>war文件信息泄露是指部署在war文件由于配置不当，导致其整个报文件以及其他重要的配置文件信息泄露，例如可以直接浏览目录，获取其下面的配置文件：WEB-INF&#47;jdbc.properties,jdbc.properties为数据库链接配置文件。包含数据库链接的账户和密码等重要信息。<br><br>学了这几节课下来，知道开发过程中处处隐藏杀机啊。请教老师，作为公司管理人员和开发人员，除了制定安全制度，提高安全意识外，学习本门课外，平时如何高效地获取相关安全信息呢？","like_count":6,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480603,"discussion_content":"对个人而言，可以关注一些安全论坛，了解最新的技术。对公司而言，一般都会建立安全响应中心，用来收集外界的情报。总之，这是这是一个长期发展运营的过程。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578660536,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270423,"user_name":"靠人品去赢","can_delete":false,"product_type":"c1","uid":1301286,"ip_address":"","ucode":"7A20F9EBE847E1","user_header":"https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg","comment_is_top":false,"comment_ctime":1609123634,"is_pvip":false,"replies":[{"id":"99773","content":"对于攻击者来说，基本都是通过这种细节入手来打开大门的。业务逻辑差不多，但实现逻辑千差万别，因此收集到足够多的细节信息是攻击的基础。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1611284182,"ip_address":"","comment_id":270423,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1609123634","product_id":100041701,"comment_content":"我擦，错误提示太清晰也会有信息泄露的问题，但是感觉这种摸索起来也太“细”了吧。<br>而且感觉实际上大多数大家的业务逻辑什么的都差不多。<br>","like_count":1,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512619,"discussion_content":"对于攻击者来说，基本都是通过这种细节入手来打开大门的。业务逻辑差不多，但实现逻辑千差万别，因此收集到足够多的细节信息是攻击的基础。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611284182,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":243915,"user_name":"LIKE","can_delete":false,"product_type":"c1","uid":1254252,"ip_address":"","ucode":"9DAB7F9051648A","user_header":"https://static001.geekbang.org/account/avatar/00/13/23/6c/82ba5e1f.jpg","comment_is_top":false,"comment_ctime":1598325930,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598325930","product_id":100041701,"comment_content":"间接泄露-返回信息：<br>通过抓包梳理业务流程的接口调用、查看接口返回信息，通常会发现很多非必要调用接口或接口重复调用、接口非必要信息返回。<br>另外面向企业办公的通讯工具：钉钉、企业微信，在一定程度上避免了信息泄露。","like_count":0},{"had_liked":false,"id":199201,"user_name":"COOK","can_delete":false,"product_type":"c1","uid":1233016,"ip_address":"","ucode":"0F1C0E7CA4F36B","user_header":"https://static001.geekbang.org/account/avatar/00/12/d0/78/a11a999d.jpg","comment_is_top":false,"comment_ctime":1585482231,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1585482231","product_id":100041701,"comment_content":"错误信息，异常信息，和代码管理工具都会泄露，发布之前要做好检查","like_count":0},{"had_liked":false,"id":193426,"user_name":"COOK","can_delete":false,"product_type":"c1","uid":1233016,"ip_address":"","ucode":"0F1C0E7CA4F36B","user_header":"https://static001.geekbang.org/account/avatar/00/12/d0/78/a11a999d.jpg","comment_is_top":false,"comment_ctime":1584892480,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1584892480","product_id":100041701,"comment_content":"加强员工安全常识培训，定期检查","like_count":0},{"had_liked":false,"id":189994,"user_name":"官","can_delete":false,"product_type":"c1","uid":1696727,"ip_address":"","ucode":"E3FF6D04B9846B","user_header":"https://static001.geekbang.org/account/avatar/00/19/e3/d7/d7b3505f.jpg","comment_is_top":false,"comment_ctime":1584590024,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584590024","product_id":100041701,"comment_content":"目前还没有直接泄露的情况，但是间接泄露不确定，代码现在很多都存在本地服务器上，虽然有配置一些商业防火墙，但是安全管理还是很少，所以感觉这方面还是要加强。","like_count":0},{"had_liked":false,"id":167781,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1577933668,"is_pvip":false,"replies":[{"id":"65225","content":"不限大小，任何网站都有可能发生。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1577973457,"ip_address":"","comment_id":167781,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1577933668","product_id":100041701,"comment_content":"旁路一般是小网站吧","like_count":1,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479989,"discussion_content":"不限大小，任何网站都有可能发生。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577973457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1257460,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","nickname":"小老鼠","note":"","ucode":"C663A0C863A515","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":119157,"discussion_content":"关键在于共用一台机器作web server或DB server？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578218734,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167088,"user_name":"leslie","can_delete":false,"product_type":"c1","uid":1324255,"ip_address":"","ucode":"798E7C1CC98CC2","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg","comment_is_top":false,"comment_ctime":1577689137,"is_pvip":false,"replies":[{"id":"64935","content":"错误信息一般还是会暴露比较多的代码信息的，最好能做统一处理，返回一个静态的错误页面，或者错误码，都行。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1577717841,"ip_address":"","comment_id":167088,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577689137","product_id":100041701,"comment_content":"直接泄漏没有，不过间接泄漏估计不好说，注释和抛错做过了居然会引发间接泄漏的风险。看来后面要好好检查调整相关的策略了。谢谢老师的分享。","like_count":0,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479740,"discussion_content":"错误信息一般还是会暴露比较多的代码信息的，最好能做统一处理，返回一个静态的错误页面，或者错误码，都行。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577717841,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167016,"user_name":"小晏子","can_delete":false,"product_type":"c1","uid":1132337,"ip_address":"","ucode":"3AAA6FB5ACB6AE","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/31/f35367c8.jpg","comment_is_top":false,"comment_ctime":1577670338,"is_pvip":false,"replies":[{"id":"64883","content":"其实类似的事件很多，大小公司都有。毕竟这么多工程师，很难保证哪个人不注意就传上去了。因此，除了加强培训管理，扫描也是很必要的。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1577682462,"ip_address":"","comment_id":167016,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577670338","product_id":100041701,"comment_content":"想到了著名的B站事件，源代码上传到github，感觉这个很大一部分原因是工程师对github理解的不到位，以为是个人仓库，别人看不到，这块应该加强培训，在入职的时候就应该培训，尤其对于年轻的工程师，安全意识太薄弱。","like_count":1,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479713,"discussion_content":"其实类似的事件很多，大小公司都有。毕竟这么多工程师，很难保证哪个人不注意就传上去了。因此，除了加强培训管理，扫描也是很必要的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577682462,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166975,"user_name":"Cy23","can_delete":false,"product_type":"c1","uid":1591293,"ip_address":"","ucode":"8DC561C5151758","user_header":"https://static001.geekbang.org/account/avatar/00/18/47/fd/895f0c27.jpg","comment_is_top":false,"comment_ctime":1577662002,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577662002","product_id":100041701,"comment_content":"每个目录没有默认页面的都创建空index.php，禁止返回错误信息给客户，模糊返回校验错误提示信息","like_count":0}]}