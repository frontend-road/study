{"id":176901,"title":"22 | 事务开发：多文档事务","content":"<p><strong>课件和Demo地址</strong><br>\n<a href=\"https://gitee.com/geektime-geekbang/geektime-mongodb-course\">https://gitee.com/geektime-geekbang/geektime-mongodb-course</a></p>","comments":[{"had_liked":false,"id":163362,"user_name":"长期规划","can_delete":false,"product_type":"c3","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1576713211,"is_pvip":false,"replies":[{"id":62380,"content":"这个单文档事务叫法背后的逻辑：\n\n关系型里面，用户表和用户电话是分开在两张表。当你需要新增一个新用户，你需要：\n   insert into USER\n   insert into PHONE\n这两个DML需要放在事务范围内，保证两条数据（其实是一条，用户数据）要么一起成功写入，要么回滚。\n\n在MongoDB里面，类似的操作变成了一个单文档操作：\n\n   db.user.insert({ name: &quot;TJ&quot;，phone: [&quot;1234&quot;]})\n\n这个操作里面其实相当于做了两个事情：1） 添加用户  2） 添加电话号码。这两个事情是有原子事务性的-要么一起成功，要么一起失败。\n\n这个是mongo单文档事务的由来。\n\n\n\n","user_name":"作者回复","user_name_real":"远航的TJ 唐建法","uid":1260017,"ctime":1576894733,"ip_address":"","comment_id":163362,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100040001,"comment_content":"MongoDB还是很厉害的，一开始就支持单文档事务，4.0支持多文档事务，4.2支持有分片的分布式事务。不过，单文档事务这叫法有点鸡肋，虽然也的确是事务，但一般我们讲事务时，默认是指多文档的，对比MySQL就是多行。如果我在3.2中用两条更新语句更新一个文档，那应该也不是事务吧？单文档事务这叫法，给人感觉在一个文档上执行多条DML，使用的一个事务，但其实不是。另外，MongoDB在没有显式使用事务语句时，应该就是自动提交吧。","like_count":8,"discussions":[{"author":{"id":1260017,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/f1/6d18a4d1.jpg","nickname":"远航的TJ 唐建法","note":"","ucode":"0719807390250A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478365,"discussion_content":"这个单文档事务叫法背后的逻辑：\n\n关系型里面，用户表和用户电话是分开在两张表。当你需要新增一个新用户，你需要：\n   insert into USER\n   insert into PHONE\n这两个DML需要放在事务范围内，保证两条数据（其实是一条，用户数据）要么一起成功写入，要么回滚。\n\n在MongoDB里面，类似的操作变成了一个单文档操作：\n\n   db.user.insert({ name: &amp;quot;TJ&amp;quot;，phone: [&amp;quot;1234&amp;quot;]})\n\n这个操作里面其实相当于做了两个事情：1） 添加用户  2） 添加电话号码。这两个事情是有原子事务性的-要么一起成功，要么一起失败。\n\n这个是mongo单文档事务的由来。\n\n\n\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1576894733,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1519881,"avatar":"https://static001.geekbang.org/account/avatar/00/17/31/09/f5d68957.jpg","nickname":"礼拜三","note":"","ucode":"C36A84E76E163D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311029,"discussion_content":"在 MySQL 中任意一条 SQL 语句都是一个事务吧，例如 INSERT INTO table1 VALUE (1); 就是一个事务。这条语句实际上也会默认执行 BEGIN + COMMIT 。\n\nMySQL 中显式使用 BEGIN + COMMIT 控制事务就是便于多个 SQL 语句合成一个事务。其实单个 SQL 语句也是一个事务，这就和 MongoDB 的单文档事务一样了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602176422,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1019332,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","nickname":"长期规划","note":"","ucode":"5EF65E9115834B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":93035,"discussion_content":"谢谢老师的解答，我明白了😉👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576900468,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166788,"user_name":"Mao","can_delete":false,"product_type":"c3","uid":1060202,"ip_address":"","ucode":"14CC85BC590A71","user_header":"https://static001.geekbang.org/account/avatar/00/10/2d/6a/323163df.jpg","comment_is_top":false,"comment_ctime":1577595121,"is_pvip":false,"replies":[{"id":65200,"content":"事务性有ACID四个属性，你上面讲的是ACID里面的I， Isolation。Isolation隔离性关注的就是跟读相关的事情。\n\n你说的增删改事务，多半是和A相关，Atomicity，原子性。一起提交，或者全部回滚。","user_name":"作者回复","user_name_real":"远航的TJ 唐建法","uid":1260017,"ctime":1577967851,"ip_address":"","comment_id":166788,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100040001,"comment_content":"事务引入的初衷，是为了解决有多个事务同时执行的时候，就可能出现脏读（dirty read）、\n不可重复读（non-repeatable read）、幻读（phantom read）的问题\n\nMongoDB的事务分为：\navailable：读取所有可用的数据\nlocal：读取所有可用且属于当前分片的数据\nmajority：读取在大多数节点上提交完成的数据\nlinearizable：可线性化读取文档\nsnapshot：读取最近快照中的数据\n\nMySQL的事务分为：\n读未提交（read uncommitted）\n读提交（read committed）\n可重复读（repeatable read）\n串行化（serializable ）\n\n按照字面理解，无论是MongoDB还是MySQL，它们引入事务似乎都是为了解决“读”的问题。\n\n但是我们的项目中，是在多文档&#47;表 的insert、update、remove 这些“非读”的场景下使用。\n\n那么我是否应该理解为，所谓的事务，是MongoDB&#47;MySQL 的service层在执行 insert、update、remove\n\n操作前，对已有数据的一个验证呢？","like_count":7,"discussions":[{"author":{"id":1260017,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/f1/6d18a4d1.jpg","nickname":"远航的TJ 唐建法","note":"","ucode":"0719807390250A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479625,"discussion_content":"事务性有ACID四个属性，你上面讲的是ACID里面的I， Isolation。Isolation隔离性关注的就是跟读相关的事情。\n\n你说的增删改事务，多半是和A相关，Atomicity，原子性。一起提交，或者全部回滚。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577967851,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1525840,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIUlVIL2Y7gVjfuubGmkKVXUv9LUlZURwK0fwnHz4xrzaqf2BjwwSXXNwLrTcxdRnnwhTlwnV1Xcg/132","nickname":"炎炎","note":"","ucode":"386E790507C66D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":221671,"discussion_content":"接着问题，想继续请加老师，可以理解mysql中的“read committed”对应mongo中的“majority”。 那么我的问题是只有“复制集”模式下才有这些可见性的区分吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586044256,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164555,"user_name":"长期规划","can_delete":false,"product_type":"c3","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1577026511,"is_pvip":false,"replies":[{"id":62939,"content":"你要问我，肯定是了。从CRUD操作来说，JSON 数据库更加方便。支持事务以后，现在MongoDB剩下的就是 做BI分析了这一块可能还不算太强。","user_name":"作者回复","user_name_real":"远航的TJ 唐建法","uid":1260017,"ctime":1577181543,"ip_address":"","comment_id":164555,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100040001,"comment_content":"老师，网上看到的文章都说MySQL比MongoDB的最大优势是支持事务（多表），但现在MongoDB 4.0之后已经支持多文档事务了，那我感觉MySQL相对MongoDB来说就没啥优势了，当然，MySQL有外键，join等更强大一些，但这些特性一般不是选择MySQL是根本原因。我感觉所有场景下，都可以用MongoDB代替MySQL，是这样吗","like_count":4,"discussions":[{"author":{"id":1260017,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/f1/6d18a4d1.jpg","nickname":"远航的TJ 唐建法","note":"","ucode":"0719807390250A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478812,"discussion_content":"你要问我，肯定是了。从CRUD操作来说，JSON 数据库更加方便。支持事务以后，现在MongoDB剩下的就是 做BI分析了这一块可能还不算太强。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577181543,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1019332,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","nickname":"长期规划","note":"","ucode":"5EF65E9115834B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":98699,"discussion_content":"多谢老师解答👍😁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577182697,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":165174,"user_name":"蓝魔丶","can_delete":false,"product_type":"c3","uid":1219438,"ip_address":"","ucode":"2AE4359E263558","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/6e/edd2da0c.jpg","comment_is_top":false,"comment_ctime":1577175532,"is_pvip":false,"replies":[{"id":65231,"content":"这个反馈可以去jira.mongodb.org 去提一个Issue,属于产品建议。","user_name":"作者回复","user_name_real":"远航的TJ 唐建法","uid":1260017,"ctime":1577974262,"ip_address":"","comment_id":165174,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100040001,"comment_content":"\n事务写冲突MongoDB的处理方式为什么会有事务内about和事务外等待两种处理方式，为什么不与关系数据库mysql处理方式一样不管事务内还是事务外都采用等待超时的策略，mysql会在写冲突时等待一定的时间，而且保证是当前读操作，能够保证事务更新的正确性，如果等待超时，则会直接crash掉这个事务并不会像MongoDB这样报错about还没有清除事务，需要手动删除，这种方式好吗？","like_count":3,"discussions":[{"author":{"id":1260017,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/f1/6d18a4d1.jpg","nickname":"远航的TJ 唐建法","note":"","ucode":"0719807390250A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479059,"discussion_content":"这个反馈可以去jira.mongodb.org 去提一个Issue,属于产品建议。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577974262,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":193508,"user_name":"依乐祝","can_delete":false,"product_type":"c3","uid":1320243,"ip_address":"","ucode":"0FAE2C7FE1ECDB","user_header":"https://static001.geekbang.org/account/avatar/00/14/25/33/290fcb42.jpg","comment_is_top":false,"comment_ctime":1584921913,"is_pvip":false,"replies":[{"id":74325,"content":"会产生日志。日志里有个特殊字段会标记出来是来自于chunk migration","user_name":"作者回复","user_name_real":"远航的TJ 唐建法","uid":1260017,"ctime":1585221599,"ip_address":"","comment_id":193508,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100040001,"comment_content":"老师问下，chunk过程中各个分片上的oplog是会变化的吗？这时候oplog跟分片上的数据能对应起来吗？这部分日志是不是无用的日志啊","like_count":1,"discussions":[{"author":{"id":1260017,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/f1/6d18a4d1.jpg","nickname":"远航的TJ 唐建法","note":"","ucode":"0719807390250A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488572,"discussion_content":"会产生日志。日志里有个特殊字段会标记出来是来自于chunk migration","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585221599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180855,"user_name":"长脖子树","can_delete":false,"product_type":"c3","uid":1182802,"ip_address":"","ucode":"D9090EF67EEB1B","user_header":"https://static001.geekbang.org/account/avatar/00/12/0c/52/f25c3636.jpg","comment_is_top":false,"comment_ctime":1582429840,"is_pvip":true,"replies":[{"id":70957,"content":"这个是设计如此，也是合理的。一个事务中，每个操作应用一样的隔离级别。","user_name":"作者回复","user_name_real":"远航的TJ 唐建法","uid":1260017,"ctime":1583029691,"ip_address":"","comment_id":180855,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100040001,"comment_content":"老师好, 我在本节课程最后的注意事项中看到,  readConcern 只应该在事务级别中设置, 不能设置在每次读写操作上, \n指的是在 session.startTransaction 中设置么?  为什么?","like_count":1,"discussions":[{"author":{"id":1260017,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/f1/6d18a4d1.jpg","nickname":"远航的TJ 唐建法","note":"","ucode":"0719807390250A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484817,"discussion_content":"这个是设计如此，也是合理的。一个事务中，每个操作应用一样的隔离级别。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583029691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180790,"user_name":"cording","can_delete":false,"product_type":"c3","uid":1786385,"ip_address":"","ucode":"82063AEC231613","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKlllSKrpQkhSXyNj0glDoCiaMKp23ey4Fw0nr54MKKhYAIxxU7toQuukJe2qZjwUC990ojdNmeicVQ/132","comment_is_top":false,"comment_ctime":1582389341,"is_pvip":false,"replies":[{"id":70141,"content":"你这个不用分布式事务吧，用  findAndModify就可以实现了。","user_name":"作者回复","user_name_real":"远航的TJ 唐建法","uid":1260017,"ctime":1582421188,"ip_address":"","comment_id":180790,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100040001,"comment_content":"老师，我想请教一下mongodb有分布式事务锁吗？我想实现某一字段int值自增生成唯一主键","like_count":1,"discussions":[{"author":{"id":1260017,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/f1/6d18a4d1.jpg","nickname":"远航的TJ 唐建法","note":"","ucode":"0719807390250A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484791,"discussion_content":"你这个不用分布式事务吧，用  findAndModify就可以实现了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582421188,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1786385,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKlllSKrpQkhSXyNj0glDoCiaMKp23ey4Fw0nr54MKKhYAIxxU7toQuukJe2qZjwUC990ojdNmeicVQ/132","nickname":"cording","note":"","ucode":"82063AEC231613","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":183500,"discussion_content":"谢谢老师，在mongodb分布式部署，高并发获取这种自增生成的唯一主键，不会重复吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582475256,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186063,"user_name":"cicoding","can_delete":false,"product_type":"c3","uid":1046611,"ip_address":"","ucode":"07FAC3B7D31583","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/53/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1583748358,"is_pvip":false,"replies":[{"id":72145,"content":"不太明白你的问题，可以详细描述一些么","user_name":"作者回复","user_name_real":"远航的TJ 唐建法","uid":1260017,"ctime":1584002328,"ip_address":"","comment_id":186063,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100040001,"comment_content":"你好老师，mongodb在java中开启事务，会导致mysql的食物失效，这个怎么解决呢","like_count":0,"discussions":[{"author":{"id":1260017,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/f1/6d18a4d1.jpg","nickname":"远航的TJ 唐建法","note":"","ucode":"0719807390250A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486606,"discussion_content":"不太明白你的问题，可以详细描述一些么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584002328,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167368,"user_name":"一兵一卒","can_delete":false,"product_type":"c3","uid":1208184,"ip_address":"","ucode":"594B4441559209","user_header":"https://static001.geekbang.org/account/avatar/00/12/6f/78/69a862ee.jpg","comment_is_top":false,"comment_ctime":1577777378,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100040001,"comment_content":"老师您好，可重复读Repeatable Read我是理解为事务内的查询操作在事务提交之前，对事务外的更新操作无感知，还是可以查到之前的数据，我尝试了一下，即使事务启动session.startTransaction()，不加readConcern: {level: &quot;snapshot&quot;}也是可以实现","like_count":2,"discussions":[{"author":{"id":2714469,"avatar":"","nickname":"小贱贱","note":"","ucode":"436BD03904BEE2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566339,"discussion_content":"mongodb 事务默认隔离级别是snapshot ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650649715,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":395546,"user_name":"dahai","can_delete":false,"product_type":"c3","uid":1762705,"ip_address":"山东","ucode":"9F866FC42DF9A8","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIVR2wY9icec2CGzZ4VKPdwK2icytM5k1tHm08qSEysFOgl1y7lk2ccDqSCvzibHufo2Cb9c2hjr0LIg/132","comment_is_top":false,"comment_ctime":1731199617,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100040001,"comment_content":"视频里的原子性单词写错了吧？应该是 Atomicity","like_count":0},{"had_liked":false,"id":365917,"user_name":"非洲黑猴子","can_delete":false,"product_type":"c3","uid":2639724,"ip_address":"美国","ucode":"F5FEAC07D562E0","user_header":"https://static001.geekbang.org/account/avatar/00/28/47/6c/78184d19.jpg","comment_is_top":false,"comment_ctime":1673231590,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":1,"score":3,"product_id":100040001,"comment_content":"上一节的这个操作： \ndb.orders.find({oid:101}).readPref(“secondary”).readConcern(&quot;majority&quot;)\n不就是把readConcern设置在了某一次读写操作上了？这是不是跟最后一条注意事项冲突了？谢谢","like_count":0},{"had_liked":false,"id":334894,"user_name":"waponx","can_delete":false,"product_type":"c3","uid":1362351,"ip_address":"","ucode":"6DBA05835519D0","user_header":"https://static001.geekbang.org/account/avatar/00/14/c9/af/0e7f0c16.jpg","comment_is_top":false,"comment_ctime":1645173356,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100040001,"comment_content":"老师，请教一下，mongo中采用mvcc架构，那么旧版本的数据，是怎么回收，由谁来回收？","like_count":0},{"had_liked":false,"id":280876,"user_name":"Ruby","can_delete":false,"product_type":"c3","uid":1741877,"ip_address":"","ucode":"78DCC0843B7F92","user_header":"https://static001.geekbang.org/account/avatar/00/1a/94/35/a5ace6ae.jpg","comment_is_top":false,"comment_ctime":1614434052,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100040001,"comment_content":"请问mongodb为什么不支持单节点部署的多文档事务呢？我单节点，操作A和B表，也想有原子性，不可以吗？","like_count":0},{"had_liked":false,"id":277708,"user_name":"Ruby","can_delete":false,"product_type":"c3","uid":1741877,"ip_address":"","ucode":"78DCC0843B7F92","user_header":"https://static001.geekbang.org/account/avatar/00/1a/94/35/a5ace6ae.jpg","comment_is_top":false,"comment_ctime":1612521551,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100040001,"comment_content":"老师，您好，请问您如何看待 infoQ里 关于 快照隔离而非ACID，MongoDB数据一致性能力遭质疑这篇文章？\n编者按，使用&quot;majority&quot;写选项的事务导致其他问题。\n","like_count":0},{"had_liked":false,"id":273245,"user_name":"兔子蹬鹰","can_delete":false,"product_type":"c3","uid":2072549,"ip_address":"","ucode":"81E50CD71468BC","user_header":"https://static001.geekbang.org/account/avatar/00/1f/9f/e5/41378e64.jpg","comment_is_top":false,"comment_ctime":1610508119,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100040001,"comment_content":"老师，我有问题求解答。\n据我的了解（可能不一定对哈），CAP理论中，ACID事务可以满足CA，BASE最终一致性理论可以满足AP。\n但是如果说mongodb可以实现“分布式分片集群的ACID”事务，这个我就懵掉了。。。\n想问下mongodb分片集群事务应该不是强一致性吧？希望老师帮忙解答下这部分相关的知识，拜托啦。","like_count":0},{"had_liked":false,"id":270699,"user_name":"Geek_7c4953","can_delete":false,"product_type":"c3","uid":1809168,"ip_address":"","ucode":"359745D4725D4F","user_header":"","comment_is_top":false,"comment_ctime":1609222395,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100040001,"comment_content":"如果在一个高并发的场景下，需要对一个字段进行增减操作应该怎么做？\n比如商品交易时，需要将商品剩余数量-=1，那么在读取和写入之间，其他的扣减剩余数量的读写操作应该都不能进行。\n这时候应该使用什么样的MongoDB事务级别？","like_count":0},{"had_liked":false,"id":241474,"user_name":"杨松","can_delete":false,"product_type":"c3","uid":1512517,"ip_address":"","ucode":"FB3C73BC44C94D","user_header":"https://static001.geekbang.org/account/avatar/00/17/14/45/adf079ae.jpg","comment_is_top":false,"comment_ctime":1597306037,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100040001,"comment_content":"唐老师，请问spring的事务管理注解是否可以用在MongoDB上？","like_count":0},{"had_liked":false,"id":213591,"user_name":"葫芦娃-Dear","can_delete":false,"product_type":"c3","uid":1743582,"ip_address":"","ucode":"606C2E1D80B612","user_header":"https://static001.geekbang.org/account/avatar/00/1a/9a/de/abd008f3.jpg","comment_is_top":false,"comment_ctime":1588485149,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":3,"product_id":100040001,"comment_content":"操作步骤:\nrs0:PRIMARY&gt; db.tx.insert([{x:1},{x:2}])\nBulkWriteResult({\n\t&quot;writeErrors&quot; : [ ],\n\t&quot;writeConcernErrors&quot; : [ ],\n\t&quot;nInserted&quot; : 2,\n\t&quot;nUpserted&quot; : 0,\n\t&quot;nMatched&quot; : 0,\n\t&quot;nModified&quot; : 0,\n\t&quot;nRemoved&quot; : 0,\n\t&quot;upserted&quot; : [ ]\n})\nrs0:PRIMARY&gt; var session=db.getMongo().startSession()\nrs0:PRIMARY&gt; session.startTransaction()\nrs0:PRIMARY&gt; var coll=session.getDatabase(&quot;test&quot;).getCollection(&quot;tx&quot;)\nrs0:PRIMARY&gt; coll.update({x:1},{$set:{y:1}})\nWriteCommandError({\n\t&quot;errorLabels&quot; : [\n\t\t&quot;TransientTransactionError&quot;\n\t],\n\t&quot;operationTime&quot; : Timestamp(1588484702, 1),\n\t&quot;ok&quot; : 0,\n\t&quot;errmsg&quot; : &quot;Given transaction number 0 does not match any in-progress transactions. The active transaction number is -1&quot;,\n\t&quot;code&quot; : 251,\n\t&quot;codeName&quot; : &quot;NoSuchTransaction&quot;,\n\t&quot;$clusterTime&quot; : {\n\t\t&quot;clusterTime&quot; : Timestamp(1588484702, 1),\n\t\t&quot;signature&quot; : {\n\t\t\t&quot;hash&quot; : BinData(0,&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAA=&quot;),\n\t\t\t&quot;keyId&quot; : NumberLong(0)\n\t\t}\n\t}\n})\n执行update，返回错误，insert也返回这个错误","like_count":0,"discussions":[{"author":{"id":2876787,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/e5/73/622e9438.jpg","nickname":"阿尔伯特波","note":"","ucode":"60B86EE085190D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":568652,"discussion_content":"事务默认必须在60 秒（可调）内完成，否则将被取消","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651194492,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163565,"user_name":"月迷津渡","can_delete":false,"product_type":"c3","uid":1264111,"ip_address":"","ucode":"2B18B2FE3DAC3B","user_header":"https://static001.geekbang.org/account/avatar/00/13/49/ef/02401473.jpg","comment_is_top":false,"comment_ctime":1576745771,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100040001,"comment_content":"提问个问题再Repeatable Read这例子里 先启动事务 然后事务外修改数据，事务内的多次读操作永远读到的是启动事务时的snapshot(x:1, y:1)。那我的问题是当事务这时提交时 是不是先拿事务内的修改(比如说改成{x:2,y:1})和事务外的修改比如说改成(x:1:y2)两者做合并然后没冲突的话再提交。最后记录是{x:2,y:2}","like_count":0}]}