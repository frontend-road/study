{"id":105707,"title":"32 | Beam Window：打通流处理的任督二脉","content":"<p>你好，我是蔡元楠。</p><p>今天我要与你分享的主题是“Beam Window：打通流处理的任督二脉”。</p><p>在上一讲中，我们一起用Beam编写了第一个完整的WordCount项目，我们所用的例子是统计莎士比亚的文集中最常使用到的一些单词。</p><p>这里我们所用到的“莎士比亚文集”这种类型的数据集是一个静态的数据集。也就是说，我们在生成输入数据集的时候，就已经知道了这个数据集是完整的，并不需要再等待新的数据进来。</p><p>根据前面的内容，我们可以把这种数据集归类为有界数据集（Bounded Dataset）。这里我们的数据流水线就是一个批处理的数据流水线。</p><p>这个时候你可能会有一个疑问，如果我们想要统计的内容是一个正在连载的小说，我们在编写数据流水线的时候，这个小说还并没有完结，也就是说，未来还会不断有新的内容作为输入数据流入我们的数据流水线，那我们需要怎么做呢？</p><p>这个时候我们就需要用到窗口（Window）这个概念了。</p><h2>窗口</h2><p>在Beam的世界中，窗口这个概念将PCollection里的每个元素根据时间戳（Timestamp）划分成为了不同的有限数据集合。</p><p>当我们要将一些聚合操作（Aggregation）应用在PCollection上面的时候，或者我们想要将不同的PCollections连接（Join）在一起的时候，其实Beam是将这些操作应用在了这些被窗口划分好的不同数据集合上的。</p><!-- [[[read_end]]] --><p>无论是有界数据集还是无界数据集，Beam都会一视同仁，按照上面所说的规则进行处理。</p><p>你可能又会有一个疑问，我们在上一讲的例子当中，根本就没有提到过窗口这个概念，但是我刚刚又说，Beam同样会将有界数据集根据窗口划分成不同的有限数据集合来处理，那这些窗口、PCollection中每个元素的时间戳又是从哪里来的呢？</p><p>其实，我们在用I/O连接器读取有界数据集的过程中，Read Transform会默认为每个元素分配一个相同的时间戳。在一般情况下，这个时间戳就是你运行数据流水线的时间，也就是处理时间（Processing Time）。而Beam也会为这个数据流水线默认地分配一个全局窗口（Global Window），你可以把它理解为是一个从无限小到无限大的时间窗口。</p><p>如果你想要显式地将一个全局窗口赋予一个有界数据集的话，可以使用如下代码来完成：</p><p>Java</p><pre><code>PCollection&lt;String&gt; input = p.apply(TextIO.read().from(filepath));\n\nPCollection&lt;String&gt; batchInputs = input.apply(Window.&lt;String&gt;into(new GlobalWindows()));\n</code></pre><p>需要注意的是，你在处理有界数据集的时候，可以不用显式地将一个窗口分配给一个PCollection数据集。但是，在处理无边界数据集的时候，你必须要显式地分配一个窗口给这个无边界数据集。而这个窗口不可以是前面提到的全局窗口，否则在运行数据流水线的时候会直接抛出异常错误。</p><p>在了解过窗口的基本概念之后，接下来我来给你讲讲在Beam中存在的不同窗口类型。</p><h3>固定窗口（Fixed Window）</h3><p>固定窗口在有的数据处理框架中又被称为滚动窗口（Tumbling Window）。固定窗口通常是由一个静态的窗口大小定义而来的。</p><p>例如，要是我们定义一个每小时的窗口，那这个窗口大小就是固定的一个小时，如果我们按照2019年7月8号的0时作为时间的起始点，那么这个固定窗口就可以分为类似下面这样的形式：</p><pre><code>[July 8, 2019 0:00:00 AM, July 8, 2019 1:00:00 AM)，\n[July 8, 2019 1:00:00 AM, July 8, 2019 2:00:00 AM)\n[July 8, 2019 2:00:00 AM, July 8, 2019 3:00:00 AM)\n……\n</code></pre><p>而一个PCollection中的所有元素，就会根据它们各自自身的时间戳被分配给相应的固定窗口中。</p><p>这里你需要注意一点，因为固定窗口本质上并不可能会重叠在一起，如果我们定义的窗口是固定窗口的话，PCollection中的每一个元素只会落入一个，且是唯一一个窗口中。</p><p>在Beam中，如果要定义一个上述所说的按照每小时分割的窗口，我们可以使用一个Window Transform来完成，如下所示：</p><p>Java</p><pre><code>PCollection&lt;String&gt; input = p.apply(KafkaIO.&lt;Long, String&gt;read()).apply(Values.&lt;String&gt;create());\n\nPCollection&lt;String&gt; fixedWindowedInputs = input.apply(Window.&lt;String&gt;into(FixedWindows.of(Duration.standardHours(1))));\n</code></pre><h3>滑动窗口（Sliding Window）</h3><p>滑动窗口通常是由一个静态的窗口大小和一个滑动周期（Sliding Period）定义而来的。</p><p>例如，我们可以定义一个窗口大小为一个小时，滑动周期为30分钟的一个滑动窗口。我们还是以2019年7月8号的0时作为时间的起始点，那这个滑动窗口可以分为下面这样的形式：</p><pre><code>[July 8, 2019 0:00:00 AM, July 8, 2019 1:00:00 AM)\n[July 8, 2019 0:30:00 AM, July 8, 2019 1:30:00 AM)\n[July 8, 2019 1:00:00 AM, July 8, 2019 2:00:00 AM)\n[July 8, 2019 1:30:00 AM, July 8, 2019 2:30:00 AM)\n……\n</code></pre><p>因为Beam对于滑动周期的大小并没有做任何限制，所以你可以看到，滑动窗口和固定窗口不同的是，当滑动周期小于窗口大小的时候，滑动窗口会有部分重叠。也就是说，在一个PCollection里面，同一个元素是可以被分配到不同的滑动窗口中的。</p><p>可能你也会发现到，当滑动窗口的窗口大小和滑动周期一样的时候，这个滑动窗口的性质其实就和固定窗口一样了。</p><p>在Beam中，如果要定义一个上述所说，窗口大小为一个小时而滑动周期为30分钟的一个滑动窗口，我们同样可以使用一个Window Transform来完成，如下所示：</p><p>Java</p><pre><code>PCollection&lt;String&gt; input = p.apply(KafkaIO.&lt;Long, String&gt;read()).apply(Values.&lt;String&gt;create());\n\nPCollection&lt;String&gt; slidingWindowedInputs = input.apply(Window.&lt;String&gt;into(SlidingWindows.of(Duration.standardHours(1)).every(Duration.standardMinutes(30))));\n</code></pre><h3>会话窗口（Sessions Window）</h3><p>会话窗口和上面所说的两个窗口有点不一样，它并没有一个固定的窗口长度。</p><p>会话窗口主要是用于记录持续了一段时间的活动数据集。在一个会话窗口中的数据集，如果将它里面所有的元素按照时间戳来排序的话，那么任意相邻的两个元素它们的时间戳相差不会超过一个定义好的静态间隔时间段（Gap Duration）。</p><p>怎么理解这个定义呢？我想用一个例子来解释会比较清晰。</p><p>假设，我们现在正在一个视频流的平台中处理无界数据集，我们想要分析在这个平台中的一些用户行为习惯。</p><p>为了方便说明，我们想要分析的问题非常简单，就是一个用户在线看视频一般会在每天的什么时候开始看多长时间的视频。同时，我们假设只会有一个用户的数据流入我们的输入数据集中，这个数据会带有用户对视频平台发送视频流请求的时间戳。</p><p>我们希望定义一个会话窗口来处理这些数据，而这个会话窗口的间隔时间段为5分钟。</p><p>所有的数据假设都是发生在2019年7月8号中的，流入的数据集如下：</p><pre><code>(key1, value1, [7:44:00 AM，7:44:00 AM))\n(key1, value2, [7:45:00 AM，7:45:00 AM))\n(key1, value3, [7:49:00 AM，7:49:00 AM))\n(key1, value4, [8:01:00 AM，8:01:00 AM))\n(key1, value5, [8:02:00 AM，8:02:00 AM))\n</code></pre><p>那么，这5个数据会形成两个会话窗口，分别是：</p><pre><code>(key1，[(value1, [7:44:00 AM，7:44:00 AM)), (value2, [7:45:00 AM，7:45:00 AM)), (value3, [7:49:00 AM，7:49:00 AM))])\n</code></pre><pre><code>(key1，[(value4, [8:01:00 AM，8:01:00 AM)), (value5, [8:02:00 AM，8:02:00 AM))])\n</code></pre><p>你可以看到，在第一个会话窗口中，数据的时间戳分别是7:44:00AM，7:45:00AM和7:49:00AM，这个窗口的总长度有5分钟。任意相邻的两个元素之间的时间间隔不会超过我们之前定义好的5分钟。</p><p>而在第二个会话窗口中，数据的时间戳分别是8:01:00AM和8:02:00AM，这个窗口的总长度有1分钟，同样任意相邻的两个元素之间的时间间隔不会超过5分钟。每一个会话窗口都记录了一个用户的在线活跃点和时长。</p><p>在Beam中，如果要定义一个上述所说会话窗口的话，你可以使用以下代码来完成：</p><p>Java</p><pre><code>PCollection&lt;String&gt; input = p.apply(KafkaIO.&lt;Long, String&gt;read()).apply(Values.&lt;String&gt;create());\n\nPCollection&lt;String&gt; sessionWindowedInputs = input.apply(Window.&lt;String&gt;into(Sessions.withGapDuration(Duration.standardMinutes(5))));\n</code></pre><h2>小结</h2><p>今天我们一起学习了在处理无界数据集的时候，我们需要显示定义到的一个概念——窗口。</p><p>窗口的定义是后面我们编写流处理数据流水线的一个基石。而窗口这个概念其实就是用来回答我们在第23讲中“WWWH”问题里“Where in event time they are being computed”这个问题的。除去全局窗口，Beam里面总共让我们定义三种不同的窗口类型，分别是固定窗口，滑动窗口和会话窗口。</p><h2>思考题</h2><p>在今天介绍的三种时间窗口类型中，你觉得这三种时间窗口分别适合使用在什么样的应用场景中呢？</p><p>欢迎你把答案写在留言区，与我和其他同学一起讨论。如果你觉得有所收获，也欢迎把文章分享给你的朋友。</p><p></p>","neighbors":{"left":{"article_title":"31 | WordCount Beam Pipeline实战","id":105324},"right":{"article_title":"33 | 横看成岭侧成峰：再战Streaming WordCount","id":106491}},"comments":[{"had_liked":false,"id":116765,"user_name":"Chang","can_delete":false,"product_type":"c1","uid":1125147,"ip_address":"","ucode":"CE2050F1BE00DB","user_header":"https://static001.geekbang.org/account/avatar/00/11/2b/1b/e88e33ba.jpg","comment_is_top":false,"comment_ctime":1563922748,"is_pvip":false,"replies":[{"id":"42666","content":"谢谢你的提问！是的，按照你说的情景最终只会产生一个会话窗口。","user_name":"作者回复","user_name_real":"Geek_88e0d7","uid":"1503187","ctime":1563925708,"ip_address":"","comment_id":116765,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14448824636","product_id":100025301,"comment_content":"老师，我对会话窗口的理解不知道对不对：像文中的例子gap是5 min的话，假设有一个数据流每4分钟一个流入一个数据，是不是只需要一个窗口？","like_count":4,"discussions":[{"author":{"id":1503187,"avatar":"","nickname":"Geek_88e0d7","note":"","ucode":"3E2596F3EB9165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459676,"discussion_content":"谢谢你的提问！是的，按照你说的情景最终只会产生一个会话窗口。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563925708,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009644,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erms9qcIFYZ4npgLYPu1QgxQyaXcj64ZBicNVeBRWcYUpCZ9p0BGsrEcX8heibMLCV4Gde4P9pf7PjA/132","nickname":"yanger2004","note":"","ucode":"0A2CD03EF31052","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577086,"discussion_content":"请问老师会话窗口一般会不会设置24小时的最大长度？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655910074,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112402,"user_name":"微思","can_delete":false,"product_type":"c1","uid":1004349,"ip_address":"","ucode":"853C48AA183A7B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/53/3d/1189e48a.jpg","comment_is_top":false,"comment_ctime":1562729133,"is_pvip":true,"replies":[{"id":"41473","content":"谢谢你的留言！<br>1、是的呢，eagle eye啊，已经给编辑部反映修改了。<br>2、如果我没有理解错你的留言的话，应该是每次得到一个新数据后，如果这个新数据的时间戳和之前的会话窗口边界相差没有超过Duration Gap的话，就将这个新数据归入会话窗口中，并且再将窗口向外延时Duration Gap的时长。","user_name":"作者回复","user_name_real":"Geek_88e0d7","uid":"1503187","ctime":1563166815,"ip_address":"","comment_id":112402,"utype":1}],"discussion_count":1,"race_medal":1,"score":"14447631021","product_id":100025301,"comment_content":"老师，文章读完有两点疑惑的地方：<br>1、文中滑动窗口样例，窗口大小1小时，滑动周期30分钟：<br>[July 8, 2019 0:00:00 AM, July 8, 2019 1:00:00 AM)<br>[July 8, 2019 0:30:00 AM, July 8, 2019 1:30:00 AM)<br>[July 8, 2019 1:00:00 AM, July 8, 2019 1:30:00 AM)<br>[July 8, 2019 1:30:00 AM, July 8, 2019 2:00:00 AM)<br>……<br>最后两条是否笔误了？窗口大小固定是1小时，我的理解应该是下面这样：<br>[July 8, 2019 1:00:00 AM, July 8, 2019 2:00:00 AM)<br>[July 8, 2019 1:30:00 AM, July 8, 2019 2:30:00 AM)<br>2、会话窗口是否可以这么理解：指定一段时间，在这段时间范围圈定的数据集上去应用固定窗口。<br>请老师指教，谢谢！<br>","like_count":3,"discussions":[{"author":{"id":1503187,"avatar":"","nickname":"Geek_88e0d7","note":"","ucode":"3E2596F3EB9165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457719,"discussion_content":"谢谢你的留言！\n1、是的呢，eagle eye啊，已经给编辑部反映修改了。\n2、如果我没有理解错你的留言的话，应该是每次得到一个新数据后，如果这个新数据的时间戳和之前的会话窗口边界相差没有超过Duration Gap的话，就将这个新数据归入会话窗口中，并且再将窗口向外延时Duration Gap的时长。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563166815,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111357,"user_name":"cricket1981","can_delete":false,"product_type":"c1","uid":1001715,"ip_address":"","ucode":"758262F5958DA4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/f3/f1034ffd.jpg","comment_is_top":false,"comment_ctime":1562547870,"is_pvip":false,"replies":[{"id":"41404","content":"谢谢你的留言！动态定义sessino gap说实话我没有尝试过，所以我不确定给同一个PCollection设置多次Sessions Window的话会不会报错。<br><br>全局窗口的一个用处是在处理无边界数据的数据集时，配合触发器使用。例如每隔N段时间计算现有的所有数据平均值。<br><br>自定义窗口Beam现在应该是不支持的。","user_name":"作者回复","user_name_real":"Geek_88e0d7","uid":"1503187","ctime":1563144480,"ip_address":"","comment_id":111357,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5857515166","product_id":100025301,"comment_content":"beam支持动态session gap定义吗？全局窗口的作用和使用场景是什么？beam支持自定义窗口吗？","like_count":1,"discussions":[{"author":{"id":1503187,"avatar":"","nickname":"Geek_88e0d7","note":"","ucode":"3E2596F3EB9165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457315,"discussion_content":"谢谢你的留言！动态定义sessino gap说实话我没有尝试过，所以我不确定给同一个PCollection设置多次Sessions Window的话会不会报错。\n\n全局窗口的一个用处是在处理无边界数据的数据集时，配合触发器使用。例如每隔N段时间计算现有的所有数据平均值。\n\n自定义窗口Beam现在应该是不支持的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563144480,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1439953,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f8/d1/45800380.jpg","nickname":"Glory_Jin","note":"","ucode":"8E2386906B5863","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3931,"discussion_content":"文中有提，需显式赋予窗口给无边界数据，但该窗口不可以是全局窗口，那你这里所描述&#34;全局窗口的一个用处是在处理无边界数据的数据集时，配合。。。&#34;，这个是否相矛盾呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564987595,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":317244,"user_name":"YX","can_delete":false,"product_type":"c1","uid":1338489,"ip_address":"","ucode":"973F52053DDF8C","user_header":"https://static001.geekbang.org/account/avatar/00/14/6c/79/f098c11d.jpg","comment_is_top":false,"comment_ctime":1634719508,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634719508","product_id":100025301,"comment_content":"在 Beam 的世界中，窗口这个概念将 PCollection 里的每个元素根据时间戳（Timestamp）划分成为了不同的有限数据集合。<br>--------------------------<br>请问下老师，是否支持按照元素个数设置窗口呢？","like_count":0},{"had_liked":false,"id":256452,"user_name":"理性的执着","can_delete":false,"product_type":"c1","uid":2246993,"ip_address":"","ucode":"7A1A6D13F1214A","user_header":"https://static001.geekbang.org/account/avatar/00/22/49/51/dbb22af1.jpg","comment_is_top":false,"comment_ctime":1603627860,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603627860","product_id":100025301,"comment_content":"另外还有一个问题，会话窗口的静态时间间隔和固定窗口的静态时间大小的区别是什么，都是设置一个时间。这块理解不过去了","like_count":0},{"had_liked":false,"id":256451,"user_name":"理性的执着","can_delete":false,"product_type":"c1","uid":2246993,"ip_address":"","ucode":"7A1A6D13F1214A","user_header":"https://static001.geekbang.org/account/avatar/00/22/49/51/dbb22af1.jpg","comment_is_top":false,"comment_ctime":1603627558,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603627558","product_id":100025301,"comment_content":"固定窗口由一个静态窗口大小定于，那么一个元素只属于一个窗口。<br>滑动窗口由一个静态窗口大小和一个滑动周期定义，一个元素可以属于多个窗口。<br>这两个能理解，不太理解会话窗口，<br>老师，我这么理解对吗？<br>会话窗口是由一个静态的时间间隔定义，那么一个元素应该只属于一个窗口吗？这样理解对吗？<br>会话窗口的时间间隔跟滑动窗口的滑动周期好像呀","like_count":0},{"had_liked":false,"id":206393,"user_name":"Junjie.M","can_delete":false,"product_type":"c1","uid":1667133,"ip_address":"","ucode":"6E40909A02DFB1","user_header":"https://static001.geekbang.org/account/avatar/00/19/70/3d/93aa82b6.jpg","comment_is_top":false,"comment_ctime":1586853178,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586853178","product_id":100025301,"comment_content":"老师问下，流和批的区别就是看其使用那种窗口吗？那么这个窗口在哪里设置，input transform时吗？","like_count":0}]}