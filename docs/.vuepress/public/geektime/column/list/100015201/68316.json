{"id":68316,"title":"36 | 为什么说Kubernetes只有soft multi-tenancy？","content":"<p>你好，我是张磊。今天我和你分享的主题是：为什么说Kubernetes只有soft multi-tenancy？</p><p>在前面的文章中，我为你详细讲解了Kubernetes生态里，主流容器网络方案的工作原理。</p><p>不难发现，Kubernetes的网络模型，以及前面这些网络方案的实现，都只关注容器之间网络的“连通”，却并不关心容器之间网络的“隔离”。这跟传统的IaaS层的网络方案，区别非常明显。</p><p>你肯定会问了，Kubernetes的网络方案对“隔离”到底是如何考虑的呢？难道Kubernetes就不管网络“多租户”的需求吗？</p><p>接下来，在今天这篇文章中，我就来回答你的这些问题。</p><p>在Kubernetes里，网络隔离能力的定义，是依靠一种专门的API对象来描述的，即：NetworkPolicy。</p><p><span class=\"orange\">一个完整的NetworkPolicy对象的示例</span>，如下所示：</p><pre><code>apiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: test-network-policy\n  namespace: default\nspec:\n  podSelector:\n    matchLabels:\n      role: db\n  policyTypes:\n  - Ingress\n  - Egress\n  ingress:\n  - from:\n    - ipBlock:\n        cidr: 172.17.0.0/16\n        except:\n        - 172.17.1.0/24\n    - namespaceSelector:\n        matchLabels:\n          project: myproject\n    - podSelector:\n        matchLabels:\n          role: frontend\n    ports:\n    - protocol: TCP\n      port: 6379\n  egress:\n  - to:\n    - ipBlock:\n        cidr: 10.0.0.0/24\n    ports:\n    - protocol: TCP\n      port: 5978\n</code></pre><p>我在和你分享前面的内容时已经说过（这里你可以再回顾下第34篇文章<a href=\"https://time.geekbang.org/column/article/67351\">《</a><a href=\"https://time.geekbang.org/column/article/67351\">Kubernetes 网络模型与 CNI 网络插件</a><a href=\"https://time.geekbang.org/column/article/67351\">》</a>中的相关内容），<strong>Kubernetes里的Pod默认都是“允许所有”（Accept All）的</strong>，即：Pod可以接收来自任何发送方的请求；或者，向任何接收方发送请求。而如果你要对这个情况作出限制，就必须通过NetworkPolicy对象来指定。</p><!-- [[[read_end]]] --><p>而在上面这个例子里，你首先会看到podSelector字段。它的作用，就是定义这个NetworkPolicy的限制范围，比如：当前Namespace里携带了role=db标签的Pod。</p><p>而如果你把podSelector字段留空：</p><pre><code>spec:\n podSelector: {}\n</code></pre><p>那么这个NetworkPolicy就会作用于当前Namespace下的所有Pod。</p><p>而一旦Pod被NetworkPolicy选中，<strong>那么这个Pod就会进入“拒绝所有”（Deny All）的状态</strong>，即：这个Pod既不允许被外界访问，也不允许对外界发起访问。</p><p><strong>而NetworkPolicy定义的规则，其实就是“白名单”。</strong></p><p>例如，在我们上面这个例子里，我在policyTypes字段，定义了这个NetworkPolicy的类型是ingress和egress，即：它既会影响流入（ingress）请求，也会影响流出（egress）请求。</p><p>然后，在ingress字段里，我定义了from和ports，即：允许流入的“白名单”和端口。其中，这个允许流入的“白名单”里，我指定了<strong>三种并列的情况</strong>，分别是：ipBlock、namespaceSelector和podSelector。</p><p>而在egress字段里，我则定义了to和ports，即：允许流出的“白名单”和端口。这里允许流出的“白名单”的定义方法与ingress类似。只不过，这一次ipblock字段指定的，是目的地址的网段。</p><p>综上所述，这个NetworkPolicy对象，指定的隔离规则如下所示：</p><ol>\n<li>该隔离规则只对default Namespace下的，携带了role=db标签的Pod有效。限制的请求类型包括ingress（流入）和egress（流出）。</li>\n<li>Kubernetes会拒绝任何访问被隔离Pod的请求，除非这个请求来自于以下“白名单”里的对象，并且访问的是被隔离Pod的6379端口。这些“白名单”对象包括：<br>\na. default Namespace里的，携带了role=fronted标签的Pod；<br>\nb. 携带了project=myproject 标签的 Namespace 里的任何 Pod；<br>\nc. 任何源地址属于172.17.0.0/16网段，且不属于172.17.1.0/24网段的请求。</li>\n<li>Kubernetes会拒绝被隔离Pod对外发起任何请求，除非请求的目的地址属于10.0.0.0/24网段，并且访问的是该网段地址的5978端口。</li>\n</ol><p>需要注意的是，定义一个NetworkPolicy对象的过程，容易犯错的是“白名单”部分（from和to字段）。</p><p>举个例子：</p><pre><code>  ...\n  ingress:\n  - from:\n    - namespaceSelector:\n        matchLabels:\n          user: alice\n    - podSelector:\n        matchLabels:\n          role: client\n  ...\n</code></pre><p>像上面这样定义的namespaceSelector和podSelector，是“或”（OR）的关系。所以说，这个from字段定义了两种情况，无论是Namespace满足条件，还是Pod满足条件，这个NetworkPolicy都会生效。</p><p>而下面这个例子，虽然看起来类似，但是它定义的规则却完全不同：</p><pre><code>...\n  ingress:\n  - from:\n    - namespaceSelector:\n        matchLabels:\n          user: alice\n      podSelector:\n        matchLabels:\n          role: client\n  ...\n</code></pre><p>注意看，这样定义的namespaceSelector和podSelector，其实是“与”（AND）的关系。所以说，这个from字段只定义了一种情况，只有Namespace和Pod同时满足条件，这个NetworkPolicy才会生效。</p><p><strong>这两种定义方式的区别，请你一定要分清楚。</strong></p><p>此外，如果要使上面定义的NetworkPolicy在Kubernetes集群里真正产生作用，你的CNI网络插件就必须是支持Kubernetes的NetworkPolicy的。</p><p>在具体实现上，凡是支持NetworkPolicy的CNI网络插件，都维护着一个NetworkPolicy Controller，通过控制循环的方式对NetworkPolicy对象的增删改查做出响应，然后在宿主机上完成iptables规则的配置工作。</p><p>在Kubernetes生态里，目前已经实现了NetworkPolicy的网络插件包括Calico、Weave和kube-router等多个项目，但是并不包括Flannel项目。</p><p>所以说，如果想要在使用Flannel的同时还使用NetworkPolicy的话，你就需要再额外安装一个网络插件，比如Calico项目，来负责执行NetworkPolicy。</p><blockquote>\n<p>安装Flannel + Calico的流程非常简单，你直接参考这个文档<a href=\"https://docs.projectcalico.org/v3.2/getting-started/kubernetes/installation/flannel\">一键安装</a>即可。</p>\n</blockquote><p><span class=\"orange\">那么，这些网络插件，又是如何根据NetworkPolicy对Pod进行隔离的呢？</span></p><p>接下来，我就以三层网络插件为例（比如Calico和kube-router），来为你分析一下这部分的原理。</p><p>为了方便讲解，这一次我编写了一个比较简单的NetworkPolicy对象，如下所示：</p><pre><code>apiVersion: extensions/v1beta1\nkind: NetworkPolicy\nmetadata:\n  name: test-network-policy\n  namespace: default\nspec:\n  podSelector:\n    matchLabels:\n      role: db\n  ingress:\n   - from:\n     - namespaceSelector:\n         matchLabels:\n           project: myproject\n     - podSelector:\n         matchLabels:\n           role: frontend\n     ports:\n       - protocol: tcp\n         port: 6379\n</code></pre><p>可以看到，我们指定的ingress“白名单”，是任何Namespace里，携带project=myproject标签的Namespace里的Pod；以及default Namespace里，携带了role=frontend标签的Pod。允许被访问的端口是：6379。</p><p>而被隔离的对象，是所有携带了role=db标签的Pod。</p><p>那么这个时候，Kubernetes的网络插件就会使用这个NetworkPolicy的定义，在宿主机上生成iptables规则。这个过程，我可以通过如下所示的一段Go语言风格的伪代码来为你描述：</p><pre><code>for dstIP := range 所有被networkpolicy.spec.podSelector选中的Pod的IP地址\n  for srcIP := range 所有被ingress.from.podSelector选中的Pod的IP地址\n    for port, protocol := range ingress.ports {\n      iptables -A KUBE-NWPLCY-CHAIN -s $srcIP -d $dstIP -p $protocol -m $protocol --dport $port -j ACCEPT \n    }\n  }\n} \n</code></pre><p>可以看到，这是一条最基本的、通过匹配条件决定下一步动作的iptables规则。</p><p>这条规则的名字是KUBE-NWPLCY-CHAIN，含义是：当IP包的源地址是srcIP、目的地址是dstIP、协议是protocol、目的端口是port的时候，就允许它通过（ACCEPT）。</p><p>而正如这段伪代码所示，匹配这条规则所需的这四个参数，都是从NetworkPolicy对象里读取出来的。</p><p><strong>可以看到，Kubernetes网络插件对Pod进行隔离，其实是靠在宿主机上生成NetworkPolicy对应的iptable规则来实现的。</strong></p><p>此外，在设置好上述“隔离”规则之后，网络插件还需要想办法，将所有对被隔离Pod的访问请求，都转发到上述KUBE-NWPLCY-CHAIN规则上去进行匹配。并且，如果匹配不通过，这个请求应该被“拒绝”。</p><p><span class=\"orange\">在CNI网络插件中，上述需求可以通过设置两组iptables规则来实现。</span></p><p><strong>第一组规则，负责“拦截”对被隔离Pod的访问请求</strong>。生成这一组规则的伪代码，如下所示：</p><pre><code>for pod := range 该Node上的所有Pod {\n    if pod是networkpolicy.spec.podSelector选中的 {\n        iptables -A FORWARD -d $podIP -m physdev --physdev-is-bridged -j KUBE-POD-SPECIFIC-FW-CHAIN\n        iptables -A FORWARD -d $podIP -j KUBE-POD-SPECIFIC-FW-CHAIN\n        ...\n    }\n}\n</code></pre><p>可以看到，这里的的iptables规则使用到了内置链：FORWARD。它是什么意思呢？</p><p>说到这里，我就得为你稍微普及一下iptables的知识了。</p><p>实际上，iptables只是一个操作Linux内核Netfilter子系统的“界面”。顾名思义，Netfilter子系统的作用，就是Linux内核里挡在“网卡”和“用户态进程”之间的一道“防火墙”。它们的关系，可以用如下的示意图来表示：</p><p><img src=\"https://static001.geekbang.org/resource/image/4a/c2/4a012412dd694cb815ac9ee11ce511c2.png?wh=913*833\" alt=\"\"><br>\n可以看到，这幅示意图中，IP包“一进一出”的两条路径上，有几个关键的“检查点”，它们正是Netfilter设置“防火墙”的地方。<strong>在iptables中，这些“检查点”被称为：链（Chain）</strong>。这是因为这些“检查点”对应的iptables规则，是按照定义顺序依次进行匹配的。这些“检查点”的具体工作原理，可以用如下所示的示意图进行描述：</p><p><img src=\"https://static001.geekbang.org/resource/image/f7/8e/f722f0f8b16338b02aa02904729dbc8e.jpg?wh=1818*945\" alt=\"\"></p><p>可以看到，当一个IP包通过网卡进入主机之后，它就进入了Netfilter定义的流入路径（Input Path）里。</p><p>在这个路径中，IP包要经过路由表路由来决定下一步的去向。而在这次路由之前，Netfilter设置了一个名叫PREROUTING的“检查点”。在Linux内核的实现里，所谓“检查点”实际上就是内核网络协议栈代码里的Hook（比如，在执行路由判断的代码之前，内核会先调用PREROUTING的Hook）。</p><p>而在经过路由之后，IP包的去向就分为了两种：</p><ul>\n<li>第一种，继续在本机处理；</li>\n<li>第二种，被转发到其他目的地。</li>\n</ul><p><strong>我们先说一下IP包的第一种去向</strong>。这时候，IP包将继续向上层协议栈流动。在它进入传输层之前，Netfilter会设置一个名叫INPUT的“检查点”。到这里，IP包流入路径（Input Path）结束。</p><p>接下来，这个IP包通过传输层进入用户空间，交给用户进程处理。而处理完成后，用户进程会通过本机发出返回的IP包。这时候，这个IP包就进入了流出路径（Output Path）。</p><p>此时，IP包首先还是会经过主机的路由表进行路由。路由结束后，Netfilter就会设置一个名叫OUTPUT的“检查点”。然后，在OUTPUT之后，再设置一个名叫POSTROUTING“检查点”。</p><p>你可能会觉得奇怪，为什么在流出路径结束后，Netfilter会连着设置两个“检查点”呢？</p><p>这就要说到在流入路径里，<strong>路由判断后的第二种去向</strong>了。</p><p>在这种情况下，这个IP包不会进入传输层，而是会继续在网络层流动，从而进入到转发路径（Forward Path）。在转发路径中，Netfilter会设置一个名叫FORWARD的“检查点”。</p><p>而在FORWARD“检查点”完成后，IP包就会来到流出路径。而转发的IP包由于目的地已经确定，它就不会再经过路由，也自然不会经过OUTPUT，而是会直接来到POSTROUTING“检查点”。</p><p>所以说，POSTROUTING的作用，其实就是上述两条路径，最终汇聚在一起的“最终检查点”。</p><p>需要注意的是，在有网桥参与的情况下，上述Netfilter设置“检查点”的流程，实际上也会出现在链路层（二层），并且会跟我在上面讲述的网络层（三层）的流程有交互。</p><p>这些链路层的“检查点”对应的操作界面叫作ebtables。所以，准确地说，数据包在Linux Netfilter子系统里完整的流动过程，其实应该如下所示（这是一幅来自<a href=\"https://en.wikipedia.org/wiki/Iptables#/media/File:Netfilter-packet-flow.svg\">Netfilter官方的原理图</a>，建议你点击图片以查看大图）：</p><p><img src=\"https://static001.geekbang.org/resource/image/e9/32/e96b58808bf16039e9975e947a6c7532.jpg?wh=1450*475\" alt=\"\"></p><p>可以看到，我前面为你讲述的，正是上图中绿色部分，也就是网络层的iptables链的工作流程。</p><p>另外，你应该还能看到，每一个白色的“检查点”上，还有一个绿色的“标签”，比如：raw、nat、filter等等。</p><p>在iptables里，这些标签叫作：表。比如，同样是OUTPUT这个“检查点”，filter Output和nat Output在iptables里的语法和参数，就完全不一样，实现的功能也完全不同。</p><p>所以说，iptables表的作用，就是在某个具体的“检查点”（比如Output）上，按顺序执行几个不同的检查动作（比如，先执行nat，再执行filter）。</p><p>在理解了iptables的工作原理之后，我们再回到NetworkPolicy上来。这时候，前面由网络插件设置的、负责“拦截”进入Pod的请求的三条iptables规则，就很容易读懂了：</p><pre><code>iptables -A FORWARD -d $podIP -m physdev --physdev-is-bridged -j KUBE-POD-SPECIFIC-FW-CHAIN\niptables -A FORWARD -d $podIP -j KUBE-POD-SPECIFIC-FW-CHAIN\n...\n</code></pre><p>其中，<strong>第一条FORWARD链“拦截”的是一种特殊情况</strong>：它对应的是同一台宿主机上容器之间经过CNI网桥进行通信的流入数据包。其中，--physdev-is-bridged的意思就是，这个FORWARD链匹配的是，通过本机上的网桥设备，发往目的地址是podIP的IP包。</p><p>当然，如果是像Calico这样的非网桥模式的CNI插件，就不存在这个情况了。</p><blockquote>\n<p>kube-router其实是一个简化版的Calico，它也使用BGP来维护路由信息，但是使用CNI bridge插件负责跟Kubernetes进行交互。</p>\n</blockquote><p>而<strong>第二条FORWARD链“拦截”的则是最普遍的情况，即：容器跨主通信</strong>。这时候，流入容器的数据包都是经过路由转发（FORWARD检查点）来的。</p><p>不难看到，这些规则最后都跳转（即：-j）到了名叫KUBE-POD-SPECIFIC-FW-CHAIN的规则上。它正是网络插件为NetworkPolicy设置的第二组规则。</p><p>而这个KUBE-POD-SPECIFIC-FW-CHAIN的作用，就是做出“允许”或者“拒绝”的判断。这部分功能的实现，可以简单描述为下面这样的iptables规则：</p><pre><code>iptables -A KUBE-POD-SPECIFIC-FW-CHAIN -j KUBE-NWPLCY-CHAIN\niptables -A KUBE-POD-SPECIFIC-FW-CHAIN -j REJECT --reject-with icmp-port-unreachable\n</code></pre><p>可以看到，首先在第一条规则里，我们会把IP包转交给前面定义的KUBE-NWPLCY-CHAIN规则去进行匹配。按照我们之前的讲述，如果匹配成功，那么IP包就会被“允许通过”。</p><p>而如果匹配失败，IP包就会来到第二条规则上。可以看到，它是一条REJECT规则。通过这条规则，不满足NetworkPolicy定义的请求就会被拒绝掉，从而实现了对该容器的“隔离”。</p><p>以上，就是CNI网络插件实现NetworkPolicy的基本方法了。当然，对于不同的插件来说，上述实现过程可能有不同的手段，但根本原理是不变的。</p><h2>总结</h2><p>在本篇文章中，我主要和你分享了Kubernetes对Pod进行“隔离”的手段，即：NetworkPolicy。</p><p>可以看到，NetworkPolicy实际上只是宿主机上的一系列iptables规则。这跟传统IaaS里面的安全组（Security Group）其实是非常类似的。</p><p>而基于上述讲述，你就会发现这样一个事实：</p><p>Kubernetes的网络模型以及大多数容器网络实现，其实既不会保证容器之间二层网络的互通，也不会实现容器之间的二层网络隔离。这跟IaaS项目管理虚拟机的方式，是完全不同的。</p><p>所以说，Kubernetes从底层的设计和实现上，更倾向于假设你已经有了一套完整的物理基础设施。然后，Kubernetes负责在此基础上提供一种“弱多租户”（soft multi-tenancy）的能力。</p><p>并且，基于上述思路，Kubernetes将来也不大可能把Namespace变成一个具有实质意义的隔离机制，或者把它映射成为“子网”或者“租户”。毕竟你可以看到，NetworkPolicy对象的描述能力，要比基于Namespace的划分丰富得多。</p><p>这也是为什么，到目前为止，Kubernetes项目在云计算生态里的定位，其实是基础设施与PaaS之间的中间层。这是非常符合“容器”这个本质上就是进程的抽象粒度的。</p><p>当然，随着Kubernetes社区以及CNCF生态的不断发展，Kubernetes项目也已经开始逐步下探，“吃”掉了基础设施领域的很多“蛋糕”。这也正是容器生态继续发展的一个必然方向。</p><h2>思考题</h2><p>请你编写这样一个NetworkPolicy：它使得指定的Namespace（比如my-namespace）里的所有Pod，都不能接收任何Ingress请求。然后，请你说说，这样的NetworkPolicy有什么实际的作用？</p><p>感谢你的收听，欢迎你给我留言，也欢迎分享给更多的朋友一起阅读。</p>","neighbors":{"left":{"article_title":"35 | 解读Kubernetes三层网络方案","id":67775},"right":{"article_title":"37 | 找到容器不容易：Service、DNS与服务发现","id":68636}},"comments":[{"had_liked":false,"id":39000,"user_name":"风轨","can_delete":false,"product_type":"c1","uid":1185844,"ip_address":"","ucode":"7B8A5233B61EB0","user_header":"https://static001.geekbang.org/account/avatar/00/12/18/34/c082419c.jpg","comment_is_top":false,"comment_ctime":1542170150,"is_pvip":false,"replies":[{"id":"14132","content":"对","user_name":"作者回复","comment_id":39000,"uid":"1218095","ip_address":"","utype":1,"ctime":1542281962,"user_name_real":"Geek_6ef93d"}],"discussion_count":1,"race_medal":0,"score":"426743932454","product_id":100015201,"comment_content":"job，cronjob这类计算型pod不需要也不应该对外提供服务，可以拒绝所有流入流量，提高系统安全。","like_count":100,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428877,"discussion_content":"对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542281962,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":50556,"user_name":"johnson.skiii","can_delete":false,"product_type":"c1","uid":1316924,"ip_address":"","ucode":"F1B6E71B54046C","user_header":"https://static001.geekbang.org/account/avatar/00/14/18/3c/b5a00c1a.jpg","comment_is_top":false,"comment_ctime":1545009183,"is_pvip":true,"discussion_count":4,"race_medal":0,"score":"70264485919","product_id":100015201,"comment_content":"张大请教一下；本来kube-proxy就会写大量的iptables规则，如果网络情况复杂，实施的networkpolicy又多的话，那么iptables会不会成为比较大的瓶颈，有什么好的解决方案吗？","like_count":16,"discussions":[{"author":{"id":1546547,"avatar":"https://static001.geekbang.org/account/avatar/00/17/99/33/1981b0cc.jpg","nickname":"今年也没有猫","note":"","ucode":"99379F3E276746","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1188,"discussion_content":"一个菜鸟的回答：  用 IPVS 代替 iptables，  Kubernetes大概5000+的 svc iptables会有一个较大的性能瓶颈，绝大多数情况下 iptables够用的","likes_number":13,"is_delete":false,"is_hidden":false,"ctime":1562378350,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1207457,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6c/a1/80d83f0a.jpg","nickname":"Ellison","note":"","ucode":"A2FB94D4F6A332","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350918,"discussion_content":"kube-proxy是有模式的，现在推荐是ipvs模式","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1614073032,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1192616,"avatar":"https://static001.geekbang.org/account/avatar/00/12/32/a8/d5bf5445.jpg","nickname":"郑海成","note":"","ucode":"B0363EA4B2C646","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578365,"discussion_content":"基于ebpf的网络插件是个方向，比如ciliium","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656674718,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1207457,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6c/a1/80d83f0a.jpg","nickname":"Ellison","note":"","ucode":"A2FB94D4F6A332","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350919,"discussion_content":"瓶颈在于楼上， 每一次一个svc就需要创建一个iptables","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614073057,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":39114,"user_name":"swordholder","can_delete":false,"product_type":"c1","uid":1002569,"ip_address":"","ucode":"3D1361126AD3CB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4c/49/d21c134f.jpg","comment_is_top":false,"comment_ctime":1542190629,"is_pvip":false,"replies":[{"id":"14130","content":"文中提了，实际有ebtables的参与","user_name":"作者回复","comment_id":39114,"uid":"1218095","ip_address":"","utype":1,"ctime":1542281926,"user_name_real":"Geek_6ef93d"}],"discussion_count":1,"race_medal":0,"score":"44491863589","product_id":100015201,"comment_content":"iptables -A FORWARD -d $podIP -m physdev --physdev-is-bridged -j KUBE-POD-SPECIFIC-FW-CHAIN<br><br>文中提到，上面这条iptables规则的作用是：“拦截”在同一个宿主机、接入同一个bridge上的容器发送过来的数据包。<br><br>iptables设置的是IP包被过滤处理的规则，而bridge是二层设备，数据包在bridge上的流动，如果受到上面规则的控制，就是说iptables还能设置二层链路的过滤规则？","like_count":10,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428925,"discussion_content":"文中提了，实际有ebtables的参与","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542281926,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":279181,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1105161,"ip_address":"","ucode":"1EECCA0F43E278","user_header":"https://static001.geekbang.org/account/avatar/00/10/dd/09/feca820a.jpg","comment_is_top":false,"comment_ctime":1613646317,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"35973384685","product_id":100015201,"comment_content":"文章中对iptables的讲解, 是我见过的对iptables讲解的最好的一个, 厉害","like_count":9},{"had_liked":false,"id":203197,"user_name":"lfn","can_delete":false,"product_type":"c1","uid":1026593,"ip_address":"","ucode":"2E1558C6A12A89","user_header":"https://static001.geekbang.org/account/avatar/00/0f/aa/21/6c3ba9af.jpg","comment_is_top":false,"comment_ctime":1586154519,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14471056407","product_id":100015201,"comment_content":"2020-04-06，打卡。","like_count":3},{"had_liked":false,"id":44703,"user_name":"CYH","can_delete":false,"product_type":"c1","uid":1099568,"ip_address":"","ucode":"396AF8DBD0C8AE","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/30/2f8b78e9.jpg","comment_is_top":false,"comment_ctime":1543478502,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"14428380390","product_id":100015201,"comment_content":"hi，老师：请问我安照k8s官网拒绝所有进出流量，为什么该pod还是能ping通外部的ip呢？","like_count":3,"discussions":[{"author":{"id":1510621,"avatar":"https://static001.geekbang.org/account/avatar/00/17/0c/dd/1b12d77d.jpg","nickname":"Dragon Frog","note":"","ucode":"6B4A2ECFA818E2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303523,"discussion_content":"首先你确认一下你配置的规则是 tcp/udp 还是 ip 层面的，如果你配置的是 ip+端口号，显然是可以ping通的，因此前者配置的是第四层的规则，后者则是第三层的事。","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1599290557,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1207457,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6c/a1/80d83f0a.jpg","nickname":"Ellison","note":"","ucode":"A2FB94D4F6A332","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350922,"discussion_content":"ping 是icmp","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1614074101,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322942,"user_name":"Jerome","can_delete":false,"product_type":"c1","uid":1624595,"ip_address":"","ucode":"F76DA79ABE3F75","user_header":"https://static001.geekbang.org/account/avatar/00/18/ca/13/0b8c7184.jpg","comment_is_top":false,"comment_ctime":1637667244,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10227601836","product_id":100015201,"comment_content":"2021-11-23，第四遍学习打卡。","like_count":2,"discussions":[{"author":{"id":2930234,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/KqZeIjNOVQJnsIFkDBWl5wfaxWDGLpIMUdFbF7SQhXFavmxgpwQPj9FrGAV4xNrqd733qicT4IZVibELyziaLokDQ/132","nickname":"罗艺","note":"","ucode":"9D4E1A377BCF23","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572557,"discussion_content":"我也是第一遍，后面有点看不懂，前面有的部分看了两遍了，我打算看不懂的慢慢看，一遍不行，看两遍，两遍不行看三遍，慢慢会理解的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652854820,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2864768,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/b6/80/2327060c.jpg","nickname":"糖炒栗子","note":"","ucode":"6A59DDE825E266","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538932,"discussion_content":"厉害。刚来第一遍，越往后看越迷糊。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639558893,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117969,"user_name":"heartbeat","can_delete":false,"product_type":"c1","uid":1192239,"ip_address":"","ucode":"5DF9FCDDADBAFC","user_header":"https://static001.geekbang.org/account/avatar/00/12/31/2f/71ffe33e.jpg","comment_is_top":false,"comment_ctime":1564200434,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10154135026","product_id":100015201,"comment_content":"任何 Namespace 里的、携带了 project=myproject 标签的 Pod； namespaceselector应该是选择namespace的吧，project=myproject这个标签应该是匹配namespace的而不是匹配pod的，所以上面那个解释应该是携带了project=myproject 标签的所有namespace下的所有pod 不知道这个理解是否正确","like_count":2,"discussions":[{"author":{"id":1253954,"avatar":"https://static001.geekbang.org/account/avatar/00/13/22/42/79604ce6.jpg","nickname":"公众号：云原生Serverless","note":"","ucode":"B615BD756C7552","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":228734,"discussion_content":"我看也是作者写错了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586572539,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":38922,"user_name":"gogo","can_delete":false,"product_type":"c1","uid":1003104,"ip_address":"","ucode":"E8F0F3B000020A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4e/60/0d5aa340.jpg","comment_is_top":false,"comment_ctime":1542159717,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10132094309","product_id":100015201,"comment_content":"老师您好，请教一个问题，我在阿里云测试环境部署的高可用集群，部署的时候关闭了iptables service，后来尝试开启，但是遇到容器内无法跟kubernetes 的cluster通信的问题。我看了&#47;etc&#47;sysconfig&#47;iptables的配置，input配置的是drop，然后开放一些常用端口和所有内网ip，不知道应该如何排查了","like_count":2},{"had_liked":false,"id":339568,"user_name":"ryan","can_delete":false,"product_type":"c1","uid":1596005,"ip_address":"","ucode":"845DAC632BF51B","user_header":"https://static001.geekbang.org/account/avatar/00/18/5a/65/b80035a6.jpg","comment_is_top":false,"comment_ctime":1648196556,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"5943163852","product_id":100015201,"comment_content":"第二遍终于看懂一些了，老师太厉害了","like_count":1},{"had_liked":false,"id":233178,"user_name":"killua","can_delete":false,"product_type":"c1","uid":1005951,"ip_address":"","ucode":"3108F880E48D3B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/7f/1c505317.jpg","comment_is_top":false,"comment_ctime":1594255626,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5889222922","product_id":100015201,"comment_content":"iptable的规则多的话 会有性能问题吗？","like_count":1,"discussions":[{"author":{"id":1676074,"avatar":"https://static001.geekbang.org/account/avatar/00/19/93/2a/08675e68.jpg","nickname":"skywalk_jk","note":"","ucode":"329D3E71E613F0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332511,"discussion_content":"前面有人说过，会有性能问题，k8s_1.8+版本支持ipvs，换成ipvs解决性能问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607245701,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94424,"user_name":"po","can_delete":false,"product_type":"c1","uid":1023905,"ip_address":"","ucode":"7DB36C278F34D7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9f/a1/d75219ee.jpg","comment_is_top":false,"comment_ctime":1557807991,"is_pvip":true,"replies":[{"id":"36307","content":"iptables 在svc还会用到","user_name":"作者回复","comment_id":94424,"uid":"1218095","ip_address":"","utype":1,"ctime":1559619505,"user_name_real":"Geek_6ef93d"}],"discussion_count":1,"race_medal":0,"score":"5852775287","product_id":100015201,"comment_content":"老师你好，我想确认下基于ovs的网络，是不是不用iptables了，使用openflow实现networkpolicy，使用vni实现多租户，谢谢。","like_count":2,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450062,"discussion_content":"iptables 在svc还会用到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559619505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65030,"user_name":"0mfg","can_delete":false,"product_type":"c1","uid":1393948,"ip_address":"","ucode":"D83530DB25D25A","user_header":"","comment_is_top":false,"comment_ctime":1549007461,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5843974757","product_id":100015201,"comment_content":"[BGP 消息]<br>我是宿主机 192.168.1.2<br>10.233.2.0&#47;24 网段的容器都在我这里<br>这些容器的下一跳地址是我<br><br>和老师确认一下对应图例10.233.2.0&#47;24应该是10.233.1.0&#47;24吧","like_count":1},{"had_liked":false,"id":39073,"user_name":"blackpiglet","can_delete":false,"product_type":"c1","uid":1032928,"ip_address":"","ucode":"58AA8329C91767","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c2/e0/7188aa0a.jpg","comment_is_top":false,"comment_ctime":1542183415,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5837150711","product_id":100015201,"comment_content":"apiVersion: extensions&#47;v1beta1<br>kind: NetworkPolicy<br>metadata:<br>  name: my-network-policy<br>  namespace: my-namespace<br>spec:<br>  podSelector: {}<br>  policyTypes:<br>  - Ingress<br><br>我只能想到一种情况：随机数生成器，因为要保证产生的随机数不受任何干扰，所以可以禁掉所有内网访问，只要把产生的结果发送出去就可以。","like_count":1},{"had_liked":false,"id":39060,"user_name":"jaxzhai","can_delete":false,"product_type":"c1","uid":1182911,"ip_address":"","ucode":"B65A8EE7A061FC","user_header":"https://static001.geekbang.org/account/avatar/00/12/0c/bf/863d440a.jpg","comment_is_top":false,"comment_ctime":1542180826,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5837148122","product_id":100015201,"comment_content":"apiVersion: networking.k8s.io&#47;v1<br>kind: NetworkPolicy<br>metadata:<br>  name: deny-all-policy<br>  namespace: my-namespace<br>spec:<br>  podSelector: {}<br>  policyTypes:<br>  - Ingress<br><br>可以做访问策略，我理解成可以是区域隔离。","like_count":1},{"had_liked":false,"id":359442,"user_name":"陈麒文","can_delete":false,"product_type":"c1","uid":2187256,"ip_address":"福建","ucode":"41475885FA5AD5","user_header":"https://static001.geekbang.org/account/avatar/00/21/5f/f8/1d16434b.jpg","comment_is_top":false,"comment_ctime":1665544833,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1665544833","product_id":100015201,"comment_content":"科普了一下iptables，参考网址：https:&#47;&#47;zhuanlan.zhihu.com&#47;p&#47;441089738","like_count":0},{"had_liked":false,"id":328827,"user_name":"董永刚","can_delete":false,"product_type":"c1","uid":1169147,"ip_address":"","ucode":"ADA792B226A6CD","user_header":"https://static001.geekbang.org/account/avatar/00/11/d6/fb/837af7bf.jpg","comment_is_top":false,"comment_ctime":1640913939,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640913939","product_id":100015201,"comment_content":"老师，“携带了 project=myproject 标签的 Namespace 里的任何 Pod；”这句话如何理解？<br><br>所有namespace里面携带了  project=myproject 标签 的pod？","like_count":0},{"had_liked":false,"id":325214,"user_name":"追风筝的人","can_delete":false,"product_type":"c1","uid":1488020,"ip_address":"","ucode":"2993D60F94C396","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/94/2796de72.jpg","comment_is_top":false,"comment_ctime":1638866684,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638866684","product_id":100015201,"comment_content":"NetworkPolicy 实际上只是宿主机上的一系列 iptables 规则。这跟传统 IaaS 里面的安全组（Security Group）其实是非常类似的。","like_count":0},{"had_liked":false,"id":321457,"user_name":"Geek_e1336f","can_delete":false,"product_type":"c1","uid":1243814,"ip_address":"","ucode":"AAF8D8BDBBBAEB","user_header":"https://static001.geekbang.org/account/avatar/00/12/fa/a6/cb7350b9.jpg","comment_is_top":false,"comment_ctime":1636883662,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636883662","product_id":100015201,"comment_content":"“第二条 FORWARD 链“拦截”的则是最普遍的情况，即：容器跨主通信。这时候，流入容器的数据包都是经过路由转发（FORWARD 检查点）来的。” ，到forward链不都经过路由判断不是本机的要转发给其它节点吗？为啥会在forward链上呢？不应该在input链做验证吗？","like_count":0},{"had_liked":false,"id":318635,"user_name":"陈斯佳","can_delete":false,"product_type":"c1","uid":1259323,"ip_address":"","ucode":"C236F874FC767A","user_header":"https://static001.geekbang.org/account/avatar/00/13/37/3b/495e2ce6.jpg","comment_is_top":false,"comment_ctime":1635380842,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635380842","product_id":100015201,"comment_content":"第三十六课:为什么说Kubernetes只有soft multi-tenancy？<br>k8s里的Pod默认都是“允许所有Accept All”的访问，而一旦Pod被NetworkPolicy选中，那这个Pod就会进入“拒绝所有Deny All”，其实NetworkPolicy就是个“白名单”。<br><br>K8s网络插件对Pod进行隔离，其实是考在主机上生成NetworkPolicy对应的iptables规则来实现的。","like_count":0},{"had_liked":false,"id":313403,"user_name":"Fresh feel","can_delete":false,"product_type":"c1","uid":2235381,"ip_address":"","ucode":"15FD15429D76D8","user_header":"https://static001.geekbang.org/account/avatar/00/22/1b/f5/52dada23.jpg","comment_is_top":false,"comment_ctime":1632409300,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632409300","product_id":100015201,"comment_content":"老师我想问一下，“所以说，Kubernetes 从底层的设计和实现上，更倾向于假设你已经有了一套完整的物理基础设施。然后，Kubernetes 负责在此基础上提供一种“弱多租户”（soft multi-tenancy）的能力。”我是不是可以理解成在IaaS云上依靠IaaS的能力本身就实现了隔离；而如果是私有化部署的话感觉使用NetworkPolicy的方式也不比IaaS的隔离直观，或者是设置几个默认的NetworkPolicy规则来对应限制IaaS中租户&#47;项目的隔离访问。还有就是在管理上是不是也不如IaaS方便，管理的疑问是不是需要都看完能获得解答。","like_count":0},{"had_liked":false,"id":300347,"user_name":"独孤九剑","can_delete":false,"product_type":"c1","uid":2230909,"ip_address":"","ucode":"6C1253E2B8C1D4","user_header":"https://static001.geekbang.org/account/avatar/00/22/0a/7d/ac715471.jpg","comment_is_top":false,"comment_ctime":1625124711,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625124711","product_id":100015201,"comment_content":"还是要学好linux啊","like_count":0},{"had_liked":false,"id":274170,"user_name":"张裕尧","can_delete":false,"product_type":"c1","uid":1851048,"ip_address":"","ucode":"4853EE1BF5A6EA","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Um0fKCDsGBRO1CEia0EwoIb11icf0SlFBTT63XAy1DooRZeBvavefTcSNQOSSdDthSpAgknjtfNqF4fo15wEJ7SQ/132","comment_is_top":false,"comment_ctime":1610885841,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1610885841","product_id":100015201,"comment_content":"有一个问题想请教一下，Flannel 项目为什么不添加NetworkPolicy的功能呢？Flannel应该也可以有能力在宿主机上创建iptables","like_count":0,"discussions":[{"author":{"id":1269156,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5d/a4/2e4b6d33.jpg","nickname":"素还真","note":"","ucode":"9ABA456355F7E3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":346335,"discussion_content":"我理解 隔离应该不是一个 核心需求吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611912479,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":264603,"user_name":"ch_ort","can_delete":false,"product_type":"c1","uid":1580926,"ip_address":"","ucode":"B79746E687F29E","user_header":"","comment_is_top":false,"comment_ctime":1606540250,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606540250","product_id":100015201,"comment_content":"Kubernetes里通过NetworkPolicy对象来设置Pod的网络隔离，比如允许Pod接受哪些请求(ingress)，允许Pod像哪些发出请求(egress)。<br><br>NetworkPolicy实际上只是宿主机的一系列iptables规则，它没有像传统IaaS一样提供一个二层网络的强隔离。所以说，Kubernets从底层的设计和实现上，更倾向于假设你已经有了一套完整的物理基础设施。然后Kubernets负责在此基础上提供一种“弱多租户”（soft multi-tenancy）的能力。<br>","like_count":0},{"had_liked":false,"id":251275,"user_name":"Heaven","can_delete":false,"product_type":"c1","uid":1694207,"ip_address":"","ucode":"FA33FBCC66C911","user_header":"https://static001.geekbang.org/account/avatar/00/19/d9/ff/b23018a6.jpg","comment_is_top":false,"comment_ctime":1601447690,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601447690","product_id":100015201,"comment_content":"apiVersion: extensions&#47;v1beta1<br>kind: NetworkPolicy<br>metadata:<br>    name:  my-network-policy1<br>    namespace: myspace<br>spec:<br>    podSelector: {}<br>    policyTypes:<br>    - Ingress<br><br>像这样全封闭的Pod,适用于计算密集型的吧,一般可以使用于去进行一些自我计算,计算完成就死亡的Pod","like_count":0},{"had_liked":false,"id":243098,"user_name":"冬冬","can_delete":false,"product_type":"c1","uid":1180054,"ip_address":"","ucode":"B673E6482B5C93","user_header":"https://static001.geekbang.org/account/avatar/00/12/01/96/afcb6174.jpg","comment_is_top":false,"comment_ctime":1597966010,"is_pvip":false,"discussion_count":0,"race_medal":2,"score":"1597966010","product_id":100015201,"comment_content":"k8s使用NetworkPolicy定义pod的隔离机制，使用ingress和egress定义访问策略（限制可请求的pod及namespace、port端口），其本质上是k8s网络插件在宿主机上生成了iptables路由规则；<br>","like_count":0},{"had_liked":false,"id":217863,"user_name":"张三","can_delete":false,"product_type":"c1","uid":1004092,"ip_address":"","ucode":"1155528FAE1546","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/3c/d6fcb93a.jpg","comment_is_top":false,"comment_ctime":1589633915,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589633915","product_id":100015201,"comment_content":"精彩，再说一次。。。","like_count":0},{"had_liked":false,"id":175260,"user_name":"Dale","can_delete":false,"product_type":"c1","uid":1010056,"ip_address":"","ucode":"DD4717C06E417D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/69/88/528442b0.jpg","comment_is_top":false,"comment_ctime":1580633804,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580633804","product_id":100015201,"comment_content":"纯计算类型的pod，不对外暴露任何服务，比较适合拒绝网络请求","like_count":0},{"had_liked":false,"id":154548,"user_name":"拉欧","can_delete":false,"product_type":"c1","uid":1206605,"ip_address":"","ucode":"40996A8093A95F","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/4d/81c44f45.jpg","comment_is_top":false,"comment_ctime":1574478914,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574478914","product_id":100015201,"comment_content":"k8s的网络配置的前提是：你的物理基础设施已经就绪","like_count":0},{"had_liked":false,"id":63783,"user_name":"平淡","can_delete":false,"product_type":"c1","uid":1183970,"ip_address":"","ucode":"E914A6B70347AF","user_header":"https://static001.geekbang.org/account/avatar/00/12/10/e2/28c09cf5.jpg","comment_is_top":false,"comment_ctime":1548501394,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1548501394","product_id":100015201,"comment_content":"流入容器的数据包都是经过路由转发（FORWARD 检查点）来的。  看看那张iptables的图，经过forward节点的数据不都流向外界了吗？怎么还会转发给本机的容器呢？","like_count":0,"discussions":[{"author":{"id":1074588,"avatar":"https://static001.geekbang.org/account/avatar/00/10/65/9c/e8d0cdc9.jpg","nickname":"薛海山","note":"","ucode":"02BFF558C1B610","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289789,"discussion_content":"这个我也没看懂","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1594212579,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1243814,"avatar":"https://static001.geekbang.org/account/avatar/00/12/fa/a6/cb7350b9.jpg","nickname":"Geek_e1336f","note":"","ucode":"AAF8D8BDBBBAEB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414745,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636883481,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62574,"user_name":"闫飞","can_delete":false,"product_type":"c1","uid":1013162,"ip_address":"","ucode":"30C782D30108D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/aa/21275b9d.jpg","comment_is_top":false,"comment_ctime":1548116289,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1548116289","product_id":100015201,"comment_content":"大量iptable处理带来的性能损失怎样，有数据或者经验性的结论吗？","like_count":0},{"had_liked":false,"id":55428,"user_name":"勤劳的小胖子-libo","can_delete":false,"product_type":"c1","uid":1158344,"ip_address":"","ucode":"5BB20CD5A56568","user_header":"https://static001.geekbang.org/account/avatar/00/11/ac/c8/4b1c0d40.jpg","comment_is_top":false,"comment_ctime":1546172634,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546172634","product_id":100015201,"comment_content":"谢谢iptables方面的讲解，深化之前的理解。<br>forward的功能一般是用在网关中？主要是做转发的？","like_count":0},{"had_liked":false,"id":39647,"user_name":"tuxknight","can_delete":false,"product_type":"c1","uid":1000882,"ip_address":"","ucode":"B78FE23CB2641B","user_header":"","comment_is_top":false,"comment_ctime":1542330983,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542330983","product_id":100015201,"comment_content":"假如需要限制的是集群外的某个资源，比如阿里云上的rds数据库，并没有固定的IP地址。是不是可以把访问地址创建成endpoint对象放在特定的namespsce下，然后在egress中配置允许访问这个namespace？","like_count":0},{"had_liked":false,"id":39229,"user_name":"OldGood","can_delete":false,"product_type":"c1","uid":1281243,"ip_address":"","ucode":"A6AE12A28359E4","user_header":"https://static001.geekbang.org/account/avatar/00/13/8c/db/90b7b2a9.jpg","comment_is_top":false,"comment_ctime":1542213053,"is_pvip":true,"replies":[{"id":"14022","content":"很快","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1542241384,"ip_address":"","comment_id":39229,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542213053","product_id":100015201,"comment_content":"老师，什么时候讲ingress？","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428973,"discussion_content":"很快","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542241384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":38783,"user_name":"yuliz","can_delete":false,"product_type":"c1","uid":1080693,"ip_address":"","ucode":"BFF5B4606559E6","user_header":"https://static001.geekbang.org/account/avatar/00/10/7d/75/c812597b.jpg","comment_is_top":false,"comment_ctime":1542126390,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542126390","product_id":100015201,"comment_content":"不是kubecon么，洗个澡就更新了","like_count":0}]}