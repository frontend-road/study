{"id":144676,"title":"51 | 函数类型和内嵌函数","content":"<p><strong>课件地址</strong></p><p><a href=\"https://gitee.com/geektime-geekbang/swift-course\">https://gitee.com/geektime-geekbang/swift-course</a></p>","comments":[{"had_liked":false,"id":161814,"user_name":"SummerThread","can_delete":false,"product_type":"c3","uid":1213730,"ip_address":"","ucode":"0EDF7A1097290F","user_header":"https://static001.geekbang.org/account/avatar/00/12/85/22/4598ce0d.jpg","comment_is_top":false,"comment_ctime":1576338082,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100034001,"comment_content":"一直不是很理解将函数作为参数和返回值这个地方，总算是搞明白了","like_count":1},{"had_liked":false,"id":352224,"user_name":"畅畅","can_delete":false,"product_type":"c3","uid":1834962,"ip_address":"","ucode":"6BCDEF603F2C14","user_header":"https://static001.geekbang.org/account/avatar/00/1b/ff/d2/67090203.jpg","comment_is_top":false,"comment_ctime":1658463097,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100034001,"comment_content":"可以理解为头等函数吧，js、kotlin、go都有类似的写法","like_count":0},{"had_liked":false,"id":292379,"user_name":"Geek__2099","can_delete":false,"product_type":"c3","uid":1457784,"ip_address":"","ucode":"01444B60F18A66","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep8unibCib9rdHib0D6Rf6TjecPQu1yic0G9sjzriczlTcwGHP6DaxtEmHyN7pCrD9zV7OSegyf7EUBvaA/132","comment_is_top":false,"comment_ctime":1620800644,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100034001,"comment_content":"当把函数这个物种规范为类型时，程序世界开始表现出过程的本质特征。\n而在现实世界中，关于世界是实体的还是过程的争论虽未停止，但明显后者也日据上风。\n至此，函数就不会满足于一等公民，而要成为世界的主宰。\n当函数作为过程的载体，具有了法律地位时，就可将过程的潜力发挥到极致。即不仅可以由子过程构成，还可以接受某个过程具象，并对其进行处理或使用或输出，从而可以构造出无穷的世界。\n\n函数是能力的名字，能力是特定场景的过程，类型是能力的抽象。\n自此，函数可以上天入地，纵横八方！","like_count":0},{"had_liked":false,"id":291000,"user_name":"皮特尔","can_delete":false,"product_type":"c3","uid":1017161,"ip_address":"","ucode":"313862C91DD325","user_header":"https://static001.geekbang.org/account/avatar/00/0f/85/49/585c69c4.jpg","comment_is_top":false,"comment_ctime":1619927306,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100034001,"comment_content":"函数是一等公民。","like_count":0},{"had_liked":false,"id":235375,"user_name":"侯明昊","can_delete":false,"product_type":"c3","uid":2053846,"ip_address":"","ucode":"660FA0B0AB38D3","user_header":"https://static001.geekbang.org/account/avatar/00/1f/56/d6/0890b1f4.jpg","comment_is_top":false,"comment_ctime":1594988120,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100034001,"comment_content":"老师，多形式参数那地方\nfunc greetAgain(person: String) -&gt; String {\n    return &quot;Hello again, &quot; + person + &quot;!&quot;}\nfunc greet(person: String) -&gt; String {\n    let greeting = &quot;Hello, &quot; + person + &quot;!&quot;\n    return greeting\n\n}\n\nfunc greet(person: String, alreadyGreeted: Bool) -&gt; String {\n    if alreadyGreeted {\n        return greetAgain (person: [玫瑰]person[玫瑰]) }else {\n        return greet(person: [玫瑰]person)[玫瑰]\n    }\n}\nprint(greet(person: &quot;Tim&quot;, alreadyGreeted: true))\n用玫瑰标记的地方，为什么用person\nreturn返回的不应该是\nfunc greetAgain(person: String) -&gt; String这个函数么，那么标记处写成     \nreturn greetAgain (person: String) 为什么报错","like_count":0,"discussions":[{"author":{"id":1454945,"avatar":"https://static001.geekbang.org/account/avatar/00/16/33/61/da6d8713.jpg","nickname":"Xinming","note":"","ucode":"F7330DD975D248","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380529,"discussion_content":"复制了你的代码跑了一遍没问题呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624546079,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":228478,"user_name":"Dasher","can_delete":false,"product_type":"c3","uid":1456709,"ip_address":"","ucode":"936D82699C329C","user_header":"https://static001.geekbang.org/account/avatar/00/16/3a/45/7427ea0b.jpg","comment_is_top":false,"comment_ctime":1592707937,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100034001,"comment_content":"老师，想问一下内嵌函数函数体里的那个step参数的取值是取得哪个值呢","like_count":0,"discussions":[{"author":{"id":1458512,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLRjPmr2NG3ibMRQeqWCmQnsrWdMAw9XhlRSEGrxgZiaKJ8MK0xFictiajtBvUuYM5pAUyiaqCEymtAypQ/132","nickname":"Turing","note":"","ucode":"C827B476D29AA0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299198,"discussion_content":"函数chooseStepFunc，返回的是stepBackward/stepBackward函数，\nvar currentValue = -4\nlet stepFunc = chooseStepFunc(backward: currentValue > 0)\nwhile currentValue != 0 {\n    currentValue = stepFunc(currentValue)\n}\n所以stepFunc函数就是stepBackward或者stepForward函数，\n通过stepFunc传入的currentValue就是step","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597590953,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}