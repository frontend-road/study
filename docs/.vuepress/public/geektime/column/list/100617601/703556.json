{"id":703556,"title":"09｜链（下）：想学“育花”还是“插花”？用RouterChain确定客户意图","content":"<p>你好，我是黄佳。欢迎来到LangChain实战课！</p><p>上一节课中，我带着你学习了Chain的基本概念，还使用了LLMChain和SequencialChain，这一节课，我们再来看看其他类型的一些Chain的用法。</p><h2>任务设定</h2><p>首先，还是先看一下今天要完成一个什么样的任务。</p><p>这里假设咱们的鲜花运营智能客服ChatBot通常会接到两大类问题。</p><ol>\n<li><strong>鲜花养护</strong>（保持花的健康、如何浇水、施肥等）</li>\n<li><strong>鲜花装饰</strong>（如何搭配花、如何装饰场地等）</li>\n</ol><p>你的需求是，<strong>如果接到的是第一类问题，你要给ChatBot A指示；如果接到第二类的问题，你要给ChatBot B指示</strong>。</p><p><img src=\"https://static001.geekbang.org/resource/image/d8/59/d8491e696c03f49a331c94e31d20e559.jpg?wh=1490x1077\" alt=\"\"></p><p>我们可以根据这两个场景来构建两个不同的目标链。遇到不同类型的问题，LangChain会通过RouterChain来自动引导大语言模型选择不同的模板。</p><p>当然我们的运营过程会遇到更多种类的问题，你只需要通过同样的方法扩充逻辑即可。</p><h2>整体框架</h2><p>RouterChain，也叫路由链，能动态选择用于给定输入的下一个链。我们会根据用户的问题内容，首先使用路由器链确定问题更适合哪个处理模板，然后将问题发送到该处理模板进行回答。如果问题不适合任何已定义的处理模板，它会被发送到默认链。</p><p>在这里，我们会用LLMRouterChain和MultiPromptChain（也是一种路由链）组合实现路由功能，该MultiPromptChain会调用LLMRouterChain选择与给定问题最相关的提示，然后使用该提示回答问题。</p><!-- [[[read_end]]] --><p><strong>具体步骤如下：</strong></p><ol>\n<li>构建处理模板：为鲜花护理和鲜花装饰分别定义两个字符串模板。</li>\n<li>提示信息：使用一个列表来组织和存储这两个处理模板的关键信息，如模板的键、描述和实际内容。</li>\n<li>初始化语言模型：导入并实例化语言模型。</li>\n<li>构建目标链：根据提示信息中的每个模板构建了对应的LLMChain，并存储在一个字典中。</li>\n<li>构建LLM路由链：这是决策的核心部分。首先，它根据提示信息构建了一个路由模板，然后使用这个模板创建了一个LLMRouterChain。</li>\n<li>构建默认链：如果输入不适合任何已定义的处理模板，这个默认链会被触发。</li>\n<li>构建多提示链：使用MultiPromptChain将LLM路由链、目标链和默认链组合在一起，形成一个完整的决策系统。</li>\n</ol><h2>具体实现</h2><p>下面，就是用路由链自动选择处理模板的具体代码实现。</p><h3>构建提示信息的模板</h3><p>首先，我们针对两种场景，构建两个提示信息的模板。</p><pre><code class=\"language-plain\"># 构建两个场景的模板\nflower_care_template = \"\"\"你是一个经验丰富的园丁，擅长解答关于养花育花的问题。\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 下面是需要你来回答的问题:\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {input}\"\"\"\n\nflower_deco_template = \"\"\"你是一位网红插花大师，擅长解答关于鲜花装饰的问题。\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 下面是需要你来回答的问题:\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {input}\"\"\"\n\n# 构建提示信息\nprompt_infos = [\n&nbsp; &nbsp; {\n&nbsp; &nbsp; &nbsp; &nbsp; \"key\": \"flower_care\",\n&nbsp; &nbsp; &nbsp; &nbsp; \"description\": \"适合回答关于鲜花护理的问题\",\n&nbsp; &nbsp; &nbsp; &nbsp; \"template\": flower_care_template,\n&nbsp; &nbsp; },\n&nbsp; &nbsp; {\n&nbsp; &nbsp; &nbsp; &nbsp; \"key\": \"flower_decoration\",\n&nbsp; &nbsp; &nbsp; &nbsp; \"description\": \"适合回答关于鲜花装饰的问题\",\n&nbsp; &nbsp; &nbsp; &nbsp; \"template\": flower_deco_template,\n&nbsp; &nbsp; }]\n</code></pre><h3>初始化语言模型</h3><p>接下来，我们初始化语言模型。</p><pre><code class=\"language-plain\"># 初始化语言模型\nfrom langchain.llms import OpenAI\nimport os\nos.environ[\"OPENAI_API_KEY\"] = '你的OpenAI Key'\nllm = OpenAI()\n</code></pre><h3>构建目标链</h3><p>下面，我们循环prompt_infos这个列表，构建出两个目标链，分别负责处理不同的问题。</p><pre><code class=\"language-plain\"># 构建目标链\nfrom langchain.chains.llm import LLMChain\nfrom langchain.prompts import PromptTemplate\nchain_map = {}\nfor info in prompt_infos:\n&nbsp; &nbsp; prompt = PromptTemplate(template=info['template'], \n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input_variables=[\"input\"])\n    print(\"目标提示:\\n\",prompt)\n&nbsp; &nbsp; chain = LLMChain(llm=llm, prompt=prompt,verbose=True)\n&nbsp; &nbsp; chain_map[info[\"key\"]] = chain\n</code></pre><p>这里，目标链提示是这样的：</p><pre><code class=\"language-plain\">目标提示:\ninput_variables=['input'] \noutput_parser=None partial_variables={} \ntemplate='你是一个经验丰富的园丁，擅长解答关于养花育花的问题。\\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 下面是需要你来回答的问题:\\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \n{input}' template_format='f-string' \nvalidate_template=True\n\n目标提示:\ninput_variables=['input'] \noutput_parser=None partial_variables={} \ntemplate='你是一位网红插花大师，擅长解答关于鲜花装饰的问题。\\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 下面是需要你来回答的问题:\\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \n{input}' template_format='f-string' \nvalidate_template=True\n</code></pre><p>对于每个场景，我们创建一个 LLMChain（语言模型链）。每个链会根据其场景模板生成对应的提示，然后将这个提示送入语言模型获取答案。</p><h3>构建路由链</h3><p>下面，我们构建路由链，负责查看用户输入的问题，确定问题的类型。</p><pre><code class=\"language-plain\"># 构建路由链\nfrom langchain.chains.router.llm_router import LLMRouterChain, RouterOutputParser\nfrom langchain.chains.router.multi_prompt_prompt import MULTI_PROMPT_ROUTER_TEMPLATE as RounterTemplate\ndestinations = [f\"{p['key']}: {p['description']}\" for p in prompt_infos]\nrouter_template = RounterTemplate.format(destinations=\"\\n\".join(destinations))\nprint(\"路由模板:\\n\",router_template)\nrouter_prompt = PromptTemplate(\n&nbsp; &nbsp; template=router_template,\n&nbsp; &nbsp; input_variables=[\"input\"],\n&nbsp; &nbsp; output_parser=RouterOutputParser(),)\nprint(\"路由提示:\\n\",router_prompt)\nrouter_chain = LLMRouterChain.from_llm(llm, \n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;router_prompt,\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;verbose=True)\n</code></pre><p>输出：</p><pre><code>路由模板:\n Given a raw text input to a language model select the model prompt best suited for the input. You will be given the names of the available prompts and a description of what the prompt is best suited for. You may also revise the original input if you think that revising it will ultimately lead to a better response from the language model.\n\n&lt;&lt; FORMATTING &gt;&gt;\nReturn a markdown code snippet with a JSON object formatted to look like:\n```json\n{{\n    &quot;destination&quot;: string \\ name of the prompt to use or &quot;DEFAULT&quot;\n    &quot;next_inputs&quot;: string \\ a potentially modified version of the original input\n}}\n```\n\nREMEMBER: &quot;destination&quot; MUST be one of the candidate prompt names specified below OR it can be &quot;DEFAULT&quot; if the input is not well suited for any of the candidate prompts.\nREMEMBER: &quot;next_inputs&quot; can just be the original input if you don't think any modifications are needed.\n\n&lt;&lt; CANDIDATE PROMPTS &gt;&gt;\nflower_care: 适合回答关于鲜花护理的问题\nflower_decoration: 适合回答关于鲜花装饰的问题\n\n&lt;&lt; INPUT &gt;&gt;\n{input}\n\n&lt;&lt; OUTPUT &gt;&gt;\n\n路由提示:\ninput_variables=['input'] output_parser=RouterOutputParser(default_destination='DEFAULT', next_inputs_type=&lt;class 'str'&gt;, next_inputs_inner_key='input') \npartial_variables={} \ntemplate='Given a raw text input to a language model select the model prompt best suited for the input. You will be given the names of the available prompts and a description of what the prompt is best suited for. You may also revise the original input if you think that revising it will ultimately lead to a better response from the language model.\\n\\n\n&lt;&lt; FORMATTING &gt;&gt;\\n\nReturn a markdown code snippet with a JSON object formatted to look like:\\n```json\\n{{\\n &quot;destination&quot;: string \\\\ name of the prompt to use or &quot;DEFAULT&quot;\\n    &quot;next_inputs&quot;: string \\\\ a potentially modified version of the original input\\n}}\\n```\\n\\n\nREMEMBER: &quot;destination&quot; MUST be one of the candidate prompt names specified below OR it can be &quot;DEFAULT&quot; if the input is not well suited for any of the candidate prompts.\\n\nREMEMBER: &quot;next_inputs&quot; can just be the original input if you don\\'t think any modifications are needed.\\n\\n&lt;&lt; CANDIDATE PROMPTS &gt;&gt;\\n\nflower_care: 适合回答关于鲜花护理的问题\\n\nflower_decoration: 适合回答关于鲜花装饰的问题\\n\\n\n&lt;&lt; INPUT &gt;&gt;\\n{input}\\n\\n&lt;&lt; OUTPUT &gt;&gt;\\n' \ntemplate_format='f-string' \nvalidate_template=True\n</code></pre><p>这里我说一下路由器链是如何构造提示信息，来引导大模型查看用户输入的问题并确定问题的类型的。</p><p>先看路由模板部分，这段模板字符串是一个指导性的说明，目的是引导语言模型正确处理用户的输入，并将其定向到适当的模型提示。</p><p><strong>1. 路由模板的解释</strong></p><p>路由模板是路由功能得以实现的核心。我们来详细分解一下这个模板的每个部分。</p><p><strong>引言</strong></p><blockquote>\n<p>Given a raw text input to a language model select the model prompt best suited for the input.</p>\n</blockquote><p>这是一个简单的引导语句，告诉模型你将给它一个输入，它需要根据这个输入选择最适合的模型提示。</p><blockquote>\n<p>You will be given the names of the available prompts and a description of what the prompt is best suited for.</p>\n</blockquote><p>这里进一步提醒模型，它将获得各种模型提示的名称和描述。</p><blockquote>\n<p>You may also revise the original input if you think that revising it will ultimately lead to a better response from the language model.</p>\n</blockquote><p>这是一个可选的步骤，告诉模型它可以更改原始输入以获得更好的响应。</p><p><strong>格式说明(&lt;&lt; FORMATTING &gt;&gt;)</strong></p><p>指导模型如何格式化其输出，使其以特定的方式返回结果。</p><blockquote>\n<p>Return a markdown code snippet with a JSON object formatted to look like:</p>\n</blockquote><p>表示模型的输出应该是一个 Markdown 代码片段，其中包含一个特定格式的 JSON 对象。</p><p>下面的代码块显示了期望的 JSON 结构，其中 destination 是模型选择的提示名称（或“DEFAULT”），而 next_inputs 是可能被修订的原始输入。</p><p><strong>额外的说明和要求</strong></p><blockquote>\n<p>REMEMBER: “destination” MUST be one of the candidate prompt names specified below OR it can be “DEFAULT”…</p>\n</blockquote><p>这是一个重要的指导，提醒模型 “destination” 字段的值必须是下面列出的提示之一或是 “DEFAULT”。</p><blockquote>\n<p>REMEMBER: “next_inputs” can just be the original input if you don’t think any modifications are needed.</p>\n</blockquote><p>这再次强调，除非模型认为有必要，否则原始输入不需要修改。</p><p><strong>候选提示(&lt;&lt; CANDIDATE PROMPTS &gt;&gt;)</strong></p><p>列出了两个示例模型提示及其描述：</p><ul>\n<li>“flower_care: 适合回答关于鲜花护理的问题”，适合处理与花卉护理相关的问题。</li>\n<li>“flower_decoration: 适合回答关于鲜花装饰的问题”，适合处理与花卉装饰相关的问题。</li>\n</ul><p><strong>输入/输出部分</strong></p><blockquote>\n<p>&lt;&lt; INPUT &gt;&gt;\\n{input}\\n\\n&lt;&lt; OUTPUT &gt;&gt;\\n：</p>\n</blockquote><p>这部分为模型提供了一个格式化的框架，其中它将接收一个名为 {input} 的输入，并在此后的部分输出结果。</p><p>总的来说，这个模板的目的是让模型知道如何处理用户的输入，并根据提供的提示列表选择一个最佳的模型提示来回应。</p><p><strong>2. 路由提示的解释</strong></p><p>路由提示 (router_prompt）则根据路由模板，生成了具体传递给LLM的路由提示信息。</p><ul>\n<li>其中input_variables 指定模板接收的输入变量名，这里只有 <code>\"input\"</code>。</li>\n<li>output_parser 是一个用于解析模型输出的对象，它有一个默认的目的地和一个指向下一输入的键。</li>\n<li>template 是实际的路由模板，用于给模型提供指示。这就是刚才详细解释的模板内容。</li>\n<li>template_format 指定模板的格式，这里是 <code>\"f-string\"</code>。</li>\n<li>validate_template 是一个布尔值，如果为 True，则会在使用模板前验证其有效性。</li>\n</ul><p>简而言之，这个构造允许你将用户的原始输入送入路由器，然后路由器会决定将该输入发送到哪个具体的模型提示，或者是否需要对输入进行修订以获得最佳的响应。</p><h3>构建默认链</h3><p>除了处理目标链和路由链之外，我们还需要准备一个默认链。如果路由链没有找到适合的链，那么，就以默认链进行处理。</p><pre><code class=\"language-plain\"># 构建默认链\nfrom langchain.chains import ConversationChain\ndefault_chain = ConversationChain(llm=llm, \n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output_key=\"text\",\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; verbose=True)\n</code></pre><h3>构建多提示链</h3><p>最后，我们使用MultiPromptChain类把前几个链整合在一起，实现路由功能。这个MultiPromptChain类是一个多路选择链，它使用一个LLM路由器链在多个提示之间进行选择。</p><p><strong>MultiPromptChain中有三个关键元素。</strong></p><ul>\n<li>router_chain（类型RouterChain）：这是用于决定目标链和其输入的链。当给定某个输入时，这个router_chain决定哪一个destination_chain应该被选中，以及传给它的具体输入是什么。</li>\n<li>destination_chains（类型Mapping[str, LLMChain]）：这是一个映射，将名称映射到可以将输入路由到的候选链。例如，你可能有多种处理文本输入的方法（或“链”），每种方法针对特定类型的问题。destination_chains可以是这样一个字典：<code>{'weather': weather_chain, 'news': news_chain}</code>。在这里，weather_chain可能专门处理与天气相关的问题，而news_chain处理与新闻相关的问题。</li>\n<li>default_chain（类型LLMChain）：当 router_chain 无法将输入映射到destination_chains中的任何一个链时，LLMChain 将使用此默认链。这是一个备选方案，确保即使路由器不能决定正确的链，也总有一个链可以处理输入。</li>\n</ul><p><strong>它的工作流程如下：</strong></p><ol>\n<li>输入首先传递给router_chain。</li>\n<li>router_chain根据某些标准或逻辑决定应该使用哪一个destination_chain。</li>\n<li>输入随后被路由到选定的destination_chain，该链进行处理并返回结果。</li>\n<li>如果router_chain不能决定正确的destination_chain，则输入会被传递给default_chain。</li>\n</ol><p>这样，MultiPromptChain就为我们提供了一个在多个处理链之间动态路由输入的机制，以得到最相关或最优的输出。</p><p>实现代码如下：</p><pre><code class=\"language-plain\"># 构建多提示链\nfrom langchain.chains.router import MultiPromptChain\nchain = MultiPromptChain(\n&nbsp; &nbsp; router_chain=router_chain,\n&nbsp; &nbsp; destination_chains=chain_map,\n&nbsp; &nbsp; default_chain=default_chain,\n&nbsp; &nbsp; verbose=True)\n</code></pre><h2>运行路由链</h2><p>好了，至此我们的链路已经准备好了。现在开始提出各种问题，测试一下我们的链。</p><p><strong>测试A：</strong></p><p>print(chain.run(“如何为玫瑰浇水？”))</p><p>输出：</p><p><img src=\"https://static001.geekbang.org/resource/image/89/a2/89d0bfac97b259b93240a10cf777d9a2.png?wh=1097x821\" alt=\"\"></p><p><strong>测试B：</strong></p><p>print(chain.run(“如何为婚礼场地装饰花朵？”))</p><p>输出：</p><p><img src=\"https://static001.geekbang.org/resource/image/4f/ed/4f848ca6592476358a25bf91996aa0ed.png?wh=1095x834\" alt=\"\"></p><p><strong>测试C：</strong></p><p>print(chain.run(“如何考入哈佛大学？”))</p><p>输出：</p><p><img src=\"https://static001.geekbang.org/resource/image/ac/12/acd4a69df2cef81b1f7bcf33f9b4bb12.png?wh=1093x806\" alt=\"\"></p><p>这三个测试，分别被路由到了三个不同的目标链，其中两个是我们预设的“专家类型”目标链，而第三个问题：如何考入哈佛大学？被模型一眼看穿，并不属于任何鲜花运营业务场景，路由链把它抛入了一个 “default chain” —— ConversationChain 去解决。</p><h2>总结时刻</h2><p>在这个示例中，我们看到了LLMRouterChain以及MultiPromptChain。其中，LLMRouterChain继承自RouterChain；而MultiPromptChain则继承自MultiRouteChain。</p><p>整体上，我们通过MultiPromptChain把其他链组织起来，完成了路由功能。</p><pre><code class=\"language-plain\">chain = MultiPromptChain(\n&nbsp; &nbsp; router_chain=router_chain,\n&nbsp; &nbsp; destination_chains=chain_map,\n&nbsp; &nbsp; default_chain=default_chain,\n&nbsp; &nbsp; verbose=True)\n</code></pre><p>在LangChain的 chains -&gt; router -&gt; base.py 文件中，可以看到RouterChain和MultiRouteChain的代码实现。</p><h2>思考题</h2><ol>\n<li>通过verbose=True这个选项的设定，在输出时显示了链的开始和结束日志，从而得到其相互调用流程。请你尝试把该选项设置为False，看一看输出结果有何不同。</li>\n<li>在这个例子中，我们使用了ConversationChain作为default_chain，这个Chain是LLMChain的子类，你能否把这个Chain替换为LLMChain？</li>\n</ol><p>期待在留言区看到你的分享。如果你觉得内容对你有帮助，也欢迎分享给有需要的朋友！最后如果你学有余力，可以进一步学习下面的延伸阅读。</p><h2>延伸阅读</h2><ol>\n<li>代码，RouterChain和MultiRouteChain的<a href=\"https://github.com/langchain-ai/langchain/blob/master/libs/langchain/langchain/chains/router/base.py\">实现细节</a></li>\n<li>代码，MultiPromptChain的<a href=\"https://github.com/langchain-ai/langchain/blob/master/libs/langchain/langchain/chains/router/multi_prompt.py\">实现细节</a></li>\n</ol>","comments":[{"had_liked":false,"id":381547,"user_name":"在路上","can_delete":false,"product_type":"c1","uid":1402511,"ip_address":"广东","ucode":"6E31908EFE1107","user_header":"https://static001.geekbang.org/account/avatar/00/15/66/8f/02be926d.jpg","comment_is_top":false,"comment_ctime":1695372277,"is_pvip":false,"replies":[{"id":139074,"content":"很精辟","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1695872204,"ip_address":"新加坡","comment_id":381547,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"ConversationChain和LLMChain的区别在于，ConversationChain有memory成员变量，能保留对话上下文，而LLMChain不行。在源码上，跟踪ConversationBufferMemory.load_memory_variables()可知，对话上下文会作为inputs的一部分传入PromptTemplate，成为llm的提示词。","like_count":19,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628806,"discussion_content":"很精辟","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695872204,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381663,"user_name":"阶前梧叶","can_delete":false,"product_type":"c1","uid":1399555,"ip_address":"江苏","ucode":"85AADEA5908028","user_header":"https://static001.geekbang.org/account/avatar/00/15/5b/03/660c8a3c.jpg","comment_is_top":false,"comment_ctime":1695625667,"is_pvip":false,"replies":[{"id":139078,"content":"同学提出了一个好问题。很启发思考。\n一个路由链，它根据LLM的输出决定下一步应该去哪个链。可以看一下路由链的内部代码，当LLM返回一个结果时，它通过 RouterOutputParser 进行解析。此解析器返回一个字典，其中包含两个关键部分：destination 和 next_inputs。其中，destination 标识了下一步应该路由到哪个链。\n那么，我们是可以从destination知道是那个Chain解决的问题的哈。那么如果你想要这个具体的Chain返回具体的数据格式，也是可以在给到这个具体Chain的提示中指定的哈。应该都做的到。同学可以自己编写代码试试。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1695876860,"ip_address":"新加坡","comment_id":381663,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"在这种路由链中，返回的数据也想做结构化json解析，那最终llm返回的结果，如何去确定是哪个chain返回的？继而选择对应的parser处理","like_count":5,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628813,"discussion_content":"同学提出了一个好问题。很启发思考。\n一个路由链，它根据LLM的输出决定下一步应该去哪个链。可以看一下路由链的内部代码，当LLM返回一个结果时，它通过 RouterOutputParser 进行解析。此解析器返回一个字典，其中包含两个关键部分：destination 和 next_inputs。其中，destination 标识了下一步应该路由到哪个链。\n那么，我们是可以从destination知道是那个Chain解决的问题的哈。那么如果你想要这个具体的Chain返回具体的数据格式，也是可以在给到这个具体Chain的提示中指定的哈。应该都做的到。同学可以自己编写代码试试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695876860,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":383095,"user_name":"鲸鱼","can_delete":false,"product_type":"c1","uid":1052643,"ip_address":"北京","ucode":"71437C1C601040","user_header":"https://static001.geekbang.org/account/avatar/00/10/0f/e3/c49aa508.jpg","comment_is_top":false,"comment_ctime":1698400642,"is_pvip":false,"replies":[{"id":139554,"content":"非常棒的分享，谢谢同学！！🤡","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1698480901,"ip_address":"瑞士","comment_id":383095,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"我发现使用MultiPromptChain.from_prompts方法会更简洁，其内部实现就是老师上面列出的内容类似\nflower_care_template = &quot;&quot;&quot;\n你是一个经验丰富的园丁，擅长解答关于养花育花的问题。\n下面是需要你来回答的问题:\n{input}&quot;&quot;&quot;\nflower_deco_template = &quot;&quot;&quot;\n你是一位网红插花大师，擅长解答关于鲜花装饰的问题。\n下面是需要你来回答的问题:\n{input}&quot;&quot;&quot;\nprompt_infos = [\n    {\n        &#39;name&#39;: &#39;flower_care&#39;,\n        &#39;description&#39;: &#39;适合回答关于鲜花护理的问题&#39;,\n        &#39;prompt_template&#39;: flower_care_template,\n    },\n    {\n        &#39;name&#39;: &#39;flower_decoration&#39;,\n        &#39;description&#39;: &#39;适合回答关于鲜花装饰的问题&#39;,\n        &#39;prompt_template&#39;: flower_care_template,\n    },\n]\n\nllm = OpenAI()\nchain = MultiPromptChain.from_prompts(llm=llm, prompt_infos=prompt_infos, verbose=True)\nprint(chain.run(&quot;如何为玫瑰浇水？&quot;))","like_count":4,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630458,"discussion_content":"非常棒的分享，谢谢同学！！🤡","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1698480901,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381507,"user_name":"黄振宇","can_delete":false,"product_type":"c1","uid":1686397,"ip_address":"北京","ucode":"976BC7B46DA419","user_header":"https://static001.geekbang.org/account/avatar/00/19/bb/7d/26340713.jpg","comment_is_top":false,"comment_ctime":1695302155,"is_pvip":false,"replies":[{"id":138977,"content":"对，router_chain是一个简单agent了。这是因为它的Router路径是LLM推出来的，不是人为指定的。Agent也就是让LLM推出来调用哪个Tool，另外Agent还多加了ReAct等推理框架。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1695346596,"ip_address":"新加坡","comment_id":381507,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"感觉router_chain是一个agent了，只不过agent调用的是不同的tool，router_chain调用的是其他的大模型LLM","like_count":3,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628479,"discussion_content":"对，router_chain是一个简单agent了。这是因为它的Router路径是LLM推出来的，不是人为指定的。Agent也就是让LLM推出来调用哪个Tool，另外Agent还多加了ReAct等推理框架。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695346596,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381553,"user_name":"阿斯蒂芬","can_delete":false,"product_type":"c1","uid":1024164,"ip_address":"广东","ucode":"61D5E3BDA4EBC5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a0/a4/b060c723.jpg","comment_is_top":false,"comment_ctime":1695375893,"is_pvip":false,"replies":[{"id":138985,"content":"我觉得Chain就是个封装和组合，Agent才是驱动力。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1695442207,"ip_address":"新加坡","comment_id":381553,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"打卡 mark！课跟上了，代码还没跟上。chains 的理念算不算就是利用LLM来驱动LLM？","like_count":2,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628525,"discussion_content":"我觉得Chain就是个封装和组合，Agent才是驱动力。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695442208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":384905,"user_name":"dydcm","can_delete":false,"product_type":"c1","uid":1105690,"ip_address":"广东","ucode":"7A3F4F292F3DB5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/hllDt1dmuR6iciaahutPe9NjOic5OPMc7fbTysLTn8wgCSPW3zjYvd5rYDWBwQkSmqfsFntK12fLmam63FWpMklfg/132","comment_is_top":false,"comment_ctime":1701771019,"is_pvip":false,"replies":[{"id":140915,"content":"import numpy as np 出错，看起来环境的问题。重装一下环境？","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1705069115,"ip_address":"瑞士","comment_id":384905,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"老师您好，我跑样例的时候一直报一个错，能麻烦帮忙看下原因吗？报错如下：\n\nThe above exception was the direct cause of the following exception:\n。。。\n\n File &quot;&#47;Library&#47;Frameworks&#47;Python.framework&#47;Versions&#47;3.12&#47;lib&#47;python3.12&#47;site-packages&#47;langchain&#47;utils&#47;__init__.py&quot;, line 15, in &lt;module&gt;\n    from langchain.utils.math import cosine_similarity, cosine_similarity_top_k\n  File &quot;&#47;Library&#47;Frameworks&#47;Python.framework&#47;Versions&#47;3.12&#47;lib&#47;python3.12&#47;site-packages&#47;langchain&#47;utils&#47;math.py&quot;, line 5, in &lt;module&gt;\n    import numpy as np\n  File &quot;&#47;Library&#47;Frameworks&#47;Python.framework&#47;Versions&#47;3.12&#47;lib&#47;python3.12&#47;site-packages&#47;numpy&#47;__init__.py&quot;, line 135, in &lt;module&gt;\n    raise ImportError(msg) from e\nImportError: Error importing numpy: you should not try to import numpy from\n        its source directory; please exit the numpy source tree, and relaunch\n        your python interpreter from there.\n\n  ","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":635721,"discussion_content":"import numpy as np 出错，看起来环境的问题。重装一下环境？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1705069115,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":383506,"user_name":"SH","can_delete":false,"product_type":"c1","uid":1013132,"ip_address":"浙江","ucode":"0A3202CE56C118","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/8c/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1699185416,"is_pvip":false,"replies":[{"id":140204,"content":"通过显示verbose或者设置全局debug，就可以看到具体的提示模板。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1700584332,"ip_address":"瑞士","comment_id":383506,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"这节里面的问题，如果使用 当前的 ChatGPT 我们如果直接向他提问的时候，他的内部是否已经帮助我调整好了相关的提示模版，通过相关的链 来回答相关的问题呢？  \n\n实际测试了一下，没有提示模板问，与加了提示模板（告诉他是个专门），两种方式输出的确会有些差异；","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":632254,"discussion_content":"通过显示verbose或者设置全局debug，就可以看到具体的提示模板。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1700584332,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":382495,"user_name":"sunny","can_delete":false,"product_type":"c1","uid":1094714,"ip_address":"安徽","ucode":"1F8F1A30B26BD2","user_header":"https://static001.geekbang.org/account/avatar/00/10/b4/3a/02ea71fa.jpg","comment_is_top":false,"comment_ctime":1697458254,"is_pvip":false,"replies":[{"id":139446,"content":"好问题。\nRouterChain由两个主要组件组成:\n1. RouterChain本身(负责选择下一个要调用的链)\n2. destination_chains: 路由器可以路由到的链\nRouterChain的作用是根据输入动态选择下一个要执行的链。它不需要通过为大型语言模型编写提示来推断用户的意图。\n相反,RouterChain在内部维护一组可能的目标链(destination_chains)。对于每个输入,它会根据内部逻辑选择下一个要运行的目标链。\n例如,EmbeddingRouterChain使用输入的嵌入向量与目标链描述的嵌入向量进行相似性比较,选择相似度最高的链。LLMRouterChain使用小型语言模型根据目标链的描述来选择链。\nRouterChain自动处理路由逻辑,用户只需要提供目标链,而不需要编写选择目标链的提示。它动态地根据每个输入选择下一个链,实现了可配置的多任务链。—— 我认为此处对于destination_chains的说明文字非常重要，其它问题RouterChain内部解决 —— 同学们有不同意见么？","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1698140335,"ip_address":"瑞士","comment_id":382495,"utype":1}],"discussion_count":4,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"文章中的这一段话：\n（RouterChain，也叫路由链，能动态选择用于给定输入的下一个链。我们会根据用户的问题内容，首先使用路由器链确定问题更适合哪个处理模板，然后将问题发送到该处理模板进行回答。如果问题不适合任何已定义的处理模板，它会被发送到默认链。）\n我的疑问是：这里指路由链是能自动推理出用户意图，进而选择对应意图所要走的任务处理目标链吗；不需要通过写prompt+用户输入送入到大模型让大模型进行自动推理做选择题输出意图吗？\n（比如写个prompt:\n请理解这一段话{变量=用户输入},判断这段话是想进行[鲜花养护]还是[鲜花培育];\n##若是鲜花养护请输出&quot;A&quot;,若是鲜花培育输出”B“）\n这样得到到了A或B判断出了用户意图走哪个目标链","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630150,"discussion_content":"好问题。\nRouterChain由两个主要组件组成:\n1. RouterChain本身(负责选择下一个要调用的链)\n2. destination_chains: 路由器可以路由到的链\nRouterChain的作用是根据输入动态选择下一个要执行的链。它不需要通过为大型语言模型编写提示来推断用户的意图。\n相反,RouterChain在内部维护一组可能的目标链(destination_chains)。对于每个输入,它会根据内部逻辑选择下一个要运行的目标链。\n例如,EmbeddingRouterChain使用输入的嵌入向量与目标链描述的嵌入向量进行相似性比较,选择相似度最高的链。LLMRouterChain使用小型语言模型根据目标链的描述来选择链。\nRouterChain自动处理路由逻辑,用户只需要提供目标链,而不需要编写选择目标链的提示。它动态地根据每个输入选择下一个链,实现了可配置的多任务链。—— 我认为此处对于destination_chains的说明文字非常重要，其它问题RouterChain内部解决 —— 同学们有不同意见么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1698140335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1008312,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/b8/0e1b655e.jpg","nickname":"fireshort","note":"","ucode":"10550CA9C6C730","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":632600,"discussion_content":"黄老师，这里不同意你的意见。\n\n学黄老师这门课，建议大家用LangChain的smith平台，可以很清楚看到各种细节。LLMRouterChain其实是生成了这样的Prompt传给LLM，由LLM来返回目标路由：\n\nGiven a raw text input to a language model select the model prompt best suited for the input. You will be given the names of the available prompts and a description of what the prompt is best suited for. You may also revise the original input if you think that revising it will ultimately lead to a better response from the language model.\n\n&lt;&lt; FORMATTING &gt;&gt;\nReturn a markdown code snippet with a JSON object formatted to look like:\n```json\n{\n    &#34;destination&#34;: string \\ name of the prompt to use or &#34;DEFAULT&#34;\n    &#34;next_inputs&#34;: string \\ a potentially modified version of the original input\n}\n```\n\nREMEMBER: &#34;destination&#34; MUST be one of the candidate prompt names specified below OR it can be &#34;DEFAULT&#34; if the input is not well suited for any of the candidate prompts.\nREMEMBER: &#34;next_inputs&#34; can just be the original input if you don&#39;t think any modifications are needed.\n\n&lt;&lt; CANDIDATE PROMPTS &gt;&gt;\nflower_care: 适合回答关于鲜花护理的问题\nflower_decoration: 适合回答关于鲜花装饰的问题\n\n&lt;&lt; INPUT &gt;&gt;\n如何为婚礼场地装饰花朵？\n\n&lt;&lt; OUTPUT (must include ```json at the start of the response) &gt;&gt;\n&lt;&lt; OUTPUT (must end with ```) &gt;&gt;\n\nLLM的输出是：\n```json\n{\n    &#34;destination&#34;: &#34;flower_decoration&#34;,\n    &#34;next_inputs&#34;: &#34;如何为婚礼场地装饰花朵？&#34;\n}\n```\n","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1701056419,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":630150,"ip_address":"广东","group_id":0},"score":632600,"extra":""}]},{"author":{"id":1070253,"avatar":"https://static001.geekbang.org/account/avatar/00/10/54/ad/6ee2b7cb.jpg","nickname":"Jacob.C","note":"","ucode":"034998E7A7CCD1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":632676,"discussion_content":"我觉得这位同学说的是可行的，而且适合作为聊天页面的 prompt 没问题。要是放到项目里，还是选择结构化的方式，工程性（稳定性和可观测性）更好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1701180733,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1008312,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/b8/0e1b655e.jpg","nickname":"fireshort","note":"","ucode":"10550CA9C6C730","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630138,"discussion_content":"仔细看文章的路由模板解释。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1698137818,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":382491,"user_name":"Geek_19a2eb","can_delete":false,"product_type":"c1","uid":3732186,"ip_address":"浙江","ucode":"CCB604FB93E07B","user_header":"","comment_is_top":false,"comment_ctime":1697453174,"is_pvip":false,"replies":[{"id":139442,"content":"大模型有时给出的结果不稳定。解决方案：1. 重新运行。2. 可以考虑输出解析时使用我们之前（第7课）讲过的错误处理机制。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1698139408,"ip_address":"瑞士","comment_id":382491,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"就是当输入的内容匹配不上其他的链的时候到默认路由这报错  其他的链都是正常的  报错信息如下，麻烦老师帮忙看下 刚入门的小白，多多理解：OutputParserException: Parsing text\n```json\n{\n    &quot;destination&quot;: &quot;DEFAULT&quot;,\n    &quot;next_inputs&quot;: &quot;如何考入哈佛大学?&quot;\n}\n raised following error:\nGot invalid JSON object. Error: Expecting value: line 1 column 1 (char 0)","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630146,"discussion_content":"大模型有时给出的结果不稳定。解决方案：1. 重新运行。2. 可以考虑输出解析时使用我们之前（第7课）讲过的错误处理机制。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1698139408,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3732186,"avatar":"","nickname":"Geek_19a2eb","note":"","ucode":"CCB604FB93E07B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":629754,"discussion_content":"买完课 都不带回复的  好好好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1697598102,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":382490,"user_name":"Geek_19a2eb","can_delete":false,"product_type":"c1","uid":3732186,"ip_address":"浙江","ucode":"CCB604FB93E07B","user_header":"","comment_is_top":false,"comment_ctime":1697452966,"is_pvip":false,"replies":[{"id":139440,"content":"这是大模型给出的答案格式不稳定造成的。多运行几次就好了。同时同学也可以思考一下有没有什么错误处理方案。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1698138974,"ip_address":"瑞士","comment_id":382490,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"老师您好 我运行到print(chain.run(“如何考入哈佛大学？”))的时候报错  能给看下是啥原因吗  报错如下：\nOutputParserException: Parsing text\n```json\n{\n    &quot;destination&quot;: &quot;DEFAULT&quot;,\n    &quot;next_inputs&quot;: &quot;如何考入哈佛大学?&quot;\n}\n raised following error:\nGot invalid JSON object. Error: Expecting value: line 1 column 1 (char 0)","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630143,"discussion_content":"这是大模型给出的答案格式不稳定造成的。多运行几次就好了。同时同学也可以思考一下有没有什么错误处理方案。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1698138974,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":382262,"user_name":"漏网之渔","can_delete":false,"product_type":"c1","uid":1092258,"ip_address":"北京","ucode":"8D7896E99E784C","user_header":"https://static001.geekbang.org/account/avatar/00/10/aa/a2/c7a3758d.jpg","comment_is_top":false,"comment_ctime":1696952101,"is_pvip":false,"replies":[{"id":139247,"content":"为了清晰和一致的实现，如果RouterChain中的所有分支都期望相同的输入格式，通常会更简单。这确保了路由逻辑保持简单，行为是可预测的。但是，如果真的需要支持不同的参数用于不同的链，那么通过一些额外的开发工作应该是可能的。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1696988640,"ip_address":"瑞士","comment_id":382262,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"RouterChain中每个分支chain的输入参数要求是相同的么，可以使用不同数量的参数么","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":629365,"discussion_content":"为了清晰和一致的实现，如果RouterChain中的所有分支都期望相同的输入格式，通常会更简单。这确保了路由逻辑保持简单，行为是可预测的。但是，如果真的需要支持不同的参数用于不同的链，那么通过一些额外的开发工作应该是可能的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1696988640,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":382079,"user_name":"夏落de烦恼","can_delete":false,"product_type":"c1","uid":1875724,"ip_address":"广东","ucode":"0CBDC51EF566A6","user_header":"https://static001.geekbang.org/account/avatar/00/1c/9f/0c/8484f8b1.jpg","comment_is_top":false,"comment_ctime":1696665065,"is_pvip":false,"replies":[{"id":139191,"content":"官方的应该没有，同学可以研究一下这个：https:&#47;&#47;github.com&#47;ninehills&#47;langchain-wenxin","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1696783217,"ip_address":"瑞士","comment_id":382079,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"langchain有集成文心一言么？这个案例能用在文心一言上么？","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":629184,"discussion_content":"官方的应该没有，同学可以研究一下这个：https://github.com/ninehills/langchain-wenxin","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1696783217,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":382010,"user_name":"zhouqin","can_delete":false,"product_type":"c1","uid":1005403,"ip_address":"四川","ucode":"88C28CE9B6AE88","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/5b/caacc46f.jpg","comment_is_top":false,"comment_ctime":1696507658,"is_pvip":false,"replies":[{"id":139174,"content":"好主意，把GPT的油水榨干。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1696668161,"ip_address":"瑞士","comment_id":382010,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"建议有开发经验的同学，先通过gpt把作者文章核心点精炼出来。然后用作者通过LangChain模板跑出的提示词，通过gpt或者claude做验证。多跑几遍就能感觉到大模型的思维方式。最后再去看代码。事半功倍、、：》","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":629102,"discussion_content":"好主意，把GPT的油水榨干。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1696668161,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381858,"user_name":"Geek_7ca963","can_delete":false,"product_type":"c1","uid":2657690,"ip_address":"北京","ucode":"610B7FD6D30207","user_header":"https://static001.geekbang.org/account/avatar/00/28/8d/9a/6c9a252e.jpg","comment_is_top":false,"comment_ctime":1696035254,"is_pvip":false,"replies":[{"id":139101,"content":"这里的Chain只是简单的路由功能，自主性不如Agent的设计复杂。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1696240080,"ip_address":"新加坡","comment_id":381858,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"老师，Agent 和 Chain 到底有啥区别 ？ chain 似乎也可以做 act，甚至判断用途","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628918,"discussion_content":"这里的Chain只是简单的路由功能，自主性不如Agent的设计复杂。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1696240080,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381549,"user_name":"Webber","can_delete":false,"product_type":"c1","uid":2776202,"ip_address":"上海","ucode":"F9662546472FA7","user_header":"https://static001.geekbang.org/account/avatar/00/2a/5c/8a/244128ff.jpg","comment_is_top":false,"comment_ctime":1695372938,"is_pvip":false,"replies":[{"id":138987,"content":"好问题啊，同学。马上就讲Agent了。这是LangChain的精髓。\n你需要Pass多个工具给Chain，然后LLM要分解Task，需要推理出先做什么后做什么。\n1. 思考1 - 先做NER，解析出目的地和出发地。\n2. 行动1 - 调用另外一个LLM，做NER，拿结果\n3. 拿到思考1的结果，进行观察。\n4. 思考2 - 把思考1的结果Pass给第二个工具。这个工具选择是高德地图\n5. 行动2\n。。。。。\n","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1695451081,"ip_address":"新加坡","comment_id":381549,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"老师啥时候更新agent的内容啊，我在用langchain做一个agent。遇到一个问题，就是在最开始输入的是一个query，比如：帮我从上海中心大厦导航到上海虹桥火车站，agent此时决定去调用高德导航这个tool，高德导航tool接收的输入是出发地和目的地，那么这个出发地和目的地是怎么解析出来传给高德导航tool的呢，是在自定义tool的description中写prompt让模型提取出发地和目的地两个实体吗，不懂怎么才能给想要调用的tool传递tool需要的参数。如果有10个tool，每个tool接收的输入参数都不一样，不知道怎么才能实现给指定tool传递特定参数的目标。","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628528,"discussion_content":"好问题啊，同学。马上就讲Agent了。这是LangChain的精髓。\n你需要Pass多个工具给Chain，然后LLM要分解Task，需要推理出先做什么后做什么。\n1. 思考1 - 先做NER，解析出目的地和出发地。\n2. 行动1 - 调用另外一个LLM，做NER，拿结果\n3. 拿到思考1的结果，进行观察。\n4. 思考2 - 把思考1的结果Pass给第二个工具。这个工具选择是高德地图\n5. 行动2\n。。。。。\n","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1695451081,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2776202,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/5c/8a/244128ff.jpg","nickname":"Webber","note":"","ucode":"F9662546472FA7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628529,"discussion_content":"好的，谢谢老师给的思路","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695452081,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":388675,"user_name":"厉害了我的国","can_delete":false,"product_type":"c1","uid":1052191,"ip_address":"上海","ucode":"CD0A54A1B998AA","user_header":"https://static001.geekbang.org/account/avatar/00/10/0e/1f/d0472177.jpg","comment_is_top":false,"comment_ctime":1710662990,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"langchain迭代太快，在最新的0.1.12版本中，可以通过MultiPromptChain直接实现 router 能力，全部代码如下：\n\nfrom langchain.chains.router import MultiPromptChain\nfrom langchain_openai import ChatOpenAI\n\nflower_care_template = &quot;&quot;&quot;\n你是一位经验丰富的园丁，擅长解答关于养花育花的问题，下面是需要你来回答的问题：{input}\n&quot;&quot;&quot;\n\nflower_deco_template = &quot;&quot;&quot;\n你是一位网红插花大师，擅长解答关于鲜花装饰的问题，下面是需要你来回答的问题：{input}\n&quot;&quot;&quot;\n\nprompt_infos = [\n    {\n        &quot;name&quot;: &quot;flower_care&quot;,\n        &quot;prompt_template&quot;: flower_care_template,\n        &quot;description&quot;: &quot;适合回答关于鲜花护理的问题&quot;\n    },\n    {\n        &quot;name&quot;: &quot;flower_deco&quot;,\n        &quot;prompt_template&quot;: flower_deco_template,\n        &quot;description&quot;: &quot;适合回答关于鲜花装饰的问题&quot;\n    }\n]\n\nllm = ChatOpenAI()\nrouter_chain = MultiPromptChain.from_prompts(llm=llm, prompt_infos=prompt_infos, verbose=True)\nprint(router_chain.invoke({&quot;input&quot;: &quot;如何为玫瑰花浇水?&quot;}))\n\n","like_count":2},{"had_liked":false,"id":393136,"user_name":"yanyu-xin","can_delete":false,"product_type":"c1","uid":1899757,"ip_address":"广东","ucode":"3AA389F9E4C236","user_header":"","comment_is_top":false,"comment_ctime":1722949082,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"用阿里云的通义大模型代替OpenAI ,也顺利完成RouterChain确定客户意图的代码练习。\n——\n# 旧代码：\n# 初始化语言模型\nfrom langchain.llms import OpenAI\nllm = OpenAI()\n——\n# 新代码：\n# 用阿里云的大语言模型\nfrom langchain_community.llms import Tongyi\nDASHSCOPE_API_KEY = &quot; API_KEY&quot;  # # 设置API密钥，用你的 DASHSCOPE_API_KEY 代替\nllm = Tongyi(dashscope_api_key=DASHSCOPE_API_KEY)","like_count":1},{"had_liked":false,"id":392498,"user_name":"张申傲","can_delete":false,"product_type":"c1","uid":1182372,"ip_address":"北京","ucode":"22D46BC529BA8A","user_header":"https://static001.geekbang.org/account/avatar/00/12/0a/a4/828a431f.jpg","comment_is_top":false,"comment_ctime":1721109066,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":2,"score":3,"product_id":100617601,"comment_content":"第9讲打卡~\nLangChain内置了很多功能丰富的Chain，是个宝藏集合~","like_count":1},{"had_liked":false,"id":388763,"user_name":"Geek_e74222","can_delete":false,"product_type":"c1","uid":3864625,"ip_address":"湖北","ucode":"61626A4620E761","user_header":"","comment_is_top":false,"comment_ctime":1710833532,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"老师你好，我通过本地部署chatglm3-6b来实现了本次课程中的例子，但是很奇怪，无论我的输入是否跟我们的提示模板相关，它总是会选择目标链中的一个去调用，而不是调用default_chain,这跟我的prompt内容相关吗？还是说跟大模型的能力相关呢？希望您能解答，感谢！","like_count":1},{"had_liked":false,"id":394374,"user_name":"刘双荣","can_delete":false,"product_type":"c1","uid":3870283,"ip_address":"北京","ucode":"FB42C207F24A18","user_header":"https://static001.geekbang.org/account/avatar/00/3b/0e/4b/ff4a21de.jpg","comment_is_top":false,"comment_ctime":1726651751,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"routerChain ","like_count":0},{"had_liked":false,"id":388769,"user_name":"Jason Lee","can_delete":false,"product_type":"c1","uid":3867398,"ip_address":"江苏","ucode":"BAC70C20234F98","user_header":"https://static001.geekbang.org/account/avatar/00/3b/03/06/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1710842528,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100617601,"comment_content":"ConversationChain和LLMChain都有memory成员变量，都能保持上下文。\n源码上ConversationChain extends LLMChain。\n区别是 ConversationChain在LLMChain基础上扩展了一个lc_name静态属性。","like_count":0},{"had_liked":false,"id":388737,"user_name":"子飞鱼","can_delete":false,"product_type":"c1","uid":1201744,"ip_address":"广东","ucode":"0C7BCDB9424AC8","user_header":"https://static001.geekbang.org/account/avatar/00/12/56/50/f54bd646.jpg","comment_is_top":false,"comment_ctime":1710807616,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100617601,"comment_content":"老师你好，我想问一下上面的示例，如果直接把input丢给llm，上述三种input应该也能给出不同的回答吧。请问路由链的最佳使用场景是什么呢","like_count":0},{"had_liked":false,"id":388427,"user_name":"Longerian","can_delete":false,"product_type":"c1","uid":1032464,"ip_address":"浙江","ucode":"0B74EE70D09A2A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c1/10/28d5a686.jpg","comment_is_top":false,"comment_ctime":1710165741,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100617601,"comment_content":"思考题2:\n# 用LLMChain代替 ConversationChain\nfrom langchain.prompts import PromptTemplate\n# 原始字符串模板\ntemplate = &quot;&quot;&quot;\nThe following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\n\nCurrent conversation:\n\nHuman: {input}\nAI:\n&quot;&quot;&quot;\n# 创建LangChain模板\nprompt_temp = PromptTemplate.from_template(template)\ndefault_chain = LLMChain(\n    llm=llm,\n    prompt=prompt_temp)","like_count":0},{"had_liked":false,"id":387765,"user_name":"洋","can_delete":false,"product_type":"c1","uid":1378913,"ip_address":"北京","ucode":"863193F96C0E81","user_header":"https://static001.geekbang.org/account/avatar/00/15/0a/61/ff5549d1.jpg","comment_is_top":false,"comment_ctime":1708561307,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100617601,"comment_content":"最新版还用这样写吗，怎么用LCEL实现","like_count":0},{"had_liked":false,"id":386985,"user_name":"Geek_1b01a0","can_delete":false,"product_type":"c1","uid":3816020,"ip_address":"辽宁","ucode":"206B6A87B6E7B2","user_header":"","comment_is_top":false,"comment_ctime":1706078967,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":4,"product_id":100617601,"comment_content":"SequentialChain和RouterChain可以结合使用吗","like_count":0,"discussions":[{"author":{"id":2635514,"avatar":"https://static001.geekbang.org/account/avatar/00/28/36/fa/b10c84fd.jpg","nickname":"勇往直前！","note":"","ucode":"5A097AF1507092","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":637940,"discussion_content":"同问\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1709125684,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}