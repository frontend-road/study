{"id":176902,"title":"23 | Change Stream","content":"<p><strong>课件和Demo地址</strong><br>\n<a href=\"https://gitee.com/geektime-geekbang/geektime-mongodb-course\">https://gitee.com/geektime-geekbang/geektime-mongodb-course</a></p>","comments":[{"had_liked":false,"id":164507,"user_name":"唐朝农民","can_delete":false,"product_type":"c3","uid":1133947,"ip_address":"","ucode":"6F8F43C6652225","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIaOAxRlZjFkGfRBn420LuAcyWkMrpq5iafGdqthX5icJPjql0ibZOAdafaqbfvw4ZpVzDmsaYglVXDw/132","comment_is_top":false,"comment_ctime":1577014006,"is_pvip":false,"replies":[{"id":62946,"content":"除非你是计数器计数那种对同一个字段并发修改。高并发很多是各自用户修改各自的信息，比如说摩拜单车，每辆自行车都在不断修改GPS轨迹，导致高并发访问。但是每辆车只是修改自己的那条文档。这种不会有冲突。","user_name":"作者回复","user_name_real":"远航的TJ 唐建法","uid":1260017,"ctime":1577182333,"ip_address":"","comment_id":164507,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100040001,"comment_content":"老师，事务内的写冲突在高并发下会造成大量的错误，那岂不是很鸡肋？","like_count":6,"discussions":[{"author":{"id":1260017,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/f1/6d18a4d1.jpg","nickname":"远航的TJ 唐建法","note":"","ucode":"0719807390250A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478794,"discussion_content":"除非你是计数器计数那种对同一个字段并发修改。高并发很多是各自用户修改各自的信息，比如说摩拜单车，每辆自行车都在不断修改GPS轨迹，导致高并发访问。但是每辆车只是修改自己的那条文档。这种不会有冲突。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577182333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1419723,"avatar":"https://static001.geekbang.org/account/avatar/00/15/a9/cb/a431bde5.jpg","nickname":"木头发芽","note":"","ucode":"657B381C5DA963","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292797,"discussion_content":"行锁，区间锁和表锁，不同的锁级别。\n所以我在设计平台营收表时没设计记录总额的表，而只有流水表，这样每笔交易只插入一条数据，而不用更新总额的单行，这样高并发也不会锁住","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1595333813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":165326,"user_name":"etdick","can_delete":false,"product_type":"c3","uid":1487506,"ip_address":"","ucode":"E43D68000E92CA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJiaiaQYkUHByDARl4ULduH8Y4hicOpMxGjzPZmJkXK9RYd1oVMICd0icCfarxI4Yvmiap2a8t3Eae3LMg/132","comment_is_top":false,"comment_ctime":1577200629,"is_pvip":false,"replies":[{"id":65230,"content":"\n可以看这个例子：\n\nhttps:&#47;&#47;github.com&#47;spring-projects&#47;spring-data-examples&#47;tree&#47;master&#47;mongodb&#47;change-streams","user_name":"作者回复","user_name_real":"远航的TJ 唐建法","uid":1260017,"ctime":1577974205,"ip_address":"","comment_id":165326,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100040001,"comment_content":"老师，我想咨询change stream是如何触发微服务的。比如库存低于一定阈值后，触发Java服务发送邮件。","like_count":1,"discussions":[{"author":{"id":1260017,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/f1/6d18a4d1.jpg","nickname":"远航的TJ 唐建法","note":"","ucode":"0719807390250A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479122,"discussion_content":"\n可以看这个例子：\n\nhttps://github.com/spring-projects/spring-data-examples/tree/master/mongodb/change-streams","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577974205,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":165324,"user_name":"etdick","can_delete":false,"product_type":"c3","uid":1487506,"ip_address":"","ucode":"E43D68000E92CA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJiaiaQYkUHByDARl4ULduH8Y4hicOpMxGjzPZmJkXK9RYd1oVMICd0icCfarxI4Yvmiap2a8t3Eae3LMg/132","comment_is_top":false,"comment_ctime":1577200509,"is_pvip":false,"replies":[{"id":65217,"content":"可以看下这个例子：\n\nhttps:&#47;&#47;github.com&#47;spring-projects&#47;spring-data-examples&#47;tree&#47;master&#47;mongodb&#47;change-streams\n","user_name":"作者回复","user_name_real":"远航的TJ 唐建法","uid":1260017,"ctime":1577972564,"ip_address":"","comment_id":165324,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100040001,"comment_content":"\n老师想问问，change steam是怎么回调微服务的。不如Java的服务。比如说库存表数量低于一定阈值，如何处罚邮件通知","like_count":1,"discussions":[{"author":{"id":1260017,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/f1/6d18a4d1.jpg","nickname":"远航的TJ 唐建法","note":"","ucode":"0719807390250A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479121,"discussion_content":"可以看下这个例子：\n\nhttps://github.com/spring-projects/spring-data-examples/tree/master/mongodb/change-streams\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577972564,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":202650,"user_name":"炎炎","can_delete":false,"product_type":"c3","uid":1525840,"ip_address":"","ucode":"386E790507C66D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIUlVIL2Y7gVjfuubGmkKVXUv9LUlZURwK0fwnHz4xrzaqf2BjwwSXXNwLrTcxdRnnwhTlwnV1Xcg/132","comment_is_top":false,"comment_ctime":1586043757,"is_pvip":false,"replies":[{"id":75796,"content":"单主节点的majority就是1 所以你用local还是majority没有区别。","user_name":"作者回复","user_name_real":"远航的TJ 唐建法","uid":1260017,"ctime":1586079274,"ip_address":"","comment_id":202650,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100040001,"comment_content":"事务的可见性必须在“复制集”模式下才有 local和majority（readConcern）， 单主节点模式下可见性是不是只有local？","like_count":0,"discussions":[{"author":{"id":1260017,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/f1/6d18a4d1.jpg","nickname":"远航的TJ 唐建法","note":"","ucode":"0719807390250A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490644,"discussion_content":"单主节点的majority就是1 所以你用local还是majority没有区别。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586079274,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182588,"user_name":"不经意间","can_delete":false,"product_type":"c3","uid":1261493,"ip_address":"","ucode":"C39D98697ACB8B","user_header":"https://static001.geekbang.org/account/avatar/00/13/3f/b5/5fe77e16.jpg","comment_is_top":false,"comment_ctime":1582813063,"is_pvip":false,"replies":[{"id":70941,"content":"无法脑补，描述下？","user_name":"作者回复","user_name_real":"远航的TJ 唐建法","uid":1260017,"ctime":1583027947,"ip_address":"","comment_id":182588,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100040001,"comment_content":"用来监控慢查询可好？","like_count":0,"discussions":[{"author":{"id":1260017,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/f1/6d18a4d1.jpg","nickname":"远航的TJ 唐建法","note":"","ucode":"0719807390250A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485378,"discussion_content":"无法脑补，描述下？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583027947,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1261493,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3f/b5/5fe77e16.jpg","nickname":"不经意间","note":"","ucode":"C39D98697ACB8B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":191750,"discussion_content":"db.currentOp(true).inprog.forEach(function(d) {if(d[&#34;secs_running&#34;]>20){ printjson(d) }})","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583031818,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169989,"user_name":"xhj","can_delete":false,"product_type":"c3","uid":1348356,"ip_address":"","ucode":"4E74D920EB39B1","user_header":"https://static001.geekbang.org/account/avatar/00/14/93/04/41f3fbbc.jpg","comment_is_top":false,"comment_ctime":1578489372,"is_pvip":false,"replies":[{"id":66769,"content":"你是如何在做这样的监测，可以描述下吗？我自己的产品也用这个机制，但是没有这么长的时延。","user_name":"作者回复","user_name_real":"远航的TJ 唐建法","uid":1260017,"ctime":1579132135,"ip_address":"","comment_id":169989,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100040001,"comment_content":"老师，使用change stream,从数据插入到watch监控到，延迟约2秒，有什么办法降低延迟吗？  ","like_count":0,"discussions":[{"author":{"id":1260017,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/f1/6d18a4d1.jpg","nickname":"远航的TJ 唐建法","note":"","ucode":"0719807390250A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480797,"discussion_content":"你是如何在做这样的监测，可以描述下吗？我自己的产品也用这个机制，但是没有这么长的时延。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579132135,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1348356,"avatar":"https://static001.geekbang.org/account/avatar/00/14/93/04/41f3fbbc.jpg","nickname":"xhj","note":"","ucode":"4E74D920EB39B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":165835,"discussion_content":"mongodb版本 4.2\n在不同机器上面测试过，排除网络问题。\n单独部署一个复制集群的话，测试基本没有什么延迟。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581335375,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1348356,"avatar":"https://static001.geekbang.org/account/avatar/00/14/93/04/41f3fbbc.jpg","nickname":"xhj","note":"","ucode":"4E74D920EB39B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":165830,"discussion_content":"在一台主机上搭建分片集群（参考 https://blog.csdn.net/liver_life/article/details/100562949 ）\n使用python 简单测试：\nasync def test_watch():\n  async for document in mongo.test.watch([], full_document=&#34;updateLookup&#34;, max_await_time_ms=100):\n        #print(document)\n        print(time.time()-document[&#39;fullDocument&#39;][&#39;t&#39;], document[&#39;fullDocument&#39;][&#39;count&#39;])\n\nasync def test_watch_insert():\n    count = 0\n    t0 = int(time.time())\n    while 1:\n        await mongo.test.insert_one({&#39;t&#39;:int(time.time()), &#39;count&#39;:count})\n        #time.sleep(1)\n        count += 1\n        print(count)\n        if count%10000==0:\n            print(count, int(time.time())-t0, count/(int(time.time())-t0))\n\n输出类似：\n5.21766471862793 548592\n5.21791672706604 548593\n5.218210697174072 548594\n5.221897840499878 548595\n5.224080801010132 548596\n5.225824356079102 548597\n5.227885723114014 548598\n5.229979753494263 548599\n\n延迟从2秒到10秒波动\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581335081,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350533,"user_name":"Hendricks","can_delete":false,"product_type":"c3","uid":2859390,"ip_address":"","ucode":"604BFF3064905A","user_header":"","comment_is_top":false,"comment_ctime":1656991490,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100040001,"comment_content":"change stream提供并发监听吗？比如多个微服务实例监听同一个change stream，但是每次更新事件只希望其中一个实例处理","like_count":0},{"had_liked":false,"id":310355,"user_name":"李英权","can_delete":false,"product_type":"c3","uid":1076081,"ip_address":"","ucode":"FECAC14A9C414B","user_header":"https://static001.geekbang.org/account/avatar/00/10/6b/71/e833b14a.jpg","comment_is_top":false,"comment_ctime":1630629243,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100040001,"comment_content":"老师，关于change stream，我看文档说有一个fulldocumentbeforechange特性，就是在update事件通知中不仅有修改后的doc，还有修改前的doc。但是我用springboot以及java驱动，找不到这个特性，也拿不到这个修改前doc。\n我很需要这个，因为处理逻辑依赖于修改前后值的比较计算。","like_count":0},{"had_liked":false,"id":163357,"user_name":"长期规划","can_delete":false,"product_type":"c3","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1576712364,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100040001,"comment_content":"老师，MongoDB在事务中和事务外对写冲突的处理不一样啊，在事务中，直接返回错误，在事务外，会等待。为何要有差异呢？对比MySQL无论是显式事务还是自动提交，当有写冲实时，都是等待","like_count":0,"discussions":[{"author":{"id":1076081,"avatar":"https://static001.geekbang.org/account/avatar/00/10/6b/71/e833b14a.jpg","nickname":"李英权","note":"","ucode":"FECAC14A9C414B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":201499,"discussion_content":"可能是为了性能吧。事务内出现冲突 你已经看到了你不该看到的东西，等待也没用 只能报错，类似于乐观锁的策略 发现版本旧了 只能报错。\n事务外 是悲观所策略。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583803249,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}