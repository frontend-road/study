{"id":127978,"title":"02 | 消息收发架构：为你的App，加上实时通信功能","content":"<p>你好，我是袁武林。</p><p>前一篇文章中，我们从使用者的直观角度和从业者的实现维度，了解一个IM系统都应该具备哪些要素。但实际上，从我的角度来看，我更倾向于把“IM”看作是一门可以融入到各种业务系统中，为业务系统提供“实时交互”能力的技术模块。</p><p>比如，极客时间想在它的App中增加一个互动模块，支持用户点对点的实时聊天功能。那么，我们就可以相应地通过一些IM SDK的方式，快速地把即时消息的技术引入到已有的业务系统中。</p><p>同样，一个传统的视频网站如果想让自己的视频支持弹幕功能，也可以通过引入即时消息的技术，来让视频弹幕的参与者能实时、高效地和其他观看者进行各种互动。</p><p>所以，从某种程度上看，随着移动网络的快速发展以及资费的快速下降，即时消息技术也越来越多地被广泛应用到各种业务系统中，用于提升用户实时互动的能力。</p><p>那么，接下来，我们就一起从即时消息更细化的实现角度来看一看，给一个已有系统增加即时消息功能，大致上都有哪些具体工作。</p><p><img src=\"https://static001.geekbang.org/resource/image/1c/28/1c38c735ff95d2df0ca15040394f6f28.png?wh=1965*1637\" alt=\"\"></p><p>如果为原有的业务系统增加实时消息模块，在不需要重建账号体系的前提下，整体上大概包括几块内容：</p><p><strong>一般来说首先需要制定好消息内容和未读数的存储，另外需要建立比原业务系统更加高效实时的消息收发通道，当然也包括依托第三方辅助通道来提升消息到达率。</strong></p><!-- [[[read_end]]] --><p>下面我们分别来看一下各部分大体需要做的工作都包括哪些。</p><h2>消息存储</h2><p>我们回想一下上一篇的内容，即时消息系统中，消息作为互动的载体，是必不可少的要素之一。</p><p>一般来说，大部分即时消息系统为了便于查看历史消息或者用于暂存离线消息，都需要对消息进行服务端存储，因此，我们先来看一看，这些互动过程产生的消息在服务端应该怎么存储或者暂存。</p><h3>消息索引和消息内容</h3><p>这里，我以点对点消息的存储为例，来讲解一下。</p><p><strong>点对点消息的参与方有两个：消息发送方和消息接收方。</strong>收发双方的历史消息都是相互独立的。互相独立的意思就是：假设发送方删除了某一条消息，接收方仍然可以获取到这条消息。</p><p>所以，从库表的设计上分析，这里需要索引表中收发双方各自有一条自己的索引记录：一条是消息发送方的发件箱索引，另一条是消息接收方的收件箱索引。</p><p>由于收发双方看到的消息内容实际都是一致的，因此还需要一个独立的消息内容表。</p><p>消息内容表用于存储消息维度的一些基本信息，比如消息ID、消息内容、消息类型、消息产生时间等。收发双方的两个索引表通过同一个消息ID和这个内容表关联。</p><p>这里假设张三给李四发送一条消息，消息存储在MySQL，或者类似的关系型数据库中，那么上面涉及的两张表大致如下：</p><ul>\n<li>内容表</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/b5/8f/b50954d72596da912c510d8b556b408f.jpg?wh=1369*211\" alt=\"\"></p><ul>\n<li>索引表</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/0b/01/0b4a032608bdd2b56fa7c826d8cc9601.jpg?wh=1377*299\" alt=\"\"></p><p>比如张三给李四发了一条“你好”的消息，那么这个动作会向内容表存储一条消息。这条消息内容是这样的：ID为1001，消息内容是“你好”，消息类型是文本消息，还有当时消息创建的时间。</p><p>并且，它同时会往索引表里存储两条记录。</p><p>一条是张三的索引：内容有会话对方的UID（李四的UID），是发件箱的索引（也就是0），同时记录这条消息的内容表里的消息ID为1001。</p><p>另一条是李四的索引：内容有会话对方的UID（张三的UID），是收件箱的索引（也就是1），同样也同时记录这条消息的内容表里的消息ID为1001。</p><h3>联系人列表</h3><p>有了消息和索引后，如上一篇中的描述，一般IM系统还需要一个最近联系人列表，来让互动双方快速查找需要聊天的对象，联系人列表一般还会携带两人最近一条聊天消息用于展示。</p><p>这里你需要理解的是，和消息索引表的存储逻辑相比，联系人列表在存储上有以下区别。</p><ul>\n<li><strong>联系人列表只更新存储收发双方的最新一条消息，不存储两人所有的历史消息。</strong></li>\n<li><strong>消息索引表的使用场景一般用于查询收发双方的历史聊天记录，是聊天会话维度；而联系人表的使用场景用于查询某一个人最近的所有联系人，是用户全局维度。</strong></li>\n</ul><p>在库表的设计上，联系人列表的存储实际和消息索引表类似，只不过消息索引表在接收到消息时，大部分情况都是插入操作，而联系人列表很多时候是更新操作。</p><ul>\n<li>最近联系人表</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/49/4c/49c11075b4732b492e900aab58770c4c.jpg?wh=1381*271\" alt=\"\"></p><p>还是刚才那个例子，张三给李四发完消息后，除了在内容表和索引表插入记录，还会更新各自的最近联系人表，这里需要分别更新张三的最近联系人表和李四的最近联系人表。</p><p>比如更新张三的最近联系人表，如果和李四之前没有聊天记录，那么新插入一条联系人记录。联系人的对方UID为李四的UID，和这个联系人最新的一条消息ID是1001。</p><p>如果张三和李四之前已经有过聊天记录，那么只需要更新张三和李四的最新的一条聊天消息ID为1001，同样的办法再更新一次李四的联系人列表。</p><p>以上就是消息存储部分最重要的三个表，消息内容表、消息索引表、联系人列表。它们大致的存储结构，我们就设计好了。</p><h2>消息收发通道</h2><p>设计好消息的存储结构后，接下来，我们需要考虑的是：如何将消息发出去，以及怎么把消息投递给接收方。这里逻辑上涉及了两条通道：一条是消息发送通道，一条是消息接收通道。</p><p>发送方通过发送通道把消息从本地发送到IM服务端；IM服务端通过接收通道把消息投递给接收方。</p><h3>消息发送通道</h3><p>发送通道的实现上有很多种方式，比如下面的两种。</p><ol>\n<li>IM服务端提供一个HTTP协议的API接口，客户端需要发送消息时，调用这个接口把消息发给IM服务端。</li>\n<li>客户端和IM服务端维护一个TCP长连接，客户端有消息发送时，会以私有协议来封装这条要发送的消息，然后通过这个TCP长连接把消息发给IM服务端。</li>\n</ol><p><img src=\"https://static001.geekbang.org/resource/image/3a/47/3a685f9d3f363cb7f748b73b6f8a6147.png?wh=1614*1310\" alt=\"\"></p><p>所以，发送通道的实现相对比较简单，<strong>重点在于：IM服务端提供消息发送的API，发送方可以通过任意方式调用到这个API，把消息发出去即可。</strong></p><h3>消息接收通道</h3><p>对于我们最常见的非P2P模式的IM系统来说，由于<strong>有一条消息要投递给某个接收方</strong>这个事件，接收方并没有办法能实时知道，只有IM服务端收到发送方发出的消息时能实时感知到，因此消息投递这个动作一般都是IM服务端触发的（这里，我们不去讨论由接收方通过轮询获取消息的模式）。</p><p>下面，我画了一张图来说明接收通道的业务逻辑，目前业界在消息接收通道的实现上较多采用的方式是下面这样的。</p><p><img src=\"https://static001.geekbang.org/resource/image/41/33/41bd1f4c74e980f88cd1a2247f292133.png?wh=1637*2456\" alt=\"\"></p><p>解释一下这张图。</p><p>IM服务端的网关服务和消息接收方设备之间维护一条TCP长连接（或者Websocket长连接），借助TCP的<strong>全双工能力，也就是能够同时接收与发送数据的能力。</strong>当有消息需要投递时，通过这条长连接实时把消息从IM服务端推送给接收方。</p><p>对于接收方不在线（比如网络不通、App没打开等）的情况，还可以通过第三方手机操作系统级别的辅助通道，把这条消息通过手机通知栏的方式投递下去。</p><p>这里简单解释一下，常见的第三方操作系统级别的辅助通道。比如苹果手机的APNs（Apple Push Notification Service）通道、Android手机的GCM通道，还有各种具体手机厂商（如小米、华为等）提供的厂商通道。</p><p>这些通道由于是手机厂商来维护的，只要手机网络可通，因此可以在我们的App在没有打开的情况下，也能把消息实时推送下去。</p><p>当然，这些第三方操作系统级别的辅助通道也存在一些问题，因此大部分情况下也只是作为一个辅助手段来提升消息的实时触达的能力，这个在后续课程中，我会再详细说明。</p><p>因此，对于消息接收通道，重点在于需要在IM服务端和接收方之间，维护一个可靠的长连接，什么叫可靠的长连接呢，这里的可靠可以理解为下列两种情况。</p><ol>\n<li>\n<p>IM服务端和接收方能较为精确地感知这个长连接的可用性，当由于网络原因连接被中断时，能快速感知并进行重连等恢复性操作。</p>\n</li>\n<li>\n<p>可靠性的另一层含义是：通过这个长连接投递的消息不能出现丢失的情况，否则会比较影响用户体验。这个问题的解决会在后续第3篇的课程中来详细展开。</p>\n</li>\n</ol><p>我在上面大概说明了一下，逻辑上消息收发通道各自的作用和一般的实现，当然这两条通道在实际的实现上，可以是各自独立存在的，也可以合并在一条通道中。</p><h2>消息未读数</h2><p>现在我们有了消息的收发通道和消息的存储，用户通过发送通道把消息发到IM服务端，IM服务端对消息内容、收发双方的消息索引进行存储，同时更新双方的最近联系人的相关记录，然后IM服务端通过和消息接收方维护的接收通道，将消息实时推送给消息接收方。</p><p>如果消息接收方当前不在线，还可以通过第三方操作系统级别的辅助通道，来实时地将消息通过手机通知栏等方式推送给接收方。</p><p>整体上来看，一条消息从发送、存储、接收的生命之旅基本上比较完整了，但对于即时消息的场景来说，还有一个比较重要的功能，会对双方在互动积极性和互动频率上产生比较大的影响，这个就是消息的未读数提醒。</p><p>用过QQ、微信的用户应该都有一个比较明显的感知，很多时候为了避免通知栏骚扰，会限制掉App在通知栏提醒权限，或者并没有注意到通知栏的提醒，这些情况都可能会让我们无法及时感知到“有人给我发了新的消息”这个事情。</p><p>那么作为一个重要的补救措施就是消息的未读提醒了。就我个人而言，很多时候是看到了QQ或者微信App的角标，上面显示的多少条未读消息，才打开App，然后通过App里面具体某个联系人后面显示，和当前用户有多少条未读这个数字，来决定打开哪个联系人的聊天页进行查看。</p><p><strong>上面通过未读提醒来查看消息的环节中涉及了两个概念：一个是我有多少条未读消息，另一个是我和某个联系人有多少条未读消息。</strong></p><p>因此，我们在消息未读数的实现上，一般需要针对用户维度有一个总未读数的计数，针对某一个具体用户需要有一个会话维度的会话未读的计数。</p><p>那么，这两个消息未读数变更的场景是下面这样的：</p><ol>\n<li>张三给李四发送一条消息，IM服务端接收到这条消息后，给李四的总未读数增加1，给李四和张三的会话未读也增加1；</li>\n<li>李四看到有一条未读消息后，打开App，查看和张三的聊天页，这时会执行未读变更，将李四和张三的会话未读减1，将李四的总未读也减1。</li>\n</ol><p>这个具体的未读数存储可以是在IM服务端（如QQ、微博），也可以是在接收方的本地端上存储（微信），一般来说，需要支持“消息的多终端漫游”的应用需要在IM服务端进行未读存储，不需要支持“消息的多终端漫游”可以选择本地存储即可。</p><p>对于在IM服务端存储消息未读数的分布式场景，如何保证这两个未读数的一致性也是一个比较有意思的事情，这个问题我会留到第6篇来和你详细讨论。</p><h2>小结</h2><p>上面我们从一条消息“产生、存储、接收”的整个生命周期出发，较为系统地从实现的角度上对消息系统的几个关键部分进行了讲述。可以简单地总结为下面几点。</p><ol>\n<li>\n<p>消息的发送方通过发送通道来把消息提交到IM服务端。</p>\n</li>\n<li>\n<p>IM服务端接收到发送的消息后，会进行消息的存储以便于后续历史消息的查看，消息的存储从实现上可以分为：消息内容存储、消息索引存储、最近联系人列表存储。</p>\n</li>\n<li>\n<p>IM服务端接收到发送的消息后，还会针对接收方进行未读数的变更，以提醒用户查看未读的消息，消息未读数的实现上一般分为：用户维度的总未读和会话维度的会话未读。</p>\n</li>\n<li>\n<p>IM服务端进行完消息存储和未读变更后，会通过接收通道把消息推送给接收方，接收通道一般是通过IM服务端和消息接收方之间维护的长连接来实现，还会使用第三方操作系统级别的辅助通道，来提升“自建的长连接不可用“时，实时触达的能力。</p>\n</li>\n</ol><p><strong>最后，留给你两个思考题。</strong></p><p>1.消息存储中，内容表和索引表如果需要分库处理，应该按什么字段来哈希？ 索引表可以和内容表合并成一个表吗？</p><p>2.能从索引表里获取到最近联系人所需要的信息，为什么还需要单独的联系人表呢？</p><p>你可以给我留言，我们一起讨论。感谢你的收听，我们下期再见。</p>","neighbors":{"left":{"article_title":"01 | 架构与特性：一个完整的IM系统是怎样的？","id":127872},"right":{"article_title":"03 | 轮询与长连接：如何解决消息的实时到达问题？","id":128942}},"comments":[{"had_liked":false,"id":129457,"user_name":"王棕生","can_delete":false,"product_type":"c1","uid":1337944,"ip_address":"","ucode":"901BD0447A871E","user_header":"https://static001.geekbang.org/account/avatar/00/14/6a/58/f2c6d65b.jpg","comment_is_top":false,"comment_ctime":1567132202,"is_pvip":false,"replies":[{"id":"48347","content":"👍","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567178017,"ip_address":"","comment_id":129457,"utype":1}],"discussion_count":5,"race_medal":0,"score":"435358829098","product_id":100034901,"comment_content":"1. 消息存储中，内容表和索引表如果需要分库处理，应该按什么字段来哈希？ 索引表可以和内容表合并成一个表吗？<br>答： 内容表应该按主键消息ID来哈希做分库分表处理，这样便于定位某一条具体的消息；索引表应该按索引的用户UID来哈希做分库分表处理，这样可以使得当前用户的所有联系人都落在一张表上，减少遍历所有表的麻烦。 <br>        索引表可以与内容表合成一张表，好处是显而易见的，能减少拉取历史消息时的数据库IO，不好的地方就是消息内容冗余存储，浪费了空间。<br><br>2. 能从索引表里获取到最近联系人所需要的信息，为什么还需要单独的联系人表呢？<br>答： 如果从索引表中获取一个用户的所有联系人信息（包括最后一条聊天内容和时间）的话，SQL语句中会有分组后取top 1的操作，性能不理想； 另外当前用户与单个联系人之间的未读数需要维护，用联系人表的一个字段来存储，比用索引表方便许多。<br><br>","like_count":102,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465480,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567178017,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1237556,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e2/34/0c2c1200.jpg","nickname":"L","note":"","ucode":"0BDC32D02DB267","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":409717,"discussion_content":"索引表 直接使用用户id  做hash分N个区 是不是也可以呢。（分区省去不少工作量，并且允许备用库直接进行单表统计）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635494735,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1237556,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e2/34/0c2c1200.jpg","nickname":"L","note":"","ucode":"0BDC32D02DB267","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":409716,"discussion_content":"内容表按id分表，也会存在一个用户的多条消息从多个内容表拉取，麻烦。建月/周表会更舒服吧，一次只拉取某个会话在某月/周内的数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635494345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1667714,"avatar":"https://static001.geekbang.org/account/avatar/00/19/72/82/24fb9d18.jpg","nickname":"慕然","note":"","ucode":"8622102560A80F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":314588,"discussion_content":"没太搞懂，为何按时间分库就不行？既然历史消息存储只需要存几天便可，按时间分的话删数据更容易吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603174891,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1063062,"avatar":"https://static001.geekbang.org/account/avatar/00/10/38/96/afcbac60.jpg","nickname":"sk","note":"","ucode":"9FC8A04F1E33DB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":13563,"discussion_content":"这个分表方案，没有考虑消息量增长的问题吧。\n\n消息id 里面有时间，内容库，按时间分。\n\n索引表应该也是按时间分的吧。至于你们怎么实现的，还请释疑。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568686092,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129378,"user_name":"Julien","can_delete":false,"product_type":"c1","uid":1204568,"ip_address":"","ucode":"2A3F0CF46B4034","user_header":"https://static001.geekbang.org/account/avatar/00/12/61/58/7b078879.jpg","comment_is_top":false,"comment_ctime":1567119953,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"160480909905","product_id":100034901,"comment_content":"每节课的思考题可以在下一节课开始之前揭晓吗？谢谢。","like_count":37},{"had_liked":false,"id":157056,"user_name":"hlai","can_delete":false,"product_type":"c1","uid":1255289,"ip_address":"","ucode":"063402FD9A8E7B","user_header":"https://static001.geekbang.org/account/avatar/00/13/27/79/9cf3078f.jpg","comment_is_top":false,"comment_ctime":1575020206,"is_pvip":false,"replies":[{"id":"60940","content":"这里说一下：消息的收发是可以通过同一个长连通道来实现的，对于普通的聊天场景我甚至更推荐这种架构。对于消息下行扇出压力较大的场景（比如：直播、大型聊天室），考虑到下行通道的压力较大，稳定性方面保障会差一些。这种情况可以将上行独立拆分出来，保证用户发消息不会受到消息下推压力大的影响。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1575626575,"ip_address":"","comment_id":157056,"utype":1}],"discussion_count":1,"race_medal":0,"score":"65999529646","product_id":100034901,"comment_content":"最后张图，客户端发消息到服务是通过API， 请问为什么不可以长连接么发过去呢？","like_count":16,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476316,"discussion_content":"这里说一下：消息的收发是可以通过同一个长连通道来实现的，对于普通的聊天场景我甚至更推荐这种架构。对于消息下行扇出压力较大的场景（比如：直播、大型聊天室），考虑到下行通道的压力较大，稳定性方面保障会差一些。这种情况可以将上行独立拆分出来，保证用户发消息不会受到消息下推压力大的影响。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575626575,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131670,"user_name":"hgf","can_delete":false,"product_type":"c1","uid":1085297,"ip_address":"","ucode":"A9649ECFDBD9E8","user_header":"https://static001.geekbang.org/account/avatar/00/10/8f/71/29fb7bc2.jpg","comment_is_top":false,"comment_ctime":1567842181,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"57402417029","product_id":100034901,"comment_content":"可能行为：<br>1. 发送消息<br>2. 查看（历史）消息<br>3. 联系人列表最新一条消息<br>4. 未读消息数<br><br>内容表应该按照消息ID索引来hash，原因：使得数据分布均匀，相对使用产生时间维度做hash更能均衡系统的查询压力，很少有人查询到几个月前的数据，绝大部部分人查看历史，都会查看最近1～3天内的。<br><br><br>消息索引表按照索引用户ID来hash，原因：将索引用户相关的消息记录hash到相同的表，处理比较方便，避免跨表查询。<br><br><br>为什么不要将消息内容表和消息索引表合并？<br>会造成消息存储冗余，特别是群聊的时候。<br><br>为什么消息索引表需要同时记录发送方-&gt; 接收方；接收方-&gt; 发送方的索引？因为在分库分表的情况下，可能依据索引用户ID进行hash，如果仅记录一条记录，例如，仅记录了发送方-&gt; 接收方索引，那么所有发送法相同的索引会hash到同样的表，那么接受方在查询会话记录时，需要从多个库表中查询，反之，也是类似情况。<br><br>为什么需要单独的联系人表？<br>联系人列表中，仅仅需要最新一次的消息，如果从消息索引表中查询所有联系人的最新一次的消息，那么需要执行group by，order by 等操作，因为在消息索引表的记录数是远大于联系人表的，查询效率上差距明显，存储端的压力也较大","like_count":13,"discussions":[{"author":{"id":1050005,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqZjLcrj0O1D0EnDmbvROsYjic6cqiciabYMGUzYL3O90egkmgvAVT6WqBUKodCgyAy0hSuibxiaibRI2Ew/132","nickname":"风尘","note":"","ucode":"C6DC76ABFC282B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":17980,"discussion_content":"同时建立发送方->接收方，接收方->发送方双向的索引，主要还是为了各自的消息修改处理吧。比如说消息删除这样的动作，分开建立索引可以避免互相影响。\n\n如果没有消息修改这样的动作，合并成一个索引也是可行的，在两个用户之间建立一个唯一的索引ID 即可。一般在查消息记录的时候，用到索引表，直接用索引ID查询消息就可以，很少会同时查询一个用户，不同索引的消息。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1568993136,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130539,"user_name":"小祺","can_delete":false,"product_type":"c1","uid":1193548,"ip_address":"","ucode":"2819BCA9E71C9F","user_header":"https://static001.geekbang.org/account/avatar/00/12/36/4c/46c43cce.jpg","comment_is_top":false,"comment_ctime":1567480444,"is_pvip":false,"replies":[{"id":"48945","content":"处理删除和合并上没问题哈，需要考虑一下分库分表场景下，收发双方查询历史消息应该怎么查呢？","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567521111,"ip_address":"","comment_id":130539,"utype":1}],"discussion_count":6,"race_medal":0,"score":"18747349628","product_id":100034901,"comment_content":"消息表和索引表合并后表结构：<br>发消息用户ID ，收消息用户ID,  消息状态,  消息内容，消息类型，消息产生时间<br>其中消息状态 0: 正常  1:发消息用户已删除   2: 收消息用户已删除  <br>如果两个用户都删除消息，那这条记录就被delete掉。<br>既可以满足合并消息，又可以满足单个用户删除消息，请问这样设计是否可行？","like_count":4,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466004,"discussion_content":"处理删除和合并上没问题哈，需要考虑一下分库分表场景下，收发双方查询历史消息应该怎么查呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567521111,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1568448,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJWZyym9hkz3ic6xGo84ZibObUofUSfve9CdhbXq21DFoVyMWaUaq4vQwlpgZCOE4QUCzjKKO6bB88g/132","nickname":"Geek001","note":"","ucode":"1C4D9FF4294AFB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301526,"discussion_content":"可以增加一个会话ID，每两个用户都是有一个唯一会话ID；根据这个ID分表，还算均匀；有点像群ID；","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598544453,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1817409,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/bb/41/2bcfff91.jpg","nickname":"xxs","note":"","ucode":"C306FFA609C1F1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":161381,"discussion_content":"是不是，分库的时候只能根据一个key来哈希，如果选择使用发消息用户id来分库，那么查收消息用户id的时候，就会跨多个库，效率低","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580895149,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1057378,"avatar":"https://static001.geekbang.org/account/avatar/00/10/22/62/bcfa528f.jpg","nickname":"Sin0","note":"","ucode":"C05F2F2CF103E1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45971,"discussion_content":"分库分表 和 索引表是插入一条还是两条记录没关系？难道两条记录更容易索引？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573104890,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1087256,"avatar":"https://static001.geekbang.org/account/avatar/00/10/97/18/a5218104.jpg","nickname":"🐾","note":"","ucode":"D0AD0260351C31","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7926,"discussion_content":"合并表后，如果是群聊消息，消息接收方可能是多个用户，对于这种情况，如果其中一接收方删除消息，这个删除状态的标识、群聊历史消息的读取，都会变得复杂。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567731928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1057378,"avatar":"https://static001.geekbang.org/account/avatar/00/10/22/62/bcfa528f.jpg","nickname":"Sin0","note":"","ucode":"C05F2F2CF103E1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1087256,"avatar":"https://static001.geekbang.org/account/avatar/00/10/97/18/a5218104.jpg","nickname":"🐾","note":"","ucode":"D0AD0260351C31","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45972,"discussion_content":"群聊，这样就扩散了，不是一个维度的问题吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573104959,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":7926,"ip_address":""},"score":45972,"extra":""}]}]},{"had_liked":false,"id":163055,"user_name":"关汉聪","can_delete":false,"product_type":"c1","uid":1645439,"ip_address":"","ucode":"99211B1B615AA0","user_header":"https://static001.geekbang.org/account/avatar/00/19/1b/7f/9698e2bd.jpg","comment_is_top":false,"comment_ctime":1576649144,"is_pvip":false,"replies":[{"id":"63283","content":"1. 缓存在这里的作用主要是快速响应用户的写入请求，规避同步写db的重操作。缓存服务器是否需要采取主从集群可以根据实际访问量来评估，一般写完主后即可返回，由主负责同步消息到从。<br>2. 由于消息id和产生时间在写入缓存前就已经生成好，失败队列重试导致的顺序错乱不影响最终消息到达客户端后的重排序。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1577364047,"ip_address":"","comment_id":163055,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14461551032","product_id":100034901,"comment_content":"老师，您的一个回复中写到：“一般会先写缓存层，缓存层都成功的情况下，如果写有索引失败的情况可以先把失败的索引先写入到一个“失败队列”，由其他线程轮询尝试来写入。一般情况下，缓存层可以抗住db重试期间的数据可用性。”<br>想问下，缓存一般都是缓解读压力用的，这里是为了缓解写压力，那么：<br>1. 缓存服务器也是要主从或者集群吗，这样每次写入都保证主从缓存都写入后，在写入DB之前，返回消息发送方，成功的ACK，对吗？<br>2. 如果缓存成功，索引写入DB失败，在“失败队列”被轮询的过程中，消息发送方接下来的每一条消息，为了保证消息的顺序，是不是都要等待之前失败的消息写入DB后，接下来才能发送给消息接收方？<br>谢谢老师。","like_count":3,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478230,"discussion_content":"1. 缓存在这里的作用主要是快速响应用户的写入请求，规避同步写db的重操作。缓存服务器是否需要采取主从集群可以根据实际访问量来评估，一般写完主后即可返回，由主负责同步消息到从。\n2. 由于消息id和产生时间在写入缓存前就已经生成好，失败队列重试导致的顺序错乱不影响最终消息到达客户端后的重排序。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577364047,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1645439,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1b/7f/9698e2bd.jpg","nickname":"关汉聪","note":"","ucode":"99211B1B615AA0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":96457,"discussion_content":"老师能帮忙回答下吗？谢谢啦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577066086,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147071,"user_name":"Dxn","can_delete":false,"product_type":"c1","uid":1642679,"ip_address":"","ucode":"F860EF0883AAC0","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKOiapmSZbkPzGQeUWicARkgT8h3axCgSHIMp0ushSibheCj1eGiaGuC45NVxqvt9xCz1uwLD9rTAtQQg/132","comment_is_top":false,"comment_ctime":1572786976,"is_pvip":false,"replies":[{"id":"57196","content":"主要是考虑各自索引维护时的独立性：比如一方删除了消息不影响另一方查看类似的需求。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1573034832,"ip_address":"","comment_id":147071,"utype":1}],"discussion_count":3,"race_medal":0,"score":"14457688864","product_id":100034901,"comment_content":"索引表为啥要插入两条记录？插入一条也是一样的啊","like_count":3,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473129,"discussion_content":"主要是考虑各自索引维护时的独立性：比如一方删除了消息不影响另一方查看类似的需求。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573034832,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1313551,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0b/0f/8a524cab.jpg","nickname":"漫步跑小鸡","note":"","ucode":"061DD6C4E2E962","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":260202,"discussion_content":"还有利于后期的分库分表，如果不是两条，这个表结构应该是send_uid,rec_uid,...,查询的消息列表需要union","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1588854393,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1642679,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKOiapmSZbkPzGQeUWicARkgT8h3axCgSHIMp0ushSibheCj1eGiaGuC45NVxqvt9xCz1uwLD9rTAtQQg/132","nickname":"Dxn","note":"","ucode":"F860EF0883AAC0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45405,"discussion_content":"👌🏻谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573034879,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133104,"user_name":"666","can_delete":false,"product_type":"c1","uid":1089792,"ip_address":"","ucode":"E16B1C52DBB550","user_header":"https://static001.geekbang.org/account/avatar/00/10/a1/00/68ffaa02.jpg","comment_is_top":false,"comment_ctime":1568361530,"is_pvip":true,"replies":[{"id":"51293","content":"点赞、评论这些目前采用的拉取模式，用户打开具体的赞箱和评论箱时才从服务端获取；私信是支持在线推送的，不过为了减少对大V的骚扰，对于未关注人私信没有系统push。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1568623986,"ip_address":"","comment_id":133104,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14453263418","product_id":100034901,"comment_content":"想了解一下像微博这类消息系统如果解决大V用户的消息收发的？比如用户给大v点赞、评论或者是私信","like_count":3,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467255,"discussion_content":"点赞、评论这些目前采用的拉取模式，用户打开具体的赞箱和评论箱时才从服务端获取；私信是支持在线推送的，不过为了减少对大V的骚扰，对于未关注人私信没有系统push。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568623986,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129638,"user_name":"Alber","can_delete":false,"product_type":"c1","uid":1641428,"ip_address":"","ucode":"9EB13A1511B079","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/QD9GIbqK8mx2zu6GbHQQEemJNhudlylOeQcbom2W909zCXHW33xBhEiaHrqoqJeDX4kVjvX32AmjlMpqyxJWpkg/132","comment_is_top":false,"comment_ctime":1567178160,"is_pvip":false,"replies":[{"id":"48445","content":"这个需要看具体的业务场景吧，比如考虑访问模型，数据量大小，读写的比例等等。在我们自己的场景里mysql和hbase，pika都有在使用。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567323645,"ip_address":"","comment_id":129638,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14452080048","product_id":100034901,"comment_content":"消息存储有什么推荐的数据库吗","like_count":3,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465578,"discussion_content":"这个需要看具体的业务场景吧，比如考虑访问模型，数据量大小，读写的比例等等。在我们自己的场景里mysql和hbase，pika都有在使用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567323645,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129496,"user_name":"Colin","can_delete":false,"product_type":"c1","uid":1133540,"ip_address":"","ucode":"C649DFDA62971E","user_header":"https://static001.geekbang.org/account/avatar/00/11/4b/e4/bfe26359.jpg","comment_is_top":false,"comment_ctime":1567140332,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"14452042220","product_id":100034901,"comment_content":"请教各位评论区的大神们：消息未读数更新时机大家都是怎么设计的？比如说：发一条消息，未读消息+1这个操作大家都是如何更新的？如果是在数据库更新，再同步到客户端，可能会出现消息到达了，未读数还没更新的现象，如果是在客户端+1，再保存到数据库，别人写个脚本就能把数据给改乱了，不安全。应该如何设计比较合理？","like_count":3,"discussions":[{"author":{"id":2017364,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/c8/54/32e5e15d.jpg","nickname":"容","note":"","ucode":"A8AF5A898060A4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310521,"discussion_content":"聊天消息未读 - 我们的方案里理解为这只是一个客户端侧概念；\n广播的未读数用api的方式同步。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601887999,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1237556,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e2/34/0c2c1200.jpg","nickname":"L","note":"","ucode":"0BDC32D02DB267","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8739,"discussion_content":"先投递，内存中维护消息的读取情况，数据异步入库，如何？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568041492,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1206833,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6a/31/83e2fe48.jpg","nickname":"HOTPOOR-@xialiwei","note":"","ucode":"E51B83A875B6B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8075,"discussion_content":"用flag来对应设备id，历史消息带mid，可以根据设备来做。想支持几个就给几个分类。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567772918,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1642532,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/24/62138188.jpg","nickname":"Angel Beats","note":"","ucode":"2A4D41D31345E3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6908,"discussion_content":"未读数这种东西丢了也无所谓的，所以简单实现的话可以使用缓存来保存，然后异步存储到数据库。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567170712,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131715,"user_name":"小袁","can_delete":false,"product_type":"c1","uid":1646622,"ip_address":"","ucode":"F5A45F009175FA","user_header":"https://static001.geekbang.org/account/avatar/00/19/20/1e/23e6109f.jpg","comment_is_top":false,"comment_ctime":1567861126,"is_pvip":false,"replies":[{"id":"50496","content":"按时间段来查询没问题，但是消息写入的时候就会都落到一个表里，写入压力会有问题，但内容表实现上确实可以在hash完后按时间进行分表。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1568035305,"ip_address":"","comment_id":131715,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10157795718","product_id":100034901,"comment_content":"索引表按照聊天对像的id来哈希，这样和某个对象的聊天记录可以落在一个库中，没问题。<br><br>内容表我认为可以按时间分库，实际查询时一般都是从最近的聊天记录开始往前翻，或者看某一天的记录，这样按连续时间段来查询，不会只单独看一条记录吧。<br><br>如果按消息id分库那岂不是翻某天的聊天记录可能要查好几个库了吗？","like_count":2,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466589,"discussion_content":"按时间段来查询没问题，但是消息写入的时候就会都落到一个表里，写入压力会有问题，但内容表实现上确实可以在hash完后按时间进行分表。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568035305,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129414,"user_name":"挨踢菜鸟","can_delete":false,"product_type":"c1","uid":1195409,"ip_address":"","ucode":"CC208C8749B228","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJZuwMDaoJviaf3lZ5BOgAvTzLzmbGrMrCZ22krLSRyxpKUrVicU9pSnWsyuSHjksyNldBpXrRzUqeA/132","comment_is_top":false,"comment_ctime":1567126998,"is_pvip":false,"replies":[{"id":"48344","content":"没太理解到您的意思哈，websocket网关只有是无状态的多实例部署没啥问题的呀；实例重启断开连接是肯定的，需要解决的是断开后客户端需要有重连机制以及如果尽量减少实例重启的概率。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567177349,"ip_address":"","comment_id":129414,"utype":1}],"discussion_count":9,"race_medal":0,"score":"10157061590","product_id":100034901,"comment_content":"老师，请问websocket如何多实例部署，如何解决实例重启造成连接断开的问题","like_count":2,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465454,"discussion_content":"没太理解到您的意思哈，websocket网关只有是无状态的多实例部署没啥问题的呀；实例重启断开连接是肯定的，需要解决的是断开后客户端需要有重连机制以及如果尽量减少实例重启的概率。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567177349,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1642796,"avatar":"https://static001.geekbang.org/account/avatar/00/19/11/2c/a0de4b8a.jpg","nickname":"爱学习的盖茨比","note":"","ucode":"1C1AFBDDBC0957","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7082,"discussion_content":"应该是老师第一节中提到的，接入实例中维护和客户端的session来实现，估计老师之后还会详细讲解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567344433,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1195409,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJZuwMDaoJviaf3lZ5BOgAvTzLzmbGrMrCZ22krLSRyxpKUrVicU9pSnWsyuSHjksyNldBpXrRzUqeA/132","nickname":"挨踢菜鸟","note":"","ucode":"CC208C8749B228","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6970,"discussion_content":"老师，是这样，如果websocket 服务多实例部署，当客户端连接到某个实例上，然后给客户端发送消息的时候，如何判断这个客户端连在了实例上。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567233858,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1650785,"avatar":"https://static001.geekbang.org/account/avatar/00/19/30/61/50e24e09.jpg","nickname":"煜","note":"","ucode":"3C5A9A55A65FC9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1195409,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJZuwMDaoJviaf3lZ5BOgAvTzLzmbGrMrCZ22krLSRyxpKUrVicU9pSnWsyuSHjksyNldBpXrRzUqeA/132","nickname":"挨踢菜鸟","note":"","ucode":"CC208C8749B228","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7520,"discussion_content":"一般来说，客户端和服务端之间会维持一条tcp连接通道。你可以通过服务端每几秒发送一个包到客户端，发送的出去说明客户端和服务端的连接没有断，发送失败说明客户端已经断了，就会触发重连机制进行尝试重连","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567527862,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":6970,"ip_address":""},"score":7520,"extra":""},{"author":{"id":2037540,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/qgbQytfwErGXuIZaRzA28iagmfnZDHKMYIGwZ7sJ6NAicVicDewic8S266eA9L4wO2q1y4XwcMGE6urK9L6vuQBpMA/132","nickname":"Geek_6e6dba","note":"","ucode":"E7B1A5DC90760D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1650785,"avatar":"https://static001.geekbang.org/account/avatar/00/19/30/61/50e24e09.jpg","nickname":"煜","note":"","ucode":"3C5A9A55A65FC9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":283515,"discussion_content":"老师后面提到，心跳包是客户端发送的。服务端看通道的空闲时长。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592288185,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":7520,"ip_address":""},"score":283515,"extra":""}]},{"author":{"id":1317608,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoUibQTZvtGHCwG3ia6aIK9oOsbOTwsEUjqzOgeFm6Mwiaf4d5VzK4l9dI43mtqllxdLyfictGgScDoRg/132","nickname":"糊涂难得","note":"","ucode":"98DBCD29A9F1D8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6907,"discussion_content":"用心跳包解决","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567170434,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1195409,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJZuwMDaoJviaf3lZ5BOgAvTzLzmbGrMrCZ22krLSRyxpKUrVicU9pSnWsyuSHjksyNldBpXrRzUqeA/132","nickname":"挨踢菜鸟","note":"","ucode":"CC208C8749B228","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1317608,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoUibQTZvtGHCwG3ia6aIK9oOsbOTwsEUjqzOgeFm6Mwiaf4d5VzK4l9dI43mtqllxdLyfictGgScDoRg/132","nickname":"糊涂难得","note":"","ucode":"98DBCD29A9F1D8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6919,"discussion_content":"心跳包是什么意思，能具体说说吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567174007,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":6907,"ip_address":""},"score":6919,"extra":""},{"author":{"id":1206833,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6a/31/83e2fe48.jpg","nickname":"HOTPOOR-@xialiwei","note":"","ucode":"E51B83A875B6B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1195409,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJZuwMDaoJviaf3lZ5BOgAvTzLzmbGrMrCZ22krLSRyxpKUrVicU9pSnWsyuSHjksyNldBpXrRzUqeA/132","nickname":"挨踢菜鸟","note":"","ucode":"CC208C8749B228","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8079,"discussion_content":"self.ping() self.pong()你搜下 应该能找到一些例子在线上。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567773063,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":6919,"ip_address":""},"score":8079,"extra":""},{"author":{"id":1108958,"avatar":"https://static001.geekbang.org/account/avatar/00/10/eb/de/b0cfc4a6.jpg","nickname":"干脆面君","note":"","ucode":"2E220B400D4F96","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1195409,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJZuwMDaoJviaf3lZ5BOgAvTzLzmbGrMrCZ22krLSRyxpKUrVicU9pSnWsyuSHjksyNldBpXrRzUqeA/132","nickname":"挨踢菜鸟","note":"","ucode":"CC208C8749B228","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":9743,"discussion_content":"心跳包就是：你跟你媳妇处对象，为了保持感情，为了保持不分手，你俩约定周期时间买个小礼物或者其它惊喜送给她，她收到礼物，然后给你个飞吻或其他回执，你确认了，她没跑路。可以继续谈恋爱；这个飞吻或其他回执就叫心跳包；你送礼物的时候难道不心跳么？你的礼物不是用包裹包着的么？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1568211290,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":6919,"ip_address":""},"score":9743,"extra":""}]}]},{"had_liked":false,"id":129389,"user_name":"小可","can_delete":false,"product_type":"c1","uid":1006735,"ip_address":"","ucode":"8834AF621FA67D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/8f/551b5624.jpg","comment_is_top":false,"comment_ctime":1567124803,"is_pvip":false,"replies":[{"id":"48332","content":"这里需要考虑一个问题哈：我们在查询两个人之间的历史消息的时候是用户维度的查询还是消息维度的查询？如果按消息id哈希，查询两个人之间的历史消息在只有uid的情况下该怎么查呢？","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567175625,"ip_address":"","comment_id":129389,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10157059395","product_id":100034901,"comment_content":"1.由于索性表与内容表有关联，分库时两张表都应该按内容表id哈希，如果按用户id哈希，如果记录与内容不在一个库，获取消息时还要夸库查询，增加了系统复杂度，也会影响性能；<br>不能合并，一般IM系统都有群发消息功能，如果内容表合并到索引表，那内容数据冗余就太多了，从而占用存储空间<br><br>2.索引表与联系人表两个的功能设计不同<br>索引表主要存储消息历史，联系人存储用户关系，如果两个表合并，那么获取联系人时要对所有索引表消息进行聚合才能获取到，性能大大降低；另外如果进行删除联系人操作，必须要将与该联系人的所有消息删除才可以，而联系人表独立的话只许将联系人删除，历史消息可根据需求是否就行删除，当然删除历史消息就可以异步执行了","like_count":2,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465434,"discussion_content":"这里需要考虑一个问题哈：我们在查询两个人之间的历史消息的时候是用户维度的查询还是消息维度的查询？如果按消息id哈希，查询两个人之间的历史消息在只有uid的情况下该怎么查呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567175625,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1018182,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/89/46/0b7828a1.jpg","nickname":"小胡子","note":"","ucode":"79FEC6400D25DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6829,"discussion_content":"索引表按照消息分那怎么查询用户的历史消息，这可是硬性需求","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567133587,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1006735,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5c/8f/551b5624.jpg","nickname":"小可","note":"","ucode":"8834AF621FA67D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1018182,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/89/46/0b7828a1.jpg","nickname":"小胡子","note":"","ucode":"79FEC6400D25DA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6954,"discussion_content":"是的，我这个有问题，当时只考虑避免消息分库查询，忘记用户查询这个纬度了😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567212658,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":6829,"ip_address":""},"score":6954,"extra":""}]}]},{"had_liked":false,"id":235532,"user_name":"阿基米德","can_delete":false,"product_type":"c1","uid":1304804,"ip_address":"","ucode":"065D6529C12B81","user_header":"https://static001.geekbang.org/account/avatar/00/13/e8/e4/c9dd6058.jpg","comment_is_top":false,"comment_ctime":1595075749,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5890043045","product_id":100034901,"comment_content":"根据咱们的分库分表方式，用户在获取历史消息的时候接口如何设计呢，因为用户展示的历史既有收件箱的消息也有发件箱的消息，这两个消息要按照消息id顺序展示，这个合并的过程是客户端做还是服务端坐呢","like_count":1},{"had_liked":false,"id":143429,"user_name":"大智","can_delete":false,"product_type":"c1","uid":1046617,"ip_address":"","ucode":"721C462FA9AE1D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/59/58a575a4.jpg","comment_is_top":false,"comment_ctime":1571708000,"is_pvip":false,"replies":[{"id":"55747","content":"一般会先写缓存层，缓存层都成功的情况下，如果写有索引失败的情况可以先把失败的索引先写入到一个“失败队列”，由其他线程轮询尝试来写入。一般情况下，缓存层可以抗住db重试期间的数据可用性。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1571986521,"ip_address":"","comment_id":143429,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5866675296","product_id":100034901,"comment_content":"感谢老师分享。如分享中所说一条点对点消息的存储包括消息内容记录插入，双方各一条索引记录的插入，和最近联系人表的更新。如果消息内容插入其成功，其中一方索引记录插入成功，但另外一方索引记录插入失败的异常是如何处理的？多谢","like_count":1,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471532,"discussion_content":"一般会先写缓存层，缓存层都成功的情况下，如果写有索引失败的情况可以先把失败的索引先写入到一个“失败队列”，由其他线程轮询尝试来写入。一般情况下，缓存层可以抗住db重试期间的数据可用性。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571986521,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130286,"user_name":"asdf100","can_delete":false,"product_type":"c1","uid":1043738,"ip_address":"","ucode":"39D8D71453E575","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/1a/ce7f7d54.jpg","comment_is_top":false,"comment_ctime":1567418849,"is_pvip":false,"replies":[{"id":"48628","content":"是个好问题，内容表的获取在拿到消息id后可以采取并发获取的方式哈，但是一页一般消息id是有限的（比如20），但分库分表的表数量会很多，上千都很常见。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567425652,"ip_address":"","comment_id":130286,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5862386145","product_id":100034901,"comment_content":"对于内容表根据主键字段分库分表的话，如果用户查看最近一段的消息的时候，不是从多个地方分别获取数据再聚合了么，这样也有弊端的吧？","like_count":1,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465890,"discussion_content":"是个好问题，内容表的获取在拿到消息id后可以采取并发获取的方式哈，但是一页一般消息id是有限的（比如20），但分库分表的表数量会很多，上千都很常见。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567425652,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130210,"user_name":"iMARS","can_delete":false,"product_type":"c1","uid":1113733,"ip_address":"","ucode":"10C5C31908AA09","user_header":"https://static001.geekbang.org/account/avatar/00/10/fe/85/9ab352a7.jpg","comment_is_top":false,"comment_ctime":1567403847,"is_pvip":true,"replies":[{"id":"48624","content":"考虑下消息索引表的访问模式哈，对于索引表最终要求的是尽量能提升获取的效率，所以如果需要有索引表，应该是uid维度的查询会更高效一些。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567425407,"ip_address":"","comment_id":130210,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5862371143","product_id":100034901,"comment_content":"按照消息ID取模进行负载分摊，如果按照用户ID会出现分布不均的问题。其次，不建议把消息内容和索引表合并。对于消息内容存储的需求和关系型数据库不一定相同，分离后，可考虑使用非关系型数据库管理，当然会有一些运维和数据关联查询上的需求。","like_count":1,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465857,"discussion_content":"考虑下消息索引表的访问模式哈，对于索引表最终要求的是尽量能提升获取的效率，所以如果需要有索引表，应该是uid维度的查询会更高效一些。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567425407,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130079,"user_name":"Leon📷","can_delete":false,"product_type":"c1","uid":1219496,"ip_address":"","ucode":"B9BBD1EFAAE5A2","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/a8/6a391c66.jpg","comment_is_top":false,"comment_ctime":1567384339,"is_pvip":false,"replies":[{"id":"48600","content":"一般来说群聊消息的存储上主要是考虑存储冗余的问题，一个群的消息只需要存一份即可，每条消息id通过自增序号或者“时间维度相关”的发号器来生成，通过这个id排序即可。群聊相关的话题后续课程还会细讲哈","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567423420,"ip_address":"","comment_id":130079,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5862351635","product_id":100034901,"comment_content":"之间面试被问到怎么设计存储群聊的聊天记录，保证聊天记录的有序性，没答出来，老师帮忙解答下","like_count":1,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465791,"discussion_content":"一般来说群聊消息的存储上主要是考虑存储冗余的问题，一个群的消息只需要存一份即可，每条消息id通过自增序号或者“时间维度相关”的发号器来生成，通过这个id排序即可。群聊相关的话题后续课程还会细讲哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567423420,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129377,"user_name":"小小小丶盘子","can_delete":false,"product_type":"c1","uid":1308056,"ip_address":"","ucode":"FCD4520F1EF872","user_header":"https://static001.geekbang.org/account/avatar/00/13/f5/98/45374bb9.jpg","comment_is_top":false,"comment_ctime":1567119015,"is_pvip":true,"replies":[{"id":"48328","content":"单表单记录也是可行的，只是需要考虑清楚具体的使用场景：比如会话的某一方删除消息该怎么处理？如果业务需要类似邮箱的发件箱和收件箱这种设计是否方便索引查询？","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567174434,"ip_address":"","comment_id":129377,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5862086311","product_id":100034901,"comment_content":"老师，我之前用两个用户id，根据某种规则生成一个唯一会话id，然后外加一个发送人id，这样索引表和内容表用一个表就可以，这么做是否可行？有什么优缺点？","like_count":1,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465427,"discussion_content":"单表单记录也是可行的，只是需要考虑清楚具体的使用场景：比如会话的某一方删除消息该怎么处理？如果业务需要类似邮箱的发件箱和收件箱这种设计是否方便索引查询？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567174434,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1376654,"avatar":"https://static001.geekbang.org/account/avatar/00/15/01/8e/48e7c474.jpg","nickname":"一路向北","note":"","ucode":"54D8F1687AE1ED","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7060,"discussion_content":"我当时也是觉得，索引表的“是发件箱还是收件箱”字段可以去除。当老师问出这个问题的时候，我明白了这个字段的作用。不过，我们可以有更好的方法去除这个字段，完成这个功能。就是，新增一个字段，字段值为1,2,3.分别表示仅发方可见、仅收方可见、收发双方都可见。此时，两个UID字段的组合表明了谁是发方谁是收方。解决数据冗余的问题","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1567329088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1308056,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f5/98/45374bb9.jpg","nickname":"小小小丶盘子","note":"","ucode":"FCD4520F1EF872","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7015,"discussion_content":"谢谢老师，明白了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567264934,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":356921,"user_name":"追风筝的人","can_delete":false,"product_type":"c1","uid":1488020,"ip_address":"陕西","ucode":"2993D60F94C396","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/94/2796de72.jpg","comment_is_top":false,"comment_ctime":1662705554,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1662705554","product_id":100034901,"comment_content":"1. 发送方 user ID，不能合并<br>2.分库分表 提高查询效率","like_count":0},{"had_liked":false,"id":320218,"user_name":"Geek_LeonSZ","can_delete":false,"product_type":"c1","uid":1904472,"ip_address":"","ucode":"1C748B3A09CD9B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/edMMg8wmu2RRIFVw2UgAytIx7Yjmx3z2sX1Apc3DfX423dIpyKO6Kg2y65bjPF2jRZVt16AbfYS74A6BAWDJGQ/132","comment_is_top":false,"comment_ctime":1636133878,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636133878","product_id":100034901,"comment_content":"麻烦问一个关于索引表的问题. 索引表: UID, 另一方UID, 收还是发, MsgID.<br>那如果张三跟李四发了多条信息: msg1, msg2<br>UID, 另一方UID, 收还是发, MsgID.<br>张三   李四            发             1<br>张三   李四            发             2<br><br>那这张表的primary key是什么? 就是一个Unique ID么?","like_count":0},{"had_liked":false,"id":320045,"user_name":"Geek_LeonSZ","can_delete":false,"product_type":"c1","uid":1904472,"ip_address":"","ucode":"1C748B3A09CD9B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/edMMg8wmu2RRIFVw2UgAytIx7Yjmx3z2sX1Apc3DfX423dIpyKO6Kg2y65bjPF2jRZVt16AbfYS74A6BAWDJGQ/132","comment_is_top":false,"comment_ctime":1636055650,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636055650","product_id":100034901,"comment_content":"有一个小的反馈: <br>在小结里的2和3之间, 当用户1发送给用户2的消息被存储到三个表之后, 服务端是怎么知道和完成把消息送到2上去的, 这个地方略过了, 没有讲. 是有一个message queue还是有一个service专门扫描这三个表之后再确定, 还是其他的什么过程? 是app server自己完成还是有另外的一个msg delivery系统完成等等. 不同load肯定非常不一样等等. 希望能稍微提一下. 谢谢!","like_count":0},{"had_liked":false,"id":320040,"user_name":"Geek_LeonSZ","can_delete":false,"product_type":"c1","uid":1904472,"ip_address":"","ucode":"1C748B3A09CD9B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/edMMg8wmu2RRIFVw2UgAytIx7Yjmx3z2sX1Apc3DfX423dIpyKO6Kg2y65bjPF2jRZVt16AbfYS74A6BAWDJGQ/132","comment_is_top":false,"comment_ctime":1636049733,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636049733","product_id":100034901,"comment_content":"麻烦问一下这个网关(Gateway), 是在架构范围里的API gateway还是更多算是电信层面上的telecommunication gateway? 如果是前者的话, 可以想象成在IM系统架构里的front end么? 如果是后者, 那在系统设计的时候, 一般不应该算作是IM系统的一部分? 或者两者都不是? 谢谢!","like_count":0},{"had_liked":false,"id":272740,"user_name":"浅语","can_delete":false,"product_type":"c1","uid":1786051,"ip_address":"","ucode":"987AD8C2A8BCFB","user_header":"https://static001.geekbang.org/account/avatar/00/1b/40/c3/3b740249.jpg","comment_is_top":false,"comment_ctime":1610258243,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610258243","product_id":100034901,"comment_content":"消息的未读数是怎么算出来的？？是计算各自维护的消息索引表吗，然后更新到联系人表？？","like_count":0},{"had_liked":false,"id":237287,"user_name":"poxiao1234","can_delete":false,"product_type":"c1","uid":1111821,"ip_address":"","ucode":"DBAA45E47DAA7A","user_header":"https://static001.geekbang.org/account/avatar/00/10/f7/0d/355a9658.jpg","comment_is_top":false,"comment_ctime":1595769407,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595769407","product_id":100034901,"comment_content":"另外一个点：IM服务器消息下发接收客户端，如果用户在线情况，<br>是直接推送消息体给接收方；还是只发送通知告知接收方有信息，再由接收方拉取消息？","like_count":0},{"had_liked":false,"id":237285,"user_name":"poxiao1234","can_delete":false,"product_type":"c1","uid":1111821,"ip_address":"","ucode":"DBAA45E47DAA7A","user_header":"https://static001.geekbang.org/account/avatar/00/10/f7/0d/355a9658.jpg","comment_is_top":false,"comment_ctime":1595769049,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1595769049","product_id":100034901,"comment_content":"老师，这里有一个点不是很明白：<br>为什么需要支持“消息的多终端漫游”的应用需要在 IM 服务端进行未读存储，不需要支持“消息的多终端漫游”可以选择本地存储即可<br>为啥不能都采用本地存储呢？","like_count":0,"discussions":[{"author":{"id":2648637,"avatar":"https://static001.geekbang.org/account/avatar/00/28/6a/3d/0529b877.jpg","nickname":"stonejianbu","note":"","ucode":"EDC0732496ECFB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555538,"discussion_content":"多端本地存储，数据一致性无法保证了。比如手机端读了，而电脑端显示未读，这种情况出现应该是不合理的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646968583,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233097,"user_name":"stevensafin","can_delete":false,"product_type":"c1","uid":1053553,"ip_address":"","ucode":"CC692A740C5FD5","user_header":"https://static001.geekbang.org/account/avatar/00/10/13/71/3762b089.jpg","comment_is_top":false,"comment_ctime":1594216368,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594216368","product_id":100034901,"comment_content":"咨询一个问题，老师所讲的存储整个是基于mysql进行的，是大家首先能够想到的，简单，但是众所周知，数据量大或者请求量大的情况下可能会成为系统瓶颈，因此一般使用nosql来存储，针对nosql的存储结构的设计和选型老师能讲一下吗","like_count":0},{"had_liked":false,"id":232624,"user_name":"teressa","can_delete":false,"product_type":"c1","uid":1666695,"ip_address":"","ucode":"9AA0C6D45CEC1E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLXQyKrqDG9ATu8ZYDT6iclkAQjcXicSbKEgV3t3c6qOmfO9Hu4vjqWZQyAWenqhVvY153fY4YQA1JQ/132","comment_is_top":false,"comment_ctime":1594051687,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1594051687","product_id":100034901,"comment_content":"如果不需要考虑收件箱和发件箱的使用场景。 仅仅考虑单个用户删除部分消息，这里双份索引和内容存在一张表里应该也没有问问题哈？ 表结构 发送方uid  ，接收方uid， 消息内容，消息状态位（a已删除，b已删除） ， 发送内容， 消息id（max（uid1，uid2）_min（uid1，uid2））拼接。 消息一方用户删除消息时，更新消息状态位，这种是否，根据 uid1，uid2，删除状态位建复合索引，这种是否有问题呢？","like_count":0},{"had_liked":false,"id":231868,"user_name":"慎独明强","can_delete":false,"product_type":"c1","uid":1965699,"ip_address":"","ucode":"DC2F7F2C0C8F60","user_header":"https://static001.geekbang.org/account/avatar/00/1d/fe/83/df562574.jpg","comment_is_top":false,"comment_ctime":1593792807,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593792807","product_id":100034901,"comment_content":"1. 消息存储中，内容表和索引表如果需要分库处理，应该按什么字段来哈希？ 索引表可以和内容表合并成一个表吗？2. 能从索引表里获取到最近联系人所需要的信息，为什么还需要单独的联系人表呢？                            学这个比较吃力,老师10多分钟的课程,实际听完和理解,做笔记差不多要一个小时.                                                     内容表来说,根据消息id来分库分表没得说, 索引表数据由收件箱和发件箱是解决本地删除消息列表的问题,采用分库的话,用用户id,这样查询的时候就可以在一个数据库查询.                     2)索引表有很多信息,但是最近联系人,只展示一条消息,那么会涉及到读取与排序的过程,性能不是很好.","like_count":0},{"had_liked":false,"id":214757,"user_name":"mickey","can_delete":false,"product_type":"c1","uid":1051663,"ip_address":"","ucode":"8B490C2DDE4010","user_header":"https://static001.geekbang.org/account/avatar/00/10/0c/0f/93d1c8eb.jpg","comment_is_top":false,"comment_ctime":1588814449,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588814449","product_id":100034901,"comment_content":"1. 消息存储中，内容表和索引表如果需要分库处理，应该按什么字段来哈希？ 索引表可以和内容表合并成一个表吗？<br>内容表分库处理按消息ID字段来哈希；<br>索引表应该拆成发件箱表和收件箱表，然后分库分别按照发件人ID和收件人ID字段哈希处理，这样发件人在发件箱表中查和收件人在收件箱中查都落在同一个表中。<br><br>索引表可以和内容表合并成一个表吗？<br>不能，合并了消息内容会有冗余。<br><br>2. 能从索引表里获取到最近联系人所需要的信息，为什么还需要单独的联系人表呢？<br>索引表表示的是联系人之间的互动操作，联系人表表示的是联系人之间的关联关系。","like_count":0},{"had_liked":false,"id":214754,"user_name":"mickey","can_delete":false,"product_type":"c1","uid":1051663,"ip_address":"","ucode":"8B490C2DDE4010","user_header":"https://static001.geekbang.org/account/avatar/00/10/0c/0f/93d1c8eb.jpg","comment_is_top":false,"comment_ctime":1588814071,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588814071","product_id":100034901,"comment_content":"请问老师，索引表为什么要存两条记录？发件人ID、收件人ID，消息ID，不就可以了吗？如果要存为什么不分为，发件箱表和收件箱表呢？","like_count":0},{"had_liked":false,"id":214749,"user_name":"mickey","can_delete":false,"product_type":"c1","uid":1051663,"ip_address":"","ucode":"8B490C2DDE4010","user_header":"https://static001.geekbang.org/account/avatar/00/10/0c/0f/93d1c8eb.jpg","comment_is_top":false,"comment_ctime":1588813750,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588813750","product_id":100034901,"comment_content":"微信的未读数存储应该也是 IM 服务端存储，因为微信也要做移动端和PC端漫游。","like_count":0},{"had_liked":false,"id":194357,"user_name":"隰有荷","can_delete":false,"product_type":"c1","uid":1357944,"ip_address":"","ucode":"2BE9A32AB28963","user_header":"https://static001.geekbang.org/account/avatar/00/14/b8/78/2828195b.jpg","comment_is_top":false,"comment_ctime":1585053967,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585053967","product_id":100034901,"comment_content":"李四看到张三发来的未读消息后，打开APP，不应该将当前会话的所有未读消息都清零吗？只减1不好吧","like_count":0},{"had_liked":false,"id":194047,"user_name":"隰有荷","can_delete":false,"product_type":"c1","uid":1357944,"ip_address":"","ucode":"2BE9A32AB28963","user_header":"https://static001.geekbang.org/account/avatar/00/14/b8/78/2828195b.jpg","comment_is_top":false,"comment_ctime":1585018835,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585018835","product_id":100034901,"comment_content":"老师，请问文中这句话<br>“互相独立的意思就是：假设发送方删除了某一条消息，接收方仍然可以获取到这条消息。”<br>如果发送方删除了消息，那么消息表中的这条消息就不存在了，那么接收方获取到的这条消息从哪里来的呢？<br>","like_count":0},{"had_liked":false,"id":190055,"user_name":"chjxbt","can_delete":false,"product_type":"c1","uid":1485031,"ip_address":"","ucode":"FDE1D416A7BFB8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK9TicPMurialE1rG8zxZtiaChTlRv2ZHmUBCcbe9Dk8puSPBLmWRJRVQm7eom160dzz6NujqxszSjPg/132","comment_is_top":false,"comment_ctime":1584599104,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584599104","product_id":100034901,"comment_content":"想问一下老师，对于即时消息来说，服务器内部还需要使用MQ中间间，来做消息中转吗？而类似系统通知，服务推送消息，这些不是即时消息，这种业务场景是如何架构的？","like_count":0},{"had_liked":false,"id":187798,"user_name":"kamida","can_delete":false,"product_type":"c1","uid":1904146,"ip_address":"","ucode":"16D7CA59870AC0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/jXbwicoDwia7ooDfwBTRyvNYQkefnVwF1CMicMS8FqKfuFAdvVZo2pqc4ic0R9kSdHTIxaE6YyqxwX8BdNGv5PqSIw/132","comment_is_top":false,"comment_ctime":1584244565,"is_pvip":false,"replies":[{"id":"72530","content":"看具体业务的需求，如果业务上不需要获取某一个用户所有接收维度的消息的话是没有问题的，按某一个uid sharding的好处在于既可以一条sql获取这个uid接收和发出的消息，也能比较方便的支持上面收件箱的需求。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1584279713,"ip_address":"","comment_id":187798,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584244565","product_id":100034901,"comment_content":"老师 我觉得索引表应该按索引的uid和另一个对话用户的uid 共同shard 因为我们的查询需求是查一个对话的历史记录 而不会是这个用户的所有历史记录 您觉得对吗","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487246,"discussion_content":"看具体业务的需求，如果业务上不需要获取某一个用户所有接收维度的消息的话是没有问题的，按某一个uid sharding的好处在于既可以一条sql获取这个uid接收和发出的消息，也能比较方便的支持上面收件箱的需求。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584279713,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185020,"user_name":"🐌🐌🐌","can_delete":false,"product_type":"c1","uid":1442513,"ip_address":"","ucode":"0A7943AEBFA296","user_header":"https://static001.geekbang.org/account/avatar/00/16/02/d1/36285394.jpg","comment_is_top":false,"comment_ctime":1583466359,"is_pvip":false,"replies":[{"id":"72295","content":"当自己维护的服务端长连已经断开时，一般是是通过第三方系统级推送来实现，比如ios上是通过APNs连接来更新app的角标未读的。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1584085973,"ip_address":"","comment_id":185020,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583466359","product_id":100034901,"comment_content":"QQ 或者微信app上面的消息总未读数 是如何实现的，这种情况下 APP与服务器端的长连接如何应用再后台运行的话 可能已经断了？ QQ应用图标上的这个总未读数是如何获取的呢？","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486218,"discussion_content":"当自己维护的服务端长连已经断开时，一般是是通过第三方系统级推送来实现，比如ios上是通过APNs连接来更新app的角标未读的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584085973,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178748,"user_name":"技术修行者","can_delete":false,"product_type":"c1","uid":1013147,"ip_address":"","ucode":"28CA41A1214D6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/9b/611e74ab.jpg","comment_is_top":false,"comment_ctime":1581816075,"is_pvip":true,"replies":[{"id":"72280","content":"用户维度和会话维度的消息索引是否可以利用一张表来实现？ 时间维度的引入的另一个问题是会让查询更加复杂（因为需要从用户维护和时间维度来同时进行查询），一个可行的简单办法是尽量让uid维度的索引表在设计时分库分表的粒度更小。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1584084102,"ip_address":"","comment_id":178748,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1581816075","product_id":100034901,"comment_content":"1. 消息存储中，内容表和索引表如果需要分库处理，应该按什么字段来哈希？ 索引表可以和内容表合并成一个表吗？<br>内容表可以按照消息ID进行哈希处理，索引表可以按照索引用户ID进行哈希处理。<br><br>2. 能从索引表里获取到最近联系人所需要的信息，为什么还需要单独的联系人表呢？<br>主要是从性能方面考虑，1. 如果从索引表找联系人信息，还需要做grouo by操作，2. 如果索引表数据比较大，某一个用户的所有消息索可能会存储到不同的分表中，这样获取联系人需要跨表查询，性能更差。<br><br>问题：对于索引表进行分表分库的依据怎么设计比较合理？<br>1. 用户维度（某个用户的所有聊天索引记录在一张表中）<br>2. 会话维度（某两个用户的聊天索引记录在一张表中）<br>3. 时间维度（某一时间段内用户的所有聊天索引记录在一张表中）","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483947,"discussion_content":"用户维度和会话维度的消息索引是否可以利用一张表来实现？ 时间维度的引入的另一个问题是会让查询更加复杂（因为需要从用户维护和时间维度来同时进行查询），一个可行的简单办法是尽量让uid维度的索引表在设计时分库分表的粒度更小。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584084102,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":171620,"user_name":"stevensafin","can_delete":false,"product_type":"c1","uid":1053553,"ip_address":"","ucode":"CC692A740C5FD5","user_header":"https://static001.geekbang.org/account/avatar/00/10/13/71/3762b089.jpg","comment_is_top":false,"comment_ctime":1578979331,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578979331","product_id":100034901,"comment_content":"数据存储mysql的话会有性能瓶颈吧？","like_count":0},{"had_liked":false,"id":160082,"user_name":"飞翔","can_delete":false,"product_type":"c1","uid":1068571,"ip_address":"","ucode":"65AF6AF292DAD6","user_header":"https://static001.geekbang.org/account/avatar/00/10/4e/1b/f4b786b9.jpg","comment_is_top":false,"comment_ctime":1575865539,"is_pvip":true,"replies":[{"id":"63281","content":"群组聊天的存储在文章有提到哈，一般采用读扩散方式。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1577363358,"ip_address":"","comment_id":160082,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1575865539","product_id":100034901,"comment_content":"老师 组聊天 应该怎么存储呀","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477251,"discussion_content":"群组聊天的存储在文章有提到哈，一般采用读扩散方式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577363358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148040,"user_name":"康斯坦丁","can_delete":false,"product_type":"c1","uid":1368096,"ip_address":"","ucode":"C130E800E8D5C9","user_header":"https://static001.geekbang.org/account/avatar/00/14/e0/20/003190c1.jpg","comment_is_top":false,"comment_ctime":1572932419,"is_pvip":false,"replies":[{"id":"57210","content":"👍","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1573036928,"ip_address":"","comment_id":148040,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572932419","product_id":100034901,"comment_content":"1. 消息存储中，内容表和索引表如果需要分库处理，应该按什么字段来哈希？ 索引表可以和内容表合并成一个表吗<br>\t用户id。<br>\t不可以， 接收方 和 发送方 是不同的人. 有各自的业务.<br><br>2. 能从索引表里获取到最近联系人所需要的信息，为什么还需要单独的联系人表呢？\t<br>\t为了性能，如果通过索引表获取，需要进行聚合排序","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473378,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573036928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142914,"user_name":"Flash","can_delete":false,"product_type":"c1","uid":1236163,"ip_address":"","ucode":"E285075C9E0B02","user_header":"https://static001.geekbang.org/account/avatar/00/12/dc/c3/e4ba51d5.jpg","comment_is_top":false,"comment_ctime":1571583693,"is_pvip":false,"replies":[{"id":"55335","content":"这里说的联系人表其实就是存的最近联系人以及和这个联系人最新的一条消息，排序的话会按照最新一条消息来排。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1571661284,"ip_address":"","comment_id":142914,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571583693","product_id":100034901,"comment_content":"老师您好，请问联系人表，不需要存最近联系人的时间吗，<br>最近联系人列表应该是有多条，最新的排在前面吧。","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471321,"discussion_content":"这里说的联系人表其实就是存的最近联系人以及和这个联系人最新的一条消息，排序的话会按照最新一条消息来排。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571661284,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139286,"user_name":"threedr3am","can_delete":false,"product_type":"c1","uid":1272628,"ip_address":"","ucode":"9F464BBDCC116D","user_header":"https://static001.geekbang.org/account/avatar/00/13/6b/34/0590865d.jpg","comment_is_top":false,"comment_ctime":1570603015,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570603015","product_id":100034901,"comment_content":"1. 用uid哈希，方便拉取聊天记录的时候，不需要跨库查询；可以合并，只要在消息内容表加两个字段，一个是发送uid，一个是接收uid就行了。<br>2. 因为索引表里面会存在用户A发给用户B的所有聊天记录索引，如果想要获取到最近联系人列表以及最后一条消息，就需要先where查询出所有发送者为用户A的索引数据，然后再对接收者字段进行group by聚合，最后取最新消息，这样的操作在数据量庞大的表中时，性能会很差吧。","like_count":0},{"had_liked":false,"id":137163,"user_name":"飞翔","can_delete":false,"product_type":"c1","uid":1068571,"ip_address":"","ucode":"65AF6AF292DAD6","user_header":"https://static001.geekbang.org/account/avatar/00/10/4e/1b/f4b786b9.jpg","comment_is_top":false,"comment_ctime":1569637945,"is_pvip":true,"replies":[{"id":"52864","content":"好友关系存储上比较好处理，一般只需要双方uid，建立关系的时间，考虑到好友列表的使用场景（某个uid的所有好友列表），类似redis的sorted set结构是一个不错的选择。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1569805687,"ip_address":"","comment_id":137163,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1569637945","product_id":100034901,"comment_content":"老师 在开始聊天之前大家应该先成为好友吧。好友关系 怎么存呢","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468966,"discussion_content":"好友关系存储上比较好处理，一般只需要双方uid，建立关系的时间，考虑到好友列表的使用场景（某个uid的所有好友列表），类似redis的sorted set结构是一个不错的选择。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569805687,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1667714,"avatar":"https://static001.geekbang.org/account/avatar/00/19/72/82/24fb9d18.jpg","nickname":"慕然","note":"","ucode":"8622102560A80F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":314600,"discussion_content":"那类似微博大v的粉丝列表呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603175572,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137087,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1569594082,"is_pvip":false,"replies":[{"id":"52862","content":"👍","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1569804968,"ip_address":"","comment_id":137087,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1569594082","product_id":100034901,"comment_content":"课后习题2：<br>联系人列表中，只有小部分人是聊天的高频对象，需要频繁更新联系人表数据（更新最后的聊天记录时，只是锁行记录，不会影响其他用户的更新操作），而绝大部分用户都是读多写少的情况。<br>另外，索引表的记录随着时间越来越多，每次都从索引表获取联系人列表，耗时也会越来越长，同时获取联系人列表，会阻塞消息写入，降低并发量。","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468936,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569804968,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1024294,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","nickname":"null","note":"","ucode":"F9039EFED6B55D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":23344,"discussion_content":"更正，这句表述有误：“同时获取联系人列表，会阻塞消息写入”。mysql RR 级别下，一个线程 select，并不会阻塞另一个线程的 insert 操作。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569807268,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136146,"user_name":"天天平安","can_delete":false,"product_type":"c1","uid":1119208,"ip_address":"","ucode":"C4850F9655F4DD","user_header":"https://static001.geekbang.org/account/avatar/00/11/13/e8/08b829a9.jpg","comment_is_top":false,"comment_ctime":1569373586,"is_pvip":false,"replies":[{"id":"52235","content":"现在市面上很多IM云服务商呀，比如网易，腾讯，阿里，环信等等。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1569412853,"ip_address":"","comment_id":136146,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569373586","product_id":100034901,"comment_content":"老师您好，如果不想自己实现一个IM，考虑市面上收费的产品，请问哪个比较好，因为我现在急需在我们的App 上面加上聊天功能","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468481,"discussion_content":"现在市面上很多IM云服务商呀，比如网易，腾讯，阿里，环信等等。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569412853,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133336,"user_name":"徐凯","can_delete":false,"product_type":"c1","uid":1244991,"ip_address":"","ucode":"12F82BA3649CD5","user_header":"https://static001.geekbang.org/account/avatar/00/12/ff/3f/bbb8a88c.jpg","comment_is_top":false,"comment_ctime":1568520572,"is_pvip":false,"replies":[{"id":"51302","content":"是的，所以一般需要进行分库分表，可以思考一下应该如何进行分库分表。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1568628756,"ip_address":"","comment_id":133336,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568520572","product_id":100034901,"comment_content":"你好  请问一下  聊天内容这个表  是所有用户共用的么  如果用户特别多的话  表不就会变的很大了么","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467356,"discussion_content":"是的，所以一般需要进行分库分表，可以思考一下应该如何进行分库分表。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568628756,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133037,"user_name":"时隐时现","can_delete":false,"product_type":"c1","uid":1111899,"ip_address":"","ucode":"DA4D622FF84920","user_header":"https://static001.geekbang.org/account/avatar/00/10/f7/5b/d2e7c2c4.jpg","comment_is_top":false,"comment_ctime":1568332857,"is_pvip":false,"replies":[{"id":"51290","content":"这个没有具体了解过哈，微信应该不会在服务端进行永久存储，只是缓存一段时间。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1568623519,"ip_address":"","comment_id":133037,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1568332857","product_id":100034901,"comment_content":"微信QQ这种量级的消息，后台用什么db存储","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467230,"discussion_content":"这个没有具体了解过哈，微信应该不会在服务端进行永久存储，只是缓存一段时间。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568623519,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1050986,"avatar":"","nickname":"yason li","note":"","ucode":"C1465F8E12564E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212856,"discussion_content":"微信消息、好友、朋友圈、用户信息都是存储在paxosstore的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585023973,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":132080,"user_name":"小伟","can_delete":false,"product_type":"c1","uid":1359701,"ip_address":"","ucode":"124953423491E2","user_header":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","comment_is_top":false,"comment_ctime":1568019617,"is_pvip":false,"replies":[{"id":"50520","content":"内容表按时间来分表没问题哈，这里说的是多个库的hash问题，如果只是单库的话，所有写入都会落到一个表里，压力会比较大。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1568037931,"ip_address":"","comment_id":132080,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568019617","product_id":100034901,"comment_content":"对于内容表，按照时间（日，周或月）来分表比较好，因为业务场景一般都是获取最近一段时间的消息。此外，按时间分表还可以比较方便业务代码拼装SQL。如按日分表，message_20190909,message_20190910，如果要查最近7天的消息，那么select * from message_20190902 union all select * from message_20190903 ..... union all select * from message_29010909 就可以很自然的拼装出来了。","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466751,"discussion_content":"内容表按时间来分表没问题哈，这里说的是多个库的hash问题，如果只是单库的话，所有写入都会落到一个表里，压力会比较大。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568037931,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131424,"user_name":"overland","can_delete":false,"product_type":"c1","uid":1208835,"ip_address":"","ucode":"609A463519E5F0","user_header":"https://static001.geekbang.org/account/avatar/00/12/72/03/da1fcc81.jpg","comment_is_top":false,"comment_ctime":1567748536,"is_pvip":false,"replies":[{"id":"49873","content":"消息ID可以使用“时间相关的全局序号”生成器来生成。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567770203,"ip_address":"","comment_id":131424,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567748536","product_id":100034901,"comment_content":"老师，这个消息ID一般采取什么生成的策略","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466444,"discussion_content":"消息ID可以使用“时间相关的全局序号”生成器来生成。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567770203,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131392,"user_name":"Minecraft","can_delete":false,"product_type":"c1","uid":1024954,"ip_address":"","ucode":"0F4D6683F03A12","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a3/ba/7fd521b1.jpg","comment_is_top":false,"comment_ctime":1567737801,"is_pvip":false,"replies":[{"id":"49869","content":"考虑下用户查询两个人的历史消息的时候对db的访问模式，如果是按时间进行hash的话，可能查找起来会比较困难。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567769626,"ip_address":"","comment_id":131392,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567737801","product_id":100034901,"comment_content":"第一个问题:分库处理的话，可以从时间维度进行哈希。索引表跟内容表两个维度不一样，可以看出来，索引表示内容表的一个分级。<br>第二个问题:是第一个问题的延伸","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466429,"discussion_content":"考虑下用户查询两个人的历史消息的时候对db的访问模式，如果是按时间进行hash的话，可能查找起来会比较困难。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567769626,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130871,"user_name":"小三爷","can_delete":false,"product_type":"c1","uid":1254916,"ip_address":"","ucode":"98682921DFE0FC","user_header":"https://static001.geekbang.org/account/avatar/00/13/26/04/cc53d926.jpg","comment_is_top":false,"comment_ctime":1567562468,"is_pvip":false,"replies":[{"id":"49158","content":"分开的话，收发双方任意一方查询会话内容或者删除某一条会话消息时都会方便一些，内容上也冗余了。当然，如果使用场景上不需要获取某个用户的所有发件箱或者所有收件箱的话，合并应该也是没问题的","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567597498,"ip_address":"","comment_id":130871,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1567562468","product_id":100034901,"comment_content":"我看上面的一些回答，分库分表的话，消息内容肯定是要多表多库查找的(并发获取)，无论是以作者现在的设计思路，还是把消息表和发送人索引和接受者索引合并成一个表(仍然没有数据冗余)。消息表和索引表分开的设计是也考虑到让  需要并发获取的表尽量小吗","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466169,"discussion_content":"分开的话，收发双方任意一方查询会话内容或者删除某一条会话消息时都会方便一些，内容上也冗余了。当然，如果使用场景上不需要获取某个用户的所有发件箱或者所有收件箱的话，合并应该也是没问题的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567597498,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1743953,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/9c/51/76fcc9cd.jpg","nickname":"李杰","note":"","ucode":"E177762621E11E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583412,"discussion_content":"如果使用消息单表+用户维度的消息操作表，消息读写逻辑上会不会简单些？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660106190,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130771,"user_name":"煜","can_delete":false,"product_type":"c1","uid":1650785,"ip_address":"","ucode":"3C5A9A55A65FC9","user_header":"https://static001.geekbang.org/account/avatar/00/19/30/61/50e24e09.jpg","comment_is_top":false,"comment_ctime":1567530253,"is_pvip":false,"replies":[{"id":"49113","content":"这里说的websocket网关无状态是指用户不会绑定到具体的某一台网关机来连接，这样网关机就能够做到随意上下线和扩缩容了。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567595344,"ip_address":"","comment_id":130771,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567530253","product_id":100034901,"comment_content":"老师，那个websocket网关无状态是什么意思呀，和http无状态一样吗？长连接一般不是有状态的吗？","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466114,"discussion_content":"这里说的websocket网关无状态是指用户不会绑定到具体的某一台网关机来连接，这样网关机就能够做到随意上下线和扩缩容了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567595344,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130288,"user_name":"2102","can_delete":false,"product_type":"c1","uid":1070298,"ip_address":"","ucode":"A67068F2A3157E","user_header":"https://static001.geekbang.org/account/avatar/00/10/54/da/e2e5ddf7.jpg","comment_is_top":false,"comment_ctime":1567419115,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567419115","product_id":100034901,"comment_content":"索引表数据量太大","like_count":0},{"had_liked":false,"id":130251,"user_name":"manymore13","can_delete":false,"product_type":"c1","uid":1406259,"ip_address":"","ucode":"4433BFF17FC63F","user_header":"https://static001.geekbang.org/account/avatar/00/15/75/33/a1e89b84.jpg","comment_is_top":false,"comment_ctime":1567413134,"is_pvip":false,"replies":[{"id":"48627","content":"1. 网关就是设备连接到服务端的服务器。<br>2. 数据量太大的情况下，需要进行分库操作，这里的hash就是应该怎么来分库可以让我们的读写都高效。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567425532,"ip_address":"","comment_id":130251,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567413134","product_id":100034901,"comment_content":"老师，我做前端的，问两个后台基础问题 <br>1. 图中网关怎么理解？做什么用的？<br>2.你提的第一个问题中 应该按什么字段来哈希? <br>这个哈希是用来做什么的？是确定唯一值吗？内容表不是有消息ID吗？<br>","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465876,"discussion_content":"1. 网关就是设备连接到服务端的服务器。\n2. 数据量太大的情况下，需要进行分库操作，这里的hash就是应该怎么来分库可以让我们的读写都高效。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567425532,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130086,"user_name":"云师兄","can_delete":false,"product_type":"c1","uid":1010459,"ip_address":"","ucode":"4475AF1598FBFD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6b/1b/4b397b80.jpg","comment_is_top":false,"comment_ctime":1567385011,"is_pvip":false,"replies":[{"id":"48601","content":"👍","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567423470,"ip_address":"","comment_id":130086,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567385011","product_id":100034901,"comment_content":"以往的实践中，我们采用uid进行分表，将单个用户的所有消息记录收敛到一个表中，在查询单个用户纬度上消息避免跨表。收发双方之所以都需要采用索引，是因为可能会放到不同的分表中去，消息内容表独立，也是避免冗余存储，特别是群聊时候。常用联系人表相比消息表，一个是只记录最新记录，一个是所有记录。前者更想一个会话纬度，在客户端查询是否消息是最新，避免了查询消息表用户所有记录分组并排序。是否理解有偏差？","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465795,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567423470,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130078,"user_name":"ly","can_delete":false,"product_type":"c1","uid":1221628,"ip_address":"","ucode":"5E2B85252DABF3","user_header":"https://static001.geekbang.org/account/avatar/00/12/a3/fc/379387a4.jpg","comment_is_top":false,"comment_ctime":1567384195,"is_pvip":false,"replies":[{"id":"48597","content":"索引表和内容表是否可以合并还需要看：第一，一条消息发出后，需要在索引表记录几条记录，如果需要记录多条，那么分开的话会减少冗余，如果只需要记录一条那么是可以合并的，实现上可以根据具体数据的使用场景来确定，分开和合并都是支持的。<br>数据存储hash方式很多呀，比如说：如果索引和内容单独存，那么内容表可以按消息id哈希，索引表可以按消息所属人uid来hash。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567423247,"ip_address":"","comment_id":130078,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567384195","product_id":100034901,"comment_content":"最近联系人记录的仅仅是最近有过会话的联系人，而单独的联系人是存储全部联系人。<br>索引表和内容表应该可以合并，这就是一种消息冗余，至于分库的hash的字段，由于没有过这个经验，还真不明白，请老师指点！","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465790,"discussion_content":"索引表和内容表是否可以合并还需要看：第一，一条消息发出后，需要在索引表记录几条记录，如果需要记录多条，那么分开的话会减少冗余，如果只需要记录一条那么是可以合并的，实现上可以根据具体数据的使用场景来确定，分开和合并都是支持的。\n数据存储hash方式很多呀，比如说：如果索引和内容单独存，那么内容表可以按消息id哈希，索引表可以按消息所属人uid来hash。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567423247,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129934,"user_name":"一路向北","can_delete":false,"product_type":"c1","uid":1376654,"ip_address":"","ucode":"54D8F1687AE1ED","user_header":"https://static001.geekbang.org/account/avatar/00/15/01/8e/48e7c474.jpg","comment_is_top":false,"comment_ctime":1567329341,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567329341","product_id":100034901,"comment_content":"索引表和内容表可以合并。将“是发件箱还是收件箱”字段去除，变成另一个字段，字段值为1,2,3.分别表示仅发方可见、仅收方可见、收发双方都可见。此时，两个UID字段的组合表明了谁是发方谁是收方。","like_count":0},{"had_liked":false,"id":129851,"user_name":"成","can_delete":false,"product_type":"c1","uid":1053969,"ip_address":"","ucode":"514D161041B5B2","user_header":"https://static001.geekbang.org/account/avatar/00/10/15/11/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1567304549,"is_pvip":false,"replies":[{"id":"48449","content":"有一篇课程专门讲接入服务的高可用，敬请期待。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567323959,"ip_address":"","comment_id":129851,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567304549","product_id":100034901,"comment_content":"接入服务的高可用性如何保障，服务和服务之间如何高效相互通信，还希望后续多介绍下","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465679,"discussion_content":"有一篇课程专门讲接入服务的高可用，敬请期待。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567323959,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129824,"user_name":"东东🎈","can_delete":false,"product_type":"c1","uid":1326338,"ip_address":"","ucode":"D1BBE24CF76426","user_header":"https://static001.geekbang.org/account/avatar/00/14/3d/02/ecdb4e66.jpg","comment_is_top":false,"comment_ctime":1567271070,"is_pvip":false,"replies":[{"id":"48448","content":"后面课程会有讲到的哦","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567323917,"ip_address":"","comment_id":129824,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567271070","product_id":100034901,"comment_content":"老师，群消息是怎么存储的呢，群离线又是怎么拉取的呢，这个可以细化点吗？","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465667,"discussion_content":"后面课程会有讲到的哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567323917,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129679,"user_name":"山头","can_delete":false,"product_type":"c1","uid":1610142,"ip_address":"","ucode":"9CD45A7966F37E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/1R7lHGBvwPTVfb3BAQrPX3AhsYWnXyicbUJUYDgWagWxMGTnsNFvKibzeJ8v7fF2vJLQGf2EY9dV07rnn5Mhv9Uw/132","comment_is_top":false,"comment_ctime":1567217447,"is_pvip":false,"replies":[{"id":"48446","content":"第一个问题没太看懂哈，账号关联关系具体是指啥？单台服务器如果只是挂连接能支持几百万上千万的，但实际线上由于不仅仅是连接的维护，还有消息的传输，所以单台一般不会挂这么多连接。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567323825,"ip_address":"","comment_id":129679,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567217447","product_id":100034901,"comment_content":"老师，你好，请教两个问题，第一im系统里面的账号关联关系业内一般怎么设计，常用的是哪种？第第二个问题，接收方如何跟服务器保持一个长链接，能否给写个例子看看，如果有上亿的在线用户，那服务器压力岂不是很大，服务器，一台服务器也大约能链接多少在线用户？","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465599,"discussion_content":"第一个问题没太看懂哈，账号关联关系具体是指啥？单台服务器如果只是挂连接能支持几百万上千万的，但实际线上由于不仅仅是连接的维护，还有消息的传输，所以单台一般不会挂这么多连接。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567323825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129568,"user_name":"飞羽惊鸿","can_delete":false,"product_type":"c1","uid":1320656,"ip_address":"","ucode":"ABFA2FC0222F87","user_header":"https://static001.geekbang.org/account/avatar/00/14/26/d0/a8fbf2de.jpg","comment_is_top":false,"comment_ctime":1567154973,"is_pvip":false,"replies":[{"id":"48351","content":"只要是websocket网关是无状态的就可以随意分布式部署的呀，部署后理论上网关服务器不需要进行通信，只是网关服务器和业务服务器需要通信吧。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567178756,"ip_address":"","comment_id":129568,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567154973","product_id":100034901,"comment_content":"老师，websocket如果进行分布式部署？分布式部署后服务器之间的通信采用何种方式比较合理？如果统一管理分布式服务下的所有服务","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465546,"discussion_content":"只要是websocket网关是无状态的就可以随意分布式部署的呀，部署后理论上网关服务器不需要进行通信，只是网关服务器和业务服务器需要通信吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567178756,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129535,"user_name":"小胡子","can_delete":false,"product_type":"c1","uid":1018182,"ip_address":"","ucode":"79FEC6400D25DA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/89/46/0b7828a1.jpg","comment_is_top":false,"comment_ctime":1567150543,"is_pvip":false,"replies":[{"id":"48350","content":"这些步骤也不是一定的，对于不需要多终端消息完全同步的场景，很多操作就可以推给客户端，在端上来实现了。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567178610,"ip_address":"","comment_id":129535,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567150543","product_id":100034901,"comment_content":"这样的消息结构，收到一条消息时的写操作是否过多？消息入库、更新联系人最后一条消息、更新未读数","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465527,"discussion_content":"这些步骤也不是一定的，对于不需要多终端消息完全同步的场景，很多操作就可以推给客户端，在端上来实现了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567178610,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129450,"user_name":"大魔王汪汪","can_delete":false,"product_type":"c1","uid":1010680,"ip_address":"","ucode":"4B205CB52FC95F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6b/f8/b4da7936.jpg","comment_is_top":false,"comment_ctime":1567131107,"is_pvip":false,"replies":[{"id":"48346","content":"实现上的区别吧，IM的实现上，有一些发消息可能直接走的是另外的http接口，这种情况下一般就叫做API了；也有很多会通过同一个通道来进行消息收和发，这种情况下发消息就也会经过这个网关服务。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567177909,"ip_address":"","comment_id":129450,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567131107","product_id":100034901,"comment_content":"消息接收方和消息发送方不应该是对等的吗？为什么发送方侧没有网关的概念额？","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465475,"discussion_content":"实现上的区别吧，IM的实现上，有一些发消息可能直接走的是另外的http接口，这种情况下一般就叫做API了；也有很多会通过同一个通道来进行消息收和发，这种情况下发消息就也会经过这个网关服务。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567177909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129422,"user_name":"geekymv","can_delete":false,"product_type":"c1","uid":1075950,"ip_address":"","ucode":"B119ACE47B8C0C","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJTywPCdTDoRAaLBN20JfD50dQPic0B3OeUgYMHA3x7ptvF3iaCRTqrNZsF3Cz8TCibcwSsCichdOiallQ/0","comment_is_top":false,"comment_ctime":1567127779,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567127779","product_id":100034901,"comment_content":"1.内容表按内容ID哈希，索引表按索引的用户UID哈希。索引表和内容表不能合并，如果合并的话，比如微信功能里的发送方用户删除消息，接受方用户还要能看到消息就无法实现","like_count":0},{"had_liked":false,"id":129413,"user_name":"lorancechen","can_delete":false,"product_type":"c1","uid":1114303,"ip_address":"","ucode":"2A16CFA4726AE7","user_header":"https://static001.geekbang.org/account/avatar/00/11/00/bf/a44cde46.jpg","comment_is_top":false,"comment_ctime":1567126821,"is_pvip":false,"replies":[{"id":"48343","content":"是这样的，索引表记录多时性能会是个大问题。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567177160,"ip_address":"","comment_id":129413,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567126821","product_id":100034901,"comment_content":"2 还是从数据访问数据的方式考虑。联系人表只存储需要的数据，查询最近联系人要用到用户和时间，联系人表数据较少直接按用户取即可，含有的数据少。如果用消息表查询，数据库查询产生的中间表数据量不可控，浪费数据库的内存资源。","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465453,"discussion_content":"是这样的，索引表记录多时性能会是个大问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567177160,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129411,"user_name":"颛顼","can_delete":false,"product_type":"c1","uid":1010018,"ip_address":"","ucode":"4A6139389C62EA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/69/62/b874af21.jpg","comment_is_top":false,"comment_ctime":1567126751,"is_pvip":true,"replies":[{"id":"48342","content":"这种实现没问题哈，那这两条索引表记录能合并成一条吗？如果可以，内容表字段是不是也可以整合进来不需要了单独的表了？","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567177054,"ip_address":"","comment_id":129411,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1567126751","product_id":100034901,"comment_content":"内容表是根据消息id,索引表则是第一个用户id，这样分表后，一条消息就需要分别为发送人插入一条发件箱消息，接收人一条收件箱消息","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465452,"discussion_content":"这种实现没问题哈，那这两条索引表记录能合并成一条吗？如果可以，内容表字段是不是也可以整合进来不需要了单独的表了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567177054,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1010018,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/62/b874af21.jpg","nickname":"颛顼","note":"","ucode":"4A6139389C62EA","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6952,"discussion_content":"根据用户id分表的话，如果索引合成一条记录，那根据第二个用户id的查询，就需要去所有数据分片上查询。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567210919,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129409,"user_name":"lorancechen","can_delete":false,"product_type":"c1","uid":1114303,"ip_address":"","ucode":"2A16CFA4726AE7","user_header":"https://static001.geekbang.org/account/avatar/00/11/00/bf/a44cde46.jpg","comment_is_top":false,"comment_ctime":1567126636,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567126636","product_id":100034901,"comment_content":"1 按用户维度做hash。因为数据的访问基本都是基于各自用户本身。<br>2 ","like_count":0},{"had_liked":false,"id":129392,"user_name":"newzai","can_delete":false,"product_type":"c1","uid":1102367,"ip_address":"","ucode":"D5E34D427D65FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/1f/2ef2514b.jpg","comment_is_top":false,"comment_ctime":1567125362,"is_pvip":false,"replies":[{"id":"48339","content":"实现上可以考虑在删除时把双方uid和消息id丢给一个异步处理队列，处理时如果收发双方都不再引用，就可以来异步删除内容表记录。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567176863,"ip_address":"","comment_id":129392,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1567125362","product_id":100034901,"comment_content":"对于消息内容索引问题，虽然减少了空间，但是如果涉及到消息要清理的时候，消息内容何时清理呢？系统如何保证在张三和李四都不需要这条消息的时候，删除消息内容呢？如果做才能不给系统带来额外的压力负担呢？","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465437,"discussion_content":"实现上可以考虑在删除时把双方uid和消息id丢给一个异步处理队列，处理时如果收发双方都不再引用，就可以来异步删除内容表记录。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567176863,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1102367,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d2/1f/2ef2514b.jpg","nickname":"newzai","note":"","ucode":"D5E34D427D65FD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6963,"discussion_content":"这只是点对点，如果是群组消息，一个消息id被很多个用户访问，这个过程又如何处理？反向查询还是消息引用计数？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567223799,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1010018,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/62/b874af21.jpg","nickname":"颛顼","note":"","ucode":"4A6139389C62EA","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6800,"discussion_content":"这个就像现代语言都需要的垃圾回收器一样，可以定期回收的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567126867,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129390,"user_name":"墙角儿的花","can_delete":false,"product_type":"c1","uid":1258474,"ip_address":"","ucode":"EE5CAD76175CCF","user_header":"","comment_is_top":false,"comment_ctime":1567124966,"is_pvip":false,"replies":[{"id":"48333","content":"1. 这里再考虑一个问题哈：会话中某一方删除消息时怎样做到不影响对方的消息。<br>2. 不仅是最近联系人，包括消息本身也是可以存储在客户端不需要多端同步的，这个确实和产品定位有关。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567176444,"ip_address":"","comment_id":129390,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1567124966","product_id":100034901,"comment_content":"1. 按对话关系即聊天窗口也即发件人uid加收件人uid 联合值来哈希.索引表和内容表为了查询性能不要合<br>2.两者面向的作用不一样，索引表方便过滤对话历史，后者只是查联系人<br><br>最后，其实我想加下自己的看法，最近联系人也可以存储在客户端，这个可以不用多端同步，当然取决于产品定位","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465435,"discussion_content":"1. 这里再考虑一个问题哈：会话中某一方删除消息时怎样做到不影响对方的消息。\n2. 不仅是最近联系人，包括消息本身也是可以存储在客户端不需要多端同步的，这个确实和产品定位有关。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567176444,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1114345,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEIEaKmtxSG7X58YRr3guYQHiavsqInUM8R02JMSW6LvjuEadF40JWFQ9T3mEfeKDuHCSJL1CbsGx2Q/132","nickname":"刘大","note":"","ucode":"910DB9A38A6E45","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7932,"discussion_content":"对单方面删除消息这种场景极少的情况，单独拉个表出来做识别过滤不好吗，消息表应该要加发信人字段吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567732689,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1010018,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/62/b874af21.jpg","nickname":"颛顼","note":"","ucode":"4A6139389C62EA","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6807,"discussion_content":"按照对话关系来散列的话可以让数据分布更均匀，即使是一个热点用户，也不会因为收件箱太多，而导致数据不均匀，再加上最近联系人列表，也就不会出现索引表有根据用户id查询所有数据分片的场景了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567127538,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129382,"user_name":"sum","can_delete":false,"product_type":"c1","uid":1069797,"ip_address":"","ucode":"5058D2F417AA82","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83er77H7TocrQqc0NsfkNjY4QT9llye3XxbZkIcBuX32RWwf4nA46EFvWaUncxcYZmP8wXMicz2TnkIw/132","comment_is_top":false,"comment_ctime":1567123669,"is_pvip":false,"replies":[{"id":"48331","content":"1. 内容表使用消息ID来hash没问题哈，索引表的hash规则上再考虑下这个表的使用场景？查询时需要用到消息相关的维度吗？还是只需要按用户维度来查询就可以呢？<br>2. 主要是索引表里存放的是全量数据，从里面按会话唯一性来筛选最新一条消息性能上和复杂性上都会有问题。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567175124,"ip_address":"","comment_id":129382,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567123669","product_id":100034901,"comment_content":"1. 使用消息ID比较好吧，使用用户ID可能会造成活跃的用户，对应的表和库访问量很大，而其他库访问量较少。不太平衡；不可以，索引表有发送&#47;接收的区分，一个消息ID对应两条记录，全量存储消息内容，冗余<br>2. 以方便从消息索引表查询比较复杂，另一方面，如果有如下场景--用户删除会话，退出，登陆要看不到删除的最近会话--那么后端使用消息索引表，无法标记这些记录。<br>请老师点评解答，谢谢","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465430,"discussion_content":"1. 内容表使用消息ID来hash没问题哈，索引表的hash规则上再考虑下这个表的使用场景？查询时需要用到消息相关的维度吗？还是只需要按用户维度来查询就可以呢？\n2. 主要是索引表里存放的是全量数据，从里面按会话唯一性来筛选最新一条消息性能上和复杂性上都会有问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567175124,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129380,"user_name":"Geek_发现","can_delete":false,"product_type":"c1","uid":1643741,"ip_address":"","ucode":"39C23F2D574A09","user_header":"https://static001.geekbang.org/account/avatar/00/19/14/dd/17892edc.jpg","comment_is_top":false,"comment_ctime":1567123170,"is_pvip":false,"replies":[{"id":"48330","content":"嗯，基本正确，有一个小问题：索引表的hash规则上再考虑下这个表的使用场景？查询时需要用到消息相关的维度吗？还是只需要按用户维度来查询就可以呢？","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567174752,"ip_address":"","comment_id":129380,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567123170","product_id":100034901,"comment_content":"内容表以内容ID来hash，索引表以用户ID和内容ID来hash(它们两个可以唯一的确定这条记录):<br>为了降低耦合，索引表最好不要加入内容，如果加入的话，相当于收发方都会插入内容，如果内容是照片或者视频大文件时候，会降低效率:<br>联系人也最好不要从索引表查询，因为索引表存在用户重复情况，如果查的话，需要去重，还要排除自己，影响效率:","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465429,"discussion_content":"嗯，基本正确，有一个小问题：索引表的hash规则上再考虑下这个表的使用场景？查询时需要用到消息相关的维度吗？还是只需要按用户维度来查询就可以呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567174752,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129379,"user_name":"Hurt","can_delete":false,"product_type":"c1","uid":1050946,"ip_address":"","ucode":"DCE7428CCF08EF","user_header":"https://static001.geekbang.org/account/avatar/00/10/09/42/1f762b72.jpg","comment_is_top":false,"comment_ctime":1567121602,"is_pvip":false,"replies":[{"id":"48329","content":"有点没太理解您的意思哈，存储不管是交给中间件还是自己写逻辑来存都是可行的吧，重点在于想清楚存储的数据该怎么用。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567174566,"ip_address":"","comment_id":129379,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567121602","product_id":100034901,"comment_content":"老师 5g来了的话 可以把存储都完全交给存储中间件吗 用户无感知那种","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465428,"discussion_content":"有点没太理解您的意思哈，存储不管是交给中间件还是自己写逻辑来存都是可行的吧，重点在于想清楚存储的数据该怎么用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567174566,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}