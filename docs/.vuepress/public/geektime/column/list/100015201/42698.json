{"id":42698,"title":"28 | PV、PVC、StorageClass，这些到底在说啥？","content":"<p>你好，我是张磊。今天我和你分享的主题是：PV、PVC、StorageClass，这些到底在说啥？</p>\n<p>在前面的文章中，我重点为你分析了Kubernetes的各种编排能力。</p>\n<p>在这些讲解中，你应该已经发现，容器化一个应用比较麻烦的地方，莫过于对其“状态”的管理。而最常见的“状态”，又莫过于存储状态了。</p>\n<p>所以，从今天这篇文章开始，我会<strong>通过4篇文章为你剖析Kubernetes项目处理容器持久化存储的核心原理</strong>，从而帮助你更好地理解和使用这部分内容。</p>\n<p>首先，我们来回忆一下我在第19篇文章<a href=\"https://time.geekbang.org/column/article/41154\">《深入理解StatefulSet（二）：存储状态》</a>中，和你分享StatefulSet如何管理存储状态的时候，介绍过的<span class=\"orange\">Persistent Volume（PV）和Persistent Volume Claim（PVC）</span>这套持久化存储体系。</p>\n<p>其中，<strong>PV描述的，是持久化存储数据卷</strong>。这个API对象主要定义的是一个持久化存储在宿主机上的目录，比如一个NFS的挂载目录。</p>\n<p>通常情况下，PV对象是由运维人员事先创建在Kubernetes集群里待用的。比如，运维人员可以定义这样一个NFS类型的PV，如下所示：</p>\n<pre><code>apiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: nfs\nspec:\n  storageClassName: manual\n  capacity:\n    storage: 1Gi\n  accessModes:\n    - ReadWriteMany\n  nfs:\n    server: 10.244.1.4\n    path: &quot;/&quot;\n</code></pre>\n<p>而<strong>PVC描述的，则是Pod所希望使用的持久化存储的属性</strong>。比如，Volume存储的大小、可读写权限等等。</p><!-- [[[read_end]]] -->\n<p>PVC对象通常由开发人员创建；或者以PVC模板的方式成为StatefulSet的一部分，然后由StatefulSet控制器负责创建带编号的PVC。</p>\n<p>比如，开发人员可以声明一个1 GiB大小的PVC，如下所示：</p>\n<pre><code>apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: nfs\nspec:\n  accessModes:\n    - ReadWriteMany\n  storageClassName: manual\n  resources:\n    requests:\n      storage: 1Gi\n</code></pre>\n<p>而用户创建的PVC要真正被容器使用起来，就必须先和某个符合条件的PV进行绑定。这里要检查的条件，包括两部分：</p>\n<ul>\n<li>第一个条件，当然是PV和PVC的spec字段。比如，PV的存储（storage）大小，就必须满足PVC的要求。</li>\n<li>而第二个条件，则是PV和PVC的storageClassName字段必须一样。这个机制我会在本篇文章的最后一部分专门介绍。</li>\n</ul>\n<p>在成功地将PVC和PV进行绑定之后，Pod就能够像使用hostPath等常规类型的Volume一样，在自己的YAML文件里声明使用这个PVC了，如下所示：</p>\n<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  labels:\n    role: web-frontend\nspec:\n  containers:\n  - name: web\n    image: nginx\n    ports:\n      - name: web\n        containerPort: 80\n    volumeMounts:\n        - name: nfs\n          mountPath: &quot;/usr/share/nginx/html&quot;\n  volumes:\n  - name: nfs\n    persistentVolumeClaim:\n      claimName: nfs\n</code></pre>\n<p>可以看到，Pod需要做的，就是在volumes字段里声明自己要使用的PVC名字。接下来，等这个Pod创建之后，kubelet就会把这个PVC所对应的PV，也就是一个NFS类型的Volume，挂载在这个Pod容器内的目录上。</p>\n<p>不难看出，<strong>PVC和PV的设计，其实跟“面向对象”的思想完全一致。</strong></p>\n<p>PVC可以理解为持久化存储的“接口”，它提供了对某种持久化存储的描述，但不提供具体的实现；而这个持久化存储的实现部分则由PV负责完成。</p>\n<p>这样做的好处是，作为应用开发者，我们只需要跟PVC这个“接口”打交道，而不必关心具体的实现是NFS还是Ceph。毕竟这些存储相关的知识太专业了，应该交给专业的人去做。</p>\n<p>而在上面的讲述中，其实还<span class=\"orange\">有一个比较棘手的情况。</span></p>\n<p>比如，你在创建Pod的时候，系统里并没有合适的PV跟它定义的PVC绑定，也就是说此时容器想要使用的Volume不存在。这时候，Pod的启动就会报错。</p>\n<p>但是，过了一会儿，运维人员也发现了这个情况，所以他赶紧创建了一个对应的PV。这时候，我们当然希望Kubernetes能够再次完成PVC和PV的绑定操作，从而启动Pod。</p>\n<p>所以在Kubernetes中，实际上存在着一个专门处理持久化存储的控制器，叫作Volume Controller。这个Volume Controller维护着多个控制循环，其中有一个循环，扮演的就是撮合PV和PVC的“红娘”的角色。它的名字叫作PersistentVolumeController。</p>\n<p>PersistentVolumeController会不断地查看当前每一个PVC，是不是已经处于Bound（已绑定）状态。如果不是，那它就会遍历所有的、可用的PV，并尝试将其与这个“单身”的PVC进行绑定。这样，Kubernetes就可以保证用户提交的每一个PVC，只要有合适的PV出现，它就能够很快进入绑定状态，从而结束“单身”之旅。</p>\n<p>而所谓将一个PV与PVC进行“绑定”，其实就是将这个PV对象的名字，填在了PVC对象的spec.volumeName字段上。所以，接下来Kubernetes只要获取到这个PVC对象，就一定能够找到它所绑定的PV。</p>\n<p>那么，<span class=\"orange\">这个PV对象，又是如何变成容器里的一个持久化存储的呢？</span></p>\n<p>我在前面讲解容器基础的时候，已经为你详细剖析了容器Volume的挂载机制。用一句话总结，<strong>所谓容器的Volume，其实就是将一个宿主机上的目录，跟一个容器里的目录绑定挂载在了一起。</strong>（你可以借此机会，再回顾一下专栏的第8篇文章<a href=\"https://time.geekbang.org/column/article/18119\">《白话容器基础（四）：重新认识Docker容器》</a>中的相关内容）</p>\n<p><strong>而所谓的“持久化Volume”，指的就是这个宿主机上的目录，具备“持久性”</strong>。即：这个目录里面的内容，既不会因为容器的删除而被清理掉，也不会跟当前的宿主机绑定。这样，当容器被重启或者在其他节点上重建出来之后，它仍然能够通过挂载这个Volume，访问到这些内容。</p>\n<p>显然，我们前面使用的hostPath和emptyDir类型的Volume并不具备这个特征：它们既有可能被kubelet清理掉，也不能被“迁移”到其他节点上。</p>\n<p>所以，大多数情况下，持久化Volume的实现，往往依赖于一个远程存储服务，比如：远程文件存储（比如，NFS、GlusterFS）、远程块存储（比如，公有云提供的远程磁盘）等等。</p>\n<p>而Kubernetes需要做的工作，就是使用这些存储服务，来为容器准备一个持久化的宿主机目录，以供将来进行绑定挂载时使用。而所谓“持久化”，指的是容器在这个目录里写入的文件，都会保存在远程存储中，从而使得这个目录具备了“持久性”。</p>\n<p><strong>这个准备“持久化”宿主机目录的过程，我们可以形象地称为“两阶段处理”。</strong></p>\n<p>接下来，我通过一个具体的例子为你说明。</p>\n<p>当一个Pod调度到一个节点上之后，kubelet就要负责为这个Pod创建它的Volume目录。默认情况下，kubelet为Volume创建的目录是如下所示的一个宿主机上的路径：</p>\n<pre><code>/var/lib/kubelet/pods/&lt;Pod的ID&gt;/volumes/kubernetes.io~&lt;Volume类型&gt;/&lt;Volume名字&gt;\n</code></pre>\n<p>接下来，kubelet要做的操作就取决于你的Volume类型了。</p>\n<p>如果你的Volume类型是远程块存储，比如Google Cloud的Persistent Disk（GCE提供的远程磁盘服务），那么kubelet就需要先调用Goolge Cloud的API，将它所提供的Persistent Disk挂载到Pod所在的宿主机上。</p>\n<blockquote>\n<p>备注：你如果不太了解块存储的话，可以直接把它理解为：一块<strong>磁盘</strong>。</p>\n</blockquote>\n<p>这相当于执行：</p>\n<pre><code>$ gcloud compute instances attach-disk &lt;虚拟机名字&gt; --disk &lt;远程磁盘名字&gt;\n</code></pre>\n<p>这一步<strong>为虚拟机挂载远程磁盘的操作，对应的正是“两阶段处理”的第一阶段。在Kubernetes中，我们把这个阶段称为Attach。</strong></p>\n<p>Attach阶段完成后，为了能够使用这个远程磁盘，kubelet还要进行第二个操作，即：格式化这个磁盘设备，然后将它挂载到宿主机指定的挂载点上。不难理解，这个挂载点，正是我在前面反复提到的Volume的宿主机目录。所以，这一步相当于执行：</p>\n<pre><code># 通过lsblk命令获取磁盘设备ID\n$ sudo lsblk\n# 格式化成ext4格式\n$ sudo mkfs.ext4 -m 0 -F -E lazy_itable_init=0,lazy_journal_init=0,discard /dev/&lt;磁盘设备ID&gt;\n# 挂载到挂载点\n$ sudo mkdir -p /var/lib/kubelet/pods/&lt;Pod的ID&gt;/volumes/kubernetes.io~&lt;Volume类型&gt;/&lt;Volume名字&gt;\n</code></pre>\n<p>这个<strong>将磁盘设备格式化并挂载到Volume宿主机目录的操作，对应的正是“两阶段处理”的第二个阶段，我们一般称为：Mount。</strong></p>\n<p>Mount阶段完成后，这个Volume的宿主机目录就是一个“持久化”的目录了，容器在它里面写入的内容，会保存在Google Cloud的远程磁盘中。</p>\n<p>而如果你的Volume类型是远程文件存储（比如NFS）的话，kubelet的处理过程就会更简单一些。</p>\n<p>因为在这种情况下，kubelet可以跳过“第一阶段”（Attach）的操作，这是因为一般来说，远程文件存储并没有一个“存储设备”需要挂载在宿主机上。</p>\n<p>所以，kubelet会直接从“第二阶段”（Mount）开始准备宿主机上的Volume目录。</p>\n<p>在这一步，kubelet需要作为client，将远端NFS服务器的目录（比如：“/”目录），挂载到Volume的宿主机目录上，即相当于执行如下所示的命令：</p>\n<pre><code>$ mount -t nfs &lt;NFS服务器地址&gt;:/ /var/lib/kubelet/pods/&lt;Pod的ID&gt;/volumes/kubernetes.io~&lt;Volume类型&gt;/&lt;Volume名字&gt; \n</code></pre>\n<p>通过这个挂载操作，Volume的宿主机目录就成为了一个远程NFS目录的挂载点，后面你在这个目录里写入的所有文件，都会被保存在远程NFS服务器上。所以，我们也就完成了对这个Volume宿主机目录的“持久化”。</p>\n<p><strong>到这里，你可能会有疑问，Kubernetes又是如何定义和区分这两个阶段的呢？</strong></p>\n<p>其实很简单，在具体的Volume插件的实现接口上，Kubernetes分别给这两个阶段提供了两种不同的参数列表：</p>\n<ul>\n<li>对于“第一阶段”（Attach），Kubernetes提供的可用参数是nodeName，即宿主机的名字。</li>\n<li>而对于“第二阶段”（Mount），Kubernetes提供的可用参数是dir，即Volume的宿主机目录。</li>\n</ul>\n<p>所以，作为一个存储插件，你只需要根据自己的需求进行选择和实现即可。在后面关于编写存储插件的文章中，我会对这个过程做深入讲解。</p>\n<p>而经过了“两阶段处理”，我们就得到了一个“持久化”的Volume宿主机目录。所以，接下来，kubelet只要把这个Volume目录通过CRI里的Mounts参数，传递给Docker，然后就可以为Pod里的容器挂载这个“持久化”的Volume了。其实，这一步相当于执行了如下所示的命令：</p>\n<pre><code>$ docker run -v /var/lib/kubelet/pods/&lt;Pod的ID&gt;/volumes/kubernetes.io~&lt;Volume类型&gt;/&lt;Volume名字&gt;:/&lt;容器内的目标目录&gt; 我的镜像 ...\n</code></pre>\n<p>以上，就是Kubernetes处理PV的具体原理了。</p>\n<blockquote>\n<p>备注：对应地，在删除一个PV的时候，Kubernetes也需要Unmount和Dettach两个阶段来处理。这个过程我就不再详细介绍了，执行“反向操作”即可。</p>\n</blockquote>\n<p>实际上，你可能已经发现，这个PV的处理流程似乎跟Pod以及容器的启动流程没有太多的耦合，只要kubelet在向Docker发起CRI请求之前，确保“持久化”的宿主机目录已经处理完毕即可。</p>\n<p>所以，在Kubernetes中，上述<strong>关于PV的“两阶段处理”流程，是靠独立于kubelet主控制循环（Kubelet Sync Loop）之外的两个控制循环来实现的。</strong></p>\n<p>其中，“第一阶段”的Attach（以及Dettach）操作，是由Volume Controller负责维护的，这个控制循环的名字叫作：<strong>AttachDetachController</strong>。而它的作用，就是不断地检查每一个Pod对应的PV，和这个Pod所在宿主机之间挂载情况。从而决定，是否需要对这个PV进行Attach（或者Dettach）操作。</p>\n<p>需要注意，作为一个Kubernetes内置的控制器，Volume Controller自然是kube-controller-manager的一部分。所以，AttachDetachController也一定是运行在Master节点上的。当然，Attach操作只需要调用公有云或者具体存储项目的API，并不需要在具体的宿主机上执行操作，所以这个设计没有任何问题。</p>\n<p>而“第二阶段”的Mount（以及Unmount）操作，必须发生在Pod对应的宿主机上，所以它必须是kubelet组件的一部分。这个控制循环的名字，叫作：<strong>VolumeManagerReconciler</strong>，它运行起来之后，是一个独立于kubelet主循环的Goroutine。</p>\n<p>通过这样将Volume的处理同kubelet的主循环解耦，Kubernetes就避免了这些耗时的远程挂载操作拖慢kubelet的主控制循环，进而导致Pod的创建效率大幅下降的问题。实际上，<strong>kubelet的一个主要设计原则，就是它的主控制循环绝对不可以被block</strong>。这个思想，我在后续的讲述容器运行时的时候还会提到。</p>\n<p><span class=\"orange\">在了解了Kubernetes的Volume处理机制之后，我再来为你介绍这个体系里最后一个重要概念：StorageClass。</span></p>\n<p>我在前面介绍PV和PVC的时候，曾经提到过，PV这个对象的创建，是由运维人员完成的。但是，在大规模的生产环境里，这其实是一个非常麻烦的工作。</p>\n<p>这是因为，一个大规模的Kubernetes集群里很可能有成千上万个PVC，这就意味着运维人员必须得事先创建出成千上万个PV。更麻烦的是，随着新的PVC不断被提交，运维人员就不得不继续添加新的、能满足条件的PV，否则新的Pod就会因为PVC绑定不到PV而失败。在实际操作中，这几乎没办法靠人工做到。</p>\n<p>所以，Kubernetes为我们提供了一套可以自动创建PV的机制，即：Dynamic Provisioning。</p>\n<p>相比之下，前面人工管理PV的方式就叫作Static Provisioning。</p>\n<p>Dynamic Provisioning机制工作的核心，在于一个名叫StorageClass的API对象。</p>\n<p><strong>而StorageClass对象的作用，其实就是创建PV的模板。</strong></p>\n<p>具体地说，StorageClass对象会定义如下两个部分内容：</p>\n<ul>\n<li>第一，PV的属性。比如，存储类型、Volume的大小等等。</li>\n<li>第二，创建这种PV需要用到的存储插件。比如，Ceph等等。</li>\n</ul>\n<p>有了这样两个信息之后，Kubernetes就能够根据用户提交的PVC，找到一个对应的StorageClass了。然后，Kubernetes就会调用该StorageClass声明的存储插件，创建出需要的PV。</p>\n<p>举个例子，假如我们的Volume的类型是GCE的Persistent Disk的话，运维人员就需要定义一个如下所示的StorageClass：</p>\n<pre><code>apiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: block-service\nprovisioner: kubernetes.io/gce-pd\nparameters:\n  type: pd-ssd\n</code></pre>\n<p>在这个YAML文件里，我们定义了一个名叫block-service的StorageClass。</p>\n<p>这个StorageClass的provisioner字段的值是：<code>kubernetes.io/gce-pd</code>，这正是Kubernetes内置的GCE PD存储插件的名字。</p>\n<p>而这个StorageClass的parameters字段，就是PV的参数。比如：上面例子里的type=pd-ssd，指的是这个PV的类型是“SSD格式的GCE远程磁盘”。</p>\n<p>需要注意的是，由于需要使用GCE Persistent Disk，上面这个例子只有在GCE提供的Kubernetes服务里才能实践。如果你想使用我们之前部署在本地的Kubernetes集群以及Rook存储服务的话，你的StorageClass需要使用如下所示的YAML文件来定义：</p>\n<pre><code>apiVersion: ceph.rook.io/v1beta1\nkind: Pool\nmetadata:\n  name: replicapool\n  namespace: rook-ceph\nspec:\n  replicated:\n    size: 3\n---\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: block-service\nprovisioner: ceph.rook.io/block\nparameters:\n  pool: replicapool\n  #The value of &quot;clusterNamespace&quot; MUST be the same as the one in which your rook cluster exist\n  clusterNamespace: rook-ceph\n</code></pre>\n<p>在这个YAML文件中，我们定义的还是一个名叫block-service的StorageClass，只不过它声明使的存储插件是由Rook项目。</p>\n<p>有了StorageClass的YAML文件之后，运维人员就可以在Kubernetes里创建这个StorageClass了：</p>\n<pre><code>$ kubectl create -f sc.yaml\n</code></pre>\n<p>这时候，作为应用开发者，我们只需要在PVC里指定要使用的StorageClass名字即可，如下所示：</p>\n<pre><code>apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: claim1\nspec:\n  accessModes:\n    - ReadWriteOnce\n  storageClassName: block-service\n  resources:\n    requests:\n      storage: 30Gi\n</code></pre>\n<p>可以看到，我们在这个PVC里添加了一个叫作storageClassName的字段，用于指定该PVC所要使用的StorageClass的名字是：block-service。</p>\n<p>以Google Cloud为例。</p>\n<p>当我们通过kubectl create创建上述PVC对象之后，Kubernetes就会调用Google Cloud的API，创建出一块SSD格式的Persistent Disk。然后，再使用这个Persistent Disk的信息，自动创建出一个对应的PV对象。</p>\n<p>我们可以一起来实践一下这个过程（如果使用Rook的话下面的流程也是一样的，只不过Rook创建出的是Ceph类型的PV）：</p>\n<pre><code>$ kubectl create -f pvc.yaml\n</code></pre>\n<p>可以看到，我们创建的PVC会绑定一个Kubernetes自动创建的PV，如下所示：</p>\n<pre><code>$ kubectl describe pvc claim1\nName:           claim1\nNamespace:      default\nStorageClass:   block-service\nStatus:         Bound\nVolume:         pvc-e5578707-c626-11e6-baf6-08002729a32b\nLabels:         &lt;none&gt;\nCapacity:       30Gi\nAccess Modes:   RWO\nNo Events.\n</code></pre>\n<p>而且，通过查看这个自动创建的PV的属性，你就可以看到它跟我们在PVC里声明的存储的属性是一致的，如下所示：</p>\n<pre><code>$ kubectl describe pv pvc-e5578707-c626-11e6-baf6-08002729a32b\nName:            pvc-e5578707-c626-11e6-baf6-08002729a32b\nLabels:          &lt;none&gt;\nStorageClass:    block-service\nStatus:          Bound\nClaim:           default/claim1\nReclaim Policy:  Delete\nAccess Modes:    RWO\nCapacity:        30Gi\n...\nNo events.\n</code></pre>\n<p>此外，你还可以看到，这个自动创建出来的PV的StorageClass字段的值，也是block-service。<strong>这是因为，Kubernetes只会将StorageClass相同的PVC和PV绑定起来。</strong></p>\n<p>有了Dynamic Provisioning机制，运维人员只需要在Kubernetes集群里创建出数量有限的StorageClass对象就可以了。这就好比，运维人员在Kubernetes集群里创建出了各种各样的PV模板。这时候，当开发人员提交了包含StorageClass字段的PVC之后，Kubernetes就会根据这个StorageClass创建出对应的PV。</p>\n<blockquote>\n<p><a href=\"https://kubernetes.io/docs/concepts/storage/storage-classes/#provisioner\">Kubernetes的官方文档</a>里已经列出了默认支持Dynamic Provisioning的内置存储插件。而对于不在文档里的插件，比如NFS，或者其他非内置存储插件，你其实可以通过<a href=\"https://github.com/kubernetes-incubator/external-storage\">kubernetes-incubator/external-storage</a>这个库来自己编写一个外部插件完成这个工作。像我们之前部署的Rook，已经内置了external-storage的实现，所以Rook是完全支持Dynamic Provisioning特性的。</p>\n</blockquote>\n<p>需要注意的是，<strong>StorageClass并不是专门为了Dynamic Provisioning而设计的。</strong></p>\n<p>比如，在本篇一开始的例子里，我在PV和PVC里都声明了storageClassName=manual。而我的集群里，实际上并没有一个名叫manual的StorageClass对象。这完全没有问题，这个时候Kubernetes进行的是Static Provisioning，但在做绑定决策的时候，它依然会考虑PV和PVC的StorageClass定义。</p>\n<p>而这么做的好处也很明显：这个PVC和PV的绑定关系，就完全在我自己的掌控之中。</p>\n<p>这里，你可能会有疑问，我在之前讲解StatefulSet存储状态的例子时，好像并没有声明StorageClass啊？</p>\n<p>实际上，如果你的集群已经开启了名叫DefaultStorageClass的Admission Plugin，它就会为PVC和PV自动添加一个默认的StorageClass；<strong>否则，PVC的storageClassName的值就是“”，这也意味着它只能够跟storageClassName也是“”的PV进行绑定。</strong></p>\n<h2>总结</h2>\n<p>在今天的分享中，我为你详细解释了PVC和PV的设计与实现原理，并为你阐述了StorageClass到底是干什么用的。这些概念之间的关系，可以用如下所示的一幅示意图描述：</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/e8/d9/e8b2586e4e14eb54adf8ff95c5c18cd9.png?wh=968*679\" alt=\"\" /><br />\n从图中我们可以看到，在这个体系中：</p>\n<ul>\n<li>\n<p>PVC描述的，是Pod想要使用的持久化存储的属性，比如存储的大小、读写权限等。</p>\n</li>\n<li>\n<p>PV描述的，则是一个具体的Volume的属性，比如Volume的类型、挂载目录、远程存储服务器地址等。</p>\n</li>\n<li>\n<p>而StorageClass的作用，则是充当PV的模板。并且，只有同属于一个StorageClass的PV和PVC，才可以绑定在一起。</p>\n</li>\n</ul>\n<p>当然，StorageClass的另一个重要作用，是指定PV的Provisioner（存储插件）。这时候，如果你的存储插件支持Dynamic Provisioning的话，Kubernetes就可以自动为你创建PV了。</p>\n<p>基于上述讲述，为了统一概念和方便叙述，在本专栏中，我以后凡是提到“Volume”，指的就是一个远程存储服务挂载在宿主机上的持久化目录；而“PV”，指的是这个Volume在Kubernetes里的API对象。</p>\n<p>需要注意的是，这套容器持久化存储体系，完全是Kubernetes项目自己负责管理的，并不依赖于docker volume命令和Docker的存储插件。当然，这套体系本身就比docker volume命令的诞生时间还要早得多。</p>\n<h2>思考题</h2>\n<p>在了解了PV、PVC的设计和实现原理之后，你是否依然觉得它有“过度设计”的嫌疑？或者，你是否有更加简单、足以解决你90%需求的Volume的用法？</p>\n<p>感谢你的收听，欢迎你给我留言，也欢迎分享给更多的朋友一起阅读。</p>\n<p></p>\n","neighbors":{"left":{"article_title":"27 | 聪明的微创新：Operator工作原理解读","id":42493},"right":{"article_title":"29 | PV、PVC体系是不是多此一举？从本地持久化卷谈起","id":42819}},"comments":[{"had_liked":false,"id":35414,"user_name":"swordholder","can_delete":false,"product_type":"c1","uid":1002569,"ip_address":"","ucode":"3D1361126AD3CB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4c/49/d21c134f.jpg","comment_is_top":false,"comment_ctime":1540547997,"is_pvip":false,"replies":[{"id":"12624","content":"总结的好！后面还有更多概念！","user_name":"作者回复","comment_id":35414,"uid":"1218095","ip_address":"","utype":1,"ctime":1540605451,"user_name_real":"Geek_6ef93d"}],"discussion_count":11,"race_medal":0,"score":"1247081063837","product_id":100015201,"comment_content":"容器持久化存储涉及的概念比较多，试着总结一下整体流程。<br><br>用户提交请求创建pod，Kubernetes发现这个pod声明使用了PVC，那就靠PersistentVolumeController帮它找一个PV配对。<br><br>没有现成的PV，就去找对应的StorageClass，帮它新创建一个PV，然后和PVC完成绑定。<br><br>新创建的PV，还只是一个API 对象，需要经过“两阶段处理”变成宿主机上的“持久化 Volume”才真正有用：<br>第一阶段由运行在master上的AttachDetachController负责，为这个PV完成 Attach 操作，为宿主机挂载远程磁盘；<br>第二阶段是运行在每个节点上kubelet组件的内部，把第一步attach的远程磁盘 mount 到宿主机目录。这个控制循环叫VolumeManagerReconciler，运行在独立的Goroutine，不会阻塞kubelet主循环。<br><br>完成这两步，PV对应的“持久化 Volume”就准备好了，POD可以正常启动，将“持久化 Volume”挂载在容器内指定的路径。","like_count":290,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427530,"discussion_content":"总结的好！后面还有更多概念！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540605451,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2054990,"avatar":"","nickname":"海柔儿稀罕","note":"","ucode":"CBEEBEA2CAE8A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293043,"discussion_content":"总结的好，作者如果用这样的总结开篇那就容易理解和记忆。\n写的文章啰哩啰嗦","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1595421788,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1105161,"avatar":"https://static001.geekbang.org/account/avatar/00/10/dd/09/feca820a.jpg","nickname":"helloworld","note":"","ucode":"1EECCA0F43E278","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2054990,"avatar":"","nickname":"海柔儿稀罕","note":"","ucode":"CBEEBEA2CAE8A7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350026,"discussion_content":"这种总结读者去做更利于对知识的掌握","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1613663684,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":293043,"ip_address":""},"score":350026,"extra":""},{"author":{"id":1196899,"avatar":"https://static001.geekbang.org/account/avatar/00/12/43/63/9f54b104.jpg","nickname":"Yu","note":"","ucode":"6A942770D132F9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2054990,"avatar":"","nickname":"海柔儿稀罕","note":"","ucode":"CBEEBEA2CAE8A7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":405594,"discussion_content":"不会说话你就别评论","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1634606020,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":293043,"ip_address":""},"score":405594,"extra":""},{"author":{"id":2035956,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ecruTrMgzvqIs5iaWVibZw4Rxic42ZXGTflvOFHiaZEkf32Su01gDCWT8tdIcEoybg0ibAYU2Q8f9bleL7Q37fKguxQ/132","nickname":"做一个积极的跳蚤","note":"","ucode":"BBE367BBCB6C28","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1105161,"avatar":"https://static001.geekbang.org/account/avatar/00/10/dd/09/feca820a.jpg","nickname":"helloworld","note":"","ucode":"1EECCA0F43E278","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574087,"discussion_content":"这样需要时间啊，很多工作了开发者，被任务进度催得养成了吃快餐的习惯，我就是那种想吃快餐的，先会用，再来了解原理。先搞清楚原理，再用，就晚了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1653828124,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":350026,"ip_address":""},"score":574087,"extra":""}]},{"author":{"id":1512942,"avatar":"https://static001.geekbang.org/account/avatar/00/17/15/ee/f461168f.jpg","nickname":"Jay","note":"","ucode":"D9A45EA47908C9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577931,"discussion_content":"到位","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656418994,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1861215,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEIeXpiboJsprgwB80F0YKgPtPrXq1TY1eZDwsLaLOy3EJfVxdtia5vQRcW11sHbN8ZAQFwRUsNEiaVWg/132","nickname":"摇滚青年","note":"","ucode":"2C8C7593A4FE03","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549279,"discussion_content":"总结到位","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643807979,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1621432,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/WxLKJlXCibwqO92vB8XTicLQiahrhuUEqP7yT9dearZxLzbia7oMdsLmon5J4LJyTfIWchHY3bKfibm1lS1aZarZs4Q/132","nickname":"jie","note":"","ucode":"E93A1818AB2459","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544827,"discussion_content":"我怀疑我们读的不是同一篇文章 为啥我get不到这么多","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641726025,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2035956,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ecruTrMgzvqIs5iaWVibZw4Rxic42ZXGTflvOFHiaZEkf32Su01gDCWT8tdIcEoybg0ibAYU2Q8f9bleL7Q37fKguxQ/132","nickname":"做一个积极的跳蚤","note":"","ucode":"BBE367BBCB6C28","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1621432,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/WxLKJlXCibwqO92vB8XTicLQiahrhuUEqP7yT9dearZxLzbia7oMdsLmon5J4LJyTfIWchHY3bKfibm1lS1aZarZs4Q/132","nickname":"jie","note":"","ucode":"E93A1818AB2459","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":574085,"discussion_content":"你以为人家是小白来学得啊，很多人都是会了的，只是掌握不熟练，来复习加深理解的。所以，你看极客的很多评论里面，都能举一反三，说的很多东西作者都没讲过","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653827947,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":544827,"ip_address":""},"score":574085,"extra":""}]},{"author":{"id":1514175,"avatar":"https://static001.geekbang.org/account/avatar/00/17/1a/bf/872c2289.jpg","nickname":"Geek_Fang","note":"","ucode":"CCF0DBC6AC247F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394148,"discussion_content":"总结到位","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631757353,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":84296,"user_name":"Geek_e2f5e1","can_delete":false,"product_type":"c1","uid":1104400,"ip_address":"","ucode":"09EC4DD235F343","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLbswPFgMWmE28MQvjBHpAKg2Ny426dqRCgzp0ibyh0rr3nySEF621bWicySpAjATVEVyoibqloPqeLw/132","comment_is_top":false,"comment_ctime":1554821529,"is_pvip":false,"replies":[{"id":"31584","content":"格式化前肯定要检查啊，只有raw格式才需要格式化","user_name":"作者回复","comment_id":84296,"uid":"1218095","ip_address":"","utype":1,"ctime":1555697952,"user_name_real":"Geek_6ef93d"}],"discussion_count":1,"race_medal":0,"score":"143288742297","product_id":100015201,"comment_content":"老师，如果我原先存储上就有数据需要挂载进去，那格式化操作岂不是不能满足我的需求？","like_count":33,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446307,"discussion_content":"格式化前肯定要检查啊，只有raw格式才需要格式化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555697952,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":35492,"user_name":"vx:jiancheng_goon","can_delete":false,"product_type":"c1","uid":1218615,"ip_address":"","ucode":"FD34901B061825","user_header":"https://static001.geekbang.org/account/avatar/00/12/98/37/7f575aec.jpg","comment_is_top":false,"comment_ctime":1540625535,"is_pvip":false,"replies":[{"id":"12637","content":"paas最后就是各家基于kubernetes DIY。这样多好。","user_name":"作者回复","comment_id":35492,"uid":"1218095","ip_address":"","utype":1,"ctime":1540662465,"user_name_real":"Geek_6ef93d"}],"discussion_count":1,"race_medal":0,"score":"108914807935","product_id":100015201,"comment_content":"张老师，问一个比较空泛的问题。您之前是做paas平台的，今后的pass平台的发展方向是什么呢？当前做paas平台，最大的阻碍是什么？最大的价值又是什么呢？","like_count":25,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427552,"discussion_content":"paas最后就是各家基于kubernetes DIY。这样多好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540662465,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166925,"user_name":"耀","can_delete":false,"product_type":"c1","uid":1634462,"ip_address":"","ucode":"3692BEC242A399","user_header":"https://static001.geekbang.org/account/avatar/00/18/f0/9e/cf6570f7.jpg","comment_is_top":false,"comment_ctime":1577632130,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"87476978050","product_id":100015201,"comment_content":"没有过度设计，如果没有PVC，那么用户声明就会有涉及到具体的存储类型；存储类型一旦变化了所有的微服务都要跟着变化，所以PVC和PV要分离。如果没有storageclass,那么PVC和PV的绑定就需要完全有人工去指定，这将会成为整个集群最重复而低效的事情之一，所以这种设计是刚好的设计。","like_count":20},{"had_liked":false,"id":35676,"user_name":"tuxknight","can_delete":false,"product_type":"c1","uid":1000882,"ip_address":"","ucode":"B78FE23CB2641B","user_header":"","comment_is_top":false,"comment_ctime":1540737962,"is_pvip":false,"replies":[{"id":"12795","content":"scheduler里的volumezonechecker规则了解一下。","user_name":"作者回复","comment_id":35676,"uid":"1218095","ip_address":"","utype":1,"ctime":1540875375,"user_name_real":"Geek_6ef93d"}],"discussion_count":1,"race_medal":0,"score":"83145116586","product_id":100015201,"comment_content":"在公有云上使用 PV&#47;PVC 有个很重要的限制：块存储设备必须和实例在同一个可用区。在 Pod 没被创建的时候是不确定会被调度到哪个可用区，从而无法动态的创建出PV。这种问题要怎么处理？","like_count":19,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427621,"discussion_content":"scheduler里的volumezonechecker规则了解一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540875375,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":35774,"user_name":"Acter","can_delete":false,"product_type":"c1","uid":1082561,"ip_address":"","ucode":"EF747BEAD2A797","user_header":"https://static001.geekbang.org/account/avatar/00/10/84/c1/dfcad82a.jpg","comment_is_top":false,"comment_ctime":1540790530,"is_pvip":true,"replies":[{"id":"12797","content":"看它的api types定义","user_name":"作者回复","comment_id":35774,"uid":"1218095","ip_address":"","utype":1,"ctime":1540875462,"user_name_real":"Geek_6ef93d"}],"discussion_count":3,"race_medal":0,"score":"65965299970","product_id":100015201,"comment_content":"“所谓将一个 PV 与 PVC 进行“绑定”，其实就是将这个 PV 对象的名字，填在了 PVC 对象的 spec.volumeName 字段上。” <br>请问老师为什么在pvc的yaml文件中看不到这个字段呢？","like_count":15,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427662,"discussion_content":"看它的api types定义","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540875462,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2191611,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI4tSatQ0rLPu7KBPyxnicmNj0SznMibMK85mFcRKvZrjA7XzP48CKUx0pib4ial0icQRribpZJHw3UMzSA/132","nickname":"Geek_9acf33","note":"","ucode":"3C39B88C3B7813","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387196,"discussion_content":"kubectl get pvc nfs -o yaml    可以看到spec.volumeName\n","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1628046410,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1264392,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4b/08/52954cd7.jpg","nickname":"丁乐洪","note":"","ucode":"549CE57AB20B49","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351483,"discussion_content":"还是不理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614303931,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184347,"user_name":"坤","can_delete":false,"product_type":"c1","uid":1010922,"ip_address":"","ucode":"74E6838226A405","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6c/ea/ce9854a5.jpg","comment_is_top":false,"comment_ctime":1583295029,"is_pvip":false,"replies":[{"id":"72836","content":"这个取决于你的存储插件是什么类型的。支持 auto provisioning的就可以自动创建。","user_name":"作者回复","comment_id":184347,"uid":"1218095","ip_address":"","utype":1,"ctime":1584423316,"user_name_real":"Geek_6ef93d"}],"discussion_count":1,"race_medal":0,"score":"35943033397","product_id":100015201,"comment_content":"如果采用ceph  rbd StorageClass，Pod所在的node宕机后，在调度到另外一台Node上，这个过程中，k8s是会新node上重新创建PV吗？","like_count":8,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485982,"discussion_content":"这个取决于你的存储插件是什么类型的。支持 auto provisioning的就可以自动创建。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584423316,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":35912,"user_name":"yuliz","can_delete":false,"product_type":"c1","uid":1080693,"ip_address":"","ucode":"BFF5B4606559E6","user_header":"https://static001.geekbang.org/account/avatar/00/10/7d/75/c812597b.jpg","comment_is_top":false,"comment_ctime":1540860969,"is_pvip":false,"replies":[{"id":"12793","content":"volumeMounts有个subpath字段了解一下。可以，但不建议。","user_name":"作者回复","comment_id":35912,"uid":"1218095","ip_address":"","utype":1,"ctime":1540875288,"user_name_real":"Geek_6ef93d"}],"discussion_count":2,"race_medal":0,"score":"31605632041","product_id":100015201,"comment_content":"你好，我想请教下实际中的疑问点，如果我使用NFS作为共享存储，两个集群中的PV绑定NFS的同一目录，且这两个PV被pvc绑定，最终pod绑定pvc,当第二个pod绑定时会格式化nfs的目录，导致之前的pod数据丢失么？两个集群的pv能共用一个nfs目录和同一rbd么？","like_count":7,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427705,"discussion_content":"volumeMounts有个subpath字段了解一下。可以，但不建议。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540875288,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1145779,"avatar":"https://static001.geekbang.org/account/avatar/00/11/7b/b3/194f7f90.jpg","nickname":"没伞的孩子得使劲奔跑","note":"","ucode":"D015B4EF12E536","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":402692,"discussion_content":"挂载nfs时，不会格式化，老师文章说的有","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633931912,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":35287,"user_name":"GR","can_delete":false,"product_type":"c1","uid":1218918,"ip_address":"","ucode":"5879553BD360D6","user_header":"https://static001.geekbang.org/account/avatar/00/12/99/66/e283b8b2.jpg","comment_is_top":false,"comment_ctime":1540511453,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"31605282525","product_id":100015201,"comment_content":"一个pv可以对应几个pvc，一对一吗？<br>可以创建一个大的pv然后每个应用有自己的pvc，存储路径通过subpath来区分，是否可行呢？","like_count":7,"discussions":[{"author":{"id":1643296,"avatar":"https://static001.geekbang.org/account/avatar/00/19/13/20/2d22b331.jpg","nickname":"H.Z","note":"","ucode":"728417BD5B4DA8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392979,"discussion_content":"k8s实行一夫一妻制","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1631193681,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1103556,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d6/c4/27343f76.jpg","nickname":"SHift","note":"","ucode":"36BD4A38F7FA2C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288813,"discussion_content":"不可以的，pv和pvc是一对一的关系","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593877082,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1807117,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM6GcSnUMzR0H9haiaAxssjibGLQMLAsPKonh50g9W2Iz38LcZNGH39HPaANLtovXTp1YvsINIZoH6F0iaSGuxJMXZS/132","nickname":"Geek_10d981","note":"","ucode":"AF4E774D17F7B9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":251605,"discussion_content":"VERITAS 的PLEX就是这样做的，  IBM，HP的 MIRROR DISK 也是类似的方法。（LVEXTEND -M 1）SUN的技术类似一个硬盘划分区SLICE,不过SUN的磁盘管理比较烂，，，这些技术在成熟的UNIX厂家，在LVM做的不错，但是在K8S里面没有必要使用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588089044,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1133022,"avatar":"https://static001.geekbang.org/account/avatar/00/11/49/de/aae33053.jpg","nickname":"寸光寸阴","note":"","ucode":"793E4BB15595FF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":26833,"discussion_content":"同问，是否可以呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570621256,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1218918,"avatar":"https://static001.geekbang.org/account/avatar/00/12/99/66/e283b8b2.jpg","nickname":"GR","note":"","ucode":"5879553BD360D6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1133022,"avatar":"https://static001.geekbang.org/account/avatar/00/11/49/de/aae33053.jpg","nickname":"寸光寸阴","note":"","ucode":"793E4BB15595FF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36769,"discussion_content":"一对一的，可以用一个pv,然后用sub区分","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571419069,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":26833,"ip_address":""},"score":36769,"extra":""}]},{"author":{"id":1003790,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/51/0e/000f9f42.jpg","nickname":"zy","note":"","ucode":"EBD3A4BBC44D69","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5291,"discussion_content":"如果嫌pv创建维护麻烦，可以考虑flexvolume lvm的方案呀.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566139387,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42941,"user_name":"夕月","can_delete":false,"product_type":"c1","uid":1045925,"ip_address":"","ucode":"A7087292BE3C4B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f5/a5/f8210f04.jpg","comment_is_top":false,"comment_ctime":1543115488,"is_pvip":false,"replies":[{"id":"15422","content":"你把api对象和yaml文件搞混了？","user_name":"作者回复","comment_id":42941,"uid":"1218095","ip_address":"","utype":1,"ctime":1543192617,"user_name_real":"Geek_6ef93d"}],"discussion_count":1,"race_medal":0,"score":"27312919264","product_id":100015201,"comment_content":"所谓将一个 PV 与 PVC 进行“绑定”，其实就是将这个PV 对象的名字，填在了 PVC 对象的 spec.volumeName 字段上，这个好像在yaml文件里没有提现啊，只有storageClassName是一样的","like_count":6,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430253,"discussion_content":"你把api对象和yaml文件搞混了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543192617,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43084,"user_name":"jssfy","can_delete":false,"product_type":"c1","uid":1137238,"ip_address":"","ucode":"F16353CFE607B7","user_header":"https://static001.geekbang.org/account/avatar/00/11/5a/56/115c6433.jpg","comment_is_top":false,"comment_ctime":1543158520,"is_pvip":false,"replies":[{"id":"15416","content":"要看存储插件是否支持。pv只是逻辑概念，你的数据是在远程存储里的，所以resize是存储插件的功能。","user_name":"作者回复","comment_id":43084,"uid":"1218095","ip_address":"","utype":1,"ctime":1543192442,"user_name_real":"Geek_6ef93d"}],"discussion_count":1,"race_medal":0,"score":"23017995000","product_id":100015201,"comment_content":"请问<br>1. 同一集群的多个pod可否同时挂载同一个pv的同一个subpath<br>2. 如果pv写满了如何扩容","like_count":5,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430292,"discussion_content":"要看存储插件是否支持。pv只是逻辑概念，你的数据是在远程存储里的，所以resize是存储插件的功能。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543192442,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":38721,"user_name":"jkmzg","can_delete":false,"product_type":"c1","uid":1160204,"ip_address":"","ucode":"847C3906A3225B","user_header":"https://static001.geekbang.org/account/avatar/00/11/b4/0c/93fd5c51.jpg","comment_is_top":false,"comment_ctime":1542114358,"is_pvip":false,"replies":[{"id":"13872","content":"带id，不冲突","user_name":"作者回复","comment_id":38721,"uid":"1218095","ip_address":"","utype":1,"ctime":1542122141,"user_name_real":"Geek_6ef93d"}],"discussion_count":1,"race_medal":0,"score":"18721983542","product_id":100015201,"comment_content":"请问下从同一个pod spec 创建出来的不同pod中，pvc相同，会不会冲突？k8s的机制是什么呢？","like_count":4,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428782,"discussion_content":"带id，不冲突","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542122141,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":38025,"user_name":"Geek_89bbab","can_delete":false,"product_type":"c1","uid":1156607,"ip_address":"","ucode":"B3110D5B3C9500","user_header":"https://static001.geekbang.org/account/avatar/00/11/a5/ff/6201122c.jpg","comment_is_top":false,"comment_ctime":1541867530,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"18721736714","product_id":100015201,"comment_content":" kubectl describe persistentvolumeclaim&#47;claim1<br>Name:          claim1<br>Namespace:     default<br>StorageClass:  block-service<br>Status:        Pending<br>Volume:        <br>Labels:        &lt;none&gt;<br>Annotations:   .......<br>Events:<br>  Type     Reason              Age                 From                                                                                         Message<br>  ----     ------              ----                ----                                                                                         -------<br>  Warning  ProvisioningFailed  10m (x13 over 23m)  ceph.rook.io&#47;block rook-ceph-operator-5bfbf654db-ncgdf 97142e78-de86-11e8-a7d1-e6678be2ea25  Failed to provision volume with StorageClass &quot;block-service&quot;: Failed to create rook block image replicapool&#47;pvc-5b68d13b-e501-11e8-8b01-00163e0cf240: failed to create image pvc-5b68d13b-e501-11e8-8b01-00163e0cf240 in pool replicapool of size 2147483648: Failed to complete &#39;&#39;: exit status 2. rbd: error opening pool &#39;replicapool&#39;: (2) No such file or directory<br>. output:<br>  Normal  Provisioning          5m (x15 over 23m)   ceph.rook.io&#47;block rook-ceph-operator-5bfbf654db-ncgdf 97142e78-de86-11e8-a7d1-e6678be2ea25  External provisioner is provisioning volume for claim &quot;default&#47;claim1&quot;<br>  Normal  ExternalProvisioning  2m (x331 over 23m)  persistentvolume-controller                                                                  waiting for a volume to be created, either by external provisioner &quot;ceph.rook.io&#47;block&quot; or manually created by system administrator<br><br>老师，这个是什么原因导致的？ 没有这个文件或者目录?","like_count":4,"discussions":[{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":182574,"discussion_content":"最近也遇到了该问题,折腾了一天多,硬是没解决.不知道是为什么.\n看ceph status里面就是没有可用空间.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582436948,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1156607,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a5/ff/6201122c.jpg","nickname":"Geek_89bbab","note":"","ucode":"B3110D5B3C9500","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":182667,"discussion_content":"可能是硬盘格式问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582446617,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":182574,"ip_address":""},"score":182667,"extra":""},{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1156607,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a5/ff/6201122c.jpg","nickname":"Geek_89bbab","note":"","ucode":"B3110D5B3C9500","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":182735,"discussion_content":"感谢你的回复。\n\n我最开始是在阿里云是测试的，发现行不通，后来原样在linode上部署了一次。依旧不行。\n\n后来是在linode上用“Linode Block Storage CSI Driver”的方式，实现了动态卷供给的功能。\n\n我记得2018年专栏刚出时，跟着老师的步骤操作，是可以使用rook-ceph是使用动态卷StorageClass的。\n\n到现在，我也没搞明白，居然是什么原因导致的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1582452400,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":182667,"ip_address":""},"score":182735,"extra":""},{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1156607,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a5/ff/6201122c.jpg","nickname":"Geek_89bbab","note":"","ucode":"B3110D5B3C9500","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":182738,"discussion_content":"阿里云上的磁盘格式是ext4","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582452491,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":182667,"ip_address":""},"score":182738,"extra":""}]},{"author":{"id":1265940,"avatar":"https://static001.geekbang.org/account/avatar/00/13/51/14/c800c859.jpg","nickname":"N0mansky","note":"","ucode":"86DC16096C4F5F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":149,"discussion_content":"老哥你这个最后是怎么解决的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561178581,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1156607,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a5/ff/6201122c.jpg","nickname":"Geek_89bbab","note":"","ucode":"B3110D5B3C9500","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1265940,"avatar":"https://static001.geekbang.org/account/avatar/00/13/51/14/c800c859.jpg","nickname":"N0mansky","note":"","ucode":"86DC16096C4F5F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":182668,"discussion_content":"可能是硬盘格式问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582446635,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":149,"ip_address":""},"score":182668,"extra":""}]}]},{"had_liked":false,"id":35655,"user_name":"huan","can_delete":false,"product_type":"c1","uid":1012286,"ip_address":"","ucode":"46CB95F6E4E5FF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/72/3e/534db55d.jpg","comment_is_top":false,"comment_ctime":1540730674,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18720599858","product_id":100015201,"comment_content":"老师的问题的思考，90%都是动态申请存储的，所以我觉得pv和pvc都去掉，只有storage class和必要的参数（空间大小和读写属性 ）放在pod中即可","like_count":4},{"had_liked":false,"id":35409,"user_name":"IOVE.-Minn","can_delete":false,"product_type":"c1","uid":1227784,"ip_address":"","ucode":"9C637EEEF64057","user_header":"https://static001.geekbang.org/account/avatar/00/12/bc/08/c43f85d9.jpg","comment_is_top":false,"comment_ctime":1540544503,"is_pvip":false,"replies":[{"id":"12618","content":"是啊，都是第三方的","user_name":"作者回复","comment_id":35409,"uid":"1218095","ip_address":"","utype":1,"ctime":1540592479,"user_name_real":"Geek_6ef93d"}],"discussion_count":1,"race_medal":0,"score":"18720413687","product_id":100015201,"comment_content":"请问，现在的NFS也是有storageclass也是可以动态配置pv的啊，但是在官方，体现的是没有的啊？这个是第三方开发的么？provisioner: fuseim.pri&#47;ifs","like_count":4,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427529,"discussion_content":"是啊，都是第三方的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540592479,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319501,"user_name":"重洋","can_delete":false,"product_type":"c1","uid":1698679,"ip_address":"","ucode":"B896A81B579BEA","user_header":"https://static001.geekbang.org/account/avatar/00/19/eb/77/ffd16123.jpg","comment_is_top":false,"comment_ctime":1635837335,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14520739223","product_id":100015201,"comment_content":"持久化存储的控制器 Volume Controller，kube-controller-manager 的一部分，运行在 master节点。其中包括控制循环 PersistentVolumeController、AttachDetachController。<br><br>PV、PVC匹配控制器 PersistentVolumeController ：执行控制循环，为每一个 PVC 遍历挑选可用的的 PV 进行绑定。<br>绑定：将 PV 对象的名字，填在 PVC 对象的 spec.volumeName 字段上。<br>匹配条件：<br>1.spec字段符合要求。<br>2.storageClassName一致。<br><br>Volume 类型是远程存储时：<br>一、远程存储挂载至宿主机(PV的准备流程)，分为两阶段：<br>第一阶段（Attach）（挂载磁盘）：AttachDetachController 不断地检查每一个 Pod 对应的 PV 和这个 Pod 所在宿主机之间挂载情况。从而决定，是否需要对这个 PV 进行 Attach（或者 Dettach）操作，为虚拟机挂载远程磁盘。Kubernetes 提供的可用参数是 nodeName，即宿主机的名字。<br>第二阶段（Mount）（mount至宿主机）：VolumeManagerReconciler，执行mount操作（必须发生再Pod宿主机上，所以是 kubelet 组件的一部分），将磁盘设备格式化并挂载到 Volume 宿主机目录。Kubernetes 提供的可用参数是 dir，即 Volume 的宿主机目录。<br>$ mount -t nfs &lt;NFS服务器地址&gt;:&#47; &#47;var&#47;lib&#47;kubelet&#47;pods&#47;&lt;Pod的ID&gt;&#47;volumes&#47;kubernetes.io~&lt;Volume类型&gt;&#47;&lt;Volume名字&gt; <br><br>二、Pod 与持久化Volume宿主机目录挂载：<br>kubelet 为 Volume 创建的默认宿主机目录：&#47;var&#47;lib&#47;kubelet&#47;pods&#47;&lt;Pod的ID&gt;&#47;volumes&#47;kubernetes.io~&lt;Volume类型&gt;&#47;&lt;Volume名字&gt;<br>kubelet 把 Volume 目录通过 CRI 里的 Mounts 参数，传递给 Docker，为 Pod 里的容器挂载这个“持久化”的 Volume 。<br>$ docker run -v &#47;var&#47;lib&#47;kubelet&#47;pods&#47;&lt;Pod的ID&gt;&#47;volumes&#47;kubernetes.io~&lt;Volume类型&gt;&#47;&lt;Volume名字&gt;:&#47;&lt;容器内的目标目录&gt; 我的镜像 ...<br><br><br>Static Provisioning：手动创建 PV 与 PVC，StorageClassName 仅作为匹配字段。<br>Dynamic Provisioning：通过 StorageClass 自动创建 PV、自动绑定 PV 与 PVC。<br>StorageClass 定义插件、PV 属性，k8s根据 PVC 寻找 StorageClass，StorageClass 创建 PV。<br>PVC——StorageClass——PV。<br><br><br>Local Persistent Volume：Volume直接使用本地磁盘。<br>优点：本地磁盘读写性能更好。<br>缺点：宕机数据丢失，需要恢复机制与定期备份。<br><br>先准备好本地磁盘，然后延迟绑定。<br>延迟绑定：StorageClass volumeBindingMode: WaitForFirstConsumer，将 PV、PVC 的绑定推迟到 Pod 调度的时候，从而保证绑定结果不会影响 Pod 的正常调度。<br>1.PersistentVolumeController 遍历发现通过 StorageClass 关联的可以与 PVC 绑定的 PV；<br>2.第一个声明使用该 PVC 的 Pod 出现在调度器之后，调度器综合考虑这个 PVC 跟哪个 PV 绑定。<br>","like_count":3},{"had_liked":false,"id":212366,"user_name":"Geek_10d981","can_delete":false,"product_type":"c1","uid":1807117,"ip_address":"","ucode":"AF4E774D17F7B9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM6GcSnUMzR0H9haiaAxssjibGLQMLAsPKonh50g9W2Iz38LcZNGH39HPaANLtovXTp1YvsINIZoH6F0iaSGuxJMXZS/132","comment_is_top":false,"comment_ctime":1588089608,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10178024200","product_id":100015201,"comment_content":"其实老师最后的提问仅仅是让大家深入思考的，没有固定的解答。我尝试理解：这种分层的概念其实在高端存储用的很多，比如IBM的SVC,HDS的LUSE，EMC的TIRE，很多存储厂家的THIN PROVISION都是分层的概念，中端的NETAPP也是类似的技术（NETAPP横着切 一刀，竖着再切一刀，IBM DS7000，,8000系列也是这样，HP 3PAR也是彻底分层），当然，分层的时候要考虑SAN的结构和MULTIPATH。分层的好处很多，不仅仅只是解耦，也是对磁盘的利用率，动态调节，性能诊断更灵活。还有，HDS,EMC等厂家可以详细的性能诊断，因为高端存储都有自己的高速缓存（32G-128G，还有CROSS BAR技术），很多存储的高级功能必须是要分层才能实现的。","like_count":2},{"had_liked":false,"id":51844,"user_name":"小熹","can_delete":false,"product_type":"c1","uid":1218284,"ip_address":"","ucode":"05B12C9FAC2DD4","user_header":"https://static001.geekbang.org/account/avatar/00/12/96/ec/5c53f9e5.jpg","comment_is_top":false,"comment_ctime":1545269720,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10135204312","product_id":100015201,"comment_content":"用CSI标准实现第三方存储，把存储卷的管理全部托付给第三方，就不用自己纠结pv pvc的概念了","like_count":2},{"had_liked":false,"id":38084,"user_name":"Geek_89bbab","can_delete":false,"product_type":"c1","uid":1156607,"ip_address":"","ucode":"B3110D5B3C9500","user_header":"https://static001.geekbang.org/account/avatar/00/11/a5/ff/6201122c.jpg","comment_is_top":false,"comment_ctime":1541927861,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10131862453","product_id":100015201,"comment_content":"有人执行pvc有遇到这样的错误吗？<br>Failed to provision volume with StorageClass &quot;rook-ceph-block&quot;: Failed to create rook block image replicapool&#47;pvc-0574eb19-e58c-11e8-8b01-00163e0cf240: failed to create image pvc-0574eb19-e58c-11e8-8b01-00163e0cf240 in pool replicapool of size 2147483648: Failed to complete &#39;&#39;: exit status 2. rbd: error opening pool &#39;replicapool&#39;: (2) No such file or directory<br>","like_count":2},{"had_liked":false,"id":35316,"user_name":"虎虎❤️","can_delete":false,"product_type":"c1","uid":1086535,"ip_address":"","ucode":"157F261E80291A","user_header":"https://static001.geekbang.org/account/avatar/00/10/94/47/75875257.jpg","comment_is_top":false,"comment_ctime":1540516452,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10130451044","product_id":100015201,"comment_content":"@GR 是一一对应的关系，可以创建一个大的pvc共用，用子目录区别开。前提是在一个namespace下。<br>也可以开发插件，支持动态创建pv","like_count":2},{"had_liked":false,"id":295512,"user_name":"然谛","can_delete":false,"product_type":"c1","uid":2636464,"ip_address":"","ucode":"08D61F39742126","user_header":"https://static001.geekbang.org/account/avatar/00/28/3a/b0/a4e4c5d1.jpg","comment_is_top":false,"comment_ctime":1622456351,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5917423647","product_id":100015201,"comment_content":"如何理解读写模式ReadWriteMany,ReadWriteOnce,ReadOnlyMany，这块有点混乱，涉及的场景有哪些","like_count":1},{"had_liked":false,"id":281618,"user_name":"微末凡尘","can_delete":false,"product_type":"c1","uid":1099525,"ip_address":"","ucode":"25EDFD0914D0F4","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/05/19c5c255.jpg","comment_is_top":false,"comment_ctime":1614829407,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5909796703","product_id":100015201,"comment_content":"pvc是接口，不负责具体的实现<br>pv是具体的实现，存储分为很多种，nfs，cefh等等<br>storageClass负责自动化创建pv","like_count":1},{"had_liked":false,"id":102462,"user_name":"Dem","can_delete":false,"product_type":"c1","uid":1032595,"ip_address":"","ucode":"C09FF65D904A75","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c1/93/e8bfb26e.jpg","comment_is_top":false,"comment_ctime":1560225657,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5855192953","product_id":100015201,"comment_content":"直接使用范例中的web-frontend的yaml进行kubectl apply -f的时候会遇到报错：<br>```<br>error: error when retrieving current configuration of:<br>Resource: &quot;&#47;v1, Resource=pods&quot;, GroupVersionKind: &quot;&#47;v1, Kind=Pod&quot;<br>Name: &quot;&quot;, Namespace: &quot;default&quot;<br>Object: &amp;{map[&quot;apiVersion&quot;:&quot;v1&quot; &quot;kind&quot;:&quot;Pod&quot; &quot;metadata&quot;:map[&quot;annotations&quot;:map[&quot;kubectl.kubernetes.io&#47;last-applied-configuration&quot;:&quot;&quot;] &quot;labels&quot;:map[&quot;role&quot;:&quot;web-frontend&quot;] &quot;namespace&quot;:&quot;default&quot;] &quot;spec&quot;:map[&quot;containers&quot;:[map[&quot;image&quot;:&quot;nginx&quot; &quot;name&quot;:&quot;web&quot; &quot;ports&quot;:[map[&quot;containerPort&quot;:&#39;P&#39; &quot;name&quot;:&quot;web&quot;]] &quot;volumeMounts&quot;:[map[&quot;mountPath&quot;:&quot;&#47;usr&#47;share&#47;nginx&#47;html&quot; &quot;name&quot;:&quot;nfs&quot;]]]] &quot;volumes&quot;:[map[&quot;name&quot;:&quot;nfs&quot; &quot;persistentVolumeClaim&quot;:map[&quot;claimName&quot;:&quot;nfs&quot;]]]]]}<br>from server for: &quot;test-pod-pvc.yaml&quot;: resource name may not be empty<br>```<br>需要给metadata加一个name，例如：<br>```<br><br>apiVersion: v1<br>kind: Pod<br>metadata:<br>  labels:<br>    role: web-frontend<br>  name: web-frontend<br>```<br>不知道是不是kubernetes版本的差异。","like_count":1},{"had_liked":false,"id":47810,"user_name":"初学者","can_delete":false,"product_type":"c1","uid":1042833,"ip_address":"","ucode":"9471A905D07CE1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e9/91/4219d305.jpg","comment_is_top":false,"comment_ctime":1544206709,"is_pvip":true,"replies":[{"id":"17506","content":"文中已经解释了啊，这跟node没关系","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1544533505,"ip_address":"","comment_id":47810,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5839174005","product_id":100015201,"comment_content":"文中提到attach 阶段是将远程盘挂载到宿主机上，这个操作不是应该在node 上做更合适吗？为啥会放在AD controller 中？","like_count":1,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431894,"discussion_content":"文中已经解释了啊，这跟node没关系","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544533505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1580926,"avatar":"","nickname":"ch_ort","note":"","ucode":"B79746E687F29E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318784,"discussion_content":"这块的确有点难理解。  &#34;attach&#34;是挂载磁盘到虚拟机，文章又说跟node没关系？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603849689,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2254917,"avatar":"https://static001.geekbang.org/account/avatar/00/22/68/45/ddf89612.jpg","nickname":"bestgopher","note":"","ucode":"D89735C8CA9C6E","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":1580926,"avatar":"","nickname":"ch_ort","note":"","ucode":"B79746E687F29E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543966,"discussion_content":"mount才是挂载，attach只是申请和格式化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641367910,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":318784,"ip_address":""},"score":543966,"extra":""}]}]},{"had_liked":false,"id":36737,"user_name":"阿川","can_delete":false,"product_type":"c1","uid":1218993,"ip_address":"","ucode":"C43211660D7C66","user_header":"https://static001.geekbang.org/account/avatar/00/12/99/b1/5aab73b3.jpg","comment_is_top":false,"comment_ctime":1541299023,"is_pvip":false,"replies":[{"id":"13033","content":"自己写nfs的存储插件","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1541338537,"ip_address":"","comment_id":36737,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5836266319","product_id":100015201,"comment_content":"老师有一个问题需要请教，1、比如创建一个nfs的pv，但是nfs服务器不存在，此时pv也能创建成功。2、创建pvc也能跟pv关联。3、在真实创建pod使用该pvc会报错。这种情况有什么办法避免吗，比如在创建pv时就发现后端存储不存在","like_count":1,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427991,"discussion_content":"自己写nfs的存储插件","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541338537,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":36702,"user_name":"hhhhhh","can_delete":false,"product_type":"c1","uid":1017443,"ip_address":"","ucode":"0826CE1D2C9F1A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/86/63/0112cc96.jpg","comment_is_top":false,"comment_ctime":1541250360,"is_pvip":false,"replies":[{"id":"13037","content":"当然要先检查是否格式化过","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1541338806,"ip_address":"","comment_id":36702,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5836217656","product_id":100015201,"comment_content":"老师好，如果第二阶段肯定会格式化，那之前存储在volume中的数据不就丢失了？ ","like_count":1,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427977,"discussion_content":"当然要先检查是否格式化过","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541338806,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":36403,"user_name":"小白","can_delete":false,"product_type":"c1","uid":1199969,"ip_address":"","ucode":"7ACE14C0C4AE61","user_header":"https://static001.geekbang.org/account/avatar/00/12/4f/61/00083e41.jpg","comment_is_top":false,"comment_ctime":1541083197,"is_pvip":false,"replies":[{"id":"13046","content":"在源码里搜那个词","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1541339421,"ip_address":"","comment_id":36403,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5836050493","product_id":100015201,"comment_content":"老师，scheduler里的volumezonechecker规则谷歌不到，可以贴个学习地址吗","like_count":1,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427851,"discussion_content":"在源码里搜那个词","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541339421,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":35331,"user_name":"虎虎❤️","can_delete":false,"product_type":"c1","uid":1086535,"ip_address":"","ucode":"157F261E80291A","user_header":"https://static001.geekbang.org/account/avatar/00/10/94/47/75875257.jpg","comment_is_top":false,"comment_ctime":1540518666,"is_pvip":false,"replies":[{"id":"12620","content":"是mount","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1540593425,"ip_address":"","comment_id":35331,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5835485962","product_id":100015201,"comment_content":"文章中为GCE 块存储 准备持久化目录第二阶段的挂载命令是不是应该用mount。创建目录不是之前kubelet已经做过了？","like_count":1,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427515,"discussion_content":"是mount","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540593425,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":360837,"user_name":"第一装甲集群司令克莱斯特","can_delete":false,"product_type":"c1","uid":1265707,"ip_address":"北京","ucode":"4E8FBB23AD860B","user_header":"https://static001.geekbang.org/account/avatar/00/13/50/2b/2344cdaa.jpg","comment_is_top":false,"comment_ctime":1666916302,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1666916302","product_id":100015201,"comment_content":"补充知识。","like_count":0},{"had_liked":false,"id":346793,"user_name":"蒋英姿","can_delete":false,"product_type":"c1","uid":1631213,"ip_address":"","ucode":"58D01F252BF902","user_header":"https://static001.geekbang.org/account/avatar/00/18/e3/ed/ae066e36.jpg","comment_is_top":false,"comment_ctime":1653441277,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653441277","product_id":100015201,"comment_content":"PV和PVC绑定后，会将pv的名字填在pvc对象的spec.volumeName字段上。那pv对象的spec.claimRef.name字段值，会同时填上pvc的name么？","like_count":0},{"had_liked":false,"id":344877,"user_name":"树明","can_delete":false,"product_type":"c1","uid":1589488,"ip_address":"","ucode":"2B92EC65CE00F9","user_header":"https://static001.geekbang.org/account/avatar/00/18/40/f0/91490946.jpg","comment_is_top":false,"comment_ctime":1651830735,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651830735","product_id":100015201,"comment_content":"“如果你的 Volume 类型是远程块存储，比如 Google Cloud 的 Persistent Disk（GCE 提供的远程磁盘服务），那么 kubelet 就需要先调用 Goolge Cloud 的 API，将它所提供的 Persistent Disk 挂载到 Pod 所在的宿主机上。”<br>...<br>“需要注意，作为一个 Kubernetes 内置的控制器，Volume Controller 自然是 kube-controller-manager 的一部分。所以，AttachDetachController 也一定是运行在 Master 节点上的。当然，Attach 操作只需要调用公有云或者具体存储项目的 API，并不需要在具体的宿主机上执行操作，所以这个设计没有任何问题。”<br><br>看完这篇文章我知道了Attach操作事实上是由controller-manager执行的，这也能解释为什么controller-manager内部没有rbd命令的话我们创建rbd卷会报一个错。<br><br>但上面这两段话是不是有点前后矛盾了？","like_count":0},{"had_liked":false,"id":327305,"user_name":"GeekZd","can_delete":false,"product_type":"c1","uid":1039886,"ip_address":"","ucode":"D2AA3305A6AFE8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/de/0e/af8dd241.jpg","comment_is_top":false,"comment_ctime":1640055562,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1640055562","product_id":100015201,"comment_content":"pvc 不是许可证吗，赋予pod访问pv的权限","like_count":0},{"had_liked":false,"id":324440,"user_name":"zixuan","can_delete":false,"product_type":"c1","uid":1131300,"ip_address":"","ucode":"C72920DD05B074","user_header":"https://static001.geekbang.org/account/avatar/00/11/43/24/3f9f7c70.jpg","comment_is_top":false,"comment_ctime":1638435407,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638435407","product_id":100015201,"comment_content":"配置视图: yaml, 一个 name相同的pvc可以被用于不同pod<br>API对象(instance)试图: \b逻辑视图, 一个pod对象对应一个pvc对象，一个pvc对象对应一个pv<br>物理试图: 一个pod实例对应一个volumn目录, 这些目录有可能是指向同一个远程设备的相同位置","like_count":0},{"had_liked":false,"id":324390,"user_name":"tale","can_delete":false,"product_type":"c1","uid":1813691,"ip_address":"","ucode":"143B4CA752A783","user_header":"https://static001.geekbang.org/account/avatar/00/1b/ac/bb/db0f9d8c.jpg","comment_is_top":false,"comment_ctime":1638413114,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638413114","product_id":100015201,"comment_content":"如果只是解决一家公司内部的存储问题，“volumes”中直接指定StorageClass是不是也挺方便的，可以省去pvc的定义","like_count":0},{"had_liked":false,"id":316683,"user_name":"陈斯佳","can_delete":false,"product_type":"c1","uid":1259323,"ip_address":"","ucode":"C236F874FC767A","user_header":"https://static001.geekbang.org/account/avatar/00/13/37/3b/495e2ce6.jpg","comment_is_top":false,"comment_ctime":1634509009,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634509009","product_id":100015201,"comment_content":"第二十八课:PV、PVC、StorageClass，这些到底在说啥？<br>PV描述的是持久化存储数据卷，PVC描述的则是Pod所希望使用的持久化存储的属性。<br><br>所谓的“持久化”指的是容器在这个目录里写入的文件都会保存在远程存储中，从而使这个目录具备了“持久性”。<br><br>持久化宿主机的过程有两个阶段，第一个阶段是Attach，挂载远程磁盘，第二阶段mount，格式化挂载的磁盘。<br><br>","like_count":0},{"had_liked":false,"id":304643,"user_name":"VenFox","can_delete":false,"product_type":"c1","uid":1002112,"ip_address":"","ucode":"11F08AD5685505","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4a/80/b1862ca3.jpg","comment_is_top":false,"comment_ctime":1627530482,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1627530482","product_id":100015201,"comment_content":"老师，pvc绑定pv的动作是发生在创建pvc对象还是在pod声明pvc的时候？","like_count":0},{"had_liked":false,"id":293405,"user_name":"罗峰","can_delete":false,"product_type":"c1","uid":1218501,"ip_address":"","ucode":"5F3D6AF8F28322","user_header":"https://static001.geekbang.org/account/avatar/00/12/97/c5/84491beb.jpg","comment_is_top":false,"comment_ctime":1621384764,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621384764","product_id":100015201,"comment_content":"pv pvc不同的名字有隔离功能，可能放到nfs不同目录底下","like_count":0},{"had_liked":false,"id":289222,"user_name":"Usher","can_delete":false,"product_type":"c1","uid":1183790,"ip_address":"","ucode":"1E37E50A4473AB","user_header":"https://static001.geekbang.org/account/avatar/00/12/10/2e/3587a44d.jpg","comment_is_top":false,"comment_ctime":1618922621,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618922621","product_id":100015201,"comment_content":"请教张大：为什么一个pvc只能绑定一个pv？有参考资料吗？我看了这个链接https:&#47;&#47;docs.openshift.com&#47;dedicated&#47;4&#47;storage&#47;understanding-persistent-storage.html，也只是说了必须这样做，但没说为什么要这样做？<br>我的理解PV是Node级别的资源，没法指定namespace，而PVC却可以通过namespace做隔离。它这样做难道为了防止不同namespace的PVC绑定到PV？","like_count":0},{"had_liked":false,"id":284540,"user_name":"姜尧","can_delete":false,"product_type":"c1","uid":2405411,"ip_address":"","ucode":"D813E046DD81E8","user_header":"https://static001.geekbang.org/account/avatar/00/24/b4/23/0e296758.jpg","comment_is_top":false,"comment_ctime":1616325805,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1616325805","product_id":100015201,"comment_content":"我为啥还是觉得PV没必要呢？<br>PVC负责要资源，<br>SC提供单位资源的模板，不行么？","like_count":0,"discussions":[{"author":{"id":1133036,"avatar":"https://static001.geekbang.org/account/avatar/00/11/49/ec/6bae1fd7.jpg","nickname":"哇咔咔","note":"","ucode":"54BF877836C591","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531977,"discussion_content":"我觉得没有\npv是ok的，把pv的字段全部往pvc里面填。我个人觉得这只是从软件的分层来进行设计的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637487035,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":283635,"user_name":"风过留痕","can_delete":false,"product_type":"c1","uid":1659261,"ip_address":"","ucode":"F13405AD8511B1","user_header":"https://static001.geekbang.org/account/avatar/00/19/51/7d/2772ec9a.jpg","comment_is_top":false,"comment_ctime":1615861403,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615861403","product_id":100015201,"comment_content":"我想问一下，就是已经绑定pvc 的pod 在自动更新时的流程是怎么样的？是否会因为pvc的类型是readonly的就不能进行滚动更新了？","like_count":0},{"had_liked":false,"id":276072,"user_name":"徐伟","can_delete":false,"product_type":"c1","uid":1080569,"ip_address":"","ucode":"BB81D02AA21931","user_header":"https://static001.geekbang.org/account/avatar/00/10/7c/f9/d720d872.jpg","comment_is_top":false,"comment_ctime":1611762994,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611762994","product_id":100015201,"comment_content":"你好，请教StorageClass是如何管理可用容量的？工程师自行创建PV可以掌控，自动创建如何保证远程存储有足够的容量可供使用？（尤其是nfs&#47;ceph）","like_count":0},{"had_liked":false,"id":271483,"user_name":"lfn","can_delete":false,"product_type":"c1","uid":1026593,"ip_address":"","ucode":"2E1558C6A12A89","user_header":"https://static001.geekbang.org/account/avatar/00/0f/aa/21/6c3ba9af.jpg","comment_is_top":false,"comment_ctime":1609663139,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609663139","product_id":100015201,"comment_content":"本文出现了两次“虚拟机”，到底指啥？容器就容器，宿主机就宿主机呗，怎么还突然冒出虚拟机了？？？？？？","like_count":0},{"had_liked":false,"id":248638,"user_name":"pettit renard","can_delete":false,"product_type":"c1","uid":1318994,"ip_address":"","ucode":"A1B4949E1F5B65","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/aUyTibOyoR58ZONiaHngaUjiaDxJRqIibSyXIZTg42o9HYiahUdBibAD7BqX5yYeq0Pr5S81C0czSkBpVsKVLXhpeEng/132","comment_is_top":false,"comment_ctime":1600249578,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600249578","product_id":100015201,"comment_content":"&gt; &quot;如果你的 Volume 类型是远程块存储，比如 Google Cloud 的 Persistent Disk（GCE 提供的远程磁盘服务），那么 kubelet 就需要先调用 Goolge Cloud 的 API，将它所提供的 Persistent Disk 挂载到 Pod 所在的宿主机上。&quot;<br><br>按照后面的说法，这是第一阶段attach，应该是controller-manager来调用Goolge Cloud的API吧。<br><br>第一阶段和第二阶段应该是串行执行的，但如果这两个节点分别由controller-manager和kubelet来执行，当第一阶段执行完成后，是怎么通知到kubelet的呢。","like_count":0},{"had_liked":false,"id":231389,"user_name":"维维","can_delete":false,"product_type":"c1","uid":1050285,"ip_address":"","ucode":"0C0D96362B30DB","user_header":"https://static001.geekbang.org/account/avatar/00/10/06/ad/fe79da1d.jpg","comment_is_top":false,"comment_ctime":1593662147,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1593662147","product_id":100015201,"comment_content":"storageClass 我理解有点像存储池，pv 是存储卷，那么 pod 直接挂载卷不就行了，为啥要设计出一个 pvc？","like_count":0,"discussions":[{"author":{"id":2095402,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM5wYrkXA8NmYtPk4PUjIcFZ8EDGXA35tWN2nCQdECOfibru6U9iblqXyEufuSHR9AfQsdsnXY2evZRg/132","nickname":"Geek_83667e","note":"","ucode":"200F9D9C440E21","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296058,"discussion_content":"对于一个开发人员他不关心底层存储是nfs 还是cef ，pvc 就是用来屏蔽底层存储配置得，你需要多大得存储，只需要pvc 来描述就行了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1596441012,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":228433,"user_name":"晞月520","can_delete":false,"product_type":"c1","uid":1845394,"ip_address":"","ucode":"4F05E02A5C1608","user_header":"https://static001.geekbang.org/account/avatar/00/1c/28/92/436735f5.jpg","comment_is_top":false,"comment_ctime":1592669815,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592669815","product_id":100015201,"comment_content":"kubectl  explain Pool<br>the server doesn&#39;t have a resource type &quot;Pool&quot;<br> 这个都没有呢 怎么回事哦","like_count":0},{"had_liked":false,"id":225184,"user_name":"李永彬","can_delete":false,"product_type":"c1","uid":1281175,"ip_address":"","ucode":"058345EE7F9864","user_header":"https://static001.geekbang.org/account/avatar/00/13/8c/97/bab83383.jpg","comment_is_top":false,"comment_ctime":1591677194,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1591677194","product_id":100015201,"comment_content":"老师你好，麻烦问一下，现在数据存储的容器化，比如redis、mq、mysql可靠不？敢不敢用呢，尤其是生产环境。","like_count":0,"discussions":[{"author":{"id":1845394,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/28/92/436735f5.jpg","nickname":"晞月520","note":"","ucode":"4F05E02A5C1608","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284923,"discussion_content":"很多地方都用了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592669872,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":198692,"user_name":"Geek_f66cf1","can_delete":false,"product_type":"c1","uid":1937889,"ip_address":"","ucode":"F2F2F6FF6E76E8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqUFIOBnowQQXzVlTXw3ic49FZ8Wq3fD3CzwRh4DnsRqibAosIeXZ6mxaYZ3mOX8LRpYapeKO5iaouKA/132","comment_is_top":false,"comment_ctime":1585464247,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1585464247","product_id":100015201,"comment_content":"老师，想问下，一个pv有10g，可以有两个4g的pvc绑定在这个pv上么？","like_count":0,"discussions":[{"author":{"id":1103556,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d6/c4/27343f76.jpg","nickname":"SHift","note":"","ucode":"36BD4A38F7FA2C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288819,"discussion_content":"不可以，pv和pvc是一一对应的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593877474,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":198553,"user_name":"vincent","can_delete":false,"product_type":"c1","uid":1796234,"ip_address":"","ucode":"9FAD09D87C1E42","user_header":"","comment_is_top":false,"comment_ctime":1585456369,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585456369","product_id":100015201,"comment_content":"PVC是接口<br>PV是实体<br>StorageClass负责自动化创建","like_count":0},{"had_liked":false,"id":179373,"user_name":"坤","can_delete":false,"product_type":"c1","uid":1010922,"ip_address":"","ucode":"74E6838226A405","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6c/ea/ce9854a5.jpg","comment_is_top":false,"comment_ctime":1581992659,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581992659","product_id":100015201,"comment_content":"请问Kubernetes会每次都直接先根据StorageClass生成PV吗？ 如果当前集群有匹配的PV，是不是可以直接使用？","like_count":0},{"had_liked":false,"id":179157,"user_name":"坤","can_delete":false,"product_type":"c1","uid":1010922,"ip_address":"","ucode":"74E6838226A405","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6c/ea/ce9854a5.jpg","comment_is_top":false,"comment_ctime":1581929136,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1581929136","product_id":100015201,"comment_content":"请问如果删除某个StorageClass， 会对之前根据该StorageClass创建的Pod带来影响吗？","like_count":0,"discussions":[{"author":{"id":1580926,"avatar":"","nickname":"ch_ort","note":"","ucode":"B79746E687F29E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318782,"discussion_content":"这样 pod redeploy的时候不就找不到对应的storageclass了么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603849463,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164616,"user_name":"阿丽","can_delete":false,"product_type":"c1","uid":1170970,"ip_address":"","ucode":"C01D32E7165302","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erJFlHhylrbLANtehiaX50wgVa2Z1ibQAdLpgyW4gCpEyOKEI9bPNZZBiabrP2oCleZWc2KKyKADz8tg/132","comment_is_top":false,"comment_ctime":1577060860,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577060860","product_id":100015201,"comment_content":"老师好，请问如果整个环境使用一套存储集群，是否存在性能问题？谢谢","like_count":0},{"had_liked":false,"id":152158,"user_name":"拉欧","can_delete":false,"product_type":"c1","uid":1206605,"ip_address":"","ucode":"40996A8093A95F","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/4d/81c44f45.jpg","comment_is_top":false,"comment_ctime":1573894609,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573894609","product_id":100015201,"comment_content":"总结一下，持久化宿主机目录包含两个部分：<br>1、挂载磁盘<br>2、挂载目录<br>感觉完全就是linux上文件系统的玩法","like_count":0},{"had_liked":false,"id":76685,"user_name":"王天明","can_delete":false,"product_type":"c1","uid":1012262,"ip_address":"","ucode":"60C51851C73A37","user_header":"https://static001.geekbang.org/account/avatar/00/0f/72/26/7387fc89.jpg","comment_is_top":false,"comment_ctime":1552666151,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552666151","product_id":100015201,"comment_content":"实验了一下，成功了。有一个问题，创建出来的pv是动态的，可以看到pv命名上有自己的规则，那么是不是PVC的定义不变，绑定的pv就一直是同一个pv吧？即使是在新的不同容器里使用同一个PVC。<br><br><br>另外，是不是可以先想办法基于一个PVC生成一个pv,再从外面copy文件进去pv? 这样就可以达到备份或迁移的目的了。","like_count":0},{"had_liked":false,"id":75908,"user_name":"Vampire_D","can_delete":false,"product_type":"c1","uid":1097787,"ip_address":"","ucode":"4F850BFFAB4C55","user_header":"https://static001.geekbang.org/account/avatar/00/10/c0/3b/58a4da6c.jpg","comment_is_top":false,"comment_ctime":1552490365,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552490365","product_id":100015201,"comment_content":"老师，遇到一个问题，删除PVC之后，pv状态变成released 状态，这个时候即使新建相同的PVC也是不能bound的，必须要删除重建pv之后才能重新被pvc bound，然而还看到说重新建相同的pv还有可能引起数据污染，这样的设计是否与持久化的想法相矛盾","like_count":0},{"had_liked":false,"id":47808,"user_name":"꧁༺宏杰༻꧂","can_delete":false,"product_type":"c1","uid":1332663,"ip_address":"","ucode":"EF114337913A9D","user_header":"https://static001.geekbang.org/account/avatar/00/14/55/b7/a8148556.jpg","comment_is_top":false,"comment_ctime":1544205518,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544205518","product_id":100015201,"comment_content":"老师你好，我在azure上创建一个存储账户了。我现在有几个问题。第一，我尝试用azure存储账号提供的nfs做为pv。但是遇到了不在中国的api。中国使用的是core.chinacloudapi.cn.而k8s默认使用的是core.windows.net.请问需要在什么地方加参数值是中国的api呢？第二。能否可以直接使用azure的存储账号当作存储类呢？我google查了好久都搞不明白。求老师解答下。","like_count":0},{"had_liked":false,"id":40923,"user_name":"小伟","can_delete":false,"product_type":"c1","uid":1229457,"ip_address":"","ucode":"4E20DFD3D4FF82","user_header":"https://static001.geekbang.org/account/avatar/00/12/c2/91/fba79b87.jpg","comment_is_top":false,"comment_ctime":1542696167,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542696167","product_id":100015201,"comment_content":"看到前面留言说：<br>exit status 2. rbd: error opening pool &#39;replicapool&#39;: (2) No such file or directory -- 这个报错，我有遇到类似的问题，解决方法：在 rook-operator.yml 里添加<br>env:<br>- name: FLEXVOLUME_DIR_PATH<br>  value: &quot;&#47;var&#47;lib&#47;kubelet&#47;volumeplugins&quot;<br>确保与kubelet 的--volume-plugin-dir一样。重新apply.重启kubelet.把rook-agent 和 rook-operator的pod删除，自动重建后等10分钟我的报错就消失了。","like_count":0},{"had_liked":false,"id":38718,"user_name":"jkmzg","can_delete":false,"product_type":"c1","uid":1160204,"ip_address":"","ucode":"847C3906A3225B","user_header":"https://static001.geekbang.org/account/avatar/00/11/b4/0c/93fd5c51.jpg","comment_is_top":false,"comment_ctime":1542114190,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542114190","product_id":100015201,"comment_content":"如果不同的pod里面定义了相同的pvc，而且mount的目录也相同，会不会冲突呢？k8s是怎么样区分不同pod的pv的呢？","like_count":0},{"had_liked":false,"id":36951,"user_name":"陈先生。","can_delete":false,"product_type":"c1","uid":1218783,"ip_address":"","ucode":"5D7B4768F3892B","user_header":"https://static001.geekbang.org/account/avatar/00/12/98/df/c88a4306.jpg","comment_is_top":false,"comment_ctime":1541402712,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1541402712","product_id":100015201,"comment_content":"请问格式化操作有没有开关？比如我跑一个batch&#47;job，数据集在nfs上，通过pvc&#47;pv挂载到pod里。如果格式化了，那数据集不是不在了？","like_count":0},{"had_liked":false,"id":35284,"user_name":"Joe Black","can_delete":false,"product_type":"c1","uid":1052528,"ip_address":"","ucode":"21FE222A286445","user_header":"https://static001.geekbang.org/account/avatar/00/10/0f/70/c8680841.jpg","comment_is_top":false,"comment_ctime":1540510547,"is_pvip":false,"replies":[{"id":"12623","content":"没听明白","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1540593492,"ip_address":"","comment_id":35284,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1540510547","product_id":100015201,"comment_content":"老师，现在这个方式其实要求Pod的存储信息在创建前就确定了，1.12的k8s说是支持挂载信息在宿主机和Pod，甚至Pod间互相感知，这个特性可信赖吗？","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427501,"discussion_content":"没听明白","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540593492,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":35276,"user_name":"虎虎❤️","can_delete":false,"product_type":"c1","uid":1086535,"ip_address":"","ucode":"157F261E80291A","user_header":"https://static001.geekbang.org/account/avatar/00/10/94/47/75875257.jpg","comment_is_top":false,"comment_ctime":1540488434,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540488434","product_id":100015201,"comment_content":"请问pvc的namespace quota是在什么时机检查是否超过限制的？","like_count":0}]}