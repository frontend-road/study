{"id":12953,"title":"45 | 架构重构内功心法第一式：有的放矢","content":"<p>在<a href=\"http://time.geekbang.org/column/article/7071\">专栏第8期</a>“架构设计三原则”中的演化原则部分，我提到了系统的架构是不断演化的，少部分架构演化可能需要推倒重来进行重写，但绝大部分的架构演化都是通过架构重构来实现的。相比全新的架构设计来说，架构重构对架构师的要求更高，主要体现在：</p><ul>\n<li>业务已经上线，不能停下来</li>\n</ul><p>架构重构时，业务已经上线运行了，重构既需要尽量保证业务继续往前发展，又要完成架构调整，这就好比“给飞行中的波音747换引擎”；而如果是新设计架构，业务还没有上线，则即使做砸了对业务也不会有太大影响。</p><ul>\n<li>关联方众多，牵一发动全身</li>\n</ul><p>架构重构涉及的业务关联方很多，不同关联方的资源投入程度、业务发展速度、对架构痛点的敏感度等有很大差异，如何尽量减少对关联方的影响，或者协调关联方统一行动，是一项很大的挑战；而如果是新设计架构，则在新架构上线前，对关联方没有影响。</p><ul>\n<li>旧架构的约束</li>\n</ul><p>架构重构需要在旧的架构基础上进行，这是一个很强的约束，会限制架构师的技术选择范围；而如果是新设计架构，则架构师的技术选择余地大得多。</p><p>即使是我们决定推倒到重来，完全抛弃旧的架构而去设计新的架构，新架构也会受到旧架构的约束和影响，因为业务在旧架构上产生的数据是不能推倒重来的，新架构必须考虑如何将旧架构产生的数据转换过来。</p><!-- [[[read_end]]] --><p>因此，架构重构对架构师的综合能力要求非常高，业务上要求架构师能够说服产品经理暂缓甚至暂停业务来进行架构重构；团队上需要架构师能够与其他团队达成一致的架构重构计划和步骤；技术上需要架构师给出让技术团队认可的架构重构方案。</p><p>总之，架构重构需要架构师既要说得动老板，也要镇得住同事；既要技术攻关，又要协调资源；既要保证业务正常发展，又要在指定时间内完成目标……总之就是十八般武艺要样样精通。</p><p>说了那么多架构重构的难度，千万不要被困难所吓倒，架构师正是需要在原来一团乱麻中找到线索，然后重新穿针引线，帮助业务进一步腾飞发展。接下来我将分3期传授我的<span class=\"orange\">架构重构内功心法，今天先来看第一式：有的放矢</span>。</p><p>通常情况下，当系统架构不满足业务的发展时，其表现形式是系统不断出现各种问题，轻微一点的如系统响应慢、数据错误、某些用户访问失败等，严重的可能是宕机、数据库瘫痪、数据丢失等，或者系统的开发效率很低。开始的时候，技术团队可能只针对具体的问题去解决，解决一个算一个，但如果持续时间较长，例如持续了半年甚至一年情况都不见好转，此时可能有人想到了系统的架构是否存在问题，讨论是否是因为架构原因导致了各种问题。一旦确定需要进行架构重构，就会由架构师牵头来进行架构重构的分析。</p><p>当架构师真正开始进行架构重构分析时，就会发现自己好像进了一个迷雾森林，到处都是问题，每个问题都需要解决，不知道出路在哪里，感觉如果要解决所有这些问题，架构重构其实也无能为力。有的架构师一上来搜集了系统当前存在的问题，然后汇总成一个100行的Excel表格，看到这样一个表格就懵了：这么多问题，要到猴年马月才能全部解决完啊？</p><p>期望通过架构重构来解决所有问题当然是不现实的，所以架构师的首要任务是<strong>从一大堆纷繁复杂的问题中识别出真正要通过架构重构来解决的问题，集中力量快速解决，而不是想着通过架构重构来解决所有的问题</strong>。否则就会陷入人少事多头绪乱的处境，团队累死累活弄个大半年，最后发现好像什么都做了，但每个问题都依然存在。尤其是对于刚接手一个新系统的架构师或者技术主管来说，一定要控制住“新官上任三把火”的冲动，避免摊大饼式或者运动式的重构和优化。</p><p>我们来看几个具体的重构案例。</p><p>1.后台系统重构：解决不合理的耦合</p><p>M系统是一个后台管理系统，负责管理所有游戏相关的数据，重构的主要原因是因为系统耦合了P业务独有的数据和所有业务公用的数据，导致可扩展性比较差。其大概架构如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/de/f7/de0a397ff69dd725fdf7a859b2e382f7.jpg?wh=4245*1759\" alt=\"\"></p><p>举一个简单的例子：数据库中的某张表，一部分字段是所有业务公用的“游戏数据”，一部分字段是P业务系统“独有的数据”，开发时如果要改这张表，代码和逻辑都很复杂，改起来效率很低。</p><p>针对M系统存在的问题，重构目标就是将游戏数据和业务数据拆分，解开两者的耦合，使得两个系统都能够独立快速发展。重构的方案如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/64/a1/64yy4bb3ed0c2b1abae511cbd86b01a1.jpg?wh=4255*1697\" alt=\"\"></p><p>重构后的效果非常明显，重构后的M系统和P业务后台系统每月上线版本数是重构前的4倍！</p><p>2.游戏接入系统重构：解决全局单点的可用性问题</p><p>S系统是游戏接入的核心系统，一旦S系统故障，大量游戏玩家就不能登录游戏。而S系统并不具备多中心的能力，一旦主机房宕机，整个S系统业务就不可用了。其大概架构如下图所示，可以看出数据库主库是全局单点，一旦数据库主库不可用，两个集群的写业务都不可用了。</p><p><img src=\"https://static001.geekbang.org/resource/image/66/3a/666d167039c65e5b38accc3dd06bb63a.jpg?wh=3821*2276\" alt=\"\"></p><p>针对S系统存在的问题，重构目标就是实现双中心，使得任意一个机房都能够提供完整的服务，在某个机房故障时，另外一个机房能够全部接管所有业务。重构方案如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/38/cb/38be5fb59d301f2b7048aa0a25530fcb.jpg?wh=3808*2327\" alt=\"\"></p><p>重构后系统的可用性从3个9提升到4个9，重构前最夸张的一个月有4次较大的线上故障，重构后虽然也经历了机房交换机宕机、运营商线路故障、机柜断电等问题，但对业务都没有什么大的影响。</p><p>3.X系统：解决大系统带来的开发效率问题</p><p>X系统是创新业务的主系统，之前在业务快速尝试和快速发展期间，怎么方便怎么操作，怎么快速怎么做，系统设计并未投入太多精力和时间，很多东西都“塞”到同一个系统中，导致到了现在已经改不动了。做一个新功能或者新业务，需要花费大量的时间来讨论和梳理各种业务逻辑，一不小心就踩个大坑。X系统的架构如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/e5/79/e57ff4a9d7fe184f15ee2091091a7e79.jpg?wh=3153*1862\" alt=\"\"></p><p>X系统的问题看起来和M系统比较类似，都是可扩展性存在问题，但其实根本原因不一样：M系统是因为耦合了不同业务的数据导致系统可扩展性不足，而X系统是因为将业务相关的所有功能都放在同一个系统中，导致系统可扩展性不足；同时，所有功能都在一个系统中，也可能导致一个功能出问题，整站不可用。比如说某个功能把数据库拖慢了，整站所有业务跟着都慢了。</p><p>针对X系统存在的问题，重构目标是将各个功能拆分到不同的子系统中，降低单个系统的复杂度。重构后的架构如下图所示（仅仅是示例，实际架构远比下图复杂）：</p><p><img src=\"https://static001.geekbang.org/resource/image/f5/dd/f50a4454c60d2ae1a5819d985c7ee3dd.jpg?wh=3174*1815\" alt=\"\"></p><p>重构后各个系统之间通过接口交互，虽然看似增加了接口的工作量，但整体来说，各系统的发展和开发速度比原来快了很多，系统也相对更加简单，也不会出现某个子系统有问题，所有业务都有问题。</p><p>这三个系统重构的方案，现在回过头来看，感觉是理所当然的，但实际上当时做分析和决策时，远远没有这么简单。以M系统为例，当时我们接手后遇到的问题有很多，例如：</p><ul>\n<li>\n<p>数据经常出错。</p>\n</li>\n<li>\n<p>M系统是单机，单机宕机后所有后台操作就不能进行了。</p>\n</li>\n<li>\n<p>性能比较差，有的操作耗时好久。</p>\n</li>\n<li>\n<p>界面比较丑，操作不人性化。</p>\n</li>\n<li>\n<p>历史上经过几手转接，代码比较混乱。</p>\n</li>\n<li>\n<p>业务数据和游戏数据耦合，开发效率很低。</p>\n</li>\n</ul><p>从这么多问题中识别出重构的目标，并不是一目了然的；而如果想一下全部解决所有这些问题，人力和时间又不够！所以架构师需要透过问题表象看到问题本质，找出真正需要通过架构重构解决的核心问题，从而做到<strong>有的放矢</strong>，既不会耗费大量的人力和时间投入，又能够解决核心问题。这对架构师的分析和判断能力要求非常高，既不能看到问题就想到要架构重构，也不能只是针对问题进行系统优化，判断到底是采取架构重构还是采取系统优化，可能不同的架构师和团队都有不同的看法。这里分享一个简单的做法：假设我们现在需要从0开始设计当前系统，新架构和老架构是否类似？如果差异不大，说明采取系统优化即可；如果差异很大，那可能就要进行系统重构了。</p><p>那原来发现的那些非架构重构问题怎么办呢？当然不能放任不管。以M系统为例，我们在重构完成后，又启动了多个优化的项目去优化这些问题，但此时的优化主要由团队内部完成即可，和其他团队没有太多关联，优化的速度是很快的。如果没有重构就进行优化，则每次优化都要拉一大堆关联业务的团队来讨论方案，效率非常低下！</p><h2>小结</h2><p>今天我为你讲了架构重构的时候需要做到有的放矢，避免像通过架构重构来解决所有问题，希望对你有所帮助。</p><p>这就是今天的全部内容，留一道思考题给你吧，分析一下你目前开发的系统，你觉得需要架构重构吗？原因和理由是什么？</p><p>欢迎你把答案写到留言区，和我一起讨论。相信经过深度思考的回答，也会让你对知识的理解更加深刻。（编辑乱入：精彩的留言有机会获得丰厚福利哦！）</p>","comments":[{"had_liked":false,"id":30368,"user_name":"孙振超","can_delete":false,"product_type":"c1","uid":1101755,"ip_address":"","ucode":"0F9EABC6125350","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/bb/22af0e52.jpg","comment_is_top":false,"comment_ctime":1538811320,"is_pvip":false,"replies":[{"id":10982,"content":"很好的案例👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1538869514,"ip_address":"","comment_id":30368,"utype":1}],"discussion_count":9,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"思考了下当前负责的系统，感觉更多的是需要优化而不是重构，主要原因是如果从新来过还是会采用当前的结构，只是功能需要进一步完善和改进。\n\n之前做过一次缓存架构的重构（自认为的）：我们的系统是3地5中心的部署架构，我们数据的写入是固定在一个机房进行单点写入，然后同步到其他的集群去，db层面的同步是通过数据库自身的主从同步机制实现的；而缓存的同步则是通过消息中间件来进行的，写入集群发送消息，其他集群接收消息而后写入到各地的缓存集群中。写入时是db写入成功就认为写入成功，返回调用方成功。这种实现方式虽然有数据同步延迟和少量的缓存db数据不一致，但对于绝大多数场景都是可以接受。\n\n后来随着业务的发展，出现了写入后立即读的场景（读和写不在同城）,并且不允许读到的数据和写入的数据不一致。在这种情况下原有的缓存更新机制就有问题了：db写入成功缓存消息处理失败或者读请求时消息还没有到达异地机房，这时都会导致缓存和db数据不一致，引起业务异常。\n面对此种场景，最初提出的解决方案是让业务方在调用写服务成功后再调用读服务，如果读到的数据和写入的数据一致才进行后续的操作，但这种方案实现总体成本比较高：如果有5个调用方，5个调用方都需要这样修改，重复工作，并且做了不需要自己关注的内容；同时在调用读请求时还要考虑重试机制，实现方案也有些复杂。这个方案提出来后没有一个调用方按照这个做的。\n后面进行review的时候决定还是应该自己来做这件事，对外屏蔽复杂性。因而对这一块进行了重构：将缓存内容根据缓存key按照一定的规则进行分区存储，对于实时性和一致性要求高的数据采取同步写缓存操作，如果缓存写失败，直接返回业务方本次写操作失败，由业务方重试。同时本地发送一个删除缓存的消息，异步将缓存删除，确保之后有机会从db中读取最新的数据。这样改造完成后，整体的请求耗时（因为要跨区同步写缓存）和业务失败率有所增加，但满足业务方的需求。\n这个改造简要而言是将业务从pa模式改为了pc模式。","like_count":79},{"had_liked":false,"id":19311,"user_name":"吴科🍀","can_delete":false,"product_type":"c1","uid":1112547,"ip_address":"","ucode":"8F2C317887A323","user_header":"https://static001.geekbang.org/account/avatar/00/10/f9/e3/2529c7dd.jpg","comment_is_top":false,"comment_ctime":1533774362,"is_pvip":false,"replies":[{"id":6685,"content":"经典，没有依赖就没有伤害，但实际上我们依赖还是少不了，我们尽量降低依赖程度，接口依赖是比较可控的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533780107,"ip_address":"","comment_id":19311,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"系统优化，我们公司就是一个字，拆，拆数据库，拆服务，没有依赖就没有伤害","like_count":37,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421777,"discussion_content":"经典，没有依赖就没有伤害，但实际上我们依赖还是少不了，我们尽量降低依赖程度，接口依赖是比较可控的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533780107,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1172362,"avatar":"https://static001.geekbang.org/account/avatar/00/11/e3/8a/ed8d1b63.jpg","nickname":"梧桐秋雨","note":"","ucode":"9D6AC6BA1E4259","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584474,"discussion_content":"没有依赖业务就运转不起来，主要是看如何降低耦合度又可保障业务的闭环","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660869159,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19467,"user_name":"宋岩","can_delete":false,"product_type":"c1","uid":1117746,"ip_address":"","ucode":"814280FC3D85B3","user_header":"https://static001.geekbang.org/account/avatar/00/11/0e/32/6cae3632.jpg","comment_is_top":false,"comment_ctime":1533859972,"is_pvip":false,"replies":[{"id":6756,"content":"1. 数据先不动，先拆分代码到多个子系统，然后再拆分数据\n2. 重写一套新的，然后做数据割接\n\n老板决心大的话，方案2实施更快，但风险高；老板决心不大的话，那就方案1，实施周期长，风险会小一些","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533885005,"ip_address":"","comment_id":19467,"utype":1}],"discussion_count":6,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"老师您好，我们现在面临一个运行18年的.net业务系统，业务一刻不能停止，大约2000张oracle表，大量的存储过程函数等实现的业务逻辑，现在要用java来重构，面临的问题就是好多大表都在Oracle中，想去o就涉及到很多表关联，做不到垂直拆分，业务耦合太紧，您有什么好的建议或者我们该从哪方面切入？","like_count":20,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421777,"discussion_content":"经典，没有依赖就没有伤害，但实际上我们依赖还是少不了，我们尽量降低依赖程度，接口依赖是比较可控的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533780107,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1172362,"avatar":"https://static001.geekbang.org/account/avatar/00/11/e3/8a/ed8d1b63.jpg","nickname":"梧桐秋雨","note":"","ucode":"9D6AC6BA1E4259","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584474,"discussion_content":"没有依赖业务就运转不起来，主要是看如何降低耦合度又可保障业务的闭环","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660869159,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19300,"user_name":"彼得.林","can_delete":false,"product_type":"c1","uid":1019306,"ip_address":"","ucode":"445B9751A88554","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/aa/e739c4fa.jpg","comment_is_top":false,"comment_ctime":1533772627,"is_pvip":false,"replies":[{"id":6690,"content":"这个够开三个专栏了😄并且我也不太擅长这些软技能培训","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533780485,"ip_address":"","comment_id":19300,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"总之，架构重构需要架构师既要说得动老板，也要镇得住同事；既要技术攻关，又要协调资源；既要保证业务正常发展，又要在指定时间内完成目标……总之就是十八般武艺要样样精通。\n\n\n\n老师，这些都是架构师的软技能吧？市场上的课都偏技术，可以讲讲这些吗？谢谢","like_count":20,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421774,"discussion_content":"这个够开三个专栏了😄并且我也不太擅长这些软技能培训","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533780485,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19436,"user_name":"one day","can_delete":false,"product_type":"c1","uid":1108243,"ip_address":"","ucode":"404C30FF5BA1E8","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/13/1f92e7f5.jpg","comment_is_top":false,"comment_ctime":1533827347,"is_pvip":false,"replies":[{"id":6723,"content":"感觉这样还是没有有的放矢呢，重构不是什么问题都解决。\n例如关联查询，电商业务是不可避免的，禁止关联查询，业务改动非常大，如果是关联查询导致性能问题，首先应该分析一下慢查询，80%的慢查询集中在20%的语句上。\n例如慢操作改为异步，实现起来没那么容易，有的就是要同步调用，而有的可以用消息队列异步通知异步处理。","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533864695,"ip_address":"","comment_id":19436,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"我公司正巧在重构系统。定期3个月。电商系统。原来是dubbo 服务间调用 ，redis 缓存，mysql，模块化开发，云平台,svn。问题，关联查询太多，dubbo部署的相关模块太多，业务复杂度太高，业务调用同步慢，一搞活动，数据库就爆，业务逻辑懂的人换了一茬又一茬。目标spring cloud,docker,k8s,git,禁止关联查询即单表，解藕慢操作即异步，接口细粒度，层次调用分明，服务隔离能缓存就缓存，业务大拆解。最终会是什么样，静待。学了老师这么多，手术台上实习了，哈哈.      缓存，异步，事务消息最终一致，强制单表查询，业务边界，规范。牵一发动全身，业务等待，加班加班……","like_count":17,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421774,"discussion_content":"这个够开三个专栏了😄并且我也不太擅长这些软技能培训","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533780485,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19807,"user_name":"Geek_58ezrw","can_delete":false,"product_type":"c1","uid":1119789,"ip_address":"","ucode":"3D1F0996CE65C8","user_header":"https://static001.geekbang.org/account/avatar/00/11/16/2d/2753369a.jpg","comment_is_top":false,"comment_ctime":1534084457,"is_pvip":false,"replies":[{"id":6909,"content":"这个没办法避免，短期内大家会不习惯，原来一条SQL语句搞定的事情，现在要调用接口还要改逻辑，但长远来看是好的，SQL的问题在于后续的系统越来越复杂后，很容易出现将整个系统拖垮的慢查询，业务扩展也很麻烦，因为逻辑都在SQL中了","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1534126075,"ip_address":"","comment_id":19807,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"老师，我们现在公司遇到的问题和你说的X系统很相似，现在也在逐步将那些热门业务做成微服务，拆分出去，但是涉及到的数据表，拆到其它RDS上去，涉及到的跨库查询很麻烦。现在只能做成接口了","like_count":15,"discussions":[{"author":{"id":1172362,"avatar":"https://static001.geekbang.org/account/avatar/00/11/e3/8a/ed8d1b63.jpg","nickname":"梧桐秋雨","note":"","ucode":"9D6AC6BA1E4259","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584476,"discussion_content":"结合过往经验，这么大的改动很难短期完成，还是得分而治之，每个阶段都有明确的目标，且要结合紧迫度来定优先级","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1660869473,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421841,"discussion_content":"感觉这样还是没有有的放矢呢，重构不是什么问题都解决。\n例如关联查询，电商业务是不可避免的，禁止关联查询，业务改动非常大，如果是关联查询导致性能问题，首先应该分析一下慢查询，80%的慢查询集中在20%的语句上。\n例如慢操作改为异步，实现起来没那么容易，有的就是要同步调用，而有的可以用消息队列异步通知异步处理。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1533864695,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353212,"discussion_content":"感觉如此浩大的改动没有领导层的支持风险太大","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615082007,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19347,"user_name":"空档滑行","can_delete":false,"product_type":"c1","uid":1091611,"ip_address":"","ucode":"06A6A7F503FAA7","user_header":"https://static001.geekbang.org/account/avatar/00/10/a8/1b/ced1d171.jpg","comment_is_top":false,"comment_ctime":1533778542,"is_pvip":false,"replies":[{"id":6680,"content":"思路很清晰👍👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533779430,"ip_address":"","comment_id":19347,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"当前的系统刚刚做过一次重构，当时选择重构的原因有这么几个，原系统有一个大的面向客户的web系统和多个单独的进程组成，前后端在一个war包，后端服务单机远行，两者通过db交换数据。问题有这么几个，web系统累积了5年的代码，改个bug已经随时搞挂整个web端。后端服务单点问题。数据库压力很大，一个功能的sql拖垮整个库。\n重构的思路是，先将单体后端进程服务化，服务化过程中非核心数据从主表分离出来。web系统结构不动，上线一个服务就从原来的查db改成调用服务。服务梳理差不多了将web端重新实现前后端分离。做完这些后将数据库结构重新设计。总的来说跟文中的第三个例子有点像。\n","like_count":13,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421794,"discussion_content":"思路很清晰👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533779430,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22864,"user_name":"波波安","can_delete":false,"product_type":"c1","uid":1002452,"ip_address":"","ucode":"2A677908E5A75D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4b/d4/b7719327.jpg","comment_is_top":false,"comment_ctime":1536021189,"is_pvip":false,"replies":[{"id":8270,"content":"这样做没问题，是普遍的做法","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1536052338,"ip_address":"","comment_id":22864,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"我们系统目前的瓶颈在数据存储，之前数据的存储都是oracle加上redis做缓存。现在活跃用户在500万左右。拿卡券业务来说，每个月产生的优惠券数量都在6000万左右，导致现在需要运维每两个月就要对表做瘦身，并且前端用户也只能查询两个月内的卡券。\n目前讨论的技术方案是使用mycat做分库分表，数据库使用mysql。遇到的问题有事务控制的问题，典型的就是卡券转赠，之前在oracle就直接利用数据库事务就可以解决。现在由于转赠记录和受赠记录不会落在同一个库，所以需要程序做策略来保证最终一致性。","like_count":12,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423299,"discussion_content":"这样做没问题，是普遍的做法","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1536052338,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1019332,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","nickname":"长期规划","note":"","ucode":"5EF65E9115834B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":624873,"discussion_content":"学习了，评论区能学到不少东西","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1691023755,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":423299,"ip_address":"北京","group_id":0},"score":624873,"extra":""}]}]},{"had_liked":false,"id":197584,"user_name":"lyonger","can_delete":false,"product_type":"c1","uid":1313840,"ip_address":"","ucode":"E89A75DADEA2A1","user_header":"https://static001.geekbang.org/account/avatar/00/14/0c/30/d4737cd5.jpg","comment_is_top":false,"comment_ctime":1585386610,"is_pvip":false,"replies":[{"id":74873,"content":"不然工资高就没理由了😂","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1585539638,"ip_address":"","comment_id":197584,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"架构师的要求好高啊，既要对业务非常熟悉，也能精通各种技术，其次还要能hold住人心。","like_count":8,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423299,"discussion_content":"这样做没问题，是普遍的做法","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1536052338,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1019332,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","nickname":"长期规划","note":"","ucode":"5EF65E9115834B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":624873,"discussion_content":"学习了，评论区能学到不少东西","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1691023755,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":423299,"ip_address":"北京","group_id":0},"score":624873,"extra":""}]}]},{"had_liked":false,"id":19443,"user_name":"黑小子在路上","can_delete":false,"product_type":"c1","uid":1025975,"ip_address":"","ucode":"904A8B6C534289","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a7/b7/00b87f2d.jpg","comment_is_top":false,"comment_ctime":1533831093,"is_pvip":false,"replies":[{"id":6722,"content":"多模块聚合不是好的重构手段，版本开发和测试部署一样比较麻烦，我认为你们应该将公共功能独立为服务","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533863236,"ip_address":"","comment_id":19443,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"目前系统采用类似微服务模式。如有1后台管理，2商家pc后台，3商家app接口服务，4server，都是独立部署。前面的1 2 3都依赖4。目前的问题是1也会访问数据库，server也访问数据库，有一部分重复。2 和3 也有重复逻辑。目前一个小需求，都可能要改多个端，由多个人介入，开发成本比较高。 近期准备重构，使用多模块形式来聚合工程，提取公用服务，但会保留现有独立部署模式，以此来达到提效的目的:-O","like_count":6,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489551,"discussion_content":"不然工资高就没理由了😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585539638,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":30368,"user_name":"孙振超","can_delete":false,"product_type":"c1","uid":1101755,"ip_address":"","ucode":"0F9EABC6125350","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/bb/22af0e52.jpg","comment_is_top":false,"comment_ctime":1538811320,"is_pvip":false,"replies":[{"id":10982,"content":"很好的案例👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1538869514,"ip_address":"","comment_id":30368,"utype":1}],"discussion_count":9,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"思考了下当前负责的系统，感觉更多的是需要优化而不是重构，主要原因是如果从新来过还是会采用当前的结构，只是功能需要进一步完善和改进。\n\n之前做过一次缓存架构的重构（自认为的）：我们的系统是3地5中心的部署架构，我们数据的写入是固定在一个机房进行单点写入，然后同步到其他的集群去，db层面的同步是通过数据库自身的主从同步机制实现的；而缓存的同步则是通过消息中间件来进行的，写入集群发送消息，其他集群接收消息而后写入到各地的缓存集群中。写入时是db写入成功就认为写入成功，返回调用方成功。这种实现方式虽然有数据同步延迟和少量的缓存db数据不一致，但对于绝大多数场景都是可以接受。\n\n后来随着业务的发展，出现了写入后立即读的场景（读和写不在同城）,并且不允许读到的数据和写入的数据不一致。在这种情况下原有的缓存更新机制就有问题了：db写入成功缓存消息处理失败或者读请求时消息还没有到达异地机房，这时都会导致缓存和db数据不一致，引起业务异常。\n面对此种场景，最初提出的解决方案是让业务方在调用写服务成功后再调用读服务，如果读到的数据和写入的数据一致才进行后续的操作，但这种方案实现总体成本比较高：如果有5个调用方，5个调用方都需要这样修改，重复工作，并且做了不需要自己关注的内容；同时在调用读请求时还要考虑重试机制，实现方案也有些复杂。这个方案提出来后没有一个调用方按照这个做的。\n后面进行review的时候决定还是应该自己来做这件事，对外屏蔽复杂性。因而对这一块进行了重构：将缓存内容根据缓存key按照一定的规则进行分区存储，对于实时性和一致性要求高的数据采取同步写缓存操作，如果缓存写失败，直接返回业务方本次写操作失败，由业务方重试。同时本地发送一个删除缓存的消息，异步将缓存删除，确保之后有机会从db中读取最新的数据。这样改造完成后，整体的请求耗时（因为要跨区同步写缓存）和业务失败率有所增加，但满足业务方的需求。\n这个改造简要而言是将业务从pa模式改为了pc模式。","like_count":79,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425962,"discussion_content":"很好的案例👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538869514,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1008809,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/64/a9/27d63f2e.jpg","nickname":"佳楠","note":"","ucode":"A1698AE91992AA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375772,"discussion_content":"一般会说 AP 或者 CP，一下子还没反应过来","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1621846151,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/d1ab239e.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335710,"discussion_content":"就是CAP中的PA和PC呗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608280351,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1316151,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/37/6df423d7.jpg","nickname":"王亮平","note":"","ucode":"DFAA70518E7431","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":325960,"discussion_content":"请问，pa和pc模式是什么模式？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605490265,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1316151,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/37/6df423d7.jpg","nickname":"王亮平","note":"","ucode":"DFAA70518E7431","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353207,"discussion_content":"CAP中的, C 一致性, A, 可用性, P, 分区容错性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615080939,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":325960,"ip_address":"","group_id":0},"score":353207,"extra":""}]},{"author":{"id":1073596,"avatar":"https://static001.geekbang.org/account/avatar/00/10/61/bc/88a905a5.jpg","nickname":"亮点","note":"","ucode":"1B8AE07484C69A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200731,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583716222,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1037476,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d4/a4/202cef33.jpg","nickname":"__fulin","note":"","ucode":"DD396CEEB6082A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":77255,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575898195,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065034,"avatar":"https://static001.geekbang.org/account/avatar/00/10/40/4a/4b7a0e25.jpg","nickname":"鲁大师","note":"","ucode":"7C39ACA86B119C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1917,"discussion_content":"“缓存内容根据缓存key按照一定的规则进行分区存储”是说每个key只会存在一个区内，不再保持缓存多中心存储的模式吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563093345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1284730,"avatar":"https://static001.geekbang.org/account/avatar/00/13/9a/7a/dd08bc09.jpg","nickname":"姬","note":"","ucode":"968079E564FD2F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1065034,"avatar":"https://static001.geekbang.org/account/avatar/00/10/40/4a/4b7a0e25.jpg","nickname":"鲁大师","note":"","ucode":"7C39ACA86B119C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":569008,"discussion_content":"我也没看懂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651288467,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":1917,"ip_address":"","group_id":0},"score":569008,"extra":""}]}]},{"had_liked":false,"id":19311,"user_name":"吴科🍀","can_delete":false,"product_type":"c1","uid":1112547,"ip_address":"","ucode":"8F2C317887A323","user_header":"https://static001.geekbang.org/account/avatar/00/10/f9/e3/2529c7dd.jpg","comment_is_top":false,"comment_ctime":1533774362,"is_pvip":false,"replies":[{"id":6685,"content":"经典，没有依赖就没有伤害，但实际上我们依赖还是少不了，我们尽量降低依赖程度，接口依赖是比较可控的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533780107,"ip_address":"","comment_id":19311,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"系统优化，我们公司就是一个字，拆，拆数据库，拆服务，没有依赖就没有伤害","like_count":37,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425962,"discussion_content":"很好的案例👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538869514,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1008809,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/64/a9/27d63f2e.jpg","nickname":"佳楠","note":"","ucode":"A1698AE91992AA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375772,"discussion_content":"一般会说 AP 或者 CP，一下子还没反应过来","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1621846151,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/d1ab239e.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335710,"discussion_content":"就是CAP中的PA和PC呗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608280351,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1316151,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/37/6df423d7.jpg","nickname":"王亮平","note":"","ucode":"DFAA70518E7431","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":325960,"discussion_content":"请问，pa和pc模式是什么模式？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605490265,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1316151,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/37/6df423d7.jpg","nickname":"王亮平","note":"","ucode":"DFAA70518E7431","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353207,"discussion_content":"CAP中的, C 一致性, A, 可用性, P, 分区容错性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615080939,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":325960,"ip_address":"","group_id":0},"score":353207,"extra":""}]},{"author":{"id":1073596,"avatar":"https://static001.geekbang.org/account/avatar/00/10/61/bc/88a905a5.jpg","nickname":"亮点","note":"","ucode":"1B8AE07484C69A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200731,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583716222,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1037476,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d4/a4/202cef33.jpg","nickname":"__fulin","note":"","ucode":"DD396CEEB6082A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":77255,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575898195,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065034,"avatar":"https://static001.geekbang.org/account/avatar/00/10/40/4a/4b7a0e25.jpg","nickname":"鲁大师","note":"","ucode":"7C39ACA86B119C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1917,"discussion_content":"“缓存内容根据缓存key按照一定的规则进行分区存储”是说每个key只会存在一个区内，不再保持缓存多中心存储的模式吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563093345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1284730,"avatar":"https://static001.geekbang.org/account/avatar/00/13/9a/7a/dd08bc09.jpg","nickname":"姬","note":"","ucode":"968079E564FD2F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1065034,"avatar":"https://static001.geekbang.org/account/avatar/00/10/40/4a/4b7a0e25.jpg","nickname":"鲁大师","note":"","ucode":"7C39ACA86B119C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":569008,"discussion_content":"我也没看懂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651288467,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":1917,"ip_address":"","group_id":0},"score":569008,"extra":""}]}]},{"had_liked":false,"id":19467,"user_name":"宋岩","can_delete":false,"product_type":"c1","uid":1117746,"ip_address":"","ucode":"814280FC3D85B3","user_header":"https://static001.geekbang.org/account/avatar/00/11/0e/32/6cae3632.jpg","comment_is_top":false,"comment_ctime":1533859972,"is_pvip":false,"replies":[{"id":6756,"content":"1. 数据先不动，先拆分代码到多个子系统，然后再拆分数据\n2. 重写一套新的，然后做数据割接\n\n老板决心大的话，方案2实施更快，但风险高；老板决心不大的话，那就方案1，实施周期长，风险会小一些","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533885005,"ip_address":"","comment_id":19467,"utype":1}],"discussion_count":6,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"老师您好，我们现在面临一个运行18年的.net业务系统，业务一刻不能停止，大约2000张oracle表，大量的存储过程函数等实现的业务逻辑，现在要用java来重构，面临的问题就是好多大表都在Oracle中，想去o就涉及到很多表关联，做不到垂直拆分，业务耦合太紧，您有什么好的建议或者我们该从哪方面切入？","like_count":20,"discussions":[{"author":{"id":2404887,"avatar":"https://static001.geekbang.org/account/avatar/00/24/b2/17/3161b49c.jpg","nickname":"达叔灬","note":"","ucode":"5CCBAF13548F02","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534269,"discussion_content":"好奇什么原因 要放弃.net?18年已经出现netcore 2.0了？,目前 net6 的性能和开发效率应该不比java差 从前景来说 可能会好过java","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1638152681,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1028301,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b0/cd/c54572fe.jpg","nickname":"沐雪","note":"","ucode":"0C42BF0D75FD9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2404887,"avatar":"https://static001.geekbang.org/account/avatar/00/24/b2/17/3161b49c.jpg","nickname":"达叔灬","note":"","ucode":"5CCBAF13548F02","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550026,"discussion_content":"我们公司也开始将.netcore转为java了。其主要原因是招聘.net人才很难招。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644333752,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":534269,"ip_address":"","group_id":0},"score":550026,"extra":""},{"author":{"id":2404887,"avatar":"https://static001.geekbang.org/account/avatar/00/24/b2/17/3161b49c.jpg","nickname":"达叔灬","note":"","ucode":"5CCBAF13548F02","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1028301,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b0/cd/c54572fe.jpg","nickname":"沐雪","note":"","ucode":"0C42BF0D75FD9B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550879,"discussion_content":"人才 是个大问题 国内大环境 net  害","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644767165,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":550026,"ip_address":"","group_id":0},"score":550879,"extra":""},{"author":{"id":3009726,"avatar":"","nickname":"凌晨写Bug","note":"","ucode":"7345C0A982B6BB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2404887,"avatar":"https://static001.geekbang.org/account/avatar/00/24/b2/17/3161b49c.jpg","nickname":"达叔灬","note":"","ucode":"5CCBAF13548F02","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573311,"discussion_content":"我们近期也从.Net5切换到.Net6了。.NetCore真的是太少了，招聘上大多数是客户端的WinForm,WPF的，真的难找。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653333270,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":550879,"ip_address":"","group_id":0},"score":573311,"extra":""}]},{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421856,"discussion_content":"1. 数据先不动，先拆分代码到多个子系统，然后再拆分数据\n2. 重写一套新的，然后做数据割接\n\n老板决心大的话，方案2实施更快，但风险高；老板决心不大的话，那就方案1，实施周期长，风险会小一些","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1533885005,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1918112,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/44/a0/16d0d300.jpg","nickname":"ZHANGPING","note":"","ucode":"7108812981C996","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385689,"discussion_content":"一个模块，一个模块梳理业务，DB层设计新的数据结构，先做实时的数据转换同步","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627206682,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19300,"user_name":"彼得.林","can_delete":false,"product_type":"c1","uid":1019306,"ip_address":"","ucode":"445B9751A88554","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/aa/e739c4fa.jpg","comment_is_top":false,"comment_ctime":1533772627,"is_pvip":false,"replies":[{"id":6690,"content":"这个够开三个专栏了😄并且我也不太擅长这些软技能培训","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533780485,"ip_address":"","comment_id":19300,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"总之，架构重构需要架构师既要说得动老板，也要镇得住同事；既要技术攻关，又要协调资源；既要保证业务正常发展，又要在指定时间内完成目标……总之就是十八般武艺要样样精通。\n\n\n\n老师，这些都是架构师的软技能吧？市场上的课都偏技术，可以讲讲这些吗？谢谢","like_count":20,"discussions":[{"author":{"id":2404887,"avatar":"https://static001.geekbang.org/account/avatar/00/24/b2/17/3161b49c.jpg","nickname":"达叔灬","note":"","ucode":"5CCBAF13548F02","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534269,"discussion_content":"好奇什么原因 要放弃.net?18年已经出现netcore 2.0了？,目前 net6 的性能和开发效率应该不比java差 从前景来说 可能会好过java","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1638152681,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1028301,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b0/cd/c54572fe.jpg","nickname":"沐雪","note":"","ucode":"0C42BF0D75FD9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2404887,"avatar":"https://static001.geekbang.org/account/avatar/00/24/b2/17/3161b49c.jpg","nickname":"达叔灬","note":"","ucode":"5CCBAF13548F02","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550026,"discussion_content":"我们公司也开始将.netcore转为java了。其主要原因是招聘.net人才很难招。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644333752,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":534269,"ip_address":"","group_id":0},"score":550026,"extra":""},{"author":{"id":2404887,"avatar":"https://static001.geekbang.org/account/avatar/00/24/b2/17/3161b49c.jpg","nickname":"达叔灬","note":"","ucode":"5CCBAF13548F02","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1028301,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b0/cd/c54572fe.jpg","nickname":"沐雪","note":"","ucode":"0C42BF0D75FD9B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550879,"discussion_content":"人才 是个大问题 国内大环境 net  害","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644767165,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":550026,"ip_address":"","group_id":0},"score":550879,"extra":""},{"author":{"id":3009726,"avatar":"","nickname":"凌晨写Bug","note":"","ucode":"7345C0A982B6BB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2404887,"avatar":"https://static001.geekbang.org/account/avatar/00/24/b2/17/3161b49c.jpg","nickname":"达叔灬","note":"","ucode":"5CCBAF13548F02","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573311,"discussion_content":"我们近期也从.Net5切换到.Net6了。.NetCore真的是太少了，招聘上大多数是客户端的WinForm,WPF的，真的难找。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653333270,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":550879,"ip_address":"","group_id":0},"score":573311,"extra":""}]},{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421856,"discussion_content":"1. 数据先不动，先拆分代码到多个子系统，然后再拆分数据\n2. 重写一套新的，然后做数据割接\n\n老板决心大的话，方案2实施更快，但风险高；老板决心不大的话，那就方案1，实施周期长，风险会小一些","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1533885005,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1918112,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/44/a0/16d0d300.jpg","nickname":"ZHANGPING","note":"","ucode":"7108812981C996","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385689,"discussion_content":"一个模块，一个模块梳理业务，DB层设计新的数据结构，先做实时的数据转换同步","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627206682,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19436,"user_name":"one day","can_delete":false,"product_type":"c1","uid":1108243,"ip_address":"","ucode":"404C30FF5BA1E8","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/13/1f92e7f5.jpg","comment_is_top":false,"comment_ctime":1533827347,"is_pvip":false,"replies":[{"id":6723,"content":"感觉这样还是没有有的放矢呢，重构不是什么问题都解决。\n例如关联查询，电商业务是不可避免的，禁止关联查询，业务改动非常大，如果是关联查询导致性能问题，首先应该分析一下慢查询，80%的慢查询集中在20%的语句上。\n例如慢操作改为异步，实现起来没那么容易，有的就是要同步调用，而有的可以用消息队列异步通知异步处理。","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533864695,"ip_address":"","comment_id":19436,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"我公司正巧在重构系统。定期3个月。电商系统。原来是dubbo 服务间调用 ，redis 缓存，mysql，模块化开发，云平台,svn。问题，关联查询太多，dubbo部署的相关模块太多，业务复杂度太高，业务调用同步慢，一搞活动，数据库就爆，业务逻辑懂的人换了一茬又一茬。目标spring cloud,docker,k8s,git,禁止关联查询即单表，解藕慢操作即异步，接口细粒度，层次调用分明，服务隔离能缓存就缓存，业务大拆解。最终会是什么样，静待。学了老师这么多，手术台上实习了，哈哈.      缓存，异步，事务消息最终一致，强制单表查询，业务边界，规范。牵一发动全身，业务等待，加班加班……","like_count":17,"discussions":[{"author":{"id":1172362,"avatar":"https://static001.geekbang.org/account/avatar/00/11/e3/8a/ed8d1b63.jpg","nickname":"梧桐秋雨","note":"","ucode":"9D6AC6BA1E4259","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584476,"discussion_content":"结合过往经验，这么大的改动很难短期完成，还是得分而治之，每个阶段都有明确的目标，且要结合紧迫度来定优先级","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1660869473,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421841,"discussion_content":"感觉这样还是没有有的放矢呢，重构不是什么问题都解决。\n例如关联查询，电商业务是不可避免的，禁止关联查询，业务改动非常大，如果是关联查询导致性能问题，首先应该分析一下慢查询，80%的慢查询集中在20%的语句上。\n例如慢操作改为异步，实现起来没那么容易，有的就是要同步调用，而有的可以用消息队列异步通知异步处理。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1533864695,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353212,"discussion_content":"感觉如此浩大的改动没有领导层的支持风险太大","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615082007,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19807,"user_name":"Geek_58ezrw","can_delete":false,"product_type":"c1","uid":1119789,"ip_address":"","ucode":"3D1F0996CE65C8","user_header":"https://static001.geekbang.org/account/avatar/00/11/16/2d/2753369a.jpg","comment_is_top":false,"comment_ctime":1534084457,"is_pvip":false,"replies":[{"id":6909,"content":"这个没办法避免，短期内大家会不习惯，原来一条SQL语句搞定的事情，现在要调用接口还要改逻辑，但长远来看是好的，SQL的问题在于后续的系统越来越复杂后，很容易出现将整个系统拖垮的慢查询，业务扩展也很麻烦，因为逻辑都在SQL中了","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1534126075,"ip_address":"","comment_id":19807,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"老师，我们现在公司遇到的问题和你说的X系统很相似，现在也在逐步将那些热门业务做成微服务，拆分出去，但是涉及到的数据表，拆到其它RDS上去，涉及到的跨库查询很麻烦。现在只能做成接口了","like_count":15,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421990,"discussion_content":"这个没办法避免，短期内大家会不习惯，原来一条SQL语句搞定的事情，现在要调用接口还要改逻辑，但长远来看是好的，SQL的问题在于后续的系统越来越复杂后，很容易出现将整个系统拖垮的慢查询，业务扩展也很麻烦，因为逻辑都在SQL中了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1534126075,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353210,"discussion_content":"对这一点也感同身受, 拆分之前一个大的功能在同一个项目中, 将大的功能拆分成多个微服务后, 原来只需要掉几次Server方法就可以, 现在变成了调用多次微服务Http请求","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1615081150,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19347,"user_name":"空档滑行","can_delete":false,"product_type":"c1","uid":1091611,"ip_address":"","ucode":"06A6A7F503FAA7","user_header":"https://static001.geekbang.org/account/avatar/00/10/a8/1b/ced1d171.jpg","comment_is_top":false,"comment_ctime":1533778542,"is_pvip":false,"replies":[{"id":6680,"content":"思路很清晰👍👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533779430,"ip_address":"","comment_id":19347,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"当前的系统刚刚做过一次重构，当时选择重构的原因有这么几个，原系统有一个大的面向客户的web系统和多个单独的进程组成，前后端在一个war包，后端服务单机远行，两者通过db交换数据。问题有这么几个，web系统累积了5年的代码，改个bug已经随时搞挂整个web端。后端服务单点问题。数据库压力很大，一个功能的sql拖垮整个库。\n重构的思路是，先将单体后端进程服务化，服务化过程中非核心数据从主表分离出来。web系统结构不动，上线一个服务就从原来的查db改成调用服务。服务梳理差不多了将web端重新实现前后端分离。做完这些后将数据库结构重新设计。总的来说跟文中的第三个例子有点像。\n","like_count":13,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421990,"discussion_content":"这个没办法避免，短期内大家会不习惯，原来一条SQL语句搞定的事情，现在要调用接口还要改逻辑，但长远来看是好的，SQL的问题在于后续的系统越来越复杂后，很容易出现将整个系统拖垮的慢查询，业务扩展也很麻烦，因为逻辑都在SQL中了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1534126075,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353210,"discussion_content":"对这一点也感同身受, 拆分之前一个大的功能在同一个项目中, 将大的功能拆分成多个微服务后, 原来只需要掉几次Server方法就可以, 现在变成了调用多次微服务Http请求","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1615081150,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22864,"user_name":"波波安","can_delete":false,"product_type":"c1","uid":1002452,"ip_address":"","ucode":"2A677908E5A75D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4b/d4/b7719327.jpg","comment_is_top":false,"comment_ctime":1536021189,"is_pvip":false,"replies":[{"id":8270,"content":"这样做没问题，是普遍的做法","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1536052338,"ip_address":"","comment_id":22864,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"我们系统目前的瓶颈在数据存储，之前数据的存储都是oracle加上redis做缓存。现在活跃用户在500万左右。拿卡券业务来说，每个月产生的优惠券数量都在6000万左右，导致现在需要运维每两个月就要对表做瘦身，并且前端用户也只能查询两个月内的卡券。\n目前讨论的技术方案是使用mycat做分库分表，数据库使用mysql。遇到的问题有事务控制的问题，典型的就是卡券转赠，之前在oracle就直接利用数据库事务就可以解决。现在由于转赠记录和受赠记录不会落在同一个库，所以需要程序做策略来保证最终一致性。","like_count":12,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421794,"discussion_content":"思路很清晰👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533779430,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":197584,"user_name":"lyonger","can_delete":false,"product_type":"c1","uid":1313840,"ip_address":"","ucode":"E89A75DADEA2A1","user_header":"https://static001.geekbang.org/account/avatar/00/14/0c/30/d4737cd5.jpg","comment_is_top":false,"comment_ctime":1585386610,"is_pvip":false,"replies":[{"id":74873,"content":"不然工资高就没理由了😂","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1585539638,"ip_address":"","comment_id":197584,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"架构师的要求好高啊，既要对业务非常熟悉，也能精通各种技术，其次还要能hold住人心。","like_count":8,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489551,"discussion_content":"不然工资高就没理由了😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585539638,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19443,"user_name":"黑小子在路上","can_delete":false,"product_type":"c1","uid":1025975,"ip_address":"","ucode":"904A8B6C534289","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a7/b7/00b87f2d.jpg","comment_is_top":false,"comment_ctime":1533831093,"is_pvip":false,"replies":[{"id":6722,"content":"多模块聚合不是好的重构手段，版本开发和测试部署一样比较麻烦，我认为你们应该将公共功能独立为服务","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533863236,"ip_address":"","comment_id":19443,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"目前系统采用类似微服务模式。如有1后台管理，2商家pc后台，3商家app接口服务，4server，都是独立部署。前面的1 2 3都依赖4。目前的问题是1也会访问数据库，server也访问数据库，有一部分重复。2 和3 也有重复逻辑。目前一个小需求，都可能要改多个端，由多个人介入，开发成本比较高。 近期准备重构，使用多模块形式来聚合工程，提取公用服务，但会保留现有独立部署模式，以此来达到提效的目的:-O","like_count":6,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421845,"discussion_content":"多模块聚合不是好的重构手段，版本开发和测试部署一样比较麻烦，我认为你们应该将公共功能独立为服务","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1533863236,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353221,"discussion_content":"多模块聚合 是什么意思? 把多个小的关联性比较大的微服务合并成一个服务? 还是在这些关联性比较强的微服务上搞一个聚合层? ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615084534,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1522800,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLdiaoSDXm3KibVMaYM2MiaAaleb3BW4Tgdw10qRtIhbOvMPib5Y0SJA3sBVOdYIjWq8bzf0hSA8XCf2w/132","nickname":"小熊","note":"","ucode":"D83E64BDD34F86","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":415318,"discussion_content":"我理解应该是jar包之间互相引用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637054260,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":353221,"ip_address":"","group_id":0},"score":415318,"extra":""}]}]},{"had_liked":false,"id":36898,"user_name":"Leon Wong","can_delete":false,"product_type":"c1","uid":1073650,"ip_address":"","ucode":"B49B327367CF9E","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/f2/ca989d6f.jpg","comment_is_top":false,"comment_ctime":1541382415,"is_pvip":false,"replies":[{"id":13146,"content":"要业务上考虑兼容，底层存储无法避免。","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1541399202,"ip_address":"","comment_id":36898,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"双中心如何同步数据？比如我在A中心写入了数据，此时未同步到B，并且发生了宕机，B此时是没有这个数据，还允许被再写入一次，这种场景如何避免数据不一致呢？","like_count":5},{"had_liked":false,"id":29950,"user_name":"一叶","can_delete":false,"product_type":"c1","uid":1115608,"ip_address":"","ucode":"EB018BDA606A33","user_header":"https://static001.geekbang.org/account/avatar/00/11/05/d8/cd269378.jpg","comment_is_top":false,"comment_ctime":1538614043,"is_pvip":false,"replies":[{"id":10987,"content":"两个中心都有完整数据。\n网络异常时，两个中心各自都可以服务，只有一部分用户如果先在A机房注册，再到B机房注册，可能会有重复数据产生，我们的业务用算法保证数据重复产生是一样的，因此没问题","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1538869952,"ip_address":"","comment_id":29950,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"华哥请问一下文中ab系统双中心改造，是数据分区还是两个中心都有完整数据。\n1.如果是分区，那其中一个中心宕掉之后，部分人或业务在另外一个中心是没法使用的？\n2.如果是完整的数据，当网络出现异常的时候，不是出现脑裂？","like_count":5,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425784,"discussion_content":"两个中心都有完整数据。\n网络异常时，两个中心各自都可以服务，只有一部分用户如果先在A机房注册，再到B机房注册，可能会有重复数据产生，我们的业务用算法保证数据重复产生是一样的，因此没问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538869952,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353223,"discussion_content":"&#34;我们的业务用算法保证数据重复产生是一样的&#34;, 看来任何时候都得从业务层面考虑来规避一些问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615084881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21683,"user_name":"文竹","can_delete":false,"product_type":"c1","uid":1103167,"ip_address":"","ucode":"74413B1975976B","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/3f/80bf4841.jpg","comment_is_top":false,"comment_ctime":1535248894,"is_pvip":false,"replies":[{"id":7689,"content":"ES不太适合大数据量的后台计算，比较适合面向用户的业务计算。\n\n大数据量计算可以考虑spark或者流式计算storm，Flink这些","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1535275640,"ip_address":"","comment_id":21683,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"目前开发的系统最大的复杂度在于大数据量计算。数据目前是保存到ES中的，但发现ES对于大数据聚合计算表现得无能为力，未来考虑使用hadoop中spark来做计算。","like_count":5,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422804,"discussion_content":"ES不太适合大数据量的后台计算，比较适合面向用户的业务计算。\n\n大数据量计算可以考虑spark或者流式计算storm，Flink这些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535275640,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131078,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1567638571,"is_pvip":false,"replies":[{"id":50315,"content":"现在还准备上么😂😂😂","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1567841402,"ip_address":"","comment_id":131078,"utype":1}],"discussion_count":6,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"课后思考及问题\n我们的系统正在重构中，并且已经搞了一年左右，重构的系统在验证中，由于老系统本身业务逻辑比较复杂又是0级系统，一旦有问题秒秒钟就会影响大批订单，所以，不完全验证OK不敢上。\n重构的原因：\n第一业务运维困难，特别是大促、节假日时，页面配置复杂，并且不灵活\n第二系统已经运行5年+补丁太多，代码臃肿，理解、开发、测试困难，同时存在第一代及第三代的代码，原来的老代码不敢删除，各种分支判断令人眼花缭乱，有些逻辑已经不知道为啥那样写\n第三有人想要更好的KPI\n上不了的原因：\n第一系统太过复杂，想想看一个方法像老鼠洞一样一层套一层，看完一个方法需要一两天，另外，重构的也不是一个系统，有负责页面配置的系统，有专门负责刷新缓存的系统，有专门负责对外提供服务的系统，有专门负责核心业务逻辑计算的系统，有专门负责持久化数据的系统等\n第二改了逻辑但还需要覆盖原来的业务，验证困难\n第三领导核心关注点在后台业务逻辑，页面也非常多和复杂，但是压根没有测试，目前业务验证自然会发现很多bug\n第四主产品离职了，另外小组长也离职了，他俩级别挺高，组长听说是家庭原因，主产品比较奇怪，他不但级别高工资高而且资格老没人管，他也离职啦\n第五团队氛围不佳，安排活都给你细到小时，管人的方式采用雪橇犬理论的方式\n第五想一次重构结构N个问题，已不是最初的业务运维困难的痛点了，这就好像和华仔讲的相反——无的放矢\n没有聚焦解决一个问题，后面问题扩大化啦\n\n抱歉，借华仔的地盘发一下牢骚哈😄\n\n1：本文核心观点\n1-1：重构系统的基本原则——从一大堆纷繁复杂的问题中识别出真正要通过架构重构来解决的问题，集中力量快速解决，而不是想着通过架构重构来解决所有的问题\n1-2：重构时架构师要做的事情——架构师需要透过问题表象看到问题本质，找出真正需要通过架构重构解决的核心问题，从而做到有的放矢，既不会耗费大量的人力和时间投入，又能够解决核心问题。\n1-3：如何判断系统实现需要重构——假设我们现在需要从 0 开始设计当前系统，新架构和老架构是否类似？如果差异不大，说明采取系统优化即可；如果差异很大，那可能就要进行系统重构了。\n有的放矢，如果提炼一下有两点：\n第一定位出问题的真正根源是什么\n第二聚焦解决主要矛盾的主要方面","like_count":4,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422804,"discussion_content":"ES不太适合大数据量的后台计算，比较适合面向用户的业务计算。\n\n大数据量计算可以考虑spark或者流式计算storm，Flink这些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535275640,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19404,"user_name":"张玮(大圣)","can_delete":false,"product_type":"c1","uid":1111343,"ip_address":"","ucode":"D567C4BE87D116","user_header":"https://static001.geekbang.org/account/avatar/00/10/f5/2f/56117bab.jpg","comment_is_top":false,"comment_ctime":1533812582,"is_pvip":false,"replies":[{"id":6758,"content":"是的，架构重构是大动作，不要轻易采用，大招不要乱放😀","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533885094,"ip_address":"","comment_id":19404,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"确定是不是要重构挺难的，那就等到问题频出，改到想吐的时候做重构吧，\n\n大公司在创新，小公司也在创新，一般2.3年的系统设计不会太差吧，除非影响业务了，影响老板心情了，\n\n归纳下：能优化的别修补，能修补的别重构，保证核心业务OK，更好的支撑创新业务线发展吧 哈哈\n\n如果要重构，拉都拉不住，那就做好预备方案，保证新旧系统并行，时间可控，做好切换时风险控制，要不然，萌萌哒，😄","like_count":4,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421826,"discussion_content":"是的，架构重构是大动作，不要轻易采用，大招不要乱放😀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533885094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":214750,"user_name":"陈树义","can_delete":false,"product_type":"c1","uid":1076264,"ip_address":"","ucode":"AF83C4BDC192B5","user_header":"https://static001.geekbang.org/account/avatar/00/10/6c/28/a1f9f0ad.jpg","comment_is_top":false,"comment_ctime":1588813778,"is_pvip":false,"replies":[{"id":79726,"content":"是的，步子大了会扯淡😂","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1588990275,"ip_address":"","comment_id":214750,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"重构真的是一门艺术，不仅需要技术过人，还需要有经验，更要有洞察力。\n\n专业技能到家了，但是没有经验，很可能大刀阔斧地全部重做。但这样的后果就是出问题的风险很大，并且基本上会难产。只有有经验，才知道怎么一点点去重构。另外也需要洞察哪些东西是最重要的，哪些是不重要的，挑合适的功能先一点点做。\n\n简单概括：重构也需要小步快跑，一点点做，这样成功率更高！","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421826,"discussion_content":"是的，架构重构是大动作，不要轻易采用，大招不要乱放😀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533885094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62978,"user_name":"宋晓明","can_delete":false,"product_type":"c1","uid":1146507,"ip_address":"","ucode":"DC866DCE2FBA9E","user_header":"https://static001.geekbang.org/account/avatar/00/11/7e/8b/3cc461b3.jpg","comment_is_top":false,"comment_ctime":1548218754,"is_pvip":false,"replies":[{"id":22394,"content":"功能独立，不代表只能一台机器呀，肯定会做集群方案的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1548309092,"ip_address":"","comment_id":62978,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"老师 ，如果把很大的功能拆分成多个子系统，每个子系统的功能都是独立的，这样会成为单点系统，难道单点系统不做高可用吗？","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494193,"discussion_content":"是的，步子大了会扯淡😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588990275,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":348994,"user_name":"Ethan.Yan","can_delete":false,"product_type":"c1","uid":1114968,"ip_address":"","ucode":"162E9F2669A576","user_header":"https://static001.geekbang.org/account/avatar/00/11/03/58/777af42a.jpg","comment_is_top":false,"comment_ctime":1655629271,"is_pvip":false,"replies":[{"id":127181,"content":"知行合一，有机会实践一下","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1655951669,"ip_address":"","comment_id":348994,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"“假设我们现在需要从 0 开始设计当前系统，新架构和老架构是否类似？如果差异不大，说明采取系统优化即可；如果差异很大，那可能就要进行系统重构了。” 👍 学习了。 ","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577157,"discussion_content":"知行合一，有机会实践一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655951669,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":307288,"user_name":"刘二","can_delete":false,"product_type":"c1","uid":1129297,"ip_address":"","ucode":"9703AA0EBCFF58","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJNeCwealtX0j5libPP67McmBGsHEKlNYPedF7tom3MIGF2ib6rPliaqR5QYS7WaTiaJdPhZjfQ4ZNdRA/132","comment_is_top":false,"comment_ctime":1629010504,"is_pvip":false,"replies":[{"id":111264,"content":"1. 分类\n2. 提炼\n3. 排序","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1629023900,"ip_address":"","comment_id":307288,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"我感觉首先要识别问题，也就是问题的抽象能力。不知道这块有没有好的建议","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525104,"discussion_content":"1. 分类\n2. 提炼\n3. 排序","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629023900,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":255890,"user_name":"flyCoder","can_delete":false,"product_type":"c1","uid":1074897,"ip_address":"","ucode":"82FB7B60775978","user_header":"https://static001.geekbang.org/account/avatar/00/10/66/d1/8664c464.jpg","comment_is_top":false,"comment_ctime":1603451819,"is_pvip":false,"replies":[{"id":93544,"content":"可以用采样来估算，这样就不要那么多原始数据了","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1603802536,"ip_address":"","comment_id":255890,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"目前系统遇到一个时效性问题，在广告监测数据上传由于网络原因到库存扣减中间有很多延迟，导致超发的问题，目前想到的解决方案是提供阈值提醒的功能到阈值时扩大库存的值避免超发，或者提前将广告下线。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525104,"discussion_content":"1. 分类\n2. 提炼\n3. 排序","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629023900,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":36898,"user_name":"Leon Wong","can_delete":false,"product_type":"c1","uid":1073650,"ip_address":"","ucode":"B49B327367CF9E","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/f2/ca989d6f.jpg","comment_is_top":false,"comment_ctime":1541382415,"is_pvip":false,"replies":[{"id":13146,"content":"要业务上考虑兼容，底层存储无法避免。","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1541399202,"ip_address":"","comment_id":36898,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"双中心如何同步数据？比如我在A中心写入了数据，此时未同步到B，并且发生了宕机，B此时是没有这个数据，还允许被再写入一次，这种场景如何避免数据不一致呢？","like_count":5,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428080,"discussion_content":"要业务上考虑兼容，底层存储无法避免。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541399202,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1112139,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/4b/5ae62b10.jpg","nickname":"Geek_b04b12","note":"","ucode":"F8705A21FCDF09","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5381,"discussion_content":"阿里otter，可以参考一下，实施过，建议还是从业务上考虑，","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566215792,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":29950,"user_name":"一叶","can_delete":false,"product_type":"c1","uid":1115608,"ip_address":"","ucode":"EB018BDA606A33","user_header":"https://static001.geekbang.org/account/avatar/00/11/05/d8/cd269378.jpg","comment_is_top":false,"comment_ctime":1538614043,"is_pvip":false,"replies":[{"id":10987,"content":"两个中心都有完整数据。\n网络异常时，两个中心各自都可以服务，只有一部分用户如果先在A机房注册，再到B机房注册，可能会有重复数据产生，我们的业务用算法保证数据重复产生是一样的，因此没问题","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1538869952,"ip_address":"","comment_id":29950,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"华哥请问一下文中ab系统双中心改造，是数据分区还是两个中心都有完整数据。\n1.如果是分区，那其中一个中心宕掉之后，部分人或业务在另外一个中心是没法使用的？\n2.如果是完整的数据，当网络出现异常的时候，不是出现脑裂？","like_count":5,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428080,"discussion_content":"要业务上考虑兼容，底层存储无法避免。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541399202,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1112139,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/4b/5ae62b10.jpg","nickname":"Geek_b04b12","note":"","ucode":"F8705A21FCDF09","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5381,"discussion_content":"阿里otter，可以参考一下，实施过，建议还是从业务上考虑，","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566215792,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21683,"user_name":"文竹","can_delete":false,"product_type":"c1","uid":1103167,"ip_address":"","ucode":"74413B1975976B","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/3f/80bf4841.jpg","comment_is_top":false,"comment_ctime":1535248894,"is_pvip":false,"replies":[{"id":7689,"content":"ES不太适合大数据量的后台计算，比较适合面向用户的业务计算。\n\n大数据量计算可以考虑spark或者流式计算storm，Flink这些","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1535275640,"ip_address":"","comment_id":21683,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"目前开发的系统最大的复杂度在于大数据量计算。数据目前是保存到ES中的，但发现ES对于大数据聚合计算表现得无能为力，未来考虑使用hadoop中spark来做计算。","like_count":5,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425784,"discussion_content":"两个中心都有完整数据。\n网络异常时，两个中心各自都可以服务，只有一部分用户如果先在A机房注册，再到B机房注册，可能会有重复数据产生，我们的业务用算法保证数据重复产生是一样的，因此没问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538869952,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353223,"discussion_content":"&#34;我们的业务用算法保证数据重复产生是一样的&#34;, 看来任何时候都得从业务层面考虑来规避一些问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615084881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131078,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1567638571,"is_pvip":false,"replies":[{"id":50315,"content":"现在还准备上么😂😂😂","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1567841402,"ip_address":"","comment_id":131078,"utype":1}],"discussion_count":6,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"课后思考及问题\n我们的系统正在重构中，并且已经搞了一年左右，重构的系统在验证中，由于老系统本身业务逻辑比较复杂又是0级系统，一旦有问题秒秒钟就会影响大批订单，所以，不完全验证OK不敢上。\n重构的原因：\n第一业务运维困难，特别是大促、节假日时，页面配置复杂，并且不灵活\n第二系统已经运行5年+补丁太多，代码臃肿，理解、开发、测试困难，同时存在第一代及第三代的代码，原来的老代码不敢删除，各种分支判断令人眼花缭乱，有些逻辑已经不知道为啥那样写\n第三有人想要更好的KPI\n上不了的原因：\n第一系统太过复杂，想想看一个方法像老鼠洞一样一层套一层，看完一个方法需要一两天，另外，重构的也不是一个系统，有负责页面配置的系统，有专门负责刷新缓存的系统，有专门负责对外提供服务的系统，有专门负责核心业务逻辑计算的系统，有专门负责持久化数据的系统等\n第二改了逻辑但还需要覆盖原来的业务，验证困难\n第三领导核心关注点在后台业务逻辑，页面也非常多和复杂，但是压根没有测试，目前业务验证自然会发现很多bug\n第四主产品离职了，另外小组长也离职了，他俩级别挺高，组长听说是家庭原因，主产品比较奇怪，他不但级别高工资高而且资格老没人管，他也离职啦\n第五团队氛围不佳，安排活都给你细到小时，管人的方式采用雪橇犬理论的方式\n第五想一次重构结构N个问题，已不是最初的业务运维困难的痛点了，这就好像和华仔讲的相反——无的放矢\n没有聚焦解决一个问题，后面问题扩大化啦\n\n抱歉，借华仔的地盘发一下牢骚哈😄\n\n1：本文核心观点\n1-1：重构系统的基本原则——从一大堆纷繁复杂的问题中识别出真正要通过架构重构来解决的问题，集中力量快速解决，而不是想着通过架构重构来解决所有的问题\n1-2：重构时架构师要做的事情——架构师需要透过问题表象看到问题本质，找出真正需要通过架构重构解决的核心问题，从而做到有的放矢，既不会耗费大量的人力和时间投入，又能够解决核心问题。\n1-3：如何判断系统实现需要重构——假设我们现在需要从 0 开始设计当前系统，新架构和老架构是否类似？如果差异不大，说明采取系统优化即可；如果差异很大，那可能就要进行系统重构了。\n有的放矢，如果提炼一下有两点：\n第一定位出问题的真正根源是什么\n第二聚焦解决主要矛盾的主要方面","like_count":4,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466276,"discussion_content":"现在还准备上么😂😂😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567841402,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1197200,"avatar":"https://static001.geekbang.org/account/avatar/00/12/44/90/33ec20bf.jpg","nickname":"方人其","note":"","ucode":"CF44EBC59493E1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551127,"discussion_content":"雪橇犬理论   是什么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644905632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1101101,"avatar":"https://static001.geekbang.org/account/avatar/00/10/cd/2d/abb7bfe3.jpg","nickname":"皇埔铁蛋","note":"","ucode":"BDBD9D0ADC1219","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550495,"discussion_content":"现在上了么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644568988,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009652,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","nickname":"钱","note":"","ucode":"2C92A243A463D4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8261,"discussion_content":"要上，只是又延期啦😄，第一次计划上是年初，第二次是七月份，现在改为双十一之后","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567859419,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1061991,"avatar":"https://static001.geekbang.org/account/avatar/00/10/34/67/06a7f9be.jpg","nickname":"while (1)等;","note":"","ucode":"BAEC7258D65B69","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1009652,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","nickname":"钱","note":"","ucode":"2C92A243A463D4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392756,"discussion_content":"现在上了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631112098,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":8261,"ip_address":"","group_id":0},"score":392756,"extra":""},{"author":{"id":1522800,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLdiaoSDXm3KibVMaYM2MiaAaleb3BW4Tgdw10qRtIhbOvMPib5Y0SJA3sBVOdYIjWq8bzf0hSA8XCf2w/132","nickname":"小熊","note":"","ucode":"D83E64BDD34F86","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1061991,"avatar":"https://static001.geekbang.org/account/avatar/00/10/34/67/06a7f9be.jpg","nickname":"while (1)等;","note":"","ucode":"BAEC7258D65B69","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":415319,"discussion_content":"已经跑路了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637054570,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":392756,"ip_address":"","group_id":0},"score":415319,"extra":"{\"user_type\":1}"}]}]},{"had_liked":false,"id":19404,"user_name":"张玮(大圣)","can_delete":false,"product_type":"c1","uid":1111343,"ip_address":"","ucode":"D567C4BE87D116","user_header":"https://static001.geekbang.org/account/avatar/00/10/f5/2f/56117bab.jpg","comment_is_top":false,"comment_ctime":1533812582,"is_pvip":false,"replies":[{"id":6758,"content":"是的，架构重构是大动作，不要轻易采用，大招不要乱放😀","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533885094,"ip_address":"","comment_id":19404,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"确定是不是要重构挺难的，那就等到问题频出，改到想吐的时候做重构吧，\n\n大公司在创新，小公司也在创新，一般2.3年的系统设计不会太差吧，除非影响业务了，影响老板心情了，\n\n归纳下：能优化的别修补，能修补的别重构，保证核心业务OK，更好的支撑创新业务线发展吧 哈哈\n\n如果要重构，拉都拉不住，那就做好预备方案，保证新旧系统并行，时间可控，做好切换时风险控制，要不然，萌萌哒，😄","like_count":4,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466276,"discussion_content":"现在还准备上么😂😂😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567841402,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1197200,"avatar":"https://static001.geekbang.org/account/avatar/00/12/44/90/33ec20bf.jpg","nickname":"方人其","note":"","ucode":"CF44EBC59493E1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551127,"discussion_content":"雪橇犬理论   是什么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644905632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1101101,"avatar":"https://static001.geekbang.org/account/avatar/00/10/cd/2d/abb7bfe3.jpg","nickname":"皇埔铁蛋","note":"","ucode":"BDBD9D0ADC1219","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550495,"discussion_content":"现在上了么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644568988,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009652,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","nickname":"钱","note":"","ucode":"2C92A243A463D4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8261,"discussion_content":"要上，只是又延期啦😄，第一次计划上是年初，第二次是七月份，现在改为双十一之后","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567859419,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1061991,"avatar":"https://static001.geekbang.org/account/avatar/00/10/34/67/06a7f9be.jpg","nickname":"while (1)等;","note":"","ucode":"BAEC7258D65B69","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1009652,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","nickname":"钱","note":"","ucode":"2C92A243A463D4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392756,"discussion_content":"现在上了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631112098,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":8261,"ip_address":"","group_id":0},"score":392756,"extra":""},{"author":{"id":1522800,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLdiaoSDXm3KibVMaYM2MiaAaleb3BW4Tgdw10qRtIhbOvMPib5Y0SJA3sBVOdYIjWq8bzf0hSA8XCf2w/132","nickname":"小熊","note":"","ucode":"D83E64BDD34F86","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1061991,"avatar":"https://static001.geekbang.org/account/avatar/00/10/34/67/06a7f9be.jpg","nickname":"while (1)等;","note":"","ucode":"BAEC7258D65B69","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":415319,"discussion_content":"已经跑路了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637054570,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":392756,"ip_address":"","group_id":0},"score":415319,"extra":"{\"user_type\":1}"}]}]},{"had_liked":false,"id":214750,"user_name":"陈树义","can_delete":false,"product_type":"c1","uid":1076264,"ip_address":"","ucode":"AF83C4BDC192B5","user_header":"https://static001.geekbang.org/account/avatar/00/10/6c/28/a1f9f0ad.jpg","comment_is_top":false,"comment_ctime":1588813778,"is_pvip":false,"replies":[{"id":79726,"content":"是的，步子大了会扯淡😂","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1588990275,"ip_address":"","comment_id":214750,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"重构真的是一门艺术，不仅需要技术过人，还需要有经验，更要有洞察力。\n\n专业技能到家了，但是没有经验，很可能大刀阔斧地全部重做。但这样的后果就是出问题的风险很大，并且基本上会难产。只有有经验，才知道怎么一点点去重构。另外也需要洞察哪些东西是最重要的，哪些是不重要的，挑合适的功能先一点点做。\n\n简单概括：重构也需要小步快跑，一点点做，这样成功率更高！","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494193,"discussion_content":"是的，步子大了会扯淡😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588990275,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62978,"user_name":"宋晓明","can_delete":false,"product_type":"c1","uid":1146507,"ip_address":"","ucode":"DC866DCE2FBA9E","user_header":"https://static001.geekbang.org/account/avatar/00/11/7e/8b/3cc461b3.jpg","comment_is_top":false,"comment_ctime":1548218754,"is_pvip":false,"replies":[{"id":22394,"content":"功能独立，不代表只能一台机器呀，肯定会做集群方案的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1548309092,"ip_address":"","comment_id":62978,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"老师 ，如果把很大的功能拆分成多个子系统，每个子系统的功能都是独立的，这样会成为单点系统，难道单点系统不做高可用吗？","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437425,"discussion_content":"功能独立，不代表只能一台机器呀，肯定会做集群方案的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1548309092,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":348994,"user_name":"Ethan.Yan","can_delete":false,"product_type":"c1","uid":1114968,"ip_address":"","ucode":"162E9F2669A576","user_header":"https://static001.geekbang.org/account/avatar/00/11/03/58/777af42a.jpg","comment_is_top":false,"comment_ctime":1655629271,"is_pvip":false,"replies":[{"id":127181,"content":"知行合一，有机会实践一下","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1655951669,"ip_address":"","comment_id":348994,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"“假设我们现在需要从 0 开始设计当前系统，新架构和老架构是否类似？如果差异不大，说明采取系统优化即可；如果差异很大，那可能就要进行系统重构了。” 👍 学习了。 ","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437425,"discussion_content":"功能独立，不代表只能一台机器呀，肯定会做集群方案的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1548309092,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":307288,"user_name":"刘二","can_delete":false,"product_type":"c1","uid":1129297,"ip_address":"","ucode":"9703AA0EBCFF58","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJNeCwealtX0j5libPP67McmBGsHEKlNYPedF7tom3MIGF2ib6rPliaqR5QYS7WaTiaJdPhZjfQ4ZNdRA/132","comment_is_top":false,"comment_ctime":1629010504,"is_pvip":false,"replies":[{"id":111264,"content":"1. 分类\n2. 提炼\n3. 排序","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1629023900,"ip_address":"","comment_id":307288,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"我感觉首先要识别问题，也就是问题的抽象能力。不知道这块有没有好的建议","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577157,"discussion_content":"知行合一，有机会实践一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655951669,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":255890,"user_name":"flyCoder","can_delete":false,"product_type":"c1","uid":1074897,"ip_address":"","ucode":"82FB7B60775978","user_header":"https://static001.geekbang.org/account/avatar/00/10/66/d1/8664c464.jpg","comment_is_top":false,"comment_ctime":1603451819,"is_pvip":false,"replies":[{"id":93544,"content":"可以用采样来估算，这样就不要那么多原始数据了","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1603802536,"ip_address":"","comment_id":255890,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"目前系统遇到一个时效性问题，在广告监测数据上传由于网络原因到库存扣减中间有很多延迟，导致超发的问题，目前想到的解决方案是提供阈值提醒的功能到阈值时扩大库存的值避免超发，或者提前将广告下线。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507865,"discussion_content":"可以用采样来估算，这样就不要那么多原始数据了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603802536,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1177289,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f6/c9/4da2a82a.jpg","nickname":"黄大仙","note":"","ucode":"337B6E811CF47D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365336,"discussion_content":"优先级：少量花不完 > 超发。CPM广告在分发前预扣，CPC广告除了要预扣，还要建立点击概率预测，广告有效性（投放次数、投放金额）实时检测、替换等等，减少广告超发的比例。\n\n至于广告额度已经用光，才发生点击动作，这个无法避免，只是看比例有多大了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617774865,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208850,"user_name":"付锐涛","can_delete":false,"product_type":"c1","uid":1450711,"ip_address":"","ucode":"F5BF0571596C4B","user_header":"https://static001.geekbang.org/account/avatar/00/16/22/d7/d166f764.jpg","comment_is_top":false,"comment_ctime":1587451211,"is_pvip":false,"replies":[{"id":79014,"content":"其实我觉得应该引入vue😃","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1588162894,"ip_address":"","comment_id":208850,"utype":1}],"discussion_count":3,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"说一下我们公司的业务管理系统，有一个业务大表单（10个子页面组装而成，使用easyui+js实现），不同的业务场景，这个大表单的元素需要动态变化（可见、必填、校验规则）。\n以前的做法是大范围变化全部复制一套，小范围变化使用JavaScript做动态控制，随着业务的演进这样的表单复制了5套，对应的js文件也复制了5套并做个性化修改，当需要维护表单的时候经常要5套一起修改，经常出现错改或者漏改的情况。\n这个表单是核心业务表单，随着业务的发展修改频率非常高，所以想着能不能做成可配置的，刚开始想到以下两个方案：\n1.引入vue\n2.在后台生成表单html\n由于团队内都是后端程序员，所以vue的学习成本导致被放弃。使用第二套方案相当于要开发一套表单生成系统，而且要保证前端样式不变，难度比vue还高。\n最后结合实际情况，区分出表单中可变性（可见、必填、校验规则）和不可变性（表单布局），将表单布局整理出一套模板，再在数据库中存储每个元素的可变属性，页面渲染成功之后动态调整可变性。\n\n由于履历原因，一直没有机会参与到架构搭建和架构重构这种级别的改造中，所做的重构也都是功能级别的，正在探索架构师的玩法。","like_count":1},{"had_liked":false,"id":199595,"user_name":"Regis","can_delete":false,"product_type":"c1","uid":1435632,"ip_address":"","ucode":"3911E4EDE27F4E","user_header":"https://static001.geekbang.org/account/avatar/00/15/e7/f0/d0bf3a5f.jpg","comment_is_top":false,"comment_ctime":1585492054,"is_pvip":false,"replies":[{"id":74863,"content":"加油，坚持就会有收获","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1585539075,"ip_address":"","comment_id":199595,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"学习是一个漫长的过程，尤其架构这方面，需要有丰富的开发经验及开发过程中的总结才能成长起来，加油💪","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492646,"discussion_content":"其实我觉得应该引入vue😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588162894,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353225,"discussion_content":"看到这篇文章后, 突然有一个疑问: 在成为架构师的路上肯定要根据自己对系统理解的想法转变为具体的实施方案, 如果当中出了问题了怎么办呢? ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615085497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1101101,"avatar":"https://static001.geekbang.org/account/avatar/00/10/cd/2d/abb7bfe3.jpg","nickname":"皇埔铁蛋","note":"","ucode":"BDBD9D0ADC1219","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550502,"discussion_content":"出现问题在所难免，重要的是要根据发生的问题进行反思总结，是框架选型错误，还是跟业务兼容性不合适，大公司的架构设计模式不代表适配所有的公司，要灵活应变","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644571344,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":353225,"ip_address":"","group_id":0},"score":550502,"extra":""}]}]},{"had_liked":false,"id":187785,"user_name":"谭方敏","can_delete":false,"product_type":"c1","uid":1710960,"ip_address":"","ucode":"728DC7ECB7C902","user_header":"https://static001.geekbang.org/account/avatar/00/1a/1b/70/547042ee.jpg","comment_is_top":false,"comment_ctime":1584241252,"is_pvip":false,"replies":[{"id":72853,"content":"可以优化一下","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1584425023,"ip_address":"","comment_id":187785,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"有的放矢\n架构师的首要任务是从一大堆纷繁复杂的问题中识别比较真正要通过架构重构来解决的问题，集中力量快速解决，而不是想着通过架构重构来解决所有的问题。\n\n我公司目前的开发系统需要重构，主要有两方面：\n1）管理所有节点的全局服务器本身应该是单点，并且与业务无相关的，它的职责就是动态管理各个节点增删查改，以及服务器配置但是因为业务逻辑上也需要一些全局数据，比如跨网关业务，所以当初为了偷懒，就把用户在线状态丢全局服务器里了。现在因为业务耦合度，全局服务器需要频繁调整业务逻辑。\n需要梳理这块业务流程，不在全局服务管理，这样才能使得全局服务器完全业务无相关。\n\n2）数据库服务器单点，当初也是基于当时用户规模来决定的，如果数据库存在多点的话，又需要进行负载均衡，这样会加大调用方难度。所以权衡之下，在数据库方面采用集群化，这样确保数据高可用，而业务逻辑上面追求简单处理，而采用了单点处理逻辑。\n3）调用方式都是采用直接调用api的方式，没有做到调用解耦，比如引入mq。\n","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487240,"discussion_content":"可以优化一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584425023,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19857,"user_name":"恋着歌","can_delete":false,"product_type":"c1","uid":1001048,"ip_address":"","ucode":"CFDC00CB9965D9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/46/58/31205087.jpg","comment_is_top":false,"comment_ctime":1534124199,"is_pvip":false,"replies":[{"id":6903,"content":"重构通常都会涉及数据，为了避免风险，我们一般都是分步骤实施，从易到难，先将关联度不大的，比较独立的数据重构，再来动复杂的。\n\n你的这个案例业务上的场景我没看的太懂，如果你说的site是我常规理解的站点，那一个site一个库反而是合理的，至于mq通知tomcat更新数据源，没理解这样。\n\n建议和后端同学一起分析讨论重构方案。","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1534125580,"ip_address":"","comment_id":19857,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"当初的一个 demo 到现在已经做了3年了，迟迟没有重构。作为一个前端我感觉现在急需数据库层的重构。现在一个业务涉及多个 site，但是一个 site 一个库，最近上线通过程序 addsite 功能，导致多种问题。1，要实现动态数据源，2，要引入 mq 通知另一台 tomcat 更新数据源。历时一个半月才上线了一个粗糙版本。我给的方案是同一个业务就同一个数据库，上面的两问题都不存在了。现在重构的最大阻力是旧数据迁移，请问老师在这放面有比较好的建议吗？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422002,"discussion_content":"重构通常都会涉及数据，为了避免风险，我们一般都是分步骤实施，从易到难，先将关联度不大的，比较独立的数据重构，再来动复杂的。\n\n你的这个案例业务上的场景我没看的太懂，如果你说的site是我常规理解的站点，那一个site一个库反而是合理的，至于mq通知tomcat更新数据源，没理解这样。\n\n建议和后端同学一起分析讨论重构方案。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534125580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353228,"discussion_content":"&#34;重构通常都会涉及数据，为了避免风险，我们一般都是分步骤实施，从易到难，先将关联度不大的，比较独立的数据重构，再来动复杂的。&#34;","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615085906,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19415,"user_name":"大魔王汪汪","can_delete":false,"product_type":"c1","uid":1010680,"ip_address":"","ucode":"4B205CB52FC95F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6b/f8/b4da7936.jpg","comment_is_top":false,"comment_ctime":1533817788,"is_pvip":false,"replies":[{"id":6726,"content":"没这个能力呀，写几篇文章可以，这个专栏有点难😄","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533864813,"ip_address":"","comment_id":19415,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"重构系统首先是建立在熟悉系统业务上，有了全局的业务视角在架构选型和构件上才会有的放矢。\n\n华哥可以开个架构师软技能专栏，继续订阅。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421830,"discussion_content":"没这个能力呀，写几篇文章可以，这个专栏有点难😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533864813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353229,"discussion_content":"不了解业务的架构师感觉是在开玩笑, 哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615085962,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":367493,"user_name":"数据小白","can_delete":false,"product_type":"c1","uid":1445466,"ip_address":"上海","ucode":"85653228A7AF5E","user_header":"https://static001.geekbang.org/account/avatar/00/16/0e/5a/617f28bf.jpg","comment_is_top":false,"comment_ctime":1675262379,"is_pvip":false,"replies":[{"id":133851,"content":"是的，不过架构重构可能要看长远一些，例如重构后的架构能够满足业务发展3年的需要","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1675329189,"ip_address":"广东","comment_id":367493,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"当前任职的公司，曾经发起了多次系统优化，系统性能得到了很大的提升，但是随着业务的发展，原有的架构已无法满足业务的需求，所以公司对系统整体的架构进行了重构，我理解下来，进行架构重构还是优化，主要还是看是否能满足业务需求，如果能满足业务需求，优化即可，投入人力也不会很多，如果已无法满足业务发展，则需要进行重构。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":601639,"discussion_content":"是的，不过架构重构可能要看长远一些，例如重构后的架构能够满足业务发展3年的需要","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1675329190,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353920,"user_name":"李晨","can_delete":false,"product_type":"c1","uid":2716735,"ip_address":"广东","ucode":"D734DE3B9A5A2D","user_header":"https://static001.geekbang.org/account/avatar/00/29/74/3f/5c9fd08f.jpg","comment_is_top":false,"comment_ctime":1659926806,"is_pvip":false,"replies":[{"id":128826,"content":"要重新分层的话，基本就是架构重构或者架构演进了","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1660208049,"ip_address":"广东","comment_id":353920,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"我现在开发的是cdp，现在存在的问题有：\n1、数据没有分层，即没有分出ods、dwd、dws、dwt、ads这几层。导致的问题是数据的扩展性很差，即新增一个需求，可能需要在数据表上直接增加字段，最后变成了大宽表，会产生性能问题；\n2、原有的架构很简单，就是kafka+doris（用来做实时数仓）。缺乏数据回写、批处理操作等特性；\n结合以上两点原因，我认为需要的是重构而不是优化","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583564,"discussion_content":"要重新分层的话，基本就是架构重构或者架构演进了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660208049,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2716735,"avatar":"https://static001.geekbang.org/account/avatar/00/29/74/3f/5c9fd08f.jpg","nickname":"李晨","note":"","ucode":"D734DE3B9A5A2D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":583574,"discussion_content":"嗯嗯，我的老大想重构一步到位，直接走到终态。但是我觉得这样的话耗费的时间太长，而且只有一个最终目标的话，容易在重构的过程中，由于看不到阶段性成果，而导致团队产生厌烦的心情。不如设立多阶段，这样的话，重构可以跟着需求一起跑，然后也可以在发展的过程中，不断矫正重构的方向。老师你怎么看？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660208928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":583564,"ip_address":"北京","group_id":0},"score":583574,"extra":""}]}]},{"had_liked":false,"id":340160,"user_name":"Geek_9f2339","can_delete":false,"product_type":"c1","uid":2182752,"ip_address":"","ucode":"13B68C4F9BFA5A","user_header":"","comment_is_top":false,"comment_ctime":1648635380,"is_pvip":false,"replies":[{"id":124537,"content":"你的回答高度有点高，我没有理解到关键点 ：）","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1648893699,"ip_address":"","comment_id":340160,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"我想站在程序员的角度讨论一下这个问题（希望大佬给与指正）：\n1. 作为程序员 小到一个模块，一个类，大到一个服务，一个系统，其实在我们眼里就是一个对象，\n2. 重构，优化，其实就是面向对象编程的一个思考，在业务发展的不同阶段，站在不同的角度，看到的对象不尽相同\n3. 架构的重构 是站在较高的维度取观察整个业务系统，剥离出其中一层一层的对象，而根据业务权重来区分这些对象，如：业务发展的初期，我们把一个电商平台称之为一个对象，所以对应的就是单体应用，随着业务的发展，我们可能会在电商平台下 抽象出 商品搜索、购物车、订单、支付 等等多个对象，对象之间松散耦合，我们称之为微服务架构。\n个人的理解架构重构优化，就是在之前的对象中找到更小对象。让更小的对象，松散的耦合，独立演变。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559722,"discussion_content":"你的回答高度有点高，我没有理解到关键点 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648893699,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":323758,"user_name":"达叔灬","can_delete":false,"product_type":"c1","uid":2404887,"ip_address":"","ucode":"5CCBAF13548F02","user_header":"https://static001.geekbang.org/account/avatar/00/24/b2/17/3161b49c.jpg","comment_is_top":false,"comment_ctime":1638153370,"is_pvip":false,"replies":[{"id":117633,"content":"还好你们应该是成功了，不然这样做风险真的有点大","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1638326753,"ip_address":"","comment_id":323758,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"目前 就职 一家传统的互联网企业团队人数3个前端3个后端1个运维 18年的时候 经历了主要业务系统重构 耗时接近10个月，主要是三个大一统的.net fromework 项目，根据业务功能 拆分为七个大颗粒的分布式集群服务(netcore)，包括数据库 缓存 所有相关模块 全部重构 完成后经历了 一个月测试后上线 进行数据整理、数据库切换 整体切换线上服务。虽然我不太同意 这种一次性切换的方式，风险略大。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534972,"discussion_content":"还好你们应该是成功了，不然这样做风险真的有点大","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638326753,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322590,"user_name":"DFighting","can_delete":false,"product_type":"c1","uid":1233193,"ip_address":"","ucode":"F3BA2426FF8582","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/29/1b1234ed.jpg","comment_is_top":false,"comment_ctime":1637491279,"is_pvip":false,"replies":[{"id":117117,"content":"你可以顺着这个思路再思考：什么时候要重写？ ：）","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1637546121,"ip_address":"","comment_id":322590,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"感觉老师最后判断是系统优化还是重构的方式很形象：推倒重来架子一样，优化，否则重构，学习到了","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532145,"discussion_content":"你可以顺着这个思路再思考：什么时候要重写？ ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637546121,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208850,"user_name":"付锐涛","can_delete":false,"product_type":"c1","uid":1450711,"ip_address":"","ucode":"F5BF0571596C4B","user_header":"https://static001.geekbang.org/account/avatar/00/16/22/d7/d166f764.jpg","comment_is_top":false,"comment_ctime":1587451211,"is_pvip":false,"replies":[{"id":79014,"content":"其实我觉得应该引入vue😃","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1588162894,"ip_address":"","comment_id":208850,"utype":1}],"discussion_count":3,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"说一下我们公司的业务管理系统，有一个业务大表单（10个子页面组装而成，使用easyui+js实现），不同的业务场景，这个大表单的元素需要动态变化（可见、必填、校验规则）。\n以前的做法是大范围变化全部复制一套，小范围变化使用JavaScript做动态控制，随着业务的演进这样的表单复制了5套，对应的js文件也复制了5套并做个性化修改，当需要维护表单的时候经常要5套一起修改，经常出现错改或者漏改的情况。\n这个表单是核心业务表单，随着业务的发展修改频率非常高，所以想着能不能做成可配置的，刚开始想到以下两个方案：\n1.引入vue\n2.在后台生成表单html\n由于团队内都是后端程序员，所以vue的学习成本导致被放弃。使用第二套方案相当于要开发一套表单生成系统，而且要保证前端样式不变，难度比vue还高。\n最后结合实际情况，区分出表单中可变性（可见、必填、校验规则）和不可变性（表单布局），将表单布局整理出一套模板，再在数据库中存储每个元素的可变属性，页面渲染成功之后动态调整可变性。\n\n由于履历原因，一直没有机会参与到架构搭建和架构重构这种级别的改造中，所做的重构也都是功能级别的，正在探索架构师的玩法。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492646,"discussion_content":"其实我觉得应该引入vue😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588162894,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353225,"discussion_content":"看到这篇文章后, 突然有一个疑问: 在成为架构师的路上肯定要根据自己对系统理解的想法转变为具体的实施方案, 如果当中出了问题了怎么办呢? ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615085497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1101101,"avatar":"https://static001.geekbang.org/account/avatar/00/10/cd/2d/abb7bfe3.jpg","nickname":"皇埔铁蛋","note":"","ucode":"BDBD9D0ADC1219","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550502,"discussion_content":"出现问题在所难免，重要的是要根据发生的问题进行反思总结，是框架选型错误，还是跟业务兼容性不合适，大公司的架构设计模式不代表适配所有的公司，要灵活应变","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644571344,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":353225,"ip_address":"","group_id":0},"score":550502,"extra":""}]}]},{"had_liked":false,"id":199595,"user_name":"Regis","can_delete":false,"product_type":"c1","uid":1435632,"ip_address":"","ucode":"3911E4EDE27F4E","user_header":"https://static001.geekbang.org/account/avatar/00/15/e7/f0/d0bf3a5f.jpg","comment_is_top":false,"comment_ctime":1585492054,"is_pvip":false,"replies":[{"id":74863,"content":"加油，坚持就会有收获","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1585539075,"ip_address":"","comment_id":199595,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"学习是一个漫长的过程，尤其架构这方面，需要有丰富的开发经验及开发过程中的总结才能成长起来，加油💪","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489852,"discussion_content":"加油，坚持就会有收获","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585539075,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187785,"user_name":"谭方敏","can_delete":false,"product_type":"c1","uid":1710960,"ip_address":"","ucode":"728DC7ECB7C902","user_header":"https://static001.geekbang.org/account/avatar/00/1a/1b/70/547042ee.jpg","comment_is_top":false,"comment_ctime":1584241252,"is_pvip":false,"replies":[{"id":72853,"content":"可以优化一下","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1584425023,"ip_address":"","comment_id":187785,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"有的放矢\n架构师的首要任务是从一大堆纷繁复杂的问题中识别比较真正要通过架构重构来解决的问题，集中力量快速解决，而不是想着通过架构重构来解决所有的问题。\n\n我公司目前的开发系统需要重构，主要有两方面：\n1）管理所有节点的全局服务器本身应该是单点，并且与业务无相关的，它的职责就是动态管理各个节点增删查改，以及服务器配置但是因为业务逻辑上也需要一些全局数据，比如跨网关业务，所以当初为了偷懒，就把用户在线状态丢全局服务器里了。现在因为业务耦合度，全局服务器需要频繁调整业务逻辑。\n需要梳理这块业务流程，不在全局服务管理，这样才能使得全局服务器完全业务无相关。\n\n2）数据库服务器单点，当初也是基于当时用户规模来决定的，如果数据库存在多点的话，又需要进行负载均衡，这样会加大调用方难度。所以权衡之下，在数据库方面采用集群化，这样确保数据高可用，而业务逻辑上面追求简单处理，而采用了单点处理逻辑。\n3）调用方式都是采用直接调用api的方式，没有做到调用解耦，比如引入mq。\n","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489852,"discussion_content":"加油，坚持就会有收获","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585539075,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19857,"user_name":"恋着歌","can_delete":false,"product_type":"c1","uid":1001048,"ip_address":"","ucode":"CFDC00CB9965D9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/46/58/31205087.jpg","comment_is_top":false,"comment_ctime":1534124199,"is_pvip":false,"replies":[{"id":6903,"content":"重构通常都会涉及数据，为了避免风险，我们一般都是分步骤实施，从易到难，先将关联度不大的，比较独立的数据重构，再来动复杂的。\n\n你的这个案例业务上的场景我没看的太懂，如果你说的site是我常规理解的站点，那一个site一个库反而是合理的，至于mq通知tomcat更新数据源，没理解这样。\n\n建议和后端同学一起分析讨论重构方案。","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1534125580,"ip_address":"","comment_id":19857,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"当初的一个 demo 到现在已经做了3年了，迟迟没有重构。作为一个前端我感觉现在急需数据库层的重构。现在一个业务涉及多个 site，但是一个 site 一个库，最近上线通过程序 addsite 功能，导致多种问题。1，要实现动态数据源，2，要引入 mq 通知另一台 tomcat 更新数据源。历时一个半月才上线了一个粗糙版本。我给的方案是同一个业务就同一个数据库，上面的两问题都不存在了。现在重构的最大阻力是旧数据迁移，请问老师在这放面有比较好的建议吗？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487240,"discussion_content":"可以优化一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584425023,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19415,"user_name":"大魔王汪汪","can_delete":false,"product_type":"c1","uid":1010680,"ip_address":"","ucode":"4B205CB52FC95F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6b/f8/b4da7936.jpg","comment_is_top":false,"comment_ctime":1533817788,"is_pvip":false,"replies":[{"id":6726,"content":"没这个能力呀，写几篇文章可以，这个专栏有点难😄","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533864813,"ip_address":"","comment_id":19415,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"重构系统首先是建立在熟悉系统业务上，有了全局的业务视角在架构选型和构件上才会有的放矢。\n\n华哥可以开个架构师软技能专栏，继续订阅。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422002,"discussion_content":"重构通常都会涉及数据，为了避免风险，我们一般都是分步骤实施，从易到难，先将关联度不大的，比较独立的数据重构，再来动复杂的。\n\n你的这个案例业务上的场景我没看的太懂，如果你说的site是我常规理解的站点，那一个site一个库反而是合理的，至于mq通知tomcat更新数据源，没理解这样。\n\n建议和后端同学一起分析讨论重构方案。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534125580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353228,"discussion_content":"&#34;重构通常都会涉及数据，为了避免风险，我们一般都是分步骤实施，从易到难，先将关联度不大的，比较独立的数据重构，再来动复杂的。&#34;","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615085906,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":367493,"user_name":"数据小白","can_delete":false,"product_type":"c1","uid":1445466,"ip_address":"上海","ucode":"85653228A7AF5E","user_header":"https://static001.geekbang.org/account/avatar/00/16/0e/5a/617f28bf.jpg","comment_is_top":false,"comment_ctime":1675262379,"is_pvip":false,"replies":[{"id":133851,"content":"是的，不过架构重构可能要看长远一些，例如重构后的架构能够满足业务发展3年的需要","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1675329189,"ip_address":"广东","comment_id":367493,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"当前任职的公司，曾经发起了多次系统优化，系统性能得到了很大的提升，但是随着业务的发展，原有的架构已无法满足业务的需求，所以公司对系统整体的架构进行了重构，我理解下来，进行架构重构还是优化，主要还是看是否能满足业务需求，如果能满足业务需求，优化即可，投入人力也不会很多，如果已无法满足业务发展，则需要进行重构。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421830,"discussion_content":"没这个能力呀，写几篇文章可以，这个专栏有点难😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533864813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353229,"discussion_content":"不了解业务的架构师感觉是在开玩笑, 哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615085962,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353920,"user_name":"李晨","can_delete":false,"product_type":"c1","uid":2716735,"ip_address":"广东","ucode":"D734DE3B9A5A2D","user_header":"https://static001.geekbang.org/account/avatar/00/29/74/3f/5c9fd08f.jpg","comment_is_top":false,"comment_ctime":1659926806,"is_pvip":false,"replies":[{"id":128826,"content":"要重新分层的话，基本就是架构重构或者架构演进了","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1660208049,"ip_address":"广东","comment_id":353920,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"我现在开发的是cdp，现在存在的问题有：\n1、数据没有分层，即没有分出ods、dwd、dws、dwt、ads这几层。导致的问题是数据的扩展性很差，即新增一个需求，可能需要在数据表上直接增加字段，最后变成了大宽表，会产生性能问题；\n2、原有的架构很简单，就是kafka+doris（用来做实时数仓）。缺乏数据回写、批处理操作等特性；\n结合以上两点原因，我认为需要的是重构而不是优化","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":601639,"discussion_content":"是的，不过架构重构可能要看长远一些，例如重构后的架构能够满足业务发展3年的需要","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1675329190,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":340160,"user_name":"Geek_9f2339","can_delete":false,"product_type":"c1","uid":2182752,"ip_address":"","ucode":"13B68C4F9BFA5A","user_header":"","comment_is_top":false,"comment_ctime":1648635380,"is_pvip":false,"replies":[{"id":124537,"content":"你的回答高度有点高，我没有理解到关键点 ：）","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1648893699,"ip_address":"","comment_id":340160,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"我想站在程序员的角度讨论一下这个问题（希望大佬给与指正）：\n1. 作为程序员 小到一个模块，一个类，大到一个服务，一个系统，其实在我们眼里就是一个对象，\n2. 重构，优化，其实就是面向对象编程的一个思考，在业务发展的不同阶段，站在不同的角度，看到的对象不尽相同\n3. 架构的重构 是站在较高的维度取观察整个业务系统，剥离出其中一层一层的对象，而根据业务权重来区分这些对象，如：业务发展的初期，我们把一个电商平台称之为一个对象，所以对应的就是单体应用，随着业务的发展，我们可能会在电商平台下 抽象出 商品搜索、购物车、订单、支付 等等多个对象，对象之间松散耦合，我们称之为微服务架构。\n个人的理解架构重构优化，就是在之前的对象中找到更小对象。让更小的对象，松散的耦合，独立演变。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583564,"discussion_content":"要重新分层的话，基本就是架构重构或者架构演进了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660208049,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2716735,"avatar":"https://static001.geekbang.org/account/avatar/00/29/74/3f/5c9fd08f.jpg","nickname":"李晨","note":"","ucode":"D734DE3B9A5A2D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":583574,"discussion_content":"嗯嗯，我的老大想重构一步到位，直接走到终态。但是我觉得这样的话耗费的时间太长，而且只有一个最终目标的话，容易在重构的过程中，由于看不到阶段性成果，而导致团队产生厌烦的心情。不如设立多阶段，这样的话，重构可以跟着需求一起跑，然后也可以在发展的过程中，不断矫正重构的方向。老师你怎么看？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660208928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":583564,"ip_address":"北京","group_id":0},"score":583574,"extra":""}]}]},{"had_liked":false,"id":323758,"user_name":"达叔灬","can_delete":false,"product_type":"c1","uid":2404887,"ip_address":"","ucode":"5CCBAF13548F02","user_header":"https://static001.geekbang.org/account/avatar/00/24/b2/17/3161b49c.jpg","comment_is_top":false,"comment_ctime":1638153370,"is_pvip":false,"replies":[{"id":117633,"content":"还好你们应该是成功了，不然这样做风险真的有点大","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1638326753,"ip_address":"","comment_id":323758,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"目前 就职 一家传统的互联网企业团队人数3个前端3个后端1个运维 18年的时候 经历了主要业务系统重构 耗时接近10个月，主要是三个大一统的.net fromework 项目，根据业务功能 拆分为七个大颗粒的分布式集群服务(netcore)，包括数据库 缓存 所有相关模块 全部重构 完成后经历了 一个月测试后上线 进行数据整理、数据库切换 整体切换线上服务。虽然我不太同意 这种一次性切换的方式，风险略大。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559722,"discussion_content":"你的回答高度有点高，我没有理解到关键点 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648893699,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322590,"user_name":"DFighting","can_delete":false,"product_type":"c1","uid":1233193,"ip_address":"","ucode":"F3BA2426FF8582","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/29/1b1234ed.jpg","comment_is_top":false,"comment_ctime":1637491279,"is_pvip":false,"replies":[{"id":117117,"content":"你可以顺着这个思路再思考：什么时候要重写？ ：）","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1637546121,"ip_address":"","comment_id":322590,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"感觉老师最后判断是系统优化还是重构的方式很形象：推倒重来架子一样，优化，否则重构，学习到了","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534972,"discussion_content":"还好你们应该是成功了，不然这样做风险真的有点大","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638326753,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":88560,"user_name":"花花大脸猫","can_delete":false,"product_type":"c1","uid":1117318,"ip_address":"","ucode":"8ABDB3F7F4FB0F","user_header":"https://static001.geekbang.org/account/avatar/00/11/0c/86/8e52afb8.jpg","comment_is_top":false,"comment_ctime":1555942342,"is_pvip":true,"replies":[{"id":33319,"content":"优化指找到瓶颈进行改进，重构指重新规划架构","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1557459582,"ip_address":"","comment_id":88560,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"公司之前由于路由表的设计问题，导致整个业务入口的路由计算出现问题引起后续的业务处理逻辑有分叉，之前的设置初衷是商户与路由的关系1对1，但是最近的业务发展发现其实是1对n，这就导致目前接入新的业务需求，改动量比较大，而且目前只能按照老师您所说的能够通过修修补补来解决问题，但是指不定哪一天就撑不住了，请问老师，这种情况是属于系统优化，还是系统重构？我自己的理解相当于核心路由模块的系统重构，不知道理解的正不正确。","like_count":0},{"had_liked":false,"id":34639,"user_name":"小喵喵","can_delete":false,"product_type":"c1","uid":1062444,"ip_address":"","ucode":"FDBBB2A59DB8B6","user_header":"https://static001.geekbang.org/account/avatar/00/10/36/2c/8bd4be3a.jpg","comment_is_top":false,"comment_ctime":1540236968,"is_pvip":false,"replies":[{"id":12322,"content":"接口通过json传递数据，一个接口就搞定了","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1540258122,"ip_address":"","comment_id":34639,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"A集群和B集群通过接口来同步数据，系统很大的时候，那得写多少接口啊？\n还有如果表的主键是自动增长的，那怎么办？同步数据之间还有没有其他方案呢？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447828,"discussion_content":"优化指找到瓶颈进行改进，重构指重新规划架构","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557459582,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22101,"user_name":"呵呵","can_delete":false,"product_type":"c1","uid":1052862,"ip_address":"","ucode":"986CC73CFBBC67","user_header":"","comment_is_top":false,"comment_ctime":1535500123,"is_pvip":false,"replies":[{"id":7991,"content":"不是灾备，是双活，同时对外提供服务","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1535608825,"ip_address":"","comment_id":22101,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"大神，游戏接入系统的重构，A,B集群，只能同时单集群提供服务吧，另外一个是灾备？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427281,"discussion_content":"接口通过json传递数据，一个接口就搞定了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540258122,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21830,"user_name":"王维","can_delete":false,"product_type":"c1","uid":1091684,"ip_address":"","ucode":"836E6CDB1A56BA","user_header":"https://static001.geekbang.org/account/avatar/00/10/a8/64/965e0d9b.jpg","comment_is_top":false,"comment_ctime":1535365587,"is_pvip":false,"replies":[{"id":7828,"content":"你理解为微信用户数据+朋友圈数据放在一个系统就可以了😊","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1535376204,"ip_address":"","comment_id":21830,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"后台系统重构的例子实在没看懂，P业务数据+游戏数据是什么？其他业务的游戏数据又是什么？一头雾水","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423000,"discussion_content":"不是灾备，是双活，同时对外提供服务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535608825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19576,"user_name":"one day","can_delete":false,"product_type":"c1","uid":1108243,"ip_address":"","ucode":"404C30FF5BA1E8","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/13/1f92e7f5.jpg","comment_is_top":false,"comment_ctime":1533886878,"is_pvip":false,"replies":[{"id":6796,"content":"那就可以尝试，毕竟我对你们的业务不熟悉，意见仅供参考","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533903553,"ip_address":"","comment_id":19576,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"老师好，接上老师的回复。原来单一的数据库，业务模块分开，但数据层面查询关联太多，不痛不知，至于为什么是禁止关联查询，理想状态，关联拆开，数据库表也拆开了，多台数据库的联合能力便可用。至于拆不开的，通常在管理端的业务，可建数据仓库，c端用户的情况，关联拆在数据库层面，服务之间调用聚合数据。慢操作分两种情况，慢查询，利用异步加同步的方法，聚合结果，慢修改，利用mq的能力不断的处理，也是消息机制的保证最终消费。当然这期间，会产生很多问题，还好身在其中，不难怎么成长自己。重构也许最大的收获就是体验。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422884,"discussion_content":"你理解为微信用户数据+朋友圈数据放在一个系统就可以了😊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535376204,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19419,"user_name":"李二木","can_delete":false,"product_type":"c1","uid":1103091,"ip_address":"","ucode":"30E03BB84ADB27","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/f3/129d6dfe.jpg","comment_is_top":false,"comment_ctime":1533820243,"is_pvip":true,"replies":[{"id":6724,"content":"那就先做大😄","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533864711,"ip_address":"","comment_id":19419,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"可惜，现在做的体统很小，不给机会重构啊。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421900,"discussion_content":"那就可以尝试，毕竟我对你们的业务不熟悉，意见仅供参考","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533903553,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19319,"user_name":"JustDoIt","can_delete":false,"product_type":"c1","uid":1067771,"ip_address":"","ucode":"4084544B40506D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/UNC7eWZWvRyAPWUpIJicgZDr2yKia62ZVl3PEwDLZUJXlInlobUmrtqnIGXcPuoBib0tqriaia8aLBqdkA4kHePLm8Q/132","comment_is_top":false,"comment_ctime":1533775161,"is_pvip":false,"replies":[{"id":6683,"content":"这类协议的选择，一般建议哪个熟悉用哪个，不熟悉的方案，别人用的再好，自己用也是一堆问题😄","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533779933,"ip_address":"","comment_id":19319,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"刚刚经历过“狗血”的重构，也是新官上任，把我们持久层有jpa换成mybatis,老板不懂技术，同意重构，新来的人问我的意见，我反对只是换持久层，感觉二者各有优劣，只是换持久层劳民伤财，新官听不进，后面搞了一个月多月，草草收场，上线了发现问题比之前更多，请问，真有必要把jpa换mybatis吗？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421833,"discussion_content":"那就先做大😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533864711,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":301716,"user_name":"小鬼爱风雪","can_delete":false,"product_type":"c1","uid":2646199,"ip_address":"","ucode":"FF72E39E557C6F","user_header":"https://static001.geekbang.org/account/avatar/00/28/60/b7/4a665c73.jpg","comment_is_top":false,"comment_ctime":1625820340,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"需要重构。","like_count":0},{"had_liked":false,"id":288778,"user_name":"梦倚栏杆","can_delete":false,"product_type":"c1","uid":1095857,"ip_address":"","ucode":"BDEB97F2822445","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/bvj76PmeUvW8kokyu91IZWuRATKmabibDWbzAj2TajeEic7WvKCJOLaOh6jibEmdQ36EO3sBUZ0HibAiapsrZo64U8w/132","comment_is_top":false,"comment_ctime":1618668728,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"我现在没想过搞过大的动静，基本还是两方面入手：\n1. 拆分：全部放在一起，没有重点突出，人脑不容易记忆，把主线拆分拆分(分模块)。\n2.逻辑优化,bugFix: 针对现在的问题，根据前面评估的 影响面*发生概率来决定问题修复先后顺序","like_count":0},{"had_liked":false,"id":249541,"user_name":"XiangJiawei","can_delete":false,"product_type":"c1","uid":1324641,"ip_address":"","ucode":"AAC11557A3477B","user_header":"https://static001.geekbang.org/account/avatar/00/14/36/61/8863e18c.jpg","comment_is_top":false,"comment_ctime":1600687527,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"总结：\n1、如果重新设计架构与老的架构差异不大，则考虑架构优化即可。\n2、重构之前，多思考对周边业务团队的影响，提前想好策略，避免重构需要花大量精力与周边业务团队进行协调和扯皮。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421782,"discussion_content":"这类协议的选择，一般建议哪个熟悉用哪个，不熟悉的方案，别人用的再好，自己用也是一堆问题😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533779933,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":88560,"user_name":"花花大脸猫","can_delete":false,"product_type":"c1","uid":1117318,"ip_address":"","ucode":"8ABDB3F7F4FB0F","user_header":"https://static001.geekbang.org/account/avatar/00/11/0c/86/8e52afb8.jpg","comment_is_top":false,"comment_ctime":1555942342,"is_pvip":true,"replies":[{"id":33319,"content":"优化指找到瓶颈进行改进，重构指重新规划架构","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1557459582,"ip_address":"","comment_id":88560,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"公司之前由于路由表的设计问题，导致整个业务入口的路由计算出现问题引起后续的业务处理逻辑有分叉，之前的设置初衷是商户与路由的关系1对1，但是最近的业务发展发现其实是1对n，这就导致目前接入新的业务需求，改动量比较大，而且目前只能按照老师您所说的能够通过修修补补来解决问题，但是指不定哪一天就撑不住了，请问老师，这种情况是属于系统优化，还是系统重构？我自己的理解相当于核心路由模块的系统重构，不知道理解的正不正确。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447828,"discussion_content":"优化指找到瓶颈进行改进，重构指重新规划架构","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557459582,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":34639,"user_name":"小喵喵","can_delete":false,"product_type":"c1","uid":1062444,"ip_address":"","ucode":"FDBBB2A59DB8B6","user_header":"https://static001.geekbang.org/account/avatar/00/10/36/2c/8bd4be3a.jpg","comment_is_top":false,"comment_ctime":1540236968,"is_pvip":false,"replies":[{"id":12322,"content":"接口通过json传递数据，一个接口就搞定了","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1540258122,"ip_address":"","comment_id":34639,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"A集群和B集群通过接口来同步数据，系统很大的时候，那得写多少接口啊？\n还有如果表的主键是自动增长的，那怎么办？同步数据之间还有没有其他方案呢？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427281,"discussion_content":"接口通过json传递数据，一个接口就搞定了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540258122,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22101,"user_name":"呵呵","can_delete":false,"product_type":"c1","uid":1052862,"ip_address":"","ucode":"986CC73CFBBC67","user_header":"","comment_is_top":false,"comment_ctime":1535500123,"is_pvip":false,"replies":[{"id":7991,"content":"不是灾备，是双活，同时对外提供服务","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1535608825,"ip_address":"","comment_id":22101,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"大神，游戏接入系统的重构，A,B集群，只能同时单集群提供服务吧，另外一个是灾备？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423000,"discussion_content":"不是灾备，是双活，同时对外提供服务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535608825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21830,"user_name":"王维","can_delete":false,"product_type":"c1","uid":1091684,"ip_address":"","ucode":"836E6CDB1A56BA","user_header":"https://static001.geekbang.org/account/avatar/00/10/a8/64/965e0d9b.jpg","comment_is_top":false,"comment_ctime":1535365587,"is_pvip":false,"replies":[{"id":7828,"content":"你理解为微信用户数据+朋友圈数据放在一个系统就可以了😊","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1535376204,"ip_address":"","comment_id":21830,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"后台系统重构的例子实在没看懂，P业务数据+游戏数据是什么？其他业务的游戏数据又是什么？一头雾水","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422884,"discussion_content":"你理解为微信用户数据+朋友圈数据放在一个系统就可以了😊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535376204,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19576,"user_name":"one day","can_delete":false,"product_type":"c1","uid":1108243,"ip_address":"","ucode":"404C30FF5BA1E8","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/13/1f92e7f5.jpg","comment_is_top":false,"comment_ctime":1533886878,"is_pvip":false,"replies":[{"id":6796,"content":"那就可以尝试，毕竟我对你们的业务不熟悉，意见仅供参考","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533903553,"ip_address":"","comment_id":19576,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"老师好，接上老师的回复。原来单一的数据库，业务模块分开，但数据层面查询关联太多，不痛不知，至于为什么是禁止关联查询，理想状态，关联拆开，数据库表也拆开了，多台数据库的联合能力便可用。至于拆不开的，通常在管理端的业务，可建数据仓库，c端用户的情况，关联拆在数据库层面，服务之间调用聚合数据。慢操作分两种情况，慢查询，利用异步加同步的方法，聚合结果，慢修改，利用mq的能力不断的处理，也是消息机制的保证最终消费。当然这期间，会产生很多问题，还好身在其中，不难怎么成长自己。重构也许最大的收获就是体验。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421900,"discussion_content":"那就可以尝试，毕竟我对你们的业务不熟悉，意见仅供参考","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533903553,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19419,"user_name":"李二木","can_delete":false,"product_type":"c1","uid":1103091,"ip_address":"","ucode":"30E03BB84ADB27","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/f3/129d6dfe.jpg","comment_is_top":false,"comment_ctime":1533820243,"is_pvip":true,"replies":[{"id":6724,"content":"那就先做大😄","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533864711,"ip_address":"","comment_id":19419,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"可惜，现在做的体统很小，不给机会重构啊。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421833,"discussion_content":"那就先做大😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533864711,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19319,"user_name":"JustDoIt","can_delete":false,"product_type":"c1","uid":1067771,"ip_address":"","ucode":"4084544B40506D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/UNC7eWZWvRyAPWUpIJicgZDr2yKia62ZVl3PEwDLZUJXlInlobUmrtqnIGXcPuoBib0tqriaia8aLBqdkA4kHePLm8Q/132","comment_is_top":false,"comment_ctime":1533775161,"is_pvip":false,"replies":[{"id":6683,"content":"这类协议的选择，一般建议哪个熟悉用哪个，不熟悉的方案，别人用的再好，自己用也是一堆问题😄","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533779933,"ip_address":"","comment_id":19319,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"刚刚经历过“狗血”的重构，也是新官上任，把我们持久层有jpa换成mybatis,老板不懂技术，同意重构，新来的人问我的意见，我反对只是换持久层，感觉二者各有优劣，只是换持久层劳民伤财，新官听不进，后面搞了一个月多月，草草收场，上线了发现问题比之前更多，请问，真有必要把jpa换mybatis吗？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421782,"discussion_content":"这类协议的选择，一般建议哪个熟悉用哪个，不熟悉的方案，别人用的再好，自己用也是一堆问题😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533779933,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":301716,"user_name":"小鬼爱风雪","can_delete":false,"product_type":"c1","uid":2646199,"ip_address":"","ucode":"FF72E39E557C6F","user_header":"https://static001.geekbang.org/account/avatar/00/28/60/b7/4a665c73.jpg","comment_is_top":false,"comment_ctime":1625820340,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"需要重构。","like_count":0},{"had_liked":false,"id":288778,"user_name":"梦倚栏杆","can_delete":false,"product_type":"c1","uid":1095857,"ip_address":"","ucode":"BDEB97F2822445","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/bvj76PmeUvW8kokyu91IZWuRATKmabibDWbzAj2TajeEic7WvKCJOLaOh6jibEmdQ36EO3sBUZ0HibAiapsrZo64U8w/132","comment_is_top":false,"comment_ctime":1618668728,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"我现在没想过搞过大的动静，基本还是两方面入手：\n1. 拆分：全部放在一起，没有重点突出，人脑不容易记忆，把主线拆分拆分(分模块)。\n2.逻辑优化,bugFix: 针对现在的问题，根据前面评估的 影响面*发生概率来决定问题修复先后顺序","like_count":0},{"had_liked":false,"id":249541,"user_name":"XiangJiawei","can_delete":false,"product_type":"c1","uid":1324641,"ip_address":"","ucode":"AAC11557A3477B","user_header":"https://static001.geekbang.org/account/avatar/00/14/36/61/8863e18c.jpg","comment_is_top":false,"comment_ctime":1600687527,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"总结：\n1、如果重新设计架构与老的架构差异不大，则考虑架构优化即可。\n2、重构之前，多思考对周边业务团队的影响，提前想好策略，避免重构需要花大量精力与周边业务团队进行协调和扯皮。","like_count":0},{"had_liked":false,"id":104910,"user_name":"Geek_b04b12","can_delete":false,"product_type":"c1","uid":1112139,"ip_address":"","ucode":"F8705A21FCDF09","user_header":"https://static001.geekbang.org/account/avatar/00/10/f8/4b/5ae62b10.jpg","comment_is_top":false,"comment_ctime":1560868158,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"还处于创业阶段，目前还是采用了一些优化的方案，前段缓存，小文件存储，web服务，rds","like_count":0},{"had_liked":false,"id":94337,"user_name":"日光倾城","can_delete":false,"product_type":"c1","uid":1120345,"ip_address":"","ucode":"E4329963F660DC","user_header":"https://static001.geekbang.org/account/avatar/00/11/18/59/daeb0b6c.jpg","comment_is_top":false,"comment_ctime":1557793170,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"我们现在做的系统，所有的业务逻辑都在一个系统中，其他系统都是面向用户或者第三方的门面，这样导致核心系统一挂，所有的业务都不可用，感觉还是要重构，把业务拆分开","like_count":0},{"had_liked":false,"id":83414,"user_name":"开心果源～老余","can_delete":false,"product_type":"c1","uid":1355445,"ip_address":"","ucode":"EEA63D092246C8","user_header":"https://static001.geekbang.org/account/avatar/00/14/ae/b5/df9e0b81.jpg","comment_is_top":false,"comment_ctime":1554565460,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"用架构思维搞定客户!","like_count":0},{"had_liked":false,"id":58991,"user_name":"vic","can_delete":false,"product_type":"c1","uid":1258236,"ip_address":"","ucode":"6C59A40DF9310A","user_header":"https://static001.geekbang.org/account/avatar/00/13/32/fc/5d901185.jpg","comment_is_top":false,"comment_ctime":1547266772,"is_pvip":false,"replies":null,"discussion_count":2,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"想知道,@one day为期3个月的重构做的怎么样了","like_count":0},{"had_liked":false,"id":21320,"user_name":"天天向上卡索","can_delete":false,"product_type":"c1","uid":1009850,"ip_address":"","ucode":"E3724C3B39BD3F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/68/ba/c0cf8bf3.jpg","comment_is_top":false,"comment_ctime":1535026886,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"感觉现在我们的系统依赖有些严重，最近在拆分，需要将一些公用的基础组件提炼出来，避免到处重复造轮子","like_count":0},{"had_liked":false,"id":20370,"user_name":"LouisLimTJ","can_delete":false,"product_type":"c1","uid":1149462,"ip_address":"","ucode":"E430BC6BE62C22","user_header":"https://static001.geekbang.org/account/avatar/00/11/8a/16/10420350.jpg","comment_is_top":false,"comment_ctime":1534398157,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"我们有一个业务数据系统，是要把各种业务数据源采集，最后汇集到一个数据存储系统，供后台业务人员分析。其中，数据源数据是以key value的形式提供，而下游的数据存储系统采用是json形式接口，并且自带schema。所以该业务数据系统的任务是适配下游接口的要求，数据进行接入。目前的问题在于，为了适配，中间传输层不得不自带业务理解，以完成从key value到下游schema的转换。经过了一年的时间一个团队的开发，目前的转换逻辑已经变得混乱不堪，传输与业务强耦合，下游数据也经常被业务人员质疑不可靠。\n我的观点是，这个json格式自带schema的接口必然迫使中间层做业务逻辑的转换，是一切问题的根源，所以从接口设计上就已经是错了。我的思路是，把schema的接口打通，设计成弱schema或者无schema的接口，中间系统只是负责采集汇总罢了。\n当然这种思路不好落地。首先下游接口是整个公司层面的，而我们的上游数据只是某个业务线的，公司层面的接口不可能为了某几个业务线去改变。其次，业务逻辑的解释复杂度并没有降低，只不过从中间传输转移到下游系统而已。\n所以目前该系统团队很大一部分时间做的工作就是，有什么bug就修改什么bug，缺了哪个业务逻辑就补哪条逻辑，希望过个猴年马月慢慢稳定下来。。\n","like_count":0},{"had_liked":false,"id":19312,"user_name":"吴科🍀","can_delete":false,"product_type":"c1","uid":1112547,"ip_address":"","ucode":"8F2C317887A323","user_header":"https://static001.geekbang.org/account/avatar/00/10/f9/e3/2529c7dd.jpg","comment_is_top":false,"comment_ctime":1533774363,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"系统优化，我们公司就是一个字，拆，拆数据库，拆服务，没有依赖就没有伤害","like_count":0,"discussions":[{"author":{"id":1102245,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d1/a5/2bbedc3b.jpg","nickname":"over","note":"","ucode":"FE272AC19842D3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":357810,"discussion_content":"可能转行了吧\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615872214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1059845,"avatar":"https://static001.geekbang.org/account/avatar/00/10/2c/05/b8e769fa.jpg","nickname":"Mickey","note":"","ucode":"548E950F57D2A8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1102245,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d1/a5/2bbedc3b.jpg","nickname":"over","note":"","ucode":"FE272AC19842D3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390615,"discussion_content":"哈哈，笑死","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629942296,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":357810,"ip_address":"","group_id":0},"score":390615,"extra":""}]}]},{"had_liked":false,"id":104910,"user_name":"Geek_b04b12","can_delete":false,"product_type":"c1","uid":1112139,"ip_address":"","ucode":"F8705A21FCDF09","user_header":"https://static001.geekbang.org/account/avatar/00/10/f8/4b/5ae62b10.jpg","comment_is_top":false,"comment_ctime":1560868158,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"还处于创业阶段，目前还是采用了一些优化的方案，前段缓存，小文件存储，web服务，rds","like_count":0},{"had_liked":false,"id":94337,"user_name":"日光倾城","can_delete":false,"product_type":"c1","uid":1120345,"ip_address":"","ucode":"E4329963F660DC","user_header":"https://static001.geekbang.org/account/avatar/00/11/18/59/daeb0b6c.jpg","comment_is_top":false,"comment_ctime":1557793170,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"我们现在做的系统，所有的业务逻辑都在一个系统中，其他系统都是面向用户或者第三方的门面，这样导致核心系统一挂，所有的业务都不可用，感觉还是要重构，把业务拆分开","like_count":0},{"had_liked":false,"id":83414,"user_name":"开心果源～老余","can_delete":false,"product_type":"c1","uid":1355445,"ip_address":"","ucode":"EEA63D092246C8","user_header":"https://static001.geekbang.org/account/avatar/00/14/ae/b5/df9e0b81.jpg","comment_is_top":false,"comment_ctime":1554565460,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"用架构思维搞定客户!","like_count":0},{"had_liked":false,"id":58991,"user_name":"vic","can_delete":false,"product_type":"c1","uid":1258236,"ip_address":"","ucode":"6C59A40DF9310A","user_header":"https://static001.geekbang.org/account/avatar/00/13/32/fc/5d901185.jpg","comment_is_top":false,"comment_ctime":1547266772,"is_pvip":false,"replies":null,"discussion_count":2,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"想知道,@one day为期3个月的重构做的怎么样了","like_count":0,"discussions":[{"author":{"id":1102245,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d1/a5/2bbedc3b.jpg","nickname":"over","note":"","ucode":"FE272AC19842D3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":357810,"discussion_content":"可能转行了吧\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615872214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1059845,"avatar":"https://static001.geekbang.org/account/avatar/00/10/2c/05/b8e769fa.jpg","nickname":"Mickey","note":"","ucode":"548E950F57D2A8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1102245,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d1/a5/2bbedc3b.jpg","nickname":"over","note":"","ucode":"FE272AC19842D3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390615,"discussion_content":"哈哈，笑死","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629942296,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":357810,"ip_address":"","group_id":0},"score":390615,"extra":""}]}]},{"had_liked":false,"id":21320,"user_name":"天天向上卡索","can_delete":false,"product_type":"c1","uid":1009850,"ip_address":"","ucode":"E3724C3B39BD3F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/68/ba/c0cf8bf3.jpg","comment_is_top":false,"comment_ctime":1535026886,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"感觉现在我们的系统依赖有些严重，最近在拆分，需要将一些公用的基础组件提炼出来，避免到处重复造轮子","like_count":0},{"had_liked":false,"id":20370,"user_name":"LouisLimTJ","can_delete":false,"product_type":"c1","uid":1149462,"ip_address":"","ucode":"E430BC6BE62C22","user_header":"https://static001.geekbang.org/account/avatar/00/11/8a/16/10420350.jpg","comment_is_top":false,"comment_ctime":1534398157,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"我们有一个业务数据系统，是要把各种业务数据源采集，最后汇集到一个数据存储系统，供后台业务人员分析。其中，数据源数据是以key value的形式提供，而下游的数据存储系统采用是json形式接口，并且自带schema。所以该业务数据系统的任务是适配下游接口的要求，数据进行接入。目前的问题在于，为了适配，中间传输层不得不自带业务理解，以完成从key value到下游schema的转换。经过了一年的时间一个团队的开发，目前的转换逻辑已经变得混乱不堪，传输与业务强耦合，下游数据也经常被业务人员质疑不可靠。\n我的观点是，这个json格式自带schema的接口必然迫使中间层做业务逻辑的转换，是一切问题的根源，所以从接口设计上就已经是错了。我的思路是，把schema的接口打通，设计成弱schema或者无schema的接口，中间系统只是负责采集汇总罢了。\n当然这种思路不好落地。首先下游接口是整个公司层面的，而我们的上游数据只是某个业务线的，公司层面的接口不可能为了某几个业务线去改变。其次，业务逻辑的解释复杂度并没有降低，只不过从中间传输转移到下游系统而已。\n所以目前该系统团队很大一部分时间做的工作就是，有什么bug就修改什么bug，缺了哪个业务逻辑就补哪条逻辑，希望过个猴年马月慢慢稳定下来。。\n","like_count":0},{"had_liked":false,"id":19312,"user_name":"吴科🍀","can_delete":false,"product_type":"c1","uid":1112547,"ip_address":"","ucode":"8F2C317887A323","user_header":"https://static001.geekbang.org/account/avatar/00/10/f9/e3/2529c7dd.jpg","comment_is_top":false,"comment_ctime":1533774363,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"系统优化，我们公司就是一个字，拆，拆数据库，拆服务，没有依赖就没有伤害","like_count":0}]}