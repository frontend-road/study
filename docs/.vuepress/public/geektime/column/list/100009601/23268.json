{"id":23268,"title":"33 | 无实例无真相：基于LoadRunner实现企业级服务器端性能测试的实践（下）","content":"<p>你好，我是茹炳晟。今天我和你分享的主题是：无实例无真相之基于LoadRunner实现企业级服务器端性能测试的实践（下）。</p>\n<p>今天，我会继续和你分享如何基于LoadRunner完成企业级服务器端的性能测试。通过我上一次的分享，你已经清楚知道了，整个性能测试过程可以分为五个阶段，并且解决了整个测试过程中最难的一部分工作，即如何获取具体的性能测试需求。</p>\n<p>现在，我们先来回顾一下，性能测试包含的五个阶段：性能需求收集以及负载计划制定、录制并增强虚拟用户脚本、创建并定义性能测试场景、执行性能测试场景，以及分析测试报告。所以，今天，我们就要解决剩下的4个阶段的问题了。</p>\n<h2>阶段2：录制并增强虚拟用户脚本</h2>\n<p>我已经在上篇文章中和你提到，完成了性能测试需求分析后，你就已经明确了要开发哪些性能测试脚本。现在，我们就一起来看看开发性能测试脚本的步骤，以及相关的技术细节。</p>\n<p>从整体角度来看，用LoadRunner开发虚拟用户脚本主要包括以下四个步骤：</p>\n<ol>\n<li>\n<p>识别被测应用使用的协议；</p>\n</li>\n<li>\n<p>录制脚本；</p>\n</li>\n<li>\n<p>完善录制得到的脚本；</p>\n</li>\n<li>\n<p>验证脚本的正确性。</p>\n</li>\n</ol>\n<p>这里需要注意的是，完善录制得到的脚本这一步，会包含大量的技术细节，也有很多对你来说可能是新概念的名词，所以我会着重讲解这一步，帮你克服性能测试道路上的这些“拦路虎”。</p><!-- [[[read_end]]] -->\n<p><strong>步骤1：识别被测应用使用的协议</strong></p>\n<p>如果你已经和系统设计、开发人员沟通过，明确知道了被测系统所采用的协议，那么你可以跳过这一步。如果还不知道具体使用的哪种协议的话，你可以使用Virtual User Generator模块自带的Protocol Advisor识别被测应用使用的协议，具体的操作方法也很简单：</p>\n<ol>\n<li>\n<p>在Virtual User Generator中依次点击File、Protocol、AdvisorAnalyze、Application，展开这些菜单。</p>\n</li>\n<li>\n<p>在打开的界面上按要求填写被测应用的信息。</p>\n</li>\n<li>\n<p>Protocol Advisor会自动运行被测系统。如果是网页应用，就会打开浏览器。</p>\n</li>\n<li>\n<p>在页面上执行一些典型的业务操作，完成这些业务操作后点击&quot;Stop Analyzing&quot;按钮停止录制。</p>\n</li>\n<li>\n<p>Protocol Advisor会根据刚才录制的内容自动分析被测应用使用的协议，并给出最终的建议。</p>\n</li>\n</ol>\n<p>接下来，你就可以使用Protocol Advisor建议的录制协议开始脚本录制工作了。如图1所示就是Protocol Advisor给出的建议录制协议界面。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/9a/20/9a8c760f3de2eaa1c5be274c70215920.png?wh=476*292\" alt=\"\" /></p>\n<center>图1 Protocol Advisor给出的建议录制协议界面</center>\n<p><strong>步骤2：录制脚本</strong></p>\n<p>脚本录制的基本原理是，通过GUI界面对被测系统进行业务操作，Virtual User Generator模块在后台捕获GUI操作所触发的客户端与服务器端的所有交互，并生产基于C语言的虚拟用户脚本文件。</p>\n<p>也就是说，录制脚本的过程需要通过GUI实际执行业务操作，所以我建议你在开始录制脚本前，先多次演练需要这些GUI操作步骤，并明确知道哪些操作步骤会对服务器端发起请求。</p>\n<p>我们要知道哪些操作步骤会对服务器发起请求的原因是，要将这些操作步骤在虚拟用户脚本中封装成“事务”（Transaction）。封装为“事务”的目的是统计响应时间，因为LoadRunner中的响应时间都是以“事务”为单位的。</p>\n<p>具体的录制步骤，主要包括如下三步，</p>\n<ol>\n<li>\n<p>首先，选择Create/Edit Scripts进入Virtual User Generator创建脚本的协议选择界面。</p>\n</li>\n<li>\n<p>选择正确的协议后进入Start Recording界面，选择需要录制的应用类型，并填写应用的详细信息。如果是Web应用，Application type就应该选择Internet Application，然后选择浏览器并填写这个Web应用的URL，完成后自动打开浏览器。</p>\n</li>\n<li>\n<p>在该浏览器中执行业务操作，Virtual User Generator模块会记录所有的业务操作，并生成脚本。</p>\n</li>\n</ol>\n<p><strong>在录制脚本的过程中，我强烈建议直接对发起后端调用的操作添加事务定义，而不要等到脚本生成后再添加</strong>。因为LoadRunner脚本的可读性并不好，在录制完的脚本中添加事务定义的难度会很大。</p>\n<p>在录制过程中，直接添加事务操作也很简单，主要包括如下三步：</p>\n<ol>\n<li>\n<p>在开始执行GUI操作前，先点击图2中的“事务开始”按钮并填写事务名称；</p>\n</li>\n<li>\n<p>执行GUI操作；</p>\n</li>\n<li>\n<p>操作完成后，点击图2中的“事务结束”按钮。</p>\n</li>\n</ol>\n<p>这样你刚才执行GUI操作的脚本就会被lr_start_transaction(“事务名称”)和lr_end_transaction(“事务名称”，LR_AUTO)包围起来，也就完成了添加事务的定义。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/66/34/6636bbd8056a7e992239fbb3b81bf134.png?wh=736*248\" alt=\"\" /></p>\n<center>图2 Virtual User Generator的脚本录制控制条</center>\n<p><strong>步骤3：完善录制得到的脚本</strong></p>\n<p>脚本录制，只是虚拟用户脚本开发中最简单的一步。我在上一次分享《无实例无真相：基于LoadRunner实现企业级服务器端性能测试的实践（上）》时，提到由Virtual User Generator模块录制的脚本不能直接使用，我们还需要对录制的脚本做以下处理：</p>\n<ul>\n<li>在两个事务之间加入思考时间（Think Time）；</li>\n<li>对界面输入的数据做参数化（Parameterization）操作；</li>\n<li>完成脚本的关联（Correlation）操作；</li>\n<li>加入检查点（Check Point）。</li>\n</ul>\n<p>这4步处理操作是虚拟用户脚本开发中最关键的地方，你不仅需要知道为什么要进行这些处理，更要能够完成这些处理，否则你录制的脚本无法成功回放。</p>\n<p><strong>第一，在两个事务之间加入思考时间</strong></p>\n<p>什么是思考时间呢？</p>\n<p>用户在实际使用系统时，并不会连续不断地向后端服务器发起请求，在两次发起请求之间往往会有一个时间的间隔，这个时间间隔主要来自于两个方面：</p>\n<ul>\n<li>一是，用户操作的人为等待时间，因为用户不可能像机器人那样快速地执行操作；</li>\n<li>二是，用户可能需要先在页面上填写很多信息后之后，才能提交操作，那么填写这些信息就需要花费一定的时间。</li>\n</ul>\n<p>所以，为了让虚拟用户脚本能够更真实地模拟实际用户的行为，我们就需要在两个事务之间加入一定的等待时间。这个等待时间，就是LoadRunner中的思考时间。</p>\n<p>你只要直接调用LoadRunner提供的lr_think_time()函数，就可以在两个事务之间加入思考时间。但是，这个思考时间到底设置为多少，并没有那么容易知道。思考时间往往会涉及多方面的因素，严格计算的话会非常复杂。</p>\n<p>所以，<strong>在实际项目中，一般先粗略估计一个值（比如15 s），然后在实际执行负载场景的过程中，再根据系统吞吐量调整。</strong></p>\n<p>你在后续调整思考时间时，无需逐行修改虚拟用户脚本代码，可以在Run-time Settings（运行时设置）中很方便地完成。如图3所示，Run-time Settings中支持多种方式调整思考时间。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/9b/9b/9bc228a755cb104b34bcc55e6e460c9b.png?wh=555*411\" alt=\"\" /></p>\n<center>图3 通过Run-time Settings统一调整思考时间</center>\n<ul>\n<li>As recorded，代表的是直接使用lr_think_time()函数中指定的时间。</li>\n<li>Mutiply recorded think time by，代表的是在lr_think_time()函数中指定的时间基础上乘以一个数字。比如这个数字是2，那么所有的思考时间都会翻倍。</li>\n<li>Use random percentage of recorded think time，指的是使用指定思考时间范围内的随机值。例如，如果lr_think_time()函数中指定的时间是2 s，并且指定最小值为50%，最大值为200%，则实际的思考时间会取最小值1 s（2 s<em>50%）和最大值4 s（2 s</em>200%）之间的随机值。</li>\n<li>Limit think time to，指的是为思考时间设置一个上限值，只要lr_think_time()函数中指定的时间没有超过这个上限值，就按照lr_think_time()函数指定的值，如果超过了就取这个上限值作为思考时间。</li>\n</ul>\n<p><strong>第二，对界面输入的数据做参数化操作</strong></p>\n<p>数据的参数化，其实很好理解，我再给你举个例子，你马上就能明白。</p>\n<p>假设，你录制的虚拟用户脚本完成的是用户登录操作，那么由于脚本回放时需要支持多用户的并发，所以必须要把脚本中的用户名和密码独立出来，放入专门的数据文件中，然后在这个文件中提供所有可能被用到的用户名和密码。</p>\n<p>有没有感觉这个概念很熟悉，它其实和我以前介绍到的<a href=\"https://time.geekbang.org/column/article/11966\">数据驱动的自动化测试</a>完全相同。</p>\n<p>图4给出了参数化配置的界面截图，LoadRunner支持的参数化的数据源很丰富，既可以是excel文件，也可以是数据库中的表等。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/41/77/414fcea000ef8a968cd25d5fbc5ee477.png?wh=558*569\" alt=\"\" /></p>\n<center>图4 虚拟用户脚本参数化配置的界面截图</center>\n<p>这里需要特别说明的是，凡是参数文件中使用的测试数据都需要在执行性能测试前，在被测系统中事先准备好。比如，还是以用户登录的脚本为例，假定你的参数文件中提供了5000个用于并发执行的用户信息，那么这5000个用户必须是已经实际存在于系统中的，这就要求你要在开始测试前事先准备好这5000个用户。</p>\n<p>所以，参数化操作其实由两部分组成：</p>\n<ol>\n<li>\n<p>性能测试脚本和测试数据的分离；</p>\n</li>\n<li>\n<p>事先建立性能测试的数据。</p>\n</li>\n</ol>\n<p>也就是说，参数化的过程往往与性能测试数据准备密不可分。</p>\n<p><strong>第三，完成脚本的关联操作</strong></p>\n<p>关联操作，是LoadRunner虚拟用户脚本开发过程中最关键的部分，直接关系到脚本是否可以回放成功。</p>\n<p>从概念上讲，关联的主要作用是，取出前序调用返回结果中的某些动态值，传递给后续的调用。是不是听起来很拗口，不太好理解？我们来看一个具体的例子吧。</p>\n<p>假设，每次客户端连接服务器端时，服务器端都会用当前的时间戳（Time Stamp）计算CheckSum，然后将Time Stamp和CheckSum返回给客户端。然后，客户端就把Time Stamp + CheckSum的组合作为唯一标识客户端的Session ID。录制脚本时，录制得到的一定是硬编码（hardcode）的Time Stamp值和CheckSum值。</p>\n<p>图5展示了这个交互过程，录制得到Time Stamp的值是TS，而CheckSum的值是CS。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/f2/02/f275c421d12a323f9ddcff63a4873c02.png?wh=604*325\" alt=\"\" /></p>\n<center>图5 关联原理图-脚本录制过程</center>\n<p>采用Time Stamp + CheckSum的组合作为Session ID的方式，在我们回放这个脚本的时候就有问题了。因为回放时，这段硬编码已经有了新的Time Stamp值和CheckSum值，并且显然与之前的值不同，所以服务器无法完成Session ID的验证，也就导致了脚本回放失败。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/d8/df/d8cdec2de5664b2d5b4288514c9cd4df.png?wh=486*215\" alt=\"\" /></p>\n<center>图6 关联原理图-脚本回放过程</center>\n<p>其实，这种情况几乎存在于所有的虚拟用户脚本中，所以我们必须要解决这个问题。</p>\n<p>解决方法就是，在脚本回放的过程中，实时抓取Time Stamp值和CheckSum值，然后用实时抓取到的值替换后续需要使用这两个值的地方。这个过程就是“关联”。</p>\n<p>如图7所示，<strong>关联就是解析服务器端的返回结果，抓取新的Time Stamp值和CheckSum值，然后后续的操作都使用新抓取的值，这样脚本就能回放成功了。</strong></p>\n<p><img src=\"https://static001.geekbang.org/resource/image/33/8f/33675b6e6a3b008cb3ebb16af58e6a8f.png?wh=548*271\" alt=\"\" /></p>\n<center>图7 关联原理图-使用“关联”后的脚本回放过程</center>\n<p>理解了关联操作，在脚本中处理关联就比较简单了，LoadRunner提供了功能强大的关联函数web_reg_save_param()。这个关联函数支持多种动态值的获取方式，用得最多的是基于“前序字符串匹配”加上“后续字符串匹配”的方式。其中，字符串匹配，支持正则表达式。</p>\n<p>我们一起来看个具体的例子吧。</p>\n<p>假设，服务器端返回的结果是“LB=name=timestamp value=8888.LB=name=CheckSum”，那么为了能够获取到“8888”这个动态值，我们就可以用“前序字符串=LB=name=timestamp value=”和“后续字符=.LB=name=CheckSum”来“框出” 8888”这个动态值。</p>\n<p>另外，需要特别注意的是web_reg_save_param()函数是注册型函数，必须放在获取动态值所属的请求前面，相当于先声明，后调用。</p>\n<p>更多的关联函数用法，你可以参考LoadRunner官方文档。</p>\n<p><strong>第四，加入检查点</strong></p>\n<p>检查点，类似于功能测试中的断言。但是，性能测试脚本，不像功能测试脚本那样需要加入很多的断言，往往只在一些关键步骤后加入很少量的检查点即可。这些检查点的主要作用是，保证脚本按照原本设计的路径执行。</p>\n<p>最常用的检查点函数是web_reg_find()，它的作用是通过指定左右边界的方式“在页面中查找相应的内容”。这里需要注意的是，这个函数也是注册型函数，即需要放在所检查的页面之前，否则会检查失败。更多的检查点函数以及用法也请参考LoadRunner官方文档。</p>\n<p><strong>步骤4：验证脚本的正确性</strong></p>\n<p>完成了脚本开发后，根据我的个人经验，我强烈建议你按照以下顺序检查脚本的准确性：</p>\n<ol>\n<li>\n<p>以单用户的方式，在有思考时间的情况下执行脚本，确保脚本能够顺利执行，并且验证脚本行为以及执行结果是否正确；</p>\n</li>\n<li>\n<p>以单用户的方式，在思考时间为零的情况下执行脚本，确保脚本能够顺利执行，并且验证脚本行为以及执行结果是否正确；</p>\n</li>\n<li>\n<p>以并发用户的方式，在有思考时间的情况下执行脚本，确保脚本能够顺利执行，并且验证脚本行为以及执行结果是否正确；</p>\n</li>\n<li>\n<p>以并发用户的方式，在思考时间为零的情况下执行脚本，确保脚本能够顺利执行，并且验证脚本行为以及执行结果是否正确。</p>\n</li>\n</ol>\n<p>只有上述四个测试全部通过，虚拟用户脚本才算顺利完成。</p>\n<p>至此，我们完成了第二个阶段的“录制并增强虚拟用户脚本”的工作，顺利拿到了虚拟用户脚本。那么接下来，我们就会进入第三个阶段，使用开发完成的虚拟用户脚本创建并定义性能测试场景。</p>\n<h2>阶段3：创建并定义性能测试场景</h2>\n<p>还记得我在分享《<a href=\"https://time.geekbang.org/column/103\">工欲善其事必先利其器：后端性能测试工具原理与行业常用工具简介</a>》这个主题时，介绍过的性能测试场景的内容吗？如果有点忘记了，我建议你先回顾一下这篇文章的内容。</p>\n<p>这个阶段的工作，就是在LoadRunner Controller中设置性能测试场景。由于整个设置过程，都是基于Controller的图形用户界面的操作，本身没什么难度，所以我就不再详细展开了，如果有这方面的问题，你也可以自行百度或者给我留言。</p>\n<h2>阶段4：执行性能测试场景</h2>\n<p>完成了性能测试场景的设计与定义后，执行性能测试场景就非常简单了。</p>\n<p>这个过程一般是在LoadRunner Controller中完成。你可以通过Controller发起测试、停止测试、调整性能测试场景的各种参数，还可以监控测试的执行过程。</p>\n<h2>阶段5：分析测试报告</h2>\n<p>执行完性能测试后，LoadRunner会根据自己的标准并结合性能测试场景中定义的系统监控器指标，生成完整的测试报告。在Analysis中，不仅可以以图形化的方式显示单个指标，也可以将多个指标关联在一起进行比较分析。</p>\n<p>图8展示了使用LoadRunner Analysis展示事务平均响应时间的界面，我们可以看到图片右下角各个事务的最小响应时间、最大响应时间和平均响应时间。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/88/ea/88f90cc95b59e24a5c7b19848433fcea.png?wh=1050*775\" alt=\"\" /></p>\n<center>图8 性能测试报告的分析</center>\n<p>性能测试报告的分析，是一项技术含量非常高的工作。优秀的性能测试工程，通过报告中的数值以及数值之间的相互关系，就能判断出系统中可能存在的问题。这就好比医生看验血报告，经验丰富的医生可以根据验血报告对病情做出八九不离十的判断。</p>\n<p>性能测试报告的解读，需要丰富的系统架构、性能理论以及大量实战经验的积累。这个话题已经超出了我今天要分享的范围，所以我也就不再继续展开了。</p>\n<h2>总结</h2>\n<p>今天接着上一篇文章，我和你分享了企业级后端性能测试的后四个阶段的内容，包括录制并增强虚拟用户脚本、创建并定义性能测试场景、执行性能测试场景，以及分析测试报告。现在，我再为你总结一下每一个阶段的重点内容。</p>\n<p>录制并增强虚拟用户脚本，这个阶段的工作又可以分为识别被测应用使用的协议、录制脚本、完善录制得到的脚本、验证脚本的正确性四步。其中，完善录制得到的脚本这一步，涉及到了很多概念和基础知识，所以我进行了重点讲解，希望帮你克服性能测试的难点。</p>\n<p>创建并定义性能测试场景，以及执行性能测试场景，这两个阶段的工作都是在LoadRunner的Controller模块中完成的，也都比较简单。你可以参考我在《工欲善其事必先利其器：后端性能测试工具原理与行业常用工具简介》这篇文章分享的内容，完成这两个阶段的工作。</p>\n<p>分析测试报告，这个工作的技术含量非常高。深入解读性能测试报告的能力，需要丰富的系统架构、性能理论，以及大量实战经验。所以，我们需要在平时工作中，不断地丰富自己的知识体系。</p>\n<h2>思考题</h2>\n<p>你们公司的性能测试是否使用LoadRunner，在使用过程中遇到了什么难题？你们又是如何解决的呢？</p>\n<p>感谢你的收听，欢迎你给我留言。</p>\n<p></p>\n","neighbors":{"left":{"article_title":"32 | 无实例无真相：基于LoadRunner实现企业级服务器端性能测试的实践（上）","id":18120},"right":{"article_title":"34 | 站在巨人的肩膀：企业级实际性能测试案例与经验分享","id":39704}},"comments":[{"had_liked":false,"id":24073,"user_name":"海","can_delete":false,"product_type":"c1","uid":1146176,"ip_address":"","ucode":"0239D583C3ECCA","user_header":"https://static001.geekbang.org/account/avatar/00/11/7d/40/bdcf7fa0.jpg","comment_is_top":false,"comment_ctime":1536799214,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"35896537582","product_id":100009601,"comment_content":"老师所有的文章，一路看过来每次都是意犹未尽，获益良多。这么好的文章，看一遍怎么够呢！非常感谢老师的辛苦用心。","like_count":8},{"had_liked":false,"id":23887,"user_name":"伪专家","can_delete":false,"product_type":"c1","uid":1227786,"ip_address":"","ucode":"B22182B970F94F","user_header":"https://static001.geekbang.org/account/avatar/00/12/bc/0a/2ac3417a.jpg","comment_is_top":false,"comment_ctime":1536714429,"is_pvip":false,"replies":[{"id":"8788","content":"是的，大型互联网企业特有的线上环境的全链路压测，牵涉到流量隔离，影子表，api改造，jmeter海量并发的二次开发等内容，是个专业性很高的领域","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1536794536,"ip_address":"","comment_id":23887,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27306518205","product_id":100009601,"comment_content":"现在公司都用jemter，也是jemter2次开发，又叫全链路压测平台","like_count":6,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423768,"discussion_content":"是的，大型互联网企业特有的线上环境的全链路压测，牵涉到流量隔离，影子表，api改造，jmeter海量并发的二次开发等内容，是个专业性很高的领域","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536794536,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23892,"user_name":"海","can_delete":false,"product_type":"c1","uid":1146176,"ip_address":"","ucode":"0239D583C3ECCA","user_header":"https://static001.geekbang.org/account/avatar/00/11/7d/40/bdcf7fa0.jpg","comment_is_top":false,"comment_ctime":1536714829,"is_pvip":false,"replies":[{"id":"8787","content":"这个我之前在做大纲的时候有想过专门来个完整分析过程的文章，但是后来放弃了，主要原因是这样的文章的确可以给大海带来性能分析到位主观感受，但是最大的问题是知识点非常零碎，而且不管用什么例子都不具有代表性，而且会需要一个实际的系统以及很多log的支持，会牵涉很多敏感信息，所以最后没有成文。不过可以在留言区多多讨论","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1536794418,"ip_address":"","comment_id":23892,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18716584013","product_id":100009601,"comment_content":"老师，是否可以写一篇关于性能测试报告的分析和性能瓶颈的定位过程？","like_count":4,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423770,"discussion_content":"这个我之前在做大纲的时候有想过专门来个完整分析过程的文章，但是后来放弃了，主要原因是这样的文章的确可以给大海带来性能分析到位主观感受，但是最大的问题是知识点非常零碎，而且不管用什么例子都不具有代表性，而且会需要一个实际的系统以及很多log的支持，会牵涉很多敏感信息，所以最后没有成文。不过可以在留言区多多讨论","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536794418,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":24130,"user_name":"Xiye","can_delete":false,"product_type":"c1","uid":1062516,"ip_address":"","ucode":"9F8E73180435AF","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIGzSM6be2xCNS00kQYHDgXO3icOoOSsvnz3FiaCov5Kgs6oaXkBicLbicuEerJjiaNPWxB0FTVmdur3kg/132","comment_is_top":false,"comment_ctime":1536816671,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10126751263","product_id":100009601,"comment_content":"我们公司没有用Loadrunner，用得是Jmeter。在使用中，会有压力不够的问题，我们用一台机器做控制器，三台或四台机器做Agent端测试，经常一台机器超过200线程，性能就上不去了，检查发现瓶颈在于测试的Agent端。特别是我们项目转到Sprint boot架构下，这个问题就更加明显了。后来其他项目的同事推荐我们使用wrk，确实能提高了不少测试压力。 <br>对于性能测试，我觉得确实像老师说得最难的是需求的采集，计划的设计，报告的分析，其实脚本编写和工具的使用并不困难。很多时候到底需要什么样的性能测试环境，需要多大的压力，怎么样的压力场景，报告出来之后的结果是不是符合要求，这些才是最困难的。目前我也是从ResponseTime, Throughput, 服务器端的CPU, Memory, IO 来分析。老师，你觉得还有什么需要重点关注的？","like_count":2},{"had_liked":false,"id":190747,"user_name":"媚风轻扬","can_delete":false,"product_type":"c1","uid":1786611,"ip_address":"","ucode":"C63A0D481FD890","user_header":"https://static001.geekbang.org/account/avatar/00/1b/42/f3/db2a6e71.jpg","comment_is_top":false,"comment_ctime":1584689547,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5879656843","product_id":100009601,"comment_content":"性能测试感觉测试结果分析才是关键，一般有哪些手段呢","like_count":1},{"had_liked":false,"id":151453,"user_name":"二马","can_delete":false,"product_type":"c1","uid":1006802,"ip_address":"","ucode":"4F1DF8732242A1","user_header":"","comment_is_top":false,"comment_ctime":1573722825,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5868690121","product_id":100009601,"comment_content":"老师，最近用LR11测试HTTPS协议时，脚本始终报如下错误：X509 Certificate &amp; Key combination is either invalid or does not exist!  其中端口映射配置里，上传的证书无问题，选择的SSL version无问题，SSL Ciphers不确认，选择的默认选项，请问是否可能是SSL Ciphers的问题","like_count":1},{"had_liked":false,"id":151450,"user_name":"二马","can_delete":false,"product_type":"c1","uid":1006802,"ip_address":"","ucode":"4F1DF8732242A1","user_header":"","comment_is_top":false,"comment_ctime":1573722630,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5868689926","product_id":100009601,"comment_content":"老师，最近用LR11测试https时，脚本始终报如下错误：X509 Certificate &amp; Key combination is either invalid or does not exist","like_count":1},{"had_liked":false,"id":89782,"user_name":"口水窝","can_delete":false,"product_type":"c1","uid":1004838,"ip_address":"","ucode":"6028B5AA10D8A1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/26/154f9578.jpg","comment_is_top":false,"comment_ctime":1556263714,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5851231010","product_id":100009601,"comment_content":"想起4年前在前面一个公司的时候用过，但不知其中的原理，只是依葫芦画瓢，感觉不会写代码，不会百度，执行不起来，不会找原因，然后就没在看了，那时候可羡慕运行起来的高手了，现在在回头看，其实编程也不是很难，关键我们没有找对方向，没有找对下手点，以致于自己一直在这个范围之外彷徨！<br>  这几年冷静下里，想了想，生娃带娃的两年，逐渐使我慢慢明朗起来，要知道怎么去学，怎么去做。<br>  感谢茹老师，感谢极客时间。","like_count":1},{"had_liked":false,"id":24196,"user_name":"落恒","can_delete":false,"product_type":"c1","uid":1202468,"ip_address":"","ucode":"11472BE1A96CEB","user_header":"https://static001.geekbang.org/account/avatar/00/12/59/24/0443e6bd.jpg","comment_is_top":false,"comment_ctime":1536839545,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5831806841","product_id":100009601,"comment_content":"有个个问题想请教一下老师：<br>有使用过LR12录制过测试脚本，录制的脚本会把所有的请求都自动生成对脚本。想问一下这些请求图片&#47;css样式url的是否会对服务器真实压测结果产生影响，是否需要删除无关的url<br>","like_count":1},{"had_liked":false,"id":24071,"user_name":"Sunshine","can_delete":false,"product_type":"c1","uid":1163723,"ip_address":"","ucode":"15969D78D9A651","user_header":"https://static001.geekbang.org/account/avatar/00/11/c1/cb/55fef969.jpg","comment_is_top":false,"comment_ctime":1536799082,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5831766378","product_id":100009601,"comment_content":"老师可以介绍一下，如何去实现每隔10s增加100个用户的方法吗？上一篇提的一些场景不太明白如何去做。感谢🙏","like_count":1,"discussions":[{"author":{"id":1542996,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8b/54/8fc6c2d2.jpg","nickname":"汪恭良","note":"","ucode":"F157BF4978BCE4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":53805,"discussion_content":"jmeter可以用阶梯线程，持续增加","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574218641,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23914,"user_name":"Cynthia🌸","can_delete":false,"product_type":"c1","uid":1163960,"ip_address":"","ucode":"B3A48089794940","user_header":"https://static001.geekbang.org/account/avatar/00/11/c2/b8/ec758482.jpg","comment_is_top":false,"comment_ctime":1536717387,"is_pvip":false,"replies":[{"id":"8785","content":"性能测试系列的最后一篇文章可能会给你很多体系上的理解和帮助","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1536794143,"ip_address":"","comment_id":23914,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5831684683","product_id":100009601,"comment_content":"对于这篇里面提到的录制脚本等相关工作自己还是比较熟悉的。而对于性能测试的理解和整体把握上还不够成体系。<br>需要好好琢磨文章，实践，总结，实践。","like_count":1,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423779,"discussion_content":"性能测试系列的最后一篇文章可能会给你很多体系上的理解和帮助","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536794143,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23881,"user_name":"伪专家","can_delete":false,"product_type":"c1","uid":1227786,"ip_address":"","ucode":"B22182B970F94F","user_header":"https://static001.geekbang.org/account/avatar/00/12/bc/0a/2ac3417a.jpg","comment_is_top":false,"comment_ctime":1536713253,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5831680549","product_id":100009601,"comment_content":"测试迷茫","like_count":1},{"had_liked":false,"id":23874,"user_name":"伪专家","can_delete":false,"product_type":"c1","uid":1227786,"ip_address":"","ucode":"B22182B970F94F","user_header":"https://static001.geekbang.org/account/avatar/00/12/bc/0a/2ac3417a.jpg","comment_is_top":false,"comment_ctime":1536712746,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5831680042","product_id":100009601,"comment_content":"招聘测试一般条件都要有测试工具开发经验…测试的基础，质量保证…质量度量过程都不是关注点…测试要的基础知识点比开发还要全面…工资待遇…重视程度…从目前的招聘信息对比差距越来越大……","like_count":1},{"had_liked":false,"id":356693,"user_name":"亚林","can_delete":false,"product_type":"c1","uid":1018972,"ip_address":"湖南","ucode":"4A5A6D24314B79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/5c/3f164f66.jpg","comment_is_top":false,"comment_ctime":1662516413,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1662516413","product_id":100009601,"comment_content":"哎，我们公司没有性能测试要求。功能测试还是手工阶段。","like_count":0},{"had_liked":false,"id":334796,"user_name":"小呀么小二郎","can_delete":false,"product_type":"c1","uid":1326905,"ip_address":"","ucode":"149540DCFDF43E","user_header":"https://static001.geekbang.org/account/avatar/00/14/3f/39/b1558fc9.jpg","comment_is_top":false,"comment_ctime":1645113265,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645113265","product_id":100009601,"comment_content":"以前也就用过LR和Jmeter录制脚本，整出来个性能测试报告。性能需求是拍脑袋定的，报告也不用分析（笑哭","like_count":0},{"had_liked":false,"id":237509,"user_name":"捷后愚生","can_delete":false,"product_type":"c1","uid":1170483,"ip_address":"","ucode":"A1F935D39C8488","user_header":"https://static001.geekbang.org/account/avatar/00/11/dc/33/a68c6b26.jpg","comment_is_top":false,"comment_ctime":1595849711,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595849711","product_id":100009601,"comment_content":"虽然没有做性能测试，不过先学习老师的文章，具体操作没有深究，先留个印象吧！","like_count":0},{"had_liked":false,"id":65843,"user_name":"happychap","can_delete":false,"product_type":"c1","uid":1388033,"ip_address":"","ucode":"C872B959BF2F3D","user_header":"https://static001.geekbang.org/account/avatar/00/15/2e/01/14a478bb.jpg","comment_is_top":false,"comment_ctime":1549698580,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1549698580","product_id":100009601,"comment_content":"我们的性能测试脚本一般都采用java vuser协议，在lr的原生api上封装了个小框架，以屏蔽lr的诸多技术细节。用录制方式得到的脚本是c语言的，不好维护，遇到报文加解密和签名验签的场景就更尴尬了。","like_count":0},{"had_liked":false,"id":43663,"user_name":"人心向善","can_delete":false,"product_type":"c1","uid":1197049,"ip_address":"","ucode":"6B0C01C52BF882","user_header":"https://static001.geekbang.org/account/avatar/00/12/43/f9/555d7aa0.jpg","comment_is_top":false,"comment_ctime":1543278802,"is_pvip":false,"replies":[{"id":"15912","content":"性能测试脚本理论上是需要每一步都加检查点的，但是实际工程中这么做的人很少，只在一些关键路径加","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1543468686,"ip_address":"","comment_id":43663,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543278802","product_id":100009601,"comment_content":"检查点的作用说白了就是验证正确性，比如拿登录这个点来说：只有当用户成功登录系统后才会出现“welcome！admin”的这种提示，那么检查点就可以以“welcome！admin”这些信息作为check，原因就是因为只有用户登录后才会看到这个提示，不登录是看不到的！如果说页面上实在没有比较容易找到的检查点信息，可以以200 ok为检查点或者是具体返回值信息比如  返回success 0这些信息也可以，不过并不建议这样做","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430452,"discussion_content":"性能测试脚本理论上是需要每一步都加检查点的，但是实际工程中这么做的人很少，只在一些关键路径加","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543468686,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23941,"user_name":"赵明月","can_delete":false,"product_type":"c1","uid":1168980,"ip_address":"","ucode":"01740873C03CD2","user_header":"https://static001.geekbang.org/account/avatar/00/11/d6/54/3127cab2.jpg","comment_is_top":false,"comment_ctime":1536727690,"is_pvip":false,"replies":[{"id":"8783","content":"其实jmeter的功能相比loadrunner还是差了点的，但是由于免费，所以用的比较多，后续我们讲全链路压测的时候就会以jmeter来讲","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1536793924,"ip_address":"","comment_id":23941,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1536727690","product_id":100009601,"comment_content":"也想看jmeter的","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423790,"discussion_content":"其实jmeter的功能相比loadrunner还是差了点的，但是由于免费，所以用的比较多，后续我们讲全链路压测的时候就会以jmeter来讲","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536793924,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23872,"user_name":"Robert小七","can_delete":false,"product_type":"c1","uid":1165254,"ip_address":"","ucode":"6BBF4674673AF5","user_header":"https://static001.geekbang.org/account/avatar/00/11/c7/c6/35cc7c7c.jpg","comment_is_top":false,"comment_ctime":1536712592,"is_pvip":false,"replies":[{"id":"8789","content":"其实不完全是，lr的很多理念和方法都是比jmeter要先进很多的，当然最为概念讲解的辅助工具也可以更好的突出重点。","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1536794621,"ip_address":"","comment_id":23872,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1536712592","product_id":100009601,"comment_content":"我看老师好像还是用的LR11，是否从这里可以看出后续jmeter是主流！LR只是利于理解","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423763,"discussion_content":"其实不完全是，lr的很多理念和方法都是比jmeter要先进很多的，当然最为概念讲解的辅助工具也可以更好的突出重点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536794621,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23846,"user_name":"牛鬼蛇神VS魑魅魍魉","can_delete":false,"product_type":"c1","uid":1067758,"ip_address":"","ucode":"6382036AFFB9F2","user_header":"https://static001.geekbang.org/account/avatar/00/10/4a/ee/45ad0496.jpg","comment_is_top":false,"comment_ctime":1536682618,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1536682618","product_id":100009601,"comment_content":"晚安","like_count":0}]}