{"id":638222,"title":"01｜原始IoC：如何通过BeanFactory实现原始版本的IoC容器？","content":"<p>你好，我是郭屹，从今天开始我们来学习手写MiniSpring。</p><p>这一章，我们将从一个最简单的程序开始，一步步堆积演化，最后实现Spring这一庞大框架的核心部分。这节课，我们就来构造第一个程序，也是最简单的一个程序，将最原始的IoC概念融入我们的框架之中，<strong>我们就用这个原始的IoC容器来管理一个Bean。</strong>不过要说的是，它虽然原始，却也是一个可以运行的IoC容器。</p><h2>IoC容器</h2><p>如果你使用过Spring或者了解Spring框架，肯定会对IoC容器有所耳闻。它的意思是使用Bean容器管理一个个的Bean，最简单的Bean就是一个Java的业务对象。在Java中，创建一个对象最简单的方法就是使用 new 关键字。IoC容器，也就是<strong>BeanFactory，存在的意义就是将创建对象与使用对象的业务代码解耦</strong>，让业务开发人员无需关注底层对象（Bean）的构建和生命周期管理，专注于业务开发。</p><p>那我们可以先想一想，怎样实现Bean的管理呢？我建议你不要直接去参考Spring的实现，那是大树长成之后的模样，复杂而庞大，令人生畏。</p><p>作为一颗种子，它其实可以非常原始、非常简单。实际上我们只需要几个简单的部件：我们用一个部件来对应Bean内存的映像，一个定义在外面的Bean在内存中总是需要有一个映像的；一个XML reader 负责从外部XML文件获取Bean的配置，也就是说这些Bean是怎么声明的，我们可以写在一个外部文件里，然后我们用XML reader从外部文件中读取进来；我们还需要一个反射部件，负责加载Bean Class并且创建这个实例；创建实例之后，我们用一个Map来保存Bean的实例；最后我们提供一个getBean() 方法供外部使用。我们这个IoC容器就做好了。</p><!-- [[[read_end]]] --><p><img src=\"https://static001.geekbang.org/resource/image/a3/c3/a382d7774c7aa504231721c7d28028c3.png?wh=1905x1253\" alt=\"图片\"></p><p>好，接下来我们一步步来构造。</p><h2>实现一个原始版本的IoC容器</h2><p>对于现在要着手实现的原始版本Bean，我们先只管理两个属性：<strong>id与class</strong>。其中，class表示要注入的类，而id则是给这个要注入的类一个别名，它可以简化记忆的成本。我们要做的是把Bean通过XML的方式注入到框架中，你可以看一下XML的配置。</p><pre><code class=\"language-xml\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;\n&lt;beans&gt;\n    &lt;bean id = \"xxxid\" class = \"com.minis.xxxclass\"&gt;&lt;/bean&gt;\n&lt;/beans&gt;\n</code></pre><p>接下来我们要做一些准备工作。首先，新建一个Java项目，导入dom4j-1.6.1.jar包。这里导入的dom4j包封装了许多操作XML文件的方法，有助于我们快速处理XML文件中的各种属性，这样就不需要我们自己再写一个XML的解析工具了，同时它也为我们后续处理依托于XML注入的Bean提供了便利。</p><p>另外要说明的是，我们写MiniSpring是为了学习Spring框架，所以我们会尽量少地去依赖第三方包，多自己动手，以原始社会刀耕火种的方式写程序，这可以让我们彻底地理解底层原理。希望你能够跟我一起动手，毕竟编程说到底是一个手艺活，要想提高编程水平，唯一的方法就是动手去写。只要不断学，不断想，不断做，就能大有成效。</p><h3>构建BeanDefinition</h3><p>好了，在有了第一个Java项目后，我们创建com.minis包，我们所有的程序都是放在这个包下的。在这个包下构建第一个类，对应Bean的定义，命名为BeanDefinition。我们在这个类里面定义两个最简单的域：id与className。你可以看一下相关代码。</p><pre><code class=\"language-java\">public class BeanDefinition {\n    private String id;\n    private String className;\n    public BeanDefinition(String id, String className) {\n        this.id = id;\n        this.className = className;\n    }\n    //省略getter和setter\n</code></pre><p>可以看到，这段代码为这样一个Bean提供了全参数的构造方法，也提供了基本的getter和setter方法，方便我们获取域的值以及对域里的值赋值。</p><h3>实现ClassPathXmlApplicationContext</h3><p>接下来，我们假定已经存在一个用于注入Bean的XML文件。那我们要做的自然是，按照一定的规则将这个XML文件的内容解析出来，获取Bean的配置信息。我们的第二个类ClassPathXmlApplicationContext就可以做到这一点。通过这个类的名字也可以看出，它的作用是解析某个路径下的XML来构建应用上下文。让我们来看看如何初步实现这个类。</p><pre><code class=\"language-java\">public class ClassPathXmlApplicationContext {\n    private List&lt;BeanDefinition&gt; beanDefinitions = new ArrayList&lt;&gt;();\n    private Map&lt;String, Object&gt; singletons = new HashMap&lt;&gt;();\n    //构造器获取外部配置，解析出Bean的定义，形成内存映像\n    public ClassPathXmlApplicationContext(String fileName) {\n        this.readXml(fileName);\n        this.instanceBeans();\n    }\n    private void readXml(String fileName) {\n        SAXReader saxReader = new SAXReader();\n        try {\n            URL xmlPath =\nthis.getClass().getClassLoader().getResource(fileName);\n            Document document = saxReader.read(xmlPath);\n            Element rootElement = document.getRootElement();\n            //对配置文件中的每一个&lt;bean&gt;，进行处理\n            for (Element element : (List&lt;Element&gt;) rootElement.elements()) {\n                //获取Bean的基本信息\n                String beanID = element.attributeValue(\"id\");\n                String beanClassName = element.attributeValue(\"class\");\n                BeanDefinition beanDefinition = new BeanDefinition(beanID,\nbeanClassName);\n                //将Bean的定义存放到beanDefinitions \n                beanDefinitions.add(beanDefinition);\n            }\n        } \n    }\n    //利用反射创建Bean实例，并存储在singletons中\n    private void instanceBeans() {\n        for (BeanDefinition beanDefinition : beanDefinitions) {\n            try {\n                singletons.put(beanDefinition.getId(),\nClass.forName(beanDefinition.getClassName()).newInstance());\n            } \n        } \n    }\n    //这是对外的一个方法，让外部程序从容器中获取Bean实例，会逐步演化成核心方法\n    public Object getBean(String beanName) {\n        return singletons.get(beanName);\n    }\n}\n</code></pre><p>由上面这一段代码可以看出，ClassPathXmlApplicationContext定义了唯一的构造函数，构造函数里会做两件事：一是提供一个readXml()方法，通过传入的文件路径，也就是XML文件的全路径名，来获取XML内的信息，二是提供一个instanceBeans()方法，根据读取到的信息实例化Bean。接下来让我们看看，readXml和instanceBeans这两个方法分别做了什么。</p><p>首先来看readXML，这也是我们解析Bean的核心方法，因为配置在XML内的Bean信息都是文本信息，需要解析之后变成内存结构才能注入到容器中。该方法最开始创建了SAXReader对象，这个对象是dom4j包内提供的。随后，它通过传入的fileName，也就是定义的XML名字，获取根元素，也就是XML里最外层的<beans>标签。然后它循环遍历<bean>标签中的属性，通过 <code>element.attributeValue(\"id\")</code> 和 <code>element.attributeValue(\"class\")</code> 拿到配置信息，接着用这些配置信息构建BeanDefinition对象，然后把BeanDefinition对象加入到BeanDefinitions列表中，这个地方就保存了所有Bean的定义。</bean></beans></p><p>接下来，我们看看instanceBeans方法实现的功能：实例化一个Bean。因为BeanDefinitions存储的BeanDefinition的class只是一个类的全名，所以我们现在需要将这个名字转换成一个具体的类。我们可以通过Java里的反射机制，也就是Class.forName将一个类的名字转化成一个实际存在的类，转成这个类之后，我们把它放到singletons这个Map里，构建 ID 与实际类的映射关系。</p><p>到这里，我们就把XML文件中的Bean信息注入到了容器中。你可能会问，我到现在都没看到BeanFactory呀，是不是还没实现完？</p><p>其实不是的，目前的ClassPathXmlApplicationContext兼具了BeanFactory的功能，它通过singletons和beanDefinitions初步实现了Bean的管理，其实这也是Spring本身的做法。后面我会进一步扩展的时候，会分离这两部分功能，来剥离出一个独立的BeanFactory。</p><h3>验证功能</h3><p>现在，我们已经实现了第一个管理Bean的容器，但还要验证一下我们的功能是不是真的实现了。下面我们就编写一下测试代码。在com.minis目录下，新增test包。你可以看一下相关的测试代码。</p><pre><code class=\"language-java\">public interface AService {\n    void sayHello();&nbsp;\n}\n</code></pre><p>这里，我们定义了一个sayHello接口，该接口的实现是在控制台打印出“a service 1 say hello”这句话。</p><pre><code class=\"language-java\">public class AServiceImpl implements AService {\n    public void sayHello() {\n        System.out.println(\"a service 1 say hello\");\n    } \n}&nbsp;\n</code></pre><p>我们将XML文件命名为beans.xml，注入AServiceImpl类，起个别名，为aservice。</p><pre><code class=\"language-xml\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;\n&lt;beans&gt;\n    &lt;bean id = \"aservice\" class = \"com.minis.test.AServiceImpl\"&gt;&lt;/bean&gt;\n&lt;/beans&gt;&nbsp;\n</code></pre><p>除了测试代码，我们还需要启动类，定义main函数。</p><pre><code class=\"language-java\">public class Test1 {\n    public static void main(String[] args) {\n        ClassPathXmlApplicationContext ctx = new\nClassPathXmlApplicationContext(\"beans.xml\");\n        AService aService = (AService)ctx.getBean(\"aservice\");\n        aService.sayHello();\n    } \n}&nbsp;\n</code></pre><p>在启动函数中可以看到，我们构建了ClassPathXmlApplicationContext，传入文件名为“beans.xml”，也就是我们在测试代码中定义的XML文件名。随后我们通过getBean方法，获取注入到singletons里的这个类AService。aService在这儿是AService接口类型，其底层实现是AServiceImpl，这样再调用AServiceImpl类中的sayHello方法，就可以在控制台打印出“a service 1 say hello”这一句话。</p><p>到这里，我们已经成功地构造了一个最简单的程序：<strong>最原始的IoC容器</strong>。在这个过程中我们引入了BeanDefinition的概念，也实现了一个应用的上下文ClassPathXmlApplicationContext，从外部的XML文件中获取文件信息。只用了很少的步骤就实现了IoC容器对Bean的管理，后续就不再需要我们手动地初始化这些Java对象了。</p><h2>解耦ClassPathXmlApplicationContext</h2><p>但是我们也可以看到，这时的 ClassPathXmlApplicationContext 承担了太多的功能，这并不符合我们常说的对象单一功能的原则。因此，我们需要做的优化扩展工作也就呼之欲出了：分解这个类，主要工作就是两个部分，一是提出一个最基础的核心容器，二是把XML这些外部配置信息的访问单独剥离出去，现在我们只有XML这一种方式，但是之后还有可能配置到Web或数据库文件里，拆解出去之后也便于扩展。</p><p>为了看起来更像Spring，我们以Spring的目录结构为范本，重新构造一下我们的项目代码结构。</p><pre><code class=\"language-java\">com.minis.beans;\ncom.minis.context;\ncom.minis.core;\ncom.minis.test;\n</code></pre><h3>定义BeansException</h3><p>在正式开始解耦工作之前，我们先定义属于我们自己的异常处理类：BeansException。我们来看看异常处理类该如何定义。</p><pre><code class=\"language-java\">public class BeansException extends Exception {\n  public BeansException(String msg) {\n    super(msg);\n  }\n}\n</code></pre><p>可以看到，现在的异常处理类比较简单，它是直接调用父类（Exception）处理并抛出异常。有了这个基础的BeansException之后，后续我们可以根据实际情况对这个类进行拓展。</p><h3>定义 BeanFactory</h3><p>首先要拆出一个基础的容器来，刚才我们反复提到了 BeanFactory 这个词，现在我们正式引入BeanFactory这个接口，先让这个接口拥有两个特性：一是获取一个Bean（getBean），二是注册一个BeanDefinition（registerBeanDefinition）。你可以看一下它们的定义。</p><pre><code class=\"language-java\">public interface BeanFactory {\n    Object getBean(String beanName) throws BeansException;\n    void registerBeanDefinition(BeanDefinition beanDefinition);\n}\n</code></pre><h3>定义Resource</h3><p>刚刚我们将BeanFactory的概念进行了抽象定义。接下来我们要定义Resource这个概念，我们把外部的配置信息都当成Resource（资源）来进行抽象，你可以看下相关接口。</p><pre><code class=\"language-java\">public interface Resource extends Iterator&lt;Object&gt; {\n}\n</code></pre><h3>定义ClassPathXmlResource</h3><p>目前我们的数据来源比较单一，读取的都是XML文件配置，但是有了Resource这个接口后面我们就可以扩展，从数据库还有Web网络上面拿信息。现在有BeanFactory了，有Resource接口了，拆解这两部分的接口也都有了。接下来就可以来实现了。</p><p>现在我们读取并解析XML文件配置是在ClassPathXmlApplicationContext类中完成的，所以我们下一步的解耦工作就是定义ClassPathXmlResource，将解析XML的工作交给它完成。</p><pre><code class=\"language-java\">public class ClassPathXmlResource implements Resource{\n    Document document;\n    Element rootElement;\n    Iterator&lt;Element&gt; elementIterator;\n    public ClassPathXmlResource(String fileName) {\n        SAXReader saxReader = new SAXReader();\n        URL xmlPath = this.getClass().getClassLoader().getResource(fileName);\n        //将配置文件装载进来，生成一个迭代器，可以用于遍历\n        try {\n            this.document = saxReader.read(xmlPath);\n            this.rootElement = document.getRootElement();\n            this.elementIterator = this.rootElement.elementIterator();\n        } \n    }\n    public boolean hasNext() {\n        return this.elementIterator.hasNext();\n    }\n    public Object next() {\n        return this.elementIterator.next();\n    }\n}\n</code></pre><p>操作XML文件格式都是dom4j帮我们做的。</p><blockquote>\n<p><span class=\"reference\">注：dom4j这个外部jar包方便我们读取并解析XML文件内容，将XML的标签以及参数转换成Java的对象。当然我们也可以自行写代码来解析文件，但是为了简化代码，避免重复造轮子，这里我们选择直接引用第三方包。</span></p>\n</blockquote><h3>XmlBeanDefinitionReader</h3><p>现在我们已经解析好了XML文件，但解析好的XML如何转换成我们需要的BeanDefinition呢？这时XmlBeanDefinitionReader就派上用场了。</p><pre><code class=\"language-java\">public class XmlBeanDefinitionReader {\n    BeanFactory beanFactory;\n    public XmlBeanDefinitionReader(BeanFactory beanFactory) {\n        this.beanFactory = beanFactory;\n    }\n    public void loadBeanDefinitions(Resource resource) {\n        while (resource.hasNext()) {\n            Element element = (Element) resource.next();\n            String beanID = element.attributeValue(\"id\");\n            String beanClassName = element.attributeValue(\"class\");\n            BeanDefinition beanDefinition = new BeanDefinition(beanID, beanClassName);\n            this.beanFactory.registerBeanDefinition(beanDefinition);\n        }\n    }\n}\n</code></pre><p>可以看到，在XmlBeanDefinitionReader中，有一个loadBeanDefinitions方法会把解析的XML内容转换成BeanDefinition，并加载到BeanFactory中。</p><h3>BeanFactory功能扩展</h3><p>首先，定义一个简单的BeanFactory实现类SimpleBeanFactory。</p><pre><code class=\"language-java\">public class SimpleBeanFactory implements BeanFactory{\n    private List&lt;BeanDefinition&gt; beanDefinitions = new ArrayList&lt;&gt;();\n    private List&lt;String&gt; beanNames = new ArrayList&lt;&gt;();\n    private Map&lt;String, Object&gt; singletons = new HashMap&lt;&gt;();\n    public SimpleBeanFactory() {\n    }\n\n    //getBean，容器的核心方法\n    public Object getBean(String beanName) throws BeansException {\n        //先尝试直接拿Bean实例\n        Object singleton = singletons.get(beanName);\n        //如果此时还没有这个Bean的实例，则获取它的定义来创建实例\n        if (singleton == null) {\n            int i = beanNames.indexOf(beanName);\n            if (i == -1) {\n                throw new BeansException();\n            }\n            else {\n                //获取Bean的定义\n                BeanDefinition beanDefinition = beanDefinitions.get(i);\n                try {\n                    singleton = Class.forName(beanDefinition.getClassName()).newInstance();\n                } \n                //注册Bean实例\n                singletons.put(beanDefinition.getId(), singleton);\n            }\n        }\n        return singleton;\n    }\n\n    public void registerBeanDefinition(BeanDefinition beanDefinition) {\n        this.beanDefinitions.add(beanDefinition);\n        this.beanNames.add(beanDefinition.getId());\n    }\n}\n</code></pre><p>由SimpleBeanFactory的实现不难看出，这就是把ClassPathXmlApplicationContext中有关BeanDefinition实例化以及加载到内存中的相关内容提取出来了。提取完之后ClassPathXmlApplicationContext就是一个“空壳子”了，一部分交给了BeanFactory，一部分又交给了Resource和Reader。这时候它又该如何发挥“集成者”的功能呢？我们看看它现在是什么样子的。</p><pre><code class=\"language-java\">public class ClassPathXmlApplicationContext implements BeanFactory{\n    BeanFactory beanFactory;\n    //context负责整合容器的启动过程，读外部配置，解析Bean定义，创建BeanFactory\n    public ClassPathXmlApplicationContext(String fileName) {\n        Resource resource = new ClassPathXmlResource(fileName);\n        BeanFactory beanFactory = new SimpleBeanFactory();\n        XmlBeanDefinitionReader reader = new XmlBeanDefinitionReader(beanFactory);\n        reader.loadBeanDefinitions(resource);\n        this.beanFactory = beanFactory;\n    }\n    //context再对外提供一个getBean，底下就是调用的BeanFactory对应的方法\n    public Object getBean(String beanName) throws BeansException {\n        return this.beanFactory.getBean(beanName);\n    }\n    public void registerBeanDefinition(BeanDefinition beanDefinition) {\n        this.beanFactory.registerBeanDefinition(beanDefinition);\n    }\n}\n\n</code></pre><p>可以看到，当前的ClassPathXmlApplicationContext在实例化的过程中做了三件事。</p><ol>\n<li>解析XML文件中的内容。</li>\n<li>加载解析的内容，构建BeanDefinition。</li>\n<li>读取BeanDefinition的配置信息，实例化Bean，然后把它注入到BeanFactory容器中。</li>\n</ol><p>通过上面几个步骤，我们把XML中的配置转换成Bean对象，并把它交由BeanFactory容器去管理，这些功能都实现了。虽然功能与原始版本相比没有发生任何变化，但这种<strong>一个类只做一件事的思想</strong>是值得我们在编写代码的过程中借鉴的。</p><h2>小结</h2><p>好了，这节课就讲到这里。通过简简单单几个类，我们就初步构建起了MiniSpring的核心部分：Bean和IoC。</p><p><img src=\"https://static001.geekbang.org/resource/image/d1/83/d1bf4d02a949ff0aac9e07fdafa92a83.jpg?wh=3188x1967\" alt=\"\"></p><p>可以看到，通过这节课的构建，我们在业务程序中不需要再手动new一个业务类，只要把它交由框架容器去管理就可以获取我们所需的对象。另外还支持了Resource和BeanFactory，用Resource定义Bean的数据来源，让BeanFactory负责Bean的容器化管理。通过功能解耦，容器的结构会更加清晰明了，我们阅读起来也更加方便。当然最重要的是，这可以方便我们今后对容器进行扩展，适配更多的场景。</p><p>以前看似高深的Spring核心概念之一的IoC，就这样被我们拆解成了最简单的概念。它虽然原始，但已经具备了基本的功能，是一颗可以生长发育的种子。我们后面把其他功能一步步添加上去，这个可用的小种子就能发育成一棵大树。</p><p>完整源代码参见 <a href=\"https://github.com/YaleGuo/minis\">https://github.com/YaleGuo/minis</a></p><h2>课后题</h2><p>学完这节课，我也给你留一道思考题。IoC的字面含义是“控制反转”，那么它究竟“反转”了什么？又是怎么体现在代码中的？欢迎你在留言区与我交流讨论，也欢迎你把这节课分享给需要的朋友。我们下节课见！</p>","comments":[{"had_liked":false,"id":370318,"user_name":"6点无痛早起学习的和尚","can_delete":false,"product_type":"c1","uid":1703256,"ip_address":"北京","ucode":"33A8A1CDA103F9","user_header":"https://static001.geekbang.org/account/avatar/00/19/fd/58/1af629c7.jpg","comment_is_top":false,"comment_ctime":1678712139,"is_pvip":false,"replies":[{"id":135058,"content":"好建议，我会考虑考虑。 这个课程其实最早并不是教程，就是我自己手写Spring框架时的步骤，我当年用了29天时间，一天天搭建出来的。所以现在这个课程就是按照这个次序讲解的，可能是自己写的，觉得很自然。感谢你的建议。","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1678760190,"ip_address":"澳大利亚","comment_id":370318,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100536701,"comment_content":"内容讲的很清晰，点赞。\n这里有几个建议：\n1. 每次代码设计之前，能否通过一个 UML 类图来表示，通过类图感觉更容易懂整个类与类之前的关系\n2. 发现课程的内容还是有点偏向 Spring 那种感觉，就是有点类似：啊，Spring 是这样拆分几个类功能，那我们就这样拆分，这个方式感觉还是有点死板\n感觉应该是：从一个设计者角度来讲，这样拆分更灵活，扩展性更强，叭叭叭等等，这样才能把读者带入进入课程，产生共鸣。\n\n个人想法，欢迎交流，不知道是不是就我自己有这样感受，还是其他....","like_count":37,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":608966,"discussion_content":"好建议，我会考虑考虑。 这个课程其实最早并不是教程，就是我自己手写Spring框架时的步骤，我当年用了29天时间，一天天搭建出来的。所以现在这个课程就是按照这个次序讲解的，可能是自己写的，觉得很自然。感谢你的建议。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1678760190,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1033578,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c5/6a/7f858f1f.jpg","nickname":"白不吃","note":"","ucode":"F019914D8819C2","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":646830,"discussion_content":"感谢了建议，但是没有更新类图","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1718803680,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"湖北","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":371003,"user_name":"姐姐","can_delete":false,"product_type":"c1","uid":3021628,"ip_address":"浙江","ucode":"1A615FA9B453DE","user_header":"https://static001.geekbang.org/account/avatar/00/2e/1b/3c/9c5fc55f.jpg","comment_is_top":false,"comment_ctime":1679455323,"is_pvip":false,"replies":[{"id":135347,"content":"你这个总结，是我见到的最详细的了，真用心。学完一遍必定大有收获。","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1679481859,"ip_address":"澳大利亚","comment_id":371003,"utype":1}],"discussion_count":4,"race_medal":0,"score":2,"product_id":100536701,"comment_content":"从最初的简单ApplicationContext拆解成后面的复杂ApplicationContext，我理解起来还是有困难的，努力理解如下，大神勿喷：1 readxml方法从资源文件读取内容并存入beanDefinitions，这件事情有两个地方不确定，资源的来源不同、资源的格式不同，抽象的Resource的接口，它的不同子类从不同的来源读取，但是最终都是以Resource接口的形式提供给外部访问的，这样解决了第一个不确定来源的问题；但是resource接口中被迭代的object又是根据不同格式不同而不同的，element只是xml格式的，所以又定义了BeanDefinitionReader接口，它的不同子类可以读取不同格式的资源来形成beanDefinition 。 2 . instanceBeans方法取消了 。  3. getBean方法功能增强了，不仅是获得bean，对于未创建的bean还要创建bean  4 新的applicationContext负责组装，可以根据它的名字来体现它的组装功能，例如ClassPathXmlApplicationContext  它组装的Resource的实现类是ClassPathXmlResource  ，然后因为是xml的，所以需要BeanDefinitionReader的实现类XmlBeanDefinitionReader来读取并注册进beanFactory，同时ApplicationContext也提供了getBean底层调用beanfactory的实现，提供了registerBeanDefinition  来向底层的beanFactory注册bean。5 beanFactory 提供了registerBeanDefinition和getBean接口，这样无论是applicationContext还是beanDefinitionReader都可以向它注册beanDefinition，只要向它注册了，就可以调用它的getBean方法，我一直很纠结为什么不是beanfactory调用不同的beanDefinitionReader，写完这些，好像有点理解了，这样beanfactory就很专注自己的getBean方法，别的组件要怎么注入，它都不管了。","like_count":20,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":610257,"discussion_content":"你这个总结，是我见到的最详细的了，真用心。学完一遍必定大有收获。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1679481859,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3176534,"avatar":"","nickname":"Geek_d9714c","note":"","ucode":"8C8F0E88324DD2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630237,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1698203311,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2843479,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/63/57/cba4c68b.jpg","nickname":"小虎子🐯","note":"","ucode":"4C9530B3FB407B","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":614744,"discussion_content":"厉害👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681892803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1190060,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/ac/37a2a265.jpg","nickname":"弱水穿云天","note":"","ucode":"80DC528A23ED7E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":612599,"discussion_content":"优秀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1680793880,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370312,"user_name":"adelyn","can_delete":false,"product_type":"c1","uid":2981014,"ip_address":"北京","ucode":"E7DD2F47EBD6DA","user_header":"https://static001.geekbang.org/account/avatar/00/2d/7c/96/079a158d.jpg","comment_is_top":false,"comment_ctime":1678706253,"is_pvip":false,"replies":[{"id":135045,"content":"会穿插讲到。确实如你所说，单独学设计模式总是会隔。","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1678740184,"ip_address":"澳大利亚","comment_id":370312,"utype":1}],"discussion_count":4,"race_medal":0,"score":2,"product_id":100536701,"comment_content":"请问会不会穿插讲一下用到的设计模式，单独学设计模式总是学不扎实，如果能讲到就太好了","like_count":17,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":608928,"discussion_content":"会穿插讲到。确实如你所说，单独学设计模式总是会隔。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678740184,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2822832,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/12/b0/63f71163.jpg","nickname":"咕噜咕噜","note":"","ucode":"852A797378EEED","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":608955,"discussion_content":"强烈+2","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1678758181,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1243025,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f7/91/27401a3f.jpg","nickname":"kd叛逆","note":"","ucode":"F8870FBA8BB131","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609115,"discussion_content":"+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678843265,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"新疆","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2725667,"avatar":"https://static001.geekbang.org/account/avatar/00/29/97/23/9c9bd0d4.jpg","nickname":"苜蓿°","note":"","ucode":"BEEDCB2B88363A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":608902,"discussion_content":"强烈+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678718887,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370438,"user_name":"风轻扬","can_delete":false,"product_type":"c1","uid":1542987,"ip_address":"北京","ucode":"DB972F2DF059C4","user_header":"https://static001.geekbang.org/account/avatar/00/17/8b/4b/15ab499a.jpg","comment_is_top":false,"comment_ctime":1678810759,"is_pvip":false,"replies":[{"id":135109,"content":"赞！用心的程序员会爬上高峰。","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1678853718,"ip_address":"澳大利亚","comment_id":370438,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100536701,"comment_content":"说一下自己对思考题的理解。\n控制反转。\n控制：java对象创建的控制权。\n反转：将java对象创建的控制权从程序员手中反转到IOC容器手中。\n另外，说一下学完这一讲的感受。直白点说，很激动。我看过Spring这部分的源码，当时感觉挺简单的，并没有往深处想，其实忽略了“Spring为什么要这样写“的问题，现在感觉这才是源码的核心所在，突然有一点融会贯通的感觉，感觉很好。一直知道Spring的扩展性好，今天实实在在看到了。感谢老师传道解惑","like_count":14,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609161,"discussion_content":"赞！用心的程序员会爬上高峰。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678853718,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370724,"user_name":"未聞花名","can_delete":false,"product_type":"c1","uid":2142672,"ip_address":"北京","ucode":"8BE87AC2CEA286","user_header":"https://static001.geekbang.org/account/avatar/00/20/b1/d0/8c94d49e.jpg","comment_is_top":false,"comment_ctime":1679148785,"is_pvip":false,"replies":[{"id":135273,"content":"感谢感谢！","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1679222623,"ip_address":"澳大利亚","comment_id":370724,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100536701,"comment_content":"给老师个建议，可以点一下为什么类中要放这些属性和方法，突然抽到几个新类感觉过渡有点快，这样对之后自己去设计类也能举一反三，感觉自己平时设计不太好，如果自己实现起来的话比Spring的优雅可读性要差很多。\n最后附上dom4j的maven依赖，希望帮助到其他人\n```java\n&lt;!-- https:&#47;&#47;mvnrepository.com&#47;artifact&#47;dom4j&#47;dom4j --&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;dom4j&lt;&#47;groupId&gt;\n            &lt;artifactId&gt;dom4j&lt;&#47;artifactId&gt;\n            &lt;version&gt;1.6.1&lt;&#47;version&gt;\n        &lt;&#47;dependency&gt;\n```","like_count":9,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609809,"discussion_content":"感谢感谢！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1679222623,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370352,"user_name":"杨松","can_delete":false,"product_type":"c1","uid":1512517,"ip_address":"辽宁","ucode":"FB3C73BC44C94D","user_header":"https://static001.geekbang.org/account/avatar/00/17/14/45/adf079ae.jpg","comment_is_top":false,"comment_ctime":1678754057,"is_pvip":false,"replies":[{"id":135057,"content":"看的很细，感谢。这是书面语表达的理解问题，用我们程序员的口语来说就是“对一个Bean的定义，需要有一个类来对应。bean的定义可能是写在外部XML文件中的，类是运行时在内存中的，所以表达成Bean内存的映像”","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1678759987,"ip_address":"澳大利亚","comment_id":370352,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100536701,"comment_content":"老师这句话没理解呢：“我们用一个部件来对应 Bean 内存的映像”，文中5边型图片对应的其他4个都能理解","like_count":8,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":608964,"discussion_content":"看的很细，感谢。这是书面语表达的理解问题，用我们程序员的口语来说就是“对一个Bean的定义，需要有一个类来对应。bean的定义可能是写在外部XML文件中的，类是运行时在内存中的，所以表达成Bean内存的映像”","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1678759987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005290,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/56/ea/32608c44.jpg","nickname":"giteebravo","note":"","ucode":"C087E8D6B5A98B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609031,"discussion_content":"现在几乎没有人会用 XML 来描述一个类了吧？都是直接写在 .java 文件里面的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678789855,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"四川","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2252648,"avatar":"https://static001.geekbang.org/account/avatar/00/22/5f/68/8e4407c7.jpg","nickname":"💡","note":"","ucode":"8AB762A8CDFEF7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1005290,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/56/ea/32608c44.jpg","nickname":"giteebravo","note":"","ucode":"C087E8D6B5A98B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609577,"discussion_content":"这块是bean的定义（单例多例，名字，全限定类名等），不是class的定义，现在基本都是基于注解来描述一个bean","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1679036342,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":609031,"ip_address":"浙江","group_id":0},"score":609577,"extra":""}]}]},{"had_liked":false,"id":370439,"user_name":"Unknown","can_delete":false,"product_type":"c1","uid":1736715,"ip_address":"福建","ucode":"E43137A064CAD8","user_header":"https://static001.geekbang.org/account/avatar/00/1a/80/0b/7ae52ac0.jpg","comment_is_top":false,"comment_ctime":1678811826,"is_pvip":false,"replies":[{"id":135108,"content":"对的对的。你从Github上的ioc分支可以看到。","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1678853644,"ip_address":"澳大利亚","comment_id":370439,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100536701,"comment_content":"getClass().getClassLoader().getResource(filepath)\n类加载器获取资源时 此处的filepath 需要放在resource目录里面(手动创建并标识类型为Resource root) ","like_count":7,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609160,"discussion_content":"对的对的。你从Github上的ioc分支可以看到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678853644,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1710643,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/vwv0qiaibQzcTP6yIDJXOJLdh64CnBSaOceFFuWArVHQcwicIsebwYbKJ69OSJrxeXJyawtNIINcjo3V3hgg5BW1A/132","nickname":"Geek_u14xh9","note":"","ucode":"46402B9B7D7B1E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":610854,"discussion_content":"这个提醒太好了，我说为啥一直报URL是null呢。希望老师补充上去","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1679810817,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2722995,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/XuawJ09b5dzRHIa9wicrGkXLQDgiagDDCbSJt32MxiaJOqGkmibseMq9SrzrRAcpI4QwK17r1lfccunLOGpa9HPicUg/132","nickname":"Geek_7dbffe","note":"","ucode":"F6E910C562C54D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":619872,"discussion_content":"这个应该是由于 maven 对资源指定目录的处理导致的吧，如果是直接通过指定 classpath 编译不知道会不会出现这个情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1685590414,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370512,"user_name":"周润发","can_delete":false,"product_type":"c1","uid":2829305,"ip_address":"浙江","ucode":"C2DEA3546F046C","user_header":"https://static001.geekbang.org/account/avatar/00/2b/2b/f9/d65d8dfd.jpg","comment_is_top":false,"comment_ctime":1678893163,"is_pvip":false,"replies":[{"id":135140,"content":"想得细致。并没有特别考虑。这个课程的特点是逐步演化，开头只是个胚胎，不断重构发育，最后一步步变成Spring的样子，所以后面的程序跟前面的都会有变化的，稍安勿躁，你一点点看到最后。我希望带给大家的是Spring这个框架的变化定型的过程，而不是一开头就讲现在的Spring是什么样子。","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1678966036,"ip_address":"澳大利亚","comment_id":370512,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100536701,"comment_content":"首先很感谢老师的课程，内容值得细品。\n想请教一个问题，为什么在代码中更多使用全局变量而不在方法中使用成员变量呢？有些全局变量只在某个方法会用到，有什么特别的考虑吗？","like_count":5,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609376,"discussion_content":"想得细致。并没有特别考虑。这个课程的特点是逐步演化，开头只是个胚胎，不断重构发育，最后一步步变成Spring的样子，所以后面的程序跟前面的都会有变化的，稍安勿躁，你一点点看到最后。我希望带给大家的是Spring这个框架的变化定型的过程，而不是一开头就讲现在的Spring是什么样子。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678966036,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2829305,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/2b/f9/d65d8dfd.jpg","nickname":"周润发","note":"","ucode":"C2DEA3546F046C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609391,"discussion_content":"了解了，再次感谢老师的课程！\n之所以看的细致，是作为一个手写小树苗的新手，对设计模式没有理解深刻，就需要理解老师的每一处代码结构。对每一个细节也要抠的更细致。有些地方一知半解不理解深刻的话，后面就听不懂了。🤣","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678970701,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":371209,"user_name":"C.","can_delete":false,"product_type":"c1","uid":1444698,"ip_address":"江苏","ucode":"5AE269220EFD73","user_header":"https://static001.geekbang.org/account/avatar/00/16/0b/5a/453ad411.jpg","comment_is_top":false,"comment_ctime":1679637846,"is_pvip":false,"replies":[{"id":135425,"content":"善事。记得给出原始出处。","user_name":"作者回复","user_name_real":"作者","uid":1864890,"ctime":1679655955,"ip_address":"澳大利亚","comment_id":371209,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100536701,"comment_content":"ioc容器5天的版本手敲的，对应章节的代码：https:&#47;&#47;github.com&#47;caozhenyuan&#47;mini-spring.git 点击分支查看对应章节的代码。帮大家跟敲不迷路。","like_count":4,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":610628,"discussion_content":"善事。记得给出原始出处。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1679655955,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1444698,"avatar":"https://static001.geekbang.org/account/avatar/00/16/0b/5a/453ad411.jpg","nickname":"C.","note":"","ucode":"5AE269220EFD73","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":610941,"discussion_content":"好的好的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1679880271,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":610628,"ip_address":"江苏","group_id":0},"score":610941,"extra":""}]}]},{"had_liked":false,"id":370338,"user_name":"马儿","can_delete":false,"product_type":"c1","uid":2247080,"ip_address":"四川","ucode":"542E23D7B6AB01","user_header":"","comment_is_top":false,"comment_ctime":1678722998,"is_pvip":false,"replies":[{"id":135061,"content":"完整源码参见 https:&#47;&#47;github.com&#47;YaleGuo&#47;Minis。按照编辑的意见，在文稿中列出的代码是关键代码，不完整。这一部分可以看Github上的ioc分支。\n后面会讲到设计模式，有好几位提到这个建议。","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1678760457,"ip_address":"澳大利亚","comment_id":370338,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100536701,"comment_content":"以前的spring的源码都是散的，希望能通过这个课把这些只是串联起来。希望老师讲的时候可以讲一些设计模式，把创建类所在的包也希望能够说明一下，这样的话更方便大家学习了解类的用途和作用。","like_count":4,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":608969,"discussion_content":"完整源码参见 https://github.com/YaleGuo/Minis。按照编辑的意见，在文稿中列出的代码是关键代码，不完整。这一部分可以看Github上的ioc分支。\n后面会讲到设计模式，有好几位提到这个建议。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1678760457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370381,"user_name":"浅行","can_delete":false,"product_type":"c1","uid":3567438,"ip_address":"山东","ucode":"E46560808902FC","user_header":"https://static001.geekbang.org/account/avatar/00/36/6f/4e/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1678774211,"is_pvip":false,"replies":[{"id":135075,"content":"1，分开成两阶段，registerBeanDefinition仅仅只是处理bean的定义，不处理实例。\n2，原始的容器时极简的，部件没有分拆。\n一步步来，这个课程就是在演示怎么从一个原始的极简容器怎么逐步拆解成Spring的。这个过程的演示正是设计本课程的目的，也是程序员受益最大的做法。","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1678792984,"ip_address":"澳大利亚","comment_id":370381,"utype":1}],"discussion_count":4,"race_medal":0,"score":3,"product_id":100536701,"comment_content":"有两个问题想请教一下：\n1. 请问SimpleBeanFactory 为什么是在getBean时才注册实例，而不是registerBeanDefinition就先注册呢？\n2. 请问ClassPathXmlApplicationContext 为什么也要实现BeanFactory呢？","like_count":3,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609040,"discussion_content":"1，分开成两阶段，registerBeanDefinition仅仅只是处理bean的定义，不处理实例。\n2，原始的容器时极简的，部件没有分拆。\n一步步来，这个课程就是在演示怎么从一个原始的极简容器怎么逐步拆解成Spring的。这个过程的演示正是设计本课程的目的，也是程序员受益最大的做法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678792984,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1358045,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b8/dd/37726c34.jpg","nickname":"小马哥","note":"","ucode":"B2C0FF38F8C9BC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":610813,"discussion_content":"问题1: 这是设计模式中的单一职责原则, 对于注册BeanDefinition这个函数(registerBeanDefinition)来说, 就只管注册BeanDefinition这个单一的功能, 不负责实例化, 所以不在其中插入实例化Bean的代码逻辑;\n问题2: ClassPathXmlApplicationContext整合了读取Resource, 注册Bean和获取Bean三个功能, 既然作为整合方对外提供获取bean和注册bean功能, 那需要遵守接口约束呀, 所以实现了BeanFactory.","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1679760402,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2759037,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erb3HxekfsIdQumoyJVicmOuvibm0DqIiaCNHeESJdic3t1eIXAplplMicOnmLzibI19uiagdXm8qgZftHbw/132","nickname":"Geek_45e28f","note":"","ucode":"6CF51984950F48","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628549,"discussion_content":"1、懒加载。这里的类都比较简单，实例化的过程也很快，有些类的实例化非常消耗资源，这样会导致系统的启动时间非常长，并且如果暂时不用这个类的话也会占有许多资源。比如在测试的时候，有些类的定义也被写在XML文件里面，但当前测试方法并不需要这个类，可依然对其进行了实例化，那就变成了一种资源浪费。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695478665,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"日本","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1070253,"avatar":"https://static001.geekbang.org/account/avatar/00/10/54/ad/6ee2b7cb.jpg","nickname":"Jacob.C","note":"","ucode":"034998E7A7CCD1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":625908,"discussion_content":"1 懒加载，用到再实例化\n2确实非必要，但是可以表示它是个遵守协议的 context","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1692323575,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372577,"user_name":"兔2🐰🍃","can_delete":false,"product_type":"c1","uid":1096984,"ip_address":"江苏","ucode":"1FEDA044BB6CBD","user_header":"https://static001.geekbang.org/account/avatar/00/10/bd/18/2af6bf4b.jpg","comment_is_top":false,"comment_ctime":1681294921,"is_pvip":false,"replies":[{"id":135994,"content":"善事。记得注明原始出处。感谢你的热心。","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1681301253,"ip_address":"澳大利亚","comment_id":372577,"utype":1}],"discussion_count":1,"race_medal":1,"score":3,"product_id":100536701,"comment_content":"感谢郭屹老师，\n本节完整代码如下，需要的同学可以照着敲。\nhttps:&#47;&#47;gitee.com&#47;rabbit2&#47;mini-spring&#47;commit&#47;1bf7247dd8568b5ce33134078efa2e4824816cf8","like_count":1,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613396,"discussion_content":"善事。记得注明原始出处。感谢你的热心。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681301253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":371371,"user_name":"Geek_b7449f","can_delete":false,"product_type":"c1","uid":2957535,"ip_address":"四川","ucode":"07E7023A3ECD5A","user_header":"https://static001.geekbang.org/account/avatar/00/2d/20/df/55bacf31.jpg","comment_is_top":false,"comment_ctime":1679847220,"is_pvip":false,"replies":[{"id":135455,"content":"善事。注明出处就可以。","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1679886600,"ip_address":"澳大利亚","comment_id":371371,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100536701,"comment_content":"真的很详细！从零手敲，然后反反复复看几遍终于把我之前自学所学的散的知识串联起来，真的学有收获，比较期待能把设计模式也能给一起串进来呢。\n本人是一名在校的学生，这里我将每一步步骤拆分为提交的方式，希望这样可以更适合所学在校的应届生\n不洗勿喷哦~：https:&#47;&#47;github.com&#47;HHXiaoFu&#47;mini-spring","like_count":1,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":610963,"discussion_content":"善事。注明出处就可以。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1679886600,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370739,"user_name":"小马哥","can_delete":false,"product_type":"c1","uid":1358045,"ip_address":"北京","ucode":"B2C0FF38F8C9BC","user_header":"https://static001.geekbang.org/account/avatar/00/14/b8/dd/37726c34.jpg","comment_is_top":false,"comment_ctime":1679192141,"is_pvip":false,"replies":[{"id":135271,"content":"赞","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1679222362,"ip_address":"澳大利亚","comment_id":370739,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100536701,"comment_content":"回答课后题:\n1, 反转: 反转的是对Bean的控制权, 使用&quot;new&quot;的方式是由程序员在代码中主动控制; 使用IOC的方式是由容器来主动控制Bean的创建以及后面的DI属性注入;\n2, 反转在代码中的体现: 因为容器框架并不知道未来业务中需要注入哪个Bean, 于是通过配置文件等方式告诉容器, 容器使用反射技术管理Bean的创建, 属性注入, 生命周期等.","like_count":1,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609805,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1679222362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370698,"user_name":"陈小远","can_delete":false,"product_type":"c1","uid":2393550,"ip_address":"四川","ucode":"8C348A5FA8F539","user_header":"https://static001.geekbang.org/account/avatar/00/24/85/ce/df1c7a91.jpg","comment_is_top":false,"comment_ctime":1679117501,"is_pvip":false,"replies":[{"id":135256,"content":"感谢你的细致，很用心。\n1，Github上的master分支是最终的源码，还有十几个分支是中间阶段的，基本对应一节一节。比图你现在看的这个章节，对应的是ioc分支。 Github上是有分支的，大部分学员没有找到，我很意外。\n2，跳跃的感觉，好多人都有，这也是本课程要打磨完善的地方，感谢你的意见。具体到你的这个问题，BeanFactory只是抽象出来的一个接口，SimpleBeanFactory是一个实现，而applicationContext从字面上就能看出它是一个上下文，算是集大成者，里面包含了一个factory。","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1679136279,"ip_address":"澳大利亚","comment_id":370698,"utype":1}],"discussion_count":3,"race_medal":0,"score":3,"product_id":100536701,"comment_content":"Spring在Java编程中是事实的标准，这个无需多言，所以对老师的这个专栏也有比较大的兴趣。看了第一节课，也跟着动手撸了些代码，对有些疑惑的点做一简单阐述：\n1、老师给的源码地址感觉应该是最终的成品的地址了，不是按照课程一节一节的区分开来，从学习跟随者的角度看，可能不太友好，无法从源码中找到项目从0到1的那种获得感；\n2、针对本节中源码的讲述个人感觉还是有点跳跃了，不过本身Spring体系太过庞杂，无法面面俱到，也无法真的能从0去反推出Spring中相关类设计的原因，所以也表示理解。但有些设计意图还是希望老师能尽量多言一些，而不是因为Spring包或类那样设计的就强行往Spring身上靠，感觉有些突然。比如本节中抽象出了BeanFactory后，为什么又突然来一个SimpleBeanFactory，而ClassPathXmlApplicationContext同样也是实现自该接口，那通过SimpleBeanFactory在组合到ClassPathXmlApplicationContext中实现功能是出于什么考虑呢？ 虽然在评论区实际有看到小伙伴的讨论，大概能明白这样设计的意思。","like_count":1,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609710,"discussion_content":"感谢你的细致，很用心。\n1，Github上的master分支是最终的源码，还有十几个分支是中间阶段的，基本对应一节一节。比图你现在看的这个章节，对应的是ioc分支。 Github上是有分支的，大部分学员没有找到，我很意外。\n2，跳跃的感觉，好多人都有，这也是本课程要打磨完善的地方，感谢你的意见。具体到你的这个问题，BeanFactory只是抽象出来的一个接口，SimpleBeanFactory是一个实现，而applicationContext从字面上就能看出它是一个上下文，算是集大成者，里面包含了一个factory。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1679136279,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1135558,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLl6w8BZHCguHzwmic8ouDAibk8fJEQv3V4Ut7jkchHJxQkg6mQ9sF8opDAuMTNtmOgZcZ9t2wTYcicA/132","nickname":"未知","note":"","ucode":"CFFCEA56E29D5E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":612456,"discussion_content":"“而applicationContext从字面上就能看出它是一个上下文，算是集大成者，里面包含了一个factory” 集大成者，里面也包含了Resource 为啥没有实现Resource接口呢？再一个是“集大成者”就有实现他的接口吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1680702441,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":609710,"ip_address":"北京","group_id":0},"score":612456,"extra":""}]},{"author":{"id":1318633,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJhxtIyXX4icMNAq5zEvchKYS3q7fwZXA3h7yV80iaibCRXniaLW95OnPC8PM2h5Ja5ibpkJ1VJowicqKZA/132","nickname":"Geek_7jwpfc","note":"","ucode":"CBCEA76E9EF33B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":616466,"discussion_content":"你可以先把疑问留着，你的问题就是，ApplicationContext和BeanFactory的区别！\n从设计上简单来讲：就是ApplicationContext比BeanFactory有更多功能，例如事件监听，国际化，因为没有学到后面，解释也听不懂；\n从代码编写上来讲：没有ApplicationContext，如果要启动BeanFactory容器；\nResource resource = new ClassPathXmlResource(fileName); \nBeanFactory beanFactory = new SimpleBeanFactory(); \nXmlBeanDefinitionReader reader = new XmlBeanDefinitionReader(beanFactory); reader.loadBeanDefinitions(resource);\n这段一模一样的代码，你都需要重写一遍，ApplicationContext启动流程进行了封装，你只需要传入一个fileName，就可以启动容器了；\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1682851266,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"湖南","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370556,"user_name":"Ben Guo","can_delete":false,"product_type":"c1","uid":2974700,"ip_address":"中国香港","ucode":"A8BD34C25D50DB","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/8HibfYTXFWaeXsujL7j1ZEulbibhiaMrTxkm3PticiaP9q3fGv8vkp1XHo9zsVE7Bh9HzkNicOnicd9QHFR73cefiaR7Qg/132","comment_is_top":false,"comment_ctime":1678953652,"is_pvip":false,"replies":[{"id":135219,"content":"感谢感谢，我跟平台编辑去反映你的建议。我原本是这么安排的，不过编辑们根据他们的经验，建议我不用贴出完整代码，只留骨架。其实我个人更喜欢贴完整代码。","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1679007162,"ip_address":"澳大利亚","comment_id":370556,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100536701,"comment_content":"谢谢老师用心的准备和讲解！关于思考题，控制反转中“反转”的是“object生成&#47;销毁的控制对象”，从代码hardcode 指定对象的类型和创建过程，变成 从配置文件动态指定，然后IOC帮忙管理对象的生命周期。一个小小的建议，文中说了几个包名，但没有说明哪些类该归属哪个包 及为什么，大家可能要参考老师的开源项目才能明白，如果这里做个简单的说明，大家可能就不用去看，且国内访问github很多时候还是麻烦一点！ 谢谢！","like_count":1,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609515,"discussion_content":"感谢感谢，我跟平台编辑去反映你的建议。我原本是这么安排的，不过编辑们根据他们的经验，建议我不用贴出完整代码，只留骨架。其实我个人更喜欢贴完整代码。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1679007162,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370452,"user_name":"我不懂技术","can_delete":false,"product_type":"c1","uid":1222174,"ip_address":"福建","ucode":"BCED5E23C6FA20","user_header":"https://static001.geekbang.org/account/avatar/00/12/a6/1e/e168b9e9.jpg","comment_is_top":false,"comment_ctime":1678844162,"is_pvip":false,"replies":[{"id":135106,"content":"会跟平台协商后再公布。","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1678853511,"ip_address":"澳大利亚","comment_id":370452,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100536701,"comment_content":"老师，有minitomcat的开源地址吗？","like_count":1,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609158,"discussion_content":"会跟平台协商后再公布。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1678853511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1097364,"avatar":"https://static001.geekbang.org/account/avatar/00/10/be/94/7cafeb18.jpg","nickname":"jason","note":"","ucode":"77428C7DB96173","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":609203,"discussion_content":"期待","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678871246,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":609158,"ip_address":"四川","group_id":0},"score":609203,"extra":""}]}]},{"had_liked":false,"id":370368,"user_name":"浅行","can_delete":false,"product_type":"c1","uid":3567438,"ip_address":"山东","ucode":"E46560808902FC","user_header":"https://static001.geekbang.org/account/avatar/00/36/6f/4e/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1678761018,"is_pvip":false,"replies":[{"id":135074,"content":"对的对的","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1678792787,"ip_address":"澳大利亚","comment_id":370368,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100536701,"comment_content":"反转了Bean的控制权，本来控制权是Java外放给开发人员的，而Spring是回收了这个权限，开发人员只能使用，不能控制Bean的生命周期。所以针对开发人员来说叫控制反转，不知道理解的对不对","like_count":1,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609039,"discussion_content":"对的对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678792787,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370365,"user_name":"咕噜咕噜","can_delete":false,"product_type":"c1","uid":2822832,"ip_address":"上海","ucode":"852A797378EEED","user_header":"https://static001.geekbang.org/account/avatar/00/2b/12/b0/63f71163.jpg","comment_is_top":false,"comment_ctime":1678760431,"is_pvip":false,"replies":[{"id":135073,"content":"赞","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1678792764,"ip_address":"澳大利亚","comment_id":370365,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100536701,"comment_content":"控制反转：反转的是对对象的控制权，将对象的管理由业务类交给了spring容器\nspring代码中体现：通过反射机制去创建一个类的对象，spring会通过Class.newInstance()或者Constructor.newInstance()去创建一个对象。（具体可以参考org.springframework.beans.BeanUtils里面instantiate相关的方法）","like_count":1,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609038,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678792764,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370323,"user_name":"Geek_5d0074","can_delete":false,"product_type":"c1","uid":3223762,"ip_address":"江西","ucode":"C2242E29649529","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM6mTy6lgnhkKbaWfs1s0siazVLQFnNmU0YLsRsxyC84aoFP5icuo22qricS62EiaibmVdplmtPbwryHHTA/132","comment_is_top":false,"comment_ctime":1678715946,"is_pvip":false,"replies":[{"id":135059,"content":"没有。SpringBoot只是定位于一个集成者，我没有考虑手写它。","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1678760265,"ip_address":"澳大利亚","comment_id":370323,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100536701,"comment_content":"手写SpringBoot有吗？","like_count":1,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":608967,"discussion_content":"没有。SpringBoot只是定位于一个集成者，我没有考虑手写它。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678760265,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370311,"user_name":"adelyn","can_delete":false,"product_type":"c1","uid":2981014,"ip_address":"北京","ucode":"E7DD2F47EBD6DA","user_header":"https://static001.geekbang.org/account/avatar/00/2d/7c/96/079a158d.jpg","comment_is_top":false,"comment_ctime":1678706059,"is_pvip":false,"replies":[{"id":135044,"content":"对的","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1678740129,"ip_address":"澳大利亚","comment_id":370311,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100536701,"comment_content":"控制反转:将对象的管理由业务类交给了spring","like_count":1,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":608927,"discussion_content":"对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678740130,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":387687,"user_name":"Geek4329","can_delete":false,"product_type":"c1","uid":2028951,"ip_address":"北京","ucode":"D6FB8D1B2D5DAC","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f5/97/9a7ee7b3.jpg","comment_is_top":false,"comment_ctime":1708422444,"is_pvip":false,"replies":[{"id":141244,"content":"继续往后看，后面一步步改造。","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1708491912,"ip_address":"澳大利亚","comment_id":387687,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100536701,"comment_content":"有一个问题 XmlBeanDefinition为什么要有BeanFactory的依赖呢？我理解loadBeanDefinitions 应该返回一个List&lt;BeanDefinition&gt;的集合 在ClassPathXmlApplicationContext 再调用 相关方法注入到BeanFactory中，XmlBeanDefinition的职能应该只是解析相关Resource得到BeanDefinition的集合，而不是应该进行注册的功能。","like_count":0,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":637430,"discussion_content":"继续往后看，后面一步步改造。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1708491912,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":387628,"user_name":"heyucool","can_delete":false,"product_type":"c1","uid":1042214,"ip_address":"浙江","ucode":"9C3406FC8E9C0B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e7/26/1b773620.jpg","comment_is_top":false,"comment_ctime":1708275346,"is_pvip":false,"replies":[{"id":141243,"content":"赞你！","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1708491862,"ip_address":"澳大利亚","comment_id":387628,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100536701,"comment_content":"赞一个","like_count":0,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":637429,"discussion_content":"赞你！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1708491862,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376912,"user_name":"FARO_Z","can_delete":false,"product_type":"c1","uid":2410092,"ip_address":"广东","ucode":"B33BCC36C2A74E","user_header":"https://static001.geekbang.org/account/avatar/00/24/c6/6c/a400175a.jpg","comment_is_top":false,"comment_ctime":1687699458,"is_pvip":false,"replies":[{"id":137445,"content":"善事","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1688037613,"ip_address":"澳大利亚","comment_id":376912,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100536701,"comment_content":"画了下拆分后的 uml 图：\nhttps:&#47;&#47;mermaid-js.github.io&#47;mermaid-live-editor&#47;view#pako:eNq1VMtu00AU_RVrVqkaW3nZiS2rEjQgIUGLmg1C3kzsm2SQPWPZY5SQJhskVixY8AdsWLIHxM9UKjt-gfGjk3HjREIVlmLdmXPPfZx74zXyWQDIQX6I03RM8DzBkUc9qomnuNMeA6ZPsc9ZstLWJeC6hHJIZtiHs7PyyuOnbxkJtATmJBXYGGaEEk4YbeUBdkdtWjueSPrl9A34XJsDzwmtCU8InRfeFziCym9TuSv1PRPZsKjueHFTxkIRSlvg9AKWvLWXlyq3DVmuIGVZ4sP_zTIhURxCg-Ie158LXbelKlspS1qH61Jv72m9c36B4yrUnx8f72Km4h0CV_z-bTYPXAEphyrIef5-ifniVRTeH4HoY8z8LALKtaAyJPIkhAJIGOOVLTG5MVACd-e9th86TlF0vfMrwAEUmyqycF0d9HRnl2gZKH9OD8RpHeCfKNSQ4aDOTVtSyKQydh2UhhTIvdZ1ufolJsnutWE0zkfVQa2wIOxtuOq9v_6uyH-ge-f3t_e3n7-WzMY9cUW-Q-Sbn78kublUNeSjOA6Jj3P-ORP_-yU_VvBxpqPdfP9y--kDaqMIkgiTQHx-i5X2EF-IhfSQI8wAZjgLuYc8uhGuOONssqI-cmY4TKGNsjjAHKovtryNMX3NWO2MnDVaIqc_7Blds9Ppd0x71B1ZZhutkKNbA8MaDHv9kW31LMseWps2eldE6Bi2PTJ74tcd9C2ra27-Aqc3Fxw","like_count":0,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":622257,"discussion_content":"善事","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1688037614,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":375357,"user_name":"老衲","can_delete":false,"product_type":"c1","uid":1433290,"ip_address":"广东","ucode":"B02BB107DB51BE","user_header":"https://static001.geekbang.org/account/avatar/00/15/de/ca/73f15fe7.jpg","comment_is_top":false,"comment_ctime":1685373278,"is_pvip":false,"replies":[{"id":136985,"content":"只是希望在容器中保存一个纯粹的bean名字列表。","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1685403441,"ip_address":"澳大利亚","comment_id":375357,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100536701,"comment_content":"IOC翻转的是对对象的创建管理方式，正转就是我们平常使用 new 创建的方式，翻转是将对象的创建交给程序，又程序进行对象的创建。\n\n有个小疑问，为什么需要 private List beanNames = new ArrayList&lt;&gt;(); 来存储 beanName ，获取的时候再次判断。这样做的目的是什么？有什么好处？","like_count":0,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":619656,"discussion_content":"只是希望在容器中保存一个纯粹的bean名字列表。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1685403441,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":375033,"user_name":"靠人品去赢","can_delete":false,"product_type":"c1","uid":1301286,"ip_address":"广东","ucode":"7A20F9EBE847E1","user_header":"https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg","comment_is_top":false,"comment_ctime":1684824983,"is_pvip":false,"replies":[{"id":136891,"content":"是的。","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1684905845,"ip_address":"澳大利亚","comment_id":375033,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100536701,"comment_content":"控制反转，解释控制权反转。什么控制权，是获取生成对象的控制权，之前有程序员去new，现在不用了，交给程序去控制，于是权力反转了。","like_count":0,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":619232,"discussion_content":"是的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1684905845,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":374067,"user_name":"安非他命π","can_delete":false,"product_type":"c1","uid":1439549,"ip_address":"日本","ucode":"7B701C3344B41C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/YjMKrDic9p6dgy7icWRegulZlP3wutzicm8EWcWXiashPqx4XiaJ65EYzUZHIoJrBSsI6EKMpg9YpWf8oOJvdX08GZg/132","comment_is_top":false,"comment_ctime":1683551216,"is_pvip":false,"replies":[{"id":136641,"content":"1.后面会讲到\n2.getBean是应当要考虑并发的，后面也会谈到","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1683615327,"ip_address":"澳大利亚","comment_id":374067,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100536701,"comment_content":"1. 看到实例化 bean 时用的是 java 反射 newInstance 方法想到如果要实例化的类只有有参构造要怎么实现？后面应该会引入有参构造类的实例化；\n2. 在 SimpleBeanFactory 类中的定义的 singletons 属性，在下面 getBean方法时会发生并发操作吗？还是这里简单处理成使用普通的 HashMap 结构了？","like_count":0,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":617492,"discussion_content":"1.后面会讲到\n2.getBean是应当要考虑并发的，后面也会谈到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683615327,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373634,"user_name":"Geek_7jwpfc","can_delete":false,"product_type":"c1","uid":1318633,"ip_address":"湖南","ucode":"CBCEA76E9EF33B","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJhxtIyXX4icMNAq5zEvchKYS3q7fwZXA3h7yV80iaibCRXniaLW95OnPC8PM2h5Ja5ibpkJ1VJowicqKZA/132","comment_is_top":false,"comment_ctime":1682850290,"is_pvip":false,"replies":[{"id":136440,"content":"一步步演化的，后面有变化。","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1682982811,"ip_address":"澳大利亚","comment_id":373634,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100536701,"comment_content":"SimpleBeanFactory#getBean方法，需要通过两个List的下标获取，个人觉得耦合性比较大，时间复杂度也是N，应该这样写！\npublic class SimpleBeanFactory implements BeanFactory {\n    &#47;&#47; 保存的BeanDefinition信息\n    private Map&lt;String,BeanDefinition&gt; beanDefinitions = new HashMap&lt;&gt;();\n    \n    &#47;&#47; 保存的BeanDefinition对应的所有实例对象\n    private Map&lt;String, Object&gt; singletons = new HashMap&lt;&gt;();\n\n    public DefaultBeanFactory() {\n    }\n\n    @Override\n    public Object getBean(String beanName) throws BeansException {\n        Object singleton = singletons.get(beanName);\n        if( singleton == null){\n            BeanDefinition beanDefinition = beanDefinitions.get(beanName);\n            if(beanDefinition == null){\n                throw new BeansException(&quot;&quot;);\n            }else {\n                Object lazyBean;\n                try {\n                    lazyBean = Class.forName(beanDefinition.getBeanName()).newInstance();\n                } catch (InstantiationException e) {\n                    throw new RuntimeException(e);\n                } catch (IllegalAccessException e) {\n                    throw new RuntimeException(e);\n                } catch (ClassNotFoundException e) {\n                    throw new RuntimeException(e);\n                }\n                singletons.put(beanName, lazyBean);\n                return lazyBean;\n            }\n        }\n        return singleton;\n    }\n\n    @Override\n    public void registerBeanDefinition(BeanDefinition beanDefinition) {\n        this.beanDefinitions.put(beanDefinition.getBeanId(), beanDefinition);\n    }\n}","like_count":0,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":616587,"discussion_content":"一步步演化的，后面有变化。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1682982811,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372982,"user_name":"胡多多","can_delete":false,"product_type":"c1","uid":1185092,"ip_address":"广东","ucode":"49838A954AB811","user_header":"https://static001.geekbang.org/account/avatar/00/12/15/44/59f5e984.jpg","comment_is_top":false,"comment_ctime":1681891204,"is_pvip":false,"replies":[{"id":136289,"content":"感谢感谢","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1681894998,"ip_address":"澳大利亚","comment_id":372982,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100536701,"comment_content":"老师太棒了，送爱心","like_count":0,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":614750,"discussion_content":"感谢感谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681894998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372978,"user_name":"KernelStone","can_delete":false,"product_type":"c1","uid":2736140,"ip_address":"广东","ucode":"B75C0100AD52B8","user_header":"https://static001.geekbang.org/account/avatar/00/29/c0/0c/f726d4d0.jpg","comment_is_top":false,"comment_ctime":1681889247,"is_pvip":false,"replies":[{"id":136288,"content":"大赞👍🏻","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1681894984,"ip_address":"澳大利亚","comment_id":372978,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100536701,"comment_content":"两三天时间，这节课内容断续思考和动手。终于算清楚了。用户“姐姐”总结得的很好！我尝试做额外的补充。\n\n首先是设计模式方面的问题，看评论区有同学在纠结。如果先前看过相关的资料，应该可以反应过来这里是工厂方法，其目的就是将创建和使用两部分代码解耦分离。这是大前提。而内容后半段，抽取出了XmlBeanDefinitionReader，其实是出于“单一职责”的设计思想。这样有利于代码可读，也有利于可复用。\n\n之所以取名为SimpleBeanFactory，而不是什么XmlBeanFactory，因为它的主要职责是不区分Resource，只提供getBean()和registerBeanDefinition()这两个方法。这一点结合BeanDefinition和beans.xml文件去看，会发现，id其实是“对象的名称”，而class其实是“生成该对象的模板”，二者共同存储在一个HashMap中。两行重要的代码如下：\n1 singleton=Class.forName(`bd.getClassName()`).newInstance();\n2 singletons.put(`bd.getId()`,singleton);\n\n总而言之，我们是通过id，找到class这个单例的。id就像是引用，接口作为引用，class就是具体实现，生成单例的模板。\n\n话说回来，BeanFactory不区分Resource，那对各种不同Resource的处理，就应该放在XXXApplicationContext上下文和XXXBeanDefinitionReader读取器中。就是具体资源的上下文，以及具体资源的读取器，才需要负责具体资源的注入。这也很合理。\n\n----\n\n个人理解，可能有误，不过这么整理下来，感觉内容就很清晰了，没有一开始看的时候感觉那么多！anyway谢谢老师。我继续加油往后学习","like_count":0,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":614749,"discussion_content":"大赞👍🏻","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681894984,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372753,"user_name":"Michael","can_delete":false,"product_type":"c1","uid":1015222,"ip_address":"陕西","ucode":"27EB4A725CE14E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/b6/abdebdeb.jpg","comment_is_top":false,"comment_ctime":1681555285,"is_pvip":false,"replies":[{"id":136141,"content":"认识不同。要我用另一种格式，我会用另一个与xmlbeandefinitionreader并列的类。","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1681649288,"ip_address":"澳大利亚","comment_id":372753,"utype":1}],"discussion_count":2,"race_medal":0,"score":5,"product_id":100536701,"comment_content":"Resource抽象挺好的，但是XmlBeanDefinitionReader的loadBeanDefinition依赖了Resource抽象，到这儿都没问题，但是XmlBeanDefinitionReader.loadBeanDefinition的实现里面直接转型 Element那这个貌似就不对了吧，这样的话抽象就没用了，还是跟XML实现绑死了，是不是应该定义一系列自己的了类来抽象不同的格式？这样Resource直接操作的就是自己定义的类，Resource抽象才能发挥作用？\n仅仅是自己的想法，望老师斧正！","like_count":0,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":614050,"discussion_content":"认识不同。要我用另一种格式，我会用另一个与xmlbeandefinitionreader并列的类。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1681649288,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015222,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7d/b6/abdebdeb.jpg","nickname":"Michael","note":"","ucode":"27EB4A725CE14E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":614073,"discussion_content":"那这样的话Resource这个抽象的意义在哪儿呢?新的格式就要用新的并列类，那完全没必要做Resource抽象啊 直接传入具体的Resource不就好了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681657543,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"陕西","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372566,"user_name":"Geek_01c3b4","can_delete":false,"product_type":"c1","uid":3587565,"ip_address":"天津","ucode":"E4EE55E4C0129B","user_header":"","comment_is_top":false,"comment_ctime":1681287145,"is_pvip":false,"replies":[{"id":135998,"content":"解耦的目的不是为了功能，而是为了灵活性和扩展性。学习Spring框架，最主要的就是体会它优良的内部结构。","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1681301540,"ip_address":"澳大利亚","comment_id":372566,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100536701,"comment_content":"感觉解耦部分设计这些类有很多不必要的地方。对于实现来说，beandefinition这个类都是没啥必要的，直接解析xml，反射创建，直接put到Map中就可以实现。如果能说下这么设计的原因就好了。总之还是有很多收获。","like_count":0,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613400,"discussion_content":"解耦的目的不是为了功能，而是为了灵活性和扩展性。学习Spring框架，最主要的就是体会它优良的内部结构。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681301541,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372088,"user_name":"未知","can_delete":false,"product_type":"c1","uid":1135558,"ip_address":"北京","ucode":"CFFCEA56E29D5E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLl6w8BZHCguHzwmic8ouDAibk8fJEQv3V4Ut7jkchHJxQkg6mQ9sF8opDAuMTNtmOgZcZ9t2wTYcicA/132","comment_is_top":false,"comment_ctime":1680701868,"is_pvip":false,"replies":[{"id":135813,"content":"application context是一个集成者，同时还需要对外实现beanfactory的功能。","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1680783742,"ip_address":"澳大利亚","comment_id":372088,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100536701,"comment_content":"最后的类ClassPathXmlApplicationContext implements BeanFactory 实现BeanFactory 的目的和意义是什么呢","like_count":0,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":612566,"discussion_content":"application context是一个集成者，同时还需要对外实现beanfactory的功能。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1680783742,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":371608,"user_name":"略略略","can_delete":false,"product_type":"c1","uid":2249370,"ip_address":"广东","ucode":"F4B7E07ABC7479","user_header":"https://static001.geekbang.org/account/avatar/00/22/52/9a/a2bda54f.jpg","comment_is_top":false,"comment_ctime":1680097746,"is_pvip":false,"replies":[{"id":135601,"content":"Github上都有，文稿只是帮助串一下。","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1680172562,"ip_address":"澳大利亚","comment_id":371608,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100536701,"comment_content":"这个章节最后要是还能再加个测试类就好了","like_count":0,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":611565,"discussion_content":"Github上都有，文稿只是帮助串一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1680172562,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":371466,"user_name":"多多","can_delete":false,"product_type":"c1","uid":1102490,"ip_address":"上海","ucode":"DA5AF8146AEF82","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/9a/d56bb650.jpg","comment_is_top":false,"comment_ctime":1679974438,"is_pvip":false,"replies":[{"id":135572,"content":"你的问题是比学代码更高阶段了。一个课程有一个课程的目标，这个课呢，就是演示Spring框架怎么一步步搭建出来的过程，对背后的设计思想没有多做探讨。","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1680003452,"ip_address":"澳大利亚","comment_id":371466,"utype":1}],"discussion_count":2,"race_medal":0,"score":5,"product_id":100536701,"comment_content":"老师你好！其实光看代码我相信很多人都很容易理解，我比较在意的是，为什么要有这些功能，这些接口和类为什么要这么设计，这些是基于什么考量，还请老师多深入设计思想哈，就我个人而言。","like_count":0,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":611276,"discussion_content":"你的问题是比学代码更高阶段了。一个课程有一个课程的目标，这个课呢，就是演示Spring框架怎么一步步搭建出来的过程，对背后的设计思想没有多做探讨。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1680003452,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1102490,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d2/9a/d56bb650.jpg","nickname":"多多","note":"","ucode":"DA5AF8146AEF82","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":631781,"discussion_content":"好的，感谢老师解答！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1699954550,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":611276,"ip_address":"上海","group_id":0},"score":631781,"extra":""}]}]},{"had_liked":false,"id":371325,"user_name":"一一","can_delete":false,"product_type":"c1","uid":1252756,"ip_address":"浙江","ucode":"8F15F87CEDB019","user_header":"https://static001.geekbang.org/account/avatar/00/13/1d/94/80b8a9f4.jpg","comment_is_top":false,"comment_ctime":1679801647,"is_pvip":false,"replies":[{"id":135501,"content":"Spring也是这么做的。你一步步往后看，MiniSpring的演变就是模仿的Spring框架。","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1679916273,"ip_address":"澳大利亚","comment_id":371325,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100536701,"comment_content":"老师，您好，我有个疑问，配置文件中获取一个个类的信息，然后一个个遍历创建类对象，在相对大的系统中业务对象可能会有很多，这种一个个遍历创建对象的方式会不会效率很低？Spring面对这种问题是怎么解决的？延迟加载吗？可还是最终要创建所有对象。","like_count":0,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":611069,"discussion_content":"Spring也是这么做的。你一步步往后看，MiniSpring的演变就是模仿的Spring框架。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1679916273,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":371227,"user_name":"yu","can_delete":false,"product_type":"c1","uid":1193426,"ip_address":"安徽","ucode":"594166237F6717","user_header":"https://static001.geekbang.org/account/avatar/00/12/35/d2/19792b5c.jpg","comment_is_top":false,"comment_ctime":1679652207,"is_pvip":false,"replies":[{"id":135431,"content":"不要纠结某一节的具体代码。这是一个演变过程，一步步往后看，重点关注这个框架结构结构怎么搭起来的。","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1679656427,"ip_address":"澳大利亚","comment_id":371227,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100536701,"comment_content":"那 ClassPathXmlApplicationContext 实现了BeanFactory 是一个上下文的集成着=者, 但是registerBeanDefinition 方法并未使用到,  如果对该方法空实现,是不是也没问题, 这里不太理解 ?","like_count":0,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":610636,"discussion_content":"不要纠结某一节的具体代码。这是一个演变过程，一步步往后看，重点关注这个框架结构结构怎么搭起来的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1679656427,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":371195,"user_name":"追梦","can_delete":false,"product_type":"c1","uid":2883656,"ip_address":"广东","ucode":"E14C909DDE2603","user_header":"https://static001.geekbang.org/account/avatar/00/2c/00/48/55932a4c.jpg","comment_is_top":false,"comment_ctime":1679627132,"is_pvip":false,"replies":[{"id":135428,"content":"你想得对。一步步看，后面就有抽象类了，这是一个演进过程。","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1679656096,"ip_address":"澳大利亚","comment_id":371195,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100536701,"comment_content":"老师好，请问为什么对于BeanFactory要采用接口的形式，而不是抽象类的形式？","like_count":0,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":610633,"discussion_content":"你想得对。一步步看，后面就有抽象类了，这是一个演进过程。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1679656096,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370639,"user_name":"镞砺括羽","can_delete":false,"product_type":"c1","uid":1309089,"ip_address":"天津","ucode":"EC4CD773CA06EA","user_header":"https://static001.geekbang.org/account/avatar/00/13/f9/a1/0396e1fb.jpg","comment_is_top":false,"comment_ctime":1679044970,"is_pvip":false,"replies":[{"id":135259,"content":" 有啊。Github上的master分支是最终的源码，还有十几个分支是中间阶段的，基本对应一节一节。你现在看的这个章节，对应的是ioc分支。 Github上是有分支的，大部分学员没有找到，我很意外。","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1679136788,"ip_address":"澳大利亚","comment_id":370639,"utype":1}],"discussion_count":2,"race_medal":0,"score":5,"product_id":100536701,"comment_content":"要是每一节都有源码就好了","like_count":0,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609713,"discussion_content":" 有啊。Github上的master分支是最终的源码，还有十几个分支是中间阶段的，基本对应一节一节。你现在看的这个章节，对应的是ioc分支。 Github上是有分支的，大部分学员没有找到，我很意外。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1679136788,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1309089,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f9/a1/0396e1fb.jpg","nickname":"镞砺括羽","note":"","ucode":"EC4CD773CA06EA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":609816,"discussion_content":"看到了，最后文章说了，谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1679227417,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":609713,"ip_address":"天津","group_id":0},"score":609816,"extra":""}]}]},{"had_liked":false,"id":370560,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"北京","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1678957236,"is_pvip":true,"replies":[{"id":135220,"content":"用心了。","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1679007198,"ip_address":"澳大利亚","comment_id":370560,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100536701,"comment_content":"把大象放进冰箱分 3 步，写一个 IoC 容器需要 5 步，稍微复杂一点。\n\n一上来就被难住了，要创建一个什么类型的项目呢？后来选了 library，然后上来先写了个 HelloWorld。\n\nHelloWorld 之后，照着写了 beans.xml，然后……怎么导入 dom4j 到 idea 的项目中？\n\n在 dom4j 的官网看到最新的版本是 dom4j-2.1.4，而专栏里面使用的是 dom4j-1.6.1，估计兼容性会比较好。\n\n在代码工具的帮助下，BeanDefinition 也很快写完了。\n\n手抄代码如下，供参考：https:&#47;&#47;github.com&#47;escray&#47;miniSpring&#47;tree&#47;IoC01","like_count":0,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609516,"discussion_content":"用心了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1679007198,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370505,"user_name":"瓜瓜王几","can_delete":false,"product_type":"c1","uid":1621553,"ip_address":"广东","ucode":"93447D86C450D6","user_header":"https://static001.geekbang.org/account/avatar/00/18/be/31/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1678889059,"is_pvip":false,"replies":[{"id":135139,"content":"赞！","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1678965706,"ip_address":"澳大利亚","comment_id":370505,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100536701,"comment_content":"简化了一下SimpleBeanFactory,beanNames这玩意儿有点多余。。。\n&#47;&#47;如果此时还没有这个Bean的实例，则获取它的定义来创建实例\n        if(singleton == null){\n            BeanDefinition beanDefinition = Optional.ofNullable(beanDefinitions.stream().filter(x -&gt; x.getId().equals(beanName))\n                    .findFirst()).get().orElseThrow(() -&gt; new BeansException(&quot;not class found&quot;));\n}","like_count":0,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609375,"discussion_content":"赞！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678965706,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370492,"user_name":"啊良梓是我","can_delete":false,"product_type":"c1","uid":1655117,"ip_address":"广东","ucode":"E42FC1A60D331C","user_header":"https://static001.geekbang.org/account/avatar/00/19/41/4d/f6d6d13a.jpg","comment_is_top":false,"comment_ctime":1678881499,"is_pvip":false,"replies":[{"id":135126,"content":"是的是的，赞你！","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1678920680,"ip_address":"澳大利亚","comment_id":370492,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100536701,"comment_content":"public class ClassPathXmlApplicationContext implements BeanFactory{ BeanFactory beanFactory; &#47;&#47;context负责整合容器的启动过程，读外部配置，解析Bean定义，创建BeanFactory public ClassPathXmlApplicationContext(String fileName) { Resource resource = new ClassPathXmlResource(fileName); BeanFactory beanFactory = new SimpleBeanFactory(); XmlBeanDefinitionReader reader = new XmlBeanDefinitionReader(beanFactory); reader.loadBeanDefinitions(resource); this.beanFactory = beanFactory; } &#47;&#47;context再对外提供一个getBean，底下就是调用的BeanFactory对应的方法 public Object getBean(String beanName) throws BeansException { return this.beanFactory.getBean(beanName); } public void registerBeanDefinition(BeanDefinition beanDefinition) { this.beanFactory.registerBeanDefinition(beanDefinition); }}\n\n\n这一段让我想起了spring源码的DefaultListBeanFactory ，组合的形式， 我虽然是BeanFactory，但是我不是实际作用的beanFactory，组合进来的才是真正作用的beanFactory","like_count":0,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609280,"discussion_content":"是的是的，赞你！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678920680,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370475,"user_name":"re","can_delete":false,"product_type":"c1","uid":2700417,"ip_address":"广东","ucode":"80ED94C683387C","user_header":"https://static001.geekbang.org/account/avatar/00/29/34/81/18a9d3e0.jpg","comment_is_top":false,"comment_ctime":1678865926,"is_pvip":false,"replies":[{"id":135127,"content":"application context主要目的是提供一个集成的上下文环境，同时对外提供beanfactory接口，而具体的beafactory的实现则是包在里面的。后面会逐步演变。","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1678920797,"ip_address":"澳大利亚","comment_id":370475,"utype":1}],"discussion_count":4,"race_medal":0,"score":6,"product_id":100536701,"comment_content":"老师，想问下为什么这里需要两个BeanFactory的一个实现类，一个实现类去引用另一个实现类的重写内容，这种写法是有什么讲究嘛","like_count":0,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609282,"discussion_content":"application context主要目的是提供一个集成的上下文环境，同时对外提供beanfactory接口，而具体的beafactory的实现则是包在里面的。后面会逐步演变。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678920797,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":2,"child_discussions":[{"author":{"id":1193426,"avatar":"https://static001.geekbang.org/account/avatar/00/12/35/d2/19792b5c.jpg","nickname":"yu","note":"","ucode":"594166237F6717","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":610614,"discussion_content":"那 ClassPathXmlApplicationContext 是不是可以不实现或者空实现 registerBeanDefinition 方法 ?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1679652019,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":609282,"ip_address":"安徽","group_id":0},"score":610614,"extra":""},{"author":{"id":1358045,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b8/dd/37726c34.jpg","nickname":"小马哥","note":"","ucode":"B2C0FF38F8C9BC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1193426,"avatar":"https://static001.geekbang.org/account/avatar/00/12/35/d2/19792b5c.jpg","nickname":"yu","note":"","ucode":"594166237F6717","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":610815,"discussion_content":"在本节的代码逻辑中是可以的, 因为注册BeanDefinition的逻辑用的是传给XmlBeanDefinitionReader构造的参数, 也就是SimpleBeanFactory,  ClassPathXmlApplicationContext 的registerBeanDefinition ()压根没有用到.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1679761488,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":610614,"ip_address":"北京","group_id":0},"score":610815,"extra":""}]},{"author":{"id":2108088,"avatar":"https://static001.geekbang.org/account/avatar/00/20/2a/b8/dc924db4.jpg","nickname":"木  昜","note":"","ucode":"84951C2E0B8DF9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609253,"discussion_content":"可以看看Spring的设计思路，ApplicationContext是在BeanFactory基础上做扩展的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678891701,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370435,"user_name":"陈 yi 豪","can_delete":false,"product_type":"c1","uid":1435389,"ip_address":"福建","ucode":"BFBFCF8768A0B0","user_header":"https://static001.geekbang.org/account/avatar/00/15/e6/fd/9f1c9398.jpg","comment_is_top":false,"comment_ctime":1678809872,"is_pvip":false,"replies":[{"id":135107,"content":"看得很细，问题也专业，赞！ 这是为了看起来简洁，还有MiniSpring的重点不是产品化，而是为了学习Spring框架的内部结构，所以没有怎么考虑这些。","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1678853596,"ip_address":"澳大利亚","comment_id":370435,"utype":1}],"discussion_count":2,"race_medal":0,"score":6,"product_id":100536701,"comment_content":"贴出来的代码中，成员变量大都是default权限的。请问这是单纯为了在文本中看起来更简洁吗？还是说有什么设计层面的考量呢？","like_count":0,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609159,"discussion_content":"看得很细，问题也专业，赞！ 这是为了看起来简洁，还有MiniSpring的重点不是产品化，而是为了学习Spring框架的内部结构，所以没有怎么考虑这些。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678853596,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1006424,"avatar":"","nickname":"Geek_xbye50","note":"","ucode":"0BF3780C247F22","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609101,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678838240,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"福建","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370434,"user_name":"wiliam","can_delete":false,"product_type":"c1","uid":1346998,"ip_address":"北京","ucode":"FF15363E72887A","user_header":"https://static001.geekbang.org/account/avatar/00/14/8d/b6/55ba741a.jpg","comment_is_top":false,"comment_ctime":1678809347,"is_pvip":false,"replies":[{"id":135112,"content":"好问题。主要原因，MiniSpring的目的仅仅只是为了学习Spring框架的内部结构，别的方面没有太在意。感谢指出。","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1678854104,"ip_address":"澳大利亚","comment_id":370434,"utype":1}],"discussion_count":2,"race_medal":0,"score":6,"product_id":100536701,"comment_content":"判断是否是单例模式，为什么是list的indexOf呢，感觉效率不是很好呢","like_count":0,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609164,"discussion_content":"好问题。主要原因，MiniSpring的目的仅仅只是为了学习Spring框架的内部结构，别的方面没有太在意。感谢指出。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678854104,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1006424,"avatar":"","nickname":"Geek_xbye50","note":"","ucode":"0BF3780C247F22","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609102,"discussion_content":"同问！期待老师回答下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678838264,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"福建","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370426,"user_name":"Michael","can_delete":false,"product_type":"c1","uid":1274787,"ip_address":"陕西","ucode":"C233DF1D224EC1","user_header":"https://static001.geekbang.org/account/avatar/00/13/73/a3/2b077607.jpg","comment_is_top":false,"comment_ctime":1678804135,"is_pvip":false,"replies":[{"id":135111,"content":"说得对。","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1678853909,"ip_address":"澳大利亚","comment_id":370426,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100536701,"comment_content":"庖丁解牛，👍，感谢大佬\n以前看spring，感觉不得要领，老师的这种讲解，丝丝入扣，及表入里，受益匪浅\n控制反转，反转的是bean的构建权限，bean的创建和生命周期交给了ioc，开发者无需自己new,直接去ioc容器中取出对象处理自己的业务逻辑就好了，控制反转，是一种编程思想的体现","like_count":0,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609163,"discussion_content":"说得对。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678853909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370357,"user_name":"peter","can_delete":false,"product_type":"c1","uid":1058183,"ip_address":"北京","ucode":"261C3FC001DE2D","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/87/f3a69d1b.jpg","comment_is_top":false,"comment_ctime":1678756671,"is_pvip":false,"replies":[{"id":135072,"content":"源代码也在github的minis项目中，除了master分支们还有一些别的分支，对应的这一部分在ioc分支中。\nidea2019可以的\nxml文件我放到resources下的\n“类路径”没找到这个词啊，全句话是什么？","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1678792733,"ip_address":"澳大利亚","comment_id":370357,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100536701,"comment_content":"请教老师几个问题：\nQ1：每课的源代码放在哪里？\n“https:&#47;&#47;www.github.com&#47;YaleGuo&#47;minis”这个链接是已经开发完成的项目的链接地址。和课程同步的项目代码在哪里？\nQ2：IDE是Idea吗？我用的是idea2019，是否可以？\nQ3：xml文件在idea中的位置是任意的吗？放在项目的任何一个目录下面都可以吗？\nQ4：“类路径”，是指IDE中src目录下java文件所在的路径吗？还是编译后生成的class文件所在的路径？（对“类路径”这个概念有点含糊）","like_count":0,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609037,"discussion_content":"源代码也在github的minis项目中，除了master分支们还有一些别的分支，对应的这一部分在ioc分支中。\nidea2019可以的\nxml文件我放到resources下的\n“类路径”没找到这个词啊，全句话是什么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678792733,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370344,"user_name":"硬件1","can_delete":false,"product_type":"c1","uid":2438979,"ip_address":"北京","ucode":"F631C21C244E46","user_header":"","comment_is_top":false,"comment_ctime":1678741317,"is_pvip":false,"replies":[{"id":135063,"content":"你的理解是对的，不过你说“被调用者决定是否创建自己的对象放到容器里面”感觉这个表达不妥，被调用者是不能决定自己的。我的理解，IoC就像是剧本-演员-导演的关系，剧作家就是程序，演员是被调用的bean，由导演(也就是IoC框架)来决定哪个演员扮演剧本中的哪个角色。","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1678760763,"ip_address":"澳大利亚","comment_id":370344,"utype":1}],"discussion_count":2,"race_medal":0,"score":6,"product_id":100536701,"comment_content":"控制反转，应该是指创建bean的过程，之前都是调用者通过new来实例化对象，现在将创建的控制交给了容器来处理，也就是被调用者决定是否创建自己的对象放到容器里面。","like_count":0,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":608973,"discussion_content":"你的理解是对的，不过你说“被调用者决定是否创建自己的对象放到容器里面”感觉这个表达不妥，被调用者是不能决定自己的。我的理解，IoC就像是剧本-演员-导演的关系，剧作家就是程序，演员是被调用的bean，由导演(也就是IoC框架)来决定哪个演员扮演剧本中的哪个角色。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678760763,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2438979,"avatar":"","nickname":"硬件1","note":"","ucode":"F631C21C244E46","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":615780,"discussion_content":"这个描述确实是有些问题，应该是说加了特定的注解，容器来根据注解来决定他是否是一个bean。不能说是他自己决定。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1682430061,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"中国香港","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370340,"user_name":"勿忘","can_delete":false,"product_type":"c1","uid":2264813,"ip_address":"北京","ucode":"05D3BC30ECF70C","user_header":"https://static001.geekbang.org/account/avatar/00/22/8e/ed/4ca459bb.jpg","comment_is_top":false,"comment_ctime":1678723369,"is_pvip":false,"replies":[{"id":135064,"content":"Thanks a lot.","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1678760775,"ip_address":"澳大利亚","comment_id":370340,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100536701,"comment_content":"讲的真好","like_count":0,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":608974,"discussion_content":"Thanks a lot.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678760775,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370335,"user_name":"Rock","can_delete":false,"product_type":"c1","uid":1112478,"ip_address":"上海","ucode":"858A2AD4AB9141","user_header":"https://static001.geekbang.org/account/avatar/00/10/f9/9e/ac2e67eb.jpg","comment_is_top":false,"comment_ctime":1678720984,"is_pvip":false,"replies":[{"id":135054,"content":"完整代码是这样的，本来是写在文稿中的，不过极客时间编辑们根据他们的经验建议文稿中只写关键代码，次要的去掉，这样篇幅好一点。编辑过程中删除了一些代码。 全部代码参看https:&#47;&#47;github.com&#47;YaleGuo&#47;Minis 。这一部分可以看github上的ioc分支。\n        SAXReader saxReader=new SAXReader();\n        URL xmlPath=this.getClass().getClassLoader().getResource(fileName);\n        try {\n\t\t\tthis.document = saxReader.read(xmlPath);\n\t\t\tthis.rootElement=document.getRootElement();\n\t\t\tthis.elementIterator=this.rootElement.elementIterator();\n\t\t} catch (DocumentException e) {\n\t\t\te.printStackTrace();\n\t\t}","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1678759463,"ip_address":"澳大利亚","comment_id":370335,"utype":1}],"discussion_count":2,"race_medal":0,"score":6,"product_id":100536701,"comment_content":"            URL xmlPath = this.getClass().getClassLoader().getResource(fileName);\n》》\nnull","like_count":0,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":608960,"discussion_content":"完整代码是这样的，本来是写在文稿中的，不过极客时间编辑们根据他们的经验建议文稿中只写关键代码，次要的去掉，这样篇幅好一点。编辑过程中删除了一些代码。 全部代码参看https://github.com/YaleGuo/Minis 。这一部分可以看github上的ioc分支。\n        SAXReader saxReader=new SAXReader();\n        URL xmlPath=this.getClass().getClassLoader().getResource(fileName);\n        try {\n\t\t\tthis.document = saxReader.read(xmlPath);\n\t\t\tthis.rootElement=document.getRootElement();\n\t\t\tthis.elementIterator=this.rootElement.elementIterator();\n\t\t} catch (DocumentException e) {\n\t\t\te.printStackTrace();\n\t\t}","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678759463,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1358045,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b8/dd/37726c34.jpg","nickname":"小马哥","note":"","ucode":"B2C0FF38F8C9BC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":610816,"discussion_content":"看看fileName的位置是否正确, fileName代表的XML要放在类路径下, 也就是reousces目录中.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1679761701,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370334,"user_name":"Rock","can_delete":false,"product_type":"c1","uid":1112478,"ip_address":"上海","ucode":"858A2AD4AB9141","user_header":"https://static001.geekbang.org/account/avatar/00/10/f9/9e/ac2e67eb.jpg","comment_is_top":false,"comment_ctime":1678720957,"is_pvip":false,"replies":[{"id":135055,"content":"再次回复：\n完整代码是这样的，本来是写在文稿中的，不过极客时间编辑们根据他们的经验建议文稿中只写关键代码，次要的去掉，这样篇幅好一点。编辑过程中删除了一些代码。 全部代码参看https:&#47;&#47;github.com&#47;YaleGuo&#47;Minis 。这一部分可以看github上的ioc分支。\n        SAXReader saxReader=new SAXReader();\n        URL xmlPath=this.getClass().getClassLoader().getResource(fileName);\n        try {\n\t\t\tthis.document = saxReader.read(xmlPath);\n\t\t\tthis.rootElement=document.getRootElement();\n\t\t\tthis.elementIterator=this.rootElement.elementIterator();\n\t\t} catch (DocumentException e) {\n\t\t\te.printStackTrace();\n\t\t}","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1678759528,"ip_address":"澳大利亚","comment_id":370334,"utype":1}],"discussion_count":3,"race_medal":0,"score":7,"product_id":100536701,"comment_content":"            URL xmlPath = this.getClass().getClassLoader().getResource(fileName);\nnull","like_count":0,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":608961,"discussion_content":"再次回复：\n完整代码是这样的，本来是写在文稿中的，不过极客时间编辑们根据他们的经验建议文稿中只写关键代码，次要的去掉，这样篇幅好一点。编辑过程中删除了一些代码。 全部代码参看https://github.com/YaleGuo/Minis 。这一部分可以看github上的ioc分支。\n        SAXReader saxReader=new SAXReader();\n        URL xmlPath=this.getClass().getClassLoader().getResource(fileName);\n        try {\n\t\t\tthis.document = saxReader.read(xmlPath);\n\t\t\tthis.rootElement=document.getRootElement();\n\t\t\tthis.elementIterator=this.rootElement.elementIterator();\n\t\t} catch (DocumentException e) {\n\t\t\te.printStackTrace();\n\t\t}","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678759529,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1096984,"avatar":"https://static001.geekbang.org/account/avatar/00/10/bd/18/2af6bf4b.jpg","nickname":"兔2🐰🍃","note":"","ucode":"1FEDA044BB6CBD","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613375,"discussion_content":"resouces null 问题：右击目录resouces 将目录标记为资源更目录，即可修复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681294342,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2249370,"avatar":"https://static001.geekbang.org/account/avatar/00/22/52/9a/a2bda54f.jpg","nickname":"略略略","note":"","ucode":"F4B7E07ABC7479","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":610865,"discussion_content":"我还奇怪，有try咋没catch ? ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1679817088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370322,"user_name":"竹鹏","can_delete":false,"product_type":"c1","uid":1046236,"ip_address":"浙江","ucode":"D089EDA4ED8C1C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f6/dc/710a2cc7.jpg","comment_is_top":false,"comment_ctime":1678712629,"is_pvip":true,"replies":[{"id":135060,"content":"Thanks a lot.","user_name":"作者回复","user_name_real":"编辑","uid":1864890,"ctime":1678760294,"ip_address":"澳大利亚","comment_id":370322,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100536701,"comment_content":"郭老师，讲得太好了……","like_count":0,"discussions":[{"author":{"id":1864890,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/cojb2AA3eM620kb7hj7YoOpq8XI0iaPyfajnQLO6icAhuSoYWR1vrdOZB2nmSuETxmuheo3sxec698SD6RhTFxgQ/132","nickname":"Yale Guo","note":"","ucode":"6736810620B3F0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":608968,"discussion_content":"Thanks a lot.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678760294,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"澳大利亚","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":371305,"user_name":"小马哥","can_delete":false,"product_type":"c1","uid":1358045,"ip_address":"北京","ucode":"B2C0FF38F8C9BC","user_header":"https://static001.geekbang.org/account/avatar/00/14/b8/dd/37726c34.jpg","comment_is_top":false,"comment_ctime":1679760533,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100536701,"comment_content":"回答&quot;浅行&quot;同学的提问: \n有两个问题想请教一下：\n1. 请问SimpleBeanFactory 为什么是在getBean时才注册实例，而不是registerBeanDefinition就先注册呢？\n2. 请问ClassPathXmlApplicationContext 为什么也要实现BeanFactory呢？\n\n问题1: 这是设计模式中的单一职责原则, 对于注册BeanDefinition这个函数(registerBeanDefinition)来说, 就只管注册BeanDefinition这个单一的功能, 不负责实例化, 所以不在其中插入实例化Bean的代码逻辑;\n问题2: ClassPathXmlApplicationContext整合了读取Resource, 注册Bean和获取Bean三个功能, 既然作为整合方对外提供获取bean和注册bean功能, 那需要遵守接口约束呀, 所以实现了BeanFactory.","like_count":2},{"had_liked":false,"id":381494,"user_name":"Geek_45e28f","can_delete":false,"product_type":"c1","uid":2759037,"ip_address":"日本","ucode":"6CF51984950F48","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erb3HxekfsIdQumoyJVicmOuvibm0DqIiaCNHeESJdic3t1eIXAplplMicOnmLzibI19uiagdXm8qgZftHbw/132","comment_is_top":false,"comment_ctime":1695289256,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100536701,"comment_content":"第一个版本和第二个版有一个很大的区别，第一个版本是在解析XML的过程中就把Bean实例化了，无论最终会不会用到这个Bean，而第二个版本只有当第一次调用getBean这个方法的时候才会实例化Bean，实现了某种程度上的懒加载，这一点老师好像没有明确指出来。","like_count":1},{"had_liked":false,"id":378660,"user_name":"seker","can_delete":false,"product_type":"c1","uid":1122034,"ip_address":"广东","ucode":"9B705F91355873","user_header":"https://static001.geekbang.org/account/avatar/00/11/1e/f2/453d5f88.jpg","comment_is_top":false,"comment_ctime":1690550819,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100536701,"comment_content":"思考题：\nIoC是控制反转，DI是依赖注入。在不同的资料里，有人认为DI就等于IoC，也有人认为DI是对IoC的实现。我个人倾向于后一种说法。\n\n在不使用IoC的情况下，一个对象和其他对象的依赖关系，需要由开发人员去管控，手动去new对象。\n\n在使用IoC的情况下，所有对象由IoC容器去管控，自动去new对象。开发人员只需要声明被注入对象和所依赖对象间的关系，IoC容器就会帮你自动依赖注入。在这个过程中控制权被反转了，由开发者管转到了IoC容器管。","like_count":1},{"had_liked":false,"id":370402,"user_name":"郭英旭","can_delete":false,"product_type":"c1","uid":2701945,"ip_address":"山东","ucode":"B4ED766FC75A29","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqWqPkWSGh3aKCn4ad7gvPIHeID1iazmXE3lU5XFR51WOLPicV7eJCGHnr2ElXEUBWM9mkwO08GkRwQ/132","comment_is_top":false,"comment_ctime":1678789554,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100536701,"comment_content":"期待下一章，在线等。挺急的","like_count":1},{"had_liked":false,"id":370391,"user_name":"C.","can_delete":false,"product_type":"c1","uid":1444698,"ip_address":"江苏","ucode":"5AE269220EFD73","user_header":"https://static001.geekbang.org/account/avatar/00/16/0b/5a/453ad411.jpg","comment_is_top":false,"comment_ctime":1678781602,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100536701,"comment_content":"真的是构造函数用到了极致。","like_count":1},{"had_liked":false,"id":393312,"user_name":"heyucool","can_delete":false,"product_type":"c1","uid":1042214,"ip_address":"浙江","ucode":"9C3406FC8E9C0B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e7/26/1b773620.jpg","comment_is_top":false,"comment_ctime":1723470232,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100536701,"comment_content":"最后部分有点没明白：\n为什么ClassPathXmlApplicationContext要实现BeanFactory接口？实现了BeanFactory接口说明ClassPathXmlApplicationContext也是一种BeanFactory？可是这个类的命名里面却不含BeanFactory呀","like_count":0},{"had_liked":false,"id":393256,"user_name":"榴蕊","can_delete":false,"product_type":"c1","uid":3944362,"ip_address":"浙江","ucode":"B49B77B1EF19FD","user_header":"https://static001.geekbang.org/account/avatar/00/3c/2f/aa/cedbe8e5.jpg","comment_is_top":false,"comment_ctime":1723288496,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100536701,"comment_content":"购买后有代码的画面吗","like_count":0},{"had_liked":false,"id":392411,"user_name":"刘建港","can_delete":false,"product_type":"c1","uid":3252324,"ip_address":"北京","ucode":"F9FDF28CAE185C","user_header":"https://static001.geekbang.org/account/avatar/00/31/a0/64/203feff7.jpg","comment_is_top":false,"comment_ctime":1720850956,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100536701,"comment_content":"老师你说的xml文件哪里会提供呀\n","like_count":0},{"had_liked":false,"id":389508,"user_name":"Geek_28bb47","can_delete":false,"product_type":"c1","uid":3173602,"ip_address":"陕西","ucode":"86F5DCFFDDB723","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/BBaAkryVSFImaoWL5QcRbSpB8IfUbUZGfzGH4xUz0qicJGU1vREvcFedgWAXJlYX9ibkzG3BlnJEQDzejZ5ibLCGA/132","comment_is_top":false,"comment_ctime":1712757174,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100536701,"comment_content":"https:&#47;&#47;github.com&#47;ykexc&#47;minispring每节课对应一个分支，使用嵌入式tomcat,无需IDEA配置。每节课代码都可以运行欢迎大家来参考补充。","like_count":0},{"had_liked":false,"id":385349,"user_name":"樱木花道","can_delete":false,"product_type":"c1","uid":3057188,"ip_address":"河南","ucode":"7ADF5DD97F4CD8","user_header":"https://static001.geekbang.org/account/avatar/00/2e/a6/24/cb46af42.jpg","comment_is_top":false,"comment_ctime":1702474714,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100536701,"comment_content":"控制反转：IOC中的&quot;反转&quot;，对象的创建，由程序本身交给外部容器管理。","like_count":0},{"had_liked":false,"id":382821,"user_name":"Space","can_delete":false,"product_type":"c1","uid":3735471,"ip_address":"上海","ucode":"35126D8F7E12EA","user_header":"","comment_is_top":false,"comment_ctime":1698071191,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100536701,"comment_content":"完整源代码参见 https:&#47;&#47;github.com&#47;YaleGuo&#47;minis\n这个代码下不下来，有其他的方法吗？","like_count":0},{"had_liked":false,"id":379143,"user_name":"Tomcat","can_delete":false,"product_type":"c1","uid":1433646,"ip_address":"湖北","ucode":"983E672CF888C4","user_header":"https://static001.geekbang.org/account/avatar/00/15/e0/2e/c11d20f4.jpg","comment_is_top":false,"comment_ctime":1691409590,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100536701,"comment_content":"很棒，老师不简单","like_count":0},{"had_liked":false,"id":378239,"user_name":"karottc","can_delete":false,"product_type":"c1","uid":1002077,"ip_address":"四川","ucode":"3517FB3B8371FD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4a/5d/d8b92548.jpg","comment_is_top":false,"comment_ctime":1689931203,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100536701,"comment_content":"Class.forName(beanDefinition.getClassName()).newInstance()  在 java8+ 已经过期了，不应该使用。 应该换成\n\nClass.forName(beanDefinition.getClassName()).getDeclaredConstructor().newInstance()","like_count":0},{"had_liked":false,"id":375023,"user_name":"靠人品去赢","can_delete":false,"product_type":"c1","uid":1301286,"ip_address":"广东","ucode":"7A20F9EBE847E1","user_header":"https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg","comment_is_top":false,"comment_ctime":1684814093,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100536701,"comment_content":"话说这个代码的换行符有问题，拷贝出来都是一行，要重新处理一下，只有我一个人有类似情况吗。","like_count":0},{"had_liked":false,"id":372980,"user_name":"KernelStone","can_delete":false,"product_type":"c1","uid":2736140,"ip_address":"广东","ucode":"B75C0100AD52B8","user_header":"https://static001.geekbang.org/account/avatar/00/29/c0/0c/f726d4d0.jpg","comment_is_top":false,"comment_ctime":1681889768,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100536701,"comment_content":"另外补充一点笔记：Bean这个（概念）东西在过程中，假设是单例的话，有几种状态。\n\n1. 还定义在*外部文件*。未加载注册，也未生成。\n2. 已从外部文件加载注册，即*（可以当做概念上的）类Class*，但未生成对象Object。\n    - 可以当做在注册表中有个准确对应的**类名、类信息**。\n3. 已从外部文件加载注册，并也已生成*对象Object（实质上此时才通过加载Class信息生成）*。\n    - 通过**注册表的类名**结合**定义好了的Bean**利用反射机制，生成。\n    - Class字节码的加载，其实是在这个时候？我猜","like_count":0},{"had_liked":false,"id":372189,"user_name":"弱水穿云天","can_delete":false,"product_type":"c1","uid":1190060,"ip_address":"上海","ucode":"80DC528A23ED7E","user_header":"https://static001.geekbang.org/account/avatar/00/12/28/ac/37a2a265.jpg","comment_is_top":false,"comment_ctime":1680832736,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":8,"product_id":100536701,"comment_content":"仔细阅读了好几遍，受益良多","like_count":0,"discussions":[{"author":{"id":3583713,"avatar":"https://static001.geekbang.org/account/avatar/00/36/ae/e1/791d0f5e.jpg","nickname":"George","note":"","ucode":"F62022216961E3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613484,"discussion_content":"同感","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681352230,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":371823,"user_name":"Geek_9378b1","can_delete":false,"product_type":"c1","uid":3161096,"ip_address":"河南","ucode":"2CC403D1398A19","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zJb8KXnd027VzToTmfoZXSODfmzK8ALcp9Qz5U6hdh3Us6nvD9zxJgPezS0icfxaAbQeibybdA4JA/132","comment_is_top":false,"comment_ctime":1680392707,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100536701,"comment_content":"期望老师可以讲一讲IoC是做什么用的，传统方式是什么样的? IoC有哪些优势，解决了哪些问题，适用于哪些场景？以及除了配置文件+反射外还有哪些IoC的方式?感谢老师。","like_count":0},{"had_liked":false,"id":370432,"user_name":"tan","can_delete":false,"product_type":"c1","uid":1477463,"ip_address":"重庆","ucode":"20E176CB1EFD51","user_header":"https://static001.geekbang.org/account/avatar/00/16/8b/57/a3daeaae.jpg","comment_is_top":false,"comment_ctime":1678808372,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100536701,"comment_content":"day1\nhttps:&#47;&#47;gitee.com&#47;etn&#47;tminis&#47;tree&#47;IOC_day_1&#47;","like_count":0},{"had_liked":false,"id":370310,"user_name":"CengNing","can_delete":false,"product_type":"c1","uid":2853805,"ip_address":"上海","ucode":"A993F3E6278EEA","user_header":"https://static001.geekbang.org/account/avatar/00/2b/8b/ad/b30b370c.jpg","comment_is_top":false,"comment_ctime":1678703939,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":9,"product_id":100536701,"comment_content":"期待郭屹老师后续更新","like_count":0}]}