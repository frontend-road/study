{"id":152807,"title":"33 | 跨站脚本攻击（XSS）：为什么Cookie中有HttpOnly属性？","content":"<p>通过<a href=\"https://time.geekbang.org/column/article/151370\">上篇文章</a>的介绍，我们知道了同源策略可以隔离各个站点之间的DOM交互、页面数据和网络通信，虽然严格的同源策略会带来更多的安全，但是也束缚了Web。这就需要在安全和自由之间找到一个平衡点，所以我们默认页面中可以引用任意第三方资源，然后又引入CSP策略来加以限制；默认XMLHttpRequest和Fetch不能跨站请求资源，然后又通过CORS策略来支持其跨域。</p><p>不过支持页面中的第三方资源引用和CORS也带来了很多安全问题，其中最典型的就是XSS攻击。</p><h2>什么是XSS攻击</h2><p>XSS全称是Cross Site Scripting，为了与“CSS”区分开来，故简称XSS，翻译过来就是“跨站脚本”。XSS攻击是指黑客往HTML文件中或者DOM中注入恶意脚本，从而在用户浏览页面时利用注入的恶意脚本对用户实施攻击的一种手段。</p><p>最开始的时候，这种攻击是通过跨域来实现的，所以叫“跨域脚本”。但是发展到现在，往HTML文件中注入恶意代码的方式越来越多了，所以是否跨域注入脚本已经不是唯一的注入手段了，但是XSS这个名字却一直保留至今。</p><p>当页面被注入了恶意JavaScript脚本时，浏览器无法区分这些脚本是被恶意注入的还是正常的页面内容，所以恶意注入JavaScript脚本也拥有所有的脚本权限。下面我们就来看看，如果页面被注入了恶意JavaScript脚本，恶意脚本都能做哪些事情。</p><!-- [[[read_end]]] --><ul>\n<li>可以<strong>窃取Cookie信息</strong>。恶意JavaScript可以通过“document.cookie”获取Cookie信息，然后通过XMLHttpRequest或者Fetch加上CORS功能将数据发送给恶意服务器；恶意服务器拿到用户的Cookie信息之后，就可以在其他电脑上模拟用户的登录，然后进行转账等操作。</li>\n<li>可以<strong>监听用户行为</strong>。恶意JavaScript可以使用“addEventListener”接口来监听键盘事件，比如可以获取用户输入的信用卡等信息，将其发送到恶意服务器。黑客掌握了这些信息之后，又可以做很多违法的事情。</li>\n<li>可以通过<strong>修改DOM</strong>伪造假的登录窗口，用来欺骗用户输入用户名和密码等信息。</li>\n<li>还可以<strong>在页面内生成浮窗广告</strong>，这些广告会严重地影响用户体验。</li>\n</ul><p>除了以上几种情况外，恶意脚本还能做很多其他的事情，这里就不一一介绍了。总之，如果让页面插入了恶意脚本，那么就相当于把我们页面的隐私数据和行为完全暴露给黑客了。</p><h2>恶意脚本是怎么注入的</h2><p>现在我们知道了页面中被注入恶意的JavaScript脚本是一件非常危险的事情，所以网站开发者会尽可能地避免页面中被注入恶意脚本。要想避免站点被注入恶意脚本，就要知道有哪些常见的注入方式。通常情况下，主要有<strong>存储型XSS攻击、反射型XSS攻击</strong>和<strong>基于DOM的XSS攻击</strong>三种方式来注入恶意脚本。</p><h3>1. 存储型XSS攻击</h3><p>我们先来看看存储型XSS攻击是怎么向HTML文件中注入恶意脚本的，你可以参考下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/2e/14/2ed3d8b93035df3c2bcfcc223dc47914.png?wh=1142*847\" alt=\"\"></p><center><span class=\"reference\">存储型XSS攻击</span></center><p>通过上图，我们可以看出存储型XSS攻击大致需要经过如下步骤：</p><ul>\n<li>首先黑客利用站点漏洞将一段恶意JavaScript代码提交到网站的数据库中；</li>\n<li>然后用户向网站请求包含了恶意JavaScript脚本的页面；</li>\n<li>当用户浏览该页面的时候，恶意脚本就会将用户的Cookie信息等数据上传到服务器。</li>\n</ul><p>下面我们来看个例子，2015年喜马拉雅就被曝出了存储型XSS漏洞。起因是在用户设置专辑名称时，服务器对关键字过滤不严格，比如可以将专辑名称设置为一段JavaScript，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/54/49/5479e94a06d9a7cdf3920c60bf834249.png?wh=1142*925\" alt=\"\"></p><center><span class=\"reference\">黑客将恶意代码存储到漏洞服务器上</span></center><p>当黑客将专辑名称设置为一段JavaScript代码并提交时，喜马拉雅的服务器会保存该段JavaScript代码到数据库中。然后当用户打开黑客设置的专辑时，这段代码就会在用户的页面里执行（如下图），这样就可以获取用户的Cookie等数据信息。</p><p><img src=\"https://static001.geekbang.org/resource/image/ef/3a/efaf4123438f37da4c7366b87ed1403a.png?wh=1068*1020\" alt=\"\"></p><center><span class=\"reference\">用户打开了含有恶意脚本的页面</span></center><p>当用户打开黑客设置的专辑页面时，服务器也会将这段恶意JavaScript代码返回给用户，因此这段恶意脚本就在用户的页面中执行了。</p><p>恶意脚本可以通过XMLHttpRequest或者Fetch将用户的Cookie数据上传到黑客的服务器，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/b1/cb/b19300e39a753774f4a94635b46af7cb.png?wh=1142*1030\" alt=\"\"></p><center><span class=\"reference\">将Cookie等数据上传到黑客服务器</span></center><p>黑客拿到了用户Cookie信息之后，就可以利用Cookie信息在其他机器上登录该用户的账号（如下图），并利用用户账号进行一些恶意操作。</p><p><img src=\"https://static001.geekbang.org/resource/image/72/52/720c6daf21a8adf55329af9eaa5ab052.png?wh=1142*625\" alt=\"\"></p><center><span class=\"reference\">黑客利用Cookie信息登录用户账户</span></center><p>以上就是存储型XSS攻击的一个典型案例，这是乌云网在2015年曝出来的，虽然乌云网由于某些原因被关停了，但是你依然可以通过<a href=\"https://shuimugan.com/bug/view?bug_no=138479\">这个站点</a>来查看乌云网的一些备份信息。</p><h3>2. 反射型XSS攻击</h3><p>在一个反射型XSS攻击过程中，恶意JavaScript脚本属于用户发送给网站请求中的一部分，随后网站又把恶意JavaScript脚本返回给用户。当恶意JavaScript脚本在用户页面中被执行时，黑客就可以利用该脚本做一些恶意操作。</p><p>这样讲有点抽象，下面我们结合一个简单的Node服务程序来看看什么是反射型XSS。首先我们使用Node来搭建一个简单的页面环境，搭建好的服务代码如下所示：</p><pre><code>var express = require('express');\nvar router = express.Router();\n\n\n/* GET home page. */\nrouter.get('/', function(req, res, next) {\n  res.render('index', { title: 'Express',xss:req.query.xss });\n});\n\n\nmodule.exports = router;\n</code></pre><pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;title&gt;&lt;%= title %&gt;&lt;/title&gt;\n  &lt;link rel='stylesheet' href='/stylesheets/style.css' /&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;h1&gt;&lt;%= title %&gt;&lt;/h1&gt;\n  &lt;p&gt;Welcome to &lt;%= title %&gt;&lt;/p&gt;\n  &lt;div&gt;\n      &lt;%- xss %&gt;\n  &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p>上面这两段代码，第一段是路由，第二段是视图，作用是将URL中xss参数的内容显示在页面。我们可以在本地演示下，比如打开<code>http://localhost:3000/?xss=123</code>这个链接，这样在页面中展示就是“123”了（如下图），是正常的，没有问题的。</p><p><img src=\"https://static001.geekbang.org/resource/image/7e/db/7ecb717abadfff2637a168d39f0c3cdb.png?wh=1142*599\" alt=\"\"></p><center><span class=\"reference\">正常打开页面</span></center><p>但当打开<code>http://localhost:3000/?xss=&lt;script&gt;alert('你被xss攻击了')&lt;/script&gt;</code>这段URL时，其结果如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/4d/fa/4dff7d83fe2eecc6cb52c126b4f650fa.png?wh=1142*367\" alt=\"\"></p><center><span class=\"reference\">反射型XSS攻击</span></center><p>通过这个操作，我们会发现用户将一段含有恶意代码的请求提交给Web服务器，Web服务器接收到请求时，又将恶意代码反射给了浏览器端，这就是反射型XSS攻击。在现实生活中，黑客经常会通过QQ群或者邮件等渠道诱导用户去点击这些恶意链接，所以对于一些链接我们一定要慎之又慎。</p><p>另外需要注意的是，<strong>Web服务器不会存储反射型XSS攻击的恶意脚本，这是和存储型XSS攻击不同的地方</strong>。</p><h3>3. 基于DOM的XSS攻击</h3><p>基于DOM的XSS攻击是不牵涉到页面Web服务器的。具体来讲，黑客通过各种手段将恶意脚本注入用户的页面中，比如通过网络劫持在页面传输过程中修改HTML页面的内容，这种劫持类型很多，有通过WiFi路由器劫持的，有通过本地恶意软件来劫持的，它们的共同点是在Web资源传输过程或者在用户使用页面的过程中修改Web页面的数据。</p><h2>如何阻止XSS攻击</h2><p>我们知道存储型XSS攻击和反射型XSS攻击都是需要经过Web服务器来处理的，因此可以认为这两种类型的漏洞是服务端的安全漏洞。而基于DOM的XSS攻击全部都是在浏览器端完成的，因此基于DOM的XSS攻击是属于前端的安全漏洞。</p><p>但无论是何种类型的XSS攻击，它们都有一个共同点，那就是首先往浏览器中注入恶意脚本，然后再通过恶意脚本将用户信息发送至黑客部署的恶意服务器上。</p><p>所以要阻止XSS攻击，我们可以通过阻止恶意JavaScript脚本的注入和恶意消息的发送来实现。</p><p>接下来我们就来看看一些常用的阻止XSS攻击的策略。</p><h3>1. 服务器对输入脚本进行过滤或转码</h3><p>不管是反射型还是存储型XSS攻击，我们都可以在服务器端将一些关键的字符进行转码，比如最典型的：</p><pre><code>code:&lt;script&gt;alert('你被xss攻击了')&lt;/script&gt;\n</code></pre><p>这段代码过滤后，只留下了：</p><pre><code>code:\n</code></pre><p>这样，当用户再次请求该页面时，由于<code>&lt;script&gt;</code>标签的内容都被过滤了，所以这段脚本在客户端是不可能被执行的。</p><p>除了过滤之外，服务器还可以对这些内容进行转码，还是上面那段代码，经过转码之后，效果如下所示：</p><pre><code>code:&amp;lt;script&amp;gt;alert(&amp;#39;你被xss攻击了&amp;#39;)&amp;lt;/script&amp;gt;\n</code></pre><p>经过转码之后的内容，如<code>&lt;script&gt;</code>标签被转换为<code>&amp;lt;script&amp;gt;</code>，因此即使这段脚本返回给页面，页面也不会执行这段脚本。</p><h3>2. 充分利用CSP</h3><p>虽然在服务器端执行过滤或者转码可以阻止 XSS 攻击的发生，但完全依靠服务器端依然是不够的，我们还需要把CSP等策略充分地利用起来，以降低 XSS攻击带来的风险和后果。</p><p>实施严格的CSP可以有效地防范XSS攻击，具体来讲CSP有如下几个功能：</p><ul>\n<li>限制加载其他域下的资源文件，这样即使黑客插入了一个JavaScript文件，这个JavaScript文件也是无法被加载的；</li>\n<li>禁止向第三方域提交数据，这样用户数据也不会外泄；</li>\n<li>禁止执行内联脚本和未授权的脚本；</li>\n<li>还提供了上报机制，这样可以帮助我们尽快发现有哪些XSS攻击，以便尽快修复问题。</li>\n</ul><p>因此，利用好CSP能够有效降低XSS攻击的概率。</p><h3>3. 使用HttpOnly属性</h3><p>由于很多XSS攻击都是来盗用Cookie的，因此还可以通过使用HttpOnly属性来保护我们Cookie的安全。</p><p>通常服务器可以将某些Cookie设置为HttpOnly标志，HttpOnly是服务器通过HTTP响应头来设置的，下面是打开Google时，HTTP响应头中的一段：</p><pre><code>set-cookie: NID=189=M8q2FtWbsR8RlcldPVt7qkrqR38LmFY9jUxkKo3-4Bi6Qu_ocNOat7nkYZUTzolHjFnwBw0izgsATSI7TZyiiiaV94qGh-BzEYsNVa7TZmjAYTxYTOM9L_-0CN9ipL6cXi8l6-z41asXtm2uEwcOC5oh9djkffOMhWqQrlnCtOI; expires=Sat, 18-Apr-2020 06:52:22 GMT; path=/; domain=.google.com; HttpOnly\n</code></pre><p>我们可以看到，set-cookie属性值最后使用了HttpOnly来标记该Cookie。顾名思义，使用HttpOnly标记的Cookie只能使用在HTTP请求过程中，所以无法通过JavaScript来读取这段Cookie。我们还可以通过Chrome开发者工具来查看哪些Cookie被标记了HttpOnly，如下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/de/bb/defa78c90a4e8f0debb09564561ab9bb.png?wh=1142*416\" alt=\"\"></p><center><span class=\"reference\">HttpOnly演示</span></center><p>从图中可以看出，NID这个Cookie的HttpOlny属性是被勾选上的，所以NID的内容是无法通过document.cookie是来读取的。</p><p>由于JavaScript无法读取设置了HttpOnly的Cookie数据，所以即使页面被注入了恶意JavaScript脚本，也是无法获取到设置了HttpOnly的数据。因此一些比较重要的数据我们建议设置HttpOnly标志。</p><h2>总结</h2><p>好了，今天我们就介绍到这里，下面我来总结下本文的主要内容。</p><p>XSS攻击就是黑客往页面中注入恶意脚本，然后将页面的一些重要数据上传到恶意服务器。常见的三种XSS攻击模式是存储型XSS攻击、反射型XSS攻击和基于DOM的XSS攻击。</p><p>这三种攻击方式的共同点是都需要往用户的页面中注入恶意脚本，然后再通过恶意脚本将用户数据上传到黑客的恶意服务器上。而三者的不同点在于注入的方式不一样，有通过服务器漏洞来进行注入的，还有在客户端直接注入的。</p><p>针对这些XSS攻击，主要有三种防范策略，第一种是通过服务器对输入的内容进行过滤或者转码，第二种是充分利用好CSP，第三种是使用HttpOnly来保护重要的Cookie信息。</p><p>当然除了以上策略之外，我们还可以通过添加验证码防止脚本冒充用户提交危险操作。而对于一些不受信任的输入，还可以限制其输入长度，这样可以增大XSS攻击的难度。</p><h2>思考时间</h2><p>今天留给你的思考题是：你认为前端开发者对XSS攻击应该负多大责任？</p><p>欢迎在留言区与我分享你的想法，也欢迎你在留言区记录你的思考过程。感谢阅读，如果你觉得这篇文章对你有帮助的话，也欢迎把它分享给更多的朋友。</p><p></p>","neighbors":{"left":{"article_title":"32 | 同源策略：为什么XMLHttpRequest不能跨域请求资源？","id":151370},"right":{"article_title":"34 | CSRF攻击：陌生链接不要随便点","id":154110}},"comments":[{"had_liked":false,"id":198956,"user_name":"杨越","can_delete":false,"product_type":"c1","uid":1651132,"ip_address":"","ucode":"88B933F2096E11","user_header":"https://static001.geekbang.org/account/avatar/00/19/31/bc/4e679d81.jpg","comment_is_top":false,"comment_ctime":1585474359,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"177679133495","product_id":100033601,"comment_content":"内容安全策略( CSP )详细文档：https:&#47;&#47;developer.mozilla.org&#47;zh-CN&#47;docs&#47;Web&#47;HTTP&#47;CSP","like_count":41,"discussions":[{"author":{"id":1406834,"avatar":"https://static001.geekbang.org/account/avatar/00/15/77/72/ad7056f9.jpg","nickname":"hb","note":"","ucode":"DCFA6CECF64E37","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379781,"discussion_content":"优秀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624155258,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229050,"user_name":"LIKE","can_delete":false,"product_type":"c1","uid":1254252,"ip_address":"","ucode":"9DAB7F9051648A","user_header":"https://static001.geekbang.org/account/avatar/00/13/23/6c/82ba5e1f.jpg","comment_is_top":false,"comment_ctime":1592888083,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"104672103187","product_id":100033601,"comment_content":"除去架构不谈，就产品、后端、前端、测试而言。<br>产品：<br>1.业务逻辑层面安全验证，保证即使被攻击也要尽量避免或减少损失，如：资金转出、敏感信息操作（修改登录密码、支付密码）等<br>后端：<br>1.存储型和反射性XSS，后端占比较大，考虑到可以通过接口绕过前端，所以内容编码后端处理比较可靠。<br>2.重点头信息返回httponly，这也需要后端实现<br>前端：<br>1.基于 DOM 的 XSS 攻击，CSP等前端技术运用，这边主要是前端<br>测试：<br>1.丰富测试框架，正对输入框：长度、类型、是否为空、是否重复、组成范围外，也应了解学习安全性测试：XSS攻击、Sql注入等攻击类型。<br>总体而言，个人觉得前端在XSS攻击中责任占比不大。","like_count":25,"discussions":[{"author":{"id":1055073,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/sOvjoV6STk6SYPHRqVOo7DkiajY0KKuKLHSnDNvOKic5lllRNGEQo6W1oE6FrPiaSzUia1vCw9lqmV0vibCOtYtIfHQ/132","nickname":"余昭","note":"","ucode":"29EEEA1BFFE16B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549391,"discussion_content":"前端需要处理输入输出。\n对用户输入内容进行过滤、转义。\n对要进行显示的内容要过滤、反转义。\n当然后端也要处理。\n有时候确实需要输出html,例如编辑器等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643930365,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235091,"user_name":"neohope","can_delete":false,"product_type":"c1","uid":1043475,"ip_address":"","ucode":"C0268F6E7E2B6E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/13/49e98289.jpg","comment_is_top":false,"comment_ctime":1594889605,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"61724431749","product_id":100033601,"comment_content":"其实对于跨站攻击，前端应该承担的责任并不高，原因如下：<br>1、前端的JS代码，在提交表单时，处理特殊字符或处理脚本的函数，完全可以被绕过。所以依赖前端代码彻底解决注入问题，本身就是不可能的，无论如何后端要做好<br>2、可以通过浏览器插件，进行伪装，随意组织想提交的内容，和前端没有关系<br>3、网站设置、服务器安全策略，应该是网站运维和安全组的事情，和前端关系也不大<br>4、测试放过安全bug，也有一定责任<br>5、其实在框架层，已经做了不少这方面的防范，无论是前端还是后端，所以框架组也要负责<br>6、如果被注入脚本了，要防止脚本运行，让浏览器按text处理而不是脚本处理，这个前端要负责的。但被注入本身后端责任更大，所以相当于前端背锅了。<br>","like_count":15,"discussions":[{"author":{"id":1059952,"avatar":"https://static001.geekbang.org/account/avatar/00/10/2c/70/02b627a6.jpg","nickname":"coder","note":"","ucode":"F70511D614B9F4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543060,"discussion_content":"非常赞同你的观点，但是实际推动的时候，后端并不这么想。后端认为你提交过来的数据是要安全的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640941950,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143153,"user_name":"潘启宝","can_delete":false,"product_type":"c1","uid":1624506,"ip_address":"","ucode":"8E697C7164F2E0","user_header":"https://static001.geekbang.org/account/avatar/00/18/c9/ba/f50e9ea4.jpg","comment_is_top":false,"comment_ctime":1571639352,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"40226345016","product_id":100033601,"comment_content":"&lt;meta http-equiv=&quot;Content-Security-Policy&quot; content=&quot;default-src &#39;self&#39;; img-src https:&#47;&#47;*; child-src &#39;none&#39;;&quot;&gt;","like_count":9},{"had_liked":false,"id":142664,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1571451465,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31636222537","product_id":100033601,"comment_content":"前端首先要能够意识到有这个攻击的可能性，然后配合后端人员把这些漏洞修复上。其次应该加强测试方的渗透测试，重视安全。","like_count":7},{"had_liked":false,"id":145381,"user_name":"mfist","can_delete":false,"product_type":"c1","uid":1373624,"ip_address":"","ucode":"4F99F422C23FB4","user_header":"https://static001.geekbang.org/account/avatar/00/14/f5/b8/9f165f4b.jpg","comment_is_top":false,"comment_ctime":1572262198,"is_pvip":false,"replies":[{"id":"56711","content":"不能的，HTTPS只是增加了攻击难度，让攻击者攻击成本和难度提高了。","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1572615461,"ip_address":"","comment_id":145381,"utype":1}],"discussion_count":4,"race_medal":0,"score":"23047098678","product_id":100033601,"comment_content":"跨站脚本攻击前端和后端7 3分吧。毕竟是在浏览器上面出了问题，前端怎么解释也是自己的锅。<br>存储型xss和反射型的xss一个原则不要信任前端的输入，任何前端的输入东西都进行编码。这个地方出了问题后端是有责任的<br>基于dom的xss，传输过程中被篡改，用https之后会防止全部场景吗？ ","like_count":5,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472368,"discussion_content":"不能的，HTTPS只是增加了攻击难度，让攻击者攻击成本和难度提高了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572615461,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1235611,"avatar":"https://static001.geekbang.org/account/avatar/00/12/da/9b/e0ef47df.jpg","nickname":"凭实力写bug","note":"","ucode":"6F772551F18935","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44890,"discussion_content":"前端无关，前面两个是可以直接掉接口把内容传到服务器的，后端需要过滤，前端过滤毫无作用，dom攻击，属于浏览器插件，这类东西，别人权限比你大，可以直接改你东西，发送请求，安全靠前端what了","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1572971141,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1373624,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f5/b8/9f165f4b.jpg","nickname":"mfist","note":"","ucode":"4F99F422C23FB4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1235611,"avatar":"https://static001.geekbang.org/account/avatar/00/12/da/9b/e0ef47df.jpg","nickname":"凭实力写bug","note":"","ucode":"6F772551F18935","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45213,"discussion_content":"前后端都应该做，前端负责体验，后端负责真正的安全。😄","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573013708,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":44890,"ip_address":""},"score":45213,"extra":""},{"author":{"id":1390005,"avatar":"https://static001.geekbang.org/account/avatar/00/15/35/b5/a139a821.jpg","nickname":"王子晨","note":"","ucode":"4A207E2AB34253","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1235611,"avatar":"https://static001.geekbang.org/account/avatar/00/12/da/9b/e0ef47df.jpg","nickname":"凭实力写bug","note":"","ucode":"6F772551F18935","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":64391,"discussion_content":"没错，这种安全漏洞都是后端远大于前端","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1574947181,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":44890,"ip_address":""},"score":64391,"extra":""}]}]},{"had_liked":false,"id":142674,"user_name":"早起不吃虫","can_delete":false,"product_type":"c1","uid":1369757,"ip_address":"","ucode":"13CD3B5E1F9435","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/7WkTI1IicbKvsPJng5vQh5qlrf1smbfl2zb7icHZfzcAk1k4lr8w8IDEAdrqq1NHW5XZMPXiaa1h7Jn1LGOWOCkIA/132","comment_is_top":false,"comment_ctime":1571453801,"is_pvip":false,"discussion_count":7,"race_medal":0,"score":"23046290281","product_id":100033601,"comment_content":"老师请教一个问题，ＣＳP是可以通过meta标签设置的，如果恶意插入的是关于CSP的meta设置呢？","like_count":5,"discussions":[{"author":{"id":1503447,"avatar":"https://static001.geekbang.org/account/avatar/00/16/f0/d7/82a2ffd4.jpg","nickname":"bingmo","note":"","ucode":"F92171460C0EA7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287524,"discussion_content":"所以尽可能通过https协议传输，这样避免明文内容在网络中传输","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1593475238,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1374594,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f9/82/7ee32c07.jpg","nickname":"麦香","note":"","ucode":"8A04F708868FE4","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581791,"discussion_content":"HTTP响应也可以设置 不知道哪个优先级更高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658994508,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"陕西"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1043716,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ed/04/7941d031.jpg","nickname":"Atoe","note":"","ucode":"5FB8C5C6A67067","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391010,"discussion_content":"山外有山，攻防的对垒。哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630229714,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1406834,"avatar":"https://static001.geekbang.org/account/avatar/00/15/77/72/ad7056f9.jpg","nickname":"hb","note":"","ucode":"DCFA6CECF64E37","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379789,"discussion_content":"所以感觉前端发挥有限呀，主要还是后端提供安全机制，前端主要是了解，和在后端不靠谱的时候提供保底方案","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624157706,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1295848,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/yicibWmBIDaSpBYI5wCBDQcYu6mxjvz3XZzBibxSNXFfqCS6OJOjvy2Nc2lyDicZfmneW9ZY4KbicA1sNgLktVSicgkw/132","nickname":"老余","note":"","ucode":"17AC6C60D0EB86","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":37291,"discussion_content":"按照你的说法，前提是需要插入一个文件到服务器或者执行一段脚本。这就是存储型或者反射型xss了。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571571017,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1598292,"avatar":"","nickname":"乔小爷","note":"","ucode":"FF62A2A482091E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1295848,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/yicibWmBIDaSpBYI5wCBDQcYu6mxjvz3XZzBibxSNXFfqCS6OJOjvy2Nc2lyDicZfmneW9ZY4KbicA1sNgLktVSicgkw/132","nickname":"老余","note":"","ucode":"17AC6C60D0EB86","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":269028,"discussion_content":"不是可以网络劫持，插入内如","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1589858013,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":37291,"ip_address":""},"score":269028,"extra":""},{"author":{"id":1196864,"avatar":"https://static001.geekbang.org/account/avatar/00/12/43/40/e7ef18de.jpg","nickname":"嘉一","note":"","ucode":"8D16BD0B75B019","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1598292,"avatar":"","nickname":"乔小爷","note":"","ucode":"FF62A2A482091E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":271275,"discussion_content":"是的，我也有这个疑问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590112650,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":269028,"ip_address":""},"score":271275,"extra":""}]}]},{"had_liked":false,"id":143428,"user_name":"成楠Peter","can_delete":false,"product_type":"c1","uid":1252977,"ip_address":"","ucode":"4D13E7368D8CF2","user_header":"https://static001.geekbang.org/account/avatar/00/13/1e/71/9dcbe6c4.jpg","comment_is_top":false,"comment_ctime":1571707868,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"18751577052","product_id":100033601,"comment_content":"前端需要负大部分责任，因为如果你只是添加字符串，却使用了添加DOM的操作，这不是给XSS攻击留下机会吗。如果非要添加DOM操作，也应该对script、meta等脚本标签做过滤。至于cookie的窃取，正如老师所说，设置httpOnly就行，我总认为前端操作cookie是一种不安全的手段。","like_count":4,"discussions":[{"author":{"id":1235611,"avatar":"https://static001.geekbang.org/account/avatar/00/12/da/9b/e0ef47df.jpg","nickname":"凭实力写bug","note":"","ucode":"6F772551F18935","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44887,"discussion_content":"what前端过滤，你不知道可以越过界面调接口的吗。","likes_number":22,"is_delete":false,"is_hidden":false,"ctime":1572970918,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1624489,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c9/a9/b3dcc723.jpg","nickname":"舔命难违","note":"","ucode":"F0A6F07DF6E32A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":199889,"discussion_content":"服务器为主，前端为辅。服务器如果不做防御，前端做了也没意义，就算做了也只是提高一点攻击门槛罢了","likes_number":14,"is_delete":false,"is_hidden":false,"ctime":1583635642,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1192838,"avatar":"https://static001.geekbang.org/account/avatar/00/12/33/86/0554b6e3.jpg","nickname":"极客没时间","note":"","ucode":"127966D396EEF3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":277534,"discussion_content":"前端安全就是个伪命题","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1591067162,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1003365,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4f/65/2133fdfb.jpg","nickname":"前端黑板报","note":"","ucode":"55A9F886A35838","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":249856,"discussion_content":"大部分责任只是你感觉到的，后端才是重点，拦截接口就可以跳过你的前端做的安全策略。","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1587968248,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1376672,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Snialo4PnDQCcYtyfDT6xSy61TbwDxoCoD7mNc6XLSKZmLu5ibGfeFibgwLGZtvr8r4vFp0zVaicUmqDibDiaHTGIhvg/132","nickname":"柴柴","note":"","ucode":"8A76B32AA270A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":47688,"discussion_content":"防君子不防小人","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1573391555,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2402419,"avatar":"","nickname":"懒惰的小花猫","note":"","ucode":"2FEB342FD4DAD8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582760,"discussion_content":"很多场景下，前端就是个背锅的，尤其是对一个不懂技术的领导。\n前天我们项目的登录不能用了，我们的架构师和后台的小负责人气冲冲的说你把登录功能通过样式改坏了。整的我一脸懵逼，他们做的什么、谁做的我都不知道。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659662035,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164728,"user_name":"niexia","can_delete":false,"product_type":"c1","uid":1238585,"ip_address":"","ucode":"FB95E807E0B1BF","user_header":"https://static001.geekbang.org/account/avatar/00/12/e6/39/1dad4153.jpg","comment_is_top":false,"comment_ctime":1577083107,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10167017699","product_id":100033601,"comment_content":"关于 CSP，可以看一下 MDN 的说明 https:&#47;&#47;developer.mozilla.org&#47;zh-CN&#47;docs&#47;Web&#47;HTTP&#47;CSP","like_count":2},{"had_liked":false,"id":142678,"user_name":"覃","can_delete":false,"product_type":"c1","uid":1387871,"ip_address":"","ucode":"6DA7B34A33DDFB","user_header":"https://static001.geekbang.org/account/avatar/00/15/2d/5f/f648ec62.jpg","comment_is_top":false,"comment_ctime":1571455144,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"10161389736","product_id":100033601,"comment_content":"基于dom的攻击，https应该能完全防护吧。","like_count":2,"discussions":[{"author":{"id":2342513,"avatar":"","nickname":"Geek_7e864b","note":"","ucode":"D8765360B8E424","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335434,"discussion_content":"本地的恶意程序，恶意插件，都能做到操作dom，防不胜防","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608193429,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1252977,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1e/71/9dcbe6c4.jpg","nickname":"成楠Peter","note":"","ucode":"4D13E7368D8CF2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":37972,"discussion_content":"不能完全防护","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571707617,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1338019,"avatar":"https://static001.geekbang.org/account/avatar/00/14/6a/a3/82fa23f7.jpg","nickname":"何锦余","note":"","ucode":"153750511B9ADE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1252977,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1e/71/9dcbe6c4.jpg","nickname":"成楠Peter","note":"","ucode":"4D13E7368D8CF2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":195101,"discussion_content":"为什么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583249018,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":37972,"ip_address":""},"score":195101,"extra":""},{"author":{"id":1252977,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1e/71/9dcbe6c4.jpg","nickname":"成楠Peter","note":"","ucode":"4D13E7368D8CF2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1338019,"avatar":"https://static001.geekbang.org/account/avatar/00/14/6a/a3/82fa23f7.jpg","nickname":"何锦余","note":"","ucode":"153750511B9ADE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":195651,"discussion_content":"\n通过网络协议的，没有完全防护一说。黑客可以通过路由器，或者运营商攻击","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583294470,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":195101,"ip_address":""},"score":195651,"extra":""}]}]},{"had_liked":false,"id":275480,"user_name":"anthonyliu","can_delete":false,"product_type":"c1","uid":1309488,"ip_address":"","ucode":"FF3BBA19B7A908","user_header":"https://static001.geekbang.org/account/avatar/00/13/fb/30/ba06482a.jpg","comment_is_top":false,"comment_ctime":1611559342,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"5906526638","product_id":100033601,"comment_content":"老师！我有个疑问：“黑客拿到了用户 Cookie 信息之后，就可以利用 Cookie 信息在其他机器上登录该用户的账号”。黑客的服务器拿到用户的cookie信息，怎么在黑客的客户端模拟登录了？是cookie中有用户的登录名和密码吗？我觉得这个不太可能。如果这不可能，那是什么情况下，黑客可以通过cookie来登录？","like_count":2,"discussions":[{"author":{"id":1374337,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f8/81/bff52f91.jpg","nickname":"1830","note":"","ucode":"246FEF7C97F39C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380224,"discussion_content":"使用cookie作为用户登录机制的网站，cookie就代表了用户名和密码。你需要补一补服务端的知识","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1624378142,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2475132,"avatar":"https://static001.geekbang.org/account/avatar/00/25/c4/7c/fa60f86f.jpg","nickname":"kelinlawu","note":"","ucode":"96D18B71A33277","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587135,"discussion_content":"别较真，现在session+cookie都没人用，基本都是token（JWT）+oauth2进行身份校验，前端攻击你就记住只有面试有用，实际工作五年你都不一定接触的到。我觉得相对于这些，前端对服务器的输入做可信校验反而很重要，尤其是项目不使用ts的情况下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662809868,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"四川"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1406834,"avatar":"https://static001.geekbang.org/account/avatar/00/15/77/72/ad7056f9.jpg","nickname":"hb","note":"","ucode":"DCFA6CECF64E37","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379792,"discussion_content":"这种是很久以前了 现在都是用的token","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624157913,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":237158,"user_name":"昵称","can_delete":false,"product_type":"c1","uid":1486529,"ip_address":"","ucode":"38C14BF83EAC1C","user_header":"https://static001.geekbang.org/account/avatar/00/16/ae/c1/76a9237f.jpg","comment_is_top":false,"comment_ctime":1595693625,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5890660921","product_id":100033601,"comment_content":"前端不主动innerHTML的话，都和前端责任不大。存储型、反射型的源头都是服务端不做过滤、转码。Dom插入攻击是第三方插入的，如wifi路由器、运营商等，这个就没办法了，前端只能通过csp配置一下策略，还有最好就是上https了。","like_count":1},{"had_liked":false,"id":165247,"user_name":"LEON","can_delete":false,"product_type":"c1","uid":1109922,"ip_address":"","ucode":"58F7AF5302FCAD","user_header":"https://static001.geekbang.org/account/avatar/00/10/ef/a2/6ea5bb9e.jpg","comment_is_top":false,"comment_ctime":1577187699,"is_pvip":true,"discussion_count":3,"race_medal":0,"score":"5872154995","product_id":100033601,"comment_content":"请教老师。存储型XSS是不是也可以修改DOM进行攻击。这种方式和DOM型XSS有什么区别？","like_count":1,"discussions":[{"author":{"id":1406834,"avatar":"https://static001.geekbang.org/account/avatar/00/15/77/72/ad7056f9.jpg","nickname":"hb","note":"","ucode":"DCFA6CECF64E37","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379791,"discussion_content":"攻击方式不同，然后存储型攻击有限，DOM可以直接把页面都给改了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624157878,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1201350,"avatar":"https://static001.geekbang.org/account/avatar/00/12/54/c6/c2481790.jpg","nickname":"lisiur","note":"","ucode":"CEB2DBCE29CAA7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":245882,"discussion_content":"存储型和反射型都是针对早期html由后端生成的情况，现在前后端分离大多只考虑DOM型即可","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587707811,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1424137,"avatar":"https://static001.geekbang.org/account/avatar/00/15/bb/09/f593ef68.jpg","nickname":"Javon Yan","note":"","ucode":"12643538BC8B7C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1201350,"avatar":"https://static001.geekbang.org/account/avatar/00/12/54/c6/c2481790.jpg","nickname":"lisiur","note":"","ucode":"CEB2DBCE29CAA7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364039,"discussion_content":"你说的不对吧，前后端分离也会有存储型XSS，反射型可能少点","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1617355947,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":245882,"ip_address":""},"score":364039,"extra":""}]}]},{"had_liked":false,"id":142647,"user_name":"隔夜果酱","can_delete":false,"product_type":"c1","uid":1319638,"ip_address":"","ucode":"5AFEB62E832BCB","user_header":"https://static001.geekbang.org/account/avatar/00/14/22/d6/9378f4d5.jpg","comment_is_top":false,"comment_ctime":1571446851,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5866414147","product_id":100033601,"comment_content":"比如Chrome扩展，油猴脚本这些应该算基于dom的xss么？对于基于dom的攻击，网站就没有办法了吧。","like_count":1,"discussions":[{"author":{"id":1295848,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/yicibWmBIDaSpBYI5wCBDQcYu6mxjvz3XZzBibxSNXFfqCS6OJOjvy2Nc2lyDicZfmneW9ZY4KbicA1sNgLktVSicgkw/132","nickname":"老余","note":"","ucode":"17AC6C60D0EB86","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":37292,"discussion_content":"这是用户自己的行为啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571571175,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":356995,"user_name":"kelinlawu","can_delete":false,"product_type":"c1","uid":2475132,"ip_address":"四川","ucode":"96D18B71A33277","user_header":"https://static001.geekbang.org/account/avatar/00/25/c4/7c/fa60f86f.jpg","comment_is_top":false,"comment_ctime":1662809969,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1662809969","product_id":100033601,"comment_content":"&lt;script&gt;alert(&#39;你被xss攻击了&#39;)&lt;&#47;script&gt;","like_count":0},{"had_liked":false,"id":353395,"user_name":"FECoding","can_delete":false,"product_type":"c1","uid":1253140,"ip_address":"北京","ucode":"A3E8397FDD20D6","user_header":"https://static001.geekbang.org/account/avatar/00/13/1f/14/57cb7926.jpg","comment_is_top":false,"comment_ctime":1659423118,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1659423118","product_id":100033601,"comment_content":"那段代码怎么跑起来啊","like_count":0},{"had_liked":false,"id":321677,"user_name":"撒哈拉","can_delete":false,"product_type":"c1","uid":1608406,"ip_address":"","ucode":"2F64B26543D772","user_header":"https://static001.geekbang.org/account/avatar/00/18/8a/d6/00cf9218.jpg","comment_is_top":false,"comment_ctime":1636989563,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636989563","product_id":100033601,"comment_content":"有三种 xss攻击，存储型，反射型，修改dom型<br><br>防范方式主要是，<br><br>1，从用户输入角度，服务器进行限制<br><br>2，从csp，内容安全角度浏览器限制<br><br>3，限制 cookie，不能被JavaScript读取","like_count":0},{"had_liked":false,"id":321675,"user_name":"撒哈拉","can_delete":false,"product_type":"c1","uid":1608406,"ip_address":"","ucode":"2F64B26543D772","user_header":"https://static001.geekbang.org/account/avatar/00/18/8a/d6/00cf9218.jpg","comment_is_top":false,"comment_ctime":1636989240,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636989240","product_id":100033601,"comment_content":"xss 攻击，也叫跨站脚本攻击，主要是插入script标签，执行恶意脚本，获取用户登录数据，发给第三方服务器，然后伪造用户登录信息，进行不法行为。<br>","like_count":0},{"had_liked":false,"id":306262,"user_name":"Geek_feca44","can_delete":false,"product_type":"c1","uid":2729106,"ip_address":"","ucode":"9DC02900616DCE","user_header":"","comment_is_top":false,"comment_ctime":1628476785,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628476785","product_id":100033601,"comment_content":"反射型 XSS 跟存储型 XSS 的区别是：存储型 XSS 的恶意代码存在数据库里，反射型 XSS 的恶意代码存在 URL 里。<br><br>DOM 型 XSS 跟前两种 XSS 的区别：DOM 型 XSS 攻击中，取出和执行恶意代码由浏览器端完成，属于前端 JavaScript 自身的安全漏洞，而其他两种 XSS 都属于服务端的安全漏洞。","like_count":0},{"had_liked":false,"id":305879,"user_name":"天择","can_delete":false,"product_type":"c1","uid":2166878,"ip_address":"","ucode":"ED2B08DB2F2B38","user_header":"https://static001.geekbang.org/account/avatar/00/21/10/5e/42f4faf7.jpg","comment_is_top":false,"comment_ctime":1628217179,"is_pvip":true,"discussion_count":0,"race_medal":4,"score":"1628217179","product_id":100033601,"comment_content":"前端工程师应当假设服务端没有对XSS做防护。","like_count":0},{"had_liked":false,"id":302235,"user_name":"1979104101ng","can_delete":false,"product_type":"c1","uid":2138770,"ip_address":"","ucode":"95204E6CBA81D6","user_header":"https://static001.geekbang.org/account/avatar/00/20/a2/92/6bbcb80b.jpg","comment_is_top":false,"comment_ctime":1626143061,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626143061","product_id":100033601,"comment_content":"示例代码里的&lt;%- xss &gt; 的 %- 表示  &lt;%- 输出非转义的数据到模板 ，所以从服务器发送到前端就变成了 script 标签","like_count":0},{"had_liked":false,"id":296428,"user_name":"不二","can_delete":false,"product_type":"c1","uid":1308316,"ip_address":"","ucode":"6216C4B8FB7F57","user_header":"https://static001.geekbang.org/account/avatar/00/13/f6/9c/68b97b7a.jpg","comment_is_top":false,"comment_ctime":1622970936,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622970936","product_id":100033601,"comment_content":"&lt;script&gt;alert(&#39;你被xss攻击了&#39;)&lt;&#47;script&gt;","like_count":0},{"had_liked":false,"id":272019,"user_name":"LIKE","can_delete":false,"product_type":"c1","uid":1254252,"ip_address":"","ucode":"9DAB7F9051648A","user_header":"https://static001.geekbang.org/account/avatar/00/13/23/6c/82ba5e1f.jpg","comment_is_top":false,"comment_ctime":1609912738,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609912738","product_id":100033601,"comment_content":"老师好，针对系统内已存在的存储型xss漏洞要如何修复？是需要前端修改页面解析逻辑？<br>后端修改数据存储逻辑吗？","like_count":0},{"had_liked":false,"id":264264,"user_name":"Demo_12","can_delete":false,"product_type":"c1","uid":2125587,"ip_address":"","ucode":"D99A09198B0710","user_header":"https://static001.geekbang.org/account/avatar/00/20/6f/13/19bec416.jpg","comment_is_top":false,"comment_ctime":1606395683,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606395683","product_id":100033601,"comment_content":"我觉得前端对产品也需要有主人翁的意识<br>首先是前端自己可做到的，对于XSS攻击的预防策略，设置CSP，前端提交内容时先经过一层编码处理<br>其他需要后端的，后端编码处理和设置CORS&#47;cookie http-only 这些可以推动后端去设置<br>但是，也不能轻易背锅","like_count":0},{"had_liked":false,"id":255829,"user_name":"小炭","can_delete":false,"product_type":"c1","uid":1109544,"ip_address":"","ucode":"E20E3958CAF06C","user_header":"https://static001.geekbang.org/account/avatar/00/10/ee/28/c04a0c83.jpg","comment_is_top":false,"comment_ctime":1603440161,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1603440161","product_id":100033601,"comment_content":"应该负责任的，至少要避免明显的安全问题。有职业追求的人都应该对自己的工作负责。","like_count":0},{"had_liked":false,"id":247851,"user_name":"CaptainJack","can_delete":false,"product_type":"c1","uid":1854952,"ip_address":"","ucode":"2630B57EE4DFCC","user_header":"https://static001.geekbang.org/account/avatar/00/1c/4d/e8/b94f7438.jpg","comment_is_top":false,"comment_ctime":1599892587,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599892587","product_id":100033601,"comment_content":"如果真要说，那么我认为是前端安全占10%，后端占90%，是提供服务的安全性，前端再怎么处理，都很难从根节点去解决安全问题，安全问题的核心，在传输和业务入口，而非前端，前端可以配合来做，提升破解的难度，但是还是那句话，安全的根源，不在前端","like_count":0},{"had_liked":false,"id":238779,"user_name":"张远","can_delete":false,"product_type":"c1","uid":1527297,"ip_address":"","ucode":"95DDC9B5830AFF","user_header":"https://static001.geekbang.org/account/avatar/00/17/4e/01/572d53ac.jpg","comment_is_top":false,"comment_ctime":1596291930,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1596291930","product_id":100033601,"comment_content":"喜马拉雅那个我不太明白啊？专辑名称前后端交互的类型是个字符串吧，服务器返回的专辑名称也是个字符串，怎么就会执行这段script代码啊？","like_count":0,"discussions":[{"author":{"id":1344810,"avatar":"https://static001.geekbang.org/account/avatar/00/14/85/2a/376dd985.jpg","nickname":"uccs","note":"","ucode":"93DF5B81AB170E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303979,"discussion_content":"用 innterHTML 就可以执行了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599442074,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1064018,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3c/52/5951ffb4.jpg","nickname":"Sinvi","note":"","ucode":"2A90976980CA3C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302822,"discussion_content":"模板引擎会生成可以被浏览器识别的内容，写进去的xss插入到这段内容中当然会被执行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599038861,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2069771,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erlNibBQTFDB5sic2XUCicRtYN7NVlWEeDaAVhhYM3xvtlgEAMjL4FO3re9via1TZDab09RxOnXgCElRw/132","nickname":"Geek_93ec90","note":"","ucode":"B1A2592CCF79EC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298620,"discussion_content":"浏览器在渲染时会认为这是个普通的script标签，因此会执行它","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597364916,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226106,"user_name":"我还能吃下一颗海葡萄","can_delete":false,"product_type":"c1","uid":1993751,"ip_address":"","ucode":"ACBA2F72ADBB12","user_header":"https://static001.geekbang.org/account/avatar/00/1e/6c/17/247cda40.jpg","comment_is_top":false,"comment_ctime":1591952519,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1591952519","product_id":100033601,"comment_content":"&lt;script&gt;alert(&#39;你被xss攻击了&#39;)&lt;&#47;script&gt;<br>","like_count":0,"discussions":[{"author":{"id":1269541,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/u1TI6W7VyYJmRqGoyY9dvHU8icxdZT6LVbsWLibWBIj3Tia8p2Ipia8DjoiagWKMmFib1g9KTNcvagThaLNialKk4VaCw/132","nickname":"Geek_0a1c28","note":"","ucode":"FAFA866B841001","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":358307,"discussion_content":"<script>alert(&#39;xx&#39;)</script>","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615963006,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1527297,"avatar":"https://static001.geekbang.org/account/avatar/00/17/4e/01/572d53ac.jpg","nickname":"张远","note":"","ucode":"95DDC9B5830AFF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295703,"discussion_content":"为啥这样就不行呢\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596291990,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2056440,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/60/f8/659c3799.jpg","nickname":"朱重八","note":"","ucode":"EA15E85C15B752","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1527297,"avatar":"https://static001.geekbang.org/account/avatar/00/17/4e/01/572d53ac.jpg","nickname":"张远","note":"","ucode":"95DDC9B5830AFF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300569,"discussion_content":"因为被转译为html实体了：&amp;lt;script&amp;gt;alert(&#39;你被xss攻击了&#39;)&amp;lt;/script&amp;gt;","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598175827,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":295703,"ip_address":""},"score":300569,"extra":""}]}]},{"had_liked":false,"id":202035,"user_name":"王晓蘅","can_delete":false,"product_type":"c1","uid":1467926,"ip_address":"","ucode":"09B6D5D8A40CAA","user_header":"https://static001.geekbang.org/account/avatar/00/16/66/16/b8e6436c.jpg","comment_is_top":false,"comment_ctime":1585890932,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585890932","product_id":100033601,"comment_content":"&lt;script&gt;alert(&#39;你被xss攻击了&#39;)&lt;&#47;script&gt;","like_count":0},{"had_liked":false,"id":197234,"user_name":"Learning","can_delete":false,"product_type":"c1","uid":1480278,"ip_address":"","ucode":"CDF8C6383BA9EF","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eokuZYcbHTG2HAICdczY7LX1dmFdIOPdJSJVWrzDQEP19QeUssibEvUoWaB7ode6zTYj2Wen0jFhZQ/132","comment_is_top":false,"comment_ctime":1585364461,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585364461","product_id":100033601,"comment_content":"前端对于所有的用户输入的地方都应该做防止xss攻击的处理","like_count":0},{"had_liked":false,"id":178350,"user_name":"小蛋糕","can_delete":false,"product_type":"c1","uid":1807662,"ip_address":"","ucode":"335A6F4301CF22","user_header":"https://static001.geekbang.org/account/avatar/00/1b/95/2e/f8575abb.jpg","comment_is_top":false,"comment_ctime":1581667062,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"1581667062","product_id":100033601,"comment_content":"不可否认的说，前端确实背锅，因为事发地点就在浏览器中...<br><br>虽说存储型和反射型都是由于服务器的不当所导致的问题，但最终如果前端能发现问题并予以屏蔽，那自然不存在 XSS。<br>不过话是这么说的没错，但前端只能说尽量做到防范，因为谁他也想不到什么地方就突然整出来什么幺蛾子。<br><br>后端也不能因为责任较小就撇清责任，服务器端也应该做好想要的防范工作，毕竟调用接口这个事情也不是只有自家前端可以调。","like_count":0,"discussions":[{"author":{"id":1391354,"avatar":"https://static001.geekbang.org/account/avatar/00/15/3a/fa/21f64eaa.jpg","nickname":"mimof9","note":"","ucode":"C83B3E2CD62BBD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":230757,"discussion_content":"前端再如何限制输入，也只是增大了XSS的难度，就像你说得，调用服务器接口是个很容易的事情，这样的话对于存储型XSS，反射性XSS，前端根本无能为力。追责起来，也只能发现是服务器端没有做过滤，难道我这时候和领导讲是前端没有告诉我应该做XSS防护么。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1586769365,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2543692,"avatar":"https://static001.geekbang.org/account/avatar/00/26/d0/4c/3e86714d.jpg","nickname":"哦耶","note":"","ucode":"553B993D231545","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367654,"discussion_content":"你是搞后端的吧","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1618413361,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1963947,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/0iaIWczXBpgnVVQwKmKNg62rMUDhMyuZOD9BMzbcfg37zu5NFMAAm79FTwsiblmMHfSu0ew6BHWRTyaCR7s8vbtw/132","nickname":"Geek_392d92","note":"","ucode":"73F65CC90BE036","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":356778,"discussion_content":"好家伙原来你做需求的时候验证的主要部分都是前端的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1615678661,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1374594,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f9/82/7ee32c07.jpg","nickname":"麦香","note":"","ucode":"8A04F708868FE4","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581793,"discussion_content":"你是搞后端的吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658995835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164886,"user_name":"bai","can_delete":false,"product_type":"c1","uid":1462911,"ip_address":"","ucode":"C9673B7F2C896E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKf9xWMCV4ic5dsKyroQpGkYGZ32IPicVPVsF1TPENeTcspd6HhhaciaHCCmzeicaiaItZS3DahASFovJQ/132","comment_is_top":false,"comment_ctime":1577105806,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1577105806","product_id":100033601,"comment_content":"我通过innerHTML方式插入&#39;&lt;script&gt;alert(&quot;xss&quot;)&lt;\\&#47;script&gt;&#39;到页面中，alert并不会执行，那么存储型和反射型的xss攻击是如何实现的呢。网上似乎也找不到相关说明","like_count":0,"discussions":[{"author":{"id":1023016,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/9c/28/87421d8f.jpg","nickname":"Happy-Coming","note":"","ucode":"4F7EA88432EDCD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":236426,"discussion_content":"版本比较新的浏览器自带了安全措施，可以使用IE6实验一下","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1587092934,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1381899,"avatar":"https://static001.geekbang.org/account/avatar/00/15/16/0b/18dce773.jpg","nickname":"HAYWAEL","note":"","ucode":"32A41ADFDB15E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287713,"discussion_content":"存储型和反射型是修改服务器返回，和innerHTML不同","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593518751,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":162633,"user_name":"-_-|||","can_delete":false,"product_type":"c1","uid":1328142,"ip_address":"","ucode":"94B21594658BF9","user_header":"https://static001.geekbang.org/account/avatar/00/14/44/0e/ce14b7d3.jpg","comment_is_top":false,"comment_ctime":1576569887,"is_pvip":false,"discussion_count":2,"race_medal":1,"score":"1576569887","product_id":100033601,"comment_content":"CSP中“限制加载其他域下的资源文件”，服务器是如何限制加载其它域下的资源的，浏览器插入一个脚本，服务器也监听不到啊？“禁止执行内联脚本和未授权的脚本；”服务器怎么禁止执行内联脚本？","like_count":0,"discussions":[{"author":{"id":1376854,"avatar":"https://static001.geekbang.org/account/avatar/00/15/02/56/3cd2f842.jpg","nickname":"不爱吃柳橙","note":"","ucode":"FBA1045717F33A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":280228,"discussion_content":"服务器可以设置http响应头 Content-Security-Policy","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591515688,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1023016,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/9c/28/87421d8f.jpg","nickname":"Happy-Coming","note":"","ucode":"4F7EA88432EDCD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":236434,"discussion_content":"服务器在返回一个html文件时，通过在html的head中加入meta标签(并指定具体的CSP策略)，来告诉浏览器“不要这个，禁止那个”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587093963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}