{"id":221982,"title":"33 | 加餐3：定位应用问题，排错套路很重要","content":"<p>你好，我是朱晔。</p><p>咱们这个课程已经更新13讲了，感谢各位同学一直在坚持学习，并在评论区留下了很多高质量的留言。这些留言，有的是分享自己曾经踩的坑，有的是对课后思考题的详细解答，还有的是提出了非常好的问题，进一步丰富了这个课程的内容。</p><p>有同学说，这个课程的案例非常实用，都是工作中会遇到的。正如我在开篇词中所说，这个课程涉及的100个案例、约130个小坑，有40%来自于我经历过或者是见过的200多个线上生产事故，剩下的60%来自于我开发业务项目，以及日常审核别人的代码发现的问题。确实，我在整理这些案例上花费了很多精力，也特别感谢各位同学的认可，更希望你们能继续坚持学习，继续在评论区和我交流。</p><p>也有同学反馈，排查问题的思路很重要，希望自己遇到问题时，也能够从容、高效地定位到根因。因此，今天这一讲，我就与你说说我在应急排错方面积累的心得。这都是我多年担任技术负责人和架构师自己总结出来的，希望对你有所帮助。当然了，也期待你能留言与我说说，自己平时的排错套路。</p><h2>在不同环境排查问题，有不同的方式</h2><p>要说排查问题的思路，我们首先得明白是在什么环境排错。</p><ul>\n<li>如果是在自己的开发环境排查问题，那你几乎可以使用任何自己熟悉的工具来排查，甚至可以进行单步调试。只要问题能重现，排查就不会太困难，最多就是把程序调试到JDK或三方类库内部进行分析。</li>\n<li>如果是在测试环境排查问题，相比开发环境少的是调试，不过你可以使用JDK自带的jvisualvm或阿里的<a href=\"https://github.com/alibaba/arthas\">Arthas</a>，附加到远程的JVM进程排查问题。另外，测试环境允许造数据、造压力模拟我们需要的场景，因此遇到偶发问题时，我们可以尝试去造一些场景让问题更容易出现，方便测试。</li>\n<li>如果是在生产环境排查问题，往往比较难：一方面，生产环境权限管控严格，一般不允许调试工具从远程附加进程；另一方面，生产环境出现问题要求以恢复为先，难以留出充足的时间去慢慢排查问题。但，因为生产环境的流量真实、访问量大、网络权限管控严格、环境复杂，因此更容易出问题，也是出问题最多的环境。</li>\n</ul><!-- [[[read_end]]] --><p>接下来，我就与你详细说说，如何在生产环境排查问题吧。</p><h2>生产问题的排查很大程度依赖监控</h2><p>其实，排查问题就像在破案，生产环境出现问题时，因为要尽快恢复应用，就不可能保留完整现场用于排查和测试。因此，是否有充足的信息可以了解过去、还原现场就成了破案的关键。这里说的信息，主要就是日志、监控和快照。</p><p>日志就不用多说了，主要注意两点：</p><ul>\n<li>确保错误、异常信息可以被完整地记录到文件日志中；</li>\n<li>确保生产上程序的日志级别是INFO以上。记录日志要使用合理的日志优先级，DEBUG用于开发调试、INFO用于重要流程信息、WARN用于需要关注的问题、ERROR用于阻断流程的错误。</li>\n</ul><p>对于监控，在生产环境排查问题时，首先就需要开发和运维团队做好充足的监控，而且是多个层次的监控。</p><ul>\n<li>主机层面，对CPU、内存、磁盘、网络等资源做监控。如果应用部署在虚拟机或Kubernetes集群中，那么除了对物理机做基础资源监控外，还要对虚拟机或Pod做同样的监控。监控层数取决于应用的部署方案，有一层OS就要做一层监控。</li>\n<li>网络层面，需要监控专线带宽、交换机基本情况、网络延迟。</li>\n<li>所有的中间件和存储都要做好监控，不仅仅是监控进程对CPU、内存、磁盘IO、网络使用的基本指标，更重要的是监控组件内部的一些重要指标。比如，著名的监控工具Prometheus，就提供了大量的<a href=\"https://prometheus.io/docs/instrumenting/exporters/\">exporter</a>来对接各种中间件和存储系统。</li>\n<li>应用层面，需要监控JVM进程的类加载、内存、GC、线程等常见指标（比如使用<a href=\"https://micrometer.io/\">Micrometer</a>来做应用监控），此外还要确保能够收集、保存应用日志、GC日志。</li>\n</ul><p>我们再来看看快照。这里的“快照”是指，应用进程在某一时刻的快照。通常情况下，我们会为生产环境的Java应用设置-XX:+HeapDumpOnOutOfMemoryError和-XX:HeapDumpPath=…这2个JVM参数，用于在出现OOM时保留堆快照。这个课程中，我们也多次使用MAT工具来分析堆快照。</p><p>了解过去、还原现场后，接下来我们就看看定位问题的套路。</p><h2>分析定位问题的套路</h2><p>定位问题，首先要定位问题出在哪个层次上。比如，是Java应用程序自身的问题还是外部因素导致的问题。我们可以先查看程序是否有异常，异常信息一般比较具体，可以马上定位到大概的问题方向；如果是一些资源消耗型的问题可能不会有异常，我们可以通过指标监控配合显性问题点来定位。</p><p>一般情况下，程序的问题来自以下三个方面。</p><p>第一，程序发布后的Bug，回滚后可以立即解决。这类问题的排查，可以回滚后再慢慢分析版本差异。</p><p>第二，外部因素，比如主机、中间件或数据库的问题。这类问题的排查方式，按照主机层面的问题、中间件或存储（统称组件）的问题分为两类。</p><p>主机层面的问题，可以使用工具排查：</p><ul>\n<li>CPU相关问题，可以使用top、vmstat、pidstat、ps等工具排查；</li>\n<li>内存相关问题，可以使用free、top、ps、vmstat、cachestat、sar等工具排查；</li>\n<li>IO相关问题，可以使用lsof、iostat、pidstat、sar、iotop、df、du等工具排查；</li>\n<li>网络相关问题，可以使用ifconfig、ip、nslookup、dig、ping、tcpdump、iptables等工具排查。</li>\n</ul><p>组件的问题，可以从以下几个方面排查：</p><ul>\n<li>排查组件所在主机是否有问题；</li>\n<li>排查组件进程基本情况，观察各种监控指标；</li>\n<li>查看组件的日志输出，特别是错误日志；</li>\n<li>进入组件控制台，使用一些命令查看其运作情况。</li>\n</ul><p>第三，因为系统资源不够造成系统假死的问题，通常需要先通过重启和扩容解决问题，之后再进行分析，不过最好能留一个节点作为现场。系统资源不够，一般体现在CPU使用高、内存泄漏或OOM的问题、IO问题、网络相关问题这四个方面。</p><p>对于CPU使用高的问题，如果现场还在，具体的分析流程是：</p><ul>\n<li>首先，在Linux服务器上运行top -Hp pid命令，来查看进程中哪个线程CPU使用高；</li>\n<li>然后，输入大写的P将线程按照 CPU 使用率排序，并把明显占用CPU的线程ID转换为16进制；</li>\n<li>最后，在jstack命令输出的线程栈中搜索这个线程ID，定位出问题的线程当时的调用栈。</li>\n</ul><p>如果没有条件直接在服务器上运行top命令的话，我们可以用采样的方式定位问题：间隔固定秒数（比如10秒）运行一次jstack命令，采样几次后，对比采样得出哪些线程始终处于运行状态，分析出问题的线程。</p><p>如果现场没有了，我们可以通过排除法来分析。CPU使用高，一般是由下面的因素引起的：</p><ul>\n<li>突发压力。这类问题，我们可以通过应用之前的负载均衡的流量或日志量来确认，诸如Nginx等反向代理都会记录URL，可以依靠代理的Access Log进行细化定位，也可以通过监控观察JVM线程数的情况。压力问题导致CPU使用高的情况下，如果程序的各资源使用没有明显不正常，之后可以通过压测+Profiler（jvisualvm就有这个功能）进一步定位热点方法；如果资源使用不正常，比如产生了几千个线程，就需要考虑调参。</li>\n<li>GC。这种情况，我们可以通过JVM监控GC相关指标、GC Log进行确认。如果确认是GC的压力，那么内存使用也很可能会不正常，需要按照内存问题分析流程做进一步分析。</li>\n<li>程序中死循环逻辑或不正常的处理流程。这类问题，我们可以结合应用日志分析。一般情况下，应用执行过程中都会产生一些日志，可以重点关注日志量异常部分。</li>\n</ul><p>对于内存泄露或OOM的问题，最简单的分析方式，就是堆转储后使用MAT分析。堆转储，包含了堆现场全貌和线程栈信息，一般观察支配树图、直方图就可以马上看到占用大量内存的对象，可以快速定位到内存相关问题。这一点我们会在<a href=\"https://time.geekbang.org/column/article/230534\">第5篇加餐</a>中详细介绍。</p><p>需要注意的是，Java进程对内存的使用不仅仅是堆区，还包括线程使用的内存（线程个数*每一个线程的线程栈）和元数据区。每一个内存区都可能产生OOM，可以结合监控观察线程数、已加载类数量等指标分析。另外，我们需要注意看一下，JVM参数的设置是否有明显不合理的地方，限制了资源使用。</p><p>IO相关的问题，除非是代码问题引起的资源不释放等问题，否则通常都不是由Java进程内部因素引发的。</p><p>网络相关的问题，一般也是由外部因素引起的。对于连通性问题，结合异常信息通常比较容易定位；对于性能或瞬断问题，可以先尝试使用ping等工具简单判断，如果不行再使用tcpdump或Wireshark来分析。</p><h2>分析和定位问题需要注意的九个点</h2><p>有些时候，我们分析和定位问题时，会陷入误区或是找不到方向。遇到这种情况，你可以借鉴下我的九个心得。</p><p><strong>第一，考虑“鸡”和“蛋”的问题。</strong>比如，发现业务逻辑执行很慢且线程数增多的情况时，我们需要考虑两种可能性：</p><ul>\n<li>一是，程序逻辑有问题或外部依赖慢，使得业务逻辑执行慢，在访问量不变的情况下需要更多的线程数来应对。比如，10TPS的并发原先一次请求1s可以执行完成，10个线程可以支撑；现在执行完成需要10s，那就需要100个线程。</li>\n<li>二是，有可能是请求量增大了，使得线程数增多，应用本身的CPU资源不足，再加上上下文切换问题导致处理变慢了。</li>\n</ul><p>出现问题的时候，我们需要结合内部表现和入口流量一起看，确认这里的“慢”到底是根因还是结果。</p><p><strong>第二，考虑通过分类寻找规律。</strong>在定位问题没有头绪的时候，我们可以尝试总结规律。</p><p>比如，我们有10台应用服务器做负载均衡，出问题时可以通过日志分析是否是均匀分布的，还是问题都出现在1台机器。又比如，应用日志一般会记录线程名称，出问题时我们可以分析日志是否集中在某一类线程上。再比如，如果发现应用开启了大量TCP连接，通过netstat我们可以分析出主要集中连接到哪个服务。</p><p>如果能总结出规律，很可能就找到了突破点。</p><p><strong>第三，分析问题需要根据调用拓扑来，不能想当然。</strong>比如，我们看到Nginx返回502错误，一般可以认为是下游服务的问题导致网关无法完成请求转发。对于下游服务，不能想当然就认为是我们的Java程序，比如在拓扑上可能Nginx代理的是Kubernetes的Traefik Ingress，链路是Nginx-&gt;Traefik-&gt;应用，如果一味排查Java程序的健康情况，那么始终不会找到根因。</p><p>又比如，我们虽然使用了Spring Cloud Feign来进行服务调用，出现连接超时也不一定就是服务端的问题，有可能是客户端通过URL来调用服务端，并不是通过Eureka的服务发现实现的客户端负载均衡。换句话说，客户端连接的是Nginx代理而不是直接连接应用，客户端连接服务出现的超时，其实是Nginx代理宕机所致。</p><p><strong>第四，考虑资源限制类问题。</strong>观察各种曲线指标，如果发现曲线慢慢上升然后稳定在一个水平线上，那么一般就是资源达到了限制或瓶颈。</p><p>比如，在观察网络带宽曲线的时候，如果发现带宽上升到120MB左右不动了，那么很可能就是打满了1GB的网卡或传输带宽。又比如，观察到数据库活跃连接数上升到10个就不动了，那么很可能是连接池打满了。观察监控一旦看到任何这样的曲线，都要引起重视。</p><p><strong>第五，考虑资源相互影响。</strong>CPU、内存、IO和网络，这四类资源就像人的五脏六腑，是相辅相成的，一个资源出现了明显的瓶颈，很可能会引起其他资源的连锁反应。</p><p>比如，内存泄露后对象无法回收会造成大量Full GC，此时CPU会大量消耗在GC上从而引起CPU使用增加。又比如，我们经常会把数据缓存在内存队列中进行异步IO处理，网络或磁盘出现问题时，就很可能会引起内存的暴涨。因此，出问题的时候，我们要考虑到这一点，以避免误判。</p><p><strong>第六，排查网络问题要考虑三个方面，到底是客户端问题，还是服务端问题，还是传输问题。</strong>比如，出现数据库访问慢的现象，可能是客户端的原因，连接池不够导致连接获取慢、GC停顿、CPU占满等；也可能是传输环节的问题，包括光纤、防火墙、路由表设置等问题；也可能是真正的服务端问题，需要逐一排查来进行区分。</p><p>服务端慢一般可以看到MySQL出慢日志，传输慢一般可以通过ping来简单定位，排除了这两个可能，并且仅仅是部分客户端出现访问慢的情况，就需要怀疑是客户端本身的问题。对于第三方系统、服务或存储访问出现慢的情况，不能完全假设是服务端的问题。</p><p><strong>第七，快照类工具和趋势类工具需要结合使用。</strong>比如，jstat、top、各种监控曲线是趋势类工具，可以让我们观察各个指标的变化情况，定位大概的问题点；而jstack和分析堆快照的MAT是快照类工具，用于详细分析某一时刻应用程序某一个点的细节。</p><p>一般情况下，我们会先使用趋势类工具来总结规律，再使用快照类工具来分析问题。如果反过来可能就会误判，因为快照类工具反映的只是一个瞬间程序的情况，不能仅仅通过分析单一快照得出结论，如果缺少趋势类工具的帮助，那至少也要提取多个快照来对比。</p><p><strong>第八，不要轻易怀疑监控。</strong>我曾看过一个空难事故的分析，飞行员在空中发现仪表显示飞机所有油箱都处于缺油的状态，他第一时间的怀疑是油表出现故障了，始终不愿意相信是真的缺油，结果飞行不久后引擎就断油熄火了。同样地，在应用出现问题时，我们会查看各种监控系统，但有些时候我们宁愿相信自己的经验，也不相信监控图表的显示。这可能会导致我们完全朝着错误的方向来排查问题。</p><p>如果你真的怀疑是监控系统有问题，可以看一下这套监控系统对于不出问题的应用显示是否正常，如果正常那就应该相信监控而不是自己的经验。</p><p><strong>第九，如果因为监控缺失等原因无法定位到根因的话，相同问题就有再出现的风险</strong>，需要做好三项工作：</p><ul>\n<li>做好日志、监控和快照补漏工作，下次遇到问题时可以定位根因；</li>\n<li>针对问题的症状做好实时报警，确保出现问题后可以第一时间发现；</li>\n<li>考虑做一套热备的方案，出现问题后可以第一时间切换到热备系统快速解决问题，同时又可以保留老系统的现场。</li>\n</ul><h2>重点回顾</h2><p>今天，我和你总结分享了分析生产环境问题的套路。</p><p>第一，分析问题一定是需要依据的，靠猜是猜不出来的，需要提前做好基础监控的建设。监控的话，需要在基础运维层、应用层、业务层等多个层次进行。定位问题的时候，我们同样需要参照多个监控层的指标表现综合分析。</p><p>第二，定位问题要先对原因进行大致分类，比如是内部问题还是外部问题、CPU相关问题还是内存相关问题、仅仅是A接口的问题还是整个应用的问题，然后再去进一步细化探索，一定是从大到小来思考问题；在追查问题遇到瓶颈的时候，我们可以先退出细节，再从大的方面捋一下涉及的点，再重新来看问题。</p><p>第三，分析问题很多时候靠的是经验，很难找到完整的方法论。遇到重大问题的时候，往往也需要根据直觉来第一时间找到最有可能的点，这里甚至有运气成分。我还和你分享了我的九条经验，建议你在平时解决问题的时候多思考、多总结，提炼出更多自己分析问题的套路和拿手工具。</p><p>最后，值得一提的是，定位到问题原因后，我们要做好记录和复盘。每一次故障和问题都是宝贵的资源，复盘不仅仅是记录问题，更重要的是改进。复盘时，我们需要做到以下四点：</p><ul>\n<li>记录完整的时间线、处理措施、上报流程等信息；</li>\n<li>分析问题的根本原因；</li>\n<li>给出短、中、长期改进方案，包括但不限于代码改动、SOP、流程，并记录跟踪每一个方案进行闭环；</li>\n<li>定期组织团队回顾过去的故障。</li>\n</ul><h2>思考与讨论</h2><ol>\n<li>如果你现在打开一个App后发现首页展示了一片空白，那这到底是客户端兼容性的问题，还是服务端的问题呢？如果是服务端的问题，又如何进一步细化定位呢？你有什么分析思路吗？</li>\n<li>对于分析定位问题，你会做哪些监控或是使用哪些工具呢？</li>\n</ol><p>你有没有遇到过什么花了很长时间才定位到的，或是让你印象深刻的问题或事故呢？我是朱晔，欢迎在评论区与我留言分享你的想法，也欢迎你把这篇文章分享给你的朋友或同事，一起交流。</p>","neighbors":{"left":{"article_title":"32 | 加餐2：带你吃透课程中Java 8的那些重要知识点（二）","id":212398},"right":{"article_title":"34 | 加餐4：分析定位Java问题，一定要用好这些工具（一）","id":224816}},"comments":[{"had_liked":false,"id":204387,"user_name":"hellojd","can_delete":false,"product_type":"c1","uid":1341697,"ip_address":"","ucode":"4E51807AE7E472","user_header":"https://static001.geekbang.org/account/avatar/00/14/79/01/e71510dc.jpg","comment_is_top":true,"comment_ctime":1586394614,"is_pvip":false,"replies":[{"id":"76425","content":"1、需要明白，xmx设置的堆只是java进程使用内存的一部分 https:&#47;&#47;stackoverflow.com&#47;questions&#47;53451103&#47;java-using-much-more-memory-than-heap-size-or-size-correctly-docker-memory-limi<br><br>所以你需要通过监控排查到底哪部分内存超限，但是heap的oom dump肯定是需要做的，并且配置-XX:NativeMemoryTracking=detail -XX:+UnlockDiagnosticVMOptions -XX:+PrintNMTStatistics，需要的时候可以通过jcmd &lt;pid&gt; VM.native_memory summary&#47;detail排查<br><br>2、在排查清问题之前可以适当放开k8s的limit，以便你可以观察到内存增长的区域，方便排查问题<br><br>3、可以和运维沟通一下，在oom killed的时候（oom killed应该会让pod状态变为unhealth，这个时候可以触发hook）能否做一下heapdump、jstack等，数据不要保存在容器里<br><br>当然，像Darren的回复，在死之前做几次dump也是可以的","user_name":"作者回复","user_name_real":"朱晔","uid":"1001470","ctime":1586401795,"ip_address":"","comment_id":204387,"utype":1}],"discussion_count":3,"race_medal":0,"score":"9.223372089980801e+18","product_id":100047701,"comment_content":"我们线上k8s管理服务，有时候oom，服务重启由k8s触发的，这将导致设置的生成dump 文件无效。有好的思路吗？","like_count":13,"discussions":[{"author":{"id":1001470,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/fe/d0e25d57.jpg","nickname":"朱晔","note":"","ucode":"0B7F0BADE6AAB8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491161,"discussion_content":"1、需要明白，xmx设置的堆只是java进程使用内存的一部分 https://stackoverflow.com/questions/53451103/java-using-much-more-memory-than-heap-size-or-size-correctly-docker-memory-limi\n\n所以你需要通过监控排查到底哪部分内存超限，但是heap的oom dump肯定是需要做的，并且配置-XX:NativeMemoryTracking=detail -XX:+UnlockDiagnosticVMOptions -XX:+PrintNMTStatistics，需要的时候可以通过jcmd &amp;lt;pid&amp;gt; VM.native_memory summary/detail排查\n\n2、在排查清问题之前可以适当放开k8s的limit，以便你可以观察到内存增长的区域，方便排查问题\n\n3、可以和运维沟通一下，在oom killed的时候（oom killed应该会让pod状态变为unhealth，这个时候可以触发hook）能否做一下heapdump、jstack等，数据不要保存在容器里\n\n当然，像Darren的回复，在死之前做几次dump也是可以的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586401795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558270,"discussion_content":"考虑下使用云盘来保存日志，这样容器重建时不会丢数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648183318,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1266482,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/IIkdC2gohpcibib0AJvSdnJQefAuQYGlLySQOticThpF7Ck9WuDUQLJlgZ7ic13LIFnGBXXbMsSP3nZsbibBN98ZjGA/132","nickname":"batman","note":"","ucode":"73C30ACFC0D612","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383557,"discussion_content":"查下节点的/var/log/messages 看下kill的是哪个进程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626156751,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204430,"user_name":"Darren","can_delete":false,"product_type":"c1","uid":1254968,"ip_address":"","ucode":"CCD2B2C492BE9A","user_header":"https://static001.geekbang.org/account/avatar/00/13/26/38/ef063dc2.jpg","comment_is_top":false,"comment_ctime":1586398779,"is_pvip":true,"replies":[{"id":"76422","content":"感谢分享","user_name":"作者回复","user_name_real":"朱晔","uid":"1001470","ctime":1586400185,"ip_address":"","comment_id":204430,"utype":1}],"discussion_count":1,"race_medal":0,"score":"78895810107","product_id":100047701,"comment_content":"首先先试着回答下@hellojd童鞋的问题，不一定对，仅供参考：k8s应该在cpu或者内存的使用率上做报警，大于90%的时候可以dump和jstack一次，甚至jstat也可以做，然后95%的时候也同样执行一次，<br>甚至98或者99的时候也可以做一次，这样不仅可以保留现场，同时还可以对比。可以更好的排查问题。<br><br>说说遇到的问题吧，前几天刚刚发生的：上线了一个新功能，正常情况下没事，但是只要运行新业务，<br>就发现内存的使用率慢慢升高，随后导致CPU的使用率升高，最后CPU的使用率大于90%，直接出发报警，最后导致服务挂了；<br>在分析挂之前的dump的时候发现，JDBCClientImpl有几十万个，4G的dump文件中，JDBCClientImpl就占用了3G多，在分析jstat的文件，发现full GC特别频繁，但是回收效果并不明显，导致CPU飙升，因为使用的是vertx框架，connection是手动管理；<br>新功能有一个情况是A方法获取connection，但是A方法内部也要调用B方法，就把connection传递给B方法，然后在B方法中关闭链接，但是B方法并不是每次都被调用，有if条件，当时是为了做健壮性判断的，现在导致不进B方法，导致数据库连接不释放，内存使用率飙升，full GC执行多次触发CPU报警。<br><br>还有一个元数据区的问题，JDK8默认的元数据区大小是20.8M，因为class等都放在元数据去，当加载的calss文件多的时候，20.8M是不够的，只要元数据扩容，必定引起full GC，因此建议在启动的时候对于元数据区设定一个合适的大小。<br><br>试着回答下问题：<br>1、APP的问题就不回答了，因为没有APP的经验；<br>2、目前我们的监控主要是（Springboot项目）spring boot actuator+Prometheus+Grafana；<br>spring boot actuator监控jvm内部情况；<br>自定义exporter采集硬件使用情况及容器内部使用情况，统一上报Prometheus，然后Grafana做显示。<br>非Springboot项目，采用的是自研类似spring boot actuator的功能，暴露相关的metric，也是上报Prometheus。","like_count":18,"discussions":[{"author":{"id":1001470,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/fe/d0e25d57.jpg","nickname":"朱晔","note":"","ucode":"0B7F0BADE6AAB8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491178,"discussion_content":"感谢分享","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586400185,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204395,"user_name":"👽","can_delete":false,"product_type":"c1","uid":1274117,"ip_address":"","ucode":"D313AF941B412D","user_header":"https://static001.geekbang.org/account/avatar/00/13/71/05/db554eba.jpg","comment_is_top":false,"comment_ctime":1586395539,"is_pvip":false,"replies":[{"id":"76403","content":"总结的很好","user_name":"作者回复","user_name_real":"朱晔","uid":"1001470","ctime":1586396920,"ip_address":"","comment_id":204395,"utype":1}],"discussion_count":2,"race_medal":0,"score":"44536068499","product_id":100047701,"comment_content":"本文理解：<br><br>应对出错其实主要就是三个阶段。<br><br>1. before：保证留有合理的日志<br><br>2. ing：提供及时的预警以及监控<br><br>3. after：有充足的应对问题的应急预案，版本回滚，服务降级等<br><br>关于个人的排错过程主要是线性的。端到端的一个过程。例如：A调B，B调C，C调D。我的做法是先看A和D，两个业务端是否正常。如果都正常，ABC的顺序挨个排查。检查A是否接收到返回结果，如果没有，则检查B是否接收到返回结果。比较粗暴，但在小型业务系统里，个人感觉处理也还好。<br><br>对于与服务器不一样的问题，通常会模拟一份服务器数据，然后本地做压测模拟服务器流量。保证问题的复现，能在本地复现问题，排查基本上就不是什么难事了。这一思路在 唐扬 老师的《高并发系统设计40问》 中有提到，模拟服务器环境，其实就是尽量把流量，数据库等环境，尽量贴近服务器环境。","like_count":10,"discussions":[{"author":{"id":1001470,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/fe/d0e25d57.jpg","nickname":"朱晔","note":"","ucode":"0B7F0BADE6AAB8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491165,"discussion_content":"总结的很好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586396920,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2378309,"avatar":"https://static001.geekbang.org/account/avatar/00/24/4a/45/e048531a.jpg","nickname":"迪米乌格斯","note":"","ucode":"1D4393746DCBCE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376318,"discussion_content":"受教了, 尤其是模拟服务器这一套, 本地能复现的问题的确都不是问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622079612,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204388,"user_name":"👽","can_delete":false,"product_type":"c1","uid":1274117,"ip_address":"","ucode":"D313AF941B412D","user_header":"https://static001.geekbang.org/account/avatar/00/13/71/05/db554eba.jpg","comment_is_top":false,"comment_ctime":1586394882,"is_pvip":false,"replies":[{"id":"76402","content":"：）","user_name":"作者回复","user_name_real":"朱晔","uid":"1001470","ctime":1586396876,"ip_address":"","comment_id":204388,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35946133250","product_id":100047701,"comment_content":"真不敢相信，如此高质量的内容，竟然只是选学的不定期加餐！！！","like_count":8,"discussions":[{"author":{"id":1001470,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/fe/d0e25d57.jpg","nickname":"朱晔","note":"","ucode":"0B7F0BADE6AAB8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491162,"discussion_content":"：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586396876,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204575,"user_name":"yinchi_516564","can_delete":false,"product_type":"c1","uid":1903751,"ip_address":"","ucode":"52EBE5A3B3A8B5","user_header":"https://static001.geekbang.org/account/avatar/00/1d/0c/87/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1586423572,"is_pvip":false,"replies":[{"id":"76481","content":"👍🏻","user_name":"作者回复","user_name_real":"朱晔","uid":"1001470","ctime":1586428656,"ip_address":"","comment_id":204575,"utype":1}],"discussion_count":2,"race_medal":0,"score":"27356227348","product_id":100047701,"comment_content":"分享几个遇到的运维犯的错误：<br>1、现象：同一个请求有时候能查出结果，有时候返回为空<br>   原因：经排查是运维把应急时候用的服务器(直接返回200)误添加在了nginx代理中<br>2、现象：同一笔请求有时候很快，有时候超时60s<br>   原因：运维路由规则配错导致 到mongodb 的去程和回程路径不一导致原来的mongo链接失效，client在默认情况下不会主动收回这些链接，当再次读写时就出现异常<br>3、现象：同一笔请求有时候慢，有时候快<br>   原因：容器部署的服务有两个api实例假死，导致请求回源，拉低了接口整体响应的速度<br><br>目前使用到的工具<br>Grafana监控 主要做api接口监控<br>Kibana监控 主要做日志监控 <br>听云Server 主要做服务器资源监控<br>还会用到arthas及MAT分析工具<br><br>最后，听老师的课程，涨了不少知识，日后写代码、分析问题有点点底气了，感谢老师无私的分享！","like_count":6,"discussions":[{"author":{"id":1001470,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/fe/d0e25d57.jpg","nickname":"朱晔","note":"","ucode":"0B7F0BADE6AAB8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491218,"discussion_content":"👍🏻","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586428656,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2671015,"avatar":"https://static001.geekbang.org/account/avatar/00/28/c1/a7/67c8530d.jpg","nickname":"Z. w","note":"","ucode":"E3066ADE516B6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533273,"discussion_content":"请求回源是什么场景？之前好像遇到过一次(运维同事发现的)，但是不理解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637829931,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":207145,"user_name":"技术骨干","can_delete":false,"product_type":"c1","uid":1098720,"ip_address":"","ucode":"8FCF8DE6D29201","user_header":"https://static001.geekbang.org/account/avatar/00/10/c3/e0/3db22579.jpg","comment_is_top":false,"comment_ctime":1587016060,"is_pvip":false,"replies":[{"id":"77388","content":"后面有加餐会带你详细分析","user_name":"作者回复","user_name_real":"朱晔","uid":"1001470","ctime":1587016882,"ip_address":"","comment_id":207145,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18766885244","product_id":100047701,"comment_content":"内存的问题，搁以前我基本分析不出来","like_count":4,"discussions":[{"author":{"id":1001470,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/fe/d0e25d57.jpg","nickname":"朱晔","note":"","ucode":"0B7F0BADE6AAB8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492023,"discussion_content":"后面有加餐会带你详细分析","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587016882,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204399,"user_name":"👽","can_delete":false,"product_type":"c1","uid":1274117,"ip_address":"","ucode":"D313AF941B412D","user_header":"https://static001.geekbang.org/account/avatar/00/13/71/05/db554eba.jpg","comment_is_top":false,"comment_ctime":1586396193,"is_pvip":false,"replies":[{"id":"76404","content":"👍🏻","user_name":"作者回复","user_name_real":"朱晔","uid":"1001470","ctime":1586397198,"ip_address":"","comment_id":204399,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18766265377","product_id":100047701,"comment_content":"如果你现在打开一个 App 后发现首页展示了一片空白，那这到底是客户端兼容性的问题，还是服务端的问题呢？如果是服务端的问题，又如何进一步细化定位呢？你有什么分析思路吗？<br><br>首先，切换设备，或者模拟请求，查看服务是否正常访问。以排除客户端问题。<br><br>确保服务端服务器状态，1确保正在运行，2资源占用处于正常状态，没有出现满载，3服务器可以被正常访问，排除网络问题。随后，备份即时的所有可能有需要的日志，条件允许尝试重启服务或者回滚，保证线上服务正常以及客户体验。时候根据遗留日志尝试进行排查。如果依然无果，模拟服务器环境和流量，进行Debug。<br><br><br><br>对于分析定位问题，你会做哪些监控或是使用哪些工具呢？<br><br>无论监控还是定位，对个人来说：<br><br>首当其冲：Top，检查内存CPU占用情况等等。定期不定期检查一下服务正常运行，并确认资源占用情况。<br><br>对于请求，个人的监控是，记录所有慢请求（处理时间过长的请求）。针对慢请求的情况分析，比如说，一个理应极快的请求出现了慢请求的情况就需要去分析，缓存问题，网络问题等等。<br><br>曾经的项目，会监控服务状态，服务如果宕机了会给相应负责人发送短信通知排查。","like_count":4,"discussions":[{"author":{"id":1001470,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/fe/d0e25d57.jpg","nickname":"朱晔","note":"","ucode":"0B7F0BADE6AAB8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491167,"discussion_content":"👍🏻","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586397198,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204494,"user_name":"Husiun","can_delete":false,"product_type":"c1","uid":1448664,"ip_address":"","ucode":"F783484743BFE4","user_header":"https://static001.geekbang.org/account/avatar/00/16/1a/d8/9ae1bdb9.jpg","comment_is_top":false,"comment_ctime":1586408006,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10176342598","product_id":100047701,"comment_content":"高质量内容，期待老师的更新；个人在实际应用中还主要是top定位，课后问题1个人没有相关经验，我的思路是先定位客户端问题再一步步排查到服务端，之后再top定位具体服务问题","like_count":2},{"had_liked":false,"id":209803,"user_name":"Demon.Lee","can_delete":false,"product_type":"c1","uid":1052859,"ip_address":"","ucode":"7F0E5493A8E345","user_header":"https://static001.geekbang.org/account/avatar/00/10/10/bb/f1061601.jpg","comment_is_top":false,"comment_ctime":1587617814,"is_pvip":false,"replies":[{"id":"78245","content":"👍🏻","user_name":"作者回复","user_name_real":"朱晔","uid":"1001470","ctime":1587621907,"ip_address":"","comment_id":209803,"utype":1}],"discussion_count":1,"race_medal":1,"score":"5882585110","product_id":100047701,"comment_content":"一是，程序逻辑有问题或外部依赖慢，使得业务逻辑执行慢，在访问量不变的情况下需要更多的线程数来应对。比如，10TPS 的并发原先一次请求 1s 可以执行完成，10 个线程可以支撑；现在执行完成需要 10s，那就需要 100 个线程。<br>-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br>每秒都来10请求，10秒就是100个请求，故需要100个线程，终于想明白了，我是真的好笨😭。<br>老师的课破10000不是事吧，被低估了，我去部落吆喝吆喝。","like_count":1,"discussions":[{"author":{"id":1001470,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/fe/d0e25d57.jpg","nickname":"朱晔","note":"","ucode":"0B7F0BADE6AAB8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492869,"discussion_content":"👍🏻","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587621907,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208001,"user_name":"Geek_3b1096","can_delete":false,"product_type":"c1","uid":1549364,"ip_address":"","ucode":"A6BD92B79B3632","user_header":"","comment_is_top":false,"comment_ctime":1587240680,"is_pvip":false,"replies":[{"id":"77641","content":"欢迎转发","user_name":"作者回复","user_name_real":"朱晔","uid":"1001470","ctime":1587257195,"ip_address":"","comment_id":208001,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5882207976","product_id":100047701,"comment_content":"非常实用谢谢老师","like_count":1,"discussions":[{"author":{"id":1001470,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/fe/d0e25d57.jpg","nickname":"朱晔","note":"","ucode":"0B7F0BADE6AAB8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492312,"discussion_content":"欢迎转发","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587257195,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":205510,"user_name":"hanazawakana","can_delete":false,"product_type":"c1","uid":1251721,"ip_address":"","ucode":"E0F6FACBFE7D15","user_header":"https://static001.geekbang.org/account/avatar/00/13/19/89/20488013.jpg","comment_is_top":false,"comment_ctime":1586658839,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5881626135","product_id":100047701,"comment_content":"问题1，首先看下客户端的崩溃监控，再看下是不是只有这个机器有问题，如果不同机型也有问题，再看下是不是某个机器底层操作系统的问题，比如Android O，再看下是不是某个厂商操作系统的问题，如果是普遍存在的，考虑服务端问题，看下对应接口的日志有没有报错信息，如果没有日志，再分析下是不是nginx或者网络的问题","like_count":1},{"had_liked":false,"id":351920,"user_name":"二饼","can_delete":false,"product_type":"c1","uid":2415448,"ip_address":"","ucode":"48120565D135F7","user_header":"https://static001.geekbang.org/account/avatar/00/24/db/58/a7a0a85b.jpg","comment_is_top":false,"comment_ctime":1658295482,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1658295482","product_id":100047701,"comment_content":"感谢老师分享，好多干货！尝试在工作中多试试。","like_count":0},{"had_liked":false,"id":259376,"user_name":"Geek_a07e7d","can_delete":false,"product_type":"c1","uid":2274227,"ip_address":"","ucode":"1AFDCC8D021983","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJnib6n8RxpAJd9xFeoAAYZwbkM009k2OZoniaAJRSC1BLQMsZuByicEBSaZPx3K1VnOeSia3m1lLsuicg/132","comment_is_top":false,"comment_ctime":1604715398,"is_pvip":false,"replies":[{"id":"94342","content":"这是一样的 进入docker环境后执行命令 pid是1","user_name":"作者回复","user_name_real":"朱晔","uid":"1001470","ctime":1604792895,"ip_address":"","comment_id":259376,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1604715398","product_id":100047701,"comment_content":"老师，请教个问题，k8s部署的服务怎样通过jvm自带命令查看堆栈信息","like_count":0,"discussions":[{"author":{"id":1001470,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/fe/d0e25d57.jpg","nickname":"朱晔","note":"","ucode":"0B7F0BADE6AAB8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":508920,"discussion_content":"这是一样的 进入docker环境后执行命令 pid是1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604792895,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":241477,"user_name":"荆仙","can_delete":false,"product_type":"c1","uid":1064734,"ip_address":"","ucode":"8BF9D620BCA5DD","user_header":"https://static001.geekbang.org/account/avatar/00/10/3f/1e/8e184acb.jpg","comment_is_top":false,"comment_ctime":1597306546,"is_pvip":true,"replies":[{"id":"89175","content":"不错","user_name":"作者回复","user_name_real":"朱晔","uid":"1001470","ctime":1597315255,"ip_address":"","comment_id":241477,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1597306546","product_id":100047701,"comment_content":"一般如果是兼容性问题IOS或者安卓只会在其中一端出现问题，所以可以分别使用iPhone和安卓机测试。如果都有问题，大概率是服务端的问题。入股是服务端问题，可以先抓包或者通过日志的方式获取服务端的响应数据，看响应数据有何异常，然后再结合日志排查问题。","like_count":0,"discussions":[{"author":{"id":1001470,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/fe/d0e25d57.jpg","nickname":"朱晔","note":"","ucode":"0B7F0BADE6AAB8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503748,"discussion_content":"不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597315255,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":228216,"user_name":"track6688","can_delete":false,"product_type":"c1","uid":1088040,"ip_address":"","ucode":"0A9E893F8FD379","user_header":"https://static001.geekbang.org/account/avatar/00/10/9a/28/03613c22.jpg","comment_is_top":false,"comment_ctime":1592616159,"is_pvip":false,"replies":[{"id":"84178","content":"加餐6","user_name":"作者回复","user_name_real":"朱晔","uid":"1001470","ctime":1592640402,"ip_address":"","comment_id":228216,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1592616159","product_id":100047701,"comment_content":"我想请教老师，是如何成长到这个地步的？哈哈哈","like_count":0,"discussions":[{"author":{"id":1001470,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/fe/d0e25d57.jpg","nickname":"朱晔","note":"","ucode":"0B7F0BADE6AAB8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498960,"discussion_content":"加餐6","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592640402,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":223570,"user_name":"岳宜波","can_delete":false,"product_type":"c1","uid":1975581,"ip_address":"","ucode":"5043CA250FDCB1","user_header":"http://thirdwx.qlogo.cn/mmopen/2kpMNDYsSfCnhAYmvAsNcYKyNLUJG5iax9BKgXAJzxypEJGRVwhibjZ53S5icgEDibn8uqrqwsKcxzEXfRRUXTdqjA/132","comment_is_top":false,"comment_ctime":1591116493,"is_pvip":false,"replies":[{"id":"82351","content":"不错","user_name":"作者回复","user_name_real":"朱晔","uid":"1001470","ctime":1591141586,"ip_address":"","comment_id":223570,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1591116493","product_id":100047701,"comment_content":"我们各个环境都会开启一个调试实例，只有添加固定的cookie的时候请求才会打到调试实例上，可以在调试实例上远程调试，不影响其他用户使用","like_count":0,"discussions":[{"author":{"id":1001470,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/fe/d0e25d57.jpg","nickname":"朱晔","note":"","ucode":"0B7F0BADE6AAB8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497169,"discussion_content":"不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591141586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":211033,"user_name":"Asha","can_delete":false,"product_type":"c1","uid":1796527,"ip_address":"","ucode":"69F227707A9EDD","user_header":"https://static001.geekbang.org/account/avatar/00/1b/69/af/ceb4450c.jpg","comment_is_top":false,"comment_ctime":1587884227,"is_pvip":false,"replies":[{"id":"78502","content":"这是文中作者的排查思路 你不一定需要按照这个思路来 tomcat的工作线程不会回收 引用的资源不会释放","user_name":"作者回复","user_name_real":"朱晔","uid":"1001470","ctime":1587892999,"ip_address":"","comment_id":211033,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1587884227","product_id":100047701,"comment_content":"老师 非常感谢你提供的关于直接存储差问题的文章 启发了很多。有两个问题，第一个是为什么我们已经知道是直接内存的问题了，还需要先去看堆内存呢 第二个是为什么在thread local中引用的直接内存在gc的时候也不会被释放 多谢","like_count":0,"discussions":[{"author":{"id":1001470,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/fe/d0e25d57.jpg","nickname":"朱晔","note":"","ucode":"0B7F0BADE6AAB8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493174,"discussion_content":"这是文中作者的排查思路 你不一定需要按照这个思路来 tomcat的工作线程不会回收 引用的资源不会释放","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587892999,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":210977,"user_name":"Asha","can_delete":false,"product_type":"c1","uid":1796527,"ip_address":"","ucode":"69F227707A9EDD","user_header":"https://static001.geekbang.org/account/avatar/00/1b/69/af/ceb4450c.jpg","comment_is_top":false,"comment_ctime":1587872842,"is_pvip":false,"replies":[{"id":"78480","content":"排查方式参考 https:&#47;&#47;coldwalker.com&#47;2018&#47;12&#47;&#47;troubleshooter_directbytebuffer_memory_issue&#47;","user_name":"作者回复","user_name_real":"朱晔","uid":"1001470","ctime":1587876046,"ip_address":"","comment_id":210977,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1587872842","product_id":100047701,"comment_content":"老师及同学们 我这发现了一个问题，背景是这样的 小伙伴每天定时redis缓存中的数据清空，然后重新加载。然后过一个月左右就会抛oom但是是direct memory out of memory. 之前猜测是不是redis客户端从服务端拿数据的时候 连接数太多了 后来看redis的客户端是有一个连接池管理的。烦请老师和同学们提供好的思路","like_count":0,"discussions":[{"author":{"id":1001470,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/fe/d0e25d57.jpg","nickname":"朱晔","note":"","ucode":"0B7F0BADE6AAB8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493163,"discussion_content":"排查方式参考 https://coldwalker.com/2018/12//troubleshooter_directbytebuffer_memory_issue/","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587876046,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1575056,"avatar":"https://static001.geekbang.org/account/avatar/00/18/08/90/ce429e02.jpg","nickname":"sunshine","note":"","ucode":"0CF3A7F542FA9D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394318,"discussion_content":"网址打不开呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631840716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1796527,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/69/af/ceb4450c.jpg","nickname":"Asha","note":"","ucode":"69F227707A9EDD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":248566,"discussion_content":"l老师 非常感谢 看了这篇文章打开了思路 有个问题 为什么已经知道是直接内存了 还需要再去查堆内存是不是有问题呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587879245,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}