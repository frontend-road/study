{"id":318740,"title":"08 | 该怎么选择初始化向量？","content":"<p>你好，我是范学雷。</p><p>上一讲，我们讨论了对称密钥的常见算法，还讲到了序列算法和分组算法。还记得吗？当时，我建议你优先使用序列算法，因为它有着良好的性能和皮实的用法。另外，我还向你推荐了AES-256和AES-128。</p><p>但是，由于我们还没有考虑数据分组等因素的影响，所以这个建议的实用性还有待商榷。那么，这一讲，我们就来看看对于分组算法，到底有哪些麻烦？我们又该怎么避免这些麻烦？</p><p>其实，这是一个解决起来很复杂的问题。不过，今天我们可以先对问题建立一个初步的认知。</p><p>要知道分组算法有哪些麻烦，就要先知道该怎么计算分组算法。</p><h2>分组算法怎么计算？</h2><p>我们在上一讲说过，分组算法要对输入数据进行分组，然后按数据分组来进行运算。一个典型的分组算法，一般要由三个部分组成，数据分组、分组运算和链接模式。</p><p><img src=\"https://static001.geekbang.org/resource/image/55/2f/55e1d4yy57f6c0afbe91a45ed792192f.jpeg?wh=1920*1080\" alt=\"\"></p><p>我们先来看看数据分组是怎么一回事。</p><p>数据分组在加密时，会把明文的输入数据分割成加密函数能够处理的数据块。比如，AES算法能够处理的数据块大小是128位，那么，输入数据就要被分割成一个或者多个128位的小数据块。</p><p>如果不能整分，就要把最后一个分组补齐成128位。这些分组数据的运算结果，组合起来就是<strong>密文数据</strong>。解密时，执行相反的操作，把补齐数据去掉，再把数据分组组合成完整的明文数据。</p><!-- [[[read_end]]] --><p><img src=\"https://static001.geekbang.org/resource/image/3e/e4/3eee1786e229e6fb3867931cb43010e4.jpeg?wh=1920*1080\" alt=\"\"></p><p>理解了数据分组，我们再来看分组运算和链接模式。</p><p><strong>分组运算</strong>，意思就是把每一个明文数据分组通过加密函数，转换成密文数据分组。而<strong>链接模式</strong>，指的是如何把上一个分组运算和下一个分组运算联系起来。</p><p>有一点需要说，第一个分组运算并没有上一个分组运算可以使用，这时候，我们就需要引入一个初始化的数据，来承担“上一个分组运算”向下链接的功能。这个初始化的数据，我们一般称为<strong>初始化向量</strong>。</p><p>那你有没有想过，我们为什么要把上一个分组运算和下一个分组运算联系起来呢？其实，我们在前面讨论过单向散列函数的链接模式，我们说它是为了确保雪崩效应能够延续。</p><p>在分组运算里，链接模式也承担类似的功能：</p><ul>\n<li>不同的明文数据，它的密文数据应该是完全不同的，即使明文数据里包含相同的数据分组；</li>\n<li>相同的明文数据，每一次的加密运算，它的密文数据也应该是完全不同的。</li>\n</ul><h2>什么影响算法的安全性？</h2><p>现在，我们已经梳理了一遍分组算法的运算过程了。这样，我们就能够在其中找到影响分组算法的关键因素。这些因素，也就是影响分组算法安全性的因素。</p><p>在数据分组里，把输入数据分割成固定大小的数据块这一部分，除了数据补齐之外，没有什么变数。所以，我们可以发现，数据补齐方案才是影响分组算法的关键部分。</p><p>这样，我们就不难找出下面的五个因素：</p><ul>\n<li>加密函数和解密函数；</li>\n<li>密钥；</li>\n<li>初始化向量；</li>\n<li>链接模式；</li>\n<li>数据补齐方案。</li>\n</ul><p>通过上一讲的讨论，我想我们都了解加密函数、解密函数和密钥在分组算法中的重要地位了。如果加密函数不安全，整个分组算法的安全性也就坍塌了；如果密钥没有做好保密或者密钥质量不好，数据的保密性也就无从谈起。</p><p>比如说，我们经常看到宣传，说什么采用了AES-256算法，安全强度有保障；说什么只有造一台时光机，穿越回历史现场，才能破解一个应用。这些说法，有它的道理，但是仅仅依据这些信息，还不能确认一个算法的使用和运算是不是安全的。</p><p>另外三个因素，就是经常被我们忽视的因素。那么，它们是怎么影响算法安全性的呢？</p><h2>初始化向量怎么选？</h2><p>我们今天先讨论第一个影响的因素：初始化向量。</p><p>我们要想了解初始化向量对算法安全性的影响，就要先看看第一个数据块是怎么计算的，第一个数据块和初始化向量关系紧密。第一个数据块的计算，它的输入信息包括：</p><ul>\n<li>密钥；</li>\n<li>初始化向量；</li>\n<li>第一个明文数据分组。</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/00/40/00406ae41ab45bd6bf395d32e7133540.jpeg?wh=1920*1080\" alt=\"\"></p><p>如果我们能够确定这些输入信息，那么输出的第一个密文数据分组也就确定了。</p><p>一般来说，一个对称密钥要使用多次，对多个明文数据进行加密运算。如果存在第一个明文数据分组相同的两段数据，并且使用了相同的初始化向量，那么第一个密文数据分组就是相同的。</p><p>也就是说，相同的输入，就会有相同的输出。</p><p>对于大部分算法而言，分组数据块都比较小，比如，AES算法的分组数据块大小是16个字节。这样，在实际应用中，就比较容易构造相同的数据块，或者存在相同的数据块。</p><p>在现实的应用里，也存在大量的、重复的、已知的数据，比如HTTP协议的头部数据。如果我们需要保密的数据恰好重复了一段已知的明文，攻击者就可以根据密文数据是不是相同，来猜测、寻找明文数据。这样的话，就破坏了数据的保密性。</p><p>但是，我们在使用加密运算时，大部分时候都没有办法确定明文数据会不会有重复数据，以及重复数据会不会是一次加密运算的第一个数据块。所以，如果不想暴露重复数据的机密性，我们只能在初始化向量这一个因素上想办法。因为，密钥是相同的，如果第一个明文数据分组也是相同的，只剩下初始化向量这一个输入信息可以控制了。</p><p><strong>在一个对称密钥的生命周期里，初始化向量不能重复，这是使用对称密钥算法的第一个要求。</strong></p><p>这个要求看似简单，其实做起来并不容易。一个单纯的加密算法的实现，一般没有办法记住一个初始化向量有没有用过。这就需要应用程序的开发者自己想办法，常见的办法有两种：</p><ul>\n<li>使用安全强度足够的随机数作为初始化向量；</li>\n<li>使用序列数，下一次的初始化向量的数值，比上一次的数字自动加一或者自动减一。</li>\n</ul><p>不过，这两种初始化向量的选择，还是各有各的问题，我们需要注意。</p><p>第一种，随机数的获取，有时候不是一个有效率的运算。如果随机数发生器选择不当，还会造成加密运算的阻塞，进一步降低加密运算的效率。另外，由于解密需要相同的初始向量，如何在加密端和解密端同步初始化向量，也是一个需要考虑的问题。</p><p>一个常见的解决办法，就是把初始化向量和加密数据一起发送给对方。</p><p>第二种的话，使用序列数，需要保持序列数的状态，还需要加密运算的同步。不过，序列数状态的保持和同步，除了效率之外，还会衍生出其他的待解决的问题，比如分布式计算环境下的序列数同步问题，比如攻击者会知道每一个初始化向量的问题。</p><p>如果你能够看到的问题无法解决，可以考虑使用随机数作为初始化向量。</p><p>你看，初始化向量选择充满了复杂性，一般的密钥算法库都不会提供缺省的、自动的初始化向量。<strong>应用程序需要根据使用场景来制定适当的初始化向量选择方案，这是一个容易忽略的要求</strong>。</p><h2>一个密钥能用多少次？</h2><p>在这一讲的最后，我们来讨论一个话题，一个密钥有没有使用次数的限制呢？为什么要在这一讲讨论这个话题呢？因为，我想，这是一个恰当的时机。</p><p>前面，我们讨论了，在一个对称密钥的生命周期里，初始化向量不能重复。也就是说，对于一个算法来说，初始化向量的长度是固定的。长度固定，也就意味着初始化向量的个数是有限制的。</p><p>比如，一个128位的初始化向量，最多有2^ 128个不重复的数值。进一步的说，对于这个算法，一个密钥最多只能使用2^ 128次。的确看起来，2^128是一个巨大的数字，一般的应用程序也没有什么机会使用这么多次加密运算。</p><p>当然，还有其他因素限制密钥的使用次数。很多限制因素的叠加，就会使得密钥使用的限制数远远低于初始化向量的许可数目。所以，<strong>我们心里一定要知道，密钥是有使用次数限制的，并且要有检查密钥使用次数限制的习惯</strong>。</p><p>这是一个不太引人注意的安全陷阱，也是近几年才受到广泛关注的算法安全问题。我们后面还会讨论其他的限制条件，并且我会罗列出来不同算法的使用限制。</p><p>之后的两讲，我们就接着今天的话题，看看除了初始化向量之外，链接模式和数据补齐方案是怎么影响对称密钥算法的安全性的？这两个问题的讨论，需要较大篇幅，不过我会带你一起分析。</p><h2>Take Away（今日收获）</h2><p>今天，通过解构分组算法的运算，我们讨论了影响分组算法安全性的五个关键因素。然后讨论了选择初始化向量应该注意的陷阱，也就是说，在使用对称密钥加密时，初始化向量不能重复。</p><p>最后，我们还讨论了一个不太容易受关注的问题，就是密钥是有使用次数限制的。一般的应用程序，密钥使用次数限制不是问题，但是如果你要设计一个广泛使用的协议，还是要考虑密钥这个限制的。密钥使用次数用完之前，一定要更新密钥。</p><p>今天，我们应该理解、记住：</p><ul>\n<li>分组算法的处理过程；</li>\n<li>影响对称密钥算法安全性的五个关键因素；</li>\n<li>在一个对称密钥的生命周期里，初始化向量不能重复。</li>\n</ul><h2>思考题</h2><p>今天的思考题，也是一个动手题。</p><p>在你正在开发的项目中，或者你关注的开放源代码项目中，试着搜索一下初始化向量的使用。看一看对于同一个对称密钥，初始化向量会不会重复，有没有可能重复。如果一个对称密钥使用了重复的初始化向量，有没有潜在的安全风险？你有没有什么建议？</p><p>欢迎在留言区留言，记录、讨论你的发现和建议。</p><p>好的，今天就这样，我们下次再聊。</p>","comments":[{"had_liked":false,"id":267332,"user_name":"彩色的沙漠","can_delete":false,"product_type":"c1","uid":1116183,"ip_address":"","ucode":"19A0975A5E69EA","user_header":"https://static001.geekbang.org/account/avatar/00/11/08/17/e63e50f3.jpg","comment_is_top":false,"comment_ctime":1607681408,"is_pvip":true,"replies":[{"id":"97062","content":"由于初始化向量不需要保密，可以使用明文传输的初始化向量。每一次加密，都附上初始化向量。传输的数据是：初始化向量 + 密文。以前的TLS就是这么做的。 不过，现在CBC也要快退役了，建议换到Chacha20&#47;Poly1305或者AES-GCM。这两个模式我们稍后会讲到的。","user_name":"作者回复","comment_id":267332,"uid":"1111315","ip_address":"","utype":1,"ctime":1607705365,"user_name_real":"范学雷"}],"discussion_count":1,"race_medal":0,"score":"23082517888","product_id":100064801,"comment_content":"前段时间把项目中对称加密的链接模式由ECB改为了CBC模式。但是向量是固定的前后端约定好的。如果使用不重复的初始化向量又存在发送给后端的保密性问题","like_count":5,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511600,"discussion_content":"由于初始化向量不需要保密，可以使用明文传输的初始化向量。每一次加密，都附上初始化向量。传输的数据是：初始化向量 + 密文。以前的TLS就是这么做的。 不过，现在CBC也要快退役了，建议换到Chacha20/Poly1305或者AES-GCM。这两个模式我们稍后会讲到的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607705365,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":267526,"user_name":"麋鹿在泛舟","can_delete":false,"product_type":"c1","uid":1121975,"ip_address":"","ucode":"1379CADA08688E","user_header":"https://static001.geekbang.org/account/avatar/00/11/1e/b7/b20ab184.jpg","comment_is_top":false,"comment_ctime":1607786521,"is_pvip":true,"replies":[{"id":"97177","content":"#1 就是解决同步问题的办法之一。但是，无论是数据库还是redis，都降低了效率。<br><br>#2，这是一个好问题。我写的时候，也想过，这一句是不是会引来讨论。讨论真的就来了。我们后面会讲对加密算法的攻击。重复的初始化向量，一般来说是没有问题的；但是如果没有注意到这些攻击，重复的和已知的初始化向量，会让攻击变得更容易得手。","user_name":"作者回复","comment_id":267526,"uid":"1111315","ip_address":"","utype":1,"ctime":1607838502,"user_name_real":"范学雷"}],"discussion_count":2,"race_medal":0,"score":"10197721113","product_id":100064801,"comment_content":"使用第二种方案即序列数做为初始化向量，文中提到会遇到分布式序列同步问题， 和攻击者知道序列数的风险。 可以详细解释下吗， 我理解:<br>1. 分布式系统下的全局ID应该都有自己成熟的方案，或者是使用数据库自增 或者 redis生成，应该不存在同步问题了吧<br>2. 初始化向量本身就是非敏感信息，攻击者知道这些序列值 也不会引入什么风险吧?","like_count":2,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511670,"discussion_content":"#1 就是解决同步问题的办法之一。但是，无论是数据库还是redis，都降低了效率。\n\n#2，这是一个好问题。我写的时候，也想过，这一句是不是会引来讨论。讨论真的就来了。我们后面会讲对加密算法的攻击。重复的初始化向量，一般来说是没有问题的；但是如果没有注意到这些攻击，重复的和已知的初始化向量，会让攻击变得更容易得手。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607838502,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1121975,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1e/b7/b20ab184.jpg","nickname":"麋鹿在泛舟","note":"","ucode":"1379CADA08688E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":334504,"discussion_content":"多谢，期待后面的讲解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607868747,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":307843,"user_name":"Reol","can_delete":false,"product_type":"c1","uid":2071180,"ip_address":"","ucode":"D79C96E9912671","user_header":"https://static001.geekbang.org/account/avatar/00/1f/9a/8c/aeadf040.jpg","comment_is_top":false,"comment_ctime":1629277762,"is_pvip":false,"replies":[{"id":"111627","content":"1）是的，这两种方法是为了让密码不重复。一般来说，攻击者知道IV并不应该有密码学上的风险。文中的这句话，我表达的有失误。<br><br>2）如果能直接破解出明文，那就意味着加密算法本身是可以逆运算的。一般情况下，我们都假设加密算法本身的强度是足够的。","user_name":"作者回复","comment_id":307843,"uid":"1111315","ip_address":"","utype":1,"ctime":1629477023,"user_name_real":"范学雷"}],"discussion_count":1,"race_medal":0,"score":"5924245058","product_id":100064801,"comment_content":"老师，对于初始化向量IV使用序列数的方法，文中说：使用序列数的一个问题是攻击者能较容易知道每一个IV。<br><br>1）除了序列数，就算采取随机数的方法生成IV，也是明文发送IV+密文数据，攻击者也能知道每个IV吧。IV可公开的情况下，被攻击者知道了全部IV又有什么风险呢？这两个方法应该只是为了让密文不重复？<br><br>2）如果同一个密钥下，采用相同的IV生成了相同密文。攻击者是只能对比猜测明文，而不能直接破解出明文吗？<br>","like_count":1,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525312,"discussion_content":"1）是的，这两种方法是为了让密码不重复。一般来说，攻击者知道IV并不应该有密码学上的风险。文中的这句话，我表达的有失误。\n\n2）如果能直接破解出明文，那就意味着加密算法本身是可以逆运算的。一般情况下，我们都假设加密算法本身的强度是足够的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629477023,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":267525,"user_name":"麋鹿在泛舟","can_delete":false,"product_type":"c1","uid":1121975,"ip_address":"","ucode":"1379CADA08688E","user_header":"https://static001.geekbang.org/account/avatar/00/11/1e/b7/b20ab184.jpg","comment_is_top":false,"comment_ctime":1607786141,"is_pvip":true,"replies":[{"id":"97178","content":"嗯，有的时候为了兼容性，要牺牲很多。如果只是本地存储，可能问题还不大；如果要走网络传递，可能会有安全问题。这个还是进一步要分析数据流的场景，才能确定是不是真的有问题。","user_name":"作者回复","comment_id":267525,"uid":"1111315","ip_address":"","utype":1,"ctime":1607838809,"user_name_real":"范学雷"}],"discussion_count":1,"race_medal":0,"score":"5902753437","product_id":100064801,"comment_content":"项目中加密使用安全随机数函数生成初始化向量，解密处有点不一样，为了兼容历史版本(历史版本使用了固定初始化向量)，走了两套分支，即如果是老版本加密的，则使用固定向量解密，否则则使用和密文一起存储的随机初始化向量解密。","like_count":1,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511669,"discussion_content":"嗯，有的时候为了兼容性，要牺牲很多。如果只是本地存储，可能问题还不大；如果要走网络传递，可能会有安全问题。这个还是进一步要分析数据流的场景，才能确定是不是真的有问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607838809,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":349903,"user_name":"Geek_d68bf9","can_delete":false,"product_type":"c1","uid":2173090,"ip_address":"","ucode":"D88E117B6A18B3","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIstR9CfEytdeJyicODHOe6cYGt4icg8cNVam9mE0s7picUsInZvwvia1hEtKsyHETfic0jrAddjt0wXdA/132","comment_is_top":false,"comment_ctime":1656420561,"is_pvip":true,"replies":[{"id":"127431","content":"大概率这个项目的安全性是没有保证的。看看“初始化向量怎么选？”这一小节对你们有没有帮助，或者看看安全协议的设计，比如TLS。","user_name":"作者回复","comment_id":349903,"uid":"1111315","ip_address":"","utype":1,"ctime":1656827594,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1656420561","product_id":100064801,"comment_content":"我们项目就是向量固定的，如果动态向量的话，怎么做双向传输加密？","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578492,"discussion_content":"大概率这个项目的安全性是没有保证的。看看“初始化向量怎么选？”这一小节对你们有没有帮助，或者看看安全协议的设计，比如TLS。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656827594,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":309727,"user_name":"Geek_828b39","can_delete":false,"product_type":"c1","uid":2729802,"ip_address":"","ucode":"DE2A5F215A3C1E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/D62JX0VEX0yhnWxgbiaXMUnEqdsVxc8JMxUBibVicbLSZ6zia606EG0zI9oosiceHsdiavDZGUyHzcvsEExFGxwP4mDg/132","comment_is_top":false,"comment_ctime":1630314670,"is_pvip":false,"replies":[{"id":"112248","content":"有没有明白初始化向量不能重复的问题？","user_name":"作者回复","comment_id":309727,"uid":"1111315","ip_address":"","utype":1,"ctime":1630381649,"user_name_real":"范学雷"}],"discussion_count":2,"race_medal":0,"score":"1630314670","product_id":100064801,"comment_content":"老师，没有明白密钥还有使用次数限制的问题。","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525984,"discussion_content":"有没有明白初始化向量不能重复的问题？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630381649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2729802,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/D62JX0VEX0yhnWxgbiaXMUnEqdsVxc8JMxUBibVicbLSZ6zia606EG0zI9oosiceHsdiavDZGUyHzcvsEExFGxwP4mDg/132","nickname":"Geek_828b39","note":"","ucode":"DE2A5F215A3C1E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391424,"discussion_content":"现在都明白了。初始化向量不能重复，用到最后一个初始化向量就得换秘钥了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630460026,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":288647,"user_name":"三叶虫tlb","can_delete":false,"product_type":"c1","uid":1010499,"ip_address":"","ucode":"A8236974932E6E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6b/43/b6bcab56.jpg","comment_is_top":false,"comment_ctime":1618579103,"is_pvip":false,"replies":[{"id":"104884","content":"大部分场景下的初始化向量不需要保密。","user_name":"作者回复","comment_id":288647,"uid":"1111315","ip_address":"","utype":1,"ctime":1618858603,"user_name_real":"范学雷"}],"discussion_count":1,"race_medal":0,"score":"1618579103","product_id":100064801,"comment_content":"我做的项目，初始化向量就是重复的。。。当初不明白这个有什么用、有什么安全隐患。<br>另外怎样安全把初始化向量发送给对方也是个问题。","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518693,"discussion_content":"大部分场景下的初始化向量不需要保密。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618858603,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":266880,"user_name":"Litt1eQ","can_delete":false,"product_type":"c1","uid":2083695,"ip_address":"","ucode":"D80D0B14F3B312","user_header":"https://static001.geekbang.org/account/avatar/00/1f/cb/6f/b6693f43.jpg","comment_is_top":false,"comment_ctime":1607514821,"is_pvip":true,"replies":[{"id":"96907","content":"重复的iv，相同的明文就有相同的密文，文章里有讲的，这是一般的加密不允许的。下一节我们讲ECB模式。","user_name":"作者回复","comment_id":266880,"uid":"1111315","ip_address":"","utype":1,"ctime":1607531123,"user_name_real":"范学雷"}],"discussion_count":1,"race_medal":0,"score":"1607514821","product_id":100064801,"comment_content":"感觉使用重复的iv会对安全性产生影响 但是我不太清楚具体影响的程度 一般来说iv会跟着加密之后灯内容一块发送 以我目前所能掌握的知识只能了解到这些 我记得分组密码存在一个ecb模式 这个模式没有iv 希望老师可以普吉一下更多的知识 对于密钥长度的限制是我之前所不了解的 感谢老师","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511427,"discussion_content":"重复的iv，相同的明文就有相同的密文，文章里有讲的，这是一般的加密不允许的。下一节我们讲ECB模式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607531123,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":266768,"user_name":"天天有吃的","can_delete":false,"product_type":"c1","uid":1604355,"ip_address":"","ucode":"6267FE8E68DEE5","user_header":"https://static001.geekbang.org/account/avatar/00/18/7b/03/03583011.jpg","comment_is_top":false,"comment_ctime":1607482651,"is_pvip":false,"replies":[{"id":"96859","content":"你问题提的都很好！密钥的限制问题，我们后面专门会讲的。","user_name":"作者回复","comment_id":266768,"uid":"1111315","ip_address":"","utype":1,"ctime":1607494610,"user_name_real":"范学雷"}],"discussion_count":1,"race_medal":0,"score":"1607482651","product_id":100064801,"comment_content":"问题2：密钥使用次数 &lt; 初始化向量次数，可以防止第一个数据分组输出相同的加密后内容，密钥还有什么别的限制呢，按道理密钥没有重复性的要求应该比初始化向量要求更低呀？","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511382,"discussion_content":"你问题提的都很好！密钥的限制问题，我们后面专门会讲的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607494610,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":266767,"user_name":"天天有吃的","can_delete":false,"product_type":"c1","uid":1604355,"ip_address":"","ucode":"6267FE8E68DEE5","user_header":"https://static001.geekbang.org/account/avatar/00/18/7b/03/03583011.jpg","comment_is_top":false,"comment_ctime":1607482646,"is_pvip":false,"replies":[{"id":"96858","content":"位数是由数据块的大小确定的。使用随机数或者序列数，是两个解决重复问题的措施，文中有讲的。其他的限制就要看具体的链接模式了，有的还有，有的就没有了，或者我还不知道有没有。","user_name":"作者回复","comment_id":266767,"uid":"1111315","ip_address":"","utype":1,"ctime":1607494475,"user_name_real":"范学雷"}],"discussion_count":1,"race_medal":0,"score":"1607482646","product_id":100064801,"comment_content":"小白打卡中...<br>问题1：初始化向量除了不能重复，这里的位数（文中128位）是怎么确定的？怎么保证尽可能的不重复？除了不重复还有没有什么限制？","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511381,"discussion_content":"位数是由数据块的大小确定的。使用随机数或者序列数，是两个解决重复问题的措施，文中有讲的。其他的限制就要看具体的链接模式了，有的还有，有的就没有了，或者我还不知道有没有。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607494475,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}