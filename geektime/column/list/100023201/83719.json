{"id":83719,"title":"JavaScript执行（三）：你知道现在有多少种函数吗？","content":"<p>在前一篇文章中，我们大致了解了执行上下文是什么，也知道了任何语句的执行都会依赖特定的上下文。</p><p>一旦上下文被切换，整个语句的效果可能都会发生改变。那么，切换上下文的时机就显得非常重要了。</p><p>在JavaScript，切换上下文最主要的场景是函数调用。在这一课，我们就来讲讲函数调用切换上下文的事情。我们在讲函数调用之前，首先来认识一下函数家族。</p><h2>函数</h2><p>在ES2018中，函数已经是一个很复杂的体系了，我在这里整理了一下。</p><p><strong>第一种，普通函数：用function关键字定义的函数。</strong></p><p>示例：</p><pre><code>function foo(){\n    // code\n}\n</code></pre><p><strong>第二种，箭头函数：用 =&gt; 运算符定义的函数。</strong></p><p>示例:</p><pre><code>const foo = () =&gt; {\n    // code\n}\n</code></pre><p><strong>第三种，方法：在class中定义的函数。</strong></p><p>示例：</p><pre><code>class C {\n    foo(){\n        //code\n    }\n}\n</code></pre><p><strong>第四种，生成器函数：用function * 定义的函数。</strong></p><p>示例：</p><pre><code>function* foo(){\n    // code\n}\n</code></pre><p><strong>第五种，类：用class定义的类，实际上也是函数。</strong></p><p>示例：</p><pre><code>class Foo {\n    constructor(){\n        //code\n    }\n}\n</code></pre><p><strong>第六/七/八种，异步函数：普通函数、箭头函数和生成器函数加上async关键字。</strong></p><p>示例：</p><pre><code>async function foo(){\n    // code\n}\nconst foo = async () =&gt; {\n    // code\n}\nasync function foo*(){\n    // code\n}\n</code></pre><p>ES6以来，大量加入的新语法极大地方便了我们编程的同时，也增加了很多我们理解的心智负担。要想认识这些函数的执行上下文切换，我们必须要对它们行为上的区别有所了解。</p><!-- [[[read_end]]] --><p>对普通变量而言，这些函数并没有本质区别，都是遵循了“继承定义时环境”的规则，它们的一个行为差异在于this关键字。</p><p>那么，this关键字是什么呢，我们一起来看一看。</p><h2>this关键字的行为</h2><p>this是JavaScript中的一个关键字，它的使用方法类似于一个变量（但是this跟变量的行为有很多不同，上一节课我们讲了一些普通变量的行为和机制，也就是var声明和赋值、let的内容）。</p><p><strong>this是执行上下文中很重要的一个组成部分。同一个函数调用方式不同，得到的this值也不同</strong>，我们看一个例子：</p><pre><code>function showThis(){\n    console.log(this);\n}\n\nvar o = {\n    showThis: showThis\n}\n\nshowThis(); // global\no.showThis(); // o\n</code></pre><p>在这个例子中，我们定义了函数showThis，我们把它赋值给一个对象o的属性，然后尝试分别使用两个引用来调用同一个函数，结果得到了不同的this值。</p><p>普通函数的this值由“调用它所使用的引用”决定，其中奥秘就在于：我们获取函数的表达式，它实际上返回的并非函数本身，而是一个Reference类型（记得我们在类型一章讲过七种标准类型吗，正是其中之一）。</p><p>Reference类型由两部分组成：一个对象和一个属性值。不难理解 o.showThis 产生的Reference类型，即由对象o和属性“showThis”构成。</p><p>当做一些算术运算（或者其他运算时），Reference类型会被解引用，即获取真正的值（被引用的内容）来参与运算，而类似函数调用、delete等操作，都需要用到Reference类型中的对象。</p><p>在这个例子中，Reference类型中的对象被当作this值，传入了执行函数时的上下文当中。</p><p>至此，我们对this的解释已经非常清晰了：<strong>调用函数时使用的引用，决定了函数执行时刻的this值。</strong></p><p>实际上从运行时的角度来看，this跟面向对象毫无关联，它是与函数调用时使用的表达式相关。</p><p>这个设计来自JavaScript早年，通过这样的方式，巧妙地模仿了Java的语法，但是仍然保持了纯粹的“无类”运行时设施。</p><p>如果，我们把这个例子稍作修改，换成箭头函数，结果就不一样了：</p><pre><code>const showThis = () =&gt; {\n    console.log(this);\n}\n\nvar o = {\n    showThis: showThis\n}\n\nshowThis(); // global\no.showThis(); // global\n</code></pre><p><strong>我们看到，改为箭头函数后，不论用什么引用来调用它，都不影响它的this值。</strong></p><p>接下来我们看看“方法”，它的行为又不一样了：</p><pre><code>class C {\n    showThis() {\n        console.log(this);\n    }\n}\nvar o = new C();\nvar showThis = o.showThis;\n\nshowThis(); // undefined\no.showThis(); // o\n</code></pre><p>这里我们创建了一个类C，并且实例化出对象o，再把o的方法赋值给了变量showThis。</p><p>这时候，我们使用showThis这个引用去调用方法时，得到了undefined。</p><p>所以，在方法中，我们看到this的行为也不太一样，它得到了undefined的结果。</p><p>按照我们上面的方法，不难验证出：生成器函数、异步生成器函数和异步普通函数跟普通函数行为是一致的，异步箭头函数与箭头函数行为是一致的。</p><h2>this关键字的机制</h2><p>说完了this行为，我们再来简单谈谈在JavaScript内部，实现this这些行为的机制，让你对这部分知识有一个大概的认知。</p><p>函数能够引用定义时的变量，如上文分析，函数也能记住定义时的this，因此，函数内部必定有一个机制来保存这些信息。</p><p>在JavaScript标准中，为函数规定了用来保存定义时上下文的私有属性[[Environment]]。</p><p>当一个函数执行时，会创建一条新的执行环境记录，记录的外层词法环境（outer lexical environment）会被设置成函数的[[Environment]]。</p><p>这个动作就是<strong>切换上下文</strong>了，我们假设有这样的代码：</p><pre><code>var a = 1;\nfoo();\n\n在别处定义了foo：\n\nvar b = 2;\nfunction foo(){\n    console.log(b); // 2\n    console.log(a); // error\n}\n</code></pre><p>这里的foo能够访问b（定义时词法环境），却不能访问a（执行时的词法环境），这就是执行上下文的切换机制了。</p><p>JavaScript用一个栈来管理执行上下文，这个栈中的每一项又包含一个链表。如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/e8/31/e8d8e96c983a832eb646d6c17ff3df31.jpg?wh=916*489\" alt=\"\"></p><p>当函数调用时，会入栈一个新的执行上下文，函数调用结束时，执行上下文被出栈。</p><p>而this则是一个更为复杂的机制，JavaScript标准定义了 [[thisMode]] 私有属性。</p><p>[[thisMode]] 私有属性有三个取值。</p><ul>\n<li>lexical：表示从上下文中找this，这对应了箭头函数。</li>\n<li>global：表示当this为undefined时，取全局对象，对应了普通函数。</li>\n<li>strict：当严格模式时使用，this严格按照调用时传入的值，可能为null或者undefined。</li>\n</ul><p>非常有意思的是，方法的行为跟普通函数有差异，恰恰是因为class设计成了默认按strict模式执行。</p><p>我们可以用strict达成与上一节中方法的例子一样的效果:</p><pre><code>&quot;use strict&quot;\nfunction showThis(){\n    console.log(this);\n}\n\nvar o = {\n    showThis: showThis\n}\n\nshowThis(); // undefined\no.showThis(); // o\n</code></pre><p>函数创建新的执行上下文中的词法环境记录时，会根据[[thisMode]]来标记新纪录的[[ThisBindingStatus]]私有属性。</p><p>代码执行遇到this时，会逐层检查当前词法环境记录中的[[ThisBindingStatus]]，当找到有this的环境记录时获取this的值。</p><p>这样的规则的实际效果是，嵌套的箭头函数中的代码都指向外层this，例如：</p><pre><code>var o = {}\no.foo = function foo(){\n    console.log(this);\n    return () =&gt; {\n        console.log(this);\n        return () =&gt; console.log(this);\n    }\n}\n\no.foo()()(); // o, o, o\n</code></pre><p>这个例子中，我们定义了三层嵌套的函数，最外层为普通函数，两层都是箭头函数。</p><p>这里调用三个函数，获得的this值是一致的，都是对象o。</p><p>JavaScript还提供了一系列函数的内置方法来操纵this值，下面我们来了解一下。</p><h2>操作this的内置函数</h2><p>Function.prototype.call 和 Function.prototype.apply 可以指定函数调用时传入的this值，示例如下：</p><pre><code>function foo(a, b, c){\n    console.log(this);\n    console.log(a, b, c);\n}\nfoo.call({}, 1, 2, 3);\nfoo.apply({}, [1, 2, 3]);\n</code></pre><p>这里call和apply作用是一样的，只是传参方式有区别。</p><p>此外，还有 Function.prototype.bind 它可以生成一个绑定过的函数，这个函数的this值固定了参数：</p><pre><code>function foo(a, b, c){\n    console.log(this);\n    console.log(a, b, c);\n}\nfoo.bind({}, 1, 2, 3)();\n</code></pre><p>有趣的是，call、bind和apply用于不接受this的函数类型如箭头、class都不会报错。</p><p>这时候，它们无法实现改变this的能力，但是可以实现传参。</p><h2>结语</h2><p>在这一节课程中，我们认识了ES2018中规定的各种函数，我一共简单介绍了8种函数。</p><p>我们围绕this这个中心，介绍了函数的执行上下文切换机制。同时我们还讲解了this中的一些相关知识。包括了操作this的内置函数。</p><p>最后，留给你一个问题，你在日常开发中用过哪些函数类型呢？欢迎给我留言，我们一起讨论。</p><hr></hr><h2>补充阅读：new与this</h2><p>我们在之前的对象部分已经讲过new的执行过程，我们再来看一下：</p><ul>\n<li>以构造器的 prototype 属性（注意与私有字段[[prototype]]的区分）为原型，创建新对象；</li>\n<li>将 this 和调用参数传给构造器，执行；</li>\n<li>如果构造器返回的是对象，则返回，否则返回第一步创建的对象。</li>\n</ul><p>显然，通过new调用函数，跟直接调用的this取值有明显区别。那么我们今天讲的这些函数跟new搭配又会产生什么效果呢？</p><p>这里我整理了一张表：</p><p><img src=\"https://static001.geekbang.org/resource/image/6a/da/6a9f0525b713a903c6c94f52afaea3da.png?wh=462*452\" alt=\"\"></p><p>我们可以看到，仅普通函数和类能够跟new搭配使用，这倒是给我们省去了不少麻烦。</p><p></p>","comments":[{"had_liked":false,"id":71410,"user_name":"奥斯特洛夫斯基","can_delete":false,"product_type":"c1","uid":1379844,"ip_address":"","ucode":"9AFECAC3A1FCAD","user_header":"https://static001.geekbang.org/account/avatar/00/15/0e/04/d710d928.jpg","comment_is_top":false,"comment_ctime":1551335283,"is_pvip":false,"discussion_count":23,"race_medal":0,"score":"469702770547","product_id":100023201,"comment_content":"var a = 1;<br>foo();<br><br>在别处定义了 foo：<br><br>var b = 2;<br>function foo(){<br>    console.log(b); &#47;&#47; 2<br>    console.log(a); &#47;&#47; error<br>}<br>为什么我执行出来是undefined ，1","like_count":110,"discussions":[{"author":{"id":1123263,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/bf/071dbb60.jpg","nickname":"Nodreame","note":"","ucode":"E2CF7D8B1341E9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":155418,"discussion_content":"// foo.js 文件\nvar b = 2;\nexports.foo = function () {\n  console.log(b);\n  console.log(a);\n}\n// main.js 文件\nconst { foo } = require(&#39;./foo&#39;);\nvar a = 1;\nfoo();\n\n在Node环境下执行 main.js（命令为：node main.js），b打印成功，a发生 ReferenceError错误","likes_number":17,"is_delete":false,"is_hidden":false,"ctime":1580227131,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1088230,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9a/e6/dbff91c4.jpg","nickname":"右耳·朋","note":"","ucode":"340E4A3371B40C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1123263,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/bf/071dbb60.jpg","nickname":"Nodreame","note":"","ucode":"E2CF7D8B1341E9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":290104,"discussion_content":"这个例子没有说明性，你也可以把b给export出来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594345073,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":155418,"ip_address":""},"score":290104,"extra":""},{"author":{"id":1974551,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/21/17/0a681bd6.jpg","nickname":"丁丁","note":"","ucode":"D58B1BA292CDAA","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1123263,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/bf/071dbb60.jpg","nickname":"Nodreame","note":"","ucode":"E2CF7D8B1341E9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331763,"discussion_content":"送你上去","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606969684,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":155418,"ip_address":""},"score":331763,"extra":""},{"author":{"id":2172330,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKw8ictgYcqf6upCGib0uBXa6oeWfVJARSLL1SFXtrz3TkJiavPicesLEoBg9RL7ibRYKTtZDexsrJPjJA/132","nickname":"victorykong","note":"","ucode":"76C1BE240D53F8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1123263,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/bf/071dbb60.jpg","nickname":"Nodreame","note":"","ucode":"E2CF7D8B1341E9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":354301,"discussion_content":"同样也说明是作用域是静态的！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615271447,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":155418,"ip_address":""},"score":354301,"extra":""}]},{"author":{"id":1446213,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIeYicSzsPcAWapkFerIRJItsuoYtqnSauoOSW0LOMRVk00rFp6j0kMKotGUHLjQp9eZaCDfTJluyw/132","nickname":"冬瓜不圆","note":"","ucode":"EBC73F55F76CE9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296270,"discussion_content":"作者不严谨，在别处声明foo()不说清楚，执行结果也不写出来，对于评论区的疑惑也不解答","likes_number":16,"is_delete":false,"is_hidden":false,"ctime":1596501004,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1272789,"avatar":"https://static001.geekbang.org/account/avatar/00/13/6b/d5/0e4b70a2.jpg","nickname":"Sean","note":"","ucode":"BC0715BF423613","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309569,"discussion_content":"var b = 2;\nfunction foo() {\n\tconsole.log(b);\n\tconsole.log(a);\n}\n\n(() => {\n\tvar a = 1;\n\tfoo();\n\n})(foo)\n\n这样就行啊；\n这个例子主要是为了说明切换执行上下文；\n函数的调用会产生执行上下文的切换，把2段代码放在2个函数内就行了。","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1601349797,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1169586,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d8/b2/030ced3d.jpg","nickname":"站着瞌睡","note":"","ucode":"55914C1DB5B873","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":211477,"discussion_content":"我也觉得讲错了，既然能调用foo，证明在一个执行环境里，按代码的执行顺序，此时b仅仅是被提前声明，没有赋值，所以打印出a,b打印都不会报错，b打印出来是undefined","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1584855151,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1376366,"avatar":"https://static001.geekbang.org/account/avatar/00/15/00/6e/6982a56e.jpg","nickname":"WinfyHo","note":"","ucode":"1C1EBA315593A8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":203085,"discussion_content":"我觉得这里讲错了","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1583994026,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1386998,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZXUUB3zpdQAVWNeZx8T4N7GFMLvDttMhX9icRiaeziahiaiaVICQgJliatXWPOLoHl2aZB4gzkYWvLqzw/132","nickname":"山鬼","note":"","ucode":"F0A82DF23CFA39","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1376366,"avatar":"https://static001.geekbang.org/account/avatar/00/15/00/6e/6982a56e.jpg","nickname":"WinfyHo","note":"","ucode":"1C1EBA315593A8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":203633,"discussion_content":"作者说的是在别处定义的foo,所以他们的上下文环境是不一样的，只是没有明确给出 &#34;别处&#34;是怎么定义的， 有意识认为a 和 foo/b 的环境不一样就可以了，在浏览器上跑的话，a b foo都是在同一个上下文的，所以肯定跟老师表达的不一样","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1584061818,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":203085,"ip_address":""},"score":203633,"extra":""}]},{"author":{"id":1388361,"avatar":"","nickname":"木蝴蝶","note":"","ucode":"AA2EDB3AFA5C75","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":106,"discussion_content":"我理解：变量提升 代码执行时 a b 先定义了，然后 a 赋值，foo 执行，此时b 还没哟赋值","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1561106918,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1529907,"avatar":"","nickname":"yang","note":"","ucode":"56EB605DF26C06","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289102,"discussion_content":"我理解的别处就是另一个不关联的文件，这里会有两个上下文域","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1593995607,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1446213,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIeYicSzsPcAWapkFerIRJItsuoYtqnSauoOSW0LOMRVk00rFp6j0kMKotGUHLjQp9eZaCDfTJluyw/132","nickname":"冬瓜不圆","note":"","ucode":"EBC73F55F76CE9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1529907,"avatar":"","nickname":"yang","note":"","ucode":"56EB605DF26C06","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296268,"discussion_content":"作者不严谨，不说清楚，对于评论区的疑惑也不解答","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1596500938,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":289102,"ip_address":""},"score":296268,"extra":""}]},{"author":{"id":1581063,"avatar":"","nickname":"lsy","note":"","ucode":"A9FA51A302C97E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1483,"discussion_content":"放到不同的作用域中","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1562654838,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1123263,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/bf/071dbb60.jpg","nickname":"Nodreame","note":"","ucode":"E2CF7D8B1341E9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":325342,"discussion_content":"快一年后我又回来这个评论了，首先我认为原来的评论是对的，然后有补充如下：\n函数会记住&amp;访问所在的词法作用域（即使不是在该作用域执行），所以函数记住并访问了其声明位置的b，而不是执行位置的a.\n相关知识点：闭包、词法作用域与动态作用域（JS选择了词法作用域，this与动态作用域表现有共同点但是并不是真正的动态作用域）\n参考资料：《你不知道的JavaScript》","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1605276351,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1380377,"avatar":"https://static001.geekbang.org/account/avatar/00/15/10/19/6a59ade1.jpg","nickname":"yadong","note":"","ucode":"BDE2487A3CE689","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553,"discussion_content":"注意；是在别处定义的foo","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1561694552,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1093541,"avatar":"https://static001.geekbang.org/account/avatar/00/10/af/a5/afa1d7d7.jpg","nickname":"hasWhere","note":"","ucode":"2C2B2988107489","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296679,"discussion_content":"还好习惯性看看评论靠前的，不然就错过知识点了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1596621398,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1394138,"avatar":"https://static001.geekbang.org/account/avatar/00/15/45/da/71b7599d.jpg","nickname":"antimony","note":"","ucode":"7DFA3DCFD5138C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":46566,"discussion_content":"这里的定义在另一个地方的可以理解为定义在另一个模块里面的函数","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573182242,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1547322,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9c/3a/bfd73920.jpg","nickname":"junjun","note":"","ucode":"1F7EE146B9BE04","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":25496,"discussion_content":"我的也是，我觉得作者解释的不对","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1570533931,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1211737,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/yicicolgdxU2vTP6ExtAf6NicvFicuAfM0tL7bOoPDMZa0bYVa8wkV10DgnpobHX9blmIicdL6zFS76Dq40Rm8xt21g/132","nickname":"Geek_baa4ad","note":"","ucode":"34CD7C63756A8F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1547322,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9c/3a/bfd73920.jpg","nickname":"junjun","note":"","ucode":"1F7EE146B9BE04","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319343,"discussion_content":"还有把this神化了，明明js之父都说了，这是策划需求导致的一个重大缺陷，现在看来是很不好的设计，偏偏被说成是巧妙设计","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1603998539,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":25496,"ip_address":""},"score":319343,"extra":""}]},{"author":{"id":2261604,"avatar":"","nickname":"坎坷的程序媛","note":"","ucode":"5F86C173ADBCDD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330322,"discussion_content":"确实文章中不好理解 至少我当时没看明白","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606569006,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1202465,"avatar":"https://static001.geekbang.org/account/avatar/00/12/59/21/d2efde18.jpg","nickname":"布凡","note":"","ucode":"346FCD332F8BFA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309369,"discussion_content":"同样疑惑，感觉这里完全没讲清楚","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601273490,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1391464,"avatar":"https://static001.geekbang.org/account/avatar/00/15/3b/68/a409de4b.jpg","nickname":"Chen","note":"","ucode":"40EABFE90C5512","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5102,"discussion_content":"放在两个js文件 被同一个html引用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565946715,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1384585,"avatar":"https://static001.geekbang.org/account/avatar/00/15/20/89/82986e48.jpg","nickname":"周义竣","note":"","ucode":"57C6AF5BE3CE44","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1391464,"avatar":"https://static001.geekbang.org/account/avatar/00/15/3b/68/a409de4b.jpg","nickname":"Chen","note":"","ucode":"40EABFE90C5512","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6254,"discussion_content":"这种方式好像没用。。。。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1566813164,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":5102,"ip_address":""},"score":6254,"extra":""}]}]},{"had_liked":true,"id":71334,"user_name":"钟凯","can_delete":false,"product_type":"c1","uid":1028122,"ip_address":"","ucode":"03EAF95AA5D150","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b0/1a/7e8ab46e.jpg","comment_is_top":false,"comment_ctime":1551322041,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"375213476793","product_id":100023201,"comment_content":"关于this，Kyle Simpson有四条总结：<br>1. 由new调用? 绑定到新创建的对象。<br>2. 由call或者apply(或者bind)调用? 绑定到指定的对象。<br>3. 由上下文对象调用? 绑定到那个上下文对象。<br>4. 默认:在严格模式下绑定到undefined，否则绑定到全局对象。<br>例外：箭头函数不适用以上四条规则，它会继承外层函数调用的 this 绑定(无论 this 绑定到什么)。","like_count":88,"discussions":[{"author":{"id":1910075,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/25/3b/a971fc8e.jpg","nickname":"阿感","note":"","ucode":"7BCB7E44A832D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":253737,"discussion_content":"关于this:     \nhttps://github.com/YvetteLau/Blog/issues/6","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1588255385,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1485706,"avatar":"https://static001.geekbang.org/account/avatar/00/16/ab/8a/e1a8b835.jpg","nickname":"窗外明月","note":"","ucode":"D4C0BA5CC496CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200534,"discussion_content":"2和3会出现绑定丢失？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583682662,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71308,"user_name":"飞","can_delete":false,"product_type":"c1","uid":1391792,"ip_address":"","ucode":"04CDE2541FFEB5","user_header":"https://static001.geekbang.org/account/avatar/00/15/3c/b0/37a7c84d.jpg","comment_is_top":false,"comment_ctime":1551317845,"is_pvip":false,"replies":[{"id":"25799","content":"哦哦 对的对的 我改一下","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1551423529,"ip_address":"","comment_id":71308,"utype":1}],"discussion_count":3,"race_medal":0,"score":"143285238613","product_id":100023201,"comment_content":"老师，这个例子中的最后一行代码o.showThis(); &#47;&#47; global<br>好像写错了，应该是C的实例o吧。<br><br>class C {<br>    showThis() {<br>        console.log(this);<br>    }<br>}<br>var o = new C();<br>var showThis = o.showThis;<br><br>showThis(); &#47;&#47; undefined<br>o.showThis(); &#47;&#47; global<br>","like_count":33,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441102,"discussion_content":"哦哦 对的对的 我改一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551423529,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2116292,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL7iboztEN40FadzBoSAWvfeHicicuzbLxicW6gDtJO8AgMCU7jiaW7cGta64kwdUCboraoZ6a8a7Jnjmg/132","nickname":"Geek_2867d7","note":"","ucode":"13266A6372ED29","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":313618,"discussion_content":"class C {\n    showThis() {\n        console.log(this);\n    }\n}\nvar o = new C();\nvar showThis = o.showThis;\n\nshowThis(); // undefined\no.showThis(); // C {}","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1603076922,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2116292,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL7iboztEN40FadzBoSAWvfeHicicuzbLxicW6gDtJO8AgMCU7jiaW7cGta64kwdUCboraoZ6a8a7Jnjmg/132","nickname":"Geek_2867d7","note":"","ucode":"13266A6372ED29","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":313619,"discussion_content":"为什么我打印o.showThis()的结果是C{}，不是global","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603076998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72076,"user_name":"Rushan-Chen","can_delete":false,"product_type":"c1","uid":1374410,"ip_address":"","ucode":"CE514A1205C61D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/XSnxM4uP67kdzzCRW8KxhS5jkHiaaSrgkuLh1Z5BxawvQase46pbGAL4Bngmd3eFHckQml6zexyukFoWpeNENTg/132","comment_is_top":false,"comment_ctime":1551514894,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"130400533774","product_id":100023201,"comment_content":"老师写的 &quot;在别处定义了foo&quot; 的意思是，这句话上下两部分的代码，不在同一个文件哒~<br>已经有同学贴了代码，是这样的：<br>```js<br>&#47;&#47; 这是 foo.js 文件里的代码<br>var b = 2;<br>module.exports = function() { &#47;&#47; 导出function<br>  console.log(b);<br>  console.log(a);<br>};<br>```<br>```js<br>&#47;&#47; 这是test.js 文件里的代码<br>var foo = require(&quot;.&#47;foo.js&quot;); &#47;&#47; 引入function 为foo<br>var a = 1;<br>foo();<br>&#47;&#47; node 执行 test.js 输出：<br>&#47;&#47; -&gt; 2<br>&#47;&#47; -&gt; ReferenceError: a is not defined<br>```","like_count":30,"discussions":[{"author":{"id":1169586,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d8/b2/030ced3d.jpg","nickname":"站着瞌睡","note":"","ucode":"55914C1DB5B873","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":211479,"discussion_content":"这段代码解释太牵强了吧，通过require那是被包装过的，按模块化，都不在一个作用域里","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584855445,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2151189,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/lIw3PIIrn1Jvg8icAEamBKg16nlibWgAlKmGodK1J8ibicBP4JOz11q0EpoGvUMMOvTMAexIy3HH5PIP7SQz2SJ8Rg/132","nickname":"TeaShoulder","note":"","ucode":"E6FD5E9F21307B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1169586,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d8/b2/030ced3d.jpg","nickname":"站着瞌睡","note":"","ucode":"55914C1DB5B873","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306378,"discussion_content":"老师的意思就是要不在一个作用域里，函数访问的上下文是函数定义位置的词法作用域，而不是函数执行语句所在的作用域。切换上下文，就是把执行语句所在的上下文切换成了函数定义位置的上下文。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600259653,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":211479,"ip_address":""},"score":306378,"extra":""}]},{"author":{"id":1237739,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e2/eb/a11560a8.jpg","nickname":"J","note":"","ucode":"49008F98A504CD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41435,"discussion_content":"> 在 JavaScript 标准中，为函数规定了用来保存定义时上下文的私有属性 [[Environment]]。当一个函数执行时，会创建一条新的执行环境记录，记录的外层词法环境（outer lexical environment）会被设置成函数的 [[Environment]]。\n这里的 foo 能够访问 b（定义时词法环境），却不能访问 a（执行时的词法环境），这就是执行上下文的切换机制了。\n? 执行时不是 a 的环境 替换了 b 的环境吗，所以不是 a 有值， b 报错吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572426373,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1123263,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/bf/071dbb60.jpg","nickname":"Nodreame","note":"","ucode":"E2CF7D8B1341E9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1237739,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e2/eb/a11560a8.jpg","nickname":"J","note":"","ucode":"49008F98A504CD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":155465,"discussion_content":"我的理解是这里发生了上下文切换，foo函数调用时，会入栈一个新的执行上下文(包含 b 的环境即函数声明环境)，函数调用结束时，执行上下文被出栈（包含 b 的环境出栈，回到调用 foo 函数的环境）。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580231496,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":41435,"ip_address":""},"score":155465,"extra":""}]}]},{"had_liked":false,"id":76832,"user_name":"阿成","can_delete":false,"product_type":"c1","uid":1390032,"ip_address":"","ucode":"CEC3CD65FB9333","user_header":"https://static001.geekbang.org/account/avatar/00/15/35/d0/f2ac6d91.jpg","comment_is_top":false,"comment_ctime":1552722124,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"104631937228","product_id":100023201,"comment_content":"这里先说声抱歉，之前可能误导了大家...<br>这里更新一下答案😅<br>@Rushan-Chen（虽然你并不能收到，希望极客时间赶紧增加@或者评论的功能，至少也展示个邮箱啊...不然找人都找不到，影响大家交流）<br>--------------分割线-------------------<br>文中，winter老师所说的“在别处定义”的意思，应该就是指在另一个模块中定义，即：<br><br>在另一个模块中定义...这样引入这个模块时，b就定义且初始化了，而且在这个模块中访问不到变量a...<br>&#47;&#47; module a.js<br>import {foo} from &#39;b.js&#39;<br>var a = 1<br>foo()<br><br>&#47;&#47; module b.js<br>var b = 2;<br>export function foo () {<br>  console.log(b); &#47;&#47; 2<br>  console.log(a); &#47;&#47; error<br>}<br><br>其实，只要foo访问不到变量a就可以了嘛:<br>var b = 2;<br>function foo () {<br>  console.log(b); &#47;&#47; 2<br>  console.log(a); &#47;&#47; error<br>}<br><br>void function () {<br>\tvar a = 1<br>\tfoo()<br>}()","like_count":25},{"had_liked":false,"id":72729,"user_name":"TY","can_delete":false,"product_type":"c1","uid":1042575,"ip_address":"","ucode":"DCCD035EAF5686","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/nD10dsXDZ07WyBbqheDtflyxqaR7QsuznhEgtTia0Pticf5fSjQhgSKUUTbibBozY5h2QAD0oYoBCNbvLGpHVeTow/132","comment_is_top":false,"comment_ctime":1551706616,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"65976216056","product_id":100023201,"comment_content":"晕得一塌糊涂... 结合上一章的 let var 来看, js 这门语言居然还能火成这样, 世界实在是太奇妙了😥","like_count":15,"discussions":[{"author":{"id":2109537,"avatar":"https://static001.geekbang.org/account/avatar/00/20/30/61/f7c423f9.jpg","nickname":"差不多先生","note":"","ucode":"CEE13BB16C442D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555243,"discussion_content":"执行上下文，老师讲的思路，我也挺晕的。我是看了其他人写的blog，看懂了再回来按照老师的思路看下，会有点收获","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1646820740,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1024788,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a3/14/1f03f07d.jpg","nickname":"懒蝈蝈","note":"","ucode":"574F2CF1A705F0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540297,"discussion_content":"同感同感，而且老师也只讲了现象，没有把现象的原理给讲透。。。执行上下文是怎么生成的，怎么维护的，怎么切换的之类的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640010690,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1029922,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b7/22/84f92c04.jpg","nickname":"qqq","note":"","ucode":"B74B3863711CE7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":202495,"discussion_content":"我也很晕","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583926958,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71332,"user_name":"Thomas Cho","can_delete":false,"product_type":"c1","uid":1377960,"ip_address":"","ucode":"6FD062FCFCDE74","user_header":"https://static001.geekbang.org/account/avatar/00/15/06/a8/5223644a.jpg","comment_is_top":false,"comment_ctime":1551321756,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"61680863900","product_id":100023201,"comment_content":"我发现啊，不能只看文中代码结果，还是得自己跑一下，我看了文章后很是疑惑，跑了一下[[Environment]]下方那段代码后，打印出来的是 undefined和1。而不是2和error，不知为何","like_count":14,"discussions":[{"author":{"id":1485599,"avatar":"","nickname":"胡桃夹子","note":"","ucode":"EA58FBAD8143E7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":195757,"discussion_content":"你跑的代码是在一处执行的，由于变量提升var b被提升到顶部此时为undefind ,而函数执行时b还没被赋值成2 ,所以打印出来b是undefined。估计作者说的在别处定义了foo 是指另一个js文件。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1583305134,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166265,"user_name":"DXYF2E","can_delete":false,"product_type":"c1","uid":1518157,"ip_address":"","ucode":"52BA8207BEEE6E","user_header":"","comment_is_top":false,"comment_ctime":1577428297,"is_pvip":false,"discussion_count":7,"race_medal":0,"score":"44527101257","product_id":100023201,"comment_content":"觉得没看懂的同学，我觉得可以结合李兵老师的「浏览器工作原理与实践」中的第10、11节课一起阅读，可能理解程度会好一些","like_count":10,"discussions":[{"author":{"id":1640477,"avatar":"https://static001.geekbang.org/account/avatar/00/19/08/1d/30b32c93.jpg","nickname":"路人丁","note":"","ucode":"078F0235DAFCA5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380108,"discussion_content":"哈哈，不错！李兵 老师的讲解，那才是真的好！在地上讲，这种飘在天上的，大家看完还是一片糊涂，觉得自己是个二货，啥也不是！","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1624344778,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1508809,"avatar":"https://static001.geekbang.org/account/avatar/00/17/05/c9/637ca6a6.jpg","nickname":"空空Ryan","note":"","ucode":"37146A69CF5434","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550444,"discussion_content":"不对比真不知道，大道至简，李兵老师真是神了！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644546812,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1624376,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c9/38/e0d2494e.jpg","nickname":"焱焱","note":"","ucode":"0AB731F275AF7C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535313,"discussion_content":"这部分知识真的是李兵老师讲的更好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638410346,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365583,"discussion_content":"同意～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617845352,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2033513,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/07/69/43cf2251.jpg","nickname":"Alan He","note":"","ucode":"A0780F4619D388","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353284,"discussion_content":"个人觉得李兵老师的更棒，易读易理解，也很热情耐心的回答大家的问题，很赞。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615114985,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1657054,"avatar":"https://static001.geekbang.org/account/avatar/00/19/48/de/06c37dc8.jpg","nickname":"Geek_千江月","note":"","ucode":"B81CC1DE82DAA4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":229864,"discussion_content":"广告😄😄😄哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586696307,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1910075,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/25/3b/a971fc8e.jpg","nickname":"阿感","note":"","ucode":"7BCB7E44A832D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1657054,"avatar":"https://static001.geekbang.org/account/avatar/00/19/48/de/06c37dc8.jpg","nickname":"Geek_千江月","note":"","ucode":"B81CC1DE82DAA4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":253748,"discussion_content":"那个专栏也是很出名的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1588255896,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":229864,"ip_address":""},"score":253748,"extra":""}]}]},{"had_liked":false,"id":202845,"user_name":"柳林博弈","can_delete":false,"product_type":"c1","uid":1500459,"ip_address":"","ucode":"51354296B07BAF","user_header":"https://static001.geekbang.org/account/avatar/00/16/e5/2b/47a48b9b.jpg","comment_is_top":false,"comment_ctime":1586076490,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"31650847562","product_id":100023201,"comment_content":"切换上下文<br>let b = 2;<br>function foo () {<br>  console.log(b); &#47;&#47; 2<br>  console.log(a); &#47;&#47; error<br>}<br><br>{<br>  let a = 1<br>  foo()<br>}","like_count":7,"discussions":[{"author":{"id":1663578,"avatar":"https://static001.geekbang.org/account/avatar/00/19/62/5a/d84ad4f7.jpg","nickname":"缘缘","note":"","ucode":"F8FAAEAE188A08","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353726,"discussion_content":"这是为什么啊，切换的有点晕","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615196759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":267816,"user_name":"dingtingli","can_delete":false,"product_type":"c1","uid":1014522,"ip_address":"","ucode":"13725160E4713F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7a/fa/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1607940323,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"23082776803","product_id":100023201,"comment_content":"能把复杂的事情讲得清晰明了也是需要天赋的。这门课只感受到了老师的知识面很广，完全无法清晰地理解讲的内容。","like_count":5,"discussions":[{"author":{"id":1133464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4b/98/20ff3f6a.jpg","nickname":"这个需求做不了","note":"","ucode":"2BC0A306550D45","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584835,"discussion_content":"赞同","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661152345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"山东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106616,"user_name":"x","can_delete":false,"product_type":"c1","uid":1472233,"ip_address":"","ucode":"75FA829EA820AB","user_header":"https://static001.geekbang.org/account/avatar/00/16/76/e9/73ed6cc1.jpg","comment_is_top":false,"comment_ctime":1561357312,"is_pvip":true,"replies":[{"id":"58937","content":"不是“没有this”，是“使用定义时的this”。<br>也不是“所以不能用作构造函数”，没有这个因果关系。","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1574221949,"ip_address":"","comment_id":106616,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23036193792","product_id":100023201,"comment_content":"es6中箭头函数是没有this的吧，所以他不能用作构造函数，他的this取决于外部环境","like_count":5,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455155,"discussion_content":"不是“没有this”，是“使用定义时的this”。\n也不是“所以不能用作构造函数”，没有这个因果关系。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574221949,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93068,"user_name":"study","can_delete":false,"product_type":"c1","uid":1378133,"ip_address":"","ucode":"078517D3EF2413","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIEODRricvc32UpO3PxoPrFBDgmoGXdiagcibNh0outmZicXFg1icV4c5ibSknc4be3PWUPsIa3OjdMmlwA/132","comment_is_top":false,"comment_ctime":1557388753,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23032225233","product_id":100023201,"comment_content":"@奥斯特洛夫斯基<br>var和function，只是提升声明，代码提升完成是下面的代码：<br>var a,b;<br>function foo(){};<br>a = 1;<br>foo();<br>b = 2;<br>所以a的值为1，b为undefined","like_count":5},{"had_liked":false,"id":232837,"user_name":"我五岁了呀","can_delete":false,"product_type":"c1","uid":1234802,"ip_address":"","ucode":"8B45200F1C65E0","user_header":"https://static001.geekbang.org/account/avatar/00/12/d7/72/deec1d6b.jpg","comment_is_top":false,"comment_ctime":1594126696,"is_pvip":true,"discussion_count":2,"race_medal":0,"score":"14479028584","product_id":100023201,"comment_content":"没太理解，外层词法环境（outer lexical environment）是指的什么？","like_count":3,"discussions":[{"author":{"id":2920167,"avatar":"","nickname":"红色1","note":"","ucode":"3A68114C8A66CE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554692,"discussion_content":"ES2018的定义词法环境是执行上下文的组成部分，包含函数运行环境的变量值和this值。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646553753,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2746819,"avatar":"https://static001.geekbang.org/account/avatar/00/29/e9/c3/62e63a4f.jpg","nickname":"Geek_3b2d8c","note":"","ucode":"77BBDC7294B345","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394356,"discussion_content":"以一个函数为例，outer lexical enviroment 指的是除了函数本身外，函数上一级的词法环境。他是一个栈的结构，要上层查找，所以要记录了外层的环境","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631850527,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":165888,"user_name":"肉卷","can_delete":false,"product_type":"c1","uid":1377895,"ip_address":"","ucode":"DD5CFC170F61BD","user_header":"https://static001.geekbang.org/account/avatar/00/15/06/67/a78a98fe.jpg","comment_is_top":false,"comment_ctime":1577340587,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14462242475","product_id":100023201,"comment_content":"var a = 1;<br>foo();<br><br>在别处定义了 foo：<br><br>var b = 2;<br>function foo(){<br>    console.log(b); &#47;&#47; 2<br>    console.log(a); &#47;&#47; error<br>}<br>这个例子，改成如下例子应该更容易让人理解一些：<br>var a = 1<br>  function test() {<br>    var b = 2<br><br>    test1()<br>  }<br>  function test1() {<br>    console.log(2, a, b);<br>  }<br>  test()","like_count":3,"discussions":[{"author":{"id":3166573,"avatar":"https://static001.geekbang.org/account/avatar/00/30/51/6d/e4aed428.jpg","nickname":"%","note":"","ucode":"C5FC6B541307AE","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588802,"discussion_content":"test1函数只能找到自己内部的变量和全局变量，拿不到test函数内的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1664117107,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105268,"user_name":"jacklovepdf","can_delete":false,"product_type":"c1","uid":1501300,"ip_address":"","ucode":"64CF166C45908B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ26xdibLibk37rdrIA3zStsayOo9b0SGiasibNGfic6n2EIJiba1ptZOtWqV797wkszdjDM8aQkz1A2vibw/132","comment_is_top":false,"comment_ctime":1560951395,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14445853283","product_id":100023201,"comment_content":"按照老师的理解，应该少了一种，类的方法也是可以加async的，亲测有效。","like_count":3},{"had_liked":false,"id":77402,"user_name":"存","can_delete":false,"product_type":"c1","uid":1293900,"ip_address":"","ucode":"66DDE719450B77","user_header":"https://static001.geekbang.org/account/avatar/00/13/be/4c/8d19d90a.jpg","comment_is_top":false,"comment_ctime":1552919180,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14437821068","product_id":100023201,"comment_content":"var a = 1;<br>foo();<br><br>在别处定义了 foo：<br><br>var b = 2;<br>function foo(){<br>    console.log(b); &#47;&#47; 2<br>    console.log(a); &#47;&#47; error<br>}<br>为什么我执行出来是2，1","like_count":3},{"had_liked":false,"id":74097,"user_name":"itgou","can_delete":false,"product_type":"c1","uid":1394159,"ip_address":"","ucode":"4F6FFA0DD1ACBA","user_header":"https://wx.qlogo.cn/mmopen/vi_32/pTZS48zWWAhI0zGXrib8s124HSenCS2FTDD0r4SKCqw2ub4adicI4x2wTeH7bHdlsl8QwxeVmzTGs1PIImURxxPg/132","comment_is_top":false,"comment_ctime":1552103251,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14437005139","product_id":100023201,"comment_content":"var a = 1;<br>foo();<br><br>在别处定义了 foo：<br><br>var b = 2;<br>function foo(){<br>    console.log(b); &#47;&#47; 2<br>    console.log(a); &#47;&#47; error<br>}<br>这段代码我在chrome上执行出来是undefined,1.<br>我是写在一个js文件中，然后通过HTML的script引入，不知道老师说的在别处定义是什么意思，是写在两个js文件吗？<br><br>如果是两个文件，HTML中引入文件的顺序不同，会有不同的结果，一种报错，一种两个值都正常打印，我都试了的，总之怎么也不会有老师说的那种结果。<br><br>请老师看看是不是我哪里理解错了，还是老师写错了","like_count":3},{"had_liked":false,"id":71768,"user_name":"Geek_376ed4","can_delete":false,"product_type":"c1","uid":1394751,"ip_address":"","ucode":"40D0BA99C58ACE","user_header":"https://static001.geekbang.org/account/avatar/00/15/48/3f/3ff67fb2.jpg","comment_is_top":false,"comment_ctime":1551428602,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14436330490","product_id":100023201,"comment_content":"&#47;&#47; foo.js<br>var b=2;<br>module.exports = function() {<br> console.log(b);&#47;&#47;2<br> console.log(a);&#47;&#47;error<br><br>};<br><br>var foo = require(&quot;.&#47;foo.js&quot;);<br><br>var a=1;<br><br>foo();<br><br>","like_count":3},{"had_liked":false,"id":71300,"user_name":"zhangbao","can_delete":false,"product_type":"c1","uid":1383052,"ip_address":"","ucode":"9CA3D465BFBBF1","user_header":"https://static001.geekbang.org/account/avatar/00/15/1a/8c/d91b01a6.jpg","comment_is_top":false,"comment_ctime":1551317334,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14436219222","product_id":100023201,"comment_content":"老师，您好，看完文章后，我有几个问题：<br><br>1.  代码段<br><br>```<br>class C {<br>    showThis() {<br>        console.log(this);<br>    }<br>}<br>var o = new C();<br><br>o.showThis(); &#47;&#47; 这里打印的 this 应该是 o 吗？<br>```<br><br>2. 介绍函数时提到了“方法”，定义是“在 class 中定义的函数”。但是举代码例子时，举了对象方法的例子。方法定义成“作为属性值的函数”，是不是更贴切一点呢？<br><br>3. 执行代码段<br><br>```<br>var a = 1;<br>foo();<br><br>&#47;&#47; 在别处定义了 foo：<br><br>var b = 2;<br>function foo(){<br>    console.log(b); &#47;&#47; 2<br>    console.log(a); &#47;&#47; error<br>}<br>```<br><br>后，控制台，打印出的 b 是 undefined，a 是 1。跟老师描述的不一样，是我理解错了吗？<br><br>麻烦老师您解答一下，谢谢啦！","like_count":3,"discussions":[{"author":{"id":1377895,"avatar":"https://static001.geekbang.org/account/avatar/00/15/06/67/a78a98fe.jpg","nickname":"肉卷","note":"","ucode":"DD5CFC170F61BD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":102396,"discussion_content":"var a = 1\nfunction test() {\nvar b = 2\ntest1()\n}\nfunction test1() {\nconsole.log(2, a, b); //Uncaught ReferenceError: b is not defined\n}\ntest()\n这个你应该就可以理解了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1577343594,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139910,"user_name":"奋奋","can_delete":false,"product_type":"c1","uid":1379169,"ip_address":"","ucode":"6E262FCC910BA1","user_header":"https://static001.geekbang.org/account/avatar/00/15/0b/61/882eb821.jpg","comment_is_top":false,"comment_ctime":1570764886,"is_pvip":false,"replies":[{"id":"54029","content":"没错","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1570772181,"ip_address":"","comment_id":139910,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10160699478","product_id":100023201,"comment_content":"老师我这样对Reference的理解对吗？？？<br>showThis();               &#47;&#47; Reference中的对象是global<br>(false || showThis)()   &#47;&#47;  Reference由于运算而被解引用，<br>                                    然后触发this机制[[thisMode]]私有属性的global取值<br>","like_count":2,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470169,"discussion_content":"没错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570772181,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":257179,"user_name":"答案","can_delete":false,"product_type":"c1","uid":1386875,"ip_address":"","ucode":"E2AE84D5C84DB8","user_header":"https://static001.geekbang.org/account/avatar/00/15/29/7b/864f593c.jpg","comment_is_top":false,"comment_ctime":1603873455,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5898840751","product_id":100023201,"comment_content":"奥斯特洛夫斯基的懵","like_count":1},{"had_liked":false,"id":239942,"user_name":"杜森垚","can_delete":false,"product_type":"c1","uid":1230301,"ip_address":"","ucode":"71DEA59348CE09","user_header":"https://static001.geekbang.org/account/avatar/00/12/c5/dd/5a482cab.jpg","comment_is_top":false,"comment_ctime":1596698274,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5891665570","product_id":100023201,"comment_content":"  function cutThis()<br>  {<br>    var b = 2;<br>    function foo()<br>    {<br>      console.log(b); &#47;&#47; 2<br>      console.log(a); &#47;&#47; error<br>    }<br><br>    void function()<br>    {<br>      var a = 1;<br>      foo();<br>    }();<br>  }","like_count":1},{"had_liked":false,"id":179911,"user_name":"呜呼千里快哉风","can_delete":false,"product_type":"c1","uid":1438112,"ip_address":"","ucode":"0D462FC4BF9C3C","user_header":"https://static001.geekbang.org/account/avatar/00/15/f1/a0/bb40ff4f.jpg","comment_is_top":false,"comment_ctime":1582120741,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5877088037","product_id":100023201,"comment_content":"哈哈","like_count":1},{"had_liked":false,"id":156300,"user_name":"Geek_fc1551","can_delete":false,"product_type":"c1","uid":1738150,"ip_address":"","ucode":"517DEBD42CF473","user_header":"","comment_is_top":false,"comment_ctime":1574852563,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5869819859","product_id":100023201,"comment_content":"winter老师普通函数不是方法吗？","like_count":1,"discussions":[{"author":{"id":1123263,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/bf/071dbb60.jpg","nickname":"Nodreame","note":"","ucode":"E2CF7D8B1341E9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":155466,"discussion_content":"老师的描述应该和《JS Ninja》第三还是第四章的定义一样，直接字面量声明的叫函数，在类中定义的叫方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580232418,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82997,"user_name":"Mr.杨","can_delete":false,"product_type":"c1","uid":1469993,"ip_address":"","ucode":"293E24BFBD450C","user_header":"https://static001.geekbang.org/account/avatar/00/16/6e/29/6fbe6d66.jpg","comment_is_top":false,"comment_ctime":1554368036,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5849335332","product_id":100023201,"comment_content":"默认this  就是普通方法的this<br>隐式this 变量接收方法后的this 会发生隐式指向错误<br>显式this 对象.方法的this<br>固定this call apply bind 的this<br>分为四种","like_count":1},{"had_liked":false,"id":75358,"user_name":"渭河","can_delete":false,"product_type":"c1","uid":1376031,"ip_address":"","ucode":"8983C4DFAED2A6","user_header":"https://static001.geekbang.org/account/avatar/00/14/ff/1f/4f927519.jpg","comment_is_top":false,"comment_ctime":1552382992,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5847350288","product_id":100023201,"comment_content":"var a = 1;<br>foo();<br><br>var b = 2;<br>function foo(){<br>    console.log(b); &#47;&#47; 2<br>    console.log(a); &#47;&#47; 输出并不是老师说的error而是1<br>}<br>为什么存在这种情况","like_count":1,"discussions":[{"author":{"id":2716151,"avatar":"https://static001.geekbang.org/account/avatar/00/29/71/f7/a70c8cce.jpg","nickname":"二货仙人","note":"","ucode":"112F20FCAF5C6C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386105,"discussion_content":"var 的变量提升","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627403210,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72555,"user_name":"乃乎","can_delete":false,"product_type":"c1","uid":1393061,"ip_address":"","ucode":"03F587A06051AC","user_header":"https://static001.geekbang.org/account/avatar/00/15/41/a5/16c615cc.jpg","comment_is_top":false,"comment_ctime":1551667504,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5846634800","product_id":100023201,"comment_content":"`[[thisMode]]` 这个讲的很棒","like_count":1},{"had_liked":false,"id":72081,"user_name":"Rushan-Chen","can_delete":false,"product_type":"c1","uid":1374410,"ip_address":"","ucode":"CE514A1205C61D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/XSnxM4uP67kdzzCRW8KxhS5jkHiaaSrgkuLh1Z5BxawvQase46pbGAL4Bngmd3eFHckQml6zexyukFoWpeNENTg/132","comment_is_top":false,"comment_ctime":1551516450,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5846483746","product_id":100023201,"comment_content":"@阿成 我试了下你说的第二种方法，但是在全局里，只要在foo调用之前定义了a，a就可以被访问到：<br>```js<br>var foo = (function() {<br>  let b = 2;<br>  return function() {<br>    console.log(b);<br>    console.log(a);<br>  };<br>})();<br><br>let a = 1;<br>foo();<br>&#47;&#47; 2<br>&#47;&#47; 1<br>```<br>想问你说的第2种方法，你是怎么实现的？（虽然你可能不会看到😂）<br>","like_count":1},{"had_liked":false,"id":71416,"user_name":"拼命十一郎","can_delete":false,"product_type":"c1","uid":1187075,"ip_address":"","ucode":"7E7A258765C6BD","user_header":"https://static001.geekbang.org/account/avatar/00/12/1d/03/adc3cc66.jpg","comment_is_top":false,"comment_ctime":1551337241,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5846304537","product_id":100023201,"comment_content":"var a = 1;<br>foo();<br><br>在别处定义了 foo：<br><br>var b = 2;<br>function foo(){<br>    console.log(b); &#47;&#47; 2<br>    console.log(a); &#47;&#47; error<br>}<br><br><br>js里，调用函数的时候，如果上面没有找到函数定义，会向下搜索用function开头定义的函数，但是其他的代码是不会识别的，所以我觉得执行函数foo()时，向下找到了foo()函数的定义，执行内部内容，这时已知的只有a＝1，b的值还没有定义，所以console.log(b) undefined，console.log(a)＝1。还是说这里的在别处定义有什么条件么？","like_count":1},{"had_liked":false,"id":71248,"user_name":"Scorpio","can_delete":false,"product_type":"c1","uid":1374652,"ip_address":"","ucode":"2DF4DEC831D4C0","user_header":"https://static001.geekbang.org/account/avatar/00/14/f9/bc/cbc0207b.jpg","comment_is_top":false,"comment_ctime":1551312815,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5846280111","product_id":100023201,"comment_content":"自从用了箭头后，都很少使用call apply bind了。。。","like_count":1},{"had_liked":false,"id":71232,"user_name":"CC","can_delete":false,"product_type":"c1","uid":1021014,"ip_address":"","ucode":"2B732860C4231B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/94/56/4b8395f6.jpg","comment_is_top":false,"comment_ctime":1551297929,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5846265225","product_id":100023201,"comment_content":"之前对“切换上下文”的具体步骤没有了解，进而不了解 this 的机制。豁然开朗。","like_count":1},{"had_liked":false,"id":355170,"user_name":"这个需求做不了","can_delete":false,"product_type":"c1","uid":1133464,"ip_address":"山东","ucode":"2BC0A306550D45","user_header":"https://static001.geekbang.org/account/avatar/00/11/4b/98/20ff3f6a.jpg","comment_is_top":false,"comment_ctime":1661152363,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1661152363","product_id":100023201,"comment_content":"能把复杂的事情讲得清晰明了也是需要天赋的。","like_count":0},{"had_liked":false,"id":355169,"user_name":"这个需求做不了","can_delete":false,"product_type":"c1","uid":1133464,"ip_address":"山东","ucode":"2BC0A306550D45","user_header":"https://static001.geekbang.org/account/avatar/00/11/4b/98/20ff3f6a.jpg","comment_is_top":false,"comment_ctime":1661152052,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1661152052","product_id":100023201,"comment_content":"var a = 1;<br>foo();<br><br><br>var b = 2;<br>function foo(){<br>    console.log(b); &#47;&#47; 2<br>    console.log(a); &#47;&#47; error<br>}<br>为什么我执行出来是2，1","like_count":0},{"had_liked":false,"id":342182,"user_name":"凌云","can_delete":false,"product_type":"c1","uid":1670370,"ip_address":"","ucode":"DDE0911E380B7C","user_header":"https://static001.geekbang.org/account/avatar/00/19/7c/e2/5d271683.jpg","comment_is_top":false,"comment_ctime":1650088146,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650088146","product_id":100023201,"comment_content":"我觉得我行，学完之后彻底不行了","like_count":0},{"had_liked":false,"id":328585,"user_name":"张煜林","can_delete":false,"product_type":"c1","uid":2563539,"ip_address":"","ucode":"4FAB553EDC5142","user_header":"https://static001.geekbang.org/account/avatar/00/27/1d/d3/19c57dc5.jpg","comment_is_top":false,"comment_ctime":1640780814,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640780814","product_id":100023201,"comment_content":"这一节的例子有点迷！！！","like_count":0},{"had_liked":false,"id":282568,"user_name":"闲闲","can_delete":false,"product_type":"c1","uid":1637571,"ip_address":"","ucode":"B2099BDCFF6191","user_header":"https://static001.geekbang.org/account/avatar/00/18/fc/c3/0991edfc.jpg","comment_is_top":false,"comment_ctime":1615302877,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615302877","product_id":100023201,"comment_content":"Day3.9<br>本文主要讲了this的指向问题，感觉不是很清晰，提炼几点自己觉得有用的：<br>1、this的指向和函数的调用有关系和函数的定义没有关系<br>2、箭头函数不会改变this的指向<br>3、箭头函数嵌套的话，this是指向外层的","like_count":0},{"had_liked":false,"id":280476,"user_name":"optimistic","can_delete":false,"product_type":"c1","uid":1613641,"ip_address":"","ucode":"A304345D163D44","user_header":"https://static001.geekbang.org/account/avatar/00/18/9f/49/2d502a32.jpg","comment_is_top":false,"comment_ctime":1614228532,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1614228532","product_id":100023201,"comment_content":"说实话这样的水平敢拿出来重学前端还是差点意思的","like_count":0,"discussions":[{"author":{"id":2716151,"avatar":"https://static001.geekbang.org/account/avatar/00/29/71/f7/a70c8cce.jpg","nickname":"二货仙人","note":"","ucode":"112F20FCAF5C6C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386106,"discussion_content":"呵呵呵  你了解一下 winter","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627403294,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1613641,"avatar":"https://static001.geekbang.org/account/avatar/00/18/9f/49/2d502a32.jpg","nickname":"optimistic","note":"","ucode":"A304345D163D44","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2716151,"avatar":"https://static001.geekbang.org/account/avatar/00/29/71/f7/a70c8cce.jpg","nickname":"二货仙人","note":"","ucode":"112F20FCAF5C6C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386301,"discussion_content":"兄弟，winter很强不代表写得好，不要带着主观去看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627521721,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":386106,"ip_address":""},"score":386301,"extra":""}]}]},{"had_liked":false,"id":271518,"user_name":"River","can_delete":false,"product_type":"c1","uid":1610800,"ip_address":"","ucode":"214AD65EE2CB23","user_header":"https://static001.geekbang.org/account/avatar/00/18/94/30/1a95a1d8.jpg","comment_is_top":false,"comment_ctime":1609677257,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1609677257","product_id":100023201,"comment_content":"这是谁这么喜欢小猫啊~~~","like_count":0},{"had_liked":false,"id":255803,"user_name":"若如","can_delete":false,"product_type":"c1","uid":1069772,"ip_address":"","ucode":"315D1560046129","user_header":"https://static001.geekbang.org/account/avatar/00/10/52/cc/15e57326.jpg","comment_is_top":false,"comment_ctime":1603434146,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603434146","product_id":100023201,"comment_content":"感觉 this 关键字的机制 这一章节并没有讲的非常明白，拉了一些概念看的云里雾里","like_count":0},{"had_liked":false,"id":251458,"user_name":"木讷","can_delete":false,"product_type":"c1","uid":1381952,"ip_address":"","ucode":"704DBFB747B597","user_header":"https://static001.geekbang.org/account/avatar/00/15/16/40/7a008cb7.jpg","comment_is_top":false,"comment_ctime":1601581713,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1601581713","product_id":100023201,"comment_content":"例：<br>function foo(a, b, c){ console.log(this); console.log(a, b, c);}<br>const nf = new foo(1, 2, 3);<br><br>输出<br>foo {} （this 是函数本身，而不是实例，这里比较意外，求解答）<br>1 2 3","like_count":0,"discussions":[{"author":{"id":1381952,"avatar":"https://static001.geekbang.org/account/avatar/00/15/16/40/7a008cb7.jpg","nickname":"木讷","note":"","ucode":"704DBFB747B597","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310096,"discussion_content":"补充一下，this实际上应该是foo作为构造函数的空对象。new的时候会建一个新对象，this指向这个对象。如有错误，望指正。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601615621,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":249879,"user_name":"filter","can_delete":false,"product_type":"c1","uid":1064585,"ip_address":"","ucode":"4559F7E9638E06","user_header":"https://static001.geekbang.org/account/avatar/00/10/3e/89/ce5c0938.jpg","comment_is_top":false,"comment_ctime":1600841161,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600841161","product_id":100023201,"comment_content":"两种环境：<br>严格模式和非严格模式<br>两种情况：<br>箭头函数和普通函数<br><br>就没了。。","like_count":0},{"had_liked":false,"id":244242,"user_name":"亮出","can_delete":false,"product_type":"c1","uid":1014289,"ip_address":"","ucode":"A7673283D03656","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7a/11/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1598439691,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598439691","product_id":100023201,"comment_content":"用的时候不清楚，就用 console.log(this)打印出来看看吧","like_count":0},{"had_liked":false,"id":239995,"user_name":"Geek_034d6f","can_delete":false,"product_type":"c1","uid":2063554,"ip_address":"","ucode":"F6A30C4DBD433B","user_header":"","comment_is_top":false,"comment_ctime":1596708125,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1596708125","product_id":100023201,"comment_content":"老师，你好<br>  我想问一下关于那个切换上下文什么问能访问b，不能访问a，就是切换上下文了啊","like_count":0,"discussions":[{"author":{"id":1087879,"avatar":"https://static001.geekbang.org/account/avatar/00/10/99/87/98ebb20e.jpg","nickname":"dao","note":"","ucode":"4181FB270462CF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374340,"discussion_content":"两个不同的词法环境，b 在 定义时词法环境，a 在 运行时词法环境。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621143447,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239375,"user_name":"谢衣之徒","can_delete":false,"product_type":"c1","uid":1834121,"ip_address":"","ucode":"4E2A8DC41D4DB2","user_header":"https://static001.geekbang.org/account/avatar/00/1b/fc/89/d8a1f34e.jpg","comment_is_top":false,"comment_ctime":1596516468,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1596516468","product_id":100023201,"comment_content":"class C {<br>    showThis() {<br>        console.log(this);<br>    }<br>}<br>var o = new C();<br>var showThis = o.showThis;<br><br>showThis(); &#47;&#47; undefined<br> o.showThis(); &#47;&#47; o<br><br><br><br>function C() {<br><br>}<br>C.prototype.showThis = function () {<br>    console.log(this)<br>}<br><br>var o = new C();<br><br>var showThis = o.showThis;<br>showThis();&#47;&#47;global<br>o.showThis();&#47;&#47; o  <br>请问为什么 上面的class的形式，showThis为什么是undefined呢，用原型的就是global","like_count":0,"discussions":[{"author":{"id":1087879,"avatar":"https://static001.geekbang.org/account/avatar/00/10/99/87/98ebb20e.jpg","nickname":"dao","note":"","ucode":"4181FB270462CF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374341,"discussion_content":"你试试严格模式执行，&#34;use strict&#34;;。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621143571,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233324,"user_name":"　","can_delete":false,"product_type":"c1","uid":1326837,"ip_address":"","ucode":"70A015978A3DFC","user_header":"https://static001.geekbang.org/account/avatar/00/14/3e/f5/ec32fd24.jpg","comment_is_top":false,"comment_ctime":1594287117,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594287117","product_id":100023201,"comment_content":"“这里的 foo 能够访问 b（定义时词法环境），却不能访问 a（执行时的词法环境），这就是执行上下文的切换机制了。”<br><br>这里的定义词法环境的意思是：b定义在了跟foo函数同一个词法环境里面。<br>执行时的词法环境的意思是：a并没有定义在跟b同一个词法环境里面，引用了a(执行了a)，导致报错，是吗？","like_count":0},{"had_liked":false,"id":233323,"user_name":"　","can_delete":false,"product_type":"c1","uid":1326837,"ip_address":"","ucode":"70A015978A3DFC","user_header":"https://static001.geekbang.org/account/avatar/00/14/3e/f5/ec32fd24.jpg","comment_is_top":false,"comment_ctime":1594286883,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594286883","product_id":100023201,"comment_content":"<br>var a = 1;<br>foo();<br><br>在别处定义了foo：<br><br>var b = 2;<br>function foo(){<br>    console.log(b); &#47;&#47; 2<br>    console.log(a); &#47;&#47; error<br>}<br>关于这部分，如果按照老师的答案(2&#47;error)的话，所谓的在别处定义的foo()应该是定义在：<br>var a = 1;<br>foo();<br>之前的<br>像这样：<br>  var b = 2;<br>  function foo() {<br>    console.log(b);<br>    console.log(a);<br>  }<br><br>  void function() {<br>    var a = 1;<br>    foo();<br>  }();<br><br>这样就会打印出 2 和 a is not defined 了","like_count":0},{"had_liked":false,"id":232779,"user_name":"Andy","can_delete":false,"product_type":"c1","uid":1398031,"ip_address":"","ucode":"A4F9B88752C5BD","user_header":"https://static001.geekbang.org/account/avatar/00/15/55/0f/72d1e265.jpg","comment_is_top":false,"comment_ctime":1594115588,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594115588","product_id":100023201,"comment_content":"异步生成器函数的定义中 *的位置好像不太对，会报错，应该是：<br>async function* foo(){ }","like_count":0},{"had_liked":false,"id":227646,"user_name":"ssaylo","can_delete":false,"product_type":"c1","uid":1016394,"ip_address":"","ucode":"3CBDC64385BEE9","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIYg80llu8nzJn5x394p9WsKuac5qgCU506tBXIqUvTbe19YYMLEzo46rf2FQJvNLzcx9lnmYjDeg/132","comment_is_top":false,"comment_ctime":1592448605,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592448605","product_id":100023201,"comment_content":"我...居然，全看懂了。。。说明下一步，是不是要去把 ECMA-262 啃了？😂😂😂","like_count":0},{"had_liked":false,"id":217005,"user_name":"小只Linxiaozi","can_delete":false,"product_type":"c1","uid":1955477,"ip_address":"","ucode":"A3A0505F3BE048","user_header":"https://static001.geekbang.org/account/avatar/00/1d/d6/95/bb5e4ea1.jpg","comment_is_top":false,"comment_ctime":1589384040,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1589384040","product_id":100023201,"comment_content":" (a, b, c) =&gt; {<br>    console.log(this);<br>    console.log(a, b, c);<br>}<br>foo.bind({k:1}, 1, 2, 3)();<br>&#47;&#47;{k: 1}<br>&#47;&#47; 1 2 3<br>我用浏览器是了一下，箭头函数用bind传指定的this对象，也还是有改变this，跟老师上文说的有趣的是，call、bind 和 apply 用于不接受 this 的函数类型如箭头、class 都不会报错。这时候，它们无法实现改变 this 的能力，但是可以实现传参。“”不一样，为什么呢？","like_count":0,"discussions":[{"author":{"id":1961947,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/ricKzCoviaZX5c3sGia38gWINUQVdPl7j2lSY5SDIKCpbWUItjrrv38yxdGmAwaShk7SlVCtk2uxiaCGkOqbB0gWgA/132","nickname":"Adrien","note":"","ucode":"703A2B5116ADD4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":268498,"discussion_content":"const foo = (a, b, c) => {\n    console.log(this);\n    console.log(a, b, c);\n};\nfoo.bind({K:1}, 1,2,3)();\n// global\n// 1 2 3\n我的执行结果是这样的，你的执行结果不符合预期 我觉得是因为你的foo并不是上面的箭头函数。可能是你之前定义的普通函数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589791494,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":205235,"user_name":"曙光","can_delete":false,"product_type":"c1","uid":1476450,"ip_address":"","ucode":"04D65BF7F19845","user_header":"https://static001.geekbang.org/account/avatar/00/16/87/62/f99b5b05.jpg","comment_is_top":false,"comment_ctime":1586574983,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586574983","product_id":100023201,"comment_content":"两种方式使用箭头函数，b是通过普通匿名函数调用箭头函数，所以箭头函数的this等于普通函数的引用对象；下面是直接调用箭头函数，它的上下文是window<br>let obj={<br>\t\ta: 10,<br>\t\tb: function(n){<br>\t\t\tlet f=(n)=&gt;{<br>\t\t\t\treturn n+this.a<br>\t\t\t}<br>\t\t\treturn f(n)<br>\t\t},<br><br>\t\te: (n)=&gt;{<br>\t\t\t\tconsole.log(this);<br>\t\t\t\treturn n<br>\t\t\t}<br>}<br><br>console.log(obj.b(1)); &#47;&#47;11<br>console.log(obj.e(1)); &#47;&#47;this是window","like_count":0},{"had_liked":false,"id":205095,"user_name":"曙光","can_delete":false,"product_type":"c1","uid":1476450,"ip_address":"","ucode":"04D65BF7F19845","user_header":"https://static001.geekbang.org/account/avatar/00/16/87/62/f99b5b05.jpg","comment_is_top":false,"comment_ctime":1586527550,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586527550","product_id":100023201,"comment_content":"箭头函数取上下文环境，最外层this.name=&quot;chunlynn&quot;<br>普通函数取调用它的引用，name: &#39;linda&#39;, 然后箭头取上下文环境，最终this.name=&quot;linda&quot;<br>    var name = &quot;chunlynn&quot;;<br>    var book = {<br>        name: &#39;linda&#39;,<br>        init:  ()=&gt; {console.log(this.name)}<br>    }<br>    book.init(); &#47;&#47;output:chunlynn<br>    <br>    var book2 = {<br>        name: &#39;linda&#39;,<br>        init:  function(){return ()=&gt; {console.log(this.name)}}<br>    }<br>\t<br>    book2.init()(); &#47;&#47;output:linda","like_count":0},{"had_liked":false,"id":175734,"user_name":"头皮发麻","can_delete":false,"product_type":"c1","uid":1386634,"ip_address":"","ucode":"F21E9380397E60","user_header":"","comment_is_top":false,"comment_ctime":1580810673,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580810673","product_id":100023201,"comment_content":"为啥我得到的o.showThis()是C类（构造函数C）","like_count":0},{"had_liked":false,"id":165542,"user_name":"蔡鑫","can_delete":false,"product_type":"c1","uid":1540993,"ip_address":"","ucode":"F9B9614CDBC01A","user_header":"https://static001.geekbang.org/account/avatar/00/17/83/81/473b845f.jpg","comment_is_top":false,"comment_ctime":1577257007,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577257007","product_id":100023201,"comment_content":"函数创建新的执行上下文中的词法环境记录时，会根据 [[thisMode]] 来标记新纪录的 [[ThisBindingStatus]] 私有属性。代码执行遇到 this 时，会逐层检查当前词法环境记录中的 [[ThisBindingStatus]]，当找到有 this 的环境记录时获取 this 的值。 那么执行箭头函数产生的词法环境记录时，[[thisMode]]的属性值是lexical，根据 [[thisMode]] 来标记新纪录的 [[ThisBindingStatus]] 私有属性是什么？此外， 代码执行遇到 this 时，逐层检查当前词法环境记录中的 [[ThisBindingStatus]]，找到是什么？（文中说是找不到，然后往外层找。那是不是箭头函数标记的新纪录[[ThisBindingStatus]]私有属性为空？）谢谢！","like_count":0},{"had_liked":false,"id":140668,"user_name":"孙郅竣","can_delete":false,"product_type":"c1","uid":1574034,"ip_address":"","ucode":"B1AF704433A986","user_header":"https://static001.geekbang.org/account/avatar/00/18/04/92/345d2382.jpg","comment_is_top":false,"comment_ctime":1571024476,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571024476","product_id":100023201,"comment_content":"class C {<br>    showThis() {<br>        console.log(this);<br>    }<br>}<br>var o = new C();<br>var showThis = o.showThis;<br><br>showThis(); &#47;&#47; undefined<br>o.showThis(); &#47;&#47; o<br>&#47;*************************提问***********************************************&#47;<br>showThis(); &#47;&#47; 输出undefined 是因为这里的this指向全局，但是class为严格模式，所以输出undefined吗","like_count":0},{"had_liked":false,"id":127619,"user_name":"卡洛斯(๑Ő௰Ő๑)","can_delete":false,"product_type":"c1","uid":1330852,"ip_address":"","ucode":"6F311BF03B76FD","user_header":"https://static001.geekbang.org/account/avatar/00/14/4e/a4/433305bb.jpg","comment_is_top":false,"comment_ctime":1566749867,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566749867","product_id":100023201,"comment_content":"[[thisMode]] 私有属性有三个取值。<br><br>-   lexical：表示从上下文中（箭头函数执行时的外层环境）找 this，这对应了箭头函数。<br>    <br>-   global：表示当 this 为 undefined 时，取全局对象，否则 this 就是调用时传入的值（引用类型中的对象），这刚好对应了普通函数。<br>    <br>-   strict：当严格模式时使用，不管 this 有没有定义，this 都是严格按照调用时传入的值（引用类型中的对象），可能为 null 或者 undefined。","like_count":0},{"had_liked":false,"id":121190,"user_name":"dennisleung","can_delete":false,"product_type":"c1","uid":1470104,"ip_address":"","ucode":"607B8F14A0545D","user_header":"https://static001.geekbang.org/account/avatar/00/16/6e/98/44e278ff.jpg","comment_is_top":false,"comment_ctime":1565073336,"is_pvip":false,"replies":[{"id":"54066","content":"你不需要考虑 箭头函数或者async函数跟new搭配会发生什么了","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1570774666,"ip_address":"","comment_id":121190,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565073336","product_id":100023201,"comment_content":"&gt; 我们可以看到，仅普通函数和类能够跟 new 搭配使用，这倒是给我们省去了不少麻烦。<br><br>老师请问这里是省去了什么麻烦呢？","like_count":0,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461672,"discussion_content":"你不需要考虑 箭头函数或者async函数跟new搭配会发生什么了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570774666,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112086,"user_name":"lsy","can_delete":false,"product_type":"c1","uid":1581063,"ip_address":"","ucode":"A9FA51A302C97E","user_header":"","comment_is_top":false,"comment_ctime":1562665729,"is_pvip":false,"replies":[{"id":"58916","content":"取global啊","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1574220724,"ip_address":"","comment_id":112086,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562665729","product_id":100023201,"comment_content":"[[ThisMode]] 是 global （普通函数）的时候，是从哪里取的 this 值呢","like_count":0,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457569,"discussion_content":"取global啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574220724,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111419,"user_name":"东","can_delete":false,"product_type":"c1","uid":1144627,"ip_address":"","ucode":"CEE6AC611E351B","user_header":"https://static001.geekbang.org/account/avatar/00/11/77/33/121176bb.jpg","comment_is_top":false,"comment_ctime":1562555567,"is_pvip":false,"replies":[{"id":"58922","content":"不会","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1574221158,"ip_address":"","comment_id":111419,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562555567","product_id":100023201,"comment_content":"var o = {<br>     foo: function() {console.log(11111)}<br>}<br>new o.foo() &#47;&#47;11111<br>对象方法用new 调用不会报错呢？","like_count":0,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457346,"discussion_content":"不会","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574221158,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106580,"user_name":"咲夜","can_delete":false,"product_type":"c1","uid":1547472,"ip_address":"","ucode":"4B061D4D551640","user_header":"https://static001.geekbang.org/account/avatar/00/17/9c/d0/f0dc43c2.jpg","comment_is_top":false,"comment_ctime":1561347938,"is_pvip":false,"replies":[{"id":"58939","content":"就是一个普通的函数的行为。","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1574222000,"ip_address":"","comment_id":106580,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1561347938","product_id":100023201,"comment_content":"不太能理解为何下面这段代码中 showThis 为 undefined<br><br>class C {<br>    showThis() {<br>        console.log(this);<br>    }<br>}<br>var o = new C();<br>var showThis = o.showThis;<br><br>showThis(); &#47;&#47; undefined<br>o.showThis(); &#47;&#47; o","like_count":0,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455145,"discussion_content":"就是一个普通的函数的行为。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574222000,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1362996,"avatar":"https://static001.geekbang.org/account/avatar/00/14/cc/34/f8cf3454.jpg","nickname":"稻草人","note":"","ucode":"AE05F7EB2FB5CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2118,"discussion_content":"阮一峰的教程里面有说：\n“class 内部是严格模式，所以 this 实际指向的是undefined”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563268486,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":102089,"user_name":"jxs1211","can_delete":false,"product_type":"c1","uid":1101006,"ip_address":"","ucode":"B7F1F2D84389E7","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKELX1Rd1vmLRWibHib8P95NA87F4zcj8GrHKYQL2RcLDVnxNy1ia2geTWgW6L2pWn2kazrPNZMRVrIg/132","comment_is_top":false,"comment_ctime":1560133891,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560133891","product_id":100023201,"comment_content":"测试通过class方法+this的方式，得到的this是由bind时传入的this决定的，和结论好像不符。<br>但却与[[thisMode]] 私有属性的strict取值，描述效果一致。<br>class foo2 {<br>            foo2(a, b, c) {<br>                console.log(this);<br>                console.log(a, b, c);<br>            }<br>        }<br>        var f = new foo2();<br>        f.foo2.bind(null, 1, 2, 3)();","like_count":0},{"had_liked":false,"id":101552,"user_name":"令狐洋葱","can_delete":false,"product_type":"c1","uid":1549519,"ip_address":"","ucode":"8AFD005B62E020","user_header":"https://static001.geekbang.org/account/avatar/00/17/a4/cf/a082eae7.jpg","comment_is_top":false,"comment_ctime":1559869530,"is_pvip":false,"replies":[{"id":"58949","content":"对","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1574222674,"ip_address":"","comment_id":101552,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1559869530","product_id":100023201,"comment_content":"老师，我想问下 ThisMode 和 ThisBindingStatus 这些只是的获取来源是哪里？是从es标准中查阅的么。","like_count":0,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453010,"discussion_content":"对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574222674,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":100865,"user_name":"Geek","can_delete":false,"product_type":"c1","uid":1358337,"ip_address":"","ucode":"276E2950D31AFB","user_header":"https://static001.geekbang.org/account/avatar/00/14/ba/01/c5161563.jpg","comment_is_top":false,"comment_ctime":1559658153,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559658153","product_id":100023201,"comment_content":"回答一楼“奥斯特洛夫”的问题:<br>       js执行，<br>       第一步，创建所有var变量并且赋值为undefined,  进行函数声明，所以第一步的结果是<br>     a=undefined;<br>     b=undefined;<br>     和function foo。<br><br>     第二步，从上到下执行js,给变量赋值<br>     所以执行结果是<br>     a=1;<br>     执行foo函数调用  foo()<br>     而此时的b还是上一步的undefined，所以调用foo的时候，b会出错，而a是1","like_count":0},{"had_liked":false,"id":92335,"user_name":"away","can_delete":false,"product_type":"c1","uid":1375012,"ip_address":"","ucode":"E4411B7D42A789","user_header":"https://static001.geekbang.org/account/avatar/00/14/fb/24/d2d64acc.jpg","comment_is_top":false,"comment_ctime":1557235484,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557235484","product_id":100023201,"comment_content":"函数调用和函数执行有什么区别？ 有没有相应的标准？","like_count":0},{"had_liked":false,"id":90470,"user_name":"bestRktnZnnn","can_delete":false,"product_type":"c1","uid":1469462,"ip_address":"","ucode":"7B9C7C6D08B450","user_header":"https://static001.geekbang.org/account/avatar/00/16/6c/16/3495dfc8.jpg","comment_is_top":false,"comment_ctime":1556527869,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556527869","product_id":100023201,"comment_content":"声明提前，等价于下面？所以解释通了undefined ,1?<br>    var a = 1;<br>    function foo() {<br>        console.log(b); &#47;&#47; undefined<br>        console.log(a); &#47;&#47; 1<br>    }<br>    foo();<br>    var b = 2;","like_count":0},{"had_liked":false,"id":90209,"user_name":"温木","can_delete":false,"product_type":"c1","uid":1507210,"ip_address":"","ucode":"EAB6EDD6EDFE96","user_header":"","comment_is_top":false,"comment_ctime":1556448003,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556448003","product_id":100023201,"comment_content":"function showThis(){<br>    console.log(this);<br>}<br><br>var o = {<br>    showThis: showThis<br>}<br><br>showThis(); &#47;&#47; global<br>o.showThis(); &#47;&#47; o<br>我知道函数中的this是由调用函数的对象决定的，但这种理解总感觉是由结论推原因；<br>老师能不能讲解下，为什么上面把全局showThis给o的showThis时，为什么没把全局的相关属性带过去，是如何做到让全局的showTime和o完全没关系的，这个能讲解下吗？","like_count":0},{"had_liked":false,"id":89042,"user_name":"阿冰777","can_delete":false,"product_type":"c1","uid":1373893,"ip_address":"","ucode":"F365EB44F971F3","user_header":"https://static001.geekbang.org/account/avatar/00/14/f6/c5/6329ddcc.jpg","comment_is_top":false,"comment_ctime":1556068370,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1556068370","product_id":100023201,"comment_content":"例子可以参考这个，意思一样：<br>var b = 2;<br>function foo(){<br>    console.log(&quot;b:&quot;+b); &#47;&#47; 2<br>    console.log(&quot;a:&quot;+a); &#47;&#47; error<br>}<br>function run(){var a = 1; foo();}<br>run();","like_count":0},{"had_liked":false,"id":86673,"user_name":"简单","can_delete":false,"product_type":"c1","uid":1289322,"ip_address":"","ucode":"322D891459DCD4","user_header":"https://static001.geekbang.org/account/avatar/00/13/ac/6a/b6f6810c.jpg","comment_is_top":false,"comment_ctime":1555422902,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555422902","product_id":100023201,"comment_content":"“不难验证出：生成器函数、异步生成器函数和异步普通函数跟普通函...”这里完全没听懂！！！","like_count":0},{"had_liked":false,"id":84934,"user_name":"谷鱼","can_delete":false,"product_type":"c1","uid":1004052,"ip_address":"","ucode":"F22DB0C0269829","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/14/397145a4.jpg","comment_is_top":false,"comment_ctime":1554946506,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554946506","product_id":100023201,"comment_content":"用过方法，类，普通函数，一直觉得模块是一个很好的编程模式，但是原生的window 浏览器环境写起来比较费劲","like_count":0},{"had_liked":false,"id":79373,"user_name":"bingo","can_delete":false,"product_type":"c1","uid":1130542,"ip_address":"","ucode":"742B79E485F272","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/2e/c34a444d.jpg","comment_is_top":false,"comment_ctime":1553469013,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553469013","product_id":100023201,"comment_content":"outer lexical environment 应该指向environment?老师是不是多写了lexical","like_count":0},{"had_liked":false,"id":74977,"user_name":"胡永","can_delete":false,"product_type":"c1","uid":1200543,"ip_address":"","ucode":"6C8BA1E0BED9C0","user_header":"https://static001.geekbang.org/account/avatar/00/12/51/9f/1840385e.jpg","comment_is_top":false,"comment_ctime":1552346695,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552346695","product_id":100023201,"comment_content":"看了这篇文章，又看了你不知道的js上卷对this的总结，又看了徐高阳老师公众号上总结的this，那叫一个通透了","like_count":0},{"had_liked":false,"id":73634,"user_name":"🐻🔫🐸","can_delete":false,"product_type":"c1","uid":1308880,"ip_address":"","ucode":"40BABFD9D358BF","user_header":"https://static001.geekbang.org/account/avatar/00/13/f8/d0/ecc68a4f.jpg","comment_is_top":false,"comment_ctime":1551945882,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551945882","product_id":100023201,"comment_content":"那岂不是箭头函数里面的this访问过程非常类似于闭包中访问外部变量，都是不断是去查询外部环境。<br>并且也会有持续引用或者说绑定的过程吧","like_count":0},{"had_liked":false,"id":73117,"user_name":"子飞鱼","can_delete":false,"product_type":"c1","uid":1201744,"ip_address":"","ucode":"0C7BCDB9424AC8","user_header":"https://static001.geekbang.org/account/avatar/00/12/56/50/f54bd646.jpg","comment_is_top":false,"comment_ctime":1551801607,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551801607","product_id":100023201,"comment_content":"var a = 1;<br>foo();<br><br>在别处定义了 foo：<br><br>var b = 2;<br>function foo(){<br>console.log(b); &#47;&#47; 2<br>console.log(a); &#47;&#47; error<br>}<br>这里首先收集所有声明，所以a b foo 在foo调用前都声明为全局变量了，同时函数定义会提升到调用之前，console.log不会报错，调用foo之前a定义了，但是b只有声明，尚未赋值，所以应该会打印undefined 和 1","like_count":0},{"had_liked":false,"id":72854,"user_name":"Rushan-Chen","can_delete":false,"product_type":"c1","uid":1374410,"ip_address":"","ucode":"CE514A1205C61D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/XSnxM4uP67kdzzCRW8KxhS5jkHiaaSrgkuLh1Z5BxawvQase46pbGAL4Bngmd3eFHckQml6zexyukFoWpeNENTg/132","comment_is_top":false,"comment_ctime":1551747950,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551747950","product_id":100023201,"comment_content":"@你老公‮下... <br>嗯嗯，明白了，利用let块级作用域的特点。谢谢~😄","like_count":0},{"had_liked":false,"id":72820,"user_name":"阿尔特纳晨风","can_delete":false,"product_type":"c1","uid":1045003,"ip_address":"","ucode":"64089C621B3B8E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f2/0b/810875aa.jpg","comment_is_top":false,"comment_ctime":1551743626,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551743626","product_id":100023201,"comment_content":"请问老师，import…from语句是否也是声明语句？谢谢","like_count":0},{"had_liked":false,"id":72731,"user_name":"梦在路上的人","can_delete":false,"product_type":"c1","uid":1183169,"ip_address":"","ucode":"F6A9F689E1AD6A","user_header":"https://static001.geekbang.org/account/avatar/00/12/0d/c1/26b97732.jpg","comment_is_top":false,"comment_ctime":1551706789,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551706789","product_id":100023201,"comment_content":"看完之后收获不小，明白了切换上下文的机制，函数能够访问定义时的词法环境，却不能访问执行时的词法环境。","like_count":0},{"had_liked":false,"id":72552,"user_name":"你老公‮下一你了亲并‭","can_delete":false,"product_type":"c1","uid":1375112,"ip_address":"","ucode":"E1DB7E1CAF82DD","user_header":"https://static001.geekbang.org/account/avatar/00/14/fb/88/558a1b35.jpg","comment_is_top":false,"comment_ctime":1551667348,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551667348","product_id":100023201,"comment_content":"@Rushan-Chen  这样foo函数的词法作用域依然可以访问到a；改为  if(true){let a=1;foo()}或者IEF","like_count":0},{"had_liked":false,"id":72328,"user_name":"kino","can_delete":false,"product_type":"c1","uid":1381138,"ip_address":"","ucode":"CED4B5FA6C4B01","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIEOWhj2oCFJeErulEW3QKiamVkTf3o0HZ5gUgl6Gq6d9UmJWDMselGrgnDvd3kVbKqaXw72C05JfQ/132","comment_is_top":false,"comment_ctime":1551587996,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551587996","product_id":100023201,"comment_content":"对于class，bind不会报错，但是call和apply会报错（在Chrome下测试的）。","like_count":0},{"had_liked":false,"id":71315,"user_name":"鬼谷子xl","can_delete":false,"product_type":"c1","uid":1141002,"ip_address":"","ucode":"854720BD5D03EC","user_header":"https://static001.geekbang.org/account/avatar/00/11/69/0a/04e3a2aa.jpg","comment_is_top":false,"comment_ctime":1551318895,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551318895","product_id":100023201,"comment_content":"类那里的showthis为什么是global啊","like_count":0}]}