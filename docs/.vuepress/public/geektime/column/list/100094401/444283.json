{"id":444283,"title":"13 | JSX：如何利用JSX应对更灵活的开发场景？","content":"<p>你好，我是大圣。</p><p>在上一讲中，我给你介绍了如何使用Chrome和Vue Devtools来调试项目，相信你已经拥有了调试复杂项目的能力。今天，我们来聊一个相对独立的话题，就是Vue中的JSX。你肯定会有这样的疑惑，JSX不是React的知识点吗？怎么Vue里也有？</p><p>实际上，Vue中不仅有JSX，而且Vue还借助JSX发挥了Javascript动态化的优势。此外，Vue中的JSX在组件库、路由库这类开发场景中，也发挥着重要的作用。对你来说，学习JSX，可以让你实现更灵活的开发需求，这一讲我们重点关注一下Vue中的JSX。</p><h2>h函数</h2><p>在聊JSX之前，我需要先给你简单介绍一下h函数，因为理解了h函数之后，你才能更好地理解JSX是什么。下面，我会通过一个小圣要实现的需求作为引入，来给你讲一下h函数。</p><p>在Vue 3的项目开发中，template是Vue 3默认的写法。虽然template长得很像HTML，但Vue其实会把template解析为render函数，之后，组件运行的时候通过render函数去返回虚拟DOM，你可以在Vue Devtools中看到组件编译之后的结果。</p><p><img src=\"https://static001.geekbang.org/resource/image/75/af/75e3242df6e45538a6d43c5f0d39a1af.png?wh=1920x1140\" alt=\"图片\"></p><p>在上面的示意图中，调试窗口右侧代码中的_sfc_render_函数就是清单应用的template解析成JavaScript之后的结果。所以除了template之外，在某些场景下，我们可以直接写render函数来实现组件。</p><!-- [[[read_end]]] --><p>先举个小例子，我给小圣模拟了这样一个需求：我们需要通过一个值的范围在数字1到6之间的变量，去渲染标题组件 h1~h6，并根据传递的props去渲染标签名。对于这个需求，小圣有点拿不准了，不知道怎么实现会更合适，于是小圣按照之前学习的template语法，写了很多的v-if：</p><pre><code class=\"language-xml\">  &lt;h1 v-if=\"num==1\"&gt;{{title}}&lt;/h1&gt;\n  &lt;h2 v-if=\"num==2\"&gt;{{title}}&lt;/h2&gt;\n  &lt;h3 v-if=\"num==3\"&gt;{{title}}&lt;/h3&gt;\n  &lt;h4 v-if=\"num==4\"&gt;{{title}}&lt;/h4&gt;\n  &lt;h5 v-if=\"num==5\"&gt;{{title}}&lt;/h5&gt;\n  &lt;h6 v-if=\"num==6\"&gt;{{title}}&lt;/h6&gt;\n</code></pre><p>从上面的代码中，你应该能感觉到，小圣这样的实现看起来太冗余。所以这里我教你一个新的实现方法，那就是Vue 3中的<a href=\"https://v3.cn.vuejs.org/api/global-api.html#h\">h函数</a>。</p><p>由于render函数可以直接返回虚拟DOM，因而我们就不再需要template。我们在src/components目录下新建一个文件Heading.jsx ，要注意的是，这里Heading的结尾从.vue变成了jsx。</p><p>在下面的代码中, 我们使用defineComponent定义一个组件，组件内部配置了props和setup。这里的setup函数返回值是一个函数，就是我们所说的render函数。render函数返回h函数的执行结果，h函数的第一个参数就是标签名，我们可以很方便地使用字符串拼接的方式，实现和上面代码一样的需求。像这种连标签名都需要动态处理的场景，就需要通过手写h函数来实现<strong>。</strong></p><pre><code class=\"language-javascript\">import { defineComponent, h } from 'vue'\n\nexport default defineComponent({\n  props: {\n    level: {\n      type: Number,\n      required: true\n    }\n  },\n  setup(props, { slots }) {\n    return () =&gt; h(\n      'h' + props.level, // 标签名\n      {}, // prop 或 attribute\n      slots.default() // 子节点\n    )\n  }\n})\n</code></pre><p>然后，在文件src/About.vue中，我们使用下面代码中的import语法来引入Heading，之后使用level传递标签的级别。这样，之后在浏览器里访问  <a href=\"http://localhost:9094/#/about\">http://localhost:9094/#/about</a> 时，就可以直接看到Heading组件渲染到浏览器之后的结果。</p><pre><code class=\"language-xml\"> &lt;template&gt;\n  &lt;Heading :level=\"3\"&gt;hello geekbang&lt;/Heading&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport Heading from './components/Head.jsx'\n&lt;/script&gt;\n</code></pre><p>上面的代码经过渲染后的结果如下：</p><h2><img src=\"https://static001.geekbang.org/resource/image/7a/e8/7a4d4901c4cc483977d6a423aa4e29e8.png?wh=1120x440\" alt=\"图片\"></h2><p>手写的h函数，可以处理动态性更高的场景。<strong>但是如果是复杂的场景，h函数写起来就显得非常繁琐，需要自己把所有的属性都转变成对象</strong>。并且组件嵌套的时候，对象也会变得非常复杂。不过，因为h函数也是返回虚拟DOM的，所以有没有更方便的方式去写h函数呢？答案是肯定的，这个方式就是JSX。</p><h2>JSX是什么</h2><p>我们先来了解一下JSX是什么，JSX来源自React框架，下面这段代码就是JSX的语法，我们给变量title赋值了一个h1标签。</p><pre><code class=\"language-javascript\">const element = &lt;h1 id=\"app\"&gt;Hello, Geekbang!&lt;/h1&gt;\n</code></pre><p><strong>这种在JavaScript里面写HTML的语法，就叫做JSX</strong>，算是对JavaScript语法的一个扩展。上面的代码直接在JavaScript环境中运行时，会报错。JSX的本质就是下面代码的语法糖，h函数内部也是调用createVnode来返回虚拟DOM。在之后的课程中，对于那些创建虚拟DOM的函数，我们统一称为h函数。</p><pre><code class=\"language-javascript\">const element = createVnode('h1',{id:\"app\"}, 'hello Geekbakg')\n</code></pre><p>在从JSX到createVNode函数的转化过程中，我们需要安装一个JSX插件。在项目的根目录下，打开命令行，执行下面的代码来安装插件：</p><pre><code class=\"language-bash\">npm install @vitejs/plugin-vue-jsx -D\n</code></pre><p>插件安装完成后，我们进入根目录下，打开vite.config.js文件去修改vite配置。在vite.config.js文件中，我们加入下面的代码。这样，在加载JSX插件后 ，现在的页面中就可以支持JSX插件了。</p><pre><code class=\"language-javascript\">import vue from '@vitejs/plugin-vue'\nimport vueJsx from '@vitejs/plugin-vue-jsx';\n\nexport default defineConfig({\n  plugins: [vue(),vueJsx()]\n})\n</code></pre><p>然后，我们进入src/componentns/Heading.jsx中，把setup函数的返回函数改成下面代码中所示的内容，这里我们使用变量tag计算出标签类型，直接使用<tag>渲染，使用一个大括号把默认插槽包起来就可以了。</tag></p><pre><code class=\"language-javascript\">  setup(props, { slots }) {\n    const tag = 'h'+props.level\n    return () =&gt; &lt;tag&gt;{slots.default()}&lt;/tag&gt;\n  }\n</code></pre><p>我们再来聊一下JSX的语法在实战中的要点，详细的要点其实在<a href=\"https://github.com/vuejs/jsx-next/blob/dev/packages/babel-plugin-jsx/README-zh_CN.md\">GitHub文档</a>中也有全面的介绍，我在这里主要针对之前的清单应用讲解一下。</p><p>我们进入到src/components下面新建文件Todo.jsx，在下面的代码中，我们使用JSX实现了一个简单版本的清单应用。我们首先使用defineComponent的方式来定义组件，在setup返回的JSX中，使用vModel取代v-model，并且使用单个大括号包裹的形式传入变量title.value ，然后使用onClick取代@click。循环渲染清单的时候，使用.map映射取代v-for，使用三元表达式取代v-if。</p><pre><code class=\"language-javascript\">import { defineComponent, ref } from 'vue'\n\nexport default defineComponent({\n  setup(props) {\n    let title = ref('')\n    let todos = ref([{ title: \"学习 Vue 3\", done: true },{ title: \"睡觉\", done: false }]);\n    function addTodo(){\n        todos.value.push({\n            title:title.value\n        })\n        title.value = ''\n    }\n    return () =&gt; &lt;div&gt;\n        &lt;input type=\"text\" vModel={title.value} /&gt;\n        &lt;button onClick={addTodo}&gt;click&lt;/button&gt;\n        &lt;ul&gt;\n            {\n                todos.value.length ? todos.value.map(todo=&gt;{\n                    return &lt;li&gt;{todo.title}&lt;/li&gt;\n                }): &lt;li&gt;no data&lt;/li&gt;\n            }\n        &lt;/ul&gt;\n    &lt;/div&gt;\n  }\n})\n</code></pre><p>通过这个例子，你应该能够认识到，<strong>使用JSX的本质，还是在写JavaScript</strong>。在Element3组件库设计中，我们也有很多组件需要用到JSX，比如时间轴Timeline、分页Pagination、表格Table等等。</p><p>就像在TimeLine组件的<a href=\"https://github.com/hug-sun/element3/blob/master/packages/element3/packages/timeline/Timeline.vue#L35\">源码</a>中，有一个reverse的属性来决定是否倒序渲染，我们在下面写出了类似的代码。代码中的Timeline是一个数组，数组中的两个元素都是JSX，我们可以通过数组的reverse方法直接进行数组反转，实现逆序渲染。类似这种动态性要求很高的场景，template是较难实现的。</p><pre><code class=\"language-javascript\">export const Timeline = (props)=&gt;{\n    const timeline = [\n        &lt;div class=\"start\"&gt;8.21 开始自由职业&lt;/div&gt;,\n        &lt;div class=\"online\"&gt;10.18 专栏上线&lt;/div&gt;\n    ]\n    if(props.reverse){\n        timeline.reverse()\n    }\n    return &lt;div&gt;{timeline}&lt;/div&gt;\n}\n</code></pre><h2>JSX和Template</h2><p>看到这里，你一定会有一个疑惑：我们该怎么选择JSX和template呢？接下来，我就和你聊聊template和JSX的区别，这样你在加深对template的理解的同时，也能让你逐步了解到JSX的重要性。</p><p>先举个例子，我们在极客时间官网购买课程的时候，就如下图所示的样子，页面顶部有搜索框、页面左侧有课程的一些类别。我们按照极客时间对课程的分类，比如前端、后端、AI、运维等分类，可以很轻松地筛选出我们所需类别的课程。</p><p>试想一下，如果没有这些条件限制，而是直接显示课程列表，那你就需要自己在几百门的课程列表里搜索到自己需要的内容。也就是说，接受了固定分类的限制，就能降低选择课程的成本。<strong>这就告诉我们一个朴实无华的道理：我们接受一些操作上的限制，但同时也会获得一些系统优化的收益。</strong></p><p><img src=\"https://static001.geekbang.org/resource/image/44/a4/4470104541451a1084dd5f17d5fc7ca4.png?wh=1920x918\" alt=\"图片\"></p><p>在Vue的世界中也是如此，template的语法是固定的，只有v-if、v-for等等语法。<a href=\"https://v3.cn.vuejs.org/api/directives.html\">Vue的官网中</a>也列举得很详细，也就是说，template遇见条件渲染就是要固定的选择用v-if。这就像极客时间官网上课程的分类是有限的，我们需要在某一个类别中选择课程一样。我们按照这种固定格式的语法书写，这样Vue在编译层面就可以很方便地去做静态标记的优化。</p><p>而JSX只是h函数的一个语法糖，本质就是JavaScript，想实现条件渲染可以用if else，也可以用三元表达式，还可以用任意合法的JavaScript语法。也就是说，<strong>JSX可以支持更动态的需求。而template则因为语法限制原因，不能够像JSX那样可以支持更动态的需求</strong>。这是JSX相比于template的一个优势。</p><p><strong>JSX相比于template还有一个优势，是可以在一个文件内返回多个组件</strong>，我们可以像下面的代码一样，在一个文件内返回Button、Input、Timeline等多个组件。</p><pre><code class=\"language-javascript\">export const Button = (props,{slots})=&gt;&lt;button {...props}&gt;slots.default()&lt;/button&gt;\nexport const Input = (props)=&gt;&lt;input {...props} /&gt;\nexport const Timeline = (props)=&gt;{\n  ...\n}\n</code></pre><p>在上面，我们谈到了JSX相比于template的优势，那么template有什么优势呢？你可以先看下面的截图，这是使用Vue官方的template解析的<a href=\"https://vue-next-template-explorer.netlify.app/#%7B%22src%22%3A%22%3Cdiv%20id%3D%5C%22app%5C%22%3E%5Cn%20%20%20%20%3Cdiv%20%40click%3D%5C%22()%3D%3Econsole.log(xx)%5C%22%20%20name%3D%5C%22hello%5C%22%3E%7B%7Bname%7D%7D%3C%2Fdiv%3E%5Cn%20%20%20%20%3Ch1%20%3E%E6%8A%80%E6%9C%AF%E6%91%B8%E9%B1%BC%3C%2Fh1%3E%5Cn%20%20%20%20%3Cp%20%3Aid%3D%5C%22name%5C%22%20class%3D%5C%22app%5C%22%3E%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4%3C%2Fp%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22ssr%22%3Afalse%2C%22options%22%3A%7B%22mode%22%3A%22module%22%2C%22filename%22%3A%22Foo.vue%22%2C%22prefixIdentifiers%22%3Afalse%2C%22hoistStatic%22%3Atrue%2C%22cacheHandlers%22%3Atrue%2C%22scopeId%22%3Anull%2C%22inline%22%3Afalse%2C%22ssrCssVars%22%3A%22%7B%20color%20%7D%22%2C%22compatConfig%22%3A%7B%22MODE%22%3A3%7D%2C%22whitespace%22%3A%22condense%22%2C%22bindingMetadata%22%3A%7B%22TestComponent%22%3A%22setup-const%22%2C%22setupRef%22%3A%22setup-ref%22%2C%22setupConst%22%3A%22setup-const%22%2C%22setupLet%22%3A%22setup-let%22%2C%22setupMaybeRef%22%3A%22setup-maybe-ref%22%2C%22setupProp%22%3A%22props%22%2C%22vMySetupDir%22%3A%22setup-const%22%7D%2C%22optimizeBindings%22%3Afalse%7D%7D\">一个demo</a>。</p><p><img src=\"https://static001.geekbang.org/resource/image/d5/c4/d57a43f06d47e740b17ba996df051ec4.png?wh=1920x769\" alt=\"图片\"></p><p>在demo页面左侧的template代码中，你可以看到代码中的三个标签。页面右侧是template代码编译的结果，我们可以看到，相比于我们自己去写h函数，在template解析的结果中，有以下几个性能优化的方面。</p><p>首先，静态的标签和属性会放在_hoisted变量中，并且放在render函数之外。这样，重复执行render的时候，代码里的h1这个纯静态的标签，就不需要进行额外地计算，并且静态标签在虚拟DOM计算的时候，会直接越过Diff过程。</p><p>然后是@click函数增加了一个cache缓存层，这样实现出来的效果也是和静态提升类似，尽可能高效地利用缓存。最后是，由于在下面代码中的属性里，那些带冒号的属性是动态属性，因而存在使用一个数字去标记标签的动态情况。</p><p>比如在p标签上，使用8这个数字标记当前标签时，只有props是动态的。而在虚拟DOM计算Diff的过程中，可以忽略掉class和文本的计算，这也是Vue 3的虚拟DOM能够比Vue 2快的一个重要原因。</p><pre><code class=\"language-javascript\">import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { id: \"app\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"技术摸鱼\", -1 /* HOISTED */)\nconst _hoisted_3 = [\"id\"]\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", {\n      onClick: _cache[0] || (_cache[0] = ()=&gt;_ctx.console.log(_ctx.xx)),\n      name: \"hello\"\n    }, _toDisplayString(_ctx.name), 1 /* TEXT */),\n    _hoisted_2,\n    _createElementVNode(\"p\", {\n      id: _ctx.name,\n      class: \"app\"\n    }, \"极客时间\", 8 /* PROPS */, _hoisted_3)\n  ]))\n}\n\n// Check the console for the AST\n</code></pre><p>在template和JSX这两者的选择问题上，只是选择框架时角度不同而已。<strong>我们实现业务需求的时候，也是优先使用template，动态性要求较高的组件使用JSX实现</strong>，尽可能地利用Vue本身的性能优化。</p><p>在课程最后的生态源码篇中，我们还会聊到框架的设计思路，那时你就会发现除了template和JSX之外，一个框架的诞生还需要很多维度的考量，比如是重编译还是重运行时等等，学到那里的时候，你会对Vue有一个更加深刻的理解。</p><h2>总结</h2><p>好，今天这一讲的主要内容就讲完了，我们来简单总结一下今天学到了什么吧。今天我主要带你学习了Vue 3中的JSX。首先我们学习了h函数，简单来说，h函数内部执行createVNode，并返回虚拟DOM，而JSX最终也是解析为createVnode执行。而在一些动态性要求很高的场景下，很难用template优雅地实现，所以我们需要JSX实现。</p><p>因为render函数内部都是JavaScript代码，所以render函数相比于template会更加灵活，但是h函数手写起来非常的痛苦，有太多的配置，所以我们就需要JSX去方便快捷地书写render函数。</p><p>JSX的语法来源于React，在Vue 3中会直接解析成h函数执行，所以JSX就拥有了JS全部的动态性。</p><p>最后，我们对比了JSX和template的优缺点，template由于语法固定，可以在编译层面做的优化较多，比如静态标记就真正做到了按需更新；而JSX由于动态性太强，只能在有限的场景下做优化，虽然性能不如template好，但在某些动态性要求较高的场景下，JSX成了标配，这也是诸多组件库会使用JSX的主要原因。</p><h2>思考题</h2><p>在你现在实现的需求里，有哪些是需要JSX的呢？</p><p>欢迎在留言区分享你的看法，也欢迎你把这一讲推荐给你的同事和朋友们，我们下一讲再见。</p>","neighbors":{"left":{"article_title":"12 | 调试：提高开发效率必备的Vue Devtools","id":442479},"right":{"article_title":"14 | TypeScript：Vue 3中如何使用TypeScript？","id":445880}},"comments":[{"had_liked":false,"id":321569,"user_name":"ll","can_delete":false,"product_type":"c1","uid":1296458,"ip_address":"","ucode":"57C5DAC5B51036","user_header":"https://static001.geekbang.org/account/avatar/00/13/c8/4a/3a322856.jpg","comment_is_top":false,"comment_ctime":1636949264,"is_pvip":true,"replies":[{"id":"118388","content":"cool","user_name":"作者回复","comment_id":321569,"uid":"1003715","ip_address":"","utype":1,"ctime":1639402245,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"91831262480","product_id":100094401,"comment_content":"厉害，看大圣的课，脑中就会涌现出以前学过用过的知识，然后随着文章的推进，这些知识就分条屡清了；然后查漏补缺，最后汇聚到一起，为自己所用。<br>一点回顾：<br>      1. template vs Jsx<br>         直观感觉是“殊途同归”。<br><br>         先说同归，这两终都会产出“虚拟DOM”；<br>         然后 “殊途”，React 的 Jsx 在这方面很“单纯”就提供“虚拟DOM”，也正因为单纯，“性能”方<br>         面的问题，很大一部分由使用者决定。<br><br>         Vue 的 template 像是先定个框架，有些“规则”，就是 v-if 之类的语法，然后使用者<br>         “照猫画虎”，做出来的东西不至于有太大的“坑”。“性能”方面的优化，大部分框架内就<br>         主要负责了。<br><br>      2. 有什么区别<br>         React 这种灵活，使得它使用 &quot;门槛&quot; 高一点；而 Vue 在使用门槛稍低，但在有些业务<br>         场景下 template 的 &quot;灵活度&quot; 就较低。<br><br>         但是 Vue 较 React 有个优势，就是 Vue 也提供 JSX，你可以根据使用场景选择，这方<br>         面是“灵活的”<br><br>      3. 一点感想<br>         要说殊途同归，框架最终还是一样，用JS在浏览器上操纵DOM；这里有几个点，JS，浏览<br>         器，DOM；你看这几个怎么联系起来？很神奇，vue-devtools，上节课的 devtools，这<br>         是不是 callback 呢。","like_count":22,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538396,"discussion_content":"cool","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639402245,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322285,"user_name":"台灯下的我","can_delete":false,"product_type":"c1","uid":2328879,"ip_address":"","ucode":"3FA066692FC55C","user_header":"https://static001.geekbang.org/account/avatar/00/23/89/2f/6211e738.jpg","comment_is_top":false,"comment_ctime":1637289727,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"53176897279","product_id":100094401,"comment_content":"我的理解是优先使用template，如果当用template的时候感觉很麻烦很繁琐的时候，这个时候可以考虑下jsx能不能更方便一点","like_count":12},{"had_liked":false,"id":324449,"user_name":"cwang","can_delete":false,"product_type":"c1","uid":1465246,"ip_address":"","ucode":"04CB9F4CA2CEAD","user_header":"https://static001.geekbang.org/account/avatar/00/16/5b/9e/a8dec12d.jpg","comment_is_top":false,"comment_ctime":1638437995,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18818307179","product_id":100094401,"comment_content":"补充了解：https:&#47;&#47;v3.cn.vuejs.org&#47;guide&#47;render-function.html","like_count":4},{"had_liked":false,"id":322323,"user_name":"关关君","can_delete":false,"product_type":"c1","uid":1562774,"ip_address":"","ucode":"98EAD61438860A","user_header":"https://static001.geekbang.org/account/avatar/00/17/d8/96/dcf52430.jpg","comment_is_top":false,"comment_ctime":1637303512,"is_pvip":false,"replies":[{"id":"117101","content":"很棒的提醒","user_name":"作者回复","comment_id":322323,"uid":"1003715","ip_address":"","utype":1,"ctime":1637499466,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"14522205400","product_id":100094401,"comment_content":"今天跟着老师的代码做练习的时候控制台报错说没有 defineConfig 一看版本vite才是1.0的，如果遇到和我一样的问题的同学先卸载 &quot;npm un vite&quot; 然后重新安装新版本的vite  &quot;npm install vite@latest -D&quot;","like_count":3,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532006,"discussion_content":"很棒的提醒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637499466,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321735,"user_name":"gongshun","can_delete":false,"product_type":"c1","uid":2821709,"ip_address":"","ucode":"0B7606C9FEC34E","user_header":"","comment_is_top":false,"comment_ctime":1637028535,"is_pvip":false,"replies":[{"id":"116819","content":"这个h是官网举的例子，简单的vue-router实现那一讲里我也用了component，灵活性更高的场景jsx是必须的","user_name":"作者回复","comment_id":321735,"uid":"1003715","ip_address":"","utype":1,"ctime":1637031528,"user_name_real":"花果山大圣"}],"discussion_count":1,"race_medal":0,"score":"10226963127","product_id":100094401,"comment_content":"&lt;component :is=&quot;&#39;h&#39;+ level&quot;&gt;&lt;&#47;component&gt; 这样就可以实现了，jsx是多余","like_count":2,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530344,"discussion_content":"这个h是官网举的例子，简单的vue-router实现那一讲里我也用了component，灵活性更高的场景jsx是必须的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637031528,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354331,"user_name":"猹子哥一个月要瘦十斤","can_delete":false,"product_type":"c1","uid":3040375,"ip_address":"上海","ucode":"2BFC9BC5EE8FCA","user_header":"https://static001.geekbang.org/account/avatar/00/2e/64/77/755c94fa.jpg","comment_is_top":false,"comment_ctime":1660287343,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5955254639","product_id":100094401,"comment_content":"我觉得做动态表单的时候用jsx更舒服一点","like_count":1,"discussions":[{"author":{"id":1165817,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c9/f9/39492855.jpg","nickname":"阿阳","note":"","ucode":"20A35FB86B1C5C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585955,"discussion_content":"正在做动态表单，用temple语法感觉不够灵活，现在考虑用jsx实现。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661918418,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":342090,"user_name":"大恒","can_delete":false,"product_type":"c1","uid":1330033,"ip_address":"","ucode":"B8E3E2273F74DB","user_header":"https://static001.geekbang.org/account/avatar/00/14/4b/71/591ae170.jpg","comment_is_top":false,"comment_ctime":1650011316,"is_pvip":true,"discussion_count":1,"race_medal":1,"score":"5944978612","product_id":100094401,"comment_content":"按照文稿中的代码，直接导出函数的方式导出的组件，和导出defineComponent实例化的组件区别是：defineComponent实例化的组件有实时更新vNode的能力对吗？<br>下面是我的示例代码，它并不能更新显示button的文本内容<br>export const Button = (props) =&gt; {<br>  let text = ref(&quot;click me!&quot;);<br>  function btnClick() {<br>    text.value += &quot;!&quot;;<br>  }<br>  return &lt;button onClick={btnClick}&gt;{text.value}&lt;&#47;button&gt;;<br>};<br>","like_count":1,"discussions":[{"author":{"id":1376778,"avatar":"https://static001.geekbang.org/account/avatar/00/15/02/0a/5d81243a.jpg","nickname":"良辰美景岂虚设","note":"","ucode":"69654CD67EE1AB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571587,"discussion_content":"你的text变量是声明在这个函数里，每次点击函数都重新执行。你把text放到函数外面就可以了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652279527,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":323060,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1239362,"ip_address":"","ucode":"1B5EF54A2A56F8","user_header":"https://static001.geekbang.org/account/avatar/00/12/e9/42/1de79e71.jpg","comment_is_top":false,"comment_ctime":1637717582,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5932684878","product_id":100094401,"comment_content":"打卡， 项目比较简单，没用到jsx","like_count":1},{"had_liked":false,"id":321747,"user_name":"mixiuu","can_delete":false,"product_type":"c1","uid":2827174,"ip_address":"","ucode":"E63D104B39604A","user_header":"https://static001.geekbang.org/account/avatar/00/2b/23/a6/88858c72.jpg","comment_is_top":false,"comment_ctime":1637029765,"is_pvip":false,"replies":[{"id":"118386","content":"有详细的代码吗？这个配置看起来是OK的","user_name":"作者回复","comment_id":321747,"uid":"1003715","ip_address":"","utype":1,"ctime":1639402099,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"5931997061","product_id":100094401,"comment_content":"老师，我想问下，在cli创建的vue3中，使用setup+jsx的方式会报错（TypeError: Cannot read properties of undefined (reading &#39;$createElement&#39;)），我在babel.config.js中已添加： &quot;plugins&quot;: [&quot;@vue&#47;babel-plugin-jsx&quot;]，这是为什么呢","like_count":1,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538394,"discussion_content":"有详细的代码吗？这个配置看起来是OK的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639402099,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321546,"user_name":"Geek_d6ee59","can_delete":false,"product_type":"c1","uid":2817611,"ip_address":"","ucode":"6D22C0E4A5AC33","user_header":"","comment_is_top":false,"comment_ctime":1636943882,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5931911178","product_id":100094401,"comment_content":"小白被打开新世界，之前用react多，热衷jsx的灵活，原来也可以这样写vue","like_count":1},{"had_liked":false,"id":321517,"user_name":"海阔天空","can_delete":false,"product_type":"c1","uid":1327016,"ip_address":"","ucode":"16C87A0052A08B","user_header":"https://static001.geekbang.org/account/avatar/00/14/3f/a8/8da58e53.jpg","comment_is_top":false,"comment_ctime":1636933567,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5931900863","product_id":100094401,"comment_content":"template 和 JSX 都有各自的优点，template 算是vue的标配吧，因为其中规中矩（标签化），所以在vue页面或是主要架构，动态性比较低的场景下使用。而JSX则更适合来做小组件和公共组件这些动态性比较高的组件。<br>","like_count":2},{"had_liked":false,"id":356013,"user_name":"阿阳","can_delete":false,"product_type":"c1","uid":1165817,"ip_address":"江苏","ucode":"20A35FB86B1C5C","user_header":"https://static001.geekbang.org/account/avatar/00/11/c9/f9/39492855.jpg","comment_is_top":false,"comment_ctime":1661918459,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661918459","product_id":100094401,"comment_content":"<br>正在做动态表单，用temple语法感觉不够灵活，现在考虑用jsx实现。","like_count":0},{"had_liked":false,"id":348852,"user_name":"刘佳旭","can_delete":false,"product_type":"c1","uid":1266844,"ip_address":"","ucode":"6E188C9BBB6E13","user_header":"https://static001.geekbang.org/account/avatar/00/13/54/9c/b83c52be.jpg","comment_is_top":false,"comment_ctime":1655461768,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655461768","product_id":100094401,"comment_content":"XRender,动态表格 都是用JSX","like_count":0},{"had_liked":false,"id":347481,"user_name":"马成","can_delete":false,"product_type":"c1","uid":1486895,"ip_address":"","ucode":"664F2BAA2E0F0B","user_header":"https://static001.geekbang.org/account/avatar/00/16/b0/2f/e2096905.jpg","comment_is_top":false,"comment_ctime":1654070861,"is_pvip":true,"discussion_count":4,"race_medal":0,"score":"1654070861","product_id":100094401,"comment_content":"h函数感觉是比template要更加的灵活，那么template能够实现的功能h函数是否全部可以模拟实现呢？举个例子，template中的v-for指令使用h函数如何模拟类似的效果","like_count":0,"discussions":[{"author":{"id":2338500,"avatar":"https://static001.geekbang.org/account/avatar/00/23/ae/c4/eafb9ba1.jpg","nickname":"长寿","note":"","ucode":"5FBDF9E65D2F3F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581954,"discussion_content":"官网有说过如何使用jsx模仿各种指令","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659083976,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1486895,"avatar":"https://static001.geekbang.org/account/avatar/00/16/b0/2f/e2096905.jpg","nickname":"马成","note":"","ucode":"664F2BAA2E0F0B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574971,"discussion_content":"而且，如果数组本身是响应式对象，那么子组件个数会响应式变多么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654501729,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1486895,"avatar":"https://static001.geekbang.org/account/avatar/00/16/b0/2f/e2096905.jpg","nickname":"马成","note":"","ucode":"664F2BAA2E0F0B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574970,"discussion_content":"对于v-for指令，子组件可以绑定for里面定义的单行数据，h函数怎么绑定呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654501657,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1390314,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLvfic0yoAJYvfPowPqQAiaffjnspG3VWdb7lndyHgqHrTah41kylFZXvgU6ZeHadUicAYNWTDDdgCMw/132","nickname":"nashwq","note":"","ucode":"F330F70B8CC1F4","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574563,"discussion_content":"h函数第三项 可以传入数组","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654147381,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":346504,"user_name":"Spike Jim.Fun","can_delete":false,"product_type":"c1","uid":1300707,"ip_address":"","ucode":"C956A19146E1DA","user_header":"https://static001.geekbang.org/account/avatar/00/13/d8/e3/987c9195.jpg","comment_is_top":false,"comment_ctime":1653204881,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1653204881","product_id":100094401,"comment_content":"export default defineComponent({ 这里可以不需要使用defineComponent","like_count":0},{"had_liked":false,"id":336242,"user_name":"yanhu","can_delete":false,"product_type":"c1","uid":1513550,"ip_address":"","ucode":"7C6A28D064B83D","user_header":"https://static001.geekbang.org/account/avatar/00/17/18/4e/9beaf580.jpg","comment_is_top":false,"comment_ctime":1646030342,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646030342","product_id":100094401,"comment_content":"动态组件<br>  &lt;template&gt;<br>    &lt;Component :is=&quot;comp.name&quot; v-bind=&quot;comp&quot;&gt;<br>  &lt;&#47;template&gt;<br>  <br>  如何将 jsx 作为 slot 传入？","like_count":0},{"had_liked":false,"id":330423,"user_name":"张飞蓬","can_delete":false,"product_type":"c1","uid":1435687,"ip_address":"","ucode":"79F000358F85FD","user_header":"https://static001.geekbang.org/account/avatar/00/15/e8/27/0472c557.jpg","comment_is_top":false,"comment_ctime":1641973845,"is_pvip":false,"replies":[{"id":"120842","content":"这个缓存其实就是一个对象，因为@click传递的箭头函数，无论函数有没有变化，两个函数的比较都会是false，需要更新这个事件，用对象缓存对象的话，虚拟dom diff的时候就可以判断出函数是一个对象，可以越过diff的计算","user_name":"作者回复","comment_id":330423,"uid":"1003715","ip_address":"","utype":1,"ctime":1642338539,"user_name_real":"编辑"}],"discussion_count":2,"race_medal":0,"score":"1641973845","product_id":100094401,"comment_content":"然后是 @click 函数增加了一个 cache 缓存层，这样实现出来的效果也是和静态提升类似，尽可能高效地利用缓存。最后是，由于在下面代码中的属性里，那些带冒号的属性是动态属性，因而存在使用一个数字去标记标签的动态情况。比如在 p 标签上，使用 8 这个数字标记当前标签时，只有 props 是动态的。而在虚拟 DOM 计算 Diff 的过程中，可以忽略掉 class 和文本的计算，这也是 Vue 3 的虚拟 DOM 能够比 Vue 2 快的一个重要原因。<br><br>没看懂这个啥缓存层呢","like_count":0,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546544,"discussion_content":"这个缓存其实就是一个对象，因为@click传递的箭头函数，无论函数有没有变化，两个函数的比较都会是false，需要更新这个事件，用对象缓存对象的话，虚拟dom diff的时候就可以判断出函数是一个对象，可以越过diff的计算","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642338539,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1217641,"avatar":"https://static001.geekbang.org/account/avatar/00/12/94/69/4937e1e4.jpg","nickname":"Sean","note":"","ucode":"2178FD5B59B620","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546139,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642174610,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322282,"user_name":"百事可乐","can_delete":false,"product_type":"c1","uid":2815755,"ip_address":"","ucode":"7D7561B5306066","user_header":"https://static001.geekbang.org/account/avatar/00/2a/f7/0b/b01f1d68.jpg","comment_is_top":false,"comment_ctime":1637288222,"is_pvip":false,"replies":[{"id":"117102","content":"defineProps声明一下props","user_name":"作者回复","comment_id":322282,"uid":"1003715","ip_address":"","utype":1,"ctime":1637499490,"user_name_real":"编辑"}],"discussion_count":3,"race_medal":0,"score":"1637288222","product_id":100094401,"comment_content":"大圣老师。 我怎么从vue 文件向  jsx文件中传递参数呢？<br>&lt;Todolist :valueData=&#39;123&#39;&#47;&gt; <br>setup(props) {<br>        console.log(props);<br>}    这个 props  是这个空对象 ","like_count":0,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532007,"discussion_content":"defineProps声明一下props","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637499490,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2815108,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/8NIo06kqG0V5GL2UvFVBVkkuKdhT3BjO8ZUIibvXmFSgc0tvsOiaH9IibchvMKtpdnfKfFckuhdcicyghVV30BDhicA/132","nickname":"Devo Zou","note":"","ucode":"1203CDA305E8C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533606,"discussion_content":"props: {\n     valueData: {\n      type: String,\n      required: true,\n    },\n  },","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637915796,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2815755,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/f7/0b/b01f1d68.jpg","nickname":"百事可乐","note":"","ucode":"7D7561B5306066","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532229,"discussion_content":"好像不行。我试了一下。    let  props = defineProps({\n            valueData:String\n        })\n        console.log(props)   这里poops 是null","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637560535,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322267,"user_name":"小余GUNDAM","can_delete":false,"product_type":"c1","uid":1474324,"ip_address":"","ucode":"2C2C5847CD2F64","user_header":"https://static001.geekbang.org/account/avatar/00/16/7f/14/ebe97682.jpg","comment_is_top":false,"comment_ctime":1637284256,"is_pvip":false,"replies":[{"id":"117103","content":"能享受一部分","user_name":"作者回复","comment_id":322267,"uid":"1003715","ip_address":"","utype":1,"ctime":1637499509,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1637284256","product_id":100094401,"comment_content":"老师 vue3的 jsx能享受 编译优化 例如静态节点跳过diff吗 ","like_count":0,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532008,"discussion_content":"能享受一部分","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637499509,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322258,"user_name":"giteebravo","can_delete":false,"product_type":"c1","uid":1005290,"ip_address":"","ucode":"C087E8D6B5A98B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/ea/32608c44.jpg","comment_is_top":false,"comment_ctime":1637282121,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1637282121","product_id":100094401,"comment_content":"<br>对 jsx 有了感性的认识","like_count":0},{"had_liked":false,"id":321683,"user_name":"uncle 邦","can_delete":false,"product_type":"c1","uid":1996927,"ip_address":"","ucode":"ED5BF9398C1B5C","user_header":"https://static001.geekbang.org/account/avatar/00/1e/78/7f/ef0e0ec8.jpg","comment_is_top":false,"comment_ctime":1636991039,"is_pvip":false,"replies":[{"id":"116820","content":"也可以的，有专门的vue2的jsx插件","user_name":"作者回复","user_name_real":"花果山大圣","uid":"1003715","ctime":1637031571,"ip_address":"","comment_id":321683,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1636991039","product_id":100094401,"comment_content":"vue2 可以使用jsx么？","like_count":0,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530334,"discussion_content":"也可以的，有专门的vue2的jsx插件","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637031571,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321543,"user_name":"tequ1lAneio","can_delete":false,"product_type":"c1","uid":1936087,"ip_address":"","ucode":"41336E87FF2E1A","user_header":"https://static001.geekbang.org/account/avatar/00/1d/8a/d7/daabec34.jpg","comment_is_top":false,"comment_ctime":1636943116,"is_pvip":true,"replies":[{"id":"118389","content":"有详细的代码吗？","user_name":"作者回复","user_name_real":"编辑","uid":"1003715","ctime":1639402331,"ip_address":"","comment_id":321543,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1636943116","product_id":100094401,"comment_content":"为什么我的input用jsx的话无论是keyup还是keydown都绑定不上事件？","like_count":0,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538397,"discussion_content":"有详细的代码吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639402331,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2815755,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/f7/0b/b01f1d68.jpg","nickname":"百事可乐","note":"","ucode":"7D7561B5306066","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532233,"discussion_content":"v-model 也可以哟","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637561320,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321531,"user_name":"斜月浮云","can_delete":false,"product_type":"c1","uid":1008933,"ip_address":"","ucode":"25CECBB175DA02","user_header":"https://static001.geekbang.org/account/avatar/00/0f/65/25/c6de04bc.jpg","comment_is_top":false,"comment_ctime":1636941275,"is_pvip":false,"discussion_count":2,"race_medal":1,"score":"1636941275","product_id":100094401,"comment_content":"个人认为，目前大部分页面的量级，性能影响都差别不太大，相比还是灵活性更重要，如果要二选一，还是jsx这种设计更符合开发需求。 当然都用用更好哈哈😄","like_count":1,"discussions":[{"author":{"id":1244031,"avatar":"https://static001.geekbang.org/account/avatar/00/12/fb/7f/5da88fb5.jpg","nickname":"小锅","note":"","ucode":"A1D46851246755","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530925,"discussion_content":"可能对于小型项目层面来说看不出差别，但是中大型项目的业务场景对于这种优化还是有必要的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637166890,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":1,"child_discussions":[{"author":{"id":1008933,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/25/c6de04bc.jpg","nickname":"斜月浮云","note":"","ucode":"25CECBB175DA02","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":1244031,"avatar":"https://static001.geekbang.org/account/avatar/00/12/fb/7f/5da88fb5.jpg","nickname":"小锅","note":"","ucode":"A1D46851246755","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":530939,"discussion_content":"所以你猜大部分大型企业的技术选型是什么？🙃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637186041,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":530925,"ip_address":""},"score":530939,"extra":"{\"user_type\":1}"}]}]},{"had_liked":false,"id":321525,"user_name":"酱汁","can_delete":false,"product_type":"c1","uid":2436955,"ip_address":"","ucode":"B206BFCD8416AA","user_header":"https://static001.geekbang.org/account/avatar/00/25/2f/5b/74ba6ffa.jpg","comment_is_top":false,"comment_ctime":1636939723,"is_pvip":false,"replies":[{"id":"118390","content":"jsx中这种嵌套其实也是slot<br>const A = (props, { slots }) =&gt; (<br>  &lt;&gt;<br>    &lt;h1&gt;{ slots.default ? slots.default() : &#39;foo&#39; }&lt;&#47;h1&gt;<br>    &lt;h2&gt;{ slots.bar?.() }&lt;&#47;h2&gt;<br>  &lt;&#47;&gt;<br>);<br><br>const App = {<br>  setup() {<br>    const slots = {<br>      bar: () =&gt; &lt;span&gt;B&lt;&#47;span&gt;,<br>    };<br>    return () =&gt; (<br>      &lt;A v-slots={slots}&gt;<br>        &lt;div&gt;A&lt;&#47;div&gt;<br>      &lt;&#47;A&gt;<br>    );<br>  },<br>};<br><br>&#47;&#47; or<br><br>const App = {<br>  setup() {<br>    const slots = {<br>      default: () =&gt; &lt;div&gt;A&lt;&#47;div&gt;,<br>      bar: () =&gt; &lt;span&gt;B&lt;&#47;span&gt;,<br>    };<br>    return () =&gt; &lt;A v-slots={slots} &#47;&gt;;<br>  },<br>};","user_name":"作者回复","user_name_real":"编辑","uid":"1003715","ctime":1639402529,"ip_address":"","comment_id":321525,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1636939723","product_id":100094401,"comment_content":"想问下老师开源组件库种中 这种组合方式  jsx怎么实现的<br> &lt;tabs&gt;<br>   &lt;tab-pane&gt; 内容1  &lt;&#47;tab-pane&gt;<br>   &lt;tab-pane&gt; 内容2 &lt;&#47;tab-pane&gt;<br>   &lt;tab-pane&gt; 内容3 &lt;&#47;tab-pane&gt;<br> &lt;&#47;tabs&gt;","like_count":0,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538398,"discussion_content":"jsx中这种嵌套其实也是slot\nconst A = (props, { slots }) =&gt; (\n  &lt;&gt;\n    &lt;h1&gt;{ slots.default ? slots.default() : &#39;foo&#39; }&lt;/h1&gt;\n    &lt;h2&gt;{ slots.bar?.() }&lt;/h2&gt;\n  &lt;/&gt;\n);\n\nconst App = {\n  setup() {\n    const slots = {\n      bar: () =&gt; &lt;span&gt;B&lt;/span&gt;,\n    };\n    return () =&gt; (\n      &lt;A v-slots={slots}&gt;\n        &lt;div&gt;A&lt;/div&gt;\n      &lt;/A&gt;\n    );\n  },\n};\n\n// or\n\nconst App = {\n  setup() {\n    const slots = {\n      default: () =&gt; &lt;div&gt;A&lt;/div&gt;,\n      bar: () =&gt; &lt;span&gt;B&lt;/span&gt;,\n    };\n    return () =&gt; &lt;A v-slots={slots} /&gt;;\n  },\n};","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639402529,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2822808,"avatar":"","nickname":"元宝","note":"","ucode":"8A98FCBACEDA0A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":415006,"discussion_content":"[...new Array(5)].map( (_val, i) => <tab-pane> 内容{i} </tab-pane> )","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1636963089,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2542255,"avatar":"https://static001.geekbang.org/account/avatar/00/26/ca/af/8e93c68c.jpg","nickname":"Le vent se lève","note":"","ucode":"241F32F635AC6D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":567243,"discussion_content":"老师，代码中可以增加一个这个例子吗，没太看懂，我在项目中也遇到这种需求，写的很low","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650866373,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321503,"user_name":"绿亦歌º","can_delete":false,"product_type":"c1","uid":1762146,"ip_address":"","ucode":"4697C07AE34B03","user_header":"https://static001.geekbang.org/account/avatar/00/1a/e3/62/141946fb.jpg","comment_is_top":false,"comment_ctime":1636908216,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1636908216","product_id":100094401,"comment_content":"第一","like_count":0}]}