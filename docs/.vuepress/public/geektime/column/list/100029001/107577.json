{"id":107577,"title":"21 | 良心中间商：HTTP的代理服务","content":"<p><span class=\"orange\"></span>在前面讲HTTP协议的时候，我们严格遵循了HTTP的“请求-应答”模型，协议中只有两个互相通信的角色，分别是“请求方”浏览器（客户端）和“应答方”服务器。</p><p>今天，我们要在这个模型里引入一个新的角色，那就是<span class=\"orange\">HTTP代理</span>。</p><p>引入HTTP代理后，原来简单的双方通信就变复杂了一些，加入了一个或者多个中间人，但整体上来看，还是一个有顺序关系的链条，而且链条里相邻的两个角色仍然是简单的一对一通信，不会出现越级的情况。</p><p><img src=\"https://static001.geekbang.org/resource/image/28/f9/28237ef93ce0ddca076d2dc19c16fdf9.png?wh=2097*606\" alt=\"\"></p><p>链条的起点还是客户端（也就是浏览器），中间的角色被称为代理服务器（proxy server），链条的终点被称为源服务器（origin server），意思是数据的“源头”“起源”。</p><h2>代理服务</h2><p>“代理”这个词听起来好像很神秘，有点“高大上”的感觉。</p><p>但其实HTTP协议里对它并没有什么特别的描述，它就是在客户端和服务器原本的通信链路中插入的一个中间环节，也是一台服务器，但提供的是“代理服务”。</p><p>所谓的“代理服务”就是指<span class=\"orange\">服务本身不生产内容，而是处于中间位置转发上下游的请求和响应，具有双重身份</span>：面向下游的用户时，表现为服务器，代表源服务器响应客户端的请求；而面向上游的源服务器时，又表现为客户端，代表客户端发送请求。</p><!-- [[[read_end]]] --><p>还是拿上一讲的“生鲜超市”来打个比方。</p><p>之前你都是从超市里买东西，现在楼底下新开了一家24小时便利店，由超市直接供货，于是你就可以在便利店里买到原本必须去超市才能买到的商品。</p><p>这样超市就不直接和你打交道了，成了“源服务器”，便利店就成了超市的“代理服务器”。</p><p>在<a href=\"https://time.geekbang.org/column/article/98934\">第4讲</a>中，我曾经说过，代理有很多的种类，例如匿名代理、透明代理、正向代理和反向代理。</p><p>今天我主要讲的是实际工作中最常见的反向代理，它在传输链路中更靠近源服务器，为源服务器提供代理服务。</p><h2>代理的作用</h2><p>为什么要有代理呢？换句话说，代理能干什么、带来什么好处呢？</p><p>你也许听过这样一句至理名言：“<span class=\"orange\">计算机科学领域里的任何问题，都可以通过引入一个中间层来解决</span>”（在这句话后面还可以再加上一句“如果一个中间层解决不了问题，那就再加一个中间层”）。TCP/IP协议栈是这样，而代理也是这样。</p><p>由于代理处在HTTP通信过程的中间位置，相应地就对上屏蔽了真实客户端，对下屏蔽了真实服务器，简单的说就是“<strong>欺上瞒下</strong>”。在这个中间层的“小天地”里就可以做很多的事情，为HTTP协议增加更多的灵活性，实现客户端和服务器的“双赢”。</p><p>代理最基本的一个功能是<strong>负载均衡</strong>。因为在面向客户端时屏蔽了源服务器，客户端看到的只是代理服务器，源服务器究竟有多少台、是哪些IP地址都不知道。于是代理服务器就可以掌握请求分发的“大权”，决定由后面的哪台服务器来响应请求。</p><p><img src=\"https://static001.geekbang.org/resource/image/8c/7c/8c1fe47a7ca4b52702a6a14956033f7c.png?wh=1305*1042\" alt=\"\"></p><p>代理中常用的负载均衡算法你应该也有所耳闻吧，比如轮询、一致性哈希等等，这些算法的目标都是尽量把外部的流量合理地分散到多台源服务器，提高系统的整体资源利用率和性能。</p><p>在负载均衡的同时，代理服务还可以执行更多的功能，比如：</p><ul>\n<li><strong>健康检查</strong>：使用“心跳”等机制监控后端服务器，发现有故障就及时“踢出”集群，保证服务高可用；</li>\n<li><strong>安全防护</strong>：保护被代理的后端服务器，限制IP地址或流量，抵御网络攻击和过载；</li>\n<li><strong>加密卸载</strong>：对外网使用SSL/TLS加密通信认证，而在安全的内网不加密，消除加解密成本；</li>\n<li><strong>数据过滤</strong>：拦截上下行的数据，任意指定策略修改请求或者响应；</li>\n<li><strong>内容缓存</strong>：暂存、复用服务器响应，这个与<a href=\"https://time.geekbang.org/column/article/106804\">第20讲</a>密切相关，我们稍后再说。</li>\n</ul><p>接着拿刚才的便利店来举例说明。</p><p>因为便利店和超市之间是专车配送，所以有了便利店，以后你买东西就更省事了，打电话给便利店让它去帮你取货，不用关心超市是否停业休息、是否人满为患，而且总能买到最新鲜的。</p><p>便利店同时也方便了超市，不用额外加大店面就可以增加客源和销量，货物集中装卸也节省了物流成本，由于便利店直接面对客户，所以也可以把恶意骚扰电话挡在外面。</p><h2>代理相关头字段</h2><p>代理的好处很多，但因为它“欺上瞒下”的特点，隐藏了真实客户端和服务器，如果双方想要获得这些“丢失”的原始信息，该怎么办呢？</p><p>首先，代理服务器需要用字段“<strong>Via</strong>”标明代理的身份。</p><p>Via是一个通用字段，请求头或响应头里都可以出现。每当报文经过一个代理节点，代理服务器就会把自身的信息追加到字段的末尾，就像是经手人盖了一个章。</p><p>如果通信链路中有很多中间代理，就会在Via里形成一个链表，这样就可以知道报文究竟走过了多少个环节才到达了目的地。</p><p>例如下图中有两个代理：proxy1和proxy2，客户端发送请求会经过这两个代理，依次添加就是“Via:  proxy1, proxy2”，等到服务器返回响应报文的时候就要反过来走，头字段就是“Via:  proxy2,  proxy1”。</p><p><img src=\"https://static001.geekbang.org/resource/image/52/d7/52a3bd760584972011f6be1a5258e2d7.png?wh=2000*687\" alt=\"\"></p><p>Via字段只解决了客户端和源服务器判断是否存在代理的问题，还不能知道对方的真实信息。</p><p>但服务器的IP地址应该是保密的，关系到企业的内网安全，所以一般不会让客户端知道。不过反过来，通常服务器需要知道客户端的真实IP地址，方便做访问控制、用户画像、统计分析。</p><p>可惜的是HTTP标准里并没有为此定义头字段，但已经出现了很多“事实上的标准”，最常用的两个头字段是“<strong>X-Forwarded-For</strong>”和“<strong>X-Real-IP</strong>”。</p><p>“X-Forwarded-For”的字面意思是“为谁而转发”，形式上和“Via”差不多，也是每经过一个代理节点就会在字段里追加一个信息。但“Via”追加的是代理主机名（或者域名），而“X-Forwarded-For”追加的是请求方的IP地址。所以，在字段里最左边的IP地址就是客户端的地址。</p><p>“X-Real-IP”是另一种获取客户端真实IP的手段，它的作用很简单，就是记录客户端IP地址，没有中间的代理信息，相当于是“X-Forwarded-For”的简化版。如果客户端和源服务器之间只有一个代理，那么这两个字段的值就是相同的。</p><p>我们的实验环境实现了一个反向代理，访问“<a href=\"http://www.chrono.com/21-1\">http://www.chrono.com/21-1</a>”，它会转而访问“<a href=\"http://origin.io\">http://origin.io</a>”。这里的“origin.io”就是源站，它会在响应报文里输出“Via”“X-Forwarded-For”等代理头字段信息：</p><p><img src=\"https://static001.geekbang.org/resource/image/c5/e7/c5aa6d5f82e8cc1a35772293972446e7.png?wh=1227*1120\" alt=\"\"></p><p>单从浏览器的页面上很难看出代理做了哪些工作，因为代理的转发都在后台不可见，所以我把这个过程用Wireshark抓了一个包：</p><p><img src=\"https://static001.geekbang.org/resource/image/5a/54/5a247e9e5bf66f5ac3316fddf4e2b254.png?wh=2112*1296\" alt=\"\"></p><p>从抓包里就可以清晰地看出代理与客户端、源服务器的通信过程：</p><ol>\n<li>客户端55061先用三次握手连接到代理的80端口，然后发送GET请求；</li>\n<li>代理不直接生产内容，所以就代表客户端，用55063端口连接到源服务器，也是三次握手；</li>\n<li>代理成功连接源服务器后，发出了一个HTTP/1.0 的GET请求；</li>\n<li>因为HTTP/1.0默认是短连接，所以源服务器发送响应报文后立即用四次挥手关闭连接；</li>\n<li>代理拿到响应报文后再发回给客户端，完成了一次代理服务。</li>\n</ol><p>在这个实验中，你可以看到除了“X-Forwarded-For”和“X-Real-IP”，还出现了两个字段：“X-Forwarded-Host”和“X-Forwarded-Proto”，它们的作用与“X-Real-IP”类似，只记录客户端的信息，分别是客户端请求的原始域名和原始协议名。</p><h2>代理协议</h2><p>有了“X-Forwarded-For”等头字段，源服务器就可以拿到准确的客户端信息了。但对于代理服务器来说它并不是一个最佳的解决方案。</p><p>因为通过“X-Forwarded-For”操作代理信息必须要解析HTTP报文头，这对于代理来说成本比较高，原本只需要简单地转发消息就好，而现在却必须要费力解析数据再修改数据，会降低代理的转发性能。</p><p>另一个问题是“X-Forwarded-For”等头必须要修改原始报文，而有些情况下是不允许甚至不可能的（比如使用HTTPS通信被加密）。</p><p>所以就出现了一个专门的“代理协议”（The PROXY protocol），它由知名的代理软件HAProxy所定义，也是一个“事实标准”，被广泛采用（注意并不是RFC）。</p><p>“代理协议”有v1和v2两个版本，v1和HTTP差不多，也是明文，而v2是二进制格式。今天只介绍比较好理解的v1，它在HTTP报文前增加了一行ASCII码文本，相当于又多了一个头。</p><p>这一行文本其实非常简单，开头必须是“PROXY”五个大写字母，然后是“TCP4”或者“TCP6”，表示客户端的IP地址类型，再后面是请求方地址、应答方地址、请求方端口号、应答方端口号，最后用一个回车换行（\\r\\n）结束。</p><p>例如下面的这个例子，在GET请求行前多出了PROXY信息行，客户端的真实IP地址是“1.1.1.1”，端口号是55555。</p><pre><code>PROXY TCP4 1.1.1.1 2.2.2.2 55555 80\\r\\n\nGET / HTTP/1.1\\r\\n\nHost: www.xxx.com\\r\\n\n\\r\\n\n</code></pre><p>服务器看到这样的报文，只要解析第一行就可以拿到客户端地址，不需要再去理会后面的HTTP数据，省了很多事情。</p><p>不过代理协议并不支持“X-Forwarded-For”的链式地址形式，所以拿到客户端地址后再如何处理就需要代理服务器与后端自行约定。</p><h2>小结</h2><ol>\n<li><span class=\"orange\">HTTP代理就是客户端和服务器通信链路中的一个中间环节，为两端提供“代理服务”；</span></li>\n<li><span class=\"orange\">代理处于中间层，为HTTP处理增加了更多的灵活性，可以实现负载均衡、安全防护、数据过滤等功能；</span></li>\n<li><span class=\"orange\">代理服务器需要使用字段“Via”标记自己的身份，多个代理会形成一个列表；</span></li>\n<li><span class=\"orange\">如果想要知道客户端的真实IP地址，可以使用字段“X-Forwarded-For”和“X-Real-IP”；</span></li>\n<li><span class=\"orange\">专门的“代理协议”可以在不改动原始报文的情况下传递客户端的真实IP。</span></li>\n</ol><h2>课下作业</h2><ol>\n<li>你觉得代理有什么缺点？实际应用时如何避免？</li>\n<li>你知道多少反向代理中使用的负载均衡算法？它们有什么优缺点？</li>\n</ol><p>欢迎你把自己的学习体会写在留言区，与我和其他同学一起讨论。如果你觉得有所收获，也欢迎把文章分享给你的朋友。</p><p><img src=\"https://static001.geekbang.org/resource/image/a8/9f/a8122180bd01e05613d75d34962da79f.png?wh=1769*2798\" alt=\"unpreview\"></p><p><img src=\"https://static001.geekbang.org/resource/image/56/63/56d766fc04654a31536f554b8bde7b63.jpg?wh=1110*659\" alt=\"unpreview\"></p>","comments":[{"had_liked":false,"id":113747,"user_name":"-W.LI-","can_delete":false,"product_type":"c1","uid":1210699,"ip_address":"","ucode":"3556786538664F","user_header":"https://static001.geekbang.org/account/avatar/00/12/79/4b/740f91ca.jpg","comment_is_top":false,"comment_ctime":1563150868,"is_pvip":false,"replies":[{"id":"41407","content":"great！","user_name":"作者回复","comment_id":113747,"uid":"1181974","ip_address":"","utype":1,"ctime":1563153766,"user_name_real":"chrono"}],"discussion_count":4,"race_medal":0,"score":"216311515668","product_id":100029001,"comment_content":"代理会增加链路长度，在代理上做一些复杂的处理。会很耗费性能，增加响应时间。<br>1.随机<br>2.轮询<br>3.一致性hash<br>4最近最少使用<br>5.链接最少","like_count":51,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458368,"discussion_content":"great！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563153766,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1105387,"avatar":"https://static001.geekbang.org/account/avatar/00/10/dd/eb/80f9d212.jpg","nickname":"lttzzlll","note":"","ucode":"FA160F7C02ABAA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337556,"discussion_content":"总结下来分为两类:\n1. 根据服务端的情况做负载均衡 round-robin, weighted-round-robin, LRU, least connecetion\n2. 根据客户端的一些feature做负载均衡 ip, cookie, other features\n\n随机也是根据服务端的情况做负载均衡的一种。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1608972974,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1003005,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","nickname":"许童童","note":"","ucode":"4B799C0C6BC678","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1986,"discussion_content":"总结得不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563163086,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1484184,"avatar":"https://static001.geekbang.org/account/avatar/00/16/a5/98/a65ff31a.jpg","nickname":"djfhchdh","note":"","ucode":"E71D75328CE398","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1974,"discussion_content":"学习了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563158138,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215959,"user_name":"BoyiKia","can_delete":false,"product_type":"c1","uid":1983680,"ip_address":"","ucode":"D37541B4451D6B","user_header":"https://static001.geekbang.org/account/avatar/00/1e/44/c0/cd2cd082.jpg","comment_is_top":false,"comment_ctime":1589159678,"is_pvip":false,"replies":[{"id":"79966","content":"这个是tcp协议的知识了，就是谁先断开连接的问题。<br><br>其实这个并没有强制要求客户端或者服务器先断开，通常都是客户端主动断开，但服务器也可以主动断开，比如超时、短连接、节约资源等等。<br><br>所以结论就是谁都可以，有空可以再补一下tcp的知识。","user_name":"作者回复","comment_id":215959,"uid":"1181974","ip_address":"","utype":1,"ctime":1589182876,"user_name_real":"chrono"}],"discussion_count":2,"race_medal":0,"score":"74603603710","product_id":100029001,"comment_content":"老师，我发现前几节课，四次挥手的时候，是客户端主动先发 Fin信号， 今天实验结果，是源服务器，先给代理服务器发的 Fin信号。老师，我有点疑惑哈。到底是谁应该先发。还是说都可以呢。","like_count":18,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494623,"discussion_content":"这个是tcp协议的知识了，就是谁先断开连接的问题。\n\n其实这个并没有强制要求客户端或者服务器先断开，通常都是客户端主动断开，但服务器也可以主动断开，比如超时、短连接、节约资源等等。\n\n所以结论就是谁都可以，有空可以再补一下tcp的知识。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589182876,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1983680,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/44/c0/cd2cd082.jpg","nickname":"BoyiKia","note":"","ucode":"D37541B4451D6B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":263365,"discussion_content":"嗯嗯，很感谢老师。谢谢😜","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589203105,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":228437,"user_name":"Demon","can_delete":false,"product_type":"c1","uid":1390641,"ip_address":"","ucode":"58CD838717F36D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIUdfNDQs3eLoIjfIXDm77W66udicLfqh6NA8QX4QuZNO48UlRTfDo2Fm2jGX0z3hjnbARib8wSbxcg/132","comment_is_top":false,"comment_ctime":1592671925,"is_pvip":false,"replies":[{"id":"84245","content":"当然有了，互联网上很少有直连网站的，都要经过层层代理，这中间就免不了用代理协议。<br><br>很多代理并不是为了匿名，而是为了缓存。","user_name":"作者回复","comment_id":228437,"uid":"1181974","ip_address":"","utype":1,"ctime":1592722710,"user_name_real":"罗剑锋"}],"discussion_count":1,"race_medal":0,"score":"48837312181","product_id":100029001,"comment_content":"很多场景下，使用代理的目的就是为了匿名，不让对方知道请求&#47;响应的来源在哪儿。除了在测试环境分析技术问题的场景，现实业务中有需要在报文中携带层层代理信息的应用case吗？","like_count":12,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499033,"discussion_content":"当然有了，互联网上很少有直连网站的，都要经过层层代理，这中间就免不了用代理协议。\n\n很多代理并不是为了匿名，而是为了缓存。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592722710,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114330,"user_name":"火车日记","can_delete":false,"product_type":"c1","uid":1480419,"ip_address":"","ucode":"62C57DFA6CDF74","user_header":"https://static001.geekbang.org/account/avatar/00/16/96/e3/dd40ec58.jpg","comment_is_top":false,"comment_ctime":1563275567,"is_pvip":false,"replies":[{"id":"41769","content":"great！","user_name":"作者回复","comment_id":114330,"uid":"1181974","ip_address":"","utype":1,"ctime":1563325518,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"40217981231","product_id":100029001,"comment_content":"1 补充几个，ip_hash 、最少连接数、最快连接数，根据场景应用<br>2 作为中转站，需要为上游和下游开启两个连接，大量并发请求，会出现性能瓶颈，应减少资源开销，加快响应速度，比如代理缓存，动静分离","like_count":10,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458610,"discussion_content":"great！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563325518,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180868,"user_name":"Long","can_delete":false,"product_type":"c1","uid":1580358,"ip_address":"","ucode":"D85B99FD0C4B76","user_header":"https://wx.qlogo.cn/mmopen/vi_32/ZMALpD4bKCVdsx8ymCC5Oo0oxibxIFGQzT6fP2B8MEgLGLktQRX4ictobkbcNBDTQibjoQNKBmWCKomNibWqHZ5kpg/132","comment_is_top":false,"comment_ctime":1582431868,"is_pvip":false,"replies":[{"id":"70198","content":"这个里面其实很复杂，首先网站外面会有cdn，然后入口会有反向代理，再后面才可能是真实的业务服务器。<br><br>服务器也可以安装多个网卡，一个网卡对外，一个网卡对内，这样有两个ip地址，分别对外对内。","user_name":"作者回复","comment_id":180868,"uid":"1181974","ip_address":"","utype":1,"ctime":1582443569,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"27352235644","product_id":100029001,"comment_content":"老师好,文中<br>&quot;服务器的 IP 地址应该是保密的，关系到企业的内网安全，所以一般不会让客户端知道。&quot;<br>是不是可以认为,域名所对应的IP地址和真实服务器的IP地址是不一样的呢?因为真实服务器的地址一般都是私网的IP地址.","like_count":6,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484824,"discussion_content":"这个里面其实很复杂，首先网站外面会有cdn，然后入口会有反向代理，再后面才可能是真实的业务服务器。\n\n服务器也可以安装多个网卡，一个网卡对外，一个网卡对内，这样有两个ip地址，分别对外对内。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582443569,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113722,"user_name":"lmingzhi","can_delete":false,"product_type":"c1","uid":1014489,"ip_address":"","ucode":"72DBAF4FD184AF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7a/d9/4feb4006.jpg","comment_is_top":false,"comment_ctime":1563147844,"is_pvip":false,"replies":[{"id":"41408","content":"如果代理比较“善良”，就会用“X-Forwarded-For”和“X-Real-IP”告知客户端的真实ip，如果它是完全匿名，不提供这些字段，我们也没有办法，因为它就是一个真实的客户端。","user_name":"作者回复","comment_id":113722,"uid":"1181974","ip_address":"","utype":1,"ctime":1563153945,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"18743017028","product_id":100029001,"comment_content":"老师，请问有什么检测http代理ip匿名性的手段？<br><br>是否只要检查请求头是否带有“X-Forwarded-For”和“X-Real-IP”及里面是否带有真实ip即可？","like_count":5,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458360,"discussion_content":"如果代理比较“善良”，就会用“X-Forwarded-For”和“X-Real-IP”告知客户端的真实ip，如果它是完全匿名，不提供这些字段，我们也没有办法，因为它就是一个真实的客户端。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563153945,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":176084,"user_name":"sarah","can_delete":false,"product_type":"c1","uid":1140403,"ip_address":"","ucode":"CAF3960C1CCD04","user_header":"https://static001.geekbang.org/account/avatar/00/11/66/b3/8fe66459.jpg","comment_is_top":false,"comment_ctime":1580953543,"is_pvip":false,"replies":[{"id":"68433","content":"这个是tcp协议的ack，表示收到报文的确认，如果你再多了解一些tcp的知识就会明白。","user_name":"作者回复","comment_id":176084,"uid":"1181974","ip_address":"","utype":1,"ctime":1580956697,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"14465855431","product_id":100029001,"comment_content":"老师，对图中wireshark的抓包有个疑问: 每一次的http报文后面会跟着一个tcp报文，这个tcp报文是怎么产生的？作用是什么？例如，第一个http报文，HTTP GET&#47;21-1 HTTP1.1后面的TCP 80–55061 ","like_count":3,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483011,"discussion_content":"这个是tcp协议的ack，表示收到报文的确认，如果你再多了解一些tcp的知识就会明白。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580956697,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":158420,"user_name":"夏目","can_delete":false,"product_type":"c1","uid":1212750,"ip_address":"","ucode":"67C075A01CF4D2","user_header":"https://static001.geekbang.org/account/avatar/00/12/81/4e/d71092f4.jpg","comment_is_top":false,"comment_ctime":1575367079,"is_pvip":false,"replies":[{"id":"60673","content":"是的，可以算是一种微型的反向代理。","user_name":"作者回复","comment_id":158420,"uid":"1181974","ip_address":"","utype":1,"ctime":1575421375,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"14460268967","product_id":100029001,"comment_content":"老师，微服务里的网关算不算一个增强版的代理服务器呢","like_count":3,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476716,"discussion_content":"是的，可以算是一种微型的反向代理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575421375,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114338,"user_name":"院长。","can_delete":false,"product_type":"c1","uid":1153546,"ip_address":"","ucode":"DF56871F42A868","user_header":"https://static001.geekbang.org/account/avatar/00/11/9a/0a/da55228e.jpg","comment_is_top":false,"comment_ctime":1563276925,"is_pvip":false,"replies":[{"id":"41768","content":"安全篇后的飞翔篇有http&#47;2和http&#47;3。","user_name":"作者回复","comment_id":114338,"uid":"1181974","ip_address":"","utype":1,"ctime":1563325505,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"14448178813","product_id":100029001,"comment_content":"老师后面会讲HTTP2.0吗","like_count":3,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458615,"discussion_content":"安全篇后的飞翔篇有http/2和http/3。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563325505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":227382,"user_name":"Maske","can_delete":false,"product_type":"c1","uid":1696847,"ip_address":"","ucode":"A19BB41A47E852","user_header":"https://static001.geekbang.org/account/avatar/00/19/e4/4f/df6d810d.jpg","comment_is_top":false,"comment_ctime":1592369016,"is_pvip":true,"replies":[{"id":"83807","content":"说的挺好，这段时间学习得很勤奋啊，也要适当休息。","user_name":"作者回复","comment_id":227382,"uid":"1181974","ip_address":"","utype":1,"ctime":1592372231,"user_name_real":"罗剑锋"}],"discussion_count":2,"race_medal":0,"score":"10182303608","product_id":100029001,"comment_content":"1.a 代理服务器与上下游的通信机制也是http协议，因此增加了传输中的数据泄漏和篡改风险，可以使用https解决。b 如果代理服务器发生故障，会影响客户端的正常访问，可以增加代理服务器的数量，并配置代理服务器负载均衡算法。c 由于多了代理服务器的请求响应过程，增加了从源客户端和源服务器之间的来回时间。<br>2.轮询，加权轮询，随机法，加权随机法，源地址哈希法，最小连接数法","like_count":3,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498611,"discussion_content":"说的挺好，这段时间学习得很勤奋啊，也要适当休息。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592372231,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1696847,"avatar":"https://static001.geekbang.org/account/avatar/00/19/e4/4f/df6d810d.jpg","nickname":"Maske","note":"","ucode":"A19BB41A47E852","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":283893,"discussion_content":"嗯，会的，感谢老师支持哈～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592391096,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":222332,"user_name":"Aaron","can_delete":false,"product_type":"c1","uid":1156222,"ip_address":"","ucode":"059966DCA3A8F0","user_header":"https://static001.geekbang.org/account/avatar/00/11/a4/7e/963c037c.jpg","comment_is_top":false,"comment_ctime":1590750652,"is_pvip":false,"replies":[{"id":"82021","content":"<br>1.proxy头在第一行，结构很简单，而X-Forwarded-For在http头里，要有复杂的解析，特别是当http头很大的时候，成本就高了。<br><br>2.同样的原因，X-Forwarded-For在http头里，要修改就等于变动了原始的http报文，而proxy 协议是附加在外面的，不会改动原始报文。","user_name":"作者回复","comment_id":222332,"uid":"1181974","ip_address":"","utype":1,"ctime":1590755310,"user_name_real":"罗剑锋"}],"discussion_count":1,"race_medal":0,"score":"10180685244","product_id":100029001,"comment_content":"『因为通过“X-Forwarded-For”操作代理信息必须要解析 HTTP 报文头，这对于代理来说成本比较高，原本只需要简单地转发消息就好，而现在却必须要费力解析数据再修改数据，会降低代理的转发性能。』<br>问：代理协议的 PROXY 不也是一个头吗？同样需要对 header 的操作。它的优势是不是只在于操作的内容比 &quot;X-Forwarded-For&quot; 少一点而已？<br><br>『另一个问题是“X-Forwarded-For”等头必须要修改原始报文，而有些情况下是不允许甚至不可能的（比如使用 HTTPS 通信被加密）』<br>问：为什么“X-Forwarded-For”等头必须要修改原始报文呢？不是很理解。烦请老师解释一下，谢谢。","like_count":3,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496754,"discussion_content":"\n1.proxy头在第一行，结构很简单，而X-Forwarded-For在http头里，要有复杂的解析，特别是当http头很大的时候，成本就高了。\n\n2.同样的原因，X-Forwarded-For在http头里，要修改就等于变动了原始的http报文，而proxy 协议是附加在外面的，不会改动原始报文。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590755310,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":199775,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1585495734,"is_pvip":false,"replies":[{"id":"74797","content":"<br>1.对，代理的问题一个是成本，另一个就是信任。<br><br>2.最常用的就是这些了。<br><br>3.vpn和代理是两回事，它是一个虚拟的链路，有点像隧道，中间没有代理这样的角色，是直通的。","user_name":"作者回复","comment_id":199775,"uid":"1181974","ip_address":"","utype":1,"ctime":1585530740,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"10175430326","product_id":100029001,"comment_content":"1：你觉得代理有什么缺点？实际应用时如何避免？<br>代理代理就是找她人代替你去打理一些事情，让他人代办事情你必须交代好沟通好，那效率自然会低一些，另外，如果代理出问题了，那你的事自然也办不成了，所以，可能存在单点问题，不过一般还好。<br><br>2：你知道多少反向代理中使用的负载均衡算法？它们有什么优缺点？<br>随机——简单，是否均匀看随机情况<br>轮询（一般轮询、加权轮询）——相对简单，也会考虑机器资源和性能的均衡性<br>哈希（一般哈希、一致性哈希、带虚拟节点的一致性哈希）——相对复杂，要求越公平就会越复杂，而且适当考虑了请求<br>哈希槽，和redis类似<br><br>只有能使请求尽可能的高效分发就行，请教一下VPN和代理，本质是否差不多？","like_count":3,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489875,"discussion_content":"\n1.对，代理的问题一个是成本，另一个就是信任。\n\n2.最常用的就是这些了。\n\n3.vpn和代理是两回事，它是一个虚拟的链路，有点像隧道，中间没有代理这样的角色，是直通的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585530740,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":196626,"user_name":"AKA三皮","can_delete":false,"product_type":"c1","uid":1102656,"ip_address":"","ucode":"D3BC5C60025E9D","user_header":"https://static001.geekbang.org/account/avatar/00/10/d3/40/0067d6db.jpg","comment_is_top":false,"comment_ctime":1585298187,"is_pvip":false,"replies":[{"id":"74823","content":"对，这个就是中间层的力量，也是软件开发的基本原则。","user_name":"作者回复","comment_id":196626,"uid":"1181974","ip_address":"","utype":1,"ctime":1585532424,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"10175232779","product_id":100029001,"comment_content":"代理是个好东西，比如各种精细化的流量控制，灰度发布，同时微服务拆分后，服务治理的相关功能也可以下沉到代理去做，比如 限流、熔断。选个高性能的网络代理是王道，比如envoy","like_count":3,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489345,"discussion_content":"对，这个就是中间层的力量，也是软件开发的基本原则。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585532424,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115856,"user_name":"FF","can_delete":false,"product_type":"c1","uid":1001615,"ip_address":"","ucode":"26349F32B406D7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/8f/7ecd4eed.jpg","comment_is_top":false,"comment_ctime":1563758784,"is_pvip":false,"replies":[{"id":"42346","content":"代理协议的那一行是代理服务器加的，客户端不需要参与。<br><br>代理协议的优势是简单，比http头好解析好处理，这对于代理服务器来说就能够提高转发效率。<br><br>你后面的理解基本正确。","user_name":"作者回复","comment_id":115856,"uid":"1181974","ip_address":"","utype":1,"ctime":1563759079,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"10153693376","product_id":100029001,"comment_content":"haproxy 那个代理协议那一行要客户端自己加上去的 ？如果客户端把这个加到 x-forward-for 里面，不用代理协议，那不是也可以解决代理去修改头部的问题 ？重点都是客户端先加上去这些信息 。这样看代理协议没啥优势啊，或者不是为了解决减少中间代理再去修改头的问题 ？盼复，感谢。","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459315,"discussion_content":"代理协议的那一行是代理服务器加的，客户端不需要参与。\n\n代理协议的优势是简单，比http头好解析好处理，这对于代理服务器来说就能够提高转发效率。\n\n你后面的理解基本正确。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563759079,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114097,"user_name":"星星之火","can_delete":false,"product_type":"c1","uid":1046282,"ip_address":"","ucode":"3D57C443E3ED8C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/0a/8534d0fa.jpg","comment_is_top":false,"comment_ctime":1563237968,"is_pvip":true,"replies":[{"id":"41637","content":"这个无法保证，协议里的字段都是可以改的，只能靠代理的良心。<br><br>一般来说，用代理协议是比较可靠的。","user_name":"作者回复","comment_id":114097,"uid":"1181974","ip_address":"","utype":1,"ctime":1563249892,"user_name_real":"chrono"}],"discussion_count":2,"race_medal":0,"score":"10153172560","product_id":100029001,"comment_content":"老师您好，请问综合考虑代理的各种情况（比如匿名代理，篡改请求头字段）之后，怎么才能保证在服务端获取客户端的真实ip呢？","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458514,"discussion_content":"这个无法保证，协议里的字段都是可以改的，只能靠代理的良心。\n\n一般来说，用代理协议是比较可靠的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563249892,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1008348,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/dc/8876c73b.jpg","nickname":"moooofly","note":"","ucode":"4A20795C281B6F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3302,"discussion_content":"但是代理协议又不能多级链式传播，所以，也没有办法解决这个问题吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564385117,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113989,"user_name":"前端西瓜哥","can_delete":false,"product_type":"c1","uid":1248576,"ip_address":"","ucode":"150130C34CD1C1","user_header":"https://static001.geekbang.org/account/avatar/00/13/0d/40/f70e5653.jpg","comment_is_top":false,"comment_ctime":1563198842,"is_pvip":false,"replies":[{"id":"41594","content":"很多代理都是用1.0的，这个取决于代理自己，因为有缓存，所以短连接也不会太影响效率。<br><br>集群有局域网的，也有广域网的。","user_name":"作者回复","comment_id":113989,"uid":"1181974","ip_address":"","utype":1,"ctime":1563239397,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"10153133434","product_id":100029001,"comment_content":"代理服务器如何连接源服务器？用 http1.0 短连接的效率不太好吧？集群一般都是局域网吗？","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458468,"discussion_content":"很多代理都是用1.0的，这个取决于代理自己，因为有缓存，所以短连接也不会太影响效率。\n\n集群有局域网的，也有广域网的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563239397,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":284715,"user_name":"Geek_6ea9af","can_delete":false,"product_type":"c1","uid":2448767,"ip_address":"","ucode":"9E2BE7F4129085","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoSMRiaMtAcqQ6PWHrue81oR1Ujr7lX3Mz1P00aX2SBibUX51yz3zFqovTRIDiaTWNUlq4U0KV2zib2Uw/132","comment_is_top":false,"comment_ctime":1616426079,"is_pvip":false,"replies":[{"id":"103288","content":"既然是代理，显然就帮客户端做所有事情了。客户端直接与代理通信，用不到域名解析，由代理实现对外收发信息。<br><br>或者反过来想一下，如果客户端解析域名，那么就拿到了真实ip地址，就会直连外网，也就不会走代理了。","user_name":"作者回复","comment_id":284715,"uid":"1181974","ip_address":"","utype":1,"ctime":1616458448,"user_name_real":"罗剑锋"}],"discussion_count":1,"race_medal":0,"score":"5911393375","product_id":100029001,"comment_content":"老师，请问在配置了正向代理之后，对于真正服务端的域名解析是发生在客户端还是代理端？该代理服务器仅做请求转发。","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517443,"discussion_content":"既然是代理，显然就帮客户端做所有事情了。客户端直接与代理通信，用不到域名解析，由代理实现对外收发信息。\n\n或者反过来想一下，如果客户端解析域名，那么就拿到了真实ip地址，就会直连外网，也就不会走代理了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616458448,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235886,"user_name":"xuan","can_delete":false,"product_type":"c1","uid":2015544,"ip_address":"","ucode":"EB2C3DB97C34A7","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/QOiaNght8yAR376VdV9L6k47ugAyEk5qJAwJrsqf4rzTDoRZoLYGL0MBTvG0TngKkE8V9CibyDP8O3DQt951Hc2w/132","comment_is_top":false,"comment_ctime":1595234944,"is_pvip":false,"replies":[{"id":"87180","content":"<br>1.这个是代理服务器添加的，当然因为http协议很自由，客户端填也可以，但这就没有意义了。<br><br>2.这个头是为代理服务器准备的，含义是原始客户端，所以对于客户端来说就不需要这个头。","user_name":"作者回复","comment_id":235886,"uid":"1181974","ip_address":"","utype":1,"ctime":1595292954,"user_name_real":"罗剑锋"}],"discussion_count":1,"race_medal":0,"score":"5890202240","product_id":100029001,"comment_content":"问题：<br>1.&quot;X-Forwarded-For”头的信息刚开始是客户端给的吗？<br>2.X-Forwarded-For在http头里，要修改就等于变动了原始的http报文，这个时候的修改动作发生在客户端还是代理服务器？<br>个人认为是客户端，两个动作应该都是在客户端","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501864,"discussion_content":"\n1.这个是代理服务器添加的，当然因为http协议很自由，客户端填也可以，但这就没有意义了。\n\n2.这个头是为代理服务器准备的，含义是原始客户端，所以对于客户端来说就不需要这个头。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595292954,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":205377,"user_name":"张三","can_delete":false,"product_type":"c1","uid":1004092,"ip_address":"","ucode":"1155528FAE1546","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/3c/d6fcb93a.jpg","comment_is_top":false,"comment_ctime":1586602948,"is_pvip":false,"replies":[{"id":"76734","content":"haproxy是专门的http代理软件，功能很强大，和Mulesoft的差距比较大吧。","user_name":"作者回复","comment_id":205377,"uid":"1181974","ip_address":"","utype":1,"ctime":1586646868,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"5881570244","product_id":100029001,"comment_content":"HAProxy是不是就是MuleSoft…","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491466,"discussion_content":"haproxy是专门的http代理软件，功能很强大，和Mulesoft的差距比较大吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586646868,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":176206,"user_name":"Geek_f8a084","can_delete":false,"product_type":"c1","uid":1717068,"ip_address":"","ucode":"8B75B6A013AAFF","user_header":"","comment_is_top":false,"comment_ctime":1580989040,"is_pvip":false,"replies":[{"id":"68467","content":"是的。","user_name":"作者回复","comment_id":176206,"uid":"1181974","ip_address":"","utype":1,"ctime":1581033589,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"5875956336","product_id":100029001,"comment_content":"转发是指的代理服务吗？","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483046,"discussion_content":"是的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581033589,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":173882,"user_name":"keep it simple","can_delete":false,"product_type":"c1","uid":1574739,"ip_address":"","ucode":"72B8DC00247C9E","user_header":"https://static001.geekbang.org/account/avatar/00/18/07/53/05aa9573.jpg","comment_is_top":false,"comment_ctime":1579753293,"is_pvip":false,"replies":[{"id":"67671","content":"<br>1.比如说，代理可以过滤某个关键字，如果出现有“密码”“银行卡”就把数据用xxx代替。<br><br>2.http报文可以随意修改，没有防窜改的手段，中间的代理可以任意修改，后面的也不知道，当然通常没有必要这么做，但不是说不可以改。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1579862294,"ip_address":"","comment_id":173882,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5874720589","product_id":100029001,"comment_content":"学完了这一课，收获很大！给老师点赞~<br>第一个问题是：数据过滤——拦截上下行的数据，任意指定策略修改请求或者响应。这个不太理解。<br>第二个问题：X-Real-IP的例子，如果链路中有多个代理服务器，那只有第一个代理会加上X-Real-IP，后面的代理都不会再动这个字段了吧？","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482227,"discussion_content":"\n1.比如说，代理可以过滤某个关键字，如果出现有“密码”“银行卡”就把数据用xxx代替。\n\n2.http报文可以随意修改，没有防窜改的手段，中间的代理可以任意修改，后面的也不知道，当然通常没有必要这么做，但不是说不可以改。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579862294,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117084,"user_name":"业余草","can_delete":false,"product_type":"c1","uid":1126538,"ip_address":"","ucode":"99BDC1E629049D","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/8a/b5ca7286.jpg","comment_is_top":false,"comment_ctime":1563964308,"is_pvip":false,"replies":[{"id":"42905","content":"go on。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1564016563,"ip_address":"","comment_id":117084,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5858931604","product_id":100029001,"comment_content":"落下了不少课，今天补上","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459812,"discussion_content":"go on。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564016563,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114528,"user_name":"Leon📷","can_delete":false,"product_type":"c1","uid":1219496,"ip_address":"","ucode":"B9BBD1EFAAE5A2","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/a8/6a391c66.jpg","comment_is_top":false,"comment_ctime":1563329788,"is_pvip":false,"replies":[{"id":"41799","content":"nice。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1563332563,"ip_address":"","comment_id":114528,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5858297084","product_id":100029001,"comment_content":"前面的课程都好轻松，到这里突然感觉有点小压力了，代理proxy的课程陶辉老师的课nginx有讲过，说了缓解上游和下游的网速差异等等优化，当时一脸懵逼，不知道这玩意干啥的，学到这里才真正理解到，开源的方案都是为了解决实际应用场景的问题的，结合nginx的解决方案，应该都能解答代理的缺陷问题","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458706,"discussion_content":"nice。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563332563,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1440263,"avatar":"https://static001.geekbang.org/account/avatar/00/15/fa/07/1d50f530.jpg","nickname":"Gasnerd","note":"","ucode":"3630276571AF66","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213521,"discussion_content":"我也是两个课一起听的，对http的确这个课更深入。veli veli nice","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585101415,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114048,"user_name":"Geek_d4dee7","can_delete":false,"product_type":"c1","uid":1241569,"ip_address":"","ucode":"636908D6F43C6D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLw9fVyja3eQLGQenLf5EqVaxGQoibo7rq8A7IRjlXED9FhicKukcn0ibCCtiaBqpEib4ZEIWfFOkiaGMSQ/132","comment_is_top":false,"comment_ctime":1563233157,"is_pvip":false,"replies":[{"id":"41593","content":"slb应该是server load balance吧，负载均衡设备，也可以算是一种代理，但有的不一定使用http协议。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1563239296,"ip_address":"","comment_id":114048,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5858200453","product_id":100029001,"comment_content":"常听说的SLB是中间的这个代理么 老师","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458495,"discussion_content":"slb应该是server load balance吧，负载均衡设备，也可以算是一种代理，但有的不一定使用http协议。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563239296,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113883,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1563179005,"is_pvip":true,"replies":[{"id":"41497","content":"是的，X-Forwarded-Host的格式与X-Forwarded-For不同，它只有一个值，不是逗号列表。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1563184255,"ip_address":"","comment_id":113883,"utype":1}],"discussion_count":1,"race_medal":1,"score":"5858146301","product_id":100029001,"comment_content":"还出现了两个字段：“X-Forwarded-Host”和“X-Forwarded-Proto”，它们的作用与“X-Real-IP”类似，只记录客户端的信息，分别是客户端请求的原始域名和原始协议名。<br>——————————<br>老师，对于这句话，有点疑问，X-Forwarded-Host只是真实客户端的host吗？类比X-Real-IP，真实客户端的Host不应该是X-Real-Host吗？有关Forwarded的头不应该都是代理链路所有的以逗号分开的信息吗？","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458421,"discussion_content":"是的，X-Forwarded-Host的格式与X-Forwarded-For不同，它只有一个值，不是逗号列表。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563184255,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":347989,"user_name":"Geek_21a73c","can_delete":false,"product_type":"c1","uid":3014444,"ip_address":"","ucode":"104A4AD89DA6BC","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM74658w9PQeTM4TcM14BzfpJnVLrsciaS26ibRwRbCE09ydI6UlZhFrJh7iaVLp2xxhBppVDKLyRRg9Q/132","comment_is_top":false,"comment_ctime":1654653485,"is_pvip":false,"replies":[{"id":"126840","content":"建议改用虚拟机或者docker，在实机环境里干扰因素太多了，不当面很难解决。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1654695250,"ip_address":"","comment_id":347989,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1654653485","product_id":100029001,"comment_content":"我们的实验环境实现了一个反向代理，访问“http:&#47;&#47;www.chrono.com&#47;21-1”，它会转而访问“http:&#47;&#47;origin.io”。<br><br>老师，http:&#47;&#47;www.chrono.com&#47;21-1”打开后显示404，这要怎么办呢","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575270,"discussion_content":"建议改用虚拟机或者docker，在实机环境里干扰因素太多了，不当面很难解决。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654695250,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":333253,"user_name":"红宝书第四版88-931","can_delete":false,"product_type":"c1","uid":2817888,"ip_address":"","ucode":"6DC97E8DB393B9","user_header":"https://static001.geekbang.org/account/avatar/00/2a/ff/60/df2033b8.jpg","comment_is_top":false,"comment_ctime":1644232447,"is_pvip":true,"replies":[{"id":"121846","content":"awesome","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1644368720,"ip_address":"","comment_id":333253,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1644232447","product_id":100029001,"comment_content":"1.正向代理隐藏了客户端，源服务器不知道发请求的是谁，代表是某科学上午工具<br>2.反向代码隐藏了源服务端，客户端不知道请求最终会由谁来处理，代表nginx","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550037,"discussion_content":"awesome","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644368720,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":329624,"user_name":"罗文静好漂亮啊","can_delete":false,"product_type":"c1","uid":2439636,"ip_address":"","ucode":"4D1FF065D9CF16","user_header":"https://static001.geekbang.org/account/avatar/00/25/39/d4/08989e53.jpg","comment_is_top":false,"comment_ctime":1641451862,"is_pvip":false,"replies":[{"id":"120270","content":"这个有很多成熟的方案，比如keepalived。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1641813787,"ip_address":"","comment_id":329624,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1641451862","product_id":100029001,"comment_content":"所有请求都要通过代理,那如果代理挂了怎么办,怎么保证代理的高可用","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545046,"discussion_content":"这个有很多成熟的方案，比如keepalived。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641813787,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319386,"user_name":"cake","can_delete":false,"product_type":"c1","uid":1966533,"ip_address":"","ucode":"55A7FC6CC1204C","user_header":"https://static001.geekbang.org/account/avatar/00/1e/01/c5/b48d25da.jpg","comment_is_top":false,"comment_ctime":1635768148,"is_pvip":false,"replies":[{"id":"115800","content":"我摘一下维基百科里的文字，可能会说的比较清楚：<br><br>XFF一般格式如下:<br><br>X-Forwarded-For: client1, proxy1, proxy2<br><br>其中的值通过一个 逗号+空格 把多个IP地址区分开, 最左边（client1）是最原始客户端的IP地址, 代理服务器每成功收到一个请求，就把请求来源IP地址添加到右边。 在上面这个例子中，这个请求成功通过了三台代理服务器：proxy1、proxy2和proxy3。请求由client1发出，到达了proxy3（proxy3可能是请求的终点）。请求刚从client1中发出时，XFF是空的，请求被发往proxy1；通过proxy1的时候，client1被添加到XFF中，之后请求被发往proxy2;通过proxy2的时候，proxy1被添加到XFF中，之后请求被发往proxy3；通过proxy3时，proxy2被添加到XFF中，之后请求的的去向不明，如果proxy3不是请求终点，请求会被继续转发。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1635814690,"ip_address":"","comment_id":319386,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1635768148","product_id":100029001,"comment_content":"针对 X-Real-IP X-Forwarded-For   文中 &quot;如果客户端和源服务器之间只有一个代理，那么这两个字段的值就是相同的&quot; 。   实际上 X-Forwarded-For 应该记录客户端+一个代理    X-Real-IP记录客户端，怎么是一样的呢？应该不一样叭","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529617,"discussion_content":"我摘一下维基百科里的文字，可能会说的比较清楚：\n\nXFF一般格式如下:\n\nX-Forwarded-For: client1, proxy1, proxy2\n\n其中的值通过一个 逗号+空格 把多个IP地址区分开, 最左边（client1）是最原始客户端的IP地址, 代理服务器每成功收到一个请求，就把请求来源IP地址添加到右边。 在上面这个例子中，这个请求成功通过了三台代理服务器：proxy1、proxy2和proxy3。请求由client1发出，到达了proxy3（proxy3可能是请求的终点）。请求刚从client1中发出时，XFF是空的，请求被发往proxy1；通过proxy1的时候，client1被添加到XFF中，之后请求被发往proxy2;通过proxy2的时候，proxy1被添加到XFF中，之后请求被发往proxy3；通过proxy3时，proxy2被添加到XFF中，之后请求的的去向不明，如果proxy3不是请求终点，请求会被继续转发。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635814690,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":300832,"user_name":"king🐳","can_delete":false,"product_type":"c1","uid":2557346,"ip_address":"","ucode":"88DA7981062AB5","user_header":"https://static001.geekbang.org/account/avatar/00/27/05/a2/24d5e88e.jpg","comment_is_top":false,"comment_ctime":1625398652,"is_pvip":false,"replies":[{"id":"108983","content":"其实优化方式就是常见的那些，缓存是最有效的，其他的比如加CPU、调系统参数、开启reuseport、多进程多线程等等，这些需要根据实际情况去试验。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1625446829,"ip_address":"","comment_id":300832,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1625398652","product_id":100029001,"comment_content":"请教个问题，如果用七层代理。所有请求都打在代理服务器。除了加缓存还有什么办法可以增加代理服务器的处理速度。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522828,"discussion_content":"其实优化方式就是常见的那些，缓存是最有效的，其他的比如加CPU、调系统参数、开启reuseport、多进程多线程等等，这些需要根据实际情况去试验。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625446829,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296192,"user_name":"n0thing","can_delete":false,"product_type":"c1","uid":1197977,"ip_address":"","ucode":"9B44E34712C535","user_header":"https://static001.geekbang.org/account/avatar/00/12/47/99/aefe1b12.jpg","comment_is_top":false,"comment_ctime":1622798395,"is_pvip":false,"replies":[{"id":"107502","content":"great。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1622853405,"ip_address":"","comment_id":296192,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1622798395","product_id":100029001,"comment_content":"看到proxy protocol 单独的协议，解决了最近困扰的疑问！<br>一直关注的是tcp和http层面的包信息，也没有仔细看Nginx官方文档，在前端LB设备不添加证书的情况下想着https请求没法加XFF信息，后端nginx怎么才能获取源端客户端IP信息，原来还有类似connect方法单独的proxy协议，感谢。<br>再次拓宽计算机领域的定理：搞不定就加一层！","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521357,"discussion_content":"great。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622853405,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":290377,"user_name":"huanshui@smile","can_delete":false,"product_type":"c1","uid":2141878,"ip_address":"","ucode":"0A334A3E20CA46","user_header":"https://static001.geekbang.org/account/avatar/00/20/ae/b6/fc1c61f8.jpg","comment_is_top":false,"comment_ctime":1619518712,"is_pvip":false,"replies":[{"id":"105263","content":"proxy协议的头与http协议的via头不冲突，各有各的作用。<br><br>proxy头很简单，只有原始客户端的ip地址，而via里是链式的。<br><br>每个中间服务器可以各取所需，如果只想知道客户端，不关心中间的代理，就用proxy头，不用再解析http头。<br><br>关键还是看想怎么去用，这些协议只是给出了基本的解决方案。<br>","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1619574292,"ip_address":"","comment_id":290377,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1619518712","product_id":100029001,"comment_content":"有个地方不是很理解，按照上下文来看，”代理协议“存在的意义，就在于代理服务器可以不再费力的去解析http报文头了，但是根据via字段来看，是每经过一个代理都需要在尾部追加对应的代理信息，如果没有进行解析，那么如何拿到里面的字段进行修改？如果修改的话。又岂不是和“代理协议”相悖？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519189,"discussion_content":"proxy协议的头与http协议的via头不冲突，各有各的作用。\n\nproxy头很简单，只有原始客户端的ip地址，而via里是链式的。\n\n每个中间服务器可以各取所需，如果只想知道客户端，不关心中间的代理，就用proxy头，不用再解析http头。\n\n关键还是看想怎么去用，这些协议只是给出了基本的解决方案。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619574292,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":289302,"user_name":"zs","can_delete":false,"product_type":"c1","uid":1116790,"ip_address":"","ucode":"9B8C10E030E5DD","user_header":"https://static001.geekbang.org/account/avatar/00/11/0a/76/b621772b.jpg","comment_is_top":false,"comment_ctime":1618974145,"is_pvip":false,"replies":[{"id":"105024","content":"<br>1. proxy 协议是haproxy制定的，但已经成为了大家共用的标准。<br><br>2.proxy协议比较简单，想要知道中间经过了多少节点就得自己在http头里记录了，像x-forwarded-for就是这样。<br><br>3.nginx可以用指令配置使用，不然默认是不支持的，具体可以看它的文档。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1619056387,"ip_address":"","comment_id":289302,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1618974145","product_id":100029001,"comment_content":"老师，当多个代理转发的时候代理协议头怎么描述，看着这个代理协议好像没有办法知道一共经过了多少个代理节点而且端口和ip竟然不是成对出现还要自己匹配也太不友好了，对于服务器来代理协议头估计要很多支持代理协议头处理的api才能操作获取相关信息吧，不然就要自己写原生的api来获取。现在市面上大多语言或者web服务器都会遵守这个代理协议吗？还是只有haproxy这么干，还在就是多层代理在转发请求的时候会主动再次带上的上次这个代理协议头的吗？如nginx，是否需要什么配置才行呢？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518880,"discussion_content":"\n1. proxy 协议是haproxy制定的，但已经成为了大家共用的标准。\n\n2.proxy协议比较简单，想要知道中间经过了多少节点就得自己在http头里记录了，像x-forwarded-for就是这样。\n\n3.nginx可以用指令配置使用，不然默认是不支持的，具体可以看它的文档。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619056387,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287934,"user_name":"飞翔的葱油饼","can_delete":false,"product_type":"c1","uid":1402668,"ip_address":"","ucode":"42865E09C7F899","user_header":"https://static001.geekbang.org/account/avatar/00/15/67/2c/ee3c2d36.jpg","comment_is_top":false,"comment_ctime":1618222852,"is_pvip":false,"replies":[{"id":"104579","content":"great。<br><br>负载均衡的算法还有ip hash、random，least_con等。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1618288894,"ip_address":"","comment_id":287934,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1618222852","product_id":100029001,"comment_content":"1.代理由于是中间人的角色，则会存在安全问题。它能截获真实客户端的请求和服务器的响应。则请求和响应可能会被篡改，并且其中的敏感数据可能被窃取。解决方式则是换用安全的HTTPS协议，数据可加密，并且带有数字证书等身份认证功能。<br><br>2.负载均衡。目前自己了解到的算法有: 普通轮询，RoundRobin轮询，一致性哈希","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518466,"discussion_content":"great。\n\n负载均衡的算法还有ip hash、random，least_con等。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618288894,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":284962,"user_name":"Geek_04707e","can_delete":false,"product_type":"c1","uid":2458509,"ip_address":"","ucode":"540FEE1B3C7E08","user_header":"","comment_is_top":false,"comment_ctime":1616563264,"is_pvip":false,"replies":[{"id":"103380","content":"理解的差不多，它作为七层代理，必须要解析http协议，知道里面有哪些字段，然后才能向后面转发。<br><br>如果后面是fast-cgi，那当然要依据它的规定发数据了，不然后端服务器不认。<br><br>具体的代码可以去看Nginx的fast-cgi模块的代码了，我个人对PHP不太了解，这方面就不好说了。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1616589150,"ip_address":"","comment_id":284962,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1616563264","product_id":100029001,"comment_content":"请教一下，nginx 的反向代理是怎么实现的呢，要拆报文头吗，如果后端是php-fpm在9000上,nginx 配置.php的后缀就转发到 9000上，那这处过程是怎么实现的呢，需要拆浏览器的报文头吗，然后再封装请求再发到后面9000吧，而且这个好像不是http 协议，应该是fast-cgi 协议，那fast-cgi 协议要发送哪些字段呢","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517526,"discussion_content":"理解的差不多，它作为七层代理，必须要解析http协议，知道里面有哪些字段，然后才能向后面转发。\n\n如果后面是fast-cgi，那当然要依据它的规定发数据了，不然后端服务器不认。\n\n具体的代码可以去看Nginx的fast-cgi模块的代码了，我个人对PHP不太了解，这方面就不好说了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616589150,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":278638,"user_name":"乘风破浪","can_delete":false,"product_type":"c1","uid":2406841,"ip_address":"","ucode":"937AF15F3FEBDC","user_header":"https://static001.geekbang.org/account/avatar/00/24/b9/b9/9e4d7aa4.jpg","comment_is_top":false,"comment_ctime":1613143322,"is_pvip":false,"replies":[{"id":"101343","content":"<br>1.参考www&#47;conf&#47;http&#47;servers&#47;locations.inc，里面是代理转发的配置，需要一点Nginx知识才能理解。<br><br>2.同样的Nginx配置的原因，在这里只对“&#47;proxy”这个uri做了代理转发配置，其他的不会改变。<br>","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1613391114,"ip_address":"","comment_id":278638,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1613143322","product_id":100029001,"comment_content":"罗大师新年好<br><br>有2个问题请教：<br>1. 如何理解代理服务器发出的HTTP请求，这个请求怎么映射到origin.io的21-1?<br>这个&#47;proxy&#47;是固定的字符串？表示走代理流程？<br>GET &#47;proxy&#47; HTTP&#47;1.0\\r\\n  <br><br>21-1实验环境<br><br>127.0.0.1  --- www.chrono.com --- origin.io<br>代理服务器代理发送HTTP请求时带的和代理有关的头字段有<br>\tX-Real-IP =&gt; 127.0.0.1:57195<br>\tX-Forwarded-For =&gt; 127.0.0.1<br>\tX-Forwarded-Host =&gt; www.chrono.com<br>\tX-Forwarded-Proto =&gt; http<br>\tHost: origin.io  #映射到origin.io&#47;index.htm?<br>注：未包括Via字段<br><br>代理服务器转发的响应报文<br>\tHTTP&#47;1.1 200 OK<br>\tServer: openresty&#47;1.19.3.1<br>\tDate: Fri, 12 Feb 2021 14:59:17 GMT<br>\tContent-Type: text&#47;plain<br>\tContent-Length: 153<br>\tConnection: keep-alive<br>\tOrigin: http:&#47;&#47;origin.io:80<br>\tVia: www.chrono.com:80<br>\tAccept-Ranges: bytes<br><br>问题2，观察下面的消息，发现请求favicon.ico为何没有走代理流程？为什么？<br>\tGET &#47;favicon.ico HTTP&#47;1.1<br>\tHost: www.chrono.com<br>\tConnection: keep-alive<br>\tUser-Agent: Mozilla&#47;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#47;537.36 (KHTML, like Gecko) Chrome&#47;88.0.4324.150 Safari&#47;537.36<br>\tAccept: image&#47;avif,image&#47;webp,image&#47;apng,image&#47;svg+xml,image&#47;*,*&#47;*;q=0.8<br>\tReferer: http:&#47;&#47;www.chrono.com&#47;21-1<br>\tAccept-Encoding: gzip, deflate<br>\tAccept-Language: zh-CN,zh;q=0.9<br>\t<br>\tHTTP&#47;1.1 404 Not Found<br>\tServer: openresty&#47;1.19.3.1<br>\tDate: Fri, 12 Feb 2021 14:59:17 GMT<br>\tContent-Type: text&#47;html<br>\tContent-Length: 561<br>\tConnection: keep-alive<br>","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515456,"discussion_content":"\n1.参考www/conf/http/servers/locations.inc，里面是代理转发的配置，需要一点Nginx知识才能理解。\n\n2.同样的Nginx配置的原因，在这里只对“/proxy”这个uri做了代理转发配置，其他的不会改变。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613391114,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":257214,"user_name":"stg609","can_delete":false,"product_type":"c1","uid":1073025,"ip_address":"","ucode":"FB70A75A891BB8","user_header":"https://static001.geekbang.org/account/avatar/00/10/5f/81/1c614f4a.jpg","comment_is_top":false,"comment_ctime":1603884730,"is_pvip":false,"replies":[{"id":"93629","content":"这个http协议没有明确规定，所以留给了代理很大的灵活性，比如Nginx就是暂存所有数据后再发给后端，但也可以一边收一边发，这样的做法是节约内存。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1603892944,"ip_address":"","comment_id":257214,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1603884730","product_id":100029001,"comment_content":"对于 transfer-encoding chunked 这种请求，如果中间有代理，是代理收到所有chunk后再转发给目标服务器吗？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":508260,"discussion_content":"这个http协议没有明确规定，所以留给了代理很大的灵活性，比如Nginx就是暂存所有数据后再发给后端，但也可以一边收一边发，这样的做法是节约内存。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603892944,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":251286,"user_name":"Geek_8593e5","can_delete":false,"product_type":"c1","uid":1736807,"ip_address":"","ucode":"B316E40C400CC8","user_header":"","comment_is_top":false,"comment_ctime":1601450728,"is_pvip":false,"replies":[{"id":"91896","content":"<br>1.代理和http的头字段不冲突，可以同时发挥作用，但同时出现就看服务器如何取舍了，一般会采用代理协议。<br><br>2.Nginx完全支持proxy协议，但注意只有新版本才支持v2 proxy协议，具体可以看Nginx的更新历史。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1601514791,"ip_address":"","comment_id":251286,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1601450728","product_id":100029001,"comment_content":"老师好，请问如果网站使用https协议的同时也使用了代理，是不是就没办法通过&quot;X-Forwarded-For”和“X-Real-IP”获得真实的ip了？另外nginx有采用HAProxy协议么?","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506438,"discussion_content":"\n1.代理和http的头字段不冲突，可以同时发挥作用，但同时出现就看服务器如何取舍了，一般会采用代理协议。\n\n2.Nginx完全支持proxy协议，但注意只有新版本才支持v2 proxy协议，具体可以看Nginx的更新历史。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601514791,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":225027,"user_name":"Geek_b7218f","can_delete":false,"product_type":"c1","uid":1240137,"ip_address":"","ucode":"8D9AE65555B31D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/B7mKLJoo0L8GBBSlYWibkrZfyZX49NCCUxMlpJoAicuuyHRoE362ALQVicMXCS894osJ8icKibWdyIbKleicHpZicibgdA/132","comment_is_top":false,"comment_ctime":1591620177,"is_pvip":false,"replies":[{"id":"82871","content":"Apache我用的很少，我觉得还是用Nginx比较好，更有前途。<br><br>这方面Nginx的资料很多，在官网上就可以查到指令该如何配置。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1591664765,"ip_address":"","comment_id":225027,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1591620177","product_id":100029001,"comment_content":"请教下应用通过Apache 正向代理访问外部，但外部地址要求双向https 认证，Apache 应该怎么配置？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497700,"discussion_content":"Apache我用的很少，我觉得还是用Nginx比较好，更有前途。\n\n这方面Nginx的资料很多，在官网上就可以查到指令该如何配置。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591664765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":207248,"user_name":"张三","can_delete":false,"product_type":"c1","uid":1004092,"ip_address":"","ucode":"1155528FAE1546","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/3c/d6fcb93a.jpg","comment_is_top":false,"comment_ctime":1587034613,"is_pvip":false,"replies":[{"id":"77454","content":"这个应该能从错误返回值看到吧，比如协议不支持之类的。<br><br>话说回来，有关网络协议的错误确实不好查，环节太多。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1587084566,"ip_address":"","comment_id":207248,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1587034613","product_id":100029001,"comment_content":"从上周开始遇到要在代理上安装证书的问题，于是开始学习这么课，确实搞懂了https加密的部分了，之后在继续巩固；然后又遇到一个问题，客户端请求https报错sslhandshake 错误，后来误打误撞发现是服务器返回的请求头只支持TLSv1.2，而客户端的jdk不支持，必须进行设置<br>","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492058,"discussion_content":"这个应该能从错误返回值看到吧，比如协议不支持之类的。\n\n话说回来，有关网络协议的错误确实不好查，环节太多。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587084566,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1004092,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/52/3c/d6fcb93a.jpg","nickname":"张三","note":"","ucode":"1155528FAE1546","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":236303,"discussion_content":"java代码里边直接catch异常了：sslhandshake exception，话说服务器支持的协议是怎么设置的呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587086085,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138486,"user_name":"lfn","can_delete":false,"product_type":"c1","uid":1026593,"ip_address":"","ucode":"2E1558C6A12A89","user_header":"https://static001.geekbang.org/account/avatar/00/0f/aa/21/6c3ba9af.jpg","comment_is_top":false,"comment_ctime":1570270532,"is_pvip":false,"replies":[{"id":"53475","content":"假期也在努力学习，加油。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1570496443,"ip_address":"","comment_id":138486,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1570270532","product_id":100029001,"comment_content":"2019-10-05， 打卡。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469539,"discussion_content":"假期也在努力学习，加油。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570496443,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119606,"user_name":"小可爱(๑• . •๑)","can_delete":false,"product_type":"c1","uid":1106190,"ip_address":"","ucode":"1E97973449DBDC","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/0e/2912db26.jpg","comment_is_top":false,"comment_ctime":1564635866,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564635866","product_id":100029001,"comment_content":"抓紧赶上","like_count":0},{"had_liked":false,"id":118544,"user_name":"龙宝宝","can_delete":false,"product_type":"c1","uid":1511926,"ip_address":"","ucode":"355AF9ADC92CE8","user_header":"https://static001.geekbang.org/account/avatar/00/17/11/f6/36bd007d.jpg","comment_is_top":false,"comment_ctime":1564384823,"is_pvip":false,"replies":[{"id":"43417","content":"代理服务器向后端发送请求使用的是HTTP&#47;1.0，可以看一下源和目标的端口号，过滤一下就可以了。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1564385688,"ip_address":"","comment_id":118544,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1564384823","product_id":100029001,"comment_content":"文章中抓包的图片中 http&#47;1.0和http&#47;1.1怎么交替出现？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460445,"discussion_content":"代理服务器向后端发送请求使用的是HTTP/1.0，可以看一下源和目标的端口号，过滤一下就可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564385688,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115643,"user_name":"Leon📷","can_delete":false,"product_type":"c1","uid":1219496,"ip_address":"","ucode":"B9BBD1EFAAE5A2","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/a8/6a391c66.jpg","comment_is_top":false,"comment_ctime":1563680715,"is_pvip":false,"replies":[{"id":"42323","content":"nice。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1563757281,"ip_address":"","comment_id":115643,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563680715","product_id":100029001,"comment_content":"proxy协议的配置demo<br> server {<br>    listen 10003 proxy_protocol;<br>    return &#39;10003 server get ip: $remote_addr!\\n&#39;;<br>  }可以直观感受下","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459204,"discussion_content":"nice。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563757281,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114586,"user_name":"亚洲舞王.尼古拉斯赵四","can_delete":false,"product_type":"c1","uid":1443078,"ip_address":"","ucode":"7159F5D7232696","user_header":"https://static001.geekbang.org/account/avatar/00/16/05/06/f5979d65.jpg","comment_is_top":false,"comment_ctime":1563345692,"is_pvip":false,"replies":[{"id":"41823","content":"这个应该是vpn，不是简单的代理。<br><br>话题比较敏感，就不多说了。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1563350467,"ip_address":"","comment_id":114586,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563345692","product_id":100029001,"comment_content":"老师，我们平常说的翻墙是通过代理实现的吗？是在http请求的什么阶段代理上的呢？ss和ssr有什么区别呢？为什么能够翻越互联网长城？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458734,"discussion_content":"这个应该是vpn，不是简单的代理。\n\n话题比较敏感，就不多说了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563350467,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113899,"user_name":"独步星空","can_delete":false,"product_type":"c1","uid":1414123,"ip_address":"","ucode":"FB57C1D3EB1B6C","user_header":"https://static001.geekbang.org/account/avatar/00/15/93/eb/990c2c5e.jpg","comment_is_top":false,"comment_ctime":1563182306,"is_pvip":false,"replies":[{"id":"41496","content":"安全篇里全都是https，很快就要到了。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1563183946,"ip_address":"","comment_id":113899,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563182306","product_id":100029001,"comment_content":"老师，方便的时候能参照着http结构，顺带介绍下https么","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458428,"discussion_content":"安全篇里全都是https，很快就要到了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563183946,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113885,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1563179768,"is_pvip":true,"replies":[{"id":"41498","content":"代理协议设计的目的就不是记录传输链路，因为这个已经被X-Forwarded-For做了。<br><br>这样需求还是要用X-Forwarded-For字段。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1563184338,"ip_address":"","comment_id":113885,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1563179768","product_id":100029001,"comment_content":"对于代理协议，也有点疑问。代理协议只是在请求行的前面加了一个客服端地址和服务器地址，而没有整个请求的代理链路，如果源服务器想看整个请求经过了哪些代理怎么去看呢？(这个代理服务器没有再去修改X-Forwarded-For)","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458422,"discussion_content":"代理协议设计的目的就不是记录传输链路，因为这个已经被X-Forwarded-For做了。\n\n这样需求还是要用X-Forwarded-For字段。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563184338,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113800,"user_name":"djfhchdh","can_delete":false,"product_type":"c1","uid":1484184,"ip_address":"","ucode":"E71D75328CE398","user_header":"https://static001.geekbang.org/account/avatar/00/16/a5/98/a65ff31a.jpg","comment_is_top":false,"comment_ctime":1563158266,"is_pvip":false,"replies":[{"id":"41454","content":"√","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1563162497,"ip_address":"","comment_id":113800,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563158266","product_id":100029001,"comment_content":"1、代理会成为性能瓶颈，有单点问题","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458392,"discussion_content":"√","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563162497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}