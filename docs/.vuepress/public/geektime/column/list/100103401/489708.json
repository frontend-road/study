{"id":489708,"title":"期中考试 | 用Kotlin实现图片处理程序","content":"<p>你好，我是朱涛。不知不觉间，咱们的课程就已经进行一半了，我们已经学完很多内容：</p><ul>\n<li>基础篇，我们学完了所有Kotlin基础语法和重要特性。</li>\n<li>加餐篇，我们学习了Kotlin编程的5大编程思维：函数式思维、表达式思维、不变性思维、空安全思维、协程思维。</li>\n<li>协程篇，我们也已经学完了所有基础的协程概念。</li>\n</ul><p>所以现在，是时候来一次阶段性的验收了。这次，我们一起来做一个<strong>图片处理程序</strong>，来考察一下自己对于Kotlin编程知识的理解和应用掌握情况。初始化工程的代码在这里<a href=\"https://github.com/chaxiu/ImageProcessor.git\">GitHub</a>，你可以像往常那样，将其clone下来，然后用IntelliJ打开即可。</p><p>我们仍然会分为两个版本1.0、2.0，不过，这一次要轮到你亲自动手写代码了！</p><h2>1.0版本：处理本地图片</h2><p>当你将初始化工程打开以后，你会发现“src/main/resources/images/”这个目录下有一张图片：android.png，它就是我们要处理的图片对象。</p><p><img src=\"https://static001.geekbang.org/resource/image/0d/64/0de4da2977353d97631d88531feff464.png?wh=1817x704\" alt=\"图片\"></p><p>一般来说，我们想要处理图片，会第一时间想到Photoshop，但其实简单的图片处理任务，我们完全可以通过代码来实现，比如图片横向翻转、图片纵向翻转、图片裁切。</p><p><img src=\"https://static001.geekbang.org/resource/image/45/c6/456e395f69c12b20e095959046fccac6.png?wh=1128x424\" alt=\"图片\"></p><p>关于图片的底层定义，Java SDK已经提供了很好的支持，我们在Kotlin代码当中可以直接使用相关的类。为了防止你对JDK不熟悉，我在初始化工程当中，已经为你做好了前期准备工作：</p><!-- [[[read_end]]] --><pre><code class=\"language-plain\">class Image(private val pixels: Array&lt;Array&lt;Color&gt;&gt;) {\n\n    fun height(): Int {\n        return pixels.size\n    }\n\n    fun width(): Int {\n        return pixels[0].size\n    }\n\n    /**\n     * 底层不处理越界\n     */\n    fun getPixel(y: Int, x: Int): Color {\n        return pixels[y][x]\n    }\n}\n</code></pre><p>这是我定义的一个Image类，它的作用就是封装图片的内存对象。我们都知道，图片的本质是一堆像素点（Pixel），而每个像素点，都可以用RGB来表示，这里我们用Java SDK当中的Color来表示。</p><p>当我们把图片放大到足够倍数的时候，我们就可以看到其中的<strong>正方形像素点</strong>了。</p><p><img src=\"https://static001.geekbang.org/resource/image/4a/a2/4a833f282d7f56e6c10707f9b36yy4a2.png?wh=1489x862\" alt=\"图片\"></p><p>所以，最终我们就可以用“<code>Array&lt;Array&lt;Color&gt;&gt;</code>”这样一个二维数组来表示一张图片。</p><p>另外，从本地加载图片到内存的代码，我也帮你写好了：</p><pre><code class=\"language-plain\">const val BASE_PATH = \"./src/main/resources/images/\"\n\nfun main() {\n    val image = loadImage(File(\"${BASE_PATH}android.png\"))\n    println(\"Width = ${image.width()};Height = ${image.height()}\")\n}\n\n/**\n * 加载本地图片到内存中\n */\nfun loadImage(imageFile: File) =\n    ImageIO.read(imageFile)\n        .let {\n            Array(it.height) { y -&gt;\n                Array(it.width) { x -&gt;\n                    Color(it.getRGB(x, y))\n                }\n            }\n        }.let {\n            Image(it)\n        }\n</code></pre><p>那么，唯一需要你做的，就是实现这几个函数的功能：<strong>图片横向翻转、图片纵向翻转、图片裁切</strong>。</p><pre><code class=\"language-plain\">/**\n * 横向翻转图片\n * 待实现\n */\nfun Image.flipHorizontal(): Image = TODO()\n\n/**\n * 纵向翻转图片\n * 待实现\n */\nfun Image.flipVertical(): Image = TODO()\n\n/**\n * 图片裁切\n * 待实现\n */\nfun Image.crop(startY: Int, startX: Int, width: Int, height: Int): Image = TODO()\n</code></pre><p>另外，如果你有兴趣的话，还可以去实现对应的单元测试代码：</p><pre><code class=\"language-plain\">class TestImageProcessor {\n\n    /**\n     * 待实现的单元测试\n     */\n    @Test\n    fun testFlipHorizontal() {\n\n    }\n\n    /**\n     * 待实现的单元测试\n     */\n    @Test\n    fun testFlipVertical() {\n\n    }\n\n    /**\n     * 待实现的单元测试\n     */\n    @Test\n    fun testCrop() {\n\n    }\n}\n</code></pre><p>这样一来，我们1.0版本的代码就算完成了。不过，我们还没用上协程的知识啊！</p><p>请看2.0版本。</p><h2>2.0版本：增加图片下载功能</h2><p>在上个版本中，我们的代码仅支持本地图片的处理，但有的时候，我们想要处理网络上的图片该怎么办呢？所以这时候，我们可以增加一个<strong>下载网络图片的功能</strong>。</p><p>这个版本，你只需要实现一个函数：</p><pre><code class=\"language-plain\">/**\n * 挂起函数，以http的方式下载图片，保存到本地\n * 待实现\n */\nsuspend fun downloadImage(url: String, outputFile: File): Boolean = TODO()\n</code></pre><p>需要注意的是，由于下载网络图片比较耗时，我们需要将其定义成一个<strong>挂起函数</strong>，这样一来，我们后续在使用它的时候就可以更得心应手了。</p><pre><code class=\"language-plain\">fun main() = runBlocking {\n    // 不一定非要下载我提供的链接\n    val url = \"https://raw.githubusercontent.com/chaxiu/ImageProcessor/main/src/main/resources/images/android.png\"\n    val path = \"${BASE_PATH}downloaded.png\"\n\n    // 调用挂起函数\n    downloadImage(url, File(path))\n\n    val image = loadImage(File(path))\n    println(\"Width = ${image.width()};Height = ${image.height()}\")\n}\n</code></pre><p>在上面的代码中，我是以“<a href=\"https://raw.githubusercontent.com/chaxiu/ImageProcessor/main/src/main/resources/images/android.png%E2%80%9D\">https://raw.githubusercontent.com/chaxiu/ImageProcessor/main/src/main/resources/images/android.png”</a> 这个链接为例，这是一个HTTPS的链接，你在实际开发的时候，也可以随便去找一个普通的HTTP图片链接，这样就不必处理SSL的问题了。</p><p>程序实际运行效果会是这样的：</p><p><img src=\"https://static001.geekbang.org/resource/image/e7/71/e7b549e6e97cffdd67e8379004773171.gif?wh=1026x764\" alt=\"图片\"></p><p>在下节课里，我会给出我的代码参考，不过在看我的代码之前，记得先要自己动手啊。</p><p>其实，以我们这个工程为基础，再加上一些图形学算法，我们完全可以做出Photoshop当中的一些高级功能，比如图片缩放、图片参数调节、图片滤镜、抠像，甚至图片识别，等等。如果你本身就有图形学方面的知识储备，也欢迎你在此基础上实现更复杂的功能！</p><p>好了，我们下节课再见！</p>","neighbors":{"left":{"article_title":"18 | 实战：让KtHttp支持挂起函数","id":488985},"right":{"article_title":"题目解答 | 期中考试版本参考实现","id":490408}},"comments":[{"had_liked":false,"id":336178,"user_name":"better","can_delete":false,"product_type":"c1","uid":1169063,"ip_address":"","ucode":"AF1DB566EBB8A5","user_header":"https://static001.geekbang.org/account/avatar/00/11/d6/a7/ac23f5a6.jpg","comment_is_top":false,"comment_ctime":1645971875,"is_pvip":false,"replies":[{"id":"122939","content":"reverse()用的挺好，在这个场景下很合适。","user_name":"作者回复","user_name_real":"编辑","uid":"1180670","ctime":1646126939,"ip_address":"","comment_id":336178,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10235906467","product_id":100103401,"comment_content":"&#47;&#47; Image 添加方法，同时 去掉 pixels 的 private<br>fun getHorArray(x: Int): Array&lt;Color&gt; {<br>        return pixels[x]<br>}<br><br>&#47;&#47;&#47;&#47; <br>fun Image.flipHorizontal(): Image {<br>    for (i in (0 until this.height())) {<br>        this.getHorArray(i).reverse()<br>    }<br>    return this<br>}<br><br>fun Image.flipVertical(): Image {<br>    this.pixels.reverse()<br>    return this<br>}<br><br>fun Image.crop(startY: Int, startX: Int, width: Int, height: Int): Image {<br>    return Array(width - startY) { y -&gt;<br>        Array(height - startX) { x -&gt;<br>            Color(this.getPixel(x, y).rgb)<br>        }<br>    }.let {<br>        Image(it)<br>    }<br>}<br>","like_count":3,"discussions":[{"author":{"id":1180670,"avatar":"https://static001.geekbang.org/account/avatar/00/12/03/fe/0f43ef35.jpg","nickname":"朱涛","note":"","ucode":"5AB5AFE32B8008","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553885,"discussion_content":"reverse()用的挺好，在这个场景下很合适。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646126939,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336371,"user_name":"曾帅","can_delete":false,"product_type":"c1","uid":1234319,"ip_address":"","ucode":"322F049DA9284D","user_header":"https://static001.geekbang.org/account/avatar/00/12/d5/8f/d0874a01.jpg","comment_is_top":false,"comment_ctime":1646117863,"is_pvip":false,"replies":[{"id":"122937","content":"不同版本之间确实存在类似的问题。感谢这位同学的提醒。","user_name":"作者回复","user_name_real":"编辑","uid":"1180670","ctime":1646126059,"ip_address":"","comment_id":336371,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5941085159","product_id":100103401,"comment_content":"git clone 之后，打开编译就报错，MultipleCompilationErrorsException 。把 gradle&#47;wrapper&#47;gradle-wrapper.properties 里面的 7.1 版本改成 7.2 之后重新编译就可以了。<br>有同样问题的同学可以参考一下。","like_count":2,"discussions":[{"author":{"id":1180670,"avatar":"https://static001.geekbang.org/account/avatar/00/12/03/fe/0f43ef35.jpg","nickname":"朱涛","note":"","ucode":"5AB5AFE32B8008","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553882,"discussion_content":"不同版本之间确实存在类似的问题。感谢这位同学的提醒。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646126059,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":349983,"user_name":"Michael","can_delete":false,"product_type":"c1","uid":1173761,"ip_address":"","ucode":"D1B972C9164641","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/01/2885812b.jpg","comment_is_top":false,"comment_ctime":1656485238,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1656485238","product_id":100103401,"comment_content":"使用系统自带的 api 下载文件<br>suspend fun downloadImage(url: String, outputFile: File): Boolean =<br>    withContext(Dispatchers.IO) {<br>      kotlin.runCatching {<br>        URL(url).openStream().use {<br>          outputFile.writeBytes(it.readAllBytes())<br>        }<br>      }<br>    }.isSuccess","like_count":0},{"had_liked":false,"id":337808,"user_name":"Geek_Adr","can_delete":false,"product_type":"c1","uid":2876897,"ip_address":"","ucode":"129E17B7D3EB88","user_header":"https://static001.geekbang.org/account/avatar/00/2b/e5/e1/a5064f88.jpg","comment_is_top":false,"comment_ctime":1647074064,"is_pvip":false,"replies":[{"id":"123586","content":"代码不错，赞~","user_name":"作者回复","user_name_real":"编辑","uid":"1180670","ctime":1647235791,"ip_address":"","comment_id":337808,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1647074064","product_id":100103401,"comment_content":"&#47;&#47; 先交作业，后看参考实现<br>&#47;&#47; 图片处理 单测Case 较难实现，偷懒写本地肉眼看<br><br>&#47;**<br> * 写到本地，方便可看效果<br> *&#47;<br>fun Image.writeJPEG(outputFile: File): Boolean =<br>    ImageIO.write(BufferedImage(width(), height(), BufferedImage.TYPE_INT_RGB).apply {<br>        repeat(height) { y -&gt;<br>            repeat(width) { x -&gt;<br>                setRGB(x, y, getPixel(y, x).rgb)<br>            }<br>        }<br>    }, &quot;JPEG&quot;, outputFile)<br><br>&#47;**<br> * 图片裁切<br> *&#47;<br>fun Image.crop(startY: Int, startX: Int, width: Int, height: Int): Image =<br>    Array(height) { y -&gt;<br>        Array(width) { x -&gt;<br>            getPixel(y + startY, x + startX)<br>        }<br>    }.let { Image(it) }<br><br>&#47;**<br> * 横向翻转图片<br> *&#47;<br>fun Image.flipHorizontal(): Image =<br>    Array(height()) { y -&gt;<br>        Array(width()) { x -&gt;<br>            getPixel(y, width() - x - 1)<br>        }<br>    }.let { Image(it) }<br><br>&#47;**<br> * 纵向翻转图片<br> *&#47;<br>fun Image.flipVertical(): Image =<br>    Array(height()) { y -&gt;<br>        Array(width()) { x -&gt;<br>            getPixel(height() - y - 1, x)<br>        }<br>    }.let { Image(it) }<br><br>&#47;**<br> * 挂起函数，以http的方式下载图片，保存到本地<br> *&#47;<br>suspend fun downloadImage(url: String, outputFile: File): Boolean =<br>    withContext(Dispatchers.IO) {<br>        OkHttpClient.Builder().build().run {<br>            newCall(Request.Builder().apply {<br>                url(url)<br>                get()<br>            }.build()).execute().run {<br>                if (!isSuccessful) {<br>                    return@run false<br>                }<br>                return@run body?.byteStream()?.source()?.let { outputFile.sink().buffer().writeAll(it) &gt; 0 } ?: false<br>            }<br>        }<br>    }<br>","like_count":0,"discussions":[{"author":{"id":1180670,"avatar":"https://static001.geekbang.org/account/avatar/00/12/03/fe/0f43ef35.jpg","nickname":"朱涛","note":"","ucode":"5AB5AFE32B8008","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556163,"discussion_content":"代码不错，赞~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647235791,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":337029,"user_name":"白乾涛","can_delete":false,"product_type":"c1","uid":1339841,"ip_address":"","ucode":"0C704B0B90C8D7","user_header":"https://static001.geekbang.org/account/avatar/00/14/71/c1/cbc55e06.jpg","comment_is_top":false,"comment_ctime":1646558199,"is_pvip":false,"replies":[{"id":"123151","content":"蛮好的~","user_name":"作者回复","user_name_real":"编辑","uid":"1180670","ctime":1646580793,"ip_address":"","comment_id":337029,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1646558199","product_id":100103401,"comment_content":"fun main() = runBlocking {<br>    File(BASE_PATH).mkdirs()<br>    downloadFile(URL, getPathFile(&quot;origin&quot;))<br>        .loadImage()<br>        .also { it.flipVertical().writeToFile(getPathFile(&quot;vertical&quot;)) }<br>        .also { it.flipHorizontal().writeToFile(getPathFile(&quot;horizontal&quot;)) }<br>        .also { it.crop(0, 0, 100, 50).writeToFile(getPathFile(&quot;crop&quot;)) }<br>    delay(10L)<br>}","like_count":1,"discussions":[{"author":{"id":1180670,"avatar":"https://static001.geekbang.org/account/avatar/00/12/03/fe/0f43ef35.jpg","nickname":"朱涛","note":"","ucode":"5AB5AFE32B8008","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554754,"discussion_content":"蛮好的~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646580793,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336205,"user_name":"PoPlus","can_delete":false,"product_type":"c1","uid":1574765,"ip_address":"","ucode":"5F0927921317F2","user_header":"https://static001.geekbang.org/account/avatar/00/18/07/6d/4c1909be.jpg","comment_is_top":false,"comment_ctime":1646009516,"is_pvip":false,"replies":[{"id":"122938","content":"挺好的。","user_name":"作者回复","user_name_real":"编辑","uid":"1180670","ctime":1646126700,"ip_address":"","comment_id":336205,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1646009516","product_id":100103401,"comment_content":"&#47;**<br> * 挂起函数，以http的方式下载图片，保存到本地<br> *&#47;<br>suspend fun downloadImage(url: String, outputFile: File) = withContext(Dispatchers.IO) {<br>    val client = OkHttpClient()<br>    val request = Request.Builder()<br>        .url(url)<br>        .build()<br>    val response = client<br>        .newCall(request)<br>        .execute()<br>    var size = 0L<br>    response.body?.byteStream()?.readAllBytes()?.let { bytes -&gt;<br>        outputFile.writeBytes(bytes)<br>        size = bytes.size.toLong()<br>    }<br>    if (size == response.headersContentLength()) {<br>        return@withContext true<br>    }<br>    return@withContext false<br>}<br><br>&#47;**<br> * 主函数<br> *&#47;<br>fun main() = runBlocking {<br>    val url = &quot;https:&#47;&#47;raw.githubusercontent.com&#47;chaxiu&#47;ImageProcessor&#47;main&#47;src&#47;main&#47;resources&#47;images&#47;android.png&quot;<br>    val path = &quot;.&#47;download.png&quot;<br><br>    val success = downloadImage(url, File(path))<br>    println(success)<br><br>    val image = loadImage(File(path))<br>    println(&quot;Width = ${image.width()};Height = ${image.height()}&quot;)<br>}<br><br>看到有同学使用 suspendCoroutine 函数处理，不知道和我这个方法比较有什么区别 👀","like_count":0,"discussions":[{"author":{"id":1180670,"avatar":"https://static001.geekbang.org/account/avatar/00/12/03/fe/0f43ef35.jpg","nickname":"朱涛","note":"","ucode":"5AB5AFE32B8008","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553883,"discussion_content":"挺好的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646126700,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":335927,"user_name":"A Lonely Cat","can_delete":false,"product_type":"c1","uid":2885349,"ip_address":"","ucode":"382EBFDD8E5115","user_header":"https://static001.geekbang.org/account/avatar/00/2c/06/e5/51ef9735.jpg","comment_is_top":false,"comment_ctime":1645773420,"is_pvip":false,"replies":[{"id":"122841","content":"不错，代码写的很好。","user_name":"作者回复","user_name_real":"编辑","uid":"1180670","ctime":1645967074,"ip_address":"","comment_id":335927,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1645773420","product_id":100103401,"comment_content":"图片下载功能<br><br>private val client = OkHttpClient.Builder()<br>    .build()<br><br>&#47;**<br> * 挂起函数，以http的方式下载图片，保存到本地<br> *&#47;<br>suspend fun downloadImage(url: String, outputFile: File): Boolean = suspendCoroutine { con -&gt;<br>    val request = Request.Builder()<br>        .url(url)<br>        .get()<br>        .build()<br>    client.newCall(request)<br>        .enqueue(object : Callback {<br>            override fun onFailure(call: Call, e: IOException) {<br>                e.printStackTrace()<br>                con.resume(false)<br>            }<br><br>            override fun onResponse(call: Call, response: Response) {<br>                if (response.isSuccessful) {<br>                    response.body?.bytes()?.let {<br>                        outputFile.writeBytes(it)<br>                    }<br>                    con.resume(true)<br>                } else {<br>                    con.resume(false)<br>                }<br>            }<br>        })<br>}<br><br>fun main() = runBlocking {<br>    val url = &quot;http:&#47;&#47;img.netbian.com&#47;file&#47;2020&#47;1202&#47;smallaaa773e8cc9729977037e80b19f955891606922519.jpg&quot;<br>    val file = File(&quot;${BASE_PATH}wallpaper.png&quot;)<br>    val success = downloadImage(url, file)<br>    println(&quot;Download file status is success：$success&quot;)<br>}","like_count":1,"discussions":[{"author":{"id":1180670,"avatar":"https://static001.geekbang.org/account/avatar/00/12/03/fe/0f43ef35.jpg","nickname":"朱涛","note":"","ucode":"5AB5AFE32B8008","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553562,"discussion_content":"不错，代码写的很好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645967074,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}