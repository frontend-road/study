{"id":68732,"title":"09 | 为什么我们管Yarn叫作资源调度框架？","content":"<p>我们知道，Hadoop主要是由三部分组成，除了前面我讲过的分布式文件系统HDFS、分布式计算框架MapReduce，还有一个是<span class=\"orange\">分布式集群资源调度框架Yarn</span>。但是Yarn并不是随Hadoop的推出一开始就有的，Yarn作为分布式集群的资源调度框架，它的出现伴随着Hadoop的发展，使Hadoop从一个单一的大数据计算引擎，成为一个集存储、计算、资源管理为一体的完整大数据平台，进而发展出自己的生态体系，成为大数据的代名词。</p><p>所以在我们开始聊Yarn的实现原理前，有必要看看Yarn发展的过程，这对你理解Yarn的原理以及为什么被称为资源调度框架很有帮助。</p><p>先回忆一下我们学习的MapReduce的架构，在MapReduce应用程序的启动过程中，最重要的就是要把MapReduce程序分发到大数据集群的服务器上，在Hadoop  1中，这个过程主要是通过TaskTracker和JobTracker通信来完成。</p><p>这个方案有什么缺点吗？</p><p>这种架构方案的主要缺点是，<strong>服务器集群资源调度管理和MapReduce执行过程耦合在一起，如果想在当前集群中运行其他计算任务，比如Spark或者Storm，就无法统一使用集群中的资源了</strong>。</p><!-- [[[read_end]]] --><p>在Hadoop早期的时候，大数据技术就只有Hadoop一家，这个缺点并不明显。但随着大数据技术的发展，各种新的计算框架不断出现，我们不可能为每一种计算框架部署一个服务器集群，而且就算能部署新集群，数据还是在原来集群的HDFS上。所以我们需要把MapReduce的资源管理和计算框架分开，这也是Hadoop  2最主要的变化，就是将Yarn从MapReduce中分离出来，成为一个独立的资源调度框架。</p><p>Yarn是“Yet Another Resource Negotiator”的缩写，字面意思就是“另一种资源调度器”。事实上，在Hadoop社区决定将资源管理从Hadoop  1中分离出来，独立开发Yarn的时候，业界已经有一些大数据资源管理产品了，比如Mesos等，所以Yarn的开发者索性管自己的产品叫“另一种资源调度器”。这种命名方法并不鲜见，曾经名噪一时的Java项目编译工具Ant就是“Another Neat Tool”的缩写，意思是“另一种整理工具”。</p><p>下图是Yarn的架构。</p><p><img src=\"https://static001.geekbang.org/resource/image/af/b1/af90905013e5869f598c163c09d718b1.jpg?wh=2844*1712\" alt=\"\"></p><p>从图上看，Yarn包括两个部分：一个是资源管理器（Resource Manager），一个是节点管理器（Node Manager）。这也是Yarn的两种主要进程：ResourceManager进程负责整个集群的资源调度管理，通常部署在独立的服务器上；NodeManager进程负责具体服务器上的资源和任务管理，在集群的每一台计算服务器上都会启动，基本上跟HDFS的DataNode进程一起出现。</p><p>具体说来，资源管理器又包括两个主要组件：调度器和应用程序管理器。</p><p>调度器其实就是一个资源分配算法，根据应用程序（Client）提交的资源申请和当前服务器集群的资源状况进行资源分配。Yarn内置了几种资源调度算法，包括Fair Scheduler、Capacity Scheduler等，你也可以开发自己的资源调度算法供Yarn调用。</p><p>Yarn进行资源分配的单位是容器（Container），每个容器包含了一定量的内存、CPU等计算资源，默认配置下，每个容器包含一个CPU核心。容器由NodeManager进程启动和管理，NodeManger进程会监控本节点上容器的运行状况并向ResourceManger进程汇报。</p><p>应用程序管理器负责应用程序的提交、监控应用程序运行状态等。应用程序启动后需要在集群中运行一个ApplicationMaster，ApplicationMaster也需要运行在容器里面。每个应用程序启动后都会先启动自己的ApplicationMaster，由ApplicationMaster根据应用程序的资源需求进一步向ResourceManager进程申请容器资源，得到容器以后就会分发自己的应用程序代码到容器上启动，进而开始分布式计算。</p><p>我们以一个MapReduce程序为例，来看一下Yarn的整个工作流程。</p><p>1.我们向Yarn提交应用程序，包括MapReduce ApplicationMaster、我们的MapReduce程序，以及MapReduce Application启动命令。</p><p>2.ResourceManager进程和NodeManager进程通信，根据集群资源，为用户程序分配第一个容器，并将MapReduce ApplicationMaster分发到这个容器上面，并在容器里面启动MapReduce ApplicationMaster。</p><p>3.MapReduce ApplicationMaster启动后立即向ResourceManager进程注册，并为自己的应用程序申请容器资源。</p><p>4.MapReduce ApplicationMaster申请到需要的容器后，立即和相应的NodeManager进程通信，将用户MapReduce程序分发到NodeManager进程所在服务器，并在容器中运行，运行的就是Map或者Reduce任务。</p><p>5.Map或者Reduce任务在运行期和MapReduce ApplicationMaster通信，汇报自己的运行状态，如果运行结束，MapReduce ApplicationMaster向ResourceManager进程注销并释放所有的容器资源。</p><p>MapReduce如果想在Yarn上运行，就需要开发遵循Yarn规范的MapReduce ApplicationMaster，相应地，其他大数据计算框架也可以开发遵循Yarn规范的ApplicationMaster，这样在一个Yarn集群中就可以同时并发执行各种不同的大数据计算框架，实现资源的统一调度管理。</p><p>细心的你可能会发现，我在今天文章开头的时候提到Hadoop的三个主要组成部分的时候，管HDFS叫分布式文件<strong>系统</strong>，管MapReduce叫分布式计算<strong>框架</strong>，管Yarn叫分布式集群资源调度<strong>框架</strong>。</p><p>为什么HDFS是系统，而MapReduce和Yarn则是框架？</p><p>框架在架构设计上遵循一个重要的设计原则叫“<strong>依赖倒转原则</strong>”，依赖倒转原则是<strong>高层模块不能依赖低层模块，它们应该共同依赖一个抽象，这个抽象由高层模块定义，由低层模块实现。</strong></p><p>所谓高层模块和低层模块的划分，简单说来就是在调用链上，处于前面的是高层，后面的是低层。我们以典型的Java Web应用举例，用户请求在到达服务器以后，最先处理用户请求的是Java Web容器，比如Tomcat、Jetty这些，通过监听80端口，把HTTP二进制流封装成Request对象；然后是Spring MVC框架，把Request对象里的用户参数提取出来，根据请求的URL分发给相应的Model对象处理；再然后就是我们的应用程序，负责处理用户请求，具体来看，还会分成服务层、数据持久层等。</p><p>在这个例子中，Tomcat相对于Spring MVC就是高层模块，Spring MVC相对于我们的应用程序也算是高层模块。我们看到虽然Tomcat会调用Spring MVC，因为Tomcat要把Request交给Spring MVC处理，但是Tomcat并没有依赖Spring MVC，Tomcat的代码里不可能有任何一行关于Spring MVC的代码。</p><p>那么，Tomcat如何做到不依赖Spring MVC，却可以调用Spring MVC？如果你不了解框架的一般设计方法，这里还是会感到有点小小的神奇是不是？</p><p>秘诀就是Tomcat和Spring MVC都依赖J2EE规范，Spring MVC实现了J2EE规范的HttpServlet抽象类，即DispatcherServlet，并配置在web.xml中。这样，Tomcat就可以调用DispatcherServlet处理用户发来的请求。</p><p>同样Spring MVC也不需要依赖我们写的Java代码，而是通过依赖Spring MVC的配置文件或者Annotation这样的抽象，来调用我们的Java代码。</p><p>所以，Tomcat或者Spring MVC都可以称作是框架，它们都遵循依赖倒转原则。</p><p>现在我们再回到MapReduce和Yarn。实现MapReduce编程接口、遵循MapReduce编程规范就可以被MapReduce框架调用，在分布式集群中计算大规模数据；实现了Yarn的接口规范，比如Hadoop  2的MapReduce，就可以被Yarn调度管理，统一安排服务器资源。所以说，MapReduce和Yarn都是框架。</p><p>相反地，HDFS就不是框架，使用HDFS就是直接调用HDFS提供的API接口，HDFS作为底层模块被直接依赖。</p><h2>小结</h2><p>Yarn作为一个大数据资源调度框架，调度的是大数据计算引擎本身。它不像MapReduce或Spark编程，每个大数据应用开发者都需要根据需求开发自己的MapReduce程序或者Spark程序。而现在主流的大数据计算引擎所使用的Yarn模块，也早已被这些计算引擎的开发者做出来供我们使用了。作为普通的大数据开发者，我们几乎没有机会编写Yarn的相关程序。但是，这是否意味着只有大数据计算引擎的开发者需要基于Yarn开发，才需要理解Yarn的实现原理呢？</p><p>恰恰相反，我认为理解Yarn的工作原理和架构，对于正确使用大数据技术，理解大数据的工作原理，是非常重要的。在云计算的时代，一切资源都是动态管理的，理解这种动态管理的原理对于理解云计算也非常重要。Yarn作为一个大数据平台的资源管理框架，简化了应用场景，对于帮助我们理解云计算的资源管理很有帮助。</p><h2>思考题</h2><p>Web应用程序的服务层Service和数据持久层DAO也是上下层模块关系，你设计的Service层是否按照框架的一般架构方法，遵循依赖倒转原则？</p><p>欢迎你写下自己的思考或疑问，与我和其他同学一起讨论。</p><p></p>","neighbors":{"left":{"article_title":"08 | MapReduce如何让数据完成一次旅行？","id":68489},"right":{"article_title":"10 | 模块答疑：我们能从Hadoop学到什么？","id":69029}},"comments":[{"had_liked":false,"id":39978,"user_name":"落叶飞逝的恋","can_delete":false,"product_type":"c1","uid":1046429,"ip_address":"","ucode":"F9A95DB28BCF1E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/9d/be04b331.jpg","comment_is_top":false,"comment_ctime":1542426550,"is_pvip":false,"replies":[{"id":"14436","content":"是的，但是更重要的是接口是高层需求的抽象，还是底层实现的抽象。这是依赖倒置的关键，面向接口本身并不能保证依赖倒置原则，否则和接口隔离原则没有区别。","user_name":"作者回复","comment_id":39978,"uid":"1007349","ip_address":"","utype":1,"ctime":1542525203,"user_name_real":"李智慧"}],"discussion_count":1,"race_medal":0,"score":"349434777526","product_id":100020201,"comment_content":"实际项目开发中，要做到依赖倒置的方法，一般就是抽象出相应的接口的方法，不依赖具体。面向接口编程。","like_count":82,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429315,"discussion_content":"是的，但是更重要的是接口是高层需求的抽象，还是底层实现的抽象。这是依赖倒置的关键，面向接口本身并不能保证依赖倒置原则，否则和接口隔离原则没有区别。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542525203,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125935,"user_name":"nut","can_delete":false,"product_type":"c1","uid":1097164,"ip_address":"","ucode":"C7F484AF275F09","user_header":"https://static001.geekbang.org/account/avatar/00/10/bd/cc/f25b9524.jpg","comment_is_top":false,"comment_ctime":1566277508,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"164775034756","product_id":100020201,"comment_content":"1。框架（framework）是一个框子——指其约束性，也是一个架子——指其支撑性。是一个基本概念上的结构，用于去解决或者处理复杂的问题。<br><br>拿mapreduce计算框架举例，<br>比如程序需要以map reduce的方式组织，这是约束性。<br>比如有了map阶段，有了shuffle阶段，有了reduce阶段，就能支撑起一次大数据计算，这是支撑性。<br>具体你怎么map，怎么shuffle更好，怎么reduce，框架不管，交给实现者自己去权衡设计。<br><br><br>2。系统，是若干部分相互联系、相互作用，形成的具有某些功能的整体。<br><br>拿HDFS来举例，他有物理存储，有数据分片管理，有容灾备份机制，这些相互联系相互作用，对外提供简单存取大量数据的功能，所以谓之系统。","like_count":39,"discussions":[{"author":{"id":1003824,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/51/30/da6ae0d8.jpg","nickname":"cellardoor","note":"","ucode":"ECB20F7DFC5A65","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383531,"discussion_content":"鞭辟入里","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626147744,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2372781,"avatar":"","nickname":"Geek_成长","note":"","ucode":"0E0206C106B020","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338539,"discussion_content":"有点接口和基类的感觉！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609308575,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":39922,"user_name":"hua168","can_delete":false,"product_type":"c1","uid":1065255,"ip_address":"","ucode":"CFF9A7E86EBA48","user_header":"https://static001.geekbang.org/account/avatar/00/10/41/27/3ff1a1d6.jpg","comment_is_top":false,"comment_ctime":1542386143,"is_pvip":false,"replies":[{"id":"14394","content":"理解原理后倒推它应该是什么样，训练自己从设计者角度分析问题，而不是一味被动学习。<br>也是这个专栏想达到的目的。","user_name":"作者回复","comment_id":39922,"uid":"1007349","ip_address":"","utype":1,"ctime":1542459780,"user_name_real":"李智慧"}],"discussion_count":1,"race_medal":0,"score":"91736699359","product_id":100020201,"comment_content":"看完几期感觉没有什么能难得住大神你的，回答问题在您那里感觉都很简单……我一般学习是先找视频看一下，照着截图，练习，然后去官网看一下说明文档，看更新了哪些知识。照视频学习又要截图，感觉很慢，很费时，看官方文档又很难深入，能否请教一下自学如果能深入，是我方法不对吗？有很多问题官网都没答案的啊，google不少也搜索不出来……运维类学的东西很多，精通感觉比较难……把原理东西，理解好，慢慢锻炼能不能达到您一半的水平呢？😂","like_count":22,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429296,"discussion_content":"理解原理后倒推它应该是什么样，训练自己从设计者角度分析问题，而不是一味被动学习。\n也是这个专栏想达到的目的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542459780,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41903,"user_name":"小千","can_delete":false,"product_type":"c1","uid":1280968,"ip_address":"","ucode":"BF12E4ABD69FA8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKPBiaSZVibZwoUEUcvbF4JCfOghmvPdUfbFHeDd2g5m6NbuzeN3S3b7KxZCA8FmtrH9N51Z5P177iaA/132","comment_is_top":false,"comment_ctime":1542870239,"is_pvip":false,"replies":[{"id":"15093","content":"依赖倒转一般是指两个实现之间的依赖关系倒转。<br>这里上下文的两个实现应该分别是应用程序和数据库，应用程序依赖SQL，数据库实现SQL。<br><br>但是，SQL作为规范是数据库制定的规范，是底层规范，而不是应用程序制定的，所以这种情况一般不认为是依赖倒转。","user_name":"作者回复","comment_id":41903,"uid":"1007349","ip_address":"","utype":1,"ctime":1542927968,"user_name_real":"李智慧"}],"discussion_count":1,"race_medal":0,"score":"87442216159","product_id":100020201,"comment_content":"sql语言是不是也是依赖倒转原则？不同的数据库都要支持sql语言规范，（很多）sql语句语句都可以在不同的数据库执行。","like_count":21,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429940,"discussion_content":"依赖倒转一般是指两个实现之间的依赖关系倒转。\n这里上下文的两个实现应该分别是应用程序和数据库，应用程序依赖SQL，数据库实现SQL。\n\n但是，SQL作为规范是数据库制定的规范，是底层规范，而不是应用程序制定的，所以这种情况一般不认为是依赖倒转。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542927968,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40322,"user_name":"老男孩","can_delete":false,"product_type":"c1","uid":1134514,"ip_address":"","ucode":"CEC6D47412F620","user_header":"https://static001.geekbang.org/account/avatar/00/11/4f/b2/1e8b5616.jpg","comment_is_top":false,"comment_ctime":1542593045,"is_pvip":false,"replies":[{"id":"14808","content":"是的👍🏻","user_name":"作者回复","comment_id":40322,"uid":"1007349","ip_address":"","utype":1,"ctime":1542766407,"user_name_real":"李智慧"}],"discussion_count":1,"race_medal":0,"score":"78852004373","product_id":100020201,"comment_content":"突然明白了，这么多年都是错误的观点。我之前的所谓分层展现层，服务层，持久层其实都是上层依赖下层的抽象，不是依赖倒置。","like_count":19,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429473,"discussion_content":"是的👍🏻","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542766407,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68652,"user_name":"生活在别处","can_delete":false,"product_type":"c1","uid":1096441,"ip_address":"","ucode":"E7F60026F2737A","user_header":"https://static001.geekbang.org/account/avatar/00/10/ba/f9/351e4fc0.jpg","comment_is_top":false,"comment_ctime":1550567874,"is_pvip":false,"replies":[{"id":"24591","content":"资源调度如Yarn，管理的是集群中的计算资源，如CPU、内存的分配和回收。<br>计算调度应该是计算任务调度，如map和reduce的任务或者spark的任务，应该在哪个container启动，启动前后顺序管理等。","user_name":"作者回复","comment_id":68652,"uid":"1007349","ip_address":"","utype":1,"ctime":1550711929,"user_name_real":"李智慧"}],"discussion_count":1,"race_medal":0,"score":"70270044610","product_id":100020201,"comment_content":"老师，资源调度和计算调度的区别是什么？","like_count":17,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439780,"discussion_content":"资源调度如Yarn，管理的是集群中的计算资源，如CPU、内存的分配和回收。\n计算调度应该是计算任务调度，如map和reduce的任务或者spark的任务，应该在哪个container启动，启动前后顺序管理等。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550711929,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40196,"user_name":"纯洁的憎恶","can_delete":false,"product_type":"c1","uid":1130512,"ip_address":"","ucode":"5E9757DE6F45DF","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/10/b6bf3c3c.jpg","comment_is_top":false,"comment_ctime":1542547069,"is_pvip":true,"replies":[{"id":"14814","content":"有可能。<br>不用yarn也会有这个问题。<br>网络效率这几年提升很快，这个问题不严重。","user_name":"作者回复","comment_id":40196,"uid":"1007349","ip_address":"","utype":1,"ctime":1542767698,"user_name_real":"李智慧"}],"discussion_count":1,"race_medal":0,"score":"65967056509","product_id":100020201,"comment_content":"MapReduce框架遵循把程序发送到数据存储位置运行的原则。而资源调度框架的任务是动态调配计算资源（内存+cpu），那么就很有可能出现本地数据需要发送到其他节点计算的情况，于是就会有网络传输大量数据的现象，这是否与程序在数据存储节点运行的初衷相悖呢？我这么理解对么？","like_count":16,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429419,"discussion_content":"有可能。\n不用yarn也会有这个问题。\n网络效率这几年提升很快，这个问题不严重。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542767698,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40057,"user_name":"Li Shunduo","can_delete":false,"product_type":"c1","uid":1222882,"ip_address":"","ucode":"6C5AB4129E9780","user_header":"https://static001.geekbang.org/account/avatar/00/12/a8/e2/f8e51df2.jpg","comment_is_top":false,"comment_ctime":1542457304,"is_pvip":false,"replies":[{"id":"14434","content":"没有关系。两种容器设计思路差不多，docker更通用。","user_name":"作者回复","comment_id":40057,"uid":"1007349","ip_address":"","utype":1,"ctime":1542524729,"user_name_real":"李智慧"}],"discussion_count":1,"race_medal":0,"score":"40197162968","product_id":100020201,"comment_content":"请问Yarn里的容器和docker这一类容器有什么关系吗？","like_count":9,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429354,"discussion_content":"没有关系。两种容器设计思路差不多，docker更通用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542524729,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":218473,"user_name":"席席","can_delete":false,"product_type":"c1","uid":1591399,"ip_address":"","ucode":"656377E29D4F76","user_header":"https://static001.geekbang.org/account/avatar/00/18/48/67/128eda8f.jpg","comment_is_top":false,"comment_ctime":1589806880,"is_pvip":false,"replies":[{"id":"80958","content":"框架是对某一类架构方案可复用的设计与实现。所有的 Web 应用都需要监听 HTTP 端口，也需要处理请求参数，这些功能不应该在每个 Web 应用中都被重复开发，而是应该以通用组件的形式被复用。但并不是所有可被复用的组件都被称作框架，框架通常规定了一个软件的主体结构，可以支撑起软件的整体或者局部的架构形式。比如说，Tomcat 完成了 Web 应用请求响应的主体流程，我们只需要开发 Servlet，完成请求处理逻辑，构造响应对象就可以了，所以 Tomcat 是一个框架。还有一类可复用的组件不控制软件的主体流程，也不支撑软件的整体架构，比如 Log4J 提供了一个可复用的日志输出功能，但是，日志输出功能不是软件的主体结构，所以我们通常不称 Log4J 为框架，而称其为工具。<br><br>https:&#47;&#47;time.geekbang.org&#47;column&#47;article&#47;183371 ","user_name":"作者回复","comment_id":218473,"uid":"1007349","ip_address":"","utype":1,"ctime":1589954020,"user_name_real":"李智慧"}],"discussion_count":1,"race_medal":0,"score":"35949545248","product_id":100020201,"comment_content":"李老师。框架：指的是能兼容一类底层问题的技术，这么理解可以嘛？Spring 的依赖注入指的是框架嘛？","like_count":9,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495474,"discussion_content":"框架是对某一类架构方案可复用的设计与实现。所有的 Web 应用都需要监听 HTTP 端口，也需要处理请求参数，这些功能不应该在每个 Web 应用中都被重复开发，而是应该以通用组件的形式被复用。但并不是所有可被复用的组件都被称作框架，框架通常规定了一个软件的主体结构，可以支撑起软件的整体或者局部的架构形式。比如说，Tomcat 完成了 Web 应用请求响应的主体流程，我们只需要开发 Servlet，完成请求处理逻辑，构造响应对象就可以了，所以 Tomcat 是一个框架。还有一类可复用的组件不控制软件的主体流程，也不支撑软件的整体架构，比如 Log4J 提供了一个可复用的日志输出功能，但是，日志输出功能不是软件的主体结构，所以我们通常不称 Log4J 为框架，而称其为工具。\n\nhttps://time.geekbang.org/column/article/183371 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589954020,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45499,"user_name":"Jowin","can_delete":false,"product_type":"c1","uid":1114356,"ip_address":"","ucode":"19017F7D06C22A","user_header":"https://static001.geekbang.org/account/avatar/00/11/00/f4/cc5f0896.jpg","comment_is_top":false,"comment_ctime":1543655697,"is_pvip":false,"replies":[{"id":"16224","content":"是的","user_name":"作者回复","comment_id":45499,"uid":"1007349","ip_address":"","utype":1,"ctime":1543676074,"user_name_real":"李智慧"}],"discussion_count":2,"race_medal":0,"score":"35903394065","product_id":100020201,"comment_content":"请教老师，关于mapreduce和yarn的结合，是不是mapreduce ApplicationMaster 向资源管理器申请计算资源时可以指定目标节点（数据分片所在节点），而如果系统资源能够满足，就会把mapreduce计算任务分发到指定的服务器上。如果资源不允许，比如目标节点非常繁忙，这时部分mapreduce计算任务可能会分配另外的服务器（数据分片不在本地）？也就是说，yarn对资源调度是尽力而为，不保值一定满足ApplicationMaster的要求，这个理解正确么？","like_count":9,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431067,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543676074,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1056668,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1f/9c/6e37e32b.jpg","nickname":"simon","note":"","ucode":"77F8D34328603D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":35894,"discussion_content":"AM知道数据块的位置？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571312935,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43664,"user_name":"宝宝疯","can_delete":false,"product_type":"c1","uid":1026637,"ip_address":"","ucode":"D86F5A645FE61B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/aa/4d/c7df89bf.jpg","comment_is_top":false,"comment_ctime":1543278972,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"35903017340","product_id":100020201,"comment_content":"理解原理后倒推它应该是什么样，训练自己从设计者角度分析问题，而不是一味被动学习。<br>回答很精彩啊","like_count":8},{"had_liked":false,"id":40310,"user_name":"李二木","can_delete":false,"product_type":"c1","uid":1103091,"ip_address":"","ucode":"30E03BB84ADB27","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/f3/129d6dfe.jpg","comment_is_top":false,"comment_ctime":1542591567,"is_pvip":true,"replies":[{"id":"14809","content":"也许我们将来可以再开个架构的专栏😁","user_name":"作者回复","comment_id":40310,"uid":"1007349","ip_address":"","utype":1,"ctime":1542766455,"user_name_real":"李智慧"}],"discussion_count":1,"race_medal":0,"score":"31607362639","product_id":100020201,"comment_content":"强烈建议老师加餐一篇你对架构设计理解的文章。^^","like_count":7,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429469,"discussion_content":"也许我们将来可以再开个架构的专栏😁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542766455,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40264,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1542587912,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31607358984","product_id":100020201,"comment_content":"老师、我看了一下，还是不知道MR程序是怎么分发的，提问如下：应用程序给ResourceManager提交了MR应用程序、ResourceManager给MR应用程序分配了首节点、并在分配的首节点上分配了MapReduce ApplicationMaster、以及分配了MapReduce ApplicationMaster的容器，MapReduce Application 启动后和其他节点通信，会分发MapReduce应用程序。可是这个时候ApplicationMaster并没有MR应用程序啊？它的MR是怎么来的呢？在是在ResourceManager分配ApplicationMaster的时候，给ApplicationMaster分配了MR应用程序吗？还是怎么回事啊？不知道我描述清楚没有，麻烦老师解答一下！","like_count":8},{"had_liked":false,"id":146987,"user_name":"涤生","can_delete":false,"product_type":"c1","uid":1040798,"ip_address":"","ucode":"C3DBA6ED47804B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e1/9e/109f6105.jpg","comment_is_top":false,"comment_ctime":1572751710,"is_pvip":false,"replies":[{"id":"56840","content":"map 和 reduce任务分配优先分配处理本机数据，如果本机没有计算资源了，会分配到其他机器上，不会等待本机资源释放后在分配。<br><br>对于已经分配的任务，如果本机计算慢，会在其他机器启动备份task，也就是同一个任务会在多个机器同时执行，使用先执行完的任务结果进行后续计算。","user_name":"作者回复","comment_id":146987,"uid":"1007349","ip_address":"","utype":1,"ctime":1572833546,"user_name_real":"李智慧"}],"discussion_count":1,"race_medal":0,"score":"27342555486","product_id":100020201,"comment_content":"有没有可能存在一种情况就是，在分布式集群中，DataNode存了10G的数据，但是该节点服务器计算资源很少了（假设系统中已经有其他大数据应用在跑），其他DataNode也是存了10G数据，但是其他阶段计算资源都很充足，那最后是不是就导致了整个reduce操作都要等当前的map操作结束了才能执行，大大降低了整个程序的计算效率。","like_count":6,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473088,"discussion_content":"map 和 reduce任务分配优先分配处理本机数据，如果本机没有计算资源了，会分配到其他机器上，不会等待本机资源释放后在分配。\n\n对于已经分配的任务，如果本机计算慢，会在其他机器启动备份task，也就是同一个任务会在多个机器同时执行，使用先执行完的任务结果进行后续计算。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572833546,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65910,"user_name":"杰之7","can_delete":false,"product_type":"c1","uid":1297232,"ip_address":"","ucode":"F7DA2E21085332","user_header":"https://static001.geekbang.org/account/avatar/00/13/cb/50/66d0bd7f.jpg","comment_is_top":false,"comment_ctime":1549766935,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"27319570711","product_id":100020201,"comment_content":"通过这一节的复习，到这里为止，我们对Hadoop生态就有了一个全面的认识。包括HDFS分布式文件系统架构，MR计算框架，Yarn资源调度框架。<br><br>在大数据技术发展的过程中，多种计算框架的出现及数据存储在HDFS中，这样就伴随Yarn(Yet another resource negotiator)的出现。Yarn主要由资源管理器和节点管理器构成。资源管理器负责整个集群的资源调度管理。节点管理器负责对具体服务器的资源和任务管理。<br><br>在Yarn的整个工作流程中，首先向Yarn提交应用程序。RM和NM进行通信，分配容器，并在容器中启动MR ApplicationMaster。MR application向RM进行注册，为应用程序申请程序资源，MRAM与NM进行通信，将MR的程序分发到NM所在服务器中并在容器中运行。运行结束后进行注销容器资源。<br><br>在大数据技术中，HDFS称为系统，MR和YARN称为框架，遵循的原则是依赖倒转原则。高层模块不能依赖低层模块，它们通过依耐一个抽象，这个抽象由高层模块定义，由低层模块实现。在Java web 中，Tomcat，Spring MVC就相当于高层模块，具体写的程序就相当于底层代码。","like_count":6,"discussions":[{"author":{"id":1503506,"avatar":"https://static001.geekbang.org/account/avatar/00/16/f1/12/7dac30d6.jpg","nickname":"你为啥那么牛","note":"","ucode":"1ABC604A54A8F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352383,"discussion_content":"缩写整的挺溜啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614697429,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40205,"user_name":"小辉辉","can_delete":false,"product_type":"c1","uid":1189661,"ip_address":"","ucode":"9FF25E25C85350","user_header":"https://static001.geekbang.org/account/avatar/00/12/27/1d/1cb36854.jpg","comment_is_top":false,"comment_ctime":1542550750,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23017387230","product_id":100020201,"comment_content":"老师讲得通俗易懂，没接触大数据之前，一直以为大数据是很高深的东西。经过几讲的了解之后，通过从原理出发，上手就很容易了。","like_count":5},{"had_liked":false,"id":97459,"user_name":"jimmy","can_delete":false,"product_type":"c1","uid":1003262,"ip_address":"","ucode":"F7CC7E298AD0C8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4e/fe/7dfe2910.jpg","comment_is_top":false,"comment_ctime":1558675450,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18738544634","product_id":100020201,"comment_content":"依赖倒置正式在DDD中倡导和广泛采用的，dao抽象成资源仓库的概念，资源访问的接口在另一层定义，面向业务的；而资源仓库的具体实现在基础资源层，即dao的实现，这样基础资源层就像插件一样，注入到领域层，实现了依赖倒置","like_count":4},{"had_liked":false,"id":42855,"user_name":"蜡笔小新","can_delete":false,"product_type":"c1","uid":1208298,"ip_address":"","ucode":"3CF9E1D1BBDCDE","user_header":"https://static001.geekbang.org/account/avatar/00/12/6f/ea/44d60d01.jpg","comment_is_top":false,"comment_ctime":1543063096,"is_pvip":false,"replies":[{"id":"15329","content":"根据数据量和分片大小计算，相除就可以。","user_name":"作者回复","comment_id":42855,"uid":"1007349","ip_address":"","utype":1,"ctime":1543107666,"user_name_real":"李智慧"}],"discussion_count":1,"race_medal":0,"score":"18722932280","product_id":100020201,"comment_content":"老师请教一下，MapReduce ApplicationMaster怎么计算出需要多少资源的呢？","like_count":4,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430216,"discussion_content":"根据数据量和分片大小计算，相除就可以。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543107666,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40289,"user_name":"Mcnulty","can_delete":false,"product_type":"c1","uid":1143536,"ip_address":"","ucode":"3DD71D84B58A16","user_header":"https://static001.geekbang.org/account/avatar/00/11/72/f0/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1542589781,"is_pvip":false,"replies":[{"id":"14812","content":"我觉得你已经描述很清楚了，资源管理和执行过程耦合，再感受一下～","user_name":"作者回复","comment_id":40289,"uid":"1007349","ip_address":"","utype":1,"ctime":1542766869,"user_name_real":"李智慧"}],"discussion_count":1,"race_medal":0,"score":"18722458965","product_id":100020201,"comment_content":"前文中写道<br>3.JobTacker 根据作业调度策略创建 JobInProcess 树，每个作业都会有一个自己的 JobInProcess 树。<br>6. 如果 TaskTracker 有空闲的计算资源（有空闲 CPU 核心），JobTracker 就会给它分配任务。<br>可以理解为jobtracker 在服务器A上，负责整个job的调度，包括subjob的生成与分发。tasktracker在服务器B C D上，负责subjob的执行mapreduce。<br><br>本文中写道:<br>这种架构方案的主要缺点是，服务器集群资源调度管理和 MapReduce 执行过程耦合在一起，如果想在当前集群中运行其他计算任务，比如 Spark 或者 Storm，就无法统一使用集群中的资源了。<br>这里说的 服务器集群资源调度与mapreduce执行过程耦合，在前文中具体是怎么体现的呢？不太理解","like_count":4,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429459,"discussion_content":"我觉得你已经描述很清楚了，资源管理和执行过程耦合，再感受一下～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542766869,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138469,"user_name":"星一","can_delete":false,"product_type":"c1","uid":1103829,"ip_address":"","ucode":"EF550131FAE1BF","user_header":"https://static001.geekbang.org/account/avatar/00/10/d7/d5/6fbf1070.jpg","comment_is_top":false,"comment_ctime":1570262969,"is_pvip":false,"replies":[{"id":"53686","content":"是的，MapReduce是这样。<br><br>但是ResourceManager本身并没有限制。","user_name":"作者回复","comment_id":138469,"uid":"1007349","ip_address":"","utype":1,"ctime":1570602924,"user_name_real":"李智慧"}],"discussion_count":1,"race_medal":0,"score":"14455164857","product_id":100020201,"comment_content":"您好，请问一下，Yarn的工作流程中（以MapReduce为例）只会向ResourceManager申请两次容器资源吗，一次用来运行ApplicationMaster，一次用来运行MapReduce程序","like_count":4,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469528,"discussion_content":"是的，MapReduce是这样。\n\n但是ResourceManager本身并没有限制。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570602924,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40279,"user_name":"hunterlodge","can_delete":false,"product_type":"c1","uid":1069755,"ip_address":"","ucode":"5B83A79E784161","user_header":"https://static001.geekbang.org/account/avatar/00/10/52/bb/225e70a6.jpg","comment_is_top":false,"comment_ctime":1542588979,"is_pvip":false,"replies":[{"id":"14813","content":"应用程序指client，最先启动，通常不在Hadoop集群中。client提交作业后，是am在Hadoop中启动，对hadoop而言可以认为是am最先启动。","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1542767085,"ip_address":"","comment_id":40279,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14427490867","product_id":100020201,"comment_content":"老师前面说&quot;每个应用程序启动后都会先启动自己的 ApplicationMaster&quot;，后面具体mapReduce例子里又是先启动ApplicationMaster的，这不矛盾吗？","like_count":4,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429455,"discussion_content":"应用程序指client，最先启动，通常不在Hadoop集群中。client提交作业后，是am在Hadoop中启动，对hadoop而言可以认为是am最先启动。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1542767085,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40034,"user_name":"追梦小乐","can_delete":false,"product_type":"c1","uid":1035507,"ip_address":"","ucode":"82AB8A7F98389D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cc/f3/5e4b0315.jpg","comment_is_top":false,"comment_ctime":1542447529,"is_pvip":false,"replies":[{"id":"14398","content":"am向resourcemanager申请资源，资源来自其他nodemanager<br>container用启动命令启动am","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1542460153,"ip_address":"","comment_id":40034,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14427349417","product_id":100020201,"comment_content":"老师，我有俩个问题不是很理解:<br>1、为什么会有其它nodeManger（NM）的容器指到另外一个nodeManger上面的applicationMaster（am）上，am去nodeManger（NM）上面申请资源，申请的资源不是在am所在的NM上使用的吗<br><br>2、提交应用程序的时候，提交程序我知道可以通过脚本分发上去，那提交的mapreduce applicationMaster  和 启动命令是怎么表现的?","like_count":3,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429343,"discussion_content":"am向resourcemanager申请资源，资源来自其他nodemanager\ncontainer用启动命令启动am","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542460153,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92583,"user_name":"一","can_delete":false,"product_type":"c1","uid":1220750,"ip_address":"","ucode":"28E0605EA1AE88","user_header":"https://static001.geekbang.org/account/avatar/00/12/a0/8e/6e4c7509.jpg","comment_is_top":false,"comment_ctime":1557304519,"is_pvip":false,"replies":[{"id":"33290","content":"cpu，内存这些计算资源","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1557457339,"ip_address":"","comment_id":92583,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10147239111","product_id":100020201,"comment_content":"老师好，我想问一下yarn所管理的“资源”具体是指哪些呢？","like_count":2,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449326,"discussion_content":"cpu，内存这些计算资源","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557457339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":77217,"user_name":"Athena","can_delete":false,"product_type":"c1","uid":1369754,"ip_address":"","ucode":"1183247AE864AA","user_header":"https://static001.geekbang.org/account/avatar/00/14/e6/9a/d0725a24.jpg","comment_is_top":false,"comment_ctime":1552889256,"is_pvip":false,"replies":[{"id":"28342","content":"ApplicationMaster是启动作业主控程序的容器，有几个作业在Yarn集群同时提交，就有几个ApplicationMaster。<br><br>从架构设计角度，如果一个集群只需要启动一个ApplicationMaster，那么就应该以独立进程的方式初始化集群的时候启动，而不是在容器中运行时再启动，前者效率更高。","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1552974530,"ip_address":"","comment_id":77217,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10142823848","product_id":100020201,"comment_content":"为什么 ResourceManager 会分配两个 ApplicationMaster在容器上？ 我所了解的资料是只会分配一个ApplicationMaster","like_count":2,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443640,"discussion_content":"ApplicationMaster是启动作业主控程序的容器，有几个作业在Yarn集群同时提交，就有几个ApplicationMaster。\n\n从架构设计角度，如果一个集群只需要启动一个ApplicationMaster，那么就应该以独立进程的方式初始化集群的时候启动，而不是在容器中运行时再启动，前者效率更高。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552974530,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40483,"user_name":"梁中华","can_delete":false,"product_type":"c1","uid":1006789,"ip_address":"","ucode":"52FE40242CBAD0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/c5/1231d633.jpg","comment_is_top":false,"comment_ctime":1542624880,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"10132559472","product_id":100020201,"comment_content":"提个建议，可以多放一些留言出来，鼓励大家多留言，老师多互动，这样热闹一些，学习氛围更浓一些。","like_count":2},{"had_liked":false,"id":327843,"user_name":"*其","can_delete":false,"product_type":"c1","uid":2859880,"ip_address":"","ucode":"B1B0A47CEDECC3","user_header":"https://static001.geekbang.org/account/avatar/00/2b/a3/68/e913d823.jpg","comment_is_top":false,"comment_ctime":1640325684,"is_pvip":false,"replies":[{"id":"119471","content":"是的","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1640573051,"ip_address":"","comment_id":327843,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5935292980","product_id":100020201,"comment_content":"有了Yarn之后,MapReduce似乎就只是一个编程模型了，资源调度交给了RM，计算任务调度交给了AM","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541805,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640573051,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":302702,"user_name":"赛博泰格","can_delete":false,"product_type":"c1","uid":2641777,"ip_address":"","ucode":"7680CD83D80A03","user_header":"https://static001.geekbang.org/account/avatar/00/28/4f/71/18300cab.jpg","comment_is_top":false,"comment_ctime":1626339803,"is_pvip":false,"replies":[{"id":"109722","content":"https:&#47;&#47;hadoop.apache.org&#47;docs&#47;stable&#47;hadoop-yarn&#47;hadoop-yarn-site&#47;ResourceManagerHA.html","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1626656951,"ip_address":"","comment_id":302702,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5921307099","product_id":100020201,"comment_content":"请假一下，Yarn是怎么解决hadoop架构单点故障的呢？如果Resource Manager故障了，那整个大数据系统不就瘫痪了吗？谢谢！","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":523395,"discussion_content":"https://hadoop.apache.org/docs/stable/hadoop-yarn/hadoop-yarn-site/ResourceManagerHA.html","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626656951,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":300154,"user_name":"风灵子","can_delete":false,"product_type":"c1","uid":1234419,"ip_address":"","ucode":"80E68439EE0602","user_header":"https://static001.geekbang.org/account/avatar/00/12/d5/f3/56d484db.jpg","comment_is_top":false,"comment_ctime":1625022411,"is_pvip":true,"replies":[{"id":"108831","content":"各种大数据技术的官网~","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1625040789,"ip_address":"","comment_id":300154,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5919989707","product_id":100020201,"comment_content":"老师，想请问下，学习大数据有什么推荐的书籍吗？","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522656,"discussion_content":"各种大数据技术的官网~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625040789,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":254165,"user_name":"饭粒","can_delete":false,"product_type":"c1","uid":1153455,"ip_address":"","ucode":"4C3220B0D43997","user_header":"https://static001.geekbang.org/account/avatar/00/11/99/af/d29273e2.jpg","comment_is_top":false,"comment_ctime":1603074438,"is_pvip":false,"replies":[{"id":"92943","content":"对的。<br><br>补充一下：<br>“ApplicationMaster 再申请创建 Map Reduce 程序运行的容器。”，这里ApplicationMaster也是向ResourceManger申请容器。所有的容器都是同样的，都是ResourceManger管理的。","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1603243162,"ip_address":"","comment_id":254165,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5898041734","product_id":100020201,"comment_content":"请教下老师，文中提到 ApplicationMaster 需要运行在容器里面，Map Reduce 程序也是在容器内，这两种程序是在单独分开的容器内吗，我看图示好像是这样的。那这样是 ResourceManager 分配创建 ApplicationMaster 运行的容器，ApplicationMaster 再申请创建 Map Reduce 程序运行的容器。这理解对吗？","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507304,"discussion_content":"对的。\n\n补充一下：\n“ApplicationMaster 再申请创建 Map Reduce 程序运行的容器。”，这里ApplicationMaster也是向ResourceManger申请容器。所有的容器都是同样的，都是ResourceManger管理的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603243162,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233590,"user_name":"官","can_delete":false,"product_type":"c1","uid":1696727,"ip_address":"","ucode":"E3FF6D04B9846B","user_header":"https://static001.geekbang.org/account/avatar/00/19/e3/d7/d7b3505f.jpg","comment_is_top":false,"comment_ctime":1594362853,"is_pvip":false,"replies":[{"id":"86510","content":"√","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1594696898,"ip_address":"","comment_id":233590,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5889330149","product_id":100020201,"comment_content":"感觉依赖倒转是不是就是高底层框架，通过遵循已经的技术规范（比如J2EE，MapReduce），达到不相互依赖的目的，这样可以保证高内聚低耦合，使得无论是底层框架还是高层框架进行变动都不会影响对方。","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501097,"discussion_content":"√","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594696898,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136850,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1569543437,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5864510733","product_id":100020201,"comment_content":"这节没完全明白，先跳过。<br>课后思考题，发现我们是C——S——D，也是上层依赖下层，虽然是面向接口编程，实现换了不影响上层，不过上层确实在依赖下层。<br>不知智慧老师是怎么做到上不依下的？采用tomcat或springMVC的思路？那就需要有个规范或者弄个框架在其下编程了，低耦合高内聚谁都爱也都想，能否做到就看个人本事以及具体情况啦？","like_count":1},{"had_liked":false,"id":117770,"user_name":"猪哥灰","can_delete":false,"product_type":"c1","uid":1056113,"ip_address":"","ucode":"5682FB624D7795","user_header":"https://static001.geekbang.org/account/avatar/00/10/1d/71/4d3d2a62.jpg","comment_is_top":false,"comment_ctime":1564127244,"is_pvip":false,"replies":[{"id":"44660","content":"我在极客时间 - 每日一课 《如何设计低耦合、易复用的软件架构》专门讲了这个原则，可参考。","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1565169550,"ip_address":"","comment_id":117770,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5859094540","product_id":100020201,"comment_content":"我理解下来是不是所谓的“高层”和“底层”是这样定义的，站在用户调用的角度，越“外层”的其实是“底层”，而越“内层”的是“高层”，因为根据方法栈的调用原理，离用户越是近，越是外层越是后调用，越是内层的先调用，因此，真正内层的也就是“先定义好的”代码即所谓的“高层”，不应该依赖于“后定义好的代码”即所谓的“底层”，在我的实际工作中，“高层”类应定义为泛型类，方法的参数应为接口类型，而具体的实现应由调用他的“底层”代码来决定。从而实现“依赖倒置”的原则。","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460108,"discussion_content":"我在极客时间 - 每日一课 《如何设计低耦合、易复用的软件架构》专门讲了这个原则，可参考。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565169550,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72684,"user_name":"落叶飞逝的恋","can_delete":false,"product_type":"c1","uid":1046429,"ip_address":"","ucode":"F9A95DB28BCF1E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/9d/be04b331.jpg","comment_is_top":false,"comment_ctime":1551692277,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5846659573","product_id":100020201,"comment_content":"Yarn的执行流程<br>1.客户端提交作业到ResourceManager<br><br>2.ResourceManager会一个到NodeManager上要求启动一个Container<br><br>3.Container会启动ApplicationMaster<br><br>4.ApplicationMaster会到ResourcesManager上去注册<br><br>5.注册完就在对应的NodeManager上去执行任务了。<br><br>6.所有的任务都是以Container运行的","like_count":1},{"had_liked":false,"id":65079,"user_name":"Wiggle Wiggle","can_delete":false,"product_type":"c1","uid":1036052,"ip_address":"","ucode":"EFE746551BA998","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cf/14/384258ba.jpg","comment_is_top":false,"comment_ctime":1549028698,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5843995994","product_id":100020201,"comment_content":"在service中使用的是dao的接口，接口规定了一类dao所要实现的功能，比如crud操作。crud操作的实现由具体的dao类实现，具体实现可能会因为数据库的改变而改变，但任何改变都不会影响service","like_count":1},{"had_liked":false,"id":61599,"user_name":"tom","can_delete":false,"product_type":"c1","uid":1352891,"ip_address":"","ucode":"B5CA5BA5ED49FF","user_header":"https://static001.geekbang.org/account/avatar/00/14/a4/bb/dc8e1d69.jpg","comment_is_top":false,"comment_ctime":1547732938,"is_pvip":false,"replies":[{"id":"21881","content":"不符合，还是上层依赖下层。","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1547773946,"ip_address":"","comment_id":61599,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5842700234","product_id":100020201,"comment_content":"依赖倒转原则还是不太清楚，service层抽象通用的crud操作，在crud方法中调用基类dao的方法，这个符合依赖倒转原则吗？","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436924,"discussion_content":"不符合，还是上层依赖下层。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547773946,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":50010,"user_name":"crazyone","can_delete":false,"product_type":"c1","uid":1115042,"ip_address":"","ucode":"705E34642E41F5","user_header":"https://static001.geekbang.org/account/avatar/00/11/03/a2/ceb37046.jpg","comment_is_top":false,"comment_ctime":1544838944,"is_pvip":false,"replies":[{"id":"18183","content":"jvm隔离","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1545025505,"ip_address":"","comment_id":50010,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5839806240","product_id":100020201,"comment_content":"我记得docker是用cgroup来对资源进行隔离的，不知道yarn是用什么方式来实现对资源的分割的？","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432839,"discussion_content":"jvm隔离","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545025505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45520,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1543658841,"is_pvip":false,"replies":[{"id":"16223","content":"单机就可以","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1543675963,"ip_address":"","comment_id":45520,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5838626137","product_id":100020201,"comment_content":"搭一个大数据学习环境最多需要几台机器","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431075,"discussion_content":"单机就可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543675963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1056668,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1f/9c/6e37e32b.jpg","nickname":"simon","note":"","ucode":"77F8D34328603D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":35897,"discussion_content":"要起码2+台虚拟机吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571313076,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41367,"user_name":"宋晓明","can_delete":false,"product_type":"c1","uid":1146507,"ip_address":"","ucode":"DC866DCE2FBA9E","user_header":"https://static001.geekbang.org/account/avatar/00/11/7e/8b/3cc461b3.jpg","comment_is_top":false,"comment_ctime":1542769709,"is_pvip":false,"replies":[{"id":"15101","content":"会","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1542928940,"ip_address":"","comment_id":41367,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5837737005","product_id":100020201,"comment_content":"老师，后续课程中是否讲解spark相关技术跟案例？","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429779,"discussion_content":"会","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542928940,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40607,"user_name":"scorpiozj","can_delete":false,"product_type":"c1","uid":1031677,"ip_address":"","ucode":"C66EA76809F9BF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bd/fd/3f5d5db5.jpg","comment_is_top":false,"comment_ctime":1542635985,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5837603281","product_id":100020201,"comment_content":"理解透彻业务，然后抽象出接口；需要多实践才行。<br><br>另外，假设配置相同的情形下，资源管理器通常可以管理多少个节点管理器<br>","like_count":1},{"had_liked":false,"id":40273,"user_name":"hunterlodge","can_delete":false,"product_type":"c1","uid":1069755,"ip_address":"","ucode":"5B83A79E784161","user_header":"https://static001.geekbang.org/account/avatar/00/10/52/bb/225e70a6.jpg","comment_is_top":false,"comment_ctime":1542588783,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5837556079","product_id":100020201,"comment_content":"<br>赞老师的延伸内容，受益良多！谢谢！","like_count":1},{"had_liked":false,"id":40070,"user_name":"Wy 🐠","can_delete":false,"product_type":"c1","uid":1261176,"ip_address":"","ucode":"F37AAED71DBAC3","user_header":"https://static001.geekbang.org/account/avatar/00/13/3e/78/0654bcc1.jpg","comment_is_top":false,"comment_ctime":1542463303,"is_pvip":false,"replies":[{"id":"14433","content":"这些操作被applicationmasrer执行。<br><br>是的，容器运行applicationmaster，也运行task","user_name":"作者回复","user_name_real":"李智慧","uid":"1007349","ctime":1542524632,"ip_address":"","comment_id":40070,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5837430599","product_id":100020201,"comment_content":"使用yarn后，mapreduce的运行过程是怎样的？在08课的时候我们看到一个application作业提交后创建job process，job process又会进一步生成多个task process，这些操作是都被yarn来执行了吗？对于applicationmaster来说，分配到的容器里面运行的是task吗？","like_count":1,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429359,"discussion_content":"这些操作被applicationmasrer执行。\n\n是的，容器运行applicationmaster，也运行task","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542524632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2859880,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/a3/68/e913d823.jpg","nickname":"*其","note":"","ucode":"B1B0A47CEDECC3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541294,"discussion_content":"am会去走第8章的流程吗，创建job process来分发任务到task process？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640324738,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":333675,"user_name":"街角","can_delete":false,"product_type":"c1","uid":1045711,"ip_address":"","ucode":"F1085900AF9504","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f4/cf/001c5728.jpg","comment_is_top":false,"comment_ctime":1644466352,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1644466352","product_id":100020201,"comment_content":"yarn 队列分的话。应该根据啥划分？划分多少个","like_count":0},{"had_liked":false,"id":330343,"user_name":"piboye","can_delete":false,"product_type":"c1","uid":1066752,"ip_address":"","ucode":"7CFD8712857A85","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","comment_is_top":false,"comment_ctime":1641925423,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1641925423","product_id":100020201,"comment_content":"老师讲的依赖倒置和框架太棒了👍","like_count":0},{"had_liked":false,"id":330342,"user_name":"piboye","can_delete":false,"product_type":"c1","uid":1066752,"ip_address":"","ucode":"7CFD8712857A85","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","comment_is_top":false,"comment_ctime":1641925367,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1641925367","product_id":100020201,"comment_content":"现在yarn会跑到k8s上吗，这也要做很多调整吧？","like_count":0},{"had_liked":false,"id":330341,"user_name":"piboye","can_delete":false,"product_type":"c1","uid":1066752,"ip_address":"","ucode":"7CFD8712857A85","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","comment_is_top":false,"comment_ctime":1641925332,"is_pvip":true,"replies":[{"id":"120574","content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1642071445,"ip_address":"","comment_id":330341,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1641925332","product_id":100020201,"comment_content":"jobtrack拆出来了，分资源和job单独管理，job也不会卡死在单个的jobtrack上。集群规模可以上一个量级。资源管理器做主备容灾也更容易","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545885,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642071445,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":327845,"user_name":"*其","can_delete":false,"product_type":"c1","uid":2859880,"ip_address":"","ucode":"B1B0A47CEDECC3","user_header":"https://static001.geekbang.org/account/avatar/00/2b/a3/68/e913d823.jpg","comment_is_top":false,"comment_ctime":1640326753,"is_pvip":false,"replies":[{"id":"119472","content":"一般似乎不说MapReduce2，而是Hadoop2，Hadoop2包括MapReduce和Yarn，还有HDFS","user_name":"作者回复","user_name_real":"编辑","uid":"1007349","ctime":1640573156,"ip_address":"","comment_id":327845,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1640326753","product_id":100020201,"comment_content":"MapReduce2和Yarn是同一个东西吗","like_count":0,"discussions":[{"author":{"id":1007349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/f5/018907ac.jpg","nickname":"李智慧","note":"","ucode":"8C9980C438AFD1","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541806,"discussion_content":"一般似乎不说MapReduce2，而是Hadoop2，Hadoop2包括MapReduce和Yarn，还有HDFS","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640573156,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":289538,"user_name":"levi","can_delete":false,"product_type":"c1","uid":1501281,"ip_address":"","ucode":"41AFA57F56C15E","user_header":"https://static001.geekbang.org/account/avatar/00/16/e8/61/47293afd.jpg","comment_is_top":false,"comment_ctime":1619070060,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619070060","product_id":100020201,"comment_content":"很多时候都没有遵循依赖倒转原则来实践，即service层直接调用dao对象，主要原因是service和dao的作用经常区分不太明显，另外接触的工程也不够大。<br>真正实践实际上也见过，即从service层定义dao层的接口，而dao层则遵守此接口来被调用。这里接口定义在哪边很重要，接口定义在service层，从大框架而言就是上层不依赖下层，上层编程作为框架，下层只需要去实现上层的接口或者扩展；而如果接口定义在dao层，实际上就没有这层意义，从宏观层面来看有些画蛇添足的意味","like_count":0},{"had_liked":false,"id":281338,"user_name":"你为啥那么牛","can_delete":false,"product_type":"c1","uid":1503506,"ip_address":"","ucode":"1ABC604A54A8F6","user_header":"https://static001.geekbang.org/account/avatar/00/16/f1/12/7dac30d6.jpg","comment_is_top":false,"comment_ctime":1614695088,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614695088","product_id":100020201,"comment_content":"对框架的定义<br>，令人耳目一新，高人高人","like_count":0},{"had_liked":false,"id":165165,"user_name":"InfoQ_e077cb303519","can_delete":false,"product_type":"c1","uid":1390669,"ip_address":"","ucode":"2CCA309DB2EF46","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLAK6F4BFT5ewhJEeZrjmRx5HxP8tvnNpJcpLlotHiadp0s6aL3d7LfMHEuQP6tibu80wUy8micVu4oQ/132","comment_is_top":false,"comment_ctime":1577174143,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577174143","product_id":100020201,"comment_content":"老师讲的大数据原理通俗易懂，通过老师的讲解感觉大数据跟分治算法原理相通，传统计算是对数据源统一计算，大数据是通过数据源分割计算然后合并，由整化零，再由零化整。其中架构的依赖倒转讲的很好，是上层和下层之间的依赖关系，上层抽象出来，不依赖下层，下层依赖上层来实现某些特定业务功能，架构并不是简单的抽象接口，更是对需求的抽象，把需求抽象出来一部分，作为上层框架，不依赖下层实现。","like_count":0},{"had_liked":false,"id":102318,"user_name":"住羽光","can_delete":false,"product_type":"c1","uid":1145157,"ip_address":"","ucode":"11E48DEB421D9C","user_header":"https://static001.geekbang.org/account/avatar/00/11/79/45/05a88185.jpg","comment_is_top":false,"comment_ctime":1560191901,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560191901","product_id":100020201,"comment_content":"常说的领域驱动设计，用领域语言描述需求，然后分层设计是不是一种依赖倒置？","like_count":0},{"had_liked":false,"id":97518,"user_name":"一","can_delete":false,"product_type":"c1","uid":1220750,"ip_address":"","ucode":"28E0605EA1AE88","user_header":"https://static001.geekbang.org/account/avatar/00/12/a0/8e/6e4c7509.jpg","comment_is_top":false,"comment_ctime":1558687309,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558687309","product_id":100020201,"comment_content":"老师可以讲讲Yarn和Mesos的区别与联系么？从事大数据开发主学哪个更好呢？","like_count":0},{"had_liked":false,"id":82968,"user_name":"张闯","can_delete":false,"product_type":"c1","uid":1090513,"ip_address":"","ucode":"D5AD46A8DD6FB7","user_header":"https://static001.geekbang.org/account/avatar/00/10/a3/d1/a30a4d06.jpg","comment_is_top":false,"comment_ctime":1554361438,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554361438","product_id":100020201,"comment_content":"lmpalad=sql引擎+计算框架<br>且Impalad的sql引擎实现了这个计算框架。","like_count":0},{"had_liked":false,"id":61979,"user_name":"不似旧日","can_delete":false,"product_type":"c1","uid":1161271,"ip_address":"","ucode":"DF4C5E3AB9570C","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/37/98991aeb.jpg","comment_is_top":false,"comment_ctime":1547870573,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547870573","product_id":100020201,"comment_content":"思考一下课后作业,service要把处理过的业务数据给DAO层所以service依赖了DAO层, 有点懵逼了可能是我分不清什么是service层什么是DAO层","like_count":0},{"had_liked":false,"id":61977,"user_name":"不似旧日","can_delete":false,"product_type":"c1","uid":1161271,"ip_address":"","ucode":"DF4C5E3AB9570C","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/37/98991aeb.jpg","comment_is_top":false,"comment_ctime":1547870475,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547870475","product_id":100020201,"comment_content":"Hadoop三个重要组成部分:<br>\tMapReduce:分布式计算框架<br>\tHDFS: 分布式文件系统<br>\tYarn:分布式资源调度框架<br>\t<br>框架遵循依赖倒转原则,所谓依赖倒转就是高层框架不依赖底层框架,而是底层依赖高层,如:java代码依赖spring框架,而spring框架不用依赖java代码","like_count":0},{"had_liked":false,"id":56802,"user_name":"大王叫我来巡山","can_delete":false,"product_type":"c1","uid":1099513,"ip_address":"","ucode":"1B8D0C701BC95E","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/f9/caf27bd3.jpg","comment_is_top":false,"comment_ctime":1546562884,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546562884","product_id":100020201,"comment_content":"所有的资源管理框架都必须抽象出资源分配的单位，yarn中的容器就是一种表现形式，跟操作系统的进程是没有本质区别的，所有的抽象都是为了更方便的组合和调度，虽然在性能上会有一定的损失，但从系统上来看是值得的。","like_count":0},{"had_liked":false,"id":52159,"user_name":"吾爱有三","can_delete":false,"product_type":"c1","uid":1138007,"ip_address":"","ucode":"FC5B32E36CE249","user_header":"https://static001.geekbang.org/account/avatar/00/11/5d/57/82f1a3d4.jpg","comment_is_top":false,"comment_ctime":1545321665,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545321665","product_id":100020201,"comment_content":"hadoop 1的mapreduce 的资源管理是什么？","like_count":0},{"had_liked":false,"id":46920,"user_name":"修行者","can_delete":false,"product_type":"c1","uid":1317602,"ip_address":"","ucode":"A206A203DF692E","user_header":"https://static001.geekbang.org/account/avatar/00/14/1a/e2/9e59dd38.jpg","comment_is_top":false,"comment_ctime":1544002086,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544002086","product_id":100020201,"comment_content":"也就是说对底层实现的抽象提供 API，并不是依赖倒转，而是对高层需求的抽象才是？？","like_count":0},{"had_liked":false,"id":45353,"user_name":"优游柏树","can_delete":false,"product_type":"c1","uid":1281271,"ip_address":"","ucode":"16BC166580FB82","user_header":"","comment_is_top":false,"comment_ctime":1543594579,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543594579","product_id":100020201,"comment_content":"做作业：一般数据层除了具体的数据查添删改实现外，还会设计一个泛型接口，定义一般的查填删改操作，不同entity的dto接口继承这个泛型接口，定义了不同entity的特殊数据库操作。之后才是具体的实现。这个也被认为是repository pattern的一部分。我是这么架构的，暂时感觉还可以，可能还有更好的实现。","like_count":0},{"had_liked":false,"id":44501,"user_name":"范杰","can_delete":false,"product_type":"c1","uid":1109480,"ip_address":"","ucode":"81C3423170C509","user_header":"","comment_is_top":false,"comment_ctime":1543453732,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543453732","product_id":100020201,"comment_content":"请问老师，yarn分配资源时使用的所谓的容器的概念，跟docker有什么区别和联系？此外，在一些云环境下，如：openstack，大数据组件请求分配资源的方式是否有所不同？谢谢！","like_count":0},{"had_liked":false,"id":41056,"user_name":"阿里巴巴骊骅","can_delete":false,"product_type":"c1","uid":1042492,"ip_address":"","ucode":"FDA3C20D9E622A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e8/3c/e8c80390.jpg","comment_is_top":false,"comment_ctime":1542718948,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542718948","product_id":100020201,"comment_content":"MR的例子讲解的很难理解","like_count":0}]}