{"id":494604,"title":"04｜TDD演示（4）：实现对于列表参数的支持","content":"<p>你好，我是徐昊。今天我们来继续进行命令行参数解析的TDD演示。</p><p>首先让我们回顾一下题目与需求与代码进度。如前所述，题目源自Bob大叔的  <em><em>Clean Code</em></em>  第十四章：</p><blockquote>\n<p>我们中的大多数人都不得不时不时地解析一下命令行参数。如果我们没有一个方便的工具，那么我们就简单地处理一下传入main函数的字符串数组。有很多开源工具可以完成这个任务，但它们可能并不能完全满足我们的要求。所以我们再写一个吧。<br>\n<strong>　</strong><br>\n传递给程序的参数由标志和值组成。标志应该是一个字符，前面有一个减号。每个标志都应该有零个或多个与之相关的值。例如：<br>\n<strong>　</strong><br>\n-l -p 8080 -d /usr/logs<br>\n<strong>　</strong><br>\n“l”（日志）没有相关的值，它是一个布尔标志，如果存在则为true，不存在则为false。“p”（端口）有一个整数值，“d”（目录）有一个字符串值。标志后面如果存在多个值，则该标志表示一个列表：<br>\n<strong>　</strong><br>\n-g this is a list -d 1 2 -3 5<br>\n<strong>　</strong><br>\n\"g\"表示一个字符串列表[“this”, “is”, “a”, “list”]，“d\"标志表示一个整数列表[1, 2, -3, 5]。<br>\n<strong>　</strong><br>\n如果参数中没有指定某个标志，那么解析器应该指定一个默认值。例如，false代表布尔值，0代表数字，”\"代表字符串，[]代表列表。如果给出的参数与模式不匹配，重要的是给出一个好的错误信息，准确地解释什么是错误的。<br>\n<strong>　</strong><br>\n确保你的代码是可扩展的，即如何增加新的数值类型是直接和明显的。</p>\n</blockquote><!-- [[[read_end]]] --><p>截至目前，我们的代码支持三种类型的参数解析，分别是布尔型、整型和字符串类型。接下来，我们来实现对于列表参数的支持。在开始之前，我们首先要看一看<strong>是否存在坏味道，是否需要重构。</strong></p><h2>不易察觉的坏味道</h2><p>对我来说呢，在当前的代码中存在一个不易察觉的坏味道，意图也不直观，主要存在于SingleValuedOptionParser类的parse方法中：</p><pre><code>if (index + 1 == arguments.size() ||\n    arguments.get(index + 1).startsWith(&quot;-&quot;)) throw new InsufficientArgumentException(option.value());\nif (index + 2 &lt; arguments.size() &amp;&amp; \n    !arguments.get(index + 2).startsWith(&quot;-&quot;)) throw new TooManyArgumentsException(option.value());\n</code></pre><p>如果我们静下心来仔细推敲，不难发现，第一个if语句表示的是参数不足的情况，分别为：当前参数到达列表末尾（-p的情况）；紧紧跟随另一个参数（-p -l的情况）。</p><p>第二个if语句则表示，当前参数后至少还存在两个数值，且第二个不是另一个参数（-p 8080 8081，而不是-p 8080 -l的情况），那么参数给多了。</p><p>一般这种情况下，我们可能会选择添加代码注释的方式。不过更推荐的方式是，通过抽取方法，让方法名成为注释。或者，换一种更容易理解的方法来实现同样的功能：</p><p><video poster=\"https://static001.geekbang.org/resource/image/11/a4/1174e6bbc2ae29a45f580d02094c91a4.jpg\" preload=\"none\" controls=\"\"><source src=\"https://media001.geekbang.org/customerTrans/7e27d07d27d407ebcc195a0e78395f55/3c8dc185-17f97922ec0-0000-0000-01d-dbacd.mp4\" type=\"video/mp4\"><source src=\" https://media001.geekbang.org/91578e991af6491584b45fe62fe9e753/d2f329374c3a409a8205251a0c49e903-17954babc5022070d10fdd80b7b30d68-sd.m3u8\" type=\"application/x-mpegURL\"></video></p><p>重构后的代码让我们的意图变得非常直观，获取当前参数的值，而且我们明确希望它的长度为1：</p><pre><code>List&lt;String&gt; values = valuesFrom(arguments, index);\nif (values.size() &gt; 1) throw new InsufficientArgumentException(option.value());\nif (values.size() &lt; 1) throw new TooManyArgumentsException\n(option.value());\n</code></pre><p>完成重构之后，我们又会发现另一个坏味道，BooleanOptionParser和SingleValuedOptionParser之间存在隐含的重复的代码：</p><p><video poster=\"https://static001.geekbang.org/resource/image/11/a4/1174e6bbc2ae29a45f580d02094c91a4.jpg\" preload=\"none\" controls=\"\"><source src=\"https://media001.geekbang.org/customerTrans/7e27d07d27d407ebcc195a0e78395f55/8817a54-17f91bdb00e-0000-0000-01d-dbacd.mp4\" type=\"video/mp4\"><source src=\" https://media001.geekbang.org/f6902c1daba94510aa4bc795d2df3fd4/ecf7c65357984658acb549313b1858ed-0c0d065db49961723f61dd2b86a29041-sd.m3u8\" type=\"application/x-mpegURL\"></video></p><p>在消除了重复之后，让我们重新整理一下代码结构：</p><p><video poster=\"https://static001.geekbang.org/resource/image/11/a4/1174e6bbc2ae29a45f580d02094c91a4.jpg\" preload=\"none\" controls=\"\"><source src=\"https://media001.geekbang.org/customerTrans/7e27d07d27d407ebcc195a0e78395f55/31a78023-17f91a8f01a-0000-0000-01d-dbacd.mp4\" type=\"video/mp4\"><source src=\" https://media001.geekbang.org/2fe3430546af4c0f80fea51ada6baebc/01ae947497d0448ea571cb69d934deda-2d79e9973846e3b82539abd7e920656a-sd.m3u8\" type=\"application/x-mpegURL\"></video></p><p>好，现在让我们正式进入列表参数解析的开发。</p><h2>列表参数解析</h2><p>现在我们对于如何实现参数解析已经有了非常清晰的认识。在目前的代码结构中，如果需要增加不同类型的单值型参数，那么我们只需要修改Args类中的类型注册表，提供默认值以及解析函数即可：</p><pre><code>private static Map&lt;Class&lt;?&gt;, OptionParser&gt; PARSERS = Map.of(\n        boolean.class, bool(),\n        int.class, unary(0, Integer::parseInt),\n        String.class, unary(&quot;&quot;, String::valueOf));\n</code></pre><p>而如果需要支持除布尔或者单值型参数，则需要实现OptionParser接口：</p><pre><code>interface OptionParser&lt;T&gt; {\n  T parse(List&lt;String&gt; arguments, Option option);\n}\n</code></pre><p>更具体来说，在实现OptionParser接口时，可以利用OptionParsers类中提供的支撑方法（values、parseValue等）。最后，在OptionParsers上增加工厂方法。</p><p>在回顾了这些信息之后，我们可以对列表参数进行任务分解了。从题目要求的功能上看，我们需要实现：</p><pre><code>ArgsTest：\n//TODO: -g this is a list -d 1 2 -3 5\n</code></pre><p>然后，我们需要将其分解成一组更小的任务：</p><pre><code>//TODO: -g &quot;this&quot; &quot;is&quot; {&quot;this&quot;, is&quot;}\n//TODO: default value []\n//TODO: -d a throw exception\n</code></pre><p>好，现在让我们进入红/绿/重构循环：</p><p><video poster=\"https://static001.geekbang.org/resource/image/11/a4/1174e6bbc2ae29a45f580d02094c91a4.jpg\" preload=\"none\" controls=\"\"><source src=\"https://media001.geekbang.org/customerTrans/7e27d07d27d407ebcc195a0e78395f55/2384c461-17f91c6f1a0-0000-0000-01d-dbacd.mp4\" type=\"video/mp4\"><source src=\" https://media001.geekbang.org/a0248d57fda24f19aa3b31a6dace7445/0596114ae2274f60b50d1b0806f7e6c2-2a053dd26eedc027613a1602d301697f-sd.m3u8\" type=\"application/x-mpegURL\"></video></p><p>以及最后对于代码的清理与重构：</p><p><video poster=\"https://static001.geekbang.org/resource/image/11/a4/1174e6bbc2ae29a45f580d02094c91a4.jpg\" preload=\"none\" controls=\"\"><source src=\"https://media001.geekbang.org/customerTrans/7e27d07d27d407ebcc195a0e78395f55/117f17fc-17f91b646b4-0000-0000-01d-dbacd.mp4\" type=\"video/mp4\"><source src=\" https://media001.geekbang.org/77dbf3781d214d0badcfa0a69de273cd/ef43f78c0ed643ca9dc16e7e37e58a14-cd0991cfd3f15dac31752ad4ddb435d8-sd.m3u8\" type=\"application/x-mpegURL\"></video></p><h2>小结</h2><p>至此，我们使用TDD的方法完成了参数解析的功能。我觉得你至少应该感受到了TDD这三个特点。</p><p>第一是，将要完成的功能分解成一系列任务，再将任务转化为测试，以测试体现研发进度，将整个开发过程变成有序的流程，以减少无效劳动。</p><p>第二是，在修改代码的时候，随时执行测试以验证功能，及时发现错误，降低发现、定位错误的成本，降低修改错误的难度。</p><p>第三是，时刻感受到认知的提升，增强自信降低恐惧。在针对列表参数使用任务分解法时，你明显可以感觉到，我们无论是对需求的把握性，还是对最终实现的可预见性，都有了大幅度的提升。甚至，如果更进一步要求，我们可以较有把握地评估（误差在15%以内）实现列表参数解析需要多长时间。这就是我们认知提升的具体体现。</p><p>我将这样的工作状态称为“职业程序工作状态”：有序、可控、自信。</p><p>很多同学可能是第一次目睹TDD在实战中是如何工作的，心中肯定充满了疑问。而另一些有过TDD实践的同学，也可能会发现我所采用的方法和步骤与你的方式有很大不同，这也是很正常的。在接下来的六节课中，我将带你复盘整个流程，并对其中涉及到的技巧和方法进行深入讨论。下节课，让我们正式开始学习TDD吧！</p><h2>思考题</h2><p>请自己尝试使用TDD从头实现命令行参数解析的功能。</p><p>如果你在学习过程中还有什么问题或想法，欢迎加入<a href=\"https://jinshuju.net/f/zvOavT\">读者交流群</a>。最后，也欢迎把你学习这节课的代码与体会分享在留言区，我们下节课再见！</p>","neighbors":{"left":{"article_title":"03｜TDD演示（3）：按测试策略重组测试","id":494597},"right":{"article_title":"05｜TDD中的测试（1）：状态验证为什么是主要的使用方式？","id":496697}},"comments":[{"had_liked":false,"id":339125,"user_name":"🐑","can_delete":false,"product_type":"c1","uid":2189689,"ip_address":"","ucode":"DE34B3B14287D1","user_header":"https://static001.geekbang.org/account/avatar/00/21/69/79/b4132042.jpg","comment_is_top":true,"comment_ctime":1647933010,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100109401,"comment_content":"大家好～我是TDD这门课的编辑辰洋～\n\n🎐我来友情提示一下下～\n\n01-04是视频演示，好对TDD有个感性的认识。\n\n05-10是对演示的复盘，同时也会讲解TDD的相关知识点。比如测试的基本结构，TDD中的测试是啥～\n\n所以，如果你在01-04的操作卡壳了，可以从05开始学，看看5-10，这才是重点哇。看完再回头去看01-04～","like_count":4},{"had_liked":false,"id":339748,"user_name":"webmin","can_delete":false,"product_type":"c1","uid":1047014,"ip_address":"","ucode":"98B0CA882454E8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f9/e6/47742988.jpg","comment_is_top":false,"comment_ctime":1648353114,"is_pvip":true,"replies":[{"id":124176,"content":"good","user_name":"作者回复","user_name_real":"编辑","uid":2537798,"ctime":1648390742,"ip_address":"","comment_id":339748,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100109401,"comment_content":"通过观察最初列出的TODO List与最后完成的代码，感觉两者更像是接口定义与实现的关系，TODO List是列出了想要的功能定义，功能的实现是可以有多种的方式和不同的质量的，TDD是帮助我们从可用代码进化到优质代码的一种优秀的工程实践方法。\n到达目标（TODO List）的路很多条，在没有上帝视角的情况下，唯有通过实践才能得知在当前条件下哪个路径是最佳的，TDD可以帮助减小改进的成本，固化测试知识，每进行一次回归测试收益就增加一次。","like_count":5,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558587,"discussion_content":"good","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648390742,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":345747,"user_name":"hippie","can_delete":false,"product_type":"c1","uid":1443808,"ip_address":"","ucode":"E356AE881C4D8A","user_header":"https://static001.geekbang.org/account/avatar/00/16/07/e0/442a012b.jpg","comment_is_top":false,"comment_ctime":1652544886,"is_pvip":false,"replies":[{"id":126712,"content":"用自己熟悉的语言写了一遍哎！真棒👍","user_name":"编辑回复","user_name_real":"编辑","uid":2189689,"ctime":1654182324,"ip_address":"","comment_id":345747,"utype":2}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100109401,"comment_content":"个人 C# 版本代码最终示例：https:&#47;&#47;github.com&#47;hippieZhou&#47;geektime.tdd","like_count":1,"discussions":[{"author":{"id":2189689,"avatar":"https://static001.geekbang.org/account/avatar/00/21/69/79/b4132042.jpg","nickname":"🐑","note":"","ucode":"DE34B3B14287D1","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574623,"discussion_content":"用自己熟悉的语言写了一遍哎！真棒👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654182325,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339781,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1648376888,"is_pvip":false,"replies":[{"id":124174,"content":"good","user_name":"作者回复","user_name_real":"编辑","uid":2537798,"ctime":1648390718,"ip_address":"","comment_id":339781,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100109401,"comment_content":"感受到了极限编程的气息！\n学习笔记：http:&#47;&#47;wyyl1.com&#47;post&#47;19&#47;04&#47;","like_count":1,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558585,"discussion_content":"good","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1648390718,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":344409,"user_name":"davix","can_delete":false,"product_type":"c1","uid":1074465,"ip_address":"","ucode":"CBFB39BAD7938B","user_header":"https://static001.geekbang.org/account/avatar/00/10/65/21/101a7075.jpg","comment_is_top":false,"comment_ctime":1651534469,"is_pvip":false,"replies":[{"id":125721,"content":"a不是数字","user_name":"作者回复","user_name_real":"编辑","uid":2537798,"ctime":1651553180,"ip_address":"","comment_id":344409,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100109401,"comment_content":"&#47;&#47;TODO: -d a throw exception\n這個case的含義不能理解，請教老師","like_count":0,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":569780,"discussion_content":"a不是数字","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1651553180,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339894,"user_name":"Frode","can_delete":false,"product_type":"c1","uid":1503064,"ip_address":"","ucode":"B7B8DBF9980EA1","user_header":"https://static001.geekbang.org/account/avatar/00/16/ef/58/d05ec302.jpg","comment_is_top":false,"comment_ctime":1648452691,"is_pvip":false,"replies":[{"id":124276,"content":"nice","user_name":"作者回复","user_name_real":"编辑","uid":2537798,"ctime":1648513627,"ip_address":"","comment_id":339894,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100109401,"comment_content":"照葫芦画瓢写了一版本：https:&#47;&#47;gitee.com&#47;frode_success&#47;tdd.git\n这周的目标把本周更新的三节理论课学习完成后，再独立写一遍","like_count":0,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558862,"discussion_content":"nice","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648513627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338683,"user_name":"Leo","can_delete":false,"product_type":"c1","uid":1383148,"ip_address":"","ucode":"24401B70B6B40A","user_header":"https://static001.geekbang.org/account/avatar/00/15/1a/ec/4d272448.jpg","comment_is_top":false,"comment_ctime":1647660333,"is_pvip":false,"replies":[{"id":123812,"content":"非常赞～","user_name":"编辑回复","user_name_real":"编辑","uid":2189689,"ctime":1647678193,"ip_address":"","comment_id":338683,"utype":2}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100109401,"comment_content":"交作业,请多多指教 https:&#47;&#47;github.com&#47;JTR354&#47;tdd-practice","like_count":0,"discussions":[{"author":{"id":2189689,"avatar":"https://static001.geekbang.org/account/avatar/00/21/69/79/b4132042.jpg","nickname":"🐑","note":"","ucode":"DE34B3B14287D1","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557148,"discussion_content":"非常赞～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647678193,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339147,"user_name":"Frode","can_delete":false,"product_type":"c1","uid":1503064,"ip_address":"","ucode":"B7B8DBF9980EA1","user_header":"https://static001.geekbang.org/account/avatar/00/16/ef/58/d05ec302.jpg","comment_is_top":false,"comment_ctime":1647941031,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100109401,"comment_content":"我好像是个假的java程序员，为什么能这么6","like_count":23,"discussions":[{"author":{"id":1499091,"avatar":"https://static001.geekbang.org/account/avatar/00/16/df/d3/9385d57b.jpg","nickname":"邓斌","note":"","ucode":"3596FE165EC8CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":626641,"discussion_content":"自从用上tdd，测试都说我做的功能是免测的😏","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1693226822,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338513,"user_name":"阿崔cxr","can_delete":false,"product_type":"c1","uid":1177565,"ip_address":"","ucode":"26E2C7D96306A4","user_header":"https://static001.geekbang.org/account/avatar/00/11/f7/dd/c85f2065.jpg","comment_is_top":false,"comment_ctime":1647530930,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100109401,"comment_content":"文中几个点 都是当初学习 tdd 的时候 纠结半天的点\n\n比如\n\n1.  一开始从接口出发  那么这么大的步骤如何驱动出来\n2. 重构出来多个类之后，应该如何选择测试哪个  （是继续测试大的，或者测试小的功能）\n\n\n当初自己思考了很久，   这几篇文章就可以明白了。 这节约了太多时间了  [苦涩]","like_count":8},{"had_liked":false,"id":381148,"user_name":"🌊","can_delete":false,"product_type":"c1","uid":2635231,"ip_address":"上海","ucode":"135B1C2B752D2F","user_header":"https://static001.geekbang.org/account/avatar/00/28/35/df/da6ff1ec.jpg","comment_is_top":false,"comment_ctime":1694715052,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100109401,"comment_content":"高手之上的高高手","like_count":1},{"had_liked":false,"id":358708,"user_name":"Y","can_delete":false,"product_type":"c1","uid":1179432,"ip_address":"广东","ucode":"952AA9B2CD91CE","user_header":"https://static001.geekbang.org/account/avatar/00/11/ff/28/040f6f01.jpg","comment_is_top":false,"comment_ctime":1664609960,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100109401,"comment_content":"佩服，我怀疑自己是个假程序员😂","like_count":1},{"had_liked":false,"id":339613,"user_name":"Geek_wip5z8","can_delete":false,"product_type":"c1","uid":1114772,"ip_address":"","ucode":"2F075AC7E3847D","user_header":"https://static001.geekbang.org/account/avatar/00/11/02/94/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1648225929,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100109401,"comment_content":"完整跟着老师敲了一遍，学到了不少重构的skills，太赞了！！！","like_count":1},{"had_liked":false,"id":338731,"user_name":"sky","can_delete":false,"product_type":"c1","uid":1360390,"ip_address":"","ucode":"23525733AE2556","user_header":"https://static001.geekbang.org/account/avatar/00/14/c2/06/130c9de4.jpg","comment_is_top":false,"comment_ctime":1647689757,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100109401,"comment_content":"看到了差距，不仅仅是折服。","like_count":1},{"had_liked":false,"id":388816,"user_name":"王智","can_delete":false,"product_type":"c1","uid":1079657,"ip_address":"北京","ucode":"0335277F255F7A","user_header":"https://static001.geekbang.org/account/avatar/00/10/79/69/5960a2af.jpg","comment_is_top":false,"comment_ctime":1710929087,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100109401,"comment_content":"看到老师的代码，我发现原来我并不会写代码，路还很长，还得练习呀","like_count":0},{"had_liked":false,"id":378127,"user_name":"Geek_b6d0fd","can_delete":false,"product_type":"c1","uid":3663762,"ip_address":"四川","ucode":"E5A498B91BD9BF","user_header":"","comment_is_top":false,"comment_ctime":1689777674,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100109401,"comment_content":"我发现一个疑似bug的地方，我需要增加一个测试验证，明天试一下，当多字符串参数中存在以 - 开头的字符，例如 assertEquals(new String[]{&quot;-a&quot;, &quot;-b&quot;},  value);","like_count":0},{"had_liked":false,"id":374892,"user_name":"Sam Jiang","can_delete":false,"product_type":"c1","uid":3067009,"ip_address":"上海","ucode":"C9B0173A161175","user_header":"https://static001.geekbang.org/account/avatar/00/2e/cc/81/9514a363.jpg","comment_is_top":false,"comment_ctime":1684589037,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100109401,"comment_content":"这一段第一个if和第二个if的条件是不是不小心弄反了？\n```java\n\nList&lt;String&gt; values = valuesFrom(arguments, index);\nif (values.size() &gt; 1) throw new InsufficientArgumentException(option.value());\nif (values.size() &lt; 1) throw new TooManyArgumentsException\n(option.value());\n```","like_count":0},{"had_liked":false,"id":366062,"user_name":"乐观的QAQ","can_delete":false,"product_type":"c1","uid":1880530,"ip_address":"广东","ucode":"2B94C6308EDE61","user_header":"https://static001.geekbang.org/account/avatar/00/1c/b1/d2/515ef48b.jpg","comment_is_top":false,"comment_ctime":1673351859,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100109401,"comment_content":"完成了，但是总感觉有点懵，得好好消化消化，up","like_count":0},{"had_liked":false,"id":363168,"user_name":"渺小","can_delete":false,"product_type":"c1","uid":1048491,"ip_address":"北京","ucode":"8420F6EE9A7872","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ff/ab/04a3396e.jpg","comment_is_top":false,"comment_ctime":1669302865,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100109401,"comment_content":"感觉敲一遍都不行呀 大师","like_count":0},{"had_liked":false,"id":354773,"user_name":"leesper","can_delete":false,"product_type":"c1","uid":1351104,"ip_address":"贵州","ucode":"CC76320571BECA","user_header":"https://static001.geekbang.org/account/avatar/00/14/9d/c0/cb5341ec.jpg","comment_is_top":false,"comment_ctime":1660784030,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100109401,"comment_content":"请问老师是怎么有把握地评估实现命令行参数解析的时间的，能演示一下吗？","like_count":0},{"had_liked":false,"id":353779,"user_name":"Geek_fuuuuunny","can_delete":false,"product_type":"c1","uid":3095742,"ip_address":"浙江","ucode":"1DCC27BFE9D533","user_header":"https://static001.geekbang.org/account/avatar/00/2f/3c/be/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1659774973,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100109401,"comment_content":"课程的语音和里面的视频声音大小不一样，切换的时候需要不停的调节音量，期望以后能调整为一致的音量","like_count":0},{"had_liked":false,"id":341780,"user_name":"Geek_7c4953","can_delete":false,"product_type":"c1","uid":1809168,"ip_address":"","ucode":"359745D4725D4F","user_header":"","comment_is_top":false,"comment_ctime":1649831237,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100109401,"comment_content":"这节看到一半的时候，就是判断参数个数那两个if重构的时候，突然有了很多想法，感觉当前的代码结构不够舒服，很想做大刀阔斧的重构。\n感觉整个功能可以分成三个角色：\nValuesCollector，根据Option提供的参数名收集与之相关的所有原始参数，生成String[]形式的参数列表。同时也负责定义传参的语法，默认处理-p v也可以派生p=v之类；\nValuesParser&lt;T&gt;，将Collector收集的参数列表转换为T类型。同时负责检查参数是否可转换，包括数量、字符串合法性等。内置常见类型的Parser，可以扩展自定义Parser注册到map中。\nOptionsFactory&lt;T&gt;，将Parse完的参数组合构建成Options对象。\n\n根据这几节课的学习，我的落地思路是：\n1.先把比较简单的OptionsFactory抽离出来，只要inline一些代码再替换原来的实现就好。\n2.新增Collector测试，测试参数收集的正确性，再新建ValuesCollector，将原来获取参数列表的部分转移进去。\n3.重构Parser测试，只测试String[]-&gt;T的结果，然后将Parser的入参修改，只用接收参数列表，修改相关逻辑。\n4.最后回过头在Args重新组合他们，重新跑完整测试。","like_count":0},{"had_liked":false,"id":341087,"user_name":"奇小易","can_delete":false,"product_type":"c1","uid":1171151,"ip_address":"","ucode":"E06B4DFB5352BB","user_header":"https://static001.geekbang.org/account/avatar/00/11/de/cf/ef2e0501.jpg","comment_is_top":false,"comment_ctime":1649340636,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100109401,"comment_content":"2W2H笔记\n\nWhat\nQ: TDD的三个特点\nA:\n1、有序，通过将要完成的功能分解成任务列表，在将任务转换为测试，用测试来体现研发的进度，\n将开发过程变成了有序的流程。\n2、可控，在修改代码时，随时执行测试以验证功能，及时发现错误，降低发现错误、定位错误的成本，\n降低修改错误的难度。\n3、自信，随着逐步的开发，对于最开始的功能有了更加清晰的实现思路，并且也能更稳定、更快的实现它。","like_count":0},{"had_liked":false,"id":340539,"user_name":"Gojustforfun","can_delete":false,"product_type":"c1","uid":1187021,"ip_address":"","ucode":"7513A40F27344F","user_header":"https://static001.geekbang.org/account/avatar/00/12/1c/cd/8d552516.jpg","comment_is_top":false,"comment_ctime":1648891879,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100109401,"comment_content":"Go演示git提交记录:\nhttps:&#47;&#47;github.com&#47;longyue0521&#47;TDD-In-Go&#47;commits&#47;args\n\nCommits on Apr 2, 2022 ~ Commits on Apr 1, 2022 之间的内容与本篇文章基本对应.\n\nGo 1.18泛型特性刚刚推出正式版,还没法与Java相比.我也在摸索中前行,使用的可能也不地道,欢迎高手指教.\n\n采用baby step每步都有提交记录可以对比学习.\n\n如果觉得本项目对你有帮助,欢迎留言、Star","like_count":0},{"had_liked":false,"id":339967,"user_name":"萧","can_delete":false,"product_type":"c1","uid":1229143,"ip_address":"","ucode":"0C2239867AFF5F","user_header":"https://static001.geekbang.org/account/avatar/00/12/c1/57/27de274f.jpg","comment_is_top":false,"comment_ctime":1648516067,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100109401,"comment_content":"老师确实到了大师阶段，看着老师写代码是一种享受，老师现在写代码已经到了艺术品的境界了。\n向老师学习，希望也能到达这种写出艺术品的水平！","like_count":0},{"had_liked":false,"id":338493,"user_name":"邓志国","can_delete":false,"product_type":"c1","uid":1043844,"ip_address":"","ucode":"380AE67ED7B9D7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/84/0b8e2d25.jpg","comment_is_top":false,"comment_ctime":1647524098,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100109401,"comment_content":"学到不少手法，马上安排敲一遍","like_count":0},{"had_liked":false,"id":338375,"user_name":"腾挪","can_delete":false,"product_type":"c1","uid":1003853,"ip_address":"","ucode":"E80661F2235344","user_header":"https://static001.geekbang.org/account/avatar/00/0f/51/4d/0aceadde.jpg","comment_is_top":false,"comment_ctime":1647448293,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100109401,"comment_content":"👍","like_count":0}]}