{"id":126126,"title":"11 | 优雅地关闭还是粗暴地关闭 ?","content":"<p>你好，我是盛延敏，这里是网络编程实战第11讲，欢迎回来。</p><p>上一讲我们讲到了TCP的四次挥手，其中发起连接关闭的一方会有一段时间处于TIME_WAIT状态。那么究竟如何来发起连接关闭呢？这一讲我们就来讨论一下。</p><p>我们知道，一个TCP连接需要经过三次握手进入数据传输阶段，最后来到连接关闭阶段。在最后的连接关闭阶段，我们需要重点关注的是“半连接”状态。</p><p>因为TCP是双向的，这里说的方向，指的是数据流的写入-读出的方向。</p><p>比如客户端到服务器端的方向，指的是客户端通过套接字接口，向服务器端发送TCP报文；而服务器端到客户端方向则是另一个传输方向。在绝大多数情况下，TCP连接都是先关闭一个方向，此时另外一个方向还是可以正常进行数据传输。</p><p>举个例子，客户端主动发起连接的中断，将自己到服务器端的数据流方向关闭，此时，客户端不再往服务器端写入数据，服务器端读完客户端数据后就不会再有新的报文到达。但这并不意味着，TCP连接已经完全关闭，很有可能的是，服务器端正在对客户端的最后报文进行处理，比如去访问数据库，存入一些数据；或者是计算出某个客户端需要的值，当完成这些操作之后，服务器端把结果通过套接字写给客户端，我们说这个套接字的状态此时是“半关闭”的。最后，服务器端才有条不紊地关闭剩下的半个连接，结束这一段TCP连接的使命。</p><!-- [[[read_end]]] --><p>当然，我这里描述的是服务器端“优雅”地关闭了连接。如果服务器端处理不好，就会导致最后的关闭过程是“粗暴”的，达不到我们上面描述的“优雅”关闭的目标，形成的后果，很可能是服务器端处理完的信息没办法正常传送给客户端，破坏了用户侧的使用场景。</p><p>接下来我们就来看看关闭连接时，都有哪些方式呢？</p><h2>close函数</h2><p>首先，我们来看最常见的close函数：</p><pre><code>int close(int sockfd)\n</code></pre><p>这个函数很简单，对已连接的套接字执行close操作就可以，若成功则为0，若出错则为-1。</p><p>这个函数会对套接字引用计数减一，一旦发现套接字引用计数到0，就会对套接字进行彻底释放，并且会关闭<strong>TCP两个方向的数据流</strong>。</p><p>套接字引用计数是什么意思呢？因为套接字可以被多个进程共享，你可以理解为我们给每个套接字都设置了一个积分，如果我们通过fork的方式产生子进程，套接字就会积分+1， 如果我们调用一次close函数，套接字积分就会-1。这就是套接字引用计数的含义。</p><p>close函数具体是如何关闭两个方向的数据流呢？</p><p>在输入方向，系统内核会将该套接字设置为不可读，任何读操作都会返回异常。</p><p>在输出方向，系统内核尝试将发送缓冲区的数据发送给对端，并最后向对端发送一个FIN报文，接下来如果再对该套接字进行写操作会返回异常。</p><p>如果对端没有检测到套接字已关闭，还继续发送报文，就会收到一个RST报文，告诉对端：“Hi, 我已经关闭了，别再给我发数据了。”</p><p>我们会发现，close函数并不能帮助我们关闭连接的一个方向，那么如何在需要的时候关闭一个方向呢？幸运的是，设计TCP协议的人帮我们想好了解决方案，这就是shutdown函数。</p><h2>shutdown函数</h2><p>shutdown函数的原型是这样的：</p><pre><code>int shutdown(int sockfd, int howto)\n</code></pre><p>对已连接的套接字执行shutdown操作，若成功则为0，若出错则为-1。</p><p>howto是这个函数的设置选项，它的设置有三个主要选项：</p><ul>\n<li>SHUT_RD(0)：关闭连接的“读”这个方向，对该套接字进行读操作直接返回EOF。从数据角度来看，套接字上接收缓冲区已有的数据将被丢弃，如果再有新的数据流到达，会对数据进行ACK，然后悄悄地丢弃。也就是说，对端还是会接收到ACK，在这种情况下根本不知道数据已经被丢弃了。</li>\n<li>SHUT_WR(1)：关闭连接的“写”这个方向，这就是常被称为“半关闭”的连接。此时，不管套接字引用计数的值是多少，都会直接关闭连接的写方向。套接字上发送缓冲区已有的数据将被立即发送出去，并发送一个FIN报文给对端。应用程序如果对该套接字进行写操作会报错。</li>\n<li>SHUT_RDWR(2)：相当于SHUT_RD和SHUT_WR操作各一次，关闭套接字的读和写两个方向。</li>\n</ul><p>讲到这里，不知道你是不是有和我当初一样的困惑，使用SHUT_RDWR来调用shutdown不是和close基本一样吗，都是关闭连接的读和写两个方向。</p><p>其实，这两个还是有差别的。</p><p>第一个差别：close会关闭连接，并释放所有连接对应的资源，而shutdown并不会释放掉套接字和所有的资源。</p><p>第二个差别：close存在引用计数的概念，并不一定导致该套接字不可用；shutdown则不管引用计数，直接使得该套接字不可用，如果有别的进程企图使用该套接字，将会受到影响。</p><p>第三个差别：close的引用计数导致不一定会发出FIN结束报文，而shutdown则总是会发出FIN结束报文，这在我们打算关闭连接通知对端的时候，是非常重要的。</p><h2>体会close和shutdown的差别</h2><p>下面，我们通过构建一组客户端和服务器程序，来进行close和shutdown的实验。</p><p>客户端程序，从标准输入不断接收用户输入，把输入的字符串通过套接字发送给服务器端，同时，将服务器端的应答显示到标准输出上。</p><p>如果用户输入了“close”，则会调用close函数关闭连接，休眠一段时间，等待服务器端处理后退出；如果用户输入了“shutdown”，调用shutdown函数关闭连接的写方向，注意我们不会直接退出，而是会继续等待服务器端的应答，直到服务器端完成自己的操作，在另一个方向上完成关闭。</p><p>在这里，我们会第一次接触到select多路复用，这里不展开讲，你只需要记住，使用select使得我们可以同时完成对连接套接字和标准输入两个I/O对象的处理。</p><pre><code># include &quot;lib/common.h&quot;\n# define    MAXLINE     4096\n\nint main(int argc, char **argv) {\n    if (argc != 2) {\n        error(1, 0, &quot;usage: graceclient &lt;IPaddress&gt;&quot;);\n    }\n    \n    int socket_fd;\n    socket_fd = socket(AF_INET, SOCK_STREAM, 0);\n\n    struct sockaddr_in server_addr;\n    bzero(&amp;server_addr, sizeof(server_addr));\n    server_addr.sin_family = AF_INET;\n    server_addr.sin_port = htons(SERV_PORT);\n    inet_pton(AF_INET, argv[1], &amp;server_addr.sin_addr);\n\n    socklen_t server_len = sizeof(server_addr);\n    int connect_rt = connect(socket_fd, (struct sockaddr *) &amp;server_addr, server_len);\n    if (connect_rt &lt; 0) {\n        error(1, errno, &quot;connect failed &quot;);\n    }\n\n    char send_line[MAXLINE], recv_line[MAXLINE + 1];\n    int n;\n\n    fd_set readmask;\n    fd_set allreads;\n\n    FD_ZERO(&amp;allreads);\n    FD_SET(0, &amp;allreads);\n    FD_SET(socket_fd, &amp;allreads);\n    for (;;) {\n        readmask = allreads;\n        int rc = select(socket_fd + 1, &amp;readmask, NULL, NULL, NULL);\n        if (rc &lt;= 0)\n            error(1, errno, &quot;select failed&quot;);\n        if (FD_ISSET(socket_fd, &amp;readmask)) {\n            n = read(socket_fd, recv_line, MAXLINE);\n            if (n &lt; 0) {\n                error(1, errno, &quot;read error&quot;);\n            } else if (n == 0) {\n                error(1, 0, &quot;server terminated \\n&quot;);\n            }\n            recv_line[n] = 0;\n            fputs(recv_line, stdout);\n            fputs(&quot;\\n&quot;, stdout);\n        }\n        if (FD_ISSET(0, &amp;readmask)) {\n            if (fgets(send_line, MAXLINE, stdin) != NULL) {\n                if (strncmp(send_line, &quot;shutdown&quot;, 8) == 0) {\n                    FD_CLR(0, &amp;allreads);\n                    if (shutdown(socket_fd, 1)) {\n                        error(1, errno, &quot;shutdown failed&quot;);\n                    }\n                } else if (strncmp(send_line, &quot;close&quot;, 5) == 0) {\n                    FD_CLR(0, &amp;allreads);\n                    if (close(socket_fd)) {\n                        error(1, errno, &quot;close failed&quot;);\n                    }\n                    sleep(6);\n                    exit(0);\n                } else {\n                    int i = strlen(send_line);\n                    if (send_line[i - 1] == '\\n') {\n                        send_line[i - 1] = 0;\n                    }\n\n                    printf(&quot;now sending %s\\n&quot;, send_line);\n                    size_t rt = write(socket_fd, send_line, strlen(send_line));\n                    if (rt &lt; 0) {\n                        error(1, errno, &quot;write failed &quot;);\n                    }\n                    printf(&quot;send bytes: %zu \\n&quot;, rt);\n                }\n\n            }\n        }\n\n    }\n\n}\n</code></pre><p>我对这个程序的细节展开解释一下：</p><p>第一部分是套接字的创建和select初始化工作：</p><ul>\n<li>9-10行创建了一个TCP套接字；</li>\n<li>12-16行设置了连接的目标服务器IPv4地址，绑定到了指定的IP和端口；</li>\n<li>18-22行使用创建的套接字，向目标IPv4地址发起连接请求；</li>\n<li>30-32行为使用select做准备，初始化描述字集合，这部分我会在后面详细解释，这里就不再深入。</li>\n</ul><p>第二部分是程序的主体部分，从33-80行， 使用select多路复用观测在连接套接字和标准输入上的I/O事件，其中：</p><ul>\n<li>38-48行：当连接套接字上有数据可读，将数据读入到程序缓冲区中。40-41行，如果有异常则报错退出；42-43行如果读到服务器端发送的EOF则正常退出。</li>\n<li>49-77行：当标准输入上有数据可读，读入后进行判断。如果输入的是“shutdown”，则关闭标准输入的I/O事件感知，并调用shutdown函数关闭写方向；如果输入的是“close”，则调用close函数关闭连接；64-74行处理正常的输入，将回车符截掉，调用write函数，通过套接字将数据发送给服务器端。</li>\n</ul><p>服务器端程序稍微简单一点，连接建立之后，打印出接收的字节，并重新格式化后，发送给客户端。</p><p>服务器端程序有一点需要注意，那就是对SIGPIPE这个信号的处理。后面我会结合程序的结果展开说明。</p><pre><code>#include &quot;lib/common.h&quot;\n\nstatic int count;\n\nstatic void sig_int(int signo) {\n    printf(&quot;\\nreceived %d datagrams\\n&quot;, count);\n    exit(0);\n}\n\nint main(int argc, char **argv) {\n    int listenfd;\n    listenfd = socket(AF_INET, SOCK_STREAM, 0);\n\n    struct sockaddr_in server_addr;\n    bzero(&amp;server_addr, sizeof(server_addr));\n    server_addr.sin_family = AF_INET;\n    server_addr.sin_addr.s_addr = htonl(INADDR_ANY);\n    server_addr.sin_port = htons(SERV_PORT);\n\n    int rt1 = bind(listenfd, (struct sockaddr *) &amp;server_addr, sizeof(server_addr));\n    if (rt1 &lt; 0) {\n        error(1, errno, &quot;bind failed &quot;);\n    }\n\n    int rt2 = listen(listenfd, LISTENQ);\n    if (rt2 &lt; 0) {\n        error(1, errno, &quot;listen failed &quot;);\n    }\n\n    signal(SIGINT, sig_int);\n    signal(SIGPIPE, SIG_IGN);\n\n    int connfd;\n    struct sockaddr_in client_addr;\n    socklen_t client_len = sizeof(client_addr);\n\n    if ((connfd = accept(listenfd, (struct sockaddr *) &amp;client_addr, &amp;client_len)) &lt; 0) {\n        error(1, errno, &quot;bind failed &quot;);\n    }\n\n    char message[MAXLINE];\n    count = 0;\n\n    for (;;) {\n        int n = read(connfd, message, MAXLINE);\n        if (n &lt; 0) {\n            error(1, errno, &quot;error read&quot;);\n        } else if (n == 0) {\n            error(1, 0, &quot;client closed \\n&quot;);\n        }\n        message[n] = 0;\n        printf(&quot;received %d bytes: %s\\n&quot;, n, message);\n        count++;\n\n        char send_line[MAXLINE];\n        sprintf(send_line, &quot;Hi, %s&quot;, message);\n\n        sleep(5);\n\n        int write_nc = send(connfd, send_line, strlen(send_line), 0);\n        printf(&quot;send bytes: %zu \\n&quot;, write_nc);\n        if (write_nc &lt; 0) {\n            error(1, errno, &quot;error write&quot;);\n        }\n    }\n}\n</code></pre><p>服务器端程序的细节也展开解释一下：</p><p>第一部分是套接字和连接创建过程：</p><ul>\n<li>11-12行创建了一个TCP套接字；</li>\n<li>14-18行设置了本地服务器IPv4地址，绑定到了ANY地址和指定的端口；</li>\n<li>20-40行使用创建的套接字，依次执行bind、listen和accept操作，完成连接建立。</li>\n</ul><p>第二部分是程序的主体，通过read函数获取客户端传送来的数据流，并回送给客户端：</p><ul>\n<li>51-52行显示收到的字符串，在56行对原字符串进行重新格式化，之后调用send函数将数据发送给客户端。注意，在发送之前，让服务器端程序休眠了5秒，以模拟服务器端处理的时间。</li>\n</ul><p>我们启动服务器，再启动客户端，依次在标准输入上输入data1、data2和close，观察一段时间后我们看到：</p><pre><code>$./graceclient 127.0.0.1\ndata1\nnow sending data1\nsend bytes:5\ndata2\nnow sending data2\nsend bytes:5\nclose\n</code></pre><pre><code>$./graceserver\nreceived 5 bytes: data1\nsend bytes: 9\nreceived 5 bytes: data2\nsend bytes: 9\nclient closed\n</code></pre><p>客户端依次发送了data1和data2，服务器端也正常接收到data1和data2。在客户端close掉整个连接之后，服务器端接收到SIGPIPE信号，直接退出。客户端并没有收到服务器端的应答数据。</p><p>我在下面放了一张图，这张图详细解释了客户端和服务器端交互的时序图。因为客户端调用close函数关闭了整个连接，当服务器端发送的“Hi, data1”分组到底时，客户端给回送一个RST分组；服务器端再次尝试发送“Hi, data2”第二个应答分组时，系统内核通知SIGPIPE信号。这是因为，在RST的套接字进行写操作，会直接触发SIGPIPE信号。</p><p>这回知道你的程序莫名其妙终止的原因了吧。</p><p><img src=\"https://static001.geekbang.org/resource/image/f2/9a/f283b804c7e33e25a900fedc8c36f09a.png?wh=4152*3256\" alt=\"\"><br>\n我们可以像这样注册一个信号处理函数，对SIGPIPE信号进行处理，避免程序莫名退出：</p><pre><code>static void sig_pipe(int signo) {\n    printf(&quot;\\nreceived %d datagrams\\n&quot;, count);\n    exit(0);\n}\nsignal(SIGINT, sig_pipe);\n</code></pre><p>接下来，再次启动服务器，再启动客户端，依次在标准输入上输入data1、data2和shutdown函数，观察一段时间后我们看到：</p><pre><code>$./graceclient 127.0.0.1\ndata1\nnow sending data1\nsend bytes:5\ndata2\nnow sending data2\nsend bytes:5\nshutdown\nHi, data1\nHi，data2\nserver terminated\n</code></pre><pre><code>$./graceserver\nreceived 5 bytes: data1\nsend bytes: 9\nreceived 5 bytes: data2\nsend bytes: 9\nclient closed\n</code></pre><p>和前面的结果不同，服务器端输出了data1、data2；客户端也输出了“Hi,data1”和“Hi,data2”，客户端和服务器端各自完成了自己的工作后，正常退出。</p><p>我们再看下客户端和服务器端交互的时序图。因为客户端调用shutdown函数只是关闭连接的一个方向，服务器端到客户端的这个方向还可以继续进行数据的发送和接收，所以“Hi,data1”和“Hi,data2”都可以正常传送；当服务器端读到EOF时，立即向客户端发送了FIN报文，客户端在read函数中感知了EOF，也进行了正常退出。</p><h2>总结</h2><p>在这一讲中，我们讲述了close函数关闭连接的方法，使用close函数关闭连接有两个需要明确的地方。</p><ul>\n<li>close函数只是把套接字引用计数减1，未必会立即关闭连接；</li>\n<li>close函数如果在套接字引用计数达到0时，立即终止读和写两个方向的数据传送。</li>\n</ul><p>基于这两点，在期望关闭连接其中一个方向时，应该使用shutdown函数。</p><h2>思考题</h2><p>和往常一样，给你留两道思考题。</p><p>第一道题，你可以看到在今天的服务器端程序中，直接调用<code>exit(0)</code>完成了FIN报文的发送，这是为什么呢？为什么不调用close函数或shutdown函数呢？</p><p>第二道题关于信号量处理，今天的程序中，使用的是<code>SIG_IGN</code>默认处理，你知道默认处理和自定义函数处理的区别吗？不妨查查资料，了解一下。</p><p>欢迎你在评论区写下你的思考，也欢迎把这篇文章分享给你的朋友或者同事，一起来交流。</p>","comments":[{"had_liked":false,"id":130725,"user_name":"卫江","can_delete":false,"product_type":"c1","uid":1101226,"ip_address":"","ucode":"DE2F7A6916F1A9","user_header":"https://static001.geekbang.org/account/avatar/00/10/cd/aa/33d48789.jpg","comment_is_top":false,"comment_ctime":1567519797,"is_pvip":false,"replies":[{"id":"50836","content":"赞赞赞。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1568195975,"ip_address":"","comment_id":130725,"utype":1}],"discussion_count":7,"race_medal":0,"score":"482603856949","product_id":100032701,"comment_content":"问题一，为什么调用exit以后不需要调用close，shutdown？因为在调用exit之后进程会退出，而进程相关的所有的资源，文件，内存，信号等内核分配的资源都会被释放，在linux中，一切皆文件，本身socket就是一种文件类型，内核会为每一个打开的文件创建file结构并维护指向改结构的引用计数，每一个进程结构中都会维护本进程打开的文件数组，数组下标就是fd，内容就指向上面的file结构，close本身就可以用来操作所有的文件，做的事就是，删除本进程打开的文件数组中指定的fd项，并把指向的file结构中的引用计数减一，等引用计数为0的时候，就会调用内部包含的文件操作close，针对于socket，它内部的实现应该就是调用shutdown，只是参数是关闭读写端，从而比较粗暴的关闭连接。<br>第二个问题，信号的处理有三种，默认处理，忽略处理，自定义处理。默认处理就是采用系统自定义的操作，大部分信号的默认处理都是杀死进程，忽略处理就是当做什么都没有发生。","like_count":113,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466092,"discussion_content":"赞赞赞。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568195975,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1248584,"avatar":"https://static001.geekbang.org/account/avatar/00/13/0d/48/36d70848.jpg","nickname":"谭龙飞","note":"","ucode":"89B71FEBB5E36D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":173305,"discussion_content":"这个内容对我去理解select和epoll非常重要，之前在看他们的区别但是总一知半解，看到这个评论白恍然大悟得感觉，非常感谢，还是要多看看评论区！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581845698,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1310798,"avatar":"https://static001.geekbang.org/account/avatar/00/14/00/4e/be2b206b.jpg","nickname":"吴小智","note":"","ucode":"C7C9F58B5C9F7B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":38535,"discussion_content":"老哥强啊，学习了，感谢分享。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571800392,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1111870,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK2Az5uTh9ZGVA7yQCj1BXtXuicPRkvJicA97AoN9xX3bnPcUYglTMXJeZeoVbPQeJA7ICvQhR3KQ0w/132","nickname":"日不落帝国","note":"","ucode":"6A11ABBD8AC438","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":25534,"discussion_content":"学习了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570536961,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1635879,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ehynTrcwwYpicw3FxYJYF0zH1Ric2Trtf3CXpHAiaD85KeR0Vh08UCicwXjZDxogOeXjmEZEfibxImkaUUWRJjKyfgA/132","nickname":"Geek_ca852b","note":"","ucode":"A7BC016F082ED7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":12230,"discussion_content":"大哥，这些细节在哪里可以取经啊？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568506326,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1101226,"avatar":"https://static001.geekbang.org/account/avatar/00/10/cd/aa/33d48789.jpg","nickname":"卫江","note":"","ucode":"DE2F7A6916F1A9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1635879,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ehynTrcwwYpicw3FxYJYF0zH1Ric2Trtf3CXpHAiaD85KeR0Vh08UCicwXjZDxogOeXjmEZEfibxImkaUUWRJjKyfgA/132","nickname":"Geek_ca852b","note":"","ucode":"A7BC016F082ED7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":12347,"discussion_content":"我是从《趣谈操作系统》专栏学到的，里面有关于操作系统的各个方面，从操作系统启动，到进程线程创建，调度，内存管理，文件系统实现，设备文件，ipc以及网络通信，虚拟化到容器化。","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1568524500,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":12230,"ip_address":""},"score":12347,"extra":""},{"author":{"id":1181650,"avatar":"https://static001.geekbang.org/account/avatar/00/12/07/d2/0d7ee298.jpg","nickname":"惘 闻","note":"","ucode":"C5909F034BF072","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1101226,"avatar":"https://static001.geekbang.org/account/avatar/00/10/cd/aa/33d48789.jpg","nickname":"卫江","note":"","ucode":"DE2F7A6916F1A9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304814,"discussion_content":"刘超老师那个吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599666495,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":12347,"ip_address":""},"score":304814,"extra":""}]}]},{"had_liked":false,"id":130504,"user_name":"zhchnchn","can_delete":false,"product_type":"c1","uid":1110218,"ip_address":"","ucode":"2219E40ED134D4","user_header":"https://static001.geekbang.org/account/avatar/00/10/f0/ca/4560f06b.jpg","comment_is_top":false,"comment_ctime":1567474491,"is_pvip":false,"replies":[{"id":"50804","content":"这是控制报文，是脱离应用程序掌握之外的控制协议部分，层这个层面来说，他们不被认为是&quot;应用层数据&quot;。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1568194092,"ip_address":"","comment_id":130504,"utype":1}],"discussion_count":2,"race_medal":0,"score":"117531591483","product_id":100032701,"comment_content":"请问老师一个问题，像FIN，ACK等报文并不属于“数据”是么？比如对于4次挥手中，发起关闭的客户端在发送FIN报文后，表明客户端不再发送“数据”了（可以读数据），之后在服务端也发送FIN报文后，客户端还是会发送一个ACK报文给服务端。这里的最后一个ACK报文，并不属于“数据”是吗？T或者CP中这些所有的控制报文包都不属于所谓的“数据”吗？","like_count":28,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465982,"discussion_content":"这是控制报文，是脱离应用程序掌握之外的控制协议部分，层这个层面来说，他们不被认为是&amp;quot;应用层数据&amp;quot;。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1568194092,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2776006,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er5SNsSoiaZw4Qzd2ctH4vtibHQordcLrYsX43oFZFloRTId0op617mcGlrvGx33U8ic2LTgdicoEFPvQ/132","nickname":"Frankey","note":"","ucode":"2F09BC2500C9E7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":568512,"discussion_content":"这个问题是个好问题\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651153971,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":255126,"user_name":"Guchen","can_delete":false,"product_type":"c1","uid":2224386,"ip_address":"","ucode":"9BD34F616F167A","user_header":"https://static001.geekbang.org/account/avatar/00/21/f1/02/96082034.jpg","comment_is_top":false,"comment_ctime":1603270470,"is_pvip":false,"replies":[{"id":"95521","content":"正解~","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1606046890,"ip_address":"","comment_id":255126,"utype":1}],"discussion_count":4,"race_medal":0,"score":"66027779910","product_id":100032701,"comment_content":"老师我这个理解有问题么？<br>客户端调用close并发送了FIN包，服务端接收到FIN包会将连接状态设置为对端已关闭写端，服务端在向客户端回送FIN包之前可以向对端发送数据也不可不发送，实例程序就是发送了数据，第一次发送数据对端会返回个RST包（因为客户端close已经关闭了读端），服务端调用read会返回-1，设置errno，此时服务端了解到客户端也不会再读数据了，如果服务端还是强行再次向客户端发送数据包，调用write后，协议栈会发现用户进程向一个没有读用户的管道做写操作，那么会触发SIGPIPE信号执行默认操作关闭用户进程。","like_count":16,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507615,"discussion_content":"正解~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606046890,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2916751,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/U5vvFI4v3jibf6uHbOFtkm1sBaXeLZnJicCOia0KW5KNb2KK06we5gkzJE7RiawfDzMAicHIpINUrTYfjrdZweQsuUA/132","nickname":"Geek_1cd0c8","note":"","ucode":"1F0C3F5E03C420","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576321,"discussion_content":"调试过程中 如何去观察客户端和服务器的状态呢？比如客户端调用close后发送fin包给服务器，服务端接收到FIN包会将连接状态设置为对端已关闭写端 ，服务器此时的特征表现是什么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655430753,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2007786,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/a2/ea/8f913dfa.jpg","nickname":"吃猫的鱼","note":"","ucode":"DC15372C47A0CD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386902,"discussion_content":"牛，讲清楚了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627887971,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1180563,"avatar":"https://static001.geekbang.org/account/avatar/00/12/03/93/e869d1d0.jpg","nickname":"石头","note":"","ucode":"F9913F57AA0EB1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375478,"discussion_content":"感谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621678805,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166913,"user_name":"skye","can_delete":false,"product_type":"c1","uid":1027840,"ip_address":"","ucode":"C55C9F52C78A00","user_header":"https://static001.geekbang.org/account/avatar/00/0f/af/00/9b49f42b.jpg","comment_is_top":false,"comment_ctime":1577629752,"is_pvip":false,"replies":[{"id":"65482","content":"你想彻底关闭双向连接的时候用close，你想只关闭自己这端到对端的连接时用shutdown。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1578213986,"ip_address":"","comment_id":166913,"utype":1}],"discussion_count":1,"race_medal":0,"score":"44527302712","product_id":100032701,"comment_content":"那请问老师,什么情况下用close，什么情况下用shutdown？谢谢！","like_count":10,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479674,"discussion_content":"你想彻底关闭双向连接的时候用close，你想只关闭自己这端到对端的连接时用shutdown。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578213986,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":128587,"user_name":"传说中的成大大","can_delete":false,"product_type":"c1","uid":1236766,"ip_address":"","ucode":"103543D6E706BF","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","comment_is_top":false,"comment_ctime":1566909239,"is_pvip":false,"replies":[{"id":"47918","content":"读到FIN包在read看来就是返回0.","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1567004832,"ip_address":"","comment_id":128587,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35926647607","product_id":100032701,"comment_content":"然后又引申了fin包和read返回0是怎样的关系呢？","like_count":8,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465008,"discussion_content":"读到FIN包在read看来就是返回0.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567004832,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":128563,"user_name":"W.jyao","can_delete":false,"product_type":"c1","uid":1422582,"ip_address":"","ucode":"C57B3A78B6A795","user_header":"https://static001.geekbang.org/account/avatar/00/15/b4/f6/735673f7.jpg","comment_is_top":false,"comment_ctime":1566904573,"is_pvip":false,"replies":[{"id":"47922","content":"嗯，你试一下改改是不是可以的，我应该是写错了。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1567005101,"ip_address":"","comment_id":128563,"utype":1}],"discussion_count":3,"race_medal":0,"score":"35926642941","product_id":100032701,"comment_content":"SUG_IGN是忽略信号吧，老师是不是代码有问题啊，SIG_DFL才是默认处理，示例中那样写不是应该是忽略了SIGPIPE信号么。","like_count":9,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464998,"discussion_content":"嗯，你试一下改改是不是可以的，我应该是写错了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567005101,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2450040,"avatar":"","nickname":"王蓬勃","note":"","ucode":"DDF4CCE9728DCF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":409686,"discussion_content":"++1 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635491153,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1398125,"avatar":"https://static001.geekbang.org/account/avatar/00/15/55/6d/f18510a7.jpg","nickname":"若明子","note":"","ucode":"5E02B1CC342303","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6474,"discussion_content":"对啊，为啥要忽略sigpipe，不是应该处理下才能显示这个信号的作用吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566915995,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185780,"user_name":"忆水寒","can_delete":false,"product_type":"c1","uid":1147453,"ip_address":"","ucode":"E3F86BD8AA8903","user_header":"https://static001.geekbang.org/account/avatar/00/11/82/3d/356fc3d6.jpg","comment_is_top":false,"comment_ctime":1583678279,"is_pvip":false,"replies":[{"id":"72378","content":"学习了，后面应该会讲到SO_LINGER。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1584174128,"ip_address":"","comment_id":185780,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27353482055","product_id":100032701,"comment_content":"close关闭比较粗暴，如果想要优雅的关闭，等处理完数据再关闭可以使用shutdown设置参数。<br>实际上在tcp协议中有个参数so_linger也可以设置比较优雅（规定时间处理缓冲区的字节，超时则清空缓冲区）的关闭tcp的socket。","like_count":6,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486498,"discussion_content":"学习了，后面应该会讲到SO_LINGER。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584174128,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":128581,"user_name":"传说中的成大大","can_delete":false,"product_type":"c1","uid":1236766,"ip_address":"","ucode":"103543D6E706BF","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","comment_is_top":false,"comment_ctime":1566908443,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23041744923","product_id":100032701,"comment_content":"思考题<br>1. 调用exit(0) 是系统内核自动回收了一切资源，关闭了一切相关的文件<br>2. SIG_IGN是忽略该信号 如果是采用SIG_DEF默认处理方式则是由系统进行一些处理,而自定义函数的话 是捕捉到该信号并进入回调 自己处理相关事宜","like_count":5},{"had_liked":false,"id":128566,"user_name":"W.jyao","can_delete":false,"product_type":"c1","uid":1422582,"ip_address":"","ucode":"C57B3A78B6A795","user_header":"https://static001.geekbang.org/account/avatar/00/15/b4/f6/735673f7.jpg","comment_is_top":false,"comment_ctime":1566904923,"is_pvip":false,"replies":[{"id":"47921","content":"不会立即释放，最终还是会被系统内核回收的。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1567004897,"ip_address":"","comment_id":128566,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18746774107","product_id":100032701,"comment_content":"老师，调用shutdown不会释放套接字资源，那么应该怎么处理呢","like_count":4,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464999,"discussion_content":"不会立即释放，最终还是会被系统内核回收的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567004897,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130098,"user_name":"一周思进","can_delete":false,"product_type":"c1","uid":1032125,"ip_address":"","ucode":"00BE5402479B16","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bf/bd/0c40979f.jpg","comment_is_top":false,"comment_ctime":1567386279,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14452288167","product_id":100032701,"comment_content":"根据所学内容解决了服务器退出问题<br>https:&#47;&#47;mp.weixin.qq.com&#47;s&#47;n2rCkJtPnMrxOPsPcwR89w","like_count":3},{"had_liked":false,"id":128943,"user_name":"传说中的成大大","can_delete":false,"product_type":"c1","uid":1236766,"ip_address":"","ucode":"103543D6E706BF","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","comment_is_top":false,"comment_ctime":1566990267,"is_pvip":false,"replies":[{"id":"47910","content":"我理解还是内核会回收的，只不过是等待双向连接都关闭掉才会回收。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1567004356,"ip_address":"","comment_id":128943,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14451892155","product_id":100032701,"comment_content":"今天我也写了代码测试上面的例子同时也想起了网上一句话 close是关闭掉socket 并且回收了socket相关资源,而shutdown一般只是关闭连接并不会关闭socket 这也是为啥调用close服务器端在进行写数据的时候会触发sigpipe信号,而shutdown却不会触发,那么调用shutdown关闭的套接字怎么回收呢？是由内核回收还是？ 服务器端和客户端又是怎样回收的呢？","like_count":3,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465186,"discussion_content":"我理解还是内核会回收的，只不过是等待双向连接都关闭掉才会回收。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567004356,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1014526,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7a/fe/abb7bfe3.jpg","nickname":"胡波 allenhu","note":"","ucode":"33C6217E9A385C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6707,"discussion_content":"本课的例子中, client如果调用shutdown, 当收到server的FIN时, 会调用error(1, 0, &#34;server terminated&#34;), 这个error调用就会回收socket吧?\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567063871,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":210722,"user_name":"Sun","can_delete":false,"product_type":"c1","uid":1233977,"ip_address":"","ucode":"84C079D1F3B5EE","user_header":"https://static001.geekbang.org/account/avatar/00/12/d4/39/a980c04d.jpg","comment_is_top":false,"comment_ctime":1587815335,"is_pvip":false,"replies":[{"id":"79182","content":"有顺序的，系统会在所有待发送的有效数据之后，插入一个EOF标识发送给对端，对端也是在处理完所有发送给自己的有效数据之后，才会读到EOF标识。换句话说，这是有一个过程的，并不是瞬间就达到的。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1588497887,"ip_address":"","comment_id":210722,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10177749927","product_id":100032701,"comment_content":"close 关闭两个方向的数据流时。输入方向，系统内核会将该套接字设置为不可读，任何读操作都会返回异常。在输出方向，系统内核尝试将发送缓冲区的数据发送给对端，那对端已经不可读了，这些数据该如何处理？","like_count":2,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493094,"discussion_content":"有顺序的，系统会在所有待发送的有效数据之后，插入一个EOF标识发送给对端，对端也是在处理完所有发送给自己的有效数据之后，才会读到EOF标识。换句话说，这是有一个过程的，并不是瞬间就达到的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588497887,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1002005,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/15/106eaaa8.jpg","nickname":"stackWarn","note":"","ucode":"89672E452DEBA5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293113,"discussion_content":"对方为什么不可读了？这两个方向都是客户端的，是写和读方向。不是指的客户端和服务端","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595433818,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":206238,"user_name":"雷刚","can_delete":false,"product_type":"c1","uid":1655725,"ip_address":"","ucode":"115FE2BE1AAB61","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/pTD8nS0SsORKiaRD3wB0NK9Bpd0wFnPWtYLPfBRBhvZ68iaJErMlM2NNSeEibwQfY7GReILSIYZXfT9o8iaicibcyw3g/132","comment_is_top":false,"comment_ctime":1586827542,"is_pvip":false,"replies":[{"id":"77708","content":"我记得Java这么做是有一个兼容性的原因，为了保持windows和linux跨平台的兼容性的。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1587302847,"ip_address":"","comment_id":206238,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10176762134","product_id":100032701,"comment_content":"老师在文中提到的一个问题：close 函数只是把套接字引用计数减 1，未必会立即关闭连接。有可能进程 A 在关闭 socket，而进程 B 却仍然在进行 socket I&#47;O 操作，如何才能保证一旦调用 socket.close 方法，所有的进程（线程）都不能进行 I&#47;O 操作呢？<br><br>Java nio 对 close 进行了优化，采用经典的 two-step 处理方案，即 dup close 来关闭连接。比如 Java GC 中的标记清除算法，CHL 无锁队列中的标记删除算法，都是这种思想：先标记元素不可能用，再进行删除。dup close 方案同样如此，具体参考：&lt;https:&#47;&#47;www.oschina.net&#47;question&#47;138146_26027&gt;。<br><br>1. socket 在初始化时就会生成一个半关闭的连接，这个半关闭的 socket 连接相当于一个清除标记。<br>2. 当调用 close 时，先会调用 nd.preClose() 方法将原先的 socket 替换为这个已经半关闭的连接。这样其它进程在进行 socket I&#47;O 操作时就会报错（EOF 或者 Pipe Error），read 或 write 方法里会检测这些状态做相应处理。<br>3. 当所有的进程都调用 close 后，就没有进行再使用这个 socket，最后一个使用的线程调用 nd.close() 真正关闭 socket。","like_count":2,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491723,"discussion_content":"我记得Java这么做是有一个兼容性的原因，为了保持windows和linux跨平台的兼容性的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587302847,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127800,"user_name":"胡波 allenhu","can_delete":false,"product_type":"c1","uid":1014526,"ip_address":"","ucode":"33C6217E9A385C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7a/fe/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1566795622,"is_pvip":false,"replies":[{"id":"47937","content":"1.那是之前发送的；<br>2.那是shutdown的结果，shutdown之后，就是往队列里扔了一个FIN报文，这个发送队列还是要被发送完成的。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1567005803,"ip_address":"","comment_id":127800,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10156730214","product_id":100032701,"comment_content":"老师你好, 上面的例子中有两个地方不是很清楚:<br>(1) close: client调用close后, 不是会马上关闭两个方向的连接吗, 那为啥&quot;Hi, data1&quot;还能被收到并显示?<br>(2) shutdown: client调用shutdown只是关闭写方向的连接, 是不是client不能发了只能收?那为啥server能读到EOF并发送&quot;FIN&quot;给client?","like_count":2,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464662,"discussion_content":"1.那是之前发送的；\n2.那是shutdown的结果，shutdown之后，就是往队列里扔了一个FIN报文，这个发送队列还是要被发送完成的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567005803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2036333,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/6ZM5RHVBe8pVGoibpPHVM5TZTbqS4u4ckiaHoItk1LIhTfCEYbH7LYiaWJDvTiaga34MQQ3xicIZ0vsAkoSKRvY8F3A/132","nickname":"Geek_b4bb35","note":"","ucode":"257EE15A137445","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":368229,"discussion_content":"这程序结果改过吗？我看的程序结果调用close之后收不到“hi，data1”啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618626583,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":316381,"user_name":"lwenbin","can_delete":false,"product_type":"c1","uid":1202109,"ip_address":"","ucode":"05C4CC6BE0B56C","user_header":"https://static001.geekbang.org/account/avatar/00/12/57/bd/acf40fa0.jpg","comment_is_top":false,"comment_ctime":1634292016,"is_pvip":false,"replies":[{"id":"115262","content":"确实如此。对于读和写，是要区分不同的逻辑。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1635128079,"ip_address":"","comment_id":316381,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5929259312","product_id":100032701,"comment_content":"这里服务器signal 里 SIG_PIPE 应该是 SIG_DFL, github 里是对的，不然会 ignore，然后print &quot;error write&quot;.<br>对于close的情况下，server 发送第一个write 是可以的，不会返回-1，应该成功写入了缓冲区。但是感觉发送后client会通知server协议栈RST。第二次server再 write 的时候就收到了 SIGPIPE 了。<br>这里不管 close 还是 shutdown, client 都会发送 FIN 到客户端，在 shutdown 情况下 server 还是能够 read 和 write，只有 read 完缓冲区后才会收到 0，这时候 server 才会去exit&#47;close&#47;shutdown。<br>所以感觉对于server 收到 FIN 后，write 除非收到了 RST然后 SIG_PIPE，不然还是可以写。当然如果server read 到了 EOF，应该关闭当前socket。<br>","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":528374,"discussion_content":"确实如此。对于读和写，是要区分不同的逻辑。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635128079,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":202100,"user_name":"晚风·和煦","can_delete":false,"product_type":"c1","uid":1236047,"ip_address":"","ucode":"0B1DB8F437A4B2","user_header":"","comment_is_top":false,"comment_ctime":1585903141,"is_pvip":false,"replies":[{"id":"75767","content":"再仔细揣摩一下哈","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1586075729,"ip_address":"","comment_id":202100,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5880870437","product_id":100032701,"comment_content":"close那里的输入和输出方向没太理解😂","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490504,"discussion_content":"再仔细揣摩一下哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586075729,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1236047,"avatar":"","nickname":"晚风·和煦","note":"","ucode":"0B1DB8F437A4B2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":224048,"discussion_content":"老师，输入方向输出方向后面的解释都是指被动关闭的那一方吗😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586268340,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":195111,"user_name":"burner","can_delete":false,"product_type":"c1","uid":1202414,"ip_address":"","ucode":"22B8C4622B6E3C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL7cOHiaxJBPvdic53UfP4VC2P4EsyYOGNEwhgYsrP4kw7MFhI7fKQ0GnIiadIHUEYVD85AkrcGv5DLg/132","comment_is_top":false,"comment_ctime":1585137890,"is_pvip":false,"replies":[{"id":"74750","content":"EOF就是End OF File的缩写，是为了表明通信结束。<br><br>说明服务端试图关闭这个连接。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1585483609,"ip_address":"","comment_id":195111,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5880105186","product_id":100032701,"comment_content":"关于文中EOF的含义不是特别理解，意思是说表示发送数据结束标记？<br>最近看请求公司内部服务的日志，发现客户端会由于收到EOF而请求服务失败，但是不是经常出现，也不是在业务高峰期出现，咨询下老师，这种情况意味着什么？","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488979,"discussion_content":"EOF就是End OF File的缩写，是为了表明通信结束。\n\n说明服务端试图关闭这个连接。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585483609,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1202414,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL7cOHiaxJBPvdic53UfP4VC2P4EsyYOGNEwhgYsrP4kw7MFhI7fKQ0GnIiadIHUEYVD85AkrcGv5DLg/132","nickname":"burner","note":"","ucode":"22B8C4622B6E3C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":226080,"discussion_content":"问题是什么情况下服务端会主动关闭连接？如果拒绝服务或者服务负载过高会出现这种情况吗？这种问题如何排查呢？老师有建议吗，感谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586419501,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172042,"user_name":"JJj","can_delete":false,"product_type":"c1","uid":1196463,"ip_address":"","ucode":"EA53F2CEAFCFF1","user_header":"https://static001.geekbang.org/account/avatar/00/12/41/af/4307867a.jpg","comment_is_top":false,"comment_ctime":1579078131,"is_pvip":false,"replies":[{"id":"68049","content":"分别调用shutdown两个方向，可以释放掉两个方向的套接字资源。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1580626151,"ip_address":"","comment_id":172042,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5874045427","product_id":100032701,"comment_content":"第一个差别：close 会关闭连接，并释放所有连接对应的资源，而 shutdown 并不会释放掉套接字和所有的资源。--------------------请问下，shutdown两个方向也不会释放套接字资源吗？那什么时候释放的","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481600,"discussion_content":"分别调用shutdown两个方向，可以释放掉两个方向的套接字资源。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580626151,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":355003,"user_name":"lixin","can_delete":false,"product_type":"c1","uid":1512599,"ip_address":"广东","ucode":"94D99DAFB6C929","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/88nXicqmkJWm3IXVfPfGQSk8SKIBVKjuC4qhzaCkf5Ud88uvKgS4Vf5AzCJ1uaFO0gpPnxdh4CowfhpxV1kSbXw/132","comment_is_top":false,"comment_ctime":1660965700,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1660965700","product_id":100032701,"comment_content":"请问一下，如果一端shutdown()关闭读，对端发送数据会有什么现象出现；一端关闭shutdown()关闭读，对端调用什么接口会感应到？","like_count":0},{"had_liked":false,"id":351691,"user_name":"云会宾","can_delete":false,"product_type":"c1","uid":2696335,"ip_address":"","ucode":"8DFC2DD03D7E51","user_header":"https://static001.geekbang.org/account/avatar/00/29/24/8f/77140e34.jpg","comment_is_top":false,"comment_ctime":1658107915,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1658107915","product_id":100032701,"comment_content":"看了其他人的评论后，补充了下不懂的地方。对于老师画的图也能猜出意思了，不知道对不对？就是close的图：发送data1和data2到close每个都有ack这应该是TCP协议层面的吧？不是说只有read一下才ack。应该是客户端把data1和data2和close很快就发到服务端了，在服务端接受缓存里。服务端是睡5秒醒了去接受缓存里去取，取完一个就要去发送，这个就和老师讲的接上了。也就是那个图的客户端发送到服务端的数据发完了。这个时候可能服务器端才刚开始执行read代码，这图和代码是有时空差的。不知道是不是这样？","like_count":0},{"had_liked":false,"id":345098,"user_name":"乔克叔叔","can_delete":false,"product_type":"c1","uid":2350246,"ip_address":"","ucode":"31F524DC1E1498","user_header":"https://static001.geekbang.org/account/avatar/00/23/dc/a6/6c2728b9.jpg","comment_is_top":false,"comment_ctime":1652020350,"is_pvip":false,"replies":[{"id":"126190","content":"不是哦，四次挥手是要走的。这里是指连接的处理细节。","user_name":"作者回复","user_name_real":"编辑","uid":"1618647","ctime":1652614381,"ip_address":"","comment_id":345098,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1652020350","product_id":100032701,"comment_content":"老师 有个疑惑 调用close是粗暴关闭连接 是不走四次挥手的意思？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572131,"discussion_content":"不是哦，四次挥手是要走的。这里是指连接的处理细节。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652614381,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":334347,"user_name":"大乌贼 (\\(●-●)&#47;)","can_delete":false,"product_type":"c1","uid":1207293,"ip_address":"","ucode":"B1FB489558F176","user_header":"https://static001.geekbang.org/account/avatar/00/12/6b/fd/14e1f6bb.jpg","comment_is_top":false,"comment_ctime":1644895490,"is_pvip":true,"replies":[{"id":"122344","content":"这里的shutdown是用的SHUT_WR(1)，表示关闭连接的“写”这个方向，这就是常被称为”半关闭“的连接。此时，不管套接字引用计数的值是多少，都会直接关闭连接的写方向。套接字上发送缓冲区已有的数据将被立即发送出去，并发送一个 FIN 报文给对端。","user_name":"作者回复","user_name_real":"编辑","uid":"1618647","ctime":1645274994,"ip_address":"","comment_id":334347,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1644895490","product_id":100032701,"comment_content":"为啥第二个例子在shutdown之后还能打印出服务端返回的数据？不是shutdown后会关闭读，把对端发过来的数据回复个ack，然后默默丢弃么？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552075,"discussion_content":"这里的shutdown是用的SHUT_WR(1)，表示关闭连接的“写”这个方向，这就是常被称为”半关闭“的连接。此时，不管套接字引用计数的值是多少，都会直接关闭连接的写方向。套接字上发送缓冲区已有的数据将被立即发送出去，并发送一个 FIN 报文给对端。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645274994,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":329224,"user_name":"Bin Watson","can_delete":false,"product_type":"c1","uid":2622364,"ip_address":"","ucode":"33E3487896E859","user_header":"https://static001.geekbang.org/account/avatar/00/28/03/9c/5a0b8825.jpg","comment_is_top":false,"comment_ctime":1641221442,"is_pvip":false,"replies":[{"id":"120807","content":"不会发FIN包。服务器也不会知道client不接收数据了，也不会发送FIN包给客户端。","user_name":"作者回复","user_name_real":"编辑","uid":"1618647","ctime":1642310684,"ip_address":"","comment_id":329224,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1641221442","product_id":100032701,"comment_content":"老师，如果client的shutdown是shut_rd格式，那么会发送一个fin给服务器吗？如果不会，那么正常情况下，服务器不会主动发送FIN包吧？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546450,"discussion_content":"不会发FIN包。服务器也不会知道client不接收数据了，也不会发送FIN包给客户端。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642310685,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":329000,"user_name":"Frank","can_delete":false,"product_type":"c1","uid":2878019,"ip_address":"","ucode":"32261A171AB37A","user_header":"https://static001.geekbang.org/account/avatar/00/2b/ea/43/f831afcc.jpg","comment_is_top":false,"comment_ctime":1641009523,"is_pvip":false,"replies":[{"id":"119879","content":"输入是说，套接字里有数据准备好了，可以被读出来处理。所以说输入对应的是读操作。","user_name":"作者回复","user_name_real":"编辑","uid":"1618647","ctime":1641115899,"ip_address":"","comment_id":329000,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1641009523","product_id":100032701,"comment_content":"输入分向和输出方向怎么理解，为什么输入对应的是读操作而不是写操作","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543387,"discussion_content":"输入是说，套接字里有数据准备好了，可以被读出来处理。所以说输入对应的是读操作。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641115899,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322861,"user_name":"Geek_648160","can_delete":false,"product_type":"c1","uid":2535244,"ip_address":"","ucode":"6BA623CFB7371A","user_header":"","comment_is_top":false,"comment_ctime":1637635884,"is_pvip":false,"replies":[{"id":"117469","content":"TCP连接已关闭了。是不是把进程压挂了😢","user_name":"作者回复","user_name_real":"编辑","uid":"1618647","ctime":1638087661,"ip_address":"","comment_id":322861,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1637635884","product_id":100032701,"comment_content":"老师 压测过程中jmeter报java.net.SocketException: Socket is closed，有啥解决思路吗？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534073,"discussion_content":"TCP连接已关闭了。是不是把进程压挂了😢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638087661,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320019,"user_name":"T------T","can_delete":false,"product_type":"c1","uid":2270365,"ip_address":"","ucode":"AC68D88893FAD7","user_header":"https://static001.geekbang.org/account/avatar/00/22/a4/9d/95900f70.jpg","comment_is_top":false,"comment_ctime":1636039571,"is_pvip":true,"replies":[{"id":"116138","content":"是的，客户端和服务端各自先后发出了FIN包。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1636273199,"ip_address":"","comment_id":320019,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1636039571","product_id":100032701,"comment_content":"老师好，有一些疑问。<br>客户端调用了shutdown 对应于4次挥手 客户端发出了FIN吧。<br>然后服务端再调用shutdown 就对英语4次挥手，服务端发出了FIN？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529845,"discussion_content":"是的，客户端和服务端各自先后发出了FIN包。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636273199,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318688,"user_name":"王蓬勃","can_delete":false,"product_type":"c1","uid":2450040,"ip_address":"","ucode":"DDF4CCE9728DCF","user_header":"","comment_is_top":false,"comment_ctime":1635392151,"is_pvip":false,"replies":[{"id":"115708","content":"参考第20讲：<br>a[maxfd-1], ..., a[1], a[0]<br>FD_ZERO 用来将这个向量的所有元素都设置成 0；FD_SET 用来把对应套接字 fd 的元素，a[fd]设置成 1；也就是说这里是a[0]=1。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1635669591,"ip_address":"","comment_id":318688,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1635392151","product_id":100032701,"comment_content":"FD_ZERO(&amp;allreads);    <br>FD_SET(0, &amp;allreads); <br><br>这两个操作有什么区别？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529347,"discussion_content":"参考第20讲：\na[maxfd-1], ..., a[1], a[0]\nFD_ZERO 用来将这个向量的所有元素都设置成 0；FD_SET 用来把对应套接字 fd 的元素，a[fd]设置成 1；也就是说这里是a[0]=1。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635669591,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":317849,"user_name":"Geek_e43e33","can_delete":false,"product_type":"c1","uid":2775127,"ip_address":"","ucode":"8FE09B5E0A4C3D","user_header":"","comment_is_top":false,"comment_ctime":1634992822,"is_pvip":false,"replies":[{"id":"115266","content":"1.设计优良的程序，通过close也可以优雅的关闭哦。这里只是告诉了这么一个设计原则，并不是一定需要用shutdown来完成。<br>2.这个牵涉到SHUT_RDWR的作用了，如文中所说，大多数情况下可能和close情况不太相同。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1635128983,"ip_address":"","comment_id":317849,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1634992822","product_id":100032701,"comment_content":"老师您好，对于优雅&#47;粗暴的关闭有一些疑问：<br>1. 首先调用close()完成关闭双方连接一定会导致粗暴的关闭吗？因为客户端调用close()之后接收到的服务器数据不会接收，这种情况是粗暴的关闭。但如果客户端调用close()后服务器并不向客户端传数据而是直接发送ACK+FIN报文客户端是否会接收？即是否属于优雅的关闭？<br>2. 粗暴的关闭：使用shutdown()将选项设置为SHUT_RDWR是否会导致粗暴的关闭？<br>","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529005,"discussion_content":"1.设计优良的程序，通过close也可以优雅的关闭哦。这里只是告诉了这么一个设计原则，并不是一定需要用shutdown来完成。\n2.这个牵涉到SHUT_RDWR的作用了，如文中所说，大多数情况下可能和close情况不太相同。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635128983,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":317845,"user_name":"Geek_e43e33","can_delete":false,"product_type":"c1","uid":2775127,"ip_address":"","ucode":"8FE09B5E0A4C3D","user_header":"","comment_is_top":false,"comment_ctime":1634991861,"is_pvip":false,"replies":[{"id":"115267","content":"问题是重复的哈。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1635129003,"ip_address":"","comment_id":317845,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1634991861","product_id":100032701,"comment_content":"老师您好，请问使用close()一定会导致连接被粗暴的关闭吗？因为一端直接关闭后就不再接收数据了，对之后的数据直接发RST。另外shutdown采用同时关闭读端和写端的选项时应该也是粗暴的关闭吧。","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529003,"discussion_content":"问题是重复的哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635129003,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":315290,"user_name":"lwenbin","can_delete":false,"product_type":"c1","uid":1202109,"ip_address":"","ucode":"05C4CC6BE0B56C","user_header":"https://static001.geekbang.org/account/avatar/00/12/57/bd/acf40fa0.jpg","comment_is_top":false,"comment_ctime":1633787430,"is_pvip":false,"replies":[{"id":"115264","content":"shutdown是通过EOF感知来退出的，error code我理解应该是0，表示读到最后了。signal函数也不会被调用。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1635128581,"ip_address":"","comment_id":315290,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1633787430","product_id":100032701,"comment_content":"老师，在 shutdown 情景下服务器是通过read 返回 EOF 然后 error(1, 0, &quot;client closed \\n&quot;); 间接 exit 吧，这时候 shell 里error code 是1，不是0.<br>sig_int function 不会被调用吧？<br>","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527925,"discussion_content":"shutdown是通过EOF感知来退出的，error code我理解应该是0，表示读到最后了。signal函数也不会被调用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635128581,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":314569,"user_name":"李恒","can_delete":false,"product_type":"c1","uid":2778122,"ip_address":"","ucode":"4C5E061A2B28D9","user_header":"https://static001.geekbang.org/account/avatar/00/2a/64/0a/74cb1c66.jpg","comment_is_top":false,"comment_ctime":1633232332,"is_pvip":false,"replies":[{"id":"114043","content":"收到客户端的FIN包时，服务端会自己自动向对方发送一个ACK包。只有调用close或shutdown时才会发送FIN包。你可以仔细看下文章中的时序交互图。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1633577001,"ip_address":"","comment_id":314569,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1633232332","product_id":100032701,"comment_content":"在收到客户端的FIN包时，服务端会自己自动向对方发送一个FIN吗？还是说服务端只会在调用close或shutdown时才会发送FIN包？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527722,"discussion_content":"收到客户端的FIN包时，服务端会自己自动向对方发送一个ACK包。只有调用close或shutdown时才会发送FIN包。你可以仔细看下文章中的时序交互图。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633577001,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":312683,"user_name":"Issac慜","can_delete":false,"product_type":"c1","uid":1793361,"ip_address":"","ucode":"690B69FC1C0BB2","user_header":"https://static001.geekbang.org/account/avatar/00/1b/5d/51/87fc7ef9.jpg","comment_is_top":false,"comment_ctime":1631939929,"is_pvip":false,"replies":[{"id":"114034","content":"进程都退出了，该操作系统善后了","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1633574369,"ip_address":"","comment_id":312683,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1631939929","product_id":100032701,"comment_content":"调用exit退出程序时，操作系统会自动释放套接字等占用的资源","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527078,"discussion_content":"进程都退出了，该操作系统善后了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633574369,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":307206,"user_name":"即墨","can_delete":false,"product_type":"c1","uid":1469351,"ip_address":"","ucode":"89AD683E6D3C25","user_header":"https://static001.geekbang.org/account/avatar/00/16/6b/a7/0ef65704.jpg","comment_is_top":false,"comment_ctime":1628935647,"is_pvip":false,"replies":[{"id":"111677","content":"是的。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1629636638,"ip_address":"","comment_id":307206,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1628935647","product_id":100032701,"comment_content":"所以为了保证FIN报文被发出，一般先shutdown再close，是这样吗","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525077,"discussion_content":"是的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629636638,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":273290,"user_name":"随先生","can_delete":false,"product_type":"c1","uid":2307915,"ip_address":"","ucode":"33C61A84CFF0C4","user_header":"https://static001.geekbang.org/account/avatar/00/23/37/4b/e0b13df2.jpg","comment_is_top":false,"comment_ctime":1610526440,"is_pvip":false,"replies":[{"id":"99527","content":"如果对端(服务器端)没有检测到套接字已关闭，还继续发送报文，就会收到一个 RST 报文，（客户端)告诉对端(服务器端)：“Hi, 我已经关闭了，别再给我发数据了。”","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1610892078,"ip_address":"","comment_id":273290,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1610526440","product_id":100032701,"comment_content":"老师，请问close为什么会导致客户端回应服务器RST呢？服务器发来信息客户端读，照文章前面说的如果关闭读，则服务器发来的数据会被直接丢弃并返回ACK，没有说到会产生RST，是符合之前文章说的RST产生的三个条件中的哪个条件呢？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513556,"discussion_content":"如果对端(服务器端)没有检测到套接字已关闭，还继续发送报文，就会收到一个 RST 报文，（客户端)告诉对端(服务器端)：“Hi, 我已经关闭了，别再给我发数据了。”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610892078,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2036333,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/6ZM5RHVBe8pVGoibpPHVM5TZTbqS4u4ckiaHoItk1LIhTfCEYbH7LYiaWJDvTiaga34MQQ3xicIZ0vsAkoSKRvY8F3A/132","nickname":"Geek_b4bb35","note":"","ucode":"257EE15A137445","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":368230,"discussion_content":"你看错了吧，文章前面写的是丢弃并返回ack是调用shutdown 关闭读那一方向触发的。调用close关闭后，再发就是会返回RST。这篇文章内容太多了，很容易绕晕，可以再回去看看。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1618626837,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":272325,"user_name":"何赫赫","can_delete":false,"product_type":"c1","uid":1385332,"ip_address":"","ucode":"AB715356D60068","user_header":"https://static001.geekbang.org/account/avatar/00/15/23/74/b81c9f8c.jpg","comment_is_top":false,"comment_ctime":1610032394,"is_pvip":false,"replies":[{"id":"98865","content":"服务端读到的EOF是客户端调用shutdown发送出来的","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1610285008,"ip_address":"","comment_id":272325,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1610032394","product_id":100032701,"comment_content":"我们再看下客户端和服务器端交互的时序图。因为客户端调用 shutdown 函数只是关闭连接的一个方向，服务器端到客户端的这个方向还可以继续进行数据的发送和接收，所以“Hi,data1”和“Hi,data2”都可以正常传送；当服务器端读到 EOF 时，立即向客户端发送了 FIN 报文，客户端在 read 函数中感知了 EOF，也进行了正常退出。<br><br>老师你好，上文中说的  当服务端读到EOF时  这里读到EOF是通过exit(0)触发的吗","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513238,"discussion_content":"服务端读到的EOF是客户端调用shutdown发送出来的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610285008,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1385332,"avatar":"https://static001.geekbang.org/account/avatar/00/15/23/74/b81c9f8c.jpg","nickname":"何赫赫","note":"","ucode":"AB715356D60068","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341114,"discussion_content":"服务端有什么主动产生EOF的方式吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610293495,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2036333,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/6ZM5RHVBe8pVGoibpPHVM5TZTbqS4u4ckiaHoItk1LIhTfCEYbH7LYiaWJDvTiaga34MQQ3xicIZ0vsAkoSKRvY8F3A/132","nickname":"Geek_b4bb35","note":"","ucode":"257EE15A137445","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1385332,"avatar":"https://static001.geekbang.org/account/avatar/00/15/23/74/b81c9f8c.jpg","nickname":"何赫赫","note":"","ucode":"AB715356D60068","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":368235,"discussion_content":"主动调用关闭函数关闭，或者感知到对端关闭（也就是read函数函数了EOF），都会主动发送fin包，和在数据附上一个EOF","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618627074,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":341114,"ip_address":""},"score":368235,"extra":""}]}]},{"had_liked":false,"id":258502,"user_name":"Geek_f19a97","can_delete":false,"product_type":"c1","uid":2178761,"ip_address":"","ucode":"8E2F38ED9E1F38","user_header":"","comment_is_top":false,"comment_ctime":1604466091,"is_pvip":false,"replies":[{"id":"95517","content":"哪些结构体无法使用？","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1606046669,"ip_address":"","comment_id":258502,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1604466091","product_id":100032701,"comment_content":"请问头文件应该怎么包含引用呢，直接使用套接字的头文件，有些结构体无法使用。","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":508673,"discussion_content":"哪些结构体无法使用？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606046669,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":258498,"user_name":"Geek_f19a97","can_delete":false,"product_type":"c1","uid":2178761,"ip_address":"","ucode":"8E2F38ED9E1F38","user_header":"","comment_is_top":false,"comment_ctime":1604464672,"is_pvip":false,"replies":[{"id":"95505","content":"哦，这个是C&#47;C++里面的概念，把对象和接口放在头文件中，真正的实现通过链接来完成。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1606041616,"ip_address":"","comment_id":258498,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1604464672","product_id":100032701,"comment_content":"请问头文件是什么呢，套接字编程需要引用哪些头文件。","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":508672,"discussion_content":"哦，这个是C/C++里面的概念，把对象和接口放在头文件中，真正的实现通过链接来完成。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606041616,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":255116,"user_name":"Guchen","can_delete":false,"product_type":"c1","uid":2224386,"ip_address":"","ucode":"9BD34F616F167A","user_header":"https://static001.geekbang.org/account/avatar/00/21/f1/02/96082034.jpg","comment_is_top":false,"comment_ctime":1603268562,"is_pvip":false,"replies":[{"id":"95502","content":"我同意你的解读，我的意思是通过read函数的返回值来看，EOF是一个特殊的字节。至于这个数据是通过包发送出去的，还是内核判断后产生的，这个细节需要读源码。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1606041116,"ip_address":"","comment_id":255116,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1603268562","product_id":100032701,"comment_content":"老师之前的回复： ” EOF是特殊的字节，是payload(负载)数据，ACK是控制数据。这从程序里也可以看到，EOF是通过读数据返回-1来判断的，而ACK是直接在TCP&#47;IP协议栈里处理的。“<br><br>老师好，我想问下为什么说EOF是负载数据？它有被实际放到FIN包里发送过去么？我的理解是： 客户端主动关闭连接后发送FIN包到对端并且此后不会在发送数据，服务端协议栈接收到FIN包后会更改连接相关状态，服务端调用read从接收缓冲区中读取之前接收到的数据，当某次read读完接受缓冲区中的所有数据后，再调用read，此时内核发现缓冲区无数据并且通过之前设置的状态量了解到对端已经关闭连接，于是返回0,而不是继续阻塞在read。","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507611,"discussion_content":"我同意你的解读，我的意思是通过read函数的返回值来看，EOF是一个特殊的字节。至于这个数据是通过包发送出去的，还是内核判断后产生的，这个细节需要读源码。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606041116,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":245472,"user_name":"木子皿","can_delete":false,"product_type":"c1","uid":1242778,"ip_address":"","ucode":"3FDEAFABB4C427","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJUzv6S9wroyXaoFIwvC1mdDiav4BVS4BbPTuwtvWibthL5PyMuxFNicY06QJMZicVpib7E88S19nH4I9Q/132","comment_is_top":false,"comment_ctime":1598952775,"is_pvip":false,"replies":[{"id":"90590","content":"是服务端处于CLOSE_WAIT状态，而客户端socket已经被关闭了，所以无法查看吧。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1599400024,"ip_address":"","comment_id":245472,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1598952775","product_id":100032701,"comment_content":"老师，你好！请教一个问题：客户端直接使用close函数（调用后就直接死循环），而服务器端不进行close函数的调用，可以看到服务端和客户端对应的socket处于CLOSE_WAIT状态，而客户端的socket却无法查看，不是应该处于FIN_WAIT2状态吗","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504891,"discussion_content":"是服务端处于CLOSE_WAIT状态，而客户端socket已经被关闭了，所以无法查看吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599400024,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":232689,"user_name":"Geek_63bb29","can_delete":false,"product_type":"c1","uid":2017041,"ip_address":"","ucode":"65C27FA7531722","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/5kv7IqibneNnMLqtWZQR5f1et8lJmoxiaU43Ttzz3zqW7QzBqMkib8GCtImKsms7PPbWmTB51xRnZQAnRPfA1wVaw/132","comment_is_top":false,"comment_ctime":1594089871,"is_pvip":false,"replies":[{"id":"86789","content":"应该不会啊，方便的话把你的程序贴过来大家一起看看","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1594903971,"ip_address":"","comment_id":232689,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1594089871","product_id":100032701,"comment_content":"老师，你好，对于这篇的客户端代码，程序阻塞在select这部分，然后我在connect之前添加打印语句printf，编译后，运行，此时连接服务器了，为啥没有马上打印，而是输入字符以后，才打印呢？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500739,"discussion_content":"应该不会啊，方便的话把你的程序贴过来大家一起看看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594903971,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":230504,"user_name":"龙","can_delete":false,"product_type":"c1","uid":1528876,"ip_address":"","ucode":"A81E6D6AD0A2A3","user_header":"https://static001.geekbang.org/account/avatar/00/17/54/2c/c4ebd3ab.jpg","comment_is_top":false,"comment_ctime":1593401364,"is_pvip":false,"replies":[{"id":"85722","content":"是不是设置的太短了?","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1593953767,"ip_address":"","comment_id":230504,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1593401364","product_id":100032701,"comment_content":"为什么我的sleep函数不起作用，测试了，也百度了，求解答","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499914,"discussion_content":"是不是设置的太短了?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593953767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":230018,"user_name":"衬衫的价格是19美元","can_delete":false,"product_type":"c1","uid":1397631,"ip_address":"","ucode":"655F925451F772","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKVUskibDnhMt5MCIJ8227HWkeg2wEEyewps8GuWhWaY5fy7Ya56bu2ktMlxdla3K29Wqia9efCkWaQ/132","comment_is_top":false,"comment_ctime":1593242786,"is_pvip":false,"replies":[{"id":"85720","content":"EOF是特殊的字节，是payload(负载)数据，ACK是控制数据。这从程序里也可以看到，EOF是通过读数据返回-1来判断的，而ACK是直接在TCP&#47;IP协议栈里处理的。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1593953565,"ip_address":"","comment_id":230018,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1593242786","product_id":100032701,"comment_content":"哦， 服务端收到的eof是客户端shutdown时发出的，ack里面怎么可能携带eof呢，真是混乱，不好意思～","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499738,"discussion_content":"EOF是特殊的字节，是payload(负载)数据，ACK是控制数据。这从程序里也可以看到，EOF是通过读数据返回-1来判断的，而ACK是直接在TCP/IP协议栈里处理的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593953565,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":230011,"user_name":"衬衫的价格是19美元","can_delete":false,"product_type":"c1","uid":1397631,"ip_address":"","ucode":"655F925451F772","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKVUskibDnhMt5MCIJ8227HWkeg2wEEyewps8GuWhWaY5fy7Ya56bu2ktMlxdla3K29Wqia9efCkWaQ/132","comment_is_top":false,"comment_ctime":1593241669,"is_pvip":false,"replies":[{"id":"85721","content":"是客户端发送&quot;hi data2&quot;之后，由客户端协议栈自动在后面的payload(数据负载)里安放的。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1593953627,"ip_address":"","comment_id":230011,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1593241669","product_id":100032701,"comment_content":"shutdown场景中，服务端收到的eof 是客户端对hi data2 的ack里面携带的吗？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499735,"discussion_content":"是客户端发送&amp;quot;hi data2&amp;quot;之后，由客户端协议栈自动在后面的payload(数据负载)里安放的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593953627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":223207,"user_name":"unper","can_delete":false,"product_type":"c1","uid":1957825,"ip_address":"","ucode":"6B44FAB60A1075","user_header":"","comment_is_top":false,"comment_ctime":1591021691,"is_pvip":false,"replies":[{"id":"84256","content":"这里有一个时间差的问题，服务器端的ACK都不是我程序里面能控制的，它是TCP协议所控制的，当客户端分别发送data1、data2和close的请求时，TCP协议返回ACK，同时我们的应用程序分别读到了data1和data2数据(通过一个sleep方法让我们的应用程序后知后觉)，这样模拟对close的TCP链路发起反馈。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1592739189,"ip_address":"","comment_id":223207,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1591021691","product_id":100032701,"comment_content":"老师您好，有个疑惑，在close这个例子种，从时序图中看到，服务端收到FIN并返回ACK后继续发送&quot;Hi，data1&quot;，但是代码里面，int n = read(...)，客户端close后在这里read返回0，接下来通过if语句，程序直接从error(1, 0, &quot;client closed \\n&quot;);退出了，好像没有发送“Hi，data1”","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497056,"discussion_content":"这里有一个时间差的问题，服务器端的ACK都不是我程序里面能控制的，它是TCP协议所控制的，当客户端分别发送data1、data2和close的请求时，TCP协议返回ACK，同时我们的应用程序分别读到了data1和data2数据(通过一个sleep方法让我们的应用程序后知后觉)，这样模拟对close的TCP链路发起反馈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592739189,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180283,"user_name":"treasure","can_delete":false,"product_type":"c1","uid":1798993,"ip_address":"","ucode":"3D6948A2201B2F","user_header":"https://static001.geekbang.org/account/avatar/00/1b/73/51/aaedc2a6.jpg","comment_is_top":false,"comment_ctime":1582248292,"is_pvip":false,"replies":[{"id":"71040","content":"exit(0)相当于进程之间退出了，相当于把清理的责任交给操作系统了。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1583053257,"ip_address":"","comment_id":180283,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582248292","product_id":100032701,"comment_content":"exit(0)关闭是不是属于粗暴的关闭方式？<br>而shutdown是不是属于优雅的关闭方式？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484596,"discussion_content":"exit(0)相当于进程之间退出了，相当于把清理的责任交给操作系统了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583053257,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178519,"user_name":"湛","can_delete":false,"product_type":"c1","uid":1228275,"ip_address":"","ucode":"08D2E233A952C8","user_header":"https://static001.geekbang.org/account/avatar/00/12/bd/f3/a59e8c99.jpg","comment_is_top":false,"comment_ctime":1581733145,"is_pvip":false,"replies":[{"id":"71021","content":"客户端一旦close就会引起FIN报文的发送，server端收到之后就把这条链路的&quot;客户端-server&quot;方向标识为不可用，也就是说如果server端再调用send&#47;write就会出错。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1583051469,"ip_address":"","comment_id":178519,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1581733145","product_id":100032701,"comment_content":"我想了解下客户端在进行什么操作的时候会触发四次握手 看了下您说的close之后 server无法再发送数据了 但是在server发送fin包前不是应该可以发送数据吗","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483859,"discussion_content":"客户端一旦close就会引起FIN报文的发送，server端收到之后就把这条链路的&amp;quot;客户端-server&amp;quot;方向标识为不可用，也就是说如果server端再调用send/write就会出错。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583051469,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1002005,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/15/106eaaa8.jpg","nickname":"stackWarn","note":"","ucode":"89672E452DEBA5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293115,"discussion_content":"客户端使用close 服务端fin前发送数据会被返回rst 且关闭socket，反之使用shutdown无问题，返回ack","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1595434038,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1228275,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bd/f3/a59e8c99.jpg","nickname":"湛","note":"","ucode":"08D2E233A952C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":192808,"discussion_content":"那shutdown呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583097625,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159200,"user_name":"Geek_68d3d2","can_delete":false,"product_type":"c1","uid":1674369,"ip_address":"","ucode":"EBD6D881AA7A74","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqf54z1ZmqQY1kmJ6t1HAnrqMM3j6WKf0oDeVLhtnA2ZUKY6AX9MK6RjvcO8SiczXy3uU0IzBQ3tpw/132","comment_is_top":false,"comment_ctime":1575557637,"is_pvip":false,"replies":[{"id":"61026","content":"哪个程序？是close的还是shutdown的？如果把read返回0注释掉，说明是对端已经发起结束，这个时候是服务端是需要正常退出的，不明白注释的想法是？","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1575799105,"ip_address":"","comment_id":159200,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1575557637","product_id":100032701,"comment_content":"这个程序服务端好像没有发送FIN包就直接退出了吧 我把服务端read返回0的情况下error注掉，服务端已在再向客户端发送Hi。","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476980,"discussion_content":"哪个程序？是close的还是shutdown的？如果把read返回0注释掉，说明是对端已经发起结束，这个时候是服务端是需要正常退出的，不明白注释的想法是？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575799105,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2029526,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f7/d6/9ebe565c.jpg","nickname":"YC","note":"","ucode":"487213D7B37601","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288714,"discussion_content":"我知道注释掉的想法。因为本例中sigpip完全没有被触发，因为客户端的FIN，服务器端读到EOF，调用error就退出了，假如在退出之前，再发给客户端一个随便什么string，就会触发sigpip。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593847653,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154611,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1574493006,"is_pvip":false,"replies":[{"id":"60389","content":"因为有双向连接的问题，所以一般不会合并。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1575189428,"ip_address":"","comment_id":154611,"utype":1}],"discussion_count":4,"race_medal":0,"score":"1574493006","product_id":100032701,"comment_content":"看完这篇，感觉自己跟不上了😁，有好多细节都是第一次听说，不过也有一点收获，所以，要坚持。<br>这节，感觉印证了我上节的猜想，老师对于四次挥手并没有像建立连接时的三次握手那么详细，我也没跳读的。<br><br>TCP连接的三次握手机制主要是为了解决，怎么确保信道安全可靠的问题，为了确认双方的收发能力都OK，需要四次通信，不过其中两次的收发可以合并，所以，三次握手就行了<br><br>TCP断链的四次挥手机制，主要为了解决双方的收发数据都能正常结束，才这么设计的，因为TCP连接的两个特点，一是传输的是字节流，二是通信方式为双工通信。所以，一端想关闭连接，就需要不再继续写且发送一个FIN，另一端需要处理完对应的读，然后发一个ACK进行响应。<br>我有个疑问，四次挥手的其中两次不能像三次握手一样合并为一次通信嘛？是因为处理读可能存在慢动作吗？怕耽误ACK的响应时间嘛？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475523,"discussion_content":"因为有双向连接的问题，所以一般不会合并。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575189428,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1619766,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epx117N0LnncMmd2ysrEOrhp9cQcrLme5MD6nsYXF3ZcWdUmwPsyicwgCP5YHGjYZMAuNiaMfHoD38Q/132","nickname":"不穿秋裤男","note":"","ucode":"466EF0BEAA7F52","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":119143,"discussion_content":"关闭连接时，当服务端收到FIN报文时，很可能并不会立即关闭SOCKET，所以只能先回复一个ACK报文，告诉客户端，“你发的FIN报文我收到了”。只有等到我服务端所有的报文都发送完了，我才能发送FIN报文，因此不能一起发送。故需要四次挥手。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578218169,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009652,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","nickname":"钱","note":"","ucode":"2C92A243A463D4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":68041,"discussion_content":"嗯，没有完全理解，同样是双向连接，三次握手能实现连接，三次握手怎么就不能断开连接？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575197847,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2224386,"avatar":"https://static001.geekbang.org/account/avatar/00/21/f1/02/96082034.jpg","nickname":"Guchen","note":"","ucode":"9BD34F616F167A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1009652,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","nickname":"钱","note":"","ucode":"2C92A243A463D4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":315437,"discussion_content":"我的理解是：\n建立连接时：客户端和服务端都预先准备就绪，双方都知道随时可以通过connect和accept建立连接，因此服务端在接收到SYN包时，可以将对于对来自客户端SYN包的确认稍带在发送给客户端的SYN包中。\n断开连接时：主动发起断开连接的一方可以随时发送FIN包，但是被动断开连接的一方并不能确定何时才会接收到对方的FIN包因此也无法提前准备就绪，当某一时刻接收到对端的FIN包后，它此时可能正忙于针对先前数据的处理和发送过程中，因此协议栈只是先会送个ACK，当它完成手头上的工作后，再回送个FIN给主动断开连接的一方告诉对面，我已经处理好手头上的工作了，现在我开始断开链接了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603275093,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":68041,"ip_address":""},"score":315437,"extra":""}]}]},{"had_liked":false,"id":154217,"user_name":"美美","can_delete":false,"product_type":"c1","uid":1148422,"ip_address":"","ucode":"44CC95C45AF345","user_header":"https://static001.geekbang.org/account/avatar/00/11/86/06/72b01bb7.jpg","comment_is_top":false,"comment_ctime":1574392068,"is_pvip":false,"replies":[{"id":"59341","content":"有点误解哦，FIN是会发的，只是一个方向的连接会被关闭，另一个方向正常的。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1574499856,"ip_address":"","comment_id":154217,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574392068","product_id":100032701,"comment_content":"实际测试时把shutdown 里的参数设置成了0，但是抓包客户端也发FIN包了，SHUT_RD(0)老师讲的不会发FIN包呢","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475409,"discussion_content":"有点误解哦，FIN是会发的，只是一个方向的连接会被关闭，另一个方向正常的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574499856,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145523,"user_name":"破晓^_^","can_delete":false,"product_type":"c1","uid":1149592,"ip_address":"","ucode":"3224920095AC9E","user_header":"https://static001.geekbang.org/account/avatar/00/11/8a/98/2be9d17b.jpg","comment_is_top":false,"comment_ctime":1572310606,"is_pvip":false,"replies":[{"id":"56622","content":"第一个问题，是的，这个是因为close调用之后sleep了；<br><br>第二个问题，应该在10秒之内就可以了，这个例子是为了展示close和shutdown的区别。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1572574260,"ip_address":"","comment_id":145523,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572310606","product_id":100032701,"comment_content":"本文中例子，客户端发送data1和data2后无返回是因为sleep了吗？还有实验的时候是不是close和shutdown的输入必须在5s内完成，否则服务器端不休眠了直接把数据发到客户端了。","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472442,"discussion_content":"第一个问题，是的，这个是因为close调用之后sleep了；\n\n第二个问题，应该在10秒之内就可以了，这个例子是为了展示close和shutdown的区别。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572574260,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141778,"user_name":"我的名字","can_delete":false,"product_type":"c1","uid":1619221,"ip_address":"","ucode":"F98FD954D99A4B","user_header":"https://static001.geekbang.org/account/avatar/00/18/b5/15/7ce4303a.jpg","comment_is_top":false,"comment_ctime":1571223441,"is_pvip":false,"replies":[{"id":"55109","content":"建议使用虚拟机安装一个ubutnu的Linux，在Linux下实验。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1571454550,"ip_address":"","comment_id":141778,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1571223441","product_id":100032701,"comment_content":"代码移植到win10上，select总是返回-1， WSAGetLastError()为10038。老师，能说一下，如果是win10的话，使用哪种方式能实现与本文相同的功能？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470884,"discussion_content":"建议使用虚拟机安装一个ubutnu的Linux，在Linux下实验。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571454550,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1149592,"avatar":"https://static001.geekbang.org/account/avatar/00/11/8a/98/2be9d17b.jpg","nickname":"破晓^_^","note":"","ucode":"3224920095AC9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":40942,"discussion_content":"Windows下的select和Linux下select使用不一样有差别的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572309692,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135152,"user_name":"苦行僧","can_delete":false,"product_type":"c1","uid":1055334,"ip_address":"","ucode":"726024A9A9CF44","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/66/2d9db9ed.jpg","comment_is_top":false,"comment_ctime":1569045198,"is_pvip":false,"replies":[{"id":"52201","content":"一个直观的解释就是太多ftp连接了，我google了一下，似乎还有被动连接和主动连接模式的问题，建议你看一下。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1569407178,"ip_address":"","comment_id":135152,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569045198","product_id":100032701,"comment_content":"老师 请问FTP连接一半 服务端返回421是什么原因导致的 查了好久 ","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468069,"discussion_content":"一个直观的解释就是太多ftp连接了，我google了一下，似乎还有被动连接和主动连接模式的问题，建议你看一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569407178,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133456,"user_name":"愚人","can_delete":false,"product_type":"c1","uid":1355952,"ip_address":"","ucode":"40DE41849EF9EA","user_header":"https://static001.geekbang.org/account/avatar/00/14/b0/b0/30b29949.jpg","comment_is_top":false,"comment_ctime":1568581712,"is_pvip":false,"replies":[{"id":"51617","content":"我认为还是会回到CLOSED状态，在LAST ACK状态下的等待ACK等不到，应该有容错处理逻辑。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1568886678,"ip_address":"","comment_id":133456,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568581712","product_id":100032701,"comment_content":"如果client端在close之后没有sleep直接exit退出，也就是client发送完FIN后不再等待server的FIN（也不会回应FIN ACK）， server端在LAST ACK状态下以什么形式退出？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467392,"discussion_content":"我认为还是会回到CLOSED状态，在LAST ACK状态下的等待ACK等不到，应该有容错处理逻辑。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568886678,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133266,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1568471254,"is_pvip":false,"replies":[{"id":"51637","content":"嗯","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1568888587,"ip_address":"","comment_id":133266,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568471254","product_id":100032701,"comment_content":"初学了c 想把基础知识补一下 <br>看到linux内核 第三版 p32 信号与进程间的通信 <br>想起了老师的课后提问 <br>原来这个SIG_是内核和进程间的通信","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467325,"discussion_content":"嗯","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568888587,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133075,"user_name":"Geek_ca852b","can_delete":false,"product_type":"c1","uid":1635879,"ip_address":"","ucode":"A7BC016F082ED7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ehynTrcwwYpicw3FxYJYF0zH1Ric2Trtf3CXpHAiaD85KeR0Vh08UCicwXjZDxogOeXjmEZEfibxImkaUUWRJjKyfgA/132","comment_is_top":false,"comment_ctime":1568347598,"is_pvip":false,"replies":[{"id":"51623","content":"直接从菜单中选择“Run-Run&quot;，然后找到想跑的应用程序名，就可以了。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1568887248,"ip_address":"","comment_id":133075,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568347598","product_id":100032701,"comment_content":"在CLion中如何运行啊？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467249,"discussion_content":"直接从菜单中选择“Run-Run&amp;quot;，然后找到想跑的应用程序名，就可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568887248,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":132812,"user_name":"Leon📷","can_delete":false,"product_type":"c1","uid":1219496,"ip_address":"","ucode":"B9BBD1EFAAE5A2","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/a8/6a391c66.jpg","comment_is_top":false,"comment_ctime":1568245609,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568245609","product_id":100032701,"comment_content":"_exit也可以的，就是更粗暴的一些","like_count":0},{"had_liked":false,"id":132748,"user_name":"Geek_Claire","can_delete":false,"product_type":"c1","uid":1621237,"ip_address":"","ucode":"796686B4E33EA5","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/KlRHXbAWiaqTUgibUF25O0iacTpaQvDfOuLq4I5XTK42ZyrEKojlJyBXXQ7z9G3Fznq7hlNibK7jrjr5xia6BuCYIfg/132","comment_is_top":false,"comment_ctime":1568212933,"is_pvip":false,"replies":[{"id":"51632","content":"看一下后面的那种序列图，会好很多。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1568887833,"ip_address":"","comment_id":132748,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568212933","product_id":100032701,"comment_content":"文中在close之后，输入方向不可读等输入方向、不可读指的都是那个socket，不可读是close方不可读取对方，还是对方不可读close方，这里感觉有点绕和晕","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467104,"discussion_content":"看一下后面的那种序列图，会好很多。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568887833,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131371,"user_name":"Geek_Claire","can_delete":false,"product_type":"c1","uid":1621237,"ip_address":"","ucode":"796686B4E33EA5","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/KlRHXbAWiaqTUgibUF25O0iacTpaQvDfOuLq4I5XTK42ZyrEKojlJyBXXQ7z9G3Fznq7hlNibK7jrjr5xia6BuCYIfg/132","comment_is_top":false,"comment_ctime":1567732738,"is_pvip":false,"replies":[{"id":"50816","content":"要send两次，一次会拿到RST信号，第二次就会SIGPIPE。不过，不同版本的UNIX实现是不同的，稍后你会看到，Linux下其实并不会这样。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1568195105,"ip_address":"","comment_id":131371,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1567732738","product_id":100032701,"comment_content":"客户端close调用后 ，服务端对FIN进行ACK后，只能将缓存中的数据发送完毕后发送FIN，如果再调用send发送其他数据 就会触发SIGPIPE 是这样吗？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466417,"discussion_content":"要send两次，一次会拿到RST信号，第二次就会SIGPIPE。不过，不同版本的UNIX实现是不同的，稍后你会看到，Linux下其实并不会这样。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568195105,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2224386,"avatar":"https://static001.geekbang.org/account/avatar/00/21/f1/02/96082034.jpg","nickname":"Guchen","note":"","ucode":"9BD34F616F167A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":315467,"discussion_content":"我觉得服务端对FIN进行ACK之后，在发送自身的FIN之前（注意是之前不是之后）能否发送数据给对端取决于对端有没有关闭读（对于close是不可读不可写，shutdown可以选择关闭读或写），如果对端关闭读了，那么服务端在发送自身的FIN之前发送的第一个数据包会使得对端回送一个RST包，此时服务端知道对端已经关闭读了，如果再尝试调用write会触发SIGPIPE信号（向没有读用户的管道执行写操作）终止服务端进程。服务端的FIN包是在服务端调用close之后发送的，close会将服务端连接设置为不可读写，此时的行为应该和写一个已经关闭的套接字是一致的，具体是啥没试过，猜测是出发SIGPIPE","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603279195,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131267,"user_name":"wyf2317","can_delete":false,"product_type":"c1","uid":1236837,"ip_address":"","ucode":"7F3E61A6188B39","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ub4icibeRLzff8Nf6ORsolib9KHtmeu3d4cCCAFd3Xgah3v78WfDYQB7WKq9iaIPXPwHBxw7mkBP9wYxDGMT9m1Rbw/132","comment_is_top":false,"comment_ctime":1567687088,"is_pvip":true,"replies":[{"id":"50823","content":"操作系统还是很勤恳的。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1568195240,"ip_address":"","comment_id":131267,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567687088","product_id":100032701,"comment_content":"程序结束，系统会帮忙料理后事。关闭所有已打卡的文件描述符。","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466358,"discussion_content":"操作系统还是很勤恳的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568195240,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130975,"user_name":"独孤股诀","can_delete":false,"product_type":"c1","uid":1605570,"ip_address":"","ucode":"D44511F1D7CC02","user_header":"","comment_is_top":false,"comment_ctime":1567587280,"is_pvip":false,"replies":[{"id":"50831","content":"请问写数据太多以后，RST之后的服务器端程序是什么状态？可以描述的更详细一点么。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1568195707,"ip_address":"","comment_id":130975,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567587280","product_id":100032701,"comment_content":"老师，之前遇到一个半关闭的问题。如果写入的数据量不多，跟您讲课的现象一样。但如果数据太多的话，也会收到服务器的RST信号，但服务器方面并没有对流量多少进行任何控制，请问什么可能会是什么原因呢?","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466225,"discussion_content":"请问写数据太多以后，RST之后的服务器端程序是什么状态？可以描述的更详细一点么。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568195707,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129750,"user_name":"不动声色满心澎湃","can_delete":false,"product_type":"c1","uid":1621658,"ip_address":"","ucode":"80D8F9E49AF7C2","user_header":"https://static001.geekbang.org/account/avatar/00/18/be/9a/b0b89be3.jpg","comment_is_top":false,"comment_ctime":1567240198,"is_pvip":false,"replies":[{"id":"51757","content":"已经在答疑篇统一回复了。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1568960653,"ip_address":"","comment_id":129750,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1567240198","product_id":100032701,"comment_content":"几个问题：1.代码运行结果是先显示hi data1。之后才接收到标准输入的close 为什么时序图中画的是先close才接收到hi data1。2.当一方主动close之后 另一方发送数据的时候收到rst。主动方缓冲区应该把这个数据丢弃了吧，应用层应该读不到了吧。3代码中sigpipe的动作不是忽略吗？为什么会退出。4之前说主动调用socket的那方关闭了写端，但是还没关闭读端。这时候socket再读到数据是不是就是rst 然后sigpipe 如果是这样的话 还不如一次性把读写全部关闭了呀 5.很大问题结果和分析貌似对不上。这对我们本来就很疑惑的人会越来越疑惑","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465628,"discussion_content":"已经在答疑篇统一回复了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568960653,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1621658,"avatar":"https://static001.geekbang.org/account/avatar/00/18/be/9a/b0b89be3.jpg","nickname":"不动声色满心澎湃","note":"","ucode":"80D8F9E49AF7C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6990,"discussion_content":"我想了解的是：如果客户端write但是还没发送出去然后调用close 这份数据如何处理。其次先close然后再write。这份数据又是如何处理。我理不清。最后直接退出进程。是直接发fin还是会先把发送缓冲区数据发出去再发fin","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567242308,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":128626,"user_name":"若明子","can_delete":false,"product_type":"c1","uid":1398125,"ip_address":"","ucode":"5E02B1CC342303","user_header":"https://static001.geekbang.org/account/avatar/00/15/55/6d/f18510a7.jpg","comment_is_top":false,"comment_ctime":1566916071,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566916071","product_id":100032701,"comment_content":"close和shutdown对fin的发出时机应该是一样的","like_count":0},{"had_liked":false,"id":128584,"user_name":"传说中的成大大","can_delete":false,"product_type":"c1","uid":1236766,"ip_address":"","ucode":"103543D6E706BF","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","comment_is_top":false,"comment_ctime":1566908698,"is_pvip":false,"replies":[{"id":"47919","content":"你是对的","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1567004842,"ip_address":"","comment_id":128584,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566908698","product_id":100032701,"comment_content":"在close和shutdown的区别中 第3点我觉得应该要强度是shutdown写时才会立即执行fin","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465005,"discussion_content":"你是对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567004842,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":128578,"user_name":"传说中的成大大","can_delete":false,"product_type":"c1","uid":1236766,"ip_address":"","ucode":"103543D6E706BF","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","comment_is_top":false,"comment_ctime":1566908175,"is_pvip":false,"replies":[{"id":"47920","content":"哦，只是我模拟一下&quot;慢慢&quot;处理的过程。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1567004873,"ip_address":"","comment_id":128578,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566908175","product_id":100032701,"comment_content":"我有个疑问 我输入&quot;close&quot; 后面的代码会执行sleep(6) 我不太明白为什么要sleep然后我尝试把sleep注释掉服务器得到了同样的sigpipe信号","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465002,"discussion_content":"哦，只是我模拟一下&amp;quot;慢慢&amp;quot;处理的过程。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567004873,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":128294,"user_name":"knull","can_delete":false,"product_type":"c1","uid":1043484,"ip_address":"","ucode":"3BFECF3D29F40C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/1c/d323b066.jpg","comment_is_top":false,"comment_ctime":1566869339,"is_pvip":false,"replies":[{"id":"47924","content":"多路复用不一定要非阻塞。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1567005165,"ip_address":"","comment_id":128294,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1566869339","product_id":100032701,"comment_content":"老师你好，你说到多路复用了，我想问的是：多路复用是不是必须要非阻塞的？我看epoll一般都会设置noblock，但是select好像不需要设置","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464882,"discussion_content":"多路复用不一定要非阻塞。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567005165,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1043484,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ec/1c/d323b066.jpg","nickname":"knull","note":"","ucode":"3BFECF3D29F40C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6692,"discussion_content":"多谢老师。那为啥一般都写成非阻塞？或者说，多路复用这里，非阻塞和阻塞，怎么选择？好处在哪？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567054423,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":128200,"user_name":"安排","can_delete":false,"product_type":"c1","uid":1260026,"ip_address":"","ucode":"F78CFA9624CAEF","user_header":"https://static001.geekbang.org/account/avatar/00/13/39/fa/a7edbc72.jpg","comment_is_top":false,"comment_ctime":1566862013,"is_pvip":false,"replies":[{"id":"47925","content":"当然会，这个只是说别再往我这个方向发送数据了，已经在发送缓冲区的数据还是要慢慢有效的发送出去的。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1567005223,"ip_address":"","comment_id":128200,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1566862013","product_id":100032701,"comment_content":"调用shutdown结束发送时，发送缓冲区剩余数据会被发出去，这发出去的数据如果对端没收到怎么办？也就是调用shutdown还会等待这些数据的ack吗？  还是说一股脑扔出去就不管了？我理解的是依然会等待ack保证可靠传输。","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464839,"discussion_content":"当然会，这个只是说别再往我这个方向发送数据了，已经在发送缓冲区的数据还是要慢慢有效的发送出去的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567005223,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1236766,"avatar":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","nickname":"传说中的成大大","note":"","ucode":"103543D6E706BF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6457,"discussion_content":"个人觉得应该不会再等待了吧毕竟我想断开连接了 顶多等等fin的ack","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566909819,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":128199,"user_name":"安排","can_delete":false,"product_type":"c1","uid":1260026,"ip_address":"","ucode":"F78CFA9624CAEF","user_header":"https://static001.geekbang.org/account/avatar/00/13/39/fa/a7edbc72.jpg","comment_is_top":false,"comment_ctime":1566861872,"is_pvip":false,"replies":[{"id":"47926","content":"你可以试验一下。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1567005247,"ip_address":"","comment_id":128199,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566861872","product_id":100032701,"comment_content":"exit(0)不会导致发送缓冲区数据被发送，而是直接发送FIN？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464838,"discussion_content":"你可以试验一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567005247,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":128066,"user_name":"Linuxer","can_delete":false,"product_type":"c1","uid":1153978,"ip_address":"","ucode":"272D9D8089C3D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/ba/333b59e5.jpg","comment_is_top":false,"comment_ctime":1566827085,"is_pvip":false,"replies":[{"id":"47931","content":"对端是不是先关闭了? 可以抓包定位一下。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1567005418,"ip_address":"","comment_id":128066,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1566827085","product_id":100032701,"comment_content":"另外有个问题向各位请教一下，最近有个项目测试时发现ifdown 网卡时，recv返回了0，导致连接被正常关闭，而我们认为这种情况recv不应该返回0，所以想请问有什么样的文档可以指导这方面的问题定位，谢谢！","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464778,"discussion_content":"对端是不是先关闭了? 可以抓包定位一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567005418,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1153978,"avatar":"https://static001.geekbang.org/account/avatar/00/11/9b/ba/333b59e5.jpg","nickname":"Linuxer","note":"","ucode":"272D9D8089C3D6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6664,"discussion_content":"谢谢回复！这个问题最开始是因为客户端卡在接收上，连接状态是正常的。因为是服务端down过网卡，在服务端已经查不到该连接，查日志发现是recv返回了0，导致连接被关闭。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567042236,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":128064,"user_name":"Linuxer","can_delete":false,"product_type":"c1","uid":1153978,"ip_address":"","ucode":"272D9D8089C3D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/ba/333b59e5.jpg","comment_is_top":false,"comment_ctime":1566826895,"is_pvip":false,"replies":[{"id":"47932","content":"嗯，我写错了，程序会修改掉","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1567005452,"ip_address":"","comment_id":128064,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566826895","product_id":100032701,"comment_content":"第一个问题是因为进程退出会回收所有的文件描述符，应该会针对所有文件描述符调用close<br>第二个问题SIGPIPE的默认行为应该是Term，文中应该设置忽略吧？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464776,"discussion_content":"嗯，我写错了，程序会修改掉","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567005452,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":128005,"user_name":"传说中的成大大","can_delete":false,"product_type":"c1","uid":1236766,"ip_address":"","ucode":"103543D6E706BF","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","comment_is_top":false,"comment_ctime":1566819887,"is_pvip":false,"replies":[{"id":"47933","content":"我为了显示好看，不想一堆换行 ：）","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1567005475,"ip_address":"","comment_id":128005,"utype":1}],"discussion_count":4,"race_medal":0,"score":"1566819887","product_id":100032701,"comment_content":"其实我一直有一个疑问为何总是要把最后一个字符\\n替换成0","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464748,"discussion_content":"我为了显示好看，不想一堆换行 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567005475,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1170784,"avatar":"https://static001.geekbang.org/account/avatar/00/11/dd/60/eae432c6.jpg","nickname":"yusuf","note":"","ucode":"9F32149B2ADDA0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6309,"discussion_content":"&#39;\\n&#39;是回车符。0也就是字符&#39;\\0&#39;，是字符串的结束标志。c语言中的字符串一般用字符数组来表示，像char buf[1024] = {&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;\\0&#39;, &#39;d&#39;, &#39;e&#39;}。buf中字符串的值是从buf[0]往后，一直到&#39;\\0&#39;，也就是&#34;abc&#34;。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1566829450,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1236766,"avatar":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","nickname":"传说中的成大大","note":"","ucode":"103543D6E706BF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6455,"discussion_content":"你的意思是说在这里也是用字符0来表示一个完整的发送？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566909478,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1170784,"avatar":"https://static001.geekbang.org/account/avatar/00/11/dd/60/eae432c6.jpg","nickname":"yusuf","note":"","ucode":"9F32149B2ADDA0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1236766,"avatar":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","nickname":"传说中的成大大","note":"","ucode":"103543D6E706BF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6465,"discussion_content":"&#39;\\n&#39;换为0只是为了格式化，为了将字符串中的&#39;\\n&#39;换行符去掉而已，如果不去掉&#39;\\n&#39;的话，对端输出时会多一个空行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566911605,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":6455,"ip_address":""},"score":6465,"extra":""}]}]},{"had_liked":false,"id":127931,"user_name":"在路上","can_delete":false,"product_type":"c1","uid":1619588,"ip_address":"","ucode":"C11D567FCB8CD6","user_header":"https://static001.geekbang.org/account/avatar/00/18/b6/84/1f60f267.jpg","comment_is_top":false,"comment_ctime":1566811306,"is_pvip":false,"replies":[{"id":"47934","content":"其他的子进程也可以对这个套接字进行操作啊","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1567005513,"ip_address":"","comment_id":127931,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566811306","product_id":100032701,"comment_content":"有个问题 创建套接字的时候  比如有四个进程 那我的套接字引用技术就是4了  close的时候 只是在单独的进程中close了  其他的啥时候关闭的？？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464712,"discussion_content":"其他的子进程也可以对这个套接字进行操作啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567005513,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127928,"user_name":"在路上","can_delete":false,"product_type":"c1","uid":1619588,"ip_address":"","ucode":"C11D567FCB8CD6","user_header":"https://static001.geekbang.org/account/avatar/00/18/b6/84/1f60f267.jpg","comment_is_top":false,"comment_ctime":1566811171,"is_pvip":false,"replies":[{"id":"47935","content":"这个不是共享内存的","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1567005572,"ip_address":"","comment_id":127928,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1566811171","product_id":100032701,"comment_content":"老师 ，我主进程fork出四个子进程，然后其中一个子进程创建的套接字 是共享内存的吗","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464709,"discussion_content":"这个不是共享内存的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567005572,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2184325,"avatar":"https://static001.geekbang.org/account/avatar/00/21/54/85/ab5148ce.jpg","nickname":"duckman","note":"","ucode":"0184C26C4B6C1B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332507,"discussion_content":"4个子进程应该可以分别绑定这个套接字做监听，从中取TCP连接，但是不属于&#34;共享内存&#34;。实际上还是操作系统在管，子进程只是从队列中拿消息。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607244768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127921,"user_name":"中年男子","can_delete":false,"product_type":"c1","uid":1039204,"ip_address":"","ucode":"027C86B3370150","user_header":"https://static001.geekbang.org/account/avatar/00/0f/db/64/06d54a80.jpg","comment_is_top":false,"comment_ctime":1566810428,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1566810428","product_id":100032701,"comment_content":"exit(0),退出进程，关闭描述符， 发送一个FIN<br>SIG的默认处理一般是终止进程，但是有些信号需要捕获然后做些额外的工作， 不能用默认处置","like_count":0},{"had_liked":false,"id":127763,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1566788904,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566788904","product_id":100032701,"comment_content":"思考题<br>1.应该是exit后，操作系统内核协议栈会接管后续的处理。<br>2.默认处理会exit非0，也就是错误，在标准错误上输出信息。自定义函数处理则可以根据自己的需要自行处理。","like_count":0},{"had_liked":false,"id":127761,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1566788713,"is_pvip":false,"replies":[{"id":"47938","content":"那当然是作为客户端的浏览器","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1567005837,"ip_address":"","comment_id":127761,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566788713","product_id":100032701,"comment_content":"老师你好，请问在浏览器中，TCP关闭是由哪一端发起的？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464643,"discussion_content":"那当然是作为客户端的浏览器","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567005837,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127740,"user_name":"程序水果宝","can_delete":false,"product_type":"c1","uid":1371633,"ip_address":"","ucode":"1700DDFE073A56","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqyicZYyW7ahaXgXUD8ZAS8x0t8jx5rYLhwbUCJiawRepKIZfsLdkxdQ9XQMo99c1UDibmNVfFnAqwPg/132","comment_is_top":false,"comment_ctime":1566786637,"is_pvip":false,"replies":[{"id":"47939","content":"可以自定义的。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1567005869,"ip_address":"","comment_id":127740,"utype":1}],"discussion_count":5,"race_medal":0,"score":"1566786637","product_id":100032701,"comment_content":"signal（SIGINT，sig_pipe）是不是应该改为signal（SIGPIPE，sig_pipe），处理的应该是","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464631,"discussion_content":"可以自定义的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567005869,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1398125,"avatar":"https://static001.geekbang.org/account/avatar/00/15/55/6d/f18510a7.jpg","nickname":"若明子","note":"","ucode":"5E02B1CC342303","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6473,"discussion_content":"对啊，所以举例感觉莫名其妙","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1566915845,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1236766,"avatar":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","nickname":"传说中的成大大","note":"","ucode":"103543D6E706BF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6456,"discussion_content":"那是笔误","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566909603,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1569581,"avatar":"https://static001.geekbang.org/account/avatar/00/17/f3/2d/1a5f7542.jpg","nickname":"0ver10@d","note":"","ucode":"36721BC40C328A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6357,"discussion_content":"应该是笔误","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566868786,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1371633,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqyicZYyW7ahaXgXUD8ZAS8x0t8jx5rYLhwbUCJiawRepKIZfsLdkxdQ9XQMo99c1UDibmNVfFnAqwPg/132","nickname":"程序水果宝","note":"","ucode":"1700DDFE073A56","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6209,"discussion_content":"处理的信号应该是SIGPIPE才对吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566786821,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}