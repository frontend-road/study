{"id":4856,"title":"08 | 解密“看了又看”和“买了又买”","content":"<p>不管你有没有剁过手，你对“看了这个商品的还看了”这样的推荐形式一定不陌生。无论是猫还是狗，或者是其他电商网站，这样的推荐产品可以说是推荐系统的标配了。</p>\n<p>类似的还有，如点评标记类网站的“喜欢了这部电影的还喜欢了”，社交媒体网站的“关注了这个人还关注了”，这些都只是文案类似，动词不同而已。</p>\n<p>这样的推荐形式背后都是来自一个古老的推荐算法，叫做基于物品的协同过滤，通常也被叫作Item-Based，因为后者更容易搜索到相关的文章，所以被更多地提及。</p>\n<p>如果做推荐系统不知道“基于物品的协同过滤”，那等同于做程序员不懂得冒泡排序。这个朴素的算法，就像是乔峰大战聚贤庄所用的“太祖长拳”一样，简单直接有效，读过高中就懂，用得好也能够战倒绝大多数的武林豪杰。今天，我就来和你聊聊这个朴素的算法。</p>\n<h2>基于物品（Item-Based）的八卦</h2>\n<p>基于物品的协同过滤算法诞生于1998年，是由亚马逊首先提出的，并在2001年由其发明者发表了相应的论文（ Item-Based Collaborative Filtering Recommendation Algorithms ）。</p>\n<p>这篇论文在Google学术上引用数已近7000，并且在WWW2016大会上被授予了“时间检验奖”，颁奖词是：“这篇杰出的论文深深地影响了实际应用”。历经了15年后仍然在发光发热，这个奖它显然受之无愧。</p>\n<p>虽然今天各家公司都在使用这个算法，好像它是一个公共资源一样，然而并不是这样，亚马逊早在1998年，也就是论文发表的三年前就申请了专利。</p>\n<p>讲完了算法的八卦，开始说正事了。</p>\n<h2>基于物品（Item-Based）原理</h2>\n<p>在基于物品的协同过滤出现之前，信息过滤系统最常使用的是基于用户的协同过滤。基于用户的协同过滤首先计算相似用户，然后再根据相似用户的喜好推荐物品，这个算法有这么几个问题：</p>\n<ol>\n<li>用户数量往往比较大，计算起来非常吃力，成为瓶颈；</li>\n<li>用户的口味其实变化还是很快的，不是静态的，所以兴趣迁移问题很难反应出来；</li>\n<li>数据稀疏，用户和用户之间有共同的消费行为实际上是比较少的，而且一般都是一些热门物品，对发现用户兴趣帮助也不大。</li>\n</ol>\n<p>和基于用户的不同，基于物品的协同过滤首先计算相似物品，然后再根据用户消费过、或者正在消费的物品为其推荐相似的，基于物品的算法怎么就解决了上面这些问题呢？</p>\n<p>首先，物品的数量，或者严格的说，可以推荐的物品数量往往少于用户数量；所以一般计算物品之间的相似度就不会成为瓶颈。</p>\n<p>其次，物品之间的相似度比较静态，它们变化的速度没有用户的口味变化快；所以完全解耦了用户兴趣迁移这个问题。</p>\n<p>最后，物品对应的消费者数量较大，对于计算物品之间的相似度稀疏度是好过计算用户之间相似度的。</p>\n<p>根据我在上一篇文章中所说，协同过滤最最依赖的是用户物品的关系矩阵，基于物品的协同过滤算法也不能例外，它的基本步骤是这样的：</p>\n<ol>\n<li>构建用户物品的关系矩阵，矩阵元素可以是用户的消费行为，也可以是消费后的评价，还可以是对消费行为的某种量化如时间、次数、费用等；</li>\n<li>假如矩阵的行表示物品，列表示用户的话，那么就两两计算行向量之间的相似度，得到物品相似度矩阵，行和列都是物品；</li>\n<li>产生推荐结果，根据推荐场景不同，有两种产生结果的形式。一种是为某一个物品推荐相关物品，另一种是在个人首页产生类似“猜你喜欢”的推荐结果。不要急，稍后我会分别说。</li>\n</ol>\n<h3>计算物品相似度</h3>\n<p>前面较为笼统地说要计算物品之间的相似度，现在详细说说这块。从用户物品关系矩阵中得到的物品向量长什么样子呢？我来给你描述一下：</p>\n<ol>\n<li>它是一个稀疏向量；</li>\n<li>向量的维度是用户，一个用户代表向量的一维，这个向量的总共维度是总用户数量；</li>\n<li>向量各个维度的取值是用户对这个物品的消费结果，可以是行为本身的布尔值，也可以是消费行为量化如时间长短、次数多少、费用大小等，还可以是消费的评价分数；</li>\n<li>没有消费过的就不再表示出来，所以说是一个稀疏向量。</li>\n</ol>\n<p>接下来就是如何两两计算物品的相似度了，一般选择余弦相似度，当然还有其他的相似度计算法方法也可以。计算公式如下：</p>\n<p>$$sim(i,j) = \\frac{\\sum_{k=1}^{n}{R_{ik} * R_{jk}}} { \\sqrt{\\sum_{k=1}^{n}{R_{ik}^{2}}} \\sqrt{\\sum_{k=1}^{n}{R_{jk}^{2}}}}$$</p>\n<p>用文字解释一下这个公式：</p>\n<blockquote>\n<p>分母是计算两个物品向量的长度，求元素值的平方和再开方。分子是两个向量的点积，相同位置的元素值相乘再求和。</p>\n</blockquote>\n<p>很简单，因为这个公式出自中学数学课本，所以我刚才说读过高中就懂。</p>\n<p>这个公式的物理意义就是计算两个向量的夹角余弦值，相似度为1时，对应角度是0，好比时如胶似漆，相似度为0时，对应角度为90度，毫不相干，互为路人甲。</p>\n<p>看上去计算量很大，貌似每一个求和的复杂度都是和向量维度、也就是用户数量一样的。但是别忘了，前面我说过他们都是稀疏向量，也就是向量中绝大多数值都是0，求和时不用算，点积时更不用算，甚至求点积时只用管两个物品的公共用户，只是少许几个乘积而已。</p>\n<p>物品之间的相似度计算是这个算法最可以改进的地方。通常的改进方向有下面两种。</p>\n<p><strong>1. 物品中心化。</strong>把矩阵中的分数，减去的是物品分数的均值；先计算每一个物品收到评分的均值，然后再把物品向量中的分数减去对应物品的均值。这样做的目的是什么呢？去掉物品中铁杆粉丝群体的非理性因素，例如一个流量明星的电影，其脑残粉可能会集体去打高分，那么用物品的均值来中心化就有一定的抑制作用。</p>\n<p><strong>2. 用户中心化。</strong>把矩阵中的分数，减去对应用户分数的均值；先计算每一个用户的评分均值，然后把他打过的所有分数都减去这个均值。</p>\n<p>这样做的目的又是什么呢？每个人标准不一样，有的标准严苛，有的宽松，所以减去用户的均值可以在一定程度上仅仅保留了偏好，去掉了主观成分。</p>\n<p>上面提到的相似度计算方法，不只是适用于评分类矩阵，也适用于行为矩阵。所谓行为矩阵，即矩阵元素为0或者1的布尔值，也就是在前面的专栏中讲过的隐式反馈。隐式反馈取值特殊，有一些基于物品的改进推荐算法无法应用，比如著名的Slope One算法。</p>\n<!-- [[[read_end]]] -->\n<h3>计算推荐结果</h3>\n<p>在得到物品相似度之后，接下来就是为用户推荐他可能会感兴趣的物品了，基于物品的协同过滤，有两种应用场景。</p>\n<p><strong>第一种属于TopK推荐，形式上也常常属于类似“猜你喜欢”这样的。</strong></p>\n<p>出发方式是当用户访问首页时，汇总和“用户已经消费过的物品相似”的物品，按照汇总后分数从高到低推出。汇总的公式是这样的：</p>\n<p>$$\\hat{R_{ui}} = \\frac{\\sum_{j=1}^{m}{sim(i,j)* R_{uj}}}{\\sum_{j=1}^{m}{sim(i,j)}}$$</p>\n<p>这个公式描述一下，核心思想就和基于用户的推荐算法一样，用相似度加权汇总。</p>\n<p>要预测一个用户u对一个物品i的分数，遍历用户u评分过的所有物品，假如一共有m个，每一个物品和待计算物品i的相似度乘以用户的评分，这样加权求和后，除以所有这些相似度总和，就得到了一个加权平均评分，作为用户u对物品i的分数预测。</p>\n<p>和基于物品的推荐一样，我们在计算时不必对所有物品都计算一边，只需要按照用户评分过的物品，逐一取出和它们相似的物品出来就可以了。</p>\n<p>这个过程都是离线完成后，去掉那些用户已经消费过的，保留分数最高的k个结果存储。当用户访问首页时，直接查询出来即可。</p>\n<p><strong>第二种属于相关推荐，也就是我们今天专栏题目所指的场景。</strong></p>\n<p>这类推荐不需要提前合并计算，当用户访问一个物品的详情页面时，或者完成一个物品消费的结果面，直接获取这个物品的相似物品推荐，就是“看了又看”或者“买了又买”的推荐结果了。</p>\n<h3>Slope One算法</h3>\n<p>经典的基于物品推荐，相似度矩阵计算无法实时更新，整个过程都是离线计算的，而且还有另一个问题，相似度计算时没有考虑相似度的置信问题。例如，两个物品，他们都被同一个用户喜欢了，且只被这一个用户喜欢了，那么余弦相似度计算的结果是1，这个1在最后汇总计算推荐分数时，对结果的影响却最大。</p>\n<p>Slope One算法针对这些问题有很好的改进。在2005年首次问世，Slope One算法专门针对评分矩阵，不适用于行为矩阵。Slope One算法计算的不是物品之间的相似度，而是计算的物品之间的距离，相似度的反面。举个例子就一目了然，下面是一个简单的评分矩阵：</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/3b/cb/3b7da53ac1304a3a5d8211648ec19dcb.png?wh=664*332\" alt=\"\" /></p>\n<p>这个矩阵反应了这些事实：用户1给物品A、B、C都评分了，分别是5，3，2；用户2给物品A、B评分了，分别是3、4；用户3给物品B、C评分了，分别是2、5。现在首先来两两计算物品之间的差距：</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/7d/8f/7d9e2189fccd9d186232c7f3ba7f858f.png?wh=710*334\" alt=\"\" /></p>\n<p>括号里表示两个物品的共同用户数量，代表两个物品差距的置信程度。比如物品A和物品B之间的差距是0.5，共同用户数是2，反之，物品B和物品A的差距是-0.5，共同用户数还是2。知道这个差距后，就可以用一个物品去预测另一个物品的评分。</p>\n<p>如果只知道用户3给物品B的评分是2，那么预测用户3给物品A的评分呢就是2.5，因为从物品B到物品A的差距是0.5。</p>\n<p>在此基础上继续推进，如果知道用户给多个物品评分了，怎么汇总这些分数呢？</p>\n<p>方法是把单个预测的分数按照共同用户数加权求平均。比如现在知道用户3不但给物品B评分为2，还给物品C评分为5，物品B对物品A的预测是2.5分，刚才计算过了，物品C给物品A的预测是8分，再加权平均。</p>\n<p>$$ \\frac{8*1 + 2.5 * 2 }{(1+2)} = 4.33 $$</p>\n<p>就得到了推荐分数为4.33分。是不是很简单？</p>\n<h2>总结</h2>\n<p>今天我们在基于用户的协同过滤基础上介绍了比较常见的一个算法：基于物品的协同过滤。这个方法常常在电商网站上见到，“买了又买”“看了又看”这样的相关推荐，都是由这个推荐算法产生。</p>\n<p>最后我们介绍了一个改良版的基于物品推荐算法Slope One。这里也留下了一个问题给你：为什么说Slope One可以做到在线更新呢？欢迎留言讨论。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/87/b0/873b086966136189db14874181823fb0.jpg?wh=1110*549\" alt=\"\" /></p>\n","comments":[{"had_liked":false,"id":6042,"user_name":"四夕英河","can_delete":false,"product_type":"c1","uid":1089337,"ip_address":"","ucode":"376F40E8589989","user_header":"","comment_is_top":false,"comment_ctime":1524296592,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"211977694096","product_id":100005101,"comment_content":"Slope One算法那里感觉说的不够清楚，说下小白的意见，抛砖迎玉。<br><br>第一，物品A与物品B之间的差距是指平均下来A与B的评分差距，并且这里还是有方向的，A与B的评分差距和B与A的评分差距互为相反数。比如这里A与B的评分差距可以理解为A物品的评分平均比B物品的评分高0.5分(注意这里的“平均”)，而B与A的评分差距则是-0.5分。<br><br>第二，矩阵一般都是先行后列，比如矩阵A[1，2]是指第一行的第二列，但是这里的矩阵是相反的，比如A与B的评分差距，本来应该是在第一行第二列，但是这里是在第二行第一列。<br><br>我想这评论样第一位那位同学的问题应该可以解决。那个同学说的C与B的评分差距在原文中其实不是1(1)，而是-1(1)，并且准确的评分应该是1(2)，因为按照你说的是C与B，不是B与C。","like_count":50,"discussions":[{"author":{"id":1984292,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/47/24/de13e1c6.jpg","nickname":"小栗Aili","note":"","ucode":"1B8700C22AA358","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293762,"discussion_content":"感觉是写错了，第二行的最后应该是(2+5-3-2)/2，现在看着是(2+5-3-4-2)/2","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595660918,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":4160,"user_name":"AbyssKR","can_delete":false,"product_type":"c1","uid":1025948,"ip_address":"","ucode":"6ADAC021039110","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a7/9c/be5dffb6.jpg","comment_is_top":false,"comment_ctime":1521633996,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"87420979916","product_id":100005101,"comment_content":"邢老师，两两计算物品间差距，物品C与物品B间为什么不是 -1(2) 而是 1(1) 呢?","like_count":19},{"had_liked":false,"id":4228,"user_name":"林彦","can_delete":false,"product_type":"c1","uid":1032615,"ip_address":"","ucode":"5094CC6ED7B40C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c1/a7/5e66d331.jpg","comment_is_top":false,"comment_ctime":1521734898,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"70241211634","product_id":100005101,"comment_content":"谢谢邢无刀老师的分享。你的分享很有价值，能写出来很不容易。<br><br>1. &quot;只需要按照用户评分过的物品，逐一取出和它们相似的物品出来就可以了&quot;这里取出物品的相似度需不需要一个阈值来减少取出(用来计算)的物品数目？按照前文物品相似度的计算公式，只要2个物品有公共用户(的消费结果或行为)，这个物品相似度值就为非零值。实际应用中物品相似度的非零值会不会数量还是很大的，这个数量对TopK推荐的计算耗时影响大吗，如从几秒钟变成分钟级？<br><br>2. &quot;上面提到的相似度计算方法，不只是适用于评分类矩阵，也适用于行为矩阵。所谓行为矩阵，即矩阵元素为 0 或者 1 的布尔值&quot;，如果这个相似度计算方法应用于行为矩阵，计算中使用的均值是一个介于0和1之间的浮点数，减去均值后矩阵的值从0或1(整型值或布尔值)变成了浮点数值。是这样吗？<br><br>3. 请问“两两物品之间的差距”的距离计算用的是Slope One特有的距离计算公式？我看了一篇文章https:&#47;&#47;arxiv.org&#47;pdf&#47;1202.1112.pdf，里面的公式(28)是计算距离的。物品 A 和物品 B 之间的差距是:((5-3)+(3-4))&#47;2=0.5，物品A和物品C之间的差距是:(5-2)&#47;1=3。与文中相符。<br><br>4. 文中最后的加权平均我的理解是上面引文中的公式(30)<br><br>5. Slope One 可以做到在线更新我的理解是每当有一个新的用户评分时，只需要把原来该用户对于这个物品的评分值从推荐分数替换成实际分数，然后更新物品间距离矩阵中包含这个物品的行和列即可，每个矩阵元素计算过程中以前的分子和分母值可以保留，只需往分子增加一个项目，分母加1即可更新。同时行或列的值只需计算一次，然后取相反数填到行列转置的位置。而相似度矩阵计算则需要遍历所有和这个物品有公共用户的物品的所有公共用户的评分，我的判断计算量还是要大不少的。","like_count":16},{"had_liked":false,"id":78804,"user_name":"萌面赵先生","can_delete":false,"product_type":"c1","uid":1170379,"ip_address":"","ucode":"CC51AB1C925E13","user_header":"https://static001.geekbang.org/account/avatar/00/11/db/cb/58f4b5d2.jpg","comment_is_top":false,"comment_ctime":1553242475,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"48797882731","product_id":100005101,"comment_content":"A和B的差距： (（5+3）-（3+4）)&#47;2 = 0.5；<br>A和C的差距：（5-2）&#47;1 = 3;<br>B和A的差距：（（3+4）-（5+3））&#47;2 = -0.5;<br>B和C的差距：（（3+2）-（2+5））&#47;2 = -1;<br>C和A的差距：（2-5）&#47;1 = -3;<br>C和B的差距：（（2+5）-（3+2））&#47;2 = 1；<br>如果按照此规则计算，表2中的B对C的差距应该是－1，C对B的差距应该是1，表2中是不是方反了？","like_count":12,"discussions":[{"author":{"id":1984292,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/47/24/de13e1c6.jpg","nickname":"小栗Aili","note":"","ucode":"1B8700C22AA358","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293764,"discussion_content":"感觉错了，应该是-1（2）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595661071,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":4126,"user_name":"Duo An","can_delete":false,"product_type":"c1","uid":1058085,"ip_address":"","ucode":"901C9802511B07","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/25/fb2ba003.jpg","comment_is_top":false,"comment_ctime":1521597236,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"35881335604","product_id":100005101,"comment_content":"现在的亚马逊网站用户和物品数据半年都在100Billion 量级 如何在这么大规模数据下做cf推荐？","like_count":8},{"had_liked":false,"id":4230,"user_name":"曾阿牛","can_delete":false,"product_type":"c1","uid":1049468,"ip_address":"","ucode":"29A294174EF06B","user_header":"https://static001.geekbang.org/account/avatar/00/10/03/7c/39ea8a23.jpg","comment_is_top":false,"comment_ctime":1521737895,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31586508967","product_id":100005101,"comment_content":"slope one 增量实时更新：一条用户物品评分对，仅影响到该用户历史消费过的物品与该物品的距离值（局部数据），且距离值是简单的统计值，存一些中间变量就可以增量更新","like_count":7},{"had_liked":false,"id":71818,"user_name":"Moo","can_delete":false,"product_type":"c1","uid":1347165,"ip_address":"","ucode":"5E9F29479A298C","user_header":"https://static001.geekbang.org/account/avatar/00/14/8e/5d/f66ba20c.jpg","comment_is_top":false,"comment_ctime":1551443146,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23026279626","product_id":100005101,"comment_content":"Slope One算法讲的不是很清楚。希望有更多例子。","like_count":6},{"had_liked":false,"id":48465,"user_name":"预见","can_delete":false,"product_type":"c1","uid":1200455,"ip_address":"","ucode":"39DEAEDE1BDB96","user_header":"https://static001.geekbang.org/account/avatar/00/12/51/47/6875debd.jpg","comment_is_top":false,"comment_ctime":1544448886,"is_pvip":false,"replies":[{"id":"17986","content":"图书正在编辑中，比专栏详细更多。","user_name":"作者回复","user_name_real":"刑无刀","uid":"1005376","ctime":1544798429,"ip_address":"","comment_id":48465,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14429350774","product_id":100005101,"comment_content":"老师讲的真不错，我一般看第一遍可能吸收百分之30，第二遍开始，自己写笔记，参透每一个概念和公式。基本能吸收85以上。第二遍花费的时间是第一遍的两倍多，最后豁然开朗，甚是欣慰！","like_count":3,"discussions":[{"author":{"id":1005376,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/40/777bfe30.jpg","nickname":"刑无刀","note":"","ucode":"496201BF63D49D","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432191,"discussion_content":"图书正在编辑中，比专栏详细更多。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544798429,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40252,"user_name":"王掌柜家的小二","can_delete":false,"product_type":"c1","uid":1124321,"ip_address":"","ucode":"FBAA0760FC8AD7","user_header":"https://static001.geekbang.org/account/avatar/00/11/27/e1/cbedb320.jpg","comment_is_top":false,"comment_ctime":1542586375,"is_pvip":false,"replies":[{"id":"15561","content":"你说的这个是所有推荐算法的工作流程。<br>Slopeone，你看一下代码，我这里有一个简单实现。<br>https:&#47;&#47;github.com&#47;xingwudao&#47;36&#47;blob&#47;master&#47;src&#47;cf&#47;slope_one.py","user_name":"作者回复","user_name_real":"刑无刀","uid":"1005376","ctime":1543242513,"ip_address":"","comment_id":40252,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10132520967","product_id":100005101,"comment_content":"想问老师一个问题：在应用slope one算法推荐时，先计算出某个用户未评分的所有物品的评分，然后根据推荐分数生成推荐列表，进而推荐——这样理解对吗？","like_count":2,"discussions":[{"author":{"id":1005376,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/40/777bfe30.jpg","nickname":"刑无刀","note":"","ucode":"496201BF63D49D","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429446,"discussion_content":"你说的这个是所有推荐算法的工作流程。\nSlopeone，你看一下代码，我这里有一个简单实现。\nhttps://github.com/xingwudao/36/blob/master/src/cf/slope_one.py","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543242513,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":4636,"user_name":"大猫星球","can_delete":false,"product_type":"c1","uid":1020167,"ip_address":"","ucode":"7AB650AA9FECF8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/91/07/17f9fe80.jpg","comment_is_top":false,"comment_ctime":1522290449,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10112225041","product_id":100005101,"comment_content":"这一刻，我默默的把丢掉的高中数学拿起来","like_count":3},{"had_liked":false,"id":4221,"user_name":"shoxx","can_delete":false,"product_type":"c1","uid":1063875,"ip_address":"","ucode":"A5A2FD6139B0F2","user_header":"","comment_is_top":false,"comment_ctime":1521727324,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10111661916","product_id":100005101,"comment_content":"Slope One最後試算的推薦分數是針對用戶C面向物品A的推薦分數嗎？靠著用戶C對B&amp;C的評分以及B對A、C對A的推薦分數去推估出來的？<br>請問那個8分與2.5分如何得出呢？","like_count":2},{"had_liked":false,"id":4120,"user_name":"叶晓锋","can_delete":false,"product_type":"c1","uid":1059032,"ip_address":"","ucode":"7A84CE1DB4AA88","user_header":"https://static001.geekbang.org/account/avatar/00/10/28/d8/356428c2.jpg","comment_is_top":false,"comment_ctime":1521594468,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10111529060","product_id":100005101,"comment_content":"看了又看买了又买非常有用，缺点是对于低频应用这部分数据比较少","like_count":2},{"had_liked":false,"id":5985,"user_name":"四夕英河","can_delete":false,"product_type":"c1","uid":1089337,"ip_address":"","ucode":"376F40E8589989","user_header":"","comment_is_top":false,"comment_ctime":1524218010,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5819185306","product_id":100005101,"comment_content":"把计算物品相似度那里的公式的假设说一下会更容易明白，假设物品i的特征向量有k维，设i的特征向量为Ri，Ri=(Ri1，Ri2，···，Rik); 物品j的特征向量有k维，设j的特征向量为Rj，Rj=(Rj1，Rj2，···，Rjk) ","like_count":1},{"had_liked":false,"id":321860,"user_name":"LUO FAN","can_delete":false,"product_type":"c1","uid":2088083,"ip_address":"","ucode":"538E81E6FC4015","user_header":"https://static001.geekbang.org/account/avatar/00/1f/dc/93/bdbc45cc.jpg","comment_is_top":false,"comment_ctime":1637071269,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637071269","product_id":100005101,"comment_content":"slope one 计算推荐结果需要物品之间的距离和物品之间的权重。只需要在新评分到来的时候分别更新这个物品和其他物品的距离以及这个物品和其他物品的权重，然后根据新的距离和权重计算分数。","like_count":0},{"had_liked":false,"id":320476,"user_name":"Mars","can_delete":false,"product_type":"c1","uid":1058344,"ip_address":"","ucode":"E9E24EAE8E406C","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eobdgTHjeugrBsWEGgnY73NugMqf8NmuentOOYHLegQYD9eSia80Sc7y8ntFpABXvYZBeKkzHyp5Xg/132","comment_is_top":false,"comment_ctime":1636347528,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636347528","product_id":100005101,"comment_content":"第一种属于 TopK 推荐，形式上也常常属于类似“猜你喜欢”这样的。出发方式是当用户访问首页时<br>应该是“触发方式”？","like_count":0},{"had_liked":false,"id":282193,"user_name":"小林","can_delete":false,"product_type":"c1","uid":2355457,"ip_address":"","ucode":"FBE9F9097715C6","user_header":"https://static001.geekbang.org/account/avatar/00/23/f1/01/0b0d8a5f.jpg","comment_is_top":false,"comment_ctime":1615126626,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615126626","product_id":100005101,"comment_content":"第一种属于 TopK 推荐，形式上也常常属于类似“猜你喜欢”这样的。<br>这一段后面的公式，Ruj 这个是咋来的？","like_count":0},{"had_liked":false,"id":222433,"user_name":"徐同学","can_delete":false,"product_type":"c1","uid":2004913,"ip_address":"","ucode":"12E6DD7D55E1EC","user_header":"https://static001.geekbang.org/account/avatar/00/1e/97/b1/e4390d98.jpg","comment_is_top":false,"comment_ctime":1590806066,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590806066","product_id":100005101,"comment_content":"可以参照这个内容：https:&#47;&#47;blog.csdn.net&#47;xidianliutingting&#47;article&#47;details&#47;51916578","like_count":0},{"had_liked":false,"id":155693,"user_name":"Jessie","can_delete":false,"product_type":"c1","uid":1241378,"ip_address":"","ucode":"50FB29A445D371","user_header":"https://static001.geekbang.org/account/avatar/00/12/f1/22/d842d9c8.jpg","comment_is_top":false,"comment_ctime":1574737293,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574737293","product_id":100005101,"comment_content":"第一个公式，哪个是分母呀，看着都是分子呢，难道两个根号是分母？ 那应该用 a&#47;b 表示，这个数学表达，有问题。","like_count":0},{"had_liked":false,"id":153902,"user_name":"夜雨声烦","can_delete":false,"product_type":"c1","uid":1349749,"ip_address":"","ucode":"87D8DB1E32522A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK6mh3xlaMoGtWjmVJh2LutdLcQcPbKNjRlVru3bx8ynPhgwuGhhdzTkwEMoXbvBtgkcDSfom1kZg/132","comment_is_top":false,"comment_ctime":1574328312,"is_pvip":false,"replies":[{"id":"59186","content":"Slope one简单介绍了一下，主要是介绍其思想。你说的错误已经修改了，谢谢指出啊。欢迎继续交流：chenkaijiang001@ke.com","user_name":"作者回复","user_name_real":"刑无刀","uid":"1005376","ctime":1574394405,"ip_address":"","comment_id":153902,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574328312","product_id":100005101,"comment_content":"Slope One算法那块讲的太粗糙了，而且感觉数据图是错的啊，物品B和物品C的用户数难道不应该是2吗？","like_count":0,"discussions":[{"author":{"id":1005376,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/40/777bfe30.jpg","nickname":"刑无刀","note":"","ucode":"496201BF63D49D","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475315,"discussion_content":"Slope one简单介绍了一下，主要是介绍其思想。你说的错误已经修改了，谢谢指出啊。欢迎继续交流：chenkaijiang001@ke.com","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574394405,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150282,"user_name":"rukidding","can_delete":false,"product_type":"c1","uid":1394821,"ip_address":"","ucode":"EEF43323BC0D97","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM70IXdsspRrZMoAbiaZdRicvnIHBhBKT0f1icJPfIw4pJiaeqkQvYMLj1ChsQGEibicFaAMbJT9shJC4Sng/132","comment_is_top":false,"comment_ctime":1573492375,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573492375","product_id":100005101,"comment_content":"slope one 看起来是个回归啊？   之前看过集体智慧编程那本书， 在这里 slope one看起来像是回归，物品是输入， 用户的行为是参数，生成喜好程度。","like_count":0},{"had_liked":false,"id":144093,"user_name":"MR.Raindrop","can_delete":false,"product_type":"c1","uid":1098918,"ip_address":"","ucode":"7EC2A85DC19EC2","user_header":"https://static001.geekbang.org/account/avatar/00/10/c4/a6/35e357bb.jpg","comment_is_top":false,"comment_ctime":1571842603,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571842603","product_id":100005101,"comment_content":"预测用户对物品评分那个地方有错误，评分乘相似度累加得出来的评分可能相当大超过评分最高值5. 也可能相当小，除非其他物品与被预测物品相似度累加等于1","like_count":0},{"had_liked":false,"id":139853,"user_name":"mier","can_delete":false,"product_type":"c1","uid":1661411,"ip_address":"","ucode":"2EDF4D982DD956","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erD0FZP5UKVMGgkjounHpFEkAaLVicEQ9yGF3icELTp61yREDISQfwpBebyE2S5sHIcWyjjhKo1pWQQ/132","comment_is_top":false,"comment_ctime":1570756683,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1570756683","product_id":100005101,"comment_content":"我不太理解TopK那里的公式。假如这个user只有一个历史item，评分是5。此时要计算另一个item，与历史item相似度为0.1。分子计算得到0.5，再除分母，得到5。两个得分一样？我理解错误了吗？","like_count":0,"discussions":[{"author":{"id":1152358,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/9HrrasB7o6ibpQ4icUlIa0PAYQmaG1icOtLZuib02xd3CQxHH0S0iaGibR2SREgMmcxa1zF6leC1W42cjCa1KicD0lXdA/132","nickname":"天涯剑客666","note":"","ucode":"C580F23FA4F55D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":54219,"discussion_content":"错了，结果是0.5","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574269154,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1152358,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/9HrrasB7o6ibpQ4icUlIa0PAYQmaG1icOtLZuib02xd3CQxHH0S0iaGibR2SREgMmcxa1zF6leC1W42cjCa1KicD0lXdA/132","nickname":"天涯剑客666","note":"","ucode":"C580F23FA4F55D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":54218,"discussion_content":"分母是用户对历史query的权重，只有一个历史query，权重就是1，分母是1，所以结果是0.1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574269114,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90184,"user_name":"shangqiu86","can_delete":false,"product_type":"c1","uid":1514817,"ip_address":"","ucode":"07D376EEC21BE4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/qRjoqWIGC6tpmKZBGTxjQKC9cbz9XLhw2nF1c74R4icFOYOdVO4iaeQEQDqEvmbicxn6HEc4SU8kpkwVaO5nABMug/132","comment_is_top":false,"comment_ctime":1556443215,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556443215","product_id":100005101,"comment_content":"我来回答下老师的作业“为什么说 Slope One 可以做到在线更新呢？我能想到的是存储sku分数的同时也存储了分子和分母，当有个用户新增了对某个sku的分值，则只需在分子中加入，同时在分母中加1，去刷新该sku与这个用户之前打过分数的其他sku之间的分值即可。推荐的时候则从存储的分数里面去计算即可，我想这个耗时也就在100ms之内吧，老师，我这样说对吗？","like_count":0},{"had_liked":false,"id":68422,"user_name":"衬衫的价格是19美元","can_delete":false,"product_type":"c1","uid":1397631,"ip_address":"","ucode":"655F925451F772","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKVUskibDnhMt5MCIJ8227HWkeg2wEEyewps8GuWhWaY5fy7Ya56bu2ktMlxdla3K29Wqia9efCkWaQ/132","comment_is_top":false,"comment_ctime":1550498660,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1550498660","product_id":100005101,"comment_content":"1.由用户1与用户2对物品A,B的评价，计算出物品A与物品B的距离 <br>2.由用户1与用户3对物品A和物品C的评价，计算出物品A与物品C的距离<br>3.由上述距离和用户3对物品B,C的评价，加权预算出用户3对物品A的评价<br>","like_count":0},{"had_liked":false,"id":29772,"user_name":"Eric","can_delete":false,"product_type":"c1","uid":1053498,"ip_address":"","ucode":"59752A51A382A6","user_header":"https://static001.geekbang.org/account/avatar/00/10/13/3a/b0454322.jpg","comment_is_top":false,"comment_ctime":1538536885,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1538536885","product_id":100005101,"comment_content":"，物品 B 和物品 A 的差距是 -0.5，共同用户数还是 2。知道这个差距后，就可以用一个物品去预测另一个物品的评分。<br>如果只知道用户 3 给物品 B 的评分是 2，那么预测用户 3 给物品 A 的评分呢就是 2.5，因为从物品 B 到物品 A 的差距是 0.5<br><br>这个是不是应该用-0.5 ，物品B到A差距为-0.5 ,用户3给A的评分应该为1.5吧？","like_count":0},{"had_liked":false,"id":4222,"user_name":"shoxx","can_delete":false,"product_type":"c1","uid":1063875,"ip_address":"","ucode":"A5A2FD6139B0F2","user_header":"","comment_is_top":false,"comment_ctime":1521727728,"is_pvip":false,"replies":[{"id":"1000","content":"抱歉我来晚了。你厉害！","user_name":"作者回复","user_name_real":"刑无刀","uid":"1005376","ctime":1521805270,"ip_address":"","comment_id":4222,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1521727728","product_id":100005101,"comment_content":"刀大 我看懂了 不必回覆 感謝","like_count":0,"discussions":[{"author":{"id":1005376,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/40/777bfe30.jpg","nickname":"刑无刀","note":"","ucode":"496201BF63D49D","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":416245,"discussion_content":"抱歉我来晚了。你厉害！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1521805270,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":4218,"user_name":"Jack_Sainity","can_delete":false,"product_type":"c1","uid":1058221,"ip_address":"","ucode":"37C10A87025B52","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/ad/d9757d31.jpg","comment_is_top":false,"comment_ctime":1521724600,"is_pvip":false,"replies":[{"id":"956","content":"谢谢，听取你的建议，在专栏结束后做一定的修正。","user_name":"作者回复","user_name_real":"刑无刀","uid":"1005376","ctime":1521741674,"ip_address":"","comment_id":4218,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1521724600","product_id":100005101,"comment_content":"用户中心化这一块个人觉得容易引起歧义。虽然陈老师你说了这个是对整个矩阵进行处理，但是放在这一章不合适，还是应该放在基于用户的协同过滤。或者就评分的预处理单独开辟一节讨论。","like_count":0,"discussions":[{"author":{"id":1005376,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/40/777bfe30.jpg","nickname":"刑无刀","note":"","ucode":"496201BF63D49D","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":416244,"discussion_content":"谢谢，听取你的建议，在专栏结束后做一定的修正。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1521741674,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":4184,"user_name":"Skye","can_delete":false,"product_type":"c1","uid":1057533,"ip_address":"","ucode":"F58365BA5CE17E","user_header":"https://static001.geekbang.org/account/avatar/00/10/22/fd/56c4fb54.jpg","comment_is_top":false,"comment_ctime":1521680332,"is_pvip":false,"replies":[{"id":"959","content":"分成两步：第一步，返回去阅读一下《开篇词》第十三段第一句。第二步，等下周矩阵分解会聊到这个问题。","user_name":"作者回复","user_name_real":"刑无刀","uid":"1005376","ctime":1521741955,"ip_address":"","comment_id":4184,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1521680332","product_id":100005101,"comment_content":"形老师，我想问一下，我想在地点推荐中加入天气特征，天气有降水，温度等等特征。不想直接作为机器学习的特征输入，想加到矩阵分解模型中去，有什么方法或者参考吗？非常感谢","like_count":0,"discussions":[{"author":{"id":1005376,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/40/777bfe30.jpg","nickname":"刑无刀","note":"","ucode":"496201BF63D49D","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":416234,"discussion_content":"分成两步：第一步，返回去阅读一下《开篇词》第十三段第一句。第二步，等下周矩阵分解会聊到这个问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1521741955,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":4183,"user_name":"愚公移山","can_delete":false,"product_type":"c1","uid":1059097,"ip_address":"","ucode":"9C6DAA10F89736","user_header":"","comment_is_top":false,"comment_ctime":1521680217,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1521680217","product_id":100005101,"comment_content":"刑老师，在预测物品分数时，物品距离矩阵中的符号是否没有用？例如用户3根据物品B预测物品A分数时，是2-0.5吧","like_count":0},{"had_liked":false,"id":4147,"user_name":"梧桐","can_delete":false,"product_type":"c1","uid":1004440,"ip_address":"","ucode":"54C56EBF14793B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/53/98/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1521614997,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1521614997","product_id":100005101,"comment_content":"高中学的余弦忘了。😅","like_count":0},{"had_liked":false,"id":4140,"user_name":"墨明棋妙","can_delete":false,"product_type":"c1","uid":1058290,"ip_address":"","ucode":"2BFF91C6032D72","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ4RFtwRcz2Ze0fya3k4EN03xu6pBGV2jqpHbl1JLvHbpK7EoRRl7qIyWwmYPQa8uxCzT5S6mjicxw/132","comment_is_top":false,"comment_ctime":1521607333,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1521607333","product_id":100005101,"comment_content":"Slope One 算法中计算距离的公式，是点到点距离计算公式么？","like_count":0,"discussions":[{"author":{"id":2088083,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/dc/93/bdbc45cc.jpg","nickname":"LUO FAN","note":"","ucode":"538E81E6FC4015","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530408,"discussion_content":"是曼哈顿距离。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637069908,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":4133,"user_name":"zc","can_delete":false,"product_type":"c1","uid":1013406,"ip_address":"","ucode":"A231FA413151DD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/76/9e/dc53669e.jpg","comment_is_top":false,"comment_ctime":1521601837,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1521601837","product_id":100005101,"comment_content":"因为算法的复杂度不高，所以能够做到实时？","like_count":0}]}