{"id":13159,"title":"02 | 命令源码文件","content":"<p>我们已经知道，环境变量GOPATH指向的是一个或多个工作区，每个工作区中都会有以代码包为基本组织形式的源码文件。</p><p><strong>这里的源码文件又分为三种，即：命令源码文件、库源码文件和测试源码文件，它们都有着不同的用途和编写规则。（</strong> 我在<a href=\"https://time.geekbang.org/column/article/13540?utm_source=weibo&amp;utm_medium=xuxiaoping&amp;utm_campaign=promotion&amp;utm_content=columns\">“预习篇”的基础知识图</a>介绍过这三种文件的基本情况。）</p><p><img src=\"https://static001.geekbang.org/resource/image/9d/cb/9d08647d238e21e7184d60c0afe5afcb.png?wh=1570*1363\" alt=\"\"></p><p>（长按保存大图查看）</p><p>今天，我们就沿着<strong>命令源码文件</strong>的知识点，展开更深层级的学习。</p><hr></hr><p>一旦开始学习用编程语言编写程序，我们就一定希望在编码的过程中及时地得到反馈，只有这样才能清楚对错。实际上，我们的有效学习和进步，都是通过不断地接受反馈和执行修正实现的。</p><p>对于Go语言学习者来说，你在学习阶段中，也一定会经常编写可以直接运行的程序。这样的程序肯定会涉及命令源码文件的编写，而且，命令源码文件也可以很方便地用<code>go run</code>命令启动。</p><p>那么，<strong>我今天的问题就是：命令源码文件的用途是什么，怎样编写它？</strong></p><p>这里，我给出你一个<strong>参考的回答</strong>：命令源码文件是程序的运行入口，是每个可独立运行的程序必须拥有的。我们可以通过构建或安装，生成与其对应的可执行文件，后者一般会与该命令源码文件的直接父目录同名。</p><p><strong>如果一个源码文件声明属于<code>main</code>包，并且包含一个无参数声明且无结果声明的<code>main</code>函数，那么它就是命令源码文件。</strong> 就像下面这段代码：</p><!-- [[[read_end]]] --><pre><code>package main\n\nimport &quot;fmt&quot;\n\nfunc main() {\n\tfmt.Println(&quot;Hello, world!&quot;)\n}\n</code></pre><p>如果你把这段代码存成demo1.go文件，那么运行<code>go run demo1.go</code>命令后就会在屏幕（标准输出）中看到<code>Hello, world!</code></p><blockquote>\n<p><span class=\"reference\">当需要模块化编程时，我们往往会将代码拆分到多个文件，甚至拆分到不同的代码包中。但无论怎样，对于一个独立的程序来说，命令源码文件永远只会也只能有一个。如果有与命令源码文件同包的源码文件，那么它们也应该声明属于<code>main</code>包。</span></p>\n</blockquote><h2>问题解析</h2><p>命令源码文件如此重要，以至于它毫无疑问地成为了我们学习Go语言的第一助手。不过，只会打印<code>Hello, world</code>是远远不够的，咱们千万不要成为“Hello, world”党。既然决定学习Go语言，你就应该从每一个知识点深入下去。</p><p>无论是Linux还是Windows，如果你用过命令行（command line）的话，肯定就会知道几乎所有命令（command）都是可以接收参数（argument）的。通过构建或安装命令源码文件，生成的可执行文件就可以被视为“命令”，既然是命令，那么就应该具备接收参数的能力。</p><p>下面，我就带你深入了解一下与命令参数的接收和解析有关的一系列问题。</p><h2>知识精讲</h2><h3>1. 命令源码文件怎样接收参数</h3><p>我们先看一段不完整的代码：</p><pre><code>package main\n\nimport (\n\t// 需在此处添加代码。[1]\n\t&quot;fmt&quot;\n)\n\nvar name string\n\nfunc init() {\n\t// 需在此处添加代码。[2]\n}\n\nfunc main() {\n\t// 需在此处添加代码。[3]\n\tfmt.Printf(&quot;Hello, %s!\\n&quot;, name)\n}\n\n</code></pre><p><strong>如果邀请你帮助我，在注释处添加相应的代码，并让程序实现”根据运行程序时给定的参数问候某人”的功能，你会打算怎样做？</strong></p><p>如果你知道做法，请现在就动手实现它。如果不知道也不要着急，咱们一起来搞定。</p><p>首先，Go语言标准库中有一个代码包专门用于接收和解析命令参数。这个代码包的名字叫<code>flag</code>。</p><p>我之前说过，如果想要在代码中使用某个包中的程序实体，那么应该先导入这个包。因此，我们需要在<code>[1]</code>处添加代码<code>\"flag\"</code>。注意，这里应该在代码包导入路径的前后加上英文半角的引号。如此一来，上述代码导入了<code>flag</code>和<code>fmt</code>这两个包。</p><p>其次，人名肯定是由字符串代表的。所以我们要在<code>[2]</code>处添加调用<code>flag</code>包的<code>StringVar</code>函数的代码。就像这样：</p><pre><code>flag.StringVar(&amp;name, &quot;name&quot;, &quot;everyone&quot;, &quot;The greeting object.&quot;)\n</code></pre><p>函数<code>flag.StringVar</code>接受4个参数。</p><p>第1个参数是用于存储该命令参数值的地址，具体到这里就是在前面声明的变量<code>name</code>的地址了，由表达式<code>&amp;name</code>表示。</p><p>第2个参数是为了指定该命令参数的名称，这里是<code>name</code>。</p><p>第3个参数是为了指定在未追加该命令参数时的默认值，这里是<code>everyone</code>。</p><p>至于第4个函数参数，即是该命令参数的简短说明了，这在打印命令说明时会用到。</p><p>顺便说一下，还有一个与<code>flag.StringVar</code>函数类似的函数，叫<code>flag.String</code>。这两个函数的区别是，后者会直接返回一个已经分配好的用于存储命令参数值的地址。如果使用它的话，我们就需要把</p><pre><code>var name string\n</code></pre><p>改为</p><pre><code>var name = flag.String(&quot;name&quot;, &quot;everyone&quot;, &quot;The greeting object.&quot;)\n</code></pre><p>所以，如果我们使用<code>flag.String</code>函数就需要改动原有的代码。这样并不符合上述问题的要求。</p><p>再说最后一个填空。我们需要在<code>[3]</code>处添加代码<code>flag.Parse()</code>。函数<code>flag.Parse</code>用于真正解析命令参数，并把它们的值赋给相应的变量。</p><p>对该函数的调用必须在所有命令参数存储载体的声明（这里是对变量<code>name</code>的声明）和设置（这里是在<code>[2]</code>处对<code>flag.StringVar</code>函数的调用）之后，并且在读取任何命令参数值之前进行。</p><p>正因为如此，我们最好把<code>flag.Parse()</code>放在<code>main</code>函数的函数体的第一行。</p><h3>2. 怎样在运行命令源码文件的时候传入参数，又怎样查看参数的使用说明</h3><p>如果我们把上述代码存成名为demo2.go的文件，那么运行如下命令就可以为参数<code>name</code>传值：</p><pre><code>go run demo2.go -name=&quot;Robert&quot;\n\n</code></pre><p>运行后，打印到标准输出（stdout）的内容会是：</p><pre><code>Hello, Robert!\n</code></pre><p>另外，如果想查看该命令源码文件的参数说明，可以这样做：</p><pre><code>$ go run demo2.go --help\n</code></pre><p>其中的<code>$</code>表示我们是在命令提示符后运行<code>go run</code>命令的。运行后输出的内容会类似：</p><pre><code>Usage of /var/folders/ts/7lg_tl_x2gd_k1lm5g_48c7w0000gn/T/go-build155438482/b001/exe/demo2:\n -name string\n    The greeting object. (default &quot;everyone&quot;)\nexit status 2\n</code></pre><p>你可能不明白下面这段输出代码的意思。</p><pre><code>/var/folders/ts/7lg_tl_x2gd_k1lm5g_48c7w0000gn/T/go-build155438482/b001/exe/demo2\n</code></pre><p>这其实是<code>go run</code>命令构建上述命令源码文件时临时生成的可执行文件的完整路径。</p><p>如果我们先构建这个命令源码文件再运行生成的可执行文件，像这样：</p><pre><code>$ go build demo2.go\n$ ./demo2 --help\n</code></pre><p>那么输出就会是</p><pre><code>Usage of ./demo2:\n -name string\n    The greeting object. (default &quot;everyone&quot;)\n</code></pre><h3>3. 怎样自定义命令源码文件的参数使用说明</h3><p>这有很多种方式，最简单的一种方式就是对变量<code>flag.Usage</code>重新赋值。<code>flag.Usage</code>的类型是<code>func()</code>，即一种无参数声明且无结果声明的函数类型。</p><p><code>flag.Usage</code>变量在声明时就已经被赋值了，所以我们才能够在运行命令<code>go run demo2.go --help</code>时看到正确的结果。</p><p>注意，对<code>flag.Usage</code>的赋值必须在调用<code>flag.Parse</code>函数之前。</p><p>现在，我们把demo2.go另存为demo3.go，然后在<code>main</code>函数体的开始处加入如下代码。</p><pre><code>flag.Usage = func() {\n fmt.Fprintf(os.Stderr, &quot;Usage of %s:\\n&quot;, &quot;question&quot;)\n flag.PrintDefaults()\n}\n</code></pre><p>那么当运行</p><pre><code>$ go run demo3.go --help\n</code></pre><p>后，就会看到</p><pre><code>Usage of question:\n -name string\n    The greeting object. (default &quot;everyone&quot;)\nexit status 2\n</code></pre><p>现在再深入一层，我们在调用<code>flag</code>包中的一些函数（比如<code>StringVar</code>、<code>Parse</code>等等）的时候，实际上是在调用<code>flag.CommandLine</code>变量的对应方法。</p><p><code>flag.CommandLine</code>相当于默认情况下的命令参数容器。所以，通过对<code>flag.CommandLine</code>重新赋值，我们可以更深层次地定制当前命令源码文件的参数使用说明。</p><p>现在我们把<code>main</code>函数体中的那条对<code>flag.Usage</code>变量的赋值语句注销掉，然后在<code>init</code>函数体的开始处添加如下代码：</p><pre><code>flag.CommandLine = flag.NewFlagSet(&quot;&quot;, flag.ExitOnError)\nflag.CommandLine.Usage = func() {\n\tfmt.Fprintf(os.Stderr, &quot;Usage of %s:\\n&quot;, &quot;question&quot;)\n\tflag.PrintDefaults()\n}\n</code></pre><p>再运行命令<code>go run demo3.go --help</code>后，其输出会与上一次的输出的一致。不过后面这种定制的方法更加灵活。比如，当我们把为<code>flag.CommandLine</code>赋值的那条语句改为</p><pre><code>flag.CommandLine = flag.NewFlagSet(&quot;&quot;, flag.PanicOnError)\n</code></pre><p>后，再运行<code>go run demo3.go --help</code>命令就会产生另一种输出效果。这是由于我们在这里传给<code>flag.NewFlagSet</code>函数的第二个参数值是<code>flag.PanicOnError</code>。<code>flag.PanicOnError</code>和<code>flag.ExitOnError</code>都是预定义在<code>flag</code>包中的常量。</p><p><code>flag.ExitOnError</code>的含义是，告诉命令参数容器，当命令后跟<code>--help</code>或者参数设置的不正确的时候，在打印命令参数使用说明后以状态码<code>2</code>结束当前程序。</p><p>状态码<code>2</code>代表用户错误地使用了命令，而<code>flag.PanicOnError</code>与之的区别是在最后抛出“运行时恐慌（panic）”。</p><p>上述两种情况都会在我们调用<code>flag.Parse</code>函数时被触发。顺便提一句，“运行时恐慌”是Go程序错误处理方面的概念。关于它的抛出和恢复方法，我在本专栏的后续部分中会讲到。</p><p>下面再进一步，我们索性不用全局的<code>flag.CommandLine</code>变量，转而自己创建一个私有的命令参数容器。我们在函数外再添加一个变量声明：</p><pre><code>var cmdLine = flag.NewFlagSet(&quot;question&quot;, flag.ExitOnError)\n</code></pre><p>然后，我们把对<code>flag.StringVar</code>的调用替换为对<code>cmdLine.StringVar</code>调用，再把<code>flag.Parse()</code>替换为<code>cmdLine.Parse(os.Args[1:])</code>。</p><p>其中的<code>os.Args[1:]</code>指的就是我们给定的那些命令参数。这样做就完全脱离了<code>flag.CommandLine</code>。<code>*flag.FlagSet</code>类型的变量<code>cmdLine</code>拥有很多有意思的方法。你可以去探索一下。我就不在这里一一讲述了。</p><p>这样做的好处依然是更灵活地定制命令参数容器。但更重要的是，你的定制完全不会影响到那个全局变量<code>flag.CommandLine</code>。</p><p><strong>总结</strong></p><p>恭喜你！你现在已经走出了Go语言编程的第一步。你可以用Go编写命令，并可以让它们像众多操作系统命令那样被使用，甚至可以把它们嵌入到各种脚本中。</p><p>虽然我为你讲解了命令源码文件的基本编写方法，并且也谈到了为了让它接受参数而需要做的各种准备工作，但这并不是全部。</p><p>别担心，我在后面会经常提到它的。另外，如果你想详细了解<code>flag</code>包的用法，可以到<a href=\"https://golang.google.cn/pkg/flag/\">这个网址</a>查看文档。或者直接使用<code>godoc</code>命令在本地启动一个Go语言文档服务器。怎样使用<code>godoc</code>命令？你可以参看<a href=\"https://github.com/hyper0x/go_command_tutorial/blob/master/0.5.md\">这里</a>。</p><h2>思考题</h2><p>我们已经见识过为命令源码文件传入字符串类型的参数值的方法，那还可以传入别的吗？这就是今天我留下的思考题。</p><ol>\n<li>默认情况下，我们可以让命令源码文件接受哪些类型的参数值？</li>\n<li>我们可以把自定义的数据类型作为参数值的类型吗？如果可以，怎样做？</li>\n</ol><p>你可以通过查阅文档获得第一个问题的答案。记住，快速查看和理解文档是一项必备的技能。</p><p>至于第二个问题，你回答起来可能会有些困难，因为这涉及了另一个问题：“怎样声明自己的数据类型？”这个问题我在专栏的后续部分中也会讲到。如果是这样，我希望你记下它和这里说的另一问题，并在能解决后者之后再来回答前者。</p><p><a href=\"https://github.com/hyper0x/Golang_Puzzlers\">戳此查看Go语言专栏文章配套详细代码。</a></p><p></p>","neighbors":{"left":{"article_title":"01 | 工作区和GOPATH","id":12959},"right":{"article_title":"03 | 库源码文件","id":13176}},"comments":[{"had_liked":false,"id":71415,"user_name":"姜雨生","can_delete":false,"product_type":"c1","uid":1185561,"ip_address":"","ucode":"980DB6CCF304BC","user_header":"https://static001.geekbang.org/account/avatar/00/12/17/19/fb38f7b6.jpg","comment_is_top":true,"comment_ctime":1551336830,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"9.2233721672550994e+18","product_id":100013101,"comment_content":"flag的讲解很棒，通过这个命令，我们就可以控制程序在不同环境的执行内容了，通过控制参数设置更多的内容！","like_count":31},{"had_liked":false,"id":19820,"user_name":"咖啡色的羊驼","can_delete":false,"product_type":"c1","uid":1112900,"ip_address":"","ucode":"84E288A5665A3A","user_header":"https://static001.geekbang.org/account/avatar/00/10/fb/44/8b2600fd.jpg","comment_is_top":false,"comment_ctime":1534096101,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"491160367845","product_id":100013101,"comment_content":"看完本文，记住的两点:<br>1.源码文件分为三种:命令,库，测试。<br>2.编写命令源码文件的关键包: flag。<br><br>回答下问题:<br>1.命令源码文件支持的参数:<br>      int(int|int64|uint|uint64),<br>      float(float|float64)<br>      string,<br>      bool,<br>      duration(时间),<br>      var(自定义)<br>2.关键就是使用flag.var()，关键点在于需要实现flag包的Value接口。<br><br><br>","like_count":115},{"had_liked":false,"id":19903,"user_name":"Dragoonium","can_delete":false,"product_type":"c1","uid":1110906,"ip_address":"","ucode":"6C68500CD20BB9","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLoNkBtbatvibJhFNOKQCibgkOq19HMQMy4CJUyvJ3nRCibBMG2qT3NKw5sZ1GeeW7ZWVaEw9qvfpYJA/132","comment_is_top":false,"comment_ctime":1534155800,"is_pvip":false,"discussion_count":8,"race_medal":0,"score":"323656703000","product_id":100013101,"comment_content":"我试着把参数增加到两个，然后试试运行结果<br>func init() {<br>  flag.StringVar(&amp;name, &quot;name1&quot;, &quot;ladies&quot;, &quot;The greeting object 1&quot;)<br>  flag.StringVar(&amp;name, &quot;name2&quot;, &quot;gentlemen&quot;, &quot;The greeting object 2&quot;)<br>}<br><br># go run test.go<br>Hello gentlemen!<br>和想像的一样，name2的默认值覆盖了name1的默认值<br><br># go run test.go -name1=Robert<br>Hello Robert!<br>和想像的略有不同，只指定了name1，没有指定name2，输出了name1的指定值，name2的默认值没有生效<br><br># go run test.go -name2=Jose<br>Hello Jose!<br>没毛病<br><br># go run test.go -name1=Robert -name2=Jose<br>Hello Jose!<br>没毛病<br><br># go run test.go -name2=Jose -name1=Robert<br>Hello Robert!<br>这有点奇怪了，输出的值是以参数的先后顺序为准的，而不是以flag.StringVar函数的顺序为准的","like_count":76,"discussions":[{"author":{"id":1312493,"avatar":"https://static001.geekbang.org/account/avatar/00/14/06/ed/5a167dda.jpg","nickname":"niceshot","note":"","ucode":"2C2BBC07A6E02D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376717,"discussion_content":"parse解析的时候是按照os.Args这个切片中的tag顺序解析的 后者会重写&amp;name指针所指向的内存。不是以flag.StringVar函数的顺序为准的,flag.StringVar只是依次把参数和flag作为keyvalue纳入FlagSet的formal这个map里","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1622290600,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1258560,"avatar":"https://static001.geekbang.org/account/avatar/00/13/34/40/99b10e7d.jpg","nickname":"陈小杰","note":"","ucode":"7C6C7D7F43A171","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4893,"discussion_content":"猜测哈，init初始化的参数，是静态默认值，第二个替换第一个。但是传参是动态的，是在已经有默认值的基础上，动态设置name值，所以设置什么结果就是什么，所以后设置的会生效","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1565796339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1979191,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/33/37/6088a9a2.jpg","nickname":"蜘蛛别过来","note":"","ucode":"D579C1F5AC8F09","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550455,"discussion_content":"3年半过去了，大佬可能已经弄明白了\n我阅读了下代码，阐述下我的见解，可以交流下\n\ninit时的StringVar是给不同的flag指定一个指针用来保存数据以及指派默认值，顺序不决定解析顺序，但是后面的默认值会覆盖前面的默认值\n\n程序真正执行时，按照输入的命令行里面的flag从前到后的顺序为每一个传进来的flag找保存位置（前面的那个指针），后面的值还是会覆盖前面的值，整个解析过程在cobra.*Command.ParseFlags，具体细节在pflag.*FlagSet.Parse","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1644552266,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1233193,"avatar":"https://static001.geekbang.org/account/avatar/00/12/d1/29/1b1234ed.jpg","nickname":"DFighting","note":"","ucode":"F3BA2426FF8582","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348992,"discussion_content":"猜测一下，初始化name1和name2时候会有默认值，但是因为他们都绑定了一个地址name，所以前者会被覆盖，执行命令传递参数的时候会修改变量的值，因为name1和name2都是指向同一个地址。所以会按照解析顺序赋值","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1612836427,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1398591,"avatar":"https://static001.geekbang.org/account/avatar/00/15/57/3f/0009a20f.jpg","nickname":"飘呀飘的小叶子","note":"","ucode":"D662116E38B212","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537256,"discussion_content":"源码进去 调用newStringValue对name初始化赋值 程序的顺序决定了啥也管name先赋值为name1的default再赋值为name2的default 然后不就理解了\n\n源码：\nfunc StringVar(p *string, name string, value string, usage string) {\n\tCommandLine.Var(newStringValue(value, p), name, usage)\n}\n\nfunc newStringValue(val string, p *string) *stringValue {\n\t*p = val\n\treturn (*stringValue)(p)\n}","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639015193,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2314596,"avatar":"https://static001.geekbang.org/account/avatar/00/23/51/64/ad5efa28.jpg","nickname":"随风淡去","note":"","ucode":"B7AEE2CBE473ED","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":325530,"discussion_content":"命令行参数name1和name2使用的是同一个变量，即同一个内存区，后操作的会覆盖前面的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605339956,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1045455,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f3/cf/851dab01.jpg","nickname":"Milittle","note":"","ucode":"80E566639A8ABB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":277511,"discussion_content":"初始化在解析之前就被执行了，但是动态解析还没开始，所以就造成了这个现象。如果name1解析在name2之后，那么也会覆盖name2的内容。解析参数可以对比C/C++解析函数参数一样的道理，是从最后一个参数开始解析。倒着来~虽然不一样，但是概念理解多了，就晓得事怎么回事了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591064610,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1459980,"avatar":"https://static001.geekbang.org/account/avatar/00/16/47/0c/f2f0245e.jpg","nickname":"🐶","note":"","ucode":"D9E46DDB64BA77","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3515,"discussion_content":"有大神解答一下吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564544935,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23038,"user_name":"Tron","can_delete":false,"product_type":"c1","uid":1130053,"ip_address":"","ucode":"2C4FC68C80A7DD","user_header":"https://static001.geekbang.org/account/avatar/00/11/3e/45/3879f334.jpg","comment_is_top":false,"comment_ctime":1536116692,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"151859972052","product_id":100013101,"comment_content":"go语言ide还是推荐goland","like_count":36},{"had_liked":false,"id":19961,"user_name":"Abirdcfly","can_delete":false,"product_type":"c1","uid":1058604,"ip_address":"","ucode":"C4813AE6EB03AA","user_header":"https://static001.geekbang.org/account/avatar/00/10/27/2c/919e5773.jpg","comment_is_top":false,"comment_ctime":1534178858,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"91728492074","product_id":100013101,"comment_content":"解答一下Dragoonium同学的疑惑，在flag包的文档里第一个example里就有你提到的这种情况，注释已经说明白了。<br><br>我不太精确的翻译一下：<br><br>两个flag分享一个变量时可以用来做命令参数缩写，由于初始化顺序未定义，所以要确保两者使用同一默认值，并且他们必须在init()函数中设置","like_count":22,"discussions":[{"author":{"id":1459980,"avatar":"https://static001.geekbang.org/account/avatar/00/16/47/0c/f2f0245e.jpg","nickname":"🐶","note":"","ucode":"D9E46DDB64BA77","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4281,"discussion_content":"我觉得这个解析好像没有解答到这个问题，我倒是觉得，因为这个修改的是一个name，同一个地址，所以，两个命令行参数写入的时候，两个都写的是同一个地址，所以，第二个值，就是最后覆盖该地址的值，所以最后的name命令行参数就是name的最后的值，当然打印出来就是这个值","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1565270560,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47795,"user_name":"何何何何何少侠","can_delete":false,"product_type":"c1","uid":1125973,"ip_address":"","ucode":"455179D476BF45","user_header":"https://static001.geekbang.org/account/avatar/00/11/2e/55/dd2b5083.jpg","comment_is_top":false,"comment_ctime":1544198604,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"87443544524","product_id":100013101,"comment_content":"1. 默认情况下，我们可以让命令源码文件接受哪些类型的参数值？<br>    答：前面讲过`flag`是专门用来处理命令行参数的包，所以我们只需要看`flag`这个包支持哪些数据结构就行了。结果如下：<br>    * int(int|int64|uint|uint64),<br>    * float(float|float64)<br>    * string,<br>    * bool,<br>    * time.duration(时间),<br>    * var(自定义，如FlagSet、Flag、实现Value接口等)<br>2. 我们可以把自定义的数据类型作为参数值的类型吗？如果可以，怎样做？<br>    答：显然是可以的，从上面的回答来看就知道可以。实现方式可以参考源码中`flag.CommandLine.Var(value Value,name string,usage string)`的实现，核心在于自定义的数据类型需要实现`Value`接口，只要实现了`Value`接口，这个问题也就解决了。<br>1. 目录结构<br>    * rexlin600（我的`GOPATH`）<br>        * pkg<br>        * bin<br>        * src<br>            * flagfunc<br>                * custom_type.go<br>                * tflag.go<br>            * main<br>                * main.go<br>    <br>    2. 编写`main.go`和`tflag.go`以及自定义的`custom_type.go`<br>    `main.go`<br>    ```<br>    package main<br>    import (<br>        &quot;flagfunc&quot;<br>        &quot;fmt&quot;<br>    )<br>    &#47;&#47; main method<br>    func main() {<br>        fmt.Println(&quot;==&gt;  hello,&quot;, flagfunc.CustomFlag)<br>    }<br>    ```<br>    <br>    `tflag.go`<br>    ```<br>    package flagfunc<br>    import (<br>        &quot;flag&quot;<br>        &quot;fmt&quot;<br>    )<br>    var CustomFlag customFlag<br>    &#47;&#47; 测试自定义数据类型flag<br>    func TestCustomFlag() {<br>        fmt.Println(&quot;==&gt;  package flagfunc&quot;)<br>        &#47;&#47; custom define Value<br>        flag.CommandLine.Var(&amp;CustomFlag, &quot;custom&quot;, &quot;custom define test&quot;)<br>        &#47;&#47; After all flags are defined, call flag.Parse() to parse the command line into the defined flags.<br>        flag.Parse()<br>    }<br>    ```<br>    <br>    `custom_type.go`<br>    ```<br>    package flagfunc<br>    import (<br>        &quot;strings&quot;<br>    )<br>    type customFlag string<br>    func newStringValue(val string, p *string) *customFlag {<br>        *p = val<br>        return (*customFlag)(p)<br>    }<br>    func (a *customFlag) Set(str string) error {<br>        str = strings.TrimSpace(str)<br>        *a = customFlag(str)<br>        return nil<br>    }<br>    func (a *customFlag) String() string { return &quot;&quot; }<br>    ```<br>    3. 测试：进入main.go所在路径，输入命令`go run main.go custom=&quot;{&quot;\\&quot;rexlin600\\&quot;&quot;,18,&quot;\\&quot;3072@qq.com\\&quot;&quot;}&quot;`即可<br>","like_count":21},{"had_liked":false,"id":20229,"user_name":"wjq310","can_delete":false,"product_type":"c1","uid":1102514,"ip_address":"","ucode":"BAF72D40CC91F1","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/b2/2f19b0ad.jpg","comment_is_top":false,"comment_ctime":1534322581,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"57368897429","product_id":100013101,"comment_content":"demo3之后，要import os","like_count":14},{"had_liked":false,"id":163254,"user_name":"lixiaofeng","can_delete":false,"product_type":"c1","uid":1100200,"ip_address":"","ucode":"0D6710D95B6FFB","user_header":"https://static001.geekbang.org/account/avatar/00/10/c9/a8/98507423.jpg","comment_is_top":false,"comment_ctime":1576676083,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"48821316339","product_id":100013101,"comment_content":"&#47;&#47;  连接mysql的命令。很多监控脚本都是类似这样开头的。<br>package main<br><br>import (<br>\t&quot;fmt&quot;<br>\t&quot;flag&quot;<br>\t&quot;os&quot;<br>)<br><br>var hostname string<br>var username string<br>var pwd string<br>var port string<br><br>func init(){<br>\tflag.StringVar(&amp;hostname, &quot;hostname&quot;, &quot;127.0.0.1&quot;, &quot;server ip or hostname&quot;)<br>\tflag.StringVar(&amp;username, &quot;username&quot;, &quot;root&quot;, &quot;the user name to login database&quot;)<br>\tflag.StringVar(&amp;pwd, &quot;pwd&quot;, &quot;&quot;, &quot;the password of username&quot;)<br>\tflag.StringVar(&amp;port, &quot;port&quot;, &quot;3306&quot;, &quot;the port of your mysql&quot;)<br>}<br><br>func main(){<br>\t&#47;&#47;flag.Parse()<br>\tflag.Usage = func(){<br>\t\tfmt.Fprintf(os.Stderr, &quot;usage of %s\\n&quot;, &quot; Link  to your MySQL!&quot;)<br>\t}<br>\tfmt.Printf(&quot;hostname: %s\\nusernmae: %s\\npassword:  %s\\nport:  %s\\n&quot;, hostname, username, pwd, port)<br>}<br><br>执行结果：<br>D:\\Users\\kyle.litj\\go\\src\\mygocode\\MYJK&gt;go run main.go  -hostname=&quot;192.168.10.10&quot; -username=&quot;root&quot; -pwd=&quot;root&quot; -port=&quot;3306&quot;<br>hostname: 192.168.10.10<br>usernmae: root<br>password:  root<br>port:  3306","like_count":12},{"had_liked":false,"id":19867,"user_name":"javaadu","can_delete":false,"product_type":"c1","uid":1000519,"ip_address":"","ucode":"8C0B140F1C8992","user_header":"https://static001.geekbang.org/account/avatar/00/0f/44/47/3ddb94d0.jpg","comment_is_top":false,"comment_ctime":1534126915,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"48778767171","product_id":100013101,"comment_content":"喜欢这种重实践和编码的风格，便于上手","like_count":12},{"had_liked":false,"id":19901,"user_name":"云学","can_delete":false,"product_type":"c1","uid":1027233,"ip_address":"","ucode":"366AE90BA06356","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ac/a1/43d83698.jpg","comment_is_top":false,"comment_ctime":1534155747,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"44483828707","product_id":100013101,"comment_content":"init在main之前执行，go程序的执行顺序是否可以讲下","like_count":11},{"had_liked":false,"id":19859,"user_name":"alan","can_delete":false,"product_type":"c1","uid":1083425,"ip_address":"","ucode":"2CA8D0B6B7D5A9","user_header":"https://static001.geekbang.org/account/avatar/00/10/88/21/50b2418a.jpg","comment_is_top":false,"comment_ctime":1534124560,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"40188830224","product_id":100013101,"comment_content":"感谢老师。感觉编码细节有些偏多了哈，希望多一些总结性和主观的内容。","like_count":10},{"had_liked":false,"id":68068,"user_name":"zhaopan","can_delete":false,"product_type":"c1","uid":1151132,"ip_address":"","ucode":"2AD77203285F6E","user_header":"https://static001.geekbang.org/account/avatar/00/11/90/9c/532446e4.jpg","comment_is_top":false,"comment_ctime":1550403580,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23025240060","product_id":100013101,"comment_content":"1. 会出现冲突<br>2. 导入包的几种方式<br>  2.1 常规方式<br>    import “your&#47;lib”<br>    通过包名lib调用SayHello方法。lib.SayHello()  <br>  2.2 别名方式<br>    import m “your&#47;lib”<br>    这里的 m 是包名 lib 的别名，m.SyayHello() 。该方式合适的场景：<br>    1.包名过于复杂或者意思不明确。<br>    2.包名和其他包冲突。<br>      import mongo &quot;mywebapp&#47;libs&#47;mongodb&#47;db&quot;<br>      import ydbgo &quot;mywebapp&#47;libs&#47;yundb&#47;db&quot;<br>  2.3 省略包名<br>    import . “your&#47;lib”<br>    这里的点.符号表示，对包 lib 的调用直接省略包名.<br>  2.4 初始化方式<br>    improt _ “your&#47;lib”<br>    特殊符号“_” 仅仅会导致 lib 执行初始化工作，如初始化全局变量，调用 init 函数。<br><br><br>","like_count":6},{"had_liked":false,"id":20161,"user_name":"梦里追逐","can_delete":false,"product_type":"c1","uid":1199004,"ip_address":"","ucode":"719C41D9331439","user_header":"https://static001.geekbang.org/account/avatar/00/12/4b/9c/882d6452.jpg","comment_is_top":false,"comment_ctime":1534295950,"is_pvip":false,"replies":[{"id":"7079","content":"你好，我用的是goland，但是代码不会依赖于IDE的，只会依赖于Go语言本身。免费的编辑器推荐vs code。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1534335104,"ip_address":"","comment_id":20161,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23009132430","product_id":100013101,"comment_content":"咱们用的都是哪个IDE？","like_count":6,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422136,"discussion_content":"你好，我用的是goland，但是代码不会依赖于IDE的，只会依赖于Go语言本身。免费的编辑器推荐vs code。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534335104,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":20113,"user_name":"成都福哥","can_delete":false,"product_type":"c1","uid":1034285,"ip_address":"","ucode":"0D3C2E5FE17E6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c8/2d/3dd499a9.jpg","comment_is_top":false,"comment_ctime":1534263014,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23009099494","product_id":100013101,"comment_content":"用自定义的cmdLine的时候，usage函数里的flag.PrintDefaults()应该相应的变成cmdLine.PrintDefaults()吧。","like_count":6},{"had_liked":false,"id":19941,"user_name":"吉祥","can_delete":false,"product_type":"c1","uid":1004960,"ip_address":"","ucode":"4E4F549CB975DB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/a0/65833509.jpg","comment_is_top":false,"comment_ctime":1534171358,"is_pvip":false,"replies":[{"id":"7084","content":"你好，请到GitHub上下载完整的源码文件。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1534335372,"ip_address":"","comment_id":19941,"utype":1}],"discussion_count":2,"race_medal":0,"score":"23009007838","product_id":100013101,"comment_content":"undefined: os 怎么回事","like_count":5,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422028,"discussion_content":"你好，请到GitHub上下载完整的源码文件。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534335372,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1564503,"avatar":"https://static001.geekbang.org/account/avatar/00/17/df/57/8b09c288.jpg","nickname":"蔡康","note":"","ucode":"40F07BEBC93AEE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":325626,"discussion_content":"import OS ，很明显所有的包引用都需要import","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605366822,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22224,"user_name":"mayunian","can_delete":false,"product_type":"c1","uid":1092049,"ip_address":"","ucode":"D38591B31F9E0C","user_header":"https://static001.geekbang.org/account/avatar/00/10/a9/d1/ffe56a3d.jpg","comment_is_top":false,"comment_ctime":1535576592,"is_pvip":false,"replies":[{"id":"8111","content":"-1是负数，编译器看出来了，帮你挑出来。y是int类型的变量，编译器不知道里面存的是不是负数，没法帮你挑出来。转换会成功结果会不正确。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1535802945,"ip_address":"","comment_id":22224,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18715445776","product_id":100013101,"comment_content":"老师，今天试了一下类型转换。<br>为什么转换var x uint = uint(-1) 的时候会报错？<br>而var y int = -1<br>var x uint = uint(y)就不会报错呢？","like_count":4,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423048,"discussion_content":"-1是负数，编译器看出来了，帮你挑出来。y是int类型的变量，编译器不知道里面存的是不是负数，没法帮你挑出来。转换会成功结果会不正确。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535802945,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1231587,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ca/e3/7e860739.jpg","nickname":"一介农夫","note":"","ucode":"FBDEE48436A542","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586443,"discussion_content":"uint 无符号整数，是不能表示负数的，这么转一定报错啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662217215,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":20025,"user_name":"丸子说","can_delete":false,"product_type":"c1","uid":1197627,"ip_address":"","ucode":"E590148111CC00","user_header":"https://static001.geekbang.org/account/avatar/00/12/46/3b/542405d7.jpg","comment_is_top":false,"comment_ctime":1534218702,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18714087886","product_id":100013101,"comment_content":"从flag.stringvar&#47;flag.string到flag.commandline再到私有cmdline命令参数容器，循序渐进，由浅到深。","like_count":4},{"had_liked":false,"id":202132,"user_name":"闪电瘸子","can_delete":false,"product_type":"c1","uid":1654090,"ip_address":"","ucode":"7C6723D14693AB","user_header":"https://static001.geekbang.org/account/avatar/00/19/3d/4a/7e488810.jpg","comment_is_top":false,"comment_ctime":1585906658,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14470808546","product_id":100013101,"comment_content":"值得称赞的是 作者将gopath， goroot， go的代码组织结构讲清楚了。 我看其他的文章好像详细讲这个的不多。。。","like_count":3},{"had_liked":false,"id":177306,"user_name":"传说中的成大大","can_delete":false,"product_type":"c1","uid":1236766,"ip_address":"","ucode":"103543D6E706BF","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","comment_is_top":false,"comment_ctime":1581344796,"is_pvip":false,"replies":[{"id":"68868","content":"前者是“注册”，后者是“处理”。这是两个步骤。“处理”只会针对那些已“注册”的参数。打个比方，你报了个培训班，交了钱、拿到了入场证，这就相当于“注册”。但是你还得去上课，只有去了课堂才能学到东西，这就相当于“处理”。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1581390092,"ip_address":"","comment_id":177306,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14466246684","product_id":100013101,"comment_content":"不太明白的地方在于 flag.stringvar 和flag.parse的作用 前面调用了flag.stringvar并且已经传入了name地址 为什么还要再调用一次flag.parse？","like_count":3,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483385,"discussion_content":"前者是“注册”，后者是“处理”。这是两个步骤。“处理”只会针对那些已“注册”的参数。打个比方，你报了个培训班，交了钱、拿到了入场证，这就相当于“注册”。但是你还得去上课，只有去了课堂才能学到东西，这就相当于“处理”。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581390092,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2641303,"avatar":"https://static001.geekbang.org/account/avatar/00/28/4d/97/1d99a0a3.jpg","nickname":"柒城","note":"","ucode":"CAC7861175232A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":405209,"discussion_content":"那个init函数系统会自动调用么，不需要在main函数里面调用么 ？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634529712,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97770,"user_name":"弥撒","can_delete":false,"product_type":"c1","uid":1120262,"ip_address":"","ucode":"D7AB4F26ED469B","user_header":"https://static001.geekbang.org/account/avatar/00/11/18/06/e711ca7e.jpg","comment_is_top":false,"comment_ctime":1558769864,"is_pvip":false,"replies":[{"id":"34980","content":"有这样一个规则：<br><br>main 包中的所有 init 函数都会先于 main 函数执行，main 包直接依赖的那些代码包中的 init 函数会先于 main 包中的 init 函数执行，以此类推（与依赖方向完全相反）。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1558794282,"ip_address":"","comment_id":97770,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14443671752","product_id":100013101,"comment_content":"老师好，在执行demo2.go程序运行的时候，我打印了一下init()方法和main()方法的执行顺序，发现init方法先与flag.Parse()这句话之前就运行了，这是什么原因，程序入口不是main方法吗？","like_count":4,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451410,"discussion_content":"有这样一个规则：\n\nmain 包中的所有 init 函数都会先于 main 函数执行，main 包直接依赖的那些代码包中的 init 函数会先于 main 包中的 init 函数执行，以此类推（与依赖方向完全相反）。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558794282,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":31935,"user_name":"飞吧蛐蛐","can_delete":false,"product_type":"c1","uid":1250502,"ip_address":"","ucode":"717D96DC5CF2D1","user_header":"https://static001.geekbang.org/account/avatar/00/13/14/c6/5ca3440a.jpg","comment_is_top":false,"comment_ctime":1539334405,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14424236293","product_id":100013101,"comment_content":"问题1：通过flag库的提示，或者看flag包的用法，参数支持Bool&#47;Duration&#47;Float64&#47;Int&#47;Int64&#47;Uint&#47;Uint64，也支持Float32，猜测考虑到精度问题，flag没有支持float32。<br>问题2：参数值的类型可以是自定义的数据类型，使用实现flag包里的Value接口，然后使用flag.Var()实现。（flag源码里有提示，Value is the interface to the dynamic value stored in a flag）<br><br>PS：看一下flag包的用法和源码就能解答这两个问题了。","like_count":3},{"had_liked":false,"id":23843,"user_name":"属雨","can_delete":false,"product_type":"c1","uid":1202624,"ip_address":"","ucode":"700236847A5C94","user_header":"https://static001.geekbang.org/account/avatar/00/12/59/c0/6f02c096.jpg","comment_is_top":false,"comment_ctime":1536682425,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14421584313","product_id":100013101,"comment_content":"给VS Code的用户一个脚本，用于安装VS Code的Go扩展所需要的。<br>VS code的go插件需要的扩展组件有的需要翻墙，安装不了，<br>Linux<br>https:&#47;&#47;github.com&#47;cloudfstrife&#47;note&#47;blob&#47;develop&#47;golang&#47;install_vs_code_golang_ext_tools.sh<br><br>windows<br>https:&#47;&#47;github.com&#47;cloudfstrife&#47;note&#47;blob&#47;develop&#47;golang&#47;install_vs_code_golang_ext_tools.ps1<br>这个是powershell脚本，在win7 powershell 5测试通过。<br><br>执行powershell 需要 修改策略，详见：<br>http:&#47;&#47;www.cnblogs.com&#47;Jim-william&#47;p&#47;5492507.html<br><br>## 注意shell中的说明，GOPATH目前只支持一个目录。<br>","like_count":3},{"had_liked":false,"id":19983,"user_name":"芒果","can_delete":false,"product_type":"c1","uid":1124278,"ip_address":"","ucode":"5AD71E7F9FC738","user_header":"https://static001.geekbang.org/account/avatar/00/11/27/b6/e53c17ee.jpg","comment_is_top":false,"comment_ctime":1534205939,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14419107827","product_id":100013101,"comment_content":"关于变量以标准输入为准的问题，我个人认为init中的定义只是定义了解析规则，真正执行解析是flag.Parse()时开始，因此以标准输出为准。想想我们自己写的时候会怎么实现，先获得输入如：-name1=a，然后解析为key=name1和value=a，然后走一个if，else判断，如果key匹配则对其赋值。所以就很好解释了。个人感觉自己的理解还是比较靠谱的，虽然没有研究源码。欢迎大神们交流","like_count":3},{"had_liked":false,"id":19967,"user_name":"松烽","can_delete":false,"product_type":"c1","uid":1072474,"ip_address":"","ucode":"D850DBBBD3DAF0","user_header":"https://static001.geekbang.org/account/avatar/00/10/5d/5a/44858499.jpg","comment_is_top":false,"comment_ctime":1534202981,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14419104869","product_id":100013101,"comment_content":"自定义参数，还可以自己通过字符串转对象的方式实现","like_count":3},{"had_liked":false,"id":19883,"user_name":"茶底","can_delete":false,"product_type":"c1","uid":1188926,"ip_address":"","ucode":"687DD3686A84D2","user_header":"https://static001.geekbang.org/account/avatar/00/12/24/3e/692a93f7.jpg","comment_is_top":false,"comment_ctime":1534135655,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14419037543","product_id":100013101,"comment_content":"1.string int bool<br>2.使用flag.Var().重点在于实现Value接口。","like_count":3},{"had_liked":false,"id":86989,"user_name":"NEVER SETTLE","can_delete":false,"product_type":"c1","uid":1101894,"ip_address":"","ucode":"9C86BDAFDBF768","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/46/1a9229b3.jpg","comment_is_top":false,"comment_ctime":1555493138,"is_pvip":false,"replies":[{"id":"31376","content":"依据Go语言规范这样做是没问题的，可以编译通过。只不过这个插件会检查一些“最佳实践”的东西，所以会出现相应的警告。关于Go代码包命名的最佳实践可以参考这篇官方博客：https:&#47;&#47;blog.golang.org&#47;package-names 。这里还有一篇优秀英文博客的中文翻译，可以供参考：https:&#47;&#47;studygolang.com&#47;articles&#47;11823 。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1555556587,"ip_address":"","comment_id":86989,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10145427730","product_id":100013101,"comment_content":"老师，package name 是不能使用下划线吗，我在用vscode时候，go-lint插件会报这个警告。","like_count":2,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447271,"discussion_content":"依据Go语言规范这样做是没问题的，可以编译通过。只不过这个插件会检查一些“最佳实践”的东西，所以会出现相应的警告。关于Go代码包命名的最佳实践可以参考这篇官方博客：https://blog.golang.org/package-names 。这里还有一篇优秀英文博客的中文翻译，可以供参考：https://studygolang.com/articles/11823 。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555556587,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69747,"user_name":"但爱","can_delete":false,"product_type":"c1","uid":1170751,"ip_address":"","ucode":"6F885E6EC3F4F9","user_header":"https://static001.geekbang.org/account/avatar/00/11/dd/3f/6310de91.jpg","comment_is_top":false,"comment_ctime":1550827639,"is_pvip":false,"replies":[{"id":"25266","content":"解析是在 flag.Parse() 函数中进行的，剩下的你试一下就知道了。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1551184599,"ip_address":"","comment_id":69747,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10140762231","product_id":100013101,"comment_content":"老师帮忙解答一下注释中的问题：<br>package main<br><br>import &quot;flag&quot;<br>import &quot;fmt&quot;<br><br>var name string<br><br>&#47;&#47; init方法调用时间？<br>func init(){<br>    &#47;&#47; 当前方法相当于注册一个钩子<br>    flag.StringVar(&amp;name, &quot;name&quot;, &quot;everyone&quot;, &quot;put you name.&quot;)<br>    &#47;&#47; flag.String()方法会实时返回参数值，是否做了实时参数解析，如果多次调用，是否是每次执行都解析一遍，效率是否有影响？<br>}<br><br>func main(){<br>    &#47;&#47; 真正解析传递参数的地方，解析到一个参数后，查询是否有对应注册的钩子，如果有，则赋值，顺序<br>    flag.Parse()<br>    fmt.Printf(&quot;Hello %s!&quot;, name)<br>}","like_count":2,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440261,"discussion_content":"解析是在 flag.Parse() 函数中进行的，剩下的你试一下就知道了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551184599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19875,"user_name":"五流诗人二手黑客","can_delete":false,"product_type":"c1","uid":1029132,"ip_address":"","ucode":"FD0B559D5C122B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b4/0c/21185eca.jpg","comment_is_top":false,"comment_ctime":1534131407,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10124065999","product_id":100013101,"comment_content":"之前练习go时候写了一个将预定格式xml转换成sql的方法，感觉这个语言写起来很有趣","like_count":2},{"had_liked":false,"id":19836,"user_name":"后端进阶","can_delete":false,"product_type":"c1","uid":1125656,"ip_address":"","ucode":"480F48F5378307","user_header":"https://static001.geekbang.org/account/avatar/00/11/2d/18/918eaecf.jpg","comment_is_top":false,"comment_ctime":1534120364,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10124054956","product_id":100013101,"comment_content":"命令源码对应的包也是通过go install唯一能够生成可执行文件的包","like_count":2},{"had_liked":false,"id":308928,"user_name":"栋子","can_delete":false,"product_type":"c1","uid":2019382,"ip_address":"","ucode":"7CD7B78682DFE8","user_header":"https://static001.geekbang.org/account/avatar/00/1e/d0/36/9da4d5d0.jpg","comment_is_top":false,"comment_ctime":1629863175,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5924830471","product_id":100013101,"comment_content":"https:&#47;&#47;golang.google.cn&#47;pkg&#47;flag&#47;#pkg-variables<br><br>func BoolVar(p *bool, name string, value bool, usage string)<br>func DurationVar(p *time.Duration, name string, value time.Duration, usage string)<br>func Float64Var(p *float64, name string, value float64, usage string)<br>func Int64Var(p *int64, name string, value int64, usage string)<br>func IntVar(p *int, name string, value int, usage string)<br>func StringVar(p *string, name string, value string, usage string)<br>func Uint64Var(p *uint64, name string, value uint64, usage string)<br>func UintVar(p *uint, name string, value uint, usage string)<br>type FlagSet<br>    func (f *FlagSet) BoolVar(p *bool, name string, value bool, usage string)<br>    func (f *FlagSet) DurationVar(p *time.Duration, name string, value time.Duration, usage string)<br>    func (f *FlagSet) Float64Var(p *float64, name string, value float64, usage string)<br>    func (f *FlagSet) IntVar(p *int, name string, value int, usage string)<br>    func (f *FlagSet) StringVar(p *string, name string, value string, usage string)<br>    func (f *FlagSet) Uint64Var(p *uint64, name string, value uint64, usage string)<br>    func (f *FlagSet) UintVar(p *uint, name string, value uint, usage string)<br>type Getter<br>type Value<br><br>Or you can create custom flags that satisfy the Value interface (with pointer receivers) and couple them to flag.","like_count":1},{"had_liked":false,"id":291079,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1620012431,"is_pvip":true,"discussion_count":1,"race_medal":2,"score":"5914979727","product_id":100013101,"comment_content":"从隔壁的《Go 语言从入门到实战》的课程里面，学到实用 test 程序来进行语言的学习，似乎比用命令源码文件要方便一些，不需要每个程序都建立一个目录。<br><br>不过这篇专栏的内容还是最好写命令源码文件的，因为要传入参数。<br><br>flag.StringVar 类似于注册参数<br>flag.String 返回的是存储命令参数值的地址<br>flag.Parse 才是真正解析命令参数并且赋值的方法<br><br>手敲了一遍官网上 flag 的三个示例代码，学习专栏中不明白的地方也就都理解了。<br><br>这一篇的留言比上一篇少了一半，是因为大家都觉的简单么？","like_count":1,"discussions":[{"author":{"id":1123152,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/50/1f5154fe.jpg","nickname":"无笔秀才","note":"","ucode":"DCFA10866A8E5B","race_medal":3,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":570545,"discussion_content":"请问从入门到实战 第几节？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651811053,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":212137,"user_name":"ronin","can_delete":false,"product_type":"c1","uid":1206490,"ip_address":"","ucode":"5DF632A97F6177","user_header":"https://static001.geekbang.org/account/avatar/00/12/68/da/2148d4ed.jpg","comment_is_top":false,"comment_ctime":1588064830,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5883032126","product_id":100013101,"comment_content":"package main<br><br>import (<br>\t&quot;errors&quot;<br>\t&quot;flag&quot;<br>\t&quot;fmt&quot;<br>\t&quot;strings&quot;<br>)<br><br>type Student struct {<br>\tName     string<br>\tPassword string<br>}<br><br>func (s *Student) String() string {<br>\treturn fmt.Sprintf(&quot;Name: %s, Password: %s\\n&quot;, s.Name, s.Password)<br>}<br><br>func (s *Student) Set(_s string) error {<br>\tstudentArr := strings.Split(_s, &quot;,&quot;)<br>\tif len(studentArr) == 2 {<br>\t\ts.Name = studentArr[0]<br>\t\ts.Password = studentArr[1]<br>\t\treturn nil<br>\t}<br>\treturn errors.New(&quot;error&quot;)<br>}<br><br>func main() {<br>\tname := flag.String(&quot;name&quot;, &quot;admin&quot;, &quot;user name&quot;)<br>\ts := new(Student)<br>\tflag.Var(s, &quot;student&quot;, &quot;student info&quot;)<br><br>\tflag.Parse()<br><br>\tfmt.Println(&quot;hello,&quot;, *name)<br>\tfmt.Println(s)<br>}<br><br>&#47;*<br>➜  go run main.go -name &quot;asdad&quot; -student &quot;zhangsan&quot;,&quot;123&quot;<br><br>\thello, asdad<br>\tName: zhangsan, Password: 123<br>*&#47;<br>","like_count":1},{"had_liked":false,"id":89465,"user_name":"王聪 Claire","can_delete":false,"product_type":"c1","uid":1090310,"ip_address":"","ucode":"0D9CC82C9F44D4","user_header":"https://static001.geekbang.org/account/avatar/00/10/a3/06/9fa93074.jpg","comment_is_top":false,"comment_ctime":1556180106,"is_pvip":false,"replies":[{"id":"32053","content":"vim、emacs、vscode、liteide","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1556197716,"ip_address":"","comment_id":89465,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5851147402","product_id":100013101,"comment_content":"请问linux下有什么好用的go语言的IDE推荐吗？谢谢。","like_count":1,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448143,"discussion_content":"vim、emacs、vscode、liteide","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556197716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78547,"user_name":"小样","can_delete":false,"product_type":"c1","uid":1075443,"ip_address":"","ucode":"0D05E1D31150F1","user_header":"https://static001.geekbang.org/account/avatar/00/10/68/f3/22481a37.jpg","comment_is_top":false,"comment_ctime":1553172985,"is_pvip":true,"replies":[{"id":"28871","content":"对，是Go语言运行时系统自动调用的，在初始化它所在的代码包的时候。在同一个运行着的程序中，每个代码包中的init函数只会被调用一次。另外每个代码包还可以有多个init函数，而且他们的执行顺序与编写顺序无关。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1553397824,"ip_address":"","comment_id":78547,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5848140281","product_id":100013101,"comment_content":"??init函数是什么，没地方调用啊。是系统的默认的？","like_count":1,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444137,"discussion_content":"对，是Go语言运行时系统自动调用的，在初始化它所在的代码包的时候。在同一个运行着的程序中，每个代码包中的init函数只会被调用一次。另外每个代码包还可以有多个init函数，而且他们的执行顺序与编写顺序无关。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553397824,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22581,"user_name":"Neo","can_delete":false,"product_type":"c1","uid":1111110,"ip_address":"","ucode":"7A8CD1C7D678B8","user_header":"https://static001.geekbang.org/account/avatar/00/10/f4/46/d7008b8b.jpg","comment_is_top":false,"comment_ctime":1535802482,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5830769778","product_id":100013101,"comment_content":"感谢老师，要是代码有语法高亮就更好了","like_count":1},{"had_liked":false,"id":22383,"user_name":"郁柏","can_delete":false,"product_type":"c1","uid":1198127,"ip_address":"","ucode":"622B54C156B4AF","user_header":"https://static001.geekbang.org/account/avatar/00/12/48/2f/6bfaa288.jpg","comment_is_top":false,"comment_ctime":1535639550,"is_pvip":false,"replies":[{"id":"8110","content":"可以去github上手动下载，然后存储到指定位置。最好有git clone命令下载。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1535802711,"ip_address":"","comment_id":22383,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5830606846","product_id":100013101,"comment_content":"执行 go get -v github.com&#47;sqs&#47;goreturns 失败。 <br>请求连接超时。 请问怎么办。","like_count":1,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423092,"discussion_content":"可以去github上手动下载，然后存储到指定位置。最好有git clone命令下载。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535802711,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":20382,"user_name":"金阳","can_delete":false,"product_type":"c1","uid":1057331,"ip_address":"","ucode":"5DA949C5970F24","user_header":"https://static001.geekbang.org/account/avatar/00/10/22/33/6b9a7719.jpg","comment_is_top":false,"comment_ctime":1534404857,"is_pvip":false,"replies":[{"id":"7164","content":"godoc.org","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1534466968,"ip_address":"","comment_id":20382,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5829372153","product_id":100013101,"comment_content":"想请教一下老师，这种go 语言自带的api哪里可以查看","like_count":1,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422228,"discussion_content":"godoc.org","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534466968,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19939,"user_name":"世风十三","can_delete":false,"product_type":"c1","uid":1034414,"ip_address":"","ucode":"852E0EF615FDC6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c8/ae/f2b0bc01.jpg","comment_is_top":false,"comment_ctime":1534171275,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5829138571","product_id":100013101,"comment_content":"flag.Usage 那部分有个 os 变量是 undefined 啊？","like_count":1},{"had_liked":false,"id":19833,"user_name":"ylck","can_delete":false,"product_type":"c1","uid":1188152,"ip_address":"","ucode":"133C317CF68A8E","user_header":"https://static001.geekbang.org/account/avatar/00/12/21/38/548f36ef.jpg","comment_is_top":false,"comment_ctime":1534119868,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5829087164","product_id":100013101,"comment_content":"很详细。","like_count":1},{"had_liked":false,"id":344017,"user_name":"Geek_625e78","can_delete":false,"product_type":"c1","uid":2391271,"ip_address":"","ucode":"1D3686E6BA517F","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM669OOswheIX99Lkhn9JYj7wYQw24haC2pUJEeu9f6yY2NUF8MFarc5CKR5TL8m7Qr6GHUWRd02BQ/132","comment_is_top":false,"comment_ctime":1651195084,"is_pvip":false,"replies":[{"id":"126113","content":"多新的新人？是没学过编程的？还是只是没学过Go语言？","user_name":"作者回复","user_name_real":"编辑","uid":"1026643","ctime":1652409869,"ip_address":"","comment_id":344017,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1651195084","product_id":100013101,"comment_content":"新人不适合学这个吗","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571786,"discussion_content":"多新的新人？是没学过编程的？还是只是没学过Go语言？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652409869,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":333577,"user_name":"给力","can_delete":false,"product_type":"c1","uid":1113645,"ip_address":"","ucode":"646EE4AFC17224","user_header":"https://static001.geekbang.org/account/avatar/00/10/fe/2d/2c9177ca.jpg","comment_is_top":false,"comment_ctime":1644410385,"is_pvip":false,"replies":[{"id":"121985","content":"好，给力","user_name":"作者回复","user_name_real":"编辑","uid":"1026643","ctime":1644639620,"ip_address":"","comment_id":333577,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1644410385","product_id":100013101,"comment_content":"第二个问题：<br>可以实现自定义参数，自定义参数得支持<br>type Value interface {<br>\tString() string<br>\tSet(string) error<br>}","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550619,"discussion_content":"好，给力","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644639620,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":323873,"user_name":"百合花开","can_delete":false,"product_type":"c1","uid":2565648,"ip_address":"","ucode":"68DDCED321A102","user_header":"https://static001.geekbang.org/account/avatar/00/27/26/10/52dba3fb.jpg","comment_is_top":false,"comment_ctime":1638190116,"is_pvip":false,"replies":[{"id":"117543","content":"在这里：https:&#47;&#47;github.com&#47;hyper0x&#47;Golang_Puzzlers ，页面中有一个“Code”按钮，点一下然后根据需要选择下载的方式。","user_name":"作者回复","user_name_real":"编辑","uid":"1026643","ctime":1638237283,"ip_address":"","comment_id":323873,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1638190116","product_id":100013101,"comment_content":"课程中的那些go的源代码的例子文件，怎么获取到？","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534592,"discussion_content":"在这里：https://github.com/hyper0x/Golang_Puzzlers ，页面中有一个“Code”按钮，点一下然后根据需要选择下载的方式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638237283,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320551,"user_name":"PHP菜鸟","can_delete":false,"product_type":"c1","uid":1899397,"ip_address":"","ucode":"77B7DC81B5AA1F","user_header":"https://static001.geekbang.org/account/avatar/00/1c/fb/85/f3fd1724.jpg","comment_is_top":false,"comment_ctime":1636375968,"is_pvip":false,"replies":[{"id":"116287","content":"除了GOPATH，其他的内容在Go新旧版本里都基本上没啥变化。所以还好。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1636435467,"ip_address":"","comment_id":320551,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1636375968","product_id":100013101,"comment_content":"这个教程的Go的版本是不是有点太老了<br>","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530042,"discussion_content":"除了GOPATH，其他的内容在Go新旧版本里都基本上没啥变化。所以还好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636435467,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2219455,"avatar":"https://static001.geekbang.org/account/avatar/00/21/dd/bf/4bbf490d.jpg","nickname":"Gale","note":"","ucode":"B49C4C29D18BB7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":532961,"discussion_content":"那能不能再给新手补充一下GOPATH呢？ 刚开始学，项目管理看的云里雾里的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637741210,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":530042,"ip_address":""},"score":532961,"extra":"{\"user_type\":1}"}]}]},{"had_liked":false,"id":292660,"user_name":"静风逐浪","can_delete":false,"product_type":"c1","uid":1892413,"ip_address":"","ucode":"A7294E1F15AF7B","user_header":"https://static001.geekbang.org/account/avatar/00/1c/e0/3d/98a863c1.jpg","comment_is_top":false,"comment_ctime":1620913173,"is_pvip":false,"replies":[{"id":"105991","content":"XML的RPC ？这个还真不知道。先不管以XML为数据载体在互联网业界比较冷门，先看RPC。你得先确定Python的这个RPC服务遵循的是什么协议。RPC只是一个概念而已，具体还要看协议。先把协议的名字翻出来，然后顺着这个名字再找相应的库。实在不成自己写一个遵循这个协议的MVP（最小可行性产品），够你这次对接用的就可以了。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1620969998,"ip_address":"","comment_id":292660,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1620913173","product_id":100013101,"comment_content":"老师有没有go xml-rpc库推荐呢，最近项目中需要调用Python写的xmlrpc服务，没找到合适的","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519908,"discussion_content":"XML的RPC ？这个还真不知道。先不管以XML为数据载体在互联网业界比较冷门，先看RPC。你得先确定Python的这个RPC服务遵循的是什么协议。RPC只是一个概念而已，具体还要看协议。先把协议的名字翻出来，然后顺着这个名字再找相应的库。实在不成自己写一个遵循这个协议的MVP（最小可行性产品），够你这次对接用的就可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620969998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":291630,"user_name":"lvvp","can_delete":false,"product_type":"c1","uid":1097298,"ip_address":"","ucode":"D36C7B186C56DC","user_header":"https://static001.geekbang.org/account/avatar/00/10/be/52/568e8c06.jpg","comment_is_top":false,"comment_ctime":1620394411,"is_pvip":false,"replies":[{"id":"105654","content":"你的问题我没有重现啊，我这里的输出是一致的。<br><br>输出的都是：<br><br>Usage of question:<br>  -name string<br>        The greeting object. (default &quot;everyone&quot;)<br><br>","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1620458709,"ip_address":"","comment_id":291630,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1620394411","product_id":100013101,"comment_content":"package main<br><br>import (<br>\t&quot;flag&quot;<br>\t&quot;fmt&quot;<br>\t&quot;os&quot;<br>)<br><br>var name4  = flag.String(&quot;name4&quot;,&quot;every one&quot;,&quot;the greeting object&quot;)<br><br><br>func init()  {<br>\tflag.CommandLine = flag.NewFlagSet(&quot;&quot;, flag.ExitOnError)<br>\tflag.CommandLine.Usage = func() { fmt.Fprintf(os.Stderr, &quot;Usage of %s:\\n&quot;, &quot;question&quot;)<br>\tflag.PrintDefaults()}<br><br>}<br><br>func main() {<br><br>\t&#47;&#47;flag.Usage = func() {<br>\t&#47;&#47;\tfmt.Fprintf(os.Stderr, &quot;Usage of %s:\\n&quot;, &quot;question&quot;)<br>\t&#47;&#47;\tflag.PrintDefaults()<br>\t&#47;&#47;}<br>\tflag.Parse()<br>\tfmt.Println(&quot;Hello \\n&quot;,*name4)<br><br>}<br><br>再运行命令go run demo3.go --help后，其输出会与上一次的输出的一致<br><br>我测试的和前面是不一致的，go版本为1.16.4 麻烦看下<br>","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519528,"discussion_content":"你的问题我没有重现啊，我这里的输出是一致的。\n\n输出的都是：\n\nUsage of question:\n  -name string\n        The greeting object. (default &amp;quot;everyone&amp;quot;)\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620458709,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1603571,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKgNge1sNXIWCFeUOa53cU5Glfw24sjxibBxTiaTb45LmU9bRDlDgBib9goFZXmoKwXTOJ4JMvVHHbiaA/132","nickname":"潘林林","note":"","ucode":"31576141FE4A1D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":402753,"discussion_content":"全局定义name4 的时候不要赋值 在init函数里面再赋值flag.String(&#34;name4&#34;,&#34;every one&#34;,&#34;the greeting object&#34;)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633943733,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":291081,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1620013014,"is_pvip":true,"discussion_count":0,"race_medal":2,"score":"1620013014","product_id":100013101,"comment_content":"对于思考题：<br><br>1. 命令源码文件默认能接受哪些类型的参数值？<br><br>我从官网的说明中看到的是 string, bool 和 int，细分的类型可能需要看源码或者是方法的定义。<br><br>bool, float64, int, int64, string, uint64, uint, time.Duration<br><br>2. 自定义数据类型作为参数值的类型<br><br>这个在专栏文中和官方示例中都有，只要有类型定义，并且传入符合要求的值即可。","like_count":0},{"had_liked":false,"id":277824,"user_name":"任伟","can_delete":false,"product_type":"c1","uid":1138060,"ip_address":"","ucode":"2F1CDEC69B3D8F","user_header":"https://static001.geekbang.org/account/avatar/00/11/5d/8c/767f9aa8.jpg","comment_is_top":false,"comment_ctime":1612606818,"is_pvip":false,"replies":[{"id":"100845","content":"你改了什么代码吗？","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1612676538,"ip_address":"","comment_id":277824,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1612606818","product_id":100013101,"comment_content":"➜  go go run demo2.go -name=&quot;xxxx&quot;<br># command-line-arguments<br>.&#47;demo2.go:14:17: cannot use &amp;name (type **string) as type *string in argument to flag.StringVar<br><br>没有人运行出错吗？？","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515183,"discussion_content":"你改了什么代码吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612676538,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":272313,"user_name":"我很迪奥","can_delete":false,"product_type":"c1","uid":2062003,"ip_address":"","ucode":"D5CBE87C1264C1","user_header":"","comment_is_top":false,"comment_ctime":1610028435,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610028435","product_id":100013101,"comment_content":"感觉描述语句应该少一些，直接粘代码会更简单明了一些。 类似下面这种。<br><br>现在我们把main函数体中的那条对flag.Usage变量的赋值语句注销掉，然后在init函数体的开始处添加如下代码：<br><br>现在我们把main函数体中的那条对flag.Usage变量的赋值语句注销掉，然后在init函数体的开始处添加如下代码<br>","like_count":0},{"had_liked":false,"id":212561,"user_name":"LUO JINGYUAN","can_delete":false,"product_type":"c1","uid":1984817,"ip_address":"","ucode":"6403B6D6B6ECB5","user_header":"https://static001.geekbang.org/account/avatar/00/1e/49/31/6d5728ac.jpg","comment_is_top":false,"comment_ctime":1588149510,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588149510","product_id":100013101,"comment_content":"学习了，flag 和command line 是同一实现的不同用法。<br>golang真的很不错，越学越喜欢","like_count":0},{"had_liked":false,"id":189592,"user_name":"Cyril","can_delete":false,"product_type":"c1","uid":1024693,"ip_address":"","ucode":"29FFFAC32F911B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a2/b5/4dc0c109.jpg","comment_is_top":false,"comment_ctime":1584532237,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584532237","product_id":100013101,"comment_content":"学关注过flag，重新学习","like_count":0},{"had_liked":false,"id":179013,"user_name":"EvanChen","can_delete":false,"product_type":"c1","uid":1203520,"ip_address":"","ucode":"CEA223FEB2CADC","user_header":"https://static001.geekbang.org/account/avatar/00/12/5d/40/b8831a52.jpg","comment_is_top":false,"comment_ctime":1581872786,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581872786","product_id":100013101,"comment_content":"代码分开写看着太难受了","like_count":0},{"had_liked":false,"id":177572,"user_name":"给力","can_delete":false,"product_type":"c1","uid":1113645,"ip_address":"","ucode":"646EE4AFC17224","user_header":"https://static001.geekbang.org/account/avatar/00/10/fe/2d/2c9177ca.jpg","comment_is_top":false,"comment_ctime":1581426447,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581426447","product_id":100013101,"comment_content":"package main<br>源码里有提供<br>import (<br>\t&quot;flag&quot;<br>\t&quot;fmt&quot;<br>\t&quot;net&#47;url&quot;<br>)<br><br>type URLValue struct {<br>\tURL *url.URL<br>}<br><br>func (v URLValue) String() string {<br>\tif v.URL != nil {<br>\t\treturn v.URL.String()<br>\t}<br>\treturn &quot;&quot;<br>}<br><br>func (v URLValue) Set(s string) error {<br>\tif u, err := url.Parse(s); err != nil {<br>\t\treturn err<br>\t} else {<br>\t\t*v.URL = *u<br>\t}<br>\treturn nil<br>}<br><br>var u = &amp;url.URL{}<br><br>func main() {<br>\tfs := flag.NewFlagSet(&quot;ExampleValue&quot;, flag.ExitOnError)<br>\tfs.Var(&amp;URLValue{u}, &quot;url&quot;, &quot;URL to parse&quot;)<br><br>\tfs.Parse([]string{&quot;-url&quot;, &quot;https:&#47;&#47;golang.org&#47;pkg&#47;flag&#47;&quot;})<br>\tfmt.Printf(`{scheme: %q, host: %q, path: %q}`, u.Scheme, u.Host, u.Path)<br><br>}","like_count":0},{"had_liked":false,"id":174335,"user_name":"苏近之","can_delete":false,"product_type":"c1","uid":1614419,"ip_address":"","ucode":"C431369E44B926","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/41OnicB5R5ofibpEX4kbqH6ebibZW1dVImfKSkeaHw4D9nnvyoLmDSX0e1OmhoDlL9ZMEhgpopxPt53KW6BNpXibWQ/132","comment_is_top":false,"comment_ctime":1580155904,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580155904","product_id":100013101,"comment_content":"在学习这一篇的时候，我去看了一下 Flag 的源码。源码中回答了，Flag 支持哪些参数类型，对其实现会有更多的了解。在这个过程中，也看到了其作者是如何写代码的，如何组织代码结构的。","like_count":0},{"had_liked":false,"id":171065,"user_name":"心照不宣","can_delete":false,"product_type":"c1","uid":1258813,"ip_address":"","ucode":"CCF94A13F2689C","user_header":"https://static001.geekbang.org/account/avatar/00/13/35/3d/2feb6b67.jpg","comment_is_top":false,"comment_ctime":1578836675,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578836675","product_id":100013101,"comment_content":"1、go语言的命令源码文件可以接受string、bool、int类型的参数值<br>2、","like_count":0},{"had_liked":false,"id":138791,"user_name":"蜉蝣","can_delete":false,"product_type":"c1","uid":1229070,"ip_address":"","ucode":"77CF92496855D4","user_header":"https://static001.geekbang.org/account/avatar/00/12/c1/0e/2b987d54.jpg","comment_is_top":false,"comment_ctime":1570451846,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570451846","product_id":100013101,"comment_content":"使用自定义的数据结构：<br>```go<br>package main<br><br>import (<br>\t&quot;flag&quot;<br>\t&quot;fmt&quot;<br>)<br><br>&#47;&#47; MyStr 存放传进的参数与长度<br>type MyStr struct {<br>\tv string &#47;&#47; 存放值<br>\tl int    &#47;&#47; 存放长度<br>}<br><br>func (m *MyStr) String() string {<br>\treturn string(m.v)<br>}<br><br>&#47;&#47; Set 赋值操作<br>func (m *MyStr) Set(value string) error {<br>\t*m = MyStr{v: value, l: len(value)}<br>\treturn nil<br>}<br><br>&#47;&#47; MyStrVar 解析参数<br>func MyStrVar(m *MyStr, name string, val string, usage string) {<br>\tflag.CommandLine.Var(m, name, usage)<br>}<br><br>func main() {<br>\tvar name MyStr<br>\tMyStrVar(&amp;name, &quot;name&quot;, &quot;***&quot;, &quot;your name&quot;)<br>\tflag.Parse()<br><br>\tfmt.Printf(&quot;%T\\n&quot;, name)<br>\tfmt.Println(name)<br>}<br>```","like_count":0},{"had_liked":false,"id":89914,"user_name":"林万程","can_delete":false,"product_type":"c1","uid":1515429,"ip_address":"","ucode":"A58A951BD3EF51","user_header":"https://static001.geekbang.org/account/avatar/00/17/1f/a5/7e1d43ed.jpg","comment_is_top":false,"comment_ctime":1556329557,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556329557","product_id":100013101,"comment_content":"有点长，记得上次写这个功能就百度了一下例子抄下就写出来了，极客更需要在短时间学大量知识，希望更干货。","like_count":0},{"had_liked":false,"id":85622,"user_name":"stefen","can_delete":false,"product_type":"c1","uid":1202047,"ip_address":"","ucode":"7C9AAE829E7802","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/oib0a89lqtOhJL1UvfUp4uTsRLrDbhoGk9jLiciazxMu0COibJsFCZDypK1ZFcHEJc9d9qgbjvgR41ImL6FNPoVlWA/132","comment_is_top":false,"comment_ctime":1555146518,"is_pvip":false,"replies":[{"id":"30820","content":"意思是：name 变量的类型是 *string ，而不是 string 。你可以这样改：fmt.Printf(&quot;Hello, %s!\\n&quot;, *name) 。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1555216271,"ip_address":"","comment_id":85622,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1555146518","product_id":100013101,"comment_content":"package main<br><br>import (<br>\t&quot;flag&quot;<br>\t&quot;fmt&quot;<br>\t&quot;os&quot;<br>)<br><br>var cmdLine = flag.NewFlagSet(&quot;&quot;, flag.ExitOnError)<br>var name = cmdLine.String(&quot;name&quot;, &quot;everyone&quot;, &quot;The greeting object.&quot;)<br><br>func init() {<br>\tcmdLine.Usage = func() {<br>\t\tfmt.Fprintf(os.Stderr, &quot;Usage of %s:\\n&quot;, &quot;question&quot;)<br>\t\tcmdLine.PrintDefaults()<br>\t}<br>\t&#47;&#47; cmdLine.StringVar(&amp;name, &quot;name&quot;, &quot;everyone&quot;, &quot;The greeting object.&quot;)<br>}<br><br>func main() {<br>\tcmdLine.Parse(os.Args[1:])<br>\tfmt.Printf(&quot;Hello, %s!\\n&quot;, name)<br>}<br><br>执行后输出如下：<br>Hello, %!s(*string=0xc00004e210)! <br>这种输出是什么意思","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446738,"discussion_content":"意思是：name 变量的类型是 *string ，而不是 string 。你可以这样改：fmt.Printf(&amp;quot;Hello, %s!\\n&amp;quot;, *name) 。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555216271,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75872,"user_name":"书剑","can_delete":false,"product_type":"c1","uid":1169550,"ip_address":"","ucode":"B82F925B3FBCAB","user_header":"https://static001.geekbang.org/account/avatar/00/11/d8/8e/0c455b18.jpg","comment_is_top":false,"comment_ctime":1552485591,"is_pvip":false,"replies":[{"id":"28884","content":"代码可以到这里下载：https:&#47;&#47;github.com&#47;hyper0x&#47;Golang_Puzzlers<br><br>失败是成功之母。加油！","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1553399627,"ip_address":"","comment_id":75872,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552485591","product_id":100013101,"comment_content":"感觉很不严谨比如 os undefind那个，建议能在每篇讲完的时候附上这课用上的代码文件，有些时候不知道是代码问题还是环境问题或是其他问题导致代码编译不过，对于初学者来说有点沮丧","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443068,"discussion_content":"代码可以到这里下载：https://github.com/hyper0x/Golang_Puzzlers\n\n失败是成功之母。加油！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553399627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43323,"user_name":"每天晒白牙","can_delete":false,"product_type":"c1","uid":1004698,"ip_address":"","ucode":"A1B102CD933DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","comment_is_top":false,"comment_ctime":1543214144,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1543214144","product_id":100013101,"comment_content":"打卡：<br>demo3.go<br>package main<br><br>import (<br>\t&quot;flag&quot;<br>\t&quot;fmt&quot;<br>\t&quot;os&quot;<br>)<br><br>var name string<br><br>func init() {<br>\tflag.StringVar(&amp;name, &quot;name&quot;, &quot;everyone&quot;, &quot;The greeting object.&quot;)<br>}<br><br>func main() {<br>\tflag.Usage = func() {<br>\t\tfmt.Fprintf(os.Stderr, &quot;Usage of %s:\\n&quot;, &quot;question&quot;)<br>\t\tflag.PrintDefaults()<br>\t}<br>\tflag.Parse()<br>\tfmt.Printf(&quot;Hello,%s!\\n&quot;, name)<br>}<br><br>更新后的demo3.go<br>package main<br><br>import (<br>\t&quot;flag&quot;<br>\t&quot;fmt&quot;<br>\t&quot;os&quot;<br>)<br><br>var name string<br>var cmdLine = flag.NewFlagSet(&quot;question&quot;, flag.ExitOnError)<br><br>func init() {<br>\tflag.CommandLine = flag.NewFlagSet(&quot;&quot;, flag.PanicOnError)<br>\tflag.CommandLine.Usage = func() {<br>\t\tfmt.Fprintf(os.Stderr, &quot;Usage of %s:\\n&quot;, &quot;question&quot;)<br>\t\tflag.PrintDefaults()<br>\t}<br>\tcmdLine.StringVar(&amp;name, &quot;name&quot;, &quot;everyone&quot;, &quot;The greeting object.&quot;)<br>}<br><br>func main() {<br>\tcmdLine.Parse(os.Args[1:])<br>\tfmt.Printf(&quot;Hello,%s!\\n&quot;, name)<br>}","like_count":0},{"had_liked":false,"id":41963,"user_name":"萧何","can_delete":false,"product_type":"c1","uid":1205082,"ip_address":"","ucode":"31942BB064FB16","user_header":"https://static001.geekbang.org/account/avatar/00/12/63/5a/bcb0524f.jpg","comment_is_top":false,"comment_ctime":1542882012,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542882012","product_id":100013101,"comment_content":"上文中的“MY_ZUES_CHAR”是什么意思？<br>","like_count":0},{"had_liked":false,"id":28143,"user_name":"々雪虎々＿卍","can_delete":false,"product_type":"c1","uid":1252859,"ip_address":"","ucode":"3A3EE3E2952080","user_header":"https://static001.geekbang.org/account/avatar/00/13/1d/fb/b41d9589.jpg","comment_is_top":false,"comment_ctime":1538012223,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1538012223","product_id":100013101,"comment_content":"学习语言最重要的是动手实践，稍微修改了一下代码做了一个实验，发现方式2和方式三可以结合使用会比较方便，而且不用导入 os 模块：<br><br>package main                                                            <br>                                                                       <br>import (                                                                <br>    &quot;flag&quot;                                                              <br>    &quot;fmt&quot;                                                               <br>)                                                                       <br>                                                                        <br>var name string                                                         <br>                                                                        <br>func init() {                                                           <br>    flag.CommandLine = flag.NewFlagSet(&quot;question 2-2&quot;, flag.ExitOnError)<br>    flag.StringVar(&amp;name, &quot;name&quot;, &quot;everyone&quot;, &quot;The greeting object.&quot;)   <br>}                                                                       <br>                                                                        <br>func main() {                                                           <br>    flag.Parse()                                                        <br>    fmt.Printf(&quot;Hello, %s!\\n&quot;, name)                                    <br>}                                                                       <br>","like_count":0},{"had_liked":false,"id":25101,"user_name":"营口小书生","can_delete":false,"product_type":"c1","uid":1206939,"ip_address":"","ucode":"F5026076DD2F8A","user_header":"https://static001.geekbang.org/account/avatar/00/12/6a/9b/40004411.jpg","comment_is_top":false,"comment_ctime":1537245871,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1537245871","product_id":100013101,"comment_content":"为什么会有这样的错误啊？<br>cannot use &amp;name (type **string) as type *string in argument to flag.StringVar","like_count":0},{"had_liked":false,"id":23828,"user_name":"jv","can_delete":false,"product_type":"c1","uid":1198704,"ip_address":"","ucode":"2D364FB9F391C1","user_header":"https://static001.geekbang.org/account/avatar/00/12/4a/70/bb56c6cc.jpg","comment_is_top":false,"comment_ctime":1536676439,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1536676439","product_id":100013101,"comment_content":"按照demo2.go写了程序，但输出结果不是文章介绍的，而是一直是 hello，everyone！，是不是我运行的命令有问题？ - name=“Robert”，-和name间有个空格，其他的没有，我试验了很多遍，结果还是不对","like_count":0,"discussions":[{"author":{"id":1442431,"avatar":"https://static001.geekbang.org/account/avatar/00/16/02/7f/ddf56ac5.jpg","nickname":"runzhliu","note":"","ucode":"CD51D9465D7A05","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5067,"discussion_content":"不用空格，试试 go run demo2.go -name=&#34;Robert&#34;","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565921897,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23267,"user_name":"manky","can_delete":false,"product_type":"c1","uid":1226745,"ip_address":"","ucode":"BDDBB16BADB5B5","user_header":"https://static001.geekbang.org/account/avatar/00/12/b7/f9/75bae002.jpg","comment_is_top":false,"comment_ctime":1536243287,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1536243287","product_id":100013101,"comment_content":"新建的文件需要放在GOPATH目录下吗，如果不需要，那什么时候需要新建项目在GOPATH目录下，期待作者的解答。","like_count":0},{"had_liked":false,"id":22385,"user_name":"郁柏","can_delete":false,"product_type":"c1","uid":1198127,"ip_address":"","ucode":"622B54C156B4AF","user_header":"https://static001.geekbang.org/account/avatar/00/12/48/2f/6bfaa288.jpg","comment_is_top":false,"comment_ctime":1535639897,"is_pvip":false,"replies":[{"id":"8106","content":"网上到处都是啊。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1535802230,"ip_address":"","comment_id":22385,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1535639897","product_id":100013101,"comment_content":"能否分享一个vscode +go的搭建和使用教程","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423094,"discussion_content":"网上到处都是啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535802230,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22384,"user_name":"郁柏","can_delete":false,"product_type":"c1","uid":1198127,"ip_address":"","ucode":"622B54C156B4AF","user_header":"https://static001.geekbang.org/account/avatar/00/12/48/2f/6bfaa288.jpg","comment_is_top":false,"comment_ctime":1535639843,"is_pvip":false,"replies":[{"id":"8108","content":"可以手动下载到对应位置。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1535802300,"ip_address":"","comment_id":22384,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1535639843","product_id":100013101,"comment_content":"go get 下载源码包是否需要翻墙。 我下载一个源码包请求超时。 <br>Fetching https:&#47;&#47;golang.org&#47;x&#47;tools&#47;imports?go-get=1<br>https fetch failed: Get https:&#47;&#47;golang.org&#47;x&#47;tools&#47;imports?go-get=1: dial tcp 216.239.37.1:443: i&#47;o timeout<br>package golang.org&#47;x&#47;tools&#47;imports: unrecognized import path &quot;golang.org&#47;x&#47;tools&#47;imports&quot; (https fetch: Get https:&#47;&#47;golang.org&#47;x&#47;tools&#47;imports?go-get=1: dial tcp 216.239.37.1:443: i&#47;o timeout)","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423093,"discussion_content":"可以手动下载到对应位置。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535802300,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":20388,"user_name":"金阳","can_delete":false,"product_type":"c1","uid":1057331,"ip_address":"","ucode":"5DA949C5970F24","user_header":"https://static001.geekbang.org/account/avatar/00/10/22/33/6b9a7719.jpg","comment_is_top":false,"comment_ctime":1534407573,"is_pvip":false,"replies":[{"id":"7165","content":"你需要给出完整代码别人才能帮你，另外报错信息也很重要。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1534467012,"ip_address":"","comment_id":20388,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1534407573","product_id":100013101,"comment_content":"定义了一个name string类型变量，在init函数写<br>name = flag.string(“name”,”jobs”,”des”)<br>为啥报错了？","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422230,"discussion_content":"你需要给出完整代码别人才能帮你，另外报错信息也很重要。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534467012,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19936,"user_name":"AlittleChange","can_delete":false,"product_type":"c1","uid":1098519,"ip_address":"","ucode":"4098171B9EEF18","user_header":"https://static001.geekbang.org/account/avatar/00/10/c3/17/01652c3e.jpg","comment_is_top":false,"comment_ctime":1534170437,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1534170437","product_id":100013101,"comment_content":"大家都已经实践了吗？","like_count":0},{"had_liked":false,"id":19904,"user_name":"Dragoonium","can_delete":false,"product_type":"c1","uid":1110906,"ip_address":"","ucode":"6C68500CD20BB9","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLoNkBtbatvibJhFNOKQCibgkOq19HMQMy4CJUyvJ3nRCibBMG2qT3NKw5sZ1GeeW7ZWVaEw9qvfpYJA/132","comment_is_top":false,"comment_ctime":1534155873,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1534155873","product_id":100013101,"comment_content":"我试着把参数增加到两个，然后试试运行结果<br>func init() {<br>  flag.StringVar(&amp;name, &quot;name1&quot;, &quot;ladies&quot;, &quot;The greeting object 1&quot;)<br>  flag.StringVar(&amp;name, &quot;name2&quot;, &quot;gentlemen&quot;, &quot;The greeting object 2&quot;)<br>}<br><br># go run test.go<br>Hello gentlemen!<br>和想像的一样，name2的默认值覆盖了name1的默认值<br><br># go run test.go -name1=Robert<br>Hello Robert!<br>和想像的略有不同，只指定了name1，没有指定name2，输出了name1的指定值，name2的默认值没有生效<br><br># go run test.go -name2=Jose<br>Hello Jose!<br>没毛病<br><br># go run test.go -name1=Robert -name2=Jose<br>Hello Jose!<br>没毛病<br><br># go run test.go -name2=Jose -name1=Robert<br>Hello Robert!<br>这有点奇怪了，输出的值是以参数的先后顺序为准的，而不是以flag.StringVar函数的顺序为准的","like_count":0},{"had_liked":false,"id":19874,"user_name":"@XP","can_delete":false,"product_type":"c1","uid":1136671,"ip_address":"","ucode":"D8D93A044F989C","user_header":"https://static001.geekbang.org/account/avatar/00/11/58/1f/9dc4d475.jpg","comment_is_top":false,"comment_ctime":1534130747,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1534130747","product_id":100013101,"comment_content":"回答问题<br>1、string bool int这三种基本类型<br>2、使用func Set(myset,value string) error 等定义一个类型，var myflag myset定义变量，flag.Var(&amp;myflag, ‘default value’, ‘doc’)<br>不知道理解的对不对","like_count":0}]}