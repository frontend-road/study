{"id":358483,"title":"06 | 如何抽取出符合真实业务场景的业务模型？","content":"<p>你好，我是高楼。</p><p>我们知道，业务模型一直是性能项目中很重要的环节。在容量场景中，每个业务比例都要符合真实业务场景的比例。如果不符合，那场景的执行结果也就没有意义了。</p><p>但是，我们经常可以看到，很多性能从业人员因为对业务模型的抽取过程不够了解，或者是拿不到具体的数据，导致业务模型和生产业务场景不匹配，进而整个性能项目都变得毫无意义。</p><p>也有大量的项目，并没有拿历史业务数据做统计，直接非常笼统地拍脑袋，给出相应的业务模型，这样显然也是不合理的。可是，这种情况在金融、互联网等行业中十分常见。</p><p>当然，也有人为了让业务模型和真实业务场景尽可能匹配，会直接拿生产环境的请求进行回放。可是，即便我们拿生产环境的请求录制回放了，也不能保证业务模型和未来的业务场景一致，因为未来的业务场景会随着业务推广而变化。</p><p><strong>所以说，我们在做场景时首先要明白，当前的场景是要模拟历史业务场景，还是未来业务场景。</strong></p><p>如果是未来的业务场景，那就要靠业务团队给出评估，而非性能团队。不过，在当前的性能市场中，经常有企业要求性能团队给出业务模型，这显然是不理智的。首先，性能团队的业务背景不如业务团队更熟悉；其次，他们对业务市场的把握也不够专业。</p><p>其实，在真实的工作场景中，业务模型的确认从来都不应该由一个团队来做，而应该由业务团队、架构团队、开发团队、运维团队和性能团队共同确定，并最终由项目的最上层领导确认。</p><!-- [[[read_end]]] --><p>如果一个系统有历史业务数据，那我们获得业务模型就有背景数据了。这时候，性能团队应该从历史业务数据中抽取出各场景的业务模型。如果系统没有历史数据，那就应该像对未来业务模型评估一样，需要各团队协作给出当前的业务模型。</p><p>正是基于我们前面提到的各种问题，经常有性能从业人员问我，我们应该如何从历史业务数据中抽取出业务模型？可能你也有这样的困惑，下面我们就来详细地说一说，同时我会借助实例为你展示一个具体的过程。</p><p>大体上来说，抽取真实业务模型有两个大步骤：</p><ol>\n<li>抽取生产业务日志。这一步可以通过很多种手段来实现。这节课我给你展示两种比较常见的手段。一种是当没有日志统计系统时，使用awk命令来抽取；另一种是使用ELFK来抽取。</li>\n<li>梳理业务逻辑。</li>\n</ol><p>对于第一步而言，我们抽取生产业务日志是为了得到对应的业务比例。下面我们先来看看怎么用命令抽取生产业务日志。</p><h2>使用命令抽取生产业务日志</h2><p>这里我以少量的Nginx日志举例。在Nginx中，日志格式通常如下所示：</p><pre><code>120.220.184.157 - - [26/Oct/2020:14:13:05 +0800] &quot;GET /shopping/static/skin/green/green.css HTTP/1.1&quot; 200 4448 0.004  0.004 &quot;https://www.xxx.cn/shopping/&quot; &quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36&quot; &quot;124.127.161.254&quot;\n120.220.184.203 - - [26/Oct/2020:14:13:05 +0800] &quot;GET /shopping/static/js/manifest.0e5e4fd8f66f2b389f6a.js HTTP/1.1&quot; 200 2019 0.003  0.003 &quot;https://www.xxx.cn/shopping/&quot; &quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36&quot; &quot;124.127.161.254&quot;\n120.220.184.149 - - [26/Oct/2020:14:13:05 +0800] &quot;GET /shopping/static/js/app.cadc2ee9c15a5c1b9eb4.js HTTP/1.1&quot; 200 138296 0.100  0.005 &quot;https://www.xxx.cn/shopping/&quot; &quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36&quot; &quot;124.127.161.254&quot;\n</code></pre><p>以上数据内容及顺序可以在Nginx配置文件中配置。我们的目标是抽取其中某个时间内的每秒的访问量，所以，我们只需要把对应的时间取出来统计一下即可，命令如下：</p><pre><code>cat 20201026141300.nginx.log|awk '{print $4}' |uniq -c\n</code></pre><p>我们得出下面的结果：</p><pre><code>5 [26/Oct/2020:14:13:05\n   3 [26/Oct/2020:14:13:06\n  14 [26/Oct/2020:14:13:07\n   4 [26/Oct/2020:14:13:08\n   1 [26/Oct/2020:14:13:09\n   2 [26/Oct/2020:14:13:10\n   1 [26/Oct/2020:14:13:12\n   2 [26/Oct/2020:14:13:20\n  14 [26/Oct/2020:14:13:23\n   1 [26/Oct/2020:14:13:24\n   2 [26/Oct/2020:14:13:26\n   2 [26/Oct/2020:14:13:29\n   9 [26/Oct/2020:14:13:30\n   9 [26/Oct/2020:14:13:31\n   1 [26/Oct/2020:14:13:32\n  13 [26/Oct/2020:14:13:35\n   2 [26/Oct/2020:14:13:37\n  20 [26/Oct/2020:14:13:38\n   2 [26/Oct/2020:14:13:39\n  33 [26/Oct/2020:14:13:44\n  17 [26/Oct/2020:14:13:46\n   5 [26/Oct/2020:14:13:47\n  23 [26/Oct/2020:14:13:48\n  29 [26/Oct/2020:14:13:49\n   4 [26/Oct/2020:14:13:50\n  29 [26/Oct/2020:14:13:51\n  26 [26/Oct/2020:14:13:52\n  22 [26/Oct/2020:14:13:53\n  57 [26/Oct/2020:14:13:59\n   1 [26/Oct/2020:14:14:02\n</code></pre><p>这样就可以知道哪段时间里的访问量最高了。这里我们其实可以灵活运用，如果你只想取到分钟、某小时、某天都可以做相应的命令调整。例如，我们想取到分钟级，只要加上相应的截取命令就可以了，如下所示：</p><pre><code>cat 20201026141300.nginx.log|awk '{print $4}' |cut -c 2-18|uniq -c\n</code></pre><p>对应的结果如下：</p><pre><code> 352 26/Oct/2020:14:13\n   1 26/Oct/2020:14:14\n</code></pre><p>上述结果的意思是，在我这个日志中有两分钟内的数据，第一分钟中有352个请求，第二分钟中只有一个请求。</p><p>如果你想请求URL来做统计，那么就可以修改命令：</p><pre><code>cat 20201026141300.nginx.log|awk '{print $7}' |cut -c 1-50|uniq -c\n</code></pre><p>结果如下：</p><pre><code>................\n   1 /shopping/checkLogin\n   1 /shopping/home/floor\n   1 /sso/loginOut\n   1 /shopping/home/navigation\n   6 /shopping/home/floor\n   2 /shopping/home/floorGoods\n   1 /shopping/home/sysConfig\n   4 /shopping/home/floorGoods\n   1 /shopping/home/floor\n   1 /sso/loginOut\n................\n</code></pre><p>此时我们取日志中的第七个数据，然后截取统计。这样我们就可以知道，每个时间段内每个请求的数量，也就可以得到相应的业务比例了。</p><p>上面这些命令你只要灵活运用，处理数据量不太大的文件是没什么问题的。</p><h2>使用ELFK抽取生产业务日志</h2><p>如果你想使用ELFK抽取日志，具体可以按如下步骤来做：</p><ol>\n<li>安装ELFK。这里的ELFK是指ElasticSearch/Logstash/FileBeat/Kibana的组合。具体安装方法可以搜索一下，网上的教程多如牛毛。</li>\n<li>配置好ELFK后，在Kibana的Discover界面就能看到收集的信息。注意，一条日志对应的就是一次命中。</li>\n<li>通过选择时间段就可以看到有多少请求在这个时间段内。</li>\n<li>要想得到接口请求的百分比，可以点击“Dashboard”中的“可视化”，创建一个Lens可视化面板，选择相应的URL字段就可以看到各个接口的百分比了。</li>\n</ol><p>总体来说，用ELFK抽取生产日志得到业务模型，可以分为两个阶段。</p><p>第一个阶段是统计大时间段的日志信息，然后逐渐缩小范围，比如说按年、月、天、时、分的顺序。这一步是为了将系统的峰值请求覆盖住。</p><p>第二个阶段是细化所选择的时间段。虽然我们在第一个阶段已经把时间段细化到分了，但由于我们的场景得到的结果是按秒来统计TPS的，所以我们要再细化到生产环境的TPS级别。这样就可以把生产的业务场景和测试中的场景进行对比了。</p><p>下面我通过实例给你详细讲一讲这两个阶段。</p><h3>第一个阶段：统计大时间段的日志。</h3><p>在查看ELFK中的数据时，建议你尽可能选择覆盖全部业务场景的时间段。比如说，我们要选择峰值时间段，一开始要选择时间段的范围设置大一些，这样才不会漏掉数据。然后再通过柱状图的高低做范围缩小。</p><p>通过这样的操作就可以知道生产环境中各业务接口的总体百分比了。</p><p>其实，实时将相应的日志输出到ELFK中，是很多企业对日志处理的常用方法。这样不仅可以实现对日志的灵活查找，也可以实现对日志的长时间存储，并且也可以做更多的后续处理，生成可视化图形之类的。在这里，我们来实际操作一下。</p><p><img src=\"https://static001.geekbang.org/resource/image/a4/c3/a4bd8b3f81d7deaff887236cf3f948c3.png?wh=2826*1552\" alt=\"\"></p><p>如上图所示，我们在Kibana中截取了一段时间的日志，这段日志总共有6,624,578次请求。你可以用Kibana直接生成下面这样的表格视图：</p><p><img src=\"https://static001.geekbang.org/resource/image/71/be/71c53f2d9760fe0e5a0744aec6887cbe.jpg?wh=2000*1277\" alt=\"\"></p><p>这样你就可以知道哪些请求比较靠前。为什么我没有显示总数呢？因为在一段时间之内的每个请求，我们要生成相应的柱状图，如果看到它们的集中时间段是相同的，那就做一个场景即可；如果不同，则要做多个场景。下面我们来搜索一下。</p><ul>\n<li>\n<p><strong>/mall-member/sso/login</strong><br>\n<img src=\"https://static001.geekbang.org/resource/image/81/de/8155c3d6990711af543b669974c9f6de.png?wh=2612*570\" alt=\"\"></p>\n</li>\n<li>\n<p><strong>/mall-portal/home/content</strong></p>\n</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/02/b4/02ffb12068e7ff73e37b94eb78b51eb4.png?wh=2598*586\" alt=\"\"></p><ul>\n<li><strong>/mall-member/member/address/list</strong></li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/c9/13/c91b94aa66c6fae22a6ff485ceb9db13.png?wh=2592*578\" alt=\"\"></p><p>其他接口的图类似，我就不一一列了。</p><p>看图上的数据时间点，在我这个例子中，所有的请求量级的时间点都是相同的，所以我们只需要做一个场景即可全部覆盖。请你务必要注意，在你的实际项目中，并不见得会是这样。<strong>如果出现某个请求的高并发时间点和其他的请求不在同一时间点，就一定要做多个场景来模拟，因为场景中的业务模型会发生变化。</strong></p><p>在我这个示例中，我们把数据量也列在表格中，同时求出比例关系，也就是拿某请求的数量除以总请求数，如下所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/ba/14/ba318242f4bce666b72587b1cae06d14.jpg?wh=2000*1334\" alt=\"\"></p><p>这是在这一个时间段的业务平均比例。</p><p>通过第一阶段，我们已经可以知道哪个时间段的请求高了。但是这个时间段范围是5分钟，这对于任何一个系统来说，都算是比较集中的时间段了。但是我们的动作还没有结束，因为我们不仅要知道哪一段的用户操作比较集中，还要知道的是生产上能达到的TPS有多高。所以还需要细化，只有细化了我们才能知道具体生产的TPS。</p><h3>第二个阶段：细化时间段</h3><p>通过主面图中的Timestamp，可以看到是时间间隔是5分钟，我们选择最高请求的时间段，点进去。</p><p><img src=\"https://static001.geekbang.org/resource/image/d6/ca/d63dae9a487e3bb52a94d169086475ca.png?wh=2184*534\" alt=\"\"></p><p>这样我们就得到时间间隔为5秒的图了：</p><p><img src=\"https://static001.geekbang.org/resource/image/94/dc/94b6539b4be5129504a2ca8cc4fe6fdc.png?wh=2202*542\" alt=\"\"></p><p>然后按命中次数来计算TPS，就可以得到如下结果：</p><p>$生产TPS = 9278 \\div 5 = 1,855.6$</p><p>当然了，你还可以再细化，得到毫秒级的图：</p><p><img src=\"https://static001.geekbang.org/resource/image/19/cf/1994cdcb109f360c6b21780e4f1f4dcf.png?wh=2220*550\" alt=\"\"></p><p>通过这种方式，我们就可以得知一个系统在生产环境中的峰值的TPS有多大。1855.6这个值是我们要定的测试环境中总的TPS。如果达不到这个值，那就要接着优化，或者增加硬件资源。</p><p>通常情况下，得到总TPS之后，我们要根据测试目标，分三种方式处理这个总TPS，而这三种方式都是以<strong>业务目标</strong>为前提的。</p><ol>\n<li><strong>业务无变化，应用版本有小变化</strong>（通常只是小的功能变化或修改Bug）：在这种情况下，我们只要将计算出来的TPS做为性能场景总的TPS指标即可。</li>\n<li><strong>业务无变化，应用版本有大变化</strong>（比如说架构变更）：在这种情况下，我们只要将计算出来的TPS做为性能场景总的TPS指标即可。</li>\n<li><strong>业务有变化，应用版本有大变化</strong>：在这种情况下，我们要根据业务估算的增量来做相应的TPS增量计算。如果根据业务变化趋势预估会增加20%，那你就可以在上面计算的总TPS的基础上，再加上对应的20%即可。</li>\n</ol><h2>梳理业务逻辑</h2><p>在上面的接口得到业务模型之后，我们就可以根据接口的量级梳理业务逻辑，以便更真实地模拟生产业务场景。其实在上面的步骤中，我们已经按顺序做了排列，你可以看一下前面的表格。</p><p>所以在这个示例中，大概有58%的用户会完整地走完流程。为什么是58%呢？因为登录的业务比例是12%，而后面下单比例是7%。所以是：<br>\n$ 7\\%\\div12\\% \\approx 58\\% $</p><h2>整体流程说明</h2><p>最后我们来梳理一下整体的流程：</p><p><img src=\"https://static001.geekbang.org/resource/image/01/61/0140f3ac2e260967e13c95020aafe161.jpg?wh=2000*1438\" alt=\"\"></p><p>请注意，上面的业务场景在实际的项目业务统计过程中可以有多个。这个思路可以解决任何性能场景和生产场景不一致的问题。</p><h2>总结</h2><p>最后，我们再一起回顾下这一讲的重点内容。在业务模型抽取时我们要注意几个关键点：</p><ol>\n<li>抽取时间：抽取时间一定要能覆盖生产系统的峰值时间点；</li>\n<li>抽取范围：抽取的范围要足够大，因为在一些场景中，即便不是峰值，但由于某个业务量较大，也会出现资源消耗大的情况；</li>\n<li>业务比例在场景中的实现：得到业务模型之后，我们在性能场景中一定要配置出对应的业务比例，不能有大的偏差。</li>\n</ol><p>只要做到以上几点，性能场景基本上就不会和真实业务场景有大的差异了。</p><h2>课后作业</h2><p>学完这节课后，请你认真思考两个问题：</p><ol>\n<li>为什么性能场景中要模拟出真实业务比例？</li>\n<li>抽取生产数据并最终得到业务模型的步骤是什么？</li>\n</ol><p>欢迎你在留言区与我交流讨论。当然了，你也可以把这节课分享给你身边的朋友，他们的一些想法或许会让你有更大的收获。我们下节课见！</p><p><strong>关于课程读者群</strong></p><p>点击课程详情页的链接，扫描二维码，就可以加入我们这个课程的读者群哦，希望这里的交流与思维碰撞能帮助你取得更大的进步，期待你的到来～</p>","comments":[{"had_liked":false,"id":287055,"user_name":"Geek_081377","can_delete":false,"product_type":"c1","uid":1712509,"ip_address":"","ucode":"62FC733855B002","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Cyuxk6Ej9B5G9icGd2h9OicjdbuWMsQsB0cOZoRXLN6zX5bfmCXB4yHiaicOcE5OUicGDIaodS9T4Ws6lGBibFWoSlKQ/132","comment_is_top":false,"comment_ctime":1617763035,"is_pvip":false,"replies":[{"id":"104245","content":"仔细想想就明白了。在做脚本时要考虑完整业务流的，而只有一部分走完了，只有把所有线程的58%请求应用到完整业务流才能实现7%的下单覆盖，12%的登录覆盖。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1617779200,"ip_address":"","comment_id":287055,"utype":1}],"discussion_count":5,"race_medal":0,"score":"35977501403","product_id":100074001,"comment_content":"在这个示例中，大概有 58% 的用户会完整地走完流程。为什么是 58% 呢？因为登录的业务比例是 12%，而后面下单比例是 7%。所以是：7%&#47;12%=58%，这个真没搞懂- -","like_count":8,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518176,"discussion_content":"仔细想想就明白了。在做脚本时要考虑完整业务流的，而只有一部分走完了，只有把所有线程的58%请求应用到完整业务流才能实现7%的下单覆盖，12%的登录覆盖。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617779200,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2330999,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/KhQRc8hIxHHyPV3Og2Fc5l8w2y7ibGwGn6odmzl3wTt6fPrNv589uHmia1rgiaZhRiaLVHv9ibhzkxFx1zo42uNIS9A/132","nickname":"道长","note":"","ucode":"15B2E9CEF84634","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365323,"discussion_content":"我的理解是用户从登入到下单完成算一个完整的电商业流程。有12%用户登入了但只有7%完成了下单，所以下单的占登入用户的58%。下单必须登入，不知道我理解对不","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1617770363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2424469,"avatar":"https://static001.geekbang.org/account/avatar/00/24/fe/95/feba9058.jpg","nickname":"Jared","note":"","ucode":"845BC99B3FF257","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530561,"discussion_content":"如果比例是：登录40%、下单40%，或者登录10%、下单10%。那他们相除之后都是1，都是需要全部线程产生的请求么。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637106232,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2424469,"avatar":"https://static001.geekbang.org/account/avatar/00/24/fe/95/feba9058.jpg","nickname":"Jared","note":"","ucode":"845BC99B3FF257","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":415175,"discussion_content":"意思是总请求中，有12%的用户登录请求比例，这12%中的58%用户完成了下单，那实际完成了登录和下单的用户比例在全用户中还是7%的数量，但如果基于已登录用户来说，就是58%完成了全流程。是这么理解吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637021712,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374995,"discussion_content":"对。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621432298,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":288504,"user_name":"米儿","can_delete":false,"product_type":"c1","uid":1315707,"ip_address":"","ucode":"8CEF877924537E","user_header":"https://static001.geekbang.org/account/avatar/00/14/13/7b/f1220e26.jpg","comment_is_top":false,"comment_ctime":1618495130,"is_pvip":false,"replies":[{"id":"104783","content":"可以在取日志时用logstash截取。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1618644449,"ip_address":"","comment_id":288504,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23093331610","product_id":100074001,"comment_content":"ELFK系统里有办法截取url统计不？url里带的有id之类的，希望能把这部分模糊掉来统计汇总","like_count":5,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518645,"discussion_content":"可以在取日志时用logstash截取。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618644449,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":297305,"user_name":"言希","can_delete":false,"product_type":"c1","uid":1785875,"ip_address":"","ucode":"87E80087CFECA8","user_header":"https://static001.geekbang.org/account/avatar/00/1b/40/13/3e77a4a0.jpg","comment_is_top":false,"comment_ctime":1623420791,"is_pvip":false,"replies":[{"id":"107970","content":"那是肯定的。性能的最大价值是为了业务稳定服务的，如果没有用户级的业务覆盖，就成了过场和摆设。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1623469399,"ip_address":"","comment_id":297305,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14508322679","product_id":100074001,"comment_content":"我再最上面看了一些东西不过都是抽取接口级的请求比例，直到看到梳理业务逻辑的讲解，我才放了心；哈哈，可见我们只将请求的数据抽取出来还是不行的，我们还得分析业务场景，只有做完梳理业务逻辑后这个比例才能真的用；","like_count":3,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521791,"discussion_content":"那是肯定的。性能的最大价值是为了业务稳定服务的，如果没有用户级的业务覆盖，就成了过场和摆设。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623469399,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":330480,"user_name":"冒冒","can_delete":false,"product_type":"c1","uid":2666416,"ip_address":"","ucode":"5DB92E076ED511","user_header":"https://static001.geekbang.org/account/avatar/00/28/af/b0/a05c5dda.jpg","comment_is_top":false,"comment_ctime":1641991900,"is_pvip":false,"replies":[{"id":"120618","content":"中间的请求有重复的。 ","user_name":"作者回复","user_name_real":"编辑","uid":"1785562","ctime":1642139217,"ip_address":"","comment_id":330480,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5936959196","product_id":100074001,"comment_content":"所以在这个示例中，大概有 58% 的用户会完整地走完流程。为什么是 58% 呢？因为登录的业务比例是 12%，而后面下单比例是 7%。所以是：7%÷12%≈58%<br><br><br>\t\t\t                             业务一\t    业务二\t    业务三\t    业务四<br>login\t                 786171\t  12%\t   5\t           2\t      5\t<br>home&#47;content\t1582439\t  24%\t   5\t           2\t      5\t       12<br>address&#47;list\t312741\t  5%\t           5\t\t\t<br>addnew\t        785595\t 12%\t   5\t           2\t      5\t<br>cart&#47;list\t        469537\t 7%\t           5\t           2\t\t<br>confirmorder\t466036\t 7%\t           5\t           2\t\t<br>generateorder\t473535\t7%\t           5\t           2\t\t<br>order&#47;list\t        472840\t7%\t           5\t           2\t\t<br>paysuccess\t481271\t7%\t           5\t           2\t\t<br>detail\t        794210\t12%\t           5\t           2\t       5\t<br>\t\t                                       20.8%\t   8.3%\t20.8%\t50.0%<br>老师，请问下为啥不是20.8%+8.3%呢？而是58%呢<br>","like_count":1,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546051,"discussion_content":"中间的请求有重复的。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642139218,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":309926,"user_name":"jy","can_delete":false,"product_type":"c1","uid":1785172,"ip_address":"","ucode":"F4E179C435451B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJ6G2xZvNRmhyXBjmGbI5G8icGCCMPupr6yxZ1IcURwp7GTRHcpWGWpg9A0fLlyicmVdDwzqZqwiaOQ/132","comment_is_top":false,"comment_ctime":1630396846,"is_pvip":false,"replies":[{"id":"112344","content":"这个根据业务来判断，如果你在5秒内还有峰值，那可以直接用更细的粒度，有时可能需要毫秒级的粒度。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1630473173,"ip_address":"","comment_id":309926,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5925364142","product_id":100074001,"comment_content":"============原文引用开始==========<br>这样我们就得到时间间隔为 5 秒的图了：<br><br>然后按命中次数来计算 TPS，就可以得到如下结果：生产TPS=9278÷5=1,855.6<br>生产TPS=9278÷5=1,855.6<br>============原文引用结束==========<br><br>疑问：细化后，统计结果方式是自动5秒，为什么不直接选择秒的统计结果呢？除以5秒平均下来的结果，肯定比选择秒后，看到的最大值要小，这种差距还比较大，接近一倍。我用公司的elk看的","like_count":1,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526066,"discussion_content":"这个根据业务来判断，如果你在5秒内还有峰值，那可以直接用更细的粒度，有时可能需要毫秒级的粒度。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630473173,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":298045,"user_name":"sierlu","can_delete":false,"product_type":"c1","uid":1449460,"ip_address":"","ucode":"3CBAB057E90FDA","user_header":"","comment_is_top":false,"comment_ctime":1623896419,"is_pvip":false,"replies":[{"id":"108184","content":"直接设置就得造关联需要的数据。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1623904962,"ip_address":"","comment_id":298045,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5918863715","product_id":100074001,"comment_content":"实际场景很多都是一次登录多次操作，算出来的不一定是百分之多少的在线用户完成了整个流程，这个相对占比算出来感觉意义不大，有点把脚本搞复杂了，不可以直接按照上面表格的比例直接设计脚本么？","like_count":1,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521998,"discussion_content":"直接设置就得造关联需要的数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623904962,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":292133,"user_name":"Geek_Gabriel","can_delete":false,"product_type":"c1","uid":1785399,"ip_address":"","ucode":"D650708A2881CA","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7ib9sicOBrwtOUZWq4sB1BuXicHavq0PltfZNkktdqcfQmibATk481FT6Gnic2ZNnWV8PVZJQOU7O2cag/132","comment_is_top":false,"comment_ctime":1620699010,"is_pvip":false,"replies":[{"id":"105772","content":"把请求单独列出来。如果有包含关系，就把相应的请求在独立的请求中减掉。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1620710577,"ip_address":"","comment_id":292133,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5915666306","product_id":100074001,"comment_content":"抽取线上的请求比例比较容易，把它们转成场景中可用的线程似乎不是太容易。比如总TPS:35，浏览商品目录页17%，浏览商品详情页32%，查询商品20%，加购物车6% ，查看购物车5%，完成下单3%，登录1%。脚本针对以上都有单独线程组在同一个jmx中，但是加购包含详情页，查看购物车包含以上，下单包含所有。像这样的如何设置各线程组的线程数来达到总TPS是35且符合以上业务比例？","like_count":1,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519696,"discussion_content":"把请求单独列出来。如果有包含关系，就把相应的请求在独立的请求中减掉。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620710577,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":358663,"user_name":"汐度清风","can_delete":false,"product_type":"c1","uid":2033324,"ip_address":"四川","ucode":"CF8BE29576A371","user_header":"https://static001.geekbang.org/account/avatar/00/1f/06/ac/55fba20b.jpg","comment_is_top":false,"comment_ctime":1664524486,"is_pvip":false,"replies":[{"id":"130960","content":"是的。 ","user_name":"作者回复","user_name_real":"编辑","uid":"1785562","ctime":1666189113,"ip_address":"四川","comment_id":358663,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1664524486","product_id":100074001,"comment_content":"引用：如果出现某个请求的高并发时间点和其他的请求不在同一时间点，就一定要做多个场景来模拟，因为场景中的业务模型会发生变化。<br><br>疑问：做多个场景来模拟，意思是，各种模型都要跑一遍，系统容量在不同模型下都要满足吗？","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590964,"discussion_content":"是的。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666189113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"四川"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310801,"user_name":"jy","can_delete":false,"product_type":"c1","uid":1785172,"ip_address":"","ucode":"F4E179C435451B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJ6G2xZvNRmhyXBjmGbI5G8icGCCMPupr6yxZ1IcURwp7GTRHcpWGWpg9A0fLlyicmVdDwzqZqwiaOQ/132","comment_is_top":false,"comment_ctime":1630917658,"is_pvip":false,"replies":[{"id":"112773","content":"1，容量场景中用的脚本就是按这比例设计的，只是没列出来。但跑场景时是用这比例跑的，我是描述了的我记得。<br>2，最后一个业务除以第一个业务，我没明白啥意思。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1631147714,"ip_address":"","comment_id":310801,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1630917658","product_id":100074001,"comment_content":"============评论区引用开始==========<br>高老师，对于梳理业务逻辑这一步从字面看懂了，<br>但是不明白得到的结果 【58%用户走完全流程】这个结论，对于性能业务场景分析有什么用<br>最终定各个接口的TPS也没有用到这个58%<br>作者回复: 用到了呀。在后面的容量场景中用。<br>============评论区引用结束==========<br><br>请教：<br>1、后面容量场景没看到58%的具体应用呢？<br>2、根据《性能场景之业务模型在性能执行场景中的具体实现逻辑》一文的例子，最后一个业务的比例除以第一个业务的比例，算出来的值和实际脚本设置的比例也不一样。","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526360,"discussion_content":"1，容量场景中用的脚本就是按这比例设计的，只是没列出来。但跑场景时是用这比例跑的，我是描述了的我记得。\n2，最后一个业务除以第一个业务，我没明白啥意思。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631147714,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":309798,"user_name":"王晓磊","can_delete":false,"product_type":"c1","uid":1316105,"ip_address":"","ucode":"F1E4B315C717EB","user_header":"https://static001.geekbang.org/account/avatar/00/14/15/09/bc24c82b.jpg","comment_is_top":false,"comment_ctime":1630335708,"is_pvip":false,"replies":[{"id":"112347","content":"TPS肯定是来源于业务的。 ","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1630473515,"ip_address":"","comment_id":309798,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1630335708","product_id":100074001,"comment_content":"业务目标是不是就是说：业务变动很小或者架构改变，总TPS不变；只有业务改变，才对等比例增加总TPS？","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526021,"discussion_content":"TPS肯定是来源于业务的。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630473515,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":308512,"user_name":"jy","can_delete":false,"product_type":"c1","uid":1785172,"ip_address":"","ucode":"F4E179C435451B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJ6G2xZvNRmhyXBjmGbI5G8icGCCMPupr6yxZ1IcURwp7GTRHcpWGWpg9A0fLlyicmVdDwzqZqwiaOQ/132","comment_is_top":false,"comment_ctime":1629672107,"is_pvip":false,"replies":[{"id":"112000","content":"这里我只是举个例子，真实的场景中按应该有的请求访问曲线来做就行了。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1630077012,"ip_address":"","comment_id":308512,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1629672107","product_id":100074001,"comment_content":"============原文引用开始==========<br>我们在 Kibana 中截取了一段时间的日志，这段日志总共有 6,624,578 次请求。你可以用 Kibana 直接生成下面这样的表格视图：<br>============原文引用结束==========<br><br>疑问：性能实战第14中，是获小时的最大业务量，基于这个小时的业务量来算业务比例，而文中，是基于4.5小时（23:30--04:00）的业务量来算的业务比例，二者差异是？如何选定时间范围？<br>谢谢","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525514,"discussion_content":"这里我只是举个例子，真实的场景中按应该有的请求访问曲线来做就行了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630077012,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":305852,"user_name":"byyy","can_delete":false,"product_type":"c1","uid":2684815,"ip_address":"","ucode":"A165C7CDB88419","user_header":"","comment_is_top":false,"comment_ctime":1628209709,"is_pvip":false,"replies":[{"id":"110760","content":"1. 是业务操作级别的。<br>2. 这个也是业务操作级别的。看似是一个接口，其实在后台系统中会生成一连串的请求。<br>3. 用户级别的。 ","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1628322030,"ip_address":"","comment_id":305852,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1628209709","product_id":100074001,"comment_content":"老师，有两个问题，帮忙解答下。<br>1.业务模型中的业务比例。这里的业务是不是指的 业务操作级别T 的比例？（T有请求级别、业务操作级别、用户级别）<br>2.文中表格中12%，24%，5%，12%，7%，7%，7%，7%，7%，12%是请求级别T的比例吗？<br>3.“大概有 58% 的用户会完整地走完流程。”，这句话中58%是指哪个级别T的比例？","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":524532,"discussion_content":"1. 是业务操作级别的。\n2. 这个也是业务操作级别的。看似是一个接口，其实在后台系统中会生成一连串的请求。\n3. 用户级别的。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628322030,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1944626,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/ac/32/8c1799df.jpg","nickname":"小宝","note":"","ucode":"FD504FA4E93CE6","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578046,"discussion_content":"引用：2. 这个也是业务操作级别的。看似是一个接口，其实在后台系统中会生成一连串的请求。\n老师，那还需要对后台系统一串请求中的每一个做基准测试么，这一串请求在日志系统中只看到一个请求，那里可以看每一个后台请求呀。通常后端同志接口文档中每一个接口是业务级别的么还是单接口和单业务接口（后台系统一连串请求）两种","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656487220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":305485,"user_name":"岳","can_delete":false,"product_type":"c1","uid":1203711,"ip_address":"","ucode":"31299ACF082EB6","user_header":"https://static001.geekbang.org/account/avatar/00/12/5d/ff/aafd6835.jpg","comment_is_top":false,"comment_ctime":1627992104,"is_pvip":false,"replies":[{"id":"110538","content":"用比例算和用实际的数据算结果是一样的。因为前面我都用比例来表示了，所以这里也是用比例来算了。<br>这里用比例算还有一个用处就是，在压力场景中，如果压力会比实际统计出来的数据量大的时候，也要保持这个比例。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1628052592,"ip_address":"","comment_id":305485,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1627992104","product_id":100074001,"comment_content":"在这个示例中，大概有 58% 的用户会完整地走完流程。为什么是 58% 呢？因为登录的业务比例是 12%，而后面下单比例是 7%。所以是：7%&#47;12%=58%。<br>   这个算法为什么要用比例算，用实际下单数量&#47;登录数量才更好理解不是吗？<br>  我没太懂业务比例和用户数有啥关系","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":524402,"discussion_content":"用比例算和用实际的数据算结果是一样的。因为前面我都用比例来表示了，所以这里也是用比例来算了。\n这里用比例算还有一个用处就是，在压力场景中，如果压力会比实际统计出来的数据量大的时候，也要保持这个比例。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628052592,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":305483,"user_name":"岳","can_delete":false,"product_type":"c1","uid":1203711,"ip_address":"","ucode":"31299ACF082EB6","user_header":"https://static001.geekbang.org/account/avatar/00/12/5d/ff/aafd6835.jpg","comment_is_top":false,"comment_ctime":1627991983,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627991983","product_id":100074001,"comment_content":"在这个示例中，大概有 58% 的用户会完整地走完流程。为什么是 58% 呢？因为登录的业务比例是 12%，而后面下单比例是 7%。所以是：7%&#47;12%=58%。","like_count":0},{"had_liked":false,"id":301298,"user_name":"byyy","can_delete":false,"product_type":"c1","uid":2684815,"ip_address":"","ucode":"A165C7CDB88419","user_header":"","comment_is_top":false,"comment_ctime":1625624356,"is_pvip":false,"replies":[{"id":"109119","content":"得到业务模型呀。这一篇不就是为了讲这个吗？","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1625647722,"ip_address":"","comment_id":301298,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1625624356","product_id":100074001,"comment_content":"&quot;大体上来说，抽取真实业务模型有两个大步骤：<br>1.抽取生产业务日志。这一步可以通过很多种手段来实现。这节课我给你展示两种比较常见的手段。一种是当没有日志统计系统时，使用 awk 命令来抽取；另一种是使用 ELFK 来抽取。<br>2.梳理业务逻辑。&quot;<br>抽取生产业务日志是为了得到接口请求的比例，用接口请求比例可以进行业务拆解、脚本比例计算。<br>但是梳理业务逻辑在文中讲解的较少，不知道怎么梳理，梳理业务逻辑的目的是什么，从中可以得到些什么内容？","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522961,"discussion_content":"得到业务模型呀。这一篇不就是为了讲这个吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625647722,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":301199,"user_name":"byyy","can_delete":false,"product_type":"c1","uid":2684815,"ip_address":"","ucode":"A165C7CDB88419","user_header":"","comment_is_top":false,"comment_ctime":1625572489,"is_pvip":false,"replies":[{"id":"109121","content":"没看懂你的问题。你可以在微信上问我。 ","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1625649094,"ip_address":"","comment_id":301199,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1625572489","product_id":100074001,"comment_content":"“在上面的接口得到业务模型之后，我们就可以根据接口的量级梳理业务逻辑，以便更真实地模拟生产业务场景。其实在上面的步骤中，我们已经按顺序做了排列，你可以看一下前面的表格。”<br>老师，这句话不太懂。<br>比如生产上统计的4个接口比例是这样的：<br>接口1（登录接口）：4%，<br>接口2（查询接口，调用接口3）：5%，<br>接口3：5%，<br>接口4（退出接口）：3%，<br>那么根据接口比例梳理出来的业务比例是怎样的？","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522927,"discussion_content":"没看懂你的问题。你可以在微信上问我。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625649094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":301187,"user_name":"byyy","can_delete":false,"product_type":"c1","uid":2684815,"ip_address":"","ucode":"A165C7CDB88419","user_header":"","comment_is_top":false,"comment_ctime":1625568027,"is_pvip":false,"replies":[{"id":"109122","content":"从请求中可以看出业务逻辑呀，请求有前后关系呀。<br>如果没有前后关系就简单了。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1625649405,"ip_address":"","comment_id":301187,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1625568027","product_id":100074001,"comment_content":"&quot;此时我们取日志中的第七个数据，然后截取统计。这样我们就可以知道，每个时间段内每个请求的数量，也就可以得到相应的业务比例了。&quot;<br>老师，这句话中有2个关键词，请求、业务。<br>我想问一下怎么可以从请求的比例得出业务比例呢？<br>因为一个业务可以包含多个接口请求，并且不同的业务包含的接口数量也有差异。","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522923,"discussion_content":"从请求中可以看出业务逻辑呀，请求有前后关系呀。\n如果没有前后关系就简单了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625649405,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":301181,"user_name":"byyy","can_delete":false,"product_type":"c1","uid":2684815,"ip_address":"","ucode":"A165C7CDB88419","user_header":"","comment_is_top":false,"comment_ctime":1625566644,"is_pvip":false,"replies":[{"id":"109123","content":"你把我绕乱了。微信上讨论吧。 ","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1625649605,"ip_address":"","comment_id":301181,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1625566644","product_id":100074001,"comment_content":"老师，你在给Geek_Gabriel回复时说：<br>&quot;作者回复: 把请求单独列出来。如果有包含关系，就把相应的请求在独立的请求中减掉。&quot;<br>问题1：<br>这句话中的&quot;减掉&quot;是不是指的以下2点？<br>1在业务拆分中去掉被包含的请求<br>2将拆分的业务按照脚本比例设计到jmeter场景时，取样器中也不体现被包含的请求<br>问题2：<br>线上统计的接口比例如下:<br>接口1（2%）<br>接口2（5%）<br>接口3（5%）<br>接口4（12）<br>共有3个业务，其中接口1对应的是登录业务，接口2(这个接口还会调用接口3)是查询业务，接口4是退出业务。<br><br>那么在业务拆分时是不是就是去掉接口3，在以下三个接口基础上进行业务拆分呢？<br>接口1（2%）--登录业务<br>接口2（5%）--查询业务<br>接口4（12）--退出业务","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522922,"discussion_content":"你把我绕乱了。微信上讨论吧。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625649605,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":291938,"user_name":"Daisy","can_delete":false,"product_type":"c1","uid":2597248,"ip_address":"","ucode":"D2A3270B58FE59","user_header":"https://static001.geekbang.org/account/avatar/00/27/a1/80/9801443f.jpg","comment_is_top":false,"comment_ctime":1620616137,"is_pvip":false,"replies":[{"id":"105722","content":"如果考虑的是模拟真实的线上环境，不需要关掉。 ","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1620651850,"ip_address":"","comment_id":291938,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1620616137","product_id":100074001,"comment_content":"高老师好，请问<br>首次请求接口后，在服务器端可能会产生缓存，那么做压力测试时，服务器端的缓存功能需要关掉吗","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519611,"discussion_content":"如果考虑的是模拟真实的线上环境，不需要关掉。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620651850,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":291013,"user_name":"Walker","can_delete":false,"product_type":"c1","uid":1712487,"ip_address":"","ucode":"721A45571AC658","user_header":"https://static001.geekbang.org/account/avatar/00/1a/21/67/8bf2d183.jpg","comment_is_top":false,"comment_ctime":1619940933,"is_pvip":false,"replies":[{"id":"105646","content":"对的哇。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1620452529,"ip_address":"","comment_id":291013,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1619940933","product_id":100074001,"comment_content":"高老师，细化时间段里算出的生产TPS是整个系统总的TPS还是单接口的TPS，如果是单接口是不是每个接口都同样的方式计算一遍？","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519341,"discussion_content":"对的哇。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620452529,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":289050,"user_name":"zwm","can_delete":false,"product_type":"c1","uid":1787187,"ip_address":"","ucode":"BDF98B3A1CD406","user_header":"https://static001.geekbang.org/account/avatar/00/1b/45/33/cdea4bca.jpg","comment_is_top":false,"comment_ctime":1618833605,"is_pvip":false,"replies":[{"id":"104906","content":"用到了呀。在后面的容量场景中用。","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1618888436,"ip_address":"","comment_id":289050,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1618833605","product_id":100074001,"comment_content":"高老师，对于梳理业务逻辑这一步从字面看懂了，<br>但是不明白得到的结果  【58%用户走完全流程】这个结论，对于性能业务场景分析有什么用<br>最终定各个接口的TPS也没有用到这个58%","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518804,"discussion_content":"用到了呀。在后面的容量场景中用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618888436,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287172,"user_name":"天狼","can_delete":false,"product_type":"c1","uid":1421216,"ip_address":"","ucode":"40C47F0480DB87","user_header":"https://static001.geekbang.org/account/avatar/00/15/af/a0/617e4144.jpg","comment_is_top":false,"comment_ctime":1617802778,"is_pvip":false,"replies":[{"id":"104272","content":"听起来有点绕。哈哈","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1617838022,"ip_address":"","comment_id":287172,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1617802778","product_id":100074001,"comment_content":"如果性能场景中没有模拟出真实的场景，就有可能性能测试中的场景在真实中没出现，而真实中的场景没有测到，导致线上环境出现性能瓶颈","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518215,"discussion_content":"听起来有点绕。哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617838022,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287139,"user_name":"WBF","can_delete":false,"product_type":"c1","uid":2544862,"ip_address":"","ucode":"0CD5C02019A7B3","user_header":"https://static001.geekbang.org/account/avatar/00/26/d4/de/f129dfee.jpg","comment_is_top":false,"comment_ctime":1617791412,"is_pvip":false,"replies":[{"id":"104262","content":"哪里有评论这个业务？","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1617804086,"ip_address":"","comment_id":287139,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1617791412","product_id":100074001,"comment_content":"登录12%，评论24%，那么评论的业务比是200%吗","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518204,"discussion_content":"哪里有评论这个业务？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617804086,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2544862,"avatar":"https://static001.geekbang.org/account/avatar/00/26/d4/de/f129dfee.jpg","nickname":"WBF","note":"","ucode":"0CD5C02019A7B3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365848,"discussion_content":"不好意思，看错了，是content","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617890932,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":286658,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1617459288,"is_pvip":true,"replies":[{"id":"104130","content":"Excaly.","user_name":"作者回复","user_name_real":"高楼(Zee)","uid":"1785562","ctime":1617541697,"ip_address":"","comment_id":286658,"utype":1}],"discussion_count":2,"race_medal":1,"score":"1617459288","product_id":100074001,"comment_content":"做性能的目的就是要解决生产环境真实业务可能遇到的问题","like_count":0,"discussions":[{"author":{"id":1785562,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/da/e686a72b.jpg","nickname":"高楼(Zee)","note":"","ucode":"149202404A5ABC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518055,"discussion_content":"Excaly.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617541697,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2542428,"avatar":"https://static001.geekbang.org/account/avatar/00/26/cb/5c/e59cbf19.jpg","nickname":"阿树","note":"","ucode":"D8C150E6017B8F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":368792,"discussion_content":"exactly?","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1618833647,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}