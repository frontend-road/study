{"id":174252,"title":"答疑丨Java Web程序的运行时环境到底是怎样的？","content":"<p>今天是第一模块的最后一讲。在这一讲中，我们主要讲了软件的基础原理，今天，我将会针对这一模块中大家提出的普遍问题进行总结和答疑，让我们整理一下，再接着学习下一个模块的内容。</p><h2>问题一</h2><blockquote>\n<p><span class=\"orange\">@小美</span><br>\n既然一个JVM是一个进程，JVM上跑Tomcat，Tomcat上可以部署多个应用。这样的话，每个跑在Tomcat上的应用是一个线程吗？该怎么理解“如果一个应用crash了，其他应用也会crash”？</p>\n</blockquote><p>理解程序运行时的执行环境，直观感受程序是如何运行的，对我们开发和维护软件很有意义。我们以小美同学提的这个场景为例，看下Java Web程序的运行时环境是什么样的，来重新梳理下进程、线程、应用、Web容器、Java虚拟机和操作系统之间的关系。</p><p>我们用Java开发Web应用，开发完成，编译打包以后得到的是一个war包，这个war包放入Tomcat的应用程序路径下，启动Tomcat就可以通过HTTP请求访问这个Web应用了。</p><p>在这个场景下，进程是哪个？线程有哪些？Web程序的war包是如何启动的？HTTP请求如何被处理？Tomcat在这里扮演的是什么角色？JVM又扮演什么角色？</p><p>首先，我们是通过执行Tomcat的Shell脚本启动Tomcat的，而在Shell脚本里，其实启动的是Java虚拟机，大概是这样一个Shell命令：</p><!-- [[[read_end]]] --><pre><code>java org.apache.catalina.startup.Bootstrap &quot;$@&quot; start \n</code></pre><p>所以我们在Linux操作系统执行Tomcat的Shell启动脚本，Tomcat启动以后，其实在操作系统里看到的是一个<strong>JVM虚拟机进程</strong>。这个虚拟机进程启动以后，加载class进来执行，首先加载的就这个<code>org.apache.catalina.startup.Bootstrap</code>类，这个类里面有一个<code>main()</code>函数，是整个Tomcat的入口函数，JVM虚拟机会启动一个<strong>主线程</strong>从这个入口函数开始执行。</p><p>主线程从Bootstrap的main()函数开始执行，初始化Tomcat的运行环境，这时候就需要<strong>创建一些线程</strong>，比如负责监听80端口的线程，处理客户端连接请求的线程，以及执行用户请求的线程。创建这些线程的代码是Tomcat代码的一部分。</p><p>初始化运行环境之后，Tomcat就会扫描Web程序路径，扫描到开发的war包后，再加载war包里的类到JVM。因为Web应用是被Tomcat加载运行的，所以我们也称<strong>Tomcat为Web容器</strong>。</p><p>如果有外部请求发送到Tomcat，也就是外部程序通过80端口和Tomcat进行HTTP通信的时候，Tomcat会根据war包中的web.xml配置，决定这个请求URL应该由哪个Servlet处理，然后Tomcat就会<strong>分配一个线程去处理这个请求</strong>，实际上，就是<strong>这个线程执行相应的Servlet代码</strong>。</p><p>我们回到小美同学的问题，Tomcat启动的时候，启动的是JVM进程，这个进程首先是执行JVM的代码，而JVM会加载Tomcat的class执行，并分配一个主线程，这个主线程会从main函数开始执行。在主线程执行过程中，Tomcat的代码还会启动其他一些线程，包括处理HTTP请求的线程。</p><p>而我们开发的应用是一些class，被Tomcat加载到这个JVM里执行，所以，即使这里有多个应用被加载，也只是加载了一些class，我们的应用被加载进来以后，并没有增加JVM进程中的线程数，也就是web应用本身和线程是没有关系的。</p><p>而Tomcat会根据HTTP请求URL执行应用中的代码，这个时候，可以理解成每个请求分配一个线程，每个线程执行的都是我们开发的Web代码。如果Web代码中包含了创建新线程的代码，Tomcat的线程在执行代码时，就会<strong>创建出新的线程</strong>，这些线程也会被操作系统调度执行。</p><p>如果Tomcat的线程在执行代码时，代码抛出未处理的异常，那么当前线程就会结束执行，这时控制台看到的异常信息，其实就是线程堆栈信息，线程会把异常信息以及当前堆栈的方法都打印出来。事实上，这个异常最后还是会被Tomcat捕获，然后Tomcat会给客户端返回一个500错误。单个线程的异常不影响其他线程执行，也就是不影响其他请求的处理。</p><p>但是如果线程在执行代码的时候，抛出的是JVM错误，比如<code>OutOfMemoryError</code>，这个时候看起来是应用crash，事实上是整个进程都无法继续执行了，也就是进程crash了，进程内所有应用都不会被继续执行了。</p><p>从JVM的角度看，Tomcat和我们的Web应用是一样的，都是一些Java代码，但是Tomcat却可以加载执行Web代码，而我们的代码又不依赖Tomcat，这也是一个很有意思的话题。Tomcat是如何设计的，我将会在下个模块讲述。</p><h2>问题二</h2><blockquote>\n<p>@黄海峰<br>\n有点难以想象，“Hash表的时间复杂度为什么是O(1)”这个问题居然有阿里大厂的面试官觉得难。</p>\n</blockquote><p>这不是一个疑问，但其实是一个有意思的话题，我们花一点时间讨论下，也许会对你的职业规划有所启发。</p><p>文中这个故事大概发生在2009年，整整十年前，那个时候互联网还不像今天这样炙手可热，提供的薪水也不像今天这样有竞争力，也没有BAT这样的专有名词指代所谓的互联网巨头。那个时候，计算机专业优秀的毕业生向往的是微软、Oracle、IBM这样的外资IT巨头，退而求其次，国内好的IT公司是联想、用友这些企业。</p><p>事实上，那个时候在技术研发能力上，互联网公司的技术能力也是落后传统企业的，阿里巴巴最核心的数据存储依赖的是IBM、Oracle、EMC的解决方案，即所谓的IOE。</p><p>所以在十年前的人才市场上，国内互联网公司的形象一般是：技术落后、薪水一般、加班严重、没有名气。可以说在人才市场的竞争中，相比国内外的IT巨头是落于下风的。</p><p>我个人感觉，互联网公司的崛起大概是在七八年前，移动互联网开始出现，互联网的渗透率得到加速，BAT逐渐开始成为家喻户晓的名字，名气大涨。其次，经过前面时间的积累，互联网企业主导的各种分布式技术、大数据技术、移动互联网技术、云计算技术的风头超过传统IT巨头，阿里巴巴开始去IOE，打造自己的云计算平台，成为先进技术的代表者；最主要的还是互联网企业盈利能力大幅增加，能够提供市场上更有竞争力的薪水和股票。</p><p>于是互联网企业在人才市场上开始变得灼手可热，BAT这些企业开始被人称为“大厂”。我们今天感觉这些互联网巨头高高在上，人们纷纷向往。事实上，这个现象出现的时间非常短。今天这些企业有足够的名气和资源将自己营造得高高在上，可以在众多优秀的候选人中间挑来选去，仅仅在十年前，还不是这样的。</p><p>但是事情真正的吊诡之处还不在这里，当今这些互联网大厂的核心技术和业务模式在十几年前就已经奠定了，经过几年的摸索，大概在七八年前开始稳定成熟。也就是说，互联网企业的技术实力和商业能力是在这些企业还默默无闻的时候就发展起来的，而在这些企业成为明星之后，并没有什么突破性的进展。想想这些所谓的互联网大厂，最近几年，并没有什么值得称道的商业模式创新和技术创新。</p><p>也就是说，十多年前，可能是一些并不优秀的技术人员加入一个并不出名的公司，然后这些人开创出了一个杰出的事业。用马云的话说，就是“二流的人做一流的事”。然后公司开始挑选一流的人，但结果似乎只是在维持这个事业，并没有开创出更加杰出的事业。今天的BAT似乎成为当年的IBM，历史好像进入了某种循环。</p><p>如果这就是事情的真相，我想你或许可以从其中得到某些启发，重新考虑下未来的职业规划。也许你会发现，你可能不需要追逐当前所谓的热门技术，而应该好好想想需要为自己的未来准备些什么。</p><p>最后，在第一模块中，我在每一篇文章的下面都留了几道思考题，各位同学在评论区都有很好的答案。但只有<a href=\"https://time.geekbang.org/column/article/169533\">第五篇文章</a>，我似乎没有看到比较准确的答案，我在这里回答一下。</p><p>RAID5中，校验位之所以螺旋式地落在所有硬盘上，主要原因是因为如果将校验位记录在同一块硬盘上，那么对于其他多块数据盘，任何一块硬盘修改数据，都需要修改这个校验盘上的校验数据，也就是说，对于有8块硬盘的RAID5阵列，校验盘的数据写入压力是其他数据盘的7倍。而硬盘的频繁写入会导致硬盘寿命缩短，校验盘会频繁损坏，存储的整体可用性和维护性都会变差。</p><p>所以，作为软件架构师，当你在进行软件设计的时候，你不光需要考虑软件本身，你还需要了解软件的各种约束，硬盘的特性约束是一种，当然还有其他一些约束，我会在专栏的后面模块中继续讲解如何在各种约束下，设计出符合期望的软件系统。</p>","neighbors":{"left":{"article_title":"07丨编程语言原理：面向对象编程是编程的终极形态吗？","id":172492},"right":{"article_title":"08丨软件设计的方法论：软件为什么要建模？","id":174955}},"comments":[{"had_liked":false,"id":158783,"user_name":"Citizen Z","can_delete":false,"product_type":"c1","uid":1125104,"ip_address":"","ucode":"9CA547640A8629","user_header":"https://static001.geekbang.org/account/avatar/00/11/2a/f0/41590e10.jpg","comment_is_top":false,"comment_ctime":1575450511,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"431072180111","product_id":100040201,"comment_content":"成就一个人的，是事业所带来的社会效益。<br>衡量一个人成就的是他所带来贡献，而非多么华丽惊艳的技术实现。<br>能力是实现成就的条件，不是终极目标。<br>技术只是重要工具，应该精进，不必狂热。<br><br>做技术的其实挺容易迷失在无尽地追逐技术牛逼的道路上，诚然能带来快乐，却很容易造成思维封闭。想在事业上更上一层楼，要把眼光放在更大的局面上，小到帮助同事朋友，大到给公司战略提供建议、给开源社区贡献力量，虽然各方面能力暂时不一定能匹配得上，但是大的目标能让人豁然开朗，提高学习动力和做事动机。<br><br>个人经验，程序员应该敢于务虚、吹理论、玩圈子。不该将自己约束到一个码农的标签里，追求字面意义上的“talke cheap show code”，更不该用“我学技术就是为了挣钱”这种消极思想来对待职业发展，应该回归到“一个会计算机技术的职场人”的角色中。<br>归根结底，职业发展目标应该建立在事业的成功和价值的创造上，如此，能力、影响力、金钱会很自然地在过程中积累。<br><br>价值第一，效率第二，名利第三，目标向善，正向循环。","like_count":101,"discussions":[{"author":{"id":1135528,"avatar":"https://static001.geekbang.org/account/avatar/00/11/53/a8/abc96f70.jpg","nickname":"return","note":"","ucode":"42B8A3380DF04B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382731,"discussion_content":"大佬牛逼，\n不过 郭东白老师说过， 首先技术要做好，这样才能获得更好的机会","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1625708220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1518310,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2a/e6/c788257f.jpg","nickname":"geek_arong2048","note":"","ucode":"AB575BE100E4A9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383190,"discussion_content":"回归到“一个会计算机技术的职场人”的角色。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625976147,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160020,"user_name":"考休","can_delete":false,"product_type":"c1","uid":1053955,"ip_address":"","ucode":"968DFC00D6D0CF","user_header":"https://static001.geekbang.org/account/avatar/00/10/15/03/c0fe1dbf.jpg","comment_is_top":false,"comment_ctime":1575858317,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"121834942605","product_id":100040201,"comment_content":"程序员很容易有一种错觉，觉得这个世界是由技术推动的，其实不是，这个世界一直以来都是由资本推动的，技术只是资本的一种体现而已，工作中目的不应该是实现技术的最高难度，而应该是业务的最大价值呈现","like_count":29,"discussions":[{"author":{"id":1142025,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6d/09/ffeabc27.jpg","nickname":"任鑫","note":"","ucode":"9803EB15B634C3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378463,"discussion_content":"这个问题没有完美答案","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1623235872,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2063114,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/7b/0a/b65e1fae.jpg","nickname":"不要挑战自己的智商","note":"","ucode":"4910FF07C35DC5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413838,"discussion_content":"马哲给了完美答案","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636576943,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":189770,"user_name":"技术是伙伴","can_delete":false,"product_type":"c1","uid":1641193,"ip_address":"","ucode":"3B38709BC88C8C","user_header":"https://static001.geekbang.org/account/avatar/00/19/0a/e9/6fad9109.jpg","comment_is_top":false,"comment_ctime":1584547547,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27354351323","product_id":100040201,"comment_content":"最主要的是要去做一流的事，解决现实中大多人的痛点或问题","like_count":7},{"had_liked":false,"id":158638,"user_name":"Geek_2b3614","can_delete":false,"product_type":"c1","uid":1525522,"ip_address":"","ucode":"6208AB2C5FD4C0","user_header":"https://static001.geekbang.org/account/avatar/00/17/47/12/2c47bf36.jpg","comment_is_top":false,"comment_ctime":1575425687,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23050262167","product_id":100040201,"comment_content":"真是有感而发呀。","like_count":5},{"had_liked":false,"id":162282,"user_name":"未知","can_delete":false,"product_type":"c1","uid":1312918,"ip_address":"","ucode":"DB389CEBEEE9E1","user_header":"https://static001.geekbang.org/account/avatar/00/14/08/96/231fdd9e.jpg","comment_is_top":false,"comment_ctime":1576491458,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18756360642","product_id":100040201,"comment_content":"“BAT 似乎成为当年的 IBM，历史好像进入了某种循环”<br>老师说的这句话感触很深。平时看公司比较核心的业务系统或者基础系统代码（新做的除外），代码一般都是很久以前的。这种现象应该都比较普遍，程序嘛，只要能满足目前的量并且没BUG，大家都没改重构的动力。但是如果从公司业务上来说，这种现象就比较危险：业务可以关系公司生死。大家都说乔布斯厉害，为什么厉害。感觉就是破、立。乔布斯二次回归时候，苹果已经从初创时候的高点落下来了，还差点卖身了。电脑不好卖加上金融危机，怎么办呢？但是他搞出了iPod。革了CD机的命，有搞出了Imac、iPhone。并且每个产品都标新立异。现在我们看，一个做电脑的公司做音乐播放器、做手机似乎正常。但是我们看看联想做手机、格力做手机、华为做手机。这些在发展初期都很困难，而且有的死了有的成功了。所以大公司转型或者插足新行业（那怕是同行业另一个领域），都比较谨慎，成不成完全未知，就像阿里云的初期一样。<br>一个产品能够做好，做大，流芳百世实属不易<br>","like_count":5},{"had_liked":false,"id":161645,"user_name":"李子木","can_delete":false,"product_type":"c1","uid":1244702,"ip_address":"","ucode":"2255568DC32066","user_header":"https://static001.geekbang.org/account/avatar/00/12/fe/1e/378ed6bf.jpg","comment_is_top":false,"comment_ctime":1576284315,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18756153499","product_id":100040201,"comment_content":"老师讲的真的很好，从第一节一直看下来我觉得对我这种想在IT领域深入学习的初学者解答了很多疑问，期待后面的更新！","like_count":5},{"had_liked":false,"id":254070,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1603035125,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"5898002421","product_id":100040201,"comment_content":"我觉的关于 Java Web 程序运行时环境的讲解是非常精彩的，可能是我读书少，之前一直没有搞明白。这部分内容相对偏底层，平时写代码的时候不一定用得上，但是了解之后，还是会有茅塞顿开的感觉。<br><br>至于互联网大厂的技术栈，最近在看淘宝技术发展之类的文章，也感觉有点奇怪，BAT 大厂的架构大多在几年前就已经发展成熟；然后近些年虽然人工智能、大数据、区块链之类的技术热点不断涌现，但是似乎也没有什么特别颠覆性的发展。<br><br>互联网大厂最终会像传统 IT 企业那样凋零么？<br><br>老师提出应该好好想想未来，我真的想不出来。只是感觉，如果可能的话，教育、医疗等垂直领域应该还有机会，面向企业的软件服务或者是互联网化似乎也有很多事情可做。编程从本质上来说，其实是帮助人们提高效率。","like_count":2},{"had_liked":false,"id":320934,"user_name":"不要挑战自己的智商","can_delete":false,"product_type":"c1","uid":2063114,"ip_address":"","ucode":"4910FF07C35DC5","user_header":"https://static001.geekbang.org/account/avatar/00/1f/7b/0a/b65e1fae.jpg","comment_is_top":false,"comment_ctime":1636574148,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1636574148","product_id":100040201,"comment_content":"选择比努力重要","like_count":1},{"had_liked":false,"id":197827,"user_name":"FreezeSoul","can_delete":false,"product_type":"c1","uid":1015930,"ip_address":"","ucode":"0B67142C4EA3D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/80/7a/02fdf1a2.jpg","comment_is_top":false,"comment_ctime":1585399965,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585399965","product_id":100040201,"comment_content":"我们通过技术的手段为自己也为世界做出一点点贡献","like_count":0},{"had_liked":false,"id":177499,"user_name":"黄荣星","can_delete":false,"product_type":"c1","uid":1031783,"ip_address":"","ucode":"64AF145EEC0B12","user_header":"https://static001.geekbang.org/account/avatar/00/0f/be/67/8922c991.jpg","comment_is_top":false,"comment_ctime":1581405605,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1581405605","product_id":100040201,"comment_content":"智慧老师。按照文章说每一个请求Tomcat都会起一个新线程负责处理，那么如果该请求逻辑代码自行新建线程，是不是就是再创建一个线程了？是不是被一个请求都会新建一个新线程，那么代码里面就不需要自行新建一个新的线程？","like_count":0,"discussions":[{"author":{"id":1024164,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a0/a4/b060c723.jpg","nickname":"阿斯蒂芬","note":"","ucode":"61D5E3BDA4EBC5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":215640,"discussion_content":"在默认的情况下，tomcat会为每一个请求「分配」一个线程去处理，这个线程是独立的，但并不一定是新建的，一般来讲为了提高效率，会使用「线程池」来管理线程的建立、分配、释放。\ntomcat默认有内置的线程池，而且也提供了配置项允许用户定制不同参数的线程池。具体可以参考官方文档关于 Executor 节点的说明：https://tomcat.apache.org/tomcat-9.0-doc/config/executor.html\n关于您提起的代码里是否需要自行新建一个线程，我认为得分析自己的业务需求，假设业务代码是一个非常耗时的后台作业：比如统计一份报表数据存入数据库，那就很适合在业务中自行构建线程，以便让tomcat的请求处理线程及时结束返回。否则如果大量占用tomcat线程，也会造成后续请求因为tomcat无可用线程而阻塞。\n总而言之，线程的创建并不是无代价的，线程本身是可贵的资源，需要谨慎使用。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1585365161,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1031783,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/be/67/8922c991.jpg","nickname":"黄荣星","note":"","ucode":"64AF145EEC0B12","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":188033,"discussion_content":"老师能抽空回答一下吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582789106,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":174903,"user_name":"不记年","can_delete":false,"product_type":"c1","uid":1045945,"ip_address":"","ucode":"287E40C68356DC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f5/b9/888fe350.jpg","comment_is_top":false,"comment_ctime":1580453750,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580453750","product_id":100040201,"comment_content":"第五篇的答案原来是负载均衡啊","like_count":0},{"had_liked":false,"id":162676,"user_name":"灰灰","can_delete":false,"product_type":"c1","uid":1122397,"ip_address":"","ucode":"907A2FD339E158","user_header":"https://static001.geekbang.org/account/avatar/00/11/20/5d/69170b96.jpg","comment_is_top":false,"comment_ctime":1576576656,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576576656","product_id":100040201,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":162519,"user_name":"孙志强","can_delete":false,"product_type":"c1","uid":1325997,"ip_address":"","ucode":"9C070F1E4EC6FF","user_header":"https://static001.geekbang.org/account/avatar/00/14/3b/ad/31193b83.jpg","comment_is_top":false,"comment_ctime":1576548232,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1576548232","product_id":100040201,"comment_content":"单线程OOM,会触发一次Full GC,如果能够回收掉，应该不会导致整个JVM 挂掉，使用的收集器是G1","like_count":0},{"had_liked":false,"id":159057,"user_name":"Paul Shan","can_delete":false,"product_type":"c1","uid":1593140,"ip_address":"","ucode":"32D99989028284","user_header":"","comment_is_top":false,"comment_ctime":1575528491,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575528491","product_id":100040201,"comment_content":"tomcat进程的职责是监听80端口，分派线程处理请求，war包定义如何处理请求。<br><br>RAID5  假设有8块盘，校验那一部分写入是正常信息写入的7倍,所以要把校验信息分散到8块盘中，以使得每块盘寿命大致相等。每块盘有1&#47;8的存储信息是其他7块盘（每块非校验信息是7&#47;8）的校验，具体是把数据分块，每块盘轮流作为校验盘。","like_count":0},{"had_liked":false,"id":158955,"user_name":"奔奔奔跑","can_delete":false,"product_type":"c1","uid":1210265,"ip_address":"","ucode":"F86EC205DCAACE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Gswh7ibY4tubXhp0BXOmV2pXZ3XsXic1d942ZMAEgWrRSF99bDskOTsG1g172ibORXxSCWTn9HWUX5vSSUVWU5I4A/132","comment_is_top":false,"comment_ctime":1575506631,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575506631","product_id":100040201,"comment_content":"哈哈，频繁写入的这个没考虑到，不过老师答疑hash表的问题我还是很有反思的，但是现在大部分公司要求高并发，用过这个redis，用过那个kafka，rocketmq，用过这个Api网关，用过那个etcd，为啥都这样呢","like_count":0},{"had_liked":false,"id":158882,"user_name":"俊伟","can_delete":false,"product_type":"c1","uid":1111175,"ip_address":"","ucode":"7905B4F25637F4","user_header":"https://static001.geekbang.org/account/avatar/00/10/f4/87/644c0c5d.jpg","comment_is_top":false,"comment_ctime":1575469564,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1575469564","product_id":100040201,"comment_content":"目前技术给我的感觉是，很多都是在基于http协议上面进行开发。最近一直在想还有那些领域可以使用编程提高生产力。","like_count":1},{"had_liked":false,"id":158859,"user_name":"Demter","can_delete":false,"product_type":"c1","uid":1158439,"ip_address":"","ucode":"BE3B6F726916CE","user_header":"https://static001.geekbang.org/account/avatar/00/11/ad/27/5556ae50.jpg","comment_is_top":false,"comment_ctime":1575465831,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575465831","product_id":100040201,"comment_content":"希望多出点专栏","like_count":0}]}