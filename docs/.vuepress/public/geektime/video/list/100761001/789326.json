{"id":789326,"title":"33｜泛型工具实践（一）：推断-下篇","content":"","comments":[{"had_liked":false,"id":396578,"user_name":"fatme","can_delete":false,"product_type":"c3","uid":1034451,"ip_address":"广东","ucode":"75A805D2BB2AD1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c8/d3/3020ae46.jpg","comment_is_top":false,"comment_ctime":1735009797,"is_pvip":false,"replies":[{"id":143970,"content":"这里的U的确是裸类型参数。\n\n任何情况下，“infer X”推断出的参数都是裸类型的。注意，1、就目前来说，有两种使用infer的场合；2、infer X得到的变量X只能用在extends的true分支；3、X在后续使用时是用作裸类型参数的，但它自身的推断过程需要处理（以本例中来说，infer U的推断是在extends左侧中使用[T, ...]来确保U是联合；而在U extends infer t时，它被用作裸类型来实现分布式以得到每一个分量t）。\n\n因为TS手册里面没有讲这种情况，所以课程中就在这里补充了。\n\n对于IsUnion_1来说，它的奇怪之处在于它必须再多推断出一个U2来。相较于IsUnion_4来说，它们二者完全相同，只是IsUnion_4中没有U2这参数。而且事实上U2在IsUnion_1中也是未用的。所以这里应该是一种BUG，但原因未明。","user_name":"作者回复","user_name_real":"编辑","uid":1521669,"ctime":1735185513,"ip_address":"江苏","comment_id":396578,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100761001,"comment_content":"老师，IsUnion_1 里面 U extends infer t 发生了分布式条件类型判断，是因为 U 是裸类型参数吗？这里的原理没搞明白。","like_count":0,"discussions":[{"author":{"id":1521669,"avatar":"https://static001.geekbang.org/account/avatar/00/17/38/05/7beecd5d.jpg","nickname":"Aiming","note":"","ucode":"66292B32F9960A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":655542,"discussion_content":"这里的U的确是裸类型参数。\n\n任何情况下，“infer X”推断出的参数都是裸类型的。注意，1、就目前来说，有两种使用infer的场合；2、infer X得到的变量X只能用在extends的true分支；3、X在后续使用时是用作裸类型参数的，但它自身的推断过程需要处理（以本例中来说，infer U的推断是在extends左侧中使用[T, ...]来确保U是联合；而在U extends infer t时，它被用作裸类型来实现分布式以得到每一个分量t）。\n\n因为TS手册里面没有讲这种情况，所以课程中就在这里补充了。\n\n对于IsUnion_1来说，它的奇怪之处在于它必须再多推断出一个U2来。相较于IsUnion_4来说，它们二者完全相同，只是IsUnion_4中没有U2这参数。而且事实上U2在IsUnion_1中也是未用的。所以这里应该是一种BUG，但原因未明。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1735185514,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":396533,"user_name":"fatme","can_delete":false,"product_type":"c3","uid":1034451,"ip_address":"广东","ucode":"75A805D2BB2AD1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c8/d3/3020ae46.jpg","comment_is_top":false,"comment_ctime":1734844091,"is_pvip":false,"replies":[{"id":143954,"content":"的确是值得仔细分析的，但我确实没有在其中找到一条确切的规律，很难说typescript在这里为什么处理成了这个样子~","user_name":"作者回复","user_name_real":"编辑","uid":1521669,"ctime":1734983598,"ip_address":"江苏","comment_id":396533,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100761001,"comment_content":"探究了一下 IsUnion_4 和 IsUnion_1 的区别：\ntype IsUnion_4&lt;T&gt; = [T] extends [infer U] ? U extends infer t ? ([T] extends [t] ? false : true) : never : never;\ntype IsUnion_4_Test_7&lt;T&gt; = [T] extends [infer U] ? [T] : never; &#47;&#47; 这里第二个 [T] 与第一个 [T] 一样，为 [&quot;a&quot; | &quot;b&quot;]\ntype IsUnion_4_Test_3&lt;T&gt; = [T] extends [infer U] ? U extends infer t ? [T] : never : never; &#47;&#47; 这里第二个 [T] 与第一个 [T] 不一样，变为 [&quot;a&quot;] | [&quot;b&quot;]\ntype IsUnion_4_Test_6&lt;T&gt; = [T] extends [infer U] ? U extends infer t ? [T, t] : never : never;\n\ntype T22 = IsUnion_4_Test_7&lt;&#39;a&#39;|&#39;b&#39;&gt;; &#47;&#47; [&quot;a&quot; | &quot;b&quot;]\ntype T7 = IsUnion_4_Test_3&lt;&#39;a&#39;|&#39;b&#39;&gt;; &#47;&#47; [&quot;b&quot;] | [&quot;a&quot;]\ntype T13 = IsUnion_4_Test_6&lt;&#39;a&#39;|&#39;b&#39;&gt;; &#47;&#47; 得到 [&quot;a&quot;, &quot;a&quot;] | [&quot;b&quot;, &quot;b&quot;]，说明 IsUnion_4 里面的 [T] extends [t] ? false : true 是分别用 &quot;a&quot;&#47;&quot;a&quot; 和 &quot;b&quot;&#47;&quot;b&quot; 来比较判断，所以返回 false\n\ntype IsUnion_1&lt;T&gt; = [T, T] extends [infer U, infer U2] ? U extends infer t ? ([T] extends [t] ? false : true) : never : never;\ntype IsUnion_1_Test_3&lt;T&gt; = [T, T] extends [infer U, infer U2] ? U extends infer t ? [T, t] : never : never;\ntype T14 = IsUnion_1_Test_3&lt;&#39;a&#39;|&#39;b&#39;&gt;; &#47;&#47; &#47;&#47; 得到 [&quot;a&quot; | &quot;b&quot;, &quot;a&quot;] | [&quot;a&quot; | &quot;b&quot;, &quot;b&quot;]，说明 IsUnion_1 里面的 [T] extends [t] ? false : true 是分别用 (&quot;a&quot; | &quot;b&quot;)&#47;&quot;a&quot; 和 (&quot;a&quot; | &quot;b&quot;)&#47;&quot;b&quot; 来比较判断，所以返回 true","like_count":0,"discussions":[{"author":{"id":1521669,"avatar":"https://static001.geekbang.org/account/avatar/00/17/38/05/7beecd5d.jpg","nickname":"Aiming","note":"","ucode":"66292B32F9960A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":655456,"discussion_content":"的确是值得仔细分析的，但我确实没有在其中找到一条确切的规律，很难说typescript在这里为什么处理成了这个样子~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1734983598,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]}]}