{"id":39907,"title":"15 | 如何搭建一个可靠的监控系统？","content":"<p><a href=\"http://time.geekbang.org/column/article/15109\">专栏第7期</a>我给你讲解了监控系统的实现原理，先来简单回顾一下，一个监控系统的组成主要涉及四个环节：数据收集、数据传输、数据处理和数据展示。不同的监控系统实现方案，在这四个环节所使用的技术方案不同，适合的业务场景也不一样。</p>\n<p>目前，比较流行的开源监控系统实现方案主要有两种：以<a href=\"https://www.elastic.co/cn/\">ELK</a>为代表的集中式日志解决方案，以及<a href=\"http://graphite.readthedocs.io/en/latest/index.html\">Graphite</a>、<a href=\"https://www.influxdata.com/time-series-platform/\">TICK</a>和<a href=\"https://prometheus.io/\">Prometheus</a>等为代表的时序数据库解决方案。接下来<span class=\"orange\">我就以这几个常见的监控系统实现方案，谈谈它们的实现原理，分别适用于什么场景，以及具体该如何做技术选型。</span></p>\n<h2>ELK</h2>\n<p>ELK是Elasticsearch、Logstash、Kibana三个开源软件产品首字母的缩写，它们三个通常配合使用，所以被称为ELK Stack，它的架构可以用下面的图片来描述。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/cd/9a/cd8d76c0ab3a17bf16c19f973e92bb9a.png?wh=748*201\" alt=\"\" /><br />\n（图片来源：<a href=\"https://cdn-images-1.medium.com/max/1600/1*mwSvtVy_qGz0nTjaYbvwpw.png\">https://cdn-images-1.medium.com/max/1600/1*mwSvtVy_qGz0nTjaYbvwpw.png</a>）</p>\n<p>这三个软件的功能也各不相同。</p>\n<ul>\n<li>\n<p>Logstash负责数据收集和传输，它支持动态地从各种数据源收集数据，并对数据进行过滤、分析、格式化等，然后存储到指定的位置。</p>\n</li>\n<li>\n<p>Elasticsearch负责数据处理，它是一个开源分布式搜索和分析引擎，具有可伸缩、高可靠和易管理等特点，基于Apache Lucene构建，能对大容量的数据进行接近实时的存储、搜索和分析操作，通常被用作基础搜索引擎。</p>\n</li>\n<li>\n<p>Kibana负责数据展示，也是一个开源和免费的工具，通常和Elasticsearch搭配使用，对其中的数据进行搜索、分析并且以图表的方式展示。</p>\n</li>\n</ul><!-- [[[read_end]]] -->\n<p>这种架构因为需要在各个服务器上部署Logstash来从不同的数据源收集数据，所以比较消耗CPU和内存资源，容易造成服务器性能下降，因此后来又在Elasticsearch、Logstash、Kibana之外引入了Beats作为数据收集器。相比于Logstash，Beats所占系统的CPU和内存几乎可以忽略不计，可以安装在每台服务器上做轻量型代理，从成百上千或成千上万台机器向Logstash或者直接向Elasticsearch发送数据。</p>\n<p>其中，Beats支持多种数据源，主要包括：</p>\n<ul>\n<li>\n<p>Packetbeat，用来收集网络流量数据。</p>\n</li>\n<li>\n<p>Topbeat，用来收集系统、进程的CPU和内存使用情况等数据。</p>\n</li>\n<li>\n<p>Filebeat，用来收集文件数据。</p>\n</li>\n<li>\n<p>Winlogbeat，用来收集Windows事件日志收据。</p>\n</li>\n</ul>\n<p>Beats将收集到的数据发送到Logstash，经过Logstash解析、过滤后，再将数据发送到Elasticsearch，最后由Kibana展示，架构就变成下面这张图里描述的了。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/e6/ef/e6ebce07db63a7f0d6e4c03cb458eaef.png?wh=1024*328\" alt=\"\" /><br />\n（图片来源：<a href=\"https://logz.io/wp-content/uploads/2018/08/image21-1024x328.png\">https://logz.io/wp-content/uploads/2018/08/image21-1024x328.png</a>）</p>\n<h2>Graphite</h2>\n<p>Graphite的组成主要包括三部分：Carbon、Whisper、Graphite-Web，它的架构可以用下图来描述。</p>\n<ul>\n<li>\n<p>Carbon：主要作用是接收被监控节点的连接，收集各个指标的数据，将这些数据写入carbon-cache并最终持久化到Whisper存储文件中去。</p>\n</li>\n<li>\n<p>Whisper：一个简单的时序数据库，主要作用是存储时间序列数据，可以按照不同的时间粒度来存储数据，比如1分钟1个点、5分钟1个点、15分钟1个点三个精度来存储监控数据。</p>\n</li>\n<li>\n<p>Graphite-Web：一个Web App，其主要功能绘制报表与展示，即数据展示。为了保证Graphite-Web能及时绘制出图形，Carbon在将数据写入Whisper存储的同时，会在carbon-cache中同时写入一份数据，Graphite-Web会先查询carbon-cache，如果没有再查询Whisper存储。</p>\n</li>\n</ul>\n<p><img src=\"https://static001.geekbang.org/resource/image/fc/11/fc78b78efe3c2cb52f478e61a9ebbc11.png?wh=766*626\" alt=\"\" /><br />\n（图片来源：<a href=\"https://graphiteapp.org/img/architecture_diagram.png\">https://graphiteapp.org/img/architecture_diagram.png</a>）</p>\n<p>也就是说Carbon负责数据处理，Whisper负责数据存储，Graphite-Web负责数据展示，可见Graphite自身并不包含数据采集组件，但可以接入<a href=\"https://github.com/etsy/statsd\">StatsD</a>等开源数据采集组件来采集数据，再传送给Carbon。</p>\n<p>其中Carbon对写入的数据格式有一定的要求，比如：</p>\n<pre><code>servers.www01.cpuUsage 42 1286269200\nproducts.snake-oil.salesPerMinute 123 1286269200\n[one minute passes]\nservers.www01.cpuUsageUser 44 1286269260\nproducts.snake-oil.salesPerMinute 119 1286269260\n</code></pre>\n<p>其中“servers.www01.cpuUsage 42 1286269200”是“key”  +  空格分隔符  +  “value  +  时间戳”的数据格式，“servers.www01.cpuUsage”是以“.”分割的key，代表具体的路径信息，“42”是具体的值，“1286269200”是当前的Unix时间戳。</p>\n<p>Graphite-Web对外提供了HTTP API可以查询某个key的数据以绘图展示，查询方式如下。</p>\n<pre><code>http://graphite.example.com/render?target=servers.www01.cpuUsage&amp;\nwidth=500&amp;height=300&amp;from=-24h\n</code></pre>\n<p>这个HTTP请求意思是查询key“servers.www01.cpuUsage”在过去24小时的数据，并且要求返回500*300大小的数据图。</p>\n<p>除此之外，Graphite-Web还支持丰富的函数，比如：</p>\n<pre><code>target=sumSeries(products.*.salesPerMinute)\n</code></pre>\n<p>代表了查询匹配规则“products.*.salesPerMinute”的所有key的数据之和。</p>\n<h2>TICK</h2>\n<p>TICK是Telegraf、InfluxDB、Chronograf、Kapacitor四个软件首字母的缩写，是由InfluxData开发的一套开源监控工具栈，因此也叫作TICK Stack，它的架构可以看用下面这张图来描述。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/6e/35/6e5c85e68f0eff409f70f17f846d5335.png?wh=980*770\" alt=\"\" /><br />\n（图片来源：<a href=\"https://2bjee8bvp8y263sjpl3xui1a-wpengine.netdna-ssl.com/wp-content/uploads/Tick-Stack-Complete.png\">https://2bjee8bvp8y263sjpl3xui1a-wpengine.netdna-ssl.com/wp-content/uploads/Tick-Stack-Complete.png</a>）</p>\n<p>从这张图可以看出，其中Telegraf负责数据收集，InfluxDB负责数据存储，Chronograf负责数据展示，Kapacitor负责数据告警。</p>\n<p>这里面，InfluxDB对写入的数据格式要求如下。</p>\n<pre><code>&lt;measurement&gt;[,&lt;tag-key&gt;=&lt;tag-value&gt;...] &lt;field-key&gt;=&lt;field-value&gt;[,&lt;field2-key&gt;=&lt;field2-value&gt;...] [unix-nano-timestamp]\n</code></pre>\n<p>下面我用一个具体示例来说明它的格式。</p>\n<pre><code>cpu,host=serverA,region=us_west value=0.64 1434067467100293230\n</code></pre>\n<p>其中，“cpu,host=serverA,region=us_west value=0.64 1434067467100293230”代表了host为serverA、region为us_west的服务器CPU的值是0.64，时间戳是1434067467100293230，时间精确到nano。</p>\n<h2>Prometheus</h2>\n<p>还有一种比较有名的时间序数据库解决方案Prometheus，它是一套开源的系统监控报警框架，受Google的集群监控系统Borgmon启发，由工作在SoundCloud的Google前员工在2012年创建，后来作为社区开源项目进行开发，并于2015年正式发布，2016年正式加入CNCF（Cloud Native Computing Foundation），成为受欢迎程度仅次于Kubernetes的项目，它的架构可以用下图来描述。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/a4/71/a42d15cb006b41fecc82575b566dbc71.png?wh=1351*811\" alt=\"\" /><br />\n（图片来源：<a href=\"https://prometheus.io/assets/architecture.png\">https://prometheus.io/assets/architecture.png</a>）</p>\n<p>从这张图可以看出，Prometheus主要包含下面几个组件：</p>\n<ul>\n<li>\n<p>Prometheus Server：用于拉取metrics信息并将数据存储在时间序列数据库。</p>\n</li>\n<li>\n<p>Jobs/exporters：用于暴露已有的第三方服务的metrics给Prometheus Server，比如StatsD、Graphite等，负责数据收集。</p>\n</li>\n<li>\n<p>Pushgateway：主要用于短期jobs，由于这类jobs存在时间短，可能在Prometheus Server来拉取metrics信息之前就消失了，所以这类的jobs可以直接向Prometheus Server推送它们的metrics信息。</p>\n</li>\n<li>\n<p>Alertmanager：用于数据报警。</p>\n</li>\n<li>\n<p>Prometheus web UI：负责数据展示。</p>\n</li>\n</ul>\n<p>它的工作流程大致是：</p>\n<ul>\n<li>\n<p>Prometheus Server定期从配置好的jobs或者exporters中拉取metrics信息，或者接收来自Pushgateway发过来的metrics信息。</p>\n</li>\n<li>\n<p>Prometheus Server把收集到的metrics信息存储到时间序列数据库中，并运行已经定义好的alert.rules，向Alertmanager推送警报。</p>\n</li>\n<li>\n<p>Alertmanager根据配置文件，对接收的警报进行处理，发出告警。</p>\n</li>\n<li>\n<p>通过Prometheus web UI进行可视化展示。</p>\n</li>\n</ul>\n<p>Prometheus存储数据也是用的时间序列数据库，格式如下。</p>\n<pre><code>&lt;metric name&gt;{&lt;label name&gt;=&lt;label value&gt;, …}\n</code></pre>\n<p>比如下面这段代码代表了位于集群cluster  1上，节点IP为1.1.1.1，端口为80，访问路径为“/a”的http请求的总数为100。</p>\n<pre><code>http_requests_total{instance=&quot;1.1.1.1:80&quot;,job=&quot;cluster1&quot;,location=&quot;/a&quot;} 100\n</code></pre>\n<p>讲到这里，四种监控系统的解决方案都已经介绍完了，接下来我们对比一下这四种方案，看看如何选型。</p>\n<h2>选型对比</h2>\n<p>我们从监控系统的四个环节来分别对比。</p>\n<p><strong>1. 数据收集</strong></p>\n<p>ELK是通过在每台服务器上部署Beats代理来采集数据；Graphite本身没有收据采集组件，需要配合使用开源收据采集组件，比如StatsD；TICK使用了Telegraf作为数据采集组件；Prometheus通过jobs/exporters组件来获取StatsD等采集过来的metrics信息。</p>\n<p><strong>2. 数据传输</strong></p>\n<p>ELK是Beats采集的数据传输给Logstash，经过Logstash清洗后再传输给Elasticsearch；Graphite是通过第三方采集组件采集的数据，传输给Carbon；TICK是Telegraf采集的数据，传输给InfluxDB；而Prometheus是Prometheus Server隔一段时间定期去从jobs/exporters拉取数据。可见前三种都是采用“推数据”的方式，而Prometheus是采取拉数据的方式，因此Prometheus的解决方案对服务端的侵入最小，不需要在服务端部署数据采集代理。</p>\n<p><strong>3. 数据处理</strong></p>\n<p>ELK可以对日志的任意字段索引，适合多维度的数据查询，在存储时间序列数据方面与时间序列数据库相比会有额外的性能和存储开销。除此之外，时间序列数据库的几种解决方案都支持多种功能的数据查询处理，功能也更强大。</p>\n<ul>\n<li>Graphite通过Graphite-Web支持正则表达式匹配、sumSeries求和、alias给监控项重新命名等函数功能，同时还支持这些功能的组合，比如下面这个表达式的意思是，要查询所有匹配路径“stats.open.profile.*.API._comments_flow”的监控项之和，并且把监控项重命名为Total QPS。</li>\n</ul>\n<pre><code>alias(sumSeries(stats.openapi.profile.*.API._comments_flow.total_count,&quot;Total QPS&quot;)\n</code></pre>\n<ul>\n<li>InfluxDB通过类似SQL语言的InfluxQL，能对监控数据进行复杂操作，比如查询一分钟CPU的使用率，用InfluxDB实现的示例是：</li>\n</ul>\n<pre><code>SELECT 100 - usage_idel FROM &quot;autogen&quot;.&quot;cpu&quot; WHERE time &gt; now() - 1m and &quot;cpu&quot;='cpu0'\n</code></pre>\n<ul>\n<li>Prometheus通过私有的PromQL查询语言，如果要和上面InfluxDB实现同样的功能，PromQL语句如下，看起来更加简洁。</li>\n</ul>\n<pre><code>100 - (node_cpu{job=&quot;node&quot;,mode=&quot;idle&quot;}[1m]) \n</code></pre>\n<p><strong>4. 数据展示</strong></p>\n<p>Graphite、TICK和Prometheus自带的展示功能都比较弱，界面也不好看，不过好在它们都支持<a href=\"https://grafana.com/\">Grafana</a>来做数据展示。Grafana是一个开源的仪表盘工具，它支持多种数据源比如Graphite、InfluxDB、Prometheus以及Elasticsearch等。ELK采用了Kibana做数据展示，Kibana包含的数据展示功能比较强大，但只支持Elasticsearch，而且界面展示UI效果不如Grafana美观。</p>\n<h2>总结</h2>\n<p>以上几种监控系统实现方式，所采用的技术均为开源的，其中：</p>\n<ul>\n<li>\n<p>ELK的技术栈比较成熟，应用范围也比较广，除了可用作监控系统外，还可以用作日志查询和分析。</p>\n</li>\n<li>\n<p>Graphite是基于时间序列数据库存储的监控系统，并且提供了功能强大的各种聚合函数比如sum、average、top5等可用于监控分析，而且对外提供了API也可以接入其他图形化监控系统如Grafana。</p>\n</li>\n<li>\n<p>TICK的核心在于其时间序列数据库InfluxDB的存储功能强大，且支持类似SQL语言的复杂数据处理操作。</p>\n</li>\n<li>\n<p>Prometheus的独特之处在于它采用了拉数据的方式，对业务影响较小，同时也采用了时间序列数据库存储，而且支持独有的PromQL查询语言，功能强大而且简洁。</p>\n</li>\n</ul>\n<p>从对实时性要求角度考虑，时间序列数据库的实时性要好于ELK，通常可以做到10s级别内的延迟，如果对实时性敏感的话，建议选择时间序列数据库解决方案。</p>\n<p>从使用的灵活性角度考虑，几种时间序列数据库的监控处理功能都要比ELK更加丰富，使用更灵活也更现代化。</p>\n<p>所以如果要搭建一套新的监控系统，我建议可以考虑采用Graphite、TICK或者Prometheus其中之一。不过Graphite还需要搭配数据采集系统比如StatsD或者Collectd使用，而且界面展示建议使用Grafana接入Graphite的数据源，它的效果要比Graphite Web本身提供的界面美观很多。TICK提供了完整的监控系统框架，包括从数据采集、数据传输、数据处理再到数据展示，不过在数据展示方面同样也建议用Grafana替换掉TICK默认的数据展示组件Chronograf，这样展示效果更好。Prometheus因为采用拉数据的方式，所以对业务的侵入性最小，比较适合Docker封装好的云原生应用，比如Kubernetes默认就采用了Prometheus作为监控系统。</p>\n<h2>思考题</h2>\n<p>通过我今天的讲解，你应该知道了Graphite、TICK以及Prometheus存储监控数据都采用了时间序列数据库，它们在存储和性能上有什么不同之处吗？</p>\n<p>欢迎你在留言区写下自己的思考，与我一起讨论。</p>\n<p></p>\n","neighbors":{"left":{"article_title":"14 | 开源RPC框架如何选型？","id":39809},"right":{"article_title":"16 | 如何搭建一套适合你的服务追踪系统？","id":40505}},"comments":[{"had_liked":false,"id":29501,"user_name":"xuanyuan","can_delete":false,"product_type":"c1","uid":1113737,"ip_address":"","ucode":"1EC79B9372868F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI2icbib62icXtibTkThtyRksbuJLoTLMts7zook2S30MiaBtbz0f5JskwYicwqXkhpYfvCpuYkcvPTibEaQ/132","comment_is_top":false,"comment_ctime":1538396125,"is_pvip":false,"replies":[{"id":"10784","content":"elk用作监控的有很多地方，另外专栏面向的读者层次不同，有的读者没有基础知识，照顾下他们，科普还是有必要的，更深的使用经验在考虑单独篇幅里写。","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1538625414,"ip_address":"","comment_id":29501,"utype":1}],"discussion_count":1,"race_medal":0,"score":"327955910621","product_id":100014401,"comment_content":"elk更多是日志吧。大家买课程很多希望看到外面看不到的经验，而不是网上文章的拼凑，毫无营养，说实话。","like_count":77,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425643,"discussion_content":"elk用作监控的有很多地方，另外专栏面向的读者层次不同，有的读者没有基础知识，照顾下他们，科普还是有必要的，更深的使用经验在考虑单独篇幅里写。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1538625414,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":28670,"user_name":"herome","can_delete":false,"product_type":"c1","uid":1097654,"ip_address":"","ucode":"F00A539371C206","user_header":"https://static001.geekbang.org/account/avatar/00/10/bf/b6/ee3b4ef7.jpg","comment_is_top":false,"comment_ctime":1538124135,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"61667666279","product_id":100014401,"comment_content":"墙裂推荐 美团的CAT ！！！！","like_count":15},{"had_liked":false,"id":233052,"user_name":"公号-技术夜未眠","can_delete":false,"product_type":"c1","uid":1013683,"ip_address":"","ucode":"83825B57CBD952","user_header":"https://static001.geekbang.org/account/avatar/00/0f/77/b3/991f3f9b.jpg","comment_is_top":false,"comment_ctime":1594205701,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"31658976773","product_id":100014401,"comment_content":"关于不同类型监控的技术选型建议:<br>日志监控推荐用ELK<br>Metrics参数监控推荐用promethus+gafana<br>调用链监控推荐用skywalking<br>业务监控推荐用业务开发+gafana<br>","like_count":8,"discussions":[{"author":{"id":1365206,"avatar":"https://static001.geekbang.org/account/avatar/00/14/d4/d6/1d4543ac.jpg","nickname":"云海","note":"","ucode":"0C6CA0BE58EA21","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":395757,"discussion_content":"我们公司也基本这样的，但是grafana并没有感觉到太多优势，使用elk一样能解决","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632328370,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":103881,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1560559155,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"27330362931","product_id":100014401,"comment_content":"开开眼界，用时自行研究，这里就是常规介绍","like_count":6,"discussions":[{"author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":323283,"discussion_content":"白花‘钱’","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1604911965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":28314,"user_name":"玉剑冰锋","can_delete":false,"product_type":"c1","uid":1214202,"ip_address":"","ucode":"8EA56A71BA5B22","user_header":"https://static001.geekbang.org/account/avatar/00/12/86/fa/4bcd7365.jpg","comment_is_top":false,"comment_ctime":1538048426,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"18717917610","product_id":100014401,"comment_content":"个人认为ELK更适合进行故障排查定位、数据分析、深度挖掘方向，不知道老师是否认可？另外请教老师一个问题，Prometheus这种拉取方式在小规模可以体现出优势，大规模的情况拉取是不是就不如推送更优了？","like_count":4,"discussions":[{"author":{"id":1438037,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f1/55/8ac4f169.jpg","nickname":"陈国林","note":"","ucode":"83D12F3E79F197","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200875,"discussion_content":"大规模拉优势更好吧，如果是推的方式是有可能把 Server 打挂的。如果用拉的方式，Server可以控制每次拉取的频率，不至于被打挂","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1583732755,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1707612,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/0e/5c/d7a51340.jpg","nickname":"唐宋如","note":"","ucode":"D7C33AE990EFA0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":323443,"discussion_content":"这个老师比较水，微博出来的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604935944,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":39277,"user_name":"cqc","can_delete":false,"product_type":"c1","uid":1099493,"ip_address":"","ucode":"18053C9C62805F","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/e5/7e86498f.jpg","comment_is_top":false,"comment_ctime":1542242822,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14427144710","product_id":100014401,"comment_content":"从官方文档来看，Prometheus的指标存储，很高效，但是问题在于没有成熟的高可用，历史数据归档，海量历史数据查询支持。在调研监控系统的过程中，还发现了小米的open falcon，感觉设计得很复杂，它和Prometheus都属于现代的面向微服务设计的指标监控系统，老师能否有机会深度比较一下？另外，想让老师指正一下我对于监控系统的理解：根据我目前的理解，监控系统可以划分为不同的维度：指标监控（如Prometheus，Zabbix），日志监控（NLK&#47;NFK），调用链监控（zipkin），不知道对不对？","like_count":3,"discussions":[{"author":{"id":1438037,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f1/55/8ac4f169.jpg","nickname":"陈国林","note":"","ucode":"83D12F3E79F197","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200876,"discussion_content":"Prometheus高可用可以参考 https://github.com/thanos-io/thanos","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583732824,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":314942,"user_name":"俯瞰风景.","can_delete":false,"product_type":"c1","uid":1044166,"ip_address":"","ucode":"A6DB68B7B84AEE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/c6/bebcbcf0.jpg","comment_is_top":false,"comment_ctime":1633602073,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10223536665","product_id":100014401,"comment_content":"监控系统的组成主要涉及四个环节：数据收集、数据传输、数据处理和数据展示。<br>每个环节都有相应的开源组件可以使用。<br><br>成熟的方案有：<br><br>  **1、Beats + Logstash + Elasticsearch + Kibana（Grafana）**<br><br>  **2、StatsD + Carbon + Whisper + Graphite-Web（Grafana）**<br><br>  **3、Telegraf + InfluxDB + Chronograf****（Grafana）**** + Kapacitor **<br><br>  **4、Prometheus + Grafana**<br><br>对于时序数据的处理，后三种方案性能更高，因为有专门的时序数据库来存储数据；对于多维度数据的处理，第一种方案更加合适。","like_count":3},{"had_liked":false,"id":28672,"user_name":"金hb.Ryan 冷空氣駕到","can_delete":false,"product_type":"c1","uid":1222233,"ip_address":"","ucode":"CAD363576696E4","user_header":"https://static001.geekbang.org/account/avatar/00/12/a6/59/1689ea0c.jpg","comment_is_top":false,"comment_ctime":1538124591,"is_pvip":false,"replies":[{"id":"13488","content":"哈哈，开源组件在生产环境中用肯定是要优化的","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1541644454,"ip_address":"","comment_id":28672,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10128059183","product_id":100014401,"comment_content":"很欣慰，我司的监控技术栈是influxdb+grafana，配合程序&#47;collectd 来推送，不过即使influxdb很强大还是建议适当merge一下，不然...都是泪","like_count":3,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425344,"discussion_content":"哈哈，开源组件在生产环境中用肯定是要优化的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541644454,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":28073,"user_name":"旭东(Frank)","can_delete":false,"product_type":"c1","uid":1024486,"ip_address":"","ucode":"176FA629800062","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/e6/50da1b2d.jpg","comment_is_top":false,"comment_ctime":1538006275,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5832973571","product_id":100014401,"comment_content":"国产的有好的监控组件吗？如CAT","like_count":1},{"had_liked":false,"id":342733,"user_name":"小伙子","can_delete":false,"product_type":"c1","uid":2651409,"ip_address":"","ucode":"1812929190395B","user_header":"https://static001.geekbang.org/account/avatar/00/28/75/11/1e1dbcf5.jpg","comment_is_top":false,"comment_ctime":1650438399,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650438399","product_id":100014401,"comment_content":"评论好少","like_count":0},{"had_liked":false,"id":329217,"user_name":"第一装甲集群司令克莱斯特","can_delete":false,"product_type":"c1","uid":1265707,"ip_address":"","ucode":"4E8FBB23AD860B","user_header":"https://static001.geekbang.org/account/avatar/00/13/50/2b/2344cdaa.jpg","comment_is_top":false,"comment_ctime":1641216457,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1641216457","product_id":100014401,"comment_content":"emonitor,  yyds","like_count":0},{"had_liked":false,"id":285579,"user_name":"Dylan","can_delete":false,"product_type":"c1","uid":1040236,"ip_address":"","ucode":"58064D0C9F9F5F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/df/6c/5af32271.jpg","comment_is_top":false,"comment_ctime":1616906871,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616906871","product_id":100014401,"comment_content":"其实有些内容网上还是可以找到对比，作为读者更想知道怎么根据场景去落地，能结合老师的实战经验去给出思考方案，希望后面的课程有不错的内容","like_count":0},{"had_liked":false,"id":284532,"user_name":"极客雷","can_delete":false,"product_type":"c1","uid":1041465,"ip_address":"","ucode":"0DBAC4CB9C7BCD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e4/39/a06ade33.jpg","comment_is_top":false,"comment_ctime":1616320926,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1616320926","product_id":100014401,"comment_content":"这篇写的好，简明扼要，详略得当","like_count":0},{"had_liked":false,"id":201580,"user_name":"隰有荷","can_delete":false,"product_type":"c1","uid":1357944,"ip_address":"","ucode":"2BE9A32AB28963","user_header":"https://static001.geekbang.org/account/avatar/00/14/b8/78/2828195b.jpg","comment_is_top":false,"comment_ctime":1585807572,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585807572","product_id":100014401,"comment_content":"老师，请问一下，prometheus也适用于对报错信息进行监控的业务场景吗？<br>比如：前端出现报错，然后上传给后端，后端将报错信息(错误码)存储在时序数据库中，然后用prometheus去对其进行监控并设置告警规则，然后将这次出现的报错信息发送到邮件或者微信等。","like_count":0},{"had_liked":false,"id":166403,"user_name":"Geek_6ea8f7","can_delete":false,"product_type":"c1","uid":1497495,"ip_address":"","ucode":"8711EF9355FD87","user_header":"","comment_is_top":false,"comment_ctime":1577442689,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577442689","product_id":100014401,"comment_content":"如果选择时序数据库类型的解决方案，是不是还要有专门的日志系统?","like_count":0},{"had_liked":false,"id":27383,"user_name":"天若有情天亦老","can_delete":false,"product_type":"c1","uid":1172029,"ip_address":"","ucode":"57F0B7D524C0CF","user_header":"https://static001.geekbang.org/account/avatar/00/11/e2/3d/9a52946b.jpg","comment_is_top":false,"comment_ctime":1537881332,"is_pvip":false,"replies":[{"id":"9960","content":"能cover住需求就行","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1537936183,"ip_address":"","comment_id":27383,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1537881332","product_id":100014401,"comment_content":"elk+xpack 可以做到小规模的业务监控。<br>就是watcher比较难用<br>目前用的方案是 elk stack+zabbix ，求更优方案","like_count":0,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424897,"discussion_content":"能cover住需求就行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537936183,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}