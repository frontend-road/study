{"id":4253,"title":"51 | 弹力设计篇之“弹力设计总结”","content":"<p>你好，我是陈皓，网名左耳朵耗子。</p>\n<p>我们前面讲了那么多的弹力设计的设计模式，这里做个总结。</p>\n<h1>弹力设计总图</h1>\n<p>首先，我们的服务不能是单点，所以，我们需要在架构中冗余服务，也就是说有多个服务的副本。这需要使用到的具体技术有：</p>\n<ul>\n<li>负载均衡 + 服务健康检查–可以使用像Nginx或HAProxy这样的技术；</li>\n<li>服务发现 + 动态路由 + 服务健康检查，比如Consul或ZooKeeper；</li>\n<li>自动化运维，Kubernetes 服务调度、伸缩和故障迁移。</li>\n</ul>\n<p>然后，我们需要隔离我们的业务，要隔离我们的服务我们就需要对服务进行解耦和拆分，这需要使用到以前的相关技术。</p>\n<!-- [[[read_end]]] -->\n<ul>\n<li>\n<p>bulkheads模式：业务分片 、用户分片、数据库拆分。</p>\n</li>\n<li>\n<p>自包含系统：所谓自包含的系统是从单体到微服务的中间状态，其把一组密切相关的微服务给拆分出来，只需要做到没有外部依赖就行。</p>\n</li>\n<li>\n<p>异步通讯：服务发现、事件驱动、消息队列、业务工作流。</p>\n</li>\n<li>\n<p>自动化运维：需要一个服务调用链和性能监控的监控系统。</p>\n</li>\n</ul>\n<p>然后，接下来，我们就要进行能让整个架构接受失败的相关处理设计，也就是所谓的容错设计。这会用到下面的这些技术。</p>\n<ul>\n<li>\n<p>错误方面：调用重试 + 熔断 + 服务的幂等性设计。</p>\n</li>\n<li>\n<p>一致性方面：强一致性使用两阶段提交、最终一致性使用异步通讯方式。</p>\n</li>\n<li>\n<p>流控方面：使用限流 + 降级技术。</p>\n</li>\n<li>\n<p>自动化运维方面：网关流量调度，服务监控。</p>\n</li>\n</ul>\n<p>我不敢保证上面这些技术可以解决所有的问题，但是，只要我们设计得当，绝大多数的问题应该是可以扛得住的了。</p>\n<p>下面我画一个图来表示一下。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/a7/2f/a7f9e41b0457326e08ffc93e319d352f.jpg?wh=2085x1473\" alt=\"\" /><br />\n在上面这个图上，我们可以看到，有三大块的东西。</p>\n<ul>\n<li>\n<p>冗余服务。通过冗余服务的复本数可以消除单点故障。这需要服务发现，负载均衡，动态路由和健康检查四个功能或组件。</p>\n</li>\n<li>\n<p>服务解耦。通过解耦可以做到把业务隔离开来，不让服务受影响，这样就可以有更好的稳定性。在水平层面上，需要把业务或用户分片分区（业分做隔离，用户做多租户）。在垂直层面上，需要异步通讯机制。因为应用被分解成了一个一个的服务，所以在服务的编排和聚合上，需要有工作流（像Spring的Stream或Akka的flow或是AWS的Simple Workflow）来把服务给串联起来。而一致性的问题又需要业务补偿机制来做反向交易。</p>\n</li>\n<li>\n<p>服务容错。服务容错方面，需要有重试机制，重试机制会带来幂等操作，对于服务保护来说，熔断，限流，降级都是为了保护整个系统的稳定性，并在可用性和一致性方面在出错的情况下做一部分的妥协。</p>\n</li>\n</ul>\n<p>当然，除了这一切的架构设计外，你还需要一个或多个自动运维的工具，否则，如果是人肉运维的话，那么在故障发生的时候，不能及时地做出运维决定，也就空有这些弹力设计了。比如：监控到服务性能不够了，就自动或半自动地开始进行限流或降级。</p>\n<h1>弹力设计开发和运维</h1>\n<p>对于运维工具来说，你至少需要两个系统：</p>\n<ul>\n<li>一个是像APM这样的服务监控；</li>\n<li>另一个是服务调度的系统，如：Docker + Kubernetes。</li>\n</ul>\n<p>此外，如果你需要一个开发架构来让整个开发团队在同一个标准下开发上面的这些东西，这里，Spring Cloud就是不二之选了。</p>\n<p>关于Spring Cloud和Kubernetes，它们都是为了微服务而生，但它们没有什么可比性，因为，前者偏开发，后者偏运维。我们来看一下它们的差别。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/35/f4/35cd0722f99f91c904944ac1bbdd56f4.png?wh=862*339\" alt=\"\" /><br />\n（图片来自：Deploying Microservices: Spring Cloud vs Kubernetes）</p>\n<p>从上表我们可以得知：</p>\n<ul>\n<li>\n<p>Spring Cloud有一套丰富且集成良好的Java库，作为应用栈的一部分解决所有运行时问题。因此，微服务本身可以通过库和运行时代理解决客户端服务发现、负载均衡、配置更新、统计跟踪等。工作模式就像单实例服务集群。（译者注：集群中master节点工作：当master挂掉后，slave节点被选举顶替。）并且一批工作也是在JVM中被管理。</p>\n</li>\n<li>\n<p>Kubernetes不是针对语言的，而是针对容器的，所以，它是以通用的方式为所有语言解决分布式计算问题。Kubernetes提供了配置管理、服务发现、负载均衡、跟踪、统计、单实例、平台级和应用栈之外的调度工作。该应用不需要任何客户端逻辑的库或代理程序，可以用任何语言编写。</p>\n</li>\n</ul>\n<p>下图是微服务所需的关键技术，以及这些技术中在Spring Cloud和Kubernetes的涵盖面。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/dc/af/dcab89f031d1a7083b4f0b3091873caf.png?wh=539*818\" alt=\"\" /><br />\n（图片来自：Deploying Microservices: Spring Cloud vs Kubernetes）</p>\n<p>两个平台依靠相似的第三方工具，如ELK和EFK stacks, tracing libraries等。Hystrix和Spring Boot等库，在两个环境中都表现良好。很多情况下，Spring Cloud和Kubernetes可以形成互补，组建出更强大的解决方案（例如KubeFlix和Spring Cloud Kubernetes）。</p>\n<p>下图是在Kubernetes上使用Spring Cloud可以表现出来的整体特性。要做出一个可运维的分布式系统，除了在架构上的设计之外，还需要一整套的用来支撑分布式系统的管控系统，也就是所谓的运维系统。要做到这些，不是靠几个人几天就可以完成的。这需要我们根据自己的业务特点来规划相关的实施路径。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/41/6a/41e9f7a084e6c81fcb3bb42d43b0076a.png?wh=864*502\" alt=\"\" /><br />\n（图片来自：Deploying Microservices: Spring Cloud vs Kubernetes）</p>\n<p>上面这张图中，对于所有的特性，都列举了一些相关的软件和一些设计的重点，其中红色的是运维层面的和Spring Cloud和Kubernetes不相关的，绿色的Spring Cloud提供的开发框架，蓝色的是Kubernetes相关的重要功能。</p>\n<p>从今天看下来，微服务的最佳实践在未来有可能会成为SpringCloud和Kubernetes的天下了。这个让我们拭目以待。</p>\n<p>我在本篇文章中总结了整个弹力设计，提供了一张总图，并介绍了开发运维的实践。希望对你有帮助。</p>\n<p>也欢迎你分享一下你对弹力设计和弹力设计系列文章的感想。</p>\n<p>文末给出了《分布式系统设计模式》系列文章的目录，希望你能在这个列表里找到自己感兴趣的内容。</p>\n<ul>\n<li>弹力设计篇\n<ul>\n<li><a href=\"https://time.geekbang.org/column/article/3912\">认识故障和弹力设计</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/3917\">隔离设计Bulkheads</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/3926\">异步通讯设计Asynchronous</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/4050\">幂等性设计Idempotency</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/4086\">服务的状态State</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/4087\">补偿事务Compensating Transaction</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/4121\">重试设计Retry</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/4241\">熔断设计Circuit Breaker</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/4245\">限流设计Throttle</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/4252\">降级设计degradation</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/4253\">弹力设计总结</a></li>\n</ul>\n</li>\n<li>管理设计篇\n<ul>\n<li><a href=\"https://time.geekbang.org/column/article/5175\">分布式锁Distributed Lock</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/5819\">配置中心Configuration Management</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/5909\">边车模式Sidecar</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/5920\">服务网格Service Mesh</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/6086\">网关模式Gateway</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/6283\">部署升级策略</a></li>\n</ul>\n</li>\n<li>性能设计篇\n<ul>\n<li><a href=\"https://time.geekbang.org/column/article/6282\">缓存Cache</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/7036\">异步处理Asynchronous</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/7045\">数据库扩展</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/7047\">秒杀Flash Sales</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/7086\">边缘计算Edge Computing</a></li>\n</ul>\n</li>\n</ul>\n","neighbors":{"left":{"article_title":"50 | 弹力设计篇之“降级设计”","id":4252},"right":{"article_title":"52 | 管理设计篇之“分布式锁”","id":5175}},"comments":[{"had_liked":false,"id":4472,"user_name":"雨","can_delete":false,"product_type":"c1","uid":1068350,"ip_address":"","ucode":"A846945EBDD3CC","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/3e/5e0cac1b.jpg","comment_is_top":false,"comment_ctime":1522126919,"is_pvip":false,"replies":[{"id":"1115","content":"正在写，不过，排期得排到5月或6月份了","user_name":"作者回复","comment_id":4472,"uid":"1001269","ip_address":"","utype":1,"ctime":1522160352,"user_name_real":"左耳朵"}],"discussion_count":1,"race_medal":0,"score":"48766767175","product_id":100002201,"comment_content":"求耗子叔的更新版程序员练级攻略","like_count":12,"discussions":[{"author":{"id":1001269,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/35/89726f5f.jpg","nickname":"左耳朵","note":"","ucode":"8A4741D677702E","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":416377,"discussion_content":"正在写，不过，排期得排到5月或6月份了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1522160352,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":176024,"user_name":"slark","can_delete":false,"product_type":"c1","uid":1143574,"ip_address":"","ucode":"7E8DE962AA23A7","user_header":"https://static001.geekbang.org/account/avatar/00/11/73/16/595b0342.jpg","comment_is_top":false,"comment_ctime":1580913546,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31645684618","product_id":100002201,"comment_content":"java生态确实好，但整体一套的cloud下来，性能不高。而其他语言又还没有java的这一大套完善的微服务框架。k8s在运维云开发上目前看是覆盖更广，价值更大的。即使没有用或者很难搭建一整套微服务组件，只要把服务结合k8s，在运维方面还是能有很大收获","like_count":8},{"had_liked":false,"id":4475,"user_name":"jack","can_delete":false,"product_type":"c1","uid":1047334,"ip_address":"","ucode":"21899EB2015FC5","user_header":"","comment_is_top":false,"comment_ctime":1522129591,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"22996966071","product_id":100002201,"comment_content":"陈老师，能否讲讲系统容量规划方面的内容？","like_count":6},{"had_liked":false,"id":222244,"user_name":"业余爱好者","can_delete":false,"product_type":"c1","uid":1482915,"ip_address":"","ucode":"A890935A982988","user_header":"https://static001.geekbang.org/account/avatar/00/16/a0/a3/8da99bb0.jpg","comment_is_top":false,"comment_ctime":1590724387,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14475626275","product_id":100002201,"comment_content":"重试，降级，熔断是调用方的职责，限流一般放在服务提供方。不知道这样理解对否。","like_count":3,"discussions":[{"author":{"id":1740409,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/8e/79/f9d5dd3a.jpg","nickname":"吕超","note":"","ucode":"B36883984BE16B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338812,"discussion_content":"重试需要服务提供幂等性操作，降级应该是服务方要做的，同时在http返回头里加入降级标识，调用方根据降级标识区别处理。熔断应该完全是调用方来处理的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1609386940,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":4665,"user_name":"昵称","can_delete":false,"product_type":"c1","uid":1025680,"ip_address":"","ucode":"FD6A58AB271E5D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a6/90/5295fce8.jpg","comment_is_top":false,"comment_ctime":1522322445,"is_pvip":false,"replies":[{"id":"1268","content":"等发完区块链后发","user_name":"作者回复","comment_id":4665,"uid":"1001269","ip_address":"","utype":1,"ctime":1522501136,"user_name_real":"左耳朵"}],"discussion_count":1,"race_medal":0,"score":"14407224333","product_id":100002201,"comment_content":"请问管理设计个性能设计篇是还没有出吗？","like_count":3,"discussions":[{"author":{"id":1001269,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/35/89726f5f.jpg","nickname":"左耳朵","note":"","ucode":"8A4741D677702E","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":416473,"discussion_content":"等发完区块链后发","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1522501136,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":8834,"user_name":"Penn","can_delete":false,"product_type":"c1","uid":1044701,"ip_address":"","ucode":"C6A4AA2259068F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/AkO5s3tJhibth9nelCNdU5qD4J3aEn8OpBhOHluicWgEj1SbcGC6e9rccK8DrfJtRibJT5g6iamfIibt5xX7ketDF6w/132","comment_is_top":false,"comment_ctime":1526475649,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10116410241","product_id":100002201,"comment_content":"订阅了8个，这个专栏是最系统深刻的，开阔了眼界，感觉有些系列可以拎出来单独扩展，期待老师更多的分享","like_count":2},{"had_liked":false,"id":5248,"user_name":"徐卫","can_delete":false,"product_type":"c1","uid":1021174,"ip_address":"","ucode":"E1CC8EFCB27CC3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/94/f6/fc60bf8a.jpg","comment_is_top":false,"comment_ctime":1522940045,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10112874637","product_id":100002201,"comment_content":"这两天又将分布式弹力设计的所有文章重新看了一遍，每次看都有不同的收获，系统性的学习真的很重要，感谢皓子叔。这个专栏越来越值了。","like_count":2},{"had_liked":false,"id":211432,"user_name":"Geek_130e9e","can_delete":false,"product_type":"c1","uid":1587628,"ip_address":"","ucode":"518AAF2F228C17","user_header":"","comment_is_top":false,"comment_ctime":1587962062,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5882929358","product_id":100002201,"comment_content":"从今天看下来，微服务的最佳实践在未来有可能会成为 SpringCloud 和 Kubernetes 的天下了。拭目以待。","like_count":1},{"had_liked":false,"id":166009,"user_name":"文刂 氵共 超","can_delete":false,"product_type":"c1","uid":1282813,"ip_address":"","ucode":"C2CE1512D23012","user_header":"https://static001.geekbang.org/account/avatar/00/13/92/fd/6b0e58fe.jpg","comment_is_top":false,"comment_ctime":1577362025,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5872329321","product_id":100002201,"comment_content":"坚持学习，学习笔记 https:&#47;&#47;mubu.com&#47;colla&#47;1JtPpwr-rLM","like_count":1},{"had_liked":false,"id":113338,"user_name":"edisonhuang","can_delete":false,"product_type":"c1","uid":1530167,"ip_address":"","ucode":"BB2F639A779F96","user_header":"https://static001.geekbang.org/account/avatar/00/17/59/37/bd2de0a4.jpg","comment_is_top":false,"comment_ctime":1562978374,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5857945670","product_id":100002201,"comment_content":"弹力设计分为三大板块，服务冗余，服务容错和服务解耦，冗余避免了单点故障的发生，容错涉及到重试机制，服务降级等，服务解耦则把原来单点的应用按不同纬度拆分开来，保证其中某些模块坏掉不会影响全局。分布式系统的服务被拆开，还需要自动化运维和调度做保障","like_count":1},{"had_liked":false,"id":65699,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1549594910,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5844562206","product_id":100002201,"comment_content":"实际工作中有所接触，不过没有系统性的学习，感谢分享对于分布式系统的弹力设计认识的更深一点，感觉需要反复的思考和温习，才能理解的更透彻","like_count":1},{"had_liked":false,"id":10738,"user_name":"道","can_delete":false,"product_type":"c1","uid":1100869,"ip_address":"","ucode":"B17CA7372C21C1","user_header":"https://static001.geekbang.org/account/avatar/00/10/cc/45/73a0f7f8.jpg","comment_is_top":false,"comment_ctime":1527681922,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5822649218","product_id":100002201,"comment_content":"不太明白，作为消息驱动微服务应用的框架spring stream和workflow有啥子关系？","like_count":1,"discussions":[{"author":{"id":1000015,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/42/4f/ff1ac464.jpg","nickname":"又双叒叕是一年啊","note":"","ucode":"E067320E537DEE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":237,"discussion_content":"我也对 分布式 任务编排 处理 有些 兴趣和疑问不知道是不是文中所说的 工作流引擎","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561346087,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":5390,"user_name":"奋斗","can_delete":false,"product_type":"c1","uid":1064360,"ip_address":"","ucode":"DEE5F3F47D02BD","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er1wXlqor25J3OGzHoNWVur4eRoCeszO6epImZyjQ1I5ia5MpRVthfI2ZDUmib9Zy3QJpk5OOFQATLw/132","comment_is_top":false,"comment_ctime":1523273132,"is_pvip":false,"replies":[{"id":"1530","content":"目前没有书。敬请关注后序的《程序员练级攻略》","user_name":"作者回复","comment_id":5390,"uid":"1001269","ip_address":"","utype":1,"ctime":1523495754,"user_name_real":"左耳朵"}],"discussion_count":1,"race_medal":0,"score":"5818240428","product_id":100002201,"comment_content":"你好，弹力设计部分可以给一份推荐书单吗？水平有点低，有些内容理解的不是很透彻，具体怎么做这方面不太清楚！","like_count":1,"discussions":[{"author":{"id":1001269,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/35/89726f5f.jpg","nickname":"左耳朵","note":"","ucode":"8A4741D677702E","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":416717,"discussion_content":"目前没有书。敬请关注后序的《程序员练级攻略》","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1523495754,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":4557,"user_name":"小烟","can_delete":false,"product_type":"c1","uid":1056320,"ip_address":"","ucode":"AB7B36A11EF351","user_header":"https://static001.geekbang.org/account/avatar/00/10/1e/40/e2a2ef51.jpg","comment_is_top":false,"comment_ctime":1522215761,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5817183057","product_id":100002201,"comment_content":"后期可以考虑将专栏整理出书了，期待。","like_count":1},{"had_liked":false,"id":4531,"user_name":"Freezer","can_delete":false,"product_type":"c1","uid":1013840,"ip_address":"","ucode":"5592D85A343C3C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/78/50/1c9a95f8.jpg","comment_is_top":false,"comment_ctime":1522192209,"is_pvip":false,"replies":[{"id":"1150","content":"https:&#47;&#47;coolshell.cn&#47;articles&#47;4990.html","user_name":"作者回复","comment_id":4531,"uid":"1001269","ip_address":"","utype":1,"ctime":1522237623,"user_name_real":"左耳朵"}],"discussion_count":1,"race_medal":0,"score":"5817159505","product_id":100002201,"comment_content":"程序员练级攻略？是耗子叔写的书吗？怎么没搜到","like_count":1,"discussions":[{"author":{"id":1001269,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/35/89726f5f.jpg","nickname":"左耳朵","note":"","ucode":"8A4741D677702E","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":416409,"discussion_content":"https://coolshell.cn/articles/4990.html","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1522237623,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":4428,"user_name":"简单","can_delete":false,"product_type":"c1","uid":1044159,"ip_address":"","ucode":"3499A7C80BF7B3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/bf/e1f3010f.jpg","comment_is_top":false,"comment_ctime":1522107064,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5817074360","product_id":100002201,"comment_content":"想咨询一下，关于运维所涉及到的知识。我刚工作一年，从事java开发工作。跳槽后，把我安排在运维工作岗位。不了解运维的前景，以及学习路线。（从百度搜过，各有各的说法）","like_count":1,"discussions":[{"author":{"id":1000015,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/42/4f/ff1ac464.jpg","nickname":"又双叒叕是一年啊","note":"","ucode":"E067320E537DEE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":236,"discussion_content":"学啥都有益处，都是门学问，可以先好好梳理下技术栈，决定感兴趣从事方向会比较有优势","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1561346040,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":330016,"user_name":"inrtyx","can_delete":false,"product_type":"c1","uid":1246178,"ip_address":"","ucode":"81CD18FF34ABAB","user_header":"https://static001.geekbang.org/account/avatar/00/13/03/e2/5768d26e.jpg","comment_is_top":false,"comment_ctime":1641732857,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1641732857","product_id":100002201,"comment_content":"感觉有k8s可以不用spring cloud.用k8s➕spring boot","like_count":0},{"had_liked":false,"id":260575,"user_name":"出卖灵魂的教练Kerry","can_delete":false,"product_type":"c1","uid":1807943,"ip_address":"","ucode":"8C64517DA556FE","user_header":"https://static001.geekbang.org/account/avatar/00/1b/96/47/93838ff7.jpg","comment_is_top":false,"comment_ctime":1605063981,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1605063981","product_id":100002201,"comment_content":"这部分真是超值，有了设计方向。","like_count":0},{"had_liked":false,"id":211524,"user_name":"酷酷哒","can_delete":false,"product_type":"c1","uid":1335409,"ip_address":"","ucode":"463ED1CA951AC3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ0siaXviaRMJxYNCibIeicadw3F9L28oTbJIUXSmKtNWvEHNviaM7dr60PZSq1cHj6AzruuP8wvyHnYSA/132","comment_is_top":false,"comment_ctime":1587977911,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587977911","product_id":100002201,"comment_content":"看完这一系列对于微服务中的一些常见问题有大概了解了","like_count":0},{"had_liked":false,"id":168836,"user_name":"Ryoma","can_delete":false,"product_type":"c1","uid":1130590,"ip_address":"","ucode":"7F692369239692","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/5e/b8fada94.jpg","comment_is_top":false,"comment_ctime":1578196314,"is_pvip":true,"discussion_count":0,"race_medal":2,"score":"1578196314","product_id":100002201,"comment_content":"这里的 singleton application 应该如何理解呢？","like_count":0},{"had_liked":false,"id":122570,"user_name":"程序员小跃","can_delete":false,"product_type":"c1","uid":1015483,"ip_address":"","ucode":"25BB96E0791A60","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7e/bb/947c329a.jpg","comment_is_top":false,"comment_ctime":1565426330,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1565426330","product_id":100002201,"comment_content":"因为之前有过微服务的实践，这部分开起来总算还是能看懂。弹力设计篇看完了，期待后面的其他部分。现在是准备拥抱Spring Cloud了，就是这个Kubernetes还没开始用，还得了解下，实践起来","like_count":0},{"had_liked":false,"id":94553,"user_name":"BitbIt","can_delete":false,"product_type":"c1","uid":1412121,"ip_address":"","ucode":"418AB6E264E396","user_header":"https://static001.geekbang.org/account/avatar/00/15/8c/19/870c8992.jpg","comment_is_top":false,"comment_ctime":1557839503,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1557839503","product_id":100002201,"comment_content":"MySQL是不是也可以叫write back，随机写变顺序写（redolog），然后写cache，后台刷脏页","like_count":0}]}