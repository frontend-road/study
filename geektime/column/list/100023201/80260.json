{"id":80260,"title":"浏览器：一个浏览器是如何工作的？（阶段二）","content":"<p>你好，我是winter，今天我们继续来看浏览器的相关内容。</p><p>我在上一篇文章中，简要介绍了浏览器的工作大致可以分为6个阶段，我们昨天讲完了第一个阶段，也就是通讯的部分：浏览器使用HTTP协议或者HTTPS协议，向服务端请求页面的过程。</p><p>今天我们主要来看两个过程：如何解析请求回来的HTML代码，DOM树又是如何构建的。<br>\n<img src=\"https://static001.geekbang.org/resource/image/34/5a/34231687752c11173b7776ba5f4a0e5a.png?wh=732*279\" alt=\"\"></p><h2>解析代码</h2><p>我们在前面讲到了HTTP的构成，但是我们有一部分没有详细讲解，那就是Response的body部分，这正是因为HTTP的Response的body，就要交给我们今天学习的内容去处理了。</p><p>HTML的结构不算太复杂，我们日常开发需要的90%的“词”（指编译原理的术语token，表示最小的有意义的单元），种类大约只有标签开始、属性、标签结束、注释、CDATA节点几种。</p><p>实际上有点麻烦的是，由于HTML跟SGML的千丝万缕的联系，我们需要做不少容错处理。“&lt;?”和“&lt;%”什么的也是必须要支持好的，报了错也不能吭声。</p><h3>1.词（token）是如何被拆分的</h3><p>首先我们来看看一个非常标准的标签，会被如何拆分：</p><pre><code>&lt;p class=&quot;a&quot;&gt;text text text&lt;/p&gt;\n</code></pre><p>如果我们从最小有意义单元的定义来拆分，第一个词（token）是什么呢？显然，作为一个词（token），整个p标签肯定是过大了（它甚至可以嵌套）。</p><!-- [[[read_end]]] --><p>那么，只用p标签的开头是不是合适吗？我们考虑到起始标签也是会包含属性的，最小的意义单元其实是“&lt;p” ，所以“ &lt;p” 就是我们的第一个词（token）。</p><p>我们继续拆分，可以把这段代码依次拆成词（token）：</p><ul>\n<li>&lt;p“标签开始”的开始；</li>\n<li>class=“a” 属性；</li>\n<li>&gt;  “标签开始”的结束；</li>\n<li>text text text 文本；</li>\n<li>&lt;/p&gt;标签结束。</li>\n</ul><p>这是一段最简单的例子，类似的还有什么呢？现在我们可以来来看看这些词（token）长成啥样子：</p><p><img src=\"https://static001.geekbang.org/resource/image/f9/84/f98444aa3ea7471d2414dd7d0f5e3a84.png?wh=624*252\" alt=\"\"></p><p>根据这样的分析，现在我们讲讲浏览器是如何用代码实现，我们设想，代码开始从HTTP协议收到的字符流读取字符。</p><p>在接受第一个字符之前，我们完全无法判断这是哪一个词（token），不过，随着我们接受的字符越来越多，拼出其他的内容可能性就越来越少。</p><p>比如，假设我们接受了一个字符“ &lt; ” 我们一下子就知道这不是一个文本节点啦。</p><p>之后我们再读一个字符，比如就是 x，那么我们一下子就知道这不是注释和CDATA了，接下来我们就一直读，直到遇到“&gt;”或者空格，这样就得到了一个完整的词（token）了。</p><p>实际上，我们每读入一个字符，其实都要做一次决策，而且这些决定是跟“当前状态”有关的。在这样的条件下，浏览器工程师要想实现把字符流解析成词（token），最常见的方案就是使用状态机。</p><h3>2.状态机</h3><p>绝大多数语言的词法部分都是用状态机实现的。那么我们来把部分词（token）的解析画成一个状态机看看：</p><p><img src=\"https://static001.geekbang.org/resource/image/8b/b0/8b43d598bc1f83a8a1e7e8f922013ab0.png?wh=768*739\" alt=\"\"></p><p>当然了，我们这里的分析比较粗略，真正完整的HTML词法状态机，比我们描述的要复杂的多。更详细的内容，你可以参考<a href=\"https://html.spec.whatwg.org/multipage/parsing.html#tokenization\">HTML官方文档</a>，HTML官方文档规定了80个状态（顺便一说，HTML是我见过唯一一个标准中规定了状态机实现的语言，对大部分语言来说，状态机是一种实现而非定义）。</p><p>这里我们为了理解原理，用这个简单的状态机就足够说明问题了。</p><p>状态机的初始状态，我们仅仅区分 “&lt; ”和 “非&lt;”：</p><ul>\n<li>如果获得的是一个非&lt;字符，那么可以认为进入了一个文本节点；</li>\n<li>如果获得的是一个&lt;字符，那么进入一个标签状态。</li>\n</ul><p>不过当我们在标签状态时，则会面临着一些可能性。</p><ul>\n<li>\n<p>比如下一个字符是“ ! ” ，那么很可能是进入了注释节点或者CDATA节点。</p>\n</li>\n<li>\n<p>如果下一个字符是 “/ ”，那么可以确定进入了一个结束标签。</p>\n</li>\n<li>\n<p>如果下一个字符是字母，那么可以确定进入了一个开始标签。</p>\n</li>\n<li>\n<p>如果我们要完整处理各种HTML标准中定义的东西，那么还要考虑“ ? ”“% ”等内容。</p>\n</li>\n</ul><p>我们可以看到，用状态机做词法分析，其实正是把每个词的“特征字符”逐个拆开成独立状态，然后再把所有词的特征字符链合并起来，形成一个联通图结构。</p><p>由于状态机设计属于编译原理的基本知识，这里我们仅作一个简要的介绍。</p><p>接下来就是代码实现的事情了，在C/C++和JavaScript中，实现状态机的方式大同小异：我们把每个函数当做一个状态，参数是接受的字符，返回值是下一个状态函数。（这里我希望再次强调下，状态机真的是一种没有办法封装的东西，所以我们永远不要试图封装状态机。）</p><p>为了方便理解和试验，我们这里用JavaScript来讲解，图上的data状态大概就像下面这样的：</p><pre><code>var data = function(c){\n    if(c==&quot;&amp;&quot;) {\n        return characterReferenceInData;\n    }\n    if(c==&quot;&lt;&quot;) {\n        return tagOpen;\n    }\n    else if(c==&quot;\\0&quot;) {\n        error();\n        emitToken(c);\n        return data;\n    }\n    else if(c==EOF) {\n        emitToken(EOF);\n        return data;\n    }\n    else {\n        emitToken(c);\n        return data;\n    }\n};\nvar tagOpenState = function tagOpenState(c){\n    if(c==&quot;/&quot;) {\n        return endTagOpenState;\n    }\n    if(c.match(/[A-Z]/)) {\n        token = new StartTagToken();\n        token.name = c.toLowerCase();\n        return tagNameState;\n    }\n    if(c.match(/[a-z]/)) {\n        token = new StartTagToken();\n        token.name = c;\n        return tagNameState;\n    }\n    if(c==&quot;?&quot;) {\n        return bogusCommentState;\n    }\n    else {\n        error();\n        return dataState;\n    }\n};\n//……\n</code></pre><p>这段代码给出了状态机的两个状态示例：data即为初始状态，tagOpenState是接受了一个“ &lt; ” 字符，来判断标签类型的状态。</p><p>这里的状态机，每一个状态是一个函数，通过“if else”来区分下一个字符做状态迁移。这里所谓的状态迁移，就是当前状态函数返回下一个状态函数。</p><p>这样，我们的状态迁移代码非常的简单：</p><pre><code>var state = data;\nvar char\nwhile(char = getInput())\n    state = state(char);\n</code></pre><p>这段代码的关键一句是“ state = state(char) ”，不论我们用何种方式来读取字符串流，我们都可以通过state来处理输入的字符流，这里用循环是一个示例，真实场景中，可能是来自TCP的输出流。</p><p>状态函数通过代码中的 emitToken 函数来输出解析好的token（词），我们只需要覆盖 emitToken，即可指定对解析结果的处理方式。</p><p>词法分析器接受字符的方式很简单，就像下面这样：</p><pre><code>function HTMLLexicalParser(){\n\n    //状态函数们……\n    function data() {\n        // ……\n    }\n\n    function tagOpen() {\n        // ……\n    }\n    // ……\n    var state = data;\n    this.receiveInput = function(char) {\n        state = state(char);\n    }\n}\n</code></pre><p>至此，我们就把字符流拆成了词（token）了。</p><h2>构建DOM树</h2><p>接下来我们要把这些简单的词变成DOM树，这个过程我们是使用栈来实现的，任何语言几乎都有栈，为了给你跑着玩，我们还是用JavaScript来实现吧，毕竟JavaScript中的栈只要用数组就好了。</p><pre><code>function HTMLSyntaticalParser(){\n    var stack = [new HTMLDocument];\n    this.receiveInput = function(token) {\n        //……\n    }\n    this.getOutput = function(){\n        return stack[0];\n    }\n}\n\n</code></pre><p>我们这样来设计HTML的语法分析器，receiveInput负责接收词法部分产生的词（token），通常可以由emitToken来调用。</p><p>在接收的同时，即开始构建DOM树，所以我们的主要构建DOM树的算法，就写在receiveInput当中。当接收完所有输入，栈顶就是最后的根节点，我们DOM树的产出，就是这个stack的第一项。</p><p>为了构建DOM树，我们需要一个Node类，接下来我们所有的节点都会是这个Node类的实例。</p><p>在完全符合标准的浏览器中，不一样的HTML节点对应了不同的Node的子类，我们为了简化，就不完整实现这个继承体系了。我们仅仅把Node分为Element和Text（如果是基于类的OOP的话，我们还需要抽象工厂来创建对象），</p><pre><code>function Element(){\n    this.childNodes = [];\n}\nfunction Text(value){\n    this.value = value || &quot;&quot;;\n}\n</code></pre><p>前面我们的词（token）中，以下两个是需要成对匹配的：</p><ul>\n<li>tag start</li>\n<li>tag end</li>\n</ul><p>根据一些编译原理中常见的技巧，我们使用的栈正是用于匹配开始和结束标签的方案。</p><p>对于Text节点，我们则需要把相邻的Text节点合并起来，我们的做法是当词（token）入栈时，检查栈顶是否是Text节点，如果是的话就合并Text节点。</p><p>同样我们来看看直观的解析过程：</p><pre><code>&lt;html maaa=a &gt;\n    &lt;head&gt;\n        &lt;title&gt;cool&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;img src=&quot;a&quot; /&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p>通过这个栈，我们可以构建DOM树：</p><ul>\n<li>栈顶元素就是当前节点；</li>\n<li>遇到属性，就添加到当前节点；</li>\n<li>遇到文本节点，如果当前节点是文本节点，则跟文本节点合并，否则入栈成为当前节点的子节点；</li>\n<li>遇到注释节点，作为当前节点的子节点；</li>\n<li>遇到tag start就入栈一个节点，当前节点就是这个节点的父节点；</li>\n<li>遇到tag end就出栈一个节点（还可以检查是否匹配）。</li>\n</ul><p>我在文章里面放了一个视频，你可以点击查看用栈构造DOM树的全过程。</p><p><video poster=\"https://static001.geekbang.org/resource/image/7c/12/7cf7a46496b2c19ae78d263bcd75ef12.png\" preload=\"none\" controls=\"\"><source src=\"https://media001.geekbang.org/customerTrans/fe4a99b62946f2c31c2095c167b26f9c/53121b57-16cf0ec72ae-0000-0000-01d-dbacd.mp4\" type=\"video/mp4\"><source src=\"https://media001.geekbang.org/035b80dfcd0240fe8b7a602696c89317/107c22eb4ef14186bcd223b40ca3f54c-9469c087299d3945df8190acc979f573-sd.m3u8\" type=\"application/x-mpegURL\"><source src=\"https://media001.geekbang.org/035b80dfcd0240fe8b7a602696c89317/107c22eb4ef14186bcd223b40ca3f54c-4c6364b3a4d8ed2e8ef6071a8fc26a06-hd.m3u8\" type=\"application/x-mpegURL\"></video></p><p>当我们的源代码完全遵循XHTML（这是一种比较严谨的HTML语法）时，这非常简单问题，然而HTML具有很强的容错能力，奥妙在于当tag end跟栈顶的start tag不匹配的时候如何处理。</p><p>于是，这又有一个极其复杂的规则，幸好W3C又一次很贴心地把全部规则都整理地很好，我们只要翻译成对应的代码就好了，以下这个网站呈现了全部规则。你可以点击查看。</p><ul>\n<li><a href=\"http://www.w3.org/html/wg/drafts/html/master/syntax.html#tree-construction\">http://www.w3.org/html/wg/drafts/html/master/syntax.html#tree-construction</a></li>\n</ul><h2>结语</h2><p>好了，总结一下。在今天的文章中，我带你继续探索了浏览器的工作原理，我们主要研究了解析代码和构建DOM树两个步骤。在解析代码的环节里，我们一起详细地分析了一个词（token）被拆分的过程，并且给出了实现它所需要的一个简单的状态机。</p><p>在构建DOM树的环节中，基本思路是使用栈来构建DOM树为了方便你动手实践，我用JavaScript实现了这一过程。</p><p>今天给你留的题目是：在语法和词法的代码，我已经给出了大体的结构，请你试着把内容补充完整吧。</p>","comments":[{"had_liked":true,"id":68314,"user_name":"阿成","can_delete":false,"product_type":"c1","uid":1390032,"ip_address":"","ucode":"CEC3CD65FB9333","user_header":"https://static001.geekbang.org/account/avatar/00/15/35/d0/f2ac6d91.jpg","comment_is_top":false,"comment_ctime":1550481951,"is_pvip":false,"replies":[{"id":"24346","content":"嗯 这个超棒 推荐大家一起看看","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1550553081,"ip_address":"","comment_id":68314,"utype":1}],"discussion_count":1,"race_medal":0,"score":"418162309663","product_id":100023201,"comment_content":"参考了 github 上的一个 gist，才算写出来个能跑起来的...<br>https:&#47;&#47;github.com&#47;aimergenge&#47;toy-html-parser","like_count":98,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439625,"discussion_content":"嗯 这个超棒 推荐大家一起看看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550553081,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":66353,"user_name":"曼塔特","can_delete":false,"product_type":"c1","uid":1250970,"ip_address":"","ucode":"8122724CA16FC5","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/9a/573d46b3.jpg","comment_is_top":false,"comment_ctime":1549932320,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"224888231712","product_id":100023201,"comment_content":"感觉在看编译原理","like_count":53},{"had_liked":false,"id":66589,"user_name":"阿成","can_delete":false,"product_type":"c1","uid":1390032,"ip_address":"","ucode":"CEC3CD65FB9333","user_header":"https://static001.geekbang.org/account/avatar/00/15/35/d0/f2ac6d91.jpg","comment_is_top":false,"comment_ctime":1549963107,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"57384537955","product_id":100023201,"comment_content":"老师，为什么状态机没办法封装，能详细解释一下吗","like_count":13},{"had_liked":false,"id":66781,"user_name":"Aaaaaaaaaaayou","can_delete":false,"product_type":"c1","uid":1073601,"ip_address":"","ucode":"67BA315B87587D","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/c1/93031a2a.jpg","comment_is_top":false,"comment_ctime":1550019891,"is_pvip":false,"replies":[{"id":"23830","content":"对，我改一下","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1550143123,"ip_address":"","comment_id":66781,"utype":1}],"discussion_count":1,"race_medal":0,"score":"53089627443","product_id":100023201,"comment_content":"return tagOpen  是不是应该改为 return tagOpenState","like_count":12,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438908,"discussion_content":"对，我改一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550143123,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68649,"user_name":"是零壹呀","can_delete":false,"product_type":"c1","uid":1423569,"ip_address":"","ucode":"582E61C149BE5E","user_header":"https://static001.geekbang.org/account/avatar/00/15/b8/d1/5a216db5.jpg","comment_is_top":false,"comment_ctime":1550567110,"is_pvip":false,"replies":[{"id":"25780","content":"一般正则都是状态机实现的，讲正则对理解它底层的状态机毫无意义啊。<br><br>当然了，词法分析也可以用正则来实现，我这里没有这么做而已，我写过一个js的词法分析是用正则做的，你可以参考:<br><br>https:&#47;&#47;github.com&#47;wintercn&#47;JSinJS&#47;blob&#47;master&#47;source&#47;LexicalParser.js","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1551422366,"ip_address":"","comment_id":68649,"utype":1}],"discussion_count":2,"race_medal":0,"score":"44500240070","product_id":100023201,"comment_content":"这一节讲的应该是如何实现一个parser吧。<br>关于状态机这一块，我觉得是不是可以先讲一节正则的知识点呢。<br>理解了正则，那么大家对状态机的概念就有了更加直观的理解了。","like_count":10,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439777,"discussion_content":"一般正则都是状态机实现的，讲正则对理解它底层的状态机毫无意义啊。\n\n当然了，词法分析也可以用正则来实现，我这里没有这么做而已，我写过一个js的词法分析是用正则做的，你可以参考:\n\nhttps://github.com/wintercn/JSinJS/blob/master/source/LexicalParser.js","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551422366,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1640865,"avatar":"https://static001.geekbang.org/account/avatar/00/19/09/a1/2cc5f83a.jpg","nickname":"禾+米","note":"","ucode":"2B718466BD0841","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293575,"discussion_content":"赞 终于获取到了老师的github，功夫不负有心人 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595585097,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":67945,"user_name":"花儿与少年","can_delete":false,"product_type":"c1","uid":1046304,"ip_address":"","ucode":"E2D685737E4F1B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/20/e2dfa9c2.jpg","comment_is_top":false,"comment_ctime":1550331062,"is_pvip":false,"replies":[{"id":"24334","content":"怎么没讲，还有构造的算法和视频呢，不认真到这个地步了么？","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1550552338,"ip_address":"","comment_id":67945,"utype":1}],"discussion_count":1,"race_medal":0,"score":"44500004022","product_id":100023201,"comment_content":"只简单讲了浏览器怎么解析html,并没有讲具体怎么构建dom树，请寒老师不要偷工减料","like_count":9,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439434,"discussion_content":"怎么没讲，还有构造的算法和视频呢，不认真到这个地步了么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550552338,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69242,"user_name":"umaru","can_delete":false,"product_type":"c1","uid":1383609,"ip_address":"","ucode":"08BA373CB32698","user_header":"https://static001.geekbang.org/account/avatar/00/15/1c/b9/392b94ee.jpg","comment_is_top":false,"comment_ctime":1550695992,"is_pvip":false,"replies":[{"id":"25806","content":"XML的相关知识，可以看一下，不怎么重要。","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1551423794,"ip_address":"","comment_id":69242,"utype":1}],"discussion_count":2,"race_medal":0,"score":"40205401656","product_id":100023201,"comment_content":" 老师cdata是啥？( ・◇・)","like_count":9,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440022,"discussion_content":"XML的相关知识，可以看一下，不怎么重要。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551423794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1266698,"avatar":"https://static001.geekbang.org/account/avatar/00/13/54/0a/9a002ad5.jpg","nickname":"Adam Lau","note":"","ucode":"7E542D6E789500","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342892,"discussion_content":"就是数据，可能带特殊字符，就套了个cdata","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610868586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69045,"user_name":"RMX","can_delete":false,"product_type":"c1","uid":1391361,"ip_address":"","ucode":"6F5BBB05E1DA75","user_header":"https://static001.geekbang.org/account/avatar/00/15/3b/01/34aa76cc.jpg","comment_is_top":false,"comment_ctime":1550651049,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"35910389417","product_id":100023201,"comment_content":"https:&#47;&#47;blog.csdn.net&#47;userkang&#47;article&#47;details&#47;80851153<br>之前在看 Webkit 技术揭秘 这本书，记的笔记。结合老师的文章，了解的更深了。谢谢！","like_count":8},{"had_liked":false,"id":68732,"user_name":"王飞","can_delete":false,"product_type":"c1","uid":1379655,"ip_address":"","ucode":"AC0DC876031255","user_header":"https://static001.geekbang.org/account/avatar/00/15/0d/47/2fdcf2d6.jpg","comment_is_top":false,"comment_ctime":1550588116,"is_pvip":false,"replies":[{"id":"25785","content":"virtual-dom不是浏览器的东西，算是一种应用技巧吧，我觉得它寿命不会特别长。","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1551422877,"ip_address":"","comment_id":68732,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18730457300","product_id":100023201,"comment_content":"老师，感觉在可以讲下virtual-dom","like_count":4,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439820,"discussion_content":"virtual-dom不是浏览器的东西，算是一种应用技巧吧，我觉得它寿命不会特别长。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1551422877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1266698,"avatar":"https://static001.geekbang.org/account/avatar/00/13/54/0a/9a002ad5.jpg","nickname":"Adam Lau","note":"","ucode":"7E542D6E789500","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342893,"discussion_content":"虚拟dom寿命不会长，此话怎讲，有更先进的技术替代吗？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1610868758,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":67381,"user_name":"Marphy Demon","can_delete":false,"product_type":"c1","uid":1272924,"ip_address":"","ucode":"9A063D1DAC93C6","user_header":"https://static001.geekbang.org/account/avatar/00/13/6c/5c/16e5b8f7.jpg","comment_is_top":false,"comment_ctime":1550137235,"is_pvip":false,"replies":[{"id":"23843","content":"这一篇主要涉及的是编译原理，不过我讲的比书简单多了，有个感性认识就可以。","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1550148495,"ip_address":"","comment_id":67381,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18730006419","product_id":100023201,"comment_content":"老师可否提供一些课外阅读的材料呢？单纯通过这一篇文章，没有接触相关知识的前提下，get到的东西比较少。","like_count":4,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439169,"discussion_content":"这一篇主要涉及的是编译原理，不过我讲的比书简单多了，有个感性认识就可以。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550148495,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":66569,"user_name":"leslee","can_delete":false,"product_type":"c1","uid":1384326,"ip_address":"","ucode":"DB1CBF9F8D16BF","user_header":"https://static001.geekbang.org/account/avatar/00/15/1f/86/3a7eeac4.jpg","comment_is_top":false,"comment_ctime":1549960309,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"18729829493","product_id":100023201,"comment_content":"状态机的图没看懂...","like_count":4,"discussions":[{"author":{"id":2754230,"avatar":"","nickname":"Geek_553abe","note":"","ucode":"9544B406B40DD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583984,"discussion_content":"+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660547215,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1115232,"avatar":"https://static001.geekbang.org/account/avatar/00/11/04/60/64d166b6.jpg","nickname":"Fan","note":"","ucode":"3BF28670FD9407","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548421,"discussion_content":"没看懂。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643188330,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68928,"user_name":"风吹一个大耳东","can_delete":false,"product_type":"c1","uid":1393383,"ip_address":"","ucode":"53918AD171F5C5","user_header":"https://static001.geekbang.org/account/avatar/00/15/42/e7/e5afadf7.jpg","comment_is_top":false,"comment_ctime":1550628990,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14435530878","product_id":100023201,"comment_content":"看到状态机就已经获益匪浅了，老师讲的都是我们平时不在意却又是必须懂的东西~","like_count":3},{"had_liked":false,"id":66765,"user_name":"Frank","can_delete":false,"product_type":"c1","uid":1111985,"ip_address":"","ucode":"9DADD72C193296","user_header":"https://static001.geekbang.org/account/avatar/00/10/f7/b1/982ea185.jpg","comment_is_top":false,"comment_ctime":1550018184,"is_pvip":true,"replies":[{"id":"23826","content":"工作原理上，当然没区别了，但是如果你指兼容性，那三天三夜也说不完……","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1550142855,"ip_address":"","comment_id":66765,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14434920072","product_id":100023201,"comment_content":"老师 能回答下，或者给个资料补充一下。手机浏览器与电脑浏览器的区别吗？","like_count":3,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438898,"discussion_content":"工作原理上，当然没区别了，但是如果你指兼容性，那三天三夜也说不完……","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550142855,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":66584,"user_name":"Nirvana","can_delete":false,"product_type":"c1","uid":1393563,"ip_address":"","ucode":"FF22C1391C7CF5","user_header":"https://static001.geekbang.org/account/avatar/00/15/43/9b/ce86894a.jpg","comment_is_top":false,"comment_ctime":1549961982,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14434863870","product_id":100023201,"comment_content":"老师讲的真好，这部分内容虽完全没接触过，但是相信多听几遍，加上自己的查阅应该也能弄清楚。老师如果开新班请尽快推广，这个课听的太值了。","like_count":3},{"had_liked":false,"id":66513,"user_name":"米斯特菠萝","can_delete":false,"product_type":"c1","uid":1259824,"ip_address":"","ucode":"8AFB7F59F9014A","user_header":"https://static001.geekbang.org/account/avatar/00/13/39/30/f7df6ba7.jpg","comment_is_top":false,"comment_ctime":1549951587,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14434853475","product_id":100023201,"comment_content":"这是一篇我不是太懂，却不会自责的文章，毕竟已经涉及浏览器解析html的编译原理了","like_count":4},{"had_liked":false,"id":96930,"user_name":"不二","can_delete":false,"product_type":"c1","uid":1076451,"ip_address":"","ucode":"CDB603B9F87354","user_header":"https://static001.geekbang.org/account/avatar/00/10/6c/e3/45f550b5.jpg","comment_is_top":false,"comment_ctime":1558537935,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10148472527","product_id":100023201,"comment_content":"《你不知道的JavaScript》书里也有讲这个阶段游览的干了什么，有兴趣的可以去看下","like_count":2},{"had_liked":false,"id":94292,"user_name":"xxx","can_delete":false,"product_type":"c1","uid":1356978,"ip_address":"","ucode":"E78B1F15BC10F7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIcLjatV3GHdibZXCTIgL1X2A7jpByIeLH3Zyia8KXdT4JRcicmVSgq5ekRHCFCFenMqicsAwaWYibHkTw/132","comment_is_top":false,"comment_ctime":1557760691,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5852727987","product_id":100023201,"comment_content":"也看过浏览器构建dom树的一些文章，但那些都太生硬难懂了，什么词法解析，语法解析，根本弄不灵清在干啥，听老师的讲解有点知道在讲啥了。","like_count":1},{"had_liked":false,"id":83654,"user_name":"SincereCSL","can_delete":false,"product_type":"c1","uid":1038687,"ip_address":"","ucode":"7B036FDD5CCC37","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d9/5f/3077dea9.jpg","comment_is_top":false,"comment_ctime":1554690900,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5849658196","product_id":100023201,"comment_content":"赞","like_count":1},{"had_liked":false,"id":80001,"user_name":"Liyu","can_delete":false,"product_type":"c1","uid":1243823,"ip_address":"","ucode":"00A2E47AA92E53","user_header":"https://static001.geekbang.org/account/avatar/00/12/fa/af/37828a42.jpg","comment_is_top":false,"comment_ctime":1553591024,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5848558320","product_id":100023201,"comment_content":"道理我都懂，就是实现不了 ^^!","like_count":1},{"had_liked":false,"id":77035,"user_name":"周飞","can_delete":false,"product_type":"c1","uid":1073374,"ip_address":"","ucode":"F85FA236EB0C0D","user_header":"https://static001.geekbang.org/account/avatar/00/10/60/de/5c67895a.jpg","comment_is_top":false,"comment_ctime":1552812123,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5847779419","product_id":100023201,"comment_content":" 做了一个简单的demo  https:&#47;&#47;github.com&#47;kobefaith&#47;simpleHtmlParse.git","like_count":1},{"had_liked":false,"id":72624,"user_name":"[已重置]","can_delete":false,"product_type":"c1","uid":1380263,"ip_address":"","ucode":"7CE91D63AD9481","user_header":"https://static001.geekbang.org/account/avatar/00/15/0f/a7/783e4f88.jpg","comment_is_top":false,"comment_ctime":1551680686,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5846647982","product_id":100023201,"comment_content":"https:&#47;&#47;github.com&#47;haven2world&#47;HavenStudyRepository&#47;tree&#47;master&#47;geekbang-winter&#47;htmlParser<br><br>_(:з」∠)_  啰里啰嗦写了一大堆，这大概是我用js写过的最面向对象的东西了","like_count":1},{"had_liked":false,"id":69999,"user_name":"让时间说真话","can_delete":false,"product_type":"c1","uid":1387656,"ip_address":"","ucode":"5C86450864189F","user_header":"https://static001.geekbang.org/account/avatar/00/15/2c/88/2a7fe1a9.jpg","comment_is_top":false,"comment_ctime":1550931076,"is_pvip":false,"replies":[{"id":"25842","content":"语法不是词法的实现。<br><br>词法分析和语法分析是两个过程。","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1551425542,"ip_address":"","comment_id":69999,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5845898372","product_id":100023201,"comment_content":"词法其实是词经过状态机解析的规则。语法是词法的实现。比如&lt;p&gt;hello world&lt;&#47;p&gt;<br>浏览器根据状态机中词法对词的解析的规则把html解析成词，然后用语法构建dom树。","like_count":1,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440394,"discussion_content":"语法不是词法的实现。\n\n词法分析和语法分析是两个过程。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551425542,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69015,"user_name":"云韵","can_delete":false,"product_type":"c1","uid":1025622,"ip_address":"","ucode":"3DE26DBAAAEDE6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a6/56/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1550646319,"is_pvip":true,"replies":[{"id":"25796","content":"任何编译原理书的状态机部分。推荐龙书，就是封面有条大龙的《编译原理》","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1551423468,"ip_address":"","comment_id":69015,"utype":1}],"discussion_count":1,"race_medal":1,"score":"5845613615","product_id":100023201,"comment_content":"状态机的那幅图有点看不懂，可以详细说一下吗，或者有个推荐的资料","like_count":1,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439915,"discussion_content":"任何编译原理书的状态机部分。推荐龙书，就是封面有条大龙的《编译原理》","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551423468,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":66703,"user_name":"coma","can_delete":false,"product_type":"c1","uid":1385887,"ip_address":"","ucode":"06111226BCC6BE","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Fcx276V5ZyrYtGuWiaWQugKMX4aicY8cibicQISyiaAEKZKVmdz8apIhKzCfIZolyetSFXbl2gHSK9qZT5moJkk7DYg/132","comment_is_top":false,"comment_ctime":1549983378,"is_pvip":false,"replies":[{"id":"23824","content":"这块是设计模式的一个小应用了，因为创建对象的过程无法用接口抽象，所以要用抽象工厂，当然JavaScript里面不是特别有必要用抽象工厂，一般浏览器都是用C++编写的，就一定需要抽象工厂。","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1550142687,"ip_address":"","comment_id":66703,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5844950674","product_id":100023201,"comment_content":"请问为什么如果使用基于类的面向对象方式，就要使用抽象工厂来创建对象？","like_count":1,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438869,"discussion_content":"这块是设计模式的一个小应用了，因为创建对象的过程无法用接口抽象，所以要用抽象工厂，当然JavaScript里面不是特别有必要用抽象工厂，一般浏览器都是用C++编写的，就一定需要抽象工厂。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550142687,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":66648,"user_name":"soulful","can_delete":false,"product_type":"c1","uid":1240490,"ip_address":"","ucode":"93105631E8106A","user_header":"https://static001.geekbang.org/account/avatar/00/12/ed/aa/67fbccda.jpg","comment_is_top":false,"comment_ctime":1549973707,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5844941003","product_id":100023201,"comment_content":"看来大学重修一遍编译原理还是值得的","like_count":2},{"had_liked":false,"id":215177,"user_name":"nannanwj","can_delete":false,"product_type":"c1","uid":1395476,"ip_address":"","ucode":"E61FD7450AEAC0","user_header":"https://static001.geekbang.org/account/avatar/00/15/4b/14/452dacbb.jpg","comment_is_top":false,"comment_ctime":1588921192,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588921192","product_id":100023201,"comment_content":"老师，我这里用栈构造 DOM 树的那个视频只有0秒。。。是出bug了吗","like_count":0},{"had_liked":false,"id":213553,"user_name":"champ可口可乐了","can_delete":false,"product_type":"c1","uid":1177430,"ip_address":"","ucode":"EA75C67E9124C7","user_header":"https://static001.geekbang.org/account/avatar/00/11/f7/56/b82eeac7.jpg","comment_is_top":false,"comment_ctime":1588473423,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588473423","product_id":100023201,"comment_content":"那我也贴一个自己的实现，虽然目前只做了分词这部分，后面会进一步完善。<br>https:&#47;&#47;github.com&#47;champkeh&#47;toy-html-parser","like_count":0},{"had_liked":false,"id":160426,"user_name":"Geek_bb5943","can_delete":false,"product_type":"c1","uid":1618923,"ip_address":"","ucode":"E7380ADCC98CB1","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIBUFdN3p3KvwsAeYltGbenNFPmIJ1tdXVGkVkkibKs1n12Brd1iae5BNXnW8HKSYX8bTtSqrpeuJUw/132","comment_is_top":false,"comment_ctime":1575948883,"is_pvip":false,"replies":[{"id":"61212","content":"学呗","user_name":"编辑回复","user_name_real":"郭蕾","uid":"1000473","ctime":1575949079,"ip_address":"","comment_id":160426,"utype":2}],"discussion_count":1,"race_medal":0,"score":"1575948883","product_id":100023201,"comment_content":"这个应该跟编译原理关系很大，有种半懂半不懂的感觉，该咋办呢？<br>","like_count":0,"discussions":[{"author":{"id":1000473,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/44/19/17fadc62.jpg","nickname":"郭蕾","note":"","ucode":"34F4C07D1C5FE8","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477371,"discussion_content":"学呗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575949079,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143823,"user_name":"心平气和的韩丽媛","can_delete":false,"product_type":"c1","uid":1177510,"ip_address":"","ucode":"ADB7DB7383EA4A","user_header":"https://static001.geekbang.org/account/avatar/00/11/f7/a6/0b590c34.jpg","comment_is_top":false,"comment_ctime":1571796043,"is_pvip":false,"replies":[{"id":"58901","content":"这不是讲了用栈啊","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1574219588,"ip_address":"","comment_id":143823,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571796043","product_id":100023201,"comment_content":"html标签，大部分是成对的，并且层层嵌套，层层嵌套的标签是怎么识别一对的呢？","like_count":0,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471707,"discussion_content":"这不是讲了用栈啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574219588,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92614,"user_name":"小王","can_delete":false,"product_type":"c1","uid":1518743,"ip_address":"","ucode":"E6A4A243D83568","user_header":"https://static001.geekbang.org/account/avatar/00/17/2c/97/462a2c7f.jpg","comment_is_top":false,"comment_ctime":1557306424,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557306424","product_id":100023201,"comment_content":"请问老师，DOM树是否是视频右侧显示的红色的部分？比如{&#39;name&#39;: &#39;html&#39;,&#39;maaa&#39;: &#39;a&#39;}这种。它们最后是以何种形式形成一棵树的呢","like_count":0},{"had_liked":false,"id":91815,"user_name":"coder","can_delete":false,"product_type":"c1","uid":1059952,"ip_address":"","ucode":"F70511D614B9F4","user_header":"https://static001.geekbang.org/account/avatar/00/10/2c/70/02b627a6.jpg","comment_is_top":false,"comment_ctime":1557113637,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557113637","product_id":100023201,"comment_content":"ES6里的Generator，不就是状态机的一种封装吗？","like_count":0},{"had_liked":false,"id":87722,"user_name":"Reggie","can_delete":false,"product_type":"c1","uid":1383589,"ip_address":"","ucode":"453E49BEBE6D30","user_header":"https://static001.geekbang.org/account/avatar/00/15/1c/a5/21303c71.jpg","comment_is_top":false,"comment_ctime":1555670701,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555670701","product_id":100023201,"comment_content":"这一篇和前面的比起来更加有深度。","like_count":0},{"had_liked":false,"id":87299,"user_name":"ZERO To One","can_delete":false,"product_type":"c1","uid":1373600,"ip_address":"","ucode":"A520B987D17023","user_header":"https://static001.geekbang.org/account/avatar/00/14/f5/a0/96ee2d50.jpg","comment_is_top":false,"comment_ctime":1555562504,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555562504","product_id":100023201,"comment_content":"这样看来，DOM树就是一种嵌套的数据结构 ？然后渲染引擎将这个数据结构处理成我们看到的网页吗 ？","like_count":0},{"had_liked":false,"id":75639,"user_name":"Young！","can_delete":false,"product_type":"c1","uid":1025221,"ip_address":"","ucode":"2A658CEFD26011","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/c5/a53f8bbc.jpg","comment_is_top":false,"comment_ctime":1552442367,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552442367","product_id":100023201,"comment_content":"老师，请问一下<br><br>在视频中，&lt;&#47;title&gt; 结束标签入栈后，应该到下一个节点 &lt;&#47;head&gt; 结束标签入栈吧，为什么视频中没有呢","like_count":0},{"had_liked":false,"id":73602,"user_name":"🐻🔫🐸","can_delete":false,"product_type":"c1","uid":1308880,"ip_address":"","ucode":"40BABFD9D358BF","user_header":"https://static001.geekbang.org/account/avatar/00/13/f8/d0/ecc68a4f.jpg","comment_is_top":false,"comment_ctime":1551937291,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551937291","product_id":100023201,"comment_content":"遇到 tag start 就入栈一个节点，当前节点就是这个节点的父节点<br><br>这里面有一点疑问，难道不应该就是这个节点吗，这样在之后继续匹配到属性token的时候，正确的添加属性到当前节点<br><br>极客时间版权所有: https:&#47;&#47;time.geekbang.org&#47;column&#47;article&#47;8026","like_count":0},{"had_liked":false,"id":67554,"user_name":"张永达","can_delete":false,"product_type":"c1","uid":1380703,"ip_address":"","ucode":"F38F4875A2BA0A","user_header":"https://static001.geekbang.org/account/avatar/00/15/11/5f/d4f88b3f.jpg","comment_is_top":false,"comment_ctime":1550196305,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1550196305","product_id":100023201,"comment_content":"http响应的前14k的内容是什么，为什么很重要","like_count":0}]}