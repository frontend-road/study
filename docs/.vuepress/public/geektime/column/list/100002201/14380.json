{"id":14380,"title":"99 | 高效学习：如何学习和阅读代码","content":"<p>你好，我是陈皓，网名左耳朵耗子。</p><h1>读文档还是读代码</h1><p>杰夫·阿特伍德（Jeff Atwood）说过这么一句话：“<a href=\"https://blog.codinghorror.com/code-tells-you-how-comments-tell-you-why/\">Code Tells You How, Comments Tell You Why</a>”。我把其扩展一下：</p><ul>\n<li><strong>代 码 =&gt; What, How &amp; Details</strong></li>\n<li><strong>文档/书 =&gt; What, How &amp; Why</strong></li>\n</ul><p>可见，<strong>代码并不会告诉你 Why</strong>，看代码只能靠猜测或推导来估计Why，是揣测，不准确，所以会有很多误解。<strong>而且，我们每个人都知道，Why是能让人一通百通的东西，也是能让人醍醐灌顶的东西</strong>。</p><p>但是，<strong>代码会告诉你细节</strong>，这是书和文档不能给你的。<strong>细节是魔鬼，细节决定成败</strong>。这样的话我们不但听过很多，我们做技术的也应该体会过很多。当然，我们也要承认，这些代码细节给人带来的快感毕竟不如知道Why后的快感大（至少对我是这样的）。</p><p><strong>书和文档是人对人说的话，代码是人对机器说的话</strong>（注：代码中有一部份逻辑是控制流程的逻辑，不是业务逻辑）。所以：</p><ol>\n<li>\n<p><strong>如果你想知道人为什么要这么搞，那么应该去看书</strong>（像Effective C++、Code Complete、Design Pattern、Thinking in Java等），<strong>看文档</strong>。</p>\n</li>\n<li>\n<p><strong>如果你要知道让机器干了什么？那你应该看代码！</strong>（就像Linus去看zlib的代码来找性能问题。）</p>\n</li>\n</ol><!-- [[[read_end]]] --><p>因此，我认为都比较重要，关键看你的目的是什么了。</p><ul>\n<li>\n<p><strong>如果你想了解一种思想，一种方法，一种原理，一种思路，一种经验，恐怕，读书和读文档会更有效率一些</strong>，因为其中会有作者的思路描述。像Effective C++之类的书，里面有很多对不同用法和设计的推敲，TCP/IP详解里面也会有对TCP算法好坏的比较……这些思维方式能让你对技术的把握力更强，而光看代码很难达到这种级别。（现在你知道什么样的书是好书了吧 ;-)）</p>\n</li>\n<li>\n<p><strong>如果你想了解的就是具体细节，比如某协程的实现，某个模块的性能，某个算法的实现，那么你还是要去读代码的</strong>，因为代码中会有更具体的处理细节（尤其是对于一些edge case或是代码技巧方面的内容）。</p>\n</li>\n</ul><p>另外，看看下面的几个现象，你可以自己比较一下。</p><ul>\n<li>\n<p>很多时候，我们去读代码，那是因为没有文档，或是文档写得太差。</p>\n</li>\n<li>\n<p>很多时候，<strong>在Google、Stack Overflow、GitHub过后，你会发现，你掌握的知识就是一块一块的碎片，既不系统，也不结构化，更别说融会贯通了。你会觉得自己需要好好地读一本书，系统地掌握知识。你的这种感觉一定很强烈吧</strong>。</p>\n</li>\n<li>\n<p>很多时候，在读别人代码的时候，你会因为基础知识或是原理不懂，或是你在不知道为什么的情况下，要么完全读不懂代码，要么会误解代码。比如，如果你没有C语言和TCP原理方面的基础知识，就根本读不懂Linux下TCP的相关代码。我们因为误解代码用意而去修改代码造成的故障还少吗？</p>\n</li>\n<li>\n<p>很多时候，看到一个算法或是一个设计时，比如Paxos，你是不是会想去看一下这个算法的实现代码是什么样的？思考一下如何才能实现得好？（但是如果你没看过Paxos的算法思想，我不认为你光看代码实现，就能收获Paxos的思想。）</p>\n</li>\n<li>\n<p>很多时候，<strong>当你写代码的时候，你能感觉得到自己写的代码有点别扭，怎么写都别扭，这个时候，你也会有想去看别人的代码是怎么实现的冲动</strong>。</p>\n</li>\n</ul><p>类似的情况还有很多，但从代码中收获大，还是从书中收获大，在不同的场景、不同的目的下，会有不同的答案。这里，谈一谈人的学习过程吧。从学习的过程中，我们来分析一下看代码和看书这两个活动。人对新事物的学习过程基本都是从“感性认识”到“理性认识”的。</p><ul>\n<li>\n<p><strong>如果你是个新手，那应该多读代码，多动手写代码</strong>，因为你需要的是“感性认识”，这个时候“理性认识”你体会不到。一是因为，你没有切身的感受，即便告诉你Why你也体会不到。另一方面，这个阶段，你要的不是做漂亮，而是做出来。所以，在<strong>新手阶段，你会喜欢GitHub这样的东西</strong>。</p>\n</li>\n<li>\n<p><strong>如果你是个老手，你有多年的“感性认识”了，那么你的成长需要更多的“理性认识”</strong>。因为这个阶段，一方面，你会不满足于做出来，你会想去做更牛更漂亮的东西；另一方面，你知道的越多，你的问题也越多，你迫切地需要知道Why！这时，你需要大量地找牛人交流（读牛人的书，是一种特殊的人与人的交流），所以，<strong>这个阶段，你会喜欢读好的书和文章</strong>。</p>\n</li>\n</ul><p>然而，对于计算机行业这个技术创新能力超强、技术种类繁多的行业来说，我们每个人都既是新手，也是老手。</p><h1>如何阅读源代码</h1><p>很多人问过我，如何读代码。因为我在外企里工作的时间较长，所以，我经常接手一些国外团队写的代码。我发现，虽然老外写的代码比国人好一点儿（有Code Review），但依然有文档缺失、代码注释不清、代码风格混乱等一些问题，这些都是阅读代码的障碍。这里，我把我的一些阅读源代码的经验分享给你，希望对你有用。</p><p>首先，在阅读代码之前，我建议你需要有下面的这些前提再去阅读代码，这样你读起代码来会很顺畅。</p><ol>\n<li>\n<p><strong>基础知识</strong>。相关的语言和基础技术的知识。</p>\n</li>\n<li>\n<p><strong>软件功能</strong>。你先要知道这个软件完成的是什么样的功能，有哪些特性，哪些配置项。你先要读一遍用户手册，然后让软件跑起来，自己先用一下感受一下。</p>\n</li>\n<li>\n<p><strong>相关文档</strong>。读一下相关的内部文档，Readme也好，Release Notes也好，Design也好，Wiki也好，这些文档可以让你明白整个软件的方方面面。如果你的软件没有文档，那么，你只能指望这个软件的原作者还在，而且他还乐于交流。</p>\n</li>\n<li>\n<p><strong>代码的组织结构</strong>。也就是代码目录中每个目录是什么样的功能，每个文档是干什么的。如果你要读的程序是在某种标准的框架下组织的，比如：Java的Spring框架，那么恭喜你，这些代码不难读了。</p>\n</li>\n</ol><p>接下来，你要了解这个软件的代码是由哪些部分构成的，我在这里给你一个列表，供你参考。</p><ol>\n<li>\n<p><strong>接口抽象定义</strong>。任何代码都会有很多接口或抽象定义，其描述了代码需要处理的数据结构或者业务实体，以及它们之间的关系，理清楚这些关系是非常重要的。</p>\n</li>\n<li>\n<p><strong>模块粘合层</strong>。我们的代码有很多都是用来粘合代码的，比如中间件（middleware）、Promises模式、回调（Callback）、代理委托、依赖注入等。这些代码模块间的粘合技术是非常重要的，因为它们会把本来平铺直述的代码给分裂开来，让你不容易看明白它们的关系。</p>\n</li>\n<li>\n<p><strong>业务流程</strong>。这是代码运行的过程。一开始，我们不要进入细节，但需要在高层搞清楚整个业务的流程是什么样的，在这个流程中，数据是怎么被传递和处理的。一般来说，我们需要画程序流程图或者时序处理图。</p>\n</li>\n<li>\n<p><strong>具体实现</strong>。了解上述的三个方面的内容，相信你对整个代码的框架和逻辑已经有了总体认识。这个时候，你就可以深入细节，开始阅读具体实现的代码了。对于代码的具体实现，一般来说，你需要知道下面一些事实，这样有助于你在阅读代码时找到重点。</p>\n<ul>\n<li>\n<p><strong>代码逻辑</strong>。代码有两种逻辑，一种是业务逻辑，这种逻辑是真正的业务处理逻辑；另一种是控制逻辑，这种逻辑只是用控制程序流转的，不是业务逻辑。比如：flag之类的控制变量，多线程处理的代码，异步控制的代码，远程通讯的代码，对象序列化反序列化的代码等。这两种逻辑你要分开，很多代码之所以混乱就是把这两种逻辑混在一起了（详情参看《编程范式游记》）。</p>\n</li>\n<li>\n<p><strong>出错处理</strong>。根据二八原则，20%的代码是正常的逻辑，80%的代码是在处理各种错误，所以，你在读代码的时候，完全可以把处理错误的代码全部删除掉，这样就会留下比较干净和简单的正常逻辑的代码。排除干扰因素，可以更高效地读代码。</p>\n</li>\n<li>\n<p><strong>数据处理</strong>。只要你认真观察，就会发现，我们好多代码就是在那里倒腾数据。比如DAO、DTO，比如JSON、XML，这些代码冗长无聊，不是主要逻辑，可以不理。</p>\n</li>\n<li>\n<p><strong>重要的算法</strong>。一般来说，我们的代码里会有很多重要的算法，我说的并不一定是什么排序或是搜索算法，可能会是一些其它的核心算法，比如一些索引表的算法，全局唯一ID的算法、信息推荐的算法、统计算法、通读算法（如Gossip）等。这些比较核心的算法可能会非常难读，但它们往往是最有技术含量的部分。</p>\n</li>\n<li>\n<p><strong>底层交互</strong>。有一些代码是和底层系统的交互，一般来说是和操作系统或是JVM的交互。因此，读这些代码通常需要一定的底层技术知识，不然，很难读懂。</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>运行时调试</strong>。很多时候，代码只有运行起来了，才能知道具体发生了什么事，所以，我们让代码运行进来，然后用日志也好，debug设置断点跟踪也好。实际看一下代码的运行过程，是了解代码的一种很好的方式。</p>\n</li>\n</ol><p>总结一下，阅读代码的方法如下：</p><ul>\n<li>一般采用自顶向下，从总体到细节的“剥洋葱皮”的读法。</li>\n<li>画图是必要的，程序流程图，调用时序图，模块组织图……</li>\n<li>代码逻辑归一下类，排除杂音，主要逻辑才会更清楚。</li>\n<li>debug跟踪一下代码是了解代码在执行中发生了什么的最好方式。</li>\n</ul><p>对了，阅读代码你需要一个很好的IDE。我记得以前读C和C++代码时，有一个叫source insight的工具就大大提高了我的代码阅读效率。说白了就是可以查看代码间相互的调用reference的工具，这方面Visual Studio做得是非常好的。</p><h1>小结</h1><p>总结一下今天的内容。我先跟你探讨了“是读文档，还是读代码”，分析对比了从文档和代码中各自能收获到哪些东西，然后给出建议，如果想了解思想、方法和原理，读书和读文档会更有效率；如果想知道具体细节，还是应该读代码。随后分享了一些我阅读代码和源代码时候的方法和技巧。希望对你有启发。</p><p>下篇文章是《高效学习》系列的最后一篇，我将分享一下面对枯燥和量大的知识时，我们该怎样做。</p><p>下面是《高效学习》系列文章的目录。</p><ul>\n<li><a href=\"https://time.geekbang.org/column/article/14271\">端正学习态度</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/14321\">源头、原理和知识地图</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/14360\">深度，归纳和坚持实践</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/14380\">如何学习和阅读代码</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/14389\">面对枯燥和量大的知识</a></li>\n</ul>","neighbors":{"left":{"article_title":"98 | 高效学习：深度，归纳和坚持实践","id":14360},"right":{"article_title":"100 | 高效学习：面对枯燥和量大的知识","id":14389}},"comments":[{"had_liked":false,"id":23161,"user_name":"孙悟空","can_delete":false,"product_type":"c1","uid":1055660,"ip_address":"","ucode":"28356CBC83C464","user_header":"https://static001.geekbang.org/account/avatar/00/10/1b/ac/41ec8c80.jpg","comment_is_top":false,"comment_ctime":1536194114,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"147565082178","product_id":100002201,"comment_content":"耗子叔，可以推荐几个代码质量不错，适合精读的c&#47;c++&#47;java&#47;go的开源项目么。","like_count":34,"discussions":[{"author":{"id":2446418,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/zdK3dSkFwicZHtx5CLAKFJRORRibq2YqvHOP0tySLxVx0X1oD9AJanan2wia2hHaswgxdrCzEEGyVgFTVZ8sElTzQ/132","nickname":"Geek_fbfc4f","note":"","ucode":"7010B242A3F474","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377658,"discussion_content":"前面有发了吧。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622767856,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1625170,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI28lNYwGKhsZ9xJ0EAI6kbwQ61aJSn3sZMicVEv0Rk5iaOIPjVtn1Y3CCRQwgibW8Y5pMTia2sMoso1w/132","nickname":"Geek_67911d","note":"","ucode":"15A21AE575CFAA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373009,"discussion_content":"我有总结","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620566765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2009734,"avatar":"","nickname":"一墨","note":"","ucode":"2EFB72EEC69FE2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":283837,"discussion_content":"参考前面的高手练级","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592380614,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23170,"user_name":"metalmac.kyle","can_delete":false,"product_type":"c1","uid":1001832,"ip_address":"","ucode":"74795A8825FCAA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/68/bef5f7d3.jpg","comment_is_top":false,"comment_ctime":1536194929,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"121795279217","product_id":100002201,"comment_content":"Code Tells You How,Comments Tell You Why。 Brilliant！这总结太精妙了","like_count":29},{"had_liked":false,"id":34377,"user_name":"薛璇","can_delete":false,"product_type":"c1","uid":1054847,"ip_address":"","ucode":"6E10E0A0A189EE","user_header":"https://static001.geekbang.org/account/avatar/00/10/18/7f/3d6fb3fe.jpg","comment_is_top":false,"comment_ctime":1540132717,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"44489805677","product_id":100002201,"comment_content":"这也意味着写应用程序时，规范的设计应该分几块去考虑，接口列表，粘合层，控制逻辑，错误处理，业务逻辑。","like_count":11,"discussions":[{"author":{"id":2009734,"avatar":"","nickname":"一墨","note":"","ucode":"2EFB72EEC69FE2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":283841,"discussion_content":"这反向思考秒啊!","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592381041,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23199,"user_name":"小薛薛","can_delete":false,"product_type":"c1","uid":1175093,"ip_address":"","ucode":"F5CCF44B6B7784","user_header":"https://static001.geekbang.org/account/avatar/00/11/ee/35/d9bbcb34.jpg","comment_is_top":false,"comment_ctime":1536202106,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"44485875066","product_id":100002201,"comment_content":"放下急于求成，慢慢能体会到理解深挖一个个小知识点的酸爽了。 why就是舒服。","like_count":10},{"had_liked":false,"id":23694,"user_name":"Y024","can_delete":false,"product_type":"c1","uid":1018056,"ip_address":"","ucode":"397126D2E17997","user_header":"https://static001.geekbang.org/account/avatar/00/0f/88/c8/ae476935.jpg","comment_is_top":false,"comment_ctime":1536590920,"is_pvip":true,"discussion_count":1,"race_medal":2,"score":"27306394696","product_id":100002201,"comment_content":"Source Insight 感觉有点上古神器的样子，当年在外企必备神器，怀念下。","like_count":6,"discussions":[{"author":{"id":2009734,"avatar":"","nickname":"一墨","note":"","ucode":"2EFB72EEC69FE2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":283838,"discussion_content":"Z公司也用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592380666,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23268,"user_name":"Aleck","can_delete":false,"product_type":"c1","uid":1043172,"ip_address":"","ucode":"C952990B697C40","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ea/e4/4c718856.jpg","comment_is_top":false,"comment_ctime":1536245666,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27306049442","product_id":100002201,"comment_content":"耗子叔，看了您前端、后端、机器学习等等讲了很多，就是没有讲移动的。<br>您啥时候能讲一下移动的发展路径和知识树吗？然后自己也感觉未来移动的需求会趋向于饱和，请问耗子叔对移动的未来发展怎么看","like_count":6},{"had_liked":false,"id":23242,"user_name":"lovedebug","can_delete":false,"product_type":"c1","uid":1004115,"ip_address":"","ucode":"292FB1FD078AE8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/53/a9918d0b.jpg","comment_is_top":false,"comment_ctime":1536230267,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27306034043","product_id":100002201,"comment_content":"读源码推荐opengrok，自己搭建一个server就行","like_count":7},{"had_liked":false,"id":122435,"user_name":"拯救地球好累","can_delete":false,"product_type":"c1","uid":1339022,"ip_address":"","ucode":"7643439601EF4C","user_header":"https://static001.geekbang.org/account/avatar/00/14/6e/8e/5d309a85.jpg","comment_is_top":false,"comment_ctime":1565366741,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18745235925","product_id":100002201,"comment_content":"文档和书籍有助于理解原理和思想，代码更有助于了解细节。<br>阅读源代码并非是上来就硬钢代码，首先要补充相应的基础知识，明确软件功能并简单实践，阅读相应的文档说明。在进入细节前还应先把握代码整体的组织结构，再从接口抽象和模块粘合中把握基本要点，再弄清楚业务流转的流程(画图)。在看具体实现时应当区分业务逻辑和控制逻辑，正常代码和出错处理代码，正常逻辑和数据处理逻辑，核心算法与其他算法，软件内的实现与底层实现。区分这几种代码可以让我们更有效地抓住重点，删繁就简。最后，可以考虑运行时调试。","like_count":4},{"had_liked":false,"id":23197,"user_name":"刘鹏","can_delete":false,"product_type":"c1","uid":1090627,"ip_address":"","ucode":"69122CB9DDF525","user_header":"https://static001.geekbang.org/account/avatar/00/10/a4/43/0fcd4ecb.jpg","comment_is_top":false,"comment_ctime":1536201262,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"18716070446","product_id":100002201,"comment_content":"不知道Linus如果不幸离世，还有没有人看得懂Linux内核","like_count":4,"discussions":[{"author":{"id":1281425,"avatar":"https://static001.geekbang.org/account/avatar/00/13/8d/91/7d9d003d.jpg","nickname":"Ted","note":"","ucode":"A2E28BE02E9FAF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8871,"discussion_content":"这个不用担心, Linus本人现在也不能完全看懂Linux内核了!系统工程还是有系统的解决方案的","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1568088046,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1014665,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7b/89/34f2cbcc.jpg","nickname":"杨宇","note":"","ucode":"EB74DF6E269F03","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392745,"discussion_content":"Linux有最好的开源社区","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631108937,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":209607,"user_name":"Geek_CK2020","can_delete":false,"product_type":"c1","uid":1961826,"ip_address":"","ucode":"5DF4BE058F5A58","user_header":"https://static001.geekbang.org/account/avatar/00/1d/ef/62/87d9ef62.jpg","comment_is_top":false,"comment_ctime":1587570519,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14472472407","product_id":100002201,"comment_content":"先读懂框架，区分控制逻辑和业务逻辑，去除次要或冗余的代码信息，精读剩下的重要代码","like_count":3},{"had_liked":false,"id":23178,"user_name":"且听风吟","can_delete":false,"product_type":"c1","uid":1026542,"ip_address":"","ucode":"830CE21B91448C","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKW9AXgMpKp6HFT6TVDuNia9CIVN6XvL4f3h6K7dDVboRmBiamvF7KLMKQ9vWCqpJfkoxicOkS3Da2pA/132","comment_is_top":false,"comment_ctime":1536195293,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14421097181","product_id":100002201,"comment_content":"这个方法很赞呀。最近正要看Java concurrent相关的源码，希望能啃下来。。。","like_count":3},{"had_liked":false,"id":211944,"user_name":"土豆小小","can_delete":false,"product_type":"c1","uid":1457246,"ip_address":"","ucode":"5621EEDE50EA48","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLVZRHorm7z67yJxOCpYWJESPfhia00RDg4oicvPuyCwTKln2BFRMiahOKz9z22RnnEmickA64bHdB7pA/132","comment_is_top":false,"comment_ctime":1588039560,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10177974152","product_id":100002201,"comment_content":"当用户不会用你的框架时，你可以告诉他读文档。<br>当用户还不会用你的框架时，你告诉他仔细阅读文档。<br>当用户还是不会用你的框架时，你很生气的告诉他把文档背下来！","like_count":2},{"had_liked":false,"id":210644,"user_name":"KID","can_delete":false,"product_type":"c1","uid":1867938,"ip_address":"","ucode":"EE80B7CA7CC2A2","user_header":"https://static001.geekbang.org/account/avatar/00/1c/80/a2/96dcd1fa.jpg","comment_is_top":false,"comment_ctime":1587801838,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10177736430","product_id":100002201,"comment_content":"写了5年代码，现在就是对自己写的代码挺不满意的，这也促使我多去了解、学习其他优秀程序员写的代码，有去了解底层原理、设计模式，研究如何写出漂亮代码的欲望","like_count":2},{"had_liked":false,"id":332658,"user_name":"Geek_14942b","can_delete":false,"product_type":"c1","uid":1589162,"ip_address":"","ucode":"9405AAAD4A0F7C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLBFkSq1oiaEMQ6tyT9oXIpgUrbT1T895icmhg2NonibbibwQdTIH2t7a4oKj7ceDZSs32dUyticgsLJZA/132","comment_is_top":false,"comment_ctime":1643442526,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5938409822","product_id":100002201,"comment_content":"个人看法<br>1. 先读官方文档<br>2. 上手做demo<br>3. 看经典书<br>4. 学习、深入源码","like_count":1},{"had_liked":false,"id":268628,"user_name":"健康的小牛犊","can_delete":false,"product_type":"c1","uid":2263754,"ip_address":"","ucode":"A63C30B602F0A5","user_header":"https://static001.geekbang.org/account/avatar/00/22/8a/ca/1afcc75b.jpg","comment_is_top":false,"comment_ctime":1608278283,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5903245579","product_id":100002201,"comment_content":"文档可以告诉我们软件是如何设计的，而代码则可以让我们探究到软件实现的细节。阅读代码的时候，我们需要先从整体了解软件本身的主要功能和设计，然后再去探究细节，注意主要的业务逻辑处理，同时加上画图、debug等方式来深入理解。","like_count":1},{"had_liked":false,"id":260839,"user_name":"Bug? Feature!","can_delete":false,"product_type":"c1","uid":1164531,"ip_address":"","ucode":"F8FA8A0094FBA0","user_header":"https://static001.geekbang.org/account/avatar/00/11/c4/f3/92f654f1.jpg","comment_is_top":false,"comment_ctime":1605142367,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5900109663","product_id":100002201,"comment_content":"如果想了解思想、方法和原理，读书和读文档会更有效率；如果想知道具体细节，还是应该读代码。","like_count":1},{"had_liked":false,"id":209897,"user_name":"Geek_58e979","can_delete":false,"product_type":"c1","uid":1802167,"ip_address":"","ucode":"C9439302B5C952","user_header":"https://static001.geekbang.org/account/avatar/00/1b/7f/b7/53912d0c.jpg","comment_is_top":false,"comment_ctime":1587633234,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5882600530","product_id":100002201,"comment_content":"把一棵树填满，多问问什么，多举一反三，从感性到理性认识","like_count":1},{"had_liked":false,"id":34770,"user_name":"caohuan","can_delete":false,"product_type":"c1","uid":1256428,"ip_address":"","ucode":"4B092E33F3DF1E","user_header":"https://static001.geekbang.org/account/avatar/00/13/2b/ec/af6d0b10.jpg","comment_is_top":false,"comment_ctime":1540291780,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5835259076","product_id":100002201,"comment_content":"耗子哥 说的太到位了，我属于死磕物种，比如16年的项目交接的时候，项目的老人走了，没留下 任何文档，到我们做维护，需要修改功能或者做优化时，一般是瞎猜 如果运气好 秒解，有时候 很悲催 一周也搞不定，往往需要重新捋代码的业务，我们开发的项目也是以没有规范和文档为荣，后来业务需要调整，可之前的设计逻辑忘得差不多了，来回来去的 做了很多无用功，自己认识规范的重要性都有好大的代价，所以跟随 耗子哥 可以少走没必要的弯路。<br>还有 觉得 我应该去找从未有过 的why的体验。","like_count":1},{"had_liked":false,"id":354455,"user_name":"顺势而为","can_delete":false,"product_type":"c1","uid":2757858,"ip_address":"广东","ucode":"FE7D688D24823E","user_header":"https://static001.geekbang.org/account/avatar/00/2a/14/e2/f6f1627c.jpg","comment_is_top":false,"comment_ctime":1660411875,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1660411875","product_id":100002201,"comment_content":"非常喜欢这篇文章，作者说的很实在，我经常思考这些问题，一直没有找对方法，看来平时的思考，对我学习这些内容有很大帮助。保持思考，还是很重要的","like_count":0},{"had_liked":false,"id":325690,"user_name":"方勇(gopher)","can_delete":false,"product_type":"c1","uid":1290625,"ip_address":"","ucode":"D199911C4CFEF5","user_header":"https://static001.geekbang.org/account/avatar/00/13/b1/81/13f23d1e.jpg","comment_is_top":false,"comment_ctime":1639098989,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639098989","product_id":100002201,"comment_content":"读书和读代码需要相互结合","like_count":0},{"had_liked":false,"id":258992,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1604591257,"is_pvip":true,"discussion_count":0,"race_medal":2,"score":"1604591257","product_id":100002201,"comment_content":"我是那种需要多读代码、多动手写代码的 Rubyist，但我也不算是完全的新手。<br><br>最近在看代码写代码的过程中，发现首先还是要了解一下业务。对我来说，“模块粘合层”相对有些抽象，确实不太容易看明白，但是我觉的可能多看多写就习惯了，“吐啊吐啊的……”<br><br>皓叔关于读文档还是读代码的总结也很精辟，了解设计思想就去读文档，深入细节就去看代码。<br><br>高效学习系列文章的精选留言数目似乎在减少，今年 4 月份有一波留言。下一篇难道是留言最少的么？","like_count":0},{"had_liked":false,"id":256861,"user_name":"prader26","can_delete":false,"product_type":"c1","uid":1433707,"ip_address":"","ucode":"5EFFFC374ADECE","user_header":"https://static001.geekbang.org/account/avatar/00/15/e0/6b/f61d7466.jpg","comment_is_top":false,"comment_ctime":1603767455,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603767455","product_id":100002201,"comment_content":"1首先弄懂自己想要什么，想了解思想就去读书，想了解细节就读代码。<br>2读代码，主要是理解。 所以要有基础的语法知识，而且可以通过画图，debug 跟踪的方法，帮自己理解的更加清楚。","like_count":0},{"had_liked":false,"id":256674,"user_name":"色即是空","can_delete":false,"product_type":"c1","uid":1189638,"ip_address":"","ucode":"46B8975ED087B8","user_header":"https://static001.geekbang.org/account/avatar/00/12/27/06/7ab75a5b.jpg","comment_is_top":false,"comment_ctime":1603703984,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603703984","product_id":100002201,"comment_content":"一直都是无章法的摸索，胡乱攀爬，是时候走出混沌，寻找章法","like_count":0},{"had_liked":false,"id":221914,"user_name":"梅子黄时雨","can_delete":false,"product_type":"c1","uid":1015938,"ip_address":"","ucode":"9F788D09C2E9E7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/80/82/3c21b30c.jpg","comment_is_top":false,"comment_ctime":1590633244,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590633244","product_id":100002201,"comment_content":"嗯嗯，醍醐灌顶。","like_count":0},{"had_liked":false,"id":211713,"user_name":"Nick","can_delete":false,"product_type":"c1","uid":1921287,"ip_address":"","ucode":"64BBE005890845","user_header":"https://static001.geekbang.org/account/avatar/00/1d/51/07/b5a945b6.jpg","comment_is_top":false,"comment_ctime":1587998502,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587998502","product_id":100002201,"comment_content":"非常受用，阅读代码尤其是阅读别人写的代码，真的不容易，通过老师的总结可以事半功倍","like_count":0},{"had_liked":false,"id":210625,"user_name":"成林","can_delete":false,"product_type":"c1","uid":1162858,"ip_address":"","ucode":"60C31F52EBC251","user_header":"https://static001.geekbang.org/account/avatar/00/11/be/6a/552cc940.jpg","comment_is_top":false,"comment_ctime":1587798145,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587798145","product_id":100002201,"comment_content":"萌新看得津津有味","like_count":0},{"had_liked":false,"id":209183,"user_name":"夜空中最亮的星","can_delete":false,"product_type":"c1","uid":1546967,"ip_address":"","ucode":"64FE6FF3BAF061","user_header":"https://static001.geekbang.org/account/avatar/00/17/9a/d7/c49875d5.jpg","comment_is_top":false,"comment_ctime":1587517613,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587517613","product_id":100002201,"comment_content":"深有体会，没找到合适的方向思路，感觉阅读源码很费劲，容易一开始就被各种细节给缠住","like_count":0},{"had_liked":false,"id":207647,"user_name":"向百","can_delete":false,"product_type":"c1","uid":1924815,"ip_address":"","ucode":"30681BDC5BB28F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJ7FvOBUp2rptO4tD9CoKQJsVBfPZlJEfS9SUxVoueJUEy41OhXicmFn66nEDAA11GB7lbvIqic7Wg/132","comment_is_top":false,"comment_ctime":1587128117,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1587128117","product_id":100002201,"comment_content":"文档是理论，代码是实践，理论和实践一定要相结合才有用！","like_count":0},{"had_liked":false,"id":197766,"user_name":"黄日辉","can_delete":false,"product_type":"c1","uid":1542817,"ip_address":"","ucode":"F2561CB946A6BC","user_header":"https://static001.geekbang.org/account/avatar/00/17/8a/a1/6438669e.jpg","comment_is_top":false,"comment_ctime":1585397602,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585397602","product_id":100002201,"comment_content":"曾经也用过一段时间source insight，大工程用来读代码，修改还是vim，有时也用ctag。现在很多IDE工具都支持了","like_count":0},{"had_liked":false,"id":169835,"user_name":"文刂 氵共 超","can_delete":false,"product_type":"c1","uid":1282813,"ip_address":"","ucode":"C2CE1512D23012","user_header":"https://static001.geekbang.org/account/avatar/00/13/92/fd/6b0e58fe.jpg","comment_is_top":false,"comment_ctime":1578454260,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578454260","product_id":100002201,"comment_content":"坚持学习，学习笔记 https:&#47;&#47;mubu.com&#47;colla&#47;72QQbkfNoP0","like_count":0},{"had_liked":false,"id":152306,"user_name":"(╯‵□′)╯︵┻━┻","can_delete":false,"product_type":"c1","uid":1387589,"ip_address":"","ucode":"10A03AB1CB6B42","user_header":"https://static001.geekbang.org/account/avatar/00/15/2c/45/e8bcf142.jpg","comment_is_top":false,"comment_ctime":1573966994,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573966994","product_id":100002201,"comment_content":"看视频里的技术或代码展示分析感觉不错","like_count":0},{"had_liked":false,"id":110845,"user_name":"张健_Bamvor","can_delete":false,"product_type":"c1","uid":1009436,"ip_address":"","ucode":"0DCFEC97AF32A6","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKQuaDVYz2jWAtOQpb3aI5oqOqJULkDPl8UXADUqHDicvDxg3YicxT5jibkGJAicxvHW0uAVJIDxwicgXg/132","comment_is_top":false,"comment_ctime":1562373710,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562373710","product_id":100002201,"comment_content":"听完耗子哥这篇文章之后，发现自己模块的文档，有写的不够清楚的地方，主要没有讲清楚要做什么，当前做到什么程度，将来会怎么引进。","like_count":0},{"had_liked":false,"id":103555,"user_name":"edisonhuang","can_delete":false,"product_type":"c1","uid":1530167,"ip_address":"","ucode":"BB2F639A779F96","user_header":"https://static001.geekbang.org/account/avatar/00/17/59/37/bd2de0a4.jpg","comment_is_top":false,"comment_ctime":1560472901,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560472901","product_id":100002201,"comment_content":"读代码和读文档，两者一个是抓住原理，掌握道，一个抓住细节，掌握术。在实践过程中的不同时刻，会需要不同的侧重。<br>耗子哥读代码的经验在于，首先采用自顶向下的方式，先归类，然后了解软件功能，深入模块，运行跟踪，摸透细节。有好的代码跟踪工具会让整个过程事半功倍。","like_count":0},{"had_liked":false,"id":54631,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1545918673,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545918673","product_id":100002201,"comment_content":"最近再读JDK源码，浩哥的方法正好用上","like_count":0},{"had_liked":false,"id":23486,"user_name":"青蛙爱吃土豆","can_delete":false,"product_type":"c1","uid":1106768,"ip_address":"","ucode":"C0F4CFBBA4EA2B","user_header":"https://static001.geekbang.org/account/avatar/00/10/e3/50/278fc13e.jpg","comment_is_top":false,"comment_ctime":1536408518,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1536408518","product_id":100002201,"comment_content":"有什么代码质量比较好的java项目可以推荐下吗？","like_count":0},{"had_liked":false,"id":23269,"user_name":"锕杜","can_delete":false,"product_type":"c1","uid":1145814,"ip_address":"","ucode":"67B2CAFF3EA068","user_header":"https://static001.geekbang.org/account/avatar/00/11/7b/d6/d343cbf4.jpg","comment_is_top":false,"comment_ctime":1536245883,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1536245883","product_id":100002201,"comment_content":"耗子叔，到您这个水平是不是做什么业务都已经游刃有余？我个人非常好奇","like_count":0},{"had_liked":false,"id":23193,"user_name":"袋鼠先生","can_delete":false,"product_type":"c1","uid":1130237,"ip_address":"","ucode":"1FA605AAAC9BE0","user_header":"https://static001.geekbang.org/account/avatar/00/11/3e/fd/61479d60.jpg","comment_is_top":false,"comment_ctime":1536197601,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1536197601","product_id":100002201,"comment_content":"总结很到位","like_count":0},{"had_liked":false,"id":23155,"user_name":"太阳雪","can_delete":false,"product_type":"c1","uid":1082130,"ip_address":"","ucode":"A8C1067DEC0A01","user_header":"https://static001.geekbang.org/account/avatar/00/10/83/12/e3986110.jpg","comment_is_top":false,"comment_ctime":1536193545,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1536193545","product_id":100002201,"comment_content":"这期的内容感同身受，计算机本身就是个复杂的东西，如果没有技巧和方法就会迷路，您总结的非常好，如果更早的知道这些方法和指导，能提升很大的效率。","like_count":0},{"had_liked":false,"id":23154,"user_name":"太阳雪","can_delete":false,"product_type":"c1","uid":1082130,"ip_address":"","ucode":"A8C1067DEC0A01","user_header":"https://static001.geekbang.org/account/avatar/00/10/83/12/e3986110.jpg","comment_is_top":false,"comment_ctime":1536193545,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1536193545","product_id":100002201,"comment_content":"这期的内容感同身受，计算机本身就是个复杂的东西，如果没有技巧和方法就会迷路，您总结的非常好，如果更早的知道这些方法和指导，能提升很大的效率。","like_count":0}]}