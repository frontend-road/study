{"id":363433,"title":"17 | 触发器：如何让数据修改自动触发关联操作，确保数据一致性？","content":"<p>你好，我是朱晓峰。今天，我来和你聊一聊触发器。</p><p>在实际开发中，我们经常会遇到这样的情况：有2个或者多个相互关联的表，如商品信息和库存信息分别存放在2个不同的数据表中，我们在添加一条新商品记录的时候，为了保证数据的完整性，必须同时在库存表中添加一条库存记录。</p><p>这样一来，我们就必须把这两个关联的操作步骤写到程序里面，而且要用事务包裹起来，确保这两个操作成为一个原子操作，要么全部执行，要么全部不执行。要是遇到特殊情况，可能还需要对数据进行手动维护，这样就很容易忘记其中的一步，导致数据缺失。</p><p>这个时候，其实咱们可以使用触发器。你可以创建一个触发器，让商品信息数据的插入操作自动触发库存数据的插入操作。这样一来，就不用担心因为忘记添加库存数据而导致的数据缺失了。</p><p>听上去好像很不错，那触发器到底怎么使用呢？接下来，我就重点给你聊聊。我会先给你讲解创建、查看和删除触发器的具体操作，然后借助一个案例带你实战一下。</p><h2>如何操作触发器？</h2><p>首先，咱们来学习下触发器的基本操作。</p><h3>创建触发器</h3><p>创建触发器的语法结构是：</p><pre><code>CREATE TRIGGER 触发器名称 {BEFORE|AFTER} {INSERT|UPDATE|DELETE}\nON 表名 FOR EACH ROW 表达式；\n</code></pre><p>在创建时，你一定要注意触发器的三个要素。</p><ul>\n<li>表名：表示触发器监控的对象。</li>\n<li>INSERT|UPDATE|DELETE：表示触发的事件。INSERT表示插入记录时触发；UPDATE表示更新记录时触发；DELETE表示删除记录时触发。</li>\n<li>BEFORE|AFTER：表示触发的时间。BEFORE表示在事件之前触发；AFTER表示在事件之后触发。</li>\n</ul><!-- [[[read_end]]] --><p>只有把这三个要素定义好，才能正确使用触发器。</p><p>创建好触发器之后，咱们还要知道触发器是不是创建成功了。怎么查看呢？我来介绍下。</p><h3>查看触发器</h3><p>查看触发器的语句是：</p><pre><code>SHOW TRIGGERS\\G;\n</code></pre><h3>删除触发器</h3><p>删除触发器很简单，你只要知道语法结构就可以了：</p><pre><code>DROP TRIGGER 触发器名称;\n</code></pre><p>知道了触发器的操作方法，接下来咱们就借助超市项目的实际案例，在真实的场景中实战一下，毕竟，实战是掌握操作的最好方法。</p><h2>案例讲解</h2><p>超市项目实际实施过程中，客户经常要查询储值余额变动的明细，但是，查询会员消费流水时，存在数据汇总不及时、查询速度比较慢的问题。这时，我们就想到用触发器，及时把会员储值金额的变化信息记录到一个专门的表中。</p><p>我先用咱们熟悉的SQL语句来实现记录储值金额变动的操作，后面再带你使用触发器来操作。通过两种操作的对比，你就能更好地理解，在什么情况下，触发器能够比普通的SQL语句更加简洁高效，从而帮助你用好触发器这个工具，提高开发的能力。</p><p>下面我就借助具体数据，来详细说明一下。这里我们需要用到会员信息表（demo.membermaster）和会员储值历史表（demo.deposithist）。</p><p>会员信息表：</p><p><img src=\"https://static001.geekbang.org/resource/image/26/34/26166082e21c2cbd38e4c21d03e76734.jpeg?wh=1725*608\" alt=\"\"></p><p>会员储值历史表：</p><p><img src=\"https://static001.geekbang.org/resource/image/f0/c5/f0b59f65801543af6c52b208c71925c5.jpeg?wh=1591*384\" alt=\"\"></p><p>假如在2020年12月20日这一天，会员编号是2的会员李四，到超市的某家连锁店购买了一条烟，消费了150元。现在，我们用之前学过的SQL语句，把这个会员储值余额的变动情况记录到会员储值历史表中。</p><p>第一步，查询出编号是2的会员卡的储值金额是多少。我们可以用下面的代码来实现：</p><pre><code>mysql&gt; SELECT memberdeposit\n-&gt; FROM demo.membermaster\n-&gt; WHERE memberid = 2;\n+---------------+\n| memberdeposit |\n+---------------+\n| 200.00 |\n+---------------+\n1 row in set (0.00 sec)\n</code></pre><p>第二步，我们把会员编号是2的会员的储值金额减去150。</p><pre><code>mysql&gt; UPDATE demo.membermaster\n-&gt; SET memberdeposit = memberdeposit - 150\n-&gt; WHERE memberid = 2;\nQuery OK, 1 row affected (0.01 sec)\nRows matched: 1 Changed: 1 Warnings: 0\n</code></pre><p>第三步，读出会员编号是2的会员当前的储值金额。</p><pre><code>mysql&gt; SELECT memberdeposit\n-&gt; FROM demo.membermaster\n-&gt; WHERE memberid = 2;\n+---------------+\n| memberdeposit |\n+---------------+\n| 50.00 |\n+---------------+\n1 row in set (0.00 sec)\n</code></pre><p>第四步，把会员编号和前面查询中获得的储值起始金额、储值余额和储值金额变化值，写入会员储值历史表。</p><pre><code>mysql&gt; INSERT INTO demo.deposithist\n-&gt; (\n-&gt; memberid,\n-&gt; transdate,\n-&gt; oldvalue,\n-&gt; newvalue,\n-&gt; changedvalue\n-&gt; )\n-&gt; SELECT 2,NOW(),200,50,-150;\nQuery OK, 1 row affected (0.02 sec)\nRecords: 1 Duplicates: 0 Warnings: 0\n</code></pre><p>这样，我们就完成了记录会员储值金额变动的操作。现在，我们来查询一下记录的结果：</p><pre><code>mysql&gt; SELECT *\n-&gt; FROM demo.deposithist;\n+----+----------+---------------------+----------+----------+--------------+\n| id | memberid | transdate | oldvalue | newvalue | changedvalue |\n+----+----------+---------------------+----------+----------+--------------+\n| 1 | 2 | 2020-12-20 10:37:51 | 200.00 | 50.00 | -150.00 |\n+----+----------+---------------------+----------+----------+--------------+\n1 row in set (0.00 sec)\n</code></pre><p>结果显示，会员编号是2的会员卡储值金额在2020-12-20 10:37:51时有变动，变动前是200元，变动后是50元，减少了150元。</p><p>你看这个记录会员储值金额变动的操作非常复杂，我们用了4步才完成。而且为了确保数据的一致性，我们还要用事务把这几个关联的操作包裹起来，这样一来，消耗的资源就比较多。</p><p>那如果用触发器来实现，效果会怎样呢？我们来实操一下。</p><p>首先，我们创建一个数据表demo.membermaster的触发器。每当更新表中的数据时，先触发触发器，如果发现会员储值金额有变化，就把会员编号信息、更新的时间、更新前的储值金额、更新后的储值金额和变动金额，写入会员储值历史表。然后，再执行会员信息表的更新操作。</p><p>创建触发器的代码如下所示：</p><pre><code>DELIMITER //\nCREATE TRIGGER demo.upd_membermaster BEFORE UPDATE  -- 在更新前触发\nON demo.membermaster\nFOR EACH ROW                              -- 表示每更新一条记录，触发一次\nBEGIN                                     -- 开始程序体\nIF (new.memberdeposit &lt;&gt; old.memberdeposit)  -- 如果储值金额有变化\nTHEN\nINSERT INTO demo.deposithist\n(\nmemberid,\ntransdate,\noldvalue,\nnewvalue,\nchangedvalue\n)\nSELECT\nNEW.memberid,\nNOW(),\nOLD.memberdeposit,                  -- 更新前的储值金额\nNEW.memberdeposit,                  -- 更新后的储值金额\nNEW.memberdeposit-OLD.memberdeposit; -- 储值金额变化值\nEND IF;\nEND\n//\nDELIMITER ;\n</code></pre><p>创建完成之后，我们查看一下触发器，看看是不是真的创建成功了：</p><pre><code>mysql&gt; SHOW TRIGGERS \\G;\n*************************** 1. row ***************************\nTrigger: upd_membermaster -- 触发器名称\nEvent: UPDATE -- 触发的事件\nTable: membermaster -- 表名称\nStatement: BEGIN -- 被触发时要执行的程序体\nIF (new.memberdeposit &lt;&gt; old.memberdeposit) -- 储值金额变动时插入历史储值表\nTHEN\nINSERT INTO demo.deposithist\n(\nmemberid,\ntransdate,\noldvalue,\nnewvalue,\nchangedvalue\n)\nSELECT\nNEW.memberid,\nNOW(),\nOLD.memberdeposit,\nNEW.memberdeposit,\nNEW.memberdeposit-OLD.memberdeposit;\nEND IF;\nEND\nTiming: BEFORE\nCreated: 2021-04-03 15:02:48.18\nsql_mode: STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION\nDefiner: root@localhost\ncharacter_set_client: utf8mb4\ncollation_connection: utf8mb4_0900_ai_ci\nDatabase Collation: utf8mb4_0900_ai_ci\n1 row in set (0.00 sec)\n</code></pre><p>从代码中，我们可以知道触发器的具体信息：</p><ul>\n<li>Trigger表示触发器名称，这里是upd_membermaster；</li>\n<li>Event表示触发事件，这里是UPDATE，表示更新触发；</li>\n<li>Table表示定义触发器的数据表，这里是membermaster；</li>\n<li>Statement表示触发时要执行的程序体。</li>\n</ul><p>看到这些信息，我们就可以确认，触发器创建成功了。</p><p>创建成功以后，我们尝试更新一下会员编号是1的会员的储值金额，这里假设把会员1的储值金额增加10元。简单说明一下，会员也可以把钱存到会员卡里，需要的时候进行消费，对应的就是储值金额的增加。</p><p>我们用下面的代码来完成这个操作：</p><pre><code>mysql&gt; UPDATE demo.membermaster\n-&gt; SET memberdeposit = memberdeposit + 10\n-&gt; WHERE memberid = 1;\nQuery OK, 1 row affected (0.03 sec)\nRows matched: 1 Changed: 1 Warnings: 0\n</code></pre><p>现在，我们来查看一下会员信息表和会员储值历史表：</p><pre><code>mysql&gt; SELECT *\n-&gt; FROM demo.membermaster;\n+----------+----------+------------+---------+-------------+---------------+\n| memberid | cardno | membername | address | phone | memberdeposit |\n+----------+----------+------------+---------+-------------+---------------+\n| 1 | 10000001 | 张三 | 北京 | 13812345678 | 110.00 |\n| 2 | 10000002 | 李四 | 天津 | 18512345678 | 50.00 |\n+----------+----------+------------+---------+-------------+---------------+\n2 rows in set (0.00 sec)\n \nmysql&gt; SELECT *\n-&gt; FROM demo.deposithist;\n+----+----------+---------------------+----------+----------+--------------+\n| id | memberid | transdate | oldvalue | newvalue | changedvalue |\n+----+----------+---------------------+----------+----------+--------------+\n| 1 | 2 | 2020-12-20 10:37:51 | 200.00 | 50.00 | -150.00 |\n| 2 | 1 | 2020-12-20 11:32:09 | 100.00 | 110.00 | 10.00 |\n+----+----------+---------------------+----------+----------+--------------+\n2 rows in set (0.01 sec)\n</code></pre><p>结果显示，触发器正确地记录了修改会员储值金额的操作。</p><p>如果你一直跟着我进行操作，到这里，你可能会有疑问，在会员历史储值表中记录修改会员储值金额的操作，和实际修改会员信息表是2个操作，有没有可能一个成功，一个失败？比如说，记录修改会员储值金额的操作失败了，但是会员的储值金额被修改了。</p><p>其实，在MySQL中，如果触发器中的操作失败了，那么触发这个触发器的数据操作也会失败，不会出现一个成功、一个失败的情况。</p><p>我还是借助一个例子来解释下。假设我们创建了一个触发器，这个触发器的程序体中的SQL语句有误，比如多了一个字段。在这种情况下，触发器执行会失败，因此，数据更新的操作也不会执行。我们用下面的代码来验证一下：</p><pre><code>DELIMITER //\nCREATE TRIGGER demo.upd_membermaster BEFORE UPDATE\nON demo.membermaster\nFOR EACH ROW\nBEGIN\nIF (new.memberdeposit &lt;&gt; old.memberdeposit)\nTHEN\nINSERT INTO demo.deposithist\n(\naa, -- 不存在的字段\nmemberid,\ntransdate,\noldvalue,\nnewvalue,\nchangedvalue\n)\nSELECT\n1, -- 给不存在的字段赋值\nNEW.memberid,\nNOW(),\nOLD.memberdeposit,\nNEW.memberdeposit,\nNEW.memberdeposit-OLD.memberdeposit;\nEND IF;\nEND\n//\nDELIMITER ;\n</code></pre><p>现在，假设我们要把会员编号是2的会员卡的储值金额更新为20：</p><pre><code>mysql&gt; update demo.membermaster set memberdeposit=20 where memberid = 2;\nERROR 1054 (42S22): Unknown column 'aa' in 'field list'\n</code></pre><p>系统提示：因为字段“aa”不存在，导致触发器执行失败。现在我们来看看会员储值金额有没有被修改：</p><pre><code>mysql&gt; select * from demo.membermaster;\n+----------+----------+------------+---------+-------------+---------------+\n| memberid | cardno | membername | address | phone | memberdeposit |\n+----------+----------+------------+---------+-------------+---------------+\n| 1 | 10000001 | 张三 | 北京 | 13812345678 | 110.00 |\n| 2 | 10000002 | 李四 | 天津 | 18512345678 | 50.00 |\n+----------+----------+------------+---------+-------------+---------------+\n2 rows in set (0.00 sec)\n</code></pre><p>结果显示，会员储值金额不变。这个时候，为了让应用程序知道触发器是否执行成功，我们可以通过ROW_COUNT()函数来发现错误：</p><pre><code>mysql&gt; select row_count();\n+-------------+\n| row_count() |\n+-------------+\n| -1 |\n+-------------+\n1 row in set (0.00 sec)\n</code></pre><p>结果是-1，说明我们可以通过ROW_COUNT()函数捕获到错误。</p><p>我们回顾一下：对于记录会员储值金额变化的操作，可以通过应用层发出SQL语句指令，或者用一个存储过程来实现。无论哪种方式，都要通过好几步相互关联的操作，而且要做成一个事务，处理过程复杂，消耗的资源也较多。如果用触发器，效率就会提高很多，消耗的资源也少。同时，还可以起到事务的类似功能，保证关联操作全部完成或全部失败。</p><h2>触发器的优缺点</h2><p>通过刚刚的案例，你应该感受到触发器的高效了。现在，咱们把视角拔高一下，来看看触发器具体都有什么优缺点。毕竟，知己知彼，才能百战不殆。只有非常清楚它的优缺点，你才能充分发挥它的作用。</p><p>我先来说说触发器的优点。</p><p><strong>首先，触发器可以确保数据的完整性</strong>。这是怎么体现的呢？我来举个小例子。</p><p>假设我们用进货单头表（demo.importhead）来保存进货单的总体信息，包括进货单编号、供货商编号、仓库编号、总计进货数量、总计进货金额和验收日期。</p><p><img src=\"https://static001.geekbang.org/resource/image/5b/e8/5b36cf11405b0159a1388ee23639aee8.jpeg?wh=1602*383\" alt=\"\"></p><p>用进货单明细表（demo.importdetails）来保存进货商品的明细，包括进货单编号、商品编号、进货数量、进货价格和进货金额。</p><p><img src=\"https://static001.geekbang.org/resource/image/b8/0e/b8e3fc8e001da9af2c85c22be5e6780e.jpeg?wh=1554*486\" alt=\"\"></p><p>每当我们录入、删除和修改一条进货单明细数据的时候，进货单明细表里的数据就会发生变动。这个时候，在进货单头表中的总计数量和总计金额就必须重新计算，否则，进货单头表中的总计数量和总计金额就不等于进货单明细表中数量合计和金额合计了，这就是数据不一致。</p><p>为了解决这个问题，我们就可以使用触发器，规定每当进货单明细表有数据插入、修改和删除的操作时，自动触发2步操作：</p><ol>\n<li>重新计算进货单明细表中的数量合计和金额合计；</li>\n<li>用第一步中计算出来的值更新进货单头表中的合计数量与合计金额。</li>\n</ol><p>这样一来，进货单头表中的合计数量与合计金额的值，就始终与进货单明细表中计算出来的合计数量与合计金额的值相同，数据就是一致的，不会互相矛盾。</p><p><strong>其次，触发器可以帮助我们记录操作日志。</strong></p><p>利用触发器，可以具体记录什么时间发生了什么。我们前面的记录修改会员储值金额的触发器，就是一个很好的例子。这对我们还原操作执行时的具体场景，更好地定位问题原因很有帮助。</p><p><strong>另外，触发器还可以用在操作数据前，对数据进行合法性检查。</strong></p><p>举个小例子。超市进货的时候，需要库管录入进货价格。但是，人为操作很容易犯错误，比如说在录入数量的时候，把条形码扫进去了；录入金额的时候，看串了行，录入的价格远超售价，导致账面上的巨亏……这些都可以通过触发器，在实际插入或者更新操作之前，对相应的数据进行检查，及时提示错误，防止错误数据进入系统。</p><p>说了这么多触发器的优点，那是不是所有事件可以驱动的操作，都应该用触发器呢？要是你这么想，就掉坑里了。</p><p>下面我来说说触发器的缺点。</p><p><strong>触发器最大的一个问题就是可读性差。</strong></p><p>因为触发器存储在数据库中，并且由事件驱动，这就意味着触发器有可能不受应用层的控制。这对系统维护是非常有挑战的。</p><p>这是啥意思呢？我举个例子，你一看就明白了。</p><p>还是拿我们创建触发器时讲到的修改会员储值操作的那个触发器为例。如果触发器中的操作出了问题，会导致会员储值金额更新失败。我用下面的代码演示一下：</p><pre><code>mysql&gt; update demo.membermaster set memberdeposit=20 where memberid = 2;\nERROR 1054 (42S22): Unknown column 'aa' in 'field list'\n</code></pre><p>结果显示，系统提示错误，字段“aa”不存在。</p><p>这是因为，触发器中的数据插入操作多了一个字段，系统提示错误。可是，如果你不了解这个触发器，很可能会认为是更新语句本身的问题，或者是会员信息表的结构出了问题。说不定你还会给会员信息表添加一个叫“aa”的字段，试图解决这个问题，结果只能是白费力。</p><p>另外，相关数据的变更，特别是数据表结构的变更，都可能会导致触发器出错，进而影响数据操作的正常运行。这些都会由于触发器本身的隐蔽性，影响到应用中错误原因排查的效率。</p><h2>总结</h2><p>今天这节课，我给你介绍了如何操作触发器。为了方便你学习，我汇总了相关的语法结构：</p><pre><code>创建触发器的语法结构是\nCREATE TRIGGER 触发器名称 {BEFORE|AFTER} {INSERT|UPDATE|DELETE}\nON 表名 FOR EACH ROW 表达式；\n\n查看触发器的语句是：\nSHOW TRIGGERS\\G;\n\n删除触发器的语法结构是：\nDROP TRIGGER 触发器名称;\n</code></pre><p>除此之外，我们还学习了触发器的优缺点。它的优点是可以确保数据一致性、记录操作日志和检查数据合法性。不过，它也存在可读性差，会增加系统维护的成本的缺点。在使用触发器的时候，你一定要综合考量。</p><p>最后，我还想再给你提一个小建议：<strong>维护一个完整的数据库设计文档</strong>。因为运维人员可能会经常变动，如果有一个完整的数据库设计文档，就可以帮助新人快速了解触发器的设计思路，从而减少错误，降低系统维护的成本。</p><h2>思考题</h2><p>我在课程中提到，每当在进货单明细表中插入或修改数据的时候，都要更新进货单头表中的总计数量和总计金额，这个问题可以用触发器来解决。你能不能创建一个触发器，要求是当操作人员更新进货单明细表中相关数据的时候，自动触发对进货单头表中相关数据的更改，确保数据的一致性？</p><p>欢迎在留言区写下你的思考和答案，我们一起交流讨论。如果你觉得今天的内容对你有所帮助，欢迎你把它分享给你的朋友或同事，我们下节课见。</p>","neighbors":{"left":{"article_title":"16 | 游标：对于数据集中的记录，该怎么逐条处理？","id":362233},"right":{"article_title":"18 | 权限管理：如何控制数据库访问，消除安全隐患？","id":364695}},"comments":[{"had_liked":false,"id":293156,"user_name":"朱晓峰","can_delete":false,"product_type":"c1","uid":2356905,"ip_address":"","ucode":"D2F84F44329C29","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","comment_is_top":true,"comment_ctime":1621246846,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"9.2233720384759992e+18","product_id":100073201,"comment_content":"你好，我是朱晓峰，下面我就来公布一下上节课思考题的答案：<br><br>上节课，我们学习了游标。下面是思考题的答案：<br><br>DELIMITER &#47;&#47;<br>CREATE PROCEDURE demo.myproc()<br>BEGIN<br>\tDECLARE myid INT;<br>    DECLARE myq INT;<br>    DECLARE done INT DEFAULT FALSE;<br>\tDECLARE cursor_test CURSOR FOR <br>    SELECT * FROM demo.test;<br>\tDECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;<br>    <br>\tOPEN cursor_test;<br>    FETCH cursor_test INTO myid,myq;<br>    REPEAT<br>\t\tIF (myid MOD 2 = 0) THEN    -- 如果是偶数，加1<br>            UPDATE demo.test SET myquant = myquant + 1 WHERE id = myid;<br>\t\tELSE                                       -- 奇数加2<br>\t\t\tUPDATE demo.test SET myquant = myquant + 2 WHERE id = myid;<br>\t\tEND IF;<br>        FETCH cursor_test INTO myid,myq;<br>\tUNTIL done END REPEAT;<br>    CLOSE cursor_test;<br>END<br>&#47;&#47;<br>DELIMITER ;<br>","like_count":0,"discussions":[{"author":{"id":1701572,"avatar":"https://static001.geekbang.org/account/avatar/00/19/f6/c4/e14686d4.jpg","nickname":"shk1230","note":"","ucode":"9E39279C23FF8F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555976,"discussion_content":"文中“INSERT INTO .....SELECT.....”，后面是否可以用values(....)，有啥不同吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647154540,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2719812,"avatar":"","nickname":"Geek_989379","note":"","ucode":"3DB7D29E9CA816","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391987,"discussion_content":"我是飞飞，老师您好，这个地方CREATE PROCEDURE demo.myproc()是不是需要修改成：CREATE PROCEDURE demo.myproc(myid int)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630746561,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1701572,"avatar":"https://static001.geekbang.org/account/avatar/00/19/f6/c4/e14686d4.jpg","nickname":"shk1230","note":"","ucode":"9E39279C23FF8F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2719812,"avatar":"","nickname":"Geek_989379","note":"","ucode":"3DB7D29E9CA816","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555975,"discussion_content":"不需要，你传参数干吗，根本用不到参数。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647154308,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":391987,"ip_address":""},"score":555975,"extra":""}]}]},{"had_liked":false,"id":288797,"user_name":"giteebravo","can_delete":false,"product_type":"c1","uid":1005290,"ip_address":"","ucode":"C087E8D6B5A98B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/ea/32608c44.jpg","comment_is_top":false,"comment_ctime":1618679386,"is_pvip":false,"replies":[{"id":"106439","content":"是的","user_name":"作者回复","user_name_real":"朱晓峰","uid":"2356905","ctime":1621560126,"ip_address":"","comment_id":288797,"utype":1}],"discussion_count":1,"race_medal":1,"score":"44568352346","product_id":100073201,"comment_content":"<br>视图，存储过程，存储函数，触发器<br>这些对象都保存在数据库中<br>对于应用系统来说具有很大的隐蔽性<br>维护和管理它们还是有很高成本的","like_count":11,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518741,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621560126,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":288796,"user_name":"giteebravo","can_delete":false,"product_type":"c1","uid":1005290,"ip_address":"","ucode":"C087E8D6B5A98B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/ea/32608c44.jpg","comment_is_top":false,"comment_ctime":1618679090,"is_pvip":false,"replies":[{"id":"106438","content":"一般来说应该包括需求分析、建模（ER）、逻辑设计（比如建库建表）、物理设计（比如索引）、实施、运维（容灾和备份）等，根据实际需求，可以进一步细化","user_name":"作者回复","user_name_real":"朱晓峰","uid":"2356905","ctime":1621560109,"ip_address":"","comment_id":288796,"utype":1}],"discussion_count":1,"race_medal":1,"score":"27388482866","product_id":100073201,"comment_content":"<br>请问老师，<br>一个完整的数据库设计文档应该包含哪些内容呢？<br>","like_count":6,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518740,"discussion_content":"一般来说应该包括需求分析、建模（ER）、逻辑设计（比如建库建表）、物理设计（比如索引）、实施、运维（容灾和备份）等，根据实际需求，可以进一步细化","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1621560109,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":288798,"user_name":"giteebravo","can_delete":false,"product_type":"c1","uid":1005290,"ip_address":"","ucode":"C087E8D6B5A98B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/ea/32608c44.jpg","comment_is_top":false,"comment_ctime":1618679417,"is_pvip":false,"replies":[{"id":"106444","content":"触发器时一种由SQL操作触发的存储程序。事务是指一系列SQL操作，要么全部执行，要么全部不执行。触发器中的SQL操作可以是事务操作，也可以不是。","user_name":"作者回复","user_name_real":"朱晓峰","uid":"2356905","ctime":1621560469,"ip_address":"","comment_id":288798,"utype":1}],"discussion_count":1,"race_medal":1,"score":"10208614009","product_id":100073201,"comment_content":"<br>触发器和事务的根本差别在哪呢？<br>","like_count":2,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518742,"discussion_content":"触发器时一种由SQL操作触发的存储程序。事务是指一系列SQL操作，要么全部执行，要么全部不执行。触发器中的SQL操作可以是事务操作，也可以不是。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1621560469,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":332545,"user_name":"jjn0703","can_delete":false,"product_type":"c1","uid":1076652,"ip_address":"","ucode":"83AF403AC7DFB7","user_header":"https://static001.geekbang.org/account/avatar/00/10/6d/ac/6128225f.jpg","comment_is_top":false,"comment_ctime":1643334941,"is_pvip":true,"replies":[{"id":"123473","content":"建议对流程进行管控，也可以借助一些流程控制软件，辅助以公司的规章制度、培训等手段，这个问题应该可以得到解决","user_name":"作者回复","user_name_real":"编辑","uid":"2356905","ctime":1647072817,"ip_address":"","comment_id":332545,"utype":1}],"discussion_count":1,"race_medal":5,"score":"5938302237","product_id":100073201,"comment_content":"请教一下老师，数据库设计文档如何做的版本管理，团队协作时候，变更有的同事直接就在Navicat上操作提交了","like_count":1,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555779,"discussion_content":"建议对流程进行管控，也可以借助一些流程控制软件，辅助以公司的规章制度、培训等手段，这个问题应该可以得到解决","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647072817,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310810,"user_name":"流云追风","can_delete":false,"product_type":"c1","uid":2611950,"ip_address":"","ucode":"16D738406CB191","user_header":"https://static001.geekbang.org/account/avatar/00/27/da/ee/63090718.jpg","comment_is_top":false,"comment_ctime":1630919274,"is_pvip":false,"replies":[{"id":"113741","content":"同意","user_name":"作者回复","user_name_real":"朱晓峰","uid":"2356905","ctime":1632798683,"ip_address":"","comment_id":310810,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5925886570","product_id":100073201,"comment_content":"大量数据更新或插入时,如果存在表上的触发器会影响性能的","like_count":1,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526363,"discussion_content":"同意","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632798683,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":290080,"user_name":"小明针不戳","can_delete":false,"product_type":"c1","uid":2016188,"ip_address":"","ucode":"64D729196221E2","user_header":"https://static001.geekbang.org/account/avatar/00/1e/c3/bc/77549ce4.jpg","comment_is_top":false,"comment_ctime":1619351234,"is_pvip":true,"replies":[{"id":"106473","content":"可以在网上搜一下“数据库设计文档”，有很多信息可以参考。不过在我看来，形式并不是最重要的。重要的是要把设计的细节都记录下来并且及时更新，这样才能起到作用。但是文档维护需要耗费大量时间精力，是非常有挑战性的工作。","user_name":"作者回复","user_name_real":"朱晓峰","uid":"2356905","ctime":1621561580,"ip_address":"","comment_id":290080,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5914318530","product_id":100073201,"comment_content":"老师能不能提供一个数据库设计文档给我们学习一下啊..","like_count":1,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519105,"discussion_content":"可以在网上搜一下“数据库设计文档”，有很多信息可以参考。不过在我看来，形式并不是最重要的。重要的是要把设计的细节都记录下来并且及时更新，这样才能起到作用。但是文档维护需要耗费大量时间精力，是非常有挑战性的工作。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1621561580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1658413,"avatar":"https://static001.geekbang.org/account/avatar/00/19/4e/2d/06d3f9f5.jpg","nickname":"静✨","note":"","ucode":"1B33229C206339","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":574849,"discussion_content":"在日本开发，深感其受","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654406260,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":519105,"ip_address":""},"score":574849,"extra":""}]}]},{"had_liked":false,"id":288792,"user_name":"lesserror","can_delete":false,"product_type":"c1","uid":1351076,"ip_address":"","ucode":"25A54D1165FCF6","user_header":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","comment_is_top":false,"comment_ctime":1618675457,"is_pvip":false,"replies":[{"id":"106431","content":"是的","user_name":"作者回复","user_name_real":"朱晓峰","uid":"2356905","ctime":1621559758,"ip_address":"","comment_id":288792,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5913642753","product_id":100073201,"comment_content":"触发器实现的功能让我想到了web框架的模型事件。实现的也是模型更新、删除等前后需要执行的操作。<br><br>所以现在在代码层面处理这类多个表数据之间的数据一致性操作变得没有那么麻烦。<br><br>触发器最大的弊端就是隐蔽了，如果业务中大量使用了触发器，需要在编程语言和触发器语法之间来回横跳，加大了系统维护成本。","like_count":2,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518739,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621559758,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":347768,"user_name":"静✨","can_delete":false,"product_type":"c1","uid":1658413,"ip_address":"","ucode":"1B33229C206339","user_header":"https://static001.geekbang.org/account/avatar/00/19/4e/2d/06d3f9f5.jpg","comment_is_top":false,"comment_ctime":1654407141,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1654407141","product_id":100073201,"comment_content":"适用于频繁或者大批量的数据状态同步处理。还有老师说的记log和入参检查。<br>印象里只有一个日本的现场用到了触发器，刚开始还惊奇，现在想了一下大概是因为他们维护了所有的文档吧😂 还包含存储过程和各种视图。","like_count":0},{"had_liked":false,"id":313163,"user_name":"彭彬","can_delete":false,"product_type":"c1","uid":2680555,"ip_address":"","ucode":"5AF4F4D7163DFE","user_header":"https://static001.geekbang.org/account/avatar/00/28/e6/eb/7b7c0101.jpg","comment_is_top":false,"comment_ctime":1632299913,"is_pvip":false,"replies":[{"id":"116483","content":"我没有发现","user_name":"作者回复","user_name_real":"朱晓峰","uid":"2356905","ctime":1636622539,"ip_address":"","comment_id":313163,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1632299913","product_id":100073201,"comment_content":"Oracle的行级触发器有变异表的问题，MySQL的触发器有这个问题吗？<br>","like_count":0,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527253,"discussion_content":"我没有发现","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636622539,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":305468,"user_name":"大聖","can_delete":false,"product_type":"c1","uid":2485664,"ip_address":"","ucode":"5FD991D883BE78","user_header":"https://static001.geekbang.org/account/avatar/00/25/ed/a0/cc89c128.jpg","comment_is_top":false,"comment_ctime":1627983520,"is_pvip":false,"replies":[{"id":"112601","content":"\\G 的作用是控制输出的格式，使得查看触发器的显示结果更直观一些","user_name":"作者回复","user_name_real":"朱晓峰","uid":"2356905","ctime":1630906822,"ip_address":"","comment_id":305468,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1627983520","product_id":100073201,"comment_content":"<br>SHOW TRIGGERS\\G;   后面多出来的\\G是不是特殊字符转义了还是啥？","like_count":0,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":524395,"discussion_content":"\\G 的作用是控制输出的格式，使得查看触发器的显示结果更直观一些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630906822,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2641149,"avatar":"https://static001.geekbang.org/account/avatar/00/28/4c/fd/237ee970.jpg","nickname":"见字如晤","note":"","ucode":"2CBA86D3254B85","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":570332,"discussion_content":"SHOW TRIGGERS\\G\tError Code: 1064. You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#39;\\G&#39; at line 1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651735297,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":524395,"ip_address":""},"score":570332,"extra":""}]}]},{"had_liked":false,"id":297701,"user_name":"凯","can_delete":false,"product_type":"c1","uid":1405256,"ip_address":"","ucode":"60DB11CF72C7B0","user_header":"https://static001.geekbang.org/account/avatar/00/15/71/48/44df7f4e.jpg","comment_is_top":false,"comment_ctime":1623739995,"is_pvip":false,"replies":[{"id":"109148","content":"1. 是的，new&#47;old表示触发前后的数据，有个new&#47;old，才能方便我们写触发程序<br>2. 先写deposithist，再修改membermaster，这样做不好，原因是程序的可读性差","user_name":"作者回复","user_name_real":"朱晓峰","uid":"2356905","ctime":1625717992,"ip_address":"","comment_id":297701,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1623739995","product_id":100073201,"comment_content":"<br><br>NEW.memberid,NOW(),<br>OLD.memberdeposit,<br>NEW.memberdeposit,<br>NEW.memberdeposit-OLD.memberdeposit;<br>创建触发器的时候，里面有大量的new、old，这个是触发器特有的变量么？<br><br>还有一个问题，修改逻辑这个两个表的修改顺序能不能切换一下，先修改deposithist，再修改membermaster，创建触发器监控deposithist，如果这个表有变动，直接吧membermaster的直接直接修改。<br>","like_count":0,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521912,"discussion_content":"1. 是的，new/old表示触发前后的数据，有个new/old，才能方便我们写触发程序\n2. 先写deposithist，再修改membermaster，这样做不好，原因是程序的可读性差","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625717992,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}