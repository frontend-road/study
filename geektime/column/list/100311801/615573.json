{"id":615573,"title":"08｜数据库设计：怎样按领域模型设计数据库？","content":"<p>你好，我是钟敬。</p><p>这节课，我们来学习数据库设计。</p><p>前面我们说过，模型驱动设计可以分成两大部分：模型的建立和模型的实现。模型的建立要求模型和业务需求一致，模型的实现要求实现和模型一致。现在，咱们已经建立了领域模型，并且从理论层面对模型驱动设计的概念进行了总结，这些都属于模型的建立。而我们这节课要做的数据库设计，则属于模型的实现。</p><p>那么，怎样由领域模型，一步一步地推导出数据库的设计呢？这种方法和以前的方法有什么不同呢？这节课我们就来讨论这两个问题。在这个过程中，我们要着重体会<strong>数据库设计是如何与领域模型保持一致的</strong>。</p><p>今天讲的内容，在软件工程中叫做建立<strong>物理数据模型</strong>（physical data model, PDM），主要目的就是对数据表进行设计。具体来说，包括以下几点：</p><ul>\n<li>建立哪些表；</li>\n<li>表中有哪些字段；</li>\n<li>表的主键和外键是什么；</li>\n<li>字段的数据类型以及约束。</li>\n</ul><p>还有一点要说明，虽然我们的例子是用MySQL完成的，但我们讲的是通用原理，所以采用其他数据库引擎的话，道理也是一样的。</p><p>我们在领域建模的时候把模型分成了四个模块，下面，我们就一个模块一个模块地进行数据库设计。</p><p><img src=\"https://static001.geekbang.org/resource/image/da/c3/da146dd3yy8faefa7494001fa7af89c3.jpg?wh=3733x2260\" alt=\"\"></p><h2>“租户管理”的数据库设计</h2><p>咱们就从最简单的<strong>租户管理</strong>模块开始吧，下面是这个模块的模型图：<br>\n<img src=\"https://static001.geekbang.org/resource/image/f6/a7/f666bf21bcffb52edf2fcd2ac11d37a7.jpg?wh=3733x2260\" alt=\"\"></p><!-- [[[read_end]]] --><p>一般来说，<strong>一个实体可以映射为一个数据库表</strong>。所以，咱们可以先根据租户实体设计出租户表。可以用下面的符号表示：<br>\n<img src=\"https://static001.geekbang.org/resource/image/ea/88/ea0d8686498b8df9aa03a0ac5cac3288.jpg?wh=3391x1380\" alt=\"\"></p><p>前面说过，今天的内容，是建立物理数据模型。和UML不同，<strong>物理数据模型的图示法并没有统一的国际标准</strong>。所以不同的专家、不同的工具，画出来的都不太一样。这里我用了绘图工具（draw.io）中提供的符号。</p><p>另外，还可以用建表语句（create table） 表示表的结构。建表语句和图形符号是同一个意思的两种等价的表示方法，比如上图可以直接翻译成下面的建表语句：</p><pre><code class=\"language-plain\">CREATE TABLE tenant (\n   id INT PRIMARY KEY\n);\n</code></pre><p>所以，原则上直接用建表语句进行数据库设计也是可以的。不过为了直观，我们的课程中还是用图示的方法。</p><p>下面我们仔细看看表示数据表的符号。</p><p><strong>首先看这个符号的第一行，这里的 tenant 是表的名称。</strong>在领域建模阶段，为了和领域专家进行沟通，模型中使用的都是中文。但建表时，一般要用英文来命名。那问题就来了，怎么保证中英文的一致，从而在实现层面贯彻统一语言呢？</p><p>答案就是使用我们前面建的词汇表。在词汇表里，我们规定了每个中文词汇对应的英文全称和简称。在为数据库表以及字段等命名时，如果词汇表中有简称就用简称，否则就用全称。我们把词汇表在这里再列一遍作为参考。<br>\n<img src=\"https://static001.geekbang.org/resource/image/13/cf/138dcc3b3eb73fd4cb17868821ee69cf.jpg?wh=3051x2658\" alt=\"\"></p><p>在词汇表里，查到租户的英文是 tenant，所以用它作为表的名称。</p><p><strong>然后我们再看这个表符号的第二行，这是表的主键，</strong>包括主键的名称 “id” 和数据类型 “int” 。“PK”（primary key）表示这个字段是一个主键。</p><p>除了这种命名法以外，主键命名的另一种常见做法是<strong>包含表名</strong>，也就是命名为 tenant_id。不过我比较习惯极简主义，所以只用了 id。两种方法都可以，根据你具体项目的规定来选择就行了。</p><p><strong>最后，我们再为这个表添加其他字段。领域模型中的属性，一般会映射成表中的字段</strong>。</p><p>在领域建模的时候，为了模型的简洁和稳定，我们主张只写出有助于表达实体含义的主要属性，一些不言自明的属性就不用写了。但在数据库设计阶段，就要根据需求列出所有字段了。这里，我们要补充下面几个字段：</p><p><img src=\"https://static001.geekbang.org/resource/image/c2/d1/c2d163529f4495e32409f869ee8fd5d1.jpg?wh=3072x1765\" alt=\"\"><br>\nname表示租户的名称。created_at，created_by，last_updated_at 和 last_updated_by 分别表示一条记录的创建时间、创建人、最后一次修改时间和最后一次修改人。创建人和最后修改人保存的是用户的 id。</p><p>这四个字段常常被称为<strong>审计字段</strong>，可以用来进行安全审计和错误排查。作为一种最佳实践，我们在每一个表中都会包含这四个字段。</p><h2>“组织管理”的数据库设计</h2><p>做好了租户管理，我们继续为组织管理进行数据库设计。领域模型如下：<br>\n<img src=\"https://static001.geekbang.org/resource/image/f0/fd/f03d62d061505fae4de8e9bfa90a9dfd.jpg?wh=3733x2296\" alt=\"\"></p><p>首先，我们用类似的方法为<strong>组织实体</strong>建表，如下图：<br>\n<img src=\"https://static001.geekbang.org/resource/image/26/e9/26fe5b133a67297ae7ddf72a22a717e9.jpg?wh=3733x1729\" alt=\"\"></p><p>先看图中的<strong>实线箭头</strong>，这个箭头代表外键参照关系。按照领域模型，租户和组织是一对多关联。<strong>一个一对多关联，在数据库设计时可以映射成一个外键</strong>。</p><p>图中的FK（foreign key) 代表外键。FK = tenant_id 说明 org 表中指向 tenant 表的外键是 tenant_id 字段。</p><p><strong>此外，我们还添加了非空（NOT NULL）约束。</strong>这和领域模型中的多重性有关。租户和组织间的关联，在租户端实际是“1..1”，也就是说一个组织至少会关联一个租户，最多也只能关联一个租户。“1..1”前面的“1”就映射成了组织表里 tenant_id 字段后面的非空约束。假如不是“1..1”而是“0..1”，那么就不会有 NOT NULL 了。所以，<strong>关联上的多重性决定了外键字段的非空约束</strong>。</p><p>不过，在基于云的应用里，为了减少数据库处理的瓶颈，一般不主张建立真正的外键，而是用程序来保证外键约束。但是在物理数据模型里，我们又希望表达外键参照，方便理解数据表间的关系。这时候，我们可以把实线箭头换成虚线箭头，表示<strong>虚拟外键</strong>，如下图：<br>\n<img src=\"https://static001.geekbang.org/resource/image/09/db/09473606112dcc2e130cedd8c03ef7db.jpg?wh=3733x1786\" alt=\"\"></p><p>后面我们所有的数据表设计都采用虚拟外键。</p><p>事实上，数据库中其他所有表都有一个指向 <strong>tenant</strong> 表的虚拟外键，以便区分是哪个租户的数据。如果每个虚拟外键都画出来，我们的图会变得很乱，所以后面就只在表中写出 tenant_id，不画箭头了，我们可以用一个注释说明这件事。<br>\n<img src=\"https://static001.geekbang.org/resource/image/15/32/1578bf0c46e785c6b9c0242852a1ed32.jpg?wh=3733x2260\" alt=\"\"></p><p>接下来，咱们用类似的方法完成<strong>组织</strong>、<strong>组织类别</strong>和<strong>员工实体</strong>。如下图：<br>\n<img src=\"https://static001.geekbang.org/resource/image/a3/0b/a3a53876bbf81cb6e72e146e5d1eb70b.jpg?wh=3733x2260\" alt=\"\"></p><p>我们为这张图补充几点说明。</p><p>首先看 <strong>org（组织）表</strong>，这里有一个指向自身的虚拟外键 superior_id ，表示组织之间的上级关系，对应于领域模型中的自关联。</p><p>然后还可以看到 <strong>emp</strong>（员工）表和 <strong>org</strong> 表之间有两个方向相反的虚拟外键，一个表示<strong>组织</strong>的<strong>负责人</strong>关系，另一个表示<strong>员工</strong>归属于哪个<strong>组织</strong>。</p><p>另外，<strong>emp 表中</strong>的 num、id_num、name、gender、dob 分别表示员工号、身份证号、姓名、性别和出生日期（date of birth）。</p><p>最后，我们来处理<strong>岗位</strong>。</p><p><img src=\"https://static001.geekbang.org/resource/image/18/6f/18ff0c7cb44e690b7b27e9d6edeb9c6f.jpg?wh=3733x2260\" alt=\"\"></p><p>你可能注意到了，岗位和员工之间是<strong>多对多关联。这时，我们必须增加一个关联表</strong>，来表达两者之间的关系，如下图：<br>\n<img src=\"https://static001.geekbang.org/resource/image/57/67/5722f6e5abd44822409f31ff0ee2f667.jpg?wh=3733x2260\" alt=\"\"><br>\n这里，我们增加了 <strong>emp_post 表来表达多对多的关联</strong>。表中包含了 post (岗位) 和 emp 两个表的主键作为自己的虚拟外键。我们采用了由 emp_id 和 post_id 两个字段组成的复合主键，因为这时添加一个单独的 id 主键并没有什么意义。</p><p>一般来说，我们都主张用单独的 <strong>id</strong> 主键，只有符合以下两个条件时，才应该使用上面这种联合主键：</p><p><strong>第一</strong>，两个外键字段，例如 <strong>emp_id</strong> 和 <strong>post_id</strong> ，唯一决定了一条记录；</p><p><strong>第二</strong>，这个表的主键没有被其他表作为外键引用。</p><h2>“项目管理”数据库设计</h2><p>好，现在我们完成了<strong>组织管理模块</strong>的数据库设计，接着做<strong>项目管理</strong>模块。在下面这张领域模型图中，我省略了和项目管理无关的部分。<br>\n<img src=\"https://static001.geekbang.org/resource/image/09/51/094961bf9b965f358cf5a7dc9637a951.jpg?wh=3595x2260\" alt=\"\"></p><p>用前面的方法，我们可以画出项目管理模块的物理数据模型图：<br>\n<img src=\"https://static001.geekbang.org/resource/image/ed/cb/ed4398dfcdb7a2ee712ece063b16bdcb.jpg?wh=3600x3728\" alt=\"\"></p><p>在这张图里，有没有注意到员工表的名称写成了 <strong>emp: 2</strong> ，而且除了主键以外没有其他属性？</p><p>这其实是一种绘图技巧。为了避免整张图像蜘蛛网一样凌乱，我们不打算把所有表都画在同一张图上，而是每个模块画一张。而 <strong>emp</strong> 表在<strong>组织管理</strong>中出现过一次，在<strong>项目管理</strong>中又出现了，所以我们用了 <strong>emp: 2</strong> 说明这是 emp 表的第 <strong>“2”</strong> 次出现。</p><p>至于属性，我们只在 emp 表第一次出现的时候详细写出来就可以了，其他地方不写属性，这样，当需要更改属性的时候，只改一个地方就可以了。</p><h2>“工时管理”的数据库设计</h2><p>完成了<strong>项目管理</strong>模块，我们来设计最后的<strong>工时管理</strong>模块。领域模型图如下：<br>\n<img src=\"https://static001.geekbang.org/resource/image/11/5c/110feaecd3be68a21a6c186bb3015a5c.jpg?wh=3733x2260\" alt=\"\"></p><p>用我们前面的知识，很容易就能做出下面的设计：<br>\n<img src=\"https://static001.geekbang.org/resource/image/67/35/67bcc7edbbeda444d4827ddb8f4ff635.jpg?wh=3733x2260\" alt=\"\"></p><p>到这里，数据库设计就完成了。那么让我们再思考一下，这种基于领域模型的方法和我们以前常用的做法有什么区别呢？</p><h2>按照DDD进行数据库设计和“以前方法”的对比</h2><p>要回答这个问题，我们先来明确一下这里所谓以前的方法指什么。传统的软件工程中本来就有一套以ER图为工具、规范的数据库设计方法。不过我们多数小伙伴并没有严格按照这种方法去做，而是直接拍脑袋设计数据表。我们可以把这两种方法称为“ER图法”和“拍脑袋法”，看看它们和我们这节课的方法有什么区别。</p><h3>与“拍脑袋法”的区别</h3><p>先看看和“拍脑袋法”的区别。如果我们只是靠直觉设计数据库，不去深入分析领域知识，虽然刚开始时可能可以满足业务需求，但随着需求越来越复杂，问题就会逐渐浮现出来。</p><p>首先我们要知道，无论是数据模型图还是建表语句，都是面向技术人员的，业务专家很难理解。所以我们无法使用这些方式和业务专家沟通，也就很难保证数据库设计能准确地反映领域知识。而按照DDD的方法，我们可以先基于领域模型和业务专家对齐需求，再把领域模型转换为数据库设计，从而解决领域知识的沟通问题。</p><p>第二个问题在于，这样随意的数据库设计，很可能会违反数据库设计的范式，造成数据冗余和潜在错误。范式（NF）是规范形式（Normal Form）的简称，核心思想在于避免数据的冗余。也就是说，数据表的范式越高，数据冗余就越少。</p><p>不过在实践中，一般做到第三范式就够了。范式并不是用于直接进行数据库设计的，而是正确的数据库设计的反向验证。正确地运用领域模型进行数据库设计，一般而言，就不会违反第三范式了。</p><h3>与“ER图法”的区别</h3><p>接着再看看我们的方法与“ER图法”的区别。</p><p>传统的软件工程，是按照“概念设计”“逻辑设计”和“物理设计”的步骤进行数据库设计的。其中概念设计和逻辑设计，通常会采用ER图，也就是实体联系图。ER图同样没有业界统一的标准，有多种画法。下面这张图用了一种常用的画法，表示组织和员工的一对多关系。</p><p><img src=\"https://static001.geekbang.org/resource/image/06/43/06fa71345421ddd6cbf6ab6426fb0543.jpg?wh=3733x1664\" alt=\"\"></p><p>这里要注意一点，<strong>有些人以为前面的物理数据模型图就是ER图，其实是不对的。</strong>ER图的关注点和领域模型图类似，是实体以及实体之间的关联关系，而物理数据模型图关注的是表、字段、主键和外键等等。</p><p>那ER图法和我们这节课讲的方法有什么区别呢？</p><p>首先，采用UML类图描述的领域模型图是ER图的<strong>超集</strong>。也就是说，ER图能表达的，领域模型图都能表达；而领域模型图能表达的，ER图未必能表达。因此，使用领域模型图以后，我们就不必再使用ER图了。</p><p>其实我们前几节课进行的领域建模，大体上相当于传统意义上的“概念设计”。如果把领域模型中的属性都补全，就相当于传统意义的“逻辑设计”了。而我们今天做的，其实就是传统上的“物理设计”，所以产物叫做“物理数据模型”。</p><p>第二个区别是，ER图只能表达静态的数据关系，只用于数据库设计，而领域模型图则可以将静态数据和动态行为绑定，不仅可以用于数据库设计，还可以用于程序设计，这一点我们在后面的课程会看到。也就是说，基于DDD的方法能够保证程序设计和数据库设计的高度统一。</p><p>第三个区别是，领域模型对应的主要是传统软件工程的分析模型，而ER图在传统软件工程里则处于设计阶段，所以两者的层次和使用场合也是不一样的。</p><h2>总结</h2><p>好，这节课的主要内容就讲完了，我们来总结一下。</p><p>DDD主张要根据领域模型来进行数据库设计，保证数据库和领域模型的一致，从而保证数据库和业务需求以及代码的一致性。在进行数据库设计时，我们可以用<strong>物理数据模型图</strong>，也可以直接用建表语句，两者基本是等价的。为了直观，我们采用了图示的方法。</p><p>对数据表、字段等等的命名，应该依据词汇表，以便保证<strong>统一语言</strong>。一般来说，领域模型中的实体映射为数据库中的表；领域模型中的属性，映射成表中的字段。同时还要根据需求补充更多的字段。</p><p>模型中的一个一对多关联，可以映射成一个外键字段，以及一个外键约束。但基于云的应用一般不会真的建立外键约束，而外键的逻辑关系还是存在的。我们用虚线箭头表示这种逻辑上的外键关系，称为虚拟外键。对于多对多关联，我们必须增加一个关联表，其中包括了两个实体表各自的主键。另外，关联上的多重性决定了外键字段的非空约束。</p><p>最后，我们还总结了基于DDD的数据库设计和以前方法的区别。比起“拍脑袋”的方法，DDD的方法更容易和业务专家对齐领域知识，而且不容易违反数据库设计范式。另一方面，DDD方法是ER图法的“超集”，并且能够将静态数据和动态逻辑整合在一起，达到业务、数据库和代码三者的统一。</p><h2>思考题</h2><p>最后有两个思考题：</p><p>1.我们在多数数据表设计中都用了没有业务含义的 id 作为主键，这种做法比起使用有业务含义的字段做主键有什么优点？</p><p>2.我们今天讲的数据表设计都是符合第三范式的，但有时为了性能的原因，常常会有意引入冗余字段，进行“反规范化”设计。在反规范化设计中，你觉得应该注意什么呢？</p><p>好，今天的课程结束了，有什么问题欢迎在评论区留言，下节课，我们讲解DDD代码的分层架构，开始进入编程阶段。</p>","comments":[{"had_liked":false,"id":365499,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"福建","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":true,"comment_ctime":1672678115,"is_pvip":false,"replies":null,"discussion_count":5,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"以下内容，仅个人补充，不一定正确。与大家探讨。\n1.POJO（Plain Old Java Object） 和 POCO（Plain Old CLR Object）以及 PI（Persistence Ignorance）。在ddd里，持久化对象与具体的持久化实现机制之间应该是隔离的，虽然这可能是过度设计，但思路并没有毛病。所以，可能不需要特别关心。\n\n2. not null 这个事，部分公司dba很可能会强制限制默认都是not null， 用def处理 null场景。 道理大家应该也懂。 数据库存储承载模型关系？第一次见，有新意，就是感觉载体不大稳定（存储随意，与领域模型本就没有1:1的必然性）。\n\n3.表命名，有些公司规范可能要 xxx团队_xxx项目_xxx模块_xxx表名。图省事，因为CDC的时候表可能是打散的（比如，ODPS），这时候需要做去重+定位。（当然，你也可以CDC映射时转名字，就是可能要做多次，毕竟CDC不一定就到一个平台，手工多次重复操作？很容易出问题《墨菲定律》）\n\n课后题:\n1.没有业务含义的 id 作为主键?不确定是指主键名叫id，还是指主键值没有业务含义。两个都回答下，前者部分low的orm框架的插件限制（不叫id没法自动生成代码）；后者是从数据库的性能（B+树要维护有序性）和内存空间占用（其他索引叶子节点空间大小）考虑，但事无绝对，例如 单索引 kv场景。（减少一次回表，抵消写时索引树排序， 无其他索引，无叶子节点空间浪费）。\n2.避免了数据冗余并不意味着代码能支持重用，遵守与否都不解决核心问题，所以不用太纠结。更何况存储不见得一直都是关系性数据库。把它当成持久化的一种实现手段，大胆干有问题就改就是。过度在意反而可能影响模型设计，毕竟关系性数据库的范式包含性能等一系列考虑并不是很适应代码模型的设计。","like_count":6,"discussions":[{"author":{"id":1959822,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/e7/8e/318cfde0.jpg","nickname":"Spoon","note":"","ucode":"2FF9193AD482C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":636964,"discussion_content":"大哥在阿里工作过？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1707371175,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1959822,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/e7/8e/318cfde0.jpg","nickname":"Spoon","note":"","ucode":"2FF9193AD482C2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":637706,"discussion_content":"都是同学，干过一段时间。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1708841502,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":636964,"ip_address":"福建","group_id":0},"score":637706,"extra":""}]},{"author":{"id":3326979,"avatar":"https://static001.geekbang.org/account/avatar/00/32/c4/03/511aa353.jpg","nickname":"H","note":"","ucode":"06D57447BF1A47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":600412,"discussion_content":"请问，你们在实践时候。是先做domain层业务实体然后直接测试业务实体，最后再加仓储么？我这边是nosql直接做仓库用的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1674316449,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"山西","group_id":0},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":3326979,"avatar":"https://static001.geekbang.org/account/avatar/00/32/c4/03/511aa353.jpg","nickname":"H","note":"","ucode":"06D57447BF1A47","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":600434,"discussion_content":"仓储的接口会先写。实现靠后。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1674357105,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":600412,"ip_address":"福建","group_id":0},"score":600434,"extra":""},{"author":{"id":3326979,"avatar":"https://static001.geekbang.org/account/avatar/00/32/c4/03/511aa353.jpg","nickname":"H","note":"","ucode":"06D57447BF1A47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":600436,"discussion_content":"谢谢，俺也一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1674357974,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":600434,"ip_address":"山西","group_id":0},"score":600436,"extra":""}]}]},{"had_liked":false,"id":364901,"user_name":"╭(╯ε╰)╮","can_delete":false,"product_type":"c1","uid":1440349,"ip_address":"广东","ucode":"4CB5FAEEE8CC5D","user_header":"https://static001.geekbang.org/account/avatar/00/15/fa/5d/735fdc76.jpg","comment_is_top":false,"comment_ctime":1671685063,"is_pvip":false,"replies":[{"id":132875,"content":"其实我和你有过类似的感受呀","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1671695466,"ip_address":"广东","comment_id":364901,"utype":1}],"discussion_count":4,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"自从入行，有四件事阻止了我在技术上的发展\n\n一是数据库范式\n二是单元测试\n三是领域驱动设计\n四是docker\n\n这些东西我甚至比极客时间上的老师接触到的还要早，但是奇妙的事情是我的同事没有一个支持这四个概念，大部分都是持反对态度。同事的“阻挠”让我起了个大早，赶了个晚集。现在看着老师们布道，回想当年同事们看我的眼神，好像我是异教徒，伤感自己生不逢时，好人所恶。自己越是执念越会被社会教育。\n\n随波逐流crud到现在，终于觉得自己熬出头，见到自己曾经执着并放弃的东西又回到了自己的身边。自己没有能力做到的事情看着别人做到，事实挺开心的。\n\n希望老师的课程能让更多的人有所收获。","like_count":16,"discussions":[{"author":{"id":2217569,"avatar":"https://static001.geekbang.org/account/avatar/00/21/d6/61/791d0f5e.jpg","nickname":"xiangyt","note":"","ucode":"9181C75EC05FF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613684,"discussion_content":"懒，是人性。懒，也是推进世界前进的动力。\n以TDD为例，别看吹的火爆，实际坚持落地的企业是少数。\n这里面，有交付效率&gt;交付质量的时代背景，更有违反了人性的因素。\n\n别着急反驳我，先问问自己TDD的不足是什么。\n没有什么东西是完美的，允许我们吹捧TDD的保质量，也要正视TDD的短板。\n思路要打开，可以尝试代入多个角色的观点看待TDD：\n最终客户如何看待TDD、产品经理如何看待TDD、系统运维管理员如何看待TDD\n项目经理如何看待TDD、技术经理如何看待TDD、CQ如何看待TDD\n以及我们自己如何看待TDD……\n\n圈外人一般人会无所谓，只要不要触犯他的利益。\n其实圈内人也是如此。\n比如QA一般会很欢迎，因为起码TDD能让冒烟通过。\n但你说你们架构师会很在意你写不写TDD吗，你写不写TDD能影响到他的架构演进？别开玩笑了。\n\n所以这就是TDD的不足，重视质量，但缺乏与世界内其他维度的交互。\n如果哪一天，项目经理说，软件预计某年月日要交付。此时TDD能有与之联动\n（比如某些功能要砍掉，某些功能简单做，能从计划任务中导出单元测试用例来）\n\n要敢想。要敢于说为什么、为什么不。\n上TDD，目前就是苦行僧。没有说你不好，而是你的定位太高了，不适合普罗大众。\n芸芸众生就是想偷懒摸鱼的。\n我认为，只要解决了TDD与周围宇宙的连接问题，它就能焕发出活力。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1681460135,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":598220,"discussion_content":"docker 没被歧视，都很认真学。靠他搭环境学技术事半功倍。 并且，最关键的，有一段时间面试是问的。如果你的同事都排斥，那很可能是圈子问题了。\n\n另外三个，国内坚持下来的人，哪个不是一路被排斥的呢。这个就跟圈子无关了，属于个人的逆行。 提一嘴，面试一般不问，大多面试都问招式（技术项）和履历而不问内功（架构设计），毕竟面试时间有限。\n当然，也不是逆行有多了不起，我觉得关键还是有没有在实际工作中解决你的问题。就像这次疫情，专家说的不算，你要相信自己对身体的判断。一个东西到底有没有技术含量，对于个人关键是看有没有创造价值，而不是道理多对，这个世界不缺对的道理。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1672674342,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"福建","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":597339,"discussion_content":"其实我和你有过类似的感受呀","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1671695466,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1275158,"avatar":"https://static001.geekbang.org/account/avatar/00/13/75/16/4dd77397.jpg","nickname":"a","note":"","ucode":"6DF2FB37C98BE6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":601042,"discussion_content":"跟你一样的经历，被人当成异类","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1675002963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"重庆","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":365422,"user_name":"老狗","can_delete":false,"product_type":"c1","uid":1540332,"ip_address":"广东","ucode":"80927B4D31CFCE","user_header":"https://static001.geekbang.org/account/avatar/00/17/80/ec/b6149cbf.jpg","comment_is_top":false,"comment_ctime":1672491590,"is_pvip":false,"replies":[{"id":133255,"content":"回答得很全面了 👍🏻","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1673089872,"ip_address":"广东","comment_id":365422,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"问题1: 有以下几个因素： \n首先由业务含义的字段虽然业务上不允许重复，但有些时候会出现意料之外的场景，比如拿学生的名字作为主键就会遇到重名的问题，我父亲就是因为重名问题考虑把我名字里的一个字改了，避免了很多困扰。\n其次业务主键一般都为字符型，考虑到数据库优化，有的时候递增主键会带来一些效率\n再次业务上的唯一主键有些时候为联合主键，维护起来难度更加提升\n再再次，解耦业务需求和技术实现。\n问题2: 一致性问题是冗余字段必须要考虑的首要问题，就是冗余字段和冗余来源之间的一致性，另外就是性能问题了\n","like_count":7,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":598783,"discussion_content":"回答得很全面了 👍🏻","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1673089872,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1157771,"avatar":"https://static001.geekbang.org/account/avatar/00/11/aa/8b/6843a110.jpg","nickname":"yuzhe","note":"","ucode":"CDD4521583E82F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":618725,"discussion_content":"留言挺有价值的。不知道 geekbang 能否支持对留言做笔记？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1684484886,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1731513,"avatar":"","nickname":"mekswhy","note":"","ucode":"3CEDCA523376B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":617039,"discussion_content":"自增主键id可以简单输出不用考虑脱敏的问题，例如账号、身份证等有敏感信息","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683278037,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":365292,"user_name":"leesper","can_delete":false,"product_type":"c1","uid":1351104,"ip_address":"广东","ucode":"CC76320571BECA","user_header":"https://static001.geekbang.org/account/avatar/00/14/9d/c0/cb5341ec.jpg","comment_is_top":false,"comment_ctime":1672323866,"is_pvip":false,"replies":[{"id":133249,"content":"两个思考题都回答得很到位。\n\n关于您的问题，“项目成员”确实是“项目”和“员工”之间的多对多关系，但是项目和员工两者的关键字组合，并不能唯一确定一条项目成员。这是因为成员可以加入项目，再退出，再加入。也就是说，至少要在“项目”和“员工”的关键字基础上，再加一个“开始时间”才能做联合主键。这样在理论上是可以的，但不够简洁，而且未来可能还有变化，搞不好又要再加一个字段做主键。所以在这种情况下，干脆用一个ID算了。","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1673058856,"ip_address":"广东","comment_id":365292,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"前面阳了几天休息了一下，今天可以继续学习了，思考题：\n\n1. 用没有业务含义的id作为主键我觉得是一种分离关注点的设计方式；业务是在变化的，今天适合用来做主键的业务字段，未来未必，索性约定俗成用id算了\n\n2. 符合范式的数据库设计是为了写操作的高效（没有冗余就没有重复的写，同时避免疏忽大意造成漏写），适当的冗余是为了读操作的高效（不必join很多张表才能拿到自己想要的数据）。所以做冗余设计的数据主要用来读，而不是写，比如一些历史的交易流水数据什么的，经常变的数据就不适合做这种冗余设计了\n\n钟老师我有个问题请教下：我记得前面几节课说过，员工和项目之间的“项目成员”关系、“工时记录”关系，不都是多对多吗？为啥不用联合主键的方式设计，而仍然采用id呢？","like_count":5,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":598758,"discussion_content":"两个思考题都回答得很到位。\n\n关于您的问题，“项目成员”确实是“项目”和“员工”之间的多对多关系，但是项目和员工两者的关键字组合，并不能唯一确定一条项目成员。这是因为成员可以加入项目，再退出，再加入。也就是说，至少要在“项目”和“员工”的关键字基础上，再加一个“开始时间”才能做联合主键。这样在理论上是可以的，但不够简洁，而且未来可能还有变化，搞不好又要再加一个字段做主键。所以在这种情况下，干脆用一个ID算了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1673058856,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1253615,"avatar":"https://static001.geekbang.org/account/avatar/00/13/20/ef/a026e336.jpg","nickname":"立鹰","note":"","ucode":"2EA2064807CC55","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":606244,"discussion_content":"项目成员表只记录当下有效的关系，已经过期的历史关系都移到另一种历史表去，是否就可以项目和员工做联合主键。\n另外历史上的关系，正常来说，很少使用，转移到历史表是否可以增加查询当下项目成员的关系的速度，也简化了查询方式。不好的方面就是，移除关系记录到历史表时涉及到物理删除，存在风险。不知道这方面，如何权衡比较适合呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1677053854,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":364916,"user_name":"Geek_8ac303","can_delete":false,"product_type":"c1","uid":1888721,"ip_address":"广东","ucode":"64A176DE7F498E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIERY97h7dmXbtur6rhZWA9Jb3TtSsJh7icDdFjdLmruTXC22qibOVTmW2a04TxMhxqtNJibYL1iaU7yQ/132","comment_is_top":false,"comment_ctime":1671695805,"is_pvip":false,"replies":[{"id":133021,"content":"写得挺好👍🏻","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1672234208,"ip_address":"广东","comment_id":364916,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"表的主键不使用xx_id而是id，往往是被代码框架约束了，在很多orm模型里，save方法中是按照id不存在就插入，存在就更新\n关于违反第三范式，主要还是看表关系和业务需要，如果一个表在搜索的时候可能用到外键表的数据，如果俩个表关联还好，多于俩表，性能会严重下降。在项目初期一般都是冗余字段，来提升搜索和查询数据的性能。业务发展起来有钱有人了，就要考虑搜索引擎了。\n但是冗余了字段就要考虑，冗余字段是否会被更新，如果更新了是否要更新冗余字段，在大部分情况下都是些不经常更新的字段才冗余，为了效率，对这种不经常更新的字段就不考虑更新冗余字段","like_count":4,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":597818,"discussion_content":"写得挺好👍🏻","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1672234208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":368283,"user_name":"Geek_c33f40","can_delete":false,"product_type":"c1","uid":3462893,"ip_address":"广东","ucode":"F0DA8BB40ADBDA","user_header":"","comment_is_top":false,"comment_ctime":1676104880,"is_pvip":false,"replies":[{"id":134207,"content":"是的，感觉分开好些，看具体情况吧","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1676420695,"ip_address":"广东","comment_id":368283,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"老师您好, 审计字段是否应该显示在领域模型上面? 因为有时候审计字段也是有业务含义的, 例如发起人, 群主. 我觉得分开会更好一些.\n一方面领域模型和数据模型映射更加清晰一些.\n 一方面避免业务改动导致审议字段逻辑有变, 例如最后更新时间, 对于某些业务来说, 某些关联的变更不会影响到最后更新时间, 但对于审计来说可能对这条记录的任何修改都需要变更更新时间.\n缺点是有部分会有重复","like_count":2,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":604653,"discussion_content":"是的，感觉分开好些，看具体情况吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1676420695,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":365047,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"广东","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1672032396,"is_pvip":false,"replies":[{"id":132995,"content":"1，您说的是合理的一个点，另外，有业务含义的主键很难保证永远不会改变，但主键不应该改变。还有，复合主键在外键参照情况下可能造成主键膨胀","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1672228726,"ip_address":"广东","comment_id":365047,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"两个思考题：\n1. 规则通俗易懂，一下就能掌握规律；降低认知复杂度；\n2. 当冗余字段更新时，要更新所有相关数据，不然可能产生不可思议的 Bug。","like_count":2,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":597784,"discussion_content":"1，您说的是合理的一个点，另外，有业务含义的主键很难保证永远不会改变，但主键不应该改变。还有，复合主键在外键参照情况下可能造成主键膨胀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1672228727,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":597865,"discussion_content":"学习了，谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1672285777,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":597784,"ip_address":"浙江","group_id":0},"score":597865,"extra":""}]}]},{"had_liked":false,"id":364914,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"广东","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1671695076,"is_pvip":true,"replies":[{"id":133020,"content":"写得好👍🏻","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1672234148,"ip_address":"广东","comment_id":364914,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"有了前面的领域模型的分析和设计，再加上词汇表的加持，数据库设计看上去似乎水到渠成。\n\ncreate_at、created_by、last_updated_at、last_updated_by 这四个审计字段确实好用。\n\n文中对于外键约束的说法我比较赞同，就是清楚外键的逻辑关系，但是在实施的时候不使用数据库中的外键约束，而采用程序代码来保证。另外就是，可以考虑一定的数据冗余，这样保证查询的效率。\n\n对于思考题：\n\n1. 采用没有业务含义的 id 做主键应该已经是业界标准了吧，有业务含义的字段很难保证始终不会发生变化。另外，就是倾向于使用整型数字做主键，而不是那种很长的 UUID 字符串\n\n2. 在反规范化设计的时候，同样需要清楚哪些部分是冗余；这些数据冗余甚至可以采用一定的步骤进行统一的清洗和更新。","like_count":2,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":597817,"discussion_content":"写得好👍🏻","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1672234149,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1020525,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","nickname":"escray","note":"","ucode":"1F4204930E47C4","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":601724,"discussion_content":"最早学习编程的的时候，是按照书本上的方式，进行符合第三范式的数据库设计，使用 ER 图，可能还有从实体模型到物理模型的转换过程。后来发现这种做法比较繁琐，而且不利用后续的变更。\n\n写过一段时间的 Rails 应用，感觉一开始不去过度设计数据库，在编码过程中逐步完善的方式也挺好。\n\n其实 DDD 主要还是体现在对于业务领域的沟通理解和面向对象的分析设计，对于数据库设计的直接影响似乎没有那么大。\n\n按照专栏的说法，UML 类图是 ER 图的超集，使用领域模型图就不用再使用 ER 图了。有一种感觉，ER 图更偏向与传统软件工程下的结构化编程，而且维护成本比较高。\n\n领域模型将静态数据和动态行为绑定，静态数据指的是数据库设计么？动态行为指的是程序设计？\n\n领域模型对应分析阶段，ER 图处于设计阶段。但是感觉领域模型同时做了分析和设计。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1675390956,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":364903,"user_name":"╭(╯ε╰)╮","can_delete":false,"product_type":"c1","uid":1440349,"ip_address":"广东","ucode":"4CB5FAEEE8CC5D","user_header":"https://static001.geekbang.org/account/avatar/00/15/fa/5d/735fdc76.jpg","comment_is_top":false,"comment_ctime":1671687199,"is_pvip":false,"replies":[{"id":133022,"content":"关于id给了一个新角度。关于冗余说得好，尤其最后一个点","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1672234330,"ip_address":"广东","comment_id":364903,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"课后思考题\n\nid这个名字算是一种约定大于配置，看到这个名字大家一眼就能识别出来它是表中的主键，背后的逻辑也会被本能的浮现在脑海里。沟通时，丢给对方一个id无需多言，如果使用有业务含义的字段名，那就不好意思了，大家坐下来互相battle一下，从设计到实现，各种细节扯皮一遍，别嫌麻烦\n\n冗余的数据我个人观点是跟回表息息相关，两方面：一是如果数据库足够高级，我们能轻易得到自己需要的数据自然就不需要冗余；二是软件建模不同，结果数据是否冗余也不同，面向对象设计的好，映射到数据库上自然而然的是符合范式的。不需要花额外的功夫。","like_count":2,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":597819,"discussion_content":"关于id给了一个新角度。关于冗余说得好，尤其最后一个点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1672234330,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":382621,"user_name":"Geek4329","can_delete":false,"product_type":"c1","uid":2028951,"ip_address":"上海","ucode":"D6FB8D1B2D5DAC","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f5/97/9a7ee7b3.jpg","comment_is_top":false,"comment_ctime":1697685966,"is_pvip":false,"replies":[{"id":139706,"content":"看怎么理解“一致”这个词。仅从形式上看，未必一致，比如领域模型中的两个实体可能在数据库里对应一个表。但从本质上，两者是一致的。比如，尽管领域模型中是两个实体，数据库里是一个表，但这是因为这两个实体是1对1的关系，基于存取性能的原因，才合成一个表，两者表达的业务概念和内容是一致的。","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1699078945,"ip_address":"广东","comment_id":382621,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"老师有个疑问点，数据模型不一定和领域模型完全一致吧，领域模型和数据模型可能是一对多，多对一都有可能","like_count":1,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630935,"discussion_content":"看怎么理解“一致”这个词。仅从形式上看，未必一致，比如领域模型中的两个实体可能在数据库里对应一个表。但从本质上，两者是一致的。比如，尽管领域模型中是两个实体，数据库里是一个表，但这是因为这两个实体是1对1的关系，基于存取性能的原因，才合成一个表，两者表达的业务概念和内容是一致的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1699078945,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376933,"user_name":"Geek_a2b9d0","can_delete":false,"product_type":"c1","uid":3660858,"ip_address":"浙江","ucode":"DA5C374708F31D","user_header":"","comment_is_top":false,"comment_ctime":1687749917,"is_pvip":false,"replies":[{"id":137715,"content":"不是的，抽象程度不同。而且不是“一样”，是“一致”。","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1689498679,"ip_address":"","comment_id":376933,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100311801,"comment_content":"如果数据库模型和领域模型一样，那我们还是在面向数据库模型编程","like_count":1,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":623442,"discussion_content":"不是的，抽象程度不同。而且不是“一样”，是“一致”。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1689498679,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":367675,"user_name":"py","can_delete":false,"product_type":"c1","uid":1496577,"ip_address":"上海","ucode":"2372522D715419","user_header":"https://static001.geekbang.org/account/avatar/00/16/d6/01/2448b4a9.jpg","comment_is_top":false,"comment_ctime":1675415638,"is_pvip":false,"replies":[{"id":133953,"content":"不错","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1675642690,"ip_address":"广东","comment_id":367675,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100311801,"comment_content":"1. id无感业务，不会被频繁变更；主键一般设为自增长，业务一般不符合；业务字段可能是string等非int字段，性能不高\n2. 充分评估必要性；控制度，非必要不违反 ","like_count":1,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":602048,"discussion_content":"不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1675642690,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1438470,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f3/06/8da1bf0c.jpg","nickname":"Fredo","note":"","ucode":"681D6692617DAB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":603130,"discussion_content":"id自增，需要迁移数据库就麻烦了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1675957794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":366862,"user_name":"Michael","can_delete":false,"product_type":"c1","uid":1015222,"ip_address":"陕西","ucode":"27EB4A725CE14E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/b6/abdebdeb.jpg","comment_is_top":false,"comment_ctime":1674474539,"is_pvip":false,"replies":[{"id":133699,"content":"如果将来有新的类型，尽量少改程序","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1674530695,"ip_address":"广东","comment_id":366862,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100311801,"comment_content":"组织类别这种表示类型的我的实践一般是在代码里创建枚举类型，然后用 varchar 或者自建的枚举类型作为字段类型，但是这里老师用了一张类似字典表的设计，想请教这样的设计的意图是啥？","like_count":1,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":600558,"discussion_content":"如果将来有新的类型，尽量少改程序","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1674530695,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":365505,"user_name":"6点无痛早起学习的和尚","can_delete":false,"product_type":"c1","uid":1703256,"ip_address":"广东","ucode":"33A8A1CDA103F9","user_header":"https://static001.geekbang.org/account/avatar/00/19/fd/58/1af629c7.jpg","comment_is_top":false,"comment_ctime":1672710463,"is_pvip":false,"replies":[{"id":133265,"content":"关于租户 ID，你的理解也是没问题的。之所以每个表都有租户ID，一是为了方便，二是多租户系统里数据隔离十分敏感，稍微过度一点，以确保万无一失。","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1673090982,"ip_address":"广东","comment_id":365505,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100311801,"comment_content":"一些思考和问题：\n1. 如果组织类别是死的，那就可以直接作为一个表的字段去枚举，课中是灵活动态添加的，所以是一个单独的表，员工岗位同理。\n2. 工时记录表里的租户 id，是否只是一个扩展字段设计，方便可以直接看到这个工时记录是哪个租户的，因为如果为了最终能查询到租户 id，在工时记录表里不设计租户 id，可以通过项目 id 一步一步去反查到租户 id，因为之前在领域建模设计阶段，工时记录和组织其实没有直接的比例关系。\n3. 还需要再继续读一读：与“ER 图法”的区别","like_count":1,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":598796,"discussion_content":"关于租户 ID，你的理解也是没问题的。之所以每个表都有租户ID，一是为了方便，二是多租户系统里数据隔离十分敏感，稍微过度一点，以确保万无一失。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1673090982,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":393749,"user_name":"刘学习来学习","can_delete":false,"product_type":"c1","uid":1464013,"ip_address":"广东","ucode":"5078B1EC8D8A66","user_header":"https://static001.geekbang.org/account/avatar/00/16/56/cd/0add8290.jpg","comment_is_top":false,"comment_ctime":1724770637,"is_pvip":false,"replies":[{"id":143633,"content":"不妨根据你的想法举个例子，通过例子更容易说明。","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1731398248,"ip_address":"广东","comment_id":393749,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100311801,"comment_content":"按照领域模型直接建表的话会不会有这样的问题，领域模型重在业务语义的表达，数据表要考虑性能和扩展，我理解一个模型可能会拆分成n张表来存储，只需要过程中有一个对象可以映射领域模型就行了吧","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":653686,"discussion_content":"不妨根据你的想法举个例子，通过例子更容易说明。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1731398248,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":389635,"user_name":"zhsky","can_delete":false,"product_type":"c1","uid":1192010,"ip_address":"广东","ucode":"6441228CEBFC66","user_header":"https://static001.geekbang.org/account/avatar/00/12/30/4a/5b1d1018.jpg","comment_is_top":false,"comment_ctime":1713144494,"is_pvip":false,"replies":[{"id":143679,"content":"1. 对\n2. 还有冗余字段的一致性问题","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1731560671,"ip_address":"广东","comment_id":389635,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100311801,"comment_content":"1. 领域实体不是由该对象的某个具体业务属性来唯一确定的，有系统随机创建的唯一键标识，更不容易产生误会。\n\n\n2. 注意数据库性能，冗余字段最好只做展示，不做查询","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":653904,"discussion_content":"1. 对\n2. 还有冗余字段的一致性问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1731560672,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":388181,"user_name":"zhihai.tu","can_delete":false,"product_type":"c1","uid":1045888,"ip_address":"上海","ucode":"61371EA3EF6988","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f5/80/baddf03b.jpg","comment_is_top":false,"comment_ctime":1709567329,"is_pvip":true,"replies":[{"id":141402,"content":"是的","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1709973513,"ip_address":"广东","comment_id":388181,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100311801,"comment_content":"emp表的org_id和org的leader_id是不是应该设计为NOT NULL，因为领域模型中的多重性为1..1","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":638832,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1709973513,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":387401,"user_name":"爱喝橙汁的蛋蛋","can_delete":false,"product_type":"c1","uid":2806273,"ip_address":"湖北","ucode":"66F4D91B5AA9D9","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIzrdNibIODKPJRHfL2X8FUkFib9EvNyDKA2b15dV06Uyoy6xx9yv38yUUJPicgTEEyPhQBo4ojsFcVw/132","comment_is_top":false,"comment_ctime":1707193140,"is_pvip":false,"replies":[{"id":141223,"content":"理论上也是没问题的。前提是业务领域处理的概念确实适合用“图”来表达。你可以找一个这样的场景，我们研究一下。","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1708162334,"ip_address":"广东","comment_id":387401,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100311801,"comment_content":"老师，您讲的数据库是关系型数据库，那么对于图数据库呢，比如说如何将DDD映射到Neo4j？","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":637240,"discussion_content":"理论上也是没问题的。前提是业务领域处理的概念确实适合用“图”来表达。你可以找一个这样的场景，我们研究一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1708162335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376932,"user_name":"Geek_a2b9d0","can_delete":false,"product_type":"c1","uid":3660858,"ip_address":"浙江","ucode":"DA5C374708F31D","user_header":"","comment_is_top":false,"comment_ctime":1687749881,"is_pvip":false,"replies":[{"id":137714,"content":"首先，咱们不谈“一样”，谈“一致”，你细品一下两者的区别。其次，如果是新开发的系统，应该一致。如果是改造遗留系统，可能由于历史原因，数据库不能改，但原先的数据库又不合理，这就有可能不一致了。","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1689498649,"ip_address":"","comment_id":376932,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100311801,"comment_content":"为什么有些文章说DDD的数据库库模型不一定和领域模型不一样？","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":623441,"discussion_content":"首先，咱们不谈“一样”，谈“一致”，你细品一下两者的区别。其次，如果是新开发的系统，应该一致。如果是改造遗留系统，可能由于历史原因，数据库不能改，但原先的数据库又不合理，这就有可能不一致了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1689498649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":374916,"user_name":"🏄🏻米兰的大铁匠🎤🎈","can_delete":false,"product_type":"c1","uid":1177832,"ip_address":"天津","ucode":"704DB6905F96D1","user_header":"https://static001.geekbang.org/account/avatar/00/11/f8/e8/bbd1b66d.jpg","comment_is_top":false,"comment_ctime":1684652722,"is_pvip":false,"replies":[{"id":137141,"content":"还有一个原因，无论业务数据怎么变，id都可以保持不变。","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1685969039,"ip_address":"广东","comment_id":374916,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100311801,"comment_content":"为何建议用id而非联合主键： id不但是本表的唯一标识而且从本质上看id代表着“联合关联”关系的标识，每个id代表了一个关系，在数据表现上更能体现主键的作用","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":620239,"discussion_content":"还有一个原因，无论业务数据怎么变，id都可以保持不变。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1685969039,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":371833,"user_name":"杨光","can_delete":false,"product_type":"c1","uid":1105883,"ip_address":"广东","ucode":"7883BB17FE34CE","user_header":"https://static001.geekbang.org/account/avatar/00/10/df/db/353e5764.jpg","comment_is_top":false,"comment_ctime":1680406430,"is_pvip":false,"replies":[{"id":135698,"content":"https:&#47;&#47;github.com&#47;zhongjinggz&#47;geekdemo 目前放出了迭代1的，后面的正在逐渐补充","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1680533428,"ip_address":"广东","comment_id":371833,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100311801,"comment_content":"钟老师你好， 如何获取课堂的代码呢","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":612144,"discussion_content":"https://github.com/zhongjinggz/geekdemo 目前放出了迭代1的，后面的正在逐渐补充","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1680533428,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1105883,"avatar":"https://static001.geekbang.org/account/avatar/00/10/df/db/353e5764.jpg","nickname":"杨光","note":"","ucode":"7883BB17FE34CE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":612154,"discussion_content":"好的，感谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1680534959,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":369290,"user_name":"灵活工作","can_delete":false,"product_type":"c1","uid":1017296,"ip_address":"湖北","ucode":"41F0870C832ECD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/85/d0/56602a43.jpg","comment_is_top":false,"comment_ctime":1677335601,"is_pvip":false,"replies":[{"id":134790,"content":"谢谢指出问题","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1677936585,"ip_address":"广东","comment_id":369290,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100311801,"comment_content":"org表的org_type_code的类型不是int而应该是char","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":607550,"discussion_content":"谢谢指出问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1677936585,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":367872,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"浙江","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1675694474,"is_pvip":false,"replies":[{"id":135187,"content":"很棒","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1678976948,"ip_address":"广东","comment_id":367872,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100311801,"comment_content":"学习笔记（附 MySQL 建表语句）\nhttps:&#47;&#47;wyyl1.com&#47;post&#47;23&#47;03&#47;","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609452,"discussion_content":"很棒","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1678976948,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":366096,"user_name":"Jaising","can_delete":false,"product_type":"c1","uid":1037630,"ip_address":"浙江","ucode":"F68830B7B90F96","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d5/3e/7f3a9c2b.jpg","comment_is_top":false,"comment_ctime":1673400997,"is_pvip":false,"replies":[{"id":134770,"content":"其实正规的软件工程本来就是先有领域模型再设计表，可惜多数同学没这么做。我这里是新瓶装旧酒了。您的文章，继续点赞收藏转发 ：）","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1677929943,"ip_address":"广东","comment_id":366096,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100311801,"comment_content":"用自己的话翻译一下领域驱动设计对于数据库设计的价值：领域驱动设计改变了表结构设计优先的懒惰思维惯性，领域建模优先保障了数据库设计与领域模型一致，从数据驱动到领域驱动是软件生产方式的变革，为领域模型与软件实现的统一奠定基础。\n继续第三篇两千字小笔记（实践出真知拿个小项目练果然好落地）：https:&#47;&#47;juejin.cn&#47;post&#47;7187196960569294885","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":607524,"discussion_content":"其实正规的软件工程本来就是先有领域模型再设计表，可惜多数同学没这么做。我这里是新瓶装旧酒了。您的文章，继续点赞收藏转发 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1677929943,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":366021,"user_name":"hk","can_delete":false,"product_type":"c1","uid":1057377,"ip_address":"浙江","ucode":"92996CA0BCDD66","user_header":"https://static001.geekbang.org/account/avatar/00/10/22/61/580bb3c3.jpg","comment_is_top":false,"comment_ctime":1673331555,"is_pvip":false,"replies":[{"id":133653,"content":"是的，仅从租户和企业的关系而言，是一对一。","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1674438574,"ip_address":"广东","comment_id":366021,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100311801,"comment_content":"老师你好，问下租户表，个人理解一般一个企业注册一个租户，name是表示租户的企业名称吗，如果本身另外有一张公司表或者企业表，是否需要跟这个租户表1对1关联","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":600474,"discussion_content":"是的，仅从租户和企业的关系而言，是一对一。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1674438574,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":366004,"user_name":"阿昕","can_delete":false,"product_type":"c1","uid":1012906,"ip_address":"浙江","ucode":"F3AD093B68E074","user_header":"https://static001.geekbang.org/account/avatar/00/0f/74/aa/178a6797.jpg","comment_is_top":false,"comment_ctime":1673317037,"is_pvip":false,"replies":[{"id":133652,"content":"第一问，你说的long类型背后隐藏着性能优化，灵活性背后隐藏着与业务的解耦吧。第二问没问题。","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1674438500,"ip_address":"广东","comment_id":366004,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100311801,"comment_content":"1.非业务含义主键ID，在格式能够保证是long类型，在迭代上保留了灵活性；\n2.需要注意数据变化之后，冗余字段保存的还是历史值；","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":600473,"discussion_content":"第一问，你说的long类型背后隐藏着性能优化，灵活性背后隐藏着与业务的解耦吧。第二问没问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1674438500,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":365778,"user_name":"Jaising","can_delete":false,"product_type":"c1","uid":1037630,"ip_address":"广东","ucode":"F68830B7B90F96","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d5/3e/7f3a9c2b.jpg","comment_is_top":false,"comment_ctime":1672995444,"is_pvip":false,"replies":[{"id":133245,"content":"首先，是否建立外键和是否用join查询是两个不同的问题，应该分开讨论。其次这两个问题都是要权衡的，不能一概而论。比如，外键的优点是在数据库层面设立了最后一道防线，避免脏数据，缺点是性能问题等等，要根据具体应用场景权衡利弊，做出技术决策。","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1673053287,"ip_address":"广东","comment_id":365778,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100311801,"comment_content":"钟老师有提到基于云的应用不主张建立真正的外键，这个是不是可以扩大一点说，不论是否基于云，现代企业软件都不鼓励建立外键，甚至直接禁止join查询，我能想到的几点原因是sql扩展性复用性没有代码实现关联来的强，尤其是业务变动比较大的时候数据库改造成本很高，还会碰到小表驱动大表索引不合理增加设计与实现复杂度，遇到跨库join的mysql等一众关系型数据库都并不擅长，sql对于OO的破坏DDD是怎么应对的？","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":598749,"discussion_content":"首先，是否建立外键和是否用join查询是两个不同的问题，应该分开讨论。其次这两个问题都是要权衡的，不能一概而论。比如，外键的优点是在数据库层面设立了最后一道防线，避免脏数据，缺点是性能问题等等，要根据具体应用场景权衡利弊，做出技术决策。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1673053287,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":365467,"user_name":"龙腾","can_delete":false,"product_type":"c1","uid":2864424,"ip_address":"广东","ucode":"81E70A02EB02A0","user_header":"https://static001.geekbang.org/account/avatar/00/2b/b5/28/3de99570.jpg","comment_is_top":false,"comment_ctime":1672628661,"is_pvip":false,"replies":[{"id":133262,"content":"第一个问题，除了技术和性能角度的考虑以外，还可以从业务角度考虑，凡是有业务含义的东西，从长远来看，其实很难保证永远不变，或者组合永远保持唯一性。","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1673090458,"ip_address":"广东","comment_id":365467,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100311801,"comment_content":"1、从数据库性能的考虑。主键一般设置为递增，以防止修改时的页分裂；主键一般设置为数值类型，占用空间少，可以使索引树层级减小。而业务id可能并不具有这种特性。\n2、如果冗余字段存在与2个表中，需要考虑这个字段是否会在其主表中更新，如果主表中更新该字段，则需要更新这个冗余字段，如果冗余字段出现在很多表中，更新将变的复杂。如果冗余字段只存在于1张表中（没有将两个领域表拆分），删除记录将会导致冗余字段的丢失，《数据库系统设计、实现与管理(6)》中主要针对后一种情况分为了插入异常、删除异常、修改异常。","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":598793,"discussion_content":"第一个问题，除了技术和性能角度的考虑以外，还可以从业务角度考虑，凡是有业务含义的东西，从长远来看，其实很难保证永远不变，或者组合永远保持唯一性。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1673090458,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":364993,"user_name":"絆","can_delete":false,"product_type":"c1","uid":1618328,"ip_address":"广东","ucode":"52D965461314DB","user_header":"https://static001.geekbang.org/account/avatar/00/18/b1/98/11b22d79.jpg","comment_is_top":false,"comment_ctime":1671869128,"is_pvip":false,"replies":[{"id":133007,"content":"这是一个独特的视角，而且我也认同。在第二迭代的值对象部分，我们会继续探讨。","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1672230226,"ip_address":"广东","comment_id":364993,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100311801,"comment_content":"老师对于冗余, 我个人理解为应该区分实体和值对象的区别, 看似一样的属性如果是值对象, 冗余是必要的, 创建新实体时冗余已经是新实体的一部分, 不属于以前的实体对象, 这个时候我认为是必要的.","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":597798,"discussion_content":"这是一个独特的视角，而且我也认同。在第二迭代的值对象部分，我们会继续探讨。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1672230226,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":364891,"user_name":"赵晏龙","can_delete":false,"product_type":"c1","uid":2673605,"ip_address":"广东","ucode":"F15730BCA97EE0","user_header":"https://static001.geekbang.org/account/avatar/00/28/cb/c5/c1d7ca5e.jpg","comment_is_top":false,"comment_ctime":1671672025,"is_pvip":false,"replies":[{"id":133024,"content":"你使用成熟的orm框架，在国内是少数派，在国外是多数派😃","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1672234495,"ip_address":"广东","comment_id":364891,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100311801,"comment_content":"由于ORM框架存在，我不会直接到数据库的设计，而是先做class设计，由ORM直接code first得到表。\n\n但究其根本，其实像使用虚拟外键一类的方法解耦的做法，其实都是类似的。","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":597821,"discussion_content":"你使用成熟的orm框架，在国内是少数派，在国外是多数派😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1672234495,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":598221,"discussion_content":"Martin Fowler 总结的数据源架构模式中，活动记录（Active Record）模式明显违背了持久化透明（PI，Martin Fowler 自己提的）的原则，但因为它的简单性，却被诸如 Ruby On Rails、jOOQ、scalikejdbc 之类的框架运用。活动记录模式封装了数据与数据访问行为，这就相当于将数据访问对象与持久化对象合并到了一个对象中。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1672678329,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"福建","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":371308,"user_name":"Geek_4e4ec2","can_delete":false,"product_type":"c1","uid":1603078,"ip_address":"云南","ucode":"6DAD5EE4FFB195","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/zAZv4NyuS21Y1qk45j8JiaoEYdA5Zgc1PqpJsBokz5bZVmdkf6kNWvT4cUAAKAdH6TgN52DWZhiaH6wNFhw14nRg/132","comment_is_top":false,"comment_ctime":1679765188,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":5,"product_id":100311801,"comment_content":"个人觉得在这个阶段就设计数据库，非常不合适。我的常用实践是把这一步放到最后一步，即代码都已经写完了，所有的业务逻辑和约束都已经实现了，仓储层先实现成接口或抽象类，最后来无脑的补仓储层的具体实现，效率非常高，因为已经不牵扯到任何业务了，只需要单纯的实现数据的增删改查就可以了。而且，可以更好的选择想要的持久化方式，是关系型还是非关系型，是冗余还是不冗余，需不需要建宽表或引入搜索引擎，分布式还是单体，都相当清楚，没有那么痛苦。","like_count":2,"discussions":[{"author":{"id":3784804,"avatar":"","nickname":"Geek_6dfefb","note":"","ucode":"A4148AB5A1FCF5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":649643,"discussion_content":"也有道理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1723689826,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"湖南","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":394682,"user_name":"存在","can_delete":false,"product_type":"c1","uid":2254854,"ip_address":"北京","ucode":"F3217DC5B799BB","user_header":"https://static001.geekbang.org/account/avatar/00/22/68/06/e74b5675.jpg","comment_is_top":false,"comment_ctime":1727591648,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100311801,"comment_content":"1-不使用默认id而使用发号器生成具有一定编码规则的id是为了强调业务实体的业务性，如果所有表都是id，那么在做一些命令或者操作处理的时候容易出错，id都是自增，难免重复\n2-适当冗余可以增加查询性能，但是其实模型设计的时候不必考虑冗余，后续可以通过写扩散的方式专门设计业务需要查询的宽表","like_count":0},{"had_liked":false,"id":369921,"user_name":"唐朝首都","can_delete":false,"product_type":"c1","uid":1081233,"ip_address":"上海","ucode":"F72655AE0AE4CA","user_header":"https://static001.geekbang.org/account/avatar/00/10/7f/91/962eba1a.jpg","comment_is_top":false,"comment_ctime":1678148185,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100311801,"comment_content":"（1）业务可能需要由多个字段作为联合主键，才能表达唯一性，维护起来比较麻烦，尤其有另外的表引用的时候。\n（2）用id作为主键，用业务的多个字段作为联合索引，可以进行无脑插入，用数据库来检查唯一性，并且避免因插入导致的页分裂，提高一定的插入性能。\n","like_count":0},{"had_liked":false,"id":366935,"user_name":"zhouqin","can_delete":false,"product_type":"c1","uid":1005403,"ip_address":"北京","ucode":"88C28CE9B6AE88","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/5b/caacc46f.jpg","comment_is_top":false,"comment_ctime":1674632015,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100311801,"comment_content":"各位，想了解一下。现在ddd有好用的脚手架工具吗？","like_count":0},{"had_liked":false,"id":364889,"user_name":"赵晏龙","can_delete":false,"product_type":"c1","uid":2673605,"ip_address":"湖南","ucode":"F15730BCA97EE0","user_header":"https://static001.geekbang.org/account/avatar/00/28/cb/c5/c1d7ca5e.jpg","comment_is_top":false,"comment_ctime":1671671505,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100311801,"comment_content":"1其实是一种解耦，业务键重构的时候相对不受影响。但也是它的缺点，比如，希望用名字弱关联的场景就会受限。\n2冗余通常用于解决性能问题，或者在业务上表示历史审计数据，缺点就是必要的时候你要维护它的同步。","like_count":0}]}