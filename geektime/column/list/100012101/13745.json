{"id":13745,"title":"09 | 粗放与精益：编程的两种思路与方式","content":"<p>几年前，我给团队负责的整个系统写过一些公共库，有一次同事发现这个库里存在一个Bug，并告诉了我出错的现象。然后我便去修复这个Bug，最终只修改了一行代码，但发现一上午就这么过去了。</p>\n<p>一上午只修复了一个Bug，而且只改了一行代码，到底发生了什么？时间都去哪里了？以前觉得自己写代码很快，怎么后来越来越慢了？我认真地思考了这个问题，开始认识到我的编程方式和习惯在那几年已经慢慢发生了变化，形成了明显的两个阶段的转变。这两个阶段是：</p>\n<ul>\n<li>写得粗放，写得多</li>\n<li>写得精益，写得好</li>\n</ul>\n<h2>多与粗放</h2>\n<p>粗放，在软件开发这个年轻的行业里其实没有确切的定义，但在传统行业中确实存在相近的关于 “粗放经营” 的概念可类比。引用其百科词条定义如下：</p>\n<blockquote>\n<p>粗放经营（Extensive Management），泛指技术和管理水平不高，生产要素利用效率低，产品粗制滥造，物质和劳动消耗高的生产经营方式。</p>\n</blockquote>\n<p>若把上面这段话里面的 “经营” 二字改成 “编程”，就很明确地道出了我想表达的粗放式编程的含义。</p>\n<p>一个典型的粗放式编程场景大概是这样的：需求到开发手上后，开始编码，编码完成，人肉测试，没问题后快速发布到线上，然后进入下一个迭代。</p>\n<p>我早期参与的大量项目过程都与此类似，不停地重复接需求，快速开发，发布上线。在这个过程中，我只是在不停地堆砌功能代码，每天产出的代码量不算少，但感觉都很类似，也很粗糙。这样的过程持续了挺长一个阶段，一度让我怀疑：这样大量而粗放地写代码到底有什么作用和意义？</p><!-- [[[read_end]]] -->\n<p>后来读到一个故事，我逐渐明白这个阶段是必要的，它因人、因环境而异，或长或短。而那个给我启发的故事，是这样的。</p>\n<p>有一个陶艺老师在第一堂课上说，他会把班上学生分成两组，一组的成绩将会以最终完成的陶器作品数量来评定；而另一组，则会以最终完成的陶器品质来评定。</p>\n<p>在交作业的时候，一个很有趣的现象出现了：“数量” 组如预期一般拿出了很多作品，但出乎意料的是质量最好的作品也全部是由 “数量” 组制作出来的。</p>\n<p>按 “数量” 组的评定标准，他们似乎应该忙于粗制滥造大量的陶器呀。但实际情况是他们每做出一个垃圾作品，都会吸取上一次制作的错误教训，然后在做下一个作品时得到改进。</p>\n<p>而 “品质” 组一开始就追求完美的作品，他们花费了大量的时间从理论上不断论证如何才能做出一个完美的作品，而到了最后拿出来的东西，似乎只是一堆建立在宏大理论上的陶土。</p>\n<p>读完这个故事，我陷入了沉思，感觉故事里的制作陶器和编程提升之路是如此类似。很显然，“品质” 组的同学一开始就在追求理想上的 “好与精益” ，而 “数量” 组同学的完成方式则似我早期堆砌代码时的“多与粗放”，但他们正是通过做得多，不断尝试，快速迭代 ，最后取得到了更好的结果。</p>\n<p>庆幸的是，我在初学编程时，就是在不断通过编程训练来解答一个又一个书本上得来的困惑；后来工作时，则是在不断写程序来解决一个又一个工作中遇到的问题。看到书上探讨各种优雅的代码之道、编程的艺术哲学，那时的我也完全不知道该如何通往这座编程的 “圣杯”，只能看着自己写出的蹩脚代码，然后继续不断重复去制作下一个丑陋的 “陶器”，不断尝试，不断精进和进阶。</p>\n<p>《黑客与画家》书里说：“编程和画画近乎异曲同工。”所以，你看那些成名画家的作品，如果按时间顺序来排列展示，你会发现每幅画所用的技巧，都是建立在上一幅作品学到的东西之上；如果某幅作品特别出众，你往往也能在更早期的作品中找到类似的版本。而编程的精进过程也是类似的。</p>\n<p>总之，这些故事和经历都印证了一个道理：<strong>在通往 “更好” 的路上，总会经过 “更多” 这条路。</strong></p>\n<h2>好与精益</h2>\n<p>精益，也是借鉴自传统行业里的一个类比：精益生产。</p>\n<blockquote>\n<p>精益生产（Lean Production），简言之，就是一种以满足用户需求为目标、力求降低成本、提高产品的质量、不断创新的资源节约型生产方式。</p>\n</blockquote>\n<p>若将定义中的 “生产” 二字换成 “编程”，也就道出了精益编程的内涵。它有几个关键点：质量、成本与效率。但要注意：在编程路上，如果一开始就像 “品质” 组同学那样去追求完美，也许你就会被定义 “完美” 的品质所绊住，而忽视了制作的成本与效率。</p>\n<p>因为编程的难点是，无论你在开始动手编程时看过多少有关编程理论、方法、哲学与艺术的书，一开始你还是无法领悟到什么是编程的正确方法，以及什么是“完美” 的程序。毕竟纸上得来终觉浅，绝知此事要躬行。</p>\n<p>曾经，还在学校学习编程时，有一次老师布置了一个期中课程设计，我很快完成了这个课程设计中的编程作业。而另一位同学，刚刚看完了那本经典的《设计模式》书。</p>\n<p>他尝试用书里学到的新概念来设计这个编程作业，并且又用 UML 画了一大堆交互和类图，去推导设计的完美与优雅。然后兴致勃勃向我（因为我刚好坐在他旁边）讲解他的完美设计，我若有所悟，觉得里面确实有值得我借鉴的地方，就准备吸收一些我能听明白的东西，重构一遍已经写好的作业程序。</p>\n<p>后来，这位同学在动手实现他的完美设计时，发现程序越写越复杂，交作业的时间已经不够了，只好借用我的不完美的第一版代码改改凑合交了。而我在这第一版代码基础上，又按领悟到的正确思路重构了一次、改进了一番后交了作业。</p>\n<p>所以，别被所谓 “完美“ 的程序所困扰，只管先去盯住你要用编程解决的问题，把问题解决，把任务完成。</p>\n<p><strong>编程，其实一开始哪有什么完美，只有不断变得更好。</strong></p>\n<p>工作后，我做了大量的项目，发现这些项目都有很多类似之处。每次，即使项目上线后，我也必然重构项目代码，提取其中可复用的代码，然后在下一个项目中使用。循环往复，一直干了七八年。每次提炼重构，都是一次从 “更多” 走向 “更好” 的过程。我想，很多程序员都有类似的经历吧？</p>\n<p>回到开头修改Bug 的例子，我用半天的时间改一个Bug，感觉效率不算高，这符合精益编程的思路吗？先来回顾下这半天改这个Bug 的过程。</p>\n<p>由于出问题的那个公共库是我接到Bug 时的半年前开发的，所以发现那个Bug 后，我花了一些时间来回忆整个公共库的代码结构设计。然后我研究了一下，发现其出现的场景比较罕见，要不不至于线上运行了很久也没人发现，属于重要但不紧急。</p>\n<p>因此，我没有立刻着手去修改代码，而是先在公共库的单元测试集中新写了一组单元测试案例。单元测试构建了该Bug的重现场景，并顺利让单元测试运行失败了，之后我再开始去修改代码，并找到了出问题的那一行，修改后重新运行了单元测试集，并顺利看见了测试通过的绿色进度条。</p>\n<p>而作为一个公共库，修改完成后我还要为本次修改更新发布版本，编写对应的文档，并上传到 Maven 仓库中，才算完成。回想这一系列的步骤，我发现时间主要花在了构建重现Bug 的测试案例场景中，有时为了构建一个测试场景编写代码的难度可能比开发功能本身更困难。</p>\n<p>为修改一个Bug 付出的额外单元测试时间成本，算一种浪费吗？虽说这确实提高了代码的修复成本，但也带来了程序质量的提升。按前面精益的定义，这似乎是矛盾的，但其实更是一种权衡与取舍。</p>\n<p>就是在这样的过程与反复中，我渐渐形成了属于自己的编程价值观：世上没有完美的解决方案，任何方案总是有这样或那样一些因子可以优化。一些方案可能面临的权衡取舍会少些，而另一些方案则会更纠结一些，但最终都要做取舍。</p>\n<p>以上，也说明了一个道理：<strong>好不是完美，好是一个过程，一个不断精益化的过程。</strong></p>\n<p>编程，当写得足够多了，也足够好了，你才可能自如地在 “多” 与 “好” 之间做出平衡。</p>\n<p>编程的背后是交付程序系统，交付关心的是三点：功能多少，质量好坏，效率快慢。真实的编程环境下， 你需要在三者间取得平衡，哪些部分可能是多而粗放的交付，哪些部分是好而精益的完成，同时还要考虑效率快慢（时间）的需求。</p>\n<p>编程路上，“粗放的多” 是 “精益的好和快” 的前提，而好和快则是你的取舍：是追求好的极致，还是快的极致，或者二者的平衡？</p>\n<p>在多而粗放和好而精益之间，现在你处在哪个阶段了？欢迎留言谈谈你的看法。</p>\n<p></p>\n","comments":[{"had_liked":false,"id":21047,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1534898309,"is_pvip":false,"replies":[{"id":"7449","content":"不错，但是为什么Review在提测之后？","user_name":"作者回复","user_name_real":"mindwind","uid":"1001723","ctime":1534934543,"ip_address":"","comment_id":21047,"utype":1}],"discussion_count":1,"race_medal":0,"score":"138973851781","product_id":100012101,"comment_content":"我感觉自己处在一个由粗到细的转换过程，回想我们的代码产生过程，大概如下：<br>1:prd评审<br>2:表结构设计、缓存结构设计、程序逻辑梳理，输出对应的文档，进行初评<br>3:代码编写<br>4:自测、提测<br>5:代码review<br>6:调整和完善代码<br>7:合并主干回归测试<br>8:上线准备、上线申请、上线、产品及业务线上验证<br>9:线上观察<br><br>其中第5步，资深和架构都会参与，一般都会提出一些改进和完善意见。这个环节可看出编码功力的深浅及考虑的是否全面。<br>主要会考察一下方面：<br>1:业务逻辑是否OK<br>2:是否打点<br>3:日志是否OK<br>4:代码性能是否良好<br>5:基本的编码规范是否符合<br>6:代码可读性如何<br>7:异常处理的是否合理<br><br>刚开始总会拉下些什么，现在这个模式已经比较熟练了，不过还是会有一些改进意见，比如：应用交互是否OK、代码抽象层级是否合理<br><br>非常感谢我们的代码review同学们，让我成长不少。","like_count":32,"discussions":[{"author":{"id":1001723,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/fb/747fdba8.jpg","nickname":"mindwind","note":"","ucode":"21236147DFD116","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422512,"discussion_content":"不错，但是为什么Review在提测之后？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534934543,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21115,"user_name":"third","can_delete":false,"product_type":"c1","uid":1025114,"ip_address":"","ucode":"9A37408A834F0B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/5a/e708e423.jpg","comment_is_top":false,"comment_ctime":1534924343,"is_pvip":false,"replies":[{"id":"7441","content":"对，成本是一个核心考虑点。从多到好的过程中，反馈与迭代改进在发挥关键作用","user_name":"作者回复","user_name_real":"mindwind","uid":"1001723","ctime":1534933522,"ip_address":"","comment_id":21115,"utype":1}],"discussion_count":1,"race_medal":0,"score":"40189630007","product_id":100012101,"comment_content":"1.个人觉得粗放并不是多，核心在“迭代”，这是一个慢慢变好的过程\r<br>迭代的好处就是试错和反馈。\r<br>试错，是快速找到自己根本没有意识到的错误，看一遍和做一遍差距太大\r<br>反馈，你会在做不停做中得到反馈，并迭代\r<br>\r<br>2.快速是其中关键因素，迭代速度越高，成长也越快\r<br>\r<br>3.粗放和精细，背后其实是成本\r<br>\r<br>比如文中老师和老师同学的例子。老师做了改进，吸收到了《设计模式》的一些知识，很大程度上，是因为老师开始做这件事情的成本其实比那个刚开始做的老师同学低得多。\r<br>毕竟，当时的老师已经有一个程序了。\r<br>而老师的同学在一个零基础上做程序，其实成本更高。\r<br>\r<br>4.个人想法\r<br>理解我们在当下得到的一切，都是此前一切总和结果中，最好的一个。\r<br>粗放也好，精益也好。\r<br>其实我们的能力都是一样的\r<br>变得精益也许只是一个结果，成本更低。\r<br>要写更优雅的代码，更好的运行一切的一切，都是因为越来越复杂的代码和框架逻辑，更加大型的用户使用量等等硬性制约而已。\r<br>\r<br>慢慢成长就好","like_count":9,"discussions":[{"author":{"id":1001723,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/fb/747fdba8.jpg","nickname":"mindwind","note":"","ucode":"21236147DFD116","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422544,"discussion_content":"对，成本是一个核心考虑点。从多到好的过程中，反馈与迭代改进在发挥关键作用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534933522,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":38839,"user_name":"依米","can_delete":false,"product_type":"c1","uid":1146444,"ip_address":"","ucode":"ABB56D0E26D312","user_header":"https://static001.geekbang.org/account/avatar/00/11/7e/4c/727f3912.jpg","comment_is_top":false,"comment_ctime":1542153771,"is_pvip":false,"replies":[{"id":"14439","content":"限定时间，必须交付，纠结是无法交付的","user_name":"作者回复","user_name_real":"mindwind","uid":"1001723","ctime":1542525865,"ip_address":"","comment_id":38839,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31606924843","product_id":100012101,"comment_content":"老师，我也是发现自己编码速度越来越慢，不过不是老师的情况，大约是和你的同学类似，越来越不敢下手写代码了，写之前要纠结很久，各种考虑，很不喜欢现在的样子，但还是会不自觉的沉浸在里面，该咋办？","like_count":7,"discussions":[{"author":{"id":1001723,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/fb/747fdba8.jpg","nickname":"mindwind","note":"","ucode":"21236147DFD116","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428826,"discussion_content":"限定时间，必须交付，纠结是无法交付的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542525865,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21114,"user_name":"艾尔欧唯伊","can_delete":false,"product_type":"c1","uid":1139716,"ip_address":"","ucode":"5BD50691342461","user_header":"https://static001.geekbang.org/account/avatar/00/11/64/04/18875529.jpg","comment_is_top":false,"comment_ctime":1534923757,"is_pvip":false,"replies":[{"id":"7442","content":"恩，是这样的。关键是你得去迭代并提炼，而非重复","user_name":"作者回复","user_name_real":"mindwind","uid":"1001723","ctime":1534933565,"ip_address":"","comment_id":21114,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27304727533","product_id":100012101,"comment_content":"粗方式才能有快速产出，产出积累到一定量之后，精益才能提取精华，浓缩沉淀。","like_count":6,"discussions":[{"author":{"id":1001723,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/fb/747fdba8.jpg","nickname":"mindwind","note":"","ucode":"21236147DFD116","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422543,"discussion_content":"恩，是这样的。关键是你得去迭代并提炼，而非重复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534933565,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21029,"user_name":"KaitoShy","can_delete":false,"product_type":"c1","uid":1038415,"ip_address":"","ucode":"E2E2E9BD3F5048","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d8/4f/65abc6f0.jpg","comment_is_top":false,"comment_ctime":1534894609,"is_pvip":false,"replies":[{"id":"7452","content":"哪里该快，哪里该慢，是考验人的地方","user_name":"作者回复","user_name_real":"mindwind","uid":"1001723","ctime":1534934975,"ip_address":"","comment_id":21029,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23009731089","product_id":100012101,"comment_content":"在没有成熟方案时，以快速实现为主，而有了之后再慢工出细活？","like_count":5,"discussions":[{"author":{"id":1001723,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/fb/747fdba8.jpg","nickname":"mindwind","note":"","ucode":"21236147DFD116","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422502,"discussion_content":"哪里该快，哪里该慢，是考验人的地方","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534934975,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74547,"user_name":"阿信","can_delete":false,"product_type":"c1","uid":1399663,"ip_address":"","ucode":"CC7B15CE63264B","user_header":"https://static001.geekbang.org/account/avatar/00/15/5b/6f/113e24e6.jpg","comment_is_top":false,"comment_ctime":1552232627,"is_pvip":false,"replies":[{"id":"27620","content":"嗯，这样的平衡很好，现实经常是这样的","user_name":"作者回复","user_name_real":"mindwind","uid":"1001723","ctime":1552472374,"ip_address":"","comment_id":74547,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14437134515","product_id":100012101,"comment_content":"介绍编程的两种思路，完美型和现实型。<br>看这篇文章，脑海中想到了两件事情，一是卖油翁的故事；二是态度(吴军老师写的)一书中提到的一些观点：最好是更好的敌人(或者说进步一点比什么都不做好)、做事情时境界要高。<br>陶器制作第一组的同学，可以说是熟能生巧；陶器制作第二组的同学以及课程设计的同学，境界是比较高的，但在其事情落地上执行方式有点问题，因为没有找到完美的方案而踌躇不前，最终没有输出满意的成果。<br>套用到我们自身的工作，以及绝大多数程序员身上，大量的开发(+用心理解)可以提升我们的水平，我们要求输出的成果有deadline，设计时我们格局可以大一些，考虑后来的扩展，实现时可以分步来执行，多次的改进让我们朝着目标前进，甚至超过原有心中的完美方案。","like_count":3,"discussions":[{"author":{"id":1001723,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/fb/747fdba8.jpg","nickname":"mindwind","note":"","ucode":"21236147DFD116","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442594,"discussion_content":"嗯，这样的平衡很好，现实经常是这样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552472374,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43189,"user_name":"xhavit","can_delete":false,"product_type":"c1","uid":1016906,"ip_address":"","ucode":"027D44425FF50A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/84/4a/580792f1.jpg","comment_is_top":false,"comment_ctime":1543195051,"is_pvip":false,"replies":[{"id":"15516","content":"嗯；完美主义总是相对的","user_name":"作者回复","user_name_real":"mindwind","uid":"1001723","ctime":1543233459,"ip_address":"","comment_id":43189,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14428096939","product_id":100012101,"comment_content":"在质量、成本和效率之间做好权衡和取舍，先完成，后完美，嗯，改掉这个阶段的完美主义思维","like_count":3,"discussions":[{"author":{"id":1001723,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/fb/747fdba8.jpg","nickname":"mindwind","note":"","ucode":"21236147DFD116","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430318,"discussion_content":"嗯；完美主义总是相对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543233459,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":33477,"user_name":"朱月俊","can_delete":false,"product_type":"c1","uid":1017707,"ip_address":"","ucode":"4DA0728B862FBD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/87/6b/0b6cd39a.jpg","comment_is_top":false,"comment_ctime":1539791312,"is_pvip":false,"replies":[{"id":"12104","content":"这样的状态和要求不错呀","user_name":"作者回复","user_name_real":"mindwind","uid":"1001723","ctime":1539869263,"ip_address":"","comment_id":33477,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14424693200","product_id":100012101,"comment_content":"我现在编码状态是:务必要在可能出异常的代码附近加日志；一定要测试程序的性能是否符合要求；编码风格务必符合规范；参照同类开源代码参考编码方式。","like_count":3,"discussions":[{"author":{"id":1001723,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/fb/747fdba8.jpg","nickname":"mindwind","note":"","ucode":"21236147DFD116","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426973,"discussion_content":"这样的状态和要求不错呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539869263,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21135,"user_name":"Sands","can_delete":false,"product_type":"c1","uid":1192575,"ip_address":"","ucode":"1B32356ADBEADE","user_header":"https://static001.geekbang.org/account/avatar/00/12/32/7f/7e1bd12c.jpg","comment_is_top":false,"comment_ctime":1534934938,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14419836826","product_id":100012101,"comment_content":"陶器故事在黑匣子思维看到过","like_count":3},{"had_liked":false,"id":22814,"user_name":"八戒","can_delete":false,"product_type":"c1","uid":1120617,"ip_address":"","ucode":"424ADA33A75067","user_header":"https://static001.geekbang.org/account/avatar/00/11/19/69/5daf7a5b.jpg","comment_is_top":false,"comment_ctime":1535983206,"is_pvip":false,"replies":[{"id":"8277","content":"是的，不过干这个事情要谨慎些，步步为营","user_name":"作者回复","user_name_real":"mindwind","uid":"1001723","ctime":1536056953,"ip_address":"","comment_id":22814,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10125917798","product_id":100012101,"comment_content":"老师，最近在处理问题的时候，总是觉得项目以前的代码有问题，冗余不够精简，喜欢去提取公共模块封装再处理，尝试着怎么把代码质量提上去，不知道这是不是就是您说的精益阶段呢","like_count":2,"discussions":[{"author":{"id":1001723,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/fb/747fdba8.jpg","nickname":"mindwind","note":"","ucode":"21236147DFD116","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423277,"discussion_content":"是的，不过干这个事情要谨慎些，步步为营","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536056953,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21520,"user_name":"Kuzaman","can_delete":false,"product_type":"c1","uid":1166957,"ip_address":"","ucode":"DB60937873CBF1","user_header":"https://static001.geekbang.org/account/avatar/00/11/ce/6d/6de830ef.jpg","comment_is_top":false,"comment_ctime":1535152477,"is_pvip":true,"replies":[{"id":"7642","content":"恩，写得多了，感觉就来了","user_name":"作者回复","user_name_real":"mindwind","uid":"1001723","ctime":1535168559,"ip_address":"","comment_id":21520,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10125087069","product_id":100012101,"comment_content":"本章收获颇多，我是做测试的，甚至不是测试开发级别，只是偶尔写写代码。目前只能处于粗放阶段，我一直困惑于精细还是粗矿，买了很多书很多视频看，总想着精细化，后来代码一直没有产出。听了老师的课，真是答疑解惑，因此决定先出量粗矿着到一定程度再说。感谢！","like_count":2,"discussions":[{"author":{"id":1001723,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/fb/747fdba8.jpg","nickname":"mindwind","note":"","ucode":"21236147DFD116","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422718,"discussion_content":"恩，写得多了，感觉就来了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535168559,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21138,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1534935999,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10124870591","product_id":100012101,"comment_content":"因为架构师更贵","like_count":2},{"had_liked":false,"id":21031,"user_name":"偏偏喜欢你","can_delete":false,"product_type":"c1","uid":1101985,"ip_address":"","ucode":"76D9E22B263D6B","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/a1/07027529.jpg","comment_is_top":false,"comment_ctime":1534895435,"is_pvip":false,"replies":[{"id":"7450","content":"有意识的形成这种写代码的思维方式，不要陷入重复中","user_name":"作者回复","user_name_real":"mindwind","uid":"1001723","ctime":1534934855,"ip_address":"","comment_id":21031,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10124830027","product_id":100012101,"comment_content":"老师您好，我现在正处于粗放的阶段，都是以完成需求为目的，暂时还没考虑到你所说的精益。","like_count":2,"discussions":[{"author":{"id":1001723,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/fb/747fdba8.jpg","nickname":"mindwind","note":"","ucode":"21236147DFD116","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422504,"discussion_content":"有意识的形成这种写代码的思维方式，不要陷入重复中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534934855,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":314015,"user_name":"J.","can_delete":false,"product_type":"c1","uid":2702870,"ip_address":"","ucode":"55AADBB3371CAA","user_header":"https://static001.geekbang.org/account/avatar/00/29/3e/16/f7486900.jpg","comment_is_top":false,"comment_ctime":1632801597,"is_pvip":false,"replies":[{"id":"113861","content":"^_^","user_name":"作者回复","user_name_real":"mindwind","uid":"1001723","ctime":1633000133,"ip_address":"","comment_id":314015,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5927768893","product_id":100012101,"comment_content":"一路看下来，我觉得老师说的东西很多都是相见恨晚，我作为一个内向的人苦于自己的闭塞走了很多的弯路，完美主义等问题都是至今困扰我的问题，要是早点看到这些资料应该会少走很多弯路吧。","like_count":1,"discussions":[{"author":{"id":1001723,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/fb/747fdba8.jpg","nickname":"mindwind","note":"","ucode":"21236147DFD116","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527546,"discussion_content":"^_^","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633000133,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137977,"user_name":"丁丁历险记","can_delete":false,"product_type":"c1","uid":1661704,"ip_address":"","ucode":"A43829E454C067","user_header":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","comment_is_top":false,"comment_ctime":1569948655,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5864915951","product_id":100012101,"comment_content":"处于你看完设计模式就死命折腾那位同学的状态","like_count":1},{"had_liked":false,"id":94195,"user_name":"Wallace","can_delete":false,"product_type":"c1","uid":1189303,"ip_address":"","ucode":"DA6E65D5D63B46","user_header":"https://static001.geekbang.org/account/avatar/00/12/25/b7/23aa62d7.jpg","comment_is_top":false,"comment_ctime":1557742885,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5852710181","product_id":100012101,"comment_content":"其实“精益”并不是“精细”。开始所谓的“粗放”正是符合“精益”原则的，因为“粗放”是成本最低的生产方式；而在早期过度“精细”反而是违背“精益”，比如在还没证明一个手机能work之前，花大的代价追求超轻超薄。","like_count":1},{"had_liked":false,"id":90846,"user_name":"Danpier","can_delete":false,"product_type":"c1","uid":1463474,"ip_address":"","ucode":"11E208FDE34961","user_header":"https://static001.geekbang.org/account/avatar/00/16/54/b2/5ea0b709.jpg","comment_is_top":false,"comment_ctime":1556687603,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5851654899","product_id":100012101,"comment_content":"陶器的例子挺让我意外的，很受启发。","like_count":1},{"had_liked":false,"id":53658,"user_name":"苦行僧","can_delete":false,"product_type":"c1","uid":1055334,"ip_address":"","ucode":"726024A9A9CF44","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/66/2d9db9ed.jpg","comment_is_top":false,"comment_ctime":1545706086,"is_pvip":false,"replies":[{"id":"19514","content":"这也是一种产品和审美思维的修炼","user_name":"作者回复","user_name_real":"mindwind","uid":"1001723","ctime":1545734784,"ip_address":"","comment_id":53658,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5840673382","product_id":100012101,"comment_content":"小到一个类名 一个函数名 一个变量名 一段超过几百行的类 都值得再次优化改进 我觉得程序员要有精益思维 增一分则多 减一分则少 如此种种改进 定能提高自己写代码 写出满意代码","like_count":1,"discussions":[{"author":{"id":1001723,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/fb/747fdba8.jpg","nickname":"mindwind","note":"","ucode":"21236147DFD116","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434215,"discussion_content":"这也是一种产品和审美思维的修炼","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545734784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":24384,"user_name":"belongcai蔡炳榕","can_delete":false,"product_type":"c1","uid":1047677,"ip_address":"","ucode":"2196D413FEABA3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fc/7d/800888a3.jpg","comment_is_top":false,"comment_ctime":1536943085,"is_pvip":false,"replies":[{"id":"8947","content":"对","user_name":"作者回复","user_name_real":"mindwind","uid":"1001723","ctime":1537019192,"ip_address":"","comment_id":24384,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5831910381","product_id":100012101,"comment_content":"是的，我觉得码农的蜕变在于不断地迭代，提炼。","like_count":1,"discussions":[{"author":{"id":1001723,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/fb/747fdba8.jpg","nickname":"mindwind","note":"","ucode":"21236147DFD116","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423964,"discussion_content":"对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537019192,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21371,"user_name":"天行冕下","can_delete":false,"product_type":"c1","uid":1179365,"ip_address":"","ucode":"7A50DB56C6EC8D","user_header":"https://static001.geekbang.org/account/avatar/00/11/fe/e5/c3f3c3ff.jpg","comment_is_top":false,"comment_ctime":1535063080,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5830030376","product_id":100012101,"comment_content":"我理解的粗犷应该是:在有限的时间内解决我们需要解决的问题，而不是谨小慎微，面面俱到。<br>但是，粗犷不是一种借口。我们的工作始终都是建立前人基础之上的，已有的设计模式、架构模式、成熟的框架等等，都是我们工作的基础。","like_count":1},{"had_liked":false,"id":21043,"user_name":"云学","can_delete":false,"product_type":"c1","uid":1027233,"ip_address":"","ucode":"366AE90BA06356","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ac/a1/43d83698.jpg","comment_is_top":false,"comment_ctime":1534898056,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5829865352","product_id":100012101,"comment_content":"用心写代码成就卓越软件","like_count":1},{"had_liked":false,"id":349195,"user_name":"Reiser","can_delete":false,"product_type":"c1","uid":1078669,"ip_address":"","ucode":"E5DBBBA2F86FCE","user_header":"https://static001.geekbang.org/account/avatar/00/10/75/8d/c6a2a048.jpg","comment_is_top":false,"comment_ctime":1655792603,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1655792603","product_id":100012101,"comment_content":"有时候赶着上线，心里想着先实现再完美。但是可能以后再也没时间修改以前的代码了，累计了技术负债","like_count":0},{"had_liked":false,"id":280519,"user_name":"Sch0ng","can_delete":false,"product_type":"c1","uid":1145554,"ip_address":"","ucode":"73F6113931B1AC","user_header":"https://static001.geekbang.org/account/avatar/00/11/7a/d2/4ba67c0c.jpg","comment_is_top":false,"comment_ctime":1614239885,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614239885","product_id":100012101,"comment_content":"对于个人成长，多做多想是从粗放到好和精益的必经之路。<br>对于企业发展，企业的不同发展阶段对于系统的迭代速度和稳定性要求是不一样的。<br>对于研发团队，只有好和精益才是长期可持续的奠基石。<br>面对不同的对象，处在不同的环境，采取相应的策略。<br>多数时候形势比人强，不知不觉就被裹挟起来了。","like_count":0},{"had_liked":false,"id":277352,"user_name":"Sudouble","can_delete":false,"product_type":"c1","uid":1365574,"ip_address":"","ucode":"B369B09DAF8D20","user_header":"https://static001.geekbang.org/account/avatar/00/14/d6/46/5eb5261b.jpg","comment_is_top":false,"comment_ctime":1612367646,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1612367646","product_id":100012101,"comment_content":"搭一个大致多玩框架，逐步往框架上加功能的阶段。粗放和精细多玩过渡吧，减少软件返工的几率","like_count":0},{"had_liked":false,"id":268526,"user_name":"Hank_Yan","can_delete":false,"product_type":"c1","uid":1110662,"ip_address":"","ucode":"86899B561C502B","user_header":"https://static001.geekbang.org/account/avatar/00/10/f2/86/d689f77e.jpg","comment_is_top":false,"comment_ctime":1608248494,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608248494","product_id":100012101,"comment_content":"权衡，取舍，贯穿始终。粗放，精益，不同阶段的正确手段。","like_count":0},{"had_liked":false,"id":254380,"user_name":"Seachal","can_delete":false,"product_type":"c1","uid":1301397,"ip_address":"","ucode":"A6F69EA7879EEF","user_header":"https://static001.geekbang.org/account/avatar/00/13/db/95/daad899f.jpg","comment_is_top":false,"comment_ctime":1603108511,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603108511","product_id":100012101,"comment_content":"恍然大悟，总想准备好，准备好，黄花菜都晾了","like_count":0},{"had_liked":false,"id":140032,"user_name":"gkb111","can_delete":false,"product_type":"c1","uid":1224217,"ip_address":"","ucode":"9B3154BCC9046B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLLUic3XzxET3L3QXxcTbeg96GMx1HkiaiaZdudchmOmtPnuEPHK5vYEeMkvJR098XljMbXDialYib3z6w/132","comment_is_top":false,"comment_ctime":1570791119,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570791119","product_id":100012101,"comment_content":"基本功能完成，不是放在那里，而是不停改进直至完美，这才是完美主义思维。","like_count":0},{"had_liked":false,"id":110582,"user_name":"赵高龙","can_delete":false,"product_type":"c1","uid":1259115,"ip_address":"","ucode":"0DF7550246BFA5","user_header":"https://static001.geekbang.org/account/avatar/00/13/36/6b/d20ee86b.jpg","comment_is_top":false,"comment_ctime":1562296413,"is_pvip":false,"replies":[{"id":"41700","content":"很有形象感，粗放的少年","user_name":"作者回复","user_name_real":"mindwind","uid":"1001723","ctime":1563278777,"ip_address":"","comment_id":110582,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562296413","product_id":100012101,"comment_content":"目前处在逐渐精益的阶段，在之前写的系统有个功能写到四五百行代码，后来调整删减了三百多行。在调整完有很大的成就感，同时也看到当年那个粗放的少年。粗放确是精益的必经之路。","like_count":0,"discussions":[{"author":{"id":1001723,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/fb/747fdba8.jpg","nickname":"mindwind","note":"","ucode":"21236147DFD116","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456954,"discussion_content":"很有形象感，粗放的少年","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563278777,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56634,"user_name":"今之人兮","can_delete":false,"product_type":"c1","uid":1205542,"ip_address":"","ucode":"140DBBE133E1FE","user_header":"https://static001.geekbang.org/account/avatar/00/12/65/26/2e9bc97f.jpg","comment_is_top":false,"comment_ctime":1546512342,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546512342","product_id":100012101,"comment_content":"写的多了，了解的深入了。才知道如何去精","like_count":0},{"had_liked":false,"id":36021,"user_name":"拿破仑","can_delete":false,"product_type":"c1","uid":1263863,"ip_address":"","ucode":"85B6A637C45055","user_header":"https://static001.geekbang.org/account/avatar/00/13/48/f7/aa54bf65.jpg","comment_is_top":false,"comment_ctime":1540894945,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540894945","product_id":100012101,"comment_content":"“粗放的多”到“精益的好和快”，是一个由量变到质变的过程","like_count":0},{"had_liked":false,"id":32019,"user_name":"HellloWorld","can_delete":false,"product_type":"c1","uid":1193388,"ip_address":"","ucode":"CAC6F12DF6AF1F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIVy4eB1Ncz4HNDnatoib4x3D8icA5AwbV8aoP13N7bibOibCWw0bZiar3vjearzMU6KItmK5ibuxZe68tw/132","comment_is_top":false,"comment_ctime":1539387331,"is_pvip":false,"replies":[{"id":"11623","content":"🤝^_^","user_name":"作者回复","user_name_real":"mindwind","uid":"1001723","ctime":1539430478,"ip_address":"","comment_id":32019,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1539387331","product_id":100012101,"comment_content":"看了峰哥的分享很受启发，我的感触是:先完成，后完美！","like_count":0,"discussions":[{"author":{"id":1001723,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/fb/747fdba8.jpg","nickname":"mindwind","note":"","ucode":"21236147DFD116","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426612,"discussion_content":"🤝^_^","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539430478,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":27570,"user_name":"湮汐","can_delete":false,"product_type":"c1","uid":1106268,"ip_address":"","ucode":"FB6185621891E5","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/5c/86606d9c.jpg","comment_is_top":false,"comment_ctime":1537921995,"is_pvip":true,"replies":[{"id":"10045","content":"在粗和精之间的平衡能拿捏的恰到好处，肯定已是高手了😄","user_name":"作者回复","user_name_real":"mindwind","uid":"1001723","ctime":1537969696,"ip_address":"","comment_id":27570,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1537921995","product_id":100012101,"comment_content":"在该快的地方快，在该慢的地方慢。该囫囵吞枣的地方就应该粗，该精益求精的地方就应该细。不能所有的地方都粗，那样代码只会越堆越烂，单纯的为了完成功能代码只是最基本的要求。但是也不能每个地方都细，那样整个成本的消耗都太大了，不管是个人精力还是项目的deadline都经不起这样的消耗。但是写粗代码的时候，也一定要带着“细”的思想去思考，形成一种习惯，不断的多练多写代码。有了量的积累，才有质的飞跃！","like_count":0,"discussions":[{"author":{"id":1001723,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/fb/747fdba8.jpg","nickname":"mindwind","note":"","ucode":"21236147DFD116","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424951,"discussion_content":"在粗和精之间的平衡能拿捏的恰到好处，肯定已是高手了😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537969696,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23660,"user_name":"like_jun","can_delete":false,"product_type":"c1","uid":1195771,"ip_address":"","ucode":"3D72B215774E1B","user_header":"https://static001.geekbang.org/account/avatar/00/12/3e/fb/51f8dfe7.jpg","comment_is_top":false,"comment_ctime":1536577219,"is_pvip":false,"replies":[{"id":"8594","content":"是的","user_name":"作者回复","user_name_real":"mindwind","uid":"1001723","ctime":1536578304,"ip_address":"","comment_id":23660,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1536577219","product_id":100012101,"comment_content":"写多了。就会思考了。然后再改变。","like_count":0,"discussions":[{"author":{"id":1001723,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/fb/747fdba8.jpg","nickname":"mindwind","note":"","ucode":"21236147DFD116","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423665,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536578304,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23262,"user_name":"liangjf","can_delete":false,"product_type":"c1","uid":1058812,"ip_address":"","ucode":"681A6CCF098F55","user_header":"https://static001.geekbang.org/account/avatar/00/10/27/fc/b8d83d56.jpg","comment_is_top":false,"comment_ctime":1536240646,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1536240646","product_id":100012101,"comment_content":"粗而快，是实现功能需求效率高迭代快。精而慢，是粗而快的进阶，是前者经过长期经验积累和总结的进阶","like_count":0}]}