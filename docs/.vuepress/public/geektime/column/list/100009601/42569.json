{"id":42569,"title":"49 | 深入浅出网站高性能架构设计","content":"<p>你好，我是茹炳晟。今天我和你分享的主题是：深入浅出网站高性能架构设计。</p>\n<p>在上一篇文章中，我从全局的角度和你分享了测试人员学习架构知识的重要性、应该学到什么程度，以及怎么学的问题，希望你可以借此明白网站架构的why、what、how。</p>\n<p>接下来，我将站在测试人员的视角，通过这个专栏的最后四篇文章，和你分享网站的高性能架构、高可用架构、伸缩性架构以及扩展性架构。希望借此机会，可以让你对网站的架构设计做到心中有数，在设计测试用例时可以做到有的放矢。</p>\n<p>今天我们就先从网站高性能架构的设计开始吧。</p>\n<p>性能是网站的重要指标，如果一个网站的访问速度很慢，就会直接导致大量用户的流失。所以说，性能是设计网站架构时要考虑的关键因素。也因此，网站的性能问题成了网站架构升级、优化的导火索。</p>\n<p>目前，为了优化网站性能，业界出现了很多相关的架构改进方案和技术手段。而包括了这些升级、优化网站性能的方案、技术手段在内的高性能架构设计，是个很大的话题，单单依靠几篇文章是很难讲清楚的。所以，我从中精选了一些对测试工程师比较关键的概念和技术，和你展开今天的分享。</p>\n<p>如果你想了解更细节的技术实现的话，可以参考我在上一篇文章中推荐的学习资料，也可以直接在留言区给我留言。</p><!-- [[[read_end]]] -->\n<p>从全局来看，网站的高性能架构设计包括两大部分内容：一是前端性能，二是后端服务器相关的性能优化和架构设计。</p>\n<h2>前端的高性能架构</h2>\n<p>关于什么是前端性能，以及如何设计针对前端性能的测试，你可以直接参考第31篇文章<a href=\"https://time.geekbang.org/column/article/17935\">《工欲善其事必先利其器：前端性能测试工具原理与行业常用工具简介》</a>中的相关内容。</p>\n<p>相对来说，<strong>前端高性能架构比较直观易懂，其本质就是通过各种技术手段去优化用户实际感受到的前端页面展现时间。</strong></p>\n<p>目前，业内的标准实践是来自于雅虎前端性能团队提出的35条原则，我已经在第29篇文章<a href=\"https://time.geekbang.org/column/article/14832\">《聊聊性能测试的基本方法与应用领域》</a>中，为你解读了其中几个比较典型的规则，你可以再回顾下。同时，你还可以访问<a href=\"https://developer.yahoo.com/performance/rules.html?guccounter=1\">雅虎网站</a>查看经典的35条规则，以及对各规则的详细解读。</p>\n<p>前端的高性能架构相对于后端来讲比较容易实现，因为前端性能优化的方法是相对标准的。而且，目前的前端性能测试工具，比如我在前面文章中曾经介绍过的WebPageTest和YSlow之类的工具等，都能系统性地分析前端的性能问题，并给出对应的解决方案建议。</p>\n<p>可以说，我们只要在项目开发过程中，把前端性能优化纳入了测试范围，那么一般来讲都能获得比较理想的性能优化结果。</p>\n<h2>后端服务器的高性能架构</h2>\n<p>后端服务器的高性能架构，业内采用的最主要的技术手段是缓存。同时，集群也可以从计算能力的角度，提升后端的处理性能。</p>\n<h3>缓存</h3>\n<p>可以说，在计算机的世界中，凡是想要提高性能的场合都会使用到缓存的思想。缓存是指将数据存储在访问速度相对较快的存储介质中，所以从缓存中读取数据的速度更快。</p>\n<p>另外，如果缓存中的数据是经过复杂计算得到的，那么再次使用被缓存的数据时，就无需再重复计算即可直接使用。从这个意义上讲，缓存还具有降低后端运算负载的作用。</p>\n<p>可见，缓存在软件系统和网站架构中几乎无处不在。当然了，在系统和软件的不同级别对应有不同层级的缓存：</p>\n<ul>\n<li>浏览器级别的缓存，会用来存储之前在网络上下载过的静态资源；</li>\n<li>CDN本质也是缓存，属于部署在网络服务供应商机房中的缓存；</li>\n<li>反向代理服务器本质上同样也是缓存，属于用户数据中心最前端的缓存；</li>\n<li>数据库中的“热点”数据，在应用服务器集群中有一级缓存，在缓存服务集群中有二级缓存；</li>\n<li>甚至是用于URL和服务器IP地址转换DNS服务器，为了减少重复查询的次数也采用了缓存。</li>\n</ul>\n<p>启用了缓存后，当应用程序需要读取数据时，会先试图从缓存中读取：</p>\n<ul>\n<li>如果读取成功，我们称为缓存命中，此时就可以在很大程度上降低访问数据库的时间开销。</li>\n<li>如果没有读取到数据或者缓存中的数据已经过期失效，那么应用程序就会访问数据库去获取相应的数据。获取到数据后，在把数据返回给应用程序的同时，还会把该数据写入到缓存中，以备下次使用。</li>\n</ul>\n<p><strong>缓存主要用来存储那些相对变化较少，并且遵从“二八原则”的数据。这里的“二八原则”指的是80%的数据访问会集中在20%的数据上</strong>。</p>\n<p>也就是说，如果我们将这20%的数据缓存起来，那么这些数据就会具有非常高的读写比。读写比越高，说明缓存中的数据被使用的次数也就越多，从而节省的数据库访问也就越多，缓存的优势也就越明显。</p>\n<p>需要特别注意的是，<strong>缓存技术并不适用于那些需要频繁修改的数据</strong>。对于这种需要频繁修改的数据来说，经常会出现刚刚写入缓存的数据还没来得及被读取就已经失效了的场景。所以，在这种情况下，缓存不仅不会带来性能提升，反而会增加系统开销。</p>\n<p>从理论上来讲，缓存的作用是辅助提升数据的读取性能，缓存数据丢失或者缓存不可用不应该影响整个系统的可用性，因为即使没有了缓存，数据依旧可以从数据库中获得。但是，现在的数据库已经习惯了有缓存的日子，假如哪天缓存系统奔溃了，就会在短时间内有大量的请求来访问数据库，数据库就很可能会因为无法承受这样的并发压力而宕机。</p>\n<p>为了解决这个问题，有些网站会使用缓存热备等技术手段来提供缓存的高可用性，即：当某台缓存服务器宕机的时候，会将缓存访问切换到热备的缓存服务器上。</p>\n<p>另外，如果你采用了分布式缓存服务器集群的话，那么缓存的数据将被分布到集群中的多台服务器上，当其中一台服务器宕机的时候，也只会丢失一部分缓存数据，此时通过访问数据库来重建这些缓存数据的开销并不算太大。</p>\n<p>目前，分布式缓存架构的主流技术方案有两种：</p>\n<ul>\n<li><strong>一种是，在企业级应用中广泛采用的JBoss Cache</strong>。JBoss Cache需要在缓存集群中的每台机器上同步所有缓存的副本，当集群规模比较大的时候，同步代价会很高。而且，多份副本也会造成存储资源的浪费。但其最大的优点是速度非常快，所以JBoss Cache更适用于企业级规模不是很大的缓存集群。这种企业级的集群一般在几台到十几台服务器的规模。</li>\n<li><strong>另一种是，在互联网应用的主流Memcached</strong>。Memcached属于互不通信的分布式架构，集群中各个节点缓存的数据都不一样，缓存使用者基于Hash一致性算法来定位具体的内容到底缓存在集群中的哪个节点。<br />\n因此，Memcached具有缓存容量大，存储效率高，可以很方便地支持集群的扩展，但是速度相对较慢的特点。这些特点决定了Memcached非常适用于现如今的互联网产品架构，几乎成为了网站分布式缓存架构的代名词。</li>\n</ul>\n<p>互联网产品架构的应用服务器集群规模一般都很大，即使小规模的应用集群也有上百台机器，规模大的话可以达到上万台，这种架构下的缓存集群规模要求也非常大。</p>\n<p>通过上面这些些缓存的基础知识，再结合着你在平时项目中积累的相关经验，相信你已经理解了缓存的原理。那么，接下来我们再从测试人员的视角来看看，在执行测试时需要考虑到哪些与缓存相关的测试场景：</p>\n<ul>\n<li>对于前端的测试场景，需要分别考虑缓存命中和缓存不命中情况下的页面加载时间。</li>\n<li>基于缓存过期测试策略的设计，需要考虑到必须要重新获取数据的测试场景。</li>\n<li>需要针对可能存在的缓存“脏数据”，进行有针对性的测试。缓存“脏数据”，是指数据库中的数据已经更新，但是缓存中的数据还没来得及更新的场景。</li>\n<li>需要针对可能的缓存穿透进行必要的测试。缓存穿透，是指访问的数据并不存在，所以这部分数据永远不会有被缓存的机会，因此此类请求会一直重复访问数据库。</li>\n<li>系统冷启动后，在缓存预热阶段的数据库访问压力是否会超过数据库实际可以承载的压力。</li>\n<li>对于分布式缓存集群来说，由于各集群使用的缓存算法不同，那么如果要在缓存集群中增加更多节点进行扩容的话，扩容对原本已经缓存数据的影响也会不同。所以，我们需要针对缓存集群扩容的场景，进行必要的测试和性能评估。</li>\n</ul>\n<h3>集群</h3>\n<p>集群也是提升网站性能和并发处理能力的典型架构设计方法。</p>\n<p>当一台服务器不足以满足日益增长的用户流量时，我们就可以考虑使用多台服务器来组成一个集群：外部请求将统一和负载均衡器打交道；负载均衡器根据不同的负载调度算法，将访问请求传递给集群中的某台服务器处理。</p>\n<p>需要注意的是，在这种模式下，集群中的任何一台服务器宕机都不会给整个系统带来明显的影响。此时，每台服务器的地位也都不怎么高，我们可以直接替换掉出现了问题的某台服务器。同样地，当需要支持更大的系统负载时，我们就可以在集群中添加更多的服务器。</p>\n<p>这时，集群中的每台服务器都可以被随时替换或者淘汰掉，就像“牲口”似的可以任人宰割。所以，这种模式，就有点类似于“牲口”模式。</p>\n<p>与“牲口”模式对应的是“宠物”模式，比如一些企业级的应用，它们往往不通过集群来扩展系统的能力和提高系统的性能，而是采用更为强劲的服务器。</p>\n<p>这种性能非常强大的单台服务器，价格往往十分昂贵，所以通常都会被特别关照，比如给其配备最好的机房和UPS等等。另外，大家都不敢对这样的服务器有任何大的动作，生怕把它们搞坏了。此时，这些价格昂贵的服务器更像是“宠物”。</p>\n<p>综上所述，现今的互联网应用采用的都是“牲口”模式。在这种模式下，我们在开展测试时，相应地需要额外关注以下这些测试点：</p>\n<ul>\n<li>集群容量扩展。也就是说，集群中加入新的节点后，是否会对原有的session产生影响。</li>\n<li>对于无状态应用，是否可以实现灵活的实效转移。</li>\n<li>对于基于session的有状态应用，需要根据不同的session机制验证会话是否可以正常保持，即保证同一session始终都有同一个确定的节点在处理。</li>\n<li>当集群中的一个或者多个节点宕机时，对在线用户的影响是否符合设计预期。</li>\n<li>对于无状态应用来说，系统吞吐量是否能够随着集群中节点的数量呈线性增长。</li>\n<li>负载均衡算法的实际效果，是否符合预期。</li>\n<li>高并发场景下，集群能够承载的最大容量。</li>\n</ul>\n<h2>总结</h2>\n<p>今天，我以测试人员的视角，和你分享了网站高性能架构设计中，需要重点关注的点。</p>\n<p>首先，网站的性能，在很大程度上和用户的体量有直接关系。因此，开发人员在设计网站架构时，必须要重点考虑与性能相关的架构设计。相应地，测试人员在测试网站性能时，也要考虑到这其中的架构设计。</p>\n<p>其次，网站高性能架构设计，主要包括前端性能优化和后端服务器的性能调优。所以，我从这两个方面，和你展开了今天的分享。测试人员在理解了两大部分知识的基础上，在设计具体的测试时，要考虑到这些网站高性能架构设计的方案、技术手段，以此制定出需要额外增加的测试点，以及对应的测试方法。</p>\n<p>最后，关于网站性能测试的理论与方法，你可以参考我在第28~34篇文章（也就是性能测试系列文章）中的相关内容。</p>\n<h2>思考题</h2>\n<p>在你接触过的项目中，都遇到过哪些系统层面的高性能架构设计方案？从测试的角度来看，你又会设计怎样的测试场景和用例？</p>\n<p>感谢你的收听，欢迎你给我留言。</p>\n<p></p>\n","neighbors":{"left":{"article_title":"48 | 优秀的测试工程师为什么要懂大型网站的架构设计？","id":42373},"right":{"article_title":"50 | 深入浅出网站高可用架构设计","id":42509}},"comments":[{"had_liked":false,"id":134030,"user_name":"lerame","can_delete":false,"product_type":"c1","uid":1333151,"ip_address":"","ucode":"2089858F7BBF97","user_header":"https://static001.geekbang.org/account/avatar/00/14/57/9f/94128044.jpg","comment_is_top":false,"comment_ctime":1568724126,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"31633495198","product_id":100009601,"comment_content":"memcached已经快淘汰了吧？","like_count":7},{"had_liked":false,"id":35155,"user_name":"乔木有天堂","can_delete":false,"product_type":"c1","uid":1167011,"ip_address":"","ucode":"BCAECD50C4E238","user_header":"https://static001.geekbang.org/account/avatar/00/11/ce/a3/1385ba21.jpg","comment_is_top":false,"comment_ctime":1540440821,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"18720310005","product_id":100009601,"comment_content":"您好，有个问题最近一直困扰着我，我们的产品经过了一年左右的时间开发，最近上线开始面向客户使用，在使用过程中出现了很多的bug，很影响用户体验，我和我的测试小伙伴们也很自责，现在压力也很大，我们应该怎么走出这样的困境呢？","like_count":4,"discussions":[{"author":{"id":1619402,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b5/ca/bba4d696.jpg","nickname":"牺牲","note":"","ucode":"5780E562A43494","race_medal":2,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":141284,"discussion_content":"测试场景比较复杂，用例设计不全面，上线前没有覆盖全。可以考虑加入beta环境，部署后切入百分几的流量。相对稳定后再部署到线上环境。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1579407096,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1518805,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2c/d5/6e273a01.jpg","nickname":"Optimism.忆情","note":"","ucode":"89956D06CDE914","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":396007,"discussion_content":"这种情况，肯定首先想到的如何补救，再总结原因吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632380763,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1112210,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/92/eaafff96.jpg","nickname":"Amos","note":"","ucode":"61DB72D99AF9EA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":273024,"discussion_content":"出现问题不是测试一个组的责任，或者从早期开始的规划就不合理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590394422,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1520583,"avatar":"https://static001.geekbang.org/account/avatar/00/17/33/c7/750619e8.jpg","nickname":"一舟雪","note":"","ucode":"ECCB5FF011F7B3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1112210,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/92/eaafff96.jpg","nickname":"Amos","note":"","ucode":"61DB72D99AF9EA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350303,"discussion_content":"如果产品和开发人员都能有这个认知就好了。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613805744,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":273024,"ip_address":""},"score":350303,"extra":""}]}]},{"had_liked":false,"id":152724,"user_name":"修行者HT","can_delete":false,"product_type":"c1","uid":1741055,"ip_address":"","ucode":"99BFC981112951","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJeybPwAhKgbAe5SJZLYCQ3UiayIjtmicdqJZS1Oo6fyjdjgyiac6pPAJwbFteflxbiaVfvNr3XeEibRSQ/132","comment_is_top":false,"comment_ctime":1574070182,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14458972070","product_id":100009601,"comment_content":"对于还不能分析系统架构层面的测试人员，个人常常告诉他们，可以使用一种比较笨的做法<br>就是在进行系统和接口层面测试时，进行一定的压力测试。这样往往能够抛砖引玉，发现一些问题，从而引导去认识新问题，关注架构层面","like_count":3,"discussions":[{"author":{"id":1672674,"avatar":"https://static001.geekbang.org/account/avatar/00/19/85/e2/540b91fa.jpg","nickname":"凯耐","note":"","ucode":"DF9C2170509BD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":320827,"discussion_content":"确实可以压测出许多问题比如内存溢出，服务器宕机、Redis宕机、MQ消息队列已满，跟进这些问题探索性去摸索架构层面的知识","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604485086,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":258568,"user_name":"凯耐","can_delete":false,"product_type":"c1","uid":1672674,"ip_address":"","ucode":"DF9C2170509BD0","user_header":"https://static001.geekbang.org/account/avatar/00/19/85/e2/540b91fa.jpg","comment_is_top":false,"comment_ctime":1604485583,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10194420175","product_id":100009601,"comment_content":"高性能分布式架构一般从JVM参数设置，SQL优化、代码优化、缓存、中间件、服务器集群、高配置的硬件设备这些方面做性能优化","like_count":2},{"had_liked":false,"id":148514,"user_name":"yangliuqing","can_delete":false,"product_type":"c1","uid":1460885,"ip_address":"","ucode":"C074F4E3B9CA17","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJuMT3ZicYDx7bQ8CxJeCfWP0uTIAicT6b4IwVcGWVGqdsK0C86Fx6F9gdaRkicO7BjRmv75mMcMXWdg/132","comment_is_top":false,"comment_ctime":1573023304,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10162957896","product_id":100009601,"comment_content":"我们项目中，开始缓存用了solr，然后感觉对这个用的不太熟，加上业务增长，导致生产事故，后面就直接数据库扩容了，今年又开始了数据迁移到es。还有些业务查询，做了各种redis缓存，感觉redis压力也大了，这个点，还是要把控好了。","like_count":2},{"had_liked":false,"id":34844,"user_name":"涅槃Ls","can_delete":false,"product_type":"c1","uid":1163943,"ip_address":"","ucode":"39EDBFB303D668","user_header":"https://static001.geekbang.org/account/avatar/00/11/c2/a7/c4de1048.jpg","comment_is_top":false,"comment_ctime":1540339906,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10130274498","product_id":100009601,"comment_content":"打卡49","like_count":2},{"had_liked":false,"id":99276,"user_name":"口水窝","can_delete":false,"product_type":"c1","uid":1004838,"ip_address":"","ucode":"6028B5AA10D8A1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/26/154f9578.jpg","comment_is_top":false,"comment_ctime":1559185113,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5854152409","product_id":100009601,"comment_content":"  工作中遇到过缓存和集群，但是测试的时候无从下手，不知道从哪些方面考虑，不知道从哪些方面开展测试。","like_count":1},{"had_liked":false,"id":78195,"user_name":"arthur","can_delete":false,"product_type":"c1","uid":1116981,"ip_address":"","ucode":"EAD9D9D2837C5F","user_header":"https://static001.geekbang.org/account/avatar/00/11/0b/35/2c56c29c.jpg","comment_is_top":false,"comment_ctime":1553090855,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5848058151","product_id":100009601,"comment_content":"我们系统发现的大部分性能问题，都是通过前端调优或者sql语句优化来解决的，老师能不能谈一下如何优化sql查询","like_count":1},{"had_liked":false,"id":335633,"user_name":"小呀么小二郎","can_delete":false,"product_type":"c1","uid":1326905,"ip_address":"","ucode":"149540DCFDF43E","user_header":"https://static001.geekbang.org/account/avatar/00/14/3f/39/b1558fc9.jpg","comment_is_top":false,"comment_ctime":1645609249,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645609249","product_id":100009601,"comment_content":"缓存穿透的场景，想不到实际的例子来对应。<br><br>“对于无状态应用，是否可以实现灵活的实效转移。”这句话也没明白","like_count":0},{"had_liked":false,"id":196967,"user_name":"西","can_delete":false,"product_type":"c1","uid":1165315,"ip_address":"","ucode":"A6F774E6845F69","user_header":"https://static001.geekbang.org/account/avatar/00/11/c8/03/ae1d1057.jpg","comment_is_top":false,"comment_ctime":1585325569,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1585325569","product_id":100009601,"comment_content":"在测试环境中如何检验集群中某个服务器宕机，对集群的影响呢？测试环境中无法模拟线上集群环境。","like_count":0,"discussions":[{"author":{"id":1672674,"avatar":"https://static001.geekbang.org/account/avatar/00/19/85/e2/540b91fa.jpg","nickname":"凯耐","note":"","ucode":"DF9C2170509BD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":320828,"discussion_content":"测试环境扩容一台服务器做集群就是，测试时关闭一台服务器测试服务是不是正常运行就好了（一台服务器宕机轮询到下一台服务器正常访问）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604485486,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135474,"user_name":"盒子妮","can_delete":false,"product_type":"c1","uid":1565885,"ip_address":"","ucode":"A7EF8775F7B979","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKjX37aIYNjm4SOVDoACNe4TL5jFOkDPgFa7uTRKzDj0yN1uacEuyNzfyZt1DpIIjYL0Ribfhs9YIw/132","comment_is_top":false,"comment_ctime":1569193382,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569193382","product_id":100009601,"comment_content":"我必须要评价一下，因为通过本文我了解了更多关注高性能的知识点。谢谢老师。","like_count":0},{"had_liked":false,"id":112751,"user_name":"泡芙小妞","can_delete":false,"product_type":"c1","uid":1491305,"ip_address":"","ucode":"49FD84EB7F56A8","user_header":"https://static001.geekbang.org/account/avatar/00/16/c1/69/4534e19a.jpg","comment_is_top":false,"comment_ctime":1562815093,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562815093","product_id":100009601,"comment_content":"你好 我们的服务器架构也是使用了集群和缓存 但是不知道那些业务缓存那些业务是集群 请问这个要怎么做呢","like_count":0},{"had_liked":false,"id":99325,"user_name":"口水窝","can_delete":false,"product_type":"c1","uid":1004838,"ip_address":"","ucode":"6028B5AA10D8A1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/26/154f9578.jpg","comment_is_top":false,"comment_ctime":1559193384,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559193384","product_id":100009601,"comment_content":"打卡49","like_count":0},{"had_liked":false,"id":45446,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1543644440,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1543644440","product_id":100009601,"comment_content":"测试工程师发现性能缺陷如何帮助开发人员定位和优化系统。","like_count":0,"discussions":[{"author":{"id":1263139,"avatar":"","nickname":"小倩@bytedance","note":"","ucode":"14BCBF4A08D318","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":345535,"discussion_content":"亲 看到你的评论感觉平常也是个很靠谱的人呢 最近考虑换工作么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611737765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}