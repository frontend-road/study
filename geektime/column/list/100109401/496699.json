{"id":496699,"title":"07｜TDD中的测试（3）：集成测试还是单元测试？","content":"<p>你好，我是徐昊。今天我们来继续学习测试驱动开发中的测试。</p><p>上节课我们介绍了行为验证，以及为什么它不应该是TDD的主要验证方式，而应该尽可能地采用状态验证。至此，我们介绍完了测试驱动开发中测试的基本结构，及其主要的验证方法。</p><p>有了这些做基础，我们再来讨论一下测试驱动中测试的性质，以及为什么称呼它为“单元测试”是一种误解。</p><h2>集成测试还是单元测试？</h2><p>首先请回忆<a href=\"http://https://time.geekbang.org/column/article/494207\">第一讲</a>中的视频演示，我们从功能出发，分解出来的第一个驱动开发的测试，是针对布尔选项的测试：</p><pre><code>//ArgsTest\n\n@Test\npublic void should_set_boolean_option_to_true_if_flag_present() {\n  BoolOption options = Args.parse(BooleanOption.class, &quot;-l&quot;);\n  assertTrue(options.logging());\n}\n\nstatic record BooleanOption(@Option(&quot;l&quot;) boolean logging);\n</code></pre><p>而后来在重构中（参看<a href=\"http://https://time.geekbang.org/column/intro/100109401?tab=catalog\">第三讲</a>），我们抽取了OptionParser接口，并将上面的测试改写成了一个范围更小的测试：</p><pre><code>//OptionParsersTest.BooleanOptionParser\n\n@Test\npublic void should_set_value_to_true_if_option_present() {\n  assertTrue(OptionParsers.bool().parse(asList(&quot;-l&quot;), option(&quot;l&quot;)));\n}\n</code></pre><p>这两个测试看起来没有什么不同，测试的功能也是一致的功能。但如果严格区分的话，第一个测试是<strong>所谓的</strong>集成测试（Integration Test）或功能测试（Functional Test），而第二个测试，则是我们<strong>常规意义上的单元测试</strong>（Unit Test），也就是对于单一单元的测试。</p><p><img src=\"https://static001.geekbang.org/resource/image/25/f2/2513f690c174d3ea87a353119a812df2.jpg?wh=2284x1201\" alt=\"\"></p><p>如上图所示，第一个测试的测试范围包含了Args和OptionParser，可以看作是“集成测试”或“功能测试”。第二个测试的测试范围仅仅覆盖OptionParser，才会被看作是“单元测试”。</p><!-- [[[read_end]]] --><p>正如我们前面提到的，这个OptionParser接口并不是一开始就存在，而是<strong>通过重构获得的</strong>。在重构的过程中，我们从Args中分离了部分代码，从而使得ArgsTest的测试范围不再聚焦于某一个单元，而是覆盖了更多的单元。</p><p>于是ArgsTest就成了“集成测试”。更有意思的是，在重构的过程中，虽然这个测试没有任何变动，但是到重构结束的时候，它就从“单元测试”变成了“集成测试”。</p><h2>TDD中的单元测试</h2><p>既然我们没有改变测试代码，而仅仅通过重构就改变了测试的种类，那么我们区分不同种类的测试还有什么意义呢？为什么TDD社区又特别爱强调要编写“单元测试”呢？</p><p>在TDD的语境下，“单元测试”指的是<strong>能提供快速反馈的低成本的研发测试（Developer Test）</strong>。TDD社区希望通过强调“单元测试”，来强调这些特点。但是“单元测试”这个词，并不是由TDD社区发明的，而是软件行业中由来已久的一个词汇。在不做任何强调的情况下，它会指<strong>针对不涉及进程外组件的单一软件单元的测试。</strong></p><p>为了让测试能够聚焦到单一的单元，就需要拆分单元间的依赖，那么最终会得到<strong>一组彼此间没有直接耦合关系的小粒度对象</strong>。而如果强制ArgsTest也遵守“单元测试”风格，那我们大概会得到这样的结果：</p><p><video poster=\"https://static001.geekbang.org/resource/image/d4/8b/d42796119956f5dfcc8d107a2d7b9d8b.jpg\" preload=\"none\" controls=\"\"><source src=\"https://media001.geekbang.org/customerTrans/7e27d07d27d407ebcc195a0e78395f55/2c044ea2-17facbe4be8-0000-0000-01d-dbacd.mp4\" type=\"video/mp4\"><source src=\" https://media001.geekbang.org/4a3e11e51bd148319f7da41af2db1f9d/e8dfcea28fb44a1086fc3673c904bfc0-61d03d0100f867bdc94a25a5db977cba-sd.m3u8\" type=\"application/x-mpegURL\"></video></p><p>或许有人会说，这不正是好的面向对象设计吗？这不正是彻底的解耦吗？这种<strong>将所有直接耦合都视为坏味道</strong>的设计取向，会将<strong>功能需求的上下文</strong>打散到一组细碎的对象群落中，增加理解的难度。最终滑向<strong>过度设计</strong>（Over Design）的深渊。</p><p>坏味道通常源自过高<strong>认知负载</strong>（Cognitive Load）或不易修改，俗称“看不懂改不动”。比如，坏味道过长的方法（Long Method）不是以绝对代码长度来衡量的，而是以“是否超出认知负载或难以改变其中的行为”来衡量的。而将功能上下文切得过于细碎，也会增加认知负载。<strong>因而不能单纯地认为，这种风格就一定是好的设计</strong>。</p><p>而对于进程外组件，正如我们在上节课讲到的，需要将连接真实系统的状态验证转变为行为验证，才能消除对于进程外组件的依赖。由此带来的问题我们已经详细讲解过了：<strong>可能会丧失测试的有效性，并阻碍重构</strong>。</p><p>不一定能得到好的设计，可能编写无用的测试，以及可能会阻碍重构而不是像宣称地那样辅助重构，这三点正是很多人对TDD的批评（或者说是疑惑）。比如 <em><em>Ruby on Rails</em></em> 的作者David Heinemeier Hansson（DHH）就曾极力抨击TDD，并写下长文 <em><em>TDD is dead, long live testing</em></em> （2014年），痛斥单元测试无益于软件开发。</p><p>然而事实真相是，在测试驱动开发中，<strong>从来没有强调必须是“单元测试”</strong>。反而在大多数情况下，都是<strong>针对不同单元粒度的功能测试</strong>。并通过这一系列不同单元粒度的功能测试，驱动软件的开发（正如你在第1-4讲中看到的那样）。</p><p>在DHH与Martin Fowler、Kent Beck关于TDD的圆桌会议中，Kent Beck也反复强调，他几乎从不写“单元测试”，而主要是通过构造恰当粒度的黑盒功能测试驱动开发。之后Martin Folwer也再次<a href=\"https://martinfowler.com/bliki/UnitTest.html\">写文章谈论单元测试</a>，并在其中阐述了TDD社区所谓的单元测试到底是什么。也就是我们前面说的，<strong>能提供快速反馈的低成本的研发测试</strong>。Martin Fowler还建议将TDD中的测试叫作极限单元测试（Xunit Testing），以区别于行业中的叫法。</p><p>显然，“单元测试”是一个极具误导性的提法，甚至是TDD不能得到广泛传播的罪魁之一（也是几次TDD大论战的焦点）。这也是为什么从2009年起，我就不再使用“单元测试”来指代TDD中的测试了。转而使用“<strong>单元级别功能测试</strong>（Unit Level Functional Test）<strong>”来指代TDD中需要的那种测试</strong>。</p><p>“单元级别功能测试”这个名字同时具有“单元”和“功能”。通过这个名字，我想要强调这样几点：</p><ul>\n<li>TDD中的测试是由不同粒度的功能测试构成的；</li>\n<li>每一个测试都兼具功能验证和错误定位的功效；</li>\n<li>要从发现问题和定位问题的角度，去思考测试的效用与成本；</li>\n<li>单元粒度要以独立的功能上下文或变化点为粒度。</li>\n</ul><p>无论是“极限单元测试”还是“单元级别功能测试”，从今天起，<strong>请停止使用“单元测试</strong>”<strong>这样源自测试领域的名字。</strong>毕竟TDD中的测试，并不是一种关于测试的技术，而是通过分解功能以驱动软件开发的技术。</p><h2>小结</h2><p>今天我们讨论了TDD中的测试到底是什么。它不是行业中所谓的“单元测试”，而是指能提供快速反馈的低成本的研发测试，也是针对不同粒度单元的功能测试。我们要从发现问题和定位问题的角度出发，去理解和思考每一个测试的功效。</p><p>在理解了TDD中测试的性质之后，我们就可以开始讲解这样的测试到底驱动了软件哪些部分的开发，以及它到底是怎么驱动的。</p><h2>思考题</h2><p>请结合课程内容，反驳David Heinemeier Hansson（DHH）的“TDD已死”。</p><p><strong>编辑来信</strong>：</p><blockquote>\n<p>TDD是一项技能，唯有动手实操、反复练习，才能有所小成。为了帮助你更快地进步，徐昊老师特发起了<strong>“TDD专栏首发·代码评点”</strong>活动。<br>\n<strong>　</strong><br>\n在第一个实战项目结束后，我们会根据你提交的<a href=\"https://jinshuju.net/f/TvdN15\">学习反馈</a>，手动选出其中几位进行代码评点与解疑答惑。而评点的详细内容我们也将制成加餐，展示在专栏里，供其他同学学习与参考。<br>\n<strong>　</strong><br>\n划重点！如果学完第1-10讲再写反馈，将会大大提高你入选的机会！另，此次收集时间截至4月3日零点。所以非常希望你能跟上我们的更新进度，多动手实操，并记录学习体会。<br>\n<strong>　</strong><br>\n最后，希望我们都能好好学习，更上层楼！</p>\n</blockquote>","comments":[{"had_liked":false,"id":339208,"user_name":"邓志国","can_delete":false,"product_type":"c1","uid":1043844,"ip_address":"","ucode":"380AE67ED7B9D7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/84/0b8e2d25.jpg","comment_is_top":false,"comment_ctime":1647994125,"is_pvip":false,"replies":[{"id":124059,"content":"所以他也只是反对不好的tdd而已","user_name":"作者回复","user_name_real":"编辑","uid":2537798,"ctime":1648051632,"ip_address":"","comment_id":339208,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100109401,"comment_content":"TDD 已死的作者，认为TDD的T就是单元测试。所以认为TDD会生成一堆中间的小组件，所以他觉得这种方式不可持续。从这点来看他可能是对的。而现在我们说的TDD实际上是更大粒度的测试。比如在一个业务系统中，可能是对隔离了网络、DB后的业务逻辑整块进行测试，而不是对里面的每个类进行测试。我现在明白了为什么有人会问一个Entity是否需要测试。当然不，对Entity类的调用，在你对业务的测试中自然就会覆盖了。","like_count":17,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558041,"discussion_content":"所以他也只是反对不好的tdd而已","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648051632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339544,"user_name":"枫中的刀剑","can_delete":false,"product_type":"c1","uid":1322387,"ip_address":"","ucode":"4B086F538184AA","user_header":"https://static001.geekbang.org/account/avatar/00/14/2d/93/0f1cbf44.jpg","comment_is_top":false,"comment_ctime":1648178716,"is_pvip":false,"replies":[{"id":124134,"content":"nice","user_name":"作者回复","user_name_real":"编辑","uid":2537798,"ctime":1648274522,"ip_address":"","comment_id":339544,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100109401,"comment_content":"我就被误导了。之前总以为一定要按单元测试，设计成严格的解耦，带来的问题就是过多的使用mock技术，导致后来阅读理解测试成本越来越高。现在看完这篇文章很多疑惑一下子就解开了。","like_count":10,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558391,"discussion_content":"nice","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648274522,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558514,"discussion_content":"我也从mock的坑中爬出来了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648362692,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339783,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1648377616,"is_pvip":false,"replies":[{"id":124175,"content":"good","user_name":"作者回复","user_name_real":"编辑","uid":2537798,"ctime":1648390725,"ip_address":"","comment_id":339783,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100109401,"comment_content":"05 06 07 课笔记 http:&#47;&#47;wyyl1.com&#47;post&#47;19&#47;05\n\n状态验证：一波操作后验证返回结果是否和预期一样\n行为验证：验证一波操作是否严格按预期的顺序执行，不管结果；对 TDD 用处不大，因为大多数情况下会丧失测试的有效性\n\n❗️恍然大悟\n在测试驱动开发中，从来没有强调必须是“单元测试”。反而在大多数情况下，都是针对不同单元粒度的功能测试。并通过这一系列不同单元粒度的功能测试，驱动软件的开发。\n\n⭐️ 两位超级大佬说的\nKent Beck：通过构造恰当粒度的黑盒功能测试驱动开发\nMartin Folwer：DD 社区所谓的单元测试到底是“能提供快速反馈的低成本的研发测试”\nMartin Fowler：建议将 TDD 中的测试叫作极限单元测试（Xunit Testing），以区别于行业中的叫法\n\n\n\n","like_count":6,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558586,"discussion_content":"good","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1648390725,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":342149,"user_name":"humor","can_delete":false,"product_type":"c1","uid":1181867,"ip_address":"","ucode":"9B48C4C7BEC92C","user_header":"https://static001.geekbang.org/account/avatar/00/12/08/ab/caec7bca.jpg","comment_is_top":false,"comment_ctime":1650042225,"is_pvip":false,"replies":[{"id":125039,"content":"对一件事的认知不是固定的 可以被提升。一开始是超过你的负载的","user_name":"作者回复","user_name_real":"编辑","uid":2537798,"ctime":1650080008,"ip_address":"","comment_id":342149,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100109401,"comment_content":"老师，请问什么叫超过认知负载呢。比如同一段代码逻辑，我一开始可能不太熟悉，觉得它又臭又长看不太懂，但是我看了几遍熟悉了之后，就会觉得这段代码逻辑又比较容易理解了。那这段代码逻辑是超出认知负载还是未超出认知负载呢","like_count":3,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":563799,"discussion_content":"对一件事的认知不是固定的 可以被提升。一开始是超过你的负载的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650080008,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2721761,"avatar":"https://static001.geekbang.org/account/avatar/00/29/87/e1/b3edcc09.jpg","nickname":"范飞扬","note":"","ucode":"A665DF46833A81","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":637271,"discussion_content":"比如圈复杂度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1708232258,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339277,"user_name":"Gojustforfun","can_delete":false,"product_type":"c1","uid":1187021,"ip_address":"","ucode":"7513A40F27344F","user_header":"https://static001.geekbang.org/account/avatar/00/12/1c/cd/8d552516.jpg","comment_is_top":false,"comment_ctime":1648019775,"is_pvip":true,"replies":[{"id":124058,"content":"good","user_name":"作者回复","user_name_real":"编辑","uid":2537798,"ctime":1648051613,"ip_address":"","comment_id":339277,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100109401,"comment_content":"我把Test定义为:不同工作单元的功能测试。其中工作单元是指实现某项&#47;些功能，完成某项&#47;些工作的代码集合（类，包，组件等）。","like_count":1,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558040,"discussion_content":"good","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648051613,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":340718,"user_name":"davix","can_delete":false,"product_type":"c1","uid":1074465,"ip_address":"","ucode":"CBFB39BAD7938B","user_header":"https://static001.geekbang.org/account/avatar/00/10/65/21/101a7075.jpg","comment_is_top":false,"comment_ctime":1649074965,"is_pvip":false,"replies":[{"id":124572,"content":"单元级别的功能测试","user_name":"作者回复","user_name_real":"编辑","uid":2537798,"ctime":1649080386,"ip_address":"","comment_id":340718,"utype":1}],"discussion_count":4,"race_medal":0,"score":2,"product_id":100109401,"comment_content":"如果TDD是功能測試，而我覺得絕大多數功能是單個單元完不成的，那麼TDD產生的UT數就不會多。而測試金字塔理論最底層佔大多數的是UT，還成立嗎？跟TDD是不是矛盾？","like_count":0,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559956,"discussion_content":"单元级别的功能测试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649080386,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":2,"child_discussions":[{"author":{"id":1074465,"avatar":"https://static001.geekbang.org/account/avatar/00/10/65/21/101a7075.jpg","nickname":"davix","note":"","ucode":"CBFB39BAD7938B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":560211,"discussion_content":"如此說，什麼功能測試不是單元級別的呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649230098,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":559956,"ip_address":"","group_id":0},"score":560211,"extra":""},{"author":{"id":1587381,"avatar":"https://static001.geekbang.org/account/avatar/00/18/38/b5/3b8eb688.jpg","nickname":"jimson","note":"","ucode":"3973DCFB6358DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1074465,"avatar":"https://static001.geekbang.org/account/avatar/00/10/65/21/101a7075.jpg","nickname":"davix","note":"","ucode":"CBFB39BAD7938B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572328,"discussion_content":"e2e test 可能跨太多个组件，不能成为单元级别的测试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652710252,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":560211,"ip_address":"","group_id":0},"score":572328,"extra":""}]},{"author":{"id":2721761,"avatar":"https://static001.geekbang.org/account/avatar/00/29/87/e1/b3edcc09.jpg","nickname":"范飞扬","note":"","ucode":"A665DF46833A81","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":637266,"discussion_content":"单个单元完不成，那说明没做好功能分解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1708231719,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339137,"user_name":"邓志国","can_delete":false,"product_type":"c1","uid":1043844,"ip_address":"","ucode":"380AE67ED7B9D7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/84/0b8e2d25.jpg","comment_is_top":false,"comment_ctime":1647936622,"is_pvip":false,"replies":[{"id":123945,"content":"功能测试 行为测试指对sut和doc交互行为的测试","user_name":"作者回复","user_name_real":"编辑","uid":2537798,"ctime":1647943094,"ip_address":"","comment_id":339137,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100109401,"comment_content":"之前看《修改代码的艺术》里面的单元测试，就是指一个类的测试。这种实际上是在测试实现。如果一堆类都有了一个测试，会让我们测试代码和实现绑定死了，从而阻止重构。这点上我觉得TDD的测试更是一种对行为的测试而不是对实现。","like_count":0,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557728,"discussion_content":"功能测试 行为测试指对sut和doc交互行为的测试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647943094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2721761,"avatar":"https://static001.geekbang.org/account/avatar/00/29/87/e1/b3edcc09.jpg","nickname":"范飞扬","note":"","ucode":"A665DF46833A81","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":637267,"discussion_content":"是功能的测试，描述了行为。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1708231801,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":340801,"user_name":"程序袁帅","can_delete":false,"product_type":"c1","uid":1017181,"ip_address":"","ucode":"C281CA64EC91A7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/85/5d/ec94b66d.jpg","comment_is_top":false,"comment_ctime":1649149383,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100109401,"comment_content":"老马《单元测试》的中文版：https:&#47;&#47;www.yuque.com&#47;yuanshenjian&#47;agile&#47;unit-test\n\n篇幅很小，作为下午茶吧~","like_count":9},{"had_liked":false,"id":339443,"user_name":"keys头","can_delete":false,"product_type":"c1","uid":1444919,"ip_address":"","ucode":"47C3E0648A8434","user_header":"https://static001.geekbang.org/account/avatar/00/16/0c/37/913de94f.jpg","comment_is_top":false,"comment_ctime":1648105905,"is_pvip":false,"replies":null,"discussion_count":2,"race_medal":0,"score":2,"product_id":100109401,"comment_content":"个人理解TDD其实就是一种结果导向的做事方式，或者叫“以终为始”，再配上8x的任务分解法，把大结果分解成小结果，然后稳步得到每一个小结果后，最终目标也就达成了。借用OKR中的概念的话，过程就变成了：确定 Object (目标)，分解 Key Result (关键结果)，获得关键结果，完成目标。所以，我更愿意把“TDD+任务分解法”叫做 \n OKRDD（目标分解+关键结果驱动开发）。😝","like_count":3,"discussions":[{"author":{"id":2721761,"avatar":"https://static001.geekbang.org/account/avatar/00/29/87/e1/b3edcc09.jpg","nickname":"范飞扬","note":"","ucode":"A665DF46833A81","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":637268,"discussion_content":"但OKRDD就漏了Test, Test很核心","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1708231901,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2721761,"avatar":"https://static001.geekbang.org/account/avatar/00/29/87/e1/b3edcc09.jpg","nickname":"范飞扬","note":"","ucode":"A665DF46833A81","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":635846,"discussion_content":"666有道理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1705294603,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339545,"user_name":"枫中的刀剑","can_delete":false,"product_type":"c1","uid":1322387,"ip_address":"","ucode":"4B086F538184AA","user_header":"https://static001.geekbang.org/account/avatar/00/14/2d/93/0f1cbf44.jpg","comment_is_top":false,"comment_ctime":1648179088,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100109401,"comment_content":"正如文中所说”毕竟 TDD 中的测试，并不是一种关于测试的技术，而是通过分解功能以驱动软件开发的技术。“。这句才是TDD关注点的核心，而大多数人在谈论TDD的时候都落在单元测试的讨论上去了。 这导致很多还没有接触过TDD的人，都以为重点是单元测试。","like_count":2},{"had_liked":false,"id":340896,"user_name":"俊伟","can_delete":false,"product_type":"c1","uid":1111175,"ip_address":"","ucode":"7905B4F25637F4","user_header":"https://static001.geekbang.org/account/avatar/00/10/f4/87/644c0c5d.jpg","comment_is_top":false,"comment_ctime":1649222666,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100109401,"comment_content":"跟我之前想的一样，盲目的用所谓单元测试就会造成大量mock使用。tdd中的test和测试人员眼中的test完全不是一个东西。","like_count":1},{"had_liked":false,"id":387598,"user_name":"范飞扬","can_delete":false,"product_type":"c1","uid":2721761,"ip_address":"广东","ucode":"A665DF46833A81","user_header":"https://static001.geekbang.org/account/avatar/00/29/87/e1/b3edcc09.jpg","comment_is_top":false,"comment_ctime":1708231514,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100109401,"comment_content":"毕竟 TDD 中的测试，并不是一种关于测试的技术，而是通过分解功能以驱动软件开发的技术。\n\n应该改成\n\n毕竟 TDD 并不是一种关于测试的技术，而是通过分解功能以驱动软件开发的技术。","like_count":0},{"had_liked":false,"id":366581,"user_name":"文经","can_delete":false,"product_type":"c1","uid":1072346,"ip_address":"广东","ucode":"2C059BD2A4276B","user_header":"https://static001.geekbang.org/account/avatar/00/10/5c/da/0a8bc27b.jpg","comment_is_top":false,"comment_ctime":1673941999,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100109401,"comment_content":"&quot;为了让测试能够聚焦到单一的单元，就需要拆分单元间的依赖，那么最终会得到一组彼此间没有直接耦合关系的小粒度对象。&quot;\n拆分成一组耦合的对象，在这里关键不是有没有直接耦合，而是这种耦合关系会不会变化？\n像代码里的PARSERS，不需要有变化的场景，也就没有当做参数来传递的必要，可以直接依赖。","like_count":0},{"had_liked":false,"id":344915,"user_name":"zenk","can_delete":false,"product_type":"c1","uid":1013669,"ip_address":"","ucode":"B235D5EBCF49BC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/77/a5/c5ae871d.jpg","comment_is_top":false,"comment_ctime":1651852844,"is_pvip":false,"replies":null,"discussion_count":2,"race_medal":0,"score":3,"product_id":100109401,"comment_content":"老师，为啥叫『独立的功能上下文或变化点』\n\n比较难理解这两个词","like_count":0,"discussions":[{"author":{"id":2721761,"avatar":"https://static001.geekbang.org/account/avatar/00/29/87/e1/b3edcc09.jpg","nickname":"范飞扬","note":"","ucode":"A665DF46833A81","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":637269,"discussion_content":"功能上下文就是架构中的组件。变化点，我理解和SRP相关，即一个类只有一个变化的理由。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1708232040,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1204525,"avatar":"https://static001.geekbang.org/account/avatar/00/12/61/2d/65f016bf.jpg","nickname":"常文龙","note":"","ucode":"4A126159D24766","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589213,"discussion_content":"同感，这个词有点晦涩，抽象的概念最好有一个具体的例子来说明（譬如用Args.parse的案例里，什么叫“功能上下文”）。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1664527654,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":340703,"user_name":"davix","can_delete":false,"product_type":"c1","uid":1074465,"ip_address":"","ucode":"CBFB39BAD7938B","user_header":"https://static001.geekbang.org/account/avatar/00/10/65/21/101a7075.jpg","comment_is_top":false,"comment_ctime":1649061349,"is_pvip":false,"replies":null,"discussion_count":3,"race_medal":0,"score":3,"product_id":100109401,"comment_content":"這麼說TDD不是變成BDD了？","like_count":0,"discussions":[{"author":{"id":2721761,"avatar":"https://static001.geekbang.org/account/avatar/00/29/87/e1/b3edcc09.jpg","nickname":"范飞扬","note":"","ucode":"A665DF46833A81","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":637270,"discussion_content":"BDD不是Developer Test","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1708232112,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1111175,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f4/87/644c0c5d.jpg","nickname":"俊伟","note":"","ucode":"7905B4F25637F4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560184,"discussion_content":"ATDD其实就是把TDD中的test放到更前面了而已。将需求使用test来描述，不过对需求方要求比较高。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649222843,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1074465,"avatar":"https://static001.geekbang.org/account/avatar/00/10/65/21/101a7075.jpg","nickname":"davix","note":"","ucode":"CBFB39BAD7938B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559949,"discussion_content":"這裏說的BDD也叫ATDD","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649076609,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}