{"id":12403,"title":"17 | 精益求精：聊聊提高GUI测试稳定性的关键技术","content":"<p>不知不觉，我已经介绍完了GUI测试相关的知识点，你可以先回顾一下这些知识点，是否还有不清楚的地方，也欢迎你给我留言进行讨论。同时，我希望这些知识点，已经帮你搭建了GUI自动化测试的知识体系。</p>\n<p>那么，今天我将从实际工程应用的角度，和你一起聊聊GUI测试的稳定性问题。</p>\n<p>如果你所在的公司已经规模化地开展了GUI测试，那我相信你们也一定遇到过测试稳定性的问题。<strong>GUI自动化测试稳定性，最典型的表现形式就是，同样的测试用例在同样的环境上，时而测试通过，时而测试失败。</strong> 这也是影响GUI测试健康发展的一个重要障碍，严重降低了GUI测试的可信性。</p>\n<p>所以，今天我分享的主题就是，如何提高GUI测试的稳定性。虽然从理论上来讲，GUI测试有可能做到100%稳定，但在实际项目中，这是一个几乎无法达到的目标。根据我的经验，如果能够做到95%以上的稳定性，就已经非常不错了。</p>\n<p><span class=\"orange\">要提高GUI测试稳定性，首先你需要知道到底是什么原因引起的不稳定。你必须找出尽可能多的不稳定因素，然后找到每一类不稳定因素对应的解决方案。</span></p>\n<p>为此，根据我的实践经验，以及所遇到的场景，我为你总结了五种造成GUI测试不稳定的因素：</p>\n<ol>\n<li>\n<p>非预计的弹出对话框；</p>\n</li>\n<li>\n<p>页面控件属性的细微变化；</p>\n</li>\n<li>\n<p>被测系统的A/B测试；</p>\n</li>\n<li>\n<p>随机的页面延迟造成控件识别失败；</p>\n</li>\n<li>\n<p>测试数据问题。</p>\n</li>\n</ol><!-- [[[read_end]]] -->\n<p>并且，我提供了针对这五种不稳定因素的解决思路。</p>\n<h2>非预计的弹出对话框</h2>\n<p>非预计的弹出对话框，一般包含两种场景;</p>\n<ol>\n<li>\n<p><strong>GUI自动化测试用例执行过程中，操作系统弹出的非预计对话框，</strong> 有可能会干扰GUI测试的自动化执行。<br />\n比如，GUI测试运行到一半，操作系统突然弹出杀毒软件更新请求、病毒告警信息、系统更新请求等对话框。这种对话框的弹出往往是难以预计的，但是一旦发生就有可能造成GUI自动化测试的不稳定。</p>\n</li>\n<li>\n<p><strong>被测软件本身也有可能在非预期的时间弹出预期的对话框，</strong> GUI自动化测试有可能会因此而失败。<br />\n比如，被测软件是一个电子商务网站，你在网站上进行操作时，很可能会随机弹出“用户调查”对话框。虽然这种对话框是可知的，但是具体会在哪一步弹出却是不可预期的。而这，往往会造成GUI自动化测试的不稳定。</p>\n</li>\n</ol>\n<p>怎么解决这类问题呢？</p>\n<p>先试想一下，如果你在手工测试时，遇到了这种情况，会如何处理？很简单啊，直接点击对话框上的“确认”或者“取消”按钮，关闭对话框，然后继续相关的业务测试操作。</p>\n<p>对GUI自动化测试来说，也是同样的道理。具体做法是：</p>\n<ul>\n<li>当自动化脚本发现控件无法正常定位，或者无法操作时，GUI自动化框架自动进入“异常场景恢复模式”。</li>\n<li>在“异常场景恢复模式”下，GUI自动化框架依次检查各种可能出现的对话框，一旦确认了对话框的类型，立即执行预定义的操作（比如，单击“确定”按钮，关闭这个对话框），接着重试刚才失败的步骤。</li>\n</ul>\n<p>需要注意的是：这种方式只能处理已知可能出现的对话框。而对于新类型的对话框，只能通过自动化的方式尝试点击上面的按钮进行处理。每当发现一种潜在会弹出的对话框，我们就把它的详细信息（包括对象定位信息等）更新到“异常场景恢复”库中，下次再遇到相同类型的对话框时，系统就可以自动关闭了。</p>\n<h2>页面控件属性的细微变化</h2>\n<p>如果页面控件的属性发生了变化，哪怕只是细微的变化，也会导致测试脚本的定位元素失效。</p>\n<p>比如，“登录”按钮的ID从“Button_Login_001”变成了“Button_Login_888”，那么如果GUI自动化测试脚本还是按照原来的“Button_Login_001”来定位“登录”按钮，就会因为ID值的变化，定位不到它了，自动化测试用例自然就会失败。</p>\n<p>如何解决这个问题呢？还是先试想一下，如果手动操作时遇到了这个问题会怎么处理，然后再把手动处理的方式用编程语言实现。</p>\n<p>当“登录”按钮的ID 从“Button_Login_001”变成了 “Button_Login_888”，你手动操作时可能一眼就发现了。那你是怎么做到一眼发现的呢？</p>\n<p>细想一下，你会发现人的思维过程应该是这样的：</p>\n<blockquote>\n<p>你发现页面上的按钮（Button）就那么几个，而且从ID中包含的关键字（Login）可以看出是“登录”按钮，再加上这个按钮的ID是“Button_Login_001”，“Button_Login_888”怎么看都是同一个对象，只是ID最后的数字发生了变化而已。</p>\n</blockquote>\n<p>现在，我来提炼一下这个定位控件的思路：</p>\n<ol>\n<li>\n<p>通过控件类型（Button）缩小了范围；</p>\n</li>\n<li>\n<p>通过属性值中的关键字（Login）进一步缩小范围；</p>\n</li>\n<li>\n<p>根据属性值变化前后的相似性，最终定位到该控件。</p>\n</li>\n</ol>\n<p>看到这里，你得到什么启发了吗？</p>\n<p><span class=\"orange\">采用“组合属性”定位控件会更精准，而且成功率会更高，如果能在此基础上加入“模糊匹配”技术，可以进一步提高控件的识别率。</span></p>\n<p>“模糊匹配”是指，通过特定的相似度算法，控件属性发生细微变化时，这个控件依旧可以被准确定位。</p>\n<p>目前，一些商用GUI自动化测试工具，比如UFT，已经实现了模糊匹配。通常情况下，你只需要启用“模糊匹配”选项即可。如果某个对象的定位是通过模糊匹配完成的，那么，测试报告中将会显示该信息，明确告知此次对象识别是基于模糊匹配完成的，因为GUI自动化工具并不能保证每次模糊匹配都一定正确。</p>\n<p>但是，开源的GUI自动化测试框架，目前还没有现成的框架直接支持模糊匹配，通常需要你进行二次开发，实现思路是：实现自己的对象识别控制层，也就是在原本的对象识别基础上额外封装一层，在这个额外封装的层中加上模糊匹配的实现逻辑。</p>\n<p>通常，我不建议把模糊匹配逻辑以硬编码的方式写在代码里，而是引入规则引擎，将具体的规则通过配置文件的方式与代码逻辑解耦。</p>\n<h2>被测系统的A/B测试</h2>\n<p>A/B测试，是互联网产品常用的一种测试方法。它为Web或App的界面或流程提供两个不同的版本，然后让用户随机访问其中一个版本，并收集两个版本的用户体验数据和业务数据，最后分析评估出最好的版本用于正式发布。</p>\n<p>A/B 测试通常会发布到实际生产环境，所以就会造成生产环境中GUI自动化测试的不稳定。</p>\n<p>这种问题的解决思路是，在测试脚本内部对不同的被测版本做分支处理，脚本需要能够区分A和B两个的不同版本，并做出相应的处理。</p>\n<h2>随机的页面延迟造成控件识别失败</h2>\n<p>随机的页面延迟，也是GUI测试防不胜防的。既然是随机的，也就是说我们没有办法去控制它，那有没有什么办法去减少它造成的影响呢？</p>\n<p>一个屡试不爽的办法就是，加入重试（retry）机制。重试机制是指，当某一步GUI操作失败时，框架会自动发起重试，重试可以是步骤级别的，也可以是页面级别的，甚至是业务流程级别的。</p>\n<p>对于开源GUI测试框架，重试机制往往不是自带的功能，需要自己二次开发来实现。</p>\n<p>比如，eBay的GUI自动化测试框架，分别实现了步骤级别、页面级别和业务流程级别的重试机制，默认情况下启用的是步骤级别的重试，页面级别和业务流程级别的重试可以通过测试发起时的命令行参数进行指定。</p>\n<p>需要特别注意的是，对于那些会修改一次性使用数据的场景，切忌不要盲目启用页面级别和业务流程级别的重试。</p>\n<h2>测试数据问题</h2>\n<p>测试数据问题，也是造成GUI自动化测试不稳定的一个重要原因。</p>\n<p>比如，测试用例所依赖的数据被其他用例修改了；再比如，测试过程中发生错误后自动进行了重试操作，但是数据状态已经在第一次执行中被修改了。</p>\n<p>这样的场景还有很多，我会在后面的测试数据准备系列文章中详细展开，并分析由此引入的测试不稳定性问题的解决思路。</p>\n<h2>总结</h2>\n<p>根据我的实践经验，我归纳了五种造成GUI自动化测试不稳定的主要因素，并给出了对应的解决思路。</p>\n<ol>\n<li>\n<p>对于非预计的弹出对话框引起的不稳定，可以引入“异常场景恢复模式”来解决。</p>\n</li>\n<li>\n<p>对于页面控件属性的细微变化造成的不稳定，可以使用“组合属性”定位控件，并且可以通过“模糊匹配技术”提高定位识别率。</p>\n</li>\n<li>\n<p>对于A/B测试带来的不稳定，需要在测试用例脚本中做分支处理，并且需要脚本做到正确识别出不同的分支。</p>\n</li>\n<li>\n<p>对于随机的页面延迟造成的不稳定，可以引入重试机制，重试可以是步骤级别的，也可以是页面级别的，甚至是业务流程级别的。</p>\n</li>\n<li>\n<p>对于测试数据引起的不稳定，我在这里没有详细展开，留到后续的测试数据准备系列文章中做专门介绍。</p>\n</li>\n</ol>\n<h2>思考题</h2>\n<p>在工作中，你还遇到过哪些造成GUI测试不稳定的因素，你又是如何来解决的？</p>\n<p>欢迎你给我留言。</p>\n<p></p>\n","comments":[{"had_liked":false,"id":18604,"user_name":"sylan215","can_delete":false,"product_type":"c1","uid":1019029,"ip_address":"","ucode":"5A2CF31BC69F40","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/95/4544d905.jpg","comment_is_top":false,"comment_ctime":1533486226,"is_pvip":false,"replies":[{"id":"6544","content":"非常高质量的留言，已经关注你的公众号了👍","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1533558972,"ip_address":"","comment_id":18604,"utype":1}],"discussion_count":4,"race_medal":0,"score":"229166752914","product_id":100009601,"comment_content":"1. 非预期弹框：<br>对于非预期的弹框也可以通过检查置顶窗口是否是预期软件窗口，从而确定是否被第三方弹框影响。<br>2. 页面控件变化：<br>如果是 selenium 的话，建议优先使用 xpath，这样就算 id、clases、name 等控件属性改变，只有不是页面改版，应该不会影响自动化稳定性。<br>3. A&#47;B 测试页面：<br>判断当前页面属于哪个分支，然后走兼任处理逻辑，同意这个方案。其实很多地方都可以通过类似的兼容方案进行处理，比如第一个非预期弹框，也可以算是异常场景的兼容处理。<br>4. 页面延迟：<br>重试机制确实是个好办法，但是如果用例都是因为重试才执行正确，有可能会漏出和缓存相关的问题，因为重试应该算一个独立测试场景了，现在是把它作为主要测试场景了。<br>这地方我记得 selenium 有一个函数可以设定一个最大超时时间，在这个时间之前都会等待，一旦超时时间内满足了继续执行的条件，也可以立刻执行，这个方法还是比较不错的，既保证了用例操作的预期性，也解决了延迟的不可控的问题。<br>5. 测试数据问题：<br>构造自动化数据时要特别注意，构造一些带特殊字段的数据库信息，最好是超出常人操作的数据信息，这样可以有效避免数据被误修改的风险，当然，还有一个处理办法在 15 讲的时候提到过，就是先检查测试数据是否存在&#47;异常，不存在或异常都进行重建即可，这部分也算是测试代码的兼容处理吧。<br>以上，欢迎沟通交流，公众号「sylan215」","like_count":53,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421592,"discussion_content":"非常高质量的留言，已经关注你的公众号了👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533558972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1130664,"avatar":"https://static001.geekbang.org/account/avatar/00/11/40/a8/6af775e8.jpg","nickname":"Julie","note":"","ucode":"EE243FDA463E9F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333333,"discussion_content":"测试数据的问题，还可以当测试用例执行完成后，用tear down将数据恢复成原始状态。retry的时候，直接再次输入自己想要的正确数据，不需要检查吧。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1607502594,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1619402,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b5/ca/bba4d696.jpg","nickname":"牺牲","note":"","ucode":"5780E562A43494","race_medal":2,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5890,"discussion_content":"已关注公众号，期待后续高质量文章","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1566528710,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1019029,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8c/95/4544d905.jpg","nickname":"sylan215","note":"","ucode":"5A2CF31BC69F40","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1619402,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b5/ca/bba4d696.jpg","nickname":"牺牲","note":"","ucode":"5780E562A43494","race_medal":2,"user_type":1,"is_pvip":false},"discussion":{"id":7532,"discussion_content":"谢谢，我会努力的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567559032,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":5890,"ip_address":""},"score":7532,"extra":""}]}]},{"had_liked":false,"id":18991,"user_name":"Cynthia🌸","can_delete":false,"product_type":"c1","uid":1163960,"ip_address":"","ucode":"B3A48089794940","user_header":"https://static001.geekbang.org/account/avatar/00/11/c2/b8/ec758482.jpg","comment_is_top":false,"comment_ctime":1533635004,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"57368209852","product_id":100009601,"comment_content":"页面延迟那个，具体表现应该就是找不到元素吧，那么等一等是不是就可以找到了？<br>我记得selenium里面有等待函数，而且还可以用sleep。<br>之前做过的项目，最早没有加等待，就经常因为不稳定而报错，加上等待之后这种概率少多了","like_count":13,"discussions":[{"author":{"id":1004672,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/54/80/d1d9b493.jpg","nickname":"宋琦","note":"","ucode":"FE8961BF810FED","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414679,"discussion_content":"是的，这个基本上都是因为页面刷新比较缓慢所导致的，一般来说使用Selenium内置的ExplicitWait机制就可以很好的解决这个问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636856916,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233747,"user_name":"捷后愚生","can_delete":false,"product_type":"c1","uid":1170483,"ip_address":"","ucode":"A1F935D39C8488","user_header":"https://static001.geekbang.org/account/avatar/00/11/dc/33/a68c6b26.jpg","comment_is_top":false,"comment_ctime":1594435479,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27364239255","product_id":100009601,"comment_content":"老师全面总结了GUI测试稳定性的种种问题，如果在面试过程中被问到“你是如何应对GUI自动化测试不稳定问题”时，根据老师这篇文章回到，底气十足。<br><br>学习到老师的解决问题的思路，一是遇到问题，不是马上就想着具体怎么解决，而是先分析出现问题的原因。如在面试中。被问到“你是如何应对GUI自动化测试不稳定问题”时，你直接给出几条解决措施，看上去已经回到了面试官的问题，但是如果你能用先分析问题原因，再给出解决方案，给人的感觉思维缜密。二是遇到需要机器解决的问题，想想如果人工去解决、去操作是怎么做的，是不是有可借鉴的地方。<br><br>因为网络原因，页面元素出现的时间长短不同，在代码层面，加入等待机制，也是解决稳定性问题的一个方法。","like_count":6},{"had_liked":false,"id":82241,"user_name":"口水窝","can_delete":false,"product_type":"c1","uid":1004838,"ip_address":"","ucode":"6028B5AA10D8A1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/26/154f9578.jpg","comment_is_top":false,"comment_ctime":1554168130,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10144102722","product_id":100009601,"comment_content":"网络不稳定，无线与流量切换，浏览器版本升级等造成GUI测试不稳定。","like_count":2},{"had_liked":false,"id":18662,"user_name":"张红占","can_delete":false,"product_type":"c1","uid":1177173,"ip_address":"","ucode":"D24026D81B5D9C","user_header":"https://static001.geekbang.org/account/avatar/00/11/f6/55/b3ab84a2.jpg","comment_is_top":false,"comment_ctime":1533532538,"is_pvip":false,"replies":[{"id":"6539","content":"这部分内容的确可以通过实例讲解，但是这样的篇幅会比较大，而且重点也不会太突出，所以选择了总结问题以及对应解决思路的讲解方法。","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1533557764,"ip_address":"","comment_id":18662,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10123467130","product_id":100009601,"comment_content":"能否通过实例讲解 总结的有点high level","like_count":2,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421618,"discussion_content":"这部分内容的确可以通过实例讲解，但是这样的篇幅会比较大，而且重点也不会太突出，所以选择了总结问题以及对应解决思路的讲解方法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533557764,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":261360,"user_name":"why","can_delete":false,"product_type":"c1","uid":1919520,"ip_address":"","ucode":"92BBAE9D0400F5","user_header":"https://static001.geekbang.org/account/avatar/00/1d/4a/20/2dbdb6d9.jpg","comment_is_top":false,"comment_ctime":1605286178,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5900253474","product_id":100009601,"comment_content":"感谢，我知道面试中，面试官问我解决过什么问题，我答什么了。","like_count":1},{"had_liked":false,"id":205627,"user_name":"Cassie","can_delete":false,"product_type":"c1","uid":1857475,"ip_address":"","ucode":"12F698267F538B","user_header":"https://static001.geekbang.org/account/avatar/00/1c/57/c3/58582b99.jpg","comment_is_top":false,"comment_ctime":1586690757,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5881658053","product_id":100009601,"comment_content":"我们的软件产品用到了eclipse，也会跟着eclipse的升级而升级，当然频率会低一些。但由于eclipse升级，我们用QFT开发的自动化测试脚本常常不能运行，主要是新版本中的component发生了变化，必须adapt脚本来识别新的component才行。这块的工作量有时候会很大，改脚本改得很痛苦。请问茹老师有没有什么解决&#47;缓解的办法？谢谢！","like_count":1},{"had_liked":false,"id":144608,"user_name":"Tron","can_delete":false,"product_type":"c1","uid":1130053,"ip_address":"","ucode":"2C4FC68C80A7DD","user_header":"https://static001.geekbang.org/account/avatar/00/11/3e/45/3879f334.jpg","comment_is_top":false,"comment_ctime":1571979067,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5866946363","product_id":100009601,"comment_content":"Robotframework中的Wait until xxx timeout=30s其实也是用的重试模式","like_count":1},{"had_liked":false,"id":18880,"user_name":"文大头","can_delete":false,"product_type":"c1","uid":1167453,"ip_address":"","ucode":"465AD1CA5B6A1A","user_header":"https://static001.geekbang.org/account/avatar/00/11/d0/5d/9f9d73fe.jpg","comment_is_top":false,"comment_ctime":1533602901,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5828570197","product_id":100009601,"comment_content":"我遇到的更多的不稳定，大多是开发对页面做了修改，特别是页面框架的改动，导致元素定位失败。为此，定位元素时尽可能使用元素的相对位置，而不是绝对的xpath路径定位，xpath中也选取相对稳定的元素属性定位，另外xpath本身也支持模糊匹配，我很少需要单独写模糊匹配的代码。<br>针对延时问题，除了前面留言说的硬等到超时报错外，可以观察是否有其他元素在正常情况下是跟被测元素一起出现的，如果有，就检测那个元素出现了，被测元素是否也出现，没有就直接报错；检测元素消失也类似。","like_count":1},{"had_liked":false,"id":357202,"user_name":"付晓杰","can_delete":false,"product_type":"c1","uid":1869584,"ip_address":"上海","ucode":"66634A3401A176","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/FGeCDgpXdhsXseIGF3GCzZibDJlOfO4KDqPJkMra2e0TJj3QVQk4t1oEd1BuQPtYOeavFyYxicd5fTZ33tIbPOZQ/132","comment_is_top":false,"comment_ctime":1663059747,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1663059747","product_id":100009601,"comment_content":"五种造成 GUI 测试不稳定的因素：<br>（1）非预计的弹出对话框；<br>可以引入“异常场景恢复模式”来解决<br>（2）页面控件属性的细微变化；<br>可以使用“组合属性”定位控件，并且可以通过“模糊匹配技术”提高定位识别率。<br>（3）被测系统的 A&#47;B 测试；<br>需要在测试用例脚本中做分支处理，并且需要脚本做到正确识别出不同的分支。<br>（4）随机的页面延迟造成控件识别失败；<br>可以引入重试机制，重试可以是步骤级别的，也可以是页面级别的，甚至是业务流程级别的。<br>（5）测试数据问题。","like_count":0},{"had_liked":false,"id":356025,"user_name":"付晓杰","can_delete":false,"product_type":"c1","uid":1869584,"ip_address":"上海","ucode":"66634A3401A176","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/FGeCDgpXdhsXseIGF3GCzZibDJlOfO4KDqPJkMra2e0TJj3QVQk4t1oEd1BuQPtYOeavFyYxicd5fTZ33tIbPOZQ/132","comment_is_top":false,"comment_ctime":1661926760,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661926760","product_id":100009601,"comment_content":"五种造成 GUI 测试不稳定的因素：<br>1.非预计的弹出对话框；<br>       1)GUI 自动化测试用例执行过程中，操作系统弹出的非预计对话框<br>       2)被测软件本身也有可能在非预期的时间弹出预期的对话框<br>2.页面控件属性的细微变化；<br>3.被测系统的 A&#47;B 测试；<br>4.随机的页面延迟造成控件识别失败；<br>5.测试数据问题。","like_count":0},{"had_liked":false,"id":297085,"user_name":"豆豆","can_delete":false,"product_type":"c1","uid":2550784,"ip_address":"","ucode":"A81C948FC1B854","user_header":"https://static001.geekbang.org/account/avatar/00/26/ec/00/4ce96190.jpg","comment_is_top":false,"comment_ctime":1623304097,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623304097","product_id":100009601,"comment_content":"新手，不知道怎么找出不稳定因素原因。debug大部分时候可以通过，运行的话偶尔能通过。麻了。定位到了代码片段，打开了网页，看不出原因。是一个被div包着的span，说span不可点击。是用模糊匹配采集的xpath。代码不是我写的，我只是针对一些页面元素的属性值和标签变化修改一下。最后生成了一份顺利运行的报告不了了之了。不知道怎么才能找到原因。","like_count":0},{"had_liked":false,"id":233748,"user_name":"捷后愚生","can_delete":false,"product_type":"c1","uid":1170483,"ip_address":"","ucode":"A1F935D39C8488","user_header":"https://static001.geekbang.org/account/avatar/00/11/dc/33/a68c6b26.jpg","comment_is_top":false,"comment_ctime":1594435725,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594435725","product_id":100009601,"comment_content":"看同学们的留言，非常优秀。<br>本来以为老师的文章已经很全面，看留言还是有另外的补充，赞！","like_count":0},{"had_liked":false,"id":151857,"user_name":"小寒Edwin","can_delete":false,"product_type":"c1","uid":1244235,"ip_address":"","ucode":"CE4A35465BC3C3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJibdOKYcFAlp3UKuITmtFMx95Qg9ficIDmCBlk14XHnljX9ias4MiauwGv3vsNrVksUlwT95J13lzK0w/132","comment_is_top":false,"comment_ctime":1573800329,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573800329","product_id":100009601,"comment_content":"老师好，步骤级别的的不稳定，这块的retry大概是怎么的一个实现思路呢？","like_count":0},{"had_liked":false,"id":35233,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1540471205,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540471205","product_id":100009601,"comment_content":"对于非预计的弹出对话框引起的不稳定，可以引入“异常场景恢复模式”来解决。<br>问：如何作到随时捕获异常？比如用Java或python <br><br>对于页面控件属性的细微变化造成的不稳定，可以使用“组合属性”定位控件，并且可以通过“模糊匹配技术”提高定位识别率。<br>需要二次开发<br><br>对于 A&#47;B 测试带来的不稳定，需要在测试用例脚本中做分支处理，并且需要脚本做到正确识别出不同的分支。<br>需要辨别A版本或B版本<br><br>对于随机的页面延迟造成的不稳定，可以引入重试机制，重试可以是步骤级别的，也可以是页面级别的，甚至是业务流程级别的。<br>问：如何看待selenium 中的显示等待或隐式等待，但也要有个等待时间限制。<br><br>对于测试数据引起的不稳定，我在这里没有详细展开，留到后续的测试数据准备系列文章中做专门介绍。<br><br>还有一种不稳定是上一个测试用例执行失败，没有把测试环境恢复。","like_count":0},{"had_liked":false,"id":32435,"user_name":"彼端宓悦","can_delete":false,"product_type":"c1","uid":1173227,"ip_address":"","ucode":"1154EA6902C8D2","user_header":"https://static001.geekbang.org/account/avatar/00/11/e6/eb/68828786.jpg","comment_is_top":false,"comment_ctime":1539572225,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1539572225","product_id":100009601,"comment_content":"关于 webdriver 中的二维码登录测试，有什么可行的解决思路吗？","like_count":0},{"had_liked":false,"id":25471,"user_name":"张荣山","can_delete":false,"product_type":"c1","uid":1243993,"ip_address":"","ucode":"24991BBE033721","user_header":"https://static001.geekbang.org/account/avatar/00/12/fb/59/3b19413b.jpg","comment_is_top":false,"comment_ctime":1537337127,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1537337127","product_id":100009601,"comment_content":"针对控件的定位，模糊匹配是否会影响整个脚本的运行时间和效率？如何抓取显示时间短的控件并做即时响应感觉会更难。","like_count":0},{"had_liked":false,"id":21379,"user_name":"人心向善","can_delete":false,"product_type":"c1","uid":1197049,"ip_address":"","ucode":"6B0C01C52BF882","user_header":"https://static001.geekbang.org/account/avatar/00/12/43/f9/555d7aa0.jpg","comment_is_top":false,"comment_ctime":1535068263,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1535068263","product_id":100009601,"comment_content":"稳定性测试真的让人头疼说心惊胆战一点不为过，举个例子：业务需求要求完成7*24小时的稳定性，跑到尾声的时候发现大量报错且准确率已经不足95%的比例，这种时候是最痛苦的，重新跑吧前面的5.6天就白进行了，不重跑吧，不能保证最终的测试结果，而且还有好多非自然因素，断网或断网环境莫名挂掉，这些都会让稳定性测试猝不及防，顺利的话周期会很短，不顺利的话就很难说要取决的因素太多了……","like_count":0},{"had_liked":false,"id":19111,"user_name":"涅槃Ls","can_delete":false,"product_type":"c1","uid":1163943,"ip_address":"","ucode":"39EDBFB303D668","user_header":"https://static001.geekbang.org/account/avatar/00/11/c2/a7/c4de1048.jpg","comment_is_top":false,"comment_ctime":1533686523,"is_pvip":false,"replies":[{"id":"6707","content":"感谢支持","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1533788947,"ip_address":"","comment_id":19111,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1533686523","product_id":100009601,"comment_content":"打卡17","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421713,"discussion_content":"感谢支持","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533788947,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":18959,"user_name":"月亮和六便士","can_delete":false,"product_type":"c1","uid":1080894,"ip_address":"","ucode":"EFFCB9171D4B4E","user_header":"https://static001.geekbang.org/account/avatar/00/10/7e/3e/82202cc8.jpg","comment_is_top":false,"comment_ctime":1533618145,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1533618145","product_id":100009601,"comment_content":"老师每天都期待讲一个高大上的接口测试框架，或者接口测试框架设计思路。","like_count":0},{"had_liked":false,"id":18658,"user_name":"hi ！girl","can_delete":false,"product_type":"c1","uid":1165892,"ip_address":"","ucode":"0DB69C86E361C4","user_header":"https://static001.geekbang.org/account/avatar/00/11/ca/44/c2d77269.jpg","comment_is_top":false,"comment_ctime":1533531153,"is_pvip":false,"replies":[{"id":"6540","content":"步骤和页面级别的retry是会在测试框架中实现的，往往是在try catch中实现重试，而用例级别的retry会在用例调用级别，也就是发起测试的ci流水线中实现。","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1533558005,"ip_address":"","comment_id":18658,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1533531153","product_id":100009601,"comment_content":"老师，步骤级别、页面级别和业务流程级别的重试机制可以给一个实例吗","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421615,"discussion_content":"步骤和页面级别的retry是会在测试框架中实现的，往往是在try catch中实现重试，而用例级别的retry会在用例调用级别，也就是发起测试的ci流水线中实现。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533558005,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":18656,"user_name":"hi ！girl","can_delete":false,"product_type":"c1","uid":1165892,"ip_address":"","ucode":"0DB69C86E361C4","user_header":"https://static001.geekbang.org/account/avatar/00/11/ca/44/c2d77269.jpg","comment_is_top":false,"comment_ctime":1533530930,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1533530930","product_id":100009601,"comment_content":"对于第四点，通常需要延迟的主要是涉及网络请求的页面，能否先给出一个合理的动态时间等待，后选择重试呢","like_count":0},{"had_liked":false,"id":18646,"user_name":"图·美克尔","can_delete":false,"product_type":"c1","uid":1076720,"ip_address":"","ucode":"021FB5AE110066","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eppQqDE6TNibvr3DNdxG323AruicIgWo5DpVr6U7yZVNkbF2rKluyDfhdpgAEcYEOZTAnbrMdTzFkUw/0","comment_is_top":false,"comment_ctime":1533520761,"is_pvip":false,"replies":[{"id":"6541","content":"最简单的实现的确是通过try catch","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1533558068,"ip_address":"","comment_id":18646,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1533520761","product_id":100009601,"comment_content":"异常场景恢复模式是将在整个操作过程外加try catch实现的吗？","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421610,"discussion_content":"最简单的实现的确是通过try catch","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533558068,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":18617,"user_name":"Robert小七","can_delete":false,"product_type":"c1","uid":1165254,"ip_address":"","ucode":"6BBF4674673AF5","user_header":"https://static001.geekbang.org/account/avatar/00/11/c7/c6/35cc7c7c.jpg","comment_is_top":false,"comment_ctime":1533513198,"is_pvip":false,"replies":[{"id":"6543","content":"如果启用了异常场景恢复模式，那么通常的流程是先有三次步骤级别重试，如果失败了才会启动异常场景恢复模式。一般不会出现无限重试的场景","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1533558804,"ip_address":"","comment_id":18617,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1533513198","product_id":100009601,"comment_content":"异常恢复场景是否包含了重试机智？如何解决定位失败后可能产生的无限重试？","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421599,"discussion_content":"如果启用了异常场景恢复模式，那么通常的流程是先有三次步骤级别重试，如果失败了才会启动异常场景恢复模式。一般不会出现无限重试的场景","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533558804,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}