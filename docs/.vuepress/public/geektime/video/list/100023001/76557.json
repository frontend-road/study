{"id":76557,"title":"13 | 在容器中使用TensorFlow","content":"<h2>课件及源码下载地址：</h2><p><a href=\"https://gitee.com/geektime-geekbang/tensorflow-101/tree/master/beginners\">https://gitee.com/geektime-geekbang/tensorflow-101/tree/master/beginners</a></p>","comments":[{"had_liked":false,"id":57913,"user_name":"柱子","can_delete":false,"product_type":"c3","uid":1135637,"ip_address":"","ucode":"F89345BFD53827","user_header":"https://static001.geekbang.org/account/avatar/00/11/54/15/18f4891d.jpg","comment_is_top":false,"comment_ctime":1546939776,"is_pvip":false,"replies":[{"id":26610,"content":"github.com&#47;DjangoPeng&#47;tensorflow-101\n有学习路线和参考资料推荐","user_name":"作者回复","user_name_real":"彭靖田","uid":1067283,"ctime":1551844093,"ip_address":"","comment_id":57913,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100023001,"comment_content":"老师有什么学前一些书籍推荐吗","like_count":5,"discussions":[{"author":{"id":1067283,"avatar":"https://static001.geekbang.org/account/avatar/00/10/49/13/51b1fe81.jpg","nickname":"彭靖田","note":"","ucode":"D3F1C281F38390","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435827,"discussion_content":"github.com/DjangoPeng/tensorflow-101\n有学习路线和参考资料推荐","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551844093,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58193,"user_name":"峻铭","can_delete":false,"product_type":"c3","uid":1106202,"ip_address":"","ucode":"63AB23BADACA88","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/1a/20977779.jpg","comment_is_top":false,"comment_ctime":1547008616,"is_pvip":false,"replies":[{"id":21023,"content":"已经更新了，请注意查看","user_name":"作者回复","user_name_real":"彭靖田","uid":1067283,"ctime":1547044972,"ip_address":"","comment_id":58193,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100023001,"comment_content":"已经按视频把所有操作都走了一遍了，什么时候更新啊","like_count":2,"discussions":[{"author":{"id":1067283,"avatar":"https://static001.geekbang.org/account/avatar/00/10/49/13/51b1fe81.jpg","nickname":"彭靖田","note":"","ucode":"D3F1C281F38390","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435946,"discussion_content":"已经更新了，请注意查看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547044972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58182,"user_name":"kevin","can_delete":false,"product_type":"c3","uid":1354225,"ip_address":"","ucode":"29606C45C0FDD8","user_header":"https://static001.geekbang.org/account/avatar/00/14/a9/f1/b9721f95.jpg","comment_is_top":false,"comment_ctime":1547007633,"is_pvip":false,"replies":[{"id":21018,"content":"1.TF 2.0将会默认使用 Eager 作为执行引擎，而 Eager 模式和 Keras 的结合使用也将是接下来社区发展的重点。正如你所说，keras 有它的优点，但也有局限性，在大规模分布式训练场景下，需要基于特定的软硬件和网络环境进行优化，Graph 模式还是有他的独特优势。\n2.可以使用 bazel 从源代码编译 TF Wheel 包安装，选择你想要使用的特性。\n3.我一直用的 graph mode，没有太成熟的OO思路。建议查看 tensorflow org 下的 models 、tensor2tensor 等 repo，也许有一些满足你需求。","user_name":"作者回复","user_name_real":"彭靖田","uid":1067283,"ctime":1547044290,"ip_address":"","comment_id":58182,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100023001,"comment_content":"老师，1.请问tensorflow2.0发布后是否意味着更多的模型将采用keras搭建，keras虽然比较简单，但相应的限制了灵活性，未来会不会变成kerasflow;2.在新版本中移除了contrib模块，那之后想用原生tensorflow搭建模型采用底层api是否会变得更加繁琐？3.使用tensorflow搭建模型，采用面向对象风格编写，有没有可重用性较高的模版，或者是编写思路？","like_count":1,"discussions":[{"author":{"id":1067283,"avatar":"https://static001.geekbang.org/account/avatar/00/10/49/13/51b1fe81.jpg","nickname":"彭靖田","note":"","ucode":"D3F1C281F38390","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435944,"discussion_content":"1.TF 2.0将会默认使用 Eager 作为执行引擎，而 Eager 模式和 Keras 的结合使用也将是接下来社区发展的重点。正如你所说，keras 有它的优点，但也有局限性，在大规模分布式训练场景下，需要基于特定的软硬件和网络环境进行优化，Graph 模式还是有他的独特优势。\n2.可以使用 bazel 从源代码编译 TF Wheel 包安装，选择你想要使用的特性。\n3.我一直用的 graph mode，没有太成熟的OO思路。建议查看 tensorflow org 下的 models 、tensor2tensor 等 repo，也许有一些满足你需求。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547044290,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69947,"user_name":"盐城首富三公子","can_delete":false,"product_type":"c3","uid":1379180,"ip_address":"","ucode":"5355C4B286531A","user_header":"https://static001.geekbang.org/account/avatar/00/15/0b/6c/52ab7ff5.jpg","comment_is_top":false,"comment_ctime":1550913702,"is_pvip":false,"replies":[{"id":26653,"content":"https:&#47;&#47;github.com&#47;DjangoPeng&#47;tensorflow-101","user_name":"作者回复","user_name_real":"彭靖田","uid":1067283,"ctime":1551848397,"ip_address":"","comment_id":69947,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100023001,"comment_content":"老师，课件只有3-4章的两份，可以重新上传一下吗？","like_count":0,"discussions":[{"author":{"id":1067283,"avatar":"https://static001.geekbang.org/account/avatar/00/10/49/13/51b1fe81.jpg","nickname":"彭靖田","note":"","ucode":"D3F1C281F38390","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440371,"discussion_content":"https://github.com/DjangoPeng/tensorflow-101","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551848397,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1120761,"avatar":"https://static001.geekbang.org/account/avatar/00/11/19/f9/62ae32d7.jpg","nickname":"Ken","note":"","ucode":"9F829156E855C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299224,"discussion_content":"github首页的link都不对了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597622044,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62059,"user_name":"Super","can_delete":false,"product_type":"c3","uid":1386536,"ip_address":"","ucode":"B4AFF433028E17","user_header":"https://static001.geekbang.org/account/avatar/00/15/28/28/13b0672c.jpg","comment_is_top":false,"comment_ctime":1547898728,"is_pvip":false,"replies":[{"id":36117,"content":"docker 跟本地环境不一样，你运行起来后的 FS 是只读的。","user_name":"作者回复","user_name_real":"彭靖田","uid":1067283,"ctime":1559540313,"ip_address":"","comment_id":62059,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100023001,"comment_content":"老师，我按你说的做了以后，venv没有被加入到docker内的jupyter的Kernel中，只有一个Python 2(而我电脑本身是Python 36)，是因为这个tensorflow&#47;tensorflow:nightly-jupyter自带了Kernel吗？需要怎么改过来呢？谢谢","like_count":0,"discussions":[{"author":{"id":1067283,"avatar":"https://static001.geekbang.org/account/avatar/00/10/49/13/51b1fe81.jpg","nickname":"彭靖田","note":"","ucode":"D3F1C281F38390","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437081,"discussion_content":"docker 跟本地环境不一样，你运行起来后的 FS 是只读的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559540313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58114,"user_name":"那鱼mis","can_delete":false,"product_type":"c3","uid":1299799,"ip_address":"","ucode":"1771076A6A0785","user_header":"https://static001.geekbang.org/account/avatar/00/13/d5/57/30a32dff.jpg","comment_is_top":false,"comment_ctime":1546998874,"is_pvip":false,"replies":[{"id":21024,"content":"已更新，请注意查看","user_name":"作者回复","user_name_real":"彭靖田","uid":1067283,"ctime":1547044983,"ip_address":"","comment_id":58114,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100023001,"comment_content":"求老师更新！","like_count":0,"discussions":[{"author":{"id":1067283,"avatar":"https://static001.geekbang.org/account/avatar/00/10/49/13/51b1fe81.jpg","nickname":"彭靖田","note":"","ucode":"D3F1C281F38390","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435912,"discussion_content":"已更新，请注意查看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547044983,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":59919,"user_name":"cc=o","can_delete":false,"product_type":"c3","uid":1019746,"ip_address":"","ucode":"D35F8B5FD9C79B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8f/62/61fc526f.jpg","comment_is_top":false,"comment_ctime":1547430971,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100023001,"comment_content":"直接`jupyter notebook`启动报错:\n`UnicodeDecodeError: &#39;ascii&#39; codec can&#39;t decode byte 0xe5 in position 4: ordinal not in range(128)`\n可以尝试一下设置语言:\n`LANG=en jupyter notebook`","like_count":1},{"had_liked":false,"id":58267,"user_name":"峻铭","can_delete":false,"product_type":"c3","uid":1106202,"ip_address":"","ucode":"63AB23BADACA88","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/1a/20977779.jpg","comment_is_top":false,"comment_ctime":1547023677,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100023001,"comment_content":"在容器中启动运行后，需要把下载的数据集拷贝到挂载的对应目录下，然后把&#47;tmp&#47;data该为&#47;tf&#47;notebooks&#47;数据集目录&#47;，我试了下把端口改成其他的比如-p 8000:9000，生成的日志还是叫我访问8888端口，自动生成的url访问不了，将端口修改为8000也访问不了","like_count":1},{"had_liked":false,"id":159753,"user_name":"丁丁历险记","can_delete":false,"product_type":"c3","uid":1661704,"ip_address":"","ucode":"A43829E454C067","user_header":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","comment_is_top":false,"comment_ctime":1575779370,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100023001,"comment_content":"开个阿里云镜像加速，速度biubiubiu！","like_count":0},{"had_liked":false,"id":63652,"user_name":"Bella","can_delete":false,"product_type":"c3","uid":1371987,"ip_address":"","ucode":"4BB318691C36DA","user_header":"https://static001.geekbang.org/account/avatar/00/14/ef/53/fb646275.jpg","comment_is_top":false,"comment_ctime":1548434829,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100023001,"comment_content":"Windows 系统怎么安装docker","like_count":0,"discussions":[{"author":{"id":1661704,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","nickname":"丁丁历险记","note":"","ucode":"A43829E454C067","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":75788,"discussion_content":"window 用户不适和学技术，请注意休息","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575779465,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62341,"user_name":"wu526","can_delete":false,"product_type":"c3","uid":1022129,"ip_address":"","ucode":"69282EB175B48E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/98/b1/f89a84d0.jpg","comment_is_top":false,"comment_ctime":1548034933,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100023001,"comment_content":"@峻铭 使用 docker run -p 本地端口:8888 就可以了，前面的本地端口可以随便写，后面的8888是tensorflow容器中jupyter运行的默认端口","like_count":0},{"had_liked":false,"id":62076,"user_name":"Super","can_delete":false,"product_type":"c3","uid":1386536,"ip_address":"","ucode":"B4AFF433028E17","user_header":"https://static001.geekbang.org/account/avatar/00/15/28/28/13b0672c.jpg","comment_is_top":false,"comment_ctime":1547902945,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100023001,"comment_content":"老师，我在Kitematic New的容器不能指定挂载，求一个可以指定挂载的方案，不然只能每次都用命令行运行容器了~~~~(&gt;_&lt;)~~~~","like_count":0}]}