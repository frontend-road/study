{"id":69862,"title":"06 | 全局锁和表锁 ：给表加个字段怎么有这么多阻碍？","content":"<p>今天我要跟你聊聊MySQL的锁。数据库锁设计的初衷是处理并发问题。作为多用户共享的资源，当出现并发访问的时候，数据库需要合理地控制资源的访问规则。而锁就是用来实现这些访问规则的重要数据结构。</p><p><strong>根据加锁的范围，MySQL里面的锁大致可以分成全局锁、表级锁和行锁三类</strong>。今天这篇文章，我会和你分享全局锁和表级锁。而关于行锁的内容，我会留着在下一篇文章中再和你详细介绍。</p><p>这里需要说明的是，锁的设计比较复杂，这两篇文章不会涉及锁的具体实现细节，主要介绍的是碰到锁时的现象和其背后的原理。</p><h1>全局锁</h1><p>顾名思义，全局锁就是对整个数据库实例加锁。MySQL提供了一个加全局读锁的方法，命令是 Flush tables with read lock (FTWRL)。当你需要让整个库处于只读状态的时候，可以使用这个命令，之后其他线程的以下语句会被阻塞：数据更新语句（数据的增删改）、数据定义语句（包括建表、修改表结构等）和更新类事务的提交语句。</p><p><strong>全局锁的典型使用场景是，做全库逻辑备份。</strong>也就是把整库每个表都select出来存成文本。</p><p>以前有一种做法，是通过FTWRL确保不会有其他线程对数据库做更新，然后对整个库做备份。注意，在备份过程中整个库完全处于只读状态。</p><!-- [[[read_end]]] --><p>但是让整库都只读，听上去就很危险：</p><ul>\n<li>如果你在主库上备份，那么在备份期间都不能执行更新，业务基本上就得停摆；</li>\n<li>如果你在从库上备份，那么备份期间从库不能执行主库同步过来的binlog，会导致主从延迟。</li>\n</ul><p>看来加全局锁不太好。但是细想一下，备份为什么要加锁呢？我们来看一下不加锁会有什么问题。</p><p>假设你现在要维护“极客时间”的购买系统，关注的是用户账户余额表和用户课程表。</p><p>现在发起一个逻辑备份。假设备份期间，有一个用户，他购买了一门课程，业务逻辑里就要扣掉他的余额，然后往已购课程里面加上一门课。</p><p>如果时间顺序上是先备份账户余额表(u_account)，然后用户购买，然后备份用户课程表(u_course)，会怎么样呢？你可以看一下这个图：</p><p><img src=\"https://static001.geekbang.org/resource/image/cb/cd/cbfd4a0bbb1210792064bcea4e49b0cd.png?wh=1142*856\" alt=\"\"></p><center><span class=\"reference\">图1 业务和备份状态图</span></center><p>可以看到，这个备份结果里，用户A的数据状态是“账户余额没扣，但是用户课程表里面已经多了一门课”。如果后面用这个备份来恢复数据的话，用户A就发现，自己赚了。</p><p>作为用户可别觉得这样可真好啊，你可以试想一下：如果备份表的顺序反过来，先备份用户课程表再备份账户余额表，又可能会出现什么结果？</p><p>也就是说，不加锁的话，备份系统备份的得到的库不是一个逻辑时间点，这个视图是逻辑不一致的。</p><p>说到视图你肯定想起来了，我们在前面讲事务隔离的时候，其实是有一个方法能够拿到一致性视图的，对吧？</p><p>是的，就是在可重复读隔离级别下开启一个事务。</p><blockquote>\n<p>备注：如果你对事务隔离级别的概念不是很清晰的话，可以再回顾一下第3篇文章<a href=\"https://time.geekbang.org/column/article/68963\">《事务隔离：为什么你改了我还看不见？》</a>中的相关内容。</p>\n</blockquote><p>官方自带的逻辑备份工具是mysqldump。当mysqldump使用参数–single-transaction的时候，导数据之前就会启动一个事务，来确保拿到一致性视图。而由于MVCC的支持，这个过程中数据是可以正常更新的。</p><p>你一定在疑惑，有了这个功能，为什么还需要FTWRL呢？<strong>一致性读是好，但前提是引擎要支持这个隔离级别。</strong>比如，对于MyISAM这种不支持事务的引擎，如果备份过程中有更新，总是只能取到最新的数据，那么就破坏了备份的一致性。这时，我们就需要使用FTWRL命令了。</p><p>所以，<strong>single-transaction方法只适用于所有的表使用事务引擎的库。</strong>如果有的表使用了不支持事务的引擎，那么备份就只能通过FTWRL方法。这往往是DBA要求业务开发人员使用InnoDB替代MyISAM的原因之一。</p><p>你也许会问，<strong>既然要全库只读，为什么不使用set global readonly=true的方式呢</strong>？确实readonly方式也可以让全库进入只读状态，但我还是会建议你用FTWRL方式，主要有两个原因：</p><ul>\n<li>一是，在有些系统中，readonly的值会被用来做其他逻辑，比如用来判断一个库是主库还是备库。因此，修改global变量的方式影响面更大，我不建议你使用。</li>\n<li>二是，在异常处理机制上有差异。如果执行FTWRL命令之后由于客户端发生异常断开，那么MySQL会自动释放这个全局锁，整个库回到可以正常更新的状态。而将整个库设置为readonly之后，如果客户端发生异常，则数据库就会一直保持readonly状态，这样会导致整个库长时间处于不可写状态，风险较高。</li>\n</ul><p>业务的更新不只是增删改数据（DML)，还有可能是加字段等修改表结构的操作（DDL）。不论是哪种方法，一个库被全局锁上以后，你要对里面任何一个表做加字段操作，都是会被锁住的。</p><p>但是，即使没有被全局锁住，加字段也不是就能一帆风顺的，因为你还会碰到接下来我们要介绍的表级锁。</p><h1>表级锁</h1><p>MySQL里面表级别的锁有两种：一种是表锁，一种是元数据锁（meta data lock，MDL)。</p><p><strong>表锁的语法是 lock tables … read/write。</strong>与FTWRL类似，可以用unlock tables主动释放锁，也可以在客户端断开的时候自动释放。需要注意，lock tables语法除了会限制别的线程的读写外，也限定了本线程接下来的操作对象。</p><p>举个例子, 如果在某个线程A中执行lock tables t1 read, t2 write; 这个语句，则其他线程写t1、读写t2的语句都会被阻塞。同时，线程A在执行unlock tables之前，也只能执行读t1、读写t2的操作。连写t1都不允许，自然也不能访问其他表。</p><p>在还没有出现更细粒度的锁的时候，表锁是最常用的处理并发的方式。而对于InnoDB这种支持行锁的引擎，一般不使用lock tables命令来控制并发，毕竟锁住整个表的影响面还是太大。</p><p><strong>另一类表级的锁是MDL（metadata lock)。</strong>MDL不需要显式使用，在访问一个表的时候会被自动加上。MDL的作用是，保证读写的正确性。你可以想象一下，如果一个查询正在遍历一个表中的数据，而执行期间另一个线程对这个表结构做变更，删了一列，那么查询线程拿到的结果跟表结构对不上，肯定是不行的。</p><p>因此，在MySQL 5.5版本中引入了MDL，当对一个表做增删改查操作的时候，加MDL读锁；当要对表做结构变更操作的时候，加MDL写锁。</p><ul>\n<li>\n<p>读锁之间不互斥，因此你可以有多个线程同时对一张表增删改查。</p>\n</li>\n<li>\n<p>读写锁之间、写锁之间是互斥的，用来保证变更表结构操作的安全性。因此，如果有两个线程要同时给一个表加字段，其中一个要等另一个执行完才能开始执行。</p>\n</li>\n</ul><p>虽然MDL锁是系统默认会加的，但却是你不能忽略的一个机制。比如下面这个例子，我经常看到有人掉到这个坑里：给一个小表加个字段，导致整个库挂了。</p><p>你肯定知道，给一个表加字段，或者修改字段，或者加索引，需要扫描全表的数据。在对大表操作的时候，你肯定会特别小心，以免对线上服务造成影响。而实际上，即使是小表，操作不慎也会出问题。我们来看一下下面的操作序列，假设表t是一个小表。</p><blockquote>\n<p>备注：这里的实验环境是MySQL 5.6。</p>\n</blockquote><p><img src=\"https://static001.geekbang.org/resource/image/7c/ce/7cf6a3bf90d72d1f0fc156ececdfb0ce.jpg?wh=1142*856\" alt=\"\"></p><p>我们可以看到session A先启动，这时候会对表t加一个MDL读锁。由于session B需要的也是MDL读锁，因此可以正常执行。</p><p>之后session C会被blocked，是因为session A的MDL读锁还没有释放，而session C需要MDL写锁，因此只能被阻塞。</p><p>如果只有session C自己被阻塞还没什么关系，但是之后所有要在表t上新申请MDL读锁的请求也会被session C阻塞。前面我们说了，所有对表的增删改查操作都需要先申请MDL读锁，就都被锁住，等于这个表现在完全不可读写了。</p><p>如果某个表上的查询语句频繁，而且客户端有重试机制，也就是说超时后会再起一个新session再请求的话，这个库的线程很快就会爆满。</p><p>你现在应该知道了，事务中的MDL锁，在语句执行开始时申请，但是语句结束后并不会马上释放，而会等到整个事务提交后再释放。</p><p>基于上面的分析，我们来讨论一个问题，<strong>如何安全地给小表加字段？</strong></p><p>首先我们要解决长事务，事务不提交，就会一直占着MDL锁。在MySQL的information_schema 库的 innodb_trx 表中，你可以查到当前执行中的事务。如果你要做DDL变更的表刚好有长事务在执行，要考虑先暂停DDL，或者kill掉这个长事务。</p><p>但考虑一下这个场景。如果你要变更的表是一个热点表，虽然数据量不大，但是上面的请求很频繁，而你不得不加个字段，你该怎么做呢？</p><p>这时候kill可能未必管用，因为新的请求马上就来了。比较理想的机制是，在alter table语句里面设定等待时间，如果在这个指定的等待时间里面能够拿到MDL写锁最好，拿不到也不要阻塞后面的业务语句，先放弃。之后开发人员或者DBA再通过重试命令重复这个过程。</p><p>MariaDB已经合并了AliSQL的这个功能，所以这两个开源分支目前都支持DDL NOWAIT/WAIT n这个语法。</p><pre><code>ALTER TABLE tbl_name NOWAIT add column ...\nALTER TABLE tbl_name WAIT N add column ... \n</code></pre><h1>小结</h1><p>今天，我跟你介绍了MySQL的全局锁和表级锁。</p><p>全局锁主要用在逻辑备份过程中。对于全部是InnoDB引擎的库，我建议你选择使用–single-transaction参数，对应用会更友好。</p><p>表锁一般是在数据库引擎不支持行锁的时候才会被用到的。如果你发现你的应用程序里有lock tables这样的语句，你需要追查一下，比较可能的情况是：</p><ul>\n<li>要么是你的系统现在还在用MyISAM这类不支持事务的引擎，那要安排升级换引擎；</li>\n<li>要么是你的引擎升级了，但是代码还没升级。我见过这样的情况，最后业务开发就是把lock tables 和 unlock tables 改成 begin 和 commit，问题就解决了。</li>\n</ul><p>MDL会直到事务提交才释放，在做表结构变更的时候，你一定要小心不要导致锁住线上查询和更新。</p><p>最后，我给你留一个问题吧。备份一般都会在备库上执行，你在用–single-transaction方法做逻辑备份的过程中，如果主库上的一个小表做了一个DDL，比如给一个表上加了一列。这时候，从备库上会看到什么现象呢？</p><p>你可以把你的思考和观点写在留言区里，我会在下一篇文章的末尾和你讨论这个问题。感谢你的收听，也欢迎你把这篇文章分享给更多的朋友一起阅读。</p><p>说明：这篇文章没有介绍到物理备份，物理备份会有一篇单独的文章。</p><h1>上期问题时间</h1><p>上期的问题是关于对联合主键索引和InnoDB索引组织表的理解。</p><p>我直接贴@老杨同志 的回复略作修改如下（我修改的部分用<span class=\"orange\">橙色</span>标出）：</p><p>表记录<br>\n–a--|–b--|–c--|–d--<br>\n1 2 3 d<br>\n1 3 2 d<br>\n1 4 3 d<br>\n2 1 3 d<br>\n2 2 2 d<br>\n2 3 4 d<br>\n主键 a，b的聚簇索引组织顺序相当于 order by a,b ，也就是先按a排序，再按b排序，c无序。</p><p>索引 ca 的组织是先按c排序，再按a排序，同时记录主键<br>\n–c--|–a--|–主键部分<span class=\"orange\">b</span>-- <span class=\"orange\">（注意，这里不是ab，而是只有b）</span><br>\n2 1 3<br>\n2 2 2<br>\n3 1 2<br>\n3 1 4<br>\n3 2 1<br>\n4 2 3<br>\n<span class=\"orange\">这个跟索引c的数据是一模一样的。</span></p><p>索引 cb 的组织是先按c排序，在按b排序，同时记录主键<br>\n–c--|–b--|–主键部分<span class=\"orange\">a</span>-- <span class=\"orange\">（同上）</span><br>\n2 2 2<br>\n2 3 1<br>\n3 1 2<br>\n3 2 1<br>\n3 4 1<br>\n4 3 2</p><p>所以，结论是ca可以去掉，cb需要保留。</p><p>评论区留言点赞：</p><blockquote>\n<p>@浪里白条 帮大家总结了复习要点；<br>\n@约书亚 的问题里提到了MRR优化；<br>\n@HwangZHen 留言言简意赅。</p>\n</blockquote><p></p>","comments":[{"had_liked":false,"id":43212,"user_name":"echo＿陈","can_delete":false,"product_type":"c1","uid":1080794,"ip_address":"","ucode":"EFAEADA8A05906","user_header":"https://static001.geekbang.org/account/avatar/00/10/7d/da/780f149e.jpg","comment_is_top":true,"comment_ctime":1543196286,"is_pvip":false,"replies":[{"id":"15460","content":"Online DDL的过程是这样的：<br>1. 拿MDL写锁<br>2. 降级成MDL读锁<br>3. 真正做DDL<br>4. 升级成MDL写锁<br>5. 释放MDL锁<br><br>1、2、4、5如果没有锁冲突，执行时间非常短。第3步占用了DDL绝大部分时间，这期间这个表可以正常读写数据，是因此称为“online ”<br><br>我们文中的例子，是在第一步就堵住了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543197207,"ip_address":"","comment_id":43212,"utype":1}],"discussion_count":65,"race_medal":0,"score":"9.2233740570325996e+18","product_id":100020801,"comment_content":"mysql 5.6不是支持online ddl了吗？也就是对表操作增加字段等功能，实际上不会阻塞读写？","like_count":471,"discussions":[{"author":{"id":1134694,"avatar":"https://static001.geekbang.org/account/avatar/00/11/50/66/047ee060.jpg","nickname":"Return12321","note":"","ucode":"F7A3C5ED02E1D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":321813,"discussion_content":"类似binlog和redolog的两阶段过程。应该是先获取写锁(此时获取到旧表结构)，接着prepare，降级为读锁(其他session可获取旧表结构的读锁)，DDL执行(时间最长)，执行完升级为写锁，提交更改(表变为新表结构)，最后释放写锁","likes_number":24,"is_delete":false,"is_hidden":false,"ctime":1604636072,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":17,"child_discussions":[{"author":{"id":2399421,"avatar":"https://static001.geekbang.org/account/avatar/00/24/9c/bd/6da43bdb.jpg","nickname":"刘剑","note":"","ucode":"7B2CFD70541ADB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1134694,"avatar":"https://static001.geekbang.org/account/avatar/00/11/50/66/047ee060.jpg","nickname":"Return12321","note":"","ucode":"F7A3C5ED02E1D9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340605,"discussion_content":"您好，我想请教一下～\n开头获取旧表结构只能用写锁获取吗，读锁不行吗，还是因为获取结构需要时间？怕获取前其他线程用读锁更改内容？这样也不对啊。。。\n能否帮忙解决下新手的疑惑，感谢感谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610076226,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":321813,"ip_address":""},"score":340605,"extra":""},{"author":{"id":1314800,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0f/f0/37feaa1d.jpg","nickname":"马林","note":"","ucode":"38AA3E2EB1CC5F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2399421,"avatar":"https://static001.geekbang.org/account/avatar/00/24/9c/bd/6da43bdb.jpg","nickname":"刘剑","note":"","ucode":"7B2CFD70541ADB","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341018,"discussion_content":"我觉得第一个写锁是可以防止并发的表结构变更，首先获取写锁可以防止两个session同时做表结构的变更","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1610263539,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":340605,"ip_address":""},"score":341018,"extra":""},{"author":{"id":2399421,"avatar":"https://static001.geekbang.org/account/avatar/00/24/9c/bd/6da43bdb.jpg","nickname":"刘剑","note":"","ucode":"7B2CFD70541ADB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1314800,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0f/f0/37feaa1d.jpg","nickname":"马林","note":"","ucode":"38AA3E2EB1CC5F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341065,"discussion_content":"嗯嗯，但是获得读锁之后为啥还要降为读锁呢","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1610282746,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":341018,"ip_address":""},"score":341065,"extra":""}]},{"author":{"id":1188023,"avatar":"https://static001.geekbang.org/account/avatar/00/12/20/b7/bdb3bcf0.jpg","nickname":"Eternal","note":"","ucode":"EA6FE7CC98F740","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385672,"discussion_content":"1、拿MDL写锁 ：              当A、B线程都来做DDL的时候，如A拿到了DDL写锁，B就阻塞，其它读数据的线程阻塞，该步执行时间短\n\n2、DDL执行准备：             当A、B线程都来做DDL的时候，如A拿到了DDL写锁，B任然阻塞，其它读数据的线程阻塞，该步执行时间短\n\n3、降级成MDL读锁 ：          当A、B线程都来做DDL的时候，如A拿到了DDL写锁，B任然阻塞，其它读数据的线程可以读取数据，该步执行时间短\n\n4、DDL核心执行：（耗时最多的） 当A、B线程都来做DDL的时候，如A拿到了DDL写锁，B任然阻塞，其它读数据的线程可以读取数据（关键是其它线程可以读取数据）\n，该步执行时间长，所以号称在线DDL，因为影响业务线程读取数据的时间很短\n\n5、升级成MDL写锁:            当A、B线程都来做DDL的时候，如A拿到了DDL写锁，B任然阻塞，，其它读数据的线程阻塞，该步执行时间短\n\n6、DDL最终提交  ：            当A、B线程都来做DDL的时候，如A拿到了DDL写锁，B任然阻塞，，其它读数据的线程阻塞，该步执行时间短\n\n7、释放MDL锁 ：               当A、B线程都来做DDL的时候，如A释放写锁，B拿到DDL锁，，其它读数据的线程阻塞，该步执行时间短，继续循环上面个的步骤","likes_number":17,"is_delete":false,"is_hidden":false,"ctime":1627202368,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":5,"child_discussions":[{"author":{"id":1526355,"avatar":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","nickname":"moonfox","note":"","ucode":"902BFF40EFA9FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1188023,"avatar":"https://static001.geekbang.org/account/avatar/00/12/20/b7/bdb3bcf0.jpg","nickname":"Eternal","note":"","ucode":"EA6FE7CC98F740","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390717,"discussion_content":"第4步的降为读锁时，其它线程也可以进行写操作的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1629986757,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":385672,"ip_address":""},"score":390717,"extra":""},{"author":{"id":1519256,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2e/98/8bdaad97.jpg","nickname":"李松林","note":"","ucode":"5E74D5701F353E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1526355,"avatar":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","nickname":"moonfox","note":"","ucode":"902BFF40EFA9FA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":404906,"discussion_content":"我想问的问题 也是在这一步 。其他线程为什么还能进行写操作呢，不是读写互斥吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634456121,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":390717,"ip_address":""},"score":404906,"extra":""},{"author":{"id":1018062,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIY450o5aBcZpB1O6Bg3fo3s8Q3Xiag2icHqGXwBUMECnkct38mw2xxzAx0DQ403VCSeBib4NULEHhyQ/132","nickname":"瑞典","note":"","ucode":"888977EA4A354F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1188023,"avatar":"https://static001.geekbang.org/account/avatar/00/12/20/b7/bdb3bcf0.jpg","nickname":"Eternal","note":"","ucode":"EA6FE7CC98F740","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":408577,"discussion_content":"步骤5读锁，如果遇到请求量大时，也会阻塞很久吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635264109,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":385672,"ip_address":""},"score":408577,"extra":""}]},{"author":{"id":1610139,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJt18m6r8LJW4QBvQNJ6zXJLKlo58BKSPLR9z5VHU8AlcTUIYSkc72ghnGnb3ecn3pBkGYLxmsr2Q/132","nickname":"光影浮沉","note":"","ucode":"116BD920D7340E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392788,"discussion_content":"我理解为写锁可以降级为读锁也可以再升级为写锁，而一个读锁不能直接升级为写锁；\n\n如果可以先读锁在升级写锁的话，就会同时存在多个要升级为写锁的DDL先以读锁去获取，而当一个读锁要升级为写锁的时候，必须等所有读锁都执行完退出，但是其他要升级为写锁的读锁会一直不退出；\n\n所以一个DDL必须先以写锁的方式去获取，才能保证同时只有一个DDL，因为要获取到写锁必须等所有读锁都退出（其中包括已经降级为读锁的写锁）","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1631120660,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1329566,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/IcDlyK6DaBrssVGlmosXnahdJ4bwCesjXa98iaapSDozBiagZTqSCok6iaktu2wOibvpNv9Pd6nfwMg7N7KTSTzYRw/132","nickname":"慢慢卢","note":"","ucode":"853D399100D83B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1610139,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJt18m6r8LJW4QBvQNJ6zXJLKlo58BKSPLR9z5VHU8AlcTUIYSkc72ghnGnb3ecn3pBkGYLxmsr2Q/132","nickname":"光影浮沉","note":"","ucode":"116BD920D7340E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566529,"discussion_content":"这个猜测比较合理，不知道是不是这样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650709672,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":392788,"ip_address":""},"score":566529,"extra":""},{"author":{"id":1780797,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/2c/3d/0bd58aa4.jpg","nickname":"Em","note":"","ucode":"32012A5C603C8A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1610139,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJt18m6r8LJW4QBvQNJ6zXJLKlo58BKSPLR9z5VHU8AlcTUIYSkc72ghnGnb3ecn3pBkGYLxmsr2Q/132","nickname":"光影浮沉","note":"","ucode":"116BD920D7340E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575734,"discussion_content":"对, 避免死锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655082316,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":392788,"ip_address":""},"score":575734,"extra":""},{"author":{"id":3159277,"avatar":"https://static001.geekbang.org/account/avatar/00/30/34/ed/4d2011ea.jpg","nickname":"孜孜不倦","note":"","ucode":"B9017DC9ACF9C5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1329566,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/IcDlyK6DaBrssVGlmosXnahdJ4bwCesjXa98iaapSDozBiagZTqSCok6iaktu2wOibvpNv9Pd6nfwMg7N7KTSTzYRw/132","nickname":"慢慢卢","note":"","ucode":"853D399100D83B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585244,"discussion_content":"就是这样的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661417586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":566529,"ip_address":"北京"},"score":585244,"extra":""}]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430324,"discussion_content":"Online DDL的过程是这样的：\n1. 拿MDL写锁\n2. 降级成MDL读锁\n3. 真正做DDL\n4. 升级成MDL写锁\n5. 释放MDL锁\n\n1、2、4、5如果没有锁冲突，执行时间非常短。第3步占用了DDL绝大部分时间，这期间这个表可以正常读写数据，是因此称为“online ”\n\n我们文中的例子，是在第一步就堵住了","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1543197207,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":5,"child_discussions":[{"author":{"id":1510177,"avatar":"https://static001.geekbang.org/account/avatar/00/17/0b/21/f1aea35b.jpg","nickname":"let_me_go","note":"","ucode":"A5936F5C5E3D65","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":557256,"discussion_content":"从写锁降级为读锁，这样在做ddl的时候不阻碍dml的读操作，做完ddl以后为什么要升级成写锁再释放锁呢？我是这么猜想的，不知道对不：拿到了写锁，即便降级为读锁，它本质也还是写锁，所以降级完以后必须要升级回去才能释放写锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647742007,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":430324,"ip_address":""},"score":557256,"extra":""},{"author":{"id":2873900,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/da/2c/cdd92f3f.jpg","nickname":"wáng","note":"","ucode":"9BFEA73AD7680D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1510177,"avatar":"https://static001.geekbang.org/account/avatar/00/17/0b/21/f1aea35b.jpg","nickname":"let_me_go","note":"","ucode":"A5936F5C5E3D65","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558177,"discussion_content":"完全不对。你要知道第三步中真正做DDL时，不是在当前表上做的，是新建的别的表。所以第四步中需要将旧表和新表换名字，这个过程必须要阻塞DML，所以需要加写锁。","likes_number":14,"is_delete":false,"is_hidden":false,"ctime":1648119211,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":557256,"ip_address":""},"score":558177,"extra":""},{"author":{"id":1510177,"avatar":"https://static001.geekbang.org/account/avatar/00/17/0b/21/f1aea35b.jpg","nickname":"let_me_go","note":"","ucode":"A5936F5C5E3D65","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2873900,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/da/2c/cdd92f3f.jpg","nickname":"wáng","note":"","ucode":"9BFEA73AD7680D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558563,"discussion_content":"感谢感谢，你说得对，通过你的评论我才了解ddl 的过程实际上是创建了一张新表。\n搜了下，mysql在线ddl(加字段、加索引等修改表结构之类的操作）过程如下：\n1 对表加锁(表此时只读)\n2 复制原表物理结构，创建新中间表\n3 修改中间表的物理结构\n4 把原表数据导入中间表中，数据同步完后，锁定中间表，并删除原表\n5 rename中间表为原表\n6 刷新数据字典，并释放锁","likes_number":11,"is_delete":false,"is_hidden":false,"ctime":1648378205,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":558177,"ip_address":""},"score":558563,"extra":""}]},{"author":{"id":1810051,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK0uyg1IicbEhLwsgM2A2ROoyVdWdmUqZfQfs6G67w9m3hdRNBMOQJatQoACj3qNGgj2KVIgricaYiaQ/132","nickname":"木得感情的编码机器","note":"","ucode":"9C6CD47ADCB8E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":167333,"discussion_content":"我理解是DDL拿到写锁后，降级为读锁之前，就会读取完整表结构，所以降级之后其他线程的CRUD操作不会受到影响。","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1581478245,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1649282,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLGAV2NgUo0VVNjiagIJCZmPHvogtAJcUib6icLCbR4vcvfziashHZjpZ0FUxSdawFnHGUSmIaePvDaWQ/132","nickname":"Geek_b74670","note":"","ucode":"083AF837FB0112","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7608,"discussion_content":"可以用mysql的锁离职单独写一篇文章详细描述下不？好几好几篇文章出现了不同的锁概念","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1567584316,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1593289,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4f/c9/9f51fd27.jpg","nickname":"编程界的小学生","note":"","ucode":"4A5BE9A5E877FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1608,"discussion_content":"1、2、4、5如果没有锁冲突，执行时间非常短。第3步占用了DDL绝大部分时间，这期间这个表可以正常读写数据，是因此称为“online ”\n老师，不是读写互斥吗？为什么说这期间这表可以正常读写数据呢，我认为到第3步只能读，不能写，对吗","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1562728044,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":8,"child_discussions":[{"author":{"id":1357056,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b5/00/f4e8fbaf.jpg","nickname":"chenpiing","note":"","ucode":"C847A30B3FDB8F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1593289,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4f/c9/9f51fd27.jpg","nickname":"编程界的小学生","note":"","ucode":"4A5BE9A5E877FA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1660,"discussion_content":"MDL读锁是针对表的增删改查操作，MDL写锁针对表的结构更新操作。第2步降级为MDL读锁后，其他线程也可以对表进行增删改查操作了。我是这么理解的","likes_number":24,"is_delete":false,"is_hidden":false,"ctime":1562772443,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":1608,"ip_address":""},"score":1660,"extra":""},{"author":{"id":1263410,"avatar":"https://static001.geekbang.org/account/avatar/00/13/47/32/4a47048a.jpg","nickname":"果树和溪流","note":"","ucode":"906C26641A0133","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1593289,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4f/c9/9f51fd27.jpg","nickname":"编程界的小学生","note":"","ucode":"4A5BE9A5E877FA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5955,"discussion_content":"我觉得你说的是对的，第三步其他线程只能读不能写","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566550583,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":1608,"ip_address":""},"score":5955,"extra":""},{"author":{"id":1019332,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","nickname":"长期规划","note":"","ucode":"5EF65E9115834B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1593289,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4f/c9/9f51fd27.jpg","nickname":"编程界的小学生","note":"","ucode":"4A5BE9A5E877FA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":57582,"discussion_content":"不对，哈哈。online DDL第二步时MDL已经降级为读锁了，而DML中增删改查加的也是MDL读锁。","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1574615804,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":1608,"ip_address":""},"score":57582,"extra":""}]},{"author":{"id":2711249,"avatar":"","nickname":"Geek_60bcde","note":"","ucode":"AD7792E790373F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387835,"discussion_content":"拿到写锁可以降级，拿不到就只能等着事务了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1628439840,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1706612,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/0a/74/f6a60b7b.jpg","nickname":"qiaofoot","note":"","ucode":"B228D0E5A69095","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":151987,"discussion_content":"降级成读锁所以可以增删查改，但是这时候不是正在改变字段结构吗，增删查改用的是原来的结构还是改变后的结构？求教","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1579926458,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1104262,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d9/86/221a844d.jpg","nickname":"HUI","note":"","ucode":"F80733CEE82CC3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1706612,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/0a/74/f6a60b7b.jpg","nickname":"qiaofoot","note":"","ucode":"B228D0E5A69095","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":158040,"discussion_content":"还是原来的结构。\n\n稍微再详细的过程应该是这样的：\n1、拿MDL写锁\n2、DDL执行准备\n3、降级成MDL读锁\n4、DDL核心执行（耗时最多的）\n5、升级成MDL写锁\n6、DDL最终提交\n7、释放MDL锁","likes_number":42,"is_delete":false,"is_hidden":false,"ctime":1580544641,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":151987,"ip_address":""},"score":158040,"extra":""},{"author":{"id":1264111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/49/ef/02401473.jpg","nickname":"月迷津渡","note":"","ucode":"2B18B2FE3DAC3B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1104262,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d9/86/221a844d.jpg","nickname":"HUI","note":"","ucode":"F80733CEE82CC3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164748,"discussion_content":"为什么会写锁降级成读锁，降级后可以和DML同时执行了？DML不是读锁可共享么？不会有并发问题了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581217926,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":158040,"ip_address":""},"score":164748,"extra":""},{"author":{"id":1615539,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI6LXcIqb5K48nia8d4zmdsD1M9AZeyXoGrLzX5xvqfN0fqXOsYKUWLbZvZ8TtJCXWmYbCkCXg93dQ/132","nickname":"漏脚脖","note":"","ucode":"214AE52EC201E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1264111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/49/ef/02401473.jpg","nickname":"月迷津渡","note":"","ucode":"2B18B2FE3DAC3B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":185260,"discussion_content":"我觉得第四步是在构造吧，第6步提交的时候切了一下应该就可以了，所以第4步不用写锁，猜的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582609287,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":164748,"ip_address":""},"score":185260,"extra":""}]},{"author":{"id":1589937,"avatar":"https://static001.geekbang.org/account/avatar/00/18/42/b1/3f1ad943.jpg","nickname":"Pierce","note":"","ucode":"9E120B593223EE","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582343,"discussion_content":"pt-osc，gh-ost，原生online ddl的原理与适用场景，一文搞懂：https://opensource.actionsky.com/20200916-ddl/","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659404432,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2338682,"avatar":"https://static001.geekbang.org/account/avatar/00/23/af/7a/753f3e1d.jpg","nickname":"sili0816","note":"","ucode":"BBFC03F0D033AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393291,"discussion_content":"第一步就堵住了，那不就没拿到写锁吗。为什么后面的读锁也会被阻塞？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631342267,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1863174,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/6e/06/bb43e716.jpg","nickname":"黄乔鑫","note":"","ucode":"CBD0A8E5E99427","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2338682,"avatar":"https://static001.geekbang.org/account/avatar/00/23/af/7a/753f3e1d.jpg","nickname":"sili0816","note":"","ucode":"BBFC03F0D033AE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393578,"discussion_content":"MySQL为了保证写事务是能完成的，写和读是有个优先级的，假如发现了写事务，先让读事务尽可能完成，然后开始执行写事务，读事务需要在写事务后面排队\n\n可以看看MySQL文档里面关于MDL的读写锁执行顺序内容","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1631502482,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":393291,"ip_address":""},"score":393578,"extra":""},{"author":{"id":1009385,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/e9/814d057a.jpg","nickname":"小陈","note":"","ucode":"A03A299310AD18","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1863174,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/6e/06/bb43e716.jpg","nickname":"黄乔鑫","note":"","ucode":"CBD0A8E5E99427","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":410036,"discussion_content":"先让读事务尽可能完成，然后开始执行写事务，读事务需要在写事务后面排队 这句话前面和后面感觉矛盾啊","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1635577653,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":393578,"ip_address":""},"score":410036,"extra":""},{"author":{"id":2622364,"avatar":"https://static001.geekbang.org/account/avatar/00/28/03/9c/5a0b8825.jpg","nickname":"Bin Watson","note":"","ucode":"33E3487896E859","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1009385,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/66/e9/814d057a.jpg","nickname":"小陈","note":"","ucode":"A03A299310AD18","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548537,"discussion_content":"在写事物后面来的读事物，需要等待前面的写事务先加锁，也就是说加锁需要排队","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643249836,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":410036,"ip_address":""},"score":548537,"extra":""}]},{"author":{"id":2375213,"avatar":"","nickname":"万春严","note":"","ucode":"99E3A76BBD0998","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388397,"discussion_content":"小表在数据库正常工作的情况下，业务处理应该不需要很久吧？第一步也不会阻塞多长时间吧？但是在阻塞期间，业务代码例如java 不停的开会话重试，那就说不准了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628750284,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2355521,"avatar":"https://static001.geekbang.org/account/avatar/00/23/f1/41/76c0758f.jpg","nickname":"君战","note":"","ucode":"A8619A79A5CED9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349997,"discussion_content":"Table definition has changed, please retry transaction。如果在事务中开启一致性视图后，再去DDL，然后再在事务中查询数据就会发生这个错误。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613655808,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1363230,"avatar":"https://static001.geekbang.org/account/avatar/00/14/cd/1e/692c3313.jpg","nickname":"复兴","note":"","ucode":"C172A87873001A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306217,"discussion_content":"老师，你说的很笼统，5.6到底是怎么解决online ddl的呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600220312,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2131215,"avatar":"https://static001.geekbang.org/account/avatar/00/20/85/0f/5cb822d6.jpg","nickname":"shadow","note":"","ucode":"64DCFAEC37EFBC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300926,"discussion_content":"但是不能DML","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598322290,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1155646,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKotsBr2icbYNYlRSlicGUD1H7lulSTQUAiclsEz9gnG5kCW9qeDwdYtlRMXic3V6sj9UrfKLPJnQojag/132","nickname":"ppd0705","note":"","ucode":"EB63D4E3FD1E9A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296023,"discussion_content":"好奇怎么同时改表结构和CRUD, 这样不会冲突吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596430412,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1066508,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/0c/773ba2f3.jpg","nickname":"下个目标45k","note":"","ucode":"193BA8C3AA9A61","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1155646,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKotsBr2icbYNYlRSlicGUD1H7lulSTQUAiclsEz9gnG5kCW9qeDwdYtlRMXic3V6sj9UrfKLPJnQojag/132","nickname":"ppd0705","note":"","ucode":"EB63D4E3FD1E9A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333238,"discussion_content":"不会 ,因为降级成了读锁啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607487024,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":296023,"ip_address":""},"score":333238,"extra":""},{"author":{"id":1608757,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJZO3Xkicd9Cy5FicXibjwnAgVChLZh6zxqAQtOhcYocG81gicm40gSa6PKVmqJXMiaFz5niasPwNkf5ibug/132","nickname":"欧小文","note":"","ucode":"1B41057F097AA9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1155646,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKotsBr2icbYNYlRSlicGUD1H7lulSTQUAiclsEz9gnG5kCW9qeDwdYtlRMXic3V6sj9UrfKLPJnQojag/132","nickname":"ppd0705","note":"","ucode":"EB63D4E3FD1E9A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":363673,"discussion_content":"读锁与读锁不冲突，读锁与写锁，写锁与写锁互斥","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1617258984,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":296023,"ip_address":""},"score":363673,"extra":""},{"author":{"id":1375256,"avatar":"https://static001.geekbang.org/account/avatar/00/14/fc/18/8e69f7cf.jpg","nickname":"TANMIYOO","note":"","ucode":"BC3556131D4D61","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1066508,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/0c/773ba2f3.jpg","nickname":"下个目标45k","note":"","ucode":"193BA8C3AA9A61","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364029,"discussion_content":"ddl的同时在读表的话,读出来的数据就和表结构不一致了,这不是有问题嘛","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1617354365,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":333238,"ip_address":""},"score":364029,"extra":""}]}]},{"had_liked":false,"id":63322,"user_name":"哈哈哈","can_delete":false,"product_type":"c1","uid":1248876,"ip_address":"","ucode":"C40ABE7161EFAE","user_header":"https://static001.geekbang.org/account/avatar/00/13/0e/6c/1f3b1372.jpg","comment_is_top":true,"comment_ctime":1548322523,"is_pvip":false,"replies":[{"id":"22433","content":"嗯 特意写了是MDL“读锁”。<br>把你的留言置顶了，希望有疑问的同学能看到这个😆<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548332381,"ip_address":"","comment_id":63322,"utype":1}],"discussion_count":9,"race_medal":0,"score":"9.2233731507995996e+18","product_id":100020801,"comment_content":"MDL作用是防止DDL和DML并发的冲突，个人感觉应该写清楚，一开始理解为select和update之间的并发。","like_count":260,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437547,"discussion_content":"嗯 特意写了是MDL“读锁”。\n把你的留言置顶了，希望有疑问的同学能看到这个😆\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548332381,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1344431,"avatar":"https://static001.geekbang.org/account/avatar/00/14/83/af/1cb42cd3.jpg","nickname":"马以","note":"","ucode":"3FEA06CA14DE28","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":100023,"discussion_content":"我第一遍看也是理解错了，第二遍看的时候搞明白弄懂了，今天是第三遍看，特意把评论浏览一遍，温故知新，果然有道理。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1577234496,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2045627,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/36/bb/67d689c5.jpg","nickname":"一颗小橘子🍊","note":"","ucode":"584557A3E26B33","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1344431,"avatar":"https://static001.geekbang.org/account/avatar/00/14/83/af/1cb42cd3.jpg","nickname":"马以","note":"","ucode":"3FEA06CA14DE28","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378441,"discussion_content":"我也是。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623223432,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":100023,"ip_address":""},"score":378441,"extra":""}]},{"author":{"id":1672786,"avatar":"https://static001.geekbang.org/account/avatar/00/19/86/52/91c7d112.jpg","nickname":"Garen","note":"","ucode":"0608C88F83EF0C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":29363,"discussion_content":"MDL作用应该不只是防止DDL和DML并发的冲突，按老师的说法，也会防止DDL和DQL并发的冲突","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1570764683,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1254801,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","nickname":"猴哥一一 cium","note":"","ucode":"38EC64F8D1A0B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312161,"discussion_content":"总结的不错:MDL作用是防止DDL和DML并发的冲突","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1602598699,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1018620,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8a/fc/d1dd57dd.jpg","nickname":"ipofss","note":"","ucode":"DE3061C9259F9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":167508,"discussion_content":"我刚开始也理解错了，看评论区时，才明白了，老师特意加了 MDL读锁","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1581504712,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1188023,"avatar":"https://static001.geekbang.org/account/avatar/00/12/20/b7/bdb3bcf0.jpg","nickname":"Eternal","note":"","ucode":"EA6FE7CC98F740","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385674,"discussion_content":"领域语言不一样，导致理解偏差","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627202971,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1167430,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d0/46/7f9af8de.jpg","nickname":"寻","note":"","ucode":"473B2CC14158A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373458,"discussion_content":"那么select和update的并发怎么处理呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620734577,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1054827,"avatar":"https://static001.geekbang.org/account/avatar/00/10/18/6b/a1448af1.jpg","nickname":"贝影","note":"","ucode":"19545C8DCBF8A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1167430,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d0/46/7f9af8de.jpg","nickname":"寻","note":"","ucode":"473B2CC14158A7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543022,"discussion_content":"快照读就MVCC，当前读就加行锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640934381,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":373458,"ip_address":""},"score":543022,"extra":""}]}]},{"had_liked":false,"id":43392,"user_name":"skyoo","can_delete":false,"product_type":"c1","uid":1302503,"ip_address":"","ucode":"EBC0528BA02DD7","user_header":"https://static001.geekbang.org/account/avatar/00/13/df/e7/4ce5ed27.jpg","comment_is_top":true,"comment_ctime":1543221924,"is_pvip":false,"replies":[{"id":"15503","content":"分析得很好。<br>尤其readonly 对 super 权限无效这句。<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543227912,"ip_address":"","comment_id":43392,"utype":1}],"discussion_count":14,"race_medal":0,"score":"9.2233730176504996e+18","product_id":100020801,"comment_content":"FTWRL 前有读写的话 ,FTWRL 都会等待 读写执行完毕后才执行<br>FTWRL 执行的时候要刷脏页的数据到磁盘,因为要保持数据的一致性 ，理解的执行FTWRL时候是 所有事务 都提交完毕的时候<br><br>mysqldump + -single-transaction 也是保证事务的一致性,但他只针对 有支持事务 引擎,比如 innodb<br>所以 还是强烈建议大家在创建实例,表时候需要innodb 引擎 为好<br>全库只读  readonly = true 还有个情况在 slave 上 如果用户有超级权限的话  readonly 是失效的<br><br>表级别 锁 ：一个直接就是表锁 lock table 建议不要使用, 影响太大，另个就是 MDL 元数据锁<br><br>MDL 是并发情况下维护数据的一致性,在表上有事务的时候,不可以对元数据经行写入操作,并且这个是在server层面实现的<br>当你做 dml 时候增加的 MDL 读锁, update table set id=Y where id=X; 并且由于隔离级别的原因 读锁之间不冲突<br><br>当你DDL 时候 增加对表的写锁, 同时操作两个alter table 操作 这个要出现等待情况。<br><br>但是 如果是  dml 与ddl 之间的交互 就更容易出现不可读写情况,这个情况容易session 爆满,session是占用内存的,也会导致内存升高<br>MDL 释放的情况就是 事务提交.<br><br>主库上的一个小表做了一个 DDL, 同步给slave ,由于这个时候有了先前的 single-transaction,所以slave 就会出现 该表的 锁等待, 并且slave 出现延迟","like_count":228,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430370,"discussion_content":"分析得很好。\n尤其readonly 对 super 权限无效这句。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543227912,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1518937,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epHODNKB6bbQPbkhicwt6icLYy9XuKu5V7tZY4bAQBdgfiaqSdLrl9Aj21HfibtNgZGxlCCic7sMNCJGlg/132","nickname":"土豆片","note":"","ucode":"A468A72C51053A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49437,"discussion_content":"single-transaction让我很在意的一点即使是支持事物的innodb，作者也加了一个前缀就是当前隔离级别是可重复耍读，可实际工作中，我们一般不会用到这个隔离级别，比如在读提交中，备份的数据是不是也会有问题","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573591511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1518937,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epHODNKB6bbQPbkhicwt6icLYy9XuKu5V7tZY4bAQBdgfiaqSdLrl9Aj21HfibtNgZGxlCCic7sMNCJGlg/132","nickname":"土豆片","note":"","ucode":"A468A72C51053A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138220,"discussion_content":"可重复读隔离级别是InnoDB的默认事务隔离级别。备份数据不会有问题，因为有MVCC机制。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1579229528,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":49437,"ip_address":""},"score":138220,"extra":""},{"author":{"id":1697605,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/KUWZH9adGNsjZ6m9hYh6ttoibgcUnaplS7XGlYuyUybLpdLPZDB56QAlzfQ8wSfs8Pd1T9RiaY7sYibD2wgrCo0UQ/132","nickname":"xyh","note":"","ucode":"CD0C45A63F434E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1518937,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epHODNKB6bbQPbkhicwt6icLYy9XuKu5V7tZY4bAQBdgfiaqSdLrl9Aj21HfibtNgZGxlCCic7sMNCJGlg/132","nickname":"土豆片","note":"","ucode":"A468A72C51053A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335140,"discussion_content":"dump之前可以设置session的隔离级别","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608104144,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":49437,"ip_address":""},"score":335140,"extra":""},{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1518937,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epHODNKB6bbQPbkhicwt6icLYy9XuKu5V7tZY4bAQBdgfiaqSdLrl9Aj21HfibtNgZGxlCCic7sMNCJGlg/132","nickname":"土豆片","note":"","ucode":"A468A72C51053A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369523,"discussion_content":"mysqldump备份的时候添加single-transaction参数会把备份的会话的隔离级别设置为RR","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619064930,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":49437,"ip_address":""},"score":369523,"extra":""}]},{"author":{"id":1640973,"avatar":"https://static001.geekbang.org/account/avatar/00/19/0a/0d/7bac5bcb.jpg","nickname":"maybe","note":"","ucode":"2C0D1D26853DB3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374992,"discussion_content":"在主库上，readonly 对 super 权限无效也是成立的吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621432077,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":345559,"discussion_content":"对的，dump线程来拉的时候就会等着，直到session释放","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611741566,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342841,"discussion_content":"总结不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610846252,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1221689,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a4/39/6a5cd1d8.jpg","nickname":"sotey","note":"","ucode":"7D3B7E45FC18BA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333583,"discussion_content":"我明白我分析的问题在哪了，给小表加字段要获取表锁，而备份事务会获取这个小表的意向锁，所以备库更新小表字段就会等待意向锁释放，因此备库更新延迟","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607568932,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1483671,"avatar":"https://static001.geekbang.org/account/avatar/00/16/a3/97/ca8057a4.jpg","nickname":"Mona432","note":"","ucode":"3F02C646C8DC83","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1221689,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a4/39/6a5cd1d8.jpg","nickname":"sotey","note":"","ucode":"7D3B7E45FC18BA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343682,"discussion_content":"不是意向锁，是MDL读锁，该读锁要持续到备份事务commit，所以slave同步表字段变更需要申请的MDL写锁一直处于锁等待。","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1611133959,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":333583,"ip_address":""},"score":343682,"extra":""},{"author":{"id":1583740,"avatar":"https://static001.geekbang.org/account/avatar/00/18/2a/7c/0d6a87c4.jpg","nickname":"dandy","note":"","ucode":"5EE976FCBD9215","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1221689,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a4/39/6a5cd1d8.jpg","nickname":"sotey","note":"","ucode":"7D3B7E45FC18BA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":362042,"discussion_content":"1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616834364,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":333583,"ip_address":""},"score":362042,"extra":""}]},{"author":{"id":1221689,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a4/39/6a5cd1d8.jpg","nickname":"sotey","note":"","ucode":"7D3B7E45FC18BA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333001,"discussion_content":"我怎么觉得小表不会被锁定，我觉得single-transaction应该在事务开始第一条select语句时基于mvcc创建快照，备份事务看到的是小表更新前的版本，小表可以直接更新。我的理解问题在哪？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607414285,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1221689,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a4/39/6a5cd1d8.jpg","nickname":"sotey","note":"","ucode":"7D3B7E45FC18BA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369522,"discussion_content":"single-transaction执行的是start transaction with consistent snapshot，不是执行第一条query的时候才会生成快照，是事务开始时就生成一致性快照了。表结构都发生变化了，读取表的数据肯定有问题了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619064736,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":333001,"ip_address":""},"score":369522,"extra":""}]},{"author":{"id":1228560,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/10/b7974690.jpg","nickname":"BD","note":"","ucode":"A95CF8C3EDC228","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289746,"discussion_content":"备库直接读的binlog难道也有mvcc和事务？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594199983,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44145,"user_name":"miche","can_delete":false,"product_type":"c1","uid":1318659,"ip_address":"","ucode":"9B6B7E14008094","user_header":"","comment_is_top":true,"comment_ctime":1543373385,"is_pvip":false,"replies":[{"id":"15738","content":"1. Pt的过程也是有操作表结构的，所以会类似<br><br>2. 对，没有begin的话，这样select执行完成以后，MDL就自动释放了哦<br><br>3. 是，是否online都是第三步（结合置顶评论看哈）的区别，另外四步还是有的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543380079,"ip_address":"","comment_id":44145,"utype":1}],"discussion_count":3,"race_medal":0,"score":"9.2233721973118996e+18","product_id":100020801,"comment_content":"1. 上面的那个因为mdl锁把整个库搞挂的例子里，如果用pt工具来操作，会出现同样的情况吗？<br>2. 那个例子里显示select语句前加了begin，是不是select的时候不加begin，就不会出现同样的情况呢？<br>3. online ddl 的copy方式和inplace方式，也都是需要 拿MDL写锁、降成读锁、做DDL、升成写锁、释放MDL锁吗？<br><br>","like_count":37,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430649,"discussion_content":"1. Pt的过程也是有操作表结构的，所以会类似\n\n2. 对，没有begin的话，这样select执行完成以后，MDL就自动释放了哦\n\n3. 是，是否online都是第三步（结合置顶评论看哈）的区别，另外四步还是有的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543380079,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1583740,"avatar":"https://static001.geekbang.org/account/avatar/00/18/2a/7c/0d6a87c4.jpg","nickname":"dandy","note":"","ucode":"5EE976FCBD9215","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":359880,"discussion_content":"1","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1616315286,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2014573,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/bd/6d/7010f98e.jpg","nickname":"SharpBB","note":"","ucode":"D30C5B798B8E8C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553893,"discussion_content":"这里也可以使用sleep函数来模拟sql慢查询 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646127718,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71887,"user_name":"马涛","can_delete":false,"product_type":"c1","uid":1410251,"ip_address":"","ucode":"E11A31C95032A9","user_header":"https://static001.geekbang.org/account/avatar/00/15/84/cb/09455051.jpg","comment_is_top":false,"comment_ctime":1551462889,"is_pvip":false,"replies":[{"id":"26045","content":"InnoDB会把主键字段放到索引定义字段后面，<br>当然同时也会去重。<br><br>所以，当主键是(a,b)的时候，<br>定义为c的索引，实际上是（c,a,b);<br>定义为(c,a)的索引，实际上是(c,a,b)<br>你看着加是相同的<br><br>ps 定义为(c,b）的索引，实际上是（c,b,a)<br><br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551489339,"ip_address":"","comment_id":71887,"utype":1}],"discussion_count":37,"race_medal":0,"score":"1590689362409","product_id":100020801,"comment_content":"索引问题答案解释这个是不是再详细一点，我看还有人和我一样，还是搞不清楚为什么c索引和ca索引一样。","like_count":371,"discussions":[{"author":{"id":1228560,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/10/b7974690.jpg","nickname":"BD","note":"","ucode":"A95CF8C3EDC228","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289761,"discussion_content":"感觉这里还是有问题的吧，单独建了c索引，虽然主键索引会跟在c索引后面，但是a并不保证是有序的的吧","likes_number":13,"is_delete":false,"is_hidden":false,"ctime":1594204118,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1049208,"avatar":"https://static001.geekbang.org/account/avatar/00/10/02/78/23c56bce.jpg","nickname":"james","note":"","ucode":"5701899403917C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":258715,"discussion_content":"这解释比答疑清楚多了","likes_number":13,"is_delete":false,"is_hidden":false,"ctime":1588725108,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441380,"discussion_content":"InnoDB会把主键字段放到索引定义字段后面，\n当然同时也会去重。\n\n所以，当主键是(a,b)的时候，\n定义为c的索引，实际上是（c,a,b);\n定义为(c,a)的索引，实际上是(c,a,b)\n你看着加是相同的\n\nps 定义为(c,b）的索引，实际上是（c,b,a)\n\n","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1551489339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":239162,"discussion_content":"有个索引扩展功能，官方文档有说明。会把主键索引追加到普通索引后面，这个有开关配置是否这么做，默认开启","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1587280339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1153413,"avatar":"https://static001.geekbang.org/account/avatar/00/11/99/85/4d21c328.jpg","nickname":"kajibu","note":"","ucode":"49326E8B13019B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347789,"discussion_content":"https://dev.mysql.com/doc/refman/5.7/en/index-extensions.html 文档地址在这儿，送给有缘人","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1612320909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":239162,"ip_address":""},"score":347789,"extra":""},{"author":{"id":2028277,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f2/f5/b82f410d.jpg","nickname":"Unknown element","note":"","ucode":"34A129800D0238","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1153413,"avatar":"https://static001.geekbang.org/account/avatar/00/11/99/85/4d21c328.jpg","nickname":"kajibu","note":"","ucode":"49326E8B13019B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574051,"discussion_content":"感谢大佬~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653813441,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":347789,"ip_address":""},"score":574051,"extra":""},{"author":{"id":2748179,"avatar":"","nickname":"cly","note":"","ucode":"0B33AA668E7BFC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1153413,"avatar":"https://static001.geekbang.org/account/avatar/00/11/99/85/4d21c328.jpg","nickname":"kajibu","note":"","ucode":"49326E8B13019B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581318,"discussion_content":"感谢 千言万语不如一篇官方文档","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658720038,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":347789,"ip_address":""},"score":581318,"extra":""}]},{"author":{"id":1254801,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","nickname":"猴哥一一 cium","note":"","ucode":"38EC64F8D1A0B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312123,"discussion_content":"卧槽,卧槽,卧槽!!!","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1602587543,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2037576,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/17/48/6ab7ef29.jpg","nickname":"养猪场老板","note":"","ucode":"7974373F55AF87","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311797,"discussion_content":"B+树的叶子节点指向一个InnoDB数据页，数据页里边会有多行数据，多行数据是以有序数组的形式保存的。c的二级索引里，（a,b)就是所谓的行数据。在c这个二级索引的B+树上的叶子节点上，（a，b）是以有序数组的形式排好序的。所以c二级索引和ca联合索引一模一样的，我是这么理解的。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1602491382,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1397733,"avatar":"","nickname":"Geek_de5309","note":"","ucode":"89BA74A802DD56","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2037576,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/17/48/6ab7ef29.jpg","nickname":"养猪场老板","note":"","ucode":"7974373F55AF87","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":348043,"discussion_content":"索引字段定义了比较规则，有序也是按照索引字段有序，C=1在前，C=5在后。关键是C相同的数据，是怎么保存的。关键是索引列相同的数据，是不是会按照主键顺序存。这个得搞清楚。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1612411279,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":311797,"ip_address":""},"score":348043,"extra":""},{"author":{"id":2185166,"avatar":"https://static001.geekbang.org/account/avatar/00/21/57/ce/ad3c3954.jpg","nickname":"鹅鹅鹅","note":"","ucode":"6AFA3FCC7B5AEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2037576,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/17/48/6ab7ef29.jpg","nickname":"养猪场老板","note":"","ucode":"7974373F55AF87","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":350859,"discussion_content":"对，二级索引通过键值对找到主键索引；老师说的更通俗一点，反而看不大懂了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614052934,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":311797,"ip_address":""},"score":350859,"extra":""}]},{"author":{"id":1111000,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f3/d8/e0048b95.jpg","nickname":"张云业","note":"","ucode":"D0179DE4B2CDF5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288871,"discussion_content":"这样解释，瞬间就清晰了。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1593916384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2306194,"avatar":"","nickname":"Geek_6b9ecc","note":"","ucode":"25421F0FD129B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329256,"discussion_content":"秀儿 是你吗","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1606354298,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1526355,"avatar":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","nickname":"moonfox","note":"","ucode":"902BFF40EFA9FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295958,"discussion_content":"我怎么觉得应该是去掉C索引，保留CA索引，C索引不能保证按A排序呀","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1596414622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1312918,"avatar":"https://static001.geekbang.org/account/avatar/00/14/08/96/231fdd9e.jpg","nickname":"未知","note":"","ucode":"DB389CEBEEE9E1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1526355,"avatar":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","nickname":"moonfox","note":"","ucode":"902BFF40EFA9FA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319559,"discussion_content":"感觉这里不是强调是否有序。就算主键是单个A，二级索引C也不回保证叶子节点的A有序（这里应该MRR会再次优化）。这里强调的索引是否多余。Innodb会扩展二级索引，所以这里我们创建二级索引C或者CA或者CAB，这三种对引擎来说完全一样，因为就算创建CA，他也会自动补全为CAB。想想也是，因为AB是联合住建，既然二级索引叶子节点保存的是主键，那用户创建CA，我叶子节点要保存AB，反而多保存了一个A，还不如不管用户怎么创建我都按CAB补全（当然也可理解为去重了）。如果创建CA，因为innodb自动补全的CAB，所以server层并不知道有CAB的存在，所以查询a =* and b=* order by c 的话，优化器并不会选择这个覆盖索引，还是查ab,然后按c 排序。所以官网也建议如果你要创建CA，就显式的创建为CAB。但是在5.6.9以后server层支持这种了，所以CA也行。\n说这么多，关键一句话：innodb会自动扩展二级索引，如果二级索引没包括所有主键，则会自动补全","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1604051071,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":295958,"ip_address":""},"score":319559,"extra":""},{"author":{"id":1134574,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4f/ee/bd08cfab.jpg","nickname":"一魄","note":"","ucode":"71541125D4AA5A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1526355,"avatar":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","nickname":"moonfox","note":"","ucode":"902BFF40EFA9FA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":395047,"discussion_content":"老师都说那么清楚了，c索引和ca索引都是cab索引，所以你去掉c索引，保留ca索引没区别","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632199895,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":295958,"ip_address":""},"score":395047,"extra":""}]},{"author":{"id":1016917,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/84/55/1e40bd61.jpg","nickname":"shiziwen","note":"","ucode":"ADADC770D82D66","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":202123,"discussion_content":"为啥还需要c的索引呢？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1583866074,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1526355,"avatar":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","nickname":"moonfox","note":"","ucode":"902BFF40EFA9FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1016917,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/84/55/1e40bd61.jpg","nickname":"shiziwen","note":"","ucode":"ADADC770D82D66","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295957,"discussion_content":"我怎么觉得应该是去掉C索引，保留CA索引，C索引不能保证按A排序呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596414590,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":202123,"ip_address":""},"score":295957,"extra":""},{"author":{"id":1029484,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b5/6c/617c0193.jpg","nickname":"dingsai88","note":"","ucode":"A725428A983ADC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1526355,"avatar":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","nickname":"moonfox","note":"","ucode":"902BFF40EFA9FA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335001,"discussion_content":"MySQL内部会将主键字段放到索引定义字段后面，所以 C实际是（C,A,B）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608045719,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":295957,"ip_address":""},"score":335001,"extra":""}]},{"author":{"id":1019332,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","nickname":"长期规划","note":"","ucode":"5EF65E9115834B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2634,"discussion_content":"听老师一解释，有点明白了，相当于联合索引。即当索引字段相同时，还会按主键排序","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1563802061,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1306092,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ61zTDmLk7IhLJn6seBPOwsVaKIWUWaxk5YmsdYBZUOYMQCsyl9iaQVSg9U5qJVLLOCFUoLUuYnRA/132","nickname":"fjpcode","note":"","ucode":"C32C5E3ECB9A90","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":780,"discussion_content":"是不是可以理解为，二级索引上叶子节点记录的是一个由二级索引字段和主键索引字段组合的联合索引。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1562056138,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1762252,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/e3/cc/0947ff0b.jpg","nickname":"nestle","note":"","ucode":"469800BED81B54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1306092,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ61zTDmLk7IhLJn6seBPOwsVaKIWUWaxk5YmsdYBZUOYMQCsyl9iaQVSg9U5qJVLLOCFUoLUuYnRA/132","nickname":"fjpcode","note":"","ucode":"C32C5E3ECB9A90","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":70262,"discussion_content":"应该还要去重，例如二级索引c,a，主键索引a,b，叶子节点就只有c,a,b。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1575339133,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":780,"ip_address":""},"score":70262,"extra":""}]},{"author":{"id":1342746,"avatar":"http://thirdwx.qlogo.cn/mmopen/KFgDEHIEpnQ2vtxr78tZyMyZib80iaHMw2x3BscfBumVyNibRtcanICkeweRJicSxampCGDgiapJRqH0iauwxBfy1mzsibmbyekNv40/132","nickname":"Geek_jiange","note":"","ucode":"CBF5B8B77360C6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544855,"discussion_content":"mark\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641735917,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1064018,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3c/52/5951ffb4.jpg","nickname":"Sinvi","note":"","ucode":"2A90976980CA3C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543802,"discussion_content":"瞬间秒懂\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641304329,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2416539,"avatar":"https://static001.geekbang.org/account/avatar/00/24/df/9b/173712a4.jpg","nickname":"游图","note":"","ucode":"96867868E25380","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342679,"discussion_content":"ps 定义为(c,b）的索引，实际上是（c,b,a)   这个还不是很理解，主键联合索引不是一种顺序a,b么？怎么还可以b,a么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610775340,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1758825,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/d6/69/f59d4f6f.jpg","nickname":"Ryan","note":"","ucode":"387955FD53E98C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2416539,"avatar":"https://static001.geekbang.org/account/avatar/00/24/df/9b/173712a4.jpg","nickname":"游图","note":"","ucode":"96867868E25380","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":346352,"discussion_content":"我这么理解的，定义 (c,b) 索引，实际上是 c,b,a,b 的顺序，后面的 b 是可以忽略的（因为已经在 a 前面用 b 排过序了）","likes_number":19,"is_delete":false,"is_hidden":false,"ctime":1611919384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":342679,"ip_address":""},"score":346352,"extra":""},{"author":{"id":2874237,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/db/7d/a3510ae3.jpg","nickname":"凯林","note":"","ucode":"20A1024A7ECE17","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1758825,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/d6/69/f59d4f6f.jpg","nickname":"Ryan","note":"","ucode":"387955FD53E98C","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":551740,"discussion_content":"看了这么多，你说的是最好理解的，赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645101613,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":346352,"ip_address":""},"score":551740,"extra":""}]},{"author":{"id":2403312,"avatar":"https://static001.geekbang.org/account/avatar/00/24/ab/f0/12b18bba.jpg","nickname":"Vincent段","note":"","ucode":"36A764BAEF53A4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339814,"discussion_content":"看懂了！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609813652,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1257043,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2e/53/bf62683f.jpg","nickname":"狼的诱惑","note":"","ucode":"AE89DFC5963C42","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309452,"discussion_content":"什么情况会放到索引字段的后面，不是key value存储吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601292970,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1181248,"avatar":"https://static001.geekbang.org/account/avatar/00/12/06/40/ff77554d.jpg","nickname":"养🐱","note":"","ucode":"3CBBBEFD3945B2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1257043,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2e/53/bf62683f.jpg","nickname":"狼的诱惑","note":"","ucode":"AE89DFC5963C42","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311149,"discussion_content":"普通索引找到的结果就是主键，再根据主键索引一次找到真正的数据","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1602237817,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":309452,"ip_address":""},"score":311149,"extra":""}]},{"author":{"id":1628501,"avatar":"https://static001.geekbang.org/account/avatar/00/18/d9/55/bd65c4df.jpg","nickname":"王木杉","note":"","ucode":"712288EE2A3F4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":218110,"discussion_content":"更清晰了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585620639,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1691517,"avatar":"https://static001.geekbang.org/account/avatar/00/19/cf/7d/d9085aaa.jpg","nickname":"punnpkin","note":"","ucode":"E635BD016D892F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":214972,"discussion_content":"懂了 谢谢提问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585269069,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1812970,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/a9/ea/5bfce6c5.jpg","nickname":"mgs2002","note":"","ucode":"F5931108BD509B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":162227,"discussion_content":"原来是这样，明白了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580975333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1437769,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f0/49/889f9ef6.jpg","nickname":"M","note":"","ucode":"1A756D9AFCEB48","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":79867,"discussion_content":"这么解释就清晰多了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576119563,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1098221,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIY8df9yV6vQjOMxv5xym070hFT2GWYELpqBhxSicQoq5IqBx6teS1xJaomkOBeuzv4vkXRJfibqcMw/132","nickname":"永不止步","note":"","ucode":"B5228B7EDF5921","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":55985,"discussion_content":"这么一解释更清晰了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574420119,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1183601,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/71/9273e8a4.jpg","nickname":"时间是最真的答案","note":"","ucode":"B90F3EF769F865","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579,"discussion_content":"InnoDB会把主键字段放到索引定义字段后面，当然同时也会去重\n定义为c的索引，实际上是（c,a,b);\n定义为(c,b）的索引，实际上是（c,b,a)\n(c,a,b) 和 (c,b,a) 遵循联合索引的最左前缀原则吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561715453,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1183601,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/71/9273e8a4.jpg","nickname":"时间是最真的答案","note":"","ucode":"B90F3EF769F865","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138237,"discussion_content":"当然遵循。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579230354,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":579,"ip_address":""},"score":138237,"extra":""}]}]},{"had_liked":false,"id":43274,"user_name":"壹笙☞漂泊","can_delete":false,"product_type":"c1","uid":1092577,"ip_address":"","ucode":"3A0B8EC881665C","user_header":"https://static001.geekbang.org/account/avatar/00/10/ab/e1/f6b921fa.jpg","comment_is_top":false,"comment_ctime":1543202860,"is_pvip":false,"replies":[{"id":"15465","content":"早啊今天😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543203823,"ip_address":"","comment_id":43274,"utype":1}],"discussion_count":6,"race_medal":0,"score":"912076269612","product_id":100020801,"comment_content":"总结：<br>根据加锁范围：MySQL里面的锁可以分为：全局锁、表级锁、行级锁<br><br>一、全局锁：<br>对整个数据库实例加锁。<br>MySQL提供加全局读锁的方法：Flush tables with read lock(FTWRL)<br>这个命令可以使整个库处于只读状态。使用该命令之后，数据更新语句、数据定义语句和更新类事务的提交语句等操作都会被阻塞。<br>使用场景：全库逻辑备份。<br>风险：<br>1.如果在主库备份，在备份期间不能更新，业务停摆<br>2.如果在从库备份，备份期间不能执行主库同步的binlog，导致主从延迟<br>官方自带的逻辑备份工具mysqldump，当mysqldump使用参数--single-transaction的时候，会启动一个事务，确保拿到一致性视图。而由于MVCC的支持，这个过程中数据是可以正常更新的。<br><br>一致性读是好，但是前提是引擎要支持这个隔离级别。<br>如果要全库只读，为什么不使用set global readonly=true的方式？<br>1.在有些系统中，readonly的值会被用来做其他逻辑，比如判断主备库。所以修改global变量的方式影响太大。<br>2.在异常处理机制上有差异。如果执行FTWRL命令之后由于客户端发生异常断开，那么MySQL会自动释放这个全局锁，整个库回到可以正常更新的状态。而将整个库设置为readonly之后，如果客户端发生异常，则数据库就会一直保持readonly状态，这样会导致整个库长时间处于不可写状态，风险较高。<br>二、表级锁<br>MySQL里面表级锁有两种，一种是表锁，一种是元数据所(meta data lock,MDL)<br>表锁的语法是:lock tables ... read&#47;write<br>可以用unlock tables主动释放锁，也可以在客户端断开的时候自动释放。lock tables语法除了会限制别的线程的读写外，也限定了本线程接下来的操作对象。<br>对于InnoDB这种支持行锁的引擎，一般不使用lock tables命令来控制并发，毕竟锁住整个表的影响面还是太大。<br>MDL：不需要显式使用，在访问一个表的时候会被自动加上。<br>MDL的作用：保证读写的正确性。<br>在对一个表做增删改查操作的时候，加MDL读锁；当要对表做结构变更操作的时候，加MDL写锁。<br>读锁之间不互斥。读写锁之间，写锁之间是互斥的，用来保证变更表结构操作的安全性。<br>MDL 会直到事务提交才会释放，在做表结构变更的时候，一定要小心不要导致锁住线上查询和更新。<br>","like_count":212,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430345,"discussion_content":"早啊今天😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543203823,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2070879,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/99/5f/9232a19f.jpg","nickname":"Lion","note":"","ucode":"BD8DDC17EAE6FD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292515,"discussion_content":"我有个问题，MDL的读写锁保证了表结构的安全性，但是没有解决表数据的安全性呀","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1595249095,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1599454,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLOKzDVXse2WibsBGOR27GVYOlv8WRtFBfQe4ekNia2S5986QibD6Wv17gyDpZqmQt3kJcAcbhl3rroQ/132","nickname":"itsxun","note":"","ucode":"69E6CEA3FCB4F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285062,"discussion_content":"这个总结的很棒。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1592725905,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2359187,"avatar":"https://static001.geekbang.org/account/avatar/00/23/ff/93/f3717c1a.jpg","nickname":"一袋米要扛几楼","note":"","ucode":"83F0C8453CE683","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394138,"discussion_content":"cy","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631755752,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2283935,"avatar":"","nickname":"Geek_0a1b92","note":"","ucode":"3F73A3AD365E95","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":320616,"discussion_content":"&#34;由于MVCC的支持，这个过程中数据是可以正常更新的&#34; 这个能否解释的更清楚些呢?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604414925,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1080692,"avatar":"https://static001.geekbang.org/account/avatar/00/10/7d/74/5a1cd9aa.jpg","nickname":"Aimi🐷","note":"","ucode":"C3EFF270B3FDDE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212027,"discussion_content":"1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584926585,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47520,"user_name":"Mr.Strive.Z.H.L","can_delete":false,"product_type":"c1","uid":1030198,"ip_address":"","ucode":"6D97E159E2EECD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b8/36/542c96bf.jpg","comment_is_top":false,"comment_ctime":1544149701,"is_pvip":false,"replies":[{"id":"16947","content":"“难道”正确😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544152889,"ip_address":"","comment_id":47520,"utype":1}],"discussion_count":21,"race_medal":0,"score":"723098655429","product_id":100020801,"comment_content":"关于文中小表DDL的疑惑：<br>sessionC（DDL操作）被前面的sessionA和B（查询操作，获取MDL 读锁）所阻塞。这里sessionC的DDL操作任务肯定是处于等待的，后续来的sessionD（查询操作）为什么会被sessionC所阻塞？<br>我理解的是sessionC现在都还没有进行DDL操作，没有获取到MDL写锁，为什么sessionD会被C阻塞？难道mysql Server端对于sessionC，D有一个 队列 来决定谁先执行？","like_count":168,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431791,"discussion_content":"“难道”正确😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544152889,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1668301,"avatar":"https://static001.geekbang.org/account/avatar/00/19/74/cd/158dc733.jpg","nickname":"测小试","note":"","ucode":"591F2D8CFBF503","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":31151,"discussion_content":"我阅读文章的时候也有这个疑问。后来理解成了如果DDL耗时很长，会阻塞后面的查询语句，如果查询频繁，这样连接会剧增，导致连接池满了，原来是有队列决定执行顺序。建议作者把这个回复置顶","likes_number":22,"is_delete":false,"is_hidden":false,"ctime":1570883646,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1066229,"avatar":"https://static001.geekbang.org/account/avatar/00/10/44/f5/486d696c.jpg","nickname":"ethan","note":"","ucode":"DA70975A40ABE2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":359915,"discussion_content":"公平锁机制，遵循先来先执行原则，否则如果D不阻塞，高并发场景下C可能会永远拿不到写锁导致饿死。","likes_number":16,"is_delete":false,"is_hidden":false,"ctime":1616328474,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1780797,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/2c/3d/0bd58aa4.jpg","nickname":"Em","note":"","ucode":"32012A5C603C8A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1066229,"avatar":"https://static001.geekbang.org/account/avatar/00/10/44/f5/486d696c.jpg","nickname":"ethan","note":"","ucode":"DA70975A40ABE2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":372607,"discussion_content":"对, DML应该比DDL频繁多了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1620391804,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":359915,"ip_address":""},"score":372607,"extra":""}]},{"author":{"id":1468569,"avatar":"","nickname":"yaowb","note":"","ucode":"63A951253A4DFA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282674,"discussion_content":"这个是不是可以理解为公平锁，谁先到谁先获得锁，所以 C 要比 D 要先拿到锁","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1592042575,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1734477,"avatar":"","nickname":"ZZQ","note":"","ucode":"EA3541BB1E89DE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":275485,"discussion_content":"同样有这个疑问，是不是类似意向锁机制，sessionC拿到了mdl意向写锁，sessionD需要的mdl读锁因为与mdl意向写锁冲突，所以被阻塞了","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1590720698,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2351720,"avatar":"https://static001.geekbang.org/account/avatar/00/23/e2/68/ce547a12.jpg","nickname":"zjm1314","note":"","ucode":"63B0EAB7045054","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340397,"discussion_content":"卧槽，我也有合格疑问，还亲自试了，看来是有个队列","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1609994346,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1695027,"avatar":"https://static001.geekbang.org/account/avatar/00/19/dd/33/d7f4800e.jpg","nickname":"流川","note":"","ucode":"8986B172F18065","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":94511,"discussion_content":"很简单 和java的reentrantlock 是一样的 加了写裙 后面的读锁也会阻塞的","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1576944520,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1967080,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoeZJ1aW5LkAlaKqXEpvrnSk0ibUcLFjz8pDmWpuvm8RD3e79icAALsEurUwXOs0UjVQRxuImxCsHQQ/132","nickname":"donkey703","note":"","ucode":"A48EA2D28A7557","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1695027,"avatar":"https://static001.geekbang.org/account/avatar/00/19/dd/33/d7f4800e.jpg","nickname":"流川","note":"","ucode":"8986B172F18065","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":236364,"discussion_content":"你没get到评论的点，他的意思是，写锁还没被用上，凭什么会阻塞后面的读","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1587088586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":94511,"ip_address":""},"score":236364,"extra":""},{"author":{"id":2287841,"avatar":"https://static001.geekbang.org/account/avatar/00/22/e8/e1/6045b299.jpg","nickname":"LPF","note":"","ucode":"036C552D7251E9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1967080,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoeZJ1aW5LkAlaKqXEpvrnSk0ibUcLFjz8pDmWpuvm8RD3e79icAALsEurUwXOs0UjVQRxuImxCsHQQ/132","nickname":"donkey703","note":"","ucode":"A48EA2D28A7557","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":324270,"discussion_content":"和ReentrantLock一样因为写锁在队列的开头，之后的读锁全在队列中。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1605083703,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":236364,"ip_address":""},"score":324270,"extra":""}]},{"author":{"id":1318914,"avatar":"https://static001.geekbang.org/account/avatar/00/14/20/02/df2bfda9.jpg","nickname":"公共号","note":"","ucode":"4759B517D4CD5E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":68064,"discussion_content":"同样有这个疑问，谢谢哈","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1575199208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1986739,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/50/b3/9269cd59.jpg","nickname":"LWD","note":"","ucode":"DDA444DB113C01","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587107,"discussion_content":"aqs读写锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662797319,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1481179,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/UfqEYrR3cQXUhPEibnXD3kPSc8f0ibR4bdz6JnibjOBibfcxWrkVlz4iaCAAutOSotiaP2ROYX5esYfhAB3vj4avnYqQ/132","nickname":"Geek_53bccf","note":"","ucode":"1818C97E5D1CCC","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577190,"discussion_content":"我的理解是，如果队列有等待写锁的线程，则阻塞后面的读锁，如果没有，则可以拿到写锁。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655963372,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2790511,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/94/6f/9697953b.jpg","nickname":"🏀switch","note":"","ucode":"4449F4A87D49D6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":403685,"discussion_content":"那这个队列是类似公平锁的机制还是写锁优先呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634131485,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1522824,"avatar":"https://static001.geekbang.org/account/avatar/00/17/3c/88/e83528da.jpg","nickname":"uking","note":"","ucode":"41005AC547327B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":316721,"discussion_content":"同样有这样的疑问，按老师回答的  “难道”正确，也就是说mysql server 端对于sessionC,D有一个队列决定谁先执行，这样来理解的话，事务岂不是都是串行执行，这和我之前对事务的理解不太一样呢？\n即便是说读写事务之间串行执行的话，sessionC在没获取到锁的情况下，sessionC和sessionD两个事务就不存在读写事务的先后的问题，所以我还是没理解为何seeionC会阻塞sessionD呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603444966,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2653715,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKib3vNM6TPT1umvR3TictnLurJPKuQq4iblH5upgBB3kHL9hoN3Pgh3MaR2rjz6fWgMiaDpicd8R5wsAQ/132","nickname":"陈阳","note":"","ucode":"C8E676C967D23A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1522824,"avatar":"https://static001.geekbang.org/account/avatar/00/17/3c/88/e83528da.jpg","nickname":"uking","note":"","ucode":"41005AC547327B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548388,"discussion_content":"同样疑问+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643173915,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":316721,"ip_address":""},"score":548388,"extra":""},{"author":{"id":1303572,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJCaO2mIHjagO7qAhTKW8c67dEyM1VxXWgOuItBar4e2Zg5vBV6tZ2DnYabtspZeOtHKa8rgVQHiaA/132","nickname":"justin","note":"","ucode":"D58141D260ED8F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1522824,"avatar":"https://static001.geekbang.org/account/avatar/00/17/3c/88/e83528da.jpg","nickname":"uking","note":"","ucode":"41005AC547327B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581418,"discussion_content":"我的理解供参考1、这几个session都是对同一个表或或者资源在操作，所以不是想的那样的并发，同一个资源的争夺，锁就是来控制并发的。2、类似公平锁，大家都来对同一个表来操作，先来后到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658765464,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":316721,"ip_address":""},"score":581418,"extra":""}]},{"author":{"id":1690759,"avatar":"https://static001.geekbang.org/account/avatar/00/19/cc/87/2a196164.jpg","nickname":"小石头","note":"","ucode":"7B2EC4C8C6192F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297178,"discussion_content":"跟我理解一致","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596794900,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1940149,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/9a/b5/815e60fb.jpg","nickname":"Linda","note":"","ucode":"A5C042ADA8B321","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":250716,"discussion_content":"我觉得是因为前面有个begin，整体是个事务，要按顺序执行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588036697,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1940149,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/9a/b5/815e60fb.jpg","nickname":"Linda","note":"","ucode":"A5C042ADA8B321","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369540,"discussion_content":"不同session执行的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1619072365,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":250716,"ip_address":""},"score":369540,"extra":""}]},{"author":{"id":1306092,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ61zTDmLk7IhLJn6seBPOwsVaKIWUWaxk5YmsdYBZUOYMQCsyl9iaQVSg9U5qJVLLOCFUoLUuYnRA/132","nickname":"fjpcode","note":"","ucode":"C32C5E3ECB9A90","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":40665,"discussion_content":"确实，开始也不理解，sessionC没有拿到MDL写锁之前，按理说MDL读锁不会阻塞，如果说有一个队列在就合理了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572255233,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45397,"user_name":"WL","can_delete":false,"product_type":"c1","uid":1173771,"ip_address":"","ucode":"6277DCD776B87E","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/0b/1171ac71.jpg","comment_is_top":false,"comment_ctime":1543631779,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"358025917347","product_id":100020801,"comment_content":"继续把该讲内容总结为几个问题, 大家复习的时候可以先尝试回答这些问题检查自己的掌握程度:<br><br><br>\t1. <br>MySQL从加锁范围上分为哪三类?<br>\t2. <br>全局锁加锁方法的执行命令是什么?主要的应用场景是什么?<br>\t3. <br>做整库备份时为什么要加全局锁?<br>\t4. <br>MySQL的自带备份工具, 使用什么参数可以确保一致性视图, 在什么场景下不适用?<br>\t5. <br>不建议使用set global readonly = true的方法加全局锁有哪两点原因?<br>\t6. <br>表级锁有哪两种类型?  各自的使用场景是什么?<br>\t7. <br>MDL中读写锁之间的互斥关系怎样的?<br>\t8. <br>如何安全的给小表增加字段?<br><br><br><br>","like_count":83,"discussions":[{"author":{"id":2833979,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/3e/3b/84d486f6.jpg","nickname":"长生","note":"","ucode":"F4919BC8BAEF36","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589038,"discussion_content":"1. 全局锁、表级锁、行锁\n2. flush tables read lock 备份\n3. 防止数据不一致\n4. single-transaction 不支持事务引擎不适用\n5. readonly 可能用于其他场景，异常断开全库会一直保持 readonly 状态，还有网友说的超级权限失效\n6. 表锁 （控制并发） MDL （隔离 DDL DML 操作之间的干扰）\n7. 读读可，读写不可，写写不可\n8. 解决长事务（暂停 DDL ，kill 长事务）/ 设置 alter 超时时间","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1664357927,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43882,"user_name":"Tony Du","can_delete":false,"product_type":"c1","uid":1001661,"ip_address":"","ucode":"F5FCC400E615EA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/bd/6c7d4230.jpg","comment_is_top":false,"comment_ctime":1543317245,"is_pvip":false,"replies":[{"id":"15669","content":"你用MySQL 客户端试试，我跑出来是文中的顺序哈。给我一下你的MySQL 版本号和workbench版本号","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543319147,"ip_address":"","comment_id":43882,"utype":1}],"discussion_count":46,"race_medal":0,"score":"289306126077","product_id":100020801,"comment_content":"基于文中的例子MDL（metadata lock)，自己做了一个实验（稍微有一些小改动在session D上），<br>session A: begin; select * from t limit 1; 最先启动sessionA<br>session B: begin; select * from t limit 1; 紧接着启动sessionB<br>session C: alter table t add f int; 然后再是启动sessionC<br>session D: begin; select * from t limit 1; 最后是启动sessionD<br>如文中例子，session A和B正常启动，然后session C被block，之后session D也被block。当把 session A 和 session B 都commit掉后，发现session C依然是block的（被 session D阻塞），只有当把 session D 也commit掉后，session C才执行下去。同样的实验，重复了三遍，结果也是一样。<br>从现象上看，session D会先拿到MDL读锁，当session D commit掉后，然后再是session C获得MDL写锁。请问老师，这里对于MDL锁的获取顺序（也就是说 是session C先获取MDL写锁还是session D先获取MDL读锁）有什么原则？是随机的还是有什么讲究？<br><br>另外，在一开始的获取MDL锁的阶段，session A（MDL读锁，正常执行）-&gt; session B (MDL读锁，正常执行) -&gt; session C (MDL写锁，被block) -&gt; session D (MDL读锁，被MDL写锁 block) 。是不是说加MDL锁是看时间先后顺序的，一旦出现过需要获取MDL写锁（即使被block），后续再需要获取MDL读锁，则发现之前已经有获取MDL写锁（即使被block），需要获取读锁的session都会被block。感觉上像进入一个锁的”队列“，根据时间先后顺序。请问老师，这里可以更细节和深入的说明下吗？<br><br> 作者回复<br>你这个例子里面，sessionD 被C堵住后是不能输入命令的，之后是什么动作之后，sessionD才能输入commit语句呢<br><br>我的回复：<br>session D被C堵住后，会卡在select * from t limit 1这句。然后当我把A和B都commit掉，session D就会执行select * from t limit 1这句，此时，session C依旧会被堵着。然后把session D commit掉，session C才能执行。实验的时候，我是把sql语句都写在MySQL workbench里的，通过workbench连服务器的，session D的commit语句是写在workbench里执行的。我的问题是，为什么是session D先获取的MDL读锁，而不是session C先获取MDL写锁，对于MDL锁的获取顺序有什么原则？是随机的还是有什么讲究？","like_count":67,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430535,"discussion_content":"你用MySQL 客户端试试，我跑出来是文中的顺序哈。给我一下你的MySQL 版本号和workbench版本号","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543319147,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1450420,"avatar":"https://static001.geekbang.org/account/avatar/00/16/21/b4/7fb0d713.jpg","nickname":"郑喜亮","note":"","ucode":"9E47DC9361B6D3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343931,"discussion_content":"这是由于session C拿到MDL写锁后降级为读锁，此时SessionD获到读锁，当SessionC做完了真正的ddl的时候要升级为写锁，被SessionD阻塞（实践证实的结论【思路：建一张有600000数据的表，一个alter table的耗时约为10s；先执行sessionA,然后sessionB执行alter table，然后执行sessionC，先提交sessionA，然后5秒后提交sessionC，发现约五秒后SessionB完成，所以就是sessionB先拿到写锁，降为读锁，sessionC拿到读锁，五秒后sessionC提交，此时sessionB已经执行了五秒了，约五秒后sessionB提交】）【其实也可以sessionC十秒以后提交，如果sessionC刚提交，sessionB就完成了，就证明sessionB已经执行完成了，只是在等在sessionC的读锁释放】","likes_number":29,"is_delete":false,"is_hidden":false,"ctime":1611212820,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1226968,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b8/d8/f81b5604.jpg","nickname":"hcyycb","note":"","ucode":"77FF6CA41F9E66","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1450420,"avatar":"https://static001.geekbang.org/account/avatar/00/16/21/b4/7fb0d713.jpg","nickname":"郑喜亮","note":"","ucode":"9E47DC9361B6D3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532515,"discussion_content":"对online DDL的MDL理解得很到位啊。666","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637633762,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":343931,"ip_address":""},"score":532515,"extra":"{\"user_type\":1}"}]},{"author":{"id":1301823,"avatar":"https://static001.geekbang.org/account/avatar/00/13/dd/3f/1580ec67.jpg","nickname":"小萨","note":"","ucode":"F839BB79E70369","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297983,"discussion_content":"主要原因是online ddl的问题  mdl会降级\bddl的mdl降级的时候事务读取到结果了，在升级的时候就阻塞了 ","likes_number":14,"is_delete":false,"is_hidden":false,"ctime":1597133589,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1200769,"avatar":"https://static001.geekbang.org/account/avatar/00/12/52/81/745475e9.jpg","nickname":"colben","note":"","ucode":"5E5DBA48578E96","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282966,"discussion_content":"我用的 mysql 8.0.18，发现一个规律：\nalter 增加列时，mdl 写锁先执行，alter 删除列时，mdl 读锁先执行，具体执行顺序如下：\nA: select * from t1\nB: select * from t1\nC: alter table add c1 bool\nD: select * from t1\nA -> B -> C -> D\n\nA: select * from t1\nB: select * from t1\nC: alter table drop column c1\nD: select * from t1\nA -> B -> D -> C","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1592131012,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1502074,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKb5BzdGZbSYHxq88kicdDtBh0yBtJpDAD81wruIsTsLdBysDZztrm8tYb4mBYvAI1ZE4lorKuvmgw/132","nickname":"java_lunsong","note":"","ucode":"180EEE6C8BCAA8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1200769,"avatar":"https://static001.geekbang.org/account/avatar/00/12/52/81/745475e9.jpg","nickname":"colben","note":"","ucode":"5E5DBA48578E96","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":325849,"discussion_content":"我也是和你一样的结果。估计是8.0又优化了啥吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605443735,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":282966,"ip_address":""},"score":325849,"extra":""},{"author":{"id":2873900,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/da/2c/cdd92f3f.jpg","nickname":"wáng","note":"","ucode":"9BFEA73AD7680D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1200769,"avatar":"https://static001.geekbang.org/account/avatar/00/12/52/81/745475e9.jpg","nickname":"colben","note":"","ucode":"5E5DBA48578E96","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558206,"discussion_content":"8.0 优化了部分的DDL，采用的已经不是online DDL了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648134026,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":282966,"ip_address":""},"score":558206,"extra":""}]},{"author":{"id":1036353,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d0/41/52be7dad.jpg","nickname":"阳","note":"","ucode":"44B06F129A2C65","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":29319,"discussion_content":"我在5.6.35-log中测试的，获取MDL写锁的语句是ADD COLUMN的话，写锁的获取仍会被后来的事务中的读锁阻塞。语句是MODIFY COLUMN的话，写锁能先于后来事务中的读锁获取。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1570761589,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1397315,"avatar":"https://static001.geekbang.org/account/avatar/00/15/52/43/25209d6c.jpg","nickname":"无边丝雨","note":"","ucode":"B2AD1EAB9E9308","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":23560,"discussion_content":"大佬,你现在有答案了么","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1569833918,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1303963,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e5/9b/db9a6a8c.jpg","nickname":"test","note":"","ucode":"2AEB293A81E969","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309336,"discussion_content":"申请MDL锁的操作会形成一个队列，队列中写锁获取优先级高于读锁。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1601260549,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1967080,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoeZJ1aW5LkAlaKqXEpvrnSk0ibUcLFjz8pDmWpuvm8RD3e79icAALsEurUwXOs0UjVQRxuImxCsHQQ/132","nickname":"donkey703","note":"","ucode":"A48EA2D28A7557","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":236397,"discussion_content":"评论测试的有问题，SessionA 加begin，但是SessionB，SessionC，SessionD不用加begin，测试出来即为老师给的答案。如果按照你这样Session A、B、D都加了begin，则为你这种场景答案。      那么问题来了，这和事务有什么关系？以及我一直不明白SessionC明明没有去占有到锁，为什么还会堵住SessionD？老师说有个队列拦着，em......好像能解释通，但挺迷糊的，这不就意味着我所有的connection进来都是串行来执行的了？？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1587090963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2062940,"avatar":"","nickname":"Geek_08bc8b","note":"","ucode":"DFB529DD8650CC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1967080,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoeZJ1aW5LkAlaKqXEpvrnSk0ibUcLFjz8pDmWpuvm8RD3e79icAALsEurUwXOs0UjVQRxuImxCsHQQ/132","nickname":"donkey703","note":"","ucode":"A48EA2D28A7557","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306931,"discussion_content":"谢谢这位兄弟提出了老师和同学例子的不同之处，我的理解：正是因为一个小细节才会出现两种情况。\n\n老师的例子：\n由于SessionA没有commit，SessionC会在获取MDL写锁时就被阻塞（online ddl的第一步），所以SessionD也会锁在第一步，select之前就被锁了。\n同学给的例子：\nSessionA/B显示的commit了，所以SessionC会获取MDL写锁（在online ddl的过程中退化成了读锁），此时SessionD拿到了读锁（并且可以执行select），但是由于C会在完成真正的DDL后申请写锁，若D没有commit，C就会被阻塞，D提交了，C就可以继续执行。\n\n参考：https://blog.csdn.net/q2878948/article/details/96430129\n和老师回复的Online DDL过程","likes_number":23,"is_delete":false,"is_hidden":false,"ctime":1600420834,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":236397,"ip_address":""},"score":306931,"extra":""},{"author":{"id":1303963,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e5/9b/db9a6a8c.jpg","nickname":"test","note":"","ucode":"2AEB293A81E969","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2062940,"avatar":"","nickname":"Geek_08bc8b","note":"","ucode":"DFB529DD8650CC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309335,"discussion_content":"解惑了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601260527,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":306931,"ip_address":""},"score":309335,"extra":""}]},{"author":{"id":1143234,"avatar":"","nickname":"刘瑞","note":"","ucode":"7E712BC281A8A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":217445,"discussion_content":"谁能解释一下这个问题哈，老师根本就不回复啊","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1585560423,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1464006,"avatar":"https://static001.geekbang.org/account/avatar/00/16/56/c6/0b449bc6.jpg","nickname":"斐波那契","note":"","ucode":"85E2EBC01392B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":38090,"discussion_content":"我觉得应该是随机取的（或者自己有某种优化机制 先拿了读锁）只是系统每次都先拿到mdl读锁 也就是说在发生mdl写锁时阻塞 然后a b commit后 c d的写锁和读锁同时竞争 读锁竞争到了 你可能觉得这个是概率问题 不可能每次都竞争到 这么多次实验每次都是d拿到 你这个问题让我想起我之前做的一个实验 就是两个线程死锁（就是一个线程先锁a在锁b另一个线程先锁b在锁a）在jdk11上怎么跑都不发生死锁","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1571723990,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1240510,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/UXCLpCDP4o2LFpLIrEup2arUOHzwhPY3X8nOoNSRwS6NgNiaQEduN8exnEDicc8goGCARIthOzwEpGATpiadzv3oQ/132","nickname":"formain","note":"","ucode":"D0B7816D6A40E5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8401,"discussion_content":"我在mysql 5.7.20测试了也是跟这位同学一样的结果，同问session D比seesion C先执行，但是seesion D拿的是读锁啊，为什么会被阻塞在同样是拿读锁的seesion A 和 seesion B之后呢？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567996712,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1240510,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/UXCLpCDP4o2LFpLIrEup2arUOHzwhPY3X8nOoNSRwS6NgNiaQEduN8exnEDicc8goGCARIthOzwEpGATpiadzv3oQ/132","nickname":"formain","note":"","ucode":"D0B7816D6A40E5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138251,"discussion_content":"因为SessionC肯定是在SessionD之前执行过，MDL写锁的时候，读与写都是互斥的，所以 C释放后，才执行的D读。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579230830,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":8401,"ip_address":""},"score":138251,"extra":""}]},{"author":{"id":1204525,"avatar":"https://static001.geekbang.org/account/avatar/00/12/61/2d/5ca0a3da.jpg","nickname":"常文龙","note":"","ucode":"4A126159D24766","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8197,"discussion_content":"同样的疑问  这和通常理解的读写锁现象不一致啊   session D拿读锁不应该阻塞啊","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567826233,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1204525,"avatar":"https://static001.geekbang.org/account/avatar/00/12/61/2d/5ca0a3da.jpg","nickname":"常文龙","note":"","ucode":"4A126159D24766","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138253,"discussion_content":"因为SessionC肯定是在SessionD之前执行过，MDL写锁的时候，读与写都是互斥的，所以 C释放后，才执行的D读。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579230855,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":8197,"ip_address":""},"score":138253,"extra":""},{"author":{"id":1433753,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIkXblsn9pcgvEwcFyfzE6gxlzhbJMkgBaRvq35xB6Hkicjkk5vXLnu5buCCvuoZ3JJzibD54v7rTNQ/132","nickname":"Geek_b6d89a","note":"","ucode":"E5A637B740D5E1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1204525,"avatar":"https://static001.geekbang.org/account/avatar/00/12/61/2d/5ca0a3da.jpg","nickname":"常文龙","note":"","ucode":"4A126159D24766","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":267911,"discussion_content":"写锁权重高，但是被A、B阻塞，D读锁再写锁后面排队","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589709760,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":8197,"ip_address":""},"score":267911,"extra":""}]},{"author":{"id":1023928,"avatar":"","nickname":"马大帅","note":"","ucode":"4DD1FD6D3FA05B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7048,"discussion_content":"这个的原因是什么？没有结果了嘛？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567322624,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1130590,"avatar":"https://static001.geekbang.org/account/avatar/00/11/40/5e/b8fada94.jpg","nickname":"Ryoma","note":"","ucode":"7F692369239692","race_medal":2,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370439,"discussion_content":"mark\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619412764,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2548121,"avatar":"https://static001.geekbang.org/account/avatar/00/26/e1/99/827921d9.jpg","nickname":"Z","note":"","ucode":"29C7423250EF90","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367019,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618236860,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2375320,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/WUndm7hBa1G3DB9TmNRVVqtriaCwRhI4tZ9MN60iaGMwuksOCQNpvBZep01ic6KNickA2iaiaJria6P0qhRpppnpXO8Iw/132","nickname":"Lys","note":"","ucode":"B97FC63FED8B29","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365309,"discussion_content":"推荐两篇文章，很好的解释了该问题，简单说就算online DDL导致的。\nhttps://blog.csdn.net/finalkof1983/article/details/88063328\nhttps://blog.csdn.net/finalkof1983/article/details/88247329?spm=1001.2014.3001.5501","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617767888,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1204316,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/5c/8fb0bf5a.jpg","nickname":"寒澈","note":"","ucode":"26EF6F257586B3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2375320,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/WUndm7hBa1G3DB9TmNRVVqtriaCwRhI4tZ9MN60iaGMwuksOCQNpvBZep01ic6KNickA2iaiaJria6P0qhRpppnpXO8Iw/132","nickname":"Lys","note":"","ucode":"B97FC63FED8B29","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":408732,"discussion_content":"分析的挺好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635311390,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":365309,"ip_address":""},"score":408732,"extra":""}]},{"author":{"id":2351720,"avatar":"https://static001.geekbang.org/account/avatar/00/23/e2/68/ce547a12.jpg","nickname":"zjm1314","note":"","ucode":"63B0EAB7045054","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340398,"discussion_content":"卧槽，这么好的问题，丁奇大佬赶紧回复啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609994689,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1780698,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/2b/da/fa630993.jpg","nickname":"旧时光。","note":"","ucode":"E9612FD41567BD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333022,"discussion_content":"Mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607417835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1926366,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erwIgbTd3oy4GzkdCUBmz8lHGIIWBwoSIfibgQzwDlQuvTrLlqwTh7p99NBJIsu98ziaYoroQCSENwA/132","nickname":"Celine","note":"","ucode":"63D5F2E8FB2130","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299737,"discussion_content":"读写锁都是自旋锁吧，一开始D是由于C阻塞也block了，当A,B commit释放了之后，C和D是不是会发生公平竞争，有时候C竞争成功了，有时候D竞争成功了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597803073,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1338848,"avatar":"https://static001.geekbang.org/account/avatar/00/14/6d/e0/06ea47d6.jpg","nickname":"玲儿","note":"","ucode":"4D3429A9506DD5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292252,"discussion_content":"把这些语句放在一个事务中，测试的和老师说的结果是一样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595156089,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1228560,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/10/b7974690.jpg","nickname":"BD","note":"","ucode":"A95CF8C3EDC228","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289754,"discussion_content":"使用命令行工具测试也是这样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594203647,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1314724,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0f/a4/0b49469f.jpg","nickname":"木子00","note":"","ucode":"8F78CA722EB29B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":274961,"discussion_content":"知其然，但不知所以然。给我的感觉。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590637139,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1331888,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/S3TfXesBIaWokWNRkSzzz20AHq4Qjb7GMttOp006STsn72OiadZqUVINhiakibkUyZXdOTXhHctPn8KIwUgwyPhpA/132","nickname":"Jerry","note":"","ucode":"AF70AA2B463B8C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":245950,"discussion_content":"两台mysql5.7.28，都是REPEATABLE-READ，一台总是和这位同学的结果一样，另一台总是和老师说的一样，而且我都是直接在服务器本机上操作的，这是咋回事，完全懵了！还望有人解答！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587714669,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2069361,"avatar":"","nickname":"林静","note":"","ucode":"492618873E9B1F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1331888,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/S3TfXesBIaWokWNRkSzzz20AHq4Qjb7GMttOp006STsn72OiadZqUVINhiakibkUyZXdOTXhHctPn8KIwUgwyPhpA/132","nickname":"Jerry","note":"","ucode":"AF70AA2B463B8C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326092,"discussion_content":"Percona Server 5.7.29 REPEATABLE-READ 模式下，服务器上执行tony的例子，第一次D会被C阻塞，但是A提交后C/D都顺利执行；第2次D完全没有被C阻塞.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605519813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":245950,"ip_address":""},"score":326092,"extra":""}]},{"author":{"id":1518793,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2c/c9/462afe28.jpg","nickname":"小白","note":"","ucode":"11FC209D9ED65F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":217100,"discussion_content":"这个表锁队列的执行顺序是怎么样的？我找不到答案，有答案的同学麻烦到时候回复下我😭","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585497882,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1737456,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/bGrI3qhTPVjkD2uONwGtEMaHzVGmRI7huFC2C88zJyMvzTWT7MHVcy0ic5gAoho7CBVjAYsLof3vvwXgrL654fA/132","nickname":"Geek_笑","note":"","ucode":"A449E2141B7989","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":139866,"discussion_content":"Metadata Lock Acquisition\nIf there are multiple waiters for a given lock, the highest-priority lock request is satisfied first, with an exception related to the max_write_lock_count system variable. Write lock requests have higher priority than read lock requests. However, if max_write_lock_count is set to some low value (say, 10), read lock requests may be preferred over pending write lock requests if the read lock requests have already been passed over in favor of 10 write lock requests. Normally this behavior does not occur because max_write_lock_count by default has a very large value. \nhttps://dev.mysql.com/doc/refman/8.0/en/metadata-locking.html\n官方文档是这样写的啊，写锁一般比读锁有更高优先级，谁能解释下这个机制？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579323730,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1737456,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/bGrI3qhTPVjkD2uONwGtEMaHzVGmRI7huFC2C88zJyMvzTWT7MHVcy0ic5gAoho7CBVjAYsLof3vvwXgrL654fA/132","nickname":"Geek_笑","note":"","ucode":"A449E2141B7989","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":139836,"discussion_content":"同样的疑问？求解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579321117,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1066251,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/0Qp9pxHBvgdZAveKzsvUFFUicCJfe7ONzhC7jSNFQDNFvg0jRMXuqqZOdxG1qKosylUYrpIHUR2Q76w5m4HtVkg/132","nickname":"Aaron","note":"","ucode":"B0C504A76297C7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132726,"discussion_content":"我的实验也是和评论中一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578924144,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42529,"discussion_content":"我的版本是 5.7.18 ，测试结果是随机的，测试了2次，一次和老师文中的一样，一次和评论中的一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572689415,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1618978,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b4/22/f2228dd0.jpg","nickname":"rm-rf","note":"","ucode":"E8825DBEA54506","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":37976,"discussion_content":"mysql 8.0上实验，发现并没有这个问题，sessionA，sessionB后只要commit了，sessionC可以获得写锁（执行的是增加列的语句），sessionD查出来是增加列后的表，如果SessionA，B没有commit，就是C，D都被阻塞了。感觉就是按时间顺序获得的那样，应该是怕申请写锁的线程“饿死”吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571707781,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1194858,"avatar":"https://static001.geekbang.org/account/avatar/00/12/3b/6a/80d9c545.jpg","nickname":"RD","note":"","ucode":"E3947B6E1681AD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1618978,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b4/22/f2228dd0.jpg","nickname":"rm-rf","note":"","ucode":"E8825DBEA54506","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":96621,"discussion_content":"8.0 docker 客户端测试了四次，确实有一次是评论中的状态。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577081029,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":37976,"ip_address":""},"score":96621,"extra":""}]},{"author":{"id":1204947,"avatar":"https://static001.geekbang.org/account/avatar/00/12/62/d3/663de972.jpg","nickname":"懵逼猴","note":"","ucode":"BDC748A96AC316","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8103,"discussion_content":"老师收钱跑路了吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567779575,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1314724,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0f/a4/0b49469f.jpg","nickname":"木子00","note":"","ucode":"8F78CA722EB29B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1204947,"avatar":"https://static001.geekbang.org/account/avatar/00/12/62/d3/663de972.jpg","nickname":"懵逼猴","note":"","ucode":"BDC748A96AC316","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":274959,"discussion_content":"哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590637083,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":8103,"ip_address":""},"score":274959,"extra":""}]},{"author":{"id":1554570,"avatar":"https://static001.geekbang.org/account/avatar/00/17/b8/8a/7367a69e.jpg","nickname":"嘉兴","note":"","ucode":"6997E7A3E25EE4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5322,"discussion_content":"mysql 5.7 一样现象","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566178562,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":5,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1423473,"avatar":"https://static001.geekbang.org/account/avatar/00/15/b8/71/8b17ab68.jpg","nickname":"微ヽ(*^*)信","note":"","ucode":"60AF816DCCC434","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3937,"discussion_content":"我的是mysql 5.6.42，，也是和这位同学一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564993633,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":5,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1007267,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/a3/9670d4b4.jpg","nickname":"Spring","note":"","ucode":"80594B4B056A53","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1355,"discussion_content":"在5.7版本测试也是一样的现象。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562575128,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":5,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1306092,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ61zTDmLk7IhLJn6seBPOwsVaKIWUWaxk5YmsdYBZUOYMQCsyl9iaQVSg9U5qJVLLOCFUoLUuYnRA/132","nickname":"fjpcode","note":"","ucode":"C32C5E3ECB9A90","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":777,"discussion_content":"在dockerhub上拉取的一个mysql镜像，mysql版本5.7.5-m15， 和这位同学试验出的结果是一样的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562055403,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":5,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43455,"user_name":"Aurora","can_delete":false,"product_type":"c1","uid":1302157,"ip_address":"","ucode":"84CB75BC2D7680","user_header":"https://static001.geekbang.org/account/avatar/00/13/de/8d/99536c5b.jpg","comment_is_top":false,"comment_ctime":1543228694,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"267831201046","product_id":100020801,"comment_content":"如果mysqldump 备份的是整个schema，某个小表t1只是该schema上其中有一张表<br>情况1：<br>master上对小表t1的DDL传输到slave去应用的时刻，mysqldump已经备份完了t1表的数据，此时slave 同步正常，不会有问题。<br><br>情况2：<br>master上对小表t1的DDL传输到slave去应用的时刻，mysqldump正在备份t1表的数据,此时会发生MDL 锁，从库上t1表的所有操作都会Hang 住。<br><br>情况3：<br>master 上对小表t1的DDL传输到slave去应用的时刻，mysqldump 还没对t1表进行备份，该DDL会在slave的t1表应用成功，但是当导出到t1表的时候会报“ERROR 1412 (HY000): Table definition has changed, please retry transaction” 错误，导致导出失败！<br>","like_count":62},{"had_liked":false,"id":57129,"user_name":"柳树","can_delete":false,"product_type":"c1","uid":1025223,"ip_address":"","ucode":"F03249D4534BCB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/c7/d1ee69c6.jpg","comment_is_top":false,"comment_ctime":1546655987,"is_pvip":false,"replies":[{"id":"20633","content":"如果说设计初衷，是为了防饿死吧","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546690331,"ip_address":"","comment_id":57129,"utype":1}],"discussion_count":6,"race_medal":0,"score":"203410118899","product_id":100020801,"comment_content":"既然session C blocked，拿不到写锁，那么session D为什么会被blocked呢？","like_count":47,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435418,"discussion_content":"如果说设计初衷，是为了防饿死吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546690331,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2036333,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/6ZM5RHVBe8pVGoibpPHVM5TZTbqS4u4ckiaHoItk1LIhTfCEYbH7LYiaWJDvTiaga34MQQ3xicIZ0vsAkoSKRvY8F3A/132","nickname":"Geek_b4bb35","note":"","ucode":"257EE15A137445","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285368,"discussion_content":"老师这样一说就清晰多了，不然如果后面还有很多查询请求的话，session c就可能很久都拿不到写锁了","likes_number":13,"is_delete":false,"is_hidden":false,"ctime":1592816797,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":2351720,"avatar":"https://static001.geekbang.org/account/avatar/00/23/e2/68/ce547a12.jpg","nickname":"zjm1314","note":"","ucode":"63B0EAB7045054","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2036333,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/6ZM5RHVBe8pVGoibpPHVM5TZTbqS4u4ckiaHoItk1LIhTfCEYbH7LYiaWJDvTiaga34MQQ3xicIZ0vsAkoSKRvY8F3A/132","nickname":"Geek_b4bb35","note":"","ucode":"257EE15A137445","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340399,"discussion_content":"看了前面的评论，写锁的优先级更高","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1609994779,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":285368,"ip_address":""},"score":340399,"extra":""},{"author":{"id":1188023,"avatar":"https://static001.geekbang.org/account/avatar/00/12/20/b7/bdb3bcf0.jpg","nickname":"Eternal","note":"","ucode":"EA6FE7CC98F740","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2351720,"avatar":"https://static001.geekbang.org/account/avatar/00/23/e2/68/ce547a12.jpg","nickname":"zjm1314","note":"","ucode":"63B0EAB7045054","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":397001,"discussion_content":"C的MDL写锁还没拿到，这个时候应该D的读锁和A的读锁是可以兼容的；如果按照写锁优先级更高是说得过去；","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632539343,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":340399,"ip_address":""},"score":397001,"extra":""},{"author":{"id":1188023,"avatar":"https://static001.geekbang.org/account/avatar/00/12/20/b7/bdb3bcf0.jpg","nickname":"Eternal","note":"","ucode":"EA6FE7CC98F740","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2351720,"avatar":"https://static001.geekbang.org/account/avatar/00/23/e2/68/ce547a12.jpg","nickname":"zjm1314","note":"","ucode":"63B0EAB7045054","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":397002,"discussion_content":"“这个不是读写锁，是锁队列，一进去就开始影响后面的” 老师的回复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632539400,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":340399,"ip_address":""},"score":397002,"extra":""}]},{"author":{"id":2760780,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKghO4kJwQ5ccuBA2Yox1WlZmq0JUICpNAsgYlOHX0wHGv48xVRKSvF9a6Eic5l2UOjFjnvTnsibibiaw/132","nickname":"Geek_94045a","note":"","ucode":"B8F23BA9D1411B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541675,"discussion_content":"读写锁必须有个先来后到的队列的概念 不然写锁有可能一直拿不到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640514512,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43270,"user_name":"倪大人","can_delete":false,"product_type":"c1","uid":1193052,"ip_address":"","ucode":"4798D69F3E86FB","user_header":"https://static001.geekbang.org/account/avatar/00/12/34/5c/6b4757a0.jpg","comment_is_top":false,"comment_ctime":1543202457,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"177636861593","product_id":100020801,"comment_content":"思考题：<br>由于先用–single-transaction做备份，所以备份线程会启动一个事务获取MDL读锁，文中也说了“MDL 会直到事务提交才释放”，所以要一直等到备份完成主库来的DDL才会在从库执行生效，且备份的数据里并不会有新增的这个列。<br><br>再补充下，由于主库来的DDL会等待MDL写锁，所以会导致之后从库上的读写请求都阻塞，相当与文中sessionC和sessionD。","like_count":41},{"had_liked":false,"id":43567,"user_name":"栋能","can_delete":false,"product_type":"c1","uid":1006849,"ip_address":"","ucode":"8BD9C939D3E8E1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5d/01/9cd84003.jpg","comment_is_top":false,"comment_ctime":1543241021,"is_pvip":false,"discussion_count":10,"race_medal":0,"score":"169046965565","product_id":100020801,"comment_content":"没搞懂c的索引树为什么和ca是一样的. c索引树中c有序，(a,b)随意序的呀？这能代表c与ca索引树一致吗？","like_count":39,"discussions":[{"author":{"id":1116935,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0b/07/9b0446a7.jpg","nickname":"锋风封","note":"","ucode":"8E1528DF975D82","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2585,"discussion_content":"应该是ab是联合主键它们是有序的，在前面讲过非主键索引里面放的是主键要回表去查才行，所以a,b也是有序的c-a-b,如果联合索引是ba的话结果就应该反过来了","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1563778335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1006849,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5d/01/9cd84003.jpg","nickname":"栋能","note":"","ucode":"8BD9C939D3E8E1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1116935,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0b/07/9b0446a7.jpg","nickname":"锋风封","note":"","ucode":"8E1528DF975D82","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":95315,"discussion_content":"第一句可能吧。但对于 “在前面讲过非主键索引里面放的是主键要回表去查才行....”，这一段我就不赞同，根本就不需要回表查。覆盖索引了解下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577019848,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":2585,"ip_address":""},"score":95315,"extra":""},{"author":{"id":1798068,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/6f/b4/d465acef.jpg","nickname":"啊噗！","note":"","ucode":"C911E772E1E800","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1006849,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5d/01/9cd84003.jpg","nickname":"栋能","note":"","ucode":"8BD9C939D3E8E1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":199163,"discussion_content":"问题是根本就没覆盖呀。。。现在只有c, ab 两种索引 对于ca 这哪里覆盖了? 就是要先c再ab 也就是先非主键索引再回表到主键索引","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1583564946,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":95315,"ip_address":""},"score":199163,"extra":""},{"author":{"id":1007253,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/95/68b69251.jpg","nickname":"凌风","note":"","ucode":"E675357C22299F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1798068,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/6f/b4/d465acef.jpg","nickname":"啊噗！","note":"","ucode":"C911E772E1E800","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298296,"discussion_content":"a,b为联合主键，c,a这个联合索引存的值为a,b联合主键的值，所以使用ca查询可以获取到c,a,b三列的，所以不需要回表","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1597238873,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":199163,"ip_address":""},"score":298296,"extra":""}]},{"author":{"id":2037576,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/17/48/6ab7ef29.jpg","nickname":"养猪场老板","note":"","ucode":"7974373F55AF87","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311794,"discussion_content":"B+树的叶子节点指向一个InnoDB数据页，数据页里边会有多行数据，多行数据是以有序数组的形式保存的。回到你的例子，c的二级索引里，（a,b)就是所谓的行数据。在c这个二级索引的B+树上的叶子节点上，（a，b）是以有序数组的形式排好序的。所以c二级索引和ca联合索引一模一样的，我是这么理解的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1602491159,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1526355,"avatar":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","nickname":"moonfox","note":"","ucode":"902BFF40EFA9FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2037576,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/17/48/6ab7ef29.jpg","nickname":"养猪场老板","note":"","ucode":"7974373F55AF87","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":333818,"discussion_content":"索引C在排序时，如果C相同，就再排(a,b)，这和ca索引是一样的顺序，所以相同","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1607621511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":311794,"ip_address":""},"score":333818,"extra":""}]},{"author":{"id":1030209,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/41/302f8cd4.jpg","nickname":"纤路","note":"","ucode":"CDBAA49ED9D9E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386780,"discussion_content":"文中以及评论中所说的‘一样’，指的是再排序的场景下， 效果是一样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627795222,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1319270,"avatar":"https://static001.geekbang.org/account/avatar/00/14/21/66/f9125286.jpg","nickname":"keshawn","note":"","ucode":"CFCC24F58D1651","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339060,"discussion_content":"ab主键索引也是有序的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609489310,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":239163,"discussion_content":"索引本身是有序的，根据索引字段依次排序。而且有个索引扩展功能，(c)和(c,a,b)是等价的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587280522,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44149,"user_name":"S@Y@M","can_delete":false,"product_type":"c1","uid":1297700,"ip_address":"","ucode":"F5658220C883FA","user_header":"https://static001.geekbang.org/account/avatar/00/13/cd/24/76b56b0b.jpg","comment_is_top":false,"comment_ctime":1543374293,"is_pvip":false,"replies":[{"id":"15735","content":"是的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543379790,"ip_address":"","comment_id":44149,"utype":1}],"discussion_count":4,"race_medal":0,"score":"147572262357","product_id":100020801,"comment_content":"全局锁和表锁是Server层实现的吗","like_count":34,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430652,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543379790,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1119778,"avatar":"https://static001.geekbang.org/account/avatar/00/11/16/22/2205cf0a.jpg","nickname":"余向华","note":"","ucode":"263773616D2C83","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":216947,"discussion_content":"是的，都是server层实现的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585493022,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1519547,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2f/bb/4236d712.jpg","nickname":"itschenxiang","note":"","ucode":"7D90194AC52435","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1119778,"avatar":"https://static001.geekbang.org/account/avatar/00/11/16/22/2205cf0a.jpg","nickname":"余向华","note":"","ucode":"263773616D2C83","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":269216,"discussion_content":"请问一下文中提到的MDL是引擎层还是Server层？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1589879879,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":216947,"ip_address":""},"score":269216,"extra":""},{"author":{"id":1722041,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/46/b9/834d003b.jpg","nickname":"啦啦啦","note":"","ucode":"6A31CDDA7FD3F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1519547,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2f/bb/4236d712.jpg","nickname":"itschenxiang","note":"","ucode":"7D90194AC52435","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":276605,"discussion_content":"server层的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1590912434,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":269216,"ip_address":""},"score":276605,"extra":""}]}]},{"had_liked":false,"id":43647,"user_name":"约书亚","can_delete":false,"product_type":"c1","uid":1046714,"ip_address":"","ucode":"81EA27ADD9EC1A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/ba/14e05601.jpg","comment_is_top":false,"comment_ctime":1543275373,"is_pvip":false,"replies":[{"id":"15621","content":"赞二刷态度哈<br><br>嗯，这个不是读写锁，是锁队列，一进去就开始影响后面的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543288108,"ip_address":"","comment_id":43647,"utype":1}],"discussion_count":4,"race_medal":0,"score":"134687261549","product_id":100020801,"comment_content":"一刷的时候没注意，二刷看别人回复想起这么个问题：<br>例子里为什么session C之后的所有“读”请求都会被阻塞？毕竟session C还没加上锁。难道这里隐含涉及到了意向锁？","like_count":31,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430444,"discussion_content":"赞二刷态度哈\n\n嗯，这个不是读写锁，是锁队列，一进去就开始影响后面的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543288108,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138270,"discussion_content":"session C是改表结构，是mdl写锁，写锁是读写锁、 写锁互斥的，同一个表，此时是写锁，当然后面的读锁也是互斥了，所以要等着前面释放。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1579231883,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1194858,"avatar":"https://static001.geekbang.org/account/avatar/00/12/3b/6a/80d9c545.jpg","nickname":"RD","note":"","ucode":"E3947B6E1681AD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319165,"discussion_content":"是这样，由于读写互斥，所以 C 根本拿不到锁。之所以 C 没拿到锁，D 也会被挂起，就是因为锁队列，防止饥饿的。类似于操作系统的管程模型。","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1603954964,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":138270,"ip_address":""},"score":319165,"extra":""}]},{"author":{"id":1066508,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/0c/773ba2f3.jpg","nickname":"下个目标45k","note":"","ucode":"193BA8C3AA9A61","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333200,"discussion_content":"说明是公平锁？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607477662,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43246,"user_name":"hhhh","can_delete":false,"product_type":"c1","uid":1256101,"ip_address":"","ucode":"9E87017424B382","user_header":"https://static001.geekbang.org/account/avatar/00/13/2a/a5/625c0a2e.jpg","comment_is_top":false,"comment_ctime":1543200148,"is_pvip":false,"replies":[{"id":"15468","content":"是的，文中写错了。我刚刚修改上去了。抱歉。谢谢提醒","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543204050,"ip_address":"","comment_id":43246,"utype":1}],"discussion_count":1,"race_medal":0,"score":"130392219028","product_id":100020801,"comment_content":"表级锁的例子中：<br>lock tables t1 read, t2 write<br>说到“线程A不能读取T2”<br>查了一下MySQL Reference：<br>WRITE lock:<br>The session that holds the lock can read and write the table.<br>Only the session that holds the lock can access the table. No other session can access it until the lock is released.<br>Lock requests for the table by other sessions block while the WRITE lock is held.<br>也就是说表级别write锁，对于本线程是可读可写的，<br>文章中说的线程A不能读取T2，我这里不太理解","like_count":30,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430337,"discussion_content":"是的，文中写错了。我刚刚修改上去了。抱歉。谢谢提醒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543204050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43107,"user_name":"包包up","can_delete":false,"product_type":"c1","uid":1073495,"ip_address":"","ucode":"A6F51A62A8B362","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/57/6f3c81dd.jpg","comment_is_top":false,"comment_ctime":1543163782,"is_pvip":false,"discussion_count":9,"race_medal":0,"score":"121802248070","product_id":100020801,"comment_content":"没明白为什么ca索引建出来的模型和c建出来的一样？","like_count":28,"discussions":[{"author":{"id":1497528,"avatar":"https://static001.geekbang.org/account/avatar/00/16/d9/b8/2d8900d5.jpg","nickname":"史鹏飞","note":"","ucode":"39D9A28082C0BE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4221,"discussion_content":"因为联合索引ca,先按c排序，然后按a排序，c索引是按c排序，而这两个索引后面都有主键索引ab，主键索引是先a排序然后是b排序，所以caab 和cab的排序是一样的，故二者是一样的，在下粗见。","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1565235441,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1363803,"avatar":"https://static001.geekbang.org/account/avatar/00/14/cf/5b/4b96b6f3.jpg","nickname":"别吵我睡觉","note":"","ucode":"A1BC2A1AB7CB82","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1497528,"avatar":"https://static001.geekbang.org/account/avatar/00/16/d9/b8/2d8900d5.jpg","nickname":"史鹏飞","note":"","ucode":"39D9A28082C0BE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":19822,"discussion_content":"跟我的理解一样粗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569229305,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4221,"ip_address":""},"score":19822,"extra":""},{"author":{"id":1134861,"avatar":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","nickname":"James","note":"","ucode":"48B0F2A334D1C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1497528,"avatar":"https://static001.geekbang.org/account/avatar/00/16/d9/b8/2d8900d5.jpg","nickname":"史鹏飞","note":"","ucode":"39D9A28082C0BE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":65528,"discussion_content":"跟我一样粗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575009688,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4221,"ip_address":""},"score":65528,"extra":""},{"author":{"id":1476925,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIp6Ln5VriaBK9uc901IMsOvl1HHmEPS62V05k8N10ib0z2BtvJoCIkElgWvke8cEgIchBxuUqx0faQ/132","nickname":"無雙","note":"","ucode":"EDCB22A29B7B45","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1134861,"avatar":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","nickname":"James","note":"","ucode":"48B0F2A334D1C1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":88422,"discussion_content":"看来大家差不多粗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576714333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":65528,"ip_address":""},"score":88422,"extra":""}]},{"author":{"id":1908392,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/1e/a8/225e715b.jpg","nickname":"华振宇","note":"","ucode":"2962084A13FE57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":209782,"discussion_content":"这里还有一个最左原则，ca也就包含c了，如果是ba索引，也就包含b索引了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584671480,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1193885,"avatar":"https://static001.geekbang.org/account/avatar/00/12/37/9d/ba605fbb.jpg","nickname":"Otis Hsu","note":"","ucode":"D714C3434E57C5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556639,"discussion_content":"不对，c不能代替ca。假设一个极端的情况，我后面修改了主键值的情况下，以c建立的索引不会重排，那么此时c中包含的a不是有序的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647433696,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1780797,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/2c/3d/0bd58aa4.jpg","nickname":"Em","note":"","ucode":"32012A5C603C8A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":372609,"discussion_content":"英雄所见略粗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620392135,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2037576,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/17/48/6ab7ef29.jpg","nickname":"养猪场老板","note":"","ucode":"7974373F55AF87","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311795,"discussion_content":"B+树的叶子节点指向一个InnoDB数据页，数据页里边会有多行数据，多行数据是以有序数组的形式保存的。回到你的例子，c的二级索引里，（a,b)就是所谓的行数据。在c这个二级索引的B+树上的叶子节点上，（a，b）是以有序数组的形式排好序的。所以c二级索引和ca联合索引一模一样的，我是这么理解的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602491260,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":50854,"user_name":"阿豆Dou","can_delete":false,"product_type":"c1","uid":1303898,"ip_address":"","ucode":"5D933075D93179","user_header":"https://static001.geekbang.org/account/avatar/00/13/e5/5a/b650ed8c.jpg","comment_is_top":false,"comment_ctime":1545055151,"is_pvip":false,"replies":[{"id":"18284","content":"好问题，<br>对<br><br>而且如果不幸一直拿不到，最后锁超时了，就只好回滚这个DD了操作","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545056437,"ip_address":"","comment_id":50854,"utype":1}],"discussion_count":4,"race_medal":0,"score":"117509172143","product_id":100020801,"comment_content":"Online DDL的过程是这样的：<br>1. 拿MDL写锁<br>2. 降级成MDL读锁<br>3. 真正做DDL<br>4. 升级成MDL写锁<br>5. 释放MDL锁<br><br>1、2、4、5如果没有锁冲突，执行时间非常短。第3步占用了DDL绝大部分时间，这期间这个表可以正常读写数据，是因此称为“online ”<br><br>问题<br>如果第四步升级为MDL写锁的时候，这个表的MDL锁有其他事务占着，那么这个事务会阻塞，等到可以拿到MDL写锁是吧<br><br>","like_count":27,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433142,"discussion_content":"好问题，\n对\n\n而且如果不幸一直拿不到，最后锁超时了，就只好回滚这个DD了操作","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545056437,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1438863,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f4/8f/6b3d4370.jpg","nickname":"瑶老板的小弟","note":"","ucode":"EA6CDB3165227F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536107,"discussion_content":"Online DDL的过程是这样的：\n1. 拿MDL写锁\n2. 降级成MDL读锁\n3. 真正做DDL\n4. 升级成MDL写锁\n5. 释放MDL锁\n\n问题：为什么1不直接就拿MDL读锁，后面真正做DDL的时候升级为写锁？而要去先拿写锁，再降级？目的是什么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638690802,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1256203,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2b/0b/3ed638ce.jpg","nickname":"rusk","note":"","ucode":"08709113CA30AD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1438863,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f4/8f/6b3d4370.jpg","nickname":"瑶老板的小弟","note":"","ucode":"EA6CDB3165227F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540267,"discussion_content":"防止有其他的并发ddl操作，如果能拿到写锁就表示没有","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640003275,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":536107,"ip_address":""},"score":540267,"extra":""}]},{"author":{"id":1303963,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e5/9b/db9a6a8c.jpg","nickname":"test","note":"","ucode":"2AEB293A81E969","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309338,"discussion_content":"这个对应 tony du的实验","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601260796,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44116,"user_name":"Tony Du","can_delete":false,"product_type":"c1","uid":1001661,"ip_address":"","ucode":"F5FCC400E615EA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/bd/6c7d4230.jpg","comment_is_top":false,"comment_ctime":1543369997,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"74557814029","product_id":100020801,"comment_content":"基于文中的例子MDL（metadata lock)，自己做了一个实验（稍微有一些小改动在session D上），<br>session A: begin; select * from t limit 1; 最先启动sessionA<br>session B: begin; select * from t limit 1; 紧接着启动sessionB<br>session C: alter table t add f int; 然后再是启动sessionC<br>session D: begin; select * from t limit 1; 最后是启动sessionD<br>如文中例子，session A和B正常启动，然后session C被block，之后session D也被block。当把 session A 和 session B 都commit掉后，发现session C依然是block的（被 session D阻塞），只有当把 session D 也commit掉后，session C才执行下去。同样的实验，重复了三遍，结果也是一样。<br>从现象上看，session D会先拿到MDL读锁，当session D commit掉后，然后再是session C获得MDL写锁。请问老师，这里对于MDL锁的获取顺序（也就是说 是session C先获取MDL写锁还是session D先获取MDL读锁）有什么原则？是随机的还是有什么讲究？<br><br>另外，在一开始的获取MDL锁的阶段，session A（MDL读锁，正常执行）-&gt; session B (MDL读锁，正常执行) -&gt; session C (MDL写锁，被block) -&gt; session D (MDL读锁，被MDL写锁 block) 。是不是说加MDL锁是看时间先后顺序的，一旦出现过需要获取MDL写锁（即使被block），后续再需要获取MDL读锁，则发现之前已经有获取MDL写锁（即使被block），需要获取读锁的session都会被block。感觉上像进入一个锁的”队列“，根据时间先后顺序。请问老师，这里可以更细节和深入的说明下吗？<br><br> 作者回复<br>你这个例子里面，sessionD 被C堵住后是不能输入命令的，之后是什么动作之后，sessionD才能输入commit语句呢<br><br>我的回复：<br>session D被C堵住后，会卡在select * from t limit 1这句。然后当我把A和B都commit掉，session D就会执行select * from t limit 1这句，此时，session C依旧会被堵着。然后把session D commit掉，session C才能执行。实验的时候，我是把sql语句都写在MySQL workbench里的，通过workbench连服务器的，session D的commit语句是写在workbench里执行的。我的问题是，为什么是session D先获取的MDL读锁，而不是session C先获取MDL写锁，对于MDL锁的获取顺序有什么原则？是随机的还是有什么讲究？<br><br> 作者回复<br>你用MySQL 客户端试试，我跑出来是文中的顺序哈。给我一下你的MySQL 版本号和workbench版本号<br><br>我的回复<br>用MySQL客户端试过了（通过命令行），结果和我上面实验的结果是一样的。还是session D先获取的MDL读锁，而不是session C先获取MDL写锁。<br>MySQL版本：Ver 14.14 Distrib 5.7.17, for Linux (x86_64) using  EditLine wrapper<br>Workbench版本：<br>MySQL Workbench 6.3<br>Version 6.3.8 build 1228 CE (64 bits) Community<br><br>这里留言回复不太方便，能否留一个邮箱或者微信号，交流起来比较方便。谢谢。","like_count":17,"discussions":[{"author":{"id":1450420,"avatar":"https://static001.geekbang.org/account/avatar/00/16/21/b4/7fb0d713.jpg","nickname":"郑喜亮","note":"","ucode":"9E47DC9361B6D3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343916,"discussion_content":"这是由于session C拿到MDL写锁后降级为读锁，此时SessionD获到读锁，当SessionC做完了真正的ddl的时候要升级为写锁，被SessionD阻塞（实践证实的结论【思路：建一张有600000数据的表，一个alter table的耗时约为10s；先执行sessionA,然后sessionB执行alter table，然后执行sessionC，先提交sessionA，然后5秒后提交sessionC，发现约五秒后SessionB完成，所以就是sessionB先拿到写锁，降为读锁，sessionC拿到读锁，五秒后sessionC提交，此时sessionB已经执行了五秒了，约五秒后sessionB提交】）【其实也可以sessionC十秒以后提交，如果sessionC刚提交，sessionB就完成了，就证明sessionB已经执行完成了，只是在等在sessionC的读锁释放】","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1611212514,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1397298,"avatar":"https://static001.geekbang.org/account/avatar/00/15/52/32/bb570f48.jpg","nickname":"向往的生活","note":"","ucode":"0E8DB45357820F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":125049,"discussion_content":"和这位同学有一样的疑问，后续交流结果是怎么样呀？","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1578470056,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1308912,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f8/f0/0285e98a.jpg","nickname":"杨小凡","note":"","ucode":"5A7ACF4A79FA8F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376212,"discussion_content":"https://blog.csdn.net/q2878948/article/details/96430129，这个可以看看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622018924,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1999313,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/81/d1/0f599cfa.jpg","nickname":"LF","note":"","ucode":"738DA3F0AE8E07","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300253,"discussion_content":"我的结果也是和你一样的，同问？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598000027,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1901078,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/02/16/dd5cde99.jpg","nickname":"🤔 🤔 🤔","note":"","ucode":"F1A4B6270675AD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":266510,"discussion_content":"我也做了实验，跟你结果是一样的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589524866,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46859,"user_name":"李","can_delete":false,"product_type":"c1","uid":1188596,"ip_address":"","ucode":"4E69496C6AF335","user_header":"","comment_is_top":false,"comment_ctime":1543992733,"is_pvip":false,"replies":[{"id":"16798","content":"1. 先要写锁是要确保能改，降级是为了让后面的查询能过<br>2. 这个过程比较复杂（不是你想的那样😄），后面文章会说<br>3. 最后还得修改一下表结构","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544027026,"ip_address":"","comment_id":46859,"utype":1}],"discussion_count":1,"race_medal":0,"score":"57378567581","product_id":100020801,"comment_content":"2. 降级成MDL读锁<br>3. 真正做DDL<br>4. 升级成MDL写锁<br>5. 释放MDL锁<br><br> 1-为什么先拿到写锁又降级成读锁，<br>2- 真正做DDL的时候是读锁，那这中间过程中，查询到的数据和真正的数据结构就不一致了啊<br>3. 为什么要先升级成写锁再释放","like_count":13,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431575,"discussion_content":"1. 先要写锁是要确保能改，降级是为了让后面的查询能过\n2. 这个过程比较复杂（不是你想的那样😄），后面文章会说\n3. 最后还得修改一下表结构","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544027026,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43966,"user_name":"杜嘉嘉","can_delete":false,"product_type":"c1","uid":1306430,"ip_address":"","ucode":"C23DE27E7886BD","user_header":"https://static001.geekbang.org/account/avatar/00/13/ef/3e/9c3a8abc.jpg","comment_is_top":false,"comment_ctime":1543342050,"is_pvip":false,"replies":[{"id":"15755","content":"不会，readonly对super权限用户无效，执行binlog的线程是super权限","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543402187,"ip_address":"","comment_id":43966,"utype":1}],"discussion_count":1,"race_medal":0,"score":"57377916898","product_id":100020801,"comment_content":"老师，在从库执行readonly 会不会影响主从复制，也就是说会不会导致从节点无法写入master提供的数据了","like_count":13,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430574,"discussion_content":"不会，readonly对super权限用户无效，执行binlog的线程是super权限","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543402187,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72525,"user_name":"季伟滨","can_delete":false,"product_type":"c1","uid":1445103,"ip_address":"","ucode":"CBF84145CAA986","user_header":"https://static001.geekbang.org/account/avatar/00/16/0c/ef/4c8850de.jpg","comment_is_top":false,"comment_ctime":1551664411,"is_pvip":false,"replies":[{"id":"27039","content":"5.6以后支持online DDL，不会堵塞增删改查了<br><br>mdl锁是没办法的，不过mdl锁对正常使用没影响，因为增删改查申请对是mdl读锁，而ddl执行对大部分时间，占着的也是mdl读锁","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1552092338,"ip_address":"","comment_id":72525,"utype":1}],"discussion_count":3,"race_medal":0,"score":"48796304667","product_id":100020801,"comment_content":"老师好，对于大表的ddl，是不是会一直阻塞着增删改查呢，对于大表的ddl，一般如何解决mdl锁阻塞的问题？","like_count":11,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441632,"discussion_content":"5.6以后支持online DDL，不会堵塞增删改查了\n\nmdl锁是没办法的，不过mdl锁对正常使用没影响，因为增删改查申请对是mdl读锁，而ddl执行对大部分时间，占着的也是mdl读锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552092338,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394806,"discussion_content":"影响比较大的是这种场景：  在大事务执行期间， 提交了一个ddl，这个时候针对这个表的所有的CRUD都将阻塞，意思就是此表不可用了。 只能等待大事务先执行完。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632062816,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2133834,"avatar":"https://static001.geekbang.org/account/avatar/00/20/8f/4a/a340734f.jpg","nickname":"平凡","note":"","ucode":"5F7D49235A9598","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":409667,"discussion_content":"还有就是大表的慢查询，也会阻塞ddl","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635487726,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":394806,"ip_address":""},"score":409667,"extra":""}]}]},{"had_liked":false,"id":43985,"user_name":"kent","can_delete":false,"product_type":"c1","uid":1054355,"ip_address":"","ucode":"30ECFD9DEE2117","user_header":"https://static001.geekbang.org/account/avatar/00/10/16/93/14e7b47e.jpg","comment_is_top":false,"comment_ctime":1543362016,"is_pvip":false,"replies":[{"id":"15757","content":"Gh-ost现在用的比较多。","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543402347,"ip_address":"","comment_id":43985,"utype":1}],"discussion_count":1,"race_medal":0,"score":"48788002272","product_id":100020801,"comment_content":"那要是大表加字段 咋处理稳妥 ","like_count":11,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430580,"discussion_content":"Gh-ost现在用的比较多。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543402347,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43492,"user_name":"Jeremy","can_delete":false,"product_type":"c1","uid":1171998,"ip_address":"","ucode":"F342D2EC14773C","user_header":"https://static001.geekbang.org/account/avatar/00/11/e2/1e/ea3a0366.jpg","comment_is_top":false,"comment_ctime":1543233542,"is_pvip":true,"discussion_count":5,"race_medal":0,"score":"48787873798","product_id":100020801,"comment_content":"对于思考题，索引ca里面，当a相同时，为什么b一定按照升序排列？","like_count":11,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138264,"discussion_content":"这是B+的规则。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1579231647,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2037576,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/17/48/6ab7ef29.jpg","nickname":"养猪场老板","note":"","ucode":"7974373F55AF87","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311796,"discussion_content":"B+树的叶子节点指向一个InnoDB数据页，数据页里边会有多行数据，多行数据是以有序数组的形式保存的。这是B+树叶子节点的特性。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602491341,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1971269,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/oltLEqTrmHm2aJP99BK6tHu5h7hp4aj08wR5Wt6H31iadFduDAVvjYKmhQ2nvGbLV3lkVdiat2GRasgWXoJeTibUg/132","nickname":"杨","note":"","ucode":"7EFEFE285975C6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":240093,"discussion_content":"如果聚族索引是ba也就是先按照b再a排序，是不是去掉的就是cb呢  因为cb和c的索引是一样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587339450,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1406808,"avatar":"https://static001.geekbang.org/account/avatar/00/15/77/58/8824cd8f.jpg","nickname":"伟伟动听","note":"","ucode":"60596BE972AC63","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":160941,"discussion_content":"主要因为ab是主键吧，按主键排列","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580832059,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1808208,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/97/50/8435c501.jpg","nickname":"趙鑄","note":"","ucode":"D06F54DC46774C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":152200,"discussion_content":"因为ab有索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579951796,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49105,"user_name":"Larwas","can_delete":false,"product_type":"c1","uid":1105436,"ip_address":"","ucode":"AF6BAA7769311A","user_header":"https://static001.geekbang.org/account/avatar/00/10/de/1c/60ff644d.jpg","comment_is_top":false,"comment_ctime":1544605282,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"44494278242","product_id":100020801,"comment_content":"上一节的问题，ca 索引的数据和 c 索引一样，是因为c索引查到数据时，回表后返回的数据在主键索引已经排好，所以不需要 ca 索引做排序。做个记录，一开始没理解，刚刚想了一下理解了。","like_count":10,"discussions":[{"author":{"id":1670731,"avatar":"https://static001.geekbang.org/account/avatar/00/19/7e/4b/eafd4ff0.jpg","nickname":"看这个灯泡，真亮！","note":"","ucode":"97C644859B138F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":22099,"discussion_content":"按你这个说法, 如果有ca这个索引, 就不需要回表, 你这个理由是错的.","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1569577462,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1464006,"avatar":"https://static001.geekbang.org/account/avatar/00/16/56/c6/0b449bc6.jpg","nickname":"斐波那契","note":"","ucode":"85E2EBC01392B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42095,"discussion_content":"我一开始也是你这个想法 但是举个例子就发现不对了 你的误解就是在回表这边 因为根据c索引找到的是a b主键索引 回表后是根据找到的a b值来找这条行数据 跟你找出来的a b值是否有序无关 有可能你根据c找到的主键是(2 4)(5 4)(4 3) 然后回表找出相应的行数据 然后根据a排序 你可能还有一个误解就是老师说的是建c索引跟建ca索引是一样 并没有说建了c索引就不需要排序了 你只要能回答出一个问题就能解决：因为c不是主键就有可能出现相同的数据 那在建c索引的时候遇到相同值该怎么排序？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1572584980,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43484,"user_name":"金龟","can_delete":false,"product_type":"c1","uid":1228500,"ip_address":"","ucode":"1C7D35C8AE8D9D","user_header":"https://static001.geekbang.org/account/avatar/00/12/be/d4/ff1c1319.jpg","comment_is_top":false,"comment_ctime":1543232681,"is_pvip":false,"replies":[{"id":"15541","content":"也不是，还是行锁，只是“这个表的所有行","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543239788,"ip_address":"","comment_id":43484,"utype":1}],"discussion_count":4,"race_medal":0,"score":"44492905641","product_id":100020801,"comment_content":"update table set xx;这种更新全表的锁是mdl吗?感觉应该是第一种全表锁","like_count":10,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430397,"discussion_content":"也不是，还是行锁，只是“这个表的所有行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543239788,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2351720,"avatar":"https://static001.geekbang.org/account/avatar/00/23/e2/68/ce547a12.jpg","nickname":"zjm1314","note":"","ucode":"63B0EAB7045054","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340407,"discussion_content":"意向锁就是这个元数据锁么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609995518,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138272,"discussion_content":"但是还是会获取MDL读锁。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579232013,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2020865,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/d6/01/eaa50203.jpg","nickname":"zft","note":"","ucode":"74DEC5FBA610B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278937,"discussion_content":"是的, 增删改会默认加MDL读锁","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1591261328,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":138272,"ip_address":""},"score":278937,"extra":""}]}]},{"had_liked":false,"id":45011,"user_name":"七七","can_delete":false,"product_type":"c1","uid":1301937,"ip_address":"","ucode":"277BACE2330C54","user_header":"https://static001.geekbang.org/account/avatar/00/13/dd/b1/7323beb9.jpg","comment_is_top":false,"comment_ctime":1543539198,"is_pvip":true,"replies":[{"id":"16038","content":"意向锁是表级锁，是实现在Innodb 的。<br><br>有了mdl表锁，你可以暂时先不管意向锁了😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543543645,"ip_address":"","comment_id":45011,"utype":1}],"discussion_count":3,"race_medal":0,"score":"40198244862","product_id":100020801,"comment_content":"老师，意向锁是表锁吗？与MDL锁主要区别是什么呢？","like_count":9,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430894,"discussion_content":"意向锁是表级锁，是实现在Innodb 的。\n\n有了mdl表锁，你可以暂时先不管意向锁了😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543543645,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1254801,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","nickname":"猴哥一一 cium","note":"","ucode":"38EC64F8D1A0B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312169,"discussion_content":"为啥有了MDL锁,就可以不管意向锁了呀?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602600442,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2351720,"avatar":"https://static001.geekbang.org/account/avatar/00/23/e2/68/ce547a12.jpg","nickname":"zjm1314","note":"","ucode":"63B0EAB7045054","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1254801,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","nickname":"猴哥一一 cium","note":"","ucode":"38EC64F8D1A0B4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340408,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609995574,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":312169,"ip_address":""},"score":340408,"extra":""}]}]},{"had_liked":false,"id":43700,"user_name":"forina","can_delete":false,"product_type":"c1","uid":1306400,"ip_address":"","ucode":"7151B0289E5CFE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKJDeCB8VNAIh7m5btiaBD3gkJYjDUJ8eFrAoyhR1FWUS0dB1YC9uszFGpARThMNRX3F4D7DaOwXYA/132","comment_is_top":false,"comment_ctime":1543282039,"is_pvip":false,"replies":[{"id":"15609","content":"在《”order by 是怎么工作的”》 这篇会提到这个问题哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543286519,"ip_address":"","comment_id":43700,"utype":1}],"discussion_count":4,"race_medal":0,"score":"40197987703","product_id":100020801,"comment_content":"老师 我想咨询一个问题 ，我有一个大表t 几百万条数据，a是主键(int类型)，另外有一个索引（b,c,d），查询语句 select a from t where b=‘ZC1093’ and c=‘2018-07-31’ and d=‘AG011’ limit 1000,10 执行过程使用了索引只用了0.014s,查询语句 select a from t where b=‘ZC1093’ and c=‘2018-07-31’ and d=‘AG011’  order by a limit 1000,10 执行过程也用了(b,c,d)这个索引 却用了34s 完成，两条查询语句结果也都是一样的 我很疑惑索引 (b,c,d)和(b,c,d,a)不应该是等效的吗 为什么一个快一个慢？","like_count":9,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430462,"discussion_content":"在《”order by 是怎么工作的”》 这篇会提到这个问题哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543286519,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1228560,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/10/b7974690.jpg","nickname":"BD","note":"","ucode":"A95CF8C3EDC228","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289762,"discussion_content":"因为order by a用不到b c d索引，最后查出的a的值并不是有序的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594204302,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2020865,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/d6/01/eaa50203.jpg","nickname":"zft","note":"","ucode":"74DEC5FBA610B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278936,"discussion_content":"可以通过explain看下，Extra那一栏应该会出现Using filesort","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591261243,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1242455,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f5/57/ce10fb1b.jpg","nickname":"天天向上","note":"","ucode":"0CCCA6F4DCC480","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":187124,"discussion_content":"因为  order by a 用到了文件排序，所以会很慢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582726254,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105146,"user_name":"鹿先生","can_delete":false,"product_type":"c1","uid":1147495,"ip_address":"","ucode":"496222D648BB98","user_header":"https://static001.geekbang.org/account/avatar/00/11/82/67/cc0e5b46.jpg","comment_is_top":false,"comment_ctime":1560930102,"is_pvip":false,"replies":[{"id":"38145","content":"如果是这个原因 是不是意味着 假设我的主键索引是(b,a) 那索引c是不是就是和索引cb等价？<br><br>对的😆","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1560998084,"ip_address":"","comment_id":105146,"utype":1}],"discussion_count":3,"race_medal":0,"score":"35920668470","product_id":100020801,"comment_content":"老师 我觉得大家包括我 对于索引c和索引ca是一样的这个结论的困惑主要在于：<br>(1)我们都可以理解c和ca最终都代表cab<br>(2)很明显ca索引表示的cab里 a是二级有序的。关键是c索引表示的cab里 为什么a是二级有序的而不是乱序的？<br>是因为a b都是主键，然后mysql自动会对非主键索引下叶子节点的主键进行排序吗？如果是这个原因 是不是意味着 假设我的主键索引是(b,a) 那索引c是不是就是和索引cb等价？","like_count":8,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454575,"discussion_content":"如果是这个原因 是不是意味着 假设我的主键索引是(b,a) 那索引c是不是就是和索引cb等价？\n\n对的😆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560998084,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2797976,"avatar":"","nickname":"Geek_323a60","note":"","ucode":"CDC276EC255411","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":583646,"discussion_content":"您好老师，对于索引 c ，c 有序、a 也是有序的，我想问一下 b 也是有序的吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660268941,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":454575,"ip_address":"四川"},"score":583646,"extra":""}]},{"author":{"id":1652085,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKORTofsU89GYKtywquzKuEiabvZnEOonfMYKuCPlo8GDlXqZuJdBicu0XtlaeodH4BnmHV1kldSAwQ/132","nickname":"未来怎样","note":"","ucode":"4E54EB62595B27","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":39323,"discussion_content":"原来是这样，二级索引中的主键会进行排序。这么看来上一节课后作业回答对的 没几个人。。。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1571912328,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65915,"user_name":"Jefitar","can_delete":false,"product_type":"c1","uid":1370659,"ip_address":"","ucode":"D7ED9F32ADA5B1","user_header":"https://static001.geekbang.org/account/avatar/00/14/ea/23/508f71e3.jpg","comment_is_top":false,"comment_ctime":1549770666,"is_pvip":false,"replies":[{"id":"23403","content":"👍","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1549873673,"ip_address":"","comment_id":65915,"utype":1}],"discussion_count":3,"race_medal":0,"score":"31614541738","product_id":100020801,"comment_content":"总结。<br><br>做全库逻辑备份时，需要使用全局锁，方法有二：<br>1. 有的表使用了不支持事务的引擎：使用FTWRL<br>2. 所有的表都使用事务引擎的库：使用 mysqldump 带 -single-transaction 参数<br><br>一个库被全局锁上以后，你要对里面任何一个表做加字段操作（包括DML、DDL），都是会被锁住的。<br><br>元数据锁：<br>1. 元数据锁 MDL 不需要显示地使用；<br>2. MDL 读锁之间不互斥，读写锁、写锁之间互斥；<br>3. 事务中的 MDL 锁在事务提交后才释放。<br><br>安全地给小表加字段：<br>1. 非热点表：解决长事务；<br>2. 热点表：在 alter table 语句里面设定等待时间。","like_count":7,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438641,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549873673,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2936038,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/cc/e6/34560db7.jpg","nickname":"戳你小肥脸","note":"","ucode":"1DC3F57D1FC9A6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554919,"discussion_content":"都被锁住，应该改为“都被阻塞”吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646661064,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1188023,"avatar":"https://static001.geekbang.org/account/avatar/00/12/20/b7/bdb3bcf0.jpg","nickname":"Eternal","note":"","ucode":"EA6FE7CC98F740","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385682,"discussion_content":"加字段操作是DDL，DML是操作数据本身","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627204365,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43558,"user_name":"keepmoving","can_delete":false,"product_type":"c1","uid":1298237,"ip_address":"","ucode":"931C61D79B7C1F","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/KqZeIjNOVQJnsIFkDBWl56q3vnzqrWWVdDmYb153UClicwTPhYxzIZGDiboZiapYGFvUCvYWFj6o5KFkgk4gao7oQ/132","comment_is_top":false,"comment_ctime":1543240008,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"31608011080","product_id":100020801,"comment_content":"请教，我们在一个mysql 5.7版本的分区大表上增加了一个字段，是在线更新表结构，原本以为会很快，结果足足等了4个多小时。按您的说法系统能正常的做交易。之前上网查原因，一种说法是mysql的表结构加字段，通过创建临时表，copy数据到临时表，再用有新增字段的临时表替换原表的方式来处理。<br>1、请问以上说法是对的么？<br>2、如果像您说的表数据更新和查询都会加mdl锁，那就应该不能处理新增交易啊？<br>3、现在mysql新增字段不支持设置超时时间吧？<br><br>谢谢🙏<br>","like_count":7,"discussions":[{"author":{"id":1365206,"avatar":"https://static001.geekbang.org/account/avatar/00/14/d4/d6/1d4543ac.jpg","nickname":"云海","note":"","ucode":"0C6CA0BE58EA21","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":400726,"discussion_content":"同求，有好的方式了吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633399500,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":10136,"discussion_content":"3.  不支持。那个是alisql的特性。你可以用pt工具来实现增加字段超时时间功能","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568266708,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43493,"user_name":"Aurora","can_delete":false,"product_type":"c1","uid":1302157,"ip_address":"","ucode":"84CB75BC2D7680","user_header":"https://static001.geekbang.org/account/avatar/00/13/de/8d/99536c5b.jpg","comment_is_top":false,"comment_ctime":1543233557,"is_pvip":false,"replies":[{"id":"15690","content":"参看07篇哈。 你的答案是最接近的，你看下我微博，然后联系极客时间微博小编。","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543339442,"ip_address":"","comment_id":43493,"utype":1}],"discussion_count":2,"race_medal":0,"score":"31608004629","product_id":100020801,"comment_content":"针对我上面的发言<br>&#39;&#39;&#39;<br>如果mysqldump 备份的是整个schema，某个小表t1只是该schema上其中有一张表<br>情况1：<br>master上对小表t1的DDL传输到slave去应用的时刻，mysqldump已经备份完了t1表的数据，此时slave 同步正常，不会有问题。<br><br>情况2：<br>master上对小表t1的DDL传输到slave去应用的时刻，mysqldump正在备份t1表的数据,此时会发生MDL 锁，从库上t1表的所有操作都会Hang 住。<br><br>情况3：<br>master 上对小表t1的DDL传输到slave去应用的时刻，mysqldump 还没对t1表进行备份，该DDL会在slave的t1表应用成功，但是当导出到t1表的时候会报“ERROR 1412 (HY000): Table definition has changed, please retry transaction” 错误，导致导出失败！<br>&#39;&#39;&#39;<br><br>情况1的时候，即便是mysqldump导出完了t1，再应用DDL，从库该DDL也会卡住，现象与情况3相同。","like_count":7,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430402,"discussion_content":"参看07篇哈。 你的答案是最接近的，你看下我微博，然后联系极客时间微博小编。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543339442,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2548121,"avatar":"https://static001.geekbang.org/account/avatar/00/26/e1/99/827921d9.jpg","nickname":"Z","note":"","ucode":"29C7423250EF90","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367029,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618238166,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43380,"user_name":"winner_0715","can_delete":false,"product_type":"c1","uid":1012843,"ip_address":"","ucode":"A033A30539181F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/74/6b/a98162a1.jpg","comment_is_top":false,"comment_ctime":1543221172,"is_pvip":true,"replies":[{"id":"15505","content":"这个看业务规定吧，我比较建议全小写和下划线","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543228453,"ip_address":"","comment_id":43380,"utype":1}],"discussion_count":3,"race_medal":0,"score":"31607992244","product_id":100020801,"comment_content":"借贵宝地问个问题，哈哈，，Mysql表字段名是设计成驼峰的形式还是下划线的形式呢，两者有啥区别？性能？有的公司设计规范中规定设计成驼峰的形式，第一次遇到","like_count":7,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430368,"discussion_content":"这个看业务规定吧，我比较建议全小写和下划线","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543228453,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1195279,"avatar":"https://static001.geekbang.org/account/avatar/00/12/3d/0f/a553837d.jpg","nickname":"Allen_Go","note":"","ucode":"B59FC8C3328689","race_medal":2,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573812,"discussion_content":"之前听说是这样子的：以前Oracle的数据库不会区分驼峰，所以为了可读性设计成下划线，后来为了方便移植或习惯原因，mysql也沿用这种写法（道听途说，大家看看就好）。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653659553,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1188023,"avatar":"https://static001.geekbang.org/account/avatar/00/12/20/b7/bdb3bcf0.jpg","nickname":"Eternal","note":"","ucode":"EA6FE7CC98F740","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385679,"discussion_content":"第一次遇到，大概率不是主流用法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627203822,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43219,"user_name":"辣酱","can_delete":false,"product_type":"c1","uid":1156147,"ip_address":"","ucode":"3B009B02CBFF9F","user_header":"https://static001.geekbang.org/account/avatar/00/11/a4/33/fdc331c3.jpg","comment_is_top":false,"comment_ctime":1543197308,"is_pvip":false,"replies":[{"id":"15461","content":"不是同一行就可以呀","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543198501,"ip_address":"","comment_id":43219,"utype":1}],"discussion_count":5,"race_medal":0,"score":"31607968380","product_id":100020801,"comment_content":"老师MDL那里<br>读锁之间不互斥，因此你可以有多个线程同时对一张表增删改查。<br><br><br>增删改属于写了吧，也可以并发？<br>","like_count":7,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430328,"discussion_content":"不是同一行就可以呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543198501,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1188023,"avatar":"https://static001.geekbang.org/account/avatar/00/12/20/b7/bdb3bcf0.jpg","nickname":"Eternal","note":"","ucode":"EA6FE7CC98F740","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385681,"discussion_content":"MDL锁的资源是元数据，不是数据；\n当在做表结构变更的时候（MDL写锁），肯定不能读取数据；当时MDL是读锁的时候，你可以对表的数据随便操作，操作的时候如果是同一行，那么现在就要行锁来解决了，我感觉这是两个不同的范畴，不知道理解的对不对","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1627204061,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1049208,"avatar":"https://static001.geekbang.org/account/avatar/00/10/02/78/23c56bce.jpg","nickname":"james","note":"","ucode":"5701899403917C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":258728,"discussion_content":"crud都是mdl 读锁  所有增删改查不互斥","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588725631,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1900382,"avatar":"","nickname":"Geek_b924b4","note":"","ucode":"B071335B28CE04","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":198216,"discussion_content":"改变表的结构属于写？其他增删改查实际的数据属于读？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583489019,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1900382,"avatar":"","nickname":"Geek_b924b4","note":"","ucode":"B071335B28CE04","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":239599,"discussion_content":"只是对于MDL来说是这样的","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1587304314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":198216,"ip_address":""},"score":239599,"extra":""}]}]},{"had_liked":false,"id":66432,"user_name":"CHeeto","can_delete":false,"product_type":"c1","uid":1367716,"ip_address":"","ucode":"F092724EF4A584","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/4lwhZGZQVEhic3bVrib4aic7luEovonbQyfbSl59TnaePwInicn4UzKvgoQJf7AMJuls0aFN2icicYkS6UVoK0UUImibg/132","comment_is_top":false,"comment_ctime":1549938565,"is_pvip":false,"discussion_count":7,"race_medal":0,"score":"27319742341","product_id":100020801,"comment_content":"老师，我用5.7.20以及5.6.38都做了实验，都是sessionD先要提交了之后sessionC才能够执行，是什么原因呢？<br>","like_count":6,"discussions":[{"author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":10210,"discussion_content":"刚才又试了下，5.5版本的表现是老师说的那种，5.6以及以上就是刚才你说的那种表现。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1568275465,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":10155,"discussion_content":"我懂了，因为用的是5.6或者5.7.  支持online ddl了","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1568267844,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138267,"discussion_content":"为啥你们都不用8.0，还非得在5.6左右的版本徘徊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579231782,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42530,"discussion_content":"要多测试几次的，我的版本是 5.7.18 两种情况都出现了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572689571,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":10151,"discussion_content":"其实应该是这样，a, b 提交之后，锁先被D抢走了，然后D阻塞了C，D执行commit后，C才可以执行。不过这个和老师说的不一样了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568267636,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2133834,"avatar":"https://static001.geekbang.org/account/avatar/00/20/8f/4a/a340734f.jpg","nickname":"平凡","note":"","ucode":"5F7D49235A9598","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":409672,"discussion_content":"a, b 提交之后，不是锁先被D抢走了，而是C在执行中由写锁降级为读锁，然后D执行，再之后C真正执行完DDl又升级为写锁时，则被D阻塞了。C执行ddl过程中不同时候mdl锁不一样。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1635488486,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":10151,"ip_address":""},"score":409672,"extra":""}]},{"author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":10145,"discussion_content":"确实，我的也是这样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568267090,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49561,"user_name":"D不发音","can_delete":false,"product_type":"c1","uid":1326125,"ip_address":"","ucode":"B1020A70901679","user_header":"https://static001.geekbang.org/account/avatar/00/14/3c/2d/3d31b684.jpg","comment_is_top":false,"comment_ctime":1544714630,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"27314518406","product_id":100020801,"comment_content":"我查阅了下MySQL的doc，说道<br>To acquire table locks within the current session, use the LOCK TABLES statement, which acquires metadata locks<br>来源：https:&#47;&#47;dev.mysql.com&#47;doc&#47;refman&#47;8.0&#47;en&#47;lock-tables.html#table-lock-acquisition<br>就是LOCK TABLES拿到的也是mdl，而不是表锁？<br>然后我看到mdl的doc，说道<br>The exclusive lock request for x by Client 3 has higher priority than the write lock request by Client 2, so Client 3 acquires its lock on x, then also on x_new and x_old, performs the renaming, and releases its locks.<br>来源：https:&#47;&#47;dev.mysql.com&#47;doc&#47;refman&#47;8.0&#47;en&#47;metadata-locking.html<br>意思就是除了读锁和写锁还存在exclusive lock？然后这个锁比写锁的优先高。<br>感觉极客时间评论应该支持markdown，现在的感觉就是给移动端做的，不关心PC端富文本编辑的需求。<br>","like_count":6,"discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":239261,"discussion_content":"exclusive lock就是写锁啊，than the write lock后边有个定语从句呢","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1587288979,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":60646,"user_name":"miu","can_delete":false,"product_type":"c1","uid":1368901,"ip_address":"","ucode":"3D73FF3C09231A","user_header":"","comment_is_top":false,"comment_ctime":1547522702,"is_pvip":false,"replies":[{"id":"21620","content":"分析得很好👍🏿<br><br>问题部分，官方MySQL 没有类似的方案，就是靠外部判断，看见锁了kill掉😓","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547526541,"ip_address":"","comment_id":60646,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23022359182","product_id":100020801,"comment_content":"偶然的机会很幸运读到老师您的习作，帮助特别大，感谢。<br>对于思考题，我的理解如下，请老师指正：<br>备库用不同的备份命令会有不同的情况：<br>如果备库采用的备份选项为 --single-transaction  --dump-slave=(1or2) 时<br>会在备份文件中记录主库备份时点的binlog偏移量，并且关停备库的sql_running进程，备份完成后再开启。<br>此时主库对表的DDL操作传输到备库的relay日志中，但由于备份的sql_running进行处于停止状态，所以并不会运用数据库中，对备库的备份无影响，所有的DDL操作都等待备份完成后再进行。<br><br>如果备份采用的备份选项是 --single-transaction --master-data=(1or2)时<br>会在备份文件中记录备库备份时点的binlog偏移量，这个时候需要分三种情况进行讨论：<br>1.主库中对表的DDL操作传输到备库时，备库的备份已完成对该表的备份<br>此时对备份数据没有影响<br>2.主库中对表的DDL操作传输到备库时，备库的备份还未对该表进行备份<br>那么当备份到该表时，备份会报错，例如表定义已改变或者表不存在等<br>3.主库中对表的DDL操作传输到备库时，备库的备份正在对该表进行备份<br>此刻DDL语句会被阻塞，处于等待获取MDL写锁的状态。<br><br>另外对表的DDL操作，在开始和结束时都会获取一次MDL的写锁，结束时获取MDL的写锁可能会被忽略；除了alter table 语句里面设定等待时间，官方的MySQL有没有好的办法解决或者缓解此问题呢","like_count":5,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436569,"discussion_content":"分析得很好👍🏿\n\n问题部分，官方MySQL 没有类似的方案，就是靠外部判断，看见锁了kill掉😓","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547526541,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44627,"user_name":"Nick","can_delete":false,"product_type":"c1","uid":1303145,"ip_address":"","ucode":"D453E42B9A8429","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIKa0PdjFnEpvGFBcED2P28ugPmwwRoCbeUfulpGEye8964F4nwChQyVfgVUia74TyDISvXTYJfQpA/132","comment_is_top":false,"comment_ctime":1543466608,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"23018303088","product_id":100020801,"comment_content":"FTWRL是怎么实现全局读锁的？<br>在5.7.23环境下做了测试<br>场景一<br>第一步执行事物A: begin;update t set name＝&#39;x&#39; where id＝1; 不提交<br>第二步执行sql B: update t set name＝&#39;x&#39; where id＝1;被阻塞，锁等待<br>第三步执行 sql C : flush tables with read lock; 被阻塞，状态为waiting for global read lock<br><br>场景二<br>第一步执行事物A: begin;update t set name＝&#39;x&#39; where id＝1; 不提交<br>第二步执行sql C : flush tables with read lock; <br>顺利执行完。<br><br>场景二说明FTWRL不被行x锁和 共享mdl锁阻塞，那场景一中，什么阻塞了FTWRL呢？<br>FTWRL包含三个动作，<br>1 上全局读锁 ;<br>2 关闭表 ;<br>3上全局commit锁;<br>请林老师解惑","like_count":5,"discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":239593,"discussion_content":"三条sql是在三个session里吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587304147,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1810051,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK0uyg1IicbEhLwsgM2A2ROoyVdWdmUqZfQfs6G67w9m3hdRNBMOQJatQoACj3qNGgj2KVIgricaYiaQ/132","nickname":"木得感情的编码机器","note":"","ucode":"9C6CD47ADCB8E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":167378,"discussion_content":"场景一为什么会触发全局读锁？只是where id =1不应该只有行锁和MDL吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581483893,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43862,"user_name":"文阳","can_delete":false,"product_type":"c1","uid":1029788,"ip_address":"","ucode":"6F4B3234461D66","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b6/9c/66cfdab1.jpg","comment_is_top":false,"comment_ctime":1543312570,"is_pvip":false,"replies":[{"id":"15668","content":"一般比较简单的做法是把binlog 路径配置到新磁盘","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543318613,"ip_address":"","comment_id":43862,"utype":1}],"discussion_count":2,"race_medal":0,"score":"23018149050","product_id":100020801,"comment_content":"老师好：<br>    我有个问题。比如某台服务器空间硬盘为1T，在上面部署一台单机的mysql。随着时间的增长，mysql空间不够了。然后再给这台机器挂一个1T的磁盘。请问mysql怎么使用这个1T的磁盘？我对服务器这块比较小白，是不是需要将这1T的硬盘变成服务器的系统盘才能使用？","like_count":5,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430528,"discussion_content":"一般比较简单的做法是把binlog 路径配置到新磁盘","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543318613,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1310187,"avatar":"","nickname":"三丰","note":"","ucode":"CA69A069D3061D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":29778,"discussion_content":"用逻辑卷","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1570783457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43793,"user_name":"Tony Du","can_delete":false,"product_type":"c1","uid":1001661,"ip_address":"","ucode":"F5FCC400E615EA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/bd/6c7d4230.jpg","comment_is_top":false,"comment_ctime":1543295226,"is_pvip":false,"replies":[{"id":"15634","content":"你这个例子里面，sessionD 被C堵住后是不能输入命令的，之后是什么动作之后，sessionD才能输入commit语句呢<br><br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543297436,"ip_address":"","comment_id":43793,"utype":1}],"discussion_count":2,"race_medal":0,"score":"23018131706","product_id":100020801,"comment_content":"基于文中的例子MDL（metadata lock)，自己做了一个实验（稍微有一些小改动在session D上），<br>session A:  begin; select * from t limit 1;   最先启动sessionA<br>session B:  begin; select * from t limit 1;   紧接着启动sessionB<br>session C:  alter table t add f int;            然后再是启动sessionC<br>session D:  begin; select * from t limit 1;   最后是启动sessionD<br>如文中例子，session A和B正常启动，然后session C被block，之后session D也被block。当把 session A 和 session B 都commit掉后，发现session C依然是block的（被 session D阻塞），只有当把 session D 也commit掉后，session C才执行下去。同样的实验，重复了三遍，结果也是一样。<br>从现象上看，session D会先拿到MDL读锁，当session D commit掉后，然后再是session C获得MDL写锁。请问老师，这里对于MDL锁的获取顺序（也就是说 是session C先获取MDL写锁还是session D先获取MDL读锁）有什么原则？是随机的还是有什么讲究？<br><br>另外，在一开始的获取MDL锁的阶段，session A（MDL读锁，正常执行）-&gt; session B (MDL读锁，正常执行) -&gt; session C (MDL写锁，被block) -&gt; session D (MDL读锁，被MDL写锁 block) 。是不是说加MDL锁是看时间先后顺序的，一旦出现过需要获取MDL写锁（即使被block），后续再需要获取MDL读锁，则发现之前已经有获取MDL写锁（即使被block），需要获取读锁的session都会被block。感觉上像进入一个锁的”队列“，根据时间先后顺序。请问老师，这里可以更细节和深入的说明下吗？","like_count":5,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430498,"discussion_content":"你这个例子里面，sessionD 被C堵住后是不能输入命令的，之后是什么动作之后，sessionD才能输入commit语句呢\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543297436,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1901078,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/02/16/dd5cde99.jpg","nickname":"🤔 🤔 🤔","note":"","ucode":"F1A4B6270675AD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":266512,"discussion_content":"A B 会话都commit后 ，D会话直接出结果，然后就可以commit了，commit后，C会话执行成功","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589525015,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43615,"user_name":"发条橙子 。","can_delete":false,"product_type":"c1","uid":1259218,"ip_address":"","ucode":"ED076F4534FFED","user_header":"https://static001.geekbang.org/account/avatar/00/13/36/d2/c7357723.jpg","comment_is_top":false,"comment_ctime":1543246531,"is_pvip":false,"replies":[{"id":"15624","content":"是没有“没加事务”的概念的，你不显式地启动事务，MySQL也会按照“单语句事务”处理的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543288477,"ip_address":"","comment_id":43615,"utype":1}],"discussion_count":4,"race_medal":0,"score":"23018083011","product_id":100020801,"comment_content":"老师 ，MDL只有在事务中才会被加上么  ， 如果没有开启事务直接进行增删改 MDL不会默认加上么。  比如我没有加事务， 去执行一个更新语句， 首先会先去找这个数据，然后在进行更新  。 整个过程被拆成两步进行，这个期间没有锁的么","like_count":5,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430434,"discussion_content":"是没有“没加事务”的概念的，你不显式地启动事务，MySQL也会按照“单语句事务”处理的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543288477,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":10158,"discussion_content":"任何地方 都有事务。这个事务隔离的时候有讲","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1568268100,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2351720,"avatar":"https://static001.geekbang.org/account/avatar/00/23/e2/68/ce547a12.jpg","nickname":"zjm1314","note":"","ucode":"63B0EAB7045054","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340409,"discussion_content":"我觉得可以认为一个crud的语句就是一个事务，只不过自动提交了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609995756,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138275,"discussion_content":"没有begin的话，crud在执行完成后，mdl就自动释放了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579232281,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43306,"user_name":"yeyuliunian","can_delete":false,"product_type":"c1","uid":1002074,"ip_address":"","ucode":"ACBCD834BDE602","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4a/5a/c9e70aec.jpg","comment_is_top":false,"comment_ctime":1543210023,"is_pvip":true,"replies":[{"id":"15496","content":"属于DDL，变更表结构，过程做要加MDL写锁","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543216279,"ip_address":"","comment_id":43306,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23018046503","product_id":100020801,"comment_content":"添加二级索引会加什么锁","like_count":5,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430353,"discussion_content":"属于DDL，变更表结构，过程做要加MDL写锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543216279,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43257,"user_name":"didiren","can_delete":false,"product_type":"c1","uid":1305376,"ip_address":"","ucode":"8341F02F2ABA60","user_header":"https://static001.geekbang.org/account/avatar/00/13/eb/20/a02c4f61.jpg","comment_is_top":false,"comment_ctime":1543201304,"is_pvip":false,"replies":[{"id":"15462","content":"索引c的内部结构就是(c,a,b)","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543201595,"ip_address":"","comment_id":43257,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23018037784","product_id":100020801,"comment_content":"你好，对于上周的答案我意见不同，c索引按照c排序，回表时的a并不是排序的，即使使用了mmr特性，也是主动对a做了排序才能将nest loop转成merge，只有ca索引可以避免对a排序的成本，不知我理解是否正确，请指教","like_count":5,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430340,"discussion_content":"索引c的内部结构就是(c,a,b)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543201595,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70621,"user_name":"浪荡居士","can_delete":false,"product_type":"c1","uid":1055456,"ip_address":"","ucode":"376D4CBC0CB2BD","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/e0/06e54287.jpg","comment_is_top":false,"comment_ctime":1551147949,"is_pvip":false,"replies":[{"id":"25208","content":"加普通字段不用的重建全表，加主键要","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551154800,"ip_address":"","comment_id":70621,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18731017133","product_id":100020801,"comment_content":"请教老师…加减字段需要扫描全表是为啥？是不是需要更改底层存储～那这样的话不是等于把数据copy了一遍……","like_count":4,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440733,"discussion_content":"加普通字段不用的重建全表，加主键要","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551154800,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1188023,"avatar":"https://static001.geekbang.org/account/avatar/00/12/20/b7/bdb3bcf0.jpg","nickname":"Eternal","note":"","ucode":"EA6FE7CC98F740","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":397019,"discussion_content":"表是按照主键索引组织表结构，主键变了，整个表重新排一次","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632541494,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":157007,"user_name":"James","can_delete":false,"product_type":"c1","uid":1134861,"ip_address":"","ucode":"48B0F2A334D1C1","user_header":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","comment_is_top":false,"comment_ctime":1575011868,"is_pvip":false,"replies":[{"id":"60262","content":"对同一行数据进行处更新，会互斥<br><br>但是互斥的不是mdl锁，而是行锁","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1575019761,"ip_address":"","comment_id":157007,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14459913756","product_id":100020801,"comment_content":"请问老师,mdl锁那里<br>读锁之间不互斥，因此你可以有多个线程同时对一张表增删改查;<br>要是对同一行数据进行处理呢,会互斥吗.","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476301,"discussion_content":"对同一行数据进行处更新，会互斥\n\n但是互斥的不是mdl锁，而是行锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575019761,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":67630,"user_name":"木子","can_delete":false,"product_type":"c1","uid":1390997,"ip_address":"","ucode":"66B9C493F25B11","user_header":"https://static001.geekbang.org/account/avatar/00/15/39/95/a72ef023.jpg","comment_is_top":false,"comment_ctime":1550213472,"is_pvip":false,"replies":[{"id":"24008","content":"因为我们定义为（c,b)，其实就是告诉MySQL，要按照c，c有序的规则来组织索引<br><br>如果改成cab，那么cb就不一定保证有序了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1550299247,"ip_address":"","comment_id":67630,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14435115360","product_id":100020801,"comment_content":"老师你好，这个地方有点不太明白：<br>索引 cb 的组织是先按 c 排序，在按 b 排序，同时记录主键<br>–c--|–b--|–主键部分a-- <br>主键部分为什么是a 而不是ab呢？<br>","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439290,"discussion_content":"因为我们定义为（c,b)，其实就是告诉MySQL，要按照c，c有序的规则来组织索引\n\n如果改成cab，那么cb就不一定保证有序了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550299247,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1317358,"avatar":"https://static001.geekbang.org/account/avatar/00/14/19/ee/07bd8a5f.jpg","nickname":"Stone","note":"","ucode":"D1E405AD79D44C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309817,"discussion_content":"&#34;因为我们定义为（c,b)，其实就是告诉MySQL，要按照c，c有序的规则来组织索引&#34;, 看起来应该是&#34;按照c, b有序的规则来......&#34;, 是不是typo啦~老师 :)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601452747,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":67303,"user_name":"方雲","can_delete":false,"product_type":"c1","uid":1193141,"ip_address":"","ucode":"8CB5C54B1F14FE","user_header":"https://static001.geekbang.org/account/avatar/00/12/34/b5/cd324e58.jpg","comment_is_top":false,"comment_ctime":1550126912,"is_pvip":false,"replies":[{"id":"23995","content":"“kill 也未必管用”是说，如果没有超时机制，<br><br>我们只能先kill，再执行ddl，这样才保证不会堵住后面的请求。<br><br>但是先kill完，可能ddl还没执行，又来新的查询，导致前面的kill白做了。<br>是这个意思","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1550297840,"ip_address":"","comment_id":67303,"utype":1}],"discussion_count":3,"race_medal":0,"score":"14435028800","product_id":100020801,"comment_content":"关于修改热点表拖垮整个库的情况坡有感触，踩过很多次坑，今天踩算大概看明白为啥了，感谢老师。<br>同时还有一个小疑问没理解：既然文中说，session C被阻塞之后，后面需要MDL读锁的session也都会被阻塞。那么只要前面的A，B session的长事务执行完了，C就能执行掉（我想应该是按先到先得的顺序获取锁的吧），为什么后面又说“即使把长事务kill掉也未必管用，因为新的请求马上又来了”，为什么新的请求不是排在session C后面呢？这样按理不会拖跨才对啊？就算是一些已经拿到MDL读锁的session在事务中的发送新sql，也应该为了避免死锁不需要再排队了吧。","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439137,"discussion_content":"“kill 也未必管用”是说，如果没有超时机制，\n\n我们只能先kill，再执行ddl，这样才保证不会堵住后面的请求。\n\n但是先kill完，可能ddl还没执行，又来新的查询，导致前面的kill白做了。\n是这个意思","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550297840,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2824858,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/1a/9a/f2f9f5dd.jpg","nickname":"李坤龙","note":"","ucode":"68346B996EE22B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535925,"discussion_content":"把前面两个阻塞的 kill 掉， ddl 就可以执行，后面的是不是就都解了？\n问题是，MySQL 中能有方法找到阻塞源吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638609107,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394811,"discussion_content":"有个问题， kill操作不会申请DML写锁吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632065473,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63582,"user_name":"Tsong","can_delete":false,"product_type":"c1","uid":1363110,"ip_address":"","ucode":"CF0259824E6D53","user_header":"https://static001.geekbang.org/account/avatar/00/14/cc/a6/b0490e97.jpg","comment_is_top":false,"comment_ctime":1548407026,"is_pvip":false,"replies":[{"id":"22494","content":"是的，这个是session级别的；<br>文中介绍的方法是语句级别的 😆","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548413558,"ip_address":"","comment_id":63582,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14433308914","product_id":100020801,"comment_content":"关于 mdl 被锁后的一个wait时间的控制。可以通过参数：lock_wait_timeout 来控制。","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437646,"discussion_content":"是的，这个是session级别的；\n文中介绍的方法是语句级别的 😆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548413558,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62226,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1547988555,"is_pvip":false,"replies":[{"id":"22016","content":"而索引 c 只是按 c 排序。<br><br>不是的，索引c是按照 cab排序的，跟索引ca一样","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548008108,"ip_address":"","comment_id":62226,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14432890443","product_id":100020801,"comment_content":"老师，晚上好！<br><br>您说索引 ca 和索引 c 的数据是一模一样的。是否不太准确？<br>索引 ca 是先按 c 排序，再按 a 排序。而索引 c 只是按 c 排序。<br><br>因为有 order by a，所以删除索引 c 更为合适。<br>是这样么老师，谢谢！","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437144,"discussion_content":"而索引 c 只是按 c 排序。\n\n不是的，索引c是按照 cab排序的，跟索引ca一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548008108,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47245,"user_name":"如余","can_delete":false,"product_type":"c1","uid":1184565,"ip_address":"","ucode":"C2005B97CE9593","user_header":"https://static001.geekbang.org/account/avatar/00/12/13/35/b6328a05.jpg","comment_is_top":false,"comment_ctime":1544088288,"is_pvip":false,"replies":[{"id":"16862","content":"是的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544095340,"ip_address":"","comment_id":47245,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14428990176","product_id":100020801,"comment_content":"请问一下丁老师，MDL读写锁中，是不是如果存在读锁，那么写锁需要等待读锁释放，而存在写锁时，读锁需要等待写锁释放对吗？","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431712,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544095340,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43904,"user_name":"Geek_b7a73b","can_delete":false,"product_type":"c1","uid":1078667,"ip_address":"","ucode":"6F9725D2595ED4","user_header":"https://static001.geekbang.org/account/avatar/00/10/75/8b/9ddda63b.jpg","comment_is_top":false,"comment_ctime":1543321297,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14428223185","product_id":100020801,"comment_content":"如果修改表操作在 ”mysqldump开启后但还未导出修改表数据前“ 的时间段内开始，则修改表操作成功完成，而mysqldump会执行失败；<br><br>如果修改表操作在 “mysqldum已导出修改表数据但还未结束mysqldump操作前”的时间段内开始，则修改表操作被阻塞，mysqldum能成功完成，在mysqldump操作完成后修改表操作方可正常执行。<br><br>5.5版本有可能备份文件里面会丢失数据","like_count":3},{"had_liked":false,"id":43288,"user_name":"core dumped","can_delete":false,"product_type":"c1","uid":1103253,"ip_address":"","ucode":"F99C28F2C396E2","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/95/aae1eb2a.jpg","comment_is_top":false,"comment_ctime":1543206687,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14428108575","product_id":100020801,"comment_content":"思考题:要看ddl语句传到备库后是在mysqldump命令中select数据之前还是之后，如果是之前这个ddl能执行成功，但是mysqldump后面select数据就会报错，如果是之后就会等待在导出数据完成后会跳到select开始之前保存的save point点，这时ddl会继续执行下去。不知是否正确，望大神指导。","like_count":3},{"had_liked":false,"id":194718,"user_name":"punnpkin","can_delete":false,"product_type":"c1","uid":1691517,"ip_address":"","ucode":"E635BD016D892F","user_header":"https://static001.geekbang.org/account/avatar/00/19/cf/7d/d9085aaa.jpg","comment_is_top":false,"comment_ctime":1585099617,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10175034209","product_id":100020801,"comment_content":"FTWRL 这么牛，背后到底做了哪些事情？它主要干 3 件事。<br><br>上全局读锁(lock_global_read_lock)；<br>清理表缓存(close_cached_tables)；<br>上全局COMMIT锁(make_global_read_lock_block_commit)。","like_count":2},{"had_liked":false,"id":127934,"user_name":"tommy","can_delete":false,"product_type":"c1","uid":1062373,"ip_address":"","ucode":"E6EDD4ECBA01D6","user_header":"https://static001.geekbang.org/account/avatar/00/10/35/e5/0b60d57e.jpg","comment_is_top":false,"comment_ctime":1566811588,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"10156746180","product_id":100020801,"comment_content":"&quot;连写 t1 都不允许，自然也不能访问其他表&quot;，其它表又没有锁住，为什么不能访问其它表呢？","like_count":2,"discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":239695,"discussion_content":"ERROR 1100 (HY000): Table &#39;tt&#39; was not locked with LOCK TABLES确实是不行","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1587306422,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1254801,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","nickname":"猴哥一一 cium","note":"","ucode":"38EC64F8D1A0B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312171,"discussion_content":"对这个可以,因为他没获取哪些表的读锁,所以不能读.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602600975,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":239695,"ip_address":""},"score":312171,"extra":""}]},{"author":{"id":1644104,"avatar":"https://static001.geekbang.org/account/avatar/00/19/16/48/09493874.jpg","nickname":"茶没喝完","note":"","ucode":"D72D88C42A1258","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553764,"discussion_content":"一次性获取所有需要的锁，可以有效的避免死锁。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646060976,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":239914,"discussion_content":"https://dev.mysql.com/doc/refman/5.7/en/lock-tables.html\nA session that requires locks must acquire all the locks that it needs in a single LOCK TABLES statement. While the locks thus obtained are held, the session can access only the locked tables. For example, in the following sequence of statements, an error occurs for the attempt to access t2 because it was not locked in the LOCK TABLES statement。一个session获取锁的话，必须一次性获取所有需要的锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587310562,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138281,"discussion_content":"前提条件是当前线程下，对相应的表分配了相应的锁规则，所以在锁释放前才可以访问其他表，或其他的方式访问当前表。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579232633,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":83049,"discussion_content":"同问啊，兄台搞明白了回复下答案啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576413266,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116385,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1563845603,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10153780195","product_id":100020801,"comment_content":"对于MDL，MySQL支持wait吗","like_count":2,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138284,"discussion_content":"wait不是mariadb在DDL层面的机制吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579232690,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65694,"user_name":"愚人","can_delete":false,"product_type":"c1","uid":1355952,"ip_address":"","ucode":"40DE41849EF9EA","user_header":"https://static001.geekbang.org/account/avatar/00/14/b0/b0/30b29949.jpg","comment_is_top":false,"comment_ctime":1549587951,"is_pvip":false,"replies":[{"id":"23265","content":"最早的ddl内部实现就是这么做的😆<br><br>不过加锁时间也不短。<br> “先基于原表创建一个临时表，完成字段更新修改；” 这个过程，要包含<br>“把原表的数据导入临时表”吧？<br>导入的过程还是对原表加MDL锁的。<br><br>好问题","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1549669248,"ip_address":"","comment_id":65694,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10139522543","product_id":100020801,"comment_content":"关于MDL写锁，有个更好的处理方法不知道是否稳妥？先基于原表创建一个临时表，完成字段更新修改；然后对原表加MDL写锁，加锁成功后把临时表更名为原表，这样加锁时间很短。","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438553,"discussion_content":"最早的ddl内部实现就是这么做的😆\n\n不过加锁时间也不短。\n “先基于原表创建一个临时表，完成字段更新修改；” 这个过程，要包含\n“把原表的数据导入临时表”吧？\n导入的过程还是对原表加MDL锁的。\n\n好问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549669248,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51635,"user_name":"why","can_delete":false,"product_type":"c1","uid":1012937,"ip_address":"","ucode":"C9E796E53F6F5E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/74/c9/d3439ca4.jpg","comment_is_top":false,"comment_ctime":1545212427,"is_pvip":false,"replies":[{"id":"18680","content":"嗯嗯，所以也叫log 😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545214946,"ip_address":"","comment_id":51635,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10135147019","product_id":100020801,"comment_content":"这 Online DDL 有点像在粉板上记账：先把表取出来写在粉板上，在粉板上修改，再进行真正的表修改。","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433544,"discussion_content":"嗯嗯，所以也叫log 😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545214946,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44732,"user_name":"大男孩","can_delete":false,"product_type":"c1","uid":1026327,"ip_address":"","ucode":"F02ED59E849741","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a9/17/ed791bea.jpg","comment_is_top":false,"comment_ctime":1543483163,"is_pvip":false,"replies":[{"id":"16163","content":"保证，必须保证😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543630976,"ip_address":"","comment_id":44732,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10133417755","product_id":100020801,"comment_content":"对上一节留下来的索引 ca 和 cb 问题的解释，有一点疑问，索引 ca 和索引 c 的数据排布应该是不一样的，对于索引 ca 来说，索引是按照 c a 来排序，这个没问题。可以对于索引 c 来说，索引中的数据只会按照 c 来排序的，字段 a 和 b 因为是联合主键也会冗余在索引 c 里边，但是并不能保证索引 c 中的数据是满足 c，a 的排序吧？麻烦讲师解答下","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430820,"discussion_content":"保证，必须保证😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543630976,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43541,"user_name":"老杨同志","can_delete":false,"product_type":"c1","uid":1246199,"ip_address":"","ucode":"3F334F0CFD3DE6","user_header":"https://static001.geekbang.org/account/avatar/00/13/03/f7/3a493bec.jpg","comment_is_top":false,"comment_ctime":1543238331,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10133172923","product_id":100020801,"comment_content":"session C 在等待的时候就开始阻塞后来的请求了，不是拿到（拿到以后反而很快执行就放过了）<br>@老师，这句话可以理解为innodb引擎获得锁的机制是公平锁吗","like_count":2},{"had_liked":false,"id":43346,"user_name":"郭刚","can_delete":false,"product_type":"c1","uid":1292032,"ip_address":"","ucode":"22CB8ECE8E3DCA","user_header":"https://static001.geekbang.org/account/avatar/00/13/b7/00/12149f4e.jpg","comment_is_top":false,"comment_ctime":1543217861,"is_pvip":false,"replies":[{"id":"15506","content":"额，超纲了，😋<br><br>嗯，在线DDL还是要借助PT或者gh-ost","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543228882,"ip_address":"","comment_id":43346,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10133152453","product_id":100020801,"comment_content":"不是可以用pt-online-schema-change在线DDL吗？","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430366,"discussion_content":"额，超纲了，😋\n\n嗯，在线DDL还是要借助PT或者gh-ost","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543228882,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1945728,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/b0/80/88b0a557.jpg","nickname":"Stock66","note":"","ucode":"2D326A20CEB23D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540288,"discussion_content":"pt-online-schema-change 的确好用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640008898,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43264,"user_name":"hhhh","can_delete":false,"product_type":"c1","uid":1256101,"ip_address":"","ucode":"9E87017424B382","user_header":"https://static001.geekbang.org/account/avatar/00/13/2a/a5/625c0a2e.jpg","comment_is_top":false,"comment_ctime":1543201786,"is_pvip":false,"replies":[{"id":"15472","content":"你这个是同一个会话里面😓<br>例子中SessionA seesionB 就是表示不是同一个session(会话）","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543204376,"ip_address":"","comment_id":43264,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10133136378","product_id":100020801,"comment_content":"老师，为什么我在musql8.0版本中，执行<br>begin;<br>select * from t limit 1;<br>alter table t add g int;<br>select * from t limit 1;<br>commit;<br>可以正常执行，并没有锁住呀","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430341,"discussion_content":"你这个是同一个会话里面😓\n例子中SessionA seesionB 就是表示不是同一个session(会话）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543204376,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1323652,"avatar":"","nickname":"sibyl","note":"","ucode":"0D142011860D69","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298308,"discussion_content":"如果使用两个Hedisql这种窗口工具，注意使用打开两个窗口，而不是两个查询面板，一个窗口实际是一个session","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597243124,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":10161,"discussion_content":"整2个客户端分别执行下就能模拟出来了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568268194,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43251,"user_name":"benying","can_delete":false,"product_type":"c1","uid":1247522,"ip_address":"","ucode":"DEBAB485F381CC","user_header":"https://static001.geekbang.org/account/avatar/00/13/09/22/22c0c4fa.jpg","comment_is_top":false,"comment_ctime":1543200634,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10133135226","product_id":100020801,"comment_content":"留言区很精彩，老师回答的很多，很及时，花了不少时间，谢谢老师，谢谢同学们，谢谢！","like_count":2},{"had_liked":false,"id":43239,"user_name":"undifined","can_delete":false,"product_type":"c1","uid":1068920,"ip_address":"","ucode":"449CB4CD2DC089","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/78/c3d8ecb0.jpg","comment_is_top":false,"comment_ctime":1543198535,"is_pvip":false,"replies":[{"id":"15469","content":"1. 是的<br>2. 是的，就怕他一直commit，而且还没发现","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543204097,"ip_address":"","comment_id":43239,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10133133127","product_id":100020801,"comment_content":"1. mysqldump 导数据的时候启动事务，这个过程中数据可以正常更新，在可重复读下隔离级别开启的事务，那这些更新的数据就不会被备份只能等下一次备份了是吗<br>2. 加字段的例子，如果把session A commit，后面的流程是不是可以正常执行了","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430333,"discussion_content":"1. 是的\n2. 是的，就怕他一直commit，而且还没发现","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543204097,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43200,"user_name":"阿豆Dou","can_delete":false,"product_type":"c1","uid":1303898,"ip_address":"","ucode":"5D933075D93179","user_header":"https://static001.geekbang.org/account/avatar/00/13/e5/5a/b650ed8c.jpg","comment_is_top":false,"comment_ctime":1543195700,"is_pvip":false,"replies":[{"id":"15452","content":"不加行锁，但是MDL还是加的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543196313,"ip_address":"","comment_id":43200,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10133130292","product_id":100020801,"comment_content":"MDL锁是在Server中实现，与具体的存储引擎没有关系，之前不是说innodb开启事务，事务里面select查询是不加锁，通过mvcc多版本并发控制，那这个跟mdl锁是什么关系啊","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430322,"discussion_content":"不加行锁，但是MDL还是加的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543196313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43154,"user_name":"Lingance","can_delete":false,"product_type":"c1","uid":1118405,"ip_address":"","ucode":"37847937CF2DBD","user_header":"https://static001.geekbang.org/account/avatar/00/11/10/c5/5940aadc.jpg","comment_is_top":false,"comment_ctime":1543193193,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10133127785","product_id":100020801,"comment_content":"–single-transaction 是一致性读，在开始备份前开启事务并将隔离级别设置为可重复读。所以备份期间主库上后发起的DDL在备库上不可见。","like_count":2},{"had_liked":false,"id":287531,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1618016738,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5912984034","product_id":100020801,"comment_content":"Online DDL的过程是这样的：<br>1. 拿MDL写锁<br>2. 降级成MDL读锁<br>3. 真正做DDL<br>4. 升级成MDL写锁<br>5. 释放MDL锁<br><br>1、2、4、5如果没有锁冲突，执行时间非常短。第3步占用了DDL绝大部分时间，这期间这个表可以正常读写数据，是因此称为“online ”<br><br>问题一：<br>online ddl大概就是我在本地给大表加索引（session1）时，能够继续执行crud操作(session2)的原因吧。<br><br>问题二：<br>我有个问题，我们线上大表（2000万+）a是个热点表，每秒会有10条数据insert.<br>计划采用影子拷贝的方式进行在线建索引，dba表示使用一些工具进行影子拷贝在线建索引，可以保证a的影子表和a表数据一致，我表示怀疑？<br>我担心创建索引这段时间产生的数据会导致不一致。<br><br>问题三：因为mysql（线上版本5.7）支持online ddl，我们可以简单粗暴直接给热点大表建索引（此表无长事务）？<br><br>问题四：线上是主备架构，是否可以先在备库建索引，再主备切换，再给原主库建索引？以上3种方式哪种更适合我们的业务？","like_count":1},{"had_liked":false,"id":277349,"user_name":"Ethan","can_delete":false,"product_type":"c1","uid":1810189,"ip_address":"","ucode":"75F613D58909DB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ZHw73tgCqGKhvticUWGRz4icgicu4hFWfKtacoFJeItH7maNuNUmjnEgDTJvOibwUWgGV0p6guNPibMVWDV4BUmEmlA/132","comment_is_top":false,"comment_ctime":1612366888,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5907334184","product_id":100020801,"comment_content":"林老师你好，最后关于所应的答案，我认为索引（c，b）也是可以不用的。<br>因为根据MRR原理，MySQL 将根据辅助索引获取的结果集根据主键进行排序，将乱序化为有序，可以用主键顺序访问基表，将随机读转化为顺序读，多页数据记录可一次性读入或根据此次的主键范围分次读入，以减少IO操作，提高查询效率。所以即使没有(c，b)这个辅助索引索引，where c=N order by b limit 1 时，会走(c)索引表，然后InnoDB会把主键字段放到索引定义字段后面，即(c,a,b)。接着这个索引组织结构进行排序，然后才回表查询。这样想不知道对吗？希望老师帮忙解惑","like_count":1},{"had_liked":false,"id":224329,"user_name":"小师傅","can_delete":false,"product_type":"c1","uid":1998393,"ip_address":"","ucode":"9A4A2E6A4E9A96","user_header":"https://static001.geekbang.org/account/avatar/00/1e/7e/39/8d4fabee.jpg","comment_is_top":false,"comment_ctime":1591345973,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5886313269","product_id":100020801,"comment_content":"我理解online DDL：1. 拿MDL写锁<br>2. 降级成MDL读锁<br>3. 真正做DDL<br>4. 升级成MDL写锁<br>5. 释放MDL锁<br>在第2步降级为读锁，第3步保存增量DML，在第4步升级MDL写锁，执行增量DML","like_count":1},{"had_liked":false,"id":219961,"user_name":"一个有志气的DB","can_delete":false,"product_type":"c1","uid":1807588,"ip_address":"","ucode":"514419E03590B4","user_header":"https://static001.geekbang.org/account/avatar/00/1b/94/e4/aad72736.jpg","comment_is_top":false,"comment_ctime":1590126245,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5885093541","product_id":100020801,"comment_content":"5.6跟5.7版本之间的MDL锁是不是不太一样。","like_count":1},{"had_liked":false,"id":178807,"user_name":"forever","can_delete":false,"product_type":"c1","uid":1574051,"ip_address":"","ucode":"3EBCD4AB045880","user_header":"https://static001.geekbang.org/account/avatar/00/18/04/a3/95de9a19.jpg","comment_is_top":false,"comment_ctime":1581831301,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5876798597","product_id":100020801,"comment_content":"连写 t1 都不允许，自然也不能访问其他表?文章里这句话没理解，为什么不能操作其它表呢，不只对当前表加锁了吗","like_count":1,"discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":241089,"discussion_content":"不能操作未被当前线程加锁的表","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1587394353,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":177446,"user_name":"啸歌","can_delete":false,"product_type":"c1","uid":1113874,"ip_address":"","ucode":"D8C8963BB940F6","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er2rgam9XfHbuSIZB4S3UG2GLrf9CLkiatDG62eEMicT4yprYdSAZET3kfqQBPxqBHkZw2KRhMdJX4Q/132","comment_is_top":false,"comment_ctime":1581394011,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5876361307","product_id":100020801,"comment_content":"ALTER TABLE tbl_name NOWAIT add column ...<br>ALTER TABLE tbl_name WAIT N add column ... <br><br>问题1：只有MariaDB 支持这个语法么？如果不是MariaDB 呢？<br>问题2：大表如何安全地增加一个一个字段呢？","like_count":1,"discussions":[{"author":{"id":1303322,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e3/1a/061e77b6.jpg","nickname":"亢星东","note":"","ucode":"5E4063E83B2BB9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304907,"discussion_content":"online ddl","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599709767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1143234,"avatar":"","nickname":"刘瑞","note":"","ucode":"7E712BC281A8A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":217480,"discussion_content":"同问，有人可以解释一下吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585563950,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166263,"user_name":"迷","can_delete":false,"product_type":"c1","uid":1294716,"ip_address":"","ucode":"F280A7D44470F9","user_header":"https://static001.geekbang.org/account/avatar/00/13/c1/7c/63f60a17.jpg","comment_is_top":false,"comment_ctime":1577427935,"is_pvip":false,"replies":[{"id":"63416","content":"升级到8.0，快速加字段","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1577445733,"ip_address":"","comment_id":166263,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5872395231","product_id":100020801,"comment_content":"老师帮忙解答个问题，前两天系统更新，有一个大表2000w+的数据，要给它加个字段，尝试过先建一个新表把字段加上，然后INSERT ...SELECT，还有直接ALERT修改表，都超级慢，请问有什么好办法吗","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479465,"discussion_content":"升级到8.0，快速加字段","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577445733,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1294716,"avatar":"https://static001.geekbang.org/account/avatar/00/13/c1/7c/63f60a17.jpg","nickname":"迷","note":"","ucode":"F280A7D44470F9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":106057,"discussion_content":"我们是用的阿里的rds数据库","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577509325,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144194,"user_name":"独一无二","can_delete":false,"product_type":"c1","uid":1692320,"ip_address":"","ucode":"A7DE0EA2BD8FE3","user_header":"https://static001.geekbang.org/account/avatar/00/19/d2/a0/c8714628.jpg","comment_is_top":false,"comment_ctime":1571877731,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"5866845027","product_id":100020801,"comment_content":"老师，索引那道题，c也可以去掉。","like_count":1,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138354,"discussion_content":"是的，但是相比去掉c，那ca的空间就比c的空间占用多，那还不如去掉ca.","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1579237423,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126379,"user_name":"MrVito","can_delete":false,"product_type":"c1","uid":1252169,"ip_address":"","ucode":"716FF6F8871706","user_header":"https://static001.geekbang.org/account/avatar/00/13/1b/49/ddefc656.jpg","comment_is_top":false,"comment_ctime":1566376128,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5861343424","product_id":100020801,"comment_content":"onlineDDL: 在master-slave备份过程中，要是对master上进行DDL，master就会去拿MDL写锁，<br>要是在备份表发生，就会等待DDL事务结束，释放写锁，slave就会延迟，再进行复制过程！<br>要是DDL已经过了备份该表那个时间，也就是说，已经DDL了，备份就没有了加这个字段的表了！<br>要是DDL在之前，备份表之前，就会直接导到slave吧，因为对这个mysqldump不熟悉！不是很明白！","like_count":1},{"had_liked":false,"id":112752,"user_name":"憨皮苏","can_delete":false,"product_type":"c1","uid":1412429,"ip_address":"","ucode":"D0B4B7660DA766","user_header":"https://static001.geekbang.org/account/avatar/00/15/8d/4d/992070e8.jpg","comment_is_top":false,"comment_ctime":1562815148,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5857782444","product_id":100020801,"comment_content":"1. slave 上进行逻辑备份<br>2. 对表 t 进行 DDL 操作<br>3. slave 上备份到表 t 时，对表 t 施加 MDL 读锁（由于 MDL 锁只有在事务结束时才释放，又因为逻辑备份在备份结束之后才结束事务）<br>4. 等到备份结束，表 t 的 MDL 读锁释放之后，才能进行 master 传过来的对表 t 的 DDL 操作","like_count":1},{"had_liked":false,"id":107971,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1561642354,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5856609650","product_id":100020801,"comment_content":"锁，只要有高并发就会有锁。<br><br>1：锁的本质是啥？<br><br>老师讲是一种特殊的数据结构，我觉得是一种数据同步的控制机制。这个还希望老师深入详细讲解一下，不知道锁的底层实现老师会不会讲讲，是不是和JAVA类似-管程&#47;信号量<br><br>2：按锁定的范围对锁分类<br><br>2-1：全局锁-对整个数据库实例加锁，典型作用是全库逻辑备份。这个锁范围最大，并发性最差，不太友好，慎用。<br><br>2-2：表级锁-又细分为表的数据锁(表锁)和表的结构锁(原数据锁-MDL，MySQL5.5时引入的)，锁定的范围还是比较大的，不过没有行锁时只能用这个啦！<br><br>2-3：行级锁-针对表中的行数据进行加锁<br><br>3：感觉这节学的不好，只是从概念上了解了一下MySQL的锁，不知道锁具体是怎么锁定的。<br><br>关键还是自己实力有限，看到评论中的某些问题，提的真是精彩，有些让我有种豁然开朗的感觉。<br><br>比如：<br><br>3-1：MDL锁的作用主要是防止DML和DDL的并发冲突，并且这个锁操作时会默认加上<br><br>3-2：readonly对super权限无效<br><br>3-3：给一个表加字段或者修改字段或者加索引，会扫描全表的数据，这是老师文中讲的，在评论中有同学问，老师又说加普通字段不用重建全表，加索引需要。这里没明白老师的意思？感觉答非所问啊？我重新描述一下问题，给一张表加一个字段不加索引是只修改表的结构，表中的数据不变是吗？还是会为每行数据加上新字段的值？<br><br>3-4：看到评论中有同学问，全局锁和表锁是在Server层实现的，Server层又分成好几块，具体是在那一块呢？优化器？执行器嘛？另外，行锁是在哪里实现的呢？感觉也是Server层？我猜<br><br>3-5：再问个问题，本文讲解了锁的分类、作用，我在平时开发时几乎没有主动做过加锁解锁的操作，是不是锁的触发都是我们的某些操作到了Server层，MySQL自动分析触发的，包括加解锁等。如果是这样那加解锁具体什么动作呢？MySQL怎么保证这些动作的有序运作呢？😄不知后面会讲不<br><br><br>","like_count":1},{"had_liked":false,"id":94582,"user_name":"do it","can_delete":false,"product_type":"c1","uid":1309911,"ip_address":"","ucode":"E0753912E8F2AF","user_header":"https://static001.geekbang.org/account/avatar/00/13/fc/d7/b102034a.jpg","comment_is_top":false,"comment_ctime":1557845810,"is_pvip":false,"replies":[{"id":"34306","content":"赞","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1558260858,"ip_address":"","comment_id":94582,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5852813106","product_id":100020801,"comment_content":"个人小结<br>锁类型:全局锁、表锁、行锁。<br>全局锁:对整个数据库实例加锁。<br>       命令:FTWRL(Flush table with read lock)<br>        行为:使整个库处于只读状态。<br>         使用场景:全局逻辑库备份。<br>         存在危险:如果在主库上备份，在备份区间都不能执行更新，业务基本停摆；如果在从库上备份，在备份区间从库不能执行主库同步过来的binlog，会导致主从延迟。<br>逻辑备份工具mysqldump:使用参数 -single-transaction的时候，导数据之前就会启动一个事务，来确保拿到一致性视图。由于MVCC(多事务并发控制)的支持，这个过程中数据是可以正常更新的。所以single-transaction方法只适用于所有的表使用事务引擎的库。<br>set global readonly=true全库只读状态。<br>set global readonly=true和FTWRL方式，建议采用FTWRL，主要原因有:<br>1、在有些系统中，readonly的值会被用来做其他逻辑，比如用来判断一个库是主库还是从库。<br>2、在异常的处理机制上有差异。如果执行FTWRL命令之后由于客户端发生异常导致断开，那么MYSQL会自动释放这个全局锁，整个库回到正常更新状态。如果库设置为readonly之后，客户端发生异常，也数据库会一直保持readonly状态，导致整个库长时间处于不可以的状态，风险较高。<br>增删改数据(DML)<br>加字段等修改表结构的操作(DDL)<br>表级锁<br>类型:表锁和元数据锁(meta data lock. MDL)<br>表锁<br>表锁语法:lock tables. ... read&#47;write.  unlock tables<br>注意点:会限定别的线程读写，也限定本线程接下来的操作对象。<br>元数据锁MDL<br>不需要显示使用，在访问一个表的时候会自动被加上。<br>作用:保证读写的正确性。<br>MYSQL 5.5版本引入了MDL，当对一个表做DML操作的时候，加MDL读锁；当对表做DDL操作的时候，加MDL写锁。<br>如何安全的给小边加字段？<br>NOWAIT&#47;WAIT N 语法<br>Alter table tbl_name NOWAIT add column....<br>Alter tbl_name WAIT N add column....","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450115,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558260858,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":84101,"user_name":"刘金金777","can_delete":false,"product_type":"c1","uid":1129065,"ip_address":"","ucode":"1AB26D07BB8CDA","user_header":"https://static001.geekbang.org/account/avatar/00/11/3a/69/301a5c89.jpg","comment_is_top":false,"comment_ctime":1554784742,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5849752038","product_id":100020801,"comment_content":"老师您好，有点疑惑，请帮忙解答<br>1，表级锁限制本线程操作  &quot;连写t1都不允许，自然不能访问其他表&quot;， 为什么不能访问其他表呢？<br>2，全局锁的使用场景是全库备份。不是有binlog备份归档吗？为什么还要再使用一套逻辑备份。<br>3，使用FTWRL如何做全库逻辑备份？不是有阻塞主从库更新的危险吗<br>4，热点表加字段时，加上写锁后，在改表的这个过程中，如果增删改足够热，后面的DML语句一样会阻塞，还会出现和上面一样的问题，库线程爆满。 <br>这时就应该错过高峰修改表吧<br>5，现在mysql的DDL不支持等待超时或不等待返回，那线上应该如何操作呢？<br>6，5.6以后有了online ddl，所以我们就不用注意热表加字段引发的问题了呗","like_count":1,"discussions":[{"author":{"id":1644104,"avatar":"https://static001.geekbang.org/account/avatar/00/19/16/48/09493874.jpg","nickname":"茶没喝完","note":"","ucode":"D72D88C42A1258","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553766,"discussion_content":"1、一次性获取所有锁，可以有效降低死锁。\neg: sessionA 获取tableA的读锁，准备去申请tableB的写锁\n     sessionB 获取tableB的写锁，准备去申请tableA的写锁\n     此时两个session就死锁了。如果sessionA sessionB一次性申请获取所有的锁就不会死锁了。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646061732,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":83039,"user_name":"杜超","can_delete":false,"product_type":"c1","uid":1183380,"ip_address":"","ucode":"8123F1E13D6A68","user_header":"https://static001.geekbang.org/account/avatar/00/12/0e/94/67fffed1.jpg","comment_is_top":false,"comment_ctime":1554380056,"is_pvip":true,"replies":[{"id":"30007","content":"要看是执行什么语句哈<br><br>基本都是在执行器锁的，但是不同的语句阶段不同，<br>比如lock table ，就没有生成快照，直接锁表了；<br>如果是myisam的更新语句，是在引擎内第一次使用表的时候加","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1554431715,"ip_address":"","comment_id":83039,"utype":1}],"discussion_count":1,"race_medal":1,"score":"5849347352","product_id":100020801,"comment_content":"是在执行器执行时 生成快照 进行锁表对吧","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445831,"discussion_content":"要看是执行什么语句哈\n\n基本都是在执行器锁的，但是不同的语句阶段不同，\n比如lock table ，就没有生成快照，直接锁表了；\n如果是myisam的更新语句，是在引擎内第一次使用表的时候加","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554431715,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":77783,"user_name":"宋利伟","can_delete":false,"product_type":"c1","uid":1011486,"ip_address":"","ucode":"6472B84663CED0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6f/1e/5c062485.jpg","comment_is_top":false,"comment_ctime":1552997815,"is_pvip":false,"replies":[{"id":"28909","content":"这里说的是“MDL读锁”<br><br>对数据表做增删改查的时候，加的都是“MDL读锁”","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1553415971,"ip_address":"","comment_id":77783,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5847965111","product_id":100020801,"comment_content":"读锁之间不互斥，因此你可以有多个线程同时对一张表增删改查。 <br><br>这里是否写错了，应该是“你可以有多个线程同时对一张表执行查”，而不是“增删改查”，增删该不是写吗？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443851,"discussion_content":"这里说的是“MDL读锁”\n\n对数据表做增删改查的时候，加的都是“MDL读锁”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553415971,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":77409,"user_name":"纸片人","can_delete":false,"product_type":"c1","uid":1358508,"ip_address":"","ucode":"84490E7CEF59A4","user_header":"https://static001.geekbang.org/account/avatar/00/14/ba/ac/b44b256a.jpg","comment_is_top":false,"comment_ctime":1552919652,"is_pvip":false,"replies":[{"id":"28815","content":"这个是一个优化，减少了索引大小啦😆","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1553344764,"ip_address":"","comment_id":77409,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5847886948","product_id":100020801,"comment_content":"老师，索引c和索引ca的排序相同，我理解。搞不懂的是，不是说，索引的叶子存储的是主键吗？为什么章节末尾索引ca和索引cb的主键部分，只有“半个”索引？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443713,"discussion_content":"这个是一个优化，减少了索引大小啦😆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553344764,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":76373,"user_name":"唯她命","can_delete":false,"product_type":"c1","uid":1240398,"ip_address":"","ucode":"8F687E8D306840","user_header":"https://static001.geekbang.org/account/avatar/00/12/ed/4e/ef406442.jpg","comment_is_top":false,"comment_ctime":1552579826,"is_pvip":false,"replies":[{"id":"27974","content":"嗯，如果没有begin，那么mdl锁会在查询语句执行完成之后就释放","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1552694738,"ip_address":"","comment_id":76373,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5847547122","product_id":100020801,"comment_content":"老师，mdl锁，sessionA,如果把begin去了，是不是就不存在问题了","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443279,"discussion_content":"嗯，如果没有begin，那么mdl锁会在查询语句执行完成之后就释放","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552694738,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2020865,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/d6/01/eaa50203.jpg","nickname":"zft","note":"","ucode":"74DEC5FBA610B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278950,"discussion_content":"事务提交后才会释放MDL锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591263035,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74316,"user_name":"Aaaaaaaaaaayou","can_delete":false,"product_type":"c1","uid":1073601,"ip_address":"","ucode":"67BA315B87587D","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/c1/93031a2a.jpg","comment_is_top":false,"comment_ctime":1552188315,"is_pvip":false,"replies":[{"id":"27198","content":"会的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1552229152,"ip_address":"","comment_id":74316,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5847155611","product_id":100020801,"comment_content":"上期问题时间里面有个地方请教下：<br><br>“索引ca的组织是按照c排序，再按照a排序”<br><br>如果c a都相同，会不会继续按照b排序呢？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442526,"discussion_content":"会的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552229152,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65865,"user_name":"Liam","can_delete":false,"product_type":"c1","uid":1094597,"ip_address":"","ucode":"1D15D3B64F2606","user_header":"https://static001.geekbang.org/account/avatar/00/10/b3/c5/7fc124e2.jpg","comment_is_top":false,"comment_ctime":1549706930,"is_pvip":false,"replies":[{"id":"23410","content":"这个语法是MariaDB才支持的<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1549874169,"ip_address":"","comment_id":65865,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5844674226","product_id":100020801,"comment_content":"mysql 5.7.21 下执行 alter table xx wait 5 add column xxx,  显示语法错误，请问mysql不支持在修改表结构的时候添加MDL锁等待超时时间吗","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438618,"discussion_content":"这个语法是MariaDB才支持的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549874169,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54944,"user_name":"艾草","can_delete":false,"product_type":"c1","uid":1302279,"ip_address":"","ucode":"E0D8F58FE6D122","user_header":"https://static001.geekbang.org/account/avatar/00/13/df/07/7bf65329.jpg","comment_is_top":false,"comment_ctime":1545986163,"is_pvip":false,"replies":[{"id":"19877","content":"你没里理解错，5.6的实现确实是“一个DDL，由于被其它线程的MDL读锁堵住，自己无法执行，但是会堵住后续MDL读锁的申请”","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545988403,"ip_address":"","comment_id":54944,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5840953459","product_id":100020801,"comment_content":"老师：<br>在mdl锁这一块有一点不清楚。<br>a获取mdl读锁，这时候c要获取mdl写锁会被阻塞，c被阻塞是因为要等a释放，才能获取写锁，为啥c在被阻塞的时候，其他的查询语句也会被阻塞，不是说读锁不互斥吗？还是说我理解错了，应该理解为c获取写锁之后，在没释放写锁期间，其他的读锁会被阻塞。","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434625,"discussion_content":"你没里理解错，5.6的实现确实是“一个DDL，由于被其它线程的MDL读锁堵住，自己无法执行，但是会堵住后续MDL读锁的申请”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545988403,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52106,"user_name":"Cv","can_delete":false,"product_type":"c1","uid":1062797,"ip_address":"","ucode":"C77CE172B5AA28","user_header":"","comment_is_top":false,"comment_ctime":1545310511,"is_pvip":false,"replies":[{"id":"18912","content":"21篇会说到","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545314953,"ip_address":"","comment_id":52106,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5840277807","product_id":100020801,"comment_content":"能不能讲解下在有唯一索引情况下并发insert出现的死锁问题","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433743,"discussion_content":"21篇会说到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545314953,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51612,"user_name":"念你如昔","can_delete":false,"product_type":"c1","uid":1323531,"ip_address":"","ucode":"FCAD88AB57D084","user_header":"https://static001.geekbang.org/account/avatar/00/14/32/0b/981b4e93.jpg","comment_is_top":false,"comment_ctime":1545207696,"is_pvip":false,"replies":[{"id":"18688","content":"语句执行过程中肯定是加了MDL读锁的，所以会被锁","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545221085,"ip_address":"","comment_id":51612,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5840174992","product_id":100020801,"comment_content":"老师，按您的说法：select会加MDL读锁，而增删改查也会加MDL读锁，读锁互不排斥，那么未在事务中全表扫描过程中，可以执行dml操作。<br>以前我一直以为<br>      1.select不会加锁，所以dml操作可以执行；<br>      2.ddl操作被阻塞的原因是，有对该表的DML或DDL操作未执行完；没成想事务中select语句也能对DDL操作造成堵塞。<br>还有个疑问：如果select没在事务中执行，那么在select执行过程中，应该也是不可以执行DDL操作的吧。","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433534,"discussion_content":"语句执行过程中肯定是加了MDL读锁的，所以会被锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545221085,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":10219,"discussion_content":"老师是不是应该这么理解。语句执行过程中，1. 肯定有事务，不管是自动的还是自己手动begin的 2. 肯定有MDL锁。可能是读锁，也可能是写锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568276724,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":50858,"user_name":"看不到de颜色","can_delete":false,"product_type":"c1","uid":1162714,"ip_address":"","ucode":"88348CCAE81931","user_header":"https://static001.geekbang.org/account/avatar/00/11/bd/da/3d76ea74.jpg","comment_is_top":false,"comment_ctime":1545055844,"is_pvip":false,"replies":[{"id":"18309","content":"不会，后面的改用失败策略了，<br><br>就是B提交前D可以读，但是B提交后放开锁会让C改表结构，如果D再读，就报错“表结构已经发生了变化”","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545065480,"ip_address":"","comment_id":50858,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5840023140","product_id":100020801,"comment_content":"在一开始的获取MDL锁的阶段，session A（MDL读锁，正常执行）-&gt; session B (MDL读锁，正常执行) -&gt; session C (MDL写锁，被block) -&gt; session D (MDL读锁，被MDL写锁 block) 。是不是说加MDL锁是看时间先后顺序的，一旦出现过需要获取MDL写锁（即使被block），后续再需要获取MDL读锁，则发现之前已经有获取MDL写锁（即使被block），需要获取读锁的session都会被block。感觉上像进入一个锁的”队列“，根据时间先后顺序，老师,这个不太理解<br>2018-12-01<br> 作者回复<br>（这个是5.6的逻辑哈）<br><br>订阅的比较晚，不知道大牛还能否给回复o(╥﹏╥)o。这段逻辑感觉类似于公平锁，根据请求的先后获取锁。那是否在MySQL5.6之后进行了优化呢？但是如果允许sessionD先与sessionC获取到锁，那是否又会导致session C饿死呢？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433144,"discussion_content":"不会，后面的改用失败策略了，\n\n就是B提交前D可以读，但是B提交后放开锁会让C改表结构，如果D再读，就报错“表结构已经发生了变化”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545065480,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47311,"user_name":"杰之7","can_delete":false,"product_type":"c1","uid":1297232,"ip_address":"","ucode":"F7DA2E21085332","user_header":"https://static001.geekbang.org/account/avatar/00/13/cb/50/66d0bd7f.jpg","comment_is_top":false,"comment_ctime":1544105144,"is_pvip":false,"replies":[{"id":"16871","content":"1. 如果库里面有不支持事务的表<br><br>2. 前半句因为锁就是这么定义的；后半句，write比read权限高","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544106457,"ip_address":"","comment_id":47311,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5839072440","product_id":100020801,"comment_content":"通过本节的学习，学习了锁相关的知识，老师讲授了有关全局锁和表锁的结构。今天我在阅读的过程中，还是有两个疑问，第一个是关于全局锁，在做备份的时候，为什么要让让全局只读的状态，我们用老师说的Mysqldump的single transaction方法不是更好吗？第二个疑问是在进行Lock tables t1 read <br>,t2 write，为什么其他线程不能写t1,读t2,A在执行Unlock tables 之前，为什么可以读t2?感谢老师的解答。","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431732,"discussion_content":"1. 如果库里面有不支持事务的表\n\n2. 前半句因为锁就是这么定义的；后半句，write比read权限高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544106457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43617,"user_name":"yates","can_delete":false,"product_type":"c1","uid":1079539,"ip_address":"","ucode":"098637EA61C80D","user_header":"https://static001.geekbang.org/account/avatar/00/10/78/f3/a8ac4fc3.jpg","comment_is_top":false,"comment_ctime":1543246725,"is_pvip":false,"replies":[{"id":"15623","content":"约定😄<br> ","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543288372,"ip_address":"","comment_id":43617,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5838214021","product_id":100020801,"comment_content":"你好，上面线程 A 中执行 lock table t1 read, t2 write;后，其他线程写 t1、读写 t2 的语句都会被阻塞。线程A写 t1 的语句也不会允许，但是为什么访问其他表（比如T3,T4）也不允许呢？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430435,"discussion_content":"约定😄\n ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543288372,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43266,"user_name":"壹笙☞漂泊","can_delete":false,"product_type":"c1","uid":1092577,"ip_address":"","ucode":"3A0B8EC881665C","user_header":"https://static001.geekbang.org/account/avatar/00/10/ab/e1/f6b921fa.jpg","comment_is_top":false,"comment_ctime":1543201876,"is_pvip":false,"replies":[{"id":"15471","content":"写t2也被堵住了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543204272,"ip_address":"","comment_id":43266,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5838169172","product_id":100020801,"comment_content":"举个例子，如果在某个线程A中执行lock tables t1 read, t2 write;这个语句，则其他线程写t1、<br>读写t2的语句都会被阻塞。同时，线程A在执行unlock tables之前，也只能执行读t1、写t2的<br>操作。连读t2都不允许，自然也不能访问其他表。<br><br>老师，第三个分句中，其他线程写t1，读写t2的语句都会被阻塞。    这个里是不是应该  写t1、读t2 ？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430342,"discussion_content":"写t2也被堵住了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543204272,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43223,"user_name":"帆帆帆帆帆帆帆帆","can_delete":false,"product_type":"c1","uid":1304645,"ip_address":"","ucode":"0CB732FFD07463","user_header":"https://static001.geekbang.org/account/avatar/00/13/e8/45/c58cb283.jpg","comment_is_top":false,"comment_ctime":1543197592,"is_pvip":false,"replies":[{"id":"15463","content":"是的。你说得对。我发个堪误","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543201709,"ip_address":"","comment_id":43223,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5838164888","product_id":100020801,"comment_content":"--线程A在执行 unlock tables 之前，也只能执行读 t1、写 t2的操作。连读 t2 都不允许，自然也不能访问其他表。<br>这里有误哦，线程A是可以读t2的。<br>mysql&gt; begin;<br>Query OK, 0 rows affected (0.00 sec)<br><br>mysql&gt; select * from test limit 1;<br>+------+<br>| id   |<br>+------+<br>|    1 |<br>+------+<br>1 row in set (0.00 sec)<br><br>mysql&gt; select * from test2 limit 1;<br>+------+<br>| name |<br>+------+<br>| 1    |<br>+------+<br>1 row in set (0.00 sec)<br><br>mysql&gt; <br>mysql&gt; lock tables test read,test2 write;<br>Query OK, 0 rows affected (0.00 sec)<br><br>mysql&gt; select * from test2 limit 1;<br>+------+<br>| name |<br>+------+<br>| 1    |<br>+------+<br>1 row in set (0.00 sec)<br><br>","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430330,"discussion_content":"是的。你说得对。我发个堪误","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543201709,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43187,"user_name":"John","can_delete":false,"product_type":"c1","uid":1104765,"ip_address":"","ucode":"4CBECD3CA7FCFC","user_header":"https://static001.geekbang.org/account/avatar/00/10/db/7d/1fbad49b.jpg","comment_is_top":false,"comment_ctime":1543194928,"is_pvip":true,"replies":[{"id":"15447","content":"即使是online dDL , MDL还是要获取的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543196093,"ip_address":"","comment_id":43187,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5838162224","product_id":100020801,"comment_content":"请问 Online DDL 可以避免加字段时锁表吗？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430317,"discussion_content":"即使是online dDL , MDL还是要获取的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543196093,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43165,"user_name":"往事随风，顺其自然","can_delete":false,"product_type":"c1","uid":1235692,"ip_address":"","ucode":"F266EC6B143E38","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/ec/779c1a78.jpg","comment_is_top":false,"comment_ctime":1543194052,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5838161348","product_id":100020801,"comment_content":"从库做备份，那就只能读，但是主从同步数据会不一致，出现主从同步时间增长，relaylog 迟迟没法写入，sql-thread线程不能把日志同步到从库中，出现不一致","like_count":1},{"had_liked":false,"id":43117,"user_name":"Jeremy","can_delete":false,"product_type":"c1","uid":1171998,"ip_address":"","ucode":"F342D2EC14773C","user_header":"https://static001.geekbang.org/account/avatar/00/11/e2/1e/ea3a0366.jpg","comment_is_top":false,"comment_ctime":1543181946,"is_pvip":true,"replies":[{"id":"15401","content":"没有，session C 在等待的时候就开始阻塞后来的请求了，不是拿到（拿到以后反而很快执行就放过了）","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543191134,"ip_address":"","comment_id":43117,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5838149242","product_id":100020801,"comment_content":"对session c的写锁会阻塞session d的读锁有个疑问，因为之前session a没有释放读锁，那么session    c应该一直取不到写锁，这个时候session d是不是应该有机会取到读锁先于session c执行？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430304,"discussion_content":"没有，session C 在等待的时候就开始阻塞后来的请求了，不是拿到（拿到以后反而很快执行就放过了）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543191134,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":359844,"user_name":"恶魔果实","can_delete":false,"product_type":"c1","uid":1962297,"ip_address":"广东","ucode":"691CD833C984AC","user_header":"https://static001.geekbang.org/account/avatar/00/1d/f1/39/b0960780.jpg","comment_is_top":false,"comment_ctime":1665973431,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1665973431","product_id":100020801,"comment_content":"事务是用MVCC实现的还是读写锁？","like_count":0},{"had_liked":false,"id":358314,"user_name":"一滴水的波浪","can_delete":false,"product_type":"c1","uid":2882763,"ip_address":"北京","ucode":"B88A25C2C87B87","user_header":"https://static001.geekbang.org/account/avatar/00/2b/fc/cb/9e7f075c.jpg","comment_is_top":false,"comment_ctime":1664187693,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1664187693","product_id":100020801,"comment_content":"老师好，文中提到“在 MySQL 5.5 版本中引入了 MDL，当对一个表做增删改查操作的时候，加 MDL 读锁；当要对表做结构变更操作的时候，加 MDL 写锁。” 我的MySQL是8.0，当我执行delete操作时，查看MDL锁是SHARED_WRITE,这个是意味着是写锁吗？如果是写锁，那跟文中说的是一回事吗？","like_count":0},{"had_liked":false,"id":355402,"user_name":"Geek_Zbj","can_delete":false,"product_type":"c1","uid":3078634,"ip_address":"重庆","ucode":"12763B2A264DA0","user_header":"","comment_is_top":false,"comment_ctime":1661334862,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661334862","product_id":100020801,"comment_content":"刚开始几课都能听懂一些，06课开始，就特别难懂，也没试过","like_count":0},{"had_liked":false,"id":353570,"user_name":"吃水不用钱","can_delete":false,"product_type":"c1","uid":1797135,"ip_address":"广东","ucode":"8A5D5978F0D4E5","user_header":"https://static001.geekbang.org/account/avatar/00/1b/6c/0f/7d242cc2.jpg","comment_is_top":false,"comment_ctime":1659576292,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1659576292","product_id":100020801,"comment_content":"回答课后习题：主库的DDL语句同步到备库执行，但此时备库在做备份，在备库的DDL上加了读锁，而加字段需要DDL写琐，此时备库的字段修改会被block住","like_count":0},{"had_liked":false,"id":353362,"user_name":"Pierce","can_delete":false,"product_type":"c1","uid":1589937,"ip_address":"广东","ucode":"9E120B593223EE","user_header":"https://static001.geekbang.org/account/avatar/00/18/42/b1/3f1ad943.jpg","comment_is_top":false,"comment_ctime":1659404520,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1659404520","product_id":100020801,"comment_content":"<br>pt-osc，gh-ost，原生online ddl的原理与适用场景，一文搞懂：https:&#47;&#47;opensource.actionsky.com&#47;20200916-ddl&#47;","like_count":0},{"had_liked":false,"id":351977,"user_name":"瑶","can_delete":false,"product_type":"c1","uid":1304349,"ip_address":"","ucode":"E837D2A2D76B42","user_header":"https://static001.geekbang.org/account/avatar/00/13/e7/1d/f5eb2c85.jpg","comment_is_top":false,"comment_ctime":1658311794,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1658311794","product_id":100020801,"comment_content":"连写 t1 都不允许，自然也不能访问其他表。没看懂这句话，既然是给t1和t2表上锁，和其他表有啥关系呢？","like_count":0},{"had_liked":false,"id":351375,"user_name":"贰","can_delete":false,"product_type":"c1","uid":3049348,"ip_address":"","ucode":"9552C32254A2BB","user_header":"https://static001.geekbang.org/account/avatar/00/2e/87/84/6724366f.jpg","comment_is_top":false,"comment_ctime":1657762489,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657762489","product_id":100020801,"comment_content":"老师，不太理解为什么ca索引后主键部分只有b，以及cb索引后主键部分只有a，可以麻烦您讲一下吗？","like_count":0},{"had_liked":false,"id":347828,"user_name":"Geek_695a9f","can_delete":false,"product_type":"c1","uid":3017232,"ip_address":"","ucode":"7C231EF87A89E0","user_header":"","comment_is_top":false,"comment_ctime":1654497014,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1654497014","product_id":100020801,"comment_content":"锁的是表结构，增删改查不会影响表结构","like_count":0},{"had_liked":false,"id":346962,"user_name":"吃水不用钱","can_delete":false,"product_type":"c1","uid":1797135,"ip_address":"","ucode":"8A5D5978F0D4E5","user_header":"https://static001.geekbang.org/account/avatar/00/1b/6c/0f/7d242cc2.jpg","comment_is_top":false,"comment_ctime":1653561786,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653561786","product_id":100020801,"comment_content":"备份的数据不会包括新加的列","like_count":0},{"had_liked":false,"id":346265,"user_name":"kkk100","can_delete":false,"product_type":"c1","uid":1058666,"ip_address":"","ucode":"4F1887C49556DE","user_header":"https://static001.geekbang.org/account/avatar/00/10/27/6a/34cf9522.jpg","comment_is_top":false,"comment_ctime":1652956230,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1652956230","product_id":100020801,"comment_content":"MySQL加索性会锁表吗？","like_count":0},{"had_liked":false,"id":346131,"user_name":"刘露生","can_delete":false,"product_type":"c1","uid":1625615,"ip_address":"","ucode":"1A5D26AEEA20CC","user_header":"https://static001.geekbang.org/account/avatar/00/18/ce/0f/327b4d87.jpg","comment_is_top":false,"comment_ctime":1652851364,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1652851364","product_id":100020801,"comment_content":"上面提到的设置全局读readonly,在mysql8.0测试发现没有这个属性，应该是set global read_only=true<br>但是发现read_only无论是on还是off，其他线程还是能执行相关写操作，而要保证文中提到的效果，经过测试set global super_read_only=true时，其他线程无法执行写操作且不会随着会话关闭而主动释放锁","like_count":0},{"had_liked":false,"id":345111,"user_name":"苍晓","can_delete":false,"product_type":"c1","uid":2439231,"ip_address":"","ucode":"133B6851452FC2","user_header":"https://static001.geekbang.org/account/avatar/00/25/38/3f/e03a5df3.jpg","comment_is_top":false,"comment_ctime":1652056700,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1652056700","product_id":100020801,"comment_content":"如果更新账户余额表和更新课程表在一个事务内，备份看不到没有提交的数据，应该不会有问题吧？","like_count":0},{"had_liked":false,"id":342404,"user_name":"Bert 陈","can_delete":false,"product_type":"c1","uid":2345014,"ip_address":"","ucode":"022BA03561E54D","user_header":"https://static001.geekbang.org/account/avatar/00/23/c8/36/18e49330.jpg","comment_is_top":false,"comment_ctime":1650250999,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1650250999","product_id":100020801,"comment_content":"如果在某个线程 A 中执行 lock tables t1 read, t2 write; 这个语句，则其他线程写 t1、读写 t2 的语句都会被阻塞。同时，线程 A 在执行 unlock tables 之前，也只能执行读 t1、读写 t2 的操作。连写 t1 都不允许，自然也不能访问其他表。--- “连写 t1 都不允许，自然也不能访问其他表” 这句话不太明白是什么意思。","like_count":0},{"had_liked":false,"id":342300,"user_name":"冬天的树","can_delete":false,"product_type":"c1","uid":1046125,"ip_address":"","ucode":"6FE70C1499D33A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f6/6d/143deae5.jpg","comment_is_top":false,"comment_ctime":1650181078,"is_pvip":true,"discussion_count":0,"race_medal":4,"score":"1650181078","product_id":100020801,"comment_content":"如果sessionC是读操作，而sessionD是写，那是不是从这个写开始后面的都blocked了？","like_count":0},{"had_liked":false,"id":341612,"user_name":"再见理想","can_delete":false,"product_type":"c1","uid":1245999,"ip_address":"","ucode":"FAC88B3F6F6DFD","user_header":"https://static001.geekbang.org/account/avatar/00/13/03/2f/0a5e0751.jpg","comment_is_top":false,"comment_ctime":1649734719,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1649734719","product_id":100020801,"comment_content":"锁：用来合理控制并发访问共享数据的数据结构。<br>mysql里面的锁大致可以分为 全局锁&#47;表锁&#47;行锁 。<br>全局锁：为保证数据一致性，数据库备份时需要使用全局锁。flush tables with read lock (ftwrl),执行该语句 数据更新语句&#47;数据定义数据都会被堵塞。<br>全局锁会导致主库无法执行业务，从库无法执行主库同步过来的binlog，导致主从延迟。<br>mysql官方的逻辑备份mysqldump 使用-single-transaction参数 备份数据时会启动一个事务，确保拿到一致性视图，由于mvcc的支持，数据库是可以正常更新。但是要求所有的表必须是支持事务的。<br>所以我们需要使用innodb引擎。<br>DML 数据更新语句 增删改<br>DDL 数据定义语句 修改表结构<br><br><br>表级别的锁 包含两种  表锁 &#47; MDL<br>MDL 元数据锁  对一个表坐增删改查时，加MDL读锁， 修改表结构时，加MDL写锁。<br>在给表加字段时，要避免有长事务在执行，否则 MDL写锁会阻塞，进而阻塞后面更多的查询语句。造成数据库崩溃。<br><br>","like_count":0},{"had_liked":false,"id":337712,"user_name":"东泽","can_delete":false,"product_type":"c1","uid":2770660,"ip_address":"","ucode":"7B621B43909E07","user_header":"https://static001.geekbang.org/account/avatar/00/2a/46/e4/0860c82f.jpg","comment_is_top":false,"comment_ctime":1646985293,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646985293","product_id":100020801,"comment_content":"串行化隔离级别中说的&quot;锁&quot;和引擎自己负责的锁有什么关联么？","like_count":0},{"had_liked":false,"id":337034,"user_name":"弋延","can_delete":false,"product_type":"c1","uid":2708966,"ip_address":"","ucode":"D04AAEDF8C658A","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epRo9GU1yic8fZwJp2ia9qq0RL7nCvDcosxwwIMZxSHtxjh4aLezyuvYdzgsEY2cib9ibSJNIqb8gFqHw/132","comment_is_top":false,"comment_ctime":1646560035,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646560035","product_id":100020801,"comment_content":"改表<br>1. 获取mdl写锁<br>2. 降级为读锁<br>3. 创建新表执行DD L<br>4. 升级为mdl写锁，替换表<br>5. 释放mdl锁<br>？？？","like_count":0},{"had_liked":false,"id":334565,"user_name":"先听","can_delete":false,"product_type":"c1","uid":1151409,"ip_address":"","ucode":"82D8DA7A2FEB4B","user_header":"https://static001.geekbang.org/account/avatar/00/11/91/b1/fb117c21.jpg","comment_is_top":false,"comment_ctime":1645002247,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645002247","product_id":100020801,"comment_content":"想请问老师或者同学们。有没有办法查询到 &quot;MDL读锁” 正在锁住哪些表\b呢？","like_count":0},{"had_liked":false,"id":329177,"user_name":"。。","can_delete":false,"product_type":"c1","uid":2853618,"ip_address":"","ucode":"A52A6043D27D87","user_header":"https://static001.geekbang.org/account/avatar/00/2b/8a/f2/6c6f7886.jpg","comment_is_top":false,"comment_ctime":1641197234,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1641197234","product_id":100020801,"comment_content":"你现在应该知道了，事务中的 MDL 锁，在语句执行开始时申请，但是语句结束后并不会马上释放，而会等到整个事务提交后再释放。<br><br>1.不明白，如果是在事务提交后再释放锁，那如果我在一个事务中，先执行了查询语句，有一个MDL读锁，由于说是在事务提交后才会释放锁，那么我在该事务中再修改表字段，会有一个 MDL写锁，由于上一个语句的 MDL读锁还没有被释放，因此这个修改表字段的语句就会阻塞，如果是这样的话不就死锁了吗？感觉我理解错了。。。<br><br>2.上篇留下的问题中，可以把 (c,a) 复合索引去掉，这个我是明白了，但是我不明白的是为什么要给 c字段加索引呢，由于有复合索引 (c,b)，根据最左前缀的原则，条件 c=N 是能用到 (c,b) 这个索引的，因此不需要给 c单独添加索引，难道是因为后面的 order by a？但是 d字段是没有索引的，因此即便是给 c单独创建了索引，最终还是需要回表。如果我不给 c单独创建索引，而是使用 (c,b) 这个索引，也是回表，然后在 (a,b) 中找，感觉也是一样的，所以不明白单独给 c创建索引的意义在哪？","like_count":0},{"had_liked":false,"id":328766,"user_name":"tc小马哥","can_delete":false,"product_type":"c1","uid":2877435,"ip_address":"","ucode":"94B7F24298FF35","user_header":"","comment_is_top":false,"comment_ctime":1640871362,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640871362","product_id":100020801,"comment_content":"在二级索引里，对于相同的索引键值，索引行将会按照附带的主键值顺序存储吗？ 为什么主键索引按照a排序了回表结果不需要再排序了，回表顺序难道不是按照c索引树的顺序一条条回的，回表拿到数据顺序的应该是c索引树的顺序吧？","like_count":0},{"had_liked":false,"id":327679,"user_name":"一个无趣的俗人","can_delete":false,"product_type":"c1","uid":1691669,"ip_address":"","ucode":"25435088B10CA2","user_header":"https://static001.geekbang.org/account/avatar/00/19/d0/15/5851180d.jpg","comment_is_top":false,"comment_ctime":1640230233,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640230233","product_id":100020801,"comment_content":"三刷，问题总结，自问自答<br><br>1、使用 FTWRL 加全局锁做全库逻辑备份会有什么问题？有什么替代方案吗？<br><br>2、给小表加个字段&#47;索引，为什么整个库挂掉了？如何安全地给小表加字段&#47;索引？","like_count":0},{"had_liked":false,"id":326558,"user_name":"Geek_81b9b6","can_delete":false,"product_type":"c1","uid":2868062,"ip_address":"","ucode":"54AE825B983006","user_header":"","comment_is_top":false,"comment_ctime":1639561520,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639561520","product_id":100020801,"comment_content":"想问下表记录–a--|–b--|–c--|–d--   以及–c--|–a--|–主键部分b-- ,感觉太抽象了,<br>这是什么意思?","like_count":0},{"had_liked":false,"id":324774,"user_name":"Geek_3d7212","can_delete":false,"product_type":"c1","uid":2794911,"ip_address":"","ucode":"BF3DC8D1B2324D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/nic9EAeicEdLYWku3BxaRTDzmkOXOyGWVC2JpqickkV8860qUGZh4RkESXlz1gCoCPUIH717BiaicreoADwGLJbvjJQ/132","comment_is_top":false,"comment_ctime":1638615664,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638615664","product_id":100020801,"comment_content":"表锁一般是在数据库引擎不支持行锁的时候才会被用到的。如果你发现你的应用程序里有 lock tables 这样的语句，你需要追查一下，比较可能的情况是：要么是你的系统现在还在用 MyISAM 这类不支持事务的引擎，那要安排升级换引擎；要么是你的引擎升级了，但是代码还没升级。我见过这样的情况，最后业务开发就是把 lock tables 和 unlock tables 改成 begin 和 commit，问题就解决了。<br><br>老师，这一段开始说使用表锁是因为存储引擎不支持行锁，而下面的论证又都在说事务，是不是写错了，想说使用表锁是因为存储引擎不支持事务","like_count":0},{"had_liked":false,"id":319547,"user_name":"lleft","can_delete":false,"product_type":"c1","uid":1970443,"ip_address":"","ucode":"D573EB509455AE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","comment_is_top":false,"comment_ctime":1635846581,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635846581","product_id":100020801,"comment_content":"老师文中提到在备库进行备份，要是存在主备延迟，怎么解决在备库上面的备份呢？","like_count":0},{"had_liked":false,"id":318532,"user_name":"那yi刹那的","can_delete":false,"product_type":"c1","uid":2696407,"ip_address":"","ucode":"EE4949CBBD80E7","user_header":"https://static001.geekbang.org/account/avatar/00/29/24/d7/4b82c1b5.jpg","comment_is_top":false,"comment_ctime":1635325010,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1635325010","product_id":100020801,"comment_content":"问个问题，在innodb中，更新记录或者删除记录时，条件字段如果没有索引，会是表级锁。那这个是属于表锁对吧。","like_count":0,"discussions":[{"author":{"id":2133834,"avatar":"https://static001.geekbang.org/account/avatar/00/20/8f/4a/a340734f.jpg","nickname":"平凡","note":"","ucode":"5F7D49235A9598","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":409711,"discussion_content":"这是行锁，只不过是表的所有行加x锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635493972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318116,"user_name":"Z东","can_delete":false,"product_type":"c1","uid":1459774,"ip_address":"","ucode":"037B2BB2715DBA","user_header":"https://static001.geekbang.org/account/avatar/00/16/46/3e/8c75af6d.jpg","comment_is_top":false,"comment_ctime":1635155058,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635155058","product_id":100020801,"comment_content":"理解了：读锁是共享的,它不会阻塞其他读锁;写锁是排他的,它会阻塞其他读锁和写锁;读读不互斥,读写互斥,写写互斥","like_count":0},{"had_liked":false,"id":318113,"user_name":"Z东","can_delete":false,"product_type":"c1","uid":1459774,"ip_address":"","ucode":"037B2BB2715DBA","user_header":"https://static001.geekbang.org/account/avatar/00/16/46/3e/8c75af6d.jpg","comment_is_top":false,"comment_ctime":1635154952,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1635154952","product_id":100020801,"comment_content":"有点没明白， sessionC 需要获取写锁，sessionA,B都是获取读锁，为什么需要 等待前面读锁释放了才能获取写锁啊 ？写锁和写锁才是互斥的啊， 写和读是不干扰的吧 ？","like_count":0,"discussions":[{"author":{"id":2133834,"avatar":"https://static001.geekbang.org/account/avatar/00/20/8f/4a/a340734f.jpg","nickname":"平凡","note":"","ucode":"5F7D49235A9598","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":409712,"discussion_content":"理解错误，mdl只有读读不互斥","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635494089,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318111,"user_name":"Z东","can_delete":false,"product_type":"c1","uid":1459774,"ip_address":"","ucode":"037B2BB2715DBA","user_header":"https://static001.geekbang.org/account/avatar/00/16/46/3e/8c75af6d.jpg","comment_is_top":false,"comment_ctime":1635153946,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635153946","product_id":100020801,"comment_content":"回答问题：备库 –single-transaction 备份，再执行 主库DDL,  备库会出现锁等待的情况， 导致备库小表不可用，因为，备库的备份事务还没提交， DDL会扫描全部的数获取写锁，前一个备份事务还没提交就会都在堵塞，此表的读写都不可用。 ","like_count":0},{"had_liked":false,"id":316035,"user_name":"木木","can_delete":false,"product_type":"c1","uid":1763992,"ip_address":"","ucode":"B182555D11946D","user_header":"https://static001.geekbang.org/account/avatar/00/1a/ea/98/65a13c45.jpg","comment_is_top":false,"comment_ctime":1634112959,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634112959","product_id":100020801,"comment_content":"全局锁：flushs table read lock（FTRL）全局读锁。使数据库只读。<br>表级锁：Lock tables XXX read&#47;write <br>       元数据锁meta data lock（MDL）: 读读不互斥，读写互斥，写写互斥， 隔离DML和DDL.执行DML加MDL读锁，执行DDL加MDL写锁。","like_count":0},{"had_liked":false,"id":315958,"user_name":"半年 2号","can_delete":false,"product_type":"c1","uid":2562181,"ip_address":"","ucode":"7F23C4532A5513","user_header":"https://static001.geekbang.org/account/avatar/00/27/18/85/83ac977e.jpg","comment_is_top":false,"comment_ctime":1634087573,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634087573","product_id":100020801,"comment_content":"MDL写锁🔒是改变表结构的时候触发，读锁则是表的增删改查触发","like_count":0},{"had_liked":false,"id":315948,"user_name":"半年 2号","can_delete":false,"product_type":"c1","uid":2562181,"ip_address":"","ucode":"7F23C4532A5513","user_header":"https://static001.geekbang.org/account/avatar/00/27/18/85/83ac977e.jpg","comment_is_top":false,"comment_ctime":1634085467,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634085467","product_id":100020801,"comment_content":"DDL属于数据表结构的改变，DML属于表字段增删改。MDL元数据锁是为了防止DDL和DML的并发冲突。","like_count":0},{"had_liked":false,"id":315945,"user_name":"半年 2号","can_delete":false,"product_type":"c1","uid":2562181,"ip_address":"","ucode":"7F23C4532A5513","user_header":"https://static001.geekbang.org/account/avatar/00/27/18/85/83ac977e.jpg","comment_is_top":false,"comment_ctime":1634084589,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634084589","product_id":100020801,"comment_content":"做全库逻辑备份时，需要使用全局锁，方法有二：<br>1. 有的表使用了不支持事务的引擎：使用FTWRL<br>2. 所有的表都使用事务引擎的库：使用 mysqldump 带 -single-transaction 参数<br><br>一个库被全局锁上以后，你要对里面任何一个表做加字段操作（包括DML、DDL），都是会被锁住的。<br><br>元数据锁：<br>1. 元数据锁 MDL 不需要显示地使用；<br>2. MDL 读锁之间不互斥，读写锁、写锁之间互斥；<br>3. 事务中的 MDL 锁在事务提交后才释放。<br><br>安全地给小表加字段：<br>1. 非热点表：解决长事务；<br>2. 热点表：在 alter table 语句里面设定等待时间。","like_count":0},{"had_liked":false,"id":314749,"user_name":"云海","can_delete":false,"product_type":"c1","uid":1365206,"ip_address":"","ucode":"0C6CA0BE58EA21","user_header":"https://static001.geekbang.org/account/avatar/00/14/d4/d6/1d4543ac.jpg","comment_is_top":false,"comment_ctime":1633399416,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633399416","product_id":100020801,"comment_content":"有张几百万数据的表，数据库在个人笔记本上，添加字段特别慢，要十几分钟，请问是否有什么优化方式呢。除了上面提到的先kill进程，实际上也没有其他进程了。","like_count":0},{"had_liked":false,"id":314435,"user_name":"秋包","can_delete":false,"product_type":"c1","uid":2764256,"ip_address":"","ucode":"8E291F03A2CC5E","user_header":"https://static001.geekbang.org/account/avatar/00/2a/2d/e0/7a9bd9c7.jpg","comment_is_top":false,"comment_ctime":1633053850,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633053850","product_id":100020801,"comment_content":"我对于思考题的思路：<br>从库备份时，若采用single-transaction，那么会开启一个MDL读锁，而如果主库要进行DDL操作的话，也就是要申请MDL写锁，需要等从库备份完成才可以，但是由于主库申请MDL写锁，那么从库后序的备份都会被阻塞，也就是session C,D那种情况，最后就变成了主库等待从库完成备份，从库等待主库完成DDL，形成了死锁的局面","like_count":0},{"had_liked":false,"id":314042,"user_name":"特立独行的猪","can_delete":false,"product_type":"c1","uid":1465344,"ip_address":"","ucode":"1440F96375740A","user_header":"https://static001.geekbang.org/account/avatar/00/16/5c/00/5d11e68d.jpg","comment_is_top":false,"comment_ctime":1632815934,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632815934","product_id":100020801,"comment_content":"Online DDL的过程是这样的：<br>1. 拿MDL写锁<br>2. 降级成MDL读锁<br>3. 真正做DDL<br>4. 升级成MDL写锁<br>5. 释放MDL锁，没有想明白第2步和第4步的意图","like_count":0},{"had_liked":false,"id":313935,"user_name":"未聞花名","can_delete":false,"product_type":"c1","uid":2142672,"ip_address":"","ucode":"8BE87AC2CEA286","user_header":"https://static001.geekbang.org/account/avatar/00/20/b1/d0/8c94d49e.jpg","comment_is_top":false,"comment_ctime":1632747320,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632747320","product_id":100020801,"comment_content":"mysql&gt; explain select * from geek where c=1 order by a limit 1;<br>+----+-------------+-------+------------+------+---------------+------+---------+-------+------+----------+-------+<br>| id | select_type | table | partitions | type | possible_keys | key  | key_len | ref   | rows | filtered | Extra |<br>+----+-------------+-------+------------+------+---------------+------+---------+-------+------+----------+-------+<br>|  1 | SIMPLE      | geek  | NULL       | ref  | c,ca,cb       | c    | 4       | const |    1 |   100.00 | NULL  |<br>+----+-------------+-------+------------+------+---------------+------+---------+-------+------+----------+-------+<br>1 row in set, 1 warning (0.00 sec)<br><br>mysql&gt; explain select * from geek where c=1 order by b limit 1;<br>+----+-------------+-------+------------+------+---------------+------+---------+-------+------+----------+----------------+<br>| id | select_type | table | partitions | type | possible_keys | key  | key_len | ref   | rows | filtered | Extra          |<br>+----+-------------+-------+------------+------+---------------+------+---------+-------+------+----------+----------------+<br>|  1 | SIMPLE      | geek  | NULL       | ref  | c,ca,cb       | c    | 4       | const |    1 |   100.00 | Using filesort |<br><br>为什么explain两个都没有走索引","like_count":0},{"had_liked":false,"id":312507,"user_name":"Bias","can_delete":false,"product_type":"c1","uid":1401281,"ip_address":"","ucode":"8F1109EC9AEA95","user_header":"https://static001.geekbang.org/account/avatar/00/15/61/c1/4b584663.jpg","comment_is_top":false,"comment_ctime":1631845777,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631845777","product_id":100020801,"comment_content":"Online DDL ALGORITHM=INPLACE, LOCK=NONE; 的情况不知怎么样","like_count":0},{"had_liked":false,"id":310300,"user_name":"Geek_842f07","can_delete":false,"product_type":"c1","uid":2698987,"ip_address":"","ucode":"ED772AF755FE7E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/WP4Ge8ABcINFkccKaNYKibicFnI0JAoojBBAUGrichNeRAgzm5RGbHG7GqYrFX3ELEzenuEbicQHJy2HZ72RxSOuMA/132","comment_is_top":false,"comment_ctime":1630581960,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630581960","product_id":100020801,"comment_content":"备份一般都会在备库上执行，你在用–single-transaction 方法做逻辑备份的过程中，如果主库上的一个小表做了一个 DDL，比如给一个表上加了一列。这时候，从备库上会看到什么现象呢？<br>答：备库上应该还是没有加上一列的原来的数据","like_count":0},{"had_liked":false,"id":308197,"user_name":"Geek_d6f854","can_delete":false,"product_type":"c1","uid":2114848,"ip_address":"","ucode":"598D4A4F97AF82","user_header":"","comment_is_top":false,"comment_ctime":1629447516,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629447516","product_id":100020801,"comment_content":"热点表，这段“kill 可能未必管用，因为新的请求马上就来了”， 新来的请求也是在ddl去获取dml写锁之后，kill调长事务之后，alter table不久获取到dml写锁，后面不久可以正常流程继续了吗？什么时候会出现kill不管用的情况吗？这里不是很理解","like_count":0},{"had_liked":false,"id":308192,"user_name":"Geek_24d27b","can_delete":false,"product_type":"c1","uid":1625645,"ip_address":"","ucode":"B52AB6E73F6A0E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Gf2QrwPGnMzia7UbNZvAqDOHZZXFyibnUUsc7JrLggqUC2Mw0UneEBP9KicP8Dic30O22XrOz1cB3DatE4NxGpbIlA/132","comment_is_top":false,"comment_ctime":1629446137,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1629446137","product_id":100020801,"comment_content":"添加字段，为何真正做DDL的时候不会锁住呢？如果添加一个字段且给默认值，采用in-place方式在原表修改，那不是相当于对每一条记录都进行update吗？","like_count":0},{"had_liked":false,"id":307462,"user_name":"Geek_f23c82","can_delete":false,"product_type":"c1","uid":2725008,"ip_address":"","ucode":"40BABEF7078F37","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIW5xLKMIwlibBXdP5sGVqhXAGuLYk7XFBrhzkFytlKicjNpSHIKXQclDUlSbD9s2HDuOiaBXslCqVbg/132","comment_is_top":false,"comment_ctime":1629112154,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629112154","product_id":100020801,"comment_content":"课后习题答案分析：<br>由于从库备份数据时加上了“--single-transaction”，因此本次备份会放在一个事务里面执行，因此执行的过程中会获取某张表的MDL读锁，并且只有commit之后该表的MDL读锁才会释放。当从库同步到DDL操作之后，会尝试去获取前述表的写锁，但是此时MDL读锁还未释放，因此DDL会阻塞。另外会阻塞后续对该表的DML操作，如果这个从库用于高并发读场景，且对该表的读操作非常频繁，造成的影响还是蛮大的。","like_count":0},{"had_liked":false,"id":306568,"user_name":"香草小羊排","can_delete":false,"product_type":"c1","uid":1315852,"ip_address":"","ucode":"E8083C086ACE99","user_header":"https://static001.geekbang.org/account/avatar/00/14/14/0c/43be5510.jpg","comment_is_top":false,"comment_ctime":1628608804,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628608804","product_id":100020801,"comment_content":"索引c,b 就等价于order by c,b ？？？","like_count":0},{"had_liked":false,"id":305355,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1627916961,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627916961","product_id":100020801,"comment_content":"线程A加锁（lock tables t1 read, t2 write）后，<br>线程B查询表t2（select * from t2 limit 1）<br>线程C查询 &quot;show PROCESSLIST&quot;，显示线程2的state是 ”Waiting for table metadata lock“   这不也是MDL锁吗？","like_count":0},{"had_liked":false,"id":304046,"user_name":"Eternal","can_delete":false,"product_type":"c1","uid":1188023,"ip_address":"","ucode":"EA6FE7CC98F740","user_header":"https://static001.geekbang.org/account/avatar/00/12/20/b7/bdb3bcf0.jpg","comment_is_top":false,"comment_ctime":1627205925,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627205925","product_id":100020801,"comment_content":"数据库那些场景会涉及到数据不一致，需要加锁？<br><br>先回忆一下锁的分类<br>service层的锁：<br>1、全局锁<br>2、表锁<br>2、MDL锁<br><br>引擎层的锁（InnoDB）<br>1、表锁：意向锁 X 、S<br>2、行锁：行锁、gap锁、间歇锁<br>3、主键自增长锁<br><br>常用操作场景<br>1、更新表结构，如添加字段（DDL）<br>2、更新数据（DML）<br>3、数据备份<br>4、数据同步<br>5、主从切换<br><br>考虑以上5种情况如果随意组合且并发，系统流程怎么走的？加锁流程是什么？","like_count":0},{"had_liked":false,"id":303443,"user_name":"Rui","can_delete":false,"product_type":"c1","uid":2705422,"ip_address":"","ucode":"995E914B6DFAE5","user_header":"https://static001.geekbang.org/account/avatar/00/29/48/0e/ea42eaf8.jpg","comment_is_top":false,"comment_ctime":1626788860,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1626788860","product_id":100020801,"comment_content":"本节课程主要介绍了MYSQL的全局锁和表级锁<br>全局锁一般在做逻辑备份的时候使用<br>全局锁有三种方式：<br>1.flush tables with read lock 2.set global readonly = true 3.mysqldump -single-transaction<br>如果引擎支持repeatable read隔离级别，建议使用mysqldump -single-transaction,可以拿到一致性视图<br>flush tables with read lock,相比于set global readonly = true来讲，推荐使用第一种，两点原因：<br>1.set global readonly = true在某些系统中会用来判断一个库是主库还是从库，因此可能影响更大<br>2.两者在异常处理机制上有所不同，flush tables with read only 遇到异常会自动释放锁，而set global readonly = true的方式则不会，因此前者更加安全<br><br>表级锁有两种：<br>1.lock table t read | write 表锁<br>2.MDL锁<br><br>假设使用lock table t1 read,t2 write,则当前线程只能对t1读，对t2读写，其他线程可以对t1读，对t2读写都不可以。<br>MDL锁又称元数据锁，旨在保证DDL和DML操作之间保持数据的一致性<br>MDL锁不需要显式声明，在访问一个表时会被自动加上<br>如果事务A执行了MDL操作，并且未提交，此时事务B需要执行一个DDL操作，则必须等待事务A释放MDL锁。<br>如何安全的给一个表执行DDL操作：<br>1.在执行DDL操作之前，kill长事务，可以查看information_schema.trx表中的事务信息，<br>2.如果这个表是个热点表，被访问的频率较高，那么kill可能没有效果，因为新的请求很快就会过来，<br>可以为DDL设定超时时间，alert table table_name wait N add column 或者 alert table table_name nowwait add colunm","like_count":0},{"had_liked":false,"id":302659,"user_name":"熊猫","can_delete":false,"product_type":"c1","uid":1080238,"ip_address":"","ucode":"23C85117A16BEF","user_header":"https://static001.geekbang.org/account/avatar/00/10/7b/ae/66ae403d.jpg","comment_is_top":false,"comment_ctime":1626320237,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626320237","product_id":100020801,"comment_content":"老师，像给表加字段，(方式1).顺序加在已有字段后面;(方式2).通过after加在业务相关字段后面。这两种方式对mysql来说有区别吗？","like_count":0},{"had_liked":false,"id":301975,"user_name":"建强","can_delete":false,"product_type":"c1","uid":1397126,"ip_address":"","ucode":"62B03D0E0C64EC","user_header":"https://static001.geekbang.org/account/avatar/00/15/51/86/b5fd8dd8.jpg","comment_is_top":false,"comment_ctime":1626003857,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626003857","product_id":100020801,"comment_content":"个人理解：用–single-transaction 方法做逻辑备份，会启动一个事务，从一致性视图中读取数据，而此时如果在主库给一个小表用DDL加一列时，需要加写锁，此时线程需要等待，因此，在备库中看到的那个表结构还是未做任何修改。","like_count":0},{"had_liked":false,"id":300524,"user_name":"Geek_457f47","can_delete":false,"product_type":"c1","uid":1443589,"ip_address":"","ucode":"B9EB1B46AA4D85","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/iamkqQRZFTAQgclRqskib3n860CStDuxq2aiaZO7EicDfLJwCdZ9gZiajhBoTNuFKH47DLKO5C4GHxukN5L1VOpcR6Q/132","comment_is_top":false,"comment_ctime":1625204739,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625204739","product_id":100020801,"comment_content":"上节课的答疑中，c, 和ca的问题还想确认一个问题，非聚簇索引中，叶子节点保存的主键也是有序的吗，如果索引值一样的话。","like_count":0},{"had_liked":false,"id":300113,"user_name":"prader26","can_delete":false,"product_type":"c1","uid":1433707,"ip_address":"","ucode":"5EFFFC374ADECE","user_header":"https://static001.geekbang.org/account/avatar/00/15/e0/6b/f61d7466.jpg","comment_is_top":false,"comment_ctime":1625013589,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625013589","product_id":100020801,"comment_content":"1 mysql 根据锁的范围分为 全局锁，表级锁，和行级锁。<br>2 全局锁<br>   2.1 全局锁会让整个表变成只读的状态。一般用在 数据的逻辑备份。<br>   2.2 mysql 可是使用 Flash table with read lock (FTWRL) 给全局添加读锁。<br>   2.3 mysql官方自带的逻辑备份工具是 mysqldump。当mysqldump 使用参数 -single-transaction 的时候，数据启动之前就会启动一个事务，保证拿到数据的一致性。<br>       但是 single-transaction 方法只适用于所有的表示用事务引擎的库。 MySAM 就不支持事务引擎。<br>3 表级锁<br> 3.1 表级锁，有2种，一种是表锁，一种是元数据锁（meta data lock   MDL）。<br> 3.2 表锁的语法是 lock table .. read&#47;write   就是对表进行操作前，先拿到锁。<br> 3.3 MDL 不需要显示添加，在表操作的时候，会默认加上，就是为了防止，数据不一致。<br> 3.4 为了防止ddL小表，阻塞整个数据库，需要 解决长事物问题。 设置DDL超时时间，或者kill 长事务。","like_count":0},{"had_liked":false,"id":299415,"user_name":"熊猫","can_delete":false,"product_type":"c1","uid":1080238,"ip_address":"","ucode":"23C85117A16BEF","user_header":"https://static001.geekbang.org/account/avatar/00/10/7b/ae/66ae403d.jpg","comment_is_top":false,"comment_ctime":1624616467,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1624616467","product_id":100020801,"comment_content":"老师，对热点表，清理完不用的历史数据，再执行alter table t engine=InnoDB，会有拖垮整个库的风险吗？","like_count":0},{"had_liked":false,"id":296691,"user_name":"oops","can_delete":false,"product_type":"c1","uid":1102831,"ip_address":"","ucode":"1DEC23A503F8A3","user_header":"https://static001.geekbang.org/account/avatar/00/10/d3/ef/9c5e695b.jpg","comment_is_top":false,"comment_ctime":1623116992,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623116992","product_id":100020801,"comment_content":"表级锁mdl锁跟ix,is是同一个概念吗","like_count":0},{"had_liked":false,"id":296143,"user_name":"Geek_457f47","can_delete":false,"product_type":"c1","uid":1443589,"ip_address":"","ucode":"B9EB1B46AA4D85","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/iamkqQRZFTAQgclRqskib3n860CStDuxq2aiaZO7EicDfLJwCdZ9gZiajhBoTNuFKH47DLKO5C4GHxukN5L1VOpcR6Q/132","comment_is_top":false,"comment_ctime":1622775368,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622775368","product_id":100020801,"comment_content":"文中sesssion C获取写锁会阻塞可以理解，为什么session D 获取读锁会被session C 阻塞呢？不应该session D直接和当前获取MDL 读锁的session A 比较吗？","like_count":0},{"had_liked":false,"id":294266,"user_name":"萤火虫777","can_delete":false,"product_type":"c1","uid":2240716,"ip_address":"","ucode":"7869A3FC6E0375","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/iafcfA40I3EOMhK8eDHQxmWmBjtNzAwYKT5AKHaAqFibCgyKichCbnDLcxUmUUzSOZlbiao6uftwXicFfYyh1licDibxw/132","comment_is_top":false,"comment_ctime":1621856509,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621856509","product_id":100020801,"comment_content":"怎么感觉，我搞java的没用到这些呢","like_count":0},{"had_liked":false,"id":291975,"user_name":"Geek_42c6d4","can_delete":false,"product_type":"c1","uid":2570887,"ip_address":"","ucode":"77AD7D2D9950C2","user_header":"","comment_is_top":false,"comment_ctime":1620632097,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620632097","product_id":100020801,"comment_content":"我可以理解为<br>如果有一个批量修改字段的操作，如果成功拿到了mdl写锁，并且成功降级成mdl读锁，期间没有别的事务修改表数据，这个时候已经在执行字段修改操作了，在修改字段期间，是可以有别的事务做正常的增删改查的吧？","like_count":0},{"had_liked":false,"id":291293,"user_name":"冠","can_delete":false,"product_type":"c1","uid":1285036,"ip_address":"","ucode":"A616FF0CEB4714","user_header":"https://static001.geekbang.org/account/avatar/00/13/9b/ac/b841e379.jpg","comment_is_top":false,"comment_ctime":1620190517,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1620190517","product_id":100020801,"comment_content":"A session that requires locks must acquire all the locks that it needs in a single LOCK TABLES statement. While the locks thus obtained are held, the session can access only the locked tables. <br>-----https:&#47;&#47;dev.mysql.com&#47;doc&#47;refman&#47;8.0&#47;en&#47;lock-tables.html","like_count":0},{"had_liked":false,"id":290479,"user_name":"ck","can_delete":false,"product_type":"c1","uid":1142348,"ip_address":"","ucode":"2335A22314296A","user_header":"https://static001.geekbang.org/account/avatar/00/11/6e/4c/494b2907.jpg","comment_is_top":false,"comment_ctime":1619581994,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619581994","product_id":100020801,"comment_content":"flush tables with read lock(FTWRL) 为数据库加上全局锁后可以使用unlock tables 解锁.","like_count":0},{"had_liked":false,"id":289533,"user_name":"lleft","can_delete":false,"product_type":"c1","uid":1970443,"ip_address":"","ucode":"D573EB509455AE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","comment_is_top":false,"comment_ctime":1619064530,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1619064530","product_id":100020801,"comment_content":"加字段那个例子，sessionC添加字段被堵塞了，不是还没获取到MDL写锁呢？sessionA的MDL读锁还没有释放，MDL读写锁互斥的呀？sessionC还没获取到MDL写锁又怎么会堵塞sessionD的呢？难道sessionC获取到了MDL写锁，只是不能实际执行DDL？","like_count":0,"discussions":[{"author":{"id":2340277,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIj43LHM3EMNT9m1zRuluxXcHicoiaq2lSibicGFUjQamExNxKicQYLboXPmhFsT6T0SriakzDpGkFkWBag/132","nickname":"Geek_88e281","note":"","ucode":"0724F70BEE2A30","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378238,"discussion_content":"因为sessionC在等待获取MDL写锁。由于锁队列的机制。写的级别比读高，所以sessionD会等待sessionC,但是sessionA如果提交了。这时sessionC获取到了MDL写锁，然后会很快降级到读锁，真正做DDL,这时sessionD如果执行时间很短就会查询出来，如果还在执行中，sessionC该获取MDL写锁了，这时会跟sessionC读锁互斥，等待sessionD事务提交，最后sessionC拿到MDL写锁。提交事务，释放MDL写锁。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1623121823,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":289323,"user_name":"马成","can_delete":false,"product_type":"c1","uid":1486895,"ip_address":"","ucode":"664F2BAA2E0F0B","user_header":"https://static001.geekbang.org/account/avatar/00/16/b0/2f/e2096905.jpg","comment_is_top":false,"comment_ctime":1618976811,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1618976811","product_id":100020801,"comment_content":"先开启事务，执行语句拿到了MDL读锁；之后执行DDL时，要获取MDL写锁，因为i此时有读锁了，所以当前线程阻塞；那么之后select的时候，为什么会被阻塞呢？MDL写锁不是没有获取到吗？还是已经获取到了，但是执行的时候因为有读锁，所以阻塞？","like_count":0},{"had_liked":false,"id":288510,"user_name":"粥魚兒","can_delete":false,"product_type":"c1","uid":2206356,"ip_address":"","ucode":"31DAD6CCA2FE1C","user_header":"https://static001.geekbang.org/account/avatar/00/21/aa/94/5f0396ec.jpg","comment_is_top":false,"comment_ctime":1618497992,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618497992","product_id":100020801,"comment_content":"“全局锁的典型使用场景是，做全库逻辑备份。也就是把整库每个表都 select 出来存成文本。”<br>关于这句话我有一个疑问：逻辑备份是备份sql语句；而表select出来的是数据，存储数据是物理备份吧？<br>不知道是不是我理解有误，请大家指正。","like_count":0},{"had_liked":false,"id":288455,"user_name":"粥魚兒","can_delete":false,"product_type":"c1","uid":2206356,"ip_address":"","ucode":"31DAD6CCA2FE1C","user_header":"https://static001.geekbang.org/account/avatar/00/21/aa/94/5f0396ec.jpg","comment_is_top":false,"comment_ctime":1618476024,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1618476024","product_id":100020801,"comment_content":"“举个例子, 如果在某个线程 A 中执行 lock tables t1 read, t2 write; 这个语句，则其他线程写 t1、读写 t2 的语句都会被阻塞。同时，线程 A 在执行 unlock tables 之前，也只能执行读 t1、读写 t2 的操作。连写 t1 都不允许，自然也不能访问其他表。”<br><br>这一段的最后一句话有点不理解。线程A锁住了t1和t2，那么线程A也不能访问除了t1和t2之外的表吗？<br>","like_count":0,"discussions":[{"author":{"id":2206356,"avatar":"https://static001.geekbang.org/account/avatar/00/21/aa/94/5f0396ec.jpg","nickname":"粥魚兒","note":"","ucode":"31DAD6CCA2FE1C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367825,"discussion_content":"在其他的评论下已找到答案：一个session获取锁时，必须一次性获取所有需要的锁，在这个语句中，session只获取了t1的读锁和t2的读写锁，所以只对这两个表有相应的权限。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618476437,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287105,"user_name":"nul","can_delete":false,"product_type":"c1","uid":1043499,"ip_address":"","ucode":"2DBF03B2193B76","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/2b/1e059a0f.jpg","comment_is_top":false,"comment_ctime":1617778301,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617778301","product_id":100020801,"comment_content":"第一个例子，“极客时间”购买系统，余额变动和课程变动两个步骤应该保证业务在同一事务就好了，如果不同事务存在时间差的话即时全局锁也没法解决。","like_count":0},{"had_liked":false,"id":286521,"user_name":"TANMIYOO","can_delete":false,"product_type":"c1","uid":1375256,"ip_address":"","ucode":"BC3556131D4D61","user_header":"https://static001.geekbang.org/account/avatar/00/14/fc/18/8e69f7cf.jpg","comment_is_top":false,"comment_ctime":1617355683,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617355683","product_id":100020801,"comment_content":"part1.全局上锁有两种方式 flush tables with read lock(FTWRL) 和 readonly<br>FTWRL一般用于全量备份,避免在备份过程中有数据更新.但这种方式有两个弊端:①在主库备份,不能读写,致使业务停摆;②在从库备份,不能执行主库的binlog,导致主从延迟.而innodb引擎下,支持事务的一致性视图 mysqldump single-transaction,普遍用这种方法备份.<br>readonly一方面用于判断主从库,另一方面连接断开时不会像FTWRL一样释放锁,而是一直保持readonly的状态,风险性很大.<br>part2:表级锁有表锁和meta data lock(MDL)<br>innodb支持行锁,表锁的互斥强度很大,在innodb引擎下,忽略不谈;<br>MDL是被动锁,mysql5.5以后 增删查改表数据自动加读锁,DDL时自动加写锁.读锁与写锁,写锁与写锁之间是互斥的.所以在对热点表进行DDL时有可能发生堵塞的情况,导致服务崩溃.避免这种情况,一.在ddl之前查询正在执行的长事务并kiil掉 或者 使用 alter table t wait N add column 尝试获取写锁,拿不到就等一下继续获取写锁, ddl online (后面学习)<br>part3:思考题<br>回答不出来T T","like_count":0},{"had_liked":false,"id":286306,"user_name":"tushanjing","can_delete":false,"product_type":"c1","uid":2112449,"ip_address":"","ucode":"5DC0B62289D971","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJGHYXGttb4b5tGf2NQHLIibDnCzqTT08OoEI3QYwX8qwlviaT8iaMiaKghw7ibB4PVAV0DUcCFsibfST3g/132","comment_is_top":false,"comment_ctime":1617246080,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617246080","product_id":100020801,"comment_content":"有一点不太懂哦，小表修改字段的那个反例中，sessionA 的metadata 读锁没有释放，session C的写锁应该加不上去的吧，为啥后面的sesison读会被阻塞呢？","like_count":0},{"had_liked":false,"id":283344,"user_name":"一步两步","can_delete":false,"product_type":"c1","uid":2151836,"ip_address":"","ucode":"B59D1F5293B5C2","user_header":"https://static001.geekbang.org/account/avatar/00/20/d5/9c/842eda55.jpg","comment_is_top":false,"comment_ctime":1615716938,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615716938","product_id":100020801,"comment_content":"1. 首先上面分析的session abcd的session c和session d我并没有完全看懂，既然session c已经被阻塞，线程就不会执行到session d了吧，更不会又commit事务吧。<br>2. 然后小表加字段的解决方法，采用加等待时间来解决，如果session c被阻塞超时放弃了alter操作，直接执行session d，然后commit，这个是每次都会放弃的，因为session c肯定会被阻塞的，这个我没有理解。还是说想把alter操作，不放在事务中执行，比如单独的命令行执行。","like_count":0},{"had_liked":false,"id":282693,"user_name":"小妖","can_delete":false,"product_type":"c1","uid":1730626,"ip_address":"","ucode":"49C01DBFADF101","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJvm1JYIDcS74s4cEYxA1PXMqjortVXEjUKyGQcPvibNJ4EAuksIa6uoHgr6G1yRqAM2KtP3yicKgTA/132","comment_is_top":false,"comment_ctime":1615366243,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615366243","product_id":100020801,"comment_content":"间隙锁怎么没有讲，感觉间隙锁实际上是很重要的","like_count":0},{"had_liked":false,"id":281690,"user_name":"董沛霖","can_delete":false,"product_type":"c1","uid":1460229,"ip_address":"","ucode":"D223C52555C57F","user_header":"https://static001.geekbang.org/account/avatar/00/16/48/05/2ef4b9fb.jpg","comment_is_top":false,"comment_ctime":1614848136,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614848136","product_id":100020801,"comment_content":"使用 set global readonly=true 的方式，应该不能阻塞更新类事务的提交语句，备份的一致性还是没法保证吧？","like_count":0},{"had_liked":false,"id":280699,"user_name":"小wei","can_delete":false,"product_type":"c1","uid":1508328,"ip_address":"","ucode":"416CBC64D71B16","user_header":"","comment_is_top":false,"comment_ctime":1614322996,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614322996","product_id":100020801,"comment_content":"SAVEPOINT test;&#47;&#47;指定保存点,名称为test，ROLLBACK TO SAVEPOINT test;&#47;&#47;回滚到保存点test，老师这个保存点的使用场景是怎么样的？是不是可以每一个更新都加一个保存点，异常就回滚","like_count":0},{"had_liked":false,"id":277252,"user_name":"Gabriel","can_delete":false,"product_type":"c1","uid":1437358,"ip_address":"","ucode":"714772A93E93DC","user_header":"https://static001.geekbang.org/account/avatar/00/15/ee/ae/855b7e6e.jpg","comment_is_top":false,"comment_ctime":1612333519,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612333519","product_id":100020801,"comment_content":"查看数据库中锁的情况的几个sql语句：<br>1：SHOW FULL PROCESSLIST<br>2：SHOW ENGINE INNODB STATUS<br>3：SELECT * FROM information_schema.INNODB_TRX&#47;G;<br>4：SELECT * FROM information_schema.INNODB_LOCKS\\G;<br>5：SELECT * FROM information_schema.INNODB_LOCK_WAITS \\G；","like_count":0},{"had_liked":false,"id":277127,"user_name":"随风","can_delete":false,"product_type":"c1","uid":1244248,"ip_address":"","ucode":"86A78303C9AB9D","user_header":"https://static001.geekbang.org/account/avatar/00/12/fc/58/90b7b363.jpg","comment_is_top":false,"comment_ctime":1612269353,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612269353","product_id":100020801,"comment_content":"读锁之间不互斥，因此你可以有多个线程同时对一张表增删改查, 这句话是不是有问题，读锁，能增删","like_count":0},{"had_liked":false,"id":276553,"user_name":"giteebravo","can_delete":false,"product_type":"c1","uid":1005290,"ip_address":"","ucode":"C087E8D6B5A98B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/ea/32608c44.jpg","comment_is_top":false,"comment_ctime":1612000636,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1612000636","product_id":100020801,"comment_content":"1. 为什么事务会自动添加 MDL 呢？<br>2. MDL 和非 MDL 的典型使用场景是什么呢？","like_count":0},{"had_liked":false,"id":275867,"user_name":"Long","can_delete":false,"product_type":"c1","uid":1318970,"ip_address":"","ucode":"2417242560360A","user_header":"https://static001.geekbang.org/account/avatar/00/14/20/3a/90db6a24.jpg","comment_is_top":false,"comment_ctime":1611709982,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611709982","product_id":100020801,"comment_content":"二刷，第三天，温故知新：<br>1. ca索引可以去除，非常考察B+树非主键索引，叶子节点存储数据的方式，也就是，存索引字段和主键值。<br>2. Online DDL的操作步骤，原先的理解是：获取MDL，执行DDL，或者MDL，释放MDL锁。<br>重新复习后，如何执行不考虑等待的话，正确的方式是：获取MDL写锁，降级为MDL读锁，执行DDL，升级为MDL写锁，释放MDL锁。 <br>3. mysqldump的single transaction参数，又重新复习了一下，确保有一致性视图的。","like_count":0},{"had_liked":false,"id":268641,"user_name":"TT","can_delete":false,"product_type":"c1","uid":1466771,"ip_address":"","ucode":"2D8CE3E45DA7A4","user_header":"https://static001.geekbang.org/account/avatar/00/16/61/93/3191eafa.jpg","comment_is_top":false,"comment_ctime":1608281093,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608281093","product_id":100020801,"comment_content":"## 覆盖索引<br>一个查询操作，如果索引 k 已经包含我们要获取的所有字段，可以少一次回表操作，我们称这种情况为**覆盖索引**<br><br>## 最左前缀<br>MySQL数据模型是B+树，索引项在B+树里的存储是按照索引定义里面字段出现的顺序来排序的，只要满足索引的**最左前缀**(可以是联合索引的最左 N 个字段，也可以是字符串索引的最左 M 个字符)，就可以利用索引来加速检索<br><br>## 建立联合索引的时候，如何安排字段顺序<br>* 根据最左前缀规则，如果通过调整顺序，可以少维护一个索引，那么这个顺序往往就是需要优先考虑采用的<br>* 空间最小原则：如果查询中既有同时筛选 a, b 的情况，又有分别筛选 a，b 的情况，且 a 的字段长度 &gt; b 的字段长度，应该建立 (a, b) 和 b 这两个索引，而不是 (b, a) 和 a 这两个索引<br><br>## 索引下推<br>对于联合索引 (a, b, c)，查询时筛选 a=1， c!=1，按最左前缀原则仅能使用到索引 a，每次获取到一行a=1的数据就需要回表，再做c!=1的判断。MySQL5.6引入来索引下推，在回表前会先做 c!=1的判断，不满足直接跳过，从而减少来回表次数，加快来检索<br><br>## 问题讨论<br>DBA 小吕在入职新公司的时候，就发现自己接手维护的库里面，有这么一个表，表结构定义类似这样的：<br>```<br>CREATE TABLE `geek` (<br>  `a` int(11) NOT NULL,<br>  `b` int(11) NOT NULL,<br>  `c` int(11) NOT NULL,<br>  `d` int(11) NOT NULL,<br>  PRIMARY KEY (`a`,`b`),<br>  KEY `c` (`c`),<br>  KEY `ca` (`c`,`a`),<br>  KEY `cb` (`c`,`b`)<br>) ENGINE=InnoDB;<br>```<br>公司的同事告诉他说，由于历史原因，这个表需要 a、b 做联合主键，这个小吕理解了。<br><br>但是，既然主键包含了 a、b 这两个字段，那意味着单独在字段 c 上创建一个索引，就已经包含了三个字段了呀，为什么要创建“ca”“cb”这两个索引？<br><br>同事告诉他，是因为他们的业务里面有这样的两种语句：<br>```<br>select * from geek where c=N order by a limit 1;select * from geek where c=N order by b limit 1;<br>```<br>问题是：这位同事的解释对吗，为了这两个查询模式，这两个索引是否都是必须的？为什么呢？<br><br>**答案**<br><br>表记录<br>|a|b|c|d|<br>|-|-|-|-|<br>|1|2|3|d|<br>|1|3|2|d|<br>|1|4|3|d|<br>|2|1|3|d|<br>|2|2|2|d|<br>|2|3|4|d|<br>主键 a，b 的聚簇索引组织顺序相当于 order by a,b ，也就是先按 a 排序，再按 b 排序，c 无序.<br><br>索引 ca 的组织是先按 c 排序，再按 a 排序，同时记录主键:<br>|c|a|主键部分只有b|<br>|-|-|-|<br>|2|1|3|<br>|2|2|2|<br>|3|1|2|<br>|3|1|4|<br>|3|2|1|<br>|4|2|3|<br>发现这个跟索引 c 的数据是一模一样的，所以它可以被去掉<br><br>索引 cb 的组织是先按 c 排序，在按 b 排序，同时记录主键。<br>|c|b|主键部分只有a|<br>|-|-|-|<br>|2|2|2|<br>|2|3|1|<br>|3|1|2|<br>|3|2|1|<br>|3|4|1|<br>|4|3|2|<br><br>## 评论区讨论<br><br>&gt; 关于InnoDB对索引的组织<br><br>**InnoDB会把主键字段放到索引定义字段后面，当然同时也会去重。**<br><br>所以当主键是(a,b)的时候：<br>定义为c的索引，实际上是（c,a,b)<br>定义为(c,a)的索引，实际上是(c,a,b)<br>定义为(c,b）的索引，实际上是（c,b,a)","like_count":0},{"had_liked":false,"id":268346,"user_name":"Geek_40c668","can_delete":false,"product_type":"c1","uid":1685451,"ip_address":"","ucode":"4F7B6A3D4F4DD1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/WnbsIzp30vkf8OVicicMHv0Cepxt17aSxdUVIaiaEMullXPE79ywaETSaRl6WeyePiaqqFYoxmK0IXbaUKLpmibD4ng/132","comment_is_top":false,"comment_ctime":1608163665,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608163665","product_id":100020801,"comment_content":"总结：<br>1.mysql共3种表：<br>    a. 全局锁：全局只读，业务停止。<br>         方式一：flush tables with read lock(ftwrl)，可以用于备份，但是太重不建议使用。<br>         如果支持rr隔离级别，可以使用mysqldump 使用参数–single-transaction，进行备份。<br>        方式二：set global readonly=true，不推荐，一般用于区别主备。且root无效。<br>    b. 表级锁：<br>        表锁：lock tables t read&#47;write<br>        mdl锁：元数据锁。自动加，增删查改加mdl读锁，ddl加mdl写锁。类似于读写锁。<br>    c. 行锁：只锁一行数据<br>    c. 行锁<br>2.加字段可能的问题<br>    给一个表新增、修改字段、加索引都会扫描全表。<br>    由于mdl读写锁互斥，在重量级查询的同时，获取mdl锁，会阻塞整个表的所有事务。整个表都不可读写。<br>3.如何安全加字段<br>   对于小表：可以设置超时机制，拿不到mdl写锁就失败或者超时失败。之后重试。<br>   对于大表：停机操作。<br>4.lock tables优化<br>    a. 需要排查该表如果不支持事务，则安排升引擎<br>    b. 如果支持事务，则将lock tables&#47;unlock t","like_count":0},{"had_liked":false,"id":268338,"user_name":"Geek_40c668","can_delete":false,"product_type":"c1","uid":1685451,"ip_address":"","ucode":"4F7B6A3D4F4DD1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/WnbsIzp30vkf8OVicicMHv0Cepxt17aSxdUVIaiaEMullXPE79ywaETSaRl6WeyePiaqqFYoxmK0IXbaUKLpmibD4ng/132","comment_is_top":false,"comment_ctime":1608161637,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608161637","product_id":100020801,"comment_content":"总结：<br>1.mysql锁分为三种<br>    a. 全局锁。全局只读。<br>        可以用flush tables with read lock(ftwrl)<br>    b. 表级锁。<br>        表锁：<br>         mdl：元数据锁。自动加锁，涉及到修改表结构时加mdl写锁，其他操作加mdl读锁。","like_count":0},{"had_liked":false,"id":267567,"user_name":"David.cui","can_delete":false,"product_type":"c1","uid":1302228,"ip_address":"","ucode":"AB46F310403612","user_header":"https://static001.geekbang.org/account/avatar/00/13/de/d4/b83c4185.jpg","comment_is_top":false,"comment_ctime":1607831152,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607831152","product_id":100020801,"comment_content":"为什么session C的写锁遇到之前的session A|B的读锁的时候不会退出呢？按说不应该block，而应该马上退出。从数据库的角度来看，因为共享锁的存在，会导致独占锁根本加不上上去，所以我理解session C应该直接报错退出，而不应该是block，更不应该阻塞后面的会话","like_count":0},{"had_liked":false,"id":266612,"user_name":"旧时光。","can_delete":false,"product_type":"c1","uid":1780698,"ip_address":"","ucode":"E9612FD41567BD","user_header":"https://static001.geekbang.org/account/avatar/00/1b/2b/da/fa630993.jpg","comment_is_top":false,"comment_ctime":1607415382,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607415382","product_id":100020801,"comment_content":"作者回复: InnoDB会把主键字段放到索引定义字段后面，<br>当然同时也会去重。<br><br>所以，当主键是(a,b)的时候，<br>定义为c的索引，实际上是（c,a,b);<br>定义为(c,a)的索引，实际上是(c,a,b)<br>你看着加是相同的<br><br>ps 定义为(c,b）的索引，实际上是（c,b,a)<br>","like_count":0},{"had_liked":false,"id":264343,"user_name":"吟游诗人","can_delete":false,"product_type":"c1","uid":2036366,"ip_address":"","ucode":"27CA90D3D9C5B6","user_header":"","comment_is_top":false,"comment_ctime":1606443174,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606443174","product_id":100020801,"comment_content":"老师我想起来一个问题，给一个表重建主键索引的时候，是不是也是在更新表结构，会默认加mdl锁？","like_count":0},{"had_liked":false,"id":262265,"user_name":"陆美芳","can_delete":false,"product_type":"c1","uid":2084000,"ip_address":"","ucode":"8C3F5FB3A8B3DA","user_header":"https://static001.geekbang.org/account/avatar/00/1f/cc/a0/bd31d495.jpg","comment_is_top":false,"comment_ctime":1605680962,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605680962","product_id":100020801,"comment_content":"看完老师的课程了，收获很多，感谢老师的分享，现在想请教下，MySQL怎么做线上的DDL和DML升级？也就是：系统保证不停机的提供稳定服务的情况下，怎么给MySQL的表修改结构？大表小表都有。看过另外一个老师的课程，提到 旧库和新库之间做 比对补偿程序，但是也不知道这个比对补偿具体怎么做，用MySQL存储过程，还是类似kettle之类的？老师有没有这方面的经验，谢谢。","like_count":0},{"had_liked":false,"id":261441,"user_name":"全有","can_delete":false,"product_type":"c1","uid":1488139,"ip_address":"","ucode":"D16B42B1F71E4E","user_header":"https://static001.geekbang.org/account/avatar/00/16/b5/0b/df89c357.jpg","comment_is_top":false,"comment_ctime":1605338167,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605338167","product_id":100020801,"comment_content":"备库在进行逻辑备份时，主库有表结构的更改，备库可以进行正常的数据同步，但是备份出来的逻辑视图， 是无法获取最新的数据更改的，","like_count":0},{"had_liked":false,"id":261305,"user_name":"慎独","can_delete":false,"product_type":"c1","uid":1216220,"ip_address":"","ucode":"CACDB296E08978","user_header":"https://static001.geekbang.org/account/avatar/00/12/8e/dc/2e915d2f.jpg","comment_is_top":false,"comment_ctime":1605263754,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605263754","product_id":100020801,"comment_content":"MDL 锁读写互斥，为什么在 sessionA,B没有释放读锁时候，sessionC会申请到写锁呢？<br>如果没有申请到写锁，那sessionD读锁应该可以获取到啊？","like_count":0},{"had_liked":false,"id":258334,"user_name":"x-ray","can_delete":false,"product_type":"c1","uid":1140175,"ip_address":"","ucode":"8363F0C4D0AC0B","user_header":"https://static001.geekbang.org/account/avatar/00/11/65/cf/326c0eea.jpg","comment_is_top":false,"comment_ctime":1604389881,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604389881","product_id":100020801,"comment_content":"全局锁这里我有个疑问，如果上全局锁的前一刻，用户的账户表更新扣了100，此时，全局锁上锁，但用户课程表增加的SQL还没执行，是不是会出问题？或者说，这是一个大的事务，全局锁会等事务结束？","like_count":0},{"had_liked":false,"id":255682,"user_name":"hu big sea","can_delete":false,"product_type":"c1","uid":1486549,"ip_address":"","ucode":"489F9B4BF819FF","user_header":"https://static001.geekbang.org/account/avatar/00/16/ae/d5/abe7078a.jpg","comment_is_top":false,"comment_ctime":1603413699,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603413699","product_id":100020801,"comment_content":"感觉对上一讲的思考题还是不是很清楚，索引c如果真实存储内容为（c,a,b),也会像（c,a)一样再对a进行排序嘛？感觉老杨的解释更清楚一些。","like_count":0},{"had_liked":false,"id":251782,"user_name":"葫芦娃-Dear","can_delete":false,"product_type":"c1","uid":1743582,"ip_address":"","ucode":"606C2E1D80B612","user_header":"https://static001.geekbang.org/account/avatar/00/1a/9a/de/abd008f3.jpg","comment_is_top":false,"comment_ctime":1601868173,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601868173","product_id":100020801,"comment_content":"最近在处理线上的慢查询，发现所有的select的慢查询通过pt分析后都会有很短时间都locktime，是因为mdl读锁的原因吗？","like_count":0},{"had_liked":false,"id":249129,"user_name":"好好学习","can_delete":false,"product_type":"c1","uid":1762191,"ip_address":"","ucode":"9D44D9530D9A1D","user_header":"https://static001.geekbang.org/account/avatar/00/1a/e3/8f/77b5a753.jpg","comment_is_top":false,"comment_ctime":1600442391,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600442391","product_id":100020801,"comment_content":"复制头部评论，用于复习。<br><br><br><br>总结：<br>根据加锁范围：MySQL里面的锁可以分为：全局锁、表级锁、行级锁<br><br>一、全局锁：<br>对整个数据库实例加锁。<br>MySQL提供加全局读锁的方法：Flush tables with read lock(FTWRL)<br>这个命令可以使整个库处于只读状态。使用该命令之后，数据更新语句、数据定义语句和更新类事务的提交语句等操作都会被阻塞。<br>使用场景：全库逻辑备份。<br>风险：<br>1.如果在主库备份，在备份期间不能更新，业务停摆<br>2.如果在从库备份，备份期间不能执行主库同步的binlog，导致主从延迟<br>官方自带的逻辑备份工具mysqldump，当mysqldump使用参数--single-transaction的时候，会启动一个事务，确保拿到一致性视图。而由于MVCC的支持，这个过程中数据是可以正常更新的。<br><br>一致性读是好，但是前提是引擎要支持这个隔离级别。<br>如果要全库只读，为什么不使用set global readonly=true的方式？<br>1.在有些系统中，readonly的值会被用来做其他逻辑，比如判断主备库。所以修改global变量的方式影响太大。<br>2.在异常处理机制上有差异。如果执行FTWRL命令之后由于客户端发生异常断开，那么MySQL会自动释放这个全局锁，整个库回到可以正常更新的状态。而将整个库设置为readonly之后，如果客户端发生异常，则数据库就会一直保持readonly状态，这样会导致整个库长时间处于不可写状态，风险较高。<br>二、表级锁<br>MySQL里面表级锁有两种，一种是表锁，一种是元数据所(meta data lock,MDL)<br>表锁的语法是:lock tables ... read&#47;write<br>可以用unlock tables主动释放锁，也可以在客户端断开的时候自动释放。lock tables语法除了会限制别的线程的读写外，也限定了本线程接下来的操作对象。<br>对于InnoDB这种支持行锁的引擎，一般不使用lock tables命令来控制并发，毕竟锁住整个表的影响面还是太大。<br>MDL：不需要显式使用，在访问一个表的时候会被自动加上。<br>MDL的作用：保证读写的正确性。<br>在对一个表做增删改查操作的时候，加MDL读锁；当要对表做结构变更操作的时候，加MDL写锁。<br>读锁之间不互斥。读写锁之间，写锁之间是互斥的，用来保证变更表结构操作的安全性。<br>MDL 会直到事务提交才会释放，在做表结构变更的时候，一定要小心不要导致锁住线上查询和更新。","like_count":0},{"had_liked":false,"id":246130,"user_name":"贺武康","can_delete":false,"product_type":"c1","uid":2129784,"ip_address":"","ucode":"E424A8540FCD13","user_header":"https://static001.geekbang.org/account/avatar/00/20/7f/78/c2f3c511.jpg","comment_is_top":false,"comment_ctime":1599186279,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599186279","product_id":100020801,"comment_content":"老师 我有个问题 MDL是针对所有类型的引擎吗 不管你是什么数据库引擎 都会使用到MDL？","like_count":0},{"had_liked":false,"id":246047,"user_name":"学习学个屁","can_delete":false,"product_type":"c1","uid":1049017,"ip_address":"","ucode":"DF2D61E6FB2FCE","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/b9/73435279.jpg","comment_is_top":false,"comment_ctime":1599143518,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599143518","product_id":100020801,"comment_content":"备份<br> 支持事务 建议使用 mysql自带工具mysqldump 开启一个事务进行备份 , 确保拿到的数据是一致性的.若出现异常 Mysql不会释放这个全局锁,会导致整个库长时间处于不可写状态，风险较高。<br>不支持事务 使用 FTWRL 进行全局锁  , 若出现异常 Mysql自动释放这个全局锁","like_count":0},{"had_liked":false,"id":245747,"user_name":"Magic","can_delete":false,"product_type":"c1","uid":1272047,"ip_address":"","ucode":"FD9CEDAA419EB0","user_header":"https://static001.geekbang.org/account/avatar/00/13/68/ef/6264ca3d.jpg","comment_is_top":false,"comment_ctime":1599039821,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599039821","product_id":100020801,"comment_content":"备库在备份该小表时会被阻塞，因为该小表加了MDL写锁","like_count":0},{"had_liked":false,"id":244712,"user_name":"铁匠","can_delete":false,"product_type":"c1","uid":1088309,"ip_address":"","ucode":"D403835F5DB8F7","user_header":"https://static001.geekbang.org/account/avatar/00/10/9b/35/79e42357.jpg","comment_is_top":false,"comment_ctime":1598627601,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598627601","product_id":100020801,"comment_content":"想直到MySQL5.7对mdl锁做了什么优化","like_count":0},{"had_liked":false,"id":244513,"user_name":"Aprelude","can_delete":false,"product_type":"c1","uid":1658796,"ip_address":"","ucode":"840D3F7A35AEEF","user_header":"https://static001.geekbang.org/account/avatar/00/19/4f/ac/80439ba7.jpg","comment_is_top":false,"comment_ctime":1598544666,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598544666","product_id":100020801,"comment_content":"有不开启事务 mdl会有问题吗","like_count":0},{"had_liked":false,"id":244391,"user_name":"颜海航","can_delete":false,"product_type":"c1","uid":1308159,"ip_address":"","ucode":"5644F6328BF901","user_header":"https://static001.geekbang.org/account/avatar/00/13/f5/ff/523fb378.jpg","comment_is_top":false,"comment_ctime":1598500847,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598500847","product_id":100020801,"comment_content":"老师举的那个MDL锁的例子 我们在生产中也遇到过。我们用gh-ost为一张大表变更，主库完成以后，在从库复制主库rename中间表的时候，有个长时间的查询占用了该表的MDL锁。导致rename一直等待，造成了主从延迟","like_count":0},{"had_liked":false,"id":243427,"user_name":"Geek_26d259","can_delete":false,"product_type":"c1","uid":2066952,"ip_address":"","ucode":"A754206C768474","user_header":"","comment_is_top":false,"comment_ctime":1598103670,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598103670","product_id":100020801,"comment_content":"读锁之间不互斥，因此你可以有多个线程同时对一张表增删改查。  什么意思呢  大佬们","like_count":0},{"had_liked":false,"id":243150,"user_name":"Geek_743a47","can_delete":false,"product_type":"c1","uid":1480471,"ip_address":"","ucode":"8D10E23A078330","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI5na6qtIrtPaI09iahKgA26u2hnFWy77ia0wIkToMYZhdEo3M5XZWO3NchiblmJUeuQVpabMeZerk9Q/132","comment_is_top":false,"comment_ctime":1597976633,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597976633","product_id":100020801,"comment_content":"1.全局锁，建议使用FTWRL,支持事物的innodb可以用mysqldump -single-transaction,但是如果库中存在不支持事物的表，就不适用了。set global readonly=true 则存在异常时，导致整个库不可写，FTWRL异常会恢复读写<br>2.表级锁：a.表锁，注意点：如果设置读锁，则当前线程都只能进行读<br>                b.MDL锁，是限制DDL和DML之间的锁，语句开始，就会上DML锁。<br>                   避免死锁的方法：避免长事务，也可以在alter语句里面加wait，限制执行时间，避免长时间死锁","like_count":0},{"had_liked":false,"id":242271,"user_name":"学个球","can_delete":false,"product_type":"c1","uid":1019725,"ip_address":"","ucode":"7343F3C0CA981D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8f/4d/65fb45e6.jpg","comment_is_top":false,"comment_ctime":1597653835,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597653835","product_id":100020801,"comment_content":"&quot;对一个表加字段，索引，或者修改字段，需要扫描全表数据&quot; 有一点点不确定。<br><br>目前我的理解是：因为 MySQL 用 B+ 树组织表，所以需要扫描所有的叶子节点，也就是全表的数据。","like_count":0},{"had_liked":false,"id":240674,"user_name":"Alvin","can_delete":false,"product_type":"c1","uid":1284900,"ip_address":"","ucode":"8CF85DA34B3CEC","user_header":"https://static001.geekbang.org/account/avatar/00/13/9b/24/a131714e.jpg","comment_is_top":false,"comment_ctime":1597031167,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597031167","product_id":100020801,"comment_content":"MDL读锁是共享的。session C之后的都是读请求，为啥不可以和sessionC之前的读请求共享锁。不太明白mysql为啥要设计MDl直接锁队列，老师可以解答下吗？","like_count":0},{"had_liked":false,"id":239010,"user_name":"moonfox","can_delete":false,"product_type":"c1","uid":1526355,"ip_address":"","ucode":"902BFF40EFA9FA","user_header":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","comment_is_top":false,"comment_ctime":1596414662,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596414662","product_id":100020801,"comment_content":"我怎么觉得应该是去掉C索引，保留CA索引，C索引不能保证按A排序呀","like_count":0},{"had_liked":false,"id":236833,"user_name":"云师兄","can_delete":false,"product_type":"c1","uid":1446285,"ip_address":"","ucode":"8FE20CC9119495","user_header":"https://static001.geekbang.org/account/avatar/00/16/11/8d/f14adc4a.jpg","comment_is_top":false,"comment_ctime":1595560137,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595560137","product_id":100020801,"comment_content":"老师你好，我想问一下最后这个例子：session C不是还没获取到写锁吗，为什么session D获取读锁时还会被锁住呢？","like_count":0},{"had_liked":false,"id":236230,"user_name":"Geek_54fac1","can_delete":false,"product_type":"c1","uid":1995317,"ip_address":"","ucode":"89518CBBC17376","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJiclX8icrTBescLydOXYKesOuQvpPPsOM7f2ZHCsmr7ic0h74picRWx1S2qcYDXmP6TrKdbY8y1mCarg/132","comment_is_top":false,"comment_ctime":1595374365,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595374365","product_id":100020801,"comment_content":"余额表的金额为什没扣呢，没明白","like_count":0},{"had_liked":false,"id":236034,"user_name":"毒草","can_delete":false,"product_type":"c1","uid":1026090,"ip_address":"","ucode":"DBD67DD3517190","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a8/2a/316b8f17.jpg","comment_is_top":false,"comment_ctime":1595295336,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595295336","product_id":100020801,"comment_content":"关于MDL锁那里, session A完成不就自动释放锁了吗","like_count":0},{"had_liked":false,"id":235926,"user_name":"Lion","can_delete":false,"product_type":"c1","uid":2070879,"ip_address":"","ucode":"BD8DDC17EAE6FD","user_header":"https://static001.geekbang.org/account/avatar/00/1f/99/5f/9232a19f.jpg","comment_is_top":false,"comment_ctime":1595248216,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595248216","product_id":100020801,"comment_content":"我还是不理解，在MDL读锁状态下，如果一个线程在读，一个线程在修改表中数据，那么也会出现我读到的数据是错误的啊。，并将MDL的读锁只是限制了修改表结构，而没有限制修改表数据。","like_count":0},{"had_liked":false,"id":235095,"user_name":"Geek_4660f3","can_delete":false,"product_type":"c1","uid":1757482,"ip_address":"","ucode":"8B59B0C29EF88A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIMFaaIb1ZyU6zuYrT2WlD4RrsV2orxLonpIFwsx3ic01OLJ0N4dnSXQ3mFQxnbemiabKDw9810rX4Q/132","comment_is_top":false,"comment_ctime":1594890332,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594890332","product_id":100020801,"comment_content":"请问一下老师，session C 会被 blocked，是因为 session A 的 MDL 读锁还没有释放，而 session C 需要 MDL 写锁，当session C阻塞之后，后面所有的获取读锁的请求都会被阻塞是为啥，读锁和读锁是不互斥的。当有写锁被阻塞之后，影响了后面的读锁，为啥会这样。感觉应该是写锁阻塞之后，后面的写锁还是可以获取到。","like_count":0},{"had_liked":false,"id":234438,"user_name":"frankie","can_delete":false,"product_type":"c1","uid":1794060,"ip_address":"","ucode":"813D1352B68A21","user_header":"https://static001.geekbang.org/account/avatar/00/1b/60/0c/e1f012cb.jpg","comment_is_top":false,"comment_ctime":1594692364,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1594692364","product_id":100020801,"comment_content":"ALTER TABLE tbl_name WAIT N add column 这个在mysql5.7会报错啊","like_count":0,"discussions":[{"author":{"id":1015184,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7d/90/abb7bfe3.jpg","nickname":"fourge","note":"","ucode":"F3E3FFC4990358","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582378,"discussion_content":"wait n和 nowait这个语句格式只是在MariaDB和AliSQL两个开源分支版本支持","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659415045,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233265,"user_name":"海豚","can_delete":false,"product_type":"c1","uid":1060772,"ip_address":"","ucode":"4AC3B788551F00","user_header":"https://static001.geekbang.org/account/avatar/00/10/2f/a4/ff8f912b.jpg","comment_is_top":false,"comment_ctime":1594275291,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594275291","product_id":100020801,"comment_content":"某、人<br>这道题有点意思啊。<br>我刚开始以为就两种情况<br>1.mysqldump正在或者已经备份t1表的数据,此时执行语句alter,那么MDL X锁会被mysqldump开始申请的MDL S锁阻塞,导致之后从库所有操作阻塞<br>2.mysqldump还未备份到t1表,但是alter语句已经执行。那么到备份至t1表时,会报错Table definition has changed(由于重建了表,导致表定义已经发生改变,<br>如果DDL是add index那么就不会报错,因为没有重建表,所以这里也能区分出哪些DDL操作会rebuild哪些不用rebuild table)<br>但是经过测试,是三种情况。mysqldump虽然事务期间一直未提交,但是用了SAVEPOINT, ROLLBACK TO SAVEPOINT,来释放表上MDL S锁。<br>导致在一个事务期间已经备份完的表不会阻塞后续的alter操作<br>以前没仔细看,这下又get到了一个知识点,再次感谢老师。<br><br>老师能解释一下这个吗（mysqldump虽然事务期间一直未提交,但是用了SAVEPOINT, ROLLBACK TO SAVEPOINT,来释放表上MDL S锁。）","like_count":0},{"had_liked":false,"id":233262,"user_name":"海豚","can_delete":false,"product_type":"c1","uid":1060772,"ip_address":"","ucode":"4AC3B788551F00","user_header":"https://static001.geekbang.org/account/avatar/00/10/2f/a4/ff8f912b.jpg","comment_is_top":false,"comment_ctime":1594274333,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594274333","product_id":100020801,"comment_content":"有点不理解为什么还没有拿到MDL写锁的session C为什么会阻塞后续想获取MDL读锁的session D? 这样岂不是吞吐量大打折扣？MDL锁的设计有没有考虑到读者&#47;写者优先的问题呢? 还有一个不明白的地方是，既然session C阻塞了session D，那么等Session A&#47;B释放MDL读锁的时候，Session C应该先解除阻塞才对啊，为什么反而是Session D首先得到了执行呢？<br>作者回复: 5.6是先来先得的，5.7换了策略。<br>我的问题是5.7的策略是？？","like_count":0},{"had_liked":false,"id":232448,"user_name":"海豚","can_delete":false,"product_type":"c1","uid":1060772,"ip_address":"","ucode":"4AC3B788551F00","user_header":"https://static001.geekbang.org/account/avatar/00/10/2f/a4/ff8f912b.jpg","comment_is_top":false,"comment_ctime":1594006156,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1594006156","product_id":100020801,"comment_content":"林老师你好，数据检索走了前缀索引，是不是就无法进行索引下推了？例如：like ‘张%’","like_count":0,"discussions":[{"author":{"id":1015184,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7d/90/abb7bfe3.jpg","nickname":"fourge","note":"","ucode":"F3E3FFC4990358","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582379,"discussion_content":"一样可以，索引下推的目的是在索引遍历的时候进行过滤不符合条件的数据行，减少回表的次数。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659415130,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229212,"user_name":"jun.hai","can_delete":false,"product_type":"c1","uid":1702947,"ip_address":"","ucode":"9740C5118DE6DC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epx1w8VkC30tcu4GlOCkUZB7picI2xesBBZF3rGWVPp9tHZfJdkc5iaqhSg7LOsvtefiajkM1YPno2JA/132","comment_is_top":false,"comment_ctime":1592924060,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1592924060","product_id":100020801,"comment_content":"老师您好，请教个问题，如果数据量大一点(生产1kw+)的表，因业务需求添加新字段，若不停应用服务的情况下，有什么好的方案能平滑的添加新字段么？谢谢","like_count":0,"discussions":[{"author":{"id":1015184,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7d/90/abb7bfe3.jpg","nickname":"fourge","note":"","ucode":"F3E3FFC4990358","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582380,"discussion_content":"没有，升级MySQL8.0版本可以快速加字段，&lt;MySQL5.7也可以在业务低峰期执行，避免对业务影响，通常主要是数据库主从延迟的影响。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659415216,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":228891,"user_name":"柳十三","can_delete":false,"product_type":"c1","uid":1385852,"ip_address":"","ucode":"FE50C9778914C6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/tKvmZ3Vs4t6RZ3X7cAliaW47Zatxhn1aV5PcCYT9NZ9k9WWqRrEBGHicGtRWvsG6yQqHnaWw6cGNSbicNLjZebcHA/132","comment_is_top":false,"comment_ctime":1592834871,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592834871","product_id":100020801,"comment_content":"注意: lock tables … read&#47;write获取X锁，X锁是行锁.获取X锁之前获取IX锁，IX锁是表锁，个人认为应该加上<br>参考:https:&#47;&#47;dev.mysql.com&#47;doc&#47;refman&#47;8.0&#47;en&#47;innodb-locking.html<br>","like_count":0},{"had_liked":false,"id":226362,"user_name":"Geek_63dee3","can_delete":false,"product_type":"c1","uid":2032856,"ip_address":"","ucode":"7F5944EF5ED972","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ2NEZZml3aO7tZ9SpIQLWbFpkfialjoiaQFt79VvbJ2GZ1IytI4SI8owiaUichvX74UOK7SxHf3R8QLw/132","comment_is_top":false,"comment_ctime":1592047694,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592047694","product_id":100020801,"comment_content":"老师，文中例子小表的ddl之所以会卡死整个数据库的资源，是因为session D的读锁一直被session C写锁堵着，然后session D一直被retry，创建了后面无数个读锁被卡，难道这个retry没有次数限制吗？比如说session D读锁一直拿不到，不可以被MySQL的引擎或者background process自己kill掉，然后报错说因为有ddl在执行所以不可读？这样整个数据库就不会因为这么小的事务堵塞而引起崩溃了","like_count":0},{"had_liked":false,"id":225842,"user_name":"zhaozp","can_delete":false,"product_type":"c1","uid":1099706,"ip_address":"","ucode":"BF390F5ED762CD","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/ba/4c449be2.jpg","comment_is_top":false,"comment_ctime":1591871066,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591871066","product_id":100020801,"comment_content":" 文中：<br>session C 会被 blocked，是因为 session A 的 MDL 读锁还没有释放，而 session C 需要 MDL 写锁，因此只能被阻塞。如果只有 session C 自己被阻塞还没什么关系，但是之后所有要在表 t 上新申请 MDL 读锁的请求也会被 session C 阻塞。<br><br>请问下老师：session C不是还被阻塞着的嘛，（应该还没拿到写锁吧），为什么他又能阻塞别的申请读锁的sesssion呢？","like_count":0},{"had_liked":false,"id":225759,"user_name":"图灵机","can_delete":false,"product_type":"c1","uid":2034632,"ip_address":"","ucode":"EB02DB653AD591","user_header":"https://static001.geekbang.org/account/avatar/00/1f/0b/c8/15f055d3.jpg","comment_is_top":false,"comment_ctime":1591847862,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1591847862","product_id":100020801,"comment_content":"实验了一下MDL给小表加字段，真的阻塞了，太神奇了","like_count":0},{"had_liked":false,"id":225738,"user_name":"FL","can_delete":false,"product_type":"c1","uid":1928368,"ip_address":"","ucode":"C82D077D6C2277","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLCKzC0IPq9HSaMiaySKyviaBftvz2EjgqKNCwia9C0xIfYnuE7qntQ6fQ9oL2sEyJGWu0Mmj7EbWicrg/132","comment_is_top":false,"comment_ctime":1591843966,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1591843966","product_id":100020801,"comment_content":"老师 alter table xxx wait N add xxx  int(10); 报错哎 我用的是8.0.17版本","like_count":0,"discussions":[{"author":{"id":1028343,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b0/f7/228a6c37.jpg","nickname":"江湖上","note":"","ucode":"E10516C681EF23","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288223,"discussion_content":"MySQL还不支持这种语法，老师文章里说了的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593682694,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":225237,"user_name":"渭城遇故人","can_delete":false,"product_type":"c1","uid":2017095,"ip_address":"","ucode":"3B7E7B2B5DCB6B","user_header":"https://static001.geekbang.org/account/avatar/00/1e/c7/47/0f99f19d.jpg","comment_is_top":false,"comment_ctime":1591689446,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591689446","product_id":100020801,"comment_content":"“连写 t1 都不允许，自然也不能访问其他表。”您好，文章写了这一句话不是特别清楚，主要是不明白“自然也不能访问其他表”这句话是啥意思，可能自己想偏啦，不知道应该如何理解，真心求教。","like_count":0},{"had_liked":false,"id":223913,"user_name":"丁丁历险记","can_delete":false,"product_type":"c1","uid":1661704,"ip_address":"","ucode":"A43829E454C067","user_header":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","comment_is_top":false,"comment_ctime":1591232035,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1591232035","product_id":100020801,"comment_content":"小白表示好奇，拿出一台从服，断开业务，stop slave  记住pos  ，不就可以开始备份了吗？？","like_count":0,"discussions":[{"author":{"id":1015184,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7d/90/abb7bfe3.jpg","nickname":"fourge","note":"","ucode":"F3E3FFC4990358","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582381,"discussion_content":"那不就是从库延迟了吗？想想如果业务做了读写分离（从库提供业务读功能）或者这个从库参与主从故障切换角色，此时主库挂了，要将这个从库切换成主库角色提供业务读写，业务数据不就丢了一部分吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659415335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":221241,"user_name":"Tweijiao","can_delete":false,"product_type":"c1","uid":1627912,"ip_address":"","ucode":"93D9E78C2AA768","user_header":"https://static001.geekbang.org/account/avatar/00/18/d7/08/185281c6.jpg","comment_is_top":false,"comment_ctime":1590454688,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590454688","product_id":100020801,"comment_content":"读锁之间不互斥，因此你可以有多个线程同时对一张表增删改查。--读锁之间不互斥，不应该是可以有多个线程同时对一张表查？请问为啥还有增删改？","like_count":0},{"had_liked":false,"id":220171,"user_name":"Shrimp","can_delete":false,"product_type":"c1","uid":1991305,"ip_address":"","ucode":"C6F0FA59F9B59C","user_header":"https://static001.geekbang.org/account/avatar/00/1e/62/89/e025c145.jpg","comment_is_top":false,"comment_ctime":1590196363,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590196363","product_id":100020801,"comment_content":"事务隔离级别是可重复读。现在，我要把所有“字段 c 和 id 值相等的行”的 c 值清零，但是却发现改不掉的情况。请你构造出这种情况，并说明其原理。老师这题怎么思考？","like_count":0},{"had_liked":false,"id":220003,"user_name":"f(x)","can_delete":false,"product_type":"c1","uid":1224568,"ip_address":"","ucode":"3680BBD50AFAE4","user_header":"https://static001.geekbang.org/account/avatar/00/12/af/78/07d3e282.jpg","comment_is_top":false,"comment_ctime":1590133758,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590133758","product_id":100020801,"comment_content":"老师，在串行化事务隔离级别下，增删改查都是加表锁吗","like_count":0},{"had_liked":false,"id":219150,"user_name":"小样","can_delete":false,"product_type":"c1","uid":1047127,"ip_address":"","ucode":"0D670431F19A14","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/bOhve1DBV2oShl2JrXDib4J1T7LciagcB8jogD5c7pvt8Zv7Bq23Zfnl70cf2R81r8ia947Hbib9FZia56sdx9wcEibA/132","comment_is_top":false,"comment_ctime":1589956069,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589956069","product_id":100020801,"comment_content":"DML读锁时，dml语句可以做增删改查，ddl会被阻塞<br>DML写锁时，其他的请求都会被阻塞","like_count":0},{"had_liked":false,"id":216560,"user_name":"itschenxiang","can_delete":false,"product_type":"c1","uid":1519547,"ip_address":"","ucode":"7D90194AC52435","user_header":"https://static001.geekbang.org/account/avatar/00/17/2f/bb/4236d712.jpg","comment_is_top":false,"comment_ctime":1589284078,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1589284078","product_id":100020801,"comment_content":"老师，事务的概念到底怎样的？MDL 在 MySQL 的 Server 层实现，但MyISAM引擎不是不支持事务吗？操作MyISAM表时会加MDL锁吗？<br>","like_count":0,"discussions":[{"author":{"id":1015184,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7d/90/abb7bfe3.jpg","nickname":"fourge","note":"","ucode":"F3E3FFC4990358","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582382,"discussion_content":"一样会，MDL锁是在Server层实现，也就是说跟底层的存储引擎类别没有关系，不管是InnoDB还是MyISAM存储引擎。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659415464,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":214705,"user_name":"james","can_delete":false,"product_type":"c1","uid":1049208,"ip_address":"","ucode":"5701899403917C","user_header":"https://static001.geekbang.org/account/avatar/00/10/02/78/23c56bce.jpg","comment_is_top":false,"comment_ctime":1588803232,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588803232","product_id":100020801,"comment_content":"老师 俩问题<br>1.全局锁和表锁都是server层的 行锁是引擎层的吗<br>2.逻辑备份说要全局锁，保证一致性，但是我们java代码中都是开启事务才同时改多表的啊，是原子的，是不是可以不加全局锁了","like_count":0},{"had_liked":false,"id":213819,"user_name":"Jc.Chen","can_delete":false,"product_type":"c1","uid":1180676,"ip_address":"","ucode":"36886491352CD4","user_header":"https://static001.geekbang.org/account/avatar/00/12/04/04/0af56558.jpg","comment_is_top":false,"comment_ctime":1588568187,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1588568187","product_id":100020801,"comment_content":"老师，我这里有些疑惑：<br><br>      “我们可以看到 session A 先启动，这时候会对表 t 加一个 MDL 读锁。由于 session B 需要的也是 MDL 读锁，因此可以正常执行。之后 session C 会被 blocked，是因为 session A 的 MDL 读锁还没有释放，而 session C 需要 MDL 写锁，因此只能被阻塞。<br><br>       如果只有 session C 自己被阻塞还没什么关系，但是之后所有要在表 t 上新申请 MDL 读锁的请求也会被 session C 阻塞。”<br><br>这里说的“如果只有 session C 自己被阻塞还没什么关系，但是之后所有要在表 t 上新申请 MDL 读锁的请求也会被 session C 阻塞”，为什么会这样子呢，在Session C在等待Session A释放，在等待的过程中，说明C没有取到 MDL 的写锁，没取到写锁，后面的session如果执行DML，为什么会被Session C阻塞？","like_count":0,"discussions":[{"author":{"id":1901078,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/02/16/dd5cde99.jpg","nickname":"🤔 🤔 🤔","note":"","ucode":"F1A4B6270675AD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":266522,"discussion_content":"评论去好几个遇到这样的情况，老师也没解答。我也是同样的情况，后来 我感觉，当C D都挂起的时候，CD2个会话并不队列关系（不存在先后），也就是cd都是同时在等待锁，一旦a b释放，cd谁也不让谁，就跟dml的死锁有点像，只有c跟d谁先释放，另外一个会话就能立马执行。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589526002,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":213727,"user_name":"星期八","can_delete":false,"product_type":"c1","uid":1440429,"ip_address":"","ucode":"D8C66E7F61B0D1","user_header":"https://static001.geekbang.org/account/avatar/00/15/fa/ad/3fa02ac7.jpg","comment_is_top":false,"comment_ctime":1588522612,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588522612","product_id":100020801,"comment_content":"1 全局锁 <br>应用 全局备份<br>1.1 myisan ftwrl<br>1.2 set global readonly=on<br>2 表级锁<br>2.1 lock table<br>2.2 mdl<br>读锁和写锁<br>2.3 应用 热点表的表结构修改","like_count":0},{"had_liked":false,"id":207340,"user_name":"winy","can_delete":false,"product_type":"c1","uid":1100612,"ip_address":"","ucode":"04CE142A4426D0","user_header":"https://static001.geekbang.org/account/avatar/00/10/cb/44/22d65cf1.jpg","comment_is_top":false,"comment_ctime":1587050320,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587050320","product_id":100020801,"comment_content":"在评论区看到同学们有说ddl操作online的概念，写锁回降级成读锁，在释放锁之前升级成写锁，是否就可以理解成只要写锁前没有其他线程持有读锁，在ddl操作的时候后面的线程只要全是读就一定不会死锁","like_count":0},{"had_liked":false,"id":205888,"user_name":"学个球","can_delete":false,"product_type":"c1","uid":1019725,"ip_address":"","ucode":"7343F3C0CA981D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8f/4d/65fb45e6.jpg","comment_is_top":false,"comment_ctime":1586751291,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1586751291","product_id":100020801,"comment_content":"“给一个表加字段，或者修改字段，或者加索引，需要扫描全表的数据”，我有点不能理解，给一个表加字段为什么会和表数据有关？<br><br>我的理解是加字段的时候判断一下表中是不是已存在该字段即可，避免重复的字段。应该是 “锁住全表的数据” 而不是“扫描全表的数据”。<br><br>会有知道的同学吗，望解惑。","like_count":0,"discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":242717,"discussion_content":"如果你给加的字段设置了默认值，不扫描全表数据，怎么设置？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587483505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":192710,"user_name":"shiziwen","can_delete":false,"product_type":"c1","uid":1016917,"ip_address":"","ucode":"ADADC770D82D66","user_header":"https://static001.geekbang.org/account/avatar/00/0f/84/55/1e40bd61.jpg","comment_is_top":false,"comment_ctime":1584869178,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584869178","product_id":100020801,"comment_content":"关于上期留的索引问题，是不是c和ca，留任何一个都可以？","like_count":0},{"had_liked":false,"id":191784,"user_name":"单色","can_delete":false,"product_type":"c1","uid":1907486,"ip_address":"","ucode":"A1DA6E497FD74C","user_header":"https://static001.geekbang.org/account/avatar/00/1d/1b/1e/f5c16f7e.jpg","comment_is_top":false,"comment_ctime":1584796515,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584796515","product_id":100020801,"comment_content":"连着几天，一直在看丁老师的专栏，收获多多，对以前不熟悉的的知识点，有了更清晰的认知。喜欢刷优质评论，了解不同的业务场景。","like_count":0},{"had_liked":false,"id":190839,"user_name":"spuryin","can_delete":false,"product_type":"c1","uid":1221753,"ip_address":"","ucode":"17474DCB7D293D","user_header":"https://static001.geekbang.org/account/avatar/00/12/a4/79/35ab3a19.jpg","comment_is_top":false,"comment_ctime":1584697447,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1584697447","product_id":100020801,"comment_content":"5.6版本，对于myisam表，如果对表进行update操作，获取MDL读锁，同是对这个表select，也会获取一个MDL读锁，按文章的说法这里是不互斥的。但是实际操作select操作会卡住，提升wait for table level lock，这是还有什么锁卡住了吗？我理解myisam只支持表级锁，所以update操作会锁表，select会卡住，这里又有点迷糊了","like_count":0,"discussions":[{"author":{"id":2122601,"avatar":"https://static001.geekbang.org/account/avatar/00/20/63/69/e16ed359.jpg","nickname":"木有梦想","note":"","ucode":"6366D107BBA553","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300040,"discussion_content":"我的理解是MyISAM不支持事务,InnoDB支持事务,是可重复读的隔离级别,所以InnoDB的MDL读锁可以多个线程操作增删改查的操作.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597916886,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":189650,"user_name":"运维老胡","can_delete":false,"product_type":"c1","uid":1227007,"ip_address":"","ucode":"DF398BEE296E11","user_header":"https://static001.geekbang.org/account/avatar/00/12/b8/ff/249da6da.jpg","comment_is_top":false,"comment_ctime":1584538380,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584538380","product_id":100020801,"comment_content":"官方自带的逻辑备份工具是 mysqldump。当 mysqldump 使用参数–single-transaction 的时候，导数据之前就会启动一个事务，来确保拿到一致性视图。而由于 MVCC 的支持，这个过程中数据是可以正常更新的。你一定在疑惑，有了这个功能，为什么还需要 FTWRL 呢？一致性读是好，但前提是引擎要支持这个隔离级别。比如，对于 MyISAM 这种不支持事务的引擎，如果备份过程中有更新，总是只能取到最新的数据，那么就破坏了备份的一致性。这时，我们就需要使用 FTWRL 命令了。所以，single-transaction 方法只适用于所有的表使用事务引擎的库。如果有的表使用了不支持事务的引擎，那么备份就只能通过 FTWRL 方法。这往往是 DBA 要求业务开发人员使用 InnoDB 替代 MyISAM 的原因之一。<br>---------------------------------------------------------------------------<br>对这部分内容有疑问，实测在使用FTWRL获取到全局读锁之后，开启了一致性读事务，然后记录binlog位置和文件名，随后就执行了UNLOCK TABLES 释放全局读锁，意味着，对于事务表是保证了同一时间点的备份，对于非事务表是无法保证的，官方文档中的解释也是如此：It was assumed earlier that the tables to back up are InnoDB tables, so --single-transaction uses a consistent read and guarantees that data seen by mysqldump does not change. (Changes made by other clients to InnoDB tables are not seen by the mysqldump process.) If the backup operation includes nontransactional tables, consistency requires that they do not change during the backup. For example, for the MyISAM tables in the mysql database, there must be no administrative changes to MySQL accounts during the backup.但是看文章中老师的意思是对于非事务表，FTWRL保持到了非事务表备份完成才UNLOCK TABLES。这应该是不对的吧，现在疑惑的是，使用mysqldump --single-transaction --master-data=2 备份时，是如何保证事务表和非事务表的在同一时间点的？老师能否详细解答一下。","like_count":0},{"had_liked":false,"id":189108,"user_name":"运维老胡","can_delete":false,"product_type":"c1","uid":1227007,"ip_address":"","ucode":"DF398BEE296E11","user_header":"https://static001.geekbang.org/account/avatar/00/12/b8/ff/249da6da.jpg","comment_is_top":false,"comment_ctime":1584455881,"is_pvip":false,"replies":[{"id":"72960","content":"拷完才unlock 的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1584457313,"ip_address":"","comment_id":189108,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1584455881","product_id":100020801,"comment_content":"2020-03-17T14:11:46.008273Z       216 Query     FLUSH &#47;*!40101 LOCAL *&#47; TABLES<br>2020-03-17T14:11:46.017319Z       216 Query     FLUSH TABLES WITH READ LOCK<br>2020-03-17T14:11:46.018780Z       216 Query     SET SESSION TRANSACTION ISOLATION LEVEL REPEATABLE READ<br>2020-03-17T14:11:46.018840Z       216 Query     START TRANSACTION &#47;*!40100 WITH CONSISTENT SNAPSHOT *&#47;<br>2020-03-17T14:11:46.018912Z       216 Query     SHOW VARIABLES LIKE &#39;gtid\\_mode&#39;<br>2020-03-17T14:11:46.024236Z       216 Query     SELECT @@GLOBAL.GTID_EXECUTED<br>2020-03-17T14:11:46.024447Z       216 Query     SHOW MASTER STATUS<br>2020-03-17T14:11:46.024632Z       216 Query     UNLOCK TABLES<br><br>在使用 mysqldump --single-transaciton 参数备份时，看到general log中日志是这样，疑问：FTWRL获取到全局读锁，能保整备份的一致性，但是对于MyISAM非事务引擎，后面的UNLOCK TABLES是不是会造成非事务表不在同一时间点。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487609,"discussion_content":"拷完才unlock 的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584457313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1227007,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b8/ff/249da6da.jpg","nickname":"运维老胡","note":"","ucode":"DF398BEE296E11","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":207048,"discussion_content":"我一开始理解的也是对于非事务引擎的表也是拷完才UNLOCK TABLES ，但是看general log 确实是 先UNLOCK TABLES，再去创建SAVEPOIONT 然后循环去获取每个库每张表的数据，我的疑问点就是从日志顺序上看确实是先UNLOCK了，这时全局读锁会被释放，请问老师我是哪里理解的不对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584458314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":188869,"user_name":"lison","can_delete":false,"product_type":"c1","uid":1225040,"ip_address":"","ucode":"900FCD4BD518D6","user_header":"https://static001.geekbang.org/account/avatar/00/12/b1/50/678a529b.jpg","comment_is_top":false,"comment_ctime":1584428569,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584428569","product_id":100020801,"comment_content":"老师，如果我同时在多个数据库备份的数据如何保证在同一个事务里面？","like_count":0},{"had_liked":false,"id":186919,"user_name":"火很大先生","can_delete":false,"product_type":"c1","uid":1242070,"ip_address":"","ucode":"80746AFCEF5FE7","user_header":"https://static001.geekbang.org/account/avatar/00/12/f3/d6/5d55c315.jpg","comment_is_top":false,"comment_ctime":1583972718,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1583972718","product_id":100020801,"comment_content":"举个例子, 如果在某个线程 A 中执行 lock tables t1 read, t2 write; 这个语句，则其他线程写 t1、读写 t2 的语句都会被阻塞。同时，线程 A 在执行 unlock tables 之前，也只能执行读 t1、读写 t2 的操作。连写 t1 都不允许，自然也不能访问其他表<br>这个地方有一句话是，“连写t1都不允许“，可是播音员读出来的是，“连读t2都不允许”，这是什么操作呀，播音员都口音，普通话都说不标准就算了，还读错了，怎么和审核过的，自己就不看吗？这个专栏我觉得内容挺好，可是这播音员的素质也太差了吧。能有人给个反馈吗","like_count":0,"discussions":[{"author":{"id":1238436,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e5/a4/e16dca6a.jpg","nickname":"阿凯文","note":"","ucode":"F17CF201E74849","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":279084,"discussion_content":"播音员就是老师本人。。。老师改过文字，但音频无法再重做了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591282094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186550,"user_name":"shiziwen","can_delete":false,"product_type":"c1","uid":1016917,"ip_address":"","ucode":"ADADC770D82D66","user_header":"https://static001.geekbang.org/account/avatar/00/0f/84/55/1e40bd61.jpg","comment_is_top":false,"comment_ctime":1583866326,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1583866326","product_id":100020801,"comment_content":"关于索引的那个问题，是不是c和ca，去掉其中一个，就可以？","like_count":0,"discussions":[{"author":{"id":2873900,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/da/2c/cdd92f3f.jpg","nickname":"wáng","note":"","ucode":"9BFEA73AD7680D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558218,"discussion_content":"是的。去掉ca是因为ca比c占用磁盘空间多。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648136915,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1016917,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/84/55/1e40bd61.jpg","nickname":"shiziwen","note":"","ucode":"ADADC770D82D66","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":211601,"discussion_content":"请问老师能回答一下这个问题吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584868790,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185177,"user_name":"复兴","can_delete":false,"product_type":"c1","uid":1363230,"ip_address":"","ucode":"C172A87873001A","user_header":"https://static001.geekbang.org/account/avatar/00/14/cd/1e/692c3313.jpg","comment_is_top":false,"comment_ctime":1583504792,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1583504792","product_id":100020801,"comment_content":"lock tables … read&#47;write 请问老师，这个读锁和写锁，mysql会自动加上嘛，如果会，是什么时机呢","like_count":0,"discussions":[{"author":{"id":1015184,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7d/90/abb7bfe3.jpg","nickname":"fourge","note":"","ucode":"F3E3FFC4990358","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582383,"discussion_content":"不会，手动加的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659415530,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181412,"user_name":"牟晓宇","can_delete":false,"product_type":"c1","uid":1868825,"ip_address":"","ucode":"EF980465718550","user_header":"","comment_is_top":false,"comment_ctime":1582536724,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582536724","product_id":100020801,"comment_content":"打卡了","like_count":0},{"had_liked":false,"id":180589,"user_name":"乔丹","can_delete":false,"product_type":"c1","uid":1217413,"ip_address":"","ucode":"D832A9F97A0C7E","user_header":"https://static001.geekbang.org/account/avatar/00/12/93/85/f5d9474c.jpg","comment_is_top":false,"comment_ctime":1582343708,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582343708","product_id":100020801,"comment_content":"不看答案，先自己对题目做分析：<br>在innodb的前提下，<br>1. 主表增加列，那么它将用元数据写锁锁住主表。<br>2. 这个时候从表将不能进行从主表读。这个时候从表应该是卡主的现象。<br>","like_count":0},{"had_liked":false,"id":177810,"user_name":"ipofss","can_delete":false,"product_type":"c1","uid":1018620,"ip_address":"","ucode":"DE3061C9259F9E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8a/fc/d1dd57dd.jpg","comment_is_top":false,"comment_ctime":1581505383,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581505383","product_id":100020801,"comment_content":"MySQL的锁有三类：全局锁、表锁、行锁。<br>全局锁有2种形式：Flush tables with read lock(FTWRL)和readonly，主要用作备份使用，不建议使用readonly。<br>表锁有2种：lock tables ... read&#47;write，用unlock tables主动释放锁，和MDL(元数据)锁。MDL锁不需要显示使用，但引擎得支持事务。DML操作会默认申请MDL读锁，DDL操作会默认申请MDL写锁。","like_count":0},{"had_liked":false,"id":177627,"user_name":"SnowsonZ","can_delete":false,"product_type":"c1","uid":1446972,"ip_address":"","ucode":"5AF76D55CCDC8F","user_header":"https://static001.geekbang.org/account/avatar/00/16/14/3c/d6be29f3.jpg","comment_is_top":false,"comment_ctime":1581437105,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581437105","product_id":100020801,"comment_content":"Day5: 同步<br><br>锁的类型： 全局锁，表级锁，行锁<br><br>全局锁： 用于数据库逻辑备份，对于支持可重复读事务支持的引擎，使用single-transaction，可实现在加全局锁时数据可以正常更新。<br><br>表级锁： <br>   表锁。会阻塞本线程及其他线程的操作，如果有行级锁尽量不使用；<br>   元数据锁，数据库控制加锁与释放。对表增删改查时加读锁，表结构变化时加写锁。因为锁会在整个事务提交后释放，所以在DDL变更时避免出现阻塞，需要先kill掉DDL相关的长事务，然后进行更新。如果事务执行频繁，先尝试去过去MDL锁，但即使获取不到，也不能阻塞正常的事务进行。","like_count":0},{"had_liked":false,"id":176897,"user_name":"月迷津渡","can_delete":false,"product_type":"c1","uid":1264111,"ip_address":"","ucode":"2B18B2FE3DAC3B","user_header":"https://static001.geekbang.org/account/avatar/00/13/49/ef/02401473.jpg","comment_is_top":false,"comment_ctime":1581218297,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581218297","product_id":100020801,"comment_content":"今天的这两种表锁都是引擎层做的吗？如果是每个引擎的实现会不一致？","like_count":0},{"had_liked":false,"id":176730,"user_name":"kkk100","can_delete":false,"product_type":"c1","uid":1058666,"ip_address":"","ucode":"4F1887C49556DE","user_header":"https://static001.geekbang.org/account/avatar/00/10/27/6a/34cf9522.jpg","comment_is_top":false,"comment_ctime":1581151149,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1581151149","product_id":100020801,"comment_content":"分页查询过程中，如果删了了满足条件的记录，查询结果会变化吗？","like_count":0,"discussions":[{"author":{"id":1058666,"avatar":"https://static001.geekbang.org/account/avatar/00/10/27/6a/34cf9522.jpg","nickname":"kkk100","note":"","ucode":"4F1887C49556DE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":165675,"discussion_content":"哪位高人回答下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581313376,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":176493,"user_name":"张汉桂-东莞","can_delete":false,"product_type":"c1","uid":1116277,"ip_address":"","ucode":"38657ABA59382A","user_header":"https://static001.geekbang.org/account/avatar/00/11/08/75/512b9f26.jpg","comment_is_top":false,"comment_ctime":1581071693,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581071693","product_id":100020801,"comment_content":"应该是备份没有包含新增的字段。我通常涉及到表结构变更都是变更前和变更后都做一次全量备份。","like_count":0},{"had_liked":false,"id":173590,"user_name":"dingsai88","can_delete":false,"product_type":"c1","uid":1029484,"ip_address":"","ucode":"A725428A983ADC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b5/6c/617c0193.jpg","comment_is_top":false,"comment_ctime":1579602344,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579602344","product_id":100020801,"comment_content":"不是session C的事务已经阻塞了，MDL写锁还没有获取到啊，怎么还会阻塞Session D的读操作？？？不解","like_count":0},{"had_liked":false,"id":169898,"user_name":"向往的生活","can_delete":false,"product_type":"c1","uid":1397298,"ip_address":"","ucode":"0E8DB45357820F","user_header":"https://static001.geekbang.org/account/avatar/00/15/52/32/bb570f48.jpg","comment_is_top":false,"comment_ctime":1578469877,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1578469877","product_id":100020801,"comment_content":"对文中的小栗子有点疑问，给一个小表添加字段的时候，sessionC阻塞可以理解，怎么sessionD也会阻塞，读锁不是不互斥么？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138340,"discussion_content":"但是这是对同一个表进行写锁操作了，写锁是读写锁互斥的，后面即使是读的话，是不是也得等写锁释放了，才能获取读锁。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579236932,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169136,"user_name":"这只鸟不会飞","can_delete":false,"product_type":"c1","uid":1434241,"ip_address":"","ucode":"91702816C61DD3","user_header":"https://static001.geekbang.org/account/avatar/00/15/e2/81/2cbb88b1.jpg","comment_is_top":false,"comment_ctime":1578279126,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1578279126","product_id":100020801,"comment_content":"我觉得备库使用-single-transaction后开启了事务， 主库的DDL操作将会被同步到备库","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138341,"discussion_content":"不会的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579236943,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":165085,"user_name":"傻傻的帅","can_delete":false,"product_type":"c1","uid":1668617,"ip_address":"","ucode":"14A795523A682E","user_header":"https://static001.geekbang.org/account/avatar/00/19/76/09/62a10668.jpg","comment_is_top":false,"comment_ctime":1577158004,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577158004","product_id":100020801,"comment_content":"还做了一个实验：<br>mysql版本：5.7.20<br>autocommit=on<br>transaction-isolation=repeatable-read<br><br>sessionA: begin;select * from t;<br>sessionB:  begin;select * from t;<br>sessionC:  alter table t add qq varchar(10);<br>sessionD:  begin;select * from t;<br>sessionE:   alter table t drop column qq;<br><br>1、sessionA执行(正常);<br>2、sessionB执行(正常);<br>3、sessionC执行(阻塞)<br>4、sessionD执行(正常)<br>5、sessionE执行(阻塞)<br><br>在没有sessionE的时候，sessionA提交后，sessionC执行，这时再查询sessionB提错(ERROR 1412 (HY000): Table definition has changed, please retry transaction)，感觉应该这时表上的mdl读锁释放了,或是读有没有过期一说？结果 就是在本次事务不能再对表T进行查询，必须重启一个事务；<br>在有sessionE的时候，sessionA提交后，sessionC仍然处于阻塞状态，sessionE也是处于阻塞状态；然后提交sessionB,这时sessionC、sessionE正常执行，而且没有报错(也就是存在一个锁等待队列，按先进先出的顺序拿mdl写锁，然后执行)；这种情况下，为什么需要sessionA和sessionB都提交后，sessionC和sessionE才能执行？而没有sessionE的情况下，只要sessionA提交，sessionC就可以执行了？","like_count":0},{"had_liked":false,"id":165079,"user_name":"傻傻的帅","can_delete":false,"product_type":"c1","uid":1668617,"ip_address":"","ucode":"14A795523A682E","user_header":"https://static001.geekbang.org/account/avatar/00/19/76/09/62a10668.jpg","comment_is_top":false,"comment_ctime":1577156933,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577156933","product_id":100020801,"comment_content":"接上一条留言，找了很久没找到，，<br>我的版本:5.7.20<br>autocommit=on <br>transaction-isolation=repeatable-read<br><br>sessionA、B先后执行，由于是读，拿的MDL读锁，不阻塞；sessionC是修改表结构，需要表的MDL写锁，因为MDL读写到斥，所以sessionC阻塞，sessionD 需要mdl读锁，在此时没有被阻塞，正常返回查询结果(此和文本中第一个不同点)；<br>然后commit了session A ,结果session C 拿到了mdl 写锁，语句执行了，此时再在sessionB中查询，此时报错：<br>Database changed<br>mysql&gt; begin;<br>Query OK, 0 rows affected (0.00 sec)<br><br>mysql&gt; select * from t;<br>+------+------+------+<br>| id   | name | tel  |<br>+------+------+------+<br>|    1 | a    | NULL |<br>|    2 | b    | NULL |<br>+------+------+------+<br>2 rows in set (0.00 sec)<br><br>mysql&gt; select * from t;<br>ERROR 1412 (HY000): Table definition has changed, please retry transaction<br>这个版本的mdl锁策略发生了改变(这是老师给其他同学留言中看到的),我想问的是，5.7.20版本的mdl锁策略现在是怎么样的？（所有查询共享一个mdl读锁？所有写锁进入锁等待队列，等到读锁释放，依次出队？）","like_count":0},{"had_liked":false,"id":161820,"user_name":"Kyrie","can_delete":false,"product_type":"c1","uid":1183423,"ip_address":"","ucode":"C548CB78393159","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLAqN8yGhXKdbmiaewYGaTtKGYgy8d691LOCRJdDbfW8hDFM5HagwvTJup9p5mNjoPyl0cvapHEyWA/132","comment_is_top":false,"comment_ctime":1576339810,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1576339810","product_id":100020801,"comment_content":"老师，您好 我想请教个问题<br>mysql的乐观锁 悲观锁 还有MVCC有什么关系？<br>我们数据库默认隔离级别是RR 数据库如果默认是用的是乐观锁的的话，我同时开两个事务 对同一条记录，先后update，后update的那个事务需要等锁。。但是乐观锁又不需要锁，这里很不解，希望老师能解答下哈","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138345,"discussion_content":"乐观锁是不需要锁，但是最后提交的时候需要判断吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579237085,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":157555,"user_name":"James","can_delete":false,"product_type":"c1","uid":1134861,"ip_address":"","ucode":"48B0F2A334D1C1","user_header":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","comment_is_top":false,"comment_ctime":1575192850,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1575192850","product_id":100020801,"comment_content":"请问老师. 定义为(c,b）的索引，实际上是（c,b,a)<br>为啥不是(c,b,a,b)呢<br>其他情况可以理解.","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138346,"discussion_content":"你想干嘛，错乱了是不是。哈哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579237112,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156989,"user_name":"James","can_delete":false,"product_type":"c1","uid":1134861,"ip_address":"","ucode":"48B0F2A334D1C1","user_header":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","comment_is_top":false,"comment_ctime":1575009457,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1575009457","product_id":100020801,"comment_content":"–c--|–a--|–主键部分b-- （注意，这里不是 ab，而是只有 b）<br>–c--|–b--|–主键部分a-- （同上）<br>请问下,为啥只有主键部分a,是因为cb中已经有部分b了吗<br>","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138350,"discussion_content":"因为非主键索引的叶子节点value部分存的是主键，所以，ca做索引，会caab，再将主键去重，会cab，如此看来，那就直接建立C索引，ca索引没必要留了，还省空间。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579237256,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153769,"user_name":"Geek_b3a962","can_delete":false,"product_type":"c1","uid":1681844,"ip_address":"","ucode":"AC51C9390D32FB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ZccFBM9wqKWZAicq7rN3tJGaibD9y0d6THJ1lknOGpdCQUjgU85W2XvibxTcaXHPhnRdjPstTamVVJFo2WRibRNB6A/132","comment_is_top":false,"comment_ctime":1574304655,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1574304655","product_id":100020801,"comment_content":"有个问题，为啥sessionA读锁没释放，sessionD的读操作也会被阻塞？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138352,"discussion_content":"因为你的写锁在等着a的读锁释放，而D的读锁发生在C会话之后。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579237293,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151869,"user_name":"别天神","can_delete":false,"product_type":"c1","uid":1107606,"ip_address":"","ucode":"42A08D6EF5C59A","user_header":"https://static001.geekbang.org/account/avatar/00/10/e6/96/eb143e46.jpg","comment_is_top":false,"comment_ctime":1573802773,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1573802773","product_id":100020801,"comment_content":"session A没有释放MDL读锁，session C获取MDL写锁会被阻塞，我不明白的是：此时session C还没有成功拿到写锁，为什么后面的查询操作也会被阻塞？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138353,"discussion_content":"对的，锁对列，因为写锁是要影响读写锁的，c是写锁，那后面的读锁也肯定要挂腊肠了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579237342,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1467758,"avatar":"https://static001.geekbang.org/account/avatar/00/16/65/6e/8b74b1b0.jpg","nickname":"菜鸟成神之路","note":"","ucode":"7C4ACBE03F6C8F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":55753,"discussion_content":"上面评论有说，因为锁队列","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574394922,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151725,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1573781977,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573781977","product_id":100020801,"comment_content":"原来mysqldump有参数实现一致性读，由于dump是导出数据，只读取，所以不会影响DB的写入，对于线上表的dump，这个参数非常重要，因为线上表的数据是不断变化的。我们导出时，希望数据一致。<br>由于是在事务中，会加MDL读锁，会阻塞对表的修改，要保证dump时不会有其它连接修改表结构","like_count":0},{"had_liked":false,"id":148004,"user_name":"无事小思","can_delete":false,"product_type":"c1","uid":1201981,"ip_address":"","ucode":"0E25135820DCE2","user_header":"https://static001.geekbang.org/account/avatar/00/12/57/3d/e4fa7da1.jpg","comment_is_top":false,"comment_ctime":1572927262,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572927262","product_id":100020801,"comment_content":"查询语句的索引选择逻辑是怎么样的？<br>例子：<br>1. explain  select * from geek where c=1 order by b;<br>结果为：<br>id\tselect_type\ttable\ttype\tpossible_keys\tkey\tkey_len\tref\trows\tExtra<br>1\tSIMPLE\tgeek\tref\tc,c_b\tc\t4\tconst\t1\tUsing where; Using filesort<br>可以看到possible_keys为c,c_b使用的是索引c而不是选择使用索引c_b，这是个什么选择逻辑？<br>2. explain  select * from geek use index (c_b) where c=1 order by b; <br>只有指定索引之后才会使用索引c_b，extra 直接使用索引排序而不是使用use filesort<br>结果：<br>id\tselect_type\ttable\ttype\tpossible_keys\tkey\tkey_len\tref\trows\tExtra<br>1\tSIMPLE\tgeek\tref\tc_b\tc_b\t4\tconst\t1\tUsing where<br><br>希望能得到解答 谢谢","like_count":0},{"had_liked":false,"id":147340,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1572860004,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572860004","product_id":100020801,"comment_content":"老师，我之前遇到一个问题，求教。给一张小表A（表中记录数很少）加字段name，hang住了，用processlist查看，提示waiting for MDL，但innodb_trx表为空，我查evevts_statements_current表，里面发现一条之前的查询错误记录，提示A表没有age字段。我把这条记录对应的进程kill掉后，再执行插入就成功了。我的理解是：这条错误的查询应该是一个未提交的事务吧，如果是的话，为何innodb_trx中没有记录呢","like_count":0},{"had_liked":false,"id":145237,"user_name":"yc","can_delete":false,"product_type":"c1","uid":1670122,"ip_address":"","ucode":"2E01505284DC4E","user_header":"https://static001.geekbang.org/account/avatar/00/19/7b/ea/a64f7822.jpg","comment_is_top":false,"comment_ctime":1572234635,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1572234635","product_id":100020801,"comment_content":"老师这里好像没有说到，当update时索引不匹配也会锁全表","like_count":0,"discussions":[{"author":{"id":1323652,"avatar":"","nickname":"sibyl","note":"","ucode":"0D142011860D69","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298319,"discussion_content":"索引不匹配什么意思呢？\n\n比如有普通索引或者唯一索引a ，sql是 update f = 1 where a = 100，\n假设当前a的最大值是90，那么100不存在，锁的是是[90，supremum] 或者说（90，正无穷]","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597244466,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1467758,"avatar":"https://static001.geekbang.org/account/avatar/00/16/65/6e/8b74b1b0.jpg","nickname":"菜鸟成神之路","note":"","ucode":"7C4ACBE03F6C8F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":55755,"discussion_content":"一行一行的对所有的行加了行锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574395098,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144402,"user_name":"未来怎样","can_delete":false,"product_type":"c1","uid":1652085,"ip_address":"","ucode":"4E54EB62595B27","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKORTofsU89GYKtywquzKuEiabvZnEOonfMYKuCPlo8GDlXqZuJdBicu0XtlaeodH4BnmHV1kldSAwQ/132","comment_is_top":false,"comment_ctime":1571911819,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571911819","product_id":100020801,"comment_content":"老师，你说ca的树结构和c的是一致的，这一点我有点疑问，当使用ca的时候，是按照你上面给我的顺序，这点能理解，但是当只有c的时候如何能保证是3 1 2 和 3 2 1的顺序呢？","like_count":0},{"had_liked":false,"id":143735,"user_name":"幼儿编程教学","can_delete":false,"product_type":"c1","uid":1237199,"ip_address":"","ucode":"F13F3150E6CAE9","user_header":"https://static001.geekbang.org/account/avatar/00/12/e0/cf/43f201f2.jpg","comment_is_top":false,"comment_ctime":1571784783,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1571784783","product_id":100020801,"comment_content":"老师，现在MySQL8，加字段都是秒级的。那是因为改进了哪一部分?这个mdl应该还是存在的，是吧?","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138355,"discussion_content":"存在，应该是有快速加字段功能吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579237450,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143601,"user_name":"斐波那契","can_delete":false,"product_type":"c1","uid":1464006,"ip_address":"","ucode":"85E2EBC01392B1","user_header":"https://static001.geekbang.org/account/avatar/00/16/56/c6/0b449bc6.jpg","comment_is_top":false,"comment_ctime":1571741593,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1571741593","product_id":100020801,"comment_content":"老师 想问个问题 作为数据库带锁 程序本身也有锁的应用 那对于并发来说是用数据库的锁好还是在底层后台用编程语言的锁来控制并发好呢 望老师给点建议","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138356,"discussion_content":"能用程序控制住的，尽量不要让异常发生在数据层面，以减少数据库压力。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1579237498,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142435,"user_name":"飞翔","can_delete":false,"product_type":"c1","uid":1303038,"ip_address":"","ucode":"30D659BD4BD0AA","user_header":"","comment_is_top":false,"comment_ctime":1571368180,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571368180","product_id":100020801,"comment_content":"&quot;ps 定义为(c,b）的索引，实际上是（c,b,a)&quot;，这个不太理想，为什么主健还能反过来放，如果定义一个索引叫c,b，那它会不会是保存了：c,b,a,b呢？，如果说只是保存了（c,b,a)，说明做了优化，特别处理了？","like_count":0},{"had_liked":false,"id":139918,"user_name":"wu","can_delete":false,"product_type":"c1","uid":1537426,"ip_address":"","ucode":"136FABF86EA66A","user_header":"https://static001.geekbang.org/account/avatar/00/17/75/92/fc393653.jpg","comment_is_top":false,"comment_ctime":1570765825,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570765825","product_id":100020801,"comment_content":"针对MDL锁，我突然去oracle实验了下，过程如下：<br>会话A：update t set user_id = user_id +0 where user_id &lt;=30;<br>会话B：alter table t add col1 number;  --该语句被阻塞了<br>会话C：select count(*) from t; --可以正常获取结果<br>             update t set user_id = user_id +0 where user_id &gt;30; --也可以正常更新<br>             select col1 from t;  --报错，&quot;COL1&quot;: invalid identifier<br>问题就在会话C对于元数据锁处理的不同，oracle那边因为会话B还没执行，所以对于会话C来说，其上面是不存在元数据写锁的，不需要排队，也是同时有很多语句其实是不涉及新加的列的，并发性会较好。而mysql这边却需要等待会话B的写锁，这样设计的意义在哪里，和oracle比较的话，感觉oracle那种方式更好一些。","like_count":0},{"had_liked":false,"id":138118,"user_name":"为你写下天边的眷顾","can_delete":false,"product_type":"c1","uid":1305110,"ip_address":"","ucode":"E09C81804F6D44","user_header":"https://static001.geekbang.org/account/avatar/00/13/ea/16/0eb1cc5a.jpg","comment_is_top":false,"comment_ctime":1570028671,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570028671","product_id":100020801,"comment_content":"老师有没有好的分库分表案例以及pxc案例","like_count":0},{"had_liked":false,"id":137944,"user_name":"左琪","can_delete":false,"product_type":"c1","uid":1468773,"ip_address":"","ucode":"6B797070168A12","user_header":"https://static001.geekbang.org/account/avatar/00/16/69/65/eb778125.jpg","comment_is_top":false,"comment_ctime":1569933018,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1569933018","product_id":100020801,"comment_content":"对于上一期的问题，为啥索引c和索引c，a是等价，索引c的非叶子节点不是只有c么，而索引c，a非叶子节点会有c，a呀，怎么会是等价的呢","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138357,"discussion_content":"这个你可以再看看索引上下集。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579237534,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135937,"user_name":"stephen","can_delete":false,"product_type":"c1","uid":1313562,"ip_address":"","ucode":"68BEAF653814E7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/eyzvWHuvEwziby6ZsvRhF0l174d3jFZ4gRjOrUzX6uVRP2DLiaAnBVLzaia8ayaPRIhHYnnOusd2XB6wYDAscGIMA/132","comment_is_top":false,"comment_ctime":1569309529,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569309529","product_id":100020801,"comment_content":"我用mariadb 10.4.8测试刚才的mdl效果不同：<br>1. 先这样测试：<br>    session A: begin; select * from T limit 1;<br>    session B: select * from T limit 1; 正常执行，不阻塞<br>    session C: alter table T add f int; 阻塞<br>    session D: select * from T limit 1; 正常执行，不阻塞<br>和上面的结果不同，然后我看了上面的留言，发现，和我的不同，然后我又按照如下的测试了一遍：<br>    session A: begin; select * from T limit 1;<br>    session B: begin; select * from T limit 1; 正常执行，不阻塞<br>    session C: begin; alter table T add f int; 阻塞<br>    session D: begin; select * from T limit 1; 正常执行，不阻塞<br>和上面的测试相同，但是当我在session A或者session B中输入commit的时候都能触发session C的阻塞继续执行。<br>    这里有如下疑问：mariadb难道做了优化，如持有读锁，未释放，写锁则阻塞，后续的读锁，不阻塞？<br>     读锁对于所有的session一个表只有一个，事务无论谁提交了，都能解读锁，所以后面的试验无论提交A还是B事务，都会触发解读锁，C事物写锁获取到，向下执行。<br>","like_count":0},{"had_liked":false,"id":135479,"user_name":"生命练习生","can_delete":false,"product_type":"c1","uid":1108066,"ip_address":"","ucode":"BCDA541EE0DB54","user_header":"https://static001.geekbang.org/account/avatar/00/10/e8/62/2333d77a.jpg","comment_is_top":false,"comment_ctime":1569194539,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1569194539","product_id":100020801,"comment_content":"MDL锁和读写意向锁是什么关系，读写意向锁也是在做DML操作时候加的锁","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138359,"discussion_content":"意向锁是表级锁，是实现在Innodb 的。有了mdl锁你可以不用关注意向锁了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579237644,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131064,"user_name":"Geek_b74670","can_delete":false,"product_type":"c1","uid":1649282,"ip_address":"","ucode":"083AF837FB0112","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLGAV2NgUo0VVNjiagIJCZmPHvogtAJcUib6icLCbR4vcvfziashHZjpZ0FUxSdawFnHGUSmIaePvDaWQ/132","comment_is_top":false,"comment_ctime":1567619632,"is_pvip":true,"discussion_count":2,"race_medal":0,"score":"1567619632","product_id":100020801,"comment_content":"关于读锁和写锁有个问题咨询下，本文所述&quot;<br>读锁之间不互斥，因此你可以有多个线程同时对一张表增删改查&quot;，在其他资料描述中（<br>https:&#47;&#47;www.aneasystone.com&#47;archives&#47;2017&#47;11&#47;solving-dead-locks-two.html），都提及读锁是不能写表的，是不是和本文描述的读锁不一致呢？","like_count":0,"discussions":[{"author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":10182,"discussion_content":"1. 你引用的文章里面提到了这句话: lock table products read, orders read;  \n这句话说的意思就是当然线程拿到了products的读锁，以及orders的读锁，对这2个表只有读的权限，没写的权限。当然当前线程对别的表更啥权限(读写)也没有.\n2. 读锁之间不互斥，因此你可以有多个线程同时对一张表增删改查。这个说的是mdl锁，你引用的文章里面说的是lock table锁，2个不同的东西。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1568272936,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":10184,"discussion_content":"3. 如果是lock table这种表锁的话，不同的线程对同一个表的读写是互斥的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568273137,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130961,"user_name":"Geek_b74670","can_delete":false,"product_type":"c1","uid":1649282,"ip_address":"","ucode":"083AF837FB0112","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLGAV2NgUo0VVNjiagIJCZmPHvogtAJcUib6icLCbR4vcvfziashHZjpZ0FUxSdawFnHGUSmIaePvDaWQ/132","comment_is_top":false,"comment_ctime":1567584423,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1567584423","product_id":100020801,"comment_content":"可以对mysql的锁机制单独写一篇详细的文章不？好几篇文章提到了不同的锁概念","like_count":0},{"had_liked":false,"id":127135,"user_name":"七号叽","can_delete":false,"product_type":"c1","uid":1235812,"ip_address":"","ucode":"0CB7E5C3297511","user_header":"https://static001.geekbang.org/account/avatar/00/12/db/64/f9628492.jpg","comment_is_top":false,"comment_ctime":1566567181,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1566567181","product_id":100020801,"comment_content":"老师你好，关于MDL读锁把写锁阻塞后，之后的MDL读锁也会被阻塞的例子，我在MySQL 8.0.17版本上也复现了评论中说的问题：线程D的select会在线程A和线程B提交后被执行，只有线程D提交之后，线程C的alter table才会被执行；但是似乎老师之后没有答复这个问题（可能我看漏了...?）。<br>我尝试使用Profile查看语句执行情况，发现alter table的锁等待是通过每次执行一秒，未成功拿到锁将会进行重试这样的逻辑执行的；我尝试阅读代码，确实发现有这样的逻辑（没深究没有看懂进入条件或者是alter table怎么走进来的，但是根据performance_schema.event_stages_history的source找到是这里[mdl.cc:timed_wait()]输出profile的）。不知道这样的执行情况会不会和这个逻辑相关？<br>因为不知道怎么着手看源码，目前还没能看懂代码里面对锁等待的实现，比如锁是怎么做到在可以申请到锁的时候继续执行的。<br>不知道这里面的问题是否可以解答一下，谢谢！","like_count":0,"discussions":[{"author":{"id":1235812,"avatar":"https://static001.geekbang.org/account/avatar/00/12/db/64/f9628492.jpg","nickname":"七号叽","note":"","ucode":"0CB7E5C3297511","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6040,"discussion_content":"今天再看了一下，sys.schema_table_lock_waits这个视图，显示alter table的线程block pid分别是线程a、线程b和自己线程c，后来提交线程a、c、d之后这个视图显示alter table的block pid是自己线程c和线程d，不知道这个现象会不会和导致上面说的执行情况有关？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566636149,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126613,"user_name":"军","can_delete":false,"product_type":"c1","uid":1103051,"ip_address":"","ucode":"A93C8C998D9B6C","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/cb/b07f99d4.jpg","comment_is_top":false,"comment_ctime":1566436360,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1566436360","product_id":100020801,"comment_content":"我觉得Session C还没有真的拿到MDL写锁,按理说不会阻塞Session D的，应该是session D先获取到MDL读锁，不会被阻塞。","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138367,"discussion_content":"会话d是在会话c之后的，这个c没拿到，说明c没发生呢，d也没发生呢，这是有场景的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579238766,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124886,"user_name":"天王","can_delete":false,"product_type":"c1","uid":1239337,"ip_address":"","ucode":"C074B2F9A5F007","user_header":"https://static001.geekbang.org/account/avatar/00/12/e9/29/629d9bb0.jpg","comment_is_top":false,"comment_ctime":1566008350,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566008350","product_id":100020801,"comment_content":"数据库的锁，分成3级，全局锁，表锁和行锁，1 全局锁，1.1是对数据库实例加锁，flush tables with read lock ，FTWRL 只能读，库处于readonly状态，保证拿到一致性视图，1.2 FTWRL支持innodb和myisam引擎，官方自带的mysqldump不支持myisam引擎，1.3 set global readonly=true 一般不推荐使用，一是一般用这个判断做只读库判断 二是FTWRL当客户端连接超时，会切换成读写状态 而set global不行 1.4设置只读之后DML和DDL都不行2 表级锁有两种，一种是表锁，一种是元数据锁 meta data lock MDL，2.1 lock table .. read&#47;write，read是说拿到了读锁，自己和其他线程都只能读，write是当前线程拿到了读写锁，能读写，其他线程不可以读写。2.2 MDL锁 当对表做增删改查的时候加MDL读锁，当改表结构的时候加MDL写锁，读锁之间不互斥，读写锁和写锁之间互斥，小表加字段，导致整个库挂掉，读写频繁的小表，select读锁，然修改表结构会持有MDL写锁，会等待，如果还有后续的读操作，也会读等待，如果客户端有重试操作，会导致线程爆满。如何加这字段，加字段设定等待时间，alter table wait n add column。","like_count":0},{"had_liked":false,"id":124203,"user_name":"不工","can_delete":false,"product_type":"c1","uid":1462843,"ip_address":"","ucode":"A8725E6D0E1765","user_header":"https://static001.geekbang.org/account/avatar/00/16/52/3b/f1501d79.jpg","comment_is_top":false,"comment_ctime":1565834292,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565834292","product_id":100020801,"comment_content":"MDL的读写锁和一般的读写锁（增，删改是加写锁）有什么区别？这两种锁先后顺序是什么","like_count":0},{"had_liked":false,"id":124190,"user_name":"不工","can_delete":false,"product_type":"c1","uid":1462843,"ip_address":"","ucode":"A8725E6D0E1765","user_header":"https://static001.geekbang.org/account/avatar/00/16/52/3b/f1501d79.jpg","comment_is_top":false,"comment_ctime":1565833338,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1565833338","product_id":100020801,"comment_content":"mvcc和锁什么关系，mvcc不是也能做并发控制吗？还有写锁block了，读锁就进行不下去了吗？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138370,"discussion_content":"两个层面的东西。写锁block，读锁是进行不下去的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579238922,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123712,"user_name":"木子","can_delete":false,"product_type":"c1","uid":1390997,"ip_address":"","ucode":"66B9C493F25B11","user_header":"https://static001.geekbang.org/account/avatar/00/15/39/95/a72ef023.jpg","comment_is_top":false,"comment_ctime":1565746076,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1565746076","product_id":100020801,"comment_content":"老师你好，MYSQL不支持 nowait &#47; wait n 语法，那么mysql又如何给大表 热表添加字段来避免数据库挂掉呢？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138371,"discussion_content":"可以用ghost，或者8.0的快速加字段。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579238973,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121275,"user_name":"我家门前有只猪","can_delete":false,"product_type":"c1","uid":1488035,"ip_address":"","ucode":"F8CF618CF4681E","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/a3/a159ca86.jpg","comment_is_top":false,"comment_ctime":1565092385,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1565092385","product_id":100020801,"comment_content":"MDL读锁之间不互斥，那一个线程在增删改，一个线程在查。这样不是也不准确吗","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138372,"discussion_content":"是对于表而言，如果你要对一行数据同时操作，那肯定是互斥的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579239014,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120471,"user_name":"胡小禾","can_delete":false,"product_type":"c1","uid":1132315,"ip_address":"","ucode":"1C23B7492C0C9E","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/1b/64262861.jpg","comment_is_top":false,"comment_ctime":1564909394,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1564909394","product_id":100020801,"comment_content":"全局锁，不是针对 schema ，而是实例？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138373,"discussion_content":"有啥区别？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579239049,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119085,"user_name":"跃文","can_delete":false,"product_type":"c1","uid":1019868,"ip_address":"","ucode":"F3F7C4A965E47F","user_header":"","comment_is_top":false,"comment_ctime":1564500825,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1564500825","product_id":100020801,"comment_content":"关于 Session C 和 Session D 获取锁的优先级问题 好像没有看到后续的回复？ 求解惑。 是5.7 修改了实现吗？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138377,"discussion_content":"c会话释放，d获取啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579239071,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118603,"user_name":"尔冬橙","can_delete":false,"product_type":"c1","uid":1225224,"ip_address":"","ucode":"0B013A49BC18DA","user_header":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","comment_is_top":false,"comment_ctime":1564394416,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1564394416","product_id":100020801,"comment_content":"老师，MDL的阻塞模式和java里的读写锁模式好像不太一样，java里获取不到写锁会进入写锁的等待队列，但是后面的线程还是能继续读的","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138379,"discussion_content":"怎么可能。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579239146,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118602,"user_name":"尔冬橙","can_delete":false,"product_type":"c1","uid":1225224,"ip_address":"","ucode":"0B013A49BC18DA","user_header":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","comment_is_top":false,"comment_ctime":1564394303,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1564394303","product_id":100020801,"comment_content":"例子里，session C阻塞时是已经拿到了写锁了？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138381,"discussion_content":"如果它没拿到说明b没提交事务呢。如果拿到了，那说明DDL操作时间长而阻塞。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579239217,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118587,"user_name":"尔冬橙","can_delete":false,"product_type":"c1","uid":1225224,"ip_address":"","ucode":"0B013A49BC18DA","user_header":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","comment_is_top":false,"comment_ctime":1564392647,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1564392647","product_id":100020801,"comment_content":"MDL读锁之间不互斥，因此你可以有多个线程同时对一张表增删改查。这句话是不是有问题，加读锁只能保证同时读吧<br><br>","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138383,"discussion_content":"可以对表进行CRUD，没有说同时对表中某一行进行CRUD，想象理解一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579239266,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117487,"user_name":"王保安","can_delete":false,"product_type":"c1","uid":1165065,"ip_address":"","ucode":"758DA5B5D626D9","user_header":"https://static001.geekbang.org/account/avatar/00/11/c7/09/ba838a61.jpg","comment_is_top":false,"comment_ctime":1564058642,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1564058642","product_id":100020801,"comment_content":"请问老师，我把一个库的数据，全搞到另外一个库里，怎么最快呢，有几个千万级的大表。mysql","like_count":0,"discussions":[{"author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":10187,"discussion_content":"binlog?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568273559,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116390,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1563846062,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1563846062","product_id":100020801,"comment_content":"从MDL看出长事务的坏处了，因为DML和DDL互斥。老师，我有个问题：大表加字段挺耗时的，记得之前工作有个表上千万行，当时加字段好像耗时10多秒，那这其间，所以DML都被阻塞了吗？","like_count":0,"discussions":[{"author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":10189,"discussion_content":"肯定的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568273653,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1019332,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","nickname":"长期规划","note":"","ucode":"5EF65E9115834B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":15259,"discussion_content":"谢谢哈，那这样的话，大表怎么加字段又不影响线上服务呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568813023,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":10189,"ip_address":""},"score":15259,"extra":""},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1019332,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","nickname":"长期规划","note":"","ucode":"5EF65E9115834B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138386,"discussion_content":"ghost，或者升级到8.0快速加字段。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579239378,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":15259,"ip_address":""},"score":138386,"extra":""}]}]},{"had_liked":false,"id":115527,"user_name":"啊啊啊哦哦","can_delete":false,"product_type":"c1","uid":1309877,"ip_address":"","ucode":"68C7153ECAAC57","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/RNO4yZyBvic914hewmNNE8iblYDcfv5yGHZ9OnKuCuZXNmGR0F5qV3icKLT2xpMt66GyEpicZVvrmz8A6TIqt92MQg/132","comment_is_top":false,"comment_ctime":1563612692,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563612692","product_id":100020801,"comment_content":"老师文中。cb。索引。 你说是。c b a 而主建部分是a。 回表时。根据。a来回表找不出准确的数据吧","like_count":0},{"had_liked":false,"id":115201,"user_name":"师恩磊","can_delete":false,"product_type":"c1","uid":1216657,"ip_address":"","ucode":"237A2B7D19E0A5","user_header":"https://static001.geekbang.org/account/avatar/00/12/90/91/aebfb724.jpg","comment_is_top":false,"comment_ctime":1563506486,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563506486","product_id":100020801,"comment_content":"使用single-transaction时，会加全局锁，在主库上某表加字段时，会阻塞不能把字段加成功。<br>数据库的锁，锁的分类，全局锁，表锁，行锁。主要讲解了锁的现象和背后原理。全局锁：加全局锁是指对整个数据库实例加锁，一般应用于逻辑库备份，加上全局锁后，只有可读功能。为什么备份时，需要加全局锁，因为如果不加全局锁会造成备份的视图不一致，比如购买课程动作，购买扣钱后，假设逻辑上先备份余额表，然后客户购买，再备份课程表，会造成备份库中，钱没扣，课程却多了。加全局锁的方式1，FTWRL（FLUSH TABLE WITH READ LOCK），2，SET GLOBE READ ONLY =TRUE;采用1方式，不采用2方式的原因，客户端执行1后，如果发生异常，MYSQL会把锁自动释放，如果是方式2，则MYSQL不能自动释放锁。mysql自带的备份工具，mysqldump。<br>表锁，分为表锁和元数据锁（mata data lock），表锁，lock table，innondb不使用表锁来做并发控制，而是通过行锁来控制的。MDL，只要访问表就需要对该表加锁，读锁之间不冲突，读锁与写锁是互斥的，修改表结构需要等到之前的读锁释放，加上写锁再操作。所以如果再给表加字段时或修改字段时，如果存在长事务，则该表的读锁还未释放，不能给该表加写锁，造成阻塞，它自己阻塞没什么问题，但是，后续查询新申请MDL也会造成阻塞。如果是热点表，客户端有重试机制，很快就造成线程池爆满。事务中的DML锁，在开始执行时创建，并不是在语句执行结束后释放，而是在事务提交后才释放的。<br>如何安全地给表加字段？<br>一是，把长事务的线程kill掉，但如果是高频语录，刚杀掉一个，又起来一个。<br>二是，加时间限制，设置等待时间，在规定时间内没有给该表加写锁成功，则放弃，稍后重试。","like_count":0},{"had_liked":false,"id":113962,"user_name":"gogogo","can_delete":false,"product_type":"c1","uid":1273993,"ip_address":"","ucode":"D7B7A9AA2D4CE5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/wonzX0yIia5NFoB0TZPdIPqVicIuSvzMtowownIkO9VwYpkPWJP2tpEcv5RXMn0ayuEGkAp2GBualL5sFQs0ibQJQ/132","comment_is_top":false,"comment_ctime":1563194641,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1563194641","product_id":100020801,"comment_content":"session C阻塞时，起作用的还是读锁吧，为啥D会被阻塞呢。","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138387,"discussion_content":"因为C是写锁，读写锁互斥的，后面的得等前面提交后才能继续。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579239433,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112694,"user_name":"上神梵修","can_delete":false,"product_type":"c1","uid":1324307,"ip_address":"","ucode":"77A5BED0911A87","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoU91kd8RZO5hg2w9cpnL4yTcfemDFJH3GfiaNRgOe7nQyQF7xBDc5Yq2Aue5KuHaEGOCMM9RUkUpQ/132","comment_is_top":false,"comment_ctime":1562807503,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1562807503","product_id":100020801,"comment_content":"二刷，虽然c 和ca 索引 对于数据排序一样，但如果查询语句是 查a条件是c  是不是ca索引减少了回表次数？至于实际是否创建主要取决空间和效率的平衡  这样理解对吗","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138392,"discussion_content":"这跟回表次数没关系。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579239506,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111270,"user_name":"子冰涵","can_delete":false,"product_type":"c1","uid":1043822,"ip_address":"","ucode":"C125E9392C7E4D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/6e/e8de651a.jpg","comment_is_top":false,"comment_ctime":1562522133,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562522133","product_id":100020801,"comment_content":"老师您好，现在有一张表，数据量会是亿级，是一棵二叉树，查询时通过比较当前节点的lft 和 rgt 的值，可以快速查找当前节点的所有父节点和所有孩子节点，但问题是要新增一个节点要更新的记录数非常多，近90%的记录数，请问有什么好的优化方案<br><br><br>DROP TABLE IF EXISTS `st_rel`;<br>CREATE TABLE `st_rel` (<br>  `id` int(11) NOT NULL AUTO_INCREMENT,<br>  `lft` int(11) NOT NULL DEFAULT &#39;0&#39;,<br>  `rgt` int(11) NOT NULL DEFAULT &#39;0&#39;,<br>  `parent` int(11) NOT NULL DEFAULT &#39;0&#39;,<br>  `depth` int(11) NOT NULL DEFAULT &#39;0&#39;,<br>  `child_num` tinyint(2) NOT NULL DEFAULT &#39;0&#39;,<br>  `mark` tinyint(2) NOT NULL DEFAULT &#39;0&#39;,<br>  PRIMARY KEY (`id`),<br>  UNIQUE KEY `ix_parent_mark` (`parent`,`mark`) USING BTREE,<br>  KEY `ix_parent` (`parent`) USING BTREE,<br>  KEY `ix_lft_rgt` (`lft`,`rgt`) USING BTREE,<br>  KEY `ix_rgt` (`rgt`) USING BTREE<br>) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;<br>","like_count":0},{"had_liked":false,"id":109202,"user_name":"beiler","can_delete":false,"product_type":"c1","uid":1192989,"ip_address":"","ucode":"0A62FE86617486","user_header":"https://static001.geekbang.org/account/avatar/00/12/34/1d/169cd800.jpg","comment_is_top":false,"comment_ctime":1561979808,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561979808","product_id":100020801,"comment_content":"老师您好，我遇到了一个错误，错误号是1053  信息是seever shutdown in progress，我们找了很多地方都没明确说错误产生的原因，能给些建议嘛","like_count":0},{"had_liked":false,"id":108648,"user_name":"乄清风灬依旧","can_delete":false,"product_type":"c1","uid":1464015,"ip_address":"","ucode":"C035239D091DF3","user_header":"https://static001.geekbang.org/account/avatar/00/16/56/cf/7124490d.jpg","comment_is_top":false,"comment_ctime":1561820109,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561820109","product_id":100020801,"comment_content":"是不是5.7开始不支持对InnoDB引擎添加表锁了？我在InnoDB引擎测试的结果和老师说的不一致。数据库版本5.7.19（使用的mysql镜像）  表CREATE TABLE `test` (<br>  `id` int(11) unsigned NOT NULL,<br>  `name` varchar(40) NOT NULL,<br>  PRIMARY KEY (`id`)<br>) ENGINE=InnoDB DEFAULT CHARSET=utf8;<br>本会话添加表写锁执行后会被阻塞，无法进行任何操作；其他会话在该表无法读写；然后重新拉了个5.6.38版本的镜像，同样操作，测试结果和老师的一致；然后回到5.7.19版本，同样的建表语句，切换成使用MyIsam引擎进行相同操作测试，结果和老师的一致；","like_count":0},{"had_liked":false,"id":107943,"user_name":"阿七","can_delete":false,"product_type":"c1","uid":1587282,"ip_address":"","ucode":"B14B05BD0EB78A","user_header":"https://static001.geekbang.org/account/avatar/00/18/38/52/526c10f9.jpg","comment_is_top":false,"comment_ctime":1561637131,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561637131","product_id":100020801,"comment_content":"我跟上面有位读者描述的一样，session C先于D执行了，还请老师解惑。osx系统 ；mysql5.7.25；使用的命令行工具","like_count":0},{"had_liked":false,"id":105626,"user_name":"尔冬橙","can_delete":false,"product_type":"c1","uid":1225224,"ip_address":"","ucode":"0B013A49BC18DA","user_header":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","comment_is_top":false,"comment_ctime":1561044757,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1561044757","product_id":100020801,"comment_content":"要是粗存在（c,a,b）221  212 这样子的排序，按c索引和按ca索引顺序就不一样了把","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138394,"discussion_content":"一样。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579239563,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105378,"user_name":"live","can_delete":false,"product_type":"c1","uid":1302139,"ip_address":"","ucode":"931CDDFB92C404","user_header":"https://static001.geekbang.org/account/avatar/00/13/de/7b/49810dd8.jpg","comment_is_top":false,"comment_ctime":1560991268,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1560991268","product_id":100020801,"comment_content":"–c--|–a--|–主键部分b-- （注意，这里不是 ab，而是只有 b）<br>2 1 3<br>2 2 2<br>3 1 2<br>3 1 4<br>3 2 1<br>4 2 3<br>这个跟索引 c 的数据是一模一样的。<br><br>这里没理解，麻烦解惑下:c索引存储的id值也是排序好的吗？如果是排序好的，为什么又需要mrr，如果非排序的，那就和索引ca的可能不一样","like_count":0,"discussions":[{"author":{"id":1652085,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKORTofsU89GYKtywquzKuEiabvZnEOonfMYKuCPlo8GDlXqZuJdBicu0XtlaeodH4BnmHV1kldSAwQ/132","nickname":"未来怎样","note":"","ucode":"4E54EB62595B27","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":39321,"discussion_content":"对，我也是同样的疑问，感觉这一块说的不对，作者是按照ca索引给出的索引排列，这样a是有序的，如果用c索引给出索引排列，那么a怎么来保证有序？ 这个只能说，c索引和cs索引存储的都是 c、a、b三个字段而已啊！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571912193,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104588,"user_name":"d7f5931e-5c2f-11e9-a742-71d9eb","can_delete":false,"product_type":"c1","uid":1498156,"ip_address":"","ucode":"94FD7959E93C28","user_header":"","comment_is_top":false,"comment_ctime":1560779922,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1560779922","product_id":100020801,"comment_content":"老师，读锁之间不互斥，多个线程可以对同一个表CRUD，这样不乱套了，A线程把表记录删除，B线程更新。","like_count":0,"discussions":[{"author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":10190,"discussion_content":"读锁不互斥，说的是对于MDL。多个线程对不同的数据行进行curd，不会乱套。如果是同一个数据行的话，有行锁的，也不会乱套","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1568273785,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104348,"user_name":"伍良贵","can_delete":false,"product_type":"c1","uid":1120195,"ip_address":"","ucode":"D59A6007155586","user_header":"https://static001.geekbang.org/account/avatar/00/11/17/c3/026096a4.jpg","comment_is_top":false,"comment_ctime":1560735015,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560735015","product_id":100020801,"comment_content":"老师你好，我这边碰到一个问题，在并发量大的情况下，我给一个比较复杂的逻辑加了事物注解，里面有一个sql修改玩家资源，然后其他业务里面修改玩家资源没加事物的，都超时了，然后导致线上出现大量的trx id 6662291361 lock_mode X locks rec but not gap waiting，update索引的时候不是行锁吗，怎么会影响其他的呢","like_count":0},{"had_liked":false,"id":104023,"user_name":"...","can_delete":false,"product_type":"c1","uid":1142098,"ip_address":"","ucode":"9D73E00133C236","user_header":"https://static001.geekbang.org/account/avatar/00/11/6d/52/404912c3.jpg","comment_is_top":false,"comment_ctime":1560592623,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560592623","product_id":100020801,"comment_content":"老师有个问题很疑惑，mysql dump导数据，导表之前开始事物，是对所有的表创建一致性视图，还是在某张表导出前创建一致性视图，如果导某个表前创建，那是不是还是无法避免例子中课程和账户余额不一致问题","like_count":0},{"had_liked":false,"id":103199,"user_name":"佑儿","can_delete":false,"product_type":"c1","uid":1226196,"ip_address":"","ucode":"0629888E7A5E16","user_header":"https://static001.geekbang.org/account/avatar/00/12/b5/d4/3bd5b77b.jpg","comment_is_top":false,"comment_ctime":1560395535,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1560395535","product_id":100020801,"comment_content":"文中写到，mysqldump 使用参数–single-transaction 的时候,导数据之前开启一个事务，来确保拿到一致视图，这个一致性视图是针对全局的吗？  还是针对某一个表的?","like_count":0,"discussions":[{"author":{"id":2873900,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/da/2c/cdd92f3f.jpg","nickname":"wáng","note":"","ucode":"9BFEA73AD7680D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558221,"discussion_content":"针对整个实例的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648137107,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":102617,"user_name":"苦行僧","can_delete":false,"product_type":"c1","uid":1055334,"ip_address":"","ucode":"726024A9A9CF44","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/66/2d9db9ed.jpg","comment_is_top":false,"comment_ctime":1560264908,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560264908","product_id":100020801,"comment_content":"老师 rename是不是也会起一个元数据写锁","like_count":0},{"had_liked":false,"id":100489,"user_name":"小武","can_delete":false,"product_type":"c1","uid":1562946,"ip_address":"","ucode":"F8BF3F6EC36CBD","user_header":"https://static001.geekbang.org/account/avatar/00/17/d9/42/93fb1fdc.jpg","comment_is_top":false,"comment_ctime":1559565068,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559565068","product_id":100020801,"comment_content":"alter小表导致数据库崩溃的例子中，第一个读的事务提交之后后续不就都可以正常获取锁了吗？为什么会block？sessionC被block还可以理解，为什么后续要读的事务也会被block？","like_count":0},{"had_liked":false,"id":98139,"user_name":"小彬","can_delete":false,"product_type":"c1","uid":1012678,"ip_address":"","ucode":"BDC75161004FD0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/73/c6/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1558919680,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558919680","product_id":100020801,"comment_content":"我试了SessionA,SessionB,SessionC,SessionD, 同样会出现SessionA,SessionB提交事务后，是SessionD先获取到锁，而SessionC还在等待。mysql版本：5.7.18","like_count":0},{"had_liked":false,"id":96862,"user_name":"苍茫","can_delete":false,"product_type":"c1","uid":1299149,"ip_address":"","ucode":"CED8598307BEAE","user_header":"https://static001.geekbang.org/account/avatar/00/13/d2/cd/6fb14677.jpg","comment_is_top":false,"comment_ctime":1558524854,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558524854","product_id":100020801,"comment_content":"不太明白ca 为什么可以去掉，cb需要保留。<br>","like_count":0},{"had_liked":false,"id":95858,"user_name":"朱喆","can_delete":false,"product_type":"c1","uid":1213634,"ip_address":"","ucode":"03AFB3DEFEFA0F","user_header":"https://static001.geekbang.org/account/avatar/00/12/84/c2/f765dfde.jpg","comment_is_top":false,"comment_ctime":1558232882,"is_pvip":false,"replies":[{"id":"34301","content":"一个客户端对应一个session呀","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1558260548,"ip_address":"","comment_id":95858,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1558232882","product_id":100020801,"comment_content":"大佬们。怎么模拟不同的session呢","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450620,"discussion_content":"一个客户端对应一个session呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558260548,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2020865,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/d6/01/eaa50203.jpg","nickname":"zft","note":"","ucode":"74DEC5FBA610B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278948,"discussion_content":"如果是ssh连接工具的话，直接开两个会话就好了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591262755,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95534,"user_name":"复兴","can_delete":false,"product_type":"c1","uid":1363230,"ip_address":"","ucode":"C172A87873001A","user_header":"https://static001.geekbang.org/account/avatar/00/14/cd/1e/692c3313.jpg","comment_is_top":false,"comment_ctime":1558077552,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1558077552","product_id":100020801,"comment_content":" session c被堵塞，没有拿到mdl写锁，为什么session d拿不到mdl写锁呢（也就是说session d为什么也会阻塞，session c没有拿到mdl写锁的）。","like_count":0,"discussions":[{"author":{"id":1113854,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fe/fe/12638c5b.jpg","nickname":"邢世宝","note":"","ucode":"7A58863FC89052","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4432,"discussion_content":"mysql版本 5.7.16，测试session d是不会阻塞的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565416768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94831,"user_name":"靠人品去赢","can_delete":false,"product_type":"c1","uid":1301286,"ip_address":"","ucode":"7A20F9EBE847E1","user_header":"https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg","comment_is_top":false,"comment_ctime":1557906252,"is_pvip":false,"replies":[{"id":"34304","content":"👍<br>在碰到问题的时候能想起45讲的文章，我也很开心😆","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1558260720,"ip_address":"","comment_id":94831,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557906252","product_id":100020801,"comment_content":"今天遇到MySQL锁表的问题，执行 SHOW PROCESSLIST;  看到meta data什么的，回去头看这篇文章时候，关于表级锁，online DDL这部分看的津津有味，感觉有点了解意思了，好文章看一次，有一次收获尤其带着问题或者实际情况回头看的时候，再也不是抽象的概念什么的。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450227,"discussion_content":"👍\n在碰到问题的时候能想起45讲的文章，我也很开心😆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558260720,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93032,"user_name":"和自己的约会","can_delete":false,"product_type":"c1","uid":1343747,"ip_address":"","ucode":"4E64AA37BA007E","user_header":"https://static001.geekbang.org/account/avatar/00/14/81/03/27d863a3.jpg","comment_is_top":false,"comment_ctime":1557381434,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557381434","product_id":100020801,"comment_content":"老师，我今天把我们的数据库搞挂了。一主多从。mysql 5.6版本。<br>10w行的小表。执行了一个select sleep(100)。然后数据库加列alter table add column。导致20多分钟仍然没有ddl成功。整个数据库不能读写。<br>dba手动kill掉了sleep(100)后，加列成功了。dba反馈是sleep(100)和alter操作死锁了。和线程数无关。<br>请问下，这个是啥原理。sleep(100)为什么就不能执行了。<br>","like_count":0},{"had_liked":false,"id":92312,"user_name":"侯恩训","can_delete":false,"product_type":"c1","uid":1162376,"ip_address":"","ucode":"F4DC47EECA0F00","user_header":"https://static001.geekbang.org/account/avatar/00/11/bc/88/fbb6022e.jpg","comment_is_top":false,"comment_ctime":1557229379,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557229379","product_id":100020801,"comment_content":"默认可重复读隔离级别，备份已经开始了，会创建一个视图，视图是不含新增列的，此时执行新增列的操作是可以进行的，但不影响备份的结果，新增列执行完成，用户可以在其他连接中看的，但备份会按照老的视图继续","like_count":0},{"had_liked":false,"id":90662,"user_name":"如果","can_delete":false,"product_type":"c1","uid":1320638,"ip_address":"","ucode":"138A3EEEE50850","user_header":"","comment_is_top":false,"comment_ctime":1556603886,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556603886","product_id":100020801,"comment_content":"DAY6，打卡","like_count":0},{"had_liked":false,"id":90460,"user_name":"马以","can_delete":false,"product_type":"c1","uid":1344431,"ip_address":"","ucode":"3FEA06CA14DE28","user_header":"https://static001.geekbang.org/account/avatar/00/14/83/af/1cb42cd3.jpg","comment_is_top":false,"comment_ctime":1556524475,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556524475","product_id":100020801,"comment_content":"MDL作用是防止DDL和DML并发的冲突，个人感觉应该写清楚，一开始理解为select和update之间的并发。引用那个同学的留言，这个地方的确很容易让人产生误解，我是看评论才搞懂这个的","like_count":0},{"had_liked":false,"id":90450,"user_name":"阿q","can_delete":false,"product_type":"c1","uid":1308842,"ip_address":"","ucode":"4C14153BB0B550","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/gnubyuV2Z7cV49fmk1bXKGMjlia19rclbQziaEntxicWBYZGlqBjvjlSFZgzddXg7pGCe5oZ0PPLH2EickCjTadAtA/132","comment_is_top":false,"comment_ctime":1556522404,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556522404","product_id":100020801,"comment_content":"@lionetes 大哥 你说的时候说清楚 是加表名的FTWRL，不然半对不对的让人有点看不明白。","like_count":0},{"had_liked":false,"id":88888,"user_name":"风在身后","can_delete":false,"product_type":"c1","uid":1486579,"ip_address":"","ucode":"AA28C7C4FB6393","user_header":"https://static001.geekbang.org/account/avatar/00/16/ae/f3/f9b8b077.jpg","comment_is_top":false,"comment_ctime":1556021247,"is_pvip":false,"replies":[{"id":"32652","content":"是哦，会自动交换😆","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1556851119,"ip_address":"","comment_id":88888,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1556021247","product_id":100020801,"comment_content":"老师，如你所说，建cb索引的话，后面只会跟主键的a部分。但是主键是ab，难道回表的时候会自动交换a，b列来查找对应的主键值？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447934,"discussion_content":"是哦，会自动交换😆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556851119,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":88864,"user_name":"Break","can_delete":false,"product_type":"c1","uid":1508922,"ip_address":"","ucode":"6D1CCFC60E11EF","user_header":"https://static001.geekbang.org/account/avatar/00/17/06/3a/68bed1d9.jpg","comment_is_top":false,"comment_ctime":1556015823,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1556015823","product_id":100020801,"comment_content":"&lt;p&gt;索引 ca 的组织是先按 c 排序，再按 a 排序，同时记录主键&lt;br&gt;<br>–c--|–a--|–主键部分&lt;span class=&quot;orange&quot;&gt;b&lt;&#47;span&gt;-- &lt;span class=&quot;orange&quot;&gt;（注意，这里不是 ab，而是只有 b）&lt;&#47;span&gt;&lt;br&gt;<br>2 1 3&lt;br&gt;<br>2 2 2&lt;br&gt;<br>3 1 2&lt;br&gt;<br>3 1 4&lt;br&gt;<br>3 2 1&lt;br&gt;<br>4 2 3&lt;br&gt;<br>&lt;span class=&quot;orange&quot;&gt;这个跟索引 c 的数据是一模一样的。&lt;&#47;span&gt;&lt;&#47;p&gt;<br><br>这里为什么说和索引C的数据是一样的呢? 没想通","like_count":0,"discussions":[{"author":{"id":1652085,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKORTofsU89GYKtywquzKuEiabvZnEOonfMYKuCPlo8GDlXqZuJdBicu0XtlaeodH4BnmHV1kldSAwQ/132","nickname":"未来怎样","note":"","ucode":"4E54EB62595B27","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":39325,"discussion_content":"普通索引中的主键默认排序。这个是老师在其他回复中说的，基于这一点，c和ca就一致了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571912457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":85907,"user_name":"暴走的🐌","can_delete":false,"product_type":"c1","uid":1033630,"ip_address":"","ucode":"804381D877E53C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c5/9e/d6fce09c.jpg","comment_is_top":false,"comment_ctime":1555290902,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1555290902","product_id":100020801,"comment_content":"事例中，MDL写锁还没有加上为什么会阻塞后面的读呢？","like_count":0,"discussions":[{"author":{"id":2020865,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/d6/01/eaa50203.jpg","nickname":"zft","note":"","ucode":"74DEC5FBA610B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278949,"discussion_content":"有锁队列，大家都在一个队列中等待","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591262903,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":85886,"user_name":"Socket","can_delete":false,"product_type":"c1","uid":1313213,"ip_address":"","ucode":"932CF3D692FFB5","user_header":"https://static001.geekbang.org/account/avatar/00/14/09/bd/cc31c95d.jpg","comment_is_top":false,"comment_ctime":1555288467,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555288467","product_id":100020801,"comment_content":"那个解答还是不懂为什么ca索引结构和c一样，为什么ca索引上的页值只有b，c索引存的应该是主键索引ab吧，并不能保证a有序吧。解答有点模糊可以详细说说吗","like_count":0},{"had_liked":false,"id":85798,"user_name":"阿May的海绵宝宝","can_delete":false,"product_type":"c1","uid":1203058,"ip_address":"","ucode":"AA2B28DF8BEF80","user_header":"https://static001.geekbang.org/account/avatar/00/12/5b/72/4f8a4297.jpg","comment_is_top":false,"comment_ctime":1555236850,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555236850","product_id":100020801,"comment_content":"online ddl的过程中，  如果在3.真正做ddl--删除字段col的同时，还在读数据--select col from t ,会怎么样？","like_count":0},{"had_liked":false,"id":85036,"user_name":"dz617","can_delete":false,"product_type":"c1","uid":1221366,"ip_address":"","ucode":"5952846AB16744","user_header":"","comment_is_top":false,"comment_ctime":1554963553,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554963553","product_id":100020801,"comment_content":"在逻辑备份中，如果隔离级别是RC的话，那么这时即使使用single-transaction也是有可能得不到一致性视图的吧，也就是说RC下这个参数加不加区别不大 可以这样理解吗？","like_count":0},{"had_liked":false,"id":84911,"user_name":"Flash","can_delete":false,"product_type":"c1","uid":1236163,"ip_address":"","ucode":"E285075C9E0B02","user_header":"https://static001.geekbang.org/account/avatar/00/12/dc/c3/e4ba51d5.jpg","comment_is_top":false,"comment_ctime":1554944815,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554944815","product_id":100020801,"comment_content":"丛库备份的过程，使用了可重复读事务，备份的过程是select整个表的数据，这时候select语录会拿到MDL读锁，然后主库加字段，主库会同步到丛库，这个同步加字段的语句会阻塞，直到丛库备份完成。","like_count":0},{"had_liked":false,"id":84171,"user_name":"~玲玲玲~子~哥~","can_delete":false,"product_type":"c1","uid":1302741,"ip_address":"","ucode":"89379F3A0427EA","user_header":"https://static001.geekbang.org/account/avatar/00/13/e0/d5/7485e51f.jpg","comment_is_top":false,"comment_ctime":1554797499,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554797499","product_id":100020801,"comment_content":"老师我用5.7.22在命令行开4个窗口测试Tony Du的实验步骤,结果跟他一样,session D会在session A和B释放后返回结果, session C等待session D释放后执行成功. 请问对于MDL锁的获取顺序有什么原则？","like_count":0},{"had_liked":false,"id":84109,"user_name":"嘻嘻","can_delete":false,"product_type":"c1","uid":1325931,"ip_address":"","ucode":"E1EB75DD1C05E0","user_header":"","comment_is_top":false,"comment_ctime":1554786682,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554786682","product_id":100020801,"comment_content":"老师我有点疑问:innodb的mvcc，开启事务，全库的快照就确定了？还是访问到哪张表哪行数据，哪行数据才确定？","like_count":0},{"had_liked":false,"id":83259,"user_name":"杜嘉嘉","can_delete":false,"product_type":"c1","uid":1306430,"ip_address":"","ucode":"C23DE27E7886BD","user_header":"https://static001.geekbang.org/account/avatar/00/13/ef/3e/9c3a8abc.jpg","comment_is_top":false,"comment_ctime":1554483542,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554483542","product_id":100020801,"comment_content":"其实对于innodb 来讲，mysqldump 备份的时候也会加上FTWRL锁，只是很短暂，所以也是会锁表的。","like_count":0},{"had_liked":false,"id":81920,"user_name":"AuBGa","can_delete":false,"product_type":"c1","uid":1028621,"ip_address":"","ucode":"5C14EE661A9BF2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b2/0d/c6c1c888.jpg","comment_is_top":false,"comment_ctime":1554082597,"is_pvip":false,"replies":[{"id":"30021","content":"额？这个的问题是啥，我感觉这个已经说完了😅","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1554432675,"ip_address":"","comment_id":81920,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1554082597","product_id":100020801,"comment_content":"–c--|–a--|–主键部分b-- （注意，这里不是 ab,而是只有b)   这里能详细讲解一下吗？<br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445391,"discussion_content":"额？这个的问题是啥，我感觉这个已经说完了😅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554432675,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81284,"user_name":"Nash","can_delete":false,"product_type":"c1","uid":1239904,"ip_address":"","ucode":"E634E1A53F526F","user_header":"https://static001.geekbang.org/account/avatar/00/12/eb/60/598942dd.jpg","comment_is_top":false,"comment_ctime":1553849128,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553849128","product_id":100020801,"comment_content":"1.全局锁<br>  （1）全局锁就是对整个数据库实例加锁。全局锁的典型使用场景是，做全库逻辑备份。<br>  （2）MySQL 提供了一个加全局读锁的方法，命令是 Flush tables with read lock (FTWRL)。<br>  （3）官方自带的逻辑备份工具是 mysqldump。当 mysqldump 使用参数–single-transaction 的时候，导数据之前就会启动一个事务，来确保拿到一致性视图。而由于 MVCC 的支持，这个过程中数据是可以正常更新的。<br>  （4）但是single-transaction 方法只适用于所有的表使用事务引擎的库（隔离级别为‘可重复读’）；如果有的表使用了不支持事务的引擎，那么备份就只能通过 FTWRL 方法。这往往是 DBA 要求业务开发人员使用 InnoDB 替代 MyISAM 的原因之一。<br>2.表级锁<br>  （1）MySQL 里面表级别的锁有两种：一种是表锁，一种是元数据锁（meta data lock，MDL)。<br>  （2）表锁的语法是 lock tables … read&#47;write。与 FTWRL 类似，可以用 unlock tables 主动释放锁，也可以在客户端断开的时候自动释放。需要注意，lock tables 语法除了会限制别的线程的读写外，也限定了本线程接下来的操作对象。<br>  （3）对于 InnoDB 这种支持行锁的引擎，一般不使用lock tables 命令来控制并发，毕竟锁住整个表的影响面还是太大。<br>  （4）另一类表级的锁是 MDL（metadata lock)。MDL 不需要显式使用，在访问一个表的时候会被自动加上。MDL 的作用是，保证读写的正确性。<br>        -&gt;如果一个查询正在遍历一个表中的数据，而执行期间另一个线程对这个表结构做变更，删了一列，那么查询线程拿到的结果跟表结构对不上，肯定是不行的。<br>        -&gt;因此，在 MySQL 5.5 版本中引入了 MDL，当对一个表做增删改查操作的时候，加 MDL 读锁；当要对表做结构变更操作的时候，加 MDL 写锁。<br>        -&gt;读锁之间不互斥，因此你可以有多个线程同时对一张表增删改查。<br>        -&gt;读写锁之间、写锁之间是互斥的，用来保证变更表结构操作的安全性。因此，如果有两个线程要同时给一个表加字段，其中一个要等另一个执行完才能开始执行。<br>  （5）如何安全地给小表加字段？<br>        比较理想的机制是，在 alter table 语句里面设定等待时间，如果在这个指定的等待时间里面能够拿到 MDL 写锁最好，拿不到也不要阻塞后面的业务语句，先放弃。之后开发人员或者 DBA 再通过重试命令重复这个过程。","like_count":0},{"had_liked":false,"id":81275,"user_name":"大魔王👻","can_delete":false,"product_type":"c1","uid":1305143,"ip_address":"","ucode":"2BB7C31C3B38C7","user_header":"https://static001.geekbang.org/account/avatar/00/13/ea/37/ed78d4d5.jpg","comment_is_top":false,"comment_ctime":1553846515,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553846515","product_id":100020801,"comment_content":"全局级锁： <br>（1）对整个数据库的实例加锁。<br>（2）加全局读锁命令： Flush tables with read lock (FTWRL)<br>（3）应用场景： 做全库逻辑备份，就是把整个库所有表都select出来成文本。当一个进程在备份数据，另外一个进程要过来修改数据的时候，就会出现数据的不一致性。所以在读库的时候，如果数据库引擎支持事务，则需要开启事务，MVCC会保障数据的一致性。但是如果数据库引擎不支持事务的话，需要加全局锁。<br>（4）mysqldump 的使用参数–single-transaction的时候，导数据之前就会开启一个事务，来确保拿到一致性视图。而由于MVCC（多版本并发控制）的支持，这个过程中的数据是可以正常更新的。但是single-transaction方法只适用于使用事务引擎的库（InnoDB）,像MyISAM这种不支持事务的引擎，就只能使用FTWRL命令了。<br><br>表级锁：<br>（1）有两种，一种是表锁，一种是元数据锁（meta data lock, MDL ）<br>（2）语法：lock tables ... read&#47;write， 缺点：除了限制别的线程的读写外，也限制了本线程的读写，比如说：lock tables t1 read, t2 write，其他线程的读写操作会被阻塞，本线程在unlock tables之前，也只能读t1, 读写t2， 不能写t1，也不能访问其他的表<br>（3）MDL 锁是系统默认会加的。当对一个表做增删改查的时候，加MDL读锁，当要对表结构变更操作的时候，加MDL写锁。读锁之间不互斥，读写锁之间、写锁之间互斥，用来保证表结构变更的安全性能。但是需要注意的是，事务中的MDL锁，在语句执行开始的时候申请，但是在语句结束后并不会马上释放，而是等到提交整个事务之后再释放。<br>问题： 如何安全的给表加字段？   在给表加字段，或者修改字段，或者加索引，都需要扫描全表的数据。如果现在需要变更一个热点表，虽然数据量不大，但是上面的请求很频繁，而你不得不加个字段，你该怎么做？ 答： 在information_schema.innodb_trx表中kill掉长事务的做法可能未必管用，因为新的请求马上就来了。比较理想的机制是，在alter table语句里面设定等待时间，如果在这个指定等待时间里面能够拿到MDL写锁最好，拿不到也不要阻塞后面的业务语句，先放弃，再重试这个过程。  alter table tab_name wait N add column...<br>","like_count":0},{"had_liked":false,"id":81251,"user_name":"leon","can_delete":false,"product_type":"c1","uid":1217955,"ip_address":"","ucode":"97610F35D2543A","user_header":"https://static001.geekbang.org/account/avatar/00/12/95/a3/0a3cde60.jpg","comment_is_top":false,"comment_ctime":1553842310,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553842310","product_id":100020801,"comment_content":"老师，小表加字段那个例子中，session C 的MDL写锁并没申请到（阻塞了），这个时候session D的读锁为什么还会被session C的写锁阻塞住呢？ ","like_count":0},{"had_liked":false,"id":79304,"user_name":"想当上帝的司机","can_delete":false,"product_type":"c1","uid":1239378,"ip_address":"","ucode":"D8251388854911","user_header":"https://static001.geekbang.org/account/avatar/00/12/e9/52/f07e9001.jpg","comment_is_top":false,"comment_ctime":1553431279,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553431279","product_id":100020801,"comment_content":"如果图中的session c阻塞什么都不做的话，多久会超时，有默认的超时时间吗 谢谢","like_count":0},{"had_liked":false,"id":78892,"user_name":"devil","can_delete":false,"product_type":"c1","uid":1259625,"ip_address":"","ucode":"BB6090411BAA23","user_header":"https://static001.geekbang.org/account/avatar/00/13/38/69/864569a4.jpg","comment_is_top":false,"comment_ctime":1553270545,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553270545","product_id":100020801,"comment_content":"例子中ddl的变更不是因为有事务没提交读锁没释放应该还没有拿到MDL写锁，怎么会阻塞后面的读锁呢？","like_count":0},{"had_liked":false,"id":78746,"user_name":"日光倾城","can_delete":false,"product_type":"c1","uid":1304230,"ip_address":"","ucode":"831A55F774C34A","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIZtZz0LgYRdLLOxuNtRv7YetrZrpoQ81ugaXSp9r25obIrlibTbicq5JnMTEicGLG0C9Z7fZjenSrFA/132","comment_is_top":false,"comment_ctime":1553228320,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1553228320","product_id":100020801,"comment_content":"文中和评论区的，每个session先开启不自动提交事务set autocommit=0后，<br> session1：select * from test where id=1;  获取数据<br> session2：select * from test where id=1; 获取数据<br> session3: alter table test add sex int; 阻塞<br> session4：select * from test where id=1; 阻塞<br><br>session1，session2 commit , session4 获取数据，session3 继续阻塞，没有输入栏，session4 commit,session3才释放阻塞 现象确实与文中实例不符，望老师解答。","like_count":0,"discussions":[{"author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":10230,"discussion_content":"mysql5.5的话和老师描述的一样，5.6 5.7不一致","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568277650,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78151,"user_name":"诸葛村夫","can_delete":false,"product_type":"c1","uid":1055492,"ip_address":"","ucode":"E4E3655D62CF52","user_header":"https://static001.geekbang.org/account/avatar/00/10/1b/04/caad53e0.jpg","comment_is_top":false,"comment_ctime":1553079986,"is_pvip":false,"replies":[{"id":"28899","content":"“重新打开表却打不开” 是什么现象？<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1553415334,"ip_address":"","comment_id":78151,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553079986","product_id":100020801,"comment_content":"请问我今天给表变更索引时候，长时间都执行不了，后来客户端程序崩溃退出了，重新打开表却打不开是因为什么","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443985,"discussion_content":"“重新打开表却打不开” 是什么现象？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553415334,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78118,"user_name":"小周同学","can_delete":false,"product_type":"c1","uid":1264135,"ip_address":"","ucode":"28D157B7AAA377","user_header":"https://static001.geekbang.org/account/avatar/00/13/4a/07/1cab75cc.jpg","comment_is_top":false,"comment_ctime":1553073594,"is_pvip":false,"replies":[{"id":"28902","content":"对于备份行为来说， “备份出来的数据跟真实数据之间存在差距”是没关系的。<br><br>备份表示的是“在某个时刻，这个系统的状态”， 只要备份出来的数据，跟“这个时刻”是一致的就可以了<br><br>不需要跟“备份完成后”的时间点一致","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1553415488,"ip_address":"","comment_id":78118,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553073594","product_id":100020801,"comment_content":"使用 &quot;mysqldump -single-transaction &quot; 做备份，会不会存在备份期间有些数据被修改，而备份线程又无法读到最新数据，导致备份出来的数据跟真实数据之间存在差距呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443974,"discussion_content":"对于备份行为来说， “备份出来的数据跟真实数据之间存在差距”是没关系的。\n\n备份表示的是“在某个时刻，这个系统的状态”， 只要备份出来的数据，跟“这个时刻”是一致的就可以了\n\n不需要跟“备份完成后”的时间点一致","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553415488,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":77704,"user_name":"chrise","can_delete":false,"product_type":"c1","uid":1069461,"ip_address":"","ucode":"D4940903AD4492","user_header":"https://static001.geekbang.org/account/avatar/00/10/51/95/0f79febb.jpg","comment_is_top":false,"comment_ctime":1552985209,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552985209","product_id":100020801,"comment_content":"读锁和写锁的区别<br>1.读锁 LOCK TABLE customer READ;<br>不block 其他session (LOCK TABLE customer READ)，<br>block   其他session(LOCK TABLE customer WRITE)，insert&#47;update&#47;delete&#47;alter;<br>报错    当前session insert&#47;update&#47;delete&#47;alter；<br><br>2.写锁 LOCK TABLE customer WRITE;<br>block   其他session(LOCK TABLE customer READ,LOCK TABLE customer WRITE)，insert&#47;update&#47;delete&#47;alter;<br>不报错   当前session insert&#47;update&#47;delete&#47;alter；","like_count":0},{"had_liked":false,"id":74625,"user_name":"GLADIATOR","can_delete":false,"product_type":"c1","uid":1448564,"ip_address":"","ucode":"6FE14E0BCD6240","user_header":"https://static001.geekbang.org/account/avatar/00/16/1a/74/8f7f8786.jpg","comment_is_top":false,"comment_ctime":1552269134,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552269134","product_id":100020801,"comment_content":"林老师您好，在mysql组复制（多主模式）下，MDL锁会不会导致更复杂的情况，多主模式下，经常因为客户端truncate表导致大量wait for MDL,整个库都像是卡死了；我把所有没提交的事务对应的process都kill，把DDL本身的进程也kill了，但依然解决不了问题。在单机库上，到是没有复现这种现象；我怀疑是多主的组复制架构自身的缺陷导致的。","like_count":0},{"had_liked":false,"id":72372,"user_name":"咩咩咩","can_delete":false,"product_type":"c1","uid":1237849,"ip_address":"","ucode":"9DEC7D5D52D972","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/6a8fRQFxX5VXOpRKyYibsemKwDMexMxkzZOBquPo6T4HOcYicBiaTcqibDoTIhZSjVjF3nKXTEGDYOGPt2xqqwiawjg/132","comment_is_top":false,"comment_ctime":1551600792,"is_pvip":false,"replies":[{"id":"26211","content":"1. 这是语义规定的哈<br>2. 能读写这个表，不能读写其他表；<br>3. lock table很少直接发生错误，一般就是如果有别的线程锁住，会进入等待。错误应该是指锁超时？","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551604894,"ip_address":"","comment_id":72372,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551600792","product_id":100020801,"comment_content":"还是不懂表锁在不同会话读取不同表中的表现？<br>比如一个会话给一个表加了读锁，那该会话怎么访问不了其他表。而其他会话却可以访问？<br>一个会话给一张表加写锁，这个会话能读写其表，但是不能读写其他表？<br>另外，读写发生阻塞以及报lock table  错误应该不同概念吧？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441562,"discussion_content":"1. 这是语义规定的哈\n2. 能读写这个表，不能读写其他表；\n3. lock table很少直接发生错误，一般就是如果有别的线程锁住，会进入等待。错误应该是指锁超时？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551604894,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70608,"user_name":"浪荡居士","can_delete":false,"product_type":"c1","uid":1055456,"ip_address":"","ucode":"376D4CBC0CB2BD","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/e0/06e54287.jpg","comment_is_top":false,"comment_ctime":1551146252,"is_pvip":false,"replies":[{"id":"25191","content":"啊 不会吧，完整复现步骤发一下","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551146899,"ip_address":"","comment_id":70608,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551146252","product_id":100020801,"comment_content":"老师您好, 我在用官方的mysql docker image测试的时候  flush tables with read lock之后仍然可以insert, 谷歌搜了也没收到, 请问是啥原因?","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440724,"discussion_content":"啊 不会吧，完整复现步骤发一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551146899,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65254,"user_name":"我已经设置了昵称","can_delete":false,"product_type":"c1","uid":1364034,"ip_address":"","ucode":"ED672C5EBDBDC4","user_header":"https://static001.geekbang.org/account/avatar/00/14/d0/42/6fd01fb9.jpg","comment_is_top":false,"comment_ctime":1549163948,"is_pvip":false,"replies":[{"id":"23167","content":"读锁之间兼容，<br>读写、写写之间需要互相等待","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1549218611,"ip_address":"","comment_id":65254,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1549163948","product_id":100020801,"comment_content":"建议先讲下各个锁的读锁、写锁会产生什么效果。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438375,"discussion_content":"读锁之间兼容，\n读写、写写之间需要互相等待","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549218611,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64622,"user_name":"哼哈二将","can_delete":false,"product_type":"c1","uid":1180566,"ip_address":"","ucode":"E5EAEB65D35F17","user_header":"https://static001.geekbang.org/account/avatar/00/12/03/96/a28d5681.jpg","comment_is_top":false,"comment_ctime":1548836731,"is_pvip":false,"replies":[{"id":"22950","content":"5.6的实现上就是，申请不到也要占着😅","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548937005,"ip_address":"","comment_id":64622,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548836731","product_id":100020801,"comment_content":"根据读写锁的性质，session c要想进行写操作需要先获取写锁，而由于当前已有两个线程使用读锁，导致其无法获取到写锁；既然session c没获取到写锁，那后面的session d应该是可以获取到读锁的呀，不至于被阻塞的呀。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438105,"discussion_content":"5.6的实现上就是，申请不到也要占着😅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548937005,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63617,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1548417495,"is_pvip":false,"replies":[{"id":"22543","content":"1. 加字段的DDL执行流程看下第13篇哈。答案是在DDL执行过程中读数据，看到的是修改之前的的表结构。<br>2. 这个也是看一下执行流程应该就明白了，需要切表名😆","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548492014,"ip_address":"","comment_id":63617,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548417495","product_id":100020801,"comment_content":"老师，您好！您有回复如下：<br><br>-----<br>Online DDL的过程是这样的：<br>1. 拿MDL写锁<br>2. 降级成MDL读锁<br>3. 真正做DDL<br>4. 升级成MDL写锁<br>5. 释放MDL锁<br><br>1、2、4、5如果没有锁冲突，执行时间非常短。第3步占用了DDL绝大部分时间，这期间这个表可以正常读写数据，是因此称为“online ”<br>-----<br><br>问题一：<br>假设线程 A 正在执行第 3 步，给表加字段。（操作过程是这样不：遍历聚簇索引，给每行记录分配新增字段的内存空间。）<br>这时线程 B 查询数据，正在遍历表中的数据。很有可能拿到的结果跟表结构对不上了。（不知道新增或删除字段时，实际的操作流程是怎么样的？）<br><br>问题二：<br>DDL 完成后，为啥要升级 MDL 写锁再释放吖？<br>因为 DDL 期间获取的是 MDL 读锁，所以是允许多个线程共同进行 DDL 操作的。那升级 MDL 写锁再退出，就应该不是防止退出期间有其他线程在 DDL 操作。<br><br>谢谢老师","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437655,"discussion_content":"1. 加字段的DDL执行流程看下第13篇哈。答案是在DDL执行过程中读数据，看到的是修改之前的的表结构。\n2. 这个也是看一下执行流程应该就明白了，需要切表名😆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548492014,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62359,"user_name":"Lukia","can_delete":false,"product_type":"c1","uid":1028698,"ip_address":"","ucode":"C19472337BCCC6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b2/5a/574f5bb0.jpg","comment_is_top":false,"comment_ctime":1548038537,"is_pvip":false,"replies":[{"id":"22096","content":"1. 改元数据是在第四步和第五步之间做的；<br>   这时候确实持有写锁<br>2. 上面的回答应该顺便回复了这个问题。这个确实不符合两阶段锁协议哈，为了并发。。","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548078504,"ip_address":"","comment_id":62359,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548038537","product_id":100020801,"comment_content":"对老师的Online DDL的过程有一些疑惑<br>1. 拿MDL写锁<br>2. 降级成MDL读锁<br>3. 真正做DDL<br>4. 升级成MDL写锁<br>5. 释放MDL锁<br><br>DDL不是需要修改表元数据的么，为什么可以降为MDL读锁。另外一个问题，为什么要先拿写锁再降为读锁再升级为写锁，好像也不符合二阶段锁协议的锁上升和下降的约束。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437182,"discussion_content":"1. 改元数据是在第四步和第五步之间做的；\n   这时候确实持有写锁\n2. 上面的回答应该顺便回复了这个问题。这个确实不符合两阶段锁协议哈，为了并发。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548078504,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61788,"user_name":"Geek_41d472","can_delete":false,"product_type":"c1","uid":1247965,"ip_address":"","ucode":"DEC2B6329460CF","user_header":"https://static001.geekbang.org/account/avatar/00/13/0a/dd/88fa7b52.jpg","comment_is_top":false,"comment_ctime":1547801023,"is_pvip":false,"replies":[{"id":"21921","content":"你理解没错呀，所以才说 “拿不到也不要阻塞后面的业务语句，先放弃”，让后面的查询先执行","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547803077,"ip_address":"","comment_id":61788,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547801023","product_id":100020801,"comment_content":"您好老师，文中提到的<br>比较理想的机制是，在 alter table 语句里面设定等待时间，如果在这个指定的等待时间里面能够拿到 MDL 写锁最好，拿不到也不要阻塞后面的业务语句，先放弃。<br>拿到MDL写锁之后，如果后面还有select语句，这个是读锁，根据你前面文章的描述，写读锁是互斥的，那也就是后面的所有select都会阻塞的，一样会重试的线程越来越多，最终会爆掉！<br>老师，是不是我理解错了？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436996,"discussion_content":"你理解没错呀，所以才说 “拿不到也不要阻塞后面的业务语句，先放弃”，让后面的查询先执行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547803077,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":60698,"user_name":"Eichar","can_delete":false,"product_type":"c1","uid":1344179,"ip_address":"","ucode":"238CE3FFDFE9BF","user_header":"https://static001.geekbang.org/account/avatar/00/14/82/b3/c4031ab0.jpg","comment_is_top":false,"comment_ctime":1547532443,"is_pvip":false,"replies":[{"id":"21668","content":"DML一般指的是增删改<br>不过若果select ... lock in share mode; select ... for update也会有行锁","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547551740,"ip_address":"","comment_id":60698,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547532443","product_id":100020801,"comment_content":"老师，DML锁是不是只针对事务啊，文中说锁是在commit后才会释放，如果autocommit=1设置了，select之前不显示的开启一个事务，也没有相应的commit是不是就不存在DML锁了？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436587,"discussion_content":"DML一般指的是增删改\n不过若果select ... lock in share mode; select ... for update也会有行锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547551740,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58460,"user_name":"奋斗心","can_delete":false,"product_type":"c1","uid":1247286,"ip_address":"","ucode":"06A195AB0B6570","user_header":"https://static001.geekbang.org/account/avatar/00/13/08/36/98be3d69.jpg","comment_is_top":false,"comment_ctime":1547086060,"is_pvip":false,"replies":[{"id":"21136","content":"主要是要说明，最好是有一个(c,b)索引","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547121071,"ip_address":"","comment_id":58460,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547086060","product_id":100020801,"comment_content":"上期思考题，去掉c索引不是更好一点吗？虽然c索引达到的数据排序是cab。这要用到2个索引一个是c一个是ab索引。用ca一次性到位","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436071,"discussion_content":"主要是要说明，最好是有一个(c,b)索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547121071,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58456,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1547085514,"is_pvip":false,"replies":[{"id":"21135","content":"这个不可考据了<br><br>不过我觉得有一个好处，就是可以让当前线程尽快执行unlock tables，<br>它自己操作不了别的表，会尽快去释放锁。<br>否则一直锁着，影响系统并发度","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547121035,"ip_address":"","comment_id":58456,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547085514","product_id":100020801,"comment_content":"原文：<br>举个例子, 如果在某个线程 A 中执行 lock tables t1 read, t2 write; 这个语句，则其他线程写 t1、读写 t2 的语句都会被阻塞。同时，线程 A 在执行 unlock tables 之前，也只能执行读 t1、读写 t2 的操作。连写 t1 都不允许，自然也不能访问其他表。<br><br><br>问题：<br>老师，早上好！<br>最后一句，线程 A 解锁前，不允许写 t1，自然也不能访问其他表。<br><br>为什么不允许线程 A 访问其他表，读其他表的操作也不允许么？这样设计的目的是为了规避啥问题吖？<br><br>谢谢老师！","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436070,"discussion_content":"这个不可考据了\n\n不过我觉得有一个好处，就是可以让当前线程尽快执行unlock tables，\n它自己操作不了别的表，会尽快去释放锁。\n否则一直锁着，影响系统并发度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547121035,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57353,"user_name":"daka","can_delete":false,"product_type":"c1","uid":1307998,"ip_address":"","ucode":"A23D82FF956793","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ8ibLXicovSNwEJhP4BOIPxEMle1ZUq1He58xztgBXTQFicdp5m5ibRHwUSoUVk5xQMWFwFXhp56ibm1Q/132","comment_is_top":false,"comment_ctime":1546761660,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546761660","product_id":100020801,"comment_content":"不愧为高手，一直没搞清楚的mdl豁然开朗了","like_count":0},{"had_liked":false,"id":56545,"user_name":"coderbee","can_delete":false,"product_type":"c1","uid":1005530,"ip_address":"","ucode":"02339998217473","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/da/0adccef5.jpg","comment_is_top":false,"comment_ctime":1546485401,"is_pvip":false,"replies":[{"id":"20381","content":"是的，有保证主键算进去，还是有序的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546485824,"ip_address":"","comment_id":56545,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546485401","product_id":100020801,"comment_content":"首先谢谢耐心答复。<br><br>索引是有序的，，，我的理解是索引  只是  按索引列进行排序，二级索引关连的主键值是不参与排序的。<br><br>这个理解是错误的？二级索引会把索引列+主键值作为排序键来排序？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435108,"discussion_content":"是的，有保证主键算进去，还是有序的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546485824,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56542,"user_name":"小动物很困","can_delete":false,"product_type":"c1","uid":1133936,"ip_address":"","ucode":"49A727277A37E1","user_header":"https://static001.geekbang.org/account/avatar/00/11/4d/70/7d736d5f.jpg","comment_is_top":false,"comment_ctime":1546484931,"is_pvip":false,"replies":[{"id":"20382","content":"对的，5.6是这个策略哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546485863,"ip_address":"","comment_id":56542,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546484931","product_id":100020801,"comment_content":"关于MDL锁的私人理解:<br>读锁:对这张表的CRUD操作都可以获取,不互斥就是多个线程可以同时获取,读锁是防止并发写的,当获取读锁之后对数据的写要等其他的读锁释放(commit),而对select不阻塞<br>写锁:阻塞读写,与读锁互斥,就是说获取写锁要读锁释放才可以,而写锁的获取会影响后面的读锁获取,导致数据库不可读写,在高并发时候数据库会挂.<br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435105,"discussion_content":"对的，5.6是这个策略哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546485863,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56480,"user_name":"coderbee","can_delete":false,"product_type":"c1","uid":1005530,"ip_address":"","ucode":"02339998217473","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/da/0adccef5.jpg","comment_is_top":false,"comment_ctime":1546476047,"is_pvip":false,"replies":[{"id":"20365","content":"“索引是有序的”<br><br>我觉得这句话就说明了😄<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546481106,"ip_address":"","comment_id":56480,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546476047","product_id":100020801,"comment_content":"“索引c就是按照cab排序”，这个有官方文档做了说明吗？<br><br>在网上能找到最接近的是索引扩展，可以做排序优化。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435062,"discussion_content":"“索引是有序的”\n\n我觉得这句话就说明了😄\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546481106,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56255,"user_name":"coderbee","can_delete":false,"product_type":"c1","uid":1005530,"ip_address":"","ucode":"02339998217473","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/da/0adccef5.jpg","comment_is_top":false,"comment_ctime":1546412245,"is_pvip":false,"replies":[{"id":"20263","content":"索引c就是按照 cab这样排序","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546422653,"ip_address":"","comment_id":56255,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546412245","product_id":100020801,"comment_content":"您好，对于上期问题的答案有个疑问：答案说索引c与ca的数据模型是一样的，这就要求二级索引除了对索引列进行排序、还必须按主键进行排序？？<br><br>如果没有上面的要求，索引c的顺序可能是下面这样吧，这样跟ca是不一样的。<br>-c--a-b-<br>2 2 2<br>2 1 3<br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434966,"discussion_content":"索引c就是按照 cab这样排序","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546422653,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55971,"user_name":"spraith","can_delete":false,"product_type":"c1","uid":1141702,"ip_address":"","ucode":"7FBC54DF0BBF50","user_header":"https://static001.geekbang.org/account/avatar/00/11/6b/c6/2534e14a.jpg","comment_is_top":false,"comment_ctime":1546357623,"is_pvip":false,"replies":[{"id":"20144","content":"5.6是这么设计的，先等的会堵住后等的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546361889,"ip_address":"","comment_id":55971,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1546357623","product_id":100020801,"comment_content":"小表加字段的那个例子有点不明白，sessionC不是还没拿到写锁吗，为什么能把 sessionD 的读锁给挡住？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434904,"discussion_content":"5.6是这么设计的，先等的会堵住后等的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546361889,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":10215,"discussion_content":"但是a和b释放的时候，不是先等的c就会先拿到锁。看5.6是D先拿到了读锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568276346,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55289,"user_name":"pearl","can_delete":false,"product_type":"c1","uid":1322055,"ip_address":"","ucode":"795169CC94E4A3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep5NODicRp90dUTF59uZWSibwEj4c3oAYErB0b2ib5zJyHTEcTnsbdZYL8Qb3EzKHRx1s9Vp5jVocL4Q/132","comment_is_top":false,"comment_ctime":1546090902,"is_pvip":false,"replies":[{"id":"20037","content":"没有矛盾<br>Innodb做数据的增删改查的时候，不需要对表加表锁<br><br><br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546134521,"ip_address":"","comment_id":55289,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546090902","product_id":100020801,"comment_content":"老师好，您说的这个读锁之间不互斥，因此你可以有表锁多个线程同时对一张表增删改查。可是下一章又说表锁同时只能有一个做更新操作，是否矛盾？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434729,"discussion_content":"没有矛盾\nInnodb做数据的增删改查的时候，不需要对表加表锁\n\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546134521,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55020,"user_name":"neptunesong","can_delete":false,"product_type":"c1","uid":1058431,"ip_address":"","ucode":"6592C8724B3D95","user_header":"","comment_is_top":false,"comment_ctime":1546001372,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546001372","product_id":100020801,"comment_content":"很道歉，可能之前问的两个索引问题没表达清楚，比如CREATE TABLE `t` (<br>  `id` int(11) NOT NULL,<br>  `c` int(11) DEFAULT NULL,<br>  `d` int(11) DEFAULT NULL,<br>  PRIMARY KEY (`id`),<br>  KEY `c` (`c`)<br> KEY `d`(`d`)<br>) ENGINE=InnoDB;<br>现在在c和d上都建了key。因为锁是加在二级索引上的，当做一条update的时候，是c和d上的索引都会加锁吗？如果是，索引c和索引d分别加锁时之间的同步是怎么保障的？谢谢","like_count":0},{"had_liked":false,"id":54327,"user_name":"neptunesong","can_delete":false,"product_type":"c1","uid":1058431,"ip_address":"","ucode":"6592C8724B3D95","user_header":"","comment_is_top":false,"comment_ctime":1545828919,"is_pvip":false,"replies":[{"id":"19682","content":"你这个问题我没看懂… 等21、22看完你再后面的文章中再写下具体的问题吧","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545832072,"ip_address":"","comment_id":54327,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545828919","product_id":100020801,"comment_content":"老师好，请问下如果一个表有多个索引，暂且以两个非主键索引为例，在加锁（x或s）的过程中，是两个索引都会分别加锁吗？如果都加锁，这两个索引间的加群锁时多线程同步是怎么保障的？通过线程间的锁吗？谢谢","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434428,"discussion_content":"你这个问题我没看懂… 等21、22看完你再后面的文章中再写下具体的问题吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545832072,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52104,"user_name":"Cv","can_delete":false,"product_type":"c1","uid":1062797,"ip_address":"","ucode":"C77CE172B5AA28","user_header":"","comment_is_top":false,"comment_ctime":1545310450,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545310450","product_id":100020801,"comment_content":"能不能讲解下并发insert多条语句，在有唯一索引情况下出现死锁的原因","like_count":0},{"had_liked":false,"id":51564,"user_name":"苍茫","can_delete":false,"product_type":"c1","uid":1299149,"ip_address":"","ucode":"CED8598307BEAE","user_header":"https://static001.geekbang.org/account/avatar/00/13/d2/cd/6fb14677.jpg","comment_is_top":false,"comment_ctime":1545200630,"is_pvip":false,"replies":[{"id":"18963","content":"提一下你的问题","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545333190,"ip_address":"","comment_id":51564,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545200630","product_id":100020801,"comment_content":"看了关于索引的解答，我特地会去上篇文章再看了一遍，怎么看了半天也还是没看明白？是我太无知了吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433513,"discussion_content":"提一下你的问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545333190,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":50925,"user_name":"luwei","can_delete":false,"product_type":"c1","uid":1172627,"ip_address":"","ucode":"7D4776A8BD6F47","user_header":"https://static001.geekbang.org/account/avatar/00/11/e4/93/df7c037f.jpg","comment_is_top":false,"comment_ctime":1545081230,"is_pvip":false,"replies":[{"id":"18521","content":"会，但是你这样描述我没法解😓 嗯到时候我介绍些方法吧","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545158466,"ip_address":"","comment_id":50925,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545081230","product_id":100020801,"comment_content":"老师以后打算对死锁展开一些讨论么？我们线上有个业务，偶尔会报：“Deadlock found when trying to get lock;”这种类似错误。一直没找到问题根源。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433183,"discussion_content":"会，但是你这样描述我没法解😓 嗯到时候我介绍些方法吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545158466,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49809,"user_name":"菜菜","can_delete":false,"product_type":"c1","uid":1302241,"ip_address":"","ucode":"D798B831A89AAF","user_header":"https://static001.geekbang.org/account/avatar/00/13/de/e1/f648c746.jpg","comment_is_top":false,"comment_ctime":1544773066,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1544773066","product_id":100020801,"comment_content":"林老师，我做了测试，版本是5.6.25。还是Session D首先得到了执行的。","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138404,"discussion_content":"那就是d先获取了读锁呗。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579240235,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49762,"user_name":"吴林辉","can_delete":false,"product_type":"c1","uid":1222971,"ip_address":"","ucode":"56F117300FF33D","user_header":"https://static001.geekbang.org/account/avatar/00/12/a9/3b/f4ca20d8.jpg","comment_is_top":false,"comment_ctime":1544765510,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544765510","product_id":100020801,"comment_content":"老师，关于上期思考题的答案，ca的联合索引树和c的索引树是一样的，这一点不是很理解，能讲下么","like_count":0},{"had_liked":false,"id":48820,"user_name":"gesanri","can_delete":false,"product_type":"c1","uid":1121174,"ip_address":"","ucode":"AE3B97DC3ED668","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELtOO0HKrj5SI5JSlmwiaCvaF6GLiaTmf5NX88OZaO3HymTAGTeIoicBUjqzmMF6sF5raPFjuqLFibrrw/132","comment_is_top":false,"comment_ctime":1544542992,"is_pvip":false,"replies":[{"id":"17520","content":"这个是有online DDL机制的，你可以看一下第13篇","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544546130,"ip_address":"","comment_id":48820,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1544542992","product_id":100020801,"comment_content":"那如果给一个有几百上千万行的大表加字段要怎么操作呢？加字段这个操作会获得写锁，那不是所有的增删改查都要等着这个字段加成功才行?","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432370,"discussion_content":"这个是有online DDL机制的，你可以看一下第13篇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544546130,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138406,"discussion_content":"可以ghost或者8.0上的快速加字段。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579240274,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48459,"user_name":"Mac Kwan","can_delete":false,"product_type":"c1","uid":1001958,"ip_address":"","ucode":"FC80EBC9CD37A8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/e6/4f00fe55.jpg","comment_is_top":false,"comment_ctime":1544447877,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544447877","product_id":100020801,"comment_content":"首先备库是通过同步主库binlog的方式进行复制同步的，而且有一定的延时。另外binlog记录的是逻辑操作日志。所以当备库使用single transaction方式开始备份时，会创建一个视图，并且在备份到备库这个小表时会加上一个MDL只读锁，假如恰巧这个时候主库修改小表的binlog同步过来时，这个添加列的操作以及后续操作就被阻塞直到备库的备份事务完成为止","like_count":0},{"had_liked":false,"id":47994,"user_name":"Jerry Tse","can_delete":false,"product_type":"c1","uid":1282929,"ip_address":"","ucode":"5C2FBF3E5220BA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTILJspjqGeYrsicQvAFGxicTVy52vPb3lRx6taNYShict44DCu4k41UtD6N1I4X7Yu2lDoJSjt4vypbQ/132","comment_is_top":false,"comment_ctime":1544286302,"is_pvip":true,"replies":[{"id":"17095","content":"第三点我也看得有点懵😓<br><br><br>要不就简化为： 在（a,b)为主键索引的时候，<br>索引c和(c,a)是一样的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544331313,"ip_address":"","comment_id":47994,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544286302","product_id":100020801,"comment_content":"看到留言中很多同学对上期思考题目答案中c,a的索引和c相同有疑惑。在这里我讲一下自己的理解，希望对大家有所帮助。<br>一、c，a索引是先对c排序，c相等的情况下在对a排序。估计这点大家都理解。<br>二、c是一个二级索引，所以c中会包含主键a。这点也应该理解。<br>三、a是主键前缀，等于已经先排了一次序，c的索引就相当于对c再排一次序。你会发现这和c，a为索引的时候排序顺序相反，这里我们先排的a，然后再排c。在第二次排序是稳定排序的情况下，这两个的结果是一样的。这个需要仔细理解，其实也是稳定排序算法的一种应用场景。<br>四、为了便于大家理解，举一个例子，行中有姓名和年龄两列，我们先按照年龄排序，然后再用稳定排序算法按照姓名排序，最后行的顺序是不是就是和先按照名字排序，名字相等时再按照年龄排序的行顺序相同。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431978,"discussion_content":"第三点我也看得有点懵😓\n\n\n要不就简化为： 在（a,b)为主键索引的时候，\n索引c和(c,a)是一样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544331313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47950,"user_name":"Walter二叉叔","can_delete":false,"product_type":"c1","uid":1018454,"ip_address":"","ucode":"3D053D05B53DCD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8a/56/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1544265051,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1544265051","product_id":100020801,"comment_content":"读写锁之间，写锁之间是互斥的<br><br>这里应该用顿号吧？？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138409,"discussion_content":"读写锁、写写锁。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579240303,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47696,"user_name":"liuq","can_delete":false,"product_type":"c1","uid":1304009,"ip_address":"","ucode":"88437D66C547C4","user_header":"https://static001.geekbang.org/account/avatar/00/13/e5/c9/36fdec8e.jpg","comment_is_top":false,"comment_ctime":1544184204,"is_pvip":false,"replies":[{"id":"16998","content":"多分析，碰到问题穷根究底","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544190610,"ip_address":"","comment_id":47696,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544184204","product_id":100020801,"comment_content":"各位大佬，学习数据库有什么记忆方法吗，以为知道，换一个场景就不知所措了","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431860,"discussion_content":"多分析，碰到问题穷根究底","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544190610,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47582,"user_name":"Bugzella","can_delete":false,"product_type":"c1","uid":1018969,"ip_address":"","ucode":"DA6E5620D682AD","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/m7Ow3WiaSHeE4LBMqsRNVu0zgddEBxBv0OfsJick6icnAOTLSpaJ2ZGPF0rteY8yic3dUZUZmeOu1xPG2G1BSibZNdw/132","comment_is_top":false,"comment_ctime":1544158623,"is_pvip":false,"replies":[{"id":"16958","content":"查询的MDL读锁时间很短的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544159998,"ip_address":"","comment_id":47582,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544158623","product_id":100020801,"comment_content":"继续echo陈关于online ddl的提问，大多数生产库都会有连续不断的写操作，也就是一直都有mdl读锁，那ddl马上就会造成写锁阻塞进而阻塞所有dml操作影响生产库正常读写，那MySQL 号称的online ddl又有什么用呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431816,"discussion_content":"查询的MDL读锁时间很短的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544159998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47167,"user_name":"18329153721","can_delete":false,"product_type":"c1","uid":1323903,"ip_address":"","ucode":"A7BD462CEFC6C8","user_header":"","comment_is_top":false,"comment_ctime":1544066626,"is_pvip":false,"replies":[{"id":"16834","content":"你这个描述有点问题， 更新事务没有commit,<br><br>这时候其他线程DDL是会被堵住的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544071363,"ip_address":"","comment_id":47167,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544066626","product_id":100020801,"comment_content":"老师您好，之前我们生产上出现过这样一个情况，打开一个长事务，这个长事务是做大量的插入操作，但是未commit，如果在这个时候给一个表执行ddl操作，最后发现插入操作都是重复的，就是生成了两份一样的数据，这可能是什么原因呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431685,"discussion_content":"你这个描述有点问题， 更新事务没有commit,\n\n这时候其他线程DDL是会被堵住的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544071363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47015,"user_name":"进阶的码农","can_delete":false,"product_type":"c1","uid":1017821,"ip_address":"","ucode":"D8991282640334","user_header":"https://static001.geekbang.org/account/avatar/00/0f/87/dd/4f53f95d.jpg","comment_is_top":false,"comment_ctime":1544019033,"is_pvip":false,"replies":[{"id":"16776","content":"不会的，gap lock能治","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544019952,"ip_address":"","comment_id":47015,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544019033","product_id":100020801,"comment_content":"说到视图你肯定想起来了，我们在前面讲事务隔离的时候，其实是有一个方法能够拿到一致性视图的，对吧？<br>可重复读隔离级别不能拿到一致性视图，因为可重复读会出现幻读的现象，会在事务里看到新插入的数据","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431638,"discussion_content":"不会的，gap lock能治","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544019952,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46917,"user_name":"Sinyo","can_delete":false,"product_type":"c1","uid":1307297,"ip_address":"","ucode":"57B243E7AB86A5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJAibnPX9jW8kqLcIfibjic8GbkQkEUYyFKJkc39hZhibVlNrqwTjdLozkqibI2IwACd5YzofYickNxFnZg/132","comment_is_top":false,"comment_ctime":1544001778,"is_pvip":false,"replies":[{"id":"16783","content":"不是commiit，是rollback. 当然，kill就是一种主动放弃的做法，是实现rollback的一种操作","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544020349,"ip_address":"","comment_id":46917,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544001778","product_id":100020801,"comment_content":"老师，为什么我在谷歌还有其他网页上搜索死锁的处理方法只有kill进程呢？您提到的commit也能解决死锁适用于什么场景呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431598,"discussion_content":"不是commiit，是rollback. 当然，kill就是一种主动放弃的做法，是实现rollback的一种操作","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544020349,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46240,"user_name":"时光的鱼","can_delete":false,"product_type":"c1","uid":1197542,"ip_address":"","ucode":"99335F4BFB32EE","user_header":"https://static001.geekbang.org/account/avatar/00/12/45/e6/69386778.jpg","comment_is_top":false,"comment_ctime":1543888063,"is_pvip":false,"replies":[{"id":"16544","content":"是的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543890055,"ip_address":"","comment_id":46240,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543888063","product_id":100020801,"comment_content":"Session D为什么会被Session C堵住啊？是因为执行顺序问题吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431393,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543890055,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46195,"user_name":"TiTi","can_delete":false,"product_type":"c1","uid":1127343,"ip_address":"","ucode":"58F19596A1EF4C","user_header":"https://static001.geekbang.org/account/avatar/00/11/33/af/dda311cf.jpg","comment_is_top":false,"comment_ctime":1543883023,"is_pvip":false,"replies":[{"id":"16555","content":"5.6是先来先得的，5.7换了策略。<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543891958,"ip_address":"","comment_id":46195,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1543883023","product_id":100020801,"comment_content":"有点不理解为什么还没有拿到MDL写锁的session C为什么会阻塞后续想获取MDL读锁的session D? 这样岂不是吞吐量大打折扣？MDL锁的设计有没有考虑到读者&#47;写者优先的问题呢? 还有一个不明白的地方是，既然session C阻塞了session D，那么等Session A&#47;B释放MDL读锁的时候，Session C应该先解除阻塞才对啊，为什么反而是Session D首先得到了执行呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431368,"discussion_content":"5.6是先来先得的，5.7换了策略。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543891958,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1060772,"avatar":"https://static001.geekbang.org/account/avatar/00/10/2f/a4/ff8f912b.jpg","nickname":"海豚","note":"","ucode":"4AC3B788551F00","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289931,"discussion_content":"5.7的策略是？？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594274290,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45766,"user_name":"Yanpei","can_delete":false,"product_type":"c1","uid":1322640,"ip_address":"","ucode":"41CBDC03763380","user_header":"https://static001.geekbang.org/account/avatar/00/14/2e/90/a73a0f74.jpg","comment_is_top":false,"comment_ctime":1543790558,"is_pvip":false,"replies":[{"id":"16346","content":"这里说的是MDL锁，不是行锁。<br><br>然后读写数据你这样描述也有误会，看06 和08 两篇哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543799919,"ip_address":"","comment_id":45766,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543790558","product_id":100020801,"comment_content":"&quot;当对一个表做增删改查操作的时候，加 MDL 读锁&quot;<br><br>增(insert) 删(delete) 改(update) 的时候难道不应该加写锁吗？如果是加读锁的话，一个进程查一个进程改(update）怎么办？<br><br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431201,"discussion_content":"这里说的是MDL锁，不是行锁。\n\n然后读写数据你这样描述也有误会，看06 和08 两篇哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543799919,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45633,"user_name":"风雪","can_delete":false,"product_type":"c1","uid":1316279,"ip_address":"","ucode":"ADCA51048AF096","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ1bf1wUGI2KnSBpUs4EyyxoRvfHY9J3T8R7g32cfnosl3M4UIYagYvANpSpGRNT6YCNWK2buh2Tg/132","comment_is_top":false,"comment_ctime":1543728824,"is_pvip":false,"replies":[{"id":"16278","content":"如果你有一个索引是（a,c), 这个查询语句可以避免排序的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543774792,"ip_address":"","comment_id":45633,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543728824","product_id":100020801,"comment_content":"老师如果用的是where A 再 group by c 那我主键是不是可以用a, c还是单独c","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431132,"discussion_content":"如果你有一个索引是（a,c), 这个查询语句可以避免排序的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543774792,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45522,"user_name":"linqw","can_delete":false,"product_type":"c1","uid":1134138,"ip_address":"","ucode":"09DCFE98C54DD8","user_header":"https://static001.geekbang.org/account/avatar/00/11/4e/3a/86196508.jpg","comment_is_top":false,"comment_ctime":1543659072,"is_pvip":false,"replies":[{"id":"16208","content":"（这个是5.6的逻辑哈）<br><br><br>你这段描述对的呀，哪里不理解","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543666133,"ip_address":"","comment_id":45522,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543659072","product_id":100020801,"comment_content":"在一开始的获取MDL锁的阶段，session A（MDL读锁，正常执行）-&gt; session B (MDL读锁，正常执行) -&gt; session C (MDL写锁，被block) -&gt; session D (MDL读锁，被MDL写锁 block) 。是不是说加MDL锁是看时间先后顺序的，一旦出现过需要获取MDL写锁（即使被block），后续再需要获取MDL读锁，则发现之前已经有获取MDL写锁（即使被block），需要获取读锁的session都会被block。感觉上像进入一个锁的”队列“，根据时间先后顺序，老师,这个不太理解","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431076,"discussion_content":"（这个是5.6的逻辑哈）\n\n\n你这段描述对的呀，哪里不理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543666133,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45500,"user_name":"蚂蚁内推+v","can_delete":false,"product_type":"c1","uid":1050508,"ip_address":"","ucode":"24B10AEE54B3FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/07/8c/0d886dcc.jpg","comment_is_top":false,"comment_ctime":1543655821,"is_pvip":false,"replies":[{"id":"16209","content":"有c的话，c=N order by a就需要排序","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543666265,"ip_address":"","comment_id":45500,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543655821","product_id":100020801,"comment_content":"已经有cb索引了，为什么还要保留c呢？前缀索引不是可以复用吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431068,"discussion_content":"有c的话，c=N order by a就需要排序","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543666265,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45481,"user_name":"蚂蚁内推+v","can_delete":false,"product_type":"c1","uid":1050508,"ip_address":"","ucode":"24B10AEE54B3FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/07/8c/0d886dcc.jpg","comment_is_top":false,"comment_ctime":1543652207,"is_pvip":false,"replies":[{"id":"16191","content":"不是，是保留 c 和 cb","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543655418,"ip_address":"","comment_id":45481,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543652207","product_id":100020801,"comment_content":"老师，上期问题是c,ca,cb三个索引需要保留哪个？答案是只保留cb，而把c和ca都去掉吧？cb里面已经又c的索引了。这期答案没看太明白，是这个意思吧？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431058,"discussion_content":"不是，是保留 c 和 cb","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543655418,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45469,"user_name":"汝林外史","can_delete":false,"product_type":"c1","uid":1188906,"ip_address":"","ucode":"3C66C0F0537A99","user_header":"https://static001.geekbang.org/account/avatar/00/12/24/2a/33441e2b.jpg","comment_is_top":false,"comment_ctime":1543649877,"is_pvip":false,"replies":[{"id":"16195","content":"是的，再begin那就是另外一个事务啦","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543655553,"ip_address":"","comment_id":45469,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543649877","product_id":100020801,"comment_content":"@Tony Du  不用每一个select 前都加begin吧  只在第一个前加就好了，不知道对不对","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431051,"discussion_content":"是的，再begin那就是另外一个事务啦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543655553,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45396,"user_name":"WL","can_delete":false,"product_type":"c1","uid":1173771,"ip_address":"","ucode":"6277DCD776B87E","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/0b/1171ac71.jpg","comment_is_top":false,"comment_ctime":1543631585,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543631585","product_id":100020801,"comment_content":"思考题: 因为使用参数–single-transaction 的时候，备份数据的时候会启动一个事务, 所以在这个事务执行过程中的DDL应该不会影响到该事物, 所以备份出来的表里面是没有新增加的字段的.<br>","like_count":0},{"had_liked":false,"id":45303,"user_name":"Aiapple","can_delete":false,"product_type":"c1","uid":1302017,"ip_address":"","ucode":"74273A4315488C","user_header":"https://static001.geekbang.org/account/avatar/00/13/de/01/dc8ee553.jpg","comment_is_top":false,"comment_ctime":1543581555,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543581555","product_id":100020801,"comment_content":"@Nick 提的问题 同样不解，请老师解惑","like_count":0},{"had_liked":false,"id":45149,"user_name":"七七","can_delete":false,"product_type":"c1","uid":1301937,"ip_address":"","ucode":"277BACE2330C54","user_header":"https://static001.geekbang.org/account/avatar/00/13/dd/b1/7323beb9.jpg","comment_is_top":false,"comment_ctime":1543550484,"is_pvip":true,"replies":[{"id":"16149","content":"不是，你贴的这个错误就是修改的时候违反了唯一键约束…","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543630004,"ip_address":"","comment_id":45149,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543550484","product_id":100020801,"comment_content":"alter table经常会遇到 ERROR 1062 (23000): Duplicate entry &#39;30747848-2005517&#39; for key &#39;uk_tid_pid&#39; 这类错误。是因为第四步表升级写锁时刻有MDL读锁存在，造成写锁升级失败引起的吗？能怎么避免呢，谢老师解惑<br><br>Online DDL的过程：<br>1. 拿MDL写锁<br>2. 降级成MDL读锁<br>3. 真正做DDL<br>4. 升级成MDL写锁<br>5. 释放MDL锁","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430939,"discussion_content":"不是，你贴的这个错误就是修改的时候违反了唯一键约束…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543630004,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44806,"user_name":"还一棵树","can_delete":false,"product_type":"c1","uid":1317709,"ip_address":"","ucode":"C187F2A141D60E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eop9WylZJicLQxlvXukXUgPp39zJHyyReK5s1C9VhA6rric7GiarbfQMuWhdCCDdxdfL610Hc4cNkn9Q/132","comment_is_top":false,"comment_ctime":1543495398,"is_pvip":false,"replies":[{"id":"15980","content":"是… 我估计你会先碰到权限问题","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543504664,"ip_address":"","comment_id":44806,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543495398","product_id":100020801,"comment_content":"大表一般反而大家会注意，大表在线更新现在用比较多的是gh- ost<br>----大神，貌似阿里云的rds 用gh-ost  不太好用","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430838,"discussion_content":"是… 我估计你会先碰到权限问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543504664,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44595,"user_name":"阿豆Dou","can_delete":false,"product_type":"c1","uid":1303898,"ip_address":"","ucode":"5D933075D93179","user_header":"https://static001.geekbang.org/account/avatar/00/13/e5/5a/b650ed8c.jpg","comment_is_top":false,"comment_ctime":1543461133,"is_pvip":false,"replies":[{"id":"15899","content":"Server","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543464485,"ip_address":"","comment_id":44595,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543461133","product_id":100020801,"comment_content":"本文的全局锁，表锁，都是mysql  Server层的是吗，不是隶属于某种类型的存储引擎特有的","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430802,"discussion_content":"Server","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543464485,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44371,"user_name":"fgdgtz","can_delete":false,"product_type":"c1","uid":1240401,"ip_address":"","ucode":"486CC4ACCC015C","user_header":"","comment_is_top":false,"comment_ctime":1543415899,"is_pvip":false,"replies":[{"id":"15874","content":"既然是“我的订单”，当你选择status=2的时候，SQL语句就是 user_id=&lt;你的id&gt; and status=2了吧？可以用上这个索引呀","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543428128,"ip_address":"","comment_id":44371,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543415899","product_id":100020801,"comment_content":"老师，我看了你新的一期的课，我对索引的选择上仍有一些困惑，不确定自己做的是否正确，以下是我上一期就有咨询您的一个问题，希望老师能解惑<br><br>----------------------------------------------------------------------------------------------------<br>老师你好，我请问个有关索引的问题，我有个订单表：<br><br>CREATE TABLE `order` (<br>   `id` int(11) NOT NULL,<br>    `user_id`  int(11) DEFAULT 0,<br>    `status` int(11) DEFAULT 0,<br>    `order_time` int(11) DEFAULT 0,<br>     PRIMARY KEY (`id`)<br> ）ENGINE=InnoDB<br><br>order字段有 user id(用户|D)， status(订单状态,1：待付款,2：付款,4：失效,6：确认收货,7：结<br>算)， order_time(下单时间)，业务需求上有根据&quot;全部&quot;，&quot;付款&quot;，&quot;结算&quot;，&quot;失效&quot;这几种状态分<br>页获取用户的订单数据并根据下单时间排序，因为有涉及全部和根据状态查询，我是否应建<br>两个类似这样的索引：<br><br>(user_id,status,order_time)<br>(user_id,order_time)<br><br>(user_id,status,order_time)用于根据具体的订单状态分页查询并排序<br>(user_id,order_time)用于查询全部数据并排序<br><br>对此我是很困惑的，建两个索引对更新数据与存储空间都有影响，而且两个索引也十分类似，但如果只保留(user_ id,create_time)，那根据某状态查询时扫描的行可能过多<br><br>如果保留(user_id,status,create_time)，为了索<br>引全字段使用到那查询全部时就得麻烦的 union all<br>拼每个状态,比如分页第一页:<br><br>select from <br>order tt join (<br>   select t.id from (<br>       (select<br>id id,order_time from order where user_id=1 and status=1 order by order_time desc LIMIT 0, 10)<br>       union all <br>       (select<br>id id,order_time from order where user_id=1 and status=4 order by order_time desc LIMIT 0, 10)<br>       union all<br>       (select<br>id id,order_time from order where user_id=1<br> and status=6 order by order_time desc LIMIT 0, 10 )<br>    ) as t order by <br>t.order_time desc, t. id desc LIMIT 0, 10<br>)<br> ts on ts. id=tt. id order by order_time desc<br><br>望老师能解答<br><br>|作者回复：<br><br>是否可以留(user_ id,create_time,status) 这个索引？<br>                                                                                                                          回复于 2018.11.26<br>我的回复：<br>  感谢老师的回复，老师您的这个索引虽避免了回表查status的值，但我有疑问如果查某个status下的数据可能会扫描过多的行吧？比如 status=2,得一行一行比较status是否为2吧？手淘“我的订单”里有“全部”，“待付款”,&quot;待发货&quot;,&quot;待收货&quot;,在淘宝这种体量的数据就单从mysql这层来考虑，是否会根据不同的订单状态分表还是有什么优化的手段呢？<br>                                                                                                                           回复于 2018.11.28","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430744,"discussion_content":"既然是“我的订单”，当你选择status=2的时候，SQL语句就是 user_id=&amp;lt;你的id&amp;gt; and status=2了吧？可以用上这个索引呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543428128,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44218,"user_name":"james","can_delete":false,"product_type":"c1","uid":1049208,"ip_address":"","ucode":"5701899403917C","user_header":"https://static001.geekbang.org/account/avatar/00/10/02/78/23c56bce.jpg","comment_is_top":false,"comment_ctime":1543386971,"is_pvip":false,"replies":[{"id":"15986","content":"Select t2也是看不到这个新插入的数据的<br><br>“担心内存不足，认为一致性视图肯定不是全库的”这个是一个常见的误解。<br><br>你看一下08篇，说的就是这个原理😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543514793,"ip_address":"","comment_id":44218,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543386971","product_id":100020801,"comment_content":"您好, 可能有点长, mysqldump -single-transaction 我搜了下是使用 start transaction 来实现的, 有个场景拿不到一致性视图<br><br>----阶段1: <br>session1: <br>start transaction;<br>select t1; &#47;&#47;查询 t1 得到 1 条数据<br><br>session2: <br>insert t1; &#47;&#47; 插入 t1 数据<br><br>此时 session1 无论怎么 select t1 , 都看不到 session2 插入的记录, 这里没问题!!!!<br><br>----阶段2: <br>session2: <br>insert t2; &#47;&#47; 注意这里是 t2 表<br><br>session1: <br>还刚才的事务执行: <br>select t2; &#47;&#47; 这里能查询到 session2 插入的新记录<br><br>ps: 如果在阶段1中 session1 查询了 t2 , 那么视图是一致的, 不会看到阶段2 中 t2 的最新数据, 所以我推断,这个一致性视图肯定不是全库某个时间点的, 因为内存会爆, 而只是你select过的表才有一致性视图<br><br><br>因此, 我认为 mysqldump -single-transaction 备份出来的 余额表 和 购买课程表 有可能数据是不一致的<br>例如 mysqldump 按照如下顺序执行:<br>1 start transaction;<br>2 select 余额表<br>--- 这时, 有个人够买了课程, 余额-100, 课程+1<br>3 select 购买课程表 (包含课程+1的记录)<br>备份结束<br><br>最后, 备份的结果就是, 余额没减少, 赚了!!!!!!!","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430683,"discussion_content":"Select t2也是看不到这个新插入的数据的\n\n“担心内存不足，认为一致性视图肯定不是全库的”这个是一个常见的误解。\n\n你看一下08篇，说的就是这个原理😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543514793,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44179,"user_name":"Alpha","can_delete":false,"product_type":"c1","uid":1001861,"ip_address":"","ucode":"60CA15A25EC796","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/85/3f161d95.jpg","comment_is_top":false,"comment_ctime":1543378808,"is_pvip":false,"replies":[{"id":"15763","content":"大表一般反而大家会注意，大表在线更新现在用比较多的是gh- ost","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543402829,"ip_address":"","comment_id":44179,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543378808","product_id":100020801,"comment_content":"老师，文中讲到了小表加字段需要注意的地方，那么大表加字段呢？如果大表的访问量和新增记录很频繁，是否无法做到灵活加字段呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430666,"discussion_content":"大表一般反而大家会注意，大表在线更新现在用比较多的是gh- ost","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543402829,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44140,"user_name":"o9","can_delete":false,"product_type":"c1","uid":1101332,"ip_address":"","ucode":"E373E82A39BBFE","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/14/b488f241.jpg","comment_is_top":false,"comment_ctime":1543373004,"is_pvip":false,"replies":[{"id":"15739","content":"DDL的过程最后一步得“成功地更新表结构”","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543380128,"ip_address":"","comment_id":44140,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1543373004","product_id":100020801,"comment_content":"置顶留言 您的回复第四步 升级成 MDL写锁 ，为什么要再升级成写锁呢，读锁没释放也可以保证无法再次进行表结构修改啊","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430647,"discussion_content":"DDL的过程最后一步得“成功地更新表结构”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543380128,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44111,"user_name":"M哥","can_delete":false,"product_type":"c1","uid":1247251,"ip_address":"","ucode":"1E3CD88B1EA6D5","user_header":"https://static001.geekbang.org/account/avatar/00/13/08/13/68579217.jpg","comment_is_top":false,"comment_ctime":1543369657,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543369657","product_id":100020801,"comment_content":"MySQL：5.7.22   MGR(HOST1)<br>session a:select * from test;<br>session b:select * from test;<br>session c:alter table test add test_c int;<br>session d:select * from test;<br><br><br>time 1:  begin a,b<br>time 2:  session a:select * from test;   session b:select * from test;(不commit，返回结果)<br>time 3:  alter table test add test_c int;  （阻塞） <br>TIME 4:  begin session d:select * from test;（阻塞）<br>TIME 5:  commit a<br>TIME 6:  commit b<br>time 7:  现象，当a,b提交以后，session d很快返回结果，session C还在等待获取MDL写锁<br>time 8:  commit session d,  c返回成功，加字段执行成功<br><br>这样来看，虽然d事物时间比c事物要晚，但是却优先活得了MDL读锁，在获取锁的时候是按照开销还是怎么个规则。","like_count":0},{"had_liked":false,"id":44093,"user_name":"o9","can_delete":false,"product_type":"c1","uid":1101332,"ip_address":"","ucode":"E373E82A39BBFE","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/14/b488f241.jpg","comment_is_top":false,"comment_ctime":1543368717,"is_pvip":false,"replies":[{"id":"15709","content":"👍🏿对的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543369917,"ip_address":"","comment_id":44093,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1543368717","product_id":100020801,"comment_content":"看了置顶评论 第三步做ddl操作的时候 是可以对表进行增删改查操作的，是因为在执行第三步DDL操作时此时的锁 是 读锁，第三步操作完毕才又升级成的写锁，所以 是可以在ddl操作执行期间进行增删改查操作的","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430626,"discussion_content":"👍🏿对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543369917,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43965,"user_name":"杜嘉嘉","can_delete":false,"product_type":"c1","uid":1306430,"ip_address":"","ucode":"C23DE27E7886BD","user_header":"https://static001.geekbang.org/account/avatar/00/13/ef/3e/9c3a8abc.jpg","comment_is_top":false,"comment_ctime":1543341868,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543341868","product_id":100020801,"comment_content":"逻辑备份会产生ftwrl锁，物理备份也一样吧？例如innodbackup。","like_count":0},{"had_liked":false,"id":43952,"user_name":"oscarwin","can_delete":false,"product_type":"c1","uid":1131956,"ip_address":"","ucode":"492430BA342593","user_header":"https://static001.geekbang.org/account/avatar/00/11/45/b4/ec66d499.jpg","comment_is_top":false,"comment_ctime":1543334449,"is_pvip":false,"replies":[{"id":"15685","content":"没发现主要是因为你们没有长事务堵住DDL吧😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543335702,"ip_address":"","comment_id":43952,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543334449","product_id":100020801,"comment_content":"如果表的数据量很多，更新表结构的时候，会导致长时间占用DML写锁，最终导致线上的服务加DML读锁加不上，而使得服务停摆。但是，在实际线上项目修改表结构时，并没有发现服务不可用。这个是如一楼同学所说的online更新机制吗？如果是online，为什么要先加写锁，再降级成读锁，这不是多此一举吗？望老师解惑","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430565,"discussion_content":"没发现主要是因为你们没有长事务堵住DDL吧😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543335702,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43951,"user_name":"Sinyo","can_delete":false,"product_type":"c1","uid":1307297,"ip_address":"","ucode":"57B243E7AB86A5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJAibnPX9jW8kqLcIfibjic8GbkQkEUYyFKJkc39hZhibVlNrqwTjdLozkqibI2IwACd5YzofYickNxFnZg/132","comment_is_top":false,"comment_ctime":1543334212,"is_pvip":false,"replies":[{"id":"15686","content":"Commit 或kill都可以","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543335749,"ip_address":"","comment_id":43951,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543334212","product_id":100020801,"comment_content":"加字段的例子，如果把session A commit，后面的流程就可以正常执行了。<br>老师，这里同一张表读写同时锁住，不会形成死锁，然后需要手工kill进程么？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430564,"discussion_content":"Commit 或kill都可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543335749,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43949,"user_name":"Sinyo","can_delete":false,"product_type":"c1","uid":1307297,"ip_address":"","ucode":"57B243E7AB86A5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJAibnPX9jW8kqLcIfibjic8GbkQkEUYyFKJkc39hZhibVlNrqwTjdLozkqibI2IwACd5YzofYickNxFnZg/132","comment_is_top":false,"comment_ctime":1543332948,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543332948","product_id":100020801,"comment_content":"备份库在备份的小表不受影响，备份库的小表新增了字段。","like_count":0},{"had_liked":false,"id":43942,"user_name":"james","can_delete":false,"product_type":"c1","uid":1049208,"ip_address":"","ucode":"5701899403917C","user_header":"https://static001.geekbang.org/account/avatar/00/10/02/78/23c56bce.jpg","comment_is_top":false,"comment_ctime":1543331047,"is_pvip":false,"replies":[{"id":"15687","content":"只能找低峰期做了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543335793,"ip_address":"","comment_id":43942,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543331047","product_id":100020801,"comment_content":"小表加字段的解决方法还是没说啊? nowait&#47;wait n mysql又不支持, 咋办呢? ","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430561,"discussion_content":"只能找低峰期做了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543335793,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43881,"user_name":"落叶飞逝的恋","can_delete":false,"product_type":"c1","uid":1046429,"ip_address":"","ucode":"F9A95DB28BCF1E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/9d/be04b331.jpg","comment_is_top":false,"comment_ctime":1543317090,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543317090","product_id":100020801,"comment_content":"课后思考：<br>给小表进行DDL的时候，会使用MDL写锁。而备份不涉及变更表结构，所以会分配MDL读锁，而读锁与写锁不冲突，所以从备库上能看到变更的表结构。","like_count":0},{"had_liked":false,"id":43830,"user_name":"一梦如是","can_delete":false,"product_type":"c1","uid":1305308,"ip_address":"","ucode":"9CCB1D0E547C83","user_header":"https://static001.geekbang.org/account/avatar/00/13/ea/dc/9a970e98.jpg","comment_is_top":false,"comment_ctime":1543305534,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543305534","product_id":100020801,"comment_content":"老师 文章说的元数据锁信息存放在内存中的什么位置，因为这个属于server层，我觉得应该不是innodb buffer pool里面","like_count":0},{"had_liked":false,"id":43829,"user_name":"晨思暮语","can_delete":false,"product_type":"c1","uid":1304974,"ip_address":"","ucode":"F21D2FDCDD6B43","user_header":"https://static001.geekbang.org/account/avatar/00/13/e9/8e/6dc15a91.jpg","comment_is_top":false,"comment_ctime":1543305310,"is_pvip":false,"replies":[{"id":"15752","content":"主键ID只存一个哈，不会存多份的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543401916,"ip_address":"","comment_id":43829,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543305310","product_id":100020801,"comment_content":"丁老师好，咨询个上一节的问题！在图1，InnoDB的索引组织表中，R1～R5中，是否已经包括主键值，如果包括，按照图中所示：叶子节点中就包括两个主键，不知道这样理解对吧，谢谢！","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430515,"discussion_content":"主键ID只存一个哈，不会存多份的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543401916,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43816,"user_name":"Ryoma","can_delete":false,"product_type":"c1","uid":1130590,"ip_address":"","ucode":"7F692369239692","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/5e/b8fada94.jpg","comment_is_top":false,"comment_ctime":1543302453,"is_pvip":true,"discussion_count":0,"race_medal":2,"score":"1543302453","product_id":100020801,"comment_content":"请问有SQL审计工具推荐么","like_count":0},{"had_liked":false,"id":43795,"user_name":"Ashly","can_delete":false,"product_type":"c1","uid":1308677,"ip_address":"","ucode":"E3EF1665EDDA00","user_header":"https://static001.geekbang.org/account/avatar/00/13/f8/05/bf3fa2a9.jpg","comment_is_top":false,"comment_ctime":1543295622,"is_pvip":false,"replies":[{"id":"15633","content":"不是，行锁是针对数据行的锁呀","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543297272,"ip_address":"","comment_id":43795,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543295622","product_id":100020801,"comment_content":"老师我想问下，表锁里的MDL就是行锁是吗","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430500,"discussion_content":"不是，行锁是针对数据行的锁呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543297272,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43774,"user_name":"o9","can_delete":false,"product_type":"c1","uid":1101332,"ip_address":"","ucode":"E373E82A39BBFE","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/14/b488f241.jpg","comment_is_top":false,"comment_ctime":1543291526,"is_pvip":false,"replies":[{"id":"15636","content":"看置顶评论","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543297531,"ip_address":"","comment_id":43774,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1543291526","product_id":100020801,"comment_content":"有个疑问，给一张表加字段，那么 此时获取到了MDL写锁，这就意味着在加字段的过程中 这张表的所有操作都是会被阻塞的，线上业务不就出问题了嘛。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430492,"discussion_content":"看置顶评论","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543297531,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43768,"user_name":"与夏一样狂热","can_delete":false,"product_type":"c1","uid":1314878,"ip_address":"","ucode":"A12BAA8220D8E4","user_header":"","comment_is_top":false,"comment_ctime":1543290731,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1543290731","product_id":100020801,"comment_content":"老师，有个问题，在修改表结构的时候，如果是以root用户在终端执行alter操作，会不会优先拿到dml写锁呢？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138413,"discussion_content":"一切皆有可能。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579240512,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43730,"user_name":"权恒星","can_delete":false,"product_type":"c1","uid":1090619,"ip_address":"","ucode":"2700E28092020D","user_header":"https://static001.geekbang.org/account/avatar/00/10/a4/3b/a29c8eec.jpg","comment_is_top":false,"comment_ctime":1543284888,"is_pvip":false,"replies":[{"id":"15602","content":"这个问题我放在答疑文章中说吧","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543285601,"ip_address":"","comment_id":43730,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543284888","product_id":100020801,"comment_content":"老师好，大概什么时候能讲一下分表方面的知识呢？大概在多少数量级需要水平分表？我们现在有10亿的数据量，分成10个表，是否合适呢？能否指教一二？谢谢！","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430474,"discussion_content":"这个问题我放在答疑文章中说吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543285601,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43676,"user_name":"neil","can_delete":false,"product_type":"c1","uid":1114569,"ip_address":"","ucode":"C14BE89908BEAD","user_header":"https://static001.geekbang.org/account/avatar/00/11/01/c9/59c385a8.jpg","comment_is_top":false,"comment_ctime":1543279995,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543279995","product_id":100020801,"comment_content":"课程中说到可重复读时-single-transaction可以不全局锁表而且所有导出数据是一致的。那么提交读模式是否也是完全一样的那？这里没有讲得很清楚。之前做dump时没区分过rr和rc模式是否不同。","like_count":0},{"had_liked":false,"id":43657,"user_name":"明明有钱","can_delete":false,"product_type":"c1","uid":1311070,"ip_address":"","ucode":"B8324B40101EA8","user_header":"https://static001.geekbang.org/account/avatar/00/14/01/5e/6510b149.jpg","comment_is_top":false,"comment_ctime":1543278265,"is_pvip":false,"replies":[{"id":"15620","content":"没看明白你的问题…","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543288045,"ip_address":"","comment_id":43657,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543278265","product_id":100020801,"comment_content":"MySQL 提供了一个加全局读锁的方法，命令是 Flush tables with read lock (FTWRL)。<br>不加锁备份会有问题   加锁时不会遇见先写已购后扣钱的问题么？  这个业务还是靠事务来保证可以么？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430448,"discussion_content":"没看明白你的问题…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543288045,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43600,"user_name":"Jason","can_delete":false,"product_type":"c1","uid":1308126,"ip_address":"","ucode":"7FFD6DFCE6EB36","user_header":"https://static001.geekbang.org/account/avatar/00/13/f5/de/c33e531e.jpg","comment_is_top":false,"comment_ctime":1543243777,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543243777","product_id":100020801,"comment_content":"在异常处理机制上有差异。如果执行 FTWRL 命令之后由于客户端发生异常断开，那么 MySQL 会自动释放这个全局锁，整个库回到可以正常更新的状态。而将整个库设置为 readonly 之后，如果客户端发生异常，则数据库就会一直保持 readonly 状态，这样会导致整个库长时间处于不可写状态，风险较高。<br>这个有没有场景可以理解下？<br>上周思考题，前面都看懂了，但是ca可以去除的解决没看懂，能否解释下？<br>MySQL没有页锁吗？","like_count":0},{"had_liked":false,"id":43569,"user_name":"饼子","can_delete":false,"product_type":"c1","uid":1085953,"ip_address":"","ucode":"981A44836A5216","user_header":"https://static001.geekbang.org/account/avatar/00/10/92/01/c723d180.jpg","comment_is_top":false,"comment_ctime":1543241092,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1543241092","product_id":100020801,"comment_content":"思考，如果后面添加了行锁，那么表锁还会生效吗？","like_count":0,"discussions":[{"author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":10231,"discussion_content":"表锁是肯定有的。当然这个表锁说的是MDL类型的。只要你不ddl，那么都是读锁，不互斥，如果多线程操作的都是一行数据，这个时候行锁就有用了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568277880,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43565,"user_name":"XD","can_delete":false,"product_type":"c1","uid":1079293,"ip_address":"","ucode":"DC9DCFB3841A4E","user_header":"https://static001.geekbang.org/account/avatar/00/10/77/fd/c6619535.jpg","comment_is_top":false,"comment_ctime":1543240941,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543240941","product_id":100020801,"comment_content":"思考题：从库的io线程还是会收到日志并追加到从库的relay_log，等这次备份完成之后再执行这个改动。","like_count":0},{"had_liked":false,"id":43557,"user_name":"朱小豪","can_delete":false,"product_type":"c1","uid":1311234,"ip_address":"","ucode":"9177EF1DDFF346","user_header":"https://static001.geekbang.org/account/avatar/00/14/02/02/1080b30c.jpg","comment_is_top":false,"comment_ctime":1543239908,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543239908","product_id":100020801,"comment_content":"同时，线程 A 在执行 unlock tables 之前，也只能执行读 t1、读写 t2 的操作。连写 t1 都不允许，自然也不能访问其他表<br>这段话是对的吗？线程A自己锁的应该能操作表才对吧？","like_count":0},{"had_liked":false,"id":43552,"user_name":"某、人","can_delete":false,"product_type":"c1","uid":1308784,"ip_address":"","ucode":"ADB42AA12A11C1","user_header":"https://static001.geekbang.org/account/avatar/00/13/f8/70/f3a33a14.jpg","comment_is_top":false,"comment_ctime":1543239554,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543239554","product_id":100020801,"comment_content":"这道题有点意思啊。<br>我刚开始以为就两种情况<br>1.mysqldump正在或者已经备份t1表的数据,此时执行语句alter,那么MDL X锁会被mysqldump开始申请的MDL S锁阻塞,导致之后从库所有操作阻塞<br>2.mysqldump还未备份到t1表,但是alter语句已经执行。那么到备份至t1表时,会报错Table definition has changed(由于重建了表,导致表定义已经发生改变,<br>如果DDL是add index那么就不会报错,因为没有重建表,所以这里也能区分出哪些DDL操作会rebuild哪些不用rebuild table)<br>但是经过测试,是三种情况。mysqldump虽然事务期间一直未提交,但是用了SAVEPOINT, ROLLBACK TO SAVEPOINT,来释放表上MDL S锁。<br>导致在一个事务期间已经备份完的表不会阻塞后续的alter操作 <br>以前没仔细看,这下又get到了一个知识点,再次感谢老师。","like_count":0},{"had_liked":false,"id":43545,"user_name":"余向华","can_delete":false,"product_type":"c1","uid":1119778,"ip_address":"","ucode":"263773616D2C83","user_header":"https://static001.geekbang.org/account/avatar/00/11/16/22/2205cf0a.jpg","comment_is_top":false,"comment_ctime":1543238819,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543238819","product_id":100020801,"comment_content":"思考题：<br>如果是在主库进行了 DDL， 那么就会导致主库阻塞，然后在主库上在同步数据的事务就不能及时进行，在从库上看到的现象就是数据可能不变，或者是缺少一个很小的时间段内的数据的没有同步的现象。","like_count":0},{"had_liked":false,"id":43526,"user_name":"蓝魔丶","can_delete":false,"product_type":"c1","uid":1219438,"ip_address":"","ucode":"2AE4359E263558","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/6e/edd2da0c.jpg","comment_is_top":false,"comment_ctime":1543236416,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543236416","product_id":100020801,"comment_content":"老师，sessionC不是没能获取MDL写锁嘛，sessionA的读锁还没有释放，sessionD不应该跟sessionB一样的情况吗？能够完成查询操作？","like_count":0},{"had_liked":false,"id":43496,"user_name":"zyy","can_delete":false,"product_type":"c1","uid":1048515,"ip_address":"","ucode":"1D0B2BD7E93C64","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ff/c3/b90b862c.jpg","comment_is_top":false,"comment_ctime":1543233832,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543233832","product_id":100020801,"comment_content":"课后问题：由DML读写互斥，在备份过程中，主库上做DDL更改了表结构需等待从库备份完成，才会进行修改。主库上新修改的数据结构要等下次备份，备份此表期间主库会进行等待，备份节点要选择深夜业务量少的情况下，避免对此表的长事务和频繁重复请求。针对后者开发人员如何来进行，先放弃保存执行操作，等待互斥结束后再进行执行，这里可以应用等待的定时任务吗？","like_count":0},{"had_liked":false,"id":43489,"user_name":"老北","can_delete":false,"product_type":"c1","uid":1024376,"ip_address":"","ucode":"89B9B6673F1705","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/78/71d37164.jpg","comment_is_top":false,"comment_ctime":1543232982,"is_pvip":false,"replies":[{"id":"15519","content":"从库和备库在这里是一样的哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543234023,"ip_address":"","comment_id":43489,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543232982","product_id":100020801,"comment_content":"先回复下 winner_0715 同学.<br>数据库命名使用驼峰的, 可能是为了写代码更简单.像使用hibernate,mybatis时候,就可以省去很多代码.<br><br>然后 我看思考题出的是备库,很多同学回答的是从库.<br>备库,从库应该是有区别的吧?","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430401,"discussion_content":"从库和备库在这里是一样的哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543234023,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43419,"user_name":"包包up","can_delete":false,"product_type":"c1","uid":1073495,"ip_address":"","ucode":"A6F51A62A8B362","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/57/6f3c81dd.jpg","comment_is_top":false,"comment_ctime":1543224835,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543224835","product_id":100020801,"comment_content":"从库启动–single-transaction应该要获取备份库的所有表MDL的读锁，主库传过来得DDL需要某个表的MDL写锁，导致互斥，这张表在后续的读写请求都会被阻塞直到备份事务结束。又因为MVCC其他的表能被正常的读写。我理解是这样的。","like_count":0},{"had_liked":false,"id":43358,"user_name":"库淘淘","can_delete":false,"product_type":"c1","uid":1310240,"ip_address":"","ucode":"90813B0C46E978","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqibSwKPg7hiapc49qoM4dibhM3fYANPjfltF2ibBZ3dHX2hibjg5EIIcziahrmjO5R2XrcRibvU39TQS7jg/132","comment_is_top":false,"comment_ctime":1543219136,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543219136","product_id":100020801,"comment_content":"我的理解是数据库备份加参数–single-transaction 就类似每个表加了MDL读，可以增删改查 ，需要更改表结构要申请MDL写就会被阻塞，这样就导致主备结构不一样，备份结束恢复同步。","like_count":0},{"had_liked":false,"id":43353,"user_name":"高枕","can_delete":false,"product_type":"c1","uid":1310312,"ip_address":"","ucode":"20F6CF75EC9AA4","user_header":"https://static001.geekbang.org/account/avatar/00/13/fe/68/e0bebd9a.jpg","comment_is_top":false,"comment_ctime":1543218745,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543218745","product_id":100020801,"comment_content":"文中提到：<br>你现在应该知道了，事务中的 MDL 锁，在语句执行开始时申请，但是语句结束后并不会马上释放，而会等到整个事务提交后再释放。<br><br>为什么语句结束后不会马上释放呢？请老师解答一下.<br>另外老师留的问题，应该是不受影响到吧，因为在备份到时候会备份视图","like_count":0},{"had_liked":false,"id":43328,"user_name":"老杨同志","can_delete":false,"product_type":"c1","uid":1246199,"ip_address":"","ucode":"3F334F0CFD3DE6","user_header":"https://static001.geekbang.org/account/avatar/00/13/03/f7/3a493bec.jpg","comment_is_top":false,"comment_ctime":1543215345,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543215345","product_id":100020801,"comment_content":"使用–single-transaction 方法进行逻辑备份，事务开始时就应该获得各个表的元数据锁，主库的ddl语句传到从库时，备件不受影响，但是ddl会被阻塞，直到成功拿到备份完成释放的元数据锁。<br>","like_count":0},{"had_liked":false,"id":43285,"user_name":"刘天若Warner","can_delete":false,"product_type":"c1","uid":1216848,"ip_address":"","ucode":"032639CD670DA3","user_header":"https://static001.geekbang.org/account/avatar/00/12/91/50/e576a068.jpg","comment_is_top":false,"comment_ctime":1543206195,"is_pvip":false,"replies":[{"id":"15485","content":"可以，因为增删改执行都只要求MDL读锁，读锁之间不互斥的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543211322,"ip_address":"","comment_id":43285,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1543206195","product_id":100020801,"comment_content":"在对一个表做增删改查操作的时候，加MDL读锁；当要对表做结构变更操作的时候，加MDL写锁。<br><br>老师，加了MDL读锁之后，还能增删改吗？不大明白<br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430349,"discussion_content":"可以，因为增删改执行都只要求MDL读锁，读锁之间不互斥的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543211322,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1911661,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLDOKcx20Xxmu5j8WxiafoYvo3bIAFDg8OeicRic1icD597QuMC9O8FyV2Al9RxNfVZXK0gkGUx6M3CVQ/132","nickname":"多年以后","note":"","ucode":"D70E7A1ABE0F39","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383833,"discussion_content":"那2个线程都操作同一条数据，一个修改一个查询，会怎么样？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626250551,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43278,"user_name":"HwangZHen","can_delete":false,"product_type":"c1","uid":1215449,"ip_address":"","ucode":"E2BC782AFEF742","user_header":"https://static001.geekbang.org/account/avatar/00/12/8b/d9/c03fbd11.jpg","comment_is_top":false,"comment_ctime":1543203265,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543203265","product_id":100020801,"comment_content":"思考题个人理解：<br>–single-transaction 相当于在从库RR模式下开启一个一致性快照（事务），那么在这个备份事务期间主库复制过来alter语句时会等待MDL锁，表现出来的现象应该是主从延迟。<br>","like_count":0},{"had_liked":false,"id":43275,"user_name":"hhhh","can_delete":false,"product_type":"c1","uid":1256101,"ip_address":"","ucode":"9E87017424B382","user_header":"https://static001.geekbang.org/account/avatar/00/13/2a/a5/625c0a2e.jpg","comment_is_top":false,"comment_ctime":1543203059,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543203059","product_id":100020801,"comment_content":"主库做了DDL，备份库也做了DDL，这时候备份库正在执行–single-transaction数据备份，正读取表中的数据拥有MDL读锁，那么备份库的DDL试图获取MDL写锁不成功会block, 直到数据备份完成后，备份库的DDL才会执行。是这样吗。。感觉有点虚","like_count":0},{"had_liked":false,"id":43261,"user_name":"倪大人","can_delete":false,"product_type":"c1","uid":1193052,"ip_address":"","ucode":"4798D69F3E86FB","user_header":"https://static001.geekbang.org/account/avatar/00/12/34/5c/6b4757a0.jpg","comment_is_top":false,"comment_ctime":1543201397,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543201397","product_id":100020801,"comment_content":"思考题：<br>由于先用–single-transaction做备份，所以备份线程会启动一个事务获取MDL读锁，文中也说了“MDL 会直到事务提交才释放”，所以要一直等到备份完成主库来的DDL才会在从库执行生效，且备份的数据里并不会有新增的这个列。","like_count":0},{"had_liked":false,"id":43220,"user_name":"suhui","can_delete":false,"product_type":"c1","uid":1155326,"ip_address":"","ucode":"53BD826C1164F9","user_header":"https://static001.geekbang.org/account/avatar/00/11/a0/fe/ac5a62f3.jpg","comment_is_top":false,"comment_ctime":1543197355,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543197355","product_id":100020801,"comment_content":"思考题：一致性读是读取read-view的数据。因此新增字段不会出现在从库的备份中。但是从库的表结构已经做了修改。","like_count":0},{"had_liked":false,"id":43186,"user_name":"锅子","can_delete":false,"product_type":"c1","uid":1323048,"ip_address":"","ucode":"4A9143AFB07FF2","user_header":"https://static001.geekbang.org/account/avatar/00/14/30/28/6e019a7a.jpg","comment_is_top":false,"comment_ctime":1543194918,"is_pvip":false,"replies":[{"id":"15448","content":"你就用MySQL 5.7最新版，验证结论如果跟文章不同，在评论发出来我们讨论","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543196143,"ip_address":"","comment_id":43186,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543194918","product_id":100020801,"comment_content":"老师好，整个课程是基于MySQL什么版本啊？我做试验的话用什么版本呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430316,"discussion_content":"你就用MySQL 5.7最新版，验证结论如果跟文章不同，在评论发出来我们讨论","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543196143,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43184,"user_name":"PAN","can_delete":false,"product_type":"c1","uid":1241407,"ip_address":"","ucode":"F0A5610C62AF58","user_header":"https://static001.geekbang.org/account/avatar/00/12/f1/3f/ea64fccb.jpg","comment_is_top":false,"comment_ctime":1543194860,"is_pvip":false,"replies":[{"id":"15457","content":"额，原图不对，图更新了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543196803,"ip_address":"","comment_id":43184,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543194860","product_id":100020801,"comment_content":"图1是不是画错了？？？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430315,"discussion_content":"额，原图不对，图更新了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543196803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43181,"user_name":"DanielAnton","can_delete":false,"product_type":"c1","uid":1308521,"ip_address":"","ucode":"69D49AC70898B0","user_header":"https://static001.geekbang.org/account/avatar/00/13/f7/69/d8dba3de.jpg","comment_is_top":false,"comment_ctime":1543194694,"is_pvip":false,"replies":[{"id":"15456","content":"额，原图不对，图更新了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543196786,"ip_address":"","comment_id":43181,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543194694","product_id":100020801,"comment_content":"不明白，图一 备份状态里 UserA 的账号余额不是已经扣成 101 了吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430314,"discussion_content":"额，原图不对，图更新了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543196786,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43156,"user_name":"Sinyo","can_delete":false,"product_type":"c1","uid":1307297,"ip_address":"","ucode":"57B243E7AB86A5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJAibnPX9jW8kqLcIfibjic8GbkQkEUYyFKJkc39hZhibVlNrqwTjdLozkqibI2IwACd5YzofYickNxFnZg/132","comment_is_top":false,"comment_ctime":1543193311,"is_pvip":false,"replies":[{"id":"15450","content":"备份嘛就是备份数据呀","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543196201,"ip_address":"","comment_id":43156,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543193311","product_id":100020801,"comment_content":"全局锁的典型使用场景是，做全库逻辑备份。也就是把整库每个表都 select 出来存成文本。<br><br>老师，这里没看懂，为什么全局逻辑备份的是表数据呀？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430310,"discussion_content":"备份嘛就是备份数据呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543196201,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43119,"user_name":"江中芦苇","can_delete":false,"product_type":"c1","uid":1068059,"ip_address":"","ucode":"1FB79B0904BFEE","user_header":"https://static001.geekbang.org/account/avatar/00/10/4c/1b/b1953a5e.jpg","comment_is_top":false,"comment_ctime":1543184403,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543184403","product_id":100020801,"comment_content":"沙发","like_count":0},{"had_liked":false,"id":43104,"user_name":"松花皮蛋me","can_delete":false,"product_type":"c1","uid":1000054,"ip_address":"","ucode":"B0846CEEF6B0D1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/42/76/256bbd43.jpg","comment_is_top":false,"comment_ctime":1543163240,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1543163240","product_id":100020801,"comment_content":"索引cb，索引c会不会c字段索引重复了","like_count":0,"discussions":[{"author":{"id":2873900,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/da/2c/cdd92f3f.jpg","nickname":"wáng","note":"","ucode":"9BFEA73AD7680D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558224,"discussion_content":"cba和cab，哪里重复了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648137572,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138419,"discussion_content":"没重复，因为有可能有ca的需求。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579240742,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}